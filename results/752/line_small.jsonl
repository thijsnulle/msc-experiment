{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.17238909006118774, -0.04326331615447998, -0.000554288737475872, -0.015145540237426758, -0.0005197366117499769, -0.040730513632297516, -6.198863957251888e-06, -0.04802620783448219, -0.019499747082591057, -0.005777683109045029], "finish_reason": "stop"}, {"text": " ValueError(\"data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -0.5487797260284424, -0.5160593390464783, -0.003410002216696739, -0.06949394941329956, -0.8551598191261292, -0.007620904594659805, -0.224057137966156, -0.00023731753753963858, -0.0005239067832008004], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5250754952430725, -0.007835722528398037, -0.031535692512989044, -0.004485901445150375, -0.0050082942470908165], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00047910655848681927, -1.2397689715726301e-05, -0.00522094639018178, -0.008109737187623978, -0.09542907774448395, -1.130941390991211, -0.010659660212695599, -0.09492334723472595, -0.006334228441119194, -7.116541382856667e-05, -0.000277123210253194], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.1670401245355606, -2.407998726994265e-05, -9.798523387871683e-05, -0.0022156708873808384, -6.532455881824717e-05, -0.005350673571228981, -0.4147680401802063, -0.005123936105519533, -0.001500672078691423, -0.0008347125840373337], "finish_reason": "stop"}, {"text": " ValueError(f\"target_column should be a column of data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "target", "_", "column", " should", " be", " a", " column", " of", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0005952732171863317, -3.766942609217949e-05, -0.005002007819712162, -0.7903356552124023, -0.021358830854296684, -1.9647367000579834, -0.09448309242725372, -0.0049257357604801655, -0.9121001958847046, -0.007042466197162867, -0.15303300321102142, -0.005212526302784681, -0.3551144599914551, -0.03984197601675987, -0.3388567864894867, -0.8256754279136658, -0.020160874351859093, -0.0009116546134464443], "finish_reason": "stop"}, {"text": " not np.issubdtype(data[target_column].dtype, np.number):", "tokens": [" not", " np", ".", "iss", "ub", "d", "type", "(", "data", "[", "target", "_", "column", "]", ".", "d", "type", ",", " np", ".", "number", "):", "\n"], "logprobs": [-0.40914347767829895, -1.9444777965545654, -4.589452510117553e-05, -0.12606048583984375, -0.0006719953380525112, -0.000316212244797498, -6.23445157543756e-05, -0.0015645894454792142, -0.023062454536557198, -0.020542718470096588, -0.0005329619161784649, -2.6225699912174605e-05, -2.7418097943154862e-06, -0.0005508335889317095, -0.0015518538421019912, -0.00630639074370265, -0.006232587620615959, -0.0018135543214157224, -0.010237916372716427, -4.994744449504651e-05, -0.022369440644979477, -0.010880429297685623, -0.0034468306694179773], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric columns.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.00318971648812294, -1.0251946150674485e-05, -0.005263044033199549, -0.06983651965856552, -0.3297556936740875, -0.2709442973136902, -0.4014833867549896, -0.3499862849712372, -0.08311845362186432, -1.192905068397522, -0.02541351690888405, -0.004893469624221325, -0.000270091783022508, -0.0005957497633062303], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05790283530950546, -0.03665507584810257, -0.0001481661747675389, -0.00849703699350357, -5.602820692729438e-06, -0.00014888131408952177, -8.415821503149346e-05, -0.0046002985909581184, -0.0059171742759644985, -0.0007820646860636771], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005834784242324531, -2.2053474822314456e-05, -0.0087135573849082, -0.04550249129533768, -0.03400832787156105, -0.005734777078032494, -0.0012000747956335545, -0.0903923436999321, -0.010897763073444366, -0.3033250570297241, -0.005591229535639286, -0.0002858230145648122, -0.015393495559692383, -0.00010740180005086586, -0.001312586129643023, -0.15607252717018127, -0.006590417120605707, -0.00013731967192143202, -0.000426439888542518], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.07939473539590836, -0.028355078771710396, -0.0003036991402041167, -0.0024188091047108173, -1.5258672647178173e-05, -0.00013076403411105275, -0.00014041867689229548, -0.006070864852517843, -0.00768608832731843, -0.0010265801101922989], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer: random_state < 0\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ":", " random", "_", "state", " <", " ", "0", "\"", ")", "\n"], "logprobs": [-0.006409682333469391, -9.059865078597795e-06, -0.010956484824419022, -0.026218581944704056, -0.02396148256957531, -0.006846184842288494, -0.009803364053368568, -0.06335121393203735, -0.008865991607308388, -0.12600372731685638, -0.10790092498064041, -2.6461002826690674, -1.4917138814926147, -0.00789580587297678, -0.007580088917165995, -2.1044697761535645, -0.8934869170188904, -0.8380393385887146, -0.18807919323444366, -0.001940036192536354, -0.001465676468797028], "finish_reason": "stop"}, {"text": " data.drop(target_column, axis=1)", "tokens": [" data", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.015663452446460724, -0.35454097390174866, -0.4136229157447815, -0.13845640420913696, -0.7040725350379944, -4.100715523236431e-05, -5.900685573578812e-05, -0.002380515681579709, -0.007218470796942711, -0.065131276845932, -0.015179473906755447, -0.027210373431444168, -0.0526595376431942], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008221710100769997, -0.05196908488869667, -0.0008839037618599832, -1.8000440832111053e-05, -1.4305104514278355e-06, -0.0003406421164982021, -0.006893068552017212], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.015206126496195793, -0.00019476900342851877, -0.003960979636758566, -0.0015811334596946836, -0.0025643580593168736, -0.00010656742961145937, -0.0010756427654996514, -0.0002269487304147333, -0.0036438989918679, -5.8410845667822286e-05, -0.00048339602653868496, -0.0036032767966389656, -0.015764256939291954, -3.576272320060525e-06, -8.821448318485636e-06, -7.867782187531702e-06, -4.887569048150908e-06, -0.00044204952428117394, -0.7349531650543213], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003177833277732134, -1.168244216387393e-05, -9.691245941212401e-05, -0.045474469661712646, -0.1251879632472992], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.024499859660863876, -0.00033098942367359996, -0.0011526852613314986, -0.00018880968855228275, -0.0013163958210498095, -0.002904722234234214, -0.0017606009496375918, -0.0004077318590134382, -0.014271455816924572, -0.00012587709352374077, -3.671578815556131e-05, -0.2665678560733795, -0.26552313566207886], "finish_reason": "stop"}], "metrics": {"energy": 522.2571610622401, "energy_per_token": 2.363154574942263, "time": 18.70181, "time_per_token": 0.08462357466063347}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"data must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "data", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -0.5487797260284424, -0.5160593390464783, -0.003410002216696739, -0.06949394941329956, -0.7328720688819885, -0.19974543154239655, -0.0071431961841881275, -0.2425071895122528, -0.0002836778585333377, -0.0006249382277019322], "finish_reason": "stop"}, {"text": " not len(data):", "tokens": [" not", " len", "(", "data", "):", "\n"], "logprobs": [-1.567685604095459, -2.3491549491882324, -0.0001591317413840443, -0.0012034086976200342, -0.34630152583122253, -0.013166626915335655], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00047910655848681927, -1.2397689715726301e-05, -0.00522094639018178, -0.008109737187623978, -0.09542907774448395, -1.130941390991211, -0.010659660212695599, -0.09492334723472595, -0.006334228441119194, -7.116541382856667e-05, -0.000277123210253194], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.1670401245355606, -2.407998726994265e-05, -9.798523387871683e-05, -0.0022156708873808384, -6.532455881824717e-05, -0.005350673571228981, -1.0858285427093506, -0.0012519863666966558], "finish_reason": "stop"}, {"text": " ValueError(f\"data should contain a column called '{target_column}'.\")", "tokens": [" Value", "Error", "(", "f", "\"", "data", " should", " contain", " a", " column", " called", " '", "{", "target", "_", "column", "}'", ".", "\"", ")", "\n"], "logprobs": [-0.0005952732171863317, -3.766942609217949e-05, -0.005002007819712162, -0.7903356552124023, -0.021358830854296684, -1.1059415340423584, -0.6566670536994934, -0.13397641479969025, -0.6431143283843994, -0.026036133989691734, -1.5584934949874878, -0.7258620858192444, -0.0009282094542868435, -0.0013306819600984454, -2.610649426060263e-05, -7.486063259420916e-05, -0.004093957599252462, -0.1591343730688095, -0.002852896461263299, -0.0003057250869460404, -0.0004275123355910182], "finish_reason": "stop"}, {"text": " not data[target_column].dtypes.name in ['int', 'float']:", "tokens": [" not", " data", "[", "target", "_", "column", "]", ".", "d", "types", ".", "name", " in", " ['", "int", "'", ",", " '", "float", "']", ":", "\n"], "logprobs": [-0.40914347767829895, -0.5994899272918701, -0.05518603324890137, -0.0016283836448565125, -3.683499380713329e-05, -4.768360213347478e-06, -0.0005700155161321163, -6.282132380874828e-05, -1.3749572038650513, -0.7089537382125854, -0.028701836243271828, -1.10161292552948, -2.68263578414917, -0.7206645607948303, -0.4332195222377777, -1.602768898010254, -0.0015633992152288556, -0.10240630805492401, -0.09177025407552719, -0.16880470514297485, -0.00747419660910964, -0.002961299614980817], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.00318971648812294, -1.0251946150674485e-05, -0.005263044033199549, -0.06983651965856552, -0.3297556936740875, -0.2709442973136902, -0.4014833867549896, -0.3499862849712372, -0.08311845362186432, -0.6760059595108032, -0.020514339208602905, -0.004430003929883242, -0.0002609150833450258, -0.0005465444410219789], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05790283530950546, -0.03665507584810257, -0.0001481661747675389, -0.00849703699350357, -5.602820692729438e-06, -0.00014888131408952177, -8.415821503149346e-05, -0.0046002985909581184, -0.0059171742759644985, -0.0007820646860636771], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005834784242324531, -2.2053474822314456e-05, -0.0087135573849082, -0.04550249129533768, -0.03400832787156105, -0.005734777078032494, -0.0012000747956335545, -0.0903923436999321, -0.010897763073444366, -0.3033250570297241, -0.005591229535639286, -0.0002858230145648122, -0.015393495559692383, -0.00010740180005086586, -0.001312586129643023, -0.15607252717018127, -0.006590417120605707, -0.00013731967192143202, -0.000426439888542518], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.07939473539590836, -0.028355078771710396, -0.0003036991402041167, -0.0024188091047108173, -1.5258672647178173e-05, -0.00013076403411105275, -0.00014041867689229548, -0.006070864852517843, -0.00768608832731843, -0.0010265801101922989], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006409682333469391, -9.059865078597795e-06, -0.010956484824419022, -0.026218581944704056, -0.02396148256957531, -0.006846184842288494, -0.009803364053368568, -0.06335121393203735, -0.008865991607308388, -0.12600372731685638, -0.10790092498064041, -0.32012489438056946, -0.012129358015954494, -0.00042763148667290807, -0.0005122303264215589], "finish_reason": "stop"}, {"text": " data.iloc[:, :-1]", "tokens": [" data", ".", "il", "oc", "[:", ",", " :-", "1", "]", "\n"], "logprobs": [-0.016203146427869797, -0.3711472451686859, -1.4314557313919067, -0.0002549561613705009, -0.010654352605342865, -0.012501330114901066, -0.7435623407363892, -0.0006693744799122214, -0.0014300844632089138, -0.15328358113765717], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.011974592693150043, -0.052036531269550323, -0.0008808070560917258, -2.0503786799963564e-05, -1.311301275563892e-06, -0.00027855331427417696, -0.006790063809603453], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.01357608288526535, -0.00019774865359067917, -0.003474510507658124, -0.0017075256910175085, -0.002361487364396453, -9.941560711013153e-05, -0.0012525817146524787, -0.00021395778458099812, -0.003624419681727886, -5.030505417380482e-05, -0.00048303857329301536, -0.00429113581776619, -0.013999947346746922, -3.4570634852570947e-06, -7.271740287251305e-06, -9.417489309271332e-06, -4.768360213347478e-06, -0.0004459816846065223, -0.5519042611122131, -0.0015334049239754677, -0.023295411840081215, -0.00045253525604493916, -0.3743673264980316, -4.935142715112306e-05, -5.829164365422912e-05, -0.029881512746214867, -0.016695892438292503, -6.747018051100895e-05, -2.622600959512056e-06, -0.0020503229461610317, -0.0590139701962471, -2.3841855067985307e-07, -5.245195097813848e-06, -0.00874439999461174, -0.0018705505644902587, -3.8980677345534787e-05, -0.00012003655137959868, -0.09917853027582169, -0.002779432339593768], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003158463630825281, -1.2993727978027891e-05, -8.070142939686775e-05, -0.04286298528313637, -0.14734281599521637], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)<|endoftext|>def task_func(data: pd.DataFrame) -> float:", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "data", ":", " pd", ".", "DataFrame", ")", " ->", " float", ":", "\n"], "logprobs": [-0.01957000605762005, -0.0002779574424494058, -0.0009425011812709272, -0.00020001317898277193, -0.0013150862650945783, -0.0027312852907925844, -0.0022638426162302494, -0.0004359725280664861, -0.01520741730928421, -0.00011872540198964998, -4.541770613286644e-05, -1.6000795364379883, -7.152555099310121e-07, -2.9802276912960224e-06, -5.1616290875244886e-05, -0.00011264643399044871, -0.18329516053199768, -2.9807679653167725, -0.7523499131202698, -0.04916822537779808, -0.06026171147823334, -0.05864766612648964, -0.9277446269989014, -1.6709020137786865, -1.124239206314087, -0.0003829461056739092, -0.1106460765004158, -1.1879161596298218, -0.0015073377871885896, -1.3602945804595947, -0.01446146797388792, -0.0029087637085467577], "finish_reason": "stop"}], "metrics": {"energy": 330.13017638301835, "energy_per_token": 1.3048623572451319, "time": 14.917488, "time_per_token": 0.05896240316205534}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -0.5487797260284424, -0.5160593390464783, -0.003410002216696739, -0.06949394941329956, -0.8551598191261292, -0.007620904594659805, -0.224057137966156, -0.00023731753753963858, -0.0005239067832008004], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5250754952430725, -0.007835722528398037, -0.031535692512989044, -0.004485901445150375, -0.0050082942470908165], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00047910655848681927, -1.2397689715726301e-05, -0.00522094639018178, -0.008109737187623978, -0.09542907774448395, -1.130941390991211, -0.010659660212695599, -0.09492334723472595, -0.006334228441119194, -7.116541382856667e-05, -0.000277123210253194], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.1670401245355606, -2.407998726994265e-05, -9.798523387871683e-05, -0.0022156708873808384, -6.532455881824717e-05, -0.005350673571228981, -0.4147680401802063, -0.005123936105519533, -0.001500672078691423, -0.0008347125840373337], "finish_reason": "stop"}, {"text": " ValueError(\"target_column should be a column of data.\")", "tokens": [" Value", "Error", "(", "\"", "target", "_", "column", " should", " be", " a", " column", " of", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0005952732171863317, -3.766942609217949e-05, -0.005002007819712162, -0.8817586898803711, -0.3458051085472107, -0.041241180151700974, -0.003508723108097911, -0.4576229155063629, -0.00812794640660286, -0.03376909717917442, -0.011182375252246857, -0.3363076150417328, -0.03571333363652229, -0.017224835231900215, -0.0027677821926772594, -0.00019536493346095085, -0.0003307510633021593], "finish_reason": "stop"}, {"text": " not data[target_column].apply(pd.api.types.is_numeric_dtype).all():", "tokens": [" not", " data", "[", "target", "_", "column", "]", ".", "apply", "(", "pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", ")", ".", "all", "():", "\n"], "logprobs": [-0.4388938844203949, -0.7009707093238831, -0.050877392292022705, -0.0015673269517719746, -4.911301948595792e-05, -4.887569048150908e-06, -0.0006702084210701287, -6.151010165922344e-05, -0.7543418407440186, -0.0012372228084132075, -0.5468639731407166, -6.997340824455023e-05, -0.6376368403434753, -0.0008413827163167298, -0.01853737235069275, -4.8874615458771586e-05, -0.0001652104256208986, -0.0010336062405258417, -0.014507056213915348, -0.00015531764074694365, -0.04053260758519173, -7.891343557275832e-05, -0.010785853490233421, -0.0002884448622353375, -0.008568782359361649, -0.006252252962440252, -0.002685989486053586], "finish_reason": "stop"}, {"text": " ValueError(\"data should only contain numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " only", " contain", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0026667292695492506, -1.168244216387393e-05, -0.004960254766047001, -0.06197422742843628, -0.36032775044441223, -0.25576674938201904, -1.1204798221588135, -0.020676778629422188, -0.09163963049650192, -0.5022330284118652, -0.019765792414546013, -0.004381105303764343, -0.0003522014303598553, -0.0007021345663815737], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.04879852011799812, -0.03653107210993767, -0.0001559135998832062, -0.012244178913533688, -5.364403477869928e-06, -0.0001267114421352744, -9.30981186684221e-05, -0.00453408295288682, -0.006323448847979307, -0.0007148809381760657], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be a float value between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " a", " float", " value", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005990855861455202, -2.3841574147809297e-05, -0.00894680805504322, -0.05680781230330467, -0.03756619617342949, -0.006519122049212456, -0.0010141950333490968, -0.0938173457980156, -0.01049004029482603, -1.8536616563796997, -1.7155969142913818, -2.601854085922241, -0.09448417276144028, -0.007050160318613052, -0.00033158526639454067, -0.014856299385428429, -0.00011812942830147222, -0.0012448427733033895, -0.05834892392158508, -0.004234633408486843, -0.00030155404238030314, -0.0006400682032108307], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.07065638154745102, -0.026448598131537437, -0.0002862997353076935, -0.0022651508916169405, -1.9073304429184645e-05, -0.00012003655137959868, -0.00014900050882715732, -0.006022520363330841, -0.005723161157220602, -0.0010681406129151583], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.0061564091593027115, -9.298280929215252e-06, -0.011010957881808281, -0.023621341213583946, -0.02332173101603985, -0.007893085479736328, -0.010071530006825924, -0.062355443835258484, -0.009539732709527016, -0.14508168399333954, -0.10713964700698853, -0.35169970989227295, -0.012652364559471607, -0.00044050050200894475, -0.0005354639724828303], "finish_reason": "stop"}, {"text": " data.drop(columns=target_column)", "tokens": [" data", ".", "drop", "(", "columns", "=", "target", "_", "column", ")", "\n"], "logprobs": [-0.014402717351913452, -0.3242790997028351, -0.4673933684825897, -0.15659199655056, -0.7286345958709717, -0.5160819888114929, -0.007745944429188967, -0.0006537684239447117, -4.3748852476710454e-05, -1.854736328125, -0.03882720693945885], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008149939589202404, -0.05863833427429199, -0.0009323778795078397, -1.5020257706055418e-05, -1.5497195136049413e-06, -0.0003393312799744308, -0.006936635356396437], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.014371342957019806, -0.00019429226813372225, -0.003416774095967412, -0.001794158248230815, -0.0028654965572059155, -9.214453893946484e-05, -0.0013248485047370195, -0.00021705655672121793, -0.0029834068845957518, -5.2927523938706145e-05, -0.0003688847064040601, -0.0034004980698227882, -0.01686633750796318, -3.3378546504536644e-06, -7.152531907195225e-06, -1.1086402082582936e-05, -4.6491513785440475e-06, -0.000432278640801087, -0.6202548742294312, -0.0012273406609892845, -0.02170790731906891, -0.00038890427094884217, -0.3872847557067871, -4.207999518257566e-05, -4.768258077092469e-05, -0.03717035427689552, -0.015627305954694748, -5.185469490243122e-05, -2.9802276912960224e-06, -0.0021005249582231045, -0.05931060388684273, -2.3841855067985307e-07, -4.529942543740617e-06, -0.00829926785081625, -0.0016271935310214758, -3.9934315282152966e-05, -0.00016258825780823827, -0.0975499078631401, -0.0027730127330869436], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0030652941204607487, -1.1086402082582936e-05, -8.082063141046092e-05, -0.03977060690522194, -0.16013045608997345], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)<|endoftext|># Task 2: Write a function named task_func.", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")<", "|", "end", "of", "text", "|>", "#", " Task", " ", "2", ":", " Write", " a", " function", " named", " task", "_", "func", ".", "\n"], "logprobs": [-0.021792825311422348, -0.0003182381624355912, -0.0012193633010610938, -0.00017712931730784476, -0.0012219827622175217, -0.00251108780503273, -0.001256034360267222, -0.0004538459761533886, -0.011492361314594746, -0.00011264643399044871, -4.207999518257566e-05, -1.5627856254577637, -7.152555099310121e-07, -2.622600959512056e-06, -6.758938252460212e-05, -8.868777513271198e-05, -0.15350988507270813, -1.7348577976226807, -3.773124933242798, -0.47377339005470276, -1.8455040454864502, -1.8743020296096802, -3.763960599899292, -0.1964297592639923, -0.3916657865047455, -3.0473060607910156, -1.9635748863220215, -0.11649484932422638, -0.4604734778404236, -2.3003058433532715, -0.6574609279632568], "finish_reason": "stop"}], "metrics": {"energy": 355.86281547927854, "energy_per_token": 1.3846802158726792, "time": 15.131063, "time_per_token": 0.05887573151750972}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"Data must be a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Data", " must", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -1.5359737873077393, -0.6029487252235413, -0.00221804971806705, -0.08896563202142715, -1.4569940567016602, -0.011975535191595554, -1.065725564956665, -0.007271136157214642, -0.00022885564249008894, -0.0008123196894302964], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5727166533470154, -0.007058683317154646, -0.027954064309597015, -0.00460516382008791, -0.004958000965416431], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00043871314846910536, -1.0251946150674485e-05, -0.005012208595871925, -0.00871213898062706, -0.09510958194732666, -0.5727030634880066, -0.21050982177257538, -0.008689922280609608, -0.011528539471328259, -0.05548831447958946, -0.0014510351466014981, -8.77341881277971e-05, -0.00029988560709170997], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.14878535270690918, -1.9550132492440753e-05, -0.00010883215873036534, -0.002300356514751911, -5.1973900554003194e-05, -0.005887665785849094, -1.0781301259994507, -0.0013763965107500553], "finish_reason": "stop"}, {"text": " ValueError(f\"data should contain column named {target_column}.\")", "tokens": [" Value", "Error", "(", "f", "\"", "data", " should", " contain", " column", " named", " {", "target", "_", "column", "}", ".", "\"", ")", "\n"], "logprobs": [-0.0006743779522366822, -3.480850500636734e-05, -0.005487734917551279, -0.7460518479347229, -0.022495796903967857, -1.2011247873306274, -0.6690883040428162, -0.12535959482192993, -2.021313428878784, -2.14636492729187, -0.678328812122345, -0.0041857254691421986, -4.160317621426657e-05, -0.0001311216183239594, -0.45742133259773254, -0.03032928705215454, -0.004864049609750509, -0.00043442347669042647, -0.0006266061100177467], "finish_reason": "stop"}, {"text": " not pd.api.types.is_numeric_dtype(data[target_column]):", "tokens": [" not", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "data", "[", "target", "_", "column", "]", "):", "\n"], "logprobs": [-0.4227680563926697, -1.6572246551513672, -0.0001854724541772157, -0.17153619229793549, -0.0001554368354845792, -0.0024209495168179274, -2.312633478140924e-05, -0.0006291079334914684, -0.0006367324967868626, -0.002044255845248699, -0.0007680088747292757, -0.006688587833195925, -0.00015817821258679032, -0.000479344860650599, -0.003701859852299094, -0.04636678099632263, -0.00039498155820183456, -1.3351351299206726e-05, -1.9073468138230965e-06, -0.013165215030312538, -0.026712918654084206, -0.002133119385689497], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0033091329969465733, -1.2397689715726301e-05, -0.005851401016116142, -0.06258166581392288, -0.29961907863616943, -0.26489439606666565, -0.3983675241470337, -0.3311561942100525, -0.0761706754565239, -0.7577560544013977, -0.021542483940720558, -0.004282708279788494, -0.00025817399728111923, -0.0006176709430292249], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.051383357495069504, -0.03334050253033638, -0.00016151554882526398, -0.008930621668696404, -5.245195097813848e-06, -0.00013433984713628888, -8.129743218887597e-05, -0.0038738222792744637, -0.006193492095917463, -0.000726316764485091], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005981324939057231, -2.109982233378105e-05, -0.008053923025727272, -0.04675217717885971, -0.03907967731356621, -0.006453151814639568, -0.001208766596391797, -0.09114383906126022, -0.011448285542428493, -0.31033438444137573, -0.004916957579553127, -0.00030214988510124385, -0.01343036349862814, -0.00011550712952157483, -0.0013086573453620076, -0.17138727009296417, -0.00769933732226491, -0.00014709345123264939, -0.0004151197790633887], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06675731390714645, -0.02965390682220459, -0.0003057250869460404, -0.002542836358770728, -1.4781842764932662e-05, -0.00014768941036891192, -0.00016068121476564556, -0.006641931366175413, -0.007526848465204239, -0.0010674261720851064], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.007333857472985983, -9.417489309271332e-06, -0.009155316278338432, -0.022153642028570175, -0.02173788659274578, -0.008790486492216587, -0.010200983844697475, -0.06484876573085785, -0.009896380826830864, -0.1169918105006218, -0.1108408272266388, -0.3114747107028961, -0.01147385872900486, -0.00036137725692242384, -0.00047434045700356364], "finish_reason": "stop"}, {"text": " data.loc[:, data.columns != target_column]", "tokens": [" data", ".", "loc", "[:", ",", " data", ".", "columns", " ", "!", "=", " target", "_", "column", "]", "\n"], "logprobs": [-0.017645517364144325, -0.31107425689697266, -2.407515287399292, -0.004288524389266968, -0.0028917661402374506, -0.4802151024341583, -0.025044340640306473, -0.0071891192346811295, -0.2810332179069519, -1.6689286894688848e-06, -1.4781842764932662e-05, -0.009368977509438992, -7.986990567587782e-06, -1.823885577323381e-05, -0.0019838192965835333, -0.06383468955755234], "finish_reason": "stop"}, {"text": " data.pop(target_column)", "tokens": [" data", ".", "pop", "(", "target", "_", "column", ")", "\n"], "logprobs": [-0.011687732301652431, -3.0030994415283203, -3.059170722961426, -0.02139768935739994, -0.026233097538352013, -2.861018856492592e-06, -2.7418097943154862e-06, -0.005880792159587145, -0.014385796152055264], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.015113015659153461, -0.00023779425828251988, -0.0033751921728253365, -0.0013781820889562368, -0.002638908103108406, -0.00011216964776394889, -0.0013703251024708152, -0.00023445718397852033, -0.0024504417087882757, -5.1020273531321436e-05, -0.00037889453233219683, -0.004095026291906834, -0.019299933686852455, -3.814689989667386e-06, -8.106198947643861e-06, -7.986990567587782e-06, -5.245195097813848e-06, -0.0004441943601705134, -0.6569450497627258], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.002784187439829111, -1.2516897186287679e-05, -9.059495641849935e-05, -0.04708681255578995, -0.16763074696063995], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.02769760973751545, -0.0002908283786382526, -0.000995974289253354, -0.00015138434537220746, -0.001178047270514071, -0.002927543828263879, -0.001555900671519339, -0.0005073452484793961, -0.013152861967682838, -0.00012170527770649642, -4.136476854910143e-05, -0.2896623909473419, -0.29100537300109863], "finish_reason": "stop"}], "metrics": {"energy": 349.33857056999204, "energy_per_token": 1.5807175138913667, "time": 13.658295, "time_per_token": 0.061802239819004526}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -2.3496718406677246], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.586872935295105, -0.00021669900161214173, -0.0009733468177728355, -0.030601253733038902, -0.11709095537662506, -0.0007596705690957606, -4.0411134250462055e-05, -0.006701020989567041, -0.0048966724425554276], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004808938247151673, -1.1205610462639015e-05, -0.0049957213923335075, -0.007964519783854485, -0.0907142162322998, -1.1880443096160889, -0.009479038417339325, -0.0940462201833725, -0.0073556313291192055, -6.997340824455023e-05, -0.0002783149539027363], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.15705974400043488, -3.397406908334233e-05, -0.0001113352773245424, -0.002510374179109931, -5.4596363042946905e-05, -0.006095983553677797, -1.1322669982910156, -0.0012559153838083148], "finish_reason": "stop"}, {"text": " ValueError(f\"{target_column} is not a column of data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "target", "_", "column", "}", " is", " not", " a", " column", " of", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0006820021662861109, -3.659658250398934e-05, -0.004632930271327496, -0.751756489276886, -0.021986426785588264, -1.2700073719024658, -0.003635822329670191, -8.702239938429557e-06, -0.00032360086333937943, -0.02078782021999359, -0.16179755330085754, -0.0037947327364236116, -0.03896491602063179, -0.03028140775859356, -0.31633850932121277, -0.06157974898815155, -0.05658749118447304, -0.012032308615744114, -0.00015162272029556334, -0.00030322244856506586], "finish_reason": "stop"}, {"text": " not pd.api.types.is_numeric_dtype(data[target_column]):", "tokens": [" not", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "data", "[", "target", "_", "column", "]", "):", "\n"], "logprobs": [-0.4155595004558563, -1.650249719619751, -0.00019977481861133128, -0.1561310589313507, -8.83301836438477e-05, -0.0027633835561573505, -2.634490556374658e-05, -0.0005260513862594962, -0.0006860524881631136, -0.0017215682892128825, -0.0008057684754021466, -0.004749326966702938, -0.00014673586701974273, -0.00045217780279926956, -0.003815277712419629, -0.04255743324756622, -0.0004583738627843559, -8.940656698541716e-06, -2.264974000354414e-06, -0.014809200540184975, -0.02132008969783783, -0.0025377231650054455], "finish_reason": "stop"}, {"text": " ValueError(\"data should only contain numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " only", " contain", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.002648538677021861, -1.3232143828645349e-05, -0.005887665785849094, -0.07686041295528412, -0.3356395363807678, -0.26639536023139954, -1.2458182573318481, -0.02262365259230137, -0.09786159545183182, -2.2924656867980957, -0.2866787314414978, -0.007369595114141703, -0.0003234816831536591, -0.0006587718962691724], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.047933489084243774, -0.035782575607299805, -0.00016056202002801, -0.00827846024185419, -6.437280717364047e-06, -0.00013457823661156, -0.00011181206355104223, -0.004131473135203123, -0.007086144760251045, -0.0008465044084005058], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005800233921036124, -2.3841574147809297e-05, -0.007894386537373066, -0.06055707857012749, -0.03656601160764694, -0.007584821432828903, -0.0011043408885598183, -0.09513126313686371, -0.009508677758276463, -0.2908414900302887, -0.005786690395325422, -0.00035696811391972005, -0.01328321173787117, -0.00012146688823122531, -0.0011194637045264244, -0.1621004045009613, -0.0077669997699558735, -0.00015770144818816334, -0.00041976699139922857], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06585042923688889, -0.02730422094464302, -0.00027414379292167723, -0.0022306579630821943, -1.9311717551317997e-05, -0.0001287377526750788, -0.0001411338453181088, -0.0072045051492750645, -0.006773842498660088, -0.0008696111617609859], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006942673120647669, -8.702239938429557e-06, -0.009413735941052437, -0.02129499986767769, -0.023024246096611023, -0.007763214409351349, -0.008897893130779266, -0.06415494531393051, -0.00827243085950613, -0.12971597909927368, -0.11634651571512222, -0.341343492269516, -0.011861036531627178, -0.00037079135654494166, -0.00047791501856409013], "finish_reason": "stop"}, {"text": " data[['x1']]", "tokens": [" data", "[", "['", "x", "1", "']", "]", "\n"], "logprobs": [-0.0174361951649189, -1.6048043966293335, -2.6158597469329834, -0.0011691170511767268, -0.00485716899856925, -1.9151779413223267, -0.007502119988203049, -0.05006268993020058], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008638158440589905, -0.05687043070793152, -0.0009756095823831856, -1.9192511899746023e-05, -1.1920922133867862e-06, -0.00035172473872080445, -0.00695332745090127], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.014950960874557495, -0.00025602878304198384, -0.003568473504856229, -0.0018022499280050397, -0.0023639847058802843, -0.00011848701251437888, -0.0012424614978954196, -0.0002256377338198945, -0.003350836457684636, -5.23315102327615e-05, -0.0004769618099089712, -0.004160083830356598, -0.020259356126189232, -3.814689989667386e-06, -7.390948667307384e-06, -8.106198947643861e-06, -5.483612312673358e-06, -0.0005004345439374447, -0.5543751120567322, -0.0012194823939353228, -0.02222534641623497, -0.0004573014739435166, -0.3665967583656311, -4.8636207793606445e-05, -4.768258077092469e-05, -0.03000704012811184, -0.014148051850497723, -5.769562994828448e-05, -2.264974000354414e-06, -0.002177012851461768, -0.06325230002403259, -2.3841855067985307e-07, -4.529942543740617e-06, -0.008469141088426113, -0.0017705968348309398, -5.352353764465079e-05, -0.00014602071314584464, -0.08615924417972565, -0.002269432647153735], "finish_reason": "stop"}, {"text": " LinearRegression().fit(X_train, y_train)", "tokens": [" Linear", "Reg", "ression", "()", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.003058638656511903, -1.2278481335670222e-05, -9.679325739853084e-05, -0.04193884879350662, -2.09061598777771, -9.786603914108127e-05, -0.0006258912617340684, -0.002491229446604848, -0.049285564571619034, -0.0018647201359272003, -0.008142844773828983, -0.013348261825740337, -0.000485183292767033, -1.2755313036905136e-05, -0.0015723258256912231, -0.0018806643784046173], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")"], "logprobs": [-0.024727944284677505, -0.0003159739135298878, -0.0008923601126298308, -0.0001787979417713359, -0.0012554391287267208, -0.0036645657382905483, -0.00259515387006104, -0.0004966217675246298, -0.015751583501696587, -0.00013529339048545808, -4.124556289752945e-05, -0.25382983684539795], "finish_reason": "stop"}], "metrics": {"energy": 358.9765635509491, "energy_per_token": 1.5340878784228593, "time": 14.086234, "time_per_token": 0.060197581196581196}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"Input is not a Pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " is", " not", " a", " Pand", "as", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -3.3592140674591064, -2.785513162612915, -0.03568549454212189, -0.12551628053188324, -3.1678884029388428, -8.892617915989831e-05, -0.20961759984493256, -0.05303606763482094, -0.7189314961433411, -0.0004924515378661454, -0.0005779979983344674], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5727166533470154, -0.007058683317154646, -0.027954064309597015, -0.00460516382008791, -0.004958000965416431], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00043871314846910536, -1.0251946150674485e-05, -0.005012208595871925, -0.00871213898062706, -0.09510958194732666, -1.2295348644256592, -0.009742332622408867, -0.08336305618286133, -0.008187658153474331, -7.271502545336261e-05, -0.00026973424246534705], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.15509025752544403, -3.099393507000059e-05, -9.297892393078655e-05, -0.0024425929877907038, -5.209310256759636e-05, -0.006521964445710182, -0.4428821802139282, -0.004837476182729006, -0.0013949673157185316, -0.0014421073719859123], "finish_reason": "stop"}, {"text": " ValueError(\"target_column is not a column of data.\")", "tokens": [" Value", "Error", "(", "\"", "target", "_", "column", " is", " not", " a", " column", " of", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0006661579827778041, -3.290122185717337e-05, -0.005223318003118038, -0.9520273804664612, -0.30576223134994507, -0.046485476195812225, -0.004132541362196207, -1.3142199516296387, -0.0051444536074995995, -0.04175295680761337, -0.02075442671775818, -0.23464654386043549, -0.0318673774600029, -0.031118158251047134, -0.0065123713575303555, -0.00018523407925385982, -0.0003234816831536591], "finish_reason": "stop"}, {"text": " not pd.api.types.is_numeric_dtype(data[target_column]):", "tokens": [" not", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "data", "[", "target", "_", "column", "]", "):", "\n"], "logprobs": [-0.41276445984840393, -1.6309200525283813, -0.00018094333063345402, -0.14741338789463043, -0.0001289761275984347, -0.0030960743315517902, -2.4676019165781327e-05, -0.000607782625593245, -0.0006495987763628364, -0.001955979270860553, -0.000835903687402606, -0.005958176217973232, -0.0001401803019689396, -0.0005248599336482584, -0.0037601736839860678, -0.039894554764032364, -0.0005268854438327253, -3.6954811548639555e-06, -1.9073468138230965e-06, -0.015246748924255371, -0.021650630980730057, -0.0022600365336984396], "finish_reason": "stop"}, {"text": " ValueError(\"data should only contain numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " only", " contain", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.003895790548995137, -9.298280929215252e-06, -0.006136860232800245, -0.07060139626264572, -0.3269602954387665, -0.23034365475177765, -1.3060638904571533, -0.023073522374033928, -0.10288063436746597, -0.4976228177547455, -0.01918732188642025, -0.00420875521376729, -0.00025519452174194157, -0.0005701346672140062], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05262571945786476, -0.0349440798163414, -0.00013958434283267707, -0.00878493208438158, -7.033323527139146e-06, -0.00016223068814724684, -7.70062324590981e-05, -0.0038561285473406315, -0.007513833697885275, -0.000825898430775851], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1 exclusive.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", " exclusive", ".", "\"", ")", "\n"], "logprobs": [-0.0006031363154761493, -2.098061486321967e-05, -0.009410074912011623, -0.06012454628944397, -0.035580236464738846, -0.006186146754771471, -0.0010882653295993805, -0.10380743443965912, -0.009548233821988106, -0.310078889131546, -0.005818335339426994, -0.00031442465842701495, -0.014656259678304195, -0.00010775939153973013, -0.0013867533998563886, -2.969958782196045, -0.029546622186899185, -0.0047912076115608215, -0.0003232433518860489, -0.0004664763400796801], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.07184253633022308, -0.03203052654862404, -0.00030524839530698955, -0.0024207117967307568, -2.0503786799963564e-05, -0.00013493580627255142, -0.00013910756388213485, -0.006064110901206732, -0.007800947409123182, -0.0010053823934867978], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.007736599538475275, -7.867782187531702e-06, -0.011928183026611805, -0.02352202497422695, -0.024644671007990837, -0.008032281883060932, -0.010246766731142998, -0.06505230814218521, -0.008166966028511524, -0.12773096561431885, -0.1133803129196167, -0.30441659688949585, -0.012380062602460384, -0.0003967689990531653, -0.0004745787591673434], "finish_reason": "stop"}, {"text": " data.iloc[:, :-1]", "tokens": [" data", ".", "il", "oc", "[:", ",", " :-", "1", "]", "\n"], "logprobs": [-0.013229332864284515, -0.3290586769580841, -1.4619271755218506, -0.0003579214389901608, -0.01167983841150999, -0.0140003003180027, -0.7546326518058777, -0.0006773561472073197, -0.0013803249457851052, -0.12314797937870026], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.00760623486712575, -0.060176070779561996, -0.0007499027997255325, -1.645074735279195e-05, -1.6689286894688848e-06, -0.0003097769513260573, -0.006049181334674358], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.014720986597239971, -0.00020561488054227084, -0.0037125491071492434, -0.0011644733604043722, -0.002552348654717207, -0.00011681827891152352, -0.0011232740944251418, -0.00021801002731081098, -0.002952385460957885, -5.006664650863968e-05, -0.00041130665340460837, -0.004435463342815638, -0.01997194066643715, -3.933898824470816e-06, -7.629365427419543e-06, -8.22540732769994e-06, -4.887569048150908e-06, -0.00048673225683160126, -0.5887296795845032, -0.0014611531514674425, -0.0246072206646204, -0.0004166688595432788, -0.37492793798446655, -3.659658250398934e-05, -4.5298504119273275e-05, -0.031174201518297195, -0.015837594866752625, -6.007967749610543e-05, -2.7418097943154862e-06, -0.0018699555657804012, -0.053488850593566895, -2.3841855067985307e-07, -5.125986263010418e-06, -0.008515949361026287, -0.001934444298967719, -5.972207145532593e-05, -0.00016151554882526398, -0.08193934708833694, -0.002763621276244521], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003024886129423976, -1.2874520507466514e-05, -9.595887240720913e-05, -0.046290185302495956, -0.13380740582942963], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.027458371594548225, -0.0003150205302517861, -0.0011692361440509558, -0.0001820160250645131, -0.0011197017738595605, -0.0028435057029128075, -0.00138853897806257, -0.00039498155820183456, -0.015358161181211472, -0.00011097769311163574, -3.313963316031732e-05, -0.27885517477989197, -0.28481385111808777], "finish_reason": "stop"}], "metrics": {"energy": 336.7613435859678, "energy_per_token": 1.4453276548753982, "time": 13.873728, "time_per_token": 0.059543896995708154}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(f\"data must be a DataFrame. Received {type(data)}\")", "tokens": [" Value", "Error", "(", "f", "\"", "data", " must", " be", " a", " Data", "Frame", ".", " Re", "ceived", " {", "type", "(", "data", ")}", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -1.4155364036560059, -0.29484638571739197, -0.7701387405395508, -0.6635677218437195, -0.0061081876046955585, -0.161932110786438, -0.8228200078010559, -0.012481551617383957, -2.122633695602417, -2.939845561981201, -0.00018880968855228275, -1.0219742059707642, -0.09092747420072556, -0.0003251500893384218, -0.0007065422250889242, -0.04191907122731209, -0.3501317501068115, -0.0008660380262881517, -0.0010530170984566212], "finish_reason": "stop"}, {"text": " not data:", "tokens": [" not", " data", ":", "\n"], "logprobs": [-1.4960259199142456, -0.14998942613601685, -2.0016214847564697, -0.014147582463920116], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004808938247151673, -1.1205610462639015e-05, -0.0049957213923335075, -0.007964519783854485, -0.0907142162322998, -1.1880443096160889, -0.009479038417339325, -0.0940462201833725, -0.0073556313291192055, -6.997340824455023e-05, -0.0002783149539027363], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.15705974400043488, -3.397406908334233e-05, -0.0001113352773245424, -0.002510374179109931, -5.4596363042946905e-05, -0.006095983553677797, -0.39183610677719116, -0.005370712373405695, -0.0014396075857803226, -0.0010275328531861305], "finish_reason": "stop"}, {"text": " ValueError(\"target_column should be a column of data.\")", "tokens": [" Value", "Error", "(", "\"", "target", "_", "column", " should", " be", " a", " column", " of", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0006820021662861109, -3.659658250398934e-05, -0.004632930271327496, -0.8829897046089172, -0.36347338557243347, -0.04577115923166275, -0.0034267534501850605, -0.43915364146232605, -0.009335791692137718, -0.036812618374824524, -0.01044615637511015, -0.32772326469421387, -0.04330601170659065, -0.01686985418200493, -0.002943352097645402, -0.0002208704245276749, -0.0003736513026524335], "finish_reason": "stop"}, {"text": " data[target_column].dtype != np.float:", "tokens": [" data", "[", "target", "_", "column", "]", ".", "d", "type", " ", "!", "=", " np", ".", "float", ":", "\n"], "logprobs": [-1.3375844955444336, -0.04746738448739052, -0.0035217900294810534, -3.981510963058099e-05, -5.364403477869928e-06, -0.0006493605324067175, -0.0004010588163509965, -0.3614983856678009, -0.4642525613307953, -0.5411466360092163, -5.006777428206988e-06, -3.58813522325363e-05, -0.5438259840011597, -1.9788545614574105e-05, -0.6123489141464233, -2.3776893615722656, -0.007398704532533884], "finish_reason": "stop"}, {"text": " ValueError(\"Data must contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "Data", " must", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0032130067702382803, -1.3947389561508317e-05, -0.005443986505270004, -0.08308938145637512, -2.2967686653137207, -2.740940570831299, -0.3349461257457733, -0.498583048582077, -0.11260657757520676, -0.8135347962379456, -0.03247202932834625, -0.005421103443950415, -0.0003337303060106933, -0.0007445423980243504], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.047005269676446915, -0.040768854320049286, -0.00015686711412854493, -0.0075229438953101635, -6.9141146923357155e-06, -0.00016890530241653323, -8.082063141046092e-05, -0.004530878737568855, -0.006355668883770704, -0.0006715188501402736], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005613181856460869, -2.1457441107486375e-05, -0.007627174723893404, -0.05293601378798485, -0.03534230217337608, -0.00564801087602973, -0.0011809049174189568, -0.09692072123289108, -0.010642911307513714, -0.2810734212398529, -0.005759074818342924, -0.0003446938644628972, -0.014216220006346703, -0.00012218205665703863, -0.0011741180205717683, -0.14693985879421234, -0.007401544600725174, -0.00013779645087197423, -0.00040082051418721676], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06612417846918106, -0.028334103524684906, -0.0003466005437076092, -0.0021172980777919292, -1.7404405298293568e-05, -0.00015186110977083445, -0.0002051381452474743, -0.006408142391592264, -0.005951303523033857, -0.0009918061550706625], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006426383275538683, -9.536697689327411e-06, -0.010282517410814762, -0.02251701056957245, -0.02299954742193222, -0.008715329691767693, -0.010797646827995777, -0.06528450548648834, -0.007812893949449062, -0.12615978717803955, -0.11718586087226868, -0.3192129135131836, -0.012818675488233566, -0.0003711488388944417, -0.00041309406515210867], "finish_reason": "stop"}, {"text": " data.drop(columns=target_column, axis=1)", "tokens": [" data", ".", "drop", "(", "columns", "=", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.016076110303401947, -0.26890745759010315, -0.5363141298294067, -0.1416272073984146, -0.7671060562133789, -0.43053463101387024, -0.006740096490830183, -0.0007721779984422028, -4.029192859889008e-05, -0.16660667955875397, -0.14957819879055023, -0.02198176272213459, -0.04439014568924904, -0.025286249816417694, -0.05452859401702881], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009341460652649403, -0.06161550432443619, -0.0007474012672901154, -1.537788011773955e-05, -1.6689286894688848e-06, -0.00032014489988796413, -0.007487685419619083], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, random_state=random_state, test_size=test_size)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " random", "_", "state", "=", "random", "_", "state", ",", " test", "_", "size", "=", "test", "_", "size", ")", "\n"], "logprobs": [-0.01489341352134943, -0.00028320116689428687, -0.0030105053447186947, -0.0015506636118516326, -0.0028079627081751823, -0.00011038171214750037, -0.001437822007574141, -0.00021026308240834624, -0.0026655402034521103, -4.9470632802695036e-05, -0.0003847335756290704, -0.004177890717983246, -0.017455289140343666, -4.0531076592742465e-06, -7.629365427419543e-06, -9.417489309271332e-06, -5.125986263010418e-06, -0.00044526674901135266, -0.5974269509315491, -0.0014137759571895003, -0.02192811667919159, -0.0003810394846368581, -1.601758599281311, -1.5020257706055418e-05, -9.202533692587167e-05, -0.028189361095428467, -0.0036022078711539507, -0.0001289761275984347, -3.766942609217949e-05, -0.016657790169119835, -0.030400292947888374, -7.152555099310121e-07, -6.639736966462806e-05, -0.011569901369512081, -0.007590973284095526, -5.0424259825376794e-05, -8.22540732769994e-06, -0.25726374983787537, -0.002639027079567313], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.002476127352565527, -1.2755313036905136e-05, -9.524368942948058e-05, -0.04873834550380707, -0.16235359013080597], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)<|endoftext|>import pandas as pd", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")<", "|", "end", "of", "text", "|>", "import", " pandas", " as", " pd", "\n"], "logprobs": [-0.01818215288221836, -0.00023064337437972426, -0.0009884715545922518, -0.00019560330838430673, -0.0011125572491437197, -0.0031609591096639633, -0.001456272671930492, -0.0004058252670802176, -0.01252063736319542, -8.844937838148326e-05, -4.3748852476710454e-05, -1.4653921127319336, -4.768370445162873e-07, -2.50339189733495e-06, -4.362964682513848e-05, -0.00015043080202303827, -0.160784050822258, -1.094595193862915, -1.175520896911621, -0.011573907919228077, -0.0012478192802518606, -0.0029496517963707447], "finish_reason": "stop"}], "metrics": {"energy": 363.25469615268713, "energy_per_token": 1.4706667860432678, "time": 14.717622, "time_per_token": 0.05958551417004049}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(f\"data must be a pandas DataFrame. Got {type(data)} instead.\")", "tokens": [" Value", "Error", "(", "f", "\"", "data", " must", " be", " a", " pandas", " Data", "Frame", ".", " Got", " {", "type", "(", "data", ")}", " instead", ".", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -1.4155364036560059, -0.29484638571739197, -0.7701387405395508, -0.6635677218437195, -0.0061081876046955585, -0.161932110786438, -0.9037793278694153, -0.4599648714065552, -0.013455651700496674, -1.8344082832336426, -0.5204768776893616, -0.4225773811340332, -0.0895407646894455, -0.0003486264031380415, -0.000562271336093545, -0.045160483568906784, -1.0944671630859375, -0.26275718212127686, -0.006812678184360266, -0.0003859252028632909, -0.0007683662115596235], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5755280256271362, -0.008833969943225384, -0.02634979411959648, -0.006383860483765602, -0.005007938481867313], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004808938247151673, -1.1205610462639015e-05, -0.0049957213923335075, -0.007964519783854485, -0.0907142162322998, -0.6224352717399597, -0.21758709847927094, -0.006815993692725897, -0.009508322924375534, -0.04895904287695885, -0.0016251702327281237, -8.046303264563903e-05, -0.0003091811086051166], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.12845975160598755, -3.2305197237292305e-05, -0.00013016807497479022, -0.002369931200519204, -6.437094270950183e-05, -0.0065058572217822075, -0.4447203278541565, -0.0050667691975831985, -0.001660279231145978, -0.0011269653914496303], "finish_reason": "stop"}, {"text": " ValueError(\"target_column should be a column of data.\")", "tokens": [" Value", "Error", "(", "\"", "target", "_", "column", " should", " be", " a", " column", " of", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0007581220706924796, -4.362964682513848e-05, -0.0042708381079137325, -0.8882688283920288, -0.35364553332328796, -0.0445876307785511, -0.003838790813460946, -0.4408952295780182, -0.009469473734498024, -0.033671244978904724, -0.011409629136323929, -0.31285178661346436, -0.03783838450908661, -0.016852740198373795, -0.0030790797900408506, -0.00019441144831944257, -0.0002960720448754728], "finish_reason": "stop"}, {"text": " data[target_column].dtypes.name != 'float64':", "tokens": [" data", "[", "target", "_", "column", "]", ".", "d", "types", ".", "name", " ", "!", "=", " '", "float", "6", "4", "':", "\n"], "logprobs": [-1.4296759366989136, -0.045670490711927414, -0.0031735554803162813, -4.970903682988137e-05, -5.722029527532868e-06, -0.0008557948167435825, -0.000440262199845165, -0.464810848236084, -1.0275720357894897, -1.046196460723877, -0.6897057890892029, -0.42990532517433167, -3.3378546504536644e-06, -0.0001728385395836085, -0.550711452960968, -0.19930124282836914, -0.12717393040657043, -3.576278118089249e-07, -0.023568017408251762, -0.007906805723905563], "finish_reason": "stop"}, {"text": " ValueError(\"data should only contain numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " only", " contain", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.003386003663763404, -1.0132738680113107e-05, -0.005159989930689335, -0.0745045617222786, -0.3085993826389313, -0.2644307315349579, -1.2880679368972778, -0.023959269747138023, -0.09442473202943802, -0.4360989034175873, -0.019645052030682564, -0.004915059544146061, -0.0002821285743266344, -0.0006043276516720653], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05018162727355957, -0.0390450581908226, -0.0001454247540095821, -0.009601131081581116, -6.437280717364047e-06, -0.00013851160474587232, -9.881961887003854e-05, -0.004473915323615074, -0.005023951176553965, -0.0007824220228940248], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005404680268839002, -2.1934269170742482e-05, -0.006982449442148209, -0.06521694362163544, -0.0354306697845459, -0.00613247649744153, -0.0012678211787715554, -0.09511619806289673, -0.010582049377262592, -0.3205888867378235, -0.00634654751047492, -0.00034350217902101576, -0.014249126426875591, -0.00012015574611723423, -0.0013658013194799423, -0.14215289056301117, -0.007568849716335535, -0.0001567479339428246, -0.00039295581518672407], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06270471960306168, -0.03283097594976425, -0.0002896366349887103, -0.002412862842902541, -1.764281842042692e-05, -0.00011646069469861686, -0.00017033556650858372, -0.006545769516378641, -0.007946898229420185, -0.0010806442005559802], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006710730958729982, -8.583032467868179e-06, -0.011179663240909576, -0.022123325616121292, -0.022376667708158493, -0.008403417654335499, -0.010004376992583275, -0.06409020721912384, -0.007718382868915796, -0.1298089623451233, -0.11869391053915024, -0.3344961702823639, -0.013836654834449291, -0.0004567056894302368, -0.00045003299601376057], "finish_reason": "stop"}, {"text": " data.drop(target_column, axis=1)", "tokens": [" data", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.01613699086010456, -0.30568644404411316, -0.4932950437068939, -0.13839775323867798, -0.5887901782989502, -5.471556869451888e-05, -6.317892984952778e-05, -0.002033191965892911, -0.006842396222054958, -0.061098989099264145, -0.015414390712976456, -0.0243446696549654, -0.05181232839822769], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009321619756519794, -0.054349545389413834, -0.0008313775178976357, -1.764281842042692e-05, -1.6689286894688848e-06, -0.00028451209072954953, -0.006339677143841982], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.01797013357281685, -0.00026675479602999985, -0.0042399754747748375, -0.0016858663875609636, -0.002398948883637786, -0.00012206286191940308, -0.001591488253325224, -0.0002208704245276749, -0.002389791887253523, -5.745722592109814e-05, -0.00044907975825481117, -0.004292322788387537, -0.017273109406232834, -3.814689989667386e-06, -7.510157047363464e-06, -1.3947389561508317e-05, -5.006777428206988e-06, -0.0004151197790633887, -0.5850346684455872, -0.0013762774178758264, -0.023149704560637474, -0.00042274597217328846, -0.3717310428619385, -4.207999518257566e-05, -4.088794958079234e-05, -0.0339491032063961, -0.01367309968918562, -5.23315102327615e-05, -2.264974000354414e-06, -0.002630585338920355, -0.05986666679382324, 0.0, -5.245195097813848e-06, -0.008369608782231808, -0.0017921352991834283, -3.397406908334233e-05, -0.00017951308109331876, -0.0851597711443901, -0.0027772923931479454], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.002977701835334301, -1.156323378381785e-05, -0.0001037067049765028, -0.04495103284716606, -0.1793980896472931], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.022725971415638924, -0.000309657771140337, -0.0014059193199500442, -0.00018916724366135895, -0.0014002051902934909, -0.002488613361492753, -0.001321515068411827, -0.00042906138696707785, -0.01426299475133419, -0.00011884459672728553, -4.23184028477408e-05, -0.2572971284389496, -0.2544628977775574], "finish_reason": "stop"}], "metrics": {"energy": 329.78165776157385, "energy_per_token": 1.3515641711539912, "time": 14.502054, "time_per_token": 0.059434647540983605}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError('data must be a pandas DataFrame')", "tokens": [" Value", "Error", "('", "data", " must", " be", " a", " pandas", " Data", "Frame", "')", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -1.8535211086273193, -0.5241326093673706, -0.5579097270965576, -0.0036874888464808464, -0.07570329308509827, -0.8043334484100342, -0.23307493329048157, -0.0060830689035356045, -0.23268470168113708, -0.0004338276921771467], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5164614319801331, -0.008967483416199684, -0.026662776246666908, -0.00511587131768465, -0.00444970466196537], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004576589271891862, -1.1324817933200393e-05, -0.004769852384924889, -0.009289612993597984, -0.11245488375425339, -0.5594655275344849, -0.21976116299629211, -0.00847576092928648, -0.010524957440793514, -0.05129004642367363, -0.0015254301251843572, -7.092700980138034e-05, -0.0003268184664193541], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.12684950232505798, -2.8132995794294402e-05, -0.00014101465058047324, -0.001961690140888095, -5.721882189391181e-05, -0.005285219289362431, -1.0952352285385132, -0.0012987758964300156], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0006713996990583837, -4.1483970562694594e-05, -0.004132304340600967, -1.976651668548584], "finish_reason": "stop"}, {"text": " not pd.api.types.is_numeric_dtype(data[target_column]):", "tokens": [" not", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "data", "[", "target", "_", "column", "]", "):", "\n"], "logprobs": [-0.44981351494789124, -1.7699847221374512, -0.0001538873475510627, -0.17198365926742554, -0.00010418349120300263, -0.003084784373641014, -2.825220326485578e-05, -0.0005936052766628563, -0.0006447143969126046, -0.0016363576287403703, -0.0007574073388241231, -0.005283084698021412, -0.00013743886665906757, -0.0004993622424080968, -0.0037336894311010838, -0.03726763650774956, -0.00039295581518672407, -3.6954811548639555e-06, -2.145764938177308e-06, -0.015319186262786388, -0.02458070032298565, -0.002609421731904149], "finish_reason": "stop"}, {"text": " ValueError(\"data contains non numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " contains", " non", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.003267903346568346, -1.1086402082582936e-05, -0.00587747385725379, -0.07069680839776993, -0.3244319260120392, -1.8452554941177368, -0.21720775961875916, -2.9615859985351562, -0.26758068799972534, -0.09596466273069382, -0.01505488995462656, -0.0003713871701620519, -0.0007359656738117337], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05155648663640022, -0.044056084007024765, -0.0001431601122021675, -0.008029325865209103, -6.079655122448457e-06, -0.00016282663273159415, -7.795983401592821e-05, -0.004618690814822912, -0.006167072337120771, -0.0008378094644285738], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0006074252305552363, -2.0861407392658293e-05, -0.007295041810721159, -0.04298460856080055, -0.03574680536985397, -0.0062445527873933315, -0.0011523280991241336, -0.09911397099494934, -0.009153543971478939, -0.32539987564086914, -0.005243122112005949, -0.0003106111544184387, -0.015703821554780006, -0.00011467275908216834, -0.0012719882652163506, -0.16215473413467407, -0.0064459266141057014, -0.00013410145766101778, -0.0004102342063561082], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.07602927088737488, -0.02646787092089653, -0.0003228858404327184, -0.002723438898101449, -1.549708758830093e-05, -0.00011455356434453279, -0.00015555603022221476, -0.006421171594411135, -0.0065468354150652885, -0.000945121340919286], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006623220629990101, -9.059865078597795e-06, -0.010772881098091602, -0.023372508585453033, -0.02379491925239563, -0.007892612367868423, -0.011218800209462643, -0.06254325807094574, -0.00961045827716589, -0.11672326177358627, -0.1033446192741394, -0.3473362326622009, -0.014170265756547451, -0.000406301929615438, -0.0004114258335903287], "finish_reason": "stop"}, {"text": " data[[c for c in data if c != target_column]]", "tokens": [" data", "[[", "c", " for", " c", " in", " data", " if", " c", " ", "!", "=", " target", "_", "column", "]]", "\n"], "logprobs": [-0.014684688299894333, -2.351827383041382, -2.3909478187561035, -0.011669705621898174, -0.0041681560687720776, -0.0021074246615171432, -0.016474643722176552, -2.353588581085205, -0.016203029081225395, -0.10514682531356812, -1.4305104514278355e-06, -0.00013219437096267939, -0.012824560515582561, -1.1444026313256472e-05, -6.782778655178845e-05, -0.018715694546699524, -0.05496004968881607], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008934992365539074, -0.053130801767110825, -0.0008348317351192236, -2.0861407392658293e-05, -1.4305104514278355e-06, -0.0003175231395289302, -0.00848805345594883], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.013990543782711029, -0.00022671037004329264, -0.003367232158780098, -0.0017471539322286844, -0.0025222653057426214, -0.00011407678539399058, -0.0013740155845880508, -0.00019608005823101848, -0.002753040986135602, -4.994744449504651e-05, -0.00044526674901135266, -0.0042418744415044785, -0.018884392455220222, -4.291525328881107e-06, -7.986990567587782e-06, -8.583032467868179e-06, -5.125986263010418e-06, -0.0004640932602342218, -0.5742560625076294, -0.0011182728921994567, -0.02326349914073944, -0.0004182179400231689, -0.33199185132980347, -4.684815212385729e-05, -4.362964682513848e-05, -0.032131195068359375, -0.017928332090377808, -6.282132380874828e-05, -2.50339189733495e-06, -0.0020527022425085306, -0.062485918402671814, -2.3841855067985307e-07, -4.887569048150908e-06, -0.00948754046112299, -0.0018391376361250877, -5.030505417380482e-05, -0.00018273114983458072, -0.0760173350572586, -0.0024453280493617058], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.002878334140405059, -1.156323378381785e-05, -9.381330892210826e-05, -0.03977037966251373, -0.1658211648464203], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.022749394178390503, -0.0002466136065777391, -0.0008262557676061988, -0.0001954841281985864, -0.001341634662821889, -0.002841603709384799, -0.0015754204941913486, -0.0005108005134388804, -0.01416744478046894, -0.0001045410826918669, -3.433168603805825e-05, -0.3008159101009369, -0.23355743288993835], "finish_reason": "stop"}], "metrics": {"energy": 309.90116518402095, "energy_per_token": 1.3959511945226168, "time": 13.672979, "time_per_token": 0.06158999549549549}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(f\"{data} must be a DataFrame\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "data", "}", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -1.4155364036560059, -0.29484638571739197, -2.198727607727051, -0.34299665689468384, -0.1530715674161911, -2.8362796306610107, -0.006175602320581675, -0.23476475477218628, -0.6695263981819153, -0.017159802839159966, -0.5201680064201355, -0.0005094899097457528, -0.0011272035771980882], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5755280256271362, -0.008833969943225384, -0.02634979411959648, -0.006383860483765602, -0.005007938481867313], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004808938247151673, -1.1205610462639015e-05, -0.0049957213923335075, -0.007964519783854485, -0.0907142162322998, -0.6224352717399597, -0.21758709847927094, -0.006815993692725897, -0.009508322924375534, -0.04895904287695885, -0.0016251702327281237, -8.046303264563903e-05, -0.0003091811086051166], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.12845975160598755, -3.2305197237292305e-05, -0.00013016807497479022, -0.002369931200519204, -6.437094270950183e-05, -0.0065058572217822075, -1.030339241027832, -0.0012053137179464102], "finish_reason": "stop"}, {"text": " ValueError(f\"Column {target_column} not found in data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", " {", "target", "_", "column", "}", " not", " found", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0007581220706924796, -4.362964682513848e-05, -0.0042708381079137325, -0.7539724111557007, -0.02278365194797516, -2.7658209800720215, -0.4040006101131439, -0.0019026764202862978, -6.318072337307967e-06, -0.00018952481332235038, -0.08952474594116211, -0.7919313907623291, -0.574999213218689, -0.120947927236557, -0.0728868693113327, -0.06564682722091675, -0.016475582495331764, -0.0002611534437164664, -0.0005057962844148278], "finish_reason": "stop"}, {"text": " not data[target_column].dtype.is_numeric_type():", "tokens": [" not", " data", "[", "target", "_", "column", "]", ".", "d", "type", ".", "is", "_", "numeric", "_", "type", "():", "\n"], "logprobs": [-0.4547635018825531, -0.7070697546005249, -0.05204218998551369, -0.001910886145196855, -5.769562994828448e-05, -5.364403477869928e-06, -0.0006104036583565176, -7.784063927829266e-05, -1.4313896894454956, -0.601764976978302, -0.0850900337100029, -1.6571613550186157, -0.01741253025829792, -0.06006190925836563, -1.0400936603546143, -0.6780843734741211, -0.02357279136776924, -0.0026211924850940704], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain numeric values only.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " numeric", " values", " only", ".", "\"", ")", "\n"], "logprobs": [-0.0027202290948480368, -1.0609570381348021e-05, -0.006086149252951145, -0.06037607416510582, -0.3667014539241791, -0.25972980260849, -0.4309605062007904, -1.6537492275238037, -0.3589145839214325, -0.8623397946357727, -0.025340063497424126, -0.00649507949128747, -0.0003165697562508285, -0.0006873629172332585], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05298112332820892, -0.03634762018918991, -0.00014053787162993103, -0.008679167367517948, -5.722029527532868e-06, -0.0001515035255579278, -0.00010215714428341016, -0.0038602848071604967, -0.006886438932269812, -0.000734297966118902], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005625095800496638, -1.8358061424805783e-05, -0.008563227020204067, -0.05238818749785423, -0.0387105830013752, -0.00673630740493536, -0.0011262509506195784, -0.09632112830877304, -0.009612111374735832, -0.3110799491405487, -0.005135084502398968, -0.0003668589051812887, -0.014359827153384686, -0.0001230164198204875, -0.001292346976697445, -0.15823253989219666, -0.008422213606536388, -0.0001546025014249608, -0.0003939091111533344], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06266262382268906, -0.030950356274843216, -0.00034457468427717686, -0.0024127440992742777, -1.823885577323381e-05, -0.00014745102089364082, -0.00014149141497910023, -0.0065744295716285706, -0.006275472231209278, -0.0010567086283117533], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.0068135070614516735, -8.22540732769994e-06, -0.01041878666728735, -0.0213918536901474, -0.021883448585867882, -0.008219463750720024, -0.008872844278812408, -0.06938262283802032, -0.00809294544160366, -0.12696143984794617, -0.10485295951366425, -0.3053404986858368, -0.0121083939447999, -0.00042906138696707785, -0.0005494038923643529], "finish_reason": "stop"}, {"text": " data.iloc[:, :-1]", "tokens": [" data", ".", "il", "oc", "[:", ",", " :-", "1", "]", "\n"], "logprobs": [-0.01443808525800705, -0.4037937521934509, -1.5540387630462646, -0.0002543602604418993, -0.010380562394857407, -0.01172331441193819, -0.7282267212867737, -0.000626367807853967, -0.001347110839560628, -0.10583659261465073], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.011493422091007233, -0.06046820804476738, -0.0008437649230472744, -1.6927575416048057e-05, -1.311301275563892e-06, -0.00036113892565481365, -0.006747438106685877], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.013368140906095505, -0.00025817399728111923, -0.0036808375734835863, -0.0017489389283582568, -0.002704773796722293, -0.00012706902634818107, -0.0014075858052819967, -0.0002317160106031224, -0.002529280725866556, -5.2569914259947836e-05, -0.0004379982128739357, -0.004612402059137821, -0.017833834514021873, -3.6954811548639555e-06, -7.986990567587782e-06, -9.059865078597795e-06, -5.602820692729438e-06, -0.0004354958946350962, -0.7821528315544128], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0030189435929059982, -1.2516897186287679e-05, -8.964136941358447e-05, -0.04294806718826294, -0.15874947607517242], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)<|endoftext|># !/usr/bin/env python", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")<", "|", "end", "of", "text", "|>", "#", " ", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.023439234122633934, -0.00030250742565840483, -0.0012206730898469687, -0.0002299282787134871, -0.0011747133685275912, -0.0028716777451336384, -0.002306421985849738, -0.0004673104267567396, -0.013538450002670288, -8.582700684200972e-05, -5.1973900554003194e-05, -1.4328913688659668, -5.960462772236497e-07, -2.9802276912960224e-06, -4.9232225137529895e-05, -9.989239333663136e-05, -0.140858456492424, -1.6989450454711914, -3.218698501586914, -2.7589101791381836, -0.1212623342871666, -0.04816719889640808, -0.0002525725867599249, -0.007749966345727444, -0.0009211826254613698, -0.07622270286083221, -0.016516974195837975, -0.4939608573913574], "finish_reason": "stop"}], "metrics": {"energy": 310.5838204965593, "energy_per_token": 1.3742646924626518, "time": 13.669286, "time_per_token": 0.06048356637168142}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError('data must be a DataFrame')", "tokens": [" Value", "Error", "('", "data", " must", " be", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -1.8535211086273193, -0.5241326093673706, -0.5579097270965576, -0.0036874888464808464, -0.07570329308509827, -0.8187072277069092, -0.006277486216276884, -0.20228271186351776, -0.00048375347978435457], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5164614319801331, -0.008967483416199684, -0.026662776246666908, -0.00511587131768465, -0.00444970466196537], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004576589271891862, -1.1324817933200393e-05, -0.004769852384924889, -0.009289612993597984, -0.11245488375425339, -1.2689801454544067, -0.01275158952921629, -0.09367939084768295, -0.007709747180342674, -6.711257447022945e-05, -0.0002826052950695157], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.161590576171875, -2.610649426060263e-05, -0.0001147919538198039, -0.0023865809198468924, -5.864924969500862e-05, -0.004900112748146057, -0.9586178660392761, -0.0011801904765889049], "finish_reason": "stop"}, {"text": " ValueError(f\"target_column should be in data.columns but is {target_column}\")", "tokens": [" Value", "Error", "(", "f", "\"", "target", "_", "column", " should", " be", " in", " data", ".", "columns", " but", " is", " {", "target", "_", "column", "}\"", ")", "\n"], "logprobs": [-0.0006835508393123746, -3.4689302992774174e-05, -0.004633998032659292, -0.6957058310508728, -0.020182136446237564, -1.9006794691085815, -0.11110775917768478, -0.005005684681236744, -0.8976103067398071, -0.007848614826798439, -2.5491950511932373, -0.41424909234046936, -0.3826926350593567, -0.10085278004407883, -3.8394367694854736, -0.7062690854072571, -0.3857182264328003, -0.014628417789936066, -0.00017510310863144696, -0.00019393471302464604, -1.4422190189361572, -0.003031898057088256, -0.001743940869346261], "finish_reason": "stop"}, {"text": " not data[target_column].dtype.name == 'float64':", "tokens": [" not", " data", "[", "target", "_", "column", "]", ".", "d", "type", ".", "name", " ==", " '", "float", "6", "4", "':", "\n"], "logprobs": [-0.48595455288887024, -0.6470736861228943, -0.04877626895904541, -0.001960024470463395, -4.255681051290594e-05, -4.529942543740617e-06, -0.0005723983631469309, -6.365573790390044e-05, -1.471677303314209, -0.6009530425071716, -0.09826741367578506, -0.47414347529411316, -1.5676215887069702, -0.47173917293548584, -0.3484099209308624, -0.29272159934043884, -5.960462772236497e-07, -0.015743017196655273, -0.005874037276953459], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0033889738842844963, -1.1205610462639015e-05, -0.005521404556930065, -0.07894428074359894, -0.2812514305114746, -0.26034533977508545, -0.4869674742221832, -0.3102058172225952, -0.07894240319728851, -0.7420663833618164, -0.02221042290329933, -0.0037810755893588066, -0.000286657246761024, -0.0005667987279593945], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.04868157580494881, -0.038114167749881744, -0.00015245705435518175, -0.007643855642527342, -6.794906312279636e-06, -0.00013398226292338222, -8.999896090244874e-05, -0.004417186137288809, -0.006322856526821852, -0.0007877822499722242], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0006270825979299843, -2.2411095415009186e-05, -0.008327641524374485, -0.05306614190340042, -0.035655125975608826, -0.0067628310061991215, -0.0010796914575621486, -0.10164579004049301, -0.008168385364115238, -0.26742157340049744, -0.006143020931631327, -0.0003212174342479557, -0.015165501274168491, -0.00011598391574807465, -0.0011857867939397693, -0.1779116690158844, -0.007033706642687321, -0.0001554368354845792, -0.0003777029050979763], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.07124202698469162, -0.030148975551128387, -0.00032050241134129465, -0.0024674467276781797, -1.4066597032069694e-05, -0.00012087091454304755, -0.00016592556494288146, -0.0049655926413834095, -0.0069961813278496265, -0.0010562323732301593], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006532623432576656, -7.271740287251305e-06, -0.009963540360331535, -0.019933730363845825, -0.022618873044848442, -0.008420085534453392, -0.010403449647128582, -0.058987900614738464, -0.009211304597556591, -0.13062317669391632, -0.10314206033945084, -0.3025541305541992, -0.011943849734961987, -0.0003849719068966806, -0.000503770774230361], "finish_reason": "stop"}, {"text": " data.drop([target_column], axis=1)", "tokens": [" data", ".", "drop", "([", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.01573891006410122, -0.3772274851799011, -0.537590742111206, -2.1774654388427734, -0.013579493388533592, -7.986990567587782e-06, -4.8397800128441304e-05, -0.012792782858014107, -0.0006873629172332585, -0.011928300373256207, -0.055782727897167206, -0.009226305410265923, -0.03187049552798271, -0.03925689682364464], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009852943010628223, -0.054544057697057724, -0.0008425738196820021, -1.537788011773955e-05, -1.311301275563892e-06, -0.00032062159152701497, -0.006314564496278763], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.015903299674391747, -0.00028236693469807506, -0.0037889136001467705, -0.0017611959483474493, -0.0028716777451336384, -0.00011967896716669202, -0.0011643542675301433, -0.00023755589791107923, -0.0025541323702782393, -6.341733387671411e-05, -0.0004085659747943282, -0.004558528773486614, -0.01912066340446472, -3.6954811548639555e-06, -8.583032467868179e-06, -8.940656698541716e-06, -4.887569048150908e-06, -0.00044264530879445374, -0.7637752890586853], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0028760756831616163, -1.1801649634435307e-05, -9.42901024245657e-05, -0.050309620797634125, -0.15670594573020935], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.023524004966020584, -0.0003262225945945829, -0.0011367294937372208, -0.00018130090029444546, -0.0011332763824611902, -0.0024076304398477077, -0.0018534163245931268, -0.0004661188868340105, -0.011927004903554916, -0.00011145447206217796, -4.470248313737102e-05, -0.2378312200307846, -0.29618901014328003], "finish_reason": "stop"}], "metrics": {"energy": 326.14159711265563, "energy_per_token": 1.5311812071016697, "time": 13.244888, "time_per_token": 0.06218257276995305}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"Data is not a valid DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Data", " is", " not", " a", " valid", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -1.5359737873077393, -1.399320125579834, -0.020806150510907173, -0.07513650506734848, -3.172893762588501, -0.680996298789978, -0.02116720750927925, -0.8456214666366577, -0.030680101364850998, -0.00035470392322167754, -0.0008523407159373164], "finish_reason": "stop"}, {"text": " len(data) < 1:", "tokens": [" len", "(", "data", ")", " <", " ", "1", ":", "\n"], "logprobs": [-1.4391794204711914, -0.0001867835089797154, -0.0008553183870390058, -0.02934926748275757, -2.5331859588623047, -0.0016932449070736766, -0.20999036729335785, -0.04451420530676842, -0.00699203833937645], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00043871314846910536, -1.0251946150674485e-05, -0.005012208595871925, -0.00871213898062706, -0.09510958194732666, -1.2295348644256592, -0.009742332622408867, -0.08336305618286133, -0.008187658153474331, -7.271502545336261e-05, -0.00026973424246534705], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.15509025752544403, -3.099393507000059e-05, -9.297892393078655e-05, -0.0024425929877907038, -5.209310256759636e-05, -0.006521964445710182, -1.0329071283340454, -0.0012286503333598375], "finish_reason": "stop"}, {"text": " ValueError(\"target_column should be a column in data.\")", "tokens": [" Value", "Error", "(", "\"", "target", "_", "column", " should", " be", " a", " column", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0006661579827778041, -3.290122185717337e-05, -0.005223318003118038, -0.9520273804664612, -0.30576223134994507, -0.046485476195812225, -0.004132541362196207, -0.4205775856971741, -0.009715416468679905, -0.029307708144187927, -0.011729794554412365, -1.270889401435852, -0.06838850677013397, -0.03287331014871597, -0.003802452003583312, -0.00032908268622122705, -0.0004314445541240275], "finish_reason": "stop"}, {"text": " data[target_column].dtype not in [np.float, np.int, np.bool]:", "tokens": [" data", "[", "target", "_", "column", "]", ".", "d", "type", " not", " in", " [", "np", ".", "float", ",", " np", ".", "int", ",", " np", ".", "bool", "]:", "\n"], "logprobs": [-1.509808897972107, -0.05128653347492218, -0.00339788431301713, -5.364274329622276e-05, -5.364403477869928e-06, -0.000654602306894958, -0.00036244976217858493, -0.49000993371009827, -0.4870896637439728, -1.7002288103103638, -0.0007377525325864553, -0.29777297377586365, -0.2938198745250702, -3.814689989667386e-06, -0.36962929368019104, -2.009392738342285, -0.014564155600965023, -4.088794958079234e-05, -0.10198257863521576, -1.2001999616622925, -0.027444221079349518, -6.639736966462806e-05, -1.099644422531128, -0.2773647904396057, -0.0031981533393263817], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0031087901443243027, -1.1920858014491387e-05, -0.00603069644421339, -0.061674684286117554, -0.3396318852901459, -0.2643214762210846, -0.4640161991119385, -0.34077271819114685, -0.07676922529935837, -0.7139847278594971, -0.020896397531032562, -0.003768486902117729, -0.0002549561613705009, -0.0004812512779608369], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.04585474357008934, -0.04007449373602867, -0.00014888131408952177, -0.008555544540286064, -8.22540732769994e-06, -0.0001392267586197704, -7.009260298218578e-05, -0.0034677390940487385, -0.0064980401657521725, -0.0007674132939428091], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0006386386230587959, -2.3364747903542593e-05, -0.007986989803612232, -0.048927709460258484, -0.044508278369903564, -0.0062470403499901295, -0.0012309125158935785, -0.10665544867515564, -0.009980890899896622, -0.28606539964675903, -0.004908060654997826, -0.0002802217786666006, -0.014681399799883366, -0.00011729506513802335, -0.0012978235026821494, -0.13823580741882324, -0.006368816830217838, -0.00014983485743869096, -0.00035565727739594877], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06882204115390778, -0.03131909295916557, -0.0003095386200584471, -0.0023029730655252934, -1.4662635294371285e-05, -0.00010764019680209458, -0.00013886917440686375, -0.005643861833959818, -0.007006953936070204, -0.0010317008709535003], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", "\"", ")", "\n"], "logprobs": [-0.007159766741096973, -7.629365427419543e-06, -0.011763843707740307, -0.023536929860711098, -0.026431184262037277, -0.008818136528134346, -0.010722876526415348, -0.06621265411376953, -0.00838426686823368, -0.1237146407365799, -0.10900568217039108, -2.0160841941833496, -0.00037269797758199275, -0.0006754500791430473], "finish_reason": "stop"}, {"text": " data.drop(target_column, axis=1)", "tokens": [" data", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.020477082580327988, -0.27271270751953125, -0.42127326130867004, -0.14904481172561646, -0.7173195481300354, -4.768258077092469e-05, -5.98412734689191e-05, -0.0022052035201340914, -0.0076620737090706825, -0.06172892823815346, -0.016156580299139023, -0.025991998612880707, -0.05280892178416252], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009997885674238205, -0.051643773913383484, -0.0007731309160590172, -1.5258672647178173e-05, -1.5497195136049413e-06, -0.0002982171718031168, -0.005864674691110849], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y,", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", "\n"], "logprobs": [-0.015580007806420326, -0.000205018965061754, -0.004012629389762878, -0.0016250512562692165, -0.002644733991473913, -0.0001113352773245424, -0.001191501971334219, -0.00020394629973452538, -0.0024830244947224855, -5.030505417380482e-05, -0.00037448544753715396, -0.0038454411551356316, -0.020026158541440964, -2.861018856492592e-06, -8.106198947643861e-06, -8.34461570775602e-06, -4.6491513785440475e-06, -0.0004558716027531773, -0.5353580117225647, -0.001091480371542275, -0.023754408583045006, -0.000379132863599807, -2.669961929321289], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003135885111987591, -1.2636104656849056e-05, -8.737658936297521e-05, -0.045215632766485214, -0.19444048404693604], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)<|endoftext|>\"\"\"", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.0282610971480608, -0.0002743821241892874, -0.0012043612077832222, -0.0001984637783607468, -0.0013091336004436016, -0.002751733176410198, -0.0016771787777543068, -0.0004440752090886235, -0.013126978650689125, -0.000105375460407231, -4.541770613286644e-05, -1.4906015396118164, -4.768370445162873e-07, -2.861018856492592e-06, -6.103329360485077e-05, -8.844937838148326e-05, -2.1221909523010254, -0.004354993812739849, -0.0016323111485689878, -0.0008183944155462086, -0.24783319234848022], "finish_reason": "stop"}], "metrics": {"energy": 311.87247416877767, "energy_per_token": 1.3500972907739293, "time": 14.085527, "time_per_token": 0.06097630735930736}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"data must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "data", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -0.5487797260284424, -0.5160593390464783, -0.003410002216696739, -0.06949394941329956, -0.7328720688819885, -0.19974543154239655, -0.0071431961841881275, -0.2425071895122528, -0.0002836778585333377, -0.0006249382277019322], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.6592020988464355, -0.00016616393986623734, -0.0009135602158494294, -0.032271675765514374, -0.11486594378948212, -0.0005664412747137249, -3.528532761265524e-05, -0.006053802091628313, -0.004773648921400309], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00047910655848681927, -1.2397689715726301e-05, -0.00522094639018178, -0.008109737187623978, -0.09542907774448395, -1.130941390991211, -0.010659660212695599, -0.09492334723472595, -0.006334228441119194, -7.116541382856667e-05, -0.000277123210253194], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.1670401245355606, -2.407998726994265e-05, -9.798523387871683e-05, -0.0022156708873808384, -6.532455881824717e-05, -0.005350673571228981, -1.0858285427093506, -0.0012519863666966558], "finish_reason": "stop"}, {"text": " ValueError(f\"The target column '{target_column}' is not in data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "The", " target", " column", " '", "{", "target", "_", "column", "}'", " is", " not", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0005952732171863317, -3.766942609217949e-05, -0.005002007819712162, -0.7903356552124023, -0.021358830854296684, -3.8536603450775146, -1.2022451162338257, -0.16086311638355255, -0.7249108552932739, -0.00047791501856409013, -0.0004786299541592598, -1.5258672647178173e-05, -6.258291978156194e-05, -0.0011655449634417892, -0.3485032916069031, -0.01611834019422531, -1.0921428203582764, -0.5695509910583496, -0.09124025702476501, -0.07785353809595108, -0.0006593675934709609, -0.0006825978052802384], "finish_reason": "stop"}, {"text": " data[target_column].dtypes == np.float64:", "tokens": [" data", "[", "target", "_", "column", "]", ".", "d", "types", " ==", " np", ".", "float", "6", "4", ":", "\n"], "logprobs": [-1.4475345611572266, -0.06021659076213837, -0.0036596960853785276, -4.851700214203447e-05, -6.079655122448457e-06, -0.0007742029847577214, -0.00030071981018409133, -0.4930347204208374, -0.9660332202911377, -2.099226474761963, -1.384871006011963, -7.366862701019272e-05, -2.0366744995117188, -0.20574180781841278, -1.1920858014491387e-05, -0.18250247836112976, -0.015733864158391953], "finish_reason": "stop"}, {"text": " ValueError(\"data contains non-numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " contains", " non", "-", "numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0036662286147475243, -1.2278481335670222e-05, -0.005729679949581623, -0.07111801952123642, -0.3246825039386749, -1.9528087377548218, -0.19168217480182648, -0.06512044370174408, -0.05560559406876564, -0.19894741475582123, -0.05018174275755882, -0.010083449073135853, -0.000259723310591653, -0.0006002769805490971], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05842741206288338, -0.04212184622883797, -0.00016819016309455037, -0.008604711852967739, -4.887569048150908e-06, -0.00011431517486926168, -9.321732068201527e-05, -0.004213384818285704, -0.005491765681654215, -0.0006518622976727784], "finish_reason": "stop"}, {"text": " ValueError(\"test_size must be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " must", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.000582525331992656, -2.1219027985353023e-05, -0.007428760174661875, -0.050572581589221954, -0.03813046216964722, -0.007038915064185858, -0.0011185110779479146, -2.8544869422912598, -0.00756754819303751, -0.24288585782051086, -0.00316987163387239, -0.0003430254873819649, -0.012093671597540379, -0.00010442188795423135, -0.001026103738695383, -0.17565830051898956, -0.006266468670219183, -0.00014625910262111574, -0.00035124807618558407], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.0635099783539772, -0.029016977176070213, -0.00031609306461177766, -0.0025617422070354223, -2.1576648578047752e-05, -0.00014375607133843005, -0.00016020445036701858, -0.005570246838033199, -0.007030155509710312, -0.0010806442005559802], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an int.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " int", ".", "\"", ")", "\n"], "logprobs": [-0.00727172801271081, -8.583032467868179e-06, -0.011333608068525791, -0.020130613818764687, -0.022497545927762985, -0.008597147651016712, -0.0096397390589118, -0.06843871623277664, -0.00845850259065628, -0.11679539084434509, -2.4237444400787354, -0.6056511402130127, -0.022994188591837883, -0.0003457663697190583, -0.0004887578543275595], "finish_reason": "stop"}, {"text": " data[list(data.columns)[:-1]]", "tokens": [" data", "[", "list", "(", "data", ".", "columns", ")", "[:", "-", "1", "]]", "\n"], "logprobs": [-0.01601933129131794, -1.6778889894485474, -2.75125789642334, -0.0032277412246912718, -0.02840525098145008, -0.027299001812934875, -0.08850309997797012, -1.8202686309814453, -0.023916788399219513, -0.020170804113149643, -0.003376380307599902, -0.0018744770204648376, -0.08659344911575317], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009894492104649544, -0.05887618660926819, -0.000874851830303669, -1.7046782886609435e-05, -1.5497195136049413e-06, -0.00037174468161538243, -0.006464758887887001], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.015987655147910118, -0.000179036331246607, -0.004018922336399555, -0.0008386432309634984, -0.002520362613722682, -9.655486064730212e-05, -0.0017213303362950683, -0.00020251607929822057, -0.0032043324317783117, -6.09140915912576e-05, -0.00042358008795417845, -0.003915383480489254, -0.017339659854769707, -3.099436753473128e-06, -7.748573807475623e-06, -9.894321920000948e-06, -4.6491513785440475e-06, -0.0005081792478449643, -0.7982799410820007], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0029307531658560038, -1.2397689715726301e-05, -8.904537389753386e-05, -0.04629690200090408, -0.15034940838813782], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.02683129906654358, -0.00027164106722921133, -0.0008669908274896443, -0.0001991788885788992, -0.0012956805294379592, -0.002079587895423174, -0.0015323336701840162, -0.00041345154750160873, -0.013146508485078812, -0.00012182447244413197, -3.576214658096433e-05, -0.24689339101314545, -0.311269611120224], "finish_reason": "stop"}], "metrics": {"energy": 307.6742386293409, "energy_per_token": 1.4244177714321338, "time": 13.456114, "time_per_token": 0.062296824074074074}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError('Data should be a DataFrame')", "tokens": [" Value", "Error", "('", "Data", " should", " be", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -1.8535211086273193, -1.5423630475997925, -2.7256433963775635, -0.007541992701590061, -0.28454023599624634, -1.262877106666565, -0.02520383708178997, -0.6273393034934998, -0.0007151191821321845], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.5465288162231445, -0.0001787979417713359, -0.0008624648326076567, -0.03308427333831787, -0.13139626383781433, -0.0006578188622370362, -3.504691630951129e-05, -0.006609720177948475, -0.005060957279056311], "finish_reason": "stop"}, {"text": " ValueError(\"data should be a non-empty DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " be", " a", " non", "-", "empty", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.0004576589271891862, -1.1324817933200393e-05, -0.004769852384924889, -0.009289612993597984, -0.11245488375425339, -0.5594655275344849, -2.6964704990386963, -1.5628498792648315, -0.035883329808712006, -0.04842288792133331, -0.001427227514795959, -0.0469280406832695, -0.0024437822867184877, -0.038932815194129944, -0.0012132910778746009, -0.0001255195093108341, -0.000289159914245829], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.12684950232505798, -2.8132995794294402e-05, -0.00014101465058047324, -0.001961690140888095, -5.721882189391181e-05, -0.005285219289362431, -0.409995436668396, -0.004686799366027117, -0.001462224405258894, -0.001090646837837994], "finish_reason": "stop"}, {"text": " ValueError(f\"data does not contain the column {target_column}.\")", "tokens": [" Value", "Error", "(", "f", "\"", "data", " does", " not", " contain", " the", " column", " {", "target", "_", "column", "}", ".", "\"", ")", "\n"], "logprobs": [-0.0006713996990583837, -4.1483970562694594e-05, -0.004132304340600967, -0.8526549339294434, -0.020117761567234993, -1.2212108373641968, -1.314317226409912, -0.003002661047503352, -0.13350671529769897, -1.255732774734497, -0.5887526869773865, -0.6962634325027466, -0.0014674619305878878, -3.6238969187252223e-05, -0.00013648532330989838, -0.4374687373638153, -0.007110409904271364, -0.00551998196169734, -0.0002585315378382802, -0.0004938812926411629], "finish_reason": "stop"}, {"text": " data[target_column].nunique() > 1:", "tokens": [" data", "[", "target", "_", "column", "]", ".", "nun", "ique", "()", " >", " ", "1", ":", "\n"], "logprobs": [-1.304965615272522, -0.036575205624103546, -0.003991494886577129, -3.814624506048858e-05, -5.125986263010418e-06, -0.0006993946735747159, -0.00032848684350028634, -2.548774242401123, -0.18703602254390717, -0.0012871085200458765, -1.6287428140640259, -0.026273740455508232, -0.07523071765899658, -0.05419124290347099, -0.011211727745831013], "finish_reason": "stop"}, {"text": " ValueError(\"data contains non-numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " contains", " non", "-", "numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0030600647442042828, -1.168244216387393e-05, -0.0046309130266308784, -0.0656082034111023, -0.31292858719825745, -1.7604305744171143, -0.2299065887928009, -0.05115164443850517, -0.054732438176870346, -0.19409850239753723, -0.04938405752182007, -0.011437560431659222, -0.0002890407631639391, -0.0006543640629388392], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.04723362252116203, -0.041557427495718, -0.00014029949670657516, -0.008045763708651066, -6.198863957251888e-06, -0.000120751719805412, -8.40390202938579e-05, -0.004729631822556257, -0.006326054688543081, -0.0007956438348628581], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0006307758158072829, -1.645074735279195e-05, -0.008121679536998272, -0.05257652327418327, -0.030655361711978912, -0.0073410761542618275, -0.0013616346986964345, -0.08955319225788116, -0.009022891521453857, -0.27420324087142944, -0.005991119425743818, -0.0003071551618631929, -0.016222381964325905, -0.00010585224663373083, -0.001261153956875205, -0.1614665389060974, -0.008315464481711388, -0.0001726001501083374, -0.0003680505615193397], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06974602490663528, -0.03199334815144539, -0.00025996167096309364, -0.0023752828128635883, -1.9192511899746023e-05, -0.00011383838864276186, -0.000169382052263245, -0.005302057601511478, -0.006127144675701857, -0.0011095802765339613], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.005768438335508108, -9.059865078597795e-06, -0.012978722341358662, -0.022986384108662605, -0.021313903853297234, -0.0077125863172113895, -0.009113499894738197, -0.0713428258895874, -0.008862446993589401, -0.12490139901638031, -0.10971075296401978, -0.325255811214447, -0.012359458021819592, -0.0003830652858596295, -0.000507464399561286], "finish_reason": "stop"}, {"text": " data.drop(target_column, axis=1)", "tokens": [" data", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.014660841785371304, -0.2747343182563782, -0.46580883860588074, -0.13167312741279602, -0.6850685477256775, -4.8993817472364753e-05, -5.2689116273541003e-05, -0.0020584126468747854, -0.007133963983505964, -0.06079144403338432, -0.014182841405272484, -0.025857718661427498, -0.04362879693508148], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.010636070743203163, -0.059215668588876724, -0.0008484101272188127, -1.847726889536716e-05, -1.311301275563892e-06, -0.000278195773717016, -0.007204150315374136], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.017470166087150574, -0.0002449450839776546, -0.0038505473639816046, -0.0015598285244777799, -0.0026167933829128742, -0.00010907054820563644, -0.0012205539969727397, -0.0002586507180240005, -0.002697997260838747, -5.1616290875244886e-05, -0.0003843760641757399, -0.004297664389014244, -0.016004197299480438, -3.576272320060525e-06, -7.867782187531702e-06, -8.583032467868179e-06, -5.245195097813848e-06, -0.0004273931554052979, -0.768496572971344], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003024172969162464, -1.1920858014491387e-05, -8.487341256113723e-05, -0.04360882565379143, -0.15192177891731262], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)<|endoftext|>import pandas as pd", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")<", "|", "end", "of", "text", "|>", "import", " pandas", " as", " pd", "\n"], "logprobs": [-0.023169854655861855, -0.00026341783814132214, -0.0010623055277392268, -0.000176652567461133, -0.0011310139670968056, -0.0028734607622027397, -0.0015791100449860096, -0.0004158347437623888, -0.012093789875507355, -0.00010513706365600228, -3.886147169396281e-05, -1.531789779663086, -7.152555099310121e-07, -2.861018856492592e-06, -5.6980417866725475e-05, -0.00012206286191940308, -0.1593591421842575, -1.2015464305877686, -1.1815556287765503, -0.01250415574759245, -0.001379491644911468, -0.0031346967443823814], "finish_reason": "stop"}], "metrics": {"energy": 321.7275575428011, "energy_per_token": 1.4235732634637217, "time": 13.859546, "time_per_token": 0.06132542477876106}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"data must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "data", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -0.5487797260284424, -0.5160593390464783, -0.003410002216696739, -0.06949394941329956, -0.7328720688819885, -0.19974543154239655, -0.0071431961841881275, -0.2425071895122528, -0.0002836778585333377, -0.0006249382277019322], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-1.567685604095459, -0.17464593052864075, -0.11390849947929382, -0.19887472689151764, -0.002804396441206336, -0.012324722483754158], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00047910655848681927, -1.2397689715726301e-05, -0.00522094639018178, -0.008109737187623978, -0.09542907774448395, -1.130941390991211, -0.010659660212695599, -0.09492334723472595, -0.006334228441119194, -7.116541382856667e-05, -0.000277123210253194], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.1670401245355606, -2.407998726994265e-05, -9.798523387871683e-05, -0.0022156708873808384, -6.532455881824717e-05, -0.005350673571228981, -0.4147680401802063, -0.005123936105519533, -0.001500672078691423, -0.0008347125840373337], "finish_reason": "stop"}, {"text": " ValueError(f\"target_column should be a column in data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "target", "_", "column", " should", " be", " a", " column", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0005952732171863317, -3.766942609217949e-05, -0.005002007819712162, -0.7903356552124023, -0.021358830854296684, -1.9647367000579834, -0.09448309242725372, -0.0049257357604801655, -0.9121001958847046, -0.007042466197162867, -0.15303300321102142, -0.005212526302784681, -1.2474846839904785, -0.05847598612308502, -0.34887608885765076, -1.1221911907196045, -0.034115713089704514, -0.0009765623253770173], "finish_reason": "stop"}, {"text": " not data.apply(lambda x: x.dtype.name in ['int64', 'float64'], axis=1).all():", "tokens": [" not", " data", ".", "apply", "(", "lambda", " x", ":", " x", ".", "d", "type", ".", "name", " in", " ['", "int", "6", "4", "'", ",", " '", "float", "6", "4", "']", ",", " axis", "=", "1", ")", ".", "all", "():", "\n"], "logprobs": [-0.40914347767829895, -0.5994899272918701, -2.9581000804901123, -1.9217774868011475, -0.003635822329670191, -0.6350117325782776, -0.2347640097141266, -0.0006704466650262475, -0.5798768401145935, -0.014478152617812157, -0.5328176021575928, -0.16116482019424438, -0.6320170164108276, -0.41553226113319397, -1.106764316558838, -0.6041054129600525, -0.4947873055934906, -0.9020775556564331, -3.3378546504536644e-06, -0.0038766723591834307, -0.0003228858404327184, -0.027951514348387718, -0.028206050395965576, -0.021023757755756378, -1.5735502529423684e-05, -0.34474363923072815, -0.0026057357899844646, -0.02967739850282669, -0.02442971244454384, -0.1447969675064087, -0.004596264101564884, -0.00042167355422861874, -0.007097744848579168, -0.00782282929867506, -0.0038897343911230564], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.00318971648812294, -1.0251946150674485e-05, -0.005263044033199549, -0.06983651965856552, -0.3297556936740875, -0.2709442973136902, -0.4014833867549896, -1.5307247638702393, -0.363233745098114, -0.5824236869812012, -0.005990882404148579, -0.0002302858338225633, -0.000510204816237092], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05790283530950546, -0.03665507584810257, -0.0001481661747675389, -0.00849703699350357, -5.602820692729438e-06, -0.00014888131408952177, -8.415821503149346e-05, -0.0046002985909581184, -0.0059171742759644985, -0.0007820646860636771], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005834784242324531, -2.2053474822314456e-05, -0.0087135573849082, -0.04550249129533768, -0.03400832787156105, -0.005734777078032494, -0.0012000747956335545, -0.0903923436999321, -0.010897763073444366, -0.3033250570297241, -0.005591229535639286, -0.0002858230145648122, -0.015393495559692383, -0.00010740180005086586, -0.001312586129643023, -0.15607252717018127, -0.006590417120605707, -0.00013731967192143202, -0.000426439888542518], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.07939473539590836, -0.028355078771710396, -0.0003036991402041167, -0.0024188091047108173, -1.5258672647178173e-05, -0.00013076403411105275, -0.00014041867689229548, -0.006070864852517843, -0.00768608832731843, -0.0010265801101922989], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006409682333469391, -9.059865078597795e-06, -0.010956484824419022, -0.026218581944704056, -0.02396148256957531, -0.006846184842288494, -0.009803364053368568, -0.06335121393203735, -0.008865991607308388, -0.12600372731685638, -0.10790092498064041, -0.32012489438056946, -0.012129358015954494, -0.00042763148667290807, -0.0005122303264215589], "finish_reason": "stop"}, {"text": " data[data.columns[:-1]]", "tokens": [" data", "[", "data", ".", "columns", "[:", "-", "1", "]]", "\n"], "logprobs": [-0.016203146427869797, -1.5382367372512817, -0.1421186625957489, -0.011989198625087738, -0.0033420443069189787, -0.5383813977241516, -0.019679535180330276, -0.0034746292512863874, -0.0027091726660728455, -0.06600946187973022], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.011121544986963272, -0.06036832928657532, -0.0008328068652190268, -1.5020257706055418e-05, -1.4305104514278355e-06, -0.00036435641231946647, -0.006922902539372444], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.013584432192146778, -0.00018535325943958014, -0.004056084435433149, -0.001498291501775384, -0.002499315422028303, -0.00010477947944309562, -0.0012537722941488028, -0.0002422039397060871, -0.0028221087995916605, -5.876845170860179e-05, -0.00046969347749836743, -0.003765280358493328, -0.016853561624884605, -3.4570634852570947e-06, -7.510157047363464e-06, -7.986990567587782e-06, -5.125986263010418e-06, -0.0005067494930699468, -0.5736159086227417, -0.0010345588671043515, -0.0232975073158741, -0.00044907975825481117, -0.3297412097454071, -4.672895011026412e-05, -5.1973900554003194e-05, -0.03560888394713402, -0.014439965598285198, -5.376194530981593e-05, -2.264974000354414e-06, -0.0022034193389117718, -0.0657922774553299, -2.3841855067985307e-07, -4.768360213347478e-06, -0.0084060188382864, -0.0017689309315755963, -4.2914423829643056e-05, -0.00013219437096267939, -0.0908486619591713, -0.0028937868773937225], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0031262594275176525, -1.1920858014491387e-05, -9.142934868577868e-05, -0.04470403119921684, -0.1331612765789032], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.02760159596800804, -0.00028832571115344763, -0.0011848341673612595, -0.00015984688070602715, -0.0012752028414979577, -0.0027419847901910543, -0.001482222112827003, -0.00043406602344475687, -0.013239332474768162, -9.97731985989958e-05, -3.0278701160568744e-05, -0.2629409432411194, -0.2781560719013214], "finish_reason": "stop"}], "metrics": {"energy": 362.00679852485655, "energy_per_token": 1.4775787694892104, "time": 14.49772, "time_per_token": 0.059174367346938775}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -0.5487797260284424, -0.5160593390464783, -0.003410002216696739, -0.06949394941329956, -0.8551598191261292, -0.007620904594659805, -0.224057137966156, -0.00023731753753963858, -0.0005239067832008004], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5250754952430725, -0.007835722528398037, -0.031535692512989044, -0.004485901445150375, -0.0050082942470908165], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00047910655848681927, -1.2397689715726301e-05, -0.00522094639018178, -0.008109737187623978, -0.09542907774448395, -1.130941390991211, -0.010659660212695599, -0.09492334723472595, -0.006334228441119194, -7.116541382856667e-05, -0.000277123210253194], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.1670401245355606, -2.407998726994265e-05, -9.798523387871683e-05, -0.0022156708873808384, -6.532455881824717e-05, -0.005350673571228981, -1.0858285427093506, -0.0012519863666966558], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0005952732171863317, -3.766942609217949e-05, -0.005002007819712162, -2.0513010025024414], "finish_reason": "stop"}, {"text": " not data.dtypes[target_column].is_numeric():", "tokens": [" not", " data", ".", "d", "types", "[", "target", "_", "column", "]", ".", "is", "_", "numeric", "():", "\n"], "logprobs": [-0.40914347767829895, -0.5994899272918701, -2.9581000804901123, -0.8336312770843506, -0.0009553635609336197, -0.3918578028678894, -0.0017961811972782016, -2.9444261599564925e-05, -3.2186455882765586e-06, -0.00014006110723130405, -0.008933693170547485, -0.28111934661865234, -0.06837046891450882, -0.017608974128961563, -0.03796590119600296, -0.0028423171024769545], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.00318971648812294, -1.0251946150674485e-05, -0.005263044033199549, -0.06983651965856552, -0.3297556936740875, -0.2709442973136902, -0.4014833867549896, -0.3499862849712372, -0.08311845362186432, -0.6760059595108032, -0.020514339208602905, -0.004430003929883242, -0.0002609150833450258, -0.0005465444410219789], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05790283530950546, -0.03665507584810257, -0.0001481661747675389, -0.00849703699350357, -5.602820692729438e-06, -0.00014888131408952177, -8.415821503149346e-05, -0.0046002985909581184, -0.0059171742759644985, -0.0007820646860636771], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be a fraction between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " a", " fraction", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005834784242324531, -2.2053474822314456e-05, -0.0087135573849082, -0.04550249129533768, -0.03400832787156105, -0.005734777078032494, -0.0012000747956335545, -0.0903923436999321, -0.010897763073444366, -1.7782148122787476, -0.9640600085258484, -0.12636961042881012, -0.008617948740720749, -0.0003133521240670234, -0.01136389933526516, -0.00012659224739763886, -0.0010063351364806294, -0.05294686555862427, -0.00393533194437623, -0.00019667598826345056, -0.0005161621957086027], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06695199012756348, -0.025722259655594826, -0.00033539868309162557, -0.002418452175334096, -2.038458114839159e-05, -0.00014065706636756659, -0.00015662873920518905, -0.005895961541682482, -0.008259544149041176, -0.0009844223968684673], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", "\"", ")", "\n"], "logprobs": [-0.006903368514031172, -8.22540732769994e-06, -0.01148576196283102, -0.021182497963309288, -0.02536679618060589, -0.009305438958108425, -0.008749482221901417, -0.0640292689204216, -0.00835695955902338, -0.11423075944185257, -0.1040927916765213, -2.040595054626465, -0.0004101150552742183, -0.0006019449210725725], "finish_reason": "stop"}, {"text": " data.iloc[:, :-1]", "tokens": [" data", ".", "il", "oc", "[:", ",", " :-", "1", "]", "\n"], "logprobs": [-0.015853317454457283, -0.31743764877319336, -1.4075860977172852, -0.0002864189154934138, -0.008246774785220623, -0.011143000796437263, -0.7274219989776611, -0.0008216104470193386, -0.0012237686896696687, -0.1358652114868164], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009545045904815197, -0.06145184487104416, -0.0009765623253770173, -1.7881233361549675e-05, -1.7881377516459906e-06, -0.0002848696312867105, -0.006887386087328196], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.01631363108754158, -0.00022468426323030144, -0.0029872101731598377, -0.0019481267081573606, -0.0024975319392979145, -0.0001072826053132303, -0.0012266262201592326, -0.00024244230007752776, -0.0023405556567013264, -4.60137271147687e-05, -0.0005160430446267128, -0.004117939155548811, -0.017159216105937958, -3.814689989667386e-06, -9.298280929215252e-06, -9.536697689327411e-06, -5.245195097813848e-06, -0.0005050813779234886, -0.6833970546722412, -0.0011374439345672727, -0.022187454625964165, -0.0004880429187323898, -0.28764697909355164, -3.659658250398934e-05, -5.23315102327615e-05, -0.03406352177262306, -0.014670944772660732, -4.827859811484814e-05, -3.2186455882765586e-06, -0.0022254243958741426, -0.06291799247264862, -2.3841855067985307e-07, -5.006777428206988e-06, -0.008659313432872295, -0.0017902314430102706, -4.470248313737102e-05, -0.00012718822108581662, -0.07926468551158905, -0.0026755272410809994], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003050676081329584, -1.1801649634435307e-05, -7.939023635117337e-05, -0.0478016696870327, -0.13192462921142578], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.022346241399645805, -0.00026067672297358513, -0.0010400369064882398, -0.00022921319759916514, -0.001529715140350163, -0.003460967680439353, -0.002100881887599826, -0.00046206763363443315, -0.012152205221354961, -0.00012516192509792745, -4.6967357775429264e-05, -0.21439838409423828, -0.2781866788864136], "finish_reason": "stop"}], "metrics": {"energy": 303.3874022274017, "energy_per_token": 1.4447019153685796, "time": 13.027568, "time_per_token": 0.0620360380952381}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"data is not a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " not", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -0.5487797260284424, -1.627244472503662, -0.017343994230031967, -0.04481368884444237, -0.195293590426445, -0.006947644986212254, -1.404954195022583, -0.026561787351965904, -0.00033301531220786273, -0.0009970461251214147], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5250754952430725, -0.007835722528398037, -0.031535692512989044, -0.004485901445150375, -0.0050082942470908165], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00047910655848681927, -1.2397689715726301e-05, -0.00522094639018178, -0.008109737187623978, -0.09542907774448395, -0.6119651198387146, -0.21730166673660278, -0.0076601807959377766, -0.009351499378681183, -0.05056034028530121, -0.0016477829776704311, -7.664863369427621e-05, -0.0002812943421304226], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.1493338793516159, -1.883488948806189e-05, -0.00013243274588603526, -0.002360179089009762, -5.94836674281396e-05, -0.006747792940586805, -0.9567563533782959, -0.0013369916705414653], "finish_reason": "stop"}, {"text": " ValueError(f\"target_column should be a column of data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "target", "_", "column", " should", " be", " a", " column", " of", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0005872909096069634, -4.053033626405522e-05, -0.004817664157599211, -0.7074559926986694, -0.02034182660281658, -1.9924119710922241, -0.09375374019145966, -0.0055410838685929775, -0.9076462984085083, -0.007618302013725042, -0.1696089208126068, -0.00545536819845438, -0.4065854549407959, -0.04106362536549568, -0.3134698271751404, -0.7986516952514648, -0.020314259454607964, -0.0007351318490691483], "finish_reason": "stop"}, {"text": " data[target_column].dtypes != 'float64':", "tokens": [" data", "[", "target", "_", "column", "]", ".", "d", "types", " ", "!", "=", " '", "float", "6", "4", "':", "\n"], "logprobs": [-1.5399699211120605, -0.037861913442611694, -0.0038263218011707067, -6.341733387671411e-05, -4.529942543740617e-06, -0.0007494263118132949, -0.00038521020906046033, -0.43393436074256897, -0.9938321113586426, -0.8192154169082642, -1.728519782773219e-05, -3.40932747349143e-05, -0.833198606967926, -0.06956389546394348, -0.023863712325692177, -1.0728830375228426e-06, -0.006036858074367046, -0.008628231473267078], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric columns.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0029812674038112164, -1.2636104656849056e-05, -0.004738886374980211, -0.07645519822835922, -0.33535316586494446, -0.2873619794845581, -0.40579360723495483, -0.3204984962940216, -0.07967987656593323, -1.1982582807540894, -0.02672928385436535, -0.005066176410764456, -0.0002766464895103127, -0.0006119524477981031], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05325581878423691, -0.03334096446633339, -0.0001248043408850208, -0.008951415307819843, -6.198863957251888e-06, -0.00017093151109293103, -0.00011944057769142091, -0.0038669349160045385, -0.007251609116792679, -0.000731558189727366], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005472592893056571, -1.5616295058862306e-05, -0.008180209435522556, -0.045906323939561844, -0.0352158322930336, -0.006378174759447575, -0.0011211306555196643, -0.1017756462097168, -0.008932984434068203, -0.2996681332588196, -0.005209680180996656, -0.00029237763374112546, -0.014652852900326252, -0.00011216964776394889, -0.0012741313548758626, -0.16560298204421997, -0.007627884857356548, -0.00019441144831944257, -0.00044741155579686165], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.07092126458883286, -0.025523684918880463, -0.00031549722189083695, -0.0030655316077172756, -1.7165990357170813e-05, -0.0001267114421352744, -0.00015376816736534238, -0.005490580108016729, -0.0072642723098397255, -0.0010833829874172807], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006704928819090128, -8.821448318485636e-06, -0.011917109601199627, -0.023243118077516556, -0.02233166992664337, -0.008458739146590233, -0.009936748072504997, -0.06504113972187042, -0.008372209034860134, -0.1277998983860016, -0.10236047208309174, -0.3181687891483307, -0.013714726082980633, -0.0003980797773692757, -0.00043215948971919715], "finish_reason": "stop"}, {"text": " data.drop([target_column], axis=1)", "tokens": [" data", ".", "drop", "([", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.014814133755862713, -0.26327282190322876, -0.4846600890159607, -1.9905027151107788, -0.014734847471117973, -8.4638240878121e-06, -4.2914423829643056e-05, -0.01609875075519085, -0.0006890306831337512, -0.01255783811211586, -0.054038673639297485, -0.008976462297141552, -0.03945975378155708, -0.044053804129362106], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.011148542165756226, -0.05993538349866867, -0.0008973624208010733, -1.549708758830093e-05, -1.5497195136049413e-06, -0.0003216941258870065, -0.006635654717683792], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, random_state=random_state, test_size=test_size, stratify=y)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " random", "_", "state", "=", "random", "_", "state", ",", " test", "_", "size", "=", "test", "_", "size", ",", " strat", "ify", "=", "y", ")", "\n"], "logprobs": [-0.016336265951395035, -0.00020180096908006817, -0.0029350321274250746, -0.001972516765818, -0.0029554758220911026, -0.00011717586312443018, -0.001517931348644197, -0.00025328766787424684, -0.002360179089009762, -5.07818695041351e-05, -0.00040844682371243834, -0.004433445632457733, -0.013630413450300694, -3.6954811548639555e-06, -7.390948667307384e-06, -6.198863957251888e-06, -4.6491513785440475e-06, -0.0004680253332480788, -0.5978363156318665, -0.0012671068543568254, -0.02552810125052929, -0.00039569655200466514, -1.5854884386062622, -1.645074735279195e-05, -7.83174327807501e-05, -0.03166690096259117, -0.0032522189430892467, -9.524368942948058e-05, -4.470248313737102e-05, -0.013156509026885033, -0.030938103795051575, -7.152555099310121e-07, -7.891343557275832e-05, -0.010926770977675915, -0.008413229137659073, -5.2569914259947836e-05, -1.0490362910786644e-05, -1.2784892320632935, -1.447561502456665, -0.013501990586519241, -0.014427745714783669, -0.8440123796463013, -0.36172330379486084, -0.006029985379427671], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0029017506167292595, -1.2516897186287679e-05, -9.07141511561349e-05, -0.054969530552625656, -0.13600309193134308], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)<|endoftext|>from . import constants as c", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")<", "|", "end", "of", "text", "|>", "from", " ", ".", " import", " constants", " as", " c", "\n"], "logprobs": [-0.024944933131337166, -0.00033146608620882034, -0.0009162995265796781, -0.00020549570035655051, -0.0011956692906096578, -0.0026208360213786364, -0.0019119569333270192, -0.0004213160718791187, -0.01325650792568922, -0.0001147919538198039, -4.9232225137529895e-05, -1.519195318222046, -4.768370445162873e-07, -2.861018856492592e-06, -5.94836674281396e-05, -0.00015186110977083445, -0.14815500378608704, -0.9195322394371033, -2.9114484786987305, -0.012028775177896023, -2.024576425552368, -4.9202070236206055, -1.406121015548706, -1.3095110654830933, -0.21282456815242767], "finish_reason": "stop"}], "metrics": {"energy": 330.7544842910768, "energy_per_token": 1.3283312622131598, "time": 14.944566, "time_per_token": 0.06001833734939759}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(f\"data must be a pandas DataFrame, got {type(data)}.\")", "tokens": [" Value", "Error", "(", "f", "\"", "data", " must", " be", " a", " pandas", " Data", "Frame", ",", " got", " {", "type", "(", "data", ")}", ".", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -1.4155364036560059, -0.29484638571739197, -0.7701387405395508, -0.6635677218437195, -0.0061081876046955585, -0.161932110786438, -0.9037793278694153, -0.4599648714065552, -0.013455651700496674, -0.4289708435535431, -1.358058214187622, -0.1325552612543106, -0.1398015171289444, -0.00018845213344320655, -0.0004942387458868325, -0.0716576799750328, -2.5242886543273926, -0.011950799264013767, -0.0008074360666796565, -0.00102324562612921], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5755280256271362, -0.008833969943225384, -0.02634979411959648, -0.006383860483765602, -0.005007938481867313], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004808938247151673, -1.1205610462639015e-05, -0.0049957213923335075, -0.007964519783854485, -0.0907142162322998, -0.6224352717399597, -0.21758709847927094, -0.006815993692725897, -0.009508322924375534, -0.04895904287695885, -0.0016251702327281237, -8.046303264563903e-05, -0.0003091811086051166], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.12845975160598755, -3.2305197237292305e-05, -0.00013016807497479022, -0.002369931200519204, -6.437094270950183e-05, -0.0065058572217822075, -1.030339241027832, -0.0012053137179464102], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain the column '{}'\".format(target_column))", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " the", " column", " '", "{}", "'", "\"", ".", "format", "(", "target", "_", "column", "))", "\n"], "logprobs": [-0.0007581220706924796, -4.362964682513848e-05, -0.0042708381079137325, -0.8882688283920288, -1.9053175449371338, -0.412564754486084, -0.11317434161901474, -0.8254616260528564, -1.826736330986023, -1.1998640298843384, -0.3761272728443146, -0.005093218293040991, -2.1620254516601562, -0.11878505349159241, -0.009713645093142986, -0.0013461584458127618, -0.07649075239896774, -0.00032669928623363376, -0.00012611546844709665, -0.003421407425776124, -0.0003634030872490257], "finish_reason": "stop"}, {"text": " data[target_column].dtypes != float:", "tokens": [" data", "[", "target", "_", "column", "]", ".", "d", "types", " ", "!", "=", " float", ":", "\n"], "logprobs": [-1.2995206117630005, -0.049793243408203125, -0.003258278826251626, -3.9219088648678735e-05, -5.483612312673358e-06, -0.0008541273418813944, -0.0003883084573317319, -0.4440024793148041, -1.067449927330017, -0.8448809385299683, -1.537788011773955e-05, -3.40932747349143e-05, -3.22324800491333, -0.11627689749002457, -0.0079912468791008], "finish_reason": "stop"}, {"text": " ValueError(\"data contains non-numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " contains", " non", "-", "numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0026385514065623283, -1.0371154530730564e-05, -0.005073292646557093, -0.06176064535975456, -0.30399686098098755, -1.9690492153167725, -0.20626753568649292, -0.072105772793293, -0.07274821400642395, -0.21074332296848297, -0.050748229026794434, -0.010374192148447037, -0.0003091811086051166, -0.0005814530304633081], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05470997840166092, -0.03743082284927368, -0.00015841660206206143, -0.007754697930067778, -6.318072337307967e-06, -0.00016711745411157608, -8.272782724816352e-05, -0.0041681560687720776, -0.007067324128001928, -0.0008428120636381209], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005555993411689997, -2.13382354559144e-05, -0.0076035140082240105, -0.052213843911886215, -0.035230331122875214, -0.006387769244611263, -0.0013715155655518174, -0.09705877304077148, -0.01054772362112999, -0.3471294343471527, -0.006117784883826971, -0.0003332536434754729, -0.013742005452513695, -0.00011562632425921038, -0.0014585343888029456, -0.159558966755867, -0.006184251047670841, -0.00013433984713628888, -0.0004051103023812175], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06601850688457489, -0.029607383534312248, -0.00026639728457666934, -0.002711788285523653, -1.680836794548668e-05, -0.00012742661056108773, -0.00016544880054425448, -0.006709428504109383, -0.008065984584391117, -0.0012421043356880546], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006816822569817305, -7.867782187531702e-06, -0.010013464838266373, -0.02070959098637104, -0.024781905114650726, -0.008802775293588638, -0.0095973527058959, -0.058861687779426575, -0.008680704049766064, -0.12227068841457367, -0.10487056523561478, -0.31727829575538635, -0.013161685317754745, -0.0003951007383875549, -0.0005517867393791676], "finish_reason": "stop"}, {"text": " data.drop(columns=target_column, axis=1)", "tokens": [" data", ".", "drop", "(", "columns", "=", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.01415580976754427, -0.2750028371810913, -0.4742068946361542, -0.20725518465042114, -0.7333824634552002, -0.46985185146331787, -0.007977410219609737, -0.0005414212355390191, -4.5298504119273275e-05, -0.1697213053703308, -0.1373046487569809, -0.0256634708493948, -0.040532950311899185, -0.024241818115115166, -0.05799238383769989], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008541361428797245, -0.05435846373438835, -0.0006679449579678476, -1.4185804502631072e-05, -1.6689286894688848e-06, -0.00030501006403937936, -0.005546063184738159], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0149998152628541, -0.00019798702851403505, -0.00363107118755579, -0.0023248568177223206, -0.0026737437583506107, -0.0001419681793777272, -0.0012673450401052833, -0.00020787939138244838, -0.002633201191201806, -4.708655978902243e-05, -0.00037055302527733147, -0.004012866877019405, -0.015448079444468021, -3.933898824470816e-06, -8.4638240878121e-06, -9.179073458653875e-06, -4.6491513785440475e-06, -0.00046957432641647756, -0.5922884345054626, -0.0012248402927070856, -0.01898791454732418, -0.0004010588163509965, -0.30683374404907227, -4.482168878894299e-05, -5.1616290875244886e-05, -0.034263402223587036, -0.015022245235741138, -4.935142715112306e-05, -2.9802276912960224e-06, -0.0020114206708967686, -0.06342136859893799, -2.3841855067985307e-07, -4.410734163684538e-06, -0.009043092839419842, -0.0018266435945406556, -5.638440416078083e-05, -0.00014244495832826942, -0.080999955534935, -0.0022515917662531137], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003164405468851328, -1.1086402082582936e-05, -9.965400386136025e-05, -0.044958438724279404, -0.1450839638710022], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)<|endoftext|>def task_func(numbers):", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "numbers", "):", "\n"], "logprobs": [-0.02148193120956421, -0.00029940891545265913, -0.0009601273923180997, -0.00018285033002030104, -0.0012544866185635328, -0.002718921285122633, -0.0013399679446592927, -0.0004048719711136073, -0.011819451116025448, -0.0001102625101339072, -4.088794958079234e-05, -1.3839364051818848, -7.152555099310121e-07, -2.622600959512056e-06, -6.639736966462806e-05, -0.00012206286191940308, -0.17362332344055176, -3.0216689109802246, -0.8856897950172424, -0.04570966586470604, -0.05036720633506775, -0.06946459412574768, -3.4241206645965576, -1.7183704376220703, -0.015047023072838783], "finish_reason": "stop"}], "metrics": {"energy": 334.5157640438079, "energy_per_token": 1.3169911970228658, "time": 14.921171, "time_per_token": 0.05874476771653543}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"Data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -1.5359737873077393, -0.6029487252235413, -0.00221804971806705, -0.08896563202142715, -1.4569940567016602, -0.011975535191595554, -0.5761187076568604, -0.00026603974401950836, -0.0005596501869149506], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.4391794204711914, -0.0001867835089797154, -0.0008553183870390058, -0.02934926748275757, -0.11960797011852264, -0.000757645582780242, -3.814624506048858e-05, -0.006590654142200947, -0.005114804022014141], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00043871314846910536, -1.0251946150674485e-05, -0.005012208595871925, -0.00871213898062706, -0.09510958194732666, -0.5727030634880066, -0.21050982177257538, -0.008689922280609608, -0.011528539471328259, -0.05548831447958946, -0.0014510351466014981, -8.77341881277971e-05, -0.00029988560709170997], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.14878535270690918, -1.9550132492440753e-05, -0.00010883215873036534, -0.002300356514751911, -5.1973900554003194e-05, -0.005887665785849094, -0.4190305769443512, -0.004437243565917015, -0.0011994794476777315, -0.0010508735431358218], "finish_reason": "stop"}, {"text": " ValueError(\"target_column should be a column in data.\")", "tokens": [" Value", "Error", "(", "\"", "target", "_", "column", " should", " be", " a", " column", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0006743779522366822, -3.480850500636734e-05, -0.005487734917551279, -0.9240475296974182, -0.3381546437740326, -0.045152850449085236, -0.004028777126222849, -0.47200635075569153, -0.008866109885275364, -0.030854538083076477, -0.013382726348936558, -1.4616153240203857, -0.07452691346406937, -0.025621989741921425, -0.003832378191873431, -0.0003057250869460404, -0.00044324109330773354], "finish_reason": "stop"}, {"text": " data[target_column].isna().any():", "tokens": [" data", "[", "target", "_", "column", "]", ".", "is", "na", "()", ".", "any", "():", "\n"], "logprobs": [-1.3975424766540527, -0.048650577664375305, -0.0036526883486658335, -3.7788631743751466e-05, -5.602820692729438e-06, -0.0008241117466241121, -0.0003601856005843729, -2.10500431060791, -0.5382866263389587, -0.0006586528033949435, -0.000163541772053577, -0.06009221822023392, -0.05545222759246826, -0.00356502877548337], "finish_reason": "stop"}, {"text": " ValueError(\"data contains non-numeric columns.\")", "tokens": [" Value", "Error", "(", "\"", "data", " contains", " non", "-", "numeric", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0031222188845276833, -1.3828182090946939e-05, -0.004729869309812784, -0.07068692892789841, -0.394307404756546, -1.8594913482666016, -0.1987428069114685, -0.052801910787820816, -0.06270930916070938, -2.3150980472564697, -0.0659492015838623, -0.012795254588127136, -0.00029774048016406596, -0.0006672301678918302], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05052906274795532, -0.04038572683930397, -0.00014959646796341985, -0.007887882180511951, -5.722029527532868e-06, -0.000164018536452204, -8.380061626667157e-05, -0.004400807432830334, -0.007246401626616716, -0.0007930232677608728], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005800233921036124, -2.3245540432981215e-05, -0.007824248634278774, -0.05496230721473694, -0.03579948469996452, -0.0061936103738844395, -0.001347468001767993, -0.09193968027830124, -0.009084203280508518, -0.27013736963272095, -0.00534770917147398, -0.0002790300059132278, -0.015320477075874805, -0.0001323135511483997, -0.0014938872773200274, -0.14722727239131927, -0.007129347883164883, -0.00013279033009894192, -0.0003880701260641217], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06964340060949326, -0.02746022678911686, -0.00037317464011721313, -0.002794054336845875, -2.0503786799963564e-05, -0.00013279033009894192, -0.00018106251081917435, -0.006542453076690435, -0.006865364965051413, -0.001090646837837994], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.0069369906559586525, -1.0490362910786644e-05, -0.011482697911560535, -0.022082164883613586, -0.022815346717834473, -0.008686021901667118, -0.011688321828842163, -0.06257685273885727, -0.008447273634374142, -0.12395057082176208, -0.10343459993600845, -0.3236151933670044, -0.01306567806750536, -0.0004080893413629383, -0.00044526674901135266], "finish_reason": "stop"}, {"text": " data.drop(columns=[target_column], axis=1)", "tokens": [" data", ".", "drop", "(", "columns", "=[", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.014852306805551052, -0.33171066641807556, -0.45461755990982056, -0.1677737832069397, -0.8261563777923584, -1.1434214115142822, -0.002910903189331293, -1.597391747054644e-05, -2.992108420585282e-05, -0.3176124095916748, -0.0008519833791069686, -0.2813231647014618, -0.025083867833018303, -0.019513191655278206, -0.029042106121778488, -0.05556420981884003], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009629584848880768, -0.06740319728851318, -0.0008086272282525897, -1.9192511899746023e-05, -1.5497195136049413e-06, -0.0003083468764089048, -0.0067506348714232445], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.015240409411489964, -0.00021360022947192192, -0.0035002888180315495, -0.0016986002447083592, -0.0026326067745685577, -0.00011359999916749075, -0.0012441283324733377, -0.0002090712368953973, -0.0019511011196300387, -6.329813186312094e-05, -0.00036864637513644993, -0.004254694562405348, -0.017349734902381897, -3.933898824470816e-06, -9.417489309271332e-06, -7.629365427419543e-06, -5.602820692729438e-06, -0.0005022218101657927, -0.7431669235229492], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003031898057088256, -1.1444026313256472e-05, -8.272782724816352e-05, -0.0450434572994709, -0.15797138214111328], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.021306203678250313, -0.00031799983116798103, -0.0010399178136140108, -0.00021407696476671845, -0.001149708521552384, -0.0024888513144105673, -0.0018498466815799475, -0.0004379982128739357, -0.014232320711016655, -0.00011157367407577112, -3.790783375734463e-05, -0.24732784926891327, -0.26410821080207825], "finish_reason": "stop"}], "metrics": {"energy": 302.06725091266657, "energy_per_token": 1.4115292098722736, "time": 13.463199, "time_per_token": 0.06291214485981309}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -0.5487797260284424, -0.5160593390464783, -0.003410002216696739, -0.06949394941329956, -0.8551598191261292, -0.007620904594659805, -0.224057137966156, -0.00023731753753963858, -0.0005239067832008004], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.6592020988464355, -0.00016616393986623734, -0.0009135602158494294, -0.032271675765514374, -0.11486594378948212, -0.0005664412747137249, -3.528532761265524e-05, -0.006053802091628313, -0.004773648921400309], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00047910655848681927, -1.2397689715726301e-05, -0.00522094639018178, -0.008109737187623978, -0.09542907774448395, -0.6119651198387146, -0.21730166673660278, -0.0076601807959377766, -0.009351499378681183, -0.05056034028530121, -0.0016477829776704311, -7.664863369427621e-05, -0.0002812943421304226], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.1493338793516159, -1.883488948806189e-05, -0.00013243274588603526, -0.002360179089009762, -5.94836674281396e-05, -0.006747792940586805, -0.48851755261421204, -0.005041386932134628, -0.0017302555497735739, -0.0011082704877480865], "finish_reason": "stop"}, {"text": " ValueError(f\"column '{target_column}' not found in data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0005872909096069634, -4.053033626405522e-05, -0.004817664157599211, -0.7074559926986694, -0.02034182660281658, -3.217313289642334, -1.2217599153518677, -0.0021063541062176228, -0.0013043713988736272, -3.6000557884108275e-05, -0.00010299152199877426, -0.0031818735878914595, -0.8156148791313171, -0.7581517696380615, -0.1744644194841385, -0.0854124203324318, -0.1871732473373413, -0.02655029483139515, -0.0005890780012123287, -0.0004111875023227185], "finish_reason": "stop"}, {"text": " not data[target_column].dtype.name.startswith(\"float\"):", "tokens": [" not", " data", "[", "target", "_", "column", "]", ".", "d", "type", ".", "name", ".", "start", "sw", "ith", "(", "\"", "float", "\"", "):", "\n"], "logprobs": [-0.3607860207557678, -0.7142024636268616, -0.0410955473780632, -0.00200737570412457, -4.470248313737102e-05, -5.006777428206988e-06, -0.0005349873681552708, -5.98412734689191e-05, -1.350815773010254, -0.6747801303863525, -0.08919954299926758, -0.43307188153266907, -0.30309924483299255, -0.4356568455696106, -3.755022044060752e-05, 0.0, -0.8229970932006836, -0.014319990761578083, -0.23234175145626068, -0.015886053442955017, -0.026637239381670952, -0.0028130742721259594], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric columns.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.003215502016246319, -1.07287787614041e-05, -0.0049384282901883125, -0.055375758558511734, -0.32821568846702576, -0.25276440382003784, -0.4738130271434784, -0.34919050335884094, -0.08287422358989716, -1.094292402267456, -0.02819063514471054, -0.004806274548172951, -0.0002673506969586015, -0.0006310140597634017], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05097629502415657, -0.04257411137223244, -0.00015555603022221476, -0.00876531656831503, -7.152531907195225e-06, -0.00015627116954419762, -9.285972191719338e-05, -0.003873941022902727, -0.006718427408486605, -0.0006853376980870962], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005290300468914211, -2.098061486321967e-05, -0.007771849632263184, -0.04741952195763588, -0.03585802763700485, -0.006130106747150421, -0.0011041027028113604, -0.09579721838235855, -0.008959567174315453, -0.30780109763145447, -0.005155957769602537, -0.000311802898067981, -0.015501839108765125, -0.00011586471373448148, -0.0014427024871110916, -0.1745639443397522, -0.00757784117013216, -0.00014530557382386178, -0.00037520044133998454], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.0756559893488884, -0.028000663965940475, -0.00031835734262131155, -0.002465781755745411, -1.8596476365928538e-05, -0.00011681827891152352, -0.00014077626110520214, -0.006158541887998581, -0.006495197769254446, -0.0010656398953869939], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.007424027193337679, -8.4638240878121e-06, -0.010029870085418224, -0.02192123606801033, -0.025418397039175034, -0.008098148740828037, -0.00908054132014513, -0.07134693115949631, -0.00898355059325695, -0.11343799531459808, -0.09723325818777084, -0.3218715786933899, -0.013126860372722149, -0.0004085659747943282, -0.00045944625162519515], "finish_reason": "stop"}, {"text": " data[data.columns[:-1]]", "tokens": [" data", "[", "data", ".", "columns", "[:", "-", "1", "]]", "\n"], "logprobs": [-0.0169006809592247, -1.6665855646133423, -0.18576666712760925, -0.01764223724603653, -0.004177534487098455, -0.46485966444015503, -0.021987127140164375, -0.003739984007552266, -0.002993152942508459, -0.06870730221271515], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.01066390611231327, -0.06548360735177994, -0.0008211340173147619, -1.9550132492440753e-05, -1.1920922133867862e-06, -0.00027783826226368546, -0.006086505018174648], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.017948471009731293, -0.00019429226813372225, -0.004518299363553524, -0.0015368566382676363, -0.0023667202331125736, -0.00010680581908673048, -0.0016562328673899174, -0.00021431533969007432, -0.0026530565228313208, -5.113947918289341e-05, -0.00046206763363443315, -0.004029370378702879, -0.022239454090595245, -3.933898824470816e-06, -7.867782187531702e-06, -8.821448318485636e-06, -5.006777428206988e-06, -0.0004273931554052979, -0.7060666680335999], "finish_reason": "stop"}, {"text": " LinearRegression().fit(X_train, y_train)", "tokens": [" Linear", "Reg", "ression", "()", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.0032272657845169306, -1.2397689715726301e-05, -0.00010191874753218144, -0.04515877738595009, -1.9287128448486328, -9.893881360767409e-05, -0.0006562701892107725, -0.0023243811447173357, -0.044006120413541794, -0.0024833811912685633, -0.008702212013304234, -0.01052507571876049, -0.00043215948971919715, -1.2755313036905136e-05, -0.0013917532050982118, -0.001743821892887354], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")"], "logprobs": [-0.020072663202881813, -0.0002783149539027363, -0.0009423820883966982, -0.00020919041708111763, -0.001259129960089922, -0.0027155925054103136, -0.00145329674705863, -0.00040749352774582803, -0.012550069019198418, -0.00011157367407577112, -4.23184028477408e-05, -0.26469892263412476], "finish_reason": "stop"}], "metrics": {"energy": 311.6223925533295, "energy_per_token": 1.3607964740320067, "time": 13.877757, "time_per_token": 0.06060155895196507}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"Data should be a pandas.DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Data", " should", " be", " a", " pandas", ".", "DataFrame", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -1.5359737873077393, -2.6077990531921387, -0.007334094028919935, -0.2660383880138397, -0.6958553791046143, -1.9564428329467773, -0.014502943493425846, -0.5234142541885376, -0.000442407006630674, -0.001705264556221664], "finish_reason": "stop"}, {"text": " not len(data):", "tokens": [" not", " len", "(", "data", "):", "\n"], "logprobs": [-1.666365623474121, -2.3451318740844727, -0.000196556793525815, -0.001039441442117095, -0.3698563575744629, -0.012752884067595005], "finish_reason": "stop"}, {"text": " ValueError(\"data cannot be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " cannot", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00043871314846910536, -1.0251946150674485e-05, -0.005012208595871925, -0.00871213898062706, -0.09510958194732666, -2.5158298015594482, -0.0034380394499748945, -0.010725707747042179, -0.06250450760126114, -0.0020123724825680256, -8.856858039507642e-05, -0.0003133521240670234], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.15509025752544403, -3.099393507000059e-05, -9.297892393078655e-05, -0.0024425929877907038, -5.209310256759636e-05, -0.006521964445710182, -1.0329071283340454, -0.0012286503333598375], "finish_reason": "stop"}, {"text": " ValueError(\"target_column should be a column of data.\")", "tokens": [" Value", "Error", "(", "\"", "target", "_", "column", " should", " be", " a", " column", " of", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0006661579827778041, -3.290122185717337e-05, -0.005223318003118038, -0.9520273804664612, -0.30576223134994507, -0.046485476195812225, -0.004132541362196207, -0.4205775856971741, -0.009715416468679905, -0.029307708144187927, -0.011729794554412365, -0.3448601961135864, -0.04914609342813492, -0.015377765521407127, -0.0025533000007271767, -0.0002037079248111695, -0.00028355870745144784], "finish_reason": "stop"}, {"text": " not np.issubdtype(data[target_column].dtype, np.number):", "tokens": [" not", " np", ".", "iss", "ub", "d", "type", "(", "data", "[", "target", "_", "column", "]", ".", "d", "type", ",", " np", ".", "number", "):", "\n"], "logprobs": [-0.38399824500083923, -1.614384651184082, -3.909988299710676e-05, -0.12475588172674179, -0.0006845038151368499, -0.0002917817619163543, -5.757642793469131e-05, -0.0013903246726840734, -0.022085312753915787, -0.023049524053931236, -0.000595034915022552, -1.847726889536716e-05, -2.145764938177308e-06, -0.0005915798828937113, -0.0010981488740071654, -0.005291622597724199, -0.006387532223016024, -0.0018571049440652132, -0.011843365617096424, -5.1377883210079744e-05, -0.020068924874067307, -0.009847276844084263, -0.003602564102038741], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0034589481074362993, -1.1444026313256472e-05, -0.005540135782212019, -0.06346432864665985, -0.3014095723628998, -0.22564344108104706, -0.3862614035606384, -0.38168802857398987, -0.08873602747917175, -0.7436455488204956, -0.020356077700853348, -0.0038780972827225924, -0.00027533553657121956, -0.0004720765573438257], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.055162906646728516, -0.03902316093444824, -0.00015984688070602715, -0.010251722298562527, -7.033323527139146e-06, -0.0001289761275984347, -9.595887240720913e-05, -0.004233090206980705, -0.0072230868972837925, -0.0007022537174634635], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be a value between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " a", " value", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005844315164722502, -1.764281842042692e-05, -0.0076824212446808815, -0.05482102930545807, -0.03675642982125282, -0.006753713358193636, -0.0012343652779236436, -0.09675311297178268, -0.010458542965352535, -1.7891740798950195, -1.7208995819091797, -0.05723254755139351, -0.004980656784027815, -0.0004359725280664861, -0.017455993220210075, -9.42901024245657e-05, -0.002004044596105814, -0.09435086697340012, -0.0046105035580694675, -0.00020454221521504223, -0.0005550036439672112], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.08122178167104721, -0.023253949359059334, -0.00030191155383363366, -0.0024340308737009764, -1.5735502529423684e-05, -0.0001560327800689265, -0.00012337400403339416, -0.005690446589142084, -0.007585649378597736, -0.0009439303539693356], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.005876999814063311, -8.940656698541716e-06, -0.011290468275547028, -0.021247737109661102, -0.02174033597111702, -0.008451765403151512, -0.009900393895804882, -0.06265388429164886, -0.008288509212434292, -0.11992872506380081, -0.10939066112041473, -0.31507158279418945, -0.0132280383259058, -0.00039915222441777587, -0.0004880429187323898], "finish_reason": "stop"}, {"text": " data.drop(columns=target_column, axis=1)", "tokens": [" data", ".", "drop", "(", "columns", "=", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.013827366754412651, -0.370979368686676, -0.4843042194843292, -0.1627766191959381, -0.6898782849311829, -0.48725226521492004, -0.007321431767195463, -0.0005824061809107661, -4.23184028477408e-05, -0.13632351160049438, -0.14096449315547943, -0.02334607206285, -0.0414421483874321, -0.03006453439593315, -0.05381898581981659], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.01035566907376051, -0.056564509868621826, -0.0008536509121768177, -1.5616295058862306e-05, -1.4305104514278355e-06, -0.00026925752172246575, -0.006152973510324955], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.014340084977447987, -0.00027044929447583854, -0.003710529999807477, -0.0016107691917568445, -0.0026140587870031595, -0.00012492353562265635, -0.0014024670235812664, -0.00019429226813372225, -0.0027363973204046488, -6.222531374078244e-05, -0.00041845624218694866, -0.003930700942873955, -0.016925295814871788, -3.3378546504536644e-06, -9.298280929215252e-06, -8.821448318485636e-06, -5.245195097813848e-06, -0.0004167880106251687, -0.6768308877944946, -0.0014947204617783427, -0.020668955519795418, -0.0004374024283606559, -0.35405784845352173, -3.7788631743751466e-05, -4.851700214203447e-05, -0.03015938587486744, -0.015728114172816277, -6.687417771900073e-05, -2.50339189733495e-06, -0.002273238729685545, -0.05964791774749756, -2.3841855067985307e-07, -4.6491513785440475e-06, -0.008264036849141121, -0.0016526625258848071, -4.1483970562694594e-05, -0.00013422065239865333, -0.08825265616178513, -0.002154530957341194], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.002778481226414442, -1.2040065485052764e-05, -8.999896090244874e-05, -0.04502419754862785, -0.14577774703502655], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.022953296080231667, -0.0002461368858348578, -0.0009623901569284499, -0.0001995364436879754, -0.0013084192760288715, -0.0030005217995494604, -0.0013409203384071589, -0.0004182179400231689, -0.01394528429955244, -0.00011836781777674332, -3.4927710657939315e-05, -0.2300901561975479, -0.276563823223114], "finish_reason": "stop"}], "metrics": {"energy": 358.0178121147157, "energy_per_token": 1.4979824774674297, "time": 14.291558, "time_per_token": 0.05979731380753138}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError('Data must be a pandas DataFrame.')", "tokens": [" Value", "Error", "('", "Data", " must", " be", " a", " pandas", " Data", "Frame", ".", "')", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -1.8535211086273193, -1.5423630475997925, -0.6227191090583801, -0.002490753773599863, -0.11052355170249939, -0.5186886787414551, -0.19046777486801147, -0.009117988869547844, -0.8656342625617981, -0.006894608028233051, -0.0005360596696846187], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.5465288162231445, -0.0001787979417713359, -0.0008624648326076567, -0.03308427333831787, -0.13139626383781433, -0.0006578188622370362, -3.504691630951129e-05, -0.006609720177948475, -0.005060957279056311], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004576589271891862, -1.1324817933200393e-05, -0.004769852384924889, -0.009289612993597984, -0.11245488375425339, -0.5594655275344849, -0.21976116299629211, -0.00847576092928648, -0.010524957440793514, -0.05129004642367363, -0.0015254301251843572, -7.092700980138034e-05, -0.0003268184664193541], "finish_reason": "stop"}, {"text": " not target_column in data.columns:", "tokens": [" not", " target", "_", "column", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-2.2331154346466064, -0.6039146780967712, -1.6689160474925302e-05, -7.915183232398704e-05, -0.0032427129335701466, -0.013324853964149952, -0.4145180881023407, -0.007938619703054428, -0.0016171961324289441, -0.001671228208579123], "finish_reason": "stop"}, {"text": " ValueError(f\"{target_column} should be a column in data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "target", "_", "column", "}", " should", " be", " a", " column", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0006393534131348133, -3.611976353568025e-05, -0.004552239086478949, -0.7799100875854492, -0.020044386386871338, -1.1068081855773926, -0.0033160243183374405, -1.168244216387393e-05, -0.00033301531220786273, -0.02028306946158409, -2.72318172454834, -0.008502828888595104, -0.04118146374821663, -0.007688099518418312, -1.2337229251861572, -0.07218363136053085, -0.06255938112735748, -0.00622393935918808, -0.0002964295563288033, -0.0005584587925113738], "finish_reason": "stop"}, {"text": " data[target_column].dtypes == 'object':", "tokens": [" data", "[", "target", "_", "column", "]", ".", "d", "types", " ==", " '", "object", "':", "\n"], "logprobs": [-1.4868704080581665, -0.05019829422235489, -0.004231665749102831, -5.900685573578812e-05, -5.006777428206988e-06, -0.0006194579764269292, -0.00029213930247351527, -0.43179306387901306, -0.9786688089370728, -2.2296555042266846, -1.1565086841583252, -0.21024930477142334, -0.05453954264521599, -0.0060349623672664165], "finish_reason": "stop"}, {"text": " ValueError(\"data contains non-numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " contains", " non", "-", "numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002910903189331293, -1.1920858014491387e-05, -0.0048294090665876865, -0.07313764840364456, -0.2744682729244232, -2.0564327239990234, -0.20804911851882935, -0.06526362150907516, -0.05160029977560043, -0.20766806602478027, -0.04762675613164902, -0.009901456534862518, -0.0002818902430590242, -0.0006202919175848365], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.048814643174409866, -0.04120880737900734, -0.00014780859055463225, -0.008995837531983852, -5.483612312673358e-06, -0.00014602071314584464, -9.131014667218551e-05, -0.0038627786561846733, -0.007331017404794693, -0.0006693744799122214], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0006301801186054945, -1.966933996300213e-05, -0.007656277157366276, -0.058523885905742645, -0.038995757699012756, -0.005678000394254923, -0.0012463905150070786, -0.0945511981844902, -0.008952715434134007, -0.2856932282447815, -0.005400354508310556, -0.00034624303225427866, -0.013384961523115635, -0.00011407678539399058, -0.0014083001296967268, -0.16227515041828156, -0.006603799294680357, -0.00013767725613433868, -0.00036090059438720345], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06472250819206238, -0.03215901553630829, -0.0003064401389565319, -0.002476840978488326, -2.038458114839159e-05, -0.00013004888023715466, -0.0001445904199499637, -0.005827698390930891, -0.0067097838036715984, -0.0010377742582932115], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006444860715419054, -8.4638240878121e-06, -0.010732430033385754, -0.024315351620316505, -0.02379724755883217, -0.00742745865136385, -0.01086663268506527, -0.06365115195512772, -0.00790349394083023, -0.12259375303983688, -0.10188062489032745, -0.3169449269771576, -0.013754116371273994, -0.00037126801908016205, -0.0005191409145481884], "finish_reason": "stop"}, {"text": " data.drop(target_column, axis=1)", "tokens": [" data", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.018045533448457718, -0.36425334215164185, -0.4972632825374603, -0.16996803879737854, -0.7282259464263916, -4.625213477993384e-05, -6.01988795096986e-05, -0.0019708510953933, -0.006978424731642008, -0.0624319389462471, -0.011917699128389359, -0.022155623883008957, -0.05010759085416794], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009845742024481297, -0.05444279685616493, -0.0008524598088115454, -1.6093124941107817e-05, -1.4305104514278355e-06, -0.00035482310340739787, -0.00647541880607605], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.014453712850809097, -0.00025245340657420456, -0.0037762064021080732, -0.0014618673594668508, -0.002657574601471424, -9.023735765367746e-05, -0.001369729870930314, -0.00020716428116429597, -0.0029561889823526144, -4.6132929128361866e-05, -0.00040236959466710687, -0.00408066064119339, -0.016682058572769165, -3.2186455882765586e-06, -8.4638240878121e-06, -7.271740287251305e-06, -4.887569048150908e-06, -0.00042024365393444896, -0.7293673157691956], "finish_reason": "stop"}, {"text": " LinearRegression().fit(X_train, y_train)", "tokens": [" Linear", "Reg", "ression", "()", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.002921957289800048, -1.2159273865108844e-05, -9.989239333663136e-05, -0.04286858066916466, -2.0108349323272705, -9.42901024245657e-05, -0.000621840707026422, -0.002176180249080062, -0.052349384874105453, -0.0012260308722034097, -0.010183283127844334, -0.012626702897250652, -0.0003817544784396887, -1.3351351299206726e-05, -0.0014804366510361433, -0.0016551617300137877], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.02565034106373787, -0.00029869386344216764, -0.0011011258466169238, -0.00022301571152638644, -0.0013921103673055768, -0.002285013673827052, -0.0018830440239980817, -0.00046433156239800155, -0.013702967204153538, -0.00012492353562265635, -4.482168878894299e-05, -0.20270104706287384, -0.31986987590789795], "finish_reason": "stop"}], "metrics": {"energy": 307.1569285316469, "energy_per_token": 1.3651419045850972, "time": 13.672127, "time_per_token": 0.06076500888888889}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError('Data has to be a pandas.DataFrame instance.')", "tokens": [" Value", "Error", "('", "Data", " has", " to", " be", " a", " pandas", ".", "DataFrame", " instance", ".", "')", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -1.8535211086273193, -1.5423630475997925, -2.888075113296509, -0.01578443869948387, -0.005443986505270004, -0.3252759575843811, -0.7697656154632568, -1.7992167472839355, -0.014688682742416859, -3.2864959239959717, -0.9182713627815247, -0.025999780744314194, -0.0007755132392048836], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5164614319801331, -0.008967483416199684, -0.026662776246666908, -0.00511587131768465, -0.00444970466196537], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004576589271891862, -1.1324817933200393e-05, -0.004769852384924889, -0.009289612993597984, -0.11245488375425339, -0.5594655275344849, -0.21976116299629211, -0.00847576092928648, -0.010524957440793514, -0.05129004642367363, -0.0015254301251843572, -7.092700980138034e-05, -0.0003268184664193541], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.12684950232505798, -2.8132995794294402e-05, -0.00014101465058047324, -0.001961690140888095, -5.721882189391181e-05, -0.005285219289362431, -1.0952352285385132, -0.0012987758964300156], "finish_reason": "stop"}, {"text": " ValueError(f\"column {target_column} is not in data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "column", " {", "target", "_", "column", "}", " is", " not", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0006713996990583837, -4.1483970562694594e-05, -0.004132304340600967, -0.8526549339294434, -0.020117761567234993, -3.3559327125549316, -0.47752392292022705, -0.002597650745883584, -2.3603161025675945e-05, -0.0003177614707965404, -0.08249745517969131, -0.8020306825637817, -0.008477534167468548, -1.077779769897461, -0.15657222270965576, -0.2014966607093811, -0.10749482363462448, -0.0005075835506431758, -0.0005289109540171921], "finish_reason": "stop"}, {"text": " not data[target_column].dtypes.is_numeric():", "tokens": [" not", " data", "[", "target", "_", "column", "]", ".", "d", "types", ".", "is", "_", "numeric", "():", "\n"], "logprobs": [-0.44981351494789124, -0.6476454138755798, -0.048375070095062256, -0.0018045108299702406, -3.707340147229843e-05, -4.172316494077677e-06, -0.0006212450098246336, -6.186770770000294e-05, -1.4216947555541992, -0.8343971371650696, -0.03175744414329529, -1.208037257194519, -0.11128290742635727, -0.05372996628284454, -0.04667742922902107, -0.003123882692307234], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.003267903346568346, -1.1086402082582936e-05, -0.00587747385725379, -0.07069680839776993, -0.3244319260120392, -0.27090704441070557, -0.41586872935295105, -1.4331097602844238, -0.3913125693798065, -0.5814094543457031, -0.006713691167533398, -0.00023874769976828247, -0.0006100462633185089], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05155648663640022, -0.044056084007024765, -0.0001431601122021675, -0.008029325865209103, -6.079655122448457e-06, -0.00016282663273159415, -7.795983401592821e-05, -0.004618690814822912, -0.006167072337120771, -0.0008378094644285738], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0006074252305552363, -2.0861407392658293e-05, -0.007295041810721159, -0.04298460856080055, -0.03574680536985397, -0.0062445527873933315, -0.0011523280991241336, -0.09911397099494934, -0.009153543971478939, -0.32539987564086914, -0.005243122112005949, -0.0003106111544184387, -0.015703821554780006, -0.00011467275908216834, -0.0012719882652163506, -0.16215473413467407, -0.0064459266141057014, -0.00013410145766101778, -0.0004102342063561082], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.07602927088737488, -0.02646787092089653, -0.0003228858404327184, -0.002723438898101449, -1.549708758830093e-05, -0.00011455356434453279, -0.00015555603022221476, -0.006421171594411135, -0.0065468354150652885, -0.000945121340919286], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006623220629990101, -9.059865078597795e-06, -0.010772881098091602, -0.023372508585453033, -0.02379491925239563, -0.007892612367868423, -0.011218800209462643, -0.06254325807094574, -0.00961045827716589, -0.11672326177358627, -0.1033446192741394, -0.3473362326622009, -0.014170265756547451, -0.000406301929615438, -0.0004114258335903287], "finish_reason": "stop"}, {"text": " data.drop(columns=[target_column], axis=1)", "tokens": [" data", ".", "drop", "(", "columns", "=[", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.014684688299894333, -0.3169628977775574, -0.5035340785980225, -0.1549859195947647, -0.6720772385597229, -1.21455979347229, -0.003520483383908868, -1.823885577323381e-05, -3.361645576660521e-05, -0.34204527735710144, -0.0009235645993612707, -0.2734537124633789, -0.023550085723400116, -0.016147196292877197, -0.029584120959043503, -0.07211952656507492], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009366852231323719, -0.055810123682022095, -0.0008150592911988497, -1.6093124941107817e-05, -1.4305104514278355e-06, -0.0003367095487192273, -0.006042071618139744], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.014472512528300285, -0.00024434918304905295, -0.003173674223944545, -0.0013709203340113163, -0.0029282569885253906, -0.00010740180005086586, -0.0012255546171218157, -0.00024172721896320581, -0.0028102213982492685, -5.07818695041351e-05, -0.0003541081096045673, -0.0039222706109285355, -0.017990387976169586, -2.9802276912960224e-06, -6.794906312279636e-06, -7.867782187531702e-06, -5.483612312673358e-06, -0.0004855407460127026, -0.6649044156074524, -0.0013171101454645395, -0.02107114903628826, -0.0004021312633994967, -0.30689454078674316, -3.4450891689630225e-05, -5.876845170860179e-05, -0.03501441329717636, -0.016471829265356064, -7.331102824537084e-05, -1.9073468138230965e-06, -0.002081372309476137, -0.060688234865665436, 0.0, -4.768360213347478e-06, -0.010058666579425335, -0.0018629353726282716, -4.207999518257566e-05, -0.00011932138295378536, -0.0967196673154831, -0.0029090014286339283], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0033709153067320585, -1.1444026313256472e-05, -0.00010787858627736568, -0.04613276571035385, -0.11980468779802322], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)<|endoftext|>from typing import Any", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")<", "|", "end", "of", "text", "|>", "from", " typing", " import", " Any", "\n"], "logprobs": [-0.025753512978553772, -0.00026806574896909297, -0.0012225781101733446, -0.00019798702851403505, -0.0013947292463853955, -0.0029425201937556267, -0.0013461584458127618, -0.0004403813509270549, -0.01353939063847065, -0.00011824862303910777, -4.3748852476710454e-05, -1.4686038494110107, -7.152555099310121e-07, -2.861018856492592e-06, -4.088794958079234e-05, -0.00010227633902104571, -0.1566796600818634, -0.9817485809326172, -1.5534557104110718, -0.000912369170691818, -2.0309133529663086, -0.8787254095077515], "finish_reason": "stop"}], "metrics": {"energy": 361.8027051239011, "energy_per_token": 1.495052500511988, "time": 14.513197, "time_per_token": 0.05997188842975207}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(f\"data must be a pandas DataFrame but is {type(data)}\")", "tokens": [" Value", "Error", "(", "f", "\"", "data", " must", " be", " a", " pandas", " Data", "Frame", " but", " is", " {", "type", "(", "data", ")}", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -1.4155364036560059, -0.29484638571739197, -0.7701387405395508, -0.6635677218437195, -0.0061081876046955585, -0.161932110786438, -0.9037793278694153, -0.4599648714065552, -0.013455651700496674, -3.0355305671691895, -0.6206611394882202, -0.2422928661108017, -0.03785824030637741, -0.0002553137019276619, -0.0005055579822510481, -0.07594695687294006, -0.16227301955223083, -0.0010100268991664052, -0.0009835887467488647], "finish_reason": "stop"}, {"text": " len(data) < 1:", "tokens": [" len", "(", "data", ")", " <", " ", "1", ":", "\n"], "logprobs": [-1.586872935295105, -0.00021669900161214173, -0.0009733468177728355, -0.030601253733038902, -2.5524280071258545, -0.0018379476387053728, -0.2245873212814331, -0.05433576926589012, -0.006880756001919508], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004808938247151673, -1.1205610462639015e-05, -0.0049957213923335075, -0.007964519783854485, -0.0907142162322998, -1.1880443096160889, -0.009479038417339325, -0.0940462201833725, -0.0073556313291192055, -6.997340824455023e-05, -0.0002783149539027363], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.15705974400043488, -3.397406908334233e-05, -0.0001113352773245424, -0.002510374179109931, -5.4596363042946905e-05, -0.006095983553677797, -0.39183610677719116, -0.005370712373405695, -0.0014396075857803226, -0.0010275328531861305], "finish_reason": "stop"}, {"text": " ValueError(\"target_column should be a column of data.\")", "tokens": [" Value", "Error", "(", "\"", "target", "_", "column", " should", " be", " a", " column", " of", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0006820021662861109, -3.659658250398934e-05, -0.004632930271327496, -0.8829897046089172, -0.36347338557243347, -0.04577115923166275, -0.0034267534501850605, -0.43915364146232605, -0.009335791692137718, -0.036812618374824524, -0.01044615637511015, -0.32772326469421387, -0.04330601170659065, -0.01686985418200493, -0.002943352097645402, -0.0002208704245276749, -0.0003736513026524335], "finish_reason": "stop"}, {"text": " not pd.api.types.is_numeric_dtype(data[target_column]):", "tokens": [" not", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "data", "[", "target", "_", "column", "]", "):", "\n"], "logprobs": [-0.44744008779525757, -1.529578447341919, -0.00016389934171456844, -0.12290532141923904, -0.00011491115583339706, -0.002419165801256895, -2.396077979938127e-05, -0.0005059154354967177, -0.0006609162664972246, -0.0019973821472376585, -0.000714523543138057, -0.007475261576473713, -0.0001380348257953301, -0.0005185451591387391, -0.004250658676028252, -0.04021523520350456, -0.0004528927383944392, -5.602820692729438e-06, -1.9073468138230965e-06, -0.01382524985820055, -0.023147374391555786, -0.0020880342926830053], "finish_reason": "stop"}, {"text": " ValueError(\"data should only contain numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " only", " contain", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0029635580722242594, -1.2397689715726301e-05, -0.006353417877107859, -0.08262434601783752, -0.36346277594566345, -0.22835390269756317, -1.3415981531143188, -0.02242632582783699, -0.09294391423463821, -0.5217480063438416, -0.02054598741233349, -0.004769140388816595, -0.0002317160106031224, -0.0006414977833628654], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05100608989596367, -0.03772416710853577, -0.00016783259343355894, -0.009683067910373211, -5.602820692729438e-06, -0.0001392267586197704, -8.5588610090781e-05, -0.003777156351134181, -0.005179557949304581, -0.000871159543748945], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0006070678355172276, -2.0146166207268834e-05, -0.007840453647077084, -0.052267249673604965, -0.03902957960963249, -0.005182997323572636, -0.0011523280991241336, -0.09874046593904495, -0.010024204850196838, -0.30157041549682617, -0.005992422811686993, -0.00032729512895457447, -0.01557155791670084, -0.0001262346631847322, -0.001303180935792625, -0.1690763384103775, -0.007062944583594799, -0.00017486473370809108, -0.0004295380203984678], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.07171393930912018, -0.024967489764094353, -0.00032145579461939633, -0.0023206942714750767, -1.9073304429184645e-05, -0.00014065706636756659, -0.00015829740732442588, -0.005360277835279703, -0.007758838124573231, -0.0010968389688059688], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006741044111549854, -7.867782187531702e-06, -0.010575679130852222, -0.01971202902495861, -0.0200718455016613, -0.008388168178498745, -0.011525122448801994, -0.0648244097828865, -0.008449164219200611, -0.13355761766433716, -0.10843425989151001, -0.3231287896633148, -0.011829464696347713, -0.0003703146940097213, -0.0004677870310842991], "finish_reason": "stop"}, {"text": " data.drop(target_column, axis=1)", "tokens": [" data", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.015504656359553337, -0.2865709662437439, -0.45922255516052246, -0.17378905415534973, -0.6090357899665833, -5.578839045483619e-05, -6.460934673668817e-05, -0.0021400186233222485, -0.007858313620090485, -0.0645512044429779, -0.014079644344747066, -0.021632665768265724, -0.046395234763622284], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009865100495517254, -0.05994032323360443, -0.000918681500479579, -1.9073304429184645e-05, -1.5497195136049413e-06, -0.000286657246761024, -0.005918003618717194], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, random_state=random_state, test_size=test_size)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " random", "_", "state", "=", "random", "_", "state", ",", " test", "_", "size", "=", "test", "_", "size", ")", "\n"], "logprobs": [-0.017737923189997673, -0.00025078488397412, -0.004526843782514334, -0.0013509204145520926, -0.0027286699041724205, -9.679325739853084e-05, -0.00135318236425519, -0.00023958197562023997, -0.0037934263236820698, -5.173549288883805e-05, -0.0004359725280664861, -0.00499773770570755, -0.017150310799479485, -4.291525328881107e-06, -8.106198947643861e-06, -7.748573807475623e-06, -5.125986263010418e-06, -0.00038187362952157855, -0.6230074167251587, -0.0014281797921285033, -0.022129040211439133, -0.0004338276921771467, -1.5945782661437988, -1.4543427823809907e-05, -9.810443589231e-05, -0.029318243265151978, -0.0033871917985379696, -0.000105375460407231, -5.006664650863968e-05, -0.014676582999527454, -0.03149353340268135, -7.152555099310121e-07, -9.989239333663136e-05, -0.011075920425355434, -0.006054513156414032, -4.410646579344757e-05, -7.510157047363464e-06, -0.27364441752433777, -0.0025856418069452047], "finish_reason": "stop"}, {"text": " LinearRegression().fit(X_train, y_train)", "tokens": [" Linear", "Reg", "ression", "()", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.002821514382958412, -1.2516897186287679e-05, -0.00010144196130568162, -0.051688265055418015, -2.015091896057129, -8.654219709569588e-05, -0.0005427317810244858, -0.002434982219710946, -0.045249246060848236, -0.0019054129952564836, -0.008665931411087513, -0.011800955049693584, -0.0004567056894302368, -1.4305012882687151e-05, -0.0015567338559776545, -0.0018615075387060642], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)<|endoftext|>from pathlib import Path", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")<", "|", "end", "of", "text", "|>", "from", " path", "lib", " import", " Path", "\n"], "logprobs": [-0.027671637013554573, -0.0003003622987307608, -0.0010481346398591995, -0.00017557987303007394, -0.0012771077454090118, -0.0026071625761687756, -0.0013559204526245594, -0.0004948345012962818, -0.013322030194103718, -9.7508447652217e-05, -4.207999518257566e-05, -1.484188437461853, -5.960462772236497e-07, -3.099436753473128e-06, -3.9457496313843876e-05, -9.965400386136025e-05, -0.13147225975990295, -0.8695156574249268, -4.192089557647705, -0.00506404135376215, -0.0007490689749829471, -0.007862570695579052, -0.004140495788305998], "finish_reason": "stop"}], "metrics": {"energy": 344.11831759834297, "energy_per_token": 1.2888326501810599, "time": 15.55563, "time_per_token": 0.05826078651685394}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(f\"data should be of type pandas.DataFrame, got {type(data).__name__}.\")", "tokens": [" Value", "Error", "(", "f", "\"", "data", " should", " be", " of", " type", " pandas", ".", "DataFrame", ",", " got", " {", "type", "(", "data", ")", ".", "__", "name", "__", "}", ".", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -1.4155364036560059, -0.29484638571739197, -0.7701387405395508, -2.52105450630188, -0.010134311392903328, -1.948868989944458, -0.023731941357254982, -1.4695632457733154, -0.05145356431603432, -0.01594049297273159, -0.5036256313323975, -1.5180054903030396, -0.14784812927246094, -0.04829942435026169, -0.0004609952447935939, -0.0007637205999344587, -2.9280340671539307, -0.017691077664494514, -0.0017575069796293974, -0.00687092961743474, -0.00045694399159401655, -0.49445292353630066, -2.1205668449401855, -0.016597995534539223, -0.0014113951474428177, -0.0011075560469180346], "finish_reason": "stop"}, {"text": " not data.columns:", "tokens": [" not", " data", ".", "columns", ":", "\n"], "logprobs": [-1.4960259199142456, -0.14998942613601685, -0.15367335081100464, -3.2208852767944336, -0.3626476228237152, -0.019930224865674973], "finish_reason": "stop"}, {"text": " ValueError(\"data is empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004808938247151673, -1.1205610462639015e-05, -0.0049957213923335075, -0.007964519783854485, -0.0907142162322998, -1.1880443096160889, -0.009479038417339325, -0.0940462201833725, -0.0073556313291192055, -6.997340824455023e-05, -0.0002783149539027363], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.15705974400043488, -3.397406908334233e-05, -0.0001113352773245424, -0.002510374179109931, -5.4596363042946905e-05, -0.006095983553677797, -0.39183610677719116, -0.005370712373405695, -0.0014396075857803226, -0.0010275328531861305], "finish_reason": "stop"}, {"text": " ValueError(\"target_column should be a column in data.\")", "tokens": [" Value", "Error", "(", "\"", "target", "_", "column", " should", " be", " a", " column", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0006820021662861109, -3.659658250398934e-05, -0.004632930271327496, -0.8829897046089172, -0.36347338557243347, -0.04577115923166275, -0.0034267534501850605, -0.43915364146232605, -0.009335791692137718, -0.036812618374824524, -0.01044615637511015, -1.311201810836792, -0.07728719711303711, -0.031173046678304672, -0.003470352618023753, -0.000350175570929423, -0.00042012447374872863], "finish_reason": "stop"}, {"text": " not data[target_column].all():", "tokens": [" not", " data", "[", "target", "_", "column", "]", ".", "all", "():", "\n"], "logprobs": [-0.44744008779525757, -0.855578601360321, -0.04422113299369812, -0.0016356435371562839, -4.8993817472364753e-05, -4.887569048150908e-06, -0.0005290300468914211, -5.578839045483619e-05, -3.3908133506774902, -0.27406251430511475, -0.021404339000582695], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0029635580722242594, -1.2397689715726301e-05, -0.006353417877107859, -0.08262434601783752, -0.36346277594566345, -0.22835390269756317, -0.4068847596645355, -0.35548555850982666, -0.08003493398427963, -0.7285661101341248, -0.023509450256824493, -0.004282470792531967, -0.00028379703871905804, -0.0006038511055521667], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05100608989596367, -0.03772416710853577, -0.00016783259343355894, -0.009683067910373211, -5.602820692729438e-06, -0.0001392267586197704, -8.5588610090781e-05, -0.003777156351134181, -0.005179557949304581, -0.000871159543748945], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0006070678355172276, -2.0146166207268834e-05, -0.007840453647077084, -0.052267249673604965, -0.03902957960963249, -0.005182997323572636, -0.0011523280991241336, -0.09874046593904495, -0.010024204850196838, -0.30157041549682617, -0.005992422811686993, -0.00032729512895457447, -0.01557155791670084, -0.0001262346631847322, -0.001303180935792625, -0.1690763384103775, -0.007062944583594799, -0.00017486473370809108, -0.0004295380203984678], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.07171393930912018, -0.024967489764094353, -0.00032145579461939633, -0.0023206942714750767, -1.9073304429184645e-05, -0.00014065706636756659, -0.00015829740732442588, -0.005360277835279703, -0.007758838124573231, -0.0010968389688059688], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", "\"", ")", "\n"], "logprobs": [-0.006741044111549854, -7.867782187531702e-06, -0.010575679130852222, -0.01971202902495861, -0.0200718455016613, -0.008388168178498745, -0.011525122448801994, -0.0648244097828865, -0.008449164219200611, -0.13355761766433716, -0.10843425989151001, -2.101670265197754, -0.00034648136352188885, -0.0006146925734356046], "finish_reason": "stop"}, {"text": " data[[col for col in data if col != target_column]]", "tokens": [" data", "[[", "col", " for", " col", " in", " data", " if", " col", " ", "!", "=", " target", "_", "column", "]]", "\n"], "logprobs": [-0.017389217391610146, -2.329371213912964, -1.7043797969818115, -0.028492730110883713, -0.002444495679810643, -0.0011819765204563737, -0.009180948138237, -1.8763434886932373, -0.02988162823021412, -0.05422252044081688, -8.344646857949556e-07, -0.0001380348257953301, -0.015462048351764679, -1.3351351299206726e-05, -5.280832192511298e-05, -0.013814550824463367, -0.037677101790905], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009274259209632874, -0.05722477659583092, -0.000813034363090992, -1.3828182090946939e-05, -1.9073468138230965e-06, -0.0002834395272657275, -0.007272201124578714], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y,", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", "\n"], "logprobs": [-0.015318011865019798, -0.0002805792901199311, -0.003481994615867734, -0.0016859853640198708, -0.0027883481234312057, -0.00010311071673640981, -0.001259725191630423, -0.0002273062855238095, -0.0028198501095175743, -5.1973900554003194e-05, -0.00047195740626193583, -0.003639266826212406, -0.01659119501709938, -3.576272320060525e-06, -7.390948667307384e-06, -1.0251946150674485e-05, -5.006777428206988e-06, -0.00039521988946944475, -0.5795176029205322, -0.0012148389359936118, -0.023991508409380913, -0.0004632591735571623, -2.662053108215332], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0031887658406049013, -1.156323378381785e-05, -9.119095193454996e-05, -0.055789828300476074, -0.17882584035396576], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.023586297407746315, -0.00030286493711173534, -0.0010705222375690937, -0.00020013237372040749, -0.001379491644911468, -0.00258516613394022, -0.0018980359891429543, -0.0003780603874474764, -0.01262646820396185, -0.00011681827891152352, -4.2676016164477915e-05, -0.24388836324214935, -0.3072667717933655], "finish_reason": "stop"}], "metrics": {"energy": 332.18064435577384, "energy_per_token": 1.4698258599813, "time": 13.66911, "time_per_token": 0.06048278761061947}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"data is not a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "data", " is", " not", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -0.5487797260284424, -1.627244472503662, -0.017343994230031967, -0.04481368884444237, -0.195293590426445, -0.006947644986212254, -1.404954195022583, -0.026561787351965904, -0.00033301531220786273, -0.0009970461251214147], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5250754952430725, -0.007835722528398037, -0.031535692512989044, -0.004485901445150375, -0.0050082942470908165], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00047910655848681927, -1.2397689715726301e-05, -0.00522094639018178, -0.008109737187623978, -0.09542907774448395, -0.6119651198387146, -0.21730166673660278, -0.0076601807959377766, -0.009351499378681183, -0.05056034028530121, -0.0016477829776704311, -7.664863369427621e-05, -0.0002812943421304226], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.1493338793516159, -1.883488948806189e-05, -0.00013243274588603526, -0.002360179089009762, -5.94836674281396e-05, -0.006747792940586805, -0.48851755261421204, -0.005041386932134628, -0.0017302555497735739, -0.0011082704877480865], "finish_reason": "stop"}, {"text": " ValueError(f\"data should contain the column '{target_column}'.\")", "tokens": [" Value", "Error", "(", "f", "\"", "data", " should", " contain", " the", " column", " '", "{", "target", "_", "column", "}'", ".", "\"", ")", "\n"], "logprobs": [-0.0005872909096069634, -4.053033626405522e-05, -0.004817664157599211, -0.7074559926986694, -0.02034182660281658, -1.2033132314682007, -0.6598257422447205, -0.11686009168624878, -1.3141744136810303, -0.37788867950439453, -0.8962848782539368, -0.0006859333370812237, -0.0009840651182457805, -2.992108420585282e-05, -6.890059739816934e-05, -0.003143728245049715, -0.12072587013244629, -0.002983882324770093, -0.00029297350556589663, -0.00041333239641971886], "finish_reason": "stop"}, {"text": " not pd.api.types.is_numeric_dtype(data[target_column]):", "tokens": [" not", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "data", "[", "target", "_", "column", "]", "):", "\n"], "logprobs": [-0.3607860207557678, -1.5859198570251465, -0.00015984688070602715, -0.1776081919670105, -0.00014983485743869096, -0.00270845927298069, -3.4689302992774174e-05, -0.0005545270396396518, -0.000651147507596761, -0.0020848223939538, -0.001255677198059857, -0.005222843494266272, -0.0001397035230183974, -0.00039176418795250356, -0.0036367725115269423, -0.0448167659342289, -0.0004570631426759064, -4.0531076592742465e-06, -2.145764938177308e-06, -0.012224866077303886, -0.02616179548203945, -0.002144182100892067], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.003215502016246319, -1.07287787614041e-05, -0.0049384282901883125, -0.055375758558511734, -0.32821568846702576, -0.25276440382003784, -0.4738130271434784, -1.5464961528778076, -0.35158541798591614, -0.6637960076332092, -0.005405216012150049, -0.0002057340752799064, -0.0005401106318458915], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.05097629502415657, -0.04257411137223244, -0.00015555603022221476, -0.00876531656831503, -7.152531907195225e-06, -0.00015627116954419762, -9.285972191719338e-05, -0.003873941022902727, -0.006718427408486605, -0.0006853376980870962], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005290300468914211, -2.098061486321967e-05, -0.007771849632263184, -0.04741952195763588, -0.03585802763700485, -0.006130106747150421, -0.0011041027028113604, -0.09579721838235855, -0.008959567174315453, -0.30780109763145447, -0.005155957769602537, -0.000311802898067981, -0.015501839108765125, -0.00011586471373448148, -0.0014427024871110916, -0.1745639443397522, -0.00757784117013216, -0.00014530557382386178, -0.00037520044133998454], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.0756559893488884, -0.028000663965940475, -0.00031835734262131155, -0.002465781755745411, -1.8596476365928538e-05, -0.00011681827891152352, -0.00014077626110520214, -0.006158541887998581, -0.006495197769254446, -0.0010656398953869939], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.007424027193337679, -8.4638240878121e-06, -0.010029870085418224, -0.02192123606801033, -0.025418397039175034, -0.008098148740828037, -0.00908054132014513, -0.07134693115949631, -0.00898355059325695, -0.11343799531459808, -0.09723325818777084, -0.3218715786933899, -0.013126860372722149, -0.0004085659747943282, -0.00045944625162519515], "finish_reason": "stop"}, {"text": " data.drop(target_column, axis=1)", "tokens": [" data", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0169006809592247, -0.32716330885887146, -0.5059379935264587, -0.18128423392772675, -0.6938697099685669, -4.076874756719917e-05, -6.83045873302035e-05, -0.002336869016289711, -0.006930361036211252, -0.06194934993982315, -0.020350821316242218, -0.022017214447259903, -0.05134598910808563], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.010104455053806305, -0.05869600549340248, -0.0008607972995378077, -1.7881233361549675e-05, -1.311301275563892e-06, -0.00026341783814132214, -0.006361117586493492], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.018196668475866318, -0.0002019201492657885, -0.003586528589949012, -0.0012468667700886726, -0.0023085628636181355, -9.595887240720913e-05, -0.0012502004392445087, -0.00018487652414478362, -0.002721180208027363, -5.1020273531321436e-05, -0.00043406602344475687, -0.004482934717088938, -0.01765219308435917, -3.576272320060525e-06, -7.390948667307384e-06, -7.271740287251305e-06, -4.6491513785440475e-06, -0.00045193947153165936, -0.579272985458374, -0.0012487717904150486, -0.02170802466571331, -0.000382707774406299, -0.35888785123825073, -3.421248038648628e-05, -4.088794958079234e-05, -0.03125866502523422, -0.013592429459095001, -5.340433563105762e-05, -2.622600959512056e-06, -0.0023437668569386005, -0.06011321023106575, -2.3841855067985307e-07, -5.125986263010418e-06, -0.008199954405426979, -0.0017348966794088483, -4.124556289752945e-05, -0.0001532914029667154, -0.09284929931163788, -0.0026058547664433718], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.002730690874159336, -1.156323378381785e-05, -8.475421054754406e-05, -0.04434806481003761, -0.14484429359436035], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.020885657519102097, -0.0002859421947505325, -0.0009515525307506323, -0.00022265815641731024, -0.0011642351746559143, -0.0030493687372654676, -0.0020309314131736755, -0.00046993177966214716, -0.013169215060770512, -0.00010907054820563644, -4.351044481154531e-05, -0.30343225598335266, -0.3084528148174286], "finish_reason": "stop"}], "metrics": {"energy": 321.896421139717, "energy_per_token": 1.3525059711752816, "time": 14.075019, "time_per_token": 0.059138735294117645}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"Data is not a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Data", " is", " not", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -1.5359737873077393, -1.399320125579834, -0.020806150510907173, -0.07513650506734848, -0.41168323159217834, -0.01891995407640934, -0.6463954448699951, -0.0004086851258762181, -0.0006450717919506133], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5727166533470154, -0.007058683317154646, -0.027954064309597015, -0.00460516382008791, -0.004958000965416431], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00043871314846910536, -1.0251946150674485e-05, -0.005012208595871925, -0.00871213898062706, -0.09510958194732666, -0.5727030634880066, -0.21050982177257538, -0.008689922280609608, -0.011528539471328259, -0.05548831447958946, -0.0014510351466014981, -8.77341881277971e-05, -0.00029988560709170997], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.14878535270690918, -1.9550132492440753e-05, -0.00010883215873036534, -0.002300356514751911, -5.1973900554003194e-05, -0.005887665785849094, -0.4190305769443512, -0.004437243565917015, -0.0011994794476777315, -0.0010508735431358218], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0006743779522366822, -3.480850500636734e-05, -0.005487734917551279, -2.074583053588867], "finish_reason": "stop"}, {"text": " not np.issubdtype(data[target_column].dtype, np.number):", "tokens": [" not", " np", ".", "iss", "ub", "d", "type", "(", "data", "[", "target", "_", "column", "]", ".", "d", "type", ",", " np", ".", "number", "):", "\n"], "logprobs": [-0.4227680563926697, -1.7748241424560547, -4.2914423829643056e-05, -0.13519179821014404, -0.0008665143977850676, -0.00022587609419133514, -6.568216485902667e-05, -0.0013236580416560173, -0.01855679787695408, -0.024250894784927368, -0.0005763299996033311, -1.6689160474925302e-05, -2.622600959512056e-06, -0.0005667987279593945, -0.0012330556055530906, -0.006317999679595232, -0.005613041575998068, -0.0016914597945287824, -0.011313806287944317, -5.340433563105762e-05, -0.02080848626792431, -0.008649740368127823, -0.003116039326414466], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric columns.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0033091329969465733, -1.2397689715726301e-05, -0.005851401016116142, -0.06258166581392288, -0.29961907863616943, -0.26489439606666565, -0.3983675241470337, -0.3311561942100525, -0.0761706754565239, -1.1219756603240967, -0.024412961676716805, -0.004300631582736969, -0.00029118589009158313, -0.0006357794045470655], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.051383357495069504, -0.03334050253033638, -0.00016151554882526398, -0.008930621668696404, -5.245195097813848e-06, -0.00013433984713628888, -8.129743218887597e-05, -0.0038738222792744637, -0.006193492095917463, -0.000726316764485091], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005981324939057231, -2.109982233378105e-05, -0.008053923025727272, -0.04675217717885971, -0.03907967731356621, -0.006453151814639568, -0.001208766596391797, -0.09114383906126022, -0.011448285542428493, -0.31033438444137573, -0.004916957579553127, -0.00030214988510124385, -0.01343036349862814, -0.00011550712952157483, -0.0013086573453620076, -0.17138727009296417, -0.00769933732226491, -0.00014709345123264939, -0.0004151197790633887], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06675731390714645, -0.02965390682220459, -0.0003057250869460404, -0.002542836358770728, -1.4781842764932662e-05, -0.00014768941036891192, -0.00016068121476564556, -0.006641931366175413, -0.007526848465204239, -0.0010674261720851064], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an int.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " int", ".", "\"", ")", "\n"], "logprobs": [-0.007333857472985983, -9.417489309271332e-06, -0.009155316278338432, -0.022153642028570175, -0.02173788659274578, -0.008790486492216587, -0.010200983844697475, -0.06484876573085785, -0.009896380826830864, -0.1169918105006218, -2.416499137878418, -0.5836349129676819, -0.020038194954395294, -0.000387831823900342, -0.00047541281674057245], "finish_reason": "stop"}, {"text": " data.iloc[:, :2]", "tokens": [" data", ".", "il", "oc", "[:", ",", " :", "2", "]", "\n"], "logprobs": [-0.017549704760313034, -0.2860739827156067, -1.523791790008545, -0.00021419614495243877, -0.01049947738647461, -0.013025437481701374, -1.5108622312545776, -2.620084047317505, -0.0029419257771223783, -0.12294337898492813], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008741091936826706, -0.05297739431262016, -0.0006850994541309774, -1.7762025890988298e-05, -1.5497195136049413e-06, -0.0003156163729727268, -0.007280012127012014], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.015747828409075737, -0.00024005869636312127, -0.0036789372097700834, -0.0014288941165432334, -0.002496223896741867, -0.00012730741582345217, -0.0010494445450603962, -0.00022230061586014926, -0.002513109240680933, -5.4238757002167404e-05, -0.0004357342259027064, -0.004022959154099226, -0.01592089980840683, -2.9802276912960224e-06, -7.748573807475623e-06, -6.794906312279636e-06, -5.006777428206988e-06, -0.0004737447015941143, -0.7926577925682068], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0026727926451712847, -1.1086402082582936e-05, -9.42901024245657e-05, -0.044791460037231445, -0.17099037766456604], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")"], "logprobs": [-0.02121552638709545, -0.0002946419408544898, -0.001141968765296042, -0.00020275443966966122, -0.001353777595795691, -0.0029475123155862093, -0.0017663128674030304, -0.00042083943844772875, -0.012338969856500626, -0.00010954733443213627, -4.017272294731811e-05, -0.222390815615654], "finish_reason": "stop"}], "metrics": {"energy": 280.80449482822405, "energy_per_token": 1.4110778634584122, "time": 12.635443, "time_per_token": 0.06349468844221105}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError('data must be a DataFrame')", "tokens": [" Value", "Error", "('", "data", " must", " be", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -1.8535211086273193, -0.5241326093673706, -0.5579097270965576, -0.0036874888464808464, -0.07570329308509827, -0.8187072277069092, -0.006277486216276884, -0.20228271186351776, -0.00048375347978435457], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-1.711531639099121, -0.18363085389137268, -0.1240977868437767, -0.2124745398759842, -0.0028284089639782906, -0.015018956735730171], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004576589271891862, -1.1324817933200393e-05, -0.004769852384924889, -0.009289612993597984, -0.11245488375425339, -0.5594655275344849, -0.21976116299629211, -0.00847576092928648, -0.010524957440793514, -0.05129004642367363, -0.0015254301251843572, -7.092700980138034e-05, -0.0003268184664193541], "finish_reason": "stop"}, {"text": " target_column not in data:", "tokens": [" target", "_", "column", " not", " in", " data", ":", "\n"], "logprobs": [-0.12684950232505798, -2.8132995794294402e-05, -0.00014101465058047324, -0.001961690140888095, -5.721882189391181e-05, -0.005285219289362431, -1.0952352285385132, -0.0012987758964300156], "finish_reason": "stop"}, {"text": " ValueError(f\"{target_column} is not a column in data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "target", "_", "column", "}", " is", " not", " a", " column", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0006713996990583837, -4.1483970562694594e-05, -0.004132304340600967, -0.8526549339294434, -0.020117761567234993, -1.1410926580429077, -0.0036510254722088575, -1.3112935448589269e-05, -0.00029988560709170997, -0.021682128310203552, -0.177454873919487, -0.0031244768761098385, -0.035968199372291565, -0.02631356753408909, -1.3847904205322266, -0.0881505012512207, -0.0590544268488884, -0.011461838148534298, -0.00030191155383363366, -0.0004981707315891981], "finish_reason": "stop"}, {"text": " data[target_column].dtype == object:", "tokens": [" data", "[", "target", "_", "column", "]", ".", "d", "type", " ==", " object", ":", "\n"], "logprobs": [-1.304965615272522, -0.036575205624103546, -0.003991494886577129, -3.814624506048858e-05, -5.125986263010418e-06, -0.0006993946735747159, -0.00032848684350028634, -0.451875239610672, -0.5175561308860779, -2.340662956237793, -1.4925751686096191, -0.056181300431489944, -0.006149892695248127], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain numeric values only.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " numeric", " values", " only", ".", "\"", ")", "\n"], "logprobs": [-0.0030600647442042828, -1.168244216387393e-05, -0.0046309130266308784, -0.0656082034111023, -0.31292858719825745, -0.2862197756767273, -0.4043578505516052, -1.4942190647125244, -0.37875452637672424, -0.9928578734397888, -0.02635827101767063, -0.006014581304043531, -0.00027926836628466845, -0.0006835508393123746], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.04723362252116203, -0.041557427495718, -0.00014029949670657516, -0.008045763708651066, -6.198863957251888e-06, -0.000120751719805412, -8.40390202938579e-05, -0.004729631822556257, -0.006326054688543081, -0.0007956438348628581], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be a float between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " a", " float", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0006307758158072829, -1.645074735279195e-05, -0.008121679536998272, -0.05257652327418327, -0.030655361711978912, -0.0073410761542618275, -0.0013616346986964345, -0.08955319225788116, -0.009022891521453857, -1.9040327072143555, -1.76271390914917, -0.1939498484134674, -0.005563727114349604, -0.00017796363681554794, -0.01599457673728466, -8.535020606359467e-05, -0.0009402383584529161, -0.08030856400728226, -0.005879844073206186, -0.0002138386043952778, -0.0005813338793814182], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.06867268681526184, -0.032084785401821136, -0.0002735478919930756, -0.002673387061804533, -1.9192511899746023e-05, -0.00011669908417388797, -0.000169382052263245, -0.0063557871617376804, -0.0069142603315413, -0.00099323526956141], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.006067665293812752, -8.34461570775602e-06, -0.010386107489466667, -0.02180122211575508, -0.023685257881879807, -0.006661470513790846, -0.01118084229528904, -0.06519851088523865, -0.008495618589222431, -0.12094306945800781, -0.10961738228797913, -0.3401871919631958, -0.012052449397742748, -0.0004273931554052979, -0.0005465444410219789], "finish_reason": "stop"}, {"text": " data.loc[:, data.columns != target_column]", "tokens": [" data", ".", "loc", "[:", ",", " data", ".", "columns", " ", "!", "=", " target", "_", "column", "]", "\n"], "logprobs": [-0.015812132507562637, -0.31328535079956055, -2.3270161151885986, -0.004971760790795088, -0.0025684009306132793, -0.4954058527946472, -0.022074120119214058, -0.005472084973007441, -0.3109782636165619, -1.4305104514278355e-06, -1.4305012882687151e-05, -0.008875916711986065, -8.106198947643861e-06, -1.6569954823353328e-05, -0.002051988383755088, -0.06323819607496262], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.011067785322666168, -0.05876075103878975, -0.0008768765837885439, -2.3245540432981215e-05, -1.311301275563892e-06, -0.00031418632715940475, -0.00660249637439847], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.015493153594434261, -0.00019059749320149422, -0.003427228657528758, -0.001876142923720181, -0.0028368488419800997, -0.00010466027742950246, -0.001401514746248722, -0.0002397011558059603, -0.002676240401342511, -5.07818695041351e-05, -0.0004318020073696971, -0.00452399579808116, -0.020309703424572945, -3.576272320060525e-06, -8.106198947643861e-06, -9.536697689327411e-06, -5.722029527532868e-06, -0.0004103533865418285, -0.669227123260498], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.002764096949249506, -1.1205610462639015e-05, -0.00010191874753218144, -0.044826339930295944, -0.14218670129776], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.023191869258880615, -0.00028165188268758357, -0.0010570659069344401, -0.00023064337437972426, -0.0012171011185273528, -0.003016210161149502, -0.0019143365789204836, -0.0004166688595432788, -0.012785838916897774, -0.00010048838157672435, -3.576214658096433e-05, -0.21218059957027435, -0.2971453368663788], "finish_reason": "stop"}], "metrics": {"energy": 295.2485220813751, "energy_per_token": 1.3992820951723939, "time": 13.019792, "time_per_token": 0.06170517535545024}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -2.3496718406677246], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-1.4960259199142456, -0.14998942613601685, -0.15367335081100464, -0.24517154693603516, -0.0028968772385269403, -0.015148123726248741], "finish_reason": "stop"}, {"text": " ValueError(\"data should not be empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " be", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.0004808938247151673, -1.1205610462639015e-05, -0.0049957213923335075, -0.007964519783854485, -0.0907142162322998, -0.6224352717399597, -0.21758709847927094, -0.006815993692725897, -0.009508322924375534, -0.04895904287695885, -0.0016251702327281237, -8.046303264563903e-05, -0.0003091811086051166], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.12845975160598755, -3.2305197237292305e-05, -0.00013016807497479022, -0.002369931200519204, -6.437094270950183e-05, -0.0065058572217822075, -0.4447203278541565, -0.0050667691975831985, -0.001660279231145978, -0.0011269653914496303], "finish_reason": "stop"}, {"text": " ValueError(\"target_column should be a column of data.\")", "tokens": [" Value", "Error", "(", "\"", "target", "_", "column", " should", " be", " a", " column", " of", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0007581220706924796, -4.362964682513848e-05, -0.0042708381079137325, -0.8882688283920288, -0.35364553332328796, -0.0445876307785511, -0.003838790813460946, -0.4408952295780182, -0.009469473734498024, -0.033671244978904724, -0.011409629136323929, -0.31285178661346436, -0.03783838450908661, -0.016852740198373795, -0.0030790797900408506, -0.00019441144831944257, -0.0002960720448754728], "finish_reason": "stop"}, {"text": " not all(pd.api.types.is_numeric_dtype(col) for col in data[target_column]):", "tokens": [" not", " all", "(", "pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "col", ")", " for", " col", " in", " data", "[", "target", "_", "column", "]", "):", "\n"], "logprobs": [-0.40376079082489014, -2.564847946166992, -0.09052454680204391, -1.1195409297943115, -0.0004320403386373073, -0.22958040237426758, -0.00035363141796551645, -0.0025909922551363707, -7.510157047363464e-06, -0.00035565727739594877, -0.008694530464708805, -0.004214690998196602, -0.0012848464539274573, -0.0019452712731435895, -0.00018130090029444546, -0.0003505330823827535, -1.010056734085083, -0.00645812600851059, -0.014230088330805302, -0.0056446916423738, -0.002637838013470173, -0.0021105175837874413, -1.603684425354004, -0.20028729736804962, -0.000164018536452204, -1.2636104656849056e-05, -0.03154412657022476, -0.06241816282272339, -0.0026812339201569557], "finish_reason": "stop"}, {"text": " ValueError(\"data should only contain numeric columns.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " only", " contain", " numeric", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.003916808404028416, -1.2636104656849056e-05, -0.00655287504196167, -0.06738748401403427, -0.3537899851799011, -0.28088611364364624, -1.2998219728469849, -0.023946933448314667, -0.09308099746704102, -1.666214108467102, -0.02562745101749897, -0.005459992215037346, -0.0004731489170808345, -0.0007655074005015194], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.049339354038238525, -0.03390289470553398, -0.00016830935783218592, -0.008954605087637901, -7.986990567587782e-06, -0.00014554394874721766, -7.414542778860778e-05, -0.004189999308437109, -0.006928940303623676, -0.000872946111485362], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be a fraction between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " a", " fraction", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005691815749742091, -2.3483953555114567e-05, -0.006555243860930204, -0.057452160865068436, -0.03673367574810982, -0.007584584876894951, -0.0012394849909469485, -0.10284847021102905, -0.010749883949756622, -1.9278498888015747, -1.0078169107437134, -0.11632656306028366, -0.010341038927435875, -0.000358159770257771, -0.011507445015013218, -0.00011300401820335537, -0.0011250602547079325, -0.06242992356419563, -0.00412446865811944, -0.00019035911827813834, -0.00046957432641647756], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.07168642431497574, -0.02874040976166725, -0.0003323002893012017, -0.0023847969714552164, -2.074220174108632e-05, -0.00012516192509792745, -0.0001311216183239594, -0.00566401332616806, -0.007533237338066101, -0.0010028815595433116], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer.\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.007721458096057177, -8.940656698541716e-06, -0.0112924724817276, -0.020320100709795952, -0.020441459491848946, -0.008238144218921661, -0.009746110066771507, -0.0657937303185463, -0.008573628030717373, -0.1331101506948471, -0.12287823110818863, -0.3431318402290344, -0.011700810864567757, -0.0004901876673102379, -0.0004459816846065223], "finish_reason": "stop"}, {"text": " data.drop(columns=target_column)", "tokens": [" data", ".", "drop", "(", "columns", "=", "target", "_", "column", ")", "\n"], "logprobs": [-0.017422957345843315, -0.2731933295726776, -0.47018444538116455, -0.1696837693452835, -0.7375684976577759, -0.4631038308143616, -0.006782012525945902, -0.0006267252028919756, -4.207999518257566e-05, -1.9911487102508545, -0.045830145478248596], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009684484452009201, -0.05866295471787453, -0.0008909308817237616, -2.109982233378105e-05, -1.5497195136049413e-06, -0.0002714027068577707, -0.007111830171197653], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.017148202285170555, -0.0002469711471349001, -0.0035438849590718746, -0.001388658070936799, -0.0023035677149891853, -0.00011073929636040702, -0.001453415839932859, -0.000228140561375767, -0.002455436158925295, -4.994744449504651e-05, -0.00037293630884960294, -0.004017972387373447, -0.016938773915171623, -3.4570634852570947e-06, -7.033323527139146e-06, -7.033323527139146e-06, -4.887569048150908e-06, -0.0004717191040981561, -0.5476032495498657, -0.0013635394861921668, -0.021444011479616165, -0.0004312062228564173, -0.3405866026878357, -4.756337511935271e-05, -4.792098479811102e-05, -0.029029136523604393, -0.015144836157560349, -5.745722592109814e-05, -2.861018856492592e-06, -0.002087915316224098, -0.0621858574450016, -2.3841855067985307e-07, -5.006777428206988e-06, -0.007862570695579052, -0.001930517959408462, -4.2914423829643056e-05, -0.0001461399078834802, -0.08811764419078827, -0.002415717113763094], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0030834770295768976, -1.2636104656849056e-05, -9.560128091834486e-05, -0.048586875200271606, -0.16583256423473358], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)<|endoftext|>#!/usr/bin/env python", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.022122975438833237, -0.0003150205302517861, -0.001302228425629437, -0.00016675988445058465, -0.0012336509535089135, -0.0025272592902183533, -0.0017685738857835531, -0.00042500998824834824, -0.012397724203765392, -0.00010346830822527409, -4.029192859889008e-05, -1.3722176551818848, -8.344646857949556e-07, -2.622600959512056e-06, -7.259582343976945e-05, -0.00010263393050990999, -0.12204713374376297, -1.8476924896240234, -1.385080099105835, -0.05143624171614647, -0.0700957253575325, -7.950943836476654e-05, -0.0036915268283337355, -0.0002698534226510674, -0.06594741344451904, -0.004519960843026638, -0.8945985436439514], "finish_reason": "stop"}], "metrics": {"energy": 325.01124687957775, "energy_per_token": 1.31052922128862, "time": 14.5025015, "time_per_token": 0.05847782862903225}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1428801268339157, -0.04723157733678818, -0.0005073452484793961, -0.014641458168625832, -0.0004855407460127026, -0.03722020238637924, -5.722029527532868e-06, -0.03811795637011528, -0.0206252820789814, -0.005152043886482716], "finish_reason": "stop"}, {"text": " ValueError(\"Data must be a DataFrame!\")", "tokens": [" Value", "Error", "(", "\"", "Data", " must", " be", " a", " Data", "Frame", "!", "\"", ")", "\n"], "logprobs": [-0.026018131524324417, -5.221230458118953e-05, -0.1760251522064209, -0.41486117243766785, -1.5359737873077393, -0.6029487252235413, -0.00221804971806705, -0.08896563202142715, -1.4569940567016602, -0.011975535191595554, -3.182556390762329, -0.015049605630338192, -0.00032276666024699807, -0.0014278227463364601], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5727166533470154, -0.007058683317154646, -0.027954064309597015, -0.00460516382008791, -0.004958000965416431], "finish_reason": "stop"}, {"text": " ValueError(\"data should be non empty.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " be", " non", " empty", ".", "\"", ")", "\n"], "logprobs": [-0.00043871314846910536, -1.0251946150674485e-05, -0.005012208595871925, -0.00871213898062706, -0.09510958194732666, -0.5727030634880066, -2.7857985496520996, -0.2934496998786926, -1.970728874206543, -0.1380978226661682, -0.0046156058087944984, -0.00019238528329879045, -0.00036995718255639076], "finish_reason": "stop"}, {"text": " target_column not in data.columns:", "tokens": [" target", "_", "column", " not", " in", " data", ".", "columns", ":", "\n"], "logprobs": [-0.14878535270690918, -1.9550132492440753e-05, -0.00010883215873036534, -0.002300356514751911, -5.1973900554003194e-05, -0.005887665785849094, -0.4190305769443512, -0.004437243565917015, -0.0011994794476777315, -0.0010508735431358218], "finish_reason": "stop"}, {"text": " ValueError(f\"data should contain a column named {target_column}.\")", "tokens": [" Value", "Error", "(", "f", "\"", "data", " should", " contain", " a", " column", " named", " {", "target", "_", "column", "}", ".", "\"", ")", "\n"], "logprobs": [-0.0006743779522366822, -3.480850500636734e-05, -0.005487734917551279, -0.7460518479347229, -0.022495796903967857, -1.2011247873306274, -0.6690883040428162, -0.12535959482192993, -0.6749312281608582, -0.024912143126130104, -0.39333662390708923, -0.6495428085327148, -0.0037878446746617556, -4.351044481154531e-05, -0.0001227780303452164, -0.4302904009819031, -0.016916153952479362, -0.003152165561914444, -0.0003108495147898793, -0.0005422552349045873], "finish_reason": "stop"}, {"text": " not data[target_column].is_numeric():", "tokens": [" not", " data", "[", "target", "_", "column", "]", ".", "is", "_", "numeric", "():", "\n"], "logprobs": [-0.4227680563926697, -0.7196961045265198, -0.04478040337562561, -0.002177012851461768, -5.1377883210079744e-05, -3.576272320060525e-06, -0.0005851463647559285, -5.8530047681415454e-05, -2.063459634780884, -0.9700931906700134, -0.03303329646587372, -0.022311735898256302, -0.00201534666121006], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric columns.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0033091329969465733, -1.2397689715726301e-05, -0.005851401016116142, -0.06258166581392288, -0.29961907863616943, -0.26489439606666565, -0.3983675241470337, -0.3311561942100525, -0.0761706754565239, -1.1219756603240967, -0.024412961676716805, -0.004300631582736969, -0.00029118589009158313, -0.0006357794045470655], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.051383357495069504, -0.03334050253033638, -0.00016151554882526398, -0.008930621668696404, -5.245195097813848e-06, -0.00013433984713628888, -8.129743218887597e-05, -0.0038738222792744637, -0.006193492095917463, -0.000726316764485091], "finish_reason": "stop"}, {"text": " ValueError(\"test_size should be a fraction between 0 and 1.\")", "tokens": [" Value", "Error", "(", "\"", "test", "_", "size", " should", " be", " a", " fraction", " between", " ", "0", " and", " ", "1", ".", "\"", ")", "\n"], "logprobs": [-0.0005981324939057231, -2.109982233378105e-05, -0.008053923025727272, -0.04675217717885971, -0.03907967731356621, -0.006453151814639568, -0.001208766596391797, -0.09114383906126022, -0.011448285542428493, -1.7686913013458252, -1.0039504766464233, -0.12792713940143585, -0.00970786064863205, -0.0003401654539629817, -0.010362394154071808, -0.00012420836719684303, -0.0010081215295940638, -0.06211830675601959, -0.0035221464931964874, -0.00018153927521780133, -0.0005031750188209116], "finish_reason": "stop"}, {"text": " not isinstance(random_state, int):", "tokens": [" not", " isinstance", "(", "random", "_", "state", ",", " int", "):", "\n"], "logprobs": [-0.059851061552762985, -0.025330765172839165, -0.0003296785580459982, -0.0022965504322201014, -2.2053474822314456e-05, -0.0001209901092806831, -0.00014649749209638685, -0.00651604263111949, -0.006752766203135252, -0.0010151476599276066], "finish_reason": "stop"}, {"text": " ValueError(\"random_state should be an integer\")", "tokens": [" Value", "Error", "(", "\"", "random", "_", "state", " should", " be", " an", " integer", "\"", ")", "\n"], "logprobs": [-0.006897567771375179, -8.34461570775602e-06, -0.010272488929331303, -0.018692176789045334, -0.021994123235344887, -0.008473987691104412, -0.008898956701159477, -0.06445106118917465, -0.007775516249239445, -0.1385476291179657, -0.108405701816082, -2.12477707862854, -0.00040356122190132737, -0.0005698964232578874], "finish_reason": "stop"}, {"text": " data.drop(target_column, axis=1)", "tokens": [" data", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.019462687894701958, -0.289280503988266, -0.39382147789001465, -0.17094525694847107, -0.6807188391685486, -3.8742269680369645e-05, -5.23315102327615e-05, -0.0020434230100363493, -0.007483899127691984, -0.0625092163681984, -0.014922775328159332, -0.023558003827929497, -0.056457482278347015], "finish_reason": "stop"}, {"text": " data[target_column]", "tokens": [" data", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009926833212375641, -0.06160205230116844, -0.0008811643347144127, -2.062299427052494e-05, -1.6689286894688848e-06, -0.0003150205302517861, -0.0059578209184110165], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.015624136663973331, -0.00023815179883968085, -0.0031341025605797768, -0.001423656358383596, -0.0025755350943654776, -0.0001245659514097497, -0.001620409544557333, -0.0002450642641633749, -0.0026982349809259176, -5.61460001335945e-05, -0.00040975757292471826, -0.004189168103039265, -0.018196318298578262, -3.576272320060525e-06, -8.821448318485636e-06, -7.748573807475623e-06, -5.245195097813848e-06, -0.00047541281674057245, -0.6000804305076599, -0.0013819915475323796, -0.021489866077899933, -0.0004109491710551083, -0.3904477655887604, -3.2305197237292305e-05, -5.2689116273541003e-05, -0.030938683077692986, -0.014824705198407173, -6.210611172718927e-05, -3.3378546504536644e-06, -0.0020828000269830227, -0.06009603291749954, -2.3841855067985307e-07, -5.125986263010418e-06, -0.0090414397418499, -0.0018148632952943444, -4.1960789531003684e-05, -0.0001472126314183697, -0.09098690003156662, -0.00260300119407475], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0027025151066482067, -1.1205610462639015e-05, -0.00011848701251437888, -0.04081268608570099, -0.15573592483997345], "finish_reason": "stop"}, {"text": " model.score(X_test, y_test)", "tokens": [" model", ".", "score", "(", "X", "_", "test", ",", " y", "_", "test", ")"], "logprobs": [-0.025669047608971596, -0.0002798642381094396, -0.001167807262390852, -0.00021443451987579465, -0.0010837402660399675, -0.0025273782666772604, -0.0020208191126585007, -0.00042632073746062815, -0.011383110657334328, -0.00011681827891152352, -3.2305197237292305e-05, -0.25038957595825195], "finish_reason": "stop"}], "metrics": {"energy": 316.7625984954835, "energy_per_token": 1.3772286891107977, "time": 13.879827, "time_per_token": 0.06034707391304348}}
