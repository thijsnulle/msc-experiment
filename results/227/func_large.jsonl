{"outputs": [{"text": "if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"Audio file '{audio_file}' not found.\")\n\n    L = np.array(L)\n    L = L.reshape(M, N)\n    L = np.dot(L, 10**(200/10))\n\n    y, sr = sf.read(audio_file)\n    SPL = 20 * np.log10(np.sqrt(np.mean(y**2)))\n\n    # Generate spectrogram\n    S = np.abs(librosa.stft(L))\n\n    log_S = librosa.amplitude_to_db(S, ref=np.max)\n    spec = plt.specgram(log_S, NFFT=256, Fs=2, cmap='inferno')\n    plt.axis('off')\n    plt.colorbar().ax.set_ylabel('SPL [dB]')\n\n    # Adjust the SPL displayed in the spectrogram\n    plt.clim(-18", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Audio", " file", " '", "{", "audio", "_", "file", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "L", " =", " np", ".", "array", "(", "L", ")", "\n", "    ", "L", " =", " L", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "    ", "L", " =", " np", ".", "dot", "(", "L", ",", " ", "1", "0", "**(", "2", "0", "0", "/", "1", "0", "))", "\n", "\n", "    ", "y", ",", " s", "r", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "y", "**", "2", ")))", "\n", "\n", "    ", "#", " Generate", " spectro", "gram", "\n", "    ", "S", " =", " np", ".", "abs", "(", "lib", "ros", "a", ".", "st", "ft", "(", "L", "))", "\n", "\n", "    ", "log", "_", "S", " =", " lib", "ros", "a", ".", "am", "plitude", "_", "to", "_", "db", "(", "S", ",", " ref", "=", "np", ".", "max", ")", "\n", "    ", "spec", " =", " plt", ".", "spec", "gram", "(", "log", "_", "S", ",", " N", "FF", "T", "=", "2", "5", "6", ",", " F", "s", "=", "2", ",", " c", "map", "='", "inf", "ern", "o", "')", "\n", "    ", "plt", ".", "axis", "('", "off", "')", "\n", "    ", "plt", ".", "color", "bar", "()", ".", "ax", ".", "set", "_", "ylabel", "('", "SP", "L", " [", "dB", "]", "')", "\n", "\n", "    ", "#", " Adjust", " the", " S", "PL", " displayed", " in", " the", " spectro", "gram", "\n", "    ", "plt", ".", "cl", "im", "(-", "1", "8"], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -0.30077531933784485, -0.00305031961761415, -0.0044648959301412106, -1.823885577323381e-05, -8.22540732769994e-06, -0.004296951927244663, -0.01968315802514553, -0.011692916974425316, -0.018728680908679962, -0.002920768689364195, -0.00016735584358684719, -1.3470558769768104e-05, -0.03450712189078331, -0.21626637876033783, -0.06410496681928635, -0.6559430956840515, -0.0028822568710893393, -0.4674893319606781, -0.0003051292151212692, -0.001179595128633082, -5.2689116273541003e-05, -7.867782187531702e-06, -0.004300631582736969, -0.7184233665466309, -0.00021765247220173478, -0.2018333077430725, -0.014264875091612339, -0.00047219570842571557, -0.004227629862725735, -0.18999922275543213, -0.0009459549910388887, -2.3113455772399902, -0.19524534046649933, -0.25717803835868835, -1.4662635294371285e-05, -0.25379228591918945, -0.007323798723518848, -0.001608150894753635, -0.02151705138385296, -0.4189896285533905, -0.09100224822759628, -1.313719391822815, -0.23155023157596588, -0.36543551087379456, -0.06101543828845024, -0.0112813925370574, -1.9073468138230965e-06, -0.3392278552055359, -0.016210418194532394, -0.0005783553933724761, -0.045813292264938354, -0.0008555566309951246, -0.05570482090115547, -0.9936861991882324, -1.5960745811462402, -0.18355663120746613, -0.7372973561286926, -1.883488948806189e-05, -4.6075239181518555, -0.02342328056693077, -0.08348939567804337, -0.12489204108715057, -1.0915160179138184, -0.48817336559295654, -0.344003289937973, -1.1959125995635986, -2.128735303878784, -0.38424262404441833, -2.52801775932312, -0.18163292109966278, -1.0358918905258179, -0.0045000240206718445, -0.14827167987823486, -0.3466666340827942, -0.5090690851211548, -0.001485317014157772, -3.230834484100342, -0.029404601082205772, -0.058733999729156494, -0.011195342056453228, -0.001985484967008233, -0.17603634297847748, -8.821448318485636e-06, -1.3589766240329482e-05, -3.0517112463712692e-05, -0.0015266203554347157, -0.008143909275531769, -2.062299427052494e-05, -6.9141146923357155e-06, -0.0984085202217102, -0.053738098591566086, -0.08927324414253235, -0.6532718539237976, -0.000710592488758266, -0.019138673320412636, -0.05111245438456535, -0.013994422741234303, -0.0005732323625124991, -0.08807288855314255, -0.0014900782844051719, -4.768370445162873e-07, -0.00018535325943958014, -0.002237556502223015, -4.410734163684538e-06, -0.001650758320465684, -0.005337512120604515, -1.1920922133867862e-06, -0.01758589968085289, -0.004366150591522455, -0.0035394898150116205, -1.9073468138230965e-06, -0.0012399612460285425, -0.014361590147018433, -0.16563673317432404, -0.14897681772708893, -0.00046850196667946875, -0.03895024210214615, -0.06285250186920166, -0.5308147072792053, -0.0003927174839191139, -2.781426429748535, -1.346652626991272, -0.932759165763855, -0.001100887660868466, -0.30633094906806946, -0.004475458059459925, -1.787320852279663, -0.13441015779972076, -1.7969478368759155, -3.3378546504536644e-06, -0.02315378002822399, -0.00046361665590666234, -0.05237710103392601, -3.45700973412022e-05, -9.536738616588991e-07, -3.099436753473128e-06, -0.2071281522512436, -0.0006270825979299843, -0.0014215136179700494, -0.1909550130367279, -0.4311140477657318, -0.1439344435930252, -2.3313677310943604, -0.0007161913090385497, -2.8151214122772217, -0.040669966489076614, -1.0889983177185059, -0.006079395767301321, -0.0420030914247036, -4.768370445162873e-07, 0.0, -6.318072337307967e-06, -0.19851264357566833, -0.0008854520856402814, 0.0, -1.3470558769768104e-05, -1.1920928244535389e-07, -0.0029714026022702456, -0.0036520943976938725, -0.05526059865951538, -0.16232125461101532, -0.011426836252212524, -0.004062970634549856, -0.003999212756752968, -9.536738616588991e-07, -0.015705816447734833, -0.036350954324007034, -0.23032888770103455, -0.6723257899284363, -3.49202823638916, -0.18705075979232788, -1.1847490072250366, -0.000336590368533507, -0.09041053056716919, -0.000621959799900651, -0.004797139670699835, -2.3735485076904297, -0.0005794276366941631, -0.0030265499372035265, -0.16265565156936646, -0.6965312957763672, -0.0003069168305955827, 0.0, -0.0027870405465364456, -0.35498735308647156, -0.05321422219276428, -0.002406084444373846, -0.003986389376223087, -0.06597107648849487, -0.014803680591285229, -0.009745992720127106, -1.3660942316055298, -0.4396616518497467, -0.2668974697589874, -1.7046782886609435e-05, -0.8900473713874817, -2.542083263397217, -3.3378546504536644e-06, -1.9907753085135482e-05, -0.5560320019721985, -0.04489142447710037, -0.21642298996448517, -0.17380398511886597, -3.969590397900902e-05, -0.7077442407608032, -0.15180687606334686, -0.28507301211357117, -0.006152380723506212, -0.014265344478189945, -0.2413468211889267, -0.3433481752872467, -0.00018463814922142774, -1.4447376728057861, -3.933898824470816e-06, -0.16032728552818298, -1.9838581085205078, -0.3564773499965668, -0.004747784696519375, -1.0434693098068237, -0.00022980909852776676, -1.1928859949111938, -0.14499063789844513, -0.4027334749698639, -0.00038354191929101944, -1.6000912189483643, -0.0328456275165081, -0.02447822131216526, -0.3533199727535248, -0.04174415394663811, -1.3159472942352295, -0.00231284461915493, -2.296196460723877, -1.5510286092758179, -0.4783805310726166, -1.6820447444915771, -0.00025233422638848424, -2.1312031745910645, -0.1286034882068634, -0.005406875628978014, -0.03886137902736664, -0.00011491115583339706, -0.12444151937961578, -0.001683605252765119, -1.037473440170288, -0.006025245878845453, -0.17541486024856567, -3.290122185717337e-05, -0.12308484315872192, -1.0946855545043945, -3.4992237091064453], "finish_reason": "length"}], "metrics": {"energy": 878.8600894489292, "energy_per_token": 3.4330472244098797, "time": 22.074947, "time_per_token": 0.08623026171875}}
{"outputs": [{"text": "if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"File '{audio_file}' does not exist\")\n\n    data, fs = sf.read(audio_file)\n    data = np.array(data)\n\n    if len(L) != M*N:\n        raise ValueError(f\"Matrix dimension M={M}, N={N} does not match list length {len(L)}\")\n\n    matrix = np.reshape(L, (M, N))\n\n    SPL = 20 * np.log10(np.sqrt(np.mean(data**2)))\n    print(SPL)\n\n    normalized = (matrix - np.min(matrix))/np.max(matrix - np.min(matrix)) * SPL\n\n    fig, ax = plt.subplots()\n    st = librosa.stft(normalized, hop_length=512, n_fft=2048)\n    spectrogram = np.abs(st)\n\n    ax.pcolormesh(spectrogram, c", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "File", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "data", ",", " fs", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "data", " =", " np", ".", "array", "(", "data", ")", "\n", "\n", "    ", "if", " len", "(", "L", ")", " ", "!", "=", " M", "*", "N", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Matrix", " dimension", " M", "={", "M", "}", ",", " N", "={", "N", "}", " does", " not", " match", " list", " length", " {", "len", "(", "L", ")}", "\"", ")", "\n", "\n", "    ", "matrix", " =", " np", ".", "resh", "ape", "(", "L", ",", " (", "M", ",", " N", "))", "\n", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", "**", "2", ")))", "\n", "    ", "print", "(", "SP", "L", ")", "\n", "\n", "    ", "normalized", " =", " (", "matrix", " -", " np", ".", "min", "(", "matrix", "))/", "np", ".", "max", "(", "matrix", " -", " np", ".", "min", "(", "matrix", "))", " *", " S", "PL", "\n", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "st", " =", " lib", "ros", "a", ".", "st", "ft", "(", "normalized", ",", " hop", "_", "length", "=", "5", "1", "2", ",", " n", "_", "ff", "t", "=", "2", "0", "4", "8", ")", "\n", "    ", "spect", "ro", "gram", " =", " np", ".", "abs", "(", "st", ")", "\n", "\n", "    ", "ax", ".", "p", "col", "orm", "esh", "(", "spect", "ro", "gram", ",", " c"], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -0.30077531933784485, -0.00305031961761415, -0.0044648959301412106, -1.823885577323381e-05, -8.22540732769994e-06, -0.004296951927244663, -0.01968315802514553, -0.011692916974425316, -0.018728680908679962, -0.002920768689364195, -0.00016735584358684719, -1.3470558769768104e-05, -0.03450712189078331, -0.21626637876033783, -0.06410496681928635, -1.6832849979400635, -0.750503659248352, -0.0005993238883093, -0.0014888879377394915, -8.5588610090781e-05, -4.768370445162873e-07, -0.009582002647221088, -0.5814967155456543, -0.0002874914789572358, -0.0015359044773504138, -1.1961655616760254, -0.0003357561945449561, -0.009134289808571339, -0.277286559343338, -0.0010558750946074724, -1.8883187770843506, -0.07729668915271759, -2.3242177963256836, -0.0031449166126549244, -0.0721755400300026, -6.794906312279636e-06, -2.288792165927589e-05, -1.4543427823809907e-05, -0.0006229128921404481, -0.003213600954040885, -2.1219027985353023e-05, -7.521823135903105e-05, -0.03918250650167465, -0.11785445362329483, -0.15358175337314606, -2.6609106063842773, -0.24773427844047546, -1.6721136569976807, -2.0861407392658293e-05, -0.910270094871521, -0.09738759696483612, -0.739253044128418, -0.09692364186048508, -0.3311096131801605, -1.184779405593872, -0.0010898133041337132, -2.2961478233337402, -1.182691216468811, -0.0001839230244513601, -0.4142385423183441, -0.005583524238318205, -0.35901939868927, -4.768370445162873e-07, -5.900685573578812e-05, -0.07346434891223907, -1.5184071063995361, -0.0005603650351986289, -0.008338399231433868, -0.004728682804852724, -0.00516342930495739, -0.3914007544517517, -0.04976080730557442, -2.706014311115723e-05, -0.05998466908931732, -0.7425168752670288, -0.04631636291742325, -3.557701826095581, -2.033637046813965, -1.1453125476837158, -2.2551252841949463, -0.0020403298549354076, -0.0014267513761296868, -1.8499475717544556, -0.06100904569029808, -0.0010664734290912747, -0.002709529362618923, -0.0031764074228703976, -0.5397626757621765, -0.0026203603483736515, -0.04825012385845184, -1.924667477607727, -0.23182472586631775, -1.045030117034912, -0.0060561723075807095, -0.00024136967840604484, -0.00136461085639894, -0.0026578123215585947, -0.052007220685482025, -0.0007643162389285862, -0.0004889961564913392, -0.07158743590116501, -0.0010100268991664052, -1.2838032245635986, -0.006418210454285145, -0.011726142838597298, -2.145764938177308e-06, -1.1248538494110107, -3.099436753473128e-06, -0.008762598969042301, -0.16260114312171936, -0.008251740597188473, -0.035820186138153076, -0.015570971183478832, -0.00047743841423653066, -0.19096091389656067, -0.004989434499293566, -0.15164543688297272, -0.7433434724807739, -0.00182235985994339, -1.1909397840499878, -0.000779205875005573, -0.01831161603331566, -0.04731651395559311, -0.00862291269004345, -0.00027307120035402477, -0.1220778375864029, -0.002220666501671076, -4.768370445162873e-07, -0.0005046047735959291, -0.0012947280192747712, -1.2636104656849056e-05, -0.0014038955559954047, -0.012912941165268421, -8.344646857949556e-07, -0.014220685698091984, -0.005096776410937309, -0.0034243774134665728, -2.145764938177308e-06, -0.0014703187625855207, -0.008700794540345669, -0.0748998373746872, -0.11242186278104782, -0.0008405489497818053, -0.02389572188258171, -0.06367598474025726, -0.6583952307701111, -3.018636465072632, -0.06776931881904602, -1.4072291851043701, -1.9907753085135482e-05, -0.010192370042204857, -0.024725154042243958, -0.6418980956077576, -0.0010346779599785805, -2.4289238452911377, -1.6996972560882568, -2.235729217529297, -0.1484595388174057, -0.8961918950080872, -0.40768906474113464, -4.887569048150908e-06, -0.4912700951099396, -0.00012933371181134135, -0.004155928734689951, -1.5501854419708252, -0.26247939467430115, -1.1444026313256472e-05, -1.3964288234710693, -0.16886784136295319, -0.05237427353858948, -0.5182074308395386, -0.0038423535879701376, -4.410734163684538e-06, -0.00014244495832826942, -0.00027581225731410086, -0.0004801789182238281, -0.002168924082070589, -1.5487349033355713, -0.44866541028022766, -1.7881377516459906e-06, -0.07100754231214523, -0.5183415412902832, -0.0011257746955379844, -1.027653694152832, -0.9276478290557861, -0.020583242177963257, -0.006979016587138176, -0.0005893162451684475, -1.1920922133867862e-06, -4.136476854910143e-05, -0.0002746204845607281, -0.2839278280735016, -0.0030612533446401358, -0.21715594828128815, -3.127563238143921, -1.74386727809906, -0.11354494839906693, -7.152555099310121e-07, -3.576278118089249e-07, -2.992108420585282e-05, -2.1162030696868896, -0.0007229813490994275, -0.002096837153658271, -0.11967428773641586, -1.8693541288375854, -2.571225881576538, -2.4199192921514623e-05, -2.0265558760002023e-06, -0.041754674166440964, -0.8344078660011292, -0.05283346027135849, -0.0010514690075069666, -0.7208560705184937, -0.04587603360414505, -1.5497195136049413e-06, -0.00044586253352463245, 0.0, -0.003047229489311576, -1.5984009504318237, -0.021650513634085655, -0.0023499513044953346, -0.00035506143467500806, -0.036893732845783234, -0.0280616357922554, -0.06967230886220932, -1.8152588605880737, -0.07281871140003204, -0.002112420741468668, -0.02437433786690235, -0.5397682785987854, -7.152555099310121e-07, -0.0032873896416276693, -0.0002240883477497846, -0.0035377079620957375, -0.225809708237648, -0.07177751511335373, -1.034232258796692, -0.0004049911512993276, -0.9287499785423279, -0.004104405175894499, -3.136261463165283, -0.0008156548719853163, -5.125986263010418e-06, -1.537788011773955e-05, -0.0001731960946926847, -0.47330060601234436, -2.3007127310847864e-05, -7.510157047363464e-06, -0.24312986433506012, -0.03559323772788048], "finish_reason": "length"}], "metrics": {"energy": 882.900340457916, "energy_per_token": 3.448829454913734, "time": 21.861343, "time_per_token": 0.08539587109375}}
{"outputs": [{"text": "matrix = np.reshape(np.array(L), (M, N))\n\n    if not os.path.isfile(audio_file):\n        raise FileNotFoundError(f\"File '{audio_file}' does not exist\")\n\n    data, samplerate = sf.read(audio_file)\n    spl = 20 * np.log10(np.sqrt(np.mean(data**2)))\n    norm = 10 ** (spl / 20)\n    matrix = matrix / norm\n\n    figure = plt.figure()\n    ax = figure.add_subplot(1, 1, 1)\n    ax.specgram(matrix.flatten(), NFFT=len(matrix), noverlap=0, cmap='jet')\n    ax.set_xscale('linear')\n    ax.set_yscale('log')\n    plt.show()\n\n    return matrix, figure", "tokens": ["matrix", " =", " np", ".", "resh", "ape", "(", "np", ".", "array", "(", "L", ")", ",", " (", "M", ",", " N", "))", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "File", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "data", ",", " sampler", "ate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", "**", "2", ")))", "\n", "    ", "norm", " =", " ", "1", "0", " **", " (", "spl", " /", " ", "2", "0", ")", "\n", "    ", "matrix", " =", " matrix", " /", " norm", "\n", "\n", "    ", "figure", " =", " plt", ".", "figure", "()", "\n", "    ", "ax", " =", " figure", ".", "add", "_", "sub", "plot", "(", "1", ",", " ", "1", ",", " ", "1", ")", "\n", "    ", "ax", ".", "spec", "gram", "(", "matrix", ".", "fl", "atten", "()", ",", " N", "FF", "T", "=", "len", "(", "matrix", ")", ",", " no", "ver", "lap", "=", "0", ",", " c", "map", "='", "jet", "')", "\n", "    ", "ax", ".", "set", "_", "x", "scale", "('", "linear", "')", "\n", "    ", "ax", ".", "set", "_", "ys", "cale", "('", "log", "')", "\n", "    ", "plt", ".", "show", "()", "\n", "\n", "    ", "return", " matrix", ",", " figure", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-2.969392776489258, -0.017602883279323578, -0.03158986568450928, -2.5629668016335927e-05, -1.5140085220336914, -1.4305104514278355e-06, -0.007765816990286112, -1.9903713464736938, -2.1934269170742482e-05, -0.14423994719982147, -0.012041142210364342, -0.004542271140962839, -0.08218874037265778, -0.02335888147354126, -0.0626358613371849, -0.0062970323488116264, -0.0006922471220605075, -0.05884910002350807, -0.0027138092555105686, -0.14672042429447174, -1.2061059474945068, -0.0005989664932712913, -0.827008068561554, -0.23657141625881195, -0.009584364481270313, -2.610649426060263e-05, -0.00042083943844772875, -1.7881377516459906e-06, -1.4062330722808838, -0.0005878866068087518, -0.0020478246733546257, -0.003939131740480661, -9.894321920000948e-06, -1.7165990357170813e-05, -0.0028101024217903614, -0.014655672945082188, -0.00886563677340746, -0.026637472212314606, -0.0036615964490920305, -0.0003812778159044683, -2.7179348762729205e-05, -0.051927775144577026, -0.2529299259185791, -0.09626233577728271, -1.689021348953247, -0.6431871652603149, -0.0008844992844387889, -0.0013017522869631648, -8.904537389753386e-05, -2.622600959512056e-06, -0.009294809773564339, -0.4897582530975342, -0.00042548662167973816, -0.0016640876419842243, -1.420827865600586, -0.0004314445541240275, -0.0092839440330863, -0.12527504563331604, -0.0005739472107961774, -0.5615782737731934, -0.03448708355426788, -1.6417710781097412, -4.6132929128361866e-05, -0.002565071452409029, -0.03163236752152443, -5.006777428206988e-06, -2.2053474822314456e-05, -1.7523612768854946e-05, -0.0008021951070986688, -0.004443533718585968, -1.4424220353248529e-05, -3.576278118089249e-07, -0.029028326272964478, -0.03768525272607803, -0.23808248341083527, -1.2624969482421875, -0.03556574136018753, -0.042182762175798416, -0.0036601710598915815, -0.00012492353562265635, -0.03438020125031471, -0.0009667966514825821, -5.960462772236497e-07, -0.00020430385484360158, -0.0008736607851460576, -3.933898824470816e-06, -0.0013790155062451959, -0.0026360545307397842, -7.152555099310121e-07, -0.008559681475162506, -0.0032486540731042624, -0.0014035383937880397, -1.4305104514278355e-06, -0.0009439303539693356, -0.009003634564578533, -0.17673057317733765, -0.7151365876197815, -0.0008778294431976974, -0.02745477482676506, -0.06412754952907562, -0.5795204639434814, -2.4947025775909424, -1.0713036060333252, -0.9412612915039062, -0.5839265584945679, -0.16325190663337708, -0.8486043214797974, -0.1729009598493576, -0.027112804353237152, -0.11538591235876083, -0.008095664903521538, -0.06048010289669037, -0.002301426837220788, -0.02580997347831726, -0.08610378950834274, -0.3462722599506378, -0.5214164853096008, -0.3768683671951294, -0.25918224453926086, -0.1480627954006195, -0.02031332440674305, -0.04509051889181137, -0.2331700176000595, -0.0002574589161667973, -2.864203929901123, -0.15559962391853333, -0.030164822936058044, -0.00010072677832795307, -0.06498494744300842, -0.1645495444536209, -0.0025637636426836252, -0.05187627673149109, -1.1235101222991943, -0.05479846149682999, -0.864180326461792, -1.6093124941107817e-05, -0.0070973895490169525, -6.318072337307967e-06, -0.0058440533466637135, -7.152555099310121e-07, -0.048297151923179626, -0.026903830468654633, -0.24946556985378265, -0.0038520910311490297, -0.0024479443673044443, -5.98412734689191e-05, -0.00012396997772157192, -0.00019572250312194228, -0.003677512053400278, -0.0011024356354027987, -0.07276395708322525, -0.7052085995674133, -0.011430371552705765, -0.7925611138343811, -0.0016886036610230803, -0.001081953989341855, -0.3477361500263214, -0.6516209244728088, -0.49911001324653625, -8.892617915989831e-05, -0.007312911096960306, -0.013299915939569473, -0.37849509716033936, -8.475421054754406e-05, 0.0, -0.0034759361296892166, -3.5827455520629883, -0.0002728328399825841, -0.04310176521539688, -0.09486046433448792, -0.06189422309398651, -2.576449155807495, -0.0001677133986959234, -1.156323378381785e-05, -0.0069895521737635136, -0.12338024377822876, -0.12014683336019516, -0.6690846681594849, -0.00016389934171456844, -0.9078845977783203, -2.2489917278289795, -0.4916377663612366, -0.010651993565261364, -0.059642303735017776, -0.40053895115852356, -0.000910225382540375, -0.020721033215522766, -0.0007952864980325103, -0.7071256041526794, -1.2828856706619263, -0.01890685223042965, -0.0819971114397049, -0.0015462597366422415, -0.03941918537020683, -0.0025150116998702288, -0.012236524373292923, -0.00014327930693980306, -0.006684561725705862, -0.0005634627304971218, -0.02089044451713562, -2.407998726994265e-05, -0.0015353093622252345, -0.1632891744375229, -0.0025535377208143473, -0.001960976282134652, -0.2962131202220917, -1.006495475769043, -3.802703940891661e-05, -1.1659963130950928, -0.016428090631961823, -0.003467857837677002, -0.3493451774120331, -0.019670885056257248, -0.010240866802632809, -0.01566626876592636, -0.014691267162561417, -0.003594605950638652, -2.2272512912750244, -1.1920922133867862e-06, -5.245195097813848e-06, -7.390948667307384e-06, -5.2569914259947836e-05, -1.9213687181472778, -0.0011156531982123852], "finish_reason": "stop"}], "metrics": {"energy": 769.1491646957398, "energy_per_token": 3.4337016281059816, "time": 19.133926, "time_per_token": 0.0854193125}}
{"outputs": [{"text": "if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"Audio file {audio_file} not found.\")\n\n    audio_data, audio_sample_rate = sf.read(audio_file)\n    spl = 20 * np.log10(np.sqrt(np.mean(audio_data**2)))\n\n    # Reshape the list into an MxN matrix\n    A = np.array(L).reshape(M, N)\n\n    # Normalize the values based on SPL\n    normalized_values = A / spl\n\n    # Create spectrogram\n    spectrogram = librosa.feature.melspectrogram(\n        y=normalized_values.flatten(), sr=audio_sample_rate, n_mels=128\n    )\n    spectrogram_db = librosa.power_to_db(spectrogram)\n\n    # Display the spectrogram\n    fig, ax = plt.subplots()\n    img = librosa.display.specshow(\n        spectrogram_db,", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Audio", " file", " {", "audio", "_", "file", "}", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "audio", "_", "data", ",", " audio", "_", "sample", "_", "rate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "audio", "_", "data", "**", "2", ")))", "\n", "\n", "    ", "#", " Res", "h", "ape", " the", " list", " into", " an", " M", "x", "N", " matrix", "\n", "    ", "A", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "\n", "    ", "#", " Normal", "ize", " the", " values", " based", " on", " S", "PL", "\n", "    ", "normalized", "_", "values", " =", " A", " /", " spl", "\n", "\n", "    ", "#", " Create", " spectro", "gram", "\n", "    ", "spect", "ro", "gram", " =", " lib", "ros", "a", ".", "feature", ".", "m", "els", "pect", "ro", "gram", "(", "\n", "        ", "y", "=", "normalized", "_", "values", ".", "fl", "atten", "()", ",", " s", "r", "=", "audio", "_", "sample", "_", "rate", ",", " n", "_", "m", "els", "=", "1", "2", "8", "\n", "    ", ")", "\n", "    ", "spect", "ro", "gram", "_", "db", " =", " lib", "ros", "a", ".", "power", "_", "to", "_", "db", "(", "spect", "ro", "gram", ")", "\n", "\n", "    ", "#", " Display", " the", " spectro", "gram", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "img", " =", " lib", "ros", "a", ".", "display", ".", "spec", "show", "(", "\n", "        ", "spect", "ro", "gram", "_", "db", ","], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -0.30077531933784485, -0.00305031961761415, -0.0044648959301412106, -1.823885577323381e-05, -8.22540732769994e-06, -0.004296951927244663, -0.01968315802514553, -0.011692916974425316, -0.018728680908679962, -0.002920768689364195, -0.00016735584358684719, -1.3470558769768104e-05, -0.03450712189078331, -0.21626637876033783, -0.06410496681928635, -0.6559430956840515, -0.0028822568710893393, -1.3973675966262817, -0.0016862234333530068, -6.747018051100895e-05, -9.65590606938349e-06, -0.003781906794756651, -0.7070326209068298, -0.000300958170555532, -0.43841779232025146, -0.027216291055083275, -0.0004188137245364487, -0.003570255357772112, -0.24082085490226746, -0.0008680627797730267, -2.904007911682129, -0.48715513944625854, -0.058765023946762085, -0.039127595722675323, -2.6676993370056152, -4.458328112377785e-05, -0.9039259552955627, -0.001280084135942161, -0.0016976482002064586, -0.0013385392958298326, -0.07517056912183762, -1.6093124941107817e-05, -2.038458114839159e-05, -2.0503786799963564e-05, -0.0006634180317632854, -0.00496191531419754, -8.940656698541716e-06, -1.1920922133867862e-06, -0.03427273407578468, -0.058035582304000854, -0.25978735089302063, -1.2249869108200073, -0.03994174674153328, -0.03443905711174011, -0.00429172907024622, -7.807903602952138e-05, -0.025903603062033653, -0.0012877037515863776, -1.4305104514278355e-06, -0.00022110878489911556, -0.0004768426588270813, -4.768370445162873e-07, -0.0011156531982123852, -0.0032428319100290537, -4.768370445162873e-07, -0.016269885003566742, -0.0032322565093636513, -0.005147774238139391, -1.9073468138230965e-06, -0.0005853846669197083, -0.005811579991132021, -0.22198091447353363, -2.7418097943154862e-06, -2.7418097943154862e-06, -0.9832772016525269, -0.000418575422372669, -0.01656024158000946, -0.07122282683849335, -0.4792916476726532, -0.00044967554276809096, -1.9267237186431885, -4.3061113357543945, -0.022364778444170952, -0.019695313647389412, -0.3628980219364166, -0.22278070449829102, -0.29095396399497986, -1.324251413345337, -0.07433126866817474, -0.12443825602531433, -0.00035148640745319426, -0.032289911061525345, -0.10493271052837372, -0.0009559590835124254, -2.951214551925659, -0.008172051049768925, -0.011388296261429787, -1.311301275563892e-06, -0.27842023968696594, -0.003926426637917757, -0.0013388964580371976, -0.01606649160385132, -0.04785769432783127, -0.000458254711702466, 0.0, -0.3132728040218353, -0.006768632680177689, -0.0001591317413840443, -0.024391554296016693, -0.00019274283840786666, -0.0169843677431345, -0.15062342584133148, -0.0005261705373413861, -0.030918225646018982, -0.2797468602657318, -0.015374830923974514, -0.18230371177196503, -2.559969663619995, -1.959515929222107, -0.00046623803791590035, -1.3021986484527588, -0.0005496421363204718, -0.13671724498271942, -0.0005684667266905308, -1.0367395877838135, -0.0857555940747261, -2.1806185245513916, -0.0028513511642813683, -0.8267451524734497, -0.1281074434518814, -0.3031803369522095, -0.08644749969244003, -0.06260854005813599, -0.0004850641416851431, -0.08012262731790543, -1.4002621173858643, -2.4159605503082275, -0.0007213136414065957, -0.7174859046936035, -0.0019449143437668681, -3.3024935722351074, -0.012069880962371826, -0.002853609621524811, -0.10053932666778564, -0.10562112927436829, -3.933898824470816e-06, -1.1920928244535389e-07, -1.8715683836489916e-05, -1.4284334182739258, -2.7418097943154862e-06, -0.028047261759638786, -0.006669759284704924, -0.05762773007154465, -3.421248038648628e-05, -1.9907753085135482e-05, -0.0007433511782437563, -0.8734523057937622, -0.022262420505285263, -0.7472973465919495, -0.03466523438692093, -0.07641267776489258, -8.940656698541716e-06, -1.0728830375228426e-06, -0.17913483083248138, -0.3779693841934204, -4.529942543740617e-06, -0.0019280193373560905, -0.006239458452910185, -0.21574799716472626, -1.1920928244535389e-07, -0.0002469711471349001, -0.11289422959089279, -1.5497195136049413e-06, -0.000342191313393414, -4.768370445162873e-07, -1.1920928244535389e-07, -0.3860936164855957, -0.10342857986688614, -1.4305104514278355e-06, -0.1426657885313034, -0.003390162019059062, -0.000730247818864882, -1.189260721206665, -0.17114810645580292, -0.006248936057090759, -0.7303548455238342, -0.0007258402765728533, -2.9444261599564925e-05, -0.012824795208871365, -1.04461669921875, -0.7733244895935059, -0.0014393694000318646, -0.00027581225731410086, -0.2958058714866638, -0.1117001548409462, -0.0007614573696628213, -0.0004499138449318707, -4.768370445162873e-07, -1.1920928244535389e-07, -1.4305104514278355e-06, -0.05217616632580757, 0.0, -2.3841855067985307e-07, 0.0, -0.0013778250431641936, -1.2397689715726301e-05, -0.006078921724110842, -5.125986263010418e-06, -8.344646857949556e-07, -0.1753244251012802, -0.010622742585837841, -0.27475443482398987, -0.00032145579461939633, -0.23095549643039703, -1.2093145847320557, -1.4731223583221436, -0.05466178432106972, -5.531158240046352e-05, -0.2960507869720459, -0.0014043716946616769, -0.25910118222236633, -0.09475529193878174, -0.0019307559123262763, -0.00043072958942502737, -0.0007148809381760657, 0.0, -8.940656698541716e-06, -3.9457496313843876e-05, -0.4067377746105194, -0.0006644901586696506, -0.015775052830576897, -0.09697979688644409, -0.00286846817471087, -0.016855672001838684, -4.768370445162873e-07, -1.5616295058862306e-05, -2.9802276912960224e-06, -0.00014280252798926085, -1.311301275563892e-06, -0.0012449617497622967, -0.00022456508304458112, -1.07287787614041e-05, -0.10093975067138672, -0.0002942844294011593, -0.0015455455286428332, -1.1920928244535389e-07, -3.576278118089249e-07, -0.001189477858133614, -7.152531907195225e-06, -0.0013368725776672363], "finish_reason": "length"}], "metrics": {"energy": 910.4472461261747, "energy_per_token": 3.55643455518037, "time": 21.852797, "time_per_token": 0.08536248828125}}
{"outputs": [{"text": "if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"File '{audio_file}' does not exist\")\n\n    # Create a matrix from the list\n    matrix = np.reshape(L, (M, N))\n    # Normalize the matrix based on the sound pressure level of the specified audio file\n    data, sample_rate = sf.read(audio_file)\n    SPL = 20 * np.log10(np.sqrt(np.mean(data ** 2)))\n    matrix = matrix / (20 * np.log10(np.mean(matrix ** 2)) - SPL)\n    # Generate a spectrogram\n    fig = plt.figure(figsize=(10, 5))\n    plt.subplot(1, 1, 1)\n    spec = librosa.amplitude_to_db(abs(matrix), ref=np.max)\n    plt.imshow(spec, cmap='jet', aspect='auto', origin='lower')\n    plt.colorbar()\n    plt.ylabel('Frequency (", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "File", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " matrix", " from", " the", " list", "\n", "    ", "matrix", " =", " np", ".", "resh", "ape", "(", "L", ",", " (", "M", ",", " N", "))", "\n", "    ", "#", " Normal", "ize", " the", " matrix", " based", " on", " the", " sound", " pressure", " level", " of", " the", " specified", " audio", " file", "\n", "    ", "data", ",", " sample", "_", "rate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", " **", " ", "2", ")))", "\n", "    ", "matrix", " =", " matrix", " /", " (", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "mean", "(", "matrix", " **", " ", "2", "))", " -", " S", "PL", ")", "\n", "    ", "#", " Generate", " a", " spectro", "gram", "\n", "    ", "fig", " =", " plt", ".", "figure", "(", "fig", "size", "=(", "1", "0", ",", " ", "5", "))", "\n", "    ", "plt", ".", "sub", "plot", "(", "1", ",", " ", "1", ",", " ", "1", ")", "\n", "    ", "spec", " =", " lib", "ros", "a", ".", "am", "plitude", "_", "to", "_", "db", "(", "abs", "(", "matrix", ")", ",", " ref", "=", "np", ".", "max", ")", "\n", "    ", "plt", ".", "im", "show", "(", "spec", ",", " c", "map", "='", "jet", "'", ",", " aspect", "='", "auto", "'", ",", " origin", "='", "lower", "')", "\n", "    ", "plt", ".", "color", "bar", "()", "\n", "    ", "plt", ".", "ylabel", "('", "F", "requency", " ("], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -0.30077531933784485, -0.00305031961761415, -0.0044648959301412106, -1.823885577323381e-05, -8.22540732769994e-06, -0.004296951927244663, -0.01968315802514553, -0.011692916974425316, -0.018728680908679962, -0.002920768689364195, -0.00016735584358684719, -1.3470558769768104e-05, -0.03450712189078331, -0.21626637876033783, -0.06410496681928635, -1.6832849979400635, -0.750503659248352, -0.0005993238883093, -0.0014888879377394915, -8.5588610090781e-05, -4.768370445162873e-07, -0.009582002647221088, -0.5814967155456543, -0.0002874914789572358, -0.0015359044773504138, -1.1961655616760254, -0.0003357561945449561, -0.009134289808571339, -0.277286559343338, -0.0010558750946074724, -1.0533616542816162, -1.0842536687850952, -2.0404577255249023, -0.8704479932785034, -0.4657914638519287, -0.6770225167274475, -0.1623888611793518, -1.1208120584487915, -0.0014077048981562257, -0.44433245062828064, -0.0033143609762191772, -0.011490711010992527, -4.6491513785440475e-06, -1.7324638366699219, -1.1920928244535389e-07, -0.009272605180740356, -0.13325801491737366, -0.011465491726994514, -0.013910839334130287, -0.00454500038176775, -0.00028224775451235473, -0.013231921009719372, -0.0009614374139346182, -0.038624107837677, -2.560032844543457, -0.6364450454711914, -0.7241899967193604, -0.02015923708677292, -0.16910946369171143, -0.16310954093933105, -0.3776593506336212, -0.0007231004419736564, -0.23888367414474487, -0.2695305645465851, -0.007852399721741676, -0.0022306579630821943, -2.0561230182647705, -0.1451476812362671, -2.2189342975616455, -0.006015174090862274, -0.0044563510455191135, -0.01893024705350399, -0.008421030826866627, -0.35300302505493164, -0.040923573076725006, -1.3532646894454956, -0.004522097297012806, -0.0007559779332950711, -0.0016615884378552437, -0.043916795402765274, -8.821448318485636e-06, -9.775113539944869e-06, -8.583032467868179e-06, -0.0006835508393123746, -0.003602326614782214, -1.5020257706055418e-05, -2.264974000354414e-06, -0.025733180344104767, -0.050992950797080994, -0.019672637805342674, -0.8249056935310364, -0.00030322244856506586, -0.008656476624310017, -0.019812660291790962, -0.0021651177667081356, -9.77468371274881e-05, -0.030107218772172928, -0.0005740663618780673, -1.0728830375228426e-06, -0.0003349220205564052, -0.0007416835287585855, -5.125986263010418e-06, -0.0008086272282525897, -0.00229904823936522, -7.033323527139146e-06, -0.01918112486600876, -0.002268243348225951, -0.0007027302053757012, -1.7881377516459906e-06, -0.0006276782951317728, -0.004308940377086401, -0.11232597380876541, -0.6882266998291016, -0.0005362979718483984, -4.2676016164477915e-05, -0.029566066339612007, -0.03743656352162361, -0.031583745032548904, -0.5721542835235596, -0.3134491741657257, -0.14746317267417908, -0.09166519343852997, -0.9324318170547485, -1.9349110126495361, -0.7668846249580383, -0.3950987756252289, -1.131609320640564, -2.3841830625315197e-06, -0.023991044610738754, -0.0043246084824204445, -3.3378546504536644e-06, -0.013966679573059082, -0.6763063669204712, -6.318072337307967e-06, -3.1059932708740234, -0.010713559575378895, -0.7056729793548584, -0.2921147048473358, -0.0007167869480326772, -0.0002754547167569399, -0.6224324107170105, -0.06337683647871017, -0.006386584602296352, -1.0728830375228426e-06, -0.012872341088950634, -0.034409455955028534, -1.2621498107910156, -0.07758540660142899, -0.3111274540424347, -0.1327482908964157, -0.005647418089210987, -5.722029527532868e-06, -2.373202085494995, -0.0011332763824611902, -0.536638081073761, -0.40427103638648987, -0.006989078596234322, -4.4225667807040736e-05, -0.05795874819159508, -1.4906941652297974, -0.088869109749794, -3.015949550899677e-05, -0.012066111899912357, -0.3530052602291107, -0.43342822790145874, -0.0010919567430391908, -0.0185234472155571, -0.5442577600479126, -0.01985788717865944, -0.006390138063579798, -0.002612750744447112, -2.346250295639038, -0.0009264229447580874, -1.773019552230835, -0.026019060984253883, -0.022768504917621613, -0.06872443854808807, -0.18938161432743073, -0.005114210769534111, -0.18064719438552856, -5.4834770708112046e-05, -8.082063141046092e-05, -0.0007512131123803556, -0.018273457884788513, -0.0032204927410930395, -0.0032970139291137457, -3.3320438861846924, -0.08938150852918625, -0.028403861448168755, -2.861018856492592e-06, -1.311301275563892e-06, -2.253030106658116e-05, -0.15938515961170197, -0.001413180842064321, 0.0, -2.8609820219571702e-05, 0.0, -0.002643782878294587, -0.014976328238844872, -3.431161880493164, -0.00016759421851020306, -0.15569470822811127, -0.11434251815080643, -0.09310532361268997, -0.1124764084815979, -0.006193255074322224, -0.08196141570806503, -1.0967194612021558e-05, -0.2054809331893921, -0.15064609050750732, -0.04002409800887108, -0.002510849852114916, -0.872965931892395, -0.00017641419253777713, -0.2966025769710541, -2.5152843591058627e-05, -0.0002308817347511649, -0.015059352852404118, -0.035735417157411575, -0.8579196929931641, -1.7762025890988298e-05, -0.12427067011594772, -1.7117693424224854, -0.07865958660840988, -0.00019274283840786666, -0.5688660144805908, -0.07373624294996262, -0.00018904806347563863, -0.2216334193944931, -8.05822346592322e-05, -0.08605358749628067, -0.0032336823642253876, -0.020846664905548096, -0.31141769886016846, -0.004373983945697546, -0.004887419752776623, -0.019405633211135864, -1.4185804502631072e-05, -0.9964627027511597, -1.1920928244535389e-07, -0.1676895171403885, -0.00262880208902061, -0.02546197734773159, -0.2764647305011749, -4.23184028477408e-05, -1.5777195692062378, -0.02099223993718624, -0.08072970062494278, -0.0019075546879321337, -1.6210811138153076], "finish_reason": "length"}], "metrics": {"energy": 866.2033629112242, "energy_per_token": 3.3836068863719695, "time": 21.862003, "time_per_token": 0.08539844921875}}
{"outputs": [{"text": "if not os.path.isfile(audio_file):\n        raise FileNotFoundError(f\"File not found: {audio_file}\")\n\n    # Create an MxN matrix from L\n    matrix = np.array(L).reshape(M, N)\n\n    # Normalize the matrix based on the sound pressure level of audio_file\n    data, _ = sf.read(audio_file)\n    SPL = 20 * np.log10(np.sqrt(np.mean(data**2)))\n    matrix = matrix / (SPL**2)\n\n    # Generate a spectrogram of the amplitude\n    fig = plt.figure(figsize=(10, 4))\n    ax = fig.add_subplot(111)\n    ax.set_yscale(\"log\")\n    librosa.display.specshow(matrix, x_axis=\"linear\", ax=ax)\n\n    return matrix, fig", "tokens": ["if", " not", " os", ".", "path", ".", "is", "file", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "File", " not", " found", ":", " {", "audio", "_", "file", "}\"", ")", "\n", "\n", "    ", "#", " Create", " an", " M", "x", "N", " matrix", " from", " L", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "\n", "    ", "#", " Normal", "ize", " the", " matrix", " based", " on", " the", " sound", " pressure", " level", " of", " audio", "_", "file", "\n", "    ", "data", ",", " _", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", "**", "2", ")))", "\n", "    ", "matrix", " =", " matrix", " /", " (", "SP", "L", "**", "2", ")", "\n", "\n", "    ", "#", " Generate", " a", " spectro", "gram", " of", " the", " amplitude", "\n", "    ", "fig", " =", " plt", ".", "figure", "(", "fig", "size", "=(", "1", "0", ",", " ", "4", "))", "\n", "    ", "ax", " =", " fig", ".", "add", "_", "sub", "plot", "(", "1", "1", "1", ")", "\n", "    ", "ax", ".", "set", "_", "ys", "cale", "(", "\"", "log", "\"", ")", "\n", "    ", "lib", "ros", "a", ".", "display", ".", "spec", "show", "(", "matrix", ",", " x", "_", "axis", "=", "\"", "linear", "\"", ",", " ax", "=", "ax", ")", "\n", "\n", "    ", "return", " matrix", ",", " fig", "\n", "\n", "if"], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -1.3484132289886475, -0.0008357845945283771, -0.002303210785612464, -0.0032888154964894056, -1.537788011773955e-05, -1.4305012882687151e-05, -0.0030651751440018415, -0.028913911432027817, -0.012738877907395363, -0.018937382847070694, -0.0030036119278520346, -0.0001554368354845792, -1.9907753085135482e-05, -0.03387489169836044, -0.172074094414711, -0.07133927196264267, -1.91689133644104, -2.4536678791046143, -0.004972235299646854, -0.039818838238716125, -0.019687600433826447, -0.0026769537944346666, -9.965400386136025e-05, -3.85038583772257e-05, -0.011530307121574879, -0.00024089295766316354, -0.005995384883135557, -0.2334209531545639, -0.0009363081189803779, -1.0081696510314941, -1.0255345106124878, -1.3220069408416748, -0.031974297016859055, -0.10000273585319519, -0.00029559535323642194, -0.015256963670253754, -0.11750293523073196, -1.0958038568496704, -0.15676547586917877, -0.0011081513948738575, -0.4962784945964813, -0.002676597097888589, -0.014698902145028114, -2.3841830625315197e-06, -0.2950000464916229, -0.032163284718990326, -0.0050919135101139545, -0.012959894724190235, -0.019755741581320763, -0.0004949536523781717, 0.0, -0.23281098902225494, -0.005479791667312384, -7.1403817855753e-05, -0.01908160001039505, -0.0002824861148837954, -0.02194082923233509, -0.05272343382239342, -0.0007339406292885542, -0.032968245446681976, -0.7631004452705383, -0.017132850363850594, -0.2579349875450134, -0.09240920841693878, -0.21194849908351898, -0.00032610344351269305, -0.4034395217895508, -0.2528451383113861, -0.003588310442864895, -0.0010213402565568686, -2.4434382915496826, -2.025888442993164, -0.042038410902023315, -0.0016067225951701403, -0.022913917899131775, -0.004261579364538193, -0.19417262077331543, -0.018133455887436867, -1.7214734554290771, -0.0375225655734539, -0.08185795694589615, -8.34461570775602e-06, -7.986990567587782e-06, -9.417489309271332e-06, -0.0004648081958293915, -0.0029733041301369667, -1.4662635294371285e-05, -1.9073468138230965e-06, -0.026393450796604156, -0.09325650334358215, -0.017031949013471603, -0.9563151597976685, -0.00021586472576018423, -0.007401308044791222, -0.01849091425538063, -0.002004044596105814, -6.389413465512916e-05, -0.031154904514551163, -0.000659248442389071, -8.344646857949556e-07, -0.0004456242313608527, -0.0004183370911050588, -1.1205610462639015e-05, -0.0006102845072746277, -0.0011127954348921776, -3.099436753473128e-06, -0.01948782242834568, -0.0021912867669016123, -0.0009883524617180228, -1.4305104514278355e-06, -0.0003700763627421111, -0.0038067272398620844, -0.12624269723892212, -0.6223768591880798, -0.00045193947153165936, -0.024480897933244705, -0.031208865344524384, -0.05858999118208885, -0.3869481682777405, -0.2925994396209717, -0.10673023015260696, -0.12435656785964966, -1.1734217405319214, -1.734531044960022, -7.033323527139146e-06, -2.8539061546325684, -0.2776050567626953, -0.07017174363136292, -0.06116268411278725, -0.012701213359832764, -0.000943096645642072, -0.011049510911107063, -0.24123415350914001, -0.22619017958641052, -0.0045242332853376865, -2.622600959512056e-06, -2.1803836822509766, -0.031093312427401543, -2.1512234210968018, -2.596806287765503, -0.002114919014275074, -1.0419856309890747, -0.6997171640396118, -0.007493719458580017, -1.9192511899746023e-05, -0.037426456809043884, -1.579903483390808, -0.058950815349817276, -9.65590606938349e-06, -0.009937928058207035, -0.2868277132511139, -0.2972790598869324, -0.00040236959466710687, -0.03777812048792839, -2.013127326965332, -0.024861909449100494, -0.006397008430212736, -0.016049714758992195, -0.9729391932487488, -0.07263913750648499, -0.04196513816714287, -2.0265558760002023e-06, -0.011631293222308159, -1.311301275563892e-06, -0.001799156074412167, -1.7881377516459906e-06, -0.06890115886926651, -0.004340157378464937, -0.6054248213768005, -0.00011634149996098131, -0.04395432770252228, -0.0015714927576482296, -0.03395244479179382, -1.2730273008346558, -0.023567086085677147, -1.9063689708709717, -0.0027120260056108236, -1.2287064790725708, -6.9141146923357155e-06, -2.273667335510254, -0.0005695389700122178, -0.025054339319467545, -3.4570634852570947e-06, -0.015566511079668999, -0.075457364320755, -0.10703779011964798, -0.82121741771698, -8.487341256113723e-05, -4.172316494077677e-06, -0.0002252801787108183, -0.00021681819634977728, -5.602820692729438e-06, -0.0005085367010906339, -0.00026794656878337264, -0.0005801424849778414, -0.4658169746398926, -0.2567282021045685, -0.8374383449554443, -1.4424220353248529e-05, -0.00052426423644647, -0.23229308426380157, -0.0014078239910304546, -0.9811370968818665, -2.5152843591058627e-05, -0.09020467847585678, -0.46054553985595703, -0.0003951007383875549, -0.0005267662927508354, -0.2082667499780655, -0.004678849596530199, -1.3519513607025146, -0.0003305127320345491, -0.26416394114494324, -0.007869903929531574, -0.005850097630172968, -0.0030234598089009523, -0.2008432149887085, -0.0102124297991395, -0.7566385865211487], "finish_reason": "stop"}], "metrics": {"energy": 758.6890295152671, "energy_per_token": 3.3719512422900757, "time": 19.12828, "time_per_token": 0.08501457777777778}}
{"outputs": [{"text": "# Check if L has M*N elements\n    if len(L) != M * N:\n        raise ValueError(f\"L must have exactly {M*N} elements to form an {M}x{N} matrix.\")\n\n    # Convert L to a MxN matrix\n    matrix = np.reshape(L, (M, N))\n\n    # Normalize the matrix by SPL\n    # Read the audio file to calculate the sound pressure level (SPL)\n    if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"Audio file {audio_file} not found.\")\n\n    data, _ = sf.read(audio_file)\n    SPL = 20 * np.log10(np.sqrt(np.mean(np.power(data, 2))))\n\n    # Normalize the matrix based on the sound pressure level (SPL) of the audio file\n    normalized_matrix = matrix / 20\n\n    # Generate a spectrogram for the normalized matrix\n    y = np.abs(normalized_matrix)\n    S_", "tokens": ["#", " Check", " if", " L", " has", " M", "*", "N", " elements", "\n", "    ", "if", " len", "(", "L", ")", " ", "!", "=", " M", " *", " N", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "L", " must", " have", " exactly", " {", "M", "*", "N", "}", " elements", " to", " form", " an", " {", "M", "}", "x", "{", "N", "}", " matrix", ".", "\"", ")", "\n", "\n", "    ", "#", " Convert", " L", " to", " a", " M", "x", "N", " matrix", "\n", "    ", "matrix", " =", " np", ".", "resh", "ape", "(", "L", ",", " (", "M", ",", " N", "))", "\n", "\n", "    ", "#", " Normal", "ize", " the", " matrix", " by", " S", "PL", "\n", "    ", "#", " Read", " the", " audio", " file", " to", " calculate", " the", " sound", " pressure", " level", " (", "SP", "L", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Audio", " file", " {", "audio", "_", "file", "}", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "data", ",", " _", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "np", ".", "power", "(", "data", ",", " ", "2", "))", "))", "\n", "\n", "    ", "#", " Normal", "ize", " the", " matrix", " based", " on", " the", " sound", " pressure", " level", " (", "SP", "L", ")", " of", " the", " audio", " file", "\n", "    ", "normalized", "_", "matrix", " =", " matrix", " /", " ", "2", "0", "\n", "\n", "    ", "#", " Generate", " a", " spectro", "gram", " for", " the", " normalized", " matrix", "\n", "    ", "y", " =", " np", ".", "abs", "(", "normalized", "_", "matrix", ")", "\n", "    ", "S", "_"], "logprobs": [-1.0683776140213013, -1.111961841583252, -0.15049083530902863, -3.1953787803649902, -1.091318130493164, -1.9270195960998535, -0.4133339822292328, -0.0005098473629914224, -0.048421408981084824, -0.10662994533777237, -0.0017933252966031432, -0.20521628856658936, -0.03511800616979599, -0.0001858300092862919, -0.000566203030757606, -0.0003405229654163122, -0.08607043325901031, -1.1920928244535389e-07, -1.6689286894688848e-06, -0.012703566811978817, -0.27791187167167664, -0.00028153270250186324, -0.0012254356406629086, -0.00226788641884923, -0.001775951823219657, -0.2258552610874176, -0.037047792226076126, -5.8412379075889476e-06, -0.028680870309472084, -1.172924280166626, -0.049704547971487045, -0.6922727227210999, -0.30326423048973083, -0.029226090759038925, -1.6442229747772217, -0.10742715746164322, -0.0008335214806720614, -0.9914966821670532, -7.688703772146255e-05, -0.0006565084331668913, -0.0044546895660459995, -1.8866673707962036, -0.2431582808494568, -0.6020119190216064, -0.5514571666717529, -0.00040534863364882767, -0.001772262854501605, -0.006141006946563721, -1.0490362910786644e-05, -0.0002810560108628124, -0.0009227308910340071, -0.005569061730057001, -0.916314423084259, -0.007636283989995718, -0.0009791824268177152, -0.00019262365822214633, -0.10420053452253342, -0.001077786204405129, -0.06876083463430405, -2.1521573066711426, -0.14259880781173706, -0.062220361083745956, -0.45362961292266846, -1.155027151107788, -0.11579073220491409, -0.0005239067832008004, -0.1884562224149704, -0.11932288110256195, -0.0004986473359167576, -0.5572231411933899, -0.002704060636460781, -0.0029050789307802916, -8.106198947643861e-06, -1.7205229997634888, -2.3841855067985307e-07, -0.0030802683904767036, -0.06875326484441757, -0.0026779049076139927, -0.00449800631031394, -0.0009607228566892445, -0.00018702188390307128, -0.005968011915683746, -0.0008449559682048857, -0.0222459826618433, -0.03598269075155258, -0.0011739989276975393, -0.05738980695605278, -1.1670148372650146, -0.01897481270134449, -0.5440173149108887, -0.10180988907814026, -3.260812759399414, -1.1865050792694092, -0.0016091029392555356, -0.4001416862010956, -0.006646431051194668, -2.641723394393921, -1.555976152420044, -0.6878268718719482, -0.03241686522960663, -0.2426968663930893, -2.6924548149108887, -0.5742225050926208, -0.6786054968833923, -0.31130892038345337, -0.005407231394201517, -0.0021237218752503395, -0.23254035413265228, -0.01873745582997799, -1.4424220353248529e-05, -0.0025637636426836252, -0.035219401121139526, -0.003693545935675502, -0.08308246731758118, -0.10967741906642914, -0.003484370419755578, -1.9073468138230965e-06, -8.463501580990851e-05, -5.960446742392378e-06, -0.24184751510620117, -0.0006136203301139176, -0.002413933165371418, -2.312633478140924e-05, -2.3245540432981215e-05, -0.001437822007574141, -0.002746740123257041, -0.0022916740272194147, -0.0057907202281057835, -0.0034572849981486797, -7.855583680793643e-05, -8.583032467868179e-06, -0.0018690037541091442, -0.11465071886777878, -0.001716570113785565, -0.4158551096916199, -0.0009255892946384847, -1.4080493450164795, -0.0014256800059229136, -6.19869097135961e-05, -1.0728830375228426e-06, -0.0018868515035137534, -0.3001770079135895, -4.970903682988137e-05, -0.03281713277101517, -0.013658517971634865, -8.83301836438477e-05, -0.0003777029050979763, -1.0401196479797363, -0.0007204797584563494, -0.2304317057132721, -0.009599477984011173, -2.2935829162597656, -0.024584073573350906, -0.03293629363179207, -8.702239938429557e-06, -1.4781842764932662e-05, -5.602820692729438e-06, -0.00033825874561443925, -0.0017766657983884215, -1.5616295058862306e-05, -3.576278118089249e-07, -0.03366870805621147, -0.0785965546965599, -0.1378047615289688, -0.5183707475662231, -7.676783570786938e-05, -0.007883860729634762, -0.016984952613711357, -0.0011118428083136678, -8.189342770492658e-05, -0.014191186055541039, -0.0004797023138962686, -8.344646857949556e-07, -0.0004042761866003275, -0.00029881304362788796, -1.4543427823809907e-05, -0.0004988856380805373, -0.0018086755881085992, -4.410734163684538e-06, -0.011652856133878231, -0.0013855629367753863, -0.0011294659925624728, -1.311301275563892e-06, -0.0004383556661196053, -0.0034827073104679585, -1.5539854764938354, -1.9311717551317997e-05, -2.1120007038116455, -0.0005459486856125295, -0.0136573426425457, -0.0386759489774704, -0.004875675309449434, -2.8729025871143676e-05, -0.01028192788362503, -0.0007750368095003068, -0.04843674227595329, -0.2493099719285965, -0.0004032037395518273, -0.2616070508956909, -0.38811418414115906, -0.004312976263463497, -0.06921077519655228, -0.11253861337900162, -0.5086533427238464, -0.0006712805479764938, -0.4935265779495239, -1.8745079040527344, -0.007735061924904585, -0.0022053224965929985, -0.26522472500801086, -0.0011724510695785284, -2.753696753643453e-05, -0.0008594871615059674, -1.0629233121871948, -0.23860539495944977, -0.3488365709781647, -0.05654096603393555, -0.051757317036390305, -0.0015617328463122249, -1.1236920356750488, -0.009001980535686016, -0.0061444430612027645, -0.0007909983396530151, -0.23400554060935974, -0.087590292096138, -2.794189214706421, -0.7922611832618713, -0.21882764995098114, -1.50635826587677, -0.25890108942985535, -0.0008868813747540116, -0.020303161814808846, -0.347806453704834, -0.2788272202014923, -0.009725096635520458, -4.172316494077677e-06, -3.0976810455322266, -0.04257411137223244, -0.28310734033584595, -0.007885398343205452, -0.24122029542922974, -0.0047311740927398205, -3.5366532802581787, -0.41676145792007446, -1.6055505275726318, -2.7656173188006505e-05, -0.5684089660644531, -0.0004278697888366878, -0.05364670231938362, -1.5497195136049413e-06, -3.1709168979432434e-05, -0.09789381176233292, -0.2930823266506195, -0.15718892216682434, -1.6003031730651855, -0.7732092142105103], "finish_reason": "length"}], "metrics": {"energy": 879.5197354373942, "energy_per_token": 3.435623966552321, "time": 21.833364, "time_per_token": 0.085286578125}}
{"outputs": [{"text": "# Create an MxN matrix from the list L\n    M = int(M)\n    N = int(N)\n    matrix = np.array(L).reshape(M, N)\n\n    # Normalize the matrix based on the sound pressure level of an audio file\n    if not os.path.isfile(audio_file):\n        raise FileNotFoundError(f\"The file '{audio_file}' does not exist.\")\n\n    data, sample_rate = sf.read(audio_file)\n    SPL = 20 * np.log10(np.sqrt(np.mean(data ** 2)))\n    matrix_normalized = matrix / np.sqrt(SPL)\n\n    # Create a spectrogram from the matrix\n    fig, ax = plt.subplots()\n    ax.specgram(matrix_normalized.flatten(), NFFT=N, Fs=sample_rate, scale='dB')\n    ax.set_ylim((0, SPL))\n    ax.set_xlabel('Time')\n    ax.set_ylabel('Frequency')\n\n    return matrix", "tokens": ["#", " Create", " an", " M", "x", "N", " matrix", " from", " the", " list", " L", "\n", "    ", "M", " =", " int", "(", "M", ")", "\n", "    ", "N", " =", " int", "(", "N", ")", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "\n", "    ", "#", " Normal", "ize", " the", " matrix", " based", " on", " the", " sound", " pressure", " level", " of", " an", " audio", " file", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " file", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "data", ",", " sample", "_", "rate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", " **", " ", "2", ")))", "\n", "    ", "matrix", "_", "normalized", " =", " matrix", " /", " np", ".", "sqrt", "(", "SP", "L", ")", "\n", "\n", "    ", "#", " Create", " a", " spectro", "gram", " from", " the", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "spec", "gram", "(", "matrix", "_", "normalized", ".", "fl", "atten", "()", ",", " N", "FF", "T", "=", "N", ",", " F", "s", "=", "sample", "_", "rate", ",", " scale", "='", "dB", "')", "\n", "    ", "ax", ".", "set", "_", "y", "lim", "((", "0", ",", " S", "PL", "))", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Time", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "F", "requency", "')", "\n", "\n", "    ", "return", " matrix"], "logprobs": [-1.0683776140213013, -1.5371308326721191, -0.9077519774436951, -0.02245744876563549, -0.08603718131780624, -0.0005428509321063757, -0.016837619245052338, -0.12402480840682983, -0.9624671339988708, -0.18123848736286163, -0.2598849833011627, -0.13734900951385498, -0.002368622925132513, -3.5342721939086914, -0.5638304352760315, -0.8958654403686523, -0.0028216331265866756, -0.028498638421297073, -0.006783314980566502, -0.07636308670043945, -0.0010313435923308134, -0.022074352949857712, -0.0005206898204050958, -0.0007484733941964805, -0.00019834458362311125, -0.00047350639943033457, -0.0002227773511549458, -0.0025966993998736143, -0.05232732370495796, -1.0343632698059082, -0.005542269442230463, -0.045783914625644684, -6.437280717364047e-06, -0.2961903512477875, -0.031705476343631744, -0.008316291496157646, -0.017636381089687347, -0.057763997465372086, -0.0017615529941394925, -2.3841855067985307e-07, -0.375284880399704, -0.016780180856585503, -0.0004240567213855684, -0.03325552120804787, -0.0003014348621945828, -0.03136957809329033, -0.14433902502059937, -0.0013905627420172095, -0.14543189108371735, -0.6945522427558899, -0.01474001631140709, -0.10791397839784622, -0.07149632275104523, -0.1816912740468979, -0.0003328961320221424, -0.17405782639980316, -0.12243291735649109, -0.002488613361492753, -0.001032891683280468, -2.337420701980591, -2.777113914489746, -0.012048209086060524, -0.005115634296089411, -0.050571899861097336, -0.010345404036343098, -0.4038240909576416, -0.8420088291168213, -0.010519531555473804, -2.3841830625315197e-06, -0.00010287232726113871, -1.0847986231965479e-05, -1.6422051191329956, -0.0006333967321552336, -0.001189477858133614, -0.00656365230679512, -4.0411134250462055e-05, -7.867782187531702e-06, -0.0022288737818598747, -0.013271918520331383, -0.00786032434552908, -0.028726741671562195, -0.004588550888001919, -0.00025948495022021234, -1.0967194612021558e-05, -0.025634538382291794, -0.1833750456571579, -0.03625887259840965, -1.765925407409668, -1.412332534790039, -0.40277746319770813, -0.0008322112844325602, -0.0018521074671298265, -0.00011944057769142091, -4.410734163684538e-06, -0.004384191241115332, -0.07552479207515717, -0.00029380773776210845, -0.0010836211731657386, -0.12490677088499069, -0.030647037550807, -0.00042429505265317857, -0.0031010655220597982, -0.34842321276664734, -0.0007753941463306546, -0.39943501353263855, -0.016794834285974503, -1.5811349153518677, -0.0030878742691129446, -0.000614216027315706, -0.0008860476082190871, -0.051056500524282455, -1.6569954823353328e-05, -1.2397689715726301e-05, -9.775113539944869e-06, -0.0002723561483435333, -0.0026821850333362818, -1.3470558769768104e-05, -5.602820692729438e-06, -0.02513839118182659, -0.029987605288624763, -0.13152462244033813, -1.0002167224884033, -0.00024232311989180744, -0.011595354415476322, -0.01949787698686123, -0.001869717612862587, -9.572047565598041e-05, -0.024580933153629303, -0.0005133026279509068, -4.768370445162873e-07, -0.00019035911827813834, -0.0003843760641757399, -1.2516897186287679e-05, -0.0007160721579566598, -0.0021814140491187572, -3.4570634852570947e-06, -0.011737924069166183, -0.0018297373317182064, -0.0010700459824874997, -1.5497195136049413e-06, -0.00048780461656861007, -0.0036541137378662825, -0.10288418084383011, -0.8617202639579773, -0.0004430027911439538, -5.781483559985645e-05, -0.018616240471601486, -0.07098111510276794, -0.14403054118156433, -0.6128646731376648, -1.4033515453338623, -0.770327627658844, -0.002627256326377392, -0.08647723495960236, -0.07742268592119217, -1.0411860942840576, -2.4199192921514623e-05, -2.517015218734741, -0.021544352173805237, -1.5828869342803955, -4.172316494077677e-06, -0.11635319888591766, -0.03657393902540207, -0.02459070459008217, -0.0010458719916641712, -0.013813022524118423, -2.086460590362549, -0.06760945171117783, -0.02605007216334343, -4.0531076592742465e-06, -0.36984243988990784, -0.002996956231072545, -0.5850081443786621, -0.19398175179958344, -0.0022218560334295034, -0.8951117992401123, -0.43605542182922363, -0.004109866451472044, -0.0011856677010655403, -0.00017414960893802345, -7.152555099310121e-07, -1.4543427823809907e-05, -0.0001740304142003879, -0.3566572666168213, -0.001898868940770626, -0.06918152421712875, -1.396212100982666, -0.005691394675523043, -0.3090031147003174, -0.000359351426595822, -0.00096941675292328, -0.17410250008106232, -0.014212694019079208, -0.0010567086283117533, -0.33480870723724365, -0.5373848080635071, -4.565611743601039e-05, -0.004026639740914106, -0.0070831854827702045, -0.5112612247467041, -8.296622399939224e-05, 0.0, -0.0003943857445847243, -1.7970666885375977, -0.14501476287841797, -0.13487361371517181, -0.011230823583900928, -0.0007657456444576383, -0.19745290279388428, -1.0847986231965479e-05, -1.7881377516459906e-06, -0.11162275820970535, -1.6715195178985596, -1.000487208366394, -0.40508776903152466, -0.3021354675292969, -0.0109456367790699, -0.04083019495010376, -0.17308706045150757, -0.00010501786891836673, -0.08611582219600677, -0.004048604518175125, -1.5365803241729736, -0.0005009111482650042, -2.3390231132507324, -0.1572640985250473, -0.03831002861261368, -0.8039634823799133, -2.50339189733495e-06, -0.0685558170080185, -0.13966447114944458, -0.026248309761285782, -0.1541367471218109, -6.007967749610543e-05, -0.008739673532545567, -0.002938716672360897, -1.1015161275863647, -0.04135281965136528, -0.020246973261237144, -0.22338737547397614, -0.0003292018664069474, -0.0003137096355203539, -0.001212338567711413, -5.125986263010418e-06, -0.00010585224663373083, -2.884823152271565e-05, -0.0029905380215495825, -0.002306421985849738, -1.024641513824463, -0.0005398723296821117, -0.12321985512971878, -0.00032824851223267615, -1.9695101976394653, -0.0002885640424210578, -0.282553106546402, -0.006446518935263157], "finish_reason": "length"}], "metrics": {"energy": 892.7464733123782, "energy_per_token": 3.487290911376477, "time": 21.864721, "time_per_token": 0.08540906640625}}
{"outputs": [{"text": "# Create an MxN matrix from the list\n    matrix = np.reshape(L, (M, N))\n\n    # Normalize the matrix based on the sound pressure level (SPL) of a specified audio file\n    audio, sr = sf.read(audio_file)\n    spl = 20 * np.log10(np.sqrt(np.mean(audio**2)))\n    matrix = matrix * (20 / spl)\n\n    # Create a spectrogram from the normalized matrix\n    fig = plt.figure(figsize=(10, 5))\n    plt.subplot(1, 1, 1)\n    spec = librosa.amplitude_to_db(np.abs(matrix), ref=np.max)\n    plt.imshow(spec, origin=\"lower\", aspect=\"auto\", cmap=\"jet\")\n    plt.ylabel(\"Frequency [Hz]\")\n    plt.xlabel(\"Time [sec]\")\n    plt.title(\"Spectrogram\")\n    plt.colorbar()\n    plt.show()\n\n    ", "tokens": ["#", " Create", " an", " M", "x", "N", " matrix", " from", " the", " list", "\n", "    ", "matrix", " =", " np", ".", "resh", "ape", "(", "L", ",", " (", "M", ",", " N", "))", "\n", "\n", "    ", "#", " Normal", "ize", " the", " matrix", " based", " on", " the", " sound", " pressure", " level", " (", "SP", "L", ")", " of", " a", " specified", " audio", " file", "\n", "    ", "audio", ",", " s", "r", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "audio", "**", "2", ")))", "\n", "    ", "matrix", " =", " matrix", " *", " (", "2", "0", " /", " spl", ")", "\n", "\n", "    ", "#", " Create", " a", " spectro", "gram", " from", " the", " normalized", " matrix", "\n", "    ", "fig", " =", " plt", ".", "figure", "(", "fig", "size", "=(", "1", "0", ",", " ", "5", "))", "\n", "    ", "plt", ".", "sub", "plot", "(", "1", ",", " ", "1", ",", " ", "1", ")", "\n", "    ", "spec", " =", " lib", "ros", "a", ".", "am", "plitude", "_", "to", "_", "db", "(", "np", ".", "abs", "(", "matrix", ")", ",", " ref", "=", "np", ".", "max", ")", "\n", "    ", "plt", ".", "im", "show", "(", "spec", ",", " origin", "=", "\"", "lower", "\"", ",", " aspect", "=", "\"", "auto", "\"", ",", " c", "map", "=", "\"", "jet", "\"", ")", "\n", "    ", "plt", ".", "ylabel", "(", "\"", "F", "requency", " [", "Hz", "]\"", ")", "\n", "    ", "plt", ".", "xlabel", "(", "\"", "Time", " [", "sec", "]\"", ")", "\n", "    ", "plt", ".", "title", "(", "\"", "Spect", "ro", "gram", "\"", ")", "\n", "    ", "plt", ".", "color", "bar", "()", "\n", "    ", "plt", ".", "show", "()", "\n", "\n", "    "], "logprobs": [-1.0683776140213013, -1.5371308326721191, -0.9077519774436951, -0.02245744876563549, -0.08603718131780624, -0.0005428509321063757, -0.016837619245052338, -0.12402480840682983, -0.9624671339988708, -0.18123848736286163, -1.8510524034500122, -0.0029362207278609276, -0.42412248253822327, -0.00506404135376215, -0.013310973532497883, -3.099436753473128e-06, -1.211616039276123, -1.311301275563892e-06, -0.011624694801867008, -0.09911645203828812, -0.009972038678824902, -0.015494327060878277, -0.0028072495479136705, -0.0002115741081070155, -0.02006039395928383, -0.0012321030953899026, -0.030899038538336754, -0.1574641466140747, -0.000912250077817589, -0.0665414035320282, -0.5325196981430054, -0.014123487286269665, -0.1262773722410202, -0.0821492075920105, -0.16131223738193512, -0.00027533553657121956, -0.28138965368270874, -0.18695612251758575, -0.0035145438741892576, -0.001608150894753635, -0.2157939225435257, -0.00432223454117775, -2.777537883957848e-05, -0.0006132629350759089, -0.1333947777748108, -1.8122601509094238, -0.10287375003099442, -0.004193560685962439, -0.0017190692014992237, -0.01830178312957287, -0.008120733313262463, -2.4754765033721924, -0.6795575618743896, -0.6833716630935669, -0.018996568396687508, -0.001702408422715962, -0.38965603709220886, -4.8040190449682996e-05, -2.5152843591058627e-05, -1.6689160474925302e-05, -0.0017794027226045728, -0.026433274149894714, -6.568216485902667e-05, -0.00015770144818816334, -0.04047021642327309, -0.13224606215953827, -0.02843676693737507, -1.2225124835968018, -0.030494187027215958, -0.04112037271261215, -0.00415070541203022, -6.341733387671411e-05, -0.023591186851263046, -0.0008386432309634984, -1.4305104514278355e-06, -0.00012468514614738524, -0.0005029367166571319, -3.576278118089249e-07, -0.0013923484366387129, -0.001853654277510941, -8.344646857949556e-07, -0.016352685168385506, -0.0028794039972126484, -0.0015281677478924394, -2.145764938177308e-06, -0.0007048744591884315, -0.004020584747195244, -0.2166873663663864, -0.7760987877845764, -0.0006111184484325349, -0.022388091310858727, -0.05253218486905098, -0.0692141130566597, -0.5211117267608643, -0.3066140115261078, -0.11485627293586731, -2.3915390968322754, -0.5963008999824524, -1.5115145444869995, -0.11501291394233704, -0.16413374245166779, -0.018309859558939934, -0.015797698870301247, -0.06105570122599602, -0.019622493535280228, -0.0006665153778158128, -0.008873671293258667, -2.070605993270874, -0.11171668022871017, -0.09553375095129013, -3.2186455882765586e-06, -0.2968943119049072, -0.0019355150870978832, -1.579171061515808, -0.018370721489191055, -0.14949043095111847, -0.0012652019504457712, -0.7071859240531921, -0.55879145860672, -0.004478543531149626, -2.1457441107486375e-05, -0.015104795806109905, -1.5104706287384033, -0.05328734964132309, -1.0490362910786644e-05, -0.008090107701718807, -0.26957938075065613, -0.43189841508865356, -0.0004379982128739357, -0.028548920527100563, -0.42905429005622864, -0.01090295147150755, -0.00699499761685729, -0.020239731296896935, -1.9656805992126465, -0.0010320581495761871, -1.7592549324035645, -0.035124681890010834, -0.025304613634943962, -0.050876036286354065, -0.21243366599082947, -0.004895367659628391, -0.16152121126651764, -6.878139538457617e-05, -9.703165414975956e-05, -0.0008083889842964709, -0.009663587436079979, -0.0016540905926376581, -0.022191885858774185, -3.1340553760528564, -0.0695779100060463, -0.013917305506765842, -1.6689286894688848e-06, -4.768370445162873e-07, -1.4424220353248529e-05, -0.11683442443609238, -0.0004328744253143668, 0.0, -2.610649426060263e-05, 0.0, -0.004673866089433432, -0.009136416018009186, -1.1283292770385742, -5.602820692729438e-06, -0.014198591001331806, -0.00012194366718176752, -0.29026779532432556, -0.2176550030708313, -0.0367732048034668, -0.09027548134326935, -0.0025519919581711292, -0.05789552256464958, -6.794906312279636e-06, -0.03581248223781586, -0.08220905065536499, -0.03134554624557495, -0.005180981010198593, -2.221332311630249, -2.5033637939486653e-05, -0.13595397770404816, -2.2411095415009186e-05, -8.165503095369786e-05, -0.007183556444942951, -0.036612555384635925, -0.9313921332359314, -1.3247886896133423, -0.001026222831569612, -0.08830526471138, -1.9788545614574105e-05, -0.08367393165826797, -0.4348975718021393, -0.05659053102135658, -0.01808241195976734, -0.00012194366718176752, -7.271740287251305e-06, -0.5149502158164978, -0.18515555560588837, -6.389413465512916e-05, -0.21105650067329407, -0.08051591366529465, -1.6258025169372559, -0.0022446929942816496, -0.12454140931367874, -0.00943026877939701, -0.026030559092760086, -0.014352894388139248, -1.9430925021879375e-05, -2.293428421020508, -0.08293259888887405, -0.05413432791829109, -0.07237659394741058, -0.00102324562612921, -0.5744872093200684, -0.020297087728977203, -0.0006587718962691724, -0.1500474065542221, -0.0013310391223058105, -0.00134151556994766, -0.0008183944155462086, -1.3351351299206726e-05, -0.08106855303049088, -0.005710359662771225, -0.0022313715890049934, -0.014828228391706944, -0.01963207870721817, -1.6962823867797852, -0.0029391921125352383, -0.004413388203829527, -0.00031132620642893016, -0.13835768401622772, -0.06410496681928635, -3.3378044463461265e-05, -0.41751351952552795, -0.07112068682909012, -0.34179824590682983, -0.2782534658908844, -0.0090367142111063, -9.786603914108127e-05, -0.555701494216919, -0.019070371985435486, -0.0005066303419880569, -0.37239301204681396, -0.07247350364923477, -3.814624506048858e-05, -0.2318713366985321, -1.1920928244535389e-07, -0.031032180413603783, -0.002587663009762764, -0.8470181226730347, -0.4349340796470642, -0.00011407678539399058, -0.9530807137489319, -0.0019464610377326608, -0.002530351048335433, -0.24569959938526154, -0.005528043489903212], "finish_reason": "length"}], "metrics": {"energy": 875.6755150928501, "energy_per_token": 3.4206074808314457, "time": 21.864075, "time_per_token": 0.08540654296875}}
{"outputs": [{"text": "if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"Audio file '{audio_file}' does not exist\")\n    data = sf.read(audio_file)[1]\n    # Calculate sound pressure level (SPL)\n    SPL = 20 * np.log10(np.sqrt(np.mean(data ** 2)))\n    matrix = np.array(L).reshape((M, N))\n    # Normalize matrix based on SPL\n    matrix = matrix / SPL\n    # Generate spectrogram from normalized matrix\n    figure = librosa.display.specshow(\n        np.abs(matrix), x_axis=\"time\", y_axis=\"log\", cmap=\"turbo\"\n    )\n    plt.title(f\"Spectrogram for normalized matrix with SPL {SPL}\")\n    plt.xlabel(\"Time (seconds)\")\n    plt.ylabel(\"Frequency (Hz)\")\n    plt.colorbar()\n    return matrix, figure", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Audio", " file", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", "\"", ")", "\n", "    ", "data", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")[", "1", "]", "\n", "    ", "#", " Calculate", " sound", " pressure", " level", " (", "SP", "L", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", " **", " ", "2", ")))", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "((", "M", ",", " N", "))", "\n", "    ", "#", " Normal", "ize", " matrix", " based", " on", " S", "PL", "\n", "    ", "matrix", " =", " matrix", " /", " S", "PL", "\n", "    ", "#", " Generate", " spectro", "gram", " from", " normalized", " matrix", "\n", "    ", "figure", " =", " lib", "ros", "a", ".", "display", ".", "spec", "show", "(", "\n", "        ", "np", ".", "abs", "(", "matrix", ")", ",", " x", "_", "axis", "=", "\"", "time", "\"", ",", " y", "_", "axis", "=", "\"", "log", "\"", ",", " c", "map", "=", "\"", "tur", "bo", "\"", "\n", "    ", ")", "\n", "    ", "plt", ".", "title", "(", "f", "\"", "Spect", "ro", "gram", " for", " normalized", " matrix", " with", " S", "PL", " {", "SP", "L", "}\"", ")", "\n", "    ", "plt", ".", "xlabel", "(", "\"", "Time", " (", "seconds", ")\"", ")", "\n", "    ", "plt", ".", "ylabel", "(", "\"", "F", "requency", " (", "Hz", ")\"", ")", "\n", "    ", "plt", ".", "color", "bar", "()", "\n", "    ", "return", " matrix", ",", " figure", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -0.30077531933784485, -0.00305031961761415, -0.0044648959301412106, -1.823885577323381e-05, -8.22540732769994e-06, -0.004296951927244663, -0.01968315802514553, -0.011692916974425316, -0.018728680908679962, -0.002920768689364195, -0.00016735584358684719, -1.3470558769768104e-05, -0.03450712189078331, -0.21626637876033783, -0.06410496681928635, -0.6559430956840515, -0.0028822568710893393, -0.4674893319606781, -0.0003051292151212692, -0.001179595128633082, -5.2689116273541003e-05, -7.867782187531702e-06, -0.004300631582736969, -0.7055907249450684, -0.0001934579631779343, -0.0011880489764735103, -1.5535001754760742, -0.0003530356043484062, -0.007656868547201157, -1.5628482103347778, -1.7964383363723755, -2.5413999557495117, -0.1770031601190567, -7.235741941258311e-05, -0.0001380348257953301, -0.004875200800597668, -0.001328777172602713, -0.006661351770162582, -3.397406908334233e-05, -4.529942543740617e-06, -0.21727845072746277, -1.1157711744308472, -0.025848889723420143, -0.13439202308654785, -0.06682511419057846, -3.007620334625244, -1.3667343854904175, -1.3779863119125366, -0.010124162770807743, -0.006303903181105852, -0.32637736201286316, -0.0811205506324768, -2.3483953555114567e-05, -0.017504021525382996, -0.6601779460906982, -0.0018661479698494077, -0.5259499549865723, -0.0002060916303889826, -0.010862977243959904, -0.029197609052062035, -0.0021172980777919292, -0.00011050090688513592, -0.029086222872138023, -0.0027946485206484795, -1.7881377516459906e-06, -0.00041952868923544884, -0.0008211340173147619, -7.152555099310121e-07, -0.001142445020377636, -0.0031140190549194813, -1.4305104514278355e-06, -0.006663957145065069, -0.004667102824896574, -0.0017786887474358082, -2.3841830625315197e-06, -0.0010425376240164042, -0.012689325027167797, -0.12949346005916595, -0.5389517545700073, -0.0007918321643956006, -8.141662692651153e-05, -0.019447021186351776, -0.031755480915308, -0.19654475152492523, -2.177429676055908, -0.008005674928426743, -0.02068600244820118, -5.602820692729438e-06, -0.3448032736778259, -0.029625900089740753, -0.005632007960230112, -0.02367885410785675, -0.04830044507980347, -0.0005851463647559285, 0.0, -1.5211131572723389, -0.005082188174128532, -0.0002862997353076935, -0.02934209071099758, -0.0009084388730116189, -0.13457168638706207, -0.034444354474544525, -0.6972113251686096, -0.11737329512834549, -0.03180329129099846, -1.024296760559082, -0.2709082067012787, -0.0007351318490691483, -0.156601682305336, -8.415821503149346e-05, -0.08377468585968018, -0.0005115154199302197, -0.8791624307632446, -0.2970728874206543, -0.1891019344329834, -0.13311411440372467, -2.0534024238586426, -1.4543427823809907e-05, -0.08434262871742249, -0.094123475253582, -0.24030360579490662, -0.3251780569553375, -0.09850607812404633, -0.0002134810492862016, -1.8676508665084839, -2.206561803817749, -0.0051516881212592125, -0.07454992830753326, -0.0015987483784556389, -3.421527624130249, -0.24150413274765015, -2.492490530014038, -2.861018856492592e-06, -8.344646857949556e-07, -5.757642793469131e-05, -0.0033154303673654795, -1.8000440832111053e-05, -0.002462571021169424, -0.0006864098832011223, -0.0036637343000620604, -2.216461658477783, -0.03227929398417473, -0.9680159687995911, -2.3007127310847864e-05, -0.19774866104125977, -0.00039414744242094457, -0.00801596324890852, -0.02299162559211254, -0.03428586572408676, -1.419181227684021, -1.1920928244535389e-07, -0.00017581824795342982, -0.2576090395450592, -0.0008753282018005848, -0.9983787536621094, -0.00019977481861133128, -0.0002627027570270002, -0.002817234955728054, -7.510157047363464e-06, -0.0010556369088590145, -0.0006306566647253931, -0.00041952868923544884, -0.030676517635583878, -0.00012051333033014089, -0.5712338089942932, -1.2122036218643188, -0.00029094755882397294, -0.024208424612879753, -0.03972340747714043, -2.8609542846679688, -1.5497195136049413e-06, -0.00201534666121006, -0.26227620244026184, -0.0012161486083641648, -0.0002320735511602834, -0.016525065526366234, -0.04881759360432625, -0.7082880139350891, -0.00011240804451517761, -1.3854948282241821, -0.00787865649908781, -0.7675677537918091, -0.0028463585767894983, -0.4713105261325836, -0.008099567145109177, -6.007967749610543e-05, -3.033463478088379, -3.4756646156311035, -0.16152739524841309, -0.8059485554695129, -0.11395476758480072, -0.0003196682082489133, -1.214863657951355, -0.026584191247820854, -9.059865078597795e-06, -0.9193645119667053, -0.01837119087576866, -0.004464183934032917, -0.023221803829073906, -0.6450024247169495, -5.6622808187967166e-05, -1.5621193647384644, -0.003918470814824104, -0.23616023361682892, -0.04025668650865555, -0.9666386842727661, -1.6929378509521484, -0.0037671804893761873, -0.0048966724425554276, -0.0005691815749742091, -0.00046826363541185856, -0.006797996815294027, -6.079655122448457e-06, -0.0037007909268140793, -9.119095193454996e-05, -0.013501638546586037, -0.044423215091228485, -0.0006693744799122214, -0.01833830215036869, -0.27340230345726013, -0.0059318686835467815, -0.00036864637513644993, -0.0005178302526473999, -0.027709437534213066, -0.2328723818063736, -8.475421054754406e-05, -0.3067423701286316, 0.0, -0.11842422932386398, -0.006488328333944082, -0.05203992873430252, -0.3372083306312561, -0.020676545798778534, -0.00670031039044261, -0.002405489794909954, -2.2507317066192627, -1.4305104514278355e-06, -4.6491513785440475e-06, -7.748573807475623e-06, -4.541770613286644e-05, -0.17055000364780426], "finish_reason": "stop"}], "metrics": {"energy": 835.2248179454808, "energy_per_token": 3.3814769957306914, "time": 21.012148, "time_per_token": 0.08506942510121457}}
{"outputs": [{"text": "if not os.path.isfile(audio_file):\n        raise FileNotFoundError(f\"The audio file '{audio_file}' does not exist.\")\n\n    data, fs = sf.read(audio_file)\n    spl = 20 * np.log10(np.sqrt(np.mean(data**2)))\n    matrix = np.array(L).reshape(M, N)\n    matrix = matrix / (2**16 - 1) * np.sqrt(np.mean(data**2)) * 20 * spl / 20\n\n    fig = plt.figure()\n    plt.imshow(matrix, origin='lower', aspect='auto', cmap='cool')\n    plt.title('Amplitude Spectrum')\n    plt.xlabel('Frequency (Hz)')\n    plt.ylabel('Time')\n    plt.colorbar()\n    plt.show()\n\n    return matrix, fig", "tokens": ["if", " not", " os", ".", "path", ".", "is", "file", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " audio", " file", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "data", ",", " fs", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", "**", "2", ")))", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "    ", "matrix", " =", " matrix", " /", " (", "2", "**", "1", "6", " -", " ", "1", ")", " *", " np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", "**", "2", "))", " *", " ", "2", "0", " *", " spl", " /", " ", "2", "0", "\n", "\n", "    ", "fig", " =", " plt", ".", "figure", "()", "\n", "    ", "plt", ".", "im", "show", "(", "matrix", ",", " origin", "='", "lower", "'", ",", " aspect", "='", "auto", "'", ",", " c", "map", "='", "cool", "')", "\n", "    ", "plt", ".", "title", "('", "Am", "plitude", " Spectrum", "')", "\n", "    ", "plt", ".", "xlabel", "('", "F", "requency", " (", "Hz", ")", "')", "\n", "    ", "plt", ".", "ylabel", "('", "Time", "')", "\n", "    ", "plt", ".", "color", "bar", "()", "\n", "    ", "plt", ".", "show", "()", "\n", "\n", "    ", "return", " matrix", ",", " fig", "\n", "\n", "if"], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -1.3484132289886475, -0.0008357845945283771, -0.002303210785612464, -0.0032888154964894056, -1.537788011773955e-05, -1.4305012882687151e-05, -0.0030651751440018415, -0.028913911432027817, -0.012738877907395363, -0.018937382847070694, -0.0030036119278520346, -0.0001554368354845792, -1.9907753085135482e-05, -0.03387489169836044, -0.172074094414711, -0.07133927196264267, -1.7037146091461182, -0.8841321468353271, -0.009297880344092846, -0.31545835733413696, -0.000663894519675523, -0.0022513538133352995, -5.149708886165172e-05, -1.0132738680113107e-05, -0.005572143942117691, -0.10014252364635468, -0.0003446938644628972, -0.0014550823252648115, -0.14948499202728271, -0.01817150041460991, -0.0008855711785145104, -0.005883281119167805, -0.16110850870609283, -0.0010389650706201792, -1.7628562450408936, -0.09179580956697464, -2.5329811573028564, -0.0034773615188896656, -0.07376004755496979, -7.748573807475623e-06, -1.9550132492440753e-05, -1.1444026313256472e-05, -0.0005688241217285395, -0.003903983859345317, -1.585470999998506e-05, -4.172316494077677e-06, -0.036021098494529724, -0.1465688794851303, -0.14945481717586517, -1.5319782495498657, -0.019390549510717392, -0.031393952667713165, -0.0037091048434376717, -8.77341881277971e-05, -0.026499100029468536, -0.0014321081107482314, -5.960462772236497e-07, -0.0003000047872774303, -0.0006216024048626423, -5.960462772236497e-07, -0.00200297380797565, -0.0020172500517219305, -2.3841855067985307e-07, -0.007770548574626446, -0.003726682160049677, -0.0019405120983719826, -7.152555099310121e-07, -0.000653530121780932, -0.006906565278768539, -0.1413118988275528, -0.6426085829734802, -0.0005844315164722502, -0.021944560110569, -0.08488297462463379, -0.8310758471488953, -0.9892516136169434, -0.0065704029984772205, -0.028570005670189857, -4.291525328881107e-06, -0.4393995702266693, -0.03031020425260067, -0.005593244917690754, -0.019697068259119987, -0.019306248053908348, -0.0007259594276547432, 0.0, -0.1733417958021164, -0.005762630607932806, -0.0001401803019689396, -0.03866688907146454, -0.0015412606298923492, -0.10251422971487045, -0.10929384082555771, -0.6845835447311401, -0.5668627023696899, -0.2982235848903656, -0.21680906414985657, -0.935672402381897, -1.4078223705291748, -0.8536072969436646, -1.1585783958435059, -2.545383930206299, -1.1112192869186401, -0.015305567532777786, -0.059863075613975525, -0.008722774684429169, -1.0192961692810059, -0.9642444252967834, -1.156323378381785e-05, -0.24914690852165222, -0.02498237043619156, -1.1906912326812744, -7.033323527139146e-06, -0.007133017294108868, -0.06022534519433975, -0.06632176786661148, -0.020478950813412666, -0.001141730579547584, -0.021436544135212898, -0.9147965312004089, -0.5260545015335083, -1.229169487953186, -0.7580558061599731, -2.3403308391571045, -2.241861343383789, -1.3152222633361816, -0.5236495733261108, -1.173445463180542, -0.524689793586731, -0.648127019405365, -0.771220862865448, -0.0009806115413084626, -0.8463281989097595, -0.759477972984314, -0.0037830944638699293, -1.4185804502631072e-05, -0.02902103029191494, -0.23108616471290588, -0.002227446297183633, -0.030456723645329475, -2.106606960296631, -0.0007677706307731569, -0.9083847999572754, -0.00015293381875380874, -0.004098231438547373, -0.39463555812835693, -0.13734984397888184, -2.9470736980438232, -0.30783018469810486, -0.15533123910427094, -0.13413165509700775, -0.00021598390594590455, -1.1556336879730225, -0.03066599741578102, -0.005855667870491743, -0.0907120406627655, -7.86750388215296e-05, -0.2725277245044708, -6.9141146923357155e-06, -0.05321851745247841, -2.4986014366149902, -1.691112995147705, -0.013066855259239674, -0.08793894201517105, -0.0412711501121521, -6.723177648382261e-05, -1.8220243453979492, -0.36704978346824646, -2.266939640045166, -0.017691779881715775, -4.244370460510254, -0.36140120029449463, -0.0015393561916425824, -0.04156016930937767, -0.009994463063776493, -5.3881147323409095e-05, -0.32362374663352966, -0.006353062577545643, -1.8479140996932983, -0.0042188456282019615, -1.2601571083068848, -0.34465691447257996, -0.004023671615868807, -0.0035801143385469913, -0.0007444233051501215, -0.0034799750428646803, -0.0007537146448157728, -4.529942543740617e-06, -0.05124485865235329, -0.0010470629204064608, -0.023751381784677505, -1.2591229677200317, -0.0004586121649481356, -0.09018474072217941, -0.03503778204321861, -2.3245540432981215e-05, -0.17912566661834717, 0.0, -0.05971193313598633, -0.006861576344817877, -0.694980263710022, -0.4223286807537079, -7.450303382938728e-05, -0.618588387966156, -0.004560664761811495, -0.0009532198309898376, -0.21069657802581787, -0.008637686260044575, -0.03227582946419716, -0.012191775254905224, -0.019595840945839882, -0.0030600647442042828, -0.12881405651569366, -0.00566199840977788, -0.7986017465591431], "finish_reason": "stop"}], "metrics": {"energy": 746.0201097240451, "energy_per_token": 3.375656605086177, "time": 18.919527, "time_per_token": 0.08560871945701357}}
{"outputs": [{"text": "if not os.path.isfile(audio_file):\n        raise FileNotFoundError(f\"The audio file '{audio_file}' does not exist.\")\n\n    # Create an MxN matrix from list L\n    A = np.array(L)\n    A = A.reshape(M, N)\n\n    # Read audio file to get SPL\n    data, sample_rate = sf.read(audio_file)\n\n    # Calculate sound pressure level (SPL)\n    SPL = 20 * np.log10(np.sqrt(np.mean(data ** 2)))\n\n    # Normalize matrix based on SPL\n    A = A / 20 * SPL\n\n    # Generate a spectrogram\n    fig = plt.figure()\n    ax = fig.add_subplot()\n    amplitude = np.abs(A)\n    db = 20 * np.log10(amplitude / np.max(amplitude))\n    ax.specgram(db, Fs=sample_rate, scale_by_freq=True)\n\n    # Set the", "tokens": ["if", " not", " os", ".", "path", ".", "is", "file", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " audio", " file", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " an", " M", "x", "N", " matrix", " from", " list", " L", "\n", "    ", "A", " =", " np", ".", "array", "(", "L", ")", "\n", "    ", "A", " =", " A", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "\n", "    ", "#", " Read", " audio", " file", " to", " get", " S", "PL", "\n", "    ", "data", ",", " sample", "_", "rate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "\n", "    ", "#", " Calculate", " sound", " pressure", " level", " (", "SP", "L", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", " **", " ", "2", ")))", "\n", "\n", "    ", "#", " Normal", "ize", " matrix", " based", " on", " S", "PL", "\n", "    ", "A", " =", " A", " /", " ", "2", "0", " *", " S", "PL", "\n", "\n", "    ", "#", " Generate", " a", " spectro", "gram", "\n", "    ", "fig", " =", " plt", ".", "figure", "()", "\n", "    ", "ax", " =", " fig", ".", "add", "_", "sub", "plot", "()", "\n", "    ", "am", "plitude", " =", " np", ".", "abs", "(", "A", ")", "\n", "    ", "db", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "am", "plitude", " /", " np", ".", "max", "(", "am", "plitude", "))", "\n", "    ", "ax", ".", "spec", "gram", "(", "db", ",", " F", "s", "=", "sample", "_", "rate", ",", " scale", "_", "by", "_", "freq", "=", "True", ")", "\n", "\n", "    ", "#", " Set", " the"], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -1.3484132289886475, -0.0008357845945283771, -0.002303210785612464, -0.0032888154964894056, -1.537788011773955e-05, -1.4305012882687151e-05, -0.0030651751440018415, -0.028913911432027817, -0.012738877907395363, -0.018937382847070694, -0.0030036119278520346, -0.0001554368354845792, -1.9907753085135482e-05, -0.03387489169836044, -0.172074094414711, -0.07133927196264267, -1.7037146091461182, -0.8841321468353271, -0.009297880344092846, -0.31545835733413696, -0.000663894519675523, -0.0022513538133352995, -5.149708886165172e-05, -1.0132738680113107e-05, -0.005572143942117691, -0.10014252364635468, -0.0003446938644628972, -0.0014550823252648115, -0.14948499202728271, -0.01817150041460991, -0.0008855711785145104, -0.005883281119167805, -0.16110850870609283, -0.0010389650706201792, -0.934227705001831, -0.8651290535926819, -0.9907683730125427, -0.0318303108215332, -0.10237650573253632, -0.00033301531220786273, -0.01523054763674736, -0.09948302060365677, -3.1719107627868652, -0.02846202626824379, -0.13874854147434235, -0.0015706595731899142, -3.3444674015045166, -0.01518463995307684, -0.02890603616833687, -4.768360213347478e-06, -0.4514962136745453, -0.0321597084403038, -0.008175715804100037, -0.015224911272525787, -2.622502565383911, -0.010144460014998913, -0.2729916572570801, -0.12123678624629974, -0.21051281690597534, -0.021213075146079063, -0.0015276916092261672, 0.0, -0.2955981492996216, -0.0106326499953866, -0.00018010901112575084, -0.04227212816476822, -0.0002517383254598826, -0.02483411878347397, -0.07542464137077332, -0.0009519098093733191, -0.04218002036213875, -2.1772007942199707, -0.6887419819831848, -0.9999201893806458, -1.8891239166259766, -1.1230425834655762, -1.8700122833251953, -0.0016531385481357574, -0.40996259450912476, -0.0010343207977712154, -0.2700622081756592, -0.017155935987830162, -1.6256409883499146, -0.008635559119284153, -0.0020632902160286903, -0.0014482972910627723, -0.07210411131381989, -3.0636318115284666e-05, -1.4185804502631072e-05, -7.986990567587782e-06, -0.0007010624394752085, -0.004128030501306057, -3.218599158572033e-05, -1.8715683836489916e-05, -0.03594117611646652, -0.013151920400559902, -1.7263962030410767, -0.0004986473359167576, -0.11195524036884308, -0.2020547240972519, -1.7727208137512207, -0.0036745427642017603, -0.004044330678880215, -0.22178049385547638, -0.04328375309705734, -2.1219027985353023e-05, -0.007914847694337368, -0.48629626631736755, -0.0011751896236091852, -0.4127548336982727, -0.00010764019680209458, -0.015232191421091557, -0.017120545729994774, -0.001143040368333459, -7.295342220459133e-05, -0.018543105572462082, -0.0004213160718791187, -1.9073468138230965e-06, -0.000481132126878947, -0.00044645831803791225, -3.325883881188929e-05, -0.001013599568977952, -0.0029589226469397545, -1.1920922133867862e-06, -0.01201475877314806, -0.002524643437936902, -0.0011368485866114497, -2.145764938177308e-06, -0.0006003961316309869, -0.004009423777461052, -0.10629525035619736, -0.6865494251251221, -0.00032693761750124395, -4.792098479811102e-05, -0.02180495485663414, -0.027099113911390305, -0.06859076768159866, -0.00044145373976789415, -0.021886715665459633, -0.09963269531726837, -0.015432232990860939, -0.9749923348426819, -0.3406684398651123, -0.0009922825265675783, -0.08858548104763031, -1.4185804502631072e-05, -0.11806221306324005, -0.0004219118563923985, -0.4879225492477417, -0.3999059796333313, -0.21835419535636902, -0.18819908797740936, -1.4533624649047852, -1.6563174724578857, -0.24312052130699158, -0.8209824562072754, -0.12697981297969818, -1.1920922133867862e-06, -0.09753185510635376, -0.03518291935324669, -0.0006393534131348133, -0.03591288626194, -0.468089759349823, -1.518188238143921, -0.017379609867930412, -1.1086402082582936e-05, -1.1616501808166504, -0.0033343215472996235, -0.7376005053520203, -0.521195650100708, -0.01676986552774906, -4.95898348162882e-05, -0.024739574640989304, -0.26076480746269226, -0.004792749881744385, -0.08077214658260345, -0.8079897165298462, -0.06444569677114487, -0.049673013389110565, -3.2186455882765586e-06, -0.002806179691106081, -4.172316494077677e-06, -0.001759529928676784, -1.1920922133867862e-06, -2.8659448623657227, -0.005891339387744665, -0.10980506986379623, -4.26804780960083, -0.005890865344554186, -0.03390750288963318, -1.2027645111083984, -8.106198947643861e-06, -0.06172780692577362, -0.0001770101225702092, -0.039194196462631226, -0.01692330278456211, -0.11722667515277863, -0.022910771891474724, -2.308659076690674, -0.5361649990081787, -0.17334811389446259, -0.03345060721039772, -0.0007018963224254549, -0.009114445187151432, -0.0017043125117197633, -1.1920928244535389e-07, -7.64102369430475e-05, -0.004242468159645796, -1.9073468138230965e-06, -0.00047302976599894464, -0.025283925235271454, -2.3841830625315197e-06, -1.1533401012420654, -0.45896804332733154, -4.303362584323622e-05, -0.028214046731591225, -8.570780482841656e-05, -0.028014807030558586, -1.1920928244535389e-07, -0.053487494587898254, -0.30872976779937744, -0.0758848562836647, -3.463747978210449, -0.002753873122856021, -0.3883129954338074, -0.00018451895448379219, -0.00037889453233219683, -0.14070136845111847, -0.2306741327047348, -0.44004690647125244, -4.875540980719961e-05, -0.006643707398325205, -0.19782838225364685, -2.5748875486897305e-05, -2.50339189733495e-06, -0.3033822476863861, -1.197348952293396, -0.7199822068214417, -0.043117523193359375, -0.00024029705673456192, -0.009234809316694736, -0.003932007122784853, -0.9822752475738525, -0.6920849084854126, -0.021496165543794632, -2.121864080429077, -0.000508417550008744, -0.5717129111289978, -1.234703779220581, -1.6765717267990112], "finish_reason": "length"}], "metrics": {"energy": 881.4535508346561, "energy_per_token": 3.4431779329478753, "time": 21.864979, "time_per_token": 0.08541007421875}}
{"outputs": [{"text": "if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"Audio file '{audio_file}' does not exist.\")\n    # 1. Create an MxN matrix from a list L\n    matrix = np.array(L).reshape(M, N)\n    # 2. Normalize the matrix based on SPL of a specified audio file\n    data, sr = sf.read(audio_file)\n    SPL = 20 * np.log10(np.sqrt(np.mean(data ** 2)))\n    normalized_matrix = matrix / (10 ** (SPL / 20))\n\n    # 3. Generate spectrogram from the matrix\n    amplitude = np.abs(normalized_matrix)\n    spectrogram = librosa.feature.melspectrogram(\n        amplitude.flatten(), sr=sr, n_mels=128\n    )\n    spectrogram = librosa.power_to_db(spectrogram)\n    figure = plt.figure()\n    librosa.display", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Audio", " file", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "#", " ", "1", ".", " Create", " an", " M", "x", "N", " matrix", " from", " a", " list", " L", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "    ", "#", " ", "2", ".", " Normal", "ize", " the", " matrix", " based", " on", " S", "PL", " of", " a", " specified", " audio", " file", "\n", "    ", "data", ",", " s", "r", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", " **", " ", "2", ")))", "\n", "    ", "normalized", "_", "matrix", " =", " matrix", " /", " (", "1", "0", " **", " (", "SP", "L", " /", " ", "2", "0", "))", "\n", "\n", "    ", "#", " ", "3", ".", " Generate", " spectro", "gram", " from", " the", " matrix", "\n", "    ", "am", "plitude", " =", " np", ".", "abs", "(", "normalized", "_", "matrix", ")", "\n", "    ", "spect", "ro", "gram", " =", " lib", "ros", "a", ".", "feature", ".", "m", "els", "pect", "ro", "gram", "(", "\n", "        ", "am", "plitude", ".", "fl", "atten", "()", ",", " s", "r", "=", "sr", ",", " n", "_", "m", "els", "=", "1", "2", "8", "\n", "    ", ")", "\n", "    ", "spect", "ro", "gram", " =", " lib", "ros", "a", ".", "power", "_", "to", "_", "db", "(", "spect", "ro", "gram", ")", "\n", "    ", "figure", " =", " plt", ".", "figure", "()", "\n", "    ", "lib", "ros", "a", ".", "display"], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -0.30077531933784485, -0.00305031961761415, -0.0044648959301412106, -1.823885577323381e-05, -8.22540732769994e-06, -0.004296951927244663, -0.01968315802514553, -0.011692916974425316, -0.018728680908679962, -0.002920768689364195, -0.00016735584358684719, -1.3470558769768104e-05, -0.03450712189078331, -0.21626637876033783, -0.06410496681928635, -0.6559430956840515, -0.0028822568710893393, -0.4674893319606781, -0.0003051292151212692, -0.001179595128633082, -5.2689116273541003e-05, -7.867782187531702e-06, -0.004300631582736969, -0.7055907249450684, -0.0001934579631779343, -0.0011880489764735103, -0.30243203043937683, -0.010785499587655067, -0.0005987281911075115, -0.004515926353633404, -1.7092143297195435, -1.6614488363265991, -4.14760684967041, -0.37449267506599426, -0.2588312327861786, -1.0561797618865967, -0.5431836843490601, -0.019998466596007347, -0.1329249143600464, -0.0008971241768449545, -0.018704228103160858, -0.09797487407922745, -0.5821981430053711, -0.0600978322327137, -0.057567186653614044, -0.33591851592063904, -0.008356604725122452, -0.8672119379043579, -0.0068100737407803535, -0.01733485609292984, -6.437280717364047e-06, -0.32262516021728516, -0.029217176139354706, -0.005302769131958485, -0.009255125187337399, -0.020353157073259354, -0.0005460678366944194, 0.0, -0.22064734995365143, -0.005394544918090105, -0.00012730741582345217, -0.0314607247710228, -0.00025519452174194157, -0.025449194014072418, -1.0652772188186646, -0.15878058969974518, -0.11941418051719666, -0.013153685256838799, -0.00293717160820961, -0.06712010502815247, -0.016425276175141335, -0.3035408556461334, -0.256919264793396, -0.14856486022472382, -0.000912369170691818, -2.747248411178589, -0.0013412775006145239, -0.6308314204216003, -0.9347727298736572, -0.16157415509223938, -0.0076707093976438046, -0.006743056699633598, -0.07836587727069855, -0.005621220916509628, -0.37738287448883057, -0.02613671123981476, -1.6166496276855469, -0.02713647298514843, -0.0012429377529770136, -0.10409622639417648, -1.5258672647178173e-05, -9.179073458653875e-06, -2.3841574147809297e-05, -0.000520570669323206, -0.0034077451564371586, -1.4781842764932662e-05, -1.311301275563892e-06, -0.02292102389037609, -0.08834291249513626, -0.0058158463798463345, -0.8429086804389954, -0.0002762889489531517, -0.010121684521436691, -0.026719650253653526, -0.004507618956267834, -8.582700684200972e-05, -0.02612381987273693, -0.0006881968001835048, -5.960462772236497e-07, -0.00023231192608363926, -0.0006102845072746277, -1.585470999998506e-05, -0.0007687236065976322, -0.0030020668637007475, -5.125986263010418e-06, -0.01947157271206379, -0.0027295020408928394, -0.0012257928028702736, -1.9073468138230965e-06, -0.00047195740626193583, -0.004691308364272118, -0.09350559115409851, -0.6804719567298889, -0.0004558716027531773, -4.827859811484814e-05, -0.027096213772892952, -0.08353336155414581, -0.010318503715097904, -1.1647908687591553, -0.08899540454149246, -0.027387620881199837, -0.0011137479450553656, -0.11249259859323502, -0.06779605895280838, -1.586815595626831, -1.0433249473571777, -0.03028406761586666, -0.057462289929389954, -0.019813010469079018, -0.005260554142296314, -1.7881377516459906e-06, -0.08233048766851425, -0.0006293461774475873, -0.032431986182928085, -0.0013990148436278105, -0.01613159477710724, -0.053868234157562256, -2.030726671218872, -0.0015728019643574953, -0.04532819986343384, -0.17013990879058838, -0.014063306152820587, -0.005112668965011835, -0.19546842575073242, -2.0778870582580566, -0.0014772227732464671, -0.4411473572254181, -0.3583993911743164, -0.16527968645095825, -0.12298596650362015, -0.011927829124033451, -1.7364214658737183, -0.010364163666963577, -0.042305152863264084, -0.7525063157081604, -3.4570634852570947e-06, -0.04425477981567383, -0.000105375460407231, -0.046007879078388214, -7.152555099310121e-07, -9.536738616588991e-07, -0.02117876149713993, -0.16375157237052917, -0.10997916013002396, -1.5564157962799072, -0.013334969989955425, -0.0023501890245825052, -0.06179650500416756, -0.04324859008193016, -1.0728830375228426e-06, -1.1920928244535389e-07, -7.748573807475623e-06, -0.6000791192054749, -4.172316494077677e-06, -0.017655355855822563, -0.007714597508311272, -0.031174201518297195, -1.1324817933200393e-05, -1.1086402082582936e-05, -0.00020346954988781363, -1.3715922832489014, -0.021789325401186943, -0.4651881456375122, -7.629365427419543e-06, -0.8667960166931152, -1.0975744724273682, -4.1960789531003684e-05, -0.002251710742712021, -0.013741417787969112, -0.23455509543418884, -1.1920928244535389e-07, -0.022163785994052887, -0.14769840240478516, -0.037821508944034576, -0.17609332501888275, -2.145764938177308e-06, -0.2105337679386139, -0.0015487592900171876, -0.002859196625649929, -0.8172736167907715, -0.13031169772148132, -0.004953612107783556, -1.6337308883666992, -0.0019372997339814901, -2.4199192921514623e-05, -0.10976031422615051, -0.18998217582702637, -0.49524959921836853, -0.0025623366236686707, -0.0001234931987710297, -0.8379953503608704, -0.036703914403915405, -1.1920928244535389e-07, 0.0, -1.0013530300057027e-05, -0.14464212954044342, 0.0, -4.768370445162873e-07, 0.0, -0.002497650682926178, -1.847726889536716e-05, -0.005008768755942583, -4.172316494077677e-06, -1.883488948806189e-05, -0.3675771951675415, -0.013216745108366013, -0.7830589413642883, -2.6633248329162598, -0.13338486850261688, -0.026530908420681953, -6.639736966462806e-05, -0.05798766016960144, -0.31457656621932983, -0.004295883700251579, -0.01689997874200344, -1.136655569076538, -6.198863957251888e-06, -2.3841830625315197e-06, -0.00013243274588603526, -0.00019405389321036637], "finish_reason": "length"}], "metrics": {"energy": 874.7667132911687, "energy_per_token": 3.4170574737936277, "time": 21.855427, "time_per_token": 0.08537276171875}}
{"outputs": [{"text": "# Check if the audio file exists\n    if not os.path.exists(audio_file):\n        raise FileNotFoundError(\"The specified audio file does not exist.\")\n\n    # Convert the list L into a 2D matrix of shape MxN\n    matrix = np.array(L).reshape(M, N)\n\n    # Load the audio file\n    data, samplerate = sf.read(audio_file)\n\n    # Calculate the sound pressure level (SPL) of the audio data\n    spl = 20 * np.log10(np.sqrt(np.mean(np.square(data))))\n\n    # Normalize the values in the matrix based on the SPL\n    matrix_normalized = matrix / np.max(matrix) * 100\n\n    # Generate a spectrogram of the normalized matrix\n    fig = plt.figure()\n    spec = librosa.amplitude_to_db(matrix_normalized, ref=spl)\n    ax = fig.add_subplot(111)\n    img = librosa.display.specshow(spec, x_", "tokens": ["#", " Check", " if", " the", " audio", " file", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " audio", " file", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Convert", " the", " list", " L", " into", " a", " ", "2", "D", " matrix", " of", " shape", " M", "x", "N", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "\n", "    ", "#", " Load", " the", " audio", " file", "\n", "    ", "data", ",", " sampler", "ate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "\n", "    ", "#", " Calculate", " the", " sound", " pressure", " level", " (", "SP", "L", ")", " of", " the", " audio", " data", "\n", "    ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "np", ".", "square", "(", "data", "))", "))", "\n", "\n", "    ", "#", " Normal", "ize", " the", " values", " in", " the", " matrix", " based", " on", " the", " S", "PL", "\n", "    ", "matrix", "_", "normalized", " =", " matrix", " /", " np", ".", "max", "(", "matrix", ")", " *", " ", "1", "0", "0", "\n", "\n", "    ", "#", " Generate", " a", " spectro", "gram", " of", " the", " normalized", " matrix", "\n", "    ", "fig", " =", " plt", ".", "figure", "()", "\n", "    ", "spec", " =", " lib", "ros", "a", ".", "am", "plitude", "_", "to", "_", "db", "(", "matrix", "_", "normalized", ",", " ref", "=", "spl", ")", "\n", "    ", "ax", " =", " fig", ".", "add", "_", "sub", "plot", "(", "1", "1", "1", ")", "\n", "    ", "img", " =", " lib", "ros", "a", ".", "display", ".", "spec", "show", "(", "spec", ",", " x", "_"], "logprobs": [-1.0683776140213013, -1.111961841583252, -0.15049083530902863, -0.5732647180557251, -0.46184101700782776, -0.02845785580575466, -0.025035038590431213, -0.12391749769449234, -0.0007269124034792185, -0.026268167421221733, -0.010636424645781517, -0.0019213564228266478, -2.50339189733495e-06, -0.00019536493346095085, -1.2993727978027891e-05, -0.39671215415000916, -0.0006002769805490971, -0.00861463975161314, -1.9192511899746023e-05, -5.8412379075889476e-06, -0.0050955903716385365, -0.0011117237154394388, -0.0036891514901071787, -0.010240276344120502, -0.00214037555269897, -7.83174327807501e-05, -4.529942543740617e-06, -0.01496340986341238, -1.8468232154846191, -1.688860297203064, -0.35540294647216797, -0.004853372927755117, -0.0009759668610058725, -0.017194604501128197, -9.417090768693015e-05, -0.000519617460668087, -0.12653695046901703, -0.00513710081577301, -0.0005610798834823072, -0.0013784202747046947, -0.044756580144166946, -0.0011232740944251418, -0.05901835486292839, -2.064817428588867, -0.5810052752494812, -0.13521762192249298, -0.6488000750541687, -0.8010790348052979, -1.121791124343872, -2.1546475887298584, -0.09115352481603622, -0.030700910836458206, -0.6586694717407227, -1.2163113355636597, -0.9910528063774109, -1.1985018253326416, -0.3680911362171173, -0.0003106111544184387, -0.111304871737957, -0.0005125877796672285, -0.7469514608383179, -0.005578189622610807, -0.005201141815632582, -1.4305104514278355e-06, -0.22223380208015442, -0.007659352850168943, -0.0029844765085726976, -0.009402989409863949, -0.011669469997286797, -0.0005135409301146865, 0.0, -0.25735482573509216, -0.0041178204119205475, -0.0001212284987559542, -0.021508533507585526, -0.00023958197562023997, -0.016920607537031174, -0.02923326939344406, -0.0009199915803037584, -0.014901164919137955, -2.707073211669922, -0.20655478537082672, -0.009992456994950771, -0.34408238530158997, -1.2124605178833008, -0.00040951924165710807, -0.15510046482086182, -0.009542802348732948, -1.4128243923187256, -7.629365427419543e-06, -0.000846266164444387, -0.06760265678167343, -1.9550132492440753e-05, -1.549708758830093e-05, -4.255681051290594e-05, -0.00043156370520591736, -0.0022964314557611942, -3.0397906812140718e-05, -6.198863957251888e-06, -0.013167685829102993, -0.007537496741861105, -0.033694297075271606, -0.0005627478822134435, -0.002937052631750703, -0.09071650356054306, -0.09713806957006454, -0.20194076001644135, -0.0013228246243670583, -0.0005063920398242772, -0.06867736577987671, -0.025548668578267097, -8.702239938429557e-06, -0.00265162973664701, -0.7801222205162048, -0.003735589561983943, -0.04646670073270798, -1.306416392326355, -0.06359600275754929, -0.0007053509471006691, -0.7274314165115356, -0.03095856122672558, -0.014542068354785442, -0.0006821212591603398, -3.290122185717337e-05, -0.014513048343360424, -0.0003713871701620519, -8.344646857949556e-07, -0.0004818470624741167, -0.0002416080387774855, -4.768370445162873e-07, -0.0006624649395234883, -0.0010706413304433227, -2.9802276912960224e-06, -0.011939255520701408, -0.0017335877055302262, -0.0006647284608334303, -1.6689286894688848e-06, -0.00017641419253777713, -0.0023338955361396074, -2.0552213191986084, -2.861018856492592e-06, -0.30616050958633423, -0.0001998939987970516, -0.004330305848270655, -0.013528687879443169, -0.0003013156820088625, -0.018120812252163887, -0.025460699573159218, -0.0003594706067815423, -0.005546655971556902, -0.17920807003974915, -0.003463462460786104, -0.05718166008591652, -2.5156586170196533, -0.1138634979724884, -0.06145117059350014, -0.024865398183465004, -0.1139150932431221, -0.00016807096835691482, -0.13593555986881256, -0.17213019728660583, -9.536697689327411e-06, -0.25209590792655945, -0.0004518203204497695, -0.9048853516578674, -1.6455718278884888, -0.611214816570282, -0.0019342063460499048, -0.1750347763299942, -0.15516477823257446, -1.8007185459136963, -1.9788545614574105e-05, -0.6290202736854553, -0.0015361425466835499, -0.16440604627132416, -0.009802065789699554, -0.1016824021935463, -2.300640106201172, -0.3949435353279114, -0.01969578117132187, -2.1048593521118164, -0.633453905582428, -0.09225215017795563, -0.0008536509121768177, -0.009844562038779259, -0.5321455597877502, -0.42705976963043213, -0.025503000244498253, -1.7881377516459906e-06, -1.1626243591308594, -0.003881540847942233, -0.562905490398407, -0.07100509852170944, -0.5109804272651672, -0.0015548295341432095, -0.5380754470825195, -0.7177316546440125, -0.006357564125210047, -3.504691630951129e-05, -0.019682807847857475, -0.2518755793571472, -0.0026060924865305424, -0.04683840647339821, -2.4756968021392822, -0.05079785734415054, -0.0037664680276066065, -2.145764938177308e-06, -5.960462772236497e-07, -7.510157047363464e-06, -0.32783278822898865, -0.0014953156933188438, 0.0, -3.123234637314454e-05, 0.0, -0.0019527667900547385, -0.012397488579154015, -0.5279913544654846, -0.006374858319759369, -5.149708886165172e-05, -0.18894444406032562, -0.04187540337443352, -0.0035893793683499098, -2.2001280784606934, -0.16333909332752228, -0.03943648934364319, -0.015535407699644566, -1.3099348545074463, -0.04455103352665901, -0.33126911520957947, -3.2186455882765586e-06, -0.012957070954144001, -1.6689286894688848e-06, -0.0023016647901386023, -1.1920922133867862e-06, -0.20125046372413635, -0.021082470193505287, -1.108191728591919, -5.9126061387360096e-05, -0.035777974873781204, -0.002701088320463896, -0.004222169518470764, -1.324463129043579, -0.002959516830742359, -0.1835806518793106, -5.960462772236497e-07, -1.0728830375228426e-06, -4.0531076592742465e-06, -8.40390202938579e-05, -3.814689989667386e-06, -0.0005547653418034315, -0.0002060916303889826, -0.0002644904307089746, -0.046028830111026764, -0.005646825302392244, -0.5578126311302185, -7.152531907195225e-06], "finish_reason": "length"}], "metrics": {"energy": 895.9902857131959, "energy_per_token": 3.4999620535671716, "time": 21.857708, "time_per_token": 0.085381671875}}
{"outputs": [{"text": "if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"The specified audio file '{audio_file}' does not exist.\")\n\n    data = sf.read(audio_file)[0]\n    SPL = 20 * np.log10(np.sqrt(np.mean(data ** 2)))\n\n    # Form matrix from list L\n    matrix = np.reshape(L, (M, N))\n\n    # Normalize matrix based on sound pressure level\n    matrix_normalized = matrix / SPL\n\n    # Generate spectrogram\n    figure = plt.figure()\n    X = matrix_normalized\n    X_dB = 20 * np.log10(np.abs(librosa.amplitude_to_db(X, ref=np.max)))\n    Xdb_melted = X_dB.flatten()\n    Xt = np.arange(X_dB.shape[1])\n    Xf = np.arange(X_dB.shape[0])\n    Xf_hz = librosa.core.frames_", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " specified", " audio", " file", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "data", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")[", "0", "]", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", " **", " ", "2", ")))", "\n", "\n", "    ", "#", " Form", " matrix", " from", " list", " L", "\n", "    ", "matrix", " =", " np", ".", "resh", "ape", "(", "L", ",", " (", "M", ",", " N", "))", "\n", "\n", "    ", "#", " Normal", "ize", " matrix", " based", " on", " sound", " pressure", " level", "\n", "    ", "matrix", "_", "normalized", " =", " matrix", " /", " S", "PL", "\n", "\n", "    ", "#", " Generate", " spectro", "gram", "\n", "    ", "figure", " =", " plt", ".", "figure", "()", "\n", "    ", "X", " =", " matrix", "_", "normalized", "\n", "    ", "X", "_", "dB", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "abs", "(", "lib", "ros", "a", ".", "am", "plitude", "_", "to", "_", "db", "(", "X", ",", " ref", "=", "np", ".", "max", ")))", "\n", "    ", "X", "db", "_", "m", "elt", "ed", " =", " X", "_", "dB", ".", "fl", "atten", "()", "\n", "    ", "X", "t", " =", " np", ".", "ar", "ange", "(", "X", "_", "dB", ".", "shape", "[", "1", "])", "\n", "    ", "X", "f", " =", " np", ".", "ar", "ange", "(", "X", "_", "dB", ".", "shape", "[", "0", "])", "\n", "    ", "X", "f", "_", "hz", " =", " lib", "ros", "a", ".", "core", ".", "frames", "_"], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -0.30077531933784485, -0.00305031961761415, -0.0044648959301412106, -1.823885577323381e-05, -8.22540732769994e-06, -0.004296951927244663, -0.01968315802514553, -0.011692916974425316, -0.018728680908679962, -0.002920768689364195, -0.00016735584358684719, -1.3470558769768104e-05, -0.03450712189078331, -0.21626637876033783, -0.06410496681928635, -1.921510934829712, -1.4067338705062866, -0.06659270823001862, -0.00691769365221262, -0.4848242402076721, -0.000444551813416183, -0.0021075436379760504, -7.283422019099817e-05, -7.199982064776123e-05, -0.00281331199221313, -0.03161885589361191, -0.00033706706017255783, -0.0011195826809853315, -0.15949746966362, -0.007686206605285406, -0.0009351171320304275, -0.002456030808389187, -0.19391371309757233, -0.0010174104245379567, -2.1309545040130615, -2.176833152770996, -0.5733509659767151, -0.00010072677832795307, -0.0001357701694360003, -0.004019516054540873, -0.0013465156080201268, -0.005817268509417772, -2.455681169521995e-05, -3.4570634852570947e-06, -0.23509661853313446, -0.1330200880765915, -0.0205007903277874, -0.17127086222171783, -0.11615102738142014, -0.6016068458557129, -0.0003432638186495751, -0.01527469139546156, -0.03007436729967594, -0.005396560300141573, -0.0001931004080688581, -0.03926480561494827, -0.003973447252064943, -8.344646857949556e-07, -0.00024291902082040906, -0.0012462714221328497, -7.152555099310121e-07, -0.0008996253600344062, -0.0035053968895226717, -4.768370445162873e-07, -0.004848627373576164, -0.0029534550849348307, -0.0019019624451175332, -1.4305104514278355e-06, -0.0011973362416028976, -0.011052576825022697, -0.14976151287555695, -0.7433583736419678, -0.0010870745172724128, -5.149708886165172e-05, -0.023877214640378952, -0.06530594825744629, -0.6648960113525391, -0.0004191712068859488, -2.0378527641296387, -2.049062728881836, -1.5721173286437988, -1.130833625793457, -0.7760381698608398, -0.3923342823982239, -0.6769312620162964, -0.001629097736440599, -0.5208518505096436, -0.0061979941092431545, -0.03339538350701332, -7.033323527139146e-06, -1.6866989135742188, 0.0, -0.013362259604036808, -0.10843286663293839, -0.0600472018122673, -0.013187451288104057, -0.005193552002310753, -0.0003817544784396887, -0.013304032385349274, -0.0016296928515657783, -0.04256851598620415, -0.1808461844921112, -0.0004941195948049426, -0.017892736941576004, -0.12385430932044983, -0.02614704705774784, -0.5453684329986572, -0.3010822534561157, -0.0012275787303224206, -2.1226327419281006, -0.009908538311719894, -0.009822015650570393, -1.362385869026184, -0.0006503135664388537, -0.7400503158569336, -1.2712459564208984, -0.7453981041908264, -0.0030611343681812286, -0.15815897285938263, -0.05987958237528801, -0.8134557604789734, -1.6689286894688848e-06, -0.05358806252479553, -0.029488518834114075, -0.0006281548412516713, -0.05326802283525467, -0.3034180700778961, -0.06909775733947754, -0.00029762129997834563, -0.765791654586792, -0.0014135378878563643, -3.118830919265747, -0.23594850301742554, -0.037029754370450974, -0.0004472924047149718, -0.04894076660275459, -0.15784373879432678, -0.0061635179445147514, -0.07981988787651062, -4.134442329406738, -0.8300802707672119, -1.2693250179290771, -0.028514627367258072, -0.002234345069155097, -1.0857936143875122, -0.029323453083634377, -1.5325967073440552, -0.31719252467155457, -0.1733999252319336, -0.0034050126560032368, -0.24568459391593933, -0.00937877967953682, -0.0001264730526600033, -0.001789517467841506, -0.00043049128726124763, -4.768370445162873e-07, -2.264974000354414e-06, -0.0023313979618251324, -4.768370445162873e-07, -3.0397906812140718e-05, -0.23371323943138123, -2.729855441430118e-05, -9.97731985989958e-05, -3.838465272565372e-05, -1.3069827556610107, -7.986990567587782e-06, -1.0728830375228426e-06, -2.109982233378105e-05, -0.23691941797733307, -0.007740621455013752, 0.0, -3.576272320060525e-06, 0.0, -0.0028518266044557095, -0.0006685405969619751, -0.011344569735229015, -0.1737438589334488, -0.017243115231394768, -0.0011041027028113604, -0.00022480344341602176, -2.7418097943154862e-06, -0.018188709393143654, -0.010566715151071548, -0.017045192420482635, -0.10764212906360626, -2.425848960876465, -0.47965630888938904, -0.4007589519023895, -3.6904144287109375, -2.7993927001953125, -2.2695465087890625, -0.0037634989712387323, -0.4253425896167755, -0.0006081400788389146, -5.960462772236497e-07, -0.004745411686599255, -0.6186623573303223, -3.194758028257638e-05, -0.0018193849828094244, -0.044810496270656586, -0.4010874032974243, -1.5308836698532104, -2.1822762489318848, -0.05323784425854683, -0.0171189047396183, -3.3378546504536644e-06, -0.643156886100769, -6.151010165922344e-05, -0.0012455570977181196, -0.35312268137931824, -1.1135905981063843, -7.390948667307384e-06, -0.00021073981770314276, -5.543078441405669e-05, -0.002374569419771433, -0.3936789929866791, -0.031222153455018997, -0.03854198381304741, -0.016511345282197, -0.043631307780742645, -0.020315777510404587, -8.797258487902582e-05, -0.0017062166007235646, -2.3841855067985307e-07, -0.00013624693383462727, -1.5020257706055418e-05, -0.00013457823661156, -0.0031370734795928, -0.0010442048078402877, -1.0728830375228426e-06, -1.0609570381348021e-05, -2.8609820219571702e-05, -1.2040065485052764e-05, -0.007336697541177273, -0.003607196733355522, -0.025948788970708847, -0.355958491563797, -2.1869208812713623, -0.871630847454071, -0.38059329986572266, -0.8659029006958008, -0.022519107908010483, -1.0526249408721924, -3.2186455882765586e-06, -2.3841855067985307e-07, -1.549708758830093e-05, -1.5955289602279663, -7.152555099310121e-07, -1.171837329864502, 0.0], "finish_reason": "length"}], "metrics": {"energy": 876.0282465133675, "energy_per_token": 3.421985337942842, "time": 21.853811, "time_per_token": 0.08536644921875}}
{"outputs": [{"text": "matrix = np.array(L).reshape(M, N)\n\n    # Normalize matrix to the sound pressure level\n    data, sr = librosa.load(audio_file)\n    spl = 20 * np.log10(np.sqrt(np.mean(data**2)))\n    normalized_matrix = matrix / spl\n\n    # Create a spectrogram from the matrix\n    fig = plt.figure()\n    ax = fig.add_subplot(111)\n    ax.specgram(normalized_matrix.reshape(-1), Fs=2)\n\n    ax.set_xscale('linear')\n    ax.set_yscale('log')\n\n    return normalized_matrix, fig", "tokens": ["matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "\n", "    ", "#", " Normal", "ize", " matrix", " to", " the", " sound", " pressure", " level", "\n", "    ", "data", ",", " s", "r", " =", " lib", "ros", "a", ".", "load", "(", "audio", "_", "file", ")", "\n", "    ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", "**", "2", ")))", "\n", "    ", "normalized", "_", "matrix", " =", " matrix", " /", " spl", "\n", "\n", "    ", "#", " Create", " a", " spectro", "gram", " from", " the", " matrix", "\n", "    ", "fig", " =", " plt", ".", "figure", "()", "\n", "    ", "ax", " =", " fig", ".", "add", "_", "sub", "plot", "(", "1", "1", "1", ")", "\n", "    ", "ax", ".", "spec", "gram", "(", "normalized", "_", "matrix", ".", "resh", "ape", "(-", "1", ")", ",", " F", "s", "=", "2", ")", "\n", "\n", "    ", "ax", ".", "set", "_", "x", "scale", "('", "linear", "')", "\n", "    ", "ax", ".", "set", "_", "ys", "cale", "('", "log", "')", "\n", "\n", "    ", "return", " normalized", "_", "matrix", ",", " fig", "\n", "\n", "def"], "logprobs": [-2.969392776489258, -0.017602883279323578, -0.03158986568450928, -2.5629668016335927e-05, -0.38776496052742004, -0.03171760216355324, -0.006816703826189041, -0.026334119960665703, -0.06709848344326019, -0.0008529362385161221, -1.1920928244535389e-07, -0.3812139332294464, -0.010142453946173191, -0.0003411188081372529, -0.08154464513063431, -0.0013775869738310575, -0.10734021663665771, -1.311136245727539, -0.0006113567505963147, -1.1629111766815186, -2.067835807800293, -0.14473940432071686, -1.635594129562378, -3.207333564758301, -2.2555935382843018, -1.64405357837677, -0.03270095959305763, -0.006766501348465681, -1.921160340309143, -0.006077737081795931, -0.8646788597106934, -0.0393964946269989, -1.7033427953720093, -0.016460806131362915, -0.0012550819665193558, -1.0669947862625122, -1.1205610462639015e-05, -1.1920928244535389e-07, -1.2040065485052764e-05, -0.0007474012672901154, -0.0008256602450273931, -0.01715722493827343, -4.625213477993384e-05, -6.83045873302035e-05, -0.13714075088500977, -0.07524940371513367, -0.04078751057386398, -1.1658940315246582, -0.032905496656894684, -0.03889818489551544, -0.00519236596301198, -5.280832192511298e-05, -0.024845747277140617, -0.0015679220668971539, -1.6689286894688848e-06, -7.116541382856667e-05, -0.00034588552080094814, -1.0728830375228426e-06, -0.0011149387573823333, -0.0032989149913191795, -1.5497195136049413e-06, -0.06350024044513702, -0.0028961640782654285, -0.001555900671519339, -4.410734163684538e-06, -0.0005482124397531152, -0.0069535644724965096, -0.20163698494434357, -0.5444573760032654, -0.0004451475979294628, -0.023560449481010437, -0.04484161362051964, -0.09418933093547821, -2.8130273818969727, -0.05062584578990936, -0.03088470548391342, -0.00178927939850837, -0.10416444391012192, -0.21958526968955994, -0.17547017335891724, -0.10952112078666687, -0.048622872680425644, -0.0007597897201776505, -0.07100998610258102, -1.4202817678451538, -0.875910222530365, -0.1727309674024582, -7.748573807475623e-06, -0.9821261763572693, -0.04110492765903473, -0.6529838442802429, -0.12063173204660416, -0.0018868515035137534, -0.581609845161438, -0.883571982383728, -0.0030490122735500336, -5.543078441405669e-05, -0.012299876660108566, -0.15237830579280853, -0.001978227635845542, -0.04389375075697899, -0.4454679787158966, -0.05167796090245247, -0.04239256680011749, -2.50339189733495e-06, -0.001370087033137679, -3.933898824470816e-06, -0.0006672301678918302, -5.960462772236497e-07, -0.06576839089393616, -0.0077765812166035175, -0.9555123448371887, -7.950943836476654e-05, -0.034036558121442795, -0.0014105618465691805, -0.04345383495092392, -0.5411653518676758, -0.005444223526865244, -0.3237415552139282, -0.0008499585674144328, -0.0007151191821321845, -0.12373950332403183, -1.0371154530730564e-05, -4.0531076592742465e-06, -0.37214747071266174, -2.7378594875335693, -2.3841855067985307e-07, -0.23357659578323364, -1.7165990357170813e-05, -0.03932027891278267, -0.02087491750717163, -1.3834491968154907, -0.0014481781981885433, -0.005836468189954758, -2.9099905490875244, -3.7315096855163574, -0.07726148515939713, -2.438415765762329, -0.00045622908510267735, -2.3877203464508057, -0.002188907703384757, -0.0010088359704241157, -0.0009584600338712335, -1.2988977432250977, -0.3239704966545105, -0.017175504937767982, -0.05937250703573227, -0.0006834316882304847, -0.2661460041999817, -0.03178446739912033, -0.012003922834992409, -0.00013028726971242577, -0.003984014969319105, -2.7417760065873154e-05, -0.05906364321708679, -2.52720492426306e-05, -0.001210909802466631, -0.1816975325345993, -0.0031699903775006533, -0.007603868842124939, -0.4641691744327545, -0.00031740395934320986, -0.4571893811225891, -0.4671640694141388, -8.583032467868179e-06, -4.529942543740617e-06, -0.012955187819898129, -0.0051218015141785145, -0.18035788834095, -0.007123666815459728, -0.7749800682067871], "finish_reason": "stop"}], "metrics": {"energy": 574.8865074462893, "energy_per_token": 3.3619094002706977, "time": 14.5127735, "time_per_token": 0.08487002046783626}}
{"outputs": [{"text": "if not os.path.isfile(audio_file):\n        raise FileNotFoundError(f\"The audio file '{audio_file}' does not exist.\")\n\n    L = L[:M*N]\n    arr = np.array(L).reshape((M, N))\n    arr = np.array([float(i) for i in arr.reshape(-1)])\n\n    data, _ = sf.read(audio_file)\n    SPL = 20 * np.log10(np.sqrt(np.mean(data**2)))\n    arr = arr / (10**(SPL/20))\n\n    fig = plt.figure()\n\n    ax = fig.add_subplot(1, 1, 1)\n    ax.specgram(arr, NFFT=512, Fs=44100, cmap='coolwarm')\n    ax.set_yscale('log')\n    ax.set_xlabel('Time')\n    ax.set_ylabel('Frequency')\n    ax.set_title('Spectrogram')\n\n    ", "tokens": ["if", " not", " os", ".", "path", ".", "is", "file", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " audio", " file", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "L", " =", " L", "[:", "M", "*", "N", "]", "\n", "    ", "arr", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "((", "M", ",", " N", "))", "\n", "    ", "arr", " =", " np", ".", "array", "([", "float", "(", "i", ")", " for", " i", " in", " arr", ".", "resh", "ape", "(-", "1", ")]", ")", "\n", "\n", "    ", "data", ",", " _", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", "**", "2", ")))", "\n", "    ", "arr", " =", " arr", " /", " (", "1", "0", "**(", "SP", "L", "/", "2", "0", "))", "\n", "\n", "    ", "fig", " =", " plt", ".", "figure", "()", "\n", "\n", "    ", "ax", " =", " fig", ".", "add", "_", "sub", "plot", "(", "1", ",", " ", "1", ",", " ", "1", ")", "\n", "    ", "ax", ".", "spec", "gram", "(", "arr", ",", " N", "FF", "T", "=", "5", "1", "2", ",", " F", "s", "=", "4", "4", "1", "0", "0", ",", " c", "map", "='", "cool", "warm", "')", "\n", "    ", "ax", ".", "set", "_", "ys", "cale", "('", "log", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Time", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "F", "requency", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Spect", "ro", "gram", "')", "\n", "\n", "    "], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -1.3484132289886475, -0.0008357845945283771, -0.002303210785612464, -0.0032888154964894056, -1.537788011773955e-05, -1.4305012882687151e-05, -0.0030651751440018415, -0.028913911432027817, -0.012738877907395363, -0.018937382847070694, -0.0030036119278520346, -0.0001554368354845792, -1.9907753085135482e-05, -0.03387489169836044, -0.172074094414711, -0.07133927196264267, -1.7037146091461182, -0.8841321468353271, -0.009297880344092846, -0.31545835733413696, -0.000663894519675523, -0.0022513538133352995, -5.149708886165172e-05, -1.0132738680113107e-05, -0.005572143942117691, -0.10014252364635468, -0.0003446938644628972, -0.0014550823252648115, -0.14948499202728271, -0.01817150041460991, -0.0008855711785145104, -0.005883281119167805, -0.16110850870609283, -0.0010389650706201792, -2.448280096054077, -0.25791820883750916, -2.3326144218444824, -0.3701569139957428, -0.4667578935623169, -0.613336443901062, -0.00044228785554878414, -0.008736010640859604, -0.4485802948474884, -0.1742437183856964, -3.6658835411071777, -0.03588999807834625, -0.018808353692293167, -8.22540732769994e-06, -0.3237926959991455, -0.009102867916226387, -0.0027990469243377447, -0.04031474143266678, -0.35712146759033203, -0.005266245920211077, -2.3841855067985307e-07, -0.6179052591323853, -0.005481570027768612, -0.00036113892565481365, -0.19129011034965515, -0.0003413571394048631, -0.06161046028137207, -0.9233598113059998, -1.9225260019302368, -0.43746304512023926, -0.9921316504478455, -5.769562994828448e-05, -1.421239972114563, -0.6520946025848389, -2.980712652206421, -0.011632825247943401, -0.45681920647621155, -0.061939042061567307, -0.051132503896951675, -0.009980300441384315, -0.00011038171214750037, -0.25569620728492737, -0.7396054863929749, -2.1893935203552246, -1.3470558769768104e-05, -0.5812212228775024, -0.00012230125139467418, -0.041613344103097916, -0.026618551462888718, -0.2566381096839905, -0.6060681939125061, -0.0009716795175336301, -0.745231032371521, -0.029997900128364563, -2.030548572540283, -0.013076502829790115, -0.04453928768634796, -2.50339189733495e-06, -6.6756979322235566e-06, -1.2993727978027891e-05, -0.0021504866890609264, -0.005870007909834385, -1.4066597032069694e-05, -8.344646857949556e-07, -0.03921505808830261, -0.06661356985569, -0.08586904406547546, -0.6262735724449158, -0.00046528480015695095, -0.009746937081217766, -0.035887010395526886, -0.0038769098464399576, -0.00017474555352237076, -0.04846104606986046, -0.002473986940458417, -4.768370445162873e-07, -0.00027783826226368546, -0.0009968079393729568, -4.172316494077677e-06, -0.0011703077470883727, -0.007192669901996851, -5.960462772236497e-07, -0.014673646539449692, -0.0026179824490100145, -0.003380182199180126, -7.152555099310121e-07, -0.0008391196606680751, -0.018177704885601997, -0.15412060916423798, -0.22220450639724731, -0.0006612736615352333, -0.02296098694205284, -0.04619935527443886, -0.5809275507926941, -0.5365461111068726, -0.38739538192749023, -0.28194668889045715, -0.4145878553390503, -1.0091471672058105, -1.1342849731445312, -0.017576411366462708, -0.43059539794921875, -0.004786224570125341, -2.3841830625315197e-06, -0.10000241547822952, -0.012887522578239441, -0.002857413375750184, -0.05095567926764488, -0.06887011229991913, -0.37039491534233093, -0.0003326578007545322, -0.8690585494041443, -0.5495359897613525, -0.005419325083494186, -1.4543427823809907e-05, -0.05293669179081917, -0.31696993112564087, -0.0017513189231976867, -2.922023057937622, -0.0005326044629327953, -1.5453643798828125, -0.3057742714881897, -0.12012103945016861, -3.3378546504536644e-06, -0.01489576231688261, -1.7881377516459906e-06, -0.003571443259716034, -2.3841855067985307e-07, -0.018259644508361816, -0.0629986971616745, -0.17345215380191803, -0.025277184322476387, -0.0612066425383091, -6.0437283536884934e-05, -0.00016151554882526398, -0.00014828535495325923, -0.015724007040262222, -0.001749176881276071, -0.09052323549985886, -0.5839055180549622, -0.008271366357803345, -0.8165772557258606, -0.0016074366867542267, -0.0021302644163370132, -0.16316725313663483, -0.16634346544742584, -0.2931329309940338, -3.0874729418428615e-05, 0.0, -0.0024398579262197018, -2.4057016372680664, -0.004884809721261263, -0.001529357978142798, -0.0046233185566961765, -0.036505669355392456, -0.1275981366634369, -0.003638078924268484, -1.4125138521194458, -0.18630646169185638, -0.005620983894914389, -0.0009825170272961259, -0.0005715643637813628, -0.034269850701093674, -1.2556654214859009, -2.884823152271565e-05, -0.5685749650001526, -2.1783652305603027, -1.2995944023132324, -0.18716968595981598, -0.021360814571380615, -0.23836317658424377, -0.21276675164699554, -0.0008700875914655626, -0.00750815449282527, -0.0005851463647559285, -2.2403202056884766, -0.0003002431185450405, -0.010828543454408646, -0.2004893571138382, -0.001471271039918065, -0.00964481569826603, -0.5335572361946106, -0.34179961681365967, -0.000580499938223511, -0.1689033806324005, -0.0010237219976261258, -1.7336955070495605, -0.041181694716215134, -0.11780126392841339, -0.28874796628952026, -0.00026901919045485556, -0.001955146435648203, -8.916457591112703e-05, -2.145764938177308e-06, -0.0009667966514825821, -2.3841574147809297e-05, -0.006016832776367664, -0.0012480573495849967, -0.008579065091907978, -0.0018286664271727204, -0.12106379866600037, -0.0004960260121151805, -0.1896173506975174, -0.12744691967964172, -0.0002240883477497846, -0.025883043184876442, -0.0001299296854995191, -0.03011508472263813, -0.4117792844772339, -0.40460094809532166, -0.011109520681202412, -4.708655978902243e-05, -0.4240201413631439, -0.0007066613179631531, -0.3590249717235565, -0.0002681849291548133], "finish_reason": "length"}], "metrics": {"energy": 869.1741422767634, "energy_per_token": 3.395211493268607, "time": 22.075594, "time_per_token": 0.0862327890625}}
{"outputs": [{"text": "try:\n        assert os.path.isfile(audio_file), f\"File does not exist: {audio_file}\"\n    except AssertionError as e:\n        raise FileNotFoundError(str(e))\n    data, rate = sf.read(audio_file)\n    spl = 20 * np.log10(np.sqrt(np.mean(data ** 2)))\n    matrix = np.array(L).reshape((M, N))\n    normalized_matrix = matrix / spl\n    normalized_matrix_amplitude = np.abs(normalized_matrix)\n    fig, ax = plt.subplots()\n    ax.pcolormesh(normalized_matrix_amplitude, cmap='viridis', norm=librosa.power_to_db(normalized_matrix_amplitude))\n    ax.set_ylabel('Frequency [Hz]')\n    ax.set_xlabel('Time [s]')\n    return normalized_matrix, fig", "tokens": ["try", ":", "\n", "        ", "assert", " os", ".", "path", ".", "is", "file", "(", "audio", "_", "file", ")", ",", " f", "\"", "File", " does", " not", " exist", ":", " {", "audio", "_", "file", "}\"", "\n", "    ", "except", " Ass", "ert", "ion", "Error", " as", " e", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "str", "(", "e", "))", "\n", "    ", "data", ",", " rate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", " **", " ", "2", ")))", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "((", "M", ",", " N", "))", "\n", "    ", "normalized", "_", "matrix", " =", " matrix", " /", " spl", "\n", "    ", "normalized", "_", "matrix", "_", "am", "plitude", " =", " np", ".", "abs", "(", "normalized", "_", "matrix", ")", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "p", "col", "orm", "esh", "(", "normalized", "_", "matrix", "_", "am", "plitude", ",", " c", "map", "='", "vir", "idis", "'", ",", " norm", "=", "lib", "ros", "a", ".", "power", "_", "to", "_", "db", "(", "normalized", "_", "matrix", "_", "am", "plitude", "))", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "F", "requency", " [", "Hz", "]", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Time", " [", "s", "]", "')", "\n", "    ", "return", " normalized", "_", "matrix", ",", " fig"], "logprobs": [-3.207901954650879, -0.000957030919380486, -0.013278976082801819, -0.027953369542956352, -3.4485836029052734, -0.37467554211616516, -6.198863957251888e-06, -0.0010296764085069299, -2.0146166207268834e-05, -1.309729814529419, -0.0037842821329832077, -0.003623825730755925, -0.017239365726709366, -2.4437606043647975e-05, -1.3351351299206726e-05, -0.0013935388997197151, -0.8254295587539673, -0.578875720500946, -0.155495747923851, -1.5706382989883423, -3.2507479190826416, -0.002386342966929078, -0.013644407503306866, -0.22127355635166168, -0.07705942541360855, -0.008764726109802723, -0.00020346954988781363, -8.702239938429557e-06, -0.030026011168956757, -0.012662841007113457, -0.9813192486763, -0.0005769256968051195, -0.14272014796733856, -4.529942543740617e-06, -1.4781842764932662e-05, -1.549708758830093e-05, -0.10385868698358536, -0.2648395299911499, -0.0009029601933434606, -0.0014874596381559968, -0.003602920565754175, -0.48648932576179504, -0.033109646290540695, -0.00015746307326480746, -1.4305012882687151e-05, -0.04439596086740494, -0.7993971705436707, -8.785339014139026e-05, -3.909988299710676e-05, -0.004340869374573231, -0.12726598978042603, -1.306044578552246, -1.7336302995681763, -0.03761763125658035, -2.521528720855713, -0.0014075858052819967, -0.06199361011385918, -1.2040065485052764e-05, -2.6702524337451905e-05, -1.2159273865108844e-05, -0.0009220162755809724, -0.004909484181553125, -1.7404405298293568e-05, -0.00021550717065110803, -0.033817388117313385, -0.07846276462078094, -0.07321188598871231, -1.5275803804397583, -0.025056548416614532, -0.04449561983346939, -0.005611974745988846, -0.00012516192509792745, -0.04313875734806061, -0.0021491781808435917, -1.311301275563892e-06, -0.00020966715237591416, -0.0006945105269551277, -9.536738616588991e-07, -0.0007398966699838638, -0.0029341999907046556, -9.536738616588991e-07, -0.010815807618200779, -0.005075783468782902, -0.00159172632265836, -3.933898824470816e-06, -0.0007546676206402481, -0.007685615215450525, -0.17355918884277344, -0.8888953328132629, -0.0009567927336320281, -7.068861305015162e-05, -0.03379756212234497, -0.09417425096035004, -0.12382281571626663, -1.0846995115280151, -0.007201901637017727, -0.022016281262040138, -7.867782187531702e-06, -0.2761286199092865, -0.04562823474407196, -0.010076368227601051, -0.023140035569667816, -0.029273904860019684, -0.0009154658182524145, 0.0, -2.0299415588378906, -0.008239444345235825, -0.00032455421751365066, -0.04962945356965065, -0.0013168720761314034, -0.08624400198459625, -0.01477643009275198, -1.9043676853179932, -0.1685231328010559, -0.029512131586670876, -0.0017454879125580192, -0.1676158308982849, -0.08440661430358887, -0.8588945865631104, -0.11740987002849579, -0.054650161415338516, -2.802473545074463, -0.0026676803827285767, -0.5982040166854858, -1.1805248260498047, -0.3125741481781006, -0.061360251158475876, -0.005441970657557249, -0.4029792845249176, -2.264974000354414e-06, -0.1393871158361435, -0.0006456674309447408, -0.006111623719334602, -1.7881377516459906e-06, -2.3841855067985307e-07, -0.04167063161730766, -0.12989197671413422, -0.12331564724445343, -0.7805507183074951, -0.650456428527832, -0.007528623100370169, -0.0031364792957901955, -0.00027211778797209263, -8.344646857949556e-07, -8.4638240878121e-06, -0.0004109491710551083, -0.14513839781284332, -0.0017408467829227448, -0.006913431454449892, -0.6979208588600159, -0.0027957186102867126, -1.315102219581604, -0.0008083889842964709, -3.576272320060525e-06, -0.0038821345660835505, -8.880697714630514e-05, -0.2505134642124176, -1.9073468138230965e-06, -6.9141146923357155e-06, -0.003699603257700801, -9.548207890475169e-05, -1.0728830375228426e-06, -0.0850135013461113, -0.03602178767323494, -1.5497195136049413e-06, -0.08515287935733795, -2.456122875213623, -5.364403477869928e-06, -0.6404494643211365, -0.00025293012731708586, -0.33134937286376953, -0.012033132836222649, -2.7000157833099365, -1.9788545614574105e-05, -6.318072337307967e-06, -5.018585216021165e-05, -0.7415088415145874, -1.1920928244535389e-07, -0.00011002412065863609, -1.1920928244535389e-07, -0.003705066628754139, -0.13751816749572754, -0.03703860193490982, -1.8596476365928538e-05, -3.909988299710676e-05, -0.026883289217948914, -9.285972191719338e-05, -2.0265558760002023e-06, -0.17564690113067627, -0.0057801720686256886, -0.004654407035559416, -0.2549940347671509, -0.00018070495571009815, -0.1372041553258896, -0.006043730769306421, -1.8458349704742432, -0.03309569135308266, -0.25329968333244324, -0.000874851830303669, -0.08658590912818909, -0.060744889080524445, -4.494089080253616e-05, -0.017543965950608253, -0.0015656605828553438, -0.0001387499796692282, -0.0056446916423738, -3.755022044060752e-05, -0.0009844223968684673, -2.610649426060263e-05, -0.01713624782860279, -0.0005000770906917751, -0.0008709213580004871, -0.006909288000315428, -0.08156508207321167, -0.0002522150462027639, -0.000687958556227386, -0.00023874769976828247, -0.013830658048391342, -1.4529876708984375, -0.08528325706720352, -6.556489552167477e-06, -5.94836674281396e-05, -0.02972576953470707, -0.012430102564394474], "finish_reason": "stop"}], "metrics": {"energy": 765.3031175670613, "energy_per_token": 3.4165317748529525, "time": 19.129723, "time_per_token": 0.08540054910714286}}
{"outputs": [{"text": "if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"The audio file '{audio_file}' does not exist.\")\n\n    if len(L) < M*N:\n        raise ValueError(f\"The input list L is not long enough to fill the {M}x{N} matrix.\")\n\n    # Create a matrix MxN from L\n    matrix = np.array(L[:M*N]).reshape(M, N)\n\n    # Normalize matrix based on the sound pressure level of the audio file\n    data, sample_rate = sf.read(audio_file)\n    spl = 20 * np.log10(np.sqrt(np.mean(data**2)))\n    matrix /= 10**(spl/20)\n\n    # Generate the spectrogram of matrix\n    fig = plt.figure(figsize=(10, 8))\n    ax = fig.add_subplot(1, 1, 1)\n    librosa.display.specshow(np.abs(matrix), cmap='hot'", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " audio", " file", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "if", " len", "(", "L", ")", " <", " M", "*", "N", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " input", " list", " L", " is", " not", " long", " enough", " to", " fill", " the", " {", "M", "}", "x", "{", "N", "}", " matrix", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " matrix", " M", "x", "N", " from", " L", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", "[:", "M", "*", "N", "])", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "\n", "    ", "#", " Normal", "ize", " matrix", " based", " on", " the", " sound", " pressure", " level", " of", " the", " audio", " file", "\n", "    ", "data", ",", " sample", "_", "rate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", "**", "2", ")))", "\n", "    ", "matrix", " /", "=", " ", "1", "0", "**(", "spl", "/", "2", "0", ")", "\n", "\n", "    ", "#", " Generate", " the", " spectro", "gram", " of", " matrix", "\n", "    ", "fig", " =", " plt", ".", "figure", "(", "fig", "size", "=(", "1", "0", ",", " ", "8", "))", "\n", "    ", "ax", " =", " fig", ".", "add", "_", "sub", "plot", "(", "1", ",", " ", "1", ",", " ", "1", ")", "\n", "    ", "lib", "ros", "a", ".", "display", ".", "spec", "show", "(", "np", ".", "abs", "(", "matrix", ")", ",", " c", "map", "='", "hot", "'"], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -0.30077531933784485, -0.00305031961761415, -0.0044648959301412106, -1.823885577323381e-05, -8.22540732769994e-06, -0.004296951927244663, -0.01968315802514553, -0.011692916974425316, -0.018728680908679962, -0.002920768689364195, -0.00016735584358684719, -1.3470558769768104e-05, -0.03450712189078331, -0.21626637876033783, -0.06410496681928635, -1.921510934829712, -0.6229451894760132, -0.0053275516256690025, -0.33184728026390076, -0.0004957877099514008, -0.0016964580863714218, -5.709961988031864e-05, -7.748573807475623e-06, -0.005002838093787432, -0.07771501690149307, -0.0002928543253801763, -0.0015647084219381213, -0.13270653784275055, -0.0157451294362545, -0.0009697740315459669, -0.003425684291869402, -0.19973509013652802, -0.000969297660049051, -3.124279499053955, -0.79124516248703, -0.000390215078368783, -0.0032610115595161915, -0.005496389232575893, -1.8547462224960327, -0.07610329240560532, -1.7941967248916626, -0.0005729940603487194, -0.009648829698562622, -0.027565646916627884, -0.004377307370305061, -1.058267593383789, -0.041014429181814194, -9.298280929215252e-06, -0.054815612733364105, -0.7974390387535095, -0.027772629633545876, -0.3174036145210266, -1.8693459033966064, -0.04280279576778412, -1.2894773483276367, -1.5537164211273193, -1.4752658605575562, -0.3524487614631653, -7.807903602952138e-05, -0.07934914529323578, -1.80815589427948, -0.07866707444190979, -1.3394049406051636, -0.001213052892126143, -0.009063530713319778, -0.05162215232849121, -3.659658250398934e-05, -0.0003864018653985113, -0.00238788896240294, -0.006625352427363396, -0.044787243008613586, -0.030386416241526604, -0.0014249657979235053, -0.00042691652197390795, -0.048513174057006836, -0.0012709167785942554, -0.8761492371559143, -0.8034799695014954, -2.154763698577881, -0.5478513240814209, -2.775491714477539, -0.27956488728523254, -0.0013396107824519277, -0.690162181854248, -1.3322416543960571, -0.1552821546792984, -0.0018040348077192903, -0.6752718091011047, -0.005411618389189243, -0.017293613404035568, -7.271740287251305e-06, -0.1432846188545227, -0.022965995594859123, -0.0012975853169336915, -0.3530397117137909, -0.021324407309293747, -0.018764715641736984, -7.021180499577895e-05, -0.013882623985409737, -0.020677246153354645, -0.00020895205670967698, 0.0, -0.4329422414302826, -0.005098318215459585, -7.64102369430475e-05, -0.05580989643931389, -0.0001445904199499637, -0.02059643715620041, -0.05567099526524544, -0.0012176964664831758, -0.038427505642175674, -0.8159195780754089, -0.028555061668157578, -2.3958959579467773, -0.4258907735347748, -0.0012617491884157062, -1.1884748935699463, -0.20548228919506073, -0.005396797321736813, -0.002758747199550271, -1.9241434335708618, -0.5345629453659058, -0.18042178452014923, -0.06747273355722427, -0.0380554161965847, -0.004833560902625322, -0.2226484715938568, -0.01590658538043499, -1.3965532779693604, -0.0038991153705865145, -0.0004690977220889181, -0.0011243456974625587, -0.08780672401189804, -1.2159273865108844e-05, -1.1324817933200393e-05, -1.6212332411669195e-05, -0.0004146431456319988, -0.0033326582051813602, -2.0265373677830212e-05, -1.6689286894688848e-06, -0.025734342634677887, -0.02847488783299923, -0.051377471536397934, -1.0046534538269043, -0.023706911131739616, -0.030949430540204048, -0.001444369088858366, -3.325883881188929e-05, -0.028696391731500626, -0.0004015354788862169, -3.576278118089249e-07, -0.0002119316632160917, -0.00023648326168768108, -1.0490362910786644e-05, -0.000598251644987613, -0.0006996329175308347, -1.1920922133867862e-06, -0.01108358334749937, -0.001825929619371891, -0.0008155357209034264, -4.768370445162873e-07, -0.0003238391946069896, -0.0029302777256816626, -0.066306933760643, -0.14401455223560333, -0.00019691436318680644, -0.02530333586037159, -0.05508720874786377, -0.08289485424757004, -0.43544986844062805, -2.8002772331237793, -2.1457441107486375e-05, -2.057799816131592, -0.47727692127227783, -0.014247952029109001, -0.18489260971546173, -0.014123251661658287, -0.0900261327624321, -0.022421197965741158, -0.002537128748372197, -0.006925270427018404, -0.03488030657172203, -0.023603063076734543, -0.0011288706446066499, -0.017597494646906853, -0.35040244460105896, -2.708073616027832, -0.028017472475767136, -0.0001573438785271719, -2.101142406463623, -2.2288153171539307, -0.8843884468078613, -0.0038018582854419947, -0.5983769297599792, -0.831967294216156, -0.006328186951577663, -2.682172998902388e-05, -0.02069184184074402, -1.418241024017334, -0.07418351620435715, -3.0397906812140718e-05, -0.013414720073342323, -0.29099780321121216, -0.27959832549095154, -0.00045277358731254935, -0.1262647658586502, -3.17931866645813, -0.017186753451824188, -0.009557797573506832, -0.02604205720126629, -0.8222472071647644, -0.039188582450151443, -0.04986775666475296, -2.3841830625315197e-06, -0.011296008713543415, -1.4305104514278355e-06, -0.0013529442949220538, -3.576278118089249e-07, -0.07451972365379333, -0.023512011393904686, -0.4421168267726898, -0.0030960743315517902, -0.0032189481426030397, -2.9682672902708873e-05, -5.8053239627042785e-05, -0.00013374387344811112, -0.008430251851677895, -0.0009239218779839575, -0.06120070070028305, -0.996993362903595, -4.60137271147687e-05, -5.8412379075889476e-06, -0.00021872512297704816, -0.0007202415145002306, -5.483612312673358e-06, -0.0010702840518206358, -0.0003780603874474764, -0.00011085849109804258, -1.2382371425628662, -1.8358061424805783e-05, -0.25936436653137207, -0.0001560327800689265, -0.021931732073426247, -0.053478341549634933, -0.009468292817473412, -2.50687313079834, -0.00025781645672395825, -0.09239605814218521, -2.609405517578125, -0.17237654328346252], "finish_reason": "length"}], "metrics": {"energy": 908.0512554302215, "energy_per_token": 3.547075216524303, "time": 21.866327, "time_per_token": 0.08541533984375}}
{"outputs": [{"text": "if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"File {audio_file} does not exist.\")\n\n    # Create a MxN matrix from the list L\n    L = np.asarray(L)\n    L = L[:M * N]\n    matrix = np.reshape(L, (M, N))\n\n    # Normalize the matrix based on the audio file's SPL\n    data, samplerate = sf.read(audio_file)\n    SPL = 20 * np.log10(np.sqrt(np.mean(data**2)))\n    matrix = matrix / (2**(SPL / 6))\n\n    # Generate the spectrogram from the matrix\n    fig, ax = plt.subplots()\n    amplitude = 10 * np.log10(np.abs(matrix))\n    img = librosa.display.specshow(amplitude, x_axis='linear', ax=ax)\n    ax.set_ylabel(f'Amplitude (SPL = {SPL})')\n    ax.set_", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "File", " {", "audio", "_", "file", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " M", "x", "N", " matrix", " from", " the", " list", " L", "\n", "    ", "L", " =", " np", ".", "as", "array", "(", "L", ")", "\n", "    ", "L", " =", " L", "[:", "M", " *", " N", "]", "\n", "    ", "matrix", " =", " np", ".", "resh", "ape", "(", "L", ",", " (", "M", ",", " N", "))", "\n", "\n", "    ", "#", " Normal", "ize", " the", " matrix", " based", " on", " the", " audio", " file", "'", "s", " S", "PL", "\n", "    ", "data", ",", " sampler", "ate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", "**", "2", ")))", "\n", "    ", "matrix", " =", " matrix", " /", " (", "2", "**(", "SP", "L", " /", " ", "6", "))", "\n", "\n", "    ", "#", " Generate", " the", " spectro", "gram", " from", " the", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "am", "plitude", " =", " ", "1", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "abs", "(", "matrix", "))", "\n", "    ", "img", " =", " lib", "ros", "a", ".", "display", ".", "spec", "show", "(", "am", "plitude", ",", " x", "_", "axis", "='", "linear", "'", ",", " ax", "=", "ax", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "(", "f", "'", "Am", "plitude", " (", "SP", "L", " =", " {", "SP", "L", "})", "')", "\n", "    ", "ax", ".", "set", "_"], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -0.30077531933784485, -0.00305031961761415, -0.0044648959301412106, -1.823885577323381e-05, -8.22540732769994e-06, -0.004296951927244663, -0.01968315802514553, -0.011692916974425316, -0.018728680908679962, -0.002920768689364195, -0.00016735584358684719, -1.3470558769768104e-05, -0.03450712189078331, -0.21626637876033783, -0.06410496681928635, -1.6832849979400635, -0.9855233430862427, -0.002083632629364729, -6.913899414939806e-05, -5.07818695041351e-05, -0.0026805205270648003, -0.7431452870368958, -0.0003575639275368303, -0.001896846224553883, -0.7005195021629333, -0.015449605882167816, -0.0005342725198715925, -0.0038892594166100025, -0.2540130317211151, -0.0009558399324305356, -1.128565788269043, -1.0392102003097534, -2.1798479557037354, -1.3539643287658691, -0.17461690306663513, -0.00029666791670024395, -0.026160286739468575, -0.17359647154808044, -0.751347005367279, -0.19331040978431702, -0.32547545433044434, -0.11550869047641754, -0.0010350352386012673, -2.3628923892974854, -0.1786430925130844, -0.5661759376525879, -8.260862523457035e-05, -2.704275369644165, -0.03657371178269386, -0.007836787030100822, -0.003299390198662877, -0.05165418982505798, -0.1794470101594925, -0.004844593815505505, -2.2074689865112305, -0.25488123297691345, -0.615662157535553, -2.5345499515533447, -0.30708378553390503, -0.6877717971801758, -0.0022991669829934835, -0.004834272898733616, -0.22285406291484833, -0.030100509524345398, -0.5760668516159058, -0.0035071787424385548, -0.6006479859352112, -7.271740287251305e-06, -0.07191231846809387, 0.0, -0.00018916724366135895, -0.0053531634621322155, -0.00455805379897356, -0.014406359754502773, -0.003385409712791443, -0.0007241725688800216, -0.015502777881920338, -0.0013393727131187916, -0.025351570919156075, -0.06379812210798264, -0.0009899006690829992, -0.03351505100727081, -0.7295512557029724, -0.023437486961483955, -0.16072507202625275, -0.1079845055937767, -0.1861252784729004, -0.0005787128466181457, -0.2578185498714447, -3.0184948444366455, -0.11090122163295746, -0.9230828285217285, -7.629103492945433e-05, -1.243561863899231, -0.0002531684876885265, -0.06116302311420441, -0.002998025855049491, -0.27811184525489807, -0.03580385446548462, -1.5096266269683838, -1.6331539882230572e-05, -0.001929447171278298, -0.031732846051454544, -6.6756979322235566e-06, -8.940656698541716e-06, -2.276871418871451e-05, -0.0006026597693562508, -0.003581420984119177, -2.1457441107486375e-05, -3.576272320060525e-06, -0.02683420106768608, -0.020572030916810036, -0.03364427387714386, -1.1819782257080078, -0.00022790218645241112, -0.009692158550024033, -0.02659185230731964, -0.003470946568995714, -0.0001230164198204875, -0.017995305359363556, -0.0007388246012851596, -8.344646857949556e-07, -0.00040236959466710687, -0.000550357042811811, -6.318072337307967e-06, -0.0008204193436540663, -0.0016137446509674191, -7.152555099310121e-07, -0.01496916450560093, -0.0023738557938486338, -0.0017592919757589698, -1.5497195136049413e-06, -0.0006507901125587523, -0.004649660550057888, -0.07888457179069519, -0.9742178916931152, -0.0010676642414182425, -0.02212379314005375, -0.036622554063797, -0.07731688022613525, -0.2709289491176605, -0.1411844789981842, -0.13473328948020935, -0.14314576983451843, -1.2846577167510986, -2.166616439819336, -2.131587505340576, -0.07477948814630508, -4.0531076592742465e-06, -1.1373928785324097, -0.004335528239607811, -2.156674385070801, -0.4117804765701294, -0.11103031039237976, -0.036190349608659744, -0.0008245882345363498, -0.027295289561152458, -0.42367956042289734, -1.6190028190612793, -0.019726404920220375, -0.00013326710904948413, -2.2324893474578857, -0.008772761560976505, -0.40970030426979065, -0.09210875630378723, -0.001935396110638976, -1.2079685926437378, -0.7168938517570496, -0.00973513163626194, -0.003312578657642007, -0.00021669900161214173, -7.152555099310121e-07, -2.253030106658116e-05, -0.0003131137927994132, -0.375550776720047, -0.0023266407661139965, -0.07070936262607574, -3.7067105770111084, -0.005132593680173159, -0.02186700515449047, -1.2404861450195312, -2.584169864654541, -0.07769174128770828, -0.5543519854545593, -0.022408723831176758, -3.6954811548639555e-06, -0.006996536627411842, -0.034165941178798676, -5.483612312673358e-06, -0.008164719678461552, -0.14131738245487213, -2.777537883957848e-05, -0.008475642651319504, -0.00039736481267027557, -0.6611263751983643, -0.46420836448669434, -0.23682460188865662, -0.04450884833931923, -1.3232394456863403, -0.004438667558133602, -2.5276618003845215, -1.311301275563892e-06, -2.145764938177308e-06, -1.1324817933200393e-05, -0.0028531341813504696, -4.172316494077677e-06, -0.0032884590327739716, -0.0004017737810499966, -9.321732068201527e-05, -0.02961629442870617, -6.437280717364047e-06, -0.024343740195035934, -0.5507721900939941, -0.00016091958968900144, -0.0012000747956335545, -0.11353643238544464, -0.6272951364517212, -0.015253793448209763, -0.00036745471879839897, -0.3205559253692627, -0.001157805323600769, -0.00010775939153973013, -0.22899417579174042, -0.0017172842053696513, -0.043427012860774994, -0.9704440832138062, -7.295342220459133e-05, -0.025273464620113373, -0.02536621503531933, -2.376300811767578, -2.129117488861084, -1.156994342803955, -0.5597079992294312, -1.7774431705474854, -0.0033835088834166527, -0.26514673233032227, -0.4186704754829407, -3.242440288886428e-05, -0.8650220036506653, -0.00794275850057602, -0.057819243520498276, -2.145764938177308e-06, -1.379129409790039, -0.008236607536673546, -0.011273376643657684, -0.011312628164887428, -0.399808406829834, -2.3841574147809297e-05, -0.08304209262132645, -0.001259487122297287], "finish_reason": "length"}], "metrics": {"energy": 909.3471943550106, "energy_per_token": 3.5521374779492603, "time": 23.119738, "time_per_token": 0.0903114765625}}
{"outputs": [{"text": "# Create an MxN matrix from L\n    matrix = np.array(L).reshape((M, N))\n\n    # Normalize the matrix based on sound pressure level (SPL) of specified audio file\n    # Read the audio file using SoundFile from the audio_file directory\n    with sf.SoundFile(audio_file) as sound_file:\n        data = sound_file.read(always_2d=True)\n        spl = 20 * np.log10(np.sqrt(np.mean(np.square(data), axis=1)))\n        spl = spl[0]\n        # Normalize the matrix based on the sound pressure level (SPL) of specified audio file\n        matrix = matrix / np.max(np.abs(matrix)) * spl\n\n    # Generate a spectrogram from the matrix\n    fig, ax = plt.subplots()\n    # Plot spectrogram with logarithmic frequency scale\n    ax.specgram(matrix.flatten(), Fs=spl, scale='dB')\n    # Set x-axis to linear scale\n    ax.set_xlabel('Time (s)')", "tokens": ["#", " Create", " an", " M", "x", "N", " matrix", " from", " L", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "((", "M", ",", " N", "))", "\n", "\n", "    ", "#", " Normal", "ize", " the", " matrix", " based", " on", " sound", " pressure", " level", " (", "SP", "L", ")", " of", " specified", " audio", " file", "\n", "    ", "#", " Read", " the", " audio", " file", " using", " Sound", "File", " from", " the", " audio", "_", "file", " directory", "\n", "    ", "with", " s", "f", ".", "Sound", "File", "(", "audio", "_", "file", ")", " as", " sound", "_", "file", ":", "\n", "        ", "data", " =", " sound", "_", "file", ".", "read", "(", "always", "_", "2", "d", "=", "True", ")", "\n", "        ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "np", ".", "square", "(", "data", ")", ",", " axis", "=", "1", ")))", "\n", "        ", "spl", " =", " spl", "[", "0", "]", "\n", "        ", "#", " Normal", "ize", " the", " matrix", " based", " on", " the", " sound", " pressure", " level", " (", "SP", "L", ")", " of", " specified", " audio", " file", "\n", "        ", "matrix", " =", " matrix", " /", " np", ".", "max", "(", "np", ".", "abs", "(", "matrix", "))", " *", " spl", "\n", "\n", "    ", "#", " Generate", " a", " spectro", "gram", " from", " the", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "#", " Plot", " spectro", "gram", " with", " logarithmic", " frequency", " scale", "\n", "    ", "ax", ".", "spec", "gram", "(", "matrix", ".", "fl", "atten", "()", ",", " F", "s", "=", "spl", ",", " scale", "='", "dB", "')", "\n", "    ", "#", " Set", " x", "-", "axis", " to", " linear", " scale", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Time", " (", "s", ")", "')"], "logprobs": [-1.0683776140213013, -1.5371308326721191, -0.9077519774436951, -0.02245744876563549, -0.08603718131780624, -0.0005428509321063757, -0.016837619245052338, -0.12402480840682983, -1.3683319091796875, -0.13985759019851685, -0.001840565470047295, -0.5273310542106628, -0.0042235939763486385, -0.014554874040186405, -1.6689286894688848e-06, -0.3254830241203308, -0.020960021764039993, -0.005087288096547127, -0.012758769094944, -0.018825901672244072, -0.0005293875001370907, -5.960462772236497e-07, -1.4617953300476074, -0.0022664591670036316, -0.00013219437096267939, -0.0333365835249424, -0.00028379703871905804, -0.012569963932037354, -0.0873606950044632, -0.0006416169344447553, -0.04319390282034874, -0.5028383731842041, -0.01003824919462204, -0.1509278267621994, -0.05245357006788254, -0.15014640986919403, -0.0003060825983993709, -2.6329519748687744, -0.0075366683304309845, -0.008472687564790249, -0.2096141129732132, -0.004678138066083193, -1.5139465176616795e-05, -0.00098204065579921, -0.538302481174469, -2.4129483699798584, -0.004732716828584671, -0.007831582799553871, -0.01862489804625511, -0.010055716149508953, -2.2480764389038086, -1.6171560287475586, -1.3009748458862305, -0.03064865618944168, -0.5633910894393921, -2.305664300918579, -2.4430882930755615, -0.30938270688056946, -2.8487625122070312, -0.43206319212913513, -1.3539186716079712, -1.4644737243652344, -0.032713185995817184, -2.576801061630249, -0.09629698097705841, -0.013270976953208447, -2.3391599655151367, -0.00649211835116148, -1.8000440832111053e-05, -2.4199192921514623e-05, -6.496695277746767e-05, -3.099436753473128e-06, -0.003922983072698116, -1.3716163635253906, -7.56950321374461e-05, -0.0009972843108698726, -0.13513587415218353, -0.0001433984871255234, -3.110309600830078, -0.7793689966201782, -0.061767369508743286, -0.007128637749701738, -0.025800911709666252, -0.04810153320431709, -0.6302185654640198, -0.03708994761109352, -0.017342587932944298, -0.00013600854435935616, -1.1920928244535389e-07, -0.00014780859055463225, -0.0012756790965795517, -0.8659558892250061, -0.3457570970058441, -1.5497195136049413e-06, -5.185469490243122e-05, -0.00022921319759916514, -0.0014488924061879516, -0.00626338878646493, -0.013818196021020412, -0.07177241146564484, -0.8829440474510193, -1.398910403251648, -0.022005902603268623, -0.03323914855718613, -0.002398592187091708, -7.903263758635148e-05, -0.01716507598757744, -0.0005963454605080187, -1.311301275563892e-06, -0.00018940561858471483, -0.00039521988946944475, -1.2993727978027891e-05, -0.0010213402565568686, -0.0017984420992434025, -7.986990567587782e-06, -0.060142844915390015, -0.004770920146256685, -0.0006325627909973264, -8.4638240878121e-06, -0.0003108495147898793, -0.004397365730255842, -1.0132807493209839, -1.2040065485052764e-05, -0.1131209060549736, -0.00031096869497559965, -0.013044851832091808, -0.5123277306556702, -0.002618576865643263, -0.00853734277188778, -0.029362579807639122, -0.38302144408226013, -0.065885029733181, -0.0888446718454361, -0.6648736596107483, -2.1671457290649414, -0.6720701456069946, -0.4513457119464874, -0.4136193096637726, -0.03021351620554924, -0.003467263886705041, -0.6333397030830383, -0.8308639526367188, -1.6437656879425049, -0.6779846549034119, -0.004896079655736685, -0.1866544932126999, -0.2629556953907013, -0.6133471727371216, -0.0008977196994237602, -0.5887994766235352, -1.4862120151519775, -0.0012479382567107677, -0.0013923484366387129, -0.1779332309961319, -0.004077455028891563, -1.1205610462639015e-05, -0.0006661579827778041, -0.3397332429885864, -2.0911056995391846, -0.003417961997911334, -0.01709640584886074, -0.0161922387778759, -0.046280283480882645, -0.45388761162757874, -0.1609816551208496, -0.11661887913942337, -0.15301939845085144, -1.809847354888916, -1.6212332411669195e-05, -0.4449693262577057, -0.0008337597246281803, -1.3361327648162842, -6.556489552167477e-06, -0.014431740157306194, -0.0001705739414319396, -0.03174012154340744, -0.006195743102580309, -0.09659001231193542, -0.9047802686691284, -0.038034528493881226, -0.04885653406381607, -0.016928812488913536, -0.009677283465862274, -0.3690055310726166, -0.267250657081604, -0.007669644895941019, -5.245195097813848e-06, -0.23604661226272583, -0.04217018932104111, -0.24477730691432953, -0.11982657760381699, -0.0066364835947752, -1.1237542629241943, -0.7142705917358398, -0.0045853471383452415, -0.0016638495726510882, -0.000256982195423916, -2.145764938177308e-06, -2.52720492426306e-05, -1.4305012882687151e-05, -0.43563008308410645, -0.0027291453443467617, -0.13046090304851532, -2.0580856800079346, -2.6694555282592773, -3.0415725708007812, -0.0002760506176855415, -0.3383531868457794, -0.1430659145116806, -0.5240588784217834, -0.11835052073001862, -2.127883195877075, -0.002160359639674425, -0.7200708389282227, -0.00321122445166111, -0.4355758726596832, -0.00020394629973452538, -0.0007431129342876375, -0.06212581321597099, -0.3943908214569092, -0.4175296127796173, -3.707340147229843e-05, -0.0037549480330199003, -0.006712506990879774, -1.1311118602752686, -0.0010679024271667004, -0.007044478785246611, -0.45799005031585693, -0.19426411390304565, -0.6716523766517639, -0.7758118510246277, -0.4870612323284149, -0.41377726197242737, -0.04901080206036568, -0.03333312273025513, -1.7785848379135132, -0.3125203549861908, -1.164181113243103, -0.18938004970550537, -0.012591035105288029, -1.197615623474121, -0.8996286392211914, -0.08205751329660416, -0.1362449824810028, -0.00044204952428117394, -0.021394304931163788, -0.00010656742961145937, -0.003920489456504583, -0.00016080040950328112, -0.16502682864665985, -0.02161271683871746, -0.04744771495461464, -1.1633477210998535, -0.13407765328884125, -0.03413737192749977, -0.0019757291302084923], "finish_reason": "length"}], "metrics": {"energy": 904.9843966045371, "energy_per_token": 3.535095299236473, "time": 21.860846, "time_per_token": 0.0853939296875}}
{"outputs": [{"text": "# Create an MxN matrix from a list L\n    matrix = np.array(L).reshape((M, N))\n\n    # Normalize the matrix based on the sound pressure level (SPL) of a specified audio file\n    data, sample_rate = sf.read(audio_file)\n    SPL = 20 * np.log10(np.sqrt(np.mean(data ** 2)))\n    normalized_matrix = matrix / SPL\n\n    # Generate a spectrogram from the matrix\n    fig = plt.figure(figsize=(8, 4))\n    plt.subplot(111)\n    plt.pcolormesh(np.abs(normalized_matrix), cmap='viridis')\n    plt.yscale('log')\n    plt.ylabel('Frequency [Hz]')\n    plt.xlabel('Time [s]')\n    plt.title('Normalized Spectrogram with SPL')\n    plt.show()\n\n    return matrix, fig", "tokens": ["#", " Create", " an", " M", "x", "N", " matrix", " from", " a", " list", " L", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "((", "M", ",", " N", "))", "\n", "\n", "    ", "#", " Normal", "ize", " the", " matrix", " based", " on", " the", " sound", " pressure", " level", " (", "SP", "L", ")", " of", " a", " specified", " audio", " file", "\n", "    ", "data", ",", " sample", "_", "rate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", " **", " ", "2", ")))", "\n", "    ", "normalized", "_", "matrix", " =", " matrix", " /", " S", "PL", "\n", "\n", "    ", "#", " Generate", " a", " spectro", "gram", " from", " the", " matrix", "\n", "    ", "fig", " =", " plt", ".", "figure", "(", "fig", "size", "=(", "8", ",", " ", "4", "))", "\n", "    ", "plt", ".", "sub", "plot", "(", "1", "1", "1", ")", "\n", "    ", "plt", ".", "p", "col", "orm", "esh", "(", "np", ".", "abs", "(", "normalized", "_", "matrix", ")", ",", " c", "map", "='", "vir", "idis", "')", "\n", "    ", "plt", ".", "ys", "cale", "('", "log", "')", "\n", "    ", "plt", ".", "ylabel", "('", "F", "requency", " [", "Hz", "]", "')", "\n", "    ", "plt", ".", "xlabel", "('", "Time", " [", "s", "]", "')", "\n", "    ", "plt", ".", "title", "('", "Normal", "ized", " Spect", "ro", "gram", " with", " S", "PL", "')", "\n", "    ", "plt", ".", "show", "()", "\n", "\n", "    ", "return", " matrix", ",", " fig", "\n", "\n", "if"], "logprobs": [-1.0683776140213013, -1.5371308326721191, -0.9077519774436951, -0.02245744876563549, -0.08603718131780624, -0.0005428509321063757, -0.016837619245052338, -0.12402480840682983, -1.2229652404785156, -0.018830113112926483, -0.11090250313282013, -0.10661965608596802, -0.003320420393720269, -0.48925840854644775, -0.007592629641294479, -0.014771143905818462, -4.410734163684538e-06, -0.5675172209739685, -0.03545195609331131, -0.004484002944082022, -0.00914019625633955, -0.025699255988001823, -0.0005364171229302883, -1.311301275563892e-06, -1.272413969039917, -0.0034190313890576363, -0.00016449528629891574, -0.05681130290031433, -0.0003412379592191428, -0.014228560030460358, -0.14587047696113586, -0.0007024919614195824, -0.06926294416189194, -0.4207422733306885, -0.012789016589522362, -0.1752287894487381, -0.06783504784107208, -0.11265929788351059, -0.00042417587246745825, -0.11505137383937836, -0.09638651460409164, -0.002124911407008767, -0.0012175773736089468, -0.13101151585578918, -0.002286797622218728, -1.1324817933200393e-05, -0.0003046525234822184, -0.0570223405957222, -0.482790470123291, -0.023811914026737213, -0.001768454909324646, -0.0013978243805468082, -0.019039027392864227, -0.010469160042703152, -1.5878345966339111, -0.020430130884051323, -1.413096308708191, -0.005209324415773153, -0.00046754872892051935, -0.0013496108585968614, -0.09951787441968918, -1.549708758830093e-05, -1.680836794548668e-05, -2.109982233378105e-05, -0.001392586505971849, -0.02269928529858589, -3.0636318115284666e-05, -7.319182623177767e-05, -0.026454634964466095, -0.08680550754070282, -0.0443573035299778, -0.9867711067199707, -0.00019369633810129017, -0.011599242687225342, -0.022223014384508133, -0.002807487268000841, -7.64102369430475e-05, -0.034648191183805466, -0.0005840741214342415, -8.344646857949556e-07, -0.0003163314249832183, -0.0004219118563923985, -3.576278118089249e-07, -0.0006784282741136849, -0.001958953682333231, -2.861018856492592e-06, -0.01101402286440134, -0.002066978020593524, -0.0006529344827868044, -2.861018856492592e-06, -0.00034374051028862596, -0.004703173413872719, -0.08060114830732346, -0.9113509654998779, -0.0004711233195848763, -5.4596363042946905e-05, -0.025608394294977188, -0.04428420215845108, -0.08595000207424164, -1.5317567586898804, -0.05028025805950165, -0.016078807413578033, -0.000961913785431534, -0.09086934477090836, -0.10220635682344437, -1.0406606197357178, -4.768370445162873e-07, -0.05632317438721657, -0.02636152133345604, -0.0005882440018467605, -0.009249691851437092, -0.18029965460300446, -0.048595279455184937, -0.0033709153067320585, -2.622600959512056e-06, -0.09483271092176437, -0.001777260797098279, -0.2990449368953705, -0.08598729968070984, -0.001663611619733274, -0.6728139519691467, -0.5809954404830933, -0.006485012359917164, -4.732496745418757e-05, -0.017652545124292374, -1.6332851648330688, -0.026446625590324402, -4.887569048150908e-06, -0.005337749142199755, -1.8958027362823486, -0.0018509175861254334, -0.0339607410132885, -0.926701009273529, -0.026490624994039536, -0.006134727504104376, -0.023035895079374313, -1.9446287155151367, -0.0007962394156493247, -1.9643281698226929, -0.0568552240729332, -0.01974896341562271, -0.05467826500535011, -1.07321035861969, -0.0002286172821186483, -0.1677679419517517, -0.09552161395549774, -0.024659443646669388, -0.40554729104042053, -0.0002324311062693596, -2.0657882690429688, -0.0006692553870379925, -2.622600959512056e-06, -0.00010108436981681734, -0.0003131137927994132, -0.557316243648529, -2.0503786799963564e-05, -0.2987010180950165, -0.0005695389700122178, -0.004477475769817829, -8.4638240878121e-06, -2.861018856492592e-06, -0.1388052999973297, -0.05870106443762779, -0.2952733635902405, -1.2636104656849056e-05, -0.04679574817419052, -2.2074291706085205, -1.2993727978027891e-05, -0.6236197352409363, -0.016903845593333244, -0.01414064783602953, -0.0056693474762141705, -1.7881377516459906e-06, -1.3197150230407715, -2.9802276912960224e-06, -0.0038345158100128174, -0.11643224954605103, -0.002133714035153389, -0.042289841920137405, -0.005921914242208004, -0.012977899052202702, -1.5258672647178173e-05, -1.9127718210220337, -0.00592866912484169, -0.011823338456451893, -0.001215077005326748, -0.10325474292039871, -0.0025475923903286457, -4.6132929128361866e-05, -0.012868340127170086, -0.0005000770906917751, -0.0002618685248307884, -0.0003810394846368581, -8.702239938429557e-06, -0.299999862909317, -0.0003196682082489133, -0.003960267174988985, -0.01146949827671051, -0.06606949865818024, -0.0002790300059132278, -0.0015567338559776545, -0.000377583724912256, -0.08909016847610474, -0.04080776497721672, -3.2782016205601394e-05, -0.5301147699356079, -0.30557501316070557, -2.1333160400390625, -0.004722513258457184, -1.1753569841384888, -0.030234798789024353, -0.00012706902634818107, -3.014216899871826, -0.087051622569561, -0.00034588552080094814, -2.2392373085021973, -0.0007682471186853945, -0.13012844324111938, -0.0925811380147934, -2.1576648578047752e-05, -1.298227310180664, -0.002008327515795827, -0.0009702504030428827, -0.24903112649917603, -0.0029464424587786198, -0.12616178393363953, -0.6831793189048767, -0.017489496618509293, -0.0043364777229726315, -0.148495614528656, -0.007024236489087343, -1.3633028268814087], "finish_reason": "stop"}], "metrics": {"energy": 777.6738801126478, "energy_per_token": 3.3520425866924475, "time": 19.754637, "time_per_token": 0.0851492974137931}}
{"outputs": [{"text": "# Raise error if the audio file is not found\n    if not os.path.isfile(audio_file):\n        raise FileNotFoundError(f\"Audio file '{audio_file}' not found\")\n\n    # Create an MxN matrix from the list L\n    matrix = np.array(L).reshape((M, N))\n\n    # Read the audio file to calculate the sound pressure level (SPL)\n    audio_data, audio_sr = sf.read(audio_file)\n    SPL = 20 * np.log10(np.sqrt(np.mean(np.power(audio_data, 2))))\n\n    # Normalize the matrix based on the SPL and reshape it to match the audio data shape\n    norm_matrix = ((matrix - np.min(matrix)) / np.abs(np.max(matrix) - np.min(matrix))) ** 2\n    norm_matrix = norm_matrix.reshape(audio_data.shape)\n\n    # Create a spectrogram from the normalized matrix\n    fig, ax = plt.subplots()\n    plt.", "tokens": ["#", " Ra", "ise", " error", " if", " the", " audio", " file", " is", " not", " found", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Audio", " file", " '", "{", "audio", "_", "file", "}'", " not", " found", "\"", ")", "\n", "\n", "    ", "#", " Create", " an", " M", "x", "N", " matrix", " from", " the", " list", " L", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "((", "M", ",", " N", "))", "\n", "\n", "    ", "#", " Read", " the", " audio", " file", " to", " calculate", " the", " sound", " pressure", " level", " (", "SP", "L", ")", "\n", "    ", "audio", "_", "data", ",", " audio", "_", "sr", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "np", ".", "power", "(", "audio", "_", "data", ",", " ", "2", "))", "))", "\n", "\n", "    ", "#", " Normal", "ize", " the", " matrix", " based", " on", " the", " S", "PL", " and", " resh", "ape", " it", " to", " match", " the", " audio", " data", " shape", "\n", "    ", "norm", "_", "matrix", " =", " ((", "matrix", " -", " np", ".", "min", "(", "matrix", "))", " /", " np", ".", "abs", "(", "np", ".", "max", "(", "matrix", ")", " -", " np", ".", "min", "(", "matrix", ")))", " **", " ", "2", "\n", "    ", "norm", "_", "matrix", " =", " norm", "_", "matrix", ".", "resh", "ape", "(", "audio", "_", "data", ".", "shape", ")", "\n", "\n", "    ", "#", " Create", " a", " spectro", "gram", " from", " the", " normalized", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "plt", "."], "logprobs": [-1.0683776140213013, -4.02932596206665, -0.0424293614923954, -1.4878638982772827, -0.044691603630781174, -1.4221153259277344, -0.5114516019821167, -0.0474165678024292, -2.371713161468506, -0.20097991824150085, -0.19744743406772614, -0.11598045378923416, -0.0024016841780394316, -0.03978607431054115, -0.026353973895311356, -0.0062013110145926476, -2.3483953555114567e-05, -0.0005306981038302183, -0.00013791563105769455, -1.2958818674087524, -0.0007166677969507873, -0.0012253165477886796, -0.0034033493138849735, -3.659658250398934e-05, -1.5139465176616795e-05, -0.002724508987739682, -0.009456838481128216, -0.010456773452460766, -0.015453831292688847, -0.004564699251204729, -0.0001938155182870105, -2.1457441107486375e-05, -0.033085886389017105, -0.16483962535858154, -0.06807305663824081, -0.7814401388168335, -0.003979621455073357, -0.5609502196311951, -0.0005922947311773896, -0.0015324526466429234, -4.279521817807108e-05, -5.125986263010418e-06, -0.004142038989812136, -0.36160948872566223, -0.00028165188268758357, -2.0722553730010986, -0.00034314466756768525, -0.002796194050461054, -0.06628897041082382, -0.001405204995535314, -0.09437158703804016, -1.0204728841781616, -1.3704501390457153, -0.04284916818141937, -0.1145467534661293, -0.000589792791288346, -0.01455875113606453, -0.1280437707901001, -0.6211066842079163, -0.2272188663482666, -0.35091277956962585, -0.11619125306606293, -0.0008844992844387889, -0.4631013572216034, -0.0035816587042063475, -0.017207376658916473, -4.6491513785440475e-06, -0.29091063141822815, -0.02907383441925049, -0.00621197372674942, -0.020704451948404312, -0.017542092129588127, -0.0005718026659451425, 0.0, -1.1558014154434204, -0.002680996200069785, -0.0001528146385680884, -0.04345497861504555, -0.0003302744007669389, -0.015381756238639355, -0.0437956266105175, -0.0008532935753464699, -0.014765388332307339, -2.3589553833007812, -0.4540911912918091, -0.0999584048986435, -0.4978419542312622, -1.8539855480194092, -0.577151894569397, -0.2796652913093567, -0.18003931641578674, -0.002872271928936243, -0.002183317206799984, -0.142701655626297, -0.020121149718761444, -1.4781842764932662e-05, -0.0015350712928920984, -0.05074800178408623, -0.0007755132392048836, -2.5798261165618896, -0.27929508686065674, -0.017681708559393883, -0.034092552959918976, -2.009157180786133, -4.5536911784438416e-05, -1.3025579452514648, -0.0010156240314245224, -0.1229323148727417, -2.8490614567999728e-05, -1.537788011773955e-05, -6.437280717364047e-06, -0.0006877202540636063, -0.002957139629870653, -1.0013530300057027e-05, -5.602820692729438e-06, -0.03768547996878624, -0.029655063524842262, -0.5913535952568054, -0.932404637336731, -8.999896090244874e-05, -0.012358986772596836, -0.029131844639778137, -0.001359730027616024, -8.713819261174649e-05, -0.025516364723443985, -0.0008694920688867569, -1.0728830375228426e-06, -0.000254241080256179, -0.0005138983833603561, -4.768370445162873e-07, -0.0008175606490112841, -0.0037675369530916214, -4.887569048150908e-06, -0.02002066746354103, -0.0024647116661071777, -0.00221519498154521, -2.50339189733495e-06, -0.0005757343024015427, -0.004658322781324387, -1.6029481887817383, -3.576272320060525e-06, -1.5680055618286133, -0.0005023409612476826, -0.004473440814763308, -6.603976362384856e-05, -2.0861407392658293e-05, -0.026701195165514946, -0.010522008873522282, -3.4450891689630225e-05, -0.004751699976623058, -0.0010871936101466417, -0.04094748944044113, -0.059167131781578064, -0.0005184260080568492, -0.0052160839550197124, -0.1748065948486328, -0.003947562538087368, -0.04448592662811279, -0.09210984408855438, -0.15552635490894318, -0.0002450642641633749, -0.07902810722589493, -0.33526772260665894, -9.298280929215252e-06, -2.3081276416778564, -2.160815477371216, -0.0016236230731010437, -0.2890726625919342, -1.4418760538101196, -3.4692468643188477, -0.2352467179298401, -0.9782056212425232, -0.4657711088657379, -0.8405438661575317, -0.011016852222383022, -0.00026973424246534705, -1.6325812339782715, -0.23278680443763733, -0.2600812315940857, -0.0028317375108599663, -2.872035264968872, -0.11966434866189957, -0.3888498544692993, -0.21011018753051758, -4.291525328881107e-06, -0.307909220457077, -3.71926071238704e-05, -0.006918877363204956, -0.0405065082013607, -0.07380057871341705, -2.1932969093322754, -3.2186455882765586e-06, -2.7140860557556152, -0.02528497204184532, -0.11144361644983292, -8.583032467868179e-06, -0.06107207387685776, -0.00502691650763154, -0.061637695878744125, -0.19430965185165405, -0.006012922618538141, -0.008183283731341362, -2.5152843591058627e-05, -0.0008964095613919199, -0.0001433984871255234, -0.00039033422945067286, -0.11841978132724762, -2.470430850982666, -0.20968623459339142, -0.0819782242178917, -0.20766709744930267, -0.09031621366739273, -0.07641256600618362, -0.0005571481888182461, -0.03365637734532356, -0.1580016165971756, -1.1667883396148682, -7.986990567587782e-06, -2.7418097943154862e-06, -0.27154380083084106, -0.1757946014404297, 0.0, -0.2689051628112793, -0.17600645124912262, -3.4570634852570947e-06, -0.003844965947791934, -0.0014997198013588786, -0.002388721564784646, -0.024532778188586235, -0.03583686426281929, -0.015820344910025597, -0.00037520044133998454, -0.008328705094754696, -1.7965070009231567, -0.31363049149513245, -0.17159855365753174, -7.986990567587782e-06, -0.5798251628875732, -0.0021743958350270987, -0.1600477695465088, -0.06583826243877411, -0.24245302379131317, -0.0003978414461016655, -1.3836405277252197, -0.6987332105636597, -0.013408957049250603, -0.004285675473511219, -0.0008961713756434619, -1.0728830375228426e-06, -3.5523738915799186e-05, -5.721882189391181e-05, -0.6004813313484192, -0.002156553091481328, -0.0414896123111248, -3.638805866241455, -0.004755377769470215], "finish_reason": "length"}], "metrics": {"energy": 876.9899288187028, "energy_per_token": 3.4257419094480577, "time": 21.854916, "time_per_token": 0.085370765625}}
{"outputs": [{"text": "if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"Audio file '{audio_file}' not found.\")\n\n    audio_data, sample_rate = sf.read(audio_file)\n    # Calculate SPL from audio file\n    spl = 20 * np.log10(np.sqrt(np.mean(np.square(audio_data))))\n    # Form matrix from list L and normalize based on SPL\n    matrix = np.reshape(L, (M, N)) / (spl - 3)\n\n    # Generate spectrogram from matrix\n    fig, ax = plt.subplots()\n    img = ax.imshow(matrix, aspect='auto', cmap='viridis', origin='lower')\n    ax.set_ylabel('Frequency')\n    ax.set_xlabel('Time')\n    ax.set_title('Spectrogram')\n\n    # Set y-axis as logarithmic\n    ax.set_yscale('log')\n    ax.set_yticks([sample_rate/2**i for i in range(1, ", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Audio", " file", " '", "{", "audio", "_", "file", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "audio", "_", "data", ",", " sample", "_", "rate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "#", " Calculate", " S", "PL", " from", " audio", " file", "\n", "    ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "np", ".", "square", "(", "audio", "_", "data", "))", "))", "\n", "    ", "#", " Form", " matrix", " from", " list", " L", " and", " normalize", " based", " on", " S", "PL", "\n", "    ", "matrix", " =", " np", ".", "resh", "ape", "(", "L", ",", " (", "M", ",", " N", "))", " /", " (", "spl", " -", " ", "3", ")", "\n", "\n", "    ", "#", " Generate", " spectro", "gram", " from", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "img", " =", " ax", ".", "im", "show", "(", "matrix", ",", " aspect", "='", "auto", "'", ",", " c", "map", "='", "vir", "idis", "'", ",", " origin", "='", "lower", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "F", "requency", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Time", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Spect", "ro", "gram", "')", "\n", "\n", "    ", "#", " Set", " y", "-", "axis", " as", " logarithmic", "\n", "    ", "ax", ".", "set", "_", "ys", "cale", "('", "log", "')", "\n", "    ", "ax", ".", "set", "_", "yt", "icks", "([", "sample", "_", "rate", "/", "2", "**", "i", " for", " i", " in", " range", "(", "1", ",", " "], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -0.30077531933784485, -0.00305031961761415, -0.0044648959301412106, -1.823885577323381e-05, -8.22540732769994e-06, -0.004296951927244663, -0.01968315802514553, -0.011692916974425316, -0.018728680908679962, -0.002920768689364195, -0.00016735584358684719, -1.3470558769768104e-05, -0.03450712189078331, -0.21626637876033783, -0.06410496681928635, -0.6559430956840515, -0.0028822568710893393, -0.4674893319606781, -0.0003051292151212692, -0.001179595128633082, -5.2689116273541003e-05, -7.867782187531702e-06, -0.004300631582736969, -0.7184233665466309, -0.00021765247220173478, -0.2018333077430725, -0.014264875091612339, -0.00047219570842571557, -0.004227629862725735, -0.18999922275543213, -0.0009459549910388887, -2.9051365852355957, -0.5521553754806519, -0.05422342196106911, -0.04245826601982117, -1.0386009216308594, -0.0006606780225411057, -0.0014579391572624445, -0.0011723319767042994, -0.09154782444238663, -2.098061486321967e-05, -1.6689160474925302e-05, -1.549708758830093e-05, -0.0006379238329827785, -0.004280215594917536, -1.0371154530730564e-05, -8.344646857949556e-07, -0.026944676414132118, -0.04783417284488678, -0.2152639478445053, -3.0363664627075195, -0.8282361626625061, -1.9758321046829224, -0.0007282227743417025, -1.5466021299362183, -0.38046422600746155, -0.6953526139259338, -0.18596118688583374, -0.0026525810826569796, -0.8880698680877686, -0.032106027007102966, -0.027874769642949104, -0.00304473377764225, -6.961580220377073e-05, -0.024212148040533066, -0.0012196014868095517, -1.9073468138230965e-06, -0.0002157455455744639, -0.0003743662964552641, -1.0728830375228426e-06, -0.0010001424234360456, -0.003356776898726821, -1.311301275563892e-06, -0.0091929966583848, -0.003568829968571663, -0.0016127924900501966, -2.145764938177308e-06, -0.0004936429904773831, -0.004447331186383963, -1.7395050525665283, -1.8358061424805783e-05, -0.2816922664642334, -0.00031764229061082006, -0.005999058485031128, -1.6093124941107817e-05, -2.455681169521995e-05, -0.02856317162513733, -0.0006796196103096008, -0.023557305335998535, -1.1192176342010498, -0.38578614592552185, -2.8823657035827637, -0.6827362179756165, -0.6669028997421265, -0.597101628780365, -0.3578178584575653, -1.9378029108047485, -0.5204893350601196, -0.7888373732566833, -0.00039939055568538606, -0.07737281918525696, -2.7179348762729205e-05, -0.05333380401134491, -0.0017030035378411412, -0.32130903005599976, -0.004765581339597702, -0.03302037715911865, -1.9073468138230965e-06, -1.4820460081100464, -3.576278118089249e-07, -0.021052706986665726, -0.08356110751628876, -0.04103673994541168, -0.006113045383244753, -0.0037682494148612022, -0.00025722055579535663, -0.011968114413321018, -0.002031526295468211, -1.4118683338165283, -0.7242792248725891, -1.8817253112792969, -3.7749972343444824, -0.16502955555915833, -2.5500431060791016, -0.7312514781951904, -0.18153539299964905, -0.7569942474365234, -0.001176618505269289, -0.10632772743701935, -0.40342846512794495, -0.11499059945344925, -4.2199197196168825e-05, -0.9750321507453918, -0.16170558333396912, -0.21083128452301025, -0.0014215136179700494, -0.47943076491355896, -0.6555856466293335, -0.00344089069403708, -0.0012451999355107546, -0.00015960850578267127, -2.50339189733495e-06, -2.1576648578047752e-05, -0.00030596344731748104, -0.2231094092130661, -0.00158410903532058, -0.04816412925720215, -3.0765693187713623, -0.003221086924895644, -0.10813291370868683, -2.1815061700181104e-05, -0.22130002081394196, -1.1920922133867862e-06, -0.007402846124023199, -0.8065549731254578, -0.10913395136594772, -2.896662712097168, -0.12614938616752625, -8.511180931236595e-05, -0.012148554436862469, -8.916457591112703e-05, -0.2557680308818817, -9.298280929215252e-06, -0.05738980695605278, -2.201192855834961, -2.634490556374658e-05, -0.2404777705669403, -8.582700684200972e-05, -0.06163399666547775, -0.004614300560206175, -0.12855589389801025, -0.5908010005950928, -0.007843410596251488, -0.20159654319286346, -0.17599615454673767, -0.001143040368333459, -0.07089816778898239, -0.0027372294571250677, -1.7959285974502563, -0.006828307174146175, -0.19976115226745605, -0.0005194983095861971, -0.9211669564247131, -0.002587781986221671, -0.0026524621061980724, -0.0016531385481357574, -3.4450891689630225e-05, -0.0003337303060106933, -5.602820692729438e-06, -0.051560789346694946, -0.0009087961516343057, -0.0068191904574632645, -0.04355712607502937, -0.00040642108069732785, -0.12737230956554413, -0.2211637645959854, -0.00033778208307921886, -0.009571140632033348, -0.00042524831951595843, -0.19278597831726074, -0.27290472388267517, -0.30663034319877625, -0.00535174086689949, -4.768360213347478e-06, -0.2063812017440796, -0.0007918321643956006, -1.7264330387115479, -0.00044228785554878414, -0.12067335844039917, -1.5477083921432495, -1.8619967699050903, -0.06153815984725952, -0.0036820252425968647, -2.8324971199035645, -0.20817884802818298, -0.9615688323974609, -0.00037949037505313754, -0.1317863017320633, -0.0027829986065626144, -0.13334199786186218, -9.703165414975956e-05, -0.06961815804243088, -9.894321920000948e-06, -0.00737965339794755, -0.06586907058954239, -0.0008095800876617432, -0.0014987675240263343, -0.7378904819488525, -0.8040125370025635, -0.0038316657301038504, -0.9575774669647217, -0.0002649671514518559, -0.15668985247612, -0.0037231191527098417, -0.2352883666753769, -1.234567642211914, -0.00015984688070602715, -9.798523387871683e-05, -1.1373391151428223, -0.6479619145393372, -2.402487277984619, -0.05480116978287697, -0.002385153668001294, -2.074220174108632e-05, -1.3589766240329482e-05, -0.012159035541117191, -0.000844479538500309, -0.2240411341190338, -0.011064602062106133, -0.5746780037879944], "finish_reason": "length"}], "metrics": {"energy": 920.5272037334433, "energy_per_token": 3.595809389583763, "time": 22.074879, "time_per_token": 0.08622999609375}}
{"outputs": [{"text": "# Create an MxN matrix from a list L\n    mat = np.reshape(L, (M, N))\n\n    # Calculate sound pressure level (SPL) of audio file\n    data, samplerate = sf.read(audio_file)\n    spl = 20 * np.log10(np.sqrt(np.mean(np.abs(data) ** 2)))\n\n    # Normalize matrix based on SPL\n    normalized_mat = mat / spl\n\n    # Generate spectrogram from normalized matrix\n    plt.figure()\n    plt.imshow(np.abs(normalized_mat), cmap='hot', aspect='auto')\n    plt.gca().invert_yaxis()\n    plt.ylabel('Frequency [Hz]')\n    plt.xlabel('Time [sec]')\n    plt.title('Spectrogram')\n    plt.yscale('log')\n    plt.colorbar()\n\n    # Return matrix and figure\n    return normalized_mat, plt.gcf()\n\nL = [i for i in range(100)]\nM = 10", "tokens": ["#", " Create", " an", " M", "x", "N", " matrix", " from", " a", " list", " L", "\n", "    ", "mat", " =", " np", ".", "resh", "ape", "(", "L", ",", " (", "M", ",", " N", "))", "\n", "\n", "    ", "#", " Calculate", " sound", " pressure", " level", " (", "SP", "L", ")", " of", " audio", " file", "\n", "    ", "data", ",", " sampler", "ate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "np", ".", "abs", "(", "data", ")", " **", " ", "2", ")))", "\n", "\n", "    ", "#", " Normal", "ize", " matrix", " based", " on", " S", "PL", "\n", "    ", "normalized", "_", "mat", " =", " mat", " /", " spl", "\n", "\n", "    ", "#", " Generate", " spectro", "gram", " from", " normalized", " matrix", "\n", "    ", "plt", ".", "figure", "()", "\n", "    ", "plt", ".", "im", "show", "(", "np", ".", "abs", "(", "normalized", "_", "mat", ")", ",", " c", "map", "='", "hot", "'", ",", " aspect", "='", "auto", "')", "\n", "    ", "plt", ".", "g", "ca", "()", ".", "in", "vert", "_", "y", "axis", "()", "\n", "    ", "plt", ".", "ylabel", "('", "F", "requency", " [", "Hz", "]", "')", "\n", "    ", "plt", ".", "xlabel", "('", "Time", " [", "sec", "]", "')", "\n", "    ", "plt", ".", "title", "('", "Spect", "ro", "gram", "')", "\n", "    ", "plt", ".", "ys", "cale", "('", "log", "')", "\n", "    ", "plt", ".", "color", "bar", "()", "\n", "\n", "    ", "#", " Return", " matrix", " and", " figure", "\n", "    ", "return", " normalized", "_", "mat", ",", " plt", ".", "g", "cf", "()", "\n", "\n", "L", " =", " [", "i", " for", " i", " in", " range", "(", "1", "0", "0", ")]", "\n", "M", " =", " ", "1", "0"], "logprobs": [-1.0683776140213013, -1.5371308326721191, -0.9077519774436951, -0.02245744876563549, -0.08603718131780624, -0.0005428509321063757, -0.016837619245052338, -0.12402480840682983, -1.2229652404785156, -0.018830113112926483, -0.11090250313282013, -0.10661965608596802, -0.003320420393720269, -3.409165859222412, -0.1235090047121048, -0.019086278975009918, -4.887569048150908e-06, -1.3613173961639404, -2.622600959512056e-06, -0.019810322672128677, -0.16932877898216248, -0.01120665855705738, -0.04203909635543823, -0.0033001031260937452, -0.0005673944251611829, -0.040019404143095016, -0.0031522843055427074, -0.0317654125392437, -0.2306174337863922, -0.0007524043321609497, -0.0639256089925766, -2.67897629737854, -1.2229207754135132, -0.010429875925183296, -0.006057475693523884, -0.39205241203308105, -0.03723478689789772, -2.5152843591058627e-05, -0.003983777482062578, -1.0213122367858887, -1.5018787384033203, -0.20902389287948608, -0.07555905729532242, -0.004950528033077717, -1.6128203868865967, -0.02743227407336235, -1.527901291847229, -2.253030106658116e-05, -0.0014709139941260219, -0.07212340831756592, -2.2053474822314456e-05, -2.2649508537142538e-05, -2.932505594799295e-05, -0.0013092526933178306, -0.028265153989195824, -3.5523738915799186e-05, -7.402622577501461e-05, -0.027821091935038567, -0.047873035073280334, -0.06401048600673676, -1.2481913566589355, -0.0193774551153183, -0.03379237651824951, -0.0015375708462670445, -8.749579137656838e-05, -0.024685261771082878, -0.0008436457719653845, -1.4305104514278355e-06, -0.00025876989820972085, -0.0004483648226596415, -2.3841855067985307e-07, -0.0011136289685964584, -0.001817719079554081, -2.861018856492592e-06, -0.016024375334382057, -0.0028638325165957212, -0.0015156697481870651, -3.2186455882765586e-06, -0.0006133820279501379, -0.00257862638682127, -2.289591073989868, -1.3708974620385561e-05, -2.24706768989563, -0.0028872492257505655, -0.012797137722373009, -1.3142859935760498, -0.01669999584555626, -0.0010087168775498867, -0.000730128725990653, -0.04013850912451744, -0.05586446076631546, -0.11161305010318756, -0.0003695997002068907, -0.011103861033916473, -0.14017896354198456, -0.011818508617579937, -1.073962688446045, -0.22384987771511078, -0.0004413345886860043, -0.2115641087293625, -2.52720492426306e-05, -0.30846551060676575, -0.0005304598016664386, -1.0879027843475342, -0.07859048992395401, -0.0978158712387085, -0.0009899006690829992, -0.3396115303039551, -0.19390752911567688, -0.49486443400382996, -0.08390579372644424, -0.02738669142127037, -0.000750617531593889, -0.02681690827012062, -0.3195541799068451, -0.39268869161605835, -0.000219321038457565, -0.7334592938423157, -0.6181462407112122, -0.009408775717020035, -0.08471015840768814, -0.002068524481728673, -3.464569091796875, -0.0007083290838636458, -0.15141791105270386, -0.21075963973999023, -0.004794529639184475, -0.012767243199050426, -0.8774990439414978, -0.0003095386200584471, -0.8857802748680115, -5.328513361746445e-05, -0.001622551935724914, -1.277308702468872, -1.764281842042692e-05, -0.02936142310500145, -0.00015364897262770683, -0.0464145801961422, -1.0490362910786644e-05, -1.7881377516459906e-06, -0.06389083713293076, -0.008836097083985806, -0.5957310199737549, -4.005352093372494e-05, -0.05160573497414589, -1.6806551218032837, -0.17900286614894867, -0.00026472879108041525, -0.6811988353729248, -0.04208698868751526, -0.0003951007383875549, -1.7382893562316895, -0.030069854110479355, -0.023387646302580833, -0.011999799869954586, -3.71926071238704e-05, -1.560288906097412, -0.0015207880642265081, -3.373566141817719e-05, -7.629103492945433e-05, -0.3053715229034424, -7.068861305015162e-05, -1.1920928244535389e-07, -0.003190667135640979, -1.4066597032069694e-05, -0.00011264643399044871, -0.008288390934467316, -0.07909860461950302, -0.01696561463177204, -7.784063927829266e-05, -0.7219812870025635, -0.02067432552576065, -0.36166128516197205, -0.004341225605458021, -0.10519060492515564, -0.03420776128768921, -7.60526381782256e-05, -0.06052318960428238, -0.001711095916107297, -0.0020468730945140123, -0.0023469780571758747, -1.311301275563892e-06, -0.03758123889565468, -0.0017421558732166886, -0.023641251027584076, -0.042383428663015366, -0.9677515029907227, -0.0009171332349069417, -0.0018704315880313516, -0.000969297660049051, -0.2675668001174927, -0.05518140643835068, -0.00018344627460464835, -0.6801481246948242, -0.39556536078453064, -0.7148570418357849, -0.01827673427760601, -0.0003496989083942026, -0.9603029489517212, -0.001767145935446024, -0.4251548945903778, -0.07882475107908249, -6.842378934379667e-05, -2.6827476024627686, -1.7523612768854946e-05, -0.012527230195701122, -0.09136059135198593, -0.004180858377367258, -0.02083265408873558, -0.32311877608299255, -0.07563067972660065, -4.494089080253616e-05, -0.8976145386695862, -2.3841855067985307e-07, -0.05881931632757187, -0.005677882116287947, -0.9746905565261841, -0.003111048135906458, -0.7497309446334839, -0.8430386185646057, -1.6636326313018799, -0.019411830231547356, -0.28846365213394165, -2.085038661956787, -0.0006562701892107725, -0.03116229921579361, -0.18252789974212646, -1.2278481335670222e-05, -9.536738616588991e-07, -0.01698506996035576, -0.002612394280731678, -0.007736717816442251, -0.012364638969302177, -0.0030626794323325157, -0.0004371640970930457, -0.11809176951646805, -0.006503961980342865, -3.5365912914276123, -0.07451783865690231, -0.31043288111686707, -0.15485624969005585, -0.02722034975886345, -0.00012063252506777644, -2.074220174108632e-05, -0.002937884768471122, -0.0023782560601830482, -0.10595948249101639, -0.027185315266251564, -0.01642480678856373, -0.05915241315960884, -0.13744553923606873, -0.21548442542552948, -0.04734618961811066, -0.025843430310487747, -0.03431466221809387, -0.0023098711390048265], "finish_reason": "length"}], "metrics": {"energy": 882.8086972637171, "energy_per_token": 3.448471473686395, "time": 21.864767, "time_per_token": 0.08540924609375}}
{"outputs": [{"text": "# Convert L to an MxN matrix\n    matrix = np.array(L).reshape(M, N)\n\n    # Get audio data from the specified audio file\n    audio_file = 'audio.wav'\n    if not os.path.isfile(audio_file):\n        raise FileNotFoundError(f\"The audio file '{audio_file}' does not exist.\")\n    data, sample_rate = sf.read(audio_file)\n\n    # Calculate the sound pressure level (SPL) of the audio data\n    SPL = 20 * np.log10(np.sqrt(np.mean(data**2)))\n\n    # Normalize the matrix based on the sound pressure level\n    norm_matrix = matrix * (SPL / np.max(matrix))\n\n    # Generate a spectrogram\n    fig = plt.figure()\n    ax = fig.add_subplot(1, 1, 1)\n    librosa.display.specshow(norm_matrix, y_axis='log', x_axis='linear', cmap='magma')\n    plt", "tokens": ["#", " Convert", " L", " to", " an", " M", "x", "N", " matrix", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "\n", "    ", "#", " Get", " audio", " data", " from", " the", " specified", " audio", " file", "\n", "    ", "audio", "_", "file", " =", " '", "audio", ".", "w", "av", "'", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " audio", " file", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "data", ",", " sample", "_", "rate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "\n", "    ", "#", " Calculate", " the", " sound", " pressure", " level", " (", "SP", "L", ")", " of", " the", " audio", " data", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", "**", "2", ")))", "\n", "\n", "    ", "#", " Normal", "ize", " the", " matrix", " based", " on", " the", " sound", " pressure", " level", "\n", "    ", "norm", "_", "matrix", " =", " matrix", " *", " (", "SP", "L", " /", " np", ".", "max", "(", "matrix", "))", "\n", "\n", "    ", "#", " Generate", " a", " spectro", "gram", "\n", "    ", "fig", " =", " plt", ".", "figure", "()", "\n", "    ", "ax", " =", " fig", ".", "add", "_", "sub", "plot", "(", "1", ",", " ", "1", ",", " ", "1", ")", "\n", "    ", "lib", "ros", "a", ".", "display", ".", "spec", "show", "(", "norm", "_", "matrix", ",", " y", "_", "axis", "='", "log", "'", ",", " x", "_", "axis", "='", "linear", "'", ",", " c", "map", "='", "mag", "ma", "')", "\n", "    ", "plt"], "logprobs": [-1.0683776140213013, -3.036743640899658, -1.2706398963928223, -0.5834711790084839, -1.2631065845489502, -0.18275035917758942, -0.39426353573799133, -0.0003551805857568979, -0.1843337118625641, -0.17777645587921143, -0.0021347845904529095, -0.6669265627861023, -0.006668338552117348, -0.011192277073860168, -1.4305104514278355e-06, -0.31780266761779785, -0.009621084667742252, -0.003067908575758338, -0.01470172218978405, -0.02028774283826351, -0.0002728328399825841, -3.576278118089249e-07, -0.3445422947406769, -0.004575022961944342, -0.00011526874004630372, -0.04708817973732948, -0.00036769305006600916, -0.019719742238521576, -0.1480179727077484, -0.0008069596369750798, -0.06783593446016312, -2.6944785118103027, -2.001049757003784, -0.27722060680389404, -0.4491283595561981, -0.6000840663909912, -1.3397526741027832, -0.2260998636484146, -0.016395723447203636, -0.09141989052295685, -0.0012993711279705167, -1.6273540258407593, -0.19580219686031342, -1.5291342735290527, -0.7276148200035095, -2.132389545440674, -0.6048919558525085, -0.09212973713874817, -0.0225419532507658, -0.00042548662167973816, -0.0006967739318497479, -0.12156914919614792, -0.07592850178480148, -0.1692836880683899, -0.29034021496772766, -0.00325863528996706, -6.794906312279636e-06, -0.00034433635300956666, -5.960446742392378e-06, -1.1159019470214844, -0.000832568621262908, -0.009020410478115082, -0.0011241076281294227, -2.407998726994265e-05, -3.361645576660521e-05, -0.002028790069743991, -0.00511005986481905, -0.007221903186291456, -0.02375894784927368, -0.0034050126560032368, -0.00013398226292338222, -7.510157047363464e-06, -0.03226255625486374, -0.18215280771255493, -0.04775518551468849, -1.6481378078460693, -0.7867435216903687, -0.002780264476314187, -0.13778160512447357, -0.0010481346398591995, -0.0008654424455016851, -0.0005417786305770278, -5.173549288883805e-05, -0.002878928557038307, -0.07448774576187134, -0.00020704510097857565, -0.000846027978695929, -0.07803912460803986, -0.02861611358821392, -0.0006623458466492593, -0.0011086276499554515, -0.43683144450187683, -0.1396116018295288, -0.02715352736413479, -1.5438398122787476, -0.002666015876457095, -0.000440262199845165, -0.001259368029423058, -0.06680426001548767, -2.276871418871451e-05, -2.9205850296420977e-05, -1.9311717551317997e-05, -0.0023974028881639242, -0.0027254601009190083, -1.2278481335670222e-05, -1.7881377516459906e-06, -0.021561268717050552, -0.017426470294594765, -0.06903667747974396, -0.0007431129342876375, -0.008362160995602608, -0.11301827430725098, -0.431822806596756, -0.16548742353916168, -0.0015706595731899142, -0.0005714452126994729, -0.07970387488603592, -0.028386248275637627, -1.0251946150674485e-05, -0.002373974770307541, -0.857695996761322, -0.005444579292088747, -0.031538233160972595, -0.7009095549583435, -0.04815754294395447, -0.0011099375551566482, -0.8108429908752441, -5.1377883210079744e-05, -0.009040730074048042, -0.01396938320249319, -0.0008532935753464699, -5.590759246842936e-05, -0.014775020070374012, -0.0005274811992421746, -1.9073468138230965e-06, -0.00025948495022021234, -0.0002817710628733039, -1.1801649634435307e-05, -0.000801837770268321, -0.0014963869471102953, -2.9802276912960224e-06, -0.01022576354444027, -0.002068405505269766, -0.00047219570842571557, -2.9802276912960224e-06, -0.00023850933939684182, -0.002971877809613943, -0.10296881943941116, -0.4968688488006592, -0.00020346954988781363, -0.016551095992326736, -0.013422012329101562, -0.053654272109270096, -0.000390215078368783, -0.0030399798415601254, -0.08588403463363647, -0.0025969373527914286, -0.06972689926624298, -0.20889689028263092, -0.25192421674728394, -0.00020632999076042324, -0.1232810840010643, -2.1902735233306885, -0.001335563138127327, -0.00076908094342798, -1.0484369993209839, -0.0003678122302517295, -2.4861092567443848, -0.09065662324428558, -0.049527354538440704, -0.0008587724878452718, -0.11024685949087143, -2.17612886428833, -0.9253914952278137, -0.6857078671455383, -2.074220174108632e-05, -0.1622016578912735, -0.4227325916290283, -1.490105023549404e-05, -0.10029403865337372, -0.00039545822073705494, -0.05458571016788483, -0.0036247759126126766, -0.01140880398452282, -0.028536060824990273, -0.0009784678695723414, -0.010977353900671005, -0.3394331634044647, -0.32683753967285156, -0.007067324128001928, -1.5497195136049413e-06, -3.062558889389038, -0.0017006233101710677, -0.5849094986915588, -0.5712518095970154, -0.007023289799690247, -5.8887653722194955e-05, -0.019191648811101913, -0.2220190167427063, -0.0021895025856792927, -0.036778148263692856, -0.8799413442611694, -0.06947693228721619, -0.0772818997502327, -1.9073468138230965e-06, -0.00399493845179677, -3.099436753473128e-06, -0.0015372138004750013, -1.1920928244535389e-07, -0.058963850140571594, -0.007227347232401371, -0.4154151976108551, -0.004990146495401859, -0.0013606823049485683, -2.13382354559144e-05, -6.007967749610543e-05, -0.0001691436773398891, -0.009199020452797413, -0.0007154765771701932, -0.02900945022702217, -1.1531316041946411, -7.10462118149735e-05, -5.125986263010418e-06, -0.0003095386200584471, -0.0006889115320518613, -8.940656698541716e-06, -0.0006890306831337512, -0.0005640584276989102, -0.00012635385792236775, -0.2832935154438019, -2.0265373677830212e-05, -6.437280717364047e-06, -0.07787702977657318, -1.9347947835922241, -7.390948667307384e-06, -0.00042083943844772875, -0.01752007007598877, -0.0059650493785738945, -0.046708036214113235, -9.059495641849935e-05, -0.022749044001102448, -1.8954096958623268e-05, -2.169585604860913e-05, -0.0009539344464428723, -0.18405111134052277, -0.22675202786922455, -0.00011157367407577112, -2.2821803092956543, -6.246371776796877e-05, -0.014802858233451843, -1.3632699251174927, -2.169585604860913e-05, -0.3710640072822571, -0.00657999562099576, -0.1633886992931366, -0.6847985982894897], "finish_reason": "length"}], "metrics": {"energy": 878.5718679504399, "energy_per_token": 3.431921359181406, "time": 21.858166, "time_per_token": 0.0853834609375}}
{"outputs": [{"text": "# Check if the audio file exists\n    if not os.path.isfile(audio_file):\n        raise FileNotFoundError(f\"Audio file '{audio_file}' does not exist.\")\n\n    # Create an MxN matrix from a list L\n    arr = np.array(L).reshape(M, N)\n\n    # Normalize the matrix based on the sound pressure level (SPL) of the audio file\n    data, sr = librosa.load(audio_file)\n    spl = 20 * np.log10(np.sqrt(np.mean(data ** 2)))\n    arr = arr / 20 * spl\n\n    # Generate a spectrogram from the matrix\n    fig, ax = plt.subplots()\n    spectrogram = librosa.amplitude_to_db(np.abs(arr), ref=np.max)\n    img = ax.imshow(spectrogram, cmap='inferno', aspect='auto', origin='lower', vmin=spectrogram.min(), vmax=spectrogram.max())", "tokens": ["#", " Check", " if", " the", " audio", " file", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Audio", " file", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " an", " M", "x", "N", " matrix", " from", " a", " list", " L", "\n", "    ", "arr", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "\n", "    ", "#", " Normal", "ize", " the", " matrix", " based", " on", " the", " sound", " pressure", " level", " (", "SP", "L", ")", " of", " the", " audio", " file", "\n", "    ", "data", ",", " s", "r", " =", " lib", "ros", "a", ".", "load", "(", "audio", "_", "file", ")", "\n", "    ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", " **", " ", "2", ")))", "\n", "    ", "arr", " =", " arr", " /", " ", "2", "0", " *", " spl", "\n", "\n", "    ", "#", " Generate", " a", " spectro", "gram", " from", " the", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "spect", "ro", "gram", " =", " lib", "ros", "a", ".", "am", "plitude", "_", "to", "_", "db", "(", "np", ".", "abs", "(", "arr", ")", ",", " ref", "=", "np", ".", "max", ")", "\n", "    ", "img", " =", " ax", ".", "im", "show", "(", "spect", "ro", "gram", ",", " c", "map", "='", "inf", "ern", "o", "'", ",", " aspect", "='", "auto", "'", ",", " origin", "='", "lower", "'", ",", " v", "min", "=", "spect", "ro", "gram", ".", "min", "()", ",", " v", "max", "=", "spect", "ro", "gram", ".", "max", "())"], "logprobs": [-1.0683776140213013, -1.111961841583252, -0.15049083530902863, -0.5732647180557251, -0.46184101700782776, -0.02845785580575466, -0.025035038590431213, -0.12391749769449234, -0.0007269124034792185, -0.026268167421221733, -0.010636424645781517, -0.0019213564228266478, -2.50339189733495e-06, -0.00019536493346095085, -1.2993727978027891e-05, -1.116434931755066, -0.0003588747640606016, -0.0009166568052023649, -0.00385244726203382, -2.038458114839159e-05, -9.059865078597795e-06, -0.0015544723719358444, -0.0011079132091253996, -0.0037285825237631798, -0.0180900227278471, -0.002508828416466713, -0.00010084597306558862, -5.722029527532868e-06, -0.01363993901759386, -0.1425398886203766, -0.020810704678297043, -0.5920261144638062, -0.001209838199429214, -0.34003880620002747, -0.0002356490003876388, -0.0006964165368117392, -8.34430247778073e-05, -2.7418097943154862e-06, -0.0030538849532604218, -0.9110403060913086, -0.0001311216183239594, -0.0004689785710070282, -0.2227863371372223, -0.005579967983067036, -0.0004570631426759064, -0.0014522254932671785, -0.03752945363521576, -0.0011528043542057276, -0.07145537436008453, -0.9498414397239685, -1.1206377744674683, -0.02722916752099991, -0.09767911583185196, -0.00028379703871905804, -0.01062899362295866, -0.12280347943305969, -1.540714979171753, -0.02352249063551426, -0.14358113706111908, -0.06624133139848709, -0.0009647720726206899, -3.336374521255493, -0.02788427658379078, -0.048364847898483276, -7.510157047363464e-06, -0.21158523857593536, -0.016289470717310905, -0.002667204709723592, -0.02065412513911724, -0.5084114074707031, -0.0027505443431437016, 0.0, -0.41465383768081665, -0.007647049613296986, -0.00013326710904948413, -0.027714770287275314, -0.0002195594133809209, -0.022506054490804672, -0.06784830242395401, -0.0008906926377676427, -0.01866011880338192, -0.6328292489051819, -0.013584314845502377, -0.11437016725540161, -0.14912378787994385, -0.11285195499658585, -0.0003398079425096512, -0.09370457381010056, -0.11733290553092957, -0.0012282931711524725, -0.0007401349139399827, -0.15313896536827087, -0.0021401375997811556, -3.480850500636734e-05, -0.00031740395934320986, -0.07702918350696564, -0.7572324872016907, -0.3426613509654999, -0.034194398671388626, -0.017656410112977028, -0.005658323410898447, -0.19845838844776154, -0.02870994433760643, -1.557309865951538, -0.018625132739543915, -0.001029557315632701, -1.940194845199585, -2.0861407392658293e-05, -2.3841855067985307e-07, -9.417489309271332e-06, -0.0007462101057171822, -0.0006946296198293567, -0.004423713777214289, -2.1934269170742482e-05, -0.0001778444420779124, -0.15006433427333832, -0.06512736529111862, -0.008680467493832111, -0.6326831579208374, -0.022174395620822906, -0.04116499051451683, -0.002255040919408202, -4.9232225137529895e-05, -0.020081425085663795, -0.0008075552177615464, -5.960462772236497e-07, -0.0001397035230183974, -0.000256982195423916, -1.1920928244535389e-07, -0.0009858515113592148, -0.001762266969308257, -1.6689286894688848e-06, -0.029489444568753242, -0.0021341899409890175, -0.0014171091606840491, -1.7881377516459906e-06, -0.00025459862081333995, -0.0029240967705845833, -0.1736656129360199, -0.8804460763931274, -0.000543446687515825, -2.396077979938127e-05, -0.030198249965906143, -0.04239622503519058, -0.04138907790184021, -0.8538051843643188, -0.6688907146453857, -0.18454138934612274, -0.12147867679595947, -2.778273105621338, -0.914751410484314, -0.3007642924785614, -0.8032357692718506, -0.06575510650873184, -0.15893203020095825, -0.019537625834345818, -0.0006811682251282036, -0.006286015268415213, -0.3234589993953705, -0.14260418713092804, -0.005872022360563278, -1.311301275563892e-06, -0.19283415377140045, -0.0014206803170964122, -0.22680723667144775, -0.11149650812149048, -0.0010970771545544267, -0.40334731340408325, -0.7527358531951904, -0.002701088320463896, -0.0010114560136571527, -0.00010513706365600228, -2.264974000354414e-06, -8.22540732769994e-06, -0.00011050090688513592, -0.21643604338169098, -0.0013184197014197707, -0.04108090326189995, -2.538792610168457, -0.04930633306503296, -0.0020283141639083624, -0.006703744642436504, -0.06093031167984009, -1.6689286894688848e-06, -3.576278118089249e-07, -5.483612312673358e-06, -0.15470747649669647, -0.000263894529780373, 0.0, -1.2516897186287679e-05, 0.0, -0.001383539172820747, -0.0028741739224642515, -1.0092864036560059, -2.5510462364763953e-05, -0.015244283713400364, -4.470248313737102e-05, -0.016537142917513847, -0.1313232034444809, -0.0694662556052208, -0.08195911347866058, -0.0010837402660399675, -0.12067779898643494, -1.0371154530730564e-05, -0.020654357969760895, -0.017468644306063652, -0.028499912470579147, -0.024359213188290596, -0.07940376549959183, -0.0008989107445813715, -0.4364820420742035, -7.629365427419543e-06, -0.5175027251243591, -9.536738616588991e-07, -6.770858453819528e-05, -0.0038701409939676523, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.022179409861564636, -0.33477237820625305, -5.364403477869928e-06, -0.04646727070212364, -2.9819653034210205, -3.814689989667386e-06, -4.136476854910143e-05, -0.07477948814630508, -0.00010096516780322418, -0.4722912609577179, -0.015084012411534786, -6.305972783593461e-05, -0.13208770751953125, -5.07818695041351e-05, -0.05635934695601463, -0.001961690140888095, -0.007960616610944271, -0.8490309119224548, -0.00018356545479036868, -1.9837478399276733, -0.0044450764544308186, -1.9464142322540283, -0.7024649977684021, -1.2040065485052764e-05, 0.0, -0.0024612629786133766, -0.00203390559181571, -0.021404806524515152, -0.007337880786508322, -0.019122416153550148, -1.680836794548668e-05, -0.0010068115079775453, -0.039391107857227325, -0.00011264643399044871, -2.729855441430118e-05, -0.000188332938705571, -0.0005505952867679298, -0.05527108907699585], "finish_reason": "length"}], "metrics": {"energy": 875.0135696420673, "energy_per_token": 3.4180217564143254, "time": 21.859135, "time_per_token": 0.08538724609375}}
{"outputs": [{"text": "# Check if audio file exists\n    if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"Audio file {audio_file} not found.\")\n\n    # Create MxN matrix from list L\n    matrix = np.array(L).reshape((M, N))\n\n    # Normalize matrix based on SPL of audio file\n    data, fs = sf.read(audio_file)\n    SPL = 20 * np.log10(np.sqrt(np.mean(np.square(data))))\n    matrix = matrix / np.max(matrix) * SPL\n\n    # Generate spectrogram from matrix\n    fig = plt.figure()\n    ax = fig.add_subplot(111)\n    ax.specgram(matrix, scale='dB')\n    ax.set_yscale('symlog')\n    ax.set_xscale('linear')\n    plt.show()\n\n    return matrix, fig", "tokens": ["#", " Check", " if", " audio", " file", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Audio", " file", " {", "audio", "_", "file", "}", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " M", "x", "N", " matrix", " from", " list", " L", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "((", "M", ",", " N", "))", "\n", "\n", "    ", "#", " Normal", "ize", " matrix", " based", " on", " S", "PL", " of", " audio", " file", "\n", "    ", "data", ",", " fs", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "np", ".", "square", "(", "data", "))", "))", "\n", "    ", "matrix", " =", " matrix", " /", " np", ".", "max", "(", "matrix", ")", " *", " S", "PL", "\n", "\n", "    ", "#", " Generate", " spectro", "gram", " from", " matrix", "\n", "    ", "fig", " =", " plt", ".", "figure", "()", "\n", "    ", "ax", " =", " fig", ".", "add", "_", "sub", "plot", "(", "1", "1", "1", ")", "\n", "    ", "ax", ".", "spec", "gram", "(", "matrix", ",", " scale", "='", "dB", "')", "\n", "    ", "ax", ".", "set", "_", "ys", "cale", "('", "sym", "log", "')", "\n", "    ", "ax", ".", "set", "_", "x", "scale", "('", "linear", "')", "\n", "    ", "plt", ".", "show", "()", "\n", "\n", "    ", "return", " matrix", ",", " fig", "\n", "\n", "if"], "logprobs": [-1.0683776140213013, -1.111961841583252, -0.15049083530902863, -1.0824543237686157, -0.21389596164226532, -0.028389493003487587, -0.10081850737333298, -0.0009132028790190816, -0.022126590833067894, -0.01121420320123434, -0.0030625606887042522, -2.9802276912960224e-06, -0.0002985746832564473, -1.3947389561508317e-05, -0.38866284489631653, -0.0005404680268839002, -0.005750778131186962, -2.1457441107486375e-05, -5.125986263010418e-06, -0.0056873648427426815, -0.0015906550688669086, -0.004559477791190147, -0.013075209222733974, -0.002465781755745411, -0.00011145447206217796, -5.602820692729438e-06, -0.02247784659266472, -0.17845802009105682, -0.03000553511083126, -0.2327410876750946, -0.0011277989251539111, -1.3832216262817383, -0.0013830630341544747, -5.721882189391181e-05, -3.099436753473128e-06, -0.0010333680547773838, -0.6337786316871643, -0.00010990492592100054, -0.3729451298713684, -0.014530201442539692, -0.0002299282787134871, -0.0009018882992677391, -0.042169392108917236, -0.0009245174005627632, -0.053809043020009995, -0.8120498657226562, -0.8205853700637817, -0.05867397040128708, -0.0002669931564014405, -0.019219014793634415, -0.21622508764266968, -0.839529812335968, -0.1064666286110878, -0.03938400372862816, -0.0008634176338091493, -0.3849369287490845, -0.00280344532802701, -0.010651522316038609, -2.7418097943154862e-06, -0.37991324067115784, -0.03066588193178177, -0.004543457645922899, -0.018266083672642708, -0.01630471833050251, -0.0006718761869706213, 0.0, -1.5193753242492676, -0.0017343016806989908, -0.0001294529065489769, -0.0202010627835989, -0.00023827097902540118, -0.021215176209807396, -0.030485747382044792, -0.0009055804111994803, -0.008563108742237091, -1.1173665523529053, -0.005503146909177303, -0.5250644683837891, -0.13006669282913208, -0.00021514961554203182, -1.1663844585418701, -0.00038521020906046033, -0.1953563541173935, -0.30406299233436584, -0.04666093364357948, -0.02941189333796501, -0.0017540559638291597, -0.2146771401166916, -0.023544730618596077, -2.1505706310272217, -0.0015714927576482296, -0.03356461971998215, -6.9141146923357155e-06, -8.34461570775602e-06, -1.07287787614041e-05, -0.0003591130953282118, -0.002262415364384651, -1.966933996300213e-05, -4.410734163684538e-06, -0.025381440296769142, -0.12171334028244019, -0.005814542528241873, -1.0332908630371094, -0.00015639036428183317, -0.0051049599424004555, -0.02236396074295044, -0.0030695723835378885, -6.782778655178845e-05, -0.023881636559963226, -0.0005038899253122509, -5.960462772236497e-07, -0.0001736728590913117, -0.00040391870425082743, -1.3708974620385561e-05, -0.00047362555051222444, -0.0013852057745680213, -1.5497195136049413e-06, -0.022082865238189697, -0.0013735393295064569, -0.0010996968485414982, -1.6689286894688848e-06, -0.0003578022588044405, -0.0018443731823936105, -2.3512563705444336, -9.536738616588991e-07, -0.3416624665260315, -0.00015341058315243572, -0.003582252422347665, -0.010205703787505627, -0.0003846143954433501, -0.041883863508701324, -0.0301573034375906, -0.6242818236351013, -0.21663907170295715, -0.16523179411888123, -0.1698107272386551, -1.4430211782455444, -2.932505594799295e-05, -0.5673132538795471, -0.002444495679810643, -0.13532236218452454, -0.004268582910299301, -0.12152513116598129, -0.712449312210083, -4.768360213347478e-06, -0.09010293334722519, -0.008225847966969013, -0.0010525407269597054, -0.0051236990839242935, -0.2809181809425354, -0.048674196004867554, -4.386805812828243e-05, -0.9779492020606995, -0.230125293135643, -0.04515467584133148, -0.0009386900928802788, -0.4763824939727783, -0.7296004295349121, -0.005062262061983347, -7.70062324590981e-05, -0.01889375038444996, -0.2732592523097992, -0.0016786068445071578, -0.007670354563742876, -0.7251293063163757, -0.0676269456744194, -0.06638100743293762, -1.311301275563892e-06, -0.0043343412689864635, -3.3378546504536644e-06, -0.0020493713673204184, -8.344646857949556e-07, -0.07356015592813492, -0.01070683728903532, -1.0583029985427856, -8.67805938469246e-05, -0.028178581967949867, -0.0011145814787596464, -0.010640081018209457, -0.7015599608421326, -0.004998449236154556, -0.2748908996582031, -0.0017888034926727414, -0.000959531927946955, -0.2323179394006729, -1.9178082942962646, -3.2431888580322266, -1.049678087234497, -0.9828009605407715, -1.4707159996032715, -0.017069920897483826, -0.09602335840463638, -0.1957775056362152, -0.00023922442051116377, -0.02531484328210354, -0.0008771148277446628, -1.6231249570846558, -0.00018261195509694517, -0.00816507451236248, -1.7341142892837524, -1.680836794548668e-05, -0.05634109303355217, -0.12053747475147247, -0.10907206684350967, -0.40595224499702454, -0.00017188502533826977, -0.0740765854716301, -0.0029467991553246975, -1.7054332494735718, -0.05679654702544212, -0.001311514643020928, -0.008051439188420773, -0.0012026942567899823, -0.002313914941623807, -0.23610036075115204, -1.2821223735809326, -2.8729025871143676e-05, -0.885851263999939, -0.003211105475202203, -0.00221804971806705, -0.16996583342552185, -0.005679778754711151, -0.1738552749156952, -0.006813388783484697, -0.01570487767457962, -0.00212395959533751, -0.1394261121749878, -0.011029232293367386, -1.052255630493164], "finish_reason": "stop"}], "metrics": {"energy": 775.5971105880735, "energy_per_token": 3.3868869457994477, "time": 19.332434, "time_per_token": 0.08442110917030568}}
{"outputs": [{"text": "if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"Audio file '{audio_file}' not found.\")\n\n    L = L[0:M*N] # Only take the required amount of elements\n    matrix = np.array(L).reshape(M, N)\n\n    # Calculate sound pressure level (SPL)\n    data, sample_rate = sf.read(audio_file)\n    spl = 20 * np.log10(np.sqrt(np.mean(data ** 2)))\n\n    # Normalize matrix based on SPL\n    norm_matrix = matrix / spl\n\n    # Generate spectrogram\n    fig, ax = plt.subplots(figsize=(8, 4))\n    librosa.display.specshow(norm_matrix, y_axis='log', x_axis='linear', ax=ax)\n    ax.set_title('Spectrogram')\n    plt.xlabel('Time (s)')\n    plt.ylabel('Frequency (Hz)')\n    plt.colorbar()\n\n    return norm_", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Audio", " file", " '", "{", "audio", "_", "file", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "L", " =", " L", "[", "0", ":", "M", "*", "N", "]", " #", " Only", " take", " the", " required", " amount", " of", " elements", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "\n", "    ", "#", " Calculate", " sound", " pressure", " level", " (", "SP", "L", ")", "\n", "    ", "data", ",", " sample", "_", "rate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "    ", "spl", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", " **", " ", "2", ")))", "\n", "\n", "    ", "#", " Normal", "ize", " matrix", " based", " on", " S", "PL", "\n", "    ", "norm", "_", "matrix", " =", " matrix", " /", " spl", "\n", "\n", "    ", "#", " Generate", " spectro", "gram", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "8", ",", " ", "4", "))", "\n", "    ", "lib", "ros", "a", ".", "display", ".", "spec", "show", "(", "norm", "_", "matrix", ",", " y", "_", "axis", "='", "log", "'", ",", " x", "_", "axis", "='", "linear", "'", ",", " ax", "=", "ax", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Spect", "ro", "gram", "')", "\n", "    ", "plt", ".", "xlabel", "('", "Time", " (", "s", ")", "')", "\n", "    ", "plt", ".", "ylabel", "('", "F", "requency", " (", "Hz", ")", "')", "\n", "    ", "plt", ".", "color", "bar", "()", "\n", "\n", "    ", "return", " norm", "_"], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -0.30077531933784485, -0.00305031961761415, -0.0044648959301412106, -1.823885577323381e-05, -8.22540732769994e-06, -0.004296951927244663, -0.01968315802514553, -0.011692916974425316, -0.018728680908679962, -0.002920768689364195, -0.00016735584358684719, -1.3470558769768104e-05, -0.03450712189078331, -0.21626637876033783, -0.06410496681928635, -0.6559430956840515, -0.0028822568710893393, -0.4674893319606781, -0.0003051292151212692, -0.001179595128633082, -5.2689116273541003e-05, -7.867782187531702e-06, -0.004300631582736969, -0.7184233665466309, -0.00021765247220173478, -0.2018333077430725, -0.014264875091612339, -0.00047219570842571557, -0.004227629862725735, -0.18999922275543213, -0.0009459549910388887, -2.3113455772399902, -0.19524534046649933, -2.0323874950408936, -2.533015251159668, -0.29242292046546936, -0.15189792215824127, -0.3903791904449463, -0.4240979254245758, -0.002046635141596198, -0.016398068517446518, -2.3313026428222656, -4.2414326667785645, -1.4720590114593506, -0.22196345031261444, -3.028352975845337, -2.4168527126312256, -0.39464929699897766, -0.8923541903495789, -0.7981430888175964, -0.26431331038475037, -0.8820957541465759, -0.0063348207622766495, -0.009304730221629143, -4.172316494077677e-06, -0.3421120047569275, -0.009357994422316551, -0.0042302412912249565, -0.017671635374426842, -0.03171021118760109, -0.0003761537664104253, -5.960462772236497e-07, -0.5950784087181091, -0.012913648039102554, -0.00027724236133508384, -0.1767398715019226, -0.0005573864909820259, -0.4398937225341797, -0.40619051456451416, -0.0018330690218135715, -0.8357974886894226, -0.7669304609298706, -1.2970045804977417, -0.006937345955520868, -0.003739152569323778, -0.2311396300792694, -0.04332302138209343, -1.2278481335670222e-05, -0.004978047218173742, -0.6843984723091125, -0.00206947629339993, -0.21224413812160492, -0.03690120205283165, -1.3080514669418335, -0.002445090329274535, -0.00030489088385365903, -0.0009260656661354005, -0.03867216408252716, -1.966933996300213e-05, -1.4543427823809907e-05, -4.6491513785440475e-06, -0.00023934361524879932, -0.0016437364974990487, -1.3470558769768104e-05, -1.4305104514278355e-06, -0.020052099600434303, -0.03156699612736702, -0.00967126153409481, -1.6037001609802246, -0.020225828513503075, -0.020320100709795952, -0.0013196102809160948, -2.9801878554280847e-05, -0.013103564269840717, -0.00042358008795417845, -4.768370445162873e-07, -0.00023707917716819793, -0.0001864259538706392, -1.3351351299206726e-05, -0.0008054111385717988, -0.00096703483723104, -1.311301275563892e-06, -0.0267377570271492, -0.0023749261163175106, -0.0006878394051454961, -1.7881377516459906e-06, -0.0003713871701620519, -0.002725222148001194, -0.17096635699272156, -1.2702925205230713, -0.0004602803383022547, -3.6000557884108275e-05, -0.019741715863347054, -0.05331346020102501, -0.12662938237190247, -0.00047291061491705477, -0.047596972435712814, -0.07934518158435822, -0.015899311751127243, -1.3162710666656494, -0.16510061919689178, -0.0002907091984525323, -0.12289372831583023, -1.2278481335670222e-05, -0.07167454808950424, -0.0004978132783435285, -2.352182149887085, -0.1228850856423378, -0.1802397221326828, -0.0010946955299004912, -0.09702794253826141, -0.059293415397405624, -0.8442972302436829, -0.11294884979724884, -0.029673000797629356, -0.001032891683280468, -0.070403091609478, -0.32918134331703186, -0.12601886689662933, -7.60526381782256e-05, -0.14779116213321686, -0.0009116546134464443, -0.34924328327178955, -0.4950181245803833, -0.0023506649304181337, -0.0010869554243981838, -0.00013076403411105275, -1.1920922133867862e-06, -7.986990567587782e-06, -0.0004003438516519964, -1.3221834897994995, -0.16203491389751434, -1.1920928244535389e-07, -0.004090870730578899, -1.7171155214309692, -0.0008485292200930417, -0.07264246046543121, -0.8306239247322083, -0.010515992529690266, -0.012251126579940319, -0.08083394169807434, -1.4673011302947998, -3.325883881188929e-05, -4.0531076592742465e-06, -0.0001528146385680884, -0.0009709649602882564, -3.3378546504536644e-06, -0.0009036748087964952, -0.0004234609368722886, -0.00012599628826137632, -0.1964256465435028, -1.9430925021879375e-05, -3.576272320060525e-06, -0.2088722139596939, -1.894065499305725, -6.198863957251888e-06, -0.00048530244384892285, -0.02168446034193039, -0.004699139390140772, -0.014003944583237171, -4.9232225137529895e-05, -0.020884957164525986, -6.794906312279636e-06, -1.3708974620385561e-05, -0.00064876489341259, -0.09816422313451767, -0.06834864616394043, -0.00010013079008786008, -0.21109743416309357, -0.0002236116270069033, -3.218599158572033e-05, -0.11104514449834824, -0.0038620661944150925, -0.030826564878225327, -0.15215012431144714, -4.124556289752945e-05, -0.0016094601014629006, -0.004702223930507898, -0.0540676973760128, -0.49477365612983704, -0.2537897229194641, -0.0016584941186010838, -5.483612312673358e-06, -0.5537593960762024, -0.0003524397616274655, -0.2384876310825348, -0.7981199026107788, -1.8954096958623268e-05, -1.2412352561950684, -0.008307780139148235, -0.014592351391911507, -0.8711886405944824, -0.39694029092788696, -0.016886616125702858, -0.0003103728231508285, -0.000969535845797509, -0.0036762054078280926, -0.0014119903789833188, -8.702239938429557e-06, -0.0037884386256337166, -0.00032085992279462516, -0.027141578495502472, -0.00029297350556589663, -0.014077529311180115, -0.0008425738196820021, -0.0009841842111200094, -0.00012492353562265635, -0.0005202132160775363, -0.2558239698410034, -0.056695856153964996, -6.4490144723095e-05, -0.1696183830499649, 0.0, -0.284200519323349, -0.0056595089845359325, -0.26617395877838135, -0.00023016665363684297, -0.049890439957380295, -0.16167983412742615, -5.245195097813848e-06], "finish_reason": "length"}], "metrics": {"energy": 891.7063946037292, "energy_per_token": 3.4832281039208173, "time": 21.862442, "time_per_token": 0.0854001640625}}
{"outputs": [{"text": "if not os.path.exists(audio_file):\n        raise FileNotFoundError(f\"Audio file '{audio_file}' does not exist.\")\n\n    matrix = np.array(L).reshape(M, N)\n\n    data, sample_rate = sf.read(audio_file)\n\n    SPL = 20 * np.log10(np.sqrt(np.mean(data ** 2)))\n\n    matrix_normalized = matrix / 10 ** (SPL / 20)\n\n    figure = plt.figure(figsize=(8, 4))\n    ax = plt.gca()\n    im = ax.imshow(np.abs(matrix_normalized), cmap='gray', aspect='auto')\n\n    plt.yscale('log')\n    plt.colorbar(im)\n    plt.show()\n\n    return matrix_normalized, figure", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "audio", "_", "file", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Audio", " file", " '", "{", "audio", "_", "file", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "matrix", " =", " np", ".", "array", "(", "L", ")", ".", "resh", "ape", "(", "M", ",", " N", ")", "\n", "\n", "    ", "data", ",", " sample", "_", "rate", " =", " s", "f", ".", "read", "(", "audio", "_", "file", ")", "\n", "\n", "    ", "SP", "L", " =", " ", "2", "0", " *", " np", ".", "log", "1", "0", "(", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "data", " **", " ", "2", ")))", "\n", "\n", "    ", "matrix", "_", "normalized", " =", " matrix", " /", " ", "1", "0", " **", " (", "SP", "L", " /", " ", "2", "0", ")", "\n", "\n", "    ", "figure", " =", " plt", ".", "figure", "(", "fig", "size", "=(", "8", ",", " ", "4", "))", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "im", " =", " ax", ".", "im", "show", "(", "np", ".", "abs", "(", "matrix", "_", "normalized", ")", ",", " c", "map", "='", "gray", "'", ",", " aspect", "='", "auto", "')", "\n", "\n", "    ", "plt", ".", "ys", "cale", "('", "log", "')", "\n", "    ", "plt", ".", "color", "bar", "(", "im", ")", "\n", "    ", "plt", ".", "show", "()", "\n", "\n", "    ", "return", " matrix", "_", "normalized", ",", " figure", "\n", "\n", "def"], "logprobs": [-1.0080443620681763, -0.11218096315860748, -0.010102802887558937, -8.821448318485636e-06, -0.0002687808300834149, -2.264974000354414e-06, -0.30077531933784485, -0.00305031961761415, -0.0044648959301412106, -1.823885577323381e-05, -8.22540732769994e-06, -0.004296951927244663, -0.01968315802514553, -0.011692916974425316, -0.018728680908679962, -0.002920768689364195, -0.00016735584358684719, -1.3470558769768104e-05, -0.03450712189078331, -0.21626637876033783, -0.06410496681928635, -0.6559430956840515, -0.0028822568710893393, -0.4674893319606781, -0.0003051292151212692, -0.001179595128633082, -5.2689116273541003e-05, -7.867782187531702e-06, -0.004300631582736969, -0.7055907249450684, -0.0001934579631779343, -0.0011880489764735103, -0.30243203043937683, -0.010785499587655067, -0.0005987281911075115, -0.004515926353633404, -0.2008296549320221, -0.0008911690674722195, -2.6339964866638184, -0.008472214452922344, -0.025777677074074745, -7.629365427419543e-06, -0.44139760732650757, -0.02579103782773018, -0.004438667558133602, -0.023634031414985657, -0.04810335114598274, -0.0009775151265785098, 0.0, -0.21955761313438416, -0.007168288342654705, -0.0001357701694360003, -0.02797388657927513, -0.0005559567362070084, -0.0752960667014122, -0.8296604752540588, -0.0010701649589464068, -0.7192878127098083, -0.027231603860855103, -1.5162733793258667, -0.0028966395184397697, -0.0006793813081458211, -0.0010894560255110264, -0.06025665998458862, -4.291525328881107e-06, -8.4638240878121e-06, -8.702239938429557e-06, -0.0005545270396396518, -0.0038051833398640156, -7.510157047363464e-06, -8.344646857949556e-07, -0.018021181225776672, -0.02949349582195282, -2.1986565589904785, -0.0005695389700122178, -0.8721635341644287, -0.00030989613151177764, -0.017801398411393166, -0.023574886843562126, -0.003915145993232727, -0.00013660451804753393, -0.02496493048965931, -0.0009198724874295294, -5.960462772236497e-07, -0.000179036331246607, -0.000582525331992656, -4.887569048150908e-06, -0.0007843278581276536, -0.004540016409009695, -3.576278118089249e-07, -0.01205480471253395, -0.003037127433344722, -0.00086758635006845, -1.9073468138230965e-06, -0.0008422164828516543, -0.005406045820564032, -0.0970844104886055, -0.6384821534156799, -0.0005498804384842515, -4.637133679352701e-05, -0.021997040137648582, -0.031774189323186874, -0.4257178008556366, -0.000179036331246607, -0.7924590110778809, -1.2330858707427979, -1.484642744064331, -0.006135912146419287, -0.13110437989234924, -0.09367243945598602, -1.8185956478118896, -0.3420252203941345, -0.012096498161554337, -0.277158260345459, -0.022464558482170105, -0.004184657242149115, -1.0728830375228426e-06, -0.02905901148915291, -0.000621959799900651, -0.10809963196516037, -0.0008125579333864152, -0.005280831828713417, -0.024157574400305748, -0.03706479072570801, -0.00045122456504032016, -2.699009895324707, -0.2595153748989105, -0.030700910836458206, -9.440929716220126e-05, -0.061855897307395935, -1.6174534559249878, -0.07791198790073395, -9.894321920000948e-06, -0.0073847416788339615, -1.6647801399230957, -0.011686554178595543, -0.03735525906085968, -1.525399923324585, -0.05407695844769478, -0.005988038145005703, -0.22944869101047516, -1.042685866355896, -0.070074163377285, -0.5357975363731384, -1.9430925021879375e-05, -1.6710429191589355, -9.536738616588991e-07, -6.770858453819528e-05, -0.001932302606292069, -0.2318924218416214, -2.4385340213775635, -0.009647059254348278, -0.03628818690776825, -2.4676019165781327e-05, -0.018571658059954643, -2.145764938177308e-06, -0.0013087764382362366, -1.1345244646072388, -4.470248313737102e-05, -0.08887314051389694, -0.00023135847004596144, -0.5173383951187134, -0.008812464773654938, -5.5549986427649856e-05, -0.05940328538417816, -0.03505251556634903, -0.16522006690502167, -1.2874520507466514e-05, -0.09115134924650192, -1.7687641382217407, -0.6092319488525391, -0.0001560327800689265, -0.31052929162979126, -0.045787446200847626, -0.003948986995965242, -1.219132661819458, -0.017890511080622673, -1.382066011428833, -0.0003914067056030035, -0.9311455488204956, -0.00019238528329879045, -0.8888347148895264, -6.079655122448457e-06, -0.007816797122359276, -0.48337164521217346, -0.0037680119276046753, -0.02657896839082241, -0.21102261543273926, -0.41639530658721924, -0.00016973962192423642, -1.4009829759597778, -9.298280929215252e-06, -0.018830815330147743, -0.008713439106941223, -0.30554357171058655, -0.004088852554559708, -0.5337210297584534, -0.28308847546577454, -6.842378934379667e-05, -1.6089410781860352, -0.0020217709243297577, -0.0026704147458076477, -0.14744023978710175, -0.011349166743457317, -0.03453683480620384, -0.012563842348754406, -0.055670879781246185, -0.0003695997002068907, -0.01303955726325512, -0.0067628310061991215, -0.21218764781951904, -0.00826640147715807, -0.8587560057640076], "finish_reason": "stop"}], "metrics": {"energy": 766.1064853744508, "energy_per_token": 3.5967440627908487, "time": 18.077148, "time_per_token": 0.08486923943661973}}
