{"outputs": [{"text": "if not os.path.exists(DEST_DIR):\n        os.mkdir(DEST_DIR)\n    count_of_moved = 0\n    for file in glob.glob(ROOT_DIR + \"/*\"):\n        with open(file, \"rb\") as f:\n            current_hash = hashlib.md5()\n            for block in iter(lambda: f.read(4096), b\"\"):\n                current_hash.update(block)\n            if current_hash.hexdigest() == SPECIFIC_HASH:\n                shutil.move(file, DEST_DIR)\n                count_of_moved += 1\n    return count_of_moved", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DE", "ST", "_", "DIR", ")", "\n", "    ", "count", "_", "of", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "ROOT", "_", "DIR", " +", " \"", "/*", "\"", "):", "\n", "        ", "with", " open", "(", "file", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "            ", "current", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "for", " block", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "current", "_", "hash", ".", "update", "(", "block", ")", "\n", "            ", "if", " current", "_", "hash", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "count", "_", "of", "_", "m", "oved", " +=", " ", "1", "\n", "    ", "return", " count", "_", "of", "_", "m", "oved", "\n", "\n", "print"], "logprobs": [-1.9198689460754395, -0.12416959553956985, -0.01746349036693573, -1.9550132492440753e-05, -0.001149827498011291, -2.7179348762729205e-05, -0.13708972930908203, -0.0006619884516112506, -0.024847257882356644, -1.311301275563892e-06, -5.125986263010418e-06, -1.4305104514278355e-06, -0.0023341334890574217, -0.03280617296695709, -0.0123580452054739, -0.07724273204803467, -8.821448318485636e-06, -1.331514835357666, -0.00013147920253686607, -0.001404966926202178, -0.002499315422028303, 0.0, -5.8412379075889476e-06, -2.3841830625315197e-06, -0.0016643255949020386, -0.030467592179775238, -0.8460476994514465, -2.0372226238250732, -2.4086194038391113, -1.728312373161316, -0.0017227584030479193, -0.5465319156646729, -0.07015374302864075, -1.6463361978530884, -0.013959509320557117, -0.00018344627460464835, -0.013876745477318764, -0.05669979751110077, -0.29776695370674133, -0.6637068390846252, -0.44229093194007874, -0.03464657813310623, -0.0001070442158379592, -0.1307947188615799, -0.007527676410973072, -1.063546895980835, -1.0609570381348021e-05, -4.887569048150908e-06, -0.22656528651714325, -0.8522982001304626, -0.7447922229766846, -0.0713559240102768, -0.04234788939356804, -0.026774896308779716, -0.010458307340741158, -0.7471491694450378, -0.0004864939546678215, -0.0010756427654996514, -0.00756494514644146, -0.01523442193865776, -0.4438474476337433, -0.031236596405506134, -0.0016434985445812345, -0.001157805323600769, -7.73638384998776e-05, -0.4003767967224121, -0.1188967302441597, -0.010015353560447693, -0.0015554246492683887, -3.6616029739379883, -0.02645719051361084, -0.1297556608915329, -0.03203121945261955, -0.005101164802908897, -3.2066785934148356e-05, -9.65590606938349e-06, -0.0020404488313943148, -3.671578815556131e-05, -1.8178503513336182, -0.028583213686943054, -0.0016567088896408677, -2.1424362659454346, -3.3026552200317383, -0.003526779357343912, -0.003257565898820758, -0.00034624303225427866, -0.016172414645552635, -0.003204451175406575, -0.004227748606353998, -4.160317621426657e-05, -2.932505594799295e-05, -0.0033680638298392296, -0.3028086721897125, -0.002271930454298854, -0.0006052807439118624, -0.00015186110977083445, -0.005185606423765421, -0.00023398046323563904, -0.01773487962782383, -0.035261403769254684, -2.9205850296420977e-05, -9.715084888739511e-05, -0.010835264809429646, -0.0005160430446267128, -0.0034285355359315872, -5.006777428206988e-06, -7.152531907195225e-06, -0.0020763759966939688, -3.933898824470816e-06, -0.0003319427778478712, -0.0003526780928950757, -0.00037245964631438255, -0.0018441352294757962, -0.5082147121429443, -0.3336484134197235, -0.108219675719738, -1.1086402082582936e-05, -1.311301275563892e-06, -0.018274979665875435, -0.0013250865740701556, -5.709961988031864e-05, -1.1920928244535389e-07, -0.0008860476082190871, -0.012614813633263111, -0.001471390132792294, -9.536738616588991e-07, -2.861018856492592e-06, -1.764281842042692e-05, -0.00028236693469807506, -0.0074430773966014385, -0.004300157073885202, -0.0009701313101686537, -0.4009951055049896, -2.074220174108632e-05, -6.198863957251888e-06, -0.027120230719447136, -7.748303323751315e-05, -0.01451751310378313, -0.0010966007830575109, -0.052650488913059235, -3.576278118089249e-07, -9.417489309271332e-06, -1.311301275563892e-06, -0.09612005949020386, -0.0035646725445985794, -0.0036454431246966124, -0.029450438916683197, -7.760223525110632e-05, -1.4185804502631072e-05, -4.768360213347478e-06, -1.0967194612021558e-05, 0.0, -0.03967643529176712, -0.0046088420785963535, -0.0002479245886206627, -0.0013156814966350794, -0.16702045500278473, -0.058033667504787445, -0.006060793064534664, -2.1219027985353023e-05, -1.2397689715726301e-05, -2.0265558760002023e-06, -1.2159273865108844e-05, -1.1920922133867862e-06, -0.3725578784942627, -0.012821500189602375, -2.9521539211273193], "finish_reason": "stop"}], "metrics": {"energy": 604.871526592255, "energy_per_token": 3.6219851891751795, "time": 14.30411, "time_per_token": 0.08565335329341317}}
{"outputs": [{"text": "# Ensure the destination directory exists\n    os.makedirs(DEST_DIR, exist_ok=True)\n\n    # Find all files in ROOT_DIR and its subdirectories\n    files = glob.glob(os.path.join(ROOT_DIR, '**/*'), recursive=True)\n\n    # Count the number of files moved\n    files_moved = 0\n\n    # Iterate over each file\n    for file in files:\n        # Check if it's a regular file and not a directory\n        if os.path.isfile(file):\n            # Calculate the MD5 hash of the file\n            with open(file, 'rb') as f:\n                file_hash = hashlib.md5(f.read()).hexdigest()\n\n            # Move the file to the target directory if the hash matches SPECIFIC_HASH\n            if file_hash == SPECIFIC_HASH:\n                shutil.move(file, DEST_DIR)\n                files_moved += 1\n\n    return files_moved", "tokens": ["#", " Ensure", " the", " destination", " directory", " exists", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Find", " all", " files", " in", " RO", "OT", "_", "DIR", " and", " its", " sub", "direct", "ories", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " '", "**", "/*", "')", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "#", " Count", " the", " number", " of", " files", " moved", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " file", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "#", " Check", " if", " it", "'", "s", " a", " regular", " file", " and", " not", " a", " directory", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "#", " Calculate", " the", " MD", "5", " hash", " of", " the", " file", "\n", "            ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "md", "5", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "#", " Move", " the", " file", " to", " the", " target", " directory", " if", " the", " hash", " matches", " SPEC", "IFIC", "_", "H", "ASH", "\n", "            ", "if", " file", "_", "hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "files", "_", "m", "oved", " +=", " ", "1", "\n", "\n", "    ", "return", " files", "_", "m", "oved", "\n", "\n", "def"], "logprobs": [-0.9781699180603027, -0.6535950303077698, -0.9812452793121338, -0.5613077878952026, -0.028118662536144257, -0.02112600766122341, -0.4842430353164673, -0.0025321345310658216, -0.7001217007637024, -7.462222856702283e-05, -0.0015359044773504138, -1.0728830375228426e-06, -1.311301275563892e-06, -9.30981186684221e-05, -0.01139961089938879, -3.4570634852570947e-06, -3.3378044463461265e-05, -1.6689286894688848e-06, -0.0041814520955085754, -0.0010542079107835889, -2.861018856492592e-06, -1.1086402082582936e-05, -0.007181781344115734, -0.0010244365548714995, -0.00024029705673456192, -0.00696208793669939, -0.14438101649284363, -0.0002184867626056075, -0.30948394536972046, -2.287186622619629, -0.29447731375694275, -0.16504178941249847, -0.18793408572673798, -2.1014018058776855, -3.075552376685664e-05, -0.001029319129884243, -0.0006171943969093263, -1.0437332391738892, -0.2688184380531311, -0.004418254364281893, -0.09062624722719193, -4.911301948595792e-05, -0.08744950592517853, -0.00045813556062057614, -0.5301017165184021, -0.13463617861270905, -0.03374224528670311, -2.5510462364763953e-05, -0.17717322707176208, -0.0059104193933308125, -0.3064817190170288, -2.622600959512056e-06, -5.1377883210079744e-05, -3.4570634852570947e-06, -0.0012422234285622835, -0.0005832401220686734, -0.0017794027226045728, -3.4570634852570947e-06, -9.775113539944869e-06, -0.0006896263221278787, -0.17399121820926666, -0.0018225978128612041, -0.7294376492500305, -0.025914987549185753, -0.00017379203927703202, -0.0006677066558040679, -0.00020883286197204143, -0.0002444683632347733, -0.0013799677835777402, -0.0010411086259409785, -0.12318212538957596, -9.929640509653836e-05, -0.3674769699573517, -1.5311691761016846, -0.3898012042045593, -0.23425239324569702, -0.0005471401382237673, -0.18492491543293, -0.08581008017063141, -0.26934462785720825, -9.226373367710039e-05, -1.190625786781311, -0.0065495590679347515, -0.0273745134472847, -7.73638384998776e-05, -0.023004325106739998, -0.0014994817320257425, -1.7762025890988298e-05, -0.0003392120997887105, -0.029695797711610794, -7.688703772146255e-05, -0.4633858799934387, -1.217615008354187, -0.0009266611887142062, -0.3994158208370209, -0.5032649636268616, -0.016894938424229622, -0.5459879040718079, -6.401333666872233e-05, -0.0015357855008915067, -0.05060635507106781, -0.5557348728179932, -0.0028443378396332264, -5.9126061387360096e-05, -9.381330892210826e-05, -0.023883964866399765, -0.3287748694419861, -0.6288279891014099, -0.006535702850669622, -1.2370481491088867, -0.8456646800041199, -2.825220326485578e-05, -0.019202642142772675, -1.2350869178771973, -0.0008378094644285738, -2.410169839859009, -0.12111818790435791, -0.02228293940424919, -0.02094414457678795, -0.03722146525979042, -0.00013791563105769455, -0.001327943871729076, -0.05978447571396828, -5.960462772236497e-07, -1.8358061424805783e-05, -7.152555099310121e-07, -0.0002743821241892874, -0.0010172913316637278, -2.2172682292875834e-05, -0.00017510310863144696, -0.0022895331494510174, -0.0001858300092862919, -0.004184657242149115, -0.055362001061439514, -0.11088714003562927, -0.1522098034620285, -0.10575026273727417, -0.00012492353562265635, -0.0037082734052091837, -0.04346547648310661, -0.009852115996181965, -0.021518567577004433, -0.0581507608294487, -0.00024184639914892614, -1.317241907119751, -0.00023600654094479978, -7.962863310240209e-05, -0.0006150499684736133, -0.00030429501202888787, -0.08338871598243713, -0.001303776167333126, -0.00029309268575161695, -2.5629668016335927e-05, -0.14045795798301697, -0.013458944857120514, -0.0023255704436451197, -0.0004328744253143668, -0.5486334562301636, -0.0008978387922979891, -0.049748897552490234, -0.0007946909172460437, -0.00031573555315844715, -6.318072337307967e-06, -1.4305104514278355e-06, -0.0002294515579706058, -2.0265558760002023e-06, -0.04269714280962944, -0.0003351603518240154, -1.2040065485052764e-05, -8.344646857949556e-07, -0.00022802136663813144, -0.011432021856307983, -0.0023818237241357565, -8.34461570775602e-06, 0.0, -4.529942543740617e-06, -0.0025634069461375475, -0.03749099001288414, -0.00569637306034565, -0.01997801847755909, -1.0482193231582642, -0.04380589723587036, -0.0012948471121490002, -1.6013389825820923, -0.493103951215744, -2.057476282119751, -0.028473496437072754, -0.04096145182847977, -0.6721882224082947, -0.09533729404211044, -0.006521372124552727, -1.1360888481140137, -0.00034362133010290563, -0.0006561510381288826, -0.00020847532141488045, -6.758938252460212e-05, -0.004138002637773752, -0.00028200942324474454, -0.0037390338256955147, -0.005647655110806227, -3.290122185717337e-05, -4.291525328881107e-06, -0.008889976888895035, -0.000771939754486084, -7.152555099310121e-07, -2.7418097943154862e-06, -6.556489552167477e-06, -5.960462772236497e-07, -0.0038191964849829674, -0.0002703301142901182, -0.0006840273272246122, -0.2000161111354828, -2.9802276912960224e-06, -1.0728830375228426e-06, -0.007430179975926876, -1.537788011773955e-05, -0.0008329259580932558, -7.83174327807501e-05, -0.13611462712287903, 0.0, -1.966933996300213e-05, -5.006777428206988e-06, -0.0033579650335013866, -0.0027202290948480368, -0.0024135764688253403, -0.03055731952190399, -3.814689989667386e-06, -2.622600959512056e-06, -1.1920928244535389e-07, -0.00039569655200466514, -0.0002134810492862016, -2.8490614567999728e-05, -0.004752767737954855, -0.10872161388397217, -0.004237482324242592, -0.2910103499889374, -0.006269786041229963, -4.434487345861271e-05, -2.9802276912960224e-06, 0.0, -0.35474032163619995, -0.013071443885564804, -1.6482707262039185], "finish_reason": "stop"}], "metrics": {"energy": 865.5904575519564, "energy_per_token": 3.5621006483619606, "time": 20.811844, "time_per_token": 0.08564544855967078}}
{"outputs": [{"text": "os.makedirs(DEST_DIR, exist_ok=True)\n    files_moved = 0\n    for file in glob.glob(f\"{ROOT_DIR}**/**\", recursive=True):\n        if os.path.isfile(file):\n            with open(file, 'rb') as f:\n                file_hash = hashlib.md5(f.read())\n                if file_hash.hexdigest() == SPECIFIC_HASH:\n                    shutil.move(file, DEST_DIR)\n                    files_moved += 1\n    return files_moved", "tokens": ["os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "f", "\"", "{", "ROOT", "_", "DIR", "}", "**", "/**", "\"", ",", " recursive", "=", "True", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "md", "5", "(", "f", ".", "read", "())", "\n", "                ", "if", " file", "_", "hash", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "    ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "    ", "files", "_", "m", "oved", " +=", " ", "1", "\n", "    ", "return", " files", "_", "m", "oved", "\n", "\n", "def"], "logprobs": [-1.9333806037902832, -0.0005990855861455202, -0.025382021442055702, -3.6954811548639555e-06, -3.814689989667386e-06, -0.00017557987303007394, -0.012103093788027763, -7.152531907195225e-06, -7.748573807475623e-06, -3.4570634852570947e-06, -0.011737452819943428, -0.0056714811362326145, -6.198863957251888e-06, -5.602820692729438e-06, -0.0166294164955616, -0.0021052833180874586, -0.000395815703086555, -0.1972639411687851, -0.31592974066734314, -1.0424063205718994, -0.7266557812690735, -0.5283385515213013, -0.0005999195855110884, -0.04997129738330841, -0.020718932151794434, -3.6000557884108275e-05, -0.008999972604215145, -0.17440594732761383, -0.15282613039016724, -0.4742666184902191, -0.7755934000015259, -0.045980215072631836, -4.792098479811102e-05, -0.14519788324832916, -0.0038950780872255564, -1.5515360832214355, -0.3736494779586792, -0.0022017541341483593, -0.0062983352690935135, -6.437280717364047e-06, -2.264974000354414e-06, -0.6166703104972839, -2.1586012840270996, -0.1588565707206726, -0.06708554923534393, -0.018162252381443977, -0.0008579387213103473, -0.0032131255138665438, -0.0005694198189303279, -0.000695344409905374, -0.015183348208665848, -0.01024782843887806, -0.09328365325927734, -0.0859990045428276, -6.079655122448457e-06, -0.0004625442670658231, -3.814689989667386e-06, -0.005182167049497366, -0.058720510452985764, -9.60780744208023e-05, -0.0009632238652557135, -0.0571264922618866, -0.010888212360441685, -0.0031653561163693666, -0.7361946105957031, -0.00056429672986269, -0.0004408579843584448, -0.003374123014509678, -0.0025158440694212914, -1.0545356273651123, -0.007785452529788017, -0.0018047487828880548, -0.00018916724366135895, -0.17230018973350525, -0.037348370999097824, -0.005487616173923016, -0.001095052808523178, -0.6388081908226013, -0.006162925623357296, -0.08854958415031433, -0.004856219980865717, -0.0008073169738054276, -2.4914430468925275e-05, -3.6954811548639555e-06, -0.0008528171456418931, -2.109982233378105e-05, -0.07740558683872223, -0.0007370378007180989, -2.3841574147809297e-05, -1.9073468138230965e-06, -0.0004040378553327173, -2.177474021911621, -0.345846027135849, -0.05522765964269638, -0.03166944161057472, -9.154854342341423e-05, -1.311301275563892e-06, -0.007060931995511055, -0.0031023728661239147, -0.00011634149996098131, -1.1920928244535389e-07, -0.0006101653561927378, -0.012289750389754772, -0.0013778250431641936, -1.0728830375228426e-06, -2.145764938177308e-06, -3.361645576660521e-05, -7.629365427419543e-06, -0.003556713927537203, -0.0027909635100513697, -0.0002812943421304226, -0.0010949337156489491, -0.20851024985313416, -7.271740287251305e-06, -4.410734163684538e-06, -0.036956463009119034, -5.507317473529838e-05, -0.0014584152959287167, -0.0004907834227196872, -0.06642350554466248, -1.7881377516459906e-06, -1.4424220353248529e-05, -6.079655122448457e-06, -0.009227722883224487, -0.002123126992955804, -0.00289152842015028, -0.00044764988706447184, -0.05249372497200966, -1.3708974620385561e-05, -5.483612312673358e-06, -1.1920928244535389e-07, -0.0077341157011687756, -0.004790377337485552, -0.0001784403866622597, -0.0009552444680593908, -0.14008404314517975, -0.03627784177660942, -0.006973452400416136, -2.1219027985353023e-05, -1.7881377516459906e-06, -2.3841855067985307e-07, -0.4927770793437958, -0.020062848925590515, -1.6970328092575073], "finish_reason": "stop"}], "metrics": {"energy": 490.3803243598936, "energy_per_token": 3.405418919165928, "time": 12.191216, "time_per_token": 0.08466122222222222}}
{"outputs": [{"text": "try:\n        if not os.path.exists(DEST_DIR):\n            os.makedirs(DEST_DIR)\n        files = glob.glob(os.path.join(ROOT_DIR, '*'))\n        counter = 0\n        for filename in files:\n            if filename.endswith('.DS_Store'):\n                continue\n            with open(filename, 'rb') as f:\n                file_hash = hashlib.md5(f.read())\n                if file_hash.hexdigest() == SPECIFIC_HASH:\n                    counter += 1\n                    shutil.move(filename, DEST_DIR)\n    except Exception as e:\n        print(\"An error has occured. Please check the parameters.\\nError: \", e)\n\n    return counter", "tokens": ["try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ")", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " '", "*", "'))", "\n", "        ", "counter", " =", " ", "0", "\n", "        ", "for", " filename", " in", " files", ":", "\n", "            ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "DS", "_", "Store", "')", ":", "\n", "                ", "continue", "\n", "            ", "with", " open", "(", "filename", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "md", "5", "(", "f", ".", "read", "())", "\n", "                ", "if", " file", "_", "hash", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "    ", "counter", " +=", " ", "1", "\n", "                ", "    ", "sh", "util", ".", "move", "(", "filename", ",", " DE", "ST", "_", "DIR", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "\"", "An", " error", " has", " occ", "ured", ".", " Please", " check", " the", " parameters", ".", "\\", "nError", ":", " \"", ",", " e", ")", "\n", "\n", "    ", "return", " counter", "\n", "\n", "if"], "logprobs": [-3.100376605987549, -0.0012386515736579895, -0.010658127255737782, -0.03558288514614105, -1.9327473640441895, -0.1844012290239334, -0.010254553519189358, -1.1324817933200393e-05, -0.0017190692014992237, -1.6331539882230572e-05, -0.1516607105731964, -0.0007233387441374362, -0.023802950978279114, -1.5497195136049413e-06, -6.6756979322235566e-06, -5.960446742392378e-06, -0.0015831567579880357, -0.03182811662554741, -0.007814313285052776, -0.07436469197273254, -1.2397689715726301e-05, -0.2895675301551819, -1.5616295058862306e-05, -1.2993727978027891e-05, -0.0002864189154934138, -0.0027500689029693604, -1.311301275563892e-06, -9.297892393078655e-05, -6.318072337307967e-06, -0.02110966667532921, -0.06109237298369408, -1.0395491123199463, -1.1489650011062622, -0.40472590923309326, -0.16771945357322693, -3.564294092939235e-05, -0.04223179072141647, -0.014664953574538231, -0.32410094141960144, -9.536738616588991e-07, -0.00020692592079285532, -4.529942543740617e-06, -0.0023242621682584286, -0.0005626287311315536, -0.0027224880177527666, -1.5139465176616795e-05, -2.145764938177308e-06, -0.0025164387188851833, -0.4211173355579376, -0.17033155262470245, -0.10714585334062576, -0.016655445098876953, -0.056182991713285446, -2.834139585494995, -0.03226451948285103, -0.006779170595109463, -0.0005847889697179198, -0.01880928874015808, -0.04591326788067818, -0.03665197268128395, -2.9759457111358643, -0.001313776709139347, -0.002224829513579607, -0.0003649522550404072, -0.0012944899499416351, -0.004215759225189686, -1.3542159795761108, -2.192343235015869, -0.20197300612926483, -0.19888947904109955, -5.924526340095326e-05, 0.0, -0.3909745216369629, -0.03194970637559891, -2.6682300567626953, -0.001443892833776772, -0.031338270753622055, -0.0004138090298511088, -0.12539976835250854, -0.08607218414545059, -0.0014278227463364601, -0.25431379675865173, -0.08082602918148041, -0.047623004764318466, -0.8380759358406067, -0.00031263710116036236, -0.0006822404102422297, -0.005966708529740572, -0.0034292482305318117, -0.07102886587381363, -0.009537134319543839, -0.0014121094718575478, -0.00014959646796341985, -0.48302826285362244, -0.05382813513278961, -0.002336869016289711, -0.0006158839096315205, -0.7405984401702881, -0.03259953856468201, -0.11584753543138504, -0.0020391400903463364, -0.0006081400788389146, -1.490105023549404e-05, -2.9802276912960224e-06, -0.0009716795175336301, -4.172316494077677e-06, -0.15416546165943146, -0.00040892345714382827, -1.2040065485052764e-05, -1.311301275563892e-06, -0.00032264748006127775, -1.815200686454773, -0.35878559947013855, -0.12216182053089142, -0.02561594732105732, -5.006777428206988e-06, -4.768370445162873e-07, -0.0016780118457973003, -0.0010369406081736088, -7.414542778860778e-05, -1.1920928244535389e-07, -0.0003962923656217754, -0.01892615295946598, -0.0016487350221723318, -5.960462772236497e-07, -1.1920922133867862e-06, -1.8954096958623268e-05, -1.1920922133867862e-06, -0.011832174845039845, -0.002373499097302556, -0.0002982171718031168, -0.0005571481888182461, -1.7602043151855469, -0.02054622210562229, -0.0055564953945577145, -7.760223525110632e-05, -0.0019209994934499264, -0.004310008604079485, -0.0013873485149815679, -0.13459408283233643, -1.3828182090946939e-05, -5.483612312673358e-06, -0.030922038480639458, -4.8040190449682996e-05, -0.005199007224291563, -0.0005127069307491183, -0.1914464384317398, -4.768370445162873e-07, -9.059865078597795e-06, -1.1920922133867862e-06, -0.01061861403286457, -0.00285206432454288, -1.7437392473220825, -0.013381550088524818, -0.39993515610694885, -0.06441228091716766, -0.14092876017093658, -0.0005977750988677144, -0.0074829524382948875, -0.004099062643945217, -0.30949872732162476, -0.11478155851364136, -1.7788581848144531, -1.1193161010742188, -0.058946654200553894, -3.033643960952759, -1.5979423522949219, -0.004447449930012226, -2.5393712520599365, -1.9311624765396118, -1.1271623373031616, -0.8943931460380554, -3.1222612857818604, -1.358511209487915, -2.947174072265625, -1.9432001113891602, -1.0182572603225708, -0.5115185976028442, -0.48697033524513245, -0.13189037144184113, -0.020373597741127014, -0.005329804494976997, -2.7663655281066895, -0.5668370127677917, -0.1026097759604454, -0.024898771196603775, -0.41702160239219666, -0.015933454036712646, -0.5457040667533875], "finish_reason": "stop"}], "metrics": {"energy": 637.8200803604127, "energy_per_token": 3.3747094198963636, "time": 15.985149, "time_per_token": 0.08457750793650794}}
{"outputs": [{"text": "# Create the destination directory if it doesn't exist\n    if not os.path.exists(DEST_DIR):\n        os.mkdir(DEST_DIR)\n    else:\n        # Delete all files in the destination directory\n        for file_name in os.listdir(DEST_DIR):\n            file_path = os.path.join(DEST_DIR, file_name)\n            if os.path.isfile(file_path):\n                os.remove(file_path)\n    files_count = 0  # Initialize a variable to count the number of files moved\n    # Iterate over all files in the root directory and subdirectories\n    for file_name in glob.glob(os.path.join(ROOT_DIR, '**', '*'), recursive=True):\n        if os.path.isfile(file_name):\n            # Calculate the MD5 hash of the file\n            md5 = hashlib.md5()\n            with open(file_name, 'rb') as f:\n                for chunk in iter(lambda: f.read(4096), b''):", "tokens": ["#", " Create", " the", " destination", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DE", "ST", "_", "DIR", ")", "\n", "    ", "else", ":", "\n", "        ", "#", " Delete", " all", " files", " in", " the", " destination", " directory", "\n", "        ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "DE", "ST", "_", "DIR", "):", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DE", "ST", "_", "DIR", ",", " file", "_", "name", ")", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "                ", "os", ".", "remove", "(", "file", "_", "path", ")", "\n", "    ", "files", "_", "count", " =", " ", "0", "  ", "#", " Initialize", " a", " variable", " to", " count", " the", " number", " of", " files", " moved", "\n", "    ", "#", " Iter", "ate", " over", " all", " files", " in", " the", " root", " directory", " and", " sub", "direct", "ories", "\n", "    ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " '", "**", "'", ",", " '", "*", "')", ",", " recursive", "=", "True", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "name", "):", "\n", "            ", "#", " Calculate", " the", " MD", "5", " hash", " of", " the", " file", "\n", "            ", "md", "5", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "with", " open", "(", "file", "_", "name", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "for", " chunk", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "'')", ":"], "logprobs": [-0.9781699180603027, -2.6657562255859375, -0.6598927974700928, -0.3836275041103363, -0.03284493461251259, -0.03382844850420952, -0.012340029701590538, -0.22755646705627441, -0.001587798586115241, -3.504691630951129e-05, -0.014051786623895168, -0.11896298825740814, -0.0035064660478383303, -0.4460581839084625, -0.011649910360574722, -0.0024974129628390074, -2.7418097943154862e-06, -0.0005168771021999419, -1.4185804502631072e-05, -0.04141515493392944, -0.000144709600135684, -0.0034601360093802214, -1.6689286894688848e-06, -1.2874520507466514e-05, -6.9141146923357155e-06, -0.0004144048143643886, -0.0018882793374359608, -0.004364844877272844, -0.01799975521862507, -7.986990567587782e-06, -2.4867475032806396, -0.0002810560108628124, -0.0009482178138568997, -0.0005889588501304388, 0.0, -3.2186455882765586e-06, -3.576278118089249e-07, -0.0005658455775119364, -0.00236160634085536, -2.5326430797576904, -2.4626529216766357, -0.0007893307483755052, -0.03701930120587349, -0.006927401293069124, -1.721423864364624, -2.208740234375, -0.9031671285629272, -0.48154810070991516, -0.19482465088367462, -0.1577633023262024, -0.10578630119562149, -0.02972993440926075, -0.6528368592262268, -0.0009810879128053784, -0.29474660754203796, -0.32964345812797546, -1.3878847360610962, -0.42002469301223755, -0.0032096796203404665, -0.39665305614471436, -4.994744449504651e-05, -0.0009827552130445838, -5.006777428206988e-06, -0.00031454383861273527, -0.001474485034123063, 0.0, -1.7881377516459906e-06, -2.3841830625315197e-06, -0.00013779645087197423, -0.0007509748684242368, -0.0024509173817932606, -0.3469330072402954, -0.018465518951416016, -0.001524953986518085, -0.0013108003186061978, -0.0025994342286139727, -3.576272320060525e-06, -0.00018702188390307128, -1.0728830375228426e-06, -0.00014125302550382912, -5.280832192511298e-05, -0.0010088359704241157, 0.0, -3.814689989667386e-06, -1.7881233361549675e-05, -0.00017307691450696439, -0.0028877246659249067, -3.135155202471651e-05, -3.933898824470816e-06, -9.262132516596466e-05, -0.0007184546557255089, -0.0065460060723125935, -0.11284534633159637, -0.004389176145195961, -1.311301275563892e-06, -0.00022015532886143774, -2.9802276912960224e-06, -0.007345809601247311, -0.009075225330889225, -0.0002858230145648122, -0.00021228920377325267, -5.8412379075889476e-06, -0.0003277718205936253, -0.01759796403348446, -0.002145728562027216, -0.0006865289760753512, -0.009845860302448273, -5.960462772236497e-07, -0.044701408594846725, -2.7417760065873154e-05, -0.0005451146862469614, -7.033323527139146e-06, -2.9682672902708873e-05, -0.0002731903805397451, -0.0006949870148673654, -2.1572375297546387, -2.555824041366577, -0.23102816939353943, -2.3677008152008057, -0.018094470724463463, -0.01822289079427719, -0.000491021724883467, -2.4876270294189453, -0.00014983485743869096, -0.8238939046859741, -0.557428777217865, -2.1190505027770996, -0.009143267758190632, -0.7066669464111328, -0.25922611355781555, -0.7781462073326111, -0.0003058442671317607, -0.1310424655675888, -0.13411560654640198, -0.03868718817830086, -0.14902621507644653, -0.9561053514480591, -1.6633552312850952, -0.009697116911411285, -0.4283260107040405, -0.32027384638786316, -0.3028647005558014, -0.11736661940813065, -0.10384396463632584, -0.3814293444156647, -0.013917069882154465, -1.3243436813354492, -1.594548225402832, -0.07254557311534882, -0.00013159839727450162, -0.052922673523426056, -0.00129270413890481, -0.04118306562304497, -0.5524320602416992, -0.10016840696334839, -1.2544429302215576, -0.0016346914926543832, -0.15307892858982086, -2.3007127310847864e-05, -0.6172378659248352, -0.007723824121057987, -1.2629163265228271, -4.0531076592742465e-06, -0.00016675988445058465, -6.437280717364047e-06, -0.0033424007706344128, -0.0008515069494023919, -0.0014287750236690044, -6.9141146923357155e-06, -2.0265558760002023e-06, -0.002672554925084114, -0.14074693620204926, -0.007774688303470612, -0.5432652235031128, -0.00019393471302464604, -0.0031973214354366064, -0.0009840651182457805, -0.07909276336431503, -0.0001854724541772157, -0.002946561435237527, -0.0016991952434182167, -0.0003985564399044961, -0.001347825163975358, -0.0024491334334015846, -0.008147693239152431, -0.7255153656005859, -0.07291768491268158, -3.4570634852570947e-06, -0.00018499570433050394, -9.536738616588991e-07, -0.00042429505265317857, -0.005587317515164614, -0.00013374387344811112, -0.0008006466086953878, -4.0531076592742465e-06, -2.5987286790041253e-05, -0.008294775150716305, -0.5356255769729614, -0.0028385131154209375, -0.6197362542152405, -0.09802892059087753, -0.07156246900558472, -0.13993211090564728, -0.000270091783022508, -0.0069394768215715885, -0.03382764384150505, -0.09283658862113953, -0.10703489929437637, -0.09379032254219055, -0.0003307510633021593, -0.675699770450592, -0.0031390937510877848, -2.4662554264068604, -0.003966679330915213, -0.0002131234941771254, -6.318072337307967e-06, -0.005963390693068504, -2.50339189733495e-06, -0.018197020515799522, -0.08023903518915176, -0.0019452712731435895, -0.03862399235367775, -0.00012146688823122531, -8.082063141046092e-05, -0.0010162194957956672, -2.50339189733495e-06, -7.152555099310121e-07, -0.00010334911348763853, -0.06982406973838806, -0.0015699454816058278, -7.879423355916515e-05, -9.989239333663136e-05, -0.4081706702709198, -0.025008879601955414, -0.004852067679166794, -0.0003313469351269305, -0.3868052661418915, -0.12656143307685852, -6.770858453819528e-05, -0.0030091977678239346, -3.731181277544238e-05, -0.0008041008841246367, -0.0007569308509118855, -0.00018904806347563863, -1.2040065485052764e-05, -5.006777428206988e-06, -0.0014106809394434094, -0.1809442788362503, -0.00047052756417542696, -0.0002942844294011593, -5.578839045483619e-05, -0.005964220035821199, -2.610649426060263e-05, -0.004160202573984861, -0.19313186407089233, -6.794906312279636e-06], "finish_reason": "length"}], "metrics": {"energy": 870.8059049549107, "energy_per_token": 3.40158556623012, "time": 21.861277, "time_per_token": 0.08539561328125}}
{"outputs": [{"text": "os.makedirs(DEST_DIR, exist_ok=True)\n    count = 0\n    for file in glob.glob(f\"{ROOT_DIR}/**/*\", recursive=True):\n        md5_hash = hashlib.md5()\n        with open(file, \"rb\") as f:\n            for byte_block in iter(lambda: f.read(4096), b\"\"):\n                md5_hash.update(byte_block)\n        if md5_hash.hexdigest() == SPECIFIC_HASH:\n            shutil.move(file, DEST_DIR)\n            count += 1\n    return count", "tokens": ["os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "f", "\"", "{", "ROOT", "_", "DIR", "}/", "**", "/*", "\"", ",", " recursive", "=", "True", "):", "\n", "        ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "        ", "with", " open", "(", "file", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "            ", "for", " byte", "_", "block", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "md", "5", "_", "hash", ".", "update", "(", "byte", "_", "block", ")", "\n", "        ", "if", " md", "5", "_", "hash", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "            ", "count", " +=", " ", "1", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-1.9333806037902832, -0.0005990855861455202, -0.025382021442055702, -3.6954811548639555e-06, -3.814689989667386e-06, -0.00017557987303007394, -0.012103093788027763, -7.152531907195225e-06, -7.748573807475623e-06, -3.4570634852570947e-06, -0.011737452819943428, -0.0056714811362326145, -6.198863957251888e-06, -5.602820692729438e-06, -0.0166294164955616, -0.0021052833180874586, -0.000395815703086555, -0.1972639411687851, -0.31592974066734314, -2.1958200931549072, -0.1246604397892952, -0.006600365042686462, -8.284702198579907e-05, -0.02237398736178875, -0.12282098084688187, -0.16277915239334106, -0.4266161322593689, -0.6619334816932678, -0.046833399683237076, -4.136476854910143e-05, -0.21936406195163727, -0.004917195066809654, -1.452976107597351, -0.37685608863830566, -0.00201094476506114, -0.00939401425421238, -4.6491513785440475e-06, -2.861018856492592e-06, -0.9967909455299377, -0.01145146694034338, -0.24114246666431427, -0.15475444495677948, -0.007934953086078167, -0.0010065733222290874, -0.002976513234898448, -0.0013322297018021345, -0.0020839895587414503, -0.008161881938576698, -0.008660850115120411, -3.225722074508667, -0.002257063053548336, -0.15733224153518677, -0.01046043075621128, -0.014743070118129253, -0.021864088252186775, -0.0007483542431145906, -2.1576648578047752e-05, -0.0032503176480531693, -2.50339189733495e-06, -0.22417280077934265, -0.007567429915070534, -0.022236889228224754, -0.11447340250015259, -0.00044252615771256387, -0.00012778419477399439, -0.002183436183258891, -0.0005417786305770278, -0.28276580572128296, -0.008806084282696247, -1.680836794548668e-05, -0.0003163314249832183, -0.0001461399078834802, -0.054281122982501984, -0.024600589647889137, -0.0026257107965648174, -0.000874851830303669, -0.22908130288124084, -0.22525018453598022, -0.056656092405319214, -5.173549288883805e-05, -1.9430925021879375e-05, -0.010603870265185833, -1.5735502529423684e-05, -0.004569208715111017, -0.00024875884992070496, -0.000163541772053577, -1.1444026313256472e-05, -1.7881377516459906e-06, -0.001157209975644946, -0.00857232790440321, -0.00030632095877081156, -0.00027533553657121956, -8.296622399939224e-05, -0.0008041008841246367, -2.7179348762729205e-05, -0.002648419700562954, -0.0007597897201776505, -7.152555099310121e-07, -3.933898824470816e-06, -0.0024473497178405523, -0.0002817710628733039, -0.0008345934911631048, -7.510157047363464e-06, -1.2516897186287679e-05, -1.8715683836489916e-05, -6.460934673668817e-05, -3.576278118089249e-07, -1.4066597032069694e-05, -0.0009014118695631623, -1.6689286894688848e-06, 0.0, -1.847726889536716e-05, -0.00029023250681348145, -0.24739496409893036, -0.07196223735809326, -0.02058674581348896, -2.7418097943154862e-06, -7.033323527139146e-06, -3.933898824470816e-06, -0.0010718321427702904, -0.0006283930852077901, -7.510157047363464e-06, 0.0, -0.0004967409186065197, -0.011924177408218384, -0.0009847796754911542, -5.960462772236497e-07, -1.0728830375228426e-06, -5.722029527532868e-06, -3.6954811548639555e-06, -0.010107405483722687, -0.0018563910853117704, -0.0011251792311668396, -0.32002344727516174, -1.3947389561508317e-05, -4.6491513785440475e-06, -0.02281021885573864, -4.0411134250462055e-05, -0.004129811190068722, -0.0007258402765728533, -0.04989315941929817, -3.576278118089249e-07, -1.1444026313256472e-05, -3.814689989667386e-06, -0.008512166328728199, -0.002202943665906787, -0.0025127525441348553, -0.027827700600028038, -0.011957748793065548, -0.0020673349499702454, -9.679325739853084e-05, -0.0008780676289461553, -0.10015783458948135, -0.04608791321516037, -0.0044149309396743774, -0.4194883406162262, -0.013415778987109661, -0.7053222060203552], "finish_reason": "stop"}], "metrics": {"energy": 543.6134562873841, "energy_per_token": 3.4405914954897727, "time": 13.2512, "time_per_token": 0.08386835443037975}}
{"outputs": [{"text": "if not os.path.isdir(DEST_DIR):\n        os.mkdir(DEST_DIR)\n\n    files_moved = 0\n    for filepath in glob.glob(os.path.join(ROOT_DIR, '*')):\n        # print(f\"Checking: {filepath}\")\n        if os.path.isfile(filepath):\n            hash_object = hashlib.md5()\n            with open(filepath, \"rb\") as file:\n                # read the file in chunks to avoid loading the entire file into memory\n                chunk_size = 1024  # adjust the chunk size as needed\n                while chunk := file.read(chunk_size):\n                    hash_object.update(chunk)\n\n            md5_hash = hash_object.hexdigest()\n            # print(f\"MD5 hash: {md5_hash}\")\n            if md5_hash == SPECIFIC_HASH:\n                file_name = os.path.basename(filepath)\n                shutil.move(filepath, os.path.join(DEST", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DE", "ST", "_", "DIR", ")", "\n", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", "path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " '", "*", "'))", ":", "\n", "        ", "#", " print", "(", "f", "\"", "Check", "ing", ":", " {", "file", "path", "}\"", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "path", "):", "\n", "            ", "hash", "_", "object", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "with", " open", "(", "file", "path", ",", " \"", "rb", "\"", ")", " as", " file", ":", "\n", "                ", "#", " read", " the", " file", " in", " chunks", " to", " avoid", " loading", " the", " entire", " file", " into", " memory", "\n", "                ", "chunk", "_", "size", " =", " ", "1", "0", "2", "4", "  ", "#", " adjust", " the", " chunk", " size", " as", " needed", "\n", "                ", "while", " chunk", " :=", " file", ".", "read", "(", "chunk", "_", "size", "):", "\n", "                ", "    ", "hash", "_", "object", ".", "update", "(", "chunk", ")", "\n", "\n", "            ", "md", "5", "_", "hash", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "\n", "            ", "#", " print", "(", "f", "\"", "MD", "5", " hash", ":", " {", "md", "5", "_", "hash", "}\"", ")", "\n", "            ", "if", " md", "5", "_", "hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "path", ")", "\n", "                ", "sh", "util", ".", "move", "(", "file", "path", ",", " os", ".", "path", ".", "join", "(", "DE", "ST"], "logprobs": [-1.9198689460754395, -0.12416959553956985, -0.01746349036693573, -1.9550132492440753e-05, -0.001149827498011291, -2.7179348762729205e-05, -2.05721378326416, -0.003391112433746457, -0.0003083468764089048, -0.038025807589292526, -7.152555099310121e-07, -8.702239938429557e-06, -1.4305104514278355e-06, -0.0017651228699833155, -0.039421822875738144, -0.015030582435429096, -0.07945507019758224, -1.883488948806189e-05, -0.7469719052314758, -6.5205356804654e-05, -0.001061352901160717, -0.0018086755881085992, 0.0, -6.794906312279636e-06, -2.3841830625315197e-06, -0.0020573418587446213, -0.036974843591451645, -0.5963075757026672, -0.001396753010340035, -1.2816064357757568, -0.7009495496749878, -1.1722643375396729, -0.0007943335804156959, -0.10969526320695877, -0.019365645945072174, -4.1960789531003684e-05, -0.016974052414298058, -0.3406417965888977, -0.20964263379573822, -0.47432011365890503, -2.1018013954162598, -0.016909589990973473, -0.016445444896817207, -6.508615479106084e-05, -0.3639906048774719, -0.008132913149893284, -0.46473968029022217, -1.1920922133867862e-06, -0.0022697895765304565, -1.4185804502631072e-05, -0.0033696084283292294, -0.001512932125478983, -0.003641642164438963, -6.318072337307967e-06, -5.8412379075889476e-06, -0.0034644128754734993, -0.3955534100532532, -0.5092621445655823, -0.10581793636083603, -0.0005012686015106738, -0.01121809333562851, -0.01678076758980751, -3.4329729080200195, -3.5190012454986572, -0.13673368096351624, -1.57350754737854, -0.42286327481269836, -1.7579319477081299, -0.013165920972824097, -2.3475418090820312, -0.06334438920021057, -0.06862371414899826, -0.005377708002924919, -0.08219554275274277, -0.013237920589745045, -0.09548347443342209, -0.08132223039865494, -1.3010636568069458, -0.38365837931632996, -2.2649508537142538e-05, -0.002146204235032201, -8.22540732769994e-06, -0.0184052474796772, -0.234486922621727, -0.0003274143091402948, -0.0014804366510361433, -2.5629668016335927e-05, -0.04005387797951698, -0.013359436765313148, -0.009161576628684998, -2.9142887592315674, -0.18655438721179962, -0.7847126126289368, -0.0013510395074263215, -0.0024302254896610975, -9.83428253675811e-05, -1.3232143828645349e-05, -0.0010580186499282718, -7.390948667307384e-06, -0.1551978439092636, -0.008971145376563072, -0.042511165142059326, -0.09382656961679459, -0.00018916724366135895, -0.00014053787162993103, -0.0026203603483736515, -2.9444261599564925e-05, -0.0003104920033365488, -0.9613949060440063, -0.0016689670737832785, -3.099393507000059e-05, -0.0014116332167759538, -0.0001515035255579278, -0.55451500415802, -0.18181999027729034, -0.0018154582940042019, -0.0008885487914085388, -2.001323938369751, -1.657665491104126, -1.5674512386322021, -0.2549925446510315, -0.364768385887146, -0.16745461523532867, -0.18154862523078918, -0.35150957107543945, -1.6483752727508545, -0.3298006057739258, -0.39833128452301025, -0.005627266597002745, -0.05654130131006241, -0.0027690897695720196, -0.2381950318813324, -0.00044800734031014144, -2.175124406814575, -1.5214923620224, -0.00231284461915493, -0.0009090343955904245, -0.004889554809778929, -1.4743248224258423, -0.059033751487731934, -0.031687114387750626, -0.00019703354337252676, -1.7211247682571411, -4.768360213347478e-06, -1.7147356271743774, -0.42896416783332825, -0.02205919288098812, -0.0014925779541954398, -0.12150485813617706, -0.09563624113798141, -0.011831703595817089, -0.008744518272578716, -0.20261150598526, -0.24674642086029053, -0.0017924923449754715, -0.0001902399235405028, -4.494089080253616e-05, -5.245195097813848e-06, -4.351044481154531e-05, -0.0004532501916401088, -2.50339189733495e-06, 0.0, -0.00019226610311307013, -0.002758747199550271, -6.90197994117625e-05, -0.0009690594743005931, -0.030896149575710297, -7.152531907195225e-06, -4.649054244509898e-05, -2.1576648578047752e-05, -1.0728830375228426e-06, -2.372236667724792e-05, -0.0006287504802457988, -0.0010093123419210315, -0.0011439929949119687, -1.2661564350128174, -0.09854841977357864, -2.0522685050964355, -0.0019023193744942546, -0.026615997776389122, -0.049449753016233444, -0.007977173663675785, -0.0014609150821343064, -4.0411134250462055e-05, -3.1709168979432434e-05, -6.389413465512916e-05, -0.001426989445462823, -7.152531907195225e-06, 0.0, -0.0001062098381225951, -0.011268779635429382, -0.18399041891098022, -0.7637714147567749, -0.05339901149272919, -0.004330661613494158, -0.1303575187921524, -0.013474470004439354, -1.0246282815933228, -0.0009041512385010719, -0.6943663954734802, -0.3360847234725952, -0.003736895974725485, -0.015168554149568081, -1.823885577323381e-05, -0.0014072287594899535, -5.3165931603871286e-05, -0.018534446135163307, -0.0017986800521612167, -0.00435095839202404, -0.4534321427345276, -0.05556601285934448, -0.020624931901693344, -4.887569048150908e-06, -2.622600959512056e-06, 0.0, -0.015451014041900635, -0.0015301911626011133, -5.960462772236497e-07, -1.311301275563892e-06, -6.079655122448457e-06, -2.50339189733495e-06, -0.006534162908792496, -0.00547291524708271, -0.0011628062929958105, -3.6693778038024902, -0.08320017158985138, -0.22075307369232178, -0.00989224947988987, -0.009724742732942104, -1.5497195136049413e-06, -1.3232143828645349e-05, -1.4305104514278355e-06, -0.017396245151758194, -1.1920928244535389e-07, -1.8000440832111053e-05, -0.0009259465732611716, -0.00015567521040793508, -0.0005229535745456815, -0.006271799560636282, -0.004843407776206732, -1.1736055612564087, -4.160317621426657e-05, -6.079655122448457e-06, -0.07128165662288666, -0.0001212284987559542, -0.014171089045703411, -0.006236970890313387, -0.00015364897262770683, -0.02688642404973507, -4.529942543740617e-06, -1.5258672647178173e-05, -7.152555099310121e-07, -0.0004668337933253497, -9.595887240720913e-05, -0.008808565326035023, -3.576278118089249e-07], "finish_reason": "length"}], "metrics": {"energy": 869.9378150558472, "energy_per_token": 3.398194590061903, "time": 21.86361, "time_per_token": 0.0854047265625}}
{"outputs": [{"text": "# Ensure the existence of the DEST_DIR\n    os.makedirs(DEST_DIR, exist_ok=True)\n\n    files_to_move = []\n    for file_name in os.listdir(ROOT_DIR):\n        file_path = os.path.join(ROOT_DIR, file_name)\n        if os.path.isfile(file_path):\n            with open(file_path, 'rb') as file:\n                file_hash = hashlib.md5()\n                file_hash.update(file.read())\n                current_hash = file_hash.hexdigest()\n\n            if current_hash == SPECIFIC_HASH:\n                files_to_move.append(file_name)\n\n    for file_name in files_to_move:\n        src_path = os.path.join(ROOT_DIR, file_name)\n        dst_path = os.path.join(DEST_DIR, file_name)\n\n        shutil.move(src_path, dst_path)\n\n    return len(files_to_move)", "tokens": ["#", " Ensure", " the", " existence", " of", " the", " DE", "ST", "_", "DIR", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "files", "_", "to", "_", "move", " =", " []", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "ROOT", "_", "DIR", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " file", "_", "name", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "                ", "file", "_", "hash", ".", "update", "(", "file", ".", "read", "())", "\n", "                ", "current", "_", "hash", " =", " file", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "if", " current", "_", "hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "files", "_", "to", "_", "move", ".", "append", "(", "file", "_", "name", ")", "\n", "\n", "    ", "for", " file", "_", "name", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "src", "_", "path", " =", " os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " file", "_", "name", ")", "\n", "        ", "dst", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DE", "ST", "_", "DIR", ",", " file", "_", "name", ")", "\n", "\n", "        ", "sh", "util", ".", "move", "(", "src", "_", "path", ",", " dst", "_", "path", ")", "\n", "\n", "    ", "return", " len", "(", "files", "_", "to", "_", "move", ")", "\n", "\n", "if"], "logprobs": [-0.9781699180603027, -0.6535950303077698, -0.9812452793121338, -1.8676241636276245, -0.0028630003798753023, -0.3830207884311676, -1.4119141101837158, -0.00010692501382436603, -0.039020176976919174, -0.0014997198013588786, -0.601775586605072, -0.0031421834137290716, -0.7692716717720032, -0.00011801023356383666, -0.003781431820243597, -1.0728830375228426e-06, -1.5497195136049413e-06, -9.738924563862383e-05, -0.013197450898587704, -3.933898824470816e-06, -5.2927523938706145e-05, -5.364403477869928e-06, -0.005810276139527559, -0.002314152894541621, -5.722029527532868e-06, -1.1324817933200393e-05, -0.011866691522300243, -0.0008694920688867569, -0.00036793138133361936, -0.008984732441604137, -0.27980390191078186, -0.0002933310461230576, -2.2082905769348145, -0.27564308047294617, -1.616204857826233, -0.00018249277491122484, -0.08832839876413345, -0.012647302821278572, -0.8072700500488281, -0.03604363650083542, -0.3487135171890259, -0.30513423681259155, -0.6018684506416321, -0.7135933041572571, -1.6135082244873047, -0.002078041434288025, -0.804591715335846, -4.95898348162882e-05, -0.002776816952973604, 0.0, -0.0003424296446610242, -0.0018850667402148247, -8.344646857949556e-07, -3.576278118089249e-07, -0.00040737437666393816, -0.005500657483935356, -0.006007234565913677, -0.5344638228416443, -0.010132069699466228, -0.008251149207353592, -0.0023606547620147467, -0.009554019197821617, -5.960462772236497e-07, -0.0001174142598756589, -7.629365427419543e-06, -0.0014549632323905826, -5.6980417866725475e-05, -0.0005463061388581991, -7.152555099310121e-07, -1.764281842042692e-05, -0.00010227633902104571, -0.0015804193681105971, -4.410734163684538e-06, -2.3841855067985307e-07, -0.00016246906307060272, -0.0025467602536082268, -0.11543285846710205, -0.10427936911582947, -0.08632700145244598, -5.364403477869928e-06, -0.0010452766437083483, -5.960462772236497e-07, -0.002374093746766448, -0.016419177874922752, -0.00019202772818971425, -0.00023993951617740095, -1.4305104514278355e-06, -0.00020239688456058502, -0.05595734715461731, -0.008857247419655323, -0.004028064664453268, -0.3663208484649658, -0.00011455356434453279, -0.0001908358681248501, -0.0007859955076128244, -2.622600959512056e-06, -0.0005720409681089222, -0.0015286438865587115, -0.49446621537208557, -0.005960902199149132, -0.0005227153305895627, -7.593343616463244e-05, -1.0153274536132812, -0.061404310166835785, -0.0017872564494609833, -0.0005486889858730137, -0.4062916934490204, -0.0004897110629826784, -0.45728859305381775, -0.0024888513144105673, -0.0005640584276989102, -2.3007127310847864e-05, -4.529942543740617e-06, -0.001019792165607214, -6.437280717364047e-06, -1.8701221942901611, -0.04535508528351784, -0.0006566275842487812, -0.37149757146835327, -0.0028385131154209375, -0.0040730624459683895, -0.00017975145601667464, -5.125986263010418e-06, -0.0001370812824461609, -0.0006403064471669495, -0.00014911970356479287, -5.602820692729438e-06, -0.001492696930654347, -0.0030164476484060287, -0.024230415001511574, -3.297199010848999, -0.0018197420286014676, -0.028086671605706215, -0.008690749295055866, -0.0009059377480298281, -1.1920858014491387e-05, -9.417489309271332e-06, -0.00011050090688513592, -0.004643016029149294, -1.5616295058862306e-05, 0.0, -4.3748852476710454e-05, -0.004900587256997824, -1.5281380414962769, -0.36944302916526794, -0.026959877461194992, -0.01681499555706978, -3.814689989667386e-06, -9.298280929215252e-06, -0.01356102991849184, -0.0006473353132605553, -1.5497195136049413e-06, -1.311301275563892e-06, -2.3841830625315197e-06, -1.0371154530730564e-05, -0.0021925950422883034, -0.0025506841484457254, -0.0005797850899398327, -0.12208437919616699, -3.933898824470816e-06, -2.7418097943154862e-06, -1.1920928244535389e-07, -9.65590606938349e-06, -0.00031192204914987087, -0.0010681406129151583, -0.02546488307416439, -0.006817888002842665, -0.00018988236843142658, -1.112914800643921, -0.0002748588449321687, -0.0017535799415782094, -0.10050364583730698, -0.005635327193886042, -0.626982569694519, -0.01994074136018753, -0.01952827349305153, -0.036810435354709625, -0.0018789985915645957, -0.003522265236824751, -4.768360213347478e-06, -1.1920928244535389e-07, 0.0, -4.410734163684538e-06, -0.00033456450910307467, -0.00035232058144174516, -0.0017314456636086106, -2.244939088821411, -0.37586918473243713, -0.5269655585289001, -0.0008803306263871491, -0.002688367385417223, -1.6689286894688848e-06, -1.7523612768854946e-05, -2.861018856492592e-06, -0.0006579380133189261, -8.785339014139026e-05, -0.0004306104383431375, -8.344646857949556e-07, -2.622600959512056e-06, -3.969590397900902e-05, -0.0006353028584271669, -1.0013530300057027e-05, -2.1457441107486375e-05, -0.00010513706365600228, -0.0021792729385197163, -0.001420085085555911, -0.6859177350997925, -0.0003000047872774303, -0.00046492734691128135, -0.00016306500765495002, -0.004685969091951847, -1.0728830375228426e-06, -6.198863957251888e-06, -1.1920928244535389e-07, -0.00023827097902540118, -0.0001760566228767857, -0.0019900058396160603, -3.576278118089249e-07, -2.264974000354414e-06, -1.1920922133867862e-06, -0.0013872295385226607, -0.009427433833479881, -5.125986263010418e-06, -8.67805938469246e-05, -0.00154292699880898, -0.0005920564290136099, -2.217212200164795, -0.00262880208902061, -0.6899294257164001, -4.172316494077677e-06, -1.2397689715726301e-05, -0.027610410004854202, -4.434487345861271e-05, -0.0007774191326461732, -0.0006700892699882388, -1.5497195136049413e-06, -9.536288416711614e-05, -0.0017409658757969737, -8.702239938429557e-06, -5.960462772236497e-07, -0.017215579748153687, -0.008997255004942417, -0.09154227375984192, -0.022783303633332253, -0.08013957738876343, -0.009900984354317188, -9.548207890475169e-05, -0.0006033745594322681, -2.062299427052494e-05, -7.152531907195225e-06, -4.768370445162873e-07, -3.0636318115284666e-05, -0.13955923914909363, -0.15609446167945862, -0.009812099859118462, -0.7530203461647034], "finish_reason": "stop"}], "metrics": {"energy": 888.5776342868805, "energy_per_token": 3.471006383933127, "time": 21.862474, "time_per_token": 0.0854002890625}}
{"outputs": [{"text": "# Ensure the destination directory exists\n    if not os.path.exists(DEST_DIR):\n        os.makedirs(DEST_DIR)\n\n    # Initialize a counter for the number of moved files\n    count = 0\n\n    # Loop through all files in the root directory\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            # Calculate the MD5 hash of the file\n            md5_hash = hashlib.md5()\n            with open(filename, 'rb') as file:\n                for chunk in iter(lambda: file.read(4096), b''):\n                    md5_hash.update(chunk)\n            file_hash = md5_hash.hexdigest()\n\n            # Check if the file has the specific MD5 hash\n            if file_hash == SPECIFIC_HASH:\n                # Move the file to the destination directory\n                shutil.move(filename, DEST_DIR)\n                # Increment the count\n                count += 1\n\n    return count", "tokens": ["#", " Ensure", " the", " destination", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ")", "\n", "\n", "    ", "#", " Initialize", " a", " counter", " for", " the", " number", " of", " moved", " files", "\n", "    ", "count", " =", " ", "0", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " the", " root", " directory", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " '", "*", "'))", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "filename", "):", "\n", "            ", "#", " Calculate", " the", " MD", "5", " hash", " of", " the", " file", "\n", "            ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "with", " open", "(", "filename", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "for", " chunk", " in", " iter", "(", "lambda", ":", " file", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "'')", ":", "\n", "                ", "    ", "md", "5", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "            ", "file", "_", "hash", " =", " md", "5", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "#", " Check", " if", " the", " file", " has", " the", " specific", " MD", "5", " hash", "\n", "            ", "if", " file", "_", "hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "#", " Move", " the", " file", " to", " the", " destination", " directory", "\n", "                ", "sh", "util", ".", "move", "(", "filename", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "#", " In", "crement", " the", " count", "\n", "                ", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " count"], "logprobs": [-0.9781699180603027, -0.6535950303077698, -0.9812452793121338, -0.5613077878952026, -0.028118662536144257, -0.02112600766122341, -0.4842430353164673, -0.0025321345310658216, -0.7516773343086243, -0.023591769859194756, -0.002846239833161235, -2.8371408916427754e-05, -0.0004975749761797488, -2.062299427052494e-05, -0.0665176510810852, -0.00024423000286333263, -0.003339549293741584, -1.7881377516459906e-06, -5.960446742392378e-06, -7.629365427419543e-06, -0.000821014866232872, -0.0030220337212085724, -0.0048182569444179535, -0.017770715057849884, -1.1205610462639015e-05, -0.05947427824139595, -1.1324817933200393e-05, -4.625213477993384e-05, -0.00012766500003635883, -0.0008505540899932384, -5.960462772236497e-07, -6.6756979322235566e-06, -1.4305104514278355e-06, -0.01154798362404108, -0.005097962450236082, -0.08315607905387878, -0.0010003806091845036, -0.2966698110103607, -1.7252246141433716, -0.5340346693992615, -0.28153935074806213, -0.3267665207386017, -0.7593334913253784, -0.17449475824832916, -0.0006643710657954216, -2.4200174808502197, -0.0019909576512873173, -0.01487791072577238, -0.00013779645087197423, -2.062828540802002, -0.149251326918602, -0.0006006343755871058, -7.116541382856667e-05, -0.0009204680100083351, -0.024286845698952675, -0.00023266946664080024, -0.01896323263645172, -1.5747469663619995, -0.33789941668510437, -0.1346936970949173, -0.25682520866394043, -0.07981977611780167, -0.09349396824836731, -0.2279731035232544, -0.005239920224994421, -0.4016174376010895, -0.0003922408213838935, -0.06419720500707626, -2.0677590370178223, -0.0017174031818285584, -0.0985635444521904, -2.13382354559144e-05, -0.13781899213790894, -0.0036109976936131716, -0.19699320197105408, -2.264974000354414e-06, -4.3987260141875595e-05, -3.3378546504536644e-06, -0.0008201810996979475, -0.00040534863364882767, -0.0006940339808352292, -1.0967194612021558e-05, -2.264974000354414e-06, -0.0013390155509114265, -0.34538981318473816, -0.21823354065418243, -0.05174814537167549, -0.0002087136817863211, -0.003141232766211033, -0.12915250658988953, -1.402558445930481, -0.13230349123477936, -2.264974000354414e-06, -0.00015424491721205413, -2.622600959512056e-06, -0.0013218722306191921, -0.03202960267663002, -0.00012683063687290996, -0.0005670370301231742, -0.004945189692080021, -0.05106057599186897, -0.026949087157845497, -0.16886210441589355, -0.11309865117073059, -0.075702965259552, -0.11360262334346771, -9.905801562126726e-05, -0.003982946276664734, -0.02681180275976658, -0.0445135198533535, -0.0663590282201767, -0.08898743987083435, -0.0003449321957305074, -0.48334723711013794, -0.0022320852149277925, -0.0979781225323677, -0.0029503649566322565, -0.0035614653024822474, -0.026850100606679916, -0.0010380124440416694, -8.22540732769994e-06, -0.0007678897818550467, -1.4305104514278355e-06, -0.08704178780317307, -0.005305970553308725, -0.024036897346377373, -0.011529717594385147, -3.576214658096433e-05, -9.274052717955783e-05, -0.0006132629350759089, -0.00011598391574807465, -0.3407365083694458, -0.0011892396723851562, -0.00013100242358632386, -5.221230458118953e-05, -1.026997685432434, -0.016930803656578064, -0.0005122303264215589, -0.0005881248507648706, -0.3528560996055603, -0.30890247225761414, -1.9907753085135482e-05, -0.006272391881793737, -3.7431014789035544e-05, -0.00026222606538794935, -0.0005016260547563434, -0.0004287039046175778, -1.7881233361549675e-05, -4.291525328881107e-06, -0.0009330924949608743, -0.11465082317590714, -0.00016711745411157608, -0.00015746307326480746, -2.706014311115723e-05, -0.001341991825029254, -2.2291887944447808e-05, -0.002371834125369787, -0.21772758662700653, -8.4638240878121e-06, -0.0030499629210680723, -3.40932747349143e-05, -0.0004444326623342931, -0.00036554806865751743, -9.536738616588991e-07, -2.95634672511369e-05, -1.311301275563892e-06, -1.6212332411669195e-05, -4.768370445162873e-07, -1.2993727978027891e-05, -4.6491513785440475e-06, -7.462222856702283e-05, -8.010543388081715e-05, -1.4547677040100098, -0.7919022440910339, -0.02905970625579357, -0.03459441289305687, -0.003802926978096366, -0.0008283997885882854, -5.960462772236497e-07, -4.172316494077677e-06, 0.0, -8.093983342405409e-05, -0.0013985387049615383, -2.622600959512056e-06, 0.0, -2.0146166207268834e-05, -0.002472441177815199, -0.0647318959236145, -0.002009992953389883, -0.026140892878174782, -1.39667809009552, -0.003446711925789714, -0.016142738983035088, -1.0582897663116455, -2.846487522125244, -0.0753011479973793, -0.4880988895893097, -2.418414354324341, -2.8371408916427754e-05, -0.0018741200910881162, -0.619672417640686, -0.0002212279650848359, -0.012934830039739609, -0.0063003492541611195, -9.536697689327411e-06, -9.536738616588991e-07, -0.0076824212446808815, -0.0006127863889560103, -1.0728830375228426e-06, -1.0728830375228426e-06, -3.4570634852570947e-06, -4.768370445162873e-07, -0.0018218838376924396, -0.0006310140597634017, -0.001459962804801762, -0.0832938477396965, -0.07517620921134949, -0.00545252300798893, -0.0022500455379486084, -0.11992978304624557, -0.0037338081747293472, -0.11678075045347214, -0.008012533187866211, -0.0590139701962471, -0.00032443503732793033, -0.04852714389562607, -5.722029527532868e-06, -1.5497195136049413e-06, -0.003918470814824104, -1.2159273865108844e-05, -0.0012256737099960446, -0.0001003691868390888, -0.3281586766242981, 0.0, -8.940656698541716e-06, -7.998623186722398e-05, -0.006838134024292231, -0.0006805725861340761, -0.11658705025911331, -1.5734871625900269, -0.08545093983411789, -0.0002019201492657885, -0.0049049765802919865, -1.439098834991455, -0.5655573010444641, -0.0003381395654287189, -0.0006269635050557554, -0.005090964958071709, -0.0005894353962503374, -5.066266385256313e-05, -0.0009195152088068426, -0.11746922880411148, -0.004473322071135044, -1.0172772407531738, -0.0021858150139451027], "finish_reason": "stop"}], "metrics": {"energy": 866.530127635956, "energy_per_token": 3.398157363278259, "time": 21.654287, "time_per_token": 0.08491877254901961}}
{"outputs": [{"text": "os.makedirs(DEST_DIR, exist_ok=True)\n    files = glob.glob(os.path.join(ROOT_DIR, '**/*.*'), recursive=True)\n    num_files_moved = 0\n    for file_path in files:\n        if os.path.isfile(file_path):\n            with open(file_path, 'rb') as file:\n                file_hash = hashlib.md5(file.read())\n            if file_hash.hexdigest() == SPECIFIC_HASH:\n                shutil.move(file_path, os.path.join(DEST_DIR, os.path.basename(file_path)))\n                num_files_moved += 1\n    return num_files_moved", "tokens": ["os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " '", "**", "/*", ".", "*", "')", ",", " recursive", "=", "True", ")", "\n", "    ", "num", "_", "files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " files", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "md", "5", "(", "file", ".", "read", "())", "\n", "            ", "if", " file", "_", "hash", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " os", ".", "path", ".", "join", "(", "DE", "ST", "_", "DIR", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")))", "\n", "                ", "num", "_", "files", "_", "m", "oved", " +=", " ", "1", "\n", "    ", "return", " num", "_", "files", "_", "m", "oved", "\n", "\n", "if"], "logprobs": [-1.9333806037902832, -0.0005990855861455202, -0.025382021442055702, -3.6954811548639555e-06, -3.814689989667386e-06, -0.00017557987303007394, -0.012103093788027763, -7.152531907195225e-06, -7.748573807475623e-06, -3.4570634852570947e-06, -0.011737452819943428, -0.0056714811362326145, -6.198863957251888e-06, -5.602820692729438e-06, -0.0166294164955616, -0.0021052833180874586, -0.000395815703086555, -0.1972639411687851, -0.31592974066734314, -1.0424063205718994, -0.6767881512641907, -0.09287873655557632, -3.8980677345534787e-05, -0.024307789281010628, -0.009335673414170742, -0.5067457556724548, -4.172316494077677e-06, -0.0004985281848348677, -1.5735502529423684e-05, -0.002793222200125456, -0.0011868583969771862, -0.0035950809251517057, -1.3708974620385561e-05, -9.775113539944869e-06, -0.0030790797900408506, -0.6314283609390259, -0.6813706755638123, -1.3000445365905762, -2.165705680847168, -0.2137766033411026, -0.022650688886642456, -0.0005414212355390191, -0.0026328444946557283, -0.0027083405293524265, -0.0015499495202675462, -0.0009536962606944144, -0.012585503049194813, -0.10778983682394028, -2.104292869567871, -0.016815582290291786, -0.9328603148460388, -0.08729275315999985, -0.017135076224803925, -0.00010144196130568162, -0.0012326984433457255, -0.009582357481122017, -2.038458114839159e-05, -0.004305260721594095, -0.22440208494663239, -0.02991645410656929, -0.17241618037223816, -1.3335810899734497, -0.12858346104621887, -0.0009396428358741105, -0.003554694587364793, -0.00023624490131624043, -0.001413061749190092, -0.005239564459770918, -1.4524996280670166, -0.44294849038124084, -6.48477507638745e-05, -0.0088768620043993, -6.9141146923357155e-06, -0.06274715065956116, -0.21138666570186615, -0.0004984090337529778, -0.002077446784824133, -5.8412379075889476e-06, -1.1920928244535389e-07, -0.02059526927769184, -0.013074856251478195, -0.002271454781293869, -0.6777721047401428, -0.00020358874462544918, -0.00021145492792129517, -0.0014577010879293084, -3.313963316031732e-05, -3.576278118089249e-07, -0.0009659630013629794, -0.172861248254776, -0.005081120412796736, -0.0008062449633143842, -7.581423415103927e-05, -0.8616117238998413, -0.04731128364801407, -0.000717025191988796, -0.0006690170848742127, -0.4930030405521393, -0.0011460172245278955, -0.3012365400791168, -0.00227074115537107, -0.0008681819308549166, -1.8954096958623268e-05, -3.2186455882765586e-06, -0.0012692499440163374, -8.34461570775602e-06, -0.12273421138525009, -0.00019214690837543458, -7.939023635117337e-05, -1.9073468138230965e-06, -0.0003387354372534901, -2.9462687969207764, -0.9294747114181519, -0.03402837738394737, -0.020484207198023796, -4.017272294731811e-05, -1.8358061424805783e-05, -0.008253040723502636, -0.004792156629264355, -0.00019667598826345056, -1.1920928244535389e-07, -0.0006858142442069948, -0.011135927401483059, -0.0013047285610809922, -9.536738616588991e-07, -1.5497195136049413e-06, -7.033323527139146e-06, -1.1920922133867862e-06, -0.005637223832309246, -0.002792865503579378, -0.0006428082706406713, -0.396462619304657, -4.172316494077677e-06, -4.529942543740617e-06, -0.04986242577433586, -3.242440288886428e-05, -0.0011312521528452635, -8.237022848334163e-05, -1.1920928244535389e-07, -0.0002843929105438292, -1.7777622938156128, -9.059865078597795e-06, -7.390703103737906e-05, -2.0265558760002023e-06, -0.0022245917934924364, -0.0004903068183921278, -0.011915814131498337, -3.576278118089249e-07, -5.602820692729438e-06, -2.264974000354414e-06, -0.018722597509622574, -0.024827025830745697, -5.125986263010418e-06, -2.1457441107486375e-05, -1.4305104514278355e-06, -0.0018203369108960032, -7.152555099310121e-07, -7.450303382938728e-05, -0.0003232433518860489, -0.00011431517486926168, -4.768370445162873e-07, -0.0022439793683588505, -0.001290918211452663, -0.003570017870515585, -0.02919529378414154, -1.7881377516459906e-06, -8.821448318485636e-06, -2.3841830625315197e-06, -8.702239938429557e-06, 0.0, -0.002767187776044011, -0.0013044904917478561, -0.0001397035230183974, -0.0010512308217585087, -0.07658009231090546, -0.030735360458493233, -0.004878166597336531, -2.264974000354414e-06, -5.960446742392378e-06, -2.9801878554280847e-05, -1.2516897186287679e-05, -1.0728830375228426e-06, -0.5853539109230042, -0.015880538150668144, -0.7390947341918945], "finish_reason": "stop"}], "metrics": {"energy": 637.695227579117, "energy_per_token": 3.4470012301573894, "time": 15.773997, "time_per_token": 0.08526484864864865}}
{"outputs": [{"text": "# Check if DEST_DIR exists, if not, create it.\n    if not os.path.exists(DEST_DIR):\n        os.makedirs(DEST_DIR)\n\n    # Find all files in ROOT_DIR and move them to DEST_DIR if they match the SPECIFIC_HASH\n    count = 0\n    for root, dirs, files in os.walk(ROOT_DIR):\n        for file in files:\n            file_path = os.path.join(root, file)\n            md5_hash = hashlib.md5()\n            with open(file_path, 'rb') as file:\n                for byte_block in iter(lambda: file.read(4096), b\"\"):\n                    md5_hash.update(byte_block)\n            if md5_hash.hexdigest() == SPECIFIC_HASH:\n                shutil.move(file_path, DEST_DIR)\n                count += 1\n    return count", "tokens": ["#", " Check", " if", " DE", "ST", "_", "DIR", " exists", ",", " if", " not", ",", " create", " it", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ")", "\n", "\n", "    ", "#", " Find", " all", " files", " in", " RO", "OT", "_", "DIR", " and", " move", " them", " to", " DE", "ST", "_", "DIR", " if", " they", " match", " the", " SPEC", "IFIC", "_", "H", "ASH", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "ROOT", "_", "DIR", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "for", " byte", "_", "block", " in", " iter", "(", "lambda", ":", " file", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "    ", "md", "5", "_", "hash", ".", "update", "(", "byte", "_", "block", ")", "\n", "            ", "if", " md", "5", "_", "hash", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "count", " +=", " ", "1", "\n", "    ", "return", " count", "\n", "\n", "print"], "logprobs": [-0.9781699180603027, -2.8497486114501953, -0.25297409296035767, -2.069427013397217, -5.531158240046352e-05, -0.008205629885196686, -0.0010058587649837136, -0.14475807547569275, -0.7187480330467224, -0.2663259506225586, -0.05133138224482536, -0.602520763874054, -0.059290047734975815, -0.04417813569307327, -1.8911317586898804, -0.012781484052538872, -0.0025938458275049925, -0.11553407460451126, -0.032967668026685715, -0.004417779389768839, -0.00016330339713022113, -0.0008681819308549166, -3.218599158572033e-05, -0.08151794224977493, -0.0001760566228767857, -0.003716230858117342, -2.7418097943154862e-06, -8.4638240878121e-06, -7.271740287251305e-06, -0.0013153243344277143, -0.004261460620909929, -0.0067747896537184715, -0.026154711842536926, -1.2397689715726301e-05, -0.10215146839618683, -2.1815061700181104e-05, -1.4305012882687151e-05, -0.00015960850578267127, -0.0013261580606922507, -1.0728830375228426e-06, -6.198863957251888e-06, -8.344646857949556e-07, -0.008903328329324722, -0.003093816339969635, -0.1362227201461792, -0.0012505576014518738, -0.29099923372268677, -2.677938938140869, -0.2879502773284912, -0.1734844148159027, -0.1633484959602356, -0.2207198143005371, -2.634490556374658e-05, -0.0005492847412824631, -0.0004625442670658231, -0.9117162823677063, -3.5793590545654297, -0.842312216758728, -0.8141323924064636, -0.04222481697797775, -3.8742269680369645e-05, -0.0006561510381288826, -0.000271879427600652, -0.09135167300701141, -1.4155573844909668, -0.12149462103843689, -1.365778923034668, -1.354788899421692, -0.0002786724944598973, -0.0025219083763659, -0.001134943449869752, -0.0002746204845607281, -1.4340691566467285, -0.0028421981260180473, -1.9650194644927979, -0.08788096904754639, -0.00209386320784688, -0.00014125302550382912, -0.17078226804733276, -0.02027909830212593, -0.1195436641573906, -2.481077194213867, -0.007285811007022858, -0.17014151811599731, -0.0001958416833076626, -0.00010787858627736568, -0.0146369943395257, -0.0004993622424080968, -0.00044860312482342124, -2.1934269170742482e-05, -1.5020257706055418e-05, -0.00034517052699811757, -0.0010544460965320468, -1.0728830375228426e-06, -1.5497195136049413e-06, -0.01836264692246914, -0.014456650242209435, -0.0028948565013706684, -0.02505933865904808, -0.27073463797569275, -0.16689737141132355, -0.00284077157266438, -0.00010168035078095272, -0.0004629017203114927, -0.002090056659653783, -0.39128628373146057, -0.10285546630620956, -0.0053732022643089294, -0.000849601230584085, -0.0007393010891973972, -2.3841855067985307e-07, -1.847726889536716e-05, -5.602820692729438e-06, -0.0015729209408164024, -4.6132929128361866e-05, -0.006420698016881943, -3.40932747349143e-05, -0.0014661526074633002, -8.082063141046092e-05, -0.0048117320984601974, -0.15197379887104034, -1.582918405532837, -0.0010238410905003548, -0.08496411889791489, -0.004577870946377516, -0.011070497334003448, -0.05543249100446701, -0.002705843886360526, -1.537788011773955e-05, -0.001497934339568019, -9.536738616588991e-07, -0.21637631952762604, -0.023467764258384705, -0.11619273573160172, -0.04358052462339401, -9.07141511561349e-05, -0.00010299152199877426, -0.0008058876264840364, -0.00037269797758199275, -7.152555099310121e-07, -0.0002525725867599249, -0.4384114742279053, -0.0013459203764796257, -0.00015829740732442588, -6.460934673668817e-05, -2.8729820251464844, -0.21023520827293396, -0.001812126487493515, -0.0008949803304858506, -0.6524702310562134, -0.9586056470870972, -0.15135018527507782, -0.0007034449372440577, -3.6954195820726454e-05, -0.04866454377770424, -2.0503786799963564e-05, -0.0014629386132583022, -0.0012737740762531757, -0.001101244823075831, -3.957670196541585e-05, -4.0531076592742465e-06, -0.0006643710657954216, -0.17308315634727478, -0.0005178302526473999, -0.0005604841862805188, -0.0001778444420779124, -0.0011183919850736856, -6.961580220377073e-05, -0.0021525088232010603, -0.5402630567550659, -0.00011538793478393927, -5.185469490243122e-05, -0.004544288385659456, -8.987976616481319e-05, -0.0016598032088950276, -0.0013684204313904047, -4.768360213347478e-06, -2.5629668016335927e-05, -1.4662635294371285e-05, -2.1576648578047752e-05, -8.344646857949556e-07, -2.729855441430118e-05, -0.00067223358200863, -2.264974000354414e-06, -2.3841855067985307e-07, -5.018585216021165e-05, -0.0006889115320518613, -0.1190134733915329, -0.14847742021083832, -0.006170270964503288, -1.5497195136049413e-06, -5.006777428206988e-06, -2.0265558760002023e-06, -0.00152233534026891, -0.0012561534531414509, -5.245195097813848e-06, 0.0, -0.00021038226259406656, -0.008646786212921143, -0.0006889115320518613, -3.576278118089249e-07, -1.7881377516459906e-06, -2.861018856492592e-06, -2.861018856492592e-06, -0.0034913793206214905, -0.005373083520680666, -0.0008438840159215033, -0.25506654381752014, -1.0967194612021558e-05, -5.602820692729438e-06, -0.03086390160024166, -4.2199197196168825e-05, -0.0033428759779781103, -0.00024875884992070496, -1.1920928244535389e-07, -0.00026806574896909297, -0.23099221289157867, -2.3841855067985307e-07, -8.4638240878121e-06, -2.9802276912960224e-06, -0.008156324736773968, -0.0031529974658042192, -0.001947531825862825, -0.016446970403194427, -0.009587316773831844, -0.0019929802510887384, -6.305972783593461e-05, -0.0022922686766833067, -0.2835976183414459, -0.05404228717088699, -0.006247751414775848, -0.2781873941421509, -0.015478950925171375, -3.5724520683288574], "finish_reason": "stop"}], "metrics": {"energy": 794.9487934665676, "energy_per_token": 3.397217066096443, "time": 19.7571, "time_per_token": 0.0844320512820513}}
{"outputs": [{"text": "assert os.path.isdir(ROOT_DIR)\n    os.makedirs(DEST_DIR, exist_ok=True)\n    moved = 0\n    for file_path in glob.iglob(f\"{ROOT_DIR}**/**\", recursive=True):\n        if os.path.isfile(file_path):\n            with open(file_path, 'rb') as file:\n                file_hash = hashlib.md5()\n                while chunk := file.read(8192):\n                    file_hash.update(chunk)\n            if file_hash.hexdigest() == SPECIFIC_HASH:\n                try:\n                    shutil.move(file_path, DEST_DIR)\n                    moved += 1\n                except Exception as e:\n                    print(e)\n    return moved", "tokens": ["assert", " os", ".", "path", ".", "is", "dir", "(", "ROOT", "_", "DIR", ")", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " glob", ".", "ig", "lob", "(", "f", "\"", "{", "ROOT", "_", "DIR", "}", "**", "/**", "\"", ",", " recursive", "=", "True", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "                ", "while", " chunk", " :=", " file", ".", "read", "(", "8", "1", "9", "2", "):", "\n", "                ", "    ", "file", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "            ", "if", " file", "_", "hash", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "try", ":", "\n", "                ", "    ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "    ", "m", "oved", " +=", " ", "1", "\n", "                ", "except", " Exception", " as", " e", ":", "\n", "                ", "    ", "print", "(", "e", ")", "\n", "    ", "return", " moved", "\n", "\n", "def"], "logprobs": [-3.587878704071045, -0.7731460332870483, -0.00024053541710600257, -0.0037319078110158443, -0.00011336160969221964, -1.3609557151794434, -0.003935569431632757, -0.0007009433466009796, -0.1159071996808052, -2.3841830625315197e-06, -5.960462772236497e-07, -0.000532008707523346, -0.7591311931610107, -0.3161766231060028, -0.9008448123931885, -0.0002728328399825841, -0.013499756343662739, -1.1920928244535389e-07, -2.264974000354414e-06, -0.00010632903286023065, -0.0031977968756109476, -5.245195097813848e-06, -5.245195097813848e-06, -3.3378546504536644e-06, -0.004782903008162975, -0.005726953968405724, -5.602820692729438e-06, -5.8412379075889476e-06, -0.02452184446156025, -0.0018747150897979736, -0.0002919009421020746, -0.04005948826670647, -0.6424922943115234, -2.7771730422973633, -0.05051342025399208, -1.7766234874725342, -0.05511665344238281, -6.90197994117625e-05, -0.011108341626822948, -0.134091317653656, -0.21233592927455902, -0.6135284900665283, -1.20587158203125, -0.2758350670337677, -0.004917432088404894, -0.018351878970861435, -6.0437283536884934e-05, -1.0664581060409546, 0.0, -0.0038481722585856915, -1.8012381792068481, -0.30335259437561035, -0.0037822630256414413, -0.014948965050280094, -1.0728830375228426e-06, -3.576278118089249e-07, -1.5791974067687988, -0.16683119535446167, -0.037995968014001846, -0.05979974567890167, -0.008579183369874954, -0.002110279630869627, -0.0033352721948176622, -0.0008046964649111032, -0.0009915679693222046, -0.012316950596868992, -0.012355572544038296, -0.10035054385662079, -0.21238064765930176, -6.556489552167477e-06, -0.0010236029047518969, -1.549708758830093e-05, -0.00875609926879406, -0.17746305465698242, -0.0003034608089365065, -0.0008890252211131155, -5.602820692729438e-06, -3.576278118089249e-07, -0.08217940479516983, -0.008277160115540028, -0.003727513598278165, -0.7412149906158447, -0.0009159421897493303, -0.0005220004240982234, -0.004417541902512312, -6.19869097135961e-05, -1.1920922133867862e-06, -0.006074774544686079, -1.3799960613250732, -0.00781265739351511, -0.0021142051555216312, -0.00020561488054227084, -1.1625827550888062, -0.1412826031446457, -0.0023217645939439535, -0.0011124381562694907, -0.6921327710151672, -0.006538781803101301, -0.23123261332511902, -0.004442109260708094, -0.0011299422476440668, -2.5152843591058627e-05, -6.198863957251888e-06, -0.0013852057745680213, -1.168244216387393e-05, -1.6029398441314697, -0.02817881479859352, -0.0011339908232912421, -1.8684759140014648, -0.07059628516435623, -0.0002026352594839409, -0.0006924853660166264, -0.0001679517881711945, -1.0609570381348021e-05, -0.024166766554117203, -0.22605526447296143, -0.007584703154861927, -0.0005118728731758893, -0.0004544417606666684, -0.0024613819550722837, -0.042665958404541016, -6.12716976320371e-05, -0.0020632902160286903, -0.0066756801679730415, -1.645074735279195e-05, -2.9802276912960224e-06, -0.0007120219524949789, -1.6689286894688848e-06, -4.541770613286644e-05, -0.00027616979787126184, -0.0006623458466492593, -0.0005878866068087518, -1.318899393081665, -0.09395680576562881, -0.04115469381213188, -4.470248313737102e-05, -9.357491217087954e-05, -0.010546544566750526, -0.0019325405592098832, -8.987976616481319e-05, -2.3841855067985307e-07, -0.0005641775787808001, -0.01432692352682352, -0.0011236312566325068, -1.1920922133867862e-06, -2.861018856492592e-06, -2.109982233378105e-05, -5.245195097813848e-06, -0.0043343412689864635, -0.004621420055627823, -0.0005760917556472123, -2.331751823425293, -0.0004354958946350962, -0.006923494394868612, -0.0006623458466492593, -0.0012779411626979709, -0.13276050984859467, -9.536697689327411e-06, -7.510157047363464e-06, -0.029595347121357918, -0.00011729506513802335, -0.0040998938493430614, -0.00024172721896320581, -2.7418097943154862e-06, -0.0004659997357521206, -0.047211337834596634, -1.4305104514278355e-06, -1.168244216387393e-05, -2.4318398573086597e-05, -0.011163395829498768, -0.005796053912490606, -0.00041940953815355897, -0.07680124044418335, -0.07664479315280914, -2.038458114839159e-05, -0.014510110951960087, -0.004776140209287405, -0.000266278104390949, -0.000847933697514236, -0.0006736631621606648, -0.06578357517719269, -1.045734167098999, -0.21857456862926483, -0.18879640102386475, -0.0008164886385202408, -0.015039155259728432, -0.00039307496626861393, -0.0008488865569233894, -0.12537874281406403, -0.016084790229797363, -1.8776487112045288, -0.019565680995583534, -0.019176563248038292, -0.2281937450170517, -0.052917469292879105, -0.003833684604614973, -0.42368167638778687, -0.014592351391911507, -1.6023136377334595], "finish_reason": "stop"}], "metrics": {"energy": 723.9285123596185, "energy_per_token": 3.6378317204000927, "time": 17.016508, "time_per_token": 0.08551009045226131}}
{"outputs": [{"text": "# Ensure the destination directory exists.\n    if os.path.exists(DEST_DIR):\n        pass\n    else:\n        os.mkdir(DEST_DIR)\n    # Iterate over the files in the root directory.\n    counter_moved = 0\n    for file in glob.glob(ROOT_DIR + '/*'):\n        # Calculate the hash of the file.\n        hash_value = hashlib.md5(open(file, 'rb').read()).hexdigest()\n        # Move the file if the hash matches the specific hash.\n        if hash_value == SPECIFIC_HASH:\n            shutil.move(file, DEST_DIR)\n            counter_moved += 1\n    # Return the number of moved files.\n    return counter_moved", "tokens": ["#", " Ensure", " the", " destination", " directory", " exists", ".", "\n", "    ", "if", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "pass", "\n", "    ", "else", ":", "\n", "        ", "os", ".", "mk", "dir", "(", "DE", "ST", "_", "DIR", ")", "\n", "    ", "#", " Iter", "ate", " over", " the", " files", " in", " the", " root", " directory", ".", "\n", "    ", "counter", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "ROOT", "_", "DIR", " +", " '", "/*", "')", ":", "\n", "        ", "#", " Calculate", " the", " hash", " of", " the", " file", ".", "\n", "        ", "hash", "_", "value", " =", " hash", "lib", ".", "md", "5", "(", "open", "(", "file", ",", " '", "rb", "')", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "        ", "#", " Move", " the", " file", " if", " the", " hash", " matches", " the", " specific", " hash", ".", "\n", "        ", "if", " hash", "_", "value", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "            ", "counter", "_", "m", "oved", " +=", " ", "1", "\n", "    ", "#", " Return", " the", " number", " of", " moved", " files", ".", "\n", "    ", "return", " counter", "_", "m", "oved", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.9781699180603027, -0.6535950303077698, -0.9812452793121338, -0.5613077878952026, -0.028118662536144257, -0.02112600766122341, -1.8955589532852173, -0.1430850327014923, -0.003214194905012846, -1.0547852516174316, -2.912574052810669, -0.0001481661747675389, -0.007752687204629183, -0.000226472009671852, -0.2559865117073059, -0.0010163385886698961, -0.011601598933339119, -5.960446742392378e-06, -8.940656698541716e-06, -6.079655122448457e-06, -0.6619166731834412, -0.01374482735991478, -0.010831255465745926, -1.0685006380081177, -0.018154293298721313, -0.008035357110202312, -0.026267819106578827, -0.00036995718255639076, -0.00255555915646255, -0.0032089666929095984, -0.08177688717842102, -2.6702524337451905e-05, -0.3732229173183441, -0.00011312322021694854, -0.00444080401211977, -0.00402046600356698, -2.3841855067985307e-07, -3.4570634852570947e-06, -2.264974000354414e-06, -0.002170232590287924, -0.010021372698247433, -1.7445344924926758, -0.3656632900238037, -3.0804026126861572, -0.04172128811478615, -0.5797953605651855, -1.9331121444702148, -0.34913501143455505, -0.1211271658539772, -0.1585933268070221, -0.36064639687538147, -0.018567796796560287, -0.574533998966217, -0.008154078386723995, -0.002825674833729863, -2.981217384338379, -2.8734822273254395, -1.3723430633544922, -0.10899210721254349, -0.7862723469734192, -0.006570994853973389, -0.00013493580627255142, -0.0821397677063942, -0.010277916677296162, -0.22690995037555695, -0.5389811992645264, -0.5834140181541443, -0.050646811723709106, -0.00013648532330989838, -0.12548872828483582, -0.009295990690588951, -0.9082053899765015, -1.0609570381348021e-05, -2.622600959512056e-06, -0.30367037653923035, -0.6380866169929504, -0.7118786573410034, -0.09702026098966599, -0.0009688212885521352, -0.010239450260996819, -0.02863696590065956, -0.501075267791748, -0.40413662791252136, -0.06501399725675583, -2.0873897075653076, -0.281243234872818, -0.1745615452528, -0.19686642289161682, -0.23165832459926605, -0.0031042741611599922, -0.0012540103634819388, -1.2807673215866089, -0.43061375617980957, -1.8116564750671387, -0.005673496052622795, -0.11192881315946579, -0.015810607001185417, -0.00010001159535022452, -0.0037339269183576107, -1.3232143828645349e-05, -0.6427509784698486, -0.32320231199264526, -0.0008647278300486505, -0.006023113150149584, -0.017051052302122116, -0.10900931805372238, -0.002636886900290847, -0.0011462554102763534, -0.000284154579276219, -2.2053474822314456e-05, -0.0010244365548714995, -0.01062403991818428, -0.011159151792526245, -5.3165931603871286e-05, 0.0, -8.177422569133341e-05, -0.0034205757547169924, -0.049188993871212006, -0.1497637778520584, -0.9054197669029236, -0.08461705595254898, -0.00617998605594039, -0.28358495235443115, -0.5460931658744812, -0.06598412990570068, -0.032289911061525345, -0.17379546165466309, -0.3709747791290283, -0.23501001298427582, -0.2560046911239624, -0.0016481400234624743, -0.0007090438157320023, -0.014853598549962044, -0.08261402696371078, -0.001890778075903654, -5.638440416078083e-05, -0.016343185678124428, -0.0022005646023899317, -1.7881377516459906e-06, -1.7881377516459906e-06, -1.156323378381785e-05, -3.099436753473128e-06, -0.004780174233019352, -0.0014021099777892232, -0.0038421161007136106, -0.21154683828353882, -1.7165990357170813e-05, -6.794906312279636e-06, -0.007542110979557037, -0.00020847532141488045, -0.007069336716085672, -0.0012942517641931772, -0.0560091994702816, -5.960462772236497e-07, -8.702239938429557e-06, -2.861018856492592e-06, -0.06500885635614395, -0.003790932474657893, -0.0028596720658242702, -0.06257214397192001, -0.00014959646796341985, -3.731181277544238e-05, -1.1920928244535389e-07, -0.07159920036792755, -0.01827603206038475, -0.00017712931730784476, -0.0072649819776415825, -0.2469906210899353, -1.8123078346252441, -0.09600722789764404, -0.02936454862356186, -0.13229984045028687, -0.002200207905843854, -1.5194765329360962, -0.003340262221172452, -0.04646499454975128, -0.0016705142334103584, -0.0011917401570826769, -0.02964765578508377, -0.042682062834501266, -6.23445157543756e-05, -8.583032467868179e-06, -1.1920928244535389e-07, -1.8464093208312988, -2.3841830625315197e-06, -2.622600959512056e-06, -2.0265558760002023e-06, -9.16677454370074e-05, -1.63257896900177, -0.0008286379743367434], "finish_reason": "stop"}], "metrics": {"energy": 658.3710535011297, "energy_per_token": 3.465110807900683, "time": 16.18886, "time_per_token": 0.08520452631578947}}
{"outputs": [{"text": "if not os.path.exists(DEST_DIR):\n        os.makedirs(DEST_DIR)\n    else:\n        for file in glob.glob(os.path.join(DEST_DIR, '*')):\n            os.remove(file)\n\n    n_files = 0\n    for dirpath, dirnames, filenames in os.walk(ROOT_DIR):\n        for file in filenames:\n            file_path = os.path.join(dirpath, file)\n\n            md5_hash = hashlib.md5()\n            with open(file_path, \"rb\") as f:\n                for byte_block in iter(lambda: f.read(4096), b\"\"):\n                    md5_hash.update(byte_block)\n\n            if md5_hash.hexdigest() == SPECIFIC_HASH:\n                n_files += 1\n                shutil.move(file_path, os.path.join(DEST_DIR, file))\n\n    return n_files", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ")", "\n", "    ", "else", ":", "\n", "        ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "DE", "ST", "_", "DIR", ",", " '", "*", "'))", ":", "\n", "            ", "os", ".", "remove", "(", "file", ")", "\n", "\n", "    ", "n", "_", "files", " =", " ", "0", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "ROOT", "_", "DIR", "):", "\n", "        ", "for", " file", " in", " fil", "en", "ames", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " file", ")", "\n", "\n", "            ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "for", " byte", "_", "block", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "    ", "md", "5", "_", "hash", ".", "update", "(", "byte", "_", "block", ")", "\n", "\n", "            ", "if", " md", "5", "_", "hash", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "n", "_", "files", " +=", " ", "1", "\n", "                ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " os", ".", "path", ".", "join", "(", "DE", "ST", "_", "DIR", ",", " file", "))", "\n", "\n", "    ", "return", " n", "_", "files", "\n", "\n", "if"], "logprobs": [-1.9198689460754395, -0.12416959553956985, -0.01746349036693573, -1.9550132492440753e-05, -0.001149827498011291, -2.7179348762729205e-05, -0.13708972930908203, -0.0006619884516112506, -0.024847257882356644, -1.311301275563892e-06, -5.125986263010418e-06, -1.4305104514278355e-06, -0.0023341334890574217, -0.03280617296695709, -0.0123580452054739, -0.07724273204803467, -8.821448318485636e-06, -0.30779504776000977, -2.2411095415009186e-05, -1.4424220353248529e-05, -0.00029059001826681197, -0.0037150431890040636, -5.125986263010418e-06, -4.51792984677013e-05, -7.390948667307384e-06, -0.02629963494837284, -0.0364353284239769, -1.101778268814087, -3.3089094161987305, -0.000582525331992656, -0.009917627088725567, -0.004677188582718372, -3.1926591396331787, -0.9747959971427917, -0.2367338240146637, -0.3447456657886505, -0.0002348147245356813, -0.0852222815155983, -0.017979733645915985, -0.8375194072723389, -1.2993727978027891e-05, -0.0008749709231778979, -5.364403477869928e-06, -0.003998737782239914, -0.0017495339270681143, -0.21881768107414246, -6.6756979322235566e-06, -1.0251946150674485e-05, -4.3748852476710454e-05, -0.0061933733522892, -0.8089525699615479, -0.04498704522848129, -0.07133916020393372, -0.0006002769805490971, -0.010072474367916584, -0.008104652166366577, -0.30501824617385864, -2.2649508537142538e-05, -0.01418531034141779, -0.00020215852418914437, -0.005694950930774212, -0.00020668754586949944, -0.022633908316493034, -0.5176939964294434, -0.0021992563270032406, -3.1077969074249268, -0.49187010526657104, -0.7024821639060974, -1.3921971321105957, -0.021948175504803658, -0.00017617580306250602, -0.012920708395540714, -0.161966472864151, -0.12450330704450607, -2.234379529953003, -0.11356410384178162, -0.001984652131795883, -0.13937602937221527, -0.003250911831855774, -8.701899787411094e-05, -0.010321925394237041, -1.311301275563892e-06, -8.106198947643861e-06, -0.0004040378553327173, -0.0013366345083341002, -1.0371154530730564e-05, -1.5139465176616795e-05, -0.00038378025055862963, -0.0027048927731812, -1.7881377516459906e-06, -2.3841855067985307e-07, -0.02913091890513897, -0.00438074953854084, -0.004534201696515083, -0.05828965827822685, -1.4954488277435303, -0.07082553952932358, -0.0011856677010655403, 0.0, -2.3841855067985307e-07, -0.00043156370520591736, -0.000863774970639497, -0.0046292515471577644, -0.6861034035682678, -0.24553269147872925, -0.10973125696182251, -0.009835472330451012, -0.0034545527305454016, -3.576278118089249e-07, -5.543078441405669e-05, -1.2516897186287679e-05, -0.007639241870492697, -7.199982064776123e-05, -0.010397079400718212, -2.3841830625315197e-06, -0.0003135904553346336, -0.007106858771294355, -0.0003077510336879641, -0.0018567480146884918, -2.8359885215759277, -0.0011828100541606545, -1.9013454914093018, -0.006267535034567118, -0.09043372422456741, -0.016463035717606544, -0.019373012706637383, -0.04873130843043327, -0.0011968599865213037, -2.1219027985353023e-05, -0.0055489083752036095, -2.264974000354414e-06, -0.06188884377479553, -0.010450638830661774, -0.11734944581985474, -0.016415894031524658, -0.00024041623692028224, -0.00015233787416946143, -0.0018230738351121545, -0.0024974129628390074, -1.1920928244535389e-07, -0.00035470392322167754, -1.1512835025787354, -0.005918833427131176, -3.111314072157256e-05, -0.000482442817883566, -0.00015424491721205413, -0.06405666470527649, -0.022144081071019173, -0.004552120342850685, -0.0015718498034402728, -0.24358771741390228, -0.4908691346645355, -0.023556256666779518, -0.00014625910262111574, -2.4676019165781327e-05, -0.005621931981295347, -4.2199197196168825e-05, -0.003427822608500719, -0.0003511289251036942, -0.0004589696181938052, -1.823885577323381e-05, -4.887569048150908e-06, -0.0010306290350854397, -0.018881117925047874, -0.0007023728103376925, -0.0005335576133802533, -8.475421054754406e-05, -0.0012481764424592257, -6.246371776796877e-05, -0.008108790963888168, -0.00030429501202888787, -7.748573807475623e-06, -7.748573807475623e-06, -0.0021327624563127756, -0.00010406429646536708, -0.0009365463047288358, -0.0009976415894925594, -8.4638240878121e-06, -2.753696753643453e-05, -3.266281055402942e-05, -9.548207890475169e-05, -9.536738616588991e-07, -2.098061486321967e-05, -0.000697965151630342, -2.264974000354414e-06, -7.152555099310121e-07, -9.417090768693015e-05, -0.0003383779258001596, -0.41079795360565186, -0.050546515733003616, -0.1320643126964569, -0.029400665313005447, -1.311301275563892e-06, -7.152531907195225e-06, -7.152555099310121e-07, -0.004265377763658762, -0.000723576988093555, -6.6756979322235566e-06, 0.0, -0.0005496421363204718, -0.021062161773443222, -0.0016433794517070055, -3.576278118089249e-07, -1.9073468138230965e-06, -7.271740287251305e-06, -1.8715683836489916e-05, -0.0085983294993639, -0.0033808951266109943, -0.002400257159024477, -2.0462465286254883, -0.00014661667228210717, -0.000226472009671852, -0.02262120507657528, -0.004429647698998451, -0.00010168035078095272, -0.0008334023877978325, -0.03217748552560806, -0.177531436085701, -2.9801878554280847e-05, -5.364403477869928e-06, -0.26195359230041504, -0.00012003655137959868, -0.016297563910484314, -0.0009510761592537165, -3.576278118089249e-07, -0.00039748396375216544, -1.5054680109024048, -2.9801878554280847e-05, -4.911301948595792e-05, -2.861018856492592e-06, -0.0007745603215880692, -0.00037019551382400095, -0.022456282749772072, -1.4305104514278355e-06, -1.6093124941107817e-05, -2.9802276912960224e-06, -0.01044851541519165, -0.03958958387374878, -0.004405436106026173, -0.010192841291427612, -0.5910728573799133, -0.01647229865193367, -0.04717119410634041, -0.00986333005130291, -8.583032467868179e-06, -9.179073458653875e-06, -0.5522201657295227, -0.010896466672420502, -0.5596410036087036], "finish_reason": "stop"}], "metrics": {"energy": 879.7770827827458, "energy_per_token": 3.533241296316248, "time": 21.223461, "time_per_token": 0.08523478313253012}}
{"outputs": [{"text": "os.makedirs(DEST_DIR, exist_ok=True)\n    n_files = 0\n\n    for file in glob.glob(ROOT_DIR + '/*'):\n        # Calculate MD5 hash of each file\n        h = hashlib.md5()\n        with open(file, 'rb') as f:\n            for byte_block in iter(lambda: f.read(4096), b\"\"):\n                h.update(byte_block)\n        file_hash = h.hexdigest()\n\n        # If the hash matches the specified value, move the file\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(file, DEST_DIR)\n            n_files += 1\n\n    return n_files", "tokens": ["os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "n", "_", "files", " =", " ", "0", "\n", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "ROOT", "_", "DIR", " +", " '", "/*", "')", ":", "\n", "        ", "#", " Calculate", " MD", "5", " hash", " of", " each", " file", "\n", "        ", "h", " =", " hash", "lib", ".", "md", "5", "()", "\n", "        ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "for", " byte", "_", "block", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "h", ".", "update", "(", "byte", "_", "block", ")", "\n", "        ", "file", "_", "hash", " =", " h", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "#", " If", " the", " hash", " matches", " the", " specified", " value", ",", " move", " the", " file", "\n", "        ", "if", " file", "_", "hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "            ", "n", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "return", " n", "_", "files", "\n", "\n", "def"], "logprobs": [-1.9333806037902832, -0.0005990855861455202, -0.025382021442055702, -3.6954811548639555e-06, -3.814689989667386e-06, -0.00017557987303007394, -0.012103093788027763, -7.152531907195225e-06, -7.748573807475623e-06, -3.4570634852570947e-06, -0.011737452819943428, -0.0056714811362326145, -6.198863957251888e-06, -5.602820692729438e-06, -0.0166294164955616, -0.0021052833180874586, -0.000395815703086555, -0.1972639411687851, -0.31592974066734314, -3.6461641788482666, -0.426718533039093, -0.5439403653144836, -1.2788212299346924, -0.025971556082367897, -0.00013731967192143202, -0.015516863204538822, -2.0420117378234863, -0.0004567056894302368, -0.37788125872612, -0.6756343841552734, -1.0271201133728027, -0.04031519964337349, -4.827859811484814e-05, -0.1740971952676773, -0.004471066873520613, -1.6553678512573242, -5.125986263010418e-06, -6.079655122448457e-06, -0.14529117941856384, -0.5595946311950684, -1.4244675636291504, -0.16483174264431, -0.0020967184100300074, -0.024663280695676804, -0.03538729250431061, -2.9251861572265625, -1.0734922885894775, -1.1441340446472168, -0.00044943721150048077, -0.03670495003461838, -0.29114794731140137, -2.0448765754699707, -0.008871898986399174, -0.3612109124660492, -0.0021105175837874413, -3.7782278060913086, -0.09440271556377411, -0.001824739621952176, -3.0636318115284666e-05, -1.2159273865108844e-05, -0.009733360260725021, -2.0265558760002023e-06, -0.06611090153455734, -0.006950368173420429, -0.05544297769665718, -0.07609611004590988, -0.000688077649101615, -0.0001597276859683916, -0.00322548346593976, -0.000550357042811811, -0.41834503412246704, -0.0032524564303457737, -0.00041654970846138895, -0.00037353215157054365, -0.07573512196540833, -0.038574788719415665, -0.003851616056635976, -0.002098621567711234, -0.4000836908817291, -1.7498879432678223, -0.10508383065462112, -0.0007819455349817872, -1.9311717551317997e-05, -0.007252437528222799, -3.325883881188929e-05, -0.009755200706422329, -0.0005566716426983476, -0.0005122303264215589, -2.002696055569686e-05, -2.264974000354414e-06, -0.0012191252317279577, -0.017783012241125107, -0.0002783149539027363, -0.00013267113536130637, -5.9602869441732764e-05, -0.0008127961773425341, -4.207999518257566e-05, -0.004474389832466841, -0.4234706461429596, -1.6212332411669195e-05, -1.490105023549404e-05, -0.0048531354404985905, -0.0011356578906998038, -0.0015864893794059753, -2.253030106658116e-05, -3.576278118089249e-07, -1.3232143828645349e-05, -0.0011639971053227782, -5.960462772236497e-07, -5.006777428206988e-06, -2.658331868587993e-05, -0.0004059444472659379, -0.7632236480712891, -1.353882074356079, -0.012666607275605202, -0.07624402642250061, -0.004415049683302641, -0.008261199109256268, -0.00018356545479036868, -0.0016019619069993496, -8.821448318485636e-06, 0.0, -0.0001382732152706012, -0.007602094206959009, -0.17366932332515717, -0.0020036876667290926, -0.39606761932373047, -2.683276891708374, -0.7686963081359863, -1.0831091403961182, -0.10990002006292343, -0.49832943081855774, -1.8589752912521362, -1.1735033988952637, -0.10570243000984192, -0.05689419060945511, -0.03246903046965599, -0.0016019619069993496, -0.48040372133255005, -0.0004897110629826784, -0.011151960119605064, -0.029434233903884888, -0.00021646064124070108, -2.3841830625315197e-06, -0.009235400706529617, -0.0013165149139240384, -1.5497195136049413e-06, -1.5497195136049413e-06, -6.6756979322235566e-06, -2.1457441107486375e-05, -0.004059646278619766, -0.000814582861494273, -0.0018399705877527595, -0.2550082504749298, -1.5020257706055418e-05, -2.0265558760002023e-06, -0.008754090406000614, -5.709961988031864e-05, -0.0051722051575779915, -0.0005267662927508354, -0.057190217077732086, -5.960462772236497e-07, -5.006777428206988e-06, -1.9073468138230965e-06, -0.03830188512802124, -0.004639812279492617, -0.0026953816413879395, -0.04406019300222397, -2.47952248173533e-05, -2.825220326485578e-05, -0.0184644665569067, -0.0025537756737321615, -8.451581379631534e-05, -0.0025448575615882874, -0.22063864767551422, -0.004999516997486353, -0.060770802199840546, -0.010366522707045078, -1.2993727978027891e-05, -3.814689989667386e-06, -0.6915808916091919, -0.008526468649506569, -1.650719404220581], "finish_reason": "stop"}], "metrics": {"energy": 614.0964291582111, "energy_per_token": 3.355718192121372, "time": 15.562322, "time_per_token": 0.08504001092896175}}
{"outputs": [{"text": "if not os.path.exists(DEST_DIR):\n        os.mkdir(DEST_DIR)\n    # print(f\"Checking files from {ROOT_DIR}\")\n    files_moved = 0\n    for file in glob.glob(os.path.join(ROOT_DIR, '*')):\n        with open(file, \"rb\") as f:\n            md5 = hashlib.md5()\n            while chunk := f.read(8192):\n                md5.update(chunk)\n\n        # if md5 hash matches SPECIFIC_HASH, move the file to DEST_DIR\n        if md5.hexdigest() == SPECIFIC_HASH:\n            shutil.move(file, DEST_DIR)\n            files_moved += 1\n\n    # print(f\"Moved {files_moved} files\")\n    return files_moved", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DE", "ST", "_", "DIR", ")", "\n", "    ", "#", " print", "(", "f", "\"", "Check", "ing", " files", " from", " {", "ROOT", "_", "DIR", "}\"", ")", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " '", "*", "'))", ":", "\n", "        ", "with", " open", "(", "file", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "            ", "md", "5", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "while", " chunk", " :=", " f", ".", "read", "(", "8", "1", "9", "2", "):", "\n", "                ", "md", "5", ".", "update", "(", "chunk", ")", "\n", "\n", "        ", "#", " if", " md", "5", " hash", " matches", " SPEC", "IFIC", "_", "H", "ASH", ",", " move", " the", " file", " to", " DE", "ST", "_", "DIR", "\n", "        ", "if", " md", "5", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "            ", "files", "_", "m", "oved", " +=", " ", "1", "\n", "\n", "    ", "#", " print", "(", "f", "\"", "M", "oved", " {", "files", "_", "m", "oved", "}", " files", "\"", ")", "\n", "    ", "return", " files", "_", "m", "oved", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.9198689460754395, -0.12416959553956985, -0.01746349036693573, -1.9550132492440753e-05, -0.001149827498011291, -2.7179348762729205e-05, -0.13708972930908203, -0.0006619884516112506, -0.024847257882356644, -1.311301275563892e-06, -5.125986263010418e-06, -1.4305104514278355e-06, -0.0023341334890574217, -0.03280617296695709, -0.0123580452054739, -0.07724273204803467, -8.821448318485636e-06, -1.331514835357666, -0.00013147920253686607, -0.001404966926202178, -0.002499315422028303, 0.0, -5.8412379075889476e-06, -2.3841830625315197e-06, -0.0016643255949020386, -0.030467592179775238, -0.8460476994514465, -3.201533079147339, -4.1958184242248535, -0.2516704797744751, -1.9116662740707397, -0.30619871616363525, -3.735950469970703, -0.04078773781657219, -1.2661511898040771, -2.870936870574951, -0.47940707206726074, -0.04143734648823738, -0.0010711177019402385, -0.00043025295599363744, -0.8457939624786377, -0.007156097795814276, -0.054364562034606934, -0.07189478725194931, -1.5825921297073364, -1.0583733320236206, -2.101644992828369, -0.0015848231269046664, -0.11129442602396011, -0.02541642263531685, -8.21318244561553e-05, -0.012997431680560112, -0.054627925157547, -0.26573446393013, -0.5748660564422607, -0.5193269848823547, -0.04821263998746872, -7.414542778860778e-05, -0.2707359194755554, -0.0031061756890267134, -1.0890378952026367, -1.9073468138230965e-06, -0.001116844010539353, -2.50339189733495e-06, -0.006716296076774597, -0.001128394273109734, -0.00416269525885582, -9.536738616588991e-07, -8.344646857949556e-07, -0.004889673553407192, -0.7118517756462097, -0.4234565794467926, -0.21966613829135895, -0.0009583409409970045, -0.02617979608476162, -0.015898842364549637, -1.333659291267395, -0.00046361665590666234, -0.0004374024283606559, -0.007383321411907673, -0.0104895681142807, -1.5611538887023926, -0.01466131117194891, -0.002934081247076392, -0.0009277330245822668, -0.00014995403762441128, -0.3855997323989868, -0.07531873136758804, -0.013453181833028793, -0.0023852726444602013, -2.068394660949707, -0.010779839009046555, -0.736987292766571, -0.004116395954042673, -5.817244164063595e-05, -5.960446742392378e-06, -0.012193305417895317, -2.622600959512056e-06, -0.4105307161808014, -0.03438907116651535, -0.0035297491122037172, -0.5844823718070984, -0.7885542511940002, -6.007967749610543e-05, -0.00037949037505313754, -2.9802276912960224e-06, -2.50339189733495e-06, -0.006608654744923115, -0.2686690092086792, -0.00707430811598897, -0.0004326361231505871, -0.00022837892174720764, -0.033274780958890915, -0.018811160698533058, -0.0013019903562963009, -0.0037735935766249895, -1.585470999998506e-05, -8.928377064876258e-05, -2.3841830625315197e-06, -7.581423415103927e-05, -0.00019739109848160297, -0.00034445550409145653, -0.001341634662821889, -3.140843629837036, -0.7911825180053711, -2.3418211936950684, -3.482229232788086, -0.5278922915458679, -0.00041214076918549836, -1.6565407514572144, -0.5864972472190857, -2.2581377029418945, -0.002242314163595438, -0.020031534135341644, -0.00468098558485508, -0.0004107108688913286, -0.6339178085327148, -0.23019906878471375, -0.4771004915237427, -0.008011233061552048, -1.1288429498672485, -0.5597378611564636, -6.842378934379667e-05, -0.012659191153943539, -0.0021915247198194265, -0.057419296354055405, -0.007855711504817009, -0.040249474346637726, -0.015914445742964745, -5.602820692729438e-06, -0.0023737368173897266, -0.0017958242679014802, -2.586808113846928e-05, 0.0, -0.0007352509419433773, -0.018132049590349197, -0.0013528252020478249, -3.576278118089249e-07, -1.6689286894688848e-06, -8.22540732769994e-06, -2.3841855067985307e-07, -0.010030577890574932, -0.0023466211277991533, -0.0037456846330314875, -0.6911925077438354, -3.2782016205601394e-05, -5.602820692729438e-06, -0.01385911088436842, -7.92710343375802e-05, -0.010920403525233269, -0.0011299422476440668, -0.13578736782073975, -4.768370445162873e-07, -3.099436753473128e-06, -5.125986263010418e-06, -0.01819479651749134, -0.005937438458204269, -0.004347990732640028, -0.2969268262386322, -1.4424220353248529e-05, -7.867782187531702e-06, -1.1920928244535389e-07, -0.011311096139252186, -0.004390481859445572, -0.00012814177898690104, -0.0023060652893036604, -1.1844844818115234, -0.03697897866368294, -1.2108246088027954, -0.23231330513954163, -0.029515834525227547, -0.06740108132362366, -0.029159285128116608, -1.1485453844070435, -0.010325347073376179, -0.02736256644129753, -0.014171206392347813, -0.00043823651503771544, -0.00020454221521504223, -3.2186455882765586e-06, -0.006774907931685448, -0.14207904040813446, -1.5331945419311523, -0.020306667312979698, -0.02227606251835823, -0.052752383053302765, -0.09264003485441208, -0.009555318392813206, -9.775113539944869e-06, -1.7881377516459906e-06, 0.0, -1.7363693714141846, -1.0728830375228426e-06, -2.7418097943154862e-06, -2.861018856492592e-06, -6.782778655178845e-05, -0.2220495641231537], "finish_reason": "stop"}], "metrics": {"energy": 770.7019307231907, "energy_per_token": 3.551621800567699, "time": 18.27847, "time_per_token": 0.08423258064516129}}
{"outputs": [{"text": "# Ensure the destination directory exists\n    os.makedirs(DEST_DIR, exist_ok=True)\n\n    files_moved = 0\n    for root, dirs, files in os.walk(ROOT_DIR):\n        for file in files:\n            filepath = os.path.join(root, file)\n\n            # Check if the file is a regular file or a directory\n            if os.path.isfile(filepath):\n                hash_value = hashlib.md5(filepath.encode())\n                hash_str = hash_value.hexdigest()\n\n                # Check if the hash value matches the specific hash\n                if hash_str == SPECIFIC_HASH:\n                    shutil.move(filepath, os.path.join(DEST_DIR, file))\n                    files_moved += 1\n                    print(f\"Moved file {filepath}\")\n    return files_moved", "tokens": ["#", " Ensure", " the", " destination", " directory", " exists", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "ROOT", "_", "DIR", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "\n", "            ", "#", " Check", " if", " the", " file", " is", " a", " regular", " file", " or", " a", " directory", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "path", "):", "\n", "                ", "hash", "_", "value", " =", " hash", "lib", ".", "md", "5", "(", "file", "path", ".", "encode", "())", "\n", "                ", "hash", "_", "str", " =", " hash", "_", "value", ".", "hex", "dig", "est", "()", "\n", "\n", "                ", "#", " Check", " if", " the", " hash", " value", " matches", " the", " specific", " hash", "\n", "                ", "if", " hash", "_", "str", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "    ", "sh", "util", ".", "move", "(", "file", "path", ",", " os", ".", "path", ".", "join", "(", "DE", "ST", "_", "DIR", ",", " file", "))", "\n", "                ", "    ", "files", "_", "m", "oved", " +=", " ", "1", "\n", "                ", "    ", "print", "(", "f", "\"", "M", "oved", " file", " {", "file", "path", "}\"", ")", "\n", "    ", "return", " files", "_", "m", "oved", "\n", "\n", "if"], "logprobs": [-0.9781699180603027, -0.6535950303077698, -0.9812452793121338, -0.5613077878952026, -0.028118662536144257, -0.02112600766122341, -0.4842430353164673, -0.0025321345310658216, -0.7001217007637024, -7.462222856702283e-05, -0.0015359044773504138, -1.0728830375228426e-06, -1.311301275563892e-06, -9.30981186684221e-05, -0.01139961089938879, -3.4570634852570947e-06, -3.3378044463461265e-05, -1.6689286894688848e-06, -0.0041814520955085754, -0.0010542079107835889, -2.861018856492592e-06, -1.1086402082582936e-05, -0.007181781344115734, -0.0010244365548714995, -0.00024029705673456192, -0.00696208793669939, -0.14438101649284363, -0.0002184867626056075, -1.9729037284851074, -0.3319697082042694, -0.300161212682724, -0.00018416139937471598, -0.04318831115961075, -0.013755880296230316, -2.253030106658116e-05, -0.06758750230073929, -0.8077968955039978, -0.438213974237442, -2.157705545425415, -0.02029101364314556, -0.34867584705352783, -0.00023672162205912173, -9.60780744208023e-05, -0.04782348871231079, -0.0007940953364595771, -0.0010209829779341817, -0.00040534863364882767, -1.3589766240329482e-05, -0.000513064325787127, -0.001867456827312708, -1.5497195136049413e-06, -4.768370445162873e-07, -0.03651314228773117, -0.011185086332261562, -0.004431665409356356, -0.05275803804397583, -0.1949561983346939, -0.18943507969379425, -0.0018308082362636924, -5.090107151772827e-05, -0.0004127365828026086, -0.0025764862075448036, -0.45368272066116333, -2.4771597385406494, -0.0009261847590096295, -0.0007252446957863867, -1.1920928244535389e-07, -3.71926071238704e-05, -1.5497195136049413e-06, -0.002714403672143817, -3.8980677345534787e-05, -0.0030145461205393076, -2.5987286790041253e-05, -0.0008690156391821802, -9.738924563862383e-05, -0.001073261140845716, -1.2181932926177979, -0.0013765154872089624, -0.2887974679470062, -2.820884943008423, -0.2709645926952362, -0.3985549509525299, -0.14844875037670135, -1.9582414627075195, -0.4412434995174408, -0.8043950796127319, -0.002992677502334118, -2.5781846046447754, -0.36331334710121155, -2.084580659866333, -0.21834000945091248, -0.00022396916756406426, -0.025003531947731972, -0.41808491945266724, -2.50339189733495e-06, -0.00027366707217879593, -4.0531076592742465e-06, -0.00265733664855361, -0.09149332344532013, -5.471556869451888e-05, -0.0008170842193067074, -0.0006524579366669059, -0.1474648118019104, -0.0011135098757222295, -0.022519458085298538, -3.181349754333496, -0.13778670132160187, -1.1252350807189941, -0.0014062763657420874, -0.501453697681427, -0.021157287061214447, -5.090107151772827e-05, -0.0020384264644235373, -5.364403477869928e-06, -1.1548786163330078, -0.36967575550079346, -0.15637527406215668, -0.11258164793252945, -0.006130462046712637, -0.7858598828315735, -2.4823532104492188, -0.29824745655059814, -2.722301483154297, -0.022875119000673294, -2.045095682144165, -0.005024425685405731, -0.021343078464269638, -0.0011750705307349563, -0.0003943857445847243, -0.0015266203554347157, -0.011280803009867668, -0.003090964164584875, -2.3841855067985307e-07, -0.00047469791024923325, -0.023263616487383842, -0.5521163940429688, -0.004515688866376877, -1.0212674140930176, -1.1257025003433228, -0.036883506923913956, -0.12039829790592194, -0.39610958099365234, -1.8038004636764526, -0.08290363103151321, -0.08141102641820908, -0.39854487776756287, -0.12517765164375305, -0.1856546849012375, -0.0003570872650016099, -0.006042071618139744, -0.03582490235567093, -0.0002475670480635017, -0.0018167671514675021, -0.019066862761974335, -0.0022747849579900503, -2.7418097943154862e-06, -6.794906312279636e-06, -4.768258077092469e-05, -6.794906312279636e-06, -0.00444816192612052, -0.0008091036579571664, -0.0022693139035254717, -0.0004502712981775403, -1.0167186260223389, -1.0847986231965479e-05, -1.0967194612021558e-05, -0.016490591689944267, -6.305972783593461e-05, -0.003886172082275152, -0.0006828360492363572, -0.00028832571115344763, -1.8187040090560913, -6.9141146923357155e-06, -7.784063927829266e-05, -7.033323527139146e-06, -0.0008285188814625144, -0.0004027270770166069, -0.020799145102500916, -9.536738616588991e-07, -2.658331868587993e-05, -1.3232143828645349e-05, -0.02191878668963909, -0.031558677554130554, -0.006527530960738659, -0.0053007532842457294, -0.005331345833837986, -0.000300958170555532, -0.08444671332836151, -5.364403477869928e-06, -3.4570634852570947e-06, -2.3841855067985307e-07, -0.0030156157445162535, -0.0006023023161105812, -0.0001429217227268964, -0.002747691236436367, -2.2373178005218506, -0.17051492631435394, -0.14605292677879333, -0.02780219353735447, -0.1377360075712204, -0.09742111712694168, -0.46542343497276306, -0.06481581181287766, -0.8280250430107117, -2.0709872245788574, -0.011323943734169006, -1.6350018978118896, -2.1407644748687744, -0.003327073995023966, -0.005826631560921669, -1.8833980560302734, -0.07546620815992355, -0.01446299534291029, -5.1973900554003194e-05, -7.986990567587782e-06, -1.9073468138230965e-06, -0.26775500178337097, -0.01662132702767849, -0.6702327728271484], "finish_reason": "stop"}], "metrics": {"energy": 737.7620942249299, "energy_per_token": 3.368776685958584, "time": 18.49765, "time_per_token": 0.08446415525114155}}
{"outputs": [{"text": "# Ensures the existence of DEST_DIR\n    os.makedirs(DEST_DIR, exist_ok=True)\n\n    # Define the source and destination directories\n    files = glob.glob(ROOT_DIR + \"/*\")\n\n    files_moved = 0\n\n    # Iterate over each file in the source directory\n    for file in files:\n        # Calculate the MD5 hash of the file\n        with open(file, 'rb') as file_obj:\n            file_bytes = file_obj.read()\n            md5_hash = hashlib.md5(file_bytes).hexdigest()\n\n        # Check if the calculated hash matches the specific hash\n        if md5_hash == SPECIFIC_HASH:\n            # If yes, move the file to the destination directory\n            shutil.move(file, DEST_DIR)\n            files_moved += 1\n\n    # Return the number of files moved\n    return files_moved", "tokens": ["#", " E", "ns", "ures", " the", " existence", " of", " DE", "ST", "_", "DIR", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Define", " the", " source", " and", " destination", " directories", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "ROOT", "_", "DIR", " +", " \"", "/*", "\"", ")", "\n", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " file", " in", " the", " source", " directory", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "#", " Calculate", " the", " MD", "5", " hash", " of", " the", " file", "\n", "        ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " file", "_", "obj", ":", "\n", "            ", "file", "_", "bytes", " =", " file", "_", "obj", ".", "read", "()", "\n", "            ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "(", "file", "_", "bytes", ")", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "#", " Check", " if", " the", " calculated", " hash", " matches", " the", " specific", " hash", "\n", "        ", "if", " md", "5", "_", "hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "            ", "#", " If", " yes", ",", " move", " the", " file", " to", " the", " destination", " directory", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "            ", "files", "_", "m", "oved", " +=", " ", "1", "\n", "\n", "    ", "#", " Return", " the", " number", " of", " files", " moved", "\n", "    ", "return", " files", "_", "m", "oved", "\n", "\n", "#"], "logprobs": [-0.9781699180603027, -2.609466552734375, -0.016181211918592453, -1.1020675897598267, -0.7516525983810425, -0.61062091588974, -0.004492191597819328, -1.6433534622192383, -0.00010644822759786621, -0.003686538664624095, -0.0015772057231515646, -0.6314141154289246, -0.0025789830833673477, -0.7574059963226318, -0.00012182447244413197, -0.004930717870593071, -5.960462772236497e-07, -2.622600959512056e-06, -9.30981186684221e-05, -0.015776460990309715, -4.172316494077677e-06, -5.9960475482512265e-05, -3.2066785934148356e-05, -0.009845034219324589, -0.003542815800756216, -7.510157047363464e-06, -2.253030106658116e-05, -0.016351746395230293, -0.0009715604246594012, -0.0004332319076638669, -0.005968604702502489, -0.28328579664230347, -0.00030250742565840483, -0.4540901482105255, -4.590018272399902, -0.3849616050720215, -2.7822818756103516, -1.278085708618164, -0.11400040239095688, -0.8924562335014343, -0.07490713894367218, -0.021231165155768394, -2.8635549545288086, -0.4610368609428406, -0.15016600489616394, -8.165503095369786e-05, -0.011713889427483082, -0.004563631024211645, -1.6946866512298584, -8.106198947643861e-06, -6.079655122448457e-06, -0.1050436869263649, -0.7830533385276794, -0.7733870148658752, -0.1297949254512787, -0.0308302640914917, -0.04707339406013489, -0.6746553182601929, -0.00030322244856506586, -3.0795233249664307, -0.03358490765094757, -0.19967308640480042, -0.0009373800130560994, -0.07331226021051407, -0.053045906126499176, -7.986703712958843e-05, -0.10702161490917206, -0.7507674694061279, -0.000321336614433676, -0.7067177295684814, -1.246757984161377, -0.04467438906431198, -0.4447573125362396, -1.3040047883987427, -0.022466890513896942, -0.1480356603860855, -0.04640672728419304, -0.21083764731884003, -0.00728971604257822, -0.04810687154531479, -0.0011398254428058863, -0.009630530141294003, -0.08193539083003998, -0.2884238064289093, -0.001278655487112701, -0.00023684080224484205, -0.0004693360242526978, -0.07726480066776276, -0.3230527639389038, -0.3242914378643036, -0.016876066103577614, -0.09771479666233063, -0.0002602000313345343, -0.00598993431776762, -0.025396084412932396, -0.07046053558588028, -0.06030682846903801, -0.10101669281721115, -0.0026110862381756306, -1.0332276821136475, -0.0004172646440565586, -0.00010466027742950246, -0.002051512710750103, -0.0013004426145926118, -0.9108113646507263, -0.004067600704729557, -0.0003219324571546167, -5.23315102327615e-05, -2.095579147338867, -0.06934580951929092, -0.5338140726089478, -0.0012188870459794998, -0.0010935047175735235, -0.0030175175052136183, -0.48779842257499695, -0.0012317459331825376, -3.238187789916992, -0.0011694743297994137, -0.0010899323970079422, -7.033100700937212e-05, -9.059865078597795e-06, -3.480850500636734e-05, -4.6491513785440475e-06, -0.0017548889154568315, -0.0051773046143352985, -0.08884576708078384, -0.45753931999206543, -0.001438060076907277, -0.21012380719184875, -0.038435421884059906, -0.010584408417344093, -0.00027926836628466845, -3.6954811548639555e-06, -2.0265558760002023e-06, -0.0010782625759020448, -2.145764938177308e-06, -0.01834789849817753, -0.0008899780223146081, -2.312633478140924e-05, -1.4305104514278355e-06, -0.00029905137489549816, -0.0743970051407814, -0.009466993622481823, -5.8412379075889476e-06, 0.0, -1.823885577323381e-05, -0.006477076560258865, -0.0636930987238884, -0.054135117679834366, -0.06763987243175507, -0.7574777603149414, -0.0035229779314249754, -0.008416539058089256, -2.0537376403808594, -0.2514616549015045, -0.03153234347701073, -0.019381079822778702, -0.4870612323284149, -0.0319046750664711, -0.4100263714790344, -0.0008791395812295377, -0.01425617840141058, -0.006573955528438091, -7.271740287251305e-06, -5.125986263010418e-06, -2.3841855067985307e-07, -0.015775052830576897, -0.0007751559023745358, -1.0728830375228426e-06, -1.9073468138230965e-06, -7.152531907195225e-06, -1.0728830375228426e-06, -0.003851141082122922, -0.0009324969723820686, -0.0047406661324203014, -0.16478846967220306, -2.532252311706543, -2.897610664367676, -0.0022429090458899736, -0.09597408771514893, -0.0026535321958363056, -0.0007757514831610024, -0.05225163698196411, -0.002267291769385338, -0.03960402309894562, -0.008225729689002037, -0.048179466277360916, -0.0019911956042051315, -0.1847625970840454, -9.179073458653875e-06, -1.9073468138230965e-06, -0.006765435915440321, -2.288792165927589e-05, -0.0022245917934924364, -0.0002575780963525176, -0.030351722612977028, -3.576278118089249e-07, -6.794906312279636e-06, -6.079655122448457e-06, -0.041730549186468124, -0.0033260048367083073, -0.03748789057135582, -0.08818160742521286, -3.933898824470816e-06, -2.861018856492592e-06, 0.0, -0.009557325392961502, -0.0037504350766539574, -0.00012182447244413197, -0.012989548034965992, -0.10647809505462646, -0.008632722310721874, -1.3004167079925537, -0.28858131170272827, -0.018814319744706154, -0.11618445813655853, -0.00038532938924618065, -0.03187049552798271, -0.029562709853053093, -0.2675658166408539, -0.0007439468172378838, -0.02094426192343235, -0.008025068789720535, -5.769562994828448e-05, -6.6756979322235566e-06, 0.0, -0.44830000400543213, -0.00913582555949688, -1.6212815046310425], "finish_reason": "stop"}], "metrics": {"energy": 789.6114874191296, "energy_per_token": 3.448085097900129, "time": 19.341682, "time_per_token": 0.08446149344978165}}
{"outputs": [{"text": "os.makedirs(DEST_DIR, exist_ok=True)  # Ensure the destination directory exists\n\n    files = glob.glob(os.path.join(ROOT_DIR, \"*\"))\n\n    files_moved = 0\n    for file_path in files:\n        if os.path.isfile(file_path):\n            md5_hash = hashlib.md5()\n            with open(file_path, \"rb\") as file:\n                while chunk := file.read(8192):\n                    md5_hash.update(chunk)\n\n            if md5_hash.hexdigest() == SPECIFIC_HASH:\n                shutil.move(file_path, DEST_DIR)\n                files_moved += 1\n\n    return files_moved", "tokens": ["os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "  ", "#", " Ensure", " the", " destination", " directory", " exists", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " \"", "*", "\"", "))", "\n", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " files", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " file", ":", "\n", "                ", "while", " chunk", " :=", " file", ".", "read", "(", "8", "1", "9", "2", "):", "\n", "                ", "    ", "md", "5", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "\n", "            ", "if", " md", "5", "_", "hash", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "files", "_", "m", "oved", " +=", " ", "1", "\n", "\n", "    ", "return", " files", "_", "m", "oved", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.9333806037902832, -0.0005990855861455202, -0.025382021442055702, -3.6954811548639555e-06, -3.814689989667386e-06, -0.00017557987303007394, -0.012103093788027763, -7.152531907195225e-06, -7.748573807475623e-06, -3.4570634852570947e-06, -0.011737452819943428, -0.0056714811362326145, -6.198863957251888e-06, -5.602820692729438e-06, -0.0166294164955616, -0.0021052833180874586, -0.000395815703086555, -2.003530740737915, -0.000582644424866885, -0.6171390414237976, -0.8568159937858582, -0.9587920904159546, -0.03341728821396828, -0.019773857668042183, -0.13219237327575684, -0.8215482234954834, -0.00029094755882397294, -1.1641064882278442, -1.2160515785217285, -0.105548195540905, -3.480850500636734e-05, -0.03153038024902344, -0.006440123077481985, -0.3133702278137207, -4.410734163684538e-06, -0.00011157367407577112, -2.861018856492592e-06, -0.001081953989341855, -0.0007578838267363608, -0.0015538772568106651, -1.549708758830093e-05, -1.1920922133867862e-06, -0.0013736584223806858, -1.086147665977478, -0.4799005091190338, -0.17555248737335205, -0.0241696760058403, -0.7863402366638184, -1.3500374555587769, -0.000163541772053577, -1.4030508995056152, -0.020363669842481613, -0.10964077711105347, -0.00027414379292167723, -0.021835746243596077, -0.019623778760433197, -3.313963316031732e-05, -0.13335368037223816, -0.5012003183364868, -0.029194829985499382, -0.1177438274025917, -1.6001131534576416, -0.19731581211090088, -0.0007024919614195824, -0.002887486945837736, -0.0001134808044298552, -0.004495514091104269, -0.006218252703547478, -0.8681029677391052, -0.1651448756456375, -1.1324817933200393e-05, -0.001261987374164164, -1.6689286894688848e-06, -0.006957470905035734, -0.08224265277385712, -0.00019774865359067917, -0.0006599632324650884, -3.6954811548639555e-06, 0.0, -0.02056058496236801, -0.05860011279582977, -0.003737252438440919, -1.0795104503631592, -0.0009709649602882564, -0.08635379374027252, -0.007283680606633425, -0.008167557418346405, -0.04951884597539902, -0.0018920868169516325, -9.298280929215252e-06, -0.0014552014181390405, -1.5497195136049413e-06, -0.18030931055545807, -0.05133262649178505, -0.11661388725042343, -0.021380536258220673, -5.1973900554003194e-05, -2.6464111215318553e-05, -0.0007339406292885542, -5.8412379075889476e-06, -2.3841855067985307e-07, -8.237022848334163e-05, -0.1829269975423813, -0.0017779747722670436, -7.152531907195225e-06, -0.00025769727653823793, -2.1576648578047752e-05, -1.1588172912597656, -0.026479247957468033, -0.00100740697234869, -0.0002592465898487717, -1.379724383354187, -0.3626958429813385, -7.331102824537084e-05, -0.0002592465898487717, -2.5987286790041253e-05, -4.768360213347478e-06, -0.01958976313471794, -0.07870277762413025, -0.01342342421412468, -0.0003002431185450405, -0.0002076410164590925, -0.006469022948294878, -0.09498026221990585, -2.455681169521995e-05, -0.00017808281700126827, -0.001716689090244472, -2.861018856492592e-06, -2.5152843591058627e-05, -9.65590606938349e-06, -1.7046782886609435e-05, -2.3841855067985307e-07, -1.3828182090946939e-05, -3.504691630951129e-05, -0.00012158608296886086, -0.000832568621262908, -0.4912821054458618, -0.00750353978946805, -0.13155430555343628, -0.004794766660779715, -1.6689286894688848e-06, -3.2186455882765586e-06, -3.099436753473128e-06, -0.0030333243776112795, -0.0003361137059982866, -1.1086402082582936e-05, 0.0, -0.00012885693286079913, -0.008538524620234966, -0.0007970731821842492, -4.768370445162873e-07, -1.0728830375228426e-06, -2.264974000354414e-06, -1.311301275563892e-06, -0.00339633971452713, -0.01232919655740261, -0.00030322244856506586, -0.35122981667518616, -3.576272320060525e-06, -1.9073468138230965e-06, -0.013637233525514603, -1.0132738680113107e-05, -0.001485317014157772, -4.684815212385729e-05, -1.1920928244535389e-07, -7.021180499577895e-05, -0.08536633849143982, -1.1920928244535389e-07, -3.933898824470816e-06, -5.245195097813848e-06, -0.0047273775562644005, -0.008394197560846806, -0.0008349508279934525, -0.03289372846484184, -6.9141146923357155e-06, -3.6954811548639555e-06, 0.0, -0.0011091040214523673, -0.00029690624796785414, -7.199982064776123e-05, -0.0015235256869345903, -0.14005222916603088, -0.0038932969328016043, -0.032362740486860275, -0.005596682894974947, -7.712543447269127e-05, -4.768370445162873e-07, 0.0, -1.3999372720718384, -3.6954811548639555e-06, -1.7881377516459906e-06, -1.311301275563892e-06, -4.339123915997334e-05, -1.6844255924224854, -0.0009982370538637042], "finish_reason": "stop"}], "metrics": {"energy": 688.971996454239, "energy_per_token": 3.5331897254063542, "time": 16.396742, "time_per_token": 0.08408585641025641}}
{"outputs": [{"text": "# Ensure existence of the DEST_DIR\n    if not os.path.exists(DEST_DIR):\n        os.makedirs(DEST_DIR)\n\n    # List all files in the ROOT_DIR\n    files = glob.glob(os.path.join(ROOT_DIR, \"*\"))\n    count = 0\n\n    for file in files:\n        if os.path.isfile(file):\n            with open(file, \"rb\") as file_to_read:\n                contents = file_to_read.read()\n                md5_hash = hashlib.md5(contents).hexdigest()\n\n                # Check if md5_hash matches SPECIFIC_HASH and if it does,\n                # move the file to the DEST_DIR\n                if md5_hash == SPECIFIC_HASH:\n                    shutil.move(file, DEST_DIR)\n                    count += 1\n\n    return count", "tokens": ["#", " Ensure", " existence", " of", " the", " DE", "ST", "_", "DIR", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ")", "\n", "\n", "    ", "#", " List", " all", " files", " in", " the", " RO", "OT", "_", "DIR", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " \"", "*", "\"", "))", "\n", "    ", "count", " =", " ", "0", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "with", " open", "(", "file", ",", " \"", "rb", "\"", ")", " as", " file", "_", "to", "_", "read", ":", "\n", "                ", "contents", " =", " file", "_", "to", "_", "read", ".", "read", "()", "\n", "                ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "(", "contents", ")", ".", "hex", "dig", "est", "()", "\n", "\n", "                ", "#", " Check", " if", " md", "5", "_", "hash", " matches", " SPEC", "IFIC", "_", "H", "ASH", " and", " if", " it", " does", ",", "\n", "                ", "#", " move", " the", " file", " to", " the", " DE", "ST", "_", "DIR", "\n", "                ", "if", " md", "5", "_", "hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "    ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "    ", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-0.9781699180603027, -0.6535950303077698, -2.7673704624176025, -0.013755409978330135, -1.1980743408203125, -1.6643773317337036, -0.00020180096908006817, -0.05522438883781433, -0.002334252465516329, -0.6951835751533508, -0.00317450612783432, -0.7974212169647217, -0.08243938535451889, -0.007933888584375381, -7.509902934543788e-05, -0.0008068405441008508, -2.2649508537142538e-05, -0.12619876861572266, -0.0001720042055239901, -0.004712546709924936, -2.7418097943154862e-06, -3.3378546504536644e-06, -6.556489552167477e-06, -0.002286321949213743, -0.013825015164911747, -0.008188722655177116, -0.049337878823280334, -2.5748875486897305e-05, -0.18082688748836517, -2.4199192921514623e-05, -4.339123915997334e-05, -0.00025281094713136554, -0.0043370709754526615, -1.5497195136049413e-06, -8.583032467868179e-06, -9.536738616588991e-07, -0.019645871594548225, -0.009372166357934475, -0.17374877631664276, -0.0011960265692323446, -0.45847344398498535, -3.3096718788146973, -0.3798905611038208, -0.32854899764060974, -0.26371926069259644, -0.5270437598228455, -0.8467713594436646, -0.00010263393050990999, -0.011744639836251736, -0.0012696071062237024, -0.4886181950569153, -0.00028451209072954953, -0.41413232684135437, -0.20418405532836914, -0.10444969683885574, -7.903263758635148e-05, -0.01331603154540062, -0.009826737456023693, -0.3289099335670471, -2.0265558760002023e-06, -0.00012432756193447858, -2.861018856492592e-06, -0.001663373550400138, -0.0004406196530908346, -0.0011262509506195784, -6.9141146923357155e-06, -1.4305104514278355e-06, -0.0018710264703258872, -0.9471701979637146, -0.11800415813922882, -0.05887472629547119, -0.008252686820924282, -0.0047830212861299515, -1.320949912071228, -1.5060811042785645, -0.0997006744146347, -0.002680401550605893, -0.00010132275929208845, -0.23495148122310638, -0.4241150915622711, -0.0001908358681248501, -0.9681633710861206, -0.1479673981666565, -0.38106703758239746, -0.000920706195756793, -0.00025197668583132327, -0.004423832520842552, -0.019495656713843346, -1.4108710289001465, -0.11215624213218689, -1.07287787614041e-05, -0.0008400725200772285, -2.145764938177308e-06, -0.004033051431179047, -0.06546507030725479, -0.00026425207033753395, -0.0015445933677256107, -0.01622273400425911, -0.02903318963944912, -0.006246329750865698, -1.0744411945343018, -8.368142152903602e-05, -0.00034409802174195647, -0.0011135098757222295, -0.0014556775568053126, -0.4063096344470978, -0.006474115885794163, -0.0004217927053105086, -0.0003756771038752049, -2.276871418871451e-05, -2.330448865890503, -0.1392524093389511, -2.0199344158172607, -0.00280962698161602, -2.365057945251465, -0.004488156642764807, -0.007000679615885019, -0.0068207294680178165, -2.474560260772705, -0.041465021669864655, -0.0018055817345157266, -0.00012373158824630082, -5.006777428206988e-06, -1.7881377516459906e-06, -3.2186455882765586e-06, -0.00022003613412380219, -7.629365427419543e-06, -0.00038378025055862963, -0.011502377688884735, -0.19354353845119476, -1.1857657432556152, -0.007520577870309353, -0.24349866807460785, -0.06194554269313812, -0.02870728075504303, -0.0008649660157971084, -8.34461570775602e-06, -4.768360213347478e-06, -0.0037074419669806957, -3.933898824470816e-06, -0.02995012141764164, -0.0006565084331668913, -0.0004145239945501089, -0.09679390490055084, -0.0025966993998736143, -1.4781842764932662e-05, 0.0, -3.0040289857424796e-05, -0.03845560923218727, -0.6746455430984497, -0.450525164604187, -1.8671395778656006, -1.2163872718811035, -0.2078031748533249, -2.658308506011963, -0.0005180685548111796, -0.19252434372901917, -0.003819077741354704, -0.2549726963043213, -1.0596885681152344, -0.0009258274803869426, -0.005050519946962595, -0.0003301552205812186, -0.00013445904187392443, -2.306812047958374, -2.212327718734741, -1.251767873764038, -1.1160924434661865, -0.293149471282959, -3.2010581493377686, -0.001279369811527431, -0.00825446005910635, -0.29520806670188904, -0.26060426235198975, -0.014323633164167404, -0.3813931345939636, -0.6359077095985413, -0.35818055272102356, -5.1973900554003194e-05, -0.005863133817911148, -0.0008778294431976974, -0.2703225314617157, -0.006344652269035578, -0.008126173168420792, -0.012590210884809494, -2.0861407392658293e-05, -2.0265373677830212e-05, -4.768370445162873e-07, -0.011501670815050602, -0.0012692499440163374, -3.576278118089249e-07, -1.5497195136049413e-06, -6.198863957251888e-06, -2.145764938177308e-06, -0.0052642300724983215, -0.0007962394156493247, -0.0011747133685275912, -0.0003992714046034962, -0.3451389670372009, -7.510157047363464e-06, -7.271740287251305e-06, -0.01955995336174965, -3.71926071238704e-05, -0.00747159356251359, -0.0002731903805397451, -0.10365483164787292, 0.0, -5.722029527532868e-06, -3.099436753473128e-06, -0.008137405849993229, -0.0035858158953487873, -0.006235904525965452, -0.0004957877099514008, -0.049071867018938065, -0.028772957623004913, -0.0020276003051549196, -7.366862701019272e-05, -0.012128651142120361, -0.27598488330841064, -0.016268828883767128, -0.1660260558128357, -0.0046678148210048676, -0.4785130023956299, -0.009198548272252083, -0.5666247606277466], "finish_reason": "stop"}], "metrics": {"energy": 781.5633330268854, "energy_per_token": 3.473614813452824, "time": 19.330471, "time_per_token": 0.08591320444444445}}
{"outputs": [{"text": "# Ensure that the destination directory exists\n    os.makedirs(DEST_DIR, exist_ok=True)\n\n    files_moved = 0\n    for file in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(file):\n            file_hash = hashlib.md5()\n            with open(file, 'rb') as f:\n                file_hash.update(f.read())\n            if file_hash.hexdigest() == SPECIFIC_HASH:\n                shutil.move(file, DEST_DIR)\n                files_moved += 1\n    return files_moved", "tokens": ["#", " Ensure", " that", " the", " destination", " directory", " exists", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " '", "*", "'))", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "file", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "file", "_", "hash", ".", "update", "(", "f", ".", "read", "())", "\n", "            ", "if", " file", "_", "hash", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "files", "_", "m", "oved", " +=", " ", "1", "\n", "    ", "return", " files", "_", "m", "oved", "\n", "\n", "if"], "logprobs": [-0.9781699180603027, -0.6535950303077698, -1.1935312747955322, -0.2266373336315155, -0.32615819573402405, -0.026501189917325974, -0.023372041061520576, -0.6376953125, -0.0021785590797662735, -0.640916645526886, -0.00010954733443213627, -0.0020070187747478485, -1.1920922133867862e-06, -1.1920922133867862e-06, -9.16677454370074e-05, -0.009135589934885502, -5.960446742392378e-06, -4.8636207793606445e-05, -1.7881377516459906e-06, -0.0051250034011900425, -0.0011834054021164775, -5.960446742392378e-06, -9.298280929215252e-06, -0.008510866202414036, -0.0012461524456739426, -0.00024125049822032452, -0.0066122072748839855, -0.1607804000377655, -0.0002157455455744639, -2.036268711090088, -0.3189353942871094, -0.3527040481567383, -0.00021145492792129517, -0.04832736775279045, -0.01632254384458065, -2.2649508537142538e-05, -0.08251282572746277, -0.7616167068481445, -0.5753190517425537, -0.445473313331604, -0.6140151023864746, -0.0492069236934185, -4.541770613286644e-05, -0.2395627498626709, -0.0024949158541858196, -0.3961608111858368, -9.536738616588991e-07, -0.00016878610767889768, -1.311301275563892e-06, -0.0011743560899049044, -0.0005470209871418774, -0.001430560601875186, -1.2993727978027891e-05, -1.311301275563892e-06, -0.0018656720640137792, -0.42214205861091614, -0.6165308952331543, -0.15061768889427185, -0.00042298430344089866, -0.016919903457164764, -0.015222563408315182, -0.6916564702987671, -0.18658238649368286, -2.0265373677830212e-05, -0.00037293630884960294, -1.1920922133867862e-06, -0.0023631523363292217, -0.04157057777047157, -0.00014995403762441128, -0.0006092122639529407, -0.021316705271601677, -0.01307273842394352, -0.005082662217319012, -2.72409725189209, -0.023484066128730774, -0.12262454628944397, -0.0026448529679328203, -0.04788860306143761, -0.002880473854020238, -1.4424220353248529e-05, -0.0009529816452413797, -6.9141146923357155e-06, -0.43764227628707886, -0.01825227029621601, -0.02660346031188965, -0.03781956061720848, -0.00022265815641731024, -5.972207145532593e-05, -0.0006847421173006296, -0.00012814177898690104, -0.18898214399814606, -0.0016901507042348385, -0.00019059749320149422, -5.507317473529838e-05, -0.08314785361289978, -0.021526150405406952, -0.002107305685058236, -0.0005200940649956465, -0.908965528011322, -5.018585216021165e-05, -0.004686562344431877, -0.0005346299149096012, -2.264974000354414e-06, -0.0002252801787108183, -0.000699156429618597, -3.3378044463461265e-05, -2.145764938177308e-06, -0.0006773561472073197, -0.003916452173143625, -0.2544276714324951, -0.28060397505760193, -0.007587069179862738, -3.2305197237292305e-05, -5.960462772236497e-07, -0.0021328814327716827, -0.000536655425094068, -1.2040065485052764e-05, 0.0, -0.00022063204960431904, -0.009990568272769451, -0.0007103541865944862, -5.960462772236497e-07, -1.4305104514278355e-06, -1.0847986231965479e-05, -1.6212332411669195e-05, -0.0022599175572395325, -0.0035990008618682623, -0.0005940818227827549, -0.22489286959171295, -3.576272320060525e-06, -2.0265558760002023e-06, -0.014507995918393135, -1.8596476365928538e-05, -0.0010767144849523902, -0.0001445904199499637, -0.21704013645648956, -1.1920928244535389e-07, -5.364403477869928e-06, -8.34461570775602e-06, -0.004619640298187733, -0.0034046561922878027, -0.0007484733941964805, -0.03096665069460869, -4.6491513785440475e-06, -9.536738616588991e-07, 0.0, -0.0013906818348914385, -0.0006148116663098335, -8.761498611420393e-05, -0.0009079624433070421, -0.5044549703598022, -0.02710213139653206, -0.0038114774506539106, -1.3232143828645349e-05, -1.4305104514278355e-06, -1.1920928244535389e-07, -0.4254589080810547, -0.01193678192794323, -0.7165564894676208], "finish_reason": "stop"}], "metrics": {"energy": 600.8483532028198, "energy_per_token": 3.778920460395093, "time": 14.471473, "time_per_token": 0.09101555345911949}}
{"outputs": [{"text": "# Ensure the target directory exists, otherwise create it\n    os.makedirs(DEST_DIR, exist_ok=True)\n\n    # Initialize a counter to keep track of the moved files\n    moved_files = 0\n\n    # Iterate through files in the root directory and its subdirectories\n    for root, _, files in os.walk(ROOT_DIR):\n        for file in files:\n            full_path = os.path.join(root, file)\n            if os.path.isfile(full_path):\n                with open(full_path, 'rb') as f:\n                    data = f.read()\n                    # Calculate MD5 hash of file contents\n                    hash = hashlib.md5(data).hexdigest()\n                    # Check if hash matches the specific hash value\n                    if hash == SPECIFIC_HASH:\n                        # Move the file to the target directory\n                        new_path = os.path.join(DEST_DIR, file)\n                        shutil.move(full_path, new_path)\n                        moved_files += ", "tokens": ["#", " Ensure", " the", " target", " directory", " exists", ",", " otherwise", " create", " it", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Initialize", " a", " counter", " to", " keep", " track", " of", " the", " moved", " files", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " through", " files", " in", " the", " root", " directory", " and", " its", " sub", "direct", "ories", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "ROOT", "_", "DIR", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "full", "_", "path", "):", "\n", "                ", "with", " open", "(", "full", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "    ", "data", " =", " f", ".", "read", "()", "\n", "                ", "    ", "#", " Calculate", " MD", "5", " hash", " of", " file", " contents", "\n", "                ", "    ", "hash", " =", " hash", "lib", ".", "md", "5", "(", "data", ")", ".", "hex", "dig", "est", "()", "\n", "                ", "    ", "#", " Check", " if", " hash", " matches", " the", " specific", " hash", " value", "\n", "                ", "    ", "if", " hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "        ", "#", " Move", " the", " file", " to", " the", " target", " directory", "\n", "                ", "        ", "new", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DE", "ST", "_", "DIR", ",", " file", ")", "\n", "                ", "        ", "sh", "util", ".", "move", "(", "full", "_", "path", ",", " new", "_", "path", ")", "\n", "                ", "        ", "m", "oved", "_", "files", " +=", " "], "logprobs": [-0.9781699180603027, -0.6535950303077698, -0.9812452793121338, -1.9941529035568237, -0.07071002572774887, -0.03829741105437279, -2.7288825511932373, -1.9925017356872559, -0.08310835808515549, -0.013563970103859901, -0.24332185089588165, -0.002979246899485588, -1.2462269067764282, -9.870042413240299e-05, -0.001191144809126854, -3.576278118089249e-07, -1.5497195136049413e-06, -9.321732068201527e-05, -0.016341660171747208, -4.887569048150908e-06, -1.4185804502631072e-05, -2.861018856492592e-06, -0.0035303430631756783, -0.0015048381173983216, -3.6954811548639555e-06, -6.556489552167477e-06, -0.006314445752650499, -0.0007457336178049445, -0.00026603974401950836, -0.005612093489617109, -0.16670164465904236, -0.00022885564249008894, -0.2744535207748413, -1.1079657077789307, -0.41234448552131653, -0.29299038648605347, -1.4955580234527588, -0.4087601900100708, -0.00266779912635684, -0.0006560318870469928, -0.3760198950767517, -2.679431915283203, -0.10684722661972046, -0.0995401069521904, -0.00012408917245920748, -0.8004122376441956, -0.016877824440598488, -0.02757306955754757, -0.2575174570083618, -0.5540354251861572, -0.004904857836663723, -5.674201020156033e-05, -0.0014778178883716464, -0.024116497486829758, -0.00018749863374978304, -0.016713827848434448, -1.3256926536560059, -0.0024120304733514786, -0.9298938512802124, -2.609511375427246, -0.09239497035741806, -0.12140097469091415, -0.2726655900478363, -0.007402846124023199, -1.713176965713501, -0.5538143515586853, -0.0038611162453889847, -0.07563211768865585, -3.0278701160568744e-05, -0.0614803172647953, -0.000439428084064275, -0.04226938635110855, -1.1003574132919312, -0.013610421679913998, -1.6477644443511963, -0.014728034846484661, -0.05723097175359726, -0.0019061268540099263, -0.0006753309280611575, -3.40932747349143e-05, -1.4305012882687151e-05, -0.00024077377747744322, -0.0013852057745680213, -2.50339189733495e-06, -1.7881377516459906e-06, -0.012364756315946579, -0.003488884773105383, -0.012186004780232906, -0.09737926721572876, -0.13094772398471832, -0.22750358283519745, -0.0005283151986077428, -4.1960789531003684e-05, -0.0008933129138313234, -0.009474669583141804, -3.2231979370117188, -0.012960600666701794, -0.18504737317562103, -0.0034755796659737825, -0.0006204110686667264, 0.0, -9.894321920000948e-06, -7.152555099310121e-07, -0.0012935374397784472, -1.4305012882687151e-05, -0.0006874820101074874, -4.589452510117553e-05, -0.00023195437097456306, -6.139089964563027e-05, -0.013558677397668362, -0.9932973384857178, -2.135741710662842, -0.7056566476821899, -0.003591755172237754, -0.006691784597933292, -4.6491513785440475e-06, -0.12784333527088165, -0.02874353714287281, -0.0006426891195587814, -0.0009268993744626641, -1.7881377516459906e-06, -1.0728830375228426e-06, -0.03691280633211136, -0.0723901242017746, -0.016345178708434105, -1.6229665279388428, -0.0002554328821133822, -0.00022742546570952982, -0.0013897294411435723, -1.5497195136049413e-06, 0.0, -0.001630644896067679, -0.4798654019832611, -0.010766984894871712, -0.0016664678696542978, -8.856858039507642e-05, -0.5600763559341431, -0.033861756324768066, -0.010366876609623432, -0.00354923028498888, -0.0010793342953547835, -2.731905937194824, -0.006566021125763655, -0.0004928089329041541, -4.887569048150908e-06, -1.9073468138230965e-06, -0.00027652730932459235, -0.019853679463267326, -0.1302502602338791, -0.269783079624176, -1.3244125843048096, -0.15558116137981415, -2.164761543273926, -0.00021526881027966738, -0.013893439434468746, -0.1689503937959671, -2.450942277908325, -1.0433266162872314, -0.03149191290140152, -0.00027223696815781295, -0.00016258825780823827, -1.6460450887680054, -2.0985660552978516, -0.00045885046711191535, -5.364403477869928e-06, -3.933898824470816e-06, -0.0016331442166119814, -4.768360213347478e-06, -0.01732560060918331, -0.0009366653976030648, -0.00020883286197204143, -0.017947183921933174, -0.005479554180055857, -9.536697689327411e-06, 0.0, -2.586808113846928e-05, -0.0032913105096668005, -0.1925782412290573, -0.15250061452388763, -0.9368371963500977, -1.0224971771240234, -0.02082669921219349, -1.2689732313156128, -0.017301464453339577, -0.37553277611732483, -0.6516250967979431, -0.28956449031829834, -1.167819619178772, -0.0899859294295311, -0.0003449321957305074, -0.0009114163694903255, -0.005631889682263136, -0.015464512631297112, -0.016807962208986282, -0.0009227308910340071, -1.311301275563892e-06, -2.264974000354414e-06, -3.099436753473128e-06, -1.1920922133867862e-06, -0.004092295654118061, -0.0005840741214342415, -0.0005947966128587723, -0.0011799524072557688, -0.2005125731229782, -0.6423863172531128, -0.4413052201271057, -0.00816507451236248, -0.2509193420410156, -0.03253572806715965, -0.9310272932052612, -0.010640081018209457, -0.21760082244873047, -0.0005043664714321494, -0.00022933237778488547, -3.002800226211548, -0.004282470792531967, -0.5775178074836731, -0.0008904544520191848, -0.044472586363554, -4.0531076592742465e-06, -1.4781842764932662e-05, -2.50339189733495e-06, -0.0032131255138665438, -0.00036864637513644993, -0.01741171069443226, -3.576278118089249e-07, -7.748573807475623e-06, -6.6756979322235566e-06, -0.0013897294411435723, -0.14107826352119446, -0.007182846311479807, -0.0021906918846070766, -0.015919961035251617, -0.00023576818057335913, -0.22522659599781036, -2.3841830625315197e-06, -4.0531076592742465e-06, -0.023178474977612495, -2.1576648578047752e-05, -0.0012124576605856419, -1.7881377516459906e-06, 0.0, -7.998623186722398e-05, -0.003112474223598838, -2.145764938177308e-06, -2.3841855067985307e-07, -0.0008544846205040812, -0.00264140497893095, -0.0084060188382864, -0.0008336406317539513, -0.24558481574058533, -2.610649426060263e-05, -1.2874520507466514e-05, -5.602820692729438e-06, -0.0011503038695082068, -0.0004714807728305459], "finish_reason": "length"}], "metrics": {"energy": 870.9850487880705, "energy_per_token": 3.4022853468284002, "time": 21.861654, "time_per_token": 0.0853970859375}}
{"outputs": [{"text": "# Ensure the destination directory exists and create it if not\n    if not os.path.exists(DEST_DIR):\n        os.makedirs(DEST_DIR)\n\n    # Loop through all files in ROOT_DIR\n    for file in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n\n        if os.path.isfile(file):\n            # Calculate the MD5 hash of the file\n            md5_hash = hashlib.md5()\n            with open(file, \"rb\") as f:\n                for byte_block in iter(lambda: f.read(4096), b\"\"):\n                    md5_hash.update(byte_block)\n\n            # Check if the hash matches the specified one\n            if md5_hash.hexdigest() == SPECIFIC_HASH:\n                # Move the file to the destination directory\n                shutil.move(file, DEST_DIR)\n\n    return len(os.listdir(DEST_DIR))", "tokens": ["#", " Ensure", " the", " destination", " directory", " exists", " and", " create", " it", " if", " not", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ")", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " RO", "OT", "_", "DIR", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " \"", "*", "\"", "))", ":", "\n", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "#", " Calculate", " the", " MD", "5", " hash", " of", " the", " file", "\n", "            ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "with", " open", "(", "file", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "for", " byte", "_", "block", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "    ", "md", "5", "_", "hash", ".", "update", "(", "byte", "_", "block", ")", "\n", "\n", "            ", "#", " Check", " if", " the", " hash", " matches", " the", " specified", " one", "\n", "            ", "if", " md", "5", "_", "hash", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "#", " Move", " the", " file", " to", " the", " destination", " directory", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "\n", "    ", "return", " len", "(", "os", ".", "list", "dir", "(", "DE", "ST", "_", "DIR", "))"], "logprobs": [-0.9781699180603027, -0.6535950303077698, -0.9812452793121338, -0.5613077878952026, -0.028118662536144257, -0.02112600766122341, -3.0335135459899902, -0.4897032380104065, -0.12057657539844513, -0.013993247412145138, -1.158304214477539, -0.1745060682296753, -0.0024040627758949995, -0.45716845989227295, -0.022930344566702843, -0.0027350897435098886, -6.258291978156194e-05, -0.0006140968762338161, -1.7523612768854946e-05, -0.07247062027454376, -0.0002411313180346042, -0.006297269370406866, -1.9073468138230965e-06, -7.510157047363464e-06, -5.602820692729438e-06, -0.0010180057724937797, -0.003849953645840287, -0.005101876333355904, -0.023260820657014847, -9.536697689327411e-06, -0.07918473333120346, -1.1920858014491387e-05, -4.589452510117553e-05, -0.00015841660206206143, -0.0016108882846310735, -7.152555099310121e-07, -1.1444026313256472e-05, -2.3841855067985307e-07, -0.01363746915012598, -0.0025113255251199007, -0.09512053430080414, -0.0013396107824519277, -0.2376776486635208, -3.7933337688446045, -0.21193383634090424, -0.2713812589645386, -0.25309106707572937, -0.07988350838422775, -2.5731332302093506, -4.60137271147687e-05, -0.0014113951474428177, -0.0005499995895661414, -0.662484347820282, -0.0007856381707824767, -1.6941702365875244, -0.2847726047039032, -0.6943634748458862, -0.0359286405146122, -5.328513361746445e-05, -0.08833810687065125, -0.004682290833443403, -0.26430702209472656, -5.006777428206988e-06, -4.851700214203447e-05, -3.3378546504536644e-06, -0.0005983707960695028, -0.0004220310365781188, -0.0005609607324004173, -5.006777428206988e-06, -3.4570634852570947e-06, -0.002471846528351307, -1.0652244091033936, -0.12087060511112213, -0.04228927195072174, -0.00782034546136856, -0.00022682955022901297, -0.002718089148402214, -2.6631622314453125, -0.0060881637036800385, -2.6391987800598145, -0.16997919976711273, -9.298280929215252e-06, -0.0006121906917542219, -3.3378546504536644e-06, -0.004773767665028572, -0.1360417902469635, -0.0002548369811847806, -0.001808437635190785, -0.019500214606523514, -0.09113611280918121, -0.35390371084213257, -0.273184597492218, -0.1444891393184662, -0.1586380898952484, -0.12367619574069977, -0.00028951745480298996, -0.009392124600708485, -0.043283067643642426, -0.09110955893993378, -0.09056559950113297, -0.11749964952468872, -0.0018170052208006382, -0.5324205160140991, -0.0024405713193118572, -0.08080381900072098, -0.005231856368482113, -0.008151477202773094, -0.01776685006916523, -0.0004961451631970704, -8.583032467868179e-06, -0.0017876134952530265, -1.7881377516459906e-06, -0.10793185234069824, -0.003249604720622301, -0.1242961436510086, -0.016991281881928444, -5.3165931603871286e-05, -0.00011646069469861686, -0.0012340081157162786, -0.00026603974401950836, -0.17681288719177246, -0.0021051643416285515, -5.602820692729438e-06, -0.000198821333469823, -7.259582343976945e-05, -0.032043687999248505, -0.013530570082366467, -0.002317720791324973, -0.0015323336701840162, -0.1240387111902237, -0.2005349099636078, -0.042191218584775925, -5.3881147323409095e-05, -1.680836794548668e-05, -0.003643305040895939, -1.2159273865108844e-05, -0.0050955903716385365, -0.0002991705550812185, -0.0002708068350329995, -1.1444026313256472e-05, -2.50339189733495e-06, -0.0008005275158211589, -0.018623728305101395, -0.00029237763374112546, -0.0002488780301064253, -5.4834770708112046e-05, -0.0005256939912214875, -3.0636318115284666e-05, -0.0027739638462662697, -0.000440262199845165, -9.536738616588991e-07, -4.291525328881107e-06, -0.0024217821191996336, -0.0001113352773245424, -0.0002540027489885688, -0.0008039817912504077, -4.6491513785440475e-06, -2.062299427052494e-05, -6.9141146923357155e-06, -6.818538531661034e-05, -4.768370445162873e-07, -1.0490362910786644e-05, -0.0006702084210701287, -2.50339189733495e-06, -2.3841855067985307e-07, -7.879423355916515e-05, -0.00022837892174720764, -0.1881566196680069, -0.016066139563918114, -0.08075939118862152, -1.158177137374878, -0.01451187301427126, -0.06426841765642166, -0.554718017578125, -0.07418384402990341, -0.19735388457775116, -1.6140861511230469, -2.9440016746520996, -0.11013367772102356, -0.0011847150744870305, -0.02338624931871891, -0.01138947531580925, -1.9073468138230965e-06, -5.960446742392378e-06, -1.7881377516459906e-06, -0.001404728856869042, -0.0006531727267429233, -5.8412379075889476e-06, 0.0, -0.0002450642641633749, -0.008539469912648201, -0.0013450870756059885, -1.0728830375228426e-06, -2.3841830625315197e-06, -4.339123915997334e-05, -1.6689286894688848e-06, -0.004789190832525492, -0.001661826390773058, -0.08399228006601334, -0.1731385886669159, -0.15601816773414612, -0.022102104499936104, -0.01276583131402731, -0.241923987865448, -0.17017480731010437, -0.2528182864189148, -0.02344261109828949, -0.07054951786994934, -0.0018076046835631132, -0.05738428980112076, -1.2159273865108844e-05, -2.264974000354414e-06, -0.004671968054026365, -2.13382354559144e-05, -0.002910427749156952, -0.000271879427600652, -0.2490612268447876, -1.1920928244535389e-07, -7.867782187531702e-06, -2.13382354559144e-05, -0.08206706494092941, -0.02785610407590866, -0.10558798909187317, -0.06900151818990707, -2.321397066116333, -0.27098193764686584, -0.010883730836212635, -0.6273207664489746, -1.168244216387393e-05, -0.0004848258395213634, -4.768370445162873e-07, -0.0004907834227196872, -0.03912312537431717, -3.576278118089249e-07, -1.3828182090946939e-05, -1.8715683836489916e-05, -0.000663894519675523], "finish_reason": "stop"}], "metrics": {"energy": 812.6609213390344, "energy_per_token": 3.4289490351857994, "time": 20.181751, "time_per_token": 0.08515506751054852}}
{"outputs": [{"text": "os.makedirs(DEST_DIR, exist_ok=True)\n    count = 0\n    for filename in glob.iglob(ROOT_DIR + \"/**/*\", recursive=True):\n        if os.path.isfile(filename):\n            with open(filename, \"rb\") as f:\n                file_hash = hashlib.md5(f.read()).hexdigest()\n                if file_hash == SPECIFIC_HASH:\n                    shutil.move(filename, DEST_DIR)\n                    count += 1\n    return count", "tokens": ["os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " filename", " in", " glob", ".", "ig", "lob", "(", "ROOT", "_", "DIR", " +", " \"", "/**", "/*", "\"", ",", " recursive", "=", "True", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "filename", "):", "\n", "            ", "with", " open", "(", "filename", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "md", "5", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "                ", "if", " file", "_", "hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "    ", "sh", "util", ".", "move", "(", "filename", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "    ", "count", " +=", " ", "1", "\n", "    ", "return", " count", "\n", "\n", "#"], "logprobs": [-1.9333806037902832, -0.0005990855861455202, -0.025382021442055702, -3.6954811548639555e-06, -3.814689989667386e-06, -0.00017557987303007394, -0.012103093788027763, -7.152531907195225e-06, -7.748573807475623e-06, -3.4570634852570947e-06, -0.011737452819943428, -0.0056714811362326145, -6.198863957251888e-06, -5.602820692729438e-06, -0.0166294164955616, -0.0021052833180874586, -0.000395815703086555, -0.1972639411687851, -0.31592974066734314, -2.1958200931549072, -0.1246604397892952, -0.006600365042686462, -8.284702198579907e-05, -0.02237398736178875, -0.12282098084688187, -0.16277915239334106, -2.142831325531006, -0.003625726094469428, -0.06149466708302498, -2.109982233378105e-05, -1.6777598857879639, -2.3841855067985307e-07, -0.00906553864479065, -0.8294011950492859, -4.6491513785440475e-06, -3.814689989667386e-06, -0.16804639995098114, -1.319655179977417, -0.5366753935813904, -0.3495476543903351, -0.13765177130699158, -0.005217151250690222, -0.0021506056655198336, -0.005962679628282785, -0.0012892514932900667, -0.0013806821079924703, -0.012537001632153988, -0.01260881032794714, -0.3232558071613312, -0.2187659591436386, -9.775113539944869e-06, -0.0013096098555251956, -1.7881377516459906e-06, -0.014762334525585175, -0.11116792261600494, -0.00011634149996098131, -0.0015187645331025124, -0.019136568531394005, -0.08179742842912674, -0.0036580332089215517, -0.49538129568099976, -0.00038842763751745224, -0.0003090619284193963, -0.004681104328483343, -0.004800105467438698, -0.3131335377693176, -0.010211603716015816, -0.0015487592900171876, -0.0005999195855110884, -2.6225699912174605e-05, -0.5216264724731445, -0.05855896323919296, -0.00396181084215641, -0.0005179494037292898, -0.7349355816841125, -0.04150848090648651, -0.0665147453546524, -0.0023545895237475634, -0.0010108605492860079, -2.1815061700181104e-05, -2.622600959512056e-06, -0.0012387705501168966, -1.6331539882230572e-05, -0.18820373713970184, -0.0008948612376116216, -1.5139465176616795e-05, -1.0728830375228426e-06, -0.0008106521563604474, -0.24423223733901978, -0.0025178655050694942, -3.504691630951129e-05, 0.0, -1.6927575416048057e-05, -0.006021691020578146, -0.7171470522880554, -0.02390165813267231, -0.02264474704861641, -4.529942543740617e-06, -4.768360213347478e-06, -0.01472756452858448, -0.0007236960809677839, -1.7881377516459906e-06, -9.536738616588991e-07, -9.298280929215252e-06, -8.4638240878121e-06, -0.0032245328184217215, -0.001649330137297511, -0.00026890001026913524, -0.00040141629870049655, -0.3668591380119324, -9.059865078597795e-06, -2.7418097943154862e-06, -0.03303583338856697, -2.2053474822314456e-05, -0.005835164804011583, -0.00026341783814132214, -0.0583556704223156, -1.1920928244535389e-07, -4.410734163684538e-06, -2.0265558760002023e-06, -0.024997137486934662, -0.0025598397478461266, -0.003837009659036994, -0.0006195771275088191, -0.03630129247903824, -0.009954098612070084, -0.0014773417497053742, -8.928377064876258e-05, -0.0006164796068333089, -0.13777661323547363, -0.047089315950870514, -0.004932141397148371, -0.4340600073337555, -0.014964232221245766, -1.9601128101348877], "finish_reason": "stop"}], "metrics": {"energy": 462.0447626171112, "energy_per_token": 3.4225537971637867, "time": 11.357867, "time_per_token": 0.08413234814814816}}
{"outputs": [{"text": "os.makedirs(DEST_DIR, exist_ok=True)\n    count = 0\n    for filename in glob.iglob(ROOT_DIR + \"**/**\", recursive=True):\n        if os.path.isfile(filename):\n            file_hash = hashlib.md5(open(filename, \"rb\").read()).hexdigest()\n            if file_hash == SPECIFIC_HASH:\n                shutil.move(filename, DEST_DIR)\n                count += 1\n    return count", "tokens": ["os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " filename", " in", " glob", ".", "ig", "lob", "(", "ROOT", "_", "DIR", " +", " \"", "**", "/**", "\"", ",", " recursive", "=", "True", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "filename", "):", "\n", "            ", "file", "_", "hash", " =", " hash", "lib", ".", "md", "5", "(", "open", "(", "filename", ",", " \"", "rb", "\"", ")", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "            ", "if", " file", "_", "hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "sh", "util", ".", "move", "(", "filename", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "count", " +=", " ", "1", "\n", "    ", "return", " count"], "logprobs": [-1.9333806037902832, -0.0005990855861455202, -0.025382021442055702, -3.6954811548639555e-06, -3.814689989667386e-06, -0.00017557987303007394, -0.012103093788027763, -7.152531907195225e-06, -7.748573807475623e-06, -3.4570634852570947e-06, -0.011737452819943428, -0.0056714811362326145, -6.198863957251888e-06, -5.602820692729438e-06, -0.0166294164955616, -0.0021052833180874586, -0.000395815703086555, -0.1972639411687851, -0.31592974066734314, -2.1958200931549072, -0.1246604397892952, -0.006600365042686462, -8.284702198579907e-05, -0.02237398736178875, -0.12282098084688187, -0.16277915239334106, -2.142831325531006, -0.003625726094469428, -0.06149466708302498, -2.109982233378105e-05, -1.6777598857879639, -2.3841855067985307e-07, -0.00906553864479065, -0.8294011950492859, -4.6491513785440475e-06, -3.814689989667386e-06, -0.16804639995098114, -1.319655179977417, -1.0796175003051758, -0.7413750290870667, -0.0330759696662426, -0.014034506864845753, -0.001867694896645844, -0.005581034813076258, -0.0006999903125688434, -0.0012080521555617452, -0.014333386905491352, -0.013056500814855099, -0.1877370923757553, -0.18362510204315186, -8.106198947643861e-06, -0.001100887660868466, -3.099436753473128e-06, -0.007828034460544586, -0.05763695761561394, -0.000105375460407231, -0.001678963890299201, -0.02941710129380226, -0.07764056324958801, -0.003883915953338146, -3.055652141571045, -0.33500000834465027, -0.09421927481889725, -0.005834334995597601, -0.04881157726049423, -0.002021057065576315, -2.2053474822314456e-05, -0.0018324741395190358, -7.510157047363464e-06, -1.2268574237823486, -0.2688707411289215, -0.00038413776201196015, -0.008237671107053757, -0.003632377600297332, -0.3161567151546478, -0.0022358912974596024, -1.3708974620385561e-05, -0.00015889335190877318, -0.00010966652916977182, -5.722029527532868e-06, -0.0008886678842827678, -0.007385688368231058, -0.009901456534862518, -4.136476854910143e-05, 0.0, -6.532455881824717e-05, -0.005659746006131172, -0.013725543394684792, -0.018565572798252106, -0.013496816158294678, -8.4638240878121e-06, -3.933898824470816e-06, -0.015439627692103386, -0.0010811204556375742, -1.6689286894688848e-06, -2.0265558760002023e-06, -1.2278481335670222e-05, -7.748573807475623e-06, -0.0047271400690078735, -0.0021649987902492285, -0.0005359405186027288, -0.3628459572792053, -1.2278481335670222e-05, -5.483612312673358e-06, -0.031078752130270004, -4.207999518257566e-05, -0.005265416111797094, -0.00048303857329301536, -0.09688869118690491, -2.3841855067985307e-07, -3.933898824470816e-06, -2.3841830625315197e-06, -0.038742806762456894, -0.00300444383174181, -0.002713095862418413, -0.035409387201070786, -0.01915656588971615, -0.0018911350052803755, -0.00010358751023886725, -0.0006712805479764938, -0.12906533479690552, -0.034758612513542175, -0.005034151952713728], "finish_reason": "stop"}], "metrics": {"energy": 447.9356108283998, "energy_per_token": 3.641752933564226, "time": 10.306935, "time_per_token": 0.08379621951219511}}
{"outputs": [{"text": "count = 0\n    # Check if the directory exists and create if not.\n    if not os.path.exists(DEST_DIR):\n        os.makedirs(DEST_DIR)\n    # Get the file paths of all files in the root directory\n    files = glob.glob(os.path.join(ROOT_DIR, \"*\"))\n\n    # Calculate the MD5 hash of each file and move if the hash matches the specified value\n    for file in files:\n        with open(file, 'rb') as f:\n            content = f.read()\n            md5hash = hashlib.md5(content).hexdigest()\n            if md5hash == SPECIFIC_HASH:\n                shutil.move(file, os.path.join(DEST_DIR, os.path.basename(file)))\n                count += 1\n                print(f\"Moved file: {file}\")\n    # Return the number of moved files\n    return count", "tokens": ["count", " =", " ", "0", "\n", "    ", "#", " Check", " if", " the", " directory", " exists", " and", " create", " if", " not", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ")", "\n", "    ", "#", " Get", " the", " file", " paths", " of", " all", " files", " in", " the", " root", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " \"", "*", "\"", "))", "\n", "\n", "    ", "#", " Calculate", " the", " MD", "5", " hash", " of", " each", " file", " and", " move", " if", " the", " hash", " matches", " the", " specified", " value", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "content", " =", " f", ".", "read", "()", "\n", "            ", "md", "5", "hash", " =", " hash", "lib", ".", "md", "5", "(", "content", ")", ".", "hex", "dig", "est", "()", "\n", "            ", "if", " md", "5", "hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " os", ".", "path", ".", "join", "(", "DE", "ST", "_", "DIR", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", ")))", "\n", "                ", "count", " +=", " ", "1", "\n", "                ", "print", "(", "f", "\"", "M", "oved", " file", ":", " {", "file", "}\"", ")", "\n", "    ", "#", " Return", " the", " number", " of", " moved", " files", "\n", "    ", "return", " count", "\n", "\n", "#"], "logprobs": [-3.3061881065368652, -0.19417467713356018, -0.0051305778324604034, -0.0003232433518860489, -0.1043037548661232, -0.310098797082901, -1.8022775650024414, -3.050077438354492, -0.22072066366672516, -0.4318184554576874, -3.083216428756714, -0.2658722698688507, -1.252761960029602, -0.22112391889095306, -2.389986276626587, -0.7429100275039673, -2.050903797149658, -0.047298550605773926, -0.002818067092448473, -0.2045215517282486, -0.04896131157875061, -0.004952663090080023, -7.390948667307384e-06, -0.0009548871894367039, -1.0609570381348021e-05, -0.23030123114585876, -0.0005418977816589177, -0.007303088903427124, -2.861018856492592e-06, -1.1205610462639015e-05, -2.9802276912960224e-06, -0.0012434140080586076, -0.005964931100606918, -0.00941456202417612, -0.03910134360194206, -6.556489552167477e-06, -0.08381568640470505, -6.9141146923357155e-06, -4.2199197196168825e-05, -0.00031883400515653193, -0.0036041084676980972, -1.0728830375228426e-06, -3.0278701160568744e-05, -8.344646857949556e-07, -0.010495348833501339, -0.0029067429713904858, -0.7262282371520996, -0.644314169883728, -1.783914566040039, -1.9933005571365356, -2.1824307441711426, -1.062070369720459, -1.9931449890136719, -0.15420223772525787, -0.4057711064815521, -0.06353123486042023, -0.15142108500003815, -1.0820717811584473, -0.02048701047897339, -1.576821208000183, -0.0010419422760605812, -1.619725227355957, -0.07845328748226166, -0.0907764881849289, -3.8742269680369645e-05, -0.02487865462899208, -0.0032024311367422342, -0.17665345966815948, -1.5497195136049413e-06, -6.818538531661034e-05, -7.986990567587782e-06, -0.0016387379728257656, -0.00042226933874189854, -0.0013686585007235408, -1.537788011773955e-05, -2.622600959512056e-06, -0.0026289208326488733, -0.9246588349342346, -0.3165363073348999, -0.08085879683494568, -0.026938991621136665, -0.0037618363276124, -2.4136269092559814, -0.0008176797418855131, -0.795836329460144, -2.7414751052856445, -0.18009218573570251, -0.24024999141693115, -0.0005833592731505632, -0.021575501188635826, -0.21421518921852112, -0.038296379148960114, -0.0013704441953450441, -0.49138328433036804, -0.1607683151960373, -2.117443323135376, -1.7997212409973145, -0.053636983036994934, -0.031034376472234726, -0.6038920283317566, -1.6537199020385742, -1.0886633396148682, -0.20882171392440796, -0.0019794171676039696, -0.0078902468085289, -0.10466638207435608, -0.49147531390190125, -0.0012488907668739557, -0.00018880968855228275, -0.00046957432641647756, -0.006750871893018484, -1.0522555112838745, -0.00012492353562265635, -0.0001811817055568099, -0.003744496963918209, -0.0013149671722203493, -0.9211817979812622, -0.0049386657774448395, -0.00039772229501977563, -0.0001280225842492655, -0.11250239610671997, -0.023993954062461853, -0.004692850634455681, -0.0022461204789578915, -3.1738715171813965, -0.030617786571383476, -0.0008983152220025659, -5.8412379075889476e-06, -4.291525328881107e-06, -0.0004953111056238413, -0.004321878310292959, -0.11641113460063934, -0.7680540680885315, -0.0026916961651295424, -2.098987579345703, -0.006350456736981869, -0.00047398300375789404, -6.794906312279636e-06, -2.50339189733495e-06, -0.0008523407159373164, -1.0728830375228426e-06, -0.010733373463153839, -0.0009637002367526293, -0.0007256020326167345, -0.02632726915180683, -0.0036516194231808186, -1.490105023549404e-05, 0.0, -3.611976353568025e-05, -0.011420000344514847, -0.21216817200183868, -0.05957963317632675, -0.006353654898703098, -4.6491513785440475e-06, -1.847726889536716e-05, -0.01204137783497572, -0.0012153151910752058, -2.145764938177308e-06, -5.245195097813848e-06, -1.490105023549404e-05, -2.3841830625315197e-06, -0.003906952682882547, -0.003432693425565958, -0.0014949585311114788, -0.464620977640152, -6.079655122448457e-06, -2.264974000354414e-06, -0.013244273141026497, -4.124556289752945e-05, -0.0016991952434182167, -0.0002208704245276749, -1.9451839923858643, -4.0649541915627196e-05, -4.565611743601039e-05, -1.0251946150674485e-05, -0.0016471878625452518, -0.0002699726028367877, -0.00979887880384922, -2.3841855067985307e-07, -1.3828182090946939e-05, -4.0531076592742465e-06, -0.015176890417933464, -0.02830478549003601, -3.6954811548639555e-06, -6.0437283536884934e-05, -1.9073468138230965e-06, -0.001278536394238472, -5.245195097813848e-06, -7.712543447269127e-05, -0.0012454380048438907, -0.0024831434711813927, -0.002921957289800048, -0.006165531929582357, -0.03195421025156975, -0.01317533291876316, -0.003680124878883362, -8.535020606359467e-05, -0.00459305988624692, -3.184312582015991, -0.1789262294769287, -0.04294361174106598, -0.2641763985157013, -0.11859767138957977, -0.6038882732391357, -0.05012380704283714, -0.7677526473999023, -0.6802868843078613, -0.008169449865818024, -0.7627159357070923, -0.21611636877059937, -0.0028288844041526318, -0.009117752313613892, -0.6315428614616394, -3.1530239582061768, -0.28241974115371704, -0.03461894392967224, -0.3824337422847748, -0.0010802869219332933, -2.546971082687378, -0.0021805812139064074, -0.04011789709329605, -0.0021339519880712032, -0.12528598308563232, -0.011221393942832947, -0.2019726037979126, -0.025053059682250023, -1.384568214416504], "finish_reason": "stop"}], "metrics": {"energy": 760.4755104513173, "energy_per_token": 3.3501123808428073, "time": 19.276781, "time_per_token": 0.08491974008810572}}
{"outputs": [{"text": "# Ensure that DEST_DIR exists, if not, create it\n    if not os.path.exists(DEST_DIR):\n        os.makedirs(DEST_DIR)\n    count = 0  # Counter for files moved\n    # Go through all files in ROOT_DIR and hash them using md5\n    for file_path in glob.glob(os.path.join(ROOT_DIR, '**', '*'), recursive=True):\n        if os.path.isfile(file_path):\n            with open(file_path, 'rb') as f:\n                file_hash = hashlib.md5(f.read()).hexdigest()\n                if file_hash == SPECIFIC_HASH:\n                    shutil.move(file_path, DEST_DIR)\n                    count += 1\n    return count", "tokens": ["#", " Ensure", " that", " DE", "ST", "_", "DIR", " exists", ",", " if", " not", ",", " create", " it", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ")", "\n", "    ", "count", " =", " ", "0", "  ", "#", " Counter", " for", " files", " moved", "\n", "    ", "#", " Go", " through", " all", " files", " in", " RO", "OT", "_", "DIR", " and", " hash", " them", " using", " md", "5", "\n", "    ", "for", " file", "_", "path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " '", "**", "'", ",", " '", "*", "')", ",", " recursive", "=", "True", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "md", "5", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "                ", "if", " file", "_", "hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "    ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "    ", "count", " +=", " ", "1", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-0.9781699180603027, -0.6535950303077698, -1.1935312747955322, -2.1321358680725098, -4.9828242481453344e-05, -0.002074234653264284, -0.0009471459779888391, -0.05781564489006996, -1.8600409030914307, -0.6860076785087585, -0.16456198692321777, -0.4617055058479309, -0.07390709221363068, -0.05908016115427017, -0.3212421238422394, -0.0025010991375893354, -0.40497860312461853, -0.014234554022550583, -0.0031068886164575815, -0.00013386306818574667, -0.000854841957334429, -3.0397906812140718e-05, -0.056639645248651505, -0.00017998983094003052, -0.003508366644382477, -2.3841830625315197e-06, -6.9141146923357155e-06, -3.576272320060525e-06, -0.000929281348362565, -0.003630239749327302, -0.0062028514221310616, -0.02670641802251339, -1.0132738680113107e-05, -0.05669720470905304, -2.1815061700181104e-05, -1.823885577323381e-05, -0.00015758226800244302, -0.0009610801353119314, -7.152555099310121e-07, -6.6756979322235566e-06, -3.576278118089249e-07, -0.008990284986793995, -0.001972754718735814, -2.430053234100342, -2.490302324295044, -0.14552320539951324, -0.0035508933942764997, -0.00011181206355104223, -1.650354266166687, -0.00014530557382386178, -1.2025153636932373, -0.4969566762447357, -1.197432041168213, -0.08486852049827576, -0.2471654862165451, -0.12050619721412659, -0.7985079288482666, -3.7640907764434814, -0.0466897189617157, -0.36992406845092773, -0.41984984278678894, -0.1560850739479065, -0.6159547567367554, -7.295342220459133e-05, -0.0027513764798641205, -0.000757645582780242, -1.11517333984375, -4.030098915100098, -0.3339831829071045, -2.8360471725463867, -2.3502025604248047, -0.00014244495832826942, -0.3280663788318634, -0.0019386084750294685, -0.10940112918615341, -0.32279685139656067, -1.0800843238830566, -0.3880384862422943, -0.004220032598823309, -0.00979415699839592, -6.878139538457617e-05, -0.2540541887283325, -0.0069833965972065926, -0.32815369963645935, -6.437280717364047e-06, -0.00011812942830147222, -8.702239938429557e-06, -0.0018607935635372996, -0.0004435985756572336, -0.0012723454274237156, -5.8412379075889476e-06, -1.311301275563892e-06, -0.0036814315244555473, -0.29994362592697144, -0.5437145829200745, -0.16666652262210846, -0.000256982195423916, -0.006199889350682497, -0.002731641987338662, -0.21632878482341766, -0.0003854485403280705, -0.005541558377444744, -0.001527096494100988, -0.0008073169738054276, -0.00048387263086624444, -0.008199363946914673, -0.006031999830156565, -0.33120036125183105, -0.10363731533288956, -6.556489552167477e-06, -0.00014780859055463225, -1.0728830375228426e-06, -0.0011257746955379844, -0.015377882868051529, -0.00013731967192143202, -0.00017915551143232733, -2.0265558760002023e-06, 0.0, -0.005542151164263487, -0.3966434597969055, -0.0024215441662818193, -0.5454568862915039, -0.00025733973598107696, -0.00018761781393550336, -0.0010525407269597054, -7.271740287251305e-06, -8.344646857949556e-07, -0.0005122303264215589, -0.09688880294561386, -0.008009813725948334, -0.0002991705550812185, -0.00010358751023886725, -0.3974461853504181, -0.037784088402986526, -0.02512897364795208, -0.0005341533687897027, -0.6964012980461121, -0.0021093280520290136, -0.1326490193605423, -0.002357919467613101, -0.0017749997787177563, -1.168244216387393e-05, -3.099436753473128e-06, -0.000974537746515125, -9.536697689327411e-06, -0.11163458973169327, -0.001278298324905336, -1.4662635294371285e-05, -9.536738616588991e-07, -0.0002754547167569399, -0.09388735145330429, -0.002168448409065604, -2.5510462364763953e-05, 0.0, -1.6331539882230572e-05, -0.13524948060512543, -0.8330667018890381, -0.41330671310424805, -0.007970905862748623, -7.152531907195225e-06, -2.0265558760002023e-06, -0.008854057639837265, -0.0008887869771569967, -2.0265558760002023e-06, -1.6689286894688848e-06, -1.0490362910786644e-05, -6.9141146923357155e-06, -0.001497934339568019, -0.14209415018558502, -0.0003535122668836266, -0.003008722560480237, -1.2249555587768555, -5.960446742392378e-06, -2.3841830625315197e-06, -0.03815823420882225, -3.0397906812140718e-05, -0.0017528659664094448, -2.0265373677830212e-05, -1.7881377516459906e-06, -0.00012170527770649642, -0.09587389975786209, -2.3841855067985307e-07, -1.2278481335670222e-05, -1.549708758830093e-05, -0.004877692088484764, -0.1157037764787674, -0.0021672588773071766, -0.00031883400515653193, -0.03208132088184357, -0.002556034829467535, -0.0008428120636381209, -3.7788631743751466e-05, -0.053047262132167816, -0.08770407736301422, -0.14706788957118988, -0.004928582813590765, -0.4077662229537964, -0.019731897860765457, -0.6931798458099365], "finish_reason": "stop"}], "metrics": {"energy": 706.1192691116336, "energy_per_token": 3.548338035736852, "time": 16.833391, "time_per_token": 0.08458990452261306}}
{"outputs": [{"text": "os.makedirs(DEST_DIR, exist_ok=True)\n\n    # Get all files in the root directory and its subdirectories\n    files = glob.glob(f\"{ROOT_DIR}/**/*.*\", recursive=True)\n\n    files_moved = 0\n\n    for file in files:\n        # Calculate the MD5 hash of the file\n        hash_value = hashlib.md5(open(file, \"rb\").read()).hexdigest()\n\n        # Move the file if its MD5 hash matches the specific hash\n        if hash_value == SPECIFIC_HASH:\n            shutil.move(file, DEST_DIR)\n            files_moved += 1\n\n    return files_moved", "tokens": ["os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Get", " all", " files", " in", " the", " root", " directory", " and", " its", " sub", "direct", "ories", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "ROOT", "_", "DIR", "}/", "**", "/*", ".", "*", "\"", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "#", " Calculate", " the", " MD", "5", " hash", " of", " the", " file", "\n", "        ", "hash", "_", "value", " =", " hash", "lib", ".", "md", "5", "(", "open", "(", "file", ",", " \"", "rb", "\"", ")", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "#", " Move", " the", " file", " if", " its", " MD", "5", " hash", " matches", " the", " specific", " hash", "\n", "        ", "if", " hash", "_", "value", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "            ", "files", "_", "m", "oved", " +=", " ", "1", "\n", "\n", "    ", "return", " files", "_", "m", "oved", "\n", "\n", "def"], "logprobs": [-1.9333806037902832, -0.0005990855861455202, -0.025382021442055702, -3.6954811548639555e-06, -3.814689989667386e-06, -0.00017557987303007394, -0.012103093788027763, -7.152531907195225e-06, -7.748573807475623e-06, -3.4570634852570947e-06, -0.011737452819943428, -0.0056714811362326145, -6.198863957251888e-06, -5.602820692729438e-06, -0.0166294164955616, -0.0021052833180874586, -0.000395815703086555, -0.1972639411687851, -1.3070415258407593, -0.0005050813779234886, -1.9627424478530884, -2.0933477878570557, -0.7731515169143677, -0.5007421970367432, -0.2650022506713867, -0.38591647148132324, -0.6921858787536621, -0.04129517078399658, -1.2926818132400513, -0.15645836293697357, -0.001986317802220583, -0.07345648854970932, -3.659658250398934e-05, -0.07194115966558456, -0.0005903884884901345, -0.2958841919898987, -0.0949212834239006, -0.09722276777029037, -2.1815061700181104e-05, -0.11000008881092072, -0.0054130409844219685, -1.697822093963623, -0.18503251671791077, -0.0017442979151383042, -0.0038015018217265606, -4.410734163684538e-06, -4.172316494077677e-06, -0.23287880420684814, -0.006440359633415937, -0.005183471366763115, -2.651289701461792, -0.10979225486516953, -0.00042060110718011856, -0.001906721736304462, -0.00036137725692242384, -0.0006007535266689956, -0.0006273209000937641, -0.0009731086320243776, -0.0021090900991111994, -0.23795479536056519, -0.00016056202002801, -2.130763053894043, -0.041065916419029236, -0.1635209023952484, -0.0005759726045653224, -0.028162125498056412, -0.026501653715968132, -5.054346183896996e-05, -0.07964365929365158, -0.7984881401062012, -0.0001711698860162869, -0.4128513038158417, -0.12816773355007172, -0.15209616720676422, -0.0018172431737184525, -0.0001472126314183697, -0.0018825681181624532, -0.037240300327539444, -0.7646205425262451, -0.2531541883945465, -0.24370843172073364, -0.13944746553897858, -0.0003133521240670234, -0.007090642582625151, -0.025203373283147812, -0.14678527414798737, -0.05320506542921066, -0.09513917565345764, -0.0012012654915452003, -1.5653736591339111, -0.08322178572416306, -0.7731794714927673, -0.00046695294440723956, -0.29780706763267517, -0.029442451894283295, -3.635817120084539e-05, -0.0016764646861702204, -7.152531907195225e-06, -0.9131704568862915, -0.22243300080299377, -0.00018666432879399508, -0.0016859853640198708, -0.002690982772037387, -0.3935369849205017, -0.0019116000039502978, -5.245195097813848e-06, -0.00010692501382436603, -3.361645576660521e-05, -2.145764938177308e-06, -0.00033849707688204944, -0.0015731590101495385, -0.006156053859740496, -1.6569954823353328e-05, 0.0, -1.7881233361549675e-05, -0.0024509173817932606, -0.052385132759809494, -0.0007574073388241231, -0.30111825466156006, -0.7830437421798706, -0.11687992513179779, -0.0022199528757482767, -0.392591267824173, -1.2302343845367432, -2.0225205421447754, -6.782778655178845e-05, -0.024708755314350128, -0.01837458461523056, -0.07033897936344147, -0.4191034734249115, -0.17794519662857056, -0.18732360005378723, -0.0003636414185166359, -0.004553069826215506, -0.01079481653869152, -0.00010966652916977182, -6.09140915912576e-05, -0.008388877846300602, -0.0010126468259841204, -5.960462772236497e-07, -1.1920922133867862e-06, -7.271740287251305e-06, -9.536738616588991e-07, -0.004917195066809654, -0.00047088501742109656, -0.002066978020593524, -0.27304691076278687, -3.576272320060525e-06, -2.264974000354414e-06, -0.005801979918032885, -1.966933996300213e-05, -0.0016058895271271467, -0.00033718624035827816, -0.04813379794359207, -5.960462772236497e-07, -8.583032467868179e-06, -2.50339189733495e-06, -0.007949382066726685, -0.003596268827095628, -0.0068642995320260525, -0.05276278406381607, -6.198863957251888e-06, -2.861018856492592e-06, 0.0, -0.0028643079567700624, -0.0008519833791069686, -6.568216485902667e-05, -0.0023105847649276257, -0.10157115757465363, -0.00704968674108386, -0.06507743895053864, -0.0075761848129332066, -8.809178689261898e-05, -2.9802276912960224e-06, 0.0, -0.39360952377319336, -0.009898859076201916, -1.7227497100830078], "finish_reason": "stop"}], "metrics": {"energy": 597.2730023527147, "energy_per_token": 3.3554663053523295, "time": 14.984686, "time_per_token": 0.08418362921348314}}
{"outputs": [{"text": "if os.path.exists(DEST_DIR):\n        pass\n    else:\n        os.makedirs(DEST_DIR)\n\n    files = glob.glob(ROOT_DIR + \"/*\")\n\n    moved_files = 0\n\n    for file in files:\n        with open(file, \"rb\") as f:\n            md5_hash = hashlib.md5(f.read()).hexdigest()\n\n            if md5_hash == SPECIFIC_HASH:\n                shutil.move(file, DEST_DIR)\n                moved_files += 1\n\n    return moved_files", "tokens": ["if", " os", ".", "path", ".", "exists", "(", "DE", "ST", "_", "DIR", "):", "\n", "        ", "pass", "\n", "    ", "else", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "ROOT", "_", "DIR", " +", " \"", "/*", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "with", " open", "(", "file", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "            ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "if", " md", "5", "_", "hash", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.9198689460754395, -2.5389301776885986, -8.105902816168964e-05, -0.015092231333255768, -9.870042413240299e-05, -0.2660750150680542, -0.001383777242153883, -0.0931176021695137, -2.3841830625315197e-06, -4.291525328881107e-06, -1.1920922133867862e-06, -1.2427713871002197, -0.04251036420464516, -0.016985774040222168, -0.8389865159988403, -0.01824091747403145, -0.011259232647716999, -0.01871066354215145, -0.0008591298246756196, -0.004327456932514906, -0.004511179402470589, -0.06995467841625214, -4.7444173105759546e-05, -0.932060182094574, -9.16677454370074e-05, -0.00010752100206445903, -0.0007714632665738463, -0.00980360060930252, -2.3841855067985307e-07, -7.986990567587782e-06, -7.748573807475623e-06, -0.02638578787446022, -0.02800901047885418, -0.6127322912216187, -0.0020387833938002586, -1.4992798566818237, -0.6375476121902466, -0.13625632226467133, -0.00013326710904948413, -0.026347355917096138, -0.016164790838956833, -1.2141659259796143, -1.8954096958623268e-05, -7.510157047363464e-06, -0.24370674788951874, -0.8754440546035767, -0.7038573026657104, -0.09141509979963303, -0.028020834550261497, -0.025907088071107864, -1.403728723526001, -0.0003721021639648825, -2.468632221221924, -0.04274728521704674, -0.1831846982240677, -0.4501037299633026, -0.4021050035953522, -0.15474116802215576, -0.0001599660754436627, -0.015763435512781143, -0.5887978076934814, -0.0001528146385680884, -0.034881915897130966, -0.2510896325111389, -0.1486065834760666, -0.001522930571809411, -0.0011081513948738575, -0.0026264239568263292, -0.03342766687273979, -0.6369329690933228, -0.00026782741770148277, -0.0006821212591603398, -0.006142784375697374, -0.003012406872585416, -0.41111987829208374, -0.012343326583504677, -0.001166854752227664, -0.0006385194719769061, -3.85038583772257e-05, -0.1894409954547882, -0.0373961441218853, -0.006525043863803148, -0.0036069590132683516, -2.696629285812378, -0.007587897125631571, -0.43695691227912903, -0.03249164670705795, -0.021950392052531242, -0.0016030330443754792, -1.4185804502631072e-05, -3.2186455882765586e-06, -0.0030157347209751606, -4.887569048150908e-06, -0.24544139206409454, -0.0011125572491437197, -2.002696055569686e-05, -2.7418097943154862e-06, -0.0008429311565123498, -0.06364622712135315, -0.00439356779679656, -3.790783375734463e-05, 0.0, -4.935142715112306e-05, -0.01129164732992649, -0.6079156994819641, -0.7568385004997253, -0.027093777433037758, -0.015045378357172012, -1.6689160474925302e-05, -9.179073458653875e-06, -1.1920922133867862e-06, -0.017456108704209328, -0.002044612541794777, -1.5497195136049413e-06, -1.5497195136049413e-06, -1.3232143828645349e-05, -3.814689989667386e-06, -0.004179671406745911, -0.001844849088229239, -0.0033749546855688095, -0.3113362491130829, -2.90866428258596e-05, -5.8412379075889476e-06, -0.012923061847686768, -5.352353764465079e-05, -0.00430704141035676, -0.0005922947311773896, -0.03703366219997406, -8.344646857949556e-07, -7.152531907195225e-06, -2.7418097943154862e-06, -0.04064261168241501, -0.0026290398091077805, -0.008832079358398914, -0.04342610016465187, -9.894321920000948e-06, -1.7165990357170813e-05, -1.6093124941107817e-05, -0.02171315625309944, -0.0045951958745718, -0.00019822540343739092, -0.0008167268824763596, -0.1776447296142578, -0.013276859186589718, -0.06926895678043365, -0.011863628402352333, -1.5258672647178173e-05, -2.861018856492592e-06, -0.5931749939918518, -0.011718837544322014, -0.5964980125427246], "finish_reason": "stop"}], "metrics": {"energy": 511.5019546155932, "energy_per_token": 3.3874301630171737, "time": 12.731298, "time_per_token": 0.08431323178807948}}
{"outputs": [{"text": "# Create destination directory if it doesn't exist\n    os.makedirs(DEST_DIR, exist_ok=True)\n\n    # Count variable for the number of files moved\n    count = 0\n\n    # List all files in the directory (including subdirectories)\n    files = glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True)\n\n    for file in files:\n        if os.path.isfile(file):\n            # Calculate the MD5 hash of the file\n            hash_md5 = hashlib.md5()\n            with open(file, \"rb\") as f:\n                for chunk in iter(lambda: f.read(4096), b\"\"):\n                    hash_md5.update(chunk)\n\n            # Check if the calculated MD5 hash matches the specific hash\n            if hash_md5.hexdigest() == SPECIFIC_HASH:\n                # Move the file to the destination directory\n                shutil.move(file, DEST_DIR)\n                count += 1\n\n    return count", "tokens": ["#", " Create", " destination", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "DE", "ST", "_", "DIR", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Count", " variable", " for", " the", " number", " of", " files", " moved", "\n", "    ", "count", " =", " ", "0", "\n", "\n", "    ", "#", " List", " all", " files", " in", " the", " directory", " (", "including", " sub", "direct", "ories", ")", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "ROOT", "_", "DIR", ",", " '", "**", "')", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "#", " Calculate", " the", " MD", "5", " hash", " of", " the", " file", "\n", "            ", "hash", "_", "md", "5", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "with", " open", "(", "file", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "for", " chunk", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "    ", "hash", "_", "md", "5", ".", "update", "(", "chunk", ")", "\n", "\n", "            ", "#", " Check", " if", " the", " calculated", " MD", "5", " hash", " matches", " the", " specific", " hash", "\n", "            ", "if", " hash", "_", "md", "5", ".", "hex", "dig", "est", "()", " ==", " SPEC", "IFIC", "_", "H", "ASH", ":", "\n", "                ", "#", " Move", " the", " file", " to", " the", " destination", " directory", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " DE", "ST", "_", "DIR", ")", "\n", "                ", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-0.9781699180603027, -2.6657562255859375, -1.9801232814788818, -0.10373038053512573, -0.08400082588195801, -0.11139531433582306, -0.2884695529937744, -0.003017042065039277, -0.00018940561858471483, -0.01750003919005394, -0.09484560787677765, -0.002991132438182831, -1.3619577884674072, -0.00010883215873036534, -0.00325055536814034, -2.3841855067985307e-07, -7.152555099310121e-07, -9.023735765367746e-05, -0.010532152839004993, -6.437280717364047e-06, -5.340433563105762e-05, -8.583032467868179e-06, -0.0042633600533008575, -0.001712523982860148, -6.6756979322235566e-06, -5.245195097813848e-06, -0.012421978637576103, -0.0007606235449202359, -0.00028606137493625283, -0.00881163775920868, -0.17332535982131958, -0.00025042734341695905, -0.3208581805229187, -2.3002543449401855, -3.807784080505371, -1.66414475440979, -1.4552793502807617, -0.09820496290922165, -0.0012075759004801512, -0.1340246945619583, -0.043524712324142456, -0.10521078109741211, -7.080780778778717e-05, -0.8875018954277039, -0.08643732964992523, -0.0006908176001161337, -5.185469490243122e-05, -0.0006074252305552363, -0.04167291894555092, -0.00021741411183029413, -0.03606824204325676, -2.5962419509887695, -0.3653915822505951, -0.3065078556537628, -0.14104731380939484, -0.22446046769618988, -2.7392406463623047, -2.3002922534942627, -1.3933206796646118, -0.22684970498085022, -0.1278933584690094, -0.00019429226813372225, -0.007346282713115215, -0.12628157436847687, -0.0002579356369096786, -0.5410325527191162, -0.09884738177061081, -0.07618315517902374, -6.103329360485077e-05, -0.07546918839216232, -0.0025584129616618156, -0.38545069098472595, -2.622600959512056e-06, -4.494089080253616e-05, -1.5497195136049413e-06, -0.0013993718894198537, -0.0005079409456811845, -0.0017113338690251112, -1.8358061424805783e-05, -5.245195097813848e-06, -0.001128156203776598, -0.2099219560623169, -0.002873936202377081, -2.412813425064087, -0.0011993603548035026, -0.00108159682713449, -0.0005812147865071893, -0.000536655425094068, -0.0004396664153318852, -0.0026328444946557283, -0.03980497643351555, -0.00016830935783218592, -1.421807885169983, -0.12946759164333344, -0.27062278985977173, -0.0026519864331930876, -0.00030429501202888787, -0.0036371287424117327, -0.03851594775915146, -0.827986478805542, -0.06154634431004524, -5.245195097813848e-06, -0.0001858300092862919, -1.1920922133867862e-06, -0.0030214395374059677, -0.05175131559371948, -0.00013100242358632386, -0.0003719830128829926, -0.009882688522338867, -0.1849779188632965, -0.014227972365915775, -0.3127329647541046, -0.1190764382481575, -0.5094355344772339, -0.1856411248445511, -0.0003232433518860489, -0.006642286200076342, -0.04916845262050629, -0.09900330752134323, -0.0316009521484375, -0.059524036943912506, -0.00039402826223522425, -1.259826421737671, -0.11386998742818832, -1.9963833093643188, -0.0004146431456319988, -0.0018703126115724444, -0.005118836183100939, -0.0005502378917299211, -6.318072337307967e-06, -0.0013555632904171944, -2.861018856492592e-06, -0.015624488703906536, -0.005903190467506647, -0.08784319460391998, -0.026927851140499115, -4.8993817472364753e-05, -5.006664650863968e-05, -0.0005017452058382332, -8.260862523457035e-05, -0.3802821636199951, -0.00099871342536062, -9.894321920000948e-06, -8.809178689261898e-05, -2.407998726994265e-05, -0.022303923964500427, -0.00604610051959753, -0.003030115505680442, -0.0005335576133802533, -0.038771823048591614, -0.0029878043569624424, -3.3854863431770355e-05, -0.0013097288319841027, -2.5033637939486653e-05, -0.00021395778458099812, -0.0002796259068418294, -0.00019012074335478246, -6.9141146923357155e-06, -3.814689989667386e-06, -0.0011249411618337035, -0.06426730006933212, -0.0005856229108758271, -0.00021324267436284572, -7.629365427419543e-06, -0.0027516144327819347, -1.585470999998506e-05, -0.0022360102739185095, -0.002831143094226718, -4.172316494077677e-06, -5.722029527532868e-06, -0.003604939905926585, -2.312633478140924e-05, -0.0006006343755871058, -0.0014003242831677198, -2.3841830625315197e-06, -1.6689286894688848e-06, 0.0, -5.483612312673358e-06, -5.960462772236497e-07, -1.2040065485052764e-05, -1.728519782773219e-05, -2.062299427052494e-05, -9.440929716220126e-05, -0.19352753460407257, -0.0031070075929164886, -0.10609007626771927, -0.6811076402664185, -0.016645830124616623, -0.0658353641629219, -2.438335657119751, -2.013817071914673, -0.0001012035645544529, -0.07111124694347382, -0.025855163112282753, -0.032257478684186935, -0.42418015003204346, -0.07047275453805923, -0.2982740104198456, -0.00027533553657121956, -0.0205205287784338, -0.02752656489610672, -4.2914423829643056e-05, -8.106198947643861e-06, -8.344646857949556e-07, -0.0009944260818883777, -0.0010240792762488127, -7.986990567587782e-06, 0.0, -0.00016437610611319542, -0.008982251398265362, -0.0006492413813248277, -5.960462772236497e-07, -2.145764938177308e-06, -2.47952248173533e-05, -1.9073468138230965e-06, -0.003503733780235052, -0.0012893705861642957, -0.0021400186233222485, -0.15257082879543304, -0.18500615656375885, -0.026567939668893814, -0.010966271162033081, -0.29980283975601196, -0.013158156536519527, -0.11526556313037872, -0.02977668307721615, -0.09720415621995926, -0.0004009396652691066, -0.05986453592777252, -6.437280717364047e-06, -1.4305104514278355e-06, -0.004060239996761084, -2.276871418871451e-05, -0.0015811334596946836, -0.00016032364510465413, -0.1968202143907547, -1.1920928244535389e-07, -1.2993727978027891e-05, -3.433168603805825e-05, -0.008570555597543716, -0.0013006808003410697, -0.12516450881958008, -0.17439383268356323, -0.002391575602814555, -0.0003829461056739092, -3.2066785934148356e-05, -0.05444200709462166, -0.17057673633098602, -0.007184621877968311, -0.2945270538330078, -0.0027133338153362274, -0.42639684677124023, -0.010393422096967697, -0.6682652831077576], "finish_reason": "stop"}], "metrics": {"energy": 878.9253768253316, "energy_per_token": 3.460336129233589, "time": 21.545794, "time_per_token": 0.08482596062992126}}
