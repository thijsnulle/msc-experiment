{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.16317597031593323, -0.02104208432137966, -0.00013696208770852536, -0.009195949882268906, -2.0265558760002023e-06, -1.4185804502631072e-05, -0.0002108589978888631, -0.014903866685926914, -0.003918708302080631, -0.005841327365487814], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -0.5482271909713745, -0.0017479868838563561, -0.04193393141031265, -0.084071084856987, -0.28770920634269714, -0.0005610798834823072, -0.0061543951742351055], "finish_reason": "stop"}, {"text": " json.dumps(req_data, sort_keys=True)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ",", " sort", "_", "keys", "=", "True", ")", "\n"], "logprobs": [-0.006027141585946083, -0.000324673397699371, -0.0006920088781043887, -3.671578815556131e-05, -0.0008799732895568013, -0.002107305685058236, -1.3828182090946939e-05, -1.490105023549404e-05, -1.8752269744873047, -0.4796822667121887, 0.0, -0.0002640137099660933, -0.0013328249333426356, -0.0063495091162621975, -0.10565610229969025, -0.06546484678983688], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), json_req_data.encode('utf-8'), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0005734706646762788, -3.838465272565372e-05, -1.6927575416048057e-05, -0.004476526286453009, -0.0002553137019276619, -0.19371670484542847, -1.3232143828645349e-05, -2.622600959512056e-06, -0.0025563915260136127, -0.00015162272029556334, -1.2340670824050903, -0.02599501796066761, -0.005882333032786846, -3.480850500636734e-05, -0.0013727060286328197, -0.00010430268594063818, -0.15546248853206635, -0.0006189814303070307, -7.748573807475623e-06, -1.7881377516459906e-06, -1.1920928244535389e-07, -0.028938809409737587, -4.684815212385729e-05, -0.015612518414855003, -0.002587187336757779, -0.0003393312799744308, -5.960446742392378e-06, -0.01802387461066246, -0.00011812942830147222, -0.04556399956345558, -0.00020668754586949944, -2.1934269170742482e-05, -0.0007694382802583277, -0.009386573918163776, -8.010543388081715e-05, -3.2186455882765586e-06, -0.0006574614671990275, -0.0026769537944346666], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.06514691561460495, -4.076874756719917e-05, -0.00034588552080094814, -1.680836794548668e-05, -1.3470558769768104e-05, -1.9999263286590576, -1.7881377516459906e-06, -0.0002244459028588608, -0.48551785945892334], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)  # URL encode the signature", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "  ", "#", " URL", " encode", " the", " signature", "\n"], "logprobs": [-0.009505607187747955, -1.6569954823353328e-05, -2.264974000354414e-06, -7.629103492945433e-05, -0.00028153270250186324, -8.332382276421413e-05, -0.023908523842692375, -1.2924569845199585, -0.00047600860125385225, -0.00029762129997834563, -0.004591754637658596, -1.0013530300057027e-05, -3.302042750874534e-05, -9.560128091834486e-05, -0.08319611847400665, -1.5561070442199707, -0.0005421360838226974, -3.5206403732299805, -0.37889793515205383, -0.32799869775772095, -0.8185029029846191, -0.46906787157058716], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.011879767291247845, -0.00013624693383462727, -9.179073458653875e-06, -3.290122185717337e-05, -0.00012408917245920748, -0.7817547917366028], "finish_reason": "stop"}], "metrics": {"energy": 224.5344523658752, "energy_per_token": 1.9524734988336976, "time": 8.140955, "time_per_token": 0.07079091304347826}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError('req_data should be a dictionary.')", "tokens": [" Type", "Error", "('", "req", "_", "data", " should", " be", " a", " dictionary", ".", "')", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -1.2639169692993164, -0.405276894569397, -0.007574173621833324, -0.0006872437661513686, -1.1025612354278564, -0.006109016947448254, -0.11817725002765656, -0.1545805186033249, -1.7011475563049316, -0.03514528274536133, -0.0016545667313039303], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006486788857728243, -0.00027616979787126184, -0.0008142255246639252, -3.576214658096433e-05, -0.0007796823629178107, -0.002270027529448271, -1.2040065485052764e-05, -1.2397689715726301e-05, -0.1670081466436386, -0.08463830500841141], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), msg=json_req_data.encode('utf-8'), digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " msg", "=", "json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006302992696873844, -3.58813522325363e-05, -1.9550132492440753e-05, -0.004674459807574749, -0.00019500737835187465, -0.22654637694358826, -1.8000440832111053e-05, -2.622600959512056e-06, -0.003034512745216489, -0.0002090712368953973, -1.300377607345581, -0.027896448969841003, -0.005349132232367992, -3.838465272565372e-05, -0.0013938959455117583, -0.00012909532233607024, -1.9792354106903076, -0.0052934009581804276, -0.006945159286260605, -0.002871202304959297, -6.318072337307967e-06, -5.722029527532868e-06, -8.344646857949556e-07, -0.17608903348445892, -5.9602869441732764e-05, -0.022725272923707962, -0.004321759566664696, -0.0003718638326972723, -7.629365427419543e-06, -0.014645804651081562, -0.00015889335190877318, -0.041043490171432495, -0.0010840974282473326, -0.009722854010760784, -0.00032026408007368445, -1.311301275563892e-06, -6.723177648382261e-05, -0.0005069877952337265, -0.005994792561978102, -8.332382276421413e-05, -5.245195097813848e-06, -0.0006481691962108016, -0.0029891119338572025], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06730902940034866, -3.8742269680369645e-05, -0.0005389191792346537, -1.2993727978027891e-05, -1.3232143828645349e-05, -0.08694136142730713, -0.00018320789968129247, -0.00027164106722921133, -0.0005987281911075115, -0.020467855036258698], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)  # Replace spaces with '+'", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "  ", "#", " Replace", " spaces", " with", " '", "+'", "\n"], "logprobs": [-0.008493018336594105, -1.9192511899746023e-05, -2.622600959512056e-06, -8.034383063204587e-05, -0.0002557904226705432, -7.879423355916515e-05, -0.020512236282229424, -0.2711060345172882, -0.00787711888551712, -6.794906312279636e-06, -2.9444261599564925e-05, -9.77468371274881e-05, -0.3787517547607422, -1.7678427696228027, -0.0008013612823560834, -0.6497677564620972, -0.06714095175266266, -0.013615831732749939, -0.05188329517841339, -0.0003355178632773459, -0.13175474107265472], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.01334155723452568, -0.0001705739414319396, -8.940656698541716e-06, -2.1457441107486375e-05, -0.00010752100206445903, -0.7485976219177246], "finish_reason": "stop"}], "metrics": {"energy": 215.14177348709103, "energy_per_token": 1.9039094998857613, "time": 6.925946, "time_per_token": 0.06129155752212389}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(f\"req_data must be dict type, but {type(req_data)} was given\")", "tokens": [" Type", "Error", "(", "f", "\"", "req", "_", "data", " must", " be", " dict", " type", ",", " but", " {", "type", "(", "req", "_", "data", ")}", " was", " given", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -2.088771104812622, -0.3985331058502197, -0.7133235931396484, -0.005098792724311352, -0.0006898645660839975, -0.6313087344169617, -0.0041770595125854015, -3.114839792251587, -2.7804641723632812, -0.5122475624084473, -1.6456172466278076, -2.173330307006836, -0.2202935367822647, -0.0013549680588766932, -0.0025366530753672123, -2.7894584491150454e-05, -8.49926145747304e-05, -0.08614546060562134, -1.8665575981140137, -0.5524353981018066, -0.5753230452537537, -0.001701099332422018, -0.01077677309513092], "finish_reason": "stop"}, {"text": " json.dumps(req_data, sort_keys=True)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ",", " sort", "_", "keys", "=", "True", ")", "\n"], "logprobs": [-0.005890391301363707, -0.000266278104390949, -0.000742398202419281, -3.516612196108326e-05, -0.000816250394564122, -0.0022992859594523907, -1.597391747054644e-05, -1.2278481335670222e-05, -1.8890324831008911, -0.48305150866508484, 0.0, -0.0002379134384682402, -0.0012171011185273528, -0.006600719876587391, -0.1392240971326828, -0.06356322765350342], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), json_req_data.encode('utf-8'), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006275591440498829, -3.7431014789035544e-05, -1.9073304429184645e-05, -0.005057754926383495, -0.00030429501202888787, -0.19807405769824982, -1.0847986231965479e-05, -2.50339189733495e-06, -0.0030091977678239346, -0.0001740304142003879, -1.2577520608901978, -0.02587665431201458, -0.005113855004310608, -3.397406908334233e-05, -0.0011968599865213037, -0.00011002412065863609, -0.16971656680107117, -0.000777776469476521, -7.152531907195225e-06, -1.7881377516459906e-06, -3.576278118089249e-07, -0.025036433711647987, -4.827859811484814e-05, -0.015053246170282364, -0.0025813612155616283, -0.0002928543253801763, -4.768360213347478e-06, -0.019369738176465034, -0.00011657988943625242, -0.049288857728242874, -0.00021646064124070108, -2.169585604860913e-05, -0.0007160721579566598, -0.010450992733240128, -7.366862701019272e-05, -2.7418097943154862e-06, -0.0006150499684736133, -0.00302381650544703], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06597632169723511, -3.40932747349143e-05, -0.00037150635034777224, -1.680836794548668e-05, -1.2397689715726301e-05, -0.0957929939031601, -0.000125281119835563, -0.0002033503697020933, -0.0006193388253450394, -0.016439933329820633], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace(' ', '+')  # Replace spaces with '+'", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "('", " '", ",", " '", "+", "')", "  ", "#", " Replace", " spaces", " with", " '", "+'", "\n"], "logprobs": [-0.009101923555135727, -2.1576648578047752e-05, -2.7418097943154862e-06, -7.581423415103927e-05, -0.0003400462737772614, -7.712543447269127e-05, -0.018459316343069077, -0.3132488429546356, -0.009811981581151485, -8.583032467868179e-06, -3.4450891689630225e-05, -0.00010334911348763853, -0.3430843949317932, -1.1809718608856201, -0.0025578183121979237, -0.5907144546508789, -0.11519799381494522, -0.00010632903286023065, -0.03166089579463005, -0.0031155638862401247, -0.0001525762490928173, -1.3336879014968872, -0.00011002412065863609, -0.23586894571781158, -0.09958197921514511, -0.017364028841257095, -0.016298502683639526, -0.0003694805200211704, -0.163488507270813], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.01239030621945858, -0.00013207517622504383, -8.940656698541716e-06, -2.1934269170742482e-05, -0.0001248043408850208, -1.1522102355957031, -8.344646857949556e-07, -7.152555099310121e-07, -1.4781842764932662e-05, -0.0005472592893056571, -0.05646897479891777], "finish_reason": "stop"}], "metrics": {"energy": 235.25674788093562, "energy_per_token": 1.680405342006683, "time": 8.349331, "time_per_token": 0.05963807857142857}}
{"outputs": [{"text": " isinstance(req_data, dict):", "tokens": [" isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-2.523651123046875, -0.00013493580627255142, -0.006578692700713873, -2.9802276912960224e-06, -1.0132738680113107e-05, -0.0001833270798670128, -0.11997239291667938, -0.016967138275504112, -0.01182133611291647], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -0.5482271909713745, -0.0017479868838563561, -0.04193393141031265, -0.084071084856987, -0.28770920634269714, -0.0005610798834823072, -0.0061543951742351055], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006027141585946083, -0.000324673397699371, -0.0006920088781043887, -3.671578815556131e-05, -0.0008799732895568013, -0.002107305685058236, -1.3828182090946939e-05, -1.490105023549404e-05, -0.1668739765882492, -0.07375606149435043], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), msg=json_req_data.encode(), digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " msg", "=", "json", "_", "req", "_", "data", ".", "encode", "()", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006831934442743659, -4.482168878894299e-05, -1.8954096958623268e-05, -0.004561376757919788, -0.00024637524620629847, -0.19553175568580627, -9.894321920000948e-06, -2.50339189733495e-06, -0.002909595612436533, -0.00017641419253777713, -0.39834022521972656, -0.00015805903240107, -1.7567057609558105, -0.004691070877015591, -0.01374882459640503, -0.0028725096490234137, -5.364403477869928e-06, -4.529942543740617e-06, -5.960462772236497e-07, -0.06545781344175339, -4.1483970562694594e-05, -0.06761892139911652, -9.30981186684221e-05, -0.021123673766851425, -0.000846266164444387, -0.00698967045173049, -0.00038187362952157855, -1.5497195136049413e-06, -6.0437283536884934e-05, -0.00038556772051379085, -0.006469851825386286, -5.8530047681415454e-05, -5.364403477869928e-06, -0.0009689403814263642, -0.0029091201722621918], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06726255267858505, -3.266281055402942e-05, -0.00036900385748595, -1.5258672647178173e-05, -1.2993727978027891e-05, -0.1001962274312973, -0.00017772526189219207, -0.0002631794777698815, -0.0007853999268263578, -0.01808510534465313], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace(' ', '+')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "('", " '", ",", " '", "+", "')", "\n"], "logprobs": [-0.009886229410767555, -2.52720492426306e-05, -2.622600959512056e-06, -7.676783570786938e-05, -0.0003069168305955827, -9.476689592702314e-05, -0.027951862663030624, -0.28044700622558594, -0.005764171481132507, -7.986990567587782e-06, -3.218599158572033e-05, -0.00010275312524754554, -0.31651049852371216, -1.3213417530059814, -0.0028538473416119814, -0.5836204886436462, -0.11036504060029984, -8.749579137656838e-05, -0.034505393356084824, -0.002612750744447112, -0.00016056202002801, -0.24749036133289337], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.011767378076910973, -0.00012790338951162994, -9.894321920000948e-06, -1.8715683836489916e-05, -0.00011681827891152352, -0.7493515014648438], "finish_reason": "stop"}], "metrics": {"energy": 204.21671306991573, "energy_per_token": 1.9265727648105258, "time": 6.717334, "time_per_token": 0.06337107547169811}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"req_data should be a dictionary.\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " should", " be", " a", " dictionary", ".", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -1.2328108549118042, -0.005324942991137505, -0.13456135988235474, -0.13163885474205017, -1.3999829292297363, -0.02418631687760353, -0.0013565156841650605, -0.006464758887887001], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006007234565913677, -0.0003392120997887105, -0.0007381098694168031, -3.4689302992774174e-05, -0.0010624246206134558, -0.0020744726061820984, -1.597391747054644e-05, -1.3470558769768104e-05, -0.16990819573402405, -0.10193725675344467], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006435230607166886, -3.659658250398934e-05, -1.9907753085135482e-05, -0.004108679015189409, -0.0003104920033365488, -0.2197609692811966, -1.2636104656849056e-05, -2.3841830625315197e-06, -0.0025490194093436003, -0.0002196785935666412, -0.3993360102176666, -0.0001820160250645131, -0.17853251099586487, -0.0009991897968575358, -1.2040065485052764e-05, -2.264974000354414e-06, -3.576278118089249e-07, -0.019931042566895485, -3.480850500636734e-05, -0.07359969615936279, -7.438383181579411e-05, -0.06775104999542236, -0.0002379134384682402, -5.149708886165172e-05, -0.0005907459417358041, -0.007115381304174662, -3.707340147229843e-05, -5.722029527532868e-06, -0.0007382289622910321, -0.0024418795946985483], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.06802105158567429, -3.433168603805825e-05, -0.0003036991402041167, -1.585470999998506e-05, -1.2278481335670222e-05, -2.193880796432495, -1.9073468138230965e-06, -0.0002299282787134871, -0.6043387055397034], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature, safe='')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ",", " safe", "='", "')", "\n"], "logprobs": [-0.009594990871846676, -1.883488948806189e-05, -2.50339189733495e-06, -7.879423355916515e-05, -0.00023469554434996098, -8.034383063204587e-05, -0.024004776030778885, -0.24294830858707428, -0.007457276340574026, -7.867782187531702e-06, -3.45700973412022e-05, -0.00011014331539627165, -1.7286169528961182, -0.0344102643430233, -0.6606426239013672, -0.45733484625816345, -0.44215795397758484], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.013601602055132389, -0.00015186110977083445, -1.0847986231965479e-05, -3.2782016205601394e-05, -0.00016127715934999287, -0.790863037109375], "finish_reason": "stop"}], "metrics": {"energy": 168.85150610733032, "energy_per_token": 1.74073717636423, "time": 6.275716, "time_per_token": 0.06469810309278351}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"req_data is not a dict\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " is", " not", " a", " dict", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -2.4121150970458984, -0.07094791531562805, -0.04838631674647331, -2.5587666034698486, -0.3046790063381195, -0.0012132910778746009, -0.005996451713144779], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006007234565913677, -0.0003392120997887105, -0.0007381098694168031, -3.4689302992774174e-05, -0.0010624246206134558, -0.0020744726061820984, -1.597391747054644e-05, -1.3470558769768104e-05, -0.16990819573402405, -0.10193725675344467], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), json_req_data.encode('utf-8'), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006435230607166886, -3.659658250398934e-05, -1.9907753085135482e-05, -0.004108679015189409, -0.0003104920033365488, -0.2197609692811966, -1.2636104656849056e-05, -2.3841830625315197e-06, -0.0025490194093436003, -0.0002196785935666412, -1.2140446901321411, -0.026593942195177078, -0.006115889176726341, -3.123234637314454e-05, -0.0015943447360768914, -0.00012444675667211413, -0.18633149564266205, -0.0008045773720368743, -5.8412379075889476e-06, -1.4305104514278355e-06, -2.3841855067985307e-07, -0.027755584567785263, -4.458328112377785e-05, -0.016237514093518257, -0.0026628058403730392, -0.00040391870425082743, -5.8412379075889476e-06, -0.01838500052690506, -0.0001045410826918669, -0.0570303350687027, -0.00022754464589525014, -1.9907753085135482e-05, -0.0007329876534640789, -0.00976794958114624, -7.390703103737906e-05, -3.099436753473128e-06, -0.0006272017490118742, -0.0029258797876536846], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06628941744565964, -3.635817120084539e-05, -0.0003979606262873858, -1.6927575416048057e-05, -1.2636104656849056e-05, -0.1322297602891922, -0.00015317220822907984, -0.0003181189822498709, -0.0007601470570079982, -0.015659932047128677], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace(' ', '+')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "('", " '", ",", " '", "+", "')", "\n"], "logprobs": [-0.010297620669007301, -1.966933996300213e-05, -2.622600959512056e-06, -8.022463589441031e-05, -0.0002637753786984831, -7.855583680793643e-05, -0.02146933041512966, -0.28517815470695496, -0.006979134865105152, -7.748573807475623e-06, -2.3483953555114567e-05, -0.00011657988943625242, -0.3150997757911682, -1.2483367919921875, -0.0028606229461729527, -0.652212917804718, -0.1160455197095871, -0.00010835537250386551, -0.0345090813934803, -0.002699899487197399, -0.00017975145601667464, -0.24487492442131042], "finish_reason": "stop"}, {"text": " url_encoded_signature  # Return the URL-encoded hmac signature", "tokens": [" url", "_", "encoded", "_", "signature", "  ", "#", " Return", " the", " URL", "-", "encoded", " h", "mac", " signature", "\n"], "logprobs": [-0.013127331621944904, -0.00011705666838679463, -8.940656698541716e-06, -2.062299427052494e-05, -0.00011503035057103261, -3.0471601486206055, -0.0008131535141728818, -0.15792344510555267, -0.02446530945599079, -0.22860783338546753, -2.7455382347106934, -0.00224374164827168, -1.1440778970718384, -0.0013946102699264884, -0.01028735563158989, -0.6949275135993958], "finish_reason": "stop"}], "metrics": {"energy": 204.8379572296142, "energy_per_token": 1.7069829769134517, "time": 7.3208375, "time_per_token": 0.06100697916666666}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError('req_data must be a dict')", "tokens": [" Type", "Error", "('", "req", "_", "data", " must", " be", " a", " dict", "')", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -1.2639169692993164, -0.405276894569397, -0.007574173621833324, -0.0006872437661513686, -0.6575539708137512, -0.0017763087525963783, -0.05029715225100517, -2.474088668823242, -0.20513764023780823, -0.0028526587411761284], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006486788857728243, -0.00027616979787126184, -0.0008142255246639252, -3.576214658096433e-05, -0.0007796823629178107, -0.002270027529448271, -1.2040065485052764e-05, -1.2397689715726301e-05, -0.1670081466436386, -0.08463830500841141], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006302992696873844, -3.58813522325363e-05, -1.9550132492440753e-05, -0.004674459807574749, -0.00019500737835187465, -0.22654637694358826, -1.8000440832111053e-05, -2.622600959512056e-06, -0.003034512745216489, -0.0002090712368953973, -0.36324378848075867, -0.00015233787416946143, -0.20320026576519012, -0.0010201494442299008, -1.0609570381348021e-05, -1.6689286894688848e-06, -3.576278118089249e-07, -0.02808261476457119, -3.755022044060752e-05, -0.068389393389225, -7.152301259338856e-05, -0.06192481145262718, -0.00022396916756406426, -5.507317473529838e-05, -0.0005799042410217226, -0.0070208036340773106, -4.7205765440594405e-05, -5.960446742392378e-06, -0.0008311392739415169, -0.0029812674038112164], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.07666908949613571, -3.838465272565372e-05, -0.0003618539194576442, -1.490105023549404e-05, -1.2636104656849056e-05, -0.10147002339363098, -0.00011419598013162613, -0.00040046300273388624, -0.0005579821881838143, -0.01694592460989952], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace(' ', '+')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "('", " '", ",", " '", "+", "')", "\n"], "logprobs": [-0.00867101363837719, -2.2411095415009186e-05, -2.861018856492592e-06, -8.022463589441031e-05, -0.0003040566807612777, -8.49926145747304e-05, -0.0187657680362463, -0.22094807028770447, -0.007663730066269636, -8.4638240878121e-06, -3.2066785934148356e-05, -0.0001161031104857102, -0.29565244913101196, -1.0501309633255005, -0.0029912511818110943, -0.6968016028404236, -0.10319539159536362, -9.703165414975956e-05, -0.03211399167776108, -0.002791557926684618, -0.00013648532330989838, -0.26319366693496704], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.013350496999919415, -0.00013374387344811112, -8.821448318485636e-06, -2.455681169521995e-05, -0.00011955977242905647, -1.1827447414398193, -9.536738616588991e-07, -7.152555099310121e-07, -1.3947389561508317e-05, -0.0003195490571670234, -0.05335685983300209], "finish_reason": "stop"}], "metrics": {"energy": 181.50029977226254, "energy_per_token": 1.7285742835453575, "time": 6.505838, "time_per_token": 0.0619603619047619}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(f\"req_data must be of type dict but got {type(req_data)}\")", "tokens": [" Type", "Error", "(", "f", "\"", "req", "_", "data", " must", " be", " of", " type", " dict", " but", " got", " {", "type", "(", "req", "_", "data", ")}", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -2.088771104812622, -0.3985331058502197, -0.7133235931396484, -0.005098792724311352, -0.0006898645660839975, -0.6313087344169617, -0.0041770595125854015, -2.786024332046509, -0.023512709885835648, -0.35668307542800903, -2.980739116668701, -1.474374532699585, -0.2905086278915405, -0.13647952675819397, -0.0006572232232429087, -0.002755299676209688, -1.883488948806189e-05, -0.00010239553375868127, -0.08841155469417572, -0.20496031641960144, -0.0013159195659682155, -0.007538206409662962], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005890391301363707, -0.000266278104390949, -0.000742398202419281, -3.516612196108326e-05, -0.000816250394564122, -0.0022992859594523907, -1.597391747054644e-05, -1.2278481335670222e-05, -0.16441544890403748, -0.08324339240789413], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0005906267906539142, -4.100715523236431e-05, -1.8000440832111053e-05, -0.004110222216695547, -0.0002044230350293219, -0.177778959274292, -1.6212332411669195e-05, -2.7418097943154862e-06, -0.003209917340427637, -0.00020644917094614357, -0.3718392252922058, -0.00017379203927703202, -0.17806212604045868, -0.0008591298246756196, -9.059865078597795e-06, -1.6689286894688848e-06, -1.1920928244535389e-07, -0.02047451213002205, -3.516612196108326e-05, -0.06076766178011894, -8.165503095369786e-05, -2.9338650703430176, -0.0013360392767935991, -0.013320972211658955, -0.0005967028555460274, -1.5497195136049413e-06, -5.2927523938706145e-05, -0.0004080893413629383, -0.005781594198197126, -5.221230458118953e-05, -6.198863957251888e-06, -0.00034707720624282956, -0.0032024311367422342], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.07138200849294662, -3.981510963058099e-05, -0.00034791138023138046, -1.6689160474925302e-05, -1.2636104656849056e-05, -0.10347630828619003, -0.00013731967192143202, -0.0003736513026524335, -0.000633992429357022, -0.022444743663072586], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace(\" \", \"+\")  # Replace spaces with '+'", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "(", "\"", " \"", ",", " \"", "+", "\"", ")", "  ", "#", " Replace", " spaces", " with", " '", "+'", "\n"], "logprobs": [-0.008732346817851067, -2.288792165927589e-05, -2.50339189733495e-06, -7.879423355916515e-05, -0.0003095386200584471, -8.368142152903602e-05, -0.027050500735640526, -0.2747264504432678, -0.009291739203035831, -7.152531907195225e-06, -2.753696753643453e-05, -8.570780482841656e-05, -0.2927359938621521, -1.1546964645385742, -0.003092746715992689, -0.690358579158783, -0.009370513260364532, -0.26371753215789795, -8.248942322097719e-05, -0.0029448973946273327, -0.10458531975746155, -4.9232225137529895e-05, -0.0011154150124639273, -1.1353495121002197, -9.476689592702314e-05, -0.20820362865924835, -0.10299861431121826, -0.013503637164831161, -0.14967180788516998, -0.00023445718397852033, -0.1566031128168106], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.010968039743602276, -0.00010990492592100054, -9.417489309271332e-06, -2.5748875486897305e-05, -0.00014220656885299832, -1.2973769903182983, -8.344646857949556e-07, -7.152555099310121e-07, -1.7404405298293568e-05, -0.00037424711626954377, -0.060070887207984924], "finish_reason": "stop"}], "metrics": {"energy": 247.67760608291624, "energy_per_token": 1.9052123544839712, "time": 7.5451393, "time_per_token": 0.058039533076923076}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"req_data should be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " should", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -1.2328108549118042, -0.005324942991137505, -0.13456135988235474, -0.13163885474205017, -0.40531212091445923, -0.0008922410197556019, -0.005908404942601919], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006007234565913677, -0.0003392120997887105, -0.0007381098694168031, -3.4689302992774174e-05, -0.0010624246206134558, -0.0020744726061820984, -1.597391747054644e-05, -1.3470558769768104e-05, -0.16990819573402405, -0.10193725675344467], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006435230607166886, -3.659658250398934e-05, -1.9907753085135482e-05, -0.004108679015189409, -0.0003104920033365488, -0.2197609692811966, -1.2636104656849056e-05, -2.3841830625315197e-06, -0.0025490194093436003, -0.0002196785935666412, -0.3993360102176666, -0.0001820160250645131, -0.17853251099586487, -0.0009991897968575358, -1.2040065485052764e-05, -2.264974000354414e-06, -3.576278118089249e-07, -0.019931042566895485, -3.480850500636734e-05, -0.07359969615936279, -7.438383181579411e-05, -0.06775104999542236, -0.0002379134384682402, -5.149708886165172e-05, -0.0005907459417358041, -0.007115381304174662, -3.707340147229843e-05, -5.722029527532868e-06, -0.0007382289622910321, -0.0024418795946985483], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06802105158567429, -3.433168603805825e-05, -0.0003036991402041167, -1.585470999998506e-05, -1.2278481335670222e-05, -0.11838419735431671, -0.00010001159535022452, -0.00029202012228779495, -0.0005355831235647202, -0.020336570218205452], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature).replace(\" \", \"%20\")", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", ".", "replace", "(", "\"", " \"", ",", " \"", "%", "2", "0", "\"", ")", "\n"], "logprobs": [-0.01067829504609108, -2.1457441107486375e-05, -2.50339189733495e-06, -7.10462118149735e-05, -0.00026782741770148277, -8.487341256113723e-05, -0.02275405451655388, -1.6191960573196411, -0.0004530118894763291, -0.0003175231395289302, -0.00471527548506856, -9.65590606938349e-06, -3.45700973412022e-05, -7.486063259420916e-05, -0.09969355165958405, -1.8563553094863892, -0.008052621968090534, -0.6551251411437988, -0.00978624727576971, -0.24683146178722382, -6.437094270950183e-05, -0.0035930618178099394, -2.521426200866699, -0.0016044613439589739, -0.009786956012248993, -0.0002060916303889826, -0.0012681784573942423, -0.3016735911369324], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.013866516761481762, -0.00015341058315243572, -8.702239938429557e-06, -2.8967437174287625e-05, -0.00011777184408856556, -0.771981954574585], "finish_reason": "stop"}], "metrics": {"energy": 178.43788308715824, "energy_per_token": 1.652202621177391, "time": 6.5006785, "time_per_token": 0.06019146759259259}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError('req_data must be a dictionary.')", "tokens": [" Type", "Error", "('", "req", "_", "data", " must", " be", " a", " dictionary", ".", "')", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -1.2639169692993164, -0.405276894569397, -0.007574173621833324, -0.0006872437661513686, -0.6575539708137512, -0.0017763087525963783, -0.05029715225100517, -0.0954207330942154, -2.1118834018707275, -0.021809853613376617, -0.0012499623699113727], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006486788857728243, -0.00027616979787126184, -0.0008142255246639252, -3.576214658096433e-05, -0.0007796823629178107, -0.002270027529448271, -1.2040065485052764e-05, -1.2397689715726301e-05, -0.1670081466436386, -0.08463830500841141], "finish_reason": "stop"}, {"text": " hmac.new(", "tokens": [" h", "mac", ".", "new", "(", "\n"], "logprobs": [-0.0006302992696873844, -3.58813522325363e-05, -1.9550132492440753e-05, -0.004674459807574749, -0.00019500737835187465, -2.629971504211426], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06707406789064407, -3.397406908334233e-05, -0.0003381395654287189, -1.3112935448589269e-05, -1.5258672647178173e-05, -0.12993071973323822, -0.00016664070426486433, -0.0004211969207972288, -0.0006812873762100935, -0.019720561802387238], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature, safe=\"\").replace(\"+\", \"%20\")", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ",", " safe", "=", "\"", "\"", ")", ".", "replace", "(", "\"", "+", "\"", ",", " \"", "%", "2", "0", "\"", ")", "\n"], "logprobs": [-0.009062940254807472, -2.13382354559144e-05, -2.50339189733495e-06, -6.913899414939806e-05, -0.00028951745480298996, -7.760223525110632e-05, -0.022018613293766975, -0.23613877594470978, -0.008522923104465008, -7.152531907195225e-06, -3.0397906812140718e-05, -8.999896090244874e-05, -1.579040288925171, -0.03279105946421623, -0.7527196407318115, -0.14589200913906097, -0.747144877910614, -0.01770138368010521, -1.0778707265853882, -0.00344089069403708, -0.11583458632230759, -0.005742480978369713, -1.5889685153961182, -0.00013672371278516948, -7.939023635117337e-05, -0.006569928955286741, -0.2659524083137512, -0.00023147765023168176, -0.488031268119812, -0.0005629861843772233, -0.0017888034926727414, -0.3164229393005371], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature"], "logprobs": [-0.012808789499104023, -0.00014149141497910023, -8.702239938429557e-06, -3.099393507000059e-05, -0.00010489867418073118], "finish_reason": "stop"}], "metrics": {"energy": 190.8347379169464, "energy_per_token": 2.2190085804296094, "time": 5.8650064, "time_per_token": 0.0681977488372093}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"'req_data' must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "'", "req", "_", "data", "'", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -3.492265224456787, -0.019435914233326912, -0.001293299370445311, -0.000624104228336364, -0.005975951440632343, -0.36825883388519287, -0.0014718662714585662, -0.07461675256490707, -0.07644370943307877, -0.4090116322040558, -0.0005446380819194019, -0.0046514407731592655], "finish_reason": "stop"}, {"text": " json.dumps(req_data, sort_keys=True)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ",", " sort", "_", "keys", "=", "True", ")", "\n"], "logprobs": [-0.0056167165748775005, -0.0003327769518364221, -0.0007487116381525993, -4.2437604861333966e-05, -0.0009002208826132119, -0.002691220724955201, -1.4066597032069694e-05, -9.417489309271332e-06, -2.0118906497955322, -0.46367591619491577, 0.0, -0.0002544794406276196, -0.0014860312221571803, -0.006206761114299297, -0.11513393372297287, -0.06677359342575073], "finish_reason": "stop"}, {"text": " hmac.new(bytes(secret_key, 'utf-8'), json_req_data, hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "bytes", "(", "secret", "_", "key", ",", " '", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.000623032043222338, -4.589452510117553e-05, -1.966933996300213e-05, -0.004276060964912176, -0.00021681819634977728, -2.2173144817352295, -0.002895213197916746, -0.003171654185280204, -2.9802276912960224e-06, -7.152555099310121e-07, -0.019749898463487625, -0.33173248171806335, -0.01628313772380352, -0.010953654535114765, -4.637133679352701e-05, -0.004668526817113161, -0.000398198957554996, -0.5180056095123291, -0.002042947104200721, -8.702239938429557e-06, -5.125986263010418e-06, -3.576278118089249e-07, -2.378596305847168, -0.05133964866399765, -0.0002796259068418294, -6.69933797325939e-05, -0.0005821678787469864, -0.00778876431286335, -3.659658250398934e-05, -3.6954811548639555e-06, -0.0007153574260883033, -0.003092271275818348], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06932201236486435, -3.8742269680369645e-05, -0.00038092033355496824, -1.7046782886609435e-05, -1.156323378381785e-05, -0.09965654462575912, -0.00011359999916749075, -0.00038020533975213766, -0.0005951540661044419, -0.017795894294977188], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.00945010781288147, -2.13382354559144e-05, -2.7418097943154862e-06, -6.544376083184034e-05, -0.00028832571115344763, -7.724463648628443e-05, -0.026541240513324738, -0.2874528467655182, -0.007188527379184961, -8.940656698541716e-06, -2.8132995794294402e-05, -0.00011920218821614981, -0.3570539951324463, -0.6402470469474792], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.013424130156636238, -0.00017498392844572663, -1.0013530300057027e-05, -2.753696753643453e-05, -0.00012683063687290996, -1.3927215337753296, -7.152555099310121e-07, -7.152555099310121e-07, -1.645074735279195e-05, -0.000447530735982582, -0.05714720860123634], "finish_reason": "stop"}], "metrics": {"energy": 227.67013116264343, "energy_per_token": 2.0887167996572793, "time": 7.068299, "time_per_token": 0.06484677981651375}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"req_data should be a dictionary.\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " should", " be", " a", " dictionary", ".", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -1.2328108549118042, -0.005324942991137505, -0.13456135988235474, -0.13163885474205017, -1.3999829292297363, -0.02418631687760353, -0.0013565156841650605, -0.006464758887887001], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006007234565913677, -0.0003392120997887105, -0.0007381098694168031, -3.4689302992774174e-05, -0.0010624246206134558, -0.0020744726061820984, -1.597391747054644e-05, -1.3470558769768104e-05, -0.16990819573402405, -0.10193725675344467], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), json_req_data.encode('utf-8'), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006435230607166886, -3.659658250398934e-05, -1.9907753085135482e-05, -0.004108679015189409, -0.0003104920033365488, -0.2197609692811966, -1.2636104656849056e-05, -2.3841830625315197e-06, -0.0025490194093436003, -0.0002196785935666412, -1.2140446901321411, -0.026593942195177078, -0.006115889176726341, -3.123234637314454e-05, -0.0015943447360768914, -0.00012444675667211413, -0.18633149564266205, -0.0008045773720368743, -5.8412379075889476e-06, -1.4305104514278355e-06, -2.3841855067985307e-07, -0.027755584567785263, -4.458328112377785e-05, -0.016237514093518257, -0.0026628058403730392, -0.00040391870425082743, -5.8412379075889476e-06, -0.01838500052690506, -0.0001045410826918669, -0.0570303350687027, -0.00022754464589525014, -1.9907753085135482e-05, -0.0007329876534640789, -0.00976794958114624, -7.390703103737906e-05, -3.099436753473128e-06, -0.0006272017490118742, -0.0029258797876536846], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06628941744565964, -3.635817120084539e-05, -0.0003979606262873858, -1.6927575416048057e-05, -1.2636104656849056e-05, -0.1322297602891922, -0.00015317220822907984, -0.0003181189822498709, -0.0007601470570079982, -0.015659932047128677], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace(' ', '+')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "('", " '", ",", " '", "+", "')", "\n"], "logprobs": [-0.010297620669007301, -1.966933996300213e-05, -2.622600959512056e-06, -8.022463589441031e-05, -0.0002637753786984831, -7.855583680793643e-05, -0.02146933041512966, -0.28517815470695496, -0.006979134865105152, -7.748573807475623e-06, -2.3483953555114567e-05, -0.00011657988943625242, -0.3150997757911682, -1.2483367919921875, -0.0028606229461729527, -0.652212917804718, -0.1160455197095871, -0.00010835537250386551, -0.0345090813934803, -0.002699899487197399, -0.00017975145601667464, -0.24487492442131042], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.013127331621944904, -0.00011705666838679463, -8.940656698541716e-06, -2.062299427052494e-05, -0.00011503035057103261, -0.7467317581176758], "finish_reason": "stop"}], "metrics": {"energy": 188.60568690872188, "energy_per_token": 1.699150332511008, "time": 6.8790255, "time_per_token": 0.0619732027027027}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError('req_data should be a dictionary')", "tokens": [" Type", "Error", "('", "req", "_", "data", " should", " be", " a", " dictionary", "')", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -1.2639169692993164, -0.405276894569397, -0.007574173621833324, -0.0006872437661513686, -1.1025612354278564, -0.006109016947448254, -0.11817725002765656, -0.1545805186033249, -0.28522729873657227, -0.001760838902555406], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006486788857728243, -0.00027616979787126184, -0.0008142255246639252, -3.576214658096433e-05, -0.0007796823629178107, -0.002270027529448271, -1.2040065485052764e-05, -1.2397689715726301e-05, -0.1670081466436386, -0.08463830500841141], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006302992696873844, -3.58813522325363e-05, -1.9550132492440753e-05, -0.004674459807574749, -0.00019500737835187465, -0.22654637694358826, -1.8000440832111053e-05, -2.622600959512056e-06, -0.003034512745216489, -0.0002090712368953973, -0.36324378848075867, -0.00015233787416946143, -0.20320026576519012, -0.0010201494442299008, -1.0609570381348021e-05, -1.6689286894688848e-06, -3.576278118089249e-07, -0.02808261476457119, -3.755022044060752e-05, -0.068389393389225, -7.152301259338856e-05, -0.06192481145262718, -0.00022396916756406426, -5.507317473529838e-05, -0.0005799042410217226, -0.0070208036340773106, -4.7205765440594405e-05, -5.960446742392378e-06, -0.0008311392739415169, -0.0029812674038112164], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.07666908949613571, -3.838465272565372e-05, -0.0003618539194576442, -1.490105023549404e-05, -1.2636104656849056e-05, -0.10147002339363098, -0.00011419598013162613, -0.00040046300273388624, -0.0005579821881838143, -0.01694592460989952], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature).replace(' ', '+')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", ".", "replace", "('", " '", ",", " '", "+", "')", "\n"], "logprobs": [-0.00867101363837719, -2.2411095415009186e-05, -2.861018856492592e-06, -8.022463589441031e-05, -0.0003040566807612777, -8.49926145747304e-05, -0.0187657680362463, -1.6242798566818237, -0.0004520586517173797, -0.0003296785580459982, -0.005552227608859539, -1.0967194612021558e-05, -3.266281055402942e-05, -8.153582894010469e-05, -0.10961097478866577, -1.7305595874786377, -0.009151182137429714, -0.61927729845047, -0.15350282192230225, -7.807903602952138e-05, -0.026559581980109215, -0.0046614077873528, -0.00013290952483657748, -0.18670324981212616], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature"], "logprobs": [-0.011888484470546246, -8.761498611420393e-05, -9.536697689327411e-06, -3.0397906812140718e-05, -0.00011431517486926168], "finish_reason": "stop"}], "metrics": {"energy": 237.04954573440548, "energy_per_token": 2.3470252052911436, "time": 7.11024, "time_per_token": 0.07039841584158416}}
{"outputs": [{"text": " isinstance(req_data, dict):", "tokens": [" isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-2.523651123046875, -0.00013493580627255142, -0.006578692700713873, -2.9802276912960224e-06, -1.0132738680113107e-05, -0.0001833270798670128, -0.11997239291667938, -0.016967138275504112, -0.01182133611291647], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary.\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", ".", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -0.5482271909713745, -0.0017479868838563561, -0.04193393141031265, -0.084071084856987, -1.6394414901733398, -0.014261819422245026, -0.0008204193436540663, -0.00424840347841382], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.00656388932839036, -0.00028272447525523603, -0.0006349454633891582, -4.2914423829643056e-05, -0.001135776867158711, -0.0029905380215495825, -1.549708758830093e-05, -1.2159273865108844e-05, -0.17409859597682953, -0.0808330625295639], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006020640721544623, -4.2914423829643056e-05, -1.3589766240329482e-05, -0.006074656266719103, -0.0002926159941125661, -0.17360758781433105, -1.3708974620385561e-05, -2.7418097943154862e-06, -0.0028177103959023952, -0.00020752183627337217, -0.3975602388381958, -0.00016640232934150845, -0.22174811363220215, -0.0009791824268177152, -1.3708974620385561e-05, -2.145764938177308e-06, -3.576278118089249e-07, -0.021756432950496674, -3.564294092939235e-05, -0.0834970697760582, -7.247662142617628e-05, -0.05334533005952835, -0.0002681849291548133, -6.401333666872233e-05, -0.0005729940603487194, -0.006657917518168688, -4.875540980719961e-05, -5.602820692729438e-06, -0.0007812308613210917, -0.0027625514194369316], "finish_reason": "stop"}, {"text": " base64.b64encode(hmac_obj.digest()).decode('utf-8')", "tokens": [" base", "6", "4", ".", "b", "6", "4", "encode", "(", "h", "mac", "_", "obj", ".", "dig", "est", "())", ".", "decode", "('", "utf", "-", "8", "')", "\n"], "logprobs": [-2.9710278511047363, -8.332382276421413e-05, -1.1920922133867862e-06, -0.00026925752172246575, -0.3057015538215637, -0.002256468404084444, -8.344646857949556e-07, -0.004706732928752899, -0.0003147821989841759, -0.002444376703351736, -9.179073458653875e-06, -0.00010859376925509423, -1.0013530300057027e-05, -0.00012170527770649642, -0.00135925377253443, -1.6689286894688848e-06, -0.0032517435029149055, -0.4724411070346832, -0.008392778225243092, -2.3331804275512695, -0.08432181179523468, -0.008296193554997444, -0.00011872540198964998, -0.00017915551143232733, -0.16677802801132202], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)  # Use quote for URL encoding", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "  ", "#", " Use", " quote", " for", " URL", " encoding", "\n"], "logprobs": [-0.009663233533501625, -1.847726889536716e-05, -2.3841830625315197e-06, -7.974783511599526e-05, -0.00029118589009158313, -8.880697714630514e-05, -0.019703613594174385, -0.21852532029151917, -0.007845539599657059, -7.867782187531702e-06, -3.58813522325363e-05, -8.999896090244874e-05, -0.29714906215667725, -1.8912101984024048, -0.0008360228384844959, -1.2292417287826538, -1.2074382305145264, -0.6201847791671753, -0.9751169681549072, -0.07663551717996597, -0.10405734181404114], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.013354378752410412, -9.953480184776708e-05, -1.0132738680113107e-05, -2.3007127310847864e-05, -0.00013779645087197423, -0.7362009882926941], "finish_reason": "stop"}], "metrics": {"energy": 228.27935776329042, "energy_per_token": 1.9679254979594, "time": 7.7514887, "time_per_token": 0.06682317844827587}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"The req_data must be a dict type.\")", "tokens": [" Type", "Error", "(", "\"", "The", " req", "_", "data", " must", " be", " a", " dict", " type", ".", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -2.564157009124756, -2.0773091316223145, -0.015520971268415451, -0.0011288706446066499, -1.0709151029586792, -0.0018229547422379255, -0.04610646888613701, -2.928593635559082, -3.278320074081421, -0.8583033680915833, -0.0400799885392189, -0.001807366730645299, -0.006002495065331459], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.0056167165748775005, -0.0003327769518364221, -0.0007487116381525993, -4.2437604861333966e-05, -0.0009002208826132119, -0.002691220724955201, -1.4066597032069694e-05, -9.417489309271332e-06, -0.14396882057189941, -0.0817032903432846], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), json_req_data.encode('utf-8'), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006642519147135317, -4.1960789531003684e-05, -1.5139465176616795e-05, -0.00529992301017046, -0.00023684080224484205, -0.21312429010868073, -1.6093124941107817e-05, -2.9802276912960224e-06, -0.002891409443691373, -0.0001879753835964948, -1.208103060722351, -0.026802053675055504, -0.004824663512408733, -3.0397906812140718e-05, -0.0012438902631402016, -0.0001072826053132303, -0.17535944283008575, -0.000715833914000541, -6.9141146923357155e-06, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.022800548002123833, -3.969590397900902e-05, -0.016299322247505188, -0.002986615989357233, -0.0002694958820939064, -5.125986263010418e-06, -0.023089714348316193, -0.0001227780303452164, -0.04748750478029251, -0.0002733095607254654, -2.372236667724792e-05, -0.0006485265912488103, -0.010321454145014286, -6.472854875028133e-05, -3.6954811548639555e-06, -0.0006224363460205495, -0.0026903883554041386], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06868048012256622, -4.0411134250462055e-05, -0.00030655929003842175, -1.4305012882687151e-05, -1.5258672647178173e-05, -0.1279028058052063, -0.0001658063702052459, -0.00026806574896909297, -0.000791236583609134, -0.01927724853157997], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace(' ', '+')  # Replace spaces with '+'", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "('", " '", ",", " '", "+", "')", "  ", "#", " Replace", " spaces", " with", " '", "+'", "\n"], "logprobs": [-0.009414798580110073, -2.3007127310847864e-05, -2.3841830625315197e-06, -0.00010585224663373083, -0.00032729512895457447, -9.536288416711614e-05, -0.01783067360520363, -0.2365076243877411, -0.005481095518916845, -7.986990567587782e-06, -3.421248038648628e-05, -0.00011336160969221964, -0.3454466164112091, -1.2661490440368652, -0.0034812819212675095, -0.6201103925704956, -0.11703210324048996, -9.297892393078655e-05, -0.0351579450070858, -0.0021836739033460617, -0.00015567521040793508, -1.3859455585479736, -0.00013219437096267939, -0.2797507345676422, -0.12194562703371048, -0.016269298270344734, -0.01626085303723812, -0.00040749352774582803, -0.15557758510112762], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.012578085996210575, -0.0001389883691444993, -9.059865078597795e-06, -2.3245540432981215e-05, -0.00011884459672728553, -1.2284955978393555, -5.960462772236497e-07, -7.152555099310121e-07, -1.9192511899746023e-05, -0.00040046300273388624, -0.06685978919267654], "finish_reason": "stop"}], "metrics": {"energy": 280.1126993904114, "energy_per_token": 2.2409015951232916, "time": 8.168173, "time_per_token": 0.06534538399999999}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError('req_data must be a dict')", "tokens": [" Type", "Error", "('", "req", "_", "data", " must", " be", " a", " dict", "')", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -1.2639169692993164, -0.405276894569397, -0.007574173621833324, -0.0006872437661513686, -0.6575539708137512, -0.0017763087525963783, -0.05029715225100517, -2.474088668823242, -0.20513764023780823, -0.0028526587411761284], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006486788857728243, -0.00027616979787126184, -0.0008142255246639252, -3.576214658096433e-05, -0.0007796823629178107, -0.002270027529448271, -1.2040065485052764e-05, -1.2397689715726301e-05, -0.1670081466436386, -0.08463830500841141], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006302992696873844, -3.58813522325363e-05, -1.9550132492440753e-05, -0.004674459807574749, -0.00019500737835187465, -0.22654637694358826, -1.8000440832111053e-05, -2.622600959512056e-06, -0.003034512745216489, -0.0002090712368953973, -0.36324378848075867, -0.00015233787416946143, -0.20320026576519012, -0.0010201494442299008, -1.0609570381348021e-05, -1.6689286894688848e-06, -3.576278118089249e-07, -0.02808261476457119, -3.755022044060752e-05, -0.068389393389225, -7.152301259338856e-05, -0.06192481145262718, -0.00022396916756406426, -5.507317473529838e-05, -0.0005799042410217226, -0.0070208036340773106, -4.7205765440594405e-05, -5.960446742392378e-06, -0.0008311392739415169, -0.0029812674038112164], "finish_reason": "stop"}, {"text": " base64.urlsafe_b64encode(hmac_obj.digest())", "tokens": [" base", "6", "4", ".", "url", "safe", "_", "b", "6", "4", "encode", "(", "h", "mac", "_", "obj", ".", "dig", "est", "())", "\n"], "logprobs": [-2.828791856765747, -9.047575440490618e-05, -1.4305104514278355e-06, -0.00024256148026324809, -1.5807275772094727, -0.0002656822034623474, -0.0001174142598756589, -0.00026651646476238966, -0.0014512732159346342, -0.0008382858941331506, -0.0009436921682208776, -0.00024184639914892614, -0.0022584903053939342, -5.125986263010418e-06, -0.00013720047718379647, -1.3828182090946939e-05, -0.00013350549852475524, -0.0010351543314754963, -1.6689286894688848e-06, -0.0033294502645730972, -1.2261409759521484], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace(' ', '+')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "('", " '", ",", " '", "+", "')", "\n"], "logprobs": [-0.009305675514042377, -2.276871418871451e-05, -2.3841830625315197e-06, -8.83301836438477e-05, -0.0003058442671317607, -8.141662692651153e-05, -0.023280154913663864, -0.20891284942626953, -0.007193735335022211, -7.510157047363464e-06, -3.611976353568025e-05, -0.0001102625101339072, -0.26911649107933044, -1.3005551099777222, -0.002909239148721099, -0.647560179233551, -0.10896752029657364, -0.00010513706365600228, -0.03566732257604599, -0.0023497133515775204, -0.00014327930693980306, -0.27403268218040466], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.012825148180127144, -0.00013553177996072918, -9.894321920000948e-06, -2.4437606043647975e-05, -0.00011896379146492109, -1.2416212558746338, -7.152555099310121e-07, -7.152555099310121e-07, -1.5020257706055418e-05, -0.00025507534155622125, -0.04901681840419769], "finish_reason": "stop"}], "metrics": {"energy": 196.1110350952148, "energy_per_token": 1.6906123715104724, "time": 7.108281, "time_per_token": 0.06127828448275862}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dict\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dict", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -0.5482271909713745, -0.0017479868838563561, -0.04193393141031265, -2.591506004333496, -0.3586738407611847, -0.0008286379743367434, -0.008971618488430977], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005808735266327858, -0.000328367663314566, -0.0007830176036804914, -4.541770613286644e-05, -0.000920825288631022, -0.0025178655050694942, -1.5258672647178173e-05, -1.4662635294371285e-05, -0.1591324359178543, -0.0880153626203537], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006049233488738537, -4.076874756719917e-05, -1.680836794548668e-05, -0.005435805767774582, -0.00033301531220786273, -0.2268388718366623, -1.2397689715726301e-05, -2.3841830625315197e-06, -0.002955238102003932, -0.00018404220463708043, -0.38628384470939636, -0.00015472168161068112, -0.18877063691616058, -0.0011144625023007393, -1.1086402082582936e-05, -1.6689286894688848e-06, -3.576278118089249e-07, -0.02593752183020115, -3.85038583772257e-05, -0.07403606921434402, -7.176141662057489e-05, -0.05743538960814476, -0.00026639728457666934, -4.6132929128361866e-05, -0.0005959880072623491, -0.008012060075998306, -4.470248313737102e-05, -6.6756979322235566e-06, -0.0007254829397425056, -0.002780977636575699], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.07039642333984375, -3.540453326422721e-05, -0.0003302744007669389, -1.4424220353248529e-05, -1.2636104656849056e-05, -0.09905372560024261, -0.00014065706636756659, -0.0002540027489885688, -0.0006809299811720848, -0.020330730825662613], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.010108113288879395, -2.3245540432981215e-05, -2.0265558760002023e-06, -8.368142152903602e-05, -0.0003545847721397877, -8.463501580990851e-05, -0.018772905692458153, -1.3995625972747803, -0.0004158347437623888, -0.0002840353990904987, -0.0051801507361233234, -9.894321920000948e-06, -4.1960789531003684e-05, -9.107174992095679e-05, -0.10800985991954803, -0.4608002007007599], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.013041557744145393, -0.00014578233822248876, -8.940656698541716e-06, -2.6464111215318553e-05, -0.00011896379146492109, -0.7612505555152893], "finish_reason": "stop"}], "metrics": {"energy": 184.83742941474907, "energy_per_token": 1.9253898897369695, "time": 6.4751196, "time_per_token": 0.0674491625}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError", "tokens": [" Type", "Error", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -3.009852409362793], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006486788857728243, -0.00027616979787126184, -0.0008142255246639252, -3.576214658096433e-05, -0.0007796823629178107, -0.002270027529448271, -1.2040065485052764e-05, -1.2397689715726301e-05, -0.1670081466436386, -0.08463830500841141], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006302992696873844, -3.58813522325363e-05, -1.9550132492440753e-05, -0.004674459807574749, -0.00019500737835187465, -0.22654637694358826, -1.8000440832111053e-05, -2.622600959512056e-06, -0.003034512745216489, -0.0002090712368953973, -0.36324378848075867, -0.00015233787416946143, -0.20320026576519012, -0.0010201494442299008, -1.0609570381348021e-05, -1.6689286894688848e-06, -3.576278118089249e-07, -0.02808261476457119, -3.755022044060752e-05, -0.068389393389225, -7.152301259338856e-05, -0.06192481145262718, -0.00022396916756406426, -5.507317473529838e-05, -0.0005799042410217226, -0.0070208036340773106, -4.7205765440594405e-05, -5.960446742392378e-06, -0.0008311392739415169, -0.0029812674038112164], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.07666908949613571, -3.838465272565372e-05, -0.0003618539194576442, -1.490105023549404e-05, -1.2636104656849056e-05, -0.10147002339363098, -0.00011419598013162613, -0.00040046300273388624, -0.0005579821881838143, -0.01694592460989952], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature.replace(' ', '+'))", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ".", "replace", "('", " '", ",", " '", "+", "'))", "\n"], "logprobs": [-0.00867101363837719, -2.2411095415009186e-05, -2.861018856492592e-06, -8.022463589441031e-05, -0.0003040566807612777, -8.49926145747304e-05, -0.0187657680362463, -1.6242798566818237, -0.0004520586517173797, -0.0003296785580459982, -0.005552227608859539, -1.0967194612021558e-05, -3.266281055402942e-05, -8.153582894010469e-05, -2.4725699424743652, -0.29077258706092834, -0.42913755774497986, -0.2542022168636322, -5.1020273531321436e-05, -0.08143190294504166, -0.0034975565504282713, -0.016648879274725914, -0.18493036925792694], "finish_reason": "stop"}, {"text": " url_encoded_signature  # Return the URL encoded signature", "tokens": [" url", "_", "encoded", "_", "signature", "  ", "#", " Return", " the", " URL", " encoded", " signature"], "logprobs": [-0.011888484470546246, -8.761498611420393e-05, -9.536697689327411e-06, -3.0397906812140718e-05, -0.00011431517486926168, -2.7649495601654053, -0.000747877755202353, -0.20110851526260376, -0.02433466538786888, -0.28165528178215027, -0.051469869911670685, -1.1954058408737183], "finish_reason": "stop"}], "metrics": {"energy": 232.6570558261871, "energy_per_token": 2.3740515900631336, "time": 6.686365, "time_per_token": 0.0682282142857143}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"req_data should be a dictionary.\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " should", " be", " a", " dictionary", ".", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -1.2328108549118042, -0.005324942991137505, -0.13456135988235474, -0.13163885474205017, -1.3999829292297363, -0.02418631687760353, -0.0013565156841650605, -0.006464758887887001], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006007234565913677, -0.0003392120997887105, -0.0007381098694168031, -3.4689302992774174e-05, -0.0010624246206134558, -0.0020744726061820984, -1.597391747054644e-05, -1.3470558769768104e-05, -0.16990819573402405, -0.10193725675344467], "finish_reason": "stop"}, {"text": " hmac.new(bytes(secret_key, encoding='utf-8'), msg=json_req_data, digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "bytes", "(", "secret", "_", "key", ",", " encoding", "='", "utf", "-", "8", "')", ",", " msg", "=", "json", "_", "req", "_", "data", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006435230607166886, -3.659658250398934e-05, -1.9907753085135482e-05, -0.004108679015189409, -0.0003104920033365488, -2.2677249908447266, -0.0029774641152471304, -0.002975800074636936, -3.2186455882765586e-06, -7.152555099310121e-07, -0.020649921149015427, -1.8891711235046387, -0.12941648066043854, -0.01585085317492485, -0.03943557292222977, -0.00010573305189609528, -0.005356958135962486, -0.00028784899041056633, -1.1770131587982178, -0.0037553044967353344, -0.4815680682659149, -0.017245693132281303, -1.2874520507466514e-05, -7.510157047363464e-06, -8.344646857949556e-07, -0.9039292931556702, -0.019419429823756218, -0.0015617328463122249, -0.01869053952395916, -0.0005520250415429473, -1.4305104514278355e-06, -9.965400386136025e-05, -0.00032276666024699807, -0.008889149874448776, -0.00011312322021694854, -7.152531907195225e-06, -0.0009288049186579883, -0.004014885518699884], "finish_reason": "stop"}, {"text": " base64.b64encode(hmac_obj.digest()).decode()", "tokens": [" base", "6", "4", ".", "b", "6", "4", "encode", "(", "h", "mac", "_", "obj", ".", "dig", "est", "())", ".", "decode", "()", "\n"], "logprobs": [-2.986905336380005, -9.30981186684221e-05, -1.311301275563892e-06, -0.0002598424907773733, -0.3442639708518982, -0.001962641952559352, -5.960462772236497e-07, -0.004935581702739, -0.0002489972102921456, -0.0025993152521550655, -8.22540732769994e-06, -0.00013481661153491586, -1.3470558769768104e-05, -0.0001387499796692282, -0.0011267272057011724, -1.5497195136049413e-06, -0.003774068783968687, -0.4805755913257599, -0.008894821628928185, -0.131112739443779, -0.23937059938907623], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature, safe='~')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ",", " safe", "='", "~", "')", "\n"], "logprobs": [-0.009657921269536018, -2.3007127310847864e-05, -2.0265558760002023e-06, -6.913899414939806e-05, -0.00030322244856506586, -8.356221951544285e-05, -0.01845182664692402, -0.2724725306034088, -0.0082169808447361, -8.22540732769994e-06, -3.814624506048858e-05, -9.48860906646587e-05, -1.628633975982666, -0.03211503103375435, -0.6403670907020569, -1.713212490081787, -0.27472734451293945, -0.5443365573883057], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.014008881524205208, -0.0001113352773245424, -9.775113539944869e-06, -3.0278701160568744e-05, -0.00012754580529872328, -0.7722188234329224], "finish_reason": "stop"}], "metrics": {"energy": 236.8738917255402, "energy_per_token": 2.0074058620808493, "time": 7.5257554, "time_per_token": 0.06377758813559323}}
{"outputs": [{"text": " isinstance(req_data, dict):", "tokens": [" isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-2.523651123046875, -0.00013493580627255142, -0.006578692700713873, -2.9802276912960224e-06, -1.0132738680113107e-05, -0.0001833270798670128, -0.11997239291667938, -0.016967138275504112, -0.01182133611291647], "finish_reason": "stop"}, {"text": " TypeError('`req_data` must be a dictionary')", "tokens": [" Type", "Error", "('", "`", "req", "_", "data", "`", " must", " be", " a", " dictionary", "')", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -1.2639169692993164, -2.996896266937256, -0.015232308767735958, -0.0010097887134179473, -0.0005069877952337265, -0.00302524259313941, -0.6271906495094299, -0.00260644918307662, -0.05814671516418457, -0.0644524022936821, -0.46664127707481384, -0.0018474669195711613], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006486788857728243, -0.00027616979787126184, -0.0008142255246639252, -3.576214658096433e-05, -0.0007796823629178107, -0.002270027529448271, -1.2040065485052764e-05, -1.2397689715726301e-05, -0.1670081466436386, -0.08463830500841141], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006302992696873844, -3.58813522325363e-05, -1.9550132492440753e-05, -0.004674459807574749, -0.00019500737835187465, -0.22654637694358826, -1.8000440832111053e-05, -2.622600959512056e-06, -0.003034512745216489, -0.0002090712368953973, -0.36324378848075867, -0.00015233787416946143, -0.20320026576519012, -0.0010201494442299008, -1.0609570381348021e-05, -1.6689286894688848e-06, -3.576278118089249e-07, -0.02808261476457119, -3.755022044060752e-05, -0.068389393389225, -7.152301259338856e-05, -0.06192481145262718, -0.00022396916756406426, -5.507317473529838e-05, -0.0005799042410217226, -0.0070208036340773106, -4.7205765440594405e-05, -5.960446742392378e-06, -0.0008311392739415169, -0.0029812674038112164], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.07666908949613571, -3.838465272565372e-05, -0.0003618539194576442, -1.490105023549404e-05, -1.2636104656849056e-05, -0.10147002339363098, -0.00011419598013162613, -0.00040046300273388624, -0.0005579821881838143, -0.01694592460989952], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace(\"%20\", \"+\")", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "(", "\"", "%", "2", "0", "\"", ",", " \"", "+", "\"", ")", "\n"], "logprobs": [-0.00867101363837719, -2.2411095415009186e-05, -2.861018856492592e-06, -8.022463589441031e-05, -0.0003040566807612777, -8.49926145747304e-05, -0.0187657680362463, -0.22094807028770447, -0.007663730066269636, -8.4638240878121e-06, -3.2066785934148356e-05, -0.0001161031104857102, -0.29565244913101196, -1.0501309633255005, -0.0029912511818110943, -0.6896681189537048, -0.005839075893163681, -2.8575809001922607, -0.03900527581572533, -0.01240467093884945, -0.0005827635759487748, -8.535020606359467e-05, -0.011977655813097954, -0.008364525623619556, -4.124556289752945e-05, -0.001281036646105349, -0.2852611541748047], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.013350496999919415, -0.00013374387344811112, -8.821448318485636e-06, -2.455681169521995e-05, -0.00011955977242905647, -1.1827447414398193, -9.536738616588991e-07, -7.152555099310121e-07, -1.3947389561508317e-05, -0.0003195490571670234, -0.05335685983300209], "finish_reason": "stop"}], "metrics": {"energy": 192.106389055252, "energy_per_token": 1.730688189686955, "time": 6.9131794, "time_per_token": 0.062280895495495495}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary.\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", ".", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -0.5482271909713745, -0.0017479868838563561, -0.04193393141031265, -0.084071084856987, -1.6394414901733398, -0.014261819422245026, -0.0008204193436540663, -0.00424840347841382], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.00656388932839036, -0.00028272447525523603, -0.0006349454633891582, -4.2914423829643056e-05, -0.001135776867158711, -0.0029905380215495825, -1.549708758830093e-05, -1.2159273865108844e-05, -0.17409859597682953, -0.0808330625295639], "finish_reason": "stop"}, {"text": " hmac.new(", "tokens": [" h", "mac", ".", "new", "(", "\n"], "logprobs": [-0.0006020640721544623, -4.2914423829643056e-05, -1.3589766240329482e-05, -0.006074656266719103, -0.0002926159941125661, -3.0096518993377686], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06309394538402557, -4.255681051290594e-05, -0.0002656822034623474, -1.3112935448589269e-05, -1.2755313036905136e-05, -0.11880262941122055, -9.762764238985255e-05, -0.0003623305819928646, -0.0005535738891921937, -0.01973084732890129], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)  # Replace spaces with '+'", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "  ", "#", " Replace", " spaces", " with", " '", "+'", "\n"], "logprobs": [-0.007658643182367086, -2.2291887944447808e-05, -2.264974000354414e-06, -7.962863310240209e-05, -0.0002131234941771254, -7.60526381782256e-05, -0.021933715790510178, -1.3817391395568848, -0.00043335105874575675, -0.0003446938644628972, -0.0047608353197574615, -8.702239938429557e-06, -3.40932747349143e-05, -7.998623186722398e-05, -0.12519322335720062, -1.5291028022766113, -0.00047469791024923325, -0.8377519845962524, -0.06163298711180687, -0.010242046788334846, -0.039651114493608475, -0.0004462200158741325, -0.16623131930828094], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.012949774973094463, -0.00011574551899684593, -8.583032467868179e-06, -3.015949550899677e-05, -0.0001517419150331989, -0.8302478194236755], "finish_reason": "stop"}], "metrics": {"energy": 148.74410438156124, "energy_per_token": 1.8593013047695155, "time": 5.449084, "time_per_token": 0.06811355}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError('req_data should be a dictionary')", "tokens": [" Type", "Error", "('", "req", "_", "data", " should", " be", " a", " dictionary", "')", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -1.2639169692993164, -0.405276894569397, -0.007574173621833324, -0.0006872437661513686, -1.1025612354278564, -0.006109016947448254, -0.11817725002765656, -0.1545805186033249, -0.28522729873657227, -0.001760838902555406], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006486788857728243, -0.00027616979787126184, -0.0008142255246639252, -3.576214658096433e-05, -0.0007796823629178107, -0.002270027529448271, -1.2040065485052764e-05, -1.2397689715726301e-05, -0.1670081466436386, -0.08463830500841141], "finish_reason": "stop"}, {"text": " hmac.new(bytes(secret_key, encoding='utf-8'), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "bytes", "(", "secret", "_", "key", ",", " encoding", "='", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006302992696873844, -3.58813522325363e-05, -1.9550132492440753e-05, -0.004674459807574749, -0.00019500737835187465, -2.320895195007324, -0.0035579015966504812, -0.0033410938922315836, -5.006777428206988e-06, -7.152555099310121e-07, -0.02252645045518875, -1.8661073446273804, -0.1171598806977272, -0.02013283409178257, -0.03925082087516785, -8.284702198579907e-05, -0.004200920462608337, -0.0002653246629051864, -0.6318946480751038, -0.0026129886973649263, -9.059865078597795e-06, -2.3841830625315197e-06, -2.3841855067985307e-07, -0.07035009562969208, -0.00017426878912374377, -1.084747552871704, -0.00016473367577418685, -0.11106103658676147, -0.0012005510507151484, -5.340433563105762e-05, -0.0007221474661491811, -0.010309773497283459, -5.4834770708112046e-05, -3.2186455882765586e-06, -0.001277345814742148, -0.0033464403823018074], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06707406789064407, -3.397406908334233e-05, -0.0003381395654287189, -1.3112935448589269e-05, -1.5258672647178173e-05, -0.12993071973323822, -0.00016664070426486433, -0.0004211969207972288, -0.0006812873762100935, -0.019720561802387238], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.009062940254807472, -2.13382354559144e-05, -2.50339189733495e-06, -6.913899414939806e-05, -0.00028951745480298996, -7.760223525110632e-05, -0.022018613293766975, -1.5661826133728027, -0.0004889961564913392, -0.00033825874561443925, -0.004579888191074133, -1.0490362910786644e-05, -3.2782016205601394e-05, -9.119095193454996e-05, -0.11399412155151367, -0.513405978679657], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.011520172469317913, -0.00019941726350225508, -1.1444026313256472e-05, -2.90866428258596e-05, -0.00012563870404846966, -1.2193444967269897, -8.344646857949556e-07, -5.960462772236497e-07, -1.537788011773955e-05, -0.0005306981038302183, -0.0525071881711483], "finish_reason": "stop"}], "metrics": {"energy": 188.28245842552184, "energy_per_token": 1.7931662707192555, "time": 6.8824754, "time_per_token": 0.06554738476190476}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -0.5482271909713745, -0.0017479868838563561, -0.04193393141031265, -0.084071084856987, -0.28770920634269714, -0.0005610798834823072, -0.0061543951742351055], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006027141585946083, -0.000324673397699371, -0.0006920088781043887, -3.671578815556131e-05, -0.0008799732895568013, -0.002107305685058236, -1.3828182090946939e-05, -1.490105023549404e-05, -0.1668739765882492, -0.07375606149435043], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006831934442743659, -4.482168878894299e-05, -1.8954096958623268e-05, -0.004561376757919788, -0.00024637524620629847, -0.19553175568580627, -9.894321920000948e-06, -2.50339189733495e-06, -0.002909595612436533, -0.00017641419253777713, -0.39834022521972656, -0.00015805903240107, -0.21468877792358398, -0.001073975581675768, -1.0490362910786644e-05, -2.264974000354414e-06, -3.576278118089249e-07, -0.022618873044848442, -3.5523738915799186e-05, -0.10089793801307678, -7.176141662057489e-05, -0.059928759932518005, -0.000300600629998371, -5.2569914259947836e-05, -0.00051115796668455, -0.007082830648869276, -3.635817120084539e-05, -6.556489552167477e-06, -0.000726197671610862, -0.0024825488217175007], "finish_reason": "stop"}, {"text": " base64.b64encode(hmac_obj.digest()).decode()", "tokens": [" base", "6", "4", ".", "b", "6", "4", "encode", "(", "h", "mac", "_", "obj", ".", "dig", "est", "())", ".", "decode", "()", "\n"], "logprobs": [-2.8901920318603516, -8.737658936297521e-05, -1.0728830375228426e-06, -0.00019965562387369573, -0.3170556128025055, -0.0028740549460053444, -8.344646857949556e-07, -0.004032220225781202, -0.00026520551182329655, -0.0027300964575260878, -9.417489309271332e-06, -0.00013958434283267707, -9.775113539944869e-06, -0.00014840454969089478, -0.0012538912706077099, -1.7881377516459906e-06, -0.0032600611448287964, -0.5081462264060974, -0.009419994428753853, -0.14100134372711182, -0.19210457801818848], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.009815051220357418, -2.2053474822314456e-05, -2.0265558760002023e-06, -7.70062324590981e-05, -0.00023278864682652056, -7.724463648628443e-05, -0.021835513412952423, -0.2823616564273834, -0.007164619397372007, -8.106198947643861e-06, -3.4927710657939315e-05, -8.964136941358447e-05, -0.28878334164619446, -0.6352338194847107], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.013906137086451054, -0.00015293381875380874, -1.1444026313256472e-05, -2.90866428258596e-05, -0.00014351768186315894, -0.7563821077346802], "finish_reason": "stop"}], "metrics": {"energy": 182.78211078071595, "energy_per_token": 1.7407820074353901, "time": 6.70358, "time_per_token": 0.06384361904761904}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"The req_data must be a dict\")", "tokens": [" Type", "Error", "(", "\"", "The", " req", "_", "data", " must", " be", " a", " dict", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -2.564157009124756, -2.0773091316223145, -0.015520971268415451, -0.0011288706446066499, -1.0709151029586792, -0.0018229547422379255, -0.04610646888613701, -2.928593635559082, -0.9174821376800537, -0.0012393658980727196, -0.00702317152172327], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.0056167165748775005, -0.0003327769518364221, -0.0007487116381525993, -4.2437604861333966e-05, -0.0009002208826132119, -0.002691220724955201, -1.4066597032069694e-05, -9.417489309271332e-06, -0.14396882057189941, -0.0817032903432846], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), msg=json_req_data.encode(), digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " msg", "=", "json", "_", "req", "_", "data", ".", "encode", "()", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006642519147135317, -4.1960789531003684e-05, -1.5139465176616795e-05, -0.00529992301017046, -0.00023684080224484205, -0.21312429010868073, -1.6093124941107817e-05, -2.9802276912960224e-06, -0.002891409443691373, -0.0001879753835964948, -0.40355291962623596, -0.00015043080202303827, -1.7674859762191772, -0.005093811079859734, -0.010719221085309982, -0.003530818037688732, -6.318072337307967e-06, -3.6954811548639555e-06, -5.960462772236497e-07, -0.0650966539978981, -3.9457496313843876e-05, -0.055110108107328415, -8.725739462533966e-05, -0.028639746829867363, -0.0012500813463702798, -0.006430529057979584, -0.00043156370520591736, -1.4305104514278355e-06, -5.6622808187967166e-05, -0.00040260792593471706, -0.005860882345587015, -5.674201020156033e-05, -5.125986263010418e-06, -0.0007529999129474163, -0.003913483582437038], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06876461207866669, -4.1960789531003684e-05, -0.0004204819560982287, -1.490105023549404e-05, -1.3470558769768104e-05, -0.09123688191175461, -0.00016425691137555987, -0.0005152089870534837, -0.0006712805479764938, -0.021145382896065712], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.008609439246356487, -2.1457441107486375e-05, -2.264974000354414e-06, -7.462222856702283e-05, -0.00026651646476238966, -8.940297266235575e-05, -0.026698758825659752, -0.2527386546134949, -0.006176076363772154, -8.583032467868179e-06, -3.421248038648628e-05, -0.00011193125828867778, -0.31712326407432556, -0.6119709610939026], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.01268697064369917, -0.00011932138295378536, -9.536697689327411e-06, -2.729855441430118e-05, -0.0001212284987559542, -0.7733445167541504], "finish_reason": "stop"}], "metrics": {"energy": 239.70856430816653, "energy_per_token": 2.3970856430816654, "time": 7.336032, "time_per_token": 0.07336032}}
{"outputs": [{"text": " isinstance(req_data, dict):", "tokens": [" isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-2.523651123046875, -0.00013493580627255142, -0.006578692700713873, -2.9802276912960224e-06, -1.0132738680113107e-05, -0.0001833270798670128, -0.11997239291667938, -0.016967138275504112, -0.01182133611291647], "finish_reason": "stop"}, {"text": " TypeError('req_data is not a dictionary')", "tokens": [" Type", "Error", "('", "req", "_", "data", " is", " not", " a", " dictionary", "')", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -1.2639169692993164, -0.405276894569397, -0.007574173621833324, -0.0006872437661513686, -2.249598741531372, -0.06977604329586029, -0.0464618057012558, -0.13310180604457855, -0.2436884343624115, -0.0019309938652440906], "finish_reason": "stop"}, {"text": " json.dumps(req_data).encode('utf-8')", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", ".", "encode", "('", "utf", "-", "8", "')", "\n"], "logprobs": [-0.006486788857728243, -0.00027616979787126184, -0.0008142255246639252, -3.576214658096433e-05, -0.0007796823629178107, -0.002270027529448271, -1.2040065485052764e-05, -1.2397689715726301e-05, -0.1670081466436386, -2.5504796504974365, -0.020440641790628433, -0.6736654043197632, -0.034973204135894775, -0.013877333141863346, -2.3245540432981215e-05, -0.0003936707798857242, -0.004149636719375849], "finish_reason": "stop"}, {"text": " hmac.new(", "tokens": [" h", "mac", ".", "new", "(", "\n"], "logprobs": [-0.0006302992696873844, -3.58813522325363e-05, -1.9550132492440753e-05, -0.004674459807574749, -0.00019500737835187465, -2.629971504211426], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06707406789064407, -3.397406908334233e-05, -0.0003381395654287189, -1.3112935448589269e-05, -1.5258672647178173e-05, -0.12993071973323822, -0.00016664070426486433, -0.0004211969207972288, -0.0006812873762100935, -0.019720561802387238], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature, safe='').replace(' ', '+')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ",", " safe", "='", "')", ".", "replace", "('", " '", ",", " '", "+", "')", "\n"], "logprobs": [-0.009062940254807472, -2.13382354559144e-05, -2.50339189733495e-06, -6.913899414939806e-05, -0.00028951745480298996, -7.760223525110632e-05, -0.022018613293766975, -0.23613877594470978, -0.008522923104465008, -7.152531907195225e-06, -3.0397906812140718e-05, -8.999896090244874e-05, -1.579040288925171, -0.03279105946421623, -0.639413595199585, -0.4639267921447754, -1.508249282836914, -0.005034744739532471, -0.11990821361541748, -0.08602000772953033, -0.00010215714428341016, -0.021467581391334534, -0.002618101192638278, -0.00017915551143232733, -0.21437403559684753], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.012808789499104023, -0.00014149141497910023, -8.702239938429557e-06, -3.099393507000059e-05, -0.00010489867418073118, -0.7112057209014893], "finish_reason": "stop"}], "metrics": {"energy": 206.59676614570617, "energy_per_token": 2.4305501899494844, "time": 6.0852327, "time_per_token": 0.07159097294117647}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError('The `req_data` argument must be a dictionary.')", "tokens": [" Type", "Error", "('", "The", " `", "req", "_", "data", "`", " argument", " must", " be", " a", " dictionary", ".", "')", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -1.2639169692993164, -2.7401881217956543, -1.9732518196105957, -0.024050397798419, -0.0010961245279759169, -0.0006526962388306856, -0.0009625093080103397, -1.7232729196548462, -0.2794630229473114, -0.0009145130170509219, -0.08042088150978088, -0.05840863287448883, -0.40901076793670654, -0.012337321415543556, -0.0018742390675470233], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006486788857728243, -0.00027616979787126184, -0.0008142255246639252, -3.576214658096433e-05, -0.0007796823629178107, -0.002270027529448271, -1.2040065485052764e-05, -1.2397689715726301e-05, -0.1670081466436386, -0.08463830500841141], "finish_reason": "stop"}, {"text": " hmac.new(bytes(secret_key, 'utf-8'), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "bytes", "(", "secret", "_", "key", ",", " '", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006302992696873844, -3.58813522325363e-05, -1.9550132492440753e-05, -0.004674459807574749, -0.00019500737835187465, -2.320895195007324, -0.0035579015966504812, -0.0033410938922315836, -5.006777428206988e-06, -7.152555099310121e-07, -0.02252645045518875, -0.35674038529396057, -0.016853092238307, -0.014409884810447693, -3.8265450712060556e-05, -0.004134678281843662, -0.00036816971260122955, -0.5707579851150513, -0.002083632629364729, -6.437280717364047e-06, -7.510157047363464e-06, -2.3841855067985307e-07, -0.07425501197576523, -0.0001445904199499637, -1.1255227327346802, -0.0001867835089797154, -0.06368504464626312, -0.00037102968781255186, -5.721882189391181e-05, -0.0007682471186853945, -0.009419640526175499, -5.030505417380482e-05, -2.3841830625315197e-06, -0.0011747133685275912, -0.0037066105287522078], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.06707406789064407, -3.397406908334233e-05, -0.0003381395654287189, -1.3112935448589269e-05, -1.5258672647178173e-05, -2.106336832046509, -1.311301275563892e-06, -0.00018261195509694517, -0.5999721884727478], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.009596643969416618, -1.9311717551317997e-05, -2.50339189733495e-06, -7.4741430580616e-05, -0.0002828436263371259, -7.664863369427621e-05, -0.020527536049485207, -1.8136998414993286, -0.0004551566671580076, -0.00029476112104021013, -0.0051444536074995995, -8.940656698541716e-06, -3.015949550899677e-05, -8.987976616481319e-05, -0.08270369470119476, -0.4642365276813507], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.014048495329916477, -9.858122211880982e-05, -1.168244216387393e-05, -2.455681169521995e-05, -0.0001209901092806831, -0.8184404969215393], "finish_reason": "stop"}], "metrics": {"energy": 187.3311173877716, "energy_per_token": 1.818748712502637, "time": 6.890843, "time_per_token": 0.06690138834951456}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"req_data should be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " should", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -1.2328108549118042, -0.005324942991137505, -0.13456135988235474, -0.13163885474205017, -0.40531212091445923, -0.0008922410197556019, -0.005908404942601919], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006007234565913677, -0.0003392120997887105, -0.0007381098694168031, -3.4689302992774174e-05, -0.0010624246206134558, -0.0020744726061820984, -1.597391747054644e-05, -1.3470558769768104e-05, -0.16990819573402405, -0.10193725675344467], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006435230607166886, -3.659658250398934e-05, -1.9907753085135482e-05, -0.004108679015189409, -0.0003104920033365488, -0.2197609692811966, -1.2636104656849056e-05, -2.3841830625315197e-06, -0.0025490194093436003, -0.0002196785935666412, -0.3993360102176666, -0.0001820160250645131, -0.17853251099586487, -0.0009991897968575358, -1.2040065485052764e-05, -2.264974000354414e-06, -3.576278118089249e-07, -0.019931042566895485, -3.480850500636734e-05, -0.07359969615936279, -7.438383181579411e-05, -0.06775104999542236, -0.0002379134384682402, -5.149708886165172e-05, -0.0005907459417358041, -0.007115381304174662, -3.707340147229843e-05, -5.722029527532868e-06, -0.0007382289622910321, -0.0024418795946985483], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06802105158567429, -3.433168603805825e-05, -0.0003036991402041167, -1.585470999998506e-05, -1.2278481335670222e-05, -0.11838419735431671, -0.00010001159535022452, -0.00029202012228779495, -0.0005355831235647202, -0.020336570218205452], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace(\" \", \"+\")", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "(", "\"", " \"", ",", " \"", "+", "\"", ")", "\n"], "logprobs": [-0.01067829504609108, -2.1457441107486375e-05, -2.50339189733495e-06, -7.10462118149735e-05, -0.00026782741770148277, -8.487341256113723e-05, -0.02275405451655388, -0.2226048707962036, -0.00794240366667509, -7.986990567587782e-06, -2.9801878554280847e-05, -9.703165414975956e-05, -0.2776528298854828, -1.302253246307373, -0.0034789058845490217, -0.728632926940918, -0.008096611127257347, -0.2588281035423279, -8.177422569133341e-05, -0.00311211752705276, -0.07719241082668304, -4.494089080253616e-05, -0.001004667836241424, -0.3187939524650574], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.013536685146391392, -0.0001394651480950415, -1.0609570381348021e-05, -2.8490614567999728e-05, -0.00012468514614738524, -0.8279800415039062], "finish_reason": "stop"}], "metrics": {"energy": 205.74632393836967, "energy_per_token": 1.9783300378689392, "time": 6.5124316, "time_per_token": 0.06261953461538462}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary.\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", ".", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -0.5482271909713745, -0.0017479868838563561, -0.04193393141031265, -0.084071084856987, -1.6394414901733398, -0.014261819422245026, -0.0008204193436540663, -0.00424840347841382], "finish_reason": "stop"}, {"text": " json.dumps(req_data, sort_keys=True)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ",", " sort", "_", "keys", "=", "True", ")", "\n"], "logprobs": [-0.00656388932839036, -0.00028272447525523603, -0.0006349454633891582, -4.2914423829643056e-05, -0.001135776867158711, -0.0029905380215495825, -1.549708758830093e-05, -1.2159273865108844e-05, -1.8364959955215454, -0.519136905670166, 0.0, -0.00028975578607060015, -0.0012178155593574047, -0.006419631652534008, -0.12927307188510895, -0.0561344176530838], "finish_reason": "stop"}, {"text": " hmac.new(bytes(secret_key, 'utf-8'), json_req_data.encode('utf-8'), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "bytes", "(", "secret", "_", "key", ",", " '", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006718761869706213, -4.100715523236431e-05, -1.8954096958623268e-05, -0.003996600396931171, -0.00025996167096309364, -2.4285788536071777, -0.0029812674038112164, -0.0029082882683724165, -3.814689989667386e-06, -7.152555099310121e-07, -0.025914521887898445, -0.3222533166408539, -0.018202872946858406, -0.013187451288104057, -4.970903682988137e-05, -0.003993394784629345, -0.00034254882484674454, -0.49684420228004456, -0.0019350391812622547, -6.794906312279636e-06, -5.8412379075889476e-06, -3.576278118089249e-07, -0.0893026813864708, -0.00018285033002030104, -0.4883703887462616, -0.012906704097986221, -0.0016945539973676205, -1.0609570381348021e-05, -0.10000133514404297, -0.00025149996508844197, -0.04910966381430626, -0.0003532739356160164, -3.158996332786046e-05, -0.0007207180024124682, -0.0116348285228014, -0.00010382589971413836, -3.2186455882765586e-06, -0.0009540535393171012, -0.0038778597954660654], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06827527284622192, -3.909988299710676e-05, -0.0003793711948674172, -1.645074735279195e-05, -1.5139465176616795e-05, -0.11993274092674255, -0.00015186110977083445, -0.00029380773776210845, -0.0005912224878557026, -0.017831258475780487], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)  # Replace spaces with '+'", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "  ", "#", " Replace", " spaces", " with", " '", "+'", "\n"], "logprobs": [-0.009901219978928566, -2.288792165927589e-05, -3.2186455882765586e-06, -8.225102646974847e-05, -0.00032276666024699807, -8.856858039507642e-05, -0.021377617493271828, -0.2986816465854645, -0.006555125582963228, -7.748573807475623e-06, -3.528532761265524e-05, -0.0001070442158379592, -0.30850377678871155, -1.7589716911315918, -0.0008497203234583139, -0.7509817481040955, -0.05808383598923683, -0.013258037157356739, -0.051576752215623856, -0.00037996700848452747, -0.12775635719299316], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.01290282141417265, -0.00016640232934150845, -1.0490362910786644e-05, -2.610649426060263e-05, -0.00013696208770852536, -0.806433379650116], "finish_reason": "stop"}], "metrics": {"energy": 218.595042224884, "energy_per_token": 1.8683336942297777, "time": 7.113562, "time_per_token": 0.060799675213675214}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -0.4170007109642029, -0.17561659216880798, -0.565787672996521, -0.004633286036550999, -0.0006889115320518613, -0.5482271909713745, -0.0017479868838563561, -0.04193393141031265, -0.084071084856987, -0.28770920634269714, -0.0005610798834823072, -0.0061543951742351055], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006027141585946083, -0.000324673397699371, -0.0006920088781043887, -3.671578815556131e-05, -0.0008799732895568013, -0.002107305685058236, -1.3828182090946939e-05, -1.490105023549404e-05, -0.1668739765882492, -0.07375606149435043], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), msg=json_req_data.encode(), digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " msg", "=", "json", "_", "req", "_", "data", ".", "encode", "()", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006831934442743659, -4.482168878894299e-05, -1.8954096958623268e-05, -0.004561376757919788, -0.00024637524620629847, -0.19553175568580627, -9.894321920000948e-06, -2.50339189733495e-06, -0.002909595612436533, -0.00017641419253777713, -0.39834022521972656, -0.00015805903240107, -1.7567057609558105, -0.004691070877015591, -0.01374882459640503, -0.0028725096490234137, -5.364403477869928e-06, -4.529942543740617e-06, -5.960462772236497e-07, -0.06545781344175339, -4.1483970562694594e-05, -0.06761892139911652, -9.30981186684221e-05, -0.021123673766851425, -0.000846266164444387, -0.00698967045173049, -0.00038187362952157855, -1.5497195136049413e-06, -6.0437283536884934e-05, -0.00038556772051379085, -0.006469851825386286, -5.8530047681415454e-05, -5.364403477869928e-06, -0.0009689403814263642, -0.0029091201722621918], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06726255267858505, -3.266281055402942e-05, -0.00036900385748595, -1.5258672647178173e-05, -1.2993727978027891e-05, -0.1001962274312973, -0.00017772526189219207, -0.0002631794777698815, -0.0007853999268263578, -0.01808510534465313], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.009886229410767555, -2.52720492426306e-05, -2.622600959512056e-06, -7.676783570786938e-05, -0.0003069168305955827, -9.476689592702314e-05, -0.027951862663030624, -0.28044700622558594, -0.005764171481132507, -7.986990567587782e-06, -3.218599158572033e-05, -0.00010275312524754554, -0.31651049852371216, -0.59529048204422], "finish_reason": "stop"}, {"text": " url_encoded_signature  # Return the URL encoded hmac signature", "tokens": [" url", "_", "encoded", "_", "signature", "  ", "#", " Return", " the", " URL", " encoded", " h", "mac", " signature"], "logprobs": [-0.011767378076910973, -0.00012790338951162994, -9.894321920000948e-06, -1.8715683836489916e-05, -0.00011681827891152352, -2.832775115966797, -0.0008950994815677404, -0.17931100726127625, -0.02613392472267151, -0.23395657539367676, -0.06724650412797928, -0.6902219653129578, -0.00046993177966214716, -0.008483798243105412], "finish_reason": "stop"}], "metrics": {"energy": 168.56470679855343, "energy_per_token": 1.5753710915752657, "time": 6.4906516, "time_per_token": 0.0606602953271028}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.15404315292835236, -0.02163884788751602, -0.00013100242358632386, -0.01003730483353138, -2.145764938177308e-06, -1.3828182090946939e-05, -0.00018356545479036868, -0.01208601612597704, -0.004253745079040527, -0.006157712545245886], "finish_reason": "stop"}, {"text": " TypeError('Request data should be a dictionary.')", "tokens": [" Type", "Error", "('", "Request", " data", " should", " be", " a", " dictionary", ".", "')", "\n"], "logprobs": [-0.0021968772634863853, -8.22540732769994e-06, -1.2639169692993164, -3.1757559776306152, -0.04334014654159546, -0.9257543087005615, -0.0038608787581324577, -0.12413537502288818, -0.08270764350891113, -1.1627371311187744, -0.019841643050312996, -0.001716689090244472], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.006486788857728243, -0.00027616979787126184, -0.0008142255246639252, -3.576214658096433e-05, -0.0007796823629178107, -0.002270027529448271, -1.2040065485052764e-05, -1.2397689715726301e-05, -0.1670081466436386, -0.08463830500841141], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), msg=json_req_data.encode(), digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " msg", "=", "json", "_", "req", "_", "data", ".", "encode", "()", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0006302992696873844, -3.58813522325363e-05, -1.9550132492440753e-05, -0.004674459807574749, -0.00019500737835187465, -0.22654637694358826, -1.8000440832111053e-05, -2.622600959512056e-06, -0.003034512745216489, -0.0002090712368953973, -0.36324378848075867, -0.00015233787416946143, -1.8025997877120972, -0.0048804203979671, -0.009565354324877262, -0.00299089471809566, -6.318072337307967e-06, -4.887569048150908e-06, -5.960462772236497e-07, -0.06437282264232635, -4.732496745418757e-05, -0.06447888910770416, -9.262132516596466e-05, -0.0314209870994091, -0.0009382136631757021, -0.006881347857415676, -0.00037746457383036613, -1.0728830375228426e-06, -5.972207145532593e-05, -0.0003840185818262398, -0.005928550846874714, -4.875540980719961e-05, -5.006777428206988e-06, -0.0008287570672109723, -0.003057688008993864], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.06726355850696564, -3.2543604902457446e-05, -0.0003405229654163122, -1.2516897186287679e-05, -1.2278481335670222e-05, -0.11697738617658615, -0.00015352977789007127, -0.0003541081096045673, -0.0006611545104533434, -0.01611599326133728], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.010384337976574898, -2.074220174108632e-05, -2.7418097943154862e-06, -8.141662692651153e-05, -0.00023672162205912173, -7.64102369430475e-05, -0.025842037051916122, -0.2834256887435913, -0.007874635048210621, -6.9141146923357155e-06, -3.504691630951129e-05, -9.154854342341423e-05, -0.283342182636261, -0.6118666529655457], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.012448233552277088, -0.0001227780303452164, -9.536697689327411e-06, -2.753696753643453e-05, -0.00011634149996098131, -1.2340905666351318, -7.152555099310121e-07, -5.960462772236497e-07, -1.7404405298293568e-05, -0.0004502712981775403, -0.054231103509664536], "finish_reason": "stop"}], "metrics": {"energy": 163.89876568984988, "energy_per_token": 1.606850644018136, "time": 6.2787814, "time_per_token": 0.06155668039215686}}
