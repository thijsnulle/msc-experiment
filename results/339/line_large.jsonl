{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"Request data must be a dictionary.\")", "tokens": [" Type", "Error", "(", "\"", "Request", " data", " must", " be", " a", " dictionary", ".", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -3.0824196338653564, -0.005616242066025734, -0.33144351840019226, -0.0006095697171986103, -0.01927444152534008, -0.021479947492480278, -0.9199948310852051, -0.004118176642805338, -0.00040356122190132737, -0.0013508014380931854], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.004985520150512457, -0.00011383838864276186, -0.00011205045302631333, 0.0, -0.0018245016690343618, -0.002774439286440611, -3.814689989667386e-06, 0.0, -0.23385977745056152, -0.08058729022741318], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), msg=json_req_data.encode(), digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " msg", "=", "json", "_", "req", "_", "data", ".", "encode", "()", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016175392374861985, -2.3841855067985307e-07, -2.8132995794294402e-05, -0.0011947167804464698, -0.00028880240279249847, -0.15234258770942688, -1.680836794548668e-05, -2.3841855067985307e-07, -0.0015689932042732835, -5.531158240046352e-05, -0.40832608938217163, -8.642300235806033e-05, -2.6127753257751465, -0.0009374991059303284, -0.002865734277293086, -0.0011305375955998898, -7.748573807475623e-06, -2.622600959512056e-06, -2.3841855067985307e-07, -0.008390414528548717, -5.221230458118953e-05, -0.01531355082988739, -6.151010165922344e-05, -0.0036889140028506517, -3.4450891689630225e-05, -0.002836967818439007, -0.00027783826226368546, -4.768370445162873e-07, -7.152555099310121e-07, -4.887569048150908e-06, -0.0008897398365661502, -1.5020257706055418e-05, -9.536738616588991e-07, -0.00010835537250386551, -0.0047279708087444305], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0017897554207593203, -1.0728830375228426e-06, -0.00014649749209638685, -3.4570634852570947e-06, -1.156323378381785e-05, -0.2802298665046692, -5.960462772236497e-07, -1.537788011773955e-05, -0.017786173149943352], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.0028767890762537718, -1.5497195136049413e-06, 0.0, -1.9430925021879375e-05, -0.0001294529065489769, -2.3364747903542593e-05, -0.0007454953738488257, -0.46419674158096313, -0.013254978694021702, -5.960462772236497e-07, -4.887569048150908e-06, -9.357491217087954e-05, -0.5025635957717896, -0.30320340394973755], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.02915778011083603, -5.018585216021165e-05, -2.9801878554280847e-05, -1.0728830375228426e-06, -4.768370445162873e-07, -0.5570449233055115], "finish_reason": "stop"}], "metrics": {"energy": 688.1512240524291, "energy_per_token": 7.021951265841114, "time": 16.92472, "time_per_token": 0.1727012244897959}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -0.3612208068370819, -0.0005466635921038687, -0.028508255258202553, -0.07690059393644333, -0.11150994896888733, -0.00040070133400149643, -0.0016074366867542267], "finish_reason": "stop"}, {"text": " json.dumps(req_data, separators=(',', ':'))", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ",", " separ", "ators", "=", "('", ",", "'", ",", " ':", "'))", "\n"], "logprobs": [-0.005050994455814362, -0.00012170527770649642, -9.846202738117427e-05, 0.0, -0.0014949585311114788, -0.0022400543093681335, -4.768360213347478e-06, -1.1920928244535389e-07, -1.4360504150390625, -1.2515807151794434, -2.992108420585282e-05, -0.518707275390625, -0.0020678106229752302, -0.0005398723296821117, -0.0024704195093363523, -0.00018737945356406271, -0.0067187827080488205, -0.27765923738479614, -0.04710478335618973], "finish_reason": "stop"}, {"text": " hmac.new(key=secret_key.encode(), msg=json_req_data.encode(), digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "key", "=", "secret", "_", "key", ".", "encode", "()", ",", " msg", "=", "json", "_", "req", "_", "data", ".", "encode", "()", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0001728385395836085, -2.3841855067985307e-07, -2.932505594799295e-05, -0.0016169581795111299, -0.0002525725867599249, -2.766928195953369, -0.005032253917306662, -0.11620663851499557, -1.1324817933200393e-05, 0.0, -0.003232850693166256, -5.280832192511298e-05, -0.43271133303642273, -0.00012790338951162994, -0.01576613448560238, -0.00019786784832831472, -0.006030815187841654, -0.0016030330443754792, -6.318072337307967e-06, -3.3378546504536644e-06, 0.0, -0.005073767155408859, -9.583967766957358e-05, -0.022016281262040138, -8.296622399939224e-05, -0.004824900534003973, -1.680836794548668e-05, -0.0035215525422245264, -0.0005994430393911898, -4.768370445162873e-07, -7.152555099310121e-07, -5.722029527532868e-06, -0.0011386347468942404, -1.8596476365928538e-05, -4.768370445162873e-07, -0.00015472168161068112, -0.0073140948079526424], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0017484629061073065, -9.536738616588991e-07, -0.0001938155182870105, -3.099436753473128e-06, -9.775113539944869e-06, -0.37369951605796814, -7.152555099310121e-07, -2.0503786799963564e-05, -0.01583865098655224], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.0028047531377524137, -9.536738616588991e-07, 0.0, -2.539125671319198e-05, -0.00010918975021922961, -2.0146166207268834e-05, -0.000947622349485755, -0.5242624282836914, -0.012604101561009884, -7.152555099310121e-07, -5.006777428206988e-06, -7.009260298218578e-05, -0.40911054611206055, -0.3028838038444519], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature"], "logprobs": [-0.023263616487383842, -4.851700214203447e-05, -2.5629668016335927e-05, -9.536738616588991e-07, -4.768370445162873e-07], "finish_reason": "stop"}], "metrics": {"energy": 691.5924183788303, "energy_per_token": 6.403633503507688, "time": 17.332281, "time_per_token": 0.1604840833333333}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"'req_data' must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "'", "req", "_", "data", "'", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -2.6472675800323486, -0.024426572024822235, -0.0030285704415291548, -0.0003719830128829926, -0.0013469918631017208, -0.34569424390792847, -0.0006204110686667264, -0.06254874169826508, -0.0476132296025753, -0.37652769684791565, -0.00033504117163829505, -0.002309514442458749], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.004985520150512457, -0.00011383838864276186, -0.00011205045302631333, 0.0, -0.0018245016690343618, -0.002774439286440611, -3.814689989667386e-06, 0.0, -0.23385977745056152, -0.08058729022741318], "finish_reason": "stop"}, {"text": " hmac.new(key=secret_key.encode(), msg=json_req_data.encode(), digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "key", "=", "secret", "_", "key", ".", "encode", "()", ",", " msg", "=", "json", "_", "req", "_", "data", ".", "encode", "()", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016175392374861985, -2.3841855067985307e-07, -2.8132995794294402e-05, -0.0011947167804464698, -0.00028880240279249847, -3.1325747966766357, -0.004273330792784691, -0.1149558499455452, -1.2278481335670222e-05, 0.0, -0.0034963686484843493, -5.006664650863968e-05, -0.4711942970752716, -0.00014220656885299832, -0.022608617320656776, -0.0002008474839385599, -0.006457415409386158, -0.00168503331951797, -4.529942543740617e-06, -2.9802276912960224e-06, 0.0, -0.004597094841301441, -8.77341881277971e-05, -0.023168224841356277, -8.725739462533966e-05, -0.0039321258664131165, -1.3947389561508317e-05, -0.004730699583888054, -0.0004390706308186054, -7.152555099310121e-07, -7.152555099310121e-07, -7.748573807475623e-06, -0.0009355935617350042, -1.3232143828645349e-05, -5.960462772236497e-07, -0.00019107422849629074, -0.007910353131592274], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0017560789128765464, -7.152555099310121e-07, -0.0001867835089797154, -3.933898824470816e-06, -1.3232143828645349e-05, -0.37562766671180725, -5.960462772236497e-07, -2.396077979938127e-05, -0.019174693152308464], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature, safe='')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ",", " safe", "='", "')", "\n"], "logprobs": [-0.0028110535349696875, -1.4305104514278355e-06, 0.0, -2.038458114839159e-05, -0.00012468514614738524, -1.9788545614574105e-05, -0.000809699238743633, -0.4125266373157501, -0.013891206122934818, -7.152555099310121e-07, -6.198863957251888e-06, -6.19869097135961e-05, -0.9431158900260925, -0.02782619372010231, -0.19035395979881287, -0.04149235412478447, -0.5485019683837891], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.020020199939608574, -5.4834770708112046e-05, -1.966933996300213e-05, -9.536738616588991e-07, -5.960462772236497e-07, -0.49042415618896484], "finish_reason": "stop"}], "metrics": {"energy": 708.239815822601, "energy_per_token": 6.745141103072391, "time": 17.380266, "time_per_token": 0.16552634285714285}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary.\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", ".", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -0.3612208068370819, -0.0005466635921038687, -0.028508255258202553, -0.07690059393644333, -2.448988676071167, -0.003210511291399598, -0.0006112375995144248, -0.0013790155062451959], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.0041025057435035706, -0.00012516192509792745, -0.00010907054820563644, 0.0, -0.0020901754032820463, -0.002964152256026864, -4.887569048150908e-06, -1.1920928244535389e-07, -0.25499865412712097, -0.07242249697446823], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016318420239258558, -2.3841855067985307e-07, -3.325883881188929e-05, -0.0012643685331568122, -0.000300600629998371, -0.1447429209947586, -1.8954096958623268e-05, -3.576278118089249e-07, -0.0015847040340304375, -5.61460001335945e-05, -0.3882628083229065, -8.475421054754406e-05, -0.11858369410037994, -0.00034374051028862596, -1.8596476365928538e-05, -1.4305104514278355e-06, 0.0, -0.00031192204914987087, -3.814624506048858e-05, -0.009634779766201973, -4.589452510117553e-05, -0.0441398099064827, -4.768370445162873e-07, -1.4305104514278355e-06, -3.933898824470816e-06, -0.0009134411229752004, -9.059865078597795e-06, -1.4305104514278355e-06, -0.00014077626110520214, -0.0075359586626291275], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0021895025856792927, -1.311301275563892e-06, -0.00016151554882526398, -4.6491513785440475e-06, -1.490105023549404e-05, -0.3937302231788635, -5.960462772236497e-07, -2.729855441430118e-05, -0.01433879230171442], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.002834114944562316, -1.4305104514278355e-06, 0.0, -2.276871418871451e-05, -0.00010656742961145937, -2.0265373677830212e-05, -0.0008879532688297331, -1.0418779850006104, -0.0003906917118001729, -0.00010311071673640981, -0.014216807670891285, -1.0728830375228426e-06, -3.0278701160568744e-05, -0.00033408781746402383, -0.18303868174552917, -0.33351102471351624], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.022071203216910362, -4.23184028477408e-05, -2.2172682292875834e-05, -8.344646857949556e-07, -4.768370445162873e-07, -0.5017139315605164], "finish_reason": "stop"}], "metrics": {"energy": 598.4867188377378, "energy_per_token": 6.234236654559769, "time": 14.594291, "time_per_token": 0.15202386458333333}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -0.3612208068370819, -0.0005466635921038687, -0.028508255258202553, -0.07690059393644333, -0.11150994896888733, -0.00040070133400149643, -0.0016074366867542267], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005050994455814362, -0.00012170527770649642, -9.846202738117427e-05, 0.0, -0.0014949585311114788, -0.0022400543093681335, -4.768360213347478e-06, -1.1920928244535389e-07, -0.2720021903514862, -0.09269023686647415], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016342257731594145, -1.1920928244535389e-07, -2.682172998902388e-05, -0.0012355559738352895, -0.00025042734341695905, -0.170887291431427, -1.8715683836489916e-05, -2.3841855067985307e-07, -0.001958834705874324, -5.817244164063595e-05, -0.35934144258499146, -8.5588610090781e-05, -0.09694333374500275, -0.00039319414645433426, -1.4781842764932662e-05, -2.145764938177308e-06, 0.0, -0.00024303820100612938, -3.313963316031732e-05, -0.01258903369307518, -4.172238186583854e-05, -0.03333508223295212, -4.768370445162873e-07, -1.7881377516459906e-06, -4.291525328881107e-06, -0.00086758635006845, -9.179073458653875e-06, -1.1920922133867862e-06, -0.00012611546844709665, -0.005996688734740019], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0014734136639162898, -1.311301275563892e-06, -0.0001227780303452164, -2.861018856492592e-06, -8.821448318485636e-06, -0.4118286371231079, -7.152555099310121e-07, -2.539125671319198e-05, -0.01828726939857006], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.0028663286939263344, -9.536738616588991e-07, 0.0, -2.52720492426306e-05, -0.00012194366718176752, -2.7417760065873154e-05, -0.0005687049706466496, -0.5095849633216858, -0.01292788702994585, -4.768370445162873e-07, -5.006777428206988e-06, -4.446407547220588e-05, -0.4544315040111542, -0.30019688606262207], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.02071601152420044, -4.7205765440594405e-05, -2.169585604860913e-05, -9.536738616588991e-07, -4.768370445162873e-07, -0.491809606552124], "finish_reason": "stop"}], "metrics": {"energy": 578.3782476139068, "energy_per_token": 6.219120942085019, "time": 14.240955, "time_per_token": 0.15312854838709677}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -0.3612208068370819, -0.0005466635921038687, -0.028508255258202553, -0.07690059393644333, -0.11150994896888733, -0.00040070133400149643, -0.0016074366867542267], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005050994455814362, -0.00012170527770649642, -9.846202738117427e-05, 0.0, -0.0014949585311114788, -0.0022400543093681335, -4.768360213347478e-06, -1.1920928244535389e-07, -0.2720021903514862, -0.09269023686647415], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), json_req_data.encode('utf-8'), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016342257731594145, -1.1920928244535389e-07, -2.682172998902388e-05, -0.0012355559738352895, -0.00025042734341695905, -0.170887291431427, -1.8715683836489916e-05, -2.3841855067985307e-07, -0.001958834705874324, -5.817244164063595e-05, -1.243950605392456, -0.007251609116792679, -0.00933980755507946, -9.298280929215252e-06, -4.60137271147687e-05, -9.762764238985255e-05, -0.12361835688352585, -0.00039664984797127545, -2.2649508537142538e-05, -1.311301275563892e-06, 0.0, -0.00032824851223267615, -5.590759246842936e-05, -0.0032920234370976686, -0.00039426659350283444, -0.0002044230350293219, -1.0609570381348021e-05, -0.00021050144277978688, -8.5588610090781e-05, -0.028811411932110786, -3.576278118089249e-07, -1.1920922133867862e-06, -4.0531076592742465e-06, -0.0009422629955224693, -1.2397689715726301e-05, -9.536738616588991e-07, -0.00021586472576018423, -0.009530168026685715], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.001718117156997323, -5.960462772236497e-07, -0.00014745102089364082, -3.4570634852570947e-06, -8.702239938429557e-06, -0.39467331767082214, -5.960462772236497e-07, -2.038458114839159e-05, -0.020512821152806282], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace(' ', '+')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "('", " '", ",", " '", "+", "')", "\n"], "logprobs": [-0.002817591419443488, -1.311301275563892e-06, 0.0, -2.8132995794294402e-05, -0.00011145447206217796, -1.8715683836489916e-05, -0.0006632988806813955, -0.4105328619480133, -0.009582829661667347, -5.960462772236497e-07, -4.768360213347478e-06, -8.022463589441031e-05, -0.5176032781600952, -1.993597149848938, -0.003267427906394005, -0.5788432955741882, -0.7898253798484802, -7.450303382938728e-05, -0.010059374384582043, -0.00023123928986024112, -0.00015472168161068112, -0.10223832726478577], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.024524984881281853, -4.494089080253616e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -3.576278118089249e-07, -0.4530777335166931], "finish_reason": "stop"}], "metrics": {"energy": 699.7502631816864, "energy_per_token": 6.419727185153086, "time": 17.335926, "time_per_token": 0.15904519266055048}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -0.3612208068370819, -0.0005466635921038687, -0.028508255258202553, -0.07690059393644333, -0.11150994896888733, -0.00040070133400149643, -0.0016074366867542267], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005050994455814362, -0.00012170527770649642, -9.846202738117427e-05, 0.0, -0.0014949585311114788, -0.0022400543093681335, -4.768360213347478e-06, -1.1920928244535389e-07, -0.2720021903514862, -0.09269023686647415], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), json_req_data.encode('utf-8'), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016342257731594145, -1.1920928244535389e-07, -2.682172998902388e-05, -0.0012355559738352895, -0.00025042734341695905, -0.170887291431427, -1.8715683836489916e-05, -2.3841855067985307e-07, -0.001958834705874324, -5.817244164063595e-05, -1.243950605392456, -0.007251609116792679, -0.00933980755507946, -9.298280929215252e-06, -4.60137271147687e-05, -9.762764238985255e-05, -0.12361835688352585, -0.00039664984797127545, -2.2649508537142538e-05, -1.311301275563892e-06, 0.0, -0.00032824851223267615, -5.590759246842936e-05, -0.0032920234370976686, -0.00039426659350283444, -0.0002044230350293219, -1.0609570381348021e-05, -0.00021050144277978688, -8.5588610090781e-05, -0.028811411932110786, -3.576278118089249e-07, -1.1920922133867862e-06, -4.0531076592742465e-06, -0.0009422629955224693, -1.2397689715726301e-05, -9.536738616588991e-07, -0.00021586472576018423, -0.009530168026685715], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.001718117156997323, -5.960462772236497e-07, -0.00014745102089364082, -3.4570634852570947e-06, -8.702239938429557e-06, -0.39467331767082214, -5.960462772236497e-07, -2.038458114839159e-05, -0.020512821152806282], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.002817591419443488, -1.311301275563892e-06, 0.0, -2.8132995794294402e-05, -0.00011145447206217796, -1.8715683836489916e-05, -0.0006632988806813955, -0.4105328619480133, -0.009582829661667347, -5.960462772236497e-07, -4.768360213347478e-06, -8.022463589441031e-05, -0.5176032781600952, -0.3120938837528229], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.024524984881281853, -4.494089080253616e-05, -2.7656173188006505e-05, -9.536738616588991e-07, -3.576278118089249e-07, -1.3537583351135254, -7.152555099310121e-07, -1.311301275563892e-06, -8.344646857949556e-07, -5.960446742392378e-06, -0.19840091466903687], "finish_reason": "stop"}], "metrics": {"energy": 695.5231175098422, "energy_per_token": 6.561538844432474, "time": 17.115688, "time_per_token": 0.16146875471698113}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"Invalid input: `req_data` should be a dictionary.\")", "tokens": [" Type", "Error", "(", "\"", "Invalid", " input", ":", " `", "req", "_", "data", "`", " should", " be", " a", " dictionary", ".", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -3.7475426197052, -0.7740479707717896, -0.7323291301727295, -1.570853590965271, -0.00876153539866209, -0.0011212497483938932, -0.0006774752982892096, -0.0007737264968454838, -0.772995114326477, -0.0005298641044646502, -0.01454112771898508, -0.03592599555850029, -0.38309523463249207, -0.0020469920709729195, -0.0006500753224827349, -0.0013198483502492309], "finish_reason": "stop"}, {"text": " json.dumps(req_data).encode()", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", ".", "encode", "()", "\n"], "logprobs": [-0.004985520150512457, -0.00011383838864276186, -0.00011205045302631333, 0.0, -0.0018245016690343618, -0.002774439286440611, -3.814689989667386e-06, 0.0, -0.23385977745056152, -2.5808849334716797, -0.013365788385272026, -0.8257277011871338, -0.0046852570958435535], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), json_req_data.encode('utf-8'), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016175392374861985, -2.3841855067985307e-07, -2.8132995794294402e-05, -0.0011947167804464698, -0.00028880240279249847, -0.15234258770942688, -1.680836794548668e-05, -2.3841855067985307e-07, -0.0015689932042732835, -5.531158240046352e-05, -1.1365480422973633, -0.008113875053822994, -0.008639458566904068, -7.510157047363464e-06, -4.6967357775429264e-05, -0.00011038171214750037, -0.13668668270111084, -0.00030429501202888787, -1.8358061424805783e-05, -1.1920922133867862e-06, 0.0, -0.0003387354372534901, -4.95898348162882e-05, -0.00330901425331831, -0.0003143055073451251, -0.00020776021119672805, -9.894321920000948e-06, -0.00023409964342135936, -0.00011073929636040702, -0.029210461303591728, -2.3841855067985307e-07, -1.0728830375228426e-06, -5.006777428206988e-06, -0.0009681067313067615, -1.7046782886609435e-05, -7.152555099310121e-07, -0.0002138386043952778, -0.008890685625374317], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0017872564494609833, -7.152555099310121e-07, -0.00012170527770649642, -3.6954811548639555e-06, -1.1205610462639015e-05, -0.34912770986557007, -5.960462772236497e-07, -1.811964830267243e-05, -0.017414990812540054], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature, safe='')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ",", " safe", "='", "')", "\n"], "logprobs": [-0.0028654965572059155, -1.0728830375228426e-06, 0.0, -2.2291887944447808e-05, -0.00011896379146492109, -1.9311717551317997e-05, -0.0010383697226643562, -0.45109865069389343, -0.010691269300878048, -5.960462772236497e-07, -5.364403477869928e-06, -5.054346183896996e-05, -1.0267109870910645, -0.024071577936410904, -0.2633427381515503, -0.048477742820978165, -0.4450080692768097], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.03274849057197571, -5.6265202147187665e-05, -2.312633478140924e-05, -9.536738616588991e-07, -5.960462772236497e-07, -0.5093872547149658], "finish_reason": "stop"}], "metrics": {"energy": 746.2515872917173, "energy_per_token": 6.603996347714313, "time": 17.956015, "time_per_token": 0.1589027876106195}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data should be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " should", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -1.3479342460632324, -0.0019481267081573606, -0.05007822439074516, -0.1349119395017624, -0.2703566253185272, -0.0004911408759653568, -0.0021858150139451027], "finish_reason": "stop"}, {"text": " json.dumps(req_data, separators=(\",\", \":\"))", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ",", " separ", "ators", "=(", "\"", ",", "\"", ",", " ", "\":\"", "))", "\n"], "logprobs": [-0.005096183158457279, -0.00016127715934999287, -0.00012158608296886086, 0.0, -0.002291317330673337, -0.0029573773499578238, -5.125986263010418e-06, -1.1920928244535389e-07, -1.404597520828247, -1.4805852174758911, -2.95634672511369e-05, -0.8885535597801208, -0.04407947137951851, -0.001618624315597117, -0.001259963377378881, -8.082063141046092e-05, -0.00625497754663229, -0.000663894519675523, -0.1971043050289154, -0.0841493308544159], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00017998983094003052, -2.3841855067985307e-07, -2.634490556374658e-05, -0.002183317206799984, -0.0002286172821186483, -0.15189054608345032, -1.490105023549404e-05, -2.3841855067985307e-07, -0.0016437364974990487, -5.2569914259947836e-05, -0.3106684982776642, -8.880697714630514e-05, -0.09921479970216751, -0.0003209791029803455, -1.4662635294371285e-05, -3.3378546504536644e-06, 0.0, -0.0002586507180240005, -2.884823152271565e-05, -0.012664959765970707, -4.994744449504651e-05, -0.029767543077468872, -3.576278118089249e-07, -1.5497195136049413e-06, -3.6954811548639555e-06, -0.0009672730811871588, -1.0132738680113107e-05, -1.0728830375228426e-06, -0.00014768941036891192, -0.005460585001856089], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0012935374397784472, -1.0728830375228426e-06, -0.00019941726350225508, -2.7418097943154862e-06, -1.2397689715726301e-05, -0.4417639374732971, -5.960462772236497e-07, -2.7417760065873154e-05, -0.017638254910707474], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.002895807381719351, -1.0728830375228426e-06, 0.0, -2.753696753643453e-05, -0.0001102625101339072, -2.002696055569686e-05, -0.0014206803170964122, -1.0523358583450317, -0.0004968600696884096, -0.00010239553375868127, -0.010606229305267334, -1.0728830375228426e-06, -2.4914430468925275e-05, -0.00040570611599832773, -0.12262813001871109, -0.31332510709762573], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.025893498212099075, -4.9828242481453344e-05, -2.3483953555114567e-05, -9.536738616588991e-07, -5.960462772236497e-07, -0.5422846674919128], "finish_reason": "stop"}], "metrics": {"energy": 625.8681580276489, "energy_per_token": 5.960649124072846, "time": 15.248444, "time_per_token": 0.14522327619047617}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"`req_data` must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "`", "req", "_", "data", "`", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -1.8697445392608643, -0.014700899831950665, -0.0009945451747626066, -0.00040999590419232845, -0.001540784491226077, -0.37545692920684814, -0.0008056493825279176, -0.03279982879757881, -0.06730925291776657, -0.7088126540184021, -0.0002914242504630238, -0.0024289172142744064], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.004985520150512457, -0.00011383838864276186, -0.00011205045302631333, 0.0, -0.0018245016690343618, -0.002774439286440611, -3.814689989667386e-06, 0.0, -0.23385977745056152, -0.08058729022741318], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016175392374861985, -2.3841855067985307e-07, -2.8132995794294402e-05, -0.0011947167804464698, -0.00028880240279249847, -0.15234258770942688, -1.680836794548668e-05, -2.3841855067985307e-07, -0.0015689932042732835, -5.531158240046352e-05, -0.40832608938217163, -8.642300235806033e-05, -0.09306470304727554, -0.0003232433518860489, -1.7881233361549675e-05, -2.0265558760002023e-06, 0.0, -0.00029118589009158313, -2.932505594799295e-05, -0.01179282646626234, -5.8887653722194955e-05, -0.02604774944484234, -3.576278118089249e-07, -1.6689286894688848e-06, -4.172316494077677e-06, -0.0008898589294403791, -8.940656698541716e-06, -9.536738616588991e-07, -0.0001382732152706012, -0.005262688733637333], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.001555900671519339, -1.311301275563892e-06, -0.0001746263587847352, -3.099436753473128e-06, -1.0847986231965479e-05, -1.2304208278656006, -3.2186455882765586e-06, 0.0, -1.7046782886609435e-05, -0.007315278053283691], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)  # Use quote_plus to convert spaces to '+'", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "  ", "#", " Use", " quote", "_", "plus", " to", " convert", " spaces", " to", " '", "+'", "\n"], "logprobs": [-0.0037791754584759474, -1.1920922133867862e-06, 0.0, -2.455681169521995e-05, -0.0001234931987710297, -1.9788545614574105e-05, -0.0006691362359561026, -1.1227861642837524, -0.0005165196489542723, -0.00010466027742950246, -0.013511399738490582, -1.1920922133867862e-06, -2.5152843591058627e-05, -0.0003159739135298878, -0.16108952462673187, -1.668010950088501, -4.7444173105759546e-05, -0.8622720241546631, -0.17042715847492218, -0.012200371362268925, -0.00019965562387369573, -0.4496200978755951, -2.9102988243103027, -0.04829204082489014, -0.02532309480011463, -0.1941574066877365, -0.0004587313160300255, -0.026366515085101128], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.020123252645134926, -5.61460001335945e-05, -2.062299427052494e-05, -1.0728830375228426e-06, -4.768370445162873e-07, -0.5240123867988586], "finish_reason": "stop"}], "metrics": {"energy": 624.2896051216125, "energy_per_token": 5.6753600465601135, "time": 14.020317, "time_per_token": 0.12745742727272727}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError('req_data must be a dictionary')", "tokens": [" Type", "Error", "('", "req", "_", "data", " must", " be", " a", " dictionary", "')", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -1.517082691192627, -0.5344730019569397, -0.0020450884476304054, -0.000436925794929266, -0.6116163730621338, -0.0008157739648595452, -0.05356636643409729, -0.13106589019298553, -0.040793802589178085, -0.0011582816950976849], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005191417410969734, -0.0001829695247579366, -0.0001255195093108341, 0.0, -0.0022380324080586433, -0.0029337245505303144, -5.125986263010418e-06, 0.0, -0.23668687045574188, -0.08648576587438583], "finish_reason": "stop"}, {"text": " hmac.new(key=secret_key.encode(), msg=json_req_data.encode(), digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "key", "=", "secret", "_", "key", ".", "encode", "()", ",", " msg", "=", "json", "_", "req", "_", "data", ".", "encode", "()", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00017915551143232733, -2.3841855067985307e-07, -2.4199192921514623e-05, -0.0010449193650856614, -0.00026925752172246575, -2.9009461402893066, -0.0037569671403616667, -0.11656615138053894, -1.5139465176616795e-05, 0.0, -0.003331945277750492, -5.221230458118953e-05, -0.41983190178871155, -0.00014304091746453196, -0.015445731580257416, -0.00017510310863144696, -0.0073410761542618275, -0.0017993940273299813, -5.602820692729438e-06, -4.529942543740617e-06, 0.0, -0.0050276280380785465, -0.00010644822759786621, -0.022568175569176674, -9.190614218823612e-05, -0.005191773176193237, -1.1920858014491387e-05, -0.004072468727827072, -0.0008361419313587248, -3.576278118089249e-07, -7.152555099310121e-07, -8.583032467868179e-06, -0.0010384886991232634, -1.2397689715726301e-05, -5.960462772236497e-07, -0.00019178935326635838, -0.008116240613162518], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0017172842053696513, -5.960462772236497e-07, -0.00017212340026162565, -3.814689989667386e-06, -1.1324817933200393e-05, -0.3976876139640808, -4.768370445162873e-07, -1.8715683836489916e-05, -0.014882138930261135], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature, safe='')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ",", " safe", "='", "')", "\n"], "logprobs": [-0.0028355412650853395, -1.1920922133867862e-06, 0.0, -3.123234637314454e-05, -9.536288416711614e-05, -1.9430925021879375e-05, -0.0008721124031580985, -0.45174747705459595, -0.010651404038071632, -8.344646857949556e-07, -4.172316494077677e-06, -6.711257447022945e-05, -0.9370133280754089, -0.03190929442644119, -0.20418035984039307, -0.054004114121198654, -0.4472198188304901], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature"], "logprobs": [-0.021919719874858856, -4.160317621426657e-05, -2.3364747903542593e-05, -1.0728830375228426e-06, -4.768370445162873e-07], "finish_reason": "stop"}], "metrics": {"energy": 670.6229508285521, "energy_per_token": 6.706229508285521, "time": 16.910244, "time_per_token": 0.16910244}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"Invalid input. Please provide a dictionary as req_data.\")", "tokens": [" Type", "Error", "(", "\"", "Invalid", " input", ".", " Please", " provide", " a", " dictionary", " as", " req", "_", "data", ".", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -3.7475426197052, -0.7740479707717896, -1.8725783824920654, -3.348200559616089, -0.13501110672950745, -0.03990291804075241, -0.10767541825771332, -1.0931642055511475, -0.8100890517234802, -0.0007996936910785735, -0.000310730334604159, -0.12910567224025726, -0.0010214593494310975, -0.0005963454605080187, -0.0013765154872089624], "finish_reason": "stop"}, {"text": " json.dumps(req_data, sort_keys=True, separators=(\",\", \":\"))", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ",", " sort", "_", "keys", "=", "True", ",", " separ", "ators", "=(", "\"", ",", "\"", ",", " ", "\":\"", "))", "\n"], "logprobs": [-0.004985520150512457, -0.00011383838864276186, -0.00011205045302631333, 0.0, -0.0018245016690343618, -0.002774439286440611, -3.814689989667386e-06, 0.0, -1.5690505504608154, -0.43032076954841614, -6.437280717364047e-06, -8.344646857949556e-07, -0.0028194934129714966, -0.005071157589554787, -0.403340607881546, -0.3215284049510956, -1.9311717551317997e-05, -1.1839523315429688, -0.03213142603635788, -0.0029245722107589245, -0.0018731682794168591, -8.844937838148326e-05, -0.011501435190439224, -0.0011030309833586216, -0.10067720711231232, -0.033554475754499435], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00015960850578267127, -2.3841855067985307e-07, -2.753696753643453e-05, -0.0012428186601027846, -0.00024256148026324809, -0.19870449602603912, -1.8596476365928538e-05, -2.3841855067985307e-07, -0.0012768696760758758, -5.352353764465079e-05, -0.38963383436203003, -7.819823804311454e-05, -0.09721638262271881, -0.00032062159152701497, -1.4305012882687151e-05, -1.9073468138230965e-06, 0.0, -0.00021443451987579465, -3.290122185717337e-05, -0.012923886068165302, -4.732496745418757e-05, -0.045251067727804184, -4.768370445162873e-07, -1.6689286894688848e-06, -4.0531076592742465e-06, -0.0010219357209280133, -8.34461570775602e-06, -1.1920922133867862e-06, -0.00018130090029444546, -0.005860052537173033], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0015674459282308817, -9.536738616588991e-07, -0.00018046658078674227, -3.814689989667386e-06, -1.2278481335670222e-05, -0.3572968542575836, -5.960462772236497e-07, -2.2053474822314456e-05, -0.0174613818526268], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature, safe='')  # '+' for spaces", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ",", " safe", "='", "')", "  ", "#", " '", "+'", " for", " spaces", "\n"], "logprobs": [-0.0028196123894304037, -1.311301275563892e-06, 0.0, -2.407998726994265e-05, -0.00011574551899684593, -1.9550132492440753e-05, -0.0007558587822131813, -0.9649513363838196, -0.00032276666024699807, -0.0001110968878492713, -0.010308475233614445, -1.1920922133867862e-06, -3.1470757676288486e-05, -0.00035363141796551645, -1.9177268743515015, -0.03641555830836296, -0.30590516328811646, -0.02270604483783245, -1.5498250722885132, -0.0001438752660760656, -3.616499423980713, -0.2814406454563141, -1.4710432291030884, -0.4636518657207489, -0.23617680370807648], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.01974288560450077, -3.9934315282152966e-05, -2.276871418871451e-05, -9.536738616588991e-07, -7.152555099310121e-07, -1.2323797941207886, -8.344646857949556e-07, -1.311301275563892e-06, -9.536738616588991e-07, -5.364403477869928e-06, -0.1468304544687271], "finish_reason": "stop"}], "metrics": {"energy": 740.5194170837401, "energy_per_token": 5.696303208336462, "time": 17.594952, "time_per_token": 0.1353457846153846}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError('req_data should be a dictionary')", "tokens": [" Type", "Error", "('", "req", "_", "data", " should", " be", " a", " dictionary", "')", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -1.517082691192627, -0.5344730019569397, -0.0020450884476304054, -0.000436925794929266, -0.9220335483551025, -0.0032201362773776054, -0.06649500876665115, -0.19460996985435486, -0.1381523311138153, -0.001335324952378869], "finish_reason": "stop"}, {"text": " json.dumps(req_data).encode(\"utf-8\")", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", ".", "encode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.005191417410969734, -0.0001829695247579366, -0.0001255195093108341, 0.0, -0.0022380324080586433, -0.0029337245505303144, -5.125986263010418e-06, 0.0, -0.23668687045574188, -2.5156850814819336, -0.019290929660201073, -2.5107645988464355, -0.016555316746234894, -0.06205097585916519, -0.03719068318605423, -9.65590606938349e-06, -2.0265558760002023e-06, -0.00024077377747744322, -0.0022191202733665705], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00017915551143232733, -2.3841855067985307e-07, -2.4199192921514623e-05, -0.0010449193650856614, -0.00026925752172246575, -0.1839546263217926, -1.6927575416048057e-05, -1.1920928244535389e-07, -0.0015685171820223331, -5.864924969500862e-05, -0.30311712622642517, -0.000102037942269817, -0.08234080672264099, -0.0003159739135298878, -2.038458114839159e-05, -2.622600959512056e-06, 0.0, -0.00027104519540444016, -3.85038583772257e-05, -0.011895906180143356, -4.768258077092469e-05, -0.029318012297153473, -3.576278118089249e-07, -1.6689286894688848e-06, -4.529942543740617e-06, -0.0009616755996830761, -7.986990567587782e-06, -1.1920922133867862e-06, -0.00015448330668732524, -0.006620259955525398], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.0013760393485426903, -1.1920922133867862e-06, -0.00012814177898690104, -3.576272320060525e-06, -1.3351351299206726e-05, -1.2150342464447021, -3.576272320060525e-06, 0.0, -1.9192511899746023e-05, -0.007783796638250351], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)  # Replace spaces with '+'", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "  ", "#", " Replace", " spaces", " with", " '", "+'", "\n"], "logprobs": [-0.004279621876776218, -1.1920922133867862e-06, 0.0, -2.2649508537142538e-05, -9.60780744208023e-05, -2.2649508537142538e-05, -0.000846147071570158, -0.8719257712364197, -0.00045599075383506715, -0.00010871296399272978, -0.012825972400605679, -1.0728830375228426e-06, -2.4676019165781327e-05, -0.000259365770034492, -0.15764622390270233, -1.696229338645935, -4.124556289752945e-05, -1.898289680480957, -0.10747705399990082, -0.01452338695526123, -0.09076298773288727, -0.0009286858257837594, -0.05903015285730362], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.021537117660045624, -4.386805812828243e-05, -2.3007127310847864e-05, -8.344646857949556e-07, -3.576278118089249e-07, -1.2594857215881348, -7.152555099310121e-07, -1.311301275563892e-06, -7.152555099310121e-07, -3.099436753473128e-06, -0.16917458176612854], "finish_reason": "stop"}], "metrics": {"energy": 728.2083244686127, "energy_per_token": 6.332246299727067, "time": 16.767029, "time_per_token": 0.14580025217391304}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError('req_data must be a dictionary')", "tokens": [" Type", "Error", "('", "req", "_", "data", " must", " be", " a", " dictionary", "')", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -1.517082691192627, -0.5344730019569397, -0.0020450884476304054, -0.000436925794929266, -0.6116163730621338, -0.0008157739648595452, -0.05356636643409729, -0.13106589019298553, -0.040793802589178085, -0.0011582816950976849], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005191417410969734, -0.0001829695247579366, -0.0001255195093108341, 0.0, -0.0022380324080586433, -0.0029337245505303144, -5.125986263010418e-06, 0.0, -0.23668687045574188, -0.08648576587438583], "finish_reason": "stop"}, {"text": " hmac.new(", "tokens": [" h", "mac", ".", "new", "(", "\n"], "logprobs": [-0.00017915551143232733, -2.3841855067985307e-07, -2.4199192921514623e-05, -0.0010449193650856614, -0.00026925752172246575, -2.505995273590088], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0017172842053696513, -5.960462772236497e-07, -0.00017212340026162565, -3.814689989667386e-06, -1.1324817933200393e-05, -0.3976876139640808, -4.768370445162873e-07, -1.8715683836489916e-05, -0.014882138930261135], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.0028355412650853395, -1.1920922133867862e-06, 0.0, -3.123234637314454e-05, -9.536288416711614e-05, -1.9430925021879375e-05, -0.0008721124031580985, -0.45174747705459595, -0.010651404038071632, -8.344646857949556e-07, -4.172316494077677e-06, -6.711257447022945e-05, -0.5182244181632996, -0.32166486978530884], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.021919719874858856, -4.160317621426657e-05, -2.3364747903542593e-05, -1.0728830375228426e-06, -4.768370445162873e-07, -0.5223421454429626], "finish_reason": "stop"}], "metrics": {"energy": 600.5660595092772, "energy_per_token": 8.963672529989212, "time": 15.045081, "time_per_token": 0.224553447761194}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -0.3612208068370819, -0.0005466635921038687, -0.028508255258202553, -0.07690059393644333, -0.11150994896888733, -0.00040070133400149643, -0.0016074366867542267], "finish_reason": "stop"}, {"text": " json.dumps(req_data, sort_keys=True)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ",", " sort", "_", "keys", "=", "True", ")", "\n"], "logprobs": [-0.005050994455814362, -0.00012170527770649642, -9.846202738117427e-05, 0.0, -0.0014949585311114788, -0.0022400543093681335, -4.768360213347478e-06, -1.1920928244535389e-07, -1.4360504150390625, -0.5535139441490173, -4.291525328881107e-06, -7.152555099310121e-07, -0.002227684250101447, -0.005718893837183714, -1.204693078994751, -0.06409132480621338], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.0001728385395836085, -2.3841855067985307e-07, -2.932505594799295e-05, -0.0016169581795111299, -0.0002525725867599249, -0.19392244517803192, -1.549708758830093e-05, -2.3841855067985307e-07, -0.00168658047914505, -5.519237674889155e-05, -0.3852946162223816, -7.92710343375802e-05, -0.09931357204914093, -0.00037400881410576403, -1.168244216387393e-05, -2.264974000354414e-06, 0.0, -0.00024720950750634074, -3.433168603805825e-05, -0.011303316801786423, -5.781483559985645e-05, -0.035015448927879333, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.6491513785440475e-06, -0.00100192881654948, -8.106198947643861e-06, -1.1920922133867862e-06, -0.00012540031457319856, -0.003948986995965242], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.0012403184082359076, -1.311301275563892e-06, -0.0001299296854995191, -2.264974000354414e-06, -1.2159273865108844e-05, -1.2211631536483765, -3.4570634852570947e-06, 0.0, -2.276871418871451e-05, -0.007113250438123941], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace(\"%20\", \"+\")", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "(", "\"", "%", "2", "0", "\"", ",", " \"", "+", "\"", ")", "\n"], "logprobs": [-0.0042085181921720505, -1.1920922133867862e-06, 0.0, -2.074220174108632e-05, -9.524368942948058e-05, -2.5629668016335927e-05, -0.0012134101707488298, -0.4782761335372925, -0.013527982868254185, -5.960462772236497e-07, -5.8412379075889476e-06, -5.2927523938706145e-05, -0.4528784155845642, -2.1616945266723633, -0.0026373625732958317, -0.9116288423538208, -0.04641105234622955, -0.5478440523147583, -0.02729308418929577, -0.13393159210681915, -0.00016366096679121256, -5.924526340095326e-05, -0.011384996585547924, -0.002039021346718073, -1.168244216387393e-05, -0.0036953275557607412, -0.06475000083446503], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.022900402545928955, -4.410646579344757e-05, -2.002696055569686e-05, -1.0728830375228426e-06, -7.152555099310121e-07, -0.5771281123161316], "finish_reason": "stop"}], "metrics": {"energy": 712.7246494922637, "energy_per_token": 6.307297783117377, "time": 16.290184, "time_per_token": 0.1441609203539823}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"`req_data` must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "`", "req", "_", "data", "`", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -1.8697445392608643, -0.014700899831950665, -0.0009945451747626066, -0.00040999590419232845, -0.001540784491226077, -0.37545692920684814, -0.0008056493825279176, -0.03279982879757881, -0.06730925291776657, -0.7088126540184021, -0.0002914242504630238, -0.0024289172142744064], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.004985520150512457, -0.00011383838864276186, -0.00011205045302631333, 0.0, -0.0018245016690343618, -0.002774439286440611, -3.814689989667386e-06, 0.0, -0.23385977745056152, -0.08058729022741318], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016175392374861985, -2.3841855067985307e-07, -2.8132995794294402e-05, -0.0011947167804464698, -0.00028880240279249847, -0.15234258770942688, -1.680836794548668e-05, -2.3841855067985307e-07, -0.0015689932042732835, -5.531158240046352e-05, -0.40832608938217163, -8.642300235806033e-05, -0.09306470304727554, -0.0003232433518860489, -1.7881233361549675e-05, -2.0265558760002023e-06, 0.0, -0.00029118589009158313, -2.932505594799295e-05, -0.01179282646626234, -5.8887653722194955e-05, -0.02604774944484234, -3.576278118089249e-07, -1.6689286894688848e-06, -4.172316494077677e-06, -0.0008898589294403791, -8.940656698541716e-06, -9.536738616588991e-07, -0.0001382732152706012, -0.005262688733637333], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.001555900671519339, -1.311301275563892e-06, -0.0001746263587847352, -3.099436753473128e-06, -1.0847986231965479e-05, -0.3458002209663391, -7.152555099310121e-07, -1.9550132492440753e-05, -0.02053816244006157], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature, safe=\"\")", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ",", " safe", "=", "\"", "\"", ")", "\n"], "logprobs": [-0.0028620492666959763, -1.311301275563892e-06, 0.0, -2.1457441107486375e-05, -0.0001081169830285944, -2.682172998902388e-05, -0.0009303532424382865, -0.45947813987731934, -0.014693263918161392, -7.152555099310121e-07, -5.125986263010418e-06, -5.9602869441732764e-05, -0.9422661066055298, -0.02824661135673523, -1.6216731071472168, -0.09524257481098175, -0.030906088650226593, -0.0021084952168166637, -0.4049036204814911], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.022082282230257988, -5.864924969500862e-05, -2.288792165927589e-05, -1.0728830375228426e-06, -4.768370445162873e-07, -0.5037763714790344], "finish_reason": "stop"}], "metrics": {"energy": 628.5238127288816, "energy_per_token": 6.285238127288816, "time": 15.058738, "time_per_token": 0.15058738}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError('req_data must be a dict')", "tokens": [" Type", "Error", "('", "req", "_", "data", " must", " be", " a", " dict", "')", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -1.517082691192627, -0.5344730019569397, -0.0020450884476304054, -0.000436925794929266, -0.6116163730621338, -0.0008157739648595452, -0.05356636643409729, -2.142216205596924, -0.06581750512123108, -0.001845919992774725], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005191417410969734, -0.0001829695247579366, -0.0001255195093108341, 0.0, -0.0022380324080586433, -0.0029337245505303144, -5.125986263010418e-06, 0.0, -0.23668687045574188, -0.08648576587438583], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00017915551143232733, -2.3841855067985307e-07, -2.4199192921514623e-05, -0.0010449193650856614, -0.00026925752172246575, -0.1839546263217926, -1.6927575416048057e-05, -1.1920928244535389e-07, -0.0015685171820223331, -5.864924969500862e-05, -0.30311712622642517, -0.000102037942269817, -0.08234080672264099, -0.0003159739135298878, -2.038458114839159e-05, -2.622600959512056e-06, 0.0, -0.00027104519540444016, -3.85038583772257e-05, -0.011895906180143356, -4.768258077092469e-05, -0.029318012297153473, -3.576278118089249e-07, -1.6689286894688848e-06, -4.529942543740617e-06, -0.0009616755996830761, -7.986990567587782e-06, -1.1920922133867862e-06, -0.00015448330668732524, -0.006620259955525398], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.0013760393485426903, -1.1920922133867862e-06, -0.00012814177898690104, -3.576272320060525e-06, -1.3351351299206726e-05, -1.2150342464447021, -3.576272320060525e-06, 0.0, -1.9192511899746023e-05, -0.007783796638250351], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)  # Replace spaces with '+'", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "  ", "#", " Replace", " spaces", " with", " '", "+'", "\n"], "logprobs": [-0.004279621876776218, -1.1920922133867862e-06, 0.0, -2.2649508537142538e-05, -9.60780744208023e-05, -2.2649508537142538e-05, -0.000846147071570158, -0.5417484641075134, -0.016977334395051003, -5.960462772236497e-07, -4.529942543740617e-06, -8.654219709569588e-05, -0.5040830969810486, -1.9327224493026733, -5.98412734689191e-05, -1.7017343044281006, -0.12696585059165955, -0.02081046998500824, -0.09068547189235687, -0.0018159341998398304, -0.2457454800605774], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.022376785054802895, -5.435795901576057e-05, -2.634490556374658e-05, -9.536738616588991e-07, -4.768370445162873e-07, -0.5421472787857056], "finish_reason": "stop"}], "metrics": {"energy": 675.5756681957248, "energy_per_token": 6.823996648441665, "time": 15.251647, "time_per_token": 0.15405704040404042}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data should be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " should", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -1.3479342460632324, -0.0019481267081573606, -0.05007822439074516, -0.1349119395017624, -0.2703566253185272, -0.0004911408759653568, -0.0021858150139451027], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005096183158457279, -0.00016127715934999287, -0.00012158608296886086, 0.0, -0.002291317330673337, -0.0029573773499578238, -5.125986263010418e-06, -1.1920928244535389e-07, -0.28204935789108276, -0.0781300812959671], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016807096835691482, -2.3841855067985307e-07, -2.5987286790041253e-05, -0.0019369428046047688, -0.0002851079625543207, -0.1667945683002472, -1.549708758830093e-05, -2.3841855067985307e-07, -0.0014041336253285408, -6.389413465512916e-05, -0.3553515374660492, -9.77468371274881e-05, -0.0944233238697052, -0.00032455421751365066, -1.549708758830093e-05, -2.0265558760002023e-06, 0.0, -0.0002374367177253589, -2.9801878554280847e-05, -0.015326112508773804, -5.173549288883805e-05, -0.0344124510884285, -5.960462772236497e-07, -1.5497195136049413e-06, -3.933898824470816e-06, -0.0010353925172239542, -7.629365427419543e-06, -1.4305104514278355e-06, -0.0001401803019689396, -0.007203084882348776], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0013185387942939997, -1.0728830375228426e-06, -0.00013481661153491586, -2.7418097943154862e-06, -1.1801649634435307e-05, -0.3718051016330719, -4.768370445162873e-07, -1.9550132492440753e-05, -0.019684912636876106], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature).replace('+', ' ')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", ".", "replace", "('", "+'", ",", " '", " '", ")", "\n"], "logprobs": [-0.0028606229461729527, -1.5497195136049413e-06, 0.0, -2.4437606043647975e-05, -9.476689592702314e-05, -2.109982233378105e-05, -0.0007976687629707158, -0.44503235816955566, -0.0117241395637393, -5.960462772236497e-07, -5.364403477869928e-06, -5.185469490243122e-05, -0.4530632495880127, -2.170422077178955, -0.003678224515169859, -0.5403883457183838, -1.4130103588104248, -7.712543447269127e-05, -1.6126246452331543, -0.023655571043491364, -0.0015278107021003962, -0.09470747411251068], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.02682085521519184, -4.434487345861271e-05, -2.8967437174287625e-05, -9.536738616588991e-07, -5.960462772236497e-07, -1.1878477334976196, -7.152555099310121e-07, -1.1920922133867862e-06, -8.344646857949556e-07, -5.960446742392378e-06, -1.8809460401535034, -0.001142087858170271], "finish_reason": "stop"}], "metrics": {"energy": 729.7467837219237, "energy_per_token": 6.820063399270316, "time": 17.170137, "time_per_token": 0.16046857009345794}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError('req_data must be a dictionary')", "tokens": [" Type", "Error", "('", "req", "_", "data", " must", " be", " a", " dictionary", "')", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -1.517082691192627, -0.5344730019569397, -0.0020450884476304054, -0.000436925794929266, -0.6116163730621338, -0.0008157739648595452, -0.05356636643409729, -0.13106589019298553, -0.040793802589178085, -0.0011582816950976849], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005191417410969734, -0.0001829695247579366, -0.0001255195093108341, 0.0, -0.0022380324080586433, -0.0029337245505303144, -5.125986263010418e-06, 0.0, -0.23668687045574188, -0.08648576587438583], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00017915551143232733, -2.3841855067985307e-07, -2.4199192921514623e-05, -0.0010449193650856614, -0.00026925752172246575, -0.1839546263217926, -1.6927575416048057e-05, -1.1920928244535389e-07, -0.0015685171820223331, -5.864924969500862e-05, -0.30311712622642517, -0.000102037942269817, -0.08234080672264099, -0.0003159739135298878, -2.038458114839159e-05, -2.622600959512056e-06, 0.0, -0.00027104519540444016, -3.85038583772257e-05, -0.011895906180143356, -4.768258077092469e-05, -0.029318012297153473, -3.576278118089249e-07, -1.6689286894688848e-06, -4.529942543740617e-06, -0.0009616755996830761, -7.986990567587782e-06, -1.1920922133867862e-06, -0.00015448330668732524, -0.006620259955525398], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.0013760393485426903, -1.1920922133867862e-06, -0.00012814177898690104, -3.576272320060525e-06, -1.3351351299206726e-05, -1.2150342464447021, -3.576272320060525e-06, 0.0, -1.9192511899746023e-05, -0.007783796638250351], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature, safe='')", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ",", " safe", "='", "')", "\n"], "logprobs": [-0.004279621876776218, -1.1920922133867862e-06, 0.0, -2.2649508537142538e-05, -9.60780744208023e-05, -2.2649508537142538e-05, -0.000846147071570158, -0.8719257712364197, -0.00045599075383506715, -0.00010871296399272978, -0.012825972400605679, -1.0728830375228426e-06, -2.4676019165781327e-05, -0.000259365770034492, -1.9678707122802734, -0.035335052758455276, -0.3622041642665863, -0.021675478667020798, -0.28860434889793396], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature"], "logprobs": [-0.021537117660045624, -4.386805812828243e-05, -2.3007127310847864e-05, -8.344646857949556e-07, -3.576278118089249e-07], "finish_reason": "stop"}], "metrics": {"energy": 584.0503047523498, "energy_per_token": 6.083857341170311, "time": 13.183172, "time_per_token": 0.13732470833333335}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data should be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " should", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -1.3479342460632324, -0.0019481267081573606, -0.05007822439074516, -0.1349119395017624, -0.2703566253185272, -0.0004911408759653568, -0.0021858150139451027], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005096183158457279, -0.00016127715934999287, -0.00012158608296886086, 0.0, -0.002291317330673337, -0.0029573773499578238, -5.125986263010418e-06, -1.1920928244535389e-07, -0.28204935789108276, -0.0781300812959671], "finish_reason": "stop"}, {"text": " hmac.new(", "tokens": [" h", "mac", ".", "new", "(", "\n"], "logprobs": [-0.00016807096835691482, -2.3841855067985307e-07, -2.5987286790041253e-05, -0.0019369428046047688, -0.0002851079625543207, -2.5849502086639404], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0017447738209739327, -5.960462772236497e-07, -0.00014149141497910023, -3.933898824470816e-06, -1.3470558769768104e-05, -0.28579312562942505, -5.960462772236497e-07, -1.7881233361549675e-05, -0.009511156938970089], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature, safe='')  # '+' will replace spaces by default", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ",", " safe", "='", "')", "  ", "#", " '", "+'", " will", " replace", " spaces", " by", " default", "\n"], "logprobs": [-0.0028046341612935066, -1.1920922133867862e-06, 0.0, -2.288792165927589e-05, -0.00011646069469861686, -2.4914430468925275e-05, -0.0007516896002925932, -0.3893710672855377, -0.009454713203012943, -7.152555099310121e-07, -6.079655122448457e-06, -7.235741941258311e-05, -1.1100172996520996, -0.029513521119952202, -0.21095775067806244, -0.04512208327651024, -1.4857516288757324, -0.00011216964776394889, -4.578738212585449, -0.31636568903923035, -1.7506862878799438, -0.8902918100357056, -0.2053552120923996, -3.1026201248168945, -0.1182050034403801, -0.07148101180791855], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.022463392466306686, -5.936446541454643e-05, -1.9788545614574105e-05, -1.1920922133867862e-06, -4.768370445162873e-07, -0.5780375003814697], "finish_reason": "stop"}], "metrics": {"energy": 592.0333438301088, "energy_per_token": 7.309053627532208, "time": 15.087189, "time_per_token": 0.1862615925925926}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"Request data should be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "Request", " data", " should", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -3.0824196338653564, -0.005616242066025734, -1.3214261531829834, -0.0020240312442183495, -0.05419203266501427, -0.03903680294752121, -0.6562628149986267, -0.0005099665140733123, -0.0016381428577005863], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.004985520150512457, -0.00011383838864276186, -0.00011205045302631333, 0.0, -0.0018245016690343618, -0.002774439286440611, -3.814689989667386e-06, 0.0, -0.23385977745056152, -0.08058729022741318], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), json_req_data.encode('utf-8'), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016175392374861985, -2.3841855067985307e-07, -2.8132995794294402e-05, -0.0011947167804464698, -0.00028880240279249847, -0.15234258770942688, -1.680836794548668e-05, -2.3841855067985307e-07, -0.0015689932042732835, -5.531158240046352e-05, -1.1365480422973633, -0.008113875053822994, -0.008639458566904068, -7.510157047363464e-06, -4.6967357775429264e-05, -0.00011038171214750037, -0.13668668270111084, -0.00030429501202888787, -1.8358061424805783e-05, -1.1920922133867862e-06, 0.0, -0.0003387354372534901, -4.95898348162882e-05, -0.00330901425331831, -0.0003143055073451251, -0.00020776021119672805, -9.894321920000948e-06, -0.00023409964342135936, -0.00011073929636040702, -0.029210461303591728, -2.3841855067985307e-07, -1.0728830375228426e-06, -5.006777428206988e-06, -0.0009681067313067615, -1.7046782886609435e-05, -7.152555099310121e-07, -0.0002138386043952778, -0.008890685625374317], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0017872564494609833, -7.152555099310121e-07, -0.00012170527770649642, -3.6954811548639555e-06, -1.1205610462639015e-05, -0.34912770986557007, -5.960462772236497e-07, -1.811964830267243e-05, -0.017414990812540054], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.0028654965572059155, -1.0728830375228426e-06, 0.0, -2.2291887944447808e-05, -0.00011896379146492109, -1.9311717551317997e-05, -0.0010383697226643562, -0.45109865069389343, -0.010691269300878048, -5.960462772236497e-07, -5.364403477869928e-06, -5.054346183896996e-05, -0.46126410365104675, -0.3444162905216217], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.03274849057197571, -5.6265202147187665e-05, -2.312633478140924e-05, -9.536738616588991e-07, -5.960462772236497e-07, -0.5093872547149658], "finish_reason": "stop"}], "metrics": {"energy": 690.9029666767119, "energy_per_token": 6.909029666767119, "time": 17.32057, "time_per_token": 0.1732057}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -0.3612208068370819, -0.0005466635921038687, -0.028508255258202553, -0.07690059393644333, -0.11150994896888733, -0.00040070133400149643, -0.0016074366867542267], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005050994455814362, -0.00012170527770649642, -9.846202738117427e-05, 0.0, -0.0014949585311114788, -0.0022400543093681335, -4.768360213347478e-06, -1.1920928244535389e-07, -0.2720021903514862, -0.09269023686647415], "finish_reason": "stop"}, {"text": " hmac.new(key=secret_key.encode(), msg=json_req_data.encode(), digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "key", "=", "secret", "_", "key", ".", "encode", "()", ",", " msg", "=", "json", "_", "req", "_", "data", ".", "encode", "()", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016342257731594145, -1.1920928244535389e-07, -2.682172998902388e-05, -0.0012355559738352895, -0.00025042734341695905, -3.1381189823150635, -0.004567665979266167, -0.11270743608474731, -1.2636104656849056e-05, 0.0, -0.0032258399296551943, -4.9470632802695036e-05, -0.4761534035205841, -0.00013910756388213485, -0.021120987832546234, -0.00013481661153491586, -0.0073801265098154545, -0.001512932125478983, -5.364403477869928e-06, -3.6954811548639555e-06, 0.0, -0.004971642047166824, -7.56950321374461e-05, -0.023093441501259804, -7.116541382856667e-05, -0.004061664454638958, -1.549708758830093e-05, -0.0040998938493430614, -0.0005009111482650042, -3.576278118089249e-07, -7.152555099310121e-07, -6.437280717364047e-06, -0.0009022455778904259, -1.2159273865108844e-05, -7.152555099310121e-07, -0.00014709345123264939, -0.0074166906997561455], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.0017028844449669123, -8.344646857949556e-07, -0.000125281119835563, -3.933898824470816e-06, -9.894321920000948e-06, -1.3147337436676025, -3.6954811548639555e-06, 0.0, -2.3483953555114567e-05, -0.007318118121474981], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)  # Use quote_plus to replace spaces with '+'", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "  ", "#", " Use", " quote", "_", "plus", " to", " replace", " spaces", " with", " '", "+'", "\n"], "logprobs": [-0.004052403848618269, -1.1920922133867862e-06, 0.0, -2.2172682292875834e-05, -0.00010275312524754554, -2.372236667724792e-05, -0.0011426832061260939, -0.877762496471405, -0.0004862556525040418, -9.202533692587167e-05, -0.017861003056168556, -1.311301275563892e-06, -2.109982233378105e-05, -0.00021610308613162488, -0.16664250195026398, -1.7748420238494873, -5.2569914259947836e-05, -0.6984784007072449, -0.16134865581989288, -0.008806319907307625, -0.00019905969384126365, -0.4110433757305145, -0.7393986582756042, -0.030962606891989708, -0.013021083548665047, -0.03466776758432388, -0.000596107158344239, -0.018536318093538284], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.02317754179239273, -4.0649541915627196e-05, -2.3841574147809297e-05, -9.536738616588991e-07, -4.768370445162873e-07, -0.4717146158218384], "finish_reason": "stop"}], "metrics": {"energy": 691.9245839729309, "energy_per_token": 6.016735512808095, "time": 16.310684, "time_per_token": 0.14183203478260867}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -0.3612208068370819, -0.0005466635921038687, -0.028508255258202553, -0.07690059393644333, -0.11150994896888733, -0.00040070133400149643, -0.0016074366867542267], "finish_reason": "stop"}, {"text": " json.dumps(req_data, separators=(\",\", \":\"), sort_keys=True)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ",", " separ", "ators", "=(", "\"", ",", "\"", ",", " ", "\":\"", ")", ",", " sort", "_", "keys", "=", "True", ")", "\n"], "logprobs": [-0.005050994455814362, -0.00012170527770649642, -9.846202738117427e-05, 0.0, -0.0014949585311114788, -0.0022400543093681335, -4.768360213347478e-06, -1.1920928244535389e-07, -1.4360504150390625, -1.2515807151794434, -2.992108420585282e-05, -0.9172554016113281, -0.03989982232451439, -0.0026343900244683027, -0.0013813963159918785, -5.3881147323409095e-05, -0.0067113228142261505, -0.001167211914435029, -1.7123929262161255, -0.0007340597221627831, -0.6738501191139221, -1.6689286894688848e-06, -8.344646857949556e-07, -0.0011561383726075292, -0.003544241189956665, -0.021047336980700493, -0.11820182204246521], "finish_reason": "stop"}, {"text": " hmac.new(", "tokens": [" h", "mac", ".", "new", "(", "\n"], "logprobs": [-0.0001728385395836085, -2.3841855067985307e-07, -2.932505594799295e-05, -0.0016169581795111299, -0.0002525725867599249, -2.4672951698303223], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0017484629061073065, -9.536738616588991e-07, -0.0001938155182870105, -3.099436753473128e-06, -9.775113539944869e-06, -0.37369951605796814, -7.152555099310121e-07, -2.0503786799963564e-05, -0.01583865098655224], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.0028047531377524137, -9.536738616588991e-07, 0.0, -2.539125671319198e-05, -0.00010918975021922961, -2.0146166207268834e-05, -0.000947622349485755, -0.8968439102172852, -0.0004403813509270549, -0.00011324241495458409, -0.011375803500413895, -1.0728830375228426e-06, -2.1576648578047752e-05, -0.00041416651220060885, -0.13891081511974335, -0.3262358605861664], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.020040765404701233, -5.018585216021165e-05, -2.4914430468925275e-05, -1.0728830375228426e-06, -4.768370445162873e-07, -1.2381415367126465, -9.536738616588991e-07, -1.4305104514278355e-06, -9.536738616588991e-07, -2.622600959512056e-06, -0.14178922772407532], "finish_reason": "stop"}], "metrics": {"energy": 634.0552300453187, "energy_per_token": 6.817798172530309, "time": 15.711422, "time_per_token": 0.16894002150537635}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -0.3612208068370819, -0.0005466635921038687, -0.028508255258202553, -0.07690059393644333, -0.11150994896888733, -0.00040070133400149643, -0.0016074366867542267], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005050994455814362, -0.00012170527770649642, -9.846202738117427e-05, 0.0, -0.0014949585311114788, -0.0022400543093681335, -4.768360213347478e-06, -1.1920928244535389e-07, -0.2720021903514862, -0.09269023686647415], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), msg=json_req_data.encode('utf-8'), digestmod=hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " msg", "=", "json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " digest", "mod", "=", "hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016342257731594145, -1.1920928244535389e-07, -2.682172998902388e-05, -0.0012355559738352895, -0.00025042734341695905, -0.170887291431427, -1.8715683836489916e-05, -2.3841855067985307e-07, -0.001958834705874324, -5.817244164063595e-05, -1.243950605392456, -0.007251609116792679, -0.00933980755507946, -9.298280929215252e-06, -4.60137271147687e-05, -9.762764238985255e-05, -2.700038194656372, -0.0007538337376900017, -0.0035251162480562925, -0.0013387774815782905, -1.1086402082582936e-05, -7.271740287251305e-06, -1.1920928244535389e-07, -0.0070610507391393185, -6.460934673668817e-05, -0.0029929152224212885, -0.00031323294388130307, -0.0002406545972917229, -9.894321920000948e-06, -5.352353764465079e-05, -7.4741430580616e-05, -0.009417987428605556, -0.00016139635408762842, -0.003373766550794244, -0.00015507926582358778, -2.3841855067985307e-07, -5.960462772236497e-07, -6.318072337307967e-06, -0.0011298231547698379, -1.4305012882687151e-05, -4.768370445162873e-07, -0.00012754580529872328, -0.006677219644188881], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.001718117156997323, -5.960462772236497e-07, -0.00014745102089364082, -3.4570634852570947e-06, -8.702239938429557e-06, -1.1212778091430664, -2.7418097943154862e-06, 0.0, -2.13382354559144e-05, -0.008853230625391006], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.0033839840907603502, -1.0728830375228426e-06, 0.0, -1.883488948806189e-05, -0.0001833270798670128, -2.038458114839159e-05, -0.000835903687402606, -1.1363009214401245, -0.0005570290377363563, -9.893881360767409e-05, -0.014106561429798603, -1.0728830375228426e-06, -2.777537883957848e-05, -0.0001931004080688581, -0.17493489384651184, -0.3245256841182709], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature"], "logprobs": [-0.0231696218252182, -5.6980417866725475e-05, -3.4689302992774174e-05, -1.0728830375228426e-06, -4.768370445162873e-07], "finish_reason": "stop"}], "metrics": {"energy": 713.5467833061216, "energy_per_token": 6.606914660241866, "time": 17.13817, "time_per_token": 0.15868675925925924}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError('req_data must be a dictionary')", "tokens": [" Type", "Error", "('", "req", "_", "data", " must", " be", " a", " dictionary", "')", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -1.517082691192627, -0.5344730019569397, -0.0020450884476304054, -0.000436925794929266, -0.6116163730621338, -0.0008157739648595452, -0.05356636643409729, -0.13106589019298553, -0.040793802589178085, -0.0011582816950976849], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005191417410969734, -0.0001829695247579366, -0.0001255195093108341, 0.0, -0.0022380324080586433, -0.0029337245505303144, -5.125986263010418e-06, 0.0, -0.23668687045574188, -0.08648576587438583], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00017915551143232733, -2.3841855067985307e-07, -2.4199192921514623e-05, -0.0010449193650856614, -0.00026925752172246575, -0.1839546263217926, -1.6927575416048057e-05, -1.1920928244535389e-07, -0.0015685171820223331, -5.864924969500862e-05, -0.30311712622642517, -0.000102037942269817, -0.08234080672264099, -0.0003159739135298878, -2.038458114839159e-05, -2.622600959512056e-06, 0.0, -0.00027104519540444016, -3.85038583772257e-05, -0.011895906180143356, -4.768258077092469e-05, -0.029318012297153473, -3.576278118089249e-07, -1.6689286894688848e-06, -4.529942543740617e-06, -0.0009616755996830761, -7.986990567587782e-06, -1.1920922133867862e-06, -0.00015448330668732524, -0.006620259955525398], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0013760393485426903, -1.1920922133867862e-06, -0.00012814177898690104, -3.576272320060525e-06, -1.3351351299206726e-05, -0.352283239364624, -8.344646857949556e-07, -2.13382354559144e-05, -0.017713095992803574], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.002843267982825637, -1.311301275563892e-06, 0.0, -2.396077979938127e-05, -0.00015448330668732524, -1.9788545614574105e-05, -0.0009514334378764033, -0.45374542474746704, -0.011456888169050217, -5.960462772236497e-07, -4.768360213347478e-06, -6.794698856538162e-05, -0.5094010233879089, -0.30035534501075745], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.021421609446406364, -4.827859811484814e-05, -2.5629668016335927e-05, -9.536738616588991e-07, -4.768370445162873e-07, -1.3932075500488281, -8.344646857949556e-07, -1.5497195136049413e-06, -9.536738616588991e-07, -2.7418097943154862e-06, -0.14682736992835999], "finish_reason": "stop"}], "metrics": {"energy": 636.2856175746921, "energy_per_token": 6.627975183069709, "time": 15.479368, "time_per_token": 0.16124341666666667}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"req_data must be a dictionary\")", "tokens": [" Type", "Error", "(", "\"", "req", "_", "data", " must", " be", " a", " dictionary", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -0.7575696110725403, -0.0008797351038083434, -0.0002108589978888631, -0.3612208068370819, -0.0005466635921038687, -0.028508255258202553, -0.07690059393644333, -0.11150994896888733, -0.00040070133400149643, -0.0016074366867542267], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005050994455814362, -0.00012170527770649642, -9.846202738117427e-05, 0.0, -0.0014949585311114788, -0.0022400543093681335, -4.768360213347478e-06, -1.1920928244535389e-07, -0.2720021903514862, -0.09269023686647415], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), json_req_data.encode('utf-8'), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016342257731594145, -1.1920928244535389e-07, -2.682172998902388e-05, -0.0012355559738352895, -0.00025042734341695905, -0.170887291431427, -1.8715683836489916e-05, -2.3841855067985307e-07, -0.001958834705874324, -5.817244164063595e-05, -1.243950605392456, -0.007251609116792679, -0.00933980755507946, -9.298280929215252e-06, -4.60137271147687e-05, -9.762764238985255e-05, -0.12361835688352585, -0.00039664984797127545, -2.2649508537142538e-05, -1.311301275563892e-06, 0.0, -0.00032824851223267615, -5.590759246842936e-05, -0.0032920234370976686, -0.00039426659350283444, -0.0002044230350293219, -1.0609570381348021e-05, -0.00021050144277978688, -8.5588610090781e-05, -0.028811411932110786, -3.576278118089249e-07, -1.1920922133867862e-06, -4.0531076592742465e-06, -0.0009422629955224693, -1.2397689715726301e-05, -9.536738616588991e-07, -0.00021586472576018423, -0.009530168026685715], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.001718117156997323, -5.960462772236497e-07, -0.00014745102089364082, -3.4570634852570947e-06, -8.702239938429557e-06, -1.1212778091430664, -2.7418097943154862e-06, 0.0, -2.13382354559144e-05, -0.008853230625391006], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.0033839840907603502, -1.0728830375228426e-06, 0.0, -1.883488948806189e-05, -0.0001833270798670128, -2.038458114839159e-05, -0.000835903687402606, -0.3873346745967865, -0.011784108355641365, -5.960462772236497e-07, -4.410734163684538e-06, -6.210611172718927e-05, -0.4491855800151825, -0.35546785593032837], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.021503517404198647, -5.674201020156033e-05, -2.777537883957848e-05, -9.536738616588991e-07, -4.768370445162873e-07, -0.5514838695526123], "finish_reason": "stop"}], "metrics": {"energy": 637.843683200836, "energy_per_token": 6.253369443145451, "time": 15.489064, "time_per_token": 0.151853568627451}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError('`req_data` must be a dictionary')", "tokens": [" Type", "Error", "('", "`", "req", "_", "data", "`", " must", " be", " a", " dictionary", "')", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -1.517082691192627, -2.1987624168395996, -0.017085975036025047, -0.000895933189895004, -0.0006195771275088191, -0.0012384133879095316, -0.5179685950279236, -0.00135389668866992, -0.039287272840738297, -0.1162233054637909, -0.278959184885025, -0.0016686100279912353], "finish_reason": "stop"}, {"text": " json.dumps(req_data, separators=(\",\", \":\"))", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ",", " separ", "ators", "=(", "\"", ",", "\"", ",", " ", "\":\"", "))", "\n"], "logprobs": [-0.005191417410969734, -0.0001829695247579366, -0.0001255195093108341, 0.0, -0.0022380324080586433, -0.0029337245505303144, -5.125986263010418e-06, 0.0, -1.5585137605667114, -1.4144432544708252, -3.504691630951129e-05, -0.925751805305481, -0.06185399368405342, -0.0022519484627991915, -0.0011027929140254855, -6.425174069590867e-05, -0.0058869547210633755, -0.0009883524617180228, -0.2588633596897125, -0.09220051020383835], "finish_reason": "stop"}, {"text": " hmac.new(", "tokens": [" h", "mac", ".", "new", "(", "\n"], "logprobs": [-0.00014172980445437133, -2.3841855067985307e-07, -2.95634672511369e-05, -0.0008344743982888758, -0.00024434918304905295, -2.383984088897705], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.0017375147435814142, -7.152555099310121e-07, -0.00015758226800244302, -3.6954811548639555e-06, -1.0132738680113107e-05, -1.2119816541671753, -2.622600959512056e-06, 0.0, -2.455681169521995e-05, -0.0076744952239096165], "finish_reason": "stop"}, {"text": " urllib.parse.quote_plus(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "_", "plus", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.003643067553639412, -1.5497195136049413e-06, 0.0, -2.1457441107486375e-05, -9.846202738117427e-05, -2.2649508537142538e-05, -0.0007463291985914111, -1.008597493171692, -0.0007683662115596235, -0.00010656742961145937, -0.011356592178344727, -1.1920922133867862e-06, -1.9550132492440753e-05, -0.00023338454775512218, -0.18406371772289276, -0.3107120990753174], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.021868636831641197, -4.458328112377785e-05, -2.95634672511369e-05, -1.0728830375228426e-06, -4.768370445162873e-07, -0.5182285904884338], "finish_reason": "stop"}], "metrics": {"energy": 580.8135894412994, "energy_per_token": 7.083092554162188, "time": 13.623316, "time_per_token": 0.166138}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(\"`req_data` must be a dictionary.\")", "tokens": [" Type", "Error", "(", "\"", "`", "req", "_", "data", "`", " must", " be", " a", " dictionary", ".", "\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -0.1572282463312149, -1.8697445392608643, -0.014700899831950665, -0.0009945451747626066, -0.00040999590419232845, -0.001540784491226077, -0.37545692920684814, -0.0008056493825279176, -0.03279982879757881, -0.06730925291776657, -0.7704581618309021, -0.002967718057334423, -0.0004102342063561082, -0.0019111240981146693], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.004985520150512457, -0.00011383838864276186, -0.00011205045302631333, 0.0, -0.0018245016690343618, -0.002774439286440611, -3.814689989667386e-06, 0.0, -0.23385977745056152, -0.08058729022741318], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016175392374861985, -2.3841855067985307e-07, -2.8132995794294402e-05, -0.0011947167804464698, -0.00028880240279249847, -0.15234258770942688, -1.680836794548668e-05, -2.3841855067985307e-07, -0.0015689932042732835, -5.531158240046352e-05, -0.40832608938217163, -8.642300235806033e-05, -0.09306470304727554, -0.0003232433518860489, -1.7881233361549675e-05, -2.0265558760002023e-06, 0.0, -0.00029118589009158313, -2.932505594799295e-05, -0.01179282646626234, -5.8887653722194955e-05, -0.02604774944484234, -3.576278118089249e-07, -1.6689286894688848e-06, -4.172316494077677e-06, -0.0008898589294403791, -8.940656698541716e-06, -9.536738616588991e-07, -0.0001382732152706012, -0.005262688733637333], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.001555900671519339, -1.311301275563892e-06, -0.0001746263587847352, -3.099436753473128e-06, -1.0847986231965479e-05, -0.3458002209663391, -7.152555099310121e-07, -1.9550132492440753e-05, -0.02053816244006157], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)  # URL encode the signature", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "  ", "#", " URL", " encode", " the", " signature", "\n"], "logprobs": [-0.0028620492666959763, -1.311301275563892e-06, 0.0, -2.1457441107486375e-05, -0.0001081169830285944, -2.682172998902388e-05, -0.0009303532424382865, -0.45947813987731934, -0.014693263918161392, -7.152555099310121e-07, -5.125986263010418e-06, -5.9602869441732764e-05, -0.5163685083389282, -1.8337483406066895, -6.508615479106084e-05, -2.0537285804748535, -0.17466755211353302, -0.4027307629585266, -0.316390722990036, -0.07410293072462082], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.022082282230257988, -5.864924969500862e-05, -2.288792165927589e-05, -1.0728830375228426e-06, -4.768370445162873e-07, -0.5037763714790344], "finish_reason": "stop"}], "metrics": {"energy": 599.2108275470732, "energy_per_token": 5.874615956343855, "time": 14.837661, "time_per_token": 0.14546726470588237}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError('req_data must be a dictionary')", "tokens": [" Type", "Error", "('", "req", "_", "data", " must", " be", " a", " dictionary", "')", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -1.517082691192627, -0.5344730019569397, -0.0020450884476304054, -0.000436925794929266, -0.6116163730621338, -0.0008157739648595452, -0.05356636643409729, -0.13106589019298553, -0.040793802589178085, -0.0011582816950976849], "finish_reason": "stop"}, {"text": " json.dumps(req_data)", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ")", "\n"], "logprobs": [-0.005191417410969734, -0.0001829695247579366, -0.0001255195093108341, 0.0, -0.0022380324080586433, -0.0029337245505303144, -5.125986263010418e-06, 0.0, -0.23668687045574188, -0.08648576587438583], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode(), json_req_data.encode(), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "()", ",", " json", "_", "req", "_", "data", ".", "encode", "()", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00017915551143232733, -2.3841855067985307e-07, -2.4199192921514623e-05, -0.0010449193650856614, -0.00026925752172246575, -0.1839546263217926, -1.6927575416048057e-05, -1.1920928244535389e-07, -0.0015685171820223331, -5.864924969500862e-05, -0.30311712622642517, -0.000102037942269817, -0.08234080672264099, -0.0003159739135298878, -2.038458114839159e-05, -2.622600959512056e-06, 0.0, -0.00027104519540444016, -3.85038583772257e-05, -0.011895906180143356, -4.768258077092469e-05, -0.029318012297153473, -3.576278118089249e-07, -1.6689286894688848e-06, -4.529942543740617e-06, -0.0009616755996830761, -7.986990567587782e-06, -1.1920922133867862e-06, -0.00015448330668732524, -0.006620259955525398], "finish_reason": "stop"}, {"text": " hmac_obj.hexdigest()", "tokens": [" h", "mac", "_", "obj", ".", "hex", "dig", "est", "()", "\n"], "logprobs": [-0.0013760393485426903, -1.1920922133867862e-06, -0.00012814177898690104, -3.576272320060525e-06, -1.3351351299206726e-05, -1.2150342464447021, -3.576272320060525e-06, 0.0, -1.9192511899746023e-05, -0.007783796638250351], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature)", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ")", "\n"], "logprobs": [-0.004279621876776218, -1.1920922133867862e-06, 0.0, -2.2649508537142538e-05, -9.60780744208023e-05, -2.2649508537142538e-05, -0.000846147071570158, -0.5417484641075134, -0.016977334395051003, -5.960462772236497e-07, -4.529942543740617e-06, -8.654219709569588e-05, -0.5040830969810486, -0.32106244564056396], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature"], "logprobs": [-0.022376785054802895, -5.435795901576057e-05, -2.634490556374658e-05, -9.536738616588991e-07, -4.768370445162873e-07], "finish_reason": "stop"}], "metrics": {"energy": 548.923161195755, "energy_per_token": 6.032122650502803, "time": 12.557375, "time_per_token": 0.13799313186813186}}
{"outputs": [{"text": " not isinstance(req_data, dict):", "tokens": [" not", " isinstance", "(", "req", "_", "data", ",", " dict", "):", "\n"], "logprobs": [-0.05417430400848389, -0.0036368912551552057, -4.768258077092469e-05, -0.0016584941186010838, -2.074220174108632e-05, -9.894321920000948e-06, -8.070142939686775e-05, -0.003796870354562998, -0.0023819427005946636, -0.006663128267973661], "finish_reason": "stop"}, {"text": " TypeError(f\"req_data must be a dictionary, not {type(req_data).__name__}\")", "tokens": [" Type", "Error", "(", "f", "\"", "req", "_", "data", " must", " be", " a", " dictionary", ",", " not", " {", "type", "(", "req", "_", "data", ")", ".", "__", "name", "__", "}\"", ")", "\n"], "logprobs": [-0.005491409916430712, -2.3841830625315197e-06, -0.2839246094226837, -2.1977365016937256, -0.17703032493591309, -1.2378556728363037, -0.0010219357209280133, -0.0002834395272657275, -0.6011137366294861, -0.001505671301856637, -0.08440957218408585, -0.16421405971050262, -0.172062948346138, -0.6770020723342896, -0.05212095007300377, -0.06451153010129929, -0.00019226610311307013, -0.001364372787065804, -1.0251946150674485e-05, -3.4570634852570947e-06, -2.414487600326538, -0.0020663831382989883, -0.00016759421851020306, -0.0007876630988903344, -4.9470632802695036e-05, -0.12291976809501648, -0.00036090059438720345, -0.0014687713701277971], "finish_reason": "stop"}, {"text": " json.dumps(req_data, sort_keys=True, separators=(',', ':'))", "tokens": [" json", ".", "d", "umps", "(", "req", "_", "data", ",", " sort", "_", "keys", "=", "True", ",", " separ", "ators", "=", "('", ",", "'", ",", " ':", "'))", "\n"], "logprobs": [-0.004790970589965582, -0.00013207517622504383, -8.987976616481319e-05, 0.0, -0.001992385368794203, -0.002021057065576315, -4.410734163684538e-06, -1.1920928244535389e-07, -1.3842805624008179, -0.48045143485069275, -4.768360213347478e-06, -8.344646857949556e-07, -0.0019219514215365052, -0.005354823544621468, -0.4070536196231842, -0.3046087622642517, -2.2053474822314456e-05, -0.359037309885025, -0.0005362979718483984, -0.0005706112715415657, -0.002388602588325739, -7.390703103737906e-05, -0.013099917210638523, -0.06804176419973373, -0.03426743298768997], "finish_reason": "stop"}, {"text": " hmac.new(secret_key.encode('utf-8'), json_req_data.encode('utf-8'), hashlib.sha256)", "tokens": [" h", "mac", ".", "new", "(", "secret", "_", "key", ".", "encode", "('", "utf", "-", "8", "')", ",", " json", "_", "req", "_", "data", ".", "encode", "('", "utf", "-", "8", "')", ",", " hash", "lib", ".", "sha", "2", "5", "6", ")", "\n"], "logprobs": [-0.00016306500765495002, -2.3841855067985307e-07, -2.47952248173533e-05, -0.0014230611268430948, -0.00025519452174194157, -0.180794358253479, -1.6569954823353328e-05, -2.3841855067985307e-07, -0.0014207994099706411, -5.2569914259947836e-05, -1.2847439050674438, -0.0084703229367733, -0.009119878523051739, -1.07287787614041e-05, -4.2676016164477915e-05, -8.880697714630514e-05, -0.11084958165884018, -0.000433112756581977, -3.0278701160568744e-05, -1.1920922133867862e-06, 0.0, -0.00039188333903439343, -6.222531374078244e-05, -0.003052221145480871, -0.0002790300059132278, -0.00021026308240834624, -9.417489309271332e-06, -0.0002338612830499187, -0.00011431517486926168, -0.02321830950677395, -2.3841855067985307e-07, -1.311301275563892e-06, -3.4570634852570947e-06, -0.000985375139862299, -1.490105023549404e-05, -7.152555099310121e-07, -0.00024863966973498464, -0.011394896544516087], "finish_reason": "stop"}, {"text": " hmac_obj.digest()", "tokens": [" h", "mac", "_", "obj", ".", "dig", "est", "()", "\n"], "logprobs": [-0.0016986002447083592, -9.536738616588991e-07, -0.00015627116954419762, -3.814689989667386e-06, -1.07287787614041e-05, -0.2854696810245514, -5.960462772236497e-07, -1.966933996300213e-05, -0.015811897814273834], "finish_reason": "stop"}, {"text": " urllib.parse.quote(hmac_signature, safe='')  # safe='' ensures everything is encoded", "tokens": [" ur", "ll", "ib", ".", "parse", ".", "quote", "(", "h", "mac", "_", "signature", ",", " safe", "='", "')", "  ", "#", " safe", "=", "''", " ensures", " everything", " is", " encoded", "\n"], "logprobs": [-0.0028360167052596807, -1.0728830375228426e-06, 0.0, -2.0265373677830212e-05, -6.997340824455023e-05, -2.396077979938127e-05, -0.0011541141429916024, -0.5038103461265564, -0.013629237189888954, -5.960462772236497e-07, -4.172316494077677e-06, -7.033100700937212e-05, -0.9655698537826538, -0.030045446008443832, -0.23434773087501526, -0.05263827368617058, -1.6380630731582642, -9.846202738117427e-05, -1.6017639636993408, -0.18176274001598358, -0.010372893884778023, -1.578948974609375, -3.6162023544311523, -0.19237369298934937, -0.1910325139760971, -0.1427067220211029], "finish_reason": "stop"}, {"text": " url_encoded_signature", "tokens": [" url", "_", "encoded", "_", "signature", "\n"], "logprobs": [-0.023697249591350555, -6.305972783593461e-05, -2.455681169521995e-05, -1.0728830375228426e-06, -4.768370445162873e-07, -0.4788125157356262], "finish_reason": "stop"}], "metrics": {"energy": 828.6771089000702, "energy_per_token": 5.835754288028663, "time": 20.435148, "time_per_token": 0.1439094929577465}}
