{"outputs": [{"text": " re.split('[.!?]', text)", "tokens": [" re", ".", "split", "('", "[", ".", "!", "?", "]", "'", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.8906705379486084, -0.7847096920013428, -0.3515763580799103, -1.4452687501907349, -0.012910940684378147, -0.48814183473587036, -0.068093441426754, -0.006447584833949804, -0.1304512768983841, -0.06205231696367264, -0.15031279623508453], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, start=1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " start", "=", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -0.41565075516700745, -0.010401562787592411, -0.0028347091283649206, -0.0001479277852922678, -0.0032234634272754192], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -0.1601160317659378, -0.0665273517370224, -0.006713928189128637], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -0.1621892899274826, -0.0033734100870788097], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0038443722296506166, -0.0017651228699833155, -0.00315644359216094, -0.0007599088130518794, -0.002636886900290847], "finish_reason": "stop"}, {"text": " {k: v for k, v in sentence_counts.items() if v != 0}", "tokens": [" {", "k", ":", " v", " for", " k", ",", " v", " in", " sentence", "_", "counts", ".", "items", "()", " if", " v", " ", "!", "=", " ", "0", "}", "\n"], "logprobs": [-1.0500363111495972, -0.7853701710700989, -0.010157205164432526, -0.16769304871559143, -0.0014152044896036386, -0.0032597046811133623, -0.0012317459331825376, -0.0015925593907013535, -3.1709168979432434e-05, -0.8798337578773499, -1.5139465176616795e-05, -2.2291887944447808e-05, -0.0058836364187300205, -0.00030012393835932016, -0.0251302532851696, -0.0013102050870656967, -0.005804705899208784, -1.3949640989303589, -3.576278118089249e-07, -3.814689989667386e-06, -0.005174695514142513, -0.007235158234834671, -0.0028715587686747313, -0.02125333808362484], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.00496333884075284, -5.8053239627042785e-05, -9.524368942948058e-05, -0.720903217792511, -1.4305012882687151e-05, -4.172316494077677e-06, -4.410734163684538e-06, -3.766942609217949e-05, -0.1363871693611145], "finish_reason": "stop"}], "metrics": {"energy": 464.9263013820649, "energy_per_token": 5.165847793134054, "time": 11.552081, "time_per_token": 0.12835645555555555}}
{"outputs": [{"text": " re.sub(r'([.?!][^\\s])', r'\\1 ', text).split(\".\")", "tokens": [" re", ".", "sub", "(", "r", "'", "([", ".", "?", "!", "][", "^\\", "s", "])", "'", ",", " r", "'\\", "1", " '", ",", " text", ")", ".", "split", "(", "\"", ".", "\"", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -2.1510465145111084, -0.2022978961467743, -0.21221020817756653, -0.6971430778503418, -0.7035320997238159, -0.48190224170684814, -1.2252590656280518, -0.016809837892651558, -2.286306858062744, -2.03761625289917, -0.6770460605621338, -0.38617074489593506, -0.00704021705314517, -0.005378063768148422, -0.04500254616141319, -0.07714296877384186, -0.0017689309315755963, -0.01234014704823494, -0.002074115676805377, -0.05128664895892143, -0.025915103033185005, -0.19481797516345978, -0.09703854471445084, -1.7943165302276611, -0.044332556426525116, -0.5230717062950134, -0.15386828780174255, -0.02024475485086441, -0.22035427391529083], "finish_reason": "stop"}, {"text": " [len([word for word in sentence.split(\" \") if word not in STOPWORDS and word != \"\"]) for sentence in sentences]", "tokens": [" [", "len", "([", "word", " for", " word", " in", " sentence", ".", "split", "(", "\"", " \"", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " word", " ", "!", "=", " \"", "\"", "])", " for", " sentence", " in", " sentences", "]", "\n"], "logprobs": [-3.3377890586853027, -0.46105512976646423, -0.8518666625022888, -0.282498836517334, -0.012142548337578773, -0.00040546778473071754, -0.0005492847412824631, -0.05739205703139305, -0.003901965217664838, -0.010758021846413612, -1.8612408638000488, -0.021690642461180687, -0.0006839081761427224, -0.0026664913166314363, -0.011446870863437653, -0.01587807387113571, -0.15646080672740936, -0.0007358465809375048, -0.0029343189671635628, -5.602820692729438e-06, -6.007967749610543e-05, -1.9073468138230965e-06, -1.9073468138230965e-06, -3.0404586791992188, -0.10534446686506271, -0.38975203037261963, -0.0018299752846360207, -0.0006865289760753512, -0.21341650187969208, -0.03947339206933975, -0.011206541210412979, -0.019329750910401344, -0.004361758939921856, -0.001650639227591455, -0.0055253165774047375, -0.43962740898132324, -0.008742627687752247], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -0.1601160317659378, -0.0665273517370224, -0.006713928189128637], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -0.1621892899274826, -0.0033734100870788097], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0038443722296506166, -0.0017651228699833155, -0.00315644359216094, -0.0007599088130518794, -0.002636886900290847], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.5975254774093628, -0.00011944057769142091, -0.023756038397550583, -0.006020861677825451, -0.005418851040303707, -3.2186455882765586e-06, -3.8742269680369645e-05, -0.04638191685080528, -0.011473151855170727], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "\n"], "logprobs": [-0.004048604518175125, -5.674201020156033e-05, -0.00011622230522334576, -1.0781185626983643], "finish_reason": "stop"}], "metrics": {"energy": 525.3948376979828, "energy_per_token": 4.452498624559176, "time": 13.261482, "time_per_token": 0.1123854406779661}}
{"outputs": [{"text": " re.split(r'\\.\\s', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", ".", "\\", "s", "'", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -0.210494264960289, -1.9470207691192627, -0.06729978322982788, -0.4042731821537018, -0.023621806874871254, -1.428868293762207, -0.005601661279797554, -0.11073017120361328, -0.041810352355241776, -0.18195714056491852], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, start=1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " start", "=", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -0.41565075516700745, -0.010401562787592411, -0.0028347091283649206, -0.0001479277852922678, -0.0032234634272754192], "finish_reason": "stop"}, {"text": " not sentence:", "tokens": [" not", " sentence", ":", "\n"], "logprobs": [-1.4460992813110352, -0.010175967589020729, -0.0816960409283638, -0.09329592436552048], "finish_reason": "stop"}, {"text": " [word for word in sentence.split() if word.lower() not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " sentence", ".", "split", "()", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-2.3760414123535156, -0.10691085457801819, -0.19751034677028656, -0.00024053541710600257, -0.00014125302550382912, -0.22109438478946686, -0.0001716466504149139, -0.0944899246096611, -0.05226295068860054, -0.00481671467423439, -0.005014343652874231, -1.516739845275879, -0.0993913933634758, -0.0006798578542657197, -0.004931785631924868, -0.0001554368354845792, -0.1587522178888321, -2.3841830625315197e-06, -0.0002361257211305201, -8.344646857949556e-07, -7.867782187531702e-06, -0.019677430391311646, -0.004186081700026989], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04385107755661011, -0.14557938277721405, -0.027040405198931694, -9.500529267825186e-05, -4.9470632802695036e-05, -0.00024720950750634074, -0.000785280775744468, -0.020681682974100113, -0.11753091961145401, -7.271502545336261e-05, -0.03993968665599823, -5.006777428206988e-06, -0.00020132421923335642, -5.245195097813848e-06, -6.794906312279636e-06, -0.13043412566184998, -0.0037488911766558886], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0030433074571192265, -0.0019315887475386262, -0.002581598935648799, -0.0005666795768775046, -0.003012050176039338], "finish_reason": "stop"}, {"text": " {k: v for k, v in sorted(sentence_counts.items(), key=lambda x: x[0])}", "tokens": [" {", "k", ":", " v", " for", " k", ",", " v", " in", " sorted", "(", "sentence", "_", "counts", ".", "items", "()", ",", " key", "=", "lambda", " x", ":", " x", "[", "0", "]", ")}", "\n"], "logprobs": [-1.0949172973632812, -0.7691968679428101, -0.009030098095536232, -0.23049353063106537, -0.0011759040644392371, -0.003401923691853881, -0.0014365125680342317, -0.0018022499280050397, -3.349725011503324e-05, -0.4454866051673889, -0.0001110968878492713, -0.002518935827538371, -7.867782187531702e-06, -3.6954811548639555e-06, -0.0002648479712661356, -4.279521817807108e-05, -0.006817059125751257, -0.2353668361902237, -0.014305535703897476, -0.0022975020110607147, -0.0004670721245929599, -1.3518342971801758, -0.0002616301644593477, -0.18065734207630157, -0.0031771203503012657, -1.4833391904830933, -0.02678394876420498, -0.017918730154633522, -0.02120000310242176], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0038020957726985216, -5.972207145532593e-05, -9.48860906646587e-05, -0.7355550527572632, -1.2516897186287679e-05, -3.576272320060525e-06, -4.6491513785440475e-06, -4.351044481154531e-05, -0.12741869688034058], "finish_reason": "stop"}], "metrics": {"energy": 563.2402232360836, "energy_per_token": 4.940703712597224, "time": 13.688738, "time_per_token": 0.12007664912280702}}
{"outputs": [{"text": " re.split(r\"\\.\\s\", text)", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", ".", "\\", "s", "\"", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -0.210494264960289, -0.9277947545051575, -1.2242010831832886, -0.1860290765762329, -0.52141273021698, -0.01282608974725008, -1.0641826391220093, -0.005603202618658543, -0.06060296669602394, -0.02677002176642418, -0.11144042015075684], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " not sentence:", "tokens": [" not", " sentence", ":", "\n"], "logprobs": [-1.4460992813110352, -0.010175967589020729, -0.0816960409283638, -0.09329592436552048], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.2874165177345276, -0.0005036516231484711, -0.17851616442203522, -0.07100287824869156, -0.00679562846198678], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04385107755661011, -0.14557938277721405, -0.027040405198931694, -9.500529267825186e-05, -4.9470632802695036e-05, -0.00024720950750634074, -0.000785280775744468, -0.020681682974100113, -0.11753091961145401, -7.271502545336261e-05, -0.03993968665599823, -5.006777428206988e-06, -0.00020132421923335642, -5.245195097813848e-06, -6.794906312279636e-06, -0.13043412566184998, -0.0037488911766558886], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0030433074571192265, -0.0019315887475386262, -0.002581598935648799, -0.0005666795768775046, -0.003012050176039338], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.5685730576515198, -0.00011932138295378536, -0.024914700537919998, -0.00708058150485158, -0.004454452078789473, -3.4570634852570947e-06, -4.053033626405522e-05, -0.07361741364002228, -0.01634025387465954], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.004831900354474783, -5.328513361746445e-05, -8.594620157964528e-05, -0.8308201432228088, -1.2159273865108844e-05, -3.6954811548639555e-06, -3.814689989667386e-06, -3.838465272565372e-05, -1.9318604469299316, -0.007398586254566908], "finish_reason": "stop"}], "metrics": {"energy": 394.8814033813475, "energy_per_token": 5.3362351808290205, "time": 10.1015415, "time_per_token": 0.13650731756756757}}
{"outputs": [{"text": " re.split(r'[?!.]\\s*', text)", "tokens": [" re", ".", "split", "(", "r", "'", "[", "?", "!", ".", "]\\", "s", "*", "'", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -0.210494264960289, -0.8262971043586731, -0.23045915365219116, -1.6632448434829712, -0.861393392086029, -0.04476923495531082, -1.4865378141403198, -0.03283443674445152, -0.34680306911468506, -0.02023482508957386, -0.0055523463524878025, -0.07669702172279358, -0.05477295443415642, -0.1836266815662384], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, start=1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " start", "=", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -0.41565075516700745, -0.010401562787592411, -0.0028347091283649206, -0.0001479277852922678, -0.0032234634272754192], "finish_reason": "stop"}, {"text": " sentence == \"\":", "tokens": [" sentence", " ==", " \"", "\":", "\n"], "logprobs": [-0.37281137704849243, -1.9406532049179077, -0.20983952283859253, -0.019724534824490547, -0.07356813549995422], "finish_reason": "stop"}, {"text": " [word for word in sentence.split() if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " sentence", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-2.3425099849700928, -0.13096414506435394, -0.1687173992395401, -0.00019870213873218745, -0.0001431601122021675, -0.24133136868476868, -0.00016091958968900144, -0.09326714277267456, -0.07996439188718796, -0.0054477802477777, -0.0063742659986019135, -0.3095017075538635, -0.00015138434537220746, -0.0008818790083751082, -2.7418097943154862e-06, -6.115249561844394e-05, -3.576278118089249e-07, -2.264974000354414e-06, -0.010981244966387749, -0.0025798154529184103], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -0.1621892899274826, -0.0033734100870788097], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0038443722296506166, -0.0017651228699833155, -0.00315644359216094, -0.0007599088130518794, -0.002636886900290847], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.5975254774093628, -0.00011944057769142091, -0.023756038397550583, -0.006020861677825451, -0.005418851040303707, -3.2186455882765586e-06, -3.8742269680369645e-05, -0.04638191685080528, -0.011473151855170727], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "\n"], "logprobs": [-0.004048604518175125, -5.674201020156033e-05, -0.00011622230522334576, -1.0781185626983643], "finish_reason": "stop"}], "metrics": {"energy": 435.0258001995085, "energy_per_token": 4.780503298895698, "time": 10.941855, "time_per_token": 0.12024016483516484}}
{"outputs": [{"text": " re.sub(r\"\\b(\"+\"|\".join(STOPWORDS)+\")\\b\\s*\", \"\", text)", "tokens": [" re", ".", "sub", "(", "r", "\"", "\\", "b", "(", "\"", "+", "\"", "|", "\"", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")+", "\"", ")\\", "b", "\\", "s", "*", "\"", ",", " \"", "\"", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -2.1510465145111084, -0.2022978961467743, -0.21221020817756653, -0.9297137260437012, -1.2136354446411133, -3.071967363357544, -0.552588939666748, -0.5403133034706116, -2.43813157081604, -0.8611811399459839, -0.009785185568034649, -0.00041929035796783864, -0.0002261144545627758, -0.000284154579276219, -0.006833516526967287, -0.012444701045751572, -2.264974000354414e-06, -0.0006739014061167836, -1.0728830375228426e-06, -1.311301275563892e-06, -0.0028423171024769545, -0.3201228380203247, -0.026434434577822685, -0.0009345216676592827, -0.24755243957042694, -0.006064821965992451, -0.007196930702775717, -0.00038628268521279097, -0.0034089330583810806, -0.4483754634857178, -0.022390656173229218, -0.004645151551812887, -0.08254487812519073, -0.045857589691877365, -0.6259545087814331], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " not sentence:", "tokens": [" not", " sentence", ":", "\n"], "logprobs": [-1.4460992813110352, -0.010175967589020729, -0.0816960409283638, -0.09329592436552048], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.2874165177345276, -0.0005036516231484711, -0.17851616442203522, -0.07100287824869156, -0.00679562846198678], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04385107755661011, -0.14557938277721405, -0.027040405198931694, -9.500529267825186e-05, -4.9470632802695036e-05, -0.00024720950750634074, -0.000785280775744468, -0.020681682974100113, -0.11753091961145401, -7.271502545336261e-05, -0.03993968665599823, -5.006777428206988e-06, -0.00020132421923335642, -5.245195097813848e-06, -6.794906312279636e-06, -0.13043412566184998, -0.0037488911766558886], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0030433074571192265, -0.0019315887475386262, -0.002581598935648799, -0.0005666795768775046, -0.003012050176039338], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.5685730576515198, -0.00011932138295378536, -0.024914700537919998, -0.00708058150485158, -0.004454452078789473, -3.4570634852570947e-06, -4.053033626405522e-05, -0.07361741364002228, -0.01634025387465954], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "\n"], "logprobs": [-0.004831900354474783, -5.328513361746445e-05, -8.594620157964528e-05, -1.010763168334961], "finish_reason": "stop"}], "metrics": {"energy": 439.42153389358526, "energy_per_token": 4.882461487706503, "time": 11.577687, "time_per_token": 0.12864096666666666}}
{"outputs": [{"text": " re.split(\"[.!?]+\", text)", "tokens": [" re", ".", "split", "(", "\"", "[", ".", "!", "?", "]+", "\"", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -1.8543503284454346, -0.6497036814689636, -0.2537343204021454, -1.3670352697372437, -0.03593864664435387, -1.4747824668884277, -0.009670199826359749, -0.0070084924809634686, -0.09415211528539658, -0.04960642755031586, -0.19991664588451385], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " sentence == \"\":", "tokens": [" sentence", " ==", " \"", "\":", "\n"], "logprobs": [-0.37281137704849243, -1.9406532049179077, -0.20983952283859253, -0.019724534824490547, -0.07356813549995422], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -0.1601160317659378, -0.0665273517370224, -0.006713928189128637], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -1.9973584413528442, -0.024078793823719025, -0.0011719746980816126, -4.124556289752945e-05, -0.0001481661747675389, -0.00029797881143167615, -0.014865108765661716, -0.11428392678499222, -7.939023635117337e-05, -0.056236520409584045, -7.390948667307384e-06, -0.00020239688456058502, -6.9141146923357155e-06, -7.033323527139146e-06, -0.14676973223686218, -0.006392625626176596], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.004036019556224346, -0.0016526625258848071, -0.0022024677600711584, -0.0008668717346154153, -0.0031701093539595604], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.4452364444732666, -9.369411418447271e-05, -0.016333451494574547, -0.005344626493752003, -0.0045343199744820595, -3.2186455882765586e-06, -3.9934315282152966e-05, -0.061189375817775726, -0.01259032916277647], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts"], "logprobs": [-0.0036157488357275724, -5.602679812000133e-05, -8.868777513271198e-05], "finish_reason": "stop"}], "metrics": {"energy": 413.57219596481303, "energy_per_token": 6.081944058306074, "time": 11.552588, "time_per_token": 0.16989100000000001}}
{"outputs": [{"text": " text.split(\". \")", "tokens": [" text", ".", "split", "(", "\"", ".", " \"", ")", "\n"], "logprobs": [-2.7310140132904053, -0.021505150943994522, -0.03715737536549568, -0.4704282283782959, -0.014864638447761536, -0.024192599579691887, -1.7758004665374756, -0.004519130103290081, -0.12406661361455917], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, start=1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " start", "=", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -0.41565075516700745, -0.010401562787592411, -0.0028347091283649206, -0.0001479277852922678, -0.0032234634272754192], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " [word.strip() for word in sentence.split(\" \") if word.strip() not in STOPWORDS]", "tokens": [" [", "word", ".", "strip", "()", " for", " word", " in", " sentence", ".", "split", "(", "\"", " \"", ")", " if", " word", ".", "strip", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-2.3425099849700928, -0.13096414506435394, -1.8730134963989258, -0.7399829030036926, -0.024972138926386833, -0.18788844347000122, -0.0001817776501411572, -0.00014935807848814875, -0.08219455927610397, -4.7444173105759546e-05, -0.03773966431617737, -1.016616702079773, -0.0009709649602882564, -0.000753357307985425, -0.6602346301078796, -0.006797404494136572, -0.024526497349143028, -0.14215360581874847, -0.002506093354895711, -0.0004925706889480352, -0.4765210747718811, -0.0001501924270996824, -0.0021308590658009052, -1.5497195136049413e-06, -5.61460001335945e-05, -1.7881377516459906e-06, -1.5497195136049413e-06, -0.0926901251077652, -0.003297370159998536], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -0.1621892899274826, -0.0033734100870788097], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0038443722296506166, -0.0017651228699833155, -0.00315644359216094, -0.0007599088130518794, -0.002636886900290847], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.5975254774093628, -0.00011944057769142091, -0.023756038397550583, -0.006020861677825451, -0.005418851040303707, -3.2186455882765586e-06, -3.8742269680369645e-05, -0.04638191685080528, -0.011473151855170727], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts"], "logprobs": [-0.004048604518175125, -5.674201020156033e-05, -0.00011622230522334576], "finish_reason": "stop"}], "metrics": {"energy": 438.5325145320892, "energy_per_token": 4.98332402877374, "time": 11.590451, "time_per_token": 0.13170967045454546}}
{"outputs": [{"text": " [re.split('\\.\\s*', sentence) for sentence in text.split('\\n')]", "tokens": [" [", "re", ".", "split", "('", "\\", ".", "\\", "s", "*", "'", ",", " sentence", ")", " for", " sentence", " in", " text", ".", "split", "('", "\\", "n", "')", "]", "\n"], "logprobs": [-2.6476800441741943, -1.8973838090896606, -0.0008624648326076567, -1.6827126741409302, -1.3289786577224731, -0.9819567799568176, -0.29501450061798096, -2.0998635292053223, -0.09155423939228058, -0.7520021200180054, -0.04347837716341019, -0.009466993622481823, -1.3818175792694092, -0.1872512400150299, -0.06623586267232895, -0.01227550208568573, -0.0022156708873808384, -0.15696275234222412, -0.9727375507354736, -0.06110706552863121, -0.498398095369339, -2.188676118850708, -0.23386459052562714, -0.013464590534567833, -0.21694591641426086, -0.04857313260436058], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " not sentence:", "tokens": [" not", " sentence", ":", "\n"], "logprobs": [-1.4460992813110352, -0.010175967589020729, -0.0816960409283638, -0.09329592436552048], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.2874165177345276, -0.0005036516231484711, -0.17851616442203522, -0.07100287824869156, -0.00679562846198678], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04385107755661011, -0.14557938277721405, -0.027040405198931694, -9.500529267825186e-05, -4.9470632802695036e-05, -0.00024720950750634074, -0.000785280775744468, -0.020681682974100113, -0.11753091961145401, -7.271502545336261e-05, -0.03993968665599823, -5.006777428206988e-06, -0.00020132421923335642, -5.245195097813848e-06, -6.794906312279636e-06, -0.13043412566184998, -0.0037488911766558886], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0030433074571192265, -0.0019315887475386262, -0.002581598935648799, -0.0005666795768775046, -0.003012050176039338], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.5685730576515198, -0.00011932138295378536, -0.024914700537919998, -0.00708058150485158, -0.004454452078789473, -3.4570634852570947e-06, -4.053033626405522e-05, -0.07361741364002228, -0.01634025387465954], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "\n"], "logprobs": [-0.004831900354474783, -5.328513361746445e-05, -8.594620157964528e-05, -1.010763168334961], "finish_reason": "stop"}], "metrics": {"energy": 380.76004796028155, "energy_per_token": 4.81974744253521, "time": 9.887656, "time_per_token": 0.12516020253164556}}
{"outputs": [{"text": " re.sub(r\"[^a-zA-Z0-9\\s\\.]\", \"\", text).split('.')", "tokens": [" re", ".", "sub", "(", "r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "\\", ".", "]\"", ",", " \"", "\"", ",", " text", ")", ".", "split", "('", ".", "')", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -2.1510465145111084, -0.2022978961467743, -0.21221020817756653, -0.9297137260437012, -1.9198904037475586, -1.146169662475586, -0.42828795313835144, -0.0004190520558040589, -0.00025340684805996716, -0.10782183706760406, -0.00013541258522309363, -0.010748586617410183, -0.6049675345420837, -0.0011520899133756757, -0.00030322244856506586, -0.5952572822570801, -0.020579038187861443, -1.274027705192566, -0.062237948179244995, -0.2785208523273468, -0.002313439268618822, -0.1648183912038803, -0.04381570965051651, -0.0030925089959055185, -0.05462149158120155, -0.03827905282378197, -0.11732516437768936, -0.10316410660743713, -1.9599120616912842, -0.0064666541293263435, -0.02603996731340885, -0.21931371092796326], "finish_reason": "stop"}, {"text": " {f\"Sentence {i+1}\": len([word for word in sentence.split() if word not in STOPWORDS]) for i, sentence in enumerate(sentences) if sentence != \"\"}", "tokens": [" {", "f", "\"", "Sent", "ence", " {", "i", "+", "1", "}", "\":", " len", "([", "word", " for", " word", " in", " sentence", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", " for", " i", ",", " sentence", " in", " enumerate", "(", "sent", "ences", ")", " if", " sentence", " ", "!", "=", " \"", "\"}", "\n"], "logprobs": [-2.211747646331787, -0.2107602208852768, -0.05500969663262367, -0.0014735327567905188, -0.00012635385792236775, -0.0007601470570079982, -0.07988394796848297, -0.24868452548980713, -0.0006920088781043887, -0.01148257963359356, -0.00019560330838430673, -0.14132441580295563, -0.8332592844963074, -0.15295350551605225, -0.02314877137541771, -0.0007756323902867734, -0.00043501926120370626, -0.03766883537173271, -0.0028790475334972143, -0.01795889250934124, -0.1416058987379074, -0.01019992120563984, -0.0065217274241149426, -0.15101157128810883, -0.0003134713042527437, -0.0014024670235812664, -3.099436753473128e-06, -4.875540980719961e-05, -8.940656698541716e-06, -2.3841855067985307e-07, -0.014819301664829254, -0.05919656902551651, -0.007142959628254175, -0.0015173362335190177, -0.011266186833381653, -0.0010208638850599527, -0.0004047528200317174, -0.00042167355422861874, -0.0021786780562251806, -5.566918844124302e-05, -0.08118737488985062, -0.0019279003608971834, -0.2254227101802826, -2.034862756729126, -9.059865078597795e-06, -6.758938252460212e-05, -0.1946062445640564, -0.010533451102674007, -0.009190043434500694], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -0.1601160317659378, -0.0665273517370224, -0.006713928189128637], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -0.1621892899274826, -0.0033734100870788097], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0038443722296506166, -0.0017651228699833155, -0.00315644359216094, -0.0007599088130518794, -0.002636886900290847], "finish_reason": "stop"}, {"text": " {k: v for k, v in sorted(sentence_counts.items(), key=lambda item: item[0])}", "tokens": [" {", "k", ":", " v", " for", " k", ",", " v", " in", " sorted", "(", "sentence", "_", "counts", ".", "items", "()", ",", " key", "=", "lambda", " item", ":", " item", "[", "0", "]", ")}", "\n"], "logprobs": [-1.0500363111495972, -0.7853701710700989, -0.010157205164432526, -0.16769304871559143, -0.0014152044896036386, -0.0032597046811133623, -0.0012317459331825376, -0.0015925593907013535, -3.1709168979432434e-05, -0.5458455681800842, -9.190614218823612e-05, -0.003054716857150197, -9.298280929215252e-06, -4.529942543740617e-06, -0.00031120702624320984, -5.1020273531321436e-05, -0.007701585069298744, -0.19601750373840332, -0.01311462465673685, -0.002395619172602892, -0.00043156370520591736, -0.2621648609638214, -0.00029404606902971864, -0.03695404902100563, -0.0009258274803869426, -1.9736003875732422, -0.04231920838356018, -0.023223433643579483, -0.018475115299224854], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "\n"], "logprobs": [-0.00496333884075284, -5.8053239627042785e-05, -9.524368942948058e-05, -1.0877244472503662], "finish_reason": "stop"}], "metrics": {"energy": 660.7642483634942, "energy_per_token": 4.318720577539177, "time": 16.566635, "time_per_token": 0.10827866013071896}}
{"outputs": [{"text": " re.split(r'\\.\\s*(?=[A-Z])', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", ".", "\\", "s", "*(", "?", "=[", "A", "-", "Z", "])", "'", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -0.210494264960289, -1.9470207691192627, -0.06729978322982788, -0.4042731821537018, -0.023621806874871254, -2.501826286315918, -0.00032264748006127775, -0.47444823384284973, -0.10692049562931061, -6.294052582234144e-05, -0.000309657771140337, -0.05292629078030586, -0.0008418591460213065, -0.002706200582906604, -0.03310537710785866, -0.03868386149406433, -0.37099459767341614], "finish_reason": "stop"}, {"text": " {f\"Sentence {i + 1}\": sum(word not in STOPWORDS for word in sentence.split()) for i, sentence in enumerate(sentences) if sentence.strip()}", "tokens": [" {", "f", "\"", "Sent", "ence", " {", "i", " +", " ", "1", "}", "\":", " sum", "(", "word", " not", " in", " ST", "OP", "W", "OR", "DS", " for", " word", " in", " sentence", ".", "split", "())", " for", " i", ",", " sentence", " in", " enumerate", "(", "sent", "ences", ")", " if", " sentence", ".", "strip", "()}", "\n"], "logprobs": [-2.211747646331787, -0.2107602208852768, -0.05500969663262367, -0.0014735327567905188, -0.00012635385792236775, -0.0007601470570079982, -0.07988394796848297, -2.184082508087158, -0.00221234024502337, -0.0006055190460756421, -0.021688543260097504, -0.0001961992384167388, -2.6178135871887207, -0.18770942091941833, -0.6235732436180115, -0.2476120889186859, -0.00015245705435518175, -0.015429181046783924, -2.50339189733495e-06, -4.708655978902243e-05, -9.775113539944869e-06, -3.576278118089249e-07, -0.021760398522019386, -0.002971877809613943, -0.0010879080509766936, -0.05362546071410179, -0.001279131742194295, -0.005859223194420338, -0.061271004378795624, -0.06572385132312775, -0.003339311806485057, -0.0009964506607502699, -0.005750422365963459, -0.0016676579834893346, -0.0029661727603524923, -0.0002992897352669388, -0.003953617997467518, -7.414542778860778e-05, -0.07378175109624863, -0.002288700779899955, -0.04498681798577309, -1.9858688116073608, -0.12037239968776703, -0.06643443554639816, -0.010053236968815327], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " not sentence:", "tokens": [" not", " sentence", ":", "\n"], "logprobs": [-1.4460992813110352, -0.010175967589020729, -0.0816960409283638, -0.09329592436552048], "finish_reason": "stop"}, {"text": " sentence.strip().split()", "tokens": [" sentence", ".", "strip", "()", ".", "split", "()", "\n"], "logprobs": [-0.2874165177345276, -0.0005036516231484711, -1.8919446468353271, -0.005583998281508684, -0.002153579378500581, -0.00901922956109047, -0.17540794610977173, -0.004571700468659401], "finish_reason": "stop"}, {"text": " [word for word in words if word.strip() != \"\" and word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", ".", "strip", "()", " ", "!", "=", " \"", "\"", " and", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04385107755661011, -0.14557938277721405, -0.027040405198931694, -9.500529267825186e-05, -4.9470632802695036e-05, -0.00024720950750634074, -0.000785280775744468, -0.020681682974100113, -2.7737388610839844, -0.2627696394920349, -0.003044258337467909, -0.9551954865455627, -5.960462772236497e-07, -2.264974000354414e-06, -0.020310288295149803, -0.0008045773720368743, -0.13373315334320068, -0.0140723567456007, -0.09020130336284637, -0.00015269544383045286, -0.050998274236917496, -3.099436753473128e-06, -0.00018046658078674227, -3.4570634852570947e-06, -2.3603161025675945e-05, -0.011021686717867851, -0.007028971798717976], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.002722963457927108, -0.0016336203552782536, -0.0030039683915674686, -0.0006562701892107725, -0.0029601112473756075], "finish_reason": "stop"}, {"text": " {k: v for k, v in sorted(sentence_counts.items(), key=lambda item: item[1])}", "tokens": [" {", "k", ":", " v", " for", " k", ",", " v", " in", " sorted", "(", "sentence", "_", "counts", ".", "items", "()", ",", " key", "=", "lambda", " item", ":", " item", "[", "1", "]", ")}", "\n"], "logprobs": [-1.2404283285140991, -0.7098222970962524, -0.009559687227010727, -0.1583082526922226, -0.0013616346986964345, -0.0029522664844989777, -0.0014302035560831428, -0.001955979270860553, -3.2782016205601394e-05, -0.4958330988883972, -0.00012361239350866526, -0.004654169548302889, -8.583032467868179e-06, -4.0531076592742465e-06, -0.0002806984703056514, -5.8887653722194955e-05, -0.007773150689899921, -0.18690362572669983, -0.013522337190806866, -0.0021037368569523096, -0.0005385617259889841, -0.362091064453125, -0.00025281094713136554, -0.04697751626372337, -0.0008622265886515379, -0.18244238197803497, -0.0782666727900505, -0.6644776463508606, -0.009400863200426102], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "\n"], "logprobs": [-0.004743038676679134, -5.519237674889155e-05, -0.00012766500003635883, -1.0628623962402344], "finish_reason": "stop"}], "metrics": {"energy": 681.1137144298556, "energy_per_token": 4.5407580961990375, "time": 16.632471, "time_per_token": 0.11088313999999999}}
{"outputs": [{"text": " re.split(r'[.]', text)", "tokens": [" re", ".", "split", "(", "r", "'", "[", ".", "]", "'", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -0.210494264960289, -0.8262971043586731, -0.23045915365219116, -0.3023725748062134, -2.076092481613159, -0.25152865052223206, -0.014276509173214436, -0.19573241472244263, -0.058023545891046524, -0.16118855774402618], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " len(sentence) == 0:", "tokens": [" len", "(", "sentence", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-3.235215187072754, -0.0006609162664972246, -0.0046153683215379715, -0.2981286346912384, -0.8645110726356506, -0.0010390841634944081, -0.0005575056420639157, -0.010115076787769794, -0.08894381672143936], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.2874165177345276, -0.0005036516231484711, -0.17851616442203522, -0.07100287824869156, -0.00679562846198678], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04385107755661011, -0.14557938277721405, -0.027040405198931694, -9.500529267825186e-05, -4.9470632802695036e-05, -0.00024720950750634074, -0.000785280775744468, -0.020681682974100113, -0.11753091961145401, -7.271502545336261e-05, -0.03993968665599823, -5.006777428206988e-06, -0.00020132421923335642, -5.245195097813848e-06, -6.794906312279636e-06, -0.13043412566184998, -0.0037488911766558886], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0030433074571192265, -0.0019315887475386262, -0.002581598935648799, -0.0005666795768775046, -0.003012050176039338], "finish_reason": "stop"}, {"text": " {", "tokens": [" {", "\n"], "logprobs": [-1.0949172973632812, -1.5534032583236694], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "\n"], "logprobs": [-0.0038020957726985216, -5.972207145532593e-05, -9.48860906646587e-05, -1.12527596950531], "finish_reason": "stop"}], "metrics": {"energy": 342.5565107717514, "energy_per_token": 5.270100165719252, "time": 9.072804, "time_per_token": 0.1395816}}
{"outputs": [{"text": " re.findall(r\"[^.!?]+[.!?]+\", text) # find sentences", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "[", "^", ".", "!", "?", "]+", "[", ".", "!", "?", "]+", "\"", ",", " text", ")", " #", " find", " sentences", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -2.3936116695404053, -0.0008380476501770318, -0.1440407633781433, -0.09133850783109665, -0.692566990852356, -0.23430803418159485, -0.22931751608848572, -0.5607566833496094, -0.8383411765098572, -0.0028397017158567905, -0.22694197297096252, -0.0828590840101242, -0.0014484162675216794, -0.004470236133784056, -0.0004228651523590088, -0.9023246169090271, -0.006293715443462133, -0.0021621440537273884, -0.03183504566550255, -0.016684286296367645, -2.430413007736206, -1.4990065097808838, -1.6519463062286377, -0.6740753650665283], "finish_reason": "stop"}, {"text": " {f\"Sentence {i+1}\": len(sentence.split()) - len(set(sentence.split()) & set(STOPWORDS)) for i, sentence in enumerate(sentences) if sentence}", "tokens": [" {", "f", "\"", "Sent", "ence", " {", "i", "+", "1", "}", "\":", " len", "(", "sentence", ".", "split", "())", " -", " len", "(", "set", "(", "sentence", ".", "split", "())", " &", " set", "(", "ST", "OP", "W", "OR", "DS", "))", " for", " i", ",", " sentence", " in", " enumerate", "(", "sent", "ences", ")", " if", " sentence", "}", "\n"], "logprobs": [-2.211747646331787, -0.2107602208852768, -0.05500969663262367, -0.0014735327567905188, -0.00012635385792236775, -0.0007601470570079982, -0.07988394796848297, -0.24868452548980713, -0.0006920088781043887, -0.01148257963359356, -0.00019560330838430673, -0.14132441580295563, -0.5733334422111511, -1.6661503314971924, -0.04831952974200249, -0.02846573479473591, -0.1027165949344635, -0.3658915162086487, -0.13602681457996368, -0.05425458773970604, -0.04101523011922836, -0.008605657145380974, -0.3455137014389038, -0.001082192175090313, -0.006761173252016306, -0.0044442457146942616, -0.8538607358932495, -0.0011156531982123852, -0.0009043894242495298, -0.0023843212984502316, -1.311301275563892e-06, -2.6225699912174605e-05, -4.768360213347478e-06, -1.1920928244535389e-07, -0.0012293646577745676, -0.06128793582320213, -0.004912924487143755, -0.002031526295468211, -0.011311096139252186, -0.000795762927737087, -0.0007035640883259475, -0.0001902399235405028, -0.003149432362988591, -3.349725011503324e-05, -0.0542382150888443, -0.0025542511139065027, -0.28397801518440247, -0.3860723078250885, -0.01838991604745388], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " sentence.strip().split()", "tokens": [" sentence", ".", "strip", "()", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -1.9985865354537964, -0.005083018448203802, -0.0022367238998413086, -0.01146773062646389, -0.1601973921060562, -0.004894656129181385], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS and word.isalpha()]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " word", ".", "is", "alpha", "()", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -1.9320008754730225, -0.25718072056770325, -0.3495461642742157, -1.4737114906311035, -0.009667247533798218, -0.0028733417857438326, -0.012410204857587814, -0.008879579603672028], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0031351721845567226, -0.001692411839030683, -0.002593251410871744, -0.0007943335804156959, -0.0024994343984872103], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.48279130458831787, -0.00013147920253686607, -0.024982603266835213, -0.006339558865875006, -0.004331136588007212, -2.622600959512056e-06, -4.0411134250462055e-05, -0.05777311325073242, -0.015841934829950333], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.00455746054649353, -6.01988795096986e-05, -9.524368942948058e-05, -0.7672848701477051, -1.0967194612021558e-05, -4.291525328881107e-06, -6.318072337307967e-06, -3.8980677345534787e-05, -0.11746679246425629], "finish_reason": "stop"}], "metrics": {"energy": 616.0559830398558, "energy_per_token": 4.432057431941409, "time": 15.13989, "time_per_token": 0.10892007194244605}}
{"outputs": [{"text": " re.split(r'[.!?]+', text)", "tokens": [" re", ".", "split", "(", "r", "'", "[", ".", "!", "?", "]+", "'", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -0.210494264960289, -0.8262971043586731, -0.23045915365219116, -0.3023725748062134, -0.9848734736442566, -0.012397135607898235, -0.6672362685203552, -0.008735300973057747, -0.007175981532782316, -0.10733646899461746, -0.0495937205851078, -0.16631872951984406], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -0.1601160317659378, -0.0665273517370224, -0.006713928189128637], "finish_reason": "stop"}, {"text": " [w for w in words if w.strip() != \"\" and w.lower() not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", ".", "strip", "()", " ", "!", "=", " \"", "\"", " and", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -1.9973584413528442, -0.024078793823719025, -0.0011719746980816126, -4.124556289752945e-05, -0.0001481661747675389, -0.00029797881143167615, -0.014865108765661716, -2.861804485321045, -0.41588154435157776, -0.0036952088121324778, -0.8995079398155212, -2.3841855067985307e-07, -2.0265558760002023e-06, -0.014507525600492954, -0.0007173825288191438, -0.12270437180995941, -0.004862270317971706, -2.2299766540527344, -1.045729637145996, -0.0020223658066242933, -0.008106543682515621, -0.00013720047718379647, -0.027092501521110535, -2.50339189733495e-06, -0.00019905969384126365, -1.3232143828645349e-05, -2.3841855067985307e-07, -0.010574618354439735, -0.007516436744481325], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.004036019556224346, -0.0016526625258848071, -0.0022024677600711584, -0.0008668717346154153, -0.0031701093539595604], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.4452364444732666, -9.369411418447271e-05, -0.016333451494574547, -0.005344626493752003, -0.0045343199744820595, -3.2186455882765586e-06, -3.9934315282152966e-05, -0.061189375817775726, -0.01259032916277647], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts"], "logprobs": [-0.0036157488357275724, -5.602679812000133e-05, -8.868777513271198e-05], "finish_reason": "stop"}], "metrics": {"energy": 460.35119322967506, "energy_per_token": 5.754389915370938, "time": 12.183393, "time_per_token": 0.1522924125}}
{"outputs": [{"text": " re.split(r\"[.]\", text)", "tokens": [" re", ".", "split", "(", "r", "\"", "[", ".", "]\"", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -0.210494264960289, -0.9277947545051575, -0.5889147520065308, -0.24381670355796814, -1.8541350364685059, -0.007815259508788586, -0.13625049591064453, -0.05493827536702156, -0.14851070940494537], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, start=1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " start", "=", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -0.41565075516700745, -0.010401562787592411, -0.0028347091283649206, -0.0001479277852922678, -0.0032234634272754192], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -0.1601160317659378, -0.0665273517370224, -0.006713928189128637], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -0.1621892899274826, -0.0033734100870788097], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0038443722296506166, -0.0017651228699833155, -0.00315644359216094, -0.0007599088130518794, -0.002636886900290847], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.5975254774093628, -0.00011944057769142091, -0.023756038397550583, -0.006020861677825451, -0.005418851040303707, -3.2186455882765586e-06, -3.8742269680369645e-05, -0.04638191685080528, -0.011473151855170727], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "\n"], "logprobs": [-0.004048604518175125, -5.674201020156033e-05, -0.00011622230522334576, -1.0781185626983643], "finish_reason": "stop"}], "metrics": {"energy": 363.1472166061402, "energy_per_token": 5.263003139219423, "time": 9.259256, "time_per_token": 0.13419211594202898}}
{"outputs": [{"text": " [sentence for sentence in re.sub(r'[^\\w\\s]','',text).lower().strip().split(\" \") if sentence not in STOPWORDS]", "tokens": [" [", "sentence", " for", " sentence", " in", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", "''", ",", "text", ")", ".", "lower", "()", ".", "strip", "()", ".", "split", "(", "\"", " \"", ")", " if", " sentence", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-2.6476800441741943, -1.3200751543045044, -0.6022676229476929, -0.006899343337863684, -0.002125506056472659, -0.06288474053144455, -0.00019441144831944257, -3.0166521072387695, -0.2521832585334778, -0.3446407914161682, -0.7603901028633118, -0.39138340950012207, -0.8954007029533386, -0.05398513749241829, -0.25746649503707886, -0.005043759476393461, -0.13593025505542755, -0.00453562568873167, -0.004077811259776354, -0.9055090546607971, -0.0018567480146884918, -0.1515287607908249, -0.08713072538375854, -0.005410551093518734, -2.5211408138275146, -0.0005609607324004173, -0.0024102467577904463, -2.8315134048461914, -0.012925886549055576, -0.005158092360943556, -0.015380348078906536, -0.9647632241249084, -0.013252507895231247, -1.0793997049331665, -0.020726755261421204, -0.01985134370625019, -0.11088275909423828, -0.3907029330730438, -0.0012182918144389987, -0.012627998366951942, -5.602820692729438e-06, -0.00013541258522309363, -1.156323378381785e-05, -8.4638240878121e-06, -0.5057016611099243, -0.035105228424072266], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -0.1601160317659378, -0.0665273517370224, -0.006713928189128637], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -0.1621892899274826, -0.0033734100870788097], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0038443722296506166, -0.0017651228699833155, -0.00315644359216094, -0.0007599088130518794, -0.002636886900290847], "finish_reason": "stop"}, {"text": " {key: value for key, value in sorted(sentence_counts.items())}", "tokens": [" {", "key", ":", " value", " for", " key", ",", " value", " in", " sorted", "(", "sentence", "_", "counts", ".", "items", "()", ")}", "\n"], "logprobs": [-1.0500363111495972, -1.776470422744751, -0.011578385718166828, -0.514441967010498, -0.003148600459098816, -0.007429825142025948, -0.0006200536736287177, -0.015599725767970085, -0.00012981049076188356, -0.9147176742553711, -0.0001479277852922678, -0.0034435042180120945, -7.629365427419543e-06, -5.006777428206988e-06, -0.0003297977091278881, -9.536288416711614e-05, -0.006265758071094751, -0.7388761043548584, -0.012943184934556484], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "\n"], "logprobs": [-0.00496333884075284, -5.8053239627042785e-05, -9.524368942948058e-05, -1.0877244472503662], "finish_reason": "stop"}], "metrics": {"energy": 504.04611709976217, "energy_per_token": 4.66709367684965, "time": 12.853584, "time_per_token": 0.11901466666666666}}
{"outputs": [{"text": " [s for s in re.split(r\"[!.?]\\s*\",text) if s]", "tokens": [" [", "s", " for", " s", " in", " re", ".", "split", "(", "r", "\"", "[", "!", ".", "?", "]\\", "s", "*", "\"", ",", "text", ")", " if", " s", "]", "\n"], "logprobs": [-2.6476800441741943, -1.4826384782791138, -0.7983505725860596, -0.0074865021742880344, -0.0005514293443411589, -0.021369799971580505, -0.0002411313180346042, -0.1574750393629074, -0.36382856965065, -0.30689191818237305, -0.8291297554969788, -0.7098720073699951, -2.8742573261260986, -1.0581271648406982, -0.4719785451889038, -0.8318601250648499, -0.08179227262735367, -0.8912918567657471, -0.00696208793669939, -0.0027312852907925844, -2.9374406337738037, -0.05482576787471771, -0.006701376289129257, -0.29072874784469604, -0.5402381420135498, -0.2743905484676361], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -0.1601160317659378, -0.0665273517370224, -0.006713928189128637], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -0.1621892899274826, -0.0033734100870788097], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0038443722296506166, -0.0017651228699833155, -0.00315644359216094, -0.0007599088130518794, -0.002636886900290847], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.5975254774093628, -0.00011944057769142091, -0.023756038397550583, -0.006020861677825451, -0.005418851040303707, -3.2186455882765586e-06, -3.8742269680369645e-05, -0.04638191685080528, -0.011473151855170727], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.004048604518175125, -5.674201020156033e-05, -0.00011622230522334576, -0.7526333928108215, -1.2397689715726301e-05, -3.814689989667386e-06, -6.437280717364047e-06, -4.7444173105759546e-05, -0.1256789267063141], "finish_reason": "stop"}], "metrics": {"energy": 386.34503010940557, "energy_per_token": 4.654759398908501, "time": 10.299989, "time_per_token": 0.1240962530120482}}
{"outputs": [{"text": " re.split(r'[?!.] ', text)", "tokens": [" re", ".", "split", "(", "r", "'", "[", "?", "!", ".", "]", " '", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -0.210494264960289, -0.8262971043586731, -0.23045915365219116, -1.6632448434829712, -0.861393392086029, -0.04476923495531082, -0.7474154233932495, -2.9375007152557373, -0.008189667947590351, -0.09962525218725204, -0.0555076003074646, -0.09684887528419495], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " [word.lower() for word in sentence.split()]", "tokens": [" [", "word", ".", "lower", "()", " for", " word", " in", " sentence", ".", "split", "()", "]", "\n"], "logprobs": [-2.3425099849700928, -0.13096414506435394, -1.8730134963989258, -0.6583178639411926, -0.00014745102089364082, -0.02159685082733631, -0.00022825974156148732, -0.00020168177434243262, -0.3927733600139618, -0.00018153927521780133, -0.0925641879439354, -0.049502622336149216, -2.579702377319336, -0.017256706953048706], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -0.1621892899274826, -0.0033734100870788097], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0038443722296506166, -0.0017651228699833155, -0.00315644359216094, -0.0007599088130518794, -0.002636886900290847], "finish_reason": "stop"}, {"text": " {f\"Sentence {i+1}\": count for i, count in enumerate(sentence_counts)}", "tokens": [" {", "f", "\"", "Sent", "ence", " {", "i", "+", "1", "}", "\":", " count", " for", " i", ",", " count", " in", " enumerate", "(", "sentence", "_", "counts", ")}", "\n"], "logprobs": [-1.0500363111495972, -2.5478708744049072, -0.016266953200101852, -0.008069413714110851, -8.546940807718784e-05, -0.002698116237297654, -0.056993626058101654, -0.3274451792240143, -0.0005460678366944194, -0.004100843332707882, -0.0004145239945501089, -0.9900848865509033, -0.008972090668976307, -0.005699454806745052, -0.0027970261871814728, -0.021202336996793747, -0.0007838514284230769, -0.017809009179472923, -0.0023340145125985146, -0.024713872000575066, -4.5536911784438416e-05, -0.000379132863599807, -0.48088937997817993, -0.01128846500068903], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts"], "logprobs": [-0.00496333884075284, -5.8053239627042785e-05, -9.524368942948058e-05], "finish_reason": "stop"}], "metrics": {"energy": 462.4363403310774, "energy_per_token": 5.081718025616236, "time": 11.565078, "time_per_token": 0.12708876923076923}}
{"outputs": [{"text": " re.split(r'[\\.?!]+', text)", "tokens": [" re", ".", "split", "(", "r", "'", "[\\", ".", "?", "!", "]+", "'", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -0.210494264960289, -0.8262971043586731, -3.139249801635742, -0.4931865930557251, -1.7709853649139404, -0.042844485491514206, -0.9995720386505127, -0.016019565984606743, -0.0053557720966637135, -0.09664055705070496, -0.145880788564682, -0.17205692827701569], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, 1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " ", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -1.1312803030014038, -0.005320199765264988, -0.0002351722796447575, -0.00497662415727973], "finish_reason": "stop"}, {"text": " sentence != \"\":", "tokens": [" sentence", " ", "!", "=", " \"", "\":", "\n"], "logprobs": [-0.37281137704849243, -2.4193215370178223, -5.483612312673358e-06, -7.545663538621739e-05, -0.34654879570007324, -0.028617504984140396, -0.046163614839315414], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -0.1601160317659378, -0.0665273517370224, -0.006713928189128637], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -1.9973584413528442, -0.024078793823719025, -0.0011719746980816126, -4.124556289752945e-05, -0.0001481661747675389, -0.00029797881143167615, -0.014865108765661716, -0.11428392678499222, -7.939023635117337e-05, -0.056236520409584045, -7.390948667307384e-06, -0.00020239688456058502, -6.9141146923357155e-06, -7.033323527139146e-06, -0.14676973223686218, -0.006392625626176596], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.004036019556224346, -0.0016526625258848071, -0.0022024677600711584, -0.0008668717346154153, -0.0031701093539595604], "finish_reason": "stop"}, {"text": " {key: value for key, value in sentence_counts.items() if value > 0}", "tokens": [" {", "key", ":", " value", " for", " key", ",", " value", " in", " sentence", "_", "counts", ".", "items", "()", " if", " value", " >", " ", "0", "}", "\n"], "logprobs": [-1.306091547012329, -1.4437329769134521, -0.0100391935557127, -0.6408461928367615, -0.0030134764965623617, -0.006329845637083054, -0.00047839165199548006, -0.012214032001793385, -0.0001677133986959234, -0.5726358294487, -1.6927575416048057e-05, -2.706014311115723e-05, -0.003161672269925475, -0.0005171154043637216, -0.05155150592327118, -0.010818637907505035, -0.017273813486099243, -0.2882571816444397, -0.0008233971311710775, -0.0067379651591181755, -0.003802452003583312, -0.017920369282364845], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts"], "logprobs": [-0.005000703036785126, -5.972207145532593e-05, -8.594620157964528e-05], "finish_reason": "stop"}], "metrics": {"energy": 470.460593788147, "energy_per_token": 5.407593032047666, "time": 12.634966, "time_per_token": 0.14522949425287357}}
{"outputs": [{"text": " re.split(r'\\.\\s*', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", ".", "\\", "s", "*", "'", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -0.210494264960289, -1.9470207691192627, -0.06729978322982788, -0.4042731821537018, -0.023621806874871254, -0.6870889067649841, -0.021091224625706673, -0.003342163283377886, -0.03356035798788071, -0.03462113067507744, -0.2671327590942383], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, 1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " ", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -1.1312803030014038, -0.005320199765264988, -0.0002351722796447575, -0.00497662415727973], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -0.1601160317659378, -0.0665273517370224, -0.006713928189128637], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -0.1621892899274826, -0.0033734100870788097], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0038443722296506166, -0.0017651228699833155, -0.00315644359216094, -0.0007599088130518794, -0.002636886900290847], "finish_reason": "stop"}, {"text": " {k: v for k, v in sorted(sentence_counts.items(), key=lambda item: item[1]) if v > 0}", "tokens": [" {", "k", ":", " v", " for", " k", ",", " v", " in", " sorted", "(", "sentence", "_", "counts", ".", "items", "()", ",", " key", "=", "lambda", " item", ":", " item", "[", "1", "])", " if", " v", " >", " ", "0", "}", "\n"], "logprobs": [-1.0500363111495972, -0.7853701710700989, -0.010157205164432526, -0.16769304871559143, -0.0014152044896036386, -0.0032597046811133623, -0.0012317459331825376, -0.0015925593907013535, -3.1709168979432434e-05, -0.5458455681800842, -9.190614218823612e-05, -0.003054716857150197, -9.298280929215252e-06, -4.529942543740617e-06, -0.00031120702624320984, -5.1020273531321436e-05, -0.007701585069298744, -0.19601750373840332, -0.01311462465673685, -0.002395619172602892, -0.00043156370520591736, -0.2621648609638214, -0.00029404606902971864, -0.03695404902100563, -0.0009258274803869426, -0.14972692728042603, -2.3889987468719482, -0.5219405293464661, -0.007203913759440184, -0.5116908550262451, -0.0011260127648711205, -0.031289052218198776, -0.004322472028434277, -0.01708902232348919], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "\n"], "logprobs": [-0.00496333884075284, -5.8053239627042785e-05, -9.524368942948058e-05, -1.0877244472503662], "finish_reason": "stop"}], "metrics": {"energy": 464.9578533172607, "energy_per_token": 4.8942931928132705, "time": 11.572636, "time_per_token": 0.12181722105263157}}
{"outputs": [{"text": " re.split('[.!?]', text)", "tokens": [" re", ".", "split", "('", "[", ".", "!", "?", "]", "'", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.8906705379486084, -0.7847096920013428, -0.3515763580799103, -1.4452687501907349, -0.012910940684378147, -0.48814183473587036, -0.068093441426754, -0.006447584833949804, -0.1304512768983841, -0.06205231696367264, -0.15031279623508453], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " sentence.strip().split()", "tokens": [" sentence", ".", "strip", "()", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -1.9985865354537964, -0.005083018448203802, -0.0022367238998413086, -0.01146773062646389, -0.1601973921060562, -0.004894656129181385], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -0.1621892899274826, -0.0033734100870788097], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0038443722296506166, -0.0017651228699833155, -0.00315644359216094, -0.0007599088130518794, -0.002636886900290847], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.5975254774093628, -0.00011944057769142091, -0.023756038397550583, -0.006020861677825451, -0.005418851040303707, -3.2186455882765586e-06, -3.8742269680369645e-05, -0.04638191685080528, -0.011473151855170727], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.004048604518175125, -5.674201020156033e-05, -0.00011622230522334576, -0.7526333928108215, -1.2397689715726301e-05, -3.814689989667386e-06, -6.437280717364047e-06, -4.7444173105759546e-05, -0.1256789267063141], "finish_reason": "stop"}], "metrics": {"energy": 386.7200237236025, "energy_per_token": 5.225946266535169, "time": 9.9021225, "time_per_token": 0.13381246621621623}}
{"outputs": [{"text": " re.split(r'[.] ', text)", "tokens": [" re", ".", "split", "(", "r", "'", "[", ".", "]", " '", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -0.210494264960289, -0.8262971043586731, -0.23045915365219116, -0.3023725748062134, -2.076092481613159, -1.7786720991134644, -0.006168494001030922, -0.12591923773288727, -0.04249357059597969, -0.11773450672626495], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, start=1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " start", "=", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -0.41565075516700745, -0.010401562787592411, -0.0028347091283649206, -0.0001479277852922678, -0.0032234634272754192], "finish_reason": "stop"}, {"text": " not sentence:", "tokens": [" not", " sentence", ":", "\n"], "logprobs": [-1.4460992813110352, -0.010175967589020729, -0.0816960409283638, -0.09329592436552048], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.2874165177345276, -0.0005036516231484711, -0.17851616442203522, -0.07100287824869156, -0.00679562846198678], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04385107755661011, -0.14557938277721405, -0.027040405198931694, -9.500529267825186e-05, -4.9470632802695036e-05, -0.00024720950750634074, -0.000785280775744468, -0.020681682974100113, -0.11753091961145401, -7.271502545336261e-05, -0.03993968665599823, -5.006777428206988e-06, -0.00020132421923335642, -5.245195097813848e-06, -6.794906312279636e-06, -0.13043412566184998, -0.0037488911766558886], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0030433074571192265, -0.0019315887475386262, -0.002581598935648799, -0.0005666795768775046, -0.003012050176039338], "finish_reason": "stop"}, {"text": " {k: v for k, v in sorted(sentence_counts.items(), key=lambda x: int(x[0].split()[1]))}", "tokens": [" {", "k", ":", " v", " for", " k", ",", " v", " in", " sorted", "(", "sentence", "_", "counts", ".", "items", "()", ",", " key", "=", "lambda", " x", ":", " int", "(", "x", "[", "0", "]", ".", "split", "()[", "1", "]))", "}", "\n"], "logprobs": [-1.0949172973632812, -0.7691968679428101, -0.009030098095536232, -0.23049353063106537, -0.0011759040644392371, -0.003401923691853881, -0.0014365125680342317, -0.0018022499280050397, -3.349725011503324e-05, -0.4454866051673889, -0.0001110968878492713, -0.002518935827538371, -7.867782187531702e-06, -3.6954811548639555e-06, -0.0002648479712661356, -4.279521817807108e-05, -0.006817059125751257, -0.2353668361902237, -0.014305535703897476, -0.0022975020110607147, -0.0004670721245929599, -1.3518342971801758, -0.0002616301644593477, -1.8785715103149414, -0.002754824236035347, -0.22664958238601685, -0.00015317220822907984, -0.0017628619680181146, -0.2373305708169937, -0.00011288482346571982, -0.0533689521253109, -0.20168852806091309, -0.0008273277780972421, -0.0288678165525198, -0.004883504938334227, -0.03803257644176483], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0038020957726985216, -5.972207145532593e-05, -9.48860906646587e-05, -0.7355550527572632, -1.2516897186287679e-05, -3.576272320060525e-06, -4.6491513785440475e-06, -4.351044481154531e-05, -0.12741869688034058], "finish_reason": "stop"}], "metrics": {"energy": 525.0931095314027, "energy_per_token": 5.0979913546738125, "time": 12.83395, "time_per_token": 0.1246014563106796}}
{"outputs": [{"text": " re.split(\"(?<=[.!?]) +\", text)", "tokens": [" re", ".", "split", "(", "\"", "(", "?", "<", "=[", ".", "!", "?", "])", " +", "\"", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -1.8543503284454346, -2.9070050716400146, -0.018097983673214912, -0.024924933910369873, -1.6012248992919922, -0.7236656546592712, -0.34687402844429016, -0.006524214521050453, -0.5825626850128174, -0.4533451199531555, -0.006150959059596062, -0.002874292666092515, -0.01916416734457016, -0.03546909987926483, -0.3561250567436218], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, start=1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " start", "=", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -0.41565075516700745, -0.010401562787592411, -0.0028347091283649206, -0.0001479277852922678, -0.0032234634272754192], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " re.findall(r'\\b\\w+\\b', sentence)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " sentence", ")", "\n"], "logprobs": [-2.0827176570892334, -4.768258077092469e-05, -0.9914476871490479, -2.634490556374658e-05, -0.001986198825761676, -0.005751726217567921, -1.8109617233276367, -0.5147542357444763, -0.0970703512430191, -0.0045234025456011295, -0.01686915010213852, -2.1457441107486375e-05, -0.0012148389359936118, -8.356221951544285e-05, -0.0034362575970590115, -0.15130797028541565, -0.029299141839146614], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04923234507441521, -0.16077552735805511, -0.02463594824075699, -9.464769391342998e-05, -5.900685573578812e-05, -0.00021479207498487085, -0.0009816833771765232, -0.023803764954209328, -0.09770733118057251, -9.190614218823612e-05, -0.04640832170844078, -4.6491513785440475e-06, -0.00021181246847845614, -4.172316494077677e-06, -7.033323527139146e-06, -0.1332496553659439, -0.004004555754363537], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0032630315981805325, -0.001665039686486125, -0.0023694555275142193, -0.0006469779182225466, -0.0029643899761140347], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.5533545613288879, -0.0001161031104857102, -0.025312168523669243, -0.005446950439363718, -0.0037813130766153336, -3.3378546504536644e-06, -3.766942609217949e-05, -0.06332413852214813, -0.011351288296282291], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.003565979190170765, -4.31528314948082e-05, -9.095255518332124e-05, -0.7691434025764465, -1.0609570381348021e-05, -7.271740287251305e-06, -4.887569048150908e-06, -3.755022044060752e-05, -2.0385172367095947, -0.006295137107372284], "finish_reason": "stop"}], "metrics": {"energy": 465.2646820068358, "energy_per_token": 5.002846043084256, "time": 11.572453, "time_per_token": 0.12443497849462365}}
{"outputs": [{"text": " re.sub(r'(\\.)(\\w)', r'\\1 \\2', text).split(\".\")", "tokens": [" re", ".", "sub", "(", "r", "'", "(\\", ".", ")", "(\\", "w", ")'", ",", " r", "'\\", "1", " \\", "2", "'", ",", " text", ")", ".", "split", "(", "\"", ".", "\"", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -2.1510465145111084, -0.2022978961467743, -0.21221020817756653, -0.6971430778503418, -2.759026527404785, -0.5425804257392883, -2.3955225944519043, -0.41015294194221497, -0.28785642981529236, -0.15539267659187317, -0.008375519886612892, -0.17779982089996338, -0.33104953169822693, -0.0939156711101532, -0.03035183809697628, -0.0003734129713848233, -0.0005364171229302883, -0.0037392713129520416, -0.03989684581756592, -0.015835952013731003, -0.26742294430732727, -0.0292116180062294, -1.1688754558563232, -0.018765300512313843, -0.12536264955997467, -0.08708909898996353, -0.004669120069593191, -0.19132475554943085], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, 1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " ", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -1.1312803030014038, -0.005320199765264988, -0.0002351722796447575, -0.00497662415727973], "finish_reason": "stop"}, {"text": " not sentence:", "tokens": [" not", " sentence", ":", "\n"], "logprobs": [-1.4460992813110352, -0.010175967589020729, -0.0816960409283638, -0.09329592436552048], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.2874165177345276, -0.0005036516231484711, -0.17851616442203522, -0.07100287824869156, -0.00679562846198678], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04385107755661011, -0.14557938277721405, -0.027040405198931694, -9.500529267825186e-05, -4.9470632802695036e-05, -0.00024720950750634074, -0.000785280775744468, -0.020681682974100113, -0.11753091961145401, -7.271502545336261e-05, -0.03993968665599823, -5.006777428206988e-06, -0.00020132421923335642, -5.245195097813848e-06, -6.794906312279636e-06, -0.13043412566184998, -0.0037488911766558886], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0030433074571192265, -0.0019315887475386262, -0.002581598935648799, -0.0005666795768775046, -0.003012050176039338], "finish_reason": "stop"}, {"text": " {key: value for key, value in sentence_counts.items() if value > 0}", "tokens": [" {", "key", ":", " value", " for", " key", ",", " value", " in", " sentence", "_", "counts", ".", "items", "()", " if", " value", " >", " ", "0", "}", "\n"], "logprobs": [-1.0949172973632812, -1.7567304372787476, -0.009851762093603611, -0.5598165392875671, -0.003491260576993227, -0.004970930516719818, -0.0005663221818394959, -0.014088108204305172, -0.00012408917245920748, -0.5459839105606079, -1.764281842042692e-05, -2.586808113846928e-05, -0.005911485757678747, -0.00047958316281437874, -0.03997232764959335, -0.008523868396878242, -0.014324103482067585, -0.31524980068206787, -0.0007470439304597676, -0.007643855642527342, -0.0035798768512904644, -0.017632868140935898], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0038020957726985216, -5.972207145532593e-05, -9.48860906646587e-05, -0.7355550527572632, -1.2516897186287679e-05, -3.576272320060525e-06, -4.6491513785440475e-06, -4.351044481154531e-05, -0.12741869688034058], "finish_reason": "stop"}], "metrics": {"energy": 526.686662164688, "energy_per_token": 5.064294828506615, "time": 12.771426, "time_per_token": 0.12280217307692308}}
{"outputs": [{"text": " re.split(r'[.?!]', text)", "tokens": [" re", ".", "split", "(", "r", "'", "[", ".", "?", "!", "]", "'", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -0.210494264960289, -0.8262971043586731, -0.23045915365219116, -0.3023725748062134, -1.0320537090301514, -0.02170347422361374, -0.7701975703239441, -0.07436037808656693, -0.004681815858930349, -0.06149321049451828, -0.05698799714446068, -0.1969054937362671], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, start=1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " start", "=", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -0.41565075516700745, -0.010401562787592411, -0.0028347091283649206, -0.0001479277852922678, -0.0032234634272754192], "finish_reason": "stop"}, {"text": " sentence.strip() == \"\":", "tokens": [" sentence", ".", "strip", "()", " ==", " \"", "\":", "\n"], "logprobs": [-0.37281137704849243, -2.440157413482666, -0.0108379777520895, -1.0273367166519165, -0.30534490942955017, -0.11593353003263474, -0.0038541099056601524, -0.06191450357437134], "finish_reason": "stop"}, {"text": " re.split(r\"\\s+\", sentence.strip())", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", "s", "+", "\"", ",", " sentence", ".", "strip", "())", "\n"], "logprobs": [-2.159501552581787, -6.246371776796877e-05, -0.37976086139678955, -0.0029013941530138254, -0.006485012359917164, -0.009823550470173359, -0.02337471954524517, -0.03582490235567093, -0.1073206216096878, -0.0016473069554194808, -0.00026556302327662706, -0.000924993772059679, -1.1407346725463867, -0.014488021843135357, -0.02223152667284012, -0.006135556846857071], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.05087625980377197, -0.1385490894317627, -0.028760679066181183, -0.0001113352773245424, -5.185469490243122e-05, -0.00023600654094479978, -0.0008167268824763596, -0.022687282413244247, -0.09821198135614395, -6.496695277746767e-05, -0.048933614045381546, -4.529942543740617e-06, -0.00019429226813372225, -7.152531907195225e-06, -4.6491513785440475e-06, -0.1229657307267189, -0.003666466102004051], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0030077716801315546, -0.0017414417816326022, -0.0030541226733475924, -0.0006472161621786654, -0.0027318797074258327], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.49152183532714844, -0.00010442188795423135, -0.017416512593626976, -0.0061093722470104694, -0.004843170288950205, -3.4570634852570947e-06, -2.610649426060263e-05, -0.07633150368928909, -0.013445300981402397], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts"], "logprobs": [-0.0049550351686775684, -4.9470632802695036e-05, -9.512448741588742e-05], "finish_reason": "stop"}], "metrics": {"energy": 406.52191236114516, "energy_per_token": 4.672665659323507, "time": 10.298104, "time_per_token": 0.11836901149425287}}
{"outputs": [{"text": " re.split('[?.!]', text)", "tokens": [" re", ".", "split", "('", "[", "?", ".", "!", "]", "'", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.8906705379486084, -0.7847096920013428, -1.724327564239502, -0.4311915934085846, -0.08038073033094406, -0.07584430277347565, -0.1832531839609146, -0.00584642356261611, -0.19941355288028717, -0.05527311936020851, -0.19151780009269714], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, 1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " ", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -1.1312803030014038, -0.005320199765264988, -0.0002351722796447575, -0.00497662415727973], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " sentence.strip().split(\" \")", "tokens": [" sentence", ".", "strip", "()", ".", "split", "(", "\"", " \"", ")", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -1.9985865354537964, -0.005083018448203802, -0.0022367238998413086, -0.01146773062646389, -1.9330512285232544, -0.004760005045682192, -0.0004574206250254065, -0.0003970073303207755, -0.005457028280943632], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -0.1621892899274826, -0.0033734100870788097], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0038443722296506166, -0.0017651228699833155, -0.00315644359216094, -0.0007599088130518794, -0.002636886900290847], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.5975254774093628, -0.00011944057769142091, -0.023756038397550583, -0.006020861677825451, -0.005418851040303707, -3.2186455882765586e-06, -3.8742269680369645e-05, -0.04638191685080528, -0.011473151855170727], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.004048604518175125, -5.674201020156033e-05, -0.00011622230522334576, -0.7526333928108215, -1.2397689715726301e-05, -3.814689989667386e-06, -6.437280717364047e-06, -4.7444173105759546e-05, -2.136568069458008, -0.006698652636259794], "finish_reason": "stop"}], "metrics": {"energy": 393.269580230713, "energy_per_token": 4.855180002848309, "time": 10.322604, "time_per_token": 0.12743955555555556}}
{"outputs": [{"text": " [\"Sentence \" + str(i+1) for i in range(len(re.findall(r'\\b[^.?!\\s]+[^?!]', text)))]", "tokens": [" [", "\"", "Sent", "ence", " \"", " +", " str", "(", "i", "+", "1", ")", " for", " i", " in", " range", "(", "len", "(", "re", ".", "find", "all", "(", "r", "'\\", "b", "[", "^", ".", "?", "!", "\\", "s", "]+", "[", "^", "?", "!", "]", "'", ",", " text", "))", ")]", "\n"], "logprobs": [-2.6476800441741943, -3.985161781311035, -0.5108391046524048, -0.0003432638186495751, -0.4830879271030426, -0.12549924850463867, -0.03170143440365791, -0.004342293832451105, -0.1714523434638977, -0.895994246006012, -0.0008910499745979905, -0.014431270770728588, -0.013217921368777752, -0.0007977878558449447, -0.2687293291091919, -0.0436098538339138, -0.008213906548917294, -0.16257399320602417, -0.026175498962402344, -0.2353656142950058, -0.00028832571115344763, -1.3921959400177002, -8.332382276421413e-05, -0.1700039505958557, -0.17533762753009796, -1.8237839937210083, -0.7432042956352234, -0.9269576072692871, -1.5395586490631104, -0.18607380986213684, -1.4195841550827026, -0.027335423976182938, -1.651444911956787, -0.05602700635790825, -1.2921981811523438, -0.15023073554039001, -1.110978364944458, -1.7826766967773438, -0.11289017647504807, -2.1928110122680664, -1.6038355827331543, -0.007357998285442591, -0.19368106126785278, -0.06597185879945755, -0.021365482360124588, -0.08130036294460297], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " not sentence:", "tokens": [" not", " sentence", ":", "\n"], "logprobs": [-1.4460992813110352, -0.010175967589020729, -0.0816960409283638, -0.09329592436552048], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.2874165177345276, -0.0005036516231484711, -0.17851616442203522, -0.07100287824869156, -0.00679562846198678], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04385107755661011, -0.14557938277721405, -0.027040405198931694, -9.500529267825186e-05, -4.9470632802695036e-05, -0.00024720950750634074, -0.000785280775744468, -0.020681682974100113, -0.11753091961145401, -7.271502545336261e-05, -0.03993968665599823, -5.006777428206988e-06, -0.00020132421923335642, -5.245195097813848e-06, -6.794906312279636e-06, -0.13043412566184998, -0.0037488911766558886], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0030433074571192265, -0.0019315887475386262, -0.002581598935648799, -0.0005666795768775046, -0.003012050176039338], "finish_reason": "stop"}, {"text": " {f\"Sentence {i+1}\": sentence_counts[f\"Sentence {i+1}\"] for i in range(len(sentence_counts))}", "tokens": [" {", "f", "\"", "Sent", "ence", " {", "i", "+", "1", "}", "\":", " sentence", "_", "counts", "[", "f", "\"", "Sent", "ence", " {", "i", "+", "1", "}\"", "]", " for", " i", " in", " range", "(", "len", "(", "sentence", "_", "counts", "))", "}", "\n"], "logprobs": [-1.0949172973632812, -2.5334067344665527, -0.019216090440750122, -0.010687140747904778, -7.998623186722398e-05, -0.0026041902601718903, -0.055169787257909775, -0.3532053530216217, -0.0006597249885089695, -0.00335962837561965, -0.0005856229108758271, -1.2873831987380981, -0.009362010285258293, -0.01046986784785986, -0.040039218962192535, -0.14082449674606323, -9.500529267825186e-05, -0.00011300401820335537, -2.622600959512056e-06, -0.0002648479712661356, -0.00014423283573705703, -0.0015387610765174031, -9.214453893946484e-05, -0.00023874769976828247, -0.00117649941239506, -0.043813541531562805, -0.0010434903670102358, -0.006777276284992695, -0.0035816587042063475, -0.00294775003567338, -0.028545213863253593, -0.00028796817059628665, -0.07299958169460297, -2.1219027985353023e-05, -1.8000440832111053e-05, -0.09366386383771896, -0.12449067831039429, -0.016444390639662743], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0038020957726985216, -5.972207145532593e-05, -9.48860906646587e-05, -0.7355550527572632, -1.2516897186287679e-05, -3.576272320060525e-06, -4.6491513785440475e-06, -4.351044481154531e-05, -0.12741869688034058], "finish_reason": "stop"}], "metrics": {"energy": 601.6986035261156, "energy_per_token": 4.524049650572297, "time": 15.124009, "time_per_token": 0.11371435338345864}}
{"outputs": [{"text": " re.split('\\.\\s*', text)", "tokens": [" re", ".", "split", "('", "\\", ".", "\\", "s", "*", "'", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.8906705379486084, -1.1076295375823975, -0.06731727719306946, -1.7486217021942139, -0.03074333630502224, -0.943530797958374, -0.057093389332294464, -0.007942048832774162, -0.11905940622091293, -0.030336689203977585, -0.2328414022922516], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences, start=1):", "tokens": [" in", " enumerate", "(", "sent", "ences", ",", " start", "=", "1", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.7159256339073181, -0.41565075516700745, -0.010401562787592411, -0.0028347091283649206, -0.0001479277852922678, -0.0032234634272754192], "finish_reason": "stop"}, {"text": " sentence:  # check if sentence is not empty", "tokens": [" sentence", ":", "  ", "#", " check", " if", " sentence", " is", " not", " empty", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -2.772082805633545, -0.0007553822943009436, -2.204725503921509, -0.3166269063949585, -0.47881799936294556, -0.007163080852478743, -0.10194651037454605, -0.004634947050362825, -0.026033230125904083], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -0.1601160317659378, -0.0665273517370224, -0.006713928189128637], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS and word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -0.16247378289699554, -0.02666730247437954, -0.00011038171214750037, -4.5536911784438416e-05, -0.0002157455455744639, -0.0008001701789908111, -0.020647820085287094, -0.09838270395994186, -7.56950321374461e-05, -0.04539507254958153, -6.437280717364047e-06, -0.00017355366435367614, -6.198863957251888e-06, -5.125986263010418e-06, -1.9320008754730225, -0.25718072056770325, -2.8407304286956787, -0.0009758477681316435, -1.7257320880889893, -5.328513361746445e-05, -0.0010745710460469127, -6.365573790390044e-05, -3.969590397900902e-05, -0.267461359500885, -0.01833888702094555], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0031351721845567226, -0.001692411839030683, -0.002593251410871744, -0.0007943335804156959, -0.0024994343984872103], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.48279130458831787, -0.00013147920253686607, -0.024982603266835213, -0.006339558865875006, -0.004331136588007212, -2.622600959512056e-06, -4.0411134250462055e-05, -0.05777311325073242, -0.015841934829950333], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "\n"], "logprobs": [-0.00455746054649353, -6.01988795096986e-05, -9.524368942948058e-05, -1.024986743927002], "finish_reason": "stop"}], "metrics": {"energy": 420.2439326763154, "energy_per_token": 4.8303900307622465, "time": 10.947642, "time_per_token": 0.12583496551724138}}
{"outputs": [{"text": " re.split('[?.!] ', text)", "tokens": [" re", ".", "split", "('", "[", "?", ".", "!", "]", " '", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.8906705379486084, -0.7847096920013428, -1.724327564239502, -0.4311915934085846, -0.08038073033094406, -0.07584430277347565, -1.959420084953308, -0.009606444276869297, -0.1423373520374298, -0.025017600506544113, -0.10028541088104248], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " sentence:", "tokens": [" sentence", ":", "\n"], "logprobs": [-0.37281137704849243, -0.4123977720737457, -0.10037555545568466], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.3099592626094818, -0.00042298430344089866, -0.1601160317659378, -0.0665273517370224, -0.006713928189128637], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04794542118906975, -1.9973584413528442, -0.024078793823719025, -0.0011719746980816126, -4.124556289752945e-05, -0.0001481661747675389, -0.00029797881143167615, -0.014865108765661716, -0.11428392678499222, -7.939023635117337e-05, -0.056236520409584045, -7.390948667307384e-06, -0.00020239688456058502, -6.9141146923357155e-06, -7.033323527139146e-06, -0.14676973223686218, -0.006392625626176596], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.004036019556224346, -0.0016526625258848071, -0.0022024677600711584, -0.0008668717346154153, -0.0031701093539595604], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts)", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ")", "\n"], "logprobs": [-0.4452364444732666, -9.369411418447271e-05, -0.016333451494574547, -0.005344626493752003, -0.0045343199744820595, -3.2186455882765586e-06, -3.9934315282152966e-05, -0.061189375817775726, -0.01259032916277647], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts"], "logprobs": [-0.0036157488357275724, -5.602679812000133e-05, -8.868777513271198e-05], "finish_reason": "stop"}], "metrics": {"energy": 391.8198436698913, "energy_per_token": 6.027997594921405, "time": 10.519905, "time_per_token": 0.1618446923076923}}
{"outputs": [{"text": " re.split(\"[!?.]\\s\", text)", "tokens": [" re", ".", "split", "(", "\"", "[", "!", "?", ".", "]\\", "s", "\"", ",", " text", ")", "\n"], "logprobs": [-0.2771584391593933, -0.0007013006834313273, -0.23619826138019562, -0.5355679988861084, -1.8543503284454346, -0.6497036814689636, -2.5834157466888428, -1.0307978391647339, -0.08540825545787811, -0.5114063620567322, -0.03960253298282623, -1.73321533203125, -0.006721269339323044, -0.09436692297458649, -0.03881493955850601, -0.14622484147548676], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.356681227684021, -0.004393330309540033], "finish_reason": "stop"}, {"text": " in enumerate(sentences):", "tokens": [" in", " enumerate", "(", "sent", "ences", "):", "\n"], "logprobs": [-0.0004209585895296186, -0.0007136897183954716, -0.0002321927313460037, -0.002120985882356763, -0.00032729512895457447, -0.6822075247764587, -0.0006887924391776323], "finish_reason": "stop"}, {"text": " not sentence:", "tokens": [" not", " sentence", ":", "\n"], "logprobs": [-1.4460992813110352, -0.010175967589020729, -0.0816960409283638, -0.09329592436552048], "finish_reason": "stop"}, {"text": " sentence.split()", "tokens": [" sentence", ".", "split", "()", "\n"], "logprobs": [-0.2874165177345276, -0.0005036516231484711, -0.17851616442203522, -0.07100287824869156, -0.00679562846198678], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.04385107755661011, -0.14557938277721405, -0.027040405198931694, -9.500529267825186e-05, -4.9470632802695036e-05, -0.00024720950750634074, -0.000785280775744468, -0.020681682974100113, -0.11753091961145401, -7.271502545336261e-05, -0.03993968665599823, -5.006777428206988e-06, -0.00020132421923335642, -5.245195097813848e-06, -6.794906312279636e-06, -0.13043412566184998, -0.0037488911766558886], "finish_reason": "stop"}, {"text": " len(words)", "tokens": [" len", "(", "words", ")", "\n"], "logprobs": [-0.0030433074571192265, -0.0019315887475386262, -0.002581598935648799, -0.0005666795768775046, -0.003012050176039338], "finish_reason": "stop"}, {"text": " pd.Series(sentence_counts, name=\"Word Count\")", "tokens": [" pd", ".", "Series", "(", "sentence", "_", "counts", ",", " name", "=", "\"", "Word", " Count", "\"", ")", "\n"], "logprobs": [-0.5685730576515198, -0.00011932138295378536, -0.024914700537919998, -0.00708058150485158, -0.004454452078789473, -3.4570634852570947e-06, -4.053033626405522e-05, -2.6696219444274902, -0.5143508911132812, -0.03814170882105827, -0.008686021901667118, -0.6519942283630371, -0.15469133853912354, -0.1328449547290802, -0.01953856088221073, -0.026030907407402992], "finish_reason": "stop"}, {"text": " sentence_counts", "tokens": [" sentence", "_", "counts", "\n"], "logprobs": [-0.004831900354474783, -5.328513361746445e-05, -8.594620157964528e-05, -1.010763168334961], "finish_reason": "stop"}], "metrics": {"energy": 374.2662678880692, "energy_per_token": 4.924556156421963, "time": 9.910475, "time_per_token": 0.13040098684210527}}
