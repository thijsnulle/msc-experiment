{"outputs": [{"text": " text1.replace('_', ' ')", "tokens": [" text", "1", ".", "replace", "('", "_", "'", ",", " '", " '", ")", "\n"], "logprobs": [-0.8764830231666565, -0.0015310243470594287, -0.0011136289685964584, -2.403093099594116, -0.3318893015384674, -3.071531057357788, -0.004698901902884245, -0.0002233732520835474, -0.04434202238917351, -0.21656180918216705, -0.0008006466086953878, -1.2207934856414795], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.000814582861494273, -5.2569914259947836e-05, -6.437094270950183e-05, -0.000785161682870239, -0.0002366024418734014, -0.00263795698992908, -4.172316494077677e-06, -8.106198947643861e-06, -0.0002343380037928, -1.728519782773219e-05, -3.6954811548639555e-06, -0.00014983485743869096, -0.00026341783814132214, -2.586808113846928e-05, -0.06624211370944977, -0.0001134808044298552, -4.935142715112306e-05, -0.0002786724944598973], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.6329809427261353, -0.009674095548689365, -0.04678482562303543, -0.00018654513405635953, -0.0043724412098526955, -0.013807966373860836, -0.015478597953915596, -0.08435774594545364], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001842805795604363, -0.00013195598148740828, -8.999896090244874e-05, -0.00146793806925416, -6.09140915912576e-05, -0.00010466027742950246, -0.00017629499780014157, -0.0006399490521289408], "finish_reason": "stop"}, {"text": " len(vec1 & vec2)", "tokens": [" len", "(", "vec", "1", " &", " vec", "2", ")", "\n"], "logprobs": [-1.6620451211929321, -0.0053151012398302555, -1.1714789867401123, -0.00498706242069602, -0.1751667559146881, -2.372236667724792e-05, -0.00018249277491122484, -0.002741866046562791, -0.029367094859480858], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.008195934817194939, -0.279392808675766, -0.002953336341306567, -0.0006820021662861109, -0.0013988957507535815, -0.25270283222198486, -0.020251529291272163, -0.01533433049917221, -0.00019214690837543458, -0.0005270045949146152, -0.0003840185818262398, -0.0003090619284193963, -3.0397906812140718e-05, -0.0033738852944225073, -1.490105023549404e-05, -4.565611743601039e-05, -0.0007886160165071487, -0.0005621521850116551, -0.001817719079554081], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.10052434355020523, -0.004679324571043253, -0.01693502441048622, -0.0009833505610004067, -0.0004677870310842991, -0.02415885403752327, -0.0006046851049177349, -0.17284560203552246, -0.0013305629836395383, -0.00016544880054425448, -0.0024097710847854614, -1.6689160474925302e-05, -7.724463648628443e-05, -0.7073013782501221, -0.000819466426037252, -0.03660405054688454], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00014685506175737828, -5.721882189391181e-05, -5.8530047681415454e-05, -0.0027594605926424265, -2.4318398573086597e-05, -0.0016788449138402939, -7.986703712958843e-05, -0.0021274094469845295, -0.0001445904199499637, -0.0005760917556472123, -7.629365427419543e-06, -4.887569048150908e-06, -0.00015722469834145159, -0.0021145620848983526, -4.2914423829643056e-05, -7.033323527139146e-06, -9.536738616588991e-07, -2.6940935640595853e-05, -0.0002759314374998212], "finish_reason": "stop"}, {"text": " (sum1 * sum2)**0.5", "tokens": [" (", "sum", "1", " *", " sum", "2", ")**", "0", ".", "5", "\n"], "logprobs": [-1.779463529586792, -0.18913517892360687, -0.008318065665662289, -1.029913067817688, -0.019313614815473557, -0.0003461238811723888, -0.07219494879245758, -0.13956940174102783, -1.4185804502631072e-05, -0.000259365770034492, -0.016278093680739403], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.33416295051574707, -0.10043787956237793, -0.0007220283732749522, -0.00012540031457319856, -0.0733170211315155, -0.045023173093795776], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.017211126163601875, -0.17033246159553528, -0.7203081846237183, -0.027336932718753815, -0.024796906858682632], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.35986679792404175, -3.933898824470816e-06, -0.06057817116379738, -0.020176412537693977, -0.004847559612244368], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.11428648233413696, -0.0051469444297254086, -0.009057859890162945, -0.017508940771222115, -0.02811460569500923, -0.004296714439988136, -0.00024637524620629847, -0.004263834562152624, -0.010045683942735195], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")", "\n"], "logprobs": [-0.7205929160118103, -0.014880376867949963, -2.3841574147809297e-05, -4.529942543740617e-06, -0.0001528146385680884, -1.6569954823353328e-05, -0.0011817384511232376, -0.01612350158393383, -3.2186455882765586e-06, -0.0001867835089797154, -1.3947389561508317e-05, -6.007967749610543e-05, -4.172316494077677e-06, -0.24692058563232422, -0.3207833468914032], "finish_reason": "stop"}], "metrics": {"energy": 219.08599534988394, "energy_per_token": 1.3692874709367746, "time": 9.895069, "time_per_token": 0.06184418125}}
{"outputs": [{"text": " text1.strip()", "tokens": [" text", "1", ".", "strip", "()", "\n"], "logprobs": [-1.1542071104049683, -0.0016742035513743758, -0.0013904437655583024, -1.4297356605529785, -0.04186294227838516, -2.29026460647583], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0008107712492346764, -7.021180499577895e-05, -6.5205356804654e-05, -0.0009264229447580874, -0.00014351768186315894, -0.0026815906167030334, -3.6954811548639555e-06, -8.821448318485636e-06, -0.00024720950750634074, -1.4305012882687151e-05, -3.099436753473128e-06, -0.0001720042055239901, -0.00028200942324474454, -3.135155202471651e-05, -0.05578971654176712, -0.00012206286191940308, -5.2927523938706145e-05, -0.0002898749662563205], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.6533871293067932, -0.00956275686621666, -0.04450257495045662, -0.0002525725867599249, -0.005560881923884153, -0.013390136882662773, -0.019628221169114113, -0.07954920828342438], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00016032364510465413, -0.0001289761275984347, -7.354942499659956e-05, -0.0013550871517509222, -6.544376083184034e-05, -9.178694017464295e-05, -0.0001461399078834802, -0.0006400682032108307], "finish_reason": "stop"}, {"text": " sum(min(vec1.values(), vec2.values()) if i in vec1.keys() and i in vec2.keys() else 0 for i in vec1.keys())", "tokens": [" sum", "(", "min", "(", "vec", "1", ".", "values", "()", ",", " vec", "2", ".", "values", "())", " if", " i", " in", " vec", "1", ".", "keys", "()", " and", " i", " in", " vec", "2", ".", "keys", "()", " else", " ", "0", " for", " i", " in", " vec", "1", ".", "keys", "())", "\n"], "logprobs": [-2.0072202682495117, -0.15369431674480438, -1.1264164447784424, -0.0010757618583738804, -0.0049362932331860065, -0.002765285549685359, -0.13473360240459442, -0.30819612741470337, -0.0068284254521131516, -0.0009803733555600047, -0.4039894938468933, -0.0011969790793955326, -0.0011531615164130926, -0.10143588483333588, -0.8018143773078918, -3.243499517440796, -2.5532591342926025, -0.2575134038925171, -0.00827183946967125, -0.23083172738552094, -2.5016558170318604, -0.003796395380049944, -0.0019281383138149977, -1.1260416507720947, -0.02598131261765957, -0.00048673225683160126, -0.00022182388056535274, -0.0026934794150292873, -0.001907911617308855, -0.001262106467038393, -0.0013198483502492309, -0.026862286031246185, -0.013985605910420418, -0.004428935702890158, -0.1354999840259552, -0.001525192055851221, -0.0042580184526741505, -0.17935584485530853, -0.11599075049161911, -0.12281929701566696, -0.006316459737718105, -0.05842212587594986, -0.013622887432575226], "finish_reason": "stop"}, {"text": " sum([vec1[k] * vec2[k] for k in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "k", "]", " *", " vec", "2", "[", "k", "]", " for", " k", " in", " intersection", "])", "\n"], "logprobs": [-0.009696290828287601, -0.27243584394454956, -0.003212174866348505, -0.0006642519147135317, -0.0018556771101430058, -2.86795711517334, -0.011982249096035957, -0.010093008168041706, -0.0002648479712661356, -0.0004898302140645683, -0.0003424296446610242, -2.825220326485578e-05, -3.8742269680369645e-05, -0.002721774624660611, -9.775113539944869e-06, -2.4318398573086597e-05, -0.00043525759247131646, -0.0007805161876603961, -0.0018033209489658475], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1.keys()])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", ".", "keys", "()", "])", "\n"], "logprobs": [-0.11275216937065125, -0.0074036745354533195, -0.022331319749355316, -0.0010096696205437183, -0.0004764852055814117, -0.021042902022600174, -0.000602421467192471, -0.17515243589878082, -0.0015912501839920878, -0.00022790218645241112, -0.0027233201544731855, -2.312633478140924e-05, -8.439661905867979e-05, -0.4491903781890869, -0.005566334817558527, -0.946718692779541, -0.0028419604059308767, -6.997340824455023e-05, -0.0025311834178864956, -0.050622787326574326], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.0001752223033690825, -7.331102824537084e-05, -5.817244164063595e-05, -0.0032926176209002733, -2.109982233378105e-05, -0.002060435013845563, -8.844937838148326e-05, -0.0020783983636647463, -0.0001323135511483997, -0.0005038899253122509, -8.34461570775602e-06, -2.7418097943154862e-06, -0.00013767725613433868, -0.0022256621159613132, -4.482168878894299e-05, -9.298280929215252e-06, -7.152555099310121e-07, -2.8371408916427754e-05, -0.0003103728231508285], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.55339115858078, -1.0371154530730564e-05, -0.015190745703876019, -0.0012722263345494866, -0.006516516208648682, -0.0009532198309898376, -0.06087770685553551, -0.000912250077817589, -0.0002914242504630238, -0.0002494739310350269, -9.297892393078655e-05, -3.325883881188929e-05, -0.00027021096320822835, -0.00017927470616996288, -0.00017593742813915014, -0.006820966489613056], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.30912697315216064, -0.09720675647258759, -0.0008278042078018188, -0.00011944057769142091, -0.06534279882907867, -0.042230989784002304], "finish_reason": "stop"}, {"text": " 1.0", "tokens": [" ", "1", ".", "0", "\n"], "logprobs": [-0.01826140098273754, -2.0250473022460938, -0.52577805519104, -0.016992688179016113, -0.10243966430425644], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.36698469519615173, -5.125986263010418e-06, -0.06351344287395477, -0.021096011623740196, -0.004745530430227518], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.14396469295024872, -0.004768072627484798, -0.007548263296484947, -0.016781117767095566, -0.02739063650369644, -0.004046705085784197, -0.0002506657037883997, -0.004878641106188297, -0.010771229863166809], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")", "\n"], "logprobs": [-0.8475258946418762, -0.015312612056732178, -2.5987286790041253e-05, -5.125986263010418e-06, -0.0001517419150331989, -1.728519782773219e-05, -0.0010931475553661585, -0.014017815701663494, -2.50339189733495e-06, -0.00017569905321579427, -1.2874520507466514e-05, -5.090107151772827e-05, -4.0531076592742465e-06, -0.2560366094112396, -0.35200265049934387], "finish_reason": "stop"}], "metrics": {"energy": 249.15148147583017, "energy_per_token": 1.2647283323646201, "time": 11.361894, "time_per_token": 0.05767458883248731}}
{"outputs": [{"text": " text1.strip().lower()", "tokens": [" text", "1", ".", "strip", "()", ".", "lower", "()", "\n"], "logprobs": [-1.0376732349395752, -0.0016193384071812034, -0.0012019798159599304, -1.2847809791564941, -0.03467421233654022, -0.09510254114866257, -0.07801133394241333, -0.0003313469351269305, -0.11387168616056442], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0008208957733586431, -7.164221460698172e-05, -7.462222856702283e-05, -0.0005776405450887978, -0.00015198028995655477, -0.002605498069897294, -3.6954811548639555e-06, -9.179073458653875e-06, -0.00024387246230617166, -1.490105023549404e-05, -3.2186455882765586e-06, -0.0001494772732257843, -0.0002488780301064253, -2.825220326485578e-05, -0.04760163277387619, -0.0001486429391661659, -4.625213477993384e-05, -0.0003093002596870065], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5084095597267151, -0.011578385718166828, -0.042779725044965744, -0.00021288513380568475, -0.0053563653491437435, -0.012591976672410965, -0.01960449106991291, -0.0875624418258667], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001668790791882202, -0.00015233787416946143, -7.557583012385294e-05, -0.0013825867790728807, -6.508615479106084e-05, -9.989239333663136e-05, -0.000179036331246607, -0.000625176471658051], "finish_reason": "stop"}, {"text": " sum(vec1.values())", "tokens": [" sum", "(", "vec", "1", ".", "values", "())", "\n"], "logprobs": [-1.7766668796539307, -0.17269816994667053, -0.3466629087924957, -0.007687389384955168, -0.8037397861480713, -0.020488528534770012, -0.525904655456543, -0.6179607510566711], "finish_reason": "stop"}, {"text": " sum([vec1[word] * vec2[word] for word in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "word", "]", " *", " vec", "2", "[", "word", "]", " for", " word", " in", " intersection", "])", "\n"], "logprobs": [-0.008997255004942417, -0.32750359177589417, -0.002968668704852462, -0.0006968930247239769, -0.001613387605175376, -1.766512393951416, -0.010161688551306725, -0.07066204398870468, -0.00038926175329834223, -0.0005635818815790117, -0.0004362108593340963, -0.0004101150552742183, -4.1483970562694594e-05, -0.008233296684920788, -4.2199197196168825e-05, -2.2291887944447808e-05, -0.0007338214782066643, -0.0008618692518211901, -0.00152757263276726], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1.keys()])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", ".", "keys", "()", "])", "\n"], "logprobs": [-0.07079566270112991, -0.005457739345729351, -0.018429825082421303, -0.0011524471919983625, -0.00042274597217328846, -0.02201266586780548, -0.0007098776986822486, -0.1998588591814041, -0.0016613503685221076, -0.0001774868869688362, -0.002683611586689949, -1.8715683836489916e-05, -7.10462118149735e-05, -0.5978413820266724, -0.004969625733792782, -0.8257154822349548, -0.004497057292610407, -6.031808152329177e-05, -0.002479576040059328, -0.05546192452311516], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.000176652567461133, -6.603976362384856e-05, -5.8887653722194955e-05, -0.0024123871698975563, -1.6927575416048057e-05, -0.002162381773814559, -0.00012587709352374077, -0.002663162536919117, -0.00013207517622504383, -0.0006148116663098335, -6.794906312279636e-06, -2.50339189733495e-06, -0.00017820201173890382, -0.0021021903958171606, -4.029192859889008e-05, -7.152531907195225e-06, -5.960462772236497e-07, -2.4914430468925275e-05, -0.00032026408007368445], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5153862237930298, -1.0132738680113107e-05, -0.01601698435842991, -0.0012250783620402217, -0.005824142601341009, -0.0009603655780665576, -0.05381062626838684, -0.0011710221879184246, -0.00030322244856506586, -0.0002631794777698815, -8.415821503149346e-05, -2.8729025871143676e-05, -0.00018249277491122484, -0.0001714082609396428, -0.00015710550360381603, -0.008218517526984215], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.336458683013916, -0.0882234051823616, -0.0009093916742131114, -0.00012587709352374077, -0.07358186691999435, -0.03853292390704155], "finish_reason": "stop"}, {"text": " 0", "tokens": [" ", "0", "\n"], "logprobs": [-0.0197649747133255, -0.15935344994068146, -0.7573391795158386], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.3995274305343628, -4.887569048150908e-06, -0.053766679018735886, -0.029514098539948463, -0.005163903348147869], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.11152508854866028, -0.0049483925104141235, -0.00843769870698452, -0.018113788217306137, -0.03222354128956795, -0.004192848224192858, -0.0002699726028367877, -0.004407453816384077, -0.010257739573717117], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")", "\n"], "logprobs": [-0.7761508822441101, -0.016907714307308197, -3.0397906812140718e-05, -5.006777428206988e-06, -0.00011967896716669202, -1.8000440832111053e-05, -0.0013003236381337047, -0.017002884298563004, -2.264974000354414e-06, -0.00019107422849629074, -1.3828182090946939e-05, -6.580135959666222e-05, -4.172316494077677e-06, -0.2685793340206146, -0.31831759214401245], "finish_reason": "stop"}], "metrics": {"energy": 250.92414870262152, "energy_per_token": 1.539411955230807, "time": 9.878849, "time_per_token": 0.06060643558282209}}
{"outputs": [{"text": " text1.lower()", "tokens": [" text", "1", ".", "lower", "()", "\n"], "logprobs": [-1.0046147108078003, -0.0015138844028115273, -0.0012747265864163637, -0.6633493304252625, -0.00040189296123571694, -0.9811396598815918], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0006642519147135317, -7.009260298218578e-05, -6.580135959666222e-05, -0.0005963454605080187, -0.00019965562387369573, -0.0021588134113699198, -4.0531076592742465e-06, -7.867782187531702e-06, -0.00029523781267926097, -1.8954096958623268e-05, -2.145764938177308e-06, -0.00014411364099942148, -0.00022873646230436862, -2.4914430468925275e-05, -0.05945450812578201, -0.00013350549852475524, -4.2437604861333966e-05, -0.00023707917716819793], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5587671399116516, -0.010334196500480175, -0.04862389340996742, -0.0001915509783430025, -0.006958181504160166, -0.01666623167693615, -0.017583556473255157, -0.08457126468420029], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001387499796692282, -0.00013374387344811112, -7.712543447269127e-05, -0.0014281797921285033, -6.997340824455023e-05, -0.00010883215873036534, -0.00012575789878610522, -0.0006450717919506133], "finish_reason": "stop"}, {"text": " set(vec1).intersection(vec2)", "tokens": [" set", "(", "vec", "1", ")", ".", "inter", "section", "(", "vec", "2", ")", "\n"], "logprobs": [-0.6922948956489563, -0.0001728385395836085, -0.0005240259342826903, -0.0022639615926891565, -1.8816381692886353, -1.1237916946411133, -6.270212179515511e-05, -0.000277123210253194, -0.0008336406317539513, -0.15521152317523956, -0.00046266341814771295, -0.003480450250208378, -0.008648204617202282], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.011727085337042809, -0.3041468858718872, -0.0026645890902727842, -0.0007476395112462342, -0.0017323975916951895, -0.29422855377197266, -0.018901238217949867, -0.015421433374285698, -0.0002455409849062562, -0.0004925706889480352, -0.0003620922507252544, -0.000285227142740041, -2.7417760065873154e-05, -0.0030515079852193594, -1.7404405298293568e-05, -4.768258077092469e-05, -0.0006998711614869535, -0.0006301801186054945, -0.0017288275994360447], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1.keys()])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", ".", "keys", "()", "])", "\n"], "logprobs": [-0.07330239564180374, -0.007109581492841244, -0.021556250751018524, -0.0010126468259841204, -0.00041559641249477863, -0.02292591892182827, -0.0006780709372833371, -0.18552428483963013, -0.0014041336253285408, -0.00019071667338721454, -0.0025755350943654776, -1.7881233361549675e-05, -6.723177648382261e-05, -0.6541293263435364, -0.005272767972201109, -1.3400566577911377, -0.005114804022014141, -6.031808152329177e-05, -0.003590923734009266, -0.07686151564121246], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00015889335190877318, -4.8993817472364753e-05, -6.723177648382261e-05, -0.0026610223576426506, -1.7762025890988298e-05, -0.0018523454200476408, -8.511180931236595e-05, -0.0022751418873667717, -0.00013064485392533243, -0.0004956685588695109, -7.152531907195225e-06, -3.576272320060525e-06, -0.0001392267586197704, -0.002220071852207184, -3.218599158572033e-05, -6.9141146923357155e-06, -8.344646857949556e-07, -3.0517112463712692e-05, -0.00028427375946193933], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5147596001625061, -9.65590606938349e-06, -0.01722530461847782, -0.0013053239090368152, -0.004786106292158365, -0.0009647720726206899, -0.06197232007980347, -0.0010689741466194391, -0.00029380773776210845, -0.0002047805901383981, -8.201262971851975e-05, -3.218599158572033e-05, -0.00017248096992261708, -0.00016473367577418685, -0.00015925093612167984, -0.006721979938447475], "finish_reason": "stop"}, {"text": " denominator == 0.0:", "tokens": [" denominator", " ==", " ", "0", ".", "0", ":", "\n"], "logprobs": [-0.28456220030784607, -0.08839507400989532, -0.0008662762120366096, -0.00011777184408856556, -2.6757633686065674, -0.016567744314670563, -0.003181754844263196, -0.06090821698307991], "finish_reason": "stop"}, {"text": " 0", "tokens": [" ", "0", "\n"], "logprobs": [-0.016973115503787994, -0.1557573527097702, -0.6566913723945618], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.39199820160865784, -4.6491513785440475e-06, -0.07774854451417923, -0.028171280398964882, -0.004656780045479536], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.10396548360586166, -0.00483296811580658, -0.009127911180257797, -0.019058208912611008, -0.022349273785948753, -0.0038750097155570984, -0.00021944021864328533, -0.004492547363042831, -0.011560474522411823], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.7509312629699707, -7.390948667307384e-06, -0.00034195298212580383, -9.65590606938349e-06, -0.00217189802788198, -0.011214438825845718, -2.3841830625315197e-06, -0.00013004888023715466, -1.4305012882687151e-05, -1.3828182090946939e-05, -3.2186455882765586e-06, -0.7554105520248413], "finish_reason": "stop"}], "metrics": {"energy": 215.2279313449859, "energy_per_token": 1.312365435030402, "time": 9.885759, "time_per_token": 0.06027901829268293}}
{"outputs": [{"text": " text1.translate(str.maketrans('', '', string.punctuation)).lower()", "tokens": [" text", "1", ".", "translate", "(", "str", ".", "mak", "et", "rans", "('", "'", ",", " ''", ",", " string", ".", "punct", "uation", "))", ".", "lower", "()", "\n"], "logprobs": [-0.9270576238632202, -0.0015063855098560452, -0.0012472239322960377, -2.0400257110595703, -0.05747838690876961, -0.07367788255214691, -4.470248313737102e-05, -3.3854863431770355e-05, -2.5033637939486653e-05, -0.001632549217902124, -0.2331695556640625, -0.006027615629136562, -2.0265373677830212e-05, -0.03439195081591606, -0.00010084597306558862, -1.663536787033081, -0.0005912224878557026, -0.004102268256247044, -0.00019464982324279845, -0.05023842677474022, -0.26775479316711426, -0.28645217418670654, -0.0003289635351393372, -0.27982959151268005], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.000639710808172822, -6.23445157543756e-05, -9.16677454370074e-05, -0.0005131834768690169, -0.00021908267808612436, -0.0025133469607681036, -3.933898824470816e-06, -6.079655122448457e-06, -0.00025519452174194157, -1.4662635294371285e-05, -2.0265558760002023e-06, -0.00017641419253777713, -0.00023719835735391825, -2.9205850296420977e-05, -0.038979820907115936, -0.00013743886665906757, -4.0411134250462055e-05, -0.0002699726028367877], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5463948249816895, -0.010814864188432693, -0.0410456620156765, -0.00022599527437705547, -0.004966304171830416, -0.01335626095533371, -0.017417099326848984, -0.083543561398983], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00016115797916427255, -0.00013255194062367082, -9.619726915843785e-05, -0.0015470929211005569, -7.545663538621739e-05, -0.00010334911348763853, -0.00016091958968900144, -0.0006501944735646248], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.5840643048286438, -0.00018130090029444546, -0.0005295066512189806, -0.0023135582450777292, -0.1492110639810562, -0.002009992953389883, -9.83428253675811e-05, -0.4458979368209839, -0.000271521887043491, -0.00014602071314584464, -2.5033637939486653e-05, -0.0008347125840373337, -0.00034254882484674454, -5.9960475482512265e-05, -5.185469490243122e-05, -0.008891512639820576], "finish_reason": "stop"}, {"text": " sum(vec1[x] * vec2[x] for x in intersection)", "tokens": [" sum", "(", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", ")", "\n"], "logprobs": [-0.010461374185979366, -1.5137386322021484, -0.0012743694242089987, -0.0013755630934610963, -0.0409357026219368, -0.15551503002643585, -0.00978860817849636, -0.02001260593533516, -0.000359351426595822, -0.0006503135664388537, -0.0002803409588523209, -0.00047017011092975736, -2.8013790142722428e-05, -0.0018716213526204228, -6.437280717364047e-06, -2.253030106658116e-05, -0.0003670972364488989, -0.0013818725710734725, -0.0022134108003228903], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.10359099507331848, -0.005574396345764399, -0.013450123369693756, -0.0009776342194527388, -0.0004657614335883409, -0.01818765513598919, -0.000543446687515825, -0.18605946004390717, -0.0018216458847746253, -0.00018010901112575084, -0.0022827538195997477, -1.811964830267243e-05, -7.843663479434326e-05, -0.576187252998352, -0.004485545679926872, -0.5740748643875122, -0.23281466960906982], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00014649749209638685, -5.8053239627042785e-05, -6.639736966462806e-05, -0.002869894728064537, -1.490105023549404e-05, -0.0018891122890636325, -9.798523387871683e-05, -0.002324500121176243, -0.00013565097469836473, -0.0006750926841050386, -7.271740287251305e-06, -2.7418097943154862e-06, -0.00016091958968900144, -0.0021488212514668703, -4.172238186583854e-05, -7.152531907195225e-06, -4.768370445162873e-07, -2.6225699912174605e-05, -0.00030048147891648114], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.491621732711792, -1.2755313036905136e-05, -0.013706495054066181, -0.001320324488915503, -0.00556953577324748, -0.0007412070408463478, -0.05240515619516373, -0.001077905297279358, -0.00026890001026913524, -0.0002965487365145236, -8.737658936297521e-05, -2.5629668016335927e-05, -0.00021062063751742244, -0.0001728385395836085, -0.0001560327800689265, -0.006325462367385626], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.28542864322662354, -0.07402854412794113, -0.0007543102256022394, -0.00011777184408856556, -0.08918536454439163, -0.045168232172727585], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.01704191043972969, -0.1418476700782776, -0.7039195895195007, -0.02754802070558071, -0.027614004909992218], "finish_reason": "stop"}, {"text": " 1.0 - (numerator / denominator)", "tokens": [" ", "1", ".", "0", " -", " (", "n", "umer", "ator", " /", " denominator", ")", "\n"], "logprobs": [-2.612880229949951, -0.064896360039711, -0.2051539570093155, -0.01077358890324831, -1.1917099952697754, -0.2544161379337311, -0.2811618149280548, -1.7881377516459906e-06, -3.2186455882765586e-06, -0.06331261247396469, -0.04370160400867462, -0.0012156723532825708, -0.010627225041389465], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.11883491277694702, -0.006252727005630732, -0.008878752589225769, -0.016631174832582474, -0.026584424078464508, -0.004073536954820156, -0.0002406545972917229, -0.0045935348607599735, -0.010883849114179611], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")", "\n"], "logprobs": [-0.7164692878723145, -0.015326229855418205, -2.52720492426306e-05, -4.887569048150908e-06, -0.00014983485743869096, -2.0503786799963564e-05, -0.0011944787111133337, -0.014756930992007256, -2.50339189733495e-06, -0.0001854724541772157, -1.3232143828645349e-05, -6.294052582234144e-05, -3.6954811548639555e-06, -0.27824822068214417, -0.31269896030426025], "finish_reason": "stop"}], "metrics": {"energy": 247.45612624549855, "energy_per_token": 1.282156094536262, "time": 11.1410675, "time_per_token": 0.05772573834196891}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.9370049238204956, -2.9801878554280847e-05, -4.017272294731811e-05, -1.5258672647178173e-05, -6.6756979322235566e-06, -8.976056415122002e-05, -0.0003626880934461951, -0.0006217215559445322, -0.08050843328237534, -0.263682097196579, -0.0017201402224600315, -0.021825365722179413, -9.476689592702314e-05, -0.4201730191707611, -0.014256295748054981, -0.15405550599098206, -0.00018034738604910672, -0.2706545293331146], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0007802779437042773, -6.532455881824717e-05, -5.745722592109814e-05, -0.0005945583689026535, -0.000254241080256179, -0.002360417041927576, -3.814689989667386e-06, -9.059865078597795e-06, -0.0002668739762157202, -1.4305012882687151e-05, -3.814689989667386e-06, -0.00015221867943182588, -0.00025519452174194157, -2.8609820219571702e-05, -0.03475584834814072, -0.00012635385792236775, -4.8636207793606445e-05, -0.0003110878460574895], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.6314688920974731, -0.011599360965192318, -0.03868936747312546, -0.00020811776630580425, -0.0069285850040614605, -0.01668745093047619, -0.015665095299482346, -0.09568076580762863], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00015615197480656207, -0.00015448330668732524, -6.23445157543756e-05, -0.0012948471121490002, -5.876845170860179e-05, -9.190614218823612e-05, -0.00012027494085486978, -0.0005203323671594262], "finish_reason": "stop"}, {"text": " vec1 & vec2", "tokens": [" vec", "1", " &", " vec", "2", "\n"], "logprobs": [-3.024383068084717, -0.003816227661445737, -0.14920644462108612, -8.546940807718784e-05, -0.00010144196130568162, -0.15200461447238922], "finish_reason": "stop"}, {"text": " sum(vec1[x] * vec2[x] for x in intersection)", "tokens": [" sum", "(", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", ")", "\n"], "logprobs": [-0.00915413536131382, -1.1230359077453613, -0.0013979434734210372, -0.0012844892917200923, -0.027361638844013214, -0.26215246319770813, -0.008784341625869274, -0.015470147132873535, -0.00029762129997834563, -0.0005995621904730797, -0.0002858230145648122, -0.00044586253352463245, -2.729855441430118e-05, -0.0020328350365161896, -7.748573807475623e-06, -1.7046782886609435e-05, -0.00032872517476789653, -0.0012904420727863908, -0.002484927186742425], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.07886308431625366, -0.005376522429287434, -0.014730031602084637, -0.0009346407605335116, -0.0005220004240982234, -0.024081237614154816, -0.0005123494775034487, -0.19292478263378143, -0.001559709431603551, -0.0001854724541772157, -0.0026600712444633245, -1.9192511899746023e-05, -9.011816291604191e-05, -0.8082529902458191, -0.000863894063513726, -0.02421121671795845], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00015710550360381603, -5.3881147323409095e-05, -5.5549986427649856e-05, -0.003432455938309431, -1.9073304429184645e-05, -0.0012752028414979577, -8.391981828026474e-05, -0.0021445390302687883, -0.00015722469834145159, -0.0006111184484325349, -7.986990567587782e-06, -4.172316494077677e-06, -0.0001919085334520787, -0.00223042001016438, -3.504691630951129e-05, -8.34461570775602e-06, -5.960462772236497e-07, -2.8609820219571702e-05, -0.0002525725867599249], "finish_reason": "stop"}, {"text": " (np.sqrt(sum1) * np.sqrt(sum2))", "tokens": [" (", "np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", "))", "\n"], "logprobs": [-1.654902458190918, -1.9884450435638428, -7.223821739898995e-05, -0.003888665698468685, -0.000934045237954706, -0.008210359141230583, -0.002379921032115817, -0.07905696332454681, -0.013932235538959503, -0.001086479052901268, -0.0006023023161105812, -0.00014482879487331957, -4.708655978902243e-05, -0.000285227142740041, -0.0002134810492862016, -0.00497543765231967, -0.13484318554401398], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.2693352699279785, -0.09261558949947357, -0.0008281615446321666, -0.0001494772732257843, -0.07535598427057266, -0.04350268468260765], "finish_reason": "stop"}, {"text": " 0", "tokens": [" ", "0", "\n"], "logprobs": [-0.018356559798121452, -0.16517893970012665, -0.6890791058540344], "finish_reason": "stop"}, {"text": " (numerator / denominator)", "tokens": [" (", "n", "umer", "ator", " /", " denominator", ")", "\n"], "logprobs": [-2.6941723823547363, -0.09125874936580658, -1.0728830375228426e-06, -1.0728830375228426e-06, -0.154194176197052, -0.022901568561792374, -0.0173319261521101, -0.22193719446659088], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.14954052865505219, -0.00583729799836874, -0.007181663066148758, -0.016862468793988228, -0.023376118391752243, -0.004273805767297745, -0.00024351492174901068, -0.005472796503454447, -0.009919987060129642], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.7376545667648315, -7.271740287251305e-06, -0.0002766464895103127, -1.0609570381348021e-05, -0.0022532569710165262, -0.01306191273033619, -2.145764938177308e-06, -0.00014041867689229548, -1.2993727978027891e-05, -6.9141146923357155e-06, -2.50339189733495e-06, -0.75121009349823], "finish_reason": "stop"}], "metrics": {"energy": 259.08995963478105, "energy_per_token": 1.5514368840406052, "time": 10.103647, "time_per_token": 0.06050088023952096}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1.lower()).strip()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ".", "lower", "())", ".", "strip", "()", "\n"], "logprobs": [-0.8798552751541138, -2.5033637939486653e-05, -4.541770613286644e-05, -1.5735502529423684e-05, -5.245195097813848e-06, -7.295342220459133e-05, -0.0003716255014296621, -0.0007164295529946685, -0.07065437734127045, -0.2049514800310135, -0.0015944637125357985, -0.019255030900239944, -9.226373367710039e-05, -0.9554494023323059, -0.23588795959949493, -0.032163746654987335, -0.30472540855407715, -0.03336644545197487, -0.006462864112108946, -0.025546809658408165], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0006964165368117392, -6.663577369181439e-05, -7.70062324590981e-05, -0.0005463061388581991, -0.0001934579631779343, -0.0023941919207572937, -4.291525328881107e-06, -8.821448318485636e-06, -0.0002172949316445738, -1.4662635294371285e-05, -2.622600959512056e-06, -0.00014494798961095512, -0.0002783149539027363, -3.0636318115284666e-05, -0.027167566120624542, -0.00012015574611723423, -5.125868119648658e-05, -0.00028618055512197316], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5579521656036377, -0.010090883821249008, -0.04577833414077759, -0.00017772526189219207, -0.0047187162563204765, -0.013477174565196037, -0.016901737079024315, -0.07989638298749924], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00016556799528189003, -0.00014280252798926085, -7.176141662057489e-05, -0.0013888961402699351, -8.34430247778073e-05, -8.546940807718784e-05, -0.00016699827392585576, -0.0007678897818550467], "finish_reason": "stop"}, {"text": " sum(vec1.values() if key in vec2 else 0 for key in vec1)", "tokens": [" sum", "(", "vec", "1", ".", "values", "()", " if", " key", " in", " vec", "2", " else", " ", "0", " for", " key", " in", " vec", "1", ")", "\n"], "logprobs": [-1.7558133602142334, -0.1575707644224167, -0.5155091881752014, -0.007534538861364126, -0.9116976857185364, -0.027220698073506355, -0.8462173342704773, -0.5945855975151062, -1.6934113502502441, -0.036512453109025955, -0.003928326535969973, -1.6744574308395386, -0.040610216557979584, -0.0459599494934082, -0.0005957497633062303, -0.09167759120464325, -0.003736658487468958, -0.025080962106585503, -0.004394873045384884, -0.029254108667373657, -0.14595866203308105, -0.012760652229189873], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.010860500857234001, -0.38025081157684326, -0.003155968151986599, -0.0007884969236329198, -0.0015606615925207734, -0.3949984610080719, -0.020091941580176353, -0.0227214265614748, -0.0003077510336879641, -0.000446696620201692, -0.00038580605178140104, -0.0002755738969426602, -3.266281055402942e-05, -0.003561584046110511, -1.8358061424805783e-05, -4.589452510117553e-05, -0.0010035961167886853, -0.0006039702566340566, -0.002152032917365432], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.09913459420204163, -0.007507326081395149, -0.02576710470020771, -0.0011231550015509129, -0.0005198557628318667, -0.022500809282064438, -0.0007071378640830517, -0.1896408200263977, -0.0014673429541289806, -0.0001879753835964948, -0.0024324848782271147, -1.549708758830093e-05, -9.345571743324399e-05, -0.6721766591072083, -0.00582141662016511, -0.47362616658210754, -0.34753912687301636], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00015090756642166525, -7.021180499577895e-05, -5.4834770708112046e-05, -0.0032864389941096306, -1.6212332411669195e-05, -0.001780830672942102, -9.154854342341423e-05, -0.0015829188050702214, -0.00013040646445006132, -0.0006299418746493757, -6.437280717364047e-06, -3.2186455882765586e-06, -0.00016139635408762842, -0.002089104847982526, -2.95634672511369e-05, -7.629365427419543e-06, -4.768370445162873e-07, -2.312633478140924e-05, -0.000316212244797498], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5829713344573975, -9.536697689327411e-06, -0.018193509429693222, -0.0010890988633036613, -0.005496033933013678, -0.0008906926377676427, -0.05482080578804016, -0.0009895433904603124, -0.0002627027570270002, -0.00028939827461726964, -7.581423415103927e-05, -3.0517112463712692e-05, -0.00021753329201601446, -0.00020358874462544918, -0.00015817821258679032, -0.007183319889008999], "finish_reason": "stop"}, {"text": " denominator == 0.0:", "tokens": [" denominator", " ==", " ", "0", ".", "0", ":", "\n"], "logprobs": [-0.3075454533100128, -0.09216822683811188, -0.0005634627304971218, -0.00012754580529872328, -2.7783632278442383, -0.01866011880338192, -0.002967718057334423, -0.06414767354726791], "finish_reason": "stop"}, {"text": " 0", "tokens": [" ", "0", "\n"], "logprobs": [-0.0165520329028368, -0.17923717200756073, -0.6889929175376892], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.36460158228874207, -3.6954811548639555e-06, -0.06900185346603394, -0.023213766515254974, -0.00453562568873167], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.12205146253108978, -0.005303006153553724, -0.008061845786869526, -0.0184016190469265, -0.02930678240954876, -0.004400569945573807, -0.0002493547508493066, -0.00436757504940033, -0.010814864188432693], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|>from ..utils.metrics.metric_utils import *", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|>", "from", " ", ".", ".", "utils", ".", "metrics", ".", "metric", "_", "utils", " import", " *", "\n"], "logprobs": [-0.7005602121353149, -6.6756979322235566e-06, -0.0004002247005701065, -1.3589766240329482e-05, -0.002176299225538969, -0.012229223735630512, -2.7418097943154862e-06, -0.00011228884250158444, -1.2397689715726301e-05, -1.549708758830093e-05, -2.50339189733495e-06, -1.1339575052261353, -5.960462772236497e-07, -1.1920922133867862e-06, -0.00024399164249189198, -0.00028618055512197316, -0.09684887528419495, -1.4085326194763184, -2.7461347579956055, -0.019733885303139687, -1.996151089668274, -2.348984718322754, -1.1524381637573242, -5.4585418701171875, -2.5002551078796387, -3.1731765270233154, -0.8298614025115967, -1.6017112731933594, -0.012552423402667046, -3.052107810974121, -0.025644414126873016], "finish_reason": "stop"}], "metrics": {"energy": 252.43095623779288, "energy_per_token": 1.2435022474768123, "time": 11.572354, "time_per_token": 0.05700666995073892}}
{"outputs": [{"text": " re.sub(r'\\W+', '', text1).lower()", "tokens": [" re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " ''", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-1.8088644742965698, -0.0002057340752799064, -0.014666598290205002, -0.0905749574303627, -1.6761767864227295, -0.5473697781562805, -0.8200830221176147, -0.38209983706474304, -7.629103492945433e-05, -0.7894120216369629, -6.97350042173639e-05, -0.06376244127750397, -7.152301259338856e-05, -0.16546358168125153, -0.044056542217731476, -0.010214671492576599, -0.00040725519647821784, -0.027485162019729614], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0008107712492346764, -7.021180499577895e-05, -6.5205356804654e-05, -0.0009264229447580874, -0.00014351768186315894, -0.0026815906167030334, -3.6954811548639555e-06, -8.821448318485636e-06, -0.00024720950750634074, -1.4305012882687151e-05, -3.099436753473128e-06, -0.0001720042055239901, -0.00028200942324474454, -3.135155202471651e-05, -0.05578971654176712, -0.00012206286191940308, -5.2927523938706145e-05, -0.0002898749662563205], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.6533871293067932, -0.00956275686621666, -0.04450257495045662, -0.0002525725867599249, -0.005560881923884153, -0.013390136882662773, -0.019628221169114113, -0.07954920828342438], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00016032364510465413, -0.0001289761275984347, -7.354942499659956e-05, -0.0013550871517509222, -6.544376083184034e-05, -9.178694017464295e-05, -0.0001461399078834802, -0.0006400682032108307], "finish_reason": "stop"}, {"text": " vec1.keys() & vec2.keys()", "tokens": [" vec", "1", ".", "keys", "()", " &", " vec", "2", ".", "keys", "()", "\n"], "logprobs": [-3.3175249099731445, -0.003796632867306471, -2.070237159729004, -0.030898692086338997, -0.00017486473370809108, -0.000816250394564122, -0.00015937011630740017, -0.00040236959466710687, -0.00010680581908673048, -4.8993817472364753e-05, -0.00043132537393830717, -0.015266708098351955], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.009696290828287601, -0.27243584394454956, -0.003212174866348505, -0.0006642519147135317, -0.0018556771101430058, -0.3424367308616638, -0.023468345403671265, -0.01786264218389988, -0.00023469554434996098, -0.0005184260080568492, -0.000398198957554996, -0.00020728347590193152, -3.2543604902457446e-05, -0.0037475847639143467, -1.7404405298293568e-05, -4.005352093372494e-05, -0.0009888288332149386, -0.0006411403883248568, -0.0017231153324246407], "finish_reason": "stop"}, {"text": " sum([vec1[x]**2 for x in vec1])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.09288688749074936, -0.006545414216816425, -0.01703312061727047, -0.0011506610317155719, -0.00043525759247131646, -0.025153620168566704, -0.0007537146448157728, -1.6420117616653442, -0.0015927974600344896, -0.0041077290661633015, -2.4318398573086597e-05, -0.00011646069469861686, -0.4681207537651062, -0.0064940135926008224, -0.34984278678894043, -0.26518112421035767], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00016318420239258558, -5.507317473529838e-05, -6.782778655178845e-05, -0.003426278242841363, -1.585470999998506e-05, -0.0012730597518384457, -9.893881360767409e-05, -0.002017606981098652, -0.00014518637908622622, -0.0004935238393954933, -6.6756979322235566e-06, -4.172316494077677e-06, -0.00014506718434859067, -0.0018955373670905828, -3.58813522325363e-05, -1.0013530300057027e-05, -5.960462772236497e-07, -2.4914430468925275e-05, -0.0002643712505232543], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.49521130323410034, -1.156323378381785e-05, -0.013935644179582596, -0.0012271024752408266, -0.006166953593492508, -0.0006719953380525112, -0.05513165891170502, -0.0008559139096178114, -0.0002669931564014405, -0.0002535260282456875, -0.00010096516780322418, -2.777537883957848e-05, -0.00022182388056535274, -0.000200609109015204, -0.0001679517881711945, -0.004995246883481741], "finish_reason": "stop"}, {"text": " not denominator:", "tokens": [" not", " denominator", ":", "\n"], "logprobs": [-1.9166489839553833, -0.135942742228508, -0.031084299087524414, -0.06769635528326035], "finish_reason": "stop"}, {"text": " 1.0", "tokens": [" ", "1", ".", "0", "\n"], "logprobs": [-0.01594424620270729, -1.9327679872512817, -0.5450994968414307, -0.0199319776147604, -0.09902263432741165], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.36003121733665466, -4.887569048150908e-06, -0.06755965203046799, -0.02429010346531868, -0.004196647088974714], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.10305571556091309, -0.005509074777364731, -0.008408382534980774, -0.016796475276350975, -0.029158012941479683, -0.004186081700026989, -0.0002388668799540028, -0.004472965840250254, -0.014012172818183899], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.7491254210472107, -7.271740287251305e-06, -0.0004294188693165779, -1.2993727978027891e-05, -0.0017680978635326028, -0.012528643012046814, -2.0265558760002023e-06, -0.00014041867689229548, -1.3112935448589269e-05, -1.3112935448589269e-05, -2.622600959512056e-06, -0.6637555360794067], "finish_reason": "stop"}], "metrics": {"energy": 236.59544451713555, "energy_per_token": 1.399973044480092, "time": 9.879738, "time_per_token": 0.058459988165680474}}
{"outputs": [{"text": " re.sub(r'\\W+', '', text1).lower()", "tokens": [" re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " ''", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-1.8088644742965698, -0.0002057340752799064, -0.014666598290205002, -0.0905749574303627, -1.6761767864227295, -0.5473697781562805, -0.8200830221176147, -0.38209983706474304, -7.629103492945433e-05, -0.7894120216369629, -6.97350042173639e-05, -0.06376244127750397, -7.152301259338856e-05, -0.16546358168125153, -0.044056542217731476, -0.010214671492576599, -0.00040725519647821784, -0.027485162019729614], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0008107712492346764, -7.021180499577895e-05, -6.5205356804654e-05, -0.0009264229447580874, -0.00014351768186315894, -0.0026815906167030334, -3.6954811548639555e-06, -8.821448318485636e-06, -0.00024720950750634074, -1.4305012882687151e-05, -3.099436753473128e-06, -0.0001720042055239901, -0.00028200942324474454, -3.135155202471651e-05, -0.05578971654176712, -0.00012206286191940308, -5.2927523938706145e-05, -0.0002898749662563205], "finish_reason": "stop"}, {"text": " np.array([text1.count(word) for word in set(text1.split())])", "tokens": [" np", ".", "array", "([", "text", "1", ".", "count", "(", "word", ")", " for", " word", " in", " set", "(", "text", "1", ".", "split", "()", ")]", ")", "\n"], "logprobs": [-1.1276073455810547, -0.0002517383254598826, -0.1957845538854599, -0.4226216673851013, -0.9903543591499329, -0.03493187949061394, -0.006515569053590298, -0.08460500836372375, -0.00656791590154171, -0.8654653429985046, -0.015353230759501457, -0.0402124859392643, -0.0006724718841724098, -0.0007360848248936236, -0.8947332501411438, -0.0015756584471091628, -0.03816385567188263, -0.0014803176745772362, -0.0029679557774215937, -0.008644540794193745, -0.10212186723947525, -0.00013493580627255142, -0.06920076906681061, -0.04768688231706619], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00015400654228869826, -0.00013684290752280504, -7.390703103737906e-05, -0.0012763934209942818, -5.543078441405669e-05, -8.892617915989831e-05, -0.00014399446081370115, -0.000700466800481081], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.6331644654273987, -0.00019905969384126365, -0.0005034133209846914, -0.0022407679352909327, -0.15961028635501862, -0.0015779199311509728, -9.583967766957358e-05, -0.4603334069252014, -0.00019762947340495884, -0.00015007323236204684, -2.4437606043647975e-05, -0.0007273888913914561, -0.00037400881410576403, -4.8397800128441304e-05, -4.327203714638017e-05, -0.0084184305742383], "finish_reason": "stop"}, {"text": " sum(vec1[x] * vec2[x] for x in intersection)", "tokens": [" sum", "(", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", ")", "\n"], "logprobs": [-0.01066885981708765, -1.5118223428726196, -0.0012331746984273195, -0.001456510741263628, -0.03635038062930107, -0.21652859449386597, -0.00951458141207695, -0.016914745792746544, -0.0004029654082842171, -0.0006224363460205495, -0.00030191155383363366, -0.0007084482349455357, -2.1457441107486375e-05, -0.001981677720323205, -6.9141146923357155e-06, -1.8596476365928538e-05, -0.00037889453233219683, -0.0015194787411019206, -0.002448420040309429], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.07744751125574112, -0.004511416424065828, -0.017684049904346466, -0.0010546842822805047, -0.0004764852055814117, -0.022445209324359894, -0.0008208957733586431, -0.2075003981590271, -0.001292823115363717, -0.0001646144810365513, -0.0023594654630869627, -2.312633478140924e-05, -7.915183232398704e-05, -0.7630899548530579, -0.0008501967531628907, -0.02520604617893696], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.0001705739414319396, -5.602679812000133e-05, -6.782778655178845e-05, -0.0026710093952715397, -1.966933996300213e-05, -0.0016945539973676205, -0.00010191874753218144, -0.00203830748796463, -0.00012981049076188356, -0.0005115154199302197, -8.106198947643861e-06, -2.7418097943154862e-06, -0.00013517419574782252, -0.0015804193681105971, -4.076874756719917e-05, -7.510157047363464e-06, -7.152555099310121e-07, -2.586808113846928e-05, -0.0002810560108628124], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5362328290939331, -1.1086402082582936e-05, -0.015291127376258373, -0.001281393808312714, -0.005781001411378384, -0.0008010039455257356, -0.051838815212249756, -0.0010995777556672692, -0.0002236116270069033, -0.0002559096028562635, -8.987976616481319e-05, -3.099393507000059e-05, -0.0001774868869688362, -0.00021360022947192192, -0.00015555603022221476, -0.00608531991019845], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.2687614858150482, -0.08779765665531158, -0.0006993946735747159, -0.0001137191939051263, -0.07534293830394745, -0.039985958486795425], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.017778092995285988, -0.14489752054214478, -0.6255907416343689, -0.032826244831085205, -0.02703135460615158], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.34235861897468567, -5.006777428206988e-06, -0.06946893036365509, -0.02418026514351368, -0.005157262086868286], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.1213579997420311, -0.005107094533741474, -0.007566364947706461, -0.018688667565584183, -0.029277145862579346, -0.0038525662384927273, -0.0002401778765488416, -0.0049133989959955215, -0.00967586599290371], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")", "\n"], "logprobs": [-0.7221843004226685, -0.012501212768256664, -2.610649426060263e-05, -5.245195097813848e-06, -0.00015341058315243572, -2.2053474822314456e-05, -0.0012067424831911922, -0.015010501258075237, -2.0265558760002023e-06, -0.00015209948469419032, -1.1920858014491387e-05, -5.1377883210079744e-05, -3.2186455882765586e-06, -0.23106005787849426, -0.3116285502910614], "finish_reason": "stop"}], "metrics": {"energy": 244.92117015266422, "energy_per_token": 1.2624802585188877, "time": 11.15052, "time_per_token": 0.057476907216494844}}
{"outputs": [{"text": " re.sub(ALPHANUMERIC, ' ', text1).strip().lower()", "tokens": [" re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", "1", ")", ".", "strip", "()", ".", "lower", "()", "\n"], "logprobs": [-1.9129173755645752, -0.00018702188390307128, -0.015098103322088718, -0.09146612882614136, -0.2529045641422272, -9.894321920000948e-06, -0.00039641151670366526, -1.0847986231965479e-05, -1.5497195136049413e-06, -0.0001137191939051263, -0.039903029799461365, -0.5809778571128845, -0.0007290565990842879, -0.00040951924165710807, -0.028369678184390068, -0.00015138434537220746, -0.23884181678295135, -0.019595256075263023, -1.4664950370788574, -0.003758035833016038, -0.01697510853409767, -0.0028250806499272585, -0.00016807096835691482, -0.012045735493302345], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0008208957733586431, -7.164221460698172e-05, -7.462222856702283e-05, -0.0005776405450887978, -0.00015198028995655477, -0.002605498069897294, -3.6954811548639555e-06, -9.179073458653875e-06, -0.00024387246230617166, -1.490105023549404e-05, -3.2186455882765586e-06, -0.0001494772732257843, -0.0002488780301064253, -2.825220326485578e-05, -0.04760163277387619, -0.0001486429391661659, -4.625213477993384e-05, -0.0003093002596870065], "finish_reason": "stop"}, {"text": " np.array([float(word in text1.split()) for word in text1.split()])", "tokens": [" np", ".", "array", "([", "float", "(", "word", " in", " text", "1", ".", "split", "())", " for", " word", " in", " text", "1", ".", "split", "()", "])", "\n"], "logprobs": [-1.3618431091308594, -0.000259365770034492, -0.27177637815475464, -0.4841948449611664, -2.1705055236816406, -0.006143613718450069, -2.7110204696655273, -0.08779427409172058, -0.09814292937517166, -0.03707444295287132, -0.5904425978660583, -0.00537296524271369, -0.1156650111079216, -0.023192917928099632, -0.0007556205382570624, -0.00028713393840007484, -0.4447193443775177, -0.6214571595191956, -0.0034919732715934515, -0.004269532393664122, -0.028436187654733658, -0.018760504201054573, -0.020076051354408264], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013136000779923052, -0.00013016807497479022, -6.878139538457617e-05, -0.0013655632501468062, -7.4741430580616e-05, -9.989239333663136e-05, -0.00013684290752280504, -0.0005881248507648706], "finish_reason": "stop"}, {"text": " len(set(vec1) & set(vec2))", "tokens": [" len", "(", "set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", "))", "\n"], "logprobs": [-1.6808228492736816, -0.0038399784825742245, -0.6237188577651978, -0.05159894376993179, -0.00195312371943146, -0.002226375974714756, -0.74371337890625, -0.19122521579265594, -0.0006074252305552363, -3.194758028257638e-05, -1.0013530300057027e-05, -0.0008278042078018188, -0.0006671110168099403, -0.009571966715157032], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.012003804557025433, -0.21996362507343292, -0.0025663794949650764, -0.0007296522380784154, -0.0016613503685221076, -0.29870349168777466, -0.020746488124132156, -0.015775874257087708, -0.0002603192115202546, -0.0005391574813984334, -0.0004551566671580076, -0.00017617580306250602, -2.90866428258596e-05, -0.0032292858231812716, -2.0265373677830212e-05, -3.9457496313843876e-05, -0.00080195686314255, -0.0005766874528490007, -0.0021059971768409014], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.08804111927747726, -0.006464995909482241, -0.022420264780521393, -0.0012372228084132075, -0.0004363300104159862, -0.022251345217227936, -0.0007197650265879929, -0.20693431794643402, -0.0017100248951464891, -0.00017629499780014157, -0.002651867689564824, -2.3364747903542593e-05, -5.519237674889155e-05, -0.5676330327987671, -0.004289948847144842, -0.42679041624069214, -0.2734207808971405], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00014053787162993103, -4.95898348162882e-05, -6.735097849741578e-05, -0.00419557886198163, -2.4914430468925275e-05, -0.0019432486733421683, -8.141662692651153e-05, -0.0022094857413321733, -0.00018034738604910672, -0.000592890428379178, -7.510157047363464e-06, -3.3378546504536644e-06, -0.00014399446081370115, -0.002377423457801342, -4.184158387943171e-05, -8.821448318485636e-06, -7.152555099310121e-07, -2.682172998902388e-05, -0.00022623363474849612], "finish_reason": "stop"}, {"text": " (sum1 * sum2)**0.5", "tokens": [" (", "sum", "1", " *", " sum", "2", ")**", "0", ".", "5", "\n"], "logprobs": [-1.6561967134475708, -0.16626523435115814, -0.006138874217867851, -0.9424729347229004, -0.017726095393300056, -0.0003849719068966806, -0.07649550586938858, -0.1347929835319519, -1.5616295058862306e-05, -0.00025769727653823793, -0.016203146427869797], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.3423156142234802, -0.09819404780864716, -0.0008575814426876605, -0.00011967896716669202, -0.07610704749822617, -0.04601118341088295], "finish_reason": "stop"}, {"text": " 0", "tokens": [" ", "0", "\n"], "logprobs": [-0.016551565378904343, -0.13005737960338593, -0.6685973405838013], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-1.9040679931640625, -0.001820098957978189, -0.006946816574782133, -7.152555099310121e-07, -1.6689286894688848e-06, -0.14266030490398407, -0.00029738296871073544, -0.34021544456481934, -0.005296721588820219], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.11601739376783371, -0.006076196674257517, -0.007143788039684296, -0.014907624572515488, -0.027262112125754356, -0.004042193293571472, -0.0002731903805397451, -0.0044580125249922276, -0.010433769784867764], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|>def task_func(a, b):", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "a", ",", " b", "):", "\n"], "logprobs": [-0.7157092690467834, -7.271740287251305e-06, -0.00028939827461726964, -1.2040065485052764e-05, -0.0020199865102767944, -0.012447173707187176, -2.145764938177308e-06, -0.00014327930693980306, -1.3470558769768104e-05, -1.2040065485052764e-05, -2.622600959512056e-06, -1.174713373184204, -7.152555099310121e-07, -1.0728830375228426e-06, -0.0002455409849062562, -0.00027724236133508384, -0.09222877770662308, -3.466071367263794, -0.980550229549408, -0.048508405685424805, -0.06246430426836014, -0.17016595602035522, -3.382887840270996, -0.22597233951091766, -0.09336291998624802, -0.5719533562660217, -0.0033211333211511374], "finish_reason": "stop"}], "metrics": {"energy": 262.79185350131985, "energy_per_token": 1.2695258623252166, "time": 11.785576, "time_per_token": 0.05693514975845411}}
{"outputs": [{"text": " text1.translate(str.maketrans('', '', ALPHANUMERIC)).lower()", "tokens": [" text", "1", ".", "translate", "(", "str", ".", "mak", "et", "rans", "('", "'", ",", " ''", ",", " AL", "PH", "AN", "UM", "ER", "IC", "))", ".", "lower", "()", "\n"], "logprobs": [-1.0046147108078003, -0.0015138844028115273, -0.0012747265864163637, -2.1424639225006104, -0.054965805262327194, -0.06841076910495758, -5.209310256759636e-05, -4.6967357775429264e-05, -2.2411095415009186e-05, -0.0011403016978874803, -0.22387732565402985, -0.0051137362606823444, -2.2291887944447808e-05, -0.04504835605621338, -0.00012051333033014089, -0.2696249783039093, -1.5139465176616795e-05, -0.0018353299237787724, -0.00011896379146492109, -6.794906312279636e-06, -0.00016056202002801, -1.358446717262268, -0.009353979490697384, -0.013360848650336266, -0.00023100091493688524, -0.03748513385653496], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0006642519147135317, -7.009260298218578e-05, -6.580135959666222e-05, -0.0005963454605080187, -0.00019965562387369573, -0.0021588134113699198, -4.0531076592742465e-06, -7.867782187531702e-06, -0.00029523781267926097, -1.8954096958623268e-05, -2.145764938177308e-06, -0.00014411364099942148, -0.00022873646230436862, -2.4914430468925275e-05, -0.05945450812578201, -0.00013350549852475524, -4.2437604861333966e-05, -0.00023707917716819793], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5587671399116516, -0.010334196500480175, -0.04862389340996742, -0.0001915509783430025, -0.006958181504160166, -0.01666623167693615, -0.017583556473255157, -0.08457126468420029], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001387499796692282, -0.00013374387344811112, -7.712543447269127e-05, -0.0014281797921285033, -6.997340824455023e-05, -0.00010883215873036534, -0.00012575789878610522, -0.0006450717919506133], "finish_reason": "stop"}, {"text": " len(vec1 & vec2)", "tokens": [" len", "(", "vec", "1", " &", " vec", "2", ")", "\n"], "logprobs": [-1.4635140895843506, -0.004865710623562336, -0.9396323561668396, -0.004877929575741291, -0.18556122481822968, -1.9192511899746023e-05, -0.0001716466504149139, -0.002424874110147357, -0.03492669761180878], "finish_reason": "stop"}, {"text": " sum([vec1[word] * vec2[word] for word in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "word", "]", " *", " vec", "2", "[", "word", "]", " for", " word", " in", " intersection", "])", "\n"], "logprobs": [-0.008648913353681564, -0.2626470923423767, -0.0028896264266222715, -0.0005938435206189752, -0.002079706871882081, -1.8713864088058472, -0.009923174045979977, -0.06303372979164124, -0.00034850722295232117, -0.0006057572900317609, -0.0005768066039308906, -0.0005153281381353736, -4.875540980719961e-05, -0.0071684070862829685, -4.7205765440594405e-05, -1.847726889536716e-05, -0.0009030792862176895, -0.0006800960982218385, -0.0011951930355280638], "finish_reason": "stop"}, {"text": " sum([vec1[x]**2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.07490802556276321, -0.0054801469668745995, -0.016720041632652283, -0.0009091534884646535, -0.0005247407825663686, -0.034041628241539, -0.0008191090892069042, -1.6885828971862793, -0.0015232876176014543, -0.004212435334920883, -2.7417760065873154e-05, -0.00017391123401466757, -0.6720696091651917, -0.0016237420495599508, -0.03682410717010498], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00013839241000823677, -5.113947918289341e-05, -8.570780482841656e-05, -0.0025912299752235413, -1.8715683836489916e-05, -0.0016832482069730759, -9.560128091834486e-05, -0.0019990478176623583, -0.0001530530134914443, -0.0005206898204050958, -6.6756979322235566e-06, -3.6954811548639555e-06, -0.0001438752660760656, -0.0021752286702394485, -3.516612196108326e-05, -7.629365427419543e-06, -7.152555099310121e-07, -1.823885577323381e-05, -0.00027855331427417696], "finish_reason": "stop"}, {"text": " math.sqrt(sum1) * math.sqrt(sum2)", "tokens": [" math", ".", "sqrt", "(", "sum", "1", ")", " *", " math", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-1.9427803754806519, -5.23315102327615e-05, -0.00022027450904715806, -0.0013334201648831367, -0.0030885871965438128, -0.0008646087371744215, -0.06759374588727951, -0.0006328010931611061, -0.0003946240758523345, -0.0005499995895661414, -3.838465272565372e-05, -4.3987260141875595e-05, -0.00013636612857226282, -0.00014053787162993103, -0.00014304091746453196, -0.0033486979082226753], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.2990531623363495, -0.10993441194295883, -0.0008453133050352335, -0.00012373158824630082, -0.07452956587076187, -0.04693736881017685], "finish_reason": "stop"}, {"text": " 0", "tokens": [" ", "0", "\n"], "logprobs": [-0.016042208299040794, -0.1682809740304947, -0.6916780471801758], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-2.1826770305633545, -0.002061862498521805, -0.008192387409508228, -1.0728830375228426e-06, -1.7881377516459906e-06, -0.13656096160411835, -0.00031144535751082003, -0.2873554527759552, -0.005815491080284119], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.13212938606739044, -0.005854126997292042, -0.007732459343969822, -0.015216810628771782, -0.023798061534762383, -0.004281758330762386, -0.00023064337437972426, -0.0048265615478158, -0.011218918487429619], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio"], "logprobs": [-0.7150521874427795, -7.390948667307384e-06, -0.0003367095487192273, -1.2636104656849056e-05, -0.002072569215670228, -0.011998740024864674, -2.0265558760002023e-06, -0.00011789103882620111, -1.1324817933200393e-05, -9.179073458653875e-06, -3.2186455882765586e-06], "finish_reason": "stop"}], "metrics": {"energy": 232.06302836036676, "energy_per_token": 1.3185399338657202, "time": 10.515216, "time_per_token": 0.05974554545454546}}
{"outputs": [{"text": " text1.lower().strip()", "tokens": [" text", "1", ".", "lower", "()", ".", "strip", "()", "\n"], "logprobs": [-0.9270576238632202, -0.0015063855098560452, -0.0012472239322960377, -0.6979066133499146, -0.00038842763751745224, -0.43266022205352783, -1.3479691743850708, -0.04459652304649353, -0.28984904289245605], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.000639710808172822, -6.23445157543756e-05, -9.16677454370074e-05, -0.0005131834768690169, -0.00021908267808612436, -0.0025133469607681036, -3.933898824470816e-06, -6.079655122448457e-06, -0.00025519452174194157, -1.4662635294371285e-05, -2.0265558760002023e-06, -0.00017641419253777713, -0.00023719835735391825, -2.9205850296420977e-05, -0.038979820907115936, -0.00013743886665906757, -4.0411134250462055e-05, -0.0002699726028367877], "finish_reason": "stop"}, {"text": " np.array([text1.count(word) for word in text1.split()])", "tokens": [" np", ".", "array", "([", "text", "1", ".", "count", "(", "word", ")", " for", " word", " in", " text", "1", ".", "split", "()", "])", "\n"], "logprobs": [-1.3044304847717285, -0.00021908267808612436, -0.2626538574695587, -0.45408543944358826, -1.0555174350738525, -0.04296565428376198, -0.007804969325661659, -0.08789844065904617, -0.007100230548530817, -0.7919073104858398, -0.01585014909505844, -0.04008926451206207, -0.0006753309280611575, -0.0005808573332615197, -0.6048963069915771, -0.009823786094784737, -0.013918363489210606, -0.027694132179021835, -0.059345319867134094, -0.051439184695482254, -0.03942365571856499], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00016091958968900144, -0.00011812942830147222, -8.475421054754406e-05, -0.0015248350100591779, -7.426462980220094e-05, -8.248942322097719e-05, -0.00015579440514557064, -0.0006585336523130536], "finish_reason": "stop"}, {"text": " vec1 & vec2", "tokens": [" vec", "1", " &", " vec", "2", "\n"], "logprobs": [-3.1569466590881348, -0.0033849345054477453, -0.12352301180362701, -7.712543447269127e-05, -9.953480184776708e-05, -0.15669381618499756], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.008509920910000801, -0.24251438677310944, -0.0027341386303305626, -0.0006482883472926915, -0.001291394466534257, -0.33990228176116943, -0.02069055661559105, -0.014072592370212078, -0.00023767507809679955, -0.0004836343287024647, -0.0002586507180240005, -0.00018261195509694517, -2.95634672511369e-05, -0.0034824698232114315, -1.764281842042692e-05, -4.076874756719917e-05, -0.0007771808886900544, -0.0006108802044764161, -0.0018937526037916541], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.07218973338603973, -0.007167459931224585, -0.018145864829421043, -0.000922969076782465, -0.0003197873884346336, -0.025290317833423615, -0.0006518622976727784, -0.17389684915542603, -0.0015488782664760947, -0.00015114595589693636, -0.0022978587076067924, -1.9311717551317997e-05, -4.970903682988137e-05, -0.5300018191337585, -0.004401875659823418, -0.5045989751815796, -0.21490198373794556], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00018594920402392745, -7.056941103655845e-05, -6.115249561844394e-05, -0.003507772693410516, -2.169585604860913e-05, -0.0022239969111979008, -8.034383063204587e-05, -0.002434982219710946, -0.00014780859055463225, -0.0004891153075732291, -7.390948667307384e-06, -4.6491513785440475e-06, -0.00015448330668732524, -0.0022656265646219254, -3.838465272565372e-05, -7.390948667307384e-06, -5.960462772236497e-07, -2.7894584491150454e-05, -0.00033122775494121015], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.47612443566322327, -9.536697689327411e-06, -0.017211126163601875, -0.0013712774962186813, -0.005627622362226248, -0.000701658078469336, -0.05376509949564934, -0.0009307105210609734, -0.0003034608089365065, -0.0002256377338198945, -8.749579137656838e-05, -3.4689302992774174e-05, -0.00018916724366135895, -0.00019214690837543458, -0.00017474555352237076, -0.006967296823859215], "finish_reason": "stop"}, {"text": " not np.any(denominator):", "tokens": [" not", " np", ".", "any", "(", "den", "omin", "ator", "):", "\n"], "logprobs": [-1.9714593887329102, -2.269331216812134, -0.00021479207498487085, -2.9387168884277344, -0.035198915749788284, -0.1068740040063858, -8.010543388081715e-05, -7.033323527139146e-06, -0.07700181007385254, -0.17368294298648834], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.018334439024329185, -0.16562703251838684, -0.6989591121673584, -0.03098595142364502, -0.03063582256436348], "finish_reason": "stop"}, {"text": " (numerator / denominator)", "tokens": [" (", "n", "umer", "ator", " /", " denominator", ")", "\n"], "logprobs": [-2.708615303039551, -0.07270176708698273, -1.1920922133867862e-06, -1.1920922133867862e-06, -0.1321605145931244, -0.0233583003282547, -0.014913379214704037, -0.2337648570537567], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.11796993762254715, -0.005658560898154974, -0.007850388996303082, -0.01753436028957367, -0.03149434179067612, -0.003989357966929674, -0.0002530493075028062, -0.005170426331460476, -0.011516401544213295], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)<|endoftext|>import re", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")<", "|", "end", "of", "text", "|>", "import", " re", "\n"], "logprobs": [-0.7013314366340637, -0.01880168542265892, -2.8967437174287625e-05, -4.172316494077677e-06, -0.0001454247540095821, -1.5139465176616795e-05, -0.0011242267210036516, -0.014109382405877113, -2.622600959512056e-06, -0.00017486473370809108, -1.156323378381785e-05, -6.329813186312094e-05, -2.9802276912960224e-06, -1.471801519393921, -5.960462772236497e-07, -1.4305104514278355e-06, -0.00015853578224778175, -0.0002337421028641984, -0.07957947999238968, -1.096168041229248, -1.3380767107009888, -0.03740957751870155], "finish_reason": "stop"}], "metrics": {"energy": 236.57603095054623, "energy_per_token": 1.2651124649761831, "time": 10.942513, "time_per_token": 0.05851611229946524}}
{"outputs": [{"text": " text1.strip().lower().replace(\",\", \"\").replace(\".\", \"\")", "tokens": [" text", "1", ".", "strip", "()", ".", "lower", "()", ".", "replace", "(", "\"", ",", "\"", ",", " \"", "\"", ")", ".", "replace", "(", "\"", ".", "\"", ",", " \"", "\"", ")", "\n"], "logprobs": [-1.0046147108078003, -0.0015138844028115273, -0.0012747265864163637, -1.3427565097808838, -0.037036649882793427, -0.09074100106954575, -0.08280322700738907, -0.0003240775258745998, -2.5620055198669434, -0.2904680669307709, -1.2586370706558228, -0.04761527478694916, -2.6633572578430176, -0.018690072000026703, -0.0004325169720686972, -0.06338746845722198, -0.3718174993991852, -0.0008911690674722195, -0.83830326795578, -0.07940299063920975, -0.022467706352472305, -0.01117518451064825, -0.4165892004966736, -0.0023079682141542435, -0.001304133329540491, -0.01060410588979721, -0.005842157173901796, -0.002184030832722783, -0.27722567319869995], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0006642519147135317, -7.009260298218578e-05, -6.580135959666222e-05, -0.0005963454605080187, -0.00019965562387369573, -0.0021588134113699198, -4.0531076592742465e-06, -7.867782187531702e-06, -0.00029523781267926097, -1.8954096958623268e-05, -2.145764938177308e-06, -0.00014411364099942148, -0.00022873646230436862, -2.4914430468925275e-05, -0.05945450812578201, -0.00013350549852475524, -4.2437604861333966e-05, -0.00023707917716819793], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5587671399116516, -0.010334196500480175, -0.04862389340996742, -0.0001915509783430025, -0.006958181504160166, -0.01666623167693615, -0.017583556473255157, -0.08457126468420029], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001387499796692282, -0.00013374387344811112, -7.712543447269127e-05, -0.0014281797921285033, -6.997340824455023e-05, -0.00010883215873036534, -0.00012575789878610522, -0.0006450717919506133], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.6922948956489563, -0.0001728385395836085, -0.0005240259342826903, -0.0022639615926891565, -1.8816381692886353, -0.39461612701416016, -0.0004574206250254065, -8.916457591112703e-05, -2.1576648578047752e-05, -0.0005851463647559285, -0.00024101213784888387, -0.01538715697824955], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.011727085337042809, -0.3041468858718872, -0.0026645890902727842, -0.0007476395112462342, -0.0017323975916951895, -0.29422855377197266, -0.018901238217949867, -0.015421433374285698, -0.0002455409849062562, -0.0004925706889480352, -0.0003620922507252544, -0.000285227142740041, -2.7417760065873154e-05, -0.0030515079852193594, -1.7404405298293568e-05, -4.768258077092469e-05, -0.0006998711614869535, -0.0006301801186054945, -0.0017288275994360447], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.07330239564180374, -0.007109581492841244, -0.021556250751018524, -0.0010126468259841204, -0.00041559641249477863, -0.02292591892182827, -0.0006780709372833371, -0.18552428483963013, -0.0014041336253285408, -0.00019071667338721454, -0.0025755350943654776, -1.7881233361549675e-05, -6.723177648382261e-05, -0.6541293263435364, -0.005272767972201109, -0.3062146008014679, -0.22242030501365662], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00015889335190877318, -4.8993817472364753e-05, -6.723177648382261e-05, -0.0026610223576426506, -1.7762025890988298e-05, -0.0018523454200476408, -8.511180931236595e-05, -0.0022751418873667717, -0.00013064485392533243, -0.0004956685588695109, -7.152531907195225e-06, -3.576272320060525e-06, -0.0001392267586197704, -0.002220071852207184, -3.218599158572033e-05, -6.9141146923357155e-06, -8.344646857949556e-07, -3.0517112463712692e-05, -0.00028427375946193933], "finish_reason": "stop"}, {"text": " math.sqrt(sum1) * math.sqrt(sum2)", "tokens": [" math", ".", "sqrt", "(", "sum", "1", ")", " *", " math", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-1.918745517730713, -4.8397800128441304e-05, -0.00026973424246534705, -0.0015623279614374042, -0.004275942221283913, -0.000821014866232872, -0.07081354409456253, -0.0006885541952215135, -0.0005646541831083596, -0.00047994061606004834, -3.886147169396281e-05, -4.076874756719917e-05, -0.0001287377526750788, -0.00018737945356406271, -0.0001436368766007945, -0.003091914812102914], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.3736785054206848, -0.09553786367177963, -0.0008179179858416319, -0.00012408917245920748, -0.07111269235610962, -0.04685933515429497], "finish_reason": "stop"}, {"text": " 1", "tokens": [" ", "1", "\n"], "logprobs": [-0.017909597605466843, -1.8880057334899902, -1.0404930114746094], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.32985419034957886, -4.172316494077677e-06, -0.07103586196899414, -0.016932914033532143, -0.0045203170739114285], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.11237466335296631, -0.005555665586143732, -0.008283071219921112, -0.01714281179010868, -0.025583064183592796, -0.004616673570126295, -0.0002321927313460037, -0.004123044200241566, -0.008785995654761791], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio"], "logprobs": [-0.7800480127334595, -8.821448318485636e-06, -0.00032824851223267615, -9.536697689327411e-06, -0.0020137999672442675, -0.012785838916897774, -2.145764938177308e-06, -0.00014232576359063387, -1.1801649634435307e-05, -1.2516897186287679e-05, -2.7418097943154862e-06], "finish_reason": "stop"}], "metrics": {"energy": 232.82867764663692, "energy_per_token": 1.2934926535924274, "time": 10.738381, "time_per_token": 0.05965767222222222}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.8798552751541138, -2.5033637939486653e-05, -4.541770613286644e-05, -1.5735502529423684e-05, -5.245195097813848e-06, -7.295342220459133e-05, -0.0003716255014296621, -0.0007164295529946685, -0.07065437734127045, -0.2049514800310135, -0.0015944637125357985, -0.019255030900239944, -9.226373367710039e-05, -0.4865887761116028, -0.011910277418792248, -0.16842491924762726, -0.0001627074379939586, -0.36930757761001587], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0007783720502629876, -6.818538531661034e-05, -7.450303382938728e-05, -0.0007625294383615255, -0.00018153927521780133, -0.002573275938630104, -3.6954811548639555e-06, -7.390948667307384e-06, -0.00021824838768225163, -1.728519782773219e-05, -3.3378546504536644e-06, -0.00015364897262770683, -0.0002754547167569399, -2.6702524337451905e-05, -0.06764543801546097, -0.00010418349120300263, -4.9232225137529895e-05, -0.0002885640424210578], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.640834391117096, -0.013598191551864147, -0.0430266335606575, -0.00021586472576018423, -0.006615523248910904, -0.015336442738771439, -0.020704686641693115, -0.06999591737985611], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013755806139670312, -0.00012039413559250534, -7.331102824537084e-05, -0.0015240018256008625, -5.876845170860179e-05, -9.619726915843785e-05, -0.0001333863037871197, -0.0006070678355172276], "finish_reason": "stop"}, {"text": " len(vec1.keys() & vec2.keys())", "tokens": [" len", "(", "vec", "1", ".", "keys", "()", " &", " vec", "2", ".", "keys", "())", "\n"], "logprobs": [-1.666420817375183, -0.004921821411699057, -0.8243175745010376, -0.0043345787562429905, -1.7788043022155762, -0.07423918694257736, -0.0323810912668705, -0.0024418795946985483, -0.00013660451804753393, -0.0009397619287483394, -0.00029213930247351527, -4.827859811484814e-05, -0.00029476112104021013, -0.0257980078458786], "finish_reason": "stop"}, {"text": " sum(vec1[x] * vec2[x] for x in intersection)", "tokens": [" sum", "(", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", ")", "\n"], "logprobs": [-0.011429782025516033, -1.2222776412963867, -0.0015074567636474967, -0.0012499623699113727, -0.03820424526929855, -0.24787133932113647, -0.008384858258068562, -0.021353812888264656, -0.0003432638186495751, -0.000566203030757606, -0.0003455280384514481, -0.00038795097498223186, -2.4199192921514623e-05, -0.0021168221719563007, -8.4638240878121e-06, -2.0861407392658293e-05, -0.00036769305006600916, -0.0012310316087678075, -0.0022259000688791275], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.0867534875869751, -0.004387039691209793, -0.019190596416592598, -0.0011043408885598183, -0.0004589696181938052, -0.021657630801200867, -0.0004931663861498237, -0.21048200130462646, -0.0015735160559415817, -0.00021169328829273582, -0.0022448119707405567, -2.002696055569686e-05, -8.320462075062096e-05, -0.44944897294044495, -0.00432223454117775, -0.3107013404369354, -0.25558388233184814], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00015352977789007127, -4.6132929128361866e-05, -5.6622808187967166e-05, -0.0035898545756936073, -1.585470999998506e-05, -0.002241124864667654, -8.237022848334163e-05, -0.0021018334664404392, -0.00015114595589693636, -0.000582644424866885, -6.9141146923357155e-06, -2.3841830625315197e-06, -0.00019214690837543458, -0.0022567061241716146, -4.911301948595792e-05, -7.271740287251305e-06, -8.344646857949556e-07, -2.455681169521995e-05, -0.00030298411729745567], "finish_reason": "stop"}, {"text": " math.sqrt(sum1) * math.sqrt(sum2)", "tokens": [" math", ".", "sqrt", "(", "sum", "1", ")", " *", " math", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-1.916260004043579, -4.3987260141875595e-05, -0.00021217002358753234, -0.0017708349041640759, -0.004343599546700716, -0.0007402540650218725, -0.0688665509223938, -0.0006576997111551464, -0.00041130665340460837, -0.0005227153305895627, -3.9934315282152966e-05, -3.790783375734463e-05, -0.00011312322021694854, -0.00016640232934150845, -0.00012694983161054552, -0.003145154332742095], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.3049383759498596, -0.08266100287437439, -0.0007753941463306546, -0.00011944057769142091, -0.07077044993638992, -0.04274648800492287], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.020588146522641182, -0.1629571169614792, -0.7856359481811523, -0.026394495740532875, -0.028926534578204155], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.4205857813358307, -5.722029527532868e-06, -0.061464738100767136, -0.021896744146943092, -0.004261341877281666], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.11849051713943481, -0.004624861292541027, -0.007531462702900171, -0.017402220517396927, -0.02951132133603096, -0.004350127186626196, -0.0002329078270122409, -0.0055458261631429195, -0.010328768752515316], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.795215368270874, -6.198863957251888e-06, -0.00030894274823367596, -1.1444026313256472e-05, -0.0019367048516869545, -0.010938208550214767, -2.264974000354414e-06, -0.00013064485392533243, -1.3351351299206726e-05, -9.775113539944869e-06, -2.50339189733495e-06, -0.72576504945755], "finish_reason": "stop"}], "metrics": {"energy": 225.12135186958298, "energy_per_token": 1.2938008728136954, "time": 10.313385, "time_per_token": 0.059272327586206895}}
{"outputs": [{"text": " text1.replace(\",\", \"\").replace(\".\", \"\")", "tokens": [" text", "1", ".", "replace", "(", "\"", ",", "\"", ",", " \"", "\"", ")", ".", "replace", "(", "\"", ".", "\"", ",", " \"", "\"", ")", "\n"], "logprobs": [-1.0046147108078003, -0.0015138844028115273, -0.0012747265864163637, -2.426992654800415, -1.2955163717269897, -0.04095698893070221, -1.9575015306472778, -0.02220342867076397, -0.0007892115972936153, -0.07079632580280304, -0.6708622574806213, -0.0014447261346504092, -0.237563818693161, -0.386599600315094, -0.011428603902459145, -0.012435635551810265, -0.5221140384674072, -0.0020607919432222843, -0.0008406681008636951, -0.009435228072106838, -0.009657921269536018, -0.011432257480919361, -1.4426530599594116], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0006642519147135317, -7.009260298218578e-05, -6.580135959666222e-05, -0.0005963454605080187, -0.00019965562387369573, -0.0021588134113699198, -4.0531076592742465e-06, -7.867782187531702e-06, -0.00029523781267926097, -1.8954096958623268e-05, -2.145764938177308e-06, -0.00014411364099942148, -0.00022873646230436862, -2.4914430468925275e-05, -0.05945450812578201, -0.00013350549852475524, -4.2437604861333966e-05, -0.00023707917716819793], "finish_reason": "stop"}, {"text": " np.array(Counter(text1.split()).values())", "tokens": [" np", ".", "array", "(", "Counter", "(", "text", "1", ".", "split", "())", ".", "values", "())", "\n"], "logprobs": [-1.2445142269134521, -0.00026842328952625394, -0.24680715799331665, -1.0141615867614746, -0.4210725724697113, -0.0030718303751200438, -0.049493204802274704, -0.0003773453936446458, -0.014063071459531784, -0.019037974998354912, -0.02638811059296131, -0.004299563355743885, -0.40714454650878906, -0.03539304807782173, -0.04613834246993065], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001370812824461609, -0.00011967896716669202, -6.186770770000294e-05, -0.0015062665333971381, -6.675497570540756e-05, -0.00010322991875000298, -0.00011085849109804258, -0.0006027788622304797], "finish_reason": "stop"}, {"text": " vec1.keys() & vec2.keys()", "tokens": [" vec", "1", ".", "keys", "()", " &", " vec", "2", ".", "keys", "()", "\n"], "logprobs": [-3.198863983154297, -0.0030680273193866014, -2.1468749046325684, -0.017646219581365585, -0.00015710550360381603, -0.0006208876147866249, -0.00011276562872808427, -0.0005208089714869857, -9.83428253675811e-05, -5.590759246842936e-05, -0.0004542034293990582, -0.019810322672128677], "finish_reason": "stop"}, {"text": " sum(vec1[x] * vec2[x] for x in intersection)", "tokens": [" sum", "(", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", ")", "\n"], "logprobs": [-0.01047446858137846, -1.2634531259536743, -0.0011131525970995426, -0.0012692499440163374, -0.037321727722883224, -0.23943807184696198, -0.007823657244443893, -0.023615172132849693, -0.00029416524921543896, -0.0005581013392657042, -0.0002858230145648122, -0.000409161759307608, -2.288792165927589e-05, -0.0018236687174066901, -7.986990567587782e-06, -1.597391747054644e-05, -0.0003890234511345625, -0.0014332984574139118, -0.002144657773897052], "finish_reason": "stop"}, {"text": " sum([vec1[x]**2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.13130196928977966, -0.007757300045341253, -0.017361216247081757, -0.0010941001819446683, -0.0005068686441518366, -0.029003892093896866, -0.000692842761054635, -1.776991844177246, -0.0014190138317644596, -0.0036520943976938725, -2.753696753643453e-05, -0.00016675988445058465, -0.7357457280158997, -0.0024469930212944746, -0.03296247497200966], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00016080040950328112, -5.590759246842936e-05, -5.566918844124302e-05, -0.0028219898231327534, -1.9311717551317997e-05, -0.0017890414455905557, -9.440929716220126e-05, -0.0022038952447474003, -0.00014053787162993103, -0.0005849081207998097, -7.510157047363464e-06, -2.3841830625315197e-06, -0.00024077377747744322, -0.002163214609026909, -4.470248313737102e-05, -7.271740287251305e-06, -8.344646857949556e-07, -2.539125671319198e-05, -0.0003438596613705158], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5344908833503723, -1.1205610462639015e-05, -0.01681370660662651, -0.001430560601875186, -0.005482281092554331, -0.0007932615117169917, -0.055904705077409744, -0.0009525052737444639, -0.0003432638186495751, -0.0001805857609724626, -8.606540359323844e-05, -3.135155202471651e-05, -0.00018130090029444546, -0.00017271934484597296, -0.0001525762490928173, -0.0065081072971224785], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.29155245423316956, -0.09810619056224823, -0.000865561596583575, -0.0001333863037871197, -0.079964280128479, -0.04591133072972298], "finish_reason": "stop"}, {"text": " 1", "tokens": [" ", "1", "\n"], "logprobs": [-0.0187691617757082, -2.0000762939453125, -1.046692132949829], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.3681531548500061, -4.291525328881107e-06, -0.06655468046665192, -0.022043684497475624, -0.003865747479721904], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.10298731923103333, -0.005182167049497366, -0.008136932738125324, -0.01763579621911049, -0.027062799781560898, -0.004216352943331003, -0.00025233422638848424, -0.0043077534064650536, -0.01113651692867279], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.6596851348876953, -7.986990567587782e-06, -0.0004371640970930457, -9.775113539944869e-06, -0.0019237360684201121, -0.013545505702495575, -2.264974000354414e-06, -0.00011717586312443018, -1.2993727978027891e-05, -1.0847986231965479e-05, -2.50339189733495e-06, -0.7737605571746826], "finish_reason": "stop"}], "metrics": {"energy": 232.4734546976089, "energy_per_token": 1.2915191927644938, "time": 10.524313, "time_per_token": 0.058468405555555554}}
{"outputs": [{"text": " text1.translate(str.maketrans(\"\", \"\", ALPHANUMERIC)).lower()", "tokens": [" text", "1", ".", "translate", "(", "str", ".", "mak", "et", "rans", "(", "\"", "\"", ",", " \"", "\"", ",", " AL", "PH", "AN", "UM", "ER", "IC", "))", ".", "lower", "()", "\n"], "logprobs": [-1.0046147108078003, -0.0015138844028115273, -0.0012747265864163637, -2.1424639225006104, -0.054965805262327194, -0.06841076910495758, -5.209310256759636e-05, -4.6967357775429264e-05, -2.2411095415009186e-05, -0.0011403016978874803, -1.6655887365341187, -0.1045956239104271, -0.007815850898623466, -2.8967437174287625e-05, -0.01727147027850151, -0.0004012971476186067, -0.000809818331617862, -0.417971670627594, -1.597391747054644e-05, -0.0017910643946379423, -0.0001746263587847352, -7.152531907195225e-06, -0.00019500737835187465, -1.5238876342773438, -0.013128037564456463, -0.012526524253189564, -0.0002743821241892874, -0.028903834521770477], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2)", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", "\n"], "logprobs": [-0.0006642519147135317, -7.009260298218578e-05, -6.580135959666222e-05, -0.0005963454605080187, -0.00019965562387369573, -0.0021588134113699198, -4.0531076592742465e-06, -7.867782187531702e-06, -0.00029523781267926097, -1.8954096958623268e-05, -2.145764938177308e-06, -0.00014411364099942148, -0.00022873646230436862, -2.4914430468925275e-05, -2.8849949836730957], "finish_reason": "stop"}, {"text": " np.array(Counter(text1.split()).values())", "tokens": [" np", ".", "array", "(", "Counter", "(", "text", "1", ".", "split", "())", ".", "values", "())", "\n"], "logprobs": [-1.1101980209350586, -0.00022539935889653862, -0.2865285277366638, -1.0844370126724243, -0.4618709981441498, -0.0033283811062574387, -0.050747890025377274, -0.0003023882454726845, -0.01116987969726324, -0.018356794491410255, -0.021027259528636932, -0.004328762646764517, -0.39868971705436707, -0.038375768810510635, -0.055566463619470596], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001486429391661659, -0.00014327930693980306, -8.201262971851975e-05, -0.0015392372151836753, -6.675497570540756e-05, -0.00011383838864276186, -0.00012981049076188356, -0.000578474544454366], "finish_reason": "stop"}, {"text": " len(set(vec1.keys()) & set(vec2.keys()))", "tokens": [" len", "(", "set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "()))", "\n"], "logprobs": [-1.656321406364441, -0.004328643903136253, -0.5210971832275391, -0.04884994775056839, -0.003237484721466899, -0.0023824183735996485, -0.852322518825531, -0.009625689126551151, -0.0001006075763143599, -0.11904310435056686, -0.0020459212828427553, -4.970903682988137e-05, -1.7762025890988298e-05, -0.0002115741081070155, -0.0005357022164389491, -7.152301259338856e-05, -0.0002954761730507016, -0.013359319418668747], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.010621445253491402, -0.28388145565986633, -0.003116514766588807, -0.0008398343343287706, -0.0018210508860647678, -0.2675192952156067, -0.025593172758817673, -0.02008119225502014, -0.00027533553657121956, -0.0005017452058382332, -0.00034767304896377027, -0.000248043768806383, -2.8967437174287625e-05, -0.0035343817435204983, -1.8954096958623268e-05, -3.5523738915799186e-05, -0.000754786713514477, -0.0005458295345306396, -0.0018606745870783925], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.0923926904797554, -0.01056140661239624, -0.027709322050213814, -0.0013017522869631648, -0.0004049911512993276, -0.023983363062143326, -0.0006111184484325349, -0.19450949132442474, -0.0014386551920324564, -0.00019834458362311125, -0.0024380742106586695, -1.585470999998506e-05, -7.295342220459133e-05, -0.9650700092315674, -0.001258058357052505, -0.04863172769546509], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.0001646144810365513, -5.7338023907504976e-05, -5.745722592109814e-05, -0.0033722221851348877, -1.645074735279195e-05, -0.001868646708317101, -0.00010013079008786008, -0.0020559143740683794, -0.00013863079948350787, -0.0005443998379632831, -8.34461570775602e-06, -2.7418097943154862e-06, -0.00012885693286079913, -0.0018192660063505173, -3.158996332786046e-05, -7.152531907195225e-06, -5.960462772236497e-07, -2.455681169521995e-05, -0.00030763185350224376], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5332012176513672, -9.536697689327411e-06, -0.012424097396433353, -0.0012879418209195137, -0.00560877425596118, -0.0008256602450273931, -0.06306025385856628, -0.00098525604698807, -0.00027497802511788905, -0.00021944021864328533, -9.417090768693015e-05, -2.992108420585282e-05, -0.00020919041708111763, -0.00018606838420964777, -0.0001726001501083374, -0.007117393426597118], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.27399942278862, -0.10191012173891068, -0.0007176207727752626, -0.00012027494085486978, -0.07505600154399872, -0.04719678312540054], "finish_reason": "stop"}, {"text": " 1.0", "tokens": [" ", "1", ".", "0", "\n"], "logprobs": [-0.01596829853951931, -1.9759941101074219, -0.500758945941925, -0.016307063400745392, -0.08719038218259811], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.3345256745815277, -5.602820692729438e-06, -0.07536472380161285, -0.023888736963272095, -0.004829052835702896], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.13371750712394714, -0.005681319627910852, -0.00772311445325613, -0.016190478578209877, -0.026140544563531876, -0.003950293175876141, -0.00024482590379193425, -0.0044119637459516525, -0.009275203570723534], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")", "\n"], "logprobs": [-0.6764337420463562, -0.017029136419296265, -2.52720492426306e-05, -5.364403477869928e-06, -0.00016807096835691482, -1.9073304429184645e-05, -0.0010804060148075223, -0.015659580007195473, -2.264974000354414e-06, -0.00019965562387369573, -1.3947389561508317e-05, -4.8993817472364753e-05, -3.6954811548639555e-06, -0.27516624331474304, -0.299479216337204], "finish_reason": "stop"}], "metrics": {"energy": 249.10744002342227, "energy_per_token": 1.2840589691928983, "time": 11.356247, "time_per_token": 0.05853735567010309}}
{"outputs": [{"text": " re.sub(ALPHANUMERIC, '', text1).lower()", "tokens": [" re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " ''", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-1.8798984289169312, -0.0002019201492657885, -0.014815778471529484, -0.07852679491043091, -0.24781262874603271, -8.702239938429557e-06, -0.00035565727739594877, -1.4424220353248529e-05, -1.5497195136049413e-06, -8.546940807718784e-05, -0.03647567331790924, -1.073241949081421, -0.00018308870494365692, -0.040280506014823914, -0.00018749863374978304, -0.36209264397621155, -0.023051271215081215, -0.03335687518119812, -0.00031144535751082003, -0.04820888862013817], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.000639710808172822, -6.23445157543756e-05, -9.16677454370074e-05, -0.0005131834768690169, -0.00021908267808612436, -0.0025133469607681036, -3.933898824470816e-06, -6.079655122448457e-06, -0.00025519452174194157, -1.4662635294371285e-05, -2.0265558760002023e-06, -0.00017641419253777713, -0.00023719835735391825, -2.9205850296420977e-05, -0.038979820907115936, -0.00013743886665906757, -4.0411134250462055e-05, -0.0002699726028367877], "finish_reason": "stop"}, {"text": " np.array([text1.count(i) for i in text1.split()])", "tokens": [" np", ".", "array", "([", "text", "1", ".", "count", "(", "i", ")", " for", " i", " in", " text", "1", ".", "split", "()", "])", "\n"], "logprobs": [-1.3044304847717285, -0.00021908267808612436, -0.2626538574695587, -0.45408543944358826, -1.0555174350738525, -0.04296565428376198, -0.007804969325661659, -0.08789844065904617, -0.007100230548530817, -2.5986013412475586, -0.01949530467391014, -0.05376679450273514, -0.00013362467871047556, -0.00043883229955099523, -1.9098702669143677, -0.010133721865713596, -0.05169947072863579, -0.027759874239563942, -0.05830765143036842, -0.055298272520303726, -0.04580441117286682], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00016091958968900144, -0.00011812942830147222, -8.475421054754406e-05, -0.0015248350100591779, -7.426462980220094e-05, -8.248942322097719e-05, -0.00015579440514557064, -0.0006585336523130536], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.6266292333602905, -0.00014959646796341985, -0.000482442817883566, -0.0019903627689927816, -1.9348409175872803, -0.39732280373573303, -0.0003904534096363932, -7.855583680793643e-05, -2.2172682292875834e-05, -0.0005432083853520453, -0.00022933237778488547, -0.013348733074963093], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.009060459211468697, -0.342634379863739, -0.0027070327196270227, -0.0007233387441374362, -0.0015892268856987357, -0.3298932611942291, -0.018549775704741478, -0.015995046123862267, -0.0002946419408544898, -0.0004444326623342931, -0.00037579628406092525, -0.0004259632551111281, -2.706014311115723e-05, -0.0033620046451687813, -1.823885577323381e-05, -4.303362584323622e-05, -0.0008205384365282953, -0.0005301024066284299, -0.0017389428103342652], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1.keys()])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", ".", "keys", "()", "])", "\n"], "logprobs": [-0.0934990718960762, -0.004846848081797361, -0.01679905317723751, -0.0010319390567019582, -0.00043394684325903654, -0.02227839268743992, -0.0006947487709112465, -0.1787659227848053, -0.001258177449926734, -0.00017593742813915014, -0.002741033909842372, -1.966933996300213e-05, -8.105902816168964e-05, -0.4242516756057739, -0.005813002120703459, -0.8956758379936218, -0.003554694587364793, -7.378782902378589e-05, -0.00201617949642241, -0.05092316493391991], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00016211149340961128, -5.9602869441732764e-05, -5.876845170860179e-05, -0.002679093973711133, -2.0503786799963564e-05, -0.002044136868789792, -7.331102824537084e-05, -0.0021061161532998085, -0.0001691436773398891, -0.0006101653561927378, -7.152531907195225e-06, -2.50339189733495e-06, -0.00014149141497910023, -0.0020575798116624355, -3.516612196108326e-05, -8.702239938429557e-06, -4.768370445162873e-07, -2.586808113846928e-05, -0.00032658010604791343], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5631757378578186, -1.0251946150674485e-05, -0.01590435579419136, -0.0012412709183990955, -0.004796190652996302, -0.000813034363090992, -0.05399428680539131, -0.0008953376673161983, -0.00030894274823367596, -0.000277123210253194, -9.369411418447271e-05, -3.3378044463461265e-05, -0.0001941730733960867, -0.00017534149810671806, -0.00017271934484597296, -0.008602939546108246], "finish_reason": "stop"}, {"text": " denominator == 0.0:", "tokens": [" denominator", " ==", " ", "0", ".", "0", ":", "\n"], "logprobs": [-0.3106410503387451, -0.08529814332723618, -0.0008331642020493746, -0.00011967896716669202, -2.722111701965332, -0.014286615885794163, -0.0027480479329824448, -0.06800055503845215], "finish_reason": "stop"}, {"text": " 1.0", "tokens": [" ", "1", ".", "0", "\n"], "logprobs": [-0.01810617744922638, -2.0307536125183105, -0.5000995397567749, -0.019903697073459625, -0.08262686431407928], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.397443950176239, -4.6491513785440475e-06, -0.06313926726579666, -0.021516351029276848, -0.0051450468599796295], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.11598342657089233, -0.004956814926117659, -0.008847677148878574, -0.017168473452329636, -0.029033999890089035, -0.003852209774777293, -0.00025006983196362853, -0.004184301011264324, -0.010383865796029568], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|>import re", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|>", "import", " re", "\n"], "logprobs": [-0.670120358467102, -5.8412379075889476e-06, -0.0003669780562631786, -1.0847986231965479e-05, -0.0019326595356687903, -0.012461066246032715, -2.7418097943154862e-06, -0.00012110930401831865, -1.3232143828645349e-05, -2.038458114839159e-05, -2.622600959512056e-06, -1.113898754119873, -8.344646857949556e-07, -1.1920922133867862e-06, -0.0002650863316375762, -0.00030286493711173534, -0.0916389748454094, -1.2082502841949463, -1.4097055196762085, -0.035335857421159744], "finish_reason": "stop"}], "metrics": {"energy": 283.6805938568115, "energy_per_token": 1.4184029692840576, "time": 11.57294, "time_per_token": 0.0578647}}
{"outputs": [{"text": " ALPHANUMERIC.sub(\" \", text1).lower().split()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "(", "\"", " \"", ",", " text", "1", ")", ".", "lower", "()", ".", "split", "()", "\n"], "logprobs": [-0.9370049238204956, -2.9801878554280847e-05, -4.017272294731811e-05, -1.5258672647178173e-05, -6.6756979322235566e-06, -8.976056415122002e-05, -0.0003626880934461951, -0.0006217215559445322, -2.5720436573028564, -0.2728075385093689, -0.2520294785499573, -0.0027759848162531853, -0.026345383375883102, -9.023735765367746e-05, -0.5154508352279663, -0.012462597340345383, -0.17775161564350128, -0.0002115741081070155, -1.050521731376648, -2.7803916931152344, -0.013059441931545734, -0.006958181504160166], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0006983225466683507, -5.721882189391181e-05, -6.3774932641536e-05, -0.0007134514744393528, -0.00023815179883968085, -0.0030187058728188276, -3.814689989667386e-06, -7.152531907195225e-06, -0.000291662581730634, -1.9430925021879375e-05, -3.3378546504536644e-06, -0.00018046658078674227, -0.00023541064001619816, -2.932505594799295e-05, -0.06175627186894417, -0.00013636612857226282, -5.6503606174374e-05, -0.00033504117163829505], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.6731511354446411, -0.010922761633992195, -0.04649696871638298, -0.00018904806347563863, -0.005847371648997068, -0.012716514989733696, -0.018870823085308075, -0.07575810700654984], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00016616393986623734, -0.0001289761275984347, -7.188061863416806e-05, -0.0016189813613891602, -5.936446541454643e-05, -9.345571743324399e-05, -0.0001426833332516253, -0.0006754500791430473], "finish_reason": "stop"}, {"text": " sum(vec1.values())/len(vec1.keys()+vec2.keys())", "tokens": [" sum", "(", "vec", "1", ".", "values", "()", ")/", "len", "(", "vec", "1", ".", "keys", "()", "+", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-2.0106287002563477, -0.181752011179924, -0.38705340027809143, -0.008270066231489182, -1.0603245496749878, -0.021755265071988106, -0.8250715732574463, -3.2714126110076904, -0.8791574239730835, -0.0023242621682584286, -0.09577208757400513, -0.06905636936426163, -2.0939314365386963, -0.4839423596858978, -2.4786109924316406, -1.8188310861587524, -0.013519397005438805, -0.03860965743660927, -0.005185724701732397, -0.18801844120025635, -0.027878711000084877, -0.08820780366659164], "finish_reason": "stop"}, {"text": " sum([vec1[k] * vec2[k] for k in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "k", "]", " *", " vec", "2", "[", "k", "]", " for", " k", " in", " intersection", "])", "\n"], "logprobs": [-0.009513755328953266, -0.31178992986679077, -0.0027921521104872227, -0.0006363751017488539, -0.00154971145093441, -2.8257246017456055, -0.012210499495267868, -0.008000588975846767, -0.00022897482267580926, -0.0005171154043637216, -0.0003725788265001029, -1.7881233361549675e-05, -3.576214658096433e-05, -0.002912448486313224, -9.417489309271332e-06, -2.777537883957848e-05, -0.0004558716027531773, -0.0006814065272919834, -0.0015198357868939638], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.063270203769207, -0.005630585830658674, -0.025605490431189537, -0.0012271024752408266, -0.0004614718782249838, -0.023105556145310402, -0.0006084974738769233, -0.18171125650405884, -0.0015612567076459527, -0.0001358893496217206, -0.0020873204339295626, -1.847726889536716e-05, -0.00010048838157672435, -1.171255111694336, -0.0008379285573028028, -0.03594876453280449], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00013195598148740828, -5.9960475482512265e-05, -6.460934673668817e-05, -0.003371034050360322, -1.7404405298293568e-05, -0.002466376405209303, -9.250213042832911e-05, -0.0022689569741487503, -0.00015639036428183317, -0.0006164796068333089, -7.986990567587782e-06, -4.172316494077677e-06, -9.512448741588742e-05, -0.0017045505810528994, -3.93382906622719e-05, -6.9141146923357155e-06, -5.960462772236497e-07, -2.3007127310847864e-05, -0.0003023882454726845], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5411613583564758, -8.940656698541716e-06, -0.021399788558483124, -0.001190549461171031, -0.005201972089707851, -0.0007307243067771196, -0.053137924522161484, -0.001101244823075831, -0.0002661589242052287, -0.00019596086349338293, -0.00010096516780322418, -3.242440288886428e-05, -0.00021050144277978688, -0.00019047829846385866, -0.0001554368354845792, -0.006765672471374273], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.3490465581417084, -0.08649451285600662, -0.0007611000328324735, -0.00011085849109804258, -0.06401283293962479, -0.04840971156954765], "finish_reason": "stop"}, {"text": " 1", "tokens": [" ", "1", "\n"], "logprobs": [-0.014949317090213299, -1.9621660709381104, -1.1942533254623413], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.3894348740577698, -4.529942543740617e-06, -0.05760769918560982, -0.02341967076063156, -0.004930599592626095], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.12882284820079803, -0.005620154086500406, -0.008450583554804325, -0.015668850392103195, -0.027086583897471428, -0.004022009205073118, -0.0002553137019276619, -0.004160914570093155, -0.01095813512802124], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")", "\n"], "logprobs": [-0.793300449848175, -0.015205186791718006, -2.0861407392658293e-05, -3.6954811548639555e-06, -0.00013100242358632386, -2.1934269170742482e-05, -0.0010830257087945938, -0.015336325392127037, -2.9802276912960224e-06, -0.00019727191829588264, -1.2993727978027891e-05, -3.8265450712060556e-05, -2.7418097943154862e-06, -0.2657744884490967, -0.3096963167190552], "finish_reason": "stop"}], "metrics": {"energy": 243.1528104667663, "energy_per_token": 1.307273174552507, "time": 10.940011, "time_per_token": 0.05881726344086022}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-1.010414481163025, -3.0278701160568744e-05, -3.8980677345534787e-05, -1.883488948806189e-05, -6.556489552167477e-06, -7.950943836476654e-05, -0.0003641180810518563, -0.0006180283380672336, -0.0609169639647007, -0.2571931481361389, -0.0015392372151836753, -0.02459186688065529, -9.238292841473594e-05, -0.4825717806816101, -0.010701529681682587, -0.17426766455173492, -0.00020394629973452538, -0.31969454884529114], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00075049843871966, -6.472854875028133e-05, -7.521823135903105e-05, -0.0008060067193582654, -0.00015686711412854493, -0.002544738817960024, -4.0531076592742465e-06, -7.390948667307384e-06, -0.00025614796322770417, -1.966933996300213e-05, -3.3378546504536644e-06, -0.00016544880054425448, -0.00023064337437972426, -2.8490614567999728e-05, -0.04746772348880768, -0.00014041867689229548, -4.9828242481453344e-05, -0.000288087350782007], "finish_reason": "stop"}, {"text": " np.array(Counter(text1.split()).values())", "tokens": [" np", ".", "array", "(", "Counter", "(", "text", "1", ".", "split", "())", ".", "values", "())", "\n"], "logprobs": [-1.1479382514953613, -0.0002865380665753037, -0.2635255753993988, -0.9876348376274109, -0.4148469865322113, -0.0032914294861257076, -0.04960427060723305, -0.00026353701832704246, -0.014270516112446785, -0.018028439953923225, -0.027199700474739075, -0.003983658738434315, -0.440271258354187, -0.038222603499889374, -0.057563357055187225], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00015889335190877318, -0.00015627116954419762, -8.904537389753386e-05, -0.0013856819132342935, -6.890059739816934e-05, -9.858122211880982e-05, -0.0001728385395836085, -0.0007485924870707095], "finish_reason": "stop"}, {"text": " sum(vec1.values() if count else 1 for count in vec1 & vec2)", "tokens": [" sum", "(", "vec", "1", ".", "values", "()", " if", " count", " else", " ", "1", " for", " count", " in", " vec", "1", " &", " vec", "2", ")", "\n"], "logprobs": [-1.6077791452407837, -0.16090615093708038, -0.36060115694999695, -0.00816412828862667, -0.8515294194221497, -0.025815898552536964, -0.8014190196990967, -0.8382362723350525, -4.578734397888184, -2.662515163421631, -0.037766411900520325, -2.993790864944458, -0.1786571592092514, -0.0814022347331047, -0.0064832353964447975, -0.10134227573871613, -1.0194053649902344, -1.2827682495117188, -0.0003219324571546167, -0.0007636015070602298, -0.1356460303068161, -0.021889280527830124], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.01304908748716116, -0.33620184659957886, -0.002418452175334096, -0.0007286992622539401, -0.0013488966505974531, -0.29820260405540466, -0.02027582749724388, -0.018084753304719925, -0.0002650863316375762, -0.00047803416964598, -0.00047338721924461424, -0.0002965487365145236, -3.373566141817719e-05, -0.0036168177612125874, -1.728519782773219e-05, -3.7788631743751466e-05, -0.0007944526732899249, -0.0006288696313276887, -0.0019116000039502978], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.08124387264251709, -0.007036192342638969, -0.01937687024474144, -0.0011033882619813085, -0.0003846143954433501, -0.021995173767209053, -0.0006344689172692597, -0.1960020214319229, -0.0013009188696742058, -0.00020823694649152458, -0.0027635025326162577, -1.6569954823353328e-05, -6.3774932641536e-05, -0.5339694619178772, -0.004729631822556257, -0.5159932374954224, -0.30380260944366455], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00015138434537220746, -5.864924969500862e-05, -7.366862701019272e-05, -0.002889864146709442, -1.764281842042692e-05, -0.0018309272127225995, -8.666139910928905e-05, -0.0019114810274913907, -0.00013052565918769687, -0.0006293461774475873, -7.629365427419543e-06, -2.861018856492592e-06, -0.0001445904199499637, -0.001935277134180069, -3.814624506048858e-05, -7.867782187531702e-06, -7.152555099310121e-07, -3.2543604902457446e-05, -0.0003095386200584471], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5792500972747803, -1.2159273865108844e-05, -0.01706160046160221, -0.0014673429541289806, -0.005729679949581623, -0.0008118432597257197, -0.06033780425786972, -0.0010939810890704393, -0.0003047717036679387, -0.00022110878489911556, -8.391981828026474e-05, -3.2543604902457446e-05, -0.00020656836568377912, -0.0001829695247579366, -0.00016497205069754273, -0.00625035772100091], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.34032878279685974, -0.09778474271297455, -0.0006815256201662123, -0.0001399419124936685, -0.06047606095671654, -0.04377588629722595], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.017125466838479042, -0.1308109313249588, -0.7316715121269226, -0.03110775724053383, -0.025058407336473465], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.3431186378002167, -5.006777428206988e-06, -0.07108937203884125, -0.02209126017987728, -0.004440685268491507], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.12319888174533844, -0.004708512686192989, -0.009762047789990902, -0.018534913659095764, -0.02915835939347744, -0.003927020356059074, -0.00023827097902540118, -0.004598755855113268, -0.011278445832431316], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")", "\n"], "logprobs": [-0.6542295813560486, -0.017097342759370804, -2.2649508537142538e-05, -4.6491513785440475e-06, -0.0001494772732257843, -1.7404405298293568e-05, -0.0012871085200458765, -0.01536684762686491, -2.50339189733495e-06, -0.00018988236843142658, -1.3708974620385561e-05, -8.546940807718784e-05, -4.172316494077677e-06, -0.25620216131210327, -0.3040146231651306], "finish_reason": "stop"}], "metrics": {"energy": 242.2368819065094, "energy_per_token": 1.2616504265964033, "time": 11.151918, "time_per_token": 0.05808290625}}
{"outputs": [{"text": " re.sub(ALPHANUMERIC, ' ', text1).lower()", "tokens": [" re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-1.9294006824493408, -0.0001829695247579366, -0.01374400407075882, -0.08943306654691696, -0.253672331571579, -8.106198947643861e-06, -0.0002522150462027639, -1.2040065485052764e-05, -1.5497195136049413e-06, -9.047575440490618e-05, -0.028776200488209724, -0.5821544528007507, -0.0006940339808352292, -0.0004010588163509965, -0.028286360204219818, -0.00017438798386137933, -0.2789614200592041, -0.02217579446732998, -0.26499903202056885, -0.00016449528629891574, -0.2583194375038147], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0006344689172692597, -7.4741430580616e-05, -6.961580220377073e-05, -0.0007539528887718916, -0.00022849810193292797, -0.0027913199737668037, -3.933898824470816e-06, -7.152531907195225e-06, -0.0002598424907773733, -2.002696055569686e-05, -2.50339189733495e-06, -0.00013433984713628888, -0.00021002470748499036, -2.5510462364763953e-05, -0.09771770983934402, -0.00017474555352237076, -4.494089080253616e-05, -0.000285227142740041], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.49667423963546753, -0.009807142429053783, -0.04341902211308479, -0.00022837892174720764, -0.006289332173764706, -0.01681452803313732, -0.018685976043343544, -0.08232389390468597], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001842805795604363, -0.00012742661056108773, -8.475421054754406e-05, -0.0013492538128048182, -6.580135959666222e-05, -0.00011443436960689723, -0.00012408917245920748, -0.0006102845072746277], "finish_reason": "stop"}, {"text": " sum(vec1[word] for word in vec1 if word in vec2)", "tokens": [" sum", "(", "vec", "1", "[", "word", "]", " for", " word", " in", " vec", "1", " if", " word", " in", " vec", "2", ")", "\n"], "logprobs": [-1.831007480621338, -0.17388102412223816, -0.36235255002975464, -0.008533797226846218, -0.5593055486679077, -0.6737505197525024, -0.003024886129423976, -0.045754533261060715, -0.0001911934232339263, -0.0020104688592255116, -0.021351363509893417, -0.9905298948287964, -0.029143076390028, -0.39299476146698, -0.00018904806347563863, -8.070142939686775e-05, -0.0017432268941774964, -0.0008151783840730786, -0.005112313199788332], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.009931318461894989, -0.34361615777015686, -0.0029912511818110943, -0.0008362610242329538, -0.0016670628683641553, -0.4528995752334595, -0.025372374802827835, -0.02081957831978798, -0.0002138386043952778, -0.00047708096099086106, -0.00037317464011721313, -0.0002810560108628124, -3.0517112463712692e-05, -0.0033195887226611376, -1.9550132492440753e-05, -4.2437604861333966e-05, -0.0007940953364595771, -0.0005833592731505632, -0.0016434985445812345], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.08762753009796143, -0.00680782413110137, -0.023229140788316727, -0.0010520643554627895, -0.00038818930624984205, -0.029344869777560234, -0.0007497837068513036, -0.19703735411167145, -0.001725257490761578, -0.0001915509783430025, -0.002322002314031124, -1.728519782773219e-05, -5.721882189391181e-05, -0.6792739033699036, -0.0010536124464124441, -0.026894083246588707], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.0001323135511483997, -5.817244164063595e-05, -4.637133679352701e-05, -0.002409889828413725, -1.7046782886609435e-05, -0.0016991952434182167, -8.5588610090781e-05, -0.0017014563782140613, -0.00011884459672728553, -0.0005708495154976845, -6.9141146923357155e-06, -3.099436753473128e-06, -0.00016592556494288146, -0.001907911617308855, -4.0649541915627196e-05, -7.510157047363464e-06, -5.960462772236497e-07, -2.455681169521995e-05, -0.0002719986077863723], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.4604419767856598, -7.271740287251305e-06, -0.014957889914512634, -0.0013048476539552212, -0.004542983137071133, -0.0009402383584529161, -0.04685728996992111, -0.0008220868767239153, -0.00031871485407464206, -0.00021801002731081098, -9.011816291604191e-05, -3.766942609217949e-05, -0.000248401309363544, -0.00018463814922142774, -0.00017653337272349745, -0.007470883894711733], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.33852460980415344, -0.08022484183311462, -0.0007898071780800819, -0.00011014331539627165, -0.07218219339847565, -0.04816276580095291], "finish_reason": "stop"}, {"text": " 0", "tokens": [" ", "0", "\n"], "logprobs": [-0.01625182293355465, -0.14946825802326202, -0.7356830835342407], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.3947029709815979, -3.814689989667386e-06, -0.07013007253408432, -0.021136745810508728, -0.004898214712738991], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.11750388890504837, -0.00456897122785449, -0.007368648424744606, -0.019527336582541466, -0.024349207058548927, -0.0038472223095595837, -0.000263894529780373, -0.004923244938254356, -0.010610830038785934], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)<|endoftext|>#!/usr/bin/env python3", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.7247318625450134, -0.016870791092514992, -2.3603161025675945e-05, -4.768360213347478e-06, -0.00014697425649501383, -1.8000440832111053e-05, -0.0011002921964973211, -0.01414781715720892, -2.7418097943154862e-06, -0.0002205128694185987, -1.680836794548668e-05, -5.173549288883805e-05, -3.6954811548639555e-06, -1.3992369174957275, -5.960462772236497e-07, -1.6689286894688848e-06, -0.00013565097469836473, -0.0001991788885788992, -0.06899906694889069, -0.9607912302017212, -0.7707293629646301, -0.043337177485227585, -0.05057620629668236, -9.667406266089529e-05, -0.003819552715867758, -0.00032646095496602356, -0.08346263319253922, -0.004561613779515028, -0.7800931334495544, -0.017617173492908478], "finish_reason": "stop"}], "metrics": {"energy": 248.59028886795056, "energy_per_token": 1.2618796389236069, "time": 11.362558, "time_per_token": 0.05767795939086295}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1.lower()).strip()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ".", "lower", "())", ".", "strip", "()", "\n"], "logprobs": [-1.010414481163025, -3.0278701160568744e-05, -3.8980677345534787e-05, -1.883488948806189e-05, -6.556489552167477e-06, -7.950943836476654e-05, -0.0003641180810518563, -0.0006180283380672336, -0.0609169639647007, -0.2571931481361389, -0.0015392372151836753, -0.02459186688065529, -9.238292841473594e-05, -0.9618160128593445, -0.20164147019386292, -0.02416316047310829, -0.25020071864128113, -0.03068125806748867, -0.007613215129822493, -0.02459838055074215], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.000753357307985425, -7.021180499577895e-05, -7.593343616463244e-05, -0.0007345362100750208, -0.00018880968855228275, -0.002538080094382167, -3.814689989667386e-06, -6.794906312279636e-06, -0.0002650863316375762, -1.549708758830093e-05, -2.50339189733495e-06, -0.00014995403762441128, -0.00029345019720494747, -2.706014311115723e-05, -0.06679422408342361, -0.00012039413559250534, -4.3987260141875595e-05, -0.0002658013836480677], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5913466811180115, -0.00895543210208416, -0.042395882308483124, -0.00022206225548870862, -0.005700403358787298, -0.014981025829911232, -0.01806953363120556, -0.09020489454269409], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00016044282529037446, -0.00012981049076188356, -8.022463589441031e-05, -0.0014079429674893618, -5.709961988031864e-05, -9.500529267825186e-05, -0.00013720047718379647, -0.0006316096987575293], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.7585726976394653, -0.0002637753786984831, -0.0005414212355390191, -0.002262415364384651, -0.11593767255544662, -0.0032185916788876057, -8.034383063204587e-05, -0.5296590328216553, -0.00025519452174194157, -0.00016473367577418685, -2.276871418871451e-05, -0.0007711059297434986, -0.0003367095487192273, -4.708655978902243e-05, -4.5536911784438416e-05, -0.007597480434924364], "finish_reason": "stop"}, {"text": " sum(vec1[x] * vec2[x] for x in intersection)", "tokens": [" sum", "(", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", ")", "\n"], "logprobs": [-0.010491691529750824, -1.4687399864196777, -0.00105408881790936, -0.0018109364900738, -0.03696576878428459, -0.2646732032299042, -0.006730268709361553, -0.02168574370443821, -0.0003943857445847243, -0.0005857420619577169, -0.0002951186615973711, -0.0004805363714694977, -2.6940935640595853e-05, -0.0024263011291623116, -8.22540732769994e-06, -2.074220174108632e-05, -0.0003904534096363932, -0.0015749443555250764, -0.001979060238227248], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.0677494928240776, -0.0059722778387367725, -0.023004207760095596, -0.0010838593589141965, -0.00037520044133998454, -0.02284470945596695, -0.0006199345225468278, -0.18855604529380798, -0.0018893502419814467, -0.00019298121333122253, -0.0024565064813941717, -1.7523612768854946e-05, -6.8662193370983e-05, -0.9788501262664795, -0.0009994279826059937, -0.033194176852703094], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.0001699779968475923, -5.6980417866725475e-05, -4.9470632802695036e-05, -0.003419506596401334, -1.764281842042692e-05, -0.002268124371767044, -9.738924563862383e-05, -0.0024512740783393383, -0.0001551984460093081, -0.0005756151513196528, -6.6756979322235566e-06, -4.172316494077677e-06, -0.0001532914029667154, -0.0026702960021793842, -4.470248313737102e-05, -7.510157047363464e-06, -8.344646857949556e-07, -2.932505594799295e-05, -0.00033122775494121015], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.4882424473762512, -1.0490362910786644e-05, -0.014570499770343304, -0.0011470888275653124, -0.006231639534235001, -0.0008010039455257356, -0.05714315548539162, -0.000979420612566173, -0.00027533553657121956, -0.00024196557933464646, -8.082063141046092e-05, -3.564294092939235e-05, -0.0001821352052502334, -0.00020323118951637298, -0.00016890530241653323, -0.006413709372282028], "finish_reason": "stop"}, {"text": " denominator == 0.0:", "tokens": [" denominator", " ==", " ", "0", ".", "0", ":", "\n"], "logprobs": [-0.377983033657074, -0.10723774135112762, -0.0006814065272919834, -0.00011467275908216834, -2.688995361328125, -0.01707753725349903, -0.0031666632276028395, -0.06839083880186081], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.01637602224946022, -0.13416948914527893, -0.649078905582428, -0.025368191301822662, -0.030665766447782516], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-1.8398905992507935, -0.0016217187512665987, -0.008171223104000092, -9.536738616588991e-07, -1.6689286894688848e-06, -0.14225360751152039, -0.00028761065914295614, -0.3195834457874298, -0.005161294247955084], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.10521796345710754, -0.005013513378798962, -0.007361903320997953, -0.01908358745276928, -0.02404574304819107, -0.004218489397317171, -0.00025948495022021234, -0.004720496013760567, -0.009807142429053783], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.7730023860931396, -7.510157047363464e-06, -0.00036590558011084795, -1.0132738680113107e-05, -0.002188432030379772, -0.013009551912546158, -2.7418097943154862e-06, -0.0001445904199499637, -1.3828182090946939e-05, -1.8715683836489916e-05, -3.2186455882765586e-06, -0.7319467663764954], "finish_reason": "stop"}], "metrics": {"energy": 267.7653827266694, "energy_per_token": 1.4631988127140403, "time": 10.731622, "time_per_token": 0.05864274316939891}}
{"outputs": [{"text": " text1.lower().replace('\\n', ' ').strip()", "tokens": [" text", "1", ".", "lower", "()", ".", "replace", "('", "\\", "n", "'", ",", " '", " '", ")", ".", "strip", "()", "\n"], "logprobs": [-1.1542071104049683, -0.0016742035513743758, -0.0013904437655583024, -0.6712116599082947, -0.0004144048143643886, -0.42751839756965637, -0.36791539192199707, -0.33652263879776, -0.9894169569015503, -0.2292511761188507, -0.007183201611042023, -0.004396178759634495, -0.049911193549633026, -0.16716700792312622, -0.0003302744007669389, -0.5965240001678467, -1.0554864406585693, -0.03161989524960518, -0.1541927456855774], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0008107712492346764, -7.021180499577895e-05, -6.5205356804654e-05, -0.0009264229447580874, -0.00014351768186315894, -0.0026815906167030334, -3.6954811548639555e-06, -8.821448318485636e-06, -0.00024720950750634074, -1.4305012882687151e-05, -3.099436753473128e-06, -0.0001720042055239901, -0.00028200942324474454, -3.135155202471651e-05, -0.05578971654176712, -0.00012206286191940308, -5.2927523938706145e-05, -0.0002898749662563205], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.6533871293067932, -0.00956275686621666, -0.04450257495045662, -0.0002525725867599249, -0.005560881923884153, -0.013390136882662773, -0.019628221169114113, -0.07954920828342438], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00016032364510465413, -0.0001289761275984347, -7.354942499659956e-05, -0.0013550871517509222, -6.544376083184034e-05, -9.178694017464295e-05, -0.0001461399078834802, -0.0006400682032108307], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.5774354338645935, -0.00020323118951637298, -0.0004761277523357421, -0.0025879007298499346, -0.1789385825395584, -0.0028974716551601887, -8.105902816168964e-05, -0.5679397583007812, -0.00024959311122074723, -0.0001512651506345719, -2.098061486321967e-05, -0.0007764662150293589, -0.00036161558819003403, -5.876845170860179e-05, -4.386805812828243e-05, -0.00945825595408678], "finish_reason": "stop"}, {"text": " sum([vec1[word] * vec2[word] for word in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "word", "]", " *", " vec", "2", "[", "word", "]", " for", " word", " in", " intersection", "])", "\n"], "logprobs": [-0.013863342814147472, -0.38973507285118103, -0.0027885858435183764, -0.0008413827163167298, -0.0018237876938655972, -1.8913639783859253, -0.010550673119723797, -0.06827694922685623, -0.0003951007383875549, -0.0006663962849415839, -0.0005683475756086409, -0.0005169962532818317, -4.7205765440594405e-05, -0.008404363878071308, -4.875540980719961e-05, -2.4318398573086597e-05, -0.0008831891464069486, -0.0006780709372833371, -0.001370087033137679], "finish_reason": "stop"}, {"text": " math.sqrt(sum([vec1[x] ** 2 for x in vec1]))", "tokens": [" math", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", "]))", "\n"], "logprobs": [-2.9417800903320312, -5.1020273531321436e-05, -0.0013781820889562368, -0.0002516191452741623, -0.0006510283565148711, -0.05703191086649895, -0.10750842094421387, -0.0011872155591845512, -0.0005809764843434095, -0.07235031574964523, -0.0008967668982222676, -0.16624413430690765, -0.0021848634351044893, -8.583032467868179e-06, -0.0013958006165921688, -9.894321920000948e-06, -4.684815212385729e-05, -1.7709805965423584, -0.012830797582864761, -0.3477530777454376, -0.002593251410871744], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00016008525562938303, -8.177422569133341e-05, -5.972207145532593e-05, -0.003396102227270603, -2.1815061700181104e-05, -0.0016265984158962965, -8.892617915989831e-05, -0.0021808191668242216, -0.00014006110723130405, -0.0005136600811965764, -8.34461570775602e-06, -2.9802276912960224e-06, -0.00016342257731594145, -0.0018239067867398262, -4.1483970562694594e-05, -8.34461570775602e-06, -7.152555099310121e-07, -2.455681169521995e-05, -0.0003054867556784302], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.456447571516037, -9.894321920000948e-06, -0.017949290573596954, -0.0013243722496554255, -0.005540846846997738, -0.0013090145075693727, -0.0552283339202404, -0.0011181537993252277, -0.0002460177056491375, -0.0002517383254598826, -9.321732068201527e-05, -3.6477376852417365e-05, -0.00017998983094003052, -0.00021801002731081098, -0.000176652567461133, -0.006151314824819565], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.3122703731060028, -0.09208060055971146, -0.0007948100101202726, -0.00014232576359063387, -0.06930777430534363, -0.0457388199865818], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.016254285350441933, -0.15654949843883514, -0.6973561644554138, -0.027997998520731926, -0.028367476537823677], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.3523842990398407, -3.6954811548639555e-06, -0.0723666176199913, -0.02378583885729313, -0.004543932154774666], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.12426982074975967, -0.005266127642244101, -0.009831459261476994, -0.016454944387078285, -0.02522883005440235, -0.004286150448024273, -0.00022837892174720764, -0.005553176160901785, -0.011277031153440475], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)<|endoftext|>from __future__ import annotations", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")<", "|", "end", "of", "text", "|>", "from", " __", "future", "__", " import", " annotations", "\n"], "logprobs": [-0.7451826930046082, -0.017182067036628723, -2.4437606043647975e-05, -5.483612312673358e-06, -0.00012396997772157192, -1.6212332411669195e-05, -0.0012349606258794665, -0.017088787630200386, -2.3841830625315197e-06, -0.0001932195882545784, -1.2636104656849056e-05, -4.327203714638017e-05, -4.0531076592742465e-06, -1.4879658222198486, -4.768370445162873e-07, -1.4305104514278355e-06, -0.00017391123401466757, -0.0001401803019689396, -0.07311338186264038, -1.342025637626648, -3.4298629760742188, -0.0002867764269467443, -2.622600959512056e-06, -0.0004991239402443171, -1.1430832147598267, -0.0071886456571519375], "finish_reason": "stop"}], "metrics": {"energy": 252.54253410243976, "energy_per_token": 1.29508991847405, "time": 11.3577385, "time_per_token": 0.05824481282051282}}
{"outputs": [{"text": " re.sub(ALPHANUMERIC, '', text1.lower())", "tokens": [" re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " ''", ",", " text", "1", ".", "lower", "())", "\n"], "logprobs": [-1.8561581373214722, -0.00017128908075392246, -0.017290685325860977, -0.08223902434110641, -0.24074402451515198, -9.298280929215252e-06, -0.0003496989083942026, -1.3232143828645349e-05, -1.4305104514278355e-06, -0.00010942813969450071, -0.057815756648778915, -1.0040044784545898, -0.00019762947340495884, -0.03935936093330383, -0.0002134810492862016, -1.1786597967147827, -0.1291458010673523, -0.021342378109693527, -0.43361344933509827], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0006642519147135317, -7.009260298218578e-05, -6.580135959666222e-05, -0.0005963454605080187, -0.00019965562387369573, -0.0021588134113699198, -4.0531076592742465e-06, -7.867782187531702e-06, -0.00029523781267926097, -1.8954096958623268e-05, -2.145764938177308e-06, -0.00014411364099942148, -0.00022873646230436862, -2.4914430468925275e-05, -0.05945450812578201, -0.00013350549852475524, -4.2437604861333966e-05, -0.00023707917716819793], "finish_reason": "stop"}, {"text": " np.array([text1.count(word) for word in set(text1.split())])", "tokens": [" np", ".", "array", "([", "text", "1", ".", "count", "(", "word", ")", " for", " word", " in", " set", "(", "text", "1", ".", "split", "()", ")]", ")", "\n"], "logprobs": [-1.2445142269134521, -0.00026842328952625394, -0.24680715799331665, -0.45490404963493347, -1.1578058004379272, -0.037546563893556595, -0.006674259435385466, -0.09543124586343765, -0.005910656414926052, -0.7233380079269409, -0.014902104623615742, -0.03584790602326393, -0.0006505518686026335, -0.0007608617888763547, -0.9859032034873962, -0.0017573880031704903, -0.03735870495438576, -0.0014512732159346342, -0.001709667849354446, -0.008694413118064404, -0.11524675786495209, -0.00013004888023715466, -0.06685465574264526, -0.05674823001027107], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001370812824461609, -0.00011967896716669202, -6.186770770000294e-05, -0.0015062665333971381, -6.675497570540756e-05, -0.00010322991875000298, -0.00011085849109804258, -0.0006027788622304797], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.5484505295753479, -0.0001928620331455022, -0.00043930893298238516, -0.0019249258330091834, -0.15368378162384033, -0.001987983239814639, -6.353653589030728e-05, -0.5522674322128296, -0.00023624490131624043, -0.00014053787162993103, -2.2053474822314456e-05, -0.0007108307327143848, -0.00034374051028862596, -4.875540980719961e-05, -4.625213477993384e-05, -0.007762386463582516], "finish_reason": "stop"}, {"text": " sum(vec1[x] * vec2[x] for x in intersection)", "tokens": [" sum", "(", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", ")", "\n"], "logprobs": [-0.009667602367699146, -1.3491491079330444, -0.0013394916895776987, -0.0014216327108442783, -0.03251322731375694, -0.22820787131786346, -0.008273139595985413, -0.027208400890231133, -0.0003044141922146082, -0.0006133820279501379, -0.00032062159152701497, -0.0003899767471011728, -3.099393507000059e-05, -0.0023036866914480925, -7.867782187531702e-06, -2.002696055569686e-05, -0.00036769305006600916, -0.0013068715343251824, -0.002012729411944747], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1.keys()])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", ".", "keys", "()", "])", "\n"], "logprobs": [-0.08826979249715805, -0.00871273037046194, -0.021060176193714142, -0.0009146321099251509, -0.00044216870446689427, -0.02014346607029438, -0.0006658005877397954, -0.18276038765907288, -0.0015980342868715525, -0.00020621081057470292, -0.0023551841732114553, -1.764281842042692e-05, -8.761498611420393e-05, -0.5208433866500854, -0.004778750240802765, -1.0650248527526855, -0.003197083715349436, -6.4490144723095e-05, -0.0024040627758949995, -0.07218163460493088], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00015710550360381603, -5.030505417380482e-05, -6.031808152329177e-05, -0.0030651751440018415, -2.169585604860913e-05, -0.0015794672071933746, -8.976056415122002e-05, -0.0021510813385248184, -0.00014911970356479287, -0.0005678709712810814, -7.152531907195225e-06, -2.7418097943154862e-06, -0.00013886917440686375, -0.0020553194917738438, -4.053033626405522e-05, -7.867782187531702e-06, -5.960462772236497e-07, -2.8013790142722428e-05, -0.0003351603518240154], "finish_reason": "stop"}, {"text": " sum1 + sum2 - numerator", "tokens": [" sum", "1", " +", " sum", "2", " -", " numer", "ator", "\n"], "logprobs": [-3.55887770652771, -0.05373256281018257, -1.540269136428833, -0.0030618475284427404, -0.0003693613689392805, -0.10598424822092056, -0.25708264112472534, -2.861018856492592e-06, -0.01658369041979313], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.2923028767108917, -0.09753628820180893, -0.0007917130133137107, -0.00012861855793744326, -0.07070358842611313, -0.04474882781505585], "finish_reason": "stop"}, {"text": " 0", "tokens": [" ", "0", "\n"], "logprobs": [-0.016901737079024315, -0.19329379498958588, -0.653745174407959], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.3033273220062256, -4.0531076592742465e-06, -0.05920027568936348, -0.020914843305945396, -0.004823239985853434], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.12835921347141266, -0.005551871843636036, -0.00908054132014513, -0.014486611820757389, -0.022890150547027588, -0.0037796504329890013, -0.00020752183627337217, -0.004750394728034735, -0.010567186400294304], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio"], "logprobs": [-0.8553720712661743, -6.794906312279636e-06, -0.0002461368858348578, -9.894321920000948e-06, -0.0019468179671093822, -0.011593468487262726, -2.264974000354414e-06, -0.00011979816190432757, -1.2874520507466514e-05, -5.722029527532868e-06, -2.622600959512056e-06], "finish_reason": "stop"}], "metrics": {"energy": 248.1374648475646, "energy_per_token": 1.334072391653573, "time": 11.159943, "time_per_token": 0.0599996935483871}}
{"outputs": [{"text": " text1.lower().strip().replace(' ', '')", "tokens": [" text", "1", ".", "lower", "()", ".", "strip", "()", ".", "replace", "('", " '", ",", " '", "')", "\n"], "logprobs": [-1.1310759782791138, -0.001661826390773058, -0.0010564705589786172, -0.6238882541656494, -0.00037472377880476415, -0.49022695422172546, -1.3677328824996948, -0.04604795575141907, -1.334236741065979, -0.16990910470485687, -0.4243248999118805, -1.7538409233093262, -0.0022594418842345476, -0.34606674313545227, -0.11060146987438202, -0.37923166155815125], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0007363230688497424, -6.925819616299123e-05, -5.781483559985645e-05, -0.0006542449118569493, -0.00021884430316276848, -0.002865853253751993, -4.172316494077677e-06, -6.318072337307967e-06, -0.00018857131362892687, -1.680836794548668e-05, -2.7418097943154862e-06, -0.00014959646796341985, -0.0002933310461230576, -3.242440288886428e-05, -0.04340212792158127, -0.00011491115583339706, -4.637133679352701e-05, -0.0002849888114724308], "finish_reason": "stop"}, {"text": " np.array([text1.count(word) for word in set(text1.split())])", "tokens": [" np", ".", "array", "([", "text", "1", ".", "count", "(", "word", ")", " for", " word", " in", " set", "(", "text", "1", ".", "split", "()", ")]", ")", "\n"], "logprobs": [-1.188301920890808, -0.00025602878304198384, -0.23974089324474335, -0.48831209540367126, -1.1458064317703247, -0.03588953986763954, -0.0075441221706569195, -0.0957324355840683, -0.0060971686616539955, -0.7605056762695312, -0.012110396288335323, -0.043402813374996185, -0.0007833749405108392, -0.0006700892699882388, -0.9163691997528076, -0.0016350485384464264, -0.04472010210156441, -0.0015037668636068702, -0.0021075436379760504, -0.00695013115182519, -0.10664194822311401, -0.00014840454969089478, -0.07069358974695206, -0.0688350573182106], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00014530557382386178, -0.0001494772732257843, -8.05822346592322e-05, -0.0014488924061879516, -6.401333666872233e-05, -0.00010334911348763853, -0.00014709345123264939, -0.0007130940794013441], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.6375407576560974, -0.00021669900161214173, -0.0004957877099514008, -0.002266697119921446, -0.1567137986421585, -0.002844575559720397, -7.283422019099817e-05, -0.4653696119785309, -0.00019822540343739092, -0.0001433984871255234, -2.2649508537142538e-05, -0.0009046276099979877, -0.0003599472693167627, -4.9828242481453344e-05, -5.578839045483619e-05, -0.008715447969734669], "finish_reason": "stop"}, {"text": " sum(vec1[x] * vec2[x] for x in intersection)", "tokens": [" sum", "(", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", ")", "\n"], "logprobs": [-0.010096902959048748, -1.4566140174865723, -0.0012216256000101566, -0.0013441346818581223, -0.0387861542403698, -0.1857806295156479, -0.00906553864479065, -0.017982544377446175, -0.00047791501856409013, -0.0005648924270644784, -0.0003588747640606016, -0.0003678122302517295, -2.407998726994265e-05, -0.0022381513845175505, -8.34461570775602e-06, -2.2172682292875834e-05, -0.00037853704998269677, -0.001336158369667828, -0.002378612756729126], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.09532883763313293, -0.006037569139152765, -0.02002732828259468, -0.0008998635457828641, -0.0004203628050163388, -0.025225110352039337, -0.0007895689341239631, -0.18021424114704132, -0.0017043125117197633, -0.00015269544383045286, -0.0032364153303205967, -1.6331539882230572e-05, -6.8662193370983e-05, -0.9420869946479797, -0.0010409895330667496, -0.038647159934043884], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00014554394874721766, -5.4834770708112046e-05, -4.386805812828243e-05, -0.0024504417087882757, -1.883488948806189e-05, -0.0016362386522814631, -8.284702198579907e-05, -0.0015044810716062784, -0.00013100242358632386, -0.00046826363541185856, -7.152531907195225e-06, -2.7418097943154862e-06, -0.00011085849109804258, -0.002277282765135169, -3.85038583772257e-05, -7.271740287251305e-06, -4.768370445162873e-07, -2.586808113846928e-05, -0.0003110878460574895], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5714776515960693, -1.0609570381348021e-05, -0.015475546941161156, -0.0016515913885086775, -0.005529940128326416, -0.0008105330052785575, -0.05387986823916435, -0.000920706195756793, -0.00027998341829515994, -0.00019977481861133128, -0.00010442188795423135, -2.3245540432981215e-05, -0.00020704510097857565, -0.0001833270798670128, -0.00016199229867197573, -0.005918951705098152], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.35446134209632874, -0.09487954527139664, -0.000835903687402606, -0.00014280252798926085, -0.06607218086719513, -0.0455704927444458], "finish_reason": "stop"}, {"text": " 1", "tokens": [" ", "1", "\n"], "logprobs": [-0.018177472054958344, -1.9807851314544678, -1.0462498664855957], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.36155351996421814, -3.814689989667386e-06, -0.06485569477081299, -0.02363472990691662, -0.004583566915243864], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.12454572319984436, -0.004718597512692213, -0.0078294537961483, -0.016904432326555252, -0.024934817105531693, -0.0038252531085163355, -0.0002351722796447575, -0.004400569945573807, -0.012341795489192009], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.7542107105255127, -5.483612312673358e-06, -0.00032419670606032014, -1.0132738680113107e-05, -0.0021115881390869617, -0.012575731612741947, -2.861018856492592e-06, -0.00011383838864276186, -1.1920858014491387e-05, -1.0251946150674485e-05, -2.9802276912960224e-06, -0.7939409017562866], "finish_reason": "stop"}], "metrics": {"energy": 248.35983303642266, "energy_per_token": 1.3281274493926345, "time": 10.944417, "time_per_token": 0.05852629411764706}}
{"outputs": [{"text": " ALPHANUMERIC.sub('', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.8512858152389526, -4.1960789531003684e-05, -3.659658250398934e-05, -1.2636104656849056e-05, -6.079655122448457e-06, -7.009260298218578e-05, -0.0003716255014296621, -0.0006874820101074874, -0.04984099417924881, -1.5820837020874023, -0.00017581824795342982, -0.05271235108375549, -0.00014518637908622622, -0.6677117347717285, -0.009415625594556332, -0.03832310810685158, -0.00035148640745319426, -0.0672261118888855], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0007189311436377466, -6.09140915912576e-05, -5.6265202147187665e-05, -0.0008504349971190095, -0.000226472009671852, -0.0023004752583801746, -4.410734163684538e-06, -7.748573807475623e-06, -0.0002668739762157202, -2.1219027985353023e-05, -3.099436753473128e-06, -0.00015531764074694365, -0.00024089295766316354, -2.932505594799295e-05, -0.047722227871418, -0.00015746307326480746, -4.9232225137529895e-05, -0.0003149013500660658], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.6945481896400452, -0.01142330002039671, -0.05165984854102135, -0.00019298121333122253, -0.006274642888456583, -0.014596816152334213, -0.019445501267910004, -0.07796160876750946], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013624693383462727, -0.00012146688823122531, -7.295342220459133e-05, -0.0013738964917138219, -6.735097849741578e-05, -8.713819261174649e-05, -0.00011383838864276186, -0.0006543640629388392], "finish_reason": "stop"}, {"text": " sum(vec1[word] for word in vec2 if vec2[word] > 0)", "tokens": [" sum", "(", "vec", "1", "[", "word", "]", " for", " word", " in", " vec", "2", " if", " vec", "2", "[", "word", "]", " >", " ", "0", ")", "\n"], "logprobs": [-1.8454543352127075, -0.15407288074493408, -0.47547808289527893, -0.008096965961158276, -0.5346680283546448, -0.6584556698799133, -0.002506688004359603, -0.04006132110953331, -0.00014911970356479287, -0.0015655416063964367, -0.027040638029575348, -0.5422272682189941, -0.055083371698856354, -2.5148563385009766, -0.7051555514335632, -0.0040494357235729694, -6.603976362384856e-05, -0.1552586853504181, -0.09991514682769775, -0.038301654160022736, -0.013216156512498856, -0.015723420307040215, -0.00827727746218443], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.010518941096961498, -0.30280348658561707, -0.0027789566665887833, -0.0006683023530058563, -0.0012335318606346846, -0.35142603516578674, -0.02525591291487217, -0.021496400237083435, -0.00020323118951637298, -0.00046004203613847494, -0.00037281715776771307, -0.00026306029758416116, -3.313963316031732e-05, -0.003672998631373048, -1.597391747054644e-05, -3.731181277544238e-05, -0.0007630059262737632, -0.0005739472107961774, -0.001606484642252326], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.08134322613477707, -0.007522825617343187, -0.02169087715446949, -0.0013256819220259786, -0.0004287039046175778, -0.028040539473295212, -0.0007456144667230546, -0.1818123459815979, -0.0016339774010702968, -0.00021646064124070108, -0.00248231110163033, -1.645074735279195e-05, -6.246371776796877e-05, -0.7345412373542786, -0.0011957883834838867, -0.04216539114713669], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00016902448260225356, -5.900685573578812e-05, -6.09140915912576e-05, -0.002714879112318158, -1.3828182090946939e-05, -0.0023291383404284716, -9.011816291604191e-05, -0.0017798787448555231, -0.00014685506175737828, -0.000653411028906703, -8.106198947643861e-06, -4.0531076592742465e-06, -0.00013636612857226282, -0.0018819731194525957, -4.8397800128441304e-05, -8.583032467868179e-06, -7.152555099310121e-07, -2.169585604860913e-05, -0.0003121604095213115], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5283235311508179, -1.168244216387393e-05, -0.015770945698022842, -0.001116844010539353, -0.005996332969516516, -0.0007845661020837724, -0.05639123171567917, -0.0009402383584529161, -0.0003268184664193541, -0.00026890001026913524, -8.535020606359467e-05, -3.158996332786046e-05, -0.00016675988445058465, -0.00018809456378221512, -0.0001736728590913117, -0.006464640609920025], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.3132472634315491, -0.09923509508371353, -0.0006554362480528653, -0.00010680581908673048, -0.061684321612119675, -0.04992015287280083], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.014836332760751247, -0.13576550781726837, -0.7393289804458618, -0.029459813609719276, -0.027822252362966537], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.3577318489551544, -4.291525328881107e-06, -0.06766237318515778, -0.02301119826734066, -0.004402825143188238], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.11439536511898041, -0.004854084458202124, -0.007302023936063051, -0.016559654846787453, -0.02598537690937519, -0.004408165812492371, -0.00022957073815632612, -0.004605519585311413, -0.011201707646250725], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.7626742124557495, -8.4638240878121e-06, -0.0003589939442463219, -8.106198947643861e-06, -0.0021347845904529095, -0.012316244654357433, -2.264974000354414e-06, -8.034383063204587e-05, -1.3232143828645349e-05, -1.5735502529423684e-05, -2.622600959512056e-06, -0.704623281955719], "finish_reason": "stop"}], "metrics": {"energy": 257.64245992279047, "energy_per_token": 1.4156179116636838, "time": 10.521409, "time_per_token": 0.05780993956043956}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).strip().lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "strip", "()", ".", "lower", "()", "\n"], "logprobs": [-1.010414481163025, -3.0278701160568744e-05, -3.8980677345534787e-05, -1.883488948806189e-05, -6.556489552167477e-06, -7.950943836476654e-05, -0.0003641180810518563, -0.0006180283380672336, -0.0609169639647007, -0.2571931481361389, -0.0015392372151836753, -0.02459186688065529, -9.238292841473594e-05, -0.4825717806816101, -0.010701529681682587, -1.9055203199386597, -0.0032005298417061567, -0.011319464072585106, -0.0023098711390048265, -0.00022206225548870862, -0.014143703505396843], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00075049843871966, -6.472854875028133e-05, -7.521823135903105e-05, -0.0008060067193582654, -0.00015686711412854493, -0.002544738817960024, -4.0531076592742465e-06, -7.390948667307384e-06, -0.00025614796322770417, -1.966933996300213e-05, -3.3378546504536644e-06, -0.00016544880054425448, -0.00023064337437972426, -2.8490614567999728e-05, -0.04746772348880768, -0.00014041867689229548, -4.9828242481453344e-05, -0.000288087350782007], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.6218667030334473, -0.010045802220702171, -0.0481293685734272, -0.00024863966973498464, -0.00531842140480876, -0.014054960571229458, -0.01786065101623535, -0.06874848157167435], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001722425949992612, -0.00014602071314584464, -6.627816765103489e-05, -0.0013975863112136722, -7.223821739898995e-05, -8.725739462533966e-05, -0.00013934595335740596, -0.000690460205078125], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.7561570405960083, -0.00021038226259406656, -0.0004633783537428826, -0.0025269025936722755, -0.18768294155597687, -0.003395389299839735, -8.272782724816352e-05, -0.42841246724128723, -0.00030393750057555735, -0.00015245705435518175, -2.276871418871451e-05, -0.0007267932523973286, -0.00030560590676032007, -4.446407547220588e-05, -4.8636207793606445e-05, -0.008466540835797787], "finish_reason": "stop"}, {"text": " sum(vec1[x] * vec2[x] for x in intersection)", "tokens": [" sum", "(", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", ")", "\n"], "logprobs": [-0.013371669687330723, -1.108622431755066, -0.0012279358925297856, -0.0014782940270379186, -0.032792214304208755, -0.23391525447368622, -0.0078066252171993256, -0.016010884195566177, -0.00037698791129514575, -0.0006014683749526739, -0.0003357561945449561, -0.0006542449118569493, -2.253030106658116e-05, -0.0019838192965835333, -7.033323527139146e-06, -2.3007127310847864e-05, -0.0003859252028632909, -0.001334729720838368, -0.002357919467613101], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1]) ** 0.5", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", "])", " **", " ", "0", ".", "5", "\n"], "logprobs": [-0.1124843955039978, -0.005588503088802099, -0.019589528441429138, -0.0009982370538637042, -0.00041368984966538846, -0.02152533456683159, -0.0006087357178330421, -0.17062127590179443, -0.0017201402224600315, -0.0002127659390680492, -0.002561623230576515, -1.728519782773219e-05, -7.807903602952138e-05, -0.5789080262184143, -0.005351385101675987, -0.3835785984992981, -1.1992745399475098, -0.03764587268233299, -0.007149114273488522, -5.722029527532868e-06, -9.179073458653875e-06, -0.004416829906404018], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.0001760566228767857, -6.48477507638745e-05, -6.401333666872233e-05, -0.0028962830547243357, -2.276871418871451e-05, -0.001334610627964139, -0.00010048838157672435, -0.002460311632603407, -0.00013612773909699172, -0.0006249382277019322, -6.6756979322235566e-06, -2.7418097943154862e-06, -0.00016080040950328112, -0.0022762122098356485, -3.862306402879767e-05, -7.033323527139146e-06, -7.152555099310121e-07, -2.610649426060263e-05, -0.00031454383861273527], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.6033778786659241, -1.0609570381348021e-05, -0.017838051542639732, -0.0013448490062728524, -0.0038602848071604967, -0.0009308296139352024, -0.05853760242462158, -0.0012025751639157534, -0.00027426297310739756, -0.0002196785935666412, -9.238292841473594e-05, -3.6238969187252223e-05, -0.00016044282529037446, -0.00018904806347563863, -0.0002101439022226259, -0.0065713501535356045], "finish_reason": "stop"}, {"text": " not denominator:", "tokens": [" not", " denominator", ":", "\n"], "logprobs": [-1.8302323818206787, -0.1665719747543335, -0.03292325884103775, -0.08074048161506653], "finish_reason": "stop"}, {"text": " 0", "tokens": [" ", "0", "\n"], "logprobs": [-0.016148721799254417, -0.14299875497817993, -0.7511165738105774], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.45985227823257446, -3.933898824470816e-06, -0.06664390116930008, -0.023594330996274948, -0.004659509286284447], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.10188094526529312, -0.00521062919870019, -0.006487380713224411, -0.016234111040830612, -0.02638752944767475, -0.003704472677782178, -0.00024232311989180744, -0.004388107918202877, -0.009023009799420834], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.7099677920341492, -7.271740287251305e-06, -0.0003045333724003285, -8.940656698541716e-06, -0.002070070942863822, -0.011876115575432777, -2.264974000354414e-06, -9.238292841473594e-05, -1.2516897186287679e-05, -1.811964830267243e-05, -2.145764938177308e-06, -0.6945350170135498], "finish_reason": "stop"}], "metrics": {"energy": 260.6114676780701, "energy_per_token": 1.4478414871003893, "time": 10.513048, "time_per_token": 0.05840582222222222}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1.lower()).strip()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ".", "lower", "())", ".", "strip", "()", "\n"], "logprobs": [-1.0768101215362549, -3.194758028257638e-05, -4.1483970562694594e-05, -1.3351351299206726e-05, -5.722029527532868e-06, -8.272782724816352e-05, -0.0004372832481749356, -0.0007034449372440577, -0.059952110052108765, -0.23811884224414825, -0.0014557965332642198, -0.025450706481933594, -8.49926145747304e-05, -0.9923023581504822, -0.21778397262096405, -0.023846251890063286, -0.3013995289802551, -0.03309822827577591, -0.007147930562496185, -0.026973454281687737], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0008106521563604474, -6.437094270950183e-05, -6.0794889577664435e-05, -0.0006647284608334303, -0.00018749863374978304, -0.0018482997547835112, -3.4570634852570947e-06, -7.271740287251305e-06, -0.00026723151677288115, -1.3828182090946939e-05, -2.264974000354414e-06, -0.0001679517881711945, -0.00021169328829273582, -2.9682672902708873e-05, -0.05714450776576996, -9.703165414975956e-05, -4.2676016164477915e-05, -0.0003475538978818804], "finish_reason": "stop"}, {"text": " np.array([text1.split().count(word) for word in sorted(set(text1.split()))])", "tokens": [" np", ".", "array", "([", "text", "1", ".", "split", "()", ".", "count", "(", "word", ")", " for", " word", " in", " sorted", "(", "set", "(", "text", "1", ".", "split", "()))", "])", "\n"], "logprobs": [-1.2579268217086792, -0.0002746204845607281, -0.24892285466194153, -0.5108682513237, -0.9711892604827881, -0.042654648423194885, -0.00668006157502532, -2.5967698097229004, -0.05891529843211174, -0.009530521929264069, -0.0009246364934369922, -0.004509873688220978, -0.42747199535369873, -0.0076964981853961945, -0.03885369747877121, -0.00041368984966538846, -0.0003319427778478712, -3.0347485542297363, -0.00808076560497284, -0.23460261523723602, -0.005364665295928717, -0.015409225597977638, -0.0016520674107596278, -0.00130425242241472, -0.0021212236024439335, -0.03599591553211212, -0.05162973701953888, -0.02870206907391548], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00014327930693980306, -0.00014602071314584464, -0.00010549465514486656, -0.0012738931691274047, -6.222531374078244e-05, -0.00010191874753218144, -0.00014876213390380144, -0.0006007535266689956], "finish_reason": "stop"}, {"text": " sum(vec1[c] for c in vec2 if c in vec1)", "tokens": [" sum", "(", "vec", "1", "[", "c", "]", " for", " c", " in", " vec", "2", " if", " c", " in", " vec", "1", ")", "\n"], "logprobs": [-1.853299856185913, -0.18524618446826935, -0.4982454776763916, -0.008917625062167645, -0.6603792905807495, -2.8354318141937256, -0.002049847040325403, -0.016984133049845695, -0.00013386306818574667, -0.0012019798159599304, -0.04793519154191017, -0.30525556206703186, -0.052838776260614395, -0.17803868651390076, -0.00021038226259406656, -0.00011657988943625242, -0.0164670217782259, -0.014830225147306919, -0.007856066338717937], "finish_reason": "stop"}, {"text": " sum(vec1[word] * vec2[word] for word in intersection)", "tokens": [" sum", "(", "vec", "1", "[", "word", "]", " *", " vec", "2", "[", "word", "]", " for", " word", " in", " intersection", ")", "\n"], "logprobs": [-0.012308472767472267, -1.2855236530303955, -0.0013085383689031005, -0.001408776268362999, -0.04193095862865448, -2.236558198928833, -0.0032036192715168, -0.08575055748224258, -0.0005053196800872684, -0.0005899119423702359, -0.00047922570956870914, -0.00016985881666187197, -4.053033626405522e-05, -0.0064888023771345615, -2.706014311115723e-05, -2.8132995794294402e-05, -0.00037353215157054365, -0.0009311868925578892, -0.0017733338754624128], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in vec1])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.07588265091180801, -0.010867457836866379, -0.024246007204055786, -0.0012212683213874698, -0.0004266782198101282, -0.017895663157105446, -0.0006555553991347551, -0.2143782675266266, -0.0014104428701102734, -0.00020597243565134704, -0.0021083762403577566, -1.9430925021879375e-05, -0.00010668662434909493, -0.6351982355117798, -0.005806957371532917, -0.40022966265678406, -0.29780113697052], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00016544880054425448, -6.961580220377073e-05, -5.936446541454643e-05, -0.002980316523462534, -1.8358061424805783e-05, -0.0019488405669108033, -8.797258487902582e-05, -0.0015635181916877627, -0.00014673586701974273, -0.0006037319544702768, -7.629365427419543e-06, -3.4570634852570947e-06, -0.00012003655137959868, -0.0020350953564047813, -4.1483970562694594e-05, -7.629365427419543e-06, -5.960462772236497e-07, -2.777537883957848e-05, -0.00034278715611435473], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5698263049125671, -9.65590606938349e-06, -0.018050098791718483, -0.0016520674107596278, -0.0057466295547783375, -0.0009126074146479368, -0.05582703277468681, -0.0009191579301841557, -0.0002755738969426602, -0.0002796259068418294, -9.870042413240299e-05, -3.0040289857424796e-05, -0.0001472126314183697, -0.00018010901112575084, -0.0001740304142003879, -0.006129751447588205], "finish_reason": "stop"}, {"text": " not denominator:", "tokens": [" not", " denominator", ":", "\n"], "logprobs": [-2.0185296535491943, -0.14846694469451904, -0.03792469576001167, -0.08741487562656403], "finish_reason": "stop"}, {"text": " 1.0", "tokens": [" ", "1", ".", "0", "\n"], "logprobs": [-0.016260500997304916, -1.9779424667358398, -0.5158473253250122, -0.017506832256913185, -0.09535939991474152], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.31448715925216675, -5.006777428206988e-06, -0.07326772063970566, -0.018997738137841225, -0.005026086233556271], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.1073695570230484, -0.004380512051284313, -0.008189904503524303, -0.018269594758749008, -0.026637008413672447, -0.0037276323419064283, -0.00023755589791107923, -0.00468751136213541, -0.009149409830570221], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio"], "logprobs": [-0.7799702286720276, -7.510157047363464e-06, -0.00041392818093299866, -8.940656698541716e-06, -0.0019458661554381251, -0.012765007093548775, -2.264974000354414e-06, -0.00010823617776622996, -1.2278481335670222e-05, -9.417489309271332e-06, -3.3378546504536644e-06], "finish_reason": "stop"}], "metrics": {"energy": 267.8747909984589, "energy_per_token": 1.3529029848407015, "time": 11.571494, "time_per_token": 0.058441888888888884}}
{"outputs": [{"text": " re.sub(ALPHANUMERIC, ' ', text1).lower()", "tokens": [" re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-1.8561581373214722, -0.00017128908075392246, -0.017290685325860977, -0.08223902434110641, -0.24074402451515198, -9.298280929215252e-06, -0.0003496989083942026, -1.3232143828645349e-05, -1.4305104514278355e-06, -0.00010942813969450071, -0.057815756648778915, -0.6201868653297424, -0.0007509748684242368, -0.000506511190906167, -0.026968929916620255, -0.0001591317413840443, -0.22683385014533997, -0.02391248196363449, -0.2568739056587219, -0.00015221867943182588, -0.31273791193962097], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0006642519147135317, -7.009260298218578e-05, -6.580135959666222e-05, -0.0005963454605080187, -0.00019965562387369573, -0.0021588134113699198, -4.0531076592742465e-06, -7.867782187531702e-06, -0.00029523781267926097, -1.8954096958623268e-05, -2.145764938177308e-06, -0.00014411364099942148, -0.00022873646230436862, -2.4914430468925275e-05, -0.05945450812578201, -0.00013350549852475524, -4.2437604861333966e-05, -0.00023707917716819793], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5587671399116516, -0.010334196500480175, -0.04862389340996742, -0.0001915509783430025, -0.006958181504160166, -0.01666623167693615, -0.017583556473255157, -0.08457126468420029], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001387499796692282, -0.00013374387344811112, -7.712543447269127e-05, -0.0014281797921285033, -6.997340824455023e-05, -0.00010883215873036534, -0.00012575789878610522, -0.0006450717919506133], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.6922948956489563, -0.0001728385395836085, -0.0005240259342826903, -0.0022639615926891565, -0.16637668013572693, -0.0021259819623082876, -6.389413465512916e-05, -0.5349615216255188, -0.00025829317746683955, -0.00014137222024146467, -2.1457441107486375e-05, -0.0007982643437571824, -0.0003077510336879641, -4.23184028477408e-05, -5.352353764465079e-05, -0.009135589934885502], "finish_reason": "stop"}, {"text": " sum(vec1[x] * vec2[x] for x in intersection)", "tokens": [" sum", "(", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", ")", "\n"], "logprobs": [-0.007676861248910427, -1.0609283447265625, -0.001104817260056734, -0.0013499680208042264, -0.031729381531476974, -0.21889393031597137, -0.006621325854212046, -0.022173114120960236, -0.00036590558011084795, -0.0005460678366944194, -0.00046171018038876355, -0.0005250982358120382, -2.6464111215318553e-05, -0.001876142923720181, -7.033323527139146e-06, -1.8000440832111053e-05, -0.0004968600696884096, -0.0013528252020478249, -0.002253494691103697], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.0927535817027092, -0.005875340662896633, -0.016417302191257477, -0.0009012927766889334, -0.0004209585895296186, -0.032371047884225845, -0.0005589353386312723, -0.18046747148036957, -0.001347468001767993, -0.00022790218645241112, -0.0027268866542726755, -1.4781842764932662e-05, -4.95898348162882e-05, -0.8426095843315125, -0.000774798565544188, -0.04249357059597969], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00019560330838430673, -5.125868119648658e-05, -5.6980417866725475e-05, -0.0033538066782057285, -1.597391747054644e-05, -0.0015499495202675462, -0.00010489867418073118, -0.0016900317277759314, -0.0001817776501411572, -0.000559292733669281, -6.6756979322235566e-06, -3.2186455882765586e-06, -0.00015269544383045286, -0.002356254495680332, -4.95898348162882e-05, -7.867782187531702e-06, -5.960462772236497e-07, -2.706014311115723e-05, -0.00028951745480298996], "finish_reason": "stop"}, {"text": " (sum1**0.5) * (sum2**0.5)", "tokens": [" (", "sum", "1", "**", "0", ".", "5", ")", " *", " (", "sum", "2", "**", "0", ".", "5", ")", "\n"], "logprobs": [-1.774919867515564, -0.1489541232585907, -0.005515713710337877, -1.8319082260131836, -0.012895407155156136, -2.4318398573086597e-05, -6.544376083184034e-05, -0.05536312609910965, -0.0014544870937243104, -0.0015961299650371075, -4.851700214203447e-05, -0.00024530262453481555, -0.003083358285948634, -0.00013100242358632386, -1.5735502529423684e-05, -3.4570634852570947e-06, -0.00016056202002801, -0.0138393584638834], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.32987165451049805, -0.09499934315681458, -0.0007570500019937754, -0.00012611546844709665, -0.07465514540672302, -0.0471857525408268], "finish_reason": "stop"}, {"text": " 0", "tokens": [" ", "0", "\n"], "logprobs": [-0.017432797700166702, -0.1416483074426651, -0.6783415675163269], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.3398127555847168, -4.887569048150908e-06, -0.04674455523490906, -0.02718125469982624, -0.00497543765231967], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.1099563017487526, -0.006531202234327793, -0.007716726511716843, -0.015812719240784645, -0.024125806987285614, -0.004050385672599077, -0.00025149996508844197, -0.004541677888482809, -0.009837125428020954], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")", "\n"], "logprobs": [-0.6757828593254089, -0.014707477763295174, -2.7179348762729205e-05, -4.291525328881107e-06, -0.00014745102089364082, -1.6569954823353328e-05, -0.0010876698652282357, -0.016548750922083855, -2.622600959512056e-06, -0.00022206225548870862, -1.2993727978027891e-05, -6.19869097135961e-05, -2.7418097943154862e-06, -0.2890031933784485, -0.30420565605163574], "finish_reason": "stop"}], "metrics": {"energy": 241.11284655761722, "energy_per_token": 1.3321151743514763, "time": 10.718978, "time_per_token": 0.05922087292817679}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.9370049238204956, -2.9801878554280847e-05, -4.017272294731811e-05, -1.5258672647178173e-05, -6.6756979322235566e-06, -8.976056415122002e-05, -0.0003626880934461951, -0.0006217215559445322, -0.08050843328237534, -0.263682097196579, -0.0017201402224600315, -0.021825365722179413, -9.476689592702314e-05, -0.4201730191707611, -0.014256295748054981, -0.15405550599098206, -0.00018034738604910672, -0.2706545293331146], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0007802779437042773, -6.532455881824717e-05, -5.745722592109814e-05, -0.0005945583689026535, -0.000254241080256179, -0.002360417041927576, -3.814689989667386e-06, -9.059865078597795e-06, -0.0002668739762157202, -1.4305012882687151e-05, -3.814689989667386e-06, -0.00015221867943182588, -0.00025519452174194157, -2.8609820219571702e-05, -0.03475584834814072, -0.00012635385792236775, -4.8636207793606445e-05, -0.0003110878460574895], "finish_reason": "stop"}, {"text": " [k for k, v in Counter(text1.split()).items()]", "tokens": [" [", "k", " for", " k", ",", " v", " in", " Counter", "(", "text", "1", ".", "split", "())", ".", "items", "()", "]", "\n"], "logprobs": [-2.683690071105957, -4.27170467376709, -0.13273796439170837, -0.02308284118771553, -0.1138870045542717, -0.1982921063899994, -0.0004111875023227185, -0.056123036891222, -0.01130390539765358, -0.039247382432222366, -0.0003212174342479557, -0.0045836856588721275, -0.015529656782746315, -0.03361476585268974, -9.226373367710039e-05, -0.12071128934621811, -0.0002674698771443218, -0.3719934821128845, -0.021731119602918625], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013779645087197423, -0.00013982271775603294, -6.258291978156194e-05, -0.0017015753546729684, -7.033100700937212e-05, -8.83301836438477e-05, -0.00013362467871047556, -0.0007285801111720502], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.6606348156929016, -0.00014983485743869096, -0.0005191409145481884, -0.002401327481493354, -0.14377741515636444, -0.0022493319120258093, -5.495397272170521e-05, -0.4797753095626831, -0.00016044282529037446, -0.00016723664884921163, -2.2291887944447808e-05, -0.0006923662149347365, -0.00040344204171560705, -6.186770770000294e-05, -4.8040190449682996e-05, -0.008363697677850723], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.006920653395354748, -0.3099331259727478, -0.0023174830712378025, -0.0007265550084412098, -0.0014247277285903692, -0.3048766851425171, -0.019564513117074966, -0.011563774198293686, -0.00023779425828251988, -0.0004847066884394735, -0.00028761065914295614, -0.00023934361524879932, -3.123234637314454e-05, -0.004321166314184666, -1.7762025890988298e-05, -3.373566141817719e-05, -0.0006160030607134104, -0.0005942009738646448, -0.0016384999034926295], "finish_reason": "stop"}, {"text": " sum([vec1[x]**2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.09812348335981369, -0.007946543395519257, -0.013351790606975555, -0.0011984078446403146, -0.0006652049487456679, -0.02524266205728054, -0.0005940818227827549, -1.9109591245651245, -0.0012432949151843786, -0.003420457011088729, -2.1934269170742482e-05, -0.00019810620869975537, -0.8853668570518494, -0.002431533532217145, -0.031629133969545364], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00015901254664640874, -8.535020606359467e-05, -6.437094270950183e-05, -0.003263982245698571, -1.549708758830093e-05, -0.0014224658953025937, -0.00010013079008786008, -0.001791778369806707, -0.0001787979417713359, -0.0005827635759487748, -7.986990567587782e-06, -2.9802276912960224e-06, -0.00016973962192423642, -0.0021395429503172636, -4.100715523236431e-05, -8.821448318485636e-06, -7.152555099310121e-07, -2.4437606043647975e-05, -0.0003196682082489133], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.5440367460250854, -9.179073458653875e-06, -0.013074856251478195, -0.0008376903715543449, -0.005030593369156122, -0.0008764001540839672, -0.06565921753644943, -0.0009152276325039566, -0.00029213930247351527, -0.0002525725867599249, -8.809178689261898e-05, -3.194758028257638e-05, -0.0002019201492657885, -0.0002115741081070155, -0.0001436368766007945, -0.006749450694769621], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.2959562838077545, -0.07503311336040497, -0.0006435230607166886, -0.00011205045302631333, -0.06785086542367935, -0.04485643282532692], "finish_reason": "stop"}, {"text": " 0", "tokens": [" ", "0", "\n"], "logprobs": [-0.01605522818863392, -0.1503550410270691, -0.7001588940620422], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.40328317880630493, -3.576272320060525e-06, -0.05789349973201752, -0.01861518621444702, -0.0046898843720555305], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.11402475833892822, -0.005952725186944008, -0.00867254938930273, -0.016836564987897873, -0.028462953865528107, -0.004732360597699881, -0.0002343380037928, -0.004366506822407246, -0.010750710032880306], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio"], "logprobs": [-0.8912282586097717, -8.4638240878121e-06, -0.0002961912250611931, -1.1801649634435307e-05, -0.0021350225433707237, -0.011798481456935406, -2.145764938177308e-06, -9.405170567333698e-05, -1.3232143828645349e-05, -1.3351351299206726e-05, -2.50339189733495e-06], "finish_reason": "stop"}], "metrics": {"energy": 224.20806253528596, "energy_per_token": 1.2319124315125602, "time": 10.525558, "time_per_token": 0.057832736263736265}}
{"outputs": [{"text": " re.sub(r'\\s+', ' ', text1.lower()).strip()", "tokens": [" re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " text", "1", ".", "lower", "())", ".", "strip", "()", "\n"], "logprobs": [-1.8561581373214722, -0.00017128908075392246, -0.017290685325860977, -0.08223902434110641, -1.6027625799179077, -0.5775331854820251, -0.5276751518249512, -0.12333419919013977, -5.9602869441732764e-05, -0.18162566423416138, -0.0008367374539375305, -0.0014136569807305932, -0.42923256754875183, -0.00019751029321923852, -0.7673943042755127, -0.2500191330909729, -0.07675818353891373, -0.6593984961509705, -0.04847728833556175, -0.01407600101083517, -0.029452521353960037], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0006642519147135317, -7.009260298218578e-05, -6.580135959666222e-05, -0.0005963454605080187, -0.00019965562387369573, -0.0021588134113699198, -4.0531076592742465e-06, -7.867782187531702e-06, -0.00029523781267926097, -1.8954096958623268e-05, -2.145764938177308e-06, -0.00014411364099942148, -0.00022873646230436862, -2.4914430468925275e-05, -0.05945450812578201, -0.00013350549852475524, -4.2437604861333966e-05, -0.00023707917716819793], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5587671399116516, -0.010334196500480175, -0.04862389340996742, -0.0001915509783430025, -0.006958181504160166, -0.01666623167693615, -0.017583556473255157, -0.08457126468420029], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001387499796692282, -0.00013374387344811112, -7.712543447269127e-05, -0.0014281797921285033, -6.997340824455023e-05, -0.00010883215873036534, -0.00012575789878610522, -0.0006450717919506133], "finish_reason": "stop"}, {"text": " len(set(vec1) & set(vec2))", "tokens": [" len", "(", "set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", "))", "\n"], "logprobs": [-1.4635140895843506, -0.004865710623562336, -0.5341128706932068, -0.07746350765228271, -0.0031276855152100325, -0.0024033491499722004, -0.5785688161849976, -0.15932539105415344, -0.0005644158809445798, -3.361645576660521e-05, -1.07287787614041e-05, -0.0007479969062842429, -0.0006467396160587668, -0.010196145623922348], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.008648913353681564, -0.2626470923423767, -0.0028896264266222715, -0.0005938435206189752, -0.002079706871882081, -0.2965191602706909, -0.021532684564590454, -0.024022815749049187, -0.0002205128694185987, -0.0004943578969687223, -0.000536655425094068, -0.0002224197960458696, -3.0397906812140718e-05, -0.003610759973526001, -1.645074735279195e-05, -3.755022044060752e-05, -0.0007008241955190897, -0.0005911033367738128, -0.0016231469344347715], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.08634591847658157, -0.004782309755682945, -0.018132401630282402, -0.0008530553313903511, -0.0003921216703020036, -0.02542920596897602, -0.0008350699208676815, -0.17942887544631958, -0.0014260371681302786, -0.00022968991834204644, -0.0028271013870835304, -1.9311717551317997e-05, -5.924526340095326e-05, -0.6084807515144348, -0.0009421439026482403, -0.037366513162851334], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00016783259343355894, -4.541770613286644e-05, -7.497983460780233e-05, -0.0029813863802701235, -1.9430925021879375e-05, -0.001896846224553883, -0.00010573305189609528, -0.0022480234038084745, -0.00019047829846385866, -0.0006231511943042278, -7.390948667307384e-06, -3.814689989667386e-06, -0.00015805903240107, -0.002031288342550397, -4.351044481154531e-05, -6.6756979322235566e-06, -5.960462772236497e-07, -2.8490614567999728e-05, -0.00028772983932867646], "finish_reason": "stop"}, {"text": " math.sqrt(sum1) * math.sqrt(sum2)", "tokens": [" math", ".", "sqrt", "(", "sum", "1", ")", " *", " math", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-1.7685372829437256, -4.303362584323622e-05, -0.00023827097902540118, -0.0012172202114015818, -0.0030270253773778677, -0.0008534126682206988, -0.06621410697698593, -0.0005361788207665086, -0.00041607304592616856, -0.000490068516228348, -4.100715523236431e-05, -4.339123915997334e-05, -0.00012361239350866526, -0.00016616393986623734, -0.00012408917245920748, -0.0030750392470508814], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.2623078227043152, -0.08774874359369278, -0.000724887300748378, -0.000125281119835563, -0.08282199501991272, -0.040651995688676834], "finish_reason": "stop"}, {"text": " 0", "tokens": [" ", "0", "\n"], "logprobs": [-0.019323201850056648, -0.16379478573799133, -0.683829128742218], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-0.3745155334472656, -5.006777428206988e-06, -0.06430217623710632, -0.022869760170578957, -0.004917076323181391], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.10732362419366837, -0.005476471967995167, -0.00773127656430006, -0.01653362438082695, -0.0284169539809227, -0.00436282716691494, -0.00024351492174901068, -0.005070327315479517, -0.011052458547055721], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)<|endoftext|>\"\"\"", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.7178272008895874, -0.016076814383268356, -2.7656173188006505e-05, -6.198863957251888e-06, -0.0001426833332516253, -1.811964830267243e-05, -0.0013036570744588971, -0.014713938347995281, -2.264974000354414e-06, -0.00021526881027966738, -1.5735502529423684e-05, -5.447716102935374e-05, -3.814689989667386e-06, -1.4304513931274414, -8.344646857949556e-07, -1.4305104514278355e-06, -0.0001392267586197704, -0.00022349244682118297, -2.843648910522461, -0.006329845637083054, -0.001534000039100647, -0.0004732680681627244, -0.16774606704711914], "finish_reason": "stop"}], "metrics": {"energy": 269.3106247615813, "energy_per_token": 1.4557331068193584, "time": 10.940745, "time_per_token": 0.05913916216216216}}
