{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.1586969792842865, -4.172316494077677e-06, -1.9073468138230965e-06, 0.0, 0.0, 0.0, -5.4596363042946905e-05, -6.079655122448457e-06, -0.0419052392244339, -0.23007537424564362, -0.00016592556494288146, -0.031199391931295395, -6.723177648382261e-05, -0.16790713369846344, -0.018901705741882324, -0.05749988183379173, -6.09140915912576e-05, -0.09419280290603638], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00024768622824922204, -3.3378546504536644e-06, 0.0, 0.0, 0.0, -7.390948667307384e-06, -1.6689286894688848e-06, -1.311301275563892e-06, -3.015949550899677e-05, -0.00022063204960431904, -5.721882189391181e-05, -0.00040356122190132737, -6.97350042173639e-05, -7.807903602952138e-05, -1.811964830267243e-05, -5.960446742392378e-06, -6.556489552167477e-06, -0.0005335576133802533], "finish_reason": "stop"}, {"text": " np.array([text1.count(word) for word in Counter(text1.split()).keys()])", "tokens": [" np", ".", "array", "([", "text", "1", ".", "count", "(", "word", ")", " for", " word", " in", " Counter", "(", "text", "1", ".", "split", "())", ".", "keys", "()", "])", "\n"], "logprobs": [-1.477258563041687, -0.00023278864682652056, -0.009664532728493214, -0.5669435858726501, -3.406306266784668, -0.0022960747592151165, -0.000834117061458528, -0.05123727023601532, -0.0004984090337529778, -0.7640680074691772, -0.02265768125653267, -0.028794385492801666, -0.0010149095905944705, -0.03835156187415123, -0.966761589050293, -0.002457695547491312, -0.026621568948030472, -0.0021585754584521055, -0.06163545325398445, -0.005997281055897474, -0.09570730477571487, -0.010716980323195457, -0.010229657404124737, -0.00011145447206217796, -0.04534255340695381, -0.057188525795936584], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00010406429646536708, -4.6967357775429264e-05, -3.838465272565372e-05, -0.00011860620725201443, -9.536697689327411e-06, -1.3351351299206726e-05, -2.6225699912174605e-05, -0.0006030171643942595], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.0043760016560554504, -0.001010503270663321, -0.0004667146422434598, -0.0005964645533822477, -0.19738911092281342, -0.019927537068724632, -0.0002315968304174021, -4.6132929128361866e-05, -1.549708758830093e-05, -0.00018702188390307128, -0.00016306500765495002, -0.00821047741919756], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.020698964595794678, -0.014342435635626316, -0.001824739621952176, -0.00018142008048016578, -0.00022873646230436862, -0.03836372122168541, -0.020269986242055893, -0.00023636408150196075, -0.00012265883560758084, -0.0001714082609396428, -1.3112935448589269e-05, -1.4185804502631072e-05, -1.1086402082582936e-05, -0.0006974886637181044, -6.9141146923357155e-06, -2.9802276912960224e-06, -0.00011085849109804258, -0.00043418517452664673, -0.003083952469751239], "finish_reason": "stop"}, {"text": " np.sqrt(sum([vec1[x]**2 for x in vec1.keys()]))", "tokens": [" np", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "1", ".", "keys", "()", "]))", "\n"], "logprobs": [-0.6939197182655334, -4.887569048150908e-06, -0.3287528157234192, -0.00026663561584427953, -0.01734340749680996, -0.019900541752576828, -0.07221978902816772, -4.95898348162882e-05, -0.012849275022745132, -0.0028638325165957212, -0.020973095670342445, -0.5159861445426941, -0.0005523824947886169, -9.393251093570143e-05, -7.593343616463244e-05, -1.883488948806189e-05, -0.9387440085411072, -6.83045873302035e-05, -0.698150634765625, -0.00019870213873218745, -3.3378546504536644e-06, -0.0014024670235812664, -0.005189401097595692], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00014983485743869096, -5.149708886165172e-05, -3.1709168979432434e-05, -0.00026806574896909297, -2.264974000354414e-06, -0.0027353274635970592, -7.86750388215296e-05, -0.0021144431084394455, -3.540453326422721e-05, -8.583032467868179e-06, -1.2755313036905136e-05, -2.50339189733495e-06, -0.00010275312524754554, -0.00028784899041056633, -4.088794958079234e-05, -7.867782187531702e-06, -5.960462772236497e-07, -1.0013530300057027e-05, -0.00014983485743869096], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.008856420405209064, -5.722029527532868e-06, -1.4662635294371285e-05, -0.00012778419477399439, -0.00022754464589525014, -7.235741941258311e-05, -0.0026190525386482477, -0.0005382042727433145, -0.00010978573118336499, -9.536697689327411e-06, -0.0001436368766007945, -1.3112935448589269e-05, -1.4662635294371285e-05, -2.8609820219571702e-05, -2.992108420585282e-05, -0.0023092764895409346], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.08015486598014832, -0.18897907435894012, -0.0007937379996292293, -0.00047052756417542696, -0.048694293946027756, -0.046777885407209396], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.004830476362258196, -0.010751535184681416, -0.04839017614722252, -0.003404774935916066, -0.00445587607100606], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.0932227298617363, -0.0001908358681248501, -0.0002431573811918497, -2.3841855067985307e-07, 0.0, -0.00039200251922011375, -9.202533692587167e-05, -0.00048494499060325325, -0.004273805767297745], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.004983148071914911, -0.001321634161286056, -0.007149114273488522, -0.0017408467829227448, -0.028083426877856255, -0.006770882289856672, -0.00015662873920518905, -0.0005103239673189819, -0.010944575071334839], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio"], "logprobs": [-0.12514787912368774, -1.07287787614041e-05, -7.033323527139146e-06, 0.0, -0.0010550415609031916, -0.004569089971482754, -5.245195097813848e-06, -1.9073304429184645e-05, -3.099436753473128e-06, -1.0728830375228426e-06, -3.099436753473128e-06], "finish_reason": "stop"}], "metrics": {"energy": 864.7298030223847, "energy_per_token": 4.345375894584848, "time": 22.49039, "time_per_token": 0.11301703517587941}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1.lower())", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ".", "lower", "())", "\n"], "logprobs": [-0.18394599854946136, -5.8412379075889476e-06, -1.6689286894688848e-06, 0.0, 0.0, 0.0, -5.018585216021165e-05, -6.437280717364047e-06, -0.0471242293715477, -0.23384326696395874, -0.00018082413589581847, -0.030489562079310417, -5.9126061387360096e-05, -1.9304968118667603, -0.04581773653626442, -0.005223673768341541, -0.44167083501815796], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00022837892174720764, -2.3841830625315197e-06, 0.0, 0.0, 0.0, -5.364403477869928e-06, -1.5497195136049413e-06, -5.960462772236497e-07, -2.3841574147809297e-05, -0.00015746307326480746, -5.435795901576057e-05, -0.00046623803791590035, -6.508615479106084e-05, -6.210611172718927e-05, -3.099393507000059e-05, -5.245195097813848e-06, -6.318072337307967e-06, -0.0005604841862805188], "finish_reason": "stop"}, {"text": " Counter(text1.split(' '))", "tokens": [" Counter", "(", "text", "1", ".", "split", "('", " '", "))", "\n"], "logprobs": [-0.521783709526062, -0.016604913398623466, -0.04663977026939392, -0.00012635385792236775, -0.0030928654596209526, -0.00724154943600297, -3.026219129562378, -0.001209838199429214, -0.0011561383726075292, -0.03095255233347416], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-9.679325739853084e-05, -4.160317621426657e-05, -3.683499380713329e-05, -0.00011955977242905647, -1.3470558769768104e-05, -2.276871418871451e-05, -3.099393507000059e-05, -0.0007496645557694137], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.003694971324875951, -0.0011383965611457825, -0.0006852186052128673, -0.0004894727608188987, -0.1535586416721344, -0.024295922368764877, -0.000310730334604159, -5.829164365422912e-05, -1.5616295058862306e-05, -0.00013660451804753393, -0.00012385078298393637, -0.006022402085363865], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.02566532976925373, -0.019591983407735825, -0.0025217896327376366, -0.00022909401741344482, -0.0005150898941792548, -0.031098974868655205, -0.01496176514774561, -0.0002834395272657275, -9.476689592702314e-05, -0.00018285033002030104, -1.3112935448589269e-05, -1.8715683836489916e-05, -1.2397689715726301e-05, -0.0005859803641214967, -1.1801649634435307e-05, -2.50339189733495e-06, -0.00012373158824630082, -0.0004911408759653568, -0.0029428766574710608], "finish_reason": "stop"}, {"text": " np.sum([vec1[x]**2 for x in list(vec1.keys())])", "tokens": [" np", ".", "sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.6307437419891357, -5.8412379075889476e-06, -1.306640625, -0.038034070283174515, -0.12579382956027985, -9.83428253675811e-05, -0.002514655003324151, -0.0029199367854744196, -0.0016327871708199382, -0.6966872811317444, -0.0012217445764690638, -0.00015364897262770683, -8.093983342405409e-05, -1.2993727978027891e-05, -0.46925458312034607, -0.00011896379146492109, -0.0006107610533945262, -4.017272294731811e-05, -0.02408635802567005, -2.264974000354414e-06, -2.6940935640595853e-05, -1.311301275563892e-06, -0.005930683575570583, -0.002952860901132226], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00015186110977083445, -7.068861305015162e-05, -3.516612196108326e-05, -0.00040463366894982755, -2.145764938177308e-06, -0.006768987979739904, -9.154854342341423e-05, -0.0027232011780142784, -2.288792165927589e-05, -1.1086402082582936e-05, -1.3708974620385561e-05, -4.0531076592742465e-06, -7.64102369430475e-05, -0.00031859567388892174, -5.066266385256313e-05, -9.65590606938349e-06, -5.960462772236497e-07, -1.0609570381348021e-05, -0.00018344627460464835], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.005609485320746899, -5.006777428206988e-06, -1.5258672647178173e-05, -0.00012861855793744326, -0.00016258825780823827, -7.724463648628443e-05, -0.0031587013509124517, -0.0008858094224706292, -0.00010024998482549563, -2.8967437174287625e-05, -0.0001560327800689265, -1.7165990357170813e-05, -1.9430925021879375e-05, -3.361645576660521e-05, -3.373566141817719e-05, -0.0025819556321948767], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.12067019194364548, -0.21788683533668518, -0.0007870675181038678, -0.0003924791526515037, -0.044798415154218674, -0.06139186769723892], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.005999177228659391, -0.013467530719935894, -0.04333774745464325, -0.002162381773814559, -0.004774242173880339], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.055367302149534225, -0.00018499570433050394, -0.0002790300059132278, 0.0, 0.0, -0.0004385939973872155, -6.854299135738984e-05, -0.00071190285962075, -0.003181279404088855], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005860289558768272, -0.0013711584033444524, -0.006518411450088024, -0.0017233534017577767, -0.029059359803795815, -0.0076165273785591125, -0.0001662831346038729, -0.0005731132114306092, -0.009163702838122845], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.11731106787919998, -8.940656698541716e-06, -9.059865078597795e-06, 0.0, -0.00102324562612921, -0.004246979020535946, -6.556489552167477e-06, -1.7165990357170813e-05, -3.099436753473128e-06, -9.536738616588991e-07, -2.861018856492592e-06, -0.7498481273651123], "finish_reason": "stop"}], "metrics": {"energy": 852.0202638339997, "energy_per_token": 4.6305449121413025, "time": 21.664734, "time_per_token": 0.1177431195652174}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.17865635454654694, -4.887569048150908e-06, -1.9073468138230965e-06, 0.0, 0.0, 0.0, -5.364274329622276e-05, -5.364403477869928e-06, -0.054593950510025024, -0.24927763640880585, -0.00018404220463708043, -0.032533999532461166, -6.985420623095706e-05, -0.11599340289831161, -0.018161317333579063, -0.055846311151981354, -5.98412734689191e-05, -0.09695620834827423], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00024923557066358626, -1.9073468138230965e-06, 0.0, 0.0, 0.0, -9.298280929215252e-06, -1.7881377516459906e-06, -1.311301275563892e-06, -3.373566141817719e-05, -0.0001776060671545565, -5.185469490243122e-05, -0.00043644916149787605, -7.497983460780233e-05, -6.770858453819528e-05, -3.266281055402942e-05, -5.960446742392378e-06, -6.318072337307967e-06, -0.0005077026435174048], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5456384420394897, -0.01709628850221634, -0.06950695812702179, -0.00013445904187392443, -0.0031874587293714285, -0.009497695602476597, -0.04451705515384674, -0.010055361315608025], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013302871957421303, -4.541770613286644e-05, -4.100715523236431e-05, -0.00012814177898690104, -1.3112935448589269e-05, -2.098061486321967e-05, -2.2649508537142538e-05, -0.0006642519147135317], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.003546260530129075, -0.001293061301112175, -0.00043156370520591736, -0.0004781533498317003, -1.7687933444976807, -9.16677454370074e-05, -0.0005796659388579428, -0.014288613572716713, -0.00018225439998786896, -5.721882189391181e-05, -9.894321920000948e-06, -8.391981828026474e-05, -8.868777513271198e-05, -2.861018856492592e-06, -4.8636207793606445e-05, -0.008536869660019875], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.018871640786528587, -0.014042736031115055, -0.002183436183258891, -0.00023576818057335913, -0.0004338276921771467, -0.03101438283920288, -0.017147498205304146, -0.0003673355677165091, -0.0001289761275984347, -0.00013600854435935616, -1.6212332411669195e-05, -1.645074735279195e-05, -9.417489309271332e-06, -0.0005403488758020103, -1.2397689715726301e-05, -2.9802276912960224e-06, -0.00014888131408952177, -0.00045408427831716835, -0.0026337956078350544], "finish_reason": "stop"}, {"text": " sum([vec1[x]**2 for x in list(vec1.keys())])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.5004322528839111, -0.008436162024736404, -0.00243831193074584, -9.095255518332124e-05, -0.006961496081203222, -0.0013085383689031005, -0.0011743560899049044, -0.666516125202179, -0.0005601267330348492, -7.879423355916515e-05, -2.1815061700181104e-05, -4.0531076592742465e-06, -0.49590933322906494, -0.00015162272029556334, -0.000625176471658051, -3.1470757676288486e-05, -0.004582380410283804, -7.152555099310121e-07, -3.0636318115284666e-05, -1.4305104514278355e-06, -0.0007403731578961015, -0.0009941878961399198], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-8.49926145747304e-05, -5.280832192511298e-05, -2.4914430468925275e-05, -0.00030787018476985395, -2.861018856492592e-06, -0.0025830259546637535, -8.737658936297521e-05, -0.0016945539973676205, -3.2543604902457446e-05, -8.583032467868179e-06, -1.549708758830093e-05, -2.264974000354414e-06, -7.402622577501461e-05, -0.00025686301523819566, -3.0636318115284666e-05, -4.0531076592742465e-06, -1.0728830375228426e-06, -1.3947389561508317e-05, -0.00012265883560758084], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.00642176391556859, -7.033323527139146e-06, -2.1934269170742482e-05, -0.0001333863037871197, -0.0002051381452474743, -6.329813186312094e-05, -0.0027404394932091236, -0.000809699238743633, -0.00013100242358632386, -1.9550132492440753e-05, -0.00021598390594590455, -1.7762025890988298e-05, -1.2874520507466514e-05, -2.2649508537142538e-05, -2.610649426060263e-05, -0.0022226886358112097], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.13312914967536926, -0.18142473697662354, -0.0007768235518597066, -0.0005360596696846187, -0.05025520548224449, -0.05349450185894966], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.004727021791040897, -0.01421516202390194, -0.03951934352517128, -0.0020345004741102457, -0.003316499525681138], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.04940754547715187, -0.00019631843315437436, -0.0003077510336879641, -1.1920928244535389e-07, 0.0, -0.0008411445305682719, -7.891343557275832e-05, -0.0011639971053227782, -0.003587716491892934], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005116464104503393, -0.0011403016978874803, -0.005912907887250185, -0.0016957441112026572, -0.0337226502597332, -0.007899117656052113, -0.00013886917440686375, -0.0005333193112164736, -0.01050631981343031], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.1109413355588913, -1.0251946150674485e-05, -6.794906312279636e-06, 0.0, -0.0010715939570218325, -0.004434632603079081, -5.602820692729438e-06, -1.0490362910786644e-05, -2.264974000354414e-06, -8.344646857949556e-07, -2.7418097943154862e-06, -0.7492242455482483], "finish_reason": "stop"}], "metrics": {"energy": 781.1105036163332, "energy_per_token": 4.222218938466666, "time": 20.171652, "time_per_token": 0.10903595675675677}}
{"outputs": [{"text": " re.sub(ALPHANUMERIC, ' ', text1).lower()", "tokens": [" re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-2.6227197647094727, -0.0010095505276694894, -0.0023267597425729036, -0.04654510319232941, -0.23950260877609253, -4.529942543740617e-06, -3.2782016205601394e-05, -2.9802276912960224e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.0006774752982892096, -0.2518989145755768, -0.0004892344586551189, -0.00022849810193292797, -0.021065078675746918, -9.7508447652217e-05, -0.3408442735671997, -0.03586205095052719, -0.08618975430727005, -0.00010918975021922961, -0.0775362104177475], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00024971229140646756, -2.0265558760002023e-06, 0.0, 0.0, 0.0, -2.1576648578047752e-05, -1.4305104514278355e-06, -1.0728830375228426e-06, -2.658331868587993e-05, -0.0002153879904653877, -5.793403761344962e-05, -0.000417741306591779, -6.913899414939806e-05, -6.16293036728166e-05, -2.0861407392658293e-05, -5.006777428206988e-06, -7.033323527139146e-06, -0.0005105622112751007], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.4821999967098236, -0.019199484959244728, -0.05272795632481575, -0.00013505500101018697, -0.003162622917443514, -0.008263327181339264, -0.060708317905664444, -0.01169762946665287], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013124081306159496, -4.815939246327616e-05, -3.8742269680369645e-05, -0.00011908298620255664, -1.0967194612021558e-05, -1.7881233361549675e-05, -2.6702524337451905e-05, -0.0008535317610949278], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.0035259476862847805, -0.0012225781101733446, -0.0004676678800024092, -0.0005272428970783949, -0.21038946509361267, -0.043598439544439316, -0.000277123210253194, -6.258291978156194e-05, -2.3603161025675945e-05, -0.0001618731184862554, -0.000169382052263245, -0.0059022423811256886], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.02096889354288578, -0.012173285707831383, -0.002144895726814866, -0.0002244459028588608, -0.000263894529780373, -0.022388208657503128, -0.015782326459884644, -0.00016592556494288146, -0.00010752100206445903, -0.0001578206429257989, -1.07287787614041e-05, -1.7762025890988298e-05, -1.1086402082582936e-05, -0.0007693191873840988, -9.775113539944869e-06, -2.861018856492592e-06, -0.00015078838623594493, -0.00038985759601928294, -0.0026538888923823833], "finish_reason": "stop"}, {"text": " sum([vec1[x]**2 for x in list(vec1.keys())])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.5652841329574585, -0.010590188205242157, -0.0026806395035237074, -7.843663479434326e-05, -0.012181294150650501, -0.0013106813421472907, -0.001401038491167128, -0.6908367276191711, -0.0006044468027539551, -6.949660019017756e-05, -1.9788545614574105e-05, -5.364403477869928e-06, -0.6620867252349854, -0.00014399446081370115, -0.0004191712068859488, -2.777537883957848e-05, -0.001597201102413237, -9.536738616588991e-07, -3.886147169396281e-05, -1.311301275563892e-06, -0.0011202972382307053, -0.001095648156479001], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00011193125828867778, -4.708655978902243e-05, -2.539125671319198e-05, -0.0002520958660170436, -1.5497195136049413e-06, -0.0034465931821614504, -8.535020606359467e-05, -0.0016567088896408677, -3.290122185717337e-05, -7.867782187531702e-06, -7.390948667307384e-06, -3.099436753473128e-06, -4.708655978902243e-05, -0.00025900822947733104, -2.586808113846928e-05, -7.033323527139146e-06, -4.768370445162873e-07, -8.940656698541716e-06, -0.0001287377526750788], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.006005457136780024, -5.960446742392378e-06, -8.702239938429557e-06, -0.00012039413559250534, -0.00018356545479036868, -8.260862523457035e-05, -0.0022374375257641077, -0.000695344409905374, -8.05822346592322e-05, -2.7179348762729205e-05, -0.0001833270798670128, -1.2874520507466514e-05, -2.0861407392658293e-05, -2.658331868587993e-05, -2.396077979938127e-05, -0.001726447488181293], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.14188842475414276, -0.2107863873243332, -0.0007795632118359208, -0.000532842765096575, -0.048820432275533676, -0.05743663012981415], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.005359211005270481, -0.0158772524446249, -0.03621070086956024, -0.0027045360766351223, -0.0034258030354976654], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.06382519006729126, -0.00016699827392585576, -0.0002022777043748647, -1.1920928244535389e-07, 0.0, -0.0005922947311773896, -7.521823135903105e-05, -0.0007503792876377702, -0.0042857942171394825], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.004811850842088461, -0.0012467476772144437, -0.00913582555949688, -0.0016365956980735064, -0.030245322734117508, -0.008204329758882523, -0.00013469743134919554, -0.0005747812101617455, -0.011951387859880924], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.0999852642416954, -1.0847986231965479e-05, -1.0013530300057027e-05, 0.0, -0.0009173714206553996, -0.0046563055366277695, -7.867782187531702e-06, -1.0013530300057027e-05, -2.264974000354414e-06, -8.344646857949556e-07, -3.2186455882765586e-06, -0.77085942029953], "finish_reason": "stop"}], "metrics": {"energy": 818.662801673889, "energy_per_token": 4.44925435692331, "time": 21.035063, "time_per_token": 0.1143209945652174}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.19041161239147186, -3.576272320060525e-06, -2.50339189733495e-06, 0.0, 0.0, 0.0, -5.507317473529838e-05, -5.960446742392378e-06, -0.06666865944862366, -0.2633315622806549, -0.00020954797219019383, -0.030215714126825333, -6.949660019017756e-05, -0.144032821059227, -0.02089616470038891, -0.06307335197925568, -5.864924969500862e-05, -0.09706223756074905], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0002469711471349001, -2.3841830625315197e-06, 0.0, 0.0, 0.0, -1.0371154530730564e-05, -2.0265558760002023e-06, -8.344646857949556e-07, -2.1576648578047752e-05, -0.00019000156316906214, -7.73638384998776e-05, -0.00041797960875555873, -8.225102646974847e-05, -7.581423415103927e-05, -3.957670196541585e-05, -5.602820692729438e-06, -6.318072337307967e-06, -0.0005526207387447357], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.4929797351360321, -0.01583031937479973, -0.04888014495372772, -0.00011932138295378536, -0.003766111796721816, -0.009170553646981716, -0.04709090664982796, -0.011367788538336754], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00014494798961095512, -4.3748852476710454e-05, -4.708655978902243e-05, -0.000105375460407231, -1.1920858014491387e-05, -1.3470558769768104e-05, -2.7179348762729205e-05, -0.0006761648692190647], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.004639812279492617, -0.000959531927946955, -0.0006893880781717598, -0.0005416594794951379, -0.2939108610153198, -0.020218702033162117, -0.00024387246230617166, -4.446407547220588e-05, -1.8715683836489916e-05, -0.0001510267611593008, -0.00016699827392585576, -0.005934120621532202], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.01705210655927658, -0.016206080093979836, -0.0016936019528657198, -0.0002631794777698815, -0.00037508129025809467, -0.03165893256664276, -0.01726994663476944, -0.0002252801787108183, -0.0001292145170737058, -0.00013100242358632386, -1.1324817933200393e-05, -1.847726889536716e-05, -1.1920858014491387e-05, -0.0007058274932205677, -1.0013530300057027e-05, -2.50339189733495e-06, -0.00010561384988250211, -0.0004015354788862169, -0.0026202413719147444], "finish_reason": "stop"}, {"text": " sum([vec1[x]**2 for x in vec1])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.6623915433883667, -0.01095412578433752, -0.002687891712412238, -0.00010597144137136638, -0.014312705025076866, -0.0012042421149089932, -0.0019224273273721337, -0.6072567105293274, -0.0004419303731992841, -8.892617915989831e-05, -1.847726889536716e-05, -3.933898824470816e-06, -0.9574025869369507, -3.135155202471651e-05, -0.4175901412963867, -0.005706685595214367], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00011085849109804258, -7.998623186722398e-05, -2.3603161025675945e-05, -0.0002727136597968638, -1.7881377516459906e-06, -0.004003130830824375, -8.785339014139026e-05, -0.0017536989180371165, -2.753696753643453e-05, -1.0609570381348021e-05, -1.0967194612021558e-05, -3.814689989667386e-06, -6.19869097135961e-05, -0.00032729512895457447, -3.302042750874534e-05, -6.6756979322235566e-06, -8.344646857949556e-07, -1.1444026313256472e-05, -0.0001323135511483997], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.00398615188896656, -5.602820692729438e-06, -9.894321920000948e-06, -0.00010954733443213627, -0.00016080040950328112, -8.511180931236595e-05, -0.0022606311831623316, -0.00043096792069263756, -8.594620157964528e-05, -2.4437606043647975e-05, -0.00021407696476671845, -1.4305012882687151e-05, -1.2516897186287679e-05, -2.5629668016335927e-05, -3.611976353568025e-05, -0.0019530047429725528], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.10298215597867966, -0.17072629928588867, -0.0007234578370116651, -0.0005915798828937113, -0.046459075063467026, -0.06206374615430832], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.006533334031701088, -0.01502541545778513, -0.033480122685432434, -0.001763337990269065, -0.003849953645840287], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.08725112676620483, -0.00019488819816615433, -0.0002033503697020933, -1.1920928244535389e-07, 0.0, -0.0005858612130396068, -8.642300235806033e-05, -0.0005824061809107661, -0.0028435057029128075], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.006591127719730139, -0.0010449193650856614, -0.006588285323232412, -0.0017644088948145509, -0.028265153989195824, -0.008335207588970661, -0.00014709345123264939, -0.000576449150685221, -0.010733019560575485], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|>import json", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|>", "import", " json", "\n"], "logprobs": [-0.10734021663665771, -9.417489309271332e-06, -1.168244216387393e-05, 0.0, -0.0009847796754911542, -0.003907427657395601, -7.510157047363464e-06, -1.8358061424805783e-05, -2.264974000354414e-06, -7.152555099310121e-07, -2.9802276912960224e-06, -0.9461613893508911, -2.9802276912960224e-06, -5.006777428206988e-06, -6.318072337307967e-06, -4.6967357775429264e-05, -0.09806457906961441, -1.0476621389389038, -3.8532650470733643, -0.031572770327329636], "finish_reason": "stop"}], "metrics": {"energy": 763.8680821199421, "energy_per_token": 4.1741425252455855, "time": 20.18722, "time_per_token": 0.11031267759562842}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.19041161239147186, -3.576272320060525e-06, -2.50339189733495e-06, 0.0, 0.0, 0.0, -5.507317473529838e-05, -5.960446742392378e-06, -0.06666865944862366, -0.2633315622806549, -0.00020954797219019383, -0.030215714126825333, -6.949660019017756e-05, -0.144032821059227, -0.02089616470038891, -0.06307335197925568, -5.864924969500862e-05, -0.09706223756074905], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0002469711471349001, -2.3841830625315197e-06, 0.0, 0.0, 0.0, -1.0371154530730564e-05, -2.0265558760002023e-06, -8.344646857949556e-07, -2.1576648578047752e-05, -0.00019000156316906214, -7.73638384998776e-05, -0.00041797960875555873, -8.225102646974847e-05, -7.581423415103927e-05, -3.957670196541585e-05, -5.602820692729438e-06, -6.318072337307967e-06, -0.0005526207387447357], "finish_reason": "stop"}, {"text": " np.array(list(Counter(text1.split()).values()))", "tokens": [" np", ".", "array", "(", "list", "(", "Counter", "(", "text", "1", ".", "split", "())", ".", "values", "()))", "\n"], "logprobs": [-1.5911223888397217, -0.00024172721896320581, -0.007968895137310028, -0.7435550093650818, -0.31421181559562683, -0.011278681457042694, -0.10937622934579849, -0.003605177393183112, -0.021208057180047035, -0.00015507926582358778, -0.00524691678583622, -0.00629359669983387, -0.03243798762559891, -2.0146166207268834e-05, -0.0006133820279501379, -0.02308214269578457, -0.018329991027712822], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001147919538198039, -4.2199197196168825e-05, -3.635817120084539e-05, -9.417090768693015e-05, -1.168244216387393e-05, -1.9430925021879375e-05, -2.706014311115723e-05, -0.0007817073492333293], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.005202920641750097, -0.0010502781951799989, -0.0008300673216581345, -0.0005321278586052358, -0.18131636083126068, -0.033580414950847626, -0.000271521887043491, -4.935142715112306e-05, -1.9430925021879375e-05, -0.00020668754586949944, -0.0001456631434848532, -0.006963982246816158], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.03675723448395729, -0.016281377524137497, -0.0012143626809120178, -0.00027771908207796514, -0.00034195298212580383, -0.02947671338915825, -0.019255615770816803, -0.00016902448260225356, -0.0001037067049765028, -0.00010024998482549563, -1.4781842764932662e-05, -2.109982233378105e-05, -1.2636104656849056e-05, -0.0006276782951317728, -8.106198947643861e-06, -2.9802276912960224e-06, -0.00017021637177094817, -0.0004010588163509965, -0.0027846628800034523], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec1[x] for x in list(vec1.keys())])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "1", "[", "x", "]", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.5817750096321106, -0.009677165187895298, -0.0053288559429347515, -0.0001805857609724626, -0.013016612268984318, -0.0011744751827791333, -0.0009045085171237588, -2.5882365703582764, -0.003200886305421591, -0.002211269922554493, -0.00019214690837543458, -2.610649426060263e-05, -1.1444026313256472e-05, -0.0002053765201708302, -0.0001565095444675535, -1.585470999998506e-05, -0.5383411049842834, -0.00019631843315437436, -0.0018874465022236109, -4.7205765440594405e-05, -0.0946965217590332, -1.1920922133867862e-06, -5.3165931603871286e-05, -6.794906312279636e-06, -0.0004027270770166069, -0.006641931366175413], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00014578233822248876, -5.090107151772827e-05, -2.5987286790041253e-05, -0.0002748588449321687, -2.145764938177308e-06, -0.0022469530813395977, -6.41325386823155e-05, -0.001896727248094976, -3.3378044463461265e-05, -1.07287787614041e-05, -1.156323378381785e-05, -2.50339189733495e-06, -7.83174327807501e-05, -0.0002669931564014405, -3.433168603805825e-05, -4.887569048150908e-06, -8.344646857949556e-07, -9.65590606938349e-06, -0.00012385078298393637], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.004251014906913042, -6.6756979322235566e-06, -1.1444026313256472e-05, -8.535020606359467e-05, -0.000161038784426637, -6.41325386823155e-05, -0.002491229446604848, -0.0006216024048626423, -9.393251093570143e-05, -1.847726889536716e-05, -0.00015937011630740017, -9.65590606938349e-06, -2.098061486321967e-05, -2.253030106658116e-05, -3.683499380713329e-05, -0.0023180777207016945], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.06028202548623085, -0.1668008267879486, -0.000929519534111023, -0.0005237876321189106, -0.043310463428497314, -0.04083855077624321], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.00586420064792037, -0.011527478694915771, -0.040056969970464706, -0.002103260951116681, -0.004227986093610525], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.039837393909692764, -0.0001525762490928173, -0.00014900050882715732, -1.1920928244535389e-07, 0.0, -0.0006556744920089841, -6.8662193370983e-05, -0.0008865240379236639, -0.003841403406113386], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005556377116590738, -0.0011718557216227055, -0.00649780360981822, -0.001566017628647387, -0.03138713911175728, -0.007874280214309692, -0.00015245705435518175, -0.0005212855176068842, -0.010242636315524578], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.12447551637887955, -9.417489309271332e-06, -9.775113539944869e-06, 0.0, -0.0010339635191485286, -0.004062970634549856, -6.437280717364047e-06, -1.4305012882687151e-05, -2.3841830625315197e-06, -8.344646857949556e-07, -4.291525328881107e-06, -0.8246275782585144], "finish_reason": "stop"}], "metrics": {"energy": 829.8465130004881, "energy_per_token": 4.277559345363341, "time": 21.872957, "time_per_token": 0.11274720103092783}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.16476592421531677, -3.6954811548639555e-06, -2.622600959512056e-06, 0.0, 0.0, 0.0, -5.721882189391181e-05, -6.556489552167477e-06, -0.04599057510495186, -0.29192420840263367, -0.00019071667338721454, -0.03649601712822914, -7.521823135903105e-05, -0.14225101470947266, -0.020112505182623863, -0.05399417504668236, -6.0437283536884934e-05, -0.07499030977487564], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00023123928986024112, -2.0265558760002023e-06, 0.0, 0.0, 0.0, -1.1444026313256472e-05, -1.311301275563892e-06, -7.152555099310121e-07, -2.5152843591058627e-05, -0.00027056847466155887, -5.2569914259947836e-05, -0.00041845624218694866, -8.284702198579907e-05, -6.8662193370983e-05, -2.658331868587993e-05, -6.437280717364047e-06, -6.318072337307967e-06, -0.0006541258189827204], "finish_reason": "stop"}, {"text": " [tf for _, tf in Counter(text1.split()).items()]", "tokens": [" [", "tf", " for", " _", ",", " tf", " in", " Counter", "(", "text", "1", ".", "split", "())", ".", "items", "()", "]", "\n"], "logprobs": [-3.318577289581299, -1.6196953058242798, -0.5227243900299072, -1.0595380067825317, -0.004073536954820156, -0.16028493642807007, -0.00048708971007727087, -0.13738933205604553, -0.0016365956980735064, -0.036182187497615814, -0.00016807096835691482, -0.009877612814307213, -0.002369812224060297, -0.07424948364496231, -9.536288416711614e-05, -1.22306489944458, -0.00011574551899684593, -0.002114919014275074, -0.007253502495586872], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001426833332516253, -4.541770613286644e-05, -3.4450891689630225e-05, -0.00015233787416946143, -1.168244216387393e-05, -2.038458114839159e-05, -3.802703940891661e-05, -0.0007611000328324735], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.003642236115410924, -0.0010590903693810105, -0.0007981451926752925, -0.0005594118847511709, -0.12305037677288055, -0.012572200037539005, -0.00025138078490272164, -5.8410845667822286e-05, -2.062299427052494e-05, -0.00013839241000823677, -0.0001411338453181088, -0.007118813693523407], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.02099352516233921, -0.011193927377462387, -0.002635103417560458, -0.00019453064305707812, -0.00019751029321923852, -0.03356081619858742, -0.01834321767091751, -0.00019786784832831472, -8.713819261174649e-05, -0.00018737945356406271, -1.2397689715726301e-05, -1.3947389561508317e-05, -1.168244216387393e-05, -0.00066985102603212, -9.536697689327411e-06, -1.9073468138230965e-06, -0.0001711698860162869, -0.0003432638186495751, -0.002529875375330448], "finish_reason": "stop"}, {"text": " np.sqrt(sum([vec1[x]**2 for x in list(vec1.keys())]))", "tokens": [" np", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", "))", "\n"], "logprobs": [-0.3833455443382263, -6.318072337307967e-06, -0.5458317995071411, -0.00015698630886618048, -0.013596544973552227, -0.03630853444337845, -0.09183833748102188, -5.531158240046352e-05, -0.005442445166409016, -0.0039054087828844786, -0.02324649505317211, -0.5253931879997253, -0.0005853846669197083, -7.819823804311454e-05, -6.985420623095706e-05, -2.002696055569686e-05, -0.616091251373291, -0.00015078838623594493, -0.0003921216703020036, -5.936446541454643e-05, -0.020827284082770348, -4.160317621426657e-05, -3.659658250398934e-05, -4.768360213347478e-06, -0.0008946230518631637, -0.003254595212638378], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.0001726001501083374, -4.470248313737102e-05, -2.90866428258596e-05, -0.000336590368533507, -2.622600959512056e-06, -0.0038904468528926373, -9.953480184776708e-05, -0.0014731755945831537, -2.7656173188006505e-05, -8.821448318485636e-06, -1.1444026313256472e-05, -2.264974000354414e-06, -5.94836674281396e-05, -0.0003412379592191428, -3.9457496313843876e-05, -6.9141146923357155e-06, -8.344646857949556e-07, -1.4066597032069694e-05, -0.00012206286191940308], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.004293153528124094, -5.960446742392378e-06, -9.417489309271332e-06, -0.0001045410826918669, -0.00015293381875380874, -6.544376083184034e-05, -0.003349767066538334, -0.0006007535266689956, -0.00010132275929208845, -1.7404405298293568e-05, -0.00019178935326635838, -1.9430925021879375e-05, -1.7881233361549675e-05, -3.397406908334233e-05, -3.2782016205601394e-05, -0.002206274075433612], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.0768360123038292, -0.20359128713607788, -0.0006709231529384851, -0.00047291061491705477, -0.04128053039312363, -0.055897828191518784], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.004404842853546143, -0.011711767874658108, -0.03803131356835365, -0.0014067525044083595, -0.0032871519215404987], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.07296134531497955, -0.00021872512297704816, -0.0002499506517779082, -1.1920928244535389e-07, 0.0, -0.00034457468427717686, -6.103329360485077e-05, -0.00039200251922011375, -0.0034098834730684757], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.004561139270663261, -0.0011849532602354884, -0.006247514393180609, -0.0015651845606043935, -0.03424174338579178, -0.008045054040849209, -0.00017093151109293103, -0.0005399914807640016, -0.010858024470508099], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|>#!/usr/bin/env python", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.11133111268281937, -9.298280929215252e-06, -9.536697689327411e-06, 0.0, -0.000982159748673439, -0.004666747059673071, -5.722029527532868e-06, -1.2874520507466514e-05, -2.861018856492592e-06, -8.344646857949556e-07, -2.622600959512056e-06, -1.039028525352478, -2.622600959512056e-06, -1.0490362910786644e-05, -7.510157047363464e-06, -5.94836674281396e-05, -0.10644273459911346, -1.2587015628814697, -1.445793628692627, -0.05578656122088432, -0.06283022463321686, -6.437094270950183e-05, -0.007594049442559481, -0.0008469808381050825, -0.06899473071098328, -0.0033484601881355047, -0.8336461782455444], "finish_reason": "stop"}], "metrics": {"energy": 925.3786100378035, "energy_per_token": 4.385680616292907, "time": 23.750614, "time_per_token": 0.11256215165876776}}
{"outputs": [{"text": " ALPHANUMERIC.sub(\" \", text1).strip().lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "(", "\"", " \"", ",", " text", "1", ")", ".", "strip", "()", ".", "lower", "()", "\n"], "logprobs": [-0.19041161239147186, -3.576272320060525e-06, -2.50339189733495e-06, 0.0, 0.0, 0.0, -5.507317473529838e-05, -5.960446742392378e-06, -2.7426178455352783, -0.037585485726594925, -0.05782228335738182, -0.00017438798386137933, -0.03745206445455551, -9.274052717955783e-05, -0.18066878616809845, -0.022614212706685066, -2.9026436805725098, -0.0038345158100128174, -0.016913339495658875, -0.005282254423946142, -2.1457441107486375e-05, -0.028001708909869194], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0002047805901383981, -2.264974000354414e-06, 0.0, 0.0, 0.0, -1.5258672647178173e-05, -1.4305104514278355e-06, -8.344646857949556e-07, -2.95634672511369e-05, -0.00017569905321579427, -5.209310256759636e-05, -0.0004190520558040589, -5.8530047681415454e-05, -6.97350042173639e-05, -5.245071224635467e-05, -5.960446742392378e-06, -5.722029527532868e-06, -0.0004702892620116472], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.44484037160873413, -0.016179336234927177, -0.056087758392095566, -0.00012575789878610522, -0.0030103863682597876, -0.009667602367699146, -0.06197545677423477, -0.012808083556592464], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00015496007108595222, -5.340433563105762e-05, -4.160317621426657e-05, -7.903263758635148e-05, -1.585470999998506e-05, -1.3112935448589269e-05, -4.5536911784438416e-05, -0.0006922471220605075], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.004644558299332857, -0.0011316093150526285, -0.0005853846669197083, -0.0005752577562816441, -0.23033247888088226, -0.027634644880890846, -0.0002053765201708302, -6.067568756407127e-05, -1.9192511899746023e-05, -0.00016783259343355894, -0.00014625910262111574, -0.007055724039673805], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.019235150888562202, -0.01207706518471241, -0.0012804412981495261, -0.00019667598826345056, -0.0002714027068577707, -0.025748632848262787, -0.01822417788207531, -0.0002019201492657885, -0.0001528146385680884, -0.00016282663273159415, -1.1205610462639015e-05, -1.8954096958623268e-05, -8.34461570775602e-06, -0.000617432699073106, -1.1205610462639015e-05, -3.3378546504536644e-06, -0.00016735584358684719, -0.0003545847721397877, -0.002815095242112875], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in list(vec1.keys())])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.7111574411392212, -0.005909234285354614, -0.0016612313920632005, -0.00010287232726113871, -0.007693304214626551, -0.001039322349242866, -0.0009274948388338089, -0.9117180705070496, -0.0028174726758152246, -0.00011455356434453279, -0.0005519058904610574, -0.0001070442158379592, -4.0531076592742465e-06, -0.5548635125160217, -0.00013612773909699172, -0.0009883524617180228, -8.11782301752828e-05, -0.008778433315455914, -2.0503786799963564e-05, -9.059495641849935e-05, -3.4570634852570947e-06, -0.0003999863693024963, -0.004734852351248264], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-9.500529267825186e-05, -4.7205765440594405e-05, -3.1470757676288486e-05, -0.00029666791670024395, -1.5497195136049413e-06, -0.0035922301467508078, -8.642300235806033e-05, -0.0021274094469845295, -2.8967437174287625e-05, -1.0847986231965479e-05, -1.0609570381348021e-05, -2.3841830625315197e-06, -8.380061626667157e-05, -0.0003110878460574895, -3.099393507000059e-05, -3.814689989667386e-06, -8.344646857949556e-07, -7.748573807475623e-06, -0.00012361239350866526], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.005960902199149132, -7.271740287251305e-06, -1.07287787614041e-05, -0.00011312322021694854, -0.00017653337272349745, -6.0437283536884934e-05, -0.0026139398105442524, -0.0007198841194622219, -0.00011157367407577112, -3.290122185717337e-05, -0.00021455370006151497, -1.5139465176616795e-05, -1.5020257706055418e-05, -3.58813522325363e-05, -2.8609820219571702e-05, -0.0018052248051390052], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.12152481079101562, -0.19114123284816742, -0.000929281348362565, -0.0005675135762430727, -0.04217841848731041, -0.04550943896174431], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.005332057364284992, -0.01257431972771883, -0.043167758733034134, -0.0027380618266761303, -0.0037015036214143038], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.04521164670586586, -0.00017832119192462415, -0.0002628219372127205, -1.1920928244535389e-07, 0.0, -0.00040558696491643786, -7.343022298300639e-05, -0.0010645681759342551, -0.003585459664463997], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.004657254554331303, -0.0013172292383387685, -0.006619194056838751, -0.0017995130037888885, -0.031227700412273407, -0.008036894723773003, -0.0001433984871255234, -0.0005063920398242772, -0.009667602367699146], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)<|endoftext|>import re", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")<", "|", "end", "of", "text", "|>", "import", " re", "\n"], "logprobs": [-2.1784937381744385, -0.010043914429843426, -3.6954811548639555e-06, -2.3841830625315197e-06, -1.7881377516459906e-06, 0.0, -0.0014448452275246382, -0.005158566869795322, -7.152531907195225e-06, -1.5616295058862306e-05, -4.410734163684538e-06, -1.1920928244535389e-07, -9.536738616588991e-07, -0.9710167050361633, -2.3841830625315197e-06, -6.556489552167477e-06, -4.887569048150908e-06, -6.317892984952778e-05, -0.0787786915898323, -1.070987343788147, -1.3762905597686768, -0.019341325387358665], "finish_reason": "stop"}], "metrics": {"energy": 849.4008770618443, "energy_per_token": 4.3336779441930835, "time": 22.06545, "time_per_token": 0.11257882653061224}}
{"outputs": [{"text": " re.sub(ALPHANUMERIC, ' ', text1).lower()", "tokens": [" re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-2.6377956867218018, -0.0009037939016707242, -0.002460311632603407, -0.04801473021507263, -0.19086843729019165, -7.271740287251305e-06, -2.992108420585282e-05, -1.4305104514278355e-06, -5.960462772236497e-07, -4.768370445162873e-07, -0.0006680640508420765, -0.22013935446739197, -0.0004234609368722886, -0.0002087136817863211, -0.01750003919005394, -0.00010132275929208845, -0.3512645363807678, -0.02926163375377655, -0.10176897048950195, -0.00010918975021922961, -0.07200317084789276], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0002449450839776546, -1.4305104514278355e-06, 0.0, 0.0, 0.0, -1.0490362910786644e-05, -1.4305104514278355e-06, -1.311301275563892e-06, -3.1470757676288486e-05, -0.000270091783022508, -4.303362584323622e-05, -0.0004822045157197863, -6.913899414939806e-05, -7.319182623177767e-05, -2.288792165927589e-05, -4.887569048150908e-06, -6.198863957251888e-06, -0.0005432083853520453], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.43716612458229065, -0.01707238145172596, -0.06404492259025574, -0.00010322991875000298, -0.003795682918280363, -0.009116807021200657, -0.05650040879845619, -0.009357876144349575], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00010907054820563644, -5.9960475482512265e-05, -3.9457496313843876e-05, -0.0001287377526750788, -1.2516897186287679e-05, -2.002696055569686e-05, -3.099393507000059e-05, -0.0006609162664972246], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.0046082488261163235, -0.0009559590835124254, -0.0006394725642167032, -0.0004580163804348558, -1.548781394958496, -0.00012110930401831865, -0.0005231918767094612, -0.02037535049021244, -0.00016139635408762842, -5.519237674889155e-05, -1.0847986231965479e-05, -7.843663479434326e-05, -7.068861305015162e-05, -3.099436753473128e-06, -3.802703940891661e-05, -0.0074166906997561455], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.02183982916176319, -0.016542302444577217, -0.001440797932446003, -0.000196556793525815, -0.00038258862332440913, -0.03151409327983856, -0.01522432453930378, -0.00028427375946193933, -0.00012194366718176752, -0.0001230164198204875, -1.2040065485052764e-05, -2.13382354559144e-05, -1.2397689715726301e-05, -0.0006353028584271669, -1.0490362910786644e-05, -2.50339189733495e-06, -0.00016485285595990717, -0.00041476229671388865, -0.002678618300706148], "finish_reason": "stop"}, {"text": " np.sum([value ** 2 for value in vec1.values()])", "tokens": [" np", ".", "sum", "([", "value", " **", " ", "2", " for", " value", " in", " vec", "1", ".", "values", "()", "])", "\n"], "logprobs": [-0.93962162733078, -5.8412379075889476e-06, -1.1853878498077393, -0.044637568295001984, -2.9240458011627197, -0.48072367906570435, -0.0012344843707978725, -1.2159273865108844e-05, -0.0004661188868340105, -0.24312229454517365, -1.9192511899746023e-05, -0.007249242160469294, -4.768258077092469e-05, -0.000300600629998371, -6.09140915912576e-05, -1.2874520507466514e-05, -0.0003583981015253812, -0.008760708384215832], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.0001102625101339072, -4.017272294731811e-05, -2.825220326485578e-05, -0.0002775999018922448, -2.264974000354414e-06, -0.004895960912108421, -7.73638384998776e-05, -0.0017584589077159762, -3.8265450712060556e-05, -1.0490362910786644e-05, -1.1801649634435307e-05, -3.933898824470816e-06, -4.95898348162882e-05, -0.0003054867556784302, -2.8609820219571702e-05, -5.8412379075889476e-06, -8.344646857949556e-07, -1.156323378381785e-05, -0.00010883215873036534], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.003735114587470889, -4.291525328881107e-06, -7.748573807475623e-06, -8.809178689261898e-05, -0.0001736728590913117, -5.3881147323409095e-05, -0.001880188356153667, -0.0007400158210657537, -9.667406266089529e-05, -1.764281842042692e-05, -0.0001161031104857102, -1.3828182090946939e-05, -1.7762025890988298e-05, -2.2291887944447808e-05, -2.455681169521995e-05, -0.0019331354415044188], "finish_reason": "stop"}, {"text": " denominator != 0:", "tokens": [" denominator", " ", "!", "=", " ", "0", ":", "\n"], "logprobs": [-0.08394898474216461, -3.1468396186828613, -6.079655122448457e-06, -1.6689160474925302e-05, -0.004017141181975603, -0.0004196478403173387, -0.030831998214125633, -0.02928316593170166], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.006767448503524065, -0.012710158713161945, -0.0391073077917099, -0.0018497277051210403, -0.004055728204548359], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.07984993606805801, -0.0001821352052502334, -0.0002184867626056075, -1.1920928244535389e-07, 0.0, -0.0003985564399044961, -0.00010394509445177391, -0.0009351171320304275, -0.003190072951838374], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.006784617435187101, -0.0011879300000146031, -0.006994761060923338, -0.0015635181916877627, -0.02282560057938099, -0.008170276880264282, -0.00016282663273159415, -0.000614335120189935, -0.011553993448615074], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|>#!/usr/bin/env python", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.11290860176086426, -9.417489309271332e-06, -9.65590606938349e-06, 0.0, -0.0009396428358741105, -0.0048047322779893875, -7.867782187531702e-06, -1.2040065485052764e-05, -2.50339189733495e-06, -8.344646857949556e-07, -4.172316494077677e-06, -0.9905678033828735, -2.622600959512056e-06, -1.0132738680113107e-05, -6.079655122448457e-06, -4.184158387943171e-05, -0.11350025236606598, -1.177003026008606, -1.460243582725525, -0.05900172144174576, -0.06058916822075844, -7.033100700937212e-05, -0.007681474555283785, -0.0007036832394078374, -0.06625226140022278, -0.0033906372264027596, -0.7056755423545837], "finish_reason": "stop"}], "metrics": {"energy": 875.6794723529822, "energy_per_token": 4.3566142903133445, "time": 22.499222, "time_per_token": 0.11193642786069652}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.18394599854946136, -5.8412379075889476e-06, -1.6689286894688848e-06, 0.0, 0.0, 0.0, -5.018585216021165e-05, -6.437280717364047e-06, -0.0471242293715477, -0.23384326696395874, -0.00018082413589581847, -0.030489562079310417, -5.9126061387360096e-05, -0.1570402830839157, -0.020857172086834908, -0.05258896201848984, -5.578839045483619e-05, -0.09269588440656662], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00022015532886143774, -3.2186455882765586e-06, 0.0, 0.0, 0.0, -5.006777428206988e-06, -1.1920922133867862e-06, -7.152555099310121e-07, -2.5748875486897305e-05, -0.0001770101225702092, -5.173549288883805e-05, -0.0004839917819481343, -7.712543447269127e-05, -5.602679812000133e-05, -3.182837463100441e-05, -5.8412379075889476e-06, -6.794906312279636e-06, -0.0006598440813831985], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.4622073769569397, -0.01625029742717743, -0.05545651167631149, -0.00013064485392533243, -0.003956230357289314, -0.00793175958096981, -0.049376230686903, -0.011322175152599812], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00015293381875380874, -4.51792984677013e-05, -4.362964682513848e-05, -0.00011395759065635502, -1.2636104656849056e-05, -1.6927575416048057e-05, -3.0278701160568744e-05, -0.000788139586802572], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.0031529974658042192, -0.0010889797704294324, -0.0004936429904773831, -0.0005043664714321494, -0.15213578939437866, -0.03778397664427757, -0.00031275625224225223, -4.815939246327616e-05, -1.9430925021879375e-05, -0.00020418466010596603, -0.0001820160250645131, -0.006618602201342583], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.02245873026549816, -0.016452834010124207, -0.002037355676293373, -0.0002980979916173965, -0.00034731553751043975, -0.02574816904962063, -0.02050546184182167, -0.00029583368450403214, -0.0001062098381225951, -0.00016878610767889768, -1.585470999998506e-05, -1.4424220353248529e-05, -9.894321920000948e-06, -0.0005799042410217226, -1.156323378381785e-05, -2.145764938177308e-06, -0.00010859376925509423, -0.00045599075383506715, -0.002947036875411868], "finish_reason": "stop"}, {"text": " np.sum([vec1[x] ** 2 for x in vec1])", "tokens": [" np", ".", "sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.6364951133728027, -4.6491513785440475e-06, -1.5582983493804932, -0.05069451779127121, -0.08719988912343979, -7.378782902378589e-05, -0.0017987991450354457, -0.003524997504428029, -0.002398473210632801, -0.7720037698745728, -0.002941450336948037, -6.544376083184034e-05, -0.0003256267518736422, -0.0001551984460093081, -1.4543427823809907e-05, -0.9950640201568604, -3.9934315282152966e-05, -0.5794545412063599, -0.015930520370602608], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00011014331539627165, -4.8874615458771586e-05, -2.5629668016335927e-05, -0.0002450642641633749, -1.9073468138230965e-06, -0.0026238083373755217, -0.00014768941036891192, -0.0020172500517219305, -2.8967437174287625e-05, -9.894321920000948e-06, -1.0371154530730564e-05, -2.9802276912960224e-06, -4.9470632802695036e-05, -0.0003181189822498709, -3.313963316031732e-05, -3.4570634852570947e-06, -8.344646857949556e-07, -6.6756979322235566e-06, -0.00011526874004630372], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.0037781065329909325, -5.006777428206988e-06, -1.5258672647178173e-05, -0.00011979816190432757, -0.00019858295854646713, -6.16293036728166e-05, -0.0027191590052098036, -0.0008093419019132853, -7.819823804311454e-05, -2.682172998902388e-05, -0.00013326710904948413, -1.5616295058862306e-05, -1.6689160474925302e-05, -2.6702524337451905e-05, -2.8013790142722428e-05, -0.0021222943905740976], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.08328232914209366, -0.1994309276342392, -0.0009426202741451561, -0.0005209281225688756, -0.045425716787576675, -0.06033690646290779], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.007178467232733965, -0.013735538348555565, -0.041689615696668625, -0.0016131495358422399, -0.0038674098905175924], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.06030279025435448, -0.00019214690837543458, -0.0002867764269467443, -1.1920928244535389e-07, 0.0, -0.00032360086333937943, -9.512448741588742e-05, -0.00042298430344089866, -0.0030234598089009523], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005228535737842321, -0.0013159195659682155, -0.007059275172650814, -0.0018317601643502712, -0.02385556511580944, -0.007932587526738644, -0.00015531764074694365, -0.0005860995152033865, -0.009140904992818832], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|># -*- coding: utf-8 -*-", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|>", "#", " -", "*-", " coding", ":", " utf", "-", "8", " -", "*-", "\n"], "logprobs": [-0.09694409370422363, -9.298280929215252e-06, -9.298280929215252e-06, 0.0, -0.0009166568052023649, -0.004625573288649321, -6.794906312279636e-06, -1.3112935448589269e-05, -2.861018856492592e-06, -9.536738616588991e-07, -3.6954811548639555e-06, -0.9841387867927551, -2.7418097943154862e-06, -1.0013530300057027e-05, -4.768360213347478e-06, -3.790783375734463e-05, -0.09101519733667374, -1.1798427104949951, -2.2324318885803223, -0.0028675172943621874, -0.019437316805124283, -0.004571937955915928, -0.04349914938211441, -0.005934712942689657, -5.61460001335945e-05, -0.0027725372929126024, -0.002371834125369787, -0.004339801147580147], "finish_reason": "stop"}], "metrics": {"energy": 859.049103453636, "energy_per_token": 4.428088162132144, "time": 22.073427, "time_per_token": 0.11378055154639174}}
{"outputs": [{"text": " ALPHANUMERIC.sub('', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.18394599854946136, -5.8412379075889476e-06, -1.6689286894688848e-06, 0.0, 0.0, 0.0, -5.018585216021165e-05, -6.437280717364047e-06, -0.0471242293715477, -1.5736985206604004, -0.0001714082609396428, -0.04927535355091095, -6.580135959666222e-05, -0.6475134491920471, -0.023999540135264397, -0.05135561525821686, -8.022463589441031e-05, -0.059585362672805786], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00019429226813372225, -1.5497195136049413e-06, 0.0, 0.0, 0.0, -8.22540732769994e-06, -1.5497195136049413e-06, -8.344646857949556e-07, -2.992108420585282e-05, -0.0002097863471135497, -4.577531944960356e-05, -0.0003916450368706137, -7.223821739898995e-05, -6.580135959666222e-05, -1.6569954823353328e-05, -5.602820692729438e-06, -5.722029527532868e-06, -0.0006915323319844902], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.4400416612625122, -0.013619123958051205, -0.06106242910027504, -0.00011300401820335537, -0.0029265929479151964, -0.01445277314633131, -0.05372533202171326, -0.009757915511727333], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001250427303602919, -5.1616290875244886e-05, -3.635817120084539e-05, -0.00011777184408856556, -1.0251946150674485e-05, -1.764281842042692e-05, -2.8609820219571702e-05, -0.0007216709782369435], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.003494586795568466, -0.0014185375766828656, -0.0005321278586052358, -0.0005000770906917751, -0.3092767596244812, -0.026676705107092857, -0.00028451209072954953, -5.1973900554003194e-05, -1.6093124941107817e-05, -0.0001971527235582471, -0.00018225439998786896, -0.006691074464470148], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.020475564524531364, -0.011915224604308605, -0.002121580531820655, -0.000192504478036426, -0.00027164106722921133, -0.031367961317300797, -0.01888696663081646, -0.0002520958660170436, -0.00013791563105769455, -0.00019143179815728217, -1.3112935448589269e-05, -1.5020257706055418e-05, -1.2397689715726301e-05, -0.0006363751017488539, -1.0132738680113107e-05, -2.50339189733495e-06, -0.00011050090688513592, -0.00035232058144174516, -0.0028956886380910873], "finish_reason": "stop"}, {"text": " sum([vec1[x]**2 for x in vec1])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.8337556719779968, -0.008698549121618271, -0.0025840960443019867, -8.451581379631534e-05, -0.009200437925755978, -0.0015911312075331807, -0.0010729038622230291, -0.5329247117042542, -0.00040451448876410723, -0.00010239553375868127, -2.2172682292875834e-05, -4.887569048150908e-06, -0.7740610241889954, -2.3483953555114567e-05, -0.4986281394958496, -0.006090059410780668], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00010072677832795307, -4.2914423829643056e-05, -2.3245540432981215e-05, -0.0003200257197022438, -1.9073468138230965e-06, -0.0018820922123268247, -0.00014780859055463225, -0.0017660749144852161, -2.682172998902388e-05, -1.0847986231965479e-05, -1.07287787614041e-05, -3.3378546504536644e-06, -4.3987260141875595e-05, -0.00026925752172246575, -2.47952248173533e-05, -5.364403477869928e-06, -9.536738616588991e-07, -1.0013530300057027e-05, -0.00013743886665906757], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.003265526844188571, -6.6756979322235566e-06, -1.9430925021879375e-05, -0.00010692501382436603, -0.00020013237372040749, -5.8530047681415454e-05, -0.0021031422074884176, -0.0006059955921955407, -0.00010287232726113871, -2.7417760065873154e-05, -0.00016699827392585576, -1.5020257706055418e-05, -1.0967194612021558e-05, -2.4199192921514623e-05, -2.4676019165781327e-05, -0.002039615996181965], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.09909021854400635, -0.1706663966178894, -0.0009782296838238835, -0.0004266782198101282, -0.05040336400270462, -0.06137101352214813], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.0048510003834962845, -0.014005002565681934, -0.05197395011782646, -0.0020180828869342804, -0.0039016089867800474], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.05370432138442993, -0.0002008474839385599, -0.00020132421923335642, -1.1920928244535389e-07, 0.0, -0.0004558716027531773, -9.333651541965082e-05, -0.0013242532731965184, -0.003955161664634943], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005076969508081675, -0.0013059191405773163, -0.00748141435906291, -0.0015892268856987357, -0.02428719587624073, -0.0075857676565647125, -0.0001731960946926847, -0.0006300609675236046, -0.00830931682139635], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio"], "logprobs": [-0.11963304132223129, -9.059865078597795e-06, -8.940656698541716e-06, 0.0, -0.001010503270663321, -0.004431665409356356, -6.794906312279636e-06, -1.6093124941107817e-05, -2.861018856492592e-06, -8.344646857949556e-07, -2.264974000354414e-06], "finish_reason": "stop"}], "metrics": {"energy": 747.2753783082965, "energy_per_token": 4.294686082231589, "time": 20.001675, "time_per_token": 0.11495215517241379}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.16476592421531677, -3.6954811548639555e-06, -2.622600959512056e-06, 0.0, 0.0, 0.0, -5.721882189391181e-05, -6.556489552167477e-06, -0.04599057510495186, -0.29192420840263367, -0.00019071667338721454, -0.03649601712822914, -7.521823135903105e-05, -0.14225101470947266, -0.020112505182623863, -0.05399417504668236, -6.0437283536884934e-05, -0.07499030977487564], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00023123928986024112, -2.0265558760002023e-06, 0.0, 0.0, 0.0, -1.1444026313256472e-05, -1.311301275563892e-06, -7.152555099310121e-07, -2.5152843591058627e-05, -0.00027056847466155887, -5.2569914259947836e-05, -0.00041845624218694866, -8.284702198579907e-05, -6.8662193370983e-05, -2.658331868587993e-05, -6.437280717364047e-06, -6.318072337307967e-06, -0.0006541258189827204], "finish_reason": "stop"}, {"text": " np.array([text1.count(token) for token in Counter(text1.split()).keys()])", "tokens": [" np", ".", "array", "([", "text", "1", ".", "count", "(", "token", ")", " for", " token", " in", " Counter", "(", "text", "1", ".", "split", "())", ".", "keys", "()", "])", "\n"], "logprobs": [-1.7250829935073853, -0.00021991695393808186, -0.007528741378337145, -0.5371416807174683, -3.4373772144317627, -0.0025733946822583675, -0.0007047553663142025, -0.04533514752984047, -0.0004945961991325021, -3.5275626182556152, -0.020560819655656815, -0.04990461468696594, -0.0012217445764690638, -0.06879488378763199, -0.9450085759162903, -0.0027185645885765553, -0.02845125086605549, -0.0030216772574931383, -0.07708790153265, -0.005505992565304041, -0.2273840308189392, -0.01315709762275219, -0.008231168612837791, -4.6132929128361866e-05, -0.06443217396736145, -0.027110252529382706], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001426833332516253, -4.541770613286644e-05, -3.4450891689630225e-05, -0.00015233787416946143, -1.168244216387393e-05, -2.038458114839159e-05, -3.802703940891661e-05, -0.0007611000328324735], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.003642236115410924, -0.0010590903693810105, -0.0007981451926752925, -0.0005594118847511709, -0.12305037677288055, -0.012572200037539005, -0.00025138078490272164, -5.8410845667822286e-05, -2.062299427052494e-05, -0.00013839241000823677, -0.0001411338453181088, -0.007118813693523407], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.02099352516233921, -0.011193927377462387, -0.002635103417560458, -0.00019453064305707812, -0.00019751029321923852, -0.03356081619858742, -0.01834321767091751, -0.00019786784832831472, -8.713819261174649e-05, -0.00018737945356406271, -1.2397689715726301e-05, -1.3947389561508317e-05, -1.168244216387393e-05, -0.00066985102603212, -9.536697689327411e-06, -1.9073468138230965e-06, -0.0001711698860162869, -0.0003432638186495751, -0.002529875375330448], "finish_reason": "stop"}, {"text": " np.sqrt(sum([vec1[x] ** 2 for x in list(vec1.keys())]))", "tokens": [" np", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", "))", "\n"], "logprobs": [-0.3833455443382263, -6.318072337307967e-06, -0.5458317995071411, -0.00015698630886618048, -0.013596544973552227, -0.03630853444337845, -0.09183833748102188, -5.531158240046352e-05, -0.005442445166409016, -0.0039054087828844786, -0.02324649505317211, -0.9777933955192566, -0.0011200590524822474, -3.2782016205601394e-05, -0.00024387246230617166, -0.00019095504831057042, -2.288792165927589e-05, -0.6183481812477112, -0.00010311071673640981, -0.0008151783840730786, -6.472854875028133e-05, -0.01479992177337408, -0.00028427375946193933, -7.378782902378589e-05, -4.410734163684538e-06, -0.00066985102603212, -0.0019114810274913907], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.0001726001501083374, -4.470248313737102e-05, -2.90866428258596e-05, -0.000336590368533507, -2.622600959512056e-06, -0.0038904468528926373, -9.953480184776708e-05, -0.0014731755945831537, -2.7656173188006505e-05, -8.821448318485636e-06, -1.1444026313256472e-05, -2.264974000354414e-06, -5.94836674281396e-05, -0.0003412379592191428, -3.9457496313843876e-05, -6.9141146923357155e-06, -8.344646857949556e-07, -1.4066597032069694e-05, -0.00012206286191940308], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.004293153528124094, -5.960446742392378e-06, -9.417489309271332e-06, -0.0001045410826918669, -0.00015293381875380874, -6.544376083184034e-05, -0.003349767066538334, -0.0006007535266689956, -0.00010132275929208845, -1.7404405298293568e-05, -0.00019178935326635838, -1.9430925021879375e-05, -1.7881233361549675e-05, -3.397406908334233e-05, -3.2782016205601394e-05, -0.002206274075433612], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.0768360123038292, -0.20359128713607788, -0.0006709231529384851, -0.00047291061491705477, -0.04128053039312363, -0.055897828191518784], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.004404842853546143, -0.011711767874658108, -0.03803131356835365, -0.0014067525044083595, -0.0032871519215404987], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.07296134531497955, -0.00021872512297704816, -0.0002499506517779082, -1.1920928244535389e-07, 0.0, -0.00034457468427717686, -6.103329360485077e-05, -0.00039200251922011375, -0.0034098834730684757], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.004561139270663261, -0.0011849532602354884, -0.006247514393180609, -0.0015651845606043935, -0.03424174338579178, -0.008045054040849209, -0.00017093151109293103, -0.0005399914807640016, -0.010858024470508099], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|>#!/usr/bin/env python3", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.11133111268281937, -9.298280929215252e-06, -9.536697689327411e-06, 0.0, -0.000982159748673439, -0.004666747059673071, -5.722029527532868e-06, -1.2874520507466514e-05, -2.861018856492592e-06, -8.344646857949556e-07, -2.622600959512056e-06, -1.039028525352478, -2.622600959512056e-06, -1.0490362910786644e-05, -7.510157047363464e-06, -5.94836674281396e-05, -0.10644273459911346, -1.2587015628814697, -1.445793628692627, -0.05578656122088432, -0.06283022463321686, -6.437094270950183e-05, -0.007594049442559481, -0.0008469808381050825, -0.06899473071098328, -0.0033484601881355047, -0.5938714742660522, -0.01956205815076828], "finish_reason": "stop"}], "metrics": {"energy": 937.6778782901764, "energy_per_token": 4.262172174046256, "time": 24.178078, "time_per_token": 0.10990035454545455}}
{"outputs": [{"text": " ALPHANUMERIC.sub('', text1.lower()).strip()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", "1", ".", "lower", "())", ".", "strip", "()", "\n"], "logprobs": [-0.18394599854946136, -5.8412379075889476e-06, -1.6689286894688848e-06, 0.0, 0.0, 0.0, -5.018585216021165e-05, -6.437280717364047e-06, -0.0471242293715477, -1.5736985206604004, -0.0001714082609396428, -0.04927535355091095, -6.580135959666222e-05, -0.7420187592506409, -0.0664215013384819, -0.014371460303664207, -1.839300274848938, -0.3110554814338684, -0.005370237864553928, -0.07222766429185867], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00019429226813372225, -1.5497195136049413e-06, 0.0, 0.0, 0.0, -8.22540732769994e-06, -1.5497195136049413e-06, -8.344646857949556e-07, -2.992108420585282e-05, -0.0002097863471135497, -4.577531944960356e-05, -0.0003916450368706137, -7.223821739898995e-05, -6.580135959666222e-05, -1.6569954823353328e-05, -5.602820692729438e-06, -5.722029527532868e-06, -0.0006915323319844902], "finish_reason": "stop"}, {"text": " np.array([freq for _, freq in Counter(text1.split()).most_common()])", "tokens": [" np", ".", "array", "([", "freq", " for", " _", ",", " fre", "q", " in", " Counter", "(", "text", "1", ".", "split", "())", ".", "most", "_", "common", "()", "])", "\n"], "logprobs": [-1.6392699480056763, -0.00022396916756406426, -0.00880194827914238, -0.5608326196670532, -1.4953662157058716, -0.17662128806114197, -0.7398481369018555, -0.0007843278581276536, -0.05262221395969391, -3.2186455882765586e-06, -0.0003532739356160164, -0.10931809991598129, -0.0009890670189633965, -0.03254749998450279, -0.00014244495832826942, -0.009900039993226528, -0.0025471169501543045, -0.05599420890212059, -0.0001851148990681395, -0.007827561348676682, 0.0, -1.966933996300213e-05, -0.010934199206531048, -0.02470305562019348, -0.011071676388382912], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013374387344811112, -4.339123915997334e-05, -4.124556289752945e-05, -0.00012265883560758084, -1.0371154530730564e-05, -2.5033637939486653e-05, -2.586808113846928e-05, -0.0008312584250234067], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.004249946679919958, -0.0009134411229752004, -0.0006127863889560103, -0.0004533693427219987, -1.6297550201416016, -0.00012134769349358976, -0.0005155664402991533, -0.013492935337126255, -0.00019333878299221396, -5.006664650863968e-05, -1.1801649634435307e-05, -7.557583012385294e-05, -6.997340824455023e-05, -2.861018856492592e-06, -4.589452510117553e-05, -0.009704791009426117], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.026545187458395958, -0.016774319112300873, -0.0017387047410011292, -0.0002300474588992074, -0.0001656871900195256, -0.02756042778491974, -0.023045213893055916, -0.0002351722796447575, -0.00011097769311163574, -0.0001494772732257843, -1.1920858014491387e-05, -1.8596476365928538e-05, -1.4424220353248529e-05, -0.0005803807871416211, -9.65590606938349e-06, -2.3841830625315197e-06, -0.0001382732152706012, -0.0003649522550404072, -0.0027013260405510664], "finish_reason": "stop"}, {"text": " np.sqrt(sum([vec1[x]**2 for x in vec1]))", "tokens": [" np", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "1", "]))", "\n"], "logprobs": [-0.7714879512786865, -6.6756979322235566e-06, -0.4508092701435089, -0.0002131234941771254, -0.01412383932620287, -0.02819225750863552, -0.04517769068479538, -5.447716102935374e-05, -0.006731689441949129, -0.0029154198709875345, -0.01900499127805233, -0.6205952763557434, -0.0004758894501719624, -0.00010275312524754554, -5.173549288883805e-05, -1.728519782773219e-05, -0.6715250015258789, -8.11782301752828e-05, -0.8367651104927063, -0.004585821647197008], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.0001867835089797154, -8.34430247778073e-05, -2.47952248173533e-05, -0.0002817710628733039, -2.7418097943154862e-06, -0.0027473345398902893, -0.0001062098381225951, -0.002067572670057416, -3.015949550899677e-05, -9.65590606938349e-06, -1.0967194612021558e-05, -2.264974000354414e-06, -6.365573790390044e-05, -0.0003081085451412946, -4.184158387943171e-05, -6.9141146923357155e-06, -8.344646857949556e-07, -9.894321920000948e-06, -0.00011491115583339706], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.0053927660919725895, -5.483612312673358e-06, -1.4305012882687151e-05, -0.0001267114421352744, -0.0002083561266772449, -8.284702198579907e-05, -0.00405976502224803, -0.000655793643090874, -0.00012420836719684303, -3.361645576660521e-05, -0.0001662831346038729, -1.811964830267243e-05, -1.537788011773955e-05, -2.90866428258596e-05, -3.158996332786046e-05, -0.0018918488640338182], "finish_reason": "stop"}, {"text": " denominator != 0:", "tokens": [" denominator", " ", "!", "=", " ", "0", ":", "\n"], "logprobs": [-0.11964763700962067, -2.991848945617676, -5.722029527532868e-06, -2.0861407392658293e-05, -0.004767479375004768, -0.00031716562807559967, -0.03367908298969269, -0.033563584089279175], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.005861356388777494, -0.012151027098298073, -0.05997905507683754, -0.0019975011236965656, -0.003908377606421709], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.05463210120797157, -0.0001991788885788992, -0.0001722425949992612, -1.1920928244535389e-07, 0.0, -0.0005041282274760306, -6.3774932641536e-05, -0.0005694198189303279, -0.003666109871119261], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005073292646557093, -0.00112255965359509, -0.009155788458883762, -0.0016625404823571444, -0.031631097197532654, -0.007339655887335539, -0.0001461399078834802, -0.0005349873681552708, -0.010920049622654915], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.12062518298625946, -1.0251946150674485e-05, -1.0132738680113107e-05, 0.0, -0.001143040368333459, -0.004132541362196207, -7.629365427419543e-06, -1.2397689715726301e-05, -2.622600959512056e-06, -8.344646857949556e-07, -3.3378546504536644e-06, -0.8209173083305359], "finish_reason": "stop"}], "metrics": {"energy": 877.6116856975552, "energy_per_token": 4.302018067144878, "time": 22.698626, "time_per_token": 0.11126777450980392}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.16476592421531677, -3.6954811548639555e-06, -2.622600959512056e-06, 0.0, 0.0, 0.0, -5.721882189391181e-05, -6.556489552167477e-06, -0.04599057510495186, -0.29192420840263367, -0.00019071667338721454, -0.03649601712822914, -7.521823135903105e-05, -0.14225101470947266, -0.020112505182623863, -0.05399417504668236, -6.0437283536884934e-05, -0.07499030977487564], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00023123928986024112, -2.0265558760002023e-06, 0.0, 0.0, 0.0, -1.1444026313256472e-05, -1.311301275563892e-06, -7.152555099310121e-07, -2.5152843591058627e-05, -0.00027056847466155887, -5.2569914259947836e-05, -0.00041845624218694866, -8.284702198579907e-05, -6.8662193370983e-05, -2.658331868587993e-05, -6.437280717364047e-06, -6.318072337307967e-06, -0.0006541258189827204], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.43853244185447693, -0.019094698131084442, -0.052586134523153305, -0.00014256415306590497, -0.003661121241748333, -0.010598444379866123, -0.05521479994058609, -0.01224229484796524], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013422065239865333, -4.60137271147687e-05, -3.158996332786046e-05, -0.0001419681793777272, -1.3947389561508317e-05, -3.182837463100441e-05, -2.288792165927589e-05, -0.0006687788409180939], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.004155453760176897, -0.0012305553536862135, -0.000753357307985425, -0.00047136162174865603, -0.13493475317955017, -0.02838369831442833, -0.0002615109842736274, -4.8636207793606445e-05, -1.6927575416048057e-05, -0.00018559163436293602, -0.00013136000779923052, -0.006368343252688646], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.020677946507930756, -0.015201547183096409, -0.0016486160457134247, -0.00021860594279132783, -0.00027855331427417696, -0.0323638953268528, -0.01596149429678917, -0.0002051381452474743, -0.0001323135511483997, -0.0002090712368953973, -1.1086402082582936e-05, -1.8000440832111053e-05, -1.0371154530730564e-05, -0.0007540719816461205, -9.775113539944869e-06, -2.3841830625315197e-06, -0.0001864259538706392, -0.0003657863999251276, -0.0028523020446300507], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in list(vec1.keys())])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.6327648758888245, -0.012120288796722889, -0.002146561164408922, -9.727005090098828e-05, -0.02753479965031147, -0.0017326356610283256, -0.0009971652179956436, -0.9864574074745178, -0.0031998169142752886, -9.560128091834486e-05, -0.00029845553217455745, -0.00012134769349358976, -4.410734163684538e-06, -0.6303809285163879, -0.00012933371181134135, -0.0008978387922979891, -7.354942499659956e-05, -0.01218423806130886, -8.34461570775602e-06, -8.272782724816352e-05, -3.576272320060525e-06, -0.0005090133054181933, -0.0066549573093652725], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-9.30981186684221e-05, -4.6967357775429264e-05, -1.847726889536716e-05, -0.0002892790944315493, -1.6689286894688848e-06, -0.0018499656580388546, -8.34430247778073e-05, -0.0019860798493027687, -2.884823152271565e-05, -8.4638240878121e-06, -1.1920858014491387e-05, -3.099436753473128e-06, -4.827859811484814e-05, -0.00036090059438720345, -4.660974445869215e-05, -7.748573807475623e-06, -5.960462772236497e-07, -1.0132738680113107e-05, -0.0001102625101339072], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.005243714898824692, -5.8412379075889476e-06, -1.585470999998506e-05, -0.00013279033009894192, -0.0002656822034623474, -7.903263758635148e-05, -0.0030258367769420147, -0.0005851463647559285, -9.97731985989958e-05, -1.2159273865108844e-05, -0.0001472126314183697, -1.2755313036905136e-05, -1.2636104656849056e-05, -2.5748875486897305e-05, -3.40932747349143e-05, -0.002014394849538803], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.07197055965662003, -0.193924218416214, -0.0008406681008636951, -0.0005286726518534124, -0.043113525956869125, -0.055417828261852264], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.0054898690432310104, -0.013370493426918983, -0.05359732732176781, -0.002163333585485816, -0.003888665698468685], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.061988793313503265, -0.00021407696476671845, -0.00028880240279249847, -1.1920928244535389e-07, 0.0, -0.0004337085410952568, -0.00010692501382436603, -0.000788139586802572, -0.003177239093929529], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.004904620815068483, -0.0010845737997442484, -0.008212133310735226, -0.0016861044568940997, -0.025980383157730103, -0.008145446889102459, -0.00014888131408952177, -0.0005303407087922096, -0.010714738629758358], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.0996382012963295, -9.65590606938349e-06, -9.775113539944869e-06, 0.0, -0.0010480155469849706, -0.004088733810931444, -7.152531907195225e-06, -9.894321920000948e-06, -2.622600959512056e-06, -7.152555099310121e-07, -2.861018856492592e-06, -0.8120418787002563], "finish_reason": "stop"}], "metrics": {"energy": 798.0972775382995, "energy_per_token": 4.385149876584063, "time": 20.604717, "time_per_token": 0.11321273076923077}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.16476592421531677, -3.6954811548639555e-06, -2.622600959512056e-06, 0.0, 0.0, 0.0, -5.721882189391181e-05, -6.556489552167477e-06, -0.04599057510495186, -0.29192420840263367, -0.00019071667338721454, -0.03649601712822914, -7.521823135903105e-05, -0.14225101470947266, -0.020112505182623863, -0.05399417504668236, -6.0437283536884934e-05, -0.07499030977487564], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00023123928986024112, -2.0265558760002023e-06, 0.0, 0.0, 0.0, -1.1444026313256472e-05, -1.311301275563892e-06, -7.152555099310121e-07, -2.5152843591058627e-05, -0.00027056847466155887, -5.2569914259947836e-05, -0.00041845624218694866, -8.284702198579907e-05, -6.8662193370983e-05, -2.658331868587993e-05, -6.437280717364047e-06, -6.318072337307967e-06, -0.0006541258189827204], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.43853244185447693, -0.019094698131084442, -0.052586134523153305, -0.00014256415306590497, -0.003661121241748333, -0.010598444379866123, -0.05521479994058609, -0.01224229484796524], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013422065239865333, -4.60137271147687e-05, -3.158996332786046e-05, -0.0001419681793777272, -1.3947389561508317e-05, -3.182837463100441e-05, -2.288792165927589e-05, -0.0006687788409180939], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.004155453760176897, -0.0012305553536862135, -0.000753357307985425, -0.00047136162174865603, -0.13493475317955017, -0.02838369831442833, -0.0002615109842736274, -4.8636207793606445e-05, -1.6927575416048057e-05, -0.00018559163436293602, -0.00013136000779923052, -0.006368343252688646], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.020677946507930756, -0.015201547183096409, -0.0016486160457134247, -0.00021860594279132783, -0.00027855331427417696, -0.0323638953268528, -0.01596149429678917, -0.0002051381452474743, -0.0001323135511483997, -0.0002090712368953973, -1.1086402082582936e-05, -1.8000440832111053e-05, -1.0371154530730564e-05, -0.0007540719816461205, -9.775113539944869e-06, -2.3841830625315197e-06, -0.0001864259538706392, -0.0003657863999251276, -0.0028523020446300507], "finish_reason": "stop"}, {"text": " np.sqrt(sum([vec1[x] ** 2 for x in list(vec1.keys())]))", "tokens": [" np", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", "))", "\n"], "logprobs": [-0.7587910294532776, -5.245195097813848e-06, -0.6745639443397522, -0.00034767304896377027, -0.030810730531811714, -0.030305925756692886, -0.09093324095010757, -4.279521817807108e-05, -0.005465327296406031, -0.00380589603446424, -0.0222679004073143, -1.0759143829345703, -0.0012213874142616987, -3.158996332786046e-05, -0.00031132620642893016, -0.0002760506176855415, -2.098061486321967e-05, -0.5182867050170898, -0.00014304091746453196, -0.0009741804678924382, -5.495397272170521e-05, -0.025806255638599396, -0.00037150635034777224, -8.463501580990851e-05, -3.933898824470816e-06, -0.0006084974738769233, -0.0029448973946273327], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-8.868777513271198e-05, -6.282132380874828e-05, -3.540453326422721e-05, -0.00042215018766000867, -2.0265558760002023e-06, -0.0041636452078819275, -6.782778655178845e-05, -0.0015905360924080014, -2.4199192921514623e-05, -1.0967194612021558e-05, -1.0251946150674485e-05, -2.3841830625315197e-06, -7.903263758635148e-05, -0.00034517052699811757, -3.85038583772257e-05, -9.894321920000948e-06, -8.344646857949556e-07, -1.3828182090946939e-05, -0.00015043080202303827], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.007287704385817051, -7.033323527139146e-06, -1.5020257706055418e-05, -9.858122211880982e-05, -0.0001954841281985864, -7.712543447269127e-05, -0.002528210636228323, -0.0004599228559527546, -8.296622399939224e-05, -2.2053474822314456e-05, -0.0001429217227268964, -1.490105023549404e-05, -1.549708758830093e-05, -2.7656173188006505e-05, -2.7417760065873154e-05, -0.002186290919780731], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.07634375989437103, -0.192181795835495, -0.001004906021989882, -0.0005041282274760306, -0.0484808087348938, -0.05742357298731804], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.0056623537093400955, -0.011256992816925049, -0.04683442413806915, -0.0023284247145056725, -0.0036145609337836504], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.10057651996612549, -0.00018761781393550336, -0.00021753329201601446, -1.1920928244535389e-07, 0.0, -0.0005510718910954893, -7.784063927829266e-05, -0.0009147512027993798, -0.0038963842671364546], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005556139629334211, -0.00115697190631181, -0.007033114787191153, -0.0017534609651193023, -0.025664282962679863, -0.00763675756752491, -0.00016509123088326305, -0.0005380851216614246, -0.010223285295069218], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.12826746702194214, -1.0132738680113107e-05, -8.34461570775602e-06, 0.0, -0.0007683662115596235, -0.004501091782003641, -7.152531907195225e-06, -1.4781842764932662e-05, -2.264974000354414e-06, -1.0728830375228426e-06, -4.0531076592742465e-06, -0.7726099491119385], "finish_reason": "stop"}], "metrics": {"energy": 803.3468131380082, "energy_per_token": 4.319068887838754, "time": 21.020102, "time_per_token": 0.11301130107526883}}
{"outputs": [{"text": " ALPHANUMERIC.sub('', text1.lower())", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", "1", ".", "lower", "())", "\n"], "logprobs": [-0.19041161239147186, -3.576272320060525e-06, -2.50339189733495e-06, 0.0, 0.0, 0.0, -5.507317473529838e-05, -5.960446742392378e-06, -0.06666865944862366, -1.4671164751052856, -0.00015615197480656207, -0.045397575944662094, -5.972207145532593e-05, -0.7437880635261536, -0.04302788898348808, -0.014575551263988018, -0.15554411709308624], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00021062063751742244, -2.0265558760002023e-06, 0.0, 0.0, 0.0, -9.179073458653875e-06, -1.7881377516459906e-06, -9.536738616588991e-07, -2.7894584491150454e-05, -0.00023326536756940186, -6.282132380874828e-05, -0.0004451475979294628, -7.450303382938728e-05, -7.331102824537084e-05, -3.313963316031732e-05, -4.410734163684538e-06, -5.602820692729438e-06, -0.000542612629942596], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.4758205711841583, -0.016193997114896774, -0.057940635830163956, -0.00014280252798926085, -0.0033149549271911383, -0.009649774059653282, -0.0469653457403183, -0.010750710032880306], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00015579440514557064, -4.827859811484814e-05, -4.351044481154531e-05, -0.0001311216183239594, -1.1920858014491387e-05, -1.2636104656849056e-05, -2.5152843591058627e-05, -0.0006249382277019322], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.0036482936702668667, -0.001158162602223456, -0.000491021724883467, -0.0005034133209846914, -0.2024797797203064, -0.020977532491087914, -0.00021479207498487085, -5.411955135059543e-05, -1.4662635294371285e-05, -0.00012396997772157192, -0.00017975145601667464, -0.006357445381581783], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.017585430294275284, -0.014667302370071411, -0.002502645133063197, -0.00018308870494365692, -0.00015722469834145159, -0.028077978640794754, -0.017681708559393883, -0.0001728385395836085, -9.810443589231e-05, -0.00013696208770852536, -9.536697689327411e-06, -2.2172682292875834e-05, -1.0847986231965479e-05, -0.000634111522231251, -9.894321920000948e-06, -2.264974000354414e-06, -0.00016866691294126213, -0.0002858230145648122, -0.002974611707031727], "finish_reason": "stop"}, {"text": " sum([vec1[x]**2 for x in list(vec1.keys())])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.588390588760376, -0.009153426624834538, -0.0014097285456955433, -8.880697714630514e-05, -0.013710610568523407, -0.0009434539824724197, -0.001060757553204894, -0.5490695238113403, -0.0005921755800954998, -6.8662193370983e-05, -1.9073304429184645e-05, -5.245195097813848e-06, -0.4141855835914612, -0.00014518637908622622, -0.0004211969207972288, -2.539125671319198e-05, -0.0016285026213154197, -4.768370445162873e-07, -3.71926071238704e-05, -1.1920922133867862e-06, -0.0008591298246756196, -0.0009201106731779873], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00010692501382436603, -5.125868119648658e-05, -2.8490614567999728e-05, -0.00029476112104021013, -2.145764938177308e-06, -0.004416711162775755, -9.60780744208023e-05, -0.0015532821416854858, -2.8729025871143676e-05, -7.510157047363464e-06, -1.168244216387393e-05, -2.9802276912960224e-06, -5.674201020156033e-05, -0.00029869386344216764, -3.290122185717337e-05, -4.529942543740617e-06, -7.152555099310121e-07, -8.4638240878121e-06, -0.00017450717859901488], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.005666858050972223, -5.8412379075889476e-06, -1.3112935448589269e-05, -9.119095193454996e-05, -0.00013350549852475524, -6.496695277746767e-05, -0.0020411626901477575, -0.0004389514506328851, -0.00010740180005086586, -2.610649426060263e-05, -0.00016366096679121256, -1.823885577323381e-05, -1.5616295058862306e-05, -2.372236667724792e-05, -2.4437606043647975e-05, -0.0017934442730620503], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.0694594755768776, -0.2573704719543457, -0.000697846058756113, -0.00048232366680167615, -0.04681861028075218, -0.040486130863428116], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.005404741503298283, -0.01237417571246624, -0.03691590949892998, -0.0019361099693924189, -0.003822521772235632], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.02819921262562275, -0.00013183678674977273, -0.00018559163436293602, -1.1920928244535389e-07, 0.0, -0.0005214046686887741, -6.592056161025539e-05, -0.0008005275158211589, -0.00379116996191442], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005670295562595129, -0.001292465953156352, -0.008556017652153969, -0.0018438971601426601, -0.026613907888531685, -0.008610030636191368, -0.00014411364099942148, -0.0005281960475258529, -0.010364517569541931], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|>import requests", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|>", "import", " requests", "\n"], "logprobs": [-0.08864788711071014, -8.34461570775602e-06, -8.4638240878121e-06, 0.0, -0.0010996968485414982, -0.004742682911455631, -7.033323527139146e-06, -1.4543427823809907e-05, -3.3378546504536644e-06, -9.536738616588991e-07, -2.9802276912960224e-06, -0.9553959369659424, -2.9802276912960224e-06, -7.271740287251305e-06, -4.172316494077677e-06, -3.5523738915799186e-05, -0.10090138763189316, -0.9924659132957458, -4.022572040557861, -0.038032349199056625], "finish_reason": "stop"}], "metrics": {"energy": 798.5138790740967, "energy_per_token": 4.247414250394131, "time": 21.033876, "time_per_token": 0.11188231914893616}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower().split()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", ".", "split", "()", "\n"], "logprobs": [-0.17366349697113037, -4.291525328881107e-06, -2.3841830625315197e-06, 0.0, 0.0, 0.0, -4.8636207793606445e-05, -5.8412379075889476e-06, -0.04718097671866417, -0.252514123916626, -0.00015317220822907984, -0.03255269303917885, -6.05564855504781e-05, -0.145186647772789, -0.018875852227211, -0.049455881118774414, -6.711257447022945e-05, -2.4895641803741455, -1.8015742301940918, -0.06945469230413437, -0.00959203951060772], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0002401778765488416, -2.0265558760002023e-06, 0.0, 0.0, 0.0, -5.483612312673358e-06, -1.5497195136049413e-06, -8.344646857949556e-07, -2.455681169521995e-05, -0.0002127659390680492, -5.352353764465079e-05, -0.0004103533865418285, -7.056941103655845e-05, -6.8662193370983e-05, -2.3841574147809297e-05, -5.8412379075889476e-06, -6.318072337307967e-06, -0.0006155265145935118], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.4755977988243103, -0.01817079819738865, -0.06176949664950371, -0.00012420836719684303, -0.0033477472607046366, -0.009510212577879429, -0.050401777029037476, -0.010897527448832989], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001399419124936685, -3.814624506048858e-05, -3.838465272565372e-05, -0.00011777184408856556, -1.2159273865108844e-05, -3.075552376685664e-05, -2.5987286790041253e-05, -0.0007319155265577137], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.004050029441714287, -0.0011464934796094894, -0.000557267339900136, -0.00045253525604493916, -0.2775612473487854, -0.029252370819449425, -0.0002946419408544898, -6.186770770000294e-05, -1.4781842764932662e-05, -0.00018785618885885924, -0.0001591317413840443, -0.006975938566029072], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.01659494638442993, -0.011962931603193283, -0.002328186994418502, -0.0001941730733960867, -0.00021884430316276848, -0.032296258956193924, -0.01863039843738079, -0.00023338454775512218, -9.917721035890281e-05, -0.00017176583060063422, -1.0967194612021558e-05, -1.549708758830093e-05, -1.0847986231965479e-05, -0.0006935574929229915, -6.6756979322235566e-06, -2.622600959512056e-06, -0.00015364897262770683, -0.00041333239641971886, -0.002680758247151971], "finish_reason": "stop"}, {"text": " np.sqrt(sum([vec1[x] ** 2 for x in list(vec1.keys())]))", "tokens": [" np", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", "))", "\n"], "logprobs": [-0.7283806204795837, -4.291525328881107e-06, -0.41623082756996155, -0.00017987063620239496, -0.018412737175822258, -0.036565206944942474, -0.06651932001113892, -3.7788631743751466e-05, -0.004050979390740395, -0.0031579884234815836, -0.026333075016736984, -1.2057132720947266, -0.001291751628741622, -3.099393507000059e-05, -0.0003295593778602779, -0.00024125049822032452, -2.062299427052494e-05, -0.5527610182762146, -0.00011228884250158444, -0.0007020154735073447, -6.19869097135961e-05, -0.021154602989554405, -0.00022003613412380219, -6.639736966462806e-05, -3.4570634852570947e-06, -0.0006910558440722525, -0.002295717829838395], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00013731967192143202, -4.970903682988137e-05, -2.8967437174287625e-05, -0.00040725519647821784, -2.3841830625315197e-06, -0.003535688389092684, -9.83428253675811e-05, -0.0022580146323889494, -2.777537883957848e-05, -1.3351351299206726e-05, -1.4066597032069694e-05, -2.9802276912960224e-06, -4.7444173105759546e-05, -0.0002924968139268458, -4.184158387943171e-05, -8.22540732769994e-06, -1.1920922133867862e-06, -9.536697689327411e-06, -0.00011872540198964998], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.005111957434564829, -5.006777428206988e-06, -1.7046782886609435e-05, -0.00010930894495686516, -0.00020525732543319464, -5.721882189391181e-05, -0.00261869584210217, -0.00038354191929101944, -0.00010966652916977182, -3.349725011503324e-05, -0.0002090712368953973, -1.3112935448589269e-05, -1.2040065485052764e-05, -2.062299427052494e-05, -2.7894584491150454e-05, -0.002397997537627816], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.1036113053560257, -0.2307521253824234, -0.0008257793379016221, -0.000603493710514158, -0.03805403783917427, -0.05599183961749077], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.005197702441364527, -0.012352393008768559, -0.03824646770954132, -0.0018505605403333902, -0.0033021229319274426], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.03750431165099144, -0.00016473367577418685, -0.00022384998737834394, -3.576278118089249e-07, 0.0, -0.0004817279113922268, -7.664863369427621e-05, -0.0017938013188540936, -0.004030795302242041], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005105315707623959, -0.0011844770051538944, -0.008121088147163391, -0.0016720612766221166, -0.027124058455228806, -0.008320311084389687, -0.0001445904199499637, -0.0005576247931458056, -0.009253589436411858], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.1400323361158371, -9.417489309271332e-06, -8.583032467868179e-06, 0.0, -0.0009740613750182092, -0.004114377778023481, -7.033323527139146e-06, -1.4066597032069694e-05, -2.145764938177308e-06, -7.152555099310121e-07, -3.099436753473128e-06, -0.8207525610923767], "finish_reason": "stop"}], "metrics": {"energy": 809.1735630273826, "energy_per_token": 4.281341603319484, "time": 21.236637, "time_per_token": 0.11236315873015874}}
{"outputs": [{"text": " ALPHANUMERIC.sub('', text1.lower()).strip()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", "1", ".", "lower", "())", ".", "strip", "()", "\n"], "logprobs": [-0.17876233160495758, -4.291525328881107e-06, -2.0265558760002023e-06, 0.0, 0.0, 0.0, -5.435795901576057e-05, -6.318072337307967e-06, -0.04965962842106819, -1.443929672241211, -0.00020859450160060078, -0.04826807230710983, -7.581423415103927e-05, -0.6235681772232056, -0.064558245241642, -0.014956246130168438, -1.9605567455291748, -0.28198516368865967, -0.006065532565116882, -0.07408533245325089], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0002203936892328784, -2.622600959512056e-06, 0.0, 0.0, 0.0, -6.318072337307967e-06, -1.6689286894688848e-06, -1.0728830375228426e-06, -2.6702524337451905e-05, -0.0002631794777698815, -7.772143726469949e-05, -0.0004371640970930457, -6.5205356804654e-05, -6.532455881824717e-05, -1.2755313036905136e-05, -6.6756979322235566e-06, -6.6756979322235566e-06, -0.0005844315164722502], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5675510764122009, -0.015317190438508987, -0.06188660115003586, -0.00011145447206217796, -0.003150026546791196, -0.007148049306124449, -0.05428507551550865, -0.01026894897222519], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00011264643399044871, -4.410646579344757e-05, -4.3987260141875595e-05, -0.0001230164198204875, -1.0490362910786644e-05, -1.5735502529423684e-05, -3.1470757676288486e-05, -0.0006214833119884133], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.005409128498286009, -0.0012669878778979182, -0.0006179092451930046, -0.0005031750188209116, -0.16885334253311157, -0.024808069691061974, -0.0001842805795604363, -5.018585216021165e-05, -1.3708974620385561e-05, -0.00017271934484597296, -0.00019977481861133128, -0.007480112835764885], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.018446560949087143, -0.012127826921641827, -0.0014756753807887435, -0.00019739109848160297, -0.00030489088385365903, -0.023155178874731064, -0.01590142212808132, -0.00025054652360267937, -9.357491217087954e-05, -0.000163541772053577, -1.2040065485052764e-05, -1.728519782773219e-05, -1.2636104656849056e-05, -0.0005343916127458215, -6.794906312279636e-06, -2.622600959512056e-06, -0.00010346830822527409, -0.0004207202873658389, -0.0026477063074707985], "finish_reason": "stop"}, {"text": " np.sqrt(sum([vec1[x]**2 for x in list(vec1.keys())]))", "tokens": [" np", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", "))", "\n"], "logprobs": [-0.48238715529441833, -4.768360213347478e-06, -0.2911093533039093, -0.00018654513405635953, -0.01173238642513752, -0.026342246681451797, -0.06534156948328018, -3.9219088648678735e-05, -0.004360690712928772, -0.0025273782666772604, -0.019450528547167778, -0.5993556380271912, -0.000606710382271558, -6.663577369181439e-05, -7.486063259420916e-05, -2.0265373677830212e-05, -0.7357298731803894, -0.00020180096908006817, -0.0007868293323554099, -5.07818695041351e-05, -0.014848430640995502, -1.585470999998506e-05, -3.111314072157256e-05, -3.099436753473128e-06, -0.0006430465145967901, -0.0031097407918423414], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00013398226292338222, -4.875540980719961e-05, -2.932505594799295e-05, -0.0003046525234822184, -2.3841830625315197e-06, -0.004629963543266058, -6.389413465512916e-05, -0.0015373327769339085, -2.3007127310847864e-05, -8.821448318485636e-06, -9.298280929215252e-06, -3.6954811548639555e-06, -5.221230458118953e-05, -0.00025293012731708586, -3.3378044463461265e-05, -3.3378546504536644e-06, -1.1920922133867862e-06, -1.0013530300057027e-05, -0.00013541258522309363], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.005252964794635773, -5.483612312673358e-06, -1.6212332411669195e-05, -0.00011193125828867778, -0.00013267113536130637, -7.271502545336261e-05, -0.002987685613334179, -0.0004892344586551189, -0.00011801023356383666, -3.111314072157256e-05, -0.00016473367577418685, -1.2278481335670222e-05, -1.7881233361549675e-05, -2.777537883957848e-05, -3.111314072157256e-05, -0.0023265217896550894], "finish_reason": "stop"}, {"text": " denominator > 0:", "tokens": [" denominator", " >", " ", "0", ":", "\n"], "logprobs": [-0.04853588715195656, -2.4676780700683594, -0.001851512468419969, -0.002209009835496545, -0.45688706636428833, -0.03634267672896385], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.004440091550350189, -0.01470947451889515, -0.03970072418451309, -0.0020392590668052435, -0.003501714440062642], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.0920262336730957, -0.00018702188390307128, -0.0001833270798670128, -1.1920928244535389e-07, 0.0, -0.0004477690381463617, -5.864924969500862e-05, -0.0006743779522366822, -0.004211248364299536], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.004724885802716017, -0.0012544866185635328, -0.0067894719541072845, -0.0019748962949961424, -0.03376806154847145, -0.007647286169230938, -0.00014745102089364082, -0.0005048430757597089, -0.010262105613946915], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|>\"\"\"", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.12693707644939423, -9.775113539944869e-06, -7.867782187531702e-06, 0.0, -0.0009221353684552014, -0.004530997481197119, -7.271740287251305e-06, -1.9788545614574105e-05, -2.9802276912960224e-06, -8.344646857949556e-07, -2.264974000354414e-06, -0.9963517785072327, -2.264974000354414e-06, -8.821448318485636e-06, -6.198863957251888e-06, -5.149708886165172e-05, -2.3879482746124268, -0.0024731545709073544, -0.0036653971765190363, -0.0002097863471135497, -0.2986513078212738], "finish_reason": "stop"}], "metrics": {"energy": 845.5233303623197, "energy_per_token": 4.3138945426648965, "time": 22.061861, "time_per_token": 0.11256051530612245}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1.lower()).strip().split()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ".", "lower", "())", ".", "strip", "()", ".", "split", "()", "\n"], "logprobs": [-0.19041161239147186, -3.576272320060525e-06, -2.50339189733495e-06, 0.0, 0.0, 0.0, -5.507317473529838e-05, -5.960446742392378e-06, -0.06666865944862366, -0.2633315622806549, -0.00020954797219019383, -0.030215714126825333, -6.949660019017756e-05, -2.0109989643096924, -0.04913610592484474, -0.006207234691828489, -1.1244418621063232, -0.13731254637241364, -0.00514338631182909, -2.970710515975952, -0.10881570726633072, -0.040857087820768356, -0.011229055933654308], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0002602000313345343, -2.264974000354414e-06, 0.0, 0.0, 0.0, -1.1444026313256472e-05, -1.6689286894688848e-06, -1.4305104514278355e-06, -2.658331868587993e-05, -0.00026592056383378804, -6.41325386823155e-05, -0.0004789874074049294, -6.592056161025539e-05, -5.221230458118953e-05, -2.098061486321967e-05, -5.245195097813848e-06, -5.8412379075889476e-06, -0.0005357022164389491], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.4817391335964203, -0.021075233817100525, -0.06433459371328354, -0.00012730741582345217, -0.0032884590327739716, -0.01073608547449112, -0.046315792948007584, -0.010661193169653416], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013517419574782252, -5.674201020156033e-05, -3.0040289857424796e-05, -0.00014494798961095512, -1.490105023549404e-05, -1.8596476365928538e-05, -3.433168603805825e-05, -0.000687958556227386], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.0037025725468993187, -0.0008889061282388866, -0.0006171943969093263, -0.0005115154199302197, -0.2039145976305008, -0.03401651233434677, -0.0002806984703056514, -5.793403761344962e-05, -1.5616295058862306e-05, -0.00016759421851020306, -0.0001793938863556832, -0.007884806953370571], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.028487052768468857, -0.017153708264231682, -0.0017219253350049257, -0.000169382052263245, -0.00024470672360621393, -0.03688810393214226, -0.015894969925284386, -0.00032491172896698117, -0.00012313561455812305, -0.00016485285595990717, -1.0847986231965479e-05, -1.811964830267243e-05, -1.2755313036905136e-05, -0.0005725175142288208, -1.07287787614041e-05, -3.2186455882765586e-06, -0.0001070442158379592, -0.00034731553751043975, -0.0028228219598531723], "finish_reason": "stop"}, {"text": " np.sqrt(sum([vec1[x] ** 2 for x in list(vec1.keys())]))", "tokens": [" np", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", "))", "\n"], "logprobs": [-0.5943930745124817, -3.576272320060525e-06, -0.5106871128082275, -0.00026174934464506805, -0.01804705522954464, -0.02109484374523163, -0.06260417401790619, -5.280832192511298e-05, -0.0033738852944225073, -0.0025825502816587687, -0.027667926624417305, -1.0406895875930786, -0.0013797297142446041, -2.52720492426306e-05, -0.00025996167096309364, -0.00018368464952800423, -1.9550132492440753e-05, -0.5598649978637695, -7.939023635117337e-05, -0.0008817598572932184, -5.793403761344962e-05, -0.035390399396419525, -0.00036113892565481365, -7.712543447269127e-05, -2.7418097943154862e-06, -0.0006243425305001438, -0.0025907545350492], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.0001565095444675535, -5.6503606174374e-05, -2.4914430468925275e-05, -0.000291662581730634, -2.3841830625315197e-06, -0.003415467217564583, -9.691245941212401e-05, -0.0016002956544980407, -2.777537883957848e-05, -1.0847986231965479e-05, -1.0847986231965479e-05, -2.622600959512056e-06, -4.5298504119273275e-05, -0.0003002431185450405, -2.992108420585282e-05, -6.6756979322235566e-06, -9.536738616588991e-07, -1.1801649634435307e-05, -0.00013171759201213717], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.0049725910648703575, -6.079655122448457e-06, -1.3351351299206726e-05, -0.00010585224663373083, -0.00019000156316906214, -6.23445157543756e-05, -0.0024531767703592777, -0.0005397531786002219, -0.00010275312524754554, -1.7523612768854946e-05, -0.00016366096679121256, -1.5616295058862306e-05, -1.2516897186287679e-05, -3.45700973412022e-05, -2.992108420585282e-05, -0.0022806129418313503], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.10542032122612, -0.23184098303318024, -0.0008431693422608078, -0.0005206898204050958, -0.04378912225365639, -0.04933549463748932], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.00541576836258173, -0.013593487441539764, -0.03282301500439644, -0.0023235485423356295, -0.0038262030575424433], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.06566089391708374, -0.0001716466504149139, -0.00019476900342851877, -1.1920928244535389e-07, 0.0, -0.0005067494930699468, -9.417090768693015e-05, -0.0008700875914655626, -0.0036731173750013113], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.0052717006765306, -0.0013007997767999768, -0.006225953344255686, -0.0020005942787975073, -0.03094249591231346, -0.007523535750806332, -0.00015925093612167984, -0.0005962263094261289, -0.009679526090621948], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.12964007258415222, -9.894321920000948e-06, -1.3828182090946939e-05, 0.0, -0.0009460740839131176, -0.004397840239107609, -7.271740287251305e-06, -9.298280929215252e-06, -2.7418097943154862e-06, -9.536738616588991e-07, -2.50339189733495e-06, -0.7905949950218201], "finish_reason": "stop"}], "metrics": {"energy": 832.2301904067992, "energy_per_token": 4.35722612778429, "time": 21.66445, "time_per_token": 0.11342643979057591}}
{"outputs": [{"text": " ALPHANUMERIC.sub('', text1.lower())", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", "1", ".", "lower", "())", "\n"], "logprobs": [-0.19041161239147186, -3.576272320060525e-06, -2.50339189733495e-06, 0.0, 0.0, 0.0, -5.507317473529838e-05, -5.960446742392378e-06, -0.06666865944862366, -1.4671164751052856, -0.00015615197480656207, -0.045397575944662094, -5.972207145532593e-05, -0.7437880635261536, -0.04302788898348808, -0.014575551263988018, -0.15554411709308624], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00021062063751742244, -2.0265558760002023e-06, 0.0, 0.0, 0.0, -9.179073458653875e-06, -1.7881377516459906e-06, -9.536738616588991e-07, -2.7894584491150454e-05, -0.00023326536756940186, -6.282132380874828e-05, -0.0004451475979294628, -7.450303382938728e-05, -7.331102824537084e-05, -3.313963316031732e-05, -4.410734163684538e-06, -5.602820692729438e-06, -0.000542612629942596], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.4758205711841583, -0.016193997114896774, -0.057940635830163956, -0.00014280252798926085, -0.0033149549271911383, -0.009649774059653282, -0.0469653457403183, -0.010750710032880306], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00015579440514557064, -4.827859811484814e-05, -4.351044481154531e-05, -0.0001311216183239594, -1.1920858014491387e-05, -1.2636104656849056e-05, -2.5152843591058627e-05, -0.0006249382277019322], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.0036482936702668667, -0.001158162602223456, -0.000491021724883467, -0.0005034133209846914, -0.2024797797203064, -0.020977532491087914, -0.00021479207498487085, -5.411955135059543e-05, -1.4662635294371285e-05, -0.00012396997772157192, -0.00017975145601667464, -0.006357445381581783], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.017585430294275284, -0.014667302370071411, -0.002502645133063197, -0.00018308870494365692, -0.00015722469834145159, -0.028077978640794754, -0.017681708559393883, -0.0001728385395836085, -9.810443589231e-05, -0.00013696208770852536, -9.536697689327411e-06, -2.2172682292875834e-05, -1.0847986231965479e-05, -0.000634111522231251, -9.894321920000948e-06, -2.264974000354414e-06, -0.00016866691294126213, -0.0002858230145648122, -0.002974611707031727], "finish_reason": "stop"}, {"text": " sum([vec1[x]**2 for x in list(vec1.keys())])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.588390588760376, -0.009153426624834538, -0.0014097285456955433, -8.880697714630514e-05, -0.013710610568523407, -0.0009434539824724197, -0.001060757553204894, -0.5490695238113403, -0.0005921755800954998, -6.8662193370983e-05, -1.9073304429184645e-05, -5.245195097813848e-06, -0.4141855835914612, -0.00014518637908622622, -0.0004211969207972288, -2.539125671319198e-05, -0.0016285026213154197, -4.768370445162873e-07, -3.71926071238704e-05, -1.1920922133867862e-06, -0.0008591298246756196, -0.0009201106731779873], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00010692501382436603, -5.125868119648658e-05, -2.8490614567999728e-05, -0.00029476112104021013, -2.145764938177308e-06, -0.004416711162775755, -9.60780744208023e-05, -0.0015532821416854858, -2.8729025871143676e-05, -7.510157047363464e-06, -1.168244216387393e-05, -2.9802276912960224e-06, -5.674201020156033e-05, -0.00029869386344216764, -3.290122185717337e-05, -4.529942543740617e-06, -7.152555099310121e-07, -8.4638240878121e-06, -0.00017450717859901488], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.005666858050972223, -5.8412379075889476e-06, -1.3112935448589269e-05, -9.119095193454996e-05, -0.00013350549852475524, -6.496695277746767e-05, -0.0020411626901477575, -0.0004389514506328851, -0.00010740180005086586, -2.610649426060263e-05, -0.00016366096679121256, -1.823885577323381e-05, -1.5616295058862306e-05, -2.372236667724792e-05, -2.4437606043647975e-05, -0.0017934442730620503], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.0694594755768776, -0.2573704719543457, -0.000697846058756113, -0.00048232366680167615, -0.04681861028075218, -0.040486130863428116], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.005404741503298283, -0.01237417571246624, -0.03691590949892998, -0.0019361099693924189, -0.003822521772235632], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.02819921262562275, -0.00013183678674977273, -0.00018559163436293602, -1.1920928244535389e-07, 0.0, -0.0005214046686887741, -6.592056161025539e-05, -0.0008005275158211589, -0.00379116996191442], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005670295562595129, -0.001292465953156352, -0.008556017652153969, -0.0018438971601426601, -0.026613907888531685, -0.008610030636191368, -0.00014411364099942148, -0.0005281960475258529, -0.010364517569541931], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.08864788711071014, -8.34461570775602e-06, -8.4638240878121e-06, 0.0, -0.0010996968485414982, -0.004742682911455631, -7.033323527139146e-06, -1.4543427823809907e-05, -3.3378546504536644e-06, -9.536738616588991e-07, -2.9802276912960224e-06, -0.785935640335083], "finish_reason": "stop"}], "metrics": {"energy": 776.8943430366519, "energy_per_token": 4.316079683536955, "time": 20.397387, "time_per_token": 0.11331881666666666}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.16476592421531677, -3.6954811548639555e-06, -2.622600959512056e-06, 0.0, 0.0, 0.0, -5.721882189391181e-05, -6.556489552167477e-06, -0.04599057510495186, -0.29192420840263367, -0.00019071667338721454, -0.03649601712822914, -7.521823135903105e-05, -0.14225101470947266, -0.020112505182623863, -0.05399417504668236, -6.0437283536884934e-05, -0.07499030977487564], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00023123928986024112, -2.0265558760002023e-06, 0.0, 0.0, 0.0, -1.1444026313256472e-05, -1.311301275563892e-06, -7.152555099310121e-07, -2.5152843591058627e-05, -0.00027056847466155887, -5.2569914259947836e-05, -0.00041845624218694866, -8.284702198579907e-05, -6.8662193370983e-05, -2.658331868587993e-05, -6.437280717364047e-06, -6.318072337307967e-06, -0.0006541258189827204], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.43853244185447693, -0.019094698131084442, -0.052586134523153305, -0.00014256415306590497, -0.003661121241748333, -0.010598444379866123, -0.05521479994058609, -0.01224229484796524], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013422065239865333, -4.60137271147687e-05, -3.158996332786046e-05, -0.0001419681793777272, -1.3947389561508317e-05, -3.182837463100441e-05, -2.288792165927589e-05, -0.0006687788409180939], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.004155453760176897, -0.0012305553536862135, -0.000753357307985425, -0.00047136162174865603, -0.13493475317955017, -0.02838369831442833, -0.0002615109842736274, -4.8636207793606445e-05, -1.6927575416048057e-05, -0.00018559163436293602, -0.00013136000779923052, -0.006368343252688646], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.020677946507930756, -0.015201547183096409, -0.0016486160457134247, -0.00021860594279132783, -0.00027855331427417696, -0.0323638953268528, -0.01596149429678917, -0.0002051381452474743, -0.0001323135511483997, -0.0002090712368953973, -1.1086402082582936e-05, -1.8000440832111053e-05, -1.0371154530730564e-05, -0.0007540719816461205, -9.775113539944869e-06, -2.3841830625315197e-06, -0.0001864259538706392, -0.0003657863999251276, -0.0028523020446300507], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in list(vec1.keys())])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.6327648758888245, -0.012120288796722889, -0.002146561164408922, -9.727005090098828e-05, -0.02753479965031147, -0.0017326356610283256, -0.0009971652179956436, -0.9864574074745178, -0.0031998169142752886, -9.560128091834486e-05, -0.00029845553217455745, -0.00012134769349358976, -4.410734163684538e-06, -0.6303809285163879, -0.00012933371181134135, -0.0008978387922979891, -7.354942499659956e-05, -0.01218423806130886, -8.34461570775602e-06, -8.272782724816352e-05, -3.576272320060525e-06, -0.0005090133054181933, -0.0066549573093652725], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-9.30981186684221e-05, -4.6967357775429264e-05, -1.847726889536716e-05, -0.0002892790944315493, -1.6689286894688848e-06, -0.0018499656580388546, -8.34430247778073e-05, -0.0019860798493027687, -2.884823152271565e-05, -8.4638240878121e-06, -1.1920858014491387e-05, -3.099436753473128e-06, -4.827859811484814e-05, -0.00036090059438720345, -4.660974445869215e-05, -7.748573807475623e-06, -5.960462772236497e-07, -1.0132738680113107e-05, -0.0001102625101339072], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.005243714898824692, -5.8412379075889476e-06, -1.585470999998506e-05, -0.00013279033009894192, -0.0002656822034623474, -7.903263758635148e-05, -0.0030258367769420147, -0.0005851463647559285, -9.97731985989958e-05, -1.2159273865108844e-05, -0.0001472126314183697, -1.2755313036905136e-05, -1.2636104656849056e-05, -2.5748875486897305e-05, -3.40932747349143e-05, -0.002014394849538803], "finish_reason": "stop"}, {"text": " denominator > 0:", "tokens": [" denominator", " >", " ", "0", ":", "\n"], "logprobs": [-0.07197055965662003, -2.6933176517486572, -0.0017638138961046934, -0.003326480044052005, -0.42006048560142517, -0.03201135993003845], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.0054898690432310104, -0.013370493426918983, -0.05359732732176781, -0.002163333585485816, -0.003888665698468685], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.061988793313503265, -0.00021407696476671845, -0.00028880240279249847, -1.1920928244535389e-07, 0.0, -0.0004337085410952568, -0.00010692501382436603, -0.000788139586802572, -0.003177239093929529], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.004904620815068483, -0.0010845737997442484, -0.008212133310735226, -0.0016861044568940997, -0.025980383157730103, -0.008145446889102459, -0.00014888131408952177, -0.0005303407087922096, -0.010714738629758358], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.0996382012963295, -9.65590606938349e-06, -9.775113539944869e-06, 0.0, -0.0010480155469849706, -0.004088733810931444, -7.152531907195225e-06, -9.894321920000948e-06, -2.622600959512056e-06, -7.152555099310121e-07, -2.861018856492592e-06, -0.8120418787002563], "finish_reason": "stop"}], "metrics": {"energy": 786.0260793743134, "energy_per_token": 4.318824611946777, "time": 20.604765, "time_per_token": 0.1132129945054945}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.19041161239147186, -3.576272320060525e-06, -2.50339189733495e-06, 0.0, 0.0, 0.0, -5.507317473529838e-05, -5.960446742392378e-06, -0.06666865944862366, -0.2633315622806549, -0.00020954797219019383, -0.030215714126825333, -6.949660019017756e-05, -0.144032821059227, -0.02089616470038891, -0.06307335197925568, -5.864924969500862e-05, -0.09706223756074905], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0002469711471349001, -2.3841830625315197e-06, 0.0, 0.0, 0.0, -1.0371154530730564e-05, -2.0265558760002023e-06, -8.344646857949556e-07, -2.1576648578047752e-05, -0.00019000156316906214, -7.73638384998776e-05, -0.00041797960875555873, -8.225102646974847e-05, -7.581423415103927e-05, -3.957670196541585e-05, -5.602820692729438e-06, -6.318072337307967e-06, -0.0005526207387447357], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.4929797351360321, -0.01583031937479973, -0.04888014495372772, -0.00011932138295378536, -0.003766111796721816, -0.009170553646981716, -0.04709090664982796, -0.011367788538336754], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00014494798961095512, -4.3748852476710454e-05, -4.708655978902243e-05, -0.000105375460407231, -1.1920858014491387e-05, -1.3470558769768104e-05, -2.7179348762729205e-05, -0.0006761648692190647], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.004639812279492617, -0.000959531927946955, -0.0006893880781717598, -0.0005416594794951379, -0.2939108610153198, -0.020218702033162117, -0.00024387246230617166, -4.446407547220588e-05, -1.8715683836489916e-05, -0.0001510267611593008, -0.00016699827392585576, -0.005934120621532202], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.01705210655927658, -0.016206080093979836, -0.0016936019528657198, -0.0002631794777698815, -0.00037508129025809467, -0.03165893256664276, -0.01726994663476944, -0.0002252801787108183, -0.0001292145170737058, -0.00013100242358632386, -1.1324817933200393e-05, -1.847726889536716e-05, -1.1920858014491387e-05, -0.0007058274932205677, -1.0013530300057027e-05, -2.50339189733495e-06, -0.00010561384988250211, -0.0004015354788862169, -0.0026202413719147444], "finish_reason": "stop"}, {"text": " np.sqrt(sum([vec1[x]**2 for x in list(vec1.keys())]))", "tokens": [" np", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", "))", "\n"], "logprobs": [-0.726608157157898, -6.794906312279636e-06, -0.5025906562805176, -0.0004211969207972288, -0.0458894707262516, -0.058100372552871704, -0.08675993233919144, -4.8993817472364753e-05, -0.0045910426415503025, -0.00388985313475132, -0.020938074216246605, -0.5981687903404236, -0.0006305375136435032, -0.00011300401820335537, -8.535020606359467e-05, -2.4318398573086597e-05, -0.7392042279243469, -0.00028832571115344763, -0.0007138088112697005, -5.769562994828448e-05, -0.021223461255431175, -3.2782016205601394e-05, -3.731181277544238e-05, -3.576272320060525e-06, -0.0009432157967239618, -0.0031791406217962503], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00012206286191940308, -7.30726242181845e-05, -2.253030106658116e-05, -0.00025519452174194157, -1.6689286894688848e-06, -0.002301307860761881, -6.8662193370983e-05, -0.001711095916107297, -2.95634672511369e-05, -1.156323378381785e-05, -1.2516897186287679e-05, -2.9802276912960224e-06, -7.712543447269127e-05, -0.0003311085747554898, -3.909988299710676e-05, -4.410734163684538e-06, -8.344646857949556e-07, -7.152531907195225e-06, -8.868777513271198e-05], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.004322709050029516, -9.65590606938349e-06, -1.156323378381785e-05, -0.00015341058315243572, -0.00019298121333122253, -6.496695277746767e-05, -0.0021772508043795824, -0.0005021026590839028, -9.77468371274881e-05, -1.728519782773219e-05, -0.00016091958968900144, -1.4185804502631072e-05, -1.2755313036905136e-05, -2.455681169521995e-05, -3.40932747349143e-05, -0.0019991665612906218], "finish_reason": "stop"}, {"text": " denominator > 0:", "tokens": [" denominator", " >", " ", "0", ":", "\n"], "logprobs": [-0.08841493725776672, -2.673454523086548, -0.001627312507480383, -0.002965340856462717, -0.22293877601623535, -0.03262503817677498], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.007440001238137484, -0.01322921458631754, -0.03213384747505188, -0.0024986020289361477, -0.004454808309674263], "finish_reason": "stop"}, {"text": " numerator / denominator", "tokens": [" numer", "ator", " /", " denominator", "\n"], "logprobs": [-2.995248317718506, -7.152555099310121e-07, -0.0061933733522892, -0.0044546895660459995, -0.009350200183689594], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.0050955903716385365, -0.0009328543092124164, -0.007458223029971123, -0.0014803176745772362, -0.029644301161170006, -0.007918869145214558, -0.00015233787416946143, -0.0005362979718483984, -0.010346820577979088], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|>#!/usr/bin/env python3", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.12542428076267242, -1.0013530300057027e-05, -9.536697689327411e-06, 0.0, -0.0009263038518838584, -0.004499312024563551, -6.9141146923357155e-06, -2.2649508537142538e-05, -2.861018856492592e-06, -9.536738616588991e-07, -2.9802276912960224e-06, -1.0699336528778076, -3.099436753473128e-06, -1.0371154530730564e-05, -5.125986263010418e-06, -5.7338023907504976e-05, -0.10388275235891342, -1.202970027923584, -1.4994932413101196, -0.0548601895570755, -0.0596492663025856, -6.425174069590867e-05, -0.00846985075622797, -0.0008256602450273931, -0.08655715733766556, -0.0035265416372567415, -0.5261359810829163, -0.020215431228280067], "finish_reason": "stop"}], "metrics": {"energy": 874.1407133293153, "energy_per_token": 4.4372625042097225, "time": 22.28699, "time_per_token": 0.11313192893401015}}
{"outputs": [{"text": " ALPHANUMERIC.sub('', text1.lower())", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", "1", ".", "lower", "())", "\n"], "logprobs": [-0.17366349697113037, -4.291525328881107e-06, -2.3841830625315197e-06, 0.0, 0.0, 0.0, -4.8636207793606445e-05, -5.8412379075889476e-06, -0.04718097671866417, -1.504284143447876, -0.0001551984460093081, -0.04553711786866188, -6.90197994117625e-05, -0.6886903047561646, -0.04966983571648598, -0.012291163206100464, -0.17902947962284088], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00027295202016830444, -1.4305104514278355e-06, 0.0, 0.0, 0.0, -6.079655122448457e-06, -1.5497195136049413e-06, -7.152555099310121e-07, -2.3483953555114567e-05, -0.0002037079248111695, -6.878139538457617e-05, -0.0004391897819004953, -9.047575440490618e-05, -5.280832192511298e-05, -2.8132995794294402e-05, -5.8412379075889476e-06, -6.079655122448457e-06, -0.0005277194431982934], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.45178085565567017, -0.016589554026722908, -0.06380852311849594, -0.00013445904187392443, -0.003099282970651984, -0.008573628030717373, -0.051870957016944885, -0.01129647996276617], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013159839727450162, -4.8040190449682996e-05, -4.756337511935271e-05, -0.00015901254664640874, -1.0847986231965479e-05, -4.887569048150908e-06, -2.8371408916427754e-05, -0.0007693191873840988], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.004697122145444155, -0.0010009760735556483, -0.0008931938209570944, -0.0005050813779234886, -0.1548134684562683, -0.028935914859175682, -0.00032693761750124395, -5.9126061387360096e-05, -1.4662635294371285e-05, -0.0001411338453181088, -0.00013863079948350787, -0.006801193580031395], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.029977308586239815, -0.015985075384378433, -0.0015419748378917575, -0.0002908283786382526, -0.00037496211007237434, -0.026852769777178764, -0.017783479765057564, -0.00024053541710600257, -0.00010799778101500124, -0.00015066919149830937, -2.2411095415009186e-05, -1.7523612768854946e-05, -1.168244216387393e-05, -0.0005595310358330607, -1.0013530300057027e-05, -2.264974000354414e-06, -0.00010394509445177391, -0.00035982808913104236, -0.002716186922043562], "finish_reason": "stop"}, {"text": " sum([vec1[x]**2 for x in list(vec1.keys())])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.713676393032074, -0.012355807237327099, -0.002627256326377392, -9.989239333663136e-05, -0.010045330040156841, -0.0016919358167797327, -0.001689436612650752, -0.6416943669319153, -0.0004892344586551189, -8.570780482841656e-05, -2.1576648578047752e-05, -4.410734163684538e-06, -0.5242264866828918, -9.48860906646587e-05, -0.0004925706889480352, -3.325883881188929e-05, -0.002541052643209696, -8.344646857949556e-07, -2.5629668016335927e-05, -1.311301275563892e-06, -0.0008627030183561146, -0.0010389650706201792], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00012778419477399439, -4.970903682988137e-05, -3.123234637314454e-05, -0.00024589852546341717, -2.264974000354414e-06, -0.0033568956423550844, -8.308542601298541e-05, -0.0021466801408678293, -3.182837463100441e-05, -9.894321920000948e-06, -1.4066597032069694e-05, -2.7418097943154862e-06, -5.566918844124302e-05, -0.00024184639914892614, -3.2066785934148356e-05, -6.437280717364047e-06, -8.344646857949556e-07, -6.794906312279636e-06, -0.00015877417172305286], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.004887775518000126, -6.437280717364047e-06, -1.680836794548668e-05, -0.00011312322021694854, -0.00020728347590193152, -8.439661905867979e-05, -0.003091201651841402, -0.0006188622792251408, -0.00010513706365600228, -1.811964830267243e-05, -0.0001784403866622597, -1.6569954823353328e-05, -1.8954096958623268e-05, -2.1576648578047752e-05, -3.516612196108326e-05, -0.0023534002248197794], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.10258588939905167, -0.22743454575538635, -0.0008350699208676815, -0.0004640932602342218, -0.03728072717785835, -0.06325352936983109], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.004527318757027388, -0.013781394809484482, -0.04115789756178856, -0.002051988383755088, -0.003515019081532955], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.07613179087638855, -0.00021217002358753234, -0.00021288513380568475, -2.3841855067985307e-07, 0.0, -0.0009246364934369922, -8.189342770492658e-05, -0.0003972456615883857, -0.0028736984822899103], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.00500698946416378, -0.0010786197381094098, -0.006687284912914038, -0.0017357297474518418, -0.028542084619402885, -0.007867065258324146, -0.00013457823661156, -0.0005243833875283599, -0.010372186079621315], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|>import re", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|>", "import", " re", "\n"], "logprobs": [-0.1294158548116684, -8.4638240878121e-06, -9.059865078597795e-06, 0.0, -0.0010751663940027356, -0.00428128382191062, -6.198863957251888e-06, -1.1324817933200393e-05, -3.576272320060525e-06, -8.344646857949556e-07, -2.861018856492592e-06, -1.015699863433838, -3.3378546504536644e-06, -1.1205610462639015e-05, -5.245195097813848e-06, -4.076874756719917e-05, -0.09015707671642303, -1.0981372594833374, -1.5021461248397827, -0.015912804752588272], "finish_reason": "stop"}], "metrics": {"energy": 810.6109472732543, "energy_per_token": 4.311760357836459, "time": 20.80508, "time_per_token": 0.11066531914893617}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.16476592421531677, -3.6954811548639555e-06, -2.622600959512056e-06, 0.0, 0.0, 0.0, -5.721882189391181e-05, -6.556489552167477e-06, -0.04599057510495186, -0.29192420840263367, -0.00019071667338721454, -0.03649601712822914, -7.521823135903105e-05, -0.14225101470947266, -0.020112505182623863, -0.05399417504668236, -6.0437283536884934e-05, -0.07499030977487564], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00023123928986024112, -2.0265558760002023e-06, 0.0, 0.0, 0.0, -1.1444026313256472e-05, -1.311301275563892e-06, -7.152555099310121e-07, -2.5152843591058627e-05, -0.00027056847466155887, -5.2569914259947836e-05, -0.00041845624218694866, -8.284702198579907e-05, -6.8662193370983e-05, -2.658331868587993e-05, -6.437280717364047e-06, -6.318072337307967e-06, -0.0006541258189827204], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.43853244185447693, -0.019094698131084442, -0.052586134523153305, -0.00014256415306590497, -0.003661121241748333, -0.010598444379866123, -0.05521479994058609, -0.01224229484796524], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00013422065239865333, -4.60137271147687e-05, -3.158996332786046e-05, -0.0001419681793777272, -1.3947389561508317e-05, -3.182837463100441e-05, -2.288792165927589e-05, -0.0006687788409180939], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.004155453760176897, -0.0012305553536862135, -0.000753357307985425, -0.00047136162174865603, -0.13493475317955017, -0.02838369831442833, -0.0002615109842736274, -4.8636207793606445e-05, -1.6927575416048057e-05, -0.00018559163436293602, -0.00013136000779923052, -0.006368343252688646], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.020677946507930756, -0.015201547183096409, -0.0016486160457134247, -0.00021860594279132783, -0.00027855331427417696, -0.0323638953268528, -0.01596149429678917, -0.0002051381452474743, -0.0001323135511483997, -0.0002090712368953973, -1.1086402082582936e-05, -1.8000440832111053e-05, -1.0371154530730564e-05, -0.0007540719816461205, -9.775113539944869e-06, -2.3841830625315197e-06, -0.0001864259538706392, -0.0003657863999251276, -0.0028523020446300507], "finish_reason": "stop"}, {"text": " np.sqrt(sum([vec1[x]**2 for x in vec1.keys()]))", "tokens": [" np", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "1", ".", "keys", "()", "]))", "\n"], "logprobs": [-0.7587910294532776, -5.245195097813848e-06, -0.6745639443397522, -0.00034767304896377027, -0.030810730531811714, -0.030305925756692886, -0.09093324095010757, -4.279521817807108e-05, -0.005465327296406031, -0.00380589603446424, -0.0222679004073143, -0.4735546112060547, -0.0006733057671226561, -0.00011860620725201443, -7.486063259420916e-05, -1.883488948806189e-05, -0.8351362347602844, -7.176141662057489e-05, -0.5267911553382874, -0.00013863079948350787, -3.933898824470816e-06, -0.0020729261450469494, -0.0059881568886339664], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-8.868777513271198e-05, -6.282132380874828e-05, -3.540453326422721e-05, -0.00042215018766000867, -2.0265558760002023e-06, -0.0041636452078819275, -6.782778655178845e-05, -0.0015905360924080014, -2.4199192921514623e-05, -1.0967194612021558e-05, -1.0251946150674485e-05, -2.3841830625315197e-06, -7.903263758635148e-05, -0.00034517052699811757, -3.85038583772257e-05, -9.894321920000948e-06, -8.344646857949556e-07, -1.3828182090946939e-05, -0.00015043080202303827], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.007287704385817051, -7.033323527139146e-06, -1.5020257706055418e-05, -9.858122211880982e-05, -0.0001954841281985864, -7.712543447269127e-05, -0.002528210636228323, -0.0004599228559527546, -8.296622399939224e-05, -2.2053474822314456e-05, -0.0001429217227268964, -1.490105023549404e-05, -1.549708758830093e-05, -2.7656173188006505e-05, -2.7417760065873154e-05, -0.002186290919780731], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.07634375989437103, -0.192181795835495, -0.001004906021989882, -0.0005041282274760306, -0.0484808087348938, -0.05742357298731804], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.0056623537093400955, -0.011256992816925049, -0.04683442413806915, -0.0023284247145056725, -0.0036145609337836504], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.10057651996612549, -0.00018761781393550336, -0.00021753329201601446, -1.1920928244535389e-07, 0.0, -0.0005510718910954893, -7.784063927829266e-05, -0.0009147512027993798, -0.0038963842671364546], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005556139629334211, -0.00115697190631181, -0.007033114787191153, -0.0017534609651193023, -0.025664282962679863, -0.00763675756752491, -0.00016509123088326305, -0.0005380851216614246, -0.010223285295069218], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.12826746702194214, -1.0132738680113107e-05, -8.34461570775602e-06, 0.0, -0.0007683662115596235, -0.004501091782003641, -7.152531907195225e-06, -1.4781842764932662e-05, -2.264974000354414e-06, -1.0728830375228426e-06, -4.0531076592742465e-06, -0.7726099491119385], "finish_reason": "stop"}], "metrics": {"energy": 797.4670869636533, "energy_per_token": 4.381687291009084, "time": 20.808033, "time_per_token": 0.11432985164835163}}
{"outputs": [{"text": " ALPHANUMERIC.sub(\" \", text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "(", "\"", " \"", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.19041161239147186, -3.576272320060525e-06, -2.50339189733495e-06, 0.0, 0.0, 0.0, -5.507317473529838e-05, -5.960446742392378e-06, -2.7426178455352783, -0.037585485726594925, -0.05782228335738182, -0.00017438798386137933, -0.03745206445455551, -9.274052717955783e-05, -0.18066878616809845, -0.022614212706685066, -0.06909797340631485, -7.414542778860778e-05, -0.09076494723558426], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0002047805901383981, -2.264974000354414e-06, 0.0, 0.0, 0.0, -1.5258672647178173e-05, -1.4305104514278355e-06, -8.344646857949556e-07, -2.95634672511369e-05, -0.00017569905321579427, -5.209310256759636e-05, -0.0004190520558040589, -5.8530047681415454e-05, -6.97350042173639e-05, -5.245071224635467e-05, -5.960446742392378e-06, -5.722029527532868e-06, -0.0004702892620116472], "finish_reason": "stop"}, {"text": " np.array(list(Counter(text1.split()).values()))", "tokens": [" np", ".", "array", "(", "list", "(", "Counter", "(", "text", "1", ".", "split", "())", ".", "values", "()))", "\n"], "logprobs": [-1.5194673538208008, -0.00019941726350225508, -0.006802969612181187, -0.7048904299736023, -0.24770161509513855, -0.010364281013607979, -0.0996321588754654, -0.003497794270515442, -0.020375000312924385, -0.00017867876158561558, -0.0051356772892177105, -0.0038430660497397184, -0.030909093096852303, -1.9073304429184645e-05, -0.0005654881824739277, -0.0341482013463974, -0.021454045549035072], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00015090756642166525, -5.018585216021165e-05, -3.71926071238704e-05, -9.953480184776708e-05, -1.2159273865108844e-05, -1.3351351299206726e-05, -2.8609820219571702e-05, -0.0008025524439290166], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.0044206278398633, -0.0013049667468294501, -0.0005494038923643529, -0.0004786299541592598, -1.6949191093444824, -0.00013207517622504383, -0.0003449321957305074, -0.01673223450779915, -0.00015043080202303827, -4.577531944960356e-05, -1.168244216387393e-05, -8.272782724816352e-05, -7.629103492945433e-05, -2.50339189733495e-06, -3.40932747349143e-05, -0.007749729789793491], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.0186760313808918, -0.019161244854331017, -0.002362200990319252, -0.0001641377166379243, -0.00039307496626861393, -0.036857083439826965, -0.019028032198548317, -0.00028618055512197316, -0.00013386306818574667, -0.0001586549769854173, -1.8596476365928538e-05, -2.2649508537142538e-05, -1.2874520507466514e-05, -0.0008428120636381209, -5.602820692729438e-06, -2.7418097943154862e-06, -0.00010799778101500124, -0.00038521020906046033, -0.0027178514283150434], "finish_reason": "stop"}, {"text": " np.sqrt(sum([vec1[x]**2 for x in list(vec1.keys())]))", "tokens": [" np", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", "))", "\n"], "logprobs": [-0.7974781394004822, -7.152531907195225e-06, -0.4612251818180084, -0.0003922408213838935, -0.031112264841794968, -0.04066527262330055, -0.0747237354516983, -5.030505417380482e-05, -0.006004390772432089, -0.00283577898517251, -0.02848821133375168, -0.5707862377166748, -0.0006443570018745959, -0.0001102625101339072, -9.929640509653836e-05, -1.8000440832111053e-05, -0.557299017906189, -0.0002015625941567123, -0.0006125480867922306, -5.352353764465079e-05, -0.015788663178682327, -4.136476854910143e-05, -2.8609820219571702e-05, -3.814689989667386e-06, -0.0008198237628675997, -0.003573462599888444], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-9.679325739853084e-05, -6.401333666872233e-05, -3.313963316031732e-05, -0.0003053675754927099, -2.145764938177308e-06, -0.00267350603826344, -8.010543388081715e-05, -0.00199167151004076, -3.0636318115284666e-05, -1.2516897186287679e-05, -1.0490362910786644e-05, -2.3841830625315197e-06, -6.782778655178845e-05, -0.00032395837479270995, -3.671578815556131e-05, -4.768360213347478e-06, -5.960462772236497e-07, -1.1920858014491387e-05, -0.00018976318824570626], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.004123162943869829, -5.006777428206988e-06, -1.2159273865108844e-05, -0.00010346830822527409, -0.00021050144277978688, -8.725739462533966e-05, -0.0034157049376517534, -0.0006301801186054945, -0.00010489867418073118, -2.2291887944447808e-05, -0.0001851148990681395, -1.8715683836489916e-05, -1.2397689715726301e-05, -2.777537883957848e-05, -2.7179348762729205e-05, -0.00212395959533751], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.08525151014328003, -0.16529858112335205, -0.0009139174944721162, -0.0004864939546678215, -0.05576198175549507, -0.05110384523868561], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.005390750709921122, -0.014680460095405579, -0.03463137894868851, -0.002062933286651969, -0.0038075584452599287], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.03272922337055206, -0.0001541257370263338, -0.00021169328829273582, -1.1920928244535389e-07, 0.0, -0.0007855190197005868, -7.271502545336261e-05, -0.0010309863137081265, -0.003641642164438963], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.0057972390204668045, -0.001211386057548225, -0.00686856172978878, -0.0016963391099125147, -0.031086264178156853, -0.007958725094795227, -0.00017045476124621928, -0.0005038899253122509, -0.011102564632892609], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.14897660911083221, -8.940656698541716e-06, -7.271740287251305e-06, 0.0, -0.0010799296433106065, -0.004071875009685755, -6.6756979322235566e-06, -1.168244216387393e-05, -2.861018856492592e-06, -8.344646857949556e-07, -3.099436753473128e-06, -0.812631368637085], "finish_reason": "stop"}], "metrics": {"energy": 858.1295202903751, "energy_per_token": 4.312208644675252, "time": 22.274256, "time_per_token": 0.11193093467336684}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.19041161239147186, -3.576272320060525e-06, -2.50339189733495e-06, 0.0, 0.0, 0.0, -5.507317473529838e-05, -5.960446742392378e-06, -0.06666865944862366, -0.2633315622806549, -0.00020954797219019383, -0.030215714126825333, -6.949660019017756e-05, -0.144032821059227, -0.02089616470038891, -0.06307335197925568, -5.864924969500862e-05, -0.09706223756074905], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0002469711471349001, -2.3841830625315197e-06, 0.0, 0.0, 0.0, -1.0371154530730564e-05, -2.0265558760002023e-06, -8.344646857949556e-07, -2.1576648578047752e-05, -0.00019000156316906214, -7.73638384998776e-05, -0.00041797960875555873, -8.225102646974847e-05, -7.581423415103927e-05, -3.957670196541585e-05, -5.602820692729438e-06, -6.318072337307967e-06, -0.0005526207387447357], "finish_reason": "stop"}, {"text": " np.array([freq / sum(freq.values()) for freq in [Counter(t) for t in text1.split()]])", "tokens": [" np", ".", "array", "([", "freq", " /", " sum", "(", "freq", ".", "values", "())", " for", " fre", "q", " in", " [", "Counter", "(", "t", ")", " for", " t", " in", " text", "1", ".", "split", "()", "]]", ")", "\n"], "logprobs": [-1.5911223888397217, -0.00024172721896320581, -0.007968895137310028, -0.6466807723045349, -1.5295964479446411, -2.212921142578125, -1.112452507019043, -0.0036404544953256845, -0.6017726063728333, -0.12311804294586182, -0.0005266471416689456, -7.688703772146255e-05, -0.020268000662326813, -0.3986690044403076, -8.702239938429557e-06, -0.0010368215152993798, -0.7239342331886292, -0.04077663645148277, -0.010132069699466228, -3.1592769622802734, -1.4840863943099976, -0.008956732228398323, -0.0019546705298125744, -0.0002324311062693596, -0.19829630851745605, -0.001447583083063364, -0.0049865879118442535, -0.006066361907869577, -0.10097682476043701, -0.020229684188961983, -0.019922394305467606, -0.09006262570619583], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001147919538198039, -4.2199197196168825e-05, -3.635817120084539e-05, -9.417090768693015e-05, -1.168244216387393e-05, -1.9430925021879375e-05, -2.706014311115723e-05, -0.0007817073492333293], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.005202920641750097, -0.0010502781951799989, -0.0008300673216581345, -0.0005321278586052358, -0.18131636083126068, -0.033580414950847626, -0.000271521887043491, -4.935142715112306e-05, -1.9430925021879375e-05, -0.00020668754586949944, -0.0001456631434848532, -0.006963982246816158], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.03675723448395729, -0.016281377524137497, -0.0012143626809120178, -0.00027771908207796514, -0.00034195298212580383, -0.02947671338915825, -0.019255615770816803, -0.00016902448260225356, -0.0001037067049765028, -0.00010024998482549563, -1.4781842764932662e-05, -2.109982233378105e-05, -1.2636104656849056e-05, -0.0006276782951317728, -8.106198947643861e-06, -2.9802276912960224e-06, -0.00017021637177094817, -0.0004010588163509965, -0.0027846628800034523], "finish_reason": "stop"}, {"text": " sum([vec1[x]**2 for x in vec1])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "1", "])", "\n"], "logprobs": [-0.5817750096321106, -0.009677165187895298, -0.0053288559429347515, -0.0001805857609724626, -0.013016612268984318, -0.0011744751827791333, -0.0009045085171237588, -0.7157161831855774, -0.0004943578969687223, -6.663577369181439e-05, -2.0265373677830212e-05, -5.602820692729438e-06, -1.0157036781311035, -2.2411095415009186e-05, -0.3637320399284363, -0.006708836182951927], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-9.238292841473594e-05, -4.708655978902243e-05, -2.5987286790041253e-05, -0.00029273517429828644, -1.6689286894688848e-06, -0.0031111668795347214, -9.142934868577868e-05, -0.0022763311862945557, -3.075552376685664e-05, -9.536697689327411e-06, -9.894321920000948e-06, -2.3841830625315197e-06, -5.066266385256313e-05, -0.0002547178009990603, -5.4238757002167404e-05, -5.483612312673358e-06, -1.0728830375228426e-06, -6.794906312279636e-06, -0.0001045410826918669], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.006338729523122311, -6.794906312279636e-06, -1.597391747054644e-05, -0.0001234931987710297, -0.00017295771976932883, -6.818538531661034e-05, -0.0026811149436980486, -0.0005081792478449643, -8.11782301752828e-05, -1.585470999998506e-05, -0.00011705666838679463, -1.6569954823353328e-05, -1.4305012882687151e-05, -3.433168603805825e-05, -3.325883881188929e-05, -0.00226693507283926], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.06735070794820786, -0.17876273393630981, -0.0011254174169152975, -0.0006076634745113552, -0.04433073103427887, -0.04301304370164871], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.005943245254456997, -0.013092034496366978, -0.036845821887254715, -0.0019427727675065398, -0.003779531689360738], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.04301521182060242, -0.0001991788885788992, -0.00026806574896909297, -1.1920928244535389e-07, 0.0, -0.0006898645660839975, -9.452849917579442e-05, -0.000731558189727366, -0.003315192647278309], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.006151433102786541, -0.0012005510507151484, -0.006932728923857212, -0.0015051951631903648, -0.0301289651542902, -0.008590529672801495, -0.0001573438785271719, -0.0005285535007715225, -0.010525783523917198], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "\n"], "logprobs": [-0.11115287989377975, -1.0013530300057027e-05, -1.0251946150674485e-05, 0.0, -0.0009283285471610725, -0.004077098798006773, -6.079655122448457e-06, -1.9073304429184645e-05, -2.0265558760002023e-06, -9.536738616588991e-07, -2.9802276912960224e-06, -0.7109858393669128], "finish_reason": "stop"}], "metrics": {"energy": 836.7734626636503, "energy_per_token": 4.204891772179147, "time": 21.870773, "time_per_token": 0.10990338190954774}}
{"outputs": [{"text": " re.sub(ALPHANUMERIC, ' ', text1).lower().strip()", "tokens": [" re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", "1", ")", ".", "lower", "()", ".", "strip", "()", "\n"], "logprobs": [-2.6163783073425293, -0.0010297955013811588, -0.0018675759201869369, -0.052256952971220016, -0.24418433010578156, -5.602820692729438e-06, -2.3245540432981215e-05, -2.264974000354414e-06, -7.152555099310121e-07, -4.768370445162873e-07, -0.0007977878558449447, -0.23578804731369019, -0.0004267973708920181, -0.00020930961181875318, -0.01950863189995289, -0.0001102625101339072, -0.3189741373062134, -0.03759397938847542, -0.09127550572156906, -9.619726915843785e-05, -2.853215456008911, -0.11786123365163803, -0.003983539994806051, -0.038973744958639145], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00023815179883968085, -2.145764938177308e-06, 0.0, 0.0, 0.0, -8.4638240878121e-06, -1.6689286894688848e-06, -7.152555099310121e-07, -2.3007127310847864e-05, -0.00019751029321923852, -8.225102646974847e-05, -0.000454799213912338, -8.046303264563903e-05, -5.793403761344962e-05, -3.1470757676288486e-05, -6.198863957251888e-06, -7.033323527139146e-06, -0.0005645350320264697], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5221681594848633, -0.01918334700167179, -0.048187077045440674, -0.0001560327800689265, -0.003137667663395405, -0.006820847745984793, -0.04477584362030029, -0.011831114068627357], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00011765264935093, -4.9828242481453344e-05, -3.4927710657939315e-05, -0.00010907054820563644, -1.0609570381348021e-05, -1.3589766240329482e-05, -2.90866428258596e-05, -0.0008518642862327397], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.0035727499052882195, -0.001279965159483254, -0.0007770617958158255, -0.0004418112221173942, -0.22994278371334076, -0.02657896839082241, -0.0002315968304174021, -5.566918844124302e-05, -1.7046782886609435e-05, -0.00016318420239258558, -0.00013815402053296566, -0.00840708240866661], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.01843860186636448, -0.015879129990935326, -0.000871278636623174, -0.00023326536756940186, -0.00028046013903804123, -0.030384795740246773, -0.01890065334737301, -0.00020632999076042324, -0.00012110930401831865, -0.00012051333033014089, -1.2636104656849056e-05, -1.8358061424805783e-05, -8.940656698541716e-06, -0.0005890780012123287, -1.0490362910786644e-05, -3.4570634852570947e-06, -0.00012885693286079913, -0.0003066784702241421, -0.00269906735047698], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec1[x] for x in list(vec1.keys())])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "1", "[", "x", "]", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.7838913798332214, -0.006369053851813078, -0.002684562699869275, -8.40390202938579e-05, -0.005349013488739729, -0.0009533389820717275, -0.0009975224966183305, -2.620429039001465, -0.003161196829751134, -0.0015756584471091628, -0.00012230125139467418, -2.7417760065873154e-05, -1.07287787614041e-05, -0.0002699726028367877, -0.00012957210128661245, -1.764281842042692e-05, -0.4614715278148651, -0.00018571082910057157, -0.0010805251076817513, -4.8874615458771586e-05, -0.05594370886683464, -8.344646857949556e-07, -4.2437604861333966e-05, -5.960446742392378e-06, -0.00043811736395582557, -0.0062719183042645454], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00014911970356479287, -7.045020902296528e-05, -2.753696753643453e-05, -0.0002864189154934138, -2.3841830625315197e-06, -0.004714800976216793, -0.00012337400403339416, -0.002128598978742957, -3.123234637314454e-05, -1.0490362910786644e-05, -1.4543427823809907e-05, -2.7418097943154862e-06, -5.125868119648658e-05, -0.0003108495147898793, -3.1470757676288486e-05, -4.6491513785440475e-06, -5.960462772236497e-07, -1.1444026313256472e-05, -0.0001573438785271719], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.005055027082562447, -5.8412379075889476e-06, -1.0967194612021558e-05, -0.00011359999916749075, -0.00015317220822907984, -7.033100700937212e-05, -0.0026051413733512163, -0.0006310140597634017, -8.95221673999913e-05, -3.135155202471651e-05, -0.00016282663273159415, -1.168244216387393e-05, -1.4781842764932662e-05, -2.539125671319198e-05, -2.9801878554280847e-05, -0.0021742768585681915], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.10803019255399704, -0.19031119346618652, -0.0009862087899819016, -0.0005594118847511709, -0.047622889280319214, -0.05896227806806564], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.0058005573228001595, -0.01423596404492855, -0.042623236775398254, -0.001969899283722043, -0.003326242323964834], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.09761705249547958, -0.00017450717859901488, -0.00021240839851088822, -1.1920928244535389e-07, 0.0, -0.0005650115781463683, -9.274052717955783e-05, -0.0008847374701872468, -0.0035349756944924593], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005599053576588631, -0.001150541938841343, -0.008137760683894157, -0.0018706695409491658, -0.02857487089931965, -0.007629659026861191, -0.00015066919149830937, -0.0005311747081577778, -0.011063187383115292], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio"], "logprobs": [-0.10252004116773605, -8.34461570775602e-06, -1.07287787614041e-05, 0.0, -0.0009116546134464443, -0.004912449978291988, -7.867782187531702e-06, -1.4305012882687151e-05, -3.3378546504536644e-06, -9.536738616588991e-07, -3.576272320060525e-06], "finish_reason": "stop"}], "metrics": {"energy": 846.1996753139492, "energy_per_token": 4.453682501652365, "time": 21.863224, "time_per_token": 0.1150696}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.1654869168996811, -5.364403477869928e-06, -2.264974000354414e-06, 0.0, 0.0, 0.0, -5.4596363042946905e-05, -5.960446742392378e-06, -0.04861639812588692, -0.2052888125181198, -0.00018654513405635953, -0.035473357886075974, -8.380061626667157e-05, -0.1251305341720581, -0.01984514854848385, -0.048111870884895325, -5.793403761344962e-05, -0.08125464618206024], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00029094755882397294, -1.7881377516459906e-06, 0.0, 0.0, 0.0, -8.34461570775602e-06, -1.9073468138230965e-06, -1.5497195136049413e-06, -2.9801878554280847e-05, -0.00023576818057335913, -4.136476854910143e-05, -0.0004553949984256178, -8.439661905867979e-05, -5.709961988031864e-05, -2.3603161025675945e-05, -5.125986263010418e-06, -7.271740287251305e-06, -0.0005398723296821117], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.4535219073295593, -0.018035465851426125, -0.07140576094388962, -0.00011884459672728553, -0.0029170839115977287, -0.012975427322089672, -0.04398387670516968, -0.010788919404149055], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.0001003691868390888, -4.8397800128441304e-05, -4.1483970562694594e-05, -0.00011407678539399058, -9.179073458653875e-06, -5.364403477869928e-06, -3.0040289857424796e-05, -0.0006485265912488103], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.005302531644701958, -0.000856628583278507, -0.0007034449372440577, -0.0006982034537941217, -1.5650135278701782, -8.165503095369786e-05, -0.00034505134681239724, -0.022879663854837418, -0.00019667598826345056, -5.2689116273541003e-05, -1.2040065485052764e-05, -9.893881360767409e-05, -8.463501580990851e-05, -2.861018856492592e-06, -3.71926071238704e-05, -0.007643737364560366], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.03202174976468086, -0.011826872825622559, -0.00208934280090034, -0.0002867764269467443, -0.0002317160106031224, -0.03646613284945488, -0.01929069496691227, -0.0002325502864550799, -0.00011324241495458409, -0.00015221867943182588, -1.3112935448589269e-05, -2.098061486321967e-05, -1.1444026313256472e-05, -0.0005868143052794039, -1.3470558769768104e-05, -3.4570634852570947e-06, -0.00017486473370809108, -0.0005372511222958565, -0.003001115983352065], "finish_reason": "stop"}, {"text": " sum([vec1[x] ** 2 for x in list(vec1.keys())])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.846781313419342, -0.009433693252503872, -0.0039648981764912605, -0.00013195598148740828, -0.02819283865392208, -0.0011687598889693618, -0.0013846105430275202, -0.9047790169715881, -0.002646517474204302, -4.9470632802695036e-05, -0.00042989550274796784, -0.00010740180005086586, -4.768360213347478e-06, -0.6146312952041626, -0.00014351768186315894, -0.0010875507723540068, -9.60780744208023e-05, -0.009411491453647614, -6.6756979322235566e-06, -7.784063927829266e-05, -3.099436753473128e-06, -0.0005443998379632831, -0.0049908580258488655], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00010978573118336499, -4.386805812828243e-05, -3.2543604902457446e-05, -0.000300600629998371, -2.50339189733495e-06, -0.0027655235026031733, -0.0001072826053132303, -0.0018548441585153341, -2.932505594799295e-05, -1.0847986231965479e-05, -1.2874520507466514e-05, -2.861018856492592e-06, -5.245071224635467e-05, -0.00033241944038309157, -3.540453326422721e-05, -6.318072337307967e-06, -9.536738616588991e-07, -6.794906312279636e-06, -0.00013243274588603526], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.005635090172290802, -6.9141146923357155e-06, -1.2755313036905136e-05, -0.00010275312524754554, -0.00018749863374978304, -7.450303382938728e-05, -0.00316690094769001, -0.0009956170106306672, -0.00011896379146492109, -1.3470558769768104e-05, -0.00020430385484360158, -2.0265373677830212e-05, -1.9192511899746023e-05, -3.2305197237292305e-05, -2.8132995794294402e-05, -0.002469230443239212], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.12066755443811417, -0.21682700514793396, -0.0009652484441176057, -0.0005507144378498197, -0.0499655120074749, -0.05598056688904762], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.004768784623593092, -0.013650757260620594, -0.044365398585796356, -0.0021836739033460617, -0.004101199563592672], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.03459452837705612, -0.00021360022947192192, -0.00027998341829515994, -1.1920928244535389e-07, 0.0, -0.0006388768670149148, -7.438383181579411e-05, -0.0006516240537166595, -0.003918233327567577], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005128561519086361, -0.0012579393805935979, -0.00665732566267252, -0.0015447123441845179, -0.0324205607175827, -0.007909052073955536, -0.00016616393986623734, -0.0005297449533827603, -0.00998761784285307], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)<|endoftext|># Copyright 2022 Huawei Technologies Co., Ltd", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")<", "|", "end", "of", "text", "|>", "#", " Copyright", " ", "2", "0", "2", "2", " H", "uawei", " Technologies", " Co", ".", ",", " Ltd", "\n"], "logprobs": [-2.3455779552459717, -0.0097969900816679, -3.3378546504536644e-06, -2.861018856492592e-06, -1.9073468138230965e-06, 0.0, -0.0014648432843387127, -0.0057570599019527435, -6.437280717364047e-06, -1.0847986231965479e-05, -5.245195097813848e-06, -1.1920928244535389e-07, -8.344646857949556e-07, -0.9700203537940979, -2.3841830625315197e-06, -4.6491513785440475e-06, -3.933898824470816e-06, -2.3245540432981215e-05, -0.1096576601266861, -1.085938811302185, -2.4865026473999023, -0.4783177375793457, -0.07828111201524734, -0.00015472168161068112, -0.41346487402915955, -1.1633050441741943, -2.2106266021728516, -0.0813843235373497, -6.09140915912576e-05, -5.94836674281396e-05, -1.8954096958623268e-05, -1.537788011773955e-05, -3.099436753473128e-06, -0.007577722892165184], "finish_reason": "stop"}], "metrics": {"energy": 846.2495398664471, "energy_per_token": 4.068507403204072, "time": 22.493656, "time_per_token": 0.10814257692307692}}
{"outputs": [{"text": " ALPHANUMERIC.sub(' ', text1).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "1", ")", ".", "lower", "()", "\n"], "logprobs": [-0.19041161239147186, -3.576272320060525e-06, -2.50339189733495e-06, 0.0, 0.0, 0.0, -5.507317473529838e-05, -5.960446742392378e-06, -0.06666865944862366, -0.2633315622806549, -0.00020954797219019383, -0.030215714126825333, -6.949660019017756e-05, -0.144032821059227, -0.02089616470038891, -0.06307335197925568, -5.864924969500862e-05, -0.09706223756074905], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.0002469711471349001, -2.3841830625315197e-06, 0.0, 0.0, 0.0, -1.0371154530730564e-05, -2.0265558760002023e-06, -8.344646857949556e-07, -2.1576648578047752e-05, -0.00019000156316906214, -7.73638384998776e-05, -0.00041797960875555873, -8.225102646974847e-05, -7.581423415103927e-05, -3.957670196541585e-05, -5.602820692729438e-06, -6.318072337307967e-06, -0.0005526207387447357], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.4929797351360321, -0.01583031937479973, -0.04888014495372772, -0.00011932138295378536, -0.003766111796721816, -0.009170553646981716, -0.04709090664982796, -0.011367788538336754], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00014494798961095512, -4.3748852476710454e-05, -4.708655978902243e-05, -0.000105375460407231, -1.1920858014491387e-05, -1.3470558769768104e-05, -2.7179348762729205e-05, -0.0006761648692190647], "finish_reason": "stop"}, {"text": " set(vec1.keys()) & set(vec2.keys())", "tokens": [" set", "(", "vec", "1", ".", "keys", "())", " &", " set", "(", "vec", "2", ".", "keys", "())", "\n"], "logprobs": [-0.004639812279492617, -0.000959531927946955, -0.0006893880781717598, -0.0005416594794951379, -1.3748244047164917, -7.83174327807501e-05, -0.00037531962152570486, -0.010581223294138908, -0.00021646064124070108, -5.2689116273541003e-05, -1.0371154530730564e-05, -8.809178689261898e-05, -6.568216485902667e-05, -2.861018856492592e-06, -3.325883881188929e-05, -0.008995483629405499], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.018502850085496902, -0.013345909304916859, -0.00315941427834332, -0.00022921319759916514, -0.00043025295599363744, -0.037119124084711075, -0.01701061986386776, -0.00015889335190877318, -0.00011979816190432757, -0.00010549465514486656, -9.775113539944869e-06, -1.6331539882230572e-05, -9.298280929215252e-06, -0.00046075694262981415, -7.867782187531702e-06, -2.861018856492592e-06, -0.0001627074379939586, -0.0002874914789572358, -0.0023844402749091387], "finish_reason": "stop"}, {"text": " np.sqrt(sum([vec1[x] ** 2 for x in list(vec1.keys())]))", "tokens": [" np", ".", "sqrt", "(", "sum", "([", "vec", "1", "[", "x", "]", " **", " ", "2", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", "))", "\n"], "logprobs": [-0.8547859191894531, -4.529942543740617e-06, -0.37072688341140747, -0.00020644917094614357, -0.01669858768582344, -0.02341606095433235, -0.06573088467121124, -5.07818695041351e-05, -0.004634116776287556, -0.004012629389762878, -0.019636286422610283, -1.0157232284545898, -0.0012962757609784603, -2.8490614567999728e-05, -0.0002996472467202693, -0.00019059749320149422, -1.8596476365928538e-05, -0.6702898740768433, -0.00010251473577227443, -0.001029319129884243, -6.508615479106084e-05, -0.022666655480861664, -0.00021431533969007432, -7.497983460780233e-05, -4.172316494077677e-06, -0.0006448334897868335, -0.0026337956078350544], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00011574551899684593, -5.936446541454643e-05, -2.3603161025675945e-05, -0.00026341783814132214, -2.0265558760002023e-06, -0.00231284461915493, -7.188061863416806e-05, -0.001597201102413237, -2.4676019165781327e-05, -1.1205610462639015e-05, -1.0371154530730564e-05, -3.099436753473128e-06, -5.590759246842936e-05, -0.000316927267704159, -3.2305197237292305e-05, -3.6954811548639555e-06, -9.536738616588991e-07, -6.9141146923357155e-06, -0.00012313561455812305], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.005624895915389061, -5.722029527532868e-06, -9.65590606938349e-06, -0.00011622230522334576, -0.0002320735511602834, -8.701899787411094e-05, -0.00433386629447341, -0.0005958688561804593, -9.715084888739511e-05, -3.111314072157256e-05, -0.00014983485743869096, -1.4424220353248529e-05, -2.4318398573086597e-05, -2.109982233378105e-05, -3.135155202471651e-05, -0.002286202972754836], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.13375650346279144, -0.19028447568416595, -0.0007375142886303365, -0.0004363300104159862, -0.04539962857961655, -0.041178490966558456], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.0052507114596664906, -0.012616933323442936, -0.041218530386686325, -0.001963593764230609, -0.003747109789401293], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.05581136420369148, -0.0001958416833076626, -0.00020287363440729678, -1.1920928244535389e-07, 0.0, -0.0005750194541178644, -5.149708886165172e-05, -0.0007656264933757484, -0.004006930161267519], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.00619669072329998, -0.001128394273109734, -0.007457276340574026, -0.0018388995667919517, -0.028800291940569878, -0.007905622944235802, -0.00013457823661156, -0.0005502378917299211, -0.0125021543353796], "finish_reason": "stop"}, {"text": " cosine_similarity, levenshtein_ratio<|endoftext|>import json", "tokens": [" cosine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", "<", "|", "end", "of", "text", "|>", "import", " json", "\n"], "logprobs": [-0.10886114835739136, -6.556489552167477e-06, -1.0013530300057027e-05, 0.0, -0.0010783816687762737, -0.004112003371119499, -6.794906312279636e-06, -1.0013530300057027e-05, -2.264974000354414e-06, -8.344646857949556e-07, -2.7418097943154862e-06, -0.9995661377906799, -2.622600959512056e-06, -6.318072337307967e-06, -5.245195097813848e-06, -5.435795901576057e-05, -0.09520843625068665, -1.017822027206421, -3.896878719329834, -0.030658135190606117], "finish_reason": "stop"}], "metrics": {"energy": 839.0800032291412, "energy_per_token": 4.237777794086572, "time": 21.875816, "time_per_token": 0.11048391919191919}}
{"outputs": [{"text": " re.sub(r'[^a-zA-Z0-9 ]', '', text1.lower())", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", " ]", "'", ",", " ''", ",", " text", "1", ".", "lower", "())", "\n"], "logprobs": [-2.6163783073425293, -0.0010297955013811588, -0.0018675759201869369, -0.052256952971220016, -1.6218775510787964, -0.7569047212600708, -0.16279566287994385, -1.6915006637573242, -0.11229518800973892, -3.349725011503324e-05, -6.365573790390044e-05, -0.07719075679779053, -1.168244216387393e-05, -0.0003856868715956807, -0.10866205394268036, -0.00012194366718176752, -5.722029527532868e-06, -0.563823938369751, -0.27866122126579285, -0.00022575691400561482, -0.23565591871738434, -0.0008972433279268444, -0.03460558503866196, -0.00010752100206445903, -0.5856767892837524, -0.02164503186941147, -0.009578697383403778, -0.12277944386005402], "finish_reason": "stop"}, {"text": " ALPHANUMERIC.sub(' ', text2).lower()", "tokens": [" AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", "2", ")", ".", "lower", "()", "\n"], "logprobs": [-0.00023815179883968085, -2.145764938177308e-06, 0.0, 0.0, 0.0, -8.4638240878121e-06, -1.6689286894688848e-06, -7.152555099310121e-07, -2.3007127310847864e-05, -0.00019751029321923852, -8.225102646974847e-05, -0.000454799213912338, -8.046303264563903e-05, -5.793403761344962e-05, -3.1470757676288486e-05, -6.198863957251888e-06, -7.033323527139146e-06, -0.0005645350320264697], "finish_reason": "stop"}, {"text": " Counter(text1.split())", "tokens": [" Counter", "(", "text", "1", ".", "split", "())", "\n"], "logprobs": [-0.5221681594848633, -0.01918334700167179, -0.048187077045440674, -0.0001560327800689265, -0.003137667663395405, -0.006820847745984793, -0.04477584362030029, -0.011831114068627357], "finish_reason": "stop"}, {"text": " Counter(text2.split())", "tokens": [" Counter", "(", "text", "2", ".", "split", "())", "\n"], "logprobs": [-0.00011765264935093, -4.9828242481453344e-05, -3.4927710657939315e-05, -0.00010907054820563644, -1.0609570381348021e-05, -1.3589766240329482e-05, -2.90866428258596e-05, -0.0008518642862327397], "finish_reason": "stop"}, {"text": " set(vec1) & set(vec2)", "tokens": [" set", "(", "vec", "1", ")", " &", " set", "(", "vec", "2", ")", "\n"], "logprobs": [-0.0035727499052882195, -0.001279965159483254, -0.0007770617958158255, -0.0004418112221173942, -0.22994278371334076, -0.02657896839082241, -0.0002315968304174021, -5.566918844124302e-05, -1.7046782886609435e-05, -0.00016318420239258558, -0.00013815402053296566, -0.00840708240866661], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec2[x] for x in intersection])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "2", "[", "x", "]", " for", " x", " in", " intersection", "])", "\n"], "logprobs": [-0.01843860186636448, -0.015879129990935326, -0.000871278636623174, -0.00023326536756940186, -0.00028046013903804123, -0.030384795740246773, -0.01890065334737301, -0.00020632999076042324, -0.00012110930401831865, -0.00012051333033014089, -1.2636104656849056e-05, -1.8358061424805783e-05, -8.940656698541716e-06, -0.0005890780012123287, -1.0490362910786644e-05, -3.4570634852570947e-06, -0.00012885693286079913, -0.0003066784702241421, -0.00269906735047698], "finish_reason": "stop"}, {"text": " sum([vec1[x] * vec1[x] for x in list(vec1.keys())])", "tokens": [" sum", "([", "vec", "1", "[", "x", "]", " *", " vec", "1", "[", "x", "]", " for", " x", " in", " list", "(", "vec", "1", ".", "keys", "()", ")]", ")", "\n"], "logprobs": [-0.7838913798332214, -0.006369053851813078, -0.002684562699869275, -8.40390202938579e-05, -0.005349013488739729, -0.0009533389820717275, -0.0009975224966183305, -2.620429039001465, -0.003161196829751134, -0.0015756584471091628, -0.00012230125139467418, -2.7417760065873154e-05, -1.07287787614041e-05, -0.0002699726028367877, -0.00012957210128661245, -1.764281842042692e-05, -0.4614715278148651, -0.00018571082910057157, -0.0010805251076817513, -4.8874615458771586e-05, -0.05594370886683464, -8.344646857949556e-07, -4.2437604861333966e-05, -5.960446742392378e-06, -0.00043811736395582557, -0.0062719183042645454], "finish_reason": "stop"}, {"text": " sum([vec2[x]**2 for x in vec2.keys()])", "tokens": [" sum", "([", "vec", "2", "[", "x", "]", "**", "2", " for", " x", " in", " vec", "2", ".", "keys", "()", "])", "\n"], "logprobs": [-0.00014911970356479287, -7.045020902296528e-05, -2.753696753643453e-05, -0.0002864189154934138, -2.3841830625315197e-06, -0.004714800976216793, -0.00012337400403339416, -0.002128598978742957, -3.123234637314454e-05, -1.0490362910786644e-05, -1.4543427823809907e-05, -2.7418097943154862e-06, -5.125868119648658e-05, -0.0003108495147898793, -3.1470757676288486e-05, -4.6491513785440475e-06, -5.960462772236497e-07, -1.1444026313256472e-05, -0.0001573438785271719], "finish_reason": "stop"}, {"text": " np.sqrt(sum1) * np.sqrt(sum2)", "tokens": [" np", ".", "sqrt", "(", "sum", "1", ")", " *", " np", ".", "sqrt", "(", "sum", "2", ")", "\n"], "logprobs": [-0.005055027082562447, -5.8412379075889476e-06, -1.0967194612021558e-05, -0.00011359999916749075, -0.00015317220822907984, -7.033100700937212e-05, -0.0026051413733512163, -0.0006310140597634017, -8.95221673999913e-05, -3.135155202471651e-05, -0.00016282663273159415, -1.168244216387393e-05, -1.4781842764932662e-05, -2.539125671319198e-05, -2.9801878554280847e-05, -0.0021742768585681915], "finish_reason": "stop"}, {"text": " denominator == 0:", "tokens": [" denominator", " ==", " ", "0", ":", "\n"], "logprobs": [-0.10803019255399704, -0.19031119346618652, -0.0009862087899819016, -0.0005594118847511709, -0.047622889280319214, -0.05896227806806564], "finish_reason": "stop"}, {"text": " 0.0", "tokens": [" ", "0", ".", "0", "\n"], "logprobs": [-0.0058005573228001595, -0.01423596404492855, -0.042623236775398254, -0.001969899283722043, -0.003326242323964834], "finish_reason": "stop"}, {"text": " float(numerator) / denominator", "tokens": [" float", "(", "n", "umer", "ator", ")", " /", " denominator", "\n"], "logprobs": [-0.09761705249547958, -0.00017450717859901488, -0.00021240839851088822, -1.1920928244535389e-07, 0.0, -0.0005650115781463683, -9.274052717955783e-05, -0.0008847374701872468, -0.0035349756944924593], "finish_reason": "stop"}, {"text": " ratio(text1, text2)", "tokens": [" ratio", "(", "text", "1", ",", " text", "2", ")", "\n"], "logprobs": [-0.005599053576588631, -0.001150541938841343, -0.008137760683894157, -0.0018706695409491658, -0.02857487089931965, -0.007629659026861191, -0.00015066919149830937, -0.0005311747081577778, -0.011063187383115292], "finish_reason": "stop"}, {"text": " (cosine_similarity, levenshtein_ratio)", "tokens": [" (", "cos", "ine", "_", "similar", "ity", ",", " le", "vens", "ht", "ein", "_", "ratio", ")", "\n"], "logprobs": [-2.500326156616211, -0.011438503861427307, -4.529942543740617e-06, -2.861018856492592e-06, -1.9073468138230965e-06, 0.0, -0.0013690156629309058, -0.0056412541307508945, -8.34461570775602e-06, -1.1444026313256472e-05, -3.576272320060525e-06, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.46701905131340027, -0.34904780983924866], "finish_reason": "stop"}], "metrics": {"energy": 864.5004370813374, "energy_per_token": 4.366163823643118, "time": 22.497446, "time_per_token": 0.11362346464646465}}
