{"outputs": [{"text": "dirs = []\n    for root, _, files in os.walk(directory):\n        for name in files:\n            match = re.match(pattern, name)\n            if match:\n                prefix, suffix = match.group(1, 2)\n                if not os.path.exists(os.path.join(root, prefix)):\n                    os.mkdir(os.path.join(root, prefix))\n                zip_path = os.path.join(root, name)\n                with zipfile.ZipFile(zip_path) as zf:\n                    zf.extractall(prefix)\n                dirs.append(prefix)\n\n    return dirs", "tokens": ["dir", "s", " =", " []", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " name", " in", " files", ":", "\n", "            ", "match", " =", " re", ".", "match", "(", "pattern", ",", " name", ")", "\n", "            ", "if", " match", ":", "\n", "                ", "prefix", ",", " suffix", " =", " match", ".", "group", "(", "1", ",", " ", "2", ")", "\n", "                ", "if", " not", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "root", ",", " prefix", "))", ":", "\n", "                ", "    ", "os", ".", "mk", "dir", "(", "os", ".", "path", ".", "join", "(", "root", ",", " prefix", "))", "\n", "                ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " name", ")", "\n", "                ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ")", " as", " z", "f", ":", "\n", "                ", "    ", "z", "f", ".", "extract", "all", "(", "prefix", ")", "\n", "                ", "dir", "s", ".", "append", "(", "prefix", ")", "\n", "\n", "    ", "return", " d", "irs"], "logprobs": [-3.115609884262085, -0.3297586739063263, -0.15066485106945038, -0.08673971146345139, -0.013583256863057613, -0.15231923758983612, -0.46503639221191406, -2.0505542755126953, -0.005617308896034956, -1.1994986534118652, -0.07581966370344162, -0.12127596139907837, -0.0009901388548314571, -0.01154656894505024, -1.2159273865108844e-05, -0.00044848397374153137, -0.0030277385376393795, -0.006083779968321323, -0.08387795090675354, -0.014350543729960918, -0.00413171062245965, -0.13338643312454224, -2.937288284301758, -0.002246358199045062, -0.01137533225119114, -0.00013433984713628888, -0.0018149822717532516, -0.001642546383664012, -0.9839922189712524, -0.01517970860004425, -0.0031657125800848007, -4.017272294731811e-05, -0.9913747906684875, -0.0004366874636616558, -0.00927484966814518, -0.0015287628630176187, -0.01600208505988121, -0.028480447828769684, -0.0014972201315686107, -0.011334551498293877, -0.013394488953053951, -0.047880079597234726, -0.2278420329093933, -0.0073112547397613525, -0.0009467886411584914, -0.605635404586792, -1.1123427152633667, -1.7259273529052734, -0.014338557608425617, -0.29307985305786133, -0.020646652206778526, -1.2785944938659668, -0.018396001309156418, -0.007824248634278774, -1.7684428691864014, -0.03329173102974892, -0.08529289066791534, -0.0005778788472525775, -0.03465694189071655, -0.01177067682147026, -1.1850614547729492, -1.819852352142334, -0.19080707430839539, -2.6940935640595853e-05, -0.0007955246837809682, -0.009420112706720829, -0.544297993183136, -0.002469706116244197, -1.508249044418335, -0.0004953111056238413, -0.0010632582707330585, -0.004204719327390194, -0.005722924135625362, -0.0006937957368791103, -0.07572782784700394, -0.0007008241955190897, -0.09335228055715561, -0.05049245432019234, -0.007513951975852251, -0.009198784828186035, -0.0005855038180015981, -0.0017581019783392549, -0.18125897645950317, -0.00015138434537220746, -0.4861494302749634, -1.2993727978027891e-05, -7.331102824537084e-05, -0.021371550858020782, -0.0002464944263920188, -1.7165990357170813e-05, -0.00010072677832795307, -0.0002212279650848359, -3.290122185717337e-05, -0.002676597097888589, -7.617183291586116e-05, -0.003235583659261465, -0.001690983772277832, -0.0035657414700835943, -0.01361630205065012, -2.07281231880188, -0.24925172328948975, -1.1669971942901611, -0.0019346822518855333, -0.006000124849379063, -1.7523612768854946e-05, -3.58813522325363e-05, -0.00022957073815632612, -0.0009043894242495298, -0.00010239553375868127, -0.007033470086753368, -7.497983460780233e-05, -0.036728620529174805, -0.000458254711702466, -0.002351972972974181, -0.01099657267332077, -0.48599863052368164, -0.027016734704375267, -2.13382354559144e-05, -8.940656698541716e-06, -0.0018128404626622796, -0.00034338299883529544, -5.757642793469131e-05, -8.427741704508662e-05, -0.0020957665983587503, -9.417090768693015e-05, -1.4305012882687151e-05, -1.8147335052490234, -9.786603914108127e-05, -1.211920142173767, -0.3515140116214752, -0.000535821367520839, -0.0012335318606346846, -0.00031609306461177766, -0.0009485750924795866, -0.06505856662988663, -0.0009134411229752004, -6.544376083184034e-05, -0.000205018965061754, -0.014019225724041462, -0.0014366315444931388, -0.8478503823280334, -0.15015605092048645, -0.007636639289557934, -0.01681886427104473, -0.44628533720970154, -0.0032952316105365753, -0.0037370147183537483, -0.001347944256849587, -0.0061479974538087845, -0.42677041888237, -0.00530419172719121, -0.004430478438735008, -2.628612518310547, -0.05448863282799721, -0.034092094749212265, -0.10052402317523956, -6.794906312279636e-06], "finish_reason": "stop"}], "metrics": {"energy": 191.81813640975957, "energy_per_token": 1.2217715694889144, "time": 6.5089073, "time_per_token": 0.041458008280254775}}
{"outputs": [{"text": "directories = []\n    pattern = re.compile(pattern)\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            match = pattern.match(file)\n            if match is not None:\n                file_path = os.path.join(root, file)\n                directory_name = match.group(1)\n                directory_path = os.path.join(directory, directory_name)\n                if not os.path.exists(directory_path):\n                    os.makedirs(directory_path)\n                with zipfile.ZipFile(file_path, 'r') as zip_ref:\n                    zip_ref.extractall(directory_path)\n                directories.append(directory_name)\n    return directories", "tokens": ["direct", "ories", " =", " []", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "match", " =", " pattern", ".", "match", "(", "file", ")", "\n", "            ", "if", " match", " is", " not", " None", ":", "\n", "                ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "                ", "directory", "_", "name", " =", " match", ".", "group", "(", "1", ")", "\n", "                ", "directory", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " directory", "_", "name", ")", "\n", "                ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "_", "path", "):", "\n", "                ", "    ", "os", ".", "m", "aked", "irs", "(", "directory", "_", "path", ")", "\n", "                ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "file", "_", "path", ",", " '", "r", "')", " as", " zip", "_", "ref", ":", "\n", "                ", "    ", "zip", "_", "ref", ".", "extract", "all", "(", "directory", "_", "path", ")", "\n", "                ", "direct", "ories", ".", "append", "(", "directory", "_", "name", ")", "\n", "    ", "return", " directories", "\n", "\n", "if"], "logprobs": [-2.8351705074310303, -0.009954215958714485, -0.08623208105564117, -0.05770481377840042, -0.00962840486317873, -0.2533680498600006, -2.591484308242798, -0.07894251495599747, -0.09950654953718185, -0.00020108585886191577, -0.00434051314368844, -0.0030443770810961723, -0.020522046834230423, -0.014636406674981117, -0.006099775433540344, -0.3832152783870697, -0.3149312436580658, -2.2242519855499268, -0.0031134248711168766, -0.6138021349906921, -0.0024437822867184877, -0.0035143063869327307, -0.046157579869031906, -0.0011338717304170132, -0.004737462382763624, -1.07287787614041e-05, -0.00031883400515653193, -0.0022386270575225353, -0.003961217124015093, -0.04113387316465378, -0.00961990375071764, -0.0047654625959694386, -0.1660080850124359, -0.46549826860427856, -0.08586423099040985, -0.02134762890636921, -0.00017271934484597296, -0.0022176930215209723, -0.0015091231325641274, -0.5006582736968994, -0.008195461705327034, -0.04338717460632324, -3.707340147229843e-05, -1.594588279724121, -0.0001705739414319396, -0.01771578937768936, -0.003245327156037092, -0.0025247621815651655, -0.005097132176160812, -0.012215091846883297, -0.05676039308309555, -2.614126205444336, -0.2753608822822571, -9.30981186684221e-05, -0.07353723049163818, -0.008847913704812527, -0.0015850611962378025, -3.809720516204834, -0.4175744354724884, -1.1566798686981201, -0.01617722399532795, -0.014865108765661716, -0.0002454218047205359, -4.5536911784438416e-05, -0.014091516844928265, -0.0027267676778137684, -5.8887653722194955e-05, -0.01211475394666195, -0.00013433984713628888, -0.03649739548563957, -0.00011669908417388797, -0.002961775055155158, -0.010681833140552044, -1.378364086151123, -1.0358712673187256, -0.5280818343162537, -0.04564087837934494, -0.295088529586792, -0.04572071135044098, -0.022345542907714844, -0.0007595514762215316, -0.002158099552616477, -0.0003300360403954983, -0.02866152487695217, -0.017491837963461876, -1.1516227722167969, -0.30692610144615173, -0.05204807594418526, -0.00043096792069263756, -0.017599252983927727, -0.0004060635983478278, -4.4225667807040736e-05, -0.0037416466511785984, -0.0016369527438655496, -0.0038054208271205425, -0.7832369208335876, -0.004133372567594051, -0.01354103721678257, -9.16677454370074e-05, -0.0002499506517779082, -0.0026075192727148533, -0.001321991323493421, -0.05673257261514664, -0.8863346576690674, -0.06751786172389984, -0.002572681289166212, -0.00028046013903804123, -5.054346183896996e-05, -0.00020585325546562672, -0.06726288795471191, -4.1960789531003684e-05, -0.0012506766943261027, -0.0011120808776468039, -0.0005859803641214967, -0.0034258030354976654, -0.0034341190475970507, -0.00023326536756940186, -0.0007372760446742177, -0.04448695480823517, -7.986990567587782e-06, -0.1967710554599762, -2.706014311115723e-05, -0.0007578838267363608, -2.610649426060263e-05, -0.00038699767901562154, -0.0002012050390476361, -0.00020430385484360158, -0.01189142931252718, -0.0024021598510444164, -0.030533848330378532, -0.23863215744495392, -0.01201817486435175, -1.2636104656849056e-05, -1.0013530300057027e-05, -0.0028626436833292246, -0.00017093151109293103, -7.033100700937212e-05, -0.0001454247540095821, -0.002744243713095784, -0.0023076115176081657, -2.4437606043647975e-05, -0.16618920862674713, -0.04337678849697113, -0.0005029367166571319, -0.006122879683971405, -9.202533692587167e-05, -0.12312215566635132, -0.04993274062871933, -1.1014249324798584, -0.0007800396997481585, -0.00045599075383506715, -0.00041797960875555873, -0.0022230453323572874, -0.009461680427193642, -0.0006033745594322681, -0.0005333193112164736, -5.447716102935374e-05, -0.00021419614495243877, -0.0039575365372002125, -0.00029774048016406596, -0.027842076495289803, -0.030448051169514656, -0.008720175363123417, -0.006787695921957493, -0.004442346747964621, -0.024378176778554916, -0.04202686622738838, -1.3589766240329482e-05, -0.0017989181214943528, -0.0005297449533827603, -0.0033648558892309666, -0.012331904843449593, -0.0011634016409516335, -2.0228211879730225, -0.005554242990911007, -0.0016734894597902894, -0.27031025290489197, -0.019905801862478256, -0.11985597759485245, -0.940907895565033, -0.019461285322904587, -0.7636070251464844], "finish_reason": "stop"}], "metrics": {"energy": 194.96784024143224, "energy_per_token": 1.071251869458419, "time": 7.5731997, "time_per_token": 0.04161098736263736}}
{"outputs": [{"text": "files = os.listdir(directory)\n    dirs = []\n    for f in files:\n        if re.search(pattern, f) and not re.search(pattern, directory):\n            zip_name = os.path.join(directory, f)\n            zip_file = zipfile.ZipFile(zip_name, 'r')\n            zip_file.extractall(directory)\n            zip_file.close()\n            dirs.append(directory)\n            os.remove(zip_name)\n    return dirs", "tokens": ["files", " =", " os", ".", "list", "dir", "(", "directory", ")", "\n", "    ", "dir", "s", " =", " []", "\n", "    ", "for", " f", " in", " files", ":", "\n", "        ", "if", " re", ".", "search", "(", "pattern", ",", " f", ")", " and", " not", " re", ".", "search", "(", "pattern", ",", " directory", "):", "\n", "            ", "zip", "_", "name", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " f", ")", "\n", "            ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "name", ",", " '", "r", "')", "\n", "            ", "zip", "_", "file", ".", "extract", "all", "(", "directory", ")", "\n", "            ", "zip", "_", "file", ".", "close", "()", "\n", "            ", "dir", "s", ".", "append", "(", "directory", ")", "\n", "            ", "os", ".", "remove", "(", "zip", "_", "name", ")", "\n", "    ", "return", " d", "irs", "\n", "\n", "print"], "logprobs": [-2.634315252304077, -0.10647134482860565, -1.829929232597351, -8.427741704508662e-05, -0.03310030326247215, -1.680836794548668e-05, -0.001546973828226328, -0.002199494047090411, -0.0004524161049630493, -0.007048384752124548, -0.11100727319717407, -2.094022512435913, -0.05659661442041397, -0.12488804012537003, -0.14743632078170776, -0.012608340010046959, -0.3872908055782318, -0.17339932918548584, -1.192641019821167, -0.10360345989465714, -0.012638592161238194, -0.0006841464783065021, -0.002733425237238407, -0.004068313166499138, -1.0700570344924927, -0.2203303575515747, -2.8371408916427754e-05, -0.9326292276382446, -0.001191025716252625, -0.007465559057891369, -0.0027191590052098036, -0.020178280770778656, -1.76236093044281, -0.7629117369651794, -1.348584532737732, -2.8505043983459473, -0.0014362744987010956, -0.06224668398499489, -0.22366774082183838, -1.3509948253631592, -0.01339237205684185, -2.530799388885498, -0.36707058548927307, -0.026136014610528946, -0.003915739711374044, -2.1646599769592285, -0.1989339292049408, -1.5393311977386475, -0.22031649947166443, -0.2707820236682892, -0.0012382942950353026, -0.0004047528200317174, -0.021373067051172256, -0.018523095175623894, -0.0006191005813889205, -0.004642304033041, -0.00045980370487086475, -0.0094007458537817, -0.0008154166280291975, -0.004617385566234589, -0.011263475753366947, -1.6607211828231812, -0.1325991153717041, -0.8433215618133545, -0.004953849129378796, -0.022629478946328163, -0.00011503035057103261, -1.9550132492440753e-05, -0.01071261614561081, -0.0001971527235582471, -8.11782301752828e-05, -0.00012408917245920748, -0.004659746307879686, -0.00022230061586014926, -0.00021789084712509066, -1.5221893787384033, -0.09656934440135956, -0.01012333668768406, -0.007101177237927914, -0.005850571673363447, -0.01373883057385683, -0.504163384437561, -0.00395266804844141, -0.10043571889400482, -0.0025006234645843506, -0.0010278901318088174, -0.0037144492380321026, -0.292614221572876, -0.42285826802253723, -0.10836173593997955, -0.015381756238639355, -0.013019906356930733, -0.632191002368927, -0.0012493670219555497, -0.04526485502719879, -0.0010552796302363276, -0.003827509470283985, -0.0024862352292984724, -0.004309177864342928, -0.028253797441720963, -0.3505111634731293, -0.06356971710920334, -0.011076156049966812, -0.0036482936702668667, -0.013484231196343899, -1.2805293798446655, -0.2537376284599304, -0.012333317659795284, -2.19891357421875, -0.7199274301528931, -8.4638240878121e-06, -0.08906137943267822, -0.0005178302526473999, -0.018882403150200844, -0.00016342257731594145, -0.004343124572187662, -0.0002094287920044735, -0.019356759265065193, -0.33317697048187256, -0.04828397557139397, -0.3071787655353546, -3.576272320060525e-06, -0.9566861391067505, -0.024254385381937027, -2.9808120727539062], "finish_reason": "stop"}], "metrics": {"energy": 135.3313989868164, "energy_per_token": 1.0826511918945312, "time": 5.0607333, "time_per_token": 0.0404858664}}
{"outputs": [{"text": "dirs_to_extract = []\n\n    for filename in os.listdir(directory):\n        if re.match(pattern, filename):\n            prefix, suffix = filename.rsplit('-', 1)\n            dirname = f'{directory}/{prefix}'\n            if not os.path.exists(dirname):\n                os.makedirs(dirname)\n            with zipfile.ZipFile(f'{directory}/{filename}', 'r') as zf:\n                zf.extractall(dirname)\n            dirs_to_extract.append(dirname)\n\n    return dirs_to_extract, dirs_to_extract", "tokens": ["dir", "s", "_", "to", "_", "extract", " =", " []", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " re", ".", "match", "(", "pattern", ",", " filename", "):", "\n", "            ", "prefix", ",", " suffix", " =", " filename", ".", "r", "split", "('", "-'", ",", " ", "1", ")", "\n", "            ", "dirname", " =", " f", "'{", "directory", "}/{", "prefix", "}'", "\n", "            ", "if", " not", " os", ".", "path", ".", "exists", "(", "dirname", "):", "\n", "                ", "os", ".", "m", "aked", "irs", "(", "dirname", ")", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "f", "'{", "directory", "}/{", "filename", "}'", ",", " '", "r", "')", " as", " z", "f", ":", "\n", "                ", "z", "f", ".", "extract", "all", "(", "dirname", ")", "\n", "            ", "dir", "s", "_", "to", "_", "extract", ".", "append", "(", "dirname", ")", "\n", "\n", "    ", "return", " d", "irs", "_", "to", "_", "extract", ",", " d", "irs", "_", "to", "_", "extract", "\n", "\n", "#"], "logprobs": [-3.115609884262085, -0.3297586739063263, -2.109036922454834, -0.5894321203231812, -0.0008524598088115454, -0.18533354997634888, -0.08740319311618805, -0.06998313963413239, -0.011677835136651993, -1.5365188121795654, -0.00034850722295232117, -0.5763731598854065, -0.7325085997581482, -0.00603697681799531, -0.04264676570892334, -1.4066597032069694e-05, -0.0008987916517071426, -3.933898824470816e-06, -0.0011985269375145435, -0.0011980506824329495, -0.00039939055568538606, -0.006183895748108625, -0.00797066930681467, -0.9643105268478394, -0.16197843849658966, -1.9788545614574105e-05, -0.43915003538131714, -0.000376034586224705, -0.0046678148210048676, -0.0014830554137006402, -0.005612685810774565, -0.13942331075668335, -0.017402220517396927, -0.014222919009625912, -1.0507805347442627, -0.4672372341156006, -1.4346052408218384, -0.014813428744673729, -0.5869938731193542, -0.006815756671130657, -0.3950948417186737, -0.02920582890510559, -0.4006890058517456, -0.06136731430888176, -2.0503786799963564e-05, -0.090094655752182, -0.005238971672952175, -0.013726366683840752, -0.02829447202384472, -0.03512778878211975, -2.009182929992676, -0.0022507591638714075, -2.4420647621154785, -0.3411542475223541, -0.09016916900873184, -0.04599865898489952, -0.04527055099606514, -0.11661134660243988, -0.01355726644396782, -0.1942811906337738, -1.091384768486023, -0.1261051446199417, -0.004897028673440218, -3.6954195820726454e-05, -8.964136941358447e-05, -0.005959954112768173, -0.3212922513484955, -0.00014232576359063387, -0.0011539950501173735, -0.008143317885696888, -0.011123784817755222, -0.0012203158112242818, -0.036267608404159546, -0.00015877417172305286, -0.3758954703807831, -3.5523738915799186e-05, -0.0016263603465631604, -3.635817120084539e-05, -0.0008754473528824747, -0.012605044059455395, -0.003638435387983918, -0.2305227816104889, -0.45261621475219727, -0.015739262104034424, -1.8954096958623268e-05, -1.2397689715726301e-05, -0.0028594343457370996, -0.00031096869497559965, -0.00014602071314584464, -0.0031753377988934517, -0.1254439353942871, -0.030685419216752052, -0.020567942410707474, -0.00163588160648942, -0.000824349990580231, -0.0881604328751564, -0.000179036331246607, -0.03199150040745735, -0.000985136954113841, -0.006095272954553366, -0.00022146634000819176, -1.515691876411438, -0.4082462787628174, -0.0010744519531726837, -0.0009521479951217771, -0.0014180614380165935, -0.05115334317088127, -0.00032658010604791343, -4.911301948595792e-05, -0.00018034738604910672, -0.00827786885201931, -0.001341991825029254, -0.5203697681427002, -0.012382889166474342, -0.007289361208677292, -0.12209609150886536, -0.02138800360262394, -0.00024279984063468874, -0.00029774048016406596, -2.2053474822314456e-05, -2.169585604860913e-05, -2.634490556374658e-05, -0.0017670269589871168, -0.0011836434714496136, -0.0022548031993210316, -0.022038670256733894, -0.008638868108391762, -0.004510348662734032, -0.23537060618400574, -0.004452078603208065, -0.030688541010022163, -0.10265602916479111, -6.6756979322235566e-06, -0.00040058218291960657, -2.8132995794294402e-05, -6.186770770000294e-05, -3.683499380713329e-05, -2.9787862300872803, -1.3280909061431885, -0.0001389883691444993, -0.0010826685465872288, -0.001032177242450416, -0.0004558716027531773, -0.0038729910738766193, -0.7467955946922302, -0.01205986924469471, -2.584153175354004], "finish_reason": "stop"}], "metrics": {"energy": 179.89378102874755, "energy_per_token": 1.2237672178826364, "time": 6.1087875, "time_per_token": 0.04155637755102041}}
{"outputs": [{"text": "directories = []\n    for filename in os.listdir(directory):\n        if re.search(pattern, filename):\n            prefix, ext = os.path.splitext(filename)\n            dirname = os.path.join(directory, prefix)\n            directories.append(dirname)\n            with zipfile.ZipFile(os.path.join(directory, filename)) as zip_file:\n                zip_file.extractall(dirname)\n    return directories", "tokens": ["direct", "ories", " =", " []", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " re", ".", "search", "(", "pattern", ",", " filename", "):", "\n", "            ", "prefix", ",", " ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")", "\n", "            ", "dirname", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " prefix", ")", "\n", "            ", "direct", "ories", ".", "append", "(", "dirname", ")", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", "))", " as", " zip", "_", "file", ":", "\n", "                ", "zip", "_", "file", ".", "extract", "all", "(", "dirname", ")", "\n", "    ", "return", " directories"], "logprobs": [-2.8351705074310303, -0.009954215958714485, -0.08623208105564117, -0.05770481377840042, -0.00962840486317873, -0.2533680498600006, -0.43679454922676086, -0.620180606842041, -0.006331740878522396, -0.05308637395501137, -2.169585604860913e-05, -0.0013396107824519277, -9.775113539944869e-06, -0.0018010600470006466, -0.0012471048394218087, -0.000444551813416183, -0.007203558459877968, -0.004403300117701292, -0.9735813140869141, -0.16040171682834625, -2.1815061700181104e-05, -1.052107810974121, -0.0008949803304858506, -0.005335377529263496, -0.0016882466152310371, -0.006746253930032253, -0.21224761009216309, -0.015449018217623234, -0.00270715169608593, -0.9864908456802368, -0.33114635944366455, -3.072237014770508, -0.03837599605321884, -0.21349595487117767, -6.139089964563027e-05, -0.0002681849291548133, -0.03191956877708435, -0.0010852882405743003, -0.00015043080202303827, -3.576278118089249e-07, -0.0003518439189065248, -0.03583260998129845, -0.012374999932944775, -0.03093787282705307, -0.0071152630262076855, -1.9121880531311035, -0.021417642012238503, -0.5993651151657104, -0.0003513672563713044, -0.0008041008841246367, -0.007966293953359127, -0.08014023303985596, -0.0013100859941914678, -0.01084552425891161, -0.000668659748043865, -0.057257313281297684, -0.0640292689204216, -0.008738373406231403, -0.01815335638821125, -2.3810067176818848, -1.966933996300213e-05, -0.00633920356631279, -0.005668517667800188, -0.002419284777715802, -0.018129240721464157, -0.001802606973797083, -0.003318044124171138, -0.025527171790599823, -0.9486535787582397, -0.023522956296801567, -3.731181277544238e-05, -1.7762025890988298e-05, -0.0017928492743521929, -0.00036376056959852576, -0.00015579440514557064, -0.0019829864613711834, -0.27819958329200745, -0.0004702892620116472, -0.00034028460504487157, -0.0002181292074965313, -0.00018809456378221512, -0.00012599628826137632, -0.005593837704509497, -8.248942322097719e-05, -0.0071138422936201096, -0.7461553812026978, -0.0002951186615973711, -0.7313957214355469, -0.10820180922746658, -0.20208705961704254, -0.0007204797584563494, -0.0007742029847577214, -0.001347587094642222, -0.016395488753914833, -0.00048137042904272676, -0.0011548285838216543, -9.321732068201527e-05, -0.00023707917716819793, -0.0001935771433636546, -0.006705875974148512, -0.4799584150314331, -0.004197477828711271, -0.004691070877015591, -0.37752875685691833, -0.021767279133200645, -0.06804800033569336], "finish_reason": "stop"}], "metrics": {"energy": 103.00016842746733, "energy_per_token": 0.9716997021459182, "time": 4.415291, "time_per_token": 0.04165368867924528}}
{"outputs": [{"text": "files = [f for f in os.listdir(directory) if re.match(pattern, f)]\n    dirs = []\n\n    for f in files:\n        name, ext = os.path.splitext(f)\n        prefix, suffix = os.path.split(name)\n\n        # Check if the extracted directory already exists\n        if not os.path.isdir(f\"{directory}/{prefix}\"):\n            os.makedirs(f\"{directory}/{prefix}\")\n\n        # Extract the file\n        with zipfile.ZipFile(f\"{directory}/{f}\", 'r') as zf:\n            zf.extractall(f\"{directory}/{prefix}\")\n            dirs.append(prefix)\n\n    return (dirs, files)", "tokens": ["files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "directory", ")", " if", " re", ".", "match", "(", "pattern", ",", " f", ")]", "\n", "    ", "dir", "s", " =", " []", "\n", "\n", "    ", "for", " f", " in", " files", ":", "\n", "        ", "name", ",", " ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "f", ")", "\n", "        ", "prefix", ",", " suffix", " =", " os", ".", "path", ".", "split", "(", "name", ")", "\n", "\n", "        ", "#", " Check", " if", " the", " extracted", " directory", " already", " exists", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "f", "\"", "{", "directory", "}/{", "prefix", "}\"", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "f", "\"", "{", "directory", "}/{", "prefix", "}\"", ")", "\n", "\n", "        ", "#", " Ext", "ract", " the", " file", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "f", "\"", "{", "directory", "}/{", "f", "}\"", ",", " '", "r", "')", " as", " z", "f", ":", "\n", "            ", "z", "f", ".", "extract", "all", "(", "f", "\"", "{", "directory", "}/{", "prefix", "}\"", ")", "\n", "            ", "dir", "s", ".", "append", "(", "prefix", ")", "\n", "\n", "    ", "return", " (", "dir", "s", ",", " files", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-2.634315252304077, -0.10647134482860565, -1.6816843748092651, -0.6135219931602478, -0.06058894097805023, -0.0012341272085905075, -0.0016719423001632094, -0.04335715249180794, -1.537788011773955e-05, -0.004807579796761274, -5.722029527532868e-06, -0.00303082843311131, -0.002367433626204729, -0.005048384889960289, -0.04010942205786705, -0.13883808255195618, -2.5152843591058627e-05, -0.45131686329841614, -0.0010484919184818864, -0.013953043147921562, -0.0021628576796501875, -0.03859749808907509, -0.07806139439344406, -0.008301987312734127, -0.22301051020622253, -1.8262230157852173, -0.03655187413096428, -0.06882993876934052, -0.31109774112701416, -0.006908222567290068, -1.1165132522583008, -0.0002512616047170013, -0.13671787083148956, -0.5654569864273071, -0.025983287021517754, -0.008061017841100693, -0.0003375437227077782, -0.0021123019978404045, -0.006372015457600355, -3.4211151599884033, -0.39315223693847656, -0.3699958622455597, -0.011342802084982395, -0.05179082229733467, -0.00020716428116429597, -0.0002675890573300421, -0.08634252846240997, -0.00011073929636040702, -0.0002648479712661356, -3.576278118089249e-07, -0.00010609064338495955, -0.021836213767528534, -0.0015899409772828221, -0.008353176526725292, -0.03099300153553486, -1.950165033340454, -0.4073464572429657, -1.1033416986465454, -0.010084039531648159, -1.5812052488327026, -0.000346362212439999, -0.00014602071314584464, -0.009213312529027462, -1.0224452018737793, -0.008569491095840931, -0.022152358666062355, -0.002129907486960292, -0.008134331554174423, -1.6991251707077026, -0.0022677676752209663, -3.122912645339966, -2.0223565101623535, -0.17702403664588928, -0.2741260230541229, -2.1562352180480957, -0.4536505937576294, -0.23441864550113678, -0.017764626070857048, -0.2820843458175659, -0.000871040450874716, -0.3871331512928009, -1.138782262802124, -0.08810530602931976, -2.9205850296420977e-05, -0.0001512651506345719, -0.0008397151832468808, -1.1250813007354736, -0.0012692499440163374, -0.008177371695637703, -1.78581964969635, -0.8117411732673645, -0.040346112102270126, -0.2713482677936554, -0.021881699562072754, -0.21233688294887543, -0.0825745165348053, -0.02087036333978176, -0.0033814890775829554, -0.008959448896348476, -1.3080370426177979, -3.123234637314454e-05, -0.9115452766418457, -1.6093124941107817e-05, -0.002629634225741029, -0.0001137191939051263, -0.02225974015891552, -0.0016870565013960004, -0.0004483648226596415, -0.0022082962095737457, -0.0011131525970995426, -0.0010719512356445193, -0.0023382960353046656, -0.05037786066532135, -0.023985689505934715, -0.7635260224342346, -0.18807829916477203, -1.2929966449737549, -0.36666014790534973, -0.015020600520074368, -0.10091529041528702, -0.8614300489425659, -0.7506387233734131, -0.0007612191257067025, -0.5075318217277527, -0.01733989268541336, -7.343022298300639e-05, -1.5139465176616795e-05, -0.003415467217564583, -0.00042989550274796784, -9.762764238985255e-05, -0.0008401916129514575, -0.08230237662792206, -0.5864114761352539, -0.0026163177099078894, -0.001994169782847166, -0.0021564343478530645, -0.022601041942834854, -0.0019258777610957623, -0.25215455889701843, -0.24982833862304688, -0.0012694880133494735, -0.010136554017663002, -0.00026663561584427953, -1.2959675788879395, -0.5457594394683838, -0.0007936188485473394, -0.0010550415609031916, -0.0022075825836509466, -0.032326728105545044, -0.0006762839620932937, -9.059495641849935e-05, -0.0001245659514097497, -0.007546843495219946, -0.004582142923027277, -0.15210025012493134, -0.005484770983457565, -0.0008929556352086365, -0.0008754473528824747, -0.004042312037199736, -0.0036841630935668945, -0.014036153443157673, -0.006837423890829086, -0.02590848319232464, -1.5856690406799316, -0.11236006766557693, -0.002607043832540512, -0.0025844527408480644, -0.0013935388997197151, -0.00449741305783391, -1.4382600784301758, -0.0029081692919135094, -0.010472581721842289, -0.1125108152627945, -0.06938963383436203, -0.05356094241142273, -2.7577285766601562, -0.8510419130325317, -0.0007920703501440585, -0.23423607647418976, -0.621605634689331, -1.1263957023620605, -3.576278118089249e-07, -7.152555099310121e-07, -2.0503786799963564e-05, -0.0002177716523874551, -0.298000693321228], "finish_reason": "stop"}], "metrics": {"energy": 183.41483122062672, "energy_per_token": 0.986101243121649, "time": 7.58048, "time_per_token": 0.0407552688172043}}
{"outputs": [{"text": "match = re.search(pattern, directory)\n    prefix = directory if match is None else match.group(1)\n    if not os.path.isdir(prefix):\n        os.makedirs(prefix)\n    for fname in os.listdir(directory):\n        if re.search(pattern, fname):\n            print(f\"Unzip file: {fname} to directory: {prefix}\")\n            with zipfile.ZipFile(fname, 'r') as zf:\n                zf.extractall(prefix)\n    return prefix, [fname for fname in os.listdir(prefix) if re.search(pattern, fname)]", "tokens": ["match", " =", " re", ".", "search", "(", "pattern", ",", " directory", ")", "\n", "    ", "prefix", " =", " directory", " if", " match", " is", " None", " else", " match", ".", "group", "(", "1", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "prefix", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "prefix", ")", "\n", "    ", "for", " f", "name", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " re", ".", "search", "(", "pattern", ",", " f", "name", "):", "\n", "            ", "print", "(", "f", "\"", "Un", "zip", " file", ":", " {", "f", "name", "}", " to", " directory", ":", " {", "prefix", "}\"", ")", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "f", "name", ",", " '", "r", "')", " as", " z", "f", ":", "\n", "                ", "z", "f", ".", "extract", "all", "(", "prefix", ")", "\n", "    ", "return", " prefix", ",", " [", "f", "name", " for", " f", "name", " in", " os", ".", "list", "dir", "(", "prefix", ")", " if", " re", ".", "search", "(", "pattern", ",", " f", "name", ")]", "\n", "\n", "if"], "logprobs": [-4.843164443969727, -1.2910616397857666, -0.1923411339521408, -9.440929716220126e-05, -0.9453247785568237, -0.0028370865620672703, -0.013713549822568893, -0.007304035592824221, -0.9454949498176575, -0.06715477257966995, -0.009061876684427261, -0.1153109222650528, -2.020967483520508, -0.10835232585668564, -2.318281888961792, -0.6000831723213196, -0.4842549264431, -0.04517620801925659, -0.002418452175334096, -0.009009660221636295, -0.04560614004731178, -0.21604500710964203, -0.03209667652845383, -0.008788949809968472, -0.011630586348474026, -0.0005029367166571319, -0.01621241308748722, -0.3272848427295685, -2.9852991104125977, -0.3760383129119873, -0.09191510826349258, -1.168244216387393e-05, -0.0014402027009055018, -0.0038143275305628777, -0.9565210342407227, -0.009476794861257076, -0.00047267231275327504, -0.10586114972829819, -0.010555037297308445, -0.024998648092150688, -0.002939548809081316, -0.1728081852197647, -0.0006367324967868626, -0.4087083637714386, -8.606540359323844e-05, -0.0022253054194152355, -0.0001879753835964948, -0.0068692718632519245, -0.08279291540384293, -0.005227350164204836, -0.39552178978919983, -1.9263992309570312, -2.8648431301116943, -0.9735469222068787, -0.012022532522678375, -0.12019303441047668, -0.0010682597057893872, -0.0012190061388537288, -4.887569048150908e-06, -0.0029714026022702456, -0.021607467904686928, -0.0010806442005559802, -0.0020499660167843103, -0.001675869687460363, -0.6734225749969482, -1.0233144760131836, -0.00020108585886191577, -0.7647659182548523, -0.047864966094493866, -0.3927595019340515, -0.0035556447692215443, -0.02388117089867592, -0.00011193125828867778, -0.17309598624706268, -0.004783496260643005, -0.0014917447697371244, -3.632375717163086, -0.2520710825920105, -0.31452277302742004, -1.0832774639129639, -1.9141473770141602, -2.1841046810150146, -2.0509471893310547, -0.8570128679275513, -0.05985061079263687, -0.23363764584064484, -0.00048828122089616954, -1.6093244552612305, -1.0059242248535156, -2.262260913848877, -0.114911749958992, -0.014908329583704472, -0.09783035516738892, -0.06531812250614166, -0.005344626493752003, -0.005873800255358219, -0.008767443709075451, -0.7359871864318848, -0.037209175527095795, -3.683499380713329e-05, -3.71926071238704e-05, -0.002190335188060999, -0.00024148885859176517, -0.00017152745567727834, -0.0034097647294402122, -1.0641958713531494, -0.3596540689468384, -0.42236876487731934, -0.1696704924106598, -0.0010917185572907329, -0.015239235013723373, -0.0003780603874474764, -1.3523691892623901, -0.7218032479286194, -0.004019634798169136, -0.00392927648499608, -0.002823059679940343, -0.053037989884614944, -0.0010584949050098658, -0.00018535325943958014, -0.00020597243565134704, -0.008987922221422195, -0.0011288706446066499, -0.04285933077335358, -0.08414549380540848, -0.08327706903219223, -0.4673558473587036, -0.1129235103726387, -0.7622891068458557, -0.30915015935897827, -1.4992046356201172, -1.3693089485168457, -0.5404435992240906, -0.19448073208332062, -0.0012756790965795517, -0.00011753345461329445, -0.0017525089206174016, -0.012445643544197083, -0.0009455977124162018, -0.002430819906294346, -5.483612312673358e-06, -0.002592181321233511, -0.3697277307510376, -0.05821014568209648, -0.06763407588005066, -1.3418673276901245, -0.0003620922507252544, -0.018980544060468674, -0.018764130771160126, -0.09027362614870071, -0.00242475513368845, -0.009115626104176044, -0.00025042734341695905, -0.026851143687963486, -0.4755193293094635, -0.02323228493332863, -0.8018927574157715], "finish_reason": "stop"}], "metrics": {"energy": 146.32316018486014, "energy_per_token": 0.9319946508589818, "time": 6.5313315, "time_per_token": 0.041600837579617835}}
{"outputs": [{"text": "list_of_extracted_dirs = []\n    list_of_zipfiles = []\n    for filename in os.listdir(directory):\n        if re.match(pattern, filename) and filename.endswith(\".zip\"):\n            zip_ref = zipfile.ZipFile(os.path.join(directory, filename))\n            zip_ref.extractall(directory)\n            list_of_extracted_dirs.append(os.path.splitext(filename)[0])\n            list_of_zipfiles.append(filename)\n    return list_of_extracted_dirs, list_of_zipfiles", "tokens": ["list", "_", "of", "_", "ext", "racted", "_", "dir", "s", " =", " []", "\n", "    ", "list", "_", "of", "_", "zip", "files", " =", " []", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " re", ".", "match", "(", "pattern", ",", " filename", ")", " and", " filename", ".", "end", "sw", "ith", "(", "\"", ".", "zip", "\"", "):", "\n", "            ", "zip", "_", "ref", " =", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", "))", "\n", "            ", "zip", "_", "ref", ".", "extract", "all", "(", "directory", ")", "\n", "            ", "list", "_", "of", "_", "ext", "racted", "_", "dir", "s", ".", "append", "(", "os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "0", "])", "\n", "            ", "list", "_", "of", "_", "zip", "files", ".", "append", "(", "filename", ")", "\n", "    ", "return", " list", "_", "of", "_", "ext", "racted", "_", "dir", "s", ",", " list", "_", "of", "_", "zip", "files"], "logprobs": [-4.767749786376953, -0.13728219270706177, -1.0313708782196045, -0.0015774437924847007, -3.3309755325317383, -0.024893539026379585, -0.10355391353368759, -0.4258115589618683, -0.21758249402046204, -0.025859344750642776, -0.07470791786909103, -0.017742257565259933, -0.38933804631233215, -3.4031307697296143, -0.0049429358914494514, -0.0366540402173996, -0.0006786665762774646, -0.779556393623352, -1.2426120042800903, -0.06988821178674698, -0.8238160610198975, -0.007337999064475298, -0.29681095480918884, -0.75074702501297, -1.4636856317520142, -0.012016525492072105, -0.05962410941720009, -3.111314072157256e-05, -0.001989767886698246, -1.2516897186287679e-05, -0.0036459180992096663, -0.003121505957096815, -0.0006211258587427437, -0.010020900517702103, -0.005765948910266161, -0.4774059057235718, -0.19841107726097107, -4.1960789531003684e-05, -0.5417898297309875, -0.001525192055851221, -0.008495028130710125, -0.00465808529406786, -0.02216774970293045, -2.1224677562713623, -0.6975478529930115, -0.41803231835365295, -0.05447903648018837, -0.03463897854089737, -0.00011073929636040702, 0.0, -1.3743394613265991, -0.01228445116430521, -0.024913422763347626, -0.0008339979685842991, -7.724463648628443e-05, -0.01015803124755621, -0.014572144486010075, -0.004448043182492256, -1.4138752222061157, -0.7835877537727356, -3.117497205734253, -0.002285965019837022, -0.0035394898150116205, -1.4662635294371285e-05, -1.847726889536716e-05, -0.005788587033748627, -0.0001134808044298552, -0.00014649749209638685, -0.004716580733656883, -0.683210551738739, -0.0014386551920324564, -0.0002324311062693596, -0.006766738370060921, -0.0007801587926223874, -0.00010513706365600228, -0.0016975292237475514, -0.0002706876548472792, -0.015467447228729725, -0.16025294363498688, -0.004469405394047499, -0.008886550553143024, -0.3333369493484497, -0.0074125491082668304, -0.012147140689194202, -0.0008431693422608078, -0.00023409964342135936, -0.0003352795320097357, -0.23032595217227936, -0.35226160287857056, -0.08971787244081497, -0.020100587978959084, -0.02040817216038704, -0.48246926069259644, -0.00015567521040793508, -0.0009598892065696418, -7.581423415103927e-05, -0.8962666392326355, -8.4638240878121e-06, -7.712543447269127e-05, -0.00019536493346095085, -0.0007225048611871898, -0.006188160739839077, -0.0015349523164331913, -0.008384031243622303, -1.154316782951355, -0.006925506982952356, -0.0012032896047458053, -0.0021203910000622272, -1.4766786098480225, -3.886147169396281e-05, -7.748573807475623e-06, -0.0020560333505272865, -0.11947648972272873, -0.09572897106409073, -0.004686680622398853, -0.05956514552235603, -0.006433016154915094, -0.3837338387966156, -0.34982824325561523, -0.000507464399561286, -0.00029237763374112546, -6.389413465512916e-05, -0.003258159849792719, -0.0004929280839860439, -0.004949341528117657, -0.01372495573014021, -0.006679114419966936, -0.18996816873550415, -0.01246365625411272, -0.0034716594964265823, -0.6496690511703491, -0.16707037389278412, -0.17103639245033264, -0.002735208487138152, -4.0649541915627196e-05, -3.40932747349143e-05, -0.035937149077653885, -3.576272320060525e-06, -2.3841830625315197e-06, -7.986990567587782e-06, -1.9073468138230965e-06, -0.06444849073886871, -0.01944994367659092, -0.0005178302526473999, -1.7046782886609435e-05, -1.5139465176616795e-05, -0.00023874769976828247, -3.361645576660521e-05], "finish_reason": "stop"}], "metrics": {"energy": 155.34627723884591, "energy_per_token": 1.0496370083705806, "time": 6.112563, "time_per_token": 0.04130110135135135}}
{"outputs": [{"text": "result = []\n\n    if not os.path.isdir(directory):\n        raise NotADirectoryError(\"Directory does not exist: {}\".format(directory))\n\n    regex = re.compile(pattern)\n\n    for filename in os.listdir(directory):\n        match = regex.search(filename)\n\n        if match and match.group(1):\n            directory_name = match.group(1)\n            filepath = os.path.join(directory, filename)\n\n            if not os.path.exists(directory_name):\n                os.makedirs(directory_name)\n\n            with zipfile.ZipFile(filepath, 'r') as zip_file:\n                zip_file.extractall(directory_name)\n\n            result.append(directory_name)\n\n    return result", "tokens": ["result", " =", " []", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " Not", "AD", "irect", "ory", "Error", "(", "\"", "Directory", " does", " not", " exist", ":", " {", "}\"", ".", "format", "(", "directory", "))", "\n", "\n", "    ", "regex", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "match", " =", " regex", ".", "search", "(", "filename", ")", "\n", "\n", "        ", "if", " match", " and", " match", ".", "group", "(", "1", "):", "\n", "            ", "directory", "_", "name", " =", " match", ".", "group", "(", "1", ")", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", "\n", "\n", "            ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "_", "name", "):", "\n", "                ", "os", ".", "m", "aked", "irs", "(", "directory", "_", "name", ")", "\n", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "file", "path", ",", " '", "r", "')", " as", " zip", "_", "file", ":", "\n", "                ", "zip", "_", "file", ".", "extract", "all", "(", "directory", "_", "name", ")", "\n", "\n", "            ", "result", ".", "append", "(", "directory", "_", "name", ")", "\n", "\n", "    ", "return", " result", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.9423882961273193, -0.18501348793506622, -0.06379778683185577, -0.005618850234895945, -1.4485443830490112, -0.0006191005813889205, -2.3529438972473145, -0.3279282748699188, -0.1845037192106247, -8.761498611420393e-05, -0.0021943794563412666, -0.01788325048983097, -0.4226790964603424, -0.0027287888806313276, -0.0004520586517173797, -0.0020350953564047813, -0.025192445144057274, -0.013987957499921322, -0.0036912893410772085, -1.0956039428710938, -2.9782145023345947, -0.009553901851177216, -0.0002079985715681687, -9.417090768693015e-05, -0.002651867689564824, -0.345929354429245, -1.7122586965560913, -1.7141610383987427, -1.1631580591201782, -0.0014759134501218796, -0.03900252282619476, -2.1542694568634033, -0.81775963306427, -0.18316255509853363, -0.004201870411634445, -0.0027585094794631004, -0.00025555206229910254, -0.014137121848762035, -0.0014921018155291677, -0.0006582954083569348, -0.0491182878613472, -0.0005720409681089222, -2.910825729370117, -0.11112013459205627, -0.007174916565418243, -5.2927523938706145e-05, -0.0011881680693477392, -0.0015548295341432095, -0.007969723083078861, -0.030565643683075905, -0.005289250984787941, -0.38785603642463684, -0.00019810620869975537, -0.15615054965019226, -0.6066800951957703, -0.002899967832490802, -0.03738856315612793, -0.0010438475292176008, -0.0005918181850574911, -6.437280717364047e-06, -0.00040451448876410723, -0.0007636015070602298, -0.00031096869497559965, -0.0031704658176749945, -0.030027400702238083, -0.3060365915298462, -0.007841754704713821, -0.01975352130830288, -2.3841574147809297e-05, -0.5274577736854553, -9.536288416711614e-05, -0.004587126895785332, -0.002362200990319252, -0.002378731733188033, -1.5262339115142822, -0.0003875934926327318, -0.04149246960878372, -0.14307458698749542, -2.5523483753204346, -1.7169967889785767, -0.1463177353143692, -0.0907745286822319, -0.03000090830028057, -0.02852470614016056, -1.0811924934387207, -0.027070341631770134, -0.009615653194487095, -1.344901442527771, -0.7080361843109131, -0.247196763753891, -0.009717186912894249, -0.28650569915771484, -0.0012980615720152855, -0.0008172033121809363, -0.0007446615491062403, -0.0032991524785757065, -0.0006017066189087927, -0.021467696875333786, -0.33938127756118774, -2.2248942852020264, -1.6400892734527588, -0.004346091765910387, -0.017195073887705803, -4.8040190449682996e-05, -0.00014804698002990335, -0.0030782478861510754, -0.001785709522664547, -0.0001062098381225951, -0.0014843647368252277, -0.00041237910045310855, -0.007773860357701778, -0.00010680581908673048, -0.0012503195321187377, -0.6013770699501038, -0.0020920787937939167, -0.3039257824420929, -1.248659610748291, -0.04542366415262222, -0.0003303935518488288, -0.00014661667228210717, -0.00042489083716645837, -1.6222599744796753, -0.0010714748641476035, -0.1841030865907669, -0.029320674017071724, -0.00011085849109804258, -0.036638181656599045, -0.005078036803752184, -0.001597320195287466, -0.11073902994394302, -0.00019596086349338293, -0.5742325782775879, -7.486063259420916e-05, -0.0018418743275105953, -6.19869097135961e-05, -0.0017285895301029086, -0.0008627030183561146, -1.9073468138230965e-06, -0.03537164255976677, -0.0020793499425053596, -0.11304967850446701, -0.00702317152172327, -0.8041951060295105, -0.010056542232632637, -2.1576648578047752e-05, -1.1801649634435307e-05, -0.0033943201415240765, -0.00030179237364791334, -9.190614218823612e-05, -0.00014041867689229548, -0.011362013407051563, -0.00010239553375868127, -0.27218562364578247, -0.12089373916387558, -0.0006350646144710481, -0.008318656124174595, -0.0002454218047205359, -0.14850743114948273, -0.03556378558278084, -1.2401745319366455, -0.00039843725971877575, -0.0004812512779608369, -0.002615247620269656, -0.009760985150933266, -0.00029237763374112546, -0.0025439064484089613, -0.00016640232934150845, -0.00030250742565840483, -0.0017257335130125284, -0.0009151084814220667, -0.04343602806329727, -0.023988716304302216, -2.6702524337451905e-05, -0.012918472290039062, -0.009502654895186424, -0.31957149505615234, -0.0401136614382267, -0.11402730643749237, -0.0042410437017679214, -0.0009952597320079803, -0.015274222008883953, -0.048372115939855576, -0.0018461579456925392, -1.0013530300057027e-05, -0.0078101735562086105, -0.0033749546855688095, -0.061297688633203506, -0.021850792691111565, -0.01882987841963768, -0.13210943341255188, -0.8968752026557922, -9.536738616588991e-07, -8.344646857949556e-07, -1.0490362910786644e-05, -0.00028308198670856655, -0.15195240080356598], "finish_reason": "stop"}], "metrics": {"energy": 187.12928574275972, "energy_per_token": 0.9547412537895904, "time": 8.210353, "time_per_token": 0.041889556122448976}}
{"outputs": [{"text": "directories = []\n    pattern = re.compile(pattern)\n    for filename in os.listdir(directory):\n        if pattern.match(filename):\n            dirname = os.path.splitext(filename)[0].rsplit('-', 1)[0]\n            directories.append(dirname)\n            with zipfile.ZipFile(os.path.join(directory, filename)) as zf:\n                zf.extractall(os.path.join(directory, dirname))\n\n    return directories", "tokens": ["direct", "ories", " =", " []", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " pattern", ".", "match", "(", "filename", "):", "\n", "            ", "dirname", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "0", "]", ".", "r", "split", "('", "-'", ",", " ", "1", ")[", "0", "]", "\n", "            ", "direct", "ories", ".", "append", "(", "dirname", ")", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", "))", " as", " z", "f", ":", "\n", "                ", "z", "f", ".", "extract", "all", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " dir", "name", "))", "\n", "\n", "    ", "return", " directories", "\n", "\n", "if"], "logprobs": [-2.8351705074310303, -0.009954215958714485, -0.08623208105564117, -0.05770481377840042, -0.00962840486317873, -0.2533680498600006, -2.591484308242798, -0.07894251495599747, -0.09950654953718185, -0.00020108585886191577, -0.00434051314368844, -0.0030443770810961723, -0.020522046834230423, -0.014636406674981117, -0.006099775433540344, -0.3832152783870697, -0.3149312436580658, -0.6289359927177429, -0.006111979018896818, -0.052887845784425735, -1.2278481335670222e-05, -0.00110041128937155, -1.168244216387393e-05, -0.001686342409811914, -0.0009482178138568997, -0.0004472924047149718, -0.004225137177854776, -0.0032772899139672518, -1.6120860576629639, -0.4399639070034027, -0.000962151971179992, -0.9108453989028931, -0.0001333863037871197, -0.002313320292159915, -0.11914575845003128, -0.008277632296085358, -0.0021347845904529095, -2.453108549118042, -0.09007853269577026, -1.024924635887146, -0.0010683787986636162, -0.003224057611078024, -0.026859616860747337, -1.084862470626831, -0.0002361257211305201, -3.40932747349143e-05, -0.0007033258443698287, -0.1101345345377922, -0.06377542018890381, -0.0010930284624919295, -0.013342145830392838, -2.4342641830444336, -1.3124730587005615, -0.07163948565721512, -0.5104159712791443, -0.006613391451537609, -0.00010585224663373083, -0.055511996150016785, -0.019523946568369865, -0.05171656608581543, -0.015868453308939934, -0.0004689785710070282, -0.055828046053647995, -0.009829570539295673, -2.2387871742248535, -5.221230458118953e-05, -0.0032557835802435875, -0.004227511119097471, -0.004783733282238245, -0.22138361632823944, -0.0065340446308255196, -0.004391312599182129, -0.05520171299576759, -0.8770996928215027, -0.07389812171459198, -2.9801878554280847e-05, -2.3841574147809297e-05, -0.0018682897789403796, -0.0005448763840831816, -0.00019095504831057042, -0.0094221206381917, -0.579041063785553, -0.001177571015432477, -0.0002466136065777391, -0.002312725642696023, -0.0007049936102703214, -0.00010048838157672435, -0.002029860857874155, -0.00013743886665906757, -0.00559336319565773, -0.7049877643585205, -0.00026639728457666934, -0.8649882674217224, -0.5359975695610046, -0.001517931348644197, -0.0016945539973676205, -0.0013394916895776987, -0.032833050936460495, -0.0004027270770166069, -5.304672595229931e-05, -0.00016366096679121256, -0.0020410437136888504, -0.057561781257390976, -0.5772707462310791, -0.0023047570139169693, -0.0010993395699188113, -0.00011646069469861686, -0.00589465769007802, -0.0023545895237475634, -0.008301159366965294, -0.0017874945187941194, -0.02274916134774685, -0.0002195594133809209, -0.012815144844353199, -0.0031642864923924208, -1.604557752609253, -0.022925568744540215, -0.03282659128308296, -0.1260264366865158, -1.1498439311981201, -0.01885807141661644, -0.7910332083702087], "finish_reason": "stop"}], "metrics": {"energy": 126.9338378705978, "energy_per_token": 1.0404412940212935, "time": 5.0531983, "time_per_token": 0.04141965819672131}}
{"outputs": [{"text": "filenames = []\n    for filename in os.listdir(directory):\n        if re.search(pattern, filename):\n            prefix = re.split(pattern, filename)[0]\n            if os.path.isdir(os.path.join(directory, prefix)):\n                continue\n            zip_filepath = os.path.join(directory, filename)\n            zip_file = zipfile.ZipFile(zip_filepath)\n            zip_file.extractall(os.path.join(directory, prefix))\n            filenames.append(prefix)\n            zip_file.close()\n    return filenames", "tokens": ["fil", "en", "ames", " =", " []", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " re", ".", "search", "(", "pattern", ",", " filename", "):", "\n", "            ", "prefix", " =", " re", ".", "split", "(", "pattern", ",", " filename", ")[", "0", "]", "\n", "            ", "if", " os", ".", "path", ".", "is", "dir", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " prefix", "))", ":", "\n", "                ", "continue", "\n", "            ", "zip", "_", "file", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", "\n", "            ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", "path", ")", "\n", "            ", "zip", "_", "file", ".", "extract", "all", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " prefix", "))", "\n", "            ", "fil", "en", "ames", ".", "append", "(", "prefix", ")", "\n", "            ", "zip", "_", "file", ".", "close", "()", "\n", "    ", "return", " fil", "en", "ames", "\n", "\n", "def"], "logprobs": [-4.449865341186523, -0.01708902232348919, -0.00020358874462544918, -0.027623165398836136, -1.0423064231872559, -0.019393591210246086, -0.12518879771232605, -0.7194808125495911, -0.4996102452278137, -0.004097993951290846, -0.04467518627643585, -2.455681169521995e-05, -0.002381229307502508, -1.1205610462639015e-05, -0.0019814397674053907, -0.0015120989410206676, -0.0005295066512189806, -0.008184583857655525, -0.003954092971980572, -0.6497541666030884, -0.17000052332878113, -3.4927710657939315e-05, -0.967744767665863, -0.0011743560899049044, -0.006715348921716213, -0.002093387534841895, -0.008017145097255707, -0.23384958505630493, -0.012603395618498325, -0.004084459971636534, -1.9024888277053833, -1.173102617263794, -0.29741907119750977, -0.0004832768754567951, -0.15627963840961456, -0.12963692843914032, -0.21408940851688385, -0.004347634967416525, -0.004041837062686682, -0.46091529726982117, -0.010471873916685581, -0.001490435330197215, -0.04691632464528084, -0.01325227227061987, -1.6294560432434082, -1.6920758485794067, -0.0017832106677815318, -0.004664255306124687, -0.07334072887897491, -0.23954811692237854, -0.09168705344200134, -0.0012682974338531494, -2.046302080154419, -0.00033623288618400693, -0.0003532739356160164, -0.004644558299332857, -0.0014900782844051719, -0.00023767507809679955, -0.001754293916746974, -0.00014280252798926085, -0.040864527225494385, -0.0020038066431879997, -0.012844331562519073, -0.00605735694989562, -0.0013254437362775207, -1.0599348545074463, -0.038602314889431, -0.08906737715005875, -2.7683138847351074, -0.3490097224712372, -0.6394098997116089, -2.9186770915985107, -0.0027104804757982492, -0.0051087550818920135, -2.276871418871451e-05, -0.00010382589971413836, -0.0002320735511602834, -0.0006567466771230102, -6.806619057897478e-05, -0.0023807534016668797, -4.3987260141875595e-05, -0.009356813505291939, -0.000348268891684711, -0.0012656782055273652, -0.011297422461211681, -1.8835612535476685, -0.25053584575653076, -0.4592230021953583, -0.05954403057694435, -0.02093842439353466, -1.8358061424805783e-05, -1.4066597032069694e-05, -0.006034488324075937, -0.0002224197960458696, -8.177422569133341e-05, -0.00010299152199877426, -0.0060956282541155815, -0.0008968859910964966, -8.821448318485636e-06, -2.407998726994265e-05, -0.28732261061668396, -0.0029456105548888445, -0.013578787446022034, -0.17942430078983307, -0.0018774517811834812, -0.012460477650165558, -0.0010719512356445193, -0.0002460177056491375, -0.0011922164121642709, -0.0809987485408783, -1.8885176181793213, -0.0010780243901535869, -0.0025112065486609936, -5.94836674281396e-05, -0.06897103041410446, -0.001759529928676784, -0.005969671066850424, -0.00634358637034893, -0.020658329129219055, -0.014706303365528584, -0.017075780779123306, -0.015059235505759716, -0.4185808300971985, -4.792098479811102e-05, -1.311301275563892e-06, -0.007875936105847359, -0.0028259125538170338, -0.015113015659153461, -0.3093346059322357, -0.010251485742628574, -0.002400376135483384, -1.8346004486083984, -0.4012150168418884, -0.009773261845111847, -0.00022599527437705547, -0.003536995267495513, -0.002926355227828026, -0.0010302717564627528, -0.0017877324717119336, -0.48422378301620483, -0.0571938194334507, -0.7366456389427185, -6.318072337307967e-06, -1.9073468138230965e-06, -0.9124712347984314, -0.01832437328994274, -1.4324402809143066], "finish_reason": "stop"}], "metrics": {"energy": 181.20679757499684, "energy_per_token": 1.232699303231271, "time": 6.1043487, "time_per_token": 0.041526181632653064}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        return\n    result = []\n    for filename in os.listdir(directory):\n        match = re.search(pattern, filename)\n        if match:\n            dirname = match.group(1)\n            full_path = os.path.join(directory, filename)\n            with zipfile.ZipFile(full_path, 'r') as zip_ref:\n                zip_ref.extractall(os.path.join(directory, dirname))\n            result.append(dirname)\n    return result", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "return", "\n", "    ", "result", " =", " []", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "match", " =", " re", ".", "search", "(", "pattern", ",", " filename", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "dirname", " =", " match", ".", "group", "(", "1", ")", "\n", "            ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "full", "_", "path", ",", " '", "r", "')", " as", " zip", "_", "ref", ":", "\n", "                ", "zip", "_", "ref", ".", "extract", "all", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " dir", "name", "))", "\n", "            ", "result", ".", "append", "(", "dirname", ")", "\n", "    ", "return", " result", "\n", "\n", "if"], "logprobs": [-2.945014715194702, -0.16450545191764832, -0.22337135672569275, -0.00012790338951162994, -0.003135290928184986, -0.019581930711865425, -0.37173333764076233, -0.0034261594992130995, -0.00037949037505313754, -0.0015605426160618663, -0.014109382405877113, -0.015128514729440212, -0.002831143094226718, -1.5658785104751587, -2.5775604248046875, -1.2932705879211426, -2.8514020442962646, -0.1420583575963974, -0.0543333999812603, -0.0031648806761950254, -0.06208425015211105, -0.5044687986373901, -0.8714932203292847, -0.005027984268963337, -0.054910968989133835, -0.0020720933098345995, -0.0008417400531470776, -7.510157047363464e-06, -0.0006050424999557436, -0.0007582411635667086, -0.000301673193462193, -0.003926426637917757, -0.0014588914345949888, -0.5554344058036804, -0.026807043701410294, -0.0038450846914201975, -3.886147169396281e-05, -0.6111042499542236, -0.0008276851149275899, -0.006901119370013475, -0.0017392997397109866, -0.01886006072163582, -0.024809930473566055, -0.0020913651678711176, -0.005239445716142654, -0.01666845753788948, -0.09916795045137405, -0.17148779332637787, -0.005263281520456076, -0.0008553183870390058, -2.6634585857391357, -0.03459913656115532, -0.6020675897598267, -0.05630086362361908, -0.022409191355109215, -0.00114125432446599, -0.00195693108253181, -0.0002733095607254654, -0.02236652560532093, -0.008382021449506283, -2.3385040760040283, -0.2528707683086395, -0.3346729278564453, -0.014162508770823479, -0.020498454570770264, -5.018585216021165e-05, -3.099393507000059e-05, -0.005838838871568441, -0.002123840618878603, -0.00013672371278516948, -0.0015545914648100734, -0.00012313561455812305, -0.006793615873903036, -9.870042413240299e-05, -0.003823590464890003, -0.011096316389739513, -2.4023380279541016, -0.014056135900318623, -2.253030106658116e-05, -1.9311717551317997e-05, -0.0025689953472465277, -0.0006568658282049, -0.00018463814922142774, -0.0001454247540095821, -0.007062826305627823, -5.61460001335945e-05, -3.576272320060525e-06, -0.385909765958786, -0.04859800264239311, -0.0018687656847760081, -0.004348703194409609, -0.000285584683297202, -0.3183269798755646, -0.06356020271778107, -0.5281773209571838, -0.0008924792055040598, -0.0011205353075638413, -0.0014477020595222712, -0.04956172779202461, -0.0005946775199845433, -0.0007281036232598126, -4.434487345861271e-05, -0.00020168177434243262, -0.00031096869497559965, -0.0061827111057937145, -1.235913634300232, -0.00021419614495243877, -0.0027160681784152985, -0.00025149996508844197, -0.07062771916389465, -0.0031112858559936285, -0.022368624806404114, -0.0011085085570812225, -0.007963218726217747, -6.794698856538162e-05, -0.009352443739771843, -0.01068867463618517, -0.58052659034729, -0.09111815690994263, -0.003590567270293832, -0.0009259465732611716, -0.008622322231531143, -0.23905959725379944, -0.0024364092387259007, -0.0047401911579072475, -0.16727551817893982, -0.021881116554141045, -0.11468356102705002, -0.8130088448524475, -0.02192240208387375, -0.7126187682151794], "finish_reason": "stop"}], "metrics": {"energy": 143.12622478866584, "energy_per_token": 1.0925666014401971, "time": 5.4770274, "time_per_token": 0.04180936946564885}}
{"outputs": [{"text": "zips = []\n\n    for filename in os.listdir(directory):\n        if re.match(pattern, filename):\n            prefix = os.path.splitext(os.path.basename(filename))[0]\n            zips.append((filename, prefix))\n\n    result = []\n\n    for filename, prefix in zips:\n        path = f'{directory}/{filename}'\n        if zipfile.is_zipfile(path):\n            zip_ref = zipfile.ZipFile(path)\n            try:\n                zip_ref.extractall(f'{directory}/{prefix}')\n                result.append(f'{directory}/{prefix}')\n            except zipfile.BadZipFile:\n                pass\n\n    return result", "tokens": ["z", "ips", " =", " []", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " re", ".", "match", "(", "pattern", ",", " filename", "):", "\n", "            ", "prefix", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "filename", "))", "[", "0", "]", "\n", "            ", "z", "ips", ".", "append", "((", "filename", ",", " prefix", "))", "\n", "\n", "    ", "result", " =", " []", "\n", "\n", "    ", "for", " filename", ",", " prefix", " in", " z", "ips", ":", "\n", "        ", "path", " =", " f", "'{", "directory", "}/{", "filename", "}'", "\n", "        ", "if", " zip", "file", ".", "is", "_", "zip", "file", "(", "path", "):", "\n", "            ", "zip", "_", "ref", " =", " zip", "file", ".", "Z", "ip", "File", "(", "path", ")", "\n", "            ", "try", ":", "\n", "                ", "zip", "_", "ref", ".", "extract", "all", "(", "f", "'{", "directory", "}/{", "prefix", "}", "')", "\n", "                ", "result", ".", "append", "(", "f", "'{", "directory", "}/{", "prefix", "}", "')", "\n", "            ", "except", " zip", "file", ".", "Bad", "Z", "ip", "File", ":", "\n", "                ", "pass", "\n", "\n", "    ", "return", " result", "\n", "\n", "#"], "logprobs": [-4.341676712036133, -0.49836331605911255, -0.09712735563516617, -0.8631507158279419, -0.018034176900982857, -1.667971134185791, -0.0003995097358711064, -0.3732421398162842, -1.011576533317566, -0.0054110256023705006, -0.06136922165751457, -2.4318398573086597e-05, -0.0012348415330052376, -8.22540732769994e-06, -0.001959072658792138, -0.0020034497138112783, -0.0005469018360599875, -0.007258236408233643, -0.013259919360280037, -0.6726022362709045, -0.15915144979953766, -3.266281055402942e-05, -0.4581911563873291, -0.0008553183870390058, -0.007531226146966219, -0.0019006537040695548, -0.008102169260382652, -0.19224947690963745, -0.009907121770083904, -0.012675553560256958, -1.2841187715530396, -0.9587224721908569, -1.6732597351074219, -0.0008623456815257668, -0.0026102541014552116, -0.0265726987272501, -0.19689413905143738, -3.93382906622719e-05, -4.660974445869215e-05, -0.0008348317351192236, -2.953488826751709, -0.00044276448898017406, -0.00040642108069732785, -0.0016739654820412397, -0.27235251665115356, -2.3841855067985307e-07, -0.0006883158930577338, -0.010875122621655464, -0.02684801071882248, -0.0005577438860200346, -0.0018919678404927254, -0.0035182263236492872, -0.3824044466018677, -0.06734000891447067, -1.238486409187317, -0.0194182600826025, -0.004068194422870874, -0.005585065111517906, -1.627663016319275, -3.13905930519104, -0.012187417596578598, -0.47230264544487, -0.04940902069211006, -0.004213978536427021, -0.06385213881731033, -0.004143938422203064, -2.6595706939697266, -0.05854625999927521, -0.05191000550985336, -0.0018153393175452948, -0.46082621812820435, -0.00025412190007045865, -0.09795866161584854, -0.8270329236984253, -0.004325913731008768, -0.03612332046031952, -0.0006009918288327754, -0.08326774090528488, -7.748573807475623e-06, -0.00032431588624604046, -0.0018099845619872212, -0.011746643111109734, -2.0801942348480225, -0.053066592663526535, -2.394942283630371, -0.5394247174263, -0.031837932765483856, -0.012502861209213734, -0.048393696546554565, -0.004045636393129826, -0.005651211366057396, -0.12689203023910522, -2.099926471710205, -2.9551990032196045, -0.0013649680186063051, -8.439661905867979e-05, -0.001329253427684307, -0.00010406429646536708, -0.0015447123441845179, -7.986990567587782e-06, -0.00013350549852475524, -0.004838780965656042, -0.008311444893479347, -0.008938418701291084, -0.004938784521073103, -2.0568532943725586, -0.31212154030799866, -0.611139178276062, -0.0009274948388338089, -0.0008755664457567036, -1.7881377516459906e-06, -6.198863957251888e-06, -0.002053178148344159, -0.00017867876158561558, -7.712543447269127e-05, -0.00020454221521504223, -0.007496204227209091, -0.7951401472091675, -0.0024624522775411606, -0.04562083259224892, -3.1744184494018555, -0.0002044230350293219, -0.0024302254896610975, -0.0015956539427861571, -0.1774941086769104, -0.0017602439038455486, -0.004250896163284779, -0.0008237544680014253, -0.0002914242504630238, -0.002142635639756918, -0.025087937712669373, -0.5931252837181091, -0.04412315785884857, -0.006224768236279488, -0.04153101146221161, -0.0029822182841598988, -0.11913633346557617, -0.0006096888100728393, -0.005490817129611969, -0.2682553231716156, -0.10135175287723541, -0.0009310677996836603, -0.0010548033751547337, -0.031805139034986496, -0.5698797702789307, -0.03343089297413826, -0.011423535645008087, -0.0015053142560645938, -0.0022368428763002157, -0.004801885224878788, -7.652943895664066e-05, -0.00242475513368845, -0.06163052096962929, -1.2511537075042725, -1.9460299015045166, -0.0030774159822613, -9.142934868577868e-05, -0.4456082284450531, -0.0007120219524949789, -0.00019131260341964662, -0.83646559715271, -0.22948677837848663, -0.013446359895169735, -0.0011368485866114497, -1.290436863899231, -0.060920439660549164, -1.3911058902740479, -0.07919178158044815, -0.04254109784960747, -0.13130228221416473, -0.738970160484314, -0.01273734774440527, -2.6209716796875], "finish_reason": "stop"}], "metrics": {"energy": 163.59233389854424, "energy_per_token": 0.9456204271592152, "time": 7.372862, "time_per_token": 0.04261769942196532}}
{"outputs": [{"text": "results = []\n\n    # Check if directory exists and is a directory\n    if not os.path.isdir(directory):\n        raise ValueError(f\"Directory {directory} does not exist or is not a directory.\")\n\n    for filename in os.listdir(directory):\n        # Check if filename matches the pattern\n        if re.search(pattern, filename):\n            # Split the filename using \"-\" as the separator\n            prefix, suffix = filename.rsplit(\"-\", 1)\n            directory_name = os.path.join(directory, prefix)\n\n            # Create the directory if it doesn't exist\n            if not os.path.isdir(directory_name):\n                try:\n                    os.makedirs(directory_name)\n                except OSError as e:\n                    print(f\"Failed to create directory {directory_name}: {e}\")\n\n            # Extract the zip file into the directory\n            zip_filename = os.path.join(directory, filename)\n            try:\n                zip_ref = zipfile.ZipFile(zip_filename)\n", "tokens": ["results", " =", " []", "\n", "\n", "    ", "#", " Check", " if", " directory", " exists", " and", " is", " a", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Directory", " {", "directory", "}", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "#", " Check", " if", " filename", " matches", " the", " pattern", "\n", "        ", "if", " re", ".", "search", "(", "pattern", ",", " filename", "):", "\n", "            ", "#", " Split", " the", " filename", " using", " \"", "-", "\"", " as", " the", " separ", "ator", "\n", "            ", "prefix", ",", " suffix", " =", " filename", ".", "r", "split", "(", "\"", "-", "\"", ",", " ", "1", ")", "\n", "            ", "directory", "_", "name", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " prefix", ")", "\n", "\n", "            ", "#", " Create", " the", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "            ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "_", "name", "):", "\n", "                ", "try", ":", "\n", "                ", "    ", "os", ".", "m", "aked", "irs", "(", "directory", "_", "name", ")", "\n", "                ", "except", " O", "SE", "rror", " as", " e", ":", "\n", "                ", "    ", "print", "(", "f", "\"", "Failed", " to", " create", " directory", " {", "directory", "_", "name", "}:", " {", "e", "}\"", ")", "\n", "\n", "            ", "#", " Ext", "ract", " the", " zip", " file", " into", " the", " directory", "\n", "            ", "zip", "_", "filename", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", "\n", "            ", "try", ":", "\n", "                ", "zip", "_", "ref", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "filename", ")", "\n"], "logprobs": [-4.524364471435547, -0.026040781289339066, -0.0487886443734169, -0.008663567714393139, -1.6226662397384644, -0.0004987664869986475, -1.8004155158996582, -2.5534067153930664, -0.3897121548652649, -0.9267780184745789, -0.1315782368183136, -1.958885669708252, -0.16089275479316711, -0.13728947937488556, -0.2116144597530365, -0.13311640918254852, -0.002357443794608116, -0.013646994717419147, -0.14150169491767883, -0.0074411844834685326, -9.179073458653875e-06, -5.185469490243122e-05, -0.015572848729789257, -0.257517546415329, -0.00018690270371735096, -6.747018051100895e-05, -0.0007782529573887587, -0.035024430602788925, -0.00299232080578804, -0.0018949424847960472, -1.18241286277771, -1.079516053199768, -3.802703940891661e-05, -0.0885719507932663, -0.2567698061466217, -0.20936372876167297, -1.0140563249588013, -0.45739877223968506, -0.001261273049749434, -0.012627174146473408, -0.31606557965278625, -0.00043847484630532563, -0.011187444441020489, -0.9883700013160706, -0.055170126259326935, -0.007004586048424244, -0.001914693508297205, -0.03812059387564659, -0.8291609287261963, -0.004843289032578468, -9.738924563862383e-05, -0.001453891978599131, -0.03918755054473877, -0.0008233971311710775, -2.4074230194091797, -0.3796127438545227, -0.002472441177815199, -0.030838586390018463, -0.002805228577926755, -0.00016318420239258558, -7.033323527139146e-06, -0.0002628219372127205, -0.00034231049357913435, -7.343022298300639e-05, -0.005064397118985653, -0.020319750532507896, -2.5600218772888184, -0.3555346131324768, -0.04010999575257301, -0.8585190176963806, -0.03421640023589134, -0.6281446218490601, -0.17208242416381836, -0.19015862047672272, -0.000969297660049051, -0.7779567837715149, -0.11090100556612015, -9.775113539944869e-06, -0.7002453804016113, -0.00029345019720494747, -0.003602326614782214, -0.0007686044555157423, -0.005597986746579409, -0.07984255999326706, -0.0022684813011437654, -0.023383688181638718, -1.0814398527145386, -0.25025027990341187, -0.18938122689723969, -0.0884222462773323, -1.9191031455993652, -1.8798487186431885, -0.0026007420383393764, -0.0001951265730895102, -0.9938821792602539, -0.23666730523109436, -1.3073005676269531, -2.3483953555114567e-05, -0.5384959578514099, -0.00045885046711191535, -1.375814437866211, -0.08031846582889557, -1.1893147230148315, -0.010167471133172512, -0.5899085402488708, -0.0021557204890996218, -0.46063700318336487, -0.010792575776576996, -0.3500898480415344, -0.010304935276508331, -0.002814976265653968, -4.172238186583854e-05, -0.0005385617259889841, -0.08567330986261368, -0.002155958442017436, -0.0025247621815651655, -0.004978877957910299, -0.6308670043945312, -2.3104865550994873, -1.094283103942871, -0.45785069465637207, -0.0023178397677838802, -0.191508948802948, -1.9550132492440753e-05, -0.0001685477327555418, -0.0032360588666051626, -0.0066349441185593605, -0.00024875884992070496, -0.005948578007519245, -0.00038246947224251926, -0.04830976203083992, -0.028747474774718285, -0.011179191991686821, -0.8263684511184692, -0.0017799977213144302, -0.18271709978580475, -0.7168474793434143, -0.2034473568201065, -0.08118880540132523, -0.14528417587280273, -0.02931257151067257, -0.3478018343448639, -0.00021062063751742244, -1.6093124941107817e-05, -0.10606670379638672, -0.04011698067188263, -0.00012218205665703863, -0.30737513303756714, -0.0020722122862935066, -0.0002817710628733039, -0.0002212279650848359, -1.1086402082582936e-05, -0.00030489088385365903, -1.031596064567566, -6.6756979322235566e-06, -5.483612312673358e-06, -0.0005172345554456115, -0.000922969076782465, -2.145764938177308e-06, -0.00033206192892976105, -0.00047469791024923325, -0.0005984899471513927, -3.0011565685272217, -3.6954195820726454e-05, -0.002034619450569153, -7.188061863416806e-05, -0.0002051381452474743, -0.009180830791592598, -9.536738616588991e-07, -0.6418628692626953, -2.038458114839159e-05, -0.0009191579301841557, -1.4185804502631072e-05, -0.001211624126881361, -0.00029297350556589663, -1.7881377516459906e-06, -0.027929257601499557, -0.003617292968556285, -0.0022218560334295034, -0.021253105252981186, -0.6126543879508972, -1.2397689715726301e-05, -1.311301275563892e-06, -0.4499657154083252, -0.15581661462783813, -0.0001896439935080707, -0.001796776195988059, -0.0001867835089797154, -0.00018559163436293602, -0.32388970255851746, -0.016810189932584763, -0.2847130596637726, -0.014172733761370182, -2.0236401557922363, -0.0007948100101202726, -0.0188003983348608, -0.030639754608273506, -0.4872806668281555, -0.004238669760525227, -0.0073514897376298904, -9.464769391342998e-05, -0.0809880867600441, -0.006412406452000141, -0.03390047326683998, -0.04927853122353554, -0.0013392536202445626, -0.0036100472789257765, -0.13645435869693756, -0.012256543152034283, -0.17431242763996124, -0.5431181192398071, -0.0022801372688263655, -0.07001570612192154, -0.5006100535392761, -0.030799055472016335, -1.7040964365005493, -0.005840261001139879, -0.1250598430633545, -0.018916327506303787, -0.000714523543138057, -1.4541484117507935, -0.07171593606472015, -1.2519867420196533, -0.00036244976217858493, -0.008232232183218002, -5.722029527532868e-06, -2.610649426060263e-05, -0.00033718624035827816, -0.00012063252506777644, -3.266281055402942e-05, -0.0018250966677442193, -0.06347126513719559, -0.008475524373352528, -0.00037722624256275594, -0.0014249657979235053, -0.03184393793344498, -0.5999739170074463, -3.802703940891661e-05, -0.00015615197480656207, -0.0004354958946350962, -2.6486902236938477, -0.2670927941799164, -1.2168760299682617, -0.00015770144818816334, -0.0008562712464481592, -4.0531076592742465e-06, -4.529942543740617e-06, -0.0028843963518738747, -8.034383063204587e-05, -7.283422019099817e-05, -3.635817120084539e-05, -0.001090765930712223, -8.356221951544285e-05, -2.407998726994265e-05, -0.6654573082923889, -0.0007373951375484467], "finish_reason": "length"}], "metrics": {"energy": 258.260968895912, "energy_per_token": 1.0088319097496563, "time": 10.943708, "time_per_token": 0.042748859375}}
{"outputs": [{"text": "matches = []\n    # find all files that match the pattern\n    for file in os.listdir(directory):\n        if re.match(pattern, file):\n            matches.append(file)\n    # unzip the files\n    for match in matches:\n        directory = match.split(\"-\", 1)[0]\n        with zipfile.ZipFile(os.path.join(directory, match)) as zf:\n            zf.extractall(directory)\n    return matches", "tokens": ["matches", " =", " []", "\n", "    ", "#", " find", " all", " files", " that", " match", " the", " pattern", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " re", ".", "match", "(", "pattern", ",", " file", "):", "\n", "            ", "matches", ".", "append", "(", "file", ")", "\n", "    ", "#", " un", "zip", " the", " files", "\n", "    ", "for", " match", " in", " matches", ":", "\n", "        ", "directory", " =", " match", ".", "split", "(", "\"", "-", "\"", ",", " ", "1", ")[", "0", "]", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " match", "))", " as", " z", "f", ":", "\n", "            ", "z", "f", ".", "extract", "all", "(", "directory", ")", "\n", "    ", "return", " matches", "\n", "\n", "def"], "logprobs": [-2.9883973598480225, -0.019155163317918777, -0.47521743178367615, -0.017254481092095375, -0.13418680429458618, -3.5536417961120605, -3.1580650806427, -0.3414478003978729, -1.5578818321228027, -1.5540720224380493, -0.1602732539176941, -0.11908882111310959, -0.1382128745317459, -0.42988649010658264, -0.004675883334130049, -0.25069671869277954, -1.6077916622161865, -0.37990280985832214, -0.15900056064128876, -2.539125671319198e-05, -0.00346666993573308, -1.883488948806189e-05, -0.0018672188743948936, -0.0018306892598047853, -0.0003741279651876539, -0.002585760550573468, -0.0020754244178533554, -0.5787559747695923, -0.03872916102409363, -1.7165990357170813e-05, -0.5380953550338745, -0.0005447572330012918, -0.004940445069223642, -0.0010933857411146164, -0.00883113406598568, -0.1713026911020279, -0.007346519734710455, -0.002645209664478898, -0.403315931558609, -0.0019055319717153907, -0.0013236580416560173, -0.040001995861530304, -0.1135779321193695, -0.022928597405552864, -0.0017626238986849785, -1.2148034572601318, -0.5844389200210571, -2.3729772567749023, -0.003925595432519913, -1.833056926727295, -0.08836877346038818, -0.6176499128341675, -0.003611116437241435, -0.340254545211792, -0.7160270810127258, -0.002214719308540225, -0.006574784871190786, -0.0006075443816371262, -0.0011716175358742476, -0.004431902896612883, -3.3439178466796875, -0.7800780534744263, -1.3420214653015137, -0.08846403658390045, -0.2605843245983124, -0.805796205997467, -0.01023815292865038, -0.009066011756658554, -0.0001546025014249608, -1.4006816148757935, -0.10897553712129593, -0.016743840649724007, -0.01218164712190628, -0.009415035136044025, -0.0015253110323101282, -0.07662469893693924, -0.013591253198683262, -1.3478329181671143, -0.03157103806734085, -4.768258077092469e-05, -3.290122185717337e-05, -0.002137401606887579, -0.0024079871363937855, -0.0003861635341309011, -0.0057383328676223755, -0.6657850742340088, -0.0027594605926424265, -0.0008118432597257197, -0.02734389156103134, -0.0006586528033949435, -0.0001573438785271719, -0.0018610315164551139, -0.0017341827042400837, -0.023264780640602112, -0.495361328125, -0.0002649671514518559, -0.8211017847061157, -0.5600369572639465, -0.0008873577462509274, -0.00194193993229419, -0.0023241431917995214, -0.05472668260335922, -0.0005346299149096012, -5.2689116273541003e-05, -0.0003763920976780355, -0.0015948207583278418, -0.17115715146064758, -0.13522177934646606, -0.11253414303064346, -0.025541581213474274, -0.3742049038410187, -0.4365794062614441, -0.4085518419742584, -0.8830047249794006, -0.025888850912451744, -1.207926869392395], "finish_reason": "stop"}], "metrics": {"energy": 106.51190875911715, "energy_per_token": 0.9182061099923892, "time": 4.853741, "time_per_token": 0.04184259482758621}}
{"outputs": [{"text": "file_names = [os.path.join(directory, name) for name in os.listdir(directory)]\n    pattern_regex = re.compile(pattern)\n\n    directories = []\n    for file_name in file_names:\n        if not os.path.isfile(file_name):\n            continue\n\n        match = pattern_regex.search(os.path.basename(file_name))\n        if not match:\n            continue\n\n        directory = os.path.dirname(os.path.dirname(file_name))\n        directories.append(directory)\n\n        with zipfile.ZipFile(file_name, 'r') as zip_ref:\n            zip_ref.extractall(directory)\n\n    return directories", "tokens": ["file", "_", "names", " =", " [", "os", ".", "path", ".", "join", "(", "directory", ",", " name", ")", " for", " name", " in", " os", ".", "list", "dir", "(", "directory", ")]", "\n", "    ", "pattern", "_", "regex", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "\n", "    ", "direct", "ories", " =", " []", "\n", "    ", "for", " file", "_", "name", " in", " file", "_", "names", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "file", "_", "name", "):", "\n", "            ", "continue", "\n", "\n", "        ", "match", " =", " pattern", "_", "regex", ".", "search", "(", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "name", "))", "\n", "        ", "if", " not", " match", ":", "\n", "            ", "continue", "\n", "\n", "        ", "directory", " =", " os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "dirname", "(", "file", "_", "name", "))", "\n", "        ", "direct", "ories", ".", "append", "(", "directory", ")", "\n", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "file", "_", "name", ",", " '", "r", "')", " as", " zip", "_", "ref", ":", "\n", "            ", "zip", "_", "ref", ".", "extract", "all", "(", "directory", ")", "\n", "\n", "    ", "return", " directories", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.6550252437591553, -0.132146418094635, -1.8752634525299072, -0.051821269094944, -1.5901200771331787, -1.9860072135925293, -0.00011920218821614981, -0.0031767638865858316, -0.004107017070055008, -0.5176116228103638, -0.003208491252735257, -0.14919567108154297, -0.0007479969062842429, -2.614227294921875, -0.0029155388474464417, -0.1288641393184662, -0.00907817855477333, -0.0052580637857317924, -0.03928646817803383, -0.0017538178944960237, -0.00020692592079285532, -1.4305104514278355e-06, -0.0004253674705978483, -0.003402161179110408, -1.227148413658142, -0.010196145623922348, -0.12336791306734085, -2.8048858642578125, -1.6572895050048828, -1.6096113920211792, -0.008247602730989456, -0.015650777146220207, -4.279521817807108e-05, -0.001085764612071216, -0.0017062166007235646, -0.008114702999591827, -0.01708832010626793, -0.00322073046118021, -1.7259819507598877, -0.00034957972820848227, -1.7928929328918457, -0.0024462793953716755, -0.1291683167219162, -0.1004873663187027, -0.00798273179680109, -0.3260023593902588, -0.07673554867506027, -0.3361812233924866, -0.11687292158603668, -0.021742550656199455, -0.0013403251068666577, -0.009699242189526558, -3.576278118089249e-07, -1.0251946150674485e-05, -0.0001722425949992612, -0.0006510283565148711, -0.0057505411095917225, -1.7111296653747559, -1.2703020572662354, -0.7779445052146912, -4.446407547220588e-05, -0.00015948931104503572, -0.0025883764028549194, -0.05160754546523094, -0.0786806270480156, -2.6464111215318553e-05, -0.0006987990345805883, -3.93382906622719e-05, -6.365573790390044e-05, -0.3174974322319031, -0.01751081459224224, -0.000906056840904057, -0.050334446132183075, -0.023647071793675423, -1.047471284866333, -0.00018916724366135895, -0.25044888257980347, -0.019874248653650284, -0.02982146292924881, -5.6503606174374e-05, -7.152531907195225e-06, -4.1126360883936286e-05, -0.41449713706970215, -2.455681169521995e-05, -1.1967589855194092, -0.0003407612966839224, -2.634490556374658e-05, -0.004213741049170494, -0.017160505056381226, -1.1920928244535389e-07, -1.4662635294371285e-05, -0.0009064141195267439, -2.861018856492592e-06, -3.7431014789035544e-05, -0.00218878872692585, -0.002679569413885474, -0.06340838968753815, -0.043753866106271744, -0.8231420516967773, -0.0007350126979872584, -0.034214213490486145, -0.005913855973631144, -0.0003367095487192273, -0.08949825912714005, -0.0030317793134599924, -0.106058768928051, -0.00017927470616996288, -0.9744877219200134, -0.5891810655593872, -0.7471559047698975, -6.544376083184034e-05, -0.0019013675628229976, -0.0036808375734835863, -2.111309289932251, -9.035655966727063e-05, -2.391881227493286, -0.0019054129952564836, -0.00013851160474587232, -0.0017027654685080051, -0.9834513068199158, -0.00018785618885885924, -0.06349655240774155, -1.0371154530730564e-05, -0.00011503035057103261, -0.0021031422074884176, -0.03863660991191864, -0.0954982116818428, -0.9512957334518433, -4.482168878894299e-05, -0.0025993152521550655, -0.0037111237179487944, -0.004349533934146166, -0.011363428086042404, -0.0022442173212766647, -0.0034002603497356176, -0.7111631631851196, -0.12169212847948074, -0.7248437404632568, -0.0197347030043602, -2.5629668016335927e-05, -1.2516897186287679e-05, -0.0032664774917066097, -0.00032944019767455757, -0.0001209901092806831, -0.0002796259068418294, -0.011488353833556175, -0.0007371568935923278, -7.64102369430475e-05, -0.36102747917175293, -0.07552015036344528, -0.0024839758407324553, -0.011124609969556332, -0.00026043839170597494, -0.21892255544662476, -0.0375690683722496, -1.7242730855941772, -0.0007186928996816278, -0.0007556205382570624, -0.001583751873113215, -0.022140350192785263, -0.0004435985756572336, -0.0015120989410206676, -7.021180499577895e-05, -0.0002053765201708302, -0.0009565545478835702, -0.02835577353835106, -0.04261569678783417, -0.05151629075407982, -0.01342424750328064, -0.12865065038204193, -0.04386066272854805, -0.031381361186504364, -0.11109912395477295, -1.249908685684204, -9.536738616588991e-07, -8.344646857949556e-07, -5.149708886165172e-05, -0.00018046658078674227, -0.1485300362110138], "finish_reason": "stop"}], "metrics": {"energy": 219.93776564025873, "energy_per_token": 1.2287026013422275, "time": 7.571743, "time_per_token": 0.04230024022346369}}
{"outputs": [{"text": "unzipped_directories = []\n    for file in os.listdir(directory):\n        match = re.search(pattern, file)\n        if match:\n            prefix = match.group(1)\n            if not os.path.exists(prefix):\n                os.makedirs(prefix)\n            with zipfile.ZipFile(os.path.join(directory, file)) as z:\n                z.extractall(prefix)\n            unzipped_directories.append(prefix)\n    return unzipped_directories, []", "tokens": ["un", "z", "ipped", "_", "direct", "ories", " =", " []", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "match", " =", " re", ".", "search", "(", "pattern", ",", " file", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "prefix", " =", " match", ".", "group", "(", "1", ")", "\n", "            ", "if", " not", " os", ".", "path", ".", "exists", "(", "prefix", "):", "\n", "                ", "os", ".", "m", "aked", "irs", "(", "prefix", ")", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", "))", " as", " z", ":", "\n", "                ", "z", ".", "extract", "all", "(", "prefix", ")", "\n", "            ", "un", "z", "ipped", "_", "direct", "ories", ".", "append", "(", "prefix", ")", "\n", "    ", "return", " un", "z", "ipped", "_", "direct", "ories", ",", " []", "<", "|", "end", "of", "text", "|>"], "logprobs": [-4.443874359130859, -0.8320806622505188, -0.06434543430805206, -0.31873998045921326, -1.371068000793457, -0.0014277036534622312, -0.011959398165345192, -0.07634597271680832, -0.011639776639640331, -0.4109288454055786, -0.5031131505966187, -1.623866081237793, -0.664208173751831, -0.10983465611934662, -2.2172682292875834e-05, -0.003839622251689434, -1.1205610462639015e-05, -0.0010621865512803197, -0.0014181805308908224, -0.0007273888913914561, -0.007594404276460409, -0.004082560073584318, -0.8221266269683838, -0.031209906563162804, -0.00542655773460865, -2.682172998902388e-05, -0.4531729817390442, -0.0007815881981514394, -0.006691666319966316, -0.0019183820113539696, -0.007168761920183897, -0.018776414915919304, -0.0032587540335953236, -0.0200318843126297, -0.020720215514302254, -0.041591159999370575, -0.12767578661441803, -0.010930897668004036, -0.0013234198559075594, -0.6505916118621826, -0.1939929574728012, -0.03612883761525154, -0.05680859833955765, -0.016086667776107788, -0.0022199528757482767, -0.0025751783978194, -0.0001419681793777272, -0.025289040058851242, -0.01572306826710701, -2.1497743129730225, -0.2663685083389282, -0.048200029879808426, -3.1709168979432434e-05, -0.00010907054820563644, -0.002911616349592805, -0.9989302158355713, -0.000834117061458528, -0.15136586129665375, -0.011576028540730476, -0.019189076498150826, -0.0012085284106433392, -0.041422247886657715, -0.00013314791431184858, -0.7422754168510437, -4.6967357775429264e-05, -0.0023225971963256598, -8.880697714630514e-05, -0.002343410160392523, -0.017424948513507843, -0.005738569889217615, -0.10581117868423462, -0.4298182427883148, -0.010103275068104267, -1.2993727978027891e-05, -1.597391747054644e-05, -0.0028003547340631485, -0.0005758534534834325, -0.0001433984871255234, -0.002331279218196869, -0.34074822068214417, -0.00021252757869660854, -0.0009815642843022943, -0.0025485437363386154, -0.0004334702098276466, -6.317892984952778e-05, -0.0010619483655318618, -0.00013302871957421303, -0.008524458855390549, -0.8747584819793701, -0.00020692592079285532, -1.0853886604309082, -1.5468649864196777, -0.001134824356995523, -0.0011388728162273765, -0.07600175589323044, -0.00018892886873800308, -0.00016842853801790625, -0.002776697976514697, -0.0024612629786133766, -0.030430706217885017, -0.036321524530649185, -0.004324845504015684, -0.6611571311950684, -0.03476206585764885, -9.715084888739511e-05, -5.638440416078083e-05, -0.00037377048283815384, -0.0022781153675168753, -5.245195097813848e-06, -0.0012999664759263396, -0.000543446687515825, -0.002133833011612296, -0.03622668236494064, -0.004577515181154013, -0.0038316657301038504, -0.2938843071460724, -0.019690873101353645, -0.18655280768871307, -0.002734257373958826, -0.00021371940965764225, -3.2305197237292305e-05, -1.9192511899746023e-05, -1.9907753085135482e-05, -2.1995413303375244, -0.5114685297012329, -1.4925951957702637, -9.536738616588991e-07, -8.344646857949556e-07, -5.483612312673358e-06, -0.0003432638186495751, -0.18776237964630127], "finish_reason": "stop"}], "metrics": {"energy": 139.02044758987427, "energy_per_token": 1.061224790762399, "time": 5.268425, "time_per_token": 0.04021698473282442}}
{"outputs": [{"text": "dir_list = []\n    for zip_file in os.listdir(directory):\n        if re.search(pattern, zip_file):\n            base_dir, ext = os.path.splitext(zip_file)\n            dirname = base_dir.split('-')[0]\n            dir_list.append(dirname)\n            zip_ref = zipfile.ZipFile(os.path.join(directory, zip_file))\n            zip_ref.extractall(directory)\n    return dir_list", "tokens": ["dir", "_", "list", " =", " []", "\n", "    ", "for", " zip", "_", "file", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " re", ".", "search", "(", "pattern", ",", " zip", "_", "file", "):", "\n", "            ", "base", "_", "dir", ",", " ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "zip", "_", "file", ")", "\n", "            ", "dirname", " =", " base", "_", "dir", ".", "split", "('", "-", "')", "[", "0", "]", "\n", "            ", "dir", "_", "list", ".", "append", "(", "dirname", ")", "\n", "            ", "zip", "_", "ref", " =", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " zip", "_", "file", "))", "\n", "            ", "zip", "_", "ref", ".", "extract", "all", "(", "directory", ")", "\n", "    ", "return", " dir", "_", "list", "\n", "\n", "if"], "logprobs": [-3.115609884262085, -1.4978532791137695, -0.37939661741256714, -0.029242876917123795, -0.19125278294086456, -0.01921316608786583, -0.18016386032104492, -0.6473236680030823, -3.400102138519287, -0.18415960669517517, -0.3534777760505676, -0.08748424053192139, -0.1741543859243393, -3.135155202471651e-05, -0.00671286229044199, -2.062299427052494e-05, -0.0009583409409970045, -0.002540101297199726, -0.000869253883138299, -0.013059794902801514, -0.006281513720750809, -0.8127815127372742, -0.12707315385341644, -3.313963316031732e-05, -0.9071881771087646, -0.000954768096562475, -0.00494803674519062, -0.0023484050761908293, -0.024834351614117622, -0.00013624693383462727, -1.1444026313256472e-05, -0.1534501612186432, -0.01781100034713745, -0.004466794431209564, -3.781341075897217, -0.4115203022956848, -1.0773954391479492, -1.3173497915267944, -2.1503348350524902, -0.05594179406762123, -0.06808018684387207, -0.0004906642716377974, -0.00021407696476671845, -0.03828536346554756, -0.0040833912789821625, -0.00020823694649152458, -4.768370445162873e-07, -0.0002843929105438292, -0.0952383503317833, -0.0007993363542482257, -8.702239938429557e-06, -0.005453826859593391, -0.020208071917295456, -0.007655685767531395, -3.2923083305358887, -0.08885590732097626, -0.7062745094299316, -0.00044431351125240326, -8.070142939686775e-05, -0.05552203580737114, -0.26708686351776123, -0.6759482622146606, -0.01837318018078804, -0.0006417360855266452, -0.12430866807699203, -0.005933764856308699, -0.0008404298569075763, -0.09333490580320358, -0.034861426800489426, -1.5816227197647095, -0.01878916658461094, -0.026646526530385017, -0.0035612278152257204, -0.002509898506104946, -0.0176545362919569, -0.26165449619293213, -0.010388584807515144, -0.00498646916821599, -0.046753428876399994, -1.7377941608428955, -0.12238461524248123, -3.1855363845825195, -0.001551734865643084, -0.0024700628127902746, -1.3947389561508317e-05, -1.4424220353248529e-05, -0.006174654699862003, -7.235741941258311e-05, -6.246371776796877e-05, -0.009006115607917309, -0.42602959275245667, -0.001772262854501605, -0.0006541258189827204, -0.002996480790898204, -0.0010481346398591995, -0.000277123210253194, -0.004577633924782276, -0.00021169328829273582, -0.015431880950927734, -0.0007435894221998751, -0.0001967951684491709, -0.22005651891231537, -0.002620598068460822, -0.0026456851046532393, -0.031567804515361786, -0.0001264730526600033, -0.00021908267808612436, -0.00019071667338721454, -6.0794889577664435e-05, -1.6093124941107817e-05, -0.038858626037836075, -2.884019613265991, -0.40513134002685547, -0.012127355672419071, -0.5788068771362305, -0.043003108352422714, -0.09453482180833817, -0.0029452538583427668, -7.295342220459133e-05, -0.8332981467247009, -0.028114257380366325, -0.69989013671875], "finish_reason": "stop"}], "metrics": {"energy": 161.78861718177788, "energy_per_token": 1.3261362064080153, "time": 5.0613422, "time_per_token": 0.04148641147540984}}
{"outputs": [{"text": "pattern_match = re.compile(pattern)\n    zip_dirs = []\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            match = pattern_match.match(file)\n\n            if match:\n                zip_dir = match.group(1)\n\n                if not zip_dirs.__contains__(zip_dir):\n                    zip_dirs.append(zip_dir)\n\n                os.makedirs(os.path.join(root, zip_dir), exist_ok=True)\n                with zipfile.ZipFile(os.path.join(root, file)) as zf:\n                    zf.extractall(os.path.join(root, zip_dir))\n\n    return zip_dirs, []", "tokens": ["pattern", "_", "match", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "    ", "zip", "_", "dir", "s", " =", " []", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "match", " =", " pattern", "_", "match", ".", "match", "(", "file", ")", "\n", "\n", "            ", "if", " match", ":", "\n", "                ", "zip", "_", "dir", " =", " match", ".", "group", "(", "1", ")", "\n", "\n", "                ", "if", " not", " zip", "_", "dir", "s", ".", "__", "contains", "__(", "zip", "_", "dir", "):", "\n", "                ", "    ", "zip", "_", "dir", "s", ".", "append", "(", "zip", "_", "dir", ")", "\n", "\n", "                ", "os", ".", "m", "aked", "irs", "(", "os", ".", "path", ".", "join", "(", "root", ",", " zip", "_", "dir", ")", ",", " exist", "_", "ok", "=", "True", ")", "\n", "                ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", "))", " as", " z", "f", ":", "\n", "                ", "    ", "z", "f", ".", "extract", "all", "(", "os", ".", "path", ".", "join", "(", "root", ",", " zip", "_", "dir", "))", "\n", "\n", "    ", "return", " zip", "_", "dir", "s", ",", " []"], "logprobs": [-2.7699735164642334, -2.6380584239959717, -2.895939350128174, -0.10516989231109619, -0.0795425996184349, -0.00011955977242905647, -0.5847545862197876, -0.0025519919581711292, -0.010915686376392841, -0.040619947016239166, -0.015069451183080673, -0.20880749821662903, -2.0814015865325928, -0.2255408763885498, -2.0643653869628906, -0.12889672815799713, -0.027828743681311607, -0.29104581475257874, -0.008824635297060013, -1.0945615768432617, -0.00024923557066358626, -0.20025168359279633, -1.4317935705184937, -0.006651167757809162, -0.40521013736724854, -0.0012722263345494866, -0.0030790797900408506, -0.04750910401344299, -0.0013719918206334114, -0.004729631822556257, -1.0013530300057027e-05, -0.00030655929003842175, -0.001650877296924591, -0.003451345022767782, -0.07318495959043503, -0.013877451419830322, -0.010788683779537678, -0.22702717781066895, -0.5071418285369873, -0.1165439784526825, -0.01277089212089777, -0.00017414960893802345, -0.002605022396892309, -0.006189345382153988, -0.779572606086731, -0.033159464597702026, -0.02518988773226738, -9.357491217087954e-05, -1.3232143828645349e-05, -0.0002985746832564473, -1.5511029958724976, -0.00022206225548870862, -0.03179890289902687, -0.004295052960515022, -0.0037203875835984945, -2.695141077041626, -0.001689436612650752, -0.04434920474886894, -0.0917736291885376, -0.18693645298480988, -0.013196391984820366, -0.0034512262791395187, -0.9619994163513184, -0.03768513724207878, -0.16749736666679382, -0.7090595364570618, -0.4319375157356262, -0.03544401749968529, -0.042292241007089615, -0.0021578615996986628, -0.0038988778833299875, -0.00041368984966538846, -0.025836575776338577, -1.6068437099456787, -0.0031753377988934517, -0.32402464747428894, -0.9149981737136841, -1.244288444519043, -0.052611809223890305, -0.000990615226328373, -2.9886484146118164, -2.0336031913757324, -0.224651500582695, -0.00017414960893802345, -0.0004843492351938039, -0.009504898451268673, -9.405170567333698e-05, -5.221230458118953e-05, -0.011142529547214508, -0.005716760642826557, -0.007276106625795364, -0.003766824258491397, -0.06420603394508362, -0.02730851247906685, -0.10832676291465759, -0.003318400587886572, -0.0026140587870031595, -0.0041518923826515675, -0.000631848000921309, -0.044073425233364105, -8.332382276421413e-05, -3.671578815556131e-05, -0.0011236312566325068, -0.0017702399054542184, -0.22881174087524414, -0.10282405465841293, -3.7912282943725586, -0.0017495339270681143, -0.27604222297668457, -3.528532761265524e-05, -0.00275957933627069, -0.029693715274333954, -0.35040101408958435, -0.004201989155262709, -0.0009447640040889382, -0.02231966331601143, -0.004544644616544247, -0.004631743300706148, -0.3929804265499115, -0.012083660811185837, -0.15418384969234467, -0.0005678709712810814, -0.00033063191222026944, -0.19580063223838806, -0.0013675870141014457, -0.015362504869699478, -9.536738616588991e-07, -5.578839045483619e-05, -0.002932892646640539, -0.002865734277293086, -0.0018603176577016711, -0.009660754352807999, -0.9239233136177063, -0.6108850240707397, -0.04136517271399498, -4.184158387943171e-05, -1.7046782886609435e-05, -0.0031111668795347214, -0.00028975578607060015, -7.92710343375802e-05, -0.0017923733685165644, -0.06904134899377823, -0.0009232072625309229, -0.000785280775744468, -0.00250252615660429, -0.0005361788207665086, -9.095255518332124e-05, -0.015473316423594952, -0.00010442188795423135, -0.009664650075137615, -1.0284004211425781, -0.00026913834153674543, -1.7583634853363037, -0.5171999931335449, -0.002609778428450227, -0.0016144587425515056, -0.0018991068936884403, -0.0014291321858763695, -0.04534335061907768, -0.000809818331617862, -0.00011824862303910777, -0.00024732868769206107, -0.010231899097561836, -0.0029937471263110638, -0.6196264624595642, -3.3854863431770355e-05, -0.00022933237778488547, -3.814624506048858e-05, -0.0008517451351508498, -7.64102369430475e-05, -0.007992666214704514, -0.0004748170613311231, -0.005546774249523878, -4.529942543740617e-06, -5.722029527532868e-06, -0.022313250228762627, -0.04789053648710251, -0.19032242894172668, -0.259863942861557, -0.02814427576959133, -0.30653682351112366, -0.00010895135346800089, -3.6954195820726454e-05, -0.0003064401389565319, -1.6815696954727173, -0.7557664513587952], "finish_reason": "stop"}], "metrics": {"energy": 190.79374652099614, "energy_per_token": 1.0257728307580438, "time": 7.7891507, "time_per_token": 0.04187715430107527}}
{"outputs": [{"text": "matches = []\n    for filename in os.listdir(directory):\n        match = re.search(pattern, filename)\n        if match:\n            dirname = os.path.join(directory, match[1])\n            if not os.path.exists(dirname):\n                os.makedirs(dirname)\n            with zipfile.ZipFile(os.path.join(directory, filename), 'r') as zip_file:\n                zip_file.extractall(os.path.join(directory, match[1]))\n            matches.append(dirname)\n\n    return (directory, matches)", "tokens": ["matches", " =", " []", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "match", " =", " re", ".", "search", "(", "pattern", ",", " filename", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "dirname", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " match", "[", "1", "])", "\n", "            ", "if", " not", " os", ".", "path", ".", "exists", "(", "dirname", "):", "\n", "                ", "os", ".", "m", "aked", "irs", "(", "dirname", ")", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", ",", " '", "r", "')", " as", " zip", "_", "file", ":", "\n", "                ", "zip", "_", "file", ".", "extract", "all", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " match", "[", "1", "]))", "\n", "            ", "matches", ".", "append", "(", "dirname", ")", "\n", "\n", "    ", "return", " (", "directory", ",", " matches", ")", "\n", "\n", "def"], "logprobs": [-2.9883973598480225, -0.019155163317918777, -0.47521743178367615, -0.017254481092095375, -0.13418680429458618, -0.5738043189048767, -0.827563464641571, -0.005595853086560965, -0.050495173782110214, -2.1934269170742482e-05, -0.0013865152141079307, -1.07287787614041e-05, -0.0018285474507138133, -0.001553758280351758, -0.00038223114097490907, -0.006268719676882029, -0.0032556646037846804, -0.4536016583442688, -0.018103836104273796, -0.010827364400029182, -3.075552376685664e-05, -0.639900803565979, -0.001321276999078691, -0.0055365790612995625, -0.0026057357899844646, -0.010175495408475399, -0.02087036333978176, -0.002075067488476634, -0.010795877315104008, -0.012000388465821743, -0.01674184761941433, -0.12380427867174149, -0.005782424006611109, -0.0012732979375869036, -1.8551902770996094, -0.055128950625658035, -1.1237634420394897, -0.0012191252317279577, -0.0026576933450996876, -0.025581438094377518, -0.0824197381734848, -0.000722266617231071, -0.01518663577735424, -0.00039641151670366526, -0.10390391945838928, -2.172739267349243, -0.02920745126903057, -0.012841506861150265, -0.014836684800684452, -0.013283093459904194, -1.3507304191589355, -0.12564392387866974, -0.00368546973913908, -0.00052426423644647, -4.9828242481453344e-05, -0.0009922825265675783, -0.23026998341083527, -6.472854875028133e-05, -0.0014615101972594857, -0.005963153671473265, -0.00783406663686037, -0.0008679436868987978, -0.061357561498880386, -0.00024256148026324809, -0.22904755175113678, -6.329813186312094e-05, -0.000971917703282088, -3.8980677345534787e-05, -0.0015378089156001806, -0.010216087102890015, -0.0027816910296678543, -0.1299688220024109, -0.5324047207832336, -0.010193903930485249, -1.168244216387393e-05, -1.883488948806189e-05, -0.0026604279410094023, -0.0004972175229340792, -0.00010907054820563644, -0.001546973828226328, -0.13232730329036713, -0.00020930961181875318, -0.00024005869636312127, -0.00016675988445058465, -0.00014661667228210717, -5.5549986427649856e-05, -0.003753047902137041, -9.822363062994555e-05, -0.008706821128726006, -0.5659927725791931, -0.00018225439998786896, -0.055324554443359375, -0.0010301527800038457, -0.006838844623416662, -0.0009334497735835612, -0.2909928858280182, -0.08033716678619385, -0.9291622638702393, -0.0004663571889977902, -0.0005741854547522962, -0.0013629442546516657, -0.015351117588579655, -0.0004337085410952568, -0.0010668307077139616, -8.844937838148326e-05, -0.0002882065309677273, -0.0016182672698050737, -0.0007373951375484467, -3.190880060195923, -0.0004419303731992841, -0.0010214593494310975, -0.000402250443585217, -0.09125429391860962, -0.0014836505288258195, -0.06242454797029495, -0.00879273097962141, -0.12391918152570724, -0.006403286010026932, -0.0017982041463255882, -0.026186879724264145, -0.003563365899026394, -0.3365256190299988, -0.029057160019874573, -0.002365649910643697, -0.0006394725642167032, -0.005335377529263496, -0.24350503087043762, -0.002837562235072255, -0.0016722993459552526, -1.4181900024414062, -0.008937946520745754, -0.026850679889321327, -2.4786319732666016, -0.314673513174057, -0.001150541938841343, -0.008215324953198433, -0.39448291063308716, -0.2698054909706116, -0.012357809580862522, -1.5064541101455688], "finish_reason": "stop"}], "metrics": {"energy": 161.25372679710387, "energy_per_token": 1.1518123342650277, "time": 5.681881, "time_per_token": 0.040584864285714284}}
{"outputs": [{"text": "dirs_to_extract = []\n    zipfiles = []\n    zip_members = []\n    for path, dirs, files in os.walk(directory):\n        for file in files:\n            if re.match(pattern, file):\n                zipfiles.append(os.path.join(path, file))\n\n    for file in zipfiles:\n        with zipfile.ZipFile(file) as zip_file:\n            zip_members.append(zip_file.namelist()[0])\n\n    for filename in zip_members:\n        dirname = os.path.dirname(filename)\n        if dirname not in dirs_to_extract:\n            dirs_to_extract.append(dirname)\n\n    return dirs_to_extract", "tokens": ["dir", "s", "_", "to", "_", "extract", " =", " []", "\n", "    ", "zip", "files", " =", " []", "\n", "    ", "zip", "_", "members", " =", " []", "\n", "    ", "for", " path", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " re", ".", "match", "(", "pattern", ",", " file", "):", "\n", "                ", "zip", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "path", ",", " file", "))", "\n", "\n", "    ", "for", " file", " in", " zip", "files", ":", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "file", ")", " as", " zip", "_", "file", ":", "\n", "            ", "zip", "_", "members", ".", "append", "(", "zip", "_", "file", ".", "nam", "elist", "()[", "0", "])", "\n", "\n", "    ", "for", " filename", " in", " zip", "_", "members", ":", "\n", "        ", "dirname", " =", " os", ".", "path", ".", "dirname", "(", "filename", ")", "\n", "        ", "if", " dir", "name", " not", " in", " d", "irs", "_", "to", "_", "extract", ":", "\n", "            ", "dir", "s", "_", "to", "_", "extract", ".", "append", "(", "dirname", ")", "\n", "\n", "    ", "return", " d", "irs", "_", "to", "_", "extract", "\n", "\n", "if"], "logprobs": [-3.115609884262085, -0.3297586739063263, -2.109036922454834, -0.5894321203231812, -0.0008524598088115454, -0.18533354997634888, -0.08740319311618805, -0.06998313963413239, -0.011677835136651993, -0.24242468178272247, -2.9788291454315186, -1.5633277893066406, -0.12246877700090408, -1.138510823249817, -0.006354957818984985, -0.4331348240375519, -3.142698049545288, -1.3474502563476562, -4.474514007568359, -0.08029800653457642, -0.21087318658828735, -0.003975465893745422, -0.5386415123939514, -0.8098838329315186, -3.4698007106781006, -0.11293383687734604, -0.8154463768005371, -0.019574683159589767, -0.016093237325549126, -0.06608735769987106, -0.001522692502476275, -0.007444852497428656, -1.6093124941107817e-05, -0.0005881248507648706, -0.0022488560061901808, -0.004844001028686762, -0.047919172793626785, -0.016646182164549828, -0.005517729092389345, -0.320467084646225, -0.6275259256362915, -0.0575035959482193, -0.012228752486407757, -0.00023398046323563904, -0.0025888520758599043, -0.0023743314668536186, -0.4322645962238312, -0.34735214710235596, -4.672895011026412e-05, -0.6324056386947632, -0.0014729375252500176, -0.008640285581350327, -0.002131691901013255, -0.012781484052538872, -0.11632592231035233, -0.008768861182034016, -0.001964426366612315, -0.4208110570907593, -0.21407189965248108, -0.004941275343298912, -0.002872271928936243, -0.14642751216888428, -0.9315459132194519, -0.0005737089086323977, -0.0003680505615193397, -0.032224349677562714, -0.008969491347670555, -0.00010024998482549563, -0.036811813712120056, -0.00024577934527769685, -0.007398231420665979, -0.0012335318606346846, -0.0038742972537875175, -0.8146883845329285, -0.03679101541638374, -0.17031899094581604, -2.0217788219451904, -0.15715275704860687, -0.005300160031765699, -0.00013565097469836473, -0.0004070168943144381, -0.001261987374164164, -0.006325581111013889, -0.6464536786079407, -0.032643962651491165, -6.806619057897478e-05, -1.764281842042692e-05, -0.0011722128838300705, -0.002680877223610878, -0.0003810394846368581, -0.00035470392322167754, -0.004436175338923931, -1.0044833421707153, -0.0001479277852922678, -1.1145689487457275, -0.4678414463996887, -0.6603182554244995, -0.0017986800521612167, -0.0022693139035254717, -0.002397997537627816, -0.18606124818325043, -0.05429760739207268, -0.06231825798749924, -0.8366320133209229, -0.429617702960968, -0.13878828287124634, -0.1423662006855011, -0.034651875495910645, -0.0005178302526473999, -0.03914375975728035, -0.3834540843963623, -0.001531976624391973, -2.2215843200683594, -0.007372790016233921, -0.09194620698690414, -0.03308185189962387, -0.6778162717819214, -0.2424701452255249, -0.23815642297267914, -3.149364709854126, -0.4131094813346863, -0.036318305879831314, -0.01428203284740448, -5.9602869441732764e-05, -0.0012236495967954397, -0.0038727535866200924, -0.002206868724897504, -1.8833765983581543, -0.10029781609773636, -0.2932102084159851, -0.00012218205665703863, -0.004202582407742739, -0.004867608658969402, -0.584499716758728, -0.0003259842633269727, -0.02849852293729782, -0.010037658736109734, -0.053985364735126495, -0.026250284165143967, -0.8623384833335876, -0.36983099579811096, -0.000697846058756113, -0.08973563462495804, -1.0490362910786644e-05, -0.021191133186221123, -2.145764938177308e-06, -0.00012039413559250534, -1.0967194612021558e-05, -2.825220326485578e-05, -4.172316494077677e-06, -0.030965033918619156, -0.006925862282514572, -0.0012232924345880747, -0.10542375594377518, -0.0011255365097895265, -0.0002884448622353375, -9.929640509653836e-05, -1.2636104656849056e-05, -9.059865078597795e-06, -0.0007359656738117337, -0.0022895331494510174, -0.0008026715368032455, -0.01993548311293125, -0.005867400672286749, -0.0013642538106068969, -0.502435028553009, -0.032363664358854294, -0.15163908898830414, -0.2398834526538849, -8.22540732769994e-06, -6.508615479106084e-05, -6.556489552167477e-06, -1.0013530300057027e-05, -4.887569048150908e-06, -1.005689024925232, -0.010613895952701569, -0.7422910928726196], "finish_reason": "stop"}], "metrics": {"energy": 171.45614344501487, "energy_per_token": 0.9686787765255077, "time": 7.365916, "time_per_token": 0.041615344632768364}}
{"outputs": [{"text": "paths_to_extract = []\n    for path, dirs, files in os.walk(directory):\n        for filename in files:\n            match = re.match(pattern, filename)\n            if match:\n                dirname = os.path.join(path, match.group(1))\n                paths_to_extract.append(dirname)\n                zipfile.ZipFile(os.path.join(path, filename)).extractall(path=dirname)\n    return paths_to_extract", "tokens": ["paths", "_", "to", "_", "extract", " =", " []", "\n", "    ", "for", " path", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " files", ":", "\n", "            ", "match", " =", " re", ".", "match", "(", "pattern", ",", " filename", ")", "\n", "            ", "if", " match", ":", "\n", "                ", "dirname", " =", " os", ".", "path", ".", "join", "(", "path", ",", " match", ".", "group", "(", "1", "))", "\n", "                ", "paths", "_", "to", "_", "extract", ".", "append", "(", "dirname", ")", "\n", "                ", "zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", "))", ".", "extract", "all", "(", "path", "=", "dirname", ")", "\n", "    ", "return", " paths", "_", "to", "_", "extract", "\n", "\n", "if"], "logprobs": [-4.489717483520508, -2.508312702178955, -0.540694534778595, -0.0013892533024773002, -0.6798681020736694, -0.09004563093185425, -0.18260934948921204, -0.020668838173151016, -0.26748061180114746, -0.6346641182899475, -1.542952537536621, -1.4501022100448608, -1.0733416080474854, -0.015477893874049187, -0.0074394093826413155, -0.038538772612810135, -0.0019242119742557406, -0.010067635215818882, -8.821448318485636e-06, -0.0008708022069185972, -0.0018519884906709194, -0.004234040156006813, -0.04247472062706947, -0.024802720174193382, -0.006194913759827614, -0.26307374238967896, -1.4618237018585205, -0.0009698931244201958, -0.027192624285817146, -0.00014006110723130405, -0.0040646325796842575, -0.002512514591217041, -0.6508011221885681, -0.04041091352701187, -0.00506178755313158, -4.6967357775429264e-05, -1.1646648645401, -0.00044312194222584367, -0.006662772968411446, -0.0013875867007300258, -0.009659219533205032, -0.019257837906479836, -0.0020060669630765915, -0.019755976274609566, -0.016995970159769058, -0.03788406774401665, -0.24092888832092285, -0.008501528762280941, -0.0014023480471223593, -2.7577052116394043, -0.1013302132487297, -1.4979233741760254, -0.0005901502445340157, -0.0034604924730956554, -0.022001471370458603, -0.20327527821063995, -0.002761362586170435, -0.12568797171115875, -0.004845424555242062, -0.13950304687023163, -0.11394859850406647, -0.021405506879091263, -0.002936458447948098, -0.0025839770678430796, -0.03752210736274719, -0.010024558752775192, -0.009828153997659683, -1.340262532234192, -0.0001833270798670128, -1.2040065485052764e-05, -3.814689989667386e-06, -1.6927575416048057e-05, -0.003607196733355522, -0.003861234989017248, -0.03968376666307449, -0.01774471625685692, -0.003481757128611207, -0.0016299308044835925, -0.5681118369102478, -1.6706169843673706, -0.7738335132598877, -0.013087798841297626, -0.030978208407759666, -0.0002944036095868796, -0.0005227153305895627, -0.0015672078588977456, -0.3387451767921448, -0.00029690624796785414, -0.0006324436399154365, -0.0011629253858700395, -0.0008631794480606914, -0.00011181206355104223, -0.024952955543994904, -0.0003122795606032014, -0.006944567430764437, -0.33913546800613403, -0.01251063123345375, -0.00016139635408762842, -0.00040046300273388624, -0.0076733119785785675, -0.6349346041679382, -0.15631838142871857, -0.07624325156211853, -0.008990639820694923, -0.02093714103102684, -0.6292020678520203, -0.03508681431412697, -0.15183964371681213, -0.0006528153317049146, -8.272782724816352e-05, -1.4305012882687151e-05, -3.015949550899677e-05, -0.9489589929580688, -0.022575868293642998, -0.8797308802604675], "finish_reason": "stop"}], "metrics": {"energy": 109.65864677143097, "energy_per_token": 0.9535534501863562, "time": 4.6415844, "time_per_token": 0.04036160347826087}}
{"outputs": [{"text": "result_dirs = []\n    for root, dirs, files in os.walk(directory, topdown=False):\n        for file in files:\n            if re.match(pattern, file):\n                # Split the filename using \"-\" as the delimiter\n                name, number = file.split(\"-\", 1)\n\n                # Use the prefix part of the filename as the directory to extract the file\n                result_dirs.append(os.path.join(root, name))\n\n                # Extract the file into the directory using the unzip method\n                with zipfile.ZipFile(os.path.join(root, file), 'r') as zip_ref:\n                    zip_ref.extractall(os.path.join(root, name))\n\n                # Remove the extracted files\n                os.remove(os.path.join(root, file))\n    return result_dirs", "tokens": ["result", "_", "dir", "s", " =", " []", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", ",", " top", "down", "=", "False", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " re", ".", "match", "(", "pattern", ",", " file", "):", "\n", "                ", "#", " Split", " the", " filename", " using", " \"", "-", "\"", " as", " the", " del", "im", "iter", "\n", "                ", "name", ",", " number", " =", " file", ".", "split", "(", "\"", "-", "\"", ",", " ", "1", ")", "\n", "\n", "                ", "#", " Use", " the", " prefix", " part", " of", " the", " filename", " as", " the", " directory", " to", " extract", " the", " file", "\n", "                ", "result", "_", "dir", "s", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " name", "))", "\n", "\n", "                ", "#", " Ext", "ract", " the", " file", " into", " the", " directory", " using", " the", " un", "zip", " method", "\n", "                ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", ")", ",", " '", "r", "')", " as", " zip", "_", "ref", ":", "\n", "                ", "    ", "zip", "_", "ref", ".", "extract", "all", "(", "os", ".", "path", ".", "join", "(", "root", ",", " name", "))", "\n", "\n", "                ", "#", " Remove", " the", " extracted", " files", "\n", "                ", "os", ".", "remove", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", "))", "\n", "    ", "return", " result", "_", "dir", "s", "\n", "\n", "if"], "logprobs": [-2.9423882961273193, -1.977440595626831, -0.34210896492004395, -0.10387212038040161, -0.025362960994243622, -0.08017610013484955, -0.012911529280245304, -0.31988972425460815, -0.8026272654533386, -1.63978910446167, -0.008111628703773022, -0.3228382170200348, -0.0014550823252648115, -0.0017792837461456656, -0.06283436715602875, -0.0018340209499001503, -0.008694176562130451, -8.940656698541716e-06, -0.00034195298212580383, -0.002310228068381548, -0.0061058178544044495, -2.7198057174682617, -0.05884820222854614, -0.004140377044677734, -0.0023029730655252934, -0.9277541637420654, -0.002006423892453313, -0.015332217328250408, -0.005982113536447287, -0.24311640858650208, -0.9545344114303589, -0.1806447058916092, -0.03420868143439293, -0.00023016665363684297, -0.004493853077292442, -0.00227656913921237, -1.3164857625961304, -0.12534141540527344, -4.339123915997334e-05, -0.577566921710968, -0.0007855190197005868, -0.0070079006254673, -0.0024305821862071753, -0.011861979030072689, -0.15405438840389252, -0.01673961989581585, -0.004436649847775698, -3.666323661804199, -0.7134747505187988, -0.2730664908885956, -0.12296931445598602, -2.1912763118743896, -1.7950890064239502, -0.003968935459852219, -0.0003756771038752049, -0.9664824604988098, -0.24967065453529358, -0.4644281268119812, -0.003532005939632654, -0.0017254954436793923, -1.23618483543396, -0.0005721600609831512, -3.778054714202881, -0.835088849067688, -2.8549370765686035, -0.12788382172584534, -0.5844277143478394, -0.002434268593788147, -0.44867271184921265, -0.5557089447975159, -0.02341233380138874, -0.0013956816401332617, -8.177422569133341e-05, -0.09952770173549652, -0.19022613763809204, -0.020531507208943367, -0.006763896439224482, -0.011334197595715523, -1.5463478565216064, -0.0007913556764833629, -0.09309609234333038, -2.272047996520996, -0.03137581795454025, -0.11736990511417389, -0.22056148946285248, -0.18626748025417328, -0.004827510565519333, -0.02189534530043602, -0.01516350544989109, -0.024158040061593056, -0.05551120638847351, -0.598242461681366, -0.012181175872683525, -1.693703293800354, -0.6111831665039062, -0.07498090714216232, -0.0004629017203114927, -1.8062093257904053, -0.01834731362760067, -0.003480806713923812, -0.40234696865081787, -0.0029463237151503563, -0.00359745672903955, -0.009387282654643059, -0.16042658686637878, -0.0003922408213838935, -0.0012444854946807027, -0.028941242024302483, -0.023870114237070084, -0.00037949037505313754, -0.1443672925233841, -0.01312944944947958, -0.06435403972864151, -0.0687098577618599, -0.002024626126512885, -0.303536981344223, -0.054251763969659805, -0.16194944083690643, -1.0022550821304321, -0.006949657574295998, -0.031973376870155334, -0.1334952414035797, -2.6598031520843506, -0.10898954421281815, -0.35294029116630554, -2.9426634311676025, -0.5411117672920227, -4.108019828796387, -0.07179249823093414, -2.3332080841064453, -0.4882197678089142, -0.003379825735464692, -0.7084501385688782, -0.03257104009389877, -9.572047565598041e-05, -1.7165990357170813e-05, -0.00330901425331831, -0.0005943200667388737, -0.0001401803019689396, -0.0022116266191005707, -0.05184289067983627, -0.0002723561483435333, -0.0001734344696160406, -0.0025517542380839586, -0.00013696208770852536, -8.67805938469246e-05, -0.010635362938046455, -0.00026603974401950836, -0.00768277607858181, -0.34066563844680786, -0.00020966715237591416, -0.23328953981399536, -0.0024867109023034573, -0.0065535856410861015, -0.0003036991402041167, -0.10913234949111938, -0.07066404074430466, -0.4073459804058075, -0.0005700155161321163, -0.0008870004676282406, -0.0004552758182398975, -0.001699790358543396, -0.01062580943107605, -0.00023993951617740095, -0.0006694936309941113, -3.242440288886428e-05, -0.00034028460504487157, -0.0011441120877861977, -0.012104860506951809, -0.8819575905799866, -0.0011688789818435907, -8.11782301752828e-05, -0.00028010259848088026, -0.020201412960886955, -0.00017069313616957515, -0.024161530658602715, -0.002266340423375368, -0.013102740980684757, -0.030137639492750168, -0.004343955311924219, -0.19174091517925262, -0.3365623950958252, -0.16902178525924683, -0.3774789869785309, -0.016906073316931725, -1.074265480041504, -1.4276400804519653, -1.2198522090911865, -0.0011593532981351018, -1.4397090673446655, -1.9550132492440753e-05, -0.11119171231985092, -0.0005595310358330607, -0.008225138299167156, -0.0002127659390680492, -2.4914430468925275e-05, -0.0005526207387447357, -0.00015805903240107, -2.825220326485578e-05, -0.002137401606887579, -4.9470632802695036e-05, -0.031091811135411263, -0.00033444532891735435, -0.00249396450817585, -1.956117868423462, -0.06897515058517456, -0.13833516836166382, -5.781483559985645e-05, -4.7205765440594405e-05, -6.318072337307967e-06, -0.8475017547607422, -0.014002886600792408, -0.8724130392074585], "finish_reason": "stop"}], "metrics": {"energy": 225.46507158946997, "energy_per_token": 1.0585214628613613, "time": 9.052966, "time_per_token": 0.04250218779342723}}
{"outputs": [{"text": "zip_files = []\n    for file_name in os.listdir(directory):\n        if re.match(pattern, file_name):\n            zip_files.append(os.path.join(directory, file_name))\n\n    unzipped_directories = []\n    for file_name in zip_files:\n        zip_ref = zipfile.ZipFile(file_name)\n        zip_ref.extractall(directory)\n        unzipped_directories.append(os.path.splitext(file_name)[0])\n\n    return unzipped_directories, zip_files", "tokens": ["zip", "_", "files", " =", " []", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " re", ".", "match", "(", "pattern", ",", " file", "_", "name", "):", "\n", "            ", "zip", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", "_", "name", "))", "\n", "\n", "    ", "un", "z", "ipped", "_", "direct", "ories", " =", " []", "\n", "    ", "for", " file", "_", "name", " in", " zip", "_", "files", ":", "\n", "        ", "zip", "_", "ref", " =", " zip", "file", ".", "Z", "ip", "File", "(", "file", "_", "name", ")", "\n", "        ", "zip", "_", "ref", ".", "extract", "all", "(", "directory", ")", "\n", "        ", "un", "z", "ipped", "_", "direct", "ories", ".", "append", "(", "os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "name", ")[", "0", "])", "\n", "\n", "    ", "return", " un", "z", "ipped", "_", "direct", "ories", ",", " zip", "_", "files", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.173448324203491, -0.33895227313041687, -0.4995873272418976, -0.040885698050260544, -0.6074958443641663, -0.015375652350485325, -0.16495496034622192, -0.8258464932441711, -1.4699864387512207, -1.4561532735824585, -0.1440468579530716, -0.01377833727747202, -0.02988266944885254, -2.0861407392658293e-05, -0.0009647720726206899, -8.4638240878121e-06, -0.0011555430246517062, -0.0015372138004750013, -0.0004818470624741167, -0.006850447505712509, -0.0032644574530422688, -0.5701796412467957, -0.13229075074195862, -2.3603161025675945e-05, -0.6026504039764404, -0.0006121906917542219, -0.0045648179948329926, -0.0024901593569666147, -0.005091439001262188, -2.145764938177308e-06, -2.658331868587993e-05, -0.1330098658800125, -0.009805017150938511, -0.0032972514163702726, -0.7325981259346008, -0.008003545925021172, -0.08083383738994598, -0.003724900772795081, -0.0033786376006901264, -0.06120339035987854, -1.2348952293395996, -0.0009870424401015043, -0.00021789084712509066, -0.013475293293595314, -0.01509164460003376, -0.000125281119835563, -0.0008641323074698448, -0.00012420836719684303, -0.004910314455628395, -8.22540732769994e-06, -2.5152843591058627e-05, -0.0007189311436377466, -0.0020982648711651564, -0.44669488072395325, -0.002193308901041746, -3.727079153060913, -0.8440799117088318, -0.0231451615691185, -0.0826285108923912, -1.2326700687408447, -0.0011560192797333002, -0.0023369877599179745, -0.043513644486665726, -0.0017952292691916227, -0.07406894862651825, -0.026527076959609985, -1.4161348342895508, -0.4169548451900482, -0.2711409330368042, -0.0013561585219576955, -0.00312958681024611, -0.00011586471373448148, -2.372236667724792e-05, -0.00022396916756406426, -0.0007981451926752925, -0.006280092056840658, -1.9256398677825928, -0.032728876918554306, -0.3817373514175415, -0.000962151971179992, -0.002309633418917656, -6.318072337307967e-06, -9.179073458653875e-06, -0.005432723090052605, -0.0001461399078834802, -0.00015186110977083445, -0.00023195437097456306, -0.003188884584233165, -0.00037448544753715396, -6.437094270950183e-05, -0.38154837489128113, -0.005276799667626619, -0.015510759316384792, -0.3801618814468384, -0.0017445358680561185, -0.020945779979228973, -0.001046348363161087, -0.0002686616498976946, -0.0003426679759286344, -0.295270711183548, -0.6125345230102539, -0.1406380832195282, -0.024822605773806572, -0.02241443656384945, -0.5199804902076721, -0.009820717386901379, -0.00020704510097857565, -0.0024580522440373898, -0.03948897495865822, -3.58813522325363e-05, -0.0008923601126298308, -0.002120985882356763, -0.007282733917236328, -0.41412368416786194, -0.004649898037314415, -0.00047434045700356364, -0.0034029928501695395, -0.9629055857658386, -3.349725011503324e-05, -4.887569048150908e-06, -0.0008887869771569967, -0.336337685585022, -6.97350042173639e-05, -0.0013900866033509374, -0.040975410491228104, -0.0025481870397925377, -0.06157178804278374, -0.01377434004098177, -0.6744939684867859, -0.02514234371483326, -0.05489460378885269, -0.1599503606557846, -0.002665421459823847, -0.00010382589971413836, -3.266281055402942e-05, -6.353653589030728e-05, -1.6689160474925302e-05, -0.8363099098205566, -0.1280221790075302, -0.0007670559571124613, -0.003567404579371214, -1.2393487691879272, -3.576278118089249e-07, -4.768370445162873e-07, -2.8371408916427754e-05, -0.0003999863693024963, -0.17262253165245056], "finish_reason": "stop"}], "metrics": {"energy": 161.09991303634646, "energy_per_token": 1.095917775757459, "time": 6.1119604, "time_per_token": 0.04157796190476191}}
{"outputs": [{"text": "# Find all zip files in the directory\n    zip_files = [f for f in os.listdir(directory) if f.endswith(\".zip\")]\n    dirs = []\n\n    # Unzip each zip file and return a list of the directories extracted\n    for f in zip_files:\n        match = re.match(pattern, f)\n        if match is not None:\n            zip_file = os.path.join(directory, f)\n            dirname = match.group(1)\n            zipfile.ZipFile(zip_file).extractall(dirname)\n            dirs.append(dirname)\n\n    return dirs", "tokens": ["#", " Find", " all", " zip", " files", " in", " the", " directory", "\n", "    ", "zip", "_", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "directory", ")", " if", " f", ".", "end", "sw", "ith", "(", "\"", ".", "zip", "\"", ")]", "\n", "    ", "dir", "s", " =", " []", "\n", "\n", "    ", "#", " Un", "zip", " each", " zip", " file", " and", " return", " a", " list", " of", " the", " directories", " extracted", "\n", "    ", "for", " f", " in", " zip", "_", "files", ":", "\n", "        ", "match", " =", " re", ".", "match", "(", "pattern", ",", " f", ")", "\n", "        ", "if", " match", " is", " not", " None", ":", "\n", "            ", "zip", "_", "file", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " f", ")", "\n", "            ", "dirname", " =", " match", ".", "group", "(", "1", ")", "\n", "            ", "zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", ")", ".", "extract", "all", "(", "dirname", ")", "\n", "            ", "dir", "s", ".", "append", "(", "dirname", ")", "\n", "\n", "    ", "return", " d", "irs", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.251075506210327, -3.343215227127075, -0.09633336216211319, -0.4433401823043823, -0.037809114903211594, -0.14391452074050903, -0.11220408231019974, -0.16753527522087097, -0.4811677634716034, -0.004168037325143814, -0.32854539155960083, -0.17221610248088837, -0.06794141978025436, -0.004778513219207525, -0.39488860964775085, -0.8183169364929199, -0.013712609186768532, -0.0003943857445847243, -0.0007557396893389523, -0.03476275876164436, -1.6093124941107817e-05, -0.0008006466086953878, -4.0531076592742465e-06, -0.0009087961516343057, -0.000940714729949832, -0.000556314189452678, -0.018663277849555016, -0.7987852096557617, -0.01126017514616251, -0.10043194890022278, -2.729855441430118e-05, 0.0, -1.5701501369476318, -0.009927895851433277, -0.012392778880894184, -0.0008406681008636951, -5.793403761344962e-05, -0.11280083656311035, -0.0015444743912667036, -1.6348267793655396, -2.289421796798706, -0.10444475710391998, -0.24947533011436462, -0.06546953320503235, -0.08716569095849991, -0.4627145528793335, -0.0005555993411689997, -0.42441901564598083, -0.9372560381889343, -0.003882015822455287, -0.3285292685031891, -0.15506677329540253, -0.002241838490590453, -1.656127691268921, -4.019054412841797, -1.5086442232131958, -0.12227712571620941, -0.03165038675069809, -2.3123958110809326, -0.4760698080062866, -2.619300365447998, -0.10844174772500992, -0.004464658442884684, -0.01766870729625225, -1.6446832418441772, -0.04317483678460121, -0.004030557814985514, -7.390703103737906e-05, -2.6940935640595853e-05, -0.00019131260341964662, -0.0002847504511009902, -0.006530373357236385, -1.6074234247207642, -0.030447009950876236, -0.003804827108979225, -3.480850500636734e-05, -1.5103524923324585, -0.0007668177131563425, -0.010441201739013195, -0.00046754872892051935, -0.022651854902505875, -0.008552826009690762, -0.004651559051126242, -0.019284147769212723, -0.13430458307266235, -0.0817398726940155, -2.514091968536377, -0.46688413619995117, -3.6238969187252223e-05, -0.013287916779518127, -0.009019466117024422, -0.001558043179102242, -2.4325919151306152, -0.042825181037187576, -1.2597742080688477, -0.25520285964012146, -0.119501031935215, -0.0007058274932205677, -4.053033626405522e-05, -0.029396845027804375, -0.0012724645202979445, -8.21318244561553e-05, -0.0009440494468435645, -0.00010108436981681734, -0.0060991826467216015, -0.00017474555352237076, -0.007177401799708605, -0.01436217688024044, -2.077589511871338, -0.012908469885587692, -0.2515490651130676, -0.07006027549505234, -0.01947566494345665, -0.0004694551753345877, -0.00134151556994766, -0.0003719830128829926, -0.04552470147609711, -0.04662327095866203, -2.720122814178467, -1.0294095277786255, -0.0011784045491367579, -0.017816971987485886, -0.0004070168943144381, -0.0011874536285176873, -0.00040725519647821784, -0.0019414640264585614, -0.0011844770051538944, -1.6331539882230572e-05, -0.8870431780815125, -0.014470632188022137, -0.00010084597306558862, -3.3378044463461265e-05, -0.012960600666701794, -1.3496270179748535, -0.0035086043644696474, -0.01277053914964199, -0.013998889364302158, -0.1089959591627121, -0.0003406421164982021, -0.0019131468143314123, -0.0007540719816461205, -0.0009672730811871588, -0.049564339220523834, -0.0027757470961660147, -0.0042291730642318726, -0.4235125482082367, -0.011327597312629223, -0.040086060762405396, -0.10359959304332733, -5.245195097813848e-06, -1.0549553632736206, -1.311301275563892e-06, -5.960462772236497e-07, -1.2397689715726301e-05, -0.00021824838768225163, -0.3097856044769287], "finish_reason": "stop"}], "metrics": {"energy": 196.01224210929877, "energy_per_token": 1.2564887314698638, "time": 6.531093, "time_per_token": 0.04186598076923077}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        return (None, [])\n    dirs = []\n    for filepath in os.listdir(directory):\n        match = re.search(pattern, filepath)\n        if match:\n            prefix = match.group(1)\n            dirs.append(prefix)\n            zipfile.ZipFile(filepath, 'r').extractall(prefix)\n    return (directory, dirs)", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "return", " (", "None", ",", " [", "])", "\n", "    ", "dir", "s", " =", " []", "\n", "    ", "for", " file", "path", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "match", " =", " re", ".", "search", "(", "pattern", ",", " file", "path", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "prefix", " =", " match", ".", "group", "(", "1", ")", "\n", "            ", "dir", "s", ".", "append", "(", "prefix", ")", "\n", "            ", "zip", "file", ".", "Z", "ip", "File", "(", "file", "path", ",", " '", "r", "')", ".", "extract", "all", "(", "prefix", ")", "\n", "    ", "return", " (", "directory", ",", " d", "irs", ")", "\n", "\n", "def"], "logprobs": [-2.945014715194702, -0.16450545191764832, -0.22337135672569275, -0.00012790338951162994, -0.003135290928184986, -0.019581930711865425, -1.1715551614761353, -0.0011177966371178627, -0.0032346330117434263, -0.0734221488237381, -0.018370019271969795, -0.002446041675284505, -1.1565322875976562, -2.1975603103637695, -1.1020264625549316, -0.0004861365014221519, -0.30333876609802246, -0.2025785893201828, -0.0072286492213606834, -1.1008715629577637, -2.819474220275879, -0.3140462040901184, -0.13817040622234344, -0.09827476739883423, -0.011889545246958733, -0.0850202888250351, -0.3230213522911072, -1.650301456451416, -2.772556781768799, -0.46792611479759216, -0.4460887312889099, -0.005719486624002457, -0.0019189768936485052, -6.437280717364047e-06, -0.0008993871742859483, -0.00102646101731807, -0.0004638549580704421, -0.004424900282174349, -0.0018527023494243622, -0.9601800441741943, -0.020172322168946266, -0.004328287672251463, -3.40932747349143e-05, -0.5560898184776306, -0.0009623901569284499, -0.005938741844147444, -0.0028654965572059155, -0.01936681568622589, -1.2397689715726301e-05, -0.025432925671339035, -0.0029855461325496435, -0.006231639534235001, -0.02782445400953293, -0.12007389217615128, -0.21303384006023407, -0.007035363931208849, -0.0009348789462819695, -1.0619536638259888, -0.2291288822889328, -0.0689077228307724, -0.0748540461063385, -0.022910889238119125, -0.0021999699529260397, -0.001606365549378097, -0.00018535325943958014, -0.01769283413887024, -0.013520690612494946, -1.6068642139434814, -0.13996994495391846, -0.006264691706746817, -0.005189401097595692, -0.032978277653455734, -0.6616266965866089, -0.03256457671523094, -0.010248182341456413, -0.12263530492782593, -1.6781249046325684, -0.9100217223167419, -0.008191087283194065, -0.03581995889544487, -0.00047541281674057245, -0.0005523824947886169, -0.004343243315815926, -0.5412705540657043, -0.0009981179609894753, -0.9488388299942017, -0.07529540359973907, -0.005015767179429531, -0.010604342445731163, -0.017127225175499916, -0.00026055757189169526, -8.34430247778073e-05, -0.04714913293719292, -0.25121185183525085, -0.0994538813829422, -0.01527856569737196, -0.12234874814748764, -0.02858668938279152, -0.11701683700084686, -0.771649181842804, -0.012091080658137798, -0.011343508958816528, -9.536738616588991e-07, -0.32055655121803284, -0.26756396889686584, -0.01641988195478916, -1.220430612564087], "finish_reason": "stop"}], "metrics": {"energy": 92.3181178073883, "energy_per_token": 0.862786147732601, "time": 4.218002, "time_per_token": 0.03942057943925234}}
{"outputs": [{"text": "res = []\n    files = os.listdir(directory)\n    for file in files:\n        if re.match(pattern, file):\n            split_filename = file.rsplit('-', 1)\n            prefix = split_filename[0]\n            if not os.path.exists(prefix):\n                os.makedirs(prefix)\n            with zipfile.ZipFile(directory + '/' + file, 'r') as zip_ref:\n                zip_ref.extractall(prefix)\n                res.append(prefix)\n    return res", "tokens": ["res", " =", " []", "\n", "    ", "files", " =", " os", ".", "list", "dir", "(", "directory", ")", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "if", " re", ".", "match", "(", "pattern", ",", " file", "):", "\n", "            ", "split", "_", "filename", " =", " file", ".", "r", "split", "('", "-'", ",", " ", "1", ")", "\n", "            ", "prefix", " =", " split", "_", "filename", "[", "0", "]", "\n", "            ", "if", " not", " os", ".", "path", ".", "exists", "(", "prefix", "):", "\n", "                ", "os", ".", "m", "aked", "irs", "(", "prefix", ")", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "directory", " +", " '/", "'", " +", " file", ",", " '", "r", "')", " as", " zip", "_", "ref", ":", "\n", "                ", "zip", "_", "ref", ".", "extract", "all", "(", "prefix", ")", "\n", "                ", "res", ".", "append", "(", "prefix", ")", "\n", "    ", "return", " res", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.9038941860198975, -0.11412845551967621, -0.06614615768194199, -0.010937736369669437, -0.18562479317188263, -2.7888808250427246, -0.0778256356716156, -0.9903735518455505, -6.818538531661034e-05, -0.025409914553165436, -2.002696055569686e-05, -0.001430679694749415, -0.002181057119742036, -0.0005526207387447357, -0.011640130542218685, -0.23147079348564148, -0.5481929183006287, -0.8078354001045227, -0.07196656614542007, -0.009092590771615505, -0.0007524043321609497, -0.003235821146517992, -0.00495005352422595, -0.886360228061676, -0.2930241823196411, -4.8040190449682996e-05, -0.4896087646484375, -0.0011606630869209766, -0.006387769244611263, -0.005999532528221607, -0.014772905968129635, -0.17401064932346344, -0.01032357756048441, -0.0035493490286171436, -3.3691248893737793, -1.0768133401870728, -2.5234718322753906, -0.009261502884328365, -0.41913288831710815, -0.006126197054982185, -1.5176007747650146, -0.04699241742491722, -0.6982095837593079, -0.037302203476428986, -0.00013553177996072918, -0.09141858667135239, -0.025715753436088562, -0.7177932262420654, -0.03093983791768551, -0.006453980691730976, -2.2628045082092285, -0.18286395072937012, -0.03980932757258415, -2.109982233378105e-05, -3.111314072157256e-05, -0.010372067801654339, -0.001189835020340979, -0.0012571059633046389, -0.03158744052052498, -0.027502790093421936, -1.1716071367263794, -0.5046319961547852, -0.0932239219546318, -2.682172998902388e-05, -0.0002195594133809209, -0.006365618668496609, -0.6747906804084778, -0.0015448314370587468, -0.12204903364181519, -0.014221038669347763, -0.019784143194556236, -0.001474485034123063, -0.07652001827955246, -0.00015889335190877318, -0.6971862316131592, -0.00014649749209638685, -0.00368131254799664, -0.00018082413589581847, -0.00566401332616806, -0.022061992436647415, -0.00433386629447341, -0.08919387310743332, -0.5833194255828857, -0.03270476683974266, -3.540453326422721e-05, -2.5987286790041253e-05, -0.003586528589949012, -0.00039843725971877575, -0.00018130090029444546, -0.008714147843420506, -1.9387316703796387, -0.12399500608444214, -0.2103281319141388, -0.0054848892614245415, -0.000533795915544033, -0.012821617536246777, -0.2199683040380478, -0.048958927392959595, -0.0017354916781187057, -0.008296903222799301, -0.000501983508002013, -0.2756410837173462, -0.0761268213391304, -0.15441270172595978, -0.0008172033121809363, -0.0010145523119717836, -0.0017229963559657335, -0.012043733149766922, -0.00046004203613847494, -0.0004648081958293915, -5.1973900554003194e-05, -0.00020823694649152458, -0.000995974289253354, -0.00990535132586956, -0.024769578129053116, -0.017438186332583427, -0.013837830163538456, -1.6948277950286865, -0.0640772357583046, -0.011130858212709427, -0.0013437775196507573, -0.010987494140863419, -0.05611300468444824, -0.009768067859113216, -0.008175834082067013, -0.24199755489826202, -0.03079870715737343, -0.17642074823379517, -1.0227415561676025, -1.9073468138230965e-06, -9.536738616588991e-07, -2.8132995794294402e-05, -0.0002643712505232543, -0.16599757969379425], "finish_reason": "stop"}], "metrics": {"energy": 152.91839820861824, "energy_per_token": 1.1411820761837181, "time": 5.4781423, "time_per_token": 0.04088165895522388}}
{"outputs": [{"text": "# Find all zip files in the directory with the specified pattern.\n    zip_files = [f for f in os.listdir(directory) if re.search(pattern, f)]\n\n    # For each zip file, extract it to a new directory with the same prefix as the zip file name.\n    result = []\n    for file in zip_files:\n        prefix = file.rsplit(\"-\", 1)[0]\n        directory = f\"{directory}/{prefix}\"\n        if not os.path.exists(directory):\n            os.mkdir(directory)\n\n        with zipfile.ZipFile(f\"{directory}/{file}\")\n        result.append(directory)\n    return result", "tokens": ["#", " Find", " all", " zip", " files", " in", " the", " directory", " with", " the", " specified", " pattern", ".", "\n", "    ", "zip", "_", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "directory", ")", " if", " re", ".", "search", "(", "pattern", ",", " f", ")]", "\n", "\n", "    ", "#", " For", " each", " zip", " file", ",", " extract", " it", " to", " a", " new", " directory", " with", " the", " same", " prefix", " as", " the", " zip", " file", " name", ".", "\n", "    ", "result", " =", " []", "\n", "    ", "for", " file", " in", " zip", "_", "files", ":", "\n", "        ", "prefix", " =", " file", ".", "r", "split", "(", "\"", "-", "\"", ",", " ", "1", ")[", "0", "]", "\n", "        ", "directory", " =", " f", "\"", "{", "directory", "}/{", "prefix", "}\"", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "            ", "os", ".", "mk", "dir", "(", "directory", ")", "\n", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "f", "\"", "{", "directory", "}/{", "file", "}\"", ")", "\n", "        ", "result", ".", "append", "(", "directory", ")", "\n", "    ", "return", " result", "\n", "\n", "if"], "logprobs": [-2.251075506210327, -3.343215227127075, -0.09633336216211319, -0.4433401823043823, -0.037809114903211594, -0.14391452074050903, -0.11220408231019974, -0.16753527522087097, -3.2598180770874023, -0.4193272888660431, -1.2220702171325684, -0.06942944973707199, -1.8588889837265015, -0.009820717386901379, -0.006193729117512703, -0.5265207290649414, -0.22588902711868286, -0.10364258289337158, -0.00702104065567255, -0.40495333075523376, -0.8196340203285217, -0.019115867093205452, -0.0006287504802457988, -0.0007359656738117337, -0.042523160576820374, -1.3351351299206726e-05, -0.000972036796156317, -3.6954811548639555e-06, -0.0010904086520895362, -0.001473889802582562, -0.00031668893643654883, -0.022942928597331047, -0.15746189653873444, -1.847726889536716e-05, -1.111817479133606, -0.0012878228444606066, -0.007730921730399132, -0.0010715939570218325, -0.04075741022825241, -0.06908362358808517, -0.0009899006690829992, -0.18769322335720062, -0.0003890234511345625, -0.21821868419647217, -3.9212472438812256, -0.055384669452905655, -0.08634711802005768, -0.005860882345587015, -0.06450203061103821, -0.6675990223884583, -0.5043684840202332, -0.5167251825332642, -0.22033236920833588, -0.8696675300598145, -0.028226561844348907, -1.1605515480041504, -0.06869695335626602, -0.7227323651313782, -0.5449525117874146, -0.5822961926460266, -0.042419418692588806, -1.299920916557312, -0.08207069337368011, -1.22841477394104, -0.1170976385474205, -0.0021291938610374928, -0.0029822182841598988, -2.520989418029785, -0.11949341744184494, -0.04507923871278763, -0.004205906298011541, -0.03015938587486744, -0.013290151953697205, -2.0359461307525635, -0.09769176691770554, -0.0024798137601464987, -0.00011038171214750037, -2.6225699912174605e-05, -0.00017021637177094817, -0.0006210067658685148, -0.008520321920514107, -1.3851001262664795, -0.8050354719161987, -1.1053359508514404, -0.1237640455365181, -1.920727014541626, -0.09194609522819519, -0.704394519329071, -0.02969973161816597, -0.04254898056387901, -0.00028165188268758357, -0.008361687883734703, -0.09329483658075333, -0.010046156123280525, -0.010905309580266476, -0.000704278820194304, -0.004792749881744385, -0.07041453570127487, -0.014390496537089348, -1.8827601671218872, -0.1511554718017578, -1.3265329599380493, -0.18394500017166138, -0.013517750427126884, -0.0700969472527504, -0.11646907031536102, -0.03431270271539688, -0.08514203876256943, -0.010270247235894203, -0.06260014325380325, -1.317466139793396, -0.13705822825431824, -0.00346666993573308, -1.7165990357170813e-05, -0.00016830935783218592, -0.005593007896095514, -0.1944824904203415, -8.451581379631534e-05, -0.002163928234949708, -0.0020249830558896065, -0.01950863189995289, -0.003568473504856229, -0.030586224049329758, -0.0001472126314183697, -1.2474703788757324, -1.5020257706055418e-05, -0.0002131234941771254, -0.0013486584648489952, -0.0014321081107482314, -0.007134911138564348, -1.7004038095474243, -0.004585584159940481, -0.5412761569023132, -0.014135593548417091, -1.585470999998506e-05, -1.3947389561508317e-05, -0.003636416047811508, -0.000537727726623416, -7.486063259420916e-05, -0.001258891774341464, -0.21397066116333008, -0.07071724534034729, -0.0012618682812899351, -0.010604459792375565, -0.007891429588198662, -0.002886892529204488, -0.00949143711477518, -1.3267953395843506, -0.5094948410987854, -0.6138931512832642, -1.4622153043746948, -0.017307909205555916, -0.01009985338896513, -0.04275117069482803, -0.11017809808254242, -0.02252831496298313, -0.04848909750580788, -1.2686785459518433, -0.05277703329920769, -0.20081727206707, -0.6310206055641174, -0.03506782278418541, -0.7571218609809875], "finish_reason": "stop"}], "metrics": {"energy": 175.85772078895576, "energy_per_token": 1.0788817226316305, "time": 6.7396965, "time_per_token": 0.04134783128834356}}
{"outputs": [{"text": "pattern = re.compile(pattern)\n    zip_dirs = []\n\n    for root, _, files in os.walk(directory):\n        for f in files:\n            match = pattern.match(f)\n            if not match:\n                continue\n            zip_name = os.path.join(root, f)\n            dirname = match.group(1)\n            dirname = os.path.join(directory, dirname)\n            dirname = os.path.normpath(dirname)\n            dirname = os.path.realpath(dirname)\n            dirname = os.path.normpath(dirname)\n            dirname = os.path.realpath(dirname)\n            dirname = os.path.normpath(dirname)\n\n            if not os.path.exists(dirname):\n                os.makedirs(dirname)\n\n            with zipfile.ZipFile(zip_name) as zf:\n                zf.extractall(path=dirname)\n\n            zip_dirs.append(dirname)\n\n    return zip_dirs", "tokens": ["pattern", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "    ", "zip", "_", "dir", "s", " =", " []", "\n", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " f", " in", " files", ":", "\n", "            ", "match", " =", " pattern", ".", "match", "(", "f", ")", "\n", "            ", "if", " not", " match", ":", "\n", "                ", "continue", "\n", "            ", "zip", "_", "name", " =", " os", ".", "path", ".", "join", "(", "root", ",", " f", ")", "\n", "            ", "dirname", " =", " match", ".", "group", "(", "1", ")", "\n", "            ", "dirname", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " dir", "name", ")", "\n", "            ", "dirname", " =", " os", ".", "path", ".", "norm", "path", "(", "dirname", ")", "\n", "            ", "dirname", " =", " os", ".", "path", ".", "real", "path", "(", "dirname", ")", "\n", "            ", "dirname", " =", " os", ".", "path", ".", "norm", "path", "(", "dirname", ")", "\n", "            ", "dirname", " =", " os", ".", "path", ".", "real", "path", "(", "dirname", ")", "\n", "            ", "dirname", " =", " os", ".", "path", ".", "norm", "path", "(", "dirname", ")", "\n", "\n", "            ", "if", " not", " os", ".", "path", ".", "exists", "(", "dirname", "):", "\n", "                ", "os", ".", "m", "aked", "irs", "(", "dirname", ")", "\n", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "name", ")", " as", " z", "f", ":", "\n", "                ", "z", "f", ".", "extract", "all", "(", "path", "=", "dirname", ")", "\n", "\n", "            ", "zip", "_", "dir", "s", ".", "append", "(", "dirname", ")", "\n", "\n", "    ", "return", " zip", "_", "dir", "s", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.7699735164642334, -0.08956016600131989, -0.13809512555599213, -0.0002611534437164664, -0.012752531096339226, -0.002795242937281728, -0.01464251521974802, -0.02159031853079796, -0.008733765222132206, -0.19750456511974335, -2.300607204437256, -0.30195656418800354, -2.1380465030670166, -0.0832718014717102, -0.01992473192512989, -0.2776520848274231, -0.010798354633152485, -1.2419012784957886, -0.00028224775451235473, -0.19324851036071777, -1.4328845739364624, -0.0037488911766558886, -1.3522018194198608, -0.08101490885019302, -0.12046709656715393, -0.0011049362365156412, -0.007176810409873724, -7.271740287251305e-06, -0.0003477922291494906, -0.0012554391287267208, -0.0024529388174414635, -0.04571627080440521, -0.00856736395508051, -0.004976149648427963, -0.15646478533744812, -1.9477345943450928, -0.27118992805480957, -0.01783781684935093, -0.0001932195882545784, -0.0016642066184431314, -0.0032991524785757065, -0.7041189670562744, -0.009746228344738483, -0.04414277523756027, -6.103329360485077e-05, -1.5278264284133911, -0.0001902399235405028, -0.04566388204693794, -0.0035271355882287025, -0.004129098728299141, -0.03877365589141846, -0.00946097169071436, -2.441882848739624, -0.002799641340970993, -0.04626298323273659, -0.0221394170075655, -0.0002562671434134245, -0.016640555113554, -0.014527382329106331, -0.4341273605823517, -0.9984006285667419, -0.043567854911088943, -2.724337100982666, -0.3022441267967224, -0.81373131275177, -0.00044860312482342124, -0.00031537804170511663, -0.027654126286506653, -0.0301419198513031, -0.0003432638186495751, -0.008396916091442108, -0.00035089056473225355, -0.06770236790180206, -0.0005210472736507654, -0.0032226317562162876, -0.05049540102481842, -2.5604405403137207, -0.10083726048469543, -0.3993596136569977, -0.07206396013498306, -0.0363992340862751, -0.0011369676794856787, -0.0025654281489551067, -0.00021431533969007432, -0.03547266870737076, -0.11870502680540085, -1.9493892192840576, -0.027160488069057465, -0.5129199624061584, -0.0017132379580289125, -0.0011855486081913114, -0.008815300650894642, -1.0265675783157349, -0.03131955489516258, -0.9010800123214722, -0.0019546705298125744, -0.012940125539898872, -2.4318398573086597e-05, -0.024495089426636696, -0.01698014698922634, -0.13870444893836975, -2.237865447998047, -0.020106662064790726, -0.24671830236911774, -0.0020378315821290016, -0.0006729483720846474, -0.007855593226850033, -0.45672598481178284, -0.015483058989048004, -0.000262106885202229, -0.025285203009843826, -0.008725374937057495, -0.05672108381986618, -0.15705281496047974, -1.278718113899231, -0.012220273725688457, -0.159072145819664, -0.0006295844214037061, -0.0005807381821796298, -0.00243926327675581, -1.7865002155303955, -4.1483970562694594e-05, -0.0002554328821133822, -0.012310592457652092, -0.001512932125478983, -0.016478631645441055, -0.19290924072265625, -1.460955262184143, -0.013495286926627159, -0.14304225146770477, -0.00028689560713246465, -0.0009151084814220667, -0.00129270413890481, -1.2188944816589355, -0.572695255279541, -0.0005049622268415987, -0.031208865344524384, -0.004503584001213312, -0.013238861225545406, -0.1714029312133789, -0.7024653553962708, -0.010692566633224487, -0.1300293207168579, -0.0002643712505232543, -0.0015174552099779248, -0.002086368855088949, -0.8890150189399719, -0.004664374049752951, -0.00013910756388213485, -0.009046400897204876, -0.0008150592911988497, -0.0037682494148612022, -0.2243143618106842, -0.7669549584388733, -0.016298970207571983, -0.13265998661518097, -0.0003070359816774726, -0.0012398421531543136, -0.0017147850012406707, -0.8284673690795898, -0.11957507580518723, -0.00014745102089364082, -0.003493398893624544, -0.0012067424831911922, -0.0026894372422248125, -2.079164505004883, -0.0007128558354452252, -0.7508893609046936, -0.45672860741615295, -0.03168492019176483, -1.1920922133867862e-06, -0.0004797023138962686, -2.729855441430118e-05, -0.3847658336162567, -0.0001255195093108341, -0.007319774944335222, -0.017817791551351547, -0.006561520509421825, -0.0011491130571812391, -0.23820753395557404, -3.814689989667386e-06, -0.060324449092149734, -3.075552376685664e-05, -0.0007658647373318672, -7.986703712958843e-05, -0.003924645483493805, -0.1028926745057106, -0.0020231986418366432, -0.6444931030273438, -0.019258538261055946, -1.6568474769592285, -0.019106745719909668, -7.390703103737906e-05, -1.6927575416048057e-05, -0.0026020498480647802, -0.00020358874462544918, -4.8636207793606445e-05, -0.00021491125517059118, -0.01163011509925127, -0.0010802869219332933, -0.00015555603022221476, -1.2895228862762451, -0.0001445904199499637, -0.6492975950241089, -0.3391895592212677, -0.0016160060185939074, -0.0012175773736089468, -0.0015886317705735564, -0.12312120944261551, -0.001490435330197215, -0.0001774868869688362, -0.0002719986077863723, -0.029650317505002022, -0.0005007919971831143, -1.5612845420837402, -0.002863713540136814, -0.01731833629310131, -0.07076411694288254, -0.012938359752297401, -0.8762233853340149, -0.027595102787017822, -0.07771413028240204, -0.0010318199638277292, -0.002332468517124653, -0.0025811234954744577, -0.0026944305282086134, -0.0016398091102018952, -0.00923658162355423, -0.01710660010576248, -0.0065695736557245255, -0.003052815329283476, -0.17635749280452728, -0.06739283353090286, -0.0348299965262413, -0.1771402806043625, -0.00013207517622504383, -2.2291887944447808e-05, -3.4570634852570947e-06, -1.152935266494751, -2.3841855067985307e-07, -5.960462772236497e-07, -2.6225699912174605e-05, -0.00037949037505313754, -0.16122885048389435], "finish_reason": "stop"}], "metrics": {"energy": 281.2146256475448, "energy_per_token": 1.1525189575719048, "time": 10.520602, "time_per_token": 0.04311722131147541}}
{"outputs": [{"text": "pattern = re.compile(pattern)\n    dirs = []\n\n    for filename in os.listdir(directory):\n        match = pattern.search(filename)\n        if match:\n            prefix = match.group(1)\n            zip_path = os.path.join(directory, filename)\n            dirs.append(prefix)\n            with zipfile.ZipFile(zip_path, 'r') as zip_file:\n                zip_file.extractall(prefix)\n\n    return dirs", "tokens": ["pattern", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "    ", "dir", "s", " =", " []", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "match", " =", " pattern", ".", "search", "(", "filename", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "prefix", " =", " match", ".", "group", "(", "1", ")", "\n", "            ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", "\n", "            ", "dir", "s", ".", "append", "(", "prefix", ")", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "r", "')", " as", " zip", "_", "file", ":", "\n", "                ", "zip", "_", "file", ".", "extract", "all", "(", "prefix", ")", "\n", "\n", "    ", "return", " d", "irs", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.7699735164642334, -0.08956016600131989, -0.13809512555599213, -0.0002611534437164664, -0.012752531096339226, -0.002795242937281728, -0.01464251521974802, -0.02159031853079796, -0.008733765222132206, -0.19750456511974335, -2.029527187347412, -0.13044458627700806, -0.13073478639125824, -0.10558659583330154, -0.010448751971125603, -1.3834309577941895, -0.0002212279650848359, -0.1788577437400818, -0.8183215856552124, -0.006526228040456772, -0.04383042827248573, -1.1324817933200393e-05, -0.0016853903653100133, -9.179073458653875e-06, -0.002195806708186865, -0.0010762381134554744, -0.0004002247005701065, -0.005350436549633741, -0.006894015707075596, -0.24069678783416748, -0.005294231232255697, -0.04501986503601074, -3.9934315282152966e-05, -0.44146692752838135, -0.00011550712952157483, -0.0033690142445266247, -0.0013024666113778949, -0.00311211752705276, -0.14107981324195862, -0.009097552858293056, -0.0450897216796875, -0.14593343436717987, -0.008503892458975315, -0.0019289711490273476, -0.5979439616203308, -0.1891191005706787, -0.04038778692483902, -0.020936207845807076, -0.013884622603654861, -0.0021547689102590084, -0.0017015753546729684, -0.00013886917440686375, -0.01583266630768776, -0.034459903836250305, -2.2753124237060547, -0.17718960344791412, -1.4513086080551147, -0.0006635371246375144, -0.042954690754413605, -2.4676019165781327e-05, -5.6503606174374e-05, -0.0176651943475008, -0.0003522014303598553, -7.354942499659956e-05, -0.001782139646820724, -6.437094270950183e-05, -0.005183234345167875, -5.328513361746445e-05, -0.002707627136260271, -0.10069940984249115, -1.1706877946853638, -0.21727585792541504, -0.007112895604223013, -0.00923327449709177, -0.01803640089929104, -0.7205387353897095, -0.026863329112529755, -0.016686279326677322, -0.12858231365680695, -0.35382330417633057, -0.0337681770324707, -2.2053474822314456e-05, -1.156323378381785e-05, -0.0021400186233222485, -0.0008381668012589216, -0.00013255194062367082, -0.00012051333033014089, -0.004090751986950636, -0.0005364171229302883, -5.1973900554003194e-05, -0.22576120495796204, -0.059608835726976395, -0.0017437029164284468, -0.007272201124578714, -0.0001817776501411572, -0.24844521284103394, -0.08966131508350372, -0.24605786800384521, -0.00026651646476238966, -0.0008005275158211589, -0.0020248640794306993, -0.02170417457818985, -0.0010351543314754963, -0.0022137677296996117, -0.0001530530134914443, -0.00022265815641731024, -0.0002416080387774855, -0.14622174203395844, -0.0755104199051857, -0.029712460935115814, -0.01627058908343315, -0.37998083233833313, -0.010599624365568161, -0.017544550821185112, -0.11269199103116989, -5.245195097813848e-06, -1.2767503261566162, -1.1920922133867862e-06, -5.960462772236497e-07, -6.210611172718927e-05, -0.0001370812824461609, -0.17101821303367615], "finish_reason": "stop"}], "metrics": {"energy": 134.5321422939301, "energy_per_token": 1.1027224778190992, "time": 5.054107, "time_per_token": 0.04142710655737705}}
