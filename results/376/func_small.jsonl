{"outputs": [{"text": "# split the text into words and lowercase\n    words = [word.lower() for word in re.findall(r'\\w+', text)]\n    # remove common stopwords\n    words = [word for word in words if word not in STOPWORDS]\n    # count occurrences of words\n    counts = Counter(words)\n    return counts", "tokens": ["#", " split", " the", " text", " into", " words", " and", " lower", "case", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")]", "\n", "    ", "#", " remove", " common", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "#", " count", " occurrences", " of", " words", "\n", "    ", "counts", " =", " Counter", "(", "words", ")", "\n", "    ", "return", " counts", "\n", "\n", "def"], "logprobs": [-0.6840730905532837, -3.242441177368164, -0.7493348121643066, -0.12010074406862259, -0.03700919449329376, -0.07762159407138824, -2.1192002296447754, -3.04789137840271, -0.01708187349140644, -2.580216407775879, -0.0012276978231966496, -0.13215413689613342, -0.020076869055628777, -1.0871062278747559, -0.20924556255340576, -0.02678685076534748, -0.025087937712669373, -0.0007828985108062625, -0.03672873601317406, -0.002205798402428627, -0.00043096792069263756, -0.28878504037857056, -5.8410845667822286e-05, -0.29592400789260864, -5.769562994828448e-05, -0.02955426089465618, -0.011150899343192577, -0.11804674565792084, -0.06380774080753326, -0.004127199295908213, -2.8490614567999728e-05, -0.011091718450188637, -0.031407009810209274, -0.0012667496921494603, -0.9793491363525391, -0.02983083575963974, -0.03309211507439613, -1.1691008806228638, -0.0863882377743721, -0.011789527721703053, -0.4242205321788788, -0.0006028980133123696, -0.06447497755289078, -0.030242662876844406, -0.004580363165587187, -0.033442191779613495, -0.0014968630857765675, -6.425174069590867e-05, -6.317892984952778e-05, -0.0018353299237787724, -0.0015256681945174932, -0.009407948702573776, -0.006406721193343401, -4.6491513785440475e-06, -0.009033996611833572, -1.1920928244535389e-07, -6.198863957251888e-06, -9.107174992095679e-05, -2.5510462364763953e-05, -0.0010521834483370185, -0.0005519058904610574, -0.09665830433368683, -0.03395693749189377, -0.4221765995025635, -1.1387790441513062, -0.3084295094013214, -0.9840288162231445, -0.07711692154407501, -0.0005777596961706877, -2.602477550506592, -0.0011536378879100084, -0.008004610426723957, -0.0007923085941001773, -0.0030370086897164583, -0.0003375437227077782, -0.0046617635525763035, -0.057886749505996704, -0.31560948491096497, -0.13425299525260925, -0.791542649269104, -0.021949341520667076, -0.9697575569152832], "finish_reason": "stop"}], "metrics": {"energy": 79.10278392982484, "energy_per_token": 0.9646680967051809, "time": 3.3734448, "time_per_token": 0.04113957073170732}}
{"outputs": [{"text": "# Split the text into words\n    words = re.findall(r'\\w+', text.lower())\n\n    # Remove common stopwords\n    words = [word for word in words if word not in STOPWORDS]\n\n    # Calculate the frequency of each word\n    frequency = Counter(words)\n\n    return frequency", "tokens": ["#", " Split", " the", " text", " into", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n", "\n", "    ", "#", " Remove", " common", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Calculate", " the", " frequency", " of", " each", " word", "\n", "    ", "frequency", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "return", " frequency"], "logprobs": [-0.6840730905532837, -1.1399145126342773, -0.26959002017974854, -0.1078777015209198, -0.026057736948132515, -0.07611621171236038, -0.46383216977119446, -0.000942977552767843, -0.018576104193925858, -0.007733405567705631, -0.35233837366104126, -3.731181277544238e-05, -0.20085783302783966, -0.00014423283573705703, -0.05206573009490967, -0.012457299046218395, -0.09203580021858215, -0.10978712886571884, -0.00506178755313158, -1.4066597032069694e-05, -0.011648260988295078, -0.6707911491394043, -0.0028653775807470083, -0.006835292559117079, -0.0050485036335885525, -0.16306912899017334, -0.0002420847595203668, -0.0020810156129300594, -0.033649690449237823, -0.6616281867027283, -0.09264253824949265, -0.008941254578530788, -0.4513683319091797, -0.00033408781746402383, -0.08837980031967163, -0.040580686181783676, -0.005113973747938871, -0.4051315188407898, -0.005090964958071709, -8.022463589441031e-05, -6.675497570540756e-05, -0.0010855264263227582, -0.0033006970770657063, -0.00501825800165534, -0.009327052161097527, -8.940656698541716e-06, -0.00810938235372305, -1.1920928244535389e-07, -6.794906312279636e-06, -3.45700973412022e-05, -2.0861407392658293e-05, -0.0008799732895568013, -0.000270091783022508, -0.005753741133958101, -0.00026675479602999985, -0.01911984384059906, -0.8208630681037903, -0.17000505328178406, -0.03309903293848038, -0.0032765772193670273, -0.16860179603099823, -0.0012361512053757906, -0.05638255551457405, -0.0002996472467202693, -3.145277261734009, -0.04997095465660095, -0.007449112366884947, -0.0006001578294672072, -0.0032778840977698565, -0.00019870213873218745, -0.010750473476946354, -0.06836055964231491, -0.00015877417172305286, -0.2919219136238098, -0.05290311202406883], "finish_reason": "stop"}], "metrics": {"energy": 68.89277682113647, "energy_per_token": 0.9185703576151528, "time": 2.941348, "time_per_token": 0.039217973333333336}}
{"outputs": [{"text": "words = re.sub(r'[^\\w\\s]', '', text).split()\n    words = [word.lower() for word in words if word not in STOPWORDS]\n    return Counter(words)", "tokens": ["words", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", ".", "split", "()", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "return", " Counter", "(", "words", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.7892271280288696, -0.04949388653039932, -0.5094356536865234, -0.00011145447206217796, -2.10899019241333, -0.20986436307430267, -0.07655082643032074, -0.3487957715988159, -0.08329889178276062, -0.2050100415945053, -0.001039560534991324, -0.6131770610809326, -0.007003165781497955, -0.06769490242004395, -0.022206692025065422, -0.00016008525562938303, -0.10684004426002502, -0.00023779425828251988, -0.03711211681365967, -0.16335326433181763, -0.059033412486314774, -2.3459041118621826, -0.01861986704170704, -0.08150915056467056, -0.0838376134634018, -0.23202192783355713, -0.0799449160695076, -0.01811530999839306, -0.3092649579048157, -0.024356070905923843, -0.011277620680630207, -7.760223525110632e-05, -0.007267112378031015, -0.0001908358681248501, -9.321732068201527e-05, -0.004916127305477858, -0.2351440042257309, -0.036195870488882065, -0.3749484121799469, -1.847726889536716e-05, -0.00894917082041502, -4.768370445162873e-07, -4.529942543740617e-06, -3.1709168979432434e-05, -2.8013790142722428e-05, -0.005488208960741758, -0.005730035714805126, -0.11736895143985748, -0.694840669631958, -0.06464675068855286, -0.001734539750032127, -0.004327694419771433, -1.740389347076416, -2.0265558760002023e-06, -1.0728830375228426e-06, -0.00015400654228869826, -0.00014888131408952177, -0.07784758508205414], "finish_reason": "stop"}], "metrics": {"energy": 62.0675484714508, "energy_per_token": 1.0701301460594965, "time": 2.318877, "time_per_token": 0.039980637931034485}}
{"outputs": [{"text": "# Remove punctuation, stopwords, and newlines\n    text = text.lower()\n    text = re.sub('[^\\w\\s]', '', text)\n    text = re.sub(r'\\s+', ' ', text)\n\n    # Split text into words\n    words = text.split()\n\n    # Remove common stopwords\n    words = [w for w in words if w not in STOPWORDS]\n\n    # Count the occurrences of each word\n    word_count = Counter(words)\n\n    # Remove words with a frequency lower than 0.05\n    filtered_word_count = {word: count for word, count in word_count.items() if count > 0.05}\n\n    return filtered_word_count", "tokens": ["#", " Remove", " punct", "uation", ",", " stop", "words", ",", " and", " new", "lines", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "    ", "text", " =", " re", ".", "sub", "('", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " text", ")", "\n", "\n", "    ", "#", " Split", " text", " into", " words", "\n", "    ", "words", " =", " text", ".", "split", "()", "\n", "\n", "    ", "#", " Remove", " common", " stop", "words", "\n", "    ", "words", " =", " [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " occurrences", " of", " each", " word", "\n", "    ", "word", "_", "count", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "#", " Remove", " words", " with", " a", " frequency", " lower", " than", " ", "0", ".", "0", "5", "\n", "    ", "filtered", "_", "word", "_", "count", " =", " {", "word", ":", " count", " for", " word", ",", " count", " in", " word", "_", "count", ".", "items", "()", " if", " count", " >", " ", "0", ".", "0", "5", "}", "\n", "\n", "    ", "return", " filtered", "_", "word", "_", "count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6840730905532837, -1.8252334594726562, -0.44731807708740234, -0.05752408131957054, -2.142457962036133, -0.9802650809288025, -0.031009066849946976, -0.2990245223045349, -0.1135215312242508, -3.665764570236206, -0.28348127007484436, -0.43248841166496277, -0.0018421123968437314, -0.5900912880897522, -0.035468410700559616, -2.4270992279052734, -0.002410722430795431, -0.132147878408432, -0.0023375824093818665, -0.2296760082244873, -0.01120041124522686, -0.1868775188922882, -0.006037095095962286, -0.10368868708610535, -2.7656173188006505e-05, -0.01580708660185337, -1.9735103845596313, -0.144866481423378, -1.1320557594299316, -0.0012006701435893774, -0.11130028963088989, -0.0036656346637755632, -0.10645130276679993, -0.014727800153195858, -5.090107151772827e-05, -0.029817182570695877, -9.023735765367746e-05, -0.0031140190549194813, -0.0034199818037450314, -0.04942059516906738, -0.21170678734779358, -0.20840950310230255, -0.002644971711561084, -0.5105142593383789, -0.0005088941543363035, -0.002319504739716649, -1.4858016967773438, -0.07118285447359085, -0.029970714822411537, -0.25185731053352356, -0.030131278559565544, -4.160317621426657e-05, -0.011917345225811005, -0.0003297977091278881, -6.747018051100895e-05, -0.0034522954374551773, -0.02018645964562893, -0.18831492960453033, -0.4125198423862457, -0.00030357998912222683, -0.05086425319314003, -0.29512810707092285, -0.735770046710968, -0.009755200706422329, -0.03926411643624306, -0.47700098156929016, -0.00023552982020191848, -0.022135568782687187, -0.006165650207549334, -0.2804778218269348, -7.974783511599526e-05, -0.022739721462130547, -0.13862267136573792, -0.0006202919175848365, -0.031405970454216, -0.00029416524921543896, -0.010244052857160568, -1.349898099899292, -1.0045442581176758, -0.22239655256271362, -0.00854478869587183, -0.2736421525478363, -0.0005964645533822477, -0.1639384776353836, -0.0385243222117424, -0.003940556664019823, -1.0912699699401855, -0.003382914699614048, -7.211902266135439e-05, -5.245071224635467e-05, -0.001254724687896669, -0.0030882307328283787, -0.008143081329762936, -0.003231900045648217, -2.622600959512056e-06, -0.0078087542206048965, -2.3841855067985307e-07, -1.4185804502631072e-05, -4.827859811484814e-05, -2.276871418871451e-05, -0.0016563518438488245, -0.00045158201828598976, -0.011016380973160267, -0.00028772983932867646, -0.024815397337079048, -0.4699752628803253, -1.4620327949523926, -0.9505835771560669, -0.005212289281189442, -0.12276088446378708, -0.002776341512799263, -0.06574685126543045, -0.0002441108226776123, -0.7588298320770264, -0.0025964616797864437, -2.915583610534668, -0.014223858714103699, -0.005423475056886673, -0.0037845196202397346, -0.0015329287853091955, -0.0002184867626056075, -0.004626522306352854, -0.04039900749921799, -0.00015710550360381603, -1.0218253135681152, -2.8905720710754395, -0.769976794719696, -0.28393951058387756, -1.6030125617980957, -1.2439625263214111, -2.858877182006836, -0.0006854568491689861, -0.2061910182237625, -2.592339515686035, -0.008330005221068859, -0.8367493748664856, -0.974168062210083, -0.32475316524505615, -0.00040618274942971766, -2.5073015689849854, -0.021733686327934265, -0.3607860207557678, -0.0012855607783421874, -0.006951788440346718, -0.0002779574424494058, -0.09843002259731293, -0.6102393865585327, -0.0006137394811958075, -0.2381075769662857, -0.004081610590219498, -0.0038890219293534756, -0.00010084597306558862, -0.0009525052737444639, -0.00019369633810129017, -0.0010149095905944705, -1.6689286894688848e-06, -3.814689989667386e-06, -4.8636207793606445e-05, -0.0061579495668411255, -0.00027056847466155887, -0.009195004589855671, -0.004876268561929464, -0.4868975281715393, -0.009671144187450409, -0.09637320041656494, -0.11528807878494263, -0.008441480807960033, -0.012617639265954494, -0.43903660774230957, -0.00018308870494365692, -0.01583266630768776, -0.0002755738969426602, -0.19581906497478485, -0.017415575683116913, -0.00016449528629891574, -4.887569048150908e-06, -7.879423355916515e-05, -4.076874756719917e-05, -1.309924840927124, -1.4305104514278355e-06, -5.960462772236497e-07, -0.0001037067049765028, -0.00016258825780823827, -0.040876198559999466], "finish_reason": "stop"}], "metrics": {"energy": 191.93076474380481, "energy_per_token": 1.043101982303287, "time": 7.793897, "time_per_token": 0.04235813586956522}}
{"outputs": [{"text": "# Split the text into words and remove punctuation marks and common stopwords\n    words = nltk.wordpunct_tokenize(text)\n    words = [w.lower() for w in words if w not in STOPWORDS and w.isalnum()]\n    # Calculate the frequency of each word\n    return Counter(words)", "tokens": ["#", " Split", " the", " text", " into", " words", " and", " remove", " punct", "uation", " marks", " and", " common", " stop", "words", "\n", "    ", "words", " =", " n", "lt", "k", ".", "word", "punct", "_", "token", "ize", "(", "text", ")", "\n", "    ", "words", " =", " [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " w", ".", "isal", "num", "()", "]", "\n", "    ", "#", " Calculate", " the", " frequency", " of", " each", " word", "\n", "    ", "return", " Counter", "(", "words", ")"], "logprobs": [-0.6840730905532837, -1.1399145126342773, -0.26959002017974854, -0.1078777015209198, -0.026057736948132515, -0.07611621171236038, -1.8180077075958252, -0.5637938976287842, -0.6451913714408875, -0.05509307608008385, -0.979205310344696, -0.3969285190105438, -0.5264740586280823, -0.007720866706222296, -0.003042119089514017, -0.13215550780296326, -0.0016631354810670018, -0.07745766639709473, -0.012612341903150082, -3.4537954330444336, -0.008795331232249737, -1.537788011773955e-05, -0.0008363801171071827, -0.024417148903012276, -0.6064398884773254, -1.6331539882230572e-05, -0.0019094583112746477, -8.785339014139026e-05, -0.005745088681578636, -0.04108479246497154, -0.2635810673236847, -0.009194414131343365, -0.030507830902934074, -0.14616231620311737, -0.016782643273472786, -0.01807456836104393, -1.2655713558197021, -0.0778292790055275, -0.0170136671513319, -0.0001438752660760656, -0.01394164003431797, -0.0001658063702052459, -8.892617915989831e-05, -0.007139408960938454, -0.04979483038187027, -0.36216360330581665, -0.6274362802505493, -2.312633478140924e-05, -0.031534306704998016, -3.576278118089249e-07, -8.4638240878121e-06, -1.3589766240329482e-05, -2.372236667724792e-05, -0.6117795705795288, -1.7957327365875244, -0.05659616366028786, -0.38543909788131714, -0.0001679517881711945, -0.0005390383303165436, -0.016632700338959694, -0.004303836729377508, -0.9931213855743408, -1.4681353569030762, -1.3064854145050049, -0.05351642146706581, -0.049818988889455795, -0.0028679927345365286, -0.12356231361627579, -0.0023899106308817863, -0.19830462336540222, -0.000626367807853967, -1.7150543928146362, -0.05322541296482086, -0.006645957473665476, -0.02613276243209839, -0.203767791390419], "finish_reason": "stop"}], "metrics": {"energy": 119.0059545898437, "energy_per_token": 1.565867823550575, "time": 2.9596345, "time_per_token": 0.03894255921052631}}
{"outputs": [{"text": "text = text.lower()\n    words = re.findall(r'\\w+', text)\n    words = [word.lower() for word in words if word not in STOPWORDS]\n    freq = Counter(words)\n    return freq", "tokens": ["text", " =", " text", ".", "lower", "()", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "freq", " =", " Counter", "(", "words", ")", "\n", "    ", "return", " fre", "q", "\n", "\n", "def"], "logprobs": [-2.2866997718811035, -0.056254662573337555, -1.0247654914855957, -0.005671836901456118, -0.07178173214197159, -0.0003972456615883857, -0.0863172709941864, -0.10908831655979156, -2.2095484733581543, -0.024582678452134132, -0.11808466911315918, -4.207999518257566e-05, -0.14018703997135162, -0.00024053541710600257, -0.037892673164606094, -0.012804905883967876, -0.046584244817495346, -0.19042332470417023, -0.005480028688907623, -3.0278701160568744e-05, -0.00825446005910635, -0.003296776209026575, -0.019807634875178337, -0.1751016080379486, -0.24090760946273804, -0.10973189771175385, -0.013886150903999805, -0.39909496903419495, -1.0212082862854004, -0.7212498188018799, -0.00018666432879399508, -0.016404518857598305, -0.00028772983932867646, -0.00015198028995655477, -0.013896026648581028, -0.19402475655078888, -0.02886040322482586, -0.10177586227655411, -3.0517112463712692e-05, -0.007514661643654108, -4.768370445162873e-07, -6.6756979322235566e-06, -3.361645576660521e-05, -2.312633478140924e-05, -0.0076214964501559734, -0.006993458606302738, -0.1419139802455902, -2.025911569595337, -0.7943592071533203, -0.011054816655814648, -0.006937227211892605, -0.006380899343639612, -0.0004122599493712187, -0.030219879001379013, -0.07027631253004074, -0.026686454191803932, -0.25721296668052673, -1.0847986231965479e-05, -0.8333012461662292, -0.027975741773843765, -1.1032979488372803], "finish_reason": "stop"}], "metrics": {"energy": 59.599397335052494, "energy_per_token": 0.9770393005746311, "time": 2.3292327, "time_per_token": 0.03818414262295082}}
{"outputs": [{"text": "# Remove punctuation and common stopwords\n    text = re.sub('[^\\w]', ' ', text)\n    text = text.lower()\n    text = ''.join([word for word in text.split() if word not in STOPWORDS])\n    # Count words\n    words = Counter(text.split())\n    return words", "tokens": ["#", " Remove", " punct", "uation", " and", " common", " stop", "words", "\n", "    ", "text", " =", " re", ".", "sub", "('", "[", "^\\", "w", "]", "'", ",", " '", " '", ",", " text", ")", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "    ", "text", " =", " ''", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "    ", "#", " Count", " words", "\n", "    ", "words", " =", " Counter", "(", "text", ".", "split", "())", "\n", "    ", "return", " words", "\n", "\n", "if"], "logprobs": [-0.6840730905532837, -1.8252334594726562, -0.44731807708740234, -0.05752408131957054, -1.16436767578125, -0.9988012313842773, -0.02414826489984989, -0.006550033111125231, -0.4517839848995209, -0.002324500121176243, -1.1146974563598633, -0.051694829016923904, -0.35800430178642273, -5.185469490243122e-05, -0.06063584238290787, -1.8083031177520752, -0.15518325567245483, -1.1022459268569946, -0.0008473381749354303, -1.569401502609253, -0.009756735526025295, -3.9934315282152966e-05, -0.054893139749765396, -0.0005486889858730137, -7.10462118149735e-05, -0.009768186137080193, -0.08206509053707123, -0.3069128692150116, -0.03908953815698624, -0.693152666091919, -0.0038523285184055567, -1.1879003047943115, -0.00026770823751576245, -0.033791109919548035, -6.3774932641536e-05, -0.08094587177038193, -0.0841851681470871, -1.1622018814086914, -0.015111606568098068, -2.9554224014282227, -0.00022766382608097047, -0.00011431517486926168, -0.8315747380256653, -0.5131655335426331, -0.011603837832808495, -0.00026079590315930545, -0.00029047083808109164, -0.1473895162343979, -0.040217410773038864, -0.00737764174118638, -0.09566430002450943, -0.023217028006911278, -0.020909123122692108, -0.029594073072075844, -2.8609820219571702e-05, -0.008102050982415676, -3.576278118089249e-07, -4.6491513785440475e-06, -0.00012385078298393637, -2.8490614567999728e-05, -0.0029950544703751802, -0.004909247159957886, -1.7008732557296753, -0.5687300562858582, -0.6672285795211792, -2.5351669788360596, -0.36820653080940247, -0.0010289618512615561, -2.9150538444519043, -0.22357776761054993, -0.18487685918807983, -0.027820860967040062, -0.04008422791957855, -0.011709294281899929, -0.0029818618204444647, -0.007872860878705978, -0.008731638081371784, -0.07792102545499802, -0.08735349029302597, -0.10537998378276825, -0.6814035177230835, -0.01838909648358822, -1.6170819997787476], "finish_reason": "stop"}], "metrics": {"energy": 96.93165415382384, "energy_per_token": 1.1678512548653475, "time": 3.3804965, "time_per_token": 0.0407288734939759}}
{"outputs": [{"text": "# Split the input text into words and remove punctuation and stopwords\n    words = [word for word in re.findall(r'\\w+', text.lower())\n                 if word not in STOPWORDS]\n\n    # Count the frequency of words\n    word_freq = Counter(words)\n\n    # Filter out words with frequency less than 3\n    word_freq = {word: freq for word, freq in word_freq.items() if freq > 3}\n\n    return word_freq", "tokens": ["#", " Split", " the", " input", " text", " into", " words", " and", " remove", " punct", "uation", " and", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n", "                ", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " words", "\n", "    ", "word", "_", "freq", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "#", " Filter", " out", " words", " with", " frequency", " less", " than", " ", "3", "\n", "    ", "word", "_", "freq", " =", " {", "word", ":", " fre", "q", " for", " word", ",", " fre", "q", " in", " word", "_", "freq", ".", "items", "()", " if", " fre", "q", " >", " ", "3", "}", "\n", "\n", "    ", "return", " word", "_", "freq", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6840730905532837, -1.1399145126342773, -0.26959002017974854, -2.5429248809814453, -0.17907443642616272, -0.10399148613214493, -0.1323695033788681, -2.0625977516174316, -0.6654507517814636, -0.5916793942451477, -0.05639134719967842, -1.1211367845535278, -0.42519742250442505, -0.00928016472607851, -0.13399091362953186, -0.0021807001903653145, -0.09832911193370819, -0.01414311584085226, -0.8283190727233887, -0.35176563262939453, -1.9987958669662476, -0.0026547210291028023, -0.0004894727608188987, -0.05147122964262962, -0.000102037942269817, -0.5339398384094238, -0.00010609064338495955, -0.02767905779182911, -0.01271816249936819, -0.17162224650382996, -0.07595889270305634, -0.008167557418346405, -1.585470999998506e-05, -0.016188720241189003, -0.5553548336029053, -0.0015389991458505392, -0.03192834556102753, -1.653348684310913, -1.6009305715560913, -2.239379405975342, -0.09758353978395462, -0.06192469969391823, -4.887569048150908e-06, -0.02272387407720089, -2.3841855067985307e-07, -4.172316494077677e-06, -2.9801878554280847e-05, -2.407998726994265e-05, -0.03749443590641022, -0.005427387543022633, -0.10685236752033234, -0.0006634180317632854, -0.014170970767736435, -0.6663752198219299, -0.1986953169107437, -1.360871434211731, -0.0003953390696551651, -1.8580513000488281, -0.4861816167831421, -0.00020847532141488045, -0.8958811163902283, -0.00243831193074584, -0.413847953081131, -0.12990516424179077, -0.007324745412915945, -0.0008531744824722409, -0.004602434579282999, -0.00010418349120300263, -0.023690612986683846, -0.0600578673183918, -0.0002972637885250151, -0.6139143109321594, -2.5288000106811523, -0.215423583984375, -0.6722378730773926, -0.38349801301956177, -1.0749759674072266, -0.6772516965866089, -0.0008686583023518324, -0.10634198784828186, -1.2339527606964111, -0.28866320848464966, -0.0002814135223161429, -0.5046847462654114, -0.0004651656490750611, -0.021641064435243607, -0.07628599554300308, -0.07273025810718536, -0.04151488468050957, -0.0025234543718397617, -0.3744211792945862, -8.22540732769994e-06, -0.004818375688046217, -0.005702537018805742, -0.0009211826254613698, -0.006186265032738447, -7.748573807475623e-06, -0.00023052419419400394, -0.0026395025197416544, -6.556489552167477e-06, -9.65590606938349e-06, -2.1815061700181104e-05, -0.0022467151284217834, -0.00019870213873218745, -0.04178280010819435, -0.0007214327342808247, -4.577531944960356e-05, -0.8944308161735535, -0.0012875846587121487, -0.41426342725753784, -0.0017511999467387795, -0.00043072958942502737, -0.024765856564044952, -0.00029202012228779495, -0.15467387437820435, -0.02244054712355137, -1.8000440832111053e-05, -2.002696055569686e-05, -1.149661660194397, -1.4305104514278355e-06, -5.960462772236497e-07, -0.00012206286191940308, -0.00018404220463708043, -0.07578153908252716], "finish_reason": "stop"}], "metrics": {"energy": 113.67812390136717, "energy_per_token": 0.916759063720703, "time": 5.0614614, "time_per_token": 0.04081823709677419}}
{"outputs": [{"text": "# Split the text into words\n    words = [word for word in re.split('[^a-z0-9]', text.lower()) if word not in STOPWORDS]\n\n    # Calculate the frequency of each word\n    freq = Counter(words)\n    return freq", "tokens": ["#", " Split", " the", " text", " into", " words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " re", ".", "split", "('", "[", "^", "a", "-", "z", "0", "-", "9", "]", "'", ",", " text", ".", "lower", "())", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Calculate", " the", " frequency", " of", " each", " word", "\n", "    ", "freq", " =", " Counter", "(", "words", ")", "\n", "    ", "return", " fre", "q"], "logprobs": [-0.6840730905532837, -1.1399145126342773, -0.26959002017974854, -0.1078777015209198, -0.026057736948132515, -0.07611621171236038, -0.46383216977119446, -0.000942977552767843, -0.018576104193925858, -0.007733405567705631, -1.9834551811218262, -0.23690013587474823, -2.05503249168396, -0.004295171704143286, -0.00031799983116798103, -0.12461666017770767, -6.663577369181439e-05, -1.6797338724136353, -1.002107858657837, -1.2968122959136963, -0.31217649579048157, -0.1901090443134308, -5.972207145532593e-05, -0.00016485285595990717, -2.6444129943847656, -8.260862523457035e-05, -0.0001677133986959234, -0.5998042225837708, -0.013669689185917377, -7.772143726469949e-05, -0.03162740170955658, -0.11327749490737915, -0.009467702358961105, -0.01705574057996273, -0.08899921923875809, -0.10240717232227325, -0.2074166089296341, -8.702239938429557e-06, -0.009441014379262924, -2.3841855067985307e-07, -3.2186455882765586e-06, -5.1973900554003194e-05, -3.158996332786046e-05, -0.04690881818532944, -0.004330661613494158, -0.21240206062793732, -0.0003831844369415194, -0.006286252290010452, -0.8033725619316101, -0.0746764987707138, -0.03471105918288231, -0.003146223723888397, -0.18833477795124054, -0.0017057405784726143, -0.07184264808893204, -0.0001731960946926847, -1.363481044769287, -0.6156400442123413, -0.010728655382990837, -0.01199709065258503, -0.015145775862038136, -0.0005143749876879156, -0.016774553805589676, -1.7319705486297607, -0.09617897123098373, -0.22667600214481354, -3.814689989667386e-06], "finish_reason": "stop"}], "metrics": {"energy": 77.37601639938354, "energy_per_token": 1.1548659164087096, "time": 2.5303595, "time_per_token": 0.037766559701492536}}
{"outputs": [{"text": "text = re.sub('[' + string.punctuation + ']+', '', text)\n\n    # Remove stopwords, digits, and punctuation marks\n    text = re.sub(r'\\b\\w{2,}\\b', '', text)\n    # Convert to lowercase\n    text = text.lower()\n\n    # Convert to list and count occurrences\n    count_words = Counter(text.split())\n\n    # Filter out the common stopwords\n    for stopword in STOPWORDS:\n        if stopword in count_words:\n            del count_words[stopword]\n\n    return count_words", "tokens": ["text", " =", " re", ".", "sub", "('", "['", " +", " string", ".", "punct", "uation", " +", " '", "]+", "'", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Remove", " stop", "words", ",", " digits", ",", " and", " punct", "uation", " marks", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "b", "\\", "w", "{", "2", ",", "}\\", "b", "'", ",", " ''", ",", " text", ")", "\n", "    ", "#", " Convert", " to", " lower", "case", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "    ", "#", " Convert", " to", " list", " and", " count", " occurrences", "\n", "    ", "count", "_", "words", " =", " Counter", "(", "text", ".", "split", "())", "\n", "\n", "    ", "#", " Filter", " out", " the", " common", " stop", "words", "\n", "    ", "for", " stop", "word", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "        ", "if", " stop", "word", " in", " count", "_", "words", ":", "\n", "            ", "del", " count", "_", "words", "[", "stop", "word", "]", "\n", "\n", "    ", "return", " count", "_", "words"], "logprobs": [-2.2866997718811035, -0.056254662573337555, -0.6804986000061035, -0.00015877417172305286, -0.10117195546627045, -1.7607051134109497, -2.893190860748291, -0.539673924446106, -1.856285810470581, -0.0057577709667384624, -0.0006204110686667264, -0.000500196241773665, -0.017902454361319542, -0.1781386435031891, -1.1049854755401611, -0.006984698586165905, -0.0005694198189303279, -1.1329400539398193, -0.00046719127567484975, -0.026020919904112816, -0.1833685040473938, -0.37924569845199585, -2.4561619758605957, -0.0010632582707330585, -1.3716610670089722, -1.6558759212493896, -0.8332554697990417, -0.0669514387845993, -3.6317195892333984, -4.3067240715026855, -0.3041417896747589, -0.18950442969799042, -2.1169445514678955, -0.10940850526094437, -1.0115798711776733, -0.45158669352531433, -0.00224956963211298, -1.3884234428405762, -0.0780303031206131, -1.5602097511291504, -0.000773488252889365, -0.0128590427339077, -1.0622482299804688, -0.07509802281856537, -0.4221908152103424, -0.6618340611457825, -0.2460779994726181, -0.05745227634906769, -0.5553625226020813, -2.6956968307495117, -0.02464129962027073, -0.11372647434473038, -0.007051344029605389, -0.053893424570560455, -0.0004975749761797488, -0.4384606182575226, -0.00031394799589179456, -0.038354888558387756, -0.191696435213089, -0.03415580466389656, -0.9954479336738586, -2.314329147338867, -2.9152278900146484, -1.1263030767440796, -0.02591254748404026, -0.017164137214422226, -0.31212249398231506, -0.005746985320001841, -0.09330210834741592, -0.01093702856451273, -0.03915373235940933, -0.0001627074379939586, -0.0023993058130145073, -0.0001567479339428246, -0.013068737462162971, -0.5550221800804138, -0.0007375142886303365, -0.3545478284358978, -3.4117722511291504, -1.1301127672195435, -0.9240826964378357, -1.7939828634262085, -1.537773847579956, -0.5380837917327881, -0.2769870162010193, -0.002214719308540225, -3.6513969898223877, -1.5239720344543457, -1.2454335689544678, -0.018894687294960022, -0.04089828580617905, -0.03902384638786316, -0.08100468665361404, -0.01125758234411478, -0.008185530081391335, -0.02472875826060772, -0.05029590427875519, -0.3127593696117401, -0.0006246999255381525, -0.9195085167884827, -2.2985787391662598, -0.20191435515880585, -2.650402784347534, -1.9752285480499268, -1.5839836597442627, -0.03787212818861008, -0.3612872362136841, -0.0012497241841629148, -2.392411947250366, -1.1573448181152344, -0.07374942302703857, -0.000532842765096575, -0.018678253516554832, -3.576278118089249e-07, -1.9788545614574105e-05, -0.0002890407631639391, -1.549708758830093e-05, -0.0018279524520039558, -0.002785732736811042, -0.0019125519320368767, -0.3675723969936371, -0.01730251871049404, -0.0004188137245364487, -0.020935039967298508, -0.03162543848156929, -0.00014852374442853034, -3.3854863431770355e-05, -0.13139040768146515, -0.003559564705938101, -0.0011547094909474254, -0.3318403661251068, -0.0017817826010286808, -7.843663479434326e-05, -5.364403477869928e-06, -0.00013517419574782252, -0.0003289635351393372, -0.00036113892565481365, -0.00032074074260890484, -0.0009491706150583923, -0.05814356356859207, -0.0016631354810670018, -0.1758141964673996, -0.168182834982872, -1.9550132492440753e-05, -6.794906312279636e-06], "finish_reason": "stop"}], "metrics": {"energy": 140.9625430583954, "energy_per_token": 0.9721554693682442, "time": 6.1125503, "time_per_token": 0.04215551931034483}}
{"outputs": [{"text": "# Split the input text into words and lowercase them\n    words = re.findall(r'\\w+', text.lower())\n    # Remove punctuation and common stopwords\n    words = [word for word in words if word.lower() not in STOPWORDS]\n    # Count the occurrences of each word and return as a dictionary\n    return Counter(words)", "tokens": ["#", " Split", " the", " input", " text", " into", " words", " and", " lower", "case", " them", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n", "    ", "#", " Remove", " punct", "uation", " and", " common", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "#", " Count", " the", " occurrences", " of", " each", " word", " and", " return", " as", " a", " dictionary", "\n", "    ", "return", " Counter", "(", "words", ")", "\n", "\n", "def"], "logprobs": [-0.6840730905532837, -1.1399145126342773, -0.26959002017974854, -2.5429248809814453, -0.17907443642616272, -0.10399148613214493, -0.1323695033788681, -2.0625977516174316, -3.0690267086029053, -0.014027454890310764, -0.038237061351537704, -0.07226969301700592, -0.0010006187949329615, -0.04843015596270561, -0.016723090782761574, -0.6224584579467773, -3.158996332786046e-05, -0.20549607276916504, -4.434487345861271e-05, -0.04583299160003662, -0.018210599198937416, -0.10692007094621658, -0.2030138522386551, -0.007928093895316124, -1.6927575416048057e-05, -0.025356683880090714, -0.20192614197731018, -0.0025046665687114, -0.0019254018552601337, -0.003134815488010645, -1.8714463710784912, -0.06762348860502243, -0.06709235161542892, -0.9306867718696594, -0.03932945057749748, -1.3500175476074219, -0.5864366292953491, -0.020407704636454582, -0.006672127638012171, -0.4179594814777374, -0.0010882653295993805, -0.17126482725143433, -0.04026825353503227, -0.005496507976204157, -0.3769584894180298, -0.06584786623716354, -0.0001958416833076626, -7.068861305015162e-05, -0.0031746248714625835, -0.018314657732844353, -0.1515268087387085, -2.863354444503784, -0.42679810523986816, -0.0014355602907016873, -0.006538308225572109, -2.3245540432981215e-05, -0.007480940781533718, -2.3841855067985307e-07, -4.172316494077677e-06, -9.238292841473594e-05, -2.169585604860913e-05, -0.2085459679365158, -0.0006216024048626423, -0.12126529216766357, -0.026097921654582024, -0.4449973702430725, -0.1928628534078598, -0.38564229011535645, -0.0031699903775006533, -0.055493276566267014, -0.0034098834730684757, -2.508345127105713, -0.08633345365524292, -2.173275947570801, -0.0868735983967781, -0.018998323008418083, -0.016786979511380196, -0.0011876918142661452, -0.30759409070014954, -0.06724416464567184, -0.00042298430344089866, -0.002867041854187846, -0.13378790020942688, -0.46440303325653076, -0.024162927642464638, -1.0220327377319336], "finish_reason": "stop"}], "metrics": {"energy": 74.47654093170166, "energy_per_token": 0.8660062899035077, "time": 3.3678772, "time_per_token": 0.03916136279069768}}
{"outputs": [{"text": "words = re.findall(r'\\w+', text)\n    words_lower = [word.lower() for word in words]\n    words_no_punc = [re.sub(r'[^\\w]', '', word) for word in words_lower]\n    words_no_stop = [word for word in words_no_punc if word not in STOPWORDS]\n\n    freq_dict = Counter(words_no_stop)\n\n    return freq_dict", "tokens": ["words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n", "    ", "words", "_", "lower", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", "]", "\n", "    ", "words", "_", "no", "_", "p", "unc", " =", " [", "re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "]", "'", ",", " ''", ",", " word", ")", " for", " word", " in", " words", "_", "lower", "]", "\n", "    ", "words", "_", "no", "_", "stop", " =", " [", "word", " for", " word", " in", " words", "_", "no", "_", "p", "unc", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "freq", "_", "dict", " =", " Counter", "(", "words", "_", "no", "_", "stop", ")", "\n", "\n", "    ", "return", " fre", "q", "_", "dict"], "logprobs": [-1.7892271280288696, -0.04949388653039932, -0.5094356536865234, -0.00011145447206217796, -0.21477369964122772, -0.0002273062855238095, -0.05460738390684128, -0.015583529137074947, -0.15297919511795044, -0.13866832852363586, -0.010501365177333355, -4.5298504119273275e-05, -0.015982728451490402, -0.9916067123413086, -0.08198404312133789, -0.12328751385211945, -0.1559983789920807, -2.45516037940979, -0.8953190445899963, -0.01052094716578722, -0.024141166359186172, -0.3133763372898102, -0.0050900159403681755, -0.003237247234210372, -0.0001629458274692297, -0.0036134920082986355, -9.154854342341423e-05, -0.00010466027742950246, -0.001701218425296247, -0.08193747699260712, -0.006270141340792179, -0.12651857733726501, -0.17164112627506256, -0.01949998177587986, -0.8435986638069153, -0.0021466801408678293, -2.164205551147461, -0.011311567388474941, -0.02683141641318798, -0.02210945077240467, -1.6026915311813354, -0.0002044230350293219, -0.004370186012238264, -0.11153212189674377, -0.013023671694099903, -0.06459366530179977, -0.0505988746881485, -0.3783239424228668, -0.0007969540893100202, -0.9717302918434143, -0.005209087394177914, -9.858122211880982e-05, -0.061568427830934525, -0.00010990492592100054, -0.02240452729165554, -0.021287180483341217, -0.031092273071408272, -0.00010096516780322418, -5.352353764465079e-05, -0.0002936885575763881, -0.044517625123262405, -0.0001472126314183697, -0.04625239968299866, -0.0051231058314442635, -0.0628211572766304, -0.1670597940683365, -0.005199837032705545, -0.10366117209196091, -7.712543447269127e-05, -0.12369641661643982, -0.4970231056213379, -0.022750908508896828, -0.007869903929531574, -0.005313441157341003, -0.00019464982324279845, -0.00019000156316906214, -0.0011993603548035026, -0.0020650746300816536, -0.0010509926360100508, -0.00014435203047469258, -0.00017808281700126827, -0.0004211969207972288, -0.02673102356493473, -0.0301522146910429, -0.009398501366376877, -4.5298504119273275e-05, -0.004552595317363739, -1.1920928244535389e-07, -6.079655122448457e-06, -7.867782187531702e-06, -2.4914430468925275e-05, -0.0028370865620672703, -0.0014285369543358684, -1.4305833578109741, -0.00019500737835187465, -1.5585951805114746, -0.8951370120048523, -0.8421964049339294, -0.0028660909738391638, -0.054880838841199875, -0.005108518060296774, -0.003676086664199829, -0.0009377372916787863, -0.00016819016309455037, -1.1920928244535389e-07, -0.0005034133209846914, -0.00033563701435923576, -0.017650319263339043, -0.3966432809829712, -0.00035291642416268587, -0.03603650629520416, -0.05004965141415596, -8.344646857949556e-07, -5.030505417380482e-05, -3.6954811548639555e-06], "finish_reason": "stop"}], "metrics": {"energy": 112.41931283950804, "energy_per_token": 0.9775592420826786, "time": 4.631809, "time_per_token": 0.040276599999999996}}
{"outputs": [{"text": "# Split the text into words, remove punctuation, convert to lowercase, remove stopwords\n    words = re.sub(r'[^a-z]', ' ', text.lower()).split()\n    words = [w for w in words if w not in STOPWORDS]\n\n    # Count the frequency of words\n    freq = Counter(words)\n\n    return freq", "tokens": ["#", " Split", " the", " text", " into", " words", ",", " remove", " punct", "uation", ",", " convert", " to", " lower", "case", ",", " remove", " stop", "words", "\n", "    ", "words", " =", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "]", "'", ",", " '", " '", ",", " text", ".", "lower", "())", ".", "split", "()", "\n", "    ", "words", " =", " [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " words", "\n", "    ", "freq", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "return", " fre", "q", "\n", "\n", "if"], "logprobs": [-0.6840730905532837, -1.1399145126342773, -0.26959002017974854, -0.1078777015209198, -0.026057736948132515, -0.07611621171236038, -2.3471882343292236, -1.2619487047195435, -0.19373969733715057, -0.03566962108016014, -0.747454822063446, -0.9721168279647827, -0.08744218945503235, -0.0006149308173917234, -0.008579655550420284, -0.19002002477645874, -1.5047187805175781, -0.3492147922515869, -0.018379148095846176, -1.2397992610931396, -0.003765874309465289, -0.11371306329965591, -0.020092174410820007, -0.7550809383392334, -6.270212179515511e-05, -2.050295829772949, -0.23137328028678894, -0.050585612654685974, -0.3079822063446045, -0.08441099524497986, -2.1518285274505615, -0.08633006364107132, -1.5735502529423684e-05, -4.9828242481453344e-05, -1.5787312984466553, -0.017257526516914368, -9.095255518332124e-05, -0.8677207231521606, -0.0027668310794979334, -0.0001501924270996824, -0.0901520624756813, -0.04158509895205498, -0.004126486834138632, -0.028763575479388237, -0.020324189215898514, -0.08127959072589874, -0.040008753538131714, -0.010895640589296818, -0.08199986070394516, -0.20944860577583313, -0.03619954735040665, -0.009518359787762165, -1.0273011922836304, -0.1275574266910553, -0.00032050241134129465, -9.965400386136025e-05, -0.014460175298154354, -0.0014606770128011703, -0.027178354561328888, -0.02352551743388176, -3.2186455882765586e-06, -0.010711672715842724, -2.3841855067985307e-07, -5.125986263010418e-06, -3.671578815556131e-05, -2.47952248173533e-05, -0.007645274978131056, -0.014715583063662052, -0.12793700397014618, -0.00037269797758199275, -0.01967708021402359, -0.5671254396438599, -0.5794121623039246, -1.162717580795288, -0.001262344536371529, -1.5349862575531006, -0.27724093198776245, -0.00010835537250386551, -1.1043082475662231, -0.6547614336013794, -0.008542070165276527, -0.011113882064819336, -0.007948554120957851, -0.0003054867556784302, -0.021631615236401558, -0.18915067613124847, -0.00023016665363684297, -0.3210282027721405, -0.15463761985301971, -3.099436753473128e-06, -0.8070568442344666, -0.022781439125537872, -1.4853694438934326], "finish_reason": "stop"}], "metrics": {"energy": 107.56107636070249, "energy_per_token": 1.1565707135559407, "time": 3.796746, "time_per_token": 0.040825225806451614}}
{"outputs": [{"text": "# Split the text into words and remove punctuation marks and stopwords\n    words = [word.lower() for word in text.split() if word not in STOPWORDS and not re.match(r\"^[\\w]+$\", word)]\n\n    # Calculate the frequency of each word\n    return Counter(words)", "tokens": ["#", " Split", " the", " text", " into", " words", " and", " remove", " punct", "uation", " marks", " and", " stop", "words", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " not", " re", ".", "match", "(", "r", "\"", "^", "[\\", "w", "]", "+$", "\"", ",", " word", ")]", "\n", "\n", "    ", "#", " Calculate", " the", " frequency", " of", " each", " word", "\n", "    ", "return", " Counter", "(", "words", ")"], "logprobs": [-0.6840730905532837, -1.1399145126342773, -0.26959002017974854, -0.1078777015209198, -0.026057736948132515, -0.07611621171236038, -1.8180077075958252, -0.5637938976287842, -0.6451913714408875, -0.05509307608008385, -0.979205310344696, -0.3969285190105438, -0.954313337802887, -0.007324863690882921, -0.11832436174154282, -0.0021108745131641626, -0.08428192138671875, -0.012490264140069485, -0.8022080063819885, -0.31914448738098145, -0.16305667161941528, -0.048491936177015305, -0.0003805628512054682, -0.15507473051548004, -0.0015167410019785166, -0.0007407305529341102, -2.8107991218566895, -0.005900820251554251, -0.026340041309595108, -0.008817782625555992, -0.20753033459186554, -0.3318122923374176, -0.8466437458992004, -5.185469490243122e-05, -0.019446903839707375, -5.960462772236497e-07, -7.152531907195225e-06, -2.396077979938127e-05, -2.884823152271565e-05, -0.692789614200592, -1.2614586353302002, -0.21076658368110657, -3.349725011503324e-05, -0.23376145958900452, -0.33230459690093994, -0.02275661937892437, -1.6550421714782715, -3.23930025100708, -1.1737724542617798, -1.5514726638793945, -1.3201203346252441, -0.11911802738904953, -0.005702418275177479, -0.0003665013937279582, -0.004851830657571554, -0.04409715160727501, -0.007144616451114416, -0.2264486700296402, -0.0002299282787134871, -0.0067985886707901955, -0.8057301640510559, -0.04913599416613579, -0.043668508529663086, -0.0023486430291086435, -0.1408233642578125, -0.002875956939533353, -0.16649839282035828, -0.00013207517622504383, -2.2581534385681152, -0.03372518718242645, -0.0015063855098560452, -0.00499773770570755, -0.1314782202243805], "finish_reason": "stop"}], "metrics": {"energy": 107.96799141311648, "energy_per_token": 1.4790135810015956, "time": 2.9614863, "time_per_token": 0.04056830547945205}}
{"outputs": [{"text": "# Create regular expressions for punctuation and stopwords\n    punc_regex = re.compile('[%s]' % re.escape(string.punctuation))\n    stopwords = [s.lower() for s in STOPWORDS]\n    regex = re.compile(r'\\b(%s)\\b' % '|'.join(stopwords))\n\n    # Remove punctuation and stopwords\n    words = [regex.sub('', punc_regex.sub('', word)).lower() for word in text.split()]\n\n    # Count occurrences of each word\n    word_counts = Counter(words)\n\n    return word_counts", "tokens": ["#", " Create", " regular", " expressions", " for", " punct", "uation", " and", " stop", "words", "\n", "    ", "p", "unc", "_", "regex", " =", " re", ".", "compile", "('", "[", "%", "s", "]", "'", " %", " re", ".", "escape", "(", "string", ".", "punct", "uation", "))", "\n", "    ", "stop", "words", " =", " [", "s", ".", "lower", "()", " for", " s", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "regex", " =", " re", ".", "compile", "(", "r", "'\\", "b", "(%", "s", ")\\", "b", "'", " %", " '", "|", "'", ".", "join", "(", "stop", "words", "))", "\n", "\n", "    ", "#", " Remove", " punct", "uation", " and", " stop", "words", "\n", "    ", "words", " =", " [", "regex", ".", "sub", "('", "'", ",", " p", "unc", "_", "regex", ".", "sub", "('", "'", ",", " word", "))", ".", "lower", "()", " for", " word", " in", " text", ".", "split", "()", "]", "\n", "\n", "    ", "#", " Count", " occurrences", " of", " each", " word", "\n", "    ", "word", "_", "counts", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "return", " word", "_", "counts"], "logprobs": [-0.6840730905532837, -3.7927961349487305, -2.7679479122161865, -0.3664974570274353, -0.5585376620292664, -0.8341271877288818, -0.03910638764500618, -0.9000868201255798, -0.43485960364341736, -0.017415225505828857, -0.07597015798091888, -0.0034560970962047577, -1.2785632610321045, -0.10101690888404846, -0.442579060792923, -0.5109197497367859, -0.004517943598330021, -0.024922724813222885, -1.7762025890988298e-05, -0.0007508557755500078, -0.5438215732574463, -0.10929597914218903, -0.3326704800128937, -0.0004096384218428284, -0.00868519488722086, -0.0003916450368706137, -0.0011629253858700395, -0.0004158347437623888, -0.00015889335190877318, -0.010018422268331051, -0.1261250078678131, -0.08077258616685867, -0.00010859376925509423, -0.0002057340752799064, -0.00015484087634831667, -0.009830278344452381, -0.014770086854696274, -0.014592351391911507, -0.28307005763053894, -0.7642605304718018, -1.4506984949111938, -1.8134944438934326, -2.6408042907714844, -0.05750404670834541, -0.0482998788356781, -0.0003094194398727268, -0.00326017988845706, -0.00023195437097456306, -0.00025507534155622125, -0.02632831409573555, -5.960462772236497e-07, -1.2159273865108844e-05, -1.4305012882687151e-05, -2.396077979938127e-05, -0.016310464590787888, -0.020865343511104584, -0.8615055084228516, -2.6885294914245605, -0.727332353591919, -0.11675094813108444, -5.066266385256313e-05, -0.008485689759254456, -0.841272234916687, -0.2271614968776703, -0.48523473739624023, -0.12291913479566574, -1.952565312385559, -6.615896563744172e-05, -0.006381846498697996, -0.003311390522867441, -0.010304464027285576, -0.005805772263556719, -0.061784401535987854, -0.00034409802174195647, -0.0003137096355203539, -4.2914423829643056e-05, -9.178694017464295e-05, -0.0071755084209144115, -0.21833014488220215, -0.0002867764269467443, -0.07131174206733704, -0.008587929420173168, -0.16215908527374268, -0.0006912940880283713, -0.04102495312690735, -1.5962355136871338, -0.0670803114771843, -0.016559889540076256, -0.6394803524017334, -0.5307552814483643, -0.004213384818285704, -1.7767616510391235, -0.0004836343287024647, -0.9867122769355774, -0.024414008483290672, -0.47545531392097473, -1.204865574836731, -0.00514943478628993, -0.001444130903109908, -0.049588046967983246, -0.05698934569954872, -0.00021109737281221896, -0.7398743033409119, -0.004572293721139431, -0.00019488819816615433, -2.4437606043647975e-05, -0.00023910524032544345, -2.8490614567999728e-05, -0.00937925186008215, -0.01166452094912529, -0.00020180096908006817, -0.6303433775901794, -1.1523489952087402, -0.9742533564567566, -0.06791234761476517, -0.0003120412293355912, -0.1914752721786499, -0.0023236675187945366, -0.0008075552177615464, -0.311164915561676, -0.009078415110707283, -0.014209521003067493, -0.0243032518774271, -0.14723025262355804, -0.002444971352815628, -0.3202860653400421, -0.00043108707177452743, -0.053774815052747726, -0.7725234031677246, -1.022054672241211, -0.22105129063129425, -1.1706081628799438, -0.009885403327643871, -0.11632931977510452, -0.00028796817059628665, -1.2740625143051147, -0.008914198726415634, -0.8439404964447021, -0.0003675738989841193, -0.015952225774526596, -0.022276993840932846, -0.04000107944011688, -0.0008132726070471108, -0.016642548143863678, -0.11336445063352585, -0.0003461238811723888, -0.7670579552650452, -0.1713656783103943, -2.682172998902388e-05, -2.7417760065873154e-05], "finish_reason": "stop"}], "metrics": {"energy": 147.26362762451183, "energy_per_token": 0.9817575174967456, "time": 6.3224406, "time_per_token": 0.042149604}}
{"outputs": [{"text": "# Remove common stopwords and punctuation\n    words = [word.lower() for word in re.findall(r'\\w+', text) if word not in STOPWORDS]\n\n    # Calculate word frequencies\n    word_freq = Counter(words)\n\n    return word_freq", "tokens": ["#", " Remove", " common", " stop", "words", " and", " punct", "uation", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Calculate", " word", " frequencies", "\n", "    ", "word", "_", "freq", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "return", " word", "_", "freq", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6840730905532837, -1.8252334594726562, -1.9070367813110352, -0.40151962637901306, -0.019131071865558624, -1.1416834592819214, -0.11025582253932953, -0.08182533085346222, -1.3407880067825317, -0.0026880106888711452, -0.8161372542381287, -0.03163410350680351, -0.43825921416282654, -0.33325085043907166, -0.17919811606407166, -0.05987497791647911, -0.00013672371278516948, -0.098052479326725, -0.0011441120877861977, -0.0007292948430404067, -0.4018706977367401, -0.00011979816190432757, -0.5209958553314209, -6.0794889577664435e-05, -0.031033797189593315, -0.009881625883281231, -0.1659379005432129, -0.05230876803398132, -0.002913280390202999, -1.9788545614574105e-05, -0.010342691093683243, -0.6889475584030151, -0.11542818695306778, -0.025497538968920708, -0.4369127154350281, -2.0861407392658293e-05, -0.008361687883734703, -3.576278118089249e-07, -6.198863957251888e-06, -2.658331868587993e-05, -3.373566141817719e-05, -0.021805420517921448, -0.0017150230705738068, -0.2471517026424408, -0.00027247529942542315, -0.01648484542965889, -0.9238625764846802, -1.590450644493103, -0.222189798951149, -0.10349801927804947, -0.00014828535495325923, -0.5245945453643799, -0.0012538912706077099, -0.3141268491744995, -0.4125592112541199, -0.007997514680027962, -0.002478386741131544, -0.005750304087996483, -0.0001858300092862919, -0.00907132774591446, -0.09560558199882507, -0.00020823694649152458, -0.21197105944156647, -0.08797212690114975, -1.3708974620385561e-05, -1.883488948806189e-05, -1.0105574131011963, -1.311301275563892e-06, -5.960462772236497e-07, -0.00010358751023886725, -0.0001438752660760656, -0.07648976147174835], "finish_reason": "stop"}], "metrics": {"energy": 74.75495179557801, "energy_per_token": 1.038263219383028, "time": 2.745759, "time_per_token": 0.03813554166666667}}
{"outputs": [{"text": "# Split the text into words\n    words = re.findall(r'\\w+', text.lower())\n\n    # Remove common stopwords and punctuation\n    filtered_words = [w for w in words if w not in STOPWORDS and re.search(r'\\w', w)]\n\n    # Calculate the frequency of words\n    return Counter(filtered_words)", "tokens": ["#", " Split", " the", " text", " into", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n", "\n", "    ", "#", " Remove", " common", " stop", "words", " and", " punct", "uation", "\n", "    ", "filtered", "_", "words", " =", " [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " re", ".", "search", "(", "r", "'\\", "w", "'", ",", " w", ")]", "\n", "\n", "    ", "#", " Calculate", " the", " frequency", " of", " words", "\n", "    ", "return", " Counter", "(", "filtered", "_", "words", ")", "\n", "\n", "if"], "logprobs": [-0.6840730905532837, -1.1399145126342773, -0.26959002017974854, -0.1078777015209198, -0.026057736948132515, -0.07611621171236038, -0.46383216977119446, -0.000942977552767843, -0.018576104193925858, -0.007733405567705631, -0.35233837366104126, -3.731181277544238e-05, -0.20085783302783966, -0.00014423283573705703, -0.05206573009490967, -0.012457299046218395, -0.09203580021858215, -0.10978712886571884, -0.00506178755313158, -1.4066597032069694e-05, -0.011648260988295078, -0.6707911491394043, -0.0028653775807470083, -0.006835292559117079, -0.0050485036335885525, -0.16306912899017334, -0.0002420847595203668, -0.0020810156129300594, -0.033649690449237823, -0.6616281867027283, -0.09264253824949265, -0.008941254578530788, -1.4908733367919922, -0.03617345169186592, -0.026656623929739, -0.9215278029441833, -0.00046921687317080796, -2.631868600845337, -0.031832505017519, -0.004419322125613689, -0.0011632826644927263, -0.02615610510110855, -1.5325472354888916, -0.06602932512760162, -5.864924969500862e-05, -6.294052582234144e-05, -0.0018826870946213603, -0.016572434455156326, -0.05011416971683502, -0.03322231397032738, -5.722029527532868e-06, -0.007136213127523661, -1.1920928244535389e-07, -5.364403477869928e-06, -6.961580220377073e-05, -2.6225699912174605e-05, -1.5681344270706177, -1.6973810195922852, -1.537788011773955e-05, -1.4742956161499023, -0.06023107096552849, -0.0019091013818979263, -0.4291675090789795, -0.05804041773080826, -0.4677307903766632, -0.00014256415306590497, -0.0031916177831590176, -0.09897026419639587, -0.002520838286727667, -0.014107972383499146, -0.0002441108226776123, -0.012016172520816326, -0.5418500900268555, -0.1714133769273758, -0.03626542538404465, -0.004774953704327345, -2.1445372104644775, -0.13575105369091034, -0.0002989322238136083, -2.3045592308044434, -0.041418932378292084, -0.0007943335804156959, -0.002387651242315769, -0.00015066919149830937, -3.6954811548639555e-06, -0.16130462288856506, -0.6289746761322021, -0.022738322615623474, -1.524470329284668], "finish_reason": "stop"}], "metrics": {"energy": 101.40474964141848, "energy_per_token": 1.1393792094541402, "time": 3.5881443, "time_per_token": 0.04031622808988764}}
{"outputs": [{"text": "# Split the text into words\n    words = nltk.word_tokenize(text)\n\n    # Convert words to lowercase\n    words = [word.lower() for word in words]\n\n    # Remove punctuation marks and common stopwords\n    words = [word for word in words if word not in STOPWORDS]\n    words = [re.sub('[^\\w]', '', word) for word in words]\n\n    # Calculate the frequency of each word\n    freq = Counter(words)\n    return freq", "tokens": ["#", " Split", " the", " text", " into", " words", "\n", "    ", "words", " =", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "text", ")", "\n", "\n", "    ", "#", " Convert", " words", " to", " lower", "case", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", "]", "\n", "\n", "    ", "#", " Remove", " punct", "uation", " marks", " and", " common", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "words", " =", " [", "re", ".", "sub", "('", "[", "^\\", "w", "]", "'", ",", " ''", ",", " word", ")", " for", " word", " in", " words", "]", "\n", "\n", "    ", "#", " Calculate", " the", " frequency", " of", " each", " word", "\n", "    ", "freq", " =", " Counter", "(", "words", ")", "\n", "    ", "return", " fre", "q"], "logprobs": [-0.6840730905532837, -1.1399145126342773, -0.26959002017974854, -0.1078777015209198, -0.026057736948132515, -0.07611621171236038, -0.46383216977119446, -0.000942977552767843, -0.018576104193925858, -0.007733405567705631, -2.503983974456787, -0.04267144203186035, -1.847726889536716e-05, -0.0010469438275322318, -0.031599681824445724, -0.4208170175552368, -0.001081834896467626, -0.0003256267518736422, -0.0007934997556731105, -0.009847867302596569, -0.09220268577337265, -0.002253137994557619, -0.14547085762023926, -0.00022110878489911556, -0.0016943159280344844, -0.2740076780319214, -0.24613922834396362, -0.0012055517872795463, -0.000567275274079293, -0.004539541434496641, -0.3814540207386017, -0.0002698534226510674, -0.08279785513877869, -0.027296101674437523, -0.00657727150246501, -0.12136771529912949, -0.0024700628127902746, -0.003195182653144002, -7.354942499659956e-05, -0.007011807058006525, -5.6622808187967166e-05, -3.5523738915799186e-05, -0.00044216870446689427, -0.04130340740084648, -5.8410845667822286e-05, -0.004376714117825031, -0.0002584123576525599, -0.0014230611268430948, -0.005797001998871565, -0.08686857670545578, -0.01940458081662655, -0.4037860333919525, -0.4124094247817993, -0.3265197277069092, -0.0063874139450490475, -0.002043898915871978, -0.1087750792503357, -0.00058466981863603, -0.3618219494819641, -0.021388936787843704, -0.009409838356077671, -0.07018996775150299, -0.07015218585729599, -0.00015710550360381603, -7.176141662057489e-05, -0.0009552444680593908, -0.05517565459012985, -0.8091028928756714, -0.2770377993583679, -4.0411134250462055e-05, -0.033943455666303635, -3.576278118089249e-07, -2.3007127310847864e-05, -4.3987260141875595e-05, -2.0861407392658293e-05, -1.0008111000061035, -0.001923617091961205, -1.0181570053100586, -0.10172180831432343, -0.006026075221598148, -0.06303585320711136, -0.9341855049133301, -0.00011062010162277147, -0.011887777596712112, -1.9319969415664673, -0.0764971598982811, -1.9863996505737305, -0.003819552715867758, -0.5129386186599731, -0.002249688608571887, -7.581423415103927e-05, -0.023103343322873116, -0.00012778419477399439, -0.005637816619127989, -0.0009946642676368356, -0.0062470403499901295, -8.439661905867979e-05, -3.218599158572033e-05, -0.00035232058144174516, -0.0471261627972126, -0.02246292680501938, -0.1552419364452362, -0.0005452338373288512, -0.014245836064219475, -0.6526256799697876, -0.20883816480636597, -0.022612813860177994, -0.00233258749358356, -0.146327406167984, -0.0014857931528240442, -0.057224664837121964, -0.000513064325787127, -1.1663649082183838, -0.8501238822937012, -0.010909201577305794, -0.004606469068676233, -0.004202819894999266, -0.00022313489171210676, -0.012827031314373016, -2.045807123184204, -0.17949023842811584, -0.12448804080486298, -5.245195097813848e-06], "finish_reason": "stop"}], "metrics": {"energy": 116.22036398506164, "energy_per_token": 0.9448810080086312, "time": 5.061159, "time_per_token": 0.04114763414634146}}
{"outputs": [{"text": "word_counts = Counter()\n\n    # Convert the text to lowercase, remove punctuation, and remove common stopwords\n    words = [word.lower() for word in re.findall(r\"\\w+\", text) if word not in STOPWORDS]\n\n    # Count the occurrences of each word\n    for word in words:\n        word_counts[word] += 1\n\n    return dict(word_counts)", "tokens": ["word", "_", "counts", " =", " Counter", "()", "\n", "\n", "    ", "#", " Convert", " the", " text", " to", " lower", "case", ",", " remove", " punct", "uation", ",", " and", " remove", " common", " stop", "words", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " occurrences", " of", " each", " word", "\n", "    ", "for", " word", " in", " words", ":", "\n", "        ", "word", "_", "counts", "[", "word", "]", " +=", " ", "1", "\n", "\n", "    ", "return", " dict", "(", "word", "_", "counts", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-3.591190814971924, -0.058698251843452454, -2.3097286224365234, -0.004601010587066412, -0.06572418659925461, -0.04079437628388405, -0.08747386187314987, -0.8671537637710571, -0.0006311332108452916, -0.38206273317337036, -2.6555705070495605, -1.0042375326156616, -0.3141210973262787, -0.11589212715625763, -0.5208320021629333, -0.006956050638109446, -0.6982647180557251, -0.32078129053115845, -0.11927198618650436, -0.038619522005319595, -0.673929750919342, -0.17433084547519684, -1.7970552444458008, -0.7193711996078491, -0.0360792838037014, -0.010712380520999432, -0.08597362786531448, -0.0011530425399541855, -0.8248675465583801, -0.01905832625925541, -0.4169367551803589, -0.24602235853672028, -0.386530339717865, -0.06319063901901245, -0.00024196557933464646, -0.14043425023555756, -0.0011617346899583936, -0.0009553635609336197, -0.12718138098716736, -9.16677454370074e-05, -0.1630266010761261, -4.2676016164477915e-05, -0.014377100393176079, -0.005774482619017363, -2.171037435531616, -0.22878926992416382, -0.06384923309087753, -0.15863636136054993, -0.006665614899247885, -3.6000557884108275e-05, -0.010283226147294044, -1.2947860956192017, -0.13727274537086487, -0.025403521955013275, -0.4421367347240448, -2.288792165927589e-05, -0.007191959768533707, -2.3841855067985307e-07, -3.3378546504536644e-06, -7.73638384998776e-05, -2.9801878554280847e-05, -0.00512358034029603, -0.0015437601832672954, -0.07861275225877762, -0.0001823735801735893, -0.10431492328643799, -0.7546207308769226, -0.27710774540901184, -0.27178582549095154, -0.003976653330028057, -0.11150301247835159, -0.006089585367590189, -0.13417136669158936, -0.000176652567461133, -0.3947414457798004, -0.010010396130383015, -0.012050211429595947, -0.0065050283446908, -5.0424259825376794e-05, -0.0003586364327929914, -0.000773369160015136, -0.029691169038414955, -0.0004111875023227185, -0.0009553635609336197, -0.010721225291490555, -0.00011300401820335537, -0.00098204065579921, -0.0009781105909496546, -0.0009615565068088472, -4.708655978902243e-05, -0.0014141331193968654, -0.0068702190183103085, -0.0004180987598374486, -0.09832078963518143, -2.2355360984802246, -0.0012740122620016336, -0.0032610115595161915, -4.649054244509898e-05, -2.002696055569686e-05, -0.8058255910873413, -2.0265558760002023e-06, -1.0728830375228426e-06, -0.0002351722796447575, -0.00013600854435935616, -0.10133624076843262], "finish_reason": "stop"}], "metrics": {"energy": 95.32594385719302, "energy_per_token": 0.9078661319732669, "time": 4.2172008, "time_per_token": 0.04016381714285714}}
{"outputs": [{"text": "# Convert the input text to a list of words\n    words = re.split(r'\\W+', text)\n    words = [word.lower() for word in words]\n\n    # Remove common stopwords\n    words = [word for word in words if word not in STOPWORDS]\n\n    # Count the occurrences of each word\n    counter = Counter(words)\n\n    # Convert the dictionary to a list of tuples\n    word_counts = [(word, counter[word]) for word in counter]\n\n    # Sort the list based on the word frequency\n    word_counts.sort(key=lambda x: x[1], reverse=True)\n\n    # Return a dictionary of word counts\n    return dict(word_counts)", "tokens": ["#", " Convert", " the", " input", " text", " to", " a", " list", " of", " words", "\n", "    ", "words", " =", " re", ".", "split", "(", "r", "'\\", "W", "+'", ",", " text", ")", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", "]", "\n", "\n", "    ", "#", " Remove", " common", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " occurrences", " of", " each", " word", "\n", "    ", "counter", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "#", " Convert", " the", " dictionary", " to", " a", " list", " of", " t", "up", "les", "\n", "    ", "word", "_", "counts", " =", " [(", "word", ",", " counter", "[", "word", "])", " for", " word", " in", " counter", "]", "\n", "\n", "    ", "#", " Sort", " the", " list", " based", " on", " the", " word", " frequency", "\n", "    ", "word", "_", "counts", ".", "sort", "(", "key", "=", "lambda", " x", ":", " x", "[", "1", "]", ",", " reverse", "=", "True", ")", "\n", "\n", "    ", "#", " Return", " a", " dictionary", " of", " word", " counts", "\n", "    ", "return", " dict", "(", "word", "_", "counts", ")", "\n", "\n", "def"], "logprobs": [-0.6840730905532837, -2.3867225646972656, -0.8914720416069031, -1.6726887226104736, -0.2255706638097763, -0.17491738498210907, -0.9439820647239685, -0.060941193252801895, -0.007337999064475298, -0.09825348109006882, -0.289096862077713, -0.00145329674705863, -0.09651489555835724, -0.0230565145611763, -0.6969391703605652, -5.6503606174374e-05, -2.425555467605591, -0.584929883480072, -0.10451240837574005, -0.526661217212677, -0.3284277319908142, -0.47749650478363037, -0.000102037942269817, -0.014610796235501766, -0.5884479880332947, -0.012766418978571892, -1.366233468055725, -1.248123049736023, -0.04009178653359413, -0.008242873474955559, -0.2034674882888794, -0.01902627758681774, -0.019804010167717934, -5.602679812000133e-05, -0.008753026835620403, -0.00013302871957421303, -4.470248313737102e-05, -0.000988114275969565, -0.9522216320037842, -0.004833560902625322, -0.4728116989135742, -0.0002821285743266344, -0.002623332664370537, -0.047327883541584015, -0.5230423212051392, -0.1580864042043686, -0.011793062090873718, -0.6657483577728271, -0.00025149996508844197, -0.05895283818244934, -0.01994728483259678, -0.003665040945634246, -0.01211993582546711, -0.0031343402806669474, -4.3987260141875595e-05, -2.95634672511369e-05, -0.0006886732880957425, -0.0026525810826569796, -0.011508741416037083, -0.037336770445108414, -8.106198947643861e-06, -0.010868401266634464, -1.1920928244535389e-07, -7.390948667307384e-06, -5.876845170860179e-05, -2.396077979938127e-05, -0.0014947204617783427, -0.00018034738604910672, -0.011581449769437313, -0.0002470903273206204, -0.020288677886128426, -0.6831749081611633, -0.22612334787845612, -0.47836458683013916, -0.002220785478129983, -0.054147426038980484, -0.003748772433027625, -0.13640080392360687, -0.0003259842633269727, -3.1558587551116943, -0.0029142312705516815, -0.005908641964197159, -0.004869032185524702, -0.002096242504194379, -0.0005567907355725765, -0.0011029120068997145, -0.14792975783348083, -0.00011872540198964998, -0.6543224453926086, -1.727797269821167, -0.042527616024017334, -2.271596670150757, -0.3700447678565979, -0.01829276978969574, -1.5350573062896729, -0.1678718626499176, -0.25700363516807556, -2.8609820219571702e-05, -3.4570634852570947e-06, -1.3913803100585938, -0.00019631843315437436, -1.2541790008544922, -0.006670588627457619, -2.3389241695404053, -0.004616673570126295, -0.6856761574745178, -0.037199873477220535, -0.003174149664118886, -0.27496516704559326, -0.01429872028529644, -3.4689302992774174e-05, -0.001210671616718173, -0.004106423351913691, -0.00011252723925281316, -0.0025364153552800417, -0.15529480576515198, -0.22065088152885437, -0.0004549183649942279, -0.03376125916838646, -0.0003554189461283386, -0.15782397985458374, -0.06583000719547272, -0.022487055510282516, -0.21293440461158752, -2.4435629844665527, -0.00021836756786797196, -0.8257743716239929, -1.5753086805343628, -1.5612471103668213, -0.41735780239105225, -0.0003813969960901886, -0.024423664435744286, -2.1219027985353023e-05, -0.00409490754827857, -0.08134190738201141, -1.645074735279195e-05, -0.00029488030122593045, -0.007621733006089926, -0.0012448427733033895, -0.0006156456656754017, -0.036562561988830566, -7.295342220459133e-05, -0.07343433052301407, -0.006325936410576105, -0.0005217621219344437, -0.007459051441401243, -2.586808113846928e-05, -0.0002422039397060871, -0.00010418349120300263, -0.00020883286197204143, -5.6503606174374e-05, -0.00867254938930273, -0.02047404646873474, -0.00021062063751742244, -0.403506875038147, -0.33238762617111206, -1.049920916557312, -0.029203282669186592, -1.8235352039337158, -0.4060381054878235, -0.461134672164917, -0.06490250676870346, -0.0003632839070633054, -0.061864301562309265, -0.30648794770240784, -0.0009868042543530464, -0.0010043105576187372, -3.2543604902457446e-05, -9.297892393078655e-05, -0.5074056386947632, -0.4883371889591217, -0.019033178687095642, -1.3056252002716064], "finish_reason": "stop"}], "metrics": {"energy": 182.49306685256957, "energy_per_token": 1.0548732188009802, "time": 7.156305, "time_per_token": 0.04136592485549133}}
{"outputs": [{"text": "word_list = re.sub(r'[^\\w]', ' ', text).lower().split()\n    word_list = [word for word in word_list if word not in STOPWORDS]\n    return Counter(word_list)", "tokens": ["word", "_", "list", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "]", "'", ",", " '", " '", ",", " text", ")", ".", "lower", "()", ".", "split", "()", "\n", "    ", "word", "_", "list", " =", " [", "word", " for", " word", " in", " word", "_", "list", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "return", " Counter", "(", "word", "_", "list", ")"], "logprobs": [-3.591190814971924, -0.058698251843452454, -0.9357510805130005, -0.00670646782964468, -0.900378942489624, -0.00011014331539627165, -1.9467005729675293, -0.20211948454380035, -0.053303852677345276, -0.30381089448928833, -0.08821839094161987, -0.2559632360935211, -0.0013021094491705298, -0.6141785383224487, -0.01877267099916935, -0.00016819016309455037, -0.14548054337501526, -0.0022774015087634325, -0.0002653246629051864, -0.0335719995200634, -0.12664976716041565, -0.07465315610170364, -0.4509221017360687, -0.001135181519202888, -0.01570558175444603, -0.11379062384366989, -0.02690754272043705, -0.03907715529203415, -0.15905313193798065, -0.3572484254837036, -0.0031939942855387926, -1.0987129211425781, -0.02820083498954773, -0.016128193587064743, -0.24144336581230164, -0.09346682578325272, -0.0006194579764269292, -0.0001662831346038729, -0.005004854407161474, -6.341733387671411e-05, -1.3470558769768104e-05, -0.007386989891529083, -0.04020218178629875, -0.037395454943180084, -3.349725011503324e-05, -0.0068130334839224815, -4.768370445162873e-07, -4.172316494077677e-06, -1.7762025890988298e-05, -2.610649426060263e-05, -0.0066412207670509815, -0.006698534358292818, -0.11289678514003754, -0.8227280974388123, -0.10977580398321152, -0.0022971450816839933, -0.00447284709662199, -0.0016401661559939384, -2.074220174108632e-05, -0.2854563295841217], "finish_reason": "stop"}], "metrics": {"energy": 43.96994565105438, "energy_per_token": 0.732832427517573, "time": 2.3334074, "time_per_token": 0.03889012333333333}}
{"outputs": [{"text": "# Split the text into words\n    words = re.findall(r'\\w+', text)\n\n    # Convert words to lowercase\n    words = [word.lower() for word in words]\n\n    # Remove punctuation and common stopwords\n    words = [word for word in words if word not in STOPWORDS]\n\n    # Count the frequency of each word\n    word_counts = Counter(words)\n\n    return word_counts", "tokens": ["#", " Split", " the", " text", " into", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n", "\n", "    ", "#", " Convert", " words", " to", " lower", "case", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", "]", "\n", "\n", "    ", "#", " Remove", " punct", "uation", " and", " common", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", "\n", "    ", "word", "_", "counts", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "return", " word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6840730905532837, -1.1399145126342773, -0.26959002017974854, -0.1078777015209198, -0.026057736948132515, -0.07611621171236038, -0.46383216977119446, -0.000942977552767843, -0.018576104193925858, -0.007733405567705631, -0.35233837366104126, -3.731181277544238e-05, -0.20085783302783966, -0.00014423283573705703, -0.05206573009490967, -0.012457299046218395, -0.09203580021858215, -0.10978712886571884, -0.00506178755313158, -1.4066597032069694e-05, -0.011648260988295078, -0.7189650535583496, -0.0032952316105365753, -0.13388435542583466, -0.00023266946664080024, -0.0019369428046047688, -0.30683788657188416, -0.31866422295570374, -0.0008407871937379241, -0.0006115949945524335, -0.004102268256247044, -0.32030388712882996, -0.00024101213784888387, -0.05946989730000496, -0.02750418148934841, -0.01241114642471075, -0.07983563095331192, -0.001135062426328659, -0.0004899493651464581, -6.0794889577664435e-05, -0.001209481037221849, -3.0517112463712692e-05, -1.4781842764932662e-05, -0.00024971229140646756, -0.0028033265843987465, -3.790783375734463e-05, -0.003843422280624509, -0.00020466140995267779, -0.00082923355512321, -0.007470410317182541, -0.5090458989143372, -0.013304856605827808, -1.403183937072754, -0.5765285491943359, -0.013049793429672718, -0.00371029251255095, -0.11043175309896469, -0.00036030475166626275, -0.13233858346939087, -0.01213029958307743, -0.004792631138116121, -0.013301326893270016, -0.0469522662460804, -7.521823135903105e-05, -2.729855441430118e-05, -0.0008175606490112841, -0.02839922532439232, -0.16200794279575348, -0.15944990515708923, -2.7656173188006505e-05, -0.013189803808927536, -2.3841855067985307e-07, -1.2993727978027891e-05, -3.504691630951129e-05, -2.0503786799963564e-05, -0.14773264527320862, -0.0003831844369415194, -0.02516954578459263, -0.00028618055512197316, -0.008413347415626049, -0.7755765914916992, -0.7838538885116577, -0.9965319633483887, -0.000890097115188837, -0.29091644287109375, -0.0013010379625484347, -0.053827907890081406, -0.0002935693773906678, -0.7350389361381531, -0.0019792981911450624, -1.2937779426574707, -0.0003759154351428151, -0.004405199084430933, -0.0005741854547522962, -0.0009071287349797785, -0.0002559096028562635, -0.004741496406495571, -0.03202694654464722, -0.00012718822108581662, -0.3851541578769684, -0.05008820444345474, -1.0132738680113107e-05, -2.1219027985353023e-05, -0.9663683176040649, -3.099436753473128e-06, -7.152555099310121e-07, -0.00022551853908225894, -9.226373367710039e-05, -0.0654139295220375], "finish_reason": "stop"}], "metrics": {"energy": 109.72362484550476, "energy_per_token": 1.0066387600505025, "time": 4.430654, "time_per_token": 0.04064820183486238}}
{"outputs": [{"text": "words = re.sub(r'[^\\w]', ' ', text).split()\n    words = [word.lower() for word in words if word not in STOPWORDS]\n    words_count = Counter(words)\n\n    return words_count", "tokens": ["words", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "]", "'", ",", " '", " '", ",", " text", ")", ".", "split", "()", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "words", "_", "count", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "return", " words", "_", "count", "\n", "\n", "def"], "logprobs": [-1.7892271280288696, -0.04949388653039932, -0.5094356536865234, -0.00011145447206217796, -2.10899019241333, -0.20986436307430267, -0.07655082643032074, -0.3487957715988159, -0.08329889178276062, -0.2050100415945053, -0.001039560534991324, -0.8298156261444092, -0.020293699577450752, -0.00014208737411536276, -0.136749267578125, -0.0015568528324365616, -0.00023850933939684182, -0.026016157120466232, -0.16925188899040222, -0.06796413660049438, -1.0139000415802002, -0.02942902408540249, -0.08959712088108063, -0.11047424376010895, -0.234830841422081, -0.05726226791739464, -0.020282018929719925, -0.2824426591396332, -0.05241001769900322, -0.02285205014050007, -7.521823135903105e-05, -0.010320509783923626, -0.00022420754248742014, -0.00010168035078095272, -0.0034659572411328554, -0.2723464369773865, -0.04424383118748665, -0.519062876701355, -2.586808113846928e-05, -0.009336854331195354, -4.768370445162873e-07, -4.410734163684538e-06, -3.504691630951129e-05, -3.290122185717337e-05, -0.005983179900795221, -0.004574429709464312, -0.11914564669132233, -3.4453954696655273, -0.3921128213405609, -1.8730063438415527, -0.026548901572823524, -0.014176730066537857, -0.016491997987031937, -0.006166124250739813, -0.0010804060148075223, -0.024439949542284012, -1.8634079694747925, -0.0012147198431193829, -0.04628870636224747, -0.17287036776542664, -3.9934315282152966e-05, -1.3947389561508317e-05, -0.8793945908546448, -0.022098956629633904, -1.2356315851211548], "finish_reason": "stop"}], "metrics": {"energy": 64.6100478439331, "energy_per_token": 0.9940007360605093, "time": 2.5369763, "time_per_token": 0.039030404615384616}}
{"outputs": [{"text": "words = re.findall(r'\\w+', text)  # split the input text into words\n    words = [word.lower() for word in words if word not in STOPWORDS]  # remove stopwords\n\n    word_freqs = Counter(words)  # count the frequency of each word\n\n    return word_freqs", "tokens": ["words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "  ", "#", " split", " the", " input", " text", " into", " words", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "  ", "#", " remove", " stop", "words", "\n", "\n", "    ", "word", "_", "freq", "s", " =", " Counter", "(", "words", ")", "  ", "#", " count", " the", " frequency", " of", " each", " word", "\n", "\n", "    ", "return", " word", "_", "freq", "s", "\n", "\n", "def"], "logprobs": [-1.7892271280288696, -0.04949388653039932, -0.5094356536865234, -0.00011145447206217796, -0.21477369964122772, -0.0002273062855238095, -0.05460738390684128, -0.015583529137074947, -0.15297919511795044, -0.13866832852363586, -0.010501365177333355, -4.5298504119273275e-05, -0.015982728451490402, -0.9916067123413086, -2.778923511505127, -0.00043501926120370626, -3.1289584636688232, -0.5222994089126587, -2.826047658920288, -0.3657864034175873, -0.1038622334599495, -0.09913858771324158, -0.4107040464878082, -0.08262774348258972, -0.11399742215871811, -0.07379194349050522, -0.010560109280049801, -0.3104265034198761, -0.004410777240991592, -0.006227137986570597, -3.0040289857424796e-05, -0.0072637987323105335, -0.00011467275908216834, -4.2437604861333966e-05, -0.000998594332486391, -0.9189191460609436, -0.03201863542199135, -0.2676858603954315, -1.4781842764932662e-05, -0.005273598246276379, -4.768370445162873e-07, -4.410734163684538e-06, -2.6464111215318553e-05, -2.52720492426306e-05, -0.009409366175532341, -0.21352802217006683, -3.9219088648678735e-05, -0.37242570519447327, -0.5137782692909241, -0.03710649162530899, -1.0192168951034546, -1.7590419054031372, -0.0001934579631779343, -1.0941252708435059, -0.005964694079011679, -0.5196205973625183, -1.573631763458252, -0.0013685394078493118, -0.016723208129405975, -0.002877620980143547, -0.003170941025018692, -0.00011467275908216834, -0.2487442046403885, -0.0001668790791882202, -0.2476661652326584, -0.7048196196556091, -1.0925042629241943, -0.0020136809907853603, -0.2261108011007309, -0.0009085579658858478, -0.0518835224211216, -0.5753053426742554, -0.00023636408150196075, -0.08593326061964035, -0.21361514925956726, -1.5258672647178173e-05, -2.4437606043647975e-05, -4.756337511935271e-05, -0.9469135999679565, -0.019966332241892815, -1.269894003868103], "finish_reason": "stop"}], "metrics": {"energy": 116.61855082130425, "energy_per_token": 1.439735195324744, "time": 3.38043, "time_per_token": 0.0417337037037037}}
{"outputs": [{"text": "# split text into words\n    words = re.findall(r'\\w+', text)\n\n    # convert words to lowercase\n    words = [word.lower() for word in words]\n\n    # remove punctuation marks and common stopwords\n    words = [word for word in words if word not in STOPWORDS]\n\n    # count the frequency of words\n    word_freq = Counter(words)\n\n    # return the word frequency dictionary\n    return word_freq", "tokens": ["#", " split", " text", " into", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n", "\n", "    ", "#", " convert", " words", " to", " lower", "case", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", "]", "\n", "\n", "    ", "#", " remove", " punct", "uation", " marks", " and", " common", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " count", " the", " frequency", " of", " words", "\n", "    ", "word", "_", "freq", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "#", " return", " the", " word", " frequency", " dictionary", "\n", "    ", "return", " word", "_", "freq", "\n", "\n", "def"], "logprobs": [-0.6840730905532837, -3.242441177368164, -0.9580636024475098, -0.06929464638233185, -0.09647907316684723, -0.35329216718673706, -0.0018751909956336021, -0.06738648563623428, -0.016546757891774178, -0.382991224527359, -5.125868119648658e-05, -0.2232983261346817, -0.00021002470748499036, -0.06753959506750107, -0.016375787556171417, -0.11058279126882553, -0.11746446043252945, -0.006533452309668064, -2.3245540432981215e-05, -0.01371766533702612, -0.9462301731109619, -0.00485894875600934, -0.2954657971858978, -0.00031275625224225223, -0.003660052316263318, -0.6540206074714661, -0.21382376551628113, -0.000927137560211122, -0.0008424547268077731, -0.008651631884276867, -0.21351993083953857, -0.0003387354372534901, -0.049500126391649246, -0.03388860449194908, -0.01692177914083004, -0.1239345595240593, -0.0012640113709494472, -0.0005292683490552008, -7.009260298218578e-05, -0.0019576449412852526, -3.790783375734463e-05, -2.0503786799963564e-05, -0.00037377048283815384, -0.004850525874644518, -6.663577369181439e-05, -0.005557088181376457, -0.00024375328212045133, -0.0008598444401286542, -0.008557554334402084, -0.3397785425186157, -0.018294058740139008, -0.5478290319442749, -0.3462197184562683, -0.26152777671813965, -0.005932342726737261, -0.001919809728860855, -0.07846463471651077, -0.0005925330333411694, -0.10280630737543106, -0.012934005819261074, -0.005050875712186098, -0.008394315838813782, -0.04094131290912628, -7.807903602952138e-05, -3.9219088648678735e-05, -0.0010640918044373393, -0.029302962124347687, -0.1886880248785019, -0.13629408180713654, -2.753696753643453e-05, -0.016130657866597176, -2.3841855067985307e-07, -1.5020257706055418e-05, -3.2066785934148356e-05, -2.169585604860913e-05, -0.0824301689863205, -0.0005036516231484711, -0.013760347850620747, -0.0003409996279515326, -0.0183738823980093, -0.5208955407142639, -1.9751605987548828, -0.4432973265647888, -0.0008303055074065924, -1.3339284658432007, -0.06854446232318878, -0.00042763148667290807, -0.8794123530387878, -0.002425349783152342, -0.45747601985931396, -0.1292240470647812, -0.004249115474522114, -0.0005340342177078128, -0.0012510338565334678, -0.00011681827891152352, -0.007938974536955357, -0.04603429138660431, -0.0002731903805397451, -1.2789404392242432, -0.8968990445137024, -0.8589188456535339, -1.2613328695297241, -0.549680769443512, -0.2497483789920807, -0.01116268802434206, -0.0003488647344056517, -0.002899611135944724, -0.07600076496601105, -1.2755313036905136e-05, -1.3232143828645349e-05, -0.8002597093582153, -0.022083913907408714, -1.218442678451538], "finish_reason": "stop"}], "metrics": {"energy": 150.03158456230162, "energy_per_token": 1.3277131377194833, "time": 4.644421, "time_per_token": 0.04110107079646018}}
{"outputs": [{"text": "text = re.sub(r'[^\\w\\s]', '', text)\n    words = text.lower().split()\n    words = [word for word in words if word not in STOPWORDS]\n    return Counter(words).most_common()", "tokens": ["text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "    ", "words", " =", " text", ".", "lower", "()", ".", "split", "()", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "return", " Counter", "(", "words", ")", ".", "most", "_", "common", "()", "\n", "\n", "def"], "logprobs": [-2.2866997718811035, -0.056254662573337555, -0.6804986000061035, -0.00015877417172305286, -0.10117195546627045, -0.19220462441444397, -0.04987694323062897, -0.4041352868080139, -0.10783446580171585, -0.2124977707862854, -0.001408776268362999, -0.3308778703212738, -0.006841567344963551, -0.08007806539535522, -0.023205148056149483, -0.0001287377526750788, -0.06677917391061783, -0.0001858300092862919, -0.025316469371318817, -0.18789644539356232, -0.5805550217628479, -0.0905456691980362, -1.1960254907608032, -0.024216685444116592, -2.052286148071289, -0.00033968876232393086, -0.30103179812431335, -0.00012218205665703863, -0.00766183715313673, -0.04465717449784279, -0.005829475820064545, -0.006405181251466274, -0.1364394873380661, -0.32287272810935974, -0.1765337586402893, -0.0136573426425457, -0.44588229060173035, -0.13047052919864655, -0.0006117141456343234, -0.00013720047718379647, -0.005340120755136013, -0.005893472582101822, -0.02160700038075447, -0.0310076791793108, -1.6212332411669195e-05, -0.008456730283796787, -2.3841855067985307e-07, -5.006777428206988e-06, -4.017272294731811e-05, -2.074220174108632e-05, -0.005214068107306957, -0.004629607778042555, -0.08512430638074875, -0.9096341729164124, -0.08800597488880157, -0.0014922209084033966, -0.007116209715604782, -0.19551362097263336, -2.968322992324829, -0.004603976849466562, -0.0002087136817863211, -0.00030727434204891324, -0.14169342815876007, -0.9932491183280945, -0.02324206940829754, -1.0211429595947266], "finish_reason": "stop"}], "metrics": {"energy": 49.6326353931427, "energy_per_token": 0.7520096271688288, "time": 2.5388496, "time_per_token": 0.03846741818181818}}
{"outputs": [{"text": "word_list = re.findall(r'\\w+', text)\n    word_count = Counter()\n\n    for word in word_list:\n        word = word.lower()\n        word = re.sub(r'[^\\w\\s]', '', word)\n        if word not in STOPWORDS:\n            word_count[word] += 1\n\n    return word_count", "tokens": ["word", "_", "list", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n", "    ", "word", "_", "count", " =", " Counter", "()", "\n", "\n", "    ", "for", " word", " in", " word", "_", "list", ":", "\n", "        ", "word", " =", " word", ".", "lower", "()", "\n", "        ", "word", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " word", ")", "\n", "        ", "if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "            ", "word", "_", "count", "[", "word", "]", " +=", " ", "1", "\n", "\n", "    ", "return", " word", "_", "count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.591190814971924, -0.058698251843452454, -0.9357510805130005, -0.00670646782964468, -0.900378942489624, -0.00011014331539627165, -0.25491097569465637, -9.16677454370074e-05, -0.06036608666181564, -0.019992858171463013, -0.1705385446548462, -0.10220668464899063, -0.01464451290667057, -3.707340147229843e-05, -0.02345891296863556, -0.7409232258796692, -0.09761002659797668, -0.20572133362293243, -0.25345659255981445, -0.0032261963933706284, -2.3254451751708984, -0.12806329131126404, -0.048987988382577896, -2.6042520999908447, -0.011826991103589535, -0.9215224981307983, -0.0004033228906337172, -0.13031964004039764, -0.021731236949563026, -0.0006814065272919834, -0.010981127619743347, -6.878139538457617e-05, -6.23445157543756e-05, -0.0003741279651876539, -0.0010583758121356368, -0.005275021307170391, -0.318684846162796, -0.2765168249607086, -0.025410844013094902, -0.0007432320853695273, -0.0110238092020154, -8.523101132595912e-05, -0.03968193382024765, -0.22369910776615143, -1.1320799589157104, -0.16834020614624023, -0.2737863063812256, -0.001077071763575077, -0.0013559204526245594, -0.13170218467712402, -0.007887409068644047, -0.21926124393939972, -0.057648997753858566, -0.29666805267333984, -0.0022488560061901808, -0.26313209533691406, -0.01911154016852379, -0.1674116551876068, -0.02039240300655365, -7.271502545336261e-05, -0.020472293719649315, -8.272782724816352e-05, -0.001302585587836802, -0.002721180208027363, -0.05210759863257408, -0.24820584058761597, -0.21087433397769928, -0.047224756330251694, -0.12747178971767426, -4.6491513785440475e-06, -0.008105953224003315, -2.3841855067985307e-07, -1.311301275563892e-06, -3.933898824470816e-06, -2.253030106658116e-05, -0.02994965761899948, -0.005732524674385786, -0.0014897212386131287, -0.004865236114710569, -0.0075622242875397205, -0.0006038511055521667, -0.027742251753807068, -0.00017724849749356508, -0.0135068129748106, -0.00238788896240294, -0.001679201959632337, -4.279521817807108e-05, -0.0013516347389668226, -0.06947571039199829, -0.0014968630857765675, -0.030352648347616196, -0.12853093445301056, -1.0847986231965479e-05, -0.00010513706365600228, -0.873060941696167, -2.145764938177308e-06, -9.536738616588991e-07, -0.00017963226127903908, -0.00013815402053296566, -0.08483938872814178], "finish_reason": "stop"}], "metrics": {"energy": 95.09617322540285, "energy_per_token": 0.9509617322540285, "time": 4.0069714, "time_per_token": 0.040069714000000006}}
{"outputs": [{"text": "# Split the text into words using regular expressions and remove punctuation and stopwords\n    words = [word for word in re.findall(r'\\w+', text.lower())\n             if word not in STOPWORDS]\n\n    # Calculate the frequency of each word using the Counter object\n    return Counter(words)", "tokens": ["#", " Split", " the", " text", " into", " words", " using", " regular", " expressions", " and", " remove", " punct", "uation", " and", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n", "             ", "if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Calculate", " the", " frequency", " of", " each", " word", " using", " the", " Counter", " object", "\n", "    ", "return", " Counter", "(", "words", ")", "\n", "\n", "#"], "logprobs": [-0.6840730905532837, -1.1399145126342773, -0.26959002017974854, -0.1078777015209198, -0.026057736948132515, -0.07611621171236038, -2.5680859088897705, -0.7448164224624634, -0.04648559167981148, -1.8773596286773682, -0.9334006309509277, -0.7043018341064453, -0.0513797365128994, -1.2011892795562744, -0.4787774384021759, -0.009009069763123989, -0.13601244986057281, -0.002385748317465186, -0.11859703809022903, -0.02040887251496315, -0.8608242869377136, -0.3149924874305725, -1.2187483310699463, -0.004233327694237232, -0.0009177286992780864, -0.004123281687498093, -8.892617915989831e-05, -0.3564774990081787, -0.00033778208307921886, -0.02796461433172226, -0.011971413157880306, -0.24927188456058502, -0.09008365124464035, -0.011339619755744934, -1.5020257706055418e-05, -0.009083140641450882, -0.38741567730903625, -0.001302942750044167, -0.02931581251323223, -1.8489514589309692, -1.2521010637283325, -0.0013574680779129267, -0.10275015980005264, -0.05851072818040848, -4.410734163684538e-06, -0.020056188106536865, -2.3841855067985307e-07, -3.3378546504536644e-06, -2.253030106658116e-05, -2.634490556374658e-05, -0.07865561544895172, -0.0052323308773338795, -0.19832906126976013, -0.000654602306894958, -0.01862618513405323, -1.1054165363311768, -0.05357958748936653, -0.04382403567433357, -0.003952074330300093, -0.1636779010295868, -0.002949414076283574, -1.3607951402664185, -1.673115849494934, -0.2012769728899002, -1.93141508102417, -0.12844790518283844, -0.000262106885202229, -1.5306565761566162, -0.043545372784137726, -0.0005237876321189106, -0.0029951734468340874, -0.14380085468292236, -0.5211576223373413, -0.023729147389531136, -1.3646775484085083], "finish_reason": "stop"}], "metrics": {"energy": 81.2309706573486, "energy_per_token": 1.0830796087646481, "time": 2.960011, "time_per_token": 0.039466813333333337}}
{"outputs": [{"text": "words = [word for word in re.split(r'\\W+', text) if word not in STOPWORDS]\n\n    word_count = Counter(words)\n\n    return word_count", "tokens": ["words", " =", " [", "word", " for", " word", " in", " re", ".", "split", "(", "r", "'\\", "W", "+'", ",", " text", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "word", "_", "count", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "return", " word", "_", "count", "\n", "\n", "def"], "logprobs": [-1.7892271280288696, -0.04949388653039932, -1.5504798889160156, -0.36298468708992004, -1.8311493396759033, -0.003983539994806051, -0.0007490689749829471, -0.13415250182151794, -0.00015567521040793508, -1.6923675537109375, -0.39220327138900757, -0.10048876702785492, -0.8448446393013, -0.22099414467811584, -0.677910566329956, -0.00015198028995655477, -0.022013599053025246, -0.2707798182964325, -0.09292479604482651, -0.19773370027542114, -1.2634491920471191, -1.823885577323381e-05, -0.011043262667953968, -3.576278118089249e-07, -2.264974000354414e-06, -1.8596476365928538e-05, -3.4927710657939315e-05, -0.07209213078022003, -0.03243129327893257, -2.5668046474456787, -0.0006424508756026626, -1.2803900241851807, -0.011060593649744987, -2.5310630798339844, -0.0561034232378006, -0.02391958236694336, -0.11783760786056519, -0.027272088453173637, -0.0010929093696177006, -0.02110009640455246, -0.31440290808677673, -0.00038258862332440913, -0.03304286673665047, -0.17500194907188416, -9.179073458653875e-06, -6.151010165922344e-05, -1.079216718673706, -0.028874533250927925, -1.1996244192123413], "finish_reason": "stop"}], "metrics": {"energy": 27.760299499511717, "energy_per_token": 0.5665367244798309, "time": 1.9073176, "time_per_token": 0.038924848979591836}}
{"outputs": [{"text": "# Remove punctuation and stopwords\n    words = [word.lower() for word in re.findall(r'\\w+', text) if word not in STOPWORDS]\n\n    # Count the occurrences of each word\n    return Counter(words)", "tokens": ["#", " Remove", " punct", "uation", " and", " stop", "words", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " occurrences", " of", " each", " word", "\n", "    ", "return", " Counter", "(", "words", ")"], "logprobs": [-0.6840730905532837, -1.8252334594726562, -0.44731807708740234, -0.05752408131957054, -1.16436767578125, -0.8819780349731445, -0.008633904159069061, -0.5526799559593201, -0.0024682790972292423, -0.4538112282752991, -0.02107289992272854, -0.5880758762359619, -0.24250485002994537, -0.24689078330993652, -0.05053189396858215, -0.0001770101225702092, -0.0994478389620781, -0.0017376337200403214, -0.0004817279113922268, -0.2774331569671631, -0.00012063252506777644, -0.43661007285118103, -4.5060096454108134e-05, -0.02945634163916111, -0.009181893430650234, -0.11606685817241669, -0.05931588634848595, -0.0024070357903838158, -1.5020257706055418e-05, -0.009282526560127735, -0.6758533716201782, -0.13666151463985443, -0.0160463135689497, -0.5263227820396423, -2.169585604860913e-05, -0.00906270369887352, -2.3841855067985307e-07, -3.4570634852570947e-06, -2.2649508537142538e-05, -3.4927710657939315e-05, -0.004659746307879686, -0.0018619834445416927, -0.2755208909511566, -0.00025233422638848424, -0.01202300377190113, -0.7402652502059937, -1.1942903995513916, -0.5967486500740051, -0.020819460973143578, -0.25948870182037354, -0.003915858455002308, -0.052688147872686386, -0.0001262346631847322, -1.5324558019638062, -0.02132137306034565, -0.0005297449533827603, -0.0027926277834922075, -0.12624353170394897], "finish_reason": "stop"}], "metrics": {"energy": 42.90654653835296, "energy_per_token": 0.7397680437647063, "time": 2.3295815, "time_per_token": 0.040165198275862075}}
