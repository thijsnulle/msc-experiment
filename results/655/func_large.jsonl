{"outputs": [{"text": "# Preprocess texts by removing non-alphanumeric characters (excluding spaces), converting to lowercase, and removing stopwords\n    preprocessed_texts = [remove_non_alphanumeric_characters(text) for text in texts]\n    lowercased_texts = [text.lower() for text in preprocessed_texts]\n    processed_texts = [remove_stopwords(text) for text in lowercased_texts]\n\n    # Vectorize the processed texts using TF-IDF\n    vectorizer = TfidfVectorizer(max_features=200)\n    tfidf_matrix = vectorizer.fit_transform(processed_texts)\n\n    # Apply NMF to extract topics\n    nmf = NMF(n_components=num_topics)\n    nmf.fit(tfidf_matrix)\n\n    # Extract the topics as lists of words, sorted by importance\n    feature_names = vectorizer.get_feature_names_out()\n    topics = []\n    for topic_idx in range(num_topics):\n        topic_components = nm", "tokens": ["#", " Pre", "process", " texts", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " (", "ex", "cluding", " spaces", ")", ",", " converting", " to", " lower", "case", ",", " and", " removing", " stop", "words", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "remove", "_", "non", "_", "al", "phan", "umeric", "_", "char", "acters", "(", "text", ")", " for", " text", " in", " texts", "]", "\n", "    ", "low", "erc", "ased", "_", "text", "s", " =", " [", "text", ".", "lower", "()", " for", " text", " in", " pre", "processed", "_", "text", "s", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [", "remove", "_", "stop", "words", "(", "text", ")", " for", " text", " in", " lower", "c", "ased", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ize", " the", " processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "max", "_", "features", "=", "2", "0", "0", ")", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", " to", " extract", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "\n", "    ", "#", " Ext", "ract", " the", " topics", " as", " lists", " of", " words", ",", " sorted", " by", " importance", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "top", "ics", " =", " []", "\n", "    ", "for", " topic", "_", "idx", " in", " range", "(", "num", "_", "top", "ics", "):", "\n", "        ", "topic", "_", "components", " =", " nm"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -1.2798786163330078, -0.6832999587059021, -0.0475408211350441, -0.020662648603320122, -0.0009773960337042809, -0.006636365316808224, -4.565611743601039e-05, -0.00037305548903532326, -0.01741253025829792, -0.7450847029685974, -0.21085762977600098, -0.0014609150821343064, -0.003588072955608368, -0.0009274948388338089, -0.1262875646352768, -0.5301848649978638, -0.28515028953552246, -0.002519411500543356, -0.011718366295099258, -0.02153816819190979, -0.21706365048885345, -0.02976788952946663, -0.006104514468461275, -0.006482643540948629, -0.07089149951934814, -0.003420813474804163, -1.0887792110443115, -0.017260456457734108, -0.04077640920877457, -0.020335284993052483, -0.004352738615125418, -0.0005771639989688993, -0.25043198466300964, -2.949108839035034, -0.002746859099715948, -0.06055561825633049, -0.06273573637008667, -0.049835436046123505, -0.0027314042672514915, -0.01408387627452612, -2.2455575466156006, -2.1920900344848633, -0.009111018851399422, -0.06868459284305573, -0.36743512749671936, -0.344130277633667, -0.36234134435653687, -0.00011395759065635502, -8.308542601298541e-05, -0.00540414871647954, -0.0030769407749176025, -0.0653652474284172, -0.12254829704761505, -2.0535714626312256, -0.003948037512600422, -0.8064202070236206, -0.034779567271471024, -0.050630152225494385, -0.0015200738562271, -0.00012218205665703863, -0.01136708166450262, -0.20539666712284088, -0.0036471060011535883, -0.000539634027518332, -5.054346183896996e-05, -0.0032393860165029764, -7.867782187531702e-06, -3.6954811548639555e-06, -0.001211147871799767, -5.960462772236497e-07, -1.311301275563892e-06, 0.0, -5.125986263010418e-06, -0.0010639727115631104, -0.0019750152714550495, -0.008874380961060524, -1.8860113620758057, -0.0010913613950833678, -0.002883326727896929, -0.0014784131199121475, -0.00033468366018496454, -0.13063111901283264, -0.03962498903274536, -1.5258672647178173e-05, -0.009359411895275116, -0.014886719174683094, -0.0176651943475008, -0.0334954559803009, -0.09596769511699677, -0.0010552796302363276, -6.437280717364047e-06, -1.8715683836489916e-05, -0.0001212284987559542, -6.747018051100895e-05, -1.1920928244535389e-07, -1.7881377516459906e-06, -1.5497195136049413e-06, -1.4305104514278355e-06, -7.891343557275832e-05, -0.00043525759247131646, -0.021935464814305305, -0.00023648326168768108, -0.008346201851963997, -0.14836469292640686, -0.0065553621388971806, -0.5492417812347412, -0.48214811086654663, -0.060591746121644974, -0.09253387153148651, -0.01820521429181099, -0.0030625606887042522, -6.437280717364047e-06, -3.361645576660521e-05, -0.07890781760215759, -0.00018666432879399508, -0.24717526137828827, -0.0017650038935244083, -0.0008262557676061988, -0.001328062848187983, -1.1920928244535389e-07, -0.00028618055512197316, 0.0, -3.099436753473128e-06, -2.3841855067985307e-07, -0.4979570209980011, -0.9949147701263428, -1.311301275563892e-06, -0.7539437413215637, -0.0003738896339200437, -2.365614652633667, -0.04501508176326752, -0.1695069968700409, -1.912346363067627, -0.27922293543815613, -0.000691770575940609, -0.32744690775871277, -0.04117162525653839, -0.00010430268594063818, -0.21689994633197784, -0.03359781950712204, -0.0001512651506345719, -0.00024351492174901068, -2.9682672902708873e-05, -2.396077979938127e-05, -0.0002225389762315899, -2.3841830625315197e-06, -1.5497195136049413e-06, -0.0013325868640094995, -0.004097519442439079, -2.3841855067985307e-07, 0.0, -1.5497195136049413e-06, -7.259582343976945e-05, -0.017914514988660812, -0.05896531045436859, -6.151010165922344e-05, -0.0021365690045058727, -0.2256557047367096, -0.007608955726027489, -1.3351351299206726e-05, -0.10916227847337723, -0.13412080705165863, -0.6481858491897583, -0.13637281954288483, -0.00014125302550382912, -0.016426917165517807, -3.3378546504536644e-06, -0.12934410572052002, -0.0003471963864285499, -2.3841855067985307e-07, -0.0001716466504149139, -0.001312467036768794, -1.1920922133867862e-06, -0.00014768941036891192, -0.00010918975021922961, -0.0026511542964726686, -3.576278118089249e-07, -1.4305104514278355e-06, -1.1920928244535389e-07, -0.41038334369659424, -0.006414301693439484, -0.00220853416249156, -0.5320293307304382, -7.271740287251305e-06, -0.08705544471740723, -6.556489552167477e-06, -0.0012042421149089932, -6.353653589030728e-05, -3.576278118089249e-07, 0.0, -4.768370445162873e-07, 0.0, -0.07474895566701889, -0.005860408302396536, -0.10736387968063354, -4.160317621426657e-05, -0.009436290711164474, -1.5117106437683105, -0.00824890285730362, -0.27511265873908997, -1.5564093589782715, -0.6381434202194214, -0.5295538902282715, -0.003177239093929529, -1.4430099725723267, -3.8333890438079834, -0.5318028330802917, -0.08902736008167267, -2.301670551300049, -0.544468343257904, -0.0001734344696160406, -1.1748818159103394, -0.0011118428083136678, -0.03501015529036522, -0.0005273620481602848, -0.13231299817562103, -1.1920928244535389e-07, -5.960462772236497e-07, -2.0503786799963564e-05, 0.0, -1.311301275563892e-06, 0.0, -5.364274329622276e-05, -0.4783647358417511, -8.67805938469246e-05, -0.001311871805228293, -0.019686898216605186, -0.024205515161156654, -1.0195759534835815, -0.012974957004189491, -0.008293001912534237, -0.44740965962409973, -0.0014857931528240442, -0.05633850023150444, -0.006622036453336477, -0.42854976654052734, -0.253442645072937, -0.18805034458637238, -0.002691933885216713, -0.0007614573696628213, -4.0531076592742465e-06, -0.05293850228190422, -1.1920928244535389e-07, -1.549708758830093e-05, -4.5298504119273275e-05, -6.794906312279636e-06, -0.00015078838623594493, -0.0003225283289793879, -1.7256169319152832, -0.27861684560775757, -3.3097524642944336, -0.0071360948495566845, -0.00865198578685522], "finish_reason": "length"}], "metrics": {"energy": 869.6693968563086, "energy_per_token": 3.3971460814699554, "time": 21.861414, "time_per_token": 0.0853961484375}}
{"outputs": [{"text": "processed_texts = [re.sub(ALPHANUMERIC, ' ', text.lower()).split() for text in texts]\n    filtered_texts = [\n        [word for word in text if word not in STOPWORDS] for text in processed_texts\n    ]\n\n    vectorizer = TfidfVectorizer(\n        min_df=1,\n        vocabulary={word: i for i, word in enumerate(set(word for text in filtered_texts for word in text))}\n    )\n\n    X = vectorizer.fit_transform([' '.join(text) for text in filtered_texts])\n    nmf = NMF(n_components=num_topics)\n    W = nmf.fit_transform(X)\n    H = nmf.components_\n\n    word_list = list(vectorizer.get_feature_names_out())\n    topics = [sorted(word_list[j] for j in range(len(word_list)) if H[i][j] > 0) for i in range(num_topics)]\n", "tokens": ["processed", "_", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ".", "lower", "())", ".", "split", "()", " for", " text", " in", " texts", "]", "\n", "    ", "filtered", "_", "text", "s", " =", " [", "\n", "        ", "[", "word", " for", " word", " in", " text", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " text", " in", " processed", "_", "text", "s", "\n", "    ", "]", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "\n", "        ", "min", "_", "df", "=", "1", ",", "\n", "        ", "voc", "abulary", "={", "word", ":", " i", " for", " i", ",", " word", " in", " enumerate", "(", "set", "(", "word", " for", " text", " in", " filtered", "_", "text", "s", " for", " word", " in", " text", "))", "}", "\n", "    ", ")", "\n", "\n", "    ", "X", " =", " vector", "izer", ".", "fit", "_", "transform", "(['", " '", ".", "join", "(", "text", ")", " for", " text", " in", " filtered", "_", "text", "s", "])", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "X", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_", "\n", "\n", "    ", "word", "_", "list", " =", " list", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "    ", "top", "ics", " =", " [", "s", "orted", "(", "word", "_", "list", "[", "j", "]", " for", " j", " in", " range", "(", "len", "(", "word", "_", "list", "))", " if", " H", "[", "i", "][", "j", "]", " >", " ", "0", ")", " for", " i", " in", " range", "(", "num", "_", "top", "ics", ")]", "\n"], "logprobs": [-2.331089496612549, -0.039008140563964844, -0.041283734142780304, -0.018844619393348694, -0.001069331425242126, -0.5214665532112122, -2.7872586250305176, -0.008740146644413471, -0.003133508376777172, -0.03712877258658409, -0.05781710520386696, -2.861018856492592e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -2.0265558760002023e-06, -7.152555099310121e-07, -0.0035657414700835943, -0.3342256546020508, -7.83174327807501e-05, -0.00011085849109804258, -0.2127058506011963, -0.7858566045761108, -0.012332023121416569, -0.011946087703108788, -0.4116359353065491, -0.3228997588157654, -0.012141605839133263, -0.036023858934640884, -0.0004027270770166069, -0.00023183519078884274, -0.0010840974282473326, -0.002638432662934065, -0.022144779562950134, -0.1347704827785492, -2.937021493911743, -0.0007468056865036488, -0.02636825665831566, -0.0012541294563561678, -0.00021205084340181202, -0.7376794219017029, -0.9100452065467834, -0.0059159891679883, -0.6849900484085083, -0.031231513246893883, -0.0025698277167975903, -0.00010656742961145937, -0.00045253525604493916, -0.41411152482032776, -0.04934604838490486, -0.014913027174770832, -0.02731071598827839, -1.2159273865108844e-05, -0.0025384367909282446, 0.0, -6.9141146923357155e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.09965233504772186, -0.47550785541534424, -0.00034505134681239724, -0.00013171759201213717, -0.0030024233274161816, -1.311301275563892e-06, -1.0728830375228426e-06, -3.576272320060525e-06, -0.05530684441328049, -0.0037617175839841366, -1.0251946150674485e-05, -0.0032980830874294043, -1.294468879699707, -9.476689592702314e-05, -0.24078169465065002, -0.006132239475846291, -0.00113589596003294, -0.0005339150666259229, -3.576278118089249e-07, -6.198863957251888e-06, 0.0, -9.536738616588991e-07, 0.0, -0.14138257503509521, -1.4585126638412476, -0.004084459971636534, -2.1937999725341797, -4.768370445162873e-07, -2.264974000354414e-06, -0.003558733267709613, -0.2744775116443634, -0.010447571985423565, -0.3474484086036682, -0.012903056107461452, -2.0132343769073486, -0.001444249995984137, -1.7817695140838623, -0.2361030876636505, -0.007025538943707943, -0.6413582563400269, -0.01647898182272911, -0.11542107164859772, -1.2993727978027891e-05, -0.010776183567941189, -0.0005362979718483984, -0.0006797387031838298, -0.001631121034733951, -1.9104080200195312, -0.06591293215751648, -0.5889951586723328, -0.008226912468671799, -0.09140204638242722, -0.00014506718434859067, -0.009267054498195648, -3.576272320060525e-06, -1.0013530300057027e-05, -4.172316494077677e-06, -0.006738794036209583, -0.0013625870924443007, -1.6331539882230572e-05, -0.00940594170242548, -4.351044481154531e-05, -0.002247785683721304, -0.48390260338783264, -0.0025783886667340994, -2.2172682292875834e-05, -0.0025490194093436003, -1.3339449167251587, -9.345571743324399e-05, -2.4019641876220703, -0.025247078388929367, -0.0052719381637871265, -2.2053474822314456e-05, -3.2305197237292305e-05, -0.005415056832134724, -5.960446742392378e-06, -7.152555099310121e-07, -0.2656690180301666, -0.00018571082910057157, -8.40390202938579e-05, -6.365573790390044e-05, -0.001176380319520831, -0.05433114245533943, -0.0009440494468435645, -0.0013760393485426903, -0.00013553177996072918, -3.099436753473128e-06, -0.00021991695393808186, -1.5497195136049413e-06, -1.1920922133867862e-06, -4.410734163684538e-06, -0.0013063953956589103, -0.031434040516614914, -0.6225277185440063, -0.08068835735321045, -3.93382906622719e-05, -0.021653898060321808, -0.00020180096908006817, 0.0, -0.000819466426037252, -0.06224612519145012, -2.3841830625315197e-06, -0.0004175029753241688, -0.0005278385942801833, -0.008204448036849499, -1.0728830375228426e-06, -1.311301275563892e-06, -1.1920928244535389e-07, -1.0630648136138916, -0.005886480677872896, -0.08676004409790039, -0.1627262681722641, -0.004095738288015127, -0.00022373080719262362, 0.0, -2.3841830625315197e-06, -0.00015484087634831667, -0.0017926113214343786, -2.622600959512056e-06, -2.777537883957848e-05, -0.0003846143954433501, -0.020144633948802948, -0.07868073880672455, -0.04128590598702431, -0.01351163536310196, -0.0005862186080776155, -0.0014494876377284527, 0.0, -5.006777428206988e-06, -0.0007951673469506204, -2.5033637939486653e-05, -0.009167955256998539, -0.11165719479322433, -0.00010764019680209458, -2.773074150085449, -0.06001823768019676, -2.701409339904785, -0.003840809687972069, -0.9781262278556824, -0.0006895071710459888, -0.030575817450881004, -1.1920928244535389e-07, -2.50339189733495e-06, -0.38331717252731323, -4.768370445162873e-07, -4.5298504119273275e-05, 0.0, -0.00015341058315243572, -0.20321203768253326, -0.0009572691051289439, -0.007464494090527296, -0.002743173623457551, -0.2984202206134796, -1.717353105545044, -0.06645318120718002, -0.12286779284477234, -0.7936747074127197, -1.7287012338638306, -5.483612312673358e-06, -0.036812618374824524, -1.0227091312408447, -0.002336155390366912, -0.004096450749784708, -0.01895364187657833, -2.272679328918457, -0.0004120216181036085, -0.022225579246878624, -0.0001941730733960867, -0.000982278841547668, -0.14318740367889404, -1.0132738680113107e-05, -0.06815256923437119, -7.033323527139146e-06, -0.1371663212776184, -5.245195097813848e-06, -0.00010895135346800089, -0.0001110968878492713, -0.014498831704258919, -0.207744300365448, -0.003795088967308402, -0.05772416666150093, -0.3581593930721283, -2.0265373677830212e-05, -0.002876313403248787, -0.12360814213752747, -0.014335737563669682, -0.016677603125572205, -0.7938726544380188, -0.06486150622367859, -0.00017355366435367614, -0.0003580405900720507, -0.009812690317630768, -7.033323527139146e-06, -0.1942867785692215, -8.344646857949556e-07, -2.276871418871451e-05, -2.3841855067985307e-07, -0.0010805251076817513, -0.0018186711240559816], "finish_reason": "length"}], "metrics": {"energy": 884.6055714092263, "energy_per_token": 3.45549051331729, "time": 21.860909, "time_per_token": 0.08539417578125}}
{"outputs": [{"text": "processed_texts = [remove_non_alphanumeric(text) for text in texts]\n    processed_texts = [text.lower() for text in processed_texts]\n    processed_texts = [remove_stopwords(text, STOPWORDS) for text in processed_texts]\n\n    # Create TF-IDF matrix\n    vectorizer = TfidfVectorizer()\n    tfidf_matrix = vectorizer.fit_transform(processed_texts)\n\n    # Apply NMF\n    nmf = NMF(n_components=num_topics, random_state=0)\n    W = nmf.fit_transform(tfidf_matrix)\n    H = nmf.components_\n\n    # Get top words for each topic\n    topics = []\n    for i in range(num_topics):\n        topic = [vectorizer.get_feature_names()[ind] for ind in np.argsort(H[i])[::-1][:10]]\n        topics.append(topic)\n    return topics", "tokens": ["processed", "_", "text", "s", " =", " [", "remove", "_", "non", "_", "al", "phan", "umeric", "(", "text", ")", " for", " text", " in", " texts", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [", "text", ".", "lower", "()", " for", " text", " in", " processed", "_", "text", "s", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [", "remove", "_", "stop", "words", "(", "text", ",", " ST", "OP", "W", "OR", "DS", ")", " for", " text", " in", " processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Create", " TF", "-", "ID", "F", " matrix", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_", "\n", "\n", "    ", "#", " Get", " top", " words", " for", " each", " topic", "\n", "    ", "top", "ics", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "num", "_", "top", "ics", "):", "\n", "        ", "topic", " =", " [", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()[", "ind", "]", " for", " ind", " in", " np", ".", "args", "ort", "(", "H", "[", "i", "])", "[", "::", "-", "1", "][", ":", "1", "0", "]]", "\n", "        ", "top", "ics", ".", "append", "(", "topic", ")", "\n", "    ", "return", " topics", "\n", "\n", "def"], "logprobs": [-2.331089496612549, -0.039008140563964844, -0.041283734142780304, -0.018844619393348694, -0.001069331425242126, -0.5214665532112122, -2.1781888008117676, -0.003200886305421591, -0.06663575768470764, -0.1734425276517868, -0.050876036286354065, -0.0028406528290361166, -0.046858880668878555, -0.16508392989635468, -0.34871965646743774, -0.6228865385055542, -0.33396586775779724, -0.00011038171214750037, -5.972207145532593e-05, -0.007368056569248438, -0.002021057065576315, -0.04557698220014572, -0.1322207748889923, -0.39251503348350525, -0.0003570872650016099, -0.010664024390280247, -0.0003685271949507296, -0.019960373640060425, -0.10827337950468063, -0.3624531030654907, -0.005449203308671713, -0.008104652166366577, -0.00013517419574782252, -0.029502293094992638, -4.732496745418757e-05, -2.3007127310847864e-05, -0.0007555014453828335, -1.0728830375228426e-06, -6.437280717364047e-06, -2.6940935640595853e-05, -0.006476247683167458, -0.006422592792659998, -0.03666266053915024, -0.041849106550216675, -3.421248038648628e-05, -0.0030235787853598595, -0.00010787858627736568, -0.0031463427003473043, -0.07346213608980179, -0.039708055555820465, -2.5033637939486653e-05, -0.0066216811537742615, -0.013980434276163578, -0.0034929236862808466, -0.008760708384215832, -3.0234475135803223, -0.12413084506988525, 0.0, -6.16293036728166e-05, 0.0, -1.1920928244535389e-07, -0.0008166077313944697, -0.0007527616689912975, -4.434487345861271e-05, -2.3245540432981215e-05, -0.0024729168508201838, -2.7418097943154862e-06, -7.510157047363464e-06, -3.576278118089249e-07, -0.0003292018664069474, -0.001973587553948164, -0.2681942284107208, -0.00011288482346571982, -2.9157800674438477, -2.2258050441741943, -0.22528083622455597, -0.008756808005273342, -3.611976353568025e-05, -9.870042413240299e-05, -1.539513349533081, -0.14531253278255463, -0.000289159914245829, -0.43162238597869873, -0.0005926521262153983, -0.0010130041046068072, -0.001260320539586246, -2.3841855067985307e-07, -0.0004017737810499966, 0.0, -2.9802276912960224e-06, -7.152555099310121e-07, -0.9368306398391724, -0.003481757128611207, -0.000985375139862299, -0.09817308187484741, -0.08046993613243103, -8.11782301752828e-05, -0.33463922142982483, -0.007578669115900993, -0.00025817399728111923, -0.0002060916303889826, -2.145764938177308e-06, -3.58813522325363e-05, -7.545663538621739e-05, -3.2186455882765586e-06, -2.861018856492592e-06, -0.0017001472879201174, -0.0004825619689654559, -5.960462772236497e-07, -1.5497195136049413e-06, -2.3841855067985307e-07, -7.581423415103927e-05, -0.029981704428792, -0.02051866054534912, -8.868777513271198e-05, -0.03628635033965111, -0.5303265452384949, -0.01106530986726284, -4.184158387943171e-05, -0.458048939704895, -0.00012373158824630082, -0.015548670664429665, -8.22540732769994e-06, -0.0624796487390995, -0.00035577642847783864, -1.1920928244535389e-07, -0.0008680627797730267, -0.0011861439561471343, -8.344646857949556e-07, -0.00013779645087197423, -0.00042417587246745825, -0.0013318725395947695, -5.960462772236497e-07, -1.1920922133867862e-06, -1.1920928244535389e-07, -1.415989875793457, -0.149972602725029, 0.0, -2.1576648578047752e-05, -3.075552376685664e-05, -0.24761925637722015, -0.03577969968318939, -0.005194500554352999, -0.0017877324717119336, -0.22418594360351562, -0.005374980624765158, -0.0002213471452705562, 0.0, -1.5497195136049413e-06, -0.0063365972600877285, -0.0009344025747850537, -3.814689989667386e-06, -9.179073458653875e-06, -4.5060096454108134e-05, -4.768370445162873e-07, 0.0, -4.768370445162873e-07, -5.960462772236497e-07, -0.012442699633538723, -0.07695909589529037, -0.014931113459169865, -0.007465440779924393, -0.0005202132160775363, -0.0003177614707965404, 0.0, -2.264974000354414e-06, -0.00035232058144174516, -4.0531076592742465e-06, -0.00761629082262516, -0.00782436691224575, -7.772143726469949e-05, -0.1427975594997406, -0.61190265417099, -2.255207061767578, -0.2798890471458435, -0.16979745030403137, -0.01041418593376875, -0.02126745879650116, -0.07686681300401688, -0.00036566724884323776, -0.5354638695716858, -0.4872816801071167, -0.007573937065899372, -0.13994455337524414, -0.0017564359586685896, -0.005833386909216642, -0.9265798330307007, -2.2236294746398926, -0.013415426015853882, -0.00017236177518498152, -6.794906312279636e-06, -0.0641036257147789, -1.1920928244535389e-07, -2.8371408916427754e-05, -5.686121585313231e-05, -1.3589766240329482e-05, -0.0005993238883093, -0.0005018643569201231, -1.4320684671401978, -0.7880874276161194, -1.018241047859192, -0.15118929743766785, -7.152555099310121e-07, -1.2040065485052764e-05, -0.0014542490243911743, -1.1920928244535389e-07, -5.8412379075889476e-06, 0.0, -4.160317621426657e-05, -0.26837947964668274, -2.4329073429107666, -0.006535347551107407, -0.04543152451515198, -0.0004885195521637797, -0.02589651755988598, -1.0906484127044678, -2.9801878554280847e-05, -0.0001392267586197704, -3.576278118089249e-07, -0.012145256623625755, -0.04697695001959801, -0.0026525810826569796, -0.0003069168305955827, -0.04221773147583008, -0.14650535583496094, -0.000277123210253194, -0.00043084874050691724, -1.0490362910786644e-05, -0.17005935311317444, -0.01331403199583292, -0.8948127031326294, -0.02006378397345543, -0.05713099613785744, -0.021376684308052063, -0.0006256530177779496, -0.0669398382306099, -2.0265373677830212e-05, -0.0008347125840373337, -0.0004633783537428826, -0.0032963010016828775, -0.001916716224513948, -0.0033614104613661766, -0.00016366096679121256, -2.386702299118042, -0.01751796156167984, -0.004076386336237192, -0.007158820051699877, -0.0031028480734676123, -0.17506888508796692], "finish_reason": "stop"}], "metrics": {"energy": 861.9733142166134, "energy_per_token": 3.461740217737403, "time": 21.228436, "time_per_token": 0.08525476305220883}}
{"outputs": [{"text": "# Preprocessing\n    cleaned_texts = [re.sub(ALPHANUMERIC, '', t).lower().split() for t in texts]\n    cleaned_texts = [[w for w in t if w not in STOPWORDS] for t in cleaned_texts]\n    joined_texts = [' '.join(t) for t in cleaned_texts]\n\n    # Vectorization\n    tfidf_vectorizer = TfidfVectorizer(min_df=2)\n    tfidf_matrix = tfidf_vectorizer.fit_transform(joined_texts)\n    feature_names = tfidf_vectorizer.get_feature_names()\n\n    # Topic extraction\n    nmf = NMF(n_components=num_topics, random_state=42)\n    nmf.fit(tfidf_matrix)\n    topic_indices = nmf.transform(tfidf_matrix).argmax(axis=1)\n\n    # Extract top words from each topic\n    top_words = []\n    for topic_index in", "tokens": ["#", " Pre", "processing", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " ''", ",", " t", ")", ".", "lower", "()", ".", "split", "()", " for", " t", " in", " texts", "]", "\n", "    ", "cleaned", "_", "text", "s", " =", " [[", "w", " for", " w", " in", " t", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " t", " in", " cleaned", "_", "text", "s", "]", "\n", "    ", "jo", "ined", "_", "text", "s", " =", " ['", " '", ".", "join", "(", "t", ")", " for", " t", " in", " cleaned", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ization", "\n", "    ", "tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "min", "_", "df", "=", "2", ")", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " tf", "id", "f", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "jo", "ined", "_", "text", "s", ")", "\n", "    ", "feature", "_", "names", " =", " tf", "id", "f", "_", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "\n", "    ", "#", " Topic", " extraction", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "    ", "topic", "_", "indices", " =", " nm", "f", ".", "transform", "(", "tf", "id", "f", "_", "matrix", ")", ".", "arg", "max", "(", "axis", "=", "1", ")", "\n", "\n", "    ", "#", " Ext", "ract", " top", " words", " from", " each", " topic", "\n", "    ", "top", "_", "words", " =", " []", "\n", "    ", "for", " topic", "_", "index", " in"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -1.8617143630981445, -0.5692126750946045, -0.002341031562536955, -2.205014705657959, -0.0668250024318695, -0.05759374424815178, -0.03773656487464905, -0.0011941214324906468, -0.12186077982187271, -1.6998767852783203, -0.0010062160436064005, -0.0016449266113340855, -0.023228907957673073, -0.05569072440266609, -2.50339189733495e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -5.960462772236497e-07, -5.960462772236497e-07, -0.001984533155336976, -2.636549472808838, -2.5033637939486653e-05, -1.3155944347381592, -1.2643797397613525, -0.2737211287021637, -0.062903992831707, -8.189342770492658e-05, -1.5109162330627441, -0.6937821507453918, -0.02911771833896637, -0.020750924944877625, -0.0001438752660760656, -4.875540980719961e-05, -0.0020008322317153215, -0.002074948512017727, -0.02588013932108879, -0.013209332711994648, -1.00272798538208, -0.0010025242809206247, -0.07540883123874664, -0.0019537187181413174, -0.06299959123134613, -0.2136131376028061, -0.39138737320899963, -0.0029573773499578238, -8.5588610090781e-05, -6.663577369181439e-05, -0.34554532170295715, -0.004959661513566971, -0.005770453251898289, -0.022868478670716286, -1.3351351299206726e-05, -0.0051775421015918255, 0.0, -4.172316494077677e-06, 0.0, 0.0, -0.01568680629134178, -0.002589089795947075, -3.957670196541585e-05, -1.07287787614041e-05, -0.00024089295766316354, -5.960462772236497e-07, -3.576278118089249e-07, -5.722029527532868e-06, -0.0009192770230583847, -0.005972040817141533, -0.772017776966095, -3.0124902725219727, -7.974783511599526e-05, -0.006565428804606199, -0.13809388875961304, -0.004059527534991503, -0.00020895205670967698, -0.20784781873226166, -0.0006430465145967901, -0.00033909291960299015, -0.00012587709352374077, -0.0012942517641931772, -0.08287619799375534, -0.0005310555570758879, -0.0033079448621720076, -1.5616295058862306e-05, -6.9141146923357155e-06, -0.0001618731184862554, -1.1920922133867862e-06, -1.1920928244535389e-07, -3.814689989667386e-06, -0.005673733074218035, -0.006855183281004429, -0.022701267153024673, -0.00015615197480656207, -0.019724184647202492, -0.3489447236061096, -0.20222797989845276, -0.11765480786561966, -0.00017998983094003052, -1.741862177848816, -0.013653697445988655, -0.00047922570956870914, -0.5210933685302734, -0.17300383746623993, -0.025719471275806427, -0.0002553137019276619, -0.00026472879108041525, 0.0, -3.3378546504536644e-06, 0.0, -1.1920922133867862e-06, -3.576278118089249e-07, -0.2590278685092926, -2.2292935848236084, -9.536738616588991e-07, -3.099436753473128e-06, -0.0010381315369158983, -1.481712818145752, -1.677154541015625, -0.11888910830020905, -0.0011104138102382421, -0.17765939235687256, -0.00320064858533442, -0.0007693191873840988, -0.20811766386032104, -0.17438112199306488, -0.0003831844369415194, -0.00012540031457319856, -3.576278118089249e-07, 0.0, -9.536738616588991e-07, -6.794906312279636e-06, -2.3841855067985307e-07, -5.602820692729438e-06, -0.0009195152088068426, -7.033323527139146e-06, -1.5497195136049413e-06, -0.0017877324717119336, -0.00024136967840604484, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.576278118089249e-07, -0.00010239553375868127, -0.0271679125726223, -2.6172754764556885, -1.026005506515503, -0.0004323977918829769, -0.03826276212930679, -0.0006706849089823663, -0.009818474762141705, 0.0, 0.0, -3.576278118089249e-07, -1.0490362910786644e-05, 0.0, -4.0531076592742465e-06, -0.0001658063702052459, 0.0, -1.311301275563892e-06, 0.0, -0.00010418349120300263, -0.7618260383605957, -0.0023228349164128304, -0.010082033462822437, -7.402622577501461e-05, -0.004704122431576252, -0.7495375275611877, -0.4642764925956726, -0.24007859826087952, -0.00037245964631438255, -0.013940464705228806, -2.7656173188006505e-05, -0.0929151326417923, -0.0001656871900195256, 0.0, -0.00045134371612221, -0.008560508489608765, -1.6689286894688848e-06, -0.00027211778797209263, -0.0006486457423307002, -0.003013951936736703, -5.960462772236497e-07, -7.152555099310121e-07, -1.1920928244535389e-07, -0.9599764347076416, -0.4988846480846405, 0.0, -0.00029273517429828644, -4.1126360883936286e-05, -1.3738069534301758, -0.03476874530315399, -0.12193232774734497, -0.010177737101912498, -0.0016287406906485558, -1.052828311920166, -2.992108420585282e-05, -0.14064885675907135, -5.960446742392378e-06, -0.0057577709667384624, -9.989239333663136e-05, -4.768370445162873e-07, 0.0, -5.364403477869928e-06, -3.969590397900902e-05, -0.04549144208431244, -0.007345809601247311, -1.0181325674057007, -0.8419702053070068, -0.005099978763610125, -2.326662302017212, -0.0008299481705762446, -0.062062401324510574, -4.768370445162873e-07, -1.1324817933200393e-05, -0.32088983058929443, -3.93382906622719e-05, -4.1483970562694594e-05, 0.0, 0.0, -1.1920922133867862e-06, -3.9934315282152966e-05, -0.00039152585668489337, -0.038094546645879745, -0.03767663985490799, -3.1709168979432434e-05, -0.0001262346631847322, -0.0002964295563288033, -0.00017271934484597296, -0.00016223068814724684, -0.0001829695247579366, -0.011667466722428799, -0.31619739532470703, -4.434487345861271e-05, -0.09566289186477661, -1.3505183458328247, -0.8465366363525391, -2.461848258972168, -0.20789982378482819, -1.9063920974731445, -0.18710345029830933, -0.007384504657238722, -0.025030389428138733, -0.00014804698002990335, -0.303235799074173, -0.3619993329048157, -0.14147882163524628, -0.16128921508789062, -0.11895991861820221, -0.0023918135557323694, -0.005318895447999239, -0.020972980186343193, -0.04326640069484711, -0.14401568472385406, -0.5466437339782715, -0.03163999319076538], "finish_reason": "length"}], "metrics": {"energy": 869.5574831886292, "energy_per_token": 3.396708918705583, "time": 21.861652, "time_per_token": 0.085397078125}}
{"outputs": [{"text": "# Preprocess texts by removing non-alphanumeric characters, converting to lowercase, and removing stopwords\n    processed_texts = [ALPHANUMERIC.sub(' ', txt).lower().split() for txt in texts]\n    for i in range(len(processed_texts)):\n        processed_texts[i] = [word for word in processed_texts[i] if word not in STOPWORDS]\n\n    # Vectorize processed texts using TF-IDF\n    vectorizer = TfidfVectorizer()\n    tfidf_matrix = vectorizer.fit_transform([' '.join(doc) for doc in processed_texts])\n\n    # Apply NMF to extract topics\n    nmf_model = NMF(n_components=num_topics, random_state=0)\n    W = nmf_model.fit_transform(tfidf_matrix)\n    H = nmf_model.components_\n\n    # Get words corresponding to the most significant component weights for each topic\n    feature_names = np.array(vectorizer.get_feature_names", "tokens": ["#", " Pre", "process", " texts", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", ",", " converting", " to", " lower", "case", ",", " and", " removing", " stop", "words", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " t", "xt", ")", ".", "lower", "()", ".", "split", "()", " for", " t", "xt", " in", " texts", "]", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "processed", "_", "text", "s", "))", ":", "\n", "        ", "processed", "_", "text", "s", "[", "i", "]", " =", " [", "word", " for", " word", " in", " processed", "_", "text", "s", "[", "i", "]", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Vector", "ize", " processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(['", " '", ".", "join", "(", "doc", ")", " for", " doc", " in", " processed", "_", "text", "s", "])", "\n", "\n", "    ", "#", " Apply", " N", "MF", " to", " extract", " topics", "\n", "    ", "nm", "f", "_", "model", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n", "    ", "W", " =", " nm", "f", "_", "model", ".", "fit", "_", "transform", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "    ", "H", " =", " nm", "f", "_", "model", ".", "components", "_", "\n", "\n", "    ", "#", " Get", " words", " corresponding", " to", " the", " most", " significant", " component", " weights", " for", " each", " topic", "\n", "    ", "feature", "_", "names", " =", " np", ".", "array", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -1.2798786163330078, -0.6832999587059021, -0.0475408211350441, -0.020662648603320122, -0.0009773960337042809, -0.006636365316808224, -4.565611743601039e-05, -0.00037305548903532326, -0.01741253025829792, -1.0609302520751953, -0.1588951051235199, -0.023864293470978737, -0.0015753014013171196, -0.007755644153803587, -0.013833479955792427, -0.019737742841243744, -0.026385439559817314, -0.003379588248208165, -0.007337880786508322, -0.03470449894666672, -0.0024182144552469254, -0.9322144985198975, -0.01956077106297016, -0.02393040619790554, -0.004377307370305061, -0.0004797023138962686, -0.25995495915412903, -0.5700504183769226, -1.4185804502631072e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.0728830375228426e-06, -5.960462772236497e-07, -0.00035696811391972005, -2.861018856492592e-06, -0.027026481926441193, -0.07631371915340424, -5.209310256759636e-05, -1.6594460010528564, -2.1912636756896973, -1.6169222593307495, -0.02768844924867153, -0.015096811577677727, -0.000169382052263245, -0.650329053401947, -0.24371226131916046, -0.02597167156636715, -0.03138621523976326, -0.00014077626110520214, -4.768370445162873e-07, -6.09140915912576e-05, -0.0013161577517166734, -0.011065545491874218, -0.01688532717525959, -0.017784181982278824, -2.275477170944214, -0.6979345679283142, -0.8627041578292847, -0.0024446146562695503, -6.639736966462806e-05, -0.0007516896002925932, -9.417489309271332e-06, -0.012531115673482418, -7.152555099310121e-07, -2.3841855067985307e-07, 0.0, -0.00011288482346571982, -6.0794889577664435e-05, -0.005742243956774473, -0.002582074608653784, -0.0730917751789093, -0.0002004899288294837, -0.0027336629573255777, -0.002435457892715931, -0.00017915551143232733, -2.753696753643453e-05, -0.0007711059297434986, -0.000691770575940609, -0.01946151815354824, -0.2901613116264343, -0.003612541826441884, -2.6702524337451905e-05, -4.756337511935271e-05, -0.00028606137493625283, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.00025686301523819566, -9.262132516596466e-05, -0.00011598391574807465, -0.0019804879557341337, -0.0059037827886641026, -0.008381548337638378, -1.0847986231965479e-05, -0.005032253917306662, 0.0, -1.597391747054644e-05, 0.0, 0.0, -0.01893516071140766, -0.002085417043417692, -0.10741698741912842, -0.0004365683125797659, -0.008001771755516529, -0.1725529134273529, -0.006199534051120281, -1.4856891632080078, -0.026931099593639374, -0.05493161827325821, -0.021213775500655174, -0.0020484195556491613, -6.437280717364047e-06, -2.7179348762729205e-05, -0.08967286348342896, -0.00017355366435367614, -0.27509573101997375, -0.0019232601625844836, -0.0011404207907617092, -0.00019500737835187465, -2.3841855067985307e-07, -1.5735502529423684e-05, 0.0, -1.311301275563892e-06, 0.0, -1.3725366592407227, -0.008850748650729656, -0.0008235162240453064, -0.3446785509586334, -0.09158404916524887, -0.00046135272714309394, -0.6262738704681396, -0.061991818249225616, -0.00016699827392585576, -0.0001726001501083374, -4.291525328881107e-06, -3.58813522325363e-05, -7.974783511599526e-05, -3.576272320060525e-06, -5.960462772236497e-07, -0.22494998574256897, -0.00014041867689229548, -7.259582343976945e-05, -1.5020257706055418e-05, -0.0019259967375546694, -3.2445545196533203, -0.003209085436537862, -0.0009477414423599839, -5.006777428206988e-06, -3.3378546504536644e-06, -4.8874615458771586e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.6689286894688848e-06, -0.0008830699953250587, -0.01710074208676815, -0.01304908748716116, -6.663577369181439e-05, -0.0022318472620099783, -0.20321135222911835, -0.009186027571558952, -1.9788545614574105e-05, -0.18072271347045898, -0.07277648150920868, -0.39383459091186523, -0.09527866542339325, -0.00011979816190432757, -0.019421065226197243, -1.6927575416048057e-05, -2.3417422771453857, -0.015198259614408016, -9.929640509653836e-05, -0.00031585473334416747, -2.3841855067985307e-07, -0.00013565097469836473, -0.0015142414486035705, -1.311301275563892e-06, -0.00039593485416844487, -0.0006002769805490971, -0.0017864234978333116, -5.960462772236497e-07, -2.50339189733495e-06, -1.1920928244535389e-07, -1.2910206317901611, -0.28757354617118835, 0.0, -6.532455881824717e-05, -6.05564855504781e-05, -0.1295582801103592, -0.028719443827867508, -0.007500345353037119, -0.0016400470631197095, -0.10249992460012436, -0.006887386087328196, -0.00019572250312194228, 0.0, -1.7881377516459906e-06, -1.1920928244535389e-07, -4.768370445162873e-07, -0.00016926287207752466, -0.0007186928996816278, -1.9073468138230965e-06, -1.0967194612021558e-05, -0.0001282609737245366, -4.768370445162873e-07, 0.0, -7.152555099310121e-07, -1.1920928244535389e-07, -0.007518447935581207, -0.06366132944822311, -0.020105376839637756, -0.008350221440196037, -0.0006597249885089695, -0.0011039836099371314, 0.0, -7.152555099310121e-07, -4.768370445162873e-07, -3.576278118089249e-07, -0.00015162272029556334, -4.0531076592742465e-06, -0.008609439246356487, -0.0061058178544044495, -6.01988795096986e-05, -0.037563785910606384, -0.6260192394256592, -2.9168572425842285, -1.0186731815338135, -0.0014569868799299002, -0.7049050331115723, -0.6284683346748352, -0.03254634514451027, -3.22560715675354, -0.19935299456119537, -0.40187332034111023, -0.0002834395272657275, -0.004503228235989809, -0.007148049306124449, -0.00018666432879399508, -1.6735434532165527, -0.0018607935635372996, -0.025497306138277054, -0.0012856797548010945, -1.2079811096191406, -6.437280717364047e-06, -0.014492134563624859, -0.0002840353990904987, -0.0003471963864285499, -1.1920928244535389e-07, -5.960462772236497e-07, -1.728519782773219e-05, 0.0, -2.861018856492592e-06, 0.0, -5.722029527532868e-06], "finish_reason": "length"}], "metrics": {"energy": 902.9919757423403, "energy_per_token": 3.5273124052435167, "time": 21.866007, "time_per_token": 0.08541408984375}}
{"outputs": [{"text": "# Preprocess texts by removing non-alphanumeric characters, converting to lowercase, and removing stopwords\n    processed_texts = [remove_non_alphanumeric(text.lower()) for text in texts]\n\n    # Vectorize processed texts using TF-IDF\n    vectorizer = TfidfVectorizer(stop_words=STOPWORDS)\n    tfidf_matrix = vectorizer.fit_transform(processed_texts)\n\n    # Apply NMF to extract topics from the TF-IDF matrix\n    nmf = NMF(n_components=num_topics, init=\"random\", random_state=42)\n    nmf.fit(tfidf_matrix)\n\n    # Extract topic words based on NMF component weights\n    topic_word_matrix = nmf.components_\n    feature_names = vectorizer.get_feature_names_out()\n    topic_words = [feature_names[idx] for topic in topic_word_matrix for idx in topic.argsort()[:-11:-1]]\n\n    # Convert topic words to list of lists\n    topic", "tokens": ["#", " Pre", "process", " texts", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", ",", " converting", " to", " lower", "case", ",", " and", " removing", " stop", "words", "\n", "    ", "processed", "_", "text", "s", " =", " [", "remove", "_", "non", "_", "al", "phan", "umeric", "(", "text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Vector", "ize", " processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", " to", " extract", " topics", " from", " the", " TF", "-", "ID", "F", " matrix", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " init", "=", "\"", "random", "\"", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "\n", "    ", "#", " Ext", "ract", " topic", " words", " based", " on", " N", "MF", " component", " weights", "\n", "    ", "topic", "_", "word", "_", "matrix", " =", " nm", "f", ".", "components", "_", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "topic", "_", "words", " =", " [", "feature", "_", "names", "[", "idx", "]", " for", " topic", " in", " topic", "_", "word", "_", "matrix", " for", " idx", " in", " topic", ".", "args", "ort", "()", "[:", "-", "1", "1", ":-", "1", "]]", "\n", "\n", "    ", "#", " Convert", " topic", " words", " to", " list", " of", " lists", "\n", "    ", "topic"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -1.2798786163330078, -0.6832999587059021, -0.0475408211350441, -0.020662648603320122, -0.0009773960337042809, -0.006636365316808224, -4.565611743601039e-05, -0.00037305548903532326, -0.01741253025829792, -1.0609302520751953, -0.1588951051235199, -0.023864293470978737, -0.0015753014013171196, -0.007755644153803587, -0.013833479955792427, -0.019737742841243744, -0.026385439559817314, -0.003379588248208165, -0.007337880786508322, -0.03470449894666672, -0.0024182144552469254, -0.9322144985198975, -0.01956077106297016, -0.02393040619790554, -0.004377307370305061, -0.0004797023138962686, -0.25995495915412903, -2.844010591506958, -0.00205972115509212, -0.04954403266310692, -0.06125396117568016, -0.06134466826915741, -0.007216340862214565, -0.037962570786476135, -0.1730785369873047, -0.40773260593414307, -0.9175840020179749, -0.0024073924869298935, -0.23351259529590607, -0.1013612374663353, -0.0003023882454726845, -0.00010942813969450071, -0.002394429873675108, -0.013718018308281898, -0.0037557794712483883, -0.5322264432907104, -0.0001618731184862554, -0.013942580670118332, -0.16110952198505402, -0.006543874274939299, -1.7312424182891846, -0.037149909883737564, -0.04802688956260681, -0.01582210510969162, -0.001795467222109437, -1.2278481335670222e-05, -3.290122185717337e-05, -0.07580143213272095, -0.0001726001501083374, -0.24612115323543549, -0.0017695259302854538, -0.0008661571191623807, -0.0015351902693510056, -3.576278118089249e-07, -3.1470757676288486e-05, -2.3841855067985307e-07, -2.9802276912960224e-06, -2.3841855067985307e-07, -0.029183946549892426, -0.1391957700252533, -8.344646857949556e-07, -7.986990567587782e-06, -0.0165150985121727, -0.041289567947387695, 0.0, -4.887569048150908e-06, 0.0, -1.1920928244535389e-07, -0.2205071747303009, -0.03157808259129524, -0.0015561387408524752, -0.3057257831096649, -0.037004254758358, -0.00011908298620255664, -0.23338422179222107, -0.032869853079319, -9.679325739853084e-05, -0.00012396997772157192, -0.00010990492592100054, -2.3007127310847864e-05, -6.758938252460212e-05, -1.4305104514278355e-06, -1.9073468138230965e-06, -0.0007443041540682316, -0.000403084559366107, -2.3841855067985307e-07, -1.1920928244535389e-07, -8.344646857949556e-07, -7.86750388215296e-05, -0.016076110303401947, -0.0221080519258976, -5.4834770708112046e-05, -0.001116367639042437, -0.3087526857852936, -0.008495028130710125, -2.098061486321967e-05, -0.13338351249694824, -0.04931166395545006, -0.43024635314941406, -2.78104829788208, -0.7741201519966125, -0.09667497128248215, -0.0016092220321297646, -1.8358061424805783e-05, -5.149708886165172e-05, -0.006096220575273037, -0.010977118276059628, -0.00015639036428183317, -0.017447439953684807, -2.50339189733495e-06, -0.10121171176433563, -0.0002321927313460037, -1.1920928244535389e-07, -0.00022575691400561482, -0.0011026738211512566, -7.152555099310121e-07, -7.629103492945433e-05, -0.0001006075763143599, -0.0015141224721446633, -2.3841855067985307e-07, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.4208922386169434, -2.34555983543396, -2.4694769382476807, -0.028272222727537155, -0.08934836834669113, -0.0002996472467202693, -0.06347529590129852, -0.0033096084371209145, 0.0, -4.529942543740617e-06, -7.199982064776123e-05, -1.711912751197815, -0.014009234495460987, -0.06932734698057175, -0.0120783606544137, -0.0025233353953808546, -0.7061712145805359, -1.0013530300057027e-05, -0.05719742178916931, -1.0251946150674485e-05, -0.0038009081035852432, -3.015949550899677e-05, -4.768370445162873e-07, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.007702058181166649, -0.0046789683401584625, -0.09296683967113495, -3.2305197237292305e-05, -0.0063102999702095985, -1.4039967060089111, -0.006014818325638771, -3.1472771167755127, -0.5428116917610168, -0.7441562414169312, -5.638440416078083e-05, -0.48021066188812256, -2.3841855067985307e-07, -0.08107724040746689, -0.005382687784731388, -0.018284928053617477, -0.0001892864383989945, -0.47195616364479065, -0.000398198957554996, -2.418968439102173, -0.015257550403475761, -2.723203182220459, -0.0004128557338844985, -0.0697857141494751, -8.344646857949556e-07, -1.2993727978027891e-05, -0.001663492526859045, -2.407998726994265e-05, -0.04731549322605133, -0.11323469877243042, -1.3560720682144165, -8.5588610090781e-05, -0.05145843327045441, -0.0012190061388537288, -0.18319521844387054, -1.1920928244535389e-07, -1.9073468138230965e-06, -4.088794958079234e-05, 0.0, -1.311301275563892e-06, 0.0, -1.2874520507466514e-05, -0.4260724186897278, -0.0003922408213838935, -0.001206861576065421, -0.012738877907395363, -0.42640259861946106, -0.6596798896789551, -0.0002584123576525599, -0.054845064878463745, -0.007444024085998535, -0.48667025566101074, -0.6704727411270142, -0.00012766500003635883, -0.00042572495294734836, -0.05136535316705704, -1.6785361766815186, -0.00275957933627069, -0.09342578798532486, -0.1986228972673416, -0.08762446790933609, -0.0037111237179487944, -4.768370445162873e-07, -6.318072337307967e-06, 0.0, -1.1920928244535389e-07, -0.059742365032434464, -0.001669800141826272, -0.001875904854387045, -0.047161757946014404, -0.0018268815474584699, -1.0847986231965479e-05, -7.510157047363464e-06, -0.2891142666339874, -0.3566925823688507, -0.025781743228435516, -0.9312934875488281, -0.13979022204875946, -3.4689302992774174e-05, -9.154854342341423e-05, -0.003245327156037092, -0.011073797941207886, -0.3640061616897583, -7.402622577501461e-05, -0.19042490422725677, -3.2012100219726562, -0.15106098353862762, -0.5751920342445374, -0.8102625012397766, -1.1805181503295898, -0.09268621355295181, -0.12229178845882416, -0.13833868503570557, -0.00023946279543451965, -0.6697345972061157], "finish_reason": "length"}], "metrics": {"energy": 906.7492114067081, "energy_per_token": 3.5419891070574536, "time": 21.856098, "time_per_token": 0.0853753828125}}
{"outputs": [{"text": "# Preprocess the input texts\n    preprocessed = [preprocess(text) for text in texts]\n\n    # Vectorize the preprocessed texts using TF-IDF\n    vectorizer = TfidfVectorizer(stop_words=STOPWORDS)\n    vectors = vectorizer.fit_transform(preprocessed)\n\n    # Apply NMF to extract the specified number of topics\n    nmf = NMF(n_components=num_topics, random_state=0)\n    nmf.fit(vectors)\n\n    # Get the words that contribute most to each topic\n    topics = []\n    feature_names = vectorizer.get_feature_names_out()\n    for component in nmf.components_:\n        topic = [feature_names[idx] for idx in component.argsort()[:-5:-1]]\n        topics.append(topic)\n\n    return topics", "tokens": ["#", " Pre", "process", " the", " input", " texts", "\n", "    ", "pre", "processed", " =", " [", "pre", "process", "(", "text", ")", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Vector", "ize", " the", " pre", "processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "vectors", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "pre", "processed", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", " to", " extract", " the", " specified", " number", " of", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "vectors", ")", "\n", "\n", "    ", "#", " Get", " the", " words", " that", " contribute", " most", " to", " each", " topic", "\n", "    ", "top", "ics", " =", " []", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "for", " component", " in", " nm", "f", ".", "components", "_", ":", "\n", "        ", "topic", " =", " [", "feature", "_", "names", "[", "idx", "]", " for", " idx", " in", " component", ".", "args", "ort", "()", "[:", "-", "5", ":-", "1", "]]", "\n", "        ", "top", "ics", ".", "append", "(", "topic", ")", "\n", "\n", "    ", "return", " topics", "\n", "\n", "def"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -0.6294155716896057, -0.8526976108551025, -0.11327770352363586, -0.41347378492355347, -0.0015330478781834245, -1.170339584350586, -0.014450187794864178, -2.6399762630462646, -0.40595096349716187, -1.453882098197937, -0.002096956130117178, -0.8693182468414307, -0.0954611524939537, -0.0422976128757, -0.013705906458199024, -4.136476854910143e-05, -2.2172682292875834e-05, -0.0015885126776993275, -0.01883537694811821, -0.0008506731828674674, -0.07898195087909698, -0.00015686711412854493, -0.003405368886888027, -0.1578657180070877, -0.009691332466900349, -0.04557208716869354, -0.07002904266119003, -0.0003275334893260151, -0.02890244498848915, -0.2640649080276489, -0.025833671912550926, -0.003217284567654133, -1.847726889536716e-05, -3.93382906622719e-05, -0.020019499585032463, -0.00021669900161214173, -0.35493895411491394, -0.0014755562879145145, -0.000659248442389071, -0.0015480450820177794, -3.576278118089249e-07, -2.4199192921514623e-05, -3.576278118089249e-07, -2.264974000354414e-06, -2.3841855067985307e-07, -0.05595926567912102, -0.5418264865875244, -4.768370445162873e-07, -3.6954811548639555e-06, -0.059199266135692596, -0.2892399728298187, 0.0, -8.940656698541716e-06, 0.0, 0.0, -0.3947846591472626, -0.04061170667409897, -0.0014799605123698711, -2.2114720344543457, -0.0006486457423307002, -0.00034957972820848227, -1.2516897186287679e-05, -8.940656698541716e-06, -0.00040713604539632797, -2.622600959512056e-06, -4.410734163684538e-06, -0.001141611486673355, -0.0002731903805397451, -1.6689286894688848e-06, -0.00011216964776394889, -0.05046309903264046, -0.07083586603403091, -5.4596363042946905e-05, -0.001702646492049098, -0.21490265429019928, -0.0182619858533144, -2.0503786799963564e-05, -0.1248660534620285, -0.10759288817644119, -0.713282585144043, -0.2671143412590027, -0.0010459910845384002, -4.172238186583854e-05, -0.0011130335042253137, -0.022837018594145775, -0.0001501924270996824, -0.04600708186626434, -1.4543427823809907e-05, -0.031499654054641724, -0.00028081765049137175, -2.3841855067985307e-07, -0.0003120412293355912, -0.00182819040492177, -8.344646857949556e-07, -4.994744449504651e-05, -0.00018559163436293602, -0.0016519484343007207, -1.9073468138230965e-06, -9.536738616588991e-07, -2.3841855067985307e-07, -1.4183884859085083, -0.30905580520629883, -2.3841855067985307e-07, -0.0001408954558428377, -3.755022044060752e-05, -0.6223481297492981, -0.0426110103726387, -0.004944952670484781, -0.0016198145458474755, -0.6228607296943665, -0.00017438798386137933, -0.047253865748643875, -7.986990567587782e-06, -0.002279066713526845, -9.870042413240299e-05, -0.017536938190460205, -0.005684164352715015, -0.09955596923828125, -3.5523738915799186e-05, -0.007152901962399483, -0.768837571144104, -0.043302588164806366, -2.218564987182617, -1.5787183046340942, -1.78432297706604, -0.33991068601608276, -0.04725102335214615, -0.07184120267629623, -0.2087509036064148, -0.06762471795082092, -0.00013886917440686375, -1.806808352470398, -0.10124392062425613, -0.006811731029301882, -0.4525296986103058, -0.0017266854410991073, -0.002231728285551071, -0.6974043846130371, -0.00100192881654948, -0.053190939128398895, -0.0006059955921955407, -0.4325375258922577, -1.1920928244535389e-07, -1.5497195136049413e-06, -4.470248313737102e-05, 0.0, -2.0265558760002023e-06, 0.0, -9.417489309271332e-06, -0.6105998754501343, -0.00034898388548754156, -0.00048601735034026206, -0.01131805032491684, -0.0867433175444603, -0.02877284213900566, -1.2092537879943848, -0.05432199686765671, -0.0013335392577573657, 0.0, -1.1920928244535389e-07, -0.0012236495967954397, -8.821448318485636e-06, -0.0027138092555105686, -0.00285206432454288, -0.0006208876147866249, -2.3429455757141113, -0.09242518991231918, -0.17467635869979858, -0.03821491450071335, -0.0018992258701473475, -0.000105375460407231, -0.0001037067049765028, -1.9063339233398438, -0.0007354891858994961, -0.038687530905008316, -0.001392705482430756, -0.003916689660400152, -0.022273845970630646, -7.986990567587782e-06, -4.291525328881107e-06, -8.702239938429557e-06, -0.014898698776960373, -0.36398810148239136, -0.005678830202668905, -3.272966146469116, -0.36869922280311584, -8.177422569133341e-05, -0.00878008734434843, -0.015675656497478485, -0.00037448544753715396, -0.0085345059633255, -5.602820692729438e-06, -0.00032085992279462516, -0.00033718624035827816, -0.0004557524516712874, -0.0007051127031445503, -0.0005634627304971218, -0.00016878610767889768, -0.04156142845749855, -0.00013934595335740596, -0.022340646013617516, -0.001423299196176231, -0.004576446954160929, -0.001994169782847166, -0.05870106443762779], "finish_reason": "stop"}], "metrics": {"energy": 738.2739370136261, "energy_per_token": 3.5493939279501254, "time": 17.862438, "time_per_token": 0.08587710576923077}}
{"outputs": [{"text": "# Preprocess the text by removing non-alphanumeric characters and stopwords\n    processed_texts = [ALPHANUMERIC.sub(' ', text.lower()).split() for text in texts]\n    processed_texts = [\n        [word for word in text if word not in STOPWORDS] for text in processed_texts\n    ]\n\n    # Convert the processed texts into TF-IDF vectors\n    vectorizer = TfidfVectorizer(max_features=1000)\n    tfidf = vectorizer.fit_transform([' '.join(text) for text in processed_texts])\n\n    # Perform NMF\n    nmf = NMF(n_components=num_topics, random_state=0)\n    W = nmf.fit_transform(tfidf)\n    H = nmf.components_\n\n    # Get the words that best represent each topic\n    feature_names = vectorizer.get_feature_names()\n    topic_words = []\n    for topic in H:\n        words = [feature_names[i] for i in topic.", "tokens": ["#", " Pre", "process", " the", " text", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " and", " stop", "words", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "split", "()", " for", " text", " in", " texts", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [", "\n", "        ", "[", "word", " for", " word", " in", " text", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " text", " in", " processed", "_", "text", "s", "\n", "    ", "]", "\n", "\n", "    ", "#", " Convert", " the", " processed", " texts", " into", " TF", "-", "ID", "F", " vectors", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "max", "_", "features", "=", "1", "0", "0", "0", ")", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(['", " '", ".", "join", "(", "text", ")", " for", " text", " in", " processed", "_", "text", "s", "])", "\n", "\n", "    ", "#", " Perform", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_", "\n", "\n", "    ", "#", " Get", " the", " words", " that", " best", " represent", " each", " topic", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "topic", "_", "words", " =", " []", "\n", "    ", "for", " topic", " in", " H", ":", "\n", "        ", "words", " =", " [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", "."], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -0.6294155716896057, -1.5738050937652588, -0.7427017688751221, -0.07132450491189957, -0.0493924543261528, -0.0024730355944484472, -0.010427516885101795, -5.364274329622276e-05, -0.0007900454220362008, -0.029551366344094276, -1.7435038089752197, -0.9510758519172668, -0.019575150683522224, -0.1550288051366806, -0.002092316746711731, -0.8789628744125366, -0.06942933797836304, -0.030910249799489975, -0.23662571609020233, -0.00040415700641460717, -0.3008284270763397, -1.0925929546356201, -1.2755313036905136e-05, -1.0728830375228426e-06, -3.576278118089249e-07, -9.536738616588991e-07, -3.576278118089249e-07, -0.0004138090298511088, -4.529942543740617e-06, -0.024469498544931412, -0.09244192391633987, -0.0001102625101339072, -0.25468745827674866, -0.44890376925468445, -0.006522319745272398, -0.015364852733910084, -0.3318173587322235, -0.3491392135620117, -0.00903612282127142, -0.030899615958333015, -0.00034564718953333795, -0.00018010901112575084, -0.0010459910845384002, -0.004202582407742739, -0.014773845672607422, -0.06055887043476105, -0.5703592300415039, -0.00012754580529872328, -0.001737157697789371, -0.0005990855861455202, -0.01669354736804962, -1.1959161758422852, -0.9034567475318909, -0.006318354979157448, -0.623749852180481, -0.015370017848908901, -0.0028190179727971554, -2.7656173188006505e-05, -5.173549288883805e-05, -0.23348598182201385, -0.03338869661092758, -0.007523772306740284, -0.014285323210060596, -1.5735502529423684e-05, -0.003386716591194272, 0.0, -6.318072337307967e-06, 0.0, 0.0, -0.04108056053519249, -0.14917390048503876, -0.00026079590315930545, -3.0874729418428615e-05, -0.0014751992421224713, -5.960462772236497e-07, -4.172316494077677e-06, -1.156323378381785e-05, -0.03782116621732712, -0.00472381804138422, -1.9430925021879375e-05, -0.0016969341086223722, -0.11636444926261902, -0.00013028726971242577, -0.009854476898908615, -2.5456290245056152, -0.35175859928131104, -0.7354881167411804, -0.37173327803611755, -1.4519994258880615, -0.9444176554679871, -0.003640335751697421, -2.3603161025675945e-05, -4.136476854910143e-05, -0.375081866979599, -0.07034120708703995, -0.00012408917245920748, -0.2033073753118515, -0.0010069306008517742, -0.0012004319578409195, -0.00022909401741344482, -2.3841855067985307e-07, -0.00013755806139670312, 0.0, -1.1920922133867862e-06, -3.576278118089249e-07, -0.1506049782037735, -1.627686858177185, -7.152555099310121e-07, -0.5266485810279846, -0.00029452278977259994, -0.6460997462272644, -0.01220249105244875, -0.0024857595562934875, -0.0407276526093483, -0.8465695381164551, -0.05852849408984184, -0.0006217215559445322, -0.7641087770462036, -0.03523608669638634, -0.0002374367177253589, -1.2696073055267334, -0.00018773700867313892, -1.0728830375228426e-06, -3.4570634852570947e-06, -0.0001802282058633864, -4.529942543740617e-06, -5.960462772236497e-07, -0.46739619970321655, -9.42901024245657e-05, -3.5523738915799186e-05, -1.3708974620385561e-05, -0.0011301804333925247, -0.02950078807771206, -0.0009355935617350042, -0.0007939761853776872, -4.756337511935271e-05, -5.006777428206988e-06, -0.00020525732543319464, -8.344646857949556e-07, 0.0, -3.683499380713329e-05, -0.0005428509321063757, -0.008750309236347675, -0.014568502083420753, -4.672895011026412e-05, -0.00329249887727201, -1.2054142951965332, -0.14601193368434906, -4.9232225137529895e-05, -1.8807648420333862, -5.411955135059543e-05, -0.024265438318252563, -2.884823152271565e-05, -0.028578000143170357, -0.0001770101225702092, -1.1920928244535389e-07, -0.0005650115781463683, -0.017317749559879303, -1.6689286894688848e-06, -0.0005553610390052199, -0.00018094333063345402, -0.004397009499371052, -5.960462772236497e-07, -8.344646857949556e-07, -2.3841855067985307e-07, -1.0180124044418335, -0.43257883191108704, 0.0, -5.972207145532593e-05, -2.5748875486897305e-05, -0.43441808223724365, -0.05748547613620758, -0.0035062285605818033, -0.002464830409735441, -0.3019908368587494, -0.004870455712080002, -0.00021669900161214173, 0.0, -2.264974000354414e-06, -0.00382121535949409, -0.0008406681008636951, -4.768370445162873e-07, -1.2636104656849056e-05, -0.00014900050882715732, -1.9073468138230965e-06, 0.0, -0.012562076561152935, -0.08900358527898788, -0.011118244379758835, -0.016104498878121376, -0.0006314906058833003, -0.00026675479602999985, 0.0, -2.9802276912960224e-06, -0.00027044929447583854, -4.887569048150908e-06, -0.005376878194510937, -0.006723282393068075, -3.302042750874534e-05, -0.019494136795401573, -0.646859884262085, -0.07500225305557251, -1.9378941059112549, -1.6033862829208374, -2.489684581756592, -0.16558097302913666, -0.04129642993211746, -0.039989396929740906, -0.10748229920864105, -0.0002522150462027639, -1.8970186710357666, -0.0006997520686127245, -0.04412315785884857, -0.0009267802815884352, -0.12366892397403717, 0.0, -8.344646857949556e-07, -4.565611743601039e-05, 0.0, -2.7418097943154862e-06, 0.0, -5.328513361746445e-05, -0.9457006454467773, -0.002347097033634782, -0.02433571219444275, -0.8571388721466064, -0.004658797290176153, -0.09791607409715652, -0.002388126915320754, -0.2873086631298065, -0.003999450244009495, -0.029408883303403854, -0.011774800717830658, -0.1540193408727646, -0.0419217012822628, -0.07563123106956482, -0.0006049233488738537, -0.0007203606073744595, -0.0003060825983993709, -3.7936577796936035, -0.03906833007931709, -0.17398712038993835, -0.13115110993385315, -9.047575440490618e-05, -2.288792165927589e-05, -2.6464111215318553e-05, -0.30253273248672485, -0.0001308832288486883, -0.007703714072704315, -0.00022206225548870862, -0.0031905481591820717, -0.0028372055385261774, -2.407998726994265e-05], "finish_reason": "length"}], "metrics": {"energy": 886.0881553134913, "energy_per_token": 3.461281856693325, "time": 21.866217, "time_per_token": 0.08541491015625}}
{"outputs": [{"text": "# Preprocess the texts by removing non-alphanumeric characters (except spaces) and lowercasing\n    preprocessed_texts = [ALPHANUMERIC.sub(' ', text.lower()).split() for text in texts]\n\n    # Remove stopwords from the preprocessed texts\n    preprocessed_texts = [[word for word in text if word not in STOPWORDS] for text in preprocessed_texts]\n\n    # Create a list of preprocessed text strings for vectorization\n    preprocessed_text_strings = [' '.join(text) for text in preprocessed_texts]\n\n    # Vectorize the preprocessed texts using TF-IDF\n    vectorizer = TfidfVectorizer()\n    tfidf = vectorizer.fit_transform(preprocessed_text_strings)\n\n    # Perform NMF\n    nmf = NMF(n_components=num_topics)\n    nmf.fit(tfidf)\n\n    # Retrieve the most significant words for each topic\n    topics = []\n    for component in nmf.components_:\n        most_significant", "tokens": ["#", " Pre", "process", " the", " texts", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", " and", " lower", "c", "asing", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "split", "()", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Remove", " stop", "words", " from", " the", " pre", "processed", " texts", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [[", "word", " for", " word", " in", " text", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " text", " in", " pre", "processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Create", " a", " list", " of", " pre", "processed", " text", " strings", " for", " vector", "ization", "\n", "    ", "pre", "processed", "_", "text", "_", "strings", " =", " ['", " '", ".", "join", "(", "text", ")", " for", " text", " in", " pre", "processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ize", " the", " pre", "processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "pre", "processed", "_", "text", "_", "strings", ")", "\n", "\n", "    ", "#", " Perform", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "tf", "id", "f", ")", "\n", "\n", "    ", "#", " Ret", "rieve", " the", " most", " significant", " words", " for", " each", " topic", "\n", "    ", "top", "ics", " =", " []", "\n", "    ", "for", " component", " in", " nm", "f", ".", "components", "_", ":", "\n", "        ", "most", "_", "sign", "ificant"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -0.6294155716896057, -1.0897352695465088, -0.8697293400764465, -0.04735812917351723, -0.025257771834731102, -0.0009011736838147044, -0.006489038933068514, -1.5020257706055418e-05, -0.00036840804386883974, -0.017080701887607574, -0.717960000038147, -1.5762466192245483, -0.36784541606903076, -0.0021475127432495356, -2.0300188064575195, -2.4472146034240723, -0.2268359363079071, -0.00011598391574807465, -0.5112544298171997, -0.0018835199298337102, -1.2319947481155396, -0.010695632547140121, -0.04843799024820328, -0.022548247128725052, -0.00801087822765112, -0.00047219570842571557, -0.0821128636598587, -0.7028580904006958, -1.0967194612021558e-05, -3.576278118089249e-07, 0.0, -2.622600959512056e-06, -3.576278118089249e-07, -8.570780482841656e-05, -2.145764938177308e-06, -0.0484224334359169, -0.0566830150783062, -7.557583012385294e-05, -0.3269323408603668, -0.7747381925582886, -0.01454935222864151, -0.011545744724571705, -1.154436707496643, -1.6536798477172852, -0.006642286200076342, -0.013316384516656399, -0.0002544794406276196, -0.0001250427303602919, -0.000558220490347594, -0.0023631523363292217, -0.0022574197500944138, -0.12807199358940125, -0.00015400654228869826, -0.0029662917368113995, -0.19780980050563812, -0.017009682953357697, -0.024257991462945938, -0.22669796645641327, -0.11962616443634033, -0.016503725200891495, -0.00016223068814724684, -0.010064803063869476, -0.02141297422349453, -0.00012230125139467418, -0.6487414240837097, -6.782778655178845e-05, -0.00010632903286023065, -0.011415639892220497, -0.00032884435495361686, -0.08674441277980804, -0.33942627906799316, -0.012848803773522377, -0.0012047183699905872, -2.169585604860913e-05, -3.6000557884108275e-05, -0.22888977825641632, -0.012729343958199024, -0.0015074567636474967, -0.004127555526793003, -2.2411095415009186e-05, -0.0005847889697179198, 0.0, -2.253030106658116e-05, -1.1920928244535389e-07, 0.0, -0.0018649582052603364, -0.007100348826497793, -8.487341256113723e-05, -3.4450891689630225e-05, -0.00036590558011084795, -1.1920928244535389e-07, -1.4305104514278355e-06, -1.9073468138230965e-06, -4.887569048150908e-06, -8.535020606359467e-05, -4.768258077092469e-05, -0.01070683728903532, -9.178694017464295e-05, -0.004780292976647615, -3.025573253631592, -0.4716389775276184, -2.649789810180664, -0.004694274626672268, -1.0044139623641968, -0.0030467540491372347, -1.0760613679885864, -0.2803356945514679, -1.8019685745239258, -0.7110316157341003, -0.014978324063122272, -0.026472629979252815, -3.0397906812140718e-05, -0.5020864605903625, -0.0016786068445071578, -0.0015117417788133025, -0.117886982858181, -0.601144015789032, -0.02508840151131153, -0.00010513706365600228, -0.0706060603260994, -0.0002735478919930756, -5.4238757002167404e-05, -7.378782902378589e-05, -0.0010677833342924714, -0.037951093167066574, -0.009257487021386623, -0.0027138092555105686, -1.1205610462639015e-05, -1.585470999998506e-05, -3.85038583772257e-05, 0.0, 0.0, -2.3841855067985307e-07, -1.5735502529423684e-05, -0.011039018630981445, -0.0009346407605335116, -0.00541576836258173, -7.64102369430475e-05, -0.005161294247955084, -0.32318082451820374, -0.007841281592845917, -0.02401711419224739, -0.0315684974193573, -0.00016449528629891574, -0.905316948890686, -0.06363336741924286, -0.026902321726083755, -0.004089802503585815, -4.172316494077677e-06, -1.7046782886609435e-05, -0.04439596086740494, -0.00017128908075392246, -0.28371816873550415, -0.0014332984574139118, -0.0005212855176068842, -0.00019870213873218745, -1.1920928244535389e-07, -9.48860906646587e-05, 0.0, -8.344646857949556e-07, 0.0, -0.6348879933357239, -0.006510002538561821, -0.0005080600967630744, -0.3286568820476532, -0.08604101091623306, -9.989239333663136e-05, -1.8923413753509521, -7.795983401592821e-05, -4.410734163684538e-06, -5.722029527532868e-06, -4.5298504119273275e-05, -1.3589766240329482e-05, -1.1920922133867862e-06, -0.0012330556055530906, -0.00019762947340495884, -1.311301275563892e-06, -1.1920928244535389e-07, -1.0728830375228426e-06, -2.2411095415009186e-05, -0.00030489088385365903, -4.386805812828243e-05, -0.026099199429154396, -0.008132321760058403, -5.638440416078083e-05, -0.0025788643397390842, -1.8202917575836182, -0.10110806673765182, -4.970903682988137e-05, -2.382427215576172, -3.814624506048858e-05, -0.02012231945991516, -1.8596476365928538e-05, -0.027683811262249947, -0.0001262346631847322, -1.1920928244535389e-07, -0.000551310193259269, -0.0067705269902944565, -1.6689286894688848e-06, -0.0002094287920044735, -0.0007595514762215316, -0.001647425931878388, -7.152555099310121e-07, -2.7418097943154862e-06, -4.768370445162873e-07, -0.30254560708999634, -0.011269841343164444, -0.00163433444686234, -0.6780866980552673, -0.0001426833332516253, -0.076405830681324, -5.245195097813848e-06, -0.002629277529194951, -8.67805938469246e-05, -1.168244216387393e-05, 0.0, -0.09648101776838303, -0.0036505504976958036, -0.10101594030857086, -3.0636318115284666e-05, -0.003852209774777293, -2.4478657245635986, -0.0002975021197926253, -0.11698279529809952, -0.781654953956604, -0.13184303045272827, -0.01244835089892149, -0.16250479221343994, -0.0013362773461267352, -0.02332429401576519, -0.22088421881198883, -0.00019226610311307013, -0.9565054774284363, -0.0113719142973423, -0.004891097079962492, -0.16720937192440033, -0.0022475477308034897, -0.009844562038779259, -0.6493472456932068, -0.7194730639457703, -0.007958960719406605, -0.0016598032088950276, 0.0, -4.768370445162873e-07, -0.001465557492338121, -1.2159273865108844e-05, -0.002247072057798505, -0.004017972387373447, -0.0005495230434462428, -2.492064952850342, -5.1973900554003194e-05, -0.11086846143007278, -1.6093124941107817e-05], "finish_reason": "length"}], "metrics": {"energy": 912.9292201538096, "energy_per_token": 3.566129766225819, "time": 22.068104, "time_per_token": 0.08620353125}}
{"outputs": [{"text": "# Preprocess texts\n    clean_texts = [ALPHANUMERIC.sub(' ', text.lower()).strip() for text in texts]\n    preprocessed_texts = [[word for word in nltk.word_tokenize(text) if word not in STOPWORDS]\n                          for text in clean_texts]\n\n    # Vectorize preprocessed texts\n    vectorizer = TfidfVectorizer(tokenizer=lambda x: x, lowercase=False, norm='l2')\n    vectors = vectorizer.fit_transform(preprocessed_texts)\n\n    # Perform NMF to extract topics\n    nmf = NMF(n_components=num_topics)\n    W = nmf.fit_transform(vectors)\n    H = nmf.components_\n\n    # Get the feature names (words) from the vectorizer\n    feature_names = vectorizer.get_feature_names_out()\n\n    # Get the indices of the top weighted words for each topic\n    top_indices = np.argsort(H)[:, ::-1][:, :len(", "tokens": ["#", " Pre", "process", " texts", "\n", "    ", "clean", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "strip", "()", " for", " text", " in", " texts", "]", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [[", "word", " for", " word", " in", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "text", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "                ", "          ", "for", " text", " in", " clean", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ize", " pre", "processed", " texts", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "token", "izer", "=", "lambda", " x", ":", " x", ",", " lower", "case", "=", "False", ",", " norm", "='", "l", "2", "')", "\n", "    ", "vectors", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "pre", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Perform", " N", "MF", " to", " extract", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "vectors", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_", "\n", "\n", "    ", "#", " Get", " the", " feature", " names", " (", "words", ")", " from", " the", " vector", "izer", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "#", " Get", " the", " indices", " of", " the", " top", " weighted", " words", " for", " each", " topic", "\n", "    ", "top", "_", "indices", " =", " np", ".", "args", "ort", "(", "H", ")", "[:", ",", " ::", "-", "1", "][", ":", ",", " :", "len", "("], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -1.2798786163330078, -0.925682008266449, -0.0014157997211441398, -2.9928948879241943, -0.009857900440692902, -0.056958604604005814, -0.014291669242084026, -0.0014312748098745942, -0.21508340537548065, -0.8869726061820984, -1.168244216387393e-05, -5.960462772236497e-07, -3.576278118089249e-07, -2.264974000354414e-06, -3.576278118089249e-07, -0.00024923557066358626, -3.2186455882765586e-06, -0.03867961838841438, -0.05487858131527901, -8.654219709569588e-05, -0.3511130213737488, -0.2985370457172394, -0.022156907245516777, -0.017078593373298645, -0.5055113434791565, -0.6311166882514954, -0.0035596834495663643, -0.39875084161758423, -0.0002526917669456452, -0.00014590153296012431, -0.000982397934421897, -0.006816348992288113, -0.015107379294931889, -0.2458885908126831, -1.6119906902313232, -0.019227316603064537, -0.035764750093221664, -0.009728992357850075, -0.0016725374152883887, -0.00036590558011084795, -2.0744564533233643, -0.02959592454135418, -0.008498337119817734, -6.925819616299123e-05, -0.00017689094238448888, -1.8253099918365479, -0.0001858300092862919, -3.814689989667386e-06, -0.00017093151109293103, -0.03921941667795181, -0.002763621276244521, -0.00014256415306590497, 0.0, -0.0004037995240651071, -0.11528638005256653, -0.005015529692173004, -0.014129363931715488, -0.017761345952749252, -0.057183798402547836, -7.581423415103927e-05, -0.0017353727016597986, 0.0, -4.768360213347478e-06, 0.0, 0.0, -0.01678299345076084, -1.7704416513442993, -0.0016481400234624743, -0.04064890742301941, -0.00017653337272349745, -4.184158387943171e-05, -6.782778655178845e-05, -0.0026007420383393764, -4.768370445162873e-07, -2.622600959512056e-06, -4.529942543740617e-06, -0.0032323752529919147, -0.0031143755186349154, -0.08072882145643234, -0.00016282663273159415, -0.009266109205782413, -0.09480506181716919, -0.01578889787197113, -0.6392917633056641, -0.0004855407460127026, -0.01812022551894188, -0.5430170297622681, -0.00015829740732442588, -0.1289832890033722, -0.0009329734020866454, -0.0009303532424382865, -0.00045813556062057614, -2.3841855067985307e-07, -9.536697689327411e-06, 0.0, -1.1920922133867862e-06, -2.3841855067985307e-07, -0.10134518146514893, -1.8400236368179321, -0.020710406824946404, -0.0009831124916672707, -0.07674913108348846, -0.1237228587269783, -0.00010191874753218144, -0.006551099009811878, -0.17246854305267334, -0.2601940929889679, -1.847726889536716e-05, -2.264974000354414e-06, -0.0011129144113510847, -0.9987338781356812, -2.223480463027954, -0.15758460760116577, -0.000967153930105269, -0.13931453227996826, -0.03264615312218666, -0.01435865182429552, -0.001328301033936441, -1.9054555892944336, -0.0018410414922982454, -0.0003057250869460404, -8.344646857949556e-07, -1.9073468138230965e-06, -0.0003782987187150866, -1.7881377516459906e-06, -1.311301275563892e-06, -0.3891294002532959, -0.01598096825182438, -6.318072337307967e-06, -2.861018856492592e-06, -4.887569048150908e-06, -1.0728830375228426e-06, -0.0015873225638642907, -0.11376849561929703, -0.13234558701515198, -6.723177648382261e-05, -0.00255555915646255, -1.27186918258667, -0.07741264998912811, -4.482168878894299e-05, -3.203646183013916, -0.046482402831315994, -0.03271457180380821, -0.026517558842897415, -0.00017188502533826977, -0.04138335958123207, -1.549708758830093e-05, -0.058736808598041534, -8.856858039507642e-05, -2.3841855067985307e-07, -0.0002787916746456176, -0.0019214755157008767, -9.536738616588991e-07, -8.666139910928905e-05, -2.9682672902708873e-05, -0.002822346519678831, -7.152555099310121e-07, -1.5497195136049413e-06, -3.576278118089249e-07, -0.554318904876709, -0.0064300550147891045, -0.0017611959483474493, -1.0665127038955688, -0.008360860869288445, -0.00016926287207752466, 0.0, -1.7881377516459906e-06, -0.002013205084949732, -0.0016141016967594624, -2.622600959512056e-06, -2.682172998902388e-05, -7.843663479434326e-05, -0.05008276179432869, -0.08895756304264069, -0.018137551844120026, -0.015561346895992756, -0.0008214913541451097, -0.00020096666412428021, -1.1920928244535389e-07, -4.291525328881107e-06, -0.00033384948619641364, -5.960446742392378e-06, -0.007613688241690397, -0.013683800585567951, -4.2914423829643056e-05, -0.028201760724186897, -0.6023722290992737, -1.1434448957443237, -3.9641122817993164, -0.8083375096321106, -0.3919397294521332, -0.5762296915054321, -0.024156061932444572, -0.8143450021743774, -0.07416989654302597, -0.06878376007080078, -0.0016398091102018952, -0.014464875683188438, -4.0649541915627196e-05, -0.317114919424057, -2.9801878554280847e-05, -0.0040697380900382996, -0.0008438840159215033, -0.23691433668136597, -9.536738616588991e-07, -1.1920922133867862e-06, -0.00032181330607272685, 0.0, -4.887569048150908e-06, 0.0, -8.106198947643861e-06, -0.5593807697296143, -0.001757030957378447, -0.0022465961519628763, -0.005547722801566124, -0.008251030929386616, -3.158996332786046e-05, -0.011689264327287674, -1.1188639402389526, -0.14775320887565613, -1.6810522079467773, -0.08111142367124557, -0.05099838599562645, -0.5659300088882446, -1.8557219505310059, -0.9022830724716187, -0.15628309547901154, -0.0005953923100605607, -0.025961218401789665, -0.01930765062570572, -8.77341881277971e-05, -0.5791406035423279, -0.005641135852783918, -0.5273779630661011, -0.009839014150202274, -1.7526123523712158, -3.933898824470816e-06, -0.005330516025424004, -5.960462772236497e-07, -0.0012162677012383938, -0.012123586609959602, -0.2870844304561615, -0.00028081765049137175, -0.0005818104837089777, -0.35802146792411804, -8.40390202938579e-05, -8.821448318485636e-06, -0.41700857877731323, -0.0005112771177664399, -0.011674653738737106, -0.003951124381273985, -2.005065441131592, -0.00012492353562265635], "finish_reason": "length"}], "metrics": {"energy": 886.275504481315, "energy_per_token": 3.4620136893801368, "time": 22.281666, "time_per_token": 0.0870377578125}}
{"outputs": [{"text": "# Preprocessing\n    cleaned_texts = [ALPHANUMERIC.sub(' ', text.lower()) for text in texts]\n    processed_texts = [\n        [word for word in text.split() if word not in STOPWORDS]\n        for text in cleaned_texts\n    ]\n    flat_text = ' '.join([word for doc in processed_texts for word in doc])\n\n    # Vectorization\n    tfidf_vectorizer = TfidfVectorizer(\n        max_features=num_topics,\n        tokenizer=lambda x: x,  # Using preprocessed tokens\n    )\n    tfidf_vectorizer.fit([flat_text])\n\n    # Topic extraction using NMF\n    nmf = NMF(n_components=num_topics)\n\n    # NMF expects a dense matrix as input\n    document_term_matrix = tfidf_vectorizer.transform(\n        [doc for doc in processed_texts]\n    ).toarray()\n\n    nmf.fit(document_term_matrix)\n\n    # Ob", "tokens": ["#", " Pre", "processing", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [", "\n", "        ", "[", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "        ", "for", " text", " in", " cleaned", "_", "text", "s", "\n", "    ", "]", "\n", "    ", "flat", "_", "text", " =", " '", " '", ".", "join", "([", "word", " for", " doc", " in", " processed", "_", "text", "s", " for", " word", " in", " doc", "])", "\n", "\n", "    ", "#", " Vector", "ization", "\n", "    ", "tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "\n", "        ", "max", "_", "features", "=", "num", "_", "top", "ics", ",", "\n", "        ", "token", "izer", "=", "lambda", " x", ":", " x", ",", "  ", "#", " Using", " pre", "processed", " tokens", "\n", "    ", ")", "\n", "    ", "tf", "id", "f", "_", "vector", "izer", ".", "fit", "([", "flat", "_", "text", "])", "\n", "\n", "    ", "#", " Topic", " extraction", " using", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "\n", "    ", "#", " N", "MF", " expects", " a", " dense", " matrix", " as", " input", "\n", "    ", "document", "_", "term", "_", "matrix", " =", " tf", "id", "f", "_", "vector", "izer", ".", "transform", "(", "\n", "        ", "[", "doc", " for", " doc", " in", " processed", "_", "text", "s", "]", "\n", "    ", ")", ".", "to", "array", "()", "\n", "\n", "    ", "nm", "f", ".", "fit", "(", "document", "_", "term", "_", "matrix", ")", "\n", "\n", "    ", "#", " Ob"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -1.8617143630981445, -0.5692126750946045, -0.002341031562536955, -2.205014705657959, -0.0668250024318695, -0.05759374424815178, -0.03773656487464905, -0.0011941214324906468, -0.12186077982187271, -0.6681079864501953, -6.437280717364047e-06, -5.960462772236497e-07, -1.1920928244535389e-07, -2.145764938177308e-06, -3.576278118089249e-07, -9.417090768693015e-05, -2.264974000354414e-06, -0.027340760454535484, -0.059609510004520416, -7.760223525110632e-05, -0.4309629201889038, -0.7810160517692566, -0.017933601513504982, -0.013036497868597507, -0.5883154273033142, -0.00015054999676067382, -3.540453326422721e-05, -0.0005754960584454238, -0.004539423156529665, -0.033150814473629, -0.050481684505939484, -1.302978277206421, -0.006726006045937538, -0.006534281652420759, -0.0014453213661909103, -0.00015209948469419032, -0.18433797359466553, -0.7041251063346863, -0.005752793047577143, -2.6056461334228516, -0.05005611479282379, -0.012126177549362183, -5.340433563105762e-05, -6.103329360485077e-05, -0.5492235422134399, -0.002450560452416539, -0.006708126049488783, -0.05110577121376991, -0.008848976343870163, -0.010144813917577267, -0.020508265122771263, -2.3483953555114567e-05, -0.0016734894597902894, 0.0, -5.8412379075889476e-06, 0.0, -1.1920928244535389e-07, -0.02425636351108551, -0.11666767299175262, -0.0014922209084033966, -0.00015031162183731794, -0.00014053787162993103, -6.341733387671411e-05, -0.00036221143091097474, -3.576278118089249e-07, -2.7418097943154862e-06, -1.7523612768854946e-05, -0.018286917358636856, -0.005122275557368994, -9.179073458653875e-06, -0.0010557560017332435, -1.773801326751709, -2.9324593544006348, -0.004514739383012056, -0.26702508330345154, -0.2011917680501938, -0.2861698865890503, -0.0007278653793036938, -0.00010966652916977182, -4.494089080253616e-05, -2.823698043823242, -0.8445805311203003, -0.0006165986997075379, -3.3968770503997803, -0.004762140568345785, -0.0009218971827067435, -9.536738616588991e-07, 0.0, -1.7881377516459906e-06, -0.0014390123542398214, -6.23445157543756e-05, -3.0874729418428615e-05, -0.00025602878304198384, -0.0012043612077832222, -0.017846131697297096, -0.18698589503765106, -0.00022575691400561482, -0.011330190114676952, -0.284403532743454, -0.12936756014823914, -0.11098315566778183, -0.0001958416833076626, -1.699083685874939, -0.024690262973308563, -0.0007431129342876375, -0.3739326298236847, -0.03913092240691185, -0.013105211779475212, -0.0005025792634114623, -0.0004152389301452786, -2.3841855067985307e-07, -0.0008592489175498486, -2.3841855067985307e-07, -2.50339189733495e-06, -2.3841855067985307e-07, -0.06515495479106903, -0.7823950052261353, -0.0020568659529089928, -1.4207957983016968, -5.006777428206988e-06, -2.354487657546997, -0.0028105778619647026, -0.661197304725647, -4.529942543740617e-06, -0.000436091679148376, -7.152555099310121e-07, -0.26803576946258545, -0.9982825517654419, -0.015536346472799778, -1.8811081647872925, -0.30054858326911926, -0.0016255272785201669, -0.059571098536252975, -0.5310382843017578, -0.00024375328212045133, -0.05920274928212166, -0.360908567905426, -2.566326141357422, -3.0278701160568744e-05, -2.0420145988464355, -0.3954630196094513, -0.07020208239555359, -0.7117632031440735, -0.50970458984375, -1.5007908344268799, -4.911301948595792e-05, -0.0014743659412488341, -0.04527829959988594, -0.310439795255661, -0.001405086019076407, -0.00027497802511788905, -0.22795535624027252, -1.9968039989471436, -0.23031571507453918, -0.003055786481127143, -0.0009829933987930417, -0.174399733543396, -0.012967190705239773, -3.3378546504536644e-06, -1.2516897186287679e-05, -0.004753005225211382, -0.13124018907546997, -0.7834985852241516, -6.174850568640977e-05, -0.06684696674346924, -1.5060498714447021, -0.6777117252349854, -2.3644349575042725, -0.0094007458537817, -7.617183291586116e-05, -0.011599596589803696, -0.0004319211875554174, -0.04761311411857605, -7.748573807475623e-06, -0.11896298825740814, -0.00017045476124621928, -4.768370445162873e-07, -0.0009893052047118545, -0.3385257124900818, -8.344646857949556e-07, -0.0002671123365871608, -5.769562994828448e-05, -0.003577501280233264, -2.3841855067985307e-07, -3.576278118089249e-07, -4.768370445162873e-07, -0.401998370885849, -0.006501474883407354, -1.711283802986145, -0.00024911639047786593, -0.2807554006576538, -4.773102760314941, -0.021143164485692978, -1.1812717914581299, -1.197872281074524, -2.1134824752807617, -0.13421441614627838, -2.040350914001465, -0.013569261878728867, -1.0889990329742432, -0.0004646890447475016, -3.1422643661499023, -0.029216017574071884, -0.9015684723854065, -0.00912342220544815, -0.010920756496489048, -0.006677101366221905, -0.026437336578965187, -3.576278118089249e-07, 0.0, -2.0265558760002023e-06, -1.311301275563892e-06, -2.3841855067985307e-07, -4.827859811484814e-05, -0.007189237512648106, -0.09079216420650482, -0.1795700341463089, -0.0016301688738167286, -0.18305754661560059, -1.084502935409546, -0.03518521785736084, -0.0066162338480353355, -0.0003997480380348861, -0.0034060818143188953, -1.5497195136049413e-06, -5.006777428206988e-06, -1.4662635294371285e-05, -0.3444123864173889, -0.009504781104624271, -0.0011154150124639273, -5.709961988031864e-05, -0.10011103004217148, -0.0974486917257309, -3.349725011503324e-05, -0.0005306981038302183, -0.02934984676539898, -0.6012334823608398, -5.471556869451888e-05, -1.2514207363128662, -3.814689989667386e-06, -0.030478231608867645, -9.65590606938349e-06, -0.02019043080508709, -0.001806057756766677, 0.0, -0.00017963226127903908, -1.1920928244535389e-07, -1.9073468138230965e-06, -0.003508960595354438, -0.007455974817276001, -0.28780341148376465, -0.00011395759065635502, -0.12198255956172943, -3.217373847961426], "finish_reason": "length"}], "metrics": {"energy": 873.3388661346429, "energy_per_token": 3.411479945838449, "time": 22.07529, "time_per_token": 0.0862316015625}}
{"outputs": [{"text": "# Preprocess the text\n    clean_texts = [re.sub(ALPHANUMERIC, ' ', text.lower()).strip() for text in texts]\n    processed_texts = [\n        ' '.join([word for word in text.split() if word not in STOPWORDS])\n        for text in clean_texts\n    ]\n\n    # Vectorize the preprocessed texts\n    vectorizer = TfidfVectorizer(min_df=1, stop_words=None)\n    tfidf = vectorizer.fit_transform(processed_texts)\n\n    # Perform topic extraction using NMF\n    nmf = NMF(n_components=num_topics, random_state=42)\n    nmf.fit(tfidf)\n\n    # Get the feature (word) names from the vectorizer\n    feature_names = vectorizer.get_feature_names_out()\n\n    # Extract the topics and their most significant words\n    topics = []\n    for topic in nmf.components_:\n        indices_top_words = topic.argsort()", "tokens": ["#", " Pre", "process", " the", " text", "\n", "    ", "clean", "_", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ".", "lower", "())", ".", "strip", "()", " for", " text", " in", " texts", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [", "\n", "        ", "'", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "        ", "for", " text", " in", " clean", "_", "text", "s", "\n", "    ", "]", "\n", "\n", "    ", "#", " Vector", "ize", " the", " pre", "processed", " texts", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "min", "_", "df", "=", "1", ",", " stop", "_", "words", "=", "None", ")", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Perform", " topic", " extraction", " using", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "tf", "id", "f", ")", "\n", "\n", "    ", "#", " Get", " the", " feature", " (", "word", ")", " names", " from", " the", " vector", "izer", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "#", " Ext", "ract", " the", " topics", " and", " their", " most", " significant", " words", "\n", "    ", "top", "ics", " =", " []", "\n", "    ", "for", " topic", " in", " nm", "f", ".", "components", "_", ":", "\n", "        ", "indices", "_", "top", "_", "words", " =", " topic", ".", "args", "ort", "()"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -0.6294155716896057, -1.5738050937652588, -1.5888702869415283, -0.002148702275007963, -2.994020938873291, -0.03298196941614151, -0.10850132256746292, -0.34326234459877014, -0.001434369827620685, -0.3355094790458679, -2.4656713008880615, -0.005013632122427225, -0.0020663831382989883, -0.01864280179142952, -0.05092395842075348, -1.9073468138230965e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -3.576278118089249e-07, -0.0027913199737668037, -0.2674632668495178, -7.652943895664066e-05, -0.0001387499796692282, -0.3138594925403595, -0.5401793718338013, -0.01919971965253353, -0.009695346467196941, -0.6057319045066833, -1.1980817317962646, -0.0037925951182842255, -0.6467528343200684, -0.0002563863235991448, -0.00023672162205912173, -0.0009875188115984201, -0.004320928826928139, -0.010449813678860664, -0.2890731990337372, -1.6243867874145508, -0.009011432528495789, -0.006284830626100302, -0.012507805600762367, -0.00024673278676345944, -0.2638190686702728, -0.8261808156967163, -0.006403286010026932, -0.46343836188316345, -3.635817120084539e-05, -0.00030214988510124385, -8.737658936297521e-05, -0.20386618375778198, -0.08040966093540192, -0.009045337326824665, -0.0001245659514097497, -0.00013243274588603526, -0.09165464341640472, -0.011392539367079735, -0.0011664974736049771, -0.03073420375585556, -0.0027251034043729305, -0.006000124849379063, -0.021207589656114578, -2.2291887944447808e-05, -0.00289556966163218, 0.0, -3.2186455882765586e-06, -2.3841855067985307e-07, 0.0, -0.02662377431988716, -0.38331326842308044, -0.0024991966784000397, -0.0024787436705082655, -0.00012563870404846966, -6.711257447022945e-05, -0.0006343498243950307, -3.576278118089249e-07, -1.1920928244535389e-07, -6.318072337307967e-06, -0.016021326184272766, -0.007430653553456068, -9.894321920000948e-06, -0.0002673506969586015, -0.037605348974466324, -0.0001705739414319396, -0.016413196921348572, -0.15831893682479858, -0.020796576514840126, -0.10961278527975082, -2.6045982837677, -0.005558155011385679, -0.3614546060562134, -0.40867891907691956, -0.00016449528629891574, -0.21567343175411224, -0.0013054428854957223, -0.0007529999129474163, -0.00020787939138244838, -1.1920928244535389e-07, -7.271740287251305e-06, 0.0, -1.1920922133867862e-06, -4.768370445162873e-07, -0.43455973267555237, -2.7208731174468994, -7.152555099310121e-07, -2.861018856492592e-06, -0.0007800396997481585, -0.11049142479896545, -0.762478232383728, -0.42348578572273254, -1.7881377516459906e-06, -3.576272320060525e-06, -0.15464384853839874, -0.4933168888092041, -0.17039720714092255, -0.021369799971580505, -0.0006753309280611575, -0.18402007222175598, -0.09977760165929794, -0.00032228996860794723, -0.9096329808235168, -0.00017987063620239496, -5.125986263010418e-06, -1.0967194612021558e-05, -0.00034517052699811757, -6.198863957251888e-06, -7.152555099310121e-07, -0.0041409702971577644, -0.0019556223414838314, -2.3841855067985307e-07, 0.0, -3.933898824470816e-06, -8.49926145747304e-05, -0.02352004498243332, -0.03958534449338913, -7.843663479434326e-05, -0.002988874213770032, -1.3094098567962646, -2.5341947078704834, -0.037016429007053375, -0.41830673813819885, -0.03638153150677681, -7.593343616463244e-05, -0.02316531166434288, -0.00022539935889653862, -0.09915953129529953, -3.433168603805825e-05, -0.02859584055840969, -0.00020561488054227084, -1.1920928244535389e-07, -0.0002857038634829223, -0.01361512579023838, -1.311301275563892e-06, -0.0001919085334520787, -0.0001896439935080707, -0.003919658251106739, -8.344646857949556e-07, -5.960462772236497e-07, -1.1920928244535389e-07, -0.8155690431594849, -0.48897311091423035, 0.0, -2.002696055569686e-05, -2.4676019165781327e-05, -2.6173248291015625, -0.04217567667365074, -0.1663864701986313, -0.009831459261476994, -0.004026520997285843, -0.7783536911010742, -0.00012170527770649642, -0.04499399662017822, -1.4185804502631072e-05, -0.011099499650299549, -0.00012861855793744326, -9.298280929215252e-06, 0.0, -0.038603004068136215, -0.006099775433540344, -0.225274458527565, -4.053033626405522e-05, -0.027534451335668564, -0.759019136428833, -0.17423661053180695, -2.1444690227508545, -0.9336256980895996, -0.05698743462562561, -0.0018914919346570969, -0.14121273159980774, -0.95265793800354, -0.034674789756536484, -0.0476704016327858, -0.0008361419313587248, -0.009396729990839958, -5.2569914259947836e-05, -0.44896310567855835, -2.825220326485578e-05, -0.004604214336723089, -0.0005486889858730137, -0.01734422892332077, -1.1920928244535389e-07, -1.0728830375228426e-06, -8.49926145747304e-05, 0.0, -1.9073468138230965e-06, 0.0, -3.242440288886428e-05, -0.6700753569602966, -0.0006087357178330421, -0.0023485240526497364, -0.0038625411689281464, -0.004899756982922554, -4.875540980719961e-05, -0.009060222655534744, -0.9241763949394226, -0.007972443476319313, -0.20105402171611786, -0.6370759606361389, -2.6431705951690674, -0.15782897174358368, -0.7563936710357666, -0.05084589868783951, -0.0031551364809274673, -0.06258144229650497, -0.00023576818057335913, -0.7414848804473877, -0.008996192365884781, -0.005139591172337532, -0.4255110025405884, -0.0031417079735547304, -0.0066059306263923645, -0.010702001862227917, -0.12027326226234436, -1.1456478834152222, -0.046011295169591904, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0030753957107663155, -3.123234637314454e-05, -0.001100649475120008, -0.00179903709795326, -0.0003289635351393372, -2.7951009273529053, -2.8168697357177734, -2.7982304096221924, -0.25317224860191345, -0.16576389968395233, -0.0054007102735340595, -0.04423949494957924, -0.0001530530134914443, -1.4424220353248529e-05, -6.437280717364047e-06, -0.01934085786342621], "finish_reason": "length"}], "metrics": {"energy": 888.363925966263, "energy_per_token": 3.4701715858057147, "time": 21.644083, "time_per_token": 0.08454719921875}}
{"outputs": [{"text": "# Preprocess the input texts\n    processed_texts = [process_text(text) for text in texts]\n\n    # Vectorize the processed texts using TF-IDF\n    tfidf_vectorizer = TfidfVectorizer(stop_words=STOPWORDS, token_pattern=r\"\\S+\", max_features=500)\n    tfidf_matrix = tfidf_vectorizer.fit_transform(processed_texts)\n\n    # Apply NMF to the TF-IDF matrix to extract topics\n    nmf = NMF(n_components=num_topics, init=\"random\", random_state=0)\n    W = nmf.fit_transform(tfidf_matrix)\n    H = nmf.components_\n\n    # Extract the top words for each topic\n    topic_words = []\n    for topic in range(num_topics):\n        word_indices = np.argsort(H[topic])[::-1]\n        topic_word_list = [tfidf_vectorizer.get_feature_names()[i] for", "tokens": ["#", " Pre", "process", " the", " input", " texts", "\n", "    ", "processed", "_", "text", "s", " =", " [", "process", "_", "text", "(", "text", ")", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Vector", "ize", " the", " processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ",", " token", "_", "pattern", "=", "r", "\"", "\\", "S", "+", "\"", ",", " max", "_", "features", "=", "5", "0", "0", ")", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " tf", "id", "f", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", " to", " the", " TF", "-", "ID", "F", " matrix", " to", " extract", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " init", "=", "\"", "random", "\"", ",", " random", "_", "state", "=", "0", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_", "\n", "\n", "    ", "#", " Ext", "ract", " the", " top", " words", " for", " each", " topic", "\n", "    ", "topic", "_", "words", " =", " []", "\n", "    ", "for", " topic", " in", " range", "(", "num", "_", "top", "ics", "):", "\n", "        ", "word", "_", "indices", " =", " np", ".", "args", "ort", "(", "H", "[", "topic", "])", "[", "::", "-", "1", "]", "\n", "        ", "topic", "_", "word", "_", "list", " =", " [", "tf", "id", "f", "_", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()[", "i", "]", " for"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -0.6294155716896057, -0.8526976108551025, -0.11327770352363586, -0.41347378492355347, -0.0015330478781834245, -1.0097427368164062, -0.029969440773129463, -0.025088634341955185, -0.005962205585092306, -0.0010930284624919295, -0.36229372024536133, -2.767868995666504, -0.033054169267416, -0.011725435964763165, -0.005762867629528046, -0.08779220283031464, -0.035013724118471146, -0.004268938675522804, -3.2543604902457446e-05, -1.5020257706055418e-05, -0.0005698964232578874, -0.011198878288269043, -0.0008623456815257668, -0.04421417787671089, -0.00011312322021694854, -0.0029743739869445562, -0.14753393828868866, -0.006550743710249662, -0.02213883399963379, -0.1828550100326538, -0.016583925113081932, -0.3120780885219574, -0.021868521347641945, -0.0023587520699948072, -1.2755313036905136e-05, -4.23184028477408e-05, -0.02293022908270359, -0.0002004899288294837, -1.1402117013931274, -0.01694287732243538, -0.0001646144810365513, -0.10632333159446716, -0.04486794397234917, -0.009639030322432518, -0.00022432672267314047, -0.001392943668179214, -1.1920928244535389e-07, -4.529942543740617e-06, -1.1920928244535389e-07, -2.9802276912960224e-06, -2.0265558760002023e-06, -0.07636507600545883, -1.053986668586731, -1.311301275563892e-06, -2.95634672511369e-05, -0.11438419669866562, -0.7451879978179932, 0.0, -2.1457441107486375e-05, 0.0, 0.0, -0.9291433691978455, -0.9325628876686096, -1.240497350692749, -0.0004586121649481356, -0.29264917969703674, -0.09809311479330063, -1.072486400604248, -0.5787211060523987, -1.0778539180755615, -0.013409074395895004, -0.005305377766489983, -2.1993937492370605, -0.9022959470748901, -2.169585604860913e-05, -2.188764810562134, -0.00033861625706776977, -1.7227563858032227, -0.0053262473084032536, -0.043128710240125656, -1.9496732950210571, -0.03008142299950123, -0.004438667558133602, -0.04656854271888733, -0.0004953111056238413, -7.60526381782256e-05, -0.04592089727520943, -0.06906326860189438, -0.00010287232726113871, -0.00011467275908216834, -9.536738616588991e-07, -1.1920928244535389e-07, -1.0728830375228426e-06, -2.1576648578047752e-05, -3.576278118089249e-07, -3.3378546504536644e-06, -4.994744449504651e-05, -2.3841830625315197e-06, -2.9802276912960224e-06, -0.0008925982983782887, -0.00033158526639454067, -7.152555099310121e-07, -1.1920928244535389e-07, -4.768370445162873e-07, -0.0001234931987710297, -0.011933954432606697, -0.0370354987680912, -6.067568756407127e-05, -0.0014828173443675041, -0.26148316264152527, -0.0076424358412623405, -1.549708758830093e-05, -0.13171879947185516, -3.060577630996704, -0.01760592870414257, -0.0012451999355107546, -7.748573807475623e-06, -1.0967194612021558e-05, -0.005495915189385414, -1.6931159496307373, -0.0480908527970314, -0.48286932706832886, -0.008086087182164192, -0.0001854724541772157, -0.006256280932575464, -1.9073468138230965e-06, -0.11186891049146652, -0.00023183519078884274, -2.3841855067985307e-07, -0.0001081169830285944, -0.0006825978052802384, -7.152555099310121e-07, -0.00013636612857226282, -4.434487345861271e-05, -0.0023707635700702667, -5.960462772236497e-07, -1.4305104514278355e-06, -1.1920928244535389e-07, -0.821723997592926, -1.740193247795105, -0.8360812664031982, -0.0019052940187975764, -0.1241113692522049, -0.00020776021119672805, -0.029455646872520447, -0.00734131271019578, 0.0, -2.1934269170742482e-05, -2.8609820219571702e-05, -0.2278357595205307, -0.10454988479614258, -0.0035514873452484608, -0.002293814904987812, -0.2593948245048523, -0.004804851021617651, -0.00017474555352237076, 0.0, -1.1920922133867862e-06, -0.009018165990710258, -0.0007239343249239028, -2.145764938177308e-06, -1.0013530300057027e-05, -1.823885577323381e-05, -2.3841855067985307e-07, 0.0, -2.145764938177308e-06, -2.3841830625315197e-06, -0.008592775091528893, -0.048609018325805664, -0.014118903316557407, -0.006182947661727667, -0.00041237910045310855, -0.0006283930852077901, 0.0, -3.099436753473128e-06, -0.00029738296871073544, -3.576272320060525e-06, -0.0071945637464523315, -0.0026320121251046658, -3.528532761265524e-05, -0.040805019438266754, -1.6777703762054443, -0.004241162445396185, -0.11471906304359436, -2.4925222396850586, -0.20473401248455048, -0.2913239896297455, -0.00037496211007237434, -0.0020787552930414677, -0.43730178475379944, -7.974783511599526e-05, -2.1141791343688965, -0.0016724183224141598, -0.11569219827651978, -0.00273199868388474, -0.37257930636405945, -0.0022272085770964622, -0.0021506056655198336, -0.9030181765556335, -0.13525624573230743, -0.12971755862236023, -1.9825490713119507, -1.5497195136049413e-06, -0.026880504563450813, 0.0, -2.312633478140924e-05, -2.658331868587993e-05, -4.410734163684538e-06, -0.00021753329201601446, -0.0003323002893012017, -2.4465670585632324, -0.0004539651272352785, -0.15982092916965485, -0.0018203369108960032, -0.7802116870880127, -6.079655122448457e-06, -0.0011023165425285697, -1.1920928244535389e-07, -0.06717807054519653, -0.008600694127380848, -0.0029031771700829268, -4.684815212385729e-05, -0.07072058320045471, -0.06604450196027756, -8.523101132595912e-05, -0.00023541064001619816, -4.172316494077677e-06, -0.1804654747247696, -0.0511491522192955, -0.0004413345886860043, -0.6160422563552856, -0.002016060519963503, -2.9499194622039795, -0.471713662147522, -0.3595423400402069, -0.00011979816190432757, -0.17730632424354553, -0.013692854903638363, -2.3841855067985307e-07, 0.0, -1.5497195136049413e-06, -7.939023635117337e-05, 0.0, -1.311301275563892e-06, -0.013887796550989151, -4.768370445162873e-07, -5.125986263010418e-06, 0.0, -0.0012485336046665907, -0.3556775450706482, -0.6031515598297119, -0.0005063920398242772, -0.015757568180561066], "finish_reason": "length"}], "metrics": {"energy": 928.384619119644, "energy_per_token": 3.626502418436109, "time": 22.076046, "time_per_token": 0.0862345546875}}
{"outputs": [{"text": "preprocessed = [\n        [word for word in ALPHANUMERIC.sub(' ', text).split() if word not in STOPWORDS]\n        for text in texts\n    ]\n    preprocessed = [[' '.join(text)] for text in preprocessed]\n\n    tfidf = TfidfVectorizer(lowercase=True, stop_words=None).fit_transform(preprocessed)\n    nmf = NMF(n_components=num_topics, max_iter=2000, random_state=1).fit(tfidf)\n\n    topics = [sorted(word for word, weight in zip(ALPHANUMERIC.sub(' ', texts[0]).split(), component) if weight >= 0.005)\n              for component in nmf.components_]\n\n    return topics", "tokens": ["pre", "processed", " =", " [", "\n", "        ", "[", "word", " for", " word", " in", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "        ", "for", " text", " in", " texts", "\n", "    ", "]", "\n", "    ", "pre", "processed", " =", " [", "['", " '", ".", "join", "(", "text", ")]", " for", " text", " in", " pre", "processed", "]", "\n", "\n", "    ", "tf", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "(", "low", "erc", "ase", "=", "True", ",", " stop", "_", "words", "=", "None", ")", ".", "fit", "_", "transform", "(", "pre", "processed", ")", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " max", "_", "iter", "=", "2", "0", "0", "0", ",", " random", "_", "state", "=", "1", ")", ".", "fit", "(", "tf", "id", "f", ")", "\n", "\n", "    ", "top", "ics", " =", " [", "s", "orted", "(", "word", " for", " word", ",", " weight", " in", " zip", "(", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " texts", "[", "0", "])", ".", "split", "()", ",", " component", ")", " if", " weight", " >=", " ", "0", ".", "0", "0", "5", ")", "\n", "              ", "for", " component", " in", " nm", "f", ".", "components", "_", "]", "\n", "\n", "    ", "return", " topics", "\n", "\n", "if"], "logprobs": [-2.47971773147583, -0.03477323427796364, -2.476818561553955, -0.41535696387290955, -1.6536197662353516, -0.011112467385828495, -2.271209716796875, -0.33542442321777344, -0.10694652795791626, -0.00017987063620239496, -0.0006366133457049727, -0.06537752598524094, -1.9073468138230965e-06, -9.536738616588991e-07, 0.0, -1.1920922133867862e-06, -3.576278118089249e-07, -0.0018629353726282716, -0.00014351768186315894, -0.03249441832304001, -0.294908344745636, -0.00012087091454304755, -0.6827802658081055, -0.8259062767028809, -0.014434208162128925, -1.8501060009002686, -0.045363858342170715, -0.029303541406989098, -0.01309721078723669, -0.17315082252025604, -0.00010799778101500124, -0.0012729407753795385, 0.0, -6.794906312279636e-06, 0.0, -3.576278118089249e-07, -0.054241716861724854, -0.05798698589205742, -0.003796157892793417, -0.0026680370792746544, -0.00029666791670024395, -0.0013379440642893314, -0.011119776405394077, -0.03216859698295593, -0.005860408302396536, -5.638440416078083e-05, -0.0027497122064232826, -0.5958993434906006, -2.218120813369751, -0.007891429588198662, -0.07290416210889816, -1.1542010307312012, -3.2582802772521973, -0.01456862036138773, -0.010177737101912498, -6.69933797325939e-05, -0.0332908071577549, -0.739839494228363, -1.2019436359405518, -0.04555625468492508, -0.0001510267611593008, -3.4927710657939315e-05, -0.0027056061662733555, -8.22540732769994e-06, -0.03380171209573746, -0.08505861461162567, -0.6914179921150208, -0.00011395759065635502, -1.2413742542266846, -0.05869229510426521, -0.0018554391572251916, -0.6792112588882446, -0.0018529404187574983, -1.0728830375228426e-06, -1.5497195136049413e-06, 0.0, -7.271740287251305e-06, -1.9073468138230965e-06, -0.3897865116596222, -1.5273910760879517, -0.0014398456551134586, -0.0017989181214943528, -0.006383386440575123, -0.05195561796426773, -0.4961841404438019, -0.5054501295089722, -1.4305104514278355e-06, -1.2159273865108844e-05, -0.1833057850599289, -0.8942743539810181, -0.3481661379337311, -1.7045707702636719, -0.00018880968855228275, -0.05099272355437279, -4.327203714638017e-05, -0.004313332028687, -0.04279445856809616, -1.3828182090946939e-05, -0.0394049771130085, -0.042564861476421356, -0.3153689503669739, -0.30609503388404846, -0.0002803409588523209, -0.02341291680932045, -0.00024029705673456192, -1.1920928244535389e-07, -0.002661260077729821, -0.03632279112935066, -6.9141146923357155e-06, -0.000794214429333806, -0.00032050241134129465, -0.008477534167468548, -2.7418097943154862e-06, -2.50339189733495e-06, -1.1920928244535389e-07, -0.6555986404418945, -1.679487943649292, 0.0, -9.023735765367746e-05, -0.00039545822073705494, -1.6910873651504517, -0.025914987549185753, -0.019984912127256393, -0.2284184992313385, -0.9607284069061279, -0.474333256483078, -2.3841855067985307e-07, -1.3232143828645349e-05, -8.34430247778073e-05, -2.3880715370178223, -1.0283945798873901, -0.6456179618835449, -8.248942322097719e-05, -0.00867148581892252, -0.0006799769471399486, -5.602820692729438e-06, 0.0, -0.012624231167137623, -0.005650500301271677, -0.2970377206802368, -9.369411418447271e-05, -1.1010316610336304, -0.010092182084918022, -0.008531078696250916, -1.3591324090957642, -2.5727219581604004, -2.8132995794294402e-05, -0.08323340862989426, -1.8310807943344116, -0.5151479244232178, -0.08899158984422684, -0.048371437937021255, -0.12470726668834686, -0.0006706849089823663, -0.03703446686267853, -0.1349002718925476, -0.5620416402816772, -2.3841830625315197e-06, -1.0847986231965479e-05, -8.344646857949556e-07, -1.1920928244535389e-07, -7.152555099310121e-07, -0.00010990492592100054, -0.00036197309964336455, -0.014830107800662518, -0.04105035588145256, -4.565611743601039e-05, -0.4472810924053192, -0.024746552109718323, -0.08840446174144745, -0.006399140227586031, -0.0008491248008795083, -0.023007353767752647, -0.0015250729629769921, -0.005457976367324591, -0.2070806622505188, -0.009658747352659702, -0.07950274646282196, -0.020638594403862953, -0.6574796438217163, -0.010809321887791157, -0.011850669980049133, -0.000860320869833231, -0.3239173889160156, -0.7665885090827942, -1.3096247911453247, -0.017538929358124733, -0.3551415503025055, -0.05870387330651283, -0.00115863885730505, -0.00041083001997321844, -0.0008435266790911555, -0.0015414986992254853, -1.1920928244535389e-07, -1.4185804502631072e-05, -0.009494861587882042, -9.476689592702314e-05, -0.047485459595918655, -0.0030168043449521065, -0.7321768999099731, -0.0009077242575585842, -0.03753519803285599, -0.023901425302028656, -0.716834306716919, -0.011083701625466347, -1.1380844116210938], "finish_reason": "stop"}], "metrics": {"energy": 707.2296815891268, "energy_per_token": 3.4331537941219747, "time": 17.453167, "time_per_token": 0.08472411165048543}}
{"outputs": [{"text": "# Preprocess the text by removing non-alphanumeric characters, converting to lowercase, and removing stopwords\n    processed_texts = [ALPHANUMERIC.sub(' ', text.lower()).split() for text in texts]\n    processed_texts = [[word for word in text if word not in STOPWORDS] for text in processed_texts]\n\n    # Join the preprocessed tokens to create the corpus\n    corpus = [' '.join(text) for text in processed_texts]\n\n    # Vectorize the preprocessed texts using TF-IDF\n    vectorizer = TfidfVectorizer()\n    tfidf_matrix = vectorizer.fit_transform(corpus)\n\n    # Apply NMF to extract topics\n    nmf = NMF(n_components=num_topics)\n    nmf.fit(tfidf_matrix)\n\n    # Extract the most significant words for each topic\n    features = vectorizer.get_feature_names()\n    topics = [\n        [features[i] for i in np.argsort(nmf.components_[t", "tokens": ["#", " Pre", "process", " the", " text", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", ",", " converting", " to", " lower", "case", ",", " and", " removing", " stop", "words", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "split", "()", " for", " text", " in", " texts", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [[", "word", " for", " word", " in", " text", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " text", " in", " processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Join", " the", " pre", "processed", " tokens", " to", " create", " the", " corpus", "\n", "    ", "cor", "pus", " =", " ['", " '", ".", "join", "(", "text", ")", " for", " text", " in", " processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ize", " the", " pre", "processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "cor", "pus", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", " to", " extract", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "\n", "    ", "#", " Ext", "ract", " the", " most", " significant", " words", " for", " each", " topic", "\n", "    ", "features", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "top", "ics", " =", " [", "\n", "        ", "[", "features", "[", "i", "]", " for", " i", " in", " np", ".", "args", "ort", "(", "nm", "f", ".", "components", "_[", "t"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -0.6294155716896057, -1.5738050937652588, -0.7427017688751221, -0.07132450491189957, -0.0493924543261528, -0.0024730355944484472, -0.010427516885101795, -5.364274329622276e-05, -0.0007900454220362008, -0.029551366344094276, -1.131469964981079, -0.21539178490638733, -0.019978486001491547, -0.0019002966582775116, -0.012159742414951324, -0.019456373527646065, -0.017806081101298332, -0.04337918385863304, -0.006741280667483807, -0.014679872430860996, -0.03329265117645264, -0.0027852572966367006, -1.1074289083480835, -0.06093771383166313, -0.03561555594205856, -0.18155398964881897, -0.00037174468161538243, -0.32637202739715576, -0.5827292203903198, -1.3112935448589269e-05, -3.576278118089249e-07, -2.3841855067985307e-07, -1.1920922133867862e-06, -3.576278118089249e-07, -0.0003275334893260151, -3.2186455882765586e-06, -0.01832905411720276, -0.07063338905572891, -7.73638384998776e-05, -0.29192349314689636, -0.4035857319831848, -0.00614337669685483, -0.01581154577434063, -0.2090061902999878, -0.3191458582878113, -0.009556499309837818, -0.026724176481366158, -0.0002208704245276749, -8.451581379631534e-05, -0.0009459549910388887, -0.0035112176556140184, -0.01781029812991619, -0.03270626440644264, -0.37095534801483154, -0.00015496007108595222, -0.0019631178583949804, -0.0005849081207998097, -0.011969056911766529, -0.33632880449295044, -0.011909806169569492, -0.000916537712328136, -1.9907753085135482e-05, -6.806619057897478e-05, -0.12857717275619507, -0.008175479248166084, -0.0024057275149971247, -0.005773890297859907, -1.2159273865108844e-05, -0.0017473918851464987, 0.0, -5.960446742392378e-06, 0.0, -1.1920928244535389e-07, -0.003485083347186446, -0.0018461579456925392, -2.6702524337451905e-05, -2.9801878554280847e-05, -0.0002444683632347733, -1.6689286894688848e-06, -2.0265558760002023e-06, -3.933898824470816e-06, -0.00018034738604910672, -0.00035065223346464336, -0.22435446083545685, -0.00018618757894728333, -0.004960254766047001, -2.357306480407715, -0.27005138993263245, -2.095393657684326, -0.002777649089694023, -2.2069010734558105, -1.5607428550720215, -1.3406081199645996, -3.6200339794158936, -3.047100305557251, -0.5441770553588867, -5.006664650863968e-05, -0.01670151948928833, -5.543078441405669e-05, -0.003452770644798875, -0.15509015321731567, -0.0001722425949992612, -8.165503095369786e-05, -0.00012754580529872328, -0.0005631053354591131, -0.1571858674287796, -0.003649600315839052, -0.0009646529797464609, -2.7656173188006505e-05, -2.264974000354414e-06, -8.928377064876258e-05, -1.1920928244535389e-07, 0.0, -2.098061486321967e-05, -0.009135471656918526, -0.0005607224884442985, -0.005640661343932152, -6.425174069590867e-05, -0.006913668476045132, -0.24356091022491455, -0.012228869833052158, -0.024562090635299683, -2.192490577697754, -0.001166259404271841, -0.4059169590473175, -0.09157273173332214, -0.03173261508345604, -0.006139229983091354, -1.0371154530730564e-05, -3.290122185717337e-05, -0.07151374965906143, -0.00012814177898690104, -0.13761062920093536, -0.0012124576605856419, -0.0006980843027122319, -0.00021526881027966738, 0.0, -4.207999518257566e-05, 0.0, -1.1920922133867862e-06, -1.1920928244535389e-07, -0.9923053979873657, -0.008156324736773968, -0.0010271755745634437, -0.5010077953338623, -0.12376204133033752, -0.0002343380037928, -0.49444514513015747, -0.03812025114893913, -0.00010692501382436603, -9.560128091834486e-05, -1.6689160474925302e-05, -1.6569954823353328e-05, -3.564294092939235e-05, -5.722029527532868e-06, -1.4305104514278355e-06, -0.0017243054462596774, -0.00010871296399272978, 0.0, -0.0001137191939051263, -0.019062886014580727, -0.007331608794629574, -4.410646579344757e-05, -0.0018679328495636582, -0.2901449203491211, -0.015516041778028011, -3.8265450712060556e-05, -0.12133762240409851, -0.2565191388130188, -0.9526689052581787, -0.2186778336763382, -7.30726242181845e-05, -0.02535296604037285, -4.410734163684538e-06, -0.11098892241716385, -0.00010168035078095272, -3.576278118089249e-07, -0.00029416524921543896, -0.0012451999355107546, -8.344646857949556e-07, -6.5205356804654e-05, -0.0003670972364488989, -0.001808556611649692, -1.1920922133867862e-06, -3.4570634852570947e-06, -3.576278118089249e-07, -0.2526493966579437, -0.007014529779553413, -0.001995002618059516, -0.4143870174884796, -1.8954096958623268e-05, -0.07287534326314926, -5.8412379075889476e-06, -0.0014444880653172731, -7.128461584215984e-05, -1.7881377516459906e-06, 0.0, -8.344646857949556e-07, -4.768370445162873e-07, -0.02663886547088623, -0.006693324074149132, -0.06969821453094482, -3.266281055402942e-05, -0.005314033944159746, -1.8156460523605347, -0.010793754830956459, -0.11148979514837265, -1.004732370376587, -0.14841853082180023, -0.007112540304660797, -0.17400284111499786, -0.0006874820101074874, -0.0050504012033343315, -0.34394901990890503, -0.0001426833332516253, -3.2167935371398926, -0.009320556186139584, -0.6292348504066467, -3.576278118089249e-07, -7.629365427419543e-06, -0.0010306290350854397, 0.0, -1.3232143828645349e-05, 0.0, -0.00013207517622504383, -1.030969500541687, -0.006075959652662277, -0.025761064141988754, -0.6188494563102722, -0.028187159448862076, -0.006713691167533398, -0.6662959456443787, -2.043670177459717, -0.0033294502645730972, -0.14850907027721405, -0.08234881609678268, -6.19869097135961e-05, -1.0700411796569824, -0.0019406310748308897, -0.049990005791187286, -0.0056237103417515755, -0.009335909970104694, -0.3744429051876068, -9.83428253675811e-05, -0.008993829600512981, -7.152555099310121e-07, -0.09344511479139328, -0.3412642478942871, -8.4638240878121e-06, -0.00416305148974061, -0.001861388562247157, -0.006512252613902092, -3.4248199462890625], "finish_reason": "length"}], "metrics": {"energy": 873.9434306488037, "energy_per_token": 3.4138415259718893, "time": 21.653389, "time_per_token": 0.08458355078125}}
{"outputs": [{"text": "# Preprocess the texts by removing non-alphanumeric characters (excluding spaces), converting all characters to lowercase, and removing stopwords\n    texts = [ALPHANUMERIC.sub(' ', text).lower().strip() for text in texts]\n    texts = [\" \".join([word for word in text.split() if word not in STOPWORDS]) for text in texts]\n\n    # Create TF-IDF matrix\n    vectorizer = TfidfVectorizer(max_df=0.8, min_df=5, max_features=10000, token_pattern='[^_][A-Za-z][A-Za-z0-9_]*')\n    tfidf_matrix = vectorizer.fit_transform(texts)\n\n    # Apply NMF to extract the topics\n    nmf_model = NMF(n_components=num_topics, random_state=0)\n    W = nmf_model.fit_transform(tfidf_matrix)\n    H = nmf_model.components_\n\n    # Get", "tokens": ["#", " Pre", "process", " the", " texts", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " (", "ex", "cluding", " spaces", ")", ",", " converting", " all", " characters", " to", " lower", "case", ",", " and", " removing", " stop", "words", "\n", "    ", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", ".", "strip", "()", " for", " text", " in", " texts", "]", "\n", "    ", "text", "s", " =", " [", "\"", " \"", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Create", " TF", "-", "ID", "F", " matrix", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "max", "_", "df", "=", "0", ".", "8", ",", " min", "_", "df", "=", "5", ",", " max", "_", "features", "=", "1", "0", "0", "0", "0", ",", " token", "_", "pattern", "='", "[", "^", "_", "][", "A", "-", "Z", "a", "-", "z", "][", "A", "-", "Z", "a", "-", "z", "0", "-", "9", "_", "]*", "')", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", " to", " extract", " the", " topics", "\n", "    ", "nm", "f", "_", "model", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n", "    ", "W", " =", " nm", "f", "_", "model", ".", "fit", "_", "transform", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "    ", "H", " =", " nm", "f", "_", "model", ".", "components", "_", "\n", "\n", "    ", "#", " Get"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -0.6294155716896057, -1.0897352695465088, -0.8697293400764465, -0.04735812917351723, -0.025257771834731102, -0.0009011736838147044, -0.006489038933068514, -1.5020257706055418e-05, -0.00036840804386883974, -0.017080701887607574, -0.717960000038147, -0.2764839231967926, -0.002832331694662571, -0.004094670061022043, -0.0008434075862169266, -0.12817980349063873, -0.6203859448432922, -1.1548025608062744, -0.1194157674908638, -0.14232556521892548, -0.049060970544815063, -0.007057617884129286, -0.039652831852436066, -0.14820167422294617, -0.009822252206504345, -0.0029585659503936768, -0.007211724761873484, -0.18911288678646088, -0.004112122114747763, -2.597539186477661, -0.04199668765068054, -0.17182013392448425, -0.056816257536411285, -0.5299892425537109, -8.4638240878121e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -1.1920922133867862e-06, -5.960462772236497e-07, -8.225102646974847e-05, -2.622600959512056e-06, -0.02918151579797268, -0.23182983696460724, -0.00015317220822907984, -0.3368232250213623, -0.2962415814399719, -0.2501749098300934, -0.0249672569334507, -0.00012265883560758084, -1.1585910320281982, -0.7867754101753235, -0.004459436517208815, -0.2048378437757492, -0.0003295593778602779, -5.030505417380482e-05, -0.0013803249457851052, -0.0057889423333108425, -0.039901427924633026, -0.01552578341215849, -0.3226628005504608, -0.006403049454092979, -0.012459536083042622, -0.6164161562919617, -0.7291761040687561, -0.0005883631529286504, -0.00021455370006151497, -0.0001851148990681395, -0.2074253261089325, -0.03713061287999153, -0.004088733810931444, -6.985420623095706e-05, -9.107174992095679e-05, -0.08024299889802933, -0.003979621455073357, -0.00047755756531842053, -0.057385414838790894, -0.002787159290164709, -0.0022414815612137318, -0.039009399712085724, -2.6464111215318553e-05, -0.0038335658609867096, 0.0, -4.529942543740617e-06, 0.0, -2.3841855067985307e-07, -0.0032069466542452574, -0.009121650829911232, -0.00016234986833296716, -2.5033637939486653e-05, -6.3774932641536e-05, -0.003275388851761818, -0.0037307203747332096, -0.024914352223277092, -0.00029047083808109164, -0.010365107096731663, -3.0973801612854004, -0.5387932062149048, -0.0045845163986086845, -2.539125671319198e-05, -9.97731985989958e-05, -1.851232886314392, -0.44557395577430725, -0.00013040646445006132, -0.36397841572761536, -0.000653411028906703, -0.0008617501589469612, -0.0001858300092862919, 0.0, -1.728519782773219e-05, 0.0, -1.0728830375228426e-06, -3.576278118089249e-07, -0.4837331473827362, -1.1757582426071167, -1.6689286894688848e-06, -0.4468085765838623, -0.0002964295563288033, -0.029231879860162735, -4.935142715112306e-05, -1.136185646057129, -0.6479336023330688, -0.09347301721572876, -1.1920928244535389e-07, -3.6954811548639555e-06, -0.0001494772732257843, -1.513137698173523, -0.905309796333313, -0.8485845327377319, -2.3841855067985307e-07, -0.0002113357331836596, -0.0003810394846368581, -0.24759608507156372, -0.015807203948497772, -0.0064025754109025, -0.010495348833501339, -0.1833944022655487, -0.8221787810325623, -2.7479896545410156, -0.01670233905315399, -0.019879506900906563, -0.37966594099998474, -0.019716937094926834, -0.1538582742214203, -0.4796062707901001, -2.560283660888672, -1.9215819835662842, -0.0002047805901383981, -0.01158734131604433, -0.00020680672605521977, -1.1920928244535389e-07, -2.6940935640595853e-05, -0.8408747911453247, -1.2299010753631592, -2.312633478140924e-05, -0.0005782362422905862, -0.00032586511224508286, -1.1920928244535389e-07, -3.3854863431770355e-05, -0.3706735670566559, -0.00030214988510124385, -0.00012611546844709665, -0.2653382122516632, -0.4061829745769501, -0.14152756333351135, -0.01563188247382641, -0.0032739629969000816, -0.3602480888366699, -0.04739394038915634, -0.00028796817059628665, -0.3963317573070526, -0.021660663187503815, -0.0004776767164003104, -0.00010048838157672435, -5.125986263010418e-06, -1.3708974620385561e-05, -9.679325739853084e-05, -8.106198947643861e-06, -9.298280929215252e-06, -0.002258133376017213, -0.0006606780225411057, -2.2649508537142538e-05, -0.0006250573205761611, -0.07660339027643204, -0.0290400218218565, -8.153582894010469e-05, -0.0029154198709875345, -0.558073878288269, -0.011529835872352123, -4.410646579344757e-05, -0.8291890621185303, -0.21906965970993042, -1.304628610610962, -0.9165052771568298, -0.03269588202238083, -0.00021526881027966738, -0.055789604783058167, -3.1470757676288486e-05, -2.3136603832244873, -0.01893305405974388, -0.00012146688823122531, -0.0003620922507252544, -3.576278118089249e-07, -5.6980417866725475e-05, -0.0022149572614580393, -1.4305104514278355e-06, -0.0005617947317659855, -0.0007421599584631622, -0.003488290822133422, -8.344646857949556e-07, -1.0728830375228426e-06, 0.0, -0.3002466857433319, -0.23275412619113922, 0.0, -3.480850500636734e-05, -7.664863369427621e-05, -0.3122324049472809, -0.12314492464065552, -0.004944596905261278, -0.00335119292140007, -0.2501365840435028, -0.011840774677693844, -0.0004797023138962686, 0.0, -7.390948667307384e-06, -4.768370445162873e-07, -1.0728830375228426e-06, -0.00012051333033014089, -0.0004196478403173387, -1.0728830375228426e-06, -8.22540732769994e-06, -5.340433563105762e-05, -8.344646857949556e-07, 0.0, -1.1920922133867862e-06, -1.1920928244535389e-07, -0.00941456202417612, -0.04971645772457123, -0.028320662677288055, -0.012119464576244354, -0.0006598440813831985, -0.0011046981671825051, 0.0, -1.4305104514278355e-06, -5.960462772236497e-07, -8.344646857949556e-07, -0.00018988236843142658, -1.4424220353248529e-05, -0.009383739903569221, -0.009269888512790203, -7.390703103737906e-05, -0.027540598064661026, -0.44593602418899536], "finish_reason": "length"}], "metrics": {"energy": 872.9606679077151, "energy_per_token": 3.410002609014512, "time": 21.857447, "time_per_token": 0.08538065234375}}
{"outputs": [{"text": "# Preprocess texts by removing non-alphanumeric characters (excluding spaces),\n    # converting all characters to lowercase, and removing stopwords.\n    preprocessed_texts = [ALPHANUMERIC.sub(' ', text).lower() for text in texts]\n    preprocessed_texts = [\n        ' '.join(word for word in text.split() if word not in STOPWORDS)\n        for text in preprocessed_texts\n    ]\n\n    # Vectorize preprocessed texts using TF-IDF\n    tfidf_vectorizer = TfidfVectorizer(max_df=0.5, min_df=1)\n    tfidf_matrix = tfidf_vectorizer.fit_transform(preprocessed_texts)\n\n    # Perform NMF\n    nmf_model = NMF(n_components=num_topics)\n    nmf_model.fit(tfidf_matrix)\n\n    # Get words based on component weights\n    tfidf_features = tfidf_vectorizer.get_feature_names_out()\n    topic", "tokens": ["#", " Pre", "process", " texts", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " (", "ex", "cluding", " spaces", ")", ",", "\n", "    ", "#", " converting", " all", " characters", " to", " lower", "case", ",", " and", " removing", " stop", "words", ".", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "\n", "        ", "'", " '", ".", "join", "(", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", ")", "\n", "        ", "for", " text", " in", " pre", "processed", "_", "text", "s", "\n", "    ", "]", "\n", "\n", "    ", "#", " Vector", "ize", " pre", "processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "max", "_", "df", "=", "0", ".", "5", ",", " min", "_", "df", "=", "1", ")", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " tf", "id", "f", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "pre", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Perform", " N", "MF", "\n", "    ", "nm", "f", "_", "model", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "nm", "f", "_", "model", ".", "fit", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "\n", "    ", "#", " Get", " words", " based", " on", " component", " weights", "\n", "    ", "tf", "id", "f", "_", "features", " =", " tf", "id", "f", "_", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "topic"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -1.2798786163330078, -0.6832999587059021, -0.0475408211350441, -0.020662648603320122, -0.0009773960337042809, -0.006636365316808224, -4.565611743601039e-05, -0.00037305548903532326, -0.01741253025829792, -0.7450847029685974, -0.21085762977600098, -0.0014609150821343064, -0.003588072955608368, -0.0009274948388338089, -0.1262875646352768, -1.1915885210037231, -0.00012909532233607024, -0.0004992430913262069, -0.0573999360203743, -0.5793489813804626, -0.007216340862214565, -0.00046528480015695095, -0.0001472126314183697, -0.005748644471168518, -0.008352466858923435, -0.005348895210772753, -0.006574192550033331, -0.0010000233305618167, -0.004141326528042555, -0.9925823211669922, -0.00278014549985528, -0.00900871492922306, -0.9382322430610657, -0.021727386862039566, -0.04112231731414795, -0.026393914595246315, -0.0066162338480353355, -0.0006878394051454961, -0.33014556765556335, -0.7368024587631226, -1.0132738680113107e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -4.768370445162873e-07, -3.576278118089249e-07, -0.0003477922291494906, -5.364403477869928e-06, -0.02820303663611412, -0.17817336320877075, -0.0001230164198204875, -0.35964468121528625, -1.0698251724243164, -0.055479519069194794, -0.020966792479157448, -0.0002022777043748647, -0.6265398263931274, -0.00020454221521504223, -7.86750388215296e-05, -0.001482341205701232, -0.0034344755113124847, -0.011436382308602333, -0.09139540791511536, -0.3423939049243927, -0.0002308817347511649, -0.0004226268210913986, -0.010399202816188335, -0.0007453762227669358, -0.013197333551943302, -0.5151193737983704, -0.6732410192489624, -0.009353624656796455, -0.11830953508615494, -1.585470999998506e-05, -9.738924563862383e-05, -0.00011395759065635502, -2.0466203689575195, -0.23786082863807678, -0.01471499539911747, -3.4450891689630225e-05, -9.583967766957358e-05, -0.32058706879615784, -0.00706045888364315, -0.0003407612966839224, -0.04329242929816246, -0.023500017821788788, -0.002724746707826853, -0.022529130801558495, -0.00011526874004630372, -0.003879997180774808, 0.0, -1.0609570381348021e-05, 0.0, 0.0, -0.002389791887253523, -0.3010812997817993, -0.002221618080511689, -0.00036566724884323776, -0.00023147765023168176, -4.9232225137529895e-05, -0.00011359999916749075, -8.344646857949556e-07, -1.311301275563892e-06, -5.960462772236497e-07, -5.245195097813848e-06, -0.04408733919262886, -0.007119879126548767, -1.7523612768854946e-05, -0.0004328744253143668, -0.029135433956980705, -0.00022206225548870862, -0.010041553527116776, -0.14539344608783722, -0.007680883165448904, -1.165184736251831, -0.00047362555051222444, -0.02207540161907673, -0.05649939179420471, -0.021123673766851425, -0.003628220409154892, -6.9141146923357155e-06, -2.038458114839159e-05, -0.4801015257835388, -0.00014685506175737828, -1.695303201675415, -0.022728651762008667, -0.0002008474839385599, -0.09937898069620132, -0.026013486087322235, -0.00918968953192234, -9.119095193454996e-05, -0.0001958416833076626, 0.0, -0.0001380348257953301, 0.0, -8.344646857949556e-07, -3.576278118089249e-07, -0.3984229266643524, -0.6717249155044556, -2.9802276912960224e-06, -0.35306692123413086, -0.0002008474839385599, -0.018271466717123985, -5.113947918289341e-05, -3.545107364654541, -0.016648409888148308, -0.27866384387016296, -1.1920928244535389e-07, -2.3841830625315197e-06, -2.9801878554280847e-05, -0.5485311150550842, -0.3028913736343384, -0.021731119602918625, -0.0012218636693432927, -0.046769239008426666, -0.0005178302526473999, -0.00011872540198964998, -0.24111351370811462, -0.1127442866563797, -0.0003475538978818804, -8.177422569133341e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.768370445162873e-07, -8.34461570775602e-06, -3.576278118089249e-07, -1.0490362910786644e-05, -0.00010048838157672435, -5.722029527532868e-06, -2.3841830625315197e-06, -0.0005168771021999419, -0.0017927302978932858, -3.576278118089249e-07, -3.576278118089249e-07, 0.0, -3.2186455882765586e-06, -8.201262971851975e-05, -0.01019673515111208, -0.06286223977804184, -5.745722592109814e-05, -0.002627256326377392, -2.3547911643981934, -0.08961008489131927, -4.1960789531003684e-05, -1.8926358222961426, -5.6503606174374e-05, -0.00747242197394371, -1.3112935448589269e-05, -1.9658706188201904, -0.02767859399318695, -7.557583012385294e-05, -0.0002910667099058628, -1.1920928244535389e-07, -0.0002203936892328784, -0.012027361430227757, -8.344646857949556e-07, -0.0006140968762338161, -0.00027724236133508384, -0.002013443037867546, -3.576278118089249e-07, -1.6689286894688848e-06, -2.3841855067985307e-07, -0.5754453539848328, -0.010768163949251175, -0.000957150012254715, -0.7554284334182739, -3.814689989667386e-06, -0.00018702188390307128, -0.13437597453594208, -0.0005023409612476826, -5.8412379075889476e-06, -0.008329769596457481, -7.271502545336261e-05, -2.3841855067985307e-07, 0.0, -5.125986263010418e-06, -3.576272320060525e-06, -0.0650893896818161, -0.005511801689863205, -0.07804728299379349, -3.111314072157256e-05, -0.005217625759541988, -0.724275529384613, -2.600709915161133, -3.755441188812256, -0.0006462631281465292, -2.4588065147399902, -0.03791941702365875, -0.22296243906021118, -0.00026246439665555954, -3.395928144454956, -0.00023457636416424066, -1.1086402082582936e-05, -0.05044734477996826, -2.9160869121551514, -0.008352466858923435, -0.004754666239023209, -5.960462772236497e-07, 0.0, -2.145764938177308e-06, -0.0001454247540095821, 0.0, -3.099436753473128e-06, -9.214453893946484e-05, 0.0, -1.1324817933200393e-05, 0.0, -6.69933797325939e-05, -0.18286842107772827, -0.00012194366718176752, -0.00041130665340460837, -0.006379714701324701, -0.12829063832759857, -0.8587375283241272], "finish_reason": "length"}], "metrics": {"energy": 872.3901618108742, "energy_per_token": 3.4077740695737275, "time": 21.865255, "time_per_token": 0.08541115234375}}
{"outputs": [{"text": "# Preprocess text by removing non-alphanumeric characters and lowercasing\n    texts = [re.sub(ALPHANUMERIC, ' ', t).lower().strip() for t in texts]\n\n    # Remove stopwords\n    texts = [t.split() for t in texts]  # split into words\n    texts = [[w for w in t if w not in STOPWORDS] for t in texts]  # remove stopwords\n    texts = [' '.join(t) for t in texts]  # join back into text\n\n    # Vectorize using TF-IDF\n    vectorizer = TfidfVectorizer(ngram_range=(1, 2))\n    tfidf_matrix = vectorizer.fit_transform(texts)\n\n    # Apply NMF\n    nmf = NMF(n_components=num_topics)\n    nmf_matrix = nmf.fit_transform(tfidf_matrix)\n\n    # Get feature names from vectorizer\n    feature_names = vectorizer.get_feature_names_out()\n\n    #", "tokens": ["#", " Pre", "process", " text", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " and", " lower", "c", "asing", "\n", "    ", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " t", ")", ".", "lower", "()", ".", "strip", "()", " for", " t", " in", " texts", "]", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "text", "s", " =", " [", "t", ".", "split", "()", " for", " t", " in", " texts", "]", "  ", "#", " split", " into", " words", "\n", "    ", "text", "s", " =", " [[", "w", " for", " w", " in", " t", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " t", " in", " texts", "]", "  ", "#", " remove", " stop", "words", "\n", "    ", "text", "s", " =", " ['", " '", ".", "join", "(", "t", ")", " for", " t", " in", " texts", "]", "  ", "#", " join", " back", " into", " text", "\n", "\n", "    ", "#", " Vector", "ize", " using", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "ng", "ram", "_", "range", "=(", "1", ",", " ", "2", "))", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "nm", "f", "_", "matrix", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "\n", "    ", "#", " Get", " feature", " names", " from", " vector", "izer", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "#"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -2.5490665435791016, -0.9905620813369751, -0.07754316180944443, -0.03658945485949516, -0.0017702399054542184, -0.011346337385475636, -9.333651541965082e-05, -0.0007580029196105897, -0.03604375198483467, -1.71653413772583, -2.9994421005249023, -0.0958186611533165, -0.00013934595335740596, -0.2338426113128662, -0.00224861828610301, -2.055675983428955, -0.033051516860723495, -0.0902625173330307, -0.03930377587676048, -0.6220410466194153, -0.00011491115583339706, -0.0016656348016113043, -0.02686356194317341, -0.03184543922543526, -3.6954811548639555e-06, 0.0, -7.152555099310121e-07, 0.0, -3.576278118089249e-07, -0.0016721803694963455, -0.13959407806396484, -5.3165931603871286e-05, -7.557583012385294e-05, -1.8198214769363403, -0.2799322009086609, -0.05742436274886131, -0.05941373109817505, -3.242440288886428e-05, -2.3022243976593018, -0.23125134408473969, -0.0020157035905867815, -0.09380052238702774, -0.00011681827891152352, -2.1576648578047752e-05, -0.0007346553611569107, -0.0027197536546736956, -0.0010561132803559303, -0.1012803390622139, -0.00022230061586014926, -0.011689617298543453, -0.9907000064849854, -0.01863238774240017, -0.030925622209906578, -1.1629709005355835, -0.00023278864682652056, -0.698488712310791, -0.009301896207034588, -0.04257616773247719, -0.4712224006652832, -1.8648295402526855, -0.627185583114624, -0.0504646860063076, -0.09334749728441238, -0.010475648567080498, -8.749579137656838e-05, -1.156323378381785e-05, -0.00020311199477873743, -0.011286814697086811, -2.9370532035827637, -9.536697689327411e-06, -2.3408050537109375, -0.3054156005382538, -0.1268862634897232, -0.027333684265613556, -0.0027218933682888746, -0.13316911458969116, -0.001276512397453189, -0.035204555839300156, -0.0624660961329937, -0.44891464710235596, -0.0015337619697675109, -6.711257447022945e-05, -1.7881233361549675e-05, -0.24254712462425232, -0.0009297577198594809, -0.0053669181652367115, -0.00799337588250637, -5.602820692729438e-06, -0.001755721983499825, 0.0, -7.033323527139146e-06, 0.0, 0.0, -0.0034456427674740553, -0.003677155589684844, -3.9934315282152966e-05, -5.602820692729438e-06, -5.1377883210079744e-05, -0.0010842165211215615, -0.7591071724891663, -3.576272320060525e-06, -0.020687520503997803, -0.0042257304303348064, -0.013743299059569836, -0.03166251257061958, -0.18891829252243042, -0.008544553071260452, -0.0002585315378382802, -0.001134824356995523, -0.02394472248852253, -0.00010752100206445903, -5.4238757002167404e-05, -2.0265373677830212e-05, -0.006897922605276108, -0.00680521922186017, -0.0006288696313276887, -0.0061880419962108135, -3.6954811548639555e-06, -4.768370445162873e-07, -2.372236667724792e-05, -0.03173723444342613, -0.0229493360966444, -7.152555099310121e-07, -0.1693059355020523, -0.3312622606754303, -0.06846208870410919, -1.6180291175842285, -0.10478135943412781, -0.004071756266057491, -0.0001280225842492655, -0.02194829285144806, -0.2610470950603485, -0.027811121195554733, -1.487770915031433, -0.02868063747882843, -0.006895318161696196, -1.0371154530730564e-05, -4.768258077092469e-05, -0.05589771643280983, -0.00014411364099942148, -0.22716709971427917, -0.0010602811817079782, -0.0004909025738015771, -0.0002076410164590925, -2.3841855067985307e-07, -7.390948667307384e-06, 0.0, -8.344646857949556e-07, -1.1920928244535389e-07, -0.6053973436355591, -3.684758186340332, -0.0006384003208950162, -6.41325386823155e-05, -1.311301275563892e-06, -0.0020960045512765646, -0.033918336033821106, -0.0001250427303602919, -0.09212930500507355, -0.34292078018188477, -0.35748639702796936, -0.39182573556900024, -0.002095528645440936, -0.657322108745575, -0.1042742133140564, -0.001302704680711031, -0.8812651634216309, -0.10716202855110168, -0.00012146688823122531, -0.0002015625941567123, -1.2636104656849056e-05, -7.152531907195225e-06, -5.864924969500862e-05, -5.602820692729438e-06, -1.0728830375228426e-06, -0.0010152667528018355, -0.0002536452084314078, -1.680836794548668e-05, -0.00019894051365554333, -0.05158592388033867, -0.018814319744706154, -6.282132380874828e-05, -0.005141963250935078, -0.3593985438346863, -0.008076745085418224, -4.0649541915627196e-05, -0.5081457495689392, -9.810443589231e-05, -0.02610558643937111, -4.732496745418757e-05, -0.07003771513700485, -0.00011717586312443018, -1.1920928244535389e-07, -0.0005335576133802533, -0.012924709357321262, -2.264974000354414e-06, -0.00048411093303002417, -0.0003446938644628972, -0.0025754161179065704, -8.344646857949556e-07, -1.1920922133867862e-06, -1.1920928244535389e-07, -0.7316898703575134, -0.01753143221139908, -0.00156589865218848, -0.6299319863319397, -3.969590397900902e-05, -1.8707231283187866, -0.3117959499359131, -0.0006588910473510623, -0.00052426423644647, 0.0, -2.6464111215318553e-05, -0.010135374031960964, -0.014507642947137356, -3.58813522325363e-05, -3.266281055402942e-05, -0.0001113352773245424, -3.4570634852570947e-06, 0.0, -1.1920922133867862e-06, -3.576278118089249e-07, -0.026861125603318214, -0.02045349031686783, -0.3053170442581177, -7.784063927829266e-05, -0.009639620780944824, -0.4330443739891052, -1.9901379346847534, -0.22549359500408173, -2.439918041229248, -0.16602616012096405, -0.0010009760735556483, -0.05721914768218994, -9.536288416711614e-05, -0.11621757596731186, -8.248942322097719e-05, -0.00805214885622263, -0.0007008241955190897, -0.04296222701668739, -1.1920928244535389e-07, -2.145764938177308e-06, -0.00031835734262131155, -1.1920928244535389e-07, -3.099436753473128e-06, 0.0, -1.6689286894688848e-06, -0.6268379092216492, -0.0006130246329121292, -0.0010186012368649244, -0.007178822532296181, -0.00803807657212019, -5.519237674889155e-05, -0.007463784422725439], "finish_reason": "length"}], "metrics": {"energy": 888.5937294826501, "energy_per_token": 3.471069255791602, "time": 21.856977, "time_per_token": 0.08537881640625}}
{"outputs": [{"text": "# Preprocess the text by removing non-alphanumeric characters (excluding spaces), converting to lowercase, and removing stopwords.\n    processed_texts = [re.sub(ALPHANUMERIC, ' ', text.lower()) for text in texts]\n    processed_texts = [\n        ' '.join([word for word in text.split() if word not in STOPWORDS])\n        for text in processed_texts\n    ]\n\n    # Create a TF-IDF vectorizer and fit it to the processed texts.\n    vectorizer = TfidfVectorizer(max_features=1000, ngram_range=(1, 2))\n    vectorizer.fit(processed_texts)\n\n    # Transform the processed texts into a TF-IDF matrix and apply NMF to extract topics.\n    tf_idf = vectorizer.transform(processed_texts)\n    nmf = NMF(n_components=num_topics, random_state=1)\n    W = nmf.fit_transform(tf_idf)\n    H = nmf.components_", "tokens": ["#", " Pre", "process", " the", " text", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " (", "ex", "cluding", " spaces", ")", ",", " converting", " to", " lower", "case", ",", " and", " removing", " stop", "words", ".", "\n", "    ", "processed", "_", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [", "\n", "        ", "'", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "        ", "for", " text", " in", " processed", "_", "text", "s", "\n", "    ", "]", "\n", "\n", "    ", "#", " Create", " a", " TF", "-", "ID", "F", " vector", "izer", " and", " fit", " it", " to", " the", " processed", " texts", ".", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "max", "_", "features", "=", "1", "0", "0", "0", ",", " n", "gram", "_", "range", "=(", "1", ",", " ", "2", "))", "\n", "    ", "vector", "izer", ".", "fit", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Transform", " the", " processed", " texts", " into", " a", " TF", "-", "ID", "F", " matrix", " and", " apply", " N", "MF", " to", " extract", " topics", ".", "\n", "    ", "tf", "_", "id", "f", " =", " vector", "izer", ".", "transform", "(", "processed", "_", "text", "s", ")", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "1", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "_", "id", "f", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -0.6294155716896057, -1.5738050937652588, -0.7427017688751221, -0.07132450491189957, -0.0493924543261528, -0.0024730355944484472, -0.010427516885101795, -5.364274329622276e-05, -0.0007900454220362008, -0.029551366344094276, -0.798252284526825, -0.24556972086429596, -0.0037327392492443323, -0.007611795328557491, -0.001167926355265081, -0.16366341710090637, -0.6496299505233765, -0.19714248180389404, -0.005363123957067728, -0.01708175614476204, -0.0297846682369709, -0.2996748387813568, -0.04717437922954559, -0.003338955342769623, -0.01484549418091774, -2.4156785011291504, -0.0035207211039960384, -0.005555191542953253, -1.003190517425537, -0.0510263666510582, -0.0301985964179039, -0.19633691012859344, -0.00044586253352463245, -0.14625594019889832, -1.6056690216064453, -0.00029869386344216764, -0.002600028645247221, -0.029649855569005013, -0.0735660269856453, -4.887569048150908e-06, -1.1920928244535389e-07, -9.536738616588991e-07, -3.576278118089249e-07, -4.768370445162873e-07, -0.0013809201773256063, -0.2581292986869812, -7.426462980220094e-05, -0.0006164796068333089, -0.19885165989398956, -0.4636838734149933, -0.013695089146494865, -0.012018646113574505, -1.2737927436828613, -0.0002411313180346042, -5.149708886165172e-05, -0.001039560534991324, -0.0024172631092369556, -0.013426481746137142, -0.10790467262268066, -0.1545974761247635, -0.0004037995240651071, -0.005310120992362499, -0.0006522196927107871, -0.009098025038838387, -0.4286730885505676, -1.2569458484649658, -0.028163284063339233, -0.11229177564382553, -1.5616295058862306e-05, -0.00011896379146492109, -8.463501580990851e-05, -0.10420482605695724, -0.028401080518960953, -0.005716404877603054, -0.00010525626566959545, -0.00011205045302631333, -0.10439718514680862, -0.007780602667480707, -0.00020382710499688983, -0.02925468608736992, -0.0071700639091432095, -0.0014604389434680343, -0.0068541173823177814, -9.238292841473594e-05, -0.0023865809198468924, 0.0, -8.22540732769994e-06, 0.0, 0.0, -0.003201718209311366, -0.3525844216346741, -0.002514060353860259, -0.0002451834443490952, -0.0003045333724003285, -8.654219709569588e-05, -0.0005316513124853373, -8.344646857949556e-07, -1.4305104514278355e-06, -3.433168603805825e-05, -0.03895792365074158, -0.007825668901205063, -1.7046782886609435e-05, -0.0007400158210657537, -0.05180089548230171, -0.0002706876548472792, -0.025756649672985077, -2.3983452320098877, -1.4598393440246582, -0.06282372772693634, -0.005713086109608412, -9.65590606938349e-06, -9.357491217087954e-05, -0.109431691467762, -0.004521622322499752, -1.1542631387710571, -0.22436541318893433, -0.32970520853996277, -0.15341877937316895, -0.007906214334070683, -0.45495155453681946, -0.2645353376865387, -0.2538829445838928, -0.0085983294993639, -0.00015436411194968969, -0.33830568194389343, -0.00043811736395582557, -0.0005772831500507891, -0.00022885564249008894, -1.1920928244535389e-07, -6.675497570540756e-05, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -0.319681316614151, -0.7835615277290344, -1.7881377516459906e-06, -1.3674187660217285, -0.000701658078469336, -0.43001383543014526, -0.008573037572205067, -0.0014206803170964122, -0.03680825233459473, -1.1477129459381104, -3.8303446769714355, -0.04185059294104576, -3.3378546504536644e-06, -1.1920922133867862e-06, -0.000785161682870239, -0.03423368185758591, -2.634490556374658e-05, -0.01975363865494728, -0.18559706211090088, -0.08312755823135376, -0.011753122322261333, -0.0016771787777543068, -1.8195643424987793, -0.1339179277420044, -0.0049725910648703575, -4.8397800128441304e-05, -0.007449822034686804, -0.0025097797624766827, -1.0728830375228426e-06, 0.0, -2.0861407392658293e-05, -0.0004389514506328851, -0.0008362610242329538, -0.11913009732961655, -9.667406266089529e-05, -0.0026925283018499613, -1.6009774208068848, -0.036433834582567215, -0.23527705669403076, -0.013890030793845654, -0.22041863203048706, -0.3087235391139984, -0.63924241065979, -0.0006328010931611061, -1.2040065485052764e-05, -4.029192859889008e-05, -0.03059050254523754, -2.843947649002075, -0.3005529046058655, -0.006674495991319418, -3.909988299710676e-05, -0.46636757254600525, -0.31140366196632385, -1.207207202911377, -0.04901057481765747, -0.0028676362708210945, -0.00017855956684798002, -0.40036681294441223, -2.720492362976074, -0.04306408390402794, -0.0002097863471135497, -1.197460651397705, -0.0006985607906244695, -2.0265558760002023e-06, -1.2516897186287679e-05, -0.0024040627758949995, -0.00035339308669790626, -0.0008872386533766985, -9.536738616588991e-07, -1.0728830375228426e-06, -1.1920928244535389e-07, -7.664863369427621e-05, -0.04187357425689697, -0.023448433727025986, -0.03509429469704628, -5.328513361746445e-05, -0.03710545599460602, -0.00010632903286023065, -2.3841855067985307e-07, -0.000188332938705571, -0.024372708052396774, -2.622600959512056e-06, -0.000674616196192801, -0.0003551805857568979, -0.0073784696869552135, -5.960462772236497e-07, -3.576278118089249e-07, -1.1920928244535389e-07, -0.7685225605964661, -0.40885087847709656, 0.0, -2.2053474822314456e-05, -7.557583012385294e-05, -1.38840913772583, -0.39490747451782227, -0.011106808669865131, -0.016183558851480484, -0.34689292311668396, -0.004582380410283804, -7.021180499577895e-05, 0.0, -1.9073468138230965e-06, -0.007811474613845348, -0.00036483307485468686, -9.536738616588991e-07, -1.4781842764932662e-05, -0.0003343261778354645, -4.95898348162882e-05, -1.1920922133867862e-06, -3.576278118089249e-07, -0.018694166094064713, -0.06236127018928528, -0.017879854887723923, -0.020064951851963997, -0.0008818790083751082, -0.0004323977918829769, 0.0, -2.0265558760002023e-06, -0.0002388668799540028, -7.510157047363464e-06], "finish_reason": "length"}], "metrics": {"energy": 893.0001545314792, "energy_per_token": 3.4882818536385907, "time": 22.075144, "time_per_token": 0.08623103125}}
{"outputs": [{"text": "# Preprocess texts by removing non-alphanumeric characters (excluding spaces) and converting all characters to lowercase\n    texts = [re.sub(ALPHANUMERIC, '', text.lower()).strip().split() for text in texts]\n\n    # Remove stopwords\n    texts = [[word for word in text if word not in STOPWORDS] for text in texts]\n\n    # Vectorize\n    vectorizer = TfidfVectorizer(analyzer='word')\n    vectorized = vectorizer.fit_transform([' '.join(text) for text in texts])\n\n    # Apply NMF\n    nmf = NMF(n_components=num_topics, random_state=1)\n    nmf_fit = nmf.fit_transform(vectorized)\n\n    # Retrieve topics\n    topics = [[] for _ in range(num_topics)]\n    for idx, comp in enumerate(nmf.components_):\n        words = vectorizer.get_feature_names_out()\n        top_words = sorted(enumerate(comp), key=lambda x:", "tokens": ["#", " Pre", "process", " texts", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " (", "ex", "cluding", " spaces", ")", " and", " converting", " all", " characters", " to", " lower", "case", "\n", "    ", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " ''", ",", " text", ".", "lower", "())", ".", "strip", "()", ".", "split", "()", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "text", "s", " =", " [[", "word", " for", " word", " in", " text", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Vector", "ize", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "analy", "zer", "='", "word", "')", "\n", "    ", "vector", "ized", " =", " vector", "izer", ".", "fit", "_", "transform", "(['", " '", ".", "join", "(", "text", ")", " for", " text", " in", " texts", "])", "\n", "\n", "    ", "#", " Apply", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "1", ")", "\n", "    ", "nm", "f", "_", "fit", " =", " nm", "f", ".", "fit", "_", "transform", "(", "vector", "ized", ")", "\n", "\n", "    ", "#", " Ret", "rieve", " topics", "\n", "    ", "top", "ics", " =", " [", "[]", " for", " _", " in", " range", "(", "num", "_", "top", "ics", ")]", "\n", "    ", "for", " idx", ",", " comp", " in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n", "        ", "words", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "        ", "top", "_", "words", " =", " sorted", "(", "enumerate", "(", "comp", ")", ",", " key", "=", "lambda", " x", ":"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -1.2798786163330078, -0.6832999587059021, -0.0475408211350441, -0.020662648603320122, -0.0009773960337042809, -0.006636365316808224, -4.565611743601039e-05, -0.00037305548903532326, -0.01741253025829792, -0.7450847029685974, -0.21085762977600098, -0.0014609150821343064, -0.003588072955608368, -0.0009274948388338089, -2.6181888580322266, -0.3710089921951294, -2.334791898727417, -0.09702545404434204, -0.01909797452390194, -0.00790195632725954, -0.006679351441562176, -0.32437703013420105, -0.002343410160392523, -2.0972113609313965, -0.0159938745200634, -0.08476415276527405, -0.030936487019062042, -0.6512439846992493, -9.262132516596466e-05, -0.0029569019097834826, -0.03880094736814499, -0.09270979464054108, -2.3841830625315197e-06, 0.0, -2.9802276912960224e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -0.002837918698787689, -1.7567380666732788, -3.6238969187252223e-05, -0.5173256397247314, -0.5801488161087036, -0.011306734755635262, -0.017388982698321342, -1.5915122032165527, -0.5150333046913147, -0.0017511999467387795, -2.61529803276062, -0.2540263533592224, -0.02373729646205902, -0.01423831470310688, -0.00040546778473071754, -8.77341881277971e-05, -0.0004996005445718765, -0.007522589061409235, -0.010179271921515465, -0.28225839138031006, -0.00016652150952722877, -0.0030171608086675406, -0.21097396314144135, -0.004763445816934109, -0.024157458916306496, -1.4613550901412964, -0.00017486473370809108, -0.1990749090909958, -0.002310228068381548, -0.02304171957075596, -0.1951211839914322, -0.016091125085949898, -0.0016108882846310735, -3.766942609217949e-05, -1.2874520507466514e-05, -0.10377605259418488, -0.002732117660343647, -0.0020352143328636885, -0.007036310620605946, -4.768360213347478e-06, -0.001814506365917623, 0.0, -1.6212332411669195e-05, 0.0, 0.0, -0.0026605469174683094, -0.003053528256714344, -4.386805812828243e-05, -1.2874520507466514e-05, -2.098061486321967e-05, -0.0002044230350293219, -0.0004621868138201535, -0.03531019762158394, -0.00010609064338495955, -0.012420565821230412, -0.7388725876808167, -0.016797881573438644, -3.6215953826904297, -0.0002474478678777814, -0.22636406123638153, -0.0018561530159786344, -0.0010455148294568062, -0.0005970602505840361, -3.576278118089249e-07, -9.536697689327411e-06, 0.0, -1.7881377516459906e-06, -1.6689286894688848e-06, -0.09305829554796219, -1.9881385564804077, -9.572047565598041e-05, -0.04852180555462837, -0.00014661667228210717, -0.6991590857505798, -0.03110174834728241, -0.003832378191873431, -3.471240758895874, -0.4536125063896179, -2.3551933765411377, -0.002837918698787689, -7.271740287251305e-06, -9.65590606938349e-06, -0.002885703928768635, -7.83174327807501e-05, -5.960446742392378e-06, -0.2456696778535843, -0.0004637358069885522, -6.97350042173639e-05, -3.909988299710676e-05, -0.00830328743904829, -0.14311695098876953, -0.0026115619111806154, -0.0037309578619897366, -2.0146166207268834e-05, -1.0967194612021558e-05, -4.184158387943171e-05, -0.0037981767673045397, -0.02360702119767666, -0.013536685146391392, -0.00010656742961145937, -0.004991451278328896, -0.7539421916007996, -0.029214397072792053, -0.00027736154152080417, -0.21565008163452148, -0.00016652150952722877, -0.04205898568034172, -0.0002449450839776546, -0.04822854325175285, -0.0001851148990681395, -1.1920928244535389e-07, -0.0011305375955998898, -0.013775045052170753, -2.3841830625315197e-06, -0.0002728328399825841, -0.0011861439561471343, -0.0042922040447592735, -3.099436753473128e-06, -4.291525328881107e-06, -1.1920928244535389e-07, -1.1470129489898682, -0.44753190875053406, -1.1920928244535389e-07, -6.329813186312094e-05, -0.00011824862303910777, -0.805686891078949, -0.5094709396362305, -0.0069221924059093, -0.007440710905939341, -0.5125447511672974, -0.0018819731194525957, -2.2080018520355225, -1.7091505527496338, -0.06308454275131226, -0.00023421882360707968, 0.0, -9.179073458653875e-06, -0.0005818104837089777, -1.822482705116272, -4.470248313737102e-05, -3.8980677345534787e-05, -0.0006906984490342438, -2.288792165927589e-05, -0.023370411247015, -0.009987382218241692, -0.22481213510036469, -7.402622577501461e-05, -0.031467657536268234, -3.1837430000305176, -0.005691631697118282, -1.467594861984253, -0.6360260844230652, -0.00044050050200894475, -1.3566489219665527, -0.004494327586144209, -0.016305187717080116, -1.4913029670715332, -0.7594506740570068, -0.0022737146355211735, -0.11969068646430969, -0.0006808108882978559, -0.0017733338754624128, -7.64102369430475e-05, -0.01846177503466606, -8.344646857949556e-07, -0.0001512651506345719, -0.000658057106193155, -3.71926071238704e-05, -0.004423832520842552, -0.051719170063734055, -1.1139070987701416, -3.0211031436920166, -0.30155137181282043, -2.5472259521484375, -0.04739826172590256, -0.002120985882356763, -0.03075963631272316, -0.019490277394652367, -2.3841855067985307e-07, -0.06485535949468613, -0.00019643761334009469, -0.0004478881892282516, -0.003537470242008567, -0.0035967440344393253, -0.006991327740252018, -3.4452781677246094, -0.10083025693893433, -0.20948158204555511, -0.00027807659353129566, -3.814689989667386e-06, -0.01140974648296833, -4.768370445162873e-07, -8.106198947643861e-06, 0.0, -8.4638240878121e-06, -0.4954255521297455, -0.03764805570244789, -0.019004756584763527, -0.01755591295659542, -0.009004225954413414, -0.6483932137489319, -0.14187176525592804, -0.31250542402267456, -0.2320587933063507, -2.6061980724334717, -0.008500583469867706, -0.6925238966941833, -0.00015925093612167984, -0.0012525817146524787, -0.0010109796421602368, -3.4570634852570947e-06, -0.02035093866288662, -0.0009324969723820686, -0.0008077934035100043, -0.03166817128658295, -0.0015359044773504138], "finish_reason": "length"}], "metrics": {"energy": 910.3512794590002, "energy_per_token": 3.5560596853867197, "time": 21.843714, "time_per_token": 0.0853270078125}}
{"outputs": [{"text": "# Preprocess texts\n    cleaned_texts = [ALPHANUMERIC.sub(' ', text.lower()) for text in texts]\n    preprocessed_texts = [nltk.word_tokenize(text) for text in cleaned_texts]\n    final_texts = [[word for word in tokens if word not in STOPWORDS] for tokens in preprocessed_texts]\n\n    # Vectorize preprocessed texts\n    vectorizer = TfidfVectorizer(stop_words=STOPWORDS, norm='l1')\n    vectors = vectorizer.fit_transform([' '.join(text) for text in final_texts])\n\n    # Perform NMF with specified number of topics\n    nmf = NMF(n_components=num_topics, random_state=42)\n    W = nmf.fit_transform(vectors)\n    H = nmf.components_\n\n    # Retrieve the top words for each topic\n    feature_names = vectorizer.get_feature_names()\n    top_words = []\n    for component in H:\n        top_word", "tokens": ["#", " Pre", "process", " texts", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n", "    ", "final", "_", "text", "s", " =", " [[", "word", " for", " word", " in", " tokens", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " tokens", " in", " pre", "processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ize", " pre", "processed", " texts", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ",", " norm", "='", "l", "1", "')", "\n", "    ", "vectors", " =", " vector", "izer", ".", "fit", "_", "transform", "(['", " '", ".", "join", "(", "text", ")", " for", " text", " in", " final", "_", "text", "s", "])", "\n", "\n", "    ", "#", " Perform", " N", "MF", " with", " specified", " number", " of", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "vectors", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_", "\n", "\n", "    ", "#", " Ret", "rieve", " the", " top", " words", " for", " each", " topic", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "top", "_", "words", " =", " []", "\n", "    ", "for", " component", " in", " H", ":", "\n", "        ", "top", "_", "word"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -1.2798786163330078, -0.925682008266449, -0.0014157997211441398, -2.2850186824798584, -0.05444911867380142, -0.062068115919828415, -0.028877776116132736, -0.0016074366867542267, -0.17373064160346985, -1.005592942237854, -6.6756979322235566e-06, -9.536738616588991e-07, -2.3841855067985307e-07, -2.50339189733495e-06, -4.768370445162873e-07, -0.00011252723925281316, -2.622600959512056e-06, -0.038891881704330444, -0.08012945204973221, -7.509902934543788e-05, -0.34616702795028687, -0.7012960910797119, -0.03240140154957771, -0.012002626433968544, -0.6669571399688721, -0.00015615197480656207, -4.327203714638017e-05, -0.0007743220776319504, -0.004194272682070732, -0.022013366222381592, -0.09721173346042633, -1.3120476007461548, -0.012831386178731918, -0.01801392249763012, -0.005007345695048571, -0.0014561536954715848, -0.00021836756786797196, -0.20811331272125244, -1.8133246898651123, -0.0002699726028367877, -0.0001431601122021675, -0.03654095530509949, -0.0009972843108698726, -5.6265202147187665e-05, 0.0, -0.001279607880860567, -0.08647964149713516, -0.009169136174023151, -0.00727172801271081, -0.00016115797916427255, -5.2569914259947836e-05, -0.00037126801908016205, -4.768370445162873e-07, -2.7418097943154862e-06, -7.986990567587782e-06, -0.000922969076782465, -0.008168740198016167, -0.09487900137901306, -3.2838454246520996, -0.009915384463965893, -0.12790291011333466, -0.013325088657438755, -0.0009528625523671508, -0.7758211493492126, -0.03472061827778816, -0.005995384883135557, -6.55629628454335e-05, -0.0001072826053132303, -2.056779623031616, -0.00677893403917551, -0.016919434070587158, -0.05530977621674538, -2.2649508537142538e-05, -0.0014331794809550047, 0.0, -4.768360213347478e-06, 0.0, -1.1920928244535389e-07, -0.019787531346082687, -0.05866576358675957, -0.0012132910778746009, -0.0002240883477497846, -0.000528076896443963, 0.0, -3.576278118089249e-07, -3.576278118089249e-07, -3.814689989667386e-06, -0.00023850933939684182, -0.0018153393175452948, -0.10713011026382446, -0.00015507926582358778, -0.01329556293785572, -0.2208169400691986, -0.03663496673107147, -1.787233591079712, -0.0013255628291517496, -0.0816795602440834, -0.41500672698020935, -0.00020656836568377912, -0.14611926674842834, -0.0020825620740652084, -0.0010983869433403015, -0.00036173476837575436, -1.1920928244535389e-07, -6.318072337307967e-06, 0.0, -1.311301275563892e-06, 0.0, -0.17268693447113037, -1.2751123905181885, -1.311301275563892e-06, -1.6689286894688848e-06, -0.05995413288474083, -0.1760767251253128, 0.0, -8.22540732769994e-06, 0.0, -8.344646857949556e-07, -1.375234603881836, -3.952425479888916, -0.35684117674827576, -0.0012511529494076967, -2.250307083129883, -0.10030967742204666, -0.0427580252289772, -0.0017968951724469662, -1.8440001010894775, -0.002003925619646907, -0.00032419670606032014, -2.3841830625315197e-06, -4.0531076592742465e-06, -0.001525192055851221, -2.0265558760002023e-06, -5.602820692729438e-06, -1.9540324211120605, -0.00021228920377325267, -5.3165931603871286e-05, -2.4199192921514623e-05, -0.0018012979999184608, -0.7792486548423767, -0.004769733641296625, -0.0007416835287585855, -6.0794889577664435e-05, -6.794906312279636e-06, -0.034302566200494766, -8.344646857949556e-07, -1.1920928244535389e-07, -4.172316494077677e-06, -0.001853535301052034, -0.04900841787457466, -0.023194432258605957, -6.878139538457617e-05, -0.004864524118602276, -1.3582680225372314, -0.09462950378656387, -9.297892393078655e-05, -3.0257010459899902, -1.0209360122680664, -0.009160395711660385, -6.508615479106084e-05, -0.029664089903235435, -0.015356634743511677, -0.0001691436773398891, -0.03690936043858528, -2.6464111215318553e-05, -0.06730223447084427, -0.0001426833332516253, 0.0, -9.214453893946484e-05, -0.0031442036852240562, -1.1920922133867862e-06, -0.00013064485392533243, -0.00017045476124621928, -0.0022518294863402843, -1.9073468138230965e-06, -7.152555099310121e-07, -5.960462772236497e-07, -0.9557284116744995, -0.885278046131134, -2.3841855067985307e-07, -0.00011669908417388797, -7.366862701019272e-05, -1.5823404788970947, -0.03828995302319527, -0.1767158955335617, -0.013570555485785007, -0.003704829141497612, -1.631186842918396, -0.006297624669969082, -0.00015054999676067382, 0.0, -2.264974000354414e-06, -0.0017597679980099201, -0.0034994573798030615, -1.9073468138230965e-06, -2.884823152271565e-05, -0.00033420699764974415, -0.013197803869843483, -0.08491725474596024, -0.045067161321640015, -0.035777170211076736, -0.0006699701189063489, -0.0004557524516712874, 0.0, -2.7418097943154862e-06, -0.00046206763363443315, -1.0251946150674485e-05, -0.007752805482596159, -0.01391624752432108, -5.185469490243122e-05, -0.03335791453719139, -2.833871841430664, -0.0013980624498799443, -1.9942703247070312, -1.8752427101135254, -0.3429325520992279, -0.4562237560749054, -0.0024868296459317207, -0.028169427067041397, -0.21785031259059906, -0.0001793938863556832, -1.9247195720672607, -0.0005134217790327966, -0.031238215044140816, -0.0008798541966825724, -0.1882556825876236, -1.1920928244535389e-07, -1.0728830375228426e-06, -3.731181277544238e-05, 0.0, -2.0265558760002023e-06, 0.0, -0.0001212284987559542, -1.0582045316696167, -0.0018033209489658475, -0.038584768772125244, -0.4875054657459259, -1.0197460651397705, -0.2594543993473053, -0.1608506292104721, -0.37253445386886597, -0.007142131216824055, -0.07037898153066635, -0.007254330907016993, -2.4580307006835938, -0.19917309284210205, -0.0266399085521698, -0.0006532918778248131, -0.001774761825799942, -0.0006411403883248568, -0.44208824634552, -0.008648204617202282, -1.2900444269180298], "finish_reason": "length"}], "metrics": {"energy": 911.2081412000658, "energy_per_token": 3.559406801562757, "time": 22.109196, "time_per_token": 0.086364046875}}
{"outputs": [{"text": "# Preprocess texts\n    processed_texts = [ALPHANUMERIC.sub(' ', text.lower()).split() for text in texts]\n    processed_texts = [[word for word in text if word not in STOPWORDS] for text in processed_texts]\n\n    # Vectorize texts\n    vectorizer = TfidfVectorizer()\n    text_vectors = vectorizer.fit_transform([' '.join(text) for text in processed_texts])\n\n    # Extract topics using NMF\n    nmf = NMF(n_components=num_topics, alpha=0.8, init='random', random_state=1)\n    W = nmf.fit_transform(text_vectors)\n    H = nmf.components_\n\n    # Extract most significant words for each topic\n    feature_names = vectorizer.get_feature_names_out()\n    topics = []\n    for topic in H:\n        indices = topic.argsort()[-20:]\n        top_words = [feature_names[index] for index in indices]\n        top", "tokens": ["#", " Pre", "process", " texts", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "split", "()", " for", " text", " in", " texts", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [[", "word", " for", " word", " in", " text", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " text", " in", " processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ize", " texts", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "text", "_", "vectors", " =", " vector", "izer", ".", "fit", "_", "transform", "(['", " '", ".", "join", "(", "text", ")", " for", " text", " in", " processed", "_", "text", "s", "])", "\n", "\n", "    ", "#", " Ext", "ract", " topics", " using", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " alpha", "=", "0", ".", "8", ",", " init", "='", "random", "'", ",", " random", "_", "state", "=", "1", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "text", "_", "vectors", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_", "\n", "\n", "    ", "#", " Ext", "ract", " most", " significant", " words", " for", " each", " topic", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "top", "ics", " =", " []", "\n", "    ", "for", " topic", " in", " H", ":", "\n", "        ", "indices", " =", " topic", ".", "args", "ort", "()", "[-", "2", "0", ":]", "\n", "        ", "top", "_", "words", " =", " [", "feature", "_", "names", "[", "index", "]", " for", " index", " in", " indices", "]", "\n", "        ", "top"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -1.2798786163330078, -0.925682008266449, -0.0014157997211441398, -1.0588414669036865, -0.02645614556968212, -0.017444277182221413, -0.003961098380386829, -0.0009552444680593908, -0.3882356286048889, -1.6695451736450195, -1.0609570381348021e-05, -1.4305104514278355e-06, -3.576278118089249e-07, -5.245195097813848e-06, -3.576278118089249e-07, -0.0003955773718189448, -3.576272320060525e-06, -0.03999237343668938, -0.07039909064769745, -5.3165931603871286e-05, -0.3663347363471985, -0.5350683927536011, -0.012256661430001259, -0.0155266048386693, -0.3174932599067688, -0.6139417290687561, -0.008686613291501999, -0.030857659876346588, -0.00034528967808000743, -0.0001951265730895102, -0.0006462631281465292, -0.0041077290661633015, -0.019142650067806244, -0.11849909275770187, -0.5961476564407349, -0.0002047805901383981, -0.0016980052459985018, -0.0003781795676331967, -0.0188931655138731, -0.337874174118042, -0.01921924762427807, -0.0018465149914845824, -2.5629668016335927e-05, -4.7444173105759546e-05, -0.16418220102787018, -0.00760446023195982, -0.0045025162398815155, -0.012826913967728615, -2.5033637939486653e-05, -0.0017933252966031432, 0.0, -5.602820692729438e-06, 0.0, -1.1920928244535389e-07, -0.020253514871001244, -0.0018176001030951738, -5.8053239627042785e-05, -4.851700214203447e-05, -0.00018142008048016578, -7.152555099310121e-07, -5.960462772236497e-07, -2.622600959512056e-06, -0.00033861625706776977, -0.000985494232736528, -0.443102091550827, -0.00013541258522309363, -0.006035672966390848, -0.1367456316947937, -0.012864338234066963, -0.6336740255355835, -0.6794794201850891, -0.00013004888023715466, -0.08562133461236954, -0.00087878224439919, -0.0006221981020644307, -0.0003861635341309011, -2.3841855067985307e-07, -8.702239938429557e-06, 0.0, -1.1920922133867862e-06, -2.3841855067985307e-07, -2.0303149223327637, -0.00712307495996356, -0.0004343043256085366, -3.297656774520874, -0.24115192890167236, -0.21550989151000977, -0.00020704510097857565, -0.0006937957368791103, -1.0371154530730564e-05, -3.814689989667386e-06, -0.00017414960893802345, -1.5497195136049413e-06, -1.311301275563892e-06, -0.8205983638763428, -0.00014554394874721766, -3.123234637314454e-05, -3.349725011503324e-05, -0.0010317008709535003, -0.023254064843058586, -0.0020586505997925997, -0.0008289953111670911, -0.000277123210253194, -4.768360213347478e-06, -0.00018475732940714806, -7.152555099310121e-07, -5.125986263010418e-06, -6.318072337307967e-06, -0.0008797351038083434, -0.03266968950629234, -0.013401429168879986, -4.434487345861271e-05, -0.0023405556567013264, -1.9506001472473145, -0.0009778724052011967, -0.011924060061573982, -0.9408658742904663, -0.026469379663467407, -3.886147169396281e-05, -0.011821100488305092, -0.00022933237778488547, -0.01827603206038475, -8.34461570775602e-06, -0.07954490929841995, -0.00017248096992261708, 0.0, -0.0006930810050107539, -0.0031527597457170486, -1.0728830375228426e-06, -0.00011777184408856556, -0.000300958170555532, -0.001830451306886971, -5.960462772236497e-07, -8.344646857949556e-07, 0.0, -1.7009131908416748, -3.153379440307617, -0.0010492063593119383, -1.7944108247756958, -0.026532649993896484, -2.497673511505127, -1.0363187789916992, -0.6990400552749634, -0.026563413441181183, -0.4551568031311035, -0.3496403694152832, -2.8371408916427754e-05, -0.1053762286901474, 0.0, -0.00012194366718176752, -9.929640509653836e-05, -1.8999851942062378, -0.2590578496456146, -0.007877828553318977, -0.0038384345825761557, -0.6339825987815857, -0.004215877968817949, -7.354942499659956e-05, 0.0, -2.3841830625315197e-06, -0.0017949911998584867, -0.0019884591456502676, -1.7881377516459906e-06, -2.634490556374658e-05, -0.0005323661607690156, -4.291525328881107e-06, -2.0265558760002023e-06, -0.022629013285040855, -0.07557187974452972, -0.02587375044822693, -0.01873546652495861, -0.0005310555570758879, -0.0005023409612476826, 0.0, -2.145764938177308e-06, -0.0002978596603497863, -1.4662635294371285e-05, -0.00846394058316946, -0.023979289457201958, -5.149708886165172e-05, -0.050000324845314026, -2.2950491905212402, -0.013042498379945755, -1.0999948978424072, -0.15798930823802948, -0.013118389062583447, -0.3073340356349945, -0.006175365298986435, -0.00345372105948627, -0.0246543250977993, -0.0001784403866622597, -2.097233772277832, -0.00012039413559250534, -0.022631343454122543, -0.0007108307327143848, -0.08919637650251389, -1.1920928244535389e-07, -9.536738616588991e-07, -5.185469490243122e-05, 0.0, -2.9802276912960224e-06, 0.0, -0.00015579440514557064, -0.5337747931480408, -0.00035768310772255063, -0.0003972456615883857, -0.007190302945673466, -0.023319635540246964, -0.7360179424285889, -0.18129687011241913, -0.010447218082845211, -0.7129596471786499, -0.001918738940730691, -0.038013067096471786, -0.008840469643473625, -0.07845757901668549, -0.3195335865020752, -0.14595599472522736, -0.0019020814215764403, -0.0010811204556375742, -0.000447530735982582, -1.2153905630111694, -0.02941281907260418, -0.06159958615899086, -1.2993727978027891e-05, -1.3232143828645349e-05, -1.0728830375228426e-06, -0.16192734241485596, -0.8558290600776672, -2.146965742111206, -0.05662883073091507, -1.0973728895187378, -0.17339922487735748, -0.0006332775810733438, -0.8520280718803406, -0.7374789714813232, -0.02882171981036663, -0.0037292949855327606, -0.0531739816069603, -0.0033849345054477453, -3.635817120084539e-05, -1.6689286894688848e-06, -7.92710343375802e-05, -1.6157373189926147, -0.00031871485407464206, -0.014703718945384026, -5.280832192511298e-05, -4.6132929128361866e-05, -0.0675196498632431, -0.09770311415195465, -0.005122157279402018, -0.0005909841856919229, -0.007102242670953274], "finish_reason": "length"}], "metrics": {"energy": 864.4257007141116, "energy_per_token": 3.3766628934144984, "time": 21.968328, "time_per_token": 0.08581378125}}
{"outputs": [{"text": "# Preprocess texts: Remove non-alphanumeric characters, convert to lowercase, and remove stopwords\n    processed_texts = [\n        ALPHANUMERIC.sub(' ', text).lower().split() for text in texts\n    ]\n    processed_texts = [[word for word in text if word not in STOPWORDS]\n                       for text in processed_texts]\n\n    # Vectorize processed texts using TF-IDF\n    vectorizer = TfidfVectorizer(max_df=0.85, min_df=0.15,\n                                 tokenizer=lambda x: x)\n    tfidf_matrix = vectorizer.fit_transform(processed_texts)\n\n    # Apply NMF to extract topics\n    nmf = NMF(n_components=num_topics)\n    W = nmf.fit_transform(tfidf_matrix)\n    H = nmf.components_\n\n    # Get the indices of the top weighted words for each topic\n    top_indices = H.argsort()[:, -5:]\n\n    # Get the", "tokens": ["#", " Pre", "process", " texts", ":", " Remove", " non", "-", "al", "phan", "umeric", " characters", ",", " convert", " to", " lower", "case", ",", " and", " remove", " stop", "words", "\n", "    ", "processed", "_", "text", "s", " =", " [", "\n", "        ", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", ".", "split", "()", " for", " text", " in", " texts", "\n", "    ", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [[", "word", " for", " word", " in", " text", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "                ", "       ", "for", " text", " in", " processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ize", " processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "max", "_", "df", "=", "0", ".", "8", "5", ",", " min", "_", "df", "=", "0", ".", "1", "5", ",", "\n", "                ", "                ", " token", "izer", "=", "lambda", " x", ":", " x", ")", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", " to", " extract", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_", "\n", "\n", "    ", "#", " Get", " the", " indices", " of", " the", " top", " weighted", " words", " for", " each", " topic", "\n", "    ", "top", "_", "indices", " =", " H", ".", "args", "ort", "()", "[:", ",", " -", "5", ":]", "\n", "\n", "    ", "#", " Get", " the"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -1.2798786163330078, -3.497222900390625, -1.401846170425415, -0.017412178218364716, -0.0008630603551864624, -0.005603558383882046, -2.6225699912174605e-05, -0.0004439560289029032, -0.04779314622282982, -0.8358088135719299, -0.13229723274707794, -0.004684900864958763, -0.00031895318534225225, -0.007090642582625151, -0.012230283580720425, -0.17228654026985168, -0.046661730855703354, -0.0017935632495209575, -0.010360152460634708, -0.06224701926112175, -0.003052815329283476, -0.8667855262756348, -0.01876179128885269, -0.0178711898624897, -0.0037733560893684626, -0.0003906917118001729, -0.17744898796081543, -1.8033702373504639, -0.0021734442561864853, -1.1610445976257324, -1.7046782886609435e-05, -4.768370445162873e-07, -2.3841855067985307e-07, -1.9073468138230965e-06, -3.576278118089249e-07, -0.0004899493651464581, -5.8412379075889476e-06, -0.03397998586297035, -0.13126340508460999, -7.30726242181845e-05, -0.20216214656829834, -1.216041088104248, -0.06285283714532852, -0.04350223019719124, -0.00012230125139467418, -0.318900465965271, -0.3339100182056427, -0.01609722524881363, -0.7788467407226562, -0.0011333954753354192, -0.0004159538948442787, -0.0016395710408687592, -0.06734257936477661, -0.015681173652410507, -5.1020273531321436e-05, -0.018190348520874977, -0.060882192105054855, -0.31236955523490906, -0.00019631843315437436, -0.0014192519010975957, -0.00040522945346310735, -0.010043677873909473, -1.477874994277954, -0.22018727660179138, -0.0045378804206848145, -6.258291978156194e-05, -0.00017033556650858372, -0.20491254329681396, -0.024041669443249702, -0.0032219188287854195, -0.003113306127488613, -0.0002294515579706058, -0.0018377096857875586, 0.0, -6.794906312279636e-06, 0.0, -1.1920928244535389e-07, -0.001690745702944696, -0.526395320892334, -5.1020273531321436e-05, -0.015608645044267178, -0.00011193125828867778, -3.242440288886428e-05, -1.0847986231965479e-05, -0.0001599660754436627, -3.576278118089249e-07, -1.7881377516459906e-06, -3.576278118089249e-07, -0.0010236029047518969, -0.001053731539286673, -0.24708996713161469, -0.0001567479339428246, -0.00606861338019371, -0.22294001281261444, -0.014322693459689617, -1.4352365732192993, -0.02233598381280899, -0.06187057867646217, -0.012763476930558681, -0.0022827538195997477, -5.245195097813848e-06, -2.753696753643453e-05, -0.05660044401884079, -0.00019905969384126365, -0.1634758561849594, -0.0004985281848348677, -0.0005969410995021462, -0.00016592556494288146, -1.1920928244535389e-07, -0.00016234986833296716, 0.0, -9.536738616588991e-07, 0.0, -0.1523224115371704, -2.203444480895996, -2.0265558760002023e-06, -0.34766072034835815, -4.136476854910143e-05, -0.020498689264059067, -4.1960789531003684e-05, -0.8917156457901001, -0.8734127879142761, -0.13946126401424408, -0.12012220174074173, -1.1920928244535389e-07, -1.311301275563892e-06, -2.8132995794294402e-05, -0.0805639773607254, -0.0001896439935080707, -0.3645395040512085, -0.1041441410779953, -1.1007786989212036, -1.223298192024231, -0.0011406589765101671, -0.0016420703614130616, -0.9117631316184998, -0.43794652819633484, -0.000303818320389837, -0.03341636806726456, -0.017390388995409012, -7.497983460780233e-05, -0.002040686784312129, -0.6252681612968445, -0.5877297520637512, -0.022159472107887268, -0.3891339898109436, -0.10377315431833267, -0.00015162272029556334, -1.013255000114441, -0.053345102816820145, -0.0002033503697020933, -8.201262971851975e-05, -1.4305104514278355e-06, -1.883488948806189e-05, -4.2914423829643056e-05, -8.821448318485636e-06, -1.5497195136049413e-06, -0.16025914251804352, -1.011715054512024, -3.242440288886428e-05, -9.417489309271332e-06, -6.878139538457617e-05, -0.00011562632425921038, -0.029376009479165077, -0.03674551472067833, -5.4238757002167404e-05, -0.0018743580440059304, -0.1757424920797348, -0.009623091667890549, -2.1934269170742482e-05, -0.2603845000267029, -0.06732909381389618, -0.20514453947544098, -0.09728376567363739, -0.00020740265608765185, -0.025113744661211967, -9.536697689327411e-06, -0.10893747955560684, -0.00010406429646536708, -3.576278118089249e-07, -0.000188332938705571, -0.0052846260368824005, -1.1920922133867862e-06, -0.0001294529065489769, -3.5523738915799186e-05, -0.001848180778324604, -5.960462772236497e-07, -7.152555099310121e-07, -2.3841855067985307e-07, -0.5966922044754028, -0.00812593661248684, -0.0027607681695371866, -0.7659730911254883, -0.006332688499242067, -0.00024911639047786593, 0.0, -1.1920922133867862e-06, -0.0012527006911113858, -0.0006460248259827495, -3.2186455882765586e-06, -1.2278481335670222e-05, -5.6503606174374e-05, -2.3841855067985307e-07, 0.0, -7.152555099310121e-07, 0.0, -0.025162337347865105, -0.09130608290433884, -0.011064130812883377, -0.010213609784841537, -0.0005301024066284299, -0.0002217047003796324, 0.0, -2.622600959512056e-06, -0.00037579628406092525, -9.894321920000948e-06, -0.009783532470464706, -0.0053050220012664795, -4.4225667807040736e-05, -0.023304030299186707, -0.4992355704307556, -0.5922355055809021, -1.1440011262893677, -0.07263059914112091, -0.04046037048101425, -0.4724072813987732, -2.212635040283203, -0.46012064814567566, -0.2720574140548706, -0.0003499372396618128, -0.013536333106458187, -0.03135340288281441, -6.365573790390044e-05, -0.7779809832572937, -0.004470236133784056, -0.5158636569976807, -0.007004467770457268, -0.6753211617469788, -0.00019178935326635838, -0.019521141424775124, -5.125986263010418e-06, -0.0601593442261219, -0.0007894498412497342, -0.001604818389751017, -0.21373222768306732, -1.0007296800613403, -0.25014910101890564, -0.0518142506480217, -0.0999724268913269, -4.994744449504651e-05, -0.00584618654102087, -0.4274044930934906, -0.02067958004772663], "finish_reason": "length"}], "metrics": {"energy": 871.6249838809971, "energy_per_token": 3.404785093285145, "time": 21.54625, "time_per_token": 0.0841650390625}}
{"outputs": [{"text": "# Preprocess the text by removing non-alphanumeric characters (except spaces),\n    # converting to lowercase, and removing stopwords.\n    processed_texts = [ALPHANUMERIC.sub('', text.lower()).split() for text in texts]\n    processed_texts = [[word for word in text if word not in STOPWORDS] for text in processed_texts]\n\n    # Vectorize the processed texts using TF-IDF\n    vectorizer = TfidfVectorizer(strip_accents='unicode', stop_words=STOPWORDS, min_df=1, max_df=0.9)\n    tfidf_matrix = vectorizer.fit_transform([' '.join(text) for text in processed_texts])\n\n    # Apply NMF to extract the topics\n    nmf_model = NMF(n_components=num_topics)\n    W = nmf_model.fit_transform(tfidf_matrix)\n    H = nmf_model.components_\n\n    # Extract the most significant words for each topic\n    ", "tokens": ["#", " Pre", "process", " the", " text", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", ",", "\n", "    ", "#", " converting", " to", " lower", "case", ",", " and", " removing", " stop", "words", ".", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", ".", "lower", "())", ".", "split", "()", " for", " text", " in", " texts", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [[", "word", " for", " word", " in", " text", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " text", " in", " processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ize", " the", " processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "strip", "_", "acc", "ents", "='", "un", "icode", "'", ",", " stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ",", " min", "_", "df", "=", "1", ",", " max", "_", "df", "=", "0", ".", "9", ")", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(['", " '", ".", "join", "(", "text", ")", " for", " text", " in", " processed", "_", "text", "s", "])", "\n", "\n", "    ", "#", " Apply", " N", "MF", " to", " extract", " the", " topics", "\n", "    ", "nm", "f", "_", "model", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "W", " =", " nm", "f", "_", "model", ".", "fit", "_", "transform", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "    ", "H", " =", " nm", "f", "_", "model", ".", "components", "_", "\n", "\n", "    ", "#", " Ext", "ract", " the", " most", " significant", " words", " for", " each", " topic", "\n", "    "], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -0.6294155716896057, -1.5738050937652588, -0.7427017688751221, -0.07132450491189957, -0.0493924543261528, -0.0024730355944484472, -0.010427516885101795, -5.364274329622276e-05, -0.0007900454220362008, -0.029551366344094276, -0.798252284526825, -1.7352776527404785, -0.4174681305885315, -0.002745907986536622, -0.39365100860595703, -1.4728856086730957, -0.0001652104256208986, -0.0009858515113592148, -0.2353244423866272, -0.24916011095046997, -0.0005103239673189819, -0.02982724830508232, -0.030783450230956078, -0.003639147849753499, -0.06182250380516052, -0.005845475476235151, -0.029137054458260536, -1.198630928993225, -0.011908156797289848, -0.013117683120071888, -1.0942858457565308, -0.08263949304819107, -0.037905070930719376, -0.19446532428264618, -0.00044264530879445374, -0.29259204864501953, -0.7258980870246887, -9.65590606938349e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -7.152555099310121e-07, -2.3841855067985307e-07, -0.0003580405900720507, -3.933898824470816e-06, -0.03452405333518982, -2.55724835395813, -4.4225667807040736e-05, -0.24506881833076477, -0.16727209091186523, -0.007680646609514952, -0.01809294894337654, -0.5810595750808716, -0.1587073653936386, -0.008859256282448769, -0.059663303196430206, -0.000615407363511622, -0.0003591130953282118, -0.0009560781763866544, -0.007369358092546463, -0.008663567714393139, -0.08123749494552612, -0.4223570227622986, -0.00018618757894728333, -0.003801383078098297, -0.0007285801111720502, -0.01721932925283909, -0.29309266805648804, -0.012155384756624699, -0.0012138864258304238, -2.729855441430118e-05, -5.566918844124302e-05, -0.16468816995620728, -0.010854015126824379, -0.0020828000269830227, -0.00928819552063942, -2.3603161025675945e-05, -0.0015964870108291507, 0.0, -5.245195097813848e-06, 0.0, 0.0, -0.003257922362536192, -0.004774242173880339, -9.858122211880982e-05, -8.368142152903602e-05, -0.0003719830128829926, -2.9802276912960224e-06, -4.887569048150908e-06, -3.3378546504536644e-06, -0.00025233422638848424, -0.0002696150622796267, -0.1824798285961151, -0.0001720042055239901, -0.010113895870745182, -0.41728806495666504, -0.014159923419356346, -0.05116285756230354, -0.46919530630111694, -0.27207639813423157, -0.09524235874414444, -0.03288577124476433, -0.00422976678237319, -1.4305012882687151e-05, -4.386805812828243e-05, -0.6589733362197876, -0.0001292145170737058, -0.19128911197185516, -0.000846027978695929, -0.000644237850792706, -0.00026055757189169526, 0.0, -7.962863310240209e-05, 0.0, -8.344646857949556e-07, 0.0, -0.13836370408535004, -3.443204402923584, -0.047725751996040344, -0.00015341058315243572, -4.386805812828243e-05, -0.05081915855407715, -0.15465661883354187, -6.6756979322235566e-06, -0.17194561660289764, -1.549708758830093e-05, -0.7963009476661682, -1.0728830375228426e-06, -1.5735502529423684e-05, -0.09621989727020264, -0.2529718577861786, -1.1920928244535389e-07, -1.0013530300057027e-05, 0.0, -3.576278118089249e-07, -0.44332602620124817, -2.3897385597229004, 0.0, -2.9802276912960224e-06, -0.00015114595589693636, -0.25357380509376526, -1.6789755821228027, -0.6227599382400513, -5.960462772236497e-07, -0.02961154840886593, -0.00013040646445006132, -0.5623575448989868, -0.0001573438785271719, -0.8761452436447144, -1.123995065689087, -0.003443147987127304, -0.00735350139439106, -0.17743700742721558, -0.03205615654587746, -0.00018976318824570626, -0.5516087412834167, -0.07492538541555405, -0.0002946419408544898, -0.00011419598013162613, -1.7523612768854946e-05, -1.6331539882230572e-05, -7.390703103737906e-05, -4.6491513785440475e-06, -1.311301275563892e-06, -0.13082703948020935, -0.00014208737411536276, -5.817244164063595e-05, -2.7894584491150454e-05, -0.0017134760273620486, -0.0300153698772192, -0.0026310610119253397, -0.0003979606262873858, -0.00014959646796341985, -2.9802276912960224e-06, -0.00015138434537220746, -1.311301275563892e-06, -1.1920928244535389e-07, -0.0001012035645544529, -0.0016501632053405046, -0.014509993605315685, -0.02030292898416519, -6.580135959666222e-05, -0.00455864705145359, -0.3522419035434723, -0.019826099276542664, -3.683499380713329e-05, -0.17139017581939697, -0.20377323031425476, -0.8579659461975098, -1.0106819868087769, -0.07426431030035019, -0.00018785618885885924, -0.03992147371172905, -7.986990567587782e-06, -2.4084582328796387, -0.015935447067022324, -8.976056415122002e-05, -0.00024196557933464646, -1.1920928244535389e-07, -8.272782724816352e-05, -0.0016815820708870888, -2.0265558760002023e-06, -0.00035553809721022844, -0.00015352977789007127, -0.0022597985807806253, -7.152555099310121e-07, -2.3841830625315197e-06, -1.1920928244535389e-07, -0.8499760627746582, -0.006777749862521887, -0.0023671959061175585, -0.7090708017349243, -0.012471897527575493, -0.0005160430446267128, 0.0, -1.9073468138230965e-06, 0.0, -2.3841855067985307e-07, -2.9682672902708873e-05, -0.0007819455349817872, -9.536738616588991e-07, -1.4305012882687151e-05, -6.925819616299123e-05, -2.3841855067985307e-07, 0.0, -5.960462772236497e-07, 0.0, -0.01738581992685795, -0.08220158517360687, -0.01684793457388878, -0.006995707750320435, -0.0006485265912488103, -0.0006812873762100935, 0.0, -1.6689286894688848e-06, -5.960462772236497e-07, -4.768370445162873e-07, -0.00016973962192423642, -8.22540732769994e-06, -0.008495500311255455, -0.006956405472010374, -6.186770770000294e-05, -0.050352584570646286, -1.9804404973983765, -0.010448751971125603, -0.06627111881971359, -0.5600672364234924, -0.10130015760660172, -0.008208585903048515, -0.3350427448749542, -0.000780754373408854, -0.0016675388906151056, -0.2788684368133545, -0.0001691436773398891], "finish_reason": "length"}], "metrics": {"energy": 923.5976230573652, "energy_per_token": 3.607803215067833, "time": 22.378277, "time_per_token": 0.08741514453125}}
{"outputs": [{"text": "# Preprocess the texts\n    clean_texts = [clean_text(text) for text in texts]\n\n    # Vectorize the preprocessed texts\n    vectorizer = TfidfVectorizer(\n        strip_accents='unicode',\n        lowercase=True,\n        stop_words=STOPWORDS,\n        token_pattern=r\"\\w+\",\n    )\n    vectorized_texts = vectorizer.fit_transform(clean_texts)\n\n    # Apply NMF to extract topics\n    nmf = NMF(n_components=num_topics)\n    nmf.fit(vectorized_texts)\n    topics = extract_topics(vectorizer.get_feature_names_out(), nmf.components_)\n    return topics", "tokens": ["#", " Pre", "process", " the", " texts", "\n", "    ", "clean", "_", "text", "s", " =", " [", "clean", "_", "text", "(", "text", ")", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Vector", "ize", " the", " pre", "processed", " texts", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "\n", "        ", "strip", "_", "acc", "ents", "='", "un", "icode", "'", ",", "\n", "        ", "low", "erc", "ase", "=", "True", ",", "\n", "        ", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ",", "\n", "        ", "token", "_", "pattern", "=", "r", "\"", "\\", "w", "+", "\"", ",", "\n", "    ", ")", "\n", "    ", "vector", "ized", "_", "text", "s", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "clean", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", " to", " extract", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "vector", "ized", "_", "text", "s", ")", "\n", "    ", "top", "ics", " =", " extract", "_", "top", "ics", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", ",", " nm", "f", ".", "components", "_)", "\n", "    ", "return", " topics", "\n", "\n", "def"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -0.6294155716896057, -1.0897352695465088, -0.701104462146759, -0.0012860370334237814, -3.1523969173431396, -0.010377966798841953, -0.0823984444141388, -0.01731892116367817, -0.0017258524894714355, -0.3032524287700653, -2.479332447052002, -0.12575820088386536, -0.03445863723754883, -0.015648899599909782, -0.14785952866077423, -0.05692223086953163, -0.0251068864017725, -5.61460001335945e-05, -1.3351351299206726e-05, -0.0003573255962692201, -0.0105305016040802, -0.000750617531593889, -0.061891309916973114, -0.00015233787416946143, -0.0032733690459281206, -0.11428190767765045, -0.009781880304217339, -0.028068706393241882, -2.1128122806549072, -0.0029110219329595566, -0.01004190742969513, -0.8422995805740356, -0.00015805903240107, -0.3226528465747833, -0.002413933165371418, -0.001334610627964139, -0.0030201321933418512, -4.768370445162873e-07, -1.883488948806189e-05, 0.0, -2.50339189733495e-06, -1.0728830375228426e-06, -0.018235063180327415, -2.7298107147216797, -0.010365107096731663, -3.3530101776123047, -0.004375289659947157, -0.0001938155182870105, -8.487341256113723e-05, -0.15380245447158813, -0.02775651216506958, -1.3708974620385561e-05, -0.00019870213873218745, -0.0002915434306487441, -0.13208499550819397, -0.0016644446877762675, -0.05146420747041702, -0.0019894109573215246, -3.814689989667386e-06, -0.0009727513534016907, -0.01011330634355545, -0.00388177833519876, -0.007061879150569439, -0.008431315422058105, -0.11796707659959793, -9.894321920000948e-06, -7.271740287251305e-06, -0.022011732682585716, -0.0331219844520092, 0.0, -2.253030106658116e-05, 0.0, -1.1920928244535389e-07, -0.2710171341896057, -0.015501369722187519, -0.16769404709339142, -1.2041170597076416, -0.006879808846861124, -0.001004667836241424, -0.5603102445602417, -0.03357706964015961, -1.3795115947723389, -0.619782567024231, -1.6478731632232666, -1.4149737358093262, -0.10354606807231903, -0.3702464997768402, -0.17811919748783112, -0.8459540605545044, -2.3603161025675945e-05, -0.004603621084243059, -0.06545479595661163, -3.2701292037963867, -0.26614710688591003, -0.027050036936998367, -0.018614016473293304, -0.0034680955577641726, -0.00031287543242797256, -0.0003143055073451251, -1.2755313036905136e-05, -4.410734163684538e-06, -0.0006328010931611061, -1.311301275563892e-06, -1.311301275563892e-06, -0.00034957972820848227, -0.002273833379149437, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.4305012882687151e-05, -0.00017152745567727834, -0.030515694990754128, -0.03500773757696152, -5.781483559985645e-05, -0.0028693003114312887, -0.6170732378959656, -0.0334833487868309, -5.769562994828448e-05, -0.3625325858592987, -0.21482495963573456, -0.5013844966888428, -0.09439631551504135, -0.00026854246971197426, -0.04626082256436348, -1.0847986231965479e-05, -0.0726146399974823, -0.00022206225548870862, -2.3841855067985307e-07, -0.0003962923656217754, -0.041082847863435745, -1.0728830375228426e-06, -0.00014220656885299832, -5.245071224635467e-05, -0.002273357706144452, -4.768370445162873e-07, -9.536738616588991e-07, -1.1920928244535389e-07, -0.5202897787094116, -0.006196809466928244, -0.002726529957726598, -0.36523446440696716, -4.029192859889008e-05, -0.05914948880672455, -1.2397689715726301e-05, -0.00330746965482831, -0.001207814086228609, -8.583032467868179e-06, -3.576278118089249e-07, 0.0, -3.576278118089249e-07, -0.05938766896724701, -0.005164140835404396, -1.4538484811782837, -1.818130373954773, -0.014086814597249031, -0.011366610415279865, -1.9381201267242432, -3.71926071238704e-05, -0.19175656139850616, -0.481580525636673, -0.08171669393777847, -1.1874439716339111, -0.00013886917440686375, -0.4872003197669983, -0.002684206236153841, 0.0, -3.4570634852570947e-06, 0.0, -3.635817120084539e-05, -0.13305515050888062, -7.748573807475623e-06, -0.0018365198047831655, -0.0066199046559631824, -0.03534023091197014, 0.0, -0.12311720103025436, -0.004630201030522585, -0.12630878388881683, -0.0009268993744626641, -2.0724716186523438, -0.055873140692710876, -0.01708175614476204, -0.004501922521740198, -0.001809746609069407, -0.03682674840092659], "finish_reason": "stop"}], "metrics": {"energy": 632.2146918497086, "energy_per_token": 3.380827229142827, "time": 16.016512, "time_per_token": 0.08564979679144384}}
{"outputs": [{"text": "preprocessed_texts = [remove_non_alphanumeric(text) for text in texts]\n    cleaned_texts = [text.lower() for text in preprocessed_texts]\n    cleaned_texts = [remove_stopwords(text, STOPWORDS) for text in cleaned_texts]\n\n    vectorizer = TfidfVectorizer()\n    tfidf_matrix = vectorizer.fit_transform(cleaned_texts)\n\n    nmf = NMF(n_components=num_topics)\n    nmf.fit(tfidf_matrix)\n\n    feature_names = vectorizer.get_feature_names_out()\n\n    topics = [sorted(feature_names[i] for i in get_most_significant_words(nmf.components_[topic]))\n              for topic in range(num_topics)]\n\n    return topics", "tokens": ["pre", "processed", "_", "text", "s", " =", " [", "remove", "_", "non", "_", "al", "phan", "umeric", "(", "text", ")", " for", " text", " in", " texts", "]", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "text", ".", "lower", "()", " for", " text", " in", " pre", "processed", "_", "text", "s", "]", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "remove", "_", "stop", "words", "(", "text", ",", " ST", "OP", "W", "OR", "DS", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "cleaned", "_", "text", "s", ")", "\n", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "top", "ics", " =", " [", "s", "orted", "(", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " get", "_", "most", "_", "sign", "ificant", "_", "words", "(", "nm", "f", ".", "components", "_[", "topic", "]))", "\n", "              ", "for", " topic", " in", " range", "(", "num", "_", "top", "ics", ")]", "\n", "\n", "    ", "return", " topics", "\n", "\n", "def"], "logprobs": [-2.47971773147583, -0.03477323427796364, -0.08855492621660233, -0.042539384216070175, -0.018716514110565186, -0.0013873485149815679, -0.48785704374313354, -2.4565670490264893, -0.003126378171145916, -0.05719314143061638, -0.1572149097919464, -0.04071769490838051, -0.0017141900025308132, -0.048541110008955, -0.17011798918247223, -0.3697163462638855, -0.556232750415802, -0.34262463450431824, -9.870042413240299e-05, -8.40390202938579e-05, -0.006187923718243837, -0.00212395959533751, -0.0648590475320816, -0.13050349056720734, -3.378202438354492, -0.005387905053794384, -0.02330775558948517, -0.004391075111925602, -0.0014990055933594704, -0.5537604689598083, -1.9809337854385376, -0.007344507612287998, -0.012607280164957047, -6.317892984952778e-05, -0.34675368666648865, -0.0002269487304147333, -1.3828182090946939e-05, -0.0020624573808163404, -1.2040065485052764e-05, -1.1920922133867862e-06, -3.6954811548639555e-06, -8.940656698541716e-06, -0.02748063951730728, -0.004550459329038858, -0.07025375217199326, -1.4134632349014282, -0.0028852284885942936, -0.3102179765701294, -0.004108085297048092, -0.12744377553462982, -0.4280703365802765, -0.09092529863119125, -6.317892984952778e-05, -0.012191775254905224, -0.021561384201049805, -0.00612536771222949, -0.04534973204135895, -2.4008607864379883, -0.09190956503152847, -1.1920928244535389e-07, -8.95221673999913e-05, 0.0, -3.576278118089249e-07, -0.0008303055074065924, -0.0015436412068083882, -4.5536911784438416e-05, -3.981510963058099e-05, -0.004498718306422234, -4.768370445162873e-07, -7.152555099310121e-07, -4.410734163684538e-06, -0.000505677133332938, -0.007455028593540192, -0.5281212329864502, -0.0001646144810365513, -0.30396077036857605, -0.005230314563959837, -0.0010468247346580029, -0.0028089135885238647, -3.576278118089249e-07, -4.5536911784438416e-05, 0.0, -3.576272320060525e-06, -3.576278118089249e-07, -0.738987147808075, -0.0077247703447937965, -0.00801596324890852, -0.4907143712043762, -0.14499889314174652, -0.00025567124248482287, -0.4315725862979889, -0.036695871502161026, -0.00018106251081917435, -0.00025293012731708586, -5.972207145532593e-05, -4.994744449504651e-05, -8.701899787411094e-05, -2.3841830625315197e-06, -1.311301275563892e-06, -0.0025106121320277452, -0.0004687402688432485, -5.960462772236497e-07, -2.3841855067985307e-07, -1.0728830375228426e-06, -0.00013755806139670312, -0.021176427602767944, -0.2123573273420334, -8.177422569133341e-05, -0.04052058979868889, -1.168244216387393e-05, -0.10245860368013382, -0.0005404680268839002, -3.576278118089249e-07, -0.0006403064471669495, -0.001745249843224883, -8.344646857949556e-07, -0.00010859376925509423, -0.0008797351038083434, -0.0019022003980353475, -8.344646857949556e-07, -3.576278118089249e-07, -1.1920928244535389e-07, -0.3244934678077698, -0.003632734064012766, -0.00423451466485858, -0.3711852431297302, -7.271740287251305e-06, -0.05406137555837631, -4.529942543740617e-06, -0.0032857260666787624, -5.781483559985645e-05, -1.311301275563892e-06, 0.0, -4.768370445162873e-07, -2.3841855067985307e-07, -0.02182011678814888, -0.005013513378798962, -0.07969077676534653, -8.523101132595912e-05, -0.8716363310813904, -0.00045062878052704036, -0.01743970811367035, -0.0006853376980870962, -0.05728252977132797, 0.0, -9.536738616588991e-07, -3.218599158572033e-05, 0.0, -1.1920922133867862e-06, 0.0, -0.002155244816094637, -0.4592306315898895, -0.0002971446083392948, -0.0007525234250351787, -0.0040862406603991985, -0.7546250224113464, -6.603976362384856e-05, -0.5398261547088623, -0.0086597865447402, -0.010328533127903938, -1.8322714567184448, -1.3872053623199463, -3.4927710657939315e-05, -0.022782137617468834, -1.0432322025299072, -0.0003250309091527015, -0.0027272433508187532, -0.010427044704556465, -0.1234985738992691, -0.0001333863037871197, -0.039305150508880615, -0.000920706195756793, -0.023685375228524208, -2.7376110553741455, -0.0006156456656754017, -3.777249574661255, -7.70062324590981e-05, -0.7336176037788391, -0.00045789722935296595, -0.02989875338971615, -1.8293232917785645, -0.15926115214824677, -0.6426575779914856, -1.07287787614041e-05, -0.18357984721660614, -0.01085943914949894, -0.21597066521644592, -0.34254762530326843, -1.3606793880462646, -0.47642379999160767, -0.023441562429070473, -0.00010215714428341016, -1.585470999998506e-05, -0.000897957943379879, -0.0165298730134964, -1.0967194612021558e-05, -0.0380004458129406, -3.576278118089249e-07, -0.0003768687602132559, -4.768370445162873e-07, -0.000832568621262908, -0.00027938754647038877, -0.23235544562339783, -0.00027176024741493165, -0.010856019333004951, -0.003269447945058346, -0.0018353299237787724, -0.001865553087554872, -0.04978780075907707], "finish_reason": "stop"}], "metrics": {"energy": 724.4582894620893, "energy_per_token": 3.466307605081767, "time": 17.85458, "time_per_token": 0.08542861244019138}}
{"outputs": [{"text": "processed_texts = [re.sub(ALPHANUMERIC, ' ', text) for text in texts]\n    processed_texts = [text.lower() for text in processed_texts]\n    processed_texts = [\" \".join(\n        [word for word in text.split() if word not in STOPWORDS]) for text in processed_texts]\n\n    vectorizer = TfidfVectorizer()\n    tfidf_matrix = vectorizer.fit_transform(processed_texts)\n    nmf = NMF(n_components=num_topics)\n    W = nmf.fit_transform(tfidf_matrix)\n    H = nmf.components_\n\n    topic_words = []\n    for topic in range(num_topics):\n        topic_word_indices = np.argsort(H[topic])[::-1]\n        topic_words.append(\n            [vectorizer.get_feature_names()[idx] for idx in topic_word_indices[:10]])\n\n    return topic_words", "tokens": ["processed", "_", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ")", " for", " text", " in", " texts", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [", "text", ".", "lower", "()", " for", " text", " in", " processed", "_", "text", "s", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [", "\"", " \"", ".", "join", "(", "\n", "        ", "[", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", " for", " text", " in", " processed", "_", "text", "s", "]", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_", "\n", "\n", "    ", "topic", "_", "words", " =", " []", "\n", "    ", "for", " topic", " in", " range", "(", "num", "_", "top", "ics", "):", "\n", "        ", "topic", "_", "word", "_", "indices", " =", " np", ".", "args", "ort", "(", "H", "[", "topic", "])", "[", "::", "-", "1", "]", "\n", "        ", "topic", "_", "words", ".", "append", "(", "\n", "            ", "[", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()[", "idx", "]", " for", " idx", " in", " topic", "_", "word", "_", "indices", "[:", "1", "0", "]]", ")", "\n", "\n", "    ", "return", " topic", "_", "words", "\n", "\n", "if"], "logprobs": [-2.331089496612549, -0.039008140563964844, -0.041283734142780304, -0.018844619393348694, -0.001069331425242126, -0.5214665532112122, -2.7872586250305176, -0.008740146644413471, -0.003133508376777172, -0.03712877258658409, -0.05781710520386696, -2.861018856492592e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -2.0265558760002023e-06, -7.152555099310121e-07, -0.0035657414700835943, -0.3342256546020508, -7.83174327807501e-05, -0.00011085849109804258, -0.2127058506011963, -0.6139968633651733, -2.7422802448272705, -0.00016473367577418685, -7.4741430580616e-05, -0.0066788773983716965, -0.0015674459282308817, -0.10111280530691147, -0.08824469149112701, -0.14873602986335754, -0.00023112009512260556, -0.004197359550744295, -0.00028224775451235473, -0.009041321463882923, -0.06731828302145004, -0.09027831256389618, -0.0025938458275049925, -0.01217257883399725, -0.00011014331539627165, -0.11535882949829102, -4.1126360883936286e-05, -2.4199192921514623e-05, -0.001122916815802455, -2.7418097943154862e-06, -0.00028272447525523603, -1.2516897186287679e-05, -0.00814745668321848, -0.004794885404407978, -0.05116908997297287, -0.06088331341743469, -4.815939246327616e-05, -0.004060596227645874, -0.00018737945356406271, -0.0038476972840726376, -0.44838693737983704, -1.6123981475830078, -0.001117201172746718, -0.00026794656878337264, -0.000403084559366107, -0.9003694653511047, -1.39150869846344, -0.011923234909772873, -0.0746162012219429, -0.04553449898958206, -0.0051583293825387955, -9.274052717955783e-05, -3.58813522325363e-05, -0.045670490711927414, -0.0039434065110981464, -0.00034588552080094814, -0.07517034560441971, -0.007171247620135546, -0.012874341569840908, -0.02485993318259716, -1.3351351299206726e-05, -0.006476602982729673, 0.0, -7.152531907195225e-06, 0.0, 0.0, -0.14812180399894714, -0.1221974790096283, -0.0016925308154895902, -0.00018273114983458072, -0.0024689924903213978, -9.536738616588991e-07, -9.536738616588991e-07, -2.3841855067985307e-07, -0.028643105179071426, -0.0011806668480858207, -0.2910432517528534, -0.00010859376925509423, -0.3393803536891937, -0.002655196702107787, -0.0008051729528233409, -0.0002874914789572358, -1.1920928244535389e-07, -5.125986263010418e-06, 0.0, -9.536738616588991e-07, -1.1920928244535389e-07, -0.7556141018867493, -0.006580350920557976, -0.005784912966191769, -0.461206316947937, -0.12354640662670135, -0.00037091050762683153, -0.5850827693939209, -0.044788382947444916, -0.0002015625941567123, -0.00012861855793744326, -1.1920928244535389e-07, -2.062299427052494e-05, -6.12716976320371e-05, -2.9802276912960224e-06, -8.344646857949556e-07, -0.0007568117580376565, -0.009303195402026176, -5.960462772236497e-07, -5.8412379075889476e-06, -8.34461570775602e-06, -0.00010990492592100054, -0.022346358746290207, -1.199510931968689, -0.08205729722976685, -1.3947389561508317e-05, -0.062154825776815414, -0.00014006110723130405, 0.0, -0.0006252956227399409, -0.008455902338027954, -1.5497195136049413e-06, -0.0002119316632160917, -0.0004769618099089712, -0.0035505369305610657, -8.344646857949556e-07, -1.1920922133867862e-06, 0.0, -0.3068597912788391, -0.0038764348719269037, -0.036385901272296906, -0.7612367272377014, -0.008104179054498672, -0.0002694958820939064, 0.0, -2.145764938177308e-06, -0.00031418632715940475, -0.0004144048143643886, -2.145764938177308e-06, -1.8000440832111053e-05, -0.0001892864383989945, -1.4305104514278355e-06, 0.0, -7.152555099310121e-07, -7.152555099310121e-07, -0.16818656027317047, -0.06107285991311073, -0.024925164878368378, -0.024085309356451035, -0.0007382289622910321, -0.0005189026123844087, 0.0, -1.9073468138230965e-06, -0.00026842328952625394, -1.2993727978027891e-05, -0.004922888707369566, -0.1403210163116455, -0.0001565095444675535, -3.0520620346069336, -0.00563378632068634, -0.31556427478790283, -0.014238902367651463, -0.06139298900961876, -0.001415918697603047, -0.047616295516490936, -0.2186710387468338, -0.3970501124858856, -0.08862213790416718, -1.9726676940917969, -3.3378546504536644e-06, -0.0250313188880682, -1.1920928244535389e-07, -3.135155202471651e-05, -1.1920928244535389e-07, -1.0847986231965479e-05, -0.0003406421164982021, -0.0008418591460213065, -2.8381214141845703, -0.001636119675822556, -1.037149429321289, -0.04858744144439697, -0.2608656585216522, -0.000814582861494273, -0.8814759254455566, -9.536738616588991e-07, -0.004243180155754089, -1.1920928244535389e-07, -0.10335666686296463, -0.04430176690220833, -0.0069788983091712, -0.00011824862303910777, -0.1293158233165741, -0.13164041936397552, -0.003409408265724778, -0.0004928089329041541, -0.00045348849380388856, -0.1494765728712082, -0.008387341164052486, -0.002417976502329111, -0.028739597648382187, -0.0011551857460290194, -0.2373019903898239, -0.03925013542175293, -0.0006658005877397954, -1.4283502101898193, -0.9047998189926147, -0.00043406602344475687, -0.042905356734991074, -0.0017774987500160933, -3.576278118089249e-07, -7.152555099310121e-07, -0.0008407871937379241, -3.576278118089249e-07, -4.529942543740617e-06, 0.0, -3.790783375734463e-05, -0.42062729597091675, -2.3386549949645996, -0.00021109737281221896, -0.015775170177221298, -7.211902266135439e-05, -7.510157047363464e-06, -0.0001629458274692297, -3.576278118089249e-07, -3.6954811548639555e-06, 0.0, -1.5497195136049413e-06, -0.28527602553367615, -1.4156253337860107, -0.025823798030614853, -0.025955641642212868, -0.02743726223707199, -0.00953642651438713, -0.11300209164619446, -0.0006706849089823663, -0.012145139276981354, -0.004658204037696123, -7.033323527139146e-06, -0.00011455356434453279, -0.8770375847816467, -0.020127926021814346, -1.254989743232727], "finish_reason": "stop"}], "metrics": {"energy": 859.9446742181779, "energy_per_token": 3.4124788659451504, "time": 21.75526, "time_per_token": 0.08633039682539682}}
{"outputs": [{"text": "processed_texts = []\n    for text in texts:\n        text = re.sub(ALPHANUMERIC, ' ', text).lower().strip()\n        processed_texts.append(' '.join([word for word in text.split() if word not in STOPWORDS]))\n\n    vectorizer = TfidfVectorizer(stop_words=None)\n    X = vectorizer.fit_transform(processed_texts)\n\n    nmf = NMF(n_components=num_topics)\n    nmf.fit(X)\n\n    components = nmf.components_\n    feature_names = vectorizer.get_feature_names_out()\n\n    topics = []\n    for component in components:\n        indices = component.argsort()[-50:]\n        topics.append([feature_names[index] for index in indices])\n\n    return topics", "tokens": ["processed", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "text", " =", " re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ")", ".", "lower", "()", ".", "strip", "()", "\n", "        ", "processed", "_", "text", "s", ".", "append", "('", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "None", ")", "\n", "    ", "X", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "X", ")", "\n", "\n", "    ", "components", " =", " nm", "f", ".", "components", "_", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "top", "ics", " =", " []", "\n", "    ", "for", " component", " in", " components", ":", "\n", "        ", "indices", " =", " component", ".", "args", "ort", "()", "[-", "5", "0", ":]", "\n", "        ", "top", "ics", ".", "append", "([", "feature", "_", "names", "[", "index", "]", " for", " index", " in", " indices", "])", "\n", "\n", "    ", "return", " topics", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-2.331089496612549, -0.039008140563964844, -0.041283734142780304, -0.018844619393348694, -0.001069331425242126, -1.2726490497589111, -0.007572161965072155, -0.11952441185712814, -0.08963624387979507, -0.04689516872167587, -0.0006449526408687234, -0.0029385979287326336, -0.00016640232934150845, -0.000795882020611316, -0.0017032414907589555, -1.1454535722732544, -0.06474072486162186, -1.6569874286651611, -9.905801562126726e-05, -0.000619696278590709, -0.016298502683639526, -0.028634648770093918, -1.1920922133867862e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -2.7418097943154862e-06, -1.1920928244535389e-07, -0.0027341386303305626, -0.16040973365306854, -4.351044481154531e-05, -6.16293036728166e-05, -0.0024862352292984724, -0.37539905309677124, -0.8303688168525696, -0.06376714259386063, -7.045020902296528e-05, -1.95640230178833, -0.7517441511154175, -0.003537589218467474, -0.18128542602062225, -0.0017370387213304639, -1.7920053005218506, -0.028780601918697357, -0.030681604519486427, -0.1678019016981125, -0.001210790709592402, -0.00031144535751082003, -0.09295282512903214, -0.0010849310783669353, -0.00015424491721205413, -0.00021669900161214173, -0.3275298774242401, -0.346324622631073, -0.0026843249797821045, -0.00011574551899684593, -0.00015901254664640874, -0.03432917594909668, -0.0001387499796692282, -0.00013171759201213717, -0.0837695375084877, -0.01363535225391388, -0.008665576577186584, -0.014368874952197075, -0.0001599660754436627, -0.0020534161012619734, 0.0, -2.861018856492592e-06, 0.0, 0.0, -0.01816096529364586, -0.0018562719924375415, -0.10713300108909607, -0.00038389943074434996, -0.47722381353378296, -0.002971521345898509, -0.00066985102603212, -0.00020096666412428021, -1.1920928244535389e-07, -5.483612312673358e-06, 0.0, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.23062264919281006, -1.158456563949585, -1.311301275563892e-06, -8.344646857949556e-07, -0.4302477538585663, -0.9786987900733948, -0.32149815559387207, -0.05065746232867241, -0.003805777058005333, -1.8208260536193848, -0.026453474536538124, -0.00017355366435367614, -2.264974000354414e-06, -1.0847986231965479e-05, -0.0027482856530696154, -2.50339189733495e-06, -8.344646857949556e-07, -0.0034300799015909433, -0.0007671750499866903, -9.536738616588991e-07, -2.3841830625315197e-06, -2.861018856492592e-06, -0.00012754580529872328, -0.016472885385155678, -0.5860481858253479, -8.046303264563903e-05, -0.06142953410744667, -5.745722592109814e-05, -0.01875676028430462, -0.0002127659390680492, -1.1920928244535389e-07, -0.00045134371612221, -0.002454246859997511, -2.3841830625315197e-06, -0.0002985746832564473, -0.0004326361231505871, -0.002902345033362508, -1.6689286894688848e-06, -8.344646857949556e-07, -1.1920928244535389e-07, -0.6595206260681152, -0.0037338081747293472, -0.005091676488518715, -1.4094111919403076, -1.4781842764932662e-05, -0.014701017178595066, -4.291525328881107e-06, -0.0037910512182861567, -9.345571743324399e-05, -0.015636928379535675, -0.0035703741014003754, -0.16151247918605804, -5.030505417380482e-05, -3.4324522018432617, -0.0047876485623419285, -0.049947142601013184, -3.576278118089249e-07, -3.576272320060525e-06, -0.0067043364979326725, -1.728519782773219e-05, -0.0707106962800026, -0.13636168837547302, -0.9146783947944641, -0.0010245556477457285, -0.09332285076379776, -0.0007485924870707095, -0.35134759545326233, -2.3841855067985307e-07, -3.933898824470816e-06, -0.00019441144831944257, 0.0, -1.7881377516459906e-06, 0.0, -7.116541382856667e-05, -0.4186355769634247, -0.00018285033002030104, -0.0006668727728538215, -0.004547610878944397, -0.36486440896987915, -4.589452510117553e-05, -0.4281196892261505, -0.039211735129356384, -0.011196049861609936, -0.29916462302207947, -0.001369253732264042, -0.012065758928656578, -0.00914503913372755, -0.8645064234733582, -0.010202989913523197, -0.0024813597556203604, -0.001142564113251865, -0.0006445952458307147, -0.00031668893643654883, -1.1770963668823242, -0.0206450168043375, -0.2597092092037201, -1.6093124941107817e-05, -1.1086402082582936e-05, -7.152555099310121e-07, -0.08293347805738449, -0.657448410987854, -2.193075180053711, -1.402646780014038, -0.46734434366226196, -0.20056787133216858, -0.0019207615405321121, -0.9650988578796387, -1.8142057657241821, -0.012768890708684921, -0.001599224517121911, -0.11518885940313339, -0.00693095289170742, -0.00011526874004630372, -2.7417760065873154e-05, -0.00017867876158561558, -0.7529892325401306, -0.00041309406515210867, -0.023535415530204773, -0.0001954841281985864, -4.9470632802695036e-05, -0.16443820297718048, -0.15716366469860077, -0.0010125277331098914, -0.02714366652071476, -0.0004362108593340963, -0.028413593769073486, -0.009993047453463078, -1.0786129236221313, -1.5497195136049413e-06, -2.861018856492592e-06, -5.602820692729438e-06, -5.483612312673358e-06, -2.314889669418335, -0.008561336435377598], "finish_reason": "stop"}], "metrics": {"energy": 749.4872398109433, "energy_per_token": 3.4698483324580707, "time": 18.29307, "time_per_token": 0.08469013888888889}}
{"outputs": [{"text": "# Preprocess texts by removing non-alphanumeric characters and stopwords\n    preprocessed_texts = [ALPHANUMERIC.sub(' ', t.lower()).split() for t in texts]\n    preprocessed_texts = [[w for w in t if w not in STOPWORDS] for t in preprocessed_texts]\n\n    # Vectorize the preprocessed texts using TF-IDF\n    tfidf_vectorizer = TfidfVectorizer(min_df=1, tokenizer=lambda x: x, dtype=float)\n    tfidf_matrix = tfidf_vectorizer.fit_transform(preprocessed_texts)\n\n    # Perform NMF to extract topics\n    nmf = NMF(n_components=num_topics, random_state=0)\n    W = nmf.fit_transform(tfidf_matrix)\n    H = nmf.components_\n\n    # Get the most significant words for each topic\n    top_indices = H.argsort()[:, -1:-6:-1]\n    top_words = [[tfidf_", "tokens": ["#", " Pre", "process", " texts", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " and", " stop", "words", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " t", ".", "lower", "())", ".", "split", "()", " for", " t", " in", " texts", "]", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [[", "w", " for", " w", " in", " t", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " t", " in", " pre", "processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ize", " the", " pre", "processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "min", "_", "df", "=", "1", ",", " token", "izer", "=", "lambda", " x", ":", " x", ",", " dtype", "=", "float", ")", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " tf", "id", "f", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "pre", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Perform", " N", "MF", " to", " extract", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_", "\n", "\n", "    ", "#", " Get", " the", " most", " significant", " words", " for", " each", " topic", "\n", "    ", "top", "_", "indices", " =", " H", ".", "args", "ort", "()", "[:", ",", " -", "1", ":-", "6", ":-", "1", "]", "\n", "    ", "top", "_", "words", " =", " [[", "tf", "id", "f", "_"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -1.2798786163330078, -0.6832999587059021, -0.0475408211350441, -0.020662648603320122, -0.0009773960337042809, -0.006636365316808224, -4.565611743601039e-05, -0.00037305548903532326, -0.01741253025829792, -1.9095287322998047, -0.8812114596366882, -0.01015803124755621, -0.1355452686548233, -0.002221380127593875, -0.9213336110115051, -0.01716308295726776, -0.05420106649398804, -0.02456837147474289, -0.003962760791182518, -0.0006042085005901754, -0.29499027132987976, -1.2458410263061523, -1.0847986231965479e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -1.7881377516459906e-06, -4.768370445162873e-07, -0.000714404450263828, -3.6954811548639555e-06, -0.02657838724553585, -0.09637222439050674, -8.999896090244874e-05, -2.2467362880706787, -0.6353915333747864, -0.02490435168147087, -0.011395014822483063, -0.2891269326210022, -0.43066105246543884, -0.007832765579223633, -0.036038462072610855, -0.0002157455455744639, -5.125868119648658e-05, -0.001292942208237946, -0.004233802668750286, -0.01932881399989128, -0.05462374910712242, -0.5671751499176025, -0.00018535325943958014, -0.00035661060246638954, -0.004423476289957762, -0.00029213930247351527, -0.019302973523736, -0.4919053912162781, -0.4264228343963623, -0.0018861376447603106, -5.566918844124302e-05, -3.6954195820726454e-05, -0.22585098445415497, -0.0022691949270665646, -0.00439356779679656, -0.005610552150756121, -9.775113539944869e-06, -0.001814387273043394, 0.0, -8.22540732769994e-06, 0.0, 0.0, -0.006746964529156685, -0.0018222408834844828, -3.135155202471651e-05, -6.318072337307967e-06, -0.00016199229867197573, -2.3841855067985307e-07, -3.576272320060525e-06, -3.3378546504536644e-06, -2.3841855067985307e-07, -0.0005311747081577778, -0.0013460394693538547, -0.1928381770849228, -0.0001586549769854173, -0.004115446005016565, -0.1752355843782425, -0.005907575134187937, -1.3105518817901611, -0.12400933355093002, -0.00030858523678034544, -0.016415659338235855, -0.127868190407753, -0.018779806792736053, -0.0024209495168179274, -8.4638240878121e-06, -2.9444261599564925e-05, -0.028755582869052887, -0.00013302871957421303, -2.0824661254882812, -0.020040415227413177, -0.00034195298212580383, -0.18838928639888763, -0.04586851969361305, -0.010844817385077477, -0.00014804698002990335, -0.00013028726971242577, 0.0, -0.00015817821258679032, -1.1920928244535389e-07, -7.152555099310121e-07, -2.3841855067985307e-07, -0.2272563874721527, -1.522457480430603, -3.576278118089249e-07, -3.4570634852570947e-06, -0.0010808822698891163, -0.19789235293865204, -0.4021672010421753, -0.9145267009735107, -0.020775794982910156, -0.00047851080307736993, -0.013675804249942303, -0.11975297331809998, -0.0004558716027531773, -0.0033926567994058132, -1.427185297012329, -3.23598575592041, -0.11526959389448166, -0.9721314311027527, -0.009289258159697056, -0.033521853387355804, -0.002049014437943697, -0.08983796089887619, -0.0015373327769339085, -0.0003256267518736422, -0.48581206798553467, -0.21218840777873993, -0.000814582861494273, -8.368142152903602e-05, -1.7881377516459906e-06, -3.576278118089249e-07, -2.145764938177308e-06, -5.245195097813848e-06, -2.9802276912960224e-06, -7.152531907195225e-06, -3.93382906622719e-05, -5.960446742392378e-06, -2.145764938177308e-06, -0.44565045833587646, -0.05902779474854469, -2.1457441107486375e-05, -4.0531076592742465e-06, -8.129743218887597e-05, -4.541770613286644e-05, -0.00014923889830242842, -0.04885006323456764, -0.111487977206707, -6.329813186312094e-05, -0.002642712788656354, -1.9593948125839233, -0.0707094743847847, -3.564294092939235e-05, -1.1200942993164062, -0.030647845938801765, -0.39093008637428284, -0.09968329966068268, -0.00010048838157672435, -0.008852757513523102, -1.3351351299206726e-05, -0.13538087904453278, -0.00017045476124621928, -3.576278118089249e-07, -0.00024720950750634074, -0.006268837954849005, -1.4305104514278355e-06, -0.0001652104256208986, -0.00010871296399272978, -0.00351406866684556, -5.960462772236497e-07, -5.960462772236497e-07, -1.1920928244535389e-07, -0.2762245833873749, -0.9613828659057617, 0.0, -1.7881233361549675e-05, -3.0397906812140718e-05, -1.7870445251464844, -0.20747192203998566, -0.004744343925267458, -0.0031632171012461185, -0.34411466121673584, -0.00796759407967329, -0.0006536492728628218, 0.0, -2.145764938177308e-06, -0.00282817124389112, -0.0017158561386168003, -1.7881377516459906e-06, -1.9073304429184645e-05, -0.00015627116954419762, -2.3841855067985307e-07, 0.0, -8.106198947643861e-06, -3.3378546504536644e-06, -0.03449687361717224, -0.12548568844795227, -0.011643311940133572, -0.012377943843603134, -0.000957030919380486, -0.0004999579978175461, 0.0, -4.0531076592742465e-06, -0.000285227142740041, -7.748573807475623e-06, -0.009768658317625523, -0.008144264109432697, -4.732496745418757e-05, -0.02417665719985962, -0.5997278690338135, -0.2258148491382599, -1.1003774404525757, -0.10548243671655655, -0.006838962901383638, -0.088541179895401, -0.0013294914970174432, -0.010432825423777103, -0.27393361926078796, -0.0001436368766007945, -1.123408555984497, -2.8035805225372314, -1.4966249465942383, -0.004582499153912067, -0.9866981506347656, -0.0001081169830285944, -0.007943941280245781, -5.8412379075889476e-06, -0.0809081569314003, -0.002356730168685317, -0.001342110801488161, -0.10375671088695526, -0.5544672012329102, -0.5680135488510132, -0.524608314037323, -0.10643115639686584, -0.00016056202002801, -5.9602869441732764e-05, -0.14051111042499542, -0.02598363533616066, -0.9004909992218018, -1.0262765884399414, -0.027415456250309944, -0.006876849103718996, -1.1722054481506348, -0.009194295853376389, -1.1920928244535389e-07, 0.0, -1.311301275563892e-06], "finish_reason": "length"}], "metrics": {"energy": 913.3121161956789, "energy_per_token": 3.5676254538893706, "time": 21.863796, "time_per_token": 0.085405453125}}
{"outputs": [{"text": "# Preprocess text\n    processed_text = [\n        ALPHANUMERIC.sub(' ', text.lower())\n        .replace('-', ' ').split()\n        for text in texts\n    ]\n    # Remove stopwords\n    processed_text = [[word for word in words if word not in STOPWORDS]\n                      for words in processed_text]\n    # Vectorize text\n    vectorizer = TfidfVectorizer(\n        ngram_range=(1, 1),\n        max_df=1.0,\n        min_df=1,\n    )\n    X = vectorizer.fit_transform(\n        [' '.join(words) for words in processed_text])\n    # Extract topics\n    nmf = NMF(\n        n_components=num_topics,\n        init='random',\n        random_state=0,\n    )\n    W = nmf.fit_transform(X)\n    H = nmf.components_\n    # Extract most significant words for each topic\n    topics = [[] for _ in range(num", "tokens": ["#", " Pre", "process", " text", "\n", "    ", "processed", "_", "text", " =", " [", "\n", "        ", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", "\n", "        ", ".", "replace", "('", "-'", ",", " '", " '", ")", ".", "split", "()", "\n", "        ", "for", " text", " in", " texts", "\n", "    ", "]", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "processed", "_", "text", " =", " [[", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "                ", "      ", "for", " words", " in", " processed", "_", "text", "]", "\n", "    ", "#", " Vector", "ize", " text", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "\n", "        ", "ng", "ram", "_", "range", "=(", "1", ",", " ", "1", ")", ",", "\n", "        ", "max", "_", "df", "=", "1", ".", "0", ",", "\n", "        ", "min", "_", "df", "=", "1", ",", "\n", "    ", ")", "\n", "    ", "X", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "\n", "        ", "['", " '", ".", "join", "(", "words", ")", " for", " words", " in", " processed", "_", "text", "])", "\n", "    ", "#", " Ext", "ract", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "\n", "        ", "n", "_", "components", "=", "num", "_", "top", "ics", ",", "\n", "        ", "init", "='", "random", "'", ",", "\n", "        ", "random", "_", "state", "=", "0", ",", "\n", "    ", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "X", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_", "\n", "    ", "#", " Ext", "ract", " most", " significant", " words", " for", " each", " topic", "\n", "    ", "top", "ics", " =", " [", "[]", " for", " _", " in", " range", "(", "num"], "logprobs": [-0.4617658853530884, -0.21068383753299713, -0.1795969307422638, -2.5490665435791016, -1.1929508447647095, -0.001877094735391438, -1.1459764242172241, -0.06116817891597748, -0.028462721034884453, -1.8873846530914307, -0.2609284818172455, -1.3217705488204956, -0.002612869720906019, -0.37665578722953796, -1.8358061424805783e-05, -1.1920928244535389e-07, -5.960462772236497e-07, -1.311301275563892e-06, -2.3841855067985307e-07, -0.0006793813081458211, -6.437280717364047e-06, -0.057370446622371674, -0.10644347965717316, -0.00010775939153973013, -0.36803534626960754, -0.554212212562561, -0.03412746265530586, -0.011057528667151928, -2.1882739067077637, -0.007287822663784027, -0.5706941485404968, -0.42413052916526794, -0.2473505586385727, -1.5273188352584839, -3.909988299710676e-05, -0.008812819607555866, -0.06304122507572174, -0.0007850425899960101, -1.4729266166687012, -1.539222240447998, -0.0484316311776638, -0.32324451208114624, -0.011244615539908409, -0.0013233008794486523, -0.001622551935724914, -0.0005726366653107107, -0.002939548809081316, -0.022765591740608215, -0.0063878875225782394, -2.3007127310847864e-05, -0.006336360704153776, -0.8949182629585266, -1.2206971645355225, -0.2578965723514557, -0.022756734862923622, -0.07092592865228653, -0.204488605260849, -0.00036745471879839897, -0.17570029199123383, -0.00023493390472140163, -0.005288302432745695, -0.0371694341301918, -1.3736226558685303, -0.20013566315174103, -0.005247035529464483, -0.000196556793525815, -0.00047386385267600417, -1.6793782711029053, -0.035387638956308365, -0.00821745302528143, -0.012404082342982292, -0.00015341058315243572, -0.0013677061069756746, 0.0, -2.992108420585282e-05, 0.0, -1.1920928244535389e-07, -0.006198941729962826, -1.0528796911239624, -0.0007059465860947967, -0.025118280202150345, -0.00013267113536130637, -0.0005495230434462428, -0.0001147919538198039, -0.0003499372396618128, -1.5497195136049413e-06, -2.3841855067985307e-07, -0.001311514643020928, -0.0006571040721610188, -0.3543873429298401, -0.08248494565486908, -0.919423520565033, -0.040026161819696426, -0.7211624383926392, -0.47286176681518555, -0.0005875291535630822, -0.2298860400915146, -0.0038832034915685654, -0.0012205539969727397, -0.0006038511055521667, -2.3841855067985307e-07, -5.125986263010418e-06, 0.0, -2.0265558760002023e-06, -2.3841855067985307e-07, -0.07699882984161377, -1.1686241626739502, -0.0020028548315167427, -2.6557726860046387, -0.0004196478403173387, -1.7046782886609435e-05, -1.7881377516459906e-06, -0.0036952088121324778, -0.05926870182156563, -5.006664650863968e-05, -0.004164001438766718, -1.4436442852020264, -0.005155483260750771, -0.0034417223650962114, -1.0933254957199097, -0.02428370527923107, -1.3771439790725708, -1.7404405298293568e-05, -0.046916551887989044, -0.0003854485403280705, -2.3782312870025635, -0.03224524110555649, -0.016850747168064117, -0.01225972268730402, -0.0662870705127716, -0.018149375915527344, -0.03751636669039726, 0.0, -2.622600959512056e-06, -0.00016723664884921163, -0.14211834967136383, -0.03848635405302048, -0.0024497280828654766, -1.9731305837631226, -4.434487345861271e-05, -0.009341932833194733, -0.026953496038913727, -1.7911150455474854, -0.019333023577928543, -0.0010854073334485292, -2.6225699912174605e-05, -0.00020621081057470292, -0.010127585381269455, -6.9141146923357155e-06, -1.7881377516459906e-06, -0.3078649640083313, -0.04752706363797188, -0.0005594118847511709, -0.450634628534317, -0.0010920758359134197, -0.00012635385792236775, -5.722029527532868e-06, -0.033797334879636765, -0.2213561087846756, -0.0024673277512192726, -0.013086739927530289, -0.0008643704932183027, -5.7338023907504976e-05, -0.0003387354372534901, -3.933898824470816e-06, -4.768370445162873e-07, -0.23392364382743835, -0.07397518306970596, -0.15755406022071838, -0.06190677359700203, -1.8446136713027954, -0.005903427489101887, -0.03530202805995941, -0.23743794858455658, -0.0007435894221998751, -0.06861904263496399, -0.0001481661747675389, -0.025195932015776634, -0.00023409964342135936, -2.3841855067985307e-07, -0.0006358985556289554, -1.4826247692108154, -0.0005452338373288512, -0.007119997404515743, -2.7418097943154862e-06, -0.002268005395308137, -0.000756216119043529, -0.009680825285613537, -2.264974000354414e-06, -5.483612312673358e-06, -2.3841855067985307e-07, -0.005645758472383022, -0.02485284022986889, -0.03381197154521942, -0.2533954381942749, -0.09971620887517929, -0.741915225982666, -7.033100700937212e-05, -0.001068736077286303, -0.03196702525019646, -0.0135046960785985, -0.15323132276535034, 0.0, -1.0728830375228426e-06, -0.00013374387344811112, -0.29042643308639526, -0.42951732873916626, -0.001555662602186203, -0.517780065536499, -5.304672595229931e-05, -0.002118725562468171, -0.010029870085418224, -0.07113323360681534, -0.0019367048516869545, -0.00031144535751082003, 0.0, -5.245195097813848e-06, -0.000607782625593245, -0.003697465406730771, -1.9073468138230965e-06, -3.814624506048858e-05, -0.001404966926202178, -0.01097959466278553, -0.07176420092582703, -0.007919223979115486, -0.08052152395248413, -0.0006102845072746277, -0.001878284616395831, 0.0, -6.318072337307967e-06, -0.0007666985620744526, -1.6927575416048057e-05, -0.0071684070862829685, -0.16025598347187042, -1.3443783521652222, -2.3764538764953613, -0.017320914193987846, -1.2634007930755615, -0.24402126669883728, -0.025414446368813515, -0.46698465943336487, -0.019462570548057556, -0.00767922680824995, -0.01654922030866146, -0.00040904260822571814, -0.8464174866676331, -0.03894083946943283, -0.009327642619609833, -1.4915077686309814, -1.4986428022384644, -0.0037971078418195248, -0.09069157391786575, -0.0003000047872774303, -0.0004412154376041144, -4.23184028477408e-05, -0.01814129762351513], "finish_reason": "length"}], "metrics": {"energy": 879.5755707836148, "energy_per_token": 3.4358420733734953, "time": 21.644758, "time_per_token": 0.0845498359375}}
