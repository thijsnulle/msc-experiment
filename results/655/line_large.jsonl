{"outputs": [{"text": " not isinstance(texts, list) or not all(isinstance(text, str) for text in texts):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", ")", " or", " not", " all", "(", "is", "instance", "(", "text", ",", " str", ")", " for", " text", " in", " texts", "):", "\n"], "logprobs": [-0.23379985988140106, -0.5634524822235107, -1.8954096958623268e-05, -0.10474292933940887, -0.0001234931987710297, -0.0003921216703020036, -0.02080148085951805, -0.4638189673423767, -0.01680046133697033, -0.11088361591100693, -0.42762574553489685, -0.01821727119386196, -0.002563525689765811, -1.4185804502631072e-05, -0.0002762889489531517, -0.3774968087673187, -0.0006096888100728393, -0.0014350840356200933, -1.9788545614574105e-05, -0.0009538153535686433, -3.135155202471651e-05, -1.8000440832111053e-05, -6.460934673668817e-05, -0.014264051802456379, -0.00025555206229910254], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.0817036628723145, -0.0069506047293543816], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.13440483808517456, -0.26942577958106995, -0.0004070168943144381, -6.818538531661034e-05, -0.08796034008264542, -0.005380434915423393, -8.67805938469246e-05, -5.960462772236497e-07, -0.0008673481643199921, -0.07944725453853607, -0.01922345720231533, -0.0017327546374872327, -7.784063927829266e-05, -1.2159273865108844e-05, -0.0009450022480450571, -1.1920928244535389e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.0017025275155901909, -0.01163612399250269], "finish_reason": "stop"}, {"text": " not tokenized_texts:", "tokens": [" not", " token", "ized", "_", "text", "s", ":", "\n"], "logprobs": [-0.0945947989821434, -1.5527570247650146, -1.7881377516459906e-06, -2.3841855067985307e-07, -8.344646857949556e-07, -1.1920928244535389e-07, -0.34278804063796997, -0.01775396801531315], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.02589593641459942, -0.014384268783032894, -0.02505224570631981, -0.25755542516708374, -2.4318398573086597e-05, -0.0665455311536789, -0.0034646503627300262, -0.0023858672939240932, -0.004479255992919207, -0.021799705922603607, -0.0016087458934634924, -0.010816161520779133, -4.339123915997334e-05, -0.0003060825983993709, -0.0007740838918834925, -0.00020001317898277193, -0.0002094287920044735, -0.005299093201756477], "finish_reason": "stop"}, {"text": " TfidfVectorizer()", "tokens": [" T", "f", "id", "f", "Vector", "izer", "()", "\n"], "logprobs": [-0.0006450717919506133, -7.152555099310121e-07, -1.3112935448589269e-05, 0.0, -2.264974000354414e-06, -1.1920928244535389e-07, -1.17708158493042, -0.02530682273209095], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002619877050165087, -1.168244216387393e-05, -1.9311717551317997e-05, -0.0003798478574026376, -1.9788545614574105e-05, -1.5497195136049413e-06, -0.006971558555960655, -0.011997326277196407, -1.311301275563892e-06, 0.0, -1.1920928244535389e-07, -5.602820692729438e-06, -0.0007771808886900544, -0.04607687145471573], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n"], "logprobs": [-0.00029976642690598965, -4.768370445162873e-07, -0.00033087024348787963, -0.011746643111109734, -2.50339189733495e-06, -0.00026258357684127986, -0.00017212340026162565, -0.06380517035722733, -1.311301275563892e-06, -4.768370445162873e-07, -1.1920928244535389e-07, -1.3942759037017822, -0.018453113734722137], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.05170932039618492, -9.536738616588991e-07, -3.933898824470816e-06, -0.0001397035230183974, 0.0, -2.0265558760002023e-06, 0.0, -3.1709168979432434e-05, -0.9310118556022644, -0.00345562188886106], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.004015479236841202, -0.006325817666947842, -6.556489552167477e-06, -7.462222856702283e-05, -0.0003122795606032014, -2.3245540432981215e-05, -2.1934269170742482e-05, -5.8412379075889476e-06, -4.410734163684538e-06, -0.17918983101844788, -0.04302651807665825], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.9863834381103516, -0.006927874870598316], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.08617160469293594, -0.004781479015946388, -3.2066785934148356e-05, -0.0014034194173291326, -1.1920928244535389e-07, -1.1324817933200393e-05, -0.004060358740389347, -0.00011646069469861686, -0.0022763311862945557, -0.003345371223986149], "finish_reason": "stop"}, {"text": " feature_names[topic.argsort()][-20:].tolist()", "tokens": [" feature", "_", "names", "[", "topic", ".", "args", "ort", "()", "][", "-", "2", "0", ":]", ".", "tol", "ist", "()", "\n"], "logprobs": [-2.6399166584014893, -6.9141146923357155e-06, -2.47952248173533e-05, -0.1116938665509224, -0.0832543596625328, -0.008732701651751995, -6.937739817658439e-05, -2.5629668016335927e-05, -0.041152290999889374, -2.0571765899658203, -1.0955662727355957, -3.0174331665039062, -0.029932187870144844, -0.18059565126895905, -0.07455004006624222, -0.0035671668592840433, -2.3841855067985307e-07, -0.01431493740528822, -0.2434185892343521], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.018853042274713516, -0.008085377514362335, -0.10378088802099228, -9.405170567333698e-05, -2.3841830625315197e-06, -0.015606884844601154, -0.05488535389304161], "finish_reason": "stop"}, {"text": " topics, nmf  # Adjusted to return both the topics list and the NMF object", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Adjust", "ed", " to", " return", " both", " the", " topics", " list", " and", " the", " N", "MF", " object"], "logprobs": [-0.042518362402915955, -0.03521985933184624, -0.15049730241298676, -8.344646857949556e-07, -0.22247079014778137, -0.0003044141922146082, -1.7183058261871338, -0.024862142279744148, -0.0483638271689415, -0.09743485599756241, -1.1033743619918823, -1.3020775318145752, -0.2803691029548645, -3.0150954723358154, -0.004789309576153755, -0.10349554568529129, -0.23951256275177002, -1.4543427823809907e-05, -1.6518871784210205], "finish_reason": "stop"}], "metrics": {"energy": 1266.5088051033017, "energy_per_token": 6.736748963315435, "time": 35.654663, "time_per_token": 0.18965246276595743}}
{"outputs": [{"text": " not (isinstance(texts, list) and all(isinstance(text, str) for text in texts)):", "tokens": [" not", " (", "is", "instance", "(", "text", "s", ",", " list", ")", " and", " all", "(", "is", "instance", "(", "text", ",", " str", ")", " for", " text", " in", " texts", "))", ":", "\n"], "logprobs": [-0.1928376853466034, -3.035926103591919, -0.19423161447048187, -0.0016686100279912353, -5.0424259825376794e-05, -0.08689600229263306, -0.00013040646445006132, -0.0009192770230583847, -0.035884249955415726, -0.02393517829477787, -0.04930735379457474, -0.11407272517681122, -0.01654019020497799, -0.002334847114980221, -1.3589766240329482e-05, -0.00013767725613433868, -0.5453981161117554, -0.0008997444529086351, -0.0029169651679694653, -6.472854875028133e-05, -0.0012400802224874496, -1.9550132492440753e-05, -1.156323378381785e-05, -8.237022848334163e-05, -0.046184901148080826, -0.0057769715785980225, -0.0011865011183544993], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [ALPHANUMERIC.sub('', text.lower().replace(\"\\n\", \" \")) for text in texts]", "tokens": [" [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", ".", "lower", "()", ".", "replace", "(", "\"", "\\", "n", "\"", ",", " \"", " \"", "))", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -0.925891101360321, -1.5139465176616795e-05, -5.960462772236497e-07, -3.576278118089249e-07, -2.861018856492592e-06, -1.1920928244535389e-07, -0.00017021637177094817, -2.7418097943154862e-06, -0.029126865789294243, -2.296344041824341, -3.933898824470816e-06, -0.3743835687637329, -0.1252906173467636, -0.02177007868885994, -2.600196599960327, -0.0026524621061980724, -0.2793937921524048, -1.2371635437011719, -0.04085560142993927, -1.1553139686584473, -0.08689873665571213, -0.005393714644014835, -0.0001573438785271719, -0.04021076858043671, -0.18745900690555573, -0.05856795608997345, -0.6287466287612915, -0.0003588747640606016, -0.00011395759065635502, -0.0013317534467205405, -0.014964701607823372, -0.0332837738096714], "finish_reason": "stop"}, {"text": " [[word for word in text.split() if word not in STOPWORDS] for text in cleaned_texts]", "tokens": [" [[", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-2.5107288360595703, -0.18798506259918213, -0.011574497446417809, -0.00023707917716819793, -0.00018940561858471483, -0.5158321261405945, -0.0024324848782271147, -0.003072781255468726, -0.12808814644813538, -0.021527433767914772, -0.010593255050480366, -0.03408806025981903, -6.818538531661034e-05, -0.0023719528689980507, 0.0, -3.2186455882765586e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.0076088374480605125, -0.09806404262781143, -0.0005055579822510481, -0.0002543602604418993, -0.0033391928300261497, -2.3841855067985307e-07, -3.814689989667386e-06, -5.125986263010418e-06, -0.0014260371681302786, -0.008997609838843346], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09363358467817307, -0.20684009790420532, -0.14942781627178192, -0.2149951457977295, -0.0024227334652096033, -0.0005432083853520453, -1.3470558769768104e-05, -0.0019867937080562115, -0.0009201106731779873, -0.01624971069395542], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.020797861739993095, -0.01670726388692856, -0.03457276523113251, -0.27401918172836304, -2.038458114839159e-05, -0.07466012239456177, -0.0036215689033269882, -0.0021302644163370132, -0.004654169548302889, -0.016247013583779335, -0.0018164102220907807, -0.011892725713551044, -4.708655978902243e-05, -0.0003238391946069896, -0.0007546676206402481, -0.0002115741081070155, -0.00016342257731594145, -0.004394279792904854], "finish_reason": "stop"}, {"text": " TfidfVectorizer()", "tokens": [" T", "f", "id", "f", "Vector", "izer", "()", "\n"], "logprobs": [-0.000685576000250876, -7.152555099310121e-07, -1.2040065485052764e-05, 0.0, -2.622600959512056e-06, 0.0, -1.2439156770706177, -0.026395540684461594], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002980979916173965, -7.152531907195225e-06, -2.0503786799963564e-05, -0.00042060110718011856, -2.8371408916427754e-05, -1.4305104514278355e-06, -0.0069288220256567, -0.015594209544360638, -1.311301275563892e-06, 0.0, -1.1920928244535389e-07, -1.6689286894688848e-06, -0.0006293461774475873, -0.044347722083330154], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=1)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "1", ")", "\n"], "logprobs": [-0.0003046525234822184, -5.960462772236497e-07, -0.00033825874561443925, -0.013085445389151573, -2.7418097943154862e-06, -0.00040737437666393816, -0.00020859450160060078, -0.05626615881919861, -9.536738616588991e-07, -2.3841855067985307e-07, 0.0, -0.26130858063697815, -0.48131489753723145, -2.3841855067985307e-07, -0.00010334911348763853, -4.9828242481453344e-05, -0.6851563453674316, -1.2190957069396973, -0.017106952145695686], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.05651865899562836, -8.344646857949556e-07, -3.4570634852570947e-06, -0.0001102625101339072, 0.0, -1.7881377516459906e-06, 0.0, -3.0636318115284666e-05, -0.4274088442325592, -0.0001679517881711945, -0.0018080807058140635, -0.01187034323811531], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.003767418209463358, -0.006037450395524502, -4.410734163684538e-06, -6.246371776796877e-05, -0.0004102342063561082, -2.7179348762729205e-05, -4.1960789531003684e-05, -9.059865078597795e-06, -2.7418097943154862e-06, -0.18175101280212402, -0.04009831324219704], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.9253785610198975, -0.006474707741290331], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.10071709007024765, -0.002980435499921441, -3.0636318115284666e-05, -0.001304609584622085, 0.0, -1.2278481335670222e-05, -0.0031527597457170486, -9.48860906646587e-05, -0.0026764783542603254, -0.002808675868436694], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[-num_topics:][::-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[-", "num", "_", "top", "ics", ":", "][", "::", "-", "1", "]]", "\n"], "logprobs": [-0.3464893698692322, -0.03754495456814766, -0.0005034133209846914, -0.00027164106722921133, -0.00013910756388213485, -0.13663582503795624, -0.0003103728231508285, -0.036729082465171814, -0.0008911690674722195, -0.0007300095749087632, -0.0029057920910418034, -0.0006326819420792162, -6.318072337307967e-06, -3.015949550899677e-05, -0.006500290706753731, -1.0867000818252563, -2.18641996383667, -0.0010933857411146164, -0.08620966225862503, -0.0137322461232543, -0.04557390883564949, -0.1452665477991104, -0.0012536532012745738, -0.009158269502222538, -1.537788011773955e-05, -0.00901840254664421, -0.060165856033563614], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.016798818483948708, -0.006279855500906706, -0.06567072123289108, -0.00010585224663373083, -2.622600959512056e-06, -0.013255919329822063, -0.042677152901887894], "finish_reason": "stop"}, {"text": " topics, nmf  # Add nmf as the second element of the tuple", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Add", " nm", "f", " as", " the", " second", " element", " of", " the", " tuple", "\n"], "logprobs": [-0.03829867020249367, -0.039446573704481125, -0.128423273563385, -9.536738616588991e-07, -0.24138343334197998, -0.00031895318534225225, -3.131317377090454, -2.2102251052856445, -3.886147169396281e-05, -1.678812026977539, -0.06395670026540756, -0.012437872588634491, -0.93192058801651, -0.3517860770225525, -0.007396929897367954, -0.7879167795181274, -0.8761470317840576], "finish_reason": "stop"}], "metrics": {"energy": 1190.70668402481, "energy_per_token": 4.8600272817339185, "time": 31.121037, "time_per_token": 0.12702464081632653}}
{"outputs": [{"text": " num_topics <= 0:", "tokens": [" num", "_", "top", "ics", " <=", " ", "0", ":", "\n"], "logprobs": [-2.893795967102051, -8.666139910928905e-05, -0.00015793983766343445, -0.00012718822108581662, -0.7054939270019531, -0.008279405534267426, -0.012550421990454197, -0.14830435812473297, -0.0031169899739325047], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [ALPHANUMERIC.sub(' ', t).lower() for t in texts]", "tokens": [" [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " t", ")", ".", "lower", "()", " for", " t", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -0.925891101360321, -1.5139465176616795e-05, -5.960462772236497e-07, -3.576278118089249e-07, -2.861018856492592e-06, -1.1920928244535389e-07, -0.00017021637177094817, -2.7418097943154862e-06, -0.029126865789294243, -0.10629964619874954, -6.01988795096986e-05, -1.492084264755249, -0.9166743159294128, -0.19251835346221924, -0.11461957544088364, -8.689979586051777e-05, -0.45473194122314453, -0.00011657988943625242, -1.8715683836489916e-05, -0.0020329540129750967, -0.02482365258038044, -0.06229305639863014], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.13742060959339142, -0.2594741880893707, -0.0005208089714869857, -8.201262971851975e-05, -0.09064551442861557, -0.005127731245011091, -8.475421054754406e-05, -1.0728830375228426e-06, -0.0013672299683094025, -0.06885130703449249, -0.017042379826307297, -0.0017348966794088483, -6.735097849741578e-05, -7.748573807475623e-06, -0.0011948358733206987, -1.1920928244535389e-07, -1.311301275563892e-06, -3.576278118089249e-07, -0.002047943649813533, -0.013202156871557236], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.0918046236038208, -0.1888786107301712, -0.13885022699832916, -0.2646702826023102, -0.001893633627332747, -0.000739539333153516, -1.3828182090946939e-05, -0.0017245433991774917, -0.0010587330907583237, -0.019948219880461693], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.023032283410429955, -0.014749765396118164, -0.03240140154957771, -0.30066949129104614, -2.2291887944447808e-05, -0.06549075245857239, -0.0036770368460565805, -0.0020207001361995935, -0.004940089304000139, -0.01652483083307743, -0.0016925308154895902, -0.013487995602190495, -5.435795901576057e-05, -0.00034898388548754156, -0.0006437613046728075, -0.00018952481332235038, -0.0001357701694360003, -0.00552306417375803], "finish_reason": "stop"}, {"text": " TfidfVectorizer(stop_words=STOPWORDS)", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n"], "logprobs": [-0.0007481159991584718, -5.960462772236497e-07, -1.1920858014491387e-05, 0.0, -2.145764938177308e-06, 0.0, -0.39476314187049866, -0.786673367023468, -1.6689286894688848e-06, -8.344646857949556e-07, -0.15469419956207275, -0.5600373148918152, 0.0, -2.3245540432981215e-05, 0.0, -3.576278118089249e-07, -0.25902557373046875, -0.07793624699115753], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.00031704644788987935, -1.0013530300057027e-05, -1.728519782773219e-05, -0.00027044929447583854, -3.516612196108326e-05, -9.536738616588991e-07, -0.005604862235486507, -0.016502786427736282, -1.1920922133867862e-06, 0.0, -1.1920928244535389e-07, -3.576272320060525e-06, -0.0006308949086815119, -0.03960356116294861], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n"], "logprobs": [-0.0003057250869460404, -5.960462772236497e-07, -0.00027843413408845663, -0.011879414319992065, -2.3841830625315197e-06, -0.0002862997353076935, -0.00024053541710600257, -0.049362387508153915, -1.0728830375228426e-06, -2.3841855067985307e-07, 0.0, -1.4285449981689453, -0.023265711963176727], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.05695556476712227, -8.344646857949556e-07, -3.576272320060525e-06, -0.00017653337272349745, 0.0, -1.7881377516459906e-06, 0.0, -4.8636207793606445e-05, -0.49987632036209106, -0.00017069313616957515, -0.0011050553293898702, -0.014179668389260769], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.004045636393129826, -0.004876031540334225, -4.0531076592742465e-06, -4.017272294731811e-05, -0.0002978596603497863, -1.847726889536716e-05, -2.1219027985353023e-05, -1.0371154530730564e-05, -3.576272320060525e-06, -0.14724281430244446, -0.040768738836050034], "finish_reason": "stop"}, {"text": " [[] for i in range(num_topics)]", "tokens": [" [", "[]", " for", " i", " in", " range", "(", "num", "_", "top", "ics", ")]", "\n"], "logprobs": [-0.4944721758365631, -2.2483792304992676, -0.003572037210687995, -2.7255301475524902, -0.00038258862332440913, -0.0032550706528127193, -5.709961988031864e-05, -0.09432927519083023, -3.576278118089249e-07, -2.7179348762729205e-05, -0.0035179888363927603, -0.0001784403866622597, -0.024447279050946236], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.060360025614500046, -0.004995365627110004, -2.7894584491150454e-05, -0.0018720973748713732, 0.0, -1.3828182090946939e-05, -0.003249961184337735, -0.00013469743134919554, -0.0026604279410094023, -0.0027484046295285225], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[:-num_topics - 1:-1]]  # Change this line", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[:", "-", "num", "_", "top", "ics", " -", " ", "1", ":-", "1", "]]", "  ", "#", " Change", " this", " line", "\n"], "logprobs": [-0.4889700412750244, -0.03665369749069214, -0.0005127069307491183, -0.0002892790944315493, -0.0001497156627010554, -0.10774894803762436, -0.00031835734262131155, -0.03875909373164177, -0.0007277462864294648, -0.0005218812730163336, -0.0030662447679787874, -0.0007372760446742177, -7.390948667307384e-06, -3.0040289857424796e-05, -0.005733947269618511, -0.34929826855659485, -0.009170081466436386, -0.7310834527015686, -0.00021419614495243877, -0.008219935931265354, -0.0012153151910752058, -0.004711953457444906, -0.0011293468996882439, -0.0009601273923180997, -0.0006144542712718248, -0.0008163695456460118, -0.025053059682250023, -2.636326789855957, -9.190614218823612e-05, -3.6900346279144287, -2.3751049041748047, -0.23276735842227936, -0.3519580662250519], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.013738124631345272, -0.006317881401628256, -0.08121540397405624, -9.07141511561349e-05, -1.7881377516459906e-06, -0.014070593751966953, -0.04224298894405365], "finish_reason": "stop"}, {"text": " topics, nmf", "tokens": [" topics", ",", " nm", "f", "\n"], "logprobs": [-0.03262227028608322, -0.04323158040642738, -0.12357084453105927, -9.536738616588991e-07, -2.956374168395996], "finish_reason": "stop"}], "metrics": {"energy": 1089.5581576004029, "energy_per_token": 4.997973200001848, "time": 28.385113, "time_per_token": 0.13020694036697247}}
{"outputs": [{"text": " not (isinstance(texts, list) and all(isinstance(t, str) for t in texts)):", "tokens": [" not", " (", "is", "instance", "(", "text", "s", ",", " list", ")", " and", " all", "(", "is", "instance", "(", "t", ",", " str", ")", " for", " t", " in", " texts", "))", ":", "\n"], "logprobs": [-0.1928376853466034, -3.035926103591919, -0.19423161447048187, -0.0016686100279912353, -5.0424259825376794e-05, -0.08689600229263306, -0.00013040646445006132, -0.0009192770230583847, -0.035884249955415726, -0.02393517829477787, -0.04930735379457474, -0.11407272517681122, -0.01654019020497799, -0.002334847114980221, -1.3589766240329482e-05, -0.00013767725613433868, -1.407645583152771, -0.0001333863037871197, -0.005034982226788998, -4.672895011026412e-05, -0.0011956692906096578, -6.437280717364047e-06, -4.887569048150908e-06, -0.00011550712952157483, -0.04399380087852478, -0.006741517689079046, -0.0021402565762400627], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [clean_text(text) for text in texts]", "tokens": [" [", "clean", "_", "text", "(", "text", ")", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -1.9594604969024658, -0.1132977157831192, -0.04382266849279404, -0.01402275264263153, -0.24195581674575806, -0.056931354105472565, -0.02287675067782402, -8.05822346592322e-05, -3.7788631743751466e-05, -0.0004291805380489677, -0.03427733853459358, -0.012173403054475784], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not tokenized_texts:", "tokens": [" not", " token", "ized", "_", "text", "s", ":", "\n"], "logprobs": [-0.09408267587423325, -1.6703014373779297, -1.0728830375228426e-06, -2.3841855067985307e-07, -8.344646857949556e-07, -1.1920928244535389e-07, -0.3546009957790375, -0.019700458273291588], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.022912751883268356, -0.014369345270097256, -0.03508082777261734, -0.31889456510543823, -1.9907753085135482e-05, -0.05955604836344719, -0.0030515079852193594, -0.002163214609026909, -0.003910277504473925, -0.018014976754784584, -0.0015732781030237675, -0.017164606600999832, -5.149708886165172e-05, -0.00036638224264606833, -0.0007491880678571761, -0.00018153927521780133, -0.00014757021563127637, -0.005662709474563599], "finish_reason": "stop"}, {"text": " TfidfVectorizer(stop_words=STOPWORDS)", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n"], "logprobs": [-0.0008205384365282953, -7.152555099310121e-07, -1.168244216387393e-05, 0.0, -2.50339189733495e-06, 0.0, -0.39961016178131104, -0.6571155786514282, -3.099436753473128e-06, -1.311301275563892e-06, -0.1770509034395218, -0.526572048664093, -1.1920928244535389e-07, -1.883488948806189e-05, 0.0, -3.576278118089249e-07, -0.24409206211566925, -0.0835968554019928], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0003121604095213115, -9.775113539944869e-06, -2.13382354559144e-05, -0.0004040378553327173, -1.9907753085135482e-05, -1.311301275563892e-06, -0.008422095328569412, -0.016197869554162025, -1.0728830375228426e-06, 0.0, -1.1920928244535389e-07, -2.861018856492592e-06, -0.0008185135084204376, -0.044192392379045486], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=0)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.0003131137927994132, -5.960462772236497e-07, -0.00035982808913104236, -0.013292151503264904, -2.3841830625315197e-06, -0.00028713393840007484, -0.0002329078270122409, -0.05945046618580818, -1.1920922133867862e-06, -2.3841855067985307e-07, 0.0, -0.28610220551490784, -0.683265209197998, -1.1920928244535389e-07, -7.712543447269127e-05, -6.01988795096986e-05, -1.632009744644165, -0.14520035684108734, -0.017507536336779594], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.051198989152908325, -7.152555099310121e-07, -3.576272320060525e-06, -0.0001787979417713359, 0.0, -1.7881377516459906e-06, 0.0, -3.0874729418428615e-05, -0.39412182569503784, -0.00015805903240107, -0.0024877809919416904, -0.012286453507840633], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.0039361631497740746, -0.0055610002018511295, -6.198863957251888e-06, -5.602679812000133e-05, -0.00034278715611435473, -2.407998726994265e-05, -4.160317621426657e-05, -1.0371154530730564e-05, -2.7418097943154862e-06, -0.19229649007320404, -0.044363804161548615], "finish_reason": "stop"}, {"text": " [feature_names[i] for j in range(num_topics) for i in nmf.components_[j].argsort()[:-10 - 1:-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " j", " in", " range", "(", "num", "_", "top", "ics", ")", " for", " i", " in", " nm", "f", ".", "components", "_[", "j", "]", ".", "args", "ort", "()", "[:", "-", "1", "0", " -", " ", "1", ":-", "1", "]]", "\n"], "logprobs": [-0.4955347776412964, -0.9731656312942505, -0.0020666210912168026, -0.001841636374592781, -0.2007645070552826, -1.0402982234954834, -0.01173203345388174, -0.24861861765384674, -2.0656301975250244, -0.004857406485825777, -0.08403798192739487, -8.356221951544285e-05, -0.18362589180469513, -2.861018856492592e-06, -0.00012170527770649642, -1.0728830375228426e-06, -0.000990377040579915, -0.1856924146413803, -0.0009529816452413797, -0.01301590632647276, -0.1957152634859085, -1.537788011773955e-05, -4.7801782784517854e-05, -0.006109016947448254, -0.029427867382764816, -0.0021387101151049137, -0.006604746449738741, -0.00014828535495325923, -8.4638240878121e-06, -2.455681169521995e-05, -0.4070889353752136, -0.22413097321987152, -0.017577817663550377, -0.42952749133110046, -0.39027583599090576, -0.06559301912784576, -0.0018324741395190358, -0.00020251607929822057, -0.0004138090298511088, -0.001935396110638976, -0.03178735449910164, -0.00936602521687746], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.0838204026222229, -0.0032069466542452574, -3.576214658096433e-05, -0.0014418693026527762, -1.1920928244535389e-07, -1.597391747054644e-05, -0.0032580411061644554, -0.00010716341057559475, -0.002796788467094302, -0.003020726377144456], "finish_reason": "stop"}, {"text": " feature_names[topic.argsort()[-10:]].tolist()", "tokens": [" feature", "_", "names", "[", "topic", ".", "args", "ort", "()", "[-", "1", "0", ":", "]]", ".", "tol", "ist", "()", "\n"], "logprobs": [-2.8086631298065186, -6.318072337307967e-06, -2.47952248173533e-05, -0.15748277306556702, -0.1441732943058014, -0.009524146094918251, -3.325883881188929e-05, -2.2291887944447808e-05, -0.03764805570244789, -0.1538323014974594, -0.7488120794296265, -0.3002549707889557, -0.06800512224435806, -1.3658733367919922, -0.04083649069070816, -0.00017629499780014157, -2.3841855067985307e-07, -0.01330215111374855, -0.12736400961875916], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.01899072155356407, -0.007126743905246258, -0.07942413538694382, -9.214453893946484e-05, -2.50339189733495e-06, -0.015142722986638546, -0.0485684797167778], "finish_reason": "stop"}, {"text": " topics, nmf  # Added NMF object to the return", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Added", " N", "MF", " object", " to", " the", " return", "\n"], "logprobs": [-0.04218710586428642, -0.03659301623702049, -0.15359586477279663, -9.536738616588991e-07, -0.20918193459510803, -0.00024089295766316354, -0.975651741027832, -1.634547472000122, -1.2516897186287679e-05, -2.0552821159362793, -1.4296624660491943, -0.1815708875656128, -0.1302812397480011, -2.3508925437927246], "finish_reason": "stop"}], "metrics": {"energy": 1290.1088147277826, "energy_per_token": 5.079168561920404, "time": 33.722843, "time_per_token": 0.13276709842519685}}
{"outputs": [{"text": " not texts:", "tokens": [" not", " texts", ":", "\n"], "logprobs": [-0.1928376853466034, -1.5382834672927856, -0.4557008147239685, -0.007146273739635944], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [re.sub(ALPHANUMERIC, ' ', text).lower() for text in texts]", "tokens": [" [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ")", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -2.0891506671905518, -0.0032357024028897285, -0.0029922020621597767, -0.02693365328013897, -0.09426527470350266, -3.4570634852570947e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -5.960462772236497e-07, -1.1920928244535389e-07, -0.003795326454564929, -0.23787952959537506, -9.226373367710039e-05, -0.00016842853801790625, -0.3152303993701935, -0.7992469072341919, -0.351505309343338, -0.037343088537454605, -0.00013720047718379647, -0.4176369309425354, -0.0002325502864550799, -8.606540359323844e-05, -0.0011969790793955326, -0.015829145908355713, -0.030959602445364], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not any(' '.join(text.split()) for text in tokenized_texts):", "tokens": [" not", " any", "('", " '", ".", "join", "(", "text", ".", "split", "())", " for", " text", " in", " token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09408267587423325, -0.21771052479743958, -2.053342580795288, -0.0029506024438887835, -1.233157992362976, -0.04405790939927101, -0.0015463787131011486, -0.6163370013237, -0.23550625145435333, -0.0022737146355211735, -0.008102287538349628, -0.2822302579879761, -1.811964830267243e-05, -2.169585604860913e-05, -0.007940866984426975, 0.0, 0.0, -2.3841855067985307e-07, -7.152555099310121e-07, -0.007414915598928928, -0.01635080762207508], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.023094605654478073, -0.013140743598341942, -0.034897688776254654, -0.30281388759613037, -1.9192511899746023e-05, -0.08775179833173752, -0.003383627627044916, -0.0021387101151049137, -0.004375883378088474, -0.019475547596812248, -0.001505909371189773, -0.012079067528247833, -5.054346183896996e-05, -0.00037245964631438255, -0.0007495454628951848, -0.00019524575327523053, -0.00018165845540352166, -0.004877810832113028], "finish_reason": "stop"}, {"text": " TfidfVectorizer()", "tokens": [" T", "f", "id", "f", "Vector", "izer", "()", "\n"], "logprobs": [-0.0007202415145002306, -5.960462772236497e-07, -1.2755313036905136e-05, 0.0, -1.7881377516459906e-06, 0.0, -1.1893118619918823, -0.02365952916443348], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.00034898388548754156, -1.2755313036905136e-05, -1.5616295058862306e-05, -0.00028772983932867646, -2.1815061700181104e-05, -1.1920922133867862e-06, -0.007464020978659391, -0.011349048465490341, -9.536738616588991e-07, 0.0, 0.0, -9.536738616588991e-07, -0.0007476395112462342, -0.03205546364188194], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=0)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.0003152588615193963, -4.768370445162873e-07, -0.00041154498467221856, -0.01415980514138937, -2.50339189733495e-06, -0.0003134713042527437, -0.00022468426323030144, -0.06415058672428131, -1.5497195136049413e-06, -7.152555099310121e-07, 0.0, -0.3035601079463959, -0.5551615357398987, -2.3841855067985307e-07, -9.190614218823612e-05, -5.602679812000133e-05, -1.5448012351989746, -0.1431860625743866, -0.019240062683820724], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.04126302897930145, -7.152555099310121e-07, -3.6954811548639555e-06, -0.00011657988943625242, 0.0, -2.0265558760002023e-06, 0.0, -4.207999518257566e-05, -0.5781773924827576, -0.00022718709078617394, -0.0019405120983719826, -0.01330215111374855], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.00535280816257, -0.007540099788457155, -5.006777428206988e-06, -6.115249561844394e-05, -0.0003146630187984556, -1.8954096958623268e-05, -2.8490614567999728e-05, -8.22540732769994e-06, -5.8412379075889476e-06, -0.15324175357818604, -0.03306524455547333], "finish_reason": "stop"}, {"text": " [feature_names[i] for j in range(num_topics) for i in np.argsort(nmf.components_[j])[::-1][:10]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " j", " in", " range", "(", "num", "_", "top", "ics", ")", " for", " i", " in", " np", ".", "args", "ort", "(", "nm", "f", ".", "components", "_[", "j", "])", "[", "::", "-", "1", "][", ":", "1", "0", "]]", "\n"], "logprobs": [-0.5951446294784546, -1.107973575592041, -0.0015453074593096972, -0.0016552807064726949, -0.12472137063741684, -0.8711175322532654, -0.009635725058615208, -0.22107470035552979, -2.0848002433776855, -0.005565860774368048, -0.0471448116004467, -8.415821503149346e-05, -0.18186651170253754, -1.7881377516459906e-06, -0.0001401803019689396, -1.311301275563892e-06, -0.001404966926202178, -0.20806683599948883, -0.0008505540899932384, -0.01610250398516655, -2.6975226402282715, -7.4741430580616e-05, -0.002175466390326619, -2.3841855067985307e-07, -0.005603439640253782, -0.02070690505206585, 0.0, -4.470248313737102e-05, -0.0008886678842827678, -0.006577508524060249, -0.0016227898886427283, -0.07861616462469101, -0.18719974160194397, -0.0038049458526074886, -0.0008928364841267467, -5.352353764465079e-05, -0.472653865814209, -0.033499833196401596, -0.991326093673706, -0.06388077139854431, -0.034002337604761124, -0.029304930940270424], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.08364104479551315, -0.0033753111492842436, -3.218599158572033e-05, -0.001010741456411779, 0.0, -1.07287787614041e-05, -0.003328856313601136, -0.00010787858627736568, -0.002071141730993986, -0.002777649089694023], "finish_reason": "stop"}, {"text": " feature_names[topic.argsort()[-5:][::-1]].tolist()", "tokens": [" feature", "_", "names", "[", "topic", ".", "args", "ort", "()", "[-", "5", ":", "][", "::", "-", "1", "]]", ".", "tol", "ist", "()", "\n"], "logprobs": [-2.679696798324585, -7.152531907195225e-06, -2.992108420585282e-05, -0.12240233272314072, -0.07404957711696625, -0.007797753904014826, -5.185469490243122e-05, -2.777537883957848e-05, -0.03511812165379524, -0.12982015311717987, -1.3860788345336914, -0.07720477133989334, -0.15812477469444275, -0.008972445502877235, -0.001013599568977952, -5.209310256759636e-05, -0.028958382084965706, -0.03341970965266228, -0.001536023453809321, 0.0, -0.00037317464011721313, -0.058684200048446655], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.019897738471627235, -0.007321076933294535, -0.08440343290567398, -8.725739462533966e-05, -2.622600959512056e-06, -0.013511399738490582, -0.044195014983415604], "finish_reason": "stop"}, {"text": " topics, nmf  # Modified to return a tuple containing both topics and nmf<|endoftext|>def task_func(text):", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Mod", "ified", " to", " return", " a", " tuple", " containing", " both", " topics", " and", " nm", "f", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "text", "):", "\n"], "logprobs": [-0.04577719420194626, -0.04316296428442001, -0.13626818358898163, -7.152555099310121e-07, -0.24911744892597198, -0.0002244459028588608, -2.3845744132995605, -0.3836425244808197, -0.20666231215000153, -0.21834997832775116, -2.216883420944214, -0.013299797661602497, -2.4631636142730713, -2.6302294731140137, -0.39116376638412476, -0.0066946265287697315, -1.0580151081085205, -4.2437604861333966e-05, -1.536529302597046, -2.145764938177308e-06, -4.172316494077677e-06, -9.894321920000948e-06, -6.9141146923357155e-06, -0.06357799470424652, -2.033018112182617, -0.736821711063385, -0.03142283484339714, -0.17605653405189514, -0.11156369000673294, -1.8934727907180786, -1.0458403825759888, -0.002904128050431609], "finish_reason": "stop"}], "metrics": {"energy": 1359.4493499450696, "energy_per_token": 5.072572201287573, "time": 35.058167, "time_per_token": 0.13081405597014925}}
{"outputs": [{"text": " not texts:", "tokens": [" not", " texts", ":", "\n"], "logprobs": [-0.1928376853466034, -1.5382834672927856, -0.4557008147239685, -0.007146273739635944], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [ALPHANUMERIC.sub(' ', text.lower()).split() for text in texts]", "tokens": [" [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "split", "()", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -0.925891101360321, -1.5139465176616795e-05, -5.960462772236497e-07, -3.576278118089249e-07, -2.861018856492592e-06, -1.1920928244535389e-07, -0.00017021637177094817, -2.7418097943154862e-06, -0.029126865789294243, -0.10629964619874954, -6.01988795096986e-05, -0.4512421488761902, -0.6121621131896973, -0.03733941167593002, -0.030213169753551483, -0.6386737823486328, -0.9880223274230957, -0.017172105610370636, -0.015445614233613014, -0.0003543464408721775, -0.00011920218821614981, -0.0012190061388537288, -0.012124882079660892, -0.041377756744623184], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.13217085599899292, -0.22841906547546387, -0.0003999863693024963, -7.557583012385294e-05, -0.11971479654312134, -0.004493496846407652, -8.785339014139026e-05, -1.7881377516459906e-06, -0.0016801540041342378, -0.0678967535495758, -0.015818584710359573, -0.0015963680343702435, -0.00010334911348763853, -9.894321920000948e-06, -0.000971917703282088, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.0020291469991207123, -0.008207284845411777], "finish_reason": "stop"}, {"text": " all(text == '' for text in tokenized_texts):", "tokens": [" all", "(", "text", " ==", " ''", " for", " text", " in", " token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-3.05285382270813, -0.01630835421383381, -0.7927300333976746, -0.18094108998775482, -0.35908856987953186, -0.020573081448674202, -3.8742269680369645e-05, -2.4676019165781327e-05, -0.003207778325304389, -2.3841855067985307e-07, 0.0, -1.1920928244535389e-07, -5.960462772236497e-07, -0.016263552010059357, -0.00570147018879652], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.02774457074701786, -0.013318972662091255, -0.03698679059743881, -0.2647383511066437, -1.7404405298293568e-05, -0.07734446227550507, -0.0035849844571202993, -0.002238389104604721, -0.004054896999150515, -0.01912393793463707, -0.0018362818518653512, -0.016188016161322594, -5.018585216021165e-05, -0.0004776767164003104, -0.0006852186052128673, -0.00022373080719262362, -0.00014900050882715732, -0.005773890297859907], "finish_reason": "stop"}, {"text": " TfidfVectorizer()", "tokens": [" T", "f", "id", "f", "Vector", "izer", "()", "\n"], "logprobs": [-0.0007188120507635176, -7.152555099310121e-07, -8.583032467868179e-06, 0.0, -2.3841830625315197e-06, -1.1920928244535389e-07, -1.0423507690429688, -0.02429778315126896], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0003002431185450405, -1.2874520507466514e-05, -1.728519782773219e-05, -0.00040522945346310735, -1.9430925021879375e-05, -1.6689286894688848e-06, -0.006784617435187101, -0.013806908391416073, -1.0728830375228426e-06, 0.0, -1.1920928244535389e-07, -4.172316494077677e-06, -0.0006200536736287177, -0.04008159413933754], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n"], "logprobs": [-0.0003268184664193541, -7.152555099310121e-07, -0.0003415954706724733, -0.014908329583704472, -2.622600959512056e-06, -0.00035577642847783864, -0.0002286172821186483, -0.060998279601335526, -1.311301275563892e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.3729369640350342, -0.023759879171848297], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.06446816027164459, -9.536738616588991e-07, -4.887569048150908e-06, -0.00014184899919200689, 0.0, -1.6689286894688848e-06, 0.0, -3.099393507000059e-05, -0.4817214012145996, -0.0002012050390476361, -0.0015067425556480885, -0.011168936267495155], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.003343113698065281, -0.005967419594526291, -4.172316494077677e-06, -5.4834770708112046e-05, -0.00037091050762683153, -2.5152843591058627e-05, -2.5152843591058627e-05, -1.0013530300057027e-05, -4.6491513785440475e-06, -0.1505030393600464, -0.05250978842377663], "finish_reason": "stop"}, {"text": " [sorted(zip(feature_names, nmf.components_[i]), key=lambda x: x[1], reverse=True)", "tokens": [" [", "s", "orted", "(", "zip", "(", "feature", "_", "names", ",", " nm", "f", ".", "components", "_[", "i", "])", ",", " key", "=", "lambda", " x", ":", " x", "[", "1", "]", ",", " reverse", "=", "True", ")", "\n"], "logprobs": [-0.5082110166549683, -1.380828619003296, -2.4199192921514623e-05, -0.047464314848184586, -0.9056670069694519, -0.009265990927815437, -0.05482035130262375, -8.22540732769994e-06, -6.758938252460212e-05, -0.004606706090271473, -0.20892755687236786, -0.010040845721960068, -0.0014835315523669124, -0.018451709300279617, -0.010360506363213062, -0.4373473525047302, -0.16077299416065216, -6.460934673668817e-05, -0.009134289808571339, -0.0005345107638277113, -0.0005236684810370207, -0.02617247961461544, -0.0004144048143643886, -0.2877393960952759, -0.00026639728457666934, -0.0012209111591801047, -0.004527318757027388, -0.002693836111575365, -0.0028254371136426926, -1.8000440832111053e-05, -0.0005909841856919229, -0.0039321258664131165, -2.832434892654419], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.0968519076704979, -0.00201094476506114, -3.40932747349143e-05, -0.0008504349971190095, 0.0, -1.3351351299206726e-05, -0.003660052316263318, -0.00016389934171456844, -0.0025531810242682695, -0.0025592453312128782], "finish_reason": "stop"}, {"text": " [feature_names[idx] for idx in topic.argsort()[:-11:-1]]", "tokens": [" [", "feature", "_", "names", "[", "idx", "]", " for", " idx", " in", " topic", ".", "args", "ort", "()", "[:", "-", "1", "1", ":-", "1", "]]", "\n"], "logprobs": [-0.3796710669994354, -0.04312482848763466, -0.0005362979718483984, -0.00018714107864070684, -0.00018249277491122484, -2.4576876163482666, -0.0012409137561917305, -0.03633543476462364, -0.002387294312939048, -0.013232273980975151, -0.002661735750734806, -0.0004256058018654585, -7.748573807475623e-06, -2.0503786799963564e-05, -0.0114861149340868, -0.7826027274131775, -0.008863510563969612, -1.0183098316192627, -0.23748956620693207, -0.00021836756786797196, -0.00026556302327662706, -0.07691770046949387, -0.1753789484500885], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.016362067312002182, -0.006571587175130844, -0.07544630765914917, -8.511180931236595e-05, -2.622600959512056e-06, -0.010315436869859695, -0.034283559769392014], "finish_reason": "stop"}, {"text": " topics, nmf  # Return both the topics and the NMF object", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Return", " both", " the", " topics", " and", " the", " N", "MF", " object", "\n"], "logprobs": [-0.033972956240177155, -0.04029447212815285, -0.12103327363729477, -1.0728830375228426e-06, -0.21327494084835052, -0.00022218143567442894, -1.7295538187026978, -0.8648251295089722, -0.8392400741577148, -0.21777744591236115, -0.03705548867583275, -0.09968006610870361, -0.46015435457229614, -2.1576648578047752e-05, -1.4234946966171265, -0.8004324436187744], "finish_reason": "stop"}], "metrics": {"energy": 1184.6987330837246, "energy_per_token": 5.128565944085388, "time": 30.692451, "time_per_token": 0.13286775324675323}}
{"outputs": [{"text": " num_topics < 0:", "tokens": [" num", "_", "top", "ics", " <", " ", "0", ":", "\n"], "logprobs": [-2.893795967102051, -8.666139910928905e-05, -0.00015793983766343445, -0.00012718822108581662, -0.9066886901855469, -0.003346915589645505, -2.741943836212158, -0.2992388606071472, -0.010775829665362835], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.0817036628723145, -0.0069506047293543816], "finish_reason": "stop"}, {"text": " [text.split() for text in cleaned_texts]", "tokens": [" [", "text", ".", "split", "()", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.13440483808517456, -1.9321340322494507, -0.0028002357576042414, -0.015461108647286892, -0.027608321979641914, -0.0010490872664377093, -4.660974445869215e-05, -1.0609570381348021e-05, -0.001049801823683083, -3.576278118089249e-07, -3.755022044060752e-05, -2.7418097943154862e-06, -0.0013518728082999587, -0.0224550012499094], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.0945947989821434, -0.24607445299625397, -0.12765280902385712, -0.18415643274784088, -0.001960857305675745, -0.0005946775199845433, -1.2993727978027891e-05, -0.0017164511373266578, -0.0008002892718650401, -0.016707733273506165], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.02208438143134117, -0.015452423132956028, -0.03430221974849701, -0.2803303003311157, -2.4437606043647975e-05, -0.07100110501050949, -0.0032745571807026863, -0.002253613667562604, -0.004078642465174198, -0.01956346072256565, -0.0024585279170423746, -0.014129598625004292, -4.255681051290594e-05, -0.0004020121123176068, -0.0007564543629996479, -0.00019226610311307013, -0.00021026308240834624, -0.0049386657774448395], "finish_reason": "stop"}, {"text": " TfidfVectorizer()", "tokens": [" T", "f", "id", "f", "Vector", "izer", "()", "\n"], "logprobs": [-0.0008007657015696168, -7.152555099310121e-07, -1.0490362910786644e-05, 0.0, -2.622600959512056e-06, -1.1920928244535389e-07, -1.051942229270935, -0.027869900688529015], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002671123365871608, -8.583032467868179e-06, -2.7179348762729205e-05, -0.0006405447493307292, -2.3364747903542593e-05, -1.4305104514278355e-06, -0.006712744012475014, -0.011668526567518711, -1.0728830375228426e-06, 0.0, -1.1920928244535389e-07, -2.3841830625315197e-06, -0.0008737798780202866, -0.04365972429513931], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=0)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.00030310326837934554, -4.768370445162873e-07, -0.0003673355677165091, -0.0094932084903121, -2.9802276912960224e-06, -0.00025328766787424684, -0.00020358874462544918, -0.061657872051000595, -1.311301275563892e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.2914283871650696, -0.5110803246498108, -2.3841855067985307e-07, -9.178694017464295e-05, -5.495397272170521e-05, -1.543791651725769, -0.14763957262039185, -0.019724885001778603], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.05760015919804573, -8.344646857949556e-07, -2.9802276912960224e-06, -0.00012730741582345217, 0.0, -1.7881377516459906e-06, 0.0, -3.45700973412022e-05, -0.5423740744590759, -0.00015186110977083445, -0.0024924185127019882, -0.012124646455049515], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.0033617669250816107, -0.005215728189796209, -3.6954811548639555e-06, -6.90197994117625e-05, -0.0002640137099660933, -2.13382354559144e-05, -3.683499380713329e-05, -7.748573807475623e-06, -4.410734163684538e-06, -0.15498234331607819, -0.04348374158143997], "finish_reason": "stop"}, {"text": " [[] for _ in range(num_topics)]", "tokens": [" [", "[]", " for", " _", " in", " range", "(", "num", "_", "top", "ics", ")]", "\n"], "logprobs": [-0.5789299011230469, -1.8123104572296143, -0.0035510121379047632, -0.08179908245801926, -9.48860906646587e-05, -0.0038270342629402876, -2.455681169521995e-05, -0.038977183401584625, -2.3841855067985307e-07, -5.817244164063595e-05, -0.0033690142445266247, -7.331102824537084e-05, -0.018119875341653824], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.09718360751867294, -0.004278197418898344, -2.9444261599564925e-05, -0.0013312773080542684, 0.0, -1.156323378381785e-05, -0.004222644027322531, -0.00013171759201213717, -0.0025780319701880217, -0.0030310661531984806], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[:-11:-1]]  # Original line", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[:", "-", "1", "1", ":-", "1", "]]", "  ", "#", " Original", " line", "\n"], "logprobs": [-0.5257923603057861, -0.030975665897130966, -0.0006661579827778041, -0.0002627027570270002, -0.00017987063620239496, -0.08558161556720734, -0.00030596344731748104, -0.034939590841531754, -0.0009056995622813702, -0.0005810956354252994, -0.001978703308850527, -0.0006842655711807311, -7.867782187531702e-06, -3.349725011503324e-05, -0.009742804802954197, -0.48979315161705017, -0.007807571440935135, -0.9675299525260925, -0.18175628781318665, -0.0001463782973587513, -0.00020919041708111763, -0.057615913450717926, -1.9592267274856567, -5.471556869451888e-05, -5.27407169342041, -0.3693951666355133, -0.30196282267570496], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.018250633031129837, -0.006645009852945805, -0.0932227298617363, -8.570780482841656e-05, -1.9073468138230965e-06, -0.014460175298154354, -0.053323857486248016], "finish_reason": "stop"}, {"text": " topics, nmf  # Return both topics and the fitted NMF model", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Return", " both", " topics", " and", " the", " fitted", " N", "MF", " model", "\n"], "logprobs": [-0.0317232608795166, -0.041230425238609314, -0.11971066892147064, -1.1920922133867862e-06, -0.21251869201660156, -0.00023779425828251988, -1.7010985612869263, -0.8205335736274719, -0.54486083984375, -0.017894726246595383, -0.9053726196289062, -1.2096130847930908, -0.17664815485477448, -3.4927710657939315e-05, -0.39877843856811523, -0.6406833529472351], "finish_reason": "stop"}], "metrics": {"energy": 1040.5973257732392, "energy_per_token": 5.419777738402288, "time": 26.908922, "time_per_token": 0.14015063541666667}}
{"outputs": [{"text": " not isinstance(texts, list) or not all(isinstance(text, str) for text in texts):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", ")", " or", " not", " all", "(", "is", "instance", "(", "text", ",", " str", ")", " for", " text", " in", " texts", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -0.09489396959543228, -8.737658936297521e-05, -0.0003196682082489133, -0.023912714794278145, -0.44968920946121216, -0.017097108066082, -0.12891371548175812, -0.5137152671813965, -0.022008001804351807, -0.002863119123503566, -1.3232143828645349e-05, -0.0003094194398727268, -0.3365647792816162, -0.000533795915544033, -0.0015988674713298678, -2.2411095415009186e-05, -0.0013094907626509666, -2.4676019165781327e-05, -1.9430925021879375e-05, -5.364274329622276e-05, -0.012713807635009289, -0.00024828212917782366], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [clean_text(text) for text in texts]", "tokens": [" [", "clean", "_", "text", "(", "text", ")", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -1.9594604969024658, -0.1132977157831192, -0.04382266849279404, -0.01402275264263153, -0.24195581674575806, -0.056931354105472565, -0.02287675067782402, -8.05822346592322e-05, -3.7788631743751466e-05, -0.0004291805380489677, -0.03427733853459358, -0.012173403054475784], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09408267587423325, -0.21771052479743958, -0.14906863868236542, -0.19555547833442688, -0.0022985723335295916, -0.0007189311436377466, -9.417489309271332e-06, -0.0021005249582231045, -0.0010388459777459502, -0.01862758956849575], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.022419564425945282, -0.015424720011651516, -0.02817614935338497, -0.27586546540260315, -1.9073304429184645e-05, -0.061393436044454575, -0.0025075203739106655, -0.002359227742999792, -0.004310364834964275, -0.018842747434973717, -0.00183723377995193, -0.014292961917817593, -4.51792984677013e-05, -0.0003110878460574895, -0.0006232702871784568, -0.00021789084712509066, -0.0001408954558428377, -0.005220708902925253], "finish_reason": "stop"}, {"text": " TfidfVectorizer(token_pattern=r\"\\b\\w+\\b\", min_df=2, max_df=0.8)", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "token", "_", "pattern", "=", "r", "\"", "\\", "b", "\\", "w", "+\\", "b", "\"", ",", " min", "_", "df", "=", "2", ",", " max", "_", "df", "=", "0", ".", "8", ")", "\n"], "logprobs": [-0.0006347072194330394, -4.768370445162873e-07, -1.1801649634435307e-05, 0.0, -2.264974000354414e-06, 0.0, -0.3774000406265259, -1.875040054321289, -0.5974095463752747, -0.041658055037260056, -0.045336171984672546, -0.03978962451219559, -0.35614460706710815, -0.4632624089717865, -0.09172076731920242, -0.7122183442115784, -0.0386999174952507, -0.014540188014507294, -0.00012575789878610522, -0.0012804412981495261, -0.9180934429168701, -2.5291123390197754, -9.536738616588991e-07, -0.0001262346631847322, -0.0005988473421894014, -0.76994788646698, -0.9206686615943909, -0.1590791642665863, -1.1920922133867862e-06, -0.0005253365379758179, -0.0008853329927660525, -0.05460343137383461, -4.60137271147687e-05, -0.7227343320846558, -0.40715986490249634, -0.14711707830429077], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002858230145648122, -1.0967194612021558e-05, -2.062299427052494e-05, -0.0005164004978723824, -2.634490556374658e-05, -1.311301275563892e-06, -0.008380129933357239, -0.016046078875660896, -1.311301275563892e-06, 0.0, -1.1920928244535389e-07, -4.6491513785440475e-06, -0.0006687788409180939, -0.04497462138533592], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=1)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "1", ")", "\n"], "logprobs": [-0.00029404606902971864, -5.960462772236497e-07, -0.0004166688595432788, -0.012463891878724098, -2.861018856492592e-06, -0.00032240914879366755, -0.00023648326168768108, -0.05314990505576134, -1.1920922133867862e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.303594172000885, -0.5556124448776245, -2.3841855067985307e-07, -0.00010430268594063818, -7.271502545336261e-05, -0.5609100461006165, -1.1676466464996338, -0.019489459693431854], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.06138536334037781, -7.152555099310121e-07, -3.576272320060525e-06, -0.0001641377166379243, 0.0, -1.7881377516459906e-06, 0.0, -3.421248038648628e-05, -0.5805898308753967, -0.00016199229867197573, -0.0019094583112746477, -0.01313650794327259], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.0033179253805428743, -0.006563178729265928, -5.483612312673358e-06, -6.186770770000294e-05, -0.0003163314249832183, -3.2305197237292305e-05, -2.3841574147809297e-05, -9.059865078597795e-06, -6.9141146923357155e-06, -0.1425420641899109, -0.050373099744319916], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.6045081615447998, -1.9736026525497437], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.09185562282800674, -0.0038134963251650333, -3.58813522325363e-05, -0.0010633773636072874, 0.0, -1.4781842764932662e-05, -0.002566617215052247, -0.00010907054820563644, -0.0017805927200242877, -0.00327800284139812], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[:-num_topics - 1:-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[:", "-", "num", "_", "top", "ics", " -", " ", "1", ":-", "1", "]]", "\n"], "logprobs": [-0.4950205087661743, -0.03659117966890335, -0.0004536076739896089, -0.0001823735801735893, -0.0001538873475510627, -0.12780462205410004, -0.0003234816831536591, -0.03250884264707565, -0.000730247818864882, -0.0006728292210027575, -0.0020800638012588024, -0.0005678709712810814, -8.34461570775602e-06, -3.302042750874534e-05, -0.010360623709857464, -0.35232630372047424, -0.011092661879956722, -0.915936291217804, -0.0003013156820088625, -0.008176780305802822, -0.0011560192797333002, -0.006689179688692093, -0.0010489681735634804, -0.0008724696817807853, -0.0007329876534640789, -0.0007819455349817872, -0.02176494710147381, -0.08815977722406387], "finish_reason": "stop"}, {"text": "append(topic_keywords)  # Adjusted to append the list of keywords", "tokens": ["append", "(", "topic", "_", "keywords", ")", "  ", "#", " Adjust", "ed", " to", " append", " the", " list", " of", " keywords", "\n"], "logprobs": [-0.015722716227173805, -0.006530728656798601, -0.10821646451950073, -9.60780744208023e-05, -2.264974000354414e-06, -0.012905174866318703, -2.9668073654174805, -5.400034933700226e-05, -2.853671073913574, -0.06379644572734833, -0.03795752301812172, -0.15075621008872986, -0.7258206605911255, -1.0753400325775146, -0.16931217908859253, -0.9205290079116821, -0.7302522659301758], "finish_reason": "stop"}, {"text": " topics, nmf  # Adjusted to return a tuple with the topics and NMF model<|endoftext|>import os", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " with", " the", " topics", " and", " N", "MF", " model", "<", "|", "end", "of", "text", "|>", "import", " os", "\n"], "logprobs": [-0.03654991835355759, -0.03286119922995567, -0.1431933045387268, -1.4305104514278355e-06, -0.24496245384216309, -0.00026341783814132214, -1.620330572128296, -0.025464767590165138, -0.03852730244398117, -0.10979652404785156, -1.222763180732727, -0.004267989192157984, -1.8401774168014526, -0.8008122444152832, -0.10698273777961731, -0.13544324040412903, -0.8520070910453796, -1.2874520507466514e-05, -0.4218260943889618, -1.790939450263977, -1.9073468138230965e-06, -3.6954811548639555e-06, -1.07287787614041e-05, -1.0609570381348021e-05, -0.0716177374124527, -0.9750694632530212, -2.748366594314575, -0.05513763800263405], "finish_reason": "stop"}], "metrics": {"energy": 1245.9208230104439, "energy_per_token": 4.701588011360165, "time": 32.804512, "time_per_token": 0.12379061132075472}}
{"outputs": [{"text": " not texts:", "tokens": [" not", " texts", ":", "\n"], "logprobs": [-0.1928376853466034, -1.5382834672927856, -0.4557008147239685, -0.007146273739635944], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.0817036628723145, -0.0069506047293543816], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.13440483808517456, -0.26942577958106995, -0.0004070168943144381, -6.818538531661034e-05, -0.08796034008264542, -0.005380434915423393, -8.67805938469246e-05, -5.960462772236497e-07, -0.0008673481643199921, -0.07944725453853607, -0.01922345720231533, -0.0017327546374872327, -7.784063927829266e-05, -1.2159273865108844e-05, -0.0009450022480450571, -1.1920928244535389e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.0017025275155901909, -0.01163612399250269], "finish_reason": "stop"}, {"text": " not any(text.split() for text in tokenized_texts):", "tokens": [" not", " any", "(", "text", ".", "split", "()", " for", " text", " in", " token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.0945947989821434, -0.24607445299625397, -0.12765280902385712, -2.0696659088134766, -0.7864118218421936, -0.0785377025604248, -0.001784638618119061, -9.011816291604191e-05, -1.597391747054644e-05, -3.576272320060525e-06, -0.004665086045861244, 0.0, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.0061042774468660355, -0.01524087879806757], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.020231904461979866, -0.016994914039969444, -0.029303425922989845, -0.2758951485157013, -2.109982233378105e-05, -0.0708862841129303, -0.0036473434884101152, -0.0019540756475180387, -0.00462284404784441, -0.019459998235106468, -0.0021036178804934025, -0.018422335386276245, -5.721882189391181e-05, -0.00038532938924618065, -0.0007233387441374362, -0.00019774865359067917, -0.00018320789968129247, -0.004299325868487358], "finish_reason": "stop"}, {"text": " TfidfVectorizer()", "tokens": [" T", "f", "id", "f", "Vector", "izer", "()", "\n"], "logprobs": [-0.0009349980391561985, -7.152555099310121e-07, -1.0609570381348021e-05, 0.0, -2.145764938177308e-06, -1.1920928244535389e-07, -1.0806279182434082, -0.025003764778375626], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0003280101518612355, -8.940656698541716e-06, -1.9311717551317997e-05, -0.00035577642847783864, -2.753696753643453e-05, -1.4305104514278355e-06, -0.006801904179155827, -0.01206717174500227, -1.4305104514278355e-06, 0.0, -1.1920928244535389e-07, -2.3841830625315197e-06, -0.0005441615357995033, -0.045924197882413864], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=1, max_iter=1000)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "1", ",", " max", "_", "iter", "=", "1", "0", "0", "0", ")", "\n"], "logprobs": [-0.0003133521240670234, -4.768370445162873e-07, -0.00039498155820183456, -0.00933449249714613, -2.50339189733495e-06, -0.0004223884898237884, -0.00019238528329879045, -0.061115700751543045, -1.311301275563892e-06, -2.3841855067985307e-07, 0.0, -0.29107487201690674, -0.5023989677429199, -2.3841855067985307e-07, -0.00012885693286079913, -5.781483559985645e-05, -0.5814449787139893, -0.3541328012943268, -0.6125946640968323, 0.0, -0.0001629458274692297, -0.00014709345123264939, -1.6001747846603394, -0.062413010746240616, -0.0049902647733688354, -0.05355043336749077, -0.4700013995170593, -0.023249756544828415], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.04652462154626846, -8.344646857949556e-07, -3.4570634852570947e-06, -0.00014602071314584464, 0.0, -1.7881377516459906e-06, 0.0, -2.9444261599564925e-05, -1.0125406980514526, -0.003555882256478071], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.003512880764901638, -0.006080936174839735, -9.65590606938349e-06, -5.054346183896996e-05, -0.000348268891684711, -2.455681169521995e-05, -3.6954195820726454e-05, -7.629365427419543e-06, -4.0531076592742465e-06, -0.12897837162017822, -0.05159611254930496], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0155928134918213, -0.007055132184177637], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.10115374624729156, -0.0027251034043729305, -3.528532761265524e-05, -0.0009762050467543304, -1.1920928244535389e-07, -1.2755313036905136e-05, -0.0036649219691753387, -9.321732068201527e-05, -0.002582193585112691, -0.0027138092555105686], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[-10:][::-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[-", "1", "0", ":", "][", "::", "-", "1", "]]", "\n"], "logprobs": [-0.47753435373306274, -0.03457149863243103, -0.0007117837085388601, -0.00028701478731818497, -0.00022301571152638644, -0.14256997406482697, -0.0003002431185450405, -0.043767672032117844, -0.000816012208815664, -0.001016576774418354, -0.002683136146515608, -0.0007184546557255089, -7.033323527139146e-06, -2.5152843591058627e-05, -0.0071147894486784935, -0.9258164167404175, -0.714674174785614, -1.2783461809158325, -0.04054371267557144, -0.0772646889090538, -0.004611927084624767, -0.0018528213258832693, -4.887569048150908e-06, -0.020765285938978195, -0.14585460722446442], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.0173894502222538, -0.007564708590507507, -0.08779558539390564, -8.356221951544285e-05, -2.7418097943154862e-06, -0.01208177674561739, -0.03704606741666794], "finish_reason": "stop"}, {"text": " topics, nmf", "tokens": [" topics", ",", " nm", "f", "\n"], "logprobs": [-0.03721698746085167, -0.03875358775258064, -0.129450723528862, -1.0728830375228426e-06, -2.82196044921875], "finish_reason": "stop"}], "metrics": {"energy": 1011.7151509246833, "energy_per_token": 5.528498092484608, "time": 26.492466, "time_per_token": 0.1447675737704918}}
{"outputs": [{"text": " not isinstance(texts, list) or not all(isinstance(t, str) for t in texts):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", ")", " or", " not", " all", "(", "is", "instance", "(", "t", ",", " str", ")", " for", " t", " in", " texts", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -0.09489396959543228, -8.737658936297521e-05, -0.0003196682082489133, -0.023912714794278145, -0.44968920946121216, -0.017097108066082, -0.12891371548175812, -0.5137152671813965, -0.022008001804351807, -0.002863119123503566, -1.3232143828645349e-05, -0.0003094194398727268, -1.8957421779632568, -8.308542601298541e-05, -0.0031869832891970873, -1.9430925021879375e-05, -0.0007009433466009796, -7.510157047363464e-06, -1.2636104656849056e-05, -0.00014172980445437133, -0.017131444066762924, -0.000300600629998371], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [re.sub(ALPHANUMERIC, ' ', text.lower()).strip().split() for text in texts]", "tokens": [" [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ".", "lower", "())", ".", "strip", "()", ".", "split", "()", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -2.0891506671905518, -0.0032357024028897285, -0.0029922020621597767, -0.02693365328013897, -0.09426527470350266, -3.4570634852570947e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -5.960462772236497e-07, -1.1920928244535389e-07, -0.003795326454564929, -0.23787952959537506, -9.226373367710039e-05, -0.00016842853801790625, -0.3152303993701935, -0.601115345954895, -0.014869571663439274, -0.018634259700775146, -0.8223429322242737, -0.982551634311676, -0.005206597037613392, -0.8704811930656433, -0.057800792157649994, -0.011374978348612785, -0.03051476925611496, -0.00048828122089616954, -0.00020323118951637298, -0.0018396135419607162, -0.013051087968051434, -0.02557411603629589], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09408267587423325, -0.21771052479743958, -0.14906863868236542, -0.19555547833442688, -0.0022985723335295916, -0.0007189311436377466, -9.417489309271332e-06, -0.0021005249582231045, -0.0010388459777459502, -0.01862758956849575], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.022419564425945282, -0.015424720011651516, -0.02817614935338497, -0.27586546540260315, -1.9073304429184645e-05, -0.061393436044454575, -0.0025075203739106655, -0.002359227742999792, -0.004310364834964275, -0.018842747434973717, -0.00183723377995193, -0.014292961917817593, -4.51792984677013e-05, -0.0003110878460574895, -0.0006232702871784568, -0.00021789084712509066, -0.0001408954558428377, -0.005220708902925253], "finish_reason": "stop"}, {"text": " TfidfVectorizer(stop_words=None)", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "None", ")", "\n"], "logprobs": [-0.0006347072194330394, -4.768370445162873e-07, -1.1801649634435307e-05, 0.0, -2.264974000354414e-06, 0.0, -0.3774000406265259, -0.790956437587738, -2.861018856492592e-06, -1.4305104514278355e-06, -0.15532706677913666, -1.2046276330947876, -0.3656982481479645, -0.15189412236213684], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002858230145648122, -1.0967194612021558e-05, -2.062299427052494e-05, -0.0005164004978723824, -2.634490556374658e-05, -1.311301275563892e-06, -0.008380129933357239, -0.016046078875660896, -1.311301275563892e-06, 0.0, -1.1920928244535389e-07, -4.6491513785440475e-06, -0.0006687788409180939, -0.04497462138533592], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=0)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.00029404606902971864, -5.960462772236497e-07, -0.0004166688595432788, -0.012463891878724098, -2.861018856492592e-06, -0.00032240914879366755, -0.00023648326168768108, -0.05314990505576134, -1.1920922133867862e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.303594172000885, -0.5556124448776245, -2.3841855067985307e-07, -0.00010430268594063818, -7.271502545336261e-05, -1.4353835582733154, -0.12883973121643066, -0.0185442753136158], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.06472507864236832, -9.536738616588991e-07, -2.7418097943154862e-06, -0.00012468514614738524, 0.0, -1.7881377516459906e-06, 0.0, -3.290122185717337e-05, -0.523163914680481, -0.00015555603022221476, -0.00208291900344193, -0.013285446912050247], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.003469521179795265, -0.004398789722472429, -5.364403477869928e-06, -6.806619057897478e-05, -0.0002915434306487441, -2.610649426060263e-05, -2.706014311115723e-05, -7.510157047363464e-06, -5.006777428206988e-06, -0.1872258484363556, -0.047189731150865555], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0193510055541992, -0.006673430558294058], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.07509680837392807, -0.003113900311291218, -3.015949550899677e-05, -0.0012667496921494603, 0.0, -1.0132738680113107e-05, -0.0025694710202515125, -0.00015031162183731794, -0.002769803162664175, -0.0025586506817489862], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[-5:][::-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[-", "5", ":", "][", "::", "-", "1", "]]", "\n"], "logprobs": [-0.542334794998169, -0.027895869687199593, -0.00043704494601115584, -0.00032550760079175234, -0.000200609109015204, -0.11572521924972534, -0.00027366707217879593, -0.047313444316387177, -0.0008250646642409265, -0.000686767278239131, -0.0023894349578768015, -0.0006425699684768915, -7.033323527139146e-06, -2.539125671319198e-05, -0.006884544622153044, -0.9481977820396423, -1.3533461093902588, -0.029648350551724434, -0.08372436463832855, -0.0014385362155735493, -0.0017423938261345029, -6.6756979322235566e-06, -0.0119492681697011, -0.12136866897344589], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.012600688263773918, -0.005947629921138287, -0.06426495313644409, -0.00011085849109804258, -3.4570634852570947e-06, -0.01261681504547596, -0.046769581735134125], "finish_reason": "stop"}, {"text": " topics, nmf  # Return both topics and the nmf object", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Return", " both", " topics", " and", " the", " nm", "f", " object", "\n"], "logprobs": [-0.0408090241253376, -0.03478267788887024, -0.15060456097126007, -7.152555099310121e-07, -0.23577627539634705, -0.0002814135223161429, -1.7371253967285156, -0.8399386405944824, -0.5614805221557617, -0.021399088203907013, -0.8888626098632812, -3.2824559211730957, -1.966933996300213e-05, -0.33010563254356384, -0.7503711581230164], "finish_reason": "stop"}], "metrics": {"energy": 1180.923031435967, "energy_per_token": 5.046679621521227, "time": 30.484524, "time_per_token": 0.1302757435897436}}
{"outputs": [{"text": " num_topics <= 0:", "tokens": [" num", "_", "top", "ics", " <=", " ", "0", ":", "\n"], "logprobs": [-2.893795967102051, -8.666139910928905e-05, -0.00015793983766343445, -0.00012718822108581662, -0.7054939270019531, -0.008279405534267426, -0.012550421990454197, -0.14830435812473297, -0.0031169899739325047], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [ALPHANUMERIC.sub(' ', text.lower()) for text in texts]", "tokens": [" [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -0.925891101360321, -1.5139465176616795e-05, -5.960462772236497e-07, -3.576278118089249e-07, -2.861018856492592e-06, -1.1920928244535389e-07, -0.00017021637177094817, -2.7418097943154862e-06, -0.029126865789294243, -0.10629964619874954, -6.01988795096986e-05, -0.4512421488761902, -0.6121621131896973, -0.03733941167593002, -0.030213169753551483, -0.7732715606689453, -0.00017915551143232733, -4.053033626405522e-05, -0.0017124050064012408, -0.01850331947207451, -0.0353914350271225], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.13217085599899292, -0.22841906547546387, -0.0003999863693024963, -7.557583012385294e-05, -0.11971479654312134, -0.004493496846407652, -8.785339014139026e-05, -1.7881377516459906e-06, -0.0016801540041342378, -0.0678967535495758, -0.015818584710359573, -0.0015963680343702435, -0.00010334911348763853, -9.894321920000948e-06, -0.000971917703282088, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.0020291469991207123, -0.008207284845411777], "finish_reason": "stop"}, {"text": " not any(' '.join(word for word in text.split()) in tokenized_texts for text in tokenized_texts):", "tokens": [" not", " any", "('", " '", ".", "join", "(", "word", " for", " word", " in", " text", ".", "split", "())", " in", " token", "ized", "_", "text", "s", " for", " text", " in", " token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09520085155963898, -0.24817709624767303, -2.063239812850952, -0.002639383776113391, -1.2780892848968506, -0.07611455768346786, -0.0015359044773504138, -1.745602011680603, -0.1073012426495552, -0.007763806264847517, -0.000456109904916957, -0.05395328998565674, -0.009090346284210682, -0.0011512563796713948, -0.1995667666196823, -2.017956495285034, -0.045951638370752335, -3.516612196108326e-05, -1.3589766240329482e-05, -2.0265558760002023e-06, -3.194758028257638e-05, -0.001838185708038509, -0.01855199970304966, -3.6238969187252223e-05, -1.1563212871551514, -5.960462772236497e-07, -8.344646857949556e-07, -2.3841855067985307e-07, -3.576278118089249e-07, -0.040227945894002914, -0.007706080097705126], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.019813595339655876, -0.015553130768239498, -0.028844304382801056, -0.26142892241477966, -1.9788545614574105e-05, -0.06947337836027145, -0.0034399402793496847, -0.002028909046202898, -0.004146194085478783, -0.02160956710577011, -0.0018839959520846605, -0.015038684941828251, -4.470248313737102e-05, -0.0003494605771265924, -0.0006883158930577338, -0.00020621081057470292, -0.00018261195509694517, -0.004767479375004768], "finish_reason": "stop"}, {"text": " TfidfVectorizer(stop_words=STOPWORDS)", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n"], "logprobs": [-0.0006936766440048814, -7.152555099310121e-07, -8.22540732769994e-06, 0.0, -2.3841830625315197e-06, -1.1920928244535389e-07, -0.3299854099750519, -0.7658216953277588, -2.0265558760002023e-06, -1.311301275563892e-06, -0.15300312638282776, -0.5468551516532898, -1.1920928244535389e-07, -1.5735502529423684e-05, 0.0, -3.576278118089249e-07, -0.22458389401435852, -0.08765275776386261], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.00038211196078918874, -1.156323378381785e-05, -2.396077979938127e-05, -0.000398198957554996, -2.2291887944447808e-05, -1.6689286894688848e-06, -0.005539898294955492, -0.013929883949458599, -1.0728830375228426e-06, 0.0, -1.1920928244535389e-07, -2.145764938177308e-06, -0.0007979070069268346, -0.045031603425741196], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=None, max_iter=500)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "None", ",", " max", "_", "iter", "=", "5", "0", "0", ")", "\n"], "logprobs": [-0.0002829628065228462, -4.768370445162873e-07, -0.00041416651220060885, -0.011119423434138298, -2.9802276912960224e-06, -0.00034981805947609246, -0.00026770823751576245, -0.04658777266740799, -1.5497195136049413e-06, -2.3841855067985307e-07, 0.0, -0.30510199069976807, -0.6138010025024414, -2.3841855067985307e-07, -7.998623186722398e-05, -6.639736966462806e-05, -3.067349910736084, -0.4861932098865509, -1.0630512237548828, 0.0, -0.0002809368306770921, -0.0005644158809445798, -1.8539973497390747, -0.005283084698021412, -0.011416700668632984, -0.8655291199684143, -0.04208778589963913], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.0683450847864151, -1.0728830375228426e-06, -3.6954811548639555e-06, -0.00014935807848814875, 0.0, -1.9073468138230965e-06, 0.0, -4.672895011026412e-05, -0.4649201035499573, -0.00018880968855228275, -0.0021332381293177605, -0.01245682779699564], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.004697834141552448, -0.0048182569444179535, -5.483612312673358e-06, -5.757642793469131e-05, -0.0003225283289793879, -2.610649426060263e-05, -2.7894584491150454e-05, -1.0609570381348021e-05, -4.768360213347478e-06, -0.15094299614429474, -0.044267892837524414], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.49523964524269104, -1.927605152130127], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.09410426765680313, -0.003853041213005781, -3.0278701160568744e-05, -0.0017815446481108665, -1.1920928244535389e-07, -1.1086402082582936e-05, -0.003158107167109847, -0.00012885693286079913, -0.002790250116959214, -0.0029690254013985395], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[-num_topics:][::-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[-", "num", "_", "top", "ics", ":", "][", "::", "-", "1", "]]", "\n"], "logprobs": [-0.5183230638504028, -0.05256984755396843, -0.000730247818864882, -0.00027533553657121956, -0.00017736769223120064, -0.09205124527215958, -0.00030298411729745567, -0.039361655712127686, -0.0006155265145935118, -0.0006878394051454961, -0.0019336113473400474, -0.0005758534534834325, -8.583032467868179e-06, -2.706014311115723e-05, -0.006283172406256199, -0.9706696271896362, -2.1354012489318848, -0.0014611531514674425, -0.07783931493759155, -0.012394191697239876, -0.07373037189245224, -0.15350967645645142, -0.0011620919685810804, -0.008491363376379013, -1.3828182090946939e-05, -0.011821454390883446, -0.054570697247982025], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.012027244083583355, -0.007883860729634762, -0.09409623593091965, -9.464769391342998e-05, -3.4570634852570947e-06, -0.012828444130718708, -0.04581192880868912], "finish_reason": "stop"}, {"text": " topics, nmf  # Added to return the NMF model", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Added", " to", " return", " the", " N", "MF", " model"], "logprobs": [-0.035100165754556656, -0.04786178469657898, -0.1327301412820816, -9.536738616588991e-07, -0.19768156111240387, -0.00023112009512260556, -1.1175376176834106, -3.5205459594726562, -0.13297949731349945, -0.38700807094573975, -0.4251309037208557, -1.6569954823353328e-05, -0.7018511891365051], "finish_reason": "stop"}], "metrics": {"energy": 1204.8287802772513, "energy_per_token": 4.958143128712968, "time": 31.332813, "time_per_token": 0.12894161728395062}}
{"outputs": [{"text": " len(texts) == 0:", "tokens": [" len", "(", "text", "s", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-2.8393564224243164, -0.0037808381021022797, -0.009265164844691753, -0.00010680581908673048, -0.00784057192504406, -1.0227131843566895, -0.0027781245298683643, -0.02074088342487812, -0.2513585388660431, -0.007165092974901199], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.0817036628723145, -0.0069506047293543816], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.13440483808517456, -0.26942577958106995, -0.0004070168943144381, -6.818538531661034e-05, -0.08796034008264542, -0.005380434915423393, -8.67805938469246e-05, -5.960462772236497e-07, -0.0008673481643199921, -0.07944725453853607, -0.01922345720231533, -0.0017327546374872327, -7.784063927829266e-05, -1.2159273865108844e-05, -0.0009450022480450571, -1.1920928244535389e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.0017025275155901909, -0.01163612399250269], "finish_reason": "stop"}, {"text": " not tokenized_texts:", "tokens": [" not", " token", "ized", "_", "text", "s", ":", "\n"], "logprobs": [-0.0945947989821434, -1.5527570247650146, -1.7881377516459906e-06, -2.3841855067985307e-07, -8.344646857949556e-07, -1.1920928244535389e-07, -0.34278804063796997, -0.01775396801531315], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.02589593641459942, -0.014384268783032894, -0.02505224570631981, -0.25755542516708374, -2.4318398573086597e-05, -0.0665455311536789, -0.0034646503627300262, -0.0023858672939240932, -0.004479255992919207, -0.021799705922603607, -0.0016087458934634924, -0.010816161520779133, -4.339123915997334e-05, -0.0003060825983993709, -0.0007740838918834925, -0.00020001317898277193, -0.0002094287920044735, -0.005299093201756477], "finish_reason": "stop"}, {"text": " TfidfVectorizer(stop_words=STOPWORDS)", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n"], "logprobs": [-0.0006450717919506133, -7.152555099310121e-07, -1.3112935448589269e-05, 0.0, -2.264974000354414e-06, -1.1920928244535389e-07, -0.37044477462768555, -0.7830564975738525, -2.7418097943154862e-06, -1.7881377516459906e-06, -0.11600550264120102, -0.5476604700088501, -1.1920928244535389e-07, -1.3708974620385561e-05, 0.0, -3.576278118089249e-07, -0.2957042455673218, -0.091659314930439], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002954761730507016, -1.1920858014491387e-05, -1.847726889536716e-05, -0.0004078510100953281, -2.5152843591058627e-05, -1.4305104514278355e-06, -0.006929413881152868, -0.021084105595946312, -9.536738616588991e-07, 0.0, -1.1920928244535389e-07, -2.145764938177308e-06, -0.0007250064518302679, -0.0397159606218338], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, init='random', random_state=0)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " init", "='", "random", "'", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.0003736513026524335, -5.960462772236497e-07, -0.00037102968781255186, -0.009998594410717487, -2.264974000354414e-06, -0.0003363520372658968, -0.0002146728802472353, -0.061877861618995667, -1.1920922133867862e-06, -5.960462772236497e-07, 0.0, -0.2782987654209137, -1.3937538862228394, -0.024119988083839417, -0.26758313179016113, -0.06320686638355255, -1.1801649634435307e-05, -0.004689646884799004, 0.0, -2.9802276912960224e-06, -4.8993817472364753e-05, -0.10536625236272812, -0.06562048196792603, -0.015291010029613972], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.05417430400848389, -9.536738616588991e-07, -2.861018856492592e-06, -0.0001102625101339072, 0.0, -1.9073468138230965e-06, 0.0, -2.2053474822314456e-05, -0.4575110375881195, -0.0002796259068418294, -0.0018703126115724444, -0.011752179823815823], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.004663899540901184, -0.0057420069351792336, -8.4638240878121e-06, -6.0794889577664435e-05, -0.00025876989820972085, -3.0278701160568744e-05, -3.93382906622719e-05, -9.775113539944869e-06, -5.8412379075889476e-06, -0.13494683802127838, -0.05559894070029259], "finish_reason": "stop"}, {"text": " [feature_names[ind] for ind in nmf.components_.argsort(axis=1)[:, -1:-num_topics - 1:-1]]", "tokens": [" [", "feature", "_", "names", "[", "ind", "]", " for", " ind", " in", " nm", "f", ".", "components", "_", ".", "args", "ort", "(", "axis", "=", "1", ")", "[:", ",", " -", "1", ":-", "num", "_", "top", "ics", " -", " ", "1", ":-", "1", "]]", "\n"], "logprobs": [-0.6062082052230835, -1.0077228546142578, -0.0013196102809160948, -0.0014359173364937305, -0.18195347487926483, -3.333927631378174, -0.1267879754304886, -0.09031403809785843, -0.848025381565094, -0.06270494312047958, -0.11636444926261902, -5.245195097813848e-06, -3.790783375734463e-05, -0.018888136371970177, -0.00016985881666187197, -0.00018034738604910672, -1.4588632583618164, -3.4689302992774174e-05, -0.5617629885673523, -0.0071794139221310616, -0.09833786636590958, -0.0055709583684802055, -0.007911181077361107, -0.12929245829582214, -0.0010275328531861305, -0.05189506709575653, -0.21365828812122345, -2.4913792610168457, -0.742667019367218, -0.005526502151042223, -0.14171183109283447, -0.0020409247372299433, -0.030657904222607613, -0.0010400369064882398, -0.001105531700886786, -0.026745067909359932, -0.00021669900161214173, -0.008699849247932434, -0.00836440734565258], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.07997792959213257, -0.0037936640437692404, -3.158996332786046e-05, -0.0013159195659682155, 0.0, -1.3947389561508317e-05, -0.0023755207657814026, -0.00018106251081917435, -0.002083513652905822, -0.0035265416372567415], "finish_reason": "stop"}, {"text": " list(feature_names[topic.argsort()[-10:][::-1]])", "tokens": [" list", "(", "feature", "_", "names", "[", "topic", ".", "args", "ort", "()", "[-", "1", "0", ":", "][", "::", "-", "1", "]]", ")", "\n"], "logprobs": [-1.3039524555206299, -0.06671817600727081, -0.1239742636680603, -6.198863957251888e-06, -2.861018856492592e-06, -0.0026129886973649263, -0.036856621503829956, -0.004083628766238689, -8.511180931236595e-05, -1.0490362910786644e-05, -0.011838182806968689, -0.11270467191934586, -0.8623456358909607, -0.42204058170318604, -0.037557587027549744, -0.42512667179107666, -0.022279443219304085, -0.0013385392958298326, -1.0609570381348021e-05, -0.0006266061100177467, -0.01453830860555172, -0.10034935921430588], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.01888497732579708, -0.007430771831423044, -0.06890015304088593, -8.248942322097719e-05, -2.0265558760002023e-06, -0.014380273409187794, -0.03585560992360115], "finish_reason": "stop"}, {"text": " topics, nmf  # Add nmf to the return", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Add", " nm", "f", " to", " the", " return", "\n"], "logprobs": [-0.04761538654565811, -0.04318248853087425, -0.13834252953529358, -8.344646857949556e-07, -0.21967647969722748, -0.0002746204845607281, -3.256296157836914, -2.34725284576416, -4.541770613286644e-05, -0.7311042547225952, -0.06564124673604965, -0.1846906542778015, -2.551694869995117], "finish_reason": "stop"}], "metrics": {"energy": 1234.7251524848937, "energy_per_token": 5.3683702281951895, "time": 31.938124, "time_per_token": 0.13886140869565217}}
{"outputs": [{"text": " not isinstance(texts, list):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -0.09489396959543228, -8.737658936297521e-05, -0.0003196682082489133, -0.023912714794278145, -1.0162098407745361, -0.002744956873357296], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [ALPHANUMERIC.sub(' ', text) for text in texts]", "tokens": [" [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -0.925891101360321, -1.5139465176616795e-05, -5.960462772236497e-07, -3.576278118089249e-07, -2.861018856492592e-06, -1.1920928244535389e-07, -0.00017021637177094817, -2.7418097943154862e-06, -0.029126865789294243, -0.10629964619874954, -6.01988795096986e-05, -0.4512421488761902, -0.7827591896057129, -1.9305715560913086, -0.00012766500003635883, -6.0437283536884934e-05, -0.006637904793024063, -0.007942521944642067, -0.1918955147266388], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.15550054609775543, -0.2535555958747864, -0.00035601475974544883, -7.533743337262422e-05, -0.11616769433021545, -0.006835529115051031, -0.00014208737411536276, -1.311301275563892e-06, -0.0012309125158935785, -0.06757468730211258, -0.01760721765458584, -0.0019016055157408118, -9.727005090098828e-05, -9.059865078597795e-06, -0.000934045237954706, -1.1920928244535389e-07, -1.7881377516459906e-06, -3.576278118089249e-07, -0.002066145185381174, -0.013208979740738869], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09472460299730301, -0.2915370464324951, -0.13046519458293915, -0.1565168797969818, -0.0021084952168166637, -0.0005709686665795743, -9.894321920000948e-06, -0.0016663487767800689, -0.0008831891464069486, -0.018096109852194786], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.028333524242043495, -0.01313686091452837, -0.030971506610512733, -0.3316493332386017, -1.7404405298293568e-05, -0.07303737103939056, -0.004250302445143461, -0.0020258158911019564, -0.0044505358673632145, -0.01585683785378933, -0.0021099227014929056, -0.014348075725138187, -5.2689116273541003e-05, -0.00039867559098638594, -0.0006125480867922306, -0.00018070495571009815, -0.00016080040950328112, -0.005199718754738569], "finish_reason": "stop"}, {"text": " TfidfVectorizer(use_idf=True)  # Default values", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "use", "_", "id", "f", "=", "True", ")", "  ", "#", " Default", " values", "\n"], "logprobs": [-0.0007956438348628581, -7.152555099310121e-07, -1.168244216387393e-05, 0.0, -2.264974000354414e-06, -1.1920928244535389e-07, -0.35956430435180664, -3.606184959411621, -7.152555099310121e-07, -1.0371154530730564e-05, -5.960462772236497e-07, -0.011671707965433598, -0.0673280879855156, -0.3878414034843445, -3.018095016479492, -6.651657167822123e-05, -3.627406597137451, -3.359034776687622, -0.9622188210487366], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0003634030872490257, -8.940656698541716e-06, -2.1576648578047752e-05, -0.00040284625720232725, -3.1470757676288486e-05, -1.6689286894688848e-06, -0.005437465384602547, -0.0210187379270792, -1.0728830375228426e-06, 0.0, -1.1920928244535389e-07, -1.7881377516459906e-06, -0.0008449559682048857, -0.04297284781932831], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=0)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.0003305127320345491, -4.768370445162873e-07, -0.0005050813779234886, -0.011138285510241985, -2.0265558760002023e-06, -0.0003406421164982021, -0.00021145492792129517, -0.04535633698105812, -1.1920922133867862e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.306901216506958, -0.6273206472396851, -2.3841855067985307e-07, -6.151010165922344e-05, -5.543078441405669e-05, -1.298578143119812, -0.1242791935801506, -0.021313438192009926], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.049447257071733475, -8.344646857949556e-07, -3.3378546504536644e-06, -0.00017653337272349745, 0.0, -1.7881377516459906e-06, 0.0, -4.577531944960356e-05, -0.4445410370826721, -0.00014530557382386178, -0.0025179844815284014, -0.01257337722927332], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.003922151867300272, -0.005706092808395624, -3.814689989667386e-06, -6.48477507638745e-05, -0.000271879427600652, -2.8371408916427754e-05, -2.3245540432981215e-05, -8.106198947643861e-06, -6.794906312279636e-06, -0.17634429037570953, -0.04022691398859024], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.5924312472343445, -1.783706784248352], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.0764622613787651, -0.004614300560206175, -2.9801878554280847e-05, -0.0011337526375427842, 0.0, -1.1205610462639015e-05, -0.002977582858875394, -0.00015436411194968969, -0.0023254514671862125, -0.0029998086392879486], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[:-11:-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[:", "-", "1", "1", ":-", "1", "]]", "\n"], "logprobs": [-0.6257659196853638, -0.04578733071684837, -0.0005175919504836202, -0.000251142424531281, -0.00018809456378221512, -0.12992307543754578, -0.0003097769513260573, -0.046341631561517715, -0.0006668727728538215, -0.0006349454633891582, -0.002204132964834571, -0.0007001094636507332, -6.318072337307967e-06, -2.8967437174287625e-05, -0.00599574064835906, -0.4600779712200165, -0.006587693467736244, -0.9174565672874451, -0.18296372890472412, -0.00017772526189219207, -0.0003165697562508285, -0.05323682725429535, -0.15006761252880096], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.01796533167362213, -0.007032167632132769, -0.09136897325515747, -6.961580220377073e-05, -4.172316494077677e-06, -0.012782072648406029, -0.035375095903873444], "finish_reason": "stop"}, {"text": " topics, nmf  # Updated return type to include the NMF model", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Updated", " return", " type", " to", " include", " the", " N", "MF", " model", "\n"], "logprobs": [-0.04456802085042, -0.03938434645533562, -0.12497210502624512, -7.152555099310121e-07, -0.2044300138950348, -0.00023731753753963858, -4.032444477081299, -0.8620569109916687, -1.0858086347579956, -0.8437058329582214, -0.26364666223526, -0.45520928502082825, -0.3298840820789337, -1.5020257706055418e-05, -0.6088648438453674, -0.7148926258087158], "finish_reason": "stop"}], "metrics": {"energy": 1053.8686763801588, "energy_per_token": 4.9710786621705605, "time": 27.955355, "time_per_token": 0.1318648820754717}}
{"outputs": [{"text": " not isinstance(texts, list) or not isinstance(num_topics, int):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", ")", " or", " not", " isinstance", "(", "num", "_", "top", "ics", ",", " int", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -0.09489396959543228, -8.737658936297521e-05, -0.0003196682082489133, -0.023912714794278145, -0.44968920946121216, -0.017097108066082, -0.12891371548175812, -0.9993224143981934, -9.07141511561349e-05, -0.013056265190243721, -3.4570634852570947e-06, -2.002696055569686e-05, -0.0012255546171218157, -2.5629668016335927e-05, -0.00688146660104394, -0.1894567906856537, -0.000636255950666964], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " preprocess_text(texts)", "tokens": [" pre", "process", "_", "text", "(", "text", "s", ")", "\n"], "logprobs": [-2.860689640045166, -0.016377078369259834, -0.07265853881835938, -0.03349718451499939, -2.0518264770507812, -0.004513789899647236, -0.000129691296024248, -0.017164841294288635, -0.03362663835287094], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.13440483808517456, -0.26942577958106995, -0.0004070168943144381, -6.818538531661034e-05, -0.08796034008264542, -0.005380434915423393, -8.67805938469246e-05, -5.960462772236497e-07, -0.0008673481643199921, -0.07944725453853607, -0.01922345720231533, -0.0017327546374872327, -7.784063927829266e-05, -1.2159273865108844e-05, -0.0009450022480450571, -1.1920928244535389e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.0017025275155901909, -0.01163612399250269], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.0945947989821434, -0.24607445299625397, -0.12765280902385712, -0.18415643274784088, -0.001960857305675745, -0.0005946775199845433, -1.2993727978027891e-05, -0.0017164511373266578, -0.0008002892718650401, -0.016707733273506165], "finish_reason": "stop"}, {"text": " [], None", "tokens": [" []", ",", " None", "\n"], "logprobs": [-0.02208438143134117, -0.015452423132956028, -0.03430221974849701, -1.433433175086975], "finish_reason": "stop"}, {"text": " TfidfVectorizer(min_df=1, stop_words=STOPWORDS, token_pattern=r\"(?u)\\b\\w\\w+\\b\")", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "min", "_", "df", "=", "1", ",", " stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ",", " token", "_", "pattern", "=", "r", "\"", "(", "?", "u", ")\\", "b", "\\", "w", "\\", "w", "+\\", "b", "\"", ")", "\n"], "logprobs": [-0.0008289953111670911, -8.344646857949556e-07, -8.22540732769994e-06, 0.0, -2.3841830625315197e-06, -1.1920928244535389e-07, -0.4682618975639343, -2.5398569107055664, -1.5497195136049413e-06, -8.106198947643861e-06, -0.00043215948971919715, -0.18480214476585388, -1.1476902961730957, -0.44675588607788086, -3.099436753473128e-06, -5.602820692729438e-06, -0.18987274169921875, -1.0918216705322266, 0.0, -1.2636104656849056e-05, 0.0, -1.1920928244535389e-07, -2.0275745391845703, -0.8215839862823486, -0.3045940101146698, -0.0014886498684063554, -0.46370652318000793, -0.02399255707859993, -1.1724035739898682, -0.5523528456687927, -0.00040999590419232845, -0.0028084381483495235, -0.0542030967772007, -0.012494266964495182, -0.05341539904475212, -0.0009227308910340071, -0.34447962045669556, -0.0003313469351269305, -0.0012007892364636064, -0.00048101297579705715, -0.007821055129170418, -0.05405426025390625, -0.16150182485580444], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.000339569611242041, -1.1205610462639015e-05, -1.7881233361549675e-05, -0.0005021026590839028, -1.883488948806189e-05, -1.4305104514278355e-06, -0.005934001877903938, -0.01828925870358944, -1.0728830375228426e-06, 0.0, -1.1920928244535389e-07, -3.576272320060525e-06, -0.0006137394811958075, -0.04917855188250542], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=1, max_iter=2000, alpha=.1, l1_ratio=.5)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "1", ",", " max", "_", "iter", "=", "2", "0", "0", "0", ",", " alpha", "=", ".", "1", ",", " l", "1", "_", "ratio", "=", ".", "5", ")", "\n"], "logprobs": [-0.00035279724397696555, -4.768370445162873e-07, -0.0004808938247151673, -0.010441319085657597, -2.7418097943154862e-06, -0.0003212174342479557, -0.00020108585886191577, -0.06562818586826324, -1.1920922133867862e-06, -2.3841855067985307e-07, 0.0, -0.24471049010753632, -0.5948819518089294, -2.3841855067985307e-07, -0.00011097769311163574, -6.329813186312094e-05, -0.6108849048614502, -0.3118847906589508, -0.9198060035705566, 0.0, -0.00015317220822907984, -0.00014530557382386178, -0.75435471534729, -0.04879818111658096, -0.0025383178144693375, -0.8586872220039368, -1.1799379587173462, -0.21924573183059692, -0.0004300146538298577, -0.06560797989368439, -0.04323751479387283, -0.015702296048402786, -4.470248313737102e-05, -0.006457889452576637, -4.768370445162873e-07, -7.116541382856667e-05, -1.5497195136049413e-06, -0.0002746204845607281, -4.7205765440594405e-05, -0.061364512890577316, -0.0063303192146122456], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.05442112311720848, -8.344646857949556e-07, -4.0531076592742465e-06, -0.00012838016846217215, 0.0, -1.9073468138230965e-06, 0.0, -4.160317621426657e-05, -0.422915518283844, -0.00021240839851088822, -0.0018364008283242583, -0.012829503044486046], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.004472491331398487, -0.00488647073507309, -4.172316494077677e-06, -6.639736966462806e-05, -0.0003507714136503637, -2.3841574147809297e-05, -3.135155202471651e-05, -5.364403477869928e-06, -3.576272320060525e-06, -0.1864844560623169, -0.04286092892289162], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.5436980724334717, -1.9599217176437378], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.12181349843740463, -0.004911145195364952, -2.992108420585282e-05, -0.0011876918142661452, 0.0, -1.4424220353248529e-05, -0.003875128459185362, -0.00014435203047469258, -0.0022908414248377085, -0.0022904847282916307], "finish_reason": "stop"}, {"text": " list(feature_names[topic.argsort()[:-num_topics - 1:-1]])", "tokens": [" list", "(", "feature", "_", "names", "[", "topic", ".", "args", "ort", "()", "[:", "-", "num", "_", "top", "ics", " -", " ", "1", ":-", "1", "]]", ")", "\n"], "logprobs": [-1.3186523914337158, -0.08172833919525146, -0.116550974547863, -5.364403477869928e-06, -2.9802276912960224e-06, -0.003287270897999406, -0.04168595373630524, -0.005239445716142654, -7.390703103737906e-05, -1.4662635294371285e-05, -0.012493913061916828, -2.917811155319214, -0.0023807534016668797, -0.4654928147792816, -0.00027938754647038877, -0.013439655303955078, -0.0006367324967868626, -0.010576977394521236, -0.001839375589042902, -0.0010921949287876487, -7.223821739898995e-05, -0.0008432884933426976, -0.00030524839530698955, -0.014706303365528584, -0.06513920426368713], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.017895545810461044, -0.00678260438144207, -0.09074818342924118, -0.00010299152199877426, -3.4570634852570947e-06, -0.013579846359789371, -0.03557172417640686], "finish_reason": "stop"}, {"text": " topics, nmf  # Adjusted to return the topics and the fitted NMF model", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Adjust", "ed", " to", " return", " the", " topics", " and", " the", " fitted", " N", "MF", " model"], "logprobs": [-0.03695864602923393, -0.043858837336301804, -0.1582120954990387, -9.536738616588991e-07, -0.21311600506305695, -0.00025078488397412, -1.5912142992019653, -0.024506373330950737, -0.04421063885092735, -0.09594451636075974, -1.6918662786483765, -0.21729563176631927, -0.6564050912857056, -1.2636072635650635, -2.176917791366577, -0.1843392699956894, -3.8265450712060556e-05, -0.4186120629310608], "finish_reason": "stop"}], "metrics": {"energy": 1250.2220750122076, "energy_per_token": 5.041218044404063, "time": 33.346577, "time_per_token": 0.13446200403225808}}
{"outputs": [{"text": " len(texts) <= 0:", "tokens": [" len", "(", "text", "s", ")", " <=", " ", "0", ":", "\n"], "logprobs": [-2.8393564224243164, -0.0037808381021022797, -0.009265164844691753, -0.00010680581908673048, -0.00784057192504406, -2.1976284980773926, -0.2095399796962738, -0.48891395330429077, -0.16246800124645233, -0.007361548021435738], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.31769415736198425, -2.5928375720977783], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09408267587423325, -0.21771052479743958, -0.14906863868236542, -0.19555547833442688, -0.0022985723335295916, -0.0007189311436377466, -9.417489309271332e-06, -0.0021005249582231045, -0.0010388459777459502, -0.01862758956849575], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.022419564425945282, -0.015424720011651516, -0.02817614935338497, -0.27586546540260315, -1.9073304429184645e-05, -0.061393436044454575, -0.0025075203739106655, -0.002359227742999792, -0.004310364834964275, -0.018842747434973717, -0.00183723377995193, -0.014292961917817593, -4.51792984677013e-05, -0.0003110878460574895, -0.0006232702871784568, -0.00021789084712509066, -0.0001408954558428377, -0.005220708902925253], "finish_reason": "stop"}, {"text": " TfidfVectorizer(min_df=1, token_pattern='[^_]+')  # Min_df changed to 1", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "min", "_", "df", "=", "1", ",", " token", "_", "pattern", "='", "[", "^", "_", "]+", "')", "  ", "#", " Min", "_", "df", " changed", " to", " ", "1", "\n"], "logprobs": [-0.0006347072194330394, -4.768370445162873e-07, -1.1801649634435307e-05, 0.0, -2.264974000354414e-06, 0.0, -0.3774000406265259, -2.4102115631103516, -1.5497195136049413e-06, -8.940656698541716e-06, -0.0004469349514693022, -0.18559518456459045, -1.3110885620117188, -1.6690397262573242, -0.45950931310653687, -0.0007095203618519008, -1.2680398225784302, -0.3662624955177307, -0.028775736689567566, -3.0016095638275146, -0.735364556312561, -0.23444175720214844, -1.251438856124878, -7.86750388215296e-05, -4.020475387573242, -1.7566369771957397, -0.017608271911740303, -1.684956669807434, -0.4063713252544403, -0.2888367474079132, -0.009212013334035873, -0.8261385560035706], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002858230145648122, -1.0967194612021558e-05, -2.062299427052494e-05, -0.0005164004978723824, -2.634490556374658e-05, -1.311301275563892e-06, -0.008380129933357239, -0.016046078875660896, -1.311301275563892e-06, 0.0, -1.1920928244535389e-07, -4.6491513785440475e-06, -0.0006687788409180939, -0.04497462138533592], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n"], "logprobs": [-0.00029404606902971864, -5.960462772236497e-07, -0.0004166688595432788, -0.012463891878724098, -2.861018856492592e-06, -0.00032240914879366755, -0.00023648326168768108, -0.05314990505576134, -1.1920922133867862e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.342597484588623, -0.02314388006925583], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.060849327594041824, -7.152555099310121e-07, -3.4570634852570947e-06, -0.00013565097469836473, 0.0, -1.7881377516459906e-06, 0.0, -3.6238969187252223e-05, -0.4461958408355713, -0.00020859450160060078, -0.0017406088300049305, -0.011265715584158897], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.0036893889773637056, -0.005390276201069355, -4.768360213347478e-06, -5.829164365422912e-05, -0.0002971446083392948, -2.610649426060263e-05, -3.504691630951129e-05, -8.22540732769994e-06, -4.529942543740617e-06, -0.17353272438049316, -0.04767517372965813], "finish_reason": "stop"}, {"text": " [sorted(enumerate(component), key=lambda x: x[1], reverse=True) for component in nmf.components_]", "tokens": [" [", "s", "orted", "(", "enumerate", "(", "component", ")", ",", " key", "=", "lambda", " x", ":", " x", "[", "1", "]", ",", " reverse", "=", "True", ")", " for", " component", " in", " nm", "f", ".", "components", "_", "]", "\n"], "logprobs": [-0.5306078791618347, -1.3414902687072754, -2.312633478140924e-05, -0.042168933898210526, -1.3059204816818237, -0.0007944526732899249, -0.559766411781311, -0.002617031103000045, -5.61460001335945e-05, -0.03341555967926979, -0.0001714082609396428, -0.0004505096294451505, -0.12731017172336578, -0.0005569098866544664, -0.12173867225646973, -0.00010489867418073118, -0.0009548871894367039, -0.0018277144990861416, -0.00014673586701974273, -0.0011463745031505823, -2.3603161025675945e-05, -0.0002944036095868796, -0.012498034164309502, -0.2633347511291504, -0.0011959074763581157, -0.0001938155182870105, -0.015392439439892769, -7.152555099310121e-07, -1.9073304429184645e-05, -0.0017146660247817636, -6.794906312279636e-06, -0.01616303250193596, -0.00176214799284935], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.08004472404718399, -0.004044805187731981, -2.992108420585282e-05, -0.001369848963804543, -1.1920928244535389e-07, -1.3351351299206726e-05, -0.0031515713781118393, -0.00017998983094003052, -0.002595986006781459, -0.0032515060156583786], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[-1:-11:-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[-", "1", ":-", "1", "1", ":-", "1", "]]", "\n"], "logprobs": [-0.4570049047470093, -0.027551034465432167, -0.0006666345288977027, -0.0003079893649555743, -0.00016485285595990717, -0.14638353884220123, -0.0003064401389565319, -0.03561175987124443, -0.0007784912013448775, -0.0009616755996830761, -0.002784900600090623, -0.0006326819420792162, -1.0490362910786644e-05, -2.455681169521995e-05, -0.005944667384028435, -1.0979875326156616, -0.7655422687530518, -0.6439774036407471, -1.5401172637939453, -0.10852421075105667, -0.01351622212678194, -7.092700980138034e-05, -0.019860342144966125, -0.1773349791765213], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.016017219051718712, -0.007238117046654224, -0.10557082295417786, -8.964136941358447e-05, -2.3841830625315197e-06, -0.012957658618688583, -0.047955647110939026], "finish_reason": "stop"}, {"text": " topics, nmf  # Return both the topics and the fitted NMF model<|endoftext|>from flask_login import current_user", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Return", " both", " the", " topics", " and", " the", " fitted", " N", "MF", " model", "<", "|", "end", "of", "text", "|>", "from", " fl", "ask", "_", "login", " import", " current", "_", "user", "\n"], "logprobs": [-0.036450959742069244, -0.04140589386224747, -0.14435717463493347, -8.344646857949556e-07, -0.19378437101840973, -0.0002992897352669388, -1.5735523700714111, -0.7587792873382568, -0.6808364391326904, -0.20497149229049683, -0.03877606615424156, -0.0927947610616684, -1.2390649318695068, -0.16871508955955505, -3.099393507000059e-05, -0.3807098865509033, -1.3106977939605713, -2.264974000354414e-06, -2.145764938177308e-06, -8.821448318485636e-06, -1.0847986231965479e-05, -0.06628372520208359, -1.8509416580200195, -4.069387435913086, -0.08584114909172058, -1.940362811088562, -2.8074522018432617, -0.0299636572599411, -0.612002432346344, -2.264974000354414e-06, -2.884823152271565e-05, -0.04678710177540779], "finish_reason": "stop"}], "metrics": {"energy": 1246.9477698469152, "energy_per_token": 4.9877910793876605, "time": 31.938395, "time_per_token": 0.12775358}}
{"outputs": [{"text": " not isinstance(num_topics, int) or num_topics <= 0:", "tokens": [" not", " isinstance", "(", "num", "_", "top", "ics", ",", " int", ")", " or", " num", "_", "top", "ics", " <=", " ", "0", ":", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -2.4044604301452637, -7.271740287251305e-06, -0.0006845038151368499, -0.00033408781746402383, -7.581423415103927e-05, -0.011409982107579708, -0.4021739661693573, -0.007957660593092442, -0.013157450594007969, -3.576278118089249e-07, -4.768360213347478e-06, 0.0, -0.3600209951400757, -0.0007211944903247058, -0.014385444112122059, -0.01196658331900835, -0.001279012649320066], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [re.sub(ALPHANUMERIC, ' ', text.lower()) for text in texts]", "tokens": [" [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -2.0891506671905518, -0.0032357024028897285, -0.0029922020621597767, -0.02693365328013897, -0.09426527470350266, -3.4570634852570947e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -5.960462772236497e-07, -1.1920928244535389e-07, -0.003795326454564929, -0.23787952959537506, -9.226373367710039e-05, -0.00016842853801790625, -0.3152303993701935, -0.601115345954895, -0.014869571663439274, -0.018634259700775146, -0.6058207154273987, -0.00019464982324279845, -5.9960475482512265e-05, -0.0010209829779341817, -0.015215636231005192, -0.035604510456323624], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09408267587423325, -0.21771052479743958, -0.14906863868236542, -0.19555547833442688, -0.0022985723335295916, -0.0007189311436377466, -9.417489309271332e-06, -0.0021005249582231045, -0.0010388459777459502, -0.01862758956849575], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.022419564425945282, -0.015424720011651516, -0.02817614935338497, -0.27586546540260315, -1.9073304429184645e-05, -0.061393436044454575, -0.0025075203739106655, -0.002359227742999792, -0.004310364834964275, -0.018842747434973717, -0.00183723377995193, -0.014292961917817593, -4.51792984677013e-05, -0.0003110878460574895, -0.0006232702871784568, -0.00021789084712509066, -0.0001408954558428377, -0.005220708902925253], "finish_reason": "stop"}, {"text": " TfidfVectorizer(min_df=1, stop_words=None)  # To match the tokenized texts", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "min", "_", "df", "=", "1", ",", " stop", "_", "words", "=", "None", ")", "  ", "#", " To", " match", " the", " token", "ized", " texts", "\n"], "logprobs": [-0.0006347072194330394, -4.768370445162873e-07, -1.1801649634435307e-05, 0.0, -2.264974000354414e-06, 0.0, -0.3774000406265259, -2.4102115631103516, -1.5497195136049413e-06, -8.940656698541716e-06, -0.0004469349514693022, -0.18559518456459045, -1.3110885620117188, -0.5082406401634216, -8.22540732769994e-06, -4.6491513785440475e-06, -0.21489889919757843, -0.3718707859516144, -0.13097983598709106, -1.902414321899414, -3.302042750874534e-05, -4.597497940063477, -1.1201050281524658, -0.18472544848918915, -1.2927781343460083, -0.11870332807302475, -0.58891361951828, -0.27400293946266174], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002858230145648122, -1.0967194612021558e-05, -2.062299427052494e-05, -0.0005164004978723824, -2.634490556374658e-05, -1.311301275563892e-06, -0.008380129933357239, -0.016046078875660896, -1.311301275563892e-06, 0.0, -1.1920928244535389e-07, -4.6491513785440475e-06, -0.0006687788409180939, -0.04497462138533592], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=1)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "1", ")", "\n"], "logprobs": [-0.00029404606902971864, -5.960462772236497e-07, -0.0004166688595432788, -0.012463891878724098, -2.861018856492592e-06, -0.00032240914879366755, -0.00023648326168768108, -0.05314990505576134, -1.1920922133867862e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.303594172000885, -0.5556124448776245, -2.3841855067985307e-07, -0.00010430268594063818, -7.271502545336261e-05, -0.5609100461006165, -1.1676466464996338, -0.019489459693431854], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.06138536334037781, -7.152555099310121e-07, -3.576272320060525e-06, -0.0001641377166379243, 0.0, -1.7881377516459906e-06, 0.0, -3.421248038648628e-05, -0.5805898308753967, -0.00016199229867197573, -0.0019094583112746477, -0.01313650794327259], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names(", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "(", "\n"], "logprobs": [-0.0033179253805428743, -0.006563178729265928, -5.483612312673358e-06, -6.186770770000294e-05, -0.0003163314249832183, -3.2305197237292305e-05, -2.3841574147809297e-05, -9.059865078597795e-06, -6.9141146923357155e-06, -2.446951150894165, -0.0020722122862935066], "finish_reason": "stop"}, {"text": " [feature_names.tolist() if isinstance(feature_names, np.ndarray) else feature_names for _ in", "tokens": [" [", "feature", "_", "names", ".", "tol", "ist", "()", " if", " isinstance", "(", "feature", "_", "names", ",", " np", ".", "nd", "array", ")", " else", " feature", "_", "names", " for", " _", " in", "\n"], "logprobs": [-0.6045081615447998, -1.3049625158309937, -0.001401038491167128, -0.0014379409840330482, -1.5720489025115967, -0.003677512053400278, 0.0, -0.0861501693725586, -0.4292795956134796, -0.6749733090400696, -1.847726889536716e-05, -0.026545071974396706, -1.0490362910786644e-05, -7.271740287251305e-06, -0.0019181440584361553, -0.17475834488868713, -8.666139910928905e-05, -1.883488948806189e-05, -2.145764938177308e-06, -7.986703712958843e-05, -0.09370110183954239, -0.05262696370482445, -5.960446742392378e-06, -1.0490362910786644e-05, -0.23670680820941925, -0.28468409180641174, -0.005445409100502729, -0.5289804339408875], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.09185562282800674, -0.0038134963251650333, -3.58813522325363e-05, -0.0010633773636072874, 0.0, -1.4781842764932662e-05, -0.002566617215052247, -0.00010907054820563644, -0.0017805927200242877, -0.00327800284139812], "finish_reason": "stop"}, {"text": " list({feature_names[i] for i in topic.argsort()[:-num_topics - 1:-1]})", "tokens": [" list", "({", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[:", "-", "num", "_", "top", "ics", " -", " ", "1", ":-", "1", "]", "})", "\n"], "logprobs": [-1.2289568185806274, -2.9767346382141113, -0.05846969038248062, -0.004157471936196089, -0.010610711760818958, -0.00012933371181134135, -0.170864075422287, -0.22579792141914368, -0.04071677848696709, -0.006912484765052795, -0.00159708212595433, -0.006765909492969513, -0.001311990898102522, -9.059865078597795e-06, -2.8729025871143676e-05, -0.005309646483510733, -0.07348816096782684, -0.013299562968313694, -0.9698840975761414, -0.0002232540718978271, -0.013368376530706882, -0.0021018334664404392, -0.015614043921232224, -0.0009363081189803779, -0.0017861855449154973, -0.00017581824795342982, -0.0016434985445812345, -0.007437634747475386, -0.016343185678124428, -0.032990965992212296], "finish_reason": "stop"}, {"text": "append(list(topic_keywords))  # Added a call to list() to ensure the result is a list", "tokens": ["append", "(", "list", "(", "topic", "_", "keywords", "))", "  ", "#", " Added", " a", " call", " to", " list", "()", " to", " ensure", " the", " result", " is", " a", " list", "\n"], "logprobs": [-0.018699197098612785, -0.005825090687721968, -2.588796615600586, -0.0005043664714321494, -0.016583573073148727, -0.00012563870404846966, -8.702239938429557e-06, -0.004510467406362295, -0.7148448824882507, -2.8967437174287625e-05, -2.600715398788452, -3.165855884552002, -1.2476829290390015, -0.0005129451747052372, -0.0683382973074913, -0.7050891518592834, -0.7420709133148193, -1.2690186500549316, -0.47375214099884033, -0.23847128450870514, -0.0015438791597262025, -0.005130103323608637, -0.005838009063154459, -0.04478849843144417], "finish_reason": "stop"}, {"text": " topics, nmf<|endoftext|>def task_func(lst, x, y):", "tokens": [" topics", ",", " nm", "f", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "lst", ",", " x", ",", " y", "):", "\n"], "logprobs": [-0.04385267570614815, -0.03509417921304703, -0.15024355053901672, -9.536738616588991e-07, -3.1921193599700928, -5.960462772236497e-07, -2.7418097943154862e-06, -7.629365427419543e-06, -8.106198947643861e-06, -0.07339390367269516, -2.16251540184021, -0.6231733560562134, -0.03326820582151413, -0.12849844992160797, -0.08149299770593643, -4.448331832885742, -1.4727818965911865, -3.24777889251709, -2.132103443145752, -0.3280995190143585, -0.17112630605697632, -0.007562697399407625], "finish_reason": "stop"}], "metrics": {"energy": 1355.1728163757336, "energy_per_token": 4.625163195821616, "time": 37.15016, "time_per_token": 0.12679235494880545}}
{"outputs": [{"text": " not isinstance(texts, list) or not all(isinstance(text, str) for text in texts):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", ")", " or", " not", " all", "(", "is", "instance", "(", "text", ",", " str", ")", " for", " text", " in", " texts", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -0.09489396959543228, -8.737658936297521e-05, -0.0003196682082489133, -0.023912714794278145, -0.44968920946121216, -0.017097108066082, -0.12891371548175812, -0.5137152671813965, -0.022008001804351807, -0.002863119123503566, -1.3232143828645349e-05, -0.0003094194398727268, -0.3365647792816162, -0.000533795915544033, -0.0015988674713298678, -2.2411095415009186e-05, -0.0013094907626509666, -2.4676019165781327e-05, -1.9430925021879375e-05, -5.364274329622276e-05, -0.012713807635009289, -0.00024828212917782366], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [clean_text(text) for text in texts]", "tokens": [" [", "clean", "_", "text", "(", "text", ")", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -1.9594604969024658, -0.1132977157831192, -0.04382266849279404, -0.01402275264263153, -0.24195581674575806, -0.056931354105472565, -0.02287675067782402, -8.05822346592322e-05, -3.7788631743751466e-05, -0.0004291805380489677, -0.03427733853459358, -0.012173403054475784], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09408267587423325, -0.21771052479743958, -0.14906863868236542, -0.19555547833442688, -0.0022985723335295916, -0.0007189311436377466, -9.417489309271332e-06, -0.0021005249582231045, -0.0010388459777459502, -0.01862758956849575], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.022419564425945282, -0.015424720011651516, -0.02817614935338497, -0.27586546540260315, -1.9073304429184645e-05, -0.061393436044454575, -0.0025075203739106655, -0.002359227742999792, -0.004310364834964275, -0.018842747434973717, -0.00183723377995193, -0.014292961917817593, -4.51792984677013e-05, -0.0003110878460574895, -0.0006232702871784568, -0.00021789084712509066, -0.0001408954558428377, -0.005220708902925253], "finish_reason": "stop"}, {"text": " TfidfVectorizer(stop_words=STOPWORDS)", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n"], "logprobs": [-0.0006347072194330394, -4.768370445162873e-07, -1.1801649634435307e-05, 0.0, -2.264974000354414e-06, 0.0, -0.3774000406265259, -0.790956437587738, -2.861018856492592e-06, -1.4305104514278355e-06, -0.15532706677913666, -0.4862132966518402, -1.1920928244535389e-07, -2.5510462364763953e-05, 0.0, -4.768370445162873e-07, -0.31786495447158813, -0.09400292485952377], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002858230145648122, -1.0967194612021558e-05, -2.062299427052494e-05, -0.0005164004978723824, -2.634490556374658e-05, -1.311301275563892e-06, -0.008380129933357239, -0.016046078875660896, -1.311301275563892e-06, 0.0, -1.1920928244535389e-07, -4.6491513785440475e-06, -0.0006687788409180939, -0.04497462138533592], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n"], "logprobs": [-0.00029404606902971864, -5.960462772236497e-07, -0.0004166688595432788, -0.012463891878724098, -2.861018856492592e-06, -0.00032240914879366755, -0.00023648326168768108, -0.05314990505576134, -1.1920922133867862e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.342597484588623, -0.02314388006925583], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.060849327594041824, -7.152555099310121e-07, -3.4570634852570947e-06, -0.00013565097469836473, 0.0, -1.7881377516459906e-06, 0.0, -3.6238969187252223e-05, -1.0234167575836182, -0.0037080359179526567], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.003709461074322462, -0.005492477212101221, -6.556489552167477e-06, -4.911301948595792e-05, -0.0002671123365871608, -2.1934269170742482e-05, -2.5987286790041253e-05, -7.867782187531702e-06, -2.861018856492592e-06, -0.12461908161640167, -0.048074495047330856], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8611312508583069, -0.0076702362857759], "finish_reason": "stop"}, {"text": "_vals in enumerate(nmf.components_):", "tokens": ["_", "vals", " in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-2.2090766429901123, -2.8874118328094482, -0.0012673450401052833, -0.03821055591106415, -0.00013195598148740828, -0.015131920576095581, 0.0, -1.1444026313256472e-05, -0.023777341470122337, -0.0003135904553346336, -0.017016831785440445, -0.0030805058777332306], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[:-11:-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[:", "-", "1", "1", ":-", "1", "]]", "\n"], "logprobs": [-0.4076816141605377, -0.03277698531746864, -0.0005983707960695028, -0.00026651646476238966, -0.00018273114983458072, -0.08963635563850403, -0.00031609306461177766, -0.03521456569433212, -0.0008419782971031964, -0.0006841464783065021, -0.002502645133063197, -0.0006920088781043887, -6.9141146923357155e-06, -2.6702524337451905e-05, -0.004322115797549486, -0.45392510294914246, -0.0070502785965800285, -0.8219558596611023, -0.17992660403251648, -0.0003359945258125663, -0.00028689560713246465, -0.05663863196969032, -0.15032970905303955], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.015248863026499748, -0.00927532184869051, -0.09890460968017578, -9.953480184776708e-05, -3.2186455882765586e-06, -0.012791488319635391, -0.045476291328668594], "finish_reason": "stop"}, {"text": " topics, nmf", "tokens": [" topics", ",", " nm", "f", "\n"], "logprobs": [-0.03555688261985779, -0.041218530386686325, -0.14303728938102722, -1.0728830375228426e-06, -2.8342196941375732], "finish_reason": "stop"}], "metrics": {"energy": 1076.9312773017896, "energy_per_token": 5.305080183752658, "time": 29.00801, "time_per_token": 0.14289660098522167}}
{"outputs": [{"text": " not isinstance(texts, list) or not all(isinstance(text, str) for text in texts):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", ")", " or", " not", " all", "(", "is", "instance", "(", "text", ",", " str", ")", " for", " text", " in", " texts", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -0.09489396959543228, -8.737658936297521e-05, -0.0003196682082489133, -0.023912714794278145, -0.44968920946121216, -0.017097108066082, -0.12891371548175812, -0.5137152671813965, -0.022008001804351807, -0.002863119123503566, -1.3232143828645349e-05, -0.0003094194398727268, -0.3365647792816162, -0.000533795915544033, -0.0015988674713298678, -2.2411095415009186e-05, -0.0013094907626509666, -2.4676019165781327e-05, -1.9430925021879375e-05, -5.364274329622276e-05, -0.012713807635009289, -0.00024828212917782366], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [ALPHANUMERIC.sub('', text.lower()) for text in texts]", "tokens": [" [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -0.925891101360321, -1.5139465176616795e-05, -5.960462772236497e-07, -3.576278118089249e-07, -2.861018856492592e-06, -1.1920928244535389e-07, -0.00017021637177094817, -2.7418097943154862e-06, -0.029126865789294243, -2.296344041824341, -3.933898824470816e-06, -0.3743835687637329, -0.1252906173467636, -0.02177007868885994, -0.07728168368339539, -0.5843990445137024, -0.00015662873920518905, -5.8887653722194955e-05, -0.0012281740782782435, -0.018377041444182396, -0.05137169361114502], "finish_reason": "stop"}, {"text": " [nltk.tokenize.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "token", "ize", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.1319674700498581, -0.2915918231010437, -0.00037126801908016205, -6.544376083184034e-05, -2.3494982719421387, -4.1960789531003684e-05, -0.0003721021639648825, -0.0030429509934037924, -0.017569968476891518, -9.119095193454996e-05, -1.0728830375228426e-06, -0.0031836561392992735, -0.13122889399528503, -0.023626232519745827, -0.0024227334652096033, -7.4741430580616e-05, -2.8967437174287625e-05, -0.0006237468332983553, -1.1920928244535389e-07, -1.311301275563892e-06, -1.1920928244535389e-07, -0.0019415830029174685, -0.007471120450645685], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09363358467817307, -0.20684009790420532, -0.14942781627178192, -0.2149951457977295, -0.0024227334652096033, -0.0005432083853520453, -1.3470558769768104e-05, -0.0019867937080562115, -0.0009201106731779873, -0.01624971069395542], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.020797861739993095, -0.01670726388692856, -0.03457276523113251, -0.27401918172836304, -2.038458114839159e-05, -0.07466012239456177, -0.0036215689033269882, -0.0021302644163370132, -0.004654169548302889, -0.016247013583779335, -0.0018164102220907807, -0.011892725713551044, -4.708655978902243e-05, -0.0003238391946069896, -0.0007546676206402481, -0.0002115741081070155, -0.00016342257731594145, -0.004394279792904854], "finish_reason": "stop"}, {"text": " TfidfVectorizer()", "tokens": [" T", "f", "id", "f", "Vector", "izer", "()", "\n"], "logprobs": [-0.000685576000250876, -7.152555099310121e-07, -1.2040065485052764e-05, 0.0, -2.622600959512056e-06, 0.0, -1.2439156770706177, -0.026395540684461594], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002980979916173965, -7.152531907195225e-06, -2.0503786799963564e-05, -0.00042060110718011856, -2.8371408916427754e-05, -1.4305104514278355e-06, -0.0069288220256567, -0.015594209544360638, -1.311301275563892e-06, 0.0, -1.1920928244535389e-07, -1.6689286894688848e-06, -0.0006293461774475873, -0.044347722083330154], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, max_iter=1000, tol=0.0001, solver='mu')", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " max", "_", "iter", "=", "1", "0", "0", "0", ",", " to", "l", "=", "0", ".", "0", "0", "0", "1", ",", " solver", "='", "mu", "')", "\n"], "logprobs": [-0.0003046525234822184, -5.960462772236497e-07, -0.00033825874561443925, -0.013085445389151573, -2.7418097943154862e-06, -0.00040737437666393816, -0.00020859450160060078, -0.05626615881919861, -9.536738616588991e-07, -2.3841855067985307e-07, 0.0, -0.26130858063697815, -2.3371517658233643, 0.0, -0.0001829695247579366, -0.000614335120189935, -1.515100359916687, -0.020948581397533417, -0.0129320053383708, -0.18323273956775665, -0.6438356041908264, -1.4774954319000244, -3.3378546504536644e-06, -7.486063259420916e-05, -1.3868790864944458, -0.007663730066269636, -0.01949378475546837, -0.008863627910614014, -0.2998381555080414, -0.4005601108074188, -0.9109262228012085, -2.5470187664031982, -0.013619829900562763, -0.0909702479839325, -0.6363293528556824, -0.05513301119208336], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.05856998264789581, -8.344646857949556e-07, -3.6954811548639555e-06, -0.00010907054820563644, 0.0, -2.0265558760002023e-06, 0.0, -2.753696753643453e-05, -0.5004464387893677, -0.00018880968855228275, -0.002183198230341077, -0.013833597302436829], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.004125537350773811, -0.005071750842034817, -5.602820692729438e-06, -5.6503606174374e-05, -0.00039521988946944475, -3.0397906812140718e-05, -2.5152843591058627e-05, -7.748573807475623e-06, -5.602820692729438e-06, -0.12847936153411865, -0.04624033346772194], "finish_reason": "stop"}, {"text": " [[' '.join(feature_names[i] for i in topic.argsort()[:-6:-1])", "tokens": [" [", "['", " '", ".", "join", "(", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[:", "-", "6", ":-", "1", "])", "\n"], "logprobs": [-0.5745772123336792, -4.0519185066223145, -0.025022948160767555, -0.001111485529690981, -7.390948667307384e-06, -0.0395628847181797, -0.019093060865998268, -0.00014709345123264939, -3.433168603805825e-05, -0.005580797791481018, -0.3810868263244629, -0.3929731845855713, -0.01605522818863392, -0.00119138287845999, -0.04404125735163689, -0.7572677135467529, -0.12131175398826599, -0.00010585224663373083, -7.235741941258311e-05, -0.013842180371284485, -0.7204017639160156, -0.0286656953394413, -2.9255006313323975, -0.002169637940824032, -0.0021809381432831287, -0.22432750463485718, -2.9424915313720703], "finish_reason": "stop"}, {"text": "_coef in enumerate(nmf.components_):", "tokens": ["_", "co", "ef", " in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-2.456538438796997, -2.91123366355896, -0.1713128387928009, -0.4005376696586609, -0.05077734962105751, -7.1403817855753e-05, -0.010549493134021759, 0.0, -2.8490614567999728e-05, -0.0026227382477372885, -0.00024923557066358626, -0.009726159274578094, -0.002996480790898204], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[:-11:-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[:", "-", "1", "1", ":-", "1", "]]", "\n"], "logprobs": [-0.3950532376766205, -0.0336747020483017, -0.0005511910421773791, -0.00024041623692028224, -0.0002083561266772449, -0.09734281897544861, -0.00028272447525523603, -0.04304935410618782, -0.0009012927766889334, -0.0008644896443001926, -0.0023493566550314426, -0.0008257793379016221, -7.152531907195225e-06, -2.6225699912174605e-05, -0.006002613343298435, -0.421052485704422, -0.009295281954109669, -0.8156474828720093, -0.18255968391895294, -0.0003133521240670234, -0.0003014348621945828, -0.05915982648730278, -0.16621313989162445], "finish_reason": "stop"}, {"text": "append(list(topic_keywords))", "tokens": ["append", "(", "list", "(", "topic", "_", "keywords", "))", "\n"], "logprobs": [-0.015959030017256737, -0.008097320795059204, -2.743647575378418, -0.0005706112715415657, -0.01883736625313759, -0.00010156115604331717, -7.867782187531702e-06, -0.0044157616794109344, -0.6800603866577148], "finish_reason": "stop"}, {"text": " topics, nmf  # Added NMF model return value", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Added", " N", "MF", " model", " return", " value", "\n"], "logprobs": [-0.039571136236190796, -0.03845217078924179, -0.1472926139831543, -9.536738616588991e-07, -0.2444622814655304, -0.00022384998737834394, -1.026528000831604, -1.7162549495697021, -1.5735502529423684e-05, -0.27592310309410095, -1.9588217735290527, -2.2524211406707764, -0.5679100155830383], "finish_reason": "stop"}], "metrics": {"energy": 1285.1742307033542, "energy_per_token": 4.831482070313362, "time": 34.292397, "time_per_token": 0.12891878571428572}}
{"outputs": [{"text": " not isinstance(texts, list) or not all(isinstance(t, str) for t in texts):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", ")", " or", " not", " all", "(", "is", "instance", "(", "t", ",", " str", ")", " for", " t", " in", " texts", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -0.09489396959543228, -8.737658936297521e-05, -0.0003196682082489133, -0.023912714794278145, -0.44968920946121216, -0.017097108066082, -0.12891371548175812, -0.5137152671813965, -0.022008001804351807, -0.002863119123503566, -1.3232143828645349e-05, -0.0003094194398727268, -1.8957421779632568, -8.308542601298541e-05, -0.0031869832891970873, -1.9430925021879375e-05, -0.0007009433466009796, -7.510157047363464e-06, -1.2636104656849056e-05, -0.00014172980445437133, -0.017131444066762924, -0.000300600629998371], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [_clean(t) for t in texts]", "tokens": [" [", "_", "clean", "(", "t", ")", " for", " t", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -3.275782823562622, -0.6027427315711975, -1.7985001802444458, -1.757781982421875, -0.01810547523200512, -0.029993504285812378, -3.981510963058099e-05, -1.9192511899746023e-05, -0.000856509490404278, -0.09394052624702454, -0.021807286888360977], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not any(text for text in tokenized_texts):", "tokens": [" not", " any", "(", "text", " for", " text", " in", " token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09408267587423325, -0.21771052479743958, -0.14906863868236542, -1.9571025371551514, -0.998214840888977, -0.0003631647559814155, -2.8132995794294402e-05, -0.004133966285735369, -1.1920928244535389e-07, -1.1920928244535389e-07, -2.3841855067985307e-07, -5.960462772236497e-07, -0.026085611432790756, -0.00956322904676199], "finish_reason": "stop"}, {"text": " [], None", "tokens": [" []", ",", " None", "\n"], "logprobs": [-0.025359125807881355, -0.015737267211079597, -0.028209295123815536, -1.4856419563293457], "finish_reason": "stop"}, {"text": " TfidfVectorizer(tokenizer=lambda x: x.split(), min_df=2, max_df=0.95)", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "token", "izer", "=", "lambda", " x", ":", " x", ".", "split", "()", ",", " min", "_", "df", "=", "2", ",", " max", "_", "df", "=", "0", ".", "9", "5", ")", "\n"], "logprobs": [-0.0007401349139399827, -7.152555099310121e-07, -1.1324817933200393e-05, 0.0, -2.145764938177308e-06, 0.0, -0.3646056652069092, -1.9001200199127197, -0.7235165238380432, -0.0011442311806604266, -0.09532418102025986, -0.045597825199365616, -0.00014375607133843005, -0.005436635576188564, -0.006454217713326216, -5.686121585313231e-05, -0.7378536462783813, -0.0011118428083136678, -2.542820692062378, -2.3841855067985307e-07, -5.722029527532868e-06, -8.570780482841656e-05, -1.3315225839614868, -0.5776728391647339, -0.16344092786312103, -5.960462772236497e-07, -8.415821503149346e-05, -0.0029621317517012358, -0.06109282374382019, -1.2278481335670222e-05, -0.8599942326545715, -1.4576473236083984, -0.1945452094078064, -0.06350717693567276], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002908283786382526, -1.156323378381785e-05, -1.6927575416048057e-05, -0.0005372511222958565, -3.0636318115284666e-05, -1.311301275563892e-06, -0.005755044985562563, -0.01286445651203394, -1.0728830375228426e-06, 0.0, -1.1920928244535389e-07, -2.3841830625315197e-06, -0.0007680088747292757, -0.04363769665360451], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=1)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "1", ")", "\n"], "logprobs": [-0.0002806984703056514, -5.960462772236497e-07, -0.0003960540343541652, -0.011030529625713825, -2.622600959512056e-06, -0.00034898388548754156, -0.0002256377338198945, -0.05303855612874031, -1.311301275563892e-06, -2.3841855067985307e-07, 0.0, -0.2350294142961502, -0.5884360671043396, -2.3841855067985307e-07, -0.00012683063687290996, -4.815939246327616e-05, -0.548535168170929, -1.1473720073699951, -0.015681056305766106], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.05994312837719917, -1.0728830375228426e-06, -3.099436753473128e-06, -0.0001389883691444993, 0.0, -2.0265558760002023e-06, 0.0, -1.6093124941107817e-05, -1.0127828121185303, -0.003609334584325552], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.004565411247313023, -0.005284151993691921, -6.198863957251888e-06, -5.769562994828448e-05, -0.00036542891757562757, -2.002696055569686e-05, -2.5629668016335927e-05, -5.364403477869928e-06, -4.0531076592742465e-06, -0.14979928731918335, -0.04941582679748535], "finish_reason": "stop"}, {"text": " [sorted(zip(feature_names, component), key=lambda x: x[1], reverse=True)[:5] for component in", "tokens": [" [", "s", "orted", "(", "zip", "(", "feature", "_", "names", ",", " component", ")", ",", " key", "=", "lambda", " x", ":", " x", "[", "1", "]", ",", " reverse", "=", "True", ")", "[:", "5", "]", " for", " component", " in", "\n"], "logprobs": [-0.5651983022689819, -1.4932175874710083, -2.098061486321967e-05, -0.03883684054017067, -0.9083091616630554, -0.007797044236212969, -0.0606367401778698, -1.156323378381785e-05, -7.450303382938728e-05, -0.004932853393256664, -1.570122480392456, -0.013084150850772858, -2.8132995794294402e-05, -0.013325677253305912, -0.0003895000845659524, -0.0007756323902867734, -0.03948530927300453, -0.0004894727608188987, -0.5660207271575928, -0.0002648479712661356, -0.0016964580863714218, -0.005274783819913864, -0.0019450333202257752, -0.003799601923674345, -1.7881233361549675e-05, -0.0005653690313920379, -0.005088948644697666, -1.0235302448272705, -1.6203842163085938, -0.03643682226538658, -0.0322285033762455, -0.005323638673871756, -0.0011208925861865282, -0.6875128149986267], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.1530986726284027, -0.0027955996338278055, -3.58813522325363e-05, -0.0012007892364636064, -1.1920928244535389e-07, -1.597391747054644e-05, -0.0030948857311159372, -0.00016080040950328112, -0.002946561435237527, -0.003070166567340493], "finish_reason": "stop"}, {"text": " [feature_names[idx] for idx in topic.argsort()[:-10 - 1:-1]]  # Change -10 to -15 for 5 words", "tokens": [" [", "feature", "_", "names", "[", "idx", "]", " for", " idx", " in", " topic", ".", "args", "ort", "()", "[:", "-", "1", "0", " -", " ", "1", ":-", "1", "]]", "  ", "#", " Change", " -", "1", "0", " to", " -", "1", "5", " for", " ", "5", " words", "\n"], "logprobs": [-0.526235044002533, -0.041962169110774994, -0.0004911408759653568, -0.0003361137059982866, -0.000179036331246607, -2.4056286811828613, -0.001302228425629437, -0.0359150692820549, -0.0020343814976513386, -0.013549739494919777, -0.0022656265646219254, -0.0004914983292110264, -7.629365427419543e-06, -2.3364747903542593e-05, -0.011197581887245178, -0.6892765164375305, -0.00846878718584776, -1.0860368013381958, -1.5412719249725342, -0.008931566029787064, -0.0029431143775582314, -3.421248038648628e-05, -0.004214809741824865, -0.0008398343343287706, -0.06549432128667831, -1.7172877788543701, -8.070142939686775e-05, -3.552347421646118, -1.753854513168335, -0.05248965322971344, -0.07389657199382782, -0.05288626626133919, -0.11115821450948715, -0.5687639713287354, -0.819347083568573, -0.31097546219825745, -0.4123418927192688, -0.6338828802108765, -0.45053383708000183, -0.13436107337474823], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.01679377816617489, -0.007670945953577757, -0.07433558255434036, -8.475421054754406e-05, -2.7418097943154862e-06, -0.011942317709326744, -0.04986855015158653], "finish_reason": "stop"}, {"text": " topics, nmf  # Added the NMF model to the return value<|endoftext|>import logging", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Added", " the", " N", "MF", " model", " to", " the", " return", " value", "<", "|", "end", "of", "text", "|>", "import", " logging", "\n"], "logprobs": [-0.04477139934897423, -0.043154630810022354, -0.12174046784639359, -8.344646857949556e-07, -0.22725467383861542, -0.00028618055512197316, -1.1486060619354248, -0.9457367658615112, -0.40593427419662476, -1.8954096958623268e-05, -0.4799634516239166, -1.5168224573135376, -0.2042403221130371, -0.1589084267616272, -1.3902108669281006, -1.2393399477005005, -2.0265558760002023e-06, -4.172316494077677e-06, -7.152531907195225e-06, -7.748573807475623e-06, -0.08491112291812897, -0.8758718967437744, -4.618738174438477, -0.019544990733265877], "finish_reason": "stop"}], "metrics": {"energy": 1308.1897893486018, "energy_per_token": 4.672106390530721, "time": 34.902946, "time_per_token": 0.12465337857142857}}
{"outputs": [{"text": " not isinstance(texts, list):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -0.09489396959543228, -8.737658936297521e-05, -0.0003196682082489133, -0.023912714794278145, -1.0162098407745361, -0.002744956873357296], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [re.sub(ALPHANUMERIC, '', text).lower() for text in texts]", "tokens": [" [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " ''", ",", " text", ")", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -2.0891506671905518, -0.0032357024028897285, -0.0029922020621597767, -0.02693365328013897, -0.09426527470350266, -3.4570634852570947e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -5.960462772236497e-07, -1.1920928244535389e-07, -0.003795326454564929, -2.1356723308563232, -3.099393507000059e-05, -0.4478914141654968, -1.4360053539276123, -0.14500807225704193, -0.051600754261016846, -0.00012611546844709665, -0.2938078045845032, -0.00017045476124621928, -0.00010787858627736568, -0.0019722788129001856, -0.01534689124673605, -0.03637612983584404], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09408267587423325, -0.21771052479743958, -0.14906863868236542, -0.19555547833442688, -0.0022985723335295916, -0.0007189311436377466, -9.417489309271332e-06, -0.0021005249582231045, -0.0010388459777459502, -0.01862758956849575], "finish_reason": "stop"}, {"text": " [], None", "tokens": [" []", ",", " None", "\n"], "logprobs": [-0.022419564425945282, -0.015424720011651516, -0.02817614935338497, -1.4500445127487183], "finish_reason": "stop"}, {"text": " TfidfVectorizer()", "tokens": [" T", "f", "id", "f", "Vector", "izer", "()", "\n"], "logprobs": [-0.0007569308509118855, -7.152555099310121e-07, -1.0371154530730564e-05, 0.0, -2.622600959512056e-06, -1.1920928244535389e-07, -1.1261972188949585, -0.028064649552106857], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002992897352669388, -9.65590606938349e-06, -1.7165990357170813e-05, -0.00036566724884323776, -2.5510462364763953e-05, -1.311301275563892e-06, -0.006311958190053701, -0.017960766330361366, -9.536738616588991e-07, 0.0, -1.1920928244535389e-07, -1.6689286894688848e-06, -0.0006635371246375144, -0.04908264800906181], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, alpha=.1, l1_ratio=.5)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " alpha", "=", ".", "1", ",", " l", "1", "_", "ratio", "=", ".", "5", ")", "\n"], "logprobs": [-0.0002892790944315493, -4.768370445162873e-07, -0.00037901371251791716, -0.014994530938565731, -2.861018856492592e-06, -0.00030298411729745567, -0.00018869050836656243, -0.060670509934425354, -1.1920922133867862e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.26035141944885254, -3.501711845397949, -0.0030549545772373676, -0.5006841421127319, -0.20213468372821808, -0.06784407049417496, -0.09761175513267517, -0.011015673168003559, -4.768370445162873e-07, -0.00024470672360621393, -0.00046564225340262055, -0.006834345404058695, -0.0005857420619577169, -1.186764121055603, -0.011677835136651993], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.054548121988773346, -1.0728830375228426e-06, -4.0531076592742465e-06, -0.00012754580529872328, 0.0, -2.0265558760002023e-06, 0.0, -3.0040289857424796e-05, -0.8932991027832031, -0.0034532458521425724], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names(", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "(", "\n"], "logprobs": [-0.004363420885056257, -0.00597784761339426, -4.529942543740617e-06, -6.0794889577664435e-05, -0.0002873722987715155, -3.71926071238704e-05, -3.218599158572033e-05, -1.1920858014491387e-05, -5.8412379075889476e-06, -2.232273578643799, -0.0016920547932386398], "finish_reason": "stop"}, {"text": " [feature_names[idx] for topic in nmf.components_ for idx in nmf.components_.argsort(axis=1)[:, -1:]]", "tokens": [" [", "feature", "_", "names", "[", "idx", "]", " for", " topic", " in", " nm", "f", ".", "components", "_", " for", " idx", " in", " nm", "f", ".", "components", "_", ".", "args", "ort", "(", "axis", "=", "1", ")", "[:", ",", " -", "1", ":", "]]", "\n"], "logprobs": [-0.5431233644485474, -0.9240865707397461, -0.0013198483502492309, -0.0014182995073497295, -0.15432290732860565, -1.189316749572754, -0.006857432425022125, -0.16628582775592804, -0.4585687816143036, -0.015593857504427433, -0.0050104293040931225, -2.3841855067985307e-07, -3.3378546504536644e-06, -0.006075367331504822, -0.0002503081923350692, -0.029554491862654686, -0.0024701817892491817, -0.016353856772184372, -2.734186887741089, -2.50339189733495e-06, -3.099393507000059e-05, -0.0009233264136128128, -0.00028427375946193933, -0.00015877417172305286, -0.00032658010604791343, -3.6000557884108275e-05, -0.426809698343277, -0.04238628223538399, -0.0440279096364975, -0.013348497450351715, -0.0035331938415765762, -0.009671379812061787, -0.0007962394156493247, -0.05655696243047714, -0.01110397931188345, -0.17602895200252533, -0.011043144389986992, -0.00660119391977787], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.09045953303575516, -0.0027416283264756203, -2.777537883957848e-05, -0.001279250718653202, -1.1920928244535389e-07, -9.894321920000948e-06, -0.002344004809856415, -0.00010108436981681734, -0.0023539948742836714, -0.003392894519492984], "finish_reason": "stop"}, {"text": " list(feature_names[topic.argsort()[-1:-num_topics - 1:-1]])", "tokens": [" list", "(", "feature", "_", "names", "[", "topic", ".", "args", "ort", "()", "[-", "1", ":-", "num", "_", "top", "ics", " -", " ", "1", ":-", "1", "]]", ")", "\n"], "logprobs": [-1.183471441268921, -0.062062736600637436, -0.0614606998860836, -5.245195097813848e-06, -3.3378546504536644e-06, -0.0033887361641973257, -0.056006379425525665, -0.004407691303640604, -0.00010013079008786008, -1.1801649634435307e-05, -0.010687023401260376, -0.10442876070737839, -0.7893223762512207, -1.5836713314056396, -0.9267427325248718, -0.0004781533498317003, -0.017099568620324135, -0.000402250443585217, -0.05889461934566498, -0.00032085992279462516, -0.0006748544401489198, -0.00957468245178461, -0.0001512651506345719, -0.000485183292767033, -0.011550339870154858, -0.032545305788517], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.020743802189826965, -0.007935426197946072, -0.08987152576446533, -9.035655966727063e-05, -2.145764938177308e-06, -0.012285039760172367, -0.051137372851371765], "finish_reason": "stop"}, {"text": " topics, nmf  # Added the NMF model as the second return value<|endoftext|># Generated with SMOP  0.41", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Added", " the", " N", "MF", " model", " as", " the", " second", " return", " value", "<", "|", "end", "of", "text", "|>", "#", " Gener", "ated", " with", " SM", "OP", "  ", "0", ".", "4", "1", "\n"], "logprobs": [-0.03488030657172203, -0.03501211106777191, -0.11017211526632309, -1.0728830375228426e-06, -0.20544491708278656, -0.00025340684805996716, -1.0350606441497803, -1.0409231185913086, -0.5671830177307129, -2.7656173188006505e-05, -0.4646160900592804, -1.1617298126220703, -0.09422741085290909, -0.009939226321876049, -0.6682999730110168, -0.018016498535871506, -1.055596113204956, -2.622600959512056e-06, -3.099436753473128e-06, -8.821448318485636e-06, -8.940656698541716e-06, -0.08039579540491104, -1.258812427520752, -4.711215972900391, -0.08469592034816742, -2.972381591796875, -0.2606394290924072, -0.0002087136817863211, -0.003608503146097064, -0.0010517071932554245, 0.0, -1.1920858014491387e-05, 0.0, -0.4575903117656708], "finish_reason": "stop"}], "metrics": {"energy": 1320.5338185100547, "energy_per_token": 5.198952041378169, "time": 34.598232, "time_per_token": 0.13621351181102365}}
{"outputs": [{"text": " len(texts) == 0:", "tokens": [" len", "(", "text", "s", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-2.8393564224243164, -0.0037808381021022797, -0.009265164844691753, -0.00010680581908673048, -0.00784057192504406, -1.0227131843566895, -0.0027781245298683643, -0.02074088342487812, -0.2513585388660431, -0.007165092974901199], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [ALPHANUMERIC.sub(' ', re.sub(' +', ' ', t.lower())).strip().split() for t in texts]", "tokens": [" [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " re", ".", "sub", "('", " +", "'", ",", " '", " '", ",", " t", ".", "lower", "()))", ".", "strip", "()", ".", "split", "()", " for", " t", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -0.925891101360321, -1.5139465176616795e-05, -5.960462772236497e-07, -3.576278118089249e-07, -2.861018856492592e-06, -1.1920928244535389e-07, -0.00017021637177094817, -2.7418097943154862e-06, -0.029126865789294243, -0.10629964619874954, -6.01988795096986e-05, -3.250570058822632, -0.0032942809630185366, -0.0014838885981589556, -0.5577854514122009, -3.260681390762329, -0.0006473353132605553, -1.728519782773219e-05, -0.0023328252136707306, -0.0006043276516720653, -8.475421054754406e-05, -1.1670613288879395, -0.16330112516880035, -0.04890318959951401, -0.2954884171485901, -0.35560786724090576, -0.10772743821144104, -0.005478013306856155, -1.6209806203842163, -0.06584395468235016, -0.11438526213169098, -0.04558461531996727, -0.00028010259848088026, -9.285972191719338e-05, -0.006440951954573393, -0.01450400147587061, -0.017899878323078156], "finish_reason": "stop"}, {"text": " [[token for token in text.split() if token not in STOPWORDS] for text in cleaned_texts]", "tokens": [" [[", "token", " for", " token", " in", " text", ".", "split", "()", " if", " token", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-2.42877197265625, -1.9835013151168823, -0.014806029386818409, -0.00039641151670366526, -0.00021228920377325267, -0.7174230813980103, -0.006097998004406691, -0.006238984875380993, -0.2550514042377472, -0.03755953907966614, -0.008634849451482296, -0.14827753603458405, -4.255681051290594e-05, -0.0019695423543453217, 0.0, -4.529942543740617e-06, 0.0, 0.0, -0.014931348152458668, -0.1778821349143982, -0.000692961853928864, -0.00019822540343739092, -0.005473982077091932, -3.576278118089249e-07, -1.4305104514278355e-06, -9.536697689327411e-06, -0.0013435394503176212, -0.007243442814797163], "finish_reason": "stop"}, {"text": " not tokenized_texts:", "tokens": [" not", " token", "ized", "_", "text", "s", ":", "\n"], "logprobs": [-0.0918046236038208, -1.7984977960586548, -1.4305104514278355e-06, -2.3841855067985307e-07, -8.344646857949556e-07, -2.3841855067985307e-07, -0.38958773016929626, -0.015667442232370377], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.025439897552132607, -0.014561100862920284, -0.03204507380723953, -0.3122917413711548, -2.2172682292875834e-05, -0.0682690441608429, -0.0031125929672271013, -0.0019976201001554728, -0.004336833953857422, -0.019285667687654495, -0.001401514746248722, -0.013085562735795975, -5.185469490243122e-05, -0.00034528967808000743, -0.0007072569569572806, -0.00018285033002030104, -0.00014208737411536276, -0.004125656094402075], "finish_reason": "stop"}, {"text": " TfidfVectorizer(token_pattern=r\"\\b[^\\W\\d_]{3,}\\b\", min_df=2, max_df=0.8)", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "token", "_", "pattern", "=", "r", "\"", "\\", "b", "[", "^\\", "W", "\\", "d", "_", "]{", "3", ",", "}\\", "b", "\"", ",", " min", "_", "df", "=", "2", ",", " max", "_", "df", "=", "0", ".", "8", ")", "\n"], "logprobs": [-0.0007073761080391705, -7.152555099310121e-07, -1.4305012882687151e-05, 0.0, -2.264974000354414e-06, -1.1920928244535389e-07, -0.35660403966903687, -1.921614170074463, -0.7286353707313538, -0.0650981068611145, -0.050677068531513214, -0.02893637865781784, -0.4373098611831665, -0.6271793246269226, -0.17670859396457672, -0.9016606211662292, -0.1051454246044159, -0.1970359832048416, -0.014995822682976723, -0.0012184107908979058, -0.03261084854602814, -0.44807565212249756, -0.3235856890678406, -0.010507971048355103, -0.018781093880534172, -0.0008519833791069686, -0.0038476972840726376, -1.0082656145095825, -1.6173648834228516, -7.152555099310121e-07, -0.00031668893643654883, -0.0007696765242144465, -0.5613572597503662, -0.670970618724823, -0.08524560183286667, -1.311301275563892e-06, -0.0004109491710551083, -0.0005072260973975062, -0.033910270780324936, -5.411955135059543e-05, -0.849604606628418, -0.2616367042064667, -0.09642234444618225], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.00031013446277938783, -9.894321920000948e-06, -2.2291887944447808e-05, -0.0003580405900720507, -1.2278481335670222e-05, -1.6689286894688848e-06, -0.00704234791919589, -0.018469497561454773, -8.344646857949556e-07, 0.0, -1.1920928244535389e-07, -2.0265558760002023e-06, -0.0007169060409069061, -0.047344256192445755], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=0)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.00025912740966305137, -3.576278118089249e-07, -0.00043752157944254577, -0.011254634708166122, -2.7418097943154862e-06, -0.00030286493711173534, -0.0002474478678777814, -0.03859703987836838, -1.1920922133867862e-06, -2.3841855067985307e-07, 0.0, -0.24872040748596191, -0.617441713809967, -2.3841855067985307e-07, -9.119095193454996e-05, -5.757642793469131e-05, -1.365163803100586, -0.1483524590730667, -0.018726106733083725], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.04936431720852852, -7.152555099310121e-07, -3.933898824470816e-06, -0.00022313489171210676, 0.0, -1.9073468138230965e-06, 0.0, -3.302042750874534e-05, -0.39871644973754883, -0.00024148885859176517, -0.0016656348016113043, -0.013501755893230438], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.004754784516990185, -0.005218693055212498, -5.125986263010418e-06, -5.3881147323409095e-05, -0.00023266946664080024, -2.074220174108632e-05, -2.729855441430118e-05, -8.4638240878121e-06, -5.125986263010418e-06, -0.18160946667194366, -0.04480719193816185], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.6682916283607483, -2.256007671356201], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.08525895327329636, -0.005132119636982679, -2.6940935640595853e-05, -0.001437464845366776, 0.0, -1.4305012882687151e-05, -0.0028358979616314173, -0.00012742661056108773, -0.002241838490590453, -0.0027184458449482918], "finish_reason": "stop"}, {"text": " list(feature_names[topic.argsort()[-10:][::-1]])", "tokens": [" list", "(", "feature", "_", "names", "[", "topic", ".", "args", "ort", "()", "[-", "1", "0", ":", "][", "::", "-", "1", "]]", ")", "\n"], "logprobs": [-1.3767902851104736, -0.0667080283164978, -0.12185719609260559, -4.291525328881107e-06, -4.172316494077677e-06, -0.002654245588928461, -0.0362745076417923, -0.003710529999807477, -8.165503095369786e-05, -1.2636104656849056e-05, -0.009968733415007591, -0.10777100175619125, -0.8670557737350464, -0.3490737974643707, -0.030133822932839394, -0.36312299966812134, -0.03249360993504524, -0.0019720408599823713, -9.417489309271332e-06, -0.0007334641413763165, -0.024735620245337486, -0.11553959548473358], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.019006043672561646, -0.007906805723905563, -0.11480993777513504, -8.999896090244874e-05, -3.3378546504536644e-06, -0.01533961296081543, -0.0422692745923996], "finish_reason": "stop"}, {"text": " topics, nmf", "tokens": [" topics", ",", " nm", "f", "\n"], "logprobs": [-0.03748881071805954, -0.04403338581323624, -0.13358964025974274, -1.0728830375228426e-06, -2.8469314575195312], "finish_reason": "stop"}], "metrics": {"energy": 1272.3627556257247, "energy_per_token": 5.109890584842268, "time": 33.21476, "time_per_token": 0.13339261044176706}}
{"outputs": [{"text": " not (isinstance(texts, list) and all(isinstance(t, str) for t in texts)):", "tokens": [" not", " (", "is", "instance", "(", "text", "s", ",", " list", ")", " and", " all", "(", "is", "instance", "(", "t", ",", " str", ")", " for", " t", " in", " texts", "))", ":", "\n"], "logprobs": [-0.1928376853466034, -3.035926103591919, -0.19423161447048187, -0.0016686100279912353, -5.0424259825376794e-05, -0.08689600229263306, -0.00013040646445006132, -0.0009192770230583847, -0.035884249955415726, -0.02393517829477787, -0.04930735379457474, -0.11407272517681122, -0.01654019020497799, -0.002334847114980221, -1.3589766240329482e-05, -0.00013767725613433868, -1.407645583152771, -0.0001333863037871197, -0.005034982226788998, -4.672895011026412e-05, -0.0011956692906096578, -6.437280717364047e-06, -4.887569048150908e-06, -0.00011550712952157483, -0.04399380087852478, -0.006741517689079046, -0.0021402565762400627], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [ALPHANUMERIC.sub(' ', re.sub('[^a-zA-Z ]', '', t)).lower() for t in texts]", "tokens": [" [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", " ]", "'", ",", " ''", ",", " t", "))", ".", "lower", "()", " for", " t", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -0.925891101360321, -1.5139465176616795e-05, -5.960462772236497e-07, -3.576278118089249e-07, -2.861018856492592e-06, -1.1920928244535389e-07, -0.00017021637177094817, -2.7418097943154862e-06, -0.029126865789294243, -0.10629964619874954, -6.01988795096986e-05, -3.250570058822632, -0.0032942809630185366, -0.0014838885981589556, -0.5577854514122009, -0.8989394307136536, -0.930030107498169, -0.2663511633872986, -9.691245941212401e-05, -3.611976353568025e-05, -0.05438036471605301, -5.245195097813848e-06, -0.00018761781393550336, -2.0103983879089355, -0.171572744846344, -2.5033637939486653e-05, -0.05407164990901947, -0.0001147919538198039, -1.8322076797485352, -0.4171293079853058, -0.19410094618797302, -0.02159813418984413, -0.00031454383861273527, -0.3494984209537506, -0.00024911639047786593, -7.1403817855753e-05, -0.004057746846228838, -0.015478716231882572, -0.03457046300172806], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.13742060959339142, -0.2594741880893707, -0.0005208089714869857, -8.201262971851975e-05, -0.09064551442861557, -0.005127731245011091, -8.475421054754406e-05, -1.0728830375228426e-06, -0.0013672299683094025, -0.06885130703449249, -0.017042379826307297, -0.0017348966794088483, -6.735097849741578e-05, -7.748573807475623e-06, -0.0011948358733206987, -1.1920928244535389e-07, -1.311301275563892e-06, -3.576278118089249e-07, -0.002047943649813533, -0.013202156871557236], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.0918046236038208, -0.1888786107301712, -0.13885022699832916, -0.2646702826023102, -0.001893633627332747, -0.000739539333153516, -1.3828182090946939e-05, -0.0017245433991774917, -0.0010587330907583237, -0.019948219880461693], "finish_reason": "stop"}, {"text": " [], None", "tokens": [" []", ",", " None", "\n"], "logprobs": [-0.023032283410429955, -0.014749765396118164, -0.03240140154957771, -1.3680408000946045], "finish_reason": "stop"}, {"text": " TfidfVectorizer(max_df=0.5, min_df=1)  # Adjusted to reduce sparsity and avoid 0 values", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "max", "_", "df", "=", "0", ".", "5", ",", " min", "_", "df", "=", "1", ")", "  ", "#", " Adjust", "ed", " to", " reduce", " sparsity", " and", " avoid", " ", "0", " values", "\n"], "logprobs": [-0.0007870675181038678, -7.152555099310121e-07, -1.2755313036905136e-05, 0.0, -2.622600959512056e-06, -1.1920928244535389e-07, -0.39971959590911865, -1.9586560726165771, -9.298280929215252e-06, -0.5517617464065552, -0.00015746307326480746, -0.03490908443927765, -7.962863310240209e-05, -1.8792197704315186, -0.030684610828757286, -0.4889301061630249, -4.768370445162873e-07, -6.437280717364047e-06, -3.707340147229843e-05, -0.2391882687807083, -0.3899981379508972, -1.5861543416976929, -6.651657167822123e-05, -0.7292470335960388, -0.16378527879714966, -0.5792602896690369, -2.876555919647217, -1.638400912284851, -2.361541986465454, -3.0803608894348145, -2.8574488162994385, -0.15110361576080322, -1.9867949485778809, -0.20975640416145325], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002644904307089746, -1.168244216387393e-05, -2.0146166207268834e-05, -0.00031132620642893016, -1.8358061424805783e-05, -1.6689286894688848e-06, -0.007006480358541012, -0.02622729167342186, -8.344646857949556e-07, 0.0, 0.0, -2.3841830625315197e-06, -0.0005539313424378633, -0.03903450816869736], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=0)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.0002544794406276196, -3.576278118089249e-07, -0.00038926175329834223, -0.013505636714398861, -2.9802276912960224e-06, -0.0002735478919930756, -0.0002094287920044735, -0.056558988988399506, -1.1920922133867862e-06, -2.3841855067985307e-07, 0.0, -0.33295738697052, -0.49919235706329346, -1.1920928244535389e-07, -9.97731985989958e-05, -6.985420623095706e-05, -1.4584009647369385, -0.14102277159690857, -0.016483791172504425], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.0791090652346611, -8.344646857949556e-07, -3.099436753473128e-06, -0.0001389883691444993, 0.0, -1.9073468138230965e-06, 0.0, -3.0040289857424796e-05, -0.46744370460510254, -0.0001811817055568099, -0.0022096047177910805, -0.012834210880100727], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.0030121691524982452, -0.006421408616006374, -6.794906312279636e-06, -6.69933797325939e-05, -0.00041607304592616856, -2.6464111215318553e-05, -2.825220326485578e-05, -8.821448318485636e-06, -3.099436753473128e-06, -0.16674654185771942, -0.04343055188655853], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.9350292682647705, -0.007081173360347748], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.0918729156255722, -0.0028464775532484055, -2.682172998902388e-05, -0.0012853225925937295, 0.0, -1.1801649634435307e-05, -0.0035491115413606167, -0.00013755806139670312, -0.0025870685931295156, -0.0031461049802601337], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[-1:-6:-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[-", "1", ":-", "6", ":-", "1", "]]", "\n"], "logprobs": [-0.3811425268650055, -0.02949928306043148, -0.00044526674901135266, -0.0002320735511602834, -0.00015507926582358778, -0.15159821510314941, -0.00026806574896909297, -0.02762444131076336, -0.000740968796890229, -0.000576449150685221, -0.0032169281039386988, -0.0007868293323554099, -6.318072337307967e-06, -2.777537883957848e-05, -0.006252489984035492, -1.1710364818572998, -0.6575925350189209, -0.5453728437423706, -1.8173658847808838, -0.3193030059337616, -5.98412734689191e-05, -0.018204979598522186, -0.17689689993858337], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.015568505972623825, -0.007298355456441641, -0.07973095774650574, -9.381330892210826e-05, -2.3841830625315197e-06, -0.013605129905045033, -0.053462520241737366], "finish_reason": "stop"}, {"text": " topics, nmf  # Return both topics and NMF model for downstream use", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Return", " both", " topics", " and", " N", "MF", " model", " for", " downstream", " use"], "logprobs": [-0.04339071363210678, -0.04248625785112381, -0.11929462850093842, -5.960462772236497e-07, -0.23644128441810608, -0.00024101213784888387, -1.6621543169021606, -0.9151203632354736, -0.6168515682220459, -0.017684753984212875, -1.3244295120239258, -4.410646579344757e-05, -0.4176601767539978, -2.18007755279541, -3.117448329925537, -1.6117169857025146], "finish_reason": "stop"}], "metrics": {"energy": 1200.622858972551, "energy_per_token": 4.783358003874706, "time": 31.8061, "time_per_token": 0.1267175298804781}}
{"outputs": [{"text": " not isinstance(texts, list) or not all(isinstance(text, str) for text in texts):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", ")", " or", " not", " all", "(", "is", "instance", "(", "text", ",", " str", ")", " for", " text", " in", " texts", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -0.09489396959543228, -8.737658936297521e-05, -0.0003196682082489133, -0.023912714794278145, -0.44968920946121216, -0.017097108066082, -0.12891371548175812, -0.5137152671813965, -0.022008001804351807, -0.002863119123503566, -1.3232143828645349e-05, -0.0003094194398727268, -0.3365647792816162, -0.000533795915544033, -0.0015988674713298678, -2.2411095415009186e-05, -0.0013094907626509666, -2.4676019165781327e-05, -1.9430925021879375e-05, -5.364274329622276e-05, -0.012713807635009289, -0.00024828212917782366], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [ALPHANUMERIC.sub(' ', text).lower().strip() for text in texts]", "tokens": [" [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", ".", "strip", "()", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -0.925891101360321, -1.5139465176616795e-05, -5.960462772236497e-07, -3.576278118089249e-07, -2.861018856492592e-06, -1.1920928244535389e-07, -0.00017021637177094817, -2.7418097943154862e-06, -0.029126865789294243, -0.10629964619874954, -6.01988795096986e-05, -0.4512421488761902, -0.7827591896057129, -0.15870186686515808, -0.05646739527583122, -0.00010287232726113871, -1.0859063863754272, -0.5811296105384827, -0.005768082570284605, -0.2658911943435669, -0.00027891082572750747, -7.080780778778717e-05, -0.0017431078013032675, -0.02325860783457756, -0.03597946837544441], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.1291140466928482, -0.29151424765586853, -0.00044907975825481117, -6.580135959666222e-05, -0.08971548080444336, -0.005208257120102644, -0.00010847456724150106, -1.4305104514278355e-06, -0.0017526278970763087, -0.07713866233825684, -0.01888415776193142, -0.0018136734142899513, -7.807903602952138e-05, -9.65590606938349e-06, -0.0011083895806223154, -2.3841855067985307e-07, -8.344646857949556e-07, -3.576278118089249e-07, -0.0019011296099051833, -0.012127591297030449], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09350232779979706, -0.24040813744068146, -0.1244843602180481, -0.17861448228359222, -0.0023204563185572624, -0.0005706112715415657, -1.0013530300057027e-05, -0.001606484642252326, -0.0009916870621964335, -0.01520777028053999], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.026040315628051758, -0.015633994713425636, -0.030182402580976486, -0.28826040029525757, -2.539125671319198e-05, -0.0824456438422203, -0.0032894094474613667, -0.0021962826140224934, -0.004703054670244455, -0.017017768695950508, -0.0018331881146878004, -0.016353974118828773, -5.066266385256313e-05, -0.00044490929576568305, -0.0007421599584631622, -0.0002029928145930171, -0.00014697425649501383, -0.004806393291801214], "finish_reason": "stop"}, {"text": " TfidfVectorizer(stop_words='english')", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n"], "logprobs": [-0.0008910499745979905, -7.152555099310121e-07, -1.4781842764932662e-05, 0.0, -2.264974000354414e-06, -1.1920928244535389e-07, -0.4515540599822998, -0.834155797958374, -2.622600959512056e-06, -1.5497195136049413e-06, -1.9119023084640503, -0.00042691652197390795, -2.3841855067985307e-07, -0.15153460204601288, -0.05988946184515953], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.00028081765049137175, -1.1086402082582936e-05, -1.4543427823809907e-05, -0.0005401106318458915, -2.3364747903542593e-05, -1.311301275563892e-06, -0.004368762020021677, -0.016784166917204857, -7.152555099310121e-07, 0.0, 0.0, -2.0265558760002023e-06, -0.0006466205231845379, -0.044442370533943176], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=42)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0003455280384514481, -4.768370445162873e-07, -0.00041416651220060885, -0.016223203390836716, -2.622600959512056e-06, -0.00034028460504487157, -0.00020323118951637298, -0.0645611509680748, -1.0728830375228426e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.2526867389678955, -0.5962556004524231, -2.3841855067985307e-07, -7.10462118149735e-05, -5.507317473529838e-05, -1.8741540908813477, -0.044837623834609985, -0.29166412353515625, -0.02918429486453533], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.06535106152296066, -5.960462772236497e-07, -3.814689989667386e-06, -0.00015984688070602715, 0.0, -1.9073468138230965e-06, 0.0, -3.85038583772257e-05, -0.4507579803466797, -0.0001778444420779124, -0.0019045800436288118, -0.012134421616792679], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names(", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "(", "\n"], "logprobs": [-0.003020013216882944, -0.006286134012043476, -4.6491513785440475e-06, -6.55629628454335e-05, -0.0002648479712661356, -2.1219027985353023e-05, -2.884823152271565e-05, -8.821448318485636e-06, -2.7418097943154862e-06, -2.2004077434539795, -0.0017150230705738068], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0278136730194092, -0.006393336225301027], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.09943456202745438, -0.004450654145330191, -2.8371408916427754e-05, -0.001261153956875205, -1.1920928244535389e-07, -1.07287787614041e-05, -0.0022607501596212387, -0.0001711698860162869, -0.002588138682767749, -0.0030228656250983477], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[:-num_topics - 1:-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[:", "-", "num", "_", "top", "ics", " -", " ", "1", ":-", "1", "]]", "\n"], "logprobs": [-0.4830392897129059, -0.0297404658049345, -0.0004884004010818899, -0.00023719835735391825, -0.00015245705435518175, -0.10980208218097687, -0.0002926159941125661, -0.037266142666339874, -0.0007219092221930623, -0.0010065733222290874, -0.002704060636460781, -0.0005442806868813932, -6.198863957251888e-06, -2.2649508537142538e-05, -0.006945277564227581, -0.2959464192390442, -0.009177522733807564, -0.7738348841667175, -0.00024673278676345944, -0.010120976716279984, -0.0017389428103342652, -0.005607825703918934, -0.0011485177092254162, -0.0009482178138568997, -0.0006766413571313024, -0.00066985102603212, -0.020726637914776802, -0.09678838402032852], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.01839974708855152, -0.007142486050724983, -0.06850717216730118, -8.856858039507642e-05, -3.6954811548639555e-06, -0.012570316903293133, -0.04230789840221405], "finish_reason": "stop"}, {"text": " topics, nmf  # Return the topics and the NMF model", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Return", " the", " topics", " and", " the", " N", "MF", " model", "\n"], "logprobs": [-0.04577082023024559, -0.0385720357298851, -0.1215054914355278, -8.344646857949556e-07, -0.22472387552261353, -0.0002411313180346042, -1.6521813869476318, -1.062084674835205, -0.2904791235923767, -0.37828996777534485, -0.6383877396583557, -0.46202781796455383, -2.0503786799963564e-05, -0.5607743859291077, -0.7395586967468262], "finish_reason": "stop"}], "metrics": {"energy": 1121.756326381683, "energy_per_token": 4.773431176092268, "time": 29.760178, "time_per_token": 0.12663905531914893}}
{"outputs": [{"text": " not isinstance(texts, list) or not all(isinstance(t, str) for t in texts):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", ")", " or", " not", " all", "(", "is", "instance", "(", "t", ",", " str", ")", " for", " t", " in", " texts", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -0.09489396959543228, -8.737658936297521e-05, -0.0003196682082489133, -0.023912714794278145, -0.44968920946121216, -0.017097108066082, -0.12891371548175812, -0.5137152671813965, -0.022008001804351807, -0.002863119123503566, -1.3232143828645349e-05, -0.0003094194398727268, -1.8957421779632568, -8.308542601298541e-05, -0.0031869832891970873, -1.9430925021879375e-05, -0.0007009433466009796, -7.510157047363464e-06, -1.2636104656849056e-05, -0.00014172980445437133, -0.017131444066762924, -0.000300600629998371], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [re.sub(ALPHANUMERIC, ' ', t.lower()) for t in texts]", "tokens": [" [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " t", ".", "lower", "())", " for", " t", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -2.0891506671905518, -0.0032357024028897285, -0.0029922020621597767, -0.02693365328013897, -0.09426527470350266, -3.4570634852570947e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -5.960462772236497e-07, -1.1920928244535389e-07, -0.003795326454564929, -0.23787952959537506, -9.226373367710039e-05, -0.00016842853801790625, -1.797440528869629, -0.44631022214889526, -0.04034542664885521, -0.02037862129509449, -0.49116554856300354, -9.870042413240299e-05, -2.90866428258596e-05, -0.0013736584223806858, -0.015606063418090343, -0.05696885287761688], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not tokenized_texts or not any(tokenized_texts):", "tokens": [" not", " token", "ized", "_", "text", "s", " or", " not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09408267587423325, -1.6703014373779297, -1.0728830375228426e-06, -2.3841855067985307e-07, -8.344646857949556e-07, -1.1920928244535389e-07, -1.235855221748352, -1.1886773109436035, -0.06529399752616882, -0.020602744072675705, -0.1069055050611496, -0.0007416835287585855, -8.689979586051777e-05, -8.34461570775602e-06, -0.007505078334361315, -0.00268503837287426, -0.018041670322418213], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.022912751883268356, -0.014369345270097256, -0.03508082777261734, -0.31889456510543823, -1.9907753085135482e-05, -0.05955604836344719, -0.0030515079852193594, -0.002163214609026909, -0.003910277504473925, -0.018014976754784584, -0.0015732781030237675, -0.017164606600999832, -5.149708886165172e-05, -0.00036638224264606833, -0.0007491880678571761, -0.00018153927521780133, -0.00014757021563127637, -0.005662709474563599], "finish_reason": "stop"}, {"text": " TfidfVectorizer()", "tokens": [" T", "f", "id", "f", "Vector", "izer", "()", "\n"], "logprobs": [-0.0008205384365282953, -7.152555099310121e-07, -1.168244216387393e-05, 0.0, -2.50339189733495e-06, 0.0, -1.1141639947891235, -0.02827083319425583], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.00031120702624320984, -1.3947389561508317e-05, -2.6702524337451905e-05, -0.00041476229671388865, -2.253030106658116e-05, -1.5497195136049413e-06, -0.00548666762188077, -0.014676113612949848, -1.0728830375228426e-06, 0.0, -1.1920928244535389e-07, -2.264974000354414e-06, -0.000619696278590709, -0.039082545787096024], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, alpha=.1, l1_ratio=.5, init='nndsvd')", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " alpha", "=", ".", "1", ",", " l", "1", "_", "ratio", "=", ".", "5", ",", " init", "='", "n", "nd", "sv", "d", "')", "\n"], "logprobs": [-0.0002965487365145236, -4.768370445162873e-07, -0.0003992714046034962, -0.009886465966701508, -2.9802276912960224e-06, -0.00035208225017413497, -0.00022003613412380219, -0.04515649750828743, -1.7881377516459906e-06, -3.576278118089249e-07, 0.0, -0.3185426890850067, -3.31453537940979, -0.0025076393503695726, -0.5285316705703735, -0.22868314385414124, -0.07268103957176208, -0.09847420454025269, -0.011742519214749336, -4.768370445162873e-07, -0.00033182359766215086, -0.0003491030656732619, -0.003974278457462788, -0.0007095203618519008, -0.42701613903045654, -1.8304636478424072, -0.003238910576328635, -0.2235322892665863, -0.0006517431465908885, -3.683499380713329e-05, -0.008453302085399628, -0.24487100541591644, -0.023112311959266663], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.059625569730997086, -8.344646857949556e-07, -2.9802276912960224e-06, -0.00013207517622504383, 0.0, -1.7881377516459906e-06, 0.0, -4.827859811484814e-05, -0.39862099289894104, -0.00018749863374978304, -0.002156553091481328, -0.012833151035010815], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.004343717824667692, -0.005671362392604351, -4.410734163684538e-06, -5.6622808187967166e-05, -0.000346362212439999, -2.6225699912174605e-05, -2.3364747903542593e-05, -9.536697689327411e-06, -4.0531076592742465e-06, -0.12090039253234863, -0.046523939818143845], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.9952065944671631, -0.005666739773005247], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.10620789229869843, -0.003817890305072069, -2.8371408916427754e-05, -0.001259010867215693, 0.0, -1.0490362910786644e-05, -0.0023085628636181355, -0.00013290952483657748, -0.0023340145125985146, -0.002693955088034272], "finish_reason": "stop"}, {"text": " feature_names[topic.argsort()[-num_topics:][::-1]].tolist()", "tokens": [" feature", "_", "names", "[", "topic", ".", "args", "ort", "()", "[-", "num", "_", "top", "ics", ":", "][", "::", "-", "1", "]]", ".", "tol", "ist", "()", "\n"], "logprobs": [-2.7388980388641357, -8.22540732769994e-06, -1.9073304429184645e-05, -0.0978129580616951, -0.11625238507986069, -0.012019116431474686, -5.006664650863968e-05, -2.288792165927589e-05, -0.03967425599694252, -0.28129157423973083, -1.6411453485488892, -0.0009015309624373913, -0.11967090517282486, -0.01655730977654457, -0.04536966606974602, -0.3076152205467224, -0.0019205235876142979, -0.0029938658699393272, -4.0531076592742465e-06, -0.017185581848025322, -0.03965054079890251, -0.0016536145703867078, -4.768370445162873e-07, -0.0003500564198475331, -0.02808910608291626], "finish_reason": "stop"}, {"text": "append(list(topic_keywords))  # Convert to a list for the final output", "tokens": ["append", "(", "list", "(", "topic", "_", "keywords", "))", "  ", "#", " Convert", " to", " a", " list", " for", " the", " final", " output", "\n"], "logprobs": [-0.020554162561893463, -0.006521609146147966, -2.478337287902832, -0.0005432083853520453, -0.02050032466650009, -0.00011944057769142091, -9.775113539944869e-06, -0.005244663450866938, -0.7442153096199036, -2.3007127310847864e-05, -0.5476886034011841, -2.0142605304718018, -0.19282077252864838, -0.07163826376199722, -2.125317096710205, -3.447378396987915, -1.5970191955566406, -1.2663459777832031, -0.020812805742025375], "finish_reason": "stop"}, {"text": " topics, nmf", "tokens": [" topics", ",", " nm", "f", "\n"], "logprobs": [-0.03703940659761429, -0.04077331721782684, -0.12730807065963745, -1.0728830375228426e-06, -2.90761399269104], "finish_reason": "stop"}], "metrics": {"energy": 1290.219068405151, "energy_per_token": 5.2447929609965485, "time": 33.608753, "time_per_token": 0.13662094715447154}}
{"outputs": [{"text": " not isinstance(texts, list):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -0.09489396959543228, -8.737658936297521e-05, -0.0003196682082489133, -0.023912714794278145, -1.0162098407745361, -0.002744956873357296], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [re.sub(ALPHANUMERIC, ' ', text).lower().strip() for text in texts]", "tokens": [" [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ")", ".", "lower", "()", ".", "strip", "()", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -2.0891506671905518, -0.0032357024028897285, -0.0029922020621597767, -0.02693365328013897, -0.09426527470350266, -3.4570634852570947e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -5.960462772236497e-07, -1.1920928244535389e-07, -0.003795326454564929, -0.23787952959537506, -9.226373367710039e-05, -0.00016842853801790625, -0.3152303993701935, -0.7992469072341919, -0.351505309343338, -0.037343088537454605, -0.00013720047718379647, -1.1263656616210938, -0.7180909514427185, -0.007125087082386017, -0.3109150230884552, -0.00025781645672395825, -0.00010978573118336499, -0.0012191252317279577, -0.017090898007154465, -0.026410285383462906], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not any(text.strip() for text in tokenized_texts):", "tokens": [" not", " any", "(", "text", ".", "strip", "()", " for", " text", " in", " token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09408267587423325, -0.21771052479743958, -0.14906863868236542, -1.9571025371551514, -0.6738168001174927, -2.8489997386932373, -0.0006015875260345638, -0.025450007990002632, -5.495397272170521e-05, -1.1920858014491387e-05, -0.0009556017466820776, 0.0, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.003589973319321871, -0.014612440951168537], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.025359125807881355, -0.015737267211079597, -0.028209295123815536, -0.2653966248035431, -1.7046782886609435e-05, -0.08103865385055542, -0.0031661877874284983, -0.0021067108027637005, -0.004051928874105215, -0.01697416976094246, -0.0020510368049144745, -0.015026237815618515, -4.660974445869215e-05, -0.0003567297535482794, -0.0006630606367252767, -0.00020525732543319464, -0.00014053787162993103, -0.004807817284017801], "finish_reason": "stop"}, {"text": " TfidfVectorizer(min_df=2, max_df=0.9, stop_words=None)", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "min", "_", "df", "=", "2", ",", " max", "_", "df", "=", "0", ".", "9", ",", " stop", "_", "words", "=", "None", ")", "\n"], "logprobs": [-0.0006845038151368499, -7.152555099310121e-07, -9.65590606938349e-06, 0.0, -2.145764938177308e-06, 0.0, -0.3166322112083435, -2.4523980617523193, -1.311301275563892e-06, -8.4638240878121e-06, -0.00038914260221645236, -2.290132522583008, -0.4103796184062958, -0.25545182824134827, -8.344646857949556e-07, -0.010490866377949715, -0.0038110024761408567, -0.09587704390287399, -3.2543604902457446e-05, -0.43648189306259155, -0.797055721282959, -1.2625951766967773, -8.344646857949556e-07, -2.3841830625315197e-06, -0.3239418566226959, -0.8458033800125122, -0.17173580825328827, -0.2224711775779724], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.00029130507027730346, -1.156323378381785e-05, -1.6689160474925302e-05, -0.000445385929197073, -1.847726889536716e-05, -1.5497195136049413e-06, -0.006840383633971214, -0.013693795539438725, -1.1920922133867862e-06, 0.0, -1.1920928244535389e-07, -2.3841830625315197e-06, -0.0007173825288191438, -0.04191015660762787], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, max_iter=500, random_state=0)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " max", "_", "iter", "=", "5", "0", "0", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.00030417583184316754, -4.768370445162873e-07, -0.0003997480380348861, -0.013542565517127514, -2.3841830625315197e-06, -0.00042167355422861874, -0.00016973962192423642, -0.04476262256503105, -1.311301275563892e-06, -2.3841855067985307e-07, 0.0, -0.2736106812953949, -2.3271985054016113, 0.0, -0.00017295771976932883, -0.0004894727608188987, -1.324974775314331, -0.014679167419672012, -0.009090582840144634, -0.6001931428909302, -0.4431273639202118, -1.1920928244535389e-07, -4.887569048150908e-06, -5.94836674281396e-05, -0.27196869254112244, -0.06391174346208572, -0.02190292626619339], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.05141857638955116, -7.152555099310121e-07, -3.099436753473128e-06, -0.00013195598148740828, 0.0, -1.9073468138230965e-06, 0.0, -4.458328112377785e-05, -0.8466099500656128, -0.0036140859592705965], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.00443332688882947, -0.005225215572863817, -5.125986263010418e-06, -5.173549288883805e-05, -0.0003449321957305074, -2.753696753643453e-05, -2.753696753643453e-05, -6.318072337307967e-06, -4.6491513785440475e-06, -0.16134074330329895, -0.03833813965320587], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0219333171844482, -0.0048123253509402275], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.09693446010351181, -0.003111048135906458, -3.421248038648628e-05, -0.0011512563796713948, -1.1920928244535389e-07, -9.894321920000948e-06, -0.002827458083629608, -9.63164638960734e-05, -0.00216166814789176, -0.00271547376178205], "finish_reason": "stop"}, {"text": " list(feature_names[topic.argsort()[-5:][::-1]])", "tokens": [" list", "(", "feature", "_", "names", "[", "topic", ".", "args", "ort", "()", "[-", "5", ":", "][", "::", "-", "1", "]]", ")", "\n"], "logprobs": [-1.1645281314849854, -0.07073768228292465, -0.09491434693336487, -5.8412379075889476e-06, -2.264974000354414e-06, -0.0024986020289361477, -0.05551707372069359, -0.003383865114301443, -7.4741430580616e-05, -1.2278481335670222e-05, -0.011889309622347355, -0.10516828298568726, -1.219611644744873, -0.04886595532298088, -0.24151864647865295, -0.017541153356432915, -0.001049920916557312, -4.577531944960356e-05, -0.0009157040040008724, -0.03495306149125099, -0.10703147202730179], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.0216438639909029, -0.006832924671471119, -0.09954798966646194, -8.666139910928905e-05, -3.2186455882765586e-06, -0.014288143254816532, -0.04054611548781395], "finish_reason": "stop"}, {"text": " topics, nmf.components_  # Adjusted to return both topics and components", "tokens": [" topics", ",", " nm", "f", ".", "components", "_", "  ", "#", " Adjust", "ed", " to", " return", " both", " topics", " and", " components", "\n"], "logprobs": [-0.02963504195213318, -0.035525016486644745, -0.11553853750228882, -8.344646857949556e-07, -2.738313913345337, -0.9490990042686462, -0.000805053801741451, -0.5074215531349182, -0.00046135272714309394, -1.866663932800293, -0.019908489659428596, -0.03632348030805588, -0.08300358802080154, -1.0383965969085693, -0.3254563510417938, -0.0227708350867033, -0.5304350256919861, -0.6861158609390259], "finish_reason": "stop"}], "metrics": {"energy": 1240.1744114513401, "energy_per_token": 5.103598401034321, "time": 32.84375, "time_per_token": 0.13515946502057613}}
{"outputs": [{"text": " not texts or not all(text.strip() for text in texts):", "tokens": [" not", " texts", " or", " not", " all", "(", "text", ".", "strip", "()", " for", " text", " in", " texts", "):", "\n"], "logprobs": [-0.1928376853466034, -1.5382834672927856, -1.017338752746582, -0.3132760226726532, -1.3790476322174072, -0.025088518857955933, -0.6401582360267639, -2.247002601623535, -0.03682674840092659, -0.0015393561916425824, -0.01773066259920597, -2.50339189733495e-06, -1.0967194612021558e-05, -4.2437604861333966e-05, -0.05471110716462135, -0.0031457485165446997], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [remove_non_alphanumeric(text) for text in texts]", "tokens": [" [", "remove", "_", "non", "_", "al", "phan", "umeric", "(", "text", ")", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -2.6023590564727783, -0.003190072951838374, -0.09666101634502411, -0.16561228036880493, -0.04772631824016571, -0.0028687058947980404, -0.0389309786260128, -0.12408072501420975, -0.3275645971298218, -0.46991536021232605, -0.212103471159935, -6.603976362384856e-05, -8.701899787411094e-05, -0.0030204886570572853, -0.015130511485040188, -0.039185602217912674], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not tokenized_texts:", "tokens": [" not", " token", "ized", "_", "text", "s", ":", "\n"], "logprobs": [-0.09408267587423325, -1.6703014373779297, -1.0728830375228426e-06, -2.3841855067985307e-07, -8.344646857949556e-07, -1.1920928244535389e-07, -0.3546009957790375, -0.019700458273291588], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.022912751883268356, -0.014369345270097256, -0.03508082777261734, -0.31889456510543823, -1.9907753085135482e-05, -0.05955604836344719, -0.0030515079852193594, -0.002163214609026909, -0.003910277504473925, -0.018014976754784584, -0.0015732781030237675, -0.017164606600999832, -5.149708886165172e-05, -0.00036638224264606833, -0.0007491880678571761, -0.00018153927521780133, -0.00014757021563127637, -0.005662709474563599], "finish_reason": "stop"}, {"text": " TfidfVectorizer(stop_words=STOPWORDS)", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n"], "logprobs": [-0.0008205384365282953, -7.152555099310121e-07, -1.168244216387393e-05, 0.0, -2.50339189733495e-06, 0.0, -0.39961016178131104, -0.6571155786514282, -3.099436753473128e-06, -1.311301275563892e-06, -0.1770509034395218, -0.526572048664093, -1.1920928244535389e-07, -1.883488948806189e-05, 0.0, -3.576278118089249e-07, -0.24409206211566925, -0.0835968554019928], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0003121604095213115, -9.775113539944869e-06, -2.13382354559144e-05, -0.0004040378553327173, -1.9907753085135482e-05, -1.311301275563892e-06, -0.008422095328569412, -0.016197869554162025, -1.0728830375228426e-06, 0.0, -1.1920928244535389e-07, -2.861018856492592e-06, -0.0008185135084204376, -0.044192392379045486], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=0)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.0003131137927994132, -5.960462772236497e-07, -0.00035982808913104236, -0.013292151503264904, -2.3841830625315197e-06, -0.00028713393840007484, -0.0002329078270122409, -0.05945046618580818, -1.1920922133867862e-06, -2.3841855067985307e-07, 0.0, -0.28610220551490784, -0.683265209197998, -1.1920928244535389e-07, -7.712543447269127e-05, -6.01988795096986e-05, -1.632009744644165, -0.14520035684108734, -0.017507536336779594], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.051198989152908325, -7.152555099310121e-07, -3.576272320060525e-06, -0.0001787979417713359, 0.0, -1.7881377516459906e-06, 0.0, -3.0874729418428615e-05, -1.1233203411102295, -0.004303836729377508], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.004303717985749245, -0.0060477592051029205, -5.722029527532868e-06, -5.018585216021165e-05, -0.00037091050762683153, -3.2066785934148356e-05, -2.9682672902708873e-05, -7.510157047363464e-06, -4.887569048150908e-06, -0.17503677308559418, -0.04686013236641884], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.1377441883087158, -0.006614220328629017], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.0923045426607132, -0.0036448491737246513, -3.516612196108326e-05, -0.0011311330599710345, 0.0, -1.3828182090946939e-05, -0.003068265039473772, -9.572047565598041e-05, -0.0027386562433093786, -0.002825674833729863], "finish_reason": "stop"}, {"text": " list(feature_names[topic.argsort()[-5:]])  # Modified to include only top 5 words", "tokens": [" list", "(", "feature", "_", "names", "[", "topic", ".", "args", "ort", "()", "[-", "5", ":", "]]", ")", "  ", "#", " Mod", "ified", " to", " include", " only", " top", " ", "5", " words", "\n"], "logprobs": [-1.173198938369751, -0.08046180009841919, -0.07821640372276306, -5.245195097813848e-06, -3.2186455882765586e-06, -0.002429868560284376, -0.03580707684159279, -0.0034411284141242504, -6.627816765103489e-05, -1.0490362910786644e-05, -0.010079790838062763, -0.0746571347117424, -1.3947489261627197, -0.06847433745861053, -1.2808245420455933, -0.053753238171339035, -2.076991081237793, -0.00034874555421993136, -1.8367606401443481, -0.31030914187431335, -0.3202645778656006, -1.9476438760757446, -2.411273717880249, -1.3809164762496948, -0.08456841856241226, -0.006947644986212254, -0.2503242492675781, -0.10383623093366623], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.019371960312128067, -0.009188744239509106, -0.10638625174760818, -8.070142939686775e-05, -3.2186455882765586e-06, -0.012089078314602375, -0.038072168827056885], "finish_reason": "stop"}, {"text": " topics, nmf  # Modified to return a tuple, where the second element is the NMF model", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Mod", "ified", " to", " return", " a", " tuple", ",", " where", " the", " second", " element", " is", " the", " N", "MF", " model", "\n"], "logprobs": [-0.0408671610057354, -0.035777974873781204, -0.13643689453601837, -9.536738616588991e-07, -0.21910996735095978, -0.0002849888114724308, -2.440795421600342, -0.4116084575653076, -0.2287803441286087, -0.2410479485988617, -2.0627145767211914, -0.011284339241683483, -3.738780975341797, -2.765465497970581, -0.4583912193775177, -0.08875904977321625, -0.3713407516479492, -0.07570937275886536, -0.31081315875053406, -0.5863781571388245, -1.5139465176616795e-05, -0.3712564706802368, -0.8762738108634949], "finish_reason": "stop"}], "metrics": {"energy": 1188.5838488082875, "energy_per_token": 5.329972416180661, "time": 31.4126, "time_per_token": 0.14086367713004486}}
{"outputs": [{"text": " not isinstance(num_topics, int):", "tokens": [" not", " isinstance", "(", "num", "_", "top", "ics", ",", " int", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -2.4044604301452637, -7.271740287251305e-06, -0.0006845038151368499, -0.00033408781746402383, -7.581423415103927e-05, -0.011409982107579708, -1.1060361862182617, -0.0016648017335683107], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [ALPHANUMERIC.sub(' ', text.lower()) for text in texts]", "tokens": [" [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -0.925891101360321, -1.5139465176616795e-05, -5.960462772236497e-07, -3.576278118089249e-07, -2.861018856492592e-06, -1.1920928244535389e-07, -0.00017021637177094817, -2.7418097943154862e-06, -0.029126865789294243, -0.10629964619874954, -6.01988795096986e-05, -0.4512421488761902, -0.6121621131896973, -0.03733941167593002, -0.030213169753551483, -0.7732715606689453, -0.00017915551143232733, -4.053033626405522e-05, -0.0017124050064012408, -0.01850331947207451, -0.0353914350271225], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.13217085599899292, -0.22841906547546387, -0.0003999863693024963, -7.557583012385294e-05, -0.11971479654312134, -0.004493496846407652, -8.785339014139026e-05, -1.7881377516459906e-06, -0.0016801540041342378, -0.0678967535495758, -0.015818584710359573, -0.0015963680343702435, -0.00010334911348763853, -9.894321920000948e-06, -0.000971917703282088, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.0020291469991207123, -0.008207284845411777], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09520085155963898, -0.24817709624767303, -0.14542746543884277, -0.20730257034301758, -0.0021865288726985455, -0.0006179092451930046, -1.07287787614041e-05, -0.001714071026071906, -0.0011010067537426949, -0.01679096557199955], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.023361559957265854, -0.015497496351599693, -0.026849983260035515, -0.26876887679100037, -2.1219027985353023e-05, -0.06666397303342819, -0.0028285279404371977, -0.002395738149061799, -0.004188099876046181, -0.020656343549489975, -0.002141922013834119, -0.015416033565998077, -5.543078441405669e-05, -0.0003297977091278881, -0.0006878394051454961, -0.0001879753835964948, -0.0001530530134914443, -0.004296714439988136], "finish_reason": "stop"}, {"text": " TfidfVectorizer()", "tokens": [" T", "f", "id", "f", "Vector", "izer", "()", "\n"], "logprobs": [-0.0007521660882048309, -7.152555099310121e-07, -1.2755313036905136e-05, 0.0, -1.9073468138230965e-06, -1.1920928244535389e-07, -1.0410897731781006, -0.02504247985780239], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.00026353701832704246, -1.2040065485052764e-05, -1.6689160474925302e-05, -0.00026913834153674543, -1.966933996300213e-05, -1.5497195136049413e-06, -0.007015476934611797, -0.02587200701236725, -8.344646857949556e-07, 0.0, -1.1920928244535389e-07, -4.172316494077677e-06, -0.0007290565990842879, -0.0376969613134861], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=1, max_iter=1000)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "1", ",", " max", "_", "iter", "=", "1", "0", "0", "0", ")", "\n"], "logprobs": [-0.00029940891545265913, -4.768370445162873e-07, -0.00031442465842701495, -0.0114443963393569, -2.861018856492592e-06, -0.00034767304896377027, -0.00019977481861133128, -0.05247868224978447, -9.536738616588991e-07, -2.3841855067985307e-07, 0.0, -0.27319177985191345, -0.5616036057472229, -1.1920928244535389e-07, -6.508615479106084e-05, -4.8636207793606445e-05, -0.44477662444114685, -0.24858710169792175, -1.1971218585968018, 0.0, -0.00016044282529037446, -0.00012885693286079913, -1.6854811906814575, -0.07173624634742737, -0.004320928826928139, -0.0506906658411026, -0.46468716859817505, -0.02075898088514805], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.051959577947854996, -9.536738616588991e-07, -4.6491513785440475e-06, -0.000102037942269817, 0.0, -2.0265558760002023e-06, 0.0, -2.3364747903542593e-05, -0.49013444781303406, -0.00014983485743869096, -0.0022433847188949585, -0.01291247084736824], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.0037677744403481483, -0.005267313215881586, -5.364403477869928e-06, -8.49926145747304e-05, -0.00023398046323563904, -1.8715683836489916e-05, -3.0636318115284666e-05, -8.702239938429557e-06, -5.960446742392378e-06, -0.15962572395801544, -0.03603788837790489], "finish_reason": "stop"}, {"text": " [sorted(feature_names[i] for i in component.argsort()[:-num_topics - 1:-1])", "tokens": [" [", "s", "orted", "(", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " component", ".", "args", "ort", "()", "[:", "-", "num", "_", "top", "ics", " -", " ", "1", ":-", "1", "])", "\n"], "logprobs": [-0.6526240706443787, -1.3381251096725464, -2.90866428258596e-05, -0.037594325840473175, -1.5548875331878662, -0.00120936194434762, -0.0012911563972011209, -0.01718980073928833, -0.055252812802791595, -7.521823135903105e-05, -0.026569914072752, -0.006270614918321371, -0.07300135493278503, -0.9512373208999634, -0.028017356991767883, -1.3232143828645349e-05, -3.6477376852417365e-05, -0.04121990129351616, -0.10650938749313354, -0.03722824156284332, -0.047395192086696625, -0.00014649749209638685, -0.016133707016706467, -0.0017109769396483898, -0.0005610798834823072, -0.0007406114018522203, -0.0003073934931308031, -0.0001879753835964948, -0.00033718624035827816, -0.0029592791106551886, -2.114767074584961], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.09279964864253998, -0.002720348071306944, -3.075552376685664e-05, -0.0012915135594084859, 0.0, -1.2159273865108844e-05, -0.0027371107134968042, -0.00015376816736534238, -0.0025366530753672123, -0.0035579015966504812], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[:-11:-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[:", "-", "1", "1", ":-", "1", "]]", "\n"], "logprobs": [-0.49835798144340515, -0.04358680173754692, -0.0005253365379758179, -0.00022456508304458112, -0.00015114595589693636, -0.14897280931472778, -0.0002798642381094396, -0.033824071288108826, -0.0007402540650218725, -0.0007599088130518794, -0.002527615986764431, -0.0006348263123072684, -6.079655122448457e-06, -2.884823152271565e-05, -0.007662428542971611, -0.3731939494609833, -0.00932114664465189, -0.9552338719367981, -0.2159811407327652, -8.701899787411094e-05, -0.00026127262390218675, -0.05547342821955681, -0.17459216713905334], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.01683703251183033, -0.00852221343666315, -0.061191167682409286, -9.929640509653836e-05, -2.622600959512056e-06, -0.01572529785335064, -0.04022016003727913], "finish_reason": "stop"}, {"text": " topics, nmf  # Return both topics and the NMF object", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Return", " both", " topics", " and", " the", " N", "MF", " object", "\n"], "logprobs": [-0.03456942364573479, -0.04392443969845772, -0.13204717636108398, -1.0728830375228426e-06, -0.21648576855659485, -0.0002388668799540028, -1.7045425176620483, -0.9793199300765991, -0.6650005578994751, -0.02308517135679722, -0.9108093976974487, -0.5952536463737488, -2.8609820219571702e-05, -1.0740152597427368, -0.6726734042167664], "finish_reason": "stop"}], "metrics": {"energy": 1177.4682133693696, "energy_per_token": 4.865571129625494, "time": 30.774084, "time_per_token": 0.12716563636363637}}
{"outputs": [{"text": " not isinstance(texts, list):", "tokens": [" not", " isinstance", "(", "text", "s", ",", " list", "):", "\n"], "logprobs": [-0.1928376853466034, -0.41903606057167053, -1.728519782773219e-05, -0.09489396959543228, -8.737658936297521e-05, -0.0003196682082489133, -0.023912714794278145, -1.0162098407745361, -0.002744956873357296], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.0817036628723145, -0.0069506047293543816], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.13440483808517456, -0.26942577958106995, -0.0004070168943144381, -6.818538531661034e-05, -0.08796034008264542, -0.005380434915423393, -8.67805938469246e-05, -5.960462772236497e-07, -0.0008673481643199921, -0.07944725453853607, -0.01922345720231533, -0.0017327546374872327, -7.784063927829266e-05, -1.2159273865108844e-05, -0.0009450022480450571, -1.1920928244535389e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.0017025275155901909, -0.01163612399250269], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.0945947989821434, -0.24607445299625397, -0.12765280902385712, -0.18415643274784088, -0.001960857305675745, -0.0005946775199845433, -1.2993727978027891e-05, -0.0017164511373266578, -0.0008002892718650401, -0.016707733273506165], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.02208438143134117, -0.015452423132956028, -0.03430221974849701, -0.2803303003311157, -2.4437606043647975e-05, -0.07100110501050949, -0.0032745571807026863, -0.002253613667562604, -0.004078642465174198, -0.01956346072256565, -0.0024585279170423746, -0.014129598625004292, -4.255681051290594e-05, -0.0004020121123176068, -0.0007564543629996479, -0.00019226610311307013, -0.00021026308240834624, -0.0049386657774448395], "finish_reason": "stop"}, {"text": " TfidfVectorizer(stop_words=STOPWORDS)", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n"], "logprobs": [-0.0008007657015696168, -7.152555099310121e-07, -1.0490362910786644e-05, 0.0, -2.622600959512056e-06, -1.1920928244535389e-07, -0.43155422806739807, -0.776627779006958, -2.7418097943154862e-06, -1.311301275563892e-06, -0.15387901663780212, -0.5412777662277222, -1.1920928244535389e-07, -1.8954096958623268e-05, 0.0, -4.768370445162873e-07, -0.271822988986969, -0.0949583649635315], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.00032264748006127775, -7.867782187531702e-06, -1.883488948806189e-05, -0.00027414379292167723, -1.8954096958623268e-05, -1.0728830375228426e-06, -0.007132307160645723, -0.012750176712870598, -1.0728830375228426e-06, 0.0, -1.1920928244535389e-07, -4.768360213347478e-06, -0.0008075552177615464, -0.040346454828977585], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, max_iter=500, random_state=0)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " max", "_", "iter", "=", "5", "0", "0", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.0002696150622796267, -4.768370445162873e-07, -0.000402250443585217, -0.01142070721834898, -2.7418097943154862e-06, -0.00033480284037068486, -0.0002026352594839409, -0.05772900581359863, -1.4305104514278355e-06, -2.3841855067985307e-07, 0.0, -0.2957892119884491, -2.4136950969696045, 0.0, -0.00014029949670657516, -0.0006052807439118624, -1.226325273513794, -0.016426917165517807, -0.01092181820422411, -0.5476614832878113, -0.37246236205101013, -2.3841855067985307e-07, -4.410734163684538e-06, -8.821098163025454e-05, -0.23781543970108032, -0.060927506536245346, -0.025264978408813477], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.07347243279218674, -9.536738616588991e-07, -3.2186455882765586e-06, -0.00012635385792236775, 0.0, -1.7881377516459906e-06, 0.0, -3.290122185717337e-05, -0.41390326619148254, -0.00020525732543319464, -0.00282686366699636, -0.01135164126753807], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.004836052190512419, -0.006839199457317591, -6.198863957251888e-06, -6.007967749610543e-05, -0.00029905137489549816, -2.396077979938127e-05, -3.2066785934148356e-05, -6.556489552167477e-06, -4.529942543740617e-06, -0.136657252907753, -0.04503342881798744], "finish_reason": "stop"}, {"text": " [feature_names.tolist()", "tokens": [" [", "feature", "_", "names", ".", "tol", "ist", "()", "\n"], "logprobs": [-0.5966866612434387, -1.0562622547149658, -0.0012971091782674193, -0.0015513778198510408, -1.8909294605255127, -0.005600476171821356, 0.0, -0.12604324519634247, -3.301429271697998], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.10336225479841232, -0.004533370956778526, -2.8371408916427754e-05, -0.000969297660049051, 0.0, -1.0251946150674485e-05, -0.002173920162022114, -0.00013505500101018697, -0.001935277134180069, -0.003101303242146969], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[:-11:-1]]", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[:", "-", "1", "1", ":-", "1", "]]", "\n"], "logprobs": [-0.45066022872924805, -0.05660112202167511, -0.00048411093303002417, -0.00023112009512260556, -0.0001565095444675535, -0.13233503699302673, -0.00025459862081333995, -0.0302115511149168, -0.0008008848526515067, -0.0008923601126298308, -0.0026702960021793842, -0.0005727558163926005, -6.556489552167477e-06, -2.2411095415009186e-05, -0.006160081829875708, -0.44949111342430115, -0.00624005077406764, -0.9102157950401306, -0.2261820137500763, -0.0001551984460093081, -0.0002805792901199311, -0.0511719211935997, -0.13812409341335297], "finish_reason": "stop"}, {"text": "append(list(topic_keywords))  # Convert tuple to list", "tokens": ["append", "(", "list", "(", "topic", "_", "keywords", "))", "  ", "#", " Convert", " tuple", " to", " list", "\n"], "logprobs": [-0.012859748676419258, -0.006859800312668085, -2.485750913619995, -0.00047255316167138517, -0.018253441900014877, -0.00011014331539627165, -5.245195097813848e-06, -0.005595734342932701, -0.7055236101150513, -2.2291887944447808e-05, -0.5809950828552246, -1.3079770803451538, -0.04915778338909149, -0.09988871961832047, -0.32549232244491577], "finish_reason": "stop"}, {"text": " topics, nmf.transform(tfidf)", "tokens": [" topics", ",", " nm", "f", ".", "transform", "(", "tf", "id", "f", ")"], "logprobs": [-0.03468630462884903, -0.03513618931174278, -0.13579881191253662, -7.152555099310121e-07, -2.832172155380249, -0.7520670890808105, -0.013323559425771236, -0.008129247464239597, -1.9430925021879375e-05, -1.1920928244535389e-07, -0.24226349592208862], "finish_reason": "stop"}], "metrics": {"energy": 1126.817764139176, "energy_per_token": 5.340368550422635, "time": 28.925695, "time_per_token": 0.1370886018957346}}
{"outputs": [{"text": " num_topics < 2 or num_topics > len(texts):", "tokens": [" num", "_", "top", "ics", " <", " ", "2", " or", " num", "_", "top", "ics", " >", " len", "(", "text", "s", "):", "\n"], "logprobs": [-2.893795967102051, -8.666139910928905e-05, -0.00015793983766343445, -0.00012718822108581662, -0.9066886901855469, -0.003346915589645505, -2.8161168098449707, -0.9230874180793762, -0.09242931753396988, -1.6689286894688848e-06, -3.2066785934148356e-05, -2.3841830625315197e-06, -0.18961241841316223, -0.8794122934341431, -0.0011213688412681222, -0.00919016171246767, -0.00011169286881340668, -0.24814222753047943, -0.003944950178265572], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [ALPHANUMERIC.sub('', text).lower().split() for text in texts]", "tokens": [" [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", ")", ".", "lower", "()", ".", "split", "()", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -0.925891101360321, -1.5139465176616795e-05, -5.960462772236497e-07, -3.576278118089249e-07, -2.861018856492592e-06, -1.1920928244535389e-07, -0.00017021637177094817, -2.7418097943154862e-06, -0.029126865789294243, -2.296344041824341, -3.933898824470816e-06, -0.3743835687637329, -2.144299268722534, -0.11589127779006958, -0.028115879744291306, -9.405170567333698e-05, -1.2241389751434326, -0.9929350018501282, -0.020456409081816673, -0.012668020091950893, -0.0006025406182743609, -0.00015805903240107, -0.0012713929172605276, -0.01463664136826992, -0.038730423897504807], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.1319674700498581, -0.2915918231010437, -0.00037126801908016205, -6.544376083184034e-05, -0.10362184047698975, -0.009757679887115955, -7.295342220459133e-05, -4.768370445162873e-07, -0.001384372473694384, -0.07565201073884964, -0.018663862720131874, -0.0016811060486361384, -8.618460560683161e-05, -7.748573807475623e-06, -0.001111247343942523, -1.1920928244535389e-07, -1.311301275563892e-06, -2.3841855067985307e-07, -0.002015108708292246, -0.012229458428919315], "finish_reason": "stop"}, {"text": " not any(tokenized_texts):", "tokens": [" not", " any", "(", "token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09363358467817307, -0.20684009790420532, -0.14942781627178192, -0.2149951457977295, -0.0024227334652096033, -0.0005432083853520453, -1.3470558769768104e-05, -0.0019867937080562115, -0.0009201106731779873, -0.01624971069395542], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.020797861739993095, -0.01670726388692856, -0.03457276523113251, -0.27401918172836304, -2.038458114839159e-05, -0.07466012239456177, -0.0036215689033269882, -0.0021302644163370132, -0.004654169548302889, -0.016247013583779335, -0.0018164102220907807, -0.011892725713551044, -4.708655978902243e-05, -0.0003238391946069896, -0.0007546676206402481, -0.0002115741081070155, -0.00016342257731594145, -0.004394279792904854], "finish_reason": "stop"}, {"text": " TfidfVectorizer(stop_words='english')", "tokens": [" T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n"], "logprobs": [-0.000685576000250876, -7.152555099310121e-07, -1.2040065485052764e-05, 0.0, -2.622600959512056e-06, 0.0, -0.3418809175491333, -0.739203929901123, -1.9073468138230965e-06, -1.5497195136049413e-06, -1.8773869276046753, -0.00030763185350224376, -1.1920928244535389e-07, -0.14178374409675598, -0.06516054272651672], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.0002953569928649813, -8.702239938429557e-06, -2.5510462364763953e-05, -0.00030596344731748104, -2.3007127310847864e-05, -1.311301275563892e-06, -0.006309233605861664, -0.01548693235963583, -9.536738616588991e-07, 0.0, -1.1920928244535389e-07, -3.814689989667386e-06, -0.0007619338575750589, -0.04458728805184364], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, init='random', random_state=0)", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " init", "='", "random", "'", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.0002791491860989481, -4.768370445162873e-07, -0.000348268891684711, -0.012259958311915398, -2.145764938177308e-06, -0.0003194298769813031, -0.00019298121333122253, -0.06270516663789749, -1.0728830375228426e-06, -2.3841855067985307e-07, 0.0, -0.2315436154603958, -1.2440903186798096, -0.02374975197017193, -0.1946977972984314, -0.07444126904010773, -1.168244216387393e-05, -0.005126545205712318, 0.0, -4.410734163684538e-06, -5.1616290875244886e-05, -0.12067463248968124, -0.08014287799596786, -0.014092809520661831], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.058837298303842545, -7.152555099310121e-07, -3.6954811548639555e-06, -0.00012444675667211413, 0.0, -2.264974000354414e-06, 0.0, -5.3881147323409095e-05, -0.989942193031311, -0.0034587106201797724], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.004988604225218296, -0.005002244841307402, -4.291525328881107e-06, -5.352353764465079e-05, -0.0002821285743266344, -2.4914430468925275e-05, -3.528532761265524e-05, -1.0251946150674485e-05, -5.602820692729438e-06, -0.13677485287189484, -0.03761855140328407], "finish_reason": "stop"}, {"text": " [feature_names[idx] for topic in nmf.components_ for idx in topic.argsort()[:-11:-1]]", "tokens": [" [", "feature", "_", "names", "[", "idx", "]", " for", " topic", " in", " nm", "f", ".", "components", "_", " for", " idx", " in", " topic", ".", "args", "ort", "()", "[:", "-", "1", "1", ":-", "1", "]]", "\n"], "logprobs": [-0.6155389547348022, -1.244106411933899, -0.0010794533882290125, -0.0014303225325420499, -0.1717216521501541, -1.2119590044021606, -0.00770927406847477, -0.18811197578907013, -0.5382606387138367, -0.014483674429357052, -0.0032700421288609505, -1.1920928244535389e-07, -3.099436753473128e-06, -0.007812184281647205, -0.00021991695393808186, -0.02599327638745308, -0.0023987111635506153, -0.01812795363366604, -0.16499923169612885, -9.16677454370074e-05, -1.4662635294371285e-05, -4.51792984677013e-05, -0.0577470101416111, -0.47989800572395325, -0.07868415862321854, -0.5456974506378174, -0.23606713116168976, -4.088794958079234e-05, -0.0005295066512189806, -0.01285327598452568, -0.036878108978271484], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.10491586476564407, -0.0028505190275609493, -3.135155202471651e-05, -0.0011202972382307053, -1.1920928244535389e-07, -1.2040065485052764e-05, -0.003233444644138217, -0.0001532914029667154, -0.002179629635065794, -0.0031791406217962503], "finish_reason": "stop"}, {"text": " list(feature_names[topic.argsort()[-1:-11:-1]])", "tokens": [" list", "(", "feature", "_", "names", "[", "topic", ".", "args", "ort", "()", "[-", "1", ":-", "1", "1", ":-", "1", "]]", ")", "\n"], "logprobs": [-1.419566035270691, -0.08199601620435715, -0.09562009572982788, -5.483612312673358e-06, -3.576272320060525e-06, -0.0027720618527382612, -0.037255577743053436, -0.002788942540064454, -4.7444173105759546e-05, -1.2397689715726301e-05, -0.010124871507287025, -0.09561391919851303, -0.7137259840965271, -1.3568105697631836, -1.2908546924591064, -0.22781004011631012, -0.0035577828530222178, -4.7801782784517854e-05, -0.0020124914590269327, -0.021738119423389435, -0.1065252497792244], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.018616825342178345, -0.007415152620524168, -0.08067747205495834, -0.00010918975021922961, -2.622600959512056e-06, -0.011946911923587322, -0.04943988099694252], "finish_reason": "stop"}, {"text": " topics, nmf  # Added the NMF model to return as well<|endoftext|>import random", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Added", " the", " N", "MF", " model", " to", " return", " as", " well", "<", "|", "end", "of", "text", "|>", "import", " random", "\n"], "logprobs": [-0.039084721356630325, -0.035901155322790146, -0.12162277847528458, -7.152555099310121e-07, -0.1900128275156021, -0.00022742546570952982, -1.1538907289505005, -0.9063147902488708, -0.576921284198761, -2.2053474822314456e-05, -0.5449561476707458, -1.3851364850997925, -1.9767518043518066, -3.0135340690612793, -1.1359074115753174, -1.1000561714172363, -2.145764938177308e-06, -3.099436753473128e-06, -7.510157047363464e-06, -2.0265558760002023e-06, -0.08152618259191513, -0.9718555808067322, -2.7174534797668457, -0.030894877389073372], "finish_reason": "stop"}], "metrics": {"energy": 1311.0307318315502, "energy_per_token": 5.003934090960115, "time": 34.291748, "time_per_token": 0.13088453435114503}}
{"outputs": [{"text": " not texts:", "tokens": [" not", " texts", ":", "\n"], "logprobs": [-0.1928376853466034, -1.5382834672927856, -0.4557008147239685, -0.007146273739635944], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.06177924573421478, -0.03820711374282837], "finish_reason": "stop"}, {"text": " [preprocess_text(text) for text in texts]", "tokens": [" [", "pre", "process", "_", "text", "(", "text", ")", " for", " text", " in", " texts", "]", "\n"], "logprobs": [-0.31769415736198425, -2.5675690174102783, -0.010350950062274933, -0.4093931317329407, -0.01644415594637394, -0.00770264957100153, -0.15921001136302948, -0.06566044688224792, -0.005961494520306587, -5.674201020156033e-05, -3.0874729418428615e-05, -0.00042548662167973816, -0.049921851605176926, -0.018389565870165825], "finish_reason": "stop"}, {"text": " [nltk.word_tokenize(text) for text in cleaned_texts]", "tokens": [" [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n"], "logprobs": [-0.12823538482189178, -0.3213508725166321, -0.000316927267704159, -6.317892984952778e-05, -0.1088700219988823, -0.007495967671275139, -9.16677454370074e-05, -9.536738616588991e-07, -0.001166616566479206, -0.07814937829971313, -0.015228316187858582, -0.001671109232120216, -9.202533692587167e-05, -7.152531907195225e-06, -0.0013109194114804268, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.002125506056472659, -0.013269447721540928], "finish_reason": "stop"}, {"text": " not tokenized_texts or all(len(text) == 0 for text in tokenized_texts):", "tokens": [" not", " token", "ized", "_", "text", "s", " or", " all", "(", "len", "(", "text", ")", " ==", " ", "0", " for", " text", " in", " token", "ized", "_", "text", "s", "):", "\n"], "logprobs": [-0.09408267587423325, -1.6703014373779297, -1.0728830375228426e-06, -2.3841855067985307e-07, -8.344646857949556e-07, -1.1920928244535389e-07, -1.235855221748352, -0.5040307641029358, -0.038006410002708435, -1.8957512378692627, -0.00026639728457666934, -0.17208553850650787, -0.3929048776626587, -0.03597716987133026, -0.00043049128726124763, -0.003648174926638603, -0.0023901485837996006, -1.9430925021879375e-05, -4.8636207793606445e-05, -0.004004199523478746, -1.1920928244535389e-07, 0.0, -2.3841855067985307e-07, 0.0, -0.002071141730993986, -0.004943292122334242], "finish_reason": "stop"}, {"text": " [], None  # Adjusted to return a tuple similar to the main return type", "tokens": [" []", ",", " None", "  ", "#", " Adjust", "ed", " to", " return", " a", " tuple", " similar", " to", " the", " main", " return", " type", "\n"], "logprobs": [-0.022912751883268356, -0.014369345270097256, -0.03508082777261734, -0.31889456510543823, -1.9907753085135482e-05, -0.05955604836344719, -0.0030515079852193594, -0.002163214609026909, -0.003910277504473925, -0.018014976754784584, -0.0015732781030237675, -0.017164606600999832, -5.149708886165172e-05, -0.00036638224264606833, -0.0007491880678571761, -0.00018153927521780133, -0.00014757021563127637, -0.005662709474563599], "finish_reason": "stop"}, {"text": " TfidfVectorizer()", "tokens": [" T", "f", "id", "f", "Vector", "izer", "()", "\n"], "logprobs": [-0.0008205384365282953, -7.152555099310121e-07, -1.168244216387393e-05, 0.0, -2.50339189733495e-06, 0.0, -1.1141639947891235, -0.02827083319425583], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(tokenized_texts)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", "s", ")", "\n"], "logprobs": [-0.00031120702624320984, -1.3947389561508317e-05, -2.6702524337451905e-05, -0.00041476229671388865, -2.253030106658116e-05, -1.5497195136049413e-06, -0.00548666762188077, -0.014676113612949848, -1.0728830375228426e-06, 0.0, -1.1920928244535389e-07, -2.264974000354414e-06, -0.000619696278590709, -0.039082545787096024], "finish_reason": "stop"}, {"text": " NMF(n_components=num_topics, random_state=1, init='nndsvd')", "tokens": [" N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "1", ",", " init", "='", "n", "nd", "sv", "d", "')", "\n"], "logprobs": [-0.0002965487365145236, -4.768370445162873e-07, -0.0003992714046034962, -0.009886465966701508, -2.9802276912960224e-06, -0.00035208225017413497, -0.00022003613412380219, -0.04515649750828743, -1.7881377516459906e-06, -3.576278118089249e-07, 0.0, -0.3185426890850067, -0.5600607991218567, -1.1920928244535389e-07, -8.308542601298541e-05, -5.6622808187967166e-05, -0.6724309921264648, -0.2893916070461273, -0.8049657940864563, -0.007849679328501225, -0.2765968441963196, -0.0008099374244920909, -5.531158240046352e-05, -0.05316030606627464, -0.06192559748888016, -0.01639982871711254], "finish_reason": "stop"}, {"text": " vectorizer.get_feature_names_out()", "tokens": [" vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n"], "logprobs": [-0.04643062502145767, -8.344646857949556e-07, -3.3378546504536644e-06, -0.00019107422849629074, 0.0, -1.9073468138230965e-06, 0.0, -3.814624506048858e-05, -0.4135567843914032, -0.0001597276859683916, -0.0023960948456078768, -0.012234522961080074], "finish_reason": "stop"}, {"text": " else vectorizer.get_feature_names()", "tokens": [" else", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n"], "logprobs": [-0.003381013870239258, -0.005367392208427191, -7.152531907195225e-06, -6.592056161025539e-05, -0.00036542891757562757, -2.9444261599564925e-05, -3.45700973412022e-05, -8.4638240878121e-06, -5.245195097813848e-06, -0.1723509579896927, -0.045318059623241425], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0478472709655762, -0.005796053912490606], "finish_reason": "stop"}, {"text": " in enumerate(nmf.components_):", "tokens": [" in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n"], "logprobs": [-0.08031373471021652, -0.0033492918591946363, -2.90866428258596e-05, -0.001129108713939786, 0.0, -1.2397689715726301e-05, -0.0024536524433642626, -0.00012611546844709665, -0.0023417449556291103, -0.003299746662378311], "finish_reason": "stop"}, {"text": " [feature_names[i] for i in topic.argsort()[-10:][::-1]]  # Use top 10 words", "tokens": [" [", "feature", "_", "names", "[", "i", "]", " for", " i", " in", " topic", ".", "args", "ort", "()", "[-", "1", "0", ":", "][", "::", "-", "1", "]]", "  ", "#", " Use", " top", " ", "1", "0", " words", "\n"], "logprobs": [-0.46961793303489685, -0.04000062122941017, -0.0004911408759653568, -0.0002862997353076935, -0.00015221867943182588, -0.1921634078025818, -0.00033909291960299015, -0.03153984993696213, -0.0008441222598776221, -0.0008864049450494349, -0.0031548987608402967, -0.0007035640883259475, -8.821448318485636e-06, -2.312633478140924e-05, -0.005654885899275541, -1.0052616596221924, -0.6800627112388611, -0.8157554268836975, -0.03507000952959061, -0.10467926412820816, -0.002894024597480893, -0.0026192902587354183, -2.9802276912960224e-06, -0.018379617482423782, -1.9167497158050537, -0.00011967896716669202, -3.738091230392456, -1.6034742593765259, -0.02107173204421997, -0.008758699521422386, -0.0004612335760612041, -0.19188271462917328, -1.4589544534683228], "finish_reason": "stop"}, {"text": "append(topic_keywords)", "tokens": ["append", "(", "topic", "_", "keywords", ")", "\n"], "logprobs": [-0.01616913080215454, -0.008269356563687325, -0.0716535747051239, -7.629103492945433e-05, -3.814689989667386e-06, -0.012923886068165302, -0.04720553755760193], "finish_reason": "stop"}, {"text": " topics, nmf  # Adjusted to return the topics and NMF model", "tokens": [" topics", ",", " nm", "f", "  ", "#", " Adjust", "ed", " to", " return", " the", " topics", " and", " N", "MF", " model", "\n"], "logprobs": [-0.031429074704647064, -0.03839022293686867, -0.13115571439266205, -8.344646857949556e-07, -0.23515814542770386, -0.000262106885202229, -1.464506983757019, -0.023670239374041557, -0.04618774726986885, -0.10557704418897629, -1.6313996315002441, -0.20341680943965912, -0.6310001611709595, -0.8037789463996887, -1.0132738680113107e-05, -0.47772178053855896, -0.7648617625236511], "finish_reason": "stop"}], "metrics": {"energy": 1150.8151710853563, "energy_per_token": 5.137567728059627, "time": 30.043549, "time_per_token": 0.13412298660714286}}
