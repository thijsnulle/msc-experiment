{"outputs": [{"text": "# Preprocess texts and remove non-alphanumeric characters (excluding spaces)\n    processed_texts = [ALPHANUMERIC.sub(' ', text).lower() for text in texts]\n\n    # Remove stopwords\n    processed_texts = [word for text in processed_texts for word in text.split() if word not in STOPWORDS]\n\n    # Vectorize and apply NMF\n    vectorizer = TfidfVectorizer(stop_words='english')\n    tfidf = vectorizer.fit_transform(processed_texts)\n    nmf = NMF(n_components=num_topics)\n    W = nmf.fit_transform(tfidf)\n    H = nmf.components_\n\n    # Extract top words for each topic\n    topic_words = []\n    for i in range(num_topics):\n        words = np.argsort(-H[i, :])[::-1][:10]\n        topic_words.append([vectorizer.get_feature_names()[word] for word in words])\n\n    return", "tokens": ["#", " Pre", "process", " texts", " and", " remove", " non", "-", "al", "phan", "umeric", " characters", " (", "ex", "cluding", " spaces", ")", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "processed", "_", "text", "s", " =", " [", "word", " for", " text", " in", " processed", "_", "text", "s", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Vector", "ize", " and", " apply", " N", "MF", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "W", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", ")", "\n", "    ", "H", " =", " nm", "f", ".", "components", "_", "\n", "\n", "    ", "#", " Ext", "ract", " top", " words", " for", " each", " topic", "\n", "    ", "topic", "_", "words", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "num", "_", "top", "ics", "):", "\n", "        ", "words", " =", " np", ".", "args", "ort", "(-", "H", "[", "i", ",", " :", "])", "[", "::", "-", "1", "][", ":", "1", "0", "]", "\n", "        ", "topic", "_", "words", ".", "append", "([", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()[", "word", "]", " for", " word", " in", " words", "])", "\n", "\n", "    ", "return"], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.6037266850471497, -1.4159719944000244, -2.6869795322418213, -0.5384690761566162, -1.165514588356018, -0.005829475820064545, -0.03581903874874115, -0.0004412154376041144, -0.0016162439715117216, -0.05569647625088692, -2.515679359436035, -0.13732604682445526, -0.0010798105504363775, -0.02766595408320427, -0.0025758917909115553, -0.6360218524932861, -0.001479246304370463, -1.131736159324646, -0.011810261756181717, -0.01576695591211319, -0.0024668520782142878, -0.003244970692321658, -0.21386969089508057, -0.11329495161771774, -5.602820692729438e-06, -0.0001787979417713359, -8.475421054754406e-05, -8.4638240878121e-06, -0.0002300474588992074, -0.0002040654799202457, -0.0002585315378382802, -0.02757422812283039, -0.38124194741249084, -0.01672285608947277, -0.24416303634643555, -0.49568918347358704, -0.04283808916807175, -0.04735551401972771, -0.0005322470096871257, -0.9054033160209656, -0.0004745787591673434, -5.4596363042946905e-05, -0.00039295581518672407, -0.007563762366771698, -0.00029940891545265913, -0.4455505907535553, -0.00014876213390380144, -0.004561258014291525, -0.10081430524587631, -0.024625016376376152, -0.012418446131050587, -0.729881227016449, -0.00023755589791107923, -0.41611021757125854, -0.0002165798214264214, -0.011689971201121807, -0.000747877755202353, -0.02948828786611557, -0.05656428262591362, -1.091474175453186, -0.09823738038539886, -0.29300177097320557, -0.0004278697888366878, -0.004182639066129923, -2.1934269170742482e-05, -2.3841830625315197e-06, -4.410734163684538e-06, -0.0367283932864666, -0.0004040378553327173, -0.0005017452058382332, -0.10411341488361359, -0.0010356307029724121, -0.012722634710371494, -0.041696932166814804, -0.04201817885041237, -0.02619291841983795, -0.1368037462234497, -4.076874756719917e-05, -0.00460789306089282, -9.536738616588991e-07, -2.586808113846928e-05, -3.933898824470816e-06, -7.271740287251305e-06, -0.003483776468783617, -0.00044371772673912346, -0.011819451116025448, -0.00037698791129514575, -0.029362579807639122, -0.7862706184387207, -0.010427752509713173, -2.223145008087158, -1.1654596328735352, -0.010090529918670654, -0.0005616756388917565, -0.3076554536819458, -0.0008041008841246367, -0.2910979688167572, -0.005040675401687622, -0.0004371640970930457, -0.00034171465085819364, -2.145764938177308e-06, -1.7404405298293568e-05, -2.264974000354414e-06, -7.867782187531702e-06, -5.483612312673358e-06, -0.5764564871788025, -0.43529820442199707, -0.0005601267330348492, -0.00019858295854646713, -0.10744889825582504, -0.016726842150092125, -7.152555099310121e-07, -0.0922812819480896, -0.007307230960577726, -0.006005694158375263, -1.5818537473678589, -0.14773675799369812, -0.0016433794517070055, -0.9664779901504517, -0.001438060076907277, -2.1576648578047752e-05, -1.9788545614574105e-05, -0.0008997444529086351, -0.0011301804333925247, -8.642300235806033e-05, -0.004799630958586931, -0.001670038211159408, -1.549708758830093e-05, -3.576278118089249e-07, -4.768370445162873e-07, -0.0003164505760651082, -0.014568737708032131, -0.08321630209684372, -0.1663811206817627, -0.00033945043105632067, -0.012722634710371494, -0.0002215855201939121, -6.961580220377073e-05, -0.0010673070792108774, -0.7517369985580444, -2.50339189733495e-06, -0.0013598490040749311, -0.0029333680868148804, -0.003831072011962533, -0.00017498392844572663, -0.000382707774406299, -1.6689286894688848e-06, -1.511196494102478, -0.01270674541592598, -0.012896466068923473, -3.305497169494629, -0.2428070306777954, -0.0017389428103342652, -1.9073468138230965e-06, -3.7788631743751466e-05, -0.009350200183689594, -0.001987983239814639, -6.544376083184034e-05, -0.0001776060671545565, -0.00022551853908225894, -4.172316494077677e-06, -3.576278118089249e-07, -0.08107779175043106, -0.10848292708396912, -0.5023812651634216, -1.0683389902114868, -0.003932719584554434, -0.0032946374267339706, -6.580135959666222e-05, -1.9192511899746023e-05, -0.00425766222178936, -0.0012817509705200791, -0.08330097794532776, -0.16175071895122528, -0.00017677174764685333, -0.05426700785756111, -0.6594845056533813, -0.0017328736139461398, -3.1234397888183594, -0.06893175840377808, -0.26847973465919495, -0.016844183206558228, -0.03469850867986679, -0.08752956241369247, -0.00011002412065863609, -1.9932527542114258, -0.0021928329952061176, -0.1917826533317566, -0.006612917874008417, -0.5549603700637817, -0.0010380124440416694, -0.0030336808413267136, -0.009087629616260529, -0.4311901032924652, -0.027536306530237198, -0.00031716562807559967, -0.00010668662434909493, -0.2022121101617813, -6.913899414939806e-05, -1.4424220353248529e-05, 0.0, -0.00010048838157672435, -0.0005362979718483984, -0.00283316383138299, -3.136837959289551, -0.05763954669237137, -2.83151912689209, -2.9801878554280847e-05, -0.15121133625507355, -0.00037019551382400095, -0.937921941280365, -0.16529706120491028, -0.797311544418335, -0.005872615147382021, -2.5111119747161865, -0.010756016708910465, -0.12066268920898438, -2.2894186973571777, -0.8275305032730103, -0.001405324088409543, -0.00010382589971413836, -0.40084782242774963, -0.07426387071609497, -0.8712361454963684, -0.04116544872522354, -0.04240582138299942, -0.19645601511001587, -0.0007047553663142025, -0.1357068121433258, -0.017805730924010277, -0.0011011258466169238, -0.0008441222598776221, -0.00021264675888232887, -0.136654332280159, -0.08343543857336044, -1.823885577323381e-05, -1.490105023549404e-05, -0.311979204416275, -5.722029527532868e-06, -0.006510476116091013, -3.576278118089249e-07, -0.002829597797244787, -0.18270060420036316, -0.6360496878623962, -0.022973336279392242, -0.056679971516132355, -4.8397800128441304e-05, -6.97350042173639e-05, -0.0017445358680561185, -0.023188142105937004, -0.0012717501958832145, -0.052957382053136826, -0.00031144535751082003, -0.053896475583314896], "finish_reason": "length"}], "metrics": {"energy": 301.9501019659041, "energy_per_token": 1.1794925858043128, "time": 11.3586035, "time_per_token": 0.044369544921875}}
{"outputs": [{"text": "# Preprocess the text data by removing non-alphanumeric characters\n    # and converting to lowercase.\n    # Also remove stopwords.\n    # Note: We use regex to match any non-alphanumeric character that is not a space,\n    # and we remove the space before passing the text to lowercase.\n    preprocessed_texts = [ALPHANUMERIC.sub(' ', text.lower()).strip() for text in texts]\n\n    # Create a list of all the words in the preprocessed texts\n    all_words = [word for text in preprocessed_texts for word in text.split()]\n\n    # Remove stopwords\n    words = [word for word in all_words if word not in STOPWORDS]\n\n    # Count the occurrence of each word\n    word_count = Counter(words)\n\n    # Create a list of unique words\n    unique_words = list(word_count.keys())\n\n    # Create a tf-idf matrix with shape (num_words, num_texts)\n    tf_idf_matrix = np.zeros((len(unique_words", "tokens": ["#", " Pre", "process", " the", " text", " data", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", "\n", "    ", "#", " and", " converting", " to", " lower", "case", ".", "\n", "    ", "#", " Also", " remove", " stop", "words", ".", "\n", "    ", "#", " Note", ":", " We", " use", " regex", " to", " match", " any", " non", "-", "al", "phan", "umeric", " character", " that", " is", " not", " a", " space", ",", "\n", "    ", "#", " and", " we", " remove", " the", " space", " before", " passing", " the", " text", " to", " lower", "case", ".", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "strip", "()", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Create", " a", " list", " of", " all", " the", " words", " in", " the", " pre", "processed", " texts", "\n", "    ", "all", "_", "words", " =", " [", "word", " for", " text", " in", " pre", "processed", "_", "text", "s", " for", " word", " in", " text", ".", "split", "()", "]", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " all", "_", "words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " occurrence", " of", " each", " word", "\n", "    ", "word", "_", "count", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "#", " Create", " a", " list", " of", " unique", " words", "\n", "    ", "unique", "_", "words", " =", " list", "(", "word", "_", "count", ".", "keys", "())", "\n", "\n", "    ", "#", " Create", " a", " tf", "-", "id", "f", " matrix", " with", " shape", " (", "num", "_", "words", ",", " num", "_", "text", "s", ")", "\n", "    ", "tf", "_", "id", "f", "_", "matrix", " =", " np", ".", "zeros", "((", "len", "(", "unique", "_", "words"], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.6037266850471497, -0.5607988238334656, -2.009856700897217, -1.6218318939208984, -1.9899076223373413, -0.07769504934549332, -0.06570052355527878, -0.0029874478932470083, -0.012993313372135162, -0.00020132421923335642, -0.0008223251206800342, -0.012761593796312809, -2.797192096710205, -0.001085764612071216, -0.5040993094444275, -0.5618811249732971, -0.04929203540086746, -0.7477878332138062, -0.014242897741496563, -0.00986521877348423, -1.878237009048462, -0.3132730722427368, -0.010697402060031891, -1.7902964353561401, -2.1709492206573486, -0.5271878242492676, -0.2546428442001343, -0.049354784190654755, -1.1380627155303955, -0.018188709393143654, -0.025767337530851364, -1.6968441009521484, -3.1616177558898926, -0.2909633219242096, -2.7387304306030273, -2.0753488540649414, -3.4626574516296387, -0.6878794431686401, -1.9993908405303955, -2.2353525161743164, -0.3354592025279999, -0.012393014505505562, -0.11683463305234909, -0.003528204746544361, -0.003580827033147216, -0.5162482261657715, -4.058300971984863, -0.47831249237060547, -0.05973753705620766, -0.1596727818250656, -0.02473003789782524, -2.7770724296569824, -0.7704198360443115, -0.0005491655902005732, -0.0012266262201592326, -0.84465092420578, -2.324242115020752, -2.1678380966186523, -1.4074103832244873, -2.1234869956970215, -2.697584629058838, -3.439788341522217, -0.6822618842124939, -1.355545163154602, -0.2769467234611511, -1.5820549726486206, -0.8321872353553772, -0.4356593191623688, -0.08135487139225006, -0.04177730903029442, -1.2430564165115356, -0.062345363199710846, -0.04737450182437897, -0.050249651074409485, -0.01479275617748499, -0.0061727589927613735, -0.373374342918396, -0.39214712381362915, -5.602820692729438e-06, -7.295342220459133e-05, -9.727005090098828e-05, -1.2636104656849056e-05, -0.0001429217227268964, -0.00019453064305707812, -0.0004161922261118889, -0.07048497349023819, -0.4043509066104889, -0.023050107061862946, -0.23612333834171295, -0.661470353603363, -0.017855850979685783, -0.09989152103662491, -0.1692403107881546, -0.23657847940921783, -0.008994773961603642, -0.4041455388069153, -0.0010920758359134197, -0.0001720042055239901, -0.0005175919504836202, -0.01830272004008293, -0.0009301149984821677, -0.30259430408477783, -0.0003953390696551651, -0.046827029436826706, -1.5354242324829102, -0.22950099408626556, -3.1414191722869873, -0.0929785668849945, -2.298802375793457, -2.1782727241516113, -0.5822930335998535, -0.29650527238845825, -0.5491561889648438, -0.5509509444236755, -0.008023412898182869, -0.5624107122421265, -0.9533474445343018, -0.0003149013500660658, -0.8590552806854248, -0.0012835367815569043, -0.008655531331896782, -0.028627581894397736, -0.46886909008026123, -0.18512731790542603, -0.2478746771812439, -0.1636805236339569, -0.0007845661020837724, -0.001420561340637505, -6.151010165922344e-05, -6.651657167822123e-05, -5.960462772236497e-07, -1.0728830375228426e-06, -0.02191167324781418, -0.002760055009275675, -0.0029655785765498877, -0.0701214000582695, -0.0035861723590642214, -0.008067285642027855, -0.04543676599860191, -0.09864174574613571, -0.0006286313873715699, -0.024373289197683334, -0.0006181474891491234, -0.010877009481191635, -0.5524582266807556, -0.4979933202266693, -0.06215045973658562, -1.8035986423492432, -0.0002585315378382802, -1.7424100637435913, -0.5699743628501892, -0.05633906275033951, -0.04126451537013054, -0.015676947310566902, -0.0010084786918014288, -0.00045193947153165936, -0.012683086097240448, -6.007967749610543e-05, -5.483612312673358e-06, -0.005044589750468731, -0.0068058110773563385, -0.10281006991863251, -9.65590606938349e-06, -0.006605812348425388, -9.536738616588991e-07, -1.5616295058862306e-05, -4.529942543740617e-06, -7.867782187531702e-06, -0.0028659719973802567, -0.0005490464391186833, -0.02485179342329502, -0.00042250767000950873, -0.024282773956656456, -3.2429425716400146, -0.2968384325504303, -2.9162259101867676, -0.0033786376006901264, -0.060540806502103806, -0.08472384512424469, -1.0002307891845703, -0.0003051292151212692, -0.204450324177742, -0.0034273474011570215, -1.7398200035095215, -0.08319063484668732, -0.4869638979434967, -0.0014247277285903692, -0.00422525592148304, -9.7508447652217e-05, -0.01163011509925127, -0.05302860587835312, -0.00034671969478949904, -0.012077300809323788, -0.8764700293540955, -0.17699827253818512, -0.9495372772216797, -0.03050759993493557, -2.1311752796173096, -0.014430447481572628, -0.4623231589794159, -0.00020823694649152458, -0.20185337960720062, -0.0010346779599785805, -0.0018669809214770794, -0.0008015995263122022, -0.14380498230457306, -0.004114021547138691, -0.18769440054893494, -0.00014983485743869096, -0.000105375460407231, -0.02899671345949173, -0.0015285247936844826, -3.957670196541585e-05, -0.0008962904685176909, -0.014547002501785755, -0.0004017737810499966, -0.011736392974853516, -0.7509016394615173, -0.22826196253299713, -2.4090523719787598, -0.24286584556102753, -0.0013605633284896612, -0.00013004888023715466, -0.9141340851783752, -2.5805037021636963, -2.6880030632019043, -0.14275714755058289, -1.2556374073028564, -0.028259359300136566, -1.1462889909744263, -0.01771567203104496, -0.13956017792224884, -0.006915799342095852, -0.792698860168457, -0.004108560271561146, -0.001488054753281176, -0.06389418989419937, -0.0017520328983664513, -0.22243863344192505, -0.7476705312728882, -0.10850367695093155, -0.00045908879837952554, -0.4069992005825043, -0.03995629400014877, -0.0013516347389668226, -2.1157121658325195, -0.000325388420606032, -0.33316072821617126, -0.0579657256603241, -0.007142131216824055, -8.821448318485636e-06, -0.04796610027551651, -5.6265202147187665e-05, -1.2040065485052764e-05], "finish_reason": "length"}], "metrics": {"energy": 263.6532710256576, "energy_per_token": 1.029895589943975, "time": 11.354902, "time_per_token": 0.0443550859375}}
{"outputs": [{"text": "texts = [text.lower() for text in texts]\n    texts = [re.sub(ALPHANUMERIC, ' ', text).strip() for text in texts]\n    texts = [text for text in texts if text not in STOPWORDS]\n\n    tfidf = TfidfVectorizer()\n    tfidf.fit(texts)\n    documents = tfidf.transform(texts)\n    nmf = NMF(num_topics)\n    nmf.fit(documents)\n    topics = nmf.components_\n\n    return [[tfidf.get_feature_names_out()[i] for i in argsorted(topic, topics[topic_id])[0:2] if tfidf.get_feature_names_out()[i] not in STOPWORDS] for topic_id in range(num_topics)]", "tokens": ["text", "s", " =", " [", "text", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n", "    ", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ")", ".", "strip", "()", " for", " text", " in", " texts", "]", "\n", "    ", "text", "s", " =", " [", "text", " for", " text", " in", " texts", " if", " text", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "tf", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", ".", "fit", "(", "text", "s", ")", "\n", "    ", "doc", "uments", " =", " tf", "id", "f", ".", "transform", "(", "text", "s", ")", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "num", "_", "top", "ics", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "doc", "uments", ")", "\n", "    ", "top", "ics", " =", " nm", "f", ".", "components", "_", "\n", "\n", "    ", "return", " [[", "tf", "id", "f", ".", "get", "_", "feature", "_", "names", "_", "out", "()[", "i", "]", " for", " i", " in", " args", "orted", "(", "topic", ",", " topics", "[", "topic", "_", "id", "])", "[", "0", ":", "2", "]", " if", " tf", "id", "f", ".", "get", "_", "feature", "_", "names", "_", "out", "()[", "i", "]", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " topic", "_", "id", " in", " range", "(", "num", "_", "top", "ics", ")]", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.74534010887146, -0.030968500301241875, -0.1633799821138382, -0.06599317491054535, -2.6611952781677246, -0.08638965338468552, -0.13962528109550476, -0.0007677706307731569, -1.337907075881958, -0.010758375748991966, -0.000633992429357022, -0.029702508822083473, -0.04280656576156616, -0.0316883847117424, -0.10820116847753525, -0.2764798402786255, -0.002836611121892929, -0.008955313824117184, -0.038390107452869415, -1.7970759868621826, -0.00015245705435518175, -0.06837080419063568, -0.12835994362831116, -0.12838080525398254, -4.017272294731811e-05, -0.00011514954530866817, -3.0517112463712692e-05, -6.6756979322235566e-06, -0.00012575789878610522, -0.03417043760418892, -0.5067195296287537, -0.0007404923089779913, -0.00042417587246745825, -0.04958781972527504, -0.025674276053905487, -1.0138983726501465, -0.49085482954978943, -0.006024534814059734, -0.05580662935972214, -0.00034850722295232117, -6.425174069590867e-05, -0.00019631843315437436, -0.009863448329269886, -0.006540321744978428, -0.02074216678738594, -0.06014295667409897, -0.0003064401389565319, -0.0020896997302770615, -0.03211907297372818, -0.44156819581985474, -0.8812230825424194, -0.003496843855828047, -0.00018475732940714806, -0.016402173787355423, -0.0016056514577940106, -0.3356161117553711, -0.35493433475494385, -4.768370445162873e-07, -0.0059465630911290646, -1.0728830375228426e-06, -8.702239938429557e-06, -6.318072337307967e-06, -5.8412379075889476e-06, -0.012129592709243298, -0.004321047570556402, -0.696474552154541, -9.357491217087954e-05, -1.5753825902938843, -0.13335253298282623, -0.0014423454413190484, -0.2062401920557022, -0.0006168370018713176, -1.7881377516459906e-06, -8.260862523457035e-05, -4.768370445162873e-07, -1.728519782773219e-05, -1.0490362910786644e-05, -0.6344067454338074, -0.18706123530864716, -0.011382521130144596, -1.1995861530303955, -0.04221418872475624, -0.002501455834135413, -1.6726840734481812, -0.011636359617114067, -0.3214482069015503, -0.0008075552177615464, -3.71926071238704e-05, -0.00041106835124082863, -0.005203869193792343, -0.3371034860610962, -2.665374279022217, -1.1352522373199463, -0.02696254663169384, -0.12798409163951874, -5.483612312673358e-06, -7.152555099310121e-07, -1.9192511899746023e-05, -0.004375764634460211, -0.0031909046228975058, -0.0003234816831536591, -6.329813186312094e-05, -0.00033122775494121015, -0.02998320758342743, -1.396552324295044, -0.2127314805984497, -0.0002980979916173965, -0.007954703643918037, -0.00032646095496602356, -7.950943836476654e-05, -0.0023505459539592266, -0.9926989078521729, -2.062299427052494e-05, -0.0360543318092823, -3.099436753473128e-06, -1.702589988708496, -0.03228263929486275, -0.007310781162232161, -0.07613278180360794, -6.544376083184034e-05, -0.008673849515616894, -0.0006055190460756421, -0.09190934151411057, -0.0020427091512829065, -1.4305104514278355e-06, -0.02108130417764187, -0.004677188582718372, -0.4742962419986725, -1.1434930562973022, -0.11475424468517303, -0.013214156962931156, -1.4960564374923706, -0.00013410145766101778, -0.0004621868138201535, -0.02508131042122841, -0.017709815874695778, -0.9179565906524658, -0.9554105997085571, -0.000296310376143083, -0.44454410672187805, -1.683730125427246, -0.9368970990180969, -0.0012325793504714966, -3.528532761265524e-05, -0.008845786564052105, -0.21228964626789093, -9.405170567333698e-05, -0.00114994659088552, -2.0265558760002023e-06, -0.0038463911041617393, -2.4315195083618164, -0.0005912224878557026, -0.00547682773321867, -0.683859646320343, -0.006751345470547676, -0.0915878564119339, -0.009114562533795834, -0.18230560421943665, -3.2796244621276855, -1.6613860130310059, -0.034782905131578445, -0.7193368673324585, -0.9126119017601013, -0.48459920287132263, -0.04395923390984535, -1.8889780044555664, -0.06590690463781357, -1.629644751548767, -0.1965608149766922, -0.9920806288719177, -1.9837672710418701, -0.10890017449855804, -2.7805280685424805, -2.078672170639038, -1.5069234371185303, -1.1212645769119263, -0.00010847456724150106, -3.123234637314454e-05, -0.0022800182923674583, -0.007567429915070534, -2.9682672902708873e-05, -0.00031668893643654883, -5.483612312673358e-06, -0.00017677174764685333, -0.026120221242308617, -0.0003412379592191428, -0.010421263985335827, -0.0029658162966370583, -0.01797083579003811, -0.36188945174217224, -0.0003364712174516171, -0.02708229050040245, -3.576278118089249e-07, -0.00011550712952157483, -1.4185804502631072e-05, -8.702239938429557e-06, -0.16590972244739532, -0.3016256093978882, -0.006437280215322971, -0.0006542449118569493, -9.7508447652217e-05, -0.4737427830696106, -0.014868045225739479, -0.00026246439665555954, -0.7193072438240051, -0.0015374518698081374, -4.172238186583854e-05, -5.960462772236497e-07, -0.01951962150633335, -0.8746457099914551, -1.5497195136049413e-06, -1.311301275563892e-06, -4.7801782784517854e-05, -0.0003164505760651082, -0.06552313268184662], "finish_reason": "stop"}], "metrics": {"energy": 263.7618726072313, "energy_per_token": 1.2267994074754944, "time": 9.679362, "time_per_token": 0.04502028837209302}}
{"outputs": [{"text": "# Preprocessing\n    preprocessed_texts = [ALPHANUMERIC.sub('', t).lower().split() for t in texts]\n    stopword_removed_texts = [[w for w in t if w not in STOPWORDS] for t in preprocessed_texts]\n\n    # Vectorization\n    vectorizer = TfidfVectorizer(max_df=1.0, min_df=0.0)\n    vector = vectorizer.fit_transform(stopword_removed_texts)\n\n    # NMF\n    nmf = NMF(n_components=num_topics, init='random', random_state=0, max_iter=300)\n    components = nmf.fit_transform(vector)\n\n    # Extracting topics\n    topics = [vectorizer.inverse_transform(components[i])[0] for i in range(len(components))]\n    return topics", "tokens": ["#", " Pre", "processing", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " t", ")", ".", "lower", "()", ".", "split", "()", " for", " t", " in", " texts", "]", "\n", "    ", "stop", "word", "_", "rem", "oved", "_", "text", "s", " =", " [[", "w", " for", " w", " in", " t", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " t", " in", " pre", "processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ization", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "max", "_", "df", "=", "1", ".", "0", ",", " min", "_", "df", "=", "0", ".", "0", ")", "\n", "    ", "vector", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "stop", "word", "_", "rem", "oved", "_", "text", "s", ")", "\n", "\n", "    ", "#", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " init", "='", "random", "'", ",", " random", "_", "state", "=", "0", ",", " max", "_", "iter", "=", "3", "0", "0", ")", "\n", "    ", "components", " =", " nm", "f", ".", "fit", "_", "transform", "(", "vector", ")", "\n", "\n", "    ", "#", " Ext", "racting", " topics", "\n", "    ", "top", "ics", " =", " [", "vector", "izer", ".", "inverse", "_", "transform", "(", "components", "[", "i", "])", "[", "0", "]", " for", " i", " in", " range", "(", "len", "(", "components", "))", "]", "\n", "    ", "return", " topics", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.8840726017951965, -0.6892301440238953, -0.007413732353597879, -2.2664613723754883, -0.09666675329208374, -0.08485899120569229, -0.052908651530742645, -0.006433490198105574, -0.004519960843026638, -0.3124535381793976, -0.3831149935722351, -7.867782187531702e-06, -0.00010895135346800089, -3.0517112463712692e-05, -6.198863957251888e-06, -9.512448741588742e-05, -0.00021896349790040404, -0.0005297449533827603, -0.03296628221869469, -1.5784759521484375, -0.00020811776630580425, -1.8754023313522339, -0.7604626417160034, -0.014799804426729679, -0.01729736290872097, -0.001914693508297205, -0.4475584924221039, -0.5007981657981873, -0.02259078621864319, -0.04626503214240074, -0.00024303820100612938, -6.0794889577664435e-05, -0.0007670559571124613, -0.009027263149619102, -0.018079953268170357, -0.08582823723554611, -1.3786345720291138, -0.9773575067520142, -0.010658598504960537, -1.0884573459625244, -0.10992661863565445, -0.3736187815666199, -0.055517975240945816, -0.006099775433540344, -0.002877620980143547, -2.0669379234313965, -0.3829357922077179, -0.025387367233633995, -0.00010466027742950246, -0.00034528967808000743, -0.41016820073127747, -0.004615012556314468, -0.0385979562997818, -0.027418125420808792, -6.079655122448457e-06, -0.00543390866369009, -2.7418097943154862e-06, -1.728519782773219e-05, -1.8000440832111053e-05, -6.556489552167477e-06, -0.0032126503065228462, -0.034503668546676636, -0.00010775939153973013, -4.279521817807108e-05, -0.0010552796302363276, -0.00015889335190877318, -3.2186455882765586e-06, -2.3841855067985307e-07, -1.0728830375228426e-06, -0.0005706112715415657, -0.0011886443244293332, -0.9960213303565979, -0.0002517383254598826, -0.06462819874286652, -0.3578115403652191, -0.08569585531949997, -0.2320217341184616, -0.0005397531786002219, -0.38785409927368164, -0.01025384571403265, -0.0005183068569749594, -0.00029476112104021013, -2.264974000354414e-06, -3.6238969187252223e-05, -2.264974000354414e-06, -1.168244216387393e-05, -1.3232143828645349e-05, -0.6311178803443909, -2.278799295425415, -1.680836794548668e-05, -0.5590133666992188, -0.00420875521376729, -2.9138898849487305, -0.01901048794388771, -0.010088169947266579, -0.007027196232229471, -0.9636624455451965, -1.4305104514278355e-06, -0.0002579356369096786, -0.0002493547508493066, -0.39078590273857117, -0.01834099367260933, -0.6752251982688904, -1.3399204015731812, -0.029994891956448555, -0.002998382318764925, -1.1239089965820312, -1.8938887119293213, -0.0021540552843362093, -0.00013195598148740828, -2.4199192921514623e-05, -0.0014109190087765455, -0.010840335860848427, -0.00010525626566959545, -0.014579781331121922, -0.004888724535703659, -1.0371154530730564e-05, -1.311301275563892e-06, -2.622600959512056e-06, -0.00025459862081333995, -2.861018856492592e-06, -3.576278118089249e-07, -1.1444026313256472e-05, -0.00015877417172305286, -0.009919869713485241, -0.07840379327535629, -0.0004259632551111281, -0.03816511854529381, -0.716135561466217, -0.0009760859538801014, -0.3391880393028259, -0.00016592556494288146, -0.3266235888004303, -0.00028320116689428687, -0.022314883768558502, -0.00029059001826681197, -8.356221951544285e-05, -0.001412704586982727, -0.5332996845245361, -4.291525328881107e-06, -0.001210790709592402, -0.003325291909277439, -0.0040008751675486565, -0.0002548369811847806, -0.0004220310365781188, -1.6689286894688848e-06, -0.24015182256698608, -1.311653733253479, -0.06853388994932175, -0.044419679790735245, -0.07916843146085739, -3.0636318115284666e-05, -0.05163958668708801, -2.288792165927589e-05, -2.6464111215318553e-05, -0.0007317964336834848, -0.7535738945007324, -0.5851238965988159, -0.3070235550403595, -0.00020930961181875318, -0.0006817638641223311, -0.004523521289229393, -3.1508231163024902, -0.01623176597058773, -0.011625872924923897, -0.8765605092048645, -0.010511391796171665, -0.008025187067687511, -1.5647145509719849, -0.09766992926597595, -0.007520222570747137, -8.583032467868179e-06, -7.70062324590981e-05, -0.06499198824167252, -0.00935929361730814, -5.23315102327615e-05, -0.0001833270798670128, -0.0007214327342808247, -0.21342603862285614, -0.323642373085022, -0.4045921266078949, -0.00020597243565134704, -0.20814990997314453, -0.4046548008918762, -1.0431370735168457, -0.6691665649414062, -0.11866733431816101, -0.00028355870745144784, -0.4708710312843323, -0.12964436411857605, -0.014422692358493805, -0.5463042855262756, -0.9671384692192078, -0.002171779051423073, -7.188061863416806e-05, -0.8487470149993896, 0.0, -0.00025602878304198384, -0.05941159650683403, -0.1328834742307663, -0.44739869236946106, -0.051108263432979584, -0.38852182030677795, -0.6836509704589844, -0.003391112433746457, -0.009023246355354786, -0.14863987267017365, -9.214453893946484e-05, -0.0006139777251519263, -0.0006387577159330249, -0.00010227633902104571, -2.0164942741394043, -8.821098163025454e-05, -0.23862576484680176, -0.010848118923604488, -0.00125770119484514, -0.003275032388046384, -0.7041898965835571, -0.18774756789207458, -0.025975389406085014, -0.8074274659156799, -3.4570634852570947e-06, -1.1920922133867862e-06, -1.966933996300213e-05, -0.0005393957253545523, -0.0730486735701561], "finish_reason": "stop"}], "metrics": {"energy": 239.0478896541598, "energy_per_token": 1.048455656377894, "time": 10.10168, "time_per_token": 0.04430561403508772}}
{"outputs": [{"text": "# Preprocessing: Remove non-alphanumeric characters and convert to lowercase, remove stopwords\n    processed_texts = []\n    for text in texts:\n        text = ALPHANUMERIC.sub('', text).lower().split()\n        text = [word for word in text if word not in STOPWORDS]\n        processed_texts.append(text)\n\n    # TF-IDF Vectorizer and NMF\n    vectorizer = TfidfVectorizer(stop_words='english')\n    vectorizer.fit(processed_texts)\n    tfidf = vectorizer.transform(processed_texts)\n    nmf = NMF(num_topics=num_topics, random_state=42, max_iter=200)\n    nmf.fit(tfidf)\n\n    # Get the most significant words for each topic\n    topics = []\n    for component_idx in range(num_topics):\n        component = nmf.components_[component_idx]\n        word_idx = np.argsort(-component)\n        words = [", "tokens": ["#", " Pre", "processing", ":", " Remove", " non", "-", "al", "phan", "umeric", " characters", " and", " convert", " to", " lower", "case", ",", " remove", " stop", "words", "\n", "    ", "processed", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", ")", ".", "lower", "()", ".", "split", "()", "\n", "        ", "text", " =", " [", "word", " for", " word", " in", " text", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "        ", "processed", "_", "text", "s", ".", "append", "(", "text", ")", "\n", "\n", "    ", "#", " TF", "-", "ID", "F", " Vector", "izer", " and", " N", "MF", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "vector", "izer", ".", "fit", "(", "processed", "_", "text", "s", ")", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "transform", "(", "processed", "_", "text", "s", ")", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "num", "_", "top", "ics", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ",", " max", "_", "iter", "=", "2", "0", "0", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "tf", "id", "f", ")", "\n", "\n", "    ", "#", " Get", " the", " most", " significant", " words", " for", " each", " topic", "\n", "    ", "top", "ics", " =", " []", "\n", "    ", "for", " component", "_", "idx", " in", " range", "(", "num", "_", "top", "ics", "):", "\n", "        ", "component", " =", " nm", "f", ".", "components", "_[", "component", "_", "idx", "]", "\n", "        ", "word", "_", "idx", " =", " np", ".", "args", "ort", "(-", "component", ")", "\n", "        ", "words", " =", " ["], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.8840726017951965, -1.2882788181304932, -1.0008447170257568, -0.07289396226406097, -0.006656615063548088, -0.023903286084532738, -0.0004913791781291366, -0.0018029639031738043, -0.02177836187183857, -1.0833487510681152, -0.31994953751564026, -0.20959846675395966, -0.0022902467753738165, -0.008533205837011337, -2.6767280101776123, -0.8851655721664429, -0.016254402697086334, -0.019225211814045906, -0.35311633348464966, -0.003824065439403057, -0.8495108485221863, -0.03008200041949749, -0.049454860389232635, -0.0037547105457633734, -0.004104286432266235, -1.4308252334594727, -0.0009540535393171012, -0.015328929759562016, -0.010341629385948181, -0.18962956964969635, -0.0005710878176614642, -0.000797311426140368, -0.0001289761275984347, -0.00018845213344320655, -0.00293990527279675, -0.9088889956474304, -0.04327712953090668, -0.4878752529621124, -1.2397689715726301e-05, -2.9682672902708873e-05, -0.0003588747640606016, -6.9141146923357155e-06, -0.00014518637908622622, -0.0003159739135298878, -0.00042024365393444896, -0.026640141382813454, -1.6014808416366577, -2.312633478140924e-05, -0.012760416604578495, -0.36259445548057556, -0.10673494637012482, -0.00918768160045147, -0.00020382710499688983, -1.0987060070037842, -0.3490432798862457, -0.012660839594900608, -0.0056471810676157475, -0.005952369887381792, -0.8364585638046265, -0.025802306830883026, -0.022946307435631752, -0.08004538714885712, -0.021477265283465385, -0.00022027450904715806, -0.00010275312524754554, -0.03923248127102852, -0.0017288275994360447, -0.01015567034482956, -0.025138158351182938, -1.4305104514278355e-06, -0.0028247239533811808, -1.1920922133867862e-06, -1.597391747054644e-05, -5.006777428206988e-06, -5.8412379075889476e-06, -0.007637585513293743, -0.0019710890483111143, -0.002785970689728856, -0.015314842574298382, -4.23184028477408e-05, -2.932505594799295e-05, -0.000940595637075603, -0.00013457823661156, -0.00019870213873218745, -0.15298399329185486, -0.029428213834762573, -0.0002885640424210578, -0.00013612773909699172, -0.026138337329030037, -0.0007285801111720502, -0.023330815136432648, -2.3566510677337646, -0.005252134520560503, -0.00010299152199877426, -5.8410845667822286e-05, -2.092181921005249, -2.8195881843566895, -2.261303424835205, -0.21308200061321259, -0.001042775809764862, -0.22794879972934723, -0.0006901028100401163, -0.2733592092990875, -0.0017923733685165644, -0.00035577642847783864, -0.0004383556661196053, -2.50339189733495e-06, -1.7881233361549675e-05, -2.3841830625315197e-06, -7.152531907195225e-06, -5.364403477869928e-06, -0.7687854170799255, -0.6746800541877747, -0.0003579214389901608, -0.00010156115604331717, -0.0625719204545021, -0.011383464559912682, -7.152555099310121e-07, -0.055138200521469116, -0.008557317778468132, -0.003821452846750617, -1.049972653388977, -1.462275743484497, -0.017976924777030945, -0.010726651176810265, -0.12874749302864075, -0.0022705032024532557, -1.6689160474925302e-05, -5.602820692729438e-06, -4.172316494077677e-06, -0.00022373080719262362, -0.01390707679092884, -0.14730587601661682, -1.496309757232666, -0.35229480266571045, -0.004845305811613798, -0.6566255688667297, -0.012455650605261326, -0.00037377048283815384, -4.625213477993384e-05, -0.03389298543334007, -0.003476411337032914, -0.002370882546529174, -4.7801782784517854e-05, -9.536738616588991e-07, -1.5497195136049413e-06, -7.879423355916515e-05, -0.019710276275873184, -0.16850298643112183, -0.27724263072013855, -0.00024470672360621393, -0.01335908379405737, -0.0002205128694185987, -6.5205356804654e-05, -0.0012631779536604881, -0.6326605677604675, -1.2278481335670222e-05, -0.12599869072437286, -3.4570634852570947e-06, -0.3189466595649719, -0.0025643580593168736, -0.0003641180810518563, -0.0001532914029667154, -4.768360213347478e-06, -0.19253133237361908, -0.13458387553691864, -4.172316494077677e-06, -0.000300958170555532, -0.0004180987598374486, -0.8253366351127625, -0.01595844328403473, -1.209324836730957, -1.573335886001587, -4.589452510117553e-05, -0.0012825843878090382, -0.005720790475606918, -1.291577935218811, -0.06374991685152054, -0.03758181259036064, -0.9795545339584351, -0.09584617614746094, -0.013407898135483265, -0.08166231215000153, -2.2649508537142538e-05, -0.00532672181725502, -0.0009388091857545078, -0.12076781690120697, -0.0023456697817891836, -7.986990567587782e-06, 0.0, -0.018512913957238197, -0.00412351917475462, -0.10776232928037643, -0.0002615109842736274, -0.07063350081443787, -2.5026867389678955, -0.715112030506134, -0.7238713502883911, -0.1398540735244751, -0.10163706541061401, -0.17502936720848083, -0.005178016144782305, -0.032003164291381836, -0.18885907530784607, -0.00010966652916977182, -0.9298219084739685, -0.31299903988838196, -0.01481272466480732, -0.21806274354457855, -0.0007722970913164318, -0.0010782625759020448, -0.031387947499752045, -3.380420684814453, -0.9661107063293457, -1.6151390075683594, -0.09313736855983734, -0.03262399882078171, -0.00011002412065863609, -0.4504918158054352, -9.953480184776708e-05, -3.0874729418428615e-05, -1.4305104514278355e-06, -0.0002450642641633749, -0.0006492413813248277, -0.0004985281848348677, -0.5824772715568542, -1.1712368726730347, -0.03232695907354355, -2.7179348762729205e-05, -3.158996332786046e-05, -0.0031527597457170486, -0.015563341788947582, -0.000753357307985425, -5.245195097813848e-06, -1.5258672647178173e-05, -0.01409598346799612, -0.1075783297419548, -0.003980452660471201, -2.4576754570007324, -0.008489236235618591, -0.5026269555091858, -0.6447198987007141, -0.5318080186843872, -1.7046782886609435e-05, -0.053246211260557175, -0.00021991695393808186, -1.7683063745498657, -0.08539928495883942, -0.04052814468741417, -0.4667172431945801, -0.004831662867218256, -2.0571064949035645, -0.02021099254488945, -0.8611634969711304], "finish_reason": "length"}], "metrics": {"energy": 278.036630563736, "energy_per_token": 1.0860805881395938, "time": 11.56555, "time_per_token": 0.0451779296875}}
{"outputs": [{"text": "vectorizer = TfidfVectorizer(stop_words=STOPWORDS)\n    tfidf = vectorizer.fit_transform(texts)\n    nmf = NMF(n_components=num_topics, random_state=42)\n    topics = nmf.fit_transform(tfidf).toarray()\n    return [nltk.word_tokenize(t) for t in topics]", "tokens": ["vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "top", "ics", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", ")", ".", "to", "array", "()", "\n", "    ", "return", " [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "t", ")", " for", " t", " in", " topics", "]", "\n", "\n", "def"], "logprobs": [-2.838578939437866, -0.030164474621415138, -0.0012365083675831556, -0.0006898645660839975, -3.3378546504536644e-06, -5.543078441405669e-05, -3.814689989667386e-06, -1.3708974620385561e-05, -3.099436753473128e-06, -0.05477972701191902, -0.4153074622154236, -0.0017665509367361665, -0.0002493547508493066, -0.8504273295402527, -0.08893247693777084, -1.1920922133867862e-06, -0.0003070359816774726, -0.00017951308109331876, -1.4662635294371285e-05, -0.6801350116729736, -0.01724967546761036, -0.039202794432640076, -1.731631875038147, -0.18892361223697662, -0.0037967516109347343, -0.6771051287651062, -0.002596580656245351, -5.435795901576057e-05, -5.829164365422912e-05, -0.0005175919504836202, -0.0018139113672077656, -0.00011455356434453279, -0.0036473434884101152, -0.07116276025772095, -0.00034374051028862596, -0.00033825874561443925, -0.016171595081686974, -0.37308165431022644, -0.13606438040733337, -0.00024077377747744322, -0.008056997321546078, -0.00042512916843406856, -9.464769391342998e-05, -0.0013016331940889359, -0.9965383410453796, -5.006777428206988e-06, -0.0016756316181272268, -0.003308776533231139, -0.004696410149335861, -0.0002522150462027639, -0.0011438739020377398, -2.264974000354414e-06, -0.3180438280105591, -0.3372206687927246, -3.576272320060525e-06, -0.00041929035796783864, -0.0007284610182978213, -0.5630813837051392, -0.016609251499176025, -0.34232357144355774, -0.020296620205044746, -0.018744241446256638, -2.1595821380615234, -0.08795182406902313, -0.017813224345445633, -0.06525547057390213, -7.390948667307384e-06, -0.00013696208770852536, -0.004696054384112358, -0.0017063356935977936, -0.00013386306818574667, -0.00026651646476238966, -0.000681883015204221, -7.152531907195225e-06, -1.1920928244535389e-07, -0.14133000373840332, -0.14553146064281464, -0.6453254818916321, -0.006256043910980225, -0.0008218486327677965, -0.3207530677318573, -0.3127962648868561, -0.7282619476318359, -0.4566369652748108, -2.4985876083374023, -0.0006451908848248422, -0.0005934861255809665, -0.06818497180938721, -0.015109728090465069, -0.032191451638936996, -0.0005957497633062303, -0.036622554063797, -2.645313262939453, -0.5898661613464355, -0.012928121723234653, -0.003703403752297163, -0.0018411604687571526, -0.03875095024704933, -0.40429872274398804, -0.3052671551704407, -0.023563358932733536, -1.0685607194900513], "finish_reason": "stop"}], "metrics": {"energy": 102.67755784130097, "energy_per_token": 1.0066427239343232, "time": 4.2200775, "time_per_token": 0.041373308823529416}}
{"outputs": [{"text": "texts = [ALPHANUMERIC.sub(' ', t).lower() for t in texts]\n    for i, text in enumerate(texts):\n        # Remove stopwords\n        words = [word for word in text.split() if word.lower() not in STOPWORDS]\n        # Convert words into tf-idf vector\n        docs = TfidfVectorizer(analyzer='word', stop_words='list').fit(texts)\n        tfidf = docs.transform([ALPHANUMERIC.sub(' ', t).lower() for t in texts]).toarray()\n        # Apply NMF with n_components=2\n        nmf = NMF(n_components=num_topics, random_state=42)\n        nmf.fit(tfidf)\n        # Retrieve component weights for topics\n        topic_words = [word for i, word in enumerate(docs.get_feature_names())\n                       if nmf.components_[0, i] > 0.05]\n        # Add the sorted topic words to the topics list\n", "tokens": ["text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " t", ")", ".", "lower", "()", " for", " t", " in", " texts", "]", "\n", "    ", "for", " i", ",", " text", " in", " enumerate", "(", "text", "s", "):", "\n", "        ", "#", " Remove", " stop", "words", "\n", "        ", "words", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "        ", "#", " Convert", " words", " into", " tf", "-", "id", "f", " vector", "\n", "        ", "docs", " =", " T", "f", "id", "f", "Vector", "izer", "(", "analy", "zer", "='", "word", "'", ",", " stop", "_", "words", "='", "list", "')", ".", "fit", "(", "text", "s", ")", "\n", "        ", "tf", "id", "f", " =", " docs", ".", "transform", "([", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " t", ")", ".", "lower", "()", " for", " t", " in", " texts", "])", ".", "to", "array", "()", "\n", "        ", "#", " Apply", " N", "MF", " with", " n", "_", "components", "=", "2", "\n", "        ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "        ", "nm", "f", ".", "fit", "(", "tf", "id", "f", ")", "\n", "        ", "#", " Ret", "rieve", " component", " weights", " for", " topics", "\n", "        ", "topic", "_", "words", " =", " [", "word", " for", " i", ",", " word", " in", " enumerate", "(", "docs", ".", "get", "_", "feature", "_", "names", "())", "\n", "                ", "       ", "if", " nm", "f", ".", "components", "_[", "0", ",", " i", "]", " >", " ", "0", ".", "0", "5", "]", "\n", "        ", "#", " Add", " the", " sorted", " topic", " words", " to", " the", " topics", " list", "\n"], "logprobs": [-2.74534010887146, -0.030968500301241875, -0.1633799821138382, -0.06599317491054535, -0.2201610654592514, -5.364403477869928e-06, -0.00017653337272349745, -3.3854863431770355e-05, -1.0251946150674485e-05, -0.000176652567461133, -0.0003070359816774726, -0.0001510267611593008, -0.02773575857281685, -0.35920020937919617, -0.019952310249209404, -1.748672366142273, -0.4120175838470459, -0.06022927537560463, -0.056218717247247696, -0.0014557965332642198, -0.9244412183761597, -0.00034505134681239724, -7.676783570786938e-05, -0.0010453957365825772, -0.01930028386414051, -0.05502177029848099, -0.034784864634275436, -2.7080540657043457, -0.5714899897575378, -0.6169019341468811, -2.171046257019043, -0.001932302606292069, -0.0005240259342826903, -0.00020621081057470292, -0.0003607814433053136, -2.0265558760002023e-06, -0.006149774417281151, -0.018781211227178574, -0.003716468345373869, -2.884056806564331, -1.2373924255371094, -0.5822680592536926, -0.09060501307249069, -1.061896800994873, -0.00021717573690693825, -1.8578932285308838, -0.01709195226430893, -0.131783589720726, -0.9040927290916443, -0.06708621978759766, -0.0010080024367198348, -0.0015248350100591779, -0.10884564369916916, -0.005705500021576881, -0.02387535199522972, -0.05763200670480728, -0.010788566432893276, -0.024059824645519257, -1.8830268383026123, -0.042258646339178085, -0.0007883778307586908, -0.021164756268262863, -0.00010585224663373083, -0.008004019036889076, -1.1920922133867862e-06, -1.537788011773955e-05, -8.22540732769994e-06, -7.390948667307384e-06, -0.013349086046218872, -0.0005658455775119364, -0.03937070816755295, -0.9594632983207703, -2.2031478881835938, -1.0866639614105225, -2.5287551879882812, -2.952944755554199, -0.09574858099222183, -0.00482430774718523, -0.007859732955694199, -0.7568381428718567, -0.20168979465961456, -0.000504723924677819, -3.992344379425049, -0.05762818083167076, -1.171507716178894, -1.2755313036905136e-05, -0.0005996812833473086, -9.775113539944869e-06, -9.405170567333698e-05, -7.319182623177767e-05, -0.3472546935081482, -1.9563355445861816, -0.07914496958255768, -0.2115621715784073, -0.23600396513938904, -0.2846968173980713, -3.266281055402942e-05, -1.1144317388534546, -4.029192859889008e-05, -0.0002079985715681687, -0.3819882869720459, -0.6120628714561462, -0.3589636981487274, -0.13468202948570251, -0.0092240609228611, -2.337352752685547, -2.2984156608581543, -0.005889798980206251, -0.10907591879367828, -0.08704834431409836, -0.006970966700464487, -1.5589531660079956, -0.7855454087257385, -0.016492702066898346, -0.3493756055831909, -0.051747582852840424, -0.00022599527437705547, -0.008542070165276527, -1.0473099946975708, -2.7320914268493652, -2.753696753643453e-05, -0.0009470268851146102, -0.00028463127091526985, -1.1444026313256472e-05, -0.0057935649529099464, -0.00024780540843494236, -0.0008599635912105441, -0.006264691706746817, -0.0222679004073143, -0.00019047829846385866, -0.5016631484031677, -0.0178853590041399, -0.16905298829078674, -0.007844475097954273, -0.0004650464979931712, -0.029936006292700768, -0.004025808535516262, -0.00034409802174195647, -0.17919720709323883, -0.0809333398938179, -2.363699436187744, -0.3807199001312256, -0.06459500640630722, -0.10232453048229218, -0.06164935231208801, -0.10501610487699509, -0.4045558571815491, -1.4076834917068481, -0.09484181553125381, -0.002221380127593875, -2.666524648666382, -4.743882656097412, -0.06687706708908081, -0.031238792464137077, -0.6271021962165833, -1.1884709596633911, -0.6056861281394958, -0.0007832558476366103, -0.2475222796201706, -0.0008856903295964003, -0.01488296128809452, -0.0007419217727147043, -9.619726915843785e-05, -0.0032399799674749374, -0.06619022786617279, -4.410734163684538e-06, -0.0002687808300834149, -0.002496223896741867, -0.17375478148460388, -0.001909934333525598, -0.0017190692014992237, -2.038458114839159e-05, -0.22689294815063477, -0.6518230438232422, -4.0531076592742465e-06, -8.999896090244874e-05, -0.0006515049026347697, -1.2294671535491943, -0.038228798657655716, -0.4628371596336365, -0.2322690784931183, -0.0020663831382989883, -0.21645091474056244, -0.0002817710628733039, -0.011873052455484867, -0.0007834940915927291, -0.1523938626050949, -0.0032025498803704977, -0.00011169286881340668, -2.3841855067985307e-07, -0.010900003835558891, -0.008975517004728317, -0.08100248873233795, -0.30372607707977295, -3.4753971099853516, -0.03559530898928642, -2.183556079864502, -0.734529972076416, -2.025506019592285, -2.270475387573242, -0.08754365146160126, -0.0009996660519391298, -1.7984405755996704, -0.09648502618074417, -0.6990496516227722, -0.016401469707489014, -0.46443644165992737, -3.634748935699463, -0.09745313227176666, -2.5874576568603516, -0.039475683122873306, -0.06425097584724426, -0.002411673776805401, -0.27805280685424805, -0.001640999224036932, -0.04670553281903267, -0.00016282663273159415, -0.009871238842606544, -0.00010585224663373083, -0.0005588161875493824, -2.3841855067985307e-07, -0.0009301149984821677, -0.43324628472328186, -1.3517107963562012, -0.024750621989369392, -0.1644863486289978, -0.0009028411004692316, -0.12960760295391083, -3.3854863431770355e-05, -6.937739817658439e-05, -0.02259335108101368, -0.0029137558303773403, -0.3826596140861511, -1.2305713891983032, -0.13370457291603088, -0.017483990639448166, -0.09411674737930298, -0.10964377224445343, -0.059913039207458496, -0.18212895095348358, -0.8390273451805115, -1.6658445596694946, -0.04985085874795914, -0.015406056307256222, -0.07454616576433182, -1.0919241905212402, -2.5149483680725098, -2.2093496322631836, -2.973964214324951, -0.934735894203186, -0.19330067932605743, -0.3013167977333069, -0.24024136364459991, -1.1471961736679077, -0.10433930158615112, -0.055887795984745026], "finish_reason": "length"}], "metrics": {"energy": 263.9312511510848, "energy_per_token": 1.030981449808925, "time": 11.360133, "time_per_token": 0.04437551953125}}
{"outputs": [{"text": "# Preprocessing: Remove non-alphanumeric characters, convert to lowercase, and remove stopwords\n    preprocessed_texts = []\n    for text in texts:\n        text = ALPHANUMERIC.sub(' ', text).lower()\n        words = [word for word in text.split() if word.lower() not in STOPWORDS]\n        preprocessed_texts.append(' '.join(words))\n\n    # Vectorize and apply NMF to extract topics\n    vectorizer = TfidfVectorizer(max_df=0.95, min_df=5, max_features=25000)\n    tfidf = vectorizer.fit_transform(preprocessed_texts)\n\n    nmf = NMF(n_components=num_topics)\n    component_weights = nmf.fit(tfidf).components_\n\n    # Extract topics and their most significant words\n    top_words = []\n    for component in component_weights:\n        top_words.append([vectorizer.get_feature_names()[i] for i in range(", "tokens": ["#", " Pre", "processing", ":", " Remove", " non", "-", "al", "phan", "umeric", " characters", ",", " convert", " to", " lower", "case", ",", " and", " remove", " stop", "words", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", "\n", "        ", "words", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "        ", "pre", "processed", "_", "text", "s", ".", "append", "('", " '", ".", "join", "(", "words", "))", "\n", "\n", "    ", "#", " Vector", "ize", " and", " apply", " N", "MF", " to", " extract", " topics", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "max", "_", "df", "=", "0", ".", "9", "5", ",", " min", "_", "df", "=", "5", ",", " max", "_", "features", "=", "2", "5", "0", "0", "0", ")", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "pre", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "component", "_", "weights", " =", " nm", "f", ".", "fit", "(", "tf", "id", "f", ")", ".", "components", "_", "\n", "\n", "    ", "#", " Ext", "ract", " topics", " and", " their", " most", " significant", " words", "\n", "    ", "top", "_", "words", " =", " []", "\n", "    ", "for", " component", " in", " component", "_", "weights", ":", "\n", "        ", "top", "_", "words", ".", "append", "([", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()[", "i", "]", " for", " i", " in", " range", "("], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.8840726017951965, -1.2882788181304932, -1.0008447170257568, -0.07289396226406097, -0.006656615063548088, -0.023903286084532738, -0.0004913791781291366, -0.0018029639031738043, -0.02177836187183857, -1.0230021476745605, -0.10578437149524689, -0.08824098110198975, -0.0011826909612864256, -0.008421030826866627, -0.033566925674676895, -0.41722410917282104, -0.02304544672369957, -0.014133713208138943, -0.013190745376050472, -0.1253175288438797, -0.004543932154774666, -1.4117588996887207, -0.04028256610035896, -0.04636017978191376, -0.053185850381851196, -0.0026487763971090317, -0.00284445658326149, -1.6399900913238525, -0.000993354362435639, -0.013113565742969513, -0.00836145132780075, -0.15048396587371826, -0.0006825978052802384, -0.0010009760735556483, -0.00011383838864276186, -0.00025948495022021234, -0.002074234653264284, -0.8632837533950806, -0.04707839712500572, -0.4776094853878021, -1.2397689715726301e-05, -3.242440288886428e-05, -0.0003734129713848233, -1.0490362910786644e-05, -0.00020585325546562672, -0.00023278864682652056, -0.00022504181833937764, -0.01956743560731411, -0.288278728723526, -0.00044312194222584367, -0.006367158610373735, -0.2894313335418701, -0.15748175978660583, -0.03249626234173775, -0.00028618055512197316, -0.3577139973640442, -0.0052717006765306, -1.0888614654541016, -0.00655986275523901, -0.6063390970230103, -0.12827837467193604, -0.18206019699573517, -0.0003748429589904845, -0.0001248043408850208, -0.08911612629890442, -0.001058137626387179, -0.03458359092473984, -0.03884085267782211, -0.005540254060178995, -0.011820864863693714, -1.9642717838287354, -0.0435740165412426, -0.0008747326792217791, -0.00991514790803194, -9.059865078597795e-06, -0.002815570682287216, -1.5497195136049413e-06, -8.702239938429557e-06, -3.099436753473128e-06, -6.9141146923357155e-06, -0.01616314984858036, -0.0023290193639695644, -0.0024396199733018875, -0.08922756463289261, -0.00012063252506777644, -0.00025650550378486514, -0.0005555993411689997, -0.011654269881546497, -0.0002165798214264214, -0.0003175231395289302, -0.34631669521331787, -0.0016405232017859817, -1.966933996300213e-05, -0.00015662873920518905, -0.0007394201820716262, -0.002577675273641944, -0.013914130628108978, -0.001700980355963111, -0.03583594411611557, -0.0009076051646843553, -0.02447938546538353, -0.2209184467792511, -2.7497925758361816, -1.3214261531829834, -1.302286148071289, -0.013425776734948158, -0.00028165188268758357, -1.886062502861023, -0.4770299792289734, -0.07649009674787521, -0.020771358162164688, -0.0006372089846991003, -0.15450361371040344, -0.003193043638020754, -0.00018749863374978304, -0.00020144341397099197, -1.4305104514278355e-06, -3.0874729418428615e-05, -1.5497195136049413e-06, -6.9141146923357155e-06, -5.364403477869928e-06, -0.626726508140564, -1.8676109313964844, -1.847726889536716e-05, -0.537463903427124, -0.0019832244142889977, -0.09234856069087982, -1.4305012882687151e-05, -0.6580755114555359, -0.25332677364349365, -0.012315184809267521, -0.7506788969039917, -1.7881377516459906e-06, -0.0007643162389285862, -0.00016926287207752466, -1.95542311668396, -0.31963369250297546, -1.6641082763671875, -2.4676019165781327e-05, -0.0406317375600338, -0.0009158230968751013, -2.3654956817626953, -2.9004828929901123, -0.02345949597656727, -0.11570324003696442, -1.0232855081558228, -0.6950820088386536, -0.015181000344455242, -0.0033690142445266247, -1.243889570236206, -0.0885334312915802, -0.0015732781030237675, -1.2637194395065308, -0.002174871740862727, -1.6331539882230572e-05, -1.3708974620385561e-05, -0.0011604249011725187, -0.0017389428103342652, -8.34430247778073e-05, -0.0013917532050982118, -0.0007310817018151283, -6.806619057897478e-05, -6.9141146923357155e-06, -5.960462772236497e-07, -2.3841830625315197e-06, -0.0003567297535482794, -0.008757753297686577, -2.363023519515991, -0.00012087091454304755, -0.6932055950164795, -0.00032360086333937943, -0.015421433374285698, -0.00028427375946193933, -6.246371776796877e-05, -0.0012379371328279376, -0.6519455909729004, -6.794906312279636e-06, -0.0024199981708079576, -0.0013573489850386977, -0.0037281073164194822, -0.00023862851958256215, -0.0005024601123295724, -1.311301275563892e-06, -2.3054282665252686, -0.014059661887586117, -0.006629733834415674, -3.675820827484131, -0.018886849284172058, -0.13971641659736633, -0.00488706398755312, -0.0025184601545333862, -9.65590606938349e-06, -0.00011431517486926168, -0.0036586271598935127, -1.0920538902282715, -0.0009176096064038575, -5.722029527532868e-06, -2.3841855067985307e-07, -0.15482062101364136, -0.0050040241330862045, -0.014390144497156143, -0.002762313699349761, -0.09380508214235306, -0.20410211384296417, -0.00016592556494288146, -0.3465627133846283, -0.6701512336730957, -0.024260900914669037, -0.8966974020004272, -2.2897963523864746, -2.0639045238494873, -0.33161860704421997, -0.10146905481815338, -0.013764816336333752, -0.12845933437347412, -0.00012110930401831865, -0.1304921805858612, -2.853137969970703, -0.30595019459724426, -0.13635513186454773, -0.15036459267139435, -0.002161906100809574, -0.0024748193100094795, -0.009768304415047169, -2.1575334072113037, -0.8092900514602661, -0.1263362020254135, -2.4318398573086597e-05, -5.98412734689191e-05, -0.01862829178571701, -0.0010141950333490968, -0.0005118728731758893, -1.4184086322784424, -0.0475129708647728, -0.08767557889223099, -0.048471834510564804, -0.0005452338373288512, -1.2714359760284424, -0.5770750641822815, -6.949660019017756e-05, -3.71926071238704e-05, -0.13904215395450592, -1.2040065485052764e-05, -0.0013862771447747946, -2.3841855067985307e-07, -0.002358514117076993, -0.27689358592033386, -0.16875314712524414, -0.0015794672071933746, -0.18035629391670227, -0.005530295893549919, -0.04944033548235893, -0.6317680478096008, -0.0002406545972917229], "finish_reason": "length"}], "metrics": {"energy": 270.25891406345374, "energy_per_token": 1.0556988830603662, "time": 11.358744, "time_per_token": 0.04437009375}}
{"outputs": [{"text": "# Remove non-alphanumeric characters (excluding spaces), convert all characters to lowercase, and remove stopwords\n    preprocessed_texts = [ALPHANUMERIC.sub(' ', text.lower()) for text in texts]\n    preprocessed_texts = [text for text in preprocessed_texts if text.strip()]\n\n    # Convert to tfidf vectorization\n    vectorizer = TfidfVectorizer(stop_words=STOPWORDS)\n    tfidf_matrix = vectorizer.fit_transform(preprocessed_texts)\n\n    # Perform NMF\n    nmf = NMF(num_topics=num_topics, random_state=42)\n    nmf.fit(tfidf_matrix)\n\n    # Extract topics\n    topics = []\n    for topic_idx, component_weights in enumerate(nmf.components_):\n        topic_words = [\n            (word, component_weights[word_idx])\n            for word_idx, word in enumerate(vectorizer.get_feature_names_out())\n            if component_", "tokens": ["#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " (", "ex", "cluding", " spaces", ")", ",", " convert", " all", " characters", " to", " lower", "case", ",", " and", " remove", " stop", "words", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "text", " for", " text", " in", " pre", "processed", "_", "text", "s", " if", " text", ".", "strip", "()", "]", "\n", "\n", "    ", "#", " Convert", " to", " tf", "id", "f", " vector", "ization", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "pre", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Perform", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "num", "_", "top", "ics", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "\n", "    ", "#", " Ext", "ract", " topics", "\n", "    ", "top", "ics", " =", " []", "\n", "    ", "for", " topic", "_", "idx", ",", " component", "_", "weights", " in", " enumerate", "(", "nm", "f", ".", "components", "_", "):", "\n", "        ", "topic", "_", "words", " =", " [", "\n", "            ", "(", "word", ",", " component", "_", "weights", "[", "word", "_", "idx", "])", "\n", "            ", "for", " word", "_", "idx", ",", " word", " in", " enumerate", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "            ", "if", " component", "_"], "logprobs": [-0.6158158183097839, -2.1831674575805664, -0.1319149136543274, -0.00872738379985094, -0.02687040902674198, -0.000773488252889365, -0.0020216519478708506, -0.024178868159651756, -1.1613435745239258, -0.2027031034231186, -0.000967153930105269, -0.022234907373785973, -0.001465795561671257, -1.8356415033340454, -0.154832661151886, -1.3171460628509521, -0.030079571530222893, -0.00917764101177454, -0.006043256726115942, -0.0029993331991136074, -0.09589307010173798, -0.4830946922302246, -0.06624121963977814, -0.027247611433267593, -0.004394873045384884, -0.15504707396030426, -0.0020256969146430492, -1.316635012626648, -0.04685239866375923, -0.03323246166110039, -0.03811084106564522, -0.004467743914574385, -0.002554013393819332, -0.21498601138591766, -0.3536253571510315, -7.629365427419543e-06, -9.274052717955783e-05, -4.1483970562694594e-05, -1.0967194612021558e-05, -0.00016699827392585576, -0.00037472377880476415, -0.000675807474181056, -0.02821752242743969, -0.4650367796421051, -0.003328499849885702, -0.34094253182411194, -0.6437190771102905, -0.010319920256733894, -0.04688913747668266, -1.411405086517334, -0.0015654225135222077, -0.00011276562872808427, -0.0014135378878563643, -0.13446059823036194, -0.003938300535082817, -0.06985975056886673, -0.5426598787307739, -0.0004888770054094493, -0.00020466140995267779, -0.0031144944950938225, -0.00021514961554203182, -0.0133410869166255, -0.028761491179466248, -1.808454155921936, -1.4803622961044312, -0.0069951158948242664, -0.00021705655672121793, -0.007748783566057682, -0.00018535325943958014, -4.6967357775429264e-05, -1.9073468138230965e-06, -4.887569048150908e-06, -0.01382524985820055, -0.1951960176229477, -0.8296687006950378, -0.1318427175283432, -0.012856453657150269, -0.29654955863952637, -0.04423881322145462, -1.0549951791763306, -0.00021050144277978688, -0.1555505394935608, -1.6985487937927246, -2.457810878753662, -2.617501974105835, -1.9273593425750732, -0.0028089135885238647, -0.601131021976471, -0.9337360858917236, -0.4289921820163727, -0.0007129749283194542, -0.2723091244697571, -0.007153138518333435, -0.0008401916129514575, -0.0004698126285802573, -3.576272320060525e-06, -4.851700214203447e-05, -3.4570634852570947e-06, -8.583032467868179e-06, -1.168244216387393e-05, -0.31506088376045227, -0.1316749006509781, -0.0016192194307222962, -0.0001387499796692282, -0.45203897356987, -0.054772164672613144, -5.960462772236497e-07, -7.366862701019272e-05, -2.288792165927589e-05, -8.583032467868179e-06, -0.12158667296171188, -0.010155552998185158, -0.004365438595414162, -1.0333631038665771, -0.06030817702412605, -0.003588072955608368, -0.468995600938797, -0.2464439421892166, -0.0013959197094663978, -0.0032340388279408216, -2.4318398573086597e-05, -1.1324817933200393e-05, -0.00033206192892976105, -6.16293036728166e-05, -8.260862523457035e-05, -0.002545333234593272, -0.0008052920456975698, -4.172238186583854e-05, -2.0265558760002023e-06, -4.768370445162873e-07, -1.7881377516459906e-06, -0.0003634030872490257, -0.019624128937721252, -0.059430696070194244, -0.00047565114800818264, -0.03538372740149498, -1.2283213138580322, -0.15258873999118805, -0.001737157697789371, -0.6132912635803223, -0.0002236116270069033, -0.2144635021686554, -0.00023576818057335913, -0.05204196274280548, -0.00022718709078617394, -0.00011324241495458409, -0.001335563138127327, -1.3026024103164673, -1.823885577323381e-05, -0.19280456006526947, -4.172316494077677e-06, -0.4122709333896637, -0.0031976778991520405, -0.00020180096908006817, -0.00014757021563127637, -2.9802276912960224e-06, -0.28158271312713623, -0.2773823142051697, -7.629365427419543e-06, -0.00016056202002801, -0.0005501187406480312, -0.6719452142715454, -0.022362446412444115, -0.26876214146614075, -0.013651815243065357, -0.004077811259776354, -0.43567073345184326, -0.0002029928145930171, -0.08509726077318192, -0.0002964295563288033, -0.19487997889518738, -0.0004956685588695109, -2.7418097943154862e-06, -1.1920928244535389e-07, -1.549708758830093e-05, -0.00024101213784888387, -0.026773735880851746, -0.004261460620909929, -0.10251283645629883, -0.0002456601650919765, -0.05720879137516022, -0.4516352415084839, -0.00853651575744152, -0.8806870579719543, -0.5582221746444702, -0.0002119316632160917, -0.3176755905151367, -0.09238475561141968, -0.014008058235049248, -1.254091739654541, -0.0008755664457567036, -0.009074398316442966, -0.0322360061109066, -1.0125776529312134, -0.19137123227119446, -0.5972875356674194, -1.3276705741882324, -0.6881039142608643, -0.18985971808433533, -0.33137524127960205, -0.0032265528570860624, -0.04700913652777672, -0.0006246999255381525, -0.005140895955264568, -1.6689286894688848e-06, -0.00033885458833537996, -0.0016177912475541234, -0.015862703323364258, -0.036033861339092255, -0.0025804101023823023, -0.0015544723719358444, -0.8880443572998047, -0.6756339073181152, -0.039380449801683426, -0.005329923238605261, -0.6378504037857056, -1.9276418685913086, -0.00671901972964406, -2.8012449741363525, -0.61456698179245, -0.1923070102930069, -0.6000561714172363, -0.0012835367815569043, -0.061656299978494644, -0.003726207185536623, -0.35036858916282654, -0.004790021106600761, -0.07435119152069092, -0.0969708189368248, -0.2030426412820816, -0.001589702907949686, -0.00249087275005877, -0.05018525570631027, -0.02754952758550644, -0.004261223133653402, -0.007955886423587799, -0.01384464930742979, -0.022179292514920235, -0.035311806946992874, -0.0001517419150331989, -0.051796820014715195, -8.344646857949556e-07, -1.0490362910786644e-05, -0.03048412874341011, -1.4305012882687151e-05, -0.0004278697888366878, -2.3841855067985307e-07, -0.0009373800130560994, -1.339148998260498, -0.00012218205665703863, -0.013019200414419174, -0.018596231937408447, -0.029456110671162605, -0.004266683477908373, -0.16829577088356018, -7.56950321374461e-05], "finish_reason": "length"}], "metrics": {"energy": 264.27173969650266, "energy_per_token": 1.0323114831894635, "time": 11.33502, "time_per_token": 0.044277421875}}
{"outputs": [{"text": "# Step 1: Preprocessing\n    processed_texts = [\n        ALPHANUMERIC.sub(' ', text).lower().split() for text in texts\n    ]\n    for i in range(len(processed_texts)):\n        while '' in processed_texts[i]:\n            processed_texts[i].remove('')\n\n    for i in range(len(processed_texts)):\n        while len(processed_texts[i]) < 3:\n            processed_texts[i].append('')\n\n    # Step 2: Vectorization and NMF\n    vectorizer = TfidfVectorizer(stop_words='english')\n    tfidf_matrix = vectorizer.fit_transform(processed_texts)\n\n    nmf = NMF(n_components=num_topics)\n    nmf.fit(tfidf_matrix)\n\n    # Step 3: Extraction\n    topic_words = []\n    for i in range(num_topics):\n        component_weights = nmf.components_[i]\n        top", "tokens": ["#", " Step", " ", "1", ":", " Pre", "processing", "\n", "    ", "processed", "_", "text", "s", " =", " [", "\n", "        ", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", ".", "split", "()", " for", " text", " in", " texts", "\n", "    ", "]", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "processed", "_", "text", "s", "))", ":", "\n", "        ", "while", " ''", " in", " processed", "_", "text", "s", "[", "i", "]:", "\n", "            ", "processed", "_", "text", "s", "[", "i", "]", ".", "remove", "('", "')", "\n", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "processed", "_", "text", "s", "))", ":", "\n", "        ", "while", " len", "(", "processed", "_", "text", "s", "[", "i", "])", " <", " ", "3", ":", "\n", "            ", "processed", "_", "text", "s", "[", "i", "]", ".", "append", "('", "')", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Vector", "ization", " and", " N", "MF", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Ext", "raction", "\n", "    ", "topic", "_", "words", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "num", "_", "top", "ics", "):", "\n", "        ", "component", "_", "weights", " =", " nm", "f", ".", "components", "_[", "i", "]", "\n", "        ", "top"], "logprobs": [-0.6158158183097839, -2.402909278869629, -0.026184208691120148, -0.03934263065457344, -0.06457456201314926, -0.4007037878036499, -0.3488759398460388, -0.35909655690193176, -0.021476097404956818, -1.0886467695236206, -0.029780501499772072, -0.04888071492314339, -0.004677307326346636, -0.004696647636592388, -0.5863054394721985, -1.6362128257751465, -0.0021244355011731386, -0.10992159694433212, -5.602820692729438e-06, -0.00021395778458099812, -3.433168603805825e-05, -6.198863957251888e-06, -1.0251946150674485e-05, -0.00019834458362311125, -0.000259723310591653, -0.02885044366121292, -0.3062989413738251, -0.006045507732778788, -0.286812424659729, -1.0725263357162476, -0.02332662232220173, -0.044167183339595795, -0.0008864049450494349, -0.22582882642745972, -1.0488715171813965, -0.03602868691086769, -0.5197874307632446, -0.0007666985620744526, -0.00024673278676345944, -0.0008764001540839672, -0.13105282187461853, -0.030666112899780273, -7.676783570786938e-05, -0.012550774961709976, -0.47270894050598145, -1.759852409362793, -0.37040090560913086, -1.094944715499878, -0.007937082089483738, -9.667406266089529e-05, -0.0035121680703014135, -1.0847986231965479e-05, -0.0075729903765022755, -2.4676019165781327e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.00033420699764974415, -5.149708886165172e-05, -0.006033658981323242, -0.0031512149143964052, -3.112804412841797, -0.7898582220077515, -0.0002843929105438292, -0.00029905137489549816, -0.00067223358200863, -2.3841855067985307e-07, -1.597391747054644e-05, -0.0037630239967256784, -5.1616290875244886e-05, -0.0015261442167684436, -0.028972510248422623, -0.0026721982285380363, -0.010585587471723557, -1.2278481335670222e-05, -1.1324817933200393e-05, -8.356221951544285e-05, -0.0005756151513196528, -0.0001565095444675535, -0.0007005859515629709, -0.001965259201824665, -0.01984257809817791, -0.004597569350153208, -0.0006785474251955748, -0.0026006230618804693, -1.6852679252624512, -0.08065492659807205, -1.3641690015792847, -0.17437539994716644, -0.02462431788444519, -0.019340625032782555, -0.00015245705435518175, -0.0012160295154899359, -4.565611743601039e-05, -0.012942596338689327, -9.595887240720913e-05, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.0007325111655518413, -5.9960475482512265e-05, -0.001719545223750174, -0.0015313815092667937, -1.0271133184432983, -2.201262950897217, -0.007751740515232086, -0.09627251327037811, -0.00014423283573705703, -2.3841855067985307e-07, -2.0265558760002023e-06, -0.0009538153535686433, -0.00010299152199877426, -0.017616821452975273, -1.3864232301712036, -0.07868955284357071, -1.3709872961044312, -0.02285589464008808, -0.006959838792681694, -0.0012167439563199878, -0.027937140315771103, -2.6225699912174605e-05, -7.986990567587782e-06, -2.622600959512056e-06, -0.0014497257070615888, -0.00022420754248742014, -0.0028232974000275135, -0.06712400913238525, -0.1053631380200386, -0.22010338306427002, -0.164876326918602, -0.0019382515456527472, -0.1394396871328354, -0.01637602224946022, -1.6426339149475098, -0.13906341791152954, -0.0004903068183921278, -0.008515476249158382, -0.006664786022156477, -0.5255618095397949, -0.04465204477310181, -1.5792628526687622, -0.5133792757987976, -0.0008541273418813944, -0.06559056043624878, -0.003896977985277772, -0.3169693052768707, -0.015535290353000164, -0.0007522851810790598, -0.0005053196800872684, -2.0265558760002023e-06, -3.5523738915799186e-05, -3.099436753473128e-06, -1.3947389561508317e-05, -1.0132738680113107e-05, -0.16441109776496887, -0.34505656361579895, -0.0009548871894367039, -0.000226472009671852, -0.7273868322372437, -0.009494153782725334, -9.536738616588991e-07, -0.14795762300491333, -0.011524297297000885, -0.010508914478123188, -1.5632237195968628, -0.15792272984981537, -0.0029472745954990387, -0.4590166211128235, -0.25581666827201843, -0.0007344171172007918, -0.003947562538087368, -9.894321920000948e-06, -1.3708974620385561e-05, -0.00033456450910307467, -6.97350042173639e-05, -7.950943836476654e-05, -0.009883751161396503, -0.014823648147284985, -1.5735502529423684e-05, -1.0728830375228426e-06, -3.576272320060525e-06, -0.0004138090298511088, -0.0451204888522625, -1.7513090372085571, -0.00014685506175737828, -0.5527850985527039, -0.0002603192115202546, -0.04146822541952133, -0.00026913834153674543, -5.113947918289341e-05, -0.001302704680711031, -0.8448472023010254, -3.099436753473128e-06, -0.0007924277451820672, -0.0026216681580990553, -0.003407507436349988, -0.00025281094713136554, -0.0005494038923643529, -1.311301275563892e-06, -1.3757903575897217, -0.021104298532009125, -0.012028186582028866, -0.5385996699333191, -9.643566590966657e-05, -0.10936564952135086, -0.0004366874636616558, -0.23630020022392273, -0.0007839705212973058, -9.536738616588991e-07, -1.1920928244535389e-07, -1.3112935448589269e-05, -0.00011908298620255664, -0.037323448807001114, -0.007591209840029478, -0.14750123023986816, -0.00040928093949332833, -0.26732969284057617, -0.03827698901295662, -0.00033861625706776977, -0.006304613780230284, -0.0006774752982892096, -0.35407155752182007, -0.4398978054523468, -0.26060277223587036, -0.0019791792146861553, -1.9604474306106567, -0.003097381442785263, -0.8851193189620972, -0.0196037907153368, -0.8656587600708008, -0.00695545831695199, -0.050556376576423645, -0.07195591181516647, -0.6672051548957825, -0.019585436210036278, -0.0021714221220463514, -0.00018630675913300365, -0.14581865072250366, -5.5549986427649856e-05, -7.867782187531702e-06, -1.1920928244535389e-07, -0.00033802041434682906, -0.0016500442288815975, -0.0007803970365785062, -1.6482820510864258, -0.285939484834671, -0.4394416809082031, -0.0027133338153362274, -0.01071945670992136, -1.0013530300057027e-05, -2.372236667724792e-05, -0.005281305871903896, -0.011898379772901535, -0.0009965697536244988, -0.013801734894514084, -0.069504514336586, -0.018041200935840607, -1.458182692527771], "finish_reason": "length"}], "metrics": {"energy": 289.00877562808967, "energy_per_token": 1.1289405297972253, "time": 11.359866, "time_per_token": 0.0443744765625}}
{"outputs": [{"text": "vectorizer = TfidfVectorizer(stop_words=STOPWORDS)\n    vectorized_docs = vectorizer.fit_transform(texts)\n\n    nmf = NMF(n_components=num_topics, random_state=42)\n    nmf.fit(vectorized_docs)\n\n    top_words = [\n        [vectorizer.get_feature_names_out()[idx] for idx, weight in enumerate(component) if weight > 0.0]\n        for component in nmf.components_\n    ]\n\n    return top_words", "tokens": ["vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "vector", "ized", "_", "docs", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "vector", "ized", "_", "docs", ")", "\n", "\n", "    ", "top", "_", "words", " =", " [", "\n", "        ", "[", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()[", "idx", "]", " for", " idx", ",", " weight", " in", " enumerate", "(", "component", ")", " if", " weight", " >", " ", "0", ".", "0", "]", "\n", "        ", "for", " component", " in", " nm", "f", ".", "components", "_", "\n", "    ", "]", "\n", "\n", "    ", "return", " top", "_", "words"], "logprobs": [-2.838578939437866, -0.030164474621415138, -0.0012365083675831556, -0.0006898645660839975, -3.3378546504536644e-06, -5.543078441405669e-05, -3.814689989667386e-06, -1.3708974620385561e-05, -3.099436753473128e-06, -0.05477972701191902, -0.4153074622154236, -0.0017665509367361665, -0.0002493547508493066, -0.8504273295402527, -0.08893247693777084, -1.1920922133867862e-06, -0.0003070359816774726, -0.00017951308109331876, -1.4662635294371285e-05, -0.6801350116729736, -0.01724967546761036, -0.039202794432640076, -1.2053695917129517, -0.2509538531303406, -0.13143055140972137, -0.8581876754760742, -0.001750366878695786, -0.015924183651804924, -1.0132738680113107e-05, -1.8715683836489916e-05, -0.001209719106554985, -0.00047362555051222444, -0.00012754580529872328, -0.010580633766949177, -0.02646671049296856, -0.00029273517429828644, -0.0005081792478449643, -0.021046869456768036, -0.7838508486747742, -0.00032014489988796413, -0.4358275532722473, -0.00034791138023138046, -0.07103396952152252, -0.000481132126878947, -7.70062324590981e-05, -0.0011947167804464698, -0.9667204022407532, -6.556489552167477e-06, -0.0013334201648831367, -0.0028153329622000456, -0.003535688389092684, -0.00025149996508844197, -0.0008498394163325429, -2.3841830625315197e-06, -0.2204572558403015, -0.41108518838882446, -4.529942543740617e-06, -0.0003303935518488288, -0.0005536930402740836, -0.557829737663269, -0.01859857141971588, -0.5024533867835999, -0.013630060479044914, -0.017027847468852997, -0.5984920859336853, -0.00041130665340460837, -0.10628153383731842, -0.0002445875434204936, -0.26731398701667786, -0.0008080316474661231, -0.00044526674901135266, -3.6954811548639555e-06, -0.00010978573118336499, -0.008133858442306519, -0.009240597486495972, -0.15451239049434662, -0.0001419681793777272, -0.7927371263504028, -1.6836833953857422, -0.37433239817619324, -0.37518468499183655, -0.6595474481582642, -0.5496472120285034, -0.003312697634100914, -0.4528513550758362, -2.0863468647003174, -0.009658275172114372, -0.00014423283573705703, -0.17351208627223969, -8.821448318485636e-06, -0.0028547984547913074, -1.1920928244535389e-07, -0.002080420730635524, -0.95916348695755, -0.00013529339048545808, -0.005254743155092001, -2.4029972553253174, -0.00586420064792037, -0.35400745272636414, -0.0054481360130012035, -0.9883624911308289, -1.9757717847824097, -0.013864518143236637, -0.39656487107276917, -0.0011051744222640991, -0.8718704581260681, -0.6915664076805115, -0.040752146393060684, -0.012886228039860725, -0.1262877732515335, -0.017273813486099243, -0.013590782880783081, -0.3053404986858368, -0.5007136464118958, -1.0299692153930664, -0.013414955697953701, -0.0029490573797374964, -0.0012221018550917506, -0.0007404923089779913, -0.0007911174325272441, -0.004259205423295498, -1.847726889536716e-05, -0.0003678122302517295, -0.001563994330354035, -0.0021974719129502773, -0.14507168531417847, -0.012508511543273926, -0.0002766464895103127, -0.002434863243252039, -0.16024725139141083, -0.0002961912250611931, -0.04932256042957306, -0.05996491014957428, -0.00015341058315243572, -5.602820692729438e-06], "finish_reason": "stop"}], "metrics": {"energy": 134.24963176155086, "energy_per_token": 0.9944417167522286, "time": 5.886877, "time_per_token": 0.043606496296296295}}
{"outputs": [{"text": "# Preprocess the texts to remove non-alphanumeric characters and convert to lowercase\n    processed_texts = [ALPHANUMERIC.sub('', text).lower() for text in texts]\n\n    # Remove stopwords from processed texts\n    processed_texts = [\n        word for word in processed_texts if not word.isspace() and word not in STOPWORDS]\n\n    # Vectorize the preprocessed texts using TF-IDF\n    vectorizer = TfidfVectorizer()\n    vectorized_texts = vectorizer.fit_transform(processed_texts)\n\n    # Apply NMF on the vectorized texts to extract the specified number of topics\n    nmf = NMF(n_components=num_topics)\n    components = nmf.fit_transform(vectorized_texts).toarray()\n\n    # Extract the most significant words for each topic\n    topics = []\n    for component in components:\n        idx, _ = np.argsort(component)\n        topics.append(\n            [vectorizer.get_feature_names()[i]", "tokens": ["#", " Pre", "process", " the", " texts", " to", " remove", " non", "-", "al", "phan", "umeric", " characters", " and", " convert", " to", " lower", "case", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", ")", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Remove", " stop", "words", " from", " processed", " texts", "\n", "    ", "processed", "_", "text", "s", " =", " [", "\n", "        ", "word", " for", " word", " in", " processed", "_", "text", "s", " if", " not", " word", ".", "iss", "pace", "()", " and", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Vector", "ize", " the", " pre", "processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "vector", "ized", "_", "text", "s", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", " on", " the", " vector", "ized", " texts", " to", " extract", " the", " specified", " number", " of", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "components", " =", " nm", "f", ".", "fit", "_", "transform", "(", "vector", "ized", "_", "text", "s", ")", ".", "to", "array", "()", "\n", "\n", "    ", "#", " Ext", "ract", " the", " most", " significant", " words", " for", " each", " topic", "\n", "    ", "top", "ics", " =", " []", "\n", "    ", "for", " component", " in", " components", ":", "\n", "        ", "idx", ",", " _", " =", " np", ".", "args", "ort", "(", "component", ")", "\n", "        ", "top", "ics", ".", "append", "(", "\n", "            ", "[", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()[", "i", "]"], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.6037266850471497, -0.5607988238334656, -0.6410573720932007, -1.9029635190963745, -0.10446086525917053, -0.07186206430196762, -0.0032614869996905327, -0.020337505266070366, -0.0002814135223161429, -0.0009839460253715515, -0.019396981224417686, -0.7605096101760864, -0.5556443929672241, -0.2145165055990219, -0.0073279403150081635, -0.010320745408535004, -0.172300785779953, -0.0015835139201954007, -0.8699256181716919, -0.007389356382191181, -0.015238296240568161, -0.0017247814685106277, -0.002588733099400997, -0.18298636376857758, -0.10630951076745987, -5.8412379075889476e-06, -0.0001902399235405028, -7.712543447269127e-05, -1.2755313036905136e-05, -0.00021753329201601446, -0.00022396916756406426, -0.00034397884155623615, -0.02910614013671875, -0.9230777025222778, -0.0002734287118073553, -0.304766982793808, -0.4977622628211975, -0.004957526456564665, -0.010188121348619461, -0.0004640932602342218, -0.3162408471107483, -0.000398198957554996, -4.0649541915627196e-05, -0.00033396866638213396, -0.010648926720023155, -0.00025138078490272164, -0.23597769439220428, -0.0002796259068418294, -0.003786182263866067, -0.0904182642698288, -0.03899518400430679, -0.0163522157818079, -0.5447639226913452, -1.9431427717208862, -0.1786656230688095, -0.10210206359624863, -0.00016473367577418685, -0.5082139372825623, -0.00023779425828251988, -0.0190406646579504, -0.0009678685455583036, -0.06864920258522034, -0.03442800045013428, -1.186891794204712, -0.0013671108754351735, -1.3775936365127563, -0.08339935541152954, -0.6157307624816895, -0.001644093543291092, -0.4133000671863556, -0.00016735584358684719, -0.0005274811992421746, -0.0055557843297719955, -0.26454073190689087, -2.9568886756896973, -0.18783974647521973, -2.1547062397003174, -3.072465658187866, -4.124556289752945e-05, -6.937739817658439e-05, -0.03070010244846344, -0.17346908152103424, -0.23548196256160736, -2.407998726994265e-05, -0.008329886943101883, -8.344646857949556e-07, -3.671578815556131e-05, -3.933898824470816e-06, -8.583032467868179e-06, -2.4276866912841797, -0.002316531492397189, -0.011840303428471088, -0.00052998325554654, -0.037770431488752365, -1.0600430965423584, -0.00612726341933012, -0.45015838742256165, -2.273904323577881, -0.007099520415067673, -0.06421375274658203, -0.3456968665122986, -0.08066977560520172, -0.0023393663577735424, -9.357491217087954e-05, -5.566918844124302e-05, -0.19720101356506348, -0.00031716562807559967, -0.18042895197868347, -0.0016199335223063827, -0.0002919009421020746, -0.0002619877050165087, -2.7418097943154862e-06, -4.5298504119273275e-05, -5.364403477869928e-06, -7.986990567587782e-06, -4.887569048150908e-06, -0.7304987907409668, -0.004338732920587063, -0.0042708381079137325, -0.9795027375221252, -0.3211074769496918, -0.022648008540272713, -0.28408676385879517, -0.008072488009929657, -0.0008597253472544253, -0.004651677794754505, -1.4543427823809907e-05, -1.8000440832111053e-05, -0.0011362532386556268, -0.00024232311989180744, -0.00012313561455812305, -0.006435503717511892, -0.002127052517607808, -5.745722592109814e-05, -4.768370445162873e-07, -2.3841855067985307e-07, -0.000256982195423916, -0.03502373769879341, -0.015078258700668812, -0.00032264748006127775, -0.010840571485459805, -1.3120193481445312, -0.02146081253886223, -0.0002544794406276196, -3.064647674560547, -0.29585492610931396, -0.05945102497935295, -0.005759074818342924, -0.39090341329574585, -1.8828067779541016, -0.1085411086678505, -1.4668340682983398, -0.5021142959594727, -0.0024067978374660015, -0.0008164886385202408, -0.0036233505234122276, -0.011971883475780487, -0.000692961853928864, -0.2722680866718292, -0.00014494798961095512, -0.08096323907375336, -0.00021181246847845614, -9.643566590966657e-05, -0.0006289887824095786, -0.5518524646759033, -5.483612312673358e-06, -0.0008850948070175946, -0.0029822182841598988, -0.0021379964891821146, -0.00041214076918549836, -0.0005723983631469309, -1.6689286894688848e-06, -1.4432058334350586, -0.0043865651823580265, -0.0034545527305454016, -2.9236886501312256, -0.0729835107922554, -0.0018204560037702322, -1.3708974620385561e-05, -7.83174327807501e-05, -0.0024726788979023695, -0.02413744293153286, -5.566918844124302e-05, -0.00013326710904948413, -0.0012649638811126351, -0.00015829740732442588, -1.847726889536716e-05, -5.8412379075889476e-06, -1.0728830375228426e-06, -0.051578789949417114, -1.3915672302246094, -0.20626850426197052, -0.010655885562300682, -0.001148755894973874, -0.25750723481178284, -0.10962016135454178, -0.00017081231635529548, -0.035298921167850494, -0.8927366733551025, -0.002165950369089842, -0.2924689054489136, -0.1679174154996872, -0.06877830624580383, -0.021557534113526344, -0.2079003006219864, -0.004470473621040583, -0.06067286431789398, -0.8384750485420227, -0.0003579214389901608, -0.5400253534317017, -0.24604323506355286, -0.008910062722861767, -0.7012404799461365, -0.0006246999255381525, -0.007416808977723122, -0.01627047173678875, -1.07157564163208, -0.06658121943473816, -0.007506024558097124, -0.007938501425087452, -0.00025769727653823793, -0.002137520583346486, -4.455407619476318, -2.2875876426696777, -2.258552074432373, -0.004205550067126751, -0.7662606835365295, -0.00012611546844709665, -1.1018376350402832, -0.00026854246971197426, -0.4912583529949188, -0.0771278515458107, -0.2220853716135025, -0.3147077262401581, -0.004024027846753597, -0.355676531791687, -0.031663667410612106, -0.0045541380532085896, -0.00017331528943032026, -0.6361771821975708, -2.3287012577056885, -0.0076702362857759, -0.36990538239479065, -0.8653883934020996, -0.0008411445305682719, -9.679325739853084e-05, -0.11967619508504868, -1.3947389561508317e-05, -0.0012728216825053096, -2.3841855067985307e-07, -0.0026708904188126326, -0.9777238965034485, -0.19512756168842316, -0.0045633940026164055], "finish_reason": "length"}], "metrics": {"energy": 265.1096807451247, "energy_per_token": 1.0355846904106434, "time": 11.348897, "time_per_token": 0.04433162890625}}
{"outputs": [{"text": "# Remove non-alphanumeric characters and convert to lowercase\n    processed_texts = [ALPHANUMERIC.sub('', text).lower() for text in texts]\n\n    # Remove stopwords\n    processed_texts = [\" \".join([w for w in word.split() if w not in STOPWORDS]) for word in processed_texts]\n\n    # Create a TF-IDF vectorizer\n    vectorizer = TfidfVectorizer(stop_words='english')\n    corpus = vectorizer.fit_transform(processed_texts)\n\n    # Initialize NMF\n    nmf = NMF(num_topics=num_topics, random_state=0, init='random', tol=1e-5, max_iter=500, alpha=1.0, l1_ratio=.95,\n              solver='auto')\n\n    # Fit NMF\n    nmf.fit(corpus)\n\n    # Retrieve top words for each topic\n    top_words = [sorted(nmf.components_[i].", "tokens": ["#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " and", " convert", " to", " lower", "case", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", ")", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "processed", "_", "text", "s", " =", " [", "\"", " \"", ".", "join", "([", "w", " for", " w", " in", " word", ".", "split", "()", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "])", " for", " word", " in", " processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Create", " a", " TF", "-", "ID", "F", " vector", "izer", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "cor", "pus", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Initialize", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "num", "_", "top", "ics", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ",", " init", "='", "random", "'", ",", " to", "l", "=", "1", "e", "-", "5", ",", " max", "_", "iter", "=", "5", "0", "0", ",", " alpha", "=", "1", ".", "0", ",", " l", "1", "_", "ratio", "=", ".", "9", "5", ",", "\n", "              ", "s", "olver", "='", "auto", "')", "\n", "\n", "    ", "#", " Fit", " N", "MF", "\n", "    ", "nm", "f", ".", "fit", "(", "cor", "pus", ")", "\n", "\n", "    ", "#", " Ret", "rieve", " top", " words", " for", " each", " topic", "\n", "    ", "top", "_", "words", " =", " [", "s", "orted", "(", "nm", "f", ".", "components", "_[", "i", "]", "."], "logprobs": [-0.6158158183097839, -2.1831674575805664, -0.1319149136543274, -0.00872738379985094, -0.02687040902674198, -0.000773488252889365, -0.0020216519478708506, -0.024178868159651756, -0.9864473342895508, -0.3517867624759674, -0.30013102293014526, -0.003411903278902173, -0.008763544261455536, -0.09134361892938614, -0.0015394752845168114, -1.2989006042480469, -0.020219987258315086, -0.030768191441893578, -0.004495158325880766, -0.0018581758486106992, -0.1359555423259735, -0.06230190396308899, -4.529942543740617e-06, -0.00013672371278516948, -0.00042274597217328846, -1.8715683836489916e-05, -0.00022957073815632612, -0.00036638224264606833, -0.0002460177056491375, -0.01932741142809391, -0.7895368337631226, -0.00034397884155623615, -0.32290536165237427, -0.5110520720481873, -0.0038963842671364546, -0.006398666650056839, -0.00039760314393788576, -0.15328900516033173, -0.0002728328399825841, -4.1483970562694594e-05, -0.0003066784702241421, -0.003730245167389512, -0.00018988236843142658, -0.2430439591407776, -0.0002388668799540028, -0.00263225007802248, -0.05279388278722763, -0.02136501669883728, -0.016718987375497818, -0.3248354196548462, -0.00024184639914892614, -0.31667250394821167, -0.0002335037279408425, -0.006725887302309275, -0.0006822404102422297, -0.03056229092180729, -0.04971747845411301, -2.0367445945739746, -0.00588825810700655, -0.00018034738604910672, -0.00026854246971197426, -0.5792324542999268, -3.0392282009124756, -0.015995867550373077, -0.0002506657037883997, -0.00021896349790040404, -2.043682813644409, -1.2148094177246094, -0.01860886812210083, -0.18552973866462708, -0.013773399405181408, -0.04863468185067177, -0.1562161147594452, -1.9430925021879375e-05, -0.01241656206548214, -8.344646857949556e-07, -4.017272294731811e-05, -6.556489552167477e-06, -6.556489552167477e-06, -0.005310002248734236, -0.1865324229001999, -0.02249230071902275, -0.00041416651220060885, -0.0032177597749978304, -3.182837463100441e-05, -1.6689286894688848e-06, -1.7881377516459906e-06, -0.0041898805648088455, -0.0006990373367443681, -0.021919487044215202, -0.00044979469384998083, -0.07902513444423676, -1.7995481491088867, -0.6672704815864563, -1.340620994567871, -0.009053489193320274, -0.00012206286191940308, -6.5205356804654e-05, -0.026895126327872276, -0.02365056425333023, -0.4332113265991211, -0.0003583981015253812, -0.2326793223619461, -0.0008488865569233894, -0.0002889215829782188, -0.000379132863599807, -3.576272320060525e-06, -3.266281055402942e-05, -5.245195097813848e-06, -7.867782187531702e-06, -7.033323527139146e-06, -0.5203053951263428, -0.5803625583648682, -0.0002325502864550799, -0.00013839241000823677, -0.18587426841259003, -0.0071500614285469055, -5.960462772236497e-07, -0.13832873106002808, -0.0060963393189013, -1.4636898040771484, -3.5026702880859375, -0.0008101756684482098, -0.023408375680446625, -0.3882932662963867, -0.00019405389321036637, -1.9550132492440753e-05, -0.0058147800154984, -5.936446541454643e-05, -0.0001641377166379243, -0.02973051369190216, -0.0032611305359750986, -9.179073458653875e-06, -3.576278118089249e-07, -2.9802276912960224e-06, -0.00022313489171210676, -0.06357541680335999, -0.024114519357681274, -0.0005005536950193346, -0.016299322247505188, -2.8165810108184814, -0.24126750230789185, -0.0005627478822134435, -1.8882789611816406, -0.000219321038457565, -0.19795064628124237, -0.00010072677832795307, -0.011354116722941399, -0.00029881304362788796, -0.00012385078298393637, -0.0017558409599587321, -1.1629130840301514, -1.645074735279195e-05, -0.10012796521186829, -2.264974000354414e-06, -0.2648431956768036, -0.004529336001724005, -0.0004459816846065223, -9.035655966727063e-05, -6.437280717364047e-06, -0.1847275197505951, -0.23649848997592926, -3.933898824470816e-06, -0.0001380348257953301, -0.0007188120507635176, -0.9469089508056641, -1.2226448059082031, -0.7630445957183838, -0.14611874520778656, -0.085534006357193, -1.1562353372573853, -0.0010096696205437183, -3.6713905334472656, -0.0004895919119007885, -0.004305141977965832, -0.22555439174175262, -0.07061916589736938, -0.00014399446081370115, -2.664790153503418, -0.73746657371521, -0.3805716931819916, -0.0005977750988677144, -0.0003457663697190583, -0.00437980005517602, -1.817294716835022, -0.007706198375672102, -0.03983040526509285, -1.2409627437591553, -1.5211209058761597, -0.004797139670699835, -1.1628496646881104, -0.745662271976471, -0.03183204308152199, -0.5164442658424377, -0.9726852178573608, -0.014806381426751614, -8.95221673999913e-05, -0.10548962652683258, -0.00410571089014411, -2.076589822769165, -0.6306296586990356, -0.21410991251468658, -0.7802726626396179, -0.5282807350158691, -0.15651890635490417, -1.8860615491867065, -0.06699982285499573, -0.038876973092556, -2.797881841659546, -1.4645224809646606, -0.013617242686450481, -0.11880157142877579, -0.00035208225017413497, -0.019369738176465034, -0.8229545950889587, -0.5998100638389587, -0.00016485285595990717, -2.207885265350342, -0.00013600854435935616, -0.2105916142463684, -0.000289159914245829, -0.0325455367565155, -0.0002588890492916107, -0.10057986527681351, -0.0007702721050009131, -4.410734163684538e-06, -0.015022597275674343, -0.003611591411754489, -0.038527075201272964, -0.00038187362952157855, -0.0730498880147934, -2.4975409507751465, -0.016370275989174843, -3.1561622619628906, -0.225709930062294, -0.36989498138427734, -0.020444145426154137, -0.051160141825675964, -0.0845612958073616, -0.0006772369961254299, -0.39601248502731323, -0.2812120318412781, -0.0153967821970582, -0.24609962105751038, -0.36501726508140564, -0.7612481713294983, -9.965400386136025e-05, -0.325874924659729, -0.3951629400253296, -3.58813522325363e-05, -0.0003955773718189448, -0.0731087327003479, -0.03645072877407074, -0.29127275943756104, -0.03580983728170395, -0.038998279720544815], "finish_reason": "length"}], "metrics": {"energy": 260.74198616981494, "energy_per_token": 1.0185233834758396, "time": 11.363667, "time_per_token": 0.04438932421875}}
{"outputs": [{"text": "# Preprocess texts\n    processed_texts = []\n    for text in texts:\n        text = text.lower()\n        text = ALPHANUMERIC.sub(' ', text).strip()\n        text = ' '.join(ALPHANUMERIC.sub('', word) for word in text.split() if word not in STOPWORDS)\n        processed_texts.append(text)\n\n    # Vectorize and transform into topics\n    vectorizer = TfidfVectorizer(stop_words='english')\n    vectorized_texts = vectorizer.fit_transform(processed_texts)\n    nmf = NMF(n_components=num_topics)\n    topics = nmf.fit_transform(vectorized_texts.toarray())\n\n    return topics", "tokens": ["#", " Pre", "process", " texts", "\n", "    ", "processed", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "text", " =", " text", ".", "lower", "()", "\n", "        ", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "strip", "()", "\n", "        ", "text", " =", " '", " '", ".", "join", "(", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " word", ")", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", ")", "\n", "        ", "processed", "_", "text", "s", ".", "append", "(", "text", ")", "\n", "\n", "    ", "#", " Vector", "ize", " and", " transform", " into", " topics", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "vector", "ized", "_", "text", "s", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "top", "ics", " =", " nm", "f", ".", "fit", "_", "transform", "(", "vector", "ized", "_", "text", "s", ".", "to", "array", "())", "\n", "\n", "    ", "return", " topics"], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.6037266850471497, -1.4159719944000244, -0.6803362965583801, -0.0017246623756363988, -1.1586475372314453, -0.016706442460417747, -0.021694842725992203, -0.003913602326065302, -0.0036656346637755632, -1.188872218132019, -0.0006584145012311637, -0.014065422117710114, -0.01274947077035904, -0.12455035001039505, -0.0007659838884137571, -0.0008803306263871491, -0.00015698630886618048, -0.0003252692404203117, -0.0017820206703618169, -1.1970678567886353, -0.057050153613090515, -1.1459956169128418, -0.0012738931691274047, -0.07699684053659439, -0.0002157455455744639, -0.06617628782987595, -0.004982080310583115, -0.15332664549350739, -0.005668161902576685, -0.628125786781311, -3.349725011503324e-05, -2.8609820219571702e-05, -0.00029392691794782877, -7.629365427419543e-06, -0.00013290952483657748, -0.00037019551382400095, -0.0009834696538746357, -0.027916157618165016, -0.17074468731880188, -0.0002818902430590242, -0.0023403179366141558, -0.009337917901575565, -0.8422691226005554, -0.13697589933872223, -0.006688824389129877, -0.13826249539852142, -0.012379121035337448, -0.46193790435791016, -0.013204862363636494, -0.4842606484889984, -0.0008213722030632198, -0.00012242044613230973, -0.0016279076226055622, -0.6461383104324341, -2.8555407524108887, -0.0004015354788862169, -0.0019005347276106477, -0.00040951924165710807, -0.0002162222663173452, -0.010203343816101551, -0.0010311054065823555, -0.13656626641750336, -0.003141232766211033, -1.6055160760879517, -3.671578815556131e-05, -0.18615218997001648, -0.004533607978373766, -0.13917627930641174, -0.00023684080224484205, -0.00023576818057335913, -0.054298173636198044, -0.0015698263887315989, -0.004449348896741867, -1.8737517595291138, -0.049409132450819016, -0.04039167985320091, -0.15214960277080536, -2.8371408916427754e-05, -0.0024807651061564684, -1.5497195136049413e-06, -3.528532761265524e-05, -1.5497195136049413e-06, -6.794906312279636e-06, -0.005968722980469465, -0.02399965561926365, -0.008689804002642632, -0.017712509259581566, -3.421248038648628e-05, -1.6927575416048057e-05, -0.00026651646476238966, -8.546940807718784e-05, -7.652943895664066e-05, -0.001490435330197215, -0.003805539570748806, -0.007802722044289112, -0.0003854485403280705, -0.05860775709152222, -0.0008574623498134315, -0.02600814402103424, -0.25948935747146606, -0.00948140025138855, -1.590301275253296, -3.3105735778808594, -2.688265323638916, -0.6422215700149536, -0.09981827437877655, -0.0005351065192371607, -0.34062644839286804, -0.003657558001577854, -0.00044705410255119205, -0.00037508129025809467, -2.3841830625315197e-06, -2.276871418871451e-05, -2.861018856492592e-06, -1.4305012882687151e-05, -8.106198947643861e-06, -0.8058202862739563, -0.4658493101596832, -9.929640509653836e-05, -0.00012516192509792745, -0.12093324959278107, -0.016215696930885315, -9.536738616588991e-07, -0.08788511902093887, -0.007028971798717976, -0.0029585659503936768, -1.046770453453064, -0.3053518235683441, -0.10256856679916382, -0.24996398389339447, -0.015027176588773727, -0.0008205384365282953, -0.004376120399683714, -1.1920858014491387e-05, -1.2755313036905136e-05, -0.003442197572439909, -0.00037055302527733147, -8.391981828026474e-05, -0.0031527597457170486, -0.003985320683568716, -3.886147169396281e-05, -1.6689286894688848e-06, -8.344646857949556e-07, -0.00019834458362311125, -0.04659004881978035, -0.4000590741634369, -0.3116833567619324, -0.00046397410915233195, -0.05079944431781769, -0.00026306029758416116, -9.83428253675811e-05, -0.0010793342953547835, -0.838223397731781, -4.291525328881107e-06, -0.0011256556026637554, -0.0018156962469220161, -0.002663519000634551, -0.00025293012731708586, -0.0008118432597257197, -2.0265558760002023e-06, -1.346875786781311, -0.007513833697885275, -0.009965429082512856, -0.9458327889442444, -0.01741393655538559, -0.01854579709470272, -0.047483980655670166, -1.8715683836489916e-05, -0.0001311216183239594, -0.004205906298011541, -0.0021780834067612886, -0.00010954733443213627, -0.00017855956684798002, -0.0015184074873104692, -0.00028951745480298996, -2.861018856492592e-06, -9.417489309271332e-06, -1.5497195136049413e-06, -1.5135233402252197, -0.1279429793357849, -0.016006426885724068, -0.029033999890089035, -0.8600268363952637, -0.5897061824798584, -0.00020525732543319464, -0.7518401145935059, -0.6244984269142151], "finish_reason": "stop"}], "metrics": {"energy": 194.84889315795903, "energy_per_token": 1.0309465246452858, "time": 8.42225, "time_per_token": 0.04456216931216931}}
{"outputs": [{"text": "# Preprocessing\n    processed_texts = []\n    for text in texts:\n        text = re.sub(ALPHANUMERIC, '', text)\n        text = text.lower()\n        processed_texts.append(text)\n\n    # Vectorization and NMF\n    vectorizer = TfidfVectorizer(stop_words=STOPWORDS)\n    tfidf_docs = vectorizer.fit_transform(processed_texts)\n    nmf = NMF(num_topics=num_topics, random_state=42, init='randomized')\n    nmf.fit(tfidf_docs)\n\n    # Extraction\n    topics = [\n        [word for word, weight in zip(vectorizer.get_feature_names_out(), nmf.components_[i])\n            if weight >= nmf.components_.max() * 0.75]\n        for i in range(num_topics)\n    ]\n    return topics", "tokens": ["#", " Pre", "processing", "\n", "    ", "processed", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "text", " =", " re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " ''", ",", " text", ")", "\n", "        ", "text", " =", " text", ".", "lower", "()", "\n", "        ", "processed", "_", "text", "s", ".", "append", "(", "text", ")", "\n", "\n", "    ", "#", " Vector", "ization", " and", " N", "MF", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "tf", "id", "f", "_", "docs", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "num", "_", "top", "ics", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ",", " init", "='", "random", "ized", "')", "\n", "    ", "nm", "f", ".", "fit", "(", "tf", "id", "f", "_", "docs", ")", "\n", "\n", "    ", "#", " Ext", "raction", "\n", "    ", "top", "ics", " =", " [", "\n", "        ", "[", "word", " for", " word", ",", " weight", " in", " zip", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", ",", " nm", "f", ".", "components", "_[", "i", "])", "\n", "            ", "if", " weight", " >=", " nm", "f", ".", "components", "_", ".", "max", "()", " *", " ", "0", ".", "7", "5", "]", "\n", "        ", "for", " i", " in", " range", "(", "num", "_", "top", "ics", ")", "\n", "    ", "]", "\n", "    ", "return", " topics", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.8840726017951965, -0.6892301440238953, -0.007413732353597879, -1.0768691301345825, -0.04382620379328728, -0.03951900079846382, -0.005733591504395008, -0.0037675369530916214, -1.2606666088104248, -0.0024133387487381697, -0.031010683625936508, -0.015815887600183487, -0.1726333647966385, -0.0009388091857545078, -0.0007581220706924796, -0.00017593742813915014, -0.0005888396990485489, -0.0019185009878128767, -1.110239863395691, -0.040635284036397934, -1.4713927507400513, -6.508615479106084e-05, -0.015791362151503563, -0.09757488965988159, -0.05781485512852669, -2.7894584491150454e-05, -0.00012790338951162994, -2.8729025871143676e-05, -2.861018856492592e-06, -7.939023635117337e-05, -0.03190929442644119, -0.8796237707138062, -6.353653589030728e-05, -0.009836653247475624, -0.15707696974277496, -1.609069585800171, -0.0007365613128058612, -0.0674496665596962, -0.0027532787062227726, -0.10190345346927643, -0.0002115741081070155, -0.015565572306513786, -2.6464111215318553e-05, -0.029084833338856697, -0.006983159575611353, -2.5919747352600098, -0.0019539566710591316, -0.02777239680290222, -0.16844819486141205, -0.000996212475001812, -0.0007568117580376565, -0.09749314188957214, -0.35305577516555786, -0.09889500588178635, -0.0017256144201382995, -0.307199627161026, -0.003936875611543655, -0.34657028317451477, -0.814574658870697, -0.07971763610839844, -1.7614595890045166, -0.4509616792201996, -0.0003280101518612355, -0.10213058441877365, -0.0006800960982218385, -0.19571997225284576, -0.007682065945118666, -0.0002928543253801763, -0.000316212244797498, -2.264974000354414e-06, -1.9907753085135482e-05, -2.622600959512056e-06, -8.821448318485636e-06, -7.152531907195225e-06, -0.2877589762210846, -0.12041330337524414, -0.0009653675369918346, -0.0001225396408699453, -0.6051595211029053, -0.023351311683654785, -4.768370445162873e-07, -4.1960789531003684e-05, -2.5987286790041253e-05, -7.867782187531702e-06, -0.12628766894340515, -0.005249881185591221, -0.002158099552616477, -1.6492183208465576, -0.11780592054128647, -0.002331873867660761, -0.623613178730011, -2.7284088134765625, -0.0030348694417625666, -0.006823807954788208, -7.510157047363464e-06, -7.867782187531702e-06, -0.0008204193436540663, -0.0003296785580459982, -0.00012385078298393637, -0.0020068997982889414, -0.003855297341942787, -4.768258077092469e-05, -2.145764938177308e-06, -1.7881377516459906e-06, -0.00025829317746683955, -0.05106635391712189, -0.13248802721500397, -0.1455400139093399, -0.0005440423847176135, -0.0650867149233818, -0.00022849810193292797, -6.711257447022945e-05, -0.0010786197381094098, -0.6387103796005249, -1.5020257706055418e-05, -0.1332150250673294, -4.6491513785440475e-06, -0.37918540835380554, -0.002217930741608143, -0.00023934361524879932, -8.093983342405409e-05, -2.9802276912960224e-06, -0.23973563313484192, -0.27600133419036865, -2.50339189733495e-06, -0.00034648136352188885, -0.0004042761866003275, -0.7257179617881775, -0.016563640907406807, -1.5241937637329102, -0.5624598264694214, -0.15941108763217926, -0.10470438748598099, -0.5394328236579895, -0.16537851095199585, -0.015033752657473087, -0.010219745337963104, -0.8947851657867432, -0.0003069168305955827, -0.10609736293554306, -0.00046969347749836743, -0.3028787672519684, -0.0007370378007180989, -2.9802276912960224e-06, -1.1920928244535389e-07, -1.8358061424805783e-05, -2.396077979938127e-05, -0.013433421961963177, -0.007129821460694075, -0.3577716052532196, -0.00020013237372040749, -0.09089939296245575, -0.16077826917171478, -0.7343140244483948, -0.28348198533058167, -0.0002444683632347733, -0.39108070731163025, -0.33316347002983093, -0.018077494576573372, -1.3884241580963135, -0.7521847486495972, -0.00233056559227407, -0.7176823019981384, -0.831508219242096, -0.15397100150585175, -0.1774480938911438, -0.1689307689666748, -0.9297672510147095, -0.0013186577707529068, -0.29990944266319275, -0.012476724572479725, -0.09165997058153152, -0.00011288482346571982, -3.015949550899677e-05, -0.031193383038043976, -8.940656698541716e-06, -0.0006982034537941217, 0.0, -0.0006660388899035752, -0.40458717942237854, -0.00023338454775512218, -0.010515992529690266, -0.0009056995622813702, -0.4568156599998474, -0.0008366183610633016, -0.004312263801693916, -0.014552641659975052, -0.006076670717447996, -0.5267848968505859, -0.024538129568099976, -1.20229172706604, -2.957280397415161, -0.0013656823430210352, -0.026778146624565125, -1.566871166229248, -1.3695505857467651, -2.5152843591058627e-05, -5.9960475482512265e-05, -0.10255942493677139, -2.717827320098877, -0.09067557007074356, -0.34435519576072693, -0.11369796097278595, -0.1456388384103775, -0.0042143347673118114, -0.017691662535071373, -6.031808152329177e-05, -1.682376742362976, -0.7712876200675964, -0.40073931217193604, -0.08804810792207718, -0.03400544822216034, -0.001258296542800963, -0.0004714807728305459, -0.00430704141035676, -0.0043060919269919395, -0.00015901254664640874, -0.2915138900279999, -0.000316212244797498, -1.2755313036905136e-05, -2.3841855067985307e-07, -0.06263753771781921, -0.005875340662896633, -0.00666087819263339, -0.0003357561945449561, -0.0016301688738167286, -1.277044653892517, -0.06131361052393913, -0.010093126446008682, -0.9641987085342407, -1.5497195136049413e-06, -1.4305104514278355e-06, -2.729855441430118e-05, -0.0002885640424210578, -0.09171206504106522], "finish_reason": "stop"}], "metrics": {"energy": 255.65923733901963, "energy_per_token": 1.0787309592363696, "time": 10.511675, "time_per_token": 0.04435305907172996}}
{"outputs": [{"text": "# Preprocess text: remove non-alphanumeric characters, convert to lowercase, remove stopwords\n    preprocessed_texts = [ALPHANUMERIC.sub(' ', text.lower()).split() for text in texts]\n    stopped_texts = [[word for word in doc if word not in STOPWORDS] for doc in preprocessed_texts]\n\n    # Vectorize text using TF-IDF\n    vectorizer = TfidfVectorizer(stop_words='english')\n    tfidf = vectorizer.fit_transform(stopped_texts)\n\n    # Apply NMF to get topic weights\n    nmf = NMF(n_components=num_topics, init='random', random_state=42)\n    topic_weights = nmf.fit_transform(tfidf).toarray()\n\n    # Extract topic words based on topic weights\n    topic_words = [sorted(vectorizer.get_feature_names(),\n                          key=lambda word: topic_weights[i][vectorizer.get_feature_names_idx(word)]", "tokens": ["#", " Pre", "process", " text", ":", " remove", " non", "-", "al", "phan", "umeric", " characters", ",", " convert", " to", " lower", "case", ",", " remove", " stop", "words", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "split", "()", " for", " text", " in", " texts", "]", "\n", "    ", "stop", "ped", "_", "text", "s", " =", " [[", "word", " for", " word", " in", " doc", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", " for", " doc", " in", " pre", "processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ize", " text", " using", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "stop", "ped", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", " to", " get", " topic", " weights", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " init", "='", "random", "'", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "topic", "_", "weights", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", ")", ".", "to", "array", "()", "\n", "\n", "    ", "#", " Ext", "ract", " topic", " words", " based", " on", " topic", " weights", "\n", "    ", "topic", "_", "words", " =", " [", "s", "orted", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()", ",", "\n", "                ", "          ", "key", "=", "lambda", " word", ":", " topic", "_", "weights", "[", "i", "][", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "idx", "(", "word", ")]"], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.6037266850471497, -2.728522539138794, -3.069338798522949, -0.6309826374053955, -0.11518439650535583, -0.011788466945290565, -0.03138667717576027, -0.0012505576014518738, -0.003171060001477599, -0.10984501987695694, -0.6528360247612, -0.10709487646818161, -0.050818365067243576, -0.0015887507470324636, -0.010414421558380127, -0.04142522066831589, -0.5144220590591431, -0.009375236928462982, -0.015599843114614487, -0.07414543628692627, -0.00494969729334116, -1.316688060760498, -0.054740000516176224, -0.04251139238476753, -0.01956334337592125, -0.00727539649233222, -0.0039575365372002125, -0.3411617875099182, -0.3326657712459564, -5.722029527532868e-06, -7.86750388215296e-05, -5.471556869451888e-05, -1.4781842764932662e-05, -0.0002112165529979393, -0.00033420699764974415, -0.0003177614707965404, -0.030960872769355774, -0.4193721115589142, -0.007141302805393934, -0.3242277503013611, -0.45176681876182556, -0.0127985505387187, -0.04428454488515854, -0.2181597501039505, -0.7418994307518005, -0.020476382225751877, -0.04236343130469322, -0.0005768066039308906, -6.19869097135961e-05, -0.0007308434578590095, -0.016004666686058044, -0.0053864819929003716, -0.20494681596755981, -1.836866021156311, -1.6519579887390137, -0.04461168870329857, -1.1611008644104004, -0.0037857070565223694, -0.0027700408827513456, -1.9089876413345337, -0.049466319382190704, -0.017649030312895775, -0.00025686301523819566, -0.0002119316632160917, -3.3760149478912354, -0.013475057668983936, -0.010636542923748493, -0.038567449897527695, -1.4066597032069694e-05, -0.005574514623731375, -1.9073468138230965e-06, -4.029192859889008e-05, -2.622600959512056e-06, -6.198863957251888e-06, -0.01098808366805315, -0.059800196439027786, -0.00014041867689229548, -4.8040190449682996e-05, -0.0011182728921994567, -9.357491217087954e-05, -2.3841830625315197e-06, -2.3841855067985307e-07, -1.6689286894688848e-06, -0.0012182918144389987, -0.0021878371480852365, -0.18392397463321686, -0.00024863966973498464, -0.014587299898266792, -0.4086777865886688, -0.02766653336584568, -0.756580650806427, -0.8808000087738037, -0.10444197058677673, -0.00551322428509593, -0.00012063252506777644, -6.246371776796877e-05, -0.21696779131889343, -0.00015567521040793508, -0.2656697630882263, -0.001961928093805909, -0.0003625689132604748, -0.000226472009671852, -2.861018856492592e-06, -3.480850500636734e-05, -4.291525328881107e-06, -1.1801649634435307e-05, -4.6491513785440475e-06, -0.6887888312339783, -0.45537069439888, -0.00023505308490712196, -0.0002588890492916107, -0.09730572253465652, -0.013927415013313293, -7.152555099310121e-07, -0.07217475771903992, -0.006580232176929712, -0.0016121974913403392, -0.8369511365890503, -0.10166452080011368, -0.002144301077350974, -1.0243873596191406, -0.0019646643195301294, -1.9788545614574105e-05, -1.7165990357170813e-05, -0.0006156456656754017, -0.0012730597518384457, -7.366862701019272e-05, -0.011415168642997742, -0.019667144864797592, -9.238292841473594e-05, -3.2186455882765586e-06, -8.344646857949556e-07, -4.768370445162873e-07, -0.0001445904199499637, -0.015730109065771103, -0.03804049640893936, -0.00035744477645494044, -0.009198076091706753, -1.2012522220611572, -0.014584832824766636, -0.00039617318543605506, -1.0254627466201782, -3.131256580352783, -1.8048620223999023, -2.9396443367004395, -0.13847321271896362, -0.00021669900161214173, -0.21134980022907257, -0.00019107422849629074, -0.01606355793774128, -0.0002115741081070155, -8.487341256113723e-05, -0.0008551992941647768, -0.44311419129371643, -4.887569048150908e-06, -0.0006302992696873844, -0.002815927378833294, -0.0037199126090854406, -0.00030083899036981165, -0.0003909300430677831, -1.1920922133867862e-06, -0.2774835526943207, -1.7121360301971436, -0.047414179891347885, -0.029292311519384384, -0.07578838616609573, -2.8013790142722428e-05, -0.0492483451962471, -7.748573807475623e-06, -2.276871418871451e-05, -0.0004122599493712187, -0.5429410338401794, -0.012111220508813858, -0.2543729543685913, -0.009244495071470737, -0.003499338636174798, -0.76151043176651, -0.000311802898067981, -0.08938150852918625, -0.0017028844449669123, -0.00136461085639894, -2.861018856492592e-06, -5.030505417380482e-05, -0.011310270987451077, -0.005218574311584234, -7.617183291586116e-05, -0.00017855956684798002, -0.0005552418879233301, -5.722029527532868e-06, -2.3841855067985307e-07, -0.19524416327476501, -1.1149126291275024, -0.1419897973537445, -0.004414575174450874, -0.0006756883230991662, -0.05678573623299599, -0.042162418365478516, -0.00025018901214934886, -0.04044892266392708, -0.8827728033065796, -0.0014997198013588786, -2.885258436203003, -0.23995144665241241, -1.8763573169708252, -0.000161038784426637, -3.25982666015625, -0.03867916017770767, -0.05820699781179428, -0.00023231192608363926, -0.5303719639778137, -0.000922849983908236, -0.04237154498696327, -0.006589943543076515, -0.5142427086830139, -0.7020708322525024, -3.838465272565372e-05, -0.234071284532547, -0.5129039883613586, -0.0053468793630599976, -3.111314072157256e-05, -0.27225011587142944, -3.933898824470816e-06, -0.0007323920144699514, -1.1920928244535389e-07, -0.001049920916557312, -1.403031349182129, -0.021929632872343063, -0.7609024047851562, -0.040994975715875626, -0.6657558679580688, -0.039564721286296844, -0.004114377778023481, -0.004251252394169569, -1.0933185815811157, -0.0035984069108963013, -0.211764857172966, -0.00021681819634977728, -0.0006522196927107871, -0.011934896931052208, -0.23034071922302246, -0.057202376425266266, -0.0232427679002285, -1.4662635294371285e-05, -0.00048756631440483034, -0.2997959554195404, -7.986990567587782e-06, -0.07869407534599304, -9.321732068201527e-05, -0.09057822823524475, -0.5337515473365784, -2.475942611694336, -1.0324963331222534, -0.014027689583599567, -0.013067089952528477], "finish_reason": "length"}], "metrics": {"energy": 275.2168446426392, "energy_per_token": 1.0750657993853094, "time": 11.356165, "time_per_token": 0.04436001953125}}
{"outputs": [{"text": "vectorizer = TfidfVectorizer(stop_words='english', token_pattern=ALPHANUMERIC.pattern)\n    matrix = vectorizer.fit_transform(texts)\n    nmf = NMF(num_topics=num_topics, random_state=42)\n    nmf.fit(matrix)\n\n    return [\n        [vectorizer.get_feature_names_out()[index] for index, weight in enumerate(component_weights) if weight > 0.1]\n        for component_weights in nmf.components_\n    ]", "tokens": ["vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "'", ",", " token", "_", "pattern", "=", "AL", "PH", "AN", "UM", "ER", "IC", ".", "pattern", ")", "\n", "    ", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "num", "_", "top", "ics", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "matrix", ")", "\n", "\n", "    ", "return", " [", "\n", "        ", "[", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()[", "index", "]", " for", " index", ",", " weight", " in", " enumerate", "(", "component", "_", "weights", ")", " if", " weight", " >", " ", "0", ".", "1", "]", "\n", "        ", "for", " component", "_", "weights", " in", " nm", "f", ".", "components", "_", "\n", "    ", "]<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-2.838578939437866, -0.030164474621415138, -0.0012365083675831556, -0.0006898645660839975, -3.3378546504536644e-06, -5.543078441405669e-05, -3.814689989667386e-06, -1.3708974620385561e-05, -3.099436753473128e-06, -0.05477972701191902, -0.4153074622154236, -0.0017665509367361665, -0.0002493547508493066, -0.5775296092033386, -0.08610740303993225, -1.6689286894688848e-06, -0.7229845523834229, -0.000740968796890229, -1.3517680168151855, -0.23673973977565765, -0.0715620219707489, -0.23119515180587769, -0.06413627415895462, -6.318072337307967e-06, -0.008694294840097427, -0.0007479969062842429, -6.556489552167477e-06, -0.000553335587028414, -0.6295408010482788, -0.14582854509353638, -0.15117135643959045, -0.010708959773182869, -0.03497101739048958, -3.7917356491088867, -0.014873094856739044, -0.00995740294456482, -3.0397906812140718e-05, -1.2993727978027891e-05, -0.0006955826538614929, -0.0003519630990922451, -0.0001045410826918669, -0.003606365295127034, -0.024905165657401085, -0.0003262225945945829, -0.000663894519675523, -0.05350952968001366, -0.4680092930793762, -0.42766687273979187, -0.00036483307485468686, -0.019173523411154747, -0.00033146608620882034, -9.30981186684221e-05, -0.0009717986104078591, -0.6542312502861023, -3.683499380713329e-05, -0.06547713279724121, -5.483612312673358e-06, -0.9216395020484924, -0.005860289558768272, -0.00042250767000950873, -0.000289159914245829, -2.50339189733495e-06, -0.23482772707939148, -0.3003072440624237, -4.172316494077677e-06, -0.0005583396414294839, -0.000506511190906167, -0.7631589770317078, -0.02185230888426304, -0.25737905502319336, -0.01886438950896263, -0.017967557534575462, -1.8933372497558594, -0.00035422726068645716, -0.06874224543571472, -0.00032026408007368445, -0.12054339796304703, -0.0026695826090872288, -0.029822388663887978, -0.009522492997348309, -1.2397099733352661, -0.00024673278676345944, -1.4122202396392822, -0.2373177856206894, -0.8385927081108093, -0.006044323090463877, -0.5051825046539307, -1.7463693618774414, -0.007982376962900162, -0.0004027270770166069, -0.27128636837005615, -2.372236667724792e-05, -0.0018778087105602026, -4.768370445162873e-07, -0.002090770285576582, -0.6808608174324036, -0.00019941726350225508, -0.006551927886903286, -2.0758426189422607, -0.01779519021511078, -0.2512266933917999, -0.009208587929606438, -1.5524077415466309, -1.1503137350082397, -0.009541267529129982, -0.41333240270614624, -0.004233565181493759, -1.1385103464126587, -1.0684542655944824, -0.4395347833633423, -0.06290780007839203, -0.0493401475250721, -0.04419102147221565, -0.11887143552303314, -0.016448376700282097, -0.022065140306949615, -0.3194393515586853, -2.4302990436553955, -0.1341494768857956, -0.018855849280953407, -0.0030793175101280212, -0.0017995130037888885, -0.0023073735646903515, -0.00020919041708111763, -0.001100054127164185, -0.003472966141998768, -0.01738300733268261, -2.407998726994265e-05, -0.00035208225017413497, -0.006666325498372316, -0.0021577426232397556, -0.30008748173713684, -0.014792404137551785, -0.7618100643157959, -5.960462772236497e-07, -1.0728830375228426e-06, -2.276871418871451e-05, -0.00033361115492880344, -2.67517352104187, -0.003869547275826335], "finish_reason": "stop"}], "metrics": {"energy": 154.2788714523315, "energy_per_token": 1.1019919389452248, "time": 6.1124506, "time_per_token": 0.04366036142857143}}
{"outputs": [{"text": "# Preprocessing\n    processed_texts = [ALPHANUMERIC.sub(' ', text).lower().strip() for text in texts]\n    processed_texts = [word.split() for text in processed_texts for word in text.split() if word not in STOPWORDS]\n\n    # Vectorization\n    vectorizer = TfidfVectorizer(max_df=0.85, max_features=5000)\n    matrix = vectorizer.fit_transform(processed_texts)\n\n    # Topic extraction\n    model = NMF(n_components=num_topics, random_state=42)\n    component_weights = model.components_\n\n    # Extraction of words associated with each topic\n    topic_words = [[vectorizer.get_feature_names()[i] for i in range(len(text)) if component_weights[topic][text[i]] > 0.8]\n                  for topic, text in enumerate(processed_texts)]\n\n    return topic_words", "tokens": ["#", " Pre", "processing", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", ".", "strip", "()", " for", " text", " in", " texts", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [", "word", ".", "split", "()", " for", " text", " in", " processed", "_", "text", "s", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Vector", "ization", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "max", "_", "df", "=", "0", ".", "8", "5", ",", " max", "_", "features", "=", "5", "0", "0", "0", ")", "\n", "    ", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Topic", " extraction", "\n", "    ", "model", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "component", "_", "weights", " =", " model", ".", "components", "_", "\n", "\n", "    ", "#", " Ext", "raction", " of", " words", " associated", " with", " each", " topic", "\n", "    ", "topic", "_", "words", " =", " [[", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()[", "i", "]", " for", " i", " in", " range", "(", "len", "(", "text", "))", " if", " component", "_", "weights", "[", "topic", "][", "text", "[", "i", "]]", " >", " ", "0", ".", "8", "]", "\n", "                ", "  ", "for", " topic", ",", " text", " in", " enumerate", "(", "processed", "_", "text", "s", ")]", "\n", "\n", "    ", "return", " topic", "_", "words", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.8840726017951965, -0.6892301440238953, -0.007413732353597879, -1.0768691301345825, -0.04382620379328728, -0.03951900079846382, -0.005733591504395008, -0.0037675369530916214, -0.40359383821487427, -0.28747233748435974, -6.198863957251888e-06, -0.00012087091454304755, -2.5510462364763953e-05, -5.722029527532868e-06, -0.0001250427303602919, -0.00036840804386883974, -0.00033241944038309157, -0.03652406111359596, -0.30366501212120056, -0.03700540214776993, -0.36910635232925415, -0.9420156478881836, -0.018415898084640503, -0.037371911108493805, -0.0016562328673899174, -0.31432151794433594, -0.7736808061599731, -0.014762217178940773, -0.4450954496860504, -0.001128394273109734, -9.285972191719338e-05, -0.0003718638326972723, -0.02592102810740471, -0.007079042959958315, -0.04338443651795387, -0.7480854392051697, -0.00036530973738990724, -0.00731669832020998, -0.0002843929105438292, -0.018911531195044518, -0.020317180082201958, -1.0758239030838013, -1.883251667022705, -0.8646343946456909, -0.06340883672237396, -0.001862221397459507, -0.7029981017112732, -0.0008054111385717988, -0.021644914522767067, -0.00010311071673640981, -7.152555099310121e-07, -1.0728830375228426e-06, -0.08227954059839249, -0.000615407363511622, -0.00026067672297358513, -0.13224679231643677, -0.1790979504585266, -0.020174074918031693, -0.5785698890686035, -0.6747374534606934, -0.08285249769687653, -0.21576452255249023, -5.638440416078083e-05, -0.003483182517811656, -1.4305104514278355e-06, -3.218599158572033e-05, -2.9802276912960224e-06, -7.510157047363464e-06, -0.01817220263183117, -0.0038816595915704966, -0.5266433358192444, -0.0003295593778602779, -0.078670933842659, -0.36295947432518005, -0.08501481264829636, -0.22403740882873535, -0.00035744477645494044, -0.26006966829299927, -0.005799253936856985, -0.0004010588163509965, -0.0004003438516519964, -2.3841830625315197e-06, -2.8371408916427754e-05, -3.3378546504536644e-06, -9.179073458653875e-06, -1.2516897186287679e-05, -0.461850106716156, -1.990065097808838, -1.4424220353248529e-05, -0.7386549115180969, -0.004024027846753597, -0.1181890070438385, -2.47952248173533e-05, -1.1512794494628906, -2.5067245960235596, -0.010143516585230827, -0.8839486241340637, -3.981510963058099e-05, -0.037216756492853165, -0.0006785474251955748, -2.139285087585449, -0.005033084191381931, -0.019798634573817253, -0.04289519041776657, -1.7048970460891724, -0.016624728217720985, -0.0036516194231808186, -3.094522714614868, -0.014907272532582283, -0.006849499884992838, -1.7881233361549675e-05, -1.5020257706055418e-05, -0.0006503135664388537, -0.00037698791129514575, -7.1403817855753e-05, -0.008190732449293137, -0.0027090536896139383, -1.5020257706055418e-05, -5.960462772236497e-07, -4.172316494077677e-06, -0.0002610342635307461, -0.04224836081266403, -0.08498995751142502, -0.00037698791129514575, -0.024381665512919426, -1.9026827812194824, -0.7075209021568298, -0.04583868756890297, -0.00030417583184316754, -1.7629097700119019, -0.0023639847058802843, -0.0004389514506328851, -0.00011550712952157483, -0.0008953376673161983, -0.4328100085258484, -4.768360213347478e-06, -0.0026072815526276827, -0.0019645453430712223, -0.004459792748093605, -0.00042083943844772875, -0.0002768848498817533, -1.5497195136049413e-06, -0.14613614976406097, -0.31101059913635254, -2.50339189733495e-06, -0.00018356545479036868, -0.0006015875260345638, -0.4095235764980316, -0.011649556457996368, -0.5877252817153931, -0.008216389454901218, -0.003947087563574314, -2.590444803237915, -0.00832858681678772, -0.14004507660865784, -0.0059145670384168625, -0.036636803299188614, -5.6265202147187665e-05, -2.8590004444122314, -0.026644667610526085, -0.15401524305343628, -0.4936825931072235, -0.0001454247540095821, -0.20900870859622955, -0.8867918848991394, -1.5285321474075317, -0.8136680722236633, -3.2257797718048096, -3.3637356758117676, -0.12099070847034454, -0.19547508656978607, -0.2348351776599884, -0.07393654435873032, -0.0003156163729727268, -1.2948017120361328, -0.002642593812197447, -0.09452950954437256, -0.013366494327783585, -3.0808513164520264, -1.3596487045288086, -0.008043871261179447, -0.0001062098381225951, -0.08584213256835938, -8.702239938429557e-06, -0.013917422853410244, -2.3841855067985307e-07, -0.004808410070836544, -0.4236290752887726, -0.31630122661590576, -0.002454841509461403, -0.09023191034793854, -0.010890452191233635, -0.2403179556131363, -0.552116870880127, -0.0002588890492916107, -0.6951910853385925, -0.00038044367101974785, -2.814967155456543, -0.19521181285381317, -0.23179249465465546, -0.8998741507530212, -0.008707175962626934, -0.06754472106695175, -0.00704672746360302, -2.533464193344116, -0.16853934526443481, -2.982783794403076, -0.15442629158496857, -0.075616754591465, -0.2718539535999298, -0.11565906554460526, -0.015498904511332512, -0.04105870798230171, -0.12726062536239624, -3.384944438934326, -0.31699249148368835, -0.640648365020752, -0.016667990013957024, -2.87540864944458, -0.000697965151630342, -0.07009483873844147, -1.1815080642700195, -0.004423595033586025, -0.003248178865760565, -0.02701580710709095, -0.0005211663665249944, -1.9587429761886597, -4.875540980719961e-05, -8.821448318485636e-06, -2.777537883957848e-05, -0.048579491674900055, -0.005450033117085695, -0.13427987694740295, -0.00041333239641971886, -0.15037484467029572, -0.12465338408946991, -1.2516897186287679e-05, -1.6689160474925302e-05, -0.9682167172431946, -1.4305104514278355e-06, -1.0728830375228426e-06, -2.8729025871143676e-05, -0.00041083001997321844, -0.04752456396818161], "finish_reason": "stop"}], "metrics": {"energy": 256.23381869792934, "energy_per_token": 1.041600889015973, "time": 10.933547, "time_per_token": 0.04444531300813009}}
{"outputs": [{"text": "# Step 1: Preprocessing\n    processed_texts = [ALPHANUMERIC.sub('', text).lower().strip().split()\n                       for text in texts]\n\n    # Step 2: Vectorization\n    tfidf = TfidfVectorizer(stop_words=STOPWORDS).fit_transform(processed_texts)\n\n    # Step 3: Topic extraction\n    nmf = NMF(num_topics, random_state=42, init='random')\n    topics = nmf.fit_transform(tfidf).toarray()\n    return topics", "tokens": ["#", " Step", " ", "1", ":", " Pre", "processing", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", ")", ".", "lower", "()", ".", "strip", "()", ".", "split", "()", "\n", "                ", "       ", "for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Vector", "ization", "\n", "    ", "tf", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Topic", " extraction", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ",", " init", "='", "random", "')", "\n", "    ", "top", "ics", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", ")", ".", "to", "array", "()", "\n", "    ", "return", " topics", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6158158183097839, -2.402909278869629, -0.026184208691120148, -0.03934263065457344, -0.06457456201314926, -0.4007037878036499, -0.3488759398460388, -0.35909655690193176, -0.021476097404956818, -1.0886467695236206, -0.029780501499772072, -0.04888071492314339, -0.004677307326346636, -0.004696647636592388, -0.5863054394721985, -0.38373512029647827, -5.960446742392378e-06, -0.00015066919149830937, -3.0278701160568744e-05, -6.9141146923357155e-06, -0.00010191874753218144, -0.00019608005823101848, -0.00035744477645494044, -0.03931305930018425, -1.5941952466964722, -0.00021026308240834624, -0.3964231014251709, -0.8644936680793762, -0.01282314769923687, -0.018751027062535286, -0.0019401551689952612, -0.34108203649520874, -1.34661865234375, -0.028206629678606987, -1.330121636390686, -0.0511508546769619, -0.039369676262140274, -1.9989184141159058, -0.018801800906658173, -0.06415930390357971, -0.0027014450170099735, -0.002183198230341077, -0.00041130665340460837, -0.0007833749405108392, -0.5761961340904236, -0.00956275686621666, -1.0053441524505615, -0.00021765247220173478, -0.18274281919002533, -0.07773762941360474, -0.00018869050836656243, -0.004050385672599077, -0.005624303128570318, -0.517854630947113, -0.05695421248674393, -0.3354966938495636, -0.0007027302053757012, -2.1336140632629395, -0.1969454288482666, -0.0014099667314440012, -0.38366591930389404, -0.0007583603146485984, -2.861018856492592e-06, -0.00010263393050990999, -2.3841855067985307e-07, -5.6980417866725475e-05, -1.9907753085135482e-05, -0.11422097682952881, -0.1785593330860138, -0.0020260538440197706, -0.00013243274588603526, -1.0654783248901367, -0.02321889065206051, -1.0728830375228426e-06, -6.19869097135961e-05, -4.076874756719917e-05, -7.748573807475623e-06, -0.12149504572153091, -1.5772738456726074, -0.0017100248951464891, -0.43355533480644226, -6.508615479106084e-05, -0.029723918065428734, -0.007336105685681105, -2.2411095415009186e-05, -5.960462772236497e-07, -2.9205850296420977e-05, -0.0003578022588044405, -0.014302598312497139, -0.07194271683692932, -0.0004190520558040589, -0.011528539471328259, -0.0074841356836259365, -0.00024863966973498464, -0.0012449617497622967, -0.0019795361440628767, -2.4562740325927734, -1.850118637084961, -0.10505378246307373, -0.0011724510695785284, -0.2469986230134964, -0.0002224197960458696, -0.011661339551210403, -0.00018463814922142774, -9.417090768693015e-05, -0.0009557208395563066, -0.7267807126045227, -1.537788011773955e-05, -0.15140879154205322, -4.887569048150908e-06, -1.97031831741333, -0.40571367740631104, -1.645074735279195e-05, -0.00018821375851985067, -0.002089223824441433, -1.0351812839508057, -0.02777993306517601, -0.9086378812789917, -0.4172845184803009, -0.106930673122406, -0.1462138146162033, -1.2538659572601318, -0.03865530341863632, -0.022564679384231567, -1.5616214275360107, -0.0858020931482315, -0.04992173984646797, -0.1657298505306244, -1.9430925021879375e-05, -0.0001486429391661659, -0.006499935407191515, -0.0039388942532241344, -0.0003066784702241421, -0.00042489083716645837, -0.0007142852991819382, -8.34461570775602e-06, -9.536738616588991e-07, -0.581513524055481, -0.23392969369888306, -1.1821086406707764, -0.010374781675636768, -0.0018087946809828281, -0.6652292013168335, -1.291232705116272, -1.2598665952682495, -0.7591493725776672, -1.0600605010986328, -1.311301275563892e-06, -8.344646857949556e-07, -1.8000440832111053e-05, -0.00017641419253777713, -0.03804726526141167], "finish_reason": "stop"}], "metrics": {"energy": 199.81722018814082, "energy_per_token": 1.3145869749219792, "time": 6.5222006, "time_per_token": 0.04290921447368421}}
{"outputs": [{"text": "# Step 1: Preprocess the text documents\n    # Remove non-alphanumeric characters and convert all characters to lowercase\n    preprocessed_texts = [ALPHANUMERIC.sub('', text).lower() for text in texts]\n\n    # Step 2: Remove stopwords from the preprocessed texts\n    preprocessed_texts = [word for text in preprocessed_texts for word in text.split() if word not in STOPWORDS]\n\n    # Step 3: Vectorize the preprocessed texts using TF-IDF\n    vectorizer = TfidfVectorizer(stop_words='english')\n    tfidf_matrix = vectorizer.fit_transform(preprocessed_texts)\n\n    # Step 4: Apply NMF to extract the topics\n    nmf = NMF(num_topics)\n    components = nmf.fit_transform(tfidf_matrix)\n\n    # Step 5: Extract the most significant words for each topic\n    top_words_per_topic = [sorted(vectorizer.get_feature_names()[np.argsort", "tokens": ["#", " Step", " ", "1", ":", " Pre", "process", " the", " text", " documents", "\n", "    ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " and", " convert", " all", " characters", " to", " lower", "case", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", ")", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Remove", " stop", "words", " from", " the", " pre", "processed", " texts", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "word", " for", " text", " in", " pre", "processed", "_", "text", "s", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Vector", "ize", " the", " pre", "processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "pre", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Step", " ", "4", ":", " Apply", " N", "MF", " to", " extract", " the", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "num", "_", "top", "ics", ")", "\n", "    ", "components", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "\n", "    ", "#", " Step", " ", "5", ":", " Ext", "ract", " the", " most", " significant", " words", " for", " each", " topic", "\n", "    ", "top", "_", "words", "_", "per", "_", "topic", " =", " [", "s", "orted", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()[", "np", ".", "args", "ort"], "logprobs": [-0.6158158183097839, -2.402909278869629, -0.026184208691120148, -0.03934263065457344, -0.06457456201314926, -0.4007037878036499, -1.441451072692871, -0.7226494550704956, -1.8230938911437988, -1.3547229766845703, -0.24244797229766846, -0.009468646720051765, -1.5137416124343872, -0.4780988395214081, -0.09653069823980331, -0.006448413711041212, -0.02256421372294426, -0.000406301929615438, -0.0013224674621596932, -0.01151333749294281, -1.4493248462677002, -0.31732913851737976, -1.863688588142395, -0.07593435794115067, -0.0027013260405510664, -0.0014391313306987286, -0.00786694698035717, -0.11799504607915878, -0.005347235128283501, -1.0927915573120117, -0.029907776042819023, -0.025683337822556496, -0.10912059247493744, -0.006840146612375975, -0.0030061076395213604, -0.22142641246318817, -0.14844925701618195, -4.172316494077677e-06, -7.402622577501461e-05, -3.3854863431770355e-05, -9.536697689327411e-06, -0.0002397011558059603, -0.00023636408150196075, -0.00038532938924618065, -0.03066437877714634, -0.744833767414093, -0.000144709600135684, -0.4192284345626831, -0.579539954662323, -0.004125774838030338, -0.006361828185617924, -0.0003505330823827535, -0.228697270154953, -0.0004808938247151673, -4.660974445869215e-05, -0.00040570611599832773, -0.00537664070725441, -0.00030322244856506586, -0.5421774387359619, -0.0002300474588992074, -0.001485317014157772, -3.001922607421875, -0.0001811817055568099, -0.007254330907016993, -0.0040730624459683895, -0.17599815130233765, -0.03915362060070038, -0.03226659446954727, -1.2118091583251953, -0.24417704343795776, -0.20710673928260803, -0.002389791887253523, -0.653934895992279, -0.03594382107257843, -0.0003589939442463219, -1.1977556943893433, -0.0006348263123072684, -0.00020930961181875318, -0.03883248195052147, -0.0012966329231858253, -0.17609472572803497, -0.03298738971352577, -1.1112456321716309, -0.03639095649123192, -1.048779010772705, -0.00030620177858509123, -0.0020657882560044527, -7.223821739898995e-05, -2.0265373677830212e-05, -9.536738616588991e-07, -2.3841830625315197e-06, -0.057385414838790894, -0.00029202012228779495, -0.0002517383254598826, -0.06379297375679016, -0.0041996147483587265, -0.0046907151117920876, -0.012221922166645527, -0.06455511599779129, -0.01766659878194332, -0.03865748271346092, -9.583967766957358e-05, -0.00438074953854084, -1.7881377516459906e-06, -2.884823152271565e-05, -2.622600959512056e-06, -6.318072337307967e-06, -0.0025856418069452047, -0.0011923355050384998, -0.00904817320406437, -0.00028951745480298996, -0.004451603628695011, -0.022803111001849174, -0.00025054652360267937, -0.002298334613442421, -0.0029778205789625645, -0.7805461287498474, -0.013203568756580353, -0.03030453808605671, -0.07582993805408478, -0.00040415700641460717, -0.17040233314037323, -0.5088160037994385, -0.12210674583911896, -0.0027814533095806837, -5.471556869451888e-05, -4.51792984677013e-05, -0.10085903108119965, -0.0005620330339297652, -0.23992228507995605, -0.0017933252966031432, -0.0002898749662563205, -0.0002517383254598826, -2.145764938177308e-06, -7.664863369427621e-05, -5.245195097813848e-06, -1.3112935448589269e-05, -6.556489552167477e-06, -0.8406077027320862, -0.45219719409942627, -0.0009625093080103397, -0.00015496007108595222, -0.08145047724246979, -0.012256543152034283, -4.768370445162873e-07, -0.07254224270582199, -0.007919933646917343, -0.004182520322501659, -0.7219440937042236, -0.13326281309127808, -0.0009531007381156087, -0.20233996212482452, -0.10973777621984482, -0.00039188333903439343, -0.001086121890693903, -1.847726889536716e-05, -3.814689989667386e-06, -0.00027056847466155887, -1.7881233361549675e-05, -8.21318244561553e-05, -0.0068191904574632645, -0.0006924853660166264, -4.792098479811102e-05, -4.529942543740617e-06, -1.1920928244535389e-07, -1.7881377516459906e-06, -0.00021002470748499036, -0.022748928517103195, -0.0325845405459404, -0.0002588890492916107, -0.005601898767054081, -0.009064002893865108, -0.00014530557382386178, -0.0031691587064415216, -0.0018851857166737318, -1.3302052021026611, -0.027929488569498062, -0.00031573555315844715, -0.2869296371936798, -0.33325034379959106, -0.832003653049469, -1.6644172668457031, -0.06783916801214218, -0.0005972985527478158, -0.26014116406440735, -0.00010656742961145937, -0.047757916152477264, -0.0001248043408850208, -6.913899414939806e-05, -0.0006073060794733465, -1.0844359397888184, -1.0967194612021558e-05, -0.058660030364990234, -3.933898824470816e-06, -2.566890001296997, -0.004490411374717951, -0.0024109601508826017, -2.5154452323913574, -0.11569304764270782, -0.0019463420612737536, -6.079655122448457e-06, -6.0794889577664435e-05, -0.001190787530504167, -0.024406446143984795, -5.6503606174374e-05, -0.0001081169830285944, -0.0003641180810518563, -2.622600959512056e-06, -1.1920928244535389e-07, -1.6569954823353328e-05, -0.00011073929636040702, -0.07862972468137741, -0.23461580276489258, -0.13295403122901917, -0.00018559163436293602, -0.06085381284356117, -0.26081615686416626, -0.00010632903286023065, -0.0025884953793138266, -0.0010407513473182917, -0.386907696723938, -0.0007911174325272441, -0.09647160023450851, -0.36263561248779297, -0.09236356616020203, -0.02121669240295887, -0.16834060847759247, -0.006857669446617365, -0.01660585030913353, -0.16463671624660492, -0.00036042393185198307, -0.6636238098144531, -1.0729610919952393, -0.03583088517189026, -1.7374775409698486, -0.45496484637260437, -4.351044481154531e-05, -0.006547664292156696, -0.0010927902767434716, -0.4922853112220764, -0.8115975856781006, -8.415821503149346e-05, -0.0810847133398056, -0.6790359616279602, -0.0019334923708811402, -6.842378934379667e-05, -0.15136964619159698, -5.006777428206988e-06, -0.0006320862448774278, -1.1920928244535389e-07, -0.0012024560710415244, -1.1500605344772339, -0.2879888117313385, -0.0007340597221627831, -0.0541110634803772, -0.00017963226127903908], "finish_reason": "length"}], "metrics": {"energy": 280.5532930603027, "energy_per_token": 1.0959113010168073, "time": 11.354287, "time_per_token": 0.04435268359375}}
{"outputs": [{"text": "# Preprocess the input texts\n    processed_texts = [ALPHANUMERIC.sub(' ', text.lower()).strip().split() for text in texts]\n    stopword_removed_texts = [\n        [word for word in words if word not in STOPWORDS]\n        for words in processed_texts\n    ]\n    tfidf_vectorizer = TfidfVectorizer(stop_words='english')\n    tfidf_vectors = tfidf_vectorizer.fit_transform(stopword_removed_texts)\n\n    # Perform NMF\n    nmf = NMF(num_topics=num_topics, random_state=0)\n    nmf_components = nmf.fit_transform(tfidf_vectors)\n    topics = [\n        [word for component_idx, word in enumerate(nmf.components_[topic_idx].argsort()[-10:])]\n        for topic_idx in range(nmf.n_components_)\n    ]\n\n    return topics", "tokens": ["#", " Pre", "process", " the", " input", " texts", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "strip", "()", ".", "split", "()", " for", " text", " in", " texts", "]", "\n", "    ", "stop", "word", "_", "rem", "oved", "_", "text", "s", " =", " [", "\n", "        ", "[", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "        ", "for", " words", " in", " processed", "_", "text", "s", "\n", "    ", "]", "\n", "    ", "tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "tf", "id", "f", "_", "vectors", " =", " tf", "id", "f", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "stop", "word", "_", "rem", "oved", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Perform", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "num", "_", "top", "ics", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n", "    ", "nm", "f", "_", "components", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", "_", "vectors", ")", "\n", "    ", "top", "ics", " =", " [", "\n", "        ", "[", "word", " for", " component", "_", "idx", ",", " word", " in", " enumerate", "(", "nm", "f", ".", "components", "_[", "topic", "_", "idx", "]", ".", "args", "ort", "()", "[-", "1", "0", ":]", ")]", "\n", "        ", "for", " topic", "_", "idx", " in", " range", "(", "nm", "f", ".", "n", "_", "components", "_)", "\n", "    ", "]", "\n", "\n", "    ", "return", " topics", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.6037266850471497, -0.5607988238334656, -1.1945661306381226, -0.153604656457901, -0.3643970787525177, -0.0031881716568022966, -0.7773293852806091, -0.01239760685712099, -0.02047194354236126, -0.0019649022724479437, -0.0027479289565235376, -0.403521865606308, -0.28154313564300537, -5.722029527532868e-06, -0.00013481661153491586, -2.5033637939486653e-05, -5.245195097813848e-06, -0.00011920218821614981, -0.00018821375851985067, -0.00036054308293387294, -0.022131487727165222, -0.28366315364837646, -0.014104210771620274, -0.27128174901008606, -0.4910501539707184, -0.015070977620780468, -0.03286927565932274, -0.17695172131061554, -0.6387336254119873, -0.011136163957417011, -1.166481614112854, -0.03317952901124954, -0.040183402597904205, -0.07091981917619705, -0.0007700338610447943, -6.007967749610543e-05, -0.00047910655848681927, -0.028656775131821632, -0.0035875977482646704, -0.37985166907310486, -1.72104012966156, -1.5680859088897705, -0.007342495955526829, -1.6290147304534912, -0.5745948553085327, -0.539328932762146, -0.06774359196424484, -0.00890498235821724, -0.005478250328451395, -0.28568965196609497, -1.007844090461731, -0.004711122717708349, -0.2561315596103668, -0.050035931169986725, -0.013980315998196602, -0.00028701478731818497, -0.00033098942367359996, -1.8427979946136475, -0.017161209136247635, -0.01554491464048624, -0.11573541164398193, -5.602820692729438e-06, -0.020978933200240135, -2.0265558760002023e-06, -3.2782016205601394e-05, -6.079655122448457e-06, -6.437280717364047e-06, -0.013685564510524273, -0.747269332408905, -0.0008236353169195354, -0.00210564024746418, -0.0007108307327143848, -0.0007740838918834925, -0.0008380476501770318, -1.2278481335670222e-05, -2.50339189733495e-06, -2.145764938177308e-06, -0.08225121349096298, -0.00840790942311287, -6.949660019017756e-05, -0.0006886732880957425, -0.6019302606582642, -1.221082329750061, -0.1989593356847763, -0.003204094711691141, -0.5800034999847412, -0.22445066273212433, -0.11977116763591766, -0.0011820956133306026, -0.0005260513862594962, -2.145764938177308e-06, -5.1973900554003194e-05, -2.3841855067985307e-07, -7.748573807475623e-06, -2.3007127310847864e-05, -0.5182262659072876, -0.7135017514228821, -0.00014125302550382912, -0.0003513672563713044, -0.16469626128673553, -0.14068655669689178, -4.768370445162873e-07, -0.12231510132551193, -0.0223927553743124, -0.010799061506986618, -0.4334287643432617, -0.023483483120799065, -0.0010124086402356625, -0.06344665586948395, -1.636610507965088, -0.0018442542059347034, -0.1734813153743744, -2.4199192921514623e-05, -7.152555099310121e-07, -2.3245540432981215e-05, -1.9550132492440753e-05, -5.030505417380482e-05, -3.790783375734463e-05, -0.0020680485758930445, -0.00011657988943625242, -0.0001380348257953301, -0.01565101183950901, -0.030438914895057678, -1.0371154530730564e-05, -1.1920922133867862e-06, -5.960462772236497e-07, -0.00010918975021922961, -2.264974000354414e-06, -4.768370445162873e-07, -1.8358061424805783e-05, -0.00018880968855228275, -0.01406354084610939, -0.2245209515094757, -0.0004668337933253497, -0.1012275442481041, -1.1066944599151611, -0.17315253615379333, -0.0006150499684736133, -1.0544302463531494, -0.00013124081306159496, -0.12707661092281342, -0.00016830935783218592, -0.11463360488414764, -0.00019631843315437436, -0.00012003655137959868, -0.0011651878012344241, -1.2129673957824707, -8.702239938429557e-06, -0.0791100561618805, -4.172316494077677e-06, -0.5449624061584473, -0.0024374795611947775, -0.0001397035230183974, -8.630380034446716e-05, -1.6689286894688848e-06, -0.19194038212299347, -0.22663761675357819, -3.099436753473128e-06, -0.00022194306075107306, -0.0002580548170953989, -0.8503049612045288, -0.40456491708755493, -0.010251250118017197, -0.0024123871698975563, -0.4411574602127075, -0.0003401654539629817, -2.420881509780884, -0.5460333824157715, -0.013623945415019989, -0.001767264911904931, -5.364403477869928e-06, -0.00023445718397852033, -0.0059780846349895, -0.019358748570084572, -8.332382276421413e-05, -0.00014554394874721766, -0.00035124807618558407, -2.861018856492592e-06, -1.1920928244535389e-07, -9.536697689327411e-06, -0.0045806001871824265, -0.40802085399627686, -0.2108706682920456, -1.171282172203064, -1.455406665802002, -0.2732153534889221, -0.029057970270514488, -0.19444461166858673, -0.17409248650074005, -0.0010714748641476035, -0.8930297493934631, -0.654000461101532, -0.2013922780752182, -3.1760854721069336, -1.2063331604003906, -1.5977075099945068, -0.083449587225914, -0.25662243366241455, -0.0702483132481575, -0.1971691995859146, -0.0008521024719811976, -1.9225270748138428, -3.45700973412022e-05, -0.14983725547790527, -0.04570351541042328, -0.008541597984731197, -0.18083414435386658, -0.028778748586773872, -0.06336755305528641, -1.1628029346466064, -0.025995133444666862, -0.4517260789871216, -0.007504723034799099, -0.44197720289230347, -0.5387423634529114, -0.9443225264549255, -0.17148569226264954, -0.8016530275344849, -0.2818503677845001, -0.006553704384714365, -0.001259487122297287, -0.0009563163621351123, -0.00021514961554203182, -2.288792165927589e-05, -4.970903682988137e-05, -0.026128582656383514, -0.031234286725521088, -0.00012563870404846966, -1.7369056940078735, -6.23445157543756e-05, -0.006913786754012108, -0.5713480114936829, -0.0001370812824461609, -0.12413211166858673, -0.045171309262514114, -0.005209561437368393, -0.003946968819946051, -0.0007256020326167345, -0.0017037175130099058, -0.3412725627422333, -0.00020489977032411844, -0.0941755548119545, -0.013449770398437977, -0.7830947637557983, -2.0265558760002023e-06, -1.5497195136049413e-06, -7.164221460698172e-05, -0.000259723310591653, -0.06208682432770729], "finish_reason": "stop"}], "metrics": {"energy": 262.8107935314179, "energy_per_token": 1.047054954308438, "time": 11.275505, "time_per_token": 0.04492233067729084}}
{"outputs": [{"text": "processed_texts = []\n    for text in texts:\n        # Step 1: Remove non-alphanumeric characters (excluding spaces) and convert to lowercase\n        text = ALPHANUMERIC.sub('', text).lower()\n\n        # Step 2: Remove stopwords and normalize whitespaces\n        words = [w.strip(STOPWORDS) for w in text.split() if w.strip(STOPWORDS)]\n\n        # Step 3: Join words back into text and append to processed_texts list\n        processed_texts.append(' '.join(words))\n\n    # Step 4: Convert processed_texts to a TF-IDF vector and apply NMF\n    tfidf_vectorizer = TfidfVectorizer(stop_words=STOPWORDS)\n    tfidf_matrix = tfidf_vectorizer.fit_transform(processed_texts)\n    nmf = NMF(n_components=num_topics)\n    nmf_matrix = nmf.fit_transform(tfidf_matrix)\n\n    #", "tokens": ["processed", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "#", " Step", " ", "1", ":", " Remove", " non", "-", "al", "phan", "umeric", " characters", " (", "ex", "cluding", " spaces", ")", " and", " convert", " to", " lower", "case", "\n", "        ", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", ")", ".", "lower", "()", "\n", "\n", "        ", "#", " Step", " ", "2", ":", " Remove", " stop", "words", " and", " normalize", " whites", "paces", "\n", "        ", "words", " =", " [", "w", ".", "strip", "(", "ST", "OP", "W", "OR", "DS", ")", " for", " w", " in", " text", ".", "split", "()", " if", " w", ".", "strip", "(", "ST", "OP", "W", "OR", "DS", ")]", "\n", "\n", "        ", "#", " Step", " ", "3", ":", " Join", " words", " back", " into", " text", " and", " append", " to", " processed", "_", "text", "s", " list", "\n", "        ", "processed", "_", "text", "s", ".", "append", "('", " '", ".", "join", "(", "words", "))", "\n", "\n", "    ", "#", " Step", " ", "4", ":", " Convert", " processed", "_", "text", "s", " to", " a", " TF", "-", "ID", "F", " vector", " and", " apply", " N", "MF", "\n", "    ", "tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " tf", "id", "f", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "nm", "f", "_", "matrix", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", "_", "matrix", ")", "\n", "\n", "    ", "#"], "logprobs": [-3.449270009994507, -0.047446124255657196, -0.06636973470449448, -0.012006278149783611, -0.009792031720280647, -1.4543735980987549, -0.005078867077827454, -0.15963050723075867, -0.07520705461502075, -0.18561577796936035, -0.001209481037221849, -0.0010386077919974923, -0.0002134810492862016, -0.0011717366287484765, -0.004350839648395777, -1.0403857231140137, -3.226918935775757, -0.033695563673973083, -0.021051188930869102, -0.08974435925483704, -0.5600806474685669, -0.10943649709224701, -0.005485008005052805, -0.024757832288742065, -0.00038366109947673976, -0.0010170531459152699, -0.018220432102680206, -1.1186504364013672, -0.26432740688323975, -0.0012865131720900536, -0.03609365597367287, -0.0023510216269642115, -1.204459309577942, -0.11047551780939102, -0.2267136424779892, -0.0023308033123612404, -0.007756826933473349, -0.07674780488014221, -0.0004657614335883409, -0.7061303853988647, -0.07044075429439545, -0.5281728506088257, -1.0251946150674485e-05, -3.886147169396281e-05, -0.0004991239402443171, -1.5020257706055418e-05, -0.00023874769976828247, -0.0002972637885250151, -0.00034409802174195647, -0.025233246386051178, -0.9043594002723694, -6.496695277746767e-05, -0.008705048821866512, -0.21631938219070435, -0.04115412384271622, -0.00870185811072588, -4.541770613286644e-05, -0.03681962564587593, -0.43162259459495544, -0.00027843413408845663, -0.0015691122971475124, -0.007578669115900993, -0.00012337400403339416, -0.0022612258326262236, -0.0034187936689704657, -0.10332903265953064, -0.029462244361639023, -0.01755720190703869, -2.043633222579956, -2.895228862762451, -1.4821990728378296, -0.9982314109802246, -0.0818876102566719, -0.0002040654799202457, -0.868440568447113, -0.010401090607047081, -0.21778923273086548, -2.232989549636841, -0.8771255612373352, -0.23429331183433533, -0.9919403195381165, -0.38195380568504333, -1.6331539882230572e-05, -0.0005161621957086027, -5.483612312673358e-06, -1.0371154530730564e-05, -0.03933059424161911, -0.18981358408927917, -0.0003797286772169173, -0.00021896349790040404, -0.13582785427570343, -0.0009808497270569205, -0.015415329486131668, -0.049255382269620895, -1.671454668045044, -0.14345689117908478, -0.9800888299942017, -0.16646508872509003, -0.08443597704172134, -0.007857130840420723, -1.07287787614041e-05, -6.079655122448457e-06, -3.2543604902457446e-05, -8.22540732769994e-06, -0.4991047978401184, -0.004797732923179865, -1.3122050762176514, -0.00021979777375236154, -0.18579348921775818, -0.06450281292200089, -0.0001264730526600033, -0.00329772662371397, -0.0025531810242682695, -0.9987759590148926, -0.5335466861724854, -0.6111457943916321, -0.202972874045372, -2.0488104820251465, -1.4027336835861206, -2.16935396194458, -0.060462597757577896, -0.5571718215942383, -0.46506693959236145, -0.0036936646793037653, -0.0041783656924963, -1.6399232149124146, -0.00619882345199585, -0.00015162272029556334, -0.110946886241436, -0.0013716346584260464, -0.002740914933383465, -0.1716199368238449, -0.00042060110718011856, -0.0007826602668501437, -0.1456042230129242, -0.0035203646402806044, -2.9801878554280847e-05, -5.817244164063595e-05, -0.013367670588195324, -0.013393665663897991, -0.01909107342362404, -0.0013275867095217109, -0.027771584689617157, -0.0018669809214770794, -0.41228821873664856, -0.07977399230003357, -0.0007120219524949789, -0.007016897201538086, -0.0035006452817469835, -1.8975204229354858, -0.17689749598503113, -1.7766830921173096, -0.00039521988946944475, -0.0016664678696542978, -0.3585337698459625, -0.9808536171913147, -1.3824985027313232, -0.008179263211786747, -9.524368942948058e-05, -0.00011824862303910777, -0.11985396593809128, -2.0876641273498535, -0.3874465823173523, -0.009633127599954605, -0.0005311747081577778, -0.49019119143486023, -0.000576449150685221, -1.6662297248840332, -0.16545549035072327, -0.0007521660882048309, -1.2631841897964478, -0.10121612995862961, -0.05287371203303337, -0.00012838016846217215, -0.00036161558819003403, -2.0265558760002023e-06, -9.572047565598041e-05, -7.152555099310121e-07, -6.198863957251888e-06, -8.34461570775602e-06, -0.8838745951652527, -0.39514076709747314, -0.00015817821258679032, -0.00016699827392585576, -1.0802353620529175, -0.057329244911670685, -9.536738616588991e-07, -5.9602869441732764e-05, -1.597391747054644e-05, -4.529942543740617e-06, -0.1984868347644806, -0.018887784332036972, -0.00492217717692256, -0.17345044016838074, -0.027697261422872543, -0.00035065223346464336, -0.13495036959648132, -0.2542662024497986, -0.000504723924677819, -0.001538523007184267, -7.080780778778717e-05, -3.576278118089249e-07, -2.8490614567999728e-05, -5.3165931603871286e-05, -1.4662635294371285e-05, -7.152531907195225e-06, -0.0009391664643771946, -1.8954096958623268e-05, -8.070142939686775e-05, -0.0017629809444770217, -0.004175516311079264, -1.645074735279195e-05, -2.264974000354414e-06, -7.152555099310121e-07, -0.00027533553657121956, -0.01298978365957737, -0.2121763676404953, -0.17392730712890625, -0.000163541772053577, -0.09148472547531128, -0.00021169328829273582, -6.806619057897478e-05, -0.0016786068445071578, -0.6874209642410278, -3.576272320060525e-06, -0.0017635759431868792, -0.001758220954798162, -0.003998856525868177, -0.0001842805795604363, -0.0005538121913559735, -1.6689286894688848e-06, -1.195529580116272, -0.011590169742703438, -0.008088570088148117, -1.0992671251296997, -0.0002461368858348578, -1.1363122463226318, -0.9478896260261536, -0.0015944637125357985, -0.0019646643195301294, -5.125986263010418e-06, -0.00018082413589581847, -0.002914468990638852, -0.00032264748006127775, -7.521823135903105e-05, -0.00011634149996098131, -0.00011181206355104223, -7.152555099310121e-07, -3.576278118089249e-07, -4.184158387943171e-05, -0.0025949159171432257, -0.11119437962770462, -0.009276384487748146, -0.10867050290107727, -0.00018845213344320655, -0.043834421783685684], "finish_reason": "length"}], "metrics": {"energy": 271.09462540626515, "energy_per_token": 1.0589633804932232, "time": 11.295108, "time_per_token": 0.044121515625}}
{"outputs": [{"text": "# Preprocessing\n    texts = [ALPHANUMERIC.sub(' ', text).lower() for text in texts]\n    texts = [text.strip() for text in texts if not all([word in STOPWORDS for word in text.split()])]\n\n    # TF-IDF vectorization\n    vectorizer = TfidfVectorizer()\n    matrix = vectorizer.fit_transform(texts)\n\n    # NMF topic extraction\n    nmf = NMF(n_components=num_topics, random_state=42)\n    topic_terms = nmf.fit_transform(matrix).argsort()[:, -1].argsort().argsort()\n\n    # Extract most important words\n    top_words = [[word for word, _ in vectorizer.invert_transform(topic)[:2]] for topic in topic_terms]\n    return top_words", "tokens": ["#", " Pre", "processing", "\n", "    ", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n", "    ", "text", "s", " =", " [", "text", ".", "strip", "()", " for", " text", " in", " texts", " if", " not", " all", "([", "word", " in", " ST", "OP", "W", "OR", "DS", " for", " word", " in", " text", ".", "split", "()", "]", ")]", "\n", "\n", "    ", "#", " TF", "-", "ID", "F", " vector", "ization", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "\n", "    ", "#", " N", "MF", " topic", " extraction", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "topic", "_", "terms", " =", " nm", "f", ".", "fit", "_", "transform", "(", "matrix", ")", ".", "args", "ort", "()", "[:", ",", " -", "1", "]", ".", "args", "ort", "()", ".", "args", "ort", "()", "\n", "\n", "    ", "#", " Ext", "ract", " most", " important", " words", "\n", "    ", "top", "_", "words", " =", " [[", "word", " for", " word", ",", " _", " in", " vector", "izer", ".", "in", "vert", "_", "transform", "(", "topic", ")", "[:", "2", "]]", " for", " topic", " in", " topic", "_", "terms", "]", "\n", "    ", "return", " top", "_", "words", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.8840726017951965, -0.6892301440238953, -0.007413732353597879, -1.3681670427322388, -0.015610991977155209, -0.1533740907907486, -0.04954255744814873, -0.16045187413692474, -6.6756979322235566e-06, -0.00014733182615600526, -2.706014311115723e-05, -7.510157047363464e-06, -7.629103492945433e-05, -0.0002244459028588608, -0.00016473367577418685, -0.029210112988948822, -0.2204325944185257, -0.02638021484017372, -0.39748454093933105, -0.5437765121459961, -0.029413629323244095, -0.04463460296392441, -0.0011141052236780524, -0.7716553807258606, -0.001341991825029254, -7.664863369427621e-05, -0.00034481301554478705, -0.02154201827943325, -0.03241190314292908, -0.019493669271469116, -0.25830012559890747, -0.0006805725861340761, -0.004461454227566719, -0.05224812775850296, -0.46032702922821045, -0.1492239087820053, -1.097823143005371, -0.022167399525642395, -0.02927413582801819, -0.0005653690313920379, -5.018585216021165e-05, -0.0012493670219555497, -0.6789203882217407, -3.0447845458984375, -2.563831329345703, -1.5729740858078003, -0.49055394530296326, -0.07633989304304123, -0.02054155059158802, -1.4305104514278355e-06, -1.3232143828645349e-05, -3.814689989667386e-06, -8.22540732769994e-06, -0.014313291758298874, -0.000806602300144732, -9.464769391342998e-05, -0.266010046005249, -0.014614790678024292, -0.008654467761516571, -0.10923410207033157, -0.12324883788824081, -0.00024089295766316354, -0.00647518178448081, -0.25310608744621277, -0.00026008085114881396, -0.05441750958561897, -1.80731201171875, -0.008774887770414352, -0.0002694958820939064, -0.00012015574611723423, -0.3139508366584778, -0.06673780083656311, -0.09967758506536484, -0.00030858523678034544, -0.2511526048183441, -0.001538523007184267, -0.0003992714046034962, -0.0003297977091278881, -2.50339189733495e-06, -2.8967437174287625e-05, -5.364403477869928e-06, -8.4638240878121e-06, -8.702239938429557e-06, -0.9887480139732361, -0.007839743979275227, -0.00249182409606874, -3.6152076721191406, -0.005198413971811533, -0.00350254587829113, -4.184158387943171e-05, -8.821448318485636e-06, -0.0003461238811723888, -9.905801562126726e-05, -7.891343557275832e-05, -0.009874779731035233, -0.0013360392767935991, -2.0265373677830212e-05, -0.00045158201828598976, -0.04791416972875595, -0.06456003338098526, -0.00035613393993116915, -0.01523395162075758, -0.15545350313186646, -0.0008304246584884822, -3.1587653160095215, -0.3859159052371979, -0.030874650925397873, -0.0002057340752799064, -0.3426192104816437, -0.0002796259068418294, -0.019502554088830948, -0.0002571013756096363, -9.357491217087954e-05, -0.0019792981911450624, -0.5452355146408081, -5.125986263010418e-06, -0.001207456924021244, -0.005297433119267225, -0.002583739347755909, -0.000546425289940089, -0.000339569611242041, 0.0, -0.1990579068660736, -0.4971698820590973, -3.2186455882765586e-06, -0.00016318420239258558, -0.0005239067832008004, -0.6923868656158447, -0.015275160782039165, -0.504215657711029, -0.009064357727766037, -0.0032035005278885365, -1.936627745628357, -0.002622975967824459, -2.4706859588623047, -0.00872632022947073, -0.13042481243610382, -1.0371154530730564e-05, -8.940297266235575e-05, -0.06864085793495178, -0.0023418639320880175, -0.00011562632425921038, -0.00026901919045485556, -0.0036379601806402206, -0.15520192682743073, -0.32027125358581543, -0.7762104272842407, -0.03501614183187485, -0.5231146812438965, -0.25305572152137756, -0.0036379601806402206, -1.1141701936721802, -0.06397581845521927, -0.4572938084602356, -0.33516985177993774, -0.0026833738666027784, -0.00013374387344811112, -0.08083174377679825, -0.8618440628051758, -0.06273752450942993, -0.021534550935029984, -0.04146044701337814, -0.815433919429779, -0.21346908807754517, -0.0001323135511483997, -0.4424271881580353, -0.6629049181938171, -0.3323902487754822, -1.7136929035186768, -2.3579695224761963, -0.29992038011550903, -2.8945021629333496, -0.00035172473872080445, -0.5627545714378357, -1.7184711694717407, -0.5451328754425049, -0.070543073117733, -2.4895496368408203, -1.9157589673995972, -0.05590143799781799, -0.1330430507659912, -0.912574827671051, -0.47773945331573486, -0.002179153962060809, -1.7064440250396729, -0.0008855711785145104, -0.00020954797219019383, -2.1312334537506104, -0.24019551277160645, -0.00014149141497910023, -0.2556600272655487, -0.0186380036175251, -0.23150663077831268, -1.2148573398590088, -0.2858233153820038, -2.789832592010498, -0.8849401473999023, -0.37431928515434265, -0.0029384789522737265, -0.007162252441048622, -0.016691671684384346, -1.0490362910786644e-05, -3.9934315282152966e-05, -0.08171581476926804, -0.004316655918955803, -1.0148911476135254, -0.10904299467802048, -0.1772039830684662, -7.986990567587782e-06, -7.986990567587782e-06, -0.9717119336128235, -8.344646857949556e-07, -9.536738616588991e-07, -3.0040289857424796e-05, -0.0003327769518364221, -2.7497618198394775, -0.006440359633415937], "finish_reason": "stop"}], "metrics": {"energy": 260.43670677566536, "energy_per_token": 1.189208706738198, "time": 9.6522455, "time_per_token": 0.044074180365296804}}
{"outputs": [{"text": "# 1. Preprocess texts\n    for i, t in enumerate(texts):\n        texts[i] = ALPHANUMERIC.sub(' ', t).lower().strip()\n        texts[i] = ' '.join(w for w in texts[i].split() if w not in STOPWORDS)\n\n    # 2. Create a vectorizer to transform texts into a TF-IDF matrix\n    vectorizer = TfidfVectorizer(stop_words='english')\n    tfidf = vectorizer.fit_transform(texts)\n\n    # 3. Perform NMF to extract topics\n    num_docs, num_features = tfidf.shape\n    nmf = NMF(num_topics=num_topics, random_state=0, max_iter=1000)\n    topic_vectors = nmf.fit_transform(tfidf)\n    topic_words = vectorizer.inverse_transform(topic_vectors)\n    return [list(topic) for topic in topic_words]", "tokens": ["#", " ", "1", ".", " Pre", "process", " texts", "\n", "    ", "for", " i", ",", " t", " in", " enumerate", "(", "text", "s", "):", "\n", "        ", "text", "s", "[", "i", "]", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " t", ")", ".", "lower", "()", ".", "strip", "()", "\n", "        ", "text", "s", "[", "i", "]", " =", " '", " '", ".", "join", "(", "w", " for", " w", " in", " texts", "[", "i", "]", ".", "split", "()", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", ")", "\n", "\n", "    ", "#", " ", "2", ".", " Create", " a", " vector", "izer", " to", " transform", " texts", " into", " a", " TF", "-", "ID", "F", " matrix", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "\n", "    ", "#", " ", "3", ".", " Perform", " N", "MF", " to", " extract", " topics", "\n", "    ", "num", "_", "docs", ",", " num", "_", "features", " =", " tf", "id", "f", ".", "shape", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "num", "_", "top", "ics", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ",", " max", "_", "iter", "=", "1", "0", "0", "0", ")", "\n", "    ", "topic", "_", "vectors", " =", " nm", "f", ".", "fit", "_", "transform", "(", "tf", "id", "f", ")", "\n", "    ", "topic", "_", "words", " =", " vector", "izer", ".", "inverse", "_", "transform", "(", "topic", "_", "vectors", ")", "\n", "    ", "return", " [", "list", "(", "topic", ")", " for", " topic", " in", " topic", "_", "words", "]<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6158158183097839, -3.7075538635253906, -0.07782971858978271, -0.18697482347488403, -0.7412371039390564, -0.6034935712814331, -1.5777463912963867, -0.699908971786499, -0.011506502516567707, -2.253190040588379, -0.23931270837783813, -0.7598319053649902, -2.219052791595459, -0.14535148441791534, -0.000867467257194221, -0.00023326536756940186, -0.0006688979919999838, -6.198863957251888e-06, -0.00497437035664916, -0.00973890908062458, -0.007907869294285774, -0.5205707550048828, -0.009810919873416424, -0.0004128557338844985, -1.5735502529423684e-05, -0.00043096792069263756, -0.0004094000905752182, -0.42147645354270935, -1.1444026313256472e-05, -7.903263758635148e-05, -0.00023541064001619816, -2.47952248173533e-05, -0.0001525762490928173, -0.0002917817619163543, -0.0006630606367252767, -0.060238588601350784, -0.1823621243238449, -0.002042947104200721, -0.059015993028879166, -0.40194573998451233, -0.11822787672281265, -0.030990228056907654, -0.0022261380217969418, -0.8504394292831421, -0.722922146320343, -0.026163190603256226, -0.3471001982688904, -0.2871164381504059, -0.5836896896362305, -0.0017947532469406724, -0.0001497156627010554, -4.088794958079234e-05, -0.00010275312524754554, -0.013104152865707874, -0.6523601412773132, -0.0017655988922342658, -0.00021979777375236154, -0.0013667537132278085, -1.0502638816833496, -1.27451753616333, -0.03900665044784546, -0.0015288818394765258, -0.00018618757894728333, -0.2320706993341446, -0.0005397531786002219, -2.098061486321967e-05, -9.548207890475169e-05, -0.010618496686220169, -0.012821853160858154, -0.06482038646936417, -0.007125441916286945, -0.06199092045426369, -0.07340608537197113, -1.0609570381348021e-05, -0.0030778914224356413, -1.9073468138230965e-06, -2.2649508537142538e-05, -1.7881377516459906e-06, -7.390948667307384e-06, -0.008649740368127823, -0.01740819588303566, -0.20255863666534424, -0.0015981532633304596, -0.016200566664338112, -0.014371813274919987, -0.003353568958118558, -0.0018406844465062022, -2.518584728240967, -1.7187631130218506, -0.7277130484580994, -0.1238223984837532, -2.084644317626953, -1.7814860343933105, -1.403977394104004, -0.5099512338638306, -1.3018584251403809, -2.3570618629455566, -0.008380956947803497, -0.0001864259538706392, -0.00010573305189609528, -0.5215166211128235, -0.07971840351819992, -0.0006796196103096008, -0.058143001049757004, -0.001010384177789092, -0.0003700763627421111, -0.0005017452058382332, -3.3378546504536644e-06, -2.407998726994265e-05, -5.364403477869928e-06, -9.179073458653875e-06, -6.437280717364047e-06, -0.8907680511474609, -0.6115944385528564, -0.00012408917245920748, -0.0001501924270996824, -0.11731011420488358, -0.01585003174841404, -8.344646857949556e-07, -0.12489235401153564, -0.008926840499043465, -0.08456382155418396, -0.5982921719551086, -0.1553391069173813, -0.0009022455778904259, -0.8989036679267883, -0.0016307639889419079, -1.0490362910786644e-05, -1.4305012882687151e-05, -0.0003967689990531653, -8.451581379631534e-05, -6.472854875028133e-05, -0.005333480425179005, -0.0005565524916164577, -1.6331539882230572e-05, -0.0002896366349887103, -0.021550418809056282, -0.03738052397966385, -0.0004956685588695109, -0.006199534051120281, -0.009964484721422195, -0.0035770260728895664, -0.0008116050157696009, -1.161495327949524, -0.17005221545696259, -0.000812915270216763, -1.3560380935668945, -0.2668042480945587, -0.34718644618988037, -0.10871423780918121, -0.0005865760613232851, -3.1625847816467285, -0.007893676869571209, -1.5895034074783325, -0.43097299337387085, -0.11719275265932083, -0.000105375460407231, -0.13438233733177185, -0.0005665604257956147, -0.0027377051301300526, -2.9802276912960224e-06, 0.0, -5.6503606174374e-05, -0.014853128232061863, -0.014054607599973679, -0.03943328186869621, -0.26132041215896606, -0.00025138078490272164, -0.019534233957529068, -0.0002817710628733039, -6.305972783593461e-05, -0.0010280092246830463, -0.9262132048606873, -0.00028975578607060015, -0.41448894143104553, -6.9141146923357155e-06, -0.33058497309684753, -0.003726682160049677, -0.000746448349673301, -0.0014832934830337763, -2.145764938177308e-06, -0.152585968375206, -0.4219513237476349, -2.3841830625315197e-06, -0.0002543602604418993, -0.0006437613046728075, -1.0040369033813477, -1.4361395835876465, -1.183396577835083, -0.00016783259343355894, -0.0009045085171237588, -0.005170544609427452, -0.8586066365242004, -0.0887194499373436, -0.05000724270939827, -0.3073064982891083, -0.5149818062782288, -0.07000525295734406, -0.008701148442924023, -2.744915008544922, -0.005830542650073767, -3.2746901512145996, -0.0014078239910304546, -0.0029939848463982344, -5.125986263010418e-06, -0.000102037942269817, -0.004381936509162188, -0.0015723258256912231, -8.475421054754406e-05, -0.00020728347590193152, -0.0004558716027531773, -7.867782187531702e-06, -4.768370445162873e-07, -0.13496913015842438, -0.07600021362304688, -1.6659884452819824, -1.3151500225067139, -0.0017071687616407871, -1.5974540710449219, -0.008906872943043709, -0.7977458238601685, -1.1801649634435307e-05, -6.556489552167477e-06, -0.09108267724514008, 0.0, -0.00019643761334009469, -0.0017014563782140613, -0.018624313175678253, -1.6212332411669195e-05, -4.529942543740617e-06, -0.0667683556675911, -0.04320349544286728, -1.226804494857788, -0.9093114733695984, -0.5924505591392517, -0.894902765750885, -0.002544263144955039, -1.5667954683303833, -0.8038908243179321, -0.017032301053404808, -0.0012519863666966558, -0.0003597089380491525, -0.010860736481845379, -1.0847986231965479e-05, -0.00011765264935093, -0.9725622534751892, -2.3841855067985307e-07, -1.7881377516459906e-06, -1.5020257706055418e-05, -0.0005224770284257829, -0.0717569887638092], "finish_reason": "stop"}], "metrics": {"energy": 292.91619559001936, "energy_per_token": 1.16699679517936, "time": 11.087324, "time_per_token": 0.04417260557768925}}
{"outputs": [{"text": "# Preprocessing: remove non-alphanumeric characters, convert to lowercase, remove stopwords\n    texts = [ALPHANUMERIC.sub('', text).lower().strip() for text in texts]\n    texts = [text for text in texts if not text in STOPWORDS]\n\n    # Vectorize the processed texts\n    vectorizer = TfidfVectorizer()\n    vectors = vectorizer.fit_transform(texts)\n\n    # Apply NMF with 2 topics\n    nmf = NMF(n_components=num_topics, init='random', random_state=0)\n    topic_weights = nmf.fit_transform(vectors)\n\n    # Extract the most significant words for each topic\n    topics = [nltk.word_tokenize(text) for text in texts]\n    for topic_idx, topic_words in enumerate(topics):\n        topics[topic_idx] = sorted(topic_words, key=lambda x: topic_weights[topic_idx][x.lower()], reverse=True)[:3]\n\n    return", "tokens": ["#", " Pre", "processing", ":", " remove", " non", "-", "al", "phan", "umeric", " characters", ",", " convert", " to", " lower", "case", ",", " remove", " stop", "words", "\n", "    ", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", "'", ",", " text", ")", ".", "lower", "()", ".", "strip", "()", " for", " text", " in", " texts", "]", "\n", "    ", "text", "s", " =", " [", "text", " for", " text", " in", " texts", " if", " not", " text", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Vector", "ize", " the", " processed", " texts", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "vectors", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", " with", " ", "2", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " init", "='", "random", "'", ",", " random", "_", "state", "=", "0", ")", "\n", "    ", "topic", "_", "weights", " =", " nm", "f", ".", "fit", "_", "transform", "(", "vectors", ")", "\n", "\n", "    ", "#", " Ext", "ract", " the", " most", " significant", " words", " for", " each", " topic", "\n", "    ", "top", "ics", " =", " [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " texts", "]", "\n", "    ", "for", " topic", "_", "idx", ",", " topic", "_", "words", " in", " enumerate", "(", "top", "ics", "):", "\n", "        ", "top", "ics", "[", "topic", "_", "idx", "]", " =", " sorted", "(", "topic", "_", "words", ",", " key", "=", "lambda", " x", ":", " topic", "_", "weights", "[", "topic", "_", "idx", "][", "x", ".", "lower", "()", "]", ",", " reverse", "=", "True", ")", "[:", "3", "]", "\n", "\n", "    ", "return"], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.8840726017951965, -1.2882788181304932, -0.9874646663665771, -0.07824848592281342, -0.007625991944223642, -0.028254028409719467, -0.0006914132391102612, -0.00225444626994431, -0.03684467449784279, -0.9188880920410156, -0.09607870131731033, -0.08730258047580719, -0.001453534816391766, -0.008116713725030422, -0.035171061754226685, -0.8984025716781616, -0.008584974333643913, -0.0124196233227849, -0.1262350231409073, -0.004543338902294636, -1.7452247142791748, -0.02438073605298996, -0.14951610565185547, -0.07459838688373566, -0.1492616981267929, -6.9141146923357155e-06, -0.00015722469834145159, -0.00033885458833537996, -1.3112935448589269e-05, -0.00020895205670967698, -0.0002356490003876388, -0.0002983363519888371, -0.02536807395517826, -0.7750229239463806, -0.0001102625101339072, -0.5094923377037048, -0.6925521492958069, -0.010354842990636826, -0.013310031965374947, -0.0007289375062100589, -0.6504323482513428, -1.6444882154464722, -0.022442296147346497, -0.24936655163764954, -0.001444369088858366, -7.1403817855753e-05, -0.0006292270263656974, -0.10163652896881104, -0.0055276877246797085, -0.01607622765004635, -0.2406957596540451, -0.0004570631426759064, -0.004303243011236191, -0.024730386212468147, -0.7336952686309814, -0.6081437468528748, -0.006663246545940638, -0.00011920218821614981, -0.01683421991765499, -0.0012455570977181196, -2.567964792251587, -1.476353406906128, -0.5428542494773865, -0.005520337261259556, -1.311301275563892e-06, -2.4199192921514623e-05, -1.4305104514278355e-06, -5.722029527532868e-06, -0.014892826788127422, -0.007784269750118256, -0.10615943372249603, -0.00041476229671388865, -0.031071819365024567, -0.434131920337677, -1.8595322370529175, -1.5087995529174805, -1.1621761322021484, -0.14868630468845367, -0.8635513186454773, -0.0001510267611593008, -0.19209572672843933, -0.002515130676329136, -0.0003762729174923152, -0.0004963834653608501, -2.3841830625315197e-06, -4.792098479811102e-05, -3.576272320060525e-06, -1.1801649634435307e-05, -8.702239938429557e-06, -0.6214307546615601, -0.004941038321703672, -0.0013542537344619632, -1.9443960189819336, -0.0021950930822640657, -0.006853525526821613, -4.1126360883936286e-05, -9.536697689327411e-06, -0.0035177513491362333, -9.202533692587167e-05, -7.64102369430475e-05, -0.010819816961884499, -0.0013706822646781802, -2.884823152271565e-05, -0.0006914132391102612, -0.022292500361800194, -0.032392632216215134, -0.00034671969478949904, -0.014744714833796024, -1.6291706562042236, -0.02479260414838791, -0.00029845553217455745, -2.1112565994262695, -3.2752203941345215, -0.3203234374523163, -0.37700149416923523, -0.2591460049152374, -0.00016366096679121256, -0.19984208047389984, -0.00016544880054425448, -0.019829489290714264, -0.00026770823751576245, -8.391981828026474e-05, -0.0011847150744870305, -0.19414052367210388, -1.7881377516459906e-06, -0.0009710840531624854, -0.012247594073414803, -0.03016193024814129, -0.0007124984404072165, -0.00040356122190132737, 0.0, -0.2701495587825775, -1.550522804260254, -0.08947580307722092, -0.06092133745551109, -0.10342556983232498, -2.5987286790041253e-05, -0.0521048828959465, -6.198863957251888e-06, -2.753696753643453e-05, -0.0007304860628210008, -0.7708871364593506, -0.5006725192070007, -0.006338492967188358, -0.008584502153098583, -1.5502601861953735, -0.0013396107824519277, -1.374530553817749, -0.0021302644163370132, -0.0016487350221723318, -4.768360213347478e-06, -3.075552376685664e-05, -0.0060462187975645065, -0.013479644432663918, -8.475421054754406e-05, -0.00016890530241653323, -0.000192504478036426, -0.14243392646312714, -0.26386311650276184, -0.15569022297859192, -0.00013422065239865333, -0.06349878758192062, -0.3940493166446686, -0.011847135610878468, -0.6023762822151184, -0.3448115587234497, -0.12214166671037674, -0.034482937306165695, -0.17090778052806854, -0.008344665169715881, -0.008366062305867672, -0.12220539152622223, -0.00022968991834204644, -0.40714359283447266, -0.23711006343364716, -0.00834005419164896, -1.3687431812286377, -2.086703300476074, -0.0021512003149837255, -0.000502817565575242, -0.3148355484008789, -0.019442811608314514, -0.09826179593801498, -0.0006333967321552336, -0.11172499507665634, -0.7270818948745728, -0.29407575726509094, -0.09051332622766495, -0.1483788639307022, -0.0774158462882042, -0.08811251074075699, -0.01458036806434393, -0.00917870458215475, -0.045342326164245605, -0.8303837776184082, -1.765122652053833, -0.4884536862373352, -1.093395709991455, -0.7620196342468262, -0.37345296144485474, -1.6604664325714111, -1.78892982006073, -0.009304966777563095, -0.014741895720362663, -0.0007064230740070343, -0.7183477878570557, -0.00033206192892976105, -0.013371669687330723, -0.0006652049487456679, -0.004576446954160929, -1.6870753765106201, -0.18299609422683716, -0.004701512400060892, -0.00047302976599894464, -1.2397689715726301e-05, -0.0006772369961254299, -0.0010656398953869939, -0.020819811150431633, -0.8663687109947205, -0.014065892435610294, -0.09324781596660614, -0.0003620922507252544, -0.0021851013880223036, -0.009129446931183338, -0.2886907160282135, -0.006009367760270834, -0.03534230217337608, -1.1380820274353027, -0.0013272295473143458, -0.5617262125015259, -8.332382276421413e-05, -0.0001559135998832062, -0.0438726432621479, -0.08421212434768677, -0.0006516240537166595, -0.00019631843315437436, -0.6906033754348755, -1.0290626287460327, -2.0195581912994385, -0.46872302889823914, -0.0001510267611593008, -0.30163857340812683, -0.002393954200670123, -0.16131143271923065, -0.0005235493299551308, -0.000458254711702466, -0.05822758004069328, -0.5893882513046265, -1.9670294523239136, -0.04963954910635948, -0.006229625549167395, -0.08785837143659592, -0.0006873629172332585, -0.11199403554201126], "finish_reason": "length"}], "metrics": {"energy": 304.71339430618286, "energy_per_token": 1.1902866965085268, "time": 11.502489, "time_per_token": 0.04493159765625}}
{"outputs": [{"text": "# Preprocess the texts by removing non-alphanumeric characters, converting to lowercase, and removing stopwords\n    preprocessed_texts = [\n        ALPHANUMERIC.sub(' ', text.lower()).split()\n        for text in texts\n        if any(\n            word not in STOPWORDS\n            for word in ALPHANUMERIC.sub(' ', text.lower()).split()\n        )\n    ]\n\n    # Convert preprocessed text documents into a vector of TF-IDF\n    vectorizer = TfidfVectorizer(stop_words='english')\n    vector = vectorizer.fit_transform(preprocessed_texts)\n\n    # Apply NMF to extract topics\n    nmf = NMF(random_state=0, n_components=num_topics)\n    topic_matrix = nmf.fit_transform(vector)\n\n    # Extract the most significant words for each topic\n    topics = [\n        sorted(\n            (word for word, weight in zip(vectorizer.get_feature_names(), nmf.components_[i])\n", "tokens": ["#", " Pre", "process", " the", " texts", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", ",", " converting", " to", " lower", "case", ",", " and", " removing", " stop", "words", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "\n", "        ", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "split", "()", "\n", "        ", "for", " text", " in", " texts", "\n", "        ", "if", " any", "(", "\n", "            ", "word", " not", " in", " ST", "OP", "W", "OR", "DS", "\n", "            ", "for", " word", " in", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "split", "()", "\n", "        ", ")", "\n", "    ", "]", "\n", "\n", "    ", "#", " Convert", " pre", "processed", " text", " documents", " into", " a", " vector", " of", " TF", "-", "ID", "F", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "vector", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "pre", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Apply", " N", "MF", " to", " extract", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "random", "_", "state", "=", "0", ",", " n", "_", "components", "=", "num", "_", "top", "ics", ")", "\n", "    ", "topic", "_", "matrix", " =", " nm", "f", ".", "fit", "_", "transform", "(", "vector", ")", "\n", "\n", "    ", "#", " Ext", "ract", " the", " most", " significant", " words", " for", " each", " topic", "\n", "    ", "top", "ics", " =", " [", "\n", "        ", "s", "orted", "(", "\n", "            ", "(", "word", " for", " word", ",", " weight", " in", " zip", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()", ",", " nm", "f", ".", "components", "_[", "i", "])", "\n"], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.6037266850471497, -0.5607988238334656, -0.6410573720932007, -2.051952362060547, -0.04719734936952591, -0.04430347681045532, -0.0022286358289420605, -0.009746937081217766, -0.0002503081923350692, -0.0008100565755739808, -0.009365434758365154, -1.4218547344207764, -0.06983551383018494, -0.1532006412744522, -0.0019658540841192007, -0.0074853189289569855, -0.029471157118678093, -0.20978936553001404, -0.047977689653635025, -0.015481180511415005, -0.010062206536531448, -0.14150696992874146, -0.002863238099962473, -1.1308720111846924, -0.02929949015378952, -0.025918705388903618, -0.0123707614839077, -0.002237913431599736, -0.003056499408558011, -0.29846400022506714, -1.4714274406433105, -0.0017394188325852156, -0.1024572104215622, -4.6491513785440475e-06, -6.949660019017756e-05, -2.0861407392658293e-05, -7.629365427419543e-06, -0.00011955977242905647, -0.00025912740966305137, -0.00027843413408845663, -0.023700624704360962, -0.5475782752037048, -0.00173049361910671, -0.26939207315444946, -0.5336432456970215, -0.018704228103160858, -0.03130291774868965, -0.062079429626464844, -1.3494114875793457, -0.02992154471576214, -0.9346259832382202, -0.020693359896540642, -0.002111707115545869, -0.0017904693959280849, -0.002708934945985675, -0.003500764025375247, -0.09889090061187744, -1.0197370052337646, -0.06538523733615875, -0.9341070055961609, -0.10275144875049591, -2.8573484420776367, -0.009806905873119831, -0.17881357669830322, -0.2058493196964264, -1.2755313036905136e-05, -0.017458101734519005, -7.152555099310121e-07, -1.1205610462639015e-05, -1.4305104514278355e-06, -9.417489309271332e-06, -0.19990405440330505, -0.0033094894606620073, -0.03684260696172714, -0.0003800861886702478, -0.003560752607882023, -0.3290605843067169, -1.537788011773955e-05, -2.992108420585282e-05, -0.0006007535266689956, -6.4490144723095e-05, -0.003433406352996826, -0.0002708068350329995, -0.0016033900901675224, -0.0064244880340993404, -0.06614124774932861, -0.00010072677832795307, -0.007635101210325956, -0.10862783342599869, -0.0033105588518083096, -0.011499667540192604, -0.00773222278803587, -0.00275827175937593, -0.04843458533287048, -0.006757976021617651, -0.01790795847773552, -0.0026787372771650553, -0.00595983536913991, -0.00594940735027194, -0.00016306500765495002, -0.0004634975048247725, -0.1119413897395134, -0.00032300499151460826, -0.046282559633255005, -2.1879312992095947, -1.1463770866394043, -0.0033921815920621157, -2.514085292816162, -0.804446280002594, -1.011871576309204, -0.9755485653877258, -1.0140957832336426, -2.7217354774475098, -0.768391489982605, -0.00420365110039711, -0.00023231192608363926, -0.004058815073221922, -1.5132352113723755, -0.00027259447961114347, -0.30889520049095154, -0.0032530506141483784, -0.00039498155820183456, -0.00028761065914295614, -2.145764938177308e-06, -5.066266385256313e-05, -4.410734163684538e-06, -1.490105023549404e-05, -8.940656698541716e-06, -0.7324121594429016, -0.6875103116035461, -0.00014280252798926085, -0.00015436411194968969, -0.11754405498504639, -0.024217616766691208, -5.960462772236497e-07, -0.08224254101514816, -0.00637438427656889, -0.002862524939700961, -0.9062967300415039, -0.788327157497406, -0.0025452144909650087, -0.00012838016846217215, -2.7894584491150454e-05, -0.001527096494100988, -0.0003541081096045673, -0.00010442188795423135, -0.013308149762451649, -0.005210154689848423, -8.034383063204587e-05, -1.0609570381348021e-05, -3.576278118089249e-07, -2.658331868587993e-05, -0.0002915434306487441, -0.009258667938411236, -0.024783417582511902, -0.0004047528200317174, -0.018251217901706696, -1.7701396942138672, -0.04654373973608017, -0.0004032037395518273, -0.3947771191596985, -0.28109845519065857, -0.8258746862411499, -0.1392701417207718, -0.00026925752172246575, -0.3432523012161255, -0.00022659118985757232, -0.01916954666376114, -0.00017188502533826977, -0.00010644822759786621, -0.0006519814487546682, -2.982241153717041, -9.536288416711614e-05, -9.83428253675811e-05, -0.0024730355944484472, -0.6925842761993408, -0.11196664720773697, -0.3684569299221039, -1.1801649634435307e-05, -0.0021786780562251806, -0.0008232779800891876, -0.0044409227557480335, -0.000545472139492631, -0.00037400881410576403, -2.3841830625315197e-06, -0.5063580274581909, -0.019469819962978363, -0.003522027749568224, -1.7688051462173462, -0.0040879026055336, -2.8516621589660645, -0.0011631635716184974, -0.007153612095862627, -5.960446742392378e-06, -7.056941103655845e-05, -0.0052777486853301525, -0.0010640918044373393, -6.4490144723095e-05, -0.00013624693383462727, -0.0024069168139249086, -0.4161739945411682, -0.06494205445051193, -0.08544328063726425, -0.00021944021864328533, -0.09629124402999878, -0.658609926700592, -0.002461025258526206, -0.6870512962341309, -0.3220360577106476, -0.12775981426239014, -0.03580109402537346, -0.18588882684707642, -0.0056923432275652885, -0.011627876199781895, -0.3035932183265686, -0.0002914242504630238, -0.6406372785568237, -0.35149186849594116, -0.014414702542126179, -0.6490630507469177, -0.0832856222987175, -0.0005670370301231742, -0.7770894765853882, -3.373566141817719e-05, -0.08629725873470306, -0.4621231257915497, -0.0015945826889947057, -2.767366409301758, -0.8805869221687317, -0.3092270791530609, -0.0914691686630249, -0.17688670754432678, -0.5880492329597473, -0.001013718661852181, -0.14532366394996643, -0.00402675848454237, -0.15906605124473572, -0.00035375059815123677, -2.074220174108632e-05, -0.0079306960105896, -7.271740287251305e-06, -0.0005617947317659855, 0.0, -0.0005206898204050958, -0.7033966779708862, -0.0007192885386757553, -2.70611572265625, -0.0056341420859098434, -0.008089043200016022, -0.011589226312935352, -0.008844959549605846, -0.38258668780326843, -0.08239009976387024, -1.2384121417999268], "finish_reason": "length"}], "metrics": {"energy": 298.66928447628015, "energy_per_token": 1.1666768924854694, "time": 11.503389, "time_per_token": 0.04493511328125}}
{"outputs": [{"text": "stopwords_set = set(STOPWORDS)\n    processed_texts = [ALPHANUMERIC.sub(' ', text.lower()).strip()\n                       for text in texts\n                       if text.lower() not in stopwords_set]\n    vectorizer = TfidfVectorizer(tokenizer=lambda s: s.split(), stop_words='word')\n    vectors = vectorizer.fit_transform(processed_texts)\n\n    nmf = NMF(n_components=num_topics, init='random', random_state=0,\n              max_iter=2000, random_state=0, verbose=False,\n              n_init=10, init_params='auto').fit(vectors)\n    topics = [nltk.word_tokenize(\n        \" \".join(vector.toarray().argpartition(0, num_topics)[0][:num_topics]).split())\n        for vector in nmf.components_]\n    return topics", "tokens": ["stop", "words", "_", "set", " =", " set", "(", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "strip", "()", "\n", "                ", "       ", "for", " text", " in", " texts", "\n", "                ", "       ", "if", " text", ".", "lower", "()", " not", " in", " stop", "words", "_", "set", "]", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "token", "izer", "=", "lambda", " s", ":", " s", ".", "split", "()", ",", " stop", "_", "words", "='", "word", "')", "\n", "    ", "vectors", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "processed", "_", "text", "s", ")", "\n", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " init", "='", "random", "'", ",", " random", "_", "state", "=", "0", ",", "\n", "              ", "max", "_", "iter", "=", "2", "0", "0", "0", ",", " random", "_", "state", "=", "0", ",", " verbose", "=", "False", ",", "\n", "              ", "n", "_", "init", "=", "1", "0", ",", " init", "_", "params", "='", "auto", "')", ".", "fit", "(", "vectors", ")", "\n", "    ", "top", "ics", " =", " [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "\n", "        ", "\"", " \"", ".", "join", "(", "vector", ".", "to", "array", "()", ".", "arg", "partition", "(", "0", ",", " num", "_", "top", "ics", ")[", "0", "][", ":", "num", "_", "top", "ics", "])", ".", "split", "())", "\n", "        ", "for", " vector", " in", " nm", "f", ".", "components", "_", "]", "\n", "    ", "return", " topics", "\n", "\n", "#"], "logprobs": [-3.0740983486175537, -0.8664778470993042, -0.8922805786132812, -0.535770058631897, -0.0034050126560032368, -0.10208386927843094, -0.003435782389715314, -0.025977015495300293, -3.3378546504536644e-06, -2.5987286790041253e-05, -1.5616295058862306e-05, -6.079655122448457e-06, -0.004848271608352661, -0.021653080359101295, -0.5555847883224487, -1.7618316411972046, -0.02474759891629219, -0.1054438129067421, -0.011648142710328102, -0.0063780564814805984, -0.6869131922721863, -0.5073208212852478, -7.986990567587782e-06, -0.0001731960946926847, -5.149708886165172e-05, -1.3589766240329482e-05, -9.7508447652217e-05, -0.0004451475979294628, -0.0004101150552742183, -0.03811038285493851, -0.2266160398721695, -0.003790932474657893, -0.4524681270122528, -0.45928725600242615, -0.009299533441662788, -0.03806884214282036, -0.1487029492855072, -0.6684449911117554, -0.016314569860696793, -2.5376193523406982, -0.09772614389657974, -0.14425791800022125, -0.11969321966171265, -0.005925351288169622, -0.0017769037513062358, -0.0023401989601552486, -0.7090433239936829, -0.0008058876264840364, -0.014400014653801918, -0.05857313051819801, -1.2172757387161255, -0.7741449475288391, -0.2209913730621338, -0.00017534149810671806, -0.15992729365825653, -1.6689160474925302e-05, -0.02769877016544342, -3.93382906622719e-05, -0.0003121604095213115, -8.702239938429557e-06, -0.1443764716386795, -0.0059571098536252975, -0.7467368841171265, -0.3478975296020508, -0.014669417403638363, -0.001482222112827003, -0.0006180283380672336, -2.9802276912960224e-06, -1.7762025890988298e-05, -6.079655122448457e-06, -1.3708974620385561e-05, -1.0371154530730564e-05, -0.4760046899318695, -3.3813223838806152, -0.5042637586593628, -0.008162709884345531, -0.1499667465686798, -1.7914385795593262, -0.0016196954529732466, -0.10082023590803146, -0.0031502642668783665, -0.019420014694333076, -0.6849005818367004, -0.003091201651841402, -0.9189650416374207, -3.2186455882765586e-06, -0.00020740265608765185, -0.474237859249115, -2.0104942321777344, -0.2655603289604187, -0.006879572290927172, -0.01639079861342907, -2.825239658355713, -0.012091551907360554, -0.012914235703647137, -0.00012861855793744326, -5.638440416078083e-05, -0.005265653133392334, -0.0005103239673189819, -0.00019453064305707812, -0.013099093921482563, -0.0039597926661372185, -6.794906312279636e-06, -9.536738616588991e-07, -1.0847986231965479e-05, -0.0007124984404072165, -0.04481642320752144, -1.3358337879180908, -0.000686767278239131, -0.6390483975410461, -0.0007347744540311396, -0.03160210698843002, -0.0005310555570758879, -9.30981186684221e-05, -0.0021912867669016123, -0.7319340109825134, -1.0609570381348021e-05, -0.0013224674621596932, -0.004018091131001711, -0.004122094251215458, -0.0006784282741136849, -0.0004885195521637797, -4.529942543740617e-06, -0.1806749552488327, -1.1932445764541626, -0.048544857650995255, -0.06998535990715027, -0.09018539637327194, -0.0001991788885788992, -0.10664837062358856, -4.1126360883936286e-05, -5.531158240046352e-05, -0.0007165487040765584, -0.7743087410926819, -0.5720250606536865, -1.5164802074432373, -0.06548795849084854, -0.662129282951355, -0.0007491880678571761, -0.0011735226726159453, -0.006701968144625425, -0.7507324814796448, -0.02092161402106285, -0.0338536873459816, -0.39467644691467285, -0.15403415262699127, -2.7402472496032715, -0.004768784623593092, -0.030832229182124138, -0.0019002966582775116, -0.2891457974910736, -0.44494205713272095, -2.6805901527404785, -0.0009808497270569205, -0.9955868124961853, -1.3682187795639038, -1.421369194984436, -0.0008756855386309326, -2.917178153991699, -0.03708098828792572, -0.2301691323518753, -0.008317001163959503, -0.41116318106651306, -0.6823491454124451, -0.2285550981760025, -3.0247981548309326, -0.04976125806570053, -0.08082558959722519, -0.08055968582630157, -0.34116238355636597, -1.3182485103607178, -2.257507801055908, -0.00041869457345455885, -0.032305147498846054, -0.001004906021989882, -0.04711831733584404, -0.011325947009027004, -1.0269063711166382, -1.564537525177002, -0.26069748401641846, -0.035153456032276154, -0.5359212160110474, -3.42549991607666, -0.0009943069890141487, -0.0005015069036744535, -0.3088796138763428, -0.04106602817773819, -0.13211247324943542, -0.0017382287187501788, -0.15944625437259674, -2.7738726139068604, -0.0983404591679573, -1.8005695343017578, -0.017438653856515884, -0.0020486575085669756, -0.00023719835735391825, -0.1022844910621643, -2.1803722381591797, -1.0697052478790283, -0.21392397582530975, -0.7773303985595703, -0.04790008068084717, -0.009179767221212387, -1.628035545349121, -0.4179631769657135, -0.017021285369992256, -0.9923215508460999, -0.7413387894630432, -0.8414567708969116, -0.0013952055014669895, -0.002995292190462351, -7.748573807475623e-06, -0.5868555903434753, -0.1721637099981308, -1.5529365539550781, -0.34145718812942505, -0.04036088287830353, -0.0006697318749502301, -0.0005638201837427914, -1.5497195136049413e-06, -1.9340269565582275, -1.0205117464065552, -1.2093768119812012, -0.2921940088272095, -0.16751712560653687, -0.16912394762039185, -0.0032548329327255487, -0.03835626319050789, -0.003232731716707349, -0.38665732741355896, -0.00035065223346464336, -0.0032917859498411417, -0.017442520707845688, -0.007044715341180563, -0.1348712146282196, -0.011020507663488388, -0.5415182113647461, -0.1044810563325882, -0.031137801706790924, -0.8358339667320251, -0.018173256888985634, -2.2156553268432617], "finish_reason": "stop"}], "metrics": {"energy": 241.80220526885972, "energy_per_token": 0.9991826664002468, "time": 10.676689, "time_per_token": 0.044118549586776856}}
{"outputs": [{"text": "# Preprocess texts: remove non-alphanumeric characters (excluding spaces), convert to lowercase,\n    # and remove stopwords\n    cleaned_texts = [ALPHANUMERIC.sub(' ', text.lower()).strip()\n                     for text in texts]\n    cleaned_texts = [word for word in cleaned_texts if word not in STOPWORDS]\n\n    # Vectorize processed texts using TF-IDF\n    tf_idf = TfidfVectorizer()\n    tf_idf.fit(cleaned_texts)\n    documents = [tf_idf.transform([text]) for text in cleaned_texts]\n\n    # Apply NMF using num_topics topics\n    nmf = NMF(n_components=num_topics, init='random', random_state=42)\n    nmf.fit(documents)\n\n    # Extract the most significant words for each topic\n    topics = [[tf_idf.get_feature_names()[i] for i in range(len(component_weights)) if component_weights[i]", "tokens": ["#", " Pre", "process", " texts", ":", " remove", " non", "-", "al", "phan", "umeric", " characters", " (", "ex", "cluding", " spaces", ")", ",", " convert", " to", " lower", "case", ",", "\n", "    ", "#", " and", " remove", " stop", "words", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "strip", "()", "\n", "                ", "     ", "for", " text", " in", " texts", "]", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "word", " for", " word", " in", " cleaned", "_", "text", "s", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Vector", "ize", " processed", " texts", " using", " TF", "-", "ID", "F", "\n", "    ", "tf", "_", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "_", "id", "f", ".", "fit", "(", "cleaned", "_", "text", "s", ")", "\n", "    ", "doc", "uments", " =", " [", "tf", "_", "id", "f", ".", "transform", "([", "text", "])", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Apply", " N", "MF", " using", " num", "_", "top", "ics", " topics", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " init", "='", "random", "'", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "doc", "uments", ")", "\n", "\n", "    ", "#", " Ext", "ract", " the", " most", " significant", " words", " for", " each", " topic", "\n", "    ", "top", "ics", " =", " [[", "tf", "_", "id", "f", ".", "get", "_", "feature", "_", "names", "()[", "i", "]", " for", " i", " in", " range", "(", "len", "(", "component", "_", "weights", "))", " if", " component", "_", "weights", "[", "i", "]"], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.6037266850471497, -1.4159719944000244, -2.7181036472320557, -0.7749285697937012, -0.09140998870134354, -0.009908892214298248, -0.03092111460864544, -0.0010832638945430517, -0.00331578659825027, -0.08965074270963669, -1.48856520652771, -0.14548785984516144, -0.002351972972974181, -0.025604909285902977, -0.002120034070685506, -0.2256135642528534, -0.24797329306602478, -0.22782181203365326, -0.003084665397182107, -0.008029562421143055, -0.07002203911542892, -1.9276611804962158, -0.0010457528987899423, -0.0012292455649003386, -0.7219370603561401, -0.02713925763964653, -0.016357257962226868, -0.012910470366477966, -0.3751205503940582, -0.004980063997209072, -3.8331856727600098, -0.014651326462626457, -0.0419277586042881, -0.0031967272516340017, -0.005432604346424341, -0.327029824256897, -0.4066241979598999, -4.887569048150908e-06, -6.532455881824717e-05, -0.00011991735664196312, -9.298280929215252e-06, -0.00017975145601667464, -0.00020466140995267779, -0.000310730334604159, -0.03863787278532982, -0.5175777077674866, -0.005470425356179476, -0.3117770254611969, -0.5493850708007812, -0.018985925242304802, -0.033004578202962875, -0.34206339716911316, -0.7280252575874329, -0.009479510597884655, -2.60752010345459, -0.09617658704519272, -0.3558107614517212, -0.013354967348277569, -0.002688248408958316, -0.0009734659106470644, -0.0019412260735407472, -1.4159183502197266, -0.003915027249604464, -0.3502614498138428, -0.43122318387031555, -0.0004984090337529778, -0.0180338267236948, -0.000589792791288346, -0.029621733352541924, -0.03177453577518463, -1.0468924045562744, -0.16664361953735352, -0.7021865844726562, -0.001320562674663961, -0.19112242758274078, -0.0006576997111551464, -0.00018559163436293602, -1.3232143828645349e-05, -0.059707775712013245, -0.06533375382423401, -0.17071926593780518, -0.000120751719805412, -0.0031105726957321167, -1.4305104514278355e-06, -2.539125671319198e-05, -1.6689286894688848e-06, -8.34461570775602e-06, -0.013913308270275593, -0.0031322012655436993, -0.09678232669830322, -0.0003649522550404072, -0.022671550512313843, -0.2868839204311371, -0.013747883960604668, -2.993015766143799, -0.09358733892440796, -0.6609499454498291, -0.07018063217401505, -0.0032794286962598562, -9.023735765367746e-05, -5.566918844124302e-05, -0.2346845418214798, -0.00016675988445058465, -2.206594705581665, -1.7297508716583252, -0.28097254037857056, -0.00019965562387369573, -0.4114028215408325, -0.0010793342953547835, -2.3841830625315197e-06, -0.0002708068350329995, -3.2186455882765586e-06, -1.9788545614574105e-05, -9.179073458653875e-06, -0.7085540294647217, -0.34955766797065735, -0.002450560452416539, -0.7315830588340759, -0.24440011382102966, -0.014800391159951687, -0.0013111574808135629, -1.827208161354065, -0.005791313014924526, -0.1290837675333023, -0.0008596062543801963, -2.0265558760002023e-06, -8.344646857949556e-07, -1.0728830375228426e-06, -0.0002506657037883997, -0.010766984894871712, -0.07059961557388306, -2.6859498023986816, -1.1910717487335205, -0.06987208873033524, -1.3596426248550415, -0.037698108702898026, -0.00036900385748595, -1.4066597032069694e-05, -4.768370445162873e-07, -4.9232225137529895e-05, -0.03872033208608627, -0.05149013549089432, -0.2922615706920624, -0.045872390270233154, -0.2944314181804657, -0.0003833036171272397, -0.0004354958946350962, -0.06262432783842087, -0.0003906917118001729, 0.0, -2.3841855067985307e-07, -0.00044943721150048077, -0.0011845960980281234, -0.04474860057234764, -0.00039319414645433426, -0.027830250561237335, -0.7877891659736633, -0.015665212646126747, -0.00031382881570607424, -2.793295383453369, -1.7052958011627197, -0.0037728811148554087, -0.011639423668384552, -0.0008625839254818857, -2.30338716506958, -0.106059730052948, -0.0002474478678777814, -0.1339922696352005, -0.0001995364436879754, -0.020169051364064217, -0.00020037073409184813, -8.21318244561553e-05, -0.0017440598458051682, -0.7151877284049988, -5.006777428206988e-06, -0.004183826502412558, -0.007456566672772169, -0.0017933252966031432, -0.0002849888114724308, -0.00017081231635529548, -2.3841855067985307e-07, -0.2778342366218567, -1.2835897207260132, -0.09035814553499222, -0.06741456687450409, -0.11099275946617126, -3.9934315282152966e-05, -0.08810421824455261, -8.106198947643861e-06, -3.111314072157256e-05, -0.0005906267906539142, -0.6543625593185425, -0.018013805150985718, -0.20447860658168793, -0.014544887468218803, -0.004850288387387991, -0.19261205196380615, -0.00029130507027730346, -0.028716547414660454, -0.0002892790944315493, -0.03028406761586666, -0.010205467231571674, -1.1920922133867862e-06, -0.003398240776732564, -0.005002601072192192, -0.15922190248966217, -0.0002517383254598826, -0.09286592155694962, -0.37079963088035583, -0.002354946220293641, -1.6365965604782104, -0.7054238319396973, -0.1563512086868286, -0.07029275596141815, -0.25690507888793945, -0.010161925107240677, -0.031066618859767914, -0.3500659167766571, -0.00022480344341602176, -0.7068564891815186, -0.21134643256664276, -0.012724518775939941, -2.0241644382476807, -0.8560539484024048, -0.0024082250893115997, -3.576272320060525e-06, -3.2186455882765586e-06, -0.0005839549703523517, -0.18220536410808563, -2.6940935640595853e-05, -0.0011138670379295945, -5.960462772236497e-07, -0.003140163142234087, -0.46752721071243286, -0.6008334755897522, -0.010676054283976555, -0.41564255952835083, -0.006103566847741604, -0.1285775899887085, -1.1502114534378052, -0.0008158930577337742, -1.082949161529541, -0.0012306743301451206, -3.5913374423980713, -0.7879955172538757, -0.3650132119655609, -0.025885483250021935, -1.472636342048645, -0.07259900867938995, -0.0003700763627421111, -0.005267313215881586, -0.0011968599865213037, -0.0009098681039176881, -0.002318315440788865], "finish_reason": "length"}], "metrics": {"energy": 264.70977523422255, "energy_per_token": 1.0340225595086818, "time": 11.359958, "time_per_token": 0.0443748359375}}
{"outputs": [{"text": "stop_words = set(STOPWORDS)\n\n    texts = [ALPHANUMERIC.sub(' ', doc).lower().split() for doc in texts]\n    texts = [[' '.join([word for word in doc if word not in stop_words]) for doc in texts]\n             for doc in texts]\n\n    vectorizer = TfidfVectorizer(stop_words=STOPWORDS, token_pattern='[^\\s]+')\n    tfidf = vectorizer.fit_transform(texts)\n\n    nmf = NMF(n_components=num_topics, init='random', random_state=42)\n    nmf.fit(tfidf)\n\n    topics = [vectorizer.inverse_transform(nmf.components_[i]).tolist()\n             for i in range(num_topics)]\n\n    return topics", "tokens": ["stop", "_", "words", " =", " set", "(", "ST", "OP", "W", "OR", "DS", ")", "\n", "\n", "    ", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " doc", ")", ".", "lower", "()", ".", "split", "()", " for", " doc", " in", " texts", "]", "\n", "    ", "text", "s", " =", " [", "['", " '", ".", "join", "([", "word", " for", " word", " in", " doc", " if", " word", " not", " in", " stop", "_", "words", "])", " for", " doc", " in", " texts", "]", "\n", "             ", "for", " doc", " in", " texts", "]", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ",", " token", "_", "pattern", "='", "[", "^\\", "s", "]+", "')", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " init", "='", "random", "'", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "tf", "id", "f", ")", "\n", "\n", "    ", "top", "ics", " =", " [", "vector", "izer", ".", "inverse", "_", "transform", "(", "nm", "f", ".", "components", "_[", "i", "])", ".", "tol", "ist", "()", "\n", "             ", "for", " i", " in", " range", "(", "num", "_", "top", "ics", ")]", "\n", "\n", "    ", "return", " topics", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.0740983486175537, -0.9765967130661011, -0.15086498856544495, -0.13800469040870667, -0.6448119878768921, -0.004516282118856907, -0.016394082456827164, -2.861018856492592e-06, -8.487341256113723e-05, -1.0967194612021558e-05, -6.794906312279636e-06, -0.007474078331142664, -0.023025760427117348, -1.1454516649246216, -0.0007312007946893573, -3.1645522117614746, -0.06405375897884369, -0.27228641510009766, -0.14919351041316986, -0.4151240885257721, -7.986990567587782e-06, -0.00013696208770852536, -6.05564855504781e-05, -8.34461570775602e-06, -6.8662193370983e-05, -0.0002653246629051864, -0.0003567297535482794, -0.032154280692338943, -0.30223989486694336, -0.004746123682707548, -2.3755626678466797, -0.4173485338687897, -0.026160286739468575, -0.045710690319538116, -0.000982278841547668, -0.5196923017501831, -0.5022220015525818, -0.03275391459465027, -0.07207483053207397, -0.0002637753786984831, -0.00016723664884921163, -0.0011026738211512566, -0.016551680862903595, -0.011182964779436588, -0.16085632145404816, -1.0656406879425049, -0.0027498311828821898, -0.016569621860980988, -0.7344486117362976, -3.549848794937134, -0.5195279717445374, -0.010449931025505066, -0.00021169328829273582, -1.590433120727539, -0.360114723443985, -0.010299036279320717, -0.000653530121780932, -0.0005838358192704618, -0.38096287846565247, -0.010081443004310131, -0.047199852764606476, -0.05369008332490921, -2.396077979938127e-05, -0.008127355016767979, -0.0001264730526600033, -2.90866428258596e-05, -0.11395200341939926, -0.3060111403465271, -0.0026022878009825945, -0.00018499570433050394, -0.12351490557193756, -0.8728201985359192, -2.099506378173828, -1.4993760585784912, -0.039377354085445404, -0.06377429515123367, -0.00040987672400660813, -0.05785772204399109, -0.030084198340773582, -0.010781136341392994, -0.2868463397026062, -0.0002208704245276749, -0.5175999402999878, -0.006391559727489948, -0.0008744944934733212, -0.0005989664932712913, -2.622600959512056e-06, -5.0424259825376794e-05, -3.6954811548639555e-06, -1.4424220353248529e-05, -7.152531907195225e-06, -0.3491188585758209, -0.9220795035362244, -0.000164018536452204, -0.0003228858404327184, -1.0742589235305786, -0.34400901198387146, -1.5497195136049413e-06, -0.0005417786305770278, -6.568216485902667e-05, -1.3828182090946939e-05, -1.8144875764846802, -1.7442901134490967, -0.2385963797569275, -0.025724118575453758, -0.44180142879486084, -0.16096116602420807, -0.45754438638687134, -1.9080495834350586, -0.06891361624002457, -0.08662668615579605, -0.003803164465352893, -0.027411745861172676, -1.548827886581421, -0.13954639434814453, -0.002350783674046397, -0.4148285686969757, -0.0027014450170099735, -3.6000557884108275e-05, -4.827859811484814e-05, -0.0010624246206134558, -0.0038713286630809307, -9.691245941212401e-05, -0.00627156300470233, -0.00177714170422405, -0.00012540031457319856, -0.0005989664932712913, -0.015696194022893906, -0.38566166162490845, -0.00016532962035853416, -0.5042212605476379, -0.0003483880718704313, -0.008230932056903839, -0.00037853704998269677, -8.451581379631534e-05, -0.001110890181735158, -0.8255190849304199, -5.364403477869928e-06, -0.0019550274591892958, -0.0029623694717884064, -0.0036526883486658335, -0.00039176418795250356, -0.0005523824947886169, -1.9073468138230965e-06, -0.16835542023181915, -1.601028561592102, -0.05639900639653206, -0.079414002597332, -0.056220632046461105, -4.7801782784517854e-05, -0.06687016040086746, -1.811964830267243e-05, -3.349725011503324e-05, -0.0006214833119884133, -0.815892219543457, -0.01575862430036068, -0.4908590018749237, -0.013192038983106613, -0.021709773689508438, -1.2739418745040894, -0.00037353215157054365, -0.046520981937646866, -0.000474936212413013, -0.5439170598983765, -0.00037317464011721313, -5.483612312673358e-06, -1.1920928244535389e-07, -0.012001684866845608, -0.0042037698440253735, -0.10812435299158096, -0.0001456631434848532, -0.7644662261009216, -0.11143381148576736, -0.01585085317492485, -0.4075785279273987, -1.5534133911132812, -0.00959829706698656, -0.00041976699139922857, -1.843921184539795, -1.1920928244535389e-07, -0.000553335587028414, -0.06781064718961716, -0.5974584221839905, -6.23445157543756e-05, -0.000720956246368587, -0.047752346843481064, -0.3120374083518982, -0.11412005126476288, -0.2286425530910492, -1.5445067882537842, -1.0905998945236206, -5.960446742392378e-06, -0.8309447765350342, -0.6191583871841431, -0.9311060905456543, -0.002330684568732977, -0.00020323118951637298, -0.005189282353967428, -0.0019829864613711834, -0.0001839230244513601, -0.4343201816082001, -0.00032693761750124395, -1.2397689715726301e-05, -4.768370445162873e-07, -0.010881843976676464, -0.0036201435141265392, -0.20582613348960876, -0.00044216870446689427, -0.049949295818805695, -0.022832708433270454, -0.9631202816963196, -2.0265558760002023e-06, -1.311301275563892e-06, -1.4185804502631072e-05, -0.0002240883477497846, -0.055868182331323624], "finish_reason": "stop"}], "metrics": {"energy": 227.1193634815216, "energy_per_token": 1.051478534636674, "time": 9.684814, "time_per_token": 0.04483710185185185}}
{"outputs": [{"text": "# Preprocess the text documents\n    # Remove non-alphanumeric characters except spaces\n    processed_texts = [ALPHANUMERIC.sub(' ', doc.lower()).strip() for doc in texts]\n    # Remove stopwords\n    stopped_processed_texts = [word for doc in processed_texts for word in doc.split() if word not in STOPWORDS]\n    # Convert to a list of lists of words\n    processed_docs = [doc.split() for doc in stopped_processed_texts]\n\n    # Vectorize the processed documents\n    tfidf = TfidfVectorizer(stop_words='english', token_pattern='[^\\W\\d_]')\n    documents = tfidf.fit_transform(processed_docs)\n\n    # Perform NMF\n    nmf = NMF(n_components=num_topics, random_state=0)\n    nmf.fit(documents)\n\n    # Extract the top words for each topic\n    top_words = [sorted(tfidf.get_feature_names_out()[", "tokens": ["#", " Pre", "process", " the", " text", " documents", "\n", "    ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " except", " spaces", "\n", "    ", "processed", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " doc", ".", "lower", "())", ".", "strip", "()", " for", " doc", " in", " texts", "]", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "stop", "ped", "_", "processed", "_", "text", "s", " =", " [", "word", " for", " doc", " in", " processed", "_", "text", "s", " for", " word", " in", " doc", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "#", " Convert", " to", " a", " list", " of", " lists", " of", " words", "\n", "    ", "processed", "_", "docs", " =", " [", "doc", ".", "split", "()", " for", " doc", " in", " stopped", "_", "processed", "_", "text", "s", "]", "\n", "\n", "    ", "#", " Vector", "ize", " the", " processed", " documents", "\n", "    ", "tf", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "'", ",", " token", "_", "pattern", "='", "[", "^\\", "W", "\\", "d", "_", "]", "')", "\n", "    ", "doc", "uments", " =", " tf", "id", "f", ".", "fit", "_", "transform", "(", "processed", "_", "docs", ")", "\n", "\n", "    ", "#", " Perform", " N", "MF", "\n", "    ", "nm", "f", " =", " N", "MF", "(", "n", "_", "components", "=", "num", "_", "top", "ics", ",", " random", "_", "state", "=", "0", ")", "\n", "    ", "nm", "f", ".", "fit", "(", "doc", "uments", ")", "\n", "\n", "    ", "#", " Ext", "ract", " the", " top", " words", " for", " each", " topic", "\n", "    ", "top", "_", "words", " =", " [", "s", "orted", "(", "tf", "id", "f", ".", "get", "_", "feature", "_", "names", "_", "out", "()["], "logprobs": [-0.6158158183097839, -0.7406244277954102, -0.6037266850471497, -0.5607988238334656, -2.009856700897217, -0.9682960510253906, -0.30828842520713806, -0.003445286303758621, -3.687289237976074, -1.0673905611038208, -0.08642847090959549, -0.0060469298623502254, -0.02078641951084137, -0.0004980515805073082, -0.001290918211452663, -0.013460591435432434, -3.493131399154663, -0.7950766086578369, -0.4015708267688751, -0.001764646964147687, -1.6951768398284912, -0.011136752553284168, -0.09152323752641678, -0.00516805425286293, -0.003509911010041833, -0.10463631898164749, -0.048831671476364136, -4.887569048150908e-06, -0.00021526881027966738, -5.340433563105762e-05, -1.4305012882687151e-05, -0.00015579440514557064, -0.00027021096320822835, -0.00026806574896909297, -0.028859592974185944, -0.23161207139492035, -0.0024624522775411606, -1.4264655113220215, -1.1261049509048462, -0.02915199100971222, -0.04909763112664223, -0.629299521446228, -0.46000340580940247, -0.0038180090487003326, -0.13366837799549103, -9.870042413240299e-05, -7.080780778778717e-05, -0.0010145523119717836, -0.014351483434438705, -0.00035529976594261825, -0.21716094017028809, -0.01848330721259117, -0.02362215705215931, -0.03868890926241875, -0.021760281175374985, -0.11936435103416443, -0.0003026265767402947, -2.8775651454925537, -0.8614012598991394, -0.07943745702505112, -1.7271342277526855, -0.026891181245446205, -0.010558339767158031, -0.002831975230947137, -0.0008470999309793115, -0.030422495678067207, -0.3403366506099701, -0.05694160237908363, -0.48028242588043213, -0.0004109491710551083, -0.00177714170422405, -6.067568756407127e-05, -2.861018856492592e-06, -2.253030106658116e-05, -0.0730423554778099, -0.0016896746819838881, -0.0007626485894434154, -0.11465369910001755, -0.000771820661611855, -0.0033001031260937452, -0.05294698104262352, -0.02781030908226967, -0.06107712164521217, -0.0477943941950798, -9.047575440490618e-05, -0.005158092360943556, -2.0265558760002023e-06, -3.2782016205601394e-05, -3.099436753473128e-06, -1.07287787614041e-05, -0.0034319807309657335, -0.00045277358731254935, -0.14426399767398834, -0.06550035625696182, -1.8568458557128906, -0.7848095297813416, -1.4532623291015625, -1.0447930097579956, -0.012084838934242725, -1.8050761222839355, -0.5419859886169434, -0.20249837636947632, -0.34226709604263306, -0.0005720409681089222, -1.7579646110534668, -0.008513584733009338, -2.7038302421569824, -0.0495469830930233, -0.43701428174972534, -0.36832574009895325, -0.00443985452875495, -0.03270326554775238, -0.011317460797727108, -0.0011297041783109307, -0.0006625840906053782, -3.1709168979432434e-05, -0.017584610730409622, -2.3841855067985307e-07, -1.645074735279195e-05, -7.510157047363464e-06, -5.960462772236497e-07, -5.960462772236497e-07, -0.017852570861577988, -0.000546425289940089, -0.3215921223163605, -0.0004078510100953281, -0.02893533557653427, -0.5775037407875061, -0.015438219532370567, -0.10970263183116913, -0.7752196192741394, -0.8160669207572937, -0.515073835849762, -0.000300600629998371, -1.3468796014785767, -0.19824497401714325, -0.0010152667528018355, -0.444989949464798, -0.0008010039455257356, -2.145764938177308e-06, -0.0001935771433636546, -4.768370445162873e-07, -2.9444261599564925e-05, -8.106198947643861e-06, -0.8487696647644043, -0.9313372373580933, -0.0009782296838238835, -0.00034254882484674454, -0.1033540815114975, -0.008236134424805641, -3.576278118089249e-07, -2.6683154106140137, -0.000894146622158587, -1.411644458770752, -0.17102865874767303, -0.0448034293949604, -0.5323266386985779, -0.5289012789726257, -0.5865856409072876, -0.1353464126586914, -0.1270611733198166, -0.005319725722074509, -0.11688564717769623, -1.3259562253952026, -0.2215212732553482, -0.09892037510871887, -0.0031474120914936066, -3.5183916091918945, -1.462392807006836, -0.06173710897564888, -0.05361495167016983, -5.364403477869928e-06, -1.1920928244535389e-07, -3.7431014789035544e-05, -0.0046666283160448074, -0.000715714821126312, -0.00013136000779923052, -0.0035200081765651703, -0.010242990218102932, -8.821448318485636e-06, -0.0018598416354507208, -0.00033158526639454067, -0.04602643847465515, -0.044788382947444916, -0.0005525015876628458, -0.023911667987704277, -1.174099326133728, -0.23340235650539398, -0.00047565114800818264, -1.0086039304733276, -0.00021610308613162488, -0.21184106171131134, -0.0003438596613705158, -0.011192748323082924, -0.00020394629973452538, -8.320462075062096e-05, -0.0019357530400156975, -0.6156866550445557, -4.529942543740617e-06, -0.0008632985409349203, -0.0037899825256317854, -0.003643305040895939, -0.0003798478574026376, -0.0004217927053105086, -1.6689286894688848e-06, -0.17976756393909454, -0.39386144280433655, -3.3378546504536644e-06, -0.0004583738627843559, -0.0006762839620932937, -0.8760759830474854, -0.6311547756195068, -0.021632548421621323, -0.004796783905476332, -0.5274769067764282, -0.00041392818093299866, -0.09022755175828934, -0.0004120216181036085, -0.24344849586486816, -0.00360802817158401, -6.6756979322235566e-06, -0.011481637135148048, -0.007813485339283943, -0.10942314565181732, -0.0003672163875307888, -0.05190117657184601, -0.5673559308052063, -0.00257862638682127, -0.6795805096626282, -2.0050768852233887, -0.25917452573776245, -0.23431463539600372, -0.007356223184615374, -0.05587077513337135, -0.08445843309164047, -0.0002516191452741623, -0.4013952910900116, -0.3804187476634979, -0.02407250925898552, -0.2008567601442337, -0.30903881788253784, -0.20854519307613373, -6.12716976320371e-05, -0.3352907598018646, -0.9539481401443481, -0.004716936498880386, -0.00011038171214750037, -0.000432278640801087, -0.23086011409759521, -1.9192511899746023e-05, -0.0004621868138201535, -3.576278118089249e-07, -0.0017516759689897299, -0.8202437162399292, -0.0008447177824564278, -0.14243733882904053], "finish_reason": "length"}], "metrics": {"energy": 261.35152056694017, "energy_per_token": 1.02090437721461, "time": 11.354012, "time_per_token": 0.044351609375}}
