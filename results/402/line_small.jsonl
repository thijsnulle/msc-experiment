{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.023255346342921257, -6.770858453819528e-05, -0.00315038301050663, -0.000735608336981386, -0.015050193294882774, -1.585470999998506e-05, -0.00010466027742950246, -0.02326466329395771, -0.05425063520669937], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -0.4007616639137268], "finish_reason": "stop"}, {"text": " re.findall(pattern, data['data'])", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " data", "['", "data", "'])", "\n"], "logprobs": [-2.566640615463257, -8.83301836438477e-05, -0.02039695903658867, -0.014293784275650978, -0.0021313349716365337, -0.028551701456308365, -0.0008092227508313954, -0.3287723958492279, -0.2850584089756012, -0.005226875655353069, -0.03090955689549446, -0.03179451450705528], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.005702062509953976, -0.25336483120918274, -0.23203535377979279, -0.004748377948999405, -0.0013860390754416585, -0.005275139585137367, -0.0019208805169910192, -0.0003333727945573628, -0.00217475276440382, -0.10013756155967712, -0.03419209271669388, -0.31409767270088196, -0.0021569100208580494, -0.13766402006149292, -0.0005604841862805188, -0.17884667217731476, -0.00013982271775603294, -0.0006337541271932423, -0.70468670129776, -0.004514620639383793, -0.005314270965754986], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002817710628733039, -2.586808113846928e-05, -2.3245540432981215e-05, -0.001117082079872489, -3.099393507000059e-05, -0.0003359945258125663, -0.02020304836332798, -0.0008374521275982261], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005485698929987848, -0.512572705745697, -0.01804506592452526, -0.014078469015657902, -0.0001227780303452164, -2.062299427052494e-05, -0.034496527165174484, -0.034393563866615295], "finish_reason": "stop"}, {"text": " os.path.join(os.getcwd(), 'matched_data.csv')", "tokens": [" os", ".", "path", ".", "join", "(", "os", ".", "get", "c", "wd", "()", ",", " '", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.5053408145904541, -6.246371776796877e-05, -0.07051318883895874, -0.0045033469796180725, -1.9473825693130493, -0.0405002124607563, -0.06168454512953758, -0.0013254437362775207, -0.7323637008666992, -0.0012007892364636064, -3.814689989667386e-06, -0.0014761515194550157, -0.005503502674400806, -0.1961107850074768, -0.02896231785416603, -0.0007833749405108392, -0.0002317160106031224, -0.0017333496361970901, -0.00018821375851985067, -0.0005995621904730797, -0.7687425017356873], "finish_reason": "stop"}], "metrics": {"energy": 147.49023500633237, "energy_per_token": 1.6760253977992314, "time": 6.092597, "time_per_token": 0.06923405681818182}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -0.4007616639137268], "finish_reason": "stop"}, {"text": " [x for x in data['data'] if re.match(pattern, x)]", "tokens": [" [", "x", " for", " x", " in", " data", "['", "data", "']", " if", " re", ".", "match", "(", "pattern", ",", " x", ")]", "\n"], "logprobs": [-0.7981564402580261, -3.6111416816711426, -0.7022727131843567, -0.0035618215333670378, -0.0008256602450273931, -0.05263623967766762, -0.21718165278434753, -0.0040710438042879105, -0.005967182572931051, -0.016188837587833405, -0.014851367101073265, -6.305972783593461e-05, -1.409874677658081, -0.002428322797641158, -0.011454295367002487, -0.0011866202112287283, -0.03870106488466263, -0.07585502415895462, -0.02606760896742344], "finish_reason": "stop"}, {"text": " open('./matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", ".", "/", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.005264822859317064, -0.24429059028625488, -2.675615072250366, -0.1554756462574005, -0.6747762560844421, -0.008470559492707253, -0.0031350532080978155, -0.010414304211735725, -0.003722644178196788, -0.0008643704932183027, -0.006018728483468294, -0.11887937039136887, -0.04266618564724922, -0.39748862385749817, -0.0015617328463122249, -0.16825084388256073, -0.0004742213059216738, -0.18065783381462097, -0.0001911934232339263, -0.0006753309280611575, -0.5954636931419373, -0.004913991782814264, -0.008106071501970291], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002574589161667973, -2.0503786799963564e-05, -2.13382354559144e-05, -0.0014518683310598135, -2.7656173188006505e-05, -0.00041083001997321844, -0.022943394258618355, -0.0008037435472942889], "finish_reason": "stop"}, {"text": "writerow(['name', 'age', 'email'])", "tokens": ["writer", "ow", "(['", "name", "'", ",", " '", "age", "'", ",", " '", "email", "'])", "\n"], "logprobs": [-0.0006314906058833003, -1.0261833667755127, -0.7403595447540283, -4.5271100997924805, -0.14417824149131775, -0.001942891743965447, -0.028377441689372063, -2.118999481201172, -0.25650307536125183, -0.008434033952653408, -0.003037246409803629, -2.6179885864257812, -0.3781210780143738, -0.010786796920001507], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.4571811556816101, -7.998623186722398e-05, -0.06882281601428986, -0.0038397409953176975, -0.22953805327415466, -5.4238757002167404e-05, -1.0132738680113107e-05, -0.2528136670589447, -0.08199634402990341, -0.0003232433518860489, -0.00036423723213374615, -0.001869717612862587, -0.00019727191829588264, -0.0003480305604171008, -0.8336566090583801], "finish_reason": "stop"}], "metrics": {"energy": 109.14737841606141, "energy_per_token": 1.1252307053202208, "time": 5.0679846, "time_per_token": 0.05224726391752577}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json()['data']", "tokens": [" response", ".", "json", "()", "['", "data", "']", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -1.2463133335113525, -0.0044486369006335735, -0.008763780817389488, -0.08815726637840271], "finish_reason": "stop"}, {"text": " [d[\"data\"] for d in data[\"data\"] if re.match(pattern, d[\"data\"])]", "tokens": [" [", "d", "[", "\"", "data", "\"", "]", " for", " d", " in", " data", "[", "\"", "data", "\"", "]", " if", " re", ".", "match", "(", "pattern", ",", " d", "[", "\"", "data", "\"", "]", ")]", "\n"], "logprobs": [-0.8413712382316589, -2.047992706298828, -1.8597288131713867, -0.041227225214242935, -0.3999937176704407, -0.006365382112562656, -0.009121177718043327, -0.03291149437427521, -0.0020737587474286556, -0.00012444675667211413, -0.004677663091570139, -1.197124719619751, -0.0013111574808135629, -0.09861830621957779, -0.008566418662667274, -0.021551817655563354, -0.017779147252440453, -0.02250034175813198, -7.426462980220094e-05, -1.2249791622161865, -0.001157209975644946, -0.026442676782608032, -0.0009946642676368356, -0.023577680811285973, -0.00923173874616623, -5.578839045483619e-05, -0.011935249902307987, -0.0007441850611940026, -0.04407468065619469, -0.04520457983016968, -0.01398466620594263], "finish_reason": "stop"}, {"text": " open('./matched_data.csv', 'w') as csv_file:", "tokens": [" open", "('", ".", "/", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.004963694605976343, -0.2687515616416931, -2.900224447250366, -0.17479968070983887, -0.6711599826812744, -0.00828626286238432, -0.0030718303751200438, -0.011161155998706818, -0.0035975754726678133, -0.0007634824141860008, -0.007950328290462494, -0.12337540090084076, -0.03987279161810875, -1.2180492877960205, -0.0008453133050352335, -0.9384801387786865, -0.0020400919020175934, -0.50379478931427, -0.005336918868124485, -0.0005552418879233301, -0.007123903371393681], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002615109842736274, -1.823885577323381e-05, -1.6569954823353328e-05, -0.0010966007830575109, -3.2066785934148356e-05, -0.00038580605178140104, -0.02554181218147278, -0.0008002892718650401], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0008166077313944697, -0.41680994629859924, -0.017977744340896606, -0.015425659716129303, -0.00015138434537220746, -1.883488948806189e-05, -0.03004174493253231, -0.024494623765349388], "finish_reason": "stop"}, {"text": " './matched_data.csv'", "tokens": [" '", ".", "/", "matched", "_", "data", ".", "csv", "'", "\n"], "logprobs": [-1.5401506423950195, -1.6077499389648438, -0.2982640862464905, -0.060665685683488846, -0.0019778707064688206, -0.0006485265912488103, -0.0035495867487043142, -0.0005184260080568492, -0.1388406902551651, -0.12173265963792801], "finish_reason": "stop"}], "metrics": {"energy": 111.3363972520828, "energy_per_token": 1.1719620763377137, "time": 5.0587454, "time_per_token": 0.05324995157894737}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json()", "tokens": [" response", ".", "json", "()", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -0.48577144742012024], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.8413712382316589, -2.4699764251708984], "finish_reason": "stop"}, {"text": " open('matched_data.csv', mode='w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " mode", "='", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.004963694605976343, -0.2687515616416931, -0.18164615333080292, -0.004941986873745918, -0.001365087111480534, -0.005293875467032194, -0.0020292659755796194, -0.00040844682371243834, -0.0016299308044835925, -2.5912139415740967, -0.029510395601391792, -0.029924089089035988, -0.2621626555919647, -0.0007904027588665485, -0.21653838455677032, -0.0001248043408850208, -0.2989177405834198, -0.00036530973738990724, -0.0009109399979934096, -0.5493852496147156, -0.00846843235194683, -0.008135396055877209], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00026794656878337264, -1.4662635294371285e-05, -1.9788545614574105e-05, -0.0013009188696742058, -2.9682672902708873e-05, -0.00044276448898017406, -0.021490681916475296, -0.0009033175301738083], "finish_reason": "stop"}, {"text": "writerow(matched_data)", "tokens": ["writer", "ow", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.000722266617231071, -0.9777649641036987, -1.0598949193954468, -0.19826951622962952, -9.226373367710039e-05, -0.00029845553217455745, -0.4058889150619507, -0.0408797487616539], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.5395870804786682, -6.8662193370983e-05, -0.08233542740345001, -0.0028451699763536453, -0.23096656799316406, -5.6622808187967166e-05, -8.940656698541716e-06, -0.22252070903778076, -0.06976914405822754, -0.00025817399728111923, -0.0003580405900720507, -0.0016569469589740038, -0.00019596086349338293, -0.00040725519647821784, -0.8856685757637024], "finish_reason": "stop"}], "metrics": {"energy": 118.74612860107419, "energy_per_token": 1.7209583855228143, "time": 4.010723, "time_per_token": 0.05812642028985507}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -1.3283491134643555, -0.00313564739190042, -0.007879484444856644, -0.06252791732549667], "finish_reason": "stop"}, {"text": " re.findall(pattern, json.dumps(data))", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " json", ".", "d", "umps", "(", "data", "))", "\n"], "logprobs": [-2.566640615463257, -8.83301836438477e-05, -0.02039695903658867, -0.014293784275650978, -0.0021313349716365337, -0.028551701456308365, -0.0008092227508313954, -2.1794917583465576, -0.014260291121900082, -0.017909597605466843, -4.887569048150908e-06, -0.0005255748401395977, -0.0071608321741223335, -0.7263225317001343, -0.0438191294670105], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.005702062509953976, -0.25336483120918274, -0.23203535377979279, -0.004748377948999405, -0.0013860390754416585, -0.005275139585137367, -0.0019208805169910192, -0.0003333727945573628, -0.00217475276440382, -0.10013756155967712, -0.03419209271669388, -0.31409767270088196, -0.0021569100208580494, -0.13766402006149292, -0.0005604841862805188, -0.17884667217731476, -0.00013982271775603294, -0.0006337541271932423, -0.70468670129776, -0.004514620639383793, -0.005314270965754986], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002817710628733039, -2.586808113846928e-05, -2.3245540432981215e-05, -0.001117082079872489, -3.099393507000059e-05, -0.0003359945258125663, -0.02020304836332798, -0.0008374521275982261], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005485698929987848, -0.512572705745697, -0.01804506592452526, -0.014078469015657902, -0.0001227780303452164, -2.062299427052494e-05, -0.034496527165174484, -0.034393563866615295], "finish_reason": "stop"}, {"text": " './matched_data.csv'", "tokens": [" '", ".", "/", "matched", "_", "data", ".", "csv", "'", "\n"], "logprobs": [-1.68831467628479, -1.6932679414749146, -0.2566536068916321, -0.05067582055926323, -0.0018911350052803755, -0.000696654780767858, -0.0035365200601518154, -0.00044216870446689427, -0.12121196836233139, -0.1270449012517929], "finish_reason": "stop"}], "metrics": {"energy": 102.690169049263, "energy_per_token": 1.2372309524007592, "time": 4.654854, "time_per_token": 0.056082578313253015}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -0.4007616639137268], "finish_reason": "stop"}, {"text": " [json.loads(d)[\"data\"] for d in data if re.findall(pattern, d)]", "tokens": [" [", "json", ".", "loads", "(", "d", ")[", "\"", "data", "\"", "]", " for", " d", " in", " data", " if", " re", ".", "find", "all", "(", "pattern", ",", " d", ")]", "\n"], "logprobs": [-0.7981564402580261, -2.606018543243408, -0.24158933758735657, -0.16195492446422577, -0.0055116829462349415, -1.8070800304412842, -2.475475788116455, -0.017464544624090195, -0.0501275472342968, -0.0012977044098079205, -0.008606603369116783, -0.07034342736005783, -0.009853415191173553, -0.0006817638641223311, -0.0470571331679821, -0.7690619826316833, -0.04906528443098068, -6.878139538457617e-05, -2.7309460639953613, -0.0007102350937202573, -0.0023078492376953363, -0.022228611633181572, -0.001190192298963666, -0.47025686502456665, -0.5975503921508789, -0.04276156425476074], "finish_reason": "stop"}, {"text": " open(os.path.join('matched_data.csv'), 'w', newline='') as f:", "tokens": [" open", "(", "os", ".", "path", ".", "join", "('", "matched", "_", "data", ".", "csv", "')", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " f", ":", "\n"], "logprobs": [-0.005264822859317064, -1.740443468093872, -1.0061776638031006, -4.339123915997334e-05, -0.07199762761592865, -0.02475631982088089, -0.09012766182422638, -1.6721373796463013, -2.348196506500244, -0.01401029247790575, -0.003430555108934641, -0.02729923278093338, -0.002267291769385338, -0.019772805273532867, -0.0026299909222871065, -0.09397416561841965, -0.03912071883678436, -0.3592042028903961, -0.000771939754486084, -0.16899490356445312, -0.00039593485416844487, -0.1160774752497673, -0.00022980909852776676, -0.0007258402765728533, -2.183661460876465, -0.040206074714660645, -0.009523437358438969], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00027509720530360937, -2.13382354559144e-05, -2.3841574147809297e-05, -0.0012646066024899483, -2.992108420585282e-05, -0.0002896366349887103, -0.017562473192811012, -0.0007715824176557362], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005996812833473086, -0.41993656754493713, -0.02308214269578457, -0.017942383885383606, -9.440929716220126e-05, -2.2291887944447808e-05, -0.029176190495491028, -0.0372205451130867], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5498267412185669, -6.41325386823155e-05, -0.07536228746175766, -0.004622488282620907, -0.20508219301700592, -5.411955135059543e-05, -9.179073458653875e-06, -0.26131078600883484, -0.07140032202005386, -0.00025054652360267937, -0.0003936707798857242, -0.0019414640264585614, -0.00020466140995267779, -0.0004029654082842171, -0.8946720361709595, -1.9073468138230965e-06, -1.5497195136049413e-06, -9.417090768693015e-05, -0.00042381841922178864, -0.13045650720596313], "finish_reason": "stop"}], "metrics": {"energy": 153.15515101623535, "energy_per_token": 1.4313565515536013, "time": 5.4756956, "time_per_token": 0.05117472523364486}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -1.3283491134643555, -0.00313564739190042, -0.007879484444856644, -0.06252791732549667], "finish_reason": "stop"}, {"text": " [json.loads(match) for match in re.findall(pattern, data['data'])]", "tokens": [" [", "json", ".", "loads", "(", "match", ")", " for", " match", " in", " re", ".", "find", "all", "(", "pattern", ",", " data", "['", "data", "']", ")]", "\n"], "logprobs": [-0.7981564402580261, -2.606018543243408, -0.24158933758735657, -0.16195492446422577, -0.0055116829462349415, -2.1541430950164795, -0.8504716753959656, -0.20013195276260376, -0.0932396724820137, -0.0022465961519628763, -0.19129562377929688, -7.581423415103927e-05, -0.0014842457603663206, -0.22319771349430084, -0.0056654359214007854, -0.04971294105052948, -0.0008465044084005058, -0.46554258465766907, -0.4459105134010315, -0.005602728575468063, -0.05511699244379997, -0.006551690865308046, -0.026735085994005203], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.005264822859317064, -0.24429059028625488, -0.20011886954307556, -0.004584397654980421, -0.0013873485149815679, -0.004993467591702938, -0.0019820346496999264, -0.0004319211875554174, -0.0022533759474754333, -0.11619231104850769, -0.03333185613155365, -0.3389602601528168, -0.0022480234038084745, -0.1339818388223648, -0.0006708040600642562, -0.14607714116573334, -0.00012230125139467418, -0.0006335158832371235, -0.6349462866783142, -0.003952193073928356, -0.0068867942318320274], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002683041093405336, -1.8000440832111053e-05, -2.0861407392658293e-05, -0.0014672239776700735, -2.658331868587993e-05, -0.00032908268622122705, -0.021729253232479095, -0.0009679876384325325], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005718026659451425, -0.48786669969558716, -0.02243192121386528, -0.015464512631297112, -0.00012206286191940308, -1.9311717551317997e-05, -0.02964094467461109, -0.023005489259958267], "finish_reason": "stop"}, {"text": " os.path.join(os.path.dirname(os.path.abspath(__file__)), 'matched_data.csv')", "tokens": [" os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "ab", "sp", "ath", "(__", "file", "__", "))", ",", " '", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.5284754037857056, -6.580135959666222e-05, -0.07034020125865936, -0.003824065439403057, -2.0347537994384766, -0.044317275285720825, -0.05067854002118111, -0.0018398514948785305, -0.6024308800697327, -0.0031898352317512035, -0.529422402381897, -0.7275755405426025, -0.04526166245341301, -0.0015688742278143764, -0.029782816767692566, -0.0037962766364216805, -0.5795011520385742, -9.738924563862383e-05, -2.0265373677830212e-05, -0.07289917767047882, -0.0002752163854893297, -4.351044481154531e-05, -0.008714857511222363, -0.0035770260728895664, -0.22899626195430756, -0.05811791867017746, -0.0009920443408191204, -0.00032062159152701497, -0.002015227684751153, -0.0002734287118073553, -0.0009366653976030648, -0.7618177533149719], "finish_reason": "stop"}], "metrics": {"energy": 123.31076755809782, "energy_per_token": 1.0912457306026355, "time": 5.6905355, "time_per_token": 0.05035872123893805}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -0.4007616639137268], "finish_reason": "stop"}, {"text": " [line for line in data[\"data\"] if re.search(pattern, line)]", "tokens": [" [", "line", " for", " line", " in", " data", "[", "\"", "data", "\"", "]", " if", " re", ".", "search", "(", "pattern", ",", " line", ")]", "\n"], "logprobs": [-0.7981564402580261, -2.435720920562744, -0.532683253288269, -0.015894383192062378, -0.0011523280991241336, -0.04475794732570648, -1.646912693977356, -0.0027731317095458508, -0.004135034512728453, -0.0002733095607254654, -0.00982319563627243, -0.024554064497351646, -0.021583784371614456, -8.999896090244874e-05, -0.39618393778800964, -0.0012515101116150618, -0.01216704398393631, -0.0007655074005015194, -0.011912044137716293, -0.08274605125188828, -0.020177697762846947], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " file", ":", "\n"], "logprobs": [-0.005264822859317064, -0.24429059028625488, -0.20011886954307556, -0.004584397654980421, -0.0013873485149815679, -0.004993467591702938, -0.0019820346496999264, -0.0004319211875554174, -0.0022533759474754333, -0.11619231104850769, -0.03333185613155365, -1.3119198083877563, -0.000715714821126312, -0.774069607257843, -0.005871193017810583, -0.005594667512923479], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002811751910485327, -2.038458114839159e-05, -1.9788545614574105e-05, -0.0014099667314440012, -3.123234637314454e-05, -0.0003668589051812887, -0.020045556128025055, -0.0007481159991584718], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0006862907321192324, -0.4992673993110657, -0.02111036702990532, -0.017906436696648598, -0.00010108436981681734, -2.6225699912174605e-05, -0.03410949185490608, -0.024236582219600677], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6107752323150635, -7.617183291586116e-05, -0.06803931295871735, -0.0038177715614438057, -0.21822836995124817, -5.864924969500862e-05, -8.583032467868179e-06, -0.25298500061035156, -0.060160353779792786, -0.0003947432560380548, -0.00035315475543029606, -0.0017695259302854538, -0.00021944021864328533, -0.0004285847535356879, -0.8737397193908691, -2.145764938177308e-06, -1.6689286894688848e-06, -0.00011753345461329445, -0.00037722624256275594, -0.13658279180526733], "finish_reason": "stop"}], "metrics": {"energy": 95.47082069969177, "energy_per_token": 1.0491298977988106, "time": 4.6404905, "time_per_token": 0.050994401098901104}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -1.3283491134643555, -0.00313564739190042, -0.007879484444856644, -0.06252791732549667], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0376508235931396, -0.01819128356873989], "finish_reason": "stop"}, {"text": " open(os.path.join(os.getcwd(), 'matched_data.csv'), 'w', newline='') as csv_file:", "tokens": [" open", "(", "os", ".", "path", ".", "join", "(", "os", ".", "get", "c", "wd", "()", ",", " '", "matched", "_", "data", ".", "csv", "')", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.005702062509953976, -1.7283213138580322, -1.064740777015686, -5.07818695041351e-05, -0.06077057868242264, -0.021141530945897102, -0.08371241390705109, -0.2173919379711151, -0.11364997178316116, -0.0029801977798342705, -0.5439900755882263, -0.0033043804578483105, -6.6756979322235566e-06, -0.0016534955939278007, -0.009888118132948875, -0.2971247136592865, -0.2263721525669098, -0.004626878537237644, -0.0012022180017083883, -0.004529336001724005, -0.0017375147435814142, -0.0030717116314917803, -0.0019954785238951445, -0.08570602536201477, -0.04178165644407272, -0.40067797899246216, -0.00035661060246638954, -0.1454888880252838, -0.0004332319076638669, -0.15167975425720215, -0.00022837892174720764, -0.0008125579333864152, -0.8191441893577576, -0.0012296028435230255, -0.7221343517303467, -0.0029475123155862093, -0.0006528153317049146, -0.00569364707916975], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00034397884155623615, -2.0265373677830212e-05, -1.9192511899746023e-05, -0.0011182728921994567, -2.8729025871143676e-05, -0.0004334702098276466, -0.020127693191170692, -0.0007662221323698759], "finish_reason": "stop"}, {"text": "writerow([\"Data\"])", "tokens": ["writer", "ow", "([", "\"", "Data", "\"", "])", "\n"], "logprobs": [-0.000705589191056788, -0.9525007009506226, -1.7296067476272583, -0.8953588008880615, -1.8892141580581665, -0.17150457203388214, -0.02929798513650894, -0.013261095620691776], "finish_reason": "stop"}, {"text": " 'matched_data.csv'", "tokens": [" '", "matched", "_", "data", ".", "csv", "'", "\n"], "logprobs": [-1.6683306694030762, -0.4329555928707123, -0.0025397446006536484, -0.00034528967808000743, -0.006529899314045906, -0.00039307496626861393, -0.09616976231336594, -0.09126593172550201], "finish_reason": "stop"}], "metrics": {"energy": 110.1255316638946, "energy_per_token": 1.295594490163466, "time": 4.8477077, "time_per_token": 0.057031855294117646}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json()", "tokens": [" response", ".", "json", "()", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -0.48577144742012024], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0125348567962646, -0.016042793169617653], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.005903664510697126, -0.2500837445259094, -0.21874919533729553, -0.004539897665381432, -0.0012579393805935979, -0.005355416797101498, -0.0018245016690343618, -0.0003808011533692479, -0.0019219514215365052, -0.1010451391339302, -0.026695623993873596, -1.309272289276123, -0.0007602662080898881, -1.1347694396972656, -0.0023890782613307238, -0.8372778296470642, -0.0007862337515689433, -0.007171128876507282], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00024637524620629847, -2.3483953555114567e-05, -2.1815061700181104e-05, -0.0011235122801735997, -3.0397906812140718e-05, -0.0003349220205564052, -0.022548828274011612, -0.0008211340173147619], "finish_reason": "stop"}, {"text": "writerow(['SSN'])", "tokens": ["writer", "ow", "(['", "SS", "N", "'])", "\n"], "logprobs": [-0.0007520469953306019, -0.9643418788909912, -0.7840121984481812, -2.2957065105438232, -0.024091478437185287, -0.25475454330444336, -0.03149145096540451], "finish_reason": "stop"}, {"text": " 'matched_data.csv'", "tokens": [" '", "matched", "_", "data", ".", "csv", "'", "\n"], "logprobs": [-1.5964568853378296, -0.4674033522605896, -0.0028496868908405304, -0.0004003438516519964, -0.00590935256332159, -0.00047052756417542696, -0.0910145491361618, -0.08136036992073059], "finish_reason": "stop"}], "metrics": {"energy": 79.49624483680725, "energy_per_token": 1.39467096204925, "time": 3.5895653, "time_per_token": 0.0629748298245614}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json()", "tokens": [" response", ".", "json", "()", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -0.48577144742012024], "finish_reason": "stop"}, {"text": " [item[\"name\"] for item in data[\"data\"] if re.search(pattern, item[\"name\"])]", "tokens": [" [", "item", "[", "\"", "name", "\"", "]", " for", " item", " in", " data", "[", "\"", "data", "\"", "]", " if", " re", ".", "search", "(", "pattern", ",", " item", "[", "\"", "name", "\"", "]", ")]", "\n"], "logprobs": [-0.8413712382316589, -2.183135986328125, -2.986001968383789, -0.040456824004650116, -2.23858380317688, -0.007854292169213295, -0.0015380469849333167, -0.06286370009183884, -0.006509173195809126, -0.0005560758872888982, -0.0035981694236397743, -0.21439789235591888, -0.001302347518503666, -0.03853728249669075, -0.0007376333815045655, -0.010647747665643692, -0.019075985997915268, -0.015130863524973392, -7.319182623177767e-05, -0.33951982855796814, -0.0008572241058573127, -0.017282484099268913, -0.0008388814167119563, -0.014799687080085278, -0.008594075217843056, -6.639736966462806e-05, -0.0293560978025198, -0.00013565097469836473, -0.028859246522188187, -0.03695979341864586, -0.014278859831392765], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as csv_file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.004963694605976343, -0.2687515616416931, -0.18164615333080292, -0.004941986873745918, -0.001365087111480534, -0.005293875467032194, -0.0020292659755796194, -0.00040844682371243834, -0.0016299308044835925, -0.10272294282913208, -0.032473646104335785, -1.323132038116455, -0.0007226239540614188, -1.0191450119018555, -0.0023360364139080048, -0.4456254839897156, -0.0046726795844733715, -0.000514851592015475, -0.006431239657104015], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00026246439665555954, -2.1457441107486375e-05, -2.098061486321967e-05, -0.0010871936101466417, -2.9205850296420977e-05, -0.0003343261778354645, -0.01985870487987995, -0.0007494263118132949], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0007015389273874462, -0.5377576947212219, -0.017530612647533417, -0.014666480012238026, -0.00011514954530866817, -2.253030106658116e-05, -0.03210337087512016, -0.027842773124575615], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.5105544924736023, -6.997340824455023e-05, -0.08805018663406372, -0.0025115632452070713, -0.23276272416114807, -5.745722592109814e-05, -1.1205610462639015e-05, -0.23420146107673645, -0.0699184462428093, -0.0003355178632773459, -0.00032395837479270995, -0.0016637305961921811, -0.00019965562387369573, -0.00042298430344089866, -0.9099864363670349], "finish_reason": "stop"}], "metrics": {"energy": 139.66633008956907, "energy_per_token": 1.4701718956796745, "time": 5.4577823, "time_per_token": 0.057450339999999996}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json()['data']", "tokens": [" response", ".", "json", "()", "['", "data", "']", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -1.2463133335113525, -0.0044486369006335735, -0.008763780817389488, -0.08815726637840271], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0125348567962646, -0.016042793169617653], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='', encoding='utf-8') as f:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "=", "''", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n"], "logprobs": [-0.005903664510697126, -0.2500837445259094, -0.21874919533729553, -0.004539897665381432, -0.0012579393805935979, -0.005355416797101498, -0.0018245016690343618, -0.0003808011533692479, -0.0019219514215365052, -0.1010451391339302, -0.026695623993873596, -0.3369956612586975, -0.002470895182341337, -0.1080552339553833, -0.00048828122089616954, -1.9517472982406616, -0.23399874567985535, -0.001668134005740285, -0.00993367936462164, -0.07550755143165588, -0.056463904678821564, -0.04646226391196251, -0.002147869672626257, -0.06319108605384827, -0.0009934734553098679, -2.0812034606933594, -0.043277814984321594, -0.005888732150197029], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00029273517429828644, -1.764281842042692e-05, -2.1576648578047752e-05, -0.0011536378879100084, -3.015949550899677e-05, -0.0004180987598374486, -0.022129040211439133, -0.0009672730811871588], "finish_reason": "stop"}, {"text": "writerow(['FirstName', 'LastName', 'Email', 'Phone'])", "tokens": ["writer", "ow", "(['", "First", "Name", "'", ",", " '", "Last", "Name", "'", ",", " '", "Email", "'", ",", " '", "Phone", "'])", "\n"], "logprobs": [-0.0007169060409069061, -0.9622479677200317, -0.7293215394020081, -4.955535888671875, -2.1525814533233643, -0.027412788942456245, -0.001408895361237228, -0.06320395320653915, -0.08767274022102356, -0.010851067490875721, -0.13013440370559692, -0.0008582960581406951, -0.00730427261441946, -0.8681853413581848, -1.0082294940948486, -0.03442062810063362, -0.011490004137158394, -1.986968755722046, -0.8131667375564575, -0.009878321550786495], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.5425629615783691, -7.962863310240209e-05, -0.07053063064813614, -0.004583211150020361, -0.1818162202835083, -5.745722592109814e-05, -1.0371154530730564e-05, -0.25818684697151184, -0.0624111071228981, -0.00033790123416110873, -0.00031668893643654883, -0.0016988381976261735, -0.0002165798214264214, -0.0004059444472659379, -0.9069479703903198], "finish_reason": "stop"}], "metrics": {"energy": 103.39366858100892, "energy_per_token": 1.148818539788988, "time": 4.847871, "time_per_token": 0.05386523333333333}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -0.4007616639137268], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0376508235931396, -0.01819128356873989], "finish_reason": "stop"}, {"text": " open(f'matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "(", "f", "'", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.005702062509953976, -1.7283213138580322, -1.5598026514053345, -0.5592162013053894, -0.3041761815547943, -0.016246192157268524, -0.0014838885981589556, -0.035445746034383774, -0.003400735557079315, -0.001129108713939786, -0.0009713222389109433, -0.11879077553749084, -0.02230101078748703, -0.285597562789917, -0.0011535187950357795, -0.14807996153831482, -0.0004275123355910182, -0.13622865080833435, -0.00017712931730784476, -0.0005579821881838143, -0.6305695176124573, -0.00562276178970933, -0.008221710100769997], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00034397884155623615, -2.0265373677830212e-05, -1.9192511899746023e-05, -0.0011182728921994567, -2.8729025871143676e-05, -0.0004334702098276466, -0.020127693191170692, -0.0007662221323698759], "finish_reason": "stop"}, {"text": "writerow(matched_data[0])", "tokens": ["writer", "ow", "(", "matched", "_", "data", "[", "0", "])", "\n"], "logprobs": [-0.000705589191056788, -0.9525007009506226, -1.028854489326477, -0.15556268393993378, -8.129743218887597e-05, -0.0003034608089365065, -1.2157187461853027, -0.0027592226397246122, -0.13030792772769928, -0.07992994785308838], "finish_reason": "stop"}, {"text": " 'matched_data.csv'", "tokens": [" '", "matched", "_", "data", ".", "csv", "'", "\n"], "logprobs": [-1.6683306694030762, -0.4329555928707123, -0.0025397446006536484, -0.00034528967808000743, -0.006529899314045906, -0.00039307496626861393, -0.09616976231336594, -0.09126593172550201], "finish_reason": "stop"}], "metrics": {"energy": 96.86275130844116, "energy_per_token": 1.403807989977408, "time": 4.2206755, "time_per_token": 0.06116921014492753}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json()", "tokens": [" response", ".", "json", "()", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -0.48577144742012024], "finish_reason": "stop"}, {"text": " [entry for entry in data['data'] if re.search(pattern, entry)]", "tokens": [" [", "entry", " for", " entry", " in", " data", "['", "data", "']", " if", " re", ".", "search", "(", "pattern", ",", " entry", ")]", "\n"], "logprobs": [-0.8413712382316589, -3.7856979370117188, -0.6601207256317139, -0.005300871562212706, -0.0005006728461012244, -0.005048266611993313, -0.30471813678741455, -0.005245730746537447, -0.0026543643325567245, -0.03392467275261879, -0.022414086386561394, -5.519237674889155e-05, -0.3794272840023041, -0.0016330252401530743, -0.01018434576690197, -0.0008933129138313234, -0.016009358689188957, -0.38070815801620483, -0.024134300649166107], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.004963694605976343, -0.2687515616416931, -0.18164615333080292, -0.004941986873745918, -0.001365087111480534, -0.005293875467032194, -0.0020292659755796194, -0.00040844682371243834, -0.0016299308044835925, -0.10272294282913208, -0.032473646104335785, -0.33205652236938477, -0.00237171514891088, -0.1410880982875824, -0.0006526962388306856, -0.15098923444747925, -0.00014327930693980306, -0.0006876011611893773, -1.0478661060333252, -0.0008554374799132347, -0.7073559761047363, -0.0008560330606997013, -0.007589671760797501], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002644904307089746, -1.7523612768854946e-05, -2.4914430468925275e-05, -0.0011126763420179486, -2.682172998902388e-05, -0.0003519630990922451, -0.023330815136432648, -0.0008374521275982261], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005931286723352969, -0.4990456700325012, -0.016252409666776657, -0.017613423988223076, -0.00013886917440686375, -1.6569954823353328e-05, -0.028321009129285812, -0.029548127204179764], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.5186582207679749, -7.450303382938728e-05, -0.07551263272762299, -0.0035333128180354834, -0.24406227469444275, -6.389413465512916e-05, -9.417489309271332e-06, -0.24150151014328003, -0.0664808377623558, -0.00020251607929822057, -0.0003438596613705158, -0.00187923654448241, -0.00020346954988781363, -0.0003887851198669523, -0.9569993019104004], "finish_reason": "stop"}], "metrics": {"energy": 107.31239023685454, "energy_per_token": 1.2334757498489028, "time": 4.6301537, "time_per_token": 0.05322015747126437}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -0.4007616639137268], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0376508235931396, -0.01819128356873989], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', encoding='utf-8') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n"], "logprobs": [-0.005702062509953976, -0.25336483120918274, -0.23203535377979279, -0.004748377948999405, -0.0013860390754416585, -0.005275139585137367, -0.0019208805169910192, -0.0003333727945573628, -0.00217475276440382, -0.10013756155967712, -0.03419209271669388, -0.31409767270088196, -0.0021569100208580494, -2.0841190814971924, -0.03390001505613327, -0.13991345465183258, -0.0917726457118988, -0.0011410161387175322, -0.810038685798645, -0.0005221195751801133, -0.6856785416603088, -0.006981147453188896, -0.0060482332482934], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002817710628733039, -2.586808113846928e-05, -2.3245540432981215e-05, -0.001117082079872489, -3.099393507000059e-05, -0.0003359945258125663, -0.02020304836332798, -0.0008374521275982261], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005485698929987848, -0.512572705745697, -0.01804506592452526, -0.014078469015657902, -0.0001227780303452164, -2.062299427052494e-05, -0.034496527165174484, -0.034393563866615295], "finish_reason": "stop"}, {"text": " os.path.abspath('./matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", ".", "/", "matched", "_", "data", ".", "csv", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5053408145904541, -6.246371776796877e-05, -0.07051318883895874, -0.0045033469796180725, -0.2242952138185501, -5.566918844124302e-05, -1.0132738680113107e-05, -0.21852196753025055, -2.8544492721557617, -0.19898414611816406, -0.055239614099264145, -0.0014910305617377162, -0.0006602014764212072, -0.0024643549695611, -0.00029059001826681197, -0.000699156429618597, -1.1237545013427734, -2.3841830625315197e-06, -1.311301275563892e-06, -8.129743218887597e-05, -0.00035255891270935535, -0.12968090176582336], "finish_reason": "stop"}], "metrics": {"energy": 122.63330163955685, "energy_per_token": 1.5139913782661338, "time": 4.4232254, "time_per_token": 0.05460772098765432}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -1.3283491134643555, -0.00313564739190042, -0.007879484444856644, -0.06252791732549667], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0376508235931396, -0.01819128356873989], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='', encoding='utf-8') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "=", "''", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n"], "logprobs": [-0.005702062509953976, -0.25336483120918274, -0.23203535377979279, -0.004748377948999405, -0.0013860390754416585, -0.005275139585137367, -0.0019208805169910192, -0.0003333727945573628, -0.00217475276440382, -0.10013756155967712, -0.03419209271669388, -0.31409767270088196, -0.0021569100208580494, -0.13766402006149292, -0.0005604841862805188, -1.8238319158554077, -0.22363562881946564, -0.00141258561052382, -0.009288785979151726, -0.07669370621442795, -0.050327982753515244, -0.04760754480957985, -0.002156553091481328, -0.05388754978775978, -0.0009804924484342337, -0.6239925622940063, -0.005595260299742222, -0.007575474679470062], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002817710628733039, -2.586808113846928e-05, -2.3245540432981215e-05, -0.001117082079872489, -3.099393507000059e-05, -0.0003359945258125663, -0.02020304836332798, -0.0008374521275982261], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005485698929987848, -0.512572705745697, -0.01804506592452526, -0.014078469015657902, -0.0001227780303452164, -2.062299427052494e-05, -0.034496527165174484, -0.034393563866615295], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5053408145904541, -6.246371776796877e-05, -0.07051318883895874, -0.0045033469796180725, -0.2242952138185501, -5.566918844124302e-05, -1.0132738680113107e-05, -0.21852196753025055, -0.08229150623083115, -0.00013672371278516948, -0.00036376056959852576, -0.0019259967375546694, -0.00021514961554203182, -0.00044800734031014144, -0.9419175982475281, -1.5497195136049413e-06, -1.4305104514278355e-06, -9.178694017464295e-05, -0.0003849719068966806, -0.1436677724123001], "finish_reason": "stop"}], "metrics": {"energy": 125.60880619621278, "energy_per_token": 1.443779381565664, "time": 4.6324716, "time_per_token": 0.0532468}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json()", "tokens": [" response", ".", "json", "()", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -0.48577144742012024], "finish_reason": "stop"}, {"text": " [re.match(pattern, d).group() for d in data['data'] if re.match(pattern, d)]", "tokens": [" [", "re", ".", "match", "(", "pattern", ",", " d", ")", ".", "group", "()", " for", " d", " in", " data", "['", "data", "']", " if", " re", ".", "match", "(", "pattern", ",", " d", ")]", "\n"], "logprobs": [-0.8413712382316589, -3.876972198486328, -0.0005302215577103198, -1.7843331098556519, -0.004647287540137768, -0.021839246153831482, -0.0026590011548250914, -2.2006986141204834, -0.7866218090057373, -1.333223581314087, -0.025810321792960167, -0.37598541378974915, -0.06982673704624176, -0.0015685171820223331, -0.00038211196078918874, -0.0026177444960922003, -0.3690620958805084, -0.001508051878772676, -0.0016357626300305128, -0.48811864852905273, -0.08560207486152649, -3.6000557884108275e-05, -0.0911402478814125, -0.000387831823900342, -0.001973706530407071, -0.0073990598320961, -0.002865853253751993, -0.06673847138881683, -0.01289117056876421], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.005501131527125835, -0.28348520398139954, -0.2362539917230606, -0.004899519495666027, -0.0014142522122710943, -0.005006633698940277, -0.0018093895632773638, -0.00044907975825481117, -0.0018052248051390052, -0.1064731702208519, -0.03742978721857071, -0.3631136119365692, -0.0019395602867007256, -0.10645376890897751, -0.0006448334897868335, -0.13026219606399536, -0.0001323135511483997, -0.0006778326351195574, -0.67521071434021, -0.004108085297048092, -0.006055816542357206], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00029094755882397294, -1.6212332411669195e-05, -2.1815061700181104e-05, -0.0013048476539552212, -2.455681169521995e-05, -0.0003268184664193541, -0.022336216643452644, -0.0008188708452507854], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.000688077649101615, -0.4600803852081299, -0.01485054474323988, -0.016417652368545532, -0.00011526874004630372, -2.8013790142722428e-05, -0.027661200612783432, -0.033775437623262405], "finish_reason": "stop"}, {"text": " os.path.abspath(f.name)  # Return absolute path", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "(", "f", ".", "name", ")", "  ", "#", " Return", " absolute", " path", "\n"], "logprobs": [-0.540839672088623, -8.046303264563903e-05, -0.06722711026668549, -0.0037360647693276405, -0.22868086397647858, -5.447716102935374e-05, -1.0013530300057027e-05, -1.4502556324005127, -1.9104233980178833, -0.22470292448997498, -0.00045170116936787963, -0.12434404343366623, -2.9124755859375, -0.00756932282820344, -0.45244500041007996, -1.7405341863632202, -0.06177162751555443, -2.057276725769043], "finish_reason": "stop"}], "metrics": {"energy": 144.18595595550536, "energy_per_token": 1.4712852648520955, "time": 5.0540943, "time_per_token": 0.05157239081632653}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -0.4007616639137268], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0376508235931396, -0.01819128356873989], "finish_reason": "stop"}, {"text": " open('./matched_data.csv', 'w', newline='') as csv_file:", "tokens": [" open", "('", ".", "/", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.005702062509953976, -0.25336483120918274, -2.5891902446746826, -0.17067936062812805, -0.6153647303581238, -0.008076508529484272, -0.003243782324716449, -0.011005652137100697, -0.0037260884419083595, -0.0008824745309539139, -0.007531935814768076, -0.1217414140701294, -0.03465072438120842, -0.3916929364204407, -0.0015021003782749176, -0.15878649055957794, -0.0005905076395720243, -0.187286838889122, -0.00018475732940714806, -0.000723576988093555, -1.0980134010314941, -0.0009326160652562976, -0.6976614594459534, -0.0023323495406657457, -0.000771820661611855, -0.007871323265135288], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00027807659353129566, -1.7881233361549675e-05, -2.2291887944447808e-05, -0.0014431786257773638, -2.7417760065873154e-05, -0.00034791138023138046, -0.0202870424836874, -0.0008837846689857543], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0006461439770646393, -0.4548598825931549, -0.01852566935122013, -0.015129806473851204, -0.00011908298620255664, -2.729855441430118e-05, -0.02764740213751793, -0.03207162395119667], "finish_reason": "stop"}, {"text": " os.path.abspath(\"matched_data.csv\")", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "(", "\"", "matched", "_", "data", ".", "csv", "\"", ")"], "logprobs": [-0.5036889314651489, -6.961580220377073e-05, -0.0755511000752449, -0.0026434261817485094, -0.2095969170331955, -6.246371776796877e-05, -1.1801649634435307e-05, -1.647692322731018, -0.4335046410560608, -0.20923134684562683, -0.0010804060148075223, -0.0003759154351428151, -0.0013272295473143458, -0.00024768622824922204, -0.0002321927313460037, -0.21647684276103973], "finish_reason": "stop"}], "metrics": {"energy": 88.45581012821198, "energy_per_token": 1.1340488477975894, "time": 4.223966, "time_per_token": 0.05415341025641025}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -1.3283491134643555, -0.00313564739190042, -0.007879484444856644, -0.06252791732549667], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0376508235931396, -0.01819128356873989], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as csv_file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.005702062509953976, -0.25336483120918274, -0.23203535377979279, -0.004748377948999405, -0.0013860390754416585, -0.005275139585137367, -0.0019208805169910192, -0.0003333727945573628, -0.00217475276440382, -0.10013756155967712, -0.03419209271669388, -1.383673906326294, -0.0007175016799010336, -1.0225694179534912, -0.0020971940830349922, -0.43273529410362244, -0.004490530118346214, -0.0004536076739896089, -0.004820748697966337], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002526917669456452, -1.7881233361549675e-05, -1.7523612768854946e-05, -0.001580062322318554, -2.7417760065873154e-05, -0.00029988560709170997, -0.025905579328536987, -0.0008303055074065924], "finish_reason": "stop"}, {"text": "writerow(matched_data[0])", "tokens": ["writer", "ow", "(", "matched", "_", "data", "[", "0", "])", "\n"], "logprobs": [-0.0005681092734448612, -0.9623996019363403, -1.0622789859771729, -0.16423176229000092, -7.378782902378589e-05, -0.0002646096108946949, -1.3611993789672852, -0.0027965507470071316, -0.1273246556520462, -0.0771465003490448], "finish_reason": "stop"}, {"text": " 'matched_data.csv'", "tokens": [" '", "matched", "_", "data", ".", "csv", "'", "\n"], "logprobs": [-1.7703361511230469, -0.4874563217163086, -0.003246990730985999, -0.00037293630884960294, -0.00540758715942502, -0.0003782987187150866, -0.0927896499633789, -0.0984935462474823], "finish_reason": "stop"}], "metrics": {"energy": 79.93721521186828, "energy_per_token": 1.1755472825274746, "time": 3.7988772, "time_per_token": 0.05586584117647059}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.content)", "tokens": [" json", ".", "loads", "(", "response", ".", "content", ")", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -2.415950059890747, -0.12349161505699158, -0.4886000454425812], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0898624658584595, -0.014319050125777721], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.005799609236419201, -0.23958244919776917, -0.20092961192131042, -0.004871404729783535, -0.001320919836871326, -0.004739954136312008, -0.0017297795275226235, -0.0004642124113161117, -0.0015586382942274213, -0.10883527249097824, -0.029599396511912346, -0.3087344765663147, -0.0021161085460335016, -0.1374840885400772, -0.000614216027315706, -0.15020333230495453, -0.00013374387344811112, -0.0007347744540311396, -0.6215150356292725, -0.003668128978461027, -0.00725220050662756], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00025018901214934886, -2.4318398573086597e-05, -1.883488948806189e-05, -0.0012419852428138256, -3.158996332786046e-05, -0.0003551805857568979, -0.021846594288945198, -0.0008288762182928622], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0006009918288327754, -0.49567797780036926, -0.021736836060881615, -0.017862994223833084, -0.0001250427303602919, -1.9073304429184645e-05, -0.033871203660964966, -0.03314701095223427], "finish_reason": "stop"}, {"text": " f.name", "tokens": [" f", ".", "name", "\n"], "logprobs": [-2.1818273067474365, -0.1791519671678543, -0.0032036192715168, -0.41714030504226685], "finish_reason": "stop"}], "metrics": {"energy": 109.75982606506346, "energy_per_token": 1.7993414109026797, "time": 3.5842595, "time_per_token": 0.058758352459016394}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -0.4007616639137268], "finish_reason": "stop"}, {"text": " [json.dumps(item['data']) for item in data if re.search(pattern, item['data'])]", "tokens": [" [", "json", ".", "d", "umps", "(", "item", "['", "data", "'])", " for", " item", " in", " data", " if", " re", ".", "search", "(", "pattern", ",", " item", "['", "data", "']", ")]", "\n"], "logprobs": [-0.7981564402580261, -2.606018543243408, -0.24158933758735657, -1.9254875183105469, -4.625213477993384e-05, -0.02970748580992222, -2.226774215698242, -1.7291343212127686, -0.030677443370223045, -0.06547154486179352, -0.05576818436384201, -0.039682965725660324, -0.000691770575940609, -0.008291938342154026, -0.45590826869010925, -0.04188454896211624, -5.245071224635467e-05, -0.24237613379955292, -0.0012429377529770136, -0.014453360810875893, -0.0009450022480450571, -0.5732822418212891, -0.008284489624202251, -0.0033989534713327885, -0.05238467827439308, -0.03659692406654358, -0.016703277826309204], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as csv_file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.005264822859317064, -0.24429059028625488, -0.20011886954307556, -0.004584397654980421, -0.0013873485149815679, -0.004993467591702938, -0.0019820346496999264, -0.0004319211875554174, -0.0022533759474754333, -0.11619231104850769, -0.03333185613155365, -0.3389602601528168, -0.0022480234038084745, -0.1339818388223648, -0.0006708040600642562, -0.14607714116573334, -0.00012230125139467418, -0.0006335158832371235, -1.0464224815368652, -0.0008150592911988497, -0.7216112017631531, -0.0018518695142120123, -0.0005103239673189819, -0.007923362776637077], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002683041093405336, -1.8000440832111053e-05, -2.0861407392658293e-05, -0.0014672239776700735, -2.658331868587993e-05, -0.00032908268622122705, -0.021729253232479095, -0.0009679876384325325], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005718026659451425, -0.48786669969558716, -0.02243192121386528, -0.015464512631297112, -0.00012206286191940308, -1.9311717551317997e-05, -0.02964094467461109, -0.023005489259958267], "finish_reason": "stop"}, {"text": " f.name", "tokens": [" f", ".", "name", "\n"], "logprobs": [-2.2303547859191895, -0.1536840945482254, -0.0032282164320349693, -0.47115758061408997], "finish_reason": "stop"}], "metrics": {"energy": 136.25576935195917, "energy_per_token": 1.530963700583811, "time": 4.637949, "time_per_token": 0.05211178651685393}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json()['data']", "tokens": [" response", ".", "json", "()", "['", "data", "']", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -1.2463133335113525, -0.0044486369006335735, -0.008763780817389488, -0.08815726637840271], "finish_reason": "stop"}, {"text": " [row for row in data['data'] if re.search(pattern, row['data'])]", "tokens": [" [", "row", " for", " row", " in", " data", "['", "data", "']", " if", " re", ".", "search", "(", "pattern", ",", " row", "['", "data", "']", ")]", "\n"], "logprobs": [-0.8413712382316589, -2.279207229614258, -0.3961070775985718, -0.0027878726832568645, -0.00038723601028323174, -0.0062760645523667336, -0.263352632522583, -0.003980215173214674, -0.00379116996191442, -0.03260265290737152, -0.023341646417975426, -5.149708886165172e-05, -0.3978041410446167, -0.0019526478135958314, -0.008895530365407467, -0.0008631794480606914, -0.02420470118522644, -0.7684795260429382, -3.3044333457946777, -0.08790182322263718, -0.012302938848733902, -0.02146349661052227], "finish_reason": "stop"}, {"text": " open('matched_data.csv', mode='w', newline='', encoding='utf-8') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " mode", "='", "w", "'", ",", " new", "line", "=", "''", ",", " encoding", "='", "utf", "-", "8", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.004963694605976343, -0.2687515616416931, -0.18164615333080292, -0.004941986873745918, -0.001365087111480534, -0.005293875467032194, -0.0020292659755796194, -0.00040844682371243834, -0.0016299308044835925, -2.5912139415740967, -0.029510395601391792, -0.029924089089035988, -0.2621626555919647, -0.0007904027588665485, -0.21653838455677032, -0.0001248043408850208, -1.3575267791748047, -0.033561740070581436, -0.0004433602443896234, -0.02055135928094387, -0.033316634595394135, -0.05270115286111832, -0.04816947132349014, -0.0008891443139873445, -0.06185881048440933, -0.0008686583023518324, -1.2256455421447754, -0.002382180653512478, -1.4328972101211548, -0.000985375139862299, -0.00862149428576231], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00026794656878337264, -1.4662635294371285e-05, -1.9788545614574105e-05, -0.0013009188696742058, -2.9682672902708873e-05, -0.00044276448898017406, -0.021490681916475296, -0.0009033175301738083], "finish_reason": "stop"}, {"text": "writerow(matched_data)", "tokens": ["writer", "ow", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.000722266617231071, -0.9777649641036987, -1.0598949193954468, -0.19826951622962952, -9.226373367710039e-05, -0.00029845553217455745, -0.4058889150619507, -0.0408797487616539], "finish_reason": "stop"}, {"text": " f\"/absolute/path/to/matched_data.csv\"", "tokens": [" f", "\"", "/", "absolute", "/", "path", "/", "to", "/", "matched", "_", "data", ".", "csv", "\"", "\n"], "logprobs": [-2.2547760009765625, -2.914491653442383, -0.2039945125579834, -0.04699014127254486, -0.21911916136741638, -0.0005113962688483298, -0.008700321428477764, -0.002461025258526206, -0.021015003323554993, -0.005086339078843594, -0.004523165058344603, -0.00015758226800244302, -0.0014916256768628955, -0.0003073934931308031, -0.0009209443815052509, -0.47348979115486145], "finish_reason": "stop"}], "metrics": {"energy": 124.0261793346405, "energy_per_token": 1.2159429346533384, "time": 5.481795, "time_per_token": 0.05374308823529412}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json().get('data')", "tokens": [" response", ".", "json", "()", ".", "get", "('", "data", "')", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -2.5222723484039307, -0.000771939754486084, -0.23671095073223114, -0.0021609545219689608, -0.18853747844696045, -0.07613212615251541], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.8413712382316589, -2.4699764251708984], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.004963694605976343, -0.2687515616416931, -0.18164615333080292, -0.004941986873745918, -0.001365087111480534, -0.005293875467032194, -0.0020292659755796194, -0.00040844682371243834, -0.0016299308044835925, -0.10272294282913208, -0.032473646104335785, -0.33205652236938477, -0.00237171514891088, -0.1410880982875824, -0.0006526962388306856, -0.15098923444747925, -0.00014327930693980306, -0.0006876011611893773, -0.6515361666679382, -0.004020703490823507, -0.00554191367700696], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002644904307089746, -1.7523612768854946e-05, -2.4914430468925275e-05, -0.0011126763420179486, -2.682172998902388e-05, -0.0003519630990922451, -0.023330815136432648, -0.0008374521275982261], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005931286723352969, -0.4990456700325012, -0.016252409666776657, -0.017613423988223076, -0.00013886917440686375, -1.6569954823353328e-05, -0.028321009129285812, -0.029548127204179764], "finish_reason": "stop"}, {"text": " '/absolute/path/to/matched_data.csv'", "tokens": [" '/", "absolute", "/", "path", "/", "to", "/", "matched", "_", "data", ".", "csv", "'<", "|", "end", "of", "text", "|>"], "logprobs": [-2.9978489875793457, -0.1299363672733307, -0.03571954369544983, -0.0007538337376900017, -0.007429351564496756, -0.002881305990740657, -0.015726706013083458, -0.003503496292978525, -0.003487340407446027, -0.00016878610767889768, -0.0017283515771850944, -0.0002131234941771254, -1.7875711917877197, -9.536738616588991e-07, -1.1920922133867862e-06, -4.827859811484814e-05, -0.0002755738969426602, -0.07460568845272064], "finish_reason": "stop"}], "metrics": {"energy": 91.20526664352415, "energy_per_token": 1.2000692979411074, "time": 4.2189803, "time_per_token": 0.05551289868421053}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json()['data']", "tokens": [" response", ".", "json", "()", "['", "data", "']", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -1.2463133335113525, -0.0044486369006335735, -0.008763780817389488, -0.08815726637840271], "finish_reason": "stop"}, {"text": " [d[\"data\"] for d in data if re.search(pattern, d[\"data\"])]", "tokens": [" [", "d", "[", "\"", "data", "\"", "]", " for", " d", " in", " data", " if", " re", ".", "search", "(", "pattern", ",", " d", "[", "\"", "data", "\"", "]", ")]", "\n"], "logprobs": [-0.8413712382316589, -2.047992706298828, -1.8597288131713867, -0.041227225214242935, -0.3999937176704407, -0.006365382112562656, -0.009121177718043327, -0.03291149437427521, -0.0020737587474286556, -0.00012444675667211413, -0.004677663091570139, -0.4566843807697296, -0.03891366720199585, -6.41325386823155e-05, -0.2523990869522095, -0.000871278636623174, -0.014738841913640499, -0.0007771808886900544, -0.030990228056907654, -0.016039978712797165, -6.460934673668817e-05, -0.010034354403614998, -0.0004366874636616558, -0.0680823028087616, -0.06365294009447098, -0.018189294263720512], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.004963694605976343, -0.2687515616416931, -0.18164615333080292, -0.004941986873745918, -0.001365087111480534, -0.005293875467032194, -0.0020292659755796194, -0.00040844682371243834, -0.0016299308044835925, -0.10272294282913208, -0.032473646104335785, -0.33205652236938477, -0.00237171514891088, -0.1410880982875824, -0.0006526962388306856, -0.15098923444747925, -0.00014327930693980306, -0.0006876011611893773, -0.6515361666679382, -0.004020703490823507, -0.00554191367700696], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002644904307089746, -1.7523612768854946e-05, -2.4914430468925275e-05, -0.0011126763420179486, -2.682172998902388e-05, -0.0003519630990922451, -0.023330815136432648, -0.0008374521275982261], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005931286723352969, -0.4990456700325012, -0.016252409666776657, -0.017613423988223076, -0.00013886917440686375, -1.6569954823353328e-05, -0.028321009129285812, -0.029548127204179764], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')"], "logprobs": [-0.5186582207679749, -7.450303382938728e-05, -0.07551263272762299, -0.0035333128180354834, -0.24406227469444275, -6.389413465512916e-05, -9.417489309271332e-06, -0.24150151014328003, -0.0664808377623558, -0.00020251607929822057, -0.0003438596613705158, -0.00187923654448241, -0.00020346954988781363, -0.0003887851198669523], "finish_reason": "stop"}], "metrics": {"energy": 107.23357200908659, "energy_per_token": 1.1407826809477297, "time": 4.8513646, "time_per_token": 0.05161026170212766}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json()['data']", "tokens": [" response", ".", "json", "()", "['", "data", "']", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -1.2463133335113525, -0.0044486369006335735, -0.008763780817389488, -0.08815726637840271], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0125348567962646, -0.016042793169617653], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', encoding='utf-8', newline='') as f:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " encoding", "='", "utf", "-", "8", "'", ",", " new", "line", "='", "')", " as", " f", ":", "\n"], "logprobs": [-0.005903664510697126, -0.2500837445259094, -0.21874919533729553, -0.004539897665381432, -0.0012579393805935979, -0.005355416797101498, -0.0018245016690343618, -0.0003808011533692479, -0.0019219514215365052, -0.1010451391339302, -0.026695623993873596, -0.3369956612586975, -0.002470895182341337, -2.3176841735839844, -0.03739648684859276, -0.14369741082191467, -0.08590066432952881, -0.0010071687866002321, -0.6665626764297485, -0.10275941342115402, -0.007076083682477474, -0.0002754547167569399, -0.03928188234567642, -0.0002456601650919765, -0.000982278841547668, -1.9481470584869385, -0.03631405532360077, -0.006958655081689358], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00029273517429828644, -1.764281842042692e-05, -2.1576648578047752e-05, -0.0011536378879100084, -3.015949550899677e-05, -0.0004180987598374486, -0.022129040211439133, -0.0009672730811871588], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0007169060409069061, -0.48288360238075256, -0.01786123774945736, -0.013273682445287704, -0.00010013079008786008, -2.13382354559144e-05, -0.03044307790696621, -0.02513257786631584], "finish_reason": "stop"}, {"text": " 'matched_data.csv'", "tokens": [" '", "matched", "_", "data", ".", "csv", "'"], "logprobs": [-1.3856143951416016, -0.46992868185043335, -0.0029055543709546328, -0.0003583981015253812, -0.005347827915102243, -0.0003716255014296621, -0.08733830600976944], "finish_reason": "stop"}], "metrics": {"energy": 116.12013972282409, "energy_per_token": 1.658859138897487, "time": 4.005125, "time_per_token": 0.05721607142857142}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -0.4007616639137268], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0376508235931396, -0.01819128356873989], "finish_reason": "stop"}, {"text": " open(\"./data/matched_data.csv\", 'w') as file:", "tokens": [" open", "(", "\"", ".", "/", "data", "/", "matched", "_", "data", ".", "csv", "\"", ",", " '", "w", "')", " as", " file", ":", "\n"], "logprobs": [-0.005702062509953976, -1.7283213138580322, -0.8940407037734985, -2.2445342540740967, -0.22628802061080933, -2.5178754329681396, -0.3614536225795746, -0.3178383409976959, -0.013035556301474571, -0.005429284647107124, -0.011336554773151875, -0.005446001887321472, -0.00032455421751365066, -0.005715338047593832, -0.7502568960189819, -0.07263126969337463, -1.3149330615997314, -0.001562089892104268, -0.8087297677993774, -0.008609439246356487, -0.008046118542551994], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00034397884155623615, -2.0265373677830212e-05, -1.9192511899746023e-05, -0.0011182728921994567, -2.8729025871143676e-05, -0.0004334702098276466, -0.020127693191170692, -0.0007662221323698759], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.000705589191056788, -0.48904743790626526, -0.016083266586065292, -0.015674835070967674, -0.00011205045302631333, -2.3245540432981215e-05, -0.0299636572599411, -0.02661982737481594], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5732045769691467, -7.807903602952138e-05, -0.08191122859716415, -0.003548398846760392, -0.21309992671012878, -5.209310256759636e-05, -8.583032467868179e-06, -0.23973864316940308, -0.07779155671596527, -0.00015901254664640874, -0.0003694805200211704, -0.0017600059509277344, -0.00020108585886191577, -0.0003778220561798662, -0.9514504671096802, -1.9073468138230965e-06, -1.5497195136049413e-06, -8.082063141046092e-05, -0.0005334384622983634, -0.11847580224275589], "finish_reason": "stop"}], "metrics": {"energy": 86.03896788787843, "energy_per_token": 1.1173891933490705, "time": 4.2208724, "time_per_token": 0.05481652467532468}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -1.3283491134643555, -0.00313564739190042, -0.007879484444856644, -0.06252791732549667], "finish_reason": "stop"}, {"text": " re.findall(pattern, data['data'])", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " data", "['", "data", "'])", "\n"], "logprobs": [-2.566640615463257, -8.83301836438477e-05, -0.02039695903658867, -0.014293784275650978, -0.0021313349716365337, -0.028551701456308365, -0.0008092227508313954, -0.3287723958492279, -0.2850584089756012, -0.005226875655353069, -0.03090955689549446, -0.03179451450705528], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " file", ":", "\n"], "logprobs": [-0.005702062509953976, -0.25336483120918274, -0.23203535377979279, -0.004748377948999405, -0.0013860390754416585, -0.005275139585137367, -0.0019208805169910192, -0.0003333727945573628, -0.00217475276440382, -0.10013756155967712, -0.03419209271669388, -1.383673906326294, -0.0007175016799010336, -0.7784077525138855, -0.006498632486909628, -0.006432779133319855], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002526917669456452, -1.7881233361549675e-05, -1.7523612768854946e-05, -0.001580062322318554, -2.7417760065873154e-05, -0.00029988560709170997, -0.025905579328536987, -0.0008303055074065924], "finish_reason": "stop"}, {"text": "writerow(matched_data)", "tokens": ["writer", "ow", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005681092734448612, -0.9623996019363403, -1.0622789859771729, -0.16423176229000092, -7.378782902378589e-05, -0.0002646096108946949, -0.32271865010261536, -0.030078183859586716], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.4478435814380646, -5.674201020156033e-05, -0.07197543978691101, -0.004081254359334707, -0.19183874130249023, -6.007967749610543e-05, -1.0013530300057027e-05, -0.2679535150527954, -0.053321707993745804, -0.0003399271226953715, -0.00031799983116798103, -0.001689555705524981, -0.000205018965061754, -0.000382707774406299, -0.8454371690750122], "finish_reason": "stop"}], "metrics": {"energy": 92.75338435077668, "energy_per_token": 1.1594173043847085, "time": 4.222374, "time_per_token": 0.052779675000000005}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json()", "tokens": [" response", ".", "json", "()", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -0.48577144742012024], "finish_reason": "stop"}, {"text": " re.findall(pattern, data['data'])", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " data", "['", "data", "'])", "\n"], "logprobs": [-2.5036752223968506, -7.939023635117337e-05, -0.02759719081223011, -0.015737736597657204, -0.0018649582052603364, -0.031809642910957336, -0.0006866481271572411, -0.38307443261146545, -0.2948194146156311, -0.005039726383984089, -0.02661913074553013, -0.03430567681789398], "finish_reason": "stop"}, {"text": " open(\"./matched_data.csv\", \"w\") as file:", "tokens": [" open", "(", "\"", ".", "/", "matched", "_", "data", ".", "csv", "\"", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n"], "logprobs": [-0.005903664510697126, -1.7244679927825928, -0.9392300248146057, -2.279665470123291, -0.16074629127979279, -0.6896877884864807, -0.010227886959910393, -0.004392380826175213, -0.015163857489824295, -0.005289606750011444, -0.0003044141922146082, -0.005234227981418371, -0.8984412550926208, -0.05079185217618942, -0.04465250298380852, -0.7274122834205627, -0.0009045085171237588, -0.7513123154640198, -0.010230837389826775, -0.007472895085811615], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00026556302327662706, -1.8596476365928538e-05, -2.038458114839159e-05, -0.0012354368809610605, -2.8371408916427754e-05, -0.0003736513026524335, -0.021062511950731277, -0.0008437649230472744], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.000704278820194304, -0.5202569961547852, -0.017252136021852493, -0.015018251724541187, -0.00011181206355104223, -1.9430925021879375e-05, -0.02309134416282177, -0.029621271416544914], "finish_reason": "stop"}, {"text": " os.path.abspath(os.path.join(os.path.dirname(__file__), 'matched_data.csv'))", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(__", "file", "__", ")", ",", " '", "matched", "_", "data", ".", "csv", "'))", "\n"], "logprobs": [-0.6028990149497986, -6.83045873302035e-05, -0.07167055457830429, -0.003586291102692485, -0.21168343722820282, -5.4238757002167404e-05, -9.65590606938349e-06, -1.8436286449432373, -2.0070862770080566, -0.0021807001903653145, -0.14258888363838196, -0.004107017070055008, -0.11241514980792999, -0.24266263842582703, -0.12220823764801025, -0.002702990546822548, -0.41066402196884155, -0.0009713222389109433, -0.15555310249328613, -0.18666230142116547, -0.0017084777355194092, -8.940656698541716e-06, -0.004250896163284779, -0.001866623992100358, -0.17352209985256195, -0.08625800162553787, -0.0009384519071318209, -0.00031585473334416747, -0.001663492526859045, -0.00032145579461939633, -0.0012342463014647365, -0.7372164726257324], "finish_reason": "stop"}], "metrics": {"energy": 171.33076344490047, "energy_per_token": 1.8226676962223454, "time": 5.6906066, "time_per_token": 0.06053836808510638}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.6257630586624146, -0.00010942813969450071, -0.021861406043171883, -0.0004412154376041144, -0.0012992521515116096, -8.332382276421413e-05, -0.09537825733423233, -0.01827603206038475, -0.4007616639137268], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0376508235931396, -0.01819128356873989], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as csv_file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.005702062509953976, -0.25336483120918274, -0.23203535377979279, -0.004748377948999405, -0.0013860390754416585, -0.005275139585137367, -0.0019208805169910192, -0.0003333727945573628, -0.00217475276440382, -0.10013756155967712, -0.03419209271669388, -1.383673906326294, -0.0007175016799010336, -1.0225694179534912, -0.0020971940830349922, -0.43273529410362244, -0.004490530118346214, -0.0004536076739896089, -0.004820748697966337], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0002526917669456452, -1.7881233361549675e-05, -1.7523612768854946e-05, -0.001580062322318554, -2.7417760065873154e-05, -0.00029988560709170997, -0.025905579328536987, -0.0008303055074065924], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005681092734448612, -0.48283299803733826, -0.01666259579360485, -0.014623131603002548, -0.00010549465514486656, -1.680836794548668e-05, -0.029239056631922722, -0.024321286007761955], "finish_reason": "stop"}, {"text": " os.path.abspath(\"matched_data.csv\")", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "(", "\"", "matched", "_", "data", ".", "csv", "\"", ")", "\n"], "logprobs": [-0.5319454669952393, -9.07141511561349e-05, -0.07048730552196503, -0.0040553719736635685, -0.2350776642560959, -6.854299135738984e-05, -9.417489309271332e-06, -1.5484641790390015, -0.48377010226249695, -0.1978345513343811, -0.0011210116790607572, -0.0003692421887535602, -0.0014966250164434314, -0.00022802136663813144, -0.00021717573690693825, -0.24252355098724365, -0.2111462652683258], "finish_reason": "stop"}], "metrics": {"energy": 96.49636002540589, "energy_per_token": 1.3402272225750818, "time": 4.2057114, "time_per_token": 0.05841265833333334}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.02233097143471241, -5.8887653722194955e-05, -0.0030385537538677454, -0.000770510348957032, -0.01320780348032713, -1.7523612768854946e-05, -9.500529267825186e-05, -0.02224341779947281, -0.0482742078602314], "finish_reason": "stop"}, {"text": " response.json()", "tokens": [" response", ".", "json", "()", "\n"], "logprobs": [-0.8270455598831177, -0.0005469018360599875, -0.09550351649522781, -0.015460404567420483, -0.48577144742012024], "finish_reason": "stop"}, {"text": " list(filter(lambda x: re.match(pattern, x[\"name\"]), data))", "tokens": [" list", "(", "filter", "(", "lambda", " x", ":", " re", ".", "match", "(", "pattern", ",", " x", "[", "\"", "name", "\"", "])", ",", " data", "))", "\n"], "logprobs": [-3.7143285274505615, -0.1840231567621231, -0.12596169114112854, -0.0016089839627966285, -0.08626215159893036, -0.47614097595214844, -0.0035437659826129675, -0.09032721072435379, -7.068861305015162e-05, -1.6466962099075317, -0.0016875325236469507, -0.014440670609474182, -0.001158996019512415, -0.06370126456022263, -2.4161105155944824, -0.06642919778823853, -1.7058770656585693, -0.0071913679130375385, -0.02178535982966423, -0.0332331508398056, -0.007562342565506697, -1.0732448101043701, -0.029326926916837692], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " file", ":", "\n"], "logprobs": [-0.005903664510697126, -0.2500837445259094, -0.21874919533729553, -0.004539897665381432, -0.0012579393805935979, -0.005355416797101498, -0.0018245016690343618, -0.0003808011533692479, -0.0019219514215365052, -0.1010451391339302, -0.026695623993873596, -1.309272289276123, -0.0007602662080898881, -0.6703510880470276, -0.006673785857856274, -0.0067043364979326725], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00024637524620629847, -2.3483953555114567e-05, -2.1815061700181104e-05, -0.0011235122801735997, -3.0397906812140718e-05, -0.0003349220205564052, -0.022548828274011612, -0.0008211340173147619], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0007520469953306019, -0.48151370882987976, -0.02068401873111725, -0.017027027904987335, -0.00012003655137959868, -2.396077979938127e-05, -0.030172225087881088, -0.027418240904808044], "finish_reason": "stop"}, {"text": " './matched_data.csv'", "tokens": [" '", ".", "/", "matched", "_", "data", ".", "csv", "'", "\n"], "logprobs": [-1.4747662544250488, -1.7281030416488647, -0.2950109541416168, -0.047530703246593475, -0.0018052248051390052, -0.000623032043222338, -0.003748772433027625, -0.0004659997357521206, -0.15489433705806732, -0.1319323629140854], "finish_reason": "stop"}], "metrics": {"energy": 120.37513216781619, "energy_per_token": 1.5237358502255214, "time": 4.21838, "time_per_token": 0.053397215189873413}}
