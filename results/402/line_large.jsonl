{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', mode='w', newline='', encoding='utf-8') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " mode", "='", "w", "'", ",", " new", "line", "=", "''", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -1.484460473060608, -0.0018089136574417353, -0.005295179784297943, -0.051780182868242264, -4.386805812828243e-05, -0.006712744012475014, -5.686121585313231e-05, -1.5767712593078613, -0.021062977612018585, -0.0005896736984141171, -0.025245102122426033, -0.01606285385787487, -0.006125011947005987, -0.010097729042172432, -0.0033726973924785852, -0.012193541042506695, -0.0002791491860989481, -1.229752540588379, -0.001716689090244472, -0.007783678360283375], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0001486429391661659, -1.4305104514278355e-06, -1.4543427823809907e-05, -0.0002675890573300421, -0.00010918975021922961, -0.00022349244682118297, -0.02838057093322277, -0.000494715350214392], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.00045813556062057614, -0.35511714220046997, -0.02351166307926178, -0.009274731390178204, -0.0002240883477497846, -7.939023635117337e-05, -0.003048655577003956, -0.004429173190146685], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.004361403174698353, -1.9311717551317997e-05, -0.005368578247725964, -0.00023040501400828362, -0.019234567880630493, -1.728519782773219e-05, -1.3589766240329482e-05, -0.02554541453719139, -0.004842221271246672, -0.00025662468397058547, -4.589452510117553e-05, -0.0003358753747306764, -0.00010942813969450071, -0.0001971527235582471, -0.3948291540145874], "finish_reason": "stop"}], "metrics": {"energy": 328.4761913909912, "energy_per_token": 3.957544474590255, "time": 9.052392, "time_per_token": 0.10906496385542168}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -1.3201487064361572], "finish_reason": "stop"}, {"text": " [re.findall(pattern, item[\"data\"]) for item in data]", "tokens": [" [", "re", ".", "find", "all", "(", "pattern", ",", " item", "[", "\"", "data", "\"", "])", " for", " item", " in", " data", "]", "\n"], "logprobs": [-1.5180277824401855, -0.5824189186096191, -0.00021228920377325267, -0.12466654181480408, -0.000198821333469823, -0.000830901088193059, -0.005852704867720604, -0.0006181474891491234, -0.7453547120094299, -2.3983078002929688, -0.008618185296654701, -0.002785851713269949, -0.0003280101518612355, -0.015132155269384384, -0.07811938971281052, -0.00020668754586949944, -2.7894584491150454e-05, -0.0008419782971031964, -0.10884959995746613, -0.025150597095489502], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.00041214076918549836, -0.05258828401565552, -0.06934303045272827, -0.00023684080224484205, -0.00014625910262111574, -0.0012166248634457588, -0.0003225283289793879, -0.000563224486541003, -0.0001294529065489769, -0.22633089125156403, -0.003375429892912507, -0.14483873546123505, -8.49926145747304e-05, -0.006464758887887001, -7.343022298300639e-05, -0.06574082374572754, -3.707340147229843e-05, -0.00021050144277978688, -1.0468299388885498, -0.0015280486550182104, -0.005240868777036667], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0001668790791882202, -5.960462772236497e-07, -1.3828182090946939e-05, -0.00021944021864328533, -8.511180931236595e-05, -0.000259365770034492, -0.03570758178830147, -0.0004907834227196872], "finish_reason": "stop"}, {"text": "writerow(['Matched Data'])", "tokens": ["writer", "ow", "(['", "Mat", "ched", " Data", "'])", "\n"], "logprobs": [-0.0004493180604185909, -1.0533500909805298, -0.160979226231575, -0.5302361845970154, -0.001720854314044118, -0.16083957254886627, -0.007958370260894299, -0.05736988037824631], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0037501975893974304, -1.7523612768854946e-05, -0.0036073154769837856, -0.00024768622824922204, -0.018321681767702103, -2.0146166207268834e-05, -1.3351351299206726e-05, -0.02669411525130272, -0.006348679773509502, -0.00030071981018409133, -4.911301948595792e-05, -0.00031728477915748954, -0.00011908298620255664, -0.00017033556650858372, -1.905747890472412, -1.0967194612021558e-05, -2.3841830625315197e-06, -6.437280717364047e-06, -2.9802276912960224e-06, -0.09697838872671127], "finish_reason": "stop"}], "metrics": {"energy": 371.9830759086609, "energy_per_token": 3.9156113253543254, "time": 10.105968, "time_per_token": 0.1063786105263158}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -0.1515815258026123, -8.177422569133341e-05, -0.007228530943393707, -7.521823135903105e-05, -0.0705227479338646, -3.6238969187252223e-05, -0.00018380382971372455, -0.5352265238761902, -8.082063141046092e-05, -0.03833320364356041, -0.0006505518686026335, -0.0052803573198616505], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00016473367577418685, -8.344646857949556e-07, -1.2636104656849056e-05, -0.00029130507027730346, -0.00010322991875000298, -0.00018571082910057157, -0.026848474517464638, -0.0005408254801295698], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0003768687602132559, -0.41575536131858826, -0.02844916470348835, -0.010228477418422699, -0.0002548369811847806, -9.30981186684221e-05, -0.002784187439829111, -0.0047372253611683846], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.0035139499232172966, -1.823885577323381e-05, -0.003916927147656679, -0.00018010901112575084, -0.01464134082198143, -1.5258672647178173e-05, -1.5139465176616795e-05, -0.024348510429263115, -0.004616317804902792, -0.0003398079425096512, -5.411955135059543e-05, -0.0003066784702241421, -0.00010394509445177391, -0.00018773700867313892, -0.3819468915462494], "finish_reason": "stop"}], "metrics": {"energy": 315.0918583688736, "energy_per_token": 4.092102056738618, "time": 8.626953, "time_per_token": 0.11203835064935065}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -1.3201487064361572], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -0.1515815258026123, -8.177422569133341e-05, -0.007228530943393707, -7.521823135903105e-05, -0.0705227479338646, -3.6238969187252223e-05, -0.00018380382971372455, -0.5352265238761902, -8.082063141046092e-05, -0.03833320364356041, -0.0006505518686026335, -0.0052803573198616505], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00016473367577418685, -8.344646857949556e-07, -1.2636104656849056e-05, -0.00029130507027730346, -0.00010322991875000298, -0.00018571082910057157, -0.026848474517464638, -0.0005408254801295698], "finish_reason": "stop"}, {"text": "writerow(['Matched Data'])", "tokens": ["writer", "ow", "(['", "Mat", "ched", " Data", "'])", "\n"], "logprobs": [-0.0003768687602132559, -1.078543782234192, -0.19253280758857727, -0.5218104720115662, -0.0021526277996599674, -0.1688113510608673, -0.011815563775599003, -0.05557030066847801], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.004581905901432037, -1.9550132492440753e-05, -0.003959317691624165, -0.00019012074335478246, -0.01712113246321678, -1.6927575416048057e-05, -1.1086402082582936e-05, -0.029523242264986038, -0.0048829116858541965, -0.0002454218047205359, -4.3748852476710454e-05, -0.0003071551618631929, -0.0001554368354845792, -0.0002047805901383981, -1.953845500946045, -1.2040065485052764e-05, -2.145764938177308e-06, -6.6756979322235566e-06, -4.172316494077677e-06, -0.09523347020149231], "finish_reason": "stop"}], "metrics": {"energy": 328.38686735725383, "energy_per_token": 4.156795789332327, "time": 9.050087, "time_per_token": 0.11455806329113924}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " response.json()['data']", "tokens": [" response", ".", "json", "()", "['", "data", "']", "\n"], "logprobs": [-1.675360918045044, -0.00010132275929208845, -0.0015698263887315989, -0.04140154644846916, -0.2532607316970825, -0.0013435394503176212, -0.0010977915953844786, -0.050158046185970306], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.49726632237434387, -0.010027037002146244], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as f:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " f", ":", "\n"], "logprobs": [-0.0004020121123176068, -0.052204567939043045, -0.06874702870845795, -0.00021908267808612436, -0.00016199229867197573, -0.0011295850854367018, -0.0003389737685211003, -0.0004808938247151673, -0.00020430385484360158, -0.3268726170063019, -0.005506110843271017, -1.9105429649353027, -0.0005743046058341861, -2.495924234390259, -0.0038476972840726376, -0.008309789933264256], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00018165845540352166, -1.1920922133867862e-06, -1.4781842764932662e-05, -0.000270091783022508, -7.462222856702283e-05, -0.0002076410164590925, -0.03726407513022423, -0.0005174727994017303], "finish_reason": "stop"}, {"text": "writerow(['MATCHED_DATA'])", "tokens": ["writer", "ow", "(['", "M", "ATCH", "ED", "_", "DATA", "'])", "\n"], "logprobs": [-0.00041940953815355897, -1.0736420154571533, -0.15565574169158936, -3.00461745262146, -0.8042925596237183, -0.06673077493906021, -0.27243858575820923, -0.01708105392754078, -0.009258432313799858, -0.049246981739997864], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.003005632432177663, -1.9192511899746023e-05, -0.0032406931277364492, -0.00018940561858471483, -0.01870294101536274, -1.4543427823809907e-05, -1.537788011773955e-05, -0.02457965351641178, -0.0054794359020888805, -0.000284154579276219, -5.9126061387360096e-05, -0.000436925794929266, -0.00011014331539627165, -0.00016675988445058465, -0.40579479932785034], "finish_reason": "stop"}], "metrics": {"energy": 306.6568364067076, "energy_per_token": 4.509659358922171, "time": 8.41351, "time_per_token": 0.12372808823529413}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.content)", "tokens": [" json", ".", "loads", "(", "response", ".", "content", ")", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -1.4276524782180786, -0.3277910351753235, -0.5020433068275452], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5778315663337708, -0.011112231761217117], "finish_reason": "stop"}, {"text": " open('matched_data.csv', mode='w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " mode", "='", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.0004377598816063255, -0.057272959500551224, -0.06187819689512253, -0.0002244459028588608, -0.00017927470616996288, -0.001191621064208448, -0.000302030734019354, -0.0004262015863787383, -0.00013755806139670312, -1.445770502090454, -0.0017113338690251112, -0.006630799733102322, -0.05540350452065468, -3.635817120084539e-05, -0.006578100845217705, -5.566918844124302e-05, -0.29210394620895386, -3.1709168979432434e-05, -0.00016234986833296716, -1.175006628036499, -0.0015149556566029787, -0.01231718622148037], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0001445904199499637, -1.1920922133867862e-06, -1.1801649634435307e-05, -0.00024327656137757003, -0.00010489867418073118, -0.000243634101934731, -0.027606699615716934, -0.0006460248259827495], "finish_reason": "stop"}, {"text": "writerow(['Matched Data'])", "tokens": ["writer", "ow", "(['", "Mat", "ched", " Data", "'])", "\n"], "logprobs": [-0.0004182179400231689, -1.127790927886963, -0.17997270822525024, -0.4945313036441803, -0.0019377756398171186, -0.17867040634155273, -0.010030931793153286, -0.06714106351137161], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.003757323371246457, -1.7523612768854946e-05, -0.0036050586495548487, -0.00016664070426486433, -0.019649026915431023, -1.966933996300213e-05, -1.9907753085135482e-05, -0.022337500005960464, -0.005140421446412802, -0.000284154579276219, -5.411955135059543e-05, -0.0003813969960901886, -9.417090768693015e-05, -0.00019524575327523053, -0.3808663487434387], "finish_reason": "stop"}], "metrics": {"energy": 322.8754772329332, "energy_per_token": 4.422951742916893, "time": 8.845269, "time_per_token": 0.12116806849315069}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open(\"matched_data.csv\", \"w\", newline=\"\") as file:", "tokens": [" open", "(", "\"", "matched", "_", "data", ".", "csv", "\"", ",", " \"", "w", "\"", ",", " new", "line", "=", "\"", "\"", ")", " as", " file", ":", "\n"], "logprobs": [-0.0004601611872203648, -3.020068407058716, -0.7175621390342712, -0.07653824239969254, -0.000251142424531281, -0.0002818902430590242, -0.0022199528757482767, -0.00031883400515653193, -0.0003734129713848233, -0.0007152383332140744, -0.4644237756729126, -0.008968900889158249, -0.011748881079256535, -0.1527688354253769, -0.014827053993940353, -5.245071224635467e-05, -0.44329917430877686, -0.07211741805076599, -0.0015098373405635357, -0.05649319663643837, -0.000339569611242041, -1.0986380577087402, -0.0019135037437081337, -0.008730101399123669], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.000198821333469823, -8.344646857949556e-07, -1.2993727978027891e-05, -0.0002543602604418993, -0.00010275312524754554, -0.00018308870494365692, -0.025609789416193962, -0.00046921687317080796], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.00044705410255119205, -0.4813075363636017, -0.02182699926197529, -0.007788172923028469, -0.00024351492174901068, -9.7508447652217e-05, -0.0028490927070379257, -0.003997194115072489], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.005115634296089411, -1.811964830267243e-05, -0.0036214501596987247, -0.00018702188390307128, -0.021157637238502502, -1.585470999998506e-05, -1.4066597032069694e-05, -0.027865147218108177, -0.004778513219207525, -0.0002661589242052287, -5.221230458118953e-05, -0.0003793711948674172, -0.0001012035645544529, -0.0001864259538706392, -0.3572412431240082], "finish_reason": "stop"}], "metrics": {"energy": 360.33475827789294, "energy_per_token": 4.619676388178115, "time": 9.901924, "time_per_token": 0.1269477435897436}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.content)", "tokens": [" json", ".", "loads", "(", "response", ".", "content", ")", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -1.4276524782180786, -0.3277910351753235, -0.5020433068275452], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5778315663337708, -0.011112231761217117], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as f:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " f", ":", "\n"], "logprobs": [-0.0004377598816063255, -0.057272959500551224, -0.06187819689512253, -0.0002244459028588608, -0.00017927470616996288, -0.001191621064208448, -0.000302030734019354, -0.0004262015863787383, -0.00013755806139670312, -0.2719424366950989, -0.003546616993844509, -0.1361786127090454, -8.630380034446716e-05, -0.005688905715942383, -7.593343616463244e-05, -0.06467770040035248, -2.8967437174287625e-05, -0.0002232540718978271, -2.9419054985046387, -0.005947985220700502, -0.008467013947665691], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00018153927521780133, -1.0728830375228426e-06, -1.2993727978027891e-05, -0.00031120702624320984, -0.00010597144137136638, -0.00025650550378486514, -0.03495778143405914, -0.00045694399159401655], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005334384622983634, -0.41393858194351196, -0.022539854049682617, -0.009914912283420563, -0.00023958197562023997, -6.782778655178845e-05, -0.0034316242672502995, -0.005341662093997002], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.0035000513307750225, -1.8358061424805783e-05, -0.0032749136444181204, -0.00019596086349338293, -0.018505191430449486, -2.0503786799963564e-05, -1.4543427823809907e-05, -0.02608305588364601, -0.005241936072707176, -0.0002584123576525599, -5.090107151772827e-05, -0.000325388420606032, -0.00013136000779923052, -0.0001984637783607468, -0.39918696880340576], "finish_reason": "stop"}], "metrics": {"energy": 300.7071282615662, "energy_per_token": 4.176487892521752, "time": 8.214214, "time_per_token": 0.11408630555555556}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " [re.search(pattern, item) for item in data[\"data\"]]", "tokens": [" [", "re", ".", "search", "(", "pattern", ",", " item", ")", " for", " item", " in", " data", "[", "\"", "data", "\"", "]]", "\n"], "logprobs": [-1.5180277824401855, -0.5824189186096191, -0.00021228920377325267, -2.4904730319976807, -0.001524953986518085, -0.004097044467926025, -0.0007927850820124149, -0.7092165946960449, -0.5012332797050476, -1.0634362697601318, -0.006521964445710182, -0.000176652567461133, -0.002854560734704137, -1.3857982158660889, -0.004376120399683714, -0.0015804193681105971, -0.00021669900161214173, -0.051541540771722794, -0.01123047061264515], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.0004273931554052979, -0.05414923280477524, -0.0633130595088005, -0.0002668739762157202, -0.0001728385395836085, -0.001090885023586452, -0.00038521020906046033, -0.0004606377915479243, -0.000188332938705571, -0.33963069319725037, -0.0030925089959055185, -2.0592236518859863, -0.0009011736838147044, -0.4594043493270874, -0.00013624693383462727, -0.2567082941532135, -0.0033175689168274403, -0.006479090079665184], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00019202772818971425, -1.4305104514278355e-06, -1.168244216387393e-05, -0.0002708068350329995, -8.308542601298541e-05, -0.0002101439022226259, -0.027098186314105988, -0.0005367745761759579], "finish_reason": "stop"}, {"text": "writerow(['Matched Data'])", "tokens": ["writer", "ow", "(['", "Mat", "ched", " Data", "'])", "\n"], "logprobs": [-0.00048423008411191404, -1.1229028701782227, -0.1865699142217636, -0.47664105892181396, -0.0018619834445416927, -0.17632031440734863, -0.008018682710826397, -0.06665337830781937], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')"], "logprobs": [-0.0038653912488371134, -2.038458114839159e-05, -0.00400135014206171, -0.0002224197960458696, -0.018296515569090843, -1.3232143828645349e-05, -1.3708974620385561e-05, -0.026325875893235207, -0.00530419172719121, -0.00029225845355540514, -4.339123915997334e-05, -0.0003256267518736422, -0.00014697425649501383, -0.00020203932945150882], "finish_reason": "stop"}], "metrics": {"energy": 381.2247603435517, "energy_per_token": 4.332099549358542, "time": 9.689451, "time_per_token": 0.11010739772727272}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " response.json()['data']", "tokens": [" response", ".", "json", "()", "['", "data", "']", "\n"], "logprobs": [-1.675360918045044, -0.00010132275929208845, -0.0015698263887315989, -0.04140154644846916, -0.2532607316970825, -0.0013435394503176212, -0.0010977915953844786, -0.050158046185970306], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.49726632237434387, -0.010027037002146244], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='', encoding='utf-8') as f:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "=", "''", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n"], "logprobs": [-0.0004020121123176068, -0.052204567939043045, -0.06874702870845795, -0.00021908267808612436, -0.00016199229867197573, -0.0011295850854367018, -0.0003389737685211003, -0.0004808938247151673, -0.00020430385484360158, -0.3268726170063019, -0.005506110843271017, -0.17275382578372955, -7.688703772146255e-05, -0.007017726078629494, -6.544376083184034e-05, -2.9495229721069336, -0.13418513536453247, -0.001597320195287466, -0.01664489321410656, -0.022469105198979378, -0.019485484808683395, -0.008019628934562206, -0.0021121830213814974, -0.00767946382984519, -0.0003844952443614602, -2.5566518306732178, -0.006001665256917477, -0.00676934327930212], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00022146634000819176, -8.344646857949556e-07, -1.3589766240329482e-05, -0.00028320116689428687, -0.00010108436981681734, -0.00020525732543319464, -0.029594767838716507, -0.0005564333405345678], "finish_reason": "stop"}, {"text": "writerow(['Matched Data'])", "tokens": ["writer", "ow", "(['", "Mat", "ched", " Data", "'])", "\n"], "logprobs": [-0.0005036516231484711, -1.0610023736953735, -0.15692138671875, -0.5042533874511719, -0.0024176198057830334, -0.16031265258789062, -0.010270836763083935, -0.05233761668205261], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.003819077741354704, -2.0146166207268834e-05, -0.004083628766238689, -0.00018869050836656243, -0.020060861483216286, -1.6212332411669195e-05, -1.597391747054644e-05, -0.02792125754058361, -0.004636608529835939, -0.00028606137493625283, -4.95898348162882e-05, -0.00033158526639454067, -0.00012659224739763886, -0.00020692592079285532, -0.399732768535614], "finish_reason": "stop"}], "metrics": {"energy": 336.14714606666575, "energy_per_token": 4.309578795726484, "time": 9.052069, "time_per_token": 0.11605216666666666}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as f:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " f", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -0.1515815258026123, -8.177422569133341e-05, -0.007228530943393707, -7.521823135903105e-05, -0.0705227479338646, -3.6238969187252223e-05, -0.00018380382971372455, -2.898977041244507, -0.0041099851951003075, -0.00648240651935339], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00016473367577418685, -8.344646857949556e-07, -1.2636104656849056e-05, -0.00029130507027730346, -0.00010322991875000298, -0.00018571082910057157, -0.026848474517464638, -0.0005408254801295698], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0003768687602132559, -0.41575536131858826, -0.02844916470348835, -0.010228477418422699, -0.0002548369811847806, -9.30981186684221e-05, -0.002784187439829111, -0.0047372253611683846], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')"], "logprobs": [-0.0035139499232172966, -1.823885577323381e-05, -0.003916927147656679, -0.00018010901112575084, -0.01464134082198143, -1.5258672647178173e-05, -1.5139465176616795e-05, -0.024348510429263115, -0.004616317804902792, -0.0003398079425096512, -5.411955135059543e-05, -0.0003066784702241421, -0.00010394509445177391, -0.00018773700867313892], "finish_reason": "stop"}], "metrics": {"energy": 343.8301906900404, "energy_per_token": 4.646353928243789, "time": 9.49024, "time_per_token": 0.12824648648648648}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as csv_file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -2.0370376110076904, -0.0007830176036804914, -0.40287506580352783, -0.00013326710904948413, -1.6037983894348145, -0.0018849477637559175, -0.0005870526074431837, -0.004086359404027462], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00020632999076042324, -1.0728830375228426e-06, -1.2159273865108844e-05, -0.0002479245886206627, -8.022463589441031e-05, -0.0002277830062666908, -0.03115016594529152, -0.0004661188868340105], "finish_reason": "stop"}, {"text": "writerow(['Matched Data'])", "tokens": ["writer", "ow", "(['", "Mat", "ched", " Data", "'])", "\n"], "logprobs": [-0.0005091324565000832, -1.05057692527771, -0.14531448483467102, -0.5609073042869568, -0.0025811234954744577, -0.17627264559268951, -0.008022111840546131, -0.057025156915187836], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.0036948525812476873, -1.8954096958623268e-05, -0.003612779313698411, -0.00020656836568377912, -0.0214589461684227, -1.4781842764932662e-05, -1.4781842764932662e-05, -0.023972654715180397, -0.004861558321863413, -0.00034528967808000743, -5.221230458118953e-05, -0.0003494605771265924, -0.00010668662434909493, -0.0001919085334520787, -0.3581940531730652], "finish_reason": "stop"}], "metrics": {"energy": 329.96061862659457, "energy_per_token": 4.520008474336912, "time": 9.034134, "time_per_token": 0.1237552602739726}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as csv_file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -2.0370376110076904, -0.0007830176036804914, -0.40287506580352783, -0.00013326710904948413, -1.6037983894348145, -0.0018849477637559175, -0.0005870526074431837, -0.004086359404027462], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00020632999076042324, -1.0728830375228426e-06, -1.2159273865108844e-05, -0.0002479245886206627, -8.022463589441031e-05, -0.0002277830062666908, -0.03115016594529152, -0.0004661188868340105], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0005091324565000832, -0.4304749667644501, -0.019741015508770943, -0.006371304392814636, -0.0002775999018922448, -9.786603914108127e-05, -0.0029951734468340874, -0.004703054670244455], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.0032058770302683115, -1.6331539882230572e-05, -0.003902558935806155, -0.0001941730733960867, -0.01676892675459385, -1.6569954823353328e-05, -1.2874520507466514e-05, -0.025125253945589066, -0.005715575069189072, -0.0002671123365871608, -6.770858453819528e-05, -0.00031192204914987087, -0.0001618731184862554, -0.0001896439935080707, -0.39822593331336975], "finish_reason": "stop"}], "metrics": {"energy": 290.5612732391358, "energy_per_token": 3.980291414234737, "time": 8.19053, "time_per_token": 0.11219904109589042}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " [re.findall(pattern, item['data']) for item in data]", "tokens": [" [", "re", ".", "find", "all", "(", "pattern", ",", " item", "['", "data", "'])", " for", " item", " in", " data", "]", "\n"], "logprobs": [-1.5180277824401855, -0.5824189186096191, -0.00021228920377325267, -0.12466654181480408, -0.000198821333469823, -0.000830901088193059, -0.005852704867720604, -0.0006181474891491234, -0.7453547120094299, -1.6380882263183594, -0.005360633600503206, -0.0227645430713892, -0.0037515040021389723, -0.00027176024741493165, -3.1470757676288486e-05, -0.0006636562757194042, -0.08554352819919586, -0.031205514445900917], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.00041214076918549836, -0.05258828401565552, -0.06934303045272827, -0.00023684080224484205, -0.00014625910262111574, -0.0012166248634457588, -0.0003225283289793879, -0.000563224486541003, -0.0001294529065489769, -0.22633089125156403, -0.003375429892912507, -0.14483873546123505, -8.49926145747304e-05, -0.006464758887887001, -7.343022298300639e-05, -0.06574082374572754, -3.707340147229843e-05, -0.00021050144277978688, -0.517498791217804, -6.09140915912576e-05, -0.04336845502257347, -0.0008104139124043286, -0.005643150769174099], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0001668790791882202, -5.960462772236497e-07, -1.3828182090946939e-05, -0.00021944021864328533, -8.511180931236595e-05, -0.000259365770034492, -0.03570758178830147, -0.0004907834227196872], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0004493180604185909, -0.4290214478969574, -0.021644681692123413, -0.006698771379888058, -0.0002760506176855415, -0.00010239553375868127, -0.002955951262265444, -0.004806749522686005], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.0038784535136073828, -1.9907753085135482e-05, -0.003462155582383275, -0.00019298121333122253, -0.01796170324087143, -1.5020257706055418e-05, -1.5139465176616795e-05, -0.030627382919192314, -0.0056321267038583755, -0.0002797450579237193, -5.3165931603871286e-05, -0.0003333727945573628, -0.00017033556650858372, -0.00019810620869975537, -0.3652306795120239], "finish_reason": "stop"}], "metrics": {"energy": 378.9737294216156, "energy_per_token": 4.074986337866834, "time": 10.090208, "time_per_token": 0.10849686021505377}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " re.findall(pattern, data['data'])", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " data", "['", "data", "'])", "\n"], "logprobs": [-2.1207003593444824, -0.00011252723925281316, -0.006683258805423975, -0.0012454380048438907, -0.0007009433466009796, -0.005555191542953253, -0.0015042430022731423, -0.3779086172580719, -0.26304587721824646, -0.0018300942610949278, -0.007462956011295319, -0.014698080718517303], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -0.1515815258026123, -8.177422569133341e-05, -0.007228530943393707, -7.521823135903105e-05, -0.0705227479338646, -3.6238969187252223e-05, -0.00018380382971372455, -1.0331552028656006, -0.001634215353988111, -0.006188990082591772], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00016473367577418685, -8.344646857949556e-07, -1.2636104656849056e-05, -0.00029130507027730346, -0.00010322991875000298, -0.00018571082910057157, -0.026848474517464638, -0.0005408254801295698], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0003768687602132559, -0.41575536131858826, -0.02844916470348835, -0.010228477418422699, -0.0002548369811847806, -9.30981186684221e-05, -0.002784187439829111, -0.0047372253611683846], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.0035139499232172966, -1.823885577323381e-05, -0.003916927147656679, -0.00018010901112575084, -0.01464134082198143, -1.5258672647178173e-05, -1.5139465176616795e-05, -0.024348510429263115, -0.004616317804902792, -0.0003398079425096512, -5.411955135059543e-05, -0.0003066784702241421, -0.00010394509445177391, -0.00018773700867313892, -0.3819468915462494], "finish_reason": "stop"}], "metrics": {"energy": 374.59607936668385, "energy_per_token": 4.407012698431575, "time": 9.253736, "time_per_token": 0.10886748235294118}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -1.3201487064361572], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -0.1515815258026123, -8.177422569133341e-05, -0.007228530943393707, -7.521823135903105e-05, -0.0705227479338646, -3.6238969187252223e-05, -0.00018380382971372455, -1.0331552028656006, -0.001634215353988111, -0.006188990082591772], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00016473367577418685, -8.344646857949556e-07, -1.2636104656849056e-05, -0.00029130507027730346, -0.00010322991875000298, -0.00018571082910057157, -0.026848474517464638, -0.0005408254801295698], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0003768687602132559, -0.41575536131858826, -0.02844916470348835, -0.010228477418422699, -0.0002548369811847806, -9.30981186684221e-05, -0.002784187439829111, -0.0047372253611683846], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.0035139499232172966, -1.823885577323381e-05, -0.003916927147656679, -0.00018010901112575084, -0.01464134082198143, -1.5258672647178173e-05, -1.5139465176616795e-05, -0.024348510429263115, -0.004616317804902792, -0.0003398079425096512, -5.411955135059543e-05, -0.0003066784702241421, -0.00010394509445177391, -0.00018773700867313892, -0.3819468915462494], "finish_reason": "stop"}], "metrics": {"energy": 305.2192331800462, "energy_per_token": 4.239156016389531, "time": 8.216836, "time_per_token": 0.11412272222222224}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " re.findall(pattern, str(data['data']))", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " str", "(", "data", "['", "data", "']))", "\n"], "logprobs": [-2.1207003593444824, -0.00011252723925281316, -0.006683258805423975, -0.0012454380048438907, -0.0007009433466009796, -0.005555191542953253, -0.0015042430022731423, -1.3947314023971558, -0.0008625839254818857, -0.0022549221757799387, -0.4699186384677887, -0.0008454324561171234, -0.0066104307770729065, -0.023657899349927902], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -0.1515815258026123, -8.177422569133341e-05, -0.007228530943393707, -7.521823135903105e-05, -0.0705227479338646, -3.6238969187252223e-05, -0.00018380382971372455, -1.0331552028656006, -0.001634215353988111, -0.006188990082591772], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00016473367577418685, -8.344646857949556e-07, -1.2636104656849056e-05, -0.00029130507027730346, -0.00010322991875000298, -0.00018571082910057157, -0.026848474517464638, -0.0005408254801295698], "finish_reason": "stop"}, {"text": "writerow(['Matched Data'])", "tokens": ["writer", "ow", "(['", "Mat", "ched", " Data", "'])", "\n"], "logprobs": [-0.0003768687602132559, -1.078543782234192, -0.19253280758857727, -0.5218104720115662, -0.0021526277996599674, -0.1688113510608673, -0.011815563775599003, -0.05557030066847801], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.004581905901432037, -1.9550132492440753e-05, -0.003959317691624165, -0.00019012074335478246, -0.01712113246321678, -1.6927575416048057e-05, -1.1086402082582936e-05, -0.029523242264986038, -0.0048829116858541965, -0.0002454218047205359, -4.3748852476710454e-05, -0.0003071551618631929, -0.0001554368354845792, -0.0002047805901383981, -0.3810877203941345], "finish_reason": "stop"}], "metrics": {"energy": 361.0481312713624, "energy_per_token": 4.149978520360488, "time": 9.680242, "time_per_token": 0.11126714942528736}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " re.findall(pattern, str(data['data']))", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " str", "(", "data", "['", "data", "']))", "\n"], "logprobs": [-2.1207003593444824, -0.00011252723925281316, -0.006683258805423975, -0.0012454380048438907, -0.0007009433466009796, -0.005555191542953253, -0.0015042430022731423, -1.3947314023971558, -0.0008625839254818857, -0.0022549221757799387, -0.4699186384677887, -0.0008454324561171234, -0.0066104307770729065, -0.023657899349927902], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as f:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " f", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -0.1515815258026123, -8.177422569133341e-05, -0.007228530943393707, -7.521823135903105e-05, -0.0705227479338646, -3.6238969187252223e-05, -0.00018380382971372455, -2.898977041244507, -0.0041099851951003075, -0.00648240651935339], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00016473367577418685, -8.344646857949556e-07, -1.2636104656849056e-05, -0.00029130507027730346, -0.00010322991875000298, -0.00018571082910057157, -0.026848474517464638, -0.0005408254801295698], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0003768687602132559, -0.41575536131858826, -0.02844916470348835, -0.010228477418422699, -0.0002548369811847806, -9.30981186684221e-05, -0.002784187439829111, -0.0047372253611683846], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0035139499232172966, -1.823885577323381e-05, -0.003916927147656679, -0.00018010901112575084, -0.01464134082198143, -1.5258672647178173e-05, -1.5139465176616795e-05, -0.024348510429263115, -0.004616317804902792, -0.0003398079425096512, -5.411955135059543e-05, -0.0003066784702241421, -0.00010394509445177391, -0.00018773700867313892, -1.7888644933700562, -1.2755313036905136e-05, -2.0265558760002023e-06, -9.775113539944869e-06, -5.722029527532868e-06, -0.09367841482162476], "finish_reason": "stop"}], "metrics": {"energy": 384.65708641624445, "energy_per_token": 4.181055287133092, "time": 9.888732, "time_per_token": 0.10748621739130435}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " response.json()['data']", "tokens": [" response", ".", "json", "()", "['", "data", "']", "\n"], "logprobs": [-1.675360918045044, -0.00010132275929208845, -0.0015698263887315989, -0.04140154644846916, -0.2532607316970825, -0.0013435394503176212, -0.0010977915953844786, -0.050158046185970306], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.49726632237434387, -0.010027037002146244], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.0004020121123176068, -0.052204567939043045, -0.06874702870845795, -0.00021908267808612436, -0.00016199229867197573, -0.0011295850854367018, -0.0003389737685211003, -0.0004808938247151673, -0.00020430385484360158, -0.3268726170063019, -0.005506110843271017, -0.17275382578372955, -7.688703772146255e-05, -0.007017726078629494, -6.544376083184034e-05, -0.054156236350536346, -3.611976353568025e-05, -0.00017629499780014157, -0.6240019798278809, -8.082063141046092e-05, -0.05330735445022583, -0.0007776573766022921, -0.005655360408127308], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00022146634000819176, -8.344646857949556e-07, -1.3589766240329482e-05, -0.00028320116689428687, -0.00010108436981681734, -0.00020525732543319464, -0.029594767838716507, -0.0005564333405345678], "finish_reason": "stop"}, {"text": "writerow(['Matched Data'])", "tokens": ["writer", "ow", "(['", "Mat", "ched", " Data", "'])", "\n"], "logprobs": [-0.0005036516231484711, -1.0610023736953735, -0.15692138671875, -0.5042533874511719, -0.0024176198057830334, -0.16031265258789062, -0.010270836763083935, -0.05233761668205261], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')"], "logprobs": [-0.003819077741354704, -2.0146166207268834e-05, -0.004083628766238689, -0.00018869050836656243, -0.020060861483216286, -1.6212332411669195e-05, -1.597391747054644e-05, -0.02792125754058361, -0.004636608529835939, -0.00028606137493625283, -4.95898348162882e-05, -0.00033158526639454067, -0.00012659224739763886, -0.00020692592079285532], "finish_reason": "stop"}], "metrics": {"energy": 329.63648510742166, "energy_per_token": 4.578284515380856, "time": 8.638385, "time_per_token": 0.11997756944444443}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -0.1515815258026123, -8.177422569133341e-05, -0.007228530943393707, -7.521823135903105e-05, -0.0705227479338646, -3.6238969187252223e-05, -0.00018380382971372455, -1.0331552028656006, -0.001634215353988111, -0.006188990082591772], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00016473367577418685, -8.344646857949556e-07, -1.2636104656849056e-05, -0.00029130507027730346, -0.00010322991875000298, -0.00018571082910057157, -0.026848474517464638, -0.0005408254801295698], "finish_reason": "stop"}, {"text": "writerow(['Pattern Match'])", "tokens": ["writer", "ow", "(['", "Pattern", " Match", "'])", "\n"], "logprobs": [-0.0003768687602132559, -1.078543782234192, -0.19253280758857727, -2.5381298065185547, -2.517210006713867, -0.019210360944271088, -0.03471693396568298], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')"], "logprobs": [-0.004581905901432037, -1.9550132492440753e-05, -0.003959317691624165, -0.00019012074335478246, -0.01712113246321678, -1.6927575416048057e-05, -1.1086402082582936e-05, -0.029523242264986038, -0.0048829116858541965, -0.0002454218047205359, -4.3748852476710454e-05, -0.0003071551618631929, -0.0001554368354845792, -0.0002047805901383981], "finish_reason": "stop"}], "metrics": {"energy": 317.2388054084779, "energy_per_token": 4.345737060390109, "time": 8.419736, "time_per_token": 0.11533884931506849}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', mode='w', newline='') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " mode", "='", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -1.484460473060608, -0.0018089136574417353, -0.005295179784297943, -0.051780182868242264, -4.386805812828243e-05, -0.006712744012475014, -5.686121585313231e-05, -0.23156781494617462, -3.194758028257638e-05, -0.00015829740732442588, -0.457997590303421, -6.818538531661034e-05, -0.1892429143190384, -0.0012231733417138457, -0.00927248690277338], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0001486429391661659, -1.4305104514278355e-06, -1.4543427823809907e-05, -0.0002675890573300421, -0.00010918975021922961, -0.00022349244682118297, -0.02838057093322277, -0.000494715350214392], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.00045813556062057614, -0.35511714220046997, -0.02351166307926178, -0.009274731390178204, -0.0002240883477497846, -7.939023635117337e-05, -0.003048655577003956, -0.004429173190146685], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.004361403174698353, -1.9311717551317997e-05, -0.005368578247725964, -0.00023040501400828362, -0.019234567880630493, -1.728519782773219e-05, -1.3589766240329482e-05, -0.02554541453719139, -0.004842221271246672, -0.00025662468397058547, -4.589452510117553e-05, -0.0003358753747306764, -0.00010942813969450071, -0.0001971527235582471, -0.3948291540145874], "finish_reason": "stop"}], "metrics": {"energy": 314.9575448932647, "energy_per_token": 4.037917242221342, "time": 8.610379, "time_per_token": 0.11038947435897437}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -0.1515815258026123, -8.177422569133341e-05, -0.007228530943393707, -7.521823135903105e-05, -0.0705227479338646, -3.6238969187252223e-05, -0.00018380382971372455, -1.0331552028656006, -0.001634215353988111, -0.006188990082591772], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00016473367577418685, -8.344646857949556e-07, -1.2636104656849056e-05, -0.00029130507027730346, -0.00010322991875000298, -0.00018571082910057157, -0.026848474517464638, -0.0005408254801295698], "finish_reason": "stop"}, {"text": "writerow(['Matched Data'])", "tokens": ["writer", "ow", "(['", "Mat", "ched", " Data", "'])", "\n"], "logprobs": [-0.0003768687602132559, -1.078543782234192, -0.19253280758857727, -0.5218104720115662, -0.0021526277996599674, -0.1688113510608673, -0.011815563775599003, -0.05557030066847801], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.004581905901432037, -1.9550132492440753e-05, -0.003959317691624165, -0.00019012074335478246, -0.01712113246321678, -1.6927575416048057e-05, -1.1086402082582936e-05, -0.029523242264986038, -0.0048829116858541965, -0.0002454218047205359, -4.3748852476710454e-05, -0.0003071551618631929, -0.0001554368354845792, -0.0002047805901383981, -1.953845500946045, -1.2040065485052764e-05, -2.145764938177308e-06, -6.6756979322235566e-06, -4.172316494077677e-06, -0.09523347020149231], "finish_reason": "stop"}], "metrics": {"energy": 346.3898164196013, "energy_per_token": 4.329872705245016, "time": 9.052638, "time_per_token": 0.113157975}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -0.1515815258026123, -8.177422569133341e-05, -0.007228530943393707, -7.521823135903105e-05, -0.0705227479338646, -3.6238969187252223e-05, -0.00018380382971372455, -1.0331552028656006, -0.001634215353988111, -0.006188990082591772], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00016473367577418685, -8.344646857949556e-07, -1.2636104656849056e-05, -0.00029130507027730346, -0.00010322991875000298, -0.00018571082910057157, -0.026848474517464638, -0.0005408254801295698], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0003768687602132559, -0.41575536131858826, -0.02844916470348835, -0.010228477418422699, -0.0002548369811847806, -9.30981186684221e-05, -0.002784187439829111, -0.0047372253611683846], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.0035139499232172966, -1.823885577323381e-05, -0.003916927147656679, -0.00018010901112575084, -0.01464134082198143, -1.5258672647178173e-05, -1.5139465176616795e-05, -0.024348510429263115, -0.004616317804902792, -0.0003398079425096512, -5.411955135059543e-05, -0.0003066784702241421, -0.00010394509445177391, -0.00018773700867313892, -0.3819468915462494], "finish_reason": "stop"}], "metrics": {"energy": 339.04277160072326, "energy_per_token": 4.520570288009643, "time": 8.417062, "time_per_token": 0.11222749333333333}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.content)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "content", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -1.4276524782180786, -0.3277910351753235, -1.1285080909729004, -0.0017149040941148996, -0.0012677022023126483, -0.0495416484773159], "finish_reason": "stop"}, {"text": " [re.findall(pattern, item) for item in data[\"data\"]]", "tokens": [" [", "re", ".", "find", "all", "(", "pattern", ",", " item", ")", " for", " item", " in", " data", "[", "\"", "data", "\"", "]]", "\n"], "logprobs": [-1.392284631729126, -0.5760770440101624, -0.00018714107864070684, -0.11993581056594849, -0.00016723664884921163, -0.0007288183551281691, -0.006222161930054426, -0.0005287918029353023, -0.7707828879356384, -0.3499261140823364, -0.002163333585485816, -0.0010346779599785805, -9.107174992095679e-05, -0.001610055100172758, -1.4518800973892212, -0.004347634967416525, -0.001767264911904931, -0.00018845213344320655, -0.023037409409880638, -0.025100260972976685], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as f:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " f", ":", "\n"], "logprobs": [-0.000403084559366107, -0.057576749473810196, -0.06595645844936371, -0.00025900822947733104, -0.0001842805795604363, -0.0011132716899737716, -0.00032693761750124395, -0.0004956685588695109, -0.00019405389321036637, -0.2728883922100067, -0.004049673210829496, -0.16494162380695343, -7.045020902296528e-05, -0.006270614918321371, -6.305972783593461e-05, -0.06425969302654266, -3.5523738915799186e-05, -0.0001911934232339263, -2.675204277038574, -0.00436164066195488, -0.008006620220839977], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00017855956684798002, -5.960462772236497e-07, -1.2636104656849056e-05, -0.0002847504511009902, -9.500529267825186e-05, -0.00023278864682652056, -0.035078298300504684, -0.0005272428970783949], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0004060635983478278, -0.41316547989845276, -0.016496220603585243, -0.007484372239559889, -0.00021217002358753234, -7.795983401592821e-05, -0.0028899831231683493, -0.005016004201024771], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.003916214685887098, -2.062299427052494e-05, -0.0027764602564275265, -0.00021801002731081098, -0.017485277727246284, -1.4781842764932662e-05, -1.3470558769768104e-05, -0.0228386502712965, -0.005325772799551487, -0.00029237763374112546, -6.770858453819528e-05, -0.0003327769518364221, -0.00018857131362892687, -0.0002213471452705562, -0.4182937741279602], "finish_reason": "stop"}], "metrics": {"energy": 373.3099961700439, "energy_per_token": 4.014085980323053, "time": 10.104366, "time_per_token": 0.10864909677419356}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " [re.findall(pattern, string) for string in data['data']]", "tokens": [" [", "re", ".", "find", "all", "(", "pattern", ",", " string", ")", " for", " string", " in", " data", "['", "data", "']", "]", "\n"], "logprobs": [-1.5180277824401855, -0.5824189186096191, -0.00021228920377325267, -0.12466654181480408, -0.000198821333469823, -0.000830901088193059, -0.005852704867720604, -0.0006181474891491234, -3.4983034133911133, -0.03128281235694885, -0.013020613230764866, -0.002514536026865244, -0.0005716835148632526, -0.003586647566407919, -0.2765710651874542, -0.0013302058214321733, -0.00048792376765049994, -0.061214156448841095, -0.016058631241321564], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.00041214076918549836, -0.05258828401565552, -0.06934303045272827, -0.00023684080224484205, -0.00014625910262111574, -0.0012166248634457588, -0.0003225283289793879, -0.000563224486541003, -0.0001294529065489769, -0.22633089125156403, -0.003375429892912507, -0.14483873546123505, -8.49926145747304e-05, -0.006464758887887001, -7.343022298300639e-05, -0.06574082374572754, -3.707340147229843e-05, -0.00021050144277978688, -0.517498791217804, -6.09140915912576e-05, -0.04336845502257347, -0.0008104139124043286, -0.005643150769174099], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0001668790791882202, -5.960462772236497e-07, -1.3828182090946939e-05, -0.00021944021864328533, -8.511180931236595e-05, -0.000259365770034492, -0.03570758178830147, -0.0004907834227196872], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.0004493180604185909, -0.4290214478969574, -0.021644681692123413, -0.006698771379888058, -0.0002760506176855415, -0.00010239553375868127, -0.002955951262265444, -0.004806749522686005], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0038784535136073828, -1.9907753085135482e-05, -0.003462155582383275, -0.00019298121333122253, -0.01796170324087143, -1.5020257706055418e-05, -1.5139465176616795e-05, -0.030627382919192314, -0.0056321267038583755, -0.0002797450579237193, -5.3165931603871286e-05, -0.0003333727945573628, -0.00017033556650858372, -0.00019810620869975537, -1.9737550020217896, -1.6689160474925302e-05, -2.50339189733495e-06, -7.271740287251305e-06, -4.529942543740617e-06, -0.10252499580383301], "finish_reason": "stop"}], "metrics": {"energy": 411.1832258567811, "energy_per_token": 4.153365917745264, "time": 10.525219, "time_per_token": 0.10631534343434343}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)['data']", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "['", "data", "']", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -0.3448679447174072, -0.001334372558631003, -0.0009984752396121621, -0.04860708862543106], "finish_reason": "stop"}, {"text": " [match.group(0) for item in data[\"data\"] for match in re.finditer(pattern, item)]", "tokens": [" [", "match", ".", "group", "(", "0", ")", " for", " item", " in", " data", "[", "\"", "data", "\"", "]", " for", " match", " in", " re", ".", "find", "iter", "(", "pattern", ",", " item", ")]", "\n"], "logprobs": [-1.5180277824401855, -2.635406970977783, -0.43843093514442444, -0.02910822443664074, -0.8406380414962769, -0.007319064810872078, -0.00017474555352237076, -0.024626877158880234, -0.6957314014434814, -0.0013944911770522594, -0.0019239740213379264, -2.114232063293457, -0.004321047570556402, -0.0019436056027188897, -0.00021407696476671845, -0.0008301864145323634, -0.15537023544311523, -0.012318599037826061, -0.001639213995076716, -0.00279845274053514, -3.8742269680369645e-05, -0.00019000156316906214, -2.658331868587993e-05, -0.0003203832311555743, -0.0028593153692781925, -0.0008362610242329538, -0.18863116204738617, -0.027236010879278183, -0.01123188529163599], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.0003948624071199447, -0.05667039752006531, -0.055926576256752014, -0.00021562635083682835, -0.0001245659514097497, -0.0011536378879100084, -0.00032145579461939633, -0.0004935238393954933, -0.00016306500765495002, -0.32870423793792725, -0.003941031638532877, -0.14879818260669708, -8.11782301752828e-05, -0.006105462554842234, -5.376194530981593e-05, -0.06712500751018524, -3.576214658096433e-05, -0.00020001317898277193, -0.5427296161651611, -6.925819616299123e-05, -0.043488189578056335, -0.0006403064471669495, -0.005642083939164877], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00015186110977083445, -1.1920922133867862e-06, -1.1801649634435307e-05, -0.00024291902082040906, -0.00012003655137959868, -0.00020251607929822057, -0.02918637916445732, -0.0004962643142789602], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.00043823651503771544, -0.41858693957328796, -0.023696666583418846, -0.004135034512728453, -0.00021217002358753234, -7.891343557275832e-05, -0.0025938458275049925, -0.004491004627197981], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.004270719364285469, -1.8596476365928538e-05, -0.003921676892787218, -0.00019214690837543458, -0.01603657566010952, -1.6093124941107817e-05, -1.549708758830093e-05, -0.024578724056482315, -0.005706092808395624, -0.00030429501202888787, -5.400034933700226e-05, -0.0003103728231508285, -9.440929716220126e-05, -0.0001805857609724626, -0.3761007487773895], "finish_reason": "stop"}], "metrics": {"energy": 416.36439742279043, "energy_per_token": 4.003503821372985, "time": 11.150874, "time_per_token": 0.1072199423076923}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -1.3201487064361572], "finish_reason": "stop"}, {"text": " re.findall(pattern, data['data'])", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " data", "['", "data", "'])", "\n"], "logprobs": [-2.1207003593444824, -0.00011252723925281316, -0.006683258805423975, -0.0012454380048438907, -0.0007009433466009796, -0.005555191542953253, -0.0015042430022731423, -0.3779086172580719, -0.26304587721824646, -0.0018300942610949278, -0.007462956011295319, -0.014698080718517303], "finish_reason": "stop"}, {"text": " open('matched_data.csv', mode='w', newline='') as file:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " mode", "='", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -1.484460473060608, -0.0018089136574417353, -0.005295179784297943, -0.051780182868242264, -4.386805812828243e-05, -0.006712744012475014, -5.686121585313231e-05, -0.23156781494617462, -3.194758028257638e-05, -0.00015829740732442588, -1.0693638324737549, -0.0016130305593833327, -0.012235700152814388], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.0001486429391661659, -1.4305104514278355e-06, -1.4543427823809907e-05, -0.0002675890573300421, -0.00010918975021922961, -0.00022349244682118297, -0.02838057093322277, -0.000494715350214392], "finish_reason": "stop"}, {"text": "writerows(matched_data)", "tokens": ["writer", "ows", "(", "matched", "_", "data", ")", "\n"], "logprobs": [-0.00045813556062057614, -0.35511714220046997, -0.02351166307926178, -0.009274731390178204, -0.0002240883477497846, -7.939023635117337e-05, -0.003048655577003956, -0.004429173190146685], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.004361403174698353, -1.9311717551317997e-05, -0.005368578247725964, -0.00023040501400828362, -0.019234567880630493, -1.728519782773219e-05, -1.3589766240329482e-05, -0.02554541453719139, -0.004842221271246672, -0.00025662468397058547, -4.589452510117553e-05, -0.0003358753747306764, -0.00010942813969450071, -0.0001971527235582471, -0.3948291540145874], "finish_reason": "stop"}], "metrics": {"energy": 370.89323917198186, "energy_per_token": 4.468593243035926, "time": 10.103048, "time_per_token": 0.12172346987951807}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -1.3201487064361572], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w', newline='') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -0.1515815258026123, -8.177422569133341e-05, -0.007228530943393707, -7.521823135903105e-05, -0.0705227479338646, -3.6238969187252223e-05, -0.00018380382971372455, -0.5352265238761902, -8.082063141046092e-05, -0.03833320364356041, -0.0006505518686026335, -0.0052803573198616505], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00016473367577418685, -8.344646857949556e-07, -1.2636104656849056e-05, -0.00029130507027730346, -0.00010322991875000298, -0.00018571082910057157, -0.026848474517464638, -0.0005408254801295698], "finish_reason": "stop"}, {"text": "writerow(['Matched Data'])", "tokens": ["writer", "ow", "(['", "Mat", "ched", " Data", "'])", "\n"], "logprobs": [-0.0003768687602132559, -1.078543782234192, -0.19253280758857727, -0.5218104720115662, -0.0021526277996599674, -0.1688113510608673, -0.011815563775599003, -0.05557030066847801], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.004581905901432037, -1.9550132492440753e-05, -0.003959317691624165, -0.00019012074335478246, -0.01712113246321678, -1.6927575416048057e-05, -1.1086402082582936e-05, -0.029523242264986038, -0.0048829116858541965, -0.0002454218047205359, -4.3748852476710454e-05, -0.0003071551618631929, -0.0001554368354845792, -0.0002047805901383981, -0.3810877203941345], "finish_reason": "stop"}], "metrics": {"energy": 336.54841885948196, "energy_per_token": 4.547951606209216, "time": 9.241669, "time_per_token": 0.12488741891891891}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.text)", "tokens": [" json", ".", "loads", "(", "response", ".", "text", ")", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -0.2800847589969635, -0.029621733352541924, -1.3201487064361572], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45890000462532043, -0.012089078314602375], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.0004601611872203648, -0.05492337793111801, -0.06714897602796555, -0.00022468426323030144, -0.00014757021563127637, -0.0009658439084887505, -0.0002554328821133822, -0.0005041282274760306, -0.0001280225842492655, -0.2597099542617798, -0.004000400193035603, -2.0370376110076904, -0.0007830176036804914, -0.40287506580352783, -0.00013326710904948413, -0.22910358011722565, -0.0028348281048238277, -0.005741295870393515], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00020632999076042324, -1.0728830375228426e-06, -1.2159273865108844e-05, -0.0002479245886206627, -8.022463589441031e-05, -0.0002277830062666908, -0.03115016594529152, -0.0004661188868340105], "finish_reason": "stop"}, {"text": "writerow(['Pattern'])", "tokens": ["writer", "ow", "(['", "Pattern", "'])", "\n"], "logprobs": [-0.0005091324565000832, -1.05057692527771, -0.14531448483467102, -2.450227737426758, -0.9429721832275391, -0.0288386307656765], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.0036948525812476873, -1.8954096958623268e-05, -0.003612779313698411, -0.00020656836568377912, -0.0214589461684227, -1.4781842764932662e-05, -1.4781842764932662e-05, -0.023972654715180397, -0.004861558321863413, -0.00034528967808000743, -5.221230458118953e-05, -0.0003494605771265924, -0.00010668662434909493, -0.0001919085334520787, -0.3581940531730652], "finish_reason": "stop"}], "metrics": {"energy": 292.11225713539113, "energy_per_token": 4.359884434856584, "time": 8.004807, "time_per_token": 0.11947473134328357}}
{"outputs": [{"text": " requests.get(API_URL)", "tokens": [" requests", ".", "get", "(", "API", "_", "URL", ")", "\n"], "logprobs": [-0.0033977655693888664, -0.0005054388311691582, -0.003059589536860585, -0.0020786363165825605, -0.017145154997706413, -1.728519782773219e-05, -4.887569048150908e-06, -0.025758739560842514, -0.049833621829748154], "finish_reason": "stop"}, {"text": " json.loads(response.content)", "tokens": [" json", ".", "loads", "(", "response", ".", "content", ")", "\n"], "logprobs": [-0.22923211753368378, -3.099393507000059e-05, -0.0009400001727044582, -0.00021562635083682835, -0.0012643685331568122, -0.0007541911327280104, -1.4276524782180786, -0.3277910351753235, -0.5020433068275452], "finish_reason": "stop"}, {"text": " [re.findall(pattern, item) for item in data['data'] if re.search(pattern, item)]", "tokens": [" [", "re", ".", "find", "all", "(", "pattern", ",", " item", ")", " for", " item", " in", " data", "['", "data", "']", " if", " re", ".", "search", "(", "pattern", ",", " item", ")]", "\n"], "logprobs": [-1.392284631729126, -0.5760770440101624, -0.00018714107864070684, -0.11993581056594849, -0.00016723664884921163, -0.0007288183551281691, -0.006222161930054426, -0.0005287918029353023, -0.7707828879356384, -0.3499261140823364, -0.002163333585485816, -0.0010346779599785805, -9.107174992095679e-05, -0.001610055100172758, -0.36768975853919983, -0.001374253653921187, -0.00034564718953333795, -2.6865880489349365, -0.020284704864025116, -4.8397800128441304e-05, -0.5816817879676819, -0.0001734344696160406, -0.0008780676289461553, -4.5536911784438416e-05, -0.001689555705524981, -0.05602452903985977, -0.01507109496742487], "finish_reason": "stop"}, {"text": " open('matched_data.csv', 'w') as csvfile:", "tokens": [" open", "('", "matched", "_", "data", ".", "csv", "'", ",", " '", "w", "')", " as", " c", "sv", "file", ":", "\n"], "logprobs": [-0.000403084559366107, -0.057576749473810196, -0.06595645844936371, -0.00025900822947733104, -0.0001842805795604363, -0.0011132716899737716, -0.00032693761750124395, -0.0004956685588695109, -0.00019405389321036637, -0.2728883922100067, -0.004049673210829496, -1.9569758176803589, -0.0007809926173649728, -0.367256224155426, -0.00014435203047469258, -0.24369880557060242, -0.003653044579550624, -0.006299282889813185], "finish_reason": "stop"}, {"text": " csv.writer(f)", "tokens": [" c", "sv", ".", "writer", "(", "f", ")", "\n"], "logprobs": [-0.00016985881666187197, -8.344646857949556e-07, -1.5258672647178173e-05, -0.00021789084712509066, -9.178694017464295e-05, -0.00019393471302464604, -0.03143242374062538, -0.0005333193112164736], "finish_reason": "stop"}, {"text": "writerow(['Matched Data'])", "tokens": ["writer", "ow", "(['", "Mat", "ched", " Data", "'])", "\n"], "logprobs": [-0.00038628268521279097, -1.1092301607131958, -0.17553308606147766, -0.5365802645683289, -0.0021029042545706034, -0.17418022453784943, -0.009529577568173409, -0.05622829496860504], "finish_reason": "stop"}, {"text": " os.path.abspath('matched_data.csv')", "tokens": [" os", ".", "path", ".", "ab", "sp", "ath", "('", "matched", "_", "data", ".", "csv", "')", "\n"], "logprobs": [-0.00398615188896656, -1.823885577323381e-05, -0.0032007675617933273, -0.00015245705435518175, -0.020213212817907333, -1.7404405298293568e-05, -1.3828182090946939e-05, -0.02479609288275242, -0.005727546755224466, -0.0002889215829782188, -6.842378934379667e-05, -0.0003164505760651082, -7.557583012385294e-05, -0.000205018965061754, -0.44073858857154846], "finish_reason": "stop"}], "metrics": {"energy": 377.4672847499848, "energy_per_token": 4.015609412233881, "time": 10.095837, "time_per_token": 0.10740252127659573}}
