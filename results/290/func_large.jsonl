{"outputs": [{"text": "# Initialize a Counter object to store word frequencies\n    word_counter = Counter()\n\n    # Iterate over the files in the specified directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith(\".txt\"):\n            # Load the file and process its content\n            with open(os.path.join(directory_path, filename), \"r\") as file:\n                # Read the entire content of the file\n                content = file.read()\n                # Convert content to lowercase\n                content = content.lower()\n\n                # Split the content into words\n                words = content.split()\n\n                # Update the word frequencies in the Counter object\n                word_counter.update(words)\n\n    # Iterate over the words in the Counter object\n    unique_word_count = 0\n    for word in word_counter:\n        # Check if the word is not a stopword\n        if word not in STOPWORDS:\n            unique_word_count += 1\n\n    return unique_word_count", "tokens": ["#", " Initialize", " a", " Counter", " object", " to", " store", " word", " frequencies", "\n", "    ", "word", "_", "counter", " =", " Counter", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " files", " in", " the", " specified", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "\n", "            ", "#", " Load", " the", " file", " and", " process", " its", " content", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", " \"", "r", "\"", ")", " as", " file", ":", "\n", "                ", "#", " Read", " the", " entire", " content", " of", " the", " file", "\n", "                ", "content", " =", " file", ".", "read", "()", "\n", "                ", "#", " Convert", " content", " to", " lower", "case", "\n", "                ", "content", " =", " content", ".", "lower", "()", "\n", "\n", "                ", "#", " Split", " the", " content", " into", " words", "\n", "                ", "words", " =", " content", ".", "split", "()", "\n", "\n", "                ", "#", " Update", " the", " word", " frequencies", " in", " the", " Counter", " object", "\n", "                ", "word", "_", "counter", ".", "update", "(", "words", ")", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " words", " in", " the", " Counter", " object", "\n", "    ", "unique", "_", "word", "_", "count", " =", " ", "0", "\n", "    ", "for", " word", " in", " word", "_", "counter", ":", "\n", "        ", "#", " Check", " if", " the", " word", " is", " not", " a", " stop", "word", "\n", "        ", "if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "            ", "unique", "_", "word", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " unique", "_", "word", "_", "count"], "logprobs": [-1.381628394126892, -0.8716287612915039, -1.4880459308624268, -0.24476145207881927, -0.20519240200519562, -0.14883239567279816, -1.1015303134918213, -0.6599792838096619, -0.8968366980552673, -0.025507764890789986, -0.0006436422117985785, -0.548640787601471, -0.021250536665320396, -0.68416827917099, -0.001210909802466631, -0.001555781695060432, -0.001263773301616311, -0.0008060067193582654, -0.04640786722302437, -0.00040642108069732785, -0.01506264042109251, -0.5229247808456421, -0.0007778956205584109, -0.23341812193393707, -3.0141115188598633, -0.17579729855060577, -0.017106015235185623, -0.002934081247076392, -1.5209158658981323, -0.0009111781837418675, -0.017899058759212494, -0.00026651646476238966, -0.013738124631345272, -0.36605411767959595, -0.00018892886873800308, -0.004960136022418737, -8.821448318485636e-06, -0.004193560685962439, 0.0, -0.0004065402317792177, -0.0004646890447475016, -9.154854342341423e-05, -1.1920922133867862e-06, -0.000205018965061754, -0.0016592082101851702, -0.008769924752414227, -0.3913131356239319, -0.010947051458060741, -0.0002498314715921879, -0.002901631873100996, -1.1920928244535389e-07, 0.0, -2.1466124057769775, -0.0025081150233745575, -0.0019408691441640258, -0.0003116837178822607, -2.0861407392658293e-05, -0.0046096728183329105, -0.34156057238578796, -0.005266008898615837, -1.2004284858703613, -2.4917895793914795, -0.21940761804580688, -0.5909269452095032, -2.9630320072174072, -3.7743499279022217, -0.7291452884674072, -1.6076419353485107, -0.0300204586237669, -0.000710592488758266, -0.7637330293655396, -0.00022921319759916514, -0.0013716346584260464, -0.05815278738737106, -3.6954811548639555e-06, -1.3112935448589269e-05, -9.536738616588991e-07, -8.093983342405409e-05, -3.862306402879767e-05, -0.00026306029758416116, -2.9205850296420977e-05, -9.536738616588991e-07, -5.2569914259947836e-05, -0.0011862630490213633, -0.014641106128692627, -3.683499380713329e-05, -0.872648298740387, -0.006698534358292818, -0.0012013844680041075, -0.7027467489242554, -2.5033637939486653e-05, -0.12673640251159668, -0.0022333934903144836, -0.00047886825632303953, -0.0012635351158678532, -1.9771201610565186, -0.7648824453353882, -0.13146598637104034, -3.601738452911377, -1.5564796924591064, -0.040881119668483734, -0.0024725599214434624, -0.0007518087513744831, -0.13408464193344116, -0.0002712835557758808, -0.17347750067710876, -0.0002980979916173965, -0.0004447901446837932, -3.886147169396281e-05, -1.2397689715726301e-05, -0.0009411911014467478, -0.017409132793545723, -0.7267985343933105, -0.03285485506057739, -0.8765187859535217, -1.9016082286834717, -0.013940935023128986, -0.010593844577670097, -0.01888088323175907, -1.1472141742706299, -0.00038795097498223186, -0.09426917880773544, -0.061760082840919495, -0.00459341611713171, -5.113947918289341e-05, -0.0024370038881897926, -0.0001454247540095821, -0.0009553635609336197, -2.8406178951263428, -0.020485958084464073, -0.010544302873313427, -0.4940517842769623, -0.10688461363315582, -0.02987191081047058, -0.013425306417047977, -0.2396581619977951, -0.3817705512046814, -0.0003626880934461951, -0.04278874769806862, -0.004330187104642391, -0.03000865876674652, -0.000102037942269817, -0.0017003853572532535, -0.009874071925878525, -0.0016553997993469238, -0.17904233932495117, -0.0007879013428464532, -0.012501918710768223, -1.968155860900879, -0.1483597606420517, -0.7249951362609863, -1.1578503847122192, -0.6151503324508667, -0.01647440902888775, -0.10239630192518234, -0.5186213254928589, -0.00930106919258833, -0.0002636561985127628, -0.4485896825790405, -2.753696753643453e-05, -0.0004213160718791187, -0.0017437029164284468, -1.1920922133867862e-06, -0.017718132585287094, -0.09648025780916214, -8.022463589441031e-05, -0.0006935574929229915, -0.009319611825048923, -0.009942767210304737, -0.042769789695739746, -3.776484966278076, -0.0015582811320200562, -0.015538694337010384, -0.16533313691616058, -1.4516232013702393, -0.2911706566810608, -0.019982341676950455, -0.022521205246448517, -0.034193821251392365, -0.14182542264461517, -0.000507464399561286, -0.9808216691017151, -0.004133966285735369, -0.9989230036735535, -0.003587953979149461, -0.07742930948734283, -0.0013071097200736403, -0.027466140687465668, -0.00013720047718379647, -0.020102808251976967, -0.040936850011348724, -0.03327397257089615, -0.0020951719488948584, -1.3427424430847168, -0.006953209172934294, -1.6689286894688848e-06, -4.6491513785440475e-06, -0.4264194965362549, -0.0006484074983745813, -0.004240094218403101, -0.2826157510280609, -0.20929506421089172, -0.003859334858134389, -0.039561282843351364, -0.006261730100959539, -0.0020842275116592646, -0.26946401596069336, -0.03458428010344505, -0.003411427838727832, -0.39066606760025024, -0.04768676683306694, -0.00033682872890494764, -0.003807914676144719, -0.006940305233001709, -0.0438547283411026, -4.887569048150908e-06, -0.0005270045949146152, 0.0, -7.450303382938728e-05, 0.0, 0.0, -0.008129129186272621, -0.0006571040721610188, -0.0013947292463853955, -0.3567964732646942, -1.4305104514278355e-06, -1.3470558769768104e-05, -2.264974000354414e-06, -1.883488948806189e-05, -0.0008266131044365466, -0.009906886145472527, -2.753696753643453e-05, -0.031128326430916786, -0.047264326363801956, -0.0021002870053052902, -0.43415161967277527, -0.004866540897637606, -1.311301275563892e-06, -3.099436753473128e-06, -1.1324817933200393e-05, -1.2278481335670222e-05], "finish_reason": "stop"}], "metrics": {"energy": 961.4309799938208, "energy_per_token": 3.989340165949464, "time": 24.48755, "time_per_token": 0.10160809128630705}}
{"outputs": [{"text": "filepaths = [filepath for filepath in os.listdir(directory_path) if filepath.endswith('.txt')]\n    if not filepaths:\n        print(\"No files found in the directory\")\n        return\n\n    words = []\n\n    for filepath in filepaths:\n        with open(os.path.join(directory_path, filepath), \"r\", encoding=\"utf-8\") as file:\n            words.extend([word for word in file.read().split() if word.casefold() not in STOPWORDS])\n\n    word_counts = Counter(words)\n    unique_word_count = len(word_counts)\n\n    return unique_word_count", "tokens": ["file", "paths", " =", " [", "file", "path", " for", " file", "path", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", ")", " if", " file", "path", ".", "end", "sw", "ith", "('", ".", "txt", "')", "]", "\n", "    ", "if", " not", " file", "paths", ":", "\n", "        ", "print", "(", "\"", "No", " files", " found", " in", " the", " directory", "\"", ")", "\n", "        ", "return", "\n", "\n", "    ", "words", " =", " []", "\n", "\n", "    ", "for", " file", "path", " in", " file", "paths", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "path", ")", ",", " \"", "r", "\"", ",", " encoding", "=", "\"", "utf", "-", "8", "\"", ")", " as", " file", ":", "\n", "            ", "words", ".", "extend", "([", "word", " for", " word", " in", " file", ".", "read", "()", ".", "split", "()", " if", " word", ".", "case", "fold", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "\n", "    ", "word", "_", "counts", " =", " Counter", "(", "words", ")", "\n", "    ", "unique", "_", "word", "_", "count", " =", " len", "(", "word", "_", "counts", ")", "\n", "\n", "    ", "return", " unique", "_", "word", "_", "count", "\n", "\n", "def"], "logprobs": [-3.2261765003204346, -3.081329107284546, -0.015201312489807606, -0.4603860080242157, -2.3806259632110596, -0.04916856437921524, -0.023395100608468056, -0.01585542969405651, -0.0017610769718885422, -0.004023671615868807, -0.20140133798122406, -6.12716976320371e-05, -0.09822851419448853, -5.006777428206988e-06, -0.0014368696138262749, -0.03003700263798237, -0.00037996700848452747, -4.0531076592742465e-06, -0.011520526371896267, -0.07873418182134628, -0.06817083060741425, -2.0861407392658293e-05, -0.012410440482199192, -0.008890213444828987, -4.2199197196168825e-05, 0.0, -0.0510704331099987, -0.00974870752543211, -0.00035065223346464336, -0.0001102625101339072, -0.002598720835521817, -0.01912534050643444, -0.3225514888763428, -4.234735488891602, -0.2752920985221863, -0.012770303525030613, -3.2066785934148356e-05, -0.001522692502476275, -0.019189896062016487, -0.005989223252981901, -2.087345838546753, -0.40935805439949036, -0.3820348381996155, -0.7886117100715637, -1.7230465412139893, -0.4395473003387451, -0.8951568007469177, -0.1632813811302185, -0.31460484862327576, -1.9492247104644775, -0.007821764796972275, -0.0025533000007271767, -0.21647943556308746, -0.03135040029883385, -2.4061927795410156, -0.45121148228645325, -0.0006417360855266452, -2.398308277130127, -0.7524950504302979, -0.3773830235004425, -0.009784241206943989, -2.7211523056030273, -0.00029404606902971864, -0.05826907977461815, -0.111809641122818, -0.0772559717297554, -0.0014037764631211758, -0.012066464871168137, -6.437280717364047e-06, -0.00038795097498223186, -0.0013977054040879011, -0.012072590179741383, -0.22130060195922852, -0.0002300474588992074, -0.004561851266771555, -0.5372359752655029, -4.7444173105759546e-05, -0.0002113357331836596, -1.1920928244535389e-07, -0.0008593680104240775, -0.00047398300375789404, -0.0011204162146896124, -8.77341881277971e-05, -1.9073468138230965e-06, -0.0005059154354967177, -0.01676599681377411, -5.8412379075889476e-06, -0.1349828690290451, -0.000390215078368783, -2.3158011436462402, -0.019442111253738403, -0.0026844439562410116, -1.0442867279052734, -0.017404211685061455, -0.5618294477462769, -0.0018574618734419346, -0.05524266138672829, -0.07874883711338043, -0.0036860634572803974, -0.0026041902601718903, -0.037499718368053436, -0.00023112009512260556, -0.5355907678604126, -0.037291064858436584, -0.0040006376802921295, -0.004130879417061806, -1.6722853183746338, -0.6092538833618164, -0.04574929550290108, -1.7299907207489014, -0.032637037336826324, -0.3322955369949341, -0.06853733956813812, -0.0009681067313067615, -0.24821634590625763, -0.002798333764076233, -4.565611743601039e-05, -0.0013394916895776987, -0.0023576815146952868, -0.13850238919258118, -0.013409427367150784, -0.09031294286251068, -0.041615746915340424, -0.5667738914489746, -2.7950503826141357, -1.4305104514278355e-06, -0.0008902162662707269, -0.0022651508916169405, -2.038458114839159e-05, -0.0008879532688297331, 0.0, -2.9801878554280847e-05, 0.0, 0.0, -0.03481249511241913, -0.022301243618130684, -0.057576414197683334, -0.00226693507283926, -1.3350872993469238, -0.09446768462657928, -0.8647133111953735, -0.0029021073132753372, -0.009060104377567768, -0.0051196664571762085, -0.018044479191303253, -0.00020752183627337217, -0.015578247606754303, -0.2597816586494446, -0.7206915020942688, -0.0074053313583135605, -0.6468175053596497, -0.004033525940030813, -0.05215851590037346, -0.0011454218765720725, -0.021256139501929283, -0.0007102350937202573, -0.010919695720076561, -1.5497195136049413e-06, 0.0, -0.083954356610775, -0.007774688303470612, -0.3469579517841339, -0.0005608416395261884, -0.2674534022808075, -0.010435421019792557, -1.7881377516459906e-06, -3.576278118089249e-07, -1.6689286894688848e-06, -5.173549288883805e-05, -0.31944966316223145, -0.010324520990252495, -1.7260808944702148], "finish_reason": "stop"}], "metrics": {"energy": 632.6834771041874, "energy_per_token": 3.6783923087452757, "time": 15.134331, "time_per_token": 0.0879902965116279}}
{"outputs": [{"text": "# Get all .txt files in the directory\n    txt_files = [f for f in os.listdir(directory_path) if f.endswith('.txt')]\n\n    # Create a list to store the unique words from all files\n    unique_words = []\n\n    # Iterate through each .txt file\n    for txt_file in txt_files:\n        # Open file and read lines\n        with open(os.path.join(directory_path, txt_file), 'r') as file:\n            # Create a Counter object to count words in the file\n            word_count = Counter(file.read().split())\n\n            # Iterate through the unique words and check if they are not stop words\n            for word in word_count.keys():\n                if word.lower() not in STOPWORDS:\n                    unique_words.append(word)\n\n    # Get the count of unique words using set\n    total_unique_words = len(set(unique_words))\n    return total_unique_words", "tokens": ["#", " Get", " all", " ", ".", "txt", " files", " in", " the", " directory", "\n", "    ", "txt", "_", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", ")", " if", " f", ".", "end", "sw", "ith", "('", ".", "txt", "')", "]", "\n", "\n", "    ", "#", " Create", " a", " list", " to", " store", " the", " unique", " words", " from", " all", " files", "\n", "    ", "unique", "_", "words", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " through", " each", " ", ".", "txt", " file", "\n", "    ", "for", " t", "xt", "_", "file", " in", " t", "xt", "_", "files", ":", "\n", "        ", "#", " Open", " file", " and", " read", " lines", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " t", "xt", "_", "file", ")", ",", " '", "r", "')", " as", " file", ":", "\n", "            ", "#", " Create", " a", " Counter", " object", " to", " count", " words", " in", " the", " file", "\n", "            ", "word", "_", "count", " =", " Counter", "(", "file", ".", "read", "()", ".", "split", "())", "\n", "\n", "            ", "#", " Iter", "ate", " through", " the", " unique", " words", " and", " check", " if", " they", " are", " not", " stop", " words", "\n", "            ", "for", " word", " in", " word", "_", "count", ".", "keys", "():", "\n", "                ", "if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "                ", "    ", "unique", "_", "words", ".", "append", "(", "word", ")", "\n", "\n", "    ", "#", " Get", " the", " count", " of", " unique", " words", " using", " set", "\n", "    ", "total", "_", "unique", "_", "words", " =", " len", "(", "set", "(", "unique", "_", "words", "))", "\n", "    ", "return", " total", "_", "unique", "_", "words", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.3890316486358643, -2.9258198738098145, -0.8715159296989441, -1.9679151773452759, -0.00011216964776394889, -0.0011094611836597323, -0.15655621886253357, -0.10298699885606766, -0.06796001642942429, -0.1505139172077179, -0.041843391954898834, -0.0020182018633931875, -0.5770511031150818, -0.0035010017454624176, -0.011847135610878468, -0.001967876683920622, -0.07320058345794678, -0.6413993239402771, -0.05654028803110123, -0.00027569307712838054, -2.253030106658116e-05, -0.0037902200128883123, -9.298280929215252e-06, -0.002896758494898677, -2.3364747903542593e-05, -0.0003743662964552641, -0.005067836493253708, -0.0007120219524949789, -3.933898824470816e-06, -0.0005206898204050958, -0.005476590245962143, -0.016252057626843452, -0.0005967028555460274, -0.0013749678619205952, -8.344646857949556e-07, 0.0, -0.024302205070853233, -0.0011251792311668396, -0.00014923889830242842, -5.221230458118953e-05, -0.0027367540169507265, -0.001004786929115653, -0.1503511518239975, -0.0002522150462027639, -0.14131759107112885, -1.2522244453430176, -0.7664656043052673, -2.954324960708618, -0.3565739095211029, -0.21762201189994812, -1.3740363121032715, -1.7396966218948364, -1.1729304790496826, -2.427582025527954, -0.6742144823074341, -0.12062792479991913, -0.0064300550147891045, -0.00024005869636312127, -0.3888445198535919, -0.0006924853660166264, -0.021783608943223953, -0.07713060826063156, -0.022711753845214844, -0.0005725175142288208, -0.037493057548999786, -0.00015698630886618048, -0.29760950803756714, -0.6893726587295532, -0.0004233417857903987, -0.8578334450721741, -0.22298313677310944, -0.8929132223129272, -7.748573807475623e-06, -5.0424259825376794e-05, -0.002203538315370679, -0.42313462495803833, -9.333651541965082e-05, -0.0012378181563690305, -0.4157138466835022, -0.0006297035724855959, -0.02701754681766033, -0.0015974391717463732, -0.00047469791024923325, -0.00010442188795423135, 0.0, -7.152555099310121e-07, -1.1920928244535389e-07, -0.00015472168161068112, -5.2569914259947836e-05, -0.006202377378940582, -1.3258068561553955, -1.0121443271636963, -2.992708444595337, -1.1787114143371582, -0.15853269398212433, -2.363103151321411, -0.028959307819604874, -0.00026055757189169526, -0.039884358644485474, -6.890059739816934e-05, -0.0013908008113503456, -0.06307614594697952, -3.099436753473128e-06, -4.887569048150908e-06, -1.0251946150674485e-05, -2.1934269170742482e-05, -6.139089964563027e-05, -0.00011240804451517761, -5.7338023907504976e-05, -1.9073468138230965e-06, -0.00010251473577227443, -0.00032908268622122705, -1.1920928244535389e-07, -7.867782187531702e-06, -6.437280717364047e-06, -0.03149907663464546, -4.935142715112306e-05, -0.043526541441679, -0.0005032941699028015, -0.1596435159444809, -8.904537389753386e-05, -0.18369880318641663, -0.0012440093560144305, -0.00022349244682118297, -0.0014357983600348234, -1.972414255142212, -2.4682674407958984, -0.08433890342712402, -1.044958233833313, -0.4362146556377411, -0.18604035675525665, -0.3287338614463806, -2.124974250793457, -1.3465752601623535, -0.09059923887252808, -0.050752874463796616, -0.026972411200404167, -0.00018249277491122484, -0.5146104097366333, -0.002183198230341077, -1.6012910604476929, -0.013950692489743233, -0.00039295581518672407, -0.37361353635787964, -0.08530788868665695, -0.00794642511755228, -0.0007606235449202359, -0.0005852655158378184, -0.00010787858627736568, -0.3039398491382599, -0.0023284247145056725, -0.0012748456792905927, -0.1146475300192833, -0.09543634206056595, -0.005031779408454895, -2.0427591800689697, -8.11782301752828e-05, -0.029717322438955307, -1.0148999691009521, -1.4944144487380981, -0.36003822088241577, -1.81410551071167, -2.4012300968170166, -0.0899013802409172, -0.08539348095655441, -0.1733783781528473, -0.37203824520111084, -0.056513361632823944, -1.366811990737915, -0.01827451027929783, -0.0006252956227399409, -0.0571761429309845, -0.0030449714977294207, -0.6153513789176941, -0.038772739470005035, -2.6225699912174605e-05, -2.3841855067985307e-07, -0.15417087078094482, -0.03813987225294113, -0.004630319774150848, -0.0005417786305770278, -0.0006505518686026335, -0.05851432681083679, -0.021540967747569084, -0.9319867491722107, -0.042424216866493225, -0.0006006343755871058, -0.0024551982060074806, -9.536738616588991e-07, -0.00045694399159401655, 0.0, -7.199982064776123e-05, 0.0, 0.0, -0.05683799460530281, -0.024535570293664932, -0.00024303820100612938, -0.0013902055798098445, -0.8334973454475403, -1.4066597032069694e-05, -0.00019858295854646713, -0.0010662352433428168, -0.009942413307726383, -0.0009093916742131114, -0.00022456508304458112, -0.2323681116104126, -0.01864631101489067, -0.008791550062596798, -0.002852777484804392, -0.2114977240562439, -3.1083011627197266, -0.016707850620150566, -0.5026695728302002, -0.0015788720920681953, -0.00582343153655529, -1.22642982006073, -2.774972677230835, -0.36932167410850525, -0.9179174304008484, -0.0001652104256208986, -2.0604515075683594, -0.004403300117701292, -0.44349879026412964, -0.05795874819159508, -0.15523254871368408, -0.006786748301237822, -0.022392287850379944, -9.905801562126726e-05, -0.0007904027588665485, -0.0001597276859683916, -7.617183291586116e-05, -3.576278118089249e-07, -4.768370445162873e-07, -0.00010716341057559475, -0.0011873346520587802, -2.1834120750427246, -0.0420294925570488, -0.0035154942888766527, -1.311301275563892e-06, -2.0265558760002023e-06, -5.125986263010418e-06, -1.168244216387393e-05, -1.4057972431182861, -2.0265558760002023e-06, -2.861018856492592e-06, -1.0847986231965479e-05, -3.111314072157256e-05, -0.09912390261888504], "finish_reason": "stop"}], "metrics": {"energy": 900.6385100383757, "energy_per_token": 3.6316068953160308, "time": 21.212454, "time_per_token": 0.08553408870967742}}
{"outputs": [{"text": "# Create an empty Counter to store the count of each unique word\n    word_counter = Counter()\n\n    # Iterate over all files in the specified directory\n    for file in os.listdir(directory_path):\n        if file.endswith(\".txt\"):  # Only consider '.txt' files\n            file_path = os.path.join(directory_path, file)  # Construct the full file path\n            with open(file_path, \"r\") as text_file:\n                text = text_file.read().lower()  # Read the file content and convert to lowercase\n                words = text.split()  # Split the text into words\n                # Exclude stopwords from the word list\n                words_without_stopwords = [word for word in words if word not in STOPWORDS]\n                # Update the counter with the words from the current file\n                word_counter.update(words_without_stopwords)\n\n    return len(word_counter)  # Return the number of unique words in the counter", "tokens": ["#", " Create", " an", " empty", " Counter", " to", " store", " the", " count", " of", " each", " unique", " word", "\n", "    ", "word", "_", "counter", " =", " Counter", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " all", " files", " in", " the", " specified", " directory", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "  ", "#", " Only", " consider", " '", ".", "txt", "'", " files", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", ")", "  ", "#", " Construct", " the", " full", " file", " path", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "r", "\"", ")", " as", " text", "_", "file", ":", "\n", "                ", "text", " =", " text", "_", "file", ".", "read", "()", ".", "lower", "()", "  ", "#", " Read", " the", " file", " content", " and", " convert", " to", " lower", "case", "\n", "                ", "words", " =", " text", ".", "split", "()", "  ", "#", " Split", " the", " text", " into", " words", "\n", "                ", "#", " Ex", "clude", " stop", "words", " from", " the", " word", " list", "\n", "                ", "words", "_", "without", "_", "stop", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "                ", "#", " Update", " the", " counter", " with", " the", " words", " from", " the", " current", " file", "\n", "                ", "word", "_", "counter", ".", "update", "(", "words", "_", "without", "_", "stop", "words", ")", "\n", "\n", "    ", "return", " len", "(", "word", "_", "counter", ")", "  ", "#", " Return", " the", " number", " of", " unique", " words", " in", " the", " counter", "\n", "\n", "if"], "logprobs": [-1.3890316486358643, -2.2129406929016113, -0.3513331711292267, -0.02366558276116848, -0.4734693765640259, -2.236675262451172, -0.3276061713695526, -0.30713069438934326, -1.925131916999817, -0.006926099304109812, -0.7405038475990295, -1.8141334056854248, -0.41262155771255493, -0.05447801947593689, -0.0008829509024508297, -0.6420087218284607, -0.015643619000911713, -0.6490322947502136, -0.0017891604220494628, -0.002231609309092164, -0.00257422705180943, -0.0005667987279593945, -0.05843640863895416, -0.0004456242313608527, -0.026538338512182236, -0.7868726849555969, -0.0011536378879100084, -0.39548003673553467, -0.5142684578895569, -0.4864056408405304, -0.0449814610183239, -0.005590992514044046, -1.306092381477356, -0.00206055399030447, -0.039777711033821106, -0.00028939827461726964, -0.011648613959550858, -1.0304654836654663, -0.620418906211853, -0.007483780849725008, -1.7881233361549675e-05, -0.04172917455434799, 0.0, -0.0003405229654163122, -0.0008368566050194204, -0.00011789103882620111, -2.145764938177308e-06, -0.0004769618099089712, -0.0011444692499935627, -0.014164037071168423, -0.9098048806190491, -0.02601720206439495, -0.0005906267906539142, -0.0022702652495354414, -7.152555099310121e-07, -1.1920928244535389e-07, -1.386705756187439, -0.0016280265990644693, -0.0032283354084938765, -0.00038795097498223186, -2.074220174108632e-05, -0.003965254407376051, -1.2301496267318726, -3.814689989667386e-06, -0.796070396900177, -0.8677634000778198, -0.5535704493522644, -0.0007471630233339965, -7.319182623177767e-05, -0.0001212284987559542, -0.001116724917665124, -0.007262970320880413, -0.013866635039448738, -0.6220778822898865, -0.05041243135929108, -0.0013727060286328197, -6.770858453819528e-05, -0.016177576035261154, -1.5497195136049413e-06, -4.291525328881107e-06, -1.2397689715726301e-05, -0.0001586549769854173, -6.317892984952778e-05, -0.000666277133859694, -3.71926071238704e-05, -2.622600959512056e-06, -3.731181277544238e-05, -0.0001821352052502334, -3.635817120084539e-05, -2.5290818214416504, -9.059865078597795e-06, -0.34276291728019714, -0.10157082974910736, -0.4372519552707672, -0.33398309350013733, -0.0005428509321063757, -0.0015268584247678518, -1.741327166557312, -0.11881691962480545, -3.0517112463712692e-05, -0.00013612773909699172, -0.00011669908417388797, -0.00011991735664196312, 0.0, -0.009677637368440628, -0.6727079749107361, -0.002791082253679633, -0.0004273931554052979, -0.5067421793937683, -2.4676019165781327e-05, -2.3839657306671143, -0.14191262423992157, -0.00305317179299891, -0.0003939091111533344, -0.2363252341747284, -0.0015191215788945556, -1.8328802585601807, -0.03318679705262184, -0.0030488932970911264, -7.271740287251305e-06, -7.152555099310121e-07, -2.4318398573086597e-05, -8.34461570775602e-06, -0.0036010199692100286, -1.2557505369186401, -0.07811155915260315, -2.098061486321967e-05, -0.10344330966472626, -7.152555099310121e-07, -0.06239195540547371, -0.11194032430648804, -0.42194852232933044, -1.0000944137573242, -0.1324518918991089, -0.009939816780388355, -0.9057828783988953, -5.495397272170521e-05, -0.00664051016792655, -0.03963484242558479, -0.3574792444705963, -0.17503227293491364, -0.005177185870707035, -0.19094762206077576, -0.00016306500765495002, -0.0021604786161333323, -0.006584377493709326, -0.032422058284282684, -8.344646857949556e-07, -0.018068363890051842, -0.0637708306312561, -0.042258646339178085, -0.003402161179110408, -0.17042243480682373, -0.1177472174167633, -0.9991174936294556, -2.763477325439453, -2.2853176593780518, -0.000328367663314566, -0.05066845566034317, -0.5250771641731262, -1.341767430305481, -0.046508919447660446, -0.9925127625465393, -0.6614484190940857, -0.0399932898581028, -0.00017414960893802345, -0.8040480017662048, -2.223750591278076, -0.17730022966861725, -6.878139538457617e-05, -0.009990686550736427, -0.05067593231797218, -9.345571743324399e-05, -0.004764750599861145, -0.017633335664868355, -0.004145600367337465, -5.960446742392378e-06, -3.45700973412022e-05, -8.570780482841656e-05, -0.0013642538106068969, -0.0061484710313379765, -0.20640011131763458, -9.417489309271332e-06, -0.0004002247005701065, 0.0, -5.1616290875244886e-05, 0.0, 0.0, -0.012767949141561985, -0.0002554328821133822, -0.03059512749314308, -1.0002087354660034, -0.05157969519495964, -0.006182829383760691, -1.3819876909255981, -0.02515280619263649, -0.03710212558507919, -0.5112806558609009, -0.2884092628955841, -0.25092780590057373, -0.12047840654850006, -0.010559991002082825, -0.002552943304181099, -6.317892984952778e-05, -0.0018160531762987375, -2.145764938177308e-06, -2.3245540432981215e-05, -0.0010742137674242258, -3.576278118089249e-07, -0.000679500459227711, -0.022861020639538765, -0.00025602878304198384, -3.814689989667386e-06, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00010227633902104571, -0.00017689094238448888, -0.029884174466133118, -0.0012942517641931772, -1.2253655195236206, -0.13924473524093628, -0.0001541257370263338, -0.00440009543672204, -3.2186455882765586e-06, -5.8412379075889476e-06, -0.117338627576828, -0.10100742429494858, -4.0531076592742465e-06, -0.029068276286125183, -0.0008334023877978325, -1.0905317068099976, -0.0008143446175381541, -0.015004042536020279, -0.4254557192325592, -1.2682336568832397, -0.0032206117175519466, -0.19227838516235352, -0.1299203485250473, -0.012738289311528206, -0.8980282545089722], "finish_reason": "stop"}], "metrics": {"energy": 837.2559349880216, "energy_per_token": 3.4740910165478076, "time": 20.605564, "time_per_token": 0.08550026556016598}}
{"outputs": [{"text": "total_count = 0\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n            with open(file_path, 'r') as f:\n                words = f.read().split()\n                non_stopwords = [word for word in words if word.lower() not in STOPWORDS]\n                total_count += len(set(non_stopwords))\n    return total_count", "tokens": ["total", "_", "count", " =", " ", "0", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "words", " =", " f", ".", "read", "()", ".", "split", "()", "\n", "                ", "non", "_", "stop", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "                ", "total", "_", "count", " +=", " len", "(", "set", "(", "non", "_", "stop", "words", "))", "\n", "    ", "return", " total", "_", "count", "\n", "\n", "if"], "logprobs": [-1.9253475666046143, -0.010522008873522282, -0.4601951539516449, -0.0072343298234045506, -0.3023450970649719, -0.0007813499541953206, -0.06408875435590744, -0.4572114050388336, -0.28625333309173584, -0.42139238119125366, -0.0004673104267567396, -0.029575325548648834, -1.0609570381348021e-05, -0.0016126735135912895, -1.1920928244535389e-07, -0.0003137096355203539, -0.0007715824176557362, -0.00012754580529872328, -2.9802276912960224e-06, -0.0003623305819928646, -0.014619607478380203, -0.005798068828880787, -0.028227953240275383, -0.015880772843956947, -0.00025817399728111923, -0.003768724389374256, -3.3378546504536644e-06, -1.1920928244535389e-07, -0.09841662645339966, -0.0020343814976513386, -0.00036530973738990724, -3.123234637314454e-05, -0.00589738367125392, -0.021916454657912254, -0.002159764990210533, -0.2561296224594116, -0.25844383239746094, -0.0016564709367230535, -0.00011872540198964998, -0.0097969900816679, -1.1920928244535389e-07, -6.437280717364047e-06, -3.6954195820726454e-05, -0.0002406545972917229, -0.00016211149340961128, -0.000542493537068367, -4.172238186583854e-05, -3.099436753473128e-06, -5.590759246842936e-05, -0.0002489972102921456, -4.649054244509898e-05, -0.0056062848307192326, -0.035228606313467026, -0.10176315903663635, -8.546940807718784e-05, -0.00023457636416424066, -0.0004048719711136073, -6.067568756407127e-05, 0.0, -0.016277626156806946, -0.03624105453491211, -0.0009099871967919171, -0.2415822297334671, -3.528532761265524e-05, -1.863516092300415, -0.007061997428536415, -0.003750553820282221, -0.0006478118011727929, -1.7320125102996826, -0.03397560492157936, -0.3765633702278137, -3.635817120084539e-05, -4.7205765440594405e-05, -0.00026079590315930545, -0.0016191004542633891, -0.219573974609375, -0.004155453760176897, -0.02966594137251377, -0.03884027898311615, -1.1300885677337646, -0.007035008631646633, -0.0010586139978840947, -0.4168394207954407, -0.009487186558544636, -0.015053128823637962, -0.0359722264111042, -0.022370489314198494, -1.8358061424805783e-05, -4.255681051290594e-05, -0.0005927712772972882, -0.0022978587076067924, -0.009658865630626678, -0.269303560256958, -0.05559860169887543, -0.0004161922261118889, -0.0024639980401843786, -2.5152843591058627e-05, -0.0002817710628733039, -2.3841855067985307e-07, -6.258291978156194e-05, 0.0, 0.0, -0.06625059247016907, -0.0160874892026186, -0.00818801298737526, -0.5379890203475952, -2.95634672511369e-05, -0.00037424711626954377, -0.0002809368306770921, -0.012947185896337032, -0.00012361239350866526, -0.0962027907371521, -0.0010938619961962104, -0.006477313581854105, -8.344646857949556e-07, -1.0728830375228426e-06, -0.0001501924270996824, -0.0003275334893260151, -0.02361260913312435, -0.008836924098432064, -0.0074701737612485886, -0.0012385324807837605, -3.814689989667386e-06, -6.6756979322235566e-06, -0.30586740374565125, -0.021670112386345863, -1.290522575378418], "finish_reason": "stop"}], "metrics": {"energy": 434.99651014328015, "energy_per_token": 3.4251693712069304, "time": 10.509297, "time_per_token": 0.08275037007874016}}
{"outputs": [{"text": "files = [f for f in os.listdir(directory_path) if f.endswith('.txt')]\n\n    word_counts = Counter()\n\n    for file_name in files:\n        with open(os.path.join(directory_path, file_name), 'r') as file:\n            text = file.read()\n            words = text.split()\n            words = [word for word in words if word not in STOPWORDS]\n            word_counts.update(words)\n\n    return len(word_counts)", "tokens": ["files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", ")", " if", " f", ".", "end", "sw", "ith", "('", ".", "txt", "')", "]", "\n", "\n", "    ", "word", "_", "counts", " =", " Counter", "()", "\n", "\n", "    ", "for", " file", "_", "name", " in", " files", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "_", "name", ")", ",", " '", "r", "')", " as", " file", ":", "\n", "            ", "text", " =", " file", ".", "read", "()", "\n", "            ", "words", " =", " text", ".", "split", "()", "\n", "            ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "            ", "word", "_", "counts", ".", "update", "(", "words", ")", "\n", "\n", "    ", "return", " len", "(", "word", "_", "counts", ")", "\n", "\n", "if"], "logprobs": [-3.4385387897491455, -0.1131550744175911, -0.7509194016456604, -0.6457125544548035, -0.028479522094130516, -0.0014496066141873598, -6.890059739816934e-05, -0.009127202443778515, -1.2755313036905136e-05, -0.016354091465473175, -1.1920922133867862e-06, -0.000433112756581977, -0.007415625732392073, -0.0005530973430722952, -7.033323527139146e-06, -0.004836882930248976, -0.010251839645206928, -0.1168680414557457, -0.002089223824441433, -0.0021773697808384895, -1.883488948806189e-05, -1.1920928244535389e-07, -0.047085221856832504, -0.0070155952125787735, -0.000392598332837224, -0.0001037067049765028, -0.010429050773382187, -0.04298529401421547, -1.9368668794631958, -0.0013430631952360272, -1.4361202716827393, -0.02020304836332798, -0.7650337815284729, -0.007375156506896019, -0.022684602066874504, -0.0021290748845785856, -0.02619222179055214, -0.7083908915519714, -0.00025006983196362853, -0.03066703863441944, -0.2571139633655548, -2.4081897735595703, -0.07950340956449509, -0.0002461368858348578, -0.0012468667700886726, -0.0003890234511345625, -0.0005147324409335852, -0.013203803449869156, -0.6706312298774719, -0.00022456508304458112, -0.0020402108784765005, -0.17042435705661774, -8.583032467868179e-06, -4.672895011026412e-05, -3.6954811548639555e-06, -0.00019727191829588264, -0.00017557987303007394, -0.00036399890086613595, -9.715084888739511e-05, -3.814689989667386e-06, -0.00022635281493421644, -0.003303786274045706, -2.8729025871143676e-05, -2.9802276912960224e-06, -0.07664678245782852, -0.00014983485743869096, -0.07923516631126404, -0.002613702090457082, -0.2623578906059265, -0.00011693747364915907, -0.3814805746078491, -0.004921939689666033, -0.0017245433991774917, -0.0025518732145428658, -1.1104191541671753, -0.007731158286333084, -0.003145154332742095, -4.0411134250462055e-05, -1.4185804502631072e-05, -0.0019514580490067601, -0.25940290093421936, -0.12322249263525009, -0.11899738758802414, -0.00378606328740716, -0.3653997778892517, -0.0001770101225702092, -0.07568925619125366, -0.009317131713032722, -0.02508549578487873, -0.30695006251335144, -1.0289812088012695, -0.10237004607915878, -0.008786232210695744, -0.06045014038681984, -0.15315216779708862, -2.8967437174287625e-05, -3.218599158572033e-05, -0.0011851914459839463, -0.003782975720241666, -0.030503785237669945, -1.1388720273971558, -2.276871418871451e-05, -0.0006189814303070307, -3.576278118089249e-07, -7.235741941258311e-05, 0.0, 0.0, -0.061260465532541275, -0.03197995573282242, -0.05330577492713928, -0.036193687468767166, -2.1815061700181104e-05, -0.0016776548000052571, -0.013914600946009159, -2.3841830625315197e-06, -0.00217760750092566, -0.03478451818227768, -0.00012516192509792745, -0.00235363794490695, -0.020041700452566147, -0.0011089849285781384, -0.6663199663162231, -0.08696922659873962, -0.0004236992390360683, -0.0030841901898384094, -2.0265558760002023e-06, -7.152555099310121e-07, -0.3070403039455414, -0.15596982836723328, -0.015670141205191612, -0.8306751251220703], "finish_reason": "stop"}], "metrics": {"energy": 465.7795065126419, "energy_per_token": 3.5555687520048997, "time": 10.931937, "time_per_token": 0.08344990076335877}}
{"outputs": [{"text": "total_count = Counter()\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            with open(os.path.join(directory_path, filename), 'r') as file:\n                for line in file:\n                    words = line.strip().split()\n                    for word in words:\n                        if word.lower() not in STOPWORDS:\n                            total_count[word] += 1\n\n    return len(total_count)", "tokens": ["total", "_", "count", " =", " Counter", "()", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", " '", "r", "')", " as", " file", ":", "\n", "                ", "for", " line", " in", " file", ":", "\n", "                ", "    ", "words", " =", " line", ".", "strip", "()", ".", "split", "()", "\n", "                ", "    ", "for", " word", " in", " words", ":", "\n", "                ", "        ", "if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "                ", "            ", "total", "_", "count", "[", "word", "]", " +=", " ", "1", "\n", "\n", "    ", "return", " len", "(", "total", "_", "count", ")", "\n", "\n", "if"], "logprobs": [-1.9253475666046143, -0.010522008873522282, -0.4601951539516449, -0.0072343298234045506, -1.4109609127044678, -0.001831641187891364, -0.027975626289844513, -0.9709396362304688, -0.16847780346870422, -0.3265318274497986, -0.0005845506675541401, -0.018526840955018997, -7.152531907195225e-06, -0.0013628251617774367, -4.768370445162873e-07, -0.00019667598826345056, -0.0005992047372274101, -0.00010156115604331717, -2.0265558760002023e-06, -0.0003475538978818804, -0.007869903929531574, -0.004543932154774666, -0.020527418702840805, -0.020688338205218315, -0.00033468366018496454, -0.003239148296415806, -1.4305104514278355e-06, -2.3841855067985307e-07, -0.07980701327323914, -0.0016974101308733225, -0.0005933669744990766, -2.6464111215318553e-05, -0.007548026740550995, -0.011192277073860168, -0.001519954763352871, -1.392968773841858, -0.00018368464952800423, -0.0014280608156695962, -0.049052685499191284, -4.887569048150908e-06, -1.2159273865108844e-05, -2.861018856492592e-06, -0.0001006075763143599, -6.0437283536884934e-05, -9.357491217087954e-05, -4.446407547220588e-05, -4.768370445162873e-07, -4.637133679352701e-05, -0.0015749443555250764, -0.030845407396554947, -9.095255518332124e-05, -0.025682292878627777, -0.0014013956533744931, -0.20201507210731506, -5.1020273531321436e-05, -0.12161105871200562, -0.0008833082392811775, -0.0012311505852267146, -0.000626367807853967, -2.2235419750213623, -0.15519151091575623, -0.0004980515805073082, -0.00031895318534225225, -0.017684869468212128, -0.00254568993113935, -0.0003860443539451808, -0.000871278636623174, -0.43667325377464294, -0.010295496322214603, -0.05850229784846306, -0.00012683063687290996, -0.25099846720695496, -0.0023462644312530756, -0.0020607919432222843, -0.17287197709083557, -0.055629048496484756, -0.0530177541077137, -0.0015922023449093103, -0.00026222606538794935, -0.3847697973251343, -0.0002388668799540028, -0.0006617502076551318, -0.0016582560492679477, -0.00019631843315437436, -0.0005146132898516953, -0.0002874914789572358, -0.0007520469953306019, -0.10968062281608582, -0.020122669637203217, -0.7331517934799194, -0.1513851135969162, -0.0007965967524796724, -0.003987339325249195, -2.622600959512056e-06, -0.00024327656137757003, -5.960462772236497e-07, -4.160317621426657e-05, -2.3841855067985307e-07, 0.0, -0.041240379214286804, -0.02886098250746727, -9.405170567333698e-05, -0.0007936188485473394, -0.009380551055073738, -1.7881377516459906e-06, -8.106198947643861e-06, -0.005812883377075195, -0.0003334919747430831, -0.6095964312553406, -0.00046588058467023075, -0.0007961202645674348, -0.00012790338951162994, -0.005623354576528072, -2.356175422668457, -0.0019450333202257752, -0.22985988855361938, -0.14985254406929016, -0.00024923557066358626, -0.001987031428143382, -2.861018856492592e-06, -5.483612312673358e-06, -0.3436119258403778, -0.1218491718173027, -0.022573070600628853, -0.8343965411186218], "finish_reason": "stop"}], "metrics": {"energy": 463.1329409313202, "energy_per_token": 3.7050635274505614, "time": 10.312078, "time_per_token": 0.08249662399999999}}
{"outputs": [{"text": "word_count = Counter()\n\n    # Iterate over all text files in the directory\n    for file in os.listdir(directory_path):\n        if file.endswith('.txt'):\n            with open(os.path.join(directory_path, file), 'r') as f:\n                # Extract the words from the file content\n                words = f.read().split()\n\n                # Count the words using Counter\n                word_count.update([w for w in words if w not in STOPWORDS])\n\n    # Return the total count of unique non-stop words\n    return len(word_count)", "tokens": ["word", "_", "count", " =", " Counter", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " all", " text", " files", " in", " the", " directory", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "#", " Ext", "ract", " the", " words", " from", " the", " file", " content", "\n", "                ", "words", " =", " f", ".", "read", "()", ".", "split", "()", "\n", "\n", "                ", "#", " Count", " the", " words", " using", " Counter", "\n", "                ", "word", "_", "count", ".", "update", "([", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "\n", "    ", "#", " Return", " the", " total", " count", " of", " unique", " non", "-", "stop", " words", "\n", "    ", "return", " len", "(", "word", "_", "count", ")", "\n", "\n", "if"], "logprobs": [-2.45963978767395, -0.032345082610845566, -1.2878785133361816, -0.04870212823152542, -0.04987910017371178, -0.00126079679466784, -0.04180531948804855, -0.7216604948043823, -0.0013056810712441802, -1.3025896549224854, -0.6298219561576843, -0.02115565352141857, -0.2637430727481842, -0.652455747127533, -2.0860843658447266, -0.011441332288086414, -0.05667918547987938, -0.025812065228819847, -0.15468664467334747, -0.044001899659633636, -0.0007469248375855386, -0.01374612096697092, -1.6090970039367676, -0.7247705459594727, -0.01701577566564083, -1.5258672647178173e-05, -0.036400843411684036, -1.1920928244535389e-07, -0.00047362555051222444, -0.0012267453130334616, -0.00013028726971242577, -4.6491513785440475e-06, -0.0013829439412802458, -0.0008762810612097383, -0.00390944629907608, -0.02047579735517502, -0.010615194216370583, -0.0002714027068577707, -0.0015498304273933172, -1.4305104514278355e-06, 0.0, -0.31158193945884705, -0.0017629809444770217, -0.00047994061606004834, -1.597391747054644e-05, -0.003339311806485057, -0.016853678971529007, -0.004102861508727074, -1.7672560214996338, -0.0001821352052502334, -0.0012768696760758758, -0.04025096073746681, -4.529942543740617e-06, -1.3470558769768104e-05, -1.2040065485052764e-05, -8.880697714630514e-05, -6.16293036728166e-05, -0.00021836756786797196, -2.932505594799295e-05, -1.0728830375228426e-06, -6.401333666872233e-05, -0.0010981488740071654, -0.013234156183898449, -2.9205850296420977e-05, -0.023588160052895546, -0.000992877990938723, -0.23740127682685852, -5.328513361746445e-05, -0.1455024927854538, -0.008685549721121788, -0.003956230357289314, -0.0007696765242144465, -0.7237773537635803, -2.4776151180267334, -0.01207918580621481, -1.5716121196746826, -1.2671688795089722, -0.33674705028533936, -0.04437338188290596, -0.14968711137771606, -3.660533905029297, -0.1814495027065277, -0.0008166077313944697, -0.4673427939414978, -0.013193333521485329, -0.40131404995918274, -6.675497570540756e-05, -2.3483953555114567e-05, -0.00020168177434243262, -0.0030625606887042522, -0.12209852039813995, -0.005691987462341785, -0.002650797599926591, -0.7002432942390442, -0.03853452950716019, -0.01840583235025406, -1.2745789289474487, -0.21532133221626282, -1.0500476360321045, -1.6759240627288818, -0.2293330579996109, -0.3902229964733124, -0.00023040501400828362, -0.04319584369659424, -1.4424220353248529e-05, -0.0015668508131057024, -0.06636494398117065, -2.145764938177308e-06, -2.4410741329193115, -2.1058406829833984, -0.1747664511203766, -9.42901024245657e-05, -3.8265450712060556e-05, -0.000734178873244673, -0.0029145879670977592, -0.005475523415952921, -0.5739964842796326, -1.2874520507466514e-05, -0.00067473528906703, -1.1920928244535389e-07, -6.246371776796877e-05, 0.0, 0.0, -0.03596751019358635, -0.0045896186493337154, -0.014878850430250168, -0.0026761216577142477, -0.41024619340896606, -0.44164958596229553, -0.008863627910614014, -0.10977216809988022, -0.046076301485300064, -0.003934619482606649, -0.02558724768459797, -0.15139158070087433, -0.00030524839530698955, -0.00018857131362892687, -0.02374265156686306, -0.03782644495368004, -0.0006990373367443681, -0.015414977446198463, -0.05657859146595001, -0.0002286172821186483, -0.0028276958037167788, -1.1324817933200393e-05, -1.7404405298293568e-05, -0.2540588974952698, -0.10093996673822403, -0.015310145914554596, -0.8449323177337646], "finish_reason": "stop"}], "metrics": {"energy": 531.8457166881558, "energy_per_token": 3.545638111254372, "time": 12.625187, "time_per_token": 0.08416791333333333}}
{"outputs": [{"text": "total_count = 0\n    for root, _, files in os.walk(directory_path):\n        for filename in files:\n            if filename.endswith('.txt'):\n                file_path = os.path.join(root, filename)\n                with open(file_path, 'r') as file:\n                    for line in file:\n                        words = line.strip().lower().split()\n                        non_stop_words = [word for word in words if word not in STOPWORDS]\n                        total_count += Counter(non_stop_words)\n\n    return len(total_count)", "tokens": ["total", "_", "count", " =", " ", "0", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "_", "path", "):", "\n", "        ", "for", " filename", " in", " files", ":", "\n", "            ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " filename", ")", "\n", "                ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " file", ":", "\n", "                ", "    ", "for", " line", " in", " file", ":", "\n", "                ", "        ", "words", " =", " line", ".", "strip", "()", ".", "lower", "()", ".", "split", "()", "\n", "                ", "        ", "non", "_", "stop", "_", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "                ", "        ", "total", "_", "count", " +=", " Counter", "(", "non", "_", "stop", "_", "words", ")", "\n", "\n", "    ", "return", " len", "(", "total", "_", "count", ")", "\n", "\n", "if"], "logprobs": [-1.9253475666046143, -0.010522008873522282, -0.4601951539516449, -0.0072343298234045506, -0.3023450970649719, -0.0007813499541953206, -0.06408875435590744, -0.4572114050388336, -0.28625333309173584, -1.8640995025634766, -0.0021142051555216312, -2.677234172821045, -0.003541390411555767, -0.12983502447605133, -0.0014185375766828656, -0.0004996005445718765, -7.390948667307384e-06, -2.5033637939486653e-05, -0.0005498804384842515, -0.0016906267264857888, -9.035655966727063e-05, -2.50339189733495e-06, -0.0055510420352220535, -0.023577798157930374, -0.0029135181102901697, -0.015914328396320343, -1.7556517124176025, -0.00016675988445058465, -0.0018899451242759824, -4.351044481154531e-05, -0.0005611990345641971, -0.0015931545058265328, -0.09691271185874939, -0.04403794929385185, -0.0004545609117485583, -0.007971378974616528, -2.264974000354414e-06, 0.0, -0.06691397726535797, -0.0037010284140706062, -0.0005756151513196528, -3.421248038648628e-05, -0.006151314824819565, -0.016970770433545113, -0.0008840228547342122, -0.11812778562307358, -0.35122761130332947, -0.0002053765201708302, -7.772143726469949e-05, -0.0004911408759653568, 0.0, -3.933898824470816e-06, -2.682172998902388e-05, -0.00023588736075907946, -2.8132995794294402e-05, -0.0005837167263962328, -1.5735502529423684e-05, -0.0001515035255579278, -2.6940935640595853e-05, -0.0005876483046449721, -0.012581500224769115, -0.2008747011423111, -0.00014232576359063387, -0.00023898606013972312, -0.0002733095607254654, -2.6225699912174605e-05, -3.576278118089249e-07, -0.019088616594672203, -0.070444755256176, -0.0012684165267273784, -0.34896475076675415, -2.8609820219571702e-05, -0.14449533820152283, -0.002042352221906185, -0.0008217295398935676, -0.000243634101934731, -0.0007270314963534474, -3.293959617614746, -0.03529466316103935, -0.0008771148277446628, -0.0006647284608334303, -0.011635181494057178, -0.0041287424974143505, -0.0002733095607254654, -0.0008530553313903511, -0.5407033562660217, -0.01995266042649746, -0.07908406108617783, -0.00012933371181134135, -0.4514046013355255, -0.0023284247145056725, -0.0031578694470226765, -2.3259096145629883, -4.8874615458771586e-05, -0.0373939611017704, -0.0025197681970894337, -0.04009510576725006, -0.07547725737094879, -0.0024067978374660015, -0.0002540027489885688, -1.3370776176452637, -0.008849212899804115, -0.0014807938132435083, -0.9039795398712158, -0.008105007000267506, -0.005099148489534855, -0.03995159640908241, -0.016505952924489975, -0.004631031304597855, -1.811964830267243e-05, -4.410646579344757e-05, -0.000503770774230361, -0.003217284567654133, -0.030906204134225845, -0.05717490613460541, -2.777537883957848e-05, -0.0008272086852230132, -3.576278118089249e-07, -0.00019798702851403505, 0.0, -1.1920928244535389e-07, -0.09115929156541824, -0.0015549485106021166, -0.001566374790854752, -0.0003946240758523345, -0.3469502925872803, -7.986990567587782e-06, -0.0013579442165791988, -0.00046659549116156995, -2.4547617435455322, -0.001916716224513948, -0.002488137688487768, -3.814689989667386e-06, -9.536738616588991e-07, -4.887569048150908e-06, -7.152531907195225e-06, -0.0027803832199424505, -0.07941741496324539, -1.8729076385498047, -0.0032896471675485373, -0.26263076066970825, -0.576462984085083, -0.00048375347978435457, -0.015752756968140602, -5.960462772236497e-07, -6.556489552167477e-06, -0.36482369899749756, -0.1334649920463562, -0.021695192903280258, -0.7742108702659607], "finish_reason": "stop"}], "metrics": {"energy": 556.9175297851561, "energy_per_token": 3.712783531901041, "time": 12.612547, "time_per_token": 0.08408364666666666}}
{"outputs": [{"text": "non_stop_word_count = Counter()\n    for file_name in os.listdir(directory_path):\n        if file_name.endswith('.txt'):\n            with open(os.path.join(directory_path, file_name), 'r') as file:\n                words = file.read().split()\n                non_stop_words = [word for word in words if word.lower() not in STOPWORDS]\n                non_stop_word_count.update(non_stop_words)\n    return len(non_stop_word_count)", "tokens": ["non", "_", "stop", "_", "word", "_", "count", " =", " Counter", "()", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " file", "_", "name", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "_", "name", ")", ",", " '", "r", "')", " as", " file", ":", "\n", "                ", "words", " =", " file", ".", "read", "()", ".", "split", "()", "\n", "                ", "non", "_", "stop", "_", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "                ", "non", "_", "stop", "_", "word", "_", "count", ".", "update", "(", "non", "_", "stop", "_", "words", ")", "\n", "    ", "return", " len", "(", "non", "_", "stop", "_", "word", "_", "count", ")"], "logprobs": [-3.3428680896759033, -0.07344374805688858, -0.012133244425058365, -0.1685451865196228, -2.441596508026123, -0.0077913664281368256, -0.9745618104934692, -0.023125242441892624, -0.3435055613517761, -0.0014353221049532294, -0.073523610830307, -1.2275384664535522, -0.20753885805606842, -1.3618463277816772, -0.7666370272636414, -0.09424346685409546, -0.0006815256201662123, -0.017594683915376663, -1.5020257706055418e-05, -0.0026035956107079983, -2.50339189733495e-06, -0.0003393312799744308, -0.001341634662821889, -6.48477507638745e-05, -5.602820692729438e-06, -0.0007924277451820672, -0.011012018658220768, -0.005895842798054218, -0.035627979785203934, -0.025421420112252235, -1.2159273865108844e-05, -1.0728830375228426e-06, -0.00047672350774519145, -0.006215409375727177, -1.7165990357170813e-05, -2.3841855067985307e-07, -0.11924437433481216, -0.004096688237041235, -0.0004159538948442787, -4.756337511935271e-05, -0.006108305882662535, -0.011851376853883266, -0.00204889546148479, -1.1948776245117188, -0.00020966715237591416, -0.0014390123542398214, -0.04161300137639046, -4.291525328881107e-06, -1.1205610462639015e-05, -4.410734163684538e-06, -9.321732068201527e-05, -6.532455881824717e-05, -0.0002019201492657885, -3.480850500636734e-05, -5.960462772236497e-07, -7.557583012385294e-05, -0.001518169417977333, -4.172316494077677e-06, -3.3378546504536644e-06, -0.044541001319885254, -6.925819616299123e-05, -0.03902694210410118, -0.0014078239910304546, -0.22476805746555328, -0.0001147919538198039, -0.24609655141830444, -0.00435594329610467, -0.001835091970860958, -0.0006349454633891582, -1.0631104707717896, -0.018911881372332573, -0.1636088639497757, -0.00015007323236204684, -3.302042750874534e-05, -0.0003782987187150866, -0.0010286045726388693, -0.2606218755245209, -0.0027567262295633554, -0.014840678311884403, -0.02880052477121353, -0.6724033951759338, -0.0001599660754436627, -0.0012203158112242818, -0.06624355912208557, -0.08233959972858429, -0.003246158827096224, -0.025294270366430283, -0.01317945122718811, -0.04812096059322357, -1.3232143828645349e-05, -6.615896563744172e-05, -0.0003200257197022438, -0.003374835941940546, -0.025573885068297386, -0.4368125796318054, -0.07743316888809204, -0.00041500062798149884, -0.0018431833013892174, -2.0503786799963564e-05, -0.0004175029753241688, 0.0, -8.582700684200972e-05, 0.0, -1.1920928244535389e-07, -0.0507558211684227, -0.009195241145789623, -0.029418954625725746, -0.010144813917577267, -2.861018856492592e-06, -2.3483953555114567e-05, -6.6756979322235566e-06, -0.0007508557755500078, -3.099436753473128e-06, -0.0005012686015106738, -0.02860649861395359, -1.1920922133867862e-06, -0.0013797297142446041, -0.13477954268455505, -4.768370445162873e-07, -1.7881377516459906e-06, -1.311301275563892e-06, -0.0001851148990681395, -8.67805938469246e-05, -0.0020077326335012913, -0.0678662359714508, -0.26528269052505493, -0.11330782622098923, -0.00014375607133843005, -0.0009320206008851528, -1.311301275563892e-06, -1.9073468138230965e-06, -1.1920928244535389e-07, -3.957670196541585e-05, -3.2186455882765586e-06, -1.597391747054644e-05, -0.3286508619785309], "finish_reason": "stop"}], "metrics": {"energy": 468.8366872510909, "energy_per_token": 3.4473285827286095, "time": 11.357475, "time_per_token": 0.0835108455882353}}
{"outputs": [{"text": "# Initialize a Counter object to store the frequency of words\n    word_counter = Counter()\n\n    # Iterate over each file in the directory\n    for filename in os.listdir(directory_path):\n        # Check if the file has a '.txt' extension\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n\n            # Open the file in read mode\n            with open(file_path, 'r') as file:\n                # Read the file content and split it into words\n                words = file.read().split()\n\n                # Remove stop words and update the word counter\n                for word in words:\n                    if word.lower() not in STOPWORDS:\n                        word_counter[word.lower()] += 1\n\n    # Return the total count of unique non-stop words\n    return len(word_counter)", "tokens": ["#", " Initialize", " a", " Counter", " object", " to", " store", " the", " frequency", " of", " words", "\n", "    ", "word", "_", "counter", " =", " Counter", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " file", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Check", " if", " the", " file", " has", " a", " '", ".", "txt", "'", " extension", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "\n", "            ", "#", " Open", " the", " file", " in", " read", " mode", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " file", ":", "\n", "                ", "#", " Read", " the", " file", " content", " and", " split", " it", " into", " words", "\n", "                ", "words", " =", " file", ".", "read", "()", ".", "split", "()", "\n", "\n", "                ", "#", " Remove", " stop", " words", " and", " update", " the", " word", " counter", "\n", "                ", "for", " word", " in", " words", ":", "\n", "                ", "    ", "if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "                ", "        ", "word", "_", "counter", "[", "word", ".", "lower", "()", "]", " +=", " ", "1", "\n", "\n", "    ", "#", " Return", " the", " total", " count", " of", " unique", " non", "-", "stop", " words", "\n", "    ", "return", " len", "(", "word", "_", "counter", ")", "\n", "\n", "if"], "logprobs": [-1.3890316486358643, -0.8590778112411499, -1.293649435043335, -0.27931201457977295, -0.23070888221263885, -0.1275348663330078, -1.2149345874786377, -0.7506537437438965, -2.1489882469177246, -0.11670660227537155, -0.8302338123321533, -0.03141463175415993, -0.0008089845650829375, -0.326642781496048, -0.008767443709075451, -0.7867758870124817, -0.0006632988806813955, -0.0016783688915893435, -0.0009067714563570917, -0.0005458295345306396, -0.053375277668237686, -0.0004960260121151805, -0.016517678275704384, -0.6181751489639282, -0.0008339979685842991, -0.2509709298610687, -1.6664824485778809, -0.044718507677316666, -0.017270181328058243, -0.0018942285096272826, -0.16579560935497284, -0.02883179672062397, -0.00023993951617740095, -0.006960548926144838, -0.3719075918197632, -0.00016830935783218592, -0.003653876017779112, -8.583032467868179e-06, -0.0016200524987652898, 0.0, -0.0003738896339200437, -0.00044979469384998083, -0.0001006075763143599, -1.311301275563892e-06, -0.00014602071314584464, -0.0008374521275982261, -0.007114552427083254, -1.018702745437622, -0.18018746376037598, -0.0010125277331098914, -0.01978496089577675, -0.008126291446387768, -0.6007329821586609, -0.14805570244789124, -0.08631989359855652, -0.006499224808067083, -8.105902816168964e-05, -3.266281055402942e-05, -0.0012266262201592326, -0.01047034002840519, -0.00018773700867313892, -0.0007911174325272441, -0.013180157169699669, -0.00016008525562938303, -0.001073975581675768, 0.0, -1.1920928244535389e-07, -0.07005316019058228, -0.0008261366747319698, -2.1815061700181104e-05, -6.437280717364047e-06, -0.002370287897065282, -0.0002919009421020746, -0.0010669498005881906, -0.701403796672821, -0.17129766941070557, -2.1219027985353023e-05, -3.0874729418428615e-05, -0.010230128653347492, -3.3378546504536644e-06, -2.861018856492592e-06, -1.2159273865108844e-05, -3.516612196108326e-05, -9.214453893946484e-05, -0.0005896736984141171, -5.5549986427649856e-05, -1.6689286894688848e-06, -3.1470757676288486e-05, -5.066266385256313e-05, -1.764281842042692e-05, -0.012607986107468605, -0.20315133035182953, -0.0006992755807004869, -0.08178292959928513, -0.7496132254600525, -0.04062338173389435, -0.029979391023516655, -0.2134002298116684, -0.12647582590579987, -0.004895960912108421, -0.2722237706184387, -6.794698856538162e-05, -0.004572293721139431, -4.3748852476710454e-05, -0.00035172473872080445, -0.0002985746832564473, -1.5139465176616795e-05, -1.1920928244535389e-07, -0.0013156814966350794, -0.04112517833709717, -0.0005644158809445798, -0.22769062221050262, -1.5616295058862306e-05, -0.027304336428642273, -0.001035987981595099, -0.00014065706636756659, -0.000816131301689893, -0.0861039012670517, -0.085665762424469, -0.04327690228819847, -1.1096467971801758, -0.32380759716033936, -0.7034072875976562, -0.16365289688110352, -0.4967818260192871, -0.00466164480894804, -0.07243003696203232, -0.03383755311369896, -0.0001382732152706012, -0.10798193514347076, -0.004022127948701382, -0.0017122859135270119, -3.1470757676288486e-05, -1.0490362910786644e-05, -2.2172682292875834e-05, -0.00014590153296012431, -0.016133354976773262, -0.0003700763627421111, -0.0005739472107961774, -0.07062205672264099, -0.005466749891638756, -0.0042596799321472645, -1.6149797439575195, -0.06645964831113815, -0.5657284259796143, -0.195522740483284, -0.21723058819770813, -0.021624382585287094, -0.5279503464698792, -0.42268478870391846, -0.006992985028773546, -7.939023635117337e-05, -0.7411104440689087, -8.225102646974847e-05, -0.00011979816190432757, -0.0035455478355288506, -5.1973900554003194e-05, -8.129743218887597e-05, -0.00034409802174195647, -0.0005237876321189106, -0.2197440266609192, -0.005531244445592165, -0.27095887064933777, -0.02925839088857174, -0.00045098623377270997, -0.0011373248416930437, -5.960462772236497e-07, -8.093983342405409e-05, 0.0, -5.090107151772827e-05, 0.0, 0.0, -0.009723326191306114, -0.07266906648874283, -9.619726915843785e-05, -0.0005230727256275713, -0.012059987522661686, -0.0027308098506182432, -0.00016735584358684719, -0.03204888105392456, -7.199982064776123e-05, -0.7145535945892334, -0.0018048678757622838, -2.312633478140924e-05, -0.0004932855372317135, -0.00018702188390307128, -0.00030179237364791334, -0.0001081169830285944, -0.007323443423956633, -0.008130784146487713, -0.0014632957754656672, -0.04462149366736412, -0.5913957953453064, -0.0013654442736878991, -0.08662570267915726, -0.03806551173329353, -0.000286657246761024, -0.008940309286117554, -0.0714530423283577, -5.221230458118953e-05, -7.30726242181845e-05, -0.0012904420727863908, -0.07733751088380814, -0.0007107115816324949, -0.020037377253174782, -0.034730058163404465, -0.00011038171214750037, -0.002679926110431552, -1.6689286894688848e-06, -3.6954811548639555e-06, -0.19792276620864868, -0.0694214403629303, -0.01835913397371769, -0.8629834651947021], "finish_reason": "stop"}], "metrics": {"energy": 757.5845595054627, "energy_per_token": 3.5401147640442185, "time": 18.29534, "time_per_token": 0.08549224299065421}}
{"outputs": [{"text": "count_unique_word = Counter()\n\n    for filename in os.listdir(directory_path):\n\n        if filename.endswith(\".txt\"):\n            with open(directory_path + filename, \"r\") as file:\n                for line in file:\n                    for word in line.split():\n                        if word not in STOPWORDS:\n                            count_unique_word[word] += 1\n\n    return len(count_unique_word)", "tokens": ["count", "_", "unique", "_", "word", " =", " Counter", "()", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "\n", "            ", "with", " open", "(", "directory", "_", "path", " +", " filename", ",", " \"", "r", "\"", ")", " as", " file", ":", "\n", "                ", "for", " line", " in", " file", ":", "\n", "                ", "    ", "for", " word", " in", " line", ".", "split", "():", "\n", "                ", "        ", "if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "                ", "            ", "count", "_", "unique", "_", "word", "[", "word", "]", " +=", " ", "1", "\n", "\n", "    ", "return", " len", "(", "count", "_", "unique", "_", "word", ")", "\n", "\n", "def"], "logprobs": [-3.0806400775909424, -1.9698970317840576, -1.8664114475250244, -0.15451249480247498, -2.7690935134887695, -0.07811475545167923, -0.45067262649536133, -0.012287159450352192, -0.08276328444480896, -1.2041350603103638, -0.001447463990189135, -0.2788901627063751, -0.6212119460105896, -0.003750316333025694, -0.03282013162970543, -1.6927575416048057e-05, -0.008017145097255707, -9.536738616588991e-07, -0.000324673397699371, -0.0041326601058244705, -0.00020621081057470292, -1.0847986231965479e-05, -0.0016374287661165, -0.023158207535743713, -3.043353319168091, -0.010149180889129639, -0.26045194268226624, -0.21470311284065247, -0.002867279574275017, -0.011568251997232437, -1.597391747054644e-05, -8.344646857949556e-07, -1.7491469383239746, -0.008820854127407074, -0.010753068141639233, -0.0007532381569035351, -2.52720492426306e-05, -0.01785971410572529, -0.027240419760346413, -0.33714085817337036, -0.9512239098548889, -0.0007389436941593885, -0.009779518470168114, -1.5779492855072021, -9.011816291604191e-05, -2.0265558760002023e-06, -0.1593528389930725, -0.1664605438709259, -0.08319184184074402, -0.9359534978866577, -0.014937220141291618, -0.0017566739115864038, -0.6035151481628418, -0.0009835887467488647, -0.39162614941596985, -0.02335771732032299, -0.01021526101976633, -0.11885470896959305, -0.9914581775665283, -0.1160241886973381, -0.002295123180374503, -0.000811366830021143, -0.06138940155506134, -0.005382687784731388, -0.07281184196472168, -0.0030750392470508814, -1.1840794086456299, -0.026072952896356583, -0.0016703951405361295, -0.03165142610669136, -0.0030298777855932713, -0.3063308596611023, -0.027750134468078613, -0.012433163821697235, -0.033399879932403564, -0.003508366644382477, -0.26109787821769714, -0.07272350043058395, -0.6753219962120056, -3.93382906622719e-05, -0.003908258862793446, -7.152555099310121e-07, -0.0001573438785271719, -7.152555099310121e-07, 0.0, -0.08839474618434906, -0.00985813606530428, -0.0013510395074263215, -0.00340323057025671, -0.014385326765477657, -0.00011240804451517761, -0.0001137191939051263, -8.34461570775602e-06, -9.179073458653875e-06, -0.048047564923763275, -0.0017071687616407871, -0.09057866036891937, -0.01051280740648508, -0.012390777468681335, -0.00037722624256275594, -0.0050263237208127975, -0.23139919340610504, -0.0051250034011900425, -0.19596518576145172, -0.1619802713394165, -0.0019114810274913907, -0.005359922535717487, -1.0132738680113107e-05, -1.6689286894688848e-06, -5.960446742392378e-06, -2.372236667724792e-05, -0.36145710945129395, -0.10753197222948074, -0.014141352847218513, -1.5679378509521484], "finish_reason": "stop"}], "metrics": {"energy": 392.9262389354705, "energy_per_token": 3.4167499037867, "time": 9.667265, "time_per_token": 0.08406317391304348}}
{"outputs": [{"text": "count_total = 0\n    for file_name in os.listdir(directory_path):\n        if file_name.endswith(\".txt\"):\n            # Read the file\n            file_path = os.path.join(directory_path, file_name)\n            with open(file_path, \"r\") as file:\n                words = file.read().split()\n\n            # Count the number of words in the file\n            word_count = Counter(words)\n\n            # Remove the stop words\n            word_count = {word: count for word, count in word_count.items() if word not in STOPWORDS}\n\n            # Calculate the total number of unique words\n            count_total += len(word_count.keys())\n\n    return count_total", "tokens": ["count", "_", "total", " =", " ", "0", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " file", "_", "name", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "\n", "            ", "#", " Read", " the", " file", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "_", "name", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "r", "\"", ")", " as", " file", ":", "\n", "                ", "words", " =", " file", ".", "read", "()", ".", "split", "()", "\n", "\n", "            ", "#", " Count", " the", " number", " of", " words", " in", " the", " file", "\n", "            ", "word", "_", "count", " =", " Counter", "(", "words", ")", "\n", "\n", "            ", "#", " Remove", " the", " stop", " words", "\n", "            ", "word", "_", "count", " =", " {", "word", ":", " count", " for", " word", ",", " count", " in", " word", "_", "count", ".", "items", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "}", "\n", "\n", "            ", "#", " Calculate", " the", " total", " number", " of", " unique", " words", "\n", "            ", "count", "_", "total", " +=", " len", "(", "word", "_", "count", ".", "keys", "())", "\n", "\n", "    ", "return", " count", "_", "total", "\n", "\n", "def"], "logprobs": [-3.0806400775909424, -1.9698970317840576, -2.772066354751587, -0.16115345060825348, -1.6562716960906982, -0.0026129886973649263, -0.09967359155416489, -0.27477726340293884, -0.4490204155445099, -1.4696118831634521, -0.9540255069732666, -0.13176864385604858, -0.0024142900947481394, -0.03362260386347771, -1.6212332411669195e-05, -0.008449400775134563, -1.1920922133867862e-06, -0.0004159538948442787, -0.004271313082426786, -0.00013612773909699172, -3.111314072157256e-05, -0.0026304665952920914, -0.0323370024561882, -0.019336415454745293, -0.20422428846359253, -0.07937535643577576, -2.3364747903542593e-05, -5.483612312673358e-06, -0.003328737337142229, -0.009289494715631008, -4.3987260141875595e-05, 0.0, -1.69805109500885, -0.0070711118169128895, -0.005808379966765642, -0.0008550802012905478, -3.0397906812140718e-05, -0.007055842317640781, -0.03450067341327667, -0.010795524343848228, -3.101555824279785, -2.381375789642334, -0.8460386991500854, -0.9328730702400208, -0.9036397337913513, -0.0014671048847958446, -1.2543730735778809, -0.02085670456290245, -0.019327178597450256, -0.0015248350100591779, -0.09163495153188705, -4.529942543740617e-06, -2.2649508537142538e-05, -8.344646857949556e-07, -0.0007194076315499842, -0.00019596086349338293, -0.0010180057724937797, -1.7762025890988298e-05, -3.2186455882765586e-06, -0.00013124081306159496, -0.0016180293168872595, -1.1205610462639015e-05, -1.6212332411669195e-05, -8.475421054754406e-05, -0.010879131965339184, -0.021567335352301598, -0.05861731246113777, -0.00010561384988250211, -0.0003405229654163122, -0.0005467826849780977, -2.3007127310847864e-05, -2.2053474822314456e-05, -0.031205052509903908, -0.7795909643173218, -0.007532764226198196, -0.0008628221112303436, -0.5159351229667664, -0.0002321927313460037, -0.31068894267082214, -0.023067347705364227, -0.0012655591126531363, -0.0012866322649642825, -2.62004017829895, -0.09898290038108826, -0.09051648527383804, -0.00025781645672395825, -5.018585216021165e-05, -0.0031793781090527773, -0.013311326503753662, -0.11027920246124268, -0.011892725713551044, -0.021900827065110207, -0.3764713406562805, -0.05637636035680771, -0.024683168157935143, -0.6806952357292175, -0.6621367335319519, -1.1335009336471558, -0.0010698077967390418, -2.733156681060791, -2.503674030303955, -0.16207516193389893, -0.08036521822214127, -0.33684033155441284, -0.002019510604441166, -1.6677300930023193, -0.01428356021642685, -0.8680406212806702, -0.06525123119354248, -0.1708708107471466, -0.09643956273794174, -0.09876897931098938, -0.000914393924176693, -0.006585916969925165, -0.6219630241394043, -0.0013013951247557998, -0.03220091760158539, -1.9875315427780151, -2.840670108795166, -0.06747663766145706, -0.493838369846344, -0.6808330416679382, -0.0018186711240559816, -1.1222527027130127, -0.0005340342177078128, -0.01687571406364441, -1.3325999975204468, -0.5798537731170654, -0.10536592453718185, -0.009005406871438026, -0.023514805361628532, -0.006741872988641262, -0.0017677409341558814, -4.637133679352701e-05, -0.02519848942756653, -0.0006165986997075379, -0.0014293702552095056, -1.5616295058862306e-05, -5.483612312673358e-06, -0.004803783260285854, -0.012150909751653671, -0.00046754872892051935, -0.017255885526537895, -0.037604086101055145, -0.15493905544281006, -3.266281055402942e-05, -0.0009829933987930417, -1.1920928244535389e-07, -0.00010346830822527409, 0.0, 0.0, -0.0283392034471035, -0.0012709167785942554, -0.06513239443302155, -0.000788139586802572, -0.15598757565021515, -3.5909981727600098, -0.035574257373809814, -0.28469958901405334, -1.749822735786438, -0.001965973060578108, -0.4474634826183319, -0.7340426445007324, -0.5093059539794922, -0.00039641151670366526, -0.26785412430763245, -0.0288254264742136, -0.03782219812273979, -0.0075135971419513226, -0.0651097223162651, -0.0005476167425513268, -0.0328550860285759, -2.3841830625315197e-06, -2.3841830625315197e-06, -2.631908416748047, -0.03996419906616211, -0.00022671037004329264, -0.004538948182016611, -0.11583182215690613, -0.009648239240050316, -0.02672707848250866, -0.002984238788485527, -3.504691630951129e-05, -3.576272320060525e-06, -0.3837715983390808, -0.011433199979364872, -1.674896001815796], "finish_reason": "stop"}], "metrics": {"energy": 642.2952872829434, "energy_per_token": 3.4347341565932803, "time": 15.755472, "time_per_token": 0.08425386096256685}}
{"outputs": [{"text": "unique_words = Counter()\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n            with open(file_path, 'r') as f:\n                text = f.read()\n                words = text.split()\n                non_stopwords = [word for word in words if word.lower() not in STOPWORDS]\n                unique_words.update(non_stopwords)\n    return len(unique_words)", "tokens": ["unique", "_", "words", " =", " Counter", "()", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "text", " =", " f", ".", "read", "()", "\n", "                ", "words", " =", " text", ".", "split", "()", "\n", "                ", "non", "_", "stop", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "                ", "unique", "_", "words", ".", "update", "(", "non", "_", "stop", "words", ")", "\n", "    ", "return", " len", "(", "unique", "_", "words", ")", "\n", "\n", "if"], "logprobs": [-2.95263409614563, -0.010711908340454102, -0.4145702123641968, -0.31188732385635376, -0.9786543250083923, -0.0023235485423356295, -0.059014759957790375, -0.7408401370048523, -0.1892334520816803, -0.39200350642204285, -0.0003768687602132559, -0.02426229603588581, -1.0967194612021558e-05, -0.001705264556221664, -8.344646857949556e-07, -0.0002775999018922448, -0.0011710221879184246, -0.00014995403762441128, -3.3378546504536644e-06, -0.0004654039512388408, -0.008605539798736572, -0.005057399161159992, -0.027768107131123543, -0.023103225976228714, -0.0002803409588523209, -0.0038902093656361103, -2.145764938177308e-06, -4.768370445162873e-07, -0.10521142184734344, -0.0021452526561915874, -0.0004847066884394735, -2.2172682292875834e-05, -0.0073085324838757515, -0.018721310421824455, -0.001208766596391797, -0.46404579281806946, -0.46908292174339294, -0.0013192531187087297, -0.00012408917245920748, -0.007536550052464008, -2.50339189733495e-06, -7.510157047363464e-06, -9.417489309271332e-06, -0.0002585315378382802, -0.0001591317413840443, -0.0005193791585043073, -6.97350042173639e-05, -4.291525328881107e-06, -6.270212179515511e-05, -0.0002321927313460037, -3.790783375734463e-05, -0.006421882193535566, -0.018070939928293228, -0.044998899102211, -9.881961887003854e-05, -0.00027724236133508384, -0.0002924968139268458, -7.009260298218578e-05, 0.0, -0.02192123606801033, -0.04796166718006134, -0.0008684201166033745, -0.3041344881057739, -5.9126061387360096e-05, -1.773206353187561, -0.008779733441770077, -0.005826038774102926, -0.0004627825692296028, -1.7566149234771729, -0.0029580905102193356, -0.0038417596369981766, -6.735097849741578e-05, -1.07287787614041e-05, -0.0014549632323905826, -0.49397969245910645, -0.04712400212883949, -0.10104180127382278, -0.002834114944562316, -0.25904929637908936, -0.000102037942269817, -0.13534818589687347, -0.007633090019226074, -0.02312559261918068, -0.0066549573093652725, -2.4663705825805664, -0.012691914103925228, -0.001091480371542275, -0.742841899394989, -0.007829217240214348, -0.010217620991170406, -0.044826339930295944, -0.02644476667046547, -1.549708758830093e-05, -4.458328112377785e-05, -0.00019631843315437436, -0.004513552878051996, -0.017582619562745094, -0.331279456615448, -0.04846842959523201, -0.0003328961320221424, -0.0032259586732834578, -2.1815061700181104e-05, -0.00040165462996810675, -1.1920928244535389e-07, -7.199982064776123e-05, 0.0, 0.0, -0.05713459849357605, -0.01014611218124628, -0.00941881351172924, -0.010232017375528812, -4.4225667807040736e-05, -0.0007771808886900544, -0.05384722352027893, -2.0265558760002023e-06, -0.0013094907626509666, -0.12056273221969604, -9.536738616588991e-07, -1.1920922133867862e-06, -0.00036149643710814416, -0.00010024998482549563, -0.0032693292014300823, -0.05338025093078613, -0.0981638953089714, -0.07891871780157089, -0.00014077626110520214, -0.00025507534155622125, -4.768360213347478e-06, -7.152555099310121e-07, -0.23232898116111755, -0.08912234008312225, -0.025891639292240143, -0.973077654838562], "finish_reason": "stop"}], "metrics": {"energy": 497.1604045085908, "energy_per_token": 3.7380481541999306, "time": 11.143858, "time_per_token": 0.08378840601503759}}
{"outputs": [{"text": "word_counts = Counter()\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n            with open(file_path, 'r') as file:\n                text = file.read().lower()\n                words = text.split()\n                words = [word for word in words if word not in STOPWORDS]\n                word_counts.update(words)\n    total_unique_words = len(word_counts)\n    return total_unique_words", "tokens": ["word", "_", "counts", " =", " Counter", "()", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " file", ":", "\n", "                ", "text", " =", " file", ".", "read", "()", ".", "lower", "()", "\n", "                ", "words", " =", " text", ".", "split", "()", "\n", "                ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "                ", "word", "_", "counts", ".", "update", "(", "words", ")", "\n", "    ", "total", "_", "unique", "_", "words", " =", " len", "(", "word", "_", "counts", ")", "\n", "    ", "return", " total", "_", "unique", "_", "words", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.45963978767395, -0.032345082610845566, -0.9301877617835999, -0.0046941558830440044, -0.008595847524702549, -0.0015506636118516326, -0.06652813404798508, -0.8295753002166748, -0.2193050980567932, -0.35844072699546814, -0.00033623288618400693, -0.02679567039012909, -1.0013530300057027e-05, -0.001057661371305585, -1.0728830375228426e-06, -0.0003327769518364221, -0.0007911174325272441, -0.00011777184408856556, -4.172316494077677e-06, -0.000316927267704159, -0.009672442451119423, -0.005471492186188698, -0.02329995296895504, -0.023760810494422913, -0.0002797450579237193, -0.004220863804221153, -2.145764938177308e-06, -5.960462772236497e-07, -0.07189367711544037, -0.0021408514585345984, -0.0007102350937202573, -2.4676019165781327e-05, -0.0065587968565523624, -0.0141521655023098, -0.0015667318366467953, -0.4796718657016754, -0.4180378317832947, -0.0018170052208006382, -0.00011002412065863609, -0.007560567930340767, -2.3841830625315197e-06, -6.079655122448457e-06, -1.8596476365928538e-05, -0.0002580548170953989, -0.00016091958968900144, -0.00058466981863603, -7.390703103737906e-05, -2.50339189733495e-06, -5.8530047681415454e-05, -0.00025388356880284846, -4.875540980719961e-05, -0.0038329721428453922, -0.01643676869571209, -0.05477510020136833, -0.00010525626566959545, -0.00024959311122074723, -0.0003734129713848233, -6.401333666872233e-05, -1.1920928244535389e-07, -0.021851493045687675, -0.03470081090927124, -0.0008760428754612803, -0.21725504100322723, -4.0411134250462055e-05, -0.23762840032577515, -0.001090289675630629, -0.0007438276661559939, -0.00041166413575410843, -1.2655360698699951, -0.004163526464253664, -0.0022677676752209663, -8.654219709569588e-05, -1.9907753085135482e-05, -0.0007757514831610024, -1.256089448928833, -0.030547259375452995, -2.1457441107486375e-05, -0.1132485419511795, -0.02151833474636078, -0.07266352325677872, -0.0020284331403672695, -0.4148775339126587, -9.154854342341423e-05, -0.0025774375535547733, -0.0033193512354046106, -0.03271503373980522, -0.007735416758805513, -0.741816520690918, -0.04575943201780319, -0.015133916400372982, -0.0036802436225116253, -0.024697473272681236, -7.629365427419543e-06, -2.8013790142722428e-05, -0.00018952481332235038, -0.003518464043736458, -0.028430046513676643, -0.07036487013101578, -2.3007127310847864e-05, -0.0010300336871296167, -1.1920928244535389e-07, -8.05822346592322e-05, 0.0, 0.0, -0.11810775846242905, -0.024158155545592308, -0.0071539669297635555, -0.018093768507242203, -8.940656698541716e-06, -0.0003810394846368581, -0.015260603278875351, -1.1920922133867862e-06, -0.0004552758182398975, -0.06662293523550034, -0.0001012035645544529, -0.001984652131795883, -0.08939611166715622, -2.115015983581543, -0.0026707714423537254, -0.4372188448905945, -0.03696439042687416, -0.20544035732746124, -0.0005722792120650411, -0.0256949570029974, -0.00015400654228869826, -0.006700429134070873, -5.960462772236497e-07, -1.1920928244535389e-07, -0.022172296419739723, -0.0031711787451058626, -0.018524382263422012, -0.0290268212556839, -0.0022657455410808325, -1.311301275563892e-06, -2.622600959512056e-06, -2.0265558760002023e-06, -8.34461570775602e-06, -1.6671817302703857, -4.410734163684538e-06, -2.861018856492592e-06, -9.536697689327411e-06, -2.372236667724792e-05, -0.10308012366294861], "finish_reason": "stop"}], "metrics": {"energy": 511.39416604614246, "energy_per_token": 3.5761829793436535, "time": 11.991153, "time_per_token": 0.08385421678321679}}
{"outputs": [{"text": "if not os.path.exists(directory_path) or not os.path.isdir(directory_path):\n        raise ValueError(\"Invalid directory path\")\n\n    # Create a Counter object to count unique words\n    unique_word_counter = Counter()\n\n    # Iterate over files in the directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith(\".txt\"):\n            filepath = os.path.join(directory_path, filename)\n            with open(filepath, \"r\") as file:\n                words = file.read().split()\n                words = [word.lower() for word in words if word.lower() not in STOPWORDS]  # Filter stop words\n                unique_word_counter.update(words)\n\n    # Return the total count of unique non-stop words\n    return len(unique_word_counter)", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "_", "path", ")", " or", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " directory", " path", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " Counter", " object", " to", " count", " unique", " words", "\n", "    ", "unique", "_", "word", "_", "counter", " =", " Counter", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "path", ",", " \"", "r", "\"", ")", " as", " file", ":", "\n", "                ", "words", " =", " file", ".", "read", "()", ".", "split", "()", "\n", "                ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "  ", "#", " Filter", " stop", " words", "\n", "                ", "unique", "_", "word", "_", "counter", ".", "update", "(", "words", ")", "\n", "\n", "    ", "#", " Return", " the", " total", " count", " of", " unique", " non", "-", "stop", " words", "\n", "    ", "return", " len", "(", "unique", "_", "word", "_", "counter", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-3.3548271656036377, -0.1523362398147583, -0.4812406301498413, -7.533743337262422e-05, -0.00198643677867949, -5.149708886165172e-05, -1.1329054832458496, -0.001156733720563352, -0.0019976201001554728, -0.0002146728802472353, -3.099436753473128e-06, -2.4782609939575195, -0.014703601598739624, -0.0026647080667316914, -0.0016872945707291365, -2.3841855067985307e-07, -0.001076952670700848, -8.106198947643861e-06, -0.00012718822108581662, -0.00030620177858509123, -8.415821503149346e-05, -4.7205765440594405e-05, -1.728519782773219e-05, 0.0, -0.0007712250226177275, -0.002574702724814415, -0.003006464336067438, -0.3060135841369629, -0.11923813074827194, -6.318072337307967e-06, -0.04154587537050247, -0.18519507348537445, -0.3337863087654114, -0.023724956437945366, -0.10501524806022644, -1.3759331703186035, -0.0003781795676331967, -0.001558043179102242, -0.05455060303211212, -0.000708090839907527, -2.272242546081543, -2.1314423084259033, -0.8836622834205627, -0.45344337821006775, -0.2908110022544861, -0.07842418551445007, -1.1146472692489624, -3.346153497695923, -0.636908769607544, -0.05449890345335007, -0.0002632986579556018, -2.83833909034729, -0.000692842761054635, -0.7474231123924255, -0.0018498466815799475, -0.1836310476064682, -0.0005355831235647202, -0.0014419882791116834, -0.0007487116381525993, -0.0007744412287138402, -0.024660024791955948, -0.00033420699764974415, -0.15039309859275818, -0.33121663331985474, -0.0010266992030665278, -0.31178513169288635, -1.2128207683563232, -0.10095548629760742, -0.02412429451942444, -0.07182478159666061, -0.02871156670153141, -0.00018404220463708043, -0.004749326966702938, -0.5357571840286255, -6.294052582234144e-05, -0.00560545502230525, -1.9073468138230965e-06, -0.0002786724944598973, 0.0, -1.6331539882230572e-05, -7.188061863416806e-05, -3.6477376852417365e-05, 0.0, -0.0002109781780745834, -0.00033778208307921886, -0.0025044286157935858, -0.2135803997516632, -0.015527543611824512, -0.0001045410826918669, -0.004226086661219597, -1.1920928244535389e-07, -3.576278118089249e-07, -1.7912780046463013, -0.0016092220321297646, -0.0006646093097515404, -0.00037400881410576403, -1.7165990357170813e-05, -0.007491708267480135, -0.024271836504340172, -0.0014765085652470589, -0.06903934478759766, -1.095313310623169, -5.245071224635467e-05, -0.002665421459823847, -3.576278118089249e-07, -2.7418097943154862e-06, -4.172316494077677e-06, -0.0001928620331455022, -2.7656173188006505e-05, -0.00018845213344320655, -5.483612312673358e-06, 0.0, -2.062299427052494e-05, -4.565611743601039e-05, -1.585470999998506e-05, -0.006823334377259016, -1.3688603639602661, -0.453591912984848, -4.589452510117553e-05, -0.00015686711412854493, -0.0001461399078834802, -1.9073468138230965e-06, -0.01287916675209999, -0.57956862449646, -0.0011383965611457825, -0.00020144341397099197, -0.3992661237716675, -3.4450891689630225e-05, -0.029127445071935654, -0.0005936052766628563, -0.0011992413783445954, -0.00045348849380388856, -1.927659034729004, -0.03689040243625641, -0.07346867024898529, -0.0001714082609396428, -2.5033637939486653e-05, -0.0002131234941771254, -0.0013823487097397447, -0.28836172819137573, -0.0021757043432444334, -0.1693897694349289, -0.15531930327415466, -1.7953317165374756, -0.11027194559574127, -0.015232778154313564, -0.0063666850328445435, -1.3298232555389404, -0.10351027548313141, -5.876845170860179e-05, -0.02815389633178711, -1.9192511899746023e-05, -2.062299427052494e-05, -6.01988795096986e-05, -0.14627787470817566, -0.05420241877436638, -0.1007533073425293, -0.37682536244392395, -0.0011757849715650082, -0.002284181071445346, -4.660974445869215e-05, -0.0007990981102921069, 0.0, -1.9430925021879375e-05, 0.0, 0.0, -0.060572560876607895, -1.9074249267578125, -4.446407547220588e-05, -1.9121768474578857, -0.30085164308547974, -0.41461440920829773, -0.05816245824098587, -0.018824147060513496, -0.008793912827968597, -6.198863957251888e-06, -0.0010161004029214382, -6.318072337307967e-06, -7.557583012385294e-05, -0.014094219543039799, -5.960462772236497e-07, -0.0005751386051997542, -0.0441008023917675, -6.472854875028133e-05, -0.10311475396156311, -0.00785381905734539, -0.0009727513534016907, -1.3700922727584839, -0.7130131125450134, -0.01817583292722702, -0.20105820894241333, -0.023644044995307922, -0.002266697119921446, -0.00157196877989918, -0.7962129712104797, -0.00018130090029444546, -0.00013362467871047556, -0.008962048217654228, -0.060087841004133224, -0.0004935238393954933, -0.016052179038524628, -0.05706445127725601, -8.892617915989831e-05, -0.0009578645695000887, -4.768370445162873e-07, -7.152555099310121e-07, -1.5497195136049413e-06, -3.3378546504536644e-06, -1.3875155448913574, -1.0728830375228426e-06, -4.172316494077677e-06, -1.5616295058862306e-05, -3.158996332786046e-05, -0.13307122886180878], "finish_reason": "stop"}], "metrics": {"energy": 755.850662287712, "energy_per_token": 3.532012440596785, "time": 18.088535, "time_per_token": 0.0845258644859813}}
{"outputs": [{"text": "total_count = 0\n    for file in os.listdir(directory_path):\n        if file.endswith('.txt'):\n            # Count unique non-stop words for each file\n            file_path = os.path.join(directory_path, file)\n            with open(file_path, 'r') as f:\n                content = f.read()\n                words = content.split()\n                # Filter out stop words and count unique words\n                non_stop_words = [word for word in words if word.lower() not in STOPWORDS]\n                total_count += len(set(non_stop_words))\n    return total_count", "tokens": ["total", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "#", " Count", " unique", " non", "-", "stop", " words", " for", " each", " file", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "content", " =", " f", ".", "read", "()", "\n", "                ", "words", " =", " content", ".", "split", "()", "\n", "                ", "#", " Filter", " out", " stop", " words", " and", " count", " unique", " words", "\n", "                ", "non", "_", "stop", "_", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "                ", "total", "_", "count", " +=", " len", "(", "set", "(", "non", "_", "stop", "_", "words", "))", "\n", "    ", "return", " total", "_", "count", "\n", "\n", "if"], "logprobs": [-1.9253475666046143, -0.010522008873522282, -0.4601951539516449, -0.0072343298234045506, -0.3023450970649719, -0.0007813499541953206, -0.06408875435590744, -0.4572114050388336, -0.28625333309173584, -1.7778453826904297, -0.6672852039337158, -0.025753861293196678, -2.288792165927589e-05, -0.028050508350133896, -2.264974000354414e-06, -0.0006521005416288972, -0.002165950369089842, -0.00019369633810129017, -7.510157047363464e-06, -0.0016638495726510882, -0.02309449017047882, -0.006693797651678324, -0.032007548958063126, -0.02642967365682125, -0.0007232195930555463, -0.0027831175830215216, -1.0609570381348021e-05, 0.0, -0.160376638174057, -0.005374387837946415, -0.00031096869497559965, -5.686121585313231e-05, -0.005904019810259342, -0.025637907907366753, -0.0026159610133618116, -3.4342947006225586, -3.558864116668701, -1.7002968788146973, -0.37810197472572327, -0.0036978216376155615, -0.0008967668982222676, -0.1737963706254959, -1.3438035249710083, -0.20945286750793457, -0.04294087365269661, -0.29029393196105957, -0.0011828100541606545, -0.8760630488395691, -0.04289679229259491, -0.11318967491388321, -0.0002915434306487441, -0.01691673882305622, -2.3841855067985307e-07, -8.702239938429557e-06, -5.960462772236497e-07, -0.0003060825983993709, -0.0001161031104857102, -0.000558220490347594, -7.235741941258311e-05, -5.483612312673358e-06, -8.320462075062096e-05, -0.000525217386893928, -0.00010072677832795307, -0.0023648173082619905, -0.008155496791005135, -0.3044481575489044, -0.0001770101225702092, -0.0003134713042527437, -0.00022539935889653862, -0.0005336767644621432, -5.960462772236497e-07, -0.02028832770884037, -0.04963807389140129, -0.0013142528478056192, -0.22964692115783691, -4.076874756719917e-05, -0.1243235170841217, -0.014154398813843727, -0.002026529749855399, -0.00047922570956870914, -1.8363116979599, -0.0010412277188152075, -0.005988038145005703, -8.785339014139026e-05, -1.0490362910786644e-05, -0.006619194056838751, -0.34919679164886475, -0.04950886219739914, -0.20609934628009796, -0.007412667386233807, -0.2114696502685547, -9.643566590966657e-05, -0.07582485675811768, -0.004826680291444063, -0.03686937689781189, -0.016445092856884003, -2.223292112350464, -1.6303906440734863, -1.144745111465454, -0.0758771225810051, -0.18271461129188538, -0.6599878072738647, -0.22881591320037842, -0.14325404167175293, -0.35748982429504395, -0.1167980432510376, -0.0002754547167569399, -1.3161158561706543, -0.008695358410477638, -0.00018940561858471483, -0.08071453124284744, -0.014151813462376595, -0.0023004752583801746, -0.013851821422576904, -0.012257014401257038, -0.030649928376078606, -7.033323527139146e-06, -4.088794958079234e-05, -0.0001902399235405028, -0.0012331746984273195, -0.007877473719418049, -0.22627879679203033, -0.028448469936847687, -0.00032574593205936253, -0.0015391181223094463, -1.3232143828645349e-05, -0.0003420721332076937, -1.1920928244535389e-07, -7.56950321374461e-05, 0.0, 0.0, -0.027024509385228157, -0.0021751096937805414, -0.0009127265075221658, -0.9133576154708862, -1.4781842764932662e-05, -0.0003270567976869643, -0.00015138434537220746, -0.007295751944184303, -8.034383063204587e-05, -0.05117917060852051, -0.0002531684876885265, -0.0032821616623550653, -3.576278118089249e-07, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.1920922133867862e-06, -0.00034254882484674454, -0.00856157299131155, -0.045675043016672134, -0.012510748580098152, -0.0011308948742225766, -4.172316494077677e-06, -7.390948667307384e-06, -0.1929326355457306, -0.015993405133485794, -1.0279030799865723], "finish_reason": "stop"}], "metrics": {"energy": 536.1480551156998, "energy_per_token": 3.4149557650681515, "time": 13.035391, "time_per_token": 0.08302796815286624}}
{"outputs": [{"text": "words_counter = Counter()\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            with open(directory_path + filename, 'r', encoding='utf-8') as file:\n                words = file.read().strip().replace(\"\\n\", \" \").split()\n                filtered_words = [word for word in words if word not in STOPWORDS and not word.isdigit()]\n                words_counter += Counter(filtered_words)\n    return len(words_counter)", "tokens": ["words", "_", "counter", " =", " Counter", "()", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "with", " open", "(", "directory", "_", "path", " +", " filename", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "                ", "words", " =", " file", ".", "read", "()", ".", "strip", "()", ".", "replace", "(", "\"", "\\", "n", "\"", ",", " \"", " \"", ")", ".", "split", "()", "\n", "                ", "filtered", "_", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " not", " word", ".", "is", "digit", "()", "]", "\n", "                ", "words", "_", "counter", " +=", " Counter", "(", "filtered", "_", "words", ")", "\n", "    ", "return", " len", "(", "words", "_", "counter", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-3.707892656326294, -0.7958120107650757, -0.6446005702018738, -0.008137760683894157, -0.007024473510682583, -0.002500266768038273, -0.07206051796674728, -0.6877841949462891, -0.21956966817378998, -0.4646676182746887, -0.0008033862104639411, -0.037554025650024414, -1.3708974620385561e-05, -0.004249115474522114, -7.152555099310121e-07, -0.0002703301142901182, -0.0016956250183284283, -0.00015269544383045286, -3.3378546504536644e-06, -0.0009913297835737467, -0.010570607148110867, -0.008056051097810268, -0.043752267956733704, -0.05781249329447746, -0.0005525015876628458, -0.006147049367427826, -3.933898824470816e-06, -7.152555099310121e-07, -0.11468377709388733, -0.00516971480101347, -0.00047052756417542696, -2.5748875486897305e-05, -0.008243228308856487, -0.01739085651934147, -0.0023291383404284716, -0.7297488451004028, -0.0003071551618631929, -0.0017879704246297479, -2.546245574951172, -8.106198947643861e-06, -4.768370445162873e-07, -0.03958110511302948, -0.11851730942726135, -0.05455387756228447, -0.09882448613643646, -0.007238590624183416, -1.2116655111312866, -0.00020466140995267779, -0.012342149391770363, -0.082186758518219, -0.05755075439810753, -0.060607679188251495, -0.0073359874077141285, -0.026697248220443726, -0.0001174142598756589, -0.3254290521144867, -0.004122687969356775, -0.0064527965150773525, -0.0009538153535686433, -1.153428316116333, -0.31821146607398987, -0.1686176061630249, -5.6622808187967166e-05, -2.52720492426306e-05, -0.0010637345258146524, -0.003049487480893731, -2.937986373901367, -0.006194676738232374, -0.01232872623950243, -2.8463022708892822, -1.9115477800369263, -0.027239840477705002, -0.3871670663356781, -0.02943747490644455, -0.011241314932703972, -0.0004236992390360683, -0.08606047928333282, -0.30093422532081604, -0.0013436584267765284, -0.03313340246677399, -0.2399056851863861, -0.4457659423351288, -0.05395441874861717, -0.028927229344844818, -2.4206364154815674, -0.0034645316191017628, -0.0032844191882759333, -0.003975703381001949, -0.0342782624065876, -0.010042025707662106, -0.12530744075775146, -2.1934269170742482e-05, -4.5536911784438416e-05, -0.00019786784832831472, -0.005118717905133963, -0.07506860792636871, -1.177154302597046, -2.90866428258596e-05, -0.0010548033751547337, -1.1920928244535389e-07, -5.507317473529838e-05, 0.0, 0.0, -1.6662403345108032, -2.0713582038879395, -0.07856547832489014, -0.030853960663080215, -0.09663796424865723, -0.2388591766357422, -0.0004621868138201535, -0.07783666253089905, -0.009425072930753231, -0.013250625692307949, -0.07745545357465744, -0.0005779979983344674, -0.001073380233719945, -2.8549857139587402, -0.003179615829139948, -0.004901180509477854, -0.003562177997082472, -3.933898824470816e-06, -2.7418097943154862e-06, -0.0004948345012962818, -0.003774781245738268, -0.4230985641479492, -0.2730173170566559, -0.11816973239183426, -0.0012724645202979445, -0.01581835001707077, -1.6689286894688848e-06, -6.6756979322235566e-06, -1.7289119958877563, -1.4305104514278355e-06, -1.1920922133867862e-06, -7.629365427419543e-06, -2.3483953555114567e-05, -0.12537358701229095], "finish_reason": "stop"}], "metrics": {"energy": 498.85083433723446, "energy_per_token": 3.641246965965215, "time": 11.359376, "time_per_token": 0.08291515328467153}}
{"outputs": [{"text": "if not directory_path.endswith('/'):\n        directory_path += '/'\n    # Create a Counter object to keep track of word frequencies\n    word_counter = Counter()\n\n    # Find all text files in the directory\n    text_files = [file for file in os.listdir(directory_path) if file.endswith('.txt')]\n\n    # Process each file\n    for text_file in text_files:\n        # Read the file contents\n        with open(os.path.join(directory_path, text_file), 'r') as f:\n            contents = f.read()\n\n        # Split the contents into individual words\n        words = contents.split()\n\n        # Exclude stopwords and count unique words\n        for word in words:\n            if word not in STOPWORDS:\n                word_counter[word] += 1\n\n    # Calculate the total count of unique non-stop words\n    unique_count = len(word_counter.keys())\n\n    return unique_count", "tokens": ["if", " not", " directory", "_", "path", ".", "end", "sw", "ith", "('/", "')", ":", "\n", "        ", "directory", "_", "path", " +=", " '/", "'", "\n", "    ", "#", " Create", " a", " Counter", " object", " to", " keep", " track", " of", " word", " frequencies", "\n", "    ", "word", "_", "counter", " =", " Counter", "()", "\n", "\n", "    ", "#", " Find", " all", " text", " files", " in", " the", " directory", "\n", "    ", "text", "_", "files", " =", " [", "file", " for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", ")", " if", " file", ".", "end", "sw", "ith", "('", ".", "txt", "')", "]", "\n", "\n", "    ", "#", " Process", " each", " file", "\n", "    ", "for", " text", "_", "file", " in", " text", "_", "files", ":", "\n", "        ", "#", " Read", " the", " file", " contents", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " text", "_", "file", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "contents", " =", " f", ".", "read", "()", "\n", "\n", "        ", "#", " Split", " the", " contents", " into", " individual", " words", "\n", "        ", "words", " =", " contents", ".", "split", "()", "\n", "\n", "        ", "#", " Ex", "clude", " stop", "words", " and", " count", " unique", " words", "\n", "        ", "for", " word", " in", " words", ":", "\n", "            ", "if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "                ", "word", "_", "counter", "[", "word", "]", " +=", " ", "1", "\n", "\n", "    ", "#", " Calculate", " the", " total", " count", " of", " unique", " non", "-", "stop", " words", "\n", "    ", "unique", "_", "count", " =", " len", "(", "word", "_", "counter", ".", "keys", "())", "\n", "\n", "    ", "return", " unique", "_", "count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.3548271656036377, -0.1523362398147583, -1.1690610647201538, -0.00027509720530360937, -3.790783375734463e-05, -0.7722393870353699, -0.06679857522249222, -5.519237674889155e-05, -4.768370445162873e-07, -0.1282424032688141, -0.00013839241000823677, -0.00516864750534296, -0.06567361950874329, -0.007442012894898653, -0.007786517031490803, -0.0005647733341902494, -3.85038583772257e-05, -0.03793169930577278, -0.005335140507668257, -8.046303264563903e-05, -0.03284758701920509, -0.7662941217422485, -2.3921408653259277, -2.4444169998168945, -1.1150667667388916, -1.1029126644134521, -0.21719461679458618, -0.07990672439336777, -1.4170180559158325, -0.00788977462798357, -0.00022790218645241112, -0.3712522089481354, -1.2125948667526245, -0.0791308730840683, -0.001278893556445837, -0.5156670212745667, -0.014239019714295864, -0.49815255403518677, -0.0009529816452413797, -0.0022003266494721174, -0.0022356535773724318, -0.0017417988274246454, -0.18920108675956726, -0.0005821678787469864, -0.07858873158693314, -3.557619094848633, -0.11262979358434677, -1.253600001335144, -0.04932868480682373, -0.27284401655197144, -0.010685018263757229, -0.293337345123291, -0.44752511382102966, -0.0005385617259889841, -0.8577834963798523, -0.006750516593456268, -0.03199242427945137, -0.0019666869193315506, -0.07506562769412994, -1.270564317703247, -0.025115953758358955, -0.0002300474588992074, -7.629103492945433e-05, -0.002110279630869627, -4.887569048150908e-06, -0.0016041041817516088, 0.0, -0.00025412190007045865, -0.007334448862820864, -3.862306402879767e-05, -2.3841855067985307e-07, -0.0007325111655518413, -0.010384337976574898, -0.004099537618458271, -0.0005258131423033774, -0.0011275607394054532, -2.3841855067985307e-07, 0.0, -0.041522204875946045, -0.0035459042992442846, -0.0003578022588044405, -4.2437604861333966e-05, -0.002932892646640539, -0.00040415700641460717, -0.033019110560417175, -0.00021479207498487085, -0.6927599310874939, -1.7178856134414673, -0.005886006634682417, -1.8527350425720215, -0.2308829128742218, -0.00025876989820972085, -0.0016127924900501966, -1.7090471982955933, -0.02016986906528473, -0.0021777264773845673, -0.001508409040980041, -0.0011950739426538348, -2.3841855067985307e-07, 0.0, -8.189342770492658e-05, -0.00015400654228869826, -0.008619958534836769, -1.4630321264266968, -2.039761543273926, -0.23715831339359283, -0.6792607307434082, -2.702549457550049, -0.17307382822036743, -0.0006987990345805883, -0.058252546936273575, -6.603976362384856e-05, -0.001301514101214707, -2.063814163208008, -1.2636104656849056e-05, -3.576214658096433e-05, -7.152555099310121e-07, -0.0002779574424494058, -0.00011681827891152352, -0.00023326536756940186, -2.074220174108632e-05, -1.1920928244535389e-07, -0.0005241450853645802, -0.0020436609629541636, -8.344646857949556e-07, -3.576278118089249e-07, -0.021791892126202583, -4.184158387943171e-05, -0.043127112090587616, -0.0006934384000487626, -0.19590216875076294, -5.829164365422912e-05, -1.172874927520752, -0.006921837106347084, -0.0007793250260874629, -0.0005750194541178644, -2.7564172744750977, -0.00011336160969221964, -0.0007934997556731105, -3.290122185717337e-05, -5.364403477869928e-06, -0.008236252702772617, -0.05052022263407707, -0.06534704566001892, -0.010820052586495876, -0.0034303173888474703, -0.8077806830406189, -0.10374489426612854, -0.3163658678531647, -0.01948513463139534, -1.666636347770691, -0.013059324584901333, -0.11776703596115112, -0.000409161759307608, -0.020813506096601486, -0.0025415283162146807, -0.017059490084648132, -2.2649508537142538e-05, -0.01806965097784996, -0.00413954583927989, -0.0024391443002969027, -0.010043914429843426, -0.00037377048283815384, -0.00800330936908722, -2.5344274044036865, -0.0009305914281867445, -0.10154347866773605, -0.8027231693267822, -1.0876247882843018, -2.135871648788452, -1.4520885944366455, -0.6746417880058289, -0.09408082813024521, -0.00031287543242797256, -1.2191270589828491, -0.00016449528629891574, -0.00016652150952722877, -0.011967171914875507, -5.566918844124302e-05, -0.0001867835089797154, -0.0005819296347908676, -0.12605197727680206, -0.011530778370797634, -0.7824254035949707, -2.264974000354414e-06, -0.0003357561945449561, 0.0, -6.603976362384856e-05, 0.0, 0.0, -0.04303348436951637, -0.005917766597121954, -0.0006348263123072684, -0.018392140045762062, -0.0019629988819360733, -0.00014065706636756659, -0.01149365771561861, -0.00014923889830242842, -0.04949502274394035, -0.0015509016811847687, -0.0005409446312114596, -0.00012373158824630082, -0.004903197288513184, -0.013453886844217777, -0.0034493254497647285, -0.13139323890209198, -2.3220789432525635, -0.04040038213133812, -0.11144543439149857, -0.1242661401629448, -0.001981558743864298, -0.008256824687123299, -0.11201237142086029, -7.045020902296528e-05, -0.00011324241495458409, -0.011419410817325115, -0.06258625537157059, -0.0007060657371766865, -0.6459406614303589, -9.345571743324399e-05, -2.056586265563965, -0.0031815171241760254, -0.09115668386220932, -0.00021586472576018423, -0.002203776268288493, -2.3841855067985307e-07, -3.576272320060525e-06, -2.742851495742798, -0.01984398066997528, -8.535020606359467e-05, -0.006608773022890091, -0.06835944950580597, -0.00029976642690598965, -0.06801726669073105, -0.004510823171585798, -4.410734163684538e-06, -1.0371154530730564e-05, -1.9008599519729614, -2.145764938177308e-06, -3.3378546504536644e-06, -6.318072337307967e-06, -1.645074735279195e-05, -0.12303055822849274], "finish_reason": "stop"}], "metrics": {"energy": 841.0510951156613, "energy_per_token": 3.4611156177599227, "time": 20.57832, "time_per_token": 0.08468444444444445}}
{"outputs": [{"text": "count = 0\n\n    # Iterate over each file in the directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):  # Check if it's a '.txt' file\n            file_path = os.path.join(directory_path, filename)\n            with open(file_path, 'r', encoding='utf-8') as file:\n                text = file.read()\n                # Tokenize the text into words and remove stopwords\n                words = [word for word in nltk.word_tokenize(text) if word.lower() not in STOPWORDS]\n                count += len(set(words))  # Count the unique non-stop words\n\n    return count", "tokens": ["count", " =", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " file", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "  ", "#", " Check", " if", " it", "'", "s", " a", " '", ".", "txt", "'", " file", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "                ", "text", " =", " file", ".", "read", "()", "\n", "                ", "#", " Token", "ize", " the", " text", " into", " words", " and", " remove", " stop", "words", "\n", "                ", "words", " =", " [", "word", " for", " word", " in", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "text", ")", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "                ", "count", " +=", " len", "(", "set", "(", "words", "))", "  ", "#", " Count", " the", " unique", " non", "-", "stop", " words", "\n", "\n", "    ", "return", " count", "\n", "\n", "#"], "logprobs": [-3.0806400775909424, -0.2568671703338623, -1.5746177434921265, -0.004528386518359184, -0.05674203485250473, -1.909098505973816, -0.0018040348077192903, -1.3657927513122559, -0.7631461024284363, -0.029482964426279068, -0.3039938509464264, -1.4232323169708252, -0.10895276814699173, -0.030496731400489807, -0.009089047089219093, -0.08031340688467026, -0.024499276652932167, -0.0005187834613025188, -0.008824635297060013, -0.3583989143371582, -0.00022015532886143774, -0.00564220268279314, -5.006777428206988e-06, -0.0017578639090061188, 0.0, -0.00028200942324474454, -0.0005708495154976845, -0.0002302858338225633, -3.576272320060525e-06, -0.0002694958820939064, -0.001105650793761015, -0.02032465487718582, -0.21044191718101501, -0.015167145058512688, -0.0001740304142003879, -0.003950411919504404, -3.576278118089249e-07, 0.0, -0.13925188779830933, -0.0016578990034759045, -0.00038818930624984205, -1.8954096958623268e-05, -0.0037139742635190487, -1.8468798398971558, -3.933898824470816e-06, -0.5805521011352539, -0.01721932925283909, -1.5073413848876953, -0.07798818498849869, -1.3351351299206726e-05, -0.0019220703979954123, -1.5236222743988037, -0.0025460466276854277, -8.821098163025454e-05, -0.00024863966973498464, -0.00043752157944254577, -0.001279131742194295, -0.009590031579136848, -0.0868879184126854, -0.31919196248054504, -0.00012540031457319856, -3.93382906622719e-05, -0.009304848499596119, -1.4305104514278355e-06, -6.079655122448457e-06, -1.1920922133867862e-06, -0.00015448330668732524, -8.809178689261898e-05, -0.0004895919119007885, -5.185469490243122e-05, -1.4305104514278355e-06, -3.099393507000059e-05, -5.07818695041351e-05, -1.5735502529423684e-05, -0.13924887776374817, -1.2573939561843872, -0.15912826359272003, -5.2927523938706145e-05, -0.00022110878489911556, -0.00019000156316906214, -2.777537883957848e-05, -1.1920928244535389e-07, -0.012790076434612274, -0.05287021026015282, -0.0010724276071414351, -1.1718111038208008, -0.00013052565918769687, -0.02180997096002102, -0.03820929303765297, -0.057254496961832047, -0.03207347169518471, -0.0011988840997219086, -0.026063544675707817, -3.886147169396281e-05, -0.026912765577435493, -0.0009435730753466487, -0.03911659121513367, -0.0014779369812458754, -1.1321601867675781, -0.004827036056667566, -0.0015647084219381213, -0.0001438752660760656, -1.168244216387393e-05, -0.0007665794692002237, -0.5409043431282043, -0.25974738597869873, -1.885493278503418, -3.4695048332214355, -0.033468592911958694, -0.2008257508277893, -0.03486625850200653, -0.6137760281562805, -0.1531880646944046, -1.9494078159332275, -1.0833334922790527, -0.02613973058760166, -0.41333067417144775, -0.07593192905187607, -0.0005204515182413161, -0.040157750248909, -0.006666562054306269, -0.1734127551317215, -0.0018146253423765302, -0.2741156220436096, -2.169585604860913e-05, -3.1709168979432434e-05, -0.5561614036560059, -4.708655978902243e-05, -3.576272320060525e-06, -3.397406908334233e-05, -0.027731815353035927, -0.004362115170806646, -3.6000557884108275e-05, 0.0, -0.00015829740732442588, -0.018657661974430084, -0.03286558389663696, -0.020376168191432953, -0.025033876299858093, -0.19820576906204224, -0.3030119240283966, -0.0004164305282756686, -0.0007164295529946685, -1.0132738680113107e-05, -0.0002044230350293219, 0.0, -8.999896090244874e-05, 0.0, 0.0, -0.041162703186273575, -0.0008873577462509274, -0.03584928438067436, -0.6236620545387268, -0.0027014450170099735, -0.044560953974723816, -0.00020752183627337217, -0.18928435444831848, -0.0003854485403280705, -0.0030769407749176025, -0.0017134760273620486, -0.45051172375679016, -2.3841855067985307e-07, -0.5183783173561096, -0.7132343649864197, -0.035595767199993134, -0.3592708706855774, -0.00012242044613230973, -5.781483559985645e-05, -0.030486902222037315, -0.18020099401474, -0.10141800343990326, -0.0005127069307491183, -0.007624099031090736, -0.000786591088399291, -0.351362019777298, -0.014165094122290611, -1.3062946796417236], "finish_reason": "stop"}], "metrics": {"energy": 625.4230567779542, "energy_per_token": 3.533463597615561, "time": 14.937017, "time_per_token": 0.08438992655367232}}
{"outputs": [{"text": "# Initialize a Counter object to count words\n    word_count = Counter()\n\n    # Iterate over files with a '.txt' extension in the specified directory\n    for file in os.listdir(directory_path):\n        if file.endswith('.txt'):\n            filepath = os.path.join(directory_path, file)\n\n            # Open the file in read mode\n            with open(filepath, 'r') as f:\n                # Read the file content and split it into words\n                words = f.read().split()\n\n                # Exclude stop words from the count\n                words = [word for word in words if word.lower() not in STOPWORDS]\n\n                # Update the word count using the Counter object\n                word_count.update(words)\n\n    # Return the total count of unique words\n    return len(word_count)", "tokens": ["#", " Initialize", " a", " Counter", " object", " to", " count", " words", "\n", "    ", "word", "_", "count", " =", " Counter", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " files", " with", " a", " '", ".", "txt", "'", " extension", " in", " the", " specified", " directory", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", ")", "\n", "\n", "            ", "#", " Open", " the", " file", " in", " read", " mode", "\n", "            ", "with", " open", "(", "file", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "#", " Read", " the", " file", " content", " and", " split", " it", " into", " words", "\n", "                ", "words", " =", " f", ".", "read", "()", ".", "split", "()", "\n", "\n", "                ", "#", " Ex", "clude", " stop", " words", " from", " the", " count", "\n", "                ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "                ", "#", " Update", " the", " word", " count", " using", " the", " Counter", " object", "\n", "                ", "word", "_", "count", ".", "update", "(", "words", ")", "\n", "\n", "    ", "#", " Return", " the", " total", " count", " of", " unique", " words", "\n", "    ", "return", " len", "(", "word", "_", "count", ")", "\n", "\n", "if"], "logprobs": [-1.3890316486358643, -0.8590778112411499, -1.293649435043335, -0.27931201457977295, -0.23070888221263885, -0.1275348663330078, -0.9977771639823914, -1.6784825325012207, -0.05457193776965141, -0.0007033258443698287, -0.3516133427619934, -0.010587356984615326, -1.8950196504592896, -0.01732044480741024, -0.003244614228606224, -0.0005769256968051195, -0.0006847421173006296, -0.05851208046078682, -0.0004789874074049294, -0.0335431806743145, -0.6271690726280212, -0.0010494445450603962, -0.4127124547958374, -1.5609960556030273, -2.535093069076538, -2.4105541706085205, -0.34528642892837524, -0.006196098402142525, -0.00019858295854646713, -0.00021765247220173478, -0.004485070705413818, -0.3187953531742096, -0.004435463342815638, -1.10011625289917, -0.0012348415330052376, -0.013411897234618664, -0.0003152588615193963, -0.016390211880207062, -1.0511647462844849, -0.34307754039764404, -0.07235164195299149, -1.3708974620385561e-05, -0.03506080061197281, -1.1920928244535389e-07, -0.00029130507027730346, -0.0010559941874817014, -0.0001823735801735893, -2.861018856492592e-06, -0.004056915640830994, -0.0008049347088672221, -0.003910158760845661, -0.02526404894888401, -0.013628179207444191, -0.0004371640970930457, -0.0017421558732166886, -7.152555099310121e-07, 0.0, -0.09458818286657333, -0.0012449617497622967, -0.00013183678674977273, -4.303362584323622e-05, -0.0017297795275226235, -0.01371766533702612, -0.005315931048244238, -0.7443088889122009, -2.757814407348633, -0.0014859121292829514, -0.05496998131275177, -2.145764938177308e-06, -7.188061863416806e-05, -1.156323378381785e-05, -0.0006993946735747159, -0.00015043080202303827, -0.0005589353386312723, -4.5298504119273275e-05, -1.0728830375228426e-06, -8.523101132595912e-05, -0.0014346078969538212, -8.546940807718784e-05, -0.021092159673571587, -0.4327867925167084, -0.001450677984394133, -0.07617774605751038, -0.7913942933082581, -0.2628110647201538, -0.03127622604370117, -0.8113012313842773, -0.12772436439990997, -0.015041151084005833, -1.3388431072235107, -7.414542778860778e-05, -0.006852578371763229, -0.0001070442158379592, -0.00034767304896377027, -0.000547378440387547, -0.000510204816237092, -0.003916333429515362, -0.09246224910020828, -0.0011389919091016054, -0.17041821777820587, -2.8132995794294402e-05, -0.10892807692289352, -0.025935431942343712, -0.000428108120104298, -0.007452070247381926, -0.11794186383485794, -0.3525073230266571, -0.13580891489982605, -0.6005109548568726, -0.855191707611084, -0.48703083395957947, -0.1684630960226059, -0.3459615707397461, -0.005875459406524897, -0.08036092668771744, -0.03625255078077316, -9.691245941212401e-05, -0.15362714231014252, -0.005360633600503206, -0.008824044838547707, -3.6954811548639555e-06, -4.887569048150908e-06, -8.225102646974847e-05, -0.00023100091493688524, -0.010819698683917522, -0.0017321596387773752, -0.0004415729199536145, -0.14366580545902252, -0.006150959059596062, -0.00551037909463048, -2.486565589904785, -0.00017510310863144696, -0.10718708485364914, -0.7806206345558167, -1.6184637546539307, -0.08923269063234329, -2.8023428916931152, -0.06728016585111618, -9.512448741588742e-05, -0.4393793046474457, -0.04958793520927429, -0.00979982316493988, -0.03356369957327843, -0.012421743012964725, -2.0265558760002023e-06, -2.276871418871451e-05, -3.421248038648628e-05, -0.0010682597057893872, -0.004481629468500614, -0.2985783517360687, -0.016012879088521004, -0.0003449321957305074, -0.002044017892330885, -9.179073458653875e-06, -0.0003466005437076092, 0.0, -4.625213477993384e-05, 0.0, 0.0, -0.01039554551243782, -0.0007216709782369435, -0.04450041055679321, -0.0037165870890021324, -0.003237128257751465, -0.04957783967256546, -0.019133059307932854, -0.7617323994636536, -0.0737927183508873, -1.1170389652252197, -0.38865897059440613, -0.18350692093372345, -0.13254733383655548, -0.0020154656376689672, -6.97350042173639e-05, -0.0023212889209389687, -9.536697689327411e-06, -2.3007127310847864e-05, -0.0006860524881631136, -2.3841855067985307e-07, -0.0009417866240255535, -0.016556138172745705, -0.00019107422849629074, -0.0002033503697020933, -0.005346404854208231, -0.0029384789522737265, -0.06947304308414459, -0.2123115360736847, -0.0021230080164968967, -0.09595069289207458, -0.0731360986828804, -0.0010625437134876847, -0.010930308140814304, -2.0079784393310547, -0.5367197394371033, -0.0003219324571546167, -0.018332917243242264, -0.0715937614440918, -0.0001212284987559542, -0.0032618434634059668, -1.2516897186287679e-05, -1.2874520507466514e-05, -0.2958894968032837, -0.08335427939891815, -0.014415290206670761, -0.9549872279167175], "finish_reason": "stop"}], "metrics": {"energy": 710.2372674760819, "energy_per_token": 3.464572036468692, "time": 17.240871, "time_per_token": 0.08410180975609756}}
{"outputs": [{"text": "word_counts = Counter()\n    for file in os.listdir(directory_path):\n        if file.endswith(\".txt\"):\n            with open(os.path.join(directory_path, file), \"r\", encoding=\"utf-8\") as f:\n                for line in f:\n                    words = line.strip().split()\n                    for word in words:\n                        if word not in STOPWORDS:\n                            word_counts[word] += 1\n    return len(word_counts)", "tokens": ["word", "_", "counts", " =", " Counter", "()", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", ")", ",", " \"", "r", "\"", ",", " encoding", "=", "\"", "utf", "-", "8", "\"", ")", " as", " f", ":", "\n", "                ", "for", " line", " in", " f", ":", "\n", "                ", "    ", "words", " =", " line", ".", "strip", "()", ".", "split", "()", "\n", "                ", "    ", "for", " word", " in", " words", ":", "\n", "                ", "        ", "if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "                ", "            ", "word", "_", "counts", "[", "word", "]", " +=", " ", "1", "\n", "    ", "return", " len", "(", "word", "_", "counts", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-2.45963978767395, -0.032345082610845566, -0.9301877617835999, -0.0046941558830440044, -0.008595847524702549, -0.0015506636118516326, -0.06652813404798508, -0.8295753002166748, -0.2193050980567932, -1.4406741857528687, -0.7612990736961365, -0.025009578093886375, -1.811964830267243e-05, -0.04628415405750275, -2.145764938177308e-06, -0.0003400462737772614, -0.0016288596671074629, -0.0001776060671545565, -5.364403477869928e-06, -0.0009949024533852935, -0.015443619340658188, -0.006262678187340498, -0.0188690684735775, -0.021791774779558182, -0.0006926044588908553, -0.0031751003116369247, -7.033323527139146e-06, -1.1920928244535389e-07, -1.950119137763977, -0.0036784622352570295, -0.00411295285448432, -0.0005292683490552008, -3.0397906812140718e-05, -0.007655685767531395, -0.016306007280945778, -0.0022973830346018076, -0.42676839232444763, -0.0001805857609724626, -0.001652186387218535, -0.07844270020723343, -6.198863957251888e-06, -4.2914423829643056e-05, -4.410734163684538e-06, -0.00014900050882715732, -4.815939246327616e-05, -0.000551310193259269, -3.4689302992774174e-05, -1.1920922133867862e-06, -0.00015341058315243572, -0.004630794283002615, -0.049590542912483215, -0.00011455356434453279, -0.6106626391410828, -0.0027004939038306475, -0.0008021951070986688, -1.3785462379455566, -0.017812756821513176, -0.3444007337093353, -0.00023195437097456306, -0.054480504244565964, -0.036198630928993225, -0.003167257411405444, -0.001921832445077598, -0.01965218409895897, -0.00017891713650897145, -0.1712043583393097, -0.009542448446154594, -0.00704045407474041, -0.0005199749139137566, -1.5056318044662476, -0.08270863443613052, -0.0004292996891308576, -0.0007160721579566598, -0.01907259412109852, -0.003368182573467493, -0.0004651656490750611, -0.0005420169327408075, -0.43398115038871765, -0.023718204349279404, -0.09110313653945923, -0.00022480344341602176, -0.46593669056892395, -0.0018587708473205566, -0.003810290014371276, -0.16145740449428558, -0.07280219346284866, -0.026920076459646225, -0.000824230897706002, -0.00027450130437500775, -0.3047974109649658, -0.0015675650211051106, -0.0006480501033365726, -0.002730215433984995, -0.0002356490003876388, -0.0005283151986077428, -0.0002783149539027363, -0.0006217215559445322, -0.14299772679805756, -0.022715715691447258, -0.7988298535346985, -1.1324817933200393e-05, -0.00045622908510267735, -4.768370445162873e-07, -6.997340824455023e-05, 0.0, 0.0, -0.06693437695503235, -0.006898159626871347, -0.0002060916303889826, -0.0006675875629298389, -0.008352585136890411, -0.00499856797978282, -0.00011932138295378536, -0.007617592345923185, -0.0004183370911050588, -0.033282503485679626, -0.0006212450098246336, -0.0008864049450494349, -0.0001774868869688362, -0.0032890529837459326, -0.15029864013195038, -0.19450418651103973, -0.12396394461393356, -0.0005127069307491183, -0.0013304438907653093, -3.4570634852570947e-06, -1.6689286894688848e-06, -1.561516523361206, -1.1920922133867862e-06, -1.311301275563892e-06, -1.156323378381785e-05, -2.992108420585282e-05, -2.0851101875305176, -0.005295298527926207], "finish_reason": "stop"}], "metrics": {"energy": 473.44374248504624, "energy_per_token": 3.5331622573510915, "time": 11.116295, "time_per_token": 0.08295742537313432}}
{"outputs": [{"text": "# Initialize an empty counter to accumulate word counts\n    total_counter = Counter()\n\n    # Iterate over all files in the directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):  # Only consider '.txt' files\n            file_path = os.path.join(directory_path, filename)  # Construct the full path to the file\n\n            # Read the content of the file\n            with open(file_path, 'r', encoding='utf-8') as file:\n                content = file.read().lower()  # Read the content and convert to lowercase for consistency\n\n            # Split the content into words\n            words = content.split()\n\n            # Remove stopwords from the words\n            non_stop_words = [word for word in words if word not in STOPWORDS]\n\n            # Update the total counter with the counts of non-stop words in the file\n            total_counter.update(non_stop_words)\n\n    return len(total_counter)  # Return the length of the counter, representing the number of unique non", "tokens": ["#", " Initialize", " an", " empty", " counter", " to", " accumulate", " word", " counts", "\n", "    ", "total", "_", "counter", " =", " Counter", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " all", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "  ", "#", " Only", " consider", " '", ".", "txt", "'", " files", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "  ", "#", " Construct", " the", " full", " path", " to", " the", " file", "\n", "\n", "            ", "#", " Read", " the", " content", " of", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "                ", "content", " =", " file", ".", "read", "()", ".", "lower", "()", "  ", "#", " Read", " the", " content", " and", " convert", " to", " lower", "case", " for", " consistency", "\n", "\n", "            ", "#", " Split", " the", " content", " into", " words", "\n", "            ", "words", " =", " content", ".", "split", "()", "\n", "\n", "            ", "#", " Remove", " stop", "words", " from", " the", " words", "\n", "            ", "non", "_", "stop", "_", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "            ", "#", " Update", " the", " total", " counter", " with", " the", " counts", " of", " non", "-", "stop", " words", " in", " the", " file", "\n", "            ", "total", "_", "counter", ".", "update", "(", "non", "_", "stop", "_", "words", ")", "\n", "\n", "    ", "return", " len", "(", "total", "_", "counter", ")", "  ", "#", " Return", " the", " length", " of", " the", " counter", ",", " representing", " the", " number", " of", " unique", " non"], "logprobs": [-1.3890316486358643, -0.8590778112411499, -0.6363790035247803, -0.013299915939569473, -1.678699016571045, -1.985755443572998, -2.3705010414123535, -0.4021522104740143, -0.32794100046157837, -0.2871183156967163, -0.0003933132975362241, -1.2333259582519531, -0.005564201157540083, -0.6857976317405701, -0.009469710290431976, -0.0018018929986283183, -0.000777776469476521, -0.0006509092636406422, -0.03864945471286774, -0.000376034586224705, -0.03808066248893738, -0.5637493133544922, -0.0010855264263227582, -0.19505585730075836, -0.9372945427894592, -0.28672346472740173, -0.03156064450740814, -0.004813155625015497, -0.19889983534812927, -0.05478491634130478, -0.00018106251081917435, -0.008957086130976677, -0.4697377681732178, -0.0004332319076638669, -0.006550506688654423, -6.198863957251888e-06, -0.0015788720920681953, 0.0, -0.00029476112104021013, -0.0004761277523357421, -8.916457591112703e-05, -1.1920922133867862e-06, -0.00022432672267314047, -0.0010038343025371432, -0.011155261658132076, -0.6570754051208496, -0.018130997195839882, -0.00030655929003842175, -0.00306018372066319, -2.3841855067985307e-07, 0.0, -0.13365191221237183, -0.0013167529832571745, -0.00031883400515653193, -1.847726889536716e-05, -0.0033010535407811403, -0.7063881754875183, -2.3841830625315197e-06, -0.8159105181694031, -0.9687293767929077, -0.23768997192382812, -0.0013519919011741877, -7.211902266135439e-05, -0.00014602071314584464, -0.0009658439084887505, -0.0038213341031223536, -0.006716414820402861, -0.18105697631835938, -0.5532247424125671, -0.0012153151910752058, -2.9444261599564925e-05, -0.011819686740636826, -2.0265558760002023e-06, -2.861018856492592e-06, -5.960462772236497e-07, -0.00016640232934150845, -9.572047565598041e-05, -0.0003064401389565319, -3.9934315282152966e-05, -9.536738616588991e-07, -1.6093124941107817e-05, -3.504691630951129e-05, -9.775113539944869e-06, -1.9260516166687012, -8.22540732769994e-06, -0.261786550283432, -0.3986196219921112, -0.6938327550888062, -1.516113042831421, -0.4484047591686249, -0.035333555191755295, -0.0078094638884067535, -0.0008347125840373337, -0.16058123111724854, -0.00040451448876410723, -0.19376806914806366, -0.411636084318161, -0.15167146921157837, -1.1320037841796875, -0.0768798366189003, -0.06382530182600021, -0.02513013780117035, -0.4405728578567505, -0.0001501924270996824, -0.009153780527412891, -3.397406908334233e-05, -0.0003134713042527437, -0.000259365770034492, -1.3947389561508317e-05, 0.0, -0.0057917870581150055, -0.06422761082649231, -0.001116010476835072, -0.9952235221862793, -9.42901024245657e-05, -0.010034354403614998, -0.032114915549755096, -0.032172173261642456, -0.019900308921933174, -0.0006450717919506133, -0.024692822247743607, -1.9311717551317997e-05, -0.0460529625415802, -0.002356254495680332, -0.0039197769947350025, -0.00041869457345455885, -0.14374500513076782, -0.00011860620725201443, -0.00031573555315844715, -7.128461584215984e-05, -6.198863957251888e-06, -0.0022825158666819334, -2.640845775604248, -0.05639269948005676, -1.2040065485052764e-05, -0.16415812075138092, -5.960462772236497e-07, -1.5638670921325684, -0.4239157736301422, -1.0686736106872559, -0.12368988990783691, -0.010581931099295616, -0.9388429522514343, -8.535020606359467e-05, -0.00651604263111949, -1.326300024986267, -1.9719103574752808, -0.000559292733669281, -0.07935310900211334, -0.13609351217746735, -0.04942036792635918, -0.4014589786529541, -0.03469908609986305, -0.020435502752661705, -0.007728319149464369, -0.23202750086784363, -0.5467932224273682, -0.0003070359816774726, -0.013185686431825161, -0.0027986904606223106, -0.04713355377316475, -3.2543604902457446e-05, -0.0014229421503841877, -0.0019102912629023194, -0.013444007374346256, -0.01481389906257391, -0.0005240259342826903, -0.00391455227509141, -1.2287145853042603, -0.03319832682609558, -0.6996070742607117, -0.6873852014541626, -0.04414859414100647, -0.5203595161437988, -0.5592775344848633, -9.619726915843785e-05, -1.0505837202072144, -0.0015999386087059975, -9.572047565598041e-05, -0.898871898651123, -0.00038235029205679893, -0.0008490057080052793, -0.004778987728059292, -0.0034097647294402122, -0.0010667116148397326, -1.7881377516459906e-06, -4.6491513785440475e-06, -2.169585604860913e-05, -0.0007758706342428923, -0.004994416609406471, -0.17301537096500397, -2.0265558760002023e-06, -0.0002449450839776546, 0.0, -9.142934868577868e-05, 0.0, 0.0, -0.025999896228313446, -0.003757560858502984, -0.0040489607490599155, -0.00013362467871047556, -0.0018880413845181465, -0.28070518374443054, -0.006568744778633118, -0.48819151520729065, -0.14877301454544067, -0.02670305222272873, -0.09968135505914688, -2.357687473297119, -0.06079200655221939, -0.04755014181137085, -0.0004266782198101282, -4.911301948595792e-05, -0.36097994446754456, -0.7703834176063538, -0.21588796377182007, -1.0715181827545166, -0.00034397884155623615, -8.010543388081715e-05, -0.10079469531774521, -4.768370445162873e-07, -2.0265373677830212e-05, -0.0014325842494145036, -2.3841855067985307e-07, -0.000276765669696033, -0.023184064775705338, -4.768370445162873e-07, -1.6689286894688848e-06, -1.1920922133867862e-06, -1.7881377516459906e-06, -6.508615479106084e-05, -0.00032443503732793033, -0.0023719528689980507, -0.0016354055842384696, -1.5437242984771729, -0.055532410740852356, -7.009260298218578e-05, -0.0031129494309425354, -5.960462772236497e-07, -1.1920928244535389e-07, -0.154476135969162, -0.18208901584148407, -6.198863957251888e-06, -0.03928658366203308, -0.0007198841194622219, -1.735247254371643, -0.08555994182825089, -0.011358359828591347, -1.0953869819641113, -0.3233146667480469, -1.4090937376022339, -0.015311202965676785, -0.7167456150054932, -0.00019262365822214633, -0.0017782127251848578, -0.28394830226898193], "finish_reason": "length"}], "metrics": {"energy": 905.3924219799032, "energy_per_token": 3.536689148358997, "time": 21.645096, "time_per_token": 0.08455115625}}
{"outputs": [{"text": "# Initialize a Counter object\n    counter = Counter()\n\n    # Iterate over all '.txt' files in the directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith(\".txt\"):\n            filepath = os.path.join(directory_path, filename)\n            with open(filepath, 'r', encoding='utf-8') as file:\n                # Read each file and convert the content to lowercase\n                text = file.read().lower()\n                # Split the text into words and exclude stop words\n                words = [word for word in text.split() if word not in STOPWORDS]\n                # Update the counter with the unique words in the file\n                counter.update(words)\n\n    # Return the total count of unique non-stop words across all files\n    return len(counter)", "tokens": ["#", " Initialize", " a", " Counter", " object", "\n", "    ", "counter", " =", " Counter", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " all", " '", ".", "txt", "'", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "path", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "                ", "#", " Read", " each", " file", " and", " convert", " the", " content", " to", " lower", "case", "\n", "                ", "text", " =", " file", ".", "read", "()", ".", "lower", "()", "\n", "                ", "#", " Split", " the", " text", " into", " words", " and", " exclude", " stop", " words", "\n", "                ", "words", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "                ", "#", " Update", " the", " counter", " with", " the", " unique", " words", " in", " the", " file", "\n", "                ", "counter", ".", "update", "(", "words", ")", "\n", "\n", "    ", "#", " Return", " the", " total", " count", " of", " unique", " non", "-", "stop", " words", " across", " all", " files", "\n", "    ", "return", " len", "(", "counter", ")", "\n", "\n", "if"], "logprobs": [-1.3890316486358643, -0.8590778112411499, -1.293649435043335, -0.27931201457977295, -0.23070888221263885, -2.592996597290039, -0.0007543102256022394, -1.1827681064605713, -0.024714570492506027, -0.0027073894161731005, -0.0017226393101736903, -0.0012037658598273993, -0.06612640619277954, -0.0007798014557920396, -0.012661545537412167, -0.6046141386032104, -0.0013293724041432142, -0.3515300452709198, -0.4530494511127472, -1.0559892654418945, -0.002371834125369787, -0.00026556302327662706, -0.00021228920377325267, -0.0018112935358658433, -0.005524486768990755, -0.009390353225171566, -0.23141679167747498, -0.0280966404825449, -0.000417741306591779, -0.013610774651169777, -0.3259722590446472, -0.0002671123365871608, -0.021587517112493515, -6.6756979322235566e-06, -0.0008425738196820021, -1.5497195136049413e-06, -0.00041500062798149884, -0.0006129055400379002, -0.00012861855793744326, -2.9802276912960224e-06, -0.0004144048143643886, -0.0009002208826132119, -0.004773885942995548, -0.025660565122961998, -0.015808260068297386, -0.00016890530241653323, -0.00146246247459203, -4.768370445162873e-07, -2.3841855067985307e-07, -2.8411970138549805, -0.003190429415553808, -0.0027813343331217766, -0.0004328744253143668, -5.8410845667822286e-05, -0.0027789566665887833, -0.010501365177333355, -0.008543843403458595, -0.35964375734329224, -1.0638878345489502, -0.00018010901112575084, -0.01417014840990305, -2.7418097943154862e-06, -9.775113539944869e-06, -4.887569048150908e-06, -0.0002181292074965313, -0.00010918975021922961, -0.0006723527330905199, -7.235741941258311e-05, -2.50339189733495e-06, -5.304672595229931e-05, -0.00017617580306250602, -2.5510462364763953e-05, -0.0055792564526200294, -0.8785829544067383, -0.09838496893644333, -5.280832192511298e-05, -0.0002224197960458696, -0.0002972637885250151, -7.510157047363464e-06, -0.03061085008084774, -0.9250883460044861, -0.0016141016967594624, -1.7666704654693604, -0.00010573305189609528, -0.018877841532230377, -0.04435582086443901, -0.034988515079021454, -0.03918204829096794, -0.0022520674392580986, -0.02175549976527691, -2.634490556374658e-05, -0.2908782958984375, -0.001809508539736271, -0.006396416109055281, -0.0016352864913642406, -0.4406198263168335, -0.5091841220855713, -2.946255683898926, -0.8831602334976196, -1.0902026891708374, -2.9577038288116455, -2.4711146354675293, -0.5804067850112915, -0.13395410776138306, -0.06866166740655899, -0.04340783506631851, -0.13599102199077606, -5.23315102327615e-05, -2.3050179481506348, -0.009732180275022984, -0.000867467257194221, -9.179073458653875e-06, -5.006777428206988e-06, -0.0002057340752799064, -0.012446938082575798, -0.006424251478165388, -3.158996332786046e-05, -0.0054397182539105415, -0.9302839636802673, -0.04474438354372978, -0.29681795835494995, -0.02799718640744686, -0.16510990262031555, -0.03845297172665596, -0.18519675731658936, -0.9612807035446167, -3.4788522720336914, -0.0330251082777977, -0.9728030562400818, -0.06759274005889893, -0.00015686711412854493, -0.06310972571372986, -0.00350610981695354, -0.0220547616481781, -0.004865236114710569, -0.014849252998828888, -7.510157047363464e-06, -2.682172998902388e-05, -0.016341660171747208, -0.00023934361524879932, -0.0013565156841650605, -0.002096837153658271, -0.004434632603079081, -0.0035206021275371313, -0.2769123911857605, -1.2040065485052764e-05, -0.0005727558163926005, 0.0, -8.40390202938579e-05, 0.0, 0.0, -0.013503755442798138, -0.00031013446277938783, -0.01945134624838829, -0.10044197738170624, -0.054236069321632385, -0.01077358890324831, -0.8661231994628906, -0.028689788654446602, -0.05021212622523308, -2.805608034133911, -0.3040315806865692, -0.5620500445365906, -0.08047180622816086, -0.2873339056968689, -0.0018725732807070017, -8.964136941358447e-05, -0.004588432144373655, -0.0012977044098079205, -2.3841855067985307e-07, -0.000714404450263828, -1.0774577856063843, -0.00011955977242905647, -0.0001778444420779124, -0.03138783201575279, -0.0012056708801537752, -0.1473526954650879, -0.19894419610500336, -0.0021950930822640657, -0.1008933037519455, -0.02154376730322838, -0.00028606137493625283, -0.003110691672191024, -0.16894888877868652, -0.00016258825780823827, -7.199982064776123e-05, -0.0024651873391121626, -1.318188190460205, -0.0016270744381472468, -0.0035807082895189524, -0.0018168861279264092, -0.0004886387032456696, -0.011683137156069279, -0.2017441689968109, -0.00016544880054425448, -0.001620766706764698, -0.3791198134422302, -0.16363488137722015, -0.020704686641693115, -0.947579562664032], "finish_reason": "stop"}], "metrics": {"energy": 688.9672023792264, "energy_per_token": 3.4448360118961316, "time": 17.01763, "time_per_token": 0.08508815}}
{"outputs": [{"text": "total_count = 0\n\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n\n            with open(file_path, 'r') as file:\n                text = file.read()\n                words = text.split()\n                words = [word for word in words if word.lower() not in STOPWORDS]\n\n            total_count += len(Counter(words))\n\n    return total_count", "tokens": ["total", "_", "count", " =", " ", "0", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " file", ":", "\n", "                ", "text", " =", " file", ".", "read", "()", "\n", "                ", "words", " =", " text", ".", "split", "()", "\n", "                ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "            ", "total", "_", "count", " +=", " len", "(", "Counter", "(", "words", "))", "\n", "\n", "    ", "return", " total", "_", "count", "\n", "\n", "if"], "logprobs": [-1.9253475666046143, -0.010522008873522282, -0.4601951539516449, -0.0072343298234045506, -0.3023450970649719, -0.0007813499541953206, -0.06408875435590744, -1.003794550895691, -0.0010677833342924714, -0.5121213793754578, -0.36991170048713684, -0.0005054388311691582, -0.016812065616250038, -7.986990567587782e-06, -0.0022442173212766647, -2.3841855067985307e-07, -0.00037698791129514575, -0.00067473528906703, -0.00013016807497479022, -3.2186455882765586e-06, -0.00035291642416268587, -0.009917627088725567, -0.010093598626554012, -0.02662319503724575, -0.01488989032804966, -0.00012957210128661245, -0.00417480431497097, -1.7881377516459906e-06, -1.1920928244535389e-07, -0.08005660772323608, -0.0014149664202705026, -0.00032646095496602356, -2.1576648578047752e-05, -0.005190705880522728, -0.019083237275481224, -0.003480212762951851, -0.14305619895458221, -0.3700213134288788, -0.0005276002921164036, -8.666139910928905e-05, -0.0111150611191988, -3.576278118089249e-07, -5.125986263010418e-06, -3.218599158572033e-05, -0.0001591317413840443, -0.00014149141497910023, -0.0005353448214009404, -3.504691630951129e-05, -1.6689286894688848e-06, -4.541770613286644e-05, -0.00013004888023715466, -3.349725011503324e-05, -0.008130902424454689, -0.6883452534675598, -0.0010763572063297033, -0.22484631836414337, -7.30726242181845e-05, -0.0002307625545654446, -0.0003859252028632909, -4.6967357775429264e-05, 0.0, -0.010645270347595215, -0.03659255802631378, -0.0008417400531470776, -0.34084275364875793, -2.95634672511369e-05, -0.04003268852829933, -0.0009124883217737079, -0.0007545484695583582, -0.0008659188752062619, -1.174576997756958, -0.005933409556746483, -0.002292030956596136, -7.56950321374461e-05, -1.8954096958623268e-05, -0.0005830018781125546, -0.2912435233592987, -0.24468547105789185, -0.21019896864891052, -0.009666421450674534, -0.25280848145484924, -9.798523387871683e-05, -0.09200111776590347, -0.004595552105456591, -0.0283686351031065, -0.6834760308265686, -1.2253482341766357, -0.26333531737327576, -0.008253868669271469, -0.004006099421530962, -0.2079954892396927, -1.1324817933200393e-05, -2.586808113846928e-05, -0.0004119024670217186, -0.0022971450816839933, -0.026519648730754852, -0.3395345211029053, -0.0781116709113121, -0.0006683023530058563, -0.0015462597366422415, -1.3947389561508317e-05, -0.00028725311858579516, -1.1920928244535389e-07, -4.660974445869215e-05, 0.0, 0.0, -0.02907915972173214, -0.04126954823732376, -1.4963699579238892, -1.2842156887054443, -1.54303777217865, -4.1483970562694594e-05, -0.0014000862138345838, -0.0006269635050557554, -0.08227723836898804, -0.00014673586701974273, -2.322178840637207, -0.002054129960015416, -0.006588640622794628, -0.09505625069141388, -0.0066466680727899075, -0.013172038830816746, -0.0005428509321063757, -0.00464076129719615, -0.0008983152220025659, -8.22540732769994e-06, -3.3378546504536644e-06, -0.34335029125213623, -0.014178375713527203, -0.9370001554489136], "finish_reason": "stop"}], "metrics": {"energy": 462.3637933225633, "energy_per_token": 3.556644564019718, "time": 10.940247, "time_per_token": 0.08415574615384615}}
{"outputs": [{"text": "# Create a Counter object to store the frequency of words\n    word_counter = Counter()\n\n    # Loop through all files in the directory\n    for filename in os.listdir(directory_path):\n        # Check if the file has a '.txt' extension\n        if filename.endswith('.txt'):\n            # Read the content of the file\n            with open(os.path.join(directory_path, filename), 'r') as file:\n                content = file.read()\n\n            # Split the content into words\n            words = content.split()\n\n            # Filter out stop words and add non-stop words to the Counter\n            word_counter.update([word for word in words if word.lower() not in STOPWORDS])\n\n    # Get the total count of unique non-stop words\n    total_unique_count = len(word_counter)\n\n    return total_unique_count", "tokens": ["#", " Create", " a", " Counter", " object", " to", " store", " the", " frequency", " of", " words", "\n", "    ", "word", "_", "counter", " =", " Counter", "()", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Check", " if", " the", " file", " has", " a", " '", ".", "txt", "'", " extension", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "#", " Read", " the", " content", " of", " the", " file", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", " '", "r", "')", " as", " file", ":", "\n", "                ", "content", " =", " file", ".", "read", "()", "\n", "\n", "            ", "#", " Split", " the", " content", " into", " words", "\n", "            ", "words", " =", " content", ".", "split", "()", "\n", "\n", "            ", "#", " Filter", " out", " stop", " words", " and", " add", " non", "-", "stop", " words", " to", " the", " Counter", "\n", "            ", "word", "_", "counter", ".", "update", "([", "word", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "\n", "    ", "#", " Get", " the", " total", " count", " of", " unique", " non", "-", "stop", " words", "\n", "    ", "total", "_", "unique", "_", "count", " =", " len", "(", "word", "_", "counter", ")", "\n", "\n", "    ", "return", " total", "_", "unique", "_", "count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.3890316486358643, -2.2129406929016113, -1.3067469596862793, -0.5437169671058655, -0.16328886151313782, -0.08112560212612152, -1.260612964630127, -0.45373865962028503, -1.7530255317687988, -0.09582559764385223, -1.2334197759628296, -0.032994311302900314, -0.0007731309160590172, -0.3142017126083374, -0.003973209764808416, -0.7054399847984314, -0.0005981324939057231, -0.001751794945448637, -0.000979658798314631, -0.000730128725990653, -0.04924902692437172, -0.00038842763751745224, -0.026819229125976562, -2.2255077362060547, -0.15194666385650635, -0.20833808183670044, -0.5169310569763184, -0.040205616503953934, -0.007595232222229242, -0.2819128632545471, -0.05987868085503578, -0.00024482590379193425, -0.011580388993024826, -0.46078845858573914, -0.00019905969384126365, -0.004944241140037775, -9.059865078597795e-06, -0.0008831891464069486, 0.0, -0.0003644755925051868, -0.0006086166249588132, -0.00010251473577227443, -1.311301275563892e-06, -0.00019536493346095085, -0.0008416209602728486, -0.0074125491082668304, -0.9342625141143799, -0.20543821156024933, -0.003342757234349847, -0.03149237483739853, -0.01596219651401043, -0.7489535808563232, -0.30771809816360474, -0.16001617908477783, -0.007687034551054239, -0.00010513706365600228, -3.1709168979432434e-05, -0.0015460216673091054, -0.008679167367517948, -0.00021336186910048127, -0.0012155532604083419, -0.018981948494911194, -0.00023493390472140163, -0.0011660212185233831, 0.0, 0.0, -0.07036120444536209, -0.0009584600338712335, -1.168244216387393e-05, -9.417489309271332e-06, -0.001927543431520462, -0.00022003613412380219, -0.0013849677052348852, -0.3462419807910919, -2.3905892372131348, -0.048469677567481995, -1.2423228025436401, -0.009745165705680847, -0.07952950149774551, -0.023311367258429527, -0.20486320555210114, -0.0003194298769813031, -0.015622728504240513, -4.458328112377785e-05, -0.0008305437513627112, -0.021562552079558372, -5.483612312673358e-06, -4.291525328881107e-06, -4.768360213347478e-06, -3.7788631743751466e-05, -3.218599158572033e-05, -0.00015364897262770683, -5.4596363042946905e-05, -1.0728830375228426e-06, -2.3603161025675945e-05, -0.000481132126878947, -0.005878303665667772, -2.8490614567999728e-05, -0.015509937889873981, -0.0005159238935448229, -0.17753572762012482, -5.149708886165172e-05, -0.06374824047088623, -0.0006637753685936332, -0.0001429217227268964, -0.00016509123088326305, -0.22978202998638153, -0.0001037067049765028, -0.0003135904553346336, -1.1920858014491387e-05, -1.1324817933200393e-05, -0.0023112983908504248, -0.053404662758111954, -0.5128130316734314, -0.03336828947067261, -0.002038188511505723, -0.6172292828559875, -0.018349070101976395, -0.04451637342572212, -0.01068879198282957, -0.12689602375030518, -0.5314235687255859, -0.0004058252670802176, -0.009427198208868504, -0.001086359960027039, -0.011881181038916111, -3.4689302992774174e-05, -0.014506585896015167, -0.002758747199550271, -0.0015624469378963113, -0.011908275075256824, -0.000302030734019354, -0.00408825883641839, -1.7140659093856812, -0.6114335656166077, -0.05808889865875244, -0.2509567439556122, -0.09023910015821457, -2.1535019874572754, -1.307851791381836, -0.00038378025055862963, -0.0001740304142003879, -0.041654396802186966, -0.004693800117820501, -0.014900460839271545, -0.3382449150085449, -0.0726277232170105, -8.05822346592322e-05, -1.830380916595459, -1.9073304429184645e-05, -0.0007875440060161054, -0.013002138584852219, -1.6689286894688848e-06, -0.3340844213962555, -0.0014799605123698711, -0.1151101291179657, -3.2186455882765586e-06, -2.038458114839159e-05, -4.8874615458771586e-05, -0.0014938872773200274, -0.005122987087816, -0.4580782651901245, -0.038659319281578064, -0.00040356122190132737, -0.001639213995076716, -1.1324817933200393e-05, -0.00022706791060045362, 0.0, -4.2437604861333966e-05, 0.0, 0.0, -0.021752117201685905, -0.001420561340637505, -0.004338139668107033, -0.002405489794909954, -0.03698035702109337, -2.4344072341918945, -0.003686538664624095, -0.2416647970676422, -0.02138473652303219, -0.000348268891684711, -0.005093574058264494, -0.04183493182063103, -6.735097849741578e-05, -4.8636207793606445e-05, -0.000436091679148376, -0.06257259100675583, -0.00036125810584053397, -1.1585092544555664, -0.0015209070406854153, -1.3916045427322388, -0.0134311867877841, -2.049945116043091, -0.0003375437227077782, -0.02830467000603676, -7.354942499659956e-05, -0.002458171220496297, -4.768370445162873e-07, -3.576278118089249e-07, -0.02722313441336155, -0.0008699684985913336, -0.025953900068998337, -0.00017212340026162565, -0.05539459362626076, -0.0022690759506076574, -1.6689286894688848e-06, -3.4570634852570947e-06, -1.6689286894688848e-06, -1.7523612768854946e-05, -2.037013053894043, -3.576272320060525e-06, -4.0531076592742465e-06, -9.65590606938349e-06, -3.707340147229843e-05, -0.12879088521003723], "finish_reason": "stop"}], "metrics": {"energy": 745.5810075244895, "energy_per_token": 3.467818639648788, "time": 18.487516, "time_per_token": 0.0859884465116279}}
{"outputs": [{"text": "# Create an empty Counter object to track the counts of non-stop words\n    counter = Counter()\n\n    # Iterate over all '.txt' files in the specified directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n            with open(file_path, 'r') as file:\n                # Read the contents of the file\n                contents = file.read()\n                # Split the contents into words\n                words = contents.split()\n\n                # Count the non-stop words using Counter\n                for word in words:\n                    if word not in STOPWORDS:\n                        counter[word] += 1\n\n    # Return the total count of unique non-stop words\n    return len(counter)", "tokens": ["#", " Create", " an", " empty", " Counter", " object", " to", " track", " the", " counts", " of", " non", "-", "stop", " words", "\n", "    ", "counter", " =", " Counter", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " all", " '", ".", "txt", "'", " files", " in", " the", " specified", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " file", ":", "\n", "                ", "#", " Read", " the", " contents", " of", " the", " file", "\n", "                ", "contents", " =", " file", ".", "read", "()", "\n", "                ", "#", " Split", " the", " contents", " into", " words", "\n", "                ", "words", " =", " contents", ".", "split", "()", "\n", "\n", "                ", "#", " Count", " the", " non", "-", "stop", " words", " using", " Counter", "\n", "                ", "for", " word", " in", " words", ":", "\n", "                ", "    ", "if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "                ", "        ", "counter", "[", "word", "]", " +=", " ", "1", "\n", "\n", "    ", "#", " Return", " the", " total", " count", " of", " unique", " non", "-", "stop", " words", "\n", "    ", "return", " len", "(", "counter", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.3890316486358643, -2.2129406929016113, -0.3513331711292267, -0.02366558276116848, -0.4734693765640259, -0.1958160251379013, -0.1819908320903778, -3.04293155670166, -1.7989106178283691, -2.216200351715088, -0.021229879930615425, -1.1396710872650146, -0.0003159739135298878, -0.00020215852418914437, -0.1630730777978897, -0.08123046159744263, -0.0005902693956159055, -2.2207565307617188, -0.04063379764556885, -0.0015610187547281384, -0.002163214609026909, -0.0003303935518488288, -0.047757234424352646, -0.0005117537220939994, -0.013554561883211136, -0.8217015266418457, -0.0010200303513556719, -0.2781127393245697, -0.4740138351917267, -1.9260609149932861, -0.0016705142334103584, -0.00018618757894728333, -0.00012015574611723423, -0.0020500849932432175, -0.002747691236436367, -0.002704060636460781, -0.8972647786140442, -0.0005229535745456815, -0.042369600385427475, -0.00044431351125240326, -0.013388254679739475, -0.30790841579437256, -0.00017105070583056659, -0.015762027353048325, -6.794906312279636e-06, -0.0005756151513196528, -4.172316494077677e-06, -0.00024041623692028224, -0.00040236959466710687, -0.0001358893496217206, -2.145764938177308e-06, -0.00033241944038309157, -0.00174251280259341, -0.003513593692332506, -0.036691732704639435, -0.010929246433079243, -0.00016366096679121256, -0.0015667318366467953, -1.1920928244535389e-07, 0.0, -0.057356711477041245, -0.0012217445764690638, -0.0001867835089797154, -1.8954096958623268e-05, -0.0030384347774088383, -0.03790495544672012, -0.004312145058065653, -0.37178677320480347, -0.4432946443557739, -0.00010668662434909493, -3.957670196541585e-05, -0.00885204877704382, -8.344646857949556e-07, -3.4570634852570947e-06, -5.364403477869928e-06, -8.999896090244874e-05, -8.642300235806033e-05, -0.000507464399561286, -2.8490614567999728e-05, -1.1920928244535389e-07, -3.290122185717337e-05, -7.64102369430475e-05, -2.610649426060263e-05, -0.010641613975167274, -1.264885663986206, -0.10808958113193512, -4.362964682513848e-05, -0.00022420754248742014, -0.0002851079625543207, -3.290122185717337e-05, -1.1920928244535389e-07, -0.01790093258023262, -0.04915199428796768, -0.0005417786305770278, -0.2502897381782532, -2.002696055569686e-05, -0.19700995087623596, -0.0007353700930252671, -0.0025503274518996477, -0.0009965697536244988, -0.30598515272140503, -0.3217333257198334, -0.13910937309265137, -1.6722220182418823, -0.0022460015024989843, -0.10819689184427261, -0.02287488617002964, -0.9764646291732788, -0.00013290952483657748, -0.280987024307251, -0.00010525626566959545, -0.00031704644788987935, -2.8013790142722428e-05, -1.6093124941107817e-05, -0.0008800924406386912, -0.01598108559846878, -0.547504723072052, -0.0046609328128397465, -0.7811195254325867, -0.01950746402144432, -0.05416763946413994, -0.0066351811401546, -0.7704728245735168, -0.27287033200263977, -0.00046850196667946875, -0.005782424006611109, -0.0007831366965547204, -0.019687717780470848, -2.706014311115723e-05, -0.004910314455628395, -0.0030367709696292877, -0.0009043894242495298, -2.4564082622528076, -0.004702698905020952, -0.023821691051125526, -1.800033450126648, -0.2839830219745636, -1.029165506362915, -0.0004463391669560224, -8.034383063204587e-05, -0.05087818577885628, -0.9109808206558228, -0.27926281094551086, -0.05388619378209114, -0.00016199229867197573, -0.6514458060264587, -0.00011467275908216834, -9.643566590966657e-05, -0.0010558750946074724, -4.303362584323622e-05, -9.798523387871683e-05, -0.00031931069679558277, -0.0008335214806720614, -0.22282040119171143, -0.0060578309930861, -1.0196112394332886, -4.768360213347478e-06, -0.00038187362952157855, 0.0, -5.1377883210079744e-05, 0.0, 0.0, -0.01989656873047352, -0.008703985251486301, -8.40390202938579e-05, -0.000671042304020375, -0.012870223261415958, -0.0052146608941257, -6.985420623095706e-05, -0.020186107605695724, -0.00032872517476789653, -0.0004539651272352785, -7.438383181579411e-05, -0.001211028778925538, -0.014608446508646011, -0.0019001776818186045, -0.019634298980236053, -0.4124181866645813, -0.0014160377904772758, -0.06010355427861214, -0.027626411989331245, -0.0002706876548472792, -0.01364758238196373, -0.0033589154481887817, -0.00010084597306558862, -4.875540980719961e-05, -0.00021860594279132783, -0.12473715096712112, -0.0006977269076742232, -0.024586167186498642, -0.01768229342997074, -9.464769391342998e-05, -0.0010721894213929772, -1.8515352010726929, -1.1920922133867862e-06, -1.311301275563892e-06, -1.5020257706055418e-05, -2.3245540432981215e-05, -0.1378602236509323], "finish_reason": "stop"}], "metrics": {"energy": 727.0389730072025, "energy_per_token": 3.6534621759155903, "time": 16.597466, "time_per_token": 0.08340435175879397}}
{"outputs": [{"text": "total_count = 0\n\n    # Iterate over each file in the directory\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            file_path = os.path.join(directory_path, filename)\n\n            # Read the file content and split into words\n            with open(file_path, 'r') as file:\n                words = file.read().split()\n\n            # Remove stop words and count unique non-stop words\n            unique_non_stop_words = Counter(word for word in words if word.lower() not in STOPWORDS)\n            total_count += len(unique_non_stop_words)\n\n    return total_count", "tokens": ["total", "_", "count", " =", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " file", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "\n", "            ", "#", " Read", " the", " file", " content", " and", " split", " into", " words", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " file", ":", "\n", "                ", "words", " =", " file", ".", "read", "()", ".", "split", "()", "\n", "\n", "            ", "#", " Remove", " stop", " words", " and", " count", " unique", " non", "-", "stop", " words", "\n", "            ", "unique", "_", "non", "_", "stop", "_", "words", " =", " Counter", "(", "word", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", ")", "\n", "            ", "total", "_", "count", " +=", " len", "(", "unique", "_", "non", "_", "stop", "_", "words", ")", "\n", "\n", "    ", "return", " total", "_", "count", "\n", "\n", "print"], "logprobs": [-1.9253475666046143, -0.010522008873522282, -0.4601951539516449, -0.0072343298234045506, -0.3023450970649719, -0.0007813499541953206, -0.06408875435590744, -1.003794550895691, -0.0010677833342924714, -1.0765821933746338, -0.6548382043838501, -0.023095421493053436, -0.2792489230632782, -1.6554713249206543, -0.08776599168777466, -0.031942661851644516, -0.004920279141515493, -0.05340217798948288, -0.01727931946516037, -0.00043096792069263756, -0.007952338084578514, -0.28662654757499695, -0.00013660451804753393, -0.004700800403952599, -5.125986263010418e-06, -0.0010155049385502934, 0.0, -0.0002867764269467443, -0.0003968881501350552, -0.00010668662434909493, -2.264974000354414e-06, -0.00018475732940714806, -0.0010368215152993798, -0.007620194926857948, -0.12776538729667664, -0.008752199821174145, -0.00012420836719684303, -0.0025996719487011433, -1.0728830375228426e-06, 0.0, -0.11699997633695602, -0.0013824678026139736, -0.0004285847535356879, -1.680836794548668e-05, -0.003537589218467474, -0.12189645320177078, -0.002222807612270117, -0.04393675923347473, -0.2427724301815033, -7.450303382938728e-05, -3.6238969187252223e-05, -0.009202682413160801, 0.0, -2.264974000354414e-06, -3.0874729418428615e-05, -8.83301836438477e-05, -8.535020606359467e-05, -0.00039033422945067286, -4.565611743601039e-05, -3.2186455882765586e-06, -2.52720492426306e-05, -8.308542601298541e-05, -2.1219027985353023e-05, -0.00544125959277153, -0.224594846367836, -0.0007615765207447112, -0.22941693663597107, -0.5643714666366577, -0.19650018215179443, -0.38713744282722473, -1.303378701210022, -1.4206234216690063, -1.5814149379730225, -0.48087507486343384, -0.058961715549230576, -0.01639900729060173, -0.0004690977220889181, -0.012354983016848564, -3.564294092939235e-05, -0.00027497802511788905, -0.0003466005437076092, -3.4689302992774174e-05, -5.960462772236497e-07, -0.005067243706434965, -0.03069651871919632, -0.000617551791947335, -0.2848514914512634, -0.00014232576359063387, -0.009867933578789234, -0.0006317288498394191, -0.00022718709078617394, -0.00029345019720494747, -1.8252066373825073, -0.007173614576458931, -0.012204376049339771, -6.615896563744172e-05, -1.6331539882230572e-05, -3.266281055402942e-05, -0.000589792791288346, -0.2225182205438614, -0.000865561596583575, -0.0018563910853117704, -0.032069433480501175, -0.019490394741296768, -0.005213356576859951, -0.9573480486869812, -0.06056459620594978, -0.6846530437469482, -0.24884068965911865, -0.2642194330692291, -0.3414396643638611, -0.8318808674812317, -0.0007721779984422028, -0.00016211149340961128, -0.0021900972351431847, -0.04943523183465004, -0.000228140561375767, -1.1482558250427246, -0.00031835734262131155, -0.9056610465049744, -0.08956430852413177, -0.0001851148990681395, -0.31617993116378784, -0.008966774679720402, -0.007347347680479288, -0.7919172048568726, -0.21639513969421387, -0.030245322734117508, -0.07579899579286575, -4.529942543740617e-06, -1.3589766240329482e-05, -0.00012242044613230973, -0.005902123637497425, -0.004070568829774857, -0.3236836791038513, -0.03927202522754669, -0.0003914067056030035, -0.0006104036583565176, -9.179073458653875e-06, -0.00014149141497910023, -1.1920928244535389e-07, -7.199982064776123e-05, 0.0, 0.0, -0.02479969710111618, -0.0032256022095680237, -0.10136748105287552, -0.17999809980392456, -6.437280717364047e-06, -0.0012054328108206391, -5.769562994828448e-05, -0.05186190456151962, -2.276871418871451e-05, -0.00040058218291960657, -1.1920928244535389e-07, 0.0, -1.5497195136049413e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.4305104514278355e-06, -0.018644088879227638, -0.0014210374793037772, -0.010740685276687145, -0.0012285312404856086, -0.006615759804844856, -0.0008001701789908111, -2.622600959512056e-06, -9.65590606938349e-06, -0.22476910054683685, -0.018988732248544693, -2.690581798553467], "finish_reason": "stop"}], "metrics": {"energy": 585.1591695022582, "energy_per_token": 3.4219834473816273, "time": 14.2806425, "time_per_token": 0.08351252923976608}}
{"outputs": [{"text": "files_paths = [directory_path + file for file in os.listdir(directory_path) if file.endswith(\".txt\")]\n    # 1. Create a list of all '.txt' file paths in the specified directory\n\n    non_stop_words = []\n    for file_path in files_paths:\n        with open(file_path, mode='r', encoding='utf-8') as file:\n            lines = file.readlines()\n        words = []\n        for line in lines:\n            words += line.replace(\"\\n\", \" \").replace(\"\\t\", \" \").split(\" \")\n        words = [word.strip() for word in words]\n        # 2. Extract non-stop words from each file and store them in a list\n\n        non_stop_words += [word for word in words if word.lower() not in STOPWORDS]\n    # 3. Combine all non-stop words into a single list\n\n    return len(Counter(non_stop_words))\n    # 4. Use collections.Counter", "tokens": ["files", "_", "paths", " =", " [", "directory", "_", "path", " +", " file", " for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", ")", " if", " file", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", ")]", "\n", "    ", "#", " ", "1", ".", " Create", " a", " list", " of", " all", " '", ".", "txt", "'", " file", " paths", " in", " the", " specified", " directory", "\n", "\n", "    ", "non", "_", "stop", "_", "words", " =", " []", "\n", "    ", "for", " file", "_", "path", " in", " files", "_", "paths", ":", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " mode", "='", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "            ", "lines", " =", " file", ".", "read", "lines", "()", "\n", "        ", "words", " =", " []", "\n", "        ", "for", " line", " in", " lines", ":", "\n", "            ", "words", " +=", " line", ".", "replace", "(", "\"", "\\", "n", "\"", ",", " \"", " \"", ")", ".", "replace", "(", "\"", "\\", "t", "\"", ",", " \"", " \"", ")", ".", "split", "(", "\"", " \"", ")", "\n", "        ", "words", " =", " [", "word", ".", "strip", "()", " for", " word", " in", " words", "]", "\n", "        ", "#", " ", "2", ".", " Ext", "ract", " non", "-", "stop", " words", " from", " each", " file", " and", " store", " them", " in", " a", " list", "\n", "\n", "        ", "non", "_", "stop", "_", "words", " +=", " [", "word", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "#", " ", "3", ".", " Combine", " all", " non", "-", "stop", " words", " into", " a", " single", " list", "\n", "\n", "    ", "return", " len", "(", "Counter", "(", "non", "_", "stop", "_", "words", "))", "\n", "    ", "#", " ", "4", ".", " Use", " collections", ".", "Counter"], "logprobs": [-3.4385387897491455, -2.281135320663452, -2.027365207672119, -0.02191120572388172, -0.6148789525032043, -3.2488274574279785, -0.012641063891351223, -0.0025096607860177755, -0.062073830515146255, -0.6502150297164917, -0.4297827184200287, -0.0008780676289461553, -0.0023469780571758747, -0.015288544818758965, -1.168244216387393e-05, -0.0009501233580522239, 0.0, -0.0011599486460909247, -0.013732010498642921, -0.00019894051365554333, -1.0728830375228426e-06, -0.09463134407997131, -0.07540352642536163, -0.13396432995796204, -0.04170424863696098, -0.010484260506927967, -3.182837463100441e-05, -6.9141146923357155e-06, -1.796883463859558, -0.024041086435317993, -0.016237864270806313, -0.0006644901586696506, -6.222531374078244e-05, -0.008110800758004189, -0.035597722977399826, -0.26996922492980957, -3.4588770866394043, -4.160820007324219, -0.5436915755271912, -0.3209649920463562, -2.167768716812134, -0.34886616468429565, -0.31460702419281006, -0.1544780731201172, -1.2061958312988281, -2.2582130432128906, -0.010988201946020126, -0.0006971312686800957, -0.0015999386087059975, -0.5790737867355347, -0.033636320382356644, -0.20407675206661224, -0.057582151144742966, -1.1608984470367432, -0.006449480075389147, -0.7978147268295288, -0.7419064044952393, -0.0020171310752630234, -2.5111212730407715, -0.16494879126548767, -0.01715429499745369, -0.2633136808872223, -0.056564733386039734, -0.2769150137901306, -0.2572762966156006, -0.04002833738923073, -0.17374056577682495, -0.49600934982299805, -0.15931299328804016, -0.13258178532123566, -0.007829335518181324, -0.0002706876548472792, -0.0034926861990243196, -0.0002803409588523209, -0.00024959311122074723, -0.0009528625523671508, -0.013115565292537212, -0.051910120993852615, -0.42234671115875244, -0.00019500737835187465, -0.0017855905462056398, -0.002189026679843664, -0.0002138386043952778, -7.271740287251305e-06, -0.1393837034702301, -2.892338514328003, -0.3440942168235779, -0.04188935086131096, -0.5833999514579773, -0.0002843929105438292, -0.01154833659529686, -0.06618587672710419, -0.10179384797811508, -0.0429123230278492, -0.08368204534053802, -0.15300384163856506, -0.000346362212439999, -0.21531200408935547, -0.02229716256260872, -0.026013020426034927, -0.010031522251665592, -3.6073944568634033, -0.03625094145536423, -0.07515674829483032, -0.00010907054820563644, -6.675497570540756e-05, -0.16480353474617004, -0.0009641766082495451, -0.04669677093625069, -1.7063422203063965, -1.4036402702331543, -0.09316006302833557, -0.9721900224685669, -0.003832021960988641, -0.008838224224746227, -0.020341243594884872, -0.022668637335300446, -0.0009166568052023649, -0.0008338788175024092, -0.0008923601126298308, -0.004981013014912605, -0.004268107935786247, -1.1578736305236816, -0.8608940243721008, -0.13172517716884613, -0.0009302341495640576, -2.291141986846924, -1.5062204599380493, -0.011246973648667336, -0.20143887400627136, -0.04742850363254547, -0.0008336406317539513, -0.00034314466756768525, -0.09535636752843857, -1.2802362442016602, -0.003066838951781392, -0.002356016542762518, -2.0244691371917725, -0.018035465851426125, -0.0032373659778386354, -0.4166032671928406, -0.1330912709236145, -0.0006717570940963924, -0.00013147920253686607, -0.009136534295976162, -0.014223624020814896, -0.0009639384225010872, -0.0017720249015837908, -0.35389894247055054, -0.310812383890152, -0.003653994994238019, -0.0011441120877861977, -0.00012957210128661245, -0.04195427894592285, -0.24041976034641266, -1.720997929573059, -0.12267537415027618, -0.08928458392620087, -0.11549510061740875, -1.0523382425308228, -2.1407840251922607, -0.10466122627258301, -0.5473797917366028, -7.354942499659956e-05, -8.272782724816352e-05, -0.0009047467028722167, -0.37150290608406067, -0.05884336680173874, -0.06339854001998901, -1.4623020887374878, -0.046011295169591904, -0.02823583409190178, -0.0064056552946567535, -3.567276954650879, -0.018548371270298958, -2.901071786880493, -0.008494200184941292, -0.15086252987384796, -0.1082242801785469, -0.05554334819316864, -0.2507348358631134, -0.2608196437358856, -0.7027575373649597, -1.4613301753997803, -0.013680272735655308, -0.010670983232557774, -0.48238274455070496, -0.2618505656719208, -0.2355114370584488, -0.35697609186172485, -0.005962086841464043, -0.4810543656349182, -0.0012994902208447456, -0.001279250718653202, -0.01140797883272171, -0.023238224908709526, -0.06429737061262131, -0.0857044979929924, -0.042248476296663284, -0.042695771902799606, -7.223821739898995e-05, -0.00010239553375868127, -0.0032014804892241955, -0.005723279435187578, -0.12368093430995941, -1.634504795074463, -0.08925209194421768, -0.001689436612650752, -0.015345482155680656, -1.0013530300057027e-05, -0.0017231153324246407, -3.576278118089249e-07, -5.769562994828448e-05, 0.0, -2.3841855067985307e-07, -0.4984785318374634, -0.015419790521264076, -1.5026769638061523, -0.26031798124313354, -0.01274488028138876, -0.02332417666912079, -0.0022839431185275316, -0.976089596748352, -0.722801685333252, -0.29353833198547363, -0.001073261140845716, -0.00023648326168768108, -0.013835596852004528, -0.8316449522972107, -0.09715137630701065, -0.026582567021250725, -0.007164145819842815, -0.09921371936798096, -0.032755296677351, -0.0016439745668321848, -1.2690998315811157, -0.06101779639720917, -0.004179908894002438, -0.0762675479054451, -0.02776358462870121, -0.005575226154178381, -8.189342770492658e-05, -2.622600959512056e-06, -4.768360213347478e-06, -1.9073468138230965e-06, -0.6337258219718933, -0.012389364652335644, -0.1551065891981125, -0.0003067976504098624, -0.014978794381022453, -0.00791141763329506, -0.002009041141718626, -1.8930652141571045, -1.5875084400177002, -0.0006719953380525112, -0.0004694551753345877], "finish_reason": "length"}], "metrics": {"energy": 965.4954375791552, "energy_per_token": 3.771466553043575, "time": 22.694155, "time_per_token": 0.08864904296875}}
{"outputs": [{"text": "all_text = Counter()\n    for filename in os.listdir(directory_path):\n        if filename.endswith('.txt'):\n            filepath = os.path.join(directory_path, filename)\n            with open(filepath, 'r', encoding='utf-8') as file:\n                text = file.read().lower()\n                words = text.split()\n                unique_words = set(word for word in words if word not in STOPWORDS)\n                all_text.update(unique_words)\n    return len(all_text)", "tokens": ["all", "_", "text", " =", " Counter", "()", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "path", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "                ", "text", " =", " file", ".", "read", "()", ".", "lower", "()", "\n", "                ", "words", " =", " text", ".", "split", "()", "\n", "                ", "unique", "_", "words", " =", " set", "(", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", ")", "\n", "                ", "all", "_", "text", ".", "update", "(", "unique", "_", "words", ")", "\n", "    ", "return", " len", "(", "all", "_", "text", ")", "\n", "\n", "#"], "logprobs": [-3.222489595413208, -0.08799221366643906, -2.0456039905548096, -0.5196466445922852, -2.646862030029297, -0.018668659031391144, -0.05788427218794823, -0.3725306987762451, -0.21564865112304688, -0.5719759464263916, -0.0009473841637372971, -0.035442523658275604, -1.2397689715726301e-05, -0.0038009081035852432, -9.536738616588991e-07, -0.0002933310461230576, -0.0017163321608677506, -0.00020776021119672805, -5.483612312673358e-06, -0.0010798105504363775, -0.016750052571296692, -0.008343600668013096, -0.06591159105300903, -0.05189076438546181, -0.0011813811725005507, -0.005316523835062981, -4.410734163684538e-06, -1.1920928244535389e-07, -0.14555248618125916, -0.004385615698993206, -0.0005810956354252994, -4.029192859889008e-05, -0.009479510597884655, -0.01643465645611286, -0.0017105009173974395, -1.132190465927124, -1.5779101848602295, -0.0004219118563923985, -0.016566220670938492, -1.4305104514278355e-06, -1.1444026313256472e-05, -1.1920922133867862e-06, -0.00029559535323642194, -0.0001679517881711945, -0.000770510348957032, -5.8530047681415454e-05, -5.602820692729438e-06, -5.364274329622276e-05, -0.00048601735034026206, -4.5298504119273275e-05, -0.007468872237950563, -0.014537133276462555, -0.055244918912649155, -0.00019977481861133128, -0.0003026265767402947, -0.00040558696491643786, -3.4570634852570947e-06, -0.04480559751391411, -0.10226727277040482, -0.0032194233499467373, -1.4921454191207886, -7.509902934543788e-05, -0.021816736087203026, -0.03977140784263611, -0.05834779888391495, -0.04819434881210327, -0.003748772433027625, -0.01748141273856163, -8.189342770492658e-05, -0.5089858174324036, -0.005159989930689335, -0.002268243348225951, -0.0008407871937379241, -0.3824753761291504, -0.023974517360329628, -0.16644379496574402, -2.7179348762729205e-05, -1.6689160474925302e-05, -0.0064056552946567535, -0.9335561394691467, -0.1630767285823822, -5.781483559985645e-05, -0.22459684312343597, -0.04925742372870445, -0.3552487790584564, -0.00995834730565548, -0.45404571294784546, -0.0001736728590913117, -0.005349606275558472, -0.009492972865700722, -0.028210338205099106, -0.009351499378681183, -2.7797234058380127, -0.006899106781929731, -0.15251781046390533, -0.022797634825110435, -0.7002734541893005, -0.012507805600762367, -2.1130199432373047, -0.012053627520799637, -1.5616295058862306e-05, -1.2397689715726301e-05, -0.00047362555051222444, -0.005013750400394201, -0.013471176847815514, -0.03959886357188225, -1.9430925021879375e-05, -0.00044919890933670104, 0.0, -5.817244164063595e-05, 0.0, 0.0, -0.036401763558387756, -0.003185913898050785, -0.016974052414298058, -0.09512291848659515, -2.932505594799295e-05, -0.0021738011855632067, -0.22382958233356476, -4.124556289752945e-05, -0.00284077157266438, -0.040123965591192245, -2.7418097943154862e-06, -7.271740287251305e-06, -0.00015198028995655477, -0.00419973349198699, -0.08683567494153976, -0.13373419642448425, -0.278234601020813, -0.00029452278977259994, -0.0031627416610717773, -3.933898824470816e-06, -4.768370445162873e-07, -0.15205694735050201, -0.10797391086816788, -0.02589779533445835, -1.6568137407302856], "finish_reason": "stop"}], "metrics": {"energy": 521.3864057807922, "energy_per_token": 3.8057401881809647, "time": 11.981328, "time_per_token": 0.08745494890510949}}
