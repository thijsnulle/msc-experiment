{"outputs": [{"text": "# TODO: your code here...\n    pass", "tokens": ["#", " TODO", ":", " your", " code", " here", ".", ".", ".", "\n", "    ", "pass", "\n", "\n", "def"], "logprobs": [-1.1161245107650757, -2.997734785079956, -0.30146893858909607, -3.837404727935791, -0.03384101018309593, -0.4895910918712616, -3.0854482650756836, -1.5442713499069214, -0.033395614475011826, -0.04204137995839119, -0.19391724467277527, -1.4977333545684814, -0.12978121638298035, -0.059972770512104034, -0.49623772501945496], "finish_reason": "stop"}], "metrics": {"energy": 28.37642586517334, "energy_per_token": 1.8917617243448892, "time": 1.9075735, "time_per_token": 0.12717156666666668}}
{"outputs": [{"text": "# Splits the input data into training (70%) and test (30%) sets.\n    training_data, test_data = train_test_split(X, test_size=0.3)\n\n    # Determines the input dimension based on the first feature set of X.\n    input_dim = X.shape[1]\n\n    # Constructs a Keras Sequential model with one hidden dense layer and sigmoid activation.\n    model = keras.Sequential([\n        keras.layers.Dense(\n            units=512, activation='sigmoid', input_shape=(input_dim,)\n        ),\n        keras.layers.Dense(1, activation='sigmoid'),\n    ])\n\n    # Compiles the model using binary cross-entropy loss and SGD optimizer.\n    model.compile(\n        loss='binary_crossentropy', optimizer=keras.optimizers.SGD(),\n        metrics=['accuracy'],\n    )\n\n    # Fits the model to the training data in a non-verbose mode.\n    model.fit(training_data, Y, epochs=5)\n", "tokens": ["#", " Split", "s", " the", " input", " data", " into", " training", " (", "7", "0", "%)", " and", " test", " (", "3", "0", "%)", " sets", ".", "\n", "    ", "training", "_", "data", ",", " test", "_", "data", " =", " train", "_", "test", "_", "split", "(", "X", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n", "\n", "    ", "#", " Determ", "ines", " the", " input", " dimension", " based", " on", " the", " first", " feature", " set", " of", " X", ".", "\n", "    ", "input", "_", "dim", " =", " X", ".", "shape", "[", "1", "]", "\n", "\n", "    ", "#", " Construct", "s", " a", " K", "eras", " Sequ", "ential", " model", " with", " one", " hidden", " dense", " layer", " and", " s", "igmoid", " activation", ".", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "            ", "units", "=", "5", "1", "2", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "input", "_", "dim", ",", ")", "\n", "        ", ")", ",", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "='", "s", "igmoid", "')", ",", "\n", "    ", "])", "\n", "\n", "    ", "#", " Comp", "iles", " the", " model", " using", " binary", " cross", "-", "entropy", " loss", " and", " SGD", " optimizer", ".", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", "\n", "        ", "metrics", "=['", "accuracy", "']", ",", "\n", "    ", ")", "\n", "\n", "    ", "#", " F", "its", " the", " model", " to", " the", " training", " data", " in", " a", " non", "-", "verbose", " mode", ".", "\n", "    ", "model", ".", "fit", "(", "training", "_", "data", ",", " Y", ",", " epochs", "=", "5", ")", "\n"], "logprobs": [-1.0307267904281616, -0.586220920085907, -2.4896726608276367, -0.04925708472728729, -0.2892608642578125, -0.0028376809787005186, -0.012075887992978096, -0.0050592971965670586, -0.06907962262630463, -0.003951955586671829, -0.0002445875434204936, -0.003939487971365452, -0.0007433511782437563, -0.0004564673872664571, -0.0007419217727147043, -0.00024768622824922204, -2.145764938177308e-06, -0.00012516192509792745, -0.0065111867152154446, -0.19313451647758484, -0.0024504417087882757, -0.002806179691106081, -3.2820589542388916, -0.13930851221084595, -0.7491165995597839, -0.03548325225710869, -0.19179238379001617, -0.0003695997002068907, -0.0004158347437623888, -0.13587155938148499, -0.014629475772380829, -7.033323527139146e-06, -7.152531907195225e-06, -4.768370445162873e-07, -4.875540980719961e-05, -0.0007948100101202726, -0.198595330119133, -0.0013830630341544747, -0.8615074157714844, -1.6689286894688848e-06, -0.00013028726971242577, -0.021099045872688293, -0.0181988924741745, -4.172238186583854e-05, -0.01267614122480154, -1.2205510139465332, -0.008163773454725742, -0.3461014926433563, -0.0005864569102413952, -0.01849641464650631, -1.6457585096359253, -0.026947693899273872, -0.01451751310378313, -0.0918089747428894, -0.06960948556661606, -0.24361659586429596, -0.0007696765242144465, -0.004897740203887224, -0.013578317128121853, -0.0057523190043866634, -0.06516467034816742, -0.0598190613090992, -0.03101033717393875, -0.06090552359819412, -0.0035752442199736834, -0.0013054428854957223, -0.4294745922088623, -0.002467090031132102, -0.17828328907489777, -0.03462066873908043, -0.4763658940792084, -0.1961076557636261, -0.025344131514430046, -0.0171623807400465, -0.006664312444627285, -0.005655952729284763, -0.036774929612874985, -0.02431674860417843, -0.0003409996279515326, -0.00538007915019989, -0.10737501829862595, -0.0010939810890704393, -0.008573628030717373, -0.010554683394730091, -8.106198947643861e-06, -0.004152841866016388, -2.0861407392658293e-05, -0.0002584123576525599, -0.0108446991071105, -0.023845670744776726, -0.0019239740213379264, -0.018427133560180664, -8.320462075062096e-05, -0.04626195877790451, -0.004056321922689676, -3.3378546504536644e-06, -0.0009440494468435645, -0.011213849298655987, -0.0015507827047258615, -0.0007051127031445503, -0.015377882868051529, -0.00295048370026052, -0.16866503655910492, -2.3841830625315197e-06, -5.8530047681415454e-05, -0.5903896689414978, -2.0265558760002023e-06, -1.645074735279195e-05, -0.08641797304153442, -0.06011511757969856, -0.01817009598016739, -0.009650010615587234, -5.245195097813848e-06, -0.006481103599071503, -6.318072337307967e-06, -0.02845136635005474, -7.4741430580616e-05, -3.766942609217949e-05, -1.4099289178848267, -0.011325121857225895, -0.4705694913864136, -0.017191089689731598, -2.53961443901062, -1.870004415512085, -0.012829150073230267, -0.0027417470701038837, -2.2560484409332275, -0.5888937711715698, -0.07817219942808151, -9.417489309271332e-06, -0.00782070029526949, -0.008499283343553543, -0.37645062804222107, -2.7418097943154862e-06, -0.491936594247818, -0.30984070897102356, -0.009334610775113106, -0.00023338454775512218, -0.00015948931104503572, -0.004932022653520107, -0.24045246839523315, -0.12266092747449875, -0.008706466294825077, -0.006104040890932083, -0.06547779589891434, -0.0635436475276947, -0.058639347553253174, -0.0036653971765190363, -3.933898824470816e-06, -0.001465200330130756, -7.033323527139146e-06, -0.029705865308642387, -9.512448741588742e-05, -0.0004843492351938039, -2.3752706050872803, -0.6360896825790405, -0.026602184399962425, -0.03260426968336105, -0.0029049599543213844, -2.7418097943154862e-06, -0.024283356964588165, -1.1752698421478271, -0.01782645843923092, -0.022744150832295418, -0.002815808402374387, -0.0007053509471006691, -0.009595581330358982, -0.00016842853801790625, -0.0038119524251669645, -0.04453735053539276, -0.0002488780301064253, -0.00036066226311959326, -0.0002079985715681687, -0.004769971128553152, -0.001379372552037239, -0.00012158608296886086, -0.0006646093097515404, -0.0003939091111533344, -0.00045599075383506715, -0.0030031364876776934, -0.0036505504976958036, -0.00018308870494365692, -0.004449586383998394, -0.0006358985556289554, -0.0002954761730507016, -0.012777953408658504, -9.524368942948058e-05, -0.00038092033355496824, -0.0004606377915479243, -0.44388797879219055, -0.0028496868908405304, -0.45840153098106384, -0.5430783629417419, -0.048484329134225845, -0.0004285847535356879, -0.0002536452084314078, -9.619726915843785e-05, -7.509902934543788e-05, -0.008190969005227089, -1.2297135591506958, -2.2178702354431152, -0.08085483312606812, -3.969590397900902e-05, -0.0006472161621786654, -0.005411381367594004, -0.00019977481861133128, -0.028112750500440598, -0.00023993951617740095, -0.21720698475837708, -1.259225845336914, -0.4011993110179901, -0.5623916983604431, -0.005508956499397755, -0.1373872607946396, -0.1270517259836197, -0.21747508645057678, -0.6913162469863892, -0.05976875498890877, -0.014884487725794315, -0.00011503035057103261, -0.0005422552349045873, -0.009072980843484402, -0.00020072828920092434, -0.004436768591403961, -0.04834781214594841, -0.00011562632425921038, -0.0006331584881991148, -0.00042429505265317857, -0.002065431559458375, -0.0016734894597902894, -0.00044276448898017406, -0.0008251837571151555, -0.013978435657918453, -0.004372797440737486, -0.00023326536756940186, -6.294052582234144e-05, -5.6265202147187665e-05, -0.0007460909546352923, -0.0072907814756035805, -0.001975610153749585, -0.0003607814433053136, -0.23472252488136292, -0.0011507801245898008, -0.00032658010604791343, -0.00012289722508285195, -0.7950937151908875, -5.8412379075889476e-06, -1.1324817933200393e-05, -0.0006998711614869535, -0.10662094503641129, -0.040369585156440735, -0.5225622057914734, -0.00046456989366561174, -1.7881519794464111, -3.0492539405822754, -0.006766027770936489], "finish_reason": "length"}], "metrics": {"energy": 384.67585406494186, "energy_per_token": 1.5026400549411791, "time": 15.3478155, "time_per_token": 0.059952404296875}}
{"outputs": [{"text": "# split data into training and testing sets\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n    # create Keras model with one hidden layer\n    model = keras.Sequential()\n    model.add(keras.layers.Dense(32, activation='sigmoid', input_shape=(2,)))\n    # compile the model using binary cross-entropy loss and SGD optimizer\n    model.compile(loss='binary_crossentropy', optimizer='SGD')\n    # fit the model to the training data in non-verbose mode\n    model.fit(X_train, Y_train, epochs=100, verbose=False)\n    # compute precision-recall curves for the test set data\n    precision, recall, thresholds = precision_recall_curve(Y_test, model.predict(X_test))\n    # plot the Precision-Recall curve\n    ax = plt.subplot(1, 1, 1)\n    ax.plot(recall, precision)\n    ", "tokens": ["#", " split", " data", " into", " training", " and", " testing", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "#", " create", " K", "eras", " model", " with", " one", " hidden", " layer", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "3", "2", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "2", ",", ")))", "\n", "    ", "#", " compile", " the", " model", " using", " binary", " cross", "-", "entropy", " loss", " and", " SGD", " optimizer", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "S", "GD", "')", "\n", "    ", "#", " fit", " the", " model", " to", " the", " training", " data", " in", " non", "-", "verbose", " mode", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "False", ")", "\n", "    ", "#", " compute", " precision", "-", "re", "call", " curves", " for", " the", " test", " set", " data", "\n", "    ", "precision", ",", " recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "\n", "    ", "#", " plot", " the", " Precision", "-", "Rec", "all", " curve", "\n", "    ", "ax", " =", " plt", ".", "sub", "plot", "(", "1", ",", " ", "1", ",", " ", "1", ")", "\n", "    ", "ax", ".", "plot", "(", "re", "call", ",", " precision", ")", "\n", "    "], "logprobs": [-1.0307267904281616, -2.55791974067688, -0.7260165810585022, -0.646211564540863, -0.15663714706897736, -0.21362844109535217, -1.7689498662948608, -0.09584520012140274, -0.03143438696861267, -0.002309633418917656, -0.7086187601089478, -0.011579682119190693, -0.0028436246793717146, -0.0009991897968575358, -0.002411673776805401, -6.115249561844394e-05, -0.0020687624346464872, -0.0003588747640606016, -0.599311888217926, -0.00016711745411157608, -7.259582343976945e-05, -7.414542778860778e-05, -0.0032075406052172184, -1.156323378381785e-05, -6.83045873302035e-05, -0.001311038387939334, -0.013193568214774132, -4.410734163684538e-06, -5.483612312673358e-06, -1.1920928244535389e-07, -2.169585604860913e-05, -0.00044145373976789415, -0.09748178720474243, -0.0007992172613739967, -0.006113045383244753, -0.014749882742762566, -0.04952520132064819, -2.145764938177308e-06, -2.3007127310847864e-05, -0.007867420092225075, -0.011575321666896343, -5.090107151772827e-05, -0.01052000280469656, -0.1685817539691925, -0.058908894658088684, -2.264974000354414e-06, -6.079655122448457e-06, -0.0016502822982147336, -0.143330380320549, -0.01679835096001625, -0.11281723529100418, -0.002632131101563573, -2.020925283432007, -0.1976075917482376, -0.7854605317115784, -1.7574437856674194, -0.00018380382971372455, -0.1723453402519226, -0.3561352491378784, -0.39386603236198425, -0.016723910346627235, -0.1850578784942627, -0.9954401850700378, -0.003832853166386485, -0.02356533892452717, -0.0031628606375306845, -0.12544994056224823, -9.417489309271332e-06, -0.00011955977242905647, -0.3985910415649414, -3.6954811548639555e-06, -1.6689286894688848e-06, -3.0396392345428467, -0.00553598627448082, -0.0019714459776878357, -0.02345169335603714, -8.225102646974847e-05, -5.900685573578812e-05, -5.376194530981593e-05, -0.012951422482728958, -6.9141146923357155e-06, -0.0017822586232796311, -5.602820692729438e-06, -0.0062097227200865746, -8.11782301752828e-05, -0.00012933371181134135, -2.397778034210205, -0.360774964094162, -0.0030134764965623617, -0.650752604007721, -0.20808233320713043, -0.11394274979829788, -1.5020257706055418e-05, -0.05863237753510475, -0.0007359656738117337, -0.01926368474960327, -1.2278481335670222e-05, -0.20309071242809296, -0.2406182587146759, -1.1930333375930786, -0.04834553971886635, -0.17249955236911774, -0.033958323299884796, -0.030256425961852074, -1.0925177335739136, -0.01585542969405651, -2.1542978286743164, -0.0015930355293676257, -1.8783717155456543, -0.09794364124536514, -0.007169235497713089, -0.059731919318437576, -0.00017307691450696439, -0.039171043783426285, -0.061526279896497726, -0.04883178323507309, -0.020664401352405548, -0.004557341802865267, -0.00035482310340739787, -0.005253794603049755, -5.209310256759636e-05, -0.00026782741770148277, -0.0015585192013531923, -0.4613215923309326, -0.04220276325941086, -0.02101150155067444, -0.0006724718841724098, -0.0002329078270122409, -6.639736966462806e-05, -9.822363062994555e-05, -0.0009313059854321182, -0.024238677695393562, -0.05041470006108284, -1.7357063293457031, -0.00045170116936787963, -0.13060611486434937, -0.0005408254801295698, -0.01179801020771265, -0.0025383178144693375, -0.0423705168068409, -0.0631096139550209, -0.0006581762572750449, -0.05263861268758774, -0.1158674955368042, -0.011635535396635532, -0.005032253917306662, -0.9220196604728699, -1.069632887840271, -0.0010213402565568686, -0.0005109196645207703, -0.0014112761709839106, -0.014268400147557259, -0.00030858523678034544, -0.10511570423841476, -0.0003406421164982021, -0.00011491115583339706, -6.353653589030728e-05, -0.0068531702272593975, -0.006421882193535566, -2.372236667724792e-05, -0.0006764031131751835, -0.00848308950662613, -0.00025674383505247533, -8.821448318485636e-06, -0.00603839848190546, -0.2234565019607544, -0.0005634627304971218, -0.7238450646400452, -0.07633492350578308, -1.0793120861053467, -0.11714546382427216, -0.19955269992351532, -0.0006182666402310133, -2.312528610229492, -0.06423823535442352, -0.02364148385822773, -0.016857078298926353, -0.005291622597724199, -3.0162434577941895, -0.828474223613739, -0.3723955750465393, -0.00032824851223267615, -0.00019524575327523053, -0.9078748226165771, -0.5886624455451965, -0.19247420132160187, -0.3726145327091217, -0.6913122534751892, -0.2948296070098877, -0.02677071839570999, -0.0002953569928649813, -0.3375915586948395, -0.02075909823179245, -0.0026208360213786364, -0.0002795067266561091, -0.42162224650382996, -0.0023086818400770426, -0.0039087338373064995, -2.3841855067985307e-07, -9.417489309271332e-06, -0.00029523781267926097, -1.1920928244535389e-07, -8.22540732769994e-06, -0.00013207517622504383, -0.12983345985412598, -0.001726209418848157, -0.001754293916746974, -0.010668270289897919, -0.029835116118192673, -0.00013374387344811112, -0.00021217002358753234, -0.0011255365097895265, -0.00017855956684798002, -6.651657167822123e-05, -5.1616290875244886e-05, -0.18700803816318512, -0.0033080638386309147, -0.023356903344392776, -0.012155737727880478, -0.7637936472892761, -0.2011105716228485, -1.914770483970642, -0.00215798057615757, -0.002006661845371127, -1.490105023549404e-05, -0.00966984499245882, -0.10791397839784622, -0.0005315321614034474, -0.4280990958213806, -0.01438556145876646, -0.004699850920587778, -0.00022980909852776676, -3.210484027862549, -0.36589109897613525, -0.9346498250961304, -0.07680024206638336, -2.318803071975708, -0.07920598238706589, -0.3746129274368286, -0.001392943668179214, -0.0004906642716377974, -0.000271521887043491, -0.008970200084149837, -0.009223943576216698, -0.0009734659106470644, -0.04881634563207626, -0.0005914607318118215, -0.3758545219898224, -0.007461299654096365, -0.005991119425743818, -0.0007078525959514081, -0.011378631927073002, -0.0004748170613311231, -1.3351590633392334, -0.002526664873585105, -0.0014063954586163163], "finish_reason": "length"}], "metrics": {"energy": 404.08296916961694, "energy_per_token": 1.5784490983188162, "time": 15.551697, "time_per_token": 0.06074881640625}}
{"outputs": [{"text": "X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0, shuffle=True)\n    model = keras.models.Sequential()\n    model.add(keras.layers.Dense(2, input_shape=(2,), activation='sigmoid'))\n    model.compile(loss='binary_crossentropy', optimizer='SGD')\n    model.fit(X_train, y_train, verbose=0, epochs=20, batch_size=128)\n    pr_support, pr_pos, auc = precision_recall_curve(y_test, model.predict(X_test))\n    ax = plt.gca()\n    ax.plot(pr_support, pr_pos, color='darkred', linewidth=1.0, label='Precision-Recall Curve')\n    ax.plot([0, 1], [0, 1], 'k-', linewidth=1.0, label='random guessing', alpha=0.5)\n    ax", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "0", ",", " shuffle", "=", "True", ")", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "2", ",", " input", "_", "shape", "=(", "2", ",", ")", ",", " activation", "='", "s", "igmoid", "'))", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "S", "GD", "')", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ",", " verbose", "=", "0", ",", " epochs", "=", "2", "0", ",", " batch", "_", "size", "=", "1", "2", "8", ")", "\n", "    ", "pr", "_", "support", ",", " pr", "_", "pos", ",", " a", "uc", " =", " precision", "_", "re", "call", "_", "curve", "(", "y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "ax", ".", "plot", "(", "pr", "_", "support", ",", " pr", "_", "pos", ",", " color", "='", "dark", "red", "'", ",", " linewidth", "=", "1", ".", "0", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n", "    ", "ax", ".", "plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " '", "k", "-'", ",", " linewidth", "=", "1", ".", "0", ",", " label", "='", "random", " guessing", "'", ",", " alpha", "=", "0", ".", "5", ")", "\n", "    ", "ax"], "logprobs": [-1.9178804159164429, -0.18239401280879974, -0.015254615806043148, -0.0028559870552271605, -0.006576087325811386, -0.00020787939138244838, -0.011799070052802563, -0.0006547214579768479, -0.5821258425712585, -0.00023862851958256215, -0.0006984416977502406, -0.00020180096908006817, -0.005394663196057081, -4.541770613286644e-05, -0.000679500459227711, -0.005385770462453365, -0.021121805533766747, -1.2516897186287679e-05, -9.417489309271332e-06, -9.536738616588991e-07, -2.372236667724792e-05, -0.0007659838884137571, -0.10611119121313095, -0.0012699642684310675, -0.0381493978202343, -0.02681133896112442, -0.1139657273888588, -5.483612312673358e-06, -3.576214658096433e-05, -0.033071815967559814, -0.0232518520206213, -8.892617915989831e-05, -0.010974878445267677, -0.3367312252521515, -0.1191846951842308, -2.622600959512056e-06, -6.556489552167477e-06, -0.004175516311079264, -2.4847633838653564, -2.09971284866333, -0.4632081091403961, -0.004777326714247465, -0.07614792138338089, -0.29590165615081787, -0.02309251017868519, -0.20221133530139923, -0.2165183126926422, -0.01639677956700325, -0.06793462485074997, -0.00010716341057559475, -0.00028534632292576134, -0.6054738163948059, -0.00013004888023715466, -8.070142939686775e-05, -9.536738616588991e-07, -1.07287787614041e-05, -0.7043524384498596, -0.006551690865308046, -0.01503974199295044, -0.06290198117494583, -0.0002810560108628124, -0.000219321038457565, -0.00017414960893802345, -0.03396788612008095, -2.5987286790041253e-05, -0.000966915744356811, -1.9311717551317997e-05, -0.010811090469360352, -8.713819261174649e-05, -0.00032264748006127775, -2.4190726280212402, -0.2573493719100952, -1.3247781991958618, -0.00013362467871047556, -0.5885930061340332, -0.3428093492984772, -0.2692215144634247, -0.014876031316816807, -0.690904974937439, -0.0009773960337042809, -0.050724320113658905, -0.2258330136537552, -0.020006880164146423, -2.074220174108632e-05, -0.014515632763504982, -0.014368874952197075, -0.011240372434258461, -0.005730272736400366, -0.00013863079948350787, -0.02122708037495613, -0.013524454087018967, -0.4481234848499298, -0.06884262710809708, -0.027621079236268997, -0.0016840812750160694, -0.0001752223033690825, -0.00010513706365600228, -0.00014757021563127637, -0.001086598145775497, -0.05680769681930542, -0.05050729960203171, -1.8483790159225464, -0.0006065912893973291, -0.2207697182893753, -0.0019867937080562115, -0.013432951644062996, -0.09493537992238998, -0.0009977606823667884, -0.0012425805907696486, -8.546940807718784e-05, -0.014579545706510544, -0.011244144290685654, -0.00025185750564560294, -0.0010492063593119383, -0.014602337963879108, -0.0003022690652869642, -2.109982233378105e-05, -0.008815418928861618, -0.974389374256134, -0.005482044070959091, -0.14873798191547394, -0.3087991774082184, -0.22727328538894653, -0.0012987758964300156, -2.1642537117004395, -0.2097027599811554, -0.865301787853241, -0.2491459846496582, -7.712543447269127e-05, -5.364403477869928e-06, -0.001262939884327352, -0.8088407516479492, -2.4473867416381836, -0.03186102956533432, -0.0946301519870758, -0.007024947088211775, -0.06027473136782646, -2.805954933166504, -0.07126379013061523, -3.7960667610168457, -0.04550306126475334, -0.01117860246449709, -0.0009258274803869426, -1.9383409023284912, -0.5856086611747742, -2.0325310230255127, -0.4243176281452179, -0.07262860983610153, -0.004338732920587063, -5.781483559985645e-05, -4.327203714638017e-05, -6.580135959666222e-05, -2.264974000354414e-06, -6.079655122448457e-06, -0.0004015354788862169, -0.03854416310787201, -0.0007099968497641385, -0.0065345182083547115, -0.010227768681943417, -0.036114007234573364, -0.00015448330668732524, -0.0001578206429257989, -0.006006405223160982, -0.0010370597010478377, -0.00011646069469861686, -0.00021741411183029413, -0.5224277377128601, -0.006618365179747343, -0.06281779706478119, -0.509238064289093, -0.049664393067359924, -0.007571925409138203, -0.002163809258490801, -1.4126322269439697, -0.00912247784435749, -0.007064010016620159, -0.050034571439027786, -0.005842512473464012, -0.008769570849835873, -0.0005839549703523517, -1.148146629333496, -0.03893659636378288, -0.04168687015771866, -4.458328112377785e-05, -0.2116083949804306, -0.0028525397647172213, -0.0020335486624389887, -8.320462075062096e-05, -0.0002656822034623474, -0.006227611564099789, -0.7120705246925354, -0.0026037145871669054, -0.965612530708313, -0.8256270289421082, -0.01140185073018074, -2.586808113846928e-05, -0.6329164505004883, -0.00014661667228210717, -0.3653467297554016, -0.007294449955224991, -1.2484469413757324, -0.007660299073904753, -0.4090518057346344, -0.014099509455263615, -0.8836149573326111, -0.001208409434184432, -0.026440123096108437, -0.02091904543340206, -0.00018976318824570626, -1.311116337776184, -0.00022420754248742014, -0.015299580059945583, -0.0027692087460309267, -0.007542584091424942, -0.014235376380383968, -0.0005016260547563434, -0.5916762948036194, -0.006460968870669603, -0.0011328000109642744, -0.16180069744586945, -0.013800324872136116, -0.001134705264121294, -0.0003069168305955827, -6.544376083184034e-05, -0.007118695415556431, -0.0005517867393791676, -0.010196617804467678, -0.0007421599584631622, -0.00029130507027730346, -0.00039569655200466514, -3.8742269680369645e-05, -0.4074934124946594, -0.5040290355682373, -2.3663971424102783, -0.001760838902555406, -0.3048548698425293, -3.0397906812140718e-05, -0.008360269479453564, -0.0013337773270905018, -0.013229332864284515, -0.6411314606666565, -0.006933675613254309, -0.014400837011635303, -2.416551351547241, -4.232941627502441, -2.6740121841430664, -0.006360999308526516, -0.2619134187698364, -0.00022313489171210676, -0.23983703553676605, -0.00012587709352374077, -0.846470832824707, -0.040040936321020126, -0.00113589596003294, -0.02450183592736721, -0.011906979605555534], "finish_reason": "length"}], "metrics": {"energy": 373.3193305463791, "energy_per_token": 1.4582786349467933, "time": 15.983008, "time_per_token": 0.062433625}}
{"outputs": [{"text": "return", "tokens": ["return", "\n", "\n", "def"], "logprobs": [-3.213752269744873, -1.9499564170837402, -0.028910551220178604, -0.5282526612281799], "finish_reason": "stop"}], "metrics": {"energy": 23.301665371894835, "energy_per_token": 5.825416342973709, "time": 1.6613046, "time_per_token": 0.41532615}}
{"outputs": [{"text": "X, Y = X, Y\n    model = keras.models.Sequential()\n    model.add(keras.layers.Dense(1, input_shape=X.shape[1]))\n    model.compile(loss='binary_crossentropy', optimizer='adam',\n                  metrics=[keras.metrics.BinaryAccuracy()])\n    model.fit(X, Y,\n              batch_size=128, epochs=1, verbose=0, shuffle=True)\n    y_pred = model.predict(X).flatten()\n    precision, recall, _ = precision_recall_curve(Y, y_pred)\n    precision, recall, thresh = precision_recall_curve(Y, y_pred)\n    fig, ax = plt.subplots()\n    ax.plot(recall, precision, \"-\")\n    ax.set_xlim([0.0, 1.0])\n    ax.set_ylim([0.0, 1.05])\n    ax.set_xlabel(\"Recall\")\n    ax.set_ylabel(\"Precision\"", "tokens": ["X", ",", " Y", " =", " X", ",", " Y", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " input", "_", "shape", "=", "X", ".", "shape", "[", "1", "]))", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "adam", "'", ",", "\n", "                ", "  ", "metrics", "=[", "keras", ".", "metrics", ".", "Binary", "Acc", "uracy", "()", "])", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ",", "\n", "              ", "batch", "_", "size", "=", "1", "2", "8", ",", " epochs", "=", "1", ",", " verbose", "=", "0", ",", " shuffle", "=", "True", ")", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "X", ")", ".", "fl", "atten", "()", "\n", "    ", "precision", ",", " recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", ",", " y", "_", "pred", ")", "\n", "    ", "precision", ",", " recall", ",", " thresh", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", ",", " y", "_", "pred", ")", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "plot", "(", "re", "call", ",", " precision", ",", " \"", "-", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "x", "lim", "([", "0", ".", "0", ",", " ", "1", ".", "0", "])", "\n", "    ", "ax", ".", "set", "_", "y", "lim", "([", "0", ".", "0", ",", " ", "1", ".", "0", "5", "])", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "\"", "Rec", "all", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "(", "\"", "Prec", "ision", "\""], "logprobs": [-1.9178804159164429, -2.123706817626953, -0.18982906639575958, -0.02268495224416256, -0.3510913550853729, -0.6571771502494812, -0.04633810371160507, -0.10285234451293945, -0.2933293282985687, -1.8609868288040161, -0.04610772058367729, -0.3242276608943939, -0.0005479741375893354, -0.001029080944135785, -0.2899501919746399, -0.00032395837479270995, -0.00014709345123264939, -2.9802276912960224e-06, -1.156323378381785e-05, -0.3764283061027527, -0.01721147820353508, -0.048891954123973846, -0.1032642051577568, -0.0008815216715447605, -0.0006062338361516595, -0.00040070133400149643, -0.054834119975566864, -5.8410845667822286e-05, -0.0015353093622252345, -4.172238186583854e-05, -0.014115729369223118, -9.965400386136025e-05, -0.000776347063947469, -0.8485909700393677, -0.3038223087787628, -0.4987369477748871, -0.0002343380037928, -0.44777485728263855, -1.8408259153366089, -0.0407089963555336, -0.1728937327861786, -0.05250243470072746, -0.009891069494187832, -0.0007241725688800216, -1.0735437870025635, -0.016270119696855545, -0.012334966100752354, -0.011332076042890549, -0.00014220656885299832, -0.005648840684443712, -0.018721310421824455, -0.882684051990509, -0.28208738565444946, -0.02784949727356434, -0.0018147443188354373, -0.00019429226813372225, -0.00011407678539399058, -0.0003987947420682758, -0.002123126992955804, -0.2003849595785141, -0.069803386926651, -2.4462406635284424, -1.591248631477356, -0.6014799475669861, -1.4308403730392456, -0.028120864182710648, -0.06119710952043533, -0.004770208150148392, -1.800816297531128, -3.1671972274780273, -0.0003233625029679388, -0.004690358880907297, -0.0001399419124936685, -0.5133396983146667, -0.3007681667804718, -2.4318398573086597e-05, -0.10922448337078094, -0.6867992281913757, -0.012168575078248978, -0.04907197877764702, -0.20066483318805695, -0.006168494001030922, -0.005746036767959595, -0.00028236693469807506, -0.023930754512548447, -0.0027353274635970592, -0.031890012323856354, -0.021319156512618065, -2.80218243598938, -0.03690016642212868, -1.5568695068359375, -1.6093124941107817e-05, -2.634490556374658e-05, -0.0018667429685592651, -0.7552269697189331, -1.3102848529815674, -0.013800442218780518, -0.001515312702395022, -1.0523637533187866, -0.0006761648692190647, -0.5618960857391357, -1.4024901390075684, -0.5703434348106384, -0.0014490114990621805, -0.24628116190433502, -0.5134396553039551, -1.452273964881897, -0.0010631391778588295, -0.7470905780792236, -0.6845555901527405, -0.010647865943610668, -0.1099439188838005, -3.640169382095337, -0.01830108091235161, -0.7381400465965271, -0.09732010960578918, -0.031243760138750076, -0.00034957972820848227, -0.0004891153075732291, -0.022681456059217453, -0.021940361708402634, -0.015324938111007214, -2.8407511711120605, -0.4893106520175934, -2.9205850296420977e-05, -0.0037839256692677736, -0.08038875460624695, -0.026200350373983383, -0.6937280297279358, -0.021371666342020035, -0.005544047802686691, -0.0017308506648987532, -0.7967380881309509, -0.005026797764003277, -0.01654699258506298, -2.145764938177308e-06, -1.811964830267243e-05, -0.0007090438157320023, -1.1920922133867862e-06, -7.748573807475623e-06, -0.00020895205670967698, -0.3372350335121155, -0.7307535409927368, -0.008948343805968761, -0.0002536452084314078, -0.0019050560658797622, -0.24821709096431732, -0.003589498344808817, -0.037047792226076126, -1.7696318626403809, -0.5245618224143982, -0.0009504806366749108, -1.4966306686401367, -3.1162803173065186, -0.15858244895935059, -0.07680477201938629, -0.09501874446868896, -0.000871040450874716, -0.006625707261264324, -0.00012170527770649642, -0.0002227773511549458, -0.023544613271951675, -0.05753589794039726, -0.01292282622307539, -0.035055506974458694, -0.00026127262390218675, -2.5152843591058627e-05, -0.5361269116401672, -0.05791577324271202, -0.027194827795028687, -4.236305236816406, -0.7100293636322021, -0.04582877829670906, -0.01138028223067522, -0.0009172523277811706, -0.0008827127167023718, -0.009357522241771221, -0.00011717586312443018, -0.3189033269882202, -0.003206471214070916, -0.015284787863492966, -0.22382433712482452, -0.003658389439806342, -0.11798625439405441, -0.013804792426526546, -0.06369354575872421, -0.0005709686665795743, -0.029672306030988693, -0.00318068522028625, -0.21179243922233582, -2.497985363006592, -2.3818697929382324, -0.5365263223648071, -0.34973734617233276, -0.004623081535100937, -0.007758601568639278, -0.03936612233519554, -0.000447530735982582, -0.10625859349966049, -0.3068837523460388, -1.6519365310668945, -0.03489653766155243, -0.16682887077331543, -0.17363564670085907, -1.2528549432754517, -0.08604735136032104, -0.019317472353577614, -0.011777156963944435, -0.004121382255107164, -0.028952591121196747, -0.0023669579531997442, -0.038557928055524826, -0.00490450207144022, -0.0003644755925051868, -0.002334252465516329, -0.00028606137493625283, -0.002148345345631242, -0.001177690108306706, -0.0070983367040753365, -4.815939246327616e-05, -0.0005164004978723824, -0.002699899487197399, -0.0011737607419490814, -0.0005647733341902494, -0.003263982245698571, -0.005936253350228071, -0.006005812902003527, -0.0007744412287138402, -0.00906223151832819, -0.2605321407318115, -0.0009579836623743176, -0.0014856740599498153, -0.01164354756474495, -0.014246189035475254, -0.00042417587246745825, -0.05146205797791481, -0.012648832984268665, -0.17294517159461975, -0.4588658809661865, -0.008150176145136356, -0.04396550729870796, -0.0002683041093405336, -0.006542808376252651, -0.004918855614960194, -0.0032194233499467373, -0.00015758226800244302, -0.00033968876232393086, -5.1616290875244886e-05, -0.0005286726518534124, -2.8371408916427754e-05, -0.0006205302197486162, -0.0013430631952360272, -0.00012861855793744326, -0.0014773417497053742, -0.00013386306818574667, -0.0012682974338531494], "finish_reason": "length"}], "metrics": {"energy": 400.0299380741119, "energy_per_token": 1.5626169456019996, "time": 15.595783, "time_per_token": 0.06092102734375}}
{"outputs": [{"text": "model = keras.models.Sequential([\n        keras.layers.Dense(1, input_dim=len(X[0]), activation=\"sigmoid\")\n    ])\n    model.compile(loss=keras.losses.binary_crossentropy, optimizer=\"sgd\")\n    model.fit(X, Y, epochs=1, verbose=0)\n    p, r, thresholds = precision_recall_curve(Y, model.predict(X), pos_label=1)\n    ax = plt.gca()\n    ax.set_xlim([0.0, 1.0])\n    ax.set_ylim([0.0, 1.0])\n    ax.set_xlabel('Recall')\n    ax.set_ylabel('Precision')\n    ax.set_title('Precision-Recall Curve')\n    ax.plot(r, p, linestyle='--', linewidth=4, marker='o')\n    return model, ax", "tokens": ["model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " input", "_", "dim", "=", "len", "(", "X", "[", "0", "])", ",", " activation", "=", "\"", "s", "igmoid", "\"", ")", "\n", "    ", "])", "\n", "    ", "model", ".", "compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ",", " optimizer", "=", "\"", "sg", "d", "\"", ")", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ",", " epochs", "=", "1", ",", " verbose", "=", "0", ")", "\n", "    ", "p", ",", " r", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", ",", " model", ".", "predict", "(", "X", ")", ",", " pos", "_", "label", "=", "1", ")", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "ax", ".", "set", "_", "x", "lim", "([", "0", ".", "0", ",", " ", "1", ".", "0", "])", "\n", "    ", "ax", ".", "set", "_", "y", "lim", "([", "0", ".", "0", ",", " ", "1", ".", "0", "])", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Rec", "all", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Prec", "ision", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n", "    ", "ax", ".", "plot", "(", "r", ",", " p", ",", " lin", "estyle", "='", "--", "'", ",", " linewidth", "=", "4", ",", " marker", "='", "o", "')", "\n", "    ", "return", " model", ",", " ax"], "logprobs": [-2.176675319671631, -0.032122306525707245, -0.22573570907115936, -0.00025245340657420456, -0.0009080815361812711, -0.30338022112846375, -0.00023183519078884274, -0.00013195598148740828, -3.4570634852570947e-06, -1.0013530300057027e-05, -1.264243483543396, -0.3111974000930786, -0.0407944917678833, -0.013124036602675915, -1.764281842042692e-05, -0.0003716255014296621, -3.71926071238704e-05, -0.012366287410259247, -0.0001567479339428246, -0.00020632999076042324, -1.6169698238372803, -0.21598537266254425, -0.9450631737709045, -0.0001070442158379592, -1.5132120847702026, -0.02786155417561531, -2.2329721450805664, -0.0005025792634114623, -0.013016259297728539, -0.03889291360974312, -0.0010511117288842797, -0.6197105050086975, -0.002775033703073859, -0.06662159413099289, -1.5015017986297607, -0.08527340739965439, -0.0028780964203178883, -1.823885577323381e-05, -3.516612196108326e-05, -0.058341726660728455, -0.10204523056745529, -0.015145893208682537, -0.004367456305772066, -0.0014980534324422479, -0.2297542691230774, -0.016411086544394493, -0.00014399446081370115, -0.0018641252536326647, -0.0005980133428238332, -0.5440323948860168, -0.17510750889778137, -2.284637451171875, -4.792098479811102e-05, -0.01789449155330658, -7.152555099310121e-07, -4.768258077092469e-05, -0.6965509057044983, -6.9141146923357155e-06, -0.00013481661153491586, -7.83174327807501e-05, -0.0007314390386454761, -0.31177106499671936, -0.04158978909254074, -1.5058937072753906, -0.5570380687713623, -0.0002097863471135497, -6.723177648382261e-05, -0.044359467923641205, -0.004457537550479174, -0.020128393545746803, -0.07690268754959106, -0.0010717130498960614, -0.000565249880310148, -7.843663479434326e-05, -0.01940867304801941, -0.003032373497262597, -0.02998899295926094, -0.02350188046693802, -1.4293057918548584, -0.0014477020595222712, -0.19376541674137115, -0.4207727909088135, -0.06895846128463745, -0.0008865240379236639, -0.11950600892305374, -0.1252705305814743, -0.01469737570732832, -0.10165859758853912, -2.741971969604492, -0.1824486404657364, -0.03585929051041603, -0.011675596237182617, -1.66891610622406, -0.05114904046058655, -0.005260435398668051, -2.2411095415009186e-05, -1.9430925021879375e-05, -7.879423355916515e-05, -1.5497195136049413e-06, -5.245195097813848e-06, -0.00015639036428183317, -0.19350945949554443, -0.08213680237531662, -0.0885014683008194, -0.0001833270798670128, -0.0008949803304858506, -0.014665775932371616, -0.0008954567601904273, -1.1903800964355469, -0.11917930096387863, -0.4031863212585449, -0.001167211914435029, -0.0015883937012404203, -0.0033711527939885855, -0.05902329832315445, -0.07909496873617172, -0.01331814844161272, -0.049355123192071915, -0.22314545512199402, -0.0466916523873806, -0.008921287022531033, -0.001859127776697278, -0.9865167737007141, -0.006739978212863207, -0.005410195793956518, -0.1250280737876892, -0.007915912196040154, -0.0258093923330307, -0.0006817638641223311, -0.7068244218826294, -0.040184661746025085, -2.4882607460021973, -0.07385505735874176, -0.04040347412228584, -0.24246780574321747, -0.5576319098472595, -0.03007841482758522, -0.002645566128194332, -0.008238972164690495, -0.001261987374164164, -0.021007299423217773, -0.0008219677838496864, -0.0038549411110579967, -0.00353723275475204, -0.00018869050836656243, -0.003353568958118558, -0.00020549570035655051, -0.005182167049497366, -0.00016926287207752466, -0.0011320855701342225, -5.674201020156033e-05, -6.05564855504781e-05, -0.005296721588820219, -0.0006044468027539551, -0.0008559139096178114, -0.0015220972709357738, -0.010277326218783855, -0.0030709984712302685, -0.00017355366435367614, -0.003491617040708661, -0.5516633987426758, -0.0013753250241279602, -0.014825996942818165, -0.27491000294685364, -0.00599183002486825, -0.5181961059570312, -0.004846492316573858, -0.5064820647239685, -0.18799947202205658, -0.11973679065704346, -0.0004389514506328851, -0.043292656540870667, -0.0012004319578409195, -5.686121585313231e-05, -0.00022063204960431904, -3.2543604902457446e-05, -0.0005093707586638629, -5.960446742392378e-06, -0.0005545270396396518, -0.0015651845606043935, -0.0006680640508420765, -0.0001382732152706012, -0.002116346498951316, -0.0016400470631197095, -0.0028960451018065214, -0.009708214551210403, -0.00038211196078918874, -0.034935563802719116, -3.71926071238704e-05, -0.003081100294366479, -0.004115802235901356, -0.00706886313855648, -4.7205765440594405e-05, -0.0042669209651649, -0.00536075234413147, -0.00011467275908216834, -0.01114983856678009, -2.5033637939486653e-05, -0.005018850788474083, -0.0021893836092203856, -0.026853233575820923, -0.25656893849372864, -0.007249478716403246, -0.02786966972053051, -0.26791805028915405, -0.016489652916789055, -0.008703512139618397, -0.005059178452938795, -0.5910329222679138, -3.522636890411377, -0.00033158526639454067, -0.12314196676015854, -0.09889759123325348, -0.04140600562095642, -0.00017557987303007394, -2.4263641834259033, -0.012354512698948383, -1.1376553773880005, -0.1627611219882965, -0.7528077960014343, -0.01661534793674946, -0.27938225865364075, -2.3192689418792725, -0.006582245696336031, -0.016924826428294182, -0.8811889886856079, -0.022370722144842148, -0.0010369406081736088, -0.00762575538828969], "finish_reason": "stop"}], "metrics": {"energy": 354.05521567630757, "energy_per_token": 1.5460926448747054, "time": 13.551811, "time_per_token": 0.05917821397379913}}
{"outputs": [{"text": "# Split the data into training and test sets\n    train_X, test_X, train_Y, test_Y = train_test_split(X, Y, test_size=0.3)\n\n    # Construct a Keras model with one hidden layer and sigmoid activation\n    model = keras.Sequential()\n    model.add(keras.layers.Dense(\n        units=200,\n        activation='sigmoid',\n        input_shape=(X.shape[1],)\n    ))\n    model.add(keras.layers.Dense(\n        units=1,\n        activation='sigmoid',\n    ))\n\n    # Compile the model using binary cross-entropy loss and SGD optimizer\n    model.compile(loss='binary_crossentropy',\n                  optimizer='sgd',\n                  metrics=['accuracy'])\n\n    # Fit the model to the training data\n    model.fit(train_X, train_Y,\n              epochs=10,\n              batch_size=64,\n              verbose=0)\n\n    # Plot the Precision-Recall curve", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " test", " sets", "\n", "    ", "train", "_", "X", ",", " test", "_", "X", ",", " train", "_", "Y", ",", " test", "_", "Y", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n", "\n", "    ", "#", " Construct", " a", " K", "eras", " model", " with", " one", " hidden", " layer", " and", " s", "igmoid", " activation", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "        ", "units", "=", "2", "0", "0", ",", "\n", "        ", "activation", "='", "s", "igmoid", "'", ",", "\n", "        ", "input", "_", "shape", "=(", "X", ".", "shape", "[", "1", "]", ",", ")", "\n", "    ", "))", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "        ", "units", "=", "1", ",", "\n", "        ", "activation", "='", "s", "igmoid", "'", ",", "\n", "    ", "))", "\n", "\n", "    ", "#", " Com", "pile", " the", " model", " using", " binary", " cross", "-", "entropy", " loss", " and", " SGD", " optimizer", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", "\n", "                ", "  ", "optim", "izer", "='", "sg", "d", "'", ",", "\n", "                ", "  ", "metrics", "=['", "accuracy", "'])", "\n", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "model", ".", "fit", "(", "train", "_", "X", ",", " train", "_", "Y", ",", "\n", "              ", "epoch", "s", "=", "1", "0", ",", "\n", "              ", "batch", "_", "size", "=", "6", "4", ",", "\n", "              ", "verbose", "=", "0", ")", "\n", "\n", "    ", "#", " Plot", " the", " Precision", "-", "Rec", "all", " curve"], "logprobs": [-1.0307267904281616, -0.586220920085907, -0.5003767013549805, -0.170974999666214, -0.04881554841995239, -0.030990343540906906, -0.13937197625637054, -0.11968063563108444, -0.012077419087290764, -0.10638303309679031, -0.0019061268540099263, -0.8136705160140991, -0.09538963437080383, -0.556985080242157, -0.0010664734290912747, -0.0401410311460495, -5.745722592109814e-05, -0.00019691436318680644, -0.0009485750924795866, -0.00383914727717638, -3.099393507000059e-05, -0.21812504529953003, -8.21318244561553e-05, -0.001091480371542275, -3.135155202471651e-05, -0.00013863079948350787, -0.00243200920522213, -0.026020223274827003, -2.038458114839159e-05, -1.0847986231965479e-05, -9.298280929215252e-06, -5.495397272170521e-05, -0.00032217081752605736, -0.07070880383253098, -0.0005501187406480312, -0.004867015406489372, -0.011624223552644253, -0.07592474669218063, -4.768370445162873e-07, -0.00013195598148740828, -0.002362200990319252, -0.014009351842105389, -7.92710343375802e-05, -0.011050689965486526, -1.6769025325775146, -0.008505547419190407, -0.10854806005954742, -0.00045658653834834695, -0.007642317563295364, -1.4289536476135254, -0.27633869647979736, -0.12267579138278961, -6.544376083184034e-05, -2.1788394451141357, -0.052790265530347824, -0.5344957113265991, -0.006395113188773394, -0.20826296508312225, -0.4095514416694641, -0.04527898132801056, -4.446407547220588e-05, -0.0049840970896184444, -0.028693612664937973, -0.0011162485461682081, -0.04263351485133171, -0.0029916076455265284, -0.10117367655038834, -2.312633478140924e-05, -0.00010466027742950246, -0.37477657198905945, -3.2186455882765586e-06, -1.5497195136049413e-06, -2.078841209411621, -0.0029943413101136684, -0.0033400245010852814, -0.009994227439165115, -0.00010430268594063818, -5.638440416078083e-05, -4.827859811484814e-05, -0.017582502216100693, -9.298280929215252e-06, -0.002619527978822589, -5.722029527532868e-06, -0.005891813430935144, -8.880697714630514e-05, -0.00016473367577418685, -2.5614609718322754, -0.05381661280989647, -0.5513524413108826, -0.023721463978290558, -2.2859716415405273, -1.7213634252548218, -2.3511099815368652, -0.018653331324458122, -0.8514655828475952, -0.0006233894382603467, -0.5328571200370789, -0.5420699119567871, -0.015558412298560143, -1.3470558769768104e-05, -0.00930839218199253, -0.020013656467199326, -0.007136804983019829, -0.02439551055431366, -0.08772701025009155, -0.0001232548092957586, -0.14775660634040833, -0.4253823161125183, -0.9498152732849121, -0.017947886139154434, -0.007528741378337145, -0.04167554900050163, -0.0036373662296682596, -0.015505243092775345, -0.010729245841503143, -0.35569024085998535, -0.5656887292861938, -0.15029238164424896, -0.001975491177290678, -0.010119088925421238, -0.10980581492185593, -0.009993755258619785, -0.00010191874753218144, -0.1294001340866089, -9.643566590966657e-05, -0.004597569350153208, -0.00020787939138244838, -0.00032669928623363376, -4.410734163684538e-06, -0.026272347196936607, -0.0005559567362070084, -0.0003357561945449561, -0.4295697808265686, -0.00139318173751235, -0.007391959894448519, -0.001401276676915586, -0.2597518861293793, -0.22828008234500885, -0.018261753022670746, -0.018028439953923225, -0.0433119498193264, -0.10894165188074112, -0.014349251054227352, -1.1801649634435307e-05, -0.024199465289711952, -1.0525965690612793, -0.0033001031260937452, -0.4345296323299408, -0.0006416169344447553, -0.00077622797107324, -0.12835019826889038, -9.119095193454996e-05, -0.005536223296076059, -0.011902385391294956, -5.23315102327615e-05, -0.05654209107160568, -0.0010564705589786172, -0.7575820088386536, -0.04099772125482559, -0.0036585084162652493, -0.037404753267765045, -0.00016449528629891574, -0.05005067214369774, -0.019287537783384323, -0.040656689554452896, -0.007840690203011036, -0.00580280926078558, -0.0006578188622370362, -0.012293047271668911, -0.00014649749209638685, -0.00032669928623363376, -0.0006038511055521667, -1.3101930618286133, -0.11141759902238846, -0.025950532406568527, -0.0005427317810244858, -0.00026663561584427953, -6.0794889577664435e-05, -0.0003358753747306764, -0.0010900514898821712, -1.4528820514678955, -0.01756364479660988, -0.02658686228096485, -0.025017600506544113, -1.7165990357170813e-05, -0.20913386344909668, -0.30807390809059143, -0.00018916724366135895, -0.38380953669548035, -0.017897184938192368, -0.03977622091770172, -0.0033964586909860373, -0.0018400895642116666, -0.0146801071241498, -0.08635422587394714, -0.12014979869127274, -0.12912002205848694, -0.0026628058403730392, -0.016057809814810753, -0.00019798702851403505, -0.0032421189825981855, -0.052084967494010925, -0.0013868723763152957, -0.0005371319712139666, -0.019456373527646065, -0.020150357857346535, -0.011246265843510628, -0.008882060647010803, -0.7827792167663574, -0.00021228920377325267, -0.13558794558048248, -0.0007899263291619718, -0.0003405229654163122, -0.00011050090688513592, -0.22665244340896606, -0.00013779645087197423, -0.0003022690652869642, -0.0004680253332480788, -0.024543944746255875, -4.0531076592742465e-06, -0.00020668754586949944, -0.02737683244049549, -1.731877326965332, -0.016227073967456818, -0.4641418159008026, -1.6689286894688848e-06, -0.0013904437655583024, -0.7764158844947815, -0.14513005316257477, -0.8920217156410217, -0.15185029804706573, -0.00038914260221645236, -0.7832918167114258, -5.173549288883805e-05, -7.390948667307384e-06, -0.00035291642416268587, -3.056713819503784, -0.01870855689048767, -0.025062359869480133, -0.007292082998901606, -0.0007980260998010635, -0.04490943253040314, -0.0008203001925721765, -0.2847227454185486, -0.7489061951637268, -0.009747526608407497, -0.01796802505850792, -0.000579546787776053, -0.011479044333100319, -0.21547241508960724, -0.006187331397086382, -0.11299431324005127, -0.003021796001121402, -0.0009944260818883777, -3.099436753473128e-06, -0.022403012961149216], "finish_reason": "length"}], "metrics": {"energy": 383.68482127952586, "energy_per_token": 1.498768833123148, "time": 16.007328, "time_per_token": 0.062528625}}
{"outputs": [{"text": "X_train, X_test, y_train, y_test = train_test_split(\n        X, Y, test_size=0.3, shuffle=True, random_state=0\n    )\n    model = keras.models.Sequential(\n        [\n            keras.layers.Dense(\n                input_dim=X.shape[1], activation=\"sigmoid\", kernel_initializer=\"glorot_normal\"\n            )\n        ]\n    )\n    model.compile(loss=\"binary_crossentropy\", optimizer=\"sgd\")\n    model.fit(\n        X=X_train,\n        y=y_train,\n        epochs=10,\n        verbose=0,\n        steps_per_epoch=100,\n    )\n    pr_vals, recall, precision, step = precision_recall_curve(\n        y_true=y_test,\n        y_score=model.predict(X_test),\n        pos_label=1,\n    )\n    pr = {\"recall\": recall, \"precision\":", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n", "        ", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " shuffle", "=", "True", ",", " random", "_", "state", "=", "0", "\n", "    ", ")", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "(", "\n", "        ", "[", "\n", "            ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "                ", "input", "_", "dim", "=", "X", ".", "shape", "[", "1", "]", ",", " activation", "=", "\"", "s", "igmoid", "\"", ",", " kernel", "_", "initial", "izer", "=", "\"", "gl", "or", "ot", "_", "normal", "\"", "\n", "            ", ")", "\n", "        ", "]", "\n", "    ", ")", "\n", "    ", "model", ".", "compile", "(", "loss", "=", "\"", "binary", "_", "cross", "entropy", "\"", ",", " optimizer", "=", "\"", "sg", "d", "\"", ")", "\n", "    ", "model", ".", "fit", "(", "\n", "        ", "X", "=", "X", "_", "train", ",", "\n", "        ", "y", "=", "y", "_", "train", ",", "\n", "        ", "epoch", "s", "=", "1", "0", ",", "\n", "        ", "verbose", "=", "0", ",", "\n", "        ", "steps", "_", "per", "_", "epoch", "=", "1", "0", "0", ",", "\n", "    ", ")", "\n", "    ", "pr", "_", "vals", ",", " recall", ",", " precision", ",", " step", " =", " precision", "_", "re", "call", "_", "curve", "(", "\n", "        ", "y", "_", "true", "=", "y", "_", "test", ",", "\n", "        ", "y", "_", "score", "=", "model", ".", "predict", "(", "X", "_", "test", ")", ",", "\n", "        ", "pos", "_", "label", "=", "1", ",", "\n", "    ", ")", "\n", "    ", "pr", " =", " ", "{\"", "re", "call", "\":", " recall", ",", " \"", "precision", "\":"], "logprobs": [-1.9178804159164429, -0.18239401280879974, -0.015254615806043148, -0.0028559870552271605, -0.006576087325811386, -0.00020787939138244838, -0.011799070052802563, -0.0006547214579768479, -0.5821258425712585, -0.00023862851958256215, -0.0006984416977502406, -0.00020180096908006817, -0.005394663196057081, -4.541770613286644e-05, -0.000679500459227711, -0.005385770462453365, -0.021121805533766747, -1.2516897186287679e-05, -9.417489309271332e-06, -9.536738616588991e-07, -2.372236667724792e-05, -0.0007659838884137571, -2.3257806301116943, -0.03205119073390961, -0.005977610591799021, -0.0031764074228703976, -0.26478537917137146, -0.004287812393158674, -0.11286111176013947, -3.814689989667386e-06, -3.5523738915799186e-05, -0.008172878064215183, -0.021680260077118874, -6.532455881824717e-05, -0.009977467358112335, -0.09744112193584442, -2.340593099594116, -0.002119558397680521, -0.047375068068504333, -0.3681313097476959, -0.05984634533524513, -9.775113539944869e-06, -1.4662635294371285e-05, -0.0013823487097397447, -2.6192753314971924, -0.7470222115516663, -0.0029206499457359314, -0.00047350639943033457, -0.023491401225328445, -0.4830071032047272, -0.19168029725551605, -0.008940309286117554, -0.05834779888391495, -0.00013851160474587232, -0.0002450642641633749, -0.35315603017807007, -0.00010942813969450071, -7.045020902296528e-05, -1.6689286894688848e-06, -5.483612312673358e-06, -1.775962233543396, -0.006914852187037468, -0.004041955806314945, -0.017852922901511192, -0.20081669092178345, -0.0007267932523973286, -0.014869454316794872, -1.537788011773955e-05, -0.0006584145012311637, -2.0503786799963564e-05, -0.014812959358096123, -9.583967766957358e-05, -6.258291978156194e-05, -0.14652150869369507, -0.0006401873542927206, -1.8642098903656006, -0.0007073761080391705, -0.46627146005630493, -0.07347343116998672, -0.260123610496521, -0.3566584587097168, -0.017239248380064964, -0.015440802089869976, -0.004476526286453009, -0.001763337990269065, -0.01574888452887535, -1.2813715934753418, -0.010408051311969757, -0.02089686505496502, -0.004531946964561939, -9.536697689327411e-06, -5.447716102935374e-05, -0.2665954530239105, -0.20812076330184937, -1.5258672647178173e-05, -0.05413048714399338, -1.645074735279195e-05, -0.003275032388046384, -0.004374696407467127, -1.3782083988189697, -1.4543427823809907e-05, -6.83045873302035e-05, -0.005167817231267691, -1.3299736976623535, -9.333651541965082e-05, -0.12935739755630493, -0.0023749261163175106, -0.000764673575758934, -0.6414890885353088, -0.003836772171780467, -0.00025090406415984035, -0.00945353228598833, -0.0009806115413084626, -0.00012051333033014089, -0.0030418813694268465, -0.05499435216188431, -0.007865764200687408, -0.0001230164198204875, -0.002408938482403755, -8.427741704508662e-05, -1.2243937253952026, -0.003428773023188114, -0.046651262789964676, -0.019860457628965378, -0.0009531007381156087, -0.00016008525562938303, -0.00019167017308063805, -5.721882189391181e-05, -3.71926071238704e-05, -0.01661030575633049, -0.00036483307485468686, -0.053271979093551636, -0.2942705750465393, -0.00019035911827813834, -5.578839045483619e-05, -0.1444922387599945, -0.003965729381889105, -0.021952258422970772, -0.11457110196352005, -0.000666277133859694, -0.0014457975048571825, -6.758938252460212e-05, -2.215526580810547, -0.0003131137927994132, -0.09543947875499725, -2.536297082901001, -0.005250118672847748, -0.00310035259462893, -5.4596363042946905e-05, -0.0026848006527870893, -0.0777859315276146, -4.029192859889008e-05, -0.18362846970558167, -0.00014554394874721766, -0.0028423171024769545, -6.758938252460212e-05, -1.6927575416048057e-05, -0.0004976941272616386, -0.002002259949222207, -0.000481132126878947, -0.48421770334243774, -3.4570634852570947e-06, -0.0005905076395720243, -0.5825833082199097, -0.1663908064365387, -0.6537986993789673, -0.009498994797468185, -0.001711214892566204, -0.3431180715560913, -0.0005097282119095325, -0.27127763628959656, -0.010070822201669216, -0.00965060107409954, -0.46435320377349854, -3.1013646125793457, -2.372236667724792e-05, -2.8967437174287625e-05, -1.0728830375228426e-06, -0.0013087764382362366, -0.02550346590578556, -1.474567174911499, -0.5178062915802002, -0.6591150164604187, -0.3198898136615753, -0.007661955431103706, -0.5334312319755554, -0.00018451895448379219, -0.0031909046228975058, -0.09065204858779907, -2.962507724761963, -0.07455789297819138, -3.572826862335205, -0.0531163327395916, -1.8225401639938354, -0.2482554167509079, -2.1294822692871094, -0.777827799320221, -2.3682680130004883, -0.07822643965482712, -0.007992429658770561, -6.9141146923357155e-06, -7.986990567587782e-06, -6.580135959666222e-05, -7.152555099310121e-07, -5.006777428206988e-06, -8.451581379631534e-05, -0.2263515144586563, -0.00028451209072954953, -0.05856885761022568, -0.01086451020091772, -0.39752277731895447, -0.0016356435371562839, -0.007282852195203304, -0.0001984637783607468, -0.001358896610327065, -0.004929294344037771, -0.8596788048744202, -5.364274329622276e-05, -0.5652746558189392, -6.794906312279636e-06, -0.0061003677546978, -0.0019518149783834815, -0.017975518479943275, -0.00102324562612921, -0.0004520586517173797, -0.005642795003950596, -0.060990989208221436, -0.051770105957984924, -0.00014840454969089478, -0.0279560349881649, -0.12582169473171234, -0.007091234438121319, -0.09651825577020645, -0.19183579087257385, -0.00886516459286213, -0.0006630606367252767, -0.0022691949270665646, -0.056066907942295074, -0.05863001570105553, -0.006248936057090759, -1.165656328201294, -0.00010024998482549563, -0.0038545848801732063, -0.10992800444364548, -1.5066707134246826, -1.920496940612793, -3.5758724212646484, -0.13252675533294678, -1.5924474000930786, -0.014073414728045464, -0.009024782106280327, -0.0047366321086883545, -0.04104040190577507, -0.0005407063290476799, -0.06288720667362213, -0.0017590539064258337], "finish_reason": "length"}], "metrics": {"energy": 401.08820996093755, "energy_per_token": 1.5667508201599123, "time": 15.768912, "time_per_token": 0.0615973125}}
{"outputs": [{"text": "# Split data into training and test sets\n    X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    # Create Keras model with one hidden layer\n    model = Sequential([Dense(1, activation='sigmoid'), Dense(1)])\n\n    # Compile model\n    model.compile(loss='binary_crossentropy', optimizer='sgd')\n\n    # Fit model to training data\n    history = model.fit(X_train, y_train, epochs=10, verbose=0)\n\n    # Plot precision-recall curve\n    precision, recall, thresholds = precision_recall_curve(y_test, model.predict(X_test))\n    ax = plt.plot(recall, precision, color='#1f77b4', label='Precision-Recall Curve')\n    ax.set_xlabel('Recall')\n    ax.set_ylabel('Precision')\n    ax.set_title('Precision-Recall Curve')", "tokens": ["#", " Split", " data", " into", " training", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " K", "eras", " model", " with", " one", " hidden", " layer", "\n", "    ", "model", " =", " Sequ", "ential", "([", "D", "ense", "(", "1", ",", " activation", "='", "s", "igmoid", "')", ",", " D", "ense", "(", "1", ")]", ")", "\n", "\n", "    ", "#", " Com", "pile", " model", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n", "\n", "    ", "#", " Fit", " model", " to", " training", " data", "\n", "    ", "history", " =", " model", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "#", " Plot", " precision", "-", "re", "call", " curve", "\n", "    ", "precision", ",", " recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "\n", "    ", "ax", " =", " plt", ".", "plot", "(", "re", "call", ",", " precision", ",", " color", "='", "#", "1", "f", "7", "7", "b", "4", "'", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Rec", "all", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Prec", "ision", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')"], "logprobs": [-1.0307267904281616, -0.586220920085907, -1.594315528869629, -0.16402235627174377, -0.08718688786029816, -0.15528449416160583, -0.18309883773326874, -0.030984219163656235, -0.06741434335708618, -0.001737395767122507, -0.6845205426216125, -0.00851074792444706, -0.0017360866768285632, -0.0004670721245929599, -0.0015285247936844826, -4.589452510117553e-05, -0.0012916326522827148, -0.0002618685248307884, -0.9987916946411133, -0.0001072826053132303, -0.00010930894495686516, -5.054346183896996e-05, -0.004177178256213665, -1.2397689715726301e-05, -0.00010525626566959545, -0.0008818790083751082, -0.01353609748184681, -3.6954811548639555e-06, -4.768360213347478e-06, -3.576278118089249e-07, -2.0861407392658293e-05, -0.00026520551182329655, -0.08763451874256134, -0.0007601470570079982, -0.023767096921801567, -0.00998761784285307, -0.047261595726013184, -1.1920922133867862e-06, -3.158996332786046e-05, -0.0024943212047219276, -0.008755862712860107, -3.8980677345534787e-05, -0.00723267300054431, -0.15788760781288147, -0.05265071615576744, -1.7881377516459906e-06, -4.768360213347478e-06, -0.0011642351746559143, -0.10219527035951614, -0.015008270740509033, -0.10059851408004761, -0.0020284331403672695, -0.08639097213745117, -0.0004621868138201535, -0.006324988789856434, -0.9312954545021057, -1.3495560884475708, -8.666139910928905e-05, -0.17553648352622986, -0.2533816695213318, -0.36991435289382935, -0.011857503093779087, -0.17708255350589752, -1.218902349472046, -0.0010719512356445193, -0.018674509599804878, -0.0025953915901482105, -1.9923772811889648, -1.883488948806189e-05, -0.5095804929733276, -2.806015729904175, -0.00018737945356406271, -0.0013548490824177861, -0.8486267924308777, -0.7835932970046997, -0.31303250789642334, -0.14143629372119904, -0.0010804060148075223, -1.168244216387393e-05, -0.5414606332778931, -1.2236452102661133, -0.2871021330356598, -8.546940807718784e-05, -0.007705488707870245, -0.02188088372349739, -0.2777193784713745, -0.0008056493825279176, -0.018000809475779533, -0.10275059193372726, -0.00011014331539627165, -0.0027948864735662937, -0.019615596160292625, -2.8132995794294402e-05, -0.2441895604133606, -1.4927266836166382, -0.00034898388548754156, -0.006889516953378916, -6.890059739816934e-05, -0.0002479245886206627, -0.0006226746481843293, -0.5175473093986511, -0.031096085906028748, -0.011353174224495888, -0.00039617318543605506, -0.00016151554882526398, -5.8530047681415454e-05, -0.00016473367577418685, -0.0031431340612471104, -0.01667654700577259, -0.025055965408682823, -0.49140480160713196, -0.0001445904199499637, -0.028578925877809525, -0.001209600013680756, -0.009899921715259552, -0.00011312322021694854, -0.001209957292303443, -0.05591699108481407, -0.05670846998691559, -0.1376505196094513, -0.07485736161470413, -0.005842157173901796, -0.0530194491147995, -0.0002563863235991448, -2.779560089111328, -0.0011868583969771862, -0.000947503256611526, -7.986990567587782e-06, -0.0002584123576525599, -5.090107151772827e-05, -0.018595412373542786, -0.0038498349022120237, -1.537788011773955e-05, -0.001004786929115653, -0.005576411262154579, -0.00023100091493688524, -6.318072337307967e-06, -0.00816507451236248, -0.3006322681903839, -0.00039176418795250356, -0.5427607893943787, -0.08836757391691208, -0.5296092629432678, -0.16091224551200867, -0.0004898302140645683, -0.11127287894487381, -0.08694539964199066, -0.007026604376733303, -0.014886249788105488, -0.00034850722295232117, -0.00367216719314456, -0.3337627649307251, -1.6582584381103516, -0.04836473613977432, -0.00023636408150196075, -0.000284154579276219, -0.025729231536388397, -0.31728747487068176, -0.0005353448214009404, -0.24823588132858276, -0.018242554739117622, -0.0024073924869298935, -0.00032669928623363376, -0.4218951165676117, -0.002691933885216713, -0.0021510813385248184, -1.1920928244535389e-07, -1.3232143828645349e-05, -0.000745018885936588, -3.576278118089249e-07, -1.0251946150674485e-05, -5.6265202147187665e-05, -0.023171136155724525, -0.00011062010162277147, -0.002687772735953331, -0.005473270546644926, -0.04468521848320961, -0.00027044929447583854, -0.00025602878304198384, -0.0028092702850699425, -0.00024732868769206107, -5.745722592109814e-05, -8.892617915989831e-05, -0.26840096712112427, -0.0022011594846844673, -0.14071927964687347, -0.40791797637939453, -0.026901740580797195, -0.030888289213180542, -0.00028427375946193933, -0.4214339256286621, -0.01415545679628849, -0.01230317447334528, -0.0005112771177664399, -0.005482636857777834, -0.0009098681039176881, -0.6330441236495972, -0.871290922164917, -0.03706444799900055, -3.0253353118896484, -1.7535524368286133, -0.5271821618080139, -0.0014174662064760923, -0.004655119031667709, -0.0026745761279016733, -3.4570634852570947e-06, -0.11418332904577255, -5.98412734689191e-05, -1.0485082864761353, -0.04249688237905502, -0.8029565215110779, -0.0006760457181371748, -0.037733811885118484, -0.010730896145105362, -0.00032908268622122705, -0.2523266673088074, -7.724463648628443e-05, -0.017454000189900398, -0.011876468546688557, -0.5490431785583496, -0.21965178847312927, -0.3153572082519531, -0.06939619779586792, -0.11216998845338821, -0.8161349892616272, -0.025650223717093468, -0.00670540239661932, -7.521823135903105e-05, -0.011797303333878517, -0.004138121381402016, -0.00012289722508285195, -7.283422019099817e-05, -0.0001705739414319396, -0.0002060916303889826, -1.883488948806189e-05, -0.0007389436941593885, -0.0005104430601932108, -0.00029225845355540514, -1.5020257706055418e-05, -0.0012321030953899026, -0.005091794766485691, -0.0025079960469156504, -0.002644139574840665, -0.002064598724246025, -0.007982022128999233, -7.843663479434326e-05, -0.0017782127251848578, -0.003864916041493416, -0.002681828336790204, -6.318072337307967e-06, -0.0012388896429911256, -0.004372559953480959, -0.0007169060409069061, -0.0012656782055273652, -0.00010215714428341016, -0.0015739921946078539], "finish_reason": "length"}], "metrics": {"energy": 390.53040649223306, "energy_per_token": 1.5255094003602854, "time": 15.761239, "time_per_token": 0.06156733984375}}
{"outputs": [{"text": "# Split the data into training and testing sets\n    train_size = 0.7\n    train_data, test_data, train_labels, test_labels = train_test_split(\n        X, Y, test_size=train_size, random_state=42)\n\n    # Create a Keras Sequential model with one hidden layer\n    model = keras.Sequential(\n        [\n            keras.layers.Dense(32, activation='relu', input_shape=(2,)),\n            keras.layers.Dense(1)\n        ]\n    )\n\n    # Compile the model with a binary cross-entropy loss and SGD optimizer\n    model.compile(\n        optimizer=keras.optimizers.SGD(lr=1e-1),\n        loss=keras.losses.BinaryCrossentropy(from_logits=True),\n        metrics=[\"acc\"],\n    )\n\n    # Fit the model to the training data\n    model.fit(train_data, train_labels, epochs=5, verbose=0)\n\n    # Compute the Precision-Recall", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " testing", " sets", "\n", "    ", "train", "_", "size", " =", " ", "0", ".", "7", "\n", "    ", "train", "_", "data", ",", " test", "_", "data", ",", " train", "_", "labels", ",", " test", "_", "labels", " =", " train", "_", "test", "_", "split", "(", "\n", "        ", "X", ",", " Y", ",", " test", "_", "size", "=", "train", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " a", " K", "eras", " Sequ", "ential", " model", " with", " one", " hidden", " layer", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "(", "\n", "        ", "[", "\n", "            ", "keras", ".", "layers", ".", "D", "ense", "(", "3", "2", ",", " activation", "='", "relu", "'", ",", " input", "_", "shape", "=(", "2", ",", "))", ",", "\n", "            ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ")", "\n", "        ", "]", "\n", "    ", ")", "\n", "\n", "    ", "#", " Com", "pile", " the", " model", " with", " a", " binary", " cross", "-", "entropy", " loss", " and", " SGD", " optimizer", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "1", "e", "-", "1", ")", ",", "\n", "        ", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "(", "from", "_", "log", "its", "=", "True", ")", ",", "\n", "        ", "metrics", "=[", "\"", "acc", "\"", "]", ",", "\n", "    ", ")", "\n", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "model", ".", "fit", "(", "train", "_", "data", ",", " train", "_", "labels", ",", " epochs", "=", "5", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "#", " Compute", " the", " Precision", "-", "Rec", "all"], "logprobs": [-1.0307267904281616, -0.586220920085907, -0.5003767013549805, -0.170974999666214, -0.04881554841995239, -0.030990343540906906, -0.13937197625637054, -2.277263879776001, -0.021188916638493538, -0.12702307105064392, -0.0017933252966031432, -0.8827561736106873, -0.10086464136838913, -2.318657636642456, -0.027757208794355392, -0.05606510490179062, -0.044873300939798355, -1.645074735279195e-05, -0.019611621275544167, -0.21496456861495972, -0.013916716910898685, -1.9329307079315186, -0.2983637750148773, -1.9859408140182495, -0.006288502831012011, -0.0221457127481699, -8.630380034446716e-05, -9.953480184776708e-05, -0.7700406908988953, -0.17116346955299377, -0.0001411338453181088, -0.2829776406288147, -0.00020418466010596603, -0.0014647241914644837, -3.9934315282152966e-05, -0.0026895562186837196, -0.007508272770792246, -0.04218459129333496, -3.5523738915799186e-05, -1.5735502529423684e-05, -1.0251946150674485e-05, -6.294052582234144e-05, -0.00030071981018409133, -1.6681663990020752, -0.013746591284871101, -0.010432353243231773, -0.0011036264477297664, -0.05755086615681648, -0.0021673778537660837, -0.19049979746341705, -1.311301275563892e-06, -0.00016473367577418685, -0.003508960595354438, -0.42736321687698364, -3.516612196108326e-05, -0.00012063252506777644, -0.11576971411705017, -0.13486818969249725, -2.3841855067985307e-07, -6.794906312279636e-06, -0.0005828827270306647, -0.193877175450325, -0.013809730298817158, -1.5163054466247559, -0.004910788964480162, -0.14444798231124878, -0.000493762141559273, -0.01832566037774086, -0.8944288492202759, -0.3259396553039551, -0.32957273721694946, -6.031808152329177e-05, -0.43095681071281433, -4.8874615458771586e-05, -0.0008555566309951246, -0.029629141092300415, -0.38132327795028687, -0.00787345226854086, -0.3073709309101105, -0.7899044752120972, -0.0012694880133494735, -0.03755483031272888, -0.0019221893744543195, -0.1267216056585312, -2.276871418871451e-05, -6.19869097135961e-05, -0.3072269856929779, -1.4305104514278355e-06, -1.1920858014491387e-05, -2.8172688484191895, -0.0031847255304455757, -0.011203593574464321, -0.005565623752772808, -0.15617042779922485, -0.005375336389988661, -0.01404990628361702, -1.0371154530730564e-05, -0.0033069944474846125, -1.3112935448589269e-05, -0.06344643235206604, -0.00011622230522334576, -3.325883881188929e-05, -3.2780075073242188, -0.14148016273975372, -0.004323065280914307, -0.6223592758178711, -0.7941288948059082, -1.746979832649231, -0.13270476460456848, -0.000996212475001812, -0.03518395498394966, -2.3841830625315197e-06, -0.08821806311607361, -0.18557725846767426, -0.7527260184288025, -0.06719490140676498, -0.036118607968091965, -0.003564434824511409, -0.02471933886408806, -0.00863614957779646, -0.0021961636375635862, -0.0001411338453181088, -0.00038068200228735805, -2.50339189733495e-06, -0.0410083644092083, -0.0003054867556784302, -6.151010165922344e-05, -0.15036797523498535, -1.0450513362884521, -0.3060961067676544, -0.002046397188678384, -0.08446577191352844, -0.007795506622642279, -0.0036412859335541725, -0.0002579356369096786, -0.0003369478799868375, -0.025156641378998756, -0.00020346954988781363, -0.007475261576473713, -0.007622679229825735, -2.5152843591058627e-05, -0.10706445574760437, -0.0007202415145002306, -1.517029047012329, -2.6537811756134033, -0.6353104114532471, -0.06404805928468704, -0.03825679421424866, -0.00012003655137959868, -0.0015775627689436078, -0.11430349200963974, -0.1030108705163002, -0.002938241232186556, -0.0029917266219854355, -0.0003960540343541652, -0.01503316592425108, -4.9232225137529895e-05, -0.0003591130953282118, -0.0002980979916173965, -0.8454491496086121, -0.006791484542191029, -0.6991492509841919, -6.556489552167477e-06, -0.4839361011981964, -0.046529512852430344, -2.169585604860913e-05, -0.00028832571115344763, -0.032300181686878204, -6.246371776796877e-05, -0.02125275507569313, -0.0005604841862805188, -0.1607394963502884, -1.7570668458938599, -0.002859909785911441, -2.81404709815979, -0.11902374029159546, -0.00011455356434453279, -2.9956438541412354, -0.07968351244926453, -0.0003057250869460404, -0.03868041932582855, -0.00021562635083682835, -0.0034824698232114315, -0.9597220420837402, -0.03559622913599014, -0.00017832119192462415, -0.0054380581714212894, -1.1920928244535389e-07, -2.1934269170742482e-05, -0.37644532322883606, -0.00015269544383045286, -0.011184261180460453, -0.3312358856201172, -0.004741615150123835, -4.2914423829643056e-05, -0.0006659197388216853, -0.0002637753786984831, -0.0009563163621351123, -0.07578705996274948, -0.0028427925426512957, -0.020750224590301514, -0.0023016647901386023, -0.16432644426822662, -0.00452672503888607, -0.741820752620697, -1.1459118127822876, -2.497504234313965, -0.00015472168161068112, -0.21192149817943573, -0.6504676938056946, -0.06819399446249008, -0.09339039027690887, -0.00012206286191940308, -0.00022373080719262362, -0.008203265257179737, -0.0001951265730895102, -0.0022527810651808977, -0.08680704236030579, -0.0007879013428464532, -0.0006393534131348133, -0.04045293107628822, -0.014337735250592232, -0.010507498867809772, -0.006609246600419283, -0.27108049392700195, -0.00030012393835932016, -0.4173746705055237, -0.0007216709782369435, -0.0006729483720846474, -4.005352093372494e-05, -0.29655948281288147, -0.00024768622824922204, -0.00010263393050990999, -0.00027855331427417696, -0.009713172912597656, -5.602820692729438e-06, -0.00020180096908006817, -0.008722420781850815, -0.3541676700115204, -0.00035565727739594877, -1.4647502899169922, -0.2118772268295288, -0.11246191710233688, -0.0008091036579571664, -0.2828611135482788, -0.157038152217865, -0.0037760876584798098, -0.012636120431125164, -0.0005778788472525775, -0.006968480534851551, -2.9363443851470947, -0.17031818628311157, -0.5171262621879578, -0.032389283180236816, -0.001999523490667343, -4.768360213347478e-06], "finish_reason": "length"}], "metrics": {"energy": 386.5467292289728, "energy_per_token": 1.509948161050675, "time": 15.970542, "time_per_token": 0.0623849296875}}
{"outputs": [{"text": "pass\n\nclass TestTaskFunc(unittest.TestCase):\n    def test_task_func(self):\n        X = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])\n        Y = np.array([[0], [1], [1], [0]])\n        model, ax = task_func(X, Y)\n        self.assertTrue(isinstance(model, keras.Model))\n        self.assertTrue(isinstance(ax, plt.Axes))", "tokens": ["pass", "\n", "\n", "class", " Test", "Task", "Func", "(", "un", "ittest", ".", "TestCase", "):", "\n", "    ", "def", " test", "_", "task", "_", "func", "(", "self", "):", "\n", "        ", "X", " =", " np", ".", "array", "([", "[", "0", ",", " ", "0", "]", ",", " [", "0", ",", " ", "1", "]", ",", " [", "1", ",", " ", "0", "]", ",", " [", "1", ",", " ", "1", "]]", ")", "\n", "        ", "Y", " =", " np", ".", "array", "([", "[", "0", "]", ",", " [", "1", "]", ",", " [", "1", "]", ",", " [", "0", "]]", ")", "\n", "        ", "model", ",", " ax", " =", " task", "_", "func", "(", "X", ",", " Y", ")", "\n", "        ", "self", ".", "assertTrue", "(", "is", "instance", "(", "model", ",", " k", "eras", ".", "Model", "))", "\n", "        ", "self", ".", "assertTrue", "(", "is", "instance", "(", "ax", ",", " plt", ".", "Ax", "es", "))", "\n", "\n", "def"], "logprobs": [-3.052529811859131, -0.3337979316711426, -0.060409627854824066, -2.8989152908325195, -0.842115581035614, -0.46561598777770996, -0.2892771065235138, -0.03122793138027191, -0.08257056027650833, -2.861018856492592e-06, -0.0002829628065228462, -0.00018904806347563863, -0.0005349873681552708, -0.0021701136138290167, -0.11744283139705658, -0.17832747101783752, -0.07943624258041382, -0.01075554545968771, -0.3622343838214874, -0.008670658804476261, -0.01250415574759245, -0.26694628596305847, -0.0001656871900195256, -0.006921008694916964, -0.003369132988154888, -0.0054343827068805695, -0.323524534702301, -0.037110164761543274, -0.018173491582274437, -0.0004413345886860043, -0.05006756633520126, -0.008339699357748032, -0.043919987976551056, -0.0325869619846344, -0.019408905878663063, -0.0025505651719868183, -0.006396534387022257, -0.01549456175416708, -7.748573807475623e-06, -0.003818840254098177, -0.004579057916998863, -0.00010787858627736568, -9.262132516596466e-05, -0.0010849310783669353, -0.00097977789118886, -7.152531907195225e-06, -0.0001821352052502334, -0.0010324153117835522, -8.21318244561553e-05, -7.879423355916515e-05, -0.0006160030607134104, -0.001057304092682898, -2.622600959512056e-06, -0.00021681819634977728, -0.0005144941387698054, -1.9073304429184645e-05, -0.00013731967192143202, -0.0005436849314719439, -0.006757028866559267, -0.005394426174461842, -0.004070568829774857, -0.00011264643399044871, -0.015402416698634624, -0.0001961992384167388, -0.00022825974156148732, -0.00031859567388892174, -0.00031573555315844715, -0.0003756771038752049, -0.0006517431465908885, -0.0026198846753686666, -0.004173735622316599, -7.271740287251305e-06, -0.0003815161471720785, -0.0008440031087957323, -2.396077979938127e-05, -8.344646857949556e-07, -6.16293036728166e-05, -0.0006984416977502406, -5.090107151772827e-05, -1.7881377516459906e-06, -9.321732068201527e-05, -0.00029762129997834563, -3.886147169396281e-05, -0.0001879753835964948, -0.0009513143450021744, -0.2541431486606598, -0.07029587030410767, -0.016320902854204178, -0.017281077802181244, -0.0017748808022588491, -0.006601075176149607, -6.103329360485077e-05, -1.6212332411669195e-05, -0.0002811751910485327, -0.0003591130953282118, -0.00017295771976932883, -0.0007773000397719443, -0.00034362133010290563, -0.005309527739882469, -0.17981337010860443, -0.1562560796737671, -1.5497195136049413e-06, -0.6972519159317017, -0.001500552985817194, -0.034640707075595856, -7.915183232398704e-05, -2.098061486321967e-05, -0.004466676153242588, -0.0006177900941111147, -0.1452719122171402, -2.455681169521995e-05, -0.00011062010162277147, -2.508734703063965, -0.006485959514975548, -0.0031355286482721567, -0.0021266955882310867, -0.0034155859611928463, -6.437280717364047e-06, -0.01648343913257122, -0.00013374387344811112, -0.006623575929552317, -5.566918844124302e-05, -2.1576648578047752e-05, -0.0038805908989161253, -0.00017236177518498152, -0.01683926023542881, -9.65590606938349e-06, -0.0132733304053545, -1.883488948806189e-05, -0.0013950864085927606, -0.01782013475894928, -0.5658134818077087, -2.998607635498047], "finish_reason": "stop"}], "metrics": {"energy": 183.6034447202682, "energy_per_token": 1.3804770279719412, "time": 7.9888506, "time_per_token": 0.060066545864661654}}
{"outputs": [{"text": "# TODO\n    return None, None", "tokens": ["#", " TODO", "\n", "    ", "return", " None", ",", " None", "\n", "\n", "if"], "logprobs": [-1.0307267904281616, -3.168855905532837, -1.972812533378601, -0.232339009642601, -1.4129992723464966, -0.8314487934112549, -0.07779199630022049, -0.028501419350504875, -0.3549804091453552, -0.018355155363678932, -1.35595703125], "finish_reason": "stop"}], "metrics": {"energy": 4.228100864410401, "energy_per_token": 0.38437280585549094, "time": 0.21963483, "time_per_token": 0.019966802727272727}}
{"outputs": [{"text": "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)\n    model = keras.models.Sequential()\n    model.add(keras.layers.Dense(1, input_shape=X.shape[1], activation='sigmoid'))\n    model.compile(loss='binary_crossentropy', optimizer='sgd')\n    model.fit(X_train, Y_train, verbose=0)\n    precision, recall, _ = precision_recall_curve(Y_test, model.predict(X_test))\n    precision = np.concatenate(([0], precision, [1]))\n    recall = np.concatenate(([0], recall, [1]))\n    ax = plt.plot(recall, precision, 'r-')\n    return model, ax", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " input", "_", "shape", "=", "X", ".", "shape", "[", "1", "]", ",", " activation", "='", "s", "igmoid", "'))", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n", "    ", "precision", ",", " recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "\n", "    ", "precision", " =", " np", ".", "concat", "en", "ate", "((", "[", "0", "]", ",", " precision", ",", " [", "1", "]))", "\n", "    ", "re", "call", " =", " np", ".", "concat", "en", "ate", "((", "[", "0", "]", ",", " recall", ",", " [", "1", "]))", "\n", "    ", "ax", " =", " plt", ".", "plot", "(", "re", "call", ",", " precision", ",", " '", "r", "-", "')", "\n", "    ", "return", " model", ",", " ax", "\n", "\n", "#"], "logprobs": [-1.9178804159164429, -0.18239401280879974, -0.015254615806043148, -0.0028559870552271605, -0.006576087325811386, -0.00020787939138244838, -0.011799070052802563, -0.0006547214579768479, -0.8227683901786804, -0.0003797286772169173, -0.0004814896092284471, -0.00017557987303007394, -0.0035371140111237764, -4.053033626405522e-05, -0.000341476290486753, -0.004598755855113268, -0.02657548524439335, -1.156323378381785e-05, -8.940656698541716e-06, -7.152555099310121e-07, -2.253030106658116e-05, -0.00109112320933491, -0.09303255379199982, -0.0007993363542482257, -0.015359217301011086, -0.024785742163658142, -0.12652046978473663, -7.867782187531702e-06, -3.576214658096433e-05, -0.03436177223920822, -0.02303927391767502, -9.524368942948058e-05, -0.009304494597017765, -1.5291566848754883, -0.03156803548336029, -0.18629537522792816, -0.13802264630794525, -0.014797925017774105, -0.08442414551973343, -8.201262971851975e-05, -0.00025614796322770417, -0.45786818861961365, -0.00018666432879399508, -5.4238757002167404e-05, -1.311301275563892e-06, -5.960446742392378e-06, -0.9122680425643921, -0.00442561274394393, -0.013360965996980667, -0.05646829679608345, -0.00021717573690693825, -0.00020656836568377912, -0.000196556793525815, -0.039047349244356155, -3.6954195820726454e-05, -0.0009276139317080379, -2.8609820219571702e-05, -0.009513872675597668, -0.00010251473577227443, -0.0006363751017488539, -0.46615487337112427, -0.20948563516139984, -0.4328865706920624, -0.00011062010162277147, -0.6202868819236755, -2.0510761737823486, -0.031228162348270416, -0.4260387718677521, -0.024958884343504906, -0.00932445377111435, -0.0008896207436919212, -1.37070894241333, -0.005816557444632053, -0.11315497010946274, -0.39633992314338684, -0.0043838354758918285, -3.0397906812140718e-05, -0.007920878939330578, -0.007565418723970652, -0.007094075437635183, -0.003469164716079831, -7.378782902378589e-05, -0.002062933286651969, -0.00809590145945549, -0.3411006033420563, -0.070432648062706, -0.015181939117610455, -0.0019487215904518962, -0.00015937011630740017, -9.023735765367746e-05, -0.00020013237372040749, -0.0017963001737371087, -0.046611666679382324, -0.04806949570775032, -0.31016403436660767, -0.00018809456378221512, -0.062335170805454254, -0.0015393561916425824, -0.00852706003934145, -0.1045115515589714, -0.0008448368753306568, -0.0009787060553207994, -7.486063259420916e-05, -0.011766789481043816, -0.008869181387126446, -0.00025006983196362853, -0.0006501944735646248, -0.014861349947750568, -0.0015456646215170622, -1.9073304429184645e-05, -0.011209252290427685, -0.5896826386451721, -0.003513593692332506, -0.09416545927524567, -0.4170496463775635, -0.008965356275439262, -0.043732527643442154, -0.31469064950942993, -0.040020089596509933, -0.002532372483983636, -0.0008305437513627112, -0.882789671421051, -0.007070638705044985, -0.006880993023514748, -1.6689286894688848e-06, -1.2993727978027891e-05, -0.0005006728461012244, -5.960462772236497e-07, -6.079655122448457e-06, -0.00012706902634818107, -0.09219648689031601, -0.007215157151222229, -0.0014132998185232282, -0.006292649079114199, -0.015745246782898903, -0.0003082277253270149, -0.00015567521040793508, -0.0030039683915674686, -0.00023862851958256215, -0.00012706902634818107, -0.00014661667228210717, -0.21464107930660248, -0.003476411337032914, -0.021104764193296432, -1.8122200965881348, -1.3974114656448364, -0.626777708530426, -0.00026174934464506805, -2.597402334213257, -0.005152636673301458, -0.06505007296800613, -1.6781749725341797, -0.08779842406511307, -0.3476123809814453, -0.4258926212787628, -0.00022706791060045362, -0.007579379249364138, -0.9370109438896179, -0.0021161085460335016, -0.11760362237691879, -0.011096670292317867, -0.016391972079873085, -0.0002949994814116508, -0.008271721191704273, -0.0005833592731505632, -0.0187070369720459, -0.00046230596490204334, -0.0001858300092862919, -0.00025245340657420456, -0.007994321174919605, -0.026141123846173286, -0.0003071551618631929, -0.0007412070408463478, -0.0011121999705210328, -0.005606403108686209, -1.3589766240329482e-05, -0.007876290939748287, -0.0023641036823391914, -0.0006680640508420765, -0.017853742465376854, -0.0010318199638277292, -0.0006516240537166595, -0.022478312253952026, -0.7996432781219482, -0.04231349751353264, -0.005643150769174099, -0.0009664393728598952, -0.7053309679031372, -0.004772106651216745, -0.020303046330809593, -0.0005024601123295724, -0.0056998105719685555, -0.0012168630491942167, -0.25346124172210693, -2.3323915004730225, -0.8828966617584229, -0.23690982162952423, -0.003165118396282196, -0.005572143942117691, -0.01384065207093954, -0.9855167269706726, -0.03012746013700962, -0.0012517482973635197, -0.004205550067126751, -0.4752422571182251, -0.029343711212277412, -2.1788289546966553], "finish_reason": "stop"}], "metrics": {"energy": 322.347814980507, "energy_per_token": 1.5572358211618695, "time": 12.613337, "time_per_token": 0.06093399516908212}}
{"outputs": [{"text": "model = keras.models.Sequential([keras.layers.Dense(1)])\n    model.compile(optimizer='SGD', loss='binary_crossentropy')\n    model.fit(X, Y, verbose=0, epochs=5)\n    precision, recall, thresholds = precision_recall_curve(Y, model.predict(X))\n    ax = plt.plot(recall, precision)\n    ax.set_title('Precision-Recall Curve')\n    ax.set_xlabel('Recall')\n    ax.set_ylabel('Precision')\n    return model, ax", "tokens": ["model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", ")]", ")", "\n", "    ", "model", ".", "compile", "(", "optim", "izer", "='", "S", "GD", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ",", " verbose", "=", "0", ",", " epochs", "=", "5", ")", "\n", "    ", "precision", ",", " recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", ",", " model", ".", "predict", "(", "X", "))", "\n", "    ", "ax", " =", " plt", ".", "plot", "(", "re", "call", ",", " precision", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Rec", "all", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Prec", "ision", "')", "\n", "    ", "return", " model", ",", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.176675319671631, -0.032122306525707245, -0.22573570907115936, -0.00025245340657420456, -0.0009080815361812711, -0.30338022112846375, -0.00023183519078884274, -0.00013195598148740828, -3.4570634852570947e-06, -1.0013530300057027e-05, -1.264243483543396, -1.3452798128128052, -0.00016032364510465413, -0.0009501233580522239, -5.578839045483619e-05, -0.017964279279112816, -0.00013124081306159496, -0.0009623901569284499, -0.7278019189834595, -2.6389715671539307, -0.0017285895301029086, -0.02563825622200966, -0.10936522483825684, -0.05705645680427551, -0.00031740395934320986, -0.0025939648039638996, -0.006299045868217945, -1.1703444719314575, -1.6569954823353328e-05, -0.44930896162986755, -1.3030030727386475, -0.000327652640407905, -0.00034814971149899065, -0.0004894727608188987, -0.14483574032783508, -0.04553108289837837, -0.0244067944586277, -0.0008036244544200599, -0.00023982033599168062, -8.034383063204587e-05, -0.4557584822177887, -0.0034874591510742903, -0.043421532958745956, -0.20875583589076996, -0.0029487009160220623, -0.0023323495406657457, -0.0002787916746456176, -0.009076643735170364, -0.0030873988289386034, -0.047250453382730484, -0.0829501524567604, -0.5175251960754395, -0.01579640805721283, -0.10741677135229111, -0.6187793016433716, -0.40834060311317444, -0.002256349427625537, -2.317288875579834, -1.0713250637054443, -0.015079314820468426, -0.10266464203596115, -0.513229489326477, -0.04478804022073746, -0.0043335105292499065, -0.0009192770230583847, -0.49491703510284424, -0.004869625438004732, -0.007312911096960306, -3.099436753473128e-06, -1.1205610462639015e-05, -0.0007680088747292757, -7.390948667307384e-06, -5.125986263010418e-06, -0.0002522150462027639, -0.16500428318977356, -0.05122571811079979, -0.07367910444736481, -0.000176652567461133, -0.0006983225466683507, -0.006335531361401081, -0.0011297041783109307, -0.3124982714653015, -0.0071292296051979065, -0.047894399613142014, -0.5138542056083679, -0.033081505447626114, -0.007233146578073502, -0.0004441943601705134, -0.3150201737880707, -0.013020377606153488, -0.024230066686868668, -0.0004363300104159862, -0.009291384369134903, -0.00201534666121006, -0.5764219760894775, -0.006481695920228958, -0.029197724536061287, -1.4557243585586548, -0.10919177532196045, -0.01860687881708145, -0.18840330839157104, -0.25966811180114746, -0.10469654947519302, -0.009474433027207851, -0.00016664070426486433, -0.015891097486019135, -0.0033059250563383102, -7.045020902296528e-05, -0.015518506057560444, -8.11782301752828e-05, -0.0075453054159879684, -0.004909602925181389, -0.004181570839136839, -0.1784762740135193, -0.004628302529454231, -0.011068610474467278, -0.1749112755060196, -0.05832991749048233, -0.006631036289036274, -0.010666146874427795, -0.00010239553375868127, -0.0035640785936266184, -0.00231879111379385, -8.177422569133341e-05, -0.0008212531101889908, -0.00010013079008786008, -0.00032085992279462516, -5.113947918289341e-05, -0.0005030558677390218, -0.0005364171229302883, -0.0003321811091154814, -3.2782016205601394e-05, -0.0010302717564627528, -0.006236259825527668, -0.037345729768276215, -0.06738581508398056, -0.03304194658994675, -0.0020485385321080685, -0.01044167298823595, -1.5593700408935547, -2.3841855067985307e-07, -3.4570634852570947e-06, -4.279521817807108e-05, -0.00015007323236204684, -0.08291734755039215], "finish_reason": "stop"}], "metrics": {"energy": 196.54011392974854, "energy_per_token": 1.3554490615844728, "time": 7.1183734, "time_per_token": 0.04909223034482759}}
{"outputs": [{"text": "X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n    model = keras.models.Sequential([\n        keras.layers.Dense(units=1, activation='sigmoid'),\n    ])\n    model.compile(\n        optimizer=keras.optimizers.SGD(learning_rate=0.01),\n        loss=keras.losses.binary_crossentropy,\n        metrics=['accuracy']\n    )\n    model.fit(X_train, y_train, epochs=1000, verbose=0)\n    precision, recall, thresholds = precision_recall_curve(y_test, model.predict(X_test))\n    ax = plt.axes()\n    ax.plot(recall, precision)\n    ax.set_xlabel('Recall')\n    ax.set_ylabel('Precision')\n    ax.set_title('Precision-Recall Curve')\n    return model, ax", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "units", "=", "1", ",", " activation", "='", "s", "igmoid", "')", ",", "\n", "    ", "])", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "1", ")", ",", "\n", "        ", "loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ",", "\n", "        ", "metrics", "=['", "accuracy", "']", "\n", "    ", ")", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ",", " epochs", "=", "1", "0", "0", "0", ",", " verbose", "=", "0", ")", "\n", "    ", "precision", ",", " recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "\n", "    ", "ax", " =", " plt", ".", "axes", "()", "\n", "    ", "ax", ".", "plot", "(", "re", "call", ",", " precision", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Rec", "all", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Prec", "ision", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n", "    ", "return", " model", ",", " ax"], "logprobs": [-1.9178804159164429, -0.18239401280879974, -0.015254615806043148, -0.0028559870552271605, -0.006576087325811386, -0.00020787939138244838, -0.011799070052802563, -0.0006547214579768479, -0.5821258425712585, -0.00023862851958256215, -0.0006984416977502406, -0.00020180096908006817, -0.005394663196057081, -4.541770613286644e-05, -0.000679500459227711, -0.005385770462453365, -0.021121805533766747, -1.2516897186287679e-05, -9.417489309271332e-06, -9.536738616588991e-07, -2.372236667724792e-05, -0.0007659838884137571, -0.10611119121313095, -0.0012699642684310675, -0.0381493978202343, -0.02681133896112442, -0.1139657273888588, -5.483612312673358e-06, -3.576214658096433e-05, -0.033071815967559814, -0.0232518520206213, -8.892617915989831e-05, -0.010974878445267677, -0.3367312252521515, -0.1191846951842308, -2.622600959512056e-06, -6.556489552167477e-06, -0.004175516311079264, -0.31378284096717834, -0.039767973124980927, -0.14579011499881744, -0.019672054797410965, -0.22111789882183075, -0.09877362102270126, -0.013594193384051323, -0.06916261464357376, -7.402622577501461e-05, -0.0002157455455744639, -0.5060319304466248, -0.0001599660754436627, -5.221230458118953e-05, -1.4305104514278355e-06, -8.4638240878121e-06, -0.627625584602356, -0.16313941776752472, -0.030289502814412117, -0.0071860421448946, -1.3828182090946939e-05, -0.0003793711948674172, -1.6093124941107817e-05, -0.013498109765350819, -0.00010108436981681734, -0.00010299152199877426, -0.8688896894454956, -0.02015409804880619, -0.23050110042095184, -0.14484399557113647, -1.7597628831863403, -0.26726070046424866, -0.0020824430976063013, -1.823885577323381e-05, -2.290257215499878, -1.3269020318984985, -0.02567950449883938, -0.48970142006874084, -0.00493783550336957, -0.0014879356604069471, -0.03910638764500618, -0.005431063007563353, -6.186770770000294e-05, -0.0007843278581276536, -0.0008702066843397915, -1.296621322631836, -0.011859622783958912, -0.7447854280471802, -1.1444026313256472e-05, -0.6687940955162048, -0.09063930809497833, -2.884823152271565e-05, -0.00027843413408845663, -0.01267825998365879, -0.00010048838157672435, -0.009389881044626236, -0.00024971229140646756, -0.33065956830978394, -0.1868816614151001, -0.00016830935783218592, -2.47952248173533e-05, -0.002030574483796954, -0.04344664514064789, -0.00040356122190132737, -0.48633071780204773, -0.32263827323913574, -0.01922825165092945, -0.0004478881892282516, -0.039372313767671585, -0.0005032941699028015, -0.0051083993166685104, -0.7706126570701599, -0.016710545867681503, -6.48477507638745e-05, -0.006805692799389362, -3.576278118089249e-07, -4.136476854910143e-05, -2.1423544883728027, -3.6954811548639555e-06, -0.00014101465058047324, -9.011816291604191e-05, -0.032779064029455185, -0.006020742934197187, -0.6765486598014832, -0.005575344432145357, -0.5685263276100159, -0.2018076777458191, -0.1547306478023529, -1.4417692422866821, -0.014501533471047878, -0.00011801023356383666, -0.0003890234511345625, -0.03548290580511093, -0.15106262266635895, -0.0016412371769547462, -0.0016632545739412308, -0.0001045410826918669, -0.15775974094867706, -0.04652644321322441, -0.00018094333063345402, -0.0007139279623515904, -0.018355507403612137, -0.00021431533969007432, -2.5748875486897305e-05, -0.006354957818984985, -0.8492143154144287, -0.0011826909612864256, -0.676314651966095, -0.1010332852602005, -1.1957762241363525, -2.4030871391296387, -0.0895693227648735, -0.07560580968856812, -0.0019723977893590927, -0.1862926036119461, -0.1268964409828186, -0.00900375284254551, -0.062480319291353226, -0.3937665820121765, -0.04173946753144264, -0.003840809687972069, -0.0005559567362070084, -0.6616474986076355, -0.009365198202431202, -0.003596862778067589, -1.6689286894688848e-06, -7.510157047363464e-06, -0.0004010588163509965, -1.1920922133867862e-06, -6.9141146923357155e-06, -0.00016604475968051702, -0.25785595178604126, -0.0003666205739136785, -0.010734434239566326, -0.0046775443479418755, -0.04362788423895836, -0.0005355831235647202, -0.00046754872892051935, -0.0012256737099960446, -0.0007808735244907439, -0.00011634149996098131, -0.0001867835089797154, -0.3090074956417084, -0.005986497737467289, -0.08690868318080902, -0.37251386046409607, -0.022035054862499237, -0.005822839215397835, -0.0027045360766351223, -2.7490830421447754, -0.0699348971247673, -0.016017336398363113, -0.006523503921926022, -0.03748077154159546, -0.0004419303731992841, -0.08491145074367523, -0.0059287878684699535, -0.04884960874915123, -0.0004935238393954933, -0.03481917455792427, -0.0013581824023276567, -0.523795485496521, -0.0031312506180256605, -0.004474389832466841, -0.010494641028344631, -0.00026854246971197426, -0.019148146733641624, -0.32301539182662964, -0.7563625574111938, -0.12372685968875885, -0.015064637176692486, -0.00018225439998786896, -0.005438887979835272, -0.004586059134453535, -5.245071224635467e-05, -0.00011407678539399058, -7.295342220459133e-05, -0.0003953390696551651, -1.1444026313256472e-05, -0.0012223399244248867, -0.000617551791947335, -0.0003922408213838935, -3.7788631743751466e-05, -0.0009008163469843566, -0.0016694430960342288, -0.0006395916570909321, -0.0016974101308733225, -0.00023445718397852033, -0.0024507984053343534, -0.00014828535495325923, -0.004754191264510155, -0.02154388464987278, -0.0028173536993563175, -1.8715683836489916e-05, -0.0033353909384459257, -0.0072343298234045506, -0.00018273114983458072, -0.004715394228696823, -2.0265373677830212e-05, -0.0013736584223806858, -0.017949175089597702, -0.04535873234272003, -0.11579370498657227, -0.0217231884598732, -0.00126008247025311, -0.005923455115407705], "finish_reason": "stop"}], "metrics": {"energy": 347.53041124725326, "energy_per_token": 1.4301663014290258, "time": 14.719749, "time_per_token": 0.0605750987654321}}
{"outputs": [{"text": "train_X, test_X, train_Y, test_Y = train_test_split(X, Y, test_size=0.3)\n\n    model = keras.models.Sequential()\n    model.add(keras.layers.Dense(units=1, input_shape=[X.shape[1]]))\n    model.compile(loss='binary_crossentropy',\n                  optimizer='sgd',\n                  metrics=['acc'])\n    history = model.fit(train_X, train_Y,\n                        batch_size=128, epochs=10, verbose=1)\n    pr_values, prec, rec = precision_recall_curve(test_Y, model.predict(test_X))\n    ax = plt.plot(rec, prec, color=\"green\", linewidth=5.0,\n                 label=\"Precision-Recall curve\")\n    plt.title('Precision-Recall Curve')\n    plt.xlabel('Recall')\n    plt.ylabel('Precision')\n    return model, ax\n\nclass Task(object):\n    ", "tokens": ["train", "_", "X", ",", " test", "_", "X", ",", " train", "_", "Y", ",", " test", "_", "Y", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "units", "=", "1", ",", " input", "_", "shape", "=[", "X", ".", "shape", "[", "1", "]]", "))", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", "\n", "                ", "  ", "optim", "izer", "='", "sg", "d", "'", ",", "\n", "                ", "  ", "metrics", "=['", "acc", "'])", "\n", "    ", "history", " =", " model", ".", "fit", "(", "train", "_", "X", ",", " train", "_", "Y", ",", "\n", "                ", "        ", "batch", "_", "size", "=", "1", "2", "8", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "1", ")", "\n", "    ", "pr", "_", "values", ",", " prec", ",", " rec", " =", " precision", "_", "re", "call", "_", "curve", "(", "test", "_", "Y", ",", " model", ".", "predict", "(", "test", "_", "X", "))", "\n", "    ", "ax", " =", " plt", ".", "plot", "(", "rec", ",", " prec", ",", " color", "=", "\"", "green", "\"", ",", " linewidth", "=", "5", ".", "0", ",", "\n", "                ", " label", "=", "\"", "Prec", "ision", "-", "Rec", "all", " curve", "\"", ")", "\n", "    ", "plt", ".", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n", "    ", "plt", ".", "xlabel", "('", "Rec", "all", "')", "\n", "    ", "plt", ".", "ylabel", "('", "Prec", "ision", "')", "\n", "    ", "return", " model", ",", " ax", "\n", "\n", "class", " Task", "(", "object", "):", "\n", "    "], "logprobs": [-2.703853130340576, -0.23465833067893982, -1.4308106899261475, -0.00737764174118638, -0.15225791931152344, -0.0003228858404327184, -0.0007469248375855386, -0.003134578000754118, -0.02268064022064209, -0.00013958434283267707, -0.28657829761505127, -0.00025662468397058547, -0.0026037145871669054, -0.00022265815641731024, -0.0006959400488995016, -0.010168769396841526, -0.05753083527088165, -6.770858453819528e-05, -4.8993817472364753e-05, -3.0278701160568744e-05, -5.757642793469131e-05, -0.0013424679636955261, -0.10119188576936722, -0.0011380392825230956, -0.012677907012403011, -0.024426687508821487, -0.17218028008937836, -8.821448318485636e-06, -0.00019524575327523053, -0.05323275923728943, -0.02851288951933384, -0.00011205045302631333, -0.015264477580785751, -1.2204872369766235, -0.021523701027035713, -1.5798406600952148, -0.0010352734243497252, -0.10276220738887787, -0.010918870568275452, -0.10940946638584137, -9.762764238985255e-05, -0.00021681819634977728, -0.3955612778663635, -0.00014149141497910023, -5.304672595229931e-05, -9.536738616588991e-07, -6.794906312279636e-06, -0.5341619253158569, -0.002885466208681464, -0.022008933126926422, -0.024259621277451515, -0.00012599628826137632, -0.0001586549769854173, -0.00015793983766343445, -0.04113936424255371, -2.884823152271565e-05, -0.0008057684754021466, -2.1219027985353023e-05, -0.007304864004254341, -7.664863369427621e-05, -0.0003594706067815423, -2.257110357284546, -0.02891669049859047, -0.17168179154396057, -0.16353042423725128, -0.5212499499320984, -6.282132380874828e-05, -0.5821056365966797, -0.915148138999939, -1.3312692642211914, -0.014988424256443977, -0.009232447482645512, -0.025596892461180687, -0.0053824507631361485, -0.04501565173268318, -0.4049665331840515, -0.011168111115694046, -0.029385386034846306, -0.002859196625649929, -5.304672595229931e-05, -0.005748881492763758, -0.002086844528093934, -0.6834462881088257, -0.36640283465385437, -0.023935992270708084, -0.00127948890440166, -0.00016342257731594145, -8.821098163025454e-05, -0.00018690270371735096, -0.002034619450569153, -2.340580701828003, -0.04513803869485855, -0.05278189852833748, -0.014294254593551159, -2.658331868587993e-05, -0.17872585356235504, -0.1982450783252716, -0.00022766382608097047, -0.4364627003669739, -0.0034806879702955484, -0.08564365655183792, -0.0006308949086815119, -0.001364849042147398, -0.004106185864657164, -0.08305460214614868, -3.0553088188171387, -0.15861865878105164, -0.00323475175537169, -0.4885665476322174, -2.8967602252960205, -0.008652813732624054, -0.001566136721521616, -2.1815061700181104e-05, -0.0005951540661044419, -0.00015960850578267127, -0.07211042940616608, -0.0002644904307089746, -0.0005427317810244858, -0.00045074793160893023, -0.04920022934675217, -1.6093124941107817e-05, -0.0008104139124043286, -0.029260938987135887, -2.1956567764282227, -0.008352821692824364, -0.056357432156801224, -1.581589937210083, -1.2874520507466514e-05, -2.2053474822314456e-05, -0.00135925377253443, -0.7030295133590698, -1.377061367034912, -0.008094364777207375, -0.0008815216715447605, -1.2647652626037598, -0.0002824861148837954, -0.6047695875167847, -0.1427975594997406, -0.5203028917312622, -0.5472829937934875, -0.0008328068652190268, -1.8116626739501953, -0.7091230154037476, -0.009372284635901451, -0.5672116875648499, -2.26842999458313, -0.044611118733882904, -3.9596104621887207, -0.028454842045903206, -2.874791145324707, -0.4527636468410492, -0.8702625632286072, -0.129024475812912, -0.011409393511712551, -2.729855441430118e-05, -3.707340147229843e-05, -5.4596363042946905e-05, -3.2186455882765586e-06, -8.106198947643861e-06, -0.0005229535745456815, -0.08504481613636017, -0.0008610355434939265, -0.0024528198409825563, -0.07624667137861252, -0.2033613622188568, -0.00041571559268049896, -0.00018451895448379219, -0.02461187355220318, -0.0020833946764469147, -6.318072337307967e-06, -0.00010871296399272978, -0.5813430547714233, -0.005477657541632652, -0.2215225249528885, -1.130464792251587, -0.028171513229608536, -0.011254752986133099, -0.0013405631761997938, -0.4015572667121887, -0.005982705857604742, -0.07317576557397842, -0.061005569994449615, -0.17543205618858337, -0.5375784635543823, -1.0681815147399902, -2.8550074100494385, -0.00755725521594286, -1.8834612369537354, -0.0008721124031580985, -0.3611598312854767, -0.9020441770553589, -0.007883387617766857, -1.4120595455169678, -1.4493672847747803, -0.008606130257248878, -0.39189985394477844, -0.9133384823799133, -0.032832708209753036, -0.4535474479198456, -0.4462718367576599, -0.12455414235591888, -0.18149931728839874, -0.0031918552704155445, -0.22703012824058533, -0.016158223152160645, -0.0008803306263871491, -1.6475586891174316, -0.1989152729511261, -0.0598992295563221, -0.0031193667091429234, -0.15203338861465454, -1.7068042755126953, -3.9219088648678735e-05, -0.7101348042488098, -0.8142910599708557, -0.02119475230574608, -0.00022003613412380219, -0.03273741528391838, -0.0060349623672664165, -0.0006618693005293608, -0.1716340035200119, -0.0006423317245207727, -0.0190918929874897, -0.0069349780678749084, -0.016686394810676575, -0.19569909572601318, -0.00029404606902971864, -0.07163871079683304, -0.029270894825458527, -0.03966222703456879, -0.00037126801908016205, -0.017511868849396706, -0.0011859057703986764, -0.0001567479339428246, -0.0004203628050163388, -0.0001245659514097497, -0.01689341478049755, -0.0010296764085069299, -0.0014110381016507745, -8.95221673999913e-05, -0.0024177387822419405, -0.003233920084312558, -0.0640701949596405, -0.6489346623420715, -0.033605773001909256, -0.002191048813983798, -0.016929514706134796, -0.7209811210632324, -0.0365348644554615, -3.4144699573516846, -1.1506644487380981, -1.0220067501068115, -2.5206103324890137, -0.009741151705384254, -0.0034863899927586317, -0.055788587778806686], "finish_reason": "length"}], "metrics": {"energy": 367.5848783588412, "energy_per_token": 1.4358784310892234, "time": 15.353164, "time_per_token": 0.059973296875}}
{"outputs": [{"text": "x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    model = keras.Sequential([\n        keras.layers.Dense(\n            units=1,\n            input_shape=(x_train.shape[1],),\n            activation=\"sigmoid\"\n        )\n    ])\n\n    model.compile(\n        loss=keras.losses.BinaryCrossentropy(from_logits=True),\n        optimizer=keras.optimizers.SGD(),\n        metrics=[\"accuracy\"]\n    )\n\n    model.fit(\n        x=x_train,\n        y=y_train,\n        epochs=100,\n        verbose=1,\n        batch_size=32,\n    )\n\n    precision, recall, _ = precision_recall_curve(\n        y_true=y_test,\n        y_score=model.predict(x_test),\n    )\n\n    ax = plt.figure().", "tokens": ["x", "_", "train", ",", " x", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "            ", "units", "=", "1", ",", "\n", "            ", "input", "_", "shape", "=(", "x", "_", "train", ".", "shape", "[", "1", "]", ",", ")", ",", "\n", "            ", "activation", "=", "\"", "s", "igmoid", "\"", "\n", "        ", ")", "\n", "    ", "])", "\n", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "(", "from", "_", "log", "its", "=", "True", ")", ",", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", "\n", "        ", "metrics", "=[", "\"", "accuracy", "\"", "]", "\n", "    ", ")", "\n", "\n", "    ", "model", ".", "fit", "(", "\n", "        ", "x", "=", "x", "_", "train", ",", "\n", "        ", "y", "=", "y", "_", "train", ",", "\n", "        ", "epoch", "s", "=", "1", "0", "0", ",", "\n", "        ", "verbose", "=", "1", ",", "\n", "        ", "batch", "_", "size", "=", "3", "2", ",", "\n", "    ", ")", "\n", "\n", "    ", "precision", ",", " recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "\n", "        ", "y", "_", "true", "=", "y", "_", "test", ",", "\n", "        ", "y", "_", "score", "=", "model", ".", "predict", "(", "x", "_", "test", ")", ",", "\n", "    ", ")", "\n", "\n", "    ", "ax", " =", " plt", ".", "figure", "()", "."], "logprobs": [-3.8397574424743652, -0.09959125518798828, -0.02962520532310009, -0.005607232917100191, -0.018035581335425377, -0.0001234931987710297, -0.014927824959158897, -0.0010845737997442484, -0.0032191856298595667, -0.00013731967192143202, -0.0005715643637813628, -0.00017832119192462415, -0.004575141705572605, -4.005352093372494e-05, -0.0003914067056030035, -0.006942317821085453, -0.03201759606599808, -1.8596476365928538e-05, -9.536697689327411e-06, -9.536738616588991e-07, -2.4199192921514623e-05, -0.001061352901160717, -0.0984785258769989, -0.0023991868365556, -0.013989956118166447, -0.033791109919548035, -0.1318436712026596, -1.2278481335670222e-05, -6.353653589030728e-05, -0.03551684692502022, -0.027127539739012718, -0.00011872540198964998, -0.01047906931489706, -0.3576323986053467, -0.12260830402374268, -5.245195097813848e-06, -6.198863957251888e-06, -0.004035425838083029, -0.3092592656612396, -0.04013095051050186, -0.1488141119480133, -0.02089826576411724, -1.4196481704711914, -0.0008404298569075763, -0.09352708607912064, -0.008457675576210022, -0.08318789303302765, -5.173549288883805e-05, -0.00019167017308063805, -0.6004446744918823, -2.50339189733495e-06, -2.145764938177308e-06, -0.15819966793060303, -0.08172108232975006, -0.019933030009269714, -0.006851631216704845, -2.1815061700181104e-05, -0.0014348459662869573, -1.3351351299206726e-05, -0.008585565723478794, -8.67805938469246e-05, -7.70062324590981e-05, -1.8104572296142578, -0.014224094338715076, -0.30731359124183655, -0.01645459234714508, -0.21730224788188934, -0.09259189665317535, -0.08485034108161926, -0.0017523899441584945, -0.26430150866508484, -8.22540732769994e-06, -0.3952914774417877, -0.8370640277862549, -1.448904275894165, -0.0011102947173640132, -0.009909010492265224, -0.0015886317705735564, -0.0057354881428182125, -0.06404626369476318, -0.0007707485929131508, -0.021948643028736115, -0.00602299440652132, -0.035627059638500214, -0.2306126058101654, -0.10695252567529678, -0.06014295667409897, -0.09851309657096863, -0.8666258454322815, -0.06818519532680511, -0.0011312521528452635, -2.3364747903542593e-05, -6.5205356804654e-05, -0.609279990196228, -0.019045459106564522, -0.0053957304917275906, -0.11146611720323563, -0.003997669089585543, -0.00629525538533926, -0.0007173825288191438, -0.2109512835741043, -6.437094270950183e-05, -0.01107061468064785, -8.5588610090781e-05, -0.0009436921682208776, -0.0003551805857568979, -0.23914077877998352, -0.0038486472330987453, -0.5790824294090271, -0.051576074212789536, -0.9897167086601257, -4.017272294731811e-05, -0.014300130307674408, -8.344646857949556e-07, -2.8967437174287625e-05, -0.3072356581687927, -0.00010597144137136638, -0.007973507978022099, -1.0059114694595337, -0.017303572967648506, -0.00010382589971413836, -0.0006733057671226561, -0.00023040501400828362, -0.0011198208667337894, -0.10107854008674622, -0.0033925380557775497, -0.0006269635050557554, -0.00472120800986886, -0.00029416524921543896, -0.0012185298837721348, -6.198863957251888e-06, -0.011274791322648525, -0.07566715776920319, -5.98412734689191e-05, -0.00020823694649152458, -0.0025813612155616283, -3.886147169396281e-05, -0.015038332901895046, -0.000254241080256179, -0.68809974193573, -0.4207935929298401, -0.002144776750355959, -0.36592167615890503, -0.012843742966651917, -0.07371819019317627, -0.2633194625377655, -0.2373720407485962, -8.868777513271198e-05, -0.20538482069969177, -0.2554824948310852, -0.0038241841830313206, -9.262132516596466e-05, -0.00015400654228869826, -0.033562660217285156, -4.3987260141875595e-05, -0.15681928396224976, -0.0013813963159918785, -0.0010640918044373393, -4.6132929128361866e-05, -1.207532525062561, -0.0018941095331683755, -0.005456435494124889, -0.739229142665863, -0.002399662509560585, -1.5020257706055418e-05, -0.0001070442158379592, -0.0014807938132435083, -0.021010568365454674, -5.817244164063595e-05, -0.058257270604372025, -0.00010263393050990999, -0.0009559590835124254, -0.0001062098381225951, -4.207999518257566e-05, -0.0013406822690740228, -0.0008238735608756542, -0.00039748396375216544, -0.6086720824241638, -5.960462772236497e-07, -0.000766102981287986, -0.5063445568084717, -0.40007346868515015, -1.1497427225112915, -0.14189131557941437, -0.002713452558964491, -0.0009611992281861603, -0.16520865261554718, -0.0008106521563604474, -2.4583091735839844, -0.2300247997045517, -0.013544447720050812, -0.18307818472385406, -0.9051968455314636, -8.11782301752828e-05, -9.536697689327411e-06, -0.0007052318542264402, -0.8155359029769897, -0.011914871633052826, -0.5497211217880249, -0.0010494445450603962, -1.4955031871795654, -0.00018153927521780133, -0.0009457168052904308, -0.0470588356256485, -0.0005173536483198404, -0.4594523310661316, -0.026432577520608902, -0.002804396441206336, -0.0007183355046436191, -0.8745458126068115, -0.003447662340477109, -0.008369963616132736, -2.0265558760002023e-06, -1.680836794548668e-05, -7.509902934543788e-05, -5.960462772236497e-07, -6.437280717364047e-06, -0.000163541772053577, -0.48086270689964294, -0.0025175088085234165, -0.025542162358760834, -0.01595550961792469, -0.016342129558324814, -0.0010961245279759169, -0.0051602269522845745, -4.708655978902243e-05, -0.001864482183009386, -0.006038161460310221, -0.012087782844901085, -9.583967766957358e-05, -0.28703853487968445, -3.6954811548639555e-06, -0.012221569195389748, -0.001686342409811914, -0.00827243085950613, -0.0009914488764479756, -0.0013165149139240384, -0.0011982887517660856, -0.00665602320805192, -0.009238352999091148, -0.00010442188795423135, -0.026504091918468475, -0.20986716449260712, -0.002275260630995035, -0.9421330094337463, -0.00022432672267314047, -0.000458254711702466, -0.1936437338590622, -0.00017188502533826977, -0.6399268507957458, -0.06132471188902855, -0.006712151691317558, -0.0008505540899932384, -2.728882074356079, -0.4394853115081787, -0.01423631701618433], "finish_reason": "length"}], "metrics": {"energy": 377.56255910491956, "energy_per_token": 1.474853746503592, "time": 15.766119, "time_per_token": 0.06158640234375}}
{"outputs": [{"text": "# Split data into training and test sets\n    train_X, test_X, train_y, test_y = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    # Create a Keras model with a single hidden layer and sigmoid activation\n    model = Sequential([\n        Dense(\n            units=32,\n            activation='sigmoid',\n            input_shape=(1,)\n        ),\n        Dense(\n            units=1,\n            activation='sigmoid'\n        )\n    ])\n\n    # Compile the model with binary cross-entropy loss and SGD optimizer\n    model.compile(loss='binary_crossentropy', optimizer='sgd')\n\n    # Fit the model to the training data\n    model.fit(train_X, train_y, epochs=10, verbose=0)\n\n    # Calculate the precision and recall for the test set data\n    pr_curve = precision_recall_curve(test_y, model.predict(test_X))\n    precision, recall, _ = pr_curve\n\n    ", "tokens": ["#", " Split", " data", " into", " training", " and", " test", " sets", "\n", "    ", "train", "_", "X", ",", " test", "_", "X", ",", " train", "_", "y", ",", " test", "_", "y", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " a", " K", "eras", " model", " with", " a", " single", " hidden", " layer", " and", " s", "igmoid", " activation", "\n", "    ", "model", " =", " Sequ", "ential", "([", "\n", "        ", "D", "ense", "(", "\n", "            ", "units", "=", "3", "2", ",", "\n", "            ", "activation", "='", "s", "igmoid", "'", ",", "\n", "            ", "input", "_", "shape", "=(", "1", ",", ")", "\n", "        ", ")", ",", "\n", "        ", "D", "ense", "(", "\n", "            ", "units", "=", "1", ",", "\n", "            ", "activation", "='", "s", "igmoid", "'", "\n", "        ", ")", "\n", "    ", "])", "\n", "\n", "    ", "#", " Com", "pile", " the", " model", " with", " binary", " cross", "-", "entropy", " loss", " and", " SGD", " optimizer", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "model", ".", "fit", "(", "train", "_", "X", ",", " train", "_", "y", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "#", " Calculate", " the", " precision", " and", " recall", " for", " the", " test", " set", " data", "\n", "    ", "pr", "_", "curve", " =", " precision", "_", "re", "call", "_", "curve", "(", "test", "_", "y", ",", " model", ".", "predict", "(", "test", "_", "X", "))", "\n", "    ", "precision", ",", " recall", ",", " _", " =", " pr", "_", "curve", "\n", "\n", "    "], "logprobs": [-1.0307267904281616, -0.586220920085907, -1.594315528869629, -0.16402235627174377, -0.08718688786029816, -0.15528449416160583, -0.18309883773326874, -0.030984219163656235, -0.06741434335708618, -0.001737395767122507, -0.9388654828071594, -0.06988153606653214, -0.5354883074760437, -0.0011266082292422652, -0.04235817492008209, -7.259582343976945e-05, -0.00023529145983047783, -0.0013162767281755805, -0.004231428727507591, -2.4199192921514623e-05, -1.7816070318222046, -9.583967766957358e-05, -0.0007127366843633354, -2.3603161025675945e-05, -0.0009528625523671508, -0.001802487880922854, -0.03029678948223591, -1.5735502529423684e-05, -9.059865078597795e-06, -1.3589766240329482e-05, -5.2927523938706145e-05, -0.0003703146940097213, -0.0613911934196949, -0.0006817638641223311, -0.007358353119343519, -0.014681399799883366, -0.08472965657711029, -7.152555099310121e-07, -0.00010871296399272978, -0.00320504535920918, -0.012336144223809242, -7.080780778778717e-05, -0.009866871871054173, -0.22129133343696594, -0.09608660638332367, -1.0728830375228426e-06, -5.722029527532868e-06, -0.0016656348016113043, -0.12662151455879211, -0.016128193587064743, -0.1404183954000473, -0.0033229156397283077, -0.10307475179433823, -0.0004228651523590088, -0.006584614049643278, -0.8450621962547302, -0.7242106795310974, -0.38659942150115967, -5.864924969500862e-05, -1.1245262622833252, -0.03788383677601814, -1.4996521472930908, -0.19774210453033447, -0.025286946445703506, -0.060626640915870667, -0.42303764820098877, -0.05190581828355789, -3.123234637314454e-05, -0.002999570919200778, -0.02881002239882946, -0.0006389960180968046, -0.0265278909355402, -0.002322002314031124, -2.3052170276641846, -1.6927575416048057e-05, -0.6998192071914673, -0.08061302453279495, -0.013828542083501816, -0.23956350982189178, -0.00012909532233607024, -0.00015400654228869826, -2.4276318550109863, -0.00935882143676281, -0.36480554938316345, -0.016070831567049026, -2.0300936698913574, -0.2829503118991852, -0.003713499056175351, -0.12664639949798584, -0.0030317793134599924, -0.6649645566940308, -0.3674956262111664, -0.008697603829205036, -6.318072337307967e-06, -0.001945747178979218, -0.01862817443907261, -0.008504129014909267, -0.028799597173929214, -0.19833247363567352, -3.0874729418428615e-05, -0.1448458433151245, -0.21692854166030884, -2.908207416534424, -0.09109193086624146, -0.11383190006017685, -0.6826943159103394, -0.024053074419498444, -0.005794157274067402, -0.03403690457344055, -0.018100909888744354, -0.031249653548002243, -0.037370532751083374, -2.455681169521995e-05, -0.0012061471352353692, -0.2797050476074219, -0.0008930747280828655, -0.01959432102739811, -0.0009844223968684673, -0.18343082070350647, -0.08990737050771713, -0.005184657406061888, -0.024069715291261673, -0.01268908940255642, -0.04166731610894203, -0.004887301009148359, -3.6954811548639555e-06, -0.004370186012238264, -0.3261805474758148, -0.0023523299023509026, -0.0019288521725684404, -0.16387686133384705, -0.009580113925039768, -0.0028160461224615574, -0.0003780603874474764, -0.023471839725971222, -0.00015758226800244302, -0.004841984249651432, -0.010515284724533558, -3.659658250398934e-05, -0.3476269543170929, -0.001916716224513948, -1.4547877311706543, -0.10252499580383301, -0.0036431862972676754, -0.03132394328713417, -6.580135959666222e-05, -0.02289702370762825, -0.009917390532791615, -0.04223121702671051, -0.0029542872216552496, -0.0034684520214796066, -0.00038890427094884217, -0.00976794958114624, -5.745722592109814e-05, -0.0002766464895103127, -0.00037579628406092525, -1.7320889234542847, -0.05827638879418373, -0.02125473879277706, -0.0004166688595432788, -0.00022015532886143774, -6.770858453819528e-05, -0.00015114595589693636, -0.0011731653939932585, -0.03162693977355957, -0.05092214420437813, -0.2782112956047058, -9.97731985989958e-05, -0.03327420353889465, -0.0002996472467202693, -0.006493658293038607, -0.00012563870404846966, -0.001623861026018858, -0.05243343487381935, -0.011595825664699078, -0.000392598332837224, -0.019470052793622017, -0.05734984576702118, -0.00754140131175518, -0.005005328916013241, -0.4973045885562897, -0.00019071667338721454, -0.11386966705322266, -0.00033480284037068486, -0.00021634146105498075, -5.400034933700226e-05, -0.21223363280296326, -7.56950321374461e-05, -0.0002150304353563115, -0.00029392691794782877, -0.00270715169608593, -2.622600959512056e-06, -0.00025817399728111923, -0.011715184897184372, -0.5826590657234192, -0.00046695294440723956, -0.6127688884735107, -0.10961289703845978, -0.557666540145874, -0.10013335198163986, -0.0006135011790320277, -0.24420608580112457, -0.04564304277300835, -0.008499992080032825, -0.01023768074810505, -0.0003880701260641217, -0.005106620490550995, -3.0572972297668457, -0.4805450737476349, -0.46871325373649597, -1.7056277990341187, -0.00018737945356406271, -0.2604391574859619, -0.08279906213283539, -0.045601245015859604, -0.7349950671195984, -0.9034289717674255, -0.0722256675362587, -0.00043025295599363744, -2.357355833053589, -0.0781584158539772, -0.7423689961433411, -0.3237850069999695, -0.0010478964541107416, -9.298280929215252e-06, -5.304672595229931e-05, -0.0003196682082489133, 0.0, -5.006777428206988e-06, -0.00021562635083682835, -0.11808095872402191, -7.772143726469949e-05, -0.001354134758003056, -0.06718988716602325, -0.061025869101285934, -0.0005124686285853386, -0.00023135847004596144, -0.0011395872570574284, -0.0005507144378498197, -1.7881377516459906e-06, -0.000144709600135684, -0.11567775905132294, -0.0036373662296682596, -0.48668065667152405, -0.16940093040466309, -0.038623418658971786, -0.0048598977737128735, -0.005401303060352802, -0.5350129008293152, -0.004337545949965715, -0.0018649582052603364, -9.536697689327411e-06, -9.536738616588991e-07, -0.008043279871344566, -0.03294471278786659, -0.0002047805901383981], "finish_reason": "length"}], "metrics": {"energy": 408.2704850864411, "energy_per_token": 1.5948065823689106, "time": 15.774239, "time_per_token": 0.06161812109375}}
{"outputs": [{"text": "# Split the data into training and test sets\n    X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n    # Construct a Keras model with one hidden layer and sigmoid activation\n    model = keras.Sequential([\n        keras.layers.Dense(\n            units=1,\n            input_shape=[X.shape[1]],\n            activation='sigmoid'\n        )\n    ])\n    # Compile the model using binary cross-entropy loss and SGD optimizer\n    model.compile(\n        loss=keras.losses.BinaryCrossentropy(from_logits=True),\n        optimizer=keras.optimizers.SGD(learning_rate=0.01),\n        metrics=['accuracy']\n    )\n    # Fit the model to the training data\n    model.fit(X_train, y_train, epochs=100, verbose=0)\n    # Plot the Precision-Recall curve for the test set data\n    precision, recall, _ = precision_recall", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "#", " Construct", " a", " K", "eras", " model", " with", " one", " hidden", " layer", " and", " s", "igmoid", " activation", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "            ", "units", "=", "1", ",", "\n", "            ", "input", "_", "shape", "=[", "X", ".", "shape", "[", "1", "]]", ",", "\n", "            ", "activation", "='", "s", "igmoid", "'", "\n", "        ", ")", "\n", "    ", "])", "\n", "    ", "#", " Com", "pile", " the", " model", " using", " binary", " cross", "-", "entropy", " loss", " and", " SGD", " optimizer", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "(", "from", "_", "log", "its", "=", "True", ")", ",", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "1", ")", ",", "\n", "        ", "metrics", "=['", "accuracy", "']", "\n", "    ", ")", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "\n", "    ", "#", " Plot", " the", " Precision", "-", "Rec", "all", " curve", " for", " the", " test", " set", " data", "\n", "    ", "precision", ",", " recall", ",", " _", " =", " precision", "_", "re", "call"], "logprobs": [-1.0307267904281616, -0.586220920085907, -0.5003767013549805, -0.170974999666214, -0.04881554841995239, -0.030990343540906906, -0.13937197625637054, -0.11968063563108444, -0.012077419087290764, -0.10638303309679031, -0.0019061268540099263, -0.7945245504379272, -0.007433729711920023, -0.0018260485958307981, -0.0005627478822134435, -0.001262939884327352, -3.9934315282152966e-05, -0.0011457790387794375, -0.00021741411183029413, -0.7721235752105713, -0.00011777184408856556, -0.00011729506513802335, -5.113947918289341e-05, -0.0029714026022702456, -1.1205610462639015e-05, -8.272782724816352e-05, -0.0007469248375855386, -0.01431258674710989, -4.410734163684538e-06, -5.483612312673358e-06, -2.3841855067985307e-07, -3.266281055402942e-05, -0.00030489088385365903, -0.09902586787939072, -0.0005725175142288208, -0.018699314445257187, -0.010038839653134346, -0.04304775595664978, -7.152555099310121e-07, -2.407998726994265e-05, -0.0026613790541887283, -0.00861854013055563, -4.434487345861271e-05, -0.00921413954347372, -0.17277850210666656, -0.053655851632356644, -1.7881377516459906e-06, -5.006777428206988e-06, -0.0009135602158494294, -0.11589095741510391, -0.013877920806407928, -0.10292042791843414, -0.0016132686287164688, -2.3804192543029785, -0.23864172399044037, -1.9759159088134766, -0.32876235246658325, -0.12784206867218018, -9.810443589231e-05, -1.6928772926330566, -0.05395498126745224, -0.42568477988243103, -0.007918041199445724, -0.2837229371070862, -0.40799543261528015, -0.051421064883470535, -5.209310256759636e-05, -0.005287590902298689, -0.03295370936393738, -0.005033558700233698, -0.04337438941001892, -0.005162243265658617, -0.1278698742389679, -2.2291887944447808e-05, -0.00010740180005086586, -0.22588931024074554, -3.4570634852570947e-06, -2.50339189733495e-06, -0.06352820992469788, -0.12497936189174652, -0.021668946370482445, -0.007157872896641493, -6.318072337307967e-06, -0.004387752152979374, -8.4638240878121e-06, -0.048782285302877426, -7.462222856702283e-05, -2.0503786799963564e-05, -1.9736138582229614, -0.011416582390666008, -0.27592208981513977, -0.016138751059770584, -0.5676115155220032, -0.39480891823768616, -0.17673596739768982, -0.0011174393584951758, -0.24541723728179932, -6.079655122448457e-06, -0.46982935070991516, -1.076309084892273, -0.3391806483268738, -0.10961396247148514, -0.006473760586231947, -0.026625631377100945, -0.003007890423759818, -0.025601422414183617, -0.09014029800891876, -0.02944060042500496, -0.016278328374028206, -0.09067501872777939, -0.5176438093185425, -0.0004522969538811594, -4.172316494077677e-06, -0.07273923605680466, -0.5511334538459778, -0.017714735120534897, -0.009172207675874233, -0.10811247676610947, -0.004517112858593464, -0.0024561495520174503, -0.0004450284468475729, -0.02640947327017784, -0.017924586310982704, -0.029904305934906006, -8.391981828026474e-05, -0.02343911863863468, -0.0006043276516720653, -0.8161881566047668, -0.04729275032877922, -0.0025850471574813128, -0.022921258583664894, -0.00013672371278516948, -0.07804298400878906, -0.02432151883840561, -0.04836587235331535, -0.008928731083869934, -0.0035125245340168476, -0.0004127365828026086, -0.00490165501832962, -8.34430247778073e-05, -0.000284154579276219, -0.0013236580416560173, -0.545732319355011, -0.006679706275463104, -0.6571270227432251, -1.116561770439148, -0.033358603715896606, -1.549708758830093e-05, -0.010958489030599594, -2.3841855067985307e-07, -2.3007127310847864e-05, -0.26299968361854553, -0.0001426833332516253, -0.016595063731074333, -0.6253035068511963, -0.016859538853168488, -2.9801878554280847e-05, -0.0008267321973107755, -0.00020954797219019383, -0.0013050857232883573, -0.08671139925718307, -0.0015772057231515646, -0.0003864018653985113, -0.006486670114099979, -0.00024089295766316354, -0.0005209281225688756, -4.529942543740617e-06, -0.1302129030227661, -0.011776803992688656, -6.12716976320371e-05, -0.0001512651506345719, -0.0029950544703751802, -2.4676019165781327e-05, -0.009919987060129642, -0.00040522945346310735, -0.4884743392467499, -0.18576854467391968, -0.00015960850578267127, -2.13382354559144e-05, -0.001341158407740295, -0.020594218745827675, -0.001176975667476654, -0.5326191782951355, -0.3368583917617798, -0.023339899256825447, -0.23200377821922302, -0.0033996663987636566, -0.26085326075553894, -0.006559744011610746, -0.4307960271835327, -0.20570668578147888, -0.11585687845945358, -0.18346019089221954, -0.005333954934030771, -0.00011073929636040702, -0.00032658010604791343, -0.01646936684846878, -0.0028506380040198565, -0.06405387073755264, -0.0011504229623824358, -0.0002971446083392948, -0.017194839194417, -0.0218720193952322, -0.013850763440132141, -0.006718901451677084, -0.4939584732055664, -0.00023123928986024112, -0.15557482838630676, -0.000774917658418417, -0.0002686616498976946, -3.802703940891661e-05, -0.37363535165786743, -0.0474536269903183, -2.0146166207268834e-05, -0.0006914132391102612, -0.006168019957840443, -0.00018952481332235038, -4.291525328881107e-06, -0.004329830873757601, -0.40921539068222046, -0.0004196478403173387, -0.6013790965080261, -0.057369768619537354, -0.631013810634613, -0.15906868875026703, -0.04492379352450371, -0.0007147617870941758, -0.14836448431015015, -0.11286313086748123, -0.0029927962459623814, -0.03219318389892578, -0.005356958135962486, -0.18360763788223267, -0.004442821256816387, -0.1499069333076477, -0.0030544791370630264, -0.0006381620769388974, -3.576272320060525e-06, -0.01319180428981781, -0.15116705000400543, -0.005383873358368874, -0.3230666518211365, -0.3550907373428345, -0.2531576156616211, -0.010426336899399757, -0.001129227806814015, -0.14685937762260437, -0.02649979665875435, -0.0008538890979252756, -0.0002848696312867105, -0.8219579458236694, -0.005737740080803633, -0.005529347341507673, -2.3841855067985307e-07, -1.0609570381348021e-05, -0.0022188823204487562], "finish_reason": "length"}], "metrics": {"energy": 423.4152638854976, "energy_per_token": 1.653965874552725, "time": 16.819536, "time_per_token": 0.0657013125}}
{"outputs": [{"text": "# split data\n    train_data, test_data = train_test_split(X, test_size=0.3, random_state=42)\n\n    # construct a model with a hidden layer and sigmoid activation\n    model = keras.models.Sequential([\n        keras.layers.Dense(32, activation='sigmoid', input_shape=[2]),\n    ])\n\n    # compile the model with binary cross-entropy loss and SGD optimizer\n    model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\n\n    # fit the model to the training data in a non-verbose mode\n    model.fit(train_data, Y, epochs=10, verbose=0, batch_size=16)\n\n    # plot the Precision-Recall curve for the model based on the test set data\n    precision, recall, _ = precision_recall_curve(\n        Y, model.predict(test_data), pos_label=1\n    )\n    plt.step(recall, precision, label='model precision-recall curve')\n    plt.", "tokens": ["#", " split", " data", "\n", "    ", "train", "_", "data", ",", " test", "_", "data", " =", " train", "_", "test", "_", "split", "(", "X", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " construct", " a", " model", " with", " a", " hidden", " layer", " and", " s", "igmoid", " activation", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "3", "2", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=[", "2", "])", ",", "\n", "    ", "])", "\n", "\n", "    ", "#", " compile", " the", " model", " with", " binary", " cross", "-", "entropy", " loss", " and", " SGD", " optimizer", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "adam", "'", ",", " metrics", "=['", "accuracy", "'])", "\n", "\n", "    ", "#", " fit", " the", " model", " to", " the", " training", " data", " in", " a", " non", "-", "verbose", " mode", "\n", "    ", "model", ".", "fit", "(", "train", "_", "data", ",", " Y", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ",", " batch", "_", "size", "=", "1", "6", ")", "\n", "\n", "    ", "#", " plot", " the", " Precision", "-", "Rec", "all", " curve", " for", " the", " model", " based", " on", " the", " test", " set", " data", "\n", "    ", "precision", ",", " recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "\n", "        ", "Y", ",", " model", ".", "predict", "(", "test", "_", "data", ")", ",", " pos", "_", "label", "=", "1", "\n", "    ", ")", "\n", "    ", "plt", ".", "step", "(", "re", "call", ",", " precision", ",", " label", "='", "model", " precision", "-", "re", "call", " curve", "')", "\n", "    ", "plt", "."], "logprobs": [-1.0307267904281616, -2.55791974067688, -0.7260165810585022, -0.9776038527488708, -0.0024953915271908045, -1.3319997787475586, -0.3086859881877899, -1.4272029399871826, -0.043812740594148636, -0.03963804990053177, -0.00023588736075907946, -0.00016318420239258558, -0.27384260296821594, -0.02699248492717743, -1.4185804502631072e-05, -1.0132738680113107e-05, -1.0609570381348021e-05, -4.768258077092469e-05, -0.0008671099785715342, -0.12456467002630234, -0.0017144280718639493, -2.9456827640533447, -1.0251946150674485e-05, -0.00028379703871905804, -0.04159550741314888, -0.03427549824118614, -7.974783511599526e-05, -0.01371778268367052, -0.3644051253795624, -0.14840486645698547, -2.7418097943154862e-06, -7.271740287251305e-06, -0.0019731116481125355, -0.315645307302475, -0.03838471695780754, -0.21028852462768555, -0.015923716127872467, -0.47826144099235535, -0.0005081792478449643, -0.02488970197737217, -1.2521212100982666, -2.208484649658203, -1.3245784044265747, -0.946353018283844, -2.028764009475708, -0.9628226161003113, -0.188395693898201, -0.7935881614685059, -0.04432366043329239, -0.00010966652916977182, -0.022588688880205154, -0.06347215920686722, -0.0024706574622541666, -0.03441786393523216, -0.003941744100302458, -0.07211863994598389, -8.11782301752828e-05, -0.00012218205665703863, -0.7691996693611145, -9.035655966727063e-05, -3.2782016205601394e-05, -1.0728830375228426e-06, -5.602820692729438e-06, -0.6556608080863953, -0.08943753689527512, -0.015594796277582645, -0.006737373303622007, -6.079655122448457e-06, -0.0004850641416851431, -1.3828182090946939e-05, -0.014996057376265526, -8.785339014139026e-05, -4.9828242481453344e-05, -3.4025421142578125, -0.43602675199508667, -0.006175247021019459, -0.36741167306900024, -0.16374550759792328, -0.026362217962741852, -7.033323527139146e-06, -0.2332724630832672, -0.0004354958946350962, -0.030501240864396095, -7.986990567587782e-06, -0.12571687996387482, -1.0825101137161255, -1.0061981678009033, -0.007971024140715599, -0.2237190306186676, -0.03042203187942505, -1.853308916091919, -0.0035310557577759027, -0.00039104922325350344, -0.05382644012570381, -0.00014149141497910023, -0.01205951627343893, -0.010928303003311157, -0.5216861963272095, -0.00029297350556589663, -1.9449074268341064, -0.24278907477855682, -0.006155342794954777, -0.07760515809059143, -0.00011920218821614981, -0.016975458711385727, -0.017289748415350914, -0.03692509979009628, -0.006524214521050453, -0.003999925218522549, -0.0003721021639648825, -0.008291938342154026, -4.732496745418757e-05, -0.0002992897352669388, -0.001396991079673171, -0.5105119347572327, -0.042233504354953766, -0.01377963088452816, -0.0005392765742726624, -0.0002181292074965313, -8.070142939686775e-05, -0.00013219437096267939, -0.004074249416589737, -0.04947289824485779, -0.03912496194243431, -2.6285927295684814, -1.5778963565826416, -0.30170920491218567, -0.5658873915672302, -0.0627085268497467, -0.09679358452558517, -0.014804854989051819, -0.0012962757609784603, -0.009821189567446709, -0.00015496007108595222, -0.0025454522110521793, -0.03271941840648651, -0.01920509897172451, -0.0008062449633143842, -0.06712010502815247, -0.024879585951566696, -0.019021715968847275, -0.002665421459823847, -0.5338552594184875, -0.14123457670211792, -0.0009976415894925594, -0.00019631843315437436, -0.0002536452084314078, -0.006606996525079012, -0.013839594088494778, -0.00031025364296510816, -0.28865277767181396, -0.0005888396990485489, -0.00015221867943182588, -7.092700980138034e-05, -0.036988284438848495, -5.8410845667822286e-05, -3.731181277544238e-05, -0.0007638397510163486, -0.22898848354816437, -0.09224507957696915, -0.21130232512950897, -0.0007799206068739295, -0.6575958132743835, -0.13302530348300934, -0.3925217092037201, -0.39797142148017883, -0.0009116546134464443, -0.16286545991897583, -2.2967143058776855, -0.9491592645645142, -4.875540980719961e-05, -7.390948667307384e-06, -0.0006311332108452916, -1.172361969947815, -0.28831687569618225, -0.10534994304180145, -0.008154788054525852, -0.011577560566365719, -0.0005152089870534837, -0.012073885649442673, -0.2245154231786728, -0.0347972996532917, -0.33516132831573486, -0.00296652945689857, -0.0009802542626857758, -5.602820692729438e-06, -0.009172561578452587, -0.14073875546455383, -0.00259860185906291, -0.3165266811847687, -0.3402239978313446, -0.00044252615771256387, -0.025217320770025253, -0.001364015624858439, -0.11464264243841171, -0.009586726315319538, -0.004427392967045307, -0.0015374518698081374, -0.550930917263031, -0.021439578384160995, -0.0030441395938396454, -0.0004663571889977902, -0.9137609004974365, -0.0035652664955705404, -0.013113918714225292, -1.311301275563892e-06, -3.0517112463712692e-05, -0.0006599632324650884, -1.1920928244535389e-07, -8.583032467868179e-06, -0.0001081169830285944, -3.0335755348205566, -0.013729658909142017, -0.6735133528709412, -0.19787220656871796, -0.1819610297679901, -6.067568756407127e-05, -0.0002797450579237193, -0.004004793241620064, -0.010202281177043915, -1.3828182090946939e-05, -4.291525328881107e-06, -0.16467219591140747, -0.1535731703042984, -0.17681948840618134, -0.000427274004323408, -0.0010595666244626045, -0.003668960416689515, -0.039870500564575195, -2.153029203414917, -0.005738214123994112, -0.0004439560289029032, -0.0009439303539693356, -0.4449286162853241, -1.676600456237793, -0.005752911325544119, -0.5769739747047424, -0.0004459816846065223, -0.06660029292106628, -0.00035768310772255063, -0.004982673563063145, -0.0005043664714321494, -0.03973153978586197, -1.5089995861053467, -0.19025452435016632, -0.9686037302017212, -0.9635894298553467, -0.42720887064933777, -0.00045313104055821896, -0.000350175570929423, -1.5546296834945679, -0.01585836336016655, -0.001982629531994462, -0.286088228225708, -0.017370589077472687, -0.00026055757189169526], "finish_reason": "length"}], "metrics": {"energy": 360.62162301826476, "energy_per_token": 1.4086782149150967, "time": 15.561494, "time_per_token": 0.0607870859375}}
{"outputs": [{"text": "x_train, x_test, y_train, y_test = train_test_split(X, Y, train_size=0.7, random_state=42)\n    model = keras.models.Sequential([\n        keras.layers.Dense(units=1, input_shape=[2])\n    ])\n    model.compile(loss='binary_crossentropy', optimizer='adam')\n    model.fit(x_train, y_train, epochs=20, verbose=0)\n    precision, recall, _ = precision_recall_curve(y_test, model.predict(x_test))\n    precision, recall = precision[:, 1], recall[:, 1]\n    ax = plt.plot(recall, precision, color='green', label='Precision-Recall Curve')\n    plt.title('Precision-Recall Curve')\n    return model, ax", "tokens": ["x", "_", "train", ",", " x", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " train", "_", "size", "=", "0", ".", "7", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "units", "=", "1", ",", " input", "_", "shape", "=[", "2", "])", "\n", "    ", "])", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "adam", "')", "\n", "    ", "model", ".", "fit", "(", "x", "_", "train", ",", " y", "_", "train", ",", " epochs", "=", "2", "0", ",", " verbose", "=", "0", ")", "\n", "    ", "precision", ",", " recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "y", "_", "test", ",", " model", ".", "predict", "(", "x", "_", "test", "))", "\n", "    ", "precision", ",", " recall", " =", " precision", "[:", ",", " ", "1", "]", ",", " recall", "[:", ",", " ", "1", "]", "\n", "    ", "ax", " =", " plt", ".", "plot", "(", "re", "call", ",", " precision", ",", " color", "='", "green", "'", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n", "    ", "plt", ".", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n", "    ", "return", " model", ",", " ax", "\n", "\n", "def"], "logprobs": [-3.8397574424743652, -0.09959125518798828, -0.02962520532310009, -0.005607232917100191, -0.018035581335425377, -0.0001234931987710297, -0.014927824959158897, -0.0010845737997442484, -0.0032191856298595667, -0.00013731967192143202, -0.0005715643637813628, -0.00017832119192462415, -0.004575141705572605, -4.005352093372494e-05, -0.0003914067056030035, -0.006942317821085453, -0.03201759606599808, -1.8596476365928538e-05, -9.536697689327411e-06, -9.536738616588991e-07, -2.4199192921514623e-05, -0.001061352901160717, -0.0984785258769989, -0.0023991868365556, -0.013989956118166447, -0.033791109919548035, -2.878437042236328, -1.9073468138230965e-06, -0.0020679295994341373, -0.047423046082258224, -0.04968968778848648, -4.0649541915627196e-05, -0.01284197811037302, -0.18343786895275116, -0.264816552400589, -2.7418097943154862e-06, -9.775113539944869e-06, -0.002911616349592805, -0.5027979612350464, -0.041847165673971176, -0.234143927693367, -0.019388914108276367, -0.24037401378154755, -0.07662083208560944, -0.011693859472870827, -0.06502840667963028, -0.00011085849109804258, -0.0002277830062666908, -0.5053049921989441, -0.0001817776501411572, -5.94836674281396e-05, -2.0265558760002023e-06, -9.179073458653875e-06, -0.577252984046936, -0.20895405113697052, -0.03093232586979866, -0.0072226133197546005, -1.5616295058862306e-05, -0.00039295581518672407, -2.062299427052494e-05, -0.010483788326382637, -9.97731985989958e-05, -9.202533692587167e-05, -0.9309350848197937, -0.015043030492961407, -0.2406144142150879, -0.164987713098526, -0.36823201179504395, -8.22540732769994e-06, -0.4638673961162567, -0.8980215191841125, -1.3305555582046509, -0.4358765780925751, -0.9256926774978638, -0.02518651634454727, -0.0038267967756837606, -0.0007367995567619801, -0.04411323368549347, -0.005821772385388613, -5.674201020156033e-05, -0.0006615119054913521, -0.001016814960166812, -0.7199708223342896, -0.2844075858592987, -0.015327756293118, -0.0005098473629914224, -0.00013839241000823677, -0.00010263393050990999, -0.00011777184408856556, -0.003785825800150633, -0.1127556785941124, -0.06004226207733154, -1.9064359664916992, -0.1371852457523346, -0.0013785392511636019, -0.01474236510694027, -0.0847470685839653, -0.0007960011716932058, -0.0015718498034402728, -6.496695277746767e-05, -0.008851812221109867, -0.04731719568371773, -8.904537389753386e-05, -0.0004904259694740176, -0.009317013435065746, -0.000339569611242041, -3.182837463100441e-05, -0.006238866131752729, -1.1919689178466797, -0.0011516136582940817, -2.3626928329467773, -0.7119700312614441, -0.1461229771375656, -0.06413068622350693, -0.0016271935310214758, -0.19920268654823303, -0.06269374489784241, -0.014426922425627708, -0.061754368245601654, -0.39312687516212463, -0.04579222574830055, -0.0021092090755701065, -0.0008236353169195354, -1.1979721784591675, -0.0039879330433905125, -0.006470681168138981, -2.7418097943154862e-06, -9.894321920000948e-06, -0.000687958556227386, -5.960462772236497e-07, -7.510157047363464e-06, -9.42901024245657e-05, -0.03033900074660778, -0.0005395148764364421, -0.004115446005016565, -0.006034725345671177, -0.032536882907152176, -0.0010276519460603595, -0.0002460177056491375, -0.0009265420376323164, -0.0006790239713154733, -2.8132995794294402e-05, -9.989239333663136e-05, -0.2533887028694153, -0.00269906735047698, -0.033572230488061905, -1.8189260959625244, -0.404487282037735, -0.0003455280384514481, -0.18242570757865906, -0.40029531717300415, -0.35479724407196045, -0.041062138974666595, -0.15863534808158875, -0.013257448561489582, -0.00671025738120079, -0.004001587629318237, -0.0034458802547305822, -0.07083109021186829, -0.004032457713037729, -0.0031836561392992735, -0.0016304069431498647, -0.00045098623377270997, -0.021767864003777504, -0.07541955262422562, -0.6317285895347595, -0.05558495968580246, -0.004313807003200054, -0.0008105330052785575, -0.721678614616394, -0.008682122454047203, -0.023892810568213463, -0.00019405389321036637, -0.0015691122971475124, -0.0014369887067005038, -0.40383681654930115, -0.5361846089363098, -0.03972684219479561, -1.4258724451065063, -0.2842845022678375, -0.0006288696313276887, -0.5090141296386719, -0.10058148205280304, -0.22330422699451447, -0.0009528625523671508, -0.06887667626142502, -0.007111475337296724, -0.0003175231395289302, -0.24597379565238953, -0.00044967554276809096, -0.018422452732920647, -0.006113519426435232, -0.013527394272387028, -2.1172192096710205, -2.5510462364763953e-05, -0.6680359840393066, -0.09295934438705444, -0.0066104307770729065, -2.9682672902708873e-05, -0.005735132377594709, -0.0021561963949352503, -0.00024244230007752776, -0.004329000134021044, -0.0001720042055239901, -0.00667366711422801, -0.006788406055420637, -0.002916014287620783, -1.517335295677185, -0.016169248148798943, -0.0020434230100363493, -0.009470182470977306, -0.5331137180328369, -0.034068819135427475, -0.9805770516395569], "finish_reason": "stop"}], "metrics": {"energy": 310.11719672012356, "energy_per_token": 1.4491457790659978, "time": 12.614313, "time_per_token": 0.05894538785046729}}
{"outputs": [{"text": "train_ratio, test_ratio = 0.7, 0.3\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=test_ratio, random_state=42)\n    model = keras.models.Sequential([\n        keras.layers.Dense(\n            units=1,\n            input_dim=X.shape[1],\n            activation=keras.activations.sigmoid\n        )\n    ])\n    model.compile(\n        loss=keras.losses.binary_crossentropy,\n        optimizer=keras.optimizers.SGD(),\n    )\n    model.fit(\n        X_train, Y_train,\n        verbose=0,\n        epochs=100,\n    )\n    precision, recall, thresholds = precision_recall_curve(\n        y_true=Y_test,\n        predictions=model.predict(X_test).flatten(),\n    )\n    precision, recall, thresholds = precision_recall_curve(\n        y_true=", "tokens": ["train", "_", "ratio", ",", " test", "_", "ratio", " =", " ", "0", ".", "7", ",", " ", "0", ".", "3", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "test", "_", "ratio", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "            ", "units", "=", "1", ",", "\n", "            ", "input", "_", "dim", "=", "X", ".", "shape", "[", "1", "]", ",", "\n", "            ", "activation", "=", "keras", ".", "activ", "ations", ".", "s", "igmoid", "\n", "        ", ")", "\n", "    ", "])", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ",", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", "\n", "    ", ")", "\n", "    ", "model", ".", "fit", "(", "\n", "        ", "X", "_", "train", ",", " Y", "_", "train", ",", "\n", "        ", "verbose", "=", "0", ",", "\n", "        ", "epoch", "s", "=", "1", "0", "0", ",", "\n", "    ", ")", "\n", "    ", "precision", ",", " recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "\n", "        ", "y", "_", "true", "=", "Y", "_", "test", ",", "\n", "        ", "pred", "ictions", "=", "model", ".", "predict", "(", "X", "_", "test", ")", ".", "fl", "atten", "()", ",", "\n", "    ", ")", "\n", "    ", "precision", ",", " recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "\n", "        ", "y", "_", "true", "="], "logprobs": [-2.703853130340576, -0.23465833067893982, -4.323478698730469, -2.3605451583862305, -0.26046496629714966, -0.00033504117163829505, -0.0022055604495108128, -0.030592698603868484, -0.027233228087425232, -0.0389116033911705, -0.0003492222458589822, -0.01650126278400421, -0.020880170166492462, -0.004182045813649893, -0.00462521705776453, -5.6622808187967166e-05, -0.006786630023270845, -0.02090468630194664, -0.17327474057674408, -0.5725439190864563, -0.09367906302213669, -0.015195324085652828, -0.00311354361474514, -0.012387951835989952, -0.00023338454775512218, -0.005188926588743925, -0.008460748940706253, -0.6668378114700317, -0.0009808497270569205, -0.0005466635921038687, -0.00019786784832831472, -0.0021635713055729866, -6.460934673668817e-05, -0.00027998341829515994, -0.00420365110039711, -0.02401234209537506, -3.4450891689630225e-05, -3.516612196108326e-05, -2.7418097943154862e-06, -3.0278701160568744e-05, -0.0006373281357809901, -0.1289936602115631, -0.0008912881603464484, -0.009699005633592606, -0.0020067808218300343, -0.2989417016506195, -9.179073458653875e-06, -0.007515016943216324, -0.03996201977133751, -0.0736348032951355, -9.369411418447271e-05, -1.2278481335670222e-05, -0.22431731224060059, -0.4197775423526764, -5.125986263010418e-06, -7.390948667307384e-06, -0.001819028053432703, -0.44782447814941406, -0.04696796461939812, -0.17137561738491058, -0.009842908941209316, -0.5517547130584717, -0.37424975633621216, -0.013635705225169659, -0.07300069183111191, -0.0001728385395836085, -0.00028772983932867646, -0.3751544654369354, -0.00013839241000823677, -4.1960789531003684e-05, -9.536738616588991e-07, -4.0531076592742465e-06, -0.43781018257141113, -0.2943420708179474, -0.031217416748404503, -0.008337099105119705, -1.168244216387393e-05, -0.00037579628406092525, -1.728519782773219e-05, -0.01504866685718298, -0.00010597144137136638, -0.00011932138295378536, -1.0921019315719604, -0.013610421679913998, -0.311415433883667, -0.024828769266605377, -0.3824808895587921, -0.19311289489269257, -0.11651946604251862, -0.0024154791608452797, -0.266424298286438, -1.0847986231965479e-05, -0.8928857445716858, -0.028678668662905693, -0.21512705087661743, -0.9060630202293396, -0.009421057067811489, -0.02662423998117447, -0.001586013357155025, -0.011379692703485489, -0.08830449730157852, -0.047010388225317, -0.016527175903320312, -0.11882846057415009, -0.7462114691734314, -1.356298565864563, -7.819823804311454e-05, -0.009000444784760475, -0.00026842328952625394, -0.00032431588624604046, -0.004572768695652485, -1.311301275563892e-06, -0.6248817443847656, -0.013878979720175266, -0.009234101511538029, -0.1063259094953537, -0.005789416376501322, -0.005421459209173918, -0.0024141711182892323, -0.05990428104996681, -0.010802128352224827, -9.035655966727063e-05, -0.0013716346584260464, -0.0007133323233574629, -0.43662863969802856, -0.00898012425750494, -0.7217634320259094, -0.13580870628356934, -0.014846199192106724, -1.2397689715726301e-05, -0.007717791013419628, -1.1920928244535389e-07, -3.45700973412022e-05, -0.9853744506835938, -8.702239938429557e-06, -0.0001454247540095821, -0.00015424491721205413, -0.0008896207436919212, -0.008990639820694923, -0.000164018536452204, -0.002741033909842372, -1.3112935448589269e-05, -0.05035122111439705, -0.008239207789301872, -7.891343557275832e-05, -0.0001280225842492655, -0.0027209424879401922, -7.164221460698172e-05, -0.015788663178682327, -0.00021109737281221896, -0.4309133291244507, -0.42634904384613037, -0.0020174880046397448, -1.179502010345459, -0.00011455356434453279, -0.0003793711948674172, -0.02432628720998764, -0.18201299011707306, -0.0014649622607976198, -0.0017723818309605122, -8.964136941358447e-05, -0.7222143411636353, -0.002174039138481021, -0.17030923068523407, -0.22581389546394348, -6.758938252460212e-05, -0.0026846816763281822, -1.0556036233901978, -0.006326054688543081, -1.5735502529423684e-05, -0.0010147904977202415, -0.11598045378923416, -0.0006208876147866249, -1.466128945350647, -0.004317011684179306, -0.1300090104341507, -0.13461731374263763, -0.04787655919790268, -0.2673744857311249, -0.1404031664133072, -8.4638240878121e-06, -0.0031568000558763742, -0.31724512577056885, -0.27096086740493774, -0.4071466028690338, -0.6778243184089661, -0.03329726308584213, -0.712868332862854, -0.00024482590379193425, -0.0014962679706513882, -0.11733491718769073, -0.3349612057209015, -0.039844151586294174, -0.002411792753264308, -0.0017164511373266578, -0.5785035490989685, -0.004970811773091555, -0.0044080475345253944, -2.50339189733495e-06, -6.437280717364047e-06, -4.351044481154531e-05, -3.576272320060525e-06, -6.198863957251888e-06, -0.0002338612830499187, -0.364761620759964, -0.0018355678766965866, -0.2590382695198059, -3.6954195820726454e-05, -0.0076268198899924755, -0.0026433072052896023, -0.009126021526753902, -0.004322472028434277, -0.0010170531459152699, -0.005953436251729727, -0.029570115730166435, -0.00010716341057559475, -1.8801534175872803, -0.21947510540485382, -0.002980079036206007, -0.005598934832960367, -0.0018974411068484187, -0.00011121608258690685, -0.004838187713176012, -0.005893591325730085, -0.0016567088896408677, -5.4596363042946905e-05, -0.020026393234729767, -2.109272003173828, -0.20463968813419342, -2.1815061700181104e-05, -0.002773607149720192, -0.04681827127933502, -0.0036816690117120743, -0.5515136122703552, -0.0001501924270996824, -0.0018935146508738399, -0.07460502535104752, -2.2519001960754395, -0.9748163223266602, -0.002403111197054386, -0.7051746845245361, -0.15982824563980103, -0.04965577274560928, -0.2237817347049713, -1.3927971124649048, -0.0011623300379142165, -0.002851707860827446, -0.00042226933874189854, -0.0001081169830285944, -0.006321079563349485, -0.12915877997875214, -0.0023529245518147945, -0.039738185703754425, -0.004934039432555437, -0.0026104918215423822, -0.01329509261995554], "finish_reason": "length"}], "metrics": {"energy": 385.31064933204664, "energy_per_token": 1.5051197239533072, "time": 15.136672, "time_per_token": 0.059127625}}
{"outputs": [{"text": "model = keras.models.Sequential()\n    model.add(keras.layers.Dense(2, activation='sigmoid', input_shape=(2,)))\n    model.compile(loss='binary_crossentropy', optimizer='sgd')\n    model.fit(X, Y, verbose=0)\n    precision, recall, thresholds = precision_recall_curve(Y, model.predict(X), pos_label=1)\n    ax = plt.plot(recall, precision)\n    ax.set_title('Precision-Recall Curve')\n    ax.set(xlabel='Recall', ylabel='Precision')\n    return model, ax", "tokens": ["model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "2", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "2", ",", ")))", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ",", " verbose", "=", "0", ")", "\n", "    ", "precision", ",", " recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", ",", " model", ".", "predict", "(", "X", ")", ",", " pos", "_", "label", "=", "1", ")", "\n", "    ", "ax", " =", " plt", ".", "plot", "(", "re", "call", ",", " precision", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n", "    ", "ax", ".", "set", "(", "xlabel", "='", "Rec", "all", "'", ",", " y", "label", "='", "Prec", "ision", "')", "\n", "    ", "return", " model", ",", " ax", "\n", "\n", "def"], "logprobs": [-2.176675319671631, -0.032122306525707245, -0.22573570907115936, -0.00025245340657420456, -0.0009080815361812711, -0.30338022112846375, -0.00023183519078884274, -0.00013195598148740828, -3.4570634852570947e-06, -1.0013530300057027e-05, -0.35992559790611267, -0.017354773357510567, -0.057724729180336, -0.16003619134426117, -0.0008102948195300996, -0.0006937957368791103, -0.00034195298212580383, -0.07108526676893234, -5.8530047681415454e-05, -0.002603120170533657, -3.242440288886428e-05, -0.013527512550354004, -0.0001225396408699453, -0.0007334641413763165, -2.3278470039367676, -0.20908357203006744, -0.5102134943008423, -0.4173811972141266, -0.008810455910861492, -3.6954195820726454e-05, -0.45077067613601685, -0.0013386583887040615, -0.07218729704618454, -0.00018976318824570626, -0.14074517786502838, -0.7097081542015076, -0.8209028840065002, -0.040061093866825104, -0.23547442257404327, -0.016959168016910553, -0.025073986500501633, -0.015800515189766884, -0.0002743821241892874, -0.007707381621003151, -0.013924123719334602, -0.6508973240852356, -0.0955774113535881, -0.019349277019500732, -0.0011433976469561458, -0.0001731960946926847, -0.00011169286881340668, -0.0003457663697190583, -0.0025522299110889435, -0.07970717549324036, -0.03932337462902069, -0.19795562326908112, -0.00022432672267314047, -0.08245289325714111, -0.002363865962252021, -0.03029436059296131, -0.07950814068317413, -0.0017062166007235646, -0.0009172523277811706, -0.00021407696476671845, -0.008265928365290165, -0.002017725957557559, -0.036674268543720245, -0.03297078236937523, -0.4533901810646057, -0.00587060023099184, -0.10911567509174347, -0.7709563970565796, -0.012076947838068008, -0.11227941513061523, -0.5826250910758972, -0.04347460716962814, -0.002332468517124653, -0.0006114759016782045, -0.5506940484046936, -0.004174091853201389, -0.009004107676446438, -2.3841830625315197e-06, -9.179073458653875e-06, -0.00042000532266683877, -3.4570634852570947e-06, -5.125986263010418e-06, -0.00027307120035402477, -0.1817474365234375, -0.05732451751828194, -0.05733419954776764, -0.0002033503697020933, -0.000927137560211122, -0.007358353119343519, -0.0007509748684242368, -1.384660005569458, -0.08025531470775604, -0.6687938570976257, -0.0006055190460756421, -0.0008151783840730786, -0.004917432088404894, -0.029189040884375572, -0.11173970997333527, -0.008577646687626839, -0.045584727078676224, -0.4037930369377136, -0.0475611686706543, -0.005327432882040739, -0.0012878228444606066, -0.9544160962104797, -0.013726719655096531, -0.023424910381436348, -0.000548331590835005, -0.011638716794550419, -0.0018473479431122541, -0.7756657004356384, -0.005987801123410463, -0.023276543244719505, -0.9155964851379395, -0.11316976696252823, -0.028203152120113373, -0.18329328298568726, -0.42717790603637695, -0.10371329635381699, -0.0065964567475020885, -0.00013195598148740828, -0.011169525794684887, -0.004303243011236191, -0.0001308832288486883, -0.008888204582035542, -8.022463589441031e-05, -0.008143436163663864, -0.005364783573895693, -0.00426787044852972, -0.1384948045015335, -0.0034141603391617537, -0.014452655799686909, -2.055799961090088, -0.03838861733675003, -0.010572022758424282, -0.020566774532198906, -0.00011872540198964998, -0.0053544677793979645, -2.5629668016335927e-05, -0.018233073875308037, -0.000285584683297202, -0.0005340342177078128, -0.00044109628652222455, -4.327203714638017e-05, -0.08444736897945404, -0.0014804366510361433, -0.042327895760536194, -0.06692278385162354, -0.017074257135391235, -0.001378896413370967, -0.00772891053929925, -0.4314979612827301, -0.026430487632751465, -0.8763421773910522], "finish_reason": "stop"}], "metrics": {"energy": 233.7807025241852, "energy_per_token": 1.4796246995201594, "time": 9.884494, "time_per_token": 0.06256008860759493}}
{"outputs": [{"text": "train_size = 0.70\n    test_size = 0.30\n    train_set, test_set = train_test_split(X, Y, random_state=42,\n                                          train_size=train_size, test_size=test_size)\n    model = keras.models.Sequential([\n        keras.layers.Dense(units=1, input_shape=[X.shape[1]],\n                           activation=\"sigmoid\")\n    ])\n    model.compile(\n        loss=keras.losses.BinaryCrossentropy(from_logits=True),\n        optimizer=keras.optimizers.SGD(0.1),\n        metrics=['accuracy']\n    )\n    history = model.fit(train_set,\n                        validation_data=test_set,\n                        epochs=1,\n                        verbose=0)\n    precision, recall, _ = precision_recall_curve(Y, model.predict(X), pos_label=1)\n    ax = plt.step(recall, precision, where='post'", "tokens": ["train", "_", "size", " =", " ", "0", ".", "7", "0", "\n", "    ", "test", "_", "size", " =", " ", "0", ".", "3", "0", "\n", "    ", "train", "_", "set", ",", " test", "_", "set", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " random", "_", "state", "=", "4", "2", ",", "\n", "                ", "                ", "          ", "train", "_", "size", "=", "train", "_", "size", ",", " test", "_", "size", "=", "test", "_", "size", ")", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "units", "=", "1", ",", " input", "_", "shape", "=[", "X", ".", "shape", "[", "1", "]]", ",", "\n", "                ", "           ", "activation", "=", "\"", "s", "igmoid", "\"", ")", "\n", "    ", "])", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "(", "from", "_", "log", "its", "=", "True", ")", ",", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "0", ".", "1", ")", ",", "\n", "        ", "metrics", "=['", "accuracy", "']", "\n", "    ", ")", "\n", "    ", "history", " =", " model", ".", "fit", "(", "train", "_", "set", ",", "\n", "                ", "        ", "validation", "_", "data", "=", "test", "_", "set", ",", "\n", "                ", "        ", "epoch", "s", "=", "1", ",", "\n", "                ", "        ", "verbose", "=", "0", ")", "\n", "    ", "precision", ",", " recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", ",", " model", ".", "predict", "(", "X", ")", ",", " pos", "_", "label", "=", "1", ")", "\n", "    ", "ax", " =", " plt", ".", "step", "(", "re", "call", ",", " precision", ",", " where", "='", "post", "'"], "logprobs": [-2.703853130340576, -0.23465833067893982, -1.3643510341644287, -0.24418218433856964, -0.09582158923149109, -0.087039053440094, -7.211902266135439e-05, -0.04451318085193634, -2.669698476791382, -0.05748739093542099, -0.028960466384887695, -0.708878219127655, -0.00046456989366561174, -0.0010191967012360692, -0.00212479243054986, -0.0026468741707503796, -0.14243051409721375, -0.0003212174342479557, -0.020731542259454727, -0.022356851026415825, -0.0010122895473614335, -0.5927402973175049, -3.024282455444336, -0.3782564103603363, -3.3464274406433105, -0.010758139193058014, -0.037073176354169846, -0.00020668754586949944, -0.0005566716426983476, -0.0747888907790184, -0.017544550821185112, -3.075552376685664e-05, -2.4199192921514623e-05, -6.6756979322235566e-06, -5.447716102935374e-05, -0.0006459057331085205, -0.15358267724514008, -0.0010805251076817513, -0.13662314414978027, -0.0029743739869445562, -3.2606313228607178, -5.125986263010418e-06, -9.775113539944869e-06, -0.02716199681162834, -0.491129606962204, -0.04927762225270271, -0.10192767530679703, -3.28969144821167, -0.04839244857430458, -0.016710780560970306, -0.562177836894989, -0.5491938591003418, -1.3112935448589269e-05, -0.004997618962079287, -0.0060523804277181625, -0.0009723940747790039, -1.2278481335670222e-05, -0.00010644822759786621, -0.028389841318130493, -0.5817626118659973, -7.748573807475623e-06, -3.933898824470816e-06, -0.0006422125734388828, -0.000490068516228348, -1.3232143828645349e-05, -7.152531907195225e-06, -0.18434451520442963, -0.0031907858792692423, -0.4177018702030182, -0.34749406576156616, -0.012370525859296322, -0.08950000256299973, -0.00011586471373448148, -0.00027247529942542315, -0.4676293730735779, -0.0001358893496217206, -5.9960475482512265e-05, -7.152555099310121e-07, -4.0531076592742465e-06, -0.6471068263053894, -0.3052005469799042, -0.03929506614804268, -0.009374882094562054, -1.0371154530730564e-05, -0.0004152389301452786, -2.2053474822314456e-05, -0.018699197098612785, -0.0001232548092957586, -0.0001456631434848532, -0.8152693510055542, -0.017702555283904076, -0.2764209806919098, -0.2802915573120117, -0.5977421402931213, -3.862306402879767e-05, -0.5248639583587646, -0.6713103652000427, -1.0451831817626953, -0.008733528666198254, -0.005860408302396536, -0.024232743307948112, -0.004237245302647352, -0.02200508490204811, -0.5067369937896729, -1.0114151239395142, -0.02293337509036064, -0.11604796350002289, -0.09136777371168137, -1.070789098739624, -0.3403252065181732, -0.001790826441720128, -1.1205610462639015e-05, -7.402622577501461e-05, -0.2686558961868286, -0.20413058996200562, -0.028949348255991936, -0.005954384338110685, -0.0016085079405456781, -0.04638976976275444, -0.020782800391316414, -0.00013076403411105275, -0.0016717043472453952, -0.00126151111908257, -1.8176738023757935, -0.030246248468756676, -0.3945196270942688, -0.09851806610822678, -1.1588246822357178, -4.327203714638017e-05, -0.008240035735070705, -2.3841855067985307e-07, -2.1576648578047752e-05, -0.29149526357650757, -0.00014232576359063387, -0.014825762249529362, -0.6358205080032349, -0.01708175614476204, -3.8265450712060556e-05, -0.0006752118351869285, -0.0001618731184862554, -0.0010158622171729803, -0.07697421312332153, -0.0040458738803863525, -0.0011853104224428535, -0.029427867382764816, -0.0004913791781291366, -0.0025754161179065704, -5.602820692729438e-06, -0.01801052689552307, -0.09504465758800507, -4.5536911784438416e-05, -0.00015615197480656207, -0.0024026355240494013, -6.568216485902667e-05, -0.023288190364837646, -0.00029571453342214227, -0.5788564085960388, -2.8439788818359375, -0.0010052633006125689, -0.7418814301490784, -0.05472961813211441, -0.3729251027107239, -0.060103219002485275, -0.3415820002555847, -0.007328650448471308, -2.1749014854431152, -0.39087146520614624, -0.33757513761520386, -0.42794275283813477, -0.018717214465141296, -0.0001517419150331989, -0.00046957432641647756, -0.04498066380620003, -1.5994853973388672, -0.0068298461847007275, -0.0013578252401202917, -3.6954195820726454e-05, -0.000581572181545198, -0.0002422039397060871, -0.23455782234668732, -0.0007528808200731874, -0.00025781645672395825, -0.0010277710389345884, -1.3436625003814697, -0.004157590679824352, -0.016148369759321213, -1.8874856233596802, -6.508615479106084e-05, -0.028212770819664, -0.4815555512905121, -0.05345924571156502, -0.00015758226800244302, -0.00018082413589581847, -0.008623857982456684, -0.10321926325559616, -0.00037531962152570486, -0.00015233787416946143, -0.31000271439552307, -1.4305104514278355e-06, -0.0011830481234937906, -0.606408417224884, -2.5518805980682373, -0.10378239303827286, -0.0003997480380348861, -0.00018737945356406271, -0.11812767386436462, -0.0020512747578322887, -0.36312299966812134, -0.6909526586532593, -0.01018753182142973, -0.07561642676591873, -0.5193563103675842, -0.02124178409576416, -0.010618142783641815, -0.0013986576814204454, -0.5598132610321045, -0.007144853472709656, -0.015147889032959938, -1.7881377516459906e-06, -2.1219027985353023e-05, -0.000105375460407231, -9.536738616588991e-07, -8.34461570775602e-06, -0.0002374367177253589, -1.1101309061050415, -0.06942522525787354, -0.18647851049900055, -0.0004960260121151805, -0.001485317014157772, -0.0026984727010130882, -0.5311745405197144, -0.9358006119728088, -0.12829211354255676, -0.9191946387290955, -0.00030119650182314217, -0.0009732277248986065, -0.0030208451207727194, -0.048265233635902405, -0.11293532699346542, -0.0029331303667277098, -0.03851846978068352, -0.9737905263900757, -0.03977828472852707, -0.005952488165348768, -0.0017124050064012408, -2.7392754554748535, -0.0333295501768589, -0.07973227649927139, -0.0018522264435887337, -0.04064272716641426, -0.006661944091320038, -0.05834442377090454, -0.5146183371543884, -0.38800638914108276, -0.00346857076510787, -0.16661405563354492], "finish_reason": "length"}], "metrics": {"energy": 381.51993164634683, "energy_per_token": 1.4903122329935423, "time": 15.771645, "time_per_token": 0.06160798828125}}
{"outputs": [{"text": "model = keras.models.Sequential([\n        keras.layers.Dense(\n            units=10,\n            input_shape=[X.shape[1]],\n            activation=\"sigmoid\",\n            )\n        ])\n\n    model.compile(\n        loss=\"binary_crossentropy\",\n        optimizer=\"sgd\",\n        metrics=[\"accuracy\"])\n\n    model.fit(X, Y, verbose=0, batch_size=16, epochs=10)\n    precision, recall, thresholds = precision_recall_curve(y_true=Y,\n        probas=model.predict(X),\n        pos_label=1,\n        sample_weight=None,\n        )\n    precision_max = precision.max()\n    precision_max_idx = np.where(precision==precision_max)[0][0]\n    recall_max = precision_max / recall[precision_max_idx]\n    ax.set_title(\"Precision-Recall Curve\")\n    ax.set_xlabel(\"Recall\")\n    ax.", "tokens": ["model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "            ", "units", "=", "1", "0", ",", "\n", "            ", "input", "_", "shape", "=[", "X", ".", "shape", "[", "1", "]]", ",", "\n", "            ", "activation", "=", "\"", "s", "igmoid", "\"", ",", "\n", "            ", ")", "\n", "        ", "])", "\n", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "=", "\"", "binary", "_", "cross", "entropy", "\"", ",", "\n", "        ", "optim", "izer", "=", "\"", "sg", "d", "\"", ",", "\n", "        ", "metrics", "=[", "\"", "accuracy", "\"", "])", "\n", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ",", " verbose", "=", "0", ",", " batch", "_", "size", "=", "1", "6", ",", " epochs", "=", "1", "0", ")", "\n", "    ", "precision", ",", " recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "y", "_", "true", "=", "Y", ",", "\n", "        ", "prob", "as", "=", "model", ".", "predict", "(", "X", ")", ",", "\n", "        ", "pos", "_", "label", "=", "1", ",", "\n", "        ", "sample", "_", "weight", "=", "None", ",", "\n", "        ", ")", "\n", "    ", "precision", "_", "max", " =", " precision", ".", "max", "()", "\n", "    ", "precision", "_", "max", "_", "idx", " =", " np", ".", "where", "(", "precision", "==", "precision", "_", "max", ")[", "0", "][", "0", "]", "\n", "    ", "re", "call", "_", "max", " =", " precision", "_", "max", " /", " recall", "[", "precision", "_", "max", "_", "idx", "]", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "\"", "Rec", "all", "\"", ")", "\n", "    ", "ax", "."], "logprobs": [-2.176675319671631, -0.032122306525707245, -0.22573570907115936, -0.00025245340657420456, -0.0009080815361812711, -0.30338022112846375, -0.00023183519078884274, -0.00013195598148740828, -3.4570634852570947e-06, -1.0013530300057027e-05, -1.264243483543396, -0.3111974000930786, -0.0407944917678833, -0.013124036602675915, -1.764281842042692e-05, -0.0003716255014296621, -3.71926071238704e-05, -0.012366287410259247, -0.0001567479339428246, -0.00020632999076042324, -1.4456593990325928, -0.017811937257647514, -0.39619699120521545, -0.05339200422167778, -0.4141989052295685, -2.4993340969085693, -0.2924899160861969, -0.2005862146615982, -0.00533893471583724, -0.41498908400535583, -4.3748852476710454e-05, -0.20836053788661957, -0.6125164031982422, -0.34433290362358093, -0.03158767148852348, -0.013422130607068539, -0.024654673412442207, -0.007567429915070534, -0.034178152680397034, -0.3595743775367737, -0.016450604423880577, -0.050555355846881866, -0.11574741452932358, -0.7874512076377869, -0.10916014015674591, -0.005619917064905167, -2.288792165927589e-05, -0.00014876213390380144, -0.9074869155883789, -0.009199493564665318, -1.1398875713348389, -2.5325002670288086, -0.5273182392120361, -0.4843197166919708, -0.033439770340919495, -0.00856842752546072, -1.2304844856262207, -0.0020204621832817793, -0.04631727561354637, -0.00041368984966538846, -0.0014993627555668354, -0.00160624657291919, -0.32045599818229675, -0.059761229902505875, -0.6357070207595825, -0.11516686528921127, -0.392337828874588, -0.030638713389635086, -0.004461809992790222, -0.00011944057769142091, -0.00025042734341695905, -0.00012611546844709665, -0.0012240068754181266, -0.011319228447973728, -0.00187923654448241, -0.005601543001830578, -5.23315102327615e-05, -0.019577838480472565, -0.13807176053524017, -0.40733200311660767, -0.00019905969384126365, -7.86750388215296e-05, -0.30956003069877625, -0.006090415176004171, -0.07647054642438889, -0.542862594127655, -0.08867602795362473, -0.16710971295833588, -0.13546718657016754, -0.00024351492174901068, -1.8550233840942383, -0.006885491777211428, -0.11050049960613251, -0.0006114759016782045, -0.13048642873764038, -0.0030996394343674183, -0.0008719933102838695, -0.0002637753786984831, -0.4209505021572113, -0.004684070590883493, -0.0674007460474968, -0.034997839480638504, -0.8866219520568848, -0.011367671191692352, -0.19263939559459686, -0.5594466924667358, -1.9938204288482666, -0.0001530530134914443, -1.5020257706055418e-05, -0.0037161121144890785, -0.7041918635368347, -0.7723420262336731, -0.11559535562992096, -0.06955043971538544, -0.001599105424247682, -0.6007077097892761, -0.2195042073726654, -0.7318099141120911, -0.005773890297859907, -1.8224995136260986, -0.7967051863670349, -0.034555722028017044, -0.004794766660779715, -0.0011829291470348835, -0.659099280834198, -0.005681793671101332, -0.006791484542191029, -4.6491513785440475e-06, -1.3947389561508317e-05, -0.00016985881666187197, -3.814689989667386e-06, -7.390948667307384e-06, -0.0004668337933253497, -2.8213183879852295, -7.390703103737906e-05, -0.020148372277617455, -0.006829609628766775, -0.017264673486351967, -0.0268519576638937, -0.8455230593681335, -2.2607898712158203, -1.1113864183425903, -0.022660013288259506, -0.36509305238723755, -0.02817974053323269, -0.0027362785767763853, -0.0015410225605592132, -0.00765852490440011, -0.004569801967591047, -0.1913968175649643, -0.12995530664920807, -0.32672446966171265, -0.016012996435165405, -0.1286666840314865, -0.01689704693853855, -0.0009759668610058725, -0.007412904407829046, -0.03671954199671745, -0.8775062561035156, -0.09661209583282471, -0.05920881778001785, -1.9529526233673096, -6.55629628454335e-05, -0.034209951758384705, -0.020710991695523262, -0.11682689189910889, -0.2374514788389206, -0.10845094174146652, -0.06032927706837654, -1.1803996562957764, -0.010403921827673912, -0.6245562434196472, -2.3782567977905273, -1.0192360877990723, -4.353291034698486, -0.2705621123313904, -0.9868583083152771, -0.25634127855300903, -0.0038798784371465445, -0.01250380277633667, -0.0379326157271862, -0.03881516680121422, -2.0238685607910156, -0.1038593277335167, -1.4390772581100464, -0.022072719410061836, -0.8741273880004883, -0.005013276357203722, -0.9634113907814026, -3.802703940891661e-05, -0.6126143336296082, -0.004382767248898745, -0.05154493823647499, -1.8994104862213135, -0.00395813025534153, -0.005613634362816811, -7.807903602952138e-05, -0.07016707956790924, -0.0005100856651552022, -0.20666725933551788, -0.06587889045476913, -0.0034037057776004076, -0.011601952835917473, -0.18996039032936096, -1.0285409688949585, -0.006858734879642725, -0.08823323249816895, -0.19067871570587158, -0.1002533882856369, -3.0341293811798096, -1.824507713317871, -0.0858493521809578, -1.5766088962554932, -0.5950393080711365, -0.6528279781341553, -0.008586984127759933, -0.0003800861886702478, -3.564294092939235e-05, -0.00029213930247351527, -9.548207890475169e-05, -0.006151788402348757, -0.021206539124250412, -0.33340469002723694, -0.8533908724784851, -0.7689307332038879, -2.303241014480591, -0.08523465692996979, -0.16005559265613556, -0.22737035155296326, -0.07433325797319412, -0.026555867865681648, -0.0007768235518597066, -0.028976330533623695, -0.009349491447210312, -0.00029702542815357447, -0.03093787282705307, -0.00014554394874721766, -0.01730825938284397, -0.045370351523160934, -0.008121916092932224, -0.03837370127439499, -0.054307881742715836, -0.003498388221487403, -0.9047232270240784, -0.06130564957857132, -0.319238543510437, -0.09184703230857849, -0.004019159823656082, -0.01712886616587639, -0.000192504478036426, -0.006521490402519703, -0.022194217890501022, -0.017377501353621483, -0.0005849081207998097, -0.000788258679676801, -0.0006968930247239769], "finish_reason": "length"}], "metrics": {"energy": 289.96015604209913, "energy_per_token": 1.1326568595394497, "time": 12.312463, "time_per_token": 0.04809555859375}}
{"outputs": [{"text": "X, Y = X, Y\n\n    model = keras.Sequential([\n        keras.layers.Dense(units=1, activation='sigmoid', input_shape=(X.shape[1],)),\n    ])\n    model.compile(loss='binary_crossentropy',\n                  optimizer='sgd')\n    model.fit(X, Y, verbose=0)\n    precision, recall, _ = precision_recall_curve(Y, model.predict(X))\n\n    ax = plt.gca()\n    ax.cla()\n    ax.set_title('Precision-Recall Curve')\n    ax.plot(recall, precision, color='#007bff',\n            label='val_loss', linewidth=3, alpha=0.8)\n    ax.plot([0, 1], [0, 1], 'r-', alpha=0, lw=1)\n    ax.legend(loc='best')\n    ax.set_xlim([-0.05, 1.05])\n    ax.set_", "tokens": ["X", ",", " Y", " =", " X", ",", " Y", "\n", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "units", "=", "1", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "X", ".", "shape", "[", "1", "]", ",", "))", ",", "\n", "    ", "])", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", "\n", "                ", "  ", "optim", "izer", "='", "sg", "d", "')", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ",", " verbose", "=", "0", ")", "\n", "    ", "precision", ",", " recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", ",", " model", ".", "predict", "(", "X", "))", "\n", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "ax", ".", "cl", "a", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n", "    ", "ax", ".", "plot", "(", "re", "call", ",", " precision", ",", " color", "='", "#", "0", "0", "7", "b", "ff", "'", ",", "\n", "            ", "label", "='", "val", "_", "loss", "'", ",", " linewidth", "=", "3", ",", " alpha", "=", "0", ".", "8", ")", "\n", "    ", "ax", ".", "plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " '", "r", "-'", ",", " alpha", "=", "0", ",", " l", "w", "=", "1", ")", "\n", "    ", "ax", ".", "legend", "(", "loc", "='", "best", "')", "\n", "    ", "ax", ".", "set", "_", "x", "lim", "([", "-", "0", ".", "0", "5", ",", " ", "1", ".", "0", "5", "])", "\n", "    ", "ax", ".", "set", "_"], "logprobs": [-1.9178804159164429, -2.123706817626953, -0.18982906639575958, -0.02268495224416256, -0.3510913550853729, -0.6571771502494812, -0.04633810371160507, -0.10285234451293945, -1.3727933168411255, -0.00399458222091198, -3.017369270324707, -0.03251311182975769, -0.2830323278903961, -0.0002548369811847806, -0.0006384003208950162, -1.214855432510376, -2.50339189733495e-06, -6.318072337307967e-06, -0.3221782445907593, -0.20733067393302917, -0.03594658151268959, -0.01757793501019478, -5.543078441405669e-05, -0.0014431786257773638, -3.290122185717337e-05, -0.015400068834424019, -0.00011955977242905647, -0.00034254882484674454, -1.178147792816162, -0.06193467229604721, -0.3026132583618164, -0.19815140962600708, -1.0902619361877441, -0.47155284881591797, -0.003215620992705226, -4.541770613286644e-05, -0.14264552295207977, -0.0009129646932706237, -0.1274920552968979, -0.00014220656885299832, -0.13114629685878754, -0.7889595627784729, -0.5441907644271851, -0.01117683481425047, -0.010839038528501987, -0.04085548594594002, -0.0032088477164506912, -0.01828855648636818, -0.002706200582906604, -0.08855918049812317, -1.045227289199829, -0.028007619082927704, -0.06516288965940475, -0.010243816301226616, -0.0027856139931827784, -1.0899114608764648, -0.029612591490149498, -0.0001842805795604363, -0.001497934339568019, -0.0015764916315674782, -0.7162309288978577, -0.20627103745937347, -0.02034895122051239, -0.0017927302978932858, -0.00015376816736534238, -0.00010382589971413836, -0.0002083561266772449, -0.008686613291501999, -2.453895330429077, -0.023453673347830772, -0.043330900371074677, -0.011061537079513073, -1.9073304429184645e-05, -0.17772327363491058, -0.2575155198574066, -0.00019786784832831472, -0.77264004945755, -0.0027557751163840294, -0.24604518711566925, -0.09891378879547119, -0.0042384322732687, -0.0016903887735679746, -0.00022313489171210676, -0.03538844361901283, -0.003510861424729228, -0.03950788453221321, -0.017598316073417664, -0.8232318758964539, -0.004258137196302414, -0.14034566283226013, -0.6760435104370117, -0.013992189429700375, -0.5785645246505737, -0.9196551442146301, -0.061085645109415054, -0.0030808625742793083, -0.000947503256611526, -0.830889880657196, -0.005032016895711422, -0.018492551520466805, -3.814689989667386e-06, -2.5152843591058627e-05, -0.0012138864258304238, -3.3378546504536644e-06, -7.390948667307384e-06, -0.00013886917440686375, -0.35142982006073, -0.054771486669778824, -0.038932815194129944, -0.0009073669789358974, -0.000609927112236619, -0.00501991854980588, -0.0011299422476440668, -0.5108140110969543, -0.003246277803555131, -2.1647684574127197, -0.0011068414896726608, -0.8649103045463562, -0.049181729555130005, -0.005383518058806658, -0.0014913876075297594, -0.7078007459640503, -0.009014857932925224, -0.004722869023680687, -0.03140134736895561, -0.030315525829792023, -0.014712058939039707, -0.0007059465860947967, -2.3960459232330322, -0.0005989664932712913, -0.0006839081761427224, -0.07385250926017761, -0.03574024885892868, -0.01834953762590885, -0.002702039433643222, -0.20084740221500397, -0.05125516280531883, -0.07250875979661942, -0.05198798328638077, -0.006365737412124872, -9.905801562126726e-05, -0.00713952723890543, -0.003425327828153968, -3.0278701160568744e-05, -0.019646689295768738, -1.6212332411669195e-05, -0.008767680265009403, -0.0013461584458127618, -0.02164328098297119, -0.024920979514718056, -0.0023770667612552643, -0.6874431371688843, -0.062142618000507355, -0.010048989206552505, -0.0006348263123072684, -0.02956976927816868, -0.0032897659111768007, -0.2559061050415039, -0.9599803686141968, -0.001292823115363717, -1.4759161472320557, -0.07247395068407059, -0.04966269060969353, -0.3451400697231293, -0.96001797914505, -0.009437117725610733, -0.012825972400605679, -7.486063259420916e-05, -1.8763004541397095, -0.141471266746521, -1.0069206953048706, -0.11461202800273895, -3.8625705242156982, -0.003467026399448514, -0.9598393440246582, -2.5002529621124268, -0.0024695871397852898, -0.6952130794525146, -0.0013194911880418658, -1.6997745037078857, -0.29074960947036743, -1.0790208578109741, -5.722029527532868e-06, -0.31770724058151245, -0.0002687808300834149, -0.017019761726260185, -0.5111225247383118, -0.0020996923558413982, -0.08166791498661041, -0.02269170992076397, -0.0003810394846368581, -0.3153753876686096, -0.1925058662891388, -0.001800346071831882, -0.027367321774363518, -0.0039823525585234165, -0.0017448929138481617, -0.0010942192748188972, -0.00017772526189219207, -0.004465370438992977, -0.0007650309125892818, -0.0018848287872970104, -0.000493762141559273, -0.00046754872892051935, -0.007247111760079861, -0.00010609064338495955, -0.6110485196113586, -3.195646047592163, -2.227947473526001, -0.0008231588872149587, -1.4668090343475342, -0.0010096696205437183, -0.028392622247338295, -1.2013306617736816, -0.5280093550682068, -0.002181057119742036, -0.00012659224739763886, -0.21065863966941833, -0.059067126363515854, -0.006785919889807701, -0.027935052290558815, -0.0199020616710186, -0.0003122795606032014, -0.07735870033502579, -0.024931909516453743, -0.003872634842991829, -0.16109074652194977, -1.505690097808838, -1.586855411529541, -0.005152399651706219, -0.042439527809619904, -0.09403688460588455, -0.003402280155569315, -1.123386025428772, -0.06741579622030258, -0.03328412026166916, -0.0036844005808234215, -0.06433459371328354, -0.7410759925842285, -0.11137761175632477, -0.01981441304087639, -0.008890685625374317, -0.003589141881093383, -0.00013755806139670312, -0.0025352262891829014, -0.0020592452492564917, -0.5384193062782288, -0.009997413493692875, -0.04751114919781685, -0.0006690170848742127, -0.0013715155655518174, -0.0010412277188152075, -0.0020165364257991314, -0.00032586511224508286, -0.001901843468658626, -0.00011431517486926168], "finish_reason": "length"}], "metrics": {"energy": 370.23798264312757, "energy_per_token": 1.446242119699717, "time": 15.97774, "time_per_token": 0.062413046875}}
{"outputs": [{"text": "# Split the input data into training (70%) and test (30%) sets.\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    # Construct a Keras Sequential model with one hidden dense layer and sigmoid activation.\n    model = keras.Sequential([\n        keras.layers.Dense(\n            units=2,\n            input_shape=(2,),\n            activation=\"sigmoid\"\n        )\n    ])\n\n    # Compiles the model using binary cross-entropy loss and SGD optimizer.\n    model.compile(\n        loss=keras.losses.BinaryCrossentropy(),\n        optimizer=keras.optimizers.SGD(),\n        metrics=[\"accuracy\"]\n    )\n\n    # Fits the model to the training data in a non-verbose mode.\n    model.fit(X_train, Y_train, epochs=3, verbose=0)\n\n    # Plots the Precision-Recall curve for the model based on the test", "tokens": ["#", " Split", " the", " input", " data", " into", " training", " (", "7", "0", "%)", " and", " test", " (", "3", "0", "%)", " sets", ".", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Construct", " a", " K", "eras", " Sequ", "ential", " model", " with", " one", " hidden", " dense", " layer", " and", " s", "igmoid", " activation", ".", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "            ", "units", "=", "2", ",", "\n", "            ", "input", "_", "shape", "=(", "2", ",", ")", ",", "\n", "            ", "activation", "=", "\"", "s", "igmoid", "\"", "\n", "        ", ")", "\n", "    ", "])", "\n", "\n", "    ", "#", " Comp", "iles", " the", " model", " using", " binary", " cross", "-", "entropy", " loss", " and", " SGD", " optimizer", ".", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "()", ",", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", "\n", "        ", "metrics", "=[", "\"", "accuracy", "\"", "]", "\n", "    ", ")", "\n", "\n", "    ", "#", " F", "its", " the", " model", " to", " the", " training", " data", " in", " a", " non", "-", "verbose", " mode", ".", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "3", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "#", " Pl", "ots", " the", " Precision", "-", "Rec", "all", " curve", " for", " the", " model", " based", " on", " the", " test"], "logprobs": [-1.0307267904281616, -0.586220920085907, -0.5003767013549805, -1.9978392124176025, -0.008829126134514809, -0.028876040130853653, -0.012279152870178223, -0.7205764651298523, -0.006740807089954615, -0.0001565095444675535, -0.014900225214660168, -0.0008588915807195008, -0.002471489831805229, -0.002284300047904253, -0.0004245333548169583, -4.410734163684538e-06, -0.00014220656885299832, -0.0142816798761487, -0.43747997283935547, -0.002747810212895274, -0.002819374669343233, -0.5720230937004089, -0.011108223348855972, -0.0050955903716385365, -0.0010068115079775453, -0.0012516292044892907, -4.684815212385729e-05, -0.0026760026812553406, -0.000243634101934731, -0.49227795004844666, -0.00030191155383363366, -0.00011419598013162613, -6.711257447022945e-05, -0.005146114155650139, -1.0847986231965479e-05, -8.05822346592322e-05, -0.0013273486401885748, -0.014601279981434345, -3.2186455882765586e-06, -4.529942543740617e-06, -1.6689286894688848e-06, -1.7404405298293568e-05, -0.0004148814477957785, -0.15091942250728607, -0.0005290300468914211, -0.0035039715003222227, -0.011864923872053623, -0.06440959870815277, -1.0728830375228426e-06, -3.099393507000059e-05, -0.004412438720464706, -0.010743398219347, -3.290122185717337e-05, -0.003953143022954464, -0.19673855602741241, -0.08985942602157593, -7.152555099310121e-07, -5.364403477869928e-06, -0.0012166248634457588, -0.1593666672706604, -0.02495632693171501, -0.12518806755542755, -0.0014547251630574465, -0.11034763604402542, -0.0004885195521637797, -0.006996299605816603, -0.7168492078781128, -0.051940564066171646, -0.01576543040573597, -2.0503786799963564e-05, -0.007568139582872391, -1.5616295058862306e-05, -0.0002898749662563205, -0.00839065108448267, -0.04274545982480049, -0.0022549221757799387, -0.04615837708115578, -8.463501580990851e-05, -0.03934778645634651, -0.005405216012150049, -3.933898824470816e-06, -0.0006326819420792162, -0.011357063427567482, -0.0054343827068805695, -0.0018341400427743793, -0.18423089385032654, -0.0019135037437081337, -0.1160498708486557, -5.125986263010418e-06, -4.2914423829643056e-05, -0.3571445047855377, -1.1920922133867862e-06, -1.2278481335670222e-05, -0.04997912049293518, -0.07672937214374542, -0.012023475021123886, -0.010705186054110527, -6.318072337307967e-06, -0.003951836843043566, -5.364403477869928e-06, -0.03651256486773491, -8.05822346592322e-05, -1.966933996300213e-05, -1.6151477098464966, -0.008503302000463009, -0.25869429111480713, -0.009689325466752052, -2.172968626022339, -0.34045886993408203, -0.17697440087795258, -0.0021550068631768227, -0.5435512661933899, -3.814689989667386e-06, -0.18873481452465057, -0.4978996515274048, -0.8175222873687744, -0.0039016089867800474, -0.030452445149421692, -0.06092245876789093, -0.0648847445845604, -0.01799987256526947, -0.06802383810281754, -1.2478320598602295, -0.21893291175365448, -0.002834114944562316, -6.556489552167477e-06, -4.95898348162882e-05, -0.8291313648223877, -0.01318027451634407, -0.003929632715880871, -0.22683222591876984, -0.004000162705779076, -0.001328420010395348, -0.00027414379292167723, -0.016446618363261223, -0.00014029949670657516, -0.001544950413517654, -0.7952352166175842, -0.002320099389180541, -0.0008917645900510252, -0.0001284993631998077, -0.003371271537616849, -0.0013060382334515452, -0.0001429217227268964, -0.0005566716426983476, -0.0003763920976780355, -0.0003924791526515037, -0.0041937981732189655, -0.003725969698280096, -0.00018702188390307128, -0.0064597842283546925, -0.0007725353352725506, -0.0002896366349887103, -0.013288975693285465, -8.737658936297521e-05, -0.00031251792097464204, -0.00017021637177094817, -0.2581031620502472, -0.003927614074200392, -0.48007792234420776, -0.06869461387395859, -0.5873293876647949, -2.5510462364763953e-05, -0.0105555085465312, -3.576278118089249e-07, -1.4424220353248529e-05, -0.1807514727115631, -0.00016509123088326305, -0.008310144767165184, -0.6161025166511536, -0.00024423000286333263, -0.006384215783327818, -0.00026341783814132214, -0.0008441222598776221, -5.8412379075889476e-06, -0.008789186365902424, -0.043566714972257614, -7.068861305015162e-05, -0.00013636612857226282, -0.005483466666191816, -3.886147169396281e-05, -0.015895908698439598, -0.00038246947224251926, -0.4885092079639435, -0.46871259808540344, -0.0011251792311668396, -0.3645365238189697, -0.01033738162368536, -0.07272271811962128, -0.2144879400730133, -0.1589052826166153, -0.00010358751023886725, -0.12923766672611237, -0.21618984639644623, -0.003650669241324067, -0.00013326710904948413, -0.0001308832288486883, -0.004415405914187431, -0.00013636612857226282, -0.0018141493201255798, -0.029159169644117355, -0.0001289761275984347, -0.00022921319759916514, -0.0001961992384167388, -0.0018103414913639426, -0.000993116176687181, -0.0003195490571670234, -0.000527123745996505, -0.012200606986880302, -0.0034051313996315002, -0.00012742661056108773, -4.184158387943171e-05, -5.471556869451888e-05, -0.0007761088781990111, -0.0059866164810955524, -0.0014105618465691805, -0.000271521887043491, -0.13397610187530518, -0.00043275527423247695, -0.00014041867689229548, -4.029192859889008e-05, -0.44038018584251404, -0.06196111813187599, -2.777537883957848e-05, -0.0004240567213855684, -0.028054680675268173, -0.0017828536219894886, -8.22540732769994e-06, -0.004248522222042084, -0.6656389832496643, -0.0005451146862469614, -1.9977657794952393, -0.21668505668640137, -0.04854247346520424, -0.0003972456615883857, -0.1640157848596573, -0.04150722175836563, -0.0032234634272754192, -0.00481730792671442, -0.00040987672400660813, -0.004900587256997824, -0.11907358467578888, -2.3007127310847864e-05, -0.0005650115781463683, -0.0033642619382590055, -0.001081834896467626, -0.0004104725376237184, -5.8412379075889476e-06, -0.0014547251630574465, -0.004628420807421207, -0.0001287377526750788, -0.025577487424016, -0.00927780196070671, -0.0002109781780745834, -0.0008467426523566246, -0.0003073934931308031], "finish_reason": "length"}], "metrics": {"energy": 381.1546208648682, "energy_per_token": 1.4888852377533914, "time": 15.766597, "time_per_token": 0.06158826953125}}
{"outputs": [{"text": "x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)\n    model = keras.models.Sequential([keras.layers.Dense(1, activation='sigmoid')])\n    model.compile(loss='binary_crossentropy', optimizer='SGD')\n    history = model.fit(x_train, y_train, verbose=0, epochs=20)\n    precision, recall, _ = precision_recall_curve(y_test, model.predict(x_test))\n    ax = plt.plot(recall, precision, linewidth=5)\n    ax.set_xlabel('Recall')\n    ax.set_ylabel('Precision')\n    ax.set_title('Precision-Recall Curve')\n    return model, ax", "tokens": ["x", "_", "train", ",", " x", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "0", ")", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "='", "s", "igmoid", "')", "])", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "S", "GD", "')", "\n", "    ", "history", " =", " model", ".", "fit", "(", "x", "_", "train", ",", " y", "_", "train", ",", " verbose", "=", "0", ",", " epochs", "=", "2", "0", ")", "\n", "    ", "precision", ",", " recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "y", "_", "test", ",", " model", ".", "predict", "(", "x", "_", "test", "))", "\n", "    ", "ax", " =", " plt", ".", "plot", "(", "re", "call", ",", " precision", ",", " linewidth", "=", "5", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Rec", "all", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Prec", "ision", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n", "    ", "return", " model", ",", " ax", "\n", "\n", "def"], "logprobs": [-3.8397574424743652, -0.09959125518798828, -0.02962520532310009, -0.005607232917100191, -0.018035581335425377, -0.0001234931987710297, -0.014927824959158897, -0.0010845737997442484, -0.0032191856298595667, -0.00013731967192143202, -0.0005715643637813628, -0.00017832119192462415, -0.004575141705572605, -4.005352093372494e-05, -0.0003914067056030035, -0.006942317821085453, -0.03201759606599808, -1.8596476365928538e-05, -9.536697689327411e-06, -9.536738616588991e-07, -2.4199192921514623e-05, -0.001061352901160717, -0.0984785258769989, -0.0023991868365556, -0.013989956118166447, -0.033791109919548035, -0.1318436712026596, -1.2278481335670222e-05, -6.353653589030728e-05, -0.03551684692502022, -0.027127539739012718, -0.00011872540198964998, -0.01047906931489706, -0.3576323986053467, -0.12260830402374268, -5.245195097813848e-06, -6.198863957251888e-06, -0.004035425838083029, -2.399543523788452, -0.12900371849536896, -0.01907622069120407, -0.21937431395053864, -0.10690346360206604, -0.014981025829911232, -0.07973767071962357, -6.353653589030728e-05, -0.00025674383505247533, -0.4728221595287323, -0.0001802282058633864, -5.638440416078083e-05, -1.6689286894688848e-06, -7.629365427419543e-06, -0.5650736093521118, -1.6807039976119995, -7.509902934543788e-05, -0.0005184260080568492, -3.075552376685664e-05, -0.01638118177652359, -0.0001102625101339072, -0.000436091679148376, -0.6805427074432373, -0.17398861050605774, -0.6594401597976685, -0.26269686222076416, -0.002476959954947233, -4.362964682513848e-05, -1.2429980039596558, -0.019925082102417946, -0.009492382407188416, -0.012466364540159702, -0.005016004201024771, -5.578839045483619e-05, -0.00086758635006845, -0.00900328066200018, -0.5212980508804321, -0.054338254034519196, -0.016342950984835625, -0.0013619918609037995, -0.00015043080202303827, -7.486063259420916e-05, -0.00018106251081917435, -0.0012943708570674062, -0.05468176305294037, -0.037099942564964294, -1.572113037109375, -0.0006305375136435032, -0.03167983889579773, -0.001312228967435658, -0.009400981478393078, -2.311523675918579, -0.006135082803666592, -0.001427465584129095, -2.372236667724792e-05, -0.00030393750057555735, -0.00013159839727450162, -0.011258878745138645, -0.005177897866815329, -7.402622577501461e-05, -0.0005975367967039347, -0.007054776884615421, -0.0001778444420779124, -2.753696753643453e-05, -0.006402693688869476, -1.640568733215332, -0.0032812110148370266, -0.12838542461395264, -0.2196301519870758, -0.21209950745105743, -0.0009978797752410173, -2.1729798316955566, -0.13942475616931915, -0.9172499775886536, -0.00954445544630289, -0.02991286665201187, -0.5545932650566101, -0.017140116542577744, -0.0022599175572395325, -0.0006868863711133599, -1.0684170722961426, -0.004906400106847286, -0.0065362947061657906, -1.0728830375228426e-06, -7.629365427419543e-06, -0.0005471401382237673, -2.3841855067985307e-07, -6.9141146923357155e-06, -0.00011014331539627165, -0.013339204713702202, -0.0002864189154934138, -0.0027110748924314976, -0.007238354068249464, -0.05412021279335022, -0.00017832119192462415, -0.00020466140995267779, -0.0018743580440059304, -0.0009782296838238835, -1.8715683836489916e-05, -0.00012206286191940308, -0.22410725057125092, -0.0025839770678430796, -0.025290202349424362, -0.673501193523407, -0.016786979511380196, -0.0063341096974909306, -0.001434488920494914, -0.3824647068977356, -0.01615716703236103, -0.020243002101778984, -0.0002806984703056514, -0.012427511624991894, -0.0008575814426876605, -0.892564594745636, -3.1675050258636475, -0.012687206268310547, -1.1826941967010498, -0.7472684979438782, -0.008976816199719906, -0.016727309674024582, -0.3490941524505615, -0.053773798048496246, -0.03859073296189308, -0.12179165333509445, -1.7014566659927368, -0.10806796699762344, -0.012910823337733746, -0.00029059001826681197, -0.03798001632094383, -0.0073614297434687614, -4.2437604861333966e-05, -0.0001454247540095821, -0.00014518637908622622, -0.0005947966128587723, -6.007967749610543e-05, -0.0015256681945174932, -0.0012874656822532415, -0.000646501372102648, -5.8887653722194955e-05, -0.0023323495406657457, -0.00471942825242877, -0.00046075694262981415, -0.006142073310911655, -0.000621959799900651, -0.0028190179727971554, -0.00019905969384126365, -0.0043570115230977535, -0.014133713208138943, -0.003321252064779401, -2.8013790142722428e-05, -0.00441255746409297, -0.005663539282977581, -0.00026294111739844084, -0.00482395151630044, -3.5523738915799186e-05, -0.0019073167350143194, -0.04104772210121155, -0.027033675462007523, -0.157140851020813, -0.02670757845044136, -0.0017120479606091976, -0.004990146495401859, -0.4869568645954132, -0.032994773238897324, -1.0064727067947388], "finish_reason": "stop"}], "metrics": {"energy": 282.23743449497204, "energy_per_token": 1.3903321896304042, "time": 12.194456, "time_per_token": 0.0600712118226601}}
{"outputs": [{"text": "# Split the data into training and test sets\n    X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)\n\n    # Construct the Keras Sequential model with one hidden layer and sigmoid activation\n    model = keras.models.Sequential()\n    model.add(keras.layers.Dense(units=1, activation=\"sigmoid\"))\n\n    # Compile the model with a binary cross-entropy loss and SGD optimizer\n    model.compile(loss=\"binary_crossentropy\", optimizer=keras.optimizers.SGD())\n\n    # Fit the model to the training data\n    model.fit(X_train, y_train, batch_size=32, epochs=32, verbose=0)\n\n    # Plot the Precision-Recall curve for the test data\n    precision, recall, thresholds = precision_recall_curve(y_test, model.predict(X_test))\n    ax = plt.plot(recall, precision, color='b')\n    ax.set_xlabel(\"Recall\"", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n", "\n", "    ", "#", " Construct", " the", " K", "eras", " Sequ", "ential", " model", " with", " one", " hidden", " layer", " and", " s", "igmoid", " activation", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "units", "=", "1", ",", " activation", "=", "\"", "s", "igmoid", "\"", "))", "\n", "\n", "    ", "#", " Com", "pile", " the", " model", " with", " a", " binary", " cross", "-", "entropy", " loss", " and", " SGD", " optimizer", "\n", "    ", "model", ".", "compile", "(", "loss", "=", "\"", "binary", "_", "cross", "entropy", "\"", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "())", "\n", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ",", " batch", "_", "size", "=", "3", "2", ",", " epochs", "=", "3", "2", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "#", " Plot", " the", " Precision", "-", "Rec", "all", " curve", " for", " the", " test", " data", "\n", "    ", "precision", ",", " recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "\n", "    ", "ax", " =", " plt", ".", "plot", "(", "re", "call", ",", " precision", ",", " color", "='", "b", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "\"", "Rec", "all", "\""], "logprobs": [-1.0307267904281616, -0.586220920085907, -0.5003767013549805, -0.170974999666214, -0.04881554841995239, -0.030990343540906906, -0.13937197625637054, -0.11968063563108444, -0.012077419087290764, -0.10638303309679031, -0.0019061268540099263, -0.7945245504379272, -0.007433729711920023, -0.0018260485958307981, -0.0005627478822134435, -0.001262939884327352, -3.9934315282152966e-05, -0.0011457790387794375, -0.00021741411183029413, -0.7721235752105713, -0.00011777184408856556, -0.00011729506513802335, -5.113947918289341e-05, -0.0029714026022702456, -1.1205610462639015e-05, -8.272782724816352e-05, -0.0007469248375855386, -0.01431258674710989, -4.410734163684538e-06, -5.483612312673358e-06, -2.3841855067985307e-07, -3.266281055402942e-05, -0.00030489088385365903, -0.09902586787939072, -0.0005725175142288208, -0.018699314445257187, -0.010038839653134346, -0.04304775595664978, -7.152555099310121e-07, -2.407998726994265e-05, -0.0026613790541887283, -0.00861854013055563, -4.434487345861271e-05, -0.00921413954347372, -1.9913915395736694, -0.005713204387575388, -0.08272729068994522, -0.0004614718782249838, -0.00671416474506259, -1.542097806930542, -1.6293151378631592, -0.18293236196041107, -7.056941103655845e-05, -1.7201976776123047, -2.312633478140924e-05, -0.0009330924949608743, -0.422600656747818, -0.25939932465553284, -0.0051269009709358215, -0.4512293338775635, -0.75827956199646, -0.04058240354061127, -6.09140915912576e-05, -0.004825256764888763, -0.022576451301574707, -0.0012203158112242818, -0.020724302157759666, -0.0019615711644291878, -0.11558473110198975, -6.198863957251888e-06, -6.210611172718927e-05, -1.1826187372207642, -4.827859811484814e-05, -2.253030106658116e-05, -8.344646857949556e-07, -1.9788545614574105e-05, -0.7873731851577759, -0.001061471994034946, -0.0035379454493522644, -0.007550156209617853, -3.886147169396281e-05, -3.671578815556131e-05, -2.3245540432981215e-05, -0.01990136131644249, -6.556489552167477e-06, -0.0009130837861448526, -1.1324817933200393e-05, -0.008010050281882286, -8.463501580990851e-05, -0.00011920218821614981, -2.2847647666931152, -0.019217727705836296, -0.32566037774086, -0.22777880728244781, -0.9925590753555298, -1.3947031497955322, -0.5186358690261841, -0.0018137923907488585, -1.2159273865108844e-05, -1.9430925021879375e-05, -1.9671485424041748, -0.007901719771325588, -0.14665144681930542, -5.2569914259947836e-05, -0.0011169631034135818, -0.026577459648251534, -6.0437283536884934e-05, -0.03550085425376892, -0.0006286313873715699, -1.4797539710998535, -3.068067789077759, -0.5343044996261597, -0.03959302231669426, -0.01947285793721676, -7.426462980220094e-05, -0.0011044599814340472, -0.08717290312051773, -0.10908810049295425, -0.0018820922123268247, -0.0037091048434376717, -0.00026425207033753395, -0.005155957769602537, -7.795983401592821e-05, -0.00023898606013972312, -0.00010024998482549563, -0.9328891038894653, -0.10737009346485138, -0.2635246515274048, -0.007155505940318108, -0.0005402297829277813, -0.00018249277491122484, -0.00015698630886618048, -4.386805812828243e-05, -8.523101132595912e-05, -0.04185173660516739, -0.006849381607025862, -2.173139810562134, -6.687417771900073e-05, -0.00021109737281221896, -0.00428223330527544, -0.00014602071314584464, -0.01641014777123928, -0.00033206192892976105, -0.19534419476985931, -0.0005743046058341861, -0.003414635546505451, -7.56950321374461e-05, -0.0006040894077159464, -0.04415635019540787, -0.0007052318542264402, -0.000444551813416183, -0.017210891470313072, -0.006142073310911655, -0.008725493215024471, -0.008746527135372162, -0.7422555088996887, -0.00013398226292338222, -0.05513064190745354, -0.0003695997002068907, -0.0003197873884346336, -6.90197994117625e-05, -0.04951067641377449, -0.0348416231572628, -1.6331539882230572e-05, -0.0008257793379016221, -0.004082560073584318, -8.77341881277971e-05, -4.291525328881107e-06, -0.015603480860590935, -2.102184534072876, -1.9550132492440753e-05, -1.7881233361549675e-05, -0.0011021974496543407, -1.37984299659729, -0.014388851821422577, -0.011316400021314621, -0.018738742917776108, -0.00014125302550382912, -1.5185211896896362, -2.5746960639953613, -0.23271001875400543, -0.020627500489354134, -0.0002134810492862016, -0.19933103024959564, -0.05552541837096214, -0.003524403553456068, -0.004804139491170645, -0.0003567297535482794, -0.0032367717940360308, -0.23494139313697815, -0.002795361913740635, -0.09586577862501144, -0.003957774024456739, -0.0007146426942199469, -3.6954811548639555e-06, -0.01292200293391943, -0.2114332765340805, -0.004737936891615391, -0.2086421549320221, -0.8617781400680542, -0.01759444922208786, -0.0006584145012311637, -0.20791491866111755, -0.01623985916376114, -0.001210195361636579, -0.00024005869636312127, -0.38749757409095764, -0.003390755970031023, -0.003023341065272689, -3.576278118089249e-07, -5.125986263010418e-06, -0.0004085659747943282, -1.1920928244535389e-07, -8.4638240878121e-06, -0.00012170527770649642, -0.04670735076069832, -0.0005036516231484711, -0.0071179852820932865, -0.00590793089941144, -0.021212957799434662, -0.0002224197960458696, -0.00036006642039865255, -0.001258534612134099, -0.00035482310340739787, -0.00012742661056108773, -5.924526340095326e-05, -0.17549318075180054, -0.0020247451029717922, -0.3320229947566986, -0.6144066452980042, -0.057011980563402176, -0.00776865566149354, -0.00014959646796341985, -0.3730989694595337, -0.00790739618241787, -0.020475447177886963, -0.0003446938644628972, -0.0034857960417866707, -0.0007761088781990111, -0.531258225440979, -0.9479203224182129, -0.49847549200057983, -1.325928807258606, -0.9961867332458496, -0.01096438430249691, -0.7180038690567017, -0.2390463650226593, -0.07013940811157227, -0.0712374746799469, -0.32029521465301514, -1.569546103477478, -1.2097363471984863, -0.00278014549985528, -0.010457245633006096, -0.0001234931987710297, -0.002884158631786704], "finish_reason": "length"}], "metrics": {"energy": 408.4959497547147, "energy_per_token": 1.5956873037293542, "time": 15.983471, "time_per_token": 0.06243543359375}}
