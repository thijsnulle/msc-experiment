{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -1.686811089515686, -0.023820992559194565], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.694961428642273, -0.025279276072978973, -0.022904597222805023, -0.004212435334920883, -0.001696815132163465, -0.09516768157482147], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.13433179259300232, -0.00010156115604331717, -0.00010895135346800089, -0.5360037684440613, -0.00016330339713022113, -4.207999518257566e-05, -8.344646857949556e-07, -5.125986263010418e-06, -1.398467779159546, -0.043857697397470474], "finish_reason": "stop"}, {"text": "compile(optimizer=keras.optimizers.SGD(), loss='binary_crossentropy',", "tokens": ["compile", "(", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", "\n"], "logprobs": [-0.0006006343755871058, -0.0015997005393728614, -0.8272169828414917, -7.629365427419543e-06, -2.0251846313476562, -0.2913135588169098, -2.002696055569686e-05, -0.00042417587246745825, -0.010579690337181091, -0.00010001159535022452, -0.012796549126505852, -0.00036507140612229705, -0.7645007967948914, -0.00020954797219019383, -0.033865902572870255, -0.31768086552619934, -0.013037203811109066, -0.0005565524916164577, -0.0001532914029667154, -6.472854875028133e-05, -0.7944501042366028, -0.0041678003035485744, -2.4295382499694824], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, batch_size=16, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " batch", "_", "size", "=", "1", "6", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0010551605373620987, -7.176141662057489e-05, -0.017768841236829758, -0.01666763797402382, -0.00011622230522334576, -0.0004755319678224623, -0.019712846726179123, -0.0019851280376315117, -2.253030106658116e-05, -0.007078687660396099, -2.6640186309814453, -2.9444261599564925e-05, -1.9550132492440753e-05, -0.0012738931691274047, -0.5968035459518433, -1.3110226392745972, -0.007534657139331102, -0.0964876189827919, -0.0003084660565946251, -0.6229773163795471, -0.15802350640296936, -0.4662071466445923, -0.012604101561009884, -0.0008422164828516543, -0.14404168725013733, -0.060839008539915085, -0.041706766933202744], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.02970447763800621, -7.545663538621739e-05, -0.00023648326168768108, -0.02603253349661827, -0.0003819928097072989, -0.0011024356354027987, -0.001985247014090419, -0.003875128459185362, -0.08883605897426605], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.00282817124389112, -0.0006106419023126364, -0.5458616614341736, -0.002681828336790204, -0.006573837250471115, -5.960462772236497e-07, -3.4570634852570947e-06, -0.00026079590315930545, -2.3841855067985307e-07, -7.748573807475623e-06, -6.305972783593461e-05, -0.060470227152109146, -0.003124952083453536, -0.005394781939685345, -0.13039937615394592, -0.003543409751728177, -0.00011491115583339706, -0.00013326710904948413, -1.3943341970443726, -0.03212311118841171, -0.001149827498011291, -0.0006017066189087927, -0.0020379505585879087, -0.03606007993221283, -0.08889462798833847, -0.01588311977684498], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.029414208605885506, -0.0025383178144693375, -0.0003150205302517861, -0.00047791501856409013, -0.0071083977818489075, -6.23445157543756e-05, -0.21150679886341095, -0.005881384946405888], "finish_reason": "stop"}, {"text": "plot(recall, precision, color='green', linewidth=2, label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " color", "='", "green", "'", ",", " linewidth", "=", "2", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.13707111775875092, -0.011857503093779087, -0.006362775806337595, -0.0004741021548397839, -0.01093077939003706, -0.0009466695482842624, -0.44402241706848145, -1.616250991821289, -0.016736220568418503, -1.85715913772583, -0.24180643260478973, -0.00017105070583056659, -0.4690987467765808, -0.0014192519010975957, -1.233340859413147, -0.23880265653133392, -0.5395543575286865, -0.04804983735084534, -0.0763455256819725, -0.00043466180795803666, -0.02194654382765293, -0.00395266804844141, -6.139089964563027e-05, -0.263851135969162, -9.655486064730212e-05, -0.004982554819434881, -0.1273975968360901], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.43243759870529175, -0.08162693679332733, -1.3969618082046509, -0.02754743956029415, -0.0022293494548648596, -1.0132738680113107e-05, -0.0017094297800213099, -0.0015779199311509728, -0.00023457636416424066, -0.018169043585658073, -2.5629668016335927e-05, -0.004458724521100521, -0.17672808468341827], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0003333727945573628, -2.0146166207268834e-05, -0.0006587718962691724, -0.00023707917716819793, -0.0002321927313460037, -8.4638240878121e-06, -0.0007074952009133995, -0.00281200441531837], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.009564174339175224, -8.070142939686775e-05, -0.0016828911611810327, -0.006732991896569729, -0.0020638848654925823, -5.8412379075889476e-06, -0.0011954312212765217, -0.0028300732374191284, -0.00022575691400561482, -0.0070909978821873665, -2.2291887944447808e-05, -0.002021889900788665, -0.02547580748796463], "finish_reason": "stop"}, {"text": "legend(loc='upper left')", "tokens": ["legend", "(", "loc", "='", "upper", " left", "')", "\n"], "logprobs": [-0.09794796258211136, -0.8020049929618835, -0.0018867325270548463, -0.12378121167421341, -0.48484179377555847, -0.7046810984611511, -0.16422559320926666, -0.1431298702955246], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.016488129273056984, -0.0009029601933434606, -0.040321268141269684, -0.6175735592842102], "finish_reason": "stop"}], "metrics": {"energy": 327.4996663284301, "energy_per_token": 1.5303722725627575, "time": 13.80591, "time_per_token": 0.06451359813084112}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -0.11303243041038513, -0.0010281282011419535, -0.017568212002515793, -0.02432035468518734, -0.11031465232372284, -9.536697689327411e-06, -3.0278701160568744e-05, -0.035017866641283035, -0.025812646374106407, -0.00011264643399044871, -0.011294122785329819, -1.5844433307647705, -0.0299764983355999], "finish_reason": "stop"}, {"text": " X[0].shape[0]", "tokens": [" X", "[", "0", "]", ".", "shape", "[", "0", "]", "\n"], "logprobs": [-0.26965174078941345, -2.6906909942626953, -0.012736053206026554, -0.017957136034965515, -0.0008965287124738097, -0.37541311979293823, -0.04489404708147049, -0.10053987056016922, -0.0013772298116236925, -0.08179325610399246], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.7624253034591675, -4.0531076592742465e-06, -2.3841830625315197e-06, -0.10218235850334167, -0.2219216227531433], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.BinaryCrossentropy(), optimizer=keras.optimizers.SGD())", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "()", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "())", "\n"], "logprobs": [-0.0005913416389375925, -0.0018340209499001503, -0.6168748736381531, -2.0899410247802734, -0.11443544924259186, -1.9073304429184645e-05, -0.013976671732962132, -1.0728830375228426e-06, -4.815939246327616e-05, -0.7188529372215271, -0.00020382710499688983, -0.009571612812578678, -0.19177989661693573, -0.00016711745411157608, -0.14314185082912445, -0.3177647590637207, -0.005381620954722166, -4.446407547220588e-05, -7.414542778860778e-05, -0.0023778993636369705, -4.684815212385729e-05, -0.013403310440480709, -0.00040642108069732785, -0.1797424554824829, -0.009261267259716988], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007360848248936236, -7.688703772146255e-05, -0.01772129349410534, -0.014002886600792408, -0.0001282609737245366, -0.00038914260221645236, -0.019012710079550743, -0.0011501847766339779, -2.3483953555114567e-05, -0.00792915839701891, -0.8560027480125427, -0.0015554246492683887, -0.09487856924533844, -0.4482124447822571, -0.07004337757825851], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.022435884922742844, -5.61460001335945e-05, -0.000251142424531281, -0.023160070180892944, -0.00042429505265317857, -0.001668252982199192, -0.0018149822717532516, -0.00384935992769897, -0.08187827467918396], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0021208669058978558, -0.000536655425094068, -0.5755569338798523, -0.0029218385461717844, -0.006836239714175463, -7.152555099310121e-07, -3.814689989667386e-06, -0.00022754464589525014, -2.3841855067985307e-07, -7.510157047363464e-06, -6.353653589030728e-05, -0.04096866026520729, -0.0032191856298595667, -0.006677574943751097, -0.13849656283855438, -0.0034962499048560858, -0.00012373158824630082, -0.00014482879487331957, -0.31904205679893494, -0.006982212886214256], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.028140218928456306, -0.00268729729577899, -0.0003203832311555743, -0.00047851080307736993, -0.011300605721771717, -6.603976362384856e-05, -0.22689920663833618, -0.005560881923884153], "finish_reason": "stop"}, {"text": "plot(recall, precision, 'b-', label='Precision-Recall curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "b", "-'", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " curve", "')", "\n"], "logprobs": [-0.16571329534053802, -0.012311063706874847, -0.006919942796230316, -0.000607782625593245, -0.012937536463141441, -0.0010631391778588295, -0.3680555820465088, -1.797747015953064, -0.8709940910339355, -1.808490514755249, -9.190614218823612e-05, -0.7011293172836304, -0.06749100983142853, -0.12198139727115631, -0.0004104725376237184, -0.08053527027368546, -0.005792142357677221, -0.0001006075763143599, -2.506495237350464, -0.014458530582487583, -0.10785726457834244], "finish_reason": "stop"}, {"text": "legend(loc='upper right')  # Modify here to set legend location", "tokens": ["legend", "(", "loc", "='", "upper", " right", "')", "  ", "#", " Mod", "ify", " here", " to", " set", " legend", " location", "\n"], "logprobs": [-2.4939017295837402, -0.6563690900802612, -0.0040666512213647366, -0.035623837262392044, -0.49454349279403687, -0.7275094985961914, -0.09581411629915237, -1.4458670616149902, -0.00013791563105769455, -0.4140460789203644, -0.0009472650708630681, -0.09159035235643387, -0.0959211215376854, -2.26468563079834, -1.08687162399292, -0.8230336308479309, -0.07285162806510925], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0006192197324708104, -2.098061486321967e-05, -0.0006678258068859577, -0.00027259447961114347, -0.0002687808300834149, -1.0132738680113107e-05, -0.0006860524881631136, -0.0028029698878526688], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.00845992099493742, -7.652943895664066e-05, -0.00185591506306082, -0.007449703756719828, -0.0024616196751594543, -6.318072337307967e-06, -0.0011202972382307053, -0.0029679557774215937, -0.0002299282787134871, -0.007230069488286972, -2.0861407392658293e-05, -0.0022024677600711584, -0.025212323293089867], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.06409893184900284, -0.7695558667182922, -0.11683431267738342], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>from collections import Counter", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "from", " collections", " import", " Counter", "\n"], "logprobs": [-0.015587754547595978, -0.00099871342536062, -0.04405209422111511, -1.2086983919143677, -2.3841855067985307e-07, -3.4570634852570947e-06, -3.969590397900902e-05, -0.00014423283573705703, -0.086056649684906, -1.244032382965088, -3.078744411468506, -0.023319868370890617, -1.1044065952301025, -0.07786743342876434], "finish_reason": "stop"}], "metrics": {"energy": 388.6350561332699, "energy_per_token": 1.9239359214518312, "time": 15.540368, "time_per_token": 0.07693251485148515}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -2.3200266361236572], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.7624253034591675, -4.0531076592742465e-06, -2.3841830625315197e-06, -0.10218235850334167, -0.2219216227531433], "finish_reason": "stop"}, {"text": "compile(optimizer='SGD', loss='binary_crossentropy', metrics=['accuracy'])", "tokens": ["compile", "(", "optim", "izer", "='", "S", "GD", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0005913416389375925, -0.0018340209499001503, -0.954389750957489, -8.821448318485636e-06, -0.13386578857898712, -0.8670007586479187, -0.00018368464952800423, -8.260862523457035e-05, -0.0003488647344056517, -0.0116850221529603, -0.025985145941376686, -0.022503722459077835, -0.00058466981863603, -0.00016890530241653323, -6.770858453819528e-05, -0.5839711427688599, -0.009478447958827019, -0.08824119716882706, -0.0373229905962944, -0.26575273275375366, -0.01817220263183117, -0.009573619812726974], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=5, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "5", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007225048611871898, -8.964136941358447e-05, -0.0188381839543581, -0.016191065311431885, -0.00011443436960689723, -0.0004119024670217186, -0.019425157457590103, -0.0014227039646357298, -2.47952248173533e-05, -0.00724521791562438, -0.8197774291038513, -0.0006466205231845379, -1.815183162689209, -0.47250035405158997, -0.08143300563097, -0.0009556017466820776, -0.1332450658082962, -0.05025055631995201, -0.04474016651511192], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.02944684959948063, -5.2569914259947836e-05, -0.0002317160106031224, -0.01981581561267376, -0.00036090059438720345, -0.0013146100100129843, -0.0020843464881181717, -0.0037576796021312475, -0.0866558700799942], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.0026323688216507435, -0.0005172345554456115, -0.848970890045166, -0.00293990527279675, -0.006641576066613197, -5.960462772236497e-07, -3.814689989667386e-06, -0.00020287363440729678, -2.3841855067985307e-07, -7.033323527139146e-06, -6.41325386823155e-05, -0.04438170790672302, -0.0028721531853079796, -0.004911263473331928, -0.15564166009426117, -0.0030342750251293182, -0.00010358751023886725, -0.00015698630886618048, -1.3738155364990234, -0.030826449394226074, -0.002176180249080062, -0.0007107115816324949, -0.0024855216033756733, -0.04482543095946312, -0.09828405827283859, -0.013322383165359497], "finish_reason": "stop"}, {"text": " ax = plt.subplots(1,1)", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "1", ",", "1", ")", "\n"], "logprobs": [-0.02704469859600067, -0.003232494229450822, -0.00029392691794782877, -0.0005149707430973649, -0.0124429352581501, -6.90197994117625e-05, -1.6325362920761108, -1.22100830078125, -0.188467875123024, -2.6608541011810303, -0.5328755974769592, -0.017629940062761307], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.14941047132015228, -0.011698336340487003, -0.00699393218383193, -0.00048268112004734576, -0.01030115969479084, -0.0010141950333490968, -1.0294281244277954, -0.291331022977829], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.5250840187072754, -0.11431752890348434, -1.348259449005127, -0.029974646866321564, -0.0025000290479511023, -9.65590606938349e-06, -0.0022558735217899084, -0.0015995815629139543, -0.0001842805795604363, -0.017169879749417305, -2.7656173188006505e-05, -0.005460585001856089, -0.20057880878448486], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004412154376041144, -1.7046782886609435e-05, -0.0005339150666259229, -0.00023600654094479978, -0.00023636408150196075, -1.0013530300057027e-05, -0.0006157647585496306, -0.0023830130230635405], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006785564590245485, -6.782778655178845e-05, -0.0014484162675216794, -0.005620035342872143, -0.0023852726444602013, -6.198863957251888e-06, -0.001404966926202178, -0.0028754814993590117, -0.0002884448622353375, -0.007115381304174662, -2.1576648578047752e-05, -0.0019902437925338745, -0.021859657019376755], "finish_reason": "stop"}, {"text": "legend(loc='lower left')", "tokens": ["legend", "(", "loc", "='", "lower", " left", "')", "\n"], "logprobs": [-0.08269370347261429, -0.7839468717575073, -0.0015235256869345903, -0.1266598403453827, -1.0051841735839844, -1.3811421394348145, -0.18936346471309662, -0.14264552295207977], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.013586549088358879, -0.001046705641783774, -0.04423299431800842, -0.6618893146514893], "finish_reason": "stop"}], "metrics": {"energy": 335.7263689718246, "energy_per_token": 1.886103196470925, "time": 14.723981, "time_per_token": 0.08271899438202247}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -0.11303243041038513, -0.0010281282011419535, -0.017568212002515793, -0.02432035468518734, -0.11031465232372284, -9.536697689327411e-06, -3.0278701160568744e-05, -0.035017866641283035, -0.025812646374106407, -0.00011264643399044871, -0.011294122785329819, -0.2927887439727783, -0.11860455572605133, -3.099436753473128e-06, -5.602820692729438e-06, -0.004598043859004974, -0.25428569316864014, -0.03538269177079201, -0.17676354944705963, -0.022499993443489075], "finish_reason": "stop"}, {"text": " len(X[0])", "tokens": [" len", "(", "X", "[", "0", "])", "\n"], "logprobs": [-2.708498239517212, -0.0030329679138958454, -0.04685353487730026, -0.8055605888366699, -0.0038459161296486855, -0.009771491400897503, -0.08069495856761932], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.14058774709701538, -9.476689592702314e-05, -0.00011407678539399058, -0.5316508412361145, -0.00014757021563127637, -5.245071224635467e-05, -8.344646857949556e-07, -5.483612312673358e-06, -0.3456518054008484, -0.23429322242736816], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='SGD')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "S", "GD", "')", "\n"], "logprobs": [-0.0006191005813889205, -0.0012542485492303967, -0.62135910987854, -0.12294896692037582, -0.015198846347630024, -0.0008578196284361184, -0.00016604475968051702, -8.475421054754406e-05, -0.0001147919538198039, -0.0009974034037441015, -0.026803098618984222, -0.04154427722096443, -1.8608877658843994, -0.00037496211007237434, -0.09846286475658417, -0.010357438586652279], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007453762227669358, -8.189342770492658e-05, -0.018887901678681374, -0.015943074598908424, -0.00011503035057103261, -0.0003554189461283386, -0.017841564491391182, -0.0016902696806937456, -1.8715683836489916e-05, -0.006736070849001408, -0.6702916026115417, -0.0017780937487259507, -0.08034618943929672, -0.37293609976768494, -0.07582198083400726], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.026805652305483818, -5.94836674281396e-05, -0.00023231192608363926, -0.02516082674264908, -0.00038366109947673976, -0.0014462736435234547, -0.001900772680528462, -0.0039285640232264996, -0.06347260624170303], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.0032831120770424604, -0.0006037319544702768, -0.9298179745674133, -0.0025924190413206816, -0.0041315918788313866, -2.3841855067985307e-07, -2.622600959512056e-06, -0.00017724849749356508, -5.960462772236497e-07, -6.794906312279636e-06, -0.00011240804451517761, -0.0634496733546257, -0.0037733560893684626, -0.005045182537287474, -0.13303564488887787, -0.007795624900609255, -0.0001454247540095821, -0.00012790338951162994, -1.269432544708252, -0.020831018686294556, -0.0007410878897644579, -0.0006450717919506133, -0.0030504383612424135, -0.04324505105614662, -0.11016005277633667, -0.011889073997735977], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.027268260717391968, -0.003903983859345317, -0.0003073934931308031, -0.00048160876031033695, -0.0081920325756073, -7.652943895664066e-05, -0.2346138209104538, -0.006143257953226566], "finish_reason": "stop"}, {"text": "plot(recall, precision, linewidth=2)", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " linewidth", "=", "2", ")", "\n"], "logprobs": [-0.16425210237503052, -0.01139961089938879, -0.008405309170484543, -0.0005517867393791676, -0.010553857311606407, -0.001122440560720861, -0.4546103775501251, -1.7542387247085571, -0.009573856368660927, -0.41959694027900696, -1.5042293071746826, -0.25120675563812256], "finish_reason": "stop"}, {"text": "plot([0, 1], [0, 1], label='perfect diagonal')", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " label", "='", "perfect", " diagonal", "')", "\n"], "logprobs": [-1.6877365112304688, -0.33471983671188354, -0.001931469771079719, -0.020182721316814423, -0.008813410066068172, -0.0012357940431684256, -0.0006277974462136626, -0.00014661667228210717, -0.0017102628480643034, -0.0011169631034135818, -0.0012259118957445025, -0.000364713923772797, -0.00043764073052443564, -0.008388523012399673, -3.40932747349143e-05, -2.218757390975952, -0.03677734360098839, -2.6293883323669434, -0.6761981844902039, -0.13647089898586273, -0.20525144040584564], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.00040260792593471706, -2.1815061700181104e-05, -0.0007327494095079601, -0.0002113357331836596, -0.0002873722987715155, -8.702239938429557e-06, -0.0006280356901697814, -0.0029122107662260532], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.005895013455301523, -8.129743218887597e-05, -0.001663373550400138, -0.006216001696884632, -0.0019964303355664015, -5.722029527532868e-06, -0.0011734035797417164, -0.002680758247151971, -0.00027736154152080417, -0.00846193078905344, -1.9311717551317997e-05, -0.002001189161092043, -0.022135918959975243], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.08789122849702835, -0.6332072615623474, -0.15519416332244873], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.01454665046185255, -0.0011079132091253996, -0.04654988273978233, -0.7078514695167542], "finish_reason": "stop"}], "metrics": {"energy": 331.1865967493058, "energy_per_token": 1.7430873513121359, "time": 14.710079, "time_per_token": 0.07742146842105263}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -0.2810932397842407, -0.12280548363924026, -3.933898824470816e-06, -6.794906312279636e-06, -0.004519605077803135, -0.28695130348205566, -0.03699379786849022, -0.1545061618089676, -0.015607588924467564], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.7624253034591675, -4.0531076592742465e-06, -2.3841830625315197e-06, -0.10218235850334167, -0.2219216227531433], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005913416389375925, -0.0018340209499001503, -0.6168748736381531, -0.1341322809457779, -0.015253206714987755, -0.0005868143052794039, -0.00016234986833296716, -8.225102646974847e-05, -0.00012158608296886086, -0.0007756323902867734, -0.02274799533188343, -0.052170395851135254, -0.3014521896839142, -0.00013410145766101778, -0.03498517721891403, -0.009408303536474705], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0008879532688297331, -8.785339014139026e-05, -0.018035581335425377, -0.014765153639018536, -0.00013755806139670312, -0.0004832768754567951, -0.020032936707139015, -0.0015538772568106651, -2.5152843591058627e-05, -0.008456612005829811, -0.8162858486175537, -0.0013858010061085224, -0.0840364471077919, -0.44373011589050293, -0.06116156280040741], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.029401475563645363, -5.781483559985645e-05, -0.00023576818057335913, -0.018596816807985306, -0.00032646095496602356, -0.0011095802765339613, -0.0020754244178533554, -0.004536100197583437, -0.0792415589094162], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.002690982772037387, -0.0006403064471669495, -0.7826443314552307, -0.002592062344774604, -0.0036806000862270594, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.00014852374442853034, -4.768370445162873e-07, -6.794906312279636e-06, -9.226373367710039e-05, -0.07539810985326767, -0.002971640322357416, -0.005768556613475084, -0.1318001002073288, -0.00782543234527111, -0.00014649749209638685, -0.00020287363440729678, -0.30164599418640137, -0.006546598393470049], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.026960574090480804, -0.0034095270093530416, -0.00029583368450403214, -0.0006697318749502301, -0.008161881938576698, -5.5549986427649856e-05, -0.1988089680671692, -0.005558747798204422], "finish_reason": "stop"}, {"text": "plot(recall, precision, '--', color='blue', label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "--", "'", ",", " color", "='", "blue", "'", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.14610999822616577, -0.014682339504361153, -0.007979066111147404, -0.000654602306894958, -0.010737619362771511, -0.0010886224918067455, -0.4146851897239685, -1.886878252029419, -3.411226511001587, -0.2699795961380005, -0.000756216119043529, -1.5340285301208496, -0.025316236540675163, -3.2286601066589355, -0.25677478313446045, -0.00010442188795423135, -0.4341377913951874, -0.05369618535041809, -0.17277559638023376, -0.0004943578969687223, -0.05273948982357979, -0.006839318200945854, -9.905801562126726e-05, -0.43994417786598206, -0.00013064485392533243, -0.009871120564639568, -0.16000054776668549], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.4778367578983307, -0.0945790708065033, -0.3774808645248413, -0.013176980428397655, -0.009220636449754238, -4.255681051290594e-05, -0.006801075302064419, -0.02077731303870678], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004085659747943282, -2.288792165927589e-05, -0.0006721144891344011, -0.0002499506517779082, -0.0002503081923350692, -9.179073458653875e-06, -0.0006760457181371748, -0.002933486830443144], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008673259057104588, -8.165503095369786e-05, -0.0016952680889517069, -0.005010903812944889, -0.002115632640197873, -5.960446742392378e-06, -0.0013577061472460628, -0.003003255231305957, -0.0003060825983993709, -0.007898644544184208, -2.038458114839159e-05, -0.0021108745131641626, -0.021922051906585693], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.08033661544322968, -0.7225016951560974, -0.14813999831676483], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.011806963011622429, -0.0010458719916641712, -0.04973630607128143, -0.5928705930709839], "finish_reason": "stop"}], "metrics": {"energy": 333.20399666500094, "energy_per_token": 1.7914193369086073, "time": 14.516255, "time_per_token": 0.0780443817204301}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -0.2810932397842407, -0.12280548363924026, -3.933898824470816e-06, -6.794906312279636e-06, -0.004519605077803135, -0.28695130348205566, -0.03699379786849022, -0.1545061618089676, -0.015607588924467564], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.6397637128829956, -0.00013326710904948413, -5.0424259825376794e-05, -1.0728830375228426e-06, -5.8412379075889476e-06, -1.2384262084960938, -0.04391143098473549], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.0005695389700122178, -0.0013360392767935991, -0.8148796558380127, -7.986990567587782e-06, -0.12189697474241257, -0.5927025079727173, -0.00014065706636756659, -0.00013422065239865333, -0.00018165845540352166, -0.009069791994988918, -0.02516268752515316, -0.015774114057421684, -0.0013293724041432142, -0.00016258825780823827, -7.164221460698172e-05, -0.25507116317749023, -0.00970420055091381], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)  # non-verbose mode for efficiency reasons", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "  ", "#", " non", "-", "verbose", " mode", " for", " efficiency", " reasons", "\n"], "logprobs": [-0.000692842761054635, -8.713819261174649e-05, -0.015958091244101524, -0.015382695943117142, -0.00012063252506777644, -0.0003399271226953715, -0.01926228031516075, -0.0014122284483164549, -2.396077979938127e-05, -0.006657917518168688, -0.7496024370193481, -0.0014422263484448195, -0.0891103446483612, -0.3318471908569336, -2.857684373855591, -0.00015555603022221476, -1.8843045234680176, -0.030509334057569504, -0.0021136105060577393, -0.177875354886055, -1.4036586284637451, -4.180367946624756, -3.0258398056030273, -0.03904161602258682], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.024953536689281464, -4.9828242481453344e-05, -0.00027891082572750747, -0.02160116657614708, -0.0003625689132604748, -0.0010699268896132708, -0.002682304009795189, -0.003958961460739374, -0.08457784354686737], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.002228159923106432, -0.000618624035269022, -0.8110558986663818, -0.0024889700580388308, -0.0035510121379047632, -3.576278118089249e-07, -2.3841830625315197e-06, -0.00017045476124621928, -5.960462772236497e-07, -6.318072337307967e-06, -0.00011896379146492109, -0.054082829505205154, -0.003945781383663416, -0.005069497041404247, -0.13610495626926422, -0.005557325202971697, -0.0001426833332516253, -0.00014280252798926085, -0.30851316452026367, -0.005265653133392334], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.025270789861679077, -0.003144797869026661, -0.0003083468764089048, -0.000482442817883566, -0.008089871145784855, -5.2689116273541003e-05, -0.20722311735153198, -0.005940756760537624], "finish_reason": "stop"}, {"text": "plot(recall, precision, marker='o')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " marker", "='", "o", "')", "\n"], "logprobs": [-0.14677342772483826, -0.01127608772367239, -0.007348294369876385, -0.0005429700831882656, -0.010687966831028461, -0.0009689403814263642, -0.32471850514411926, -2.564850330352783, -0.01217257883399725, -0.5031953454017639, -0.3314327299594879, -0.21490909159183502], "finish_reason": "stop"}, {"text": "legend(loc='lower right')  # Modify here to add the legend to the plot", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "  ", "#", " Mod", "ify", " here", " to", " add", " the", " legend", " to", " the", " plot", "\n"], "logprobs": [-2.764688730239868, -0.5443781614303589, -0.004444364458322525, -0.03715863823890686, -1.095026969909668, -0.38778427243232727, -0.03104107826948166, -1.4476020336151123, -0.0001627074379939586, -0.516343355178833, -0.001215077005326748, -0.09460759162902832, -0.13786958158016205, -1.9426673650741577, -2.976109504699707, -0.12787143886089325, -2.185835361480713, -0.03481445461511612, -0.3954586088657379, -0.045579943805933], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004357342259027064, -1.6689160474925302e-05, -0.0005938435206189752, -0.00021550717065110803, -0.00023827097902540118, -7.629365427419543e-06, -0.0005944392178207636, -0.00273913168348372], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.009047464467585087, -6.8662193370983e-05, -0.0015891077928245068, -0.006114111747592688, -0.00205163168720901, -6.198863957251888e-06, -0.0013704441953450441, -0.0028526587411761284, -0.0002983363519888371, -0.006761765107512474, -1.7881233361549675e-05, -0.002148702275007963, -0.02271152101457119], "finish_reason": "stop"}, {"text": "legend(loc='lower left')", "tokens": ["legend", "(", "loc", "='", "lower", " left", "')", "\n"], "logprobs": [-0.10435014963150024, -0.6982927918434143, -0.0016613503685221076, -0.11275312304496765, -1.0913152694702148, -1.2709535360336304, -0.11920373886823654, -0.1496405154466629], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>\"\"\"", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.014134888537228107, -0.0011699505848810077, -0.05419271066784859, -1.2000612020492554, -2.3841855067985307e-07, -3.3378546504536644e-06, -3.3854863431770355e-05, -0.00015627116954419762, -1.9494537115097046, -0.0039175208657979965, -0.001696815132163465, -0.0003461238811723888, -0.15536350011825562], "finish_reason": "stop"}], "metrics": {"energy": 422.7031796007155, "energy_per_token": 2.0225032516780646, "time": 17.048317, "time_per_token": 0.0815708947368421}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -2.2629804611206055], "finish_reason": "stop"}, {"text": " int(X.shape[1])", "tokens": [" int", "(", "X", ".", "shape", "[", "1", "])", "\n"], "logprobs": [-2.7744429111480713, -0.03394218906760216, -0.7425544857978821, -1.130534052848816, -0.147235706448555, -0.03757297247648239, -0.008895293809473515, -0.031217532232403755, -0.07133738696575165], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.14058774709701538, -9.476689592702314e-05, -0.00011407678539399058, -0.5316508412361145, -0.00014757021563127637, -5.245071224635467e-05, -8.344646857949556e-07, -5.483612312673358e-06, -1.2840349674224854, -0.04393789917230606], "finish_reason": "stop"}, {"text": "compile(optimizer=keras.optimizers.SGD(), loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.0005392765742726624, -0.0011121999705210328, -1.0709846019744873, -7.867782187531702e-06, -2.115612745285034, -0.3452135920524597, -1.966933996300213e-05, -0.00037531962152570486, -0.010364635847508907, -0.00012885693286079913, -0.01265848521143198, -0.0004287039046175778, -0.7066395282745361, -0.00022206225548870862, -0.040157750248909, -0.3491840362548828, -0.013113565742969513, -0.0005105622112751007, -0.0001530530134914443, -6.258291978156194e-05, -0.6123769283294678, -0.01351010613143444], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0008581769652664661, -8.010543388081715e-05, -0.015862703323364258, -0.014364057220518589, -0.00012540031457319856, -0.0003936707798857242, -0.020459679886698723, -0.0012488907668739557, -2.5152843591058627e-05, -0.006383031141012907, -0.8309467434883118, -0.0007620529504492879, -0.5210159420967102, -0.1246483325958252, -0.9652318954467773, -0.15838904678821564, -0.05372782051563263, -0.0007587176514789462, -0.11304116249084473, -0.05093845725059509, -0.04953506961464882], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.023305660113692284, -6.389413465512916e-05, -0.0002215855201939121, -0.02220529317855835, -0.00033861625706776977, -0.001599105424247682, -0.002294528530910611, -0.003672761144116521, -0.0784028023481369], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.0030891813803464174, -0.0005984899471513927, -0.7644837498664856, -0.00220104050822556, -0.003125071059912443, -2.3841855067985307e-07, -1.7881377516459906e-06, -0.00016199229867197573, -5.960462772236497e-07, -6.318072337307967e-06, -0.00010513706365600228, -0.06686502695083618, -0.0036722859367728233, -0.004706257954239845, -0.13261133432388306, -0.008554954081773758, -0.00015817821258679032, -0.00012730741582345217, -1.3091883659362793, -0.028379643335938454, -0.0009735850035212934, -0.0006293461774475873, -0.003583677811548114, -0.0609503872692585, -0.11838187277317047, -0.014420577324926853], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.028922827914357185, -0.0032400989439338446, -0.0003215749457012862, -0.0004273931554052979, -0.009343704208731651, -7.164221460698172e-05, -0.20447228848934174, -0.00568297877907753], "finish_reason": "stop"}, {"text": "plot(recall, precision, color='g', label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " color", "='", "g", "'", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.14395983517169952, -0.014134300872683525, -0.006579285021871328, -0.000727627135347575, -0.012675199657678604, -0.0009949024533852935, -0.3697228729724884, -1.5484561920166016, -0.018038509413599968, -2.548325777053833, -0.2528485655784607, -0.00013100242358632386, -1.8537322282791138, -0.07091615349054337, -0.07657092809677124, -0.000456109904916957, -0.035325732082128525, -0.005158092360943556, -9.417090768693015e-05, -0.19229236245155334, -0.00013624693383462727, -0.0154636912047863, -0.19698527455329895], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.3566722273826599, -0.09687257558107376, -0.3964572548866272, -0.014225504361093044, -0.009382440708577633, -4.60137271147687e-05, -0.006399969570338726, -0.019295021891593933], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.00042798896902240813, -2.0861407392658293e-05, -0.000610999355558306, -0.00021360022947192192, -0.00022456508304458112, -8.106198947643861e-06, -0.0006920088781043887, -0.002461500931531191], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.007898053154349327, -7.70062324590981e-05, -0.0015907741617411375, -0.006075722631067038, -0.0021870045457035303, -6.556489552167477e-06, -0.0011969790793955326, -0.0033896868117153645, -0.00025006983196362853, -0.00817713513970375, -2.038458114839159e-05, -0.0018546062055975199, -0.023355970159173012], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.0799037516117096, -0.5924879908561707, -0.13510389626026154], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.017247332260012627, -0.0010382506297901273, -0.051786407828330994, -0.6311419606208801], "finish_reason": "stop"}], "metrics": {"energy": 336.618711227417, "energy_per_token": 1.8394465094394372, "time": 13.95817, "time_per_token": 0.07627415300546449}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -0.2810932397842407, -0.12280548363924026, -3.933898824470816e-06, -6.794906312279636e-06, -0.004519605077803135, -0.28695130348205566, -0.03699379786849022, -0.1545061618089676, -0.015607588924467564], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " Sequential([", "tokens": [" Sequ", "ential", "([", "\n"], "logprobs": [-2.274132490158081, -5.722029527532868e-06, -0.7005293369293213, -0.12873995304107666], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.0005968220066279173, -0.0012225781101733446, -1.004629373550415, -8.22540732769994e-06, -0.16420455276966095, -0.6264370679855347, -0.00010525626566959545, -0.00016246906307060272, -0.00019000156316906214, -0.010527316480875015, -0.030906666070222855, -0.018076909705996513, -0.0012147198431193829, -0.00016449528629891574, -7.903263758635148e-05, -0.3229586184024811, -0.011104804463684559], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0008055302896536887, -7.652943895664066e-05, -0.01598636619746685, -0.017728203907608986, -0.00012361239350866526, -0.00041607304592616856, -0.019721729680895805, -0.00150781380943954, -2.169585604860913e-05, -0.00788173172622919, -0.8672308325767517, -0.0016039852052927017, -0.08289671689271927, -0.5066366791725159, -0.0729784145951271], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.025939147919416428, -7.497983460780233e-05, -0.00023112009512260556, -0.02531774900853634, -0.00031418632715940475, -0.0010594476480036974, -0.0018899451242759824, -0.003861709963530302, -0.07635348290205002], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.002712144749239087, -0.000538680877070874, -0.6248185634613037, -0.0022693139035254717, -0.0056349714286625385, -5.960462772236497e-07, -5.006777428206988e-06, -0.00023648326168768108, -2.3841855067985307e-07, -6.9141146923357155e-06, -6.305972783593461e-05, -0.05046219006180763, -0.0032959445379674435, -0.006287910509854555, -0.180038720369339, -0.003361885668709874, -9.917721035890281e-05, -0.00014590153296012431, -1.3330163955688477, -0.027888797223567963, -0.0038791659753769636, -0.0007420408655889332, -0.0017888034926727414, -0.039222970604896545, -0.11246852576732635, -0.01601405255496502], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(10, 10))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "0", ",", " ", "1", "0", "))", "\n"], "logprobs": [-0.0268575269728899, -0.002977701835334301, -0.0003216941258870065, -0.0004615910293068737, -0.010707780718803406, -7.068861305015162e-05, -1.6903038024902344, -0.3957444131374359, -0.00013386306818574667, -0.009747172705829144, -1.0514347553253174, -0.542512059211731, -0.002446160651743412, -0.069921113550663, -1.5288221836090088, -0.0162816122174263, -0.011962695978581905, -0.016844887286424637], "finish_reason": "stop"}, {"text": "plot(recall, precision, marker='o', label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " marker", "='", "o", "'", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.1415446400642395, -0.013942580670118332, -0.007721694651991129, -0.0005209281225688756, -0.009911134839057922, -0.0009748950251378119, -0.34109535813331604, -2.736786365509033, -0.012251362204551697, -0.46165958046913147, -1.3938117027282715, -0.00025876989820972085, -0.4686887860298157, -0.08704637736082077, -0.1599087119102478, -0.0007039214833639562, -0.055181071162223816, -0.004999872762709856, -0.00014172980445437133, -0.17965401709079742, -0.0002057340752799064, -0.011575086042284966, -0.22413745522499084], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.5786768794059753, -0.10350683331489563, -0.32981038093566895, -0.013735538348555565, -0.007207345683127642, -3.755022044060752e-05, -0.006385163404047489, -0.020621661096811295], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004601611872203648, -2.4318398573086597e-05, -0.0007908792467787862, -0.00022384998737834394, -0.00023755589791107923, -8.4638240878121e-06, -0.0006221981020644307, -0.002704417100176215], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008018327876925468, -7.70062324590981e-05, -0.0016066036187112331, -0.006457060109823942, -0.002653175499290228, -5.722029527532868e-06, -0.001190192298963666, -0.002816283842548728, -0.0002847504511009902, -0.008858547545969486, -2.396077979938127e-05, -0.0020008322317153215, -0.02733612060546875], "finish_reason": "stop"}, {"text": "legend(loc='lower right')  # Modify here to add legend", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "  ", "#", " Mod", "ify", " here", " to", " add", " legend", "\n"], "logprobs": [-0.08124134689569473, -0.6349870562553406, -0.0012242449447512627, -0.12307925522327423, -1.0261809825897217, -0.3018663823604584, -0.020359113812446594, -2.347738742828369, -0.00027497802511788905, -0.5287315249443054, -0.002114800037816167, -0.09816465526819229, -0.10908585786819458, -2.113191604614258, -0.27033716440200806, -0.3857172727584839], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.014665305614471436, -0.0011834054021164775, -0.03864085301756859], "finish_reason": "stop"}], "metrics": {"energy": 359.0110518541334, "energy_per_token": 1.734352907507891, "time": 15.802051, "time_per_token": 0.07633841062801933}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, shuffle=True)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " shuffle", "=", "True", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -0.2810932397842407, -2.7306032180786133, -0.005494729615747929, -0.06575465947389603, -0.9818629026412964, -0.024917026981711388], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.694961428642273, -0.025279276072978973, -0.022904597222805023, -0.004212435334920883, -0.001696815132163465, -0.09516768157482147], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.13433179259300232, -0.00010156115604331717, -0.00010895135346800089, -0.5360037684440613, -0.00016330339713022113, -4.207999518257566e-05, -8.344646857949556e-07, -5.125986263010418e-06, -0.3080042004585266, -0.1545226126909256], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005594118847511709, -0.001493054092861712, -0.6616989374160767, -0.12648317217826843, -0.012881755828857422, -0.0005179494037292898, -0.00016902448260225356, -9.83428253675811e-05, -0.00010513706365600228, -0.0008435266790911555, -0.022945957258343697, -0.04372362792491913, -0.2881185710430145, -0.0001429217227268964, -0.0345841646194458, -0.010503134690225124], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007637205999344587, -8.165503095369786e-05, -0.01637379452586174, -0.016847699880599976, -0.00013481661153491586, -0.00037853704998269677, -0.01850881800055504, -0.0014751992421224713, -2.1457441107486375e-05, -0.007936135865747929, -0.7618275284767151, -0.0007508557755500078, -0.5247902274131775, -0.12409325689077377, -0.5035296082496643, -0.07199573516845703, -0.0008868813747540116, -0.11569411307573318, -0.049646127969026566, -0.05753893777728081], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.026074228808283806, -5.221230458118953e-05, -0.00022659118985757232, -0.020760731771588326, -0.00038413776201196015, -0.0011544713051989675, -0.0019550274591892958, -0.004584041424095631, -0.08271072059869766], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0030613720882683992, -0.0005637010326609015, -0.7126308083534241, -0.0033428759779781103, -0.006092903204262257, -4.768370445162873e-07, -4.172316494077677e-06, -0.00021944021864328533, -2.3841855067985307e-07, -8.106198947643861e-06, -6.0794889577664435e-05, -0.044673819094896317, -0.0030115749686956406, -0.006330200936645269, -0.16504724323749542, -0.0033895678352564573, -0.00012742661056108773, -0.0001528146385680884, -0.30686190724372864, -0.009259494952857494], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.02997233346104622, -0.0034292482305318117, -0.0002985746832564473, -0.0005511910421773791, -0.007648942526429892, -7.068861305015162e-05, -0.2106754332780838, -0.005379605107009411], "finish_reason": "stop"}, {"text": "plot(recall, precision, 'b--', alpha=0.5, label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "b", "--", "'", ",", " alpha", "=", "0", ".", "5", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.13489682972431183, -0.011168228462338448, -0.0070973895490169525, -0.0005035324720665812, -0.011963521130383015, -0.0009048658539541066, -0.4065658450126648, -1.8153197765350342, -0.703406810760498, -2.32850980758667, -0.6920047402381897, -0.0004557524516712874, -2.677567481994629, -0.0022048468235880136, -0.0526304692029953, -0.0002536452084314078, -0.8380721211433411, -0.12801314890384674, -0.48913291096687317, -0.06041961535811424, -0.15803775191307068, -0.0005158047424629331, -0.032853469252586365, -0.007437871303409338, -7.593343616463244e-05, -0.33182409405708313, -0.00011789103882620111, -0.007513715419918299, -0.14100010693073273], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.4449533522129059, -0.09815752506256104, -0.33871203660964966, -0.01616748981177807, -0.00789639726281166, -4.95898348162882e-05, -0.006020268891006708, -0.018499106168746948], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.00042215018766000867, -2.1934269170742482e-05, -0.0006198153714649379, -0.00022635281493421644, -0.00025078488397412, -8.583032467868179e-06, -0.0007154765771701932, -0.002630823291838169], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008464177139103413, -6.794698856538162e-05, -0.002196639310568571, -0.006444031372666359, -0.002410603454336524, -5.722029527532868e-06, -0.0012379371328279376, -0.0027947674971073866, -0.00024387246230617166, -0.007709392346441746, -1.7523612768854946e-05, -0.0021509623620659113, -0.024407027289271355], "finish_reason": "stop"}, {"text": "legend(loc='upper left')  # Modify here to change the legend position", "tokens": ["legend", "(", "loc", "='", "upper", " left", "')", "  ", "#", " Mod", "ify", " here", " to", " change", " the", " legend", " position", "\n"], "logprobs": [-0.1013173907995224, -0.7851899862289429, -0.0011232740944251418, -0.10454408824443817, -0.5458676815032959, -0.8194202780723572, -0.1270911991596222, -2.160645008087158, -0.00018273114983458072, -0.5681846737861633, -0.0021871235221624374, -0.09052672237157822, -0.11554650217294693, -3.4487624168395996, -1.1540794372558594, -0.25007742643356323, -1.076779842376709, -0.047293659299612045], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>#!/usr/bin/env python3", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.015571088530123234, -0.0011192255187779665, -0.04981694743037224, -1.260682463645935, -2.3841855067985307e-07, -3.4570634852570947e-06, -4.494089080253616e-05, -0.00013624693383462727, -0.07611798495054245, -1.5367841720581055, -1.2142192125320435, -0.04021202772855759, -0.10274048149585724, -3.4689302992774174e-05, -0.003679887391626835, -0.0005608416395261884, -0.040027305483818054, -0.0034252090845257044, -0.6993032693862915, -0.02190222591161728], "finish_reason": "stop"}], "metrics": {"energy": 386.3030626010892, "energy_per_token": 1.747977658828458, "time": 15.604362, "time_per_token": 0.07060797285067873}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=1)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -0.2810932397842407, -0.12280548363924026, -3.933898824470816e-06, -6.794906312279636e-06, -0.004519605077803135, -2.1750967502593994, -0.9507282972335815, -0.02329133450984955], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.6397637128829956, -0.00013326710904948413, -5.0424259825376794e-05, -1.0728830375228426e-06, -5.8412379075889476e-06, -0.3647613525390625, -0.1941385567188263], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0006462631281465292, -0.0013484203955158591, -0.7741599082946777, -0.13491110503673553, -0.015154346823692322, -0.0005888396990485489, -0.0001658063702052459, -7.974783511599526e-05, -0.00011526874004630372, -0.0007052318542264402, -0.02285519614815712, -0.04419592767953873, -0.25667694211006165, -0.00013255194062367082, -0.03609101101756096, -0.00852812360972166], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.000756216119043529, -9.154854342341423e-05, -0.018953291699290276, -0.015965834259986877, -0.00011121608258690685, -0.00039498155820183456, -0.017807837575674057, -0.0014697236474603415, -1.9311717551317997e-05, -0.008297967724502087, -0.6838374137878418, -0.0016005337238311768, -0.09524734318256378, -0.5107103586196899, -0.06930220872163773], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.024652929976582527, -6.90197994117625e-05, -0.00023648326168768108, -0.01769084297120571, -0.0004127365828026086, -0.0014617482665926218, -0.0018358058296144009, -0.003650906728580594, -0.07582563161849976], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.002462095348164439, -0.0005675135762430727, -0.8331186175346375, -0.0026328444946557283, -0.003917164634913206, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.0001554368354845792, -4.768370445162873e-07, -6.6756979322235566e-06, -0.00010835537250386551, -0.07093958556652069, -0.004307278897613287, -0.004928938578814268, -0.1694665402173996, -0.0060288007371127605, -0.00012861855793744326, -0.0001282609737245366, -0.30201295018196106, -0.006511304993182421], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.026866115629673004, -0.002888200106099248, -0.0002935693773906678, -0.0005240259342826903, -0.009748353622853756, -7.068861305015162e-05, -0.2388780415058136, -0.006036621052771807], "finish_reason": "stop"}, {"text": "plot(recall, precision, 'b-', label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "b", "-'", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.15332387387752533, -0.013641232624650002, -0.008020811714231968, -0.0006380429258570075, -0.01053816918283701, -0.0010153858456760645, -0.30006805062294006, -1.661136269569397, -0.7809234261512756, -1.523969054222107, -8.77341881277971e-05, -0.6550531983375549, -0.07367189973592758, -0.12313385307788849, -0.00040558696491643786, -0.06639740616083145, -0.007176455110311508, -0.0001161031104857102, -0.19687053561210632, -0.000102037942269817, -0.012783014215528965, -0.14633524417877197], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.46173322200775146, -0.10039938986301422, -0.3423154354095459, -0.01650173030793667, -0.007561159320175648, -4.6967357775429264e-05, -0.007834658026695251, -0.019553640857338905], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.000440262199845165, -1.7046782886609435e-05, -0.0008226824575103819, -0.00020489977032411844, -0.00023100091493688524, -8.106198947643861e-06, -0.0007408496458083391, -0.0021671399008482695], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.00768608832731843, -6.711257447022945e-05, -0.0016722993459552526, -0.005758482031524181, -0.0021068297792226076, -5.483612312673358e-06, -0.0012465096078813076, -0.0027053682133555412, -0.0002914242504630238, -0.008594075217843056, -2.1815061700181104e-05, -0.0020215329714119434, -0.01375823188573122], "finish_reason": "stop"}, {"text": "legend(loc='upper left')", "tokens": ["legend", "(", "loc", "='", "upper", " left", "')", "\n"], "logprobs": [-0.10130457580089569, -0.6721686124801636, -0.001277822069823742, -0.112899549305439, -0.5531183481216431, -0.7299030423164368, -0.12328614294528961, -0.13627420365810394], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>from functools import partial", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "from", " fun", "ct", "ools", " import", " partial", "\n"], "logprobs": [-0.015442562289536, -0.0010147904977202415, -0.04409840703010559, -1.2884385585784912, -2.3841855067985307e-07, -3.4570634852570947e-06, -3.099393507000059e-05, -0.00011634149996098131, -0.08378926664590836, -1.2738056182861328, -4.093339920043945, -0.019384469836950302, -0.0015999386087059975, -0.00013684290752280504, -1.6118755340576172, -0.04542628303170204], "finish_reason": "stop"}], "metrics": {"energy": 356.2376636219024, "energy_per_token": 1.790139013175389, "time": 15.766044, "time_per_token": 0.07922635175879397}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -0.2810932397842407, -0.12280548363924026, -3.933898824470816e-06, -6.794906312279636e-06, -0.004519605077803135, -0.28695130348205566, -0.03699379786849022, -0.1545061618089676, -0.015607588924467564], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.694961428642273, -0.025279276072978973, -0.022904597222805023, -0.004212435334920883, -0.001696815132163465, -0.09516768157482147], "finish_reason": "stop"}, {"text": " keras.models.Sequential([keras.layers.Dense(input_dim, activation='sigmoid')])", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "input", "_", "dim", ",", " activation", "='", "s", "igmoid", "')", "])", "\n"], "logprobs": [-0.13433179259300232, -0.00010156115604331717, -0.00010895135346800089, -0.5360037684440613, -0.00016330339713022113, -4.207999518257566e-05, -8.344646857949556e-07, -5.125986263010418e-06, -0.3080042004585266, -2.1303412914276123, -7.009260298218578e-05, -0.0010929093696177006, -2.1457441107486375e-05, -0.013189333491027355, -0.00017295771976932883, -0.0001726001501083374, -2.0965240001678467, -0.0028249616734683514, -0.012744645588099957, -0.032127268612384796, -0.03096676804125309, -0.20644326508045197, -0.009778928942978382, -1.2397689715726301e-05, -0.030694667249917984, -0.03661554306745529, -0.089368537068367], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.0006401873542927206, -0.0011882871622219682, -0.993959367275238, -9.536697689327411e-06, -0.12458087503910065, -0.6031854748725891, -0.000102037942269817, -0.00012432756193447858, -0.0001821352052502334, -0.011158797889947891, -0.028711451217532158, -0.01538786105811596, -0.001420323271304369, -0.00017891713650897145, -7.223821739898995e-05, -0.3051539957523346, -0.011759956367313862], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0009728704462759197, -7.998623186722398e-05, -0.017266899347305298, -0.021867938339710236, -0.00010895135346800089, -0.00048423008411191404, -0.020716363564133644, -0.0013556823832914233, -1.9192511899746023e-05, -0.007050515618175268, -0.6607604026794434, -0.0016627785516902804, -0.09279943257570267, -0.5008208751678467, -0.06973735243082047], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.026571771129965782, -6.603976362384856e-05, -0.0002579356369096786, -0.022904131561517715, -0.0003511289251036942, -0.001259487122297287, -0.0020268866792321205, -0.004468574654310942, -0.07899737358093262], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0029785337392240763, -0.0005881248507648706, -0.766933262348175, -0.0017627429915592074, -0.00375459180213511, -3.576278118089249e-07, -3.4570634852570947e-06, -0.0001494772732257843, -5.960462772236497e-07, -6.437280717364047e-06, -0.00010215714428341016, -0.06583290547132492, -0.005027272272855043, -0.00499750068411231, -0.13238975405693054, -0.007838561199605465, -0.00014137222024146467, -0.00013565097469836473, -0.26061564683914185, -0.0052934009581804276], "finish_reason": "stop"}, {"text": " ax = plt.subplots(1)", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "1", ")", "\n"], "logprobs": [-0.02778422273695469, -0.0035304618068039417, -0.000284154579276219, -0.0005342725198715925, -0.007678871974349022, -5.113947918289341e-05, -1.638920783996582, -1.3299026489257812, -1.5772852897644043, -0.02197091653943062], "finish_reason": "stop"}, {"text": "plot(recall, precision, color='b')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " color", "='", "b", "')", "\n"], "logprobs": [-0.140231192111969, -0.011634591966867447, -0.007871204987168312, -0.0005696581210941076, -0.012186829000711441, -0.0009838269324973226, -0.34291645884513855, -1.6945745944976807, -0.01911844126880169, -1.715114712715149, -1.6167609691619873, -0.26936885714530945], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.39347511529922485, -0.11092693358659744, -0.3627606928348541, -0.013545623980462551, -0.008821917697787285, -4.446407547220588e-05, -0.006960904225707054, -0.01905025541782379], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0003860443539451808, -2.0503786799963564e-05, -0.0006342306733131409, -0.00021514961554203182, -0.00022456508304458112, -7.629365427419543e-06, -0.0005763299996033311, -0.0025247621815651655], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.00698967045173049, -6.01988795096986e-05, -0.0015418557450175285, -0.005037473049014807, -0.0024829055182635784, -6.198863957251888e-06, -0.001279726973734796, -0.0027236768510192633, -0.00025781645672395825, -0.006564718205481768, -2.062299427052494e-05, -0.002151557244360447, -0.023438885807991028], "finish_reason": "stop"}, {"text": "legend(loc='best')  # Modify here to add legend to the Axes object", "tokens": ["legend", "(", "loc", "='", "best", "')", "  ", "#", " Mod", "ify", " here", " to", " add", " legend", " to", " the", " Ax", "es", " object", "\n"], "logprobs": [-0.09476754069328308, -0.6786456108093262, -0.0012871085200458765, -0.13329890370368958, -3.0290329456329346, -0.05569399520754814, -2.2743752002716064, -0.00021741411183029413, -0.9288790225982666, -0.003432099474593997, -0.09635122120380402, -0.08814296871423721, -2.2083580493927, -0.21352213621139526, -2.0248122215270996, -0.6405085921287537, -1.8182934522628784, -0.0013078240444883704, -0.10676752030849457, -0.031475163996219635], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>from sklearn.linear_model import LinearRegression", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "from", " sklearn", ".", "linear", "_", "model", " import", " Linear", "Reg", "ression", "\n"], "logprobs": [-0.01854357309639454, -0.0010477773612365127, -0.05238841101527214, -1.2750086784362793, -2.3841855067985307e-07, -3.4570634852570947e-06, -5.364274329622276e-05, -0.0001787979417713359, -0.07414233684539795, -1.2416582107543945, -1.2936185598373413, -0.16441282629966736, -2.9195098876953125, -7.271740287251305e-06, -0.005981402471661568, -0.0020550815388560295, -0.8318114876747131, -0.0010948146227747202, -0.00028880240279249847, -0.0908820852637291], "finish_reason": "stop"}], "metrics": {"energy": 416.8994572467803, "energy_per_token": 1.861158291280269, "time": 17.018486, "time_per_token": 0.07597538392857142}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -1.686811089515686, -0.023820992559194565], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.694961428642273, -0.025279276072978973, -0.022904597222805023, -0.004212435334920883, -0.001696815132163465, -0.09516768157482147], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.13433179259300232, -0.00010156115604331717, -0.00010895135346800089, -0.8901640772819519, -3.4570634852570947e-06, -2.264974000354414e-06, -0.09779954701662064, -0.2072804868221283], "finish_reason": "stop"}, {"text": "compile(optimizer='SGD', loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "='", "S", "GD", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.0005913416389375925, -0.0014387742849066854, -1.001067876815796, -7.748573807475623e-06, -0.14670394361019135, -0.8290656805038452, -0.00020001317898277193, -6.878139538457617e-05, -0.0003545847721397877, -0.009524381719529629, -0.024170955643057823, -0.019253043457865715, -0.0007306052139028907, -0.00016342257731594145, -5.6265202147187665e-05, -0.9837216138839722, -0.013995480723679066], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=200, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "2", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007373951375484467, -7.366862701019272e-05, -0.017250027507543564, -0.014045204035937786, -0.00011252723925281316, -0.00040463366894982755, -0.02034498006105423, -0.0019286142196506262, -2.253030106658116e-05, -0.006626536604017019, -0.7806212902069092, -0.0007447806419804692, -2.11342191696167, -0.26826533675193787, -1.1862589120864868, -0.07637059688568115, -0.08526881039142609, -0.0007438276661559939, -0.14234304428100586, -0.07997924834489822, -0.05262391269207001], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.023540189489722252, -6.329813186312094e-05, -0.00024339574156329036, -0.025900468230247498, -0.00036793138133361936, -0.0012704405235126615, -0.0023042813409119844, -0.0041169896721839905, -0.09014934301376343], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test.ravel(), Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.003059589536860585, -0.0005728749092668295, -0.9791015982627869, -0.0025968183763325214, -0.004130404442548752, -2.3841855067985307e-07, -2.861018856492592e-06, -0.0002157455455744639, -4.768370445162873e-07, -7.152531907195225e-06, -0.00010859376925509423, -0.07264379411935806, -0.003855534829199314, -0.005947629921138287, -2.142594575881958, -0.19078972935676575, -7.784063927829266e-05, -0.0003510097449179739, -0.005093692801892757, -0.00026806574896909297, -0.00021717573690693825, -0.15267296135425568, -0.0056834532879292965], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.0310356467962265, -0.0036022078711539507, -0.0003071551618631929, -0.0006121906917542219, -0.00627618283033371, -6.222531374078244e-05, -0.17331382632255554, -0.005743073765188456], "finish_reason": "stop"}, {"text": "plot(recall, precision, 'g-')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "g", "-", "')", "\n"], "logprobs": [-0.14619877934455872, -0.013898377306759357, -0.006917220074683428, -0.0005414212355390191, -0.011256285011768341, -0.000996212475001812, -0.37887924909591675, -1.803924322128296, -2.2997705936431885, -0.3196585476398468, -0.008084077388048172, -0.10887141525745392], "finish_reason": "stop"}, {"text": "plot([0, 1], [0, 1], 'k-', lw=1, label='Perfect diagonal line')", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " '", "k", "-'", ",", " l", "w", "=", "1", ",", " label", "='", "Per", "fect", " diagonal", " line", "')", "\n"], "logprobs": [-1.8357386589050293, -0.2711932957172394, -0.0020292659755796194, -0.020719164982438087, -0.008894466795027256, -0.0013458014000207186, -0.0006690170848742127, -0.00013183678674977273, -0.001984652131795883, -0.0014521064003929496, -0.001817719079554081, -0.00033718624035827816, -0.0003972456615883857, -0.00995693076401949, -3.8265450712060556e-05, -0.851063072681427, -1.3216884136199951, -1.5266575813293457, -0.000694153131917119, -3.0767557621002197, -0.004361758939921856, -0.00010859376925509423, -0.7515886425971985, -0.3218287229537964, -0.08487410843372345, -0.018705397844314575, -1.4493147134780884, -0.005909234285354614, -1.5873231887817383, -0.27506721019744873, -0.028130484744906425, -0.11501578241586685], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004941195948049426, -1.5735502529423684e-05, -0.0006735440110787749, -0.00022265815641731024, -0.0002520958660170436, -8.34461570775602e-06, -0.0007210753974504769, -0.0030903699807822704], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008148402906954288, -6.627816765103489e-05, -0.001629097736440599, -0.005432248581200838, -0.0022299441043287516, -6.079655122448457e-06, -0.0013516347389668226, -0.0029444219544529915, -0.0002610342635307461, -0.007532291114330292, -2.1934269170742482e-05, -0.0022245917934924364, -0.01958625577390194], "finish_reason": "stop"}, {"text": "legend(loc='upper left')", "tokens": ["legend", "(", "loc", "='", "upper", " left", "')", "\n"], "logprobs": [-0.10276984423398972, -0.6767743229866028, -0.0013960388023406267, -0.11813625693321228, -0.5206186175346375, -0.6974737048149109, -0.08197097480297089, -0.13413989543914795], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.014814133755862713, -0.0010744519531726837, -0.040751345455646515, -0.6431840658187866], "finish_reason": "stop"}], "metrics": {"energy": 341.031853597641, "energy_per_token": 1.6966758885454776, "time": 15.5460205, "time_per_token": 0.0773433855721393}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -2.3200266361236572], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.694961428642273, -0.025279276072978973, -0.022904597222805023, -0.004212435334920883, -0.001696815132163465, -0.09516768157482147], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.13433179259300232, -0.00010156115604331717, -0.00010895135346800089, -0.8901640772819519, -3.4570634852570947e-06, -2.264974000354414e-06, -0.09779954701662064, -0.2072804868221283], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005913416389375925, -0.0014387742849066854, -0.5742184519767761, -0.13112497329711914, -0.01622508093714714, -0.0006764031131751835, -0.00016127715934999287, -6.711257447022945e-05, -0.00014208737411536276, -0.0008322112844325602, -0.02901836670935154, -0.05409344658255577, -0.2777833044528961, -0.00012373158824630082, -0.03148232772946358, -0.008199954405426979], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=20, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "2", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007465674425475299, -8.225102646974847e-05, -0.017996476963162422, -0.016149308532476425, -0.00013958434283267707, -0.0005550036439672112, -0.020103273913264275, -0.0018656720640137792, -2.1576648578047752e-05, -0.0069540380500257015, -0.7843748927116394, -0.0006435230607166886, -2.0709073543548584, -0.31267592310905457, -0.4181259572505951, -0.08916901051998138, -0.0006945105269551277, -0.12970206141471863, -0.049334585666656494, -0.06245176121592522], "finish_reason": "stop"}, {"text": " model.predict(X_test).flatten()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "fl", "atten", "()", "\n"], "logprobs": [-0.031994618475437164, -7.1403817855753e-05, -0.0002525725867599249, -0.020825298503041267, -0.00042655906872823834, -0.0012687736889347434, -0.0014748420799151063, -0.004393092822283506, -2.903574228286743, -0.49304360151290894, -4.8874615458771586e-05, -0.0014753182185813785, -0.10572045296430588], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.003436376340687275, -0.0004948345012962818, -0.6935296654701233, -0.0032725371420383453, -0.006292056757956743, -7.152555099310121e-07, -3.6954811548639555e-06, -0.0002485204895492643, -2.3841855067985307e-07, -7.271740287251305e-06, -5.829164365422912e-05, -0.04742179438471794, -0.0029024637769907713, -0.006473286543041468, -0.1716233640909195, -0.003744971938431263, -8.082063141046092e-05, -0.0001641377166379243, -0.27060067653656006, -0.007631315384060144], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.0287802554666996, -0.003463462460786104, -0.0002858230145648122, -0.0005969410995021462, -0.008749245665967464, -6.532455881824717e-05, -0.1927422285079956, -0.006243604701012373], "finish_reason": "stop"}, {"text": "plot(recall, precision, 'g-')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "g", "-", "')", "\n"], "logprobs": [-0.16038526594638824, -0.01260386686772108, -0.008082184940576553, -0.0005243833875283599, -0.01353445090353489, -0.0009885906474664807, -0.35849595069885254, -1.714846134185791, -2.1643075942993164, -0.2951332628726959, -0.006957470905035734, -0.09950891882181168], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.37157362699508667, -0.09392186254262924, -0.35084402561187744, -0.014178846031427383, -0.008024122565984726, -4.589452510117553e-05, -0.005992185790091753, -0.01916498690843582], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0003734129713848233, -1.645074735279195e-05, -0.0007796823629178107, -0.00018308870494365692, -0.00023123928986024112, -8.940656698541716e-06, -0.0006719953380525112, -0.0025485437363386154], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006718901451677084, -6.4490144723095e-05, -0.001498410478234291, -0.005584354046732187, -0.002781928749755025, -5.960446742392378e-06, -0.0013403251068666577, -0.002497175009921193, -0.0003034608089365065, -0.006368580274283886, -2.062299427052494e-05, -0.0023840833455324173, -0.01542624644935131], "finish_reason": "stop"}, {"text": "legend(loc='lower left')", "tokens": ["legend", "(", "loc", "='", "lower", " left", "')", "\n"], "logprobs": [-0.09126441180706024, -0.7239627242088318, -0.0014104428701102734, -0.10698851943016052, -1.0448105335235596, -1.3805391788482666, -0.24045902490615845, -0.1367892026901245], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>import numpy as np", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "import", " numpy", " as", " np", "\n"], "logprobs": [-0.012091551907360554, -0.0010495636379346251, -0.04699912667274475, -1.2311413288116455, -2.3841855067985307e-07, -3.576272320060525e-06, -4.136476854910143e-05, -0.00017271934484597296, -0.12653043866157532, -0.9820499420166016, -0.7692721486091614, -0.011775978840887547, -0.0011129144113510847, -0.007310662884265184], "finish_reason": "stop"}], "metrics": {"energy": 300.27260342025755, "energy_per_token": 1.7257046173578021, "time": 12.331451, "time_per_token": 0.07087040804597701}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -0.11303243041038513, -0.0010281282011419535, -0.017568212002515793, -0.02432035468518734, -0.11031465232372284, -9.536697689327411e-06, -3.0278701160568744e-05, -0.035017866641283035, -0.025812646374106407, -0.00011264643399044871, -0.011294122785329819, -0.2927887439727783, -0.11860455572605133, -3.099436753473128e-06, -5.602820692729438e-06, -0.004598043859004974, -0.25428569316864014, -0.03538269177079201, -0.17676354944705963, -0.022499993443489075], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.694961428642273, -0.025279276072978973, -0.022904597222805023, -0.004212435334920883, -0.001696815132163465, -0.09516768157482147], "finish_reason": "stop"}, {"text": " keras.Sequential([keras.layers.Dense(1, activation='sigmoid', input_shape=(input_dim,))])  # Model", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "input", "_", "dim", ",", "))", "])", "  ", "#", " Model", "\n"], "logprobs": [-0.13433179259300232, -0.00010156115604331717, -0.00010895135346800089, -0.8901640772819519, -3.4570634852570947e-06, -2.264974000354414e-06, -0.09779954701662064, -1.7779725790023804, -6.735097849741578e-05, -0.0019414640264585614, -1.728519782773219e-05, -0.009614827111363411, -0.0001501924270996824, -0.00018010901112575084, -1.154045820236206, -0.38044050335884094, -1.2460098266601562, -0.18460363149642944, -0.0008217295398935676, -1.5139465176616795e-05, -0.1289358288049698, -0.0003250309091527015, -0.05525687336921692, -1.1920922133867862e-06, -0.7872343063354492, -0.22760698199272156, -0.022755686193704605, -6.913899414939806e-05, -0.00016044282529037446, -0.02034427970647812, -0.023419788107275963, -0.04905075579881668, -2.4034974575042725, -0.0003240775258745998, -3.8706417083740234, -2.925881862640381], "finish_reason": "stop"}, {"text": "compile(optimizer='SGD', loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "='", "S", "GD", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.0005913416389375925, -0.0014387742849066854, -1.001067876815796, -7.748573807475623e-06, -0.14670394361019135, -0.8290656805038452, -0.00020001317898277193, -6.878139538457617e-05, -0.0003545847721397877, -0.009524381719529629, -0.024170955643057823, -0.019253043457865715, -0.0007306052139028907, -0.00016342257731594145, -5.6265202147187665e-05, -0.9837216138839722, -0.013995480723679066], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007373951375484467, -7.366862701019272e-05, -0.017250027507543564, -0.014045204035937786, -0.00011252723925281316, -0.00040463366894982755, -0.02034498006105423, -0.0019286142196506262, -2.253030106658116e-05, -0.006626536604017019, -0.7806212902069092, -0.0007447806419804692, -0.5442768335342407, -0.11174269765615463, -0.5373643040657043, -0.07112612575292587, -0.0008515069494023919, -0.09982021898031235, -0.044300854206085205, -0.06185612082481384], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.023721346631646156, -5.3165931603871286e-05, -0.00023934361524879932, -0.02449648454785347, -0.00038211196078918874, -0.001279846066609025, -0.0018757858779281378, -0.0042235939763486385, -0.07736465334892273], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.002920055529102683, -0.0005635818815790117, -0.6124719381332397, -0.003312222193926573, -0.004994060844182968, -4.768370445162873e-07, -3.576272320060525e-06, -0.0002273062855238095, -2.3841855067985307e-07, -7.748573807475623e-06, -5.9602869441732764e-05, -0.05540722608566284, -0.0027385372668504715, -0.00604053121060133, -0.1574569046497345, -0.0037576796021312475, -8.83301836438477e-05, -0.0001433984871255234, -0.23811104893684387, -0.007818453013896942], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.028358206152915955, -0.0035000513307750225, -0.0003165697562508285, -0.0005696581210941076, -0.011520879343152046, -7.10462118149735e-05, -0.20016074180603027, -0.005682504735887051], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.1639542579650879, -0.013138272799551487, -0.0076462216675281525, -0.0007117837085388601, -0.01327450666576624, -0.0009478605352342129, -1.2520809173583984, -0.2726403772830963], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.35677075386047363, -0.10344115644693375, -0.3370339572429657, -0.013434715569019318, -0.006805692799389362, -4.6967357775429264e-05, -0.00699416920542717, -0.02462373673915863], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.00040892345714382827, -2.0503786799963564e-05, -0.0006711614551022649, -0.0002256377338198945, -0.00025769727653823793, -8.22540732769994e-06, -0.0005669178790412843, -0.002604071283712983], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008921878412365913, -7.045020902296528e-05, -0.0018794744974002242, -0.005389683414250612, -0.0022439793683588505, -6.556489552167477e-06, -0.0012775840004906058, -0.0026556721422821283, -0.0002383901592111215, -0.006892713718116283, -2.3603161025675945e-05, -0.0020913651678711176, -0.015659697353839874], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.10803907364606857, -0.6440966725349426, -0.15351100265979767], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.014698432758450508, -0.0009727513534016907, -0.046003781259059906, -0.652866542339325], "finish_reason": "stop"}], "metrics": {"energy": 385.98222134208686, "energy_per_token": 1.9396091524727983, "time": 16.17654, "time_per_token": 0.08128914572864321}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -0.2810932397842407, -0.12280548363924026, -3.933898824470816e-06, -6.794906312279636e-06, -0.004519605077803135, -0.28695130348205566, -0.03699379786849022, -0.1545061618089676, -0.015607588924467564], "finish_reason": "stop"}, {"text": " 1", "tokens": [" ", "1", "\n"], "logprobs": [-3.101431131362915, -0.6452580094337463, -1.3157355785369873], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.14058774709701538, -9.476689592702314e-05, -0.00011407678539399058, -0.9014018177986145, -3.933898824470816e-06, -2.145764938177308e-06, -0.10545164346694946, -0.19664424657821655], "finish_reason": "stop"}, {"text": "compile(optimizer=keras.optimizers.SGD(), loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.0005824061809107661, -0.0017890414455905557, -0.9391972422599792, -8.34461570775602e-06, -2.0861120223999023, -0.2634732723236084, -1.883488948806189e-05, -0.0003951007383875549, -0.008999854326248169, -0.00012015574611723423, -0.01182534173130989, -0.0004306104383431375, -0.9581168293952942, -0.0002324311062693596, -0.03414485976099968, -0.3146664500236511, -0.011640247888863087, -0.0004655231023207307, -0.00014578233822248876, -6.568216485902667e-05, -0.6363659501075745, -0.011976360343396664], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=3, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "3", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007425173535011709, -9.262132516596466e-05, -0.018771851435303688, -0.018481552600860596, -0.00016389934171456844, -0.00041762212640605867, -0.020269636064767838, -0.0014818650670349598, -2.2649508537142538e-05, -0.006368816830217838, -0.7625767588615417, -0.0006569849792867899, -2.3516998291015625, -0.8417702317237854, -0.10128194838762283, -0.000812915270216763, -0.12020497769117355, -0.04513484612107277, -0.061495229601860046], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.03462446853518486, -6.83045873302035e-05, -0.0002181292074965313, -0.023051271215081215, -0.00034421717282384634, -0.0014961488777771592, -0.002355421893298626, -0.0038169401232153177, -0.07843146473169327], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0022034193389117718, -0.0005055579822510481, -0.5628398060798645, -0.0030367709696292877, -0.006072760559618473, -7.152555099310121e-07, -3.6954811548639555e-06, -0.0002840353990904987, -2.3841855067985307e-07, -7.867782187531702e-06, -5.245071224635467e-05, -0.05047227814793587, -0.0026318933814764023, -0.006261967122554779, -0.13218390941619873, -0.004227273631840944, -9.989239333663136e-05, -0.00016211149340961128, -0.2864997982978821, -0.008533324114978313], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.030475802719593048, -0.0028024944476783276, -0.0003237200144212693, -0.0004800597671419382, -0.011269251815974712, -7.366862701019272e-05, -0.1864856332540512, -0.005907456856220961], "finish_reason": "stop"}, {"text": "plot(recall, precision, linewidth=2, label='Precision-Recall Curve')  # Modify here", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " linewidth", "=", "2", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "  ", "#", " Mod", "ify", " here", "\n"], "logprobs": [-0.14711223542690277, -0.012103447690606117, -0.006799535825848579, -0.0006092122639529407, -0.010416309349238873, -0.0010582567192614079, -0.30512797832489014, -1.7527289390563965, -0.008499992080032825, -0.38888224959373474, -0.9747629165649414, -0.546276330947876, -0.09597137570381165, -0.07159776240587234, -0.00037126801908016205, -0.03273995220661163, -0.0052192858420312405, -9.476689592702314e-05, -0.22182375192642212, -0.0001137191939051263, -0.006913313176482916, -1.5974661111831665, -0.00012027494085486978, -0.2241392582654953, -0.0008086272282525897, -0.10138105601072311, -2.3491134643554688], "finish_reason": "stop"}, {"text": "grid(True)", "tokens": ["grid", "(", "True", ")", "\n"], "logprobs": [-3.2445785999298096, -1.1169952154159546, -0.32233354449272156, -0.0202803835272789, -0.06714407354593277], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004545609117485583, -2.002696055569686e-05, -0.0007400158210657537, -0.00019905969384126365, -0.000259365770034492, -8.583032467868179e-06, -0.0005967028555460274, -0.002716186922043562], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008875561878085136, -7.915183232398704e-05, -0.001718236249871552, -0.005048384889960289, -0.002426419872790575, -5.483612312673358e-06, -0.0012516292044892907, -0.002719396958127618, -0.00024291902082040906, -0.007989827543497086, -2.0503786799963564e-05, -0.00208125333301723, -0.0200883187353611], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.08566302806138992, -0.7474154829978943, -0.12957242131233215], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>#!/bin/env python3", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.014383446425199509, -0.0009918061550706625, -0.05598270893096924, -1.1643849611282349, -2.3841855067985307e-07, -3.099436753473128e-06, -3.4927710657939315e-05, -0.00013457823661156, -0.12658359110355377, -1.409097671508789, -1.2804691791534424, -0.041940562427043915, -2.5347671508789062, -0.00013886917440686375, -1.3650197982788086, -0.05464790388941765, -0.6778327822685242, -0.04190089553594589], "finish_reason": "stop"}], "metrics": {"energy": 395.89785718345644, "energy_per_token": 1.9696410805147087, "time": 15.313291, "time_per_token": 0.07618552736318408}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=1)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -0.11303243041038513, -0.0010281282011419535, -0.017568212002515793, -0.02432035468518734, -0.11031465232372284, -9.536697689327411e-06, -3.0278701160568744e-05, -0.035017866641283035, -0.025812646374106407, -0.00011264643399044871, -0.011294122785329819, -0.2927887439727783, -0.11860455572605133, -3.099436753473128e-06, -5.602820692729438e-06, -0.004598043859004974, -2.297555923461914, -0.8724542260169983, -0.021511100232601166], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " keras.Sequential([keras.layers.Dense(256, activation='sigmoid')])", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "2", "5", "6", ",", " activation", "='", "s", "igmoid", "')", "])", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.7624253034591675, -4.0531076592742465e-06, -2.3841830625315197e-06, -0.10218235850334167, -1.7179601192474365, -6.5205356804654e-05, -0.002027957234531641, -1.6927575416048057e-05, -0.010228240862488747, -0.00016330339713022113, -0.00016878610767889768, -2.4457688331604004, -2.2162210941314697, -0.0761231780052185, -0.005039726383984089, -0.11811528354883194, -0.1877439022064209, -0.07657147943973541, -2.3245540432981215e-05, -1.2705998420715332, -0.7660611271858215, -0.171713724732399], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005913416389375925, -0.0018340209499001503, -0.6168748736381531, -0.1341322809457779, -0.015253206714987755, -0.0005868143052794039, -0.00016234986833296716, -8.225102646974847e-05, -0.00012158608296886086, -0.0007756323902867734, -0.02274799533188343, -0.052170395851135254, -0.3014521896839142, -0.00013410145766101778, -0.03498517721891403, -0.009408303536474705], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0008879532688297331, -8.785339014139026e-05, -0.018035581335425377, -0.014765153639018536, -0.00013755806139670312, -0.0004832768754567951, -0.020032936707139015, -0.0015538772568106651, -2.5152843591058627e-05, -0.008456612005829811, -0.7686440944671631, -0.0008055302896536887, -0.5638555288314819, -0.11190067231655121, -0.5403547286987305, -0.09987501800060272, -0.0008174415561370552, -0.10164998471736908, -0.05093811824917793, -0.05390731617808342], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.026777217164635658, -6.508615479106084e-05, -0.00024196557933464646, -0.0181743111461401, -0.00039569655200466514, -0.0016856284346431494, -0.002455079462379217, -0.004153673071414232, -0.07520263642072678], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test.ravel(), Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0033827959559857845, -0.0005415403284132481, -0.5633538961410522, -0.0025949159171432257, -0.005790246184915304, -5.960462772236497e-07, -2.7418097943154862e-06, -0.0002083561266772449, -1.1920928244535389e-07, -7.867782187531702e-06, -7.259582343976945e-05, -0.040147215127944946, -0.002623451640829444, -0.00590958958491683, -1.9223475456237793, -0.24482695758342743, -7.545663538621739e-05, -0.00030155404238030314, -0.0028962830547243357, -0.00010632903286023065, -0.00018320789968129247, -0.11193637549877167, -0.007983441464602947], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(10, 5))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "0", ",", " ", "5", "))", "\n"], "logprobs": [-0.028739135712385178, -0.004016666207462549, -0.0002983363519888371, -0.0003830652858596295, -0.005448965821415186, -6.186770770000294e-05, -1.6348621845245361, -0.40626460313796997, -0.00015472168161068112, -0.008872726000845432, -1.1788864135742188, -0.5234835743904114, -0.0030302342493087053, -0.08343521505594254, -0.9184854626655579, -0.014945559203624725, -0.009522611275315285], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.15937834978103638, -0.009466639719903469, -0.007605761755257845, -0.0005638201837427914, -0.011296833865344524, -0.0010090741561725736, -1.2618123292922974, -0.2683428227901459], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.5176935195922852, -0.10026675462722778, -0.35934269428253174, -0.01565089449286461, -0.0077801295556128025, -4.327203714638017e-05, -0.007405094336718321, -0.02221916802227497], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0003638797497842461, -2.062299427052494e-05, -0.0007456144667230546, -0.00022599527437705547, -0.00020704510097857565, -9.298280929215252e-06, -0.0005723983631469309, -0.0026707714423537254], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.0059431265108287334, -6.532455881824717e-05, -0.0021991373505443335, -0.007277171593159437, -0.002316531492397189, -6.556489552167477e-06, -0.0011866202112287283, -0.0030496064573526382, -0.00029845553217455745, -0.008235779590904713, -1.9192511899746023e-05, -0.002017844934016466, -0.01634037122130394], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.10068399459123611, -0.7274833917617798, -0.12367240339517593], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|># Copyright 2018 The TensorFlow Authors. All Rights Reserved.", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "#", " Copyright", " ", "2", "0", "1", "8", " The", " Tensor", "Flow", " Authors", ".", " All", " Rights", " Reserved", ".", "\n"], "logprobs": [-0.013913190923631191, -0.0010151476599276066, -0.04584847763180733, -1.4779303073883057, -2.3841855067985307e-07, -3.099436753473128e-06, -3.313963316031732e-05, -0.00019560330838430673, -0.1373644918203354, -1.488389015197754, -3.018777370452881, -0.27028968930244446, -0.017456812784075737, -2.169585604860913e-05, -1.5717498064041138, -1.2110203504562378, -0.7017606496810913, -0.22040657699108124, -0.011876939795911312, -0.030461810529232025, -0.09405478835105896, -0.005451930221170187, -1.6331539882230572e-05, -1.811964830267243e-05, -3.2782016205601394e-05, -0.00012468514614738524], "finish_reason": "stop"}], "metrics": {"energy": 421.16384482192984, "energy_per_token": 1.897134436134819, "time": 16.807922, "time_per_token": 0.07571136036036037}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -2.2629804611206055], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " Sequential()", "tokens": [" Sequ", "ential", "()", "\n"], "logprobs": [-2.274132490158081, -5.722029527532868e-06, -0.7373907566070557, -0.0673394575715065], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='SGD')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "S", "GD", "')", "\n"], "logprobs": [-0.0005968220066279173, -0.0012225781101733446, -0.5989897847175598, -0.13915346562862396, -0.016649935394525528, -0.0007291757501661777, -0.00016318420239258558, -8.260862523457035e-05, -0.0001248043408850208, -0.0008385241380892694, -0.02300991676747799, -0.058565933257341385, -1.969301700592041, -0.00040928093949332833, -0.08421146869659424, -0.010196263901889324], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0, epochs=10)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ",", " epochs", "=", "1", "0", ")", "\n"], "logprobs": [-0.0007216709782369435, -8.11782301752828e-05, -0.016254402697086334, -0.014731558971107006, -0.00013279033009894192, -0.0004111875023227185, -0.019378624856472015, -0.0012860370334237814, -2.753696753643453e-05, -0.007023881655186415, -0.7688800692558289, -0.0014915067004039884, -0.08119573444128036, -0.9345413446426392, -0.26355478167533875, -0.0005049622268415987, -0.5017485618591309, -0.07805279642343521, -0.9434539079666138, -0.050692591816186905], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.026459280401468277, -6.41325386823155e-05, -0.00023123928986024112, -0.020237978547811508, -0.0003937899600714445, -0.001379491644911468, -0.00221519498154521, -0.004099181387573481, -0.0848730131983757], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.002572800265625119, -0.0005231918767094612, -0.8018617630004883, -0.0029768699314445257, -0.006025956943631172, -5.960462772236497e-07, -3.3378546504536644e-06, -0.00026544384309090674, -2.3841855067985307e-07, -7.986990567587782e-06, -6.186770770000294e-05, -0.04078957065939903, -0.0035042089875787497, -0.006429107394069433, -0.1768699288368225, -0.003799007972702384, -0.00012182447244413197, -0.00019762947340495884, -0.3053894340991974, -0.008916324935853481], "finish_reason": "stop"}, {"text": " ax = plt.subplots(1, 1, figsize=(15, 15))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "1", ",", " ", "1", ",", " fig", "size", "=(", "1", "5", ",", " ", "1", "5", "))", "\n"], "logprobs": [-0.031113073229789734, -0.0036701480858027935, -0.0003299168893136084, -0.0005273620481602848, -0.009643517434597015, -6.472854875028133e-05, -1.8381315469741821, -1.2886273860931396, -0.2025727480649948, -0.16747336089611053, -0.01594870537519455, -0.7624808549880981, -0.04518657922744751, -5.435795901576057e-05, -0.013091210275888443, -1.058689832687378, -2.548353910446167, -0.0035215525422245264, -0.0583651177585125, -0.9130894541740417, -0.8006462454795837, -0.023825300857424736, -0.01485054474323988], "finish_reason": "stop"}, {"text": "plot(recall, precision, linewidth=3, label='Precision-Recall Curve')  # Modify here to change line color", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " linewidth", "=", "3", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "  ", "#", " Mod", "ify", " here", " to", " change", " line", " color", "\n"], "logprobs": [-0.15048488974571228, -0.012876813299953938, -0.008014543913304806, -0.0007666985620744526, -0.010744105093181133, -0.0010314626852050424, -0.4230538308620453, -1.8382126092910767, -0.008592656813561916, -2.390313148498535, -0.4701831042766571, -0.6160287857055664, -0.12052574753761292, -0.08704899996519089, -0.0003935516288038343, -0.04305906221270561, -0.005643743555992842, -0.00010263393050990999, -0.18600888550281525, -0.00011383838864276186, -0.006758449599146843, -1.8185944557189941, -0.00016330339713022113, -0.2226918786764145, -0.0008061258122324944, -0.10506397485733032, -0.13199494779109955, -3.0177977085113525, -3.437293291091919, -1.5607049465179443, -1.0555260181427002], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.4753287434577942, -0.10059581696987152, -0.3731675148010254, -0.012232637964189053, -0.008708829991519451, -4.160317621426657e-05, -0.00535648362711072, -0.02235836535692215], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.00038532938924618065, -1.728519782773219e-05, -0.0006810491322539747, -0.00020811776630580425, -0.00021550717065110803, -9.65590606938349e-06, -0.0006113567505963147, -0.002785970689728856], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008086678571999073, -6.5205356804654e-05, -0.0015969631494954228, -0.007178348954766989, -0.002368147252127528, -5.602820692729438e-06, -0.0010188394226133823, -0.0030246484093368053, -0.0002760506176855415, -0.007529806345701218, -2.253030106658116e-05, -0.002523573115468025, -0.02445414289832115], "finish_reason": "stop"}, {"text": "legend(loc='upper right')", "tokens": ["legend", "(", "loc", "='", "upper", " right", "')", "\n"], "logprobs": [-0.08990802615880966, -0.6647608280181885, -0.0012698451755568385, -0.10843318700790405, -0.589467465877533, -0.5986928343772888, -0.058301690965890884, -0.17917509377002716], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.012038197368383408, -0.0011157722910866141, -0.054471246898174286, -0.7828759551048279], "finish_reason": "stop"}], "metrics": {"energy": 335.0687808418275, "energy_per_token": 1.7451499002178517, "time": 14.930199, "time_per_token": 0.077761453125}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -1.686811089515686, -0.023820992559194565], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " keras.models.Sequential([keras.layers.Dense(units=1, activation='sigmoid', input_shape=(input_dim,))])", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "units", "=", "1", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "input", "_", "dim", ",", "))", "])", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.6397637128829956, -0.00013326710904948413, -5.0424259825376794e-05, -1.0728830375228426e-06, -5.8412379075889476e-06, -0.3647613525390625, -1.8782072067260742, -8.022463589441031e-05, -0.0009201106731779873, -2.2411095415009186e-05, -0.009991866536438465, -0.00022587609419133514, -0.00022635281493421644, -1.188807725906372, -0.00823991745710373, -0.2392195165157318, -0.2187786102294922, -1.8442386388778687, -0.271822452545166, -0.001981558743864298, -2.729855441430118e-05, -0.04971157759428024, -0.0003667397249955684, -0.09294532984495163, -1.0728830375228426e-06, -0.9889428615570068, -0.3421061635017395, -0.018943581730127335, -5.769562994828448e-05, -0.00013886917440686375, -0.01868843287229538, -0.028739945963025093, -0.049271609634160995, -0.08884281665086746], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0006522196927107871, -0.0013611585600301623, -0.5180590748786926, -0.13439348340034485, -0.013457415625452995, -0.0007736074039712548, -0.00016509123088326305, -0.00010096516780322418, -0.00012540031457319856, -0.0008189899963326752, -0.028612175956368446, -0.035725757479667664, -0.27089303731918335, -0.0001287377526750788, -0.03700689598917961, -0.011765021830797195], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, batch_size=5, epochs=5)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " batch", "_", "size", "=", "5", ",", " epochs", "=", "5", ")", "\n"], "logprobs": [-0.0008629412623122334, -8.654219709569588e-05, -0.020130030810832977, -0.015719430521130562, -0.00013016807497479022, -0.00040391870425082743, -0.016200097277760506, -0.0018626974197104573, -2.407998726994265e-05, -0.007078332360833883, -2.6844139099121094, -4.815939246327616e-05, -2.0503786799963564e-05, -0.0012256737099960446, -2.254183292388916, -0.5046916007995605, -0.1494787335395813, -0.00025412190007045865, -1.3014285564422607, -2.401571750640869, -0.03111029975116253], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.02453894354403019, -5.5549986427649856e-05, -0.0002366024418734014, -0.024330593645572662, -0.0003782987187150866, -0.0012817509705200791, -0.002903533633798361, -0.0032860825303941965, -0.07081509381532669], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test.flatten(), Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ".", "fl", "atten", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.003125902730971575, -0.0005551227368414402, -0.8725733757019043, -0.001986317802220583, -0.0037870134692639112, -2.3841855067985307e-07, -2.50339189733495e-06, -0.0001879753835964948, -5.960462772236497e-07, -6.556489552167477e-06, -9.905801562126726e-05, -0.06710193306207657, -0.004493734333664179, -0.005074597429484129, -2.02565598487854, -2.181429862976074, -1.883488948806189e-05, -0.00029452278977259994, -0.0010433712741360068, -0.007547908462584019, -9.560128091834486e-05, -0.00030322244856506586, -0.21529267728328705, -0.008677158504724503], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.03003237396478653, -0.003548873821273446, -0.00031442465842701495, -0.000498289882671088, -0.008798403665423393, -7.60526381782256e-05, -0.1700429618358612, -0.006307811941951513], "finish_reason": "stop"}, {"text": "plot(recall, precision, label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.14293356239795685, -0.015262716449797153, -0.00701571349054575, -0.0006669919239357114, -0.013495286926627159, -0.0011073178611695766, -0.34424224495887756, -1.2780355215072632, -0.19625432789325714, -0.04827636480331421, -0.0002083561266772449, -0.04491250962018967, -0.0047979699447751045, -6.806619057897478e-05, -0.21857571601867676, -5.6265202147187665e-05, -0.018242789432406425, -0.2678384482860565], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.43643227219581604, -0.08875501155853271, -0.377348929643631, -0.014151225797832012, -0.008255760185420513, -4.410646579344757e-05, -0.00682795187458396, -0.019211295992136], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004294188693165779, -2.4437606043647975e-05, -0.0006086166249588132, -0.0002843929105438292, -0.00024971229140646756, -8.940656698541716e-06, -0.0006538875168189406, -0.0025351073127239943], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.009132400155067444, -7.426462980220094e-05, -0.0015331668546423316, -0.006527412217110395, -0.0023789696861058474, -5.960446742392378e-06, -0.001383539172820747, -0.002780977636575699, -0.0002351722796447575, -0.008794739842414856, -2.1219027985353023e-05, -0.002283110748976469, -0.025431182235479355], "finish_reason": "stop"}, {"text": "legend()  # Optional: Add legend to the plot", "tokens": ["legend", "()", "  ", "#", " Optional", ":", " Add", " legend", " to", " the", " plot", "\n"], "logprobs": [-0.10358336567878723, -0.5592408776283264, -2.1767375469207764, -0.00016711745411157608, -2.891188383102417, -0.7946176528930664, -1.0468376874923706, -0.3030003011226654, -0.6348719000816345, -0.3523346781730652, -0.1879645138978958, -0.06959358602762222], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>from sklearn.linear_model import LogisticRegression", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "from", " sklearn", ".", "linear", "_", "model", " import", " Log", "istic", "Reg", "ression", "\n"], "logprobs": [-0.015511815436184406, -0.0009843033039942384, -0.05004409700632095, -1.0668926239013672, -3.576278118089249e-07, -3.576272320060525e-06, -3.397406908334233e-05, -0.0001551984460093081, -0.13164575397968292, -1.2404260635375977, -1.3851360082626343, -0.22595855593681335, -2.9787120819091797, -5.125986263010418e-06, -0.007138106971979141, -0.0018146253423765302, -0.872353732585907, -0.00195693108253181, -0.0008727079257369041, -4.8397800128441304e-05, -0.04990597441792488], "finish_reason": "stop"}], "metrics": {"energy": 417.5109934492113, "energy_per_token": 1.7766425253157927, "time": 17.232428, "time_per_token": 0.07332948085106382}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -2.3200266361236572], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.6397637128829956, -0.00013326710904948413, -5.0424259825376794e-05, -1.0728830375228426e-06, -5.8412379075889476e-06, -1.2384262084960938, -0.04391143098473549], "finish_reason": "stop"}, {"text": "compile(optimizer='SGD', loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "='", "S", "GD", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.0005695389700122178, -0.0013360392767935991, -0.8148796558380127, -7.986990567587782e-06, -0.12189697474241257, -0.8837124109268188, -0.00019941726350225508, -8.451581379631534e-05, -0.00035482310340739787, -0.009887645952403545, -0.02702253684401512, -0.019698938354849815, -0.00040999590419232845, -0.00019977481861133128, -6.961580220377073e-05, -0.7279598116874695, -0.01179282646626234], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, batch_size=16, epochs=1000, verbose=0, shuffle=False, validation_data=(X_test, Y_test))", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " batch", "_", "size", "=", "1", "6", ",", " epochs", "=", "1", "0", "0", "0", ",", " verbose", "=", "0", ",", " shuffle", "=", "False", ",", " validation", "_", "data", "=(", "X", "_", "test", ",", " Y", "_", "test", "))", "\n"], "logprobs": [-0.000692842761054635, -8.713819261174649e-05, -0.015958091244101524, -0.015382695943117142, -0.00012063252506777644, -0.0003399271226953715, -0.01926228031516075, -0.0014122284483164549, -2.396077979938127e-05, -0.006657917518168688, -2.6574525833129883, -3.671578815556131e-05, -1.883488948806189e-05, -0.0012494861148297787, -0.5713874697685242, -1.283355712890625, -0.007782022003084421, -0.1264541745185852, -0.0003108495147898793, -0.6309082508087158, -0.1308613419532776, -1.0114989280700684, -2.2672078609466553, -0.19727452099323273, -0.012345916591584682, -0.001023483811877668, -0.16028960049152374, -2.3883392810821533, -0.8432019948959351, -0.0005392765742726624, -0.8603818416595459, -1.989444613456726, -0.47475773096084595, -5.280832192511298e-05, -1.1144168376922607, -0.003634159453213215, -0.001165783149190247, -0.0005175919504836202, -0.00827089324593544, -0.0001494772732257843, -0.0052668387070298195, -2.52720492426306e-05, -0.00015746307326480746, -0.12316072732210159, -0.018062978982925415], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.024953536689281464, -4.9828242481453344e-05, -0.00027891082572750747, -0.02160116657614708, -0.0003625689132604748, -0.0010699268896132708, -0.002682304009795189, -0.003958961460739374, -0.08457784354686737], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.002228159923106432, -0.000618624035269022, -0.8110558986663818, -0.0024889700580388308, -0.0035510121379047632, -3.576278118089249e-07, -2.3841830625315197e-06, -0.00017045476124621928, -5.960462772236497e-07, -6.318072337307967e-06, -0.00011896379146492109, -0.054082829505205154, -0.003945781383663416, -0.005069497041404247, -0.13610495626926422, -0.005557325202971697, -0.0001426833332516253, -0.00014280252798926085, -0.30851316452026367, -0.005265653133392334], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.025270789861679077, -0.003144797869026661, -0.0003083468764089048, -0.000482442817883566, -0.008089871145784855, -5.2689116273541003e-05, -0.20722311735153198, -0.005940756760537624], "finish_reason": "stop"}, {"text": "plot(recall, precision, marker='o')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " marker", "='", "o", "')", "\n"], "logprobs": [-0.14677342772483826, -0.01127608772367239, -0.007348294369876385, -0.0005429700831882656, -0.010687966831028461, -0.0009689403814263642, -0.32471850514411926, -2.564850330352783, -0.01217257883399725, -0.5031953454017639, -0.3314327299594879, -0.21490909159183502], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.3786318302154541, -0.09809505939483643, -1.3347690105438232, -0.029068391770124435, -0.00270263385027647, -1.0967194612021558e-05, -0.0022551598958671093, -0.0017636949196457863, -0.00020597243565134704, -0.014532786794006824, -2.992108420585282e-05, -0.005296365823596716, -0.18497753143310547], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004397855664137751, -2.0503786799963564e-05, -0.0006485265912488103, -0.00025197668583132327, -0.0002516191452741623, -7.748573807475623e-06, -0.0007309625507332385, -0.0028127175755798817], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.007036902941763401, -7.784063927829266e-05, -0.0015529250958934426, -0.00651154201477766, -0.00206947629339993, -5.8412379075889476e-06, -0.0010856455191969872, -0.0030932221561670303, -0.00023183519078884274, -0.0073654530569911, -1.9907753085135482e-05, -0.002079587895423174, -0.02118704840540886], "finish_reason": "stop"}, {"text": "legend(loc='upper right')", "tokens": ["legend", "(", "loc", "='", "upper", " right", "')", "\n"], "logprobs": [-0.09631214290857315, -0.8823449015617371, -0.0017652419628575444, -0.1052236557006836, -0.5402567982673645, -0.5847035050392151, -0.07800152152776718, -0.1511172503232956], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>import numpy as np", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "import", " numpy", " as", " np", "\n"], "logprobs": [-0.01573984883725643, -0.0009507188224233687, -0.04826068878173828, -1.092753291130066, -2.3841855067985307e-07, -3.2186455882765586e-06, -3.790783375734463e-05, -0.0001472126314183697, -0.11925188452005386, -1.0492608547210693, -0.7498237490653992, -0.012453177943825722, -0.0010870745172724128, -0.006438938435167074], "finish_reason": "stop"}], "metrics": {"energy": 341.05876147842406, "energy_per_token": 1.6637012755045075, "time": 14.933424, "time_per_token": 0.07284597073170732}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -1.686811089515686, -0.023820992559194565], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " keras.Sequential([keras.layers.Dense(10, activation='sigmoid', input_shape=(input_dim,)),", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", "0", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "input", "_", "dim", ",", "))", ",", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.7624253034591675, -4.0531076592742465e-06, -2.3841830625315197e-06, -0.10218235850334167, -1.7179601192474365, -6.5205356804654e-05, -0.002027957234531641, -1.6927575416048057e-05, -0.010228240862488747, -0.00016330339713022113, -0.00016878610767889768, -0.9803089499473572, -1.5789251327514648, -0.22397099435329437, -0.19416438043117523, -0.16055411100387573, -0.014890947379171848, -2.4437606043647975e-05, -0.08845628798007965, -0.0009162995265796781, -0.05193230137228966, -1.5497195136049413e-06, -0.7582778334617615, -0.20873677730560303, -0.027300972491502762, -0.0001515035255579278, -0.00015877417172305286, -0.012524404563009739, -0.019842810928821564, -1.334507703781128, -0.7609806656837463], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005913416389375925, -0.0018340209499001503, -0.6168748736381531, -0.1341322809457779, -0.015253206714987755, -0.0005868143052794039, -0.00016234986833296716, -8.225102646974847e-05, -0.00012158608296886086, -0.0007756323902867734, -0.02274799533188343, -0.052170395851135254, -0.3014521896839142, -0.00013410145766101778, -0.03498517721891403, -0.009408303536474705], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=20, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "2", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0008879532688297331, -8.785339014139026e-05, -0.018035581335425377, -0.014765153639018536, -0.00013755806139670312, -0.0004832768754567951, -0.020032936707139015, -0.0015538772568106651, -2.5152843591058627e-05, -0.008456612005829811, -0.7686440944671631, -0.0008055302896536887, -2.0726447105407715, -0.28297045826911926, -0.3725229799747467, -0.08837990462779999, -0.0006834316882304847, -0.12915867567062378, -0.04941151663661003, -0.06233472377061844], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.029007714241743088, -5.924526340095326e-05, -0.0002002515539061278, -0.024159086868166924, -0.00036137725692242384, -0.0012019798159599304, -0.0018147443188354373, -0.0040491982363164425, -0.0917309895157814], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0022392217069864273, -0.0004901876673102379, -0.7401398420333862, -0.003147174371406436, -0.00643360847607255, -7.152555099310121e-07, -5.364403477869928e-06, -0.000254241080256179, -2.3841855067985307e-07, -7.271740287251305e-06, -6.222531374078244e-05, -0.042791374027729034, -0.0027664743829518557, -0.006709073204547167, -0.13967379927635193, -0.003686538664624095, -0.00013517419574782252, -0.00014304091746453196, -0.2982666492462158, -0.008021639660000801], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.025301940739154816, -0.0030831205658614635, -0.0003592322755139321, -0.0005161621957086027, -0.006548256613314152, -6.01988795096986e-05, -0.2191130369901657, -0.005456316750496626], "finish_reason": "stop"}, {"text": "plot(recall, precision, label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.1646939367055893, -0.015102212317287922, -0.0063849263824522495, -0.0005197366117499769, -0.010398730635643005, -0.0009358317474834621, -0.3374978303909302, -1.2768629789352417, -0.20608168840408325, -0.05842505022883415, -0.00020680672605521977, -0.04590928182005882, -0.004253863822668791, -7.021180499577895e-05, -0.22578535974025726, -6.186770770000294e-05, -0.01575181819498539, -0.2395411729812622], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.49192333221435547, -0.09509635716676712, -0.38379862904548645, -0.016310816630721092, -0.009816939942538738, -4.8874615458771586e-05, -0.008177608251571655, -0.0201778132468462], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.000454799213912338, -1.9550132492440753e-05, -0.0006080209277570248, -0.00022551853908225894, -0.000271521887043491, -9.179073458653875e-06, -0.0006403064471669495, -0.002732830820605159], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008331661112606525, -9.16677454370074e-05, -0.002006423892453313, -0.006380188278853893, -0.002278472064062953, -5.960446742392378e-06, -0.0012732979375869036, -0.002459954936057329, -0.0003175231395289302, -0.008531905710697174, -2.5510462364763953e-05, -0.002607043832540512, -0.023533901199698448], "finish_reason": "stop"}, {"text": "legend(loc='upper right')", "tokens": ["legend", "(", "loc", "='", "upper", " right", "')", "\n"], "logprobs": [-0.08597997575998306, -0.7171283960342407, -0.0013016331940889359, -0.10252638906240463, -0.6356459259986877, -0.6137253642082214, -0.0664764866232872, -0.14318235218524933], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.015088122338056564, -0.0008397151832468808, -0.05176139250397682, -0.6595306992530823], "finish_reason": "stop"}], "metrics": {"energy": 376.8776162729261, "energy_per_token": 1.829502991616146, "time": 15.353507, "time_per_token": 0.07453158737864078}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -0.2810932397842407, -0.12280548363924026, -3.933898824470816e-06, -6.794906312279636e-06, -0.004519605077803135, -0.28695130348205566, -0.03699379786849022, -0.1545061618089676, -0.015607588924467564], "finish_reason": "stop"}, {"text": " X_train.shape[-1]", "tokens": [" X", "_", "train", ".", "shape", "[-", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -2.917227029800415, -0.0016233850037679076, -0.0012253165477886796, -0.1051398441195488], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.6397637128829956, -0.00013326710904948413, -5.0424259825376794e-05, -1.0728830375228426e-06, -5.8412379075889476e-06, -0.3647613525390625, -0.1941385567188263], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='SGD')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "S", "GD", "')", "\n"], "logprobs": [-0.0006462631281465292, -0.0013484203955158591, -0.7741599082946777, -0.13491110503673553, -0.015154346823692322, -0.0005888396990485489, -0.0001658063702052459, -7.974783511599526e-05, -0.00011526874004630372, -0.0007052318542264402, -0.02285519614815712, -0.04419592767953873, -1.926835298538208, -0.00043096792069263756, -0.08130420744419098, -0.010479187592864037], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0, epochs=10)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ",", " epochs", "=", "1", "0", ")", "\n"], "logprobs": [-0.000756216119043529, -9.154854342341423e-05, -0.018953291699290276, -0.015965834259986877, -0.00011121608258690685, -0.00039498155820183456, -0.017807837575674057, -0.0014697236474603415, -1.9311717551317997e-05, -0.008297967724502087, -0.6838374137878418, -0.0016005337238311768, -0.09524734318256378, -0.9171358346939087, -0.28043702244758606, -0.0005880056996829808, -0.4922681152820587, -0.06946581602096558, -0.8362722992897034, -0.04645509272813797], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.024652929976582527, -6.90197994117625e-05, -0.00023648326168768108, -0.01769084297120571, -0.0004127365828026086, -0.0014617482665926218, -0.0018358058296144009, -0.003650906728580594, -0.07582563161849976], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.002462095348164439, -0.0005675135762430727, -0.6761419177055359, -0.002870607888326049, -0.006278315093368292, -4.768370445162873e-07, -3.4570634852570947e-06, -0.00022110878489911556, -2.3841855067985307e-07, -7.867782187531702e-06, -6.01988795096986e-05, -0.05003978684544563, -0.0032963010016828775, -0.006412525195628405, -0.14908167719841003, -0.0036429488100111485, -0.00012694983161054552, -0.00022110878489911556, -0.278001070022583, -0.007797990459948778], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.02709284983575344, -0.003239861223846674, -0.00032109825406223536, -0.0005218812730163336, -0.00805877149105072, -5.6980417866725475e-05, -0.22963394224643707, -0.005471373908221722], "finish_reason": "stop"}, {"text": "plot(recall, precision, 'g-')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "g", "-", "')", "\n"], "logprobs": [-0.1356712132692337, -0.01155799999833107, -0.007009321358054876, -0.0005839549703523517, -0.012268554419279099, -0.0009053422254510224, -0.30143383145332336, -1.6676914691925049, -2.27775239944458, -0.3209550380706787, -0.00872679241001606, -0.10733754187822342], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.4322451055049896, -0.08754223585128784, -0.3263046145439148, -0.014140529558062553, -0.008805729448795319, -4.8397800128441304e-05, -0.007042110897600651, -0.022303808480501175], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004930472350679338, -2.0503786799963564e-05, -0.0006412595394067466, -0.0002112165529979393, -0.0002896366349887103, -8.702239938429557e-06, -0.0006754500791430473, -0.0028221087995916605], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006886201910674572, -8.49926145747304e-05, -0.001714071026071906, -0.006321316584944725, -0.002237675478681922, -6.556489552167477e-06, -0.0014141331193968654, -0.0029401429928839207, -0.00029690624796785414, -0.007958488538861275, -2.038458114839159e-05, -0.002054010983556509, -0.025656962767243385], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.0946931540966034, -0.7891163229942322, -0.1278134286403656], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.014134888537228107, -0.0010112178279086947, -0.05278359353542328], "finish_reason": "stop"}], "metrics": {"energy": 329.4755275077817, "energy_per_token": 1.8614436582360547, "time": 13.024837, "time_per_token": 0.07358664971751412}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -0.11303243041038513, -0.0010281282011419535, -0.017568212002515793, -0.02432035468518734, -0.11031465232372284, -9.536697689327411e-06, -3.0278701160568744e-05, -0.035017866641283035, -0.025812646374106407, -0.00011264643399044871, -0.011294122785329819, -0.2927887439727783, -0.11860455572605133, -3.099436753473128e-06, -5.602820692729438e-06, -0.004598043859004974, -0.25428569316864014, -0.03538269177079201, -0.17676354944705963, -0.022499993443489075], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.694961428642273, -0.025279276072978973, -0.022904597222805023, -0.004212435334920883, -0.001696815132163465, -0.09516768157482147], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.13433179259300232, -0.00010156115604331717, -0.00010895135346800089, -0.8901640772819519, -3.4570634852570947e-06, -2.264974000354414e-06, -2.671644449234009, -0.052517253905534744], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.binary_crossentropy, optimizer='SGD')", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ",", " optimizer", "='", "S", "GD", "')", "\n"], "logprobs": [-0.0005913416389375925, -0.0014387742849066854, -0.5742184519767761, -2.1121068000793457, -0.15933270752429962, -2.4676019165781327e-05, -0.016156697645783424, -7.152555099310121e-07, -4.5060096454108134e-05, -0.6633402109146118, -2.3841830625315197e-06, -0.0001311216183239594, -7.021180499577895e-05, -0.00039200251922011375, -0.14718550443649292, -1.060410499572754, -0.913788378238678, -0.0005359405186027288, -0.2107401341199875, -0.009793803095817566], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007551440503448248, -7.86750388215296e-05, -0.01879946142435074, -0.017192846164107323, -0.00014482879487331957, -0.00041845624218694866, -0.01712910085916519, -0.0014416311169043183, -1.7165990357170813e-05, -0.007037494797259569, -0.7114328145980835, -0.0007789676310494542, -0.5167649388313293, -2.532956838607788, -0.09423728287220001, -0.0010459910845384002, -0.10958276689052582, -0.056182313710451126, -0.06470418721437454], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.025736086070537567, -6.09140915912576e-05, -0.0002217047003796324, -0.022786449640989304, -0.0003972456615883857, -0.0014831743901595473, -0.0018346159486100078, -0.004122687969356775, -0.08014320582151413], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test.ravel(), Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0023137959651649, -0.0006050424999557436, -0.7319650053977966, -0.0025177467614412308, -0.0036649219691753387, -2.3841855067985307e-07, -2.0265558760002023e-06, -0.0001823735801735893, -4.768370445162873e-07, -6.079655122448457e-06, -9.667406266089529e-05, -0.055669188499450684, -0.003521433798596263, -0.00541576836258173, -2.119356632232666, -0.17186622321605682, -7.748303323751315e-05, -0.00039569655200466514, -0.004401282407343388, -0.0002865380665753037, -0.00023648326168768108, -0.14331890642642975, -0.005727783776819706], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.026777217164635658, -0.003490072675049305, -0.0003003622987307608, -0.0004700509598478675, -0.007178230676800013, -6.12716976320371e-05, -0.21867936849594116, -0.006144206039607525], "finish_reason": "stop"}, {"text": "plot(recall, precision, color='red', linewidth=1.5, label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " color", "='", "red", "'", ",", " linewidth", "=", "1", ".", "5", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.15504328906536102, -0.012503567151725292, -0.007468399126082659, -0.0007232195930555463, -0.012889405712485313, -0.0009328543092124164, -0.32629385590553284, -1.7993305921554565, -0.017642589285969734, -1.7910736799240112, -0.43882495164871216, -0.00013648532330989838, -0.9127407670021057, -0.0015811334596946836, -1.0155373811721802, -0.023269206285476685, -0.1988980770111084, -0.15662817656993866, -0.15014834702014923, -0.0765172615647316, -0.12706568837165833, -0.000514851592015475, -0.034360967576503754, -0.005911130458116531, -8.511180931236595e-05, -0.2625880539417267, -0.00019143179815728217, -0.005491409916430712, -0.07815731316804886], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.5696102976799011, -0.08423568308353424, -0.32547932863235474, -0.01631445251405239, -0.007987935096025467, -4.434487345861271e-05, -0.006753476802259684, -0.015347360633313656], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004574206250254065, -1.811964830267243e-05, -0.0006849803612567484, -0.00025876989820972085, -0.0002640137099660933, -8.34461570775602e-06, -0.0006287504802457988, -0.0027492367662489414], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008554126136004925, -6.90197994117625e-05, -0.001731921685859561, -0.006778697017580271, -0.0019471748964861035, -6.556489552167477e-06, -0.001077428925782442, -0.002806179691106081, -0.0002714027068577707, -0.008403535932302475, -2.038458114839159e-05, -0.0020198675338178873, -0.01540476456284523], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.08416533470153809, -0.6805837750434875, -0.13560865819454193], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>\"\"\"", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.018357379361987114, -0.0008687774534337223, -0.037092819809913635, -1.33766770362854, -2.3841855067985307e-07, -3.576272320060525e-06, -4.5060096454108134e-05, -0.00010394509445177391, -2.1261847019195557, -0.0044061485677957535, -0.0013909199042245746, -0.00035124807618558407, -0.16833707690238953], "finish_reason": "stop"}], "metrics": {"energy": 366.09260957336426, "energy_per_token": 1.7771485901619624, "time": 15.554996, "time_per_token": 0.07550968932038835}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=1)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -0.2810932397842407, -0.12280548363924026, -3.933898824470816e-06, -6.794906312279636e-06, -0.004519605077803135, -2.1750967502593994, -0.9507282972335815, -0.02329133450984955], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.694961428642273, -0.025279276072978973, -0.022904597222805023, -0.004212435334920883, -0.001696815132163465, -0.09516768157482147], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.13433179259300232, -0.00010156115604331717, -0.00010895135346800089, -0.5360037684440613, -0.00016330339713022113, -4.207999518257566e-05, -8.344646857949556e-07, -5.125986263010418e-06, -1.398467779159546, -0.043857697397470474], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.0006006343755871058, -0.0015997005393728614, -0.8272169828414917, -7.629365427419543e-06, -0.14343252778053284, -0.5090935230255127, -0.00010358751023886725, -0.00015209948469419032, -0.00023421882360707968, -0.011837593279778957, -0.027058273553848267, -0.01563211716711521, -0.0009391664643771946, -0.00021145492792129517, -8.737658936297521e-05, -0.31417593359947205, -0.01001971960067749], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0, epochs=100)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ",", " epochs", "=", "1", "0", "0", ")", "\n"], "logprobs": [-0.0010551605373620987, -7.176141662057489e-05, -0.017768841236829758, -0.01666763797402382, -0.00011622230522334576, -0.0004755319678224623, -0.019712846726179123, -0.0019851280376315117, -2.253030106658116e-05, -0.007078687660396099, -0.7801436185836792, -0.0015485212206840515, -0.08897097408771515, -0.904376208782196, -0.3014565110206604, -0.00048708971007727087, -0.5212934017181396, -0.08553116023540497, -0.928613543510437, -0.5593855381011963, -0.06015597656369209], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.02970447763800621, -7.545663538621739e-05, -0.00023648326168768108, -0.02603253349661827, -0.0003819928097072989, -0.0011024356354027987, -0.001985247014090419, -0.003875128459185362, -0.08883605897426605], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00282817124389112, -0.0006106419023126364, -0.5458616614341736, -0.002681828336790204, -0.006573837250471115, -5.960462772236497e-07, -3.4570634852570947e-06, -0.00026079590315930545, -2.3841855067985307e-07, -7.748573807475623e-06, -6.305972783593461e-05, -0.060470227152109146, -0.003124952083453536, -0.005394781939685345, -0.13039937615394592, -0.003543409751728177, -0.00011491115583339706, -0.00013326710904948413, -0.2931169271469116, -0.01009702030569315], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.029414208605885506, -0.0025383178144693375, -0.0003150205302517861, -0.00047791501856409013, -0.0071083977818489075, -6.23445157543756e-05, -0.21150679886341095, -0.005881384946405888], "finish_reason": "stop"}, {"text": "plot(recall, precision, marker='o')  # Modify here to add to the plot", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " marker", "='", "o", "')", "  ", "#", " Mod", "ify", " here", " to", " add", " to", " the", " plot", "\n"], "logprobs": [-0.13707111775875092, -0.011857503093779087, -0.006362775806337595, -0.0004741021548397839, -0.01093077939003706, -0.0009466695482842624, -0.44402241706848145, -2.5609207153320312, -0.012166219763457775, -0.44102755188941956, -0.2866591215133667, -1.6094930171966553, -0.00013243274588603526, -0.2813592255115509, -0.001001690630801022, -0.13675624132156372, -0.1031261458992958, -2.120223045349121, -4.3401689529418945, -0.7900458574295044, -0.488324373960495, -0.07609666138887405], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-2.618873357772827, -1.0618678331375122, -0.1259898543357849], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004145239945501089, -1.7762025890988298e-05, -0.0007611000328324735, -0.00032395837479270995, -0.00024029705673456192, -1.0371154530730564e-05, -0.0006640136707574129, -0.0023298519663512707], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008674794808030128, -7.021180499577895e-05, -0.0017888034926727414, -0.005354586523026228, -0.0019368238281458616, -6.198863957251888e-06, -0.0012822272256016731, -0.0029229081701487303, -0.0002602000313345343, -0.006789353210479021, -2.52720492426306e-05, -0.0019286142196506262, -0.023145394399762154], "finish_reason": "stop"}, {"text": "legend(loc='lower left')", "tokens": ["legend", "(", "loc", "='", "lower", " left", "')", "\n"], "logprobs": [-0.09753488004207611, -0.7912187576293945, -0.001632668194361031, -0.09831225872039795, -1.1517647504806519, -1.3887709379196167, -0.17463251948356628, -0.13451114296913147], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>from sklearn.tree import DecisionTreeClassifier", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "from", " sklearn", ".", "tree", " import", " Decision", "Tree", "Class", "ifier", "\n"], "logprobs": [-0.015884175896644592, -0.0011194637045264244, -0.05220501869916916, -1.3381047248840332, -2.3841855067985307e-07, -3.6954811548639555e-06, -3.58813522325363e-05, -0.00011848701251437888, -0.11586038023233414, -1.2387889623641968, -1.39705228805542, -0.20792537927627563, -3.052273750305176, -0.007442131172865629, -0.10012677311897278, -4.1483970562694594e-05, -0.04631181061267853, -3.683499380713329e-05, -0.08645197749137878], "finish_reason": "stop"}], "metrics": {"energy": 371.84771259212476, "energy_per_token": 1.8408302603570532, "time": 14.9215, "time_per_token": 0.07386881188118812}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -1.686811089515686, -0.023820992559194565], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.694961428642273, -0.025279276072978973, -0.022904597222805023, -0.004212435334920883, -0.001696815132163465, -0.09516768157482147], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.13433179259300232, -0.00010156115604331717, -0.00010895135346800089, -0.5360037684440613, -0.00016330339713022113, -4.207999518257566e-05, -8.344646857949556e-07, -5.125986263010418e-06, -1.398467779159546, -0.043857697397470474], "finish_reason": "stop"}, {"text": "compile(optimizer='SGD', loss='binary_crossentropy', metrics=['accuracy'])", "tokens": ["compile", "(", "optim", "izer", "='", "S", "GD", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0006006343755871058, -0.0015997005393728614, -0.8272169828414917, -7.629365427419543e-06, -0.14343252778053284, -1.0064594745635986, -0.00021050144277978688, -8.129743218887597e-05, -0.00043823651503771544, -0.011823927983641624, -0.0238502100110054, -0.019790921360254288, -0.00046826363541185856, -0.0001736728590913117, -5.9602869441732764e-05, -0.602903425693512, -0.0070254202000796795, -0.0889468714594841, -0.03773197531700134, -0.23816196620464325, -0.030870141461491585, -0.009180948138237], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=200, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "2", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0010551605373620987, -7.176141662057489e-05, -0.017768841236829758, -0.01666763797402382, -0.00011622230522334576, -0.0004755319678224623, -0.019712846726179123, -0.0019851280376315117, -2.253030106658116e-05, -0.007078687660396099, -0.803308367729187, -0.0007502601947635412, -2.1260697841644287, -0.342525452375412, -1.1370644569396973, -0.09618134796619415, -0.07481090724468231, -0.0008411445305682719, -0.16343870759010315, -0.09761392325162888, -0.0540122464299202], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.027138330042362213, -5.411955135059543e-05, -0.00024077377747744322, -0.022513164207339287, -0.00034445550409145653, -0.001359730027616024, -0.0014381790533661842, -0.0037269198801368475, -0.08560699969530106], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test.flatten(), Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ".", "fl", "atten", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0036359410732984543, -0.0006634180317632854, -0.8495907187461853, -0.002880354877561331, -0.0034475435968488455, -2.3841855067985307e-07, -2.0265558760002023e-06, -0.00014900050882715732, -7.152555099310121e-07, -7.033323527139146e-06, -0.0001161031104857102, -0.07641853392124176, -0.004634710028767586, -0.0045493911020457745, -2.178596258163452, -2.1772899627685547, -2.1219027985353023e-05, -0.0003302744007669389, -0.0014112761709839106, -0.006014818325638771, -0.0001110968878492713, -0.00036113892565481365, -0.22523429989814758, -0.007652727887034416], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.028699636459350586, -0.002968668704852462, -0.0003505330823827535, -0.0004555141495075077, -0.008747355081140995, -5.221230458118953e-05, -0.1846218705177307, -0.004912212491035461], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.16017717123031616, -0.009588496759533882, -0.00808644201606512, -0.0006187431863509119, -0.0101179089397192, -0.0010995777556672692, -1.2005289793014526, -0.285134881734848], "finish_reason": "stop"}, {"text": "plot(recall, precision, 'o')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "o", "')", "\n"], "logprobs": [-1.6447632312774658, -1.3987934589385986, -0.20795278251171112, -0.0026027634739875793, -0.03173065185546875, -0.8054865002632141, -0.03223831579089165, -0.05484653264284134, -0.9537751078605652, -0.2298113852739334, -0.21903346478939056], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004508670826908201, -2.5033637939486653e-05, -0.0007202415145002306, -0.00022873646230436862, -0.0002479245886206627, -8.702239938429557e-06, -0.0006257721688598394, -0.0025516352616250515], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008995247073471546, -8.809178689261898e-05, -0.0016519484343007207, -0.005075783468782902, -0.0028076060116291046, -7.986990567587782e-06, -0.0013906818348914385, -0.0026953816413879395, -0.00024828212917782366, -0.008481434546411037, -1.9550132492440753e-05, -0.0021495348773896694, -0.022021761164069176], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.08729591965675354, -0.7538901567459106, -0.0014397265622392297, -0.1173878163099289, -1.0564537048339844, -0.3308658003807068, -0.01605604961514473, -0.08994431048631668], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.016404636204242706, -0.0010270564816892147, -0.05659785494208336], "finish_reason": "stop"}], "metrics": {"energy": 359.3172021923064, "energy_per_token": 1.9634819791929312, "time": 14.295291, "time_per_token": 0.07811634426229508}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -0.11303243041038513, -0.0010281282011419535, -0.017568212002515793, -0.02432035468518734, -0.11031465232372284, -9.536697689327411e-06, -3.0278701160568744e-05, -0.035017866641283035, -0.025812646374106407, -0.00011264643399044871, -0.011294122785329819, -1.5844433307647705, -0.0299764983355999], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.694961428642273, -0.025279276072978973, -0.022904597222805023, -0.004212435334920883, -0.001696815132163465, -0.09516768157482147], "finish_reason": "stop"}, {"text": " keras.models.Sequential([keras.layers.Dense(1, input_shape=[input_dim])])", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " input", "_", "shape", "=[", "input", "_", "dim", "]", ")]", ")", "\n"], "logprobs": [-0.13433179259300232, -0.00010156115604331717, -0.00010895135346800089, -0.5360037684440613, -0.00016330339713022113, -4.207999518257566e-05, -8.344646857949556e-07, -5.125986263010418e-06, -0.3080042004585266, -2.1303412914276123, -7.009260298218578e-05, -0.0010929093696177006, -2.1457441107486375e-05, -0.013189333491027355, -0.00017295771976932883, -0.0001726001501083374, -1.1165320873260498, -0.42489591240882874, -0.23868782818317413, -3.1709168979432434e-05, -1.0657246112823486, -1.8956347703933716, -0.02457895688712597, -8.356221951544285e-05, -0.0002431573811918497, -0.017452478408813477, -0.5202863216400146, -0.0009354744106531143, -0.12264226377010345], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0006401873542927206, -0.0011882871622219682, -0.5826072096824646, -0.10771512985229492, -0.015094462782144547, -0.0006780709372833371, -0.00014530557382386178, -7.354942499659956e-05, -0.0001137191939051263, -0.0006654431927017868, -0.022823503240942955, -0.04052241891622543, -0.27963465452194214, -0.00013731967192143202, -0.03575980290770531, -0.008708239533007145], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0008890252211131155, -7.223821739898995e-05, -0.015399599447846413, -0.01714128814637661, -0.00010489867418073118, -0.00048411093303002417, -0.0193199273198843, -0.001760957995429635, -2.539125671319198e-05, -0.007832174189388752, -0.7591705918312073, -0.001515312702395022, -0.07233390212059021, -0.5271206498146057, -0.06581839919090271], "finish_reason": "stop"}, {"text": " model.predict(X_test).flatten()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "fl", "atten", "()", "\n"], "logprobs": [-0.020805684849619865, -5.674201020156033e-05, -0.0002494739310350269, -0.026341434568166733, -0.0004032037395518273, -0.001424251589924097, -0.002552467631176114, -0.0036245384253561497, -3.0278713703155518, -0.49828293919563293, -3.969590397900902e-05, -0.0011177966371178627, -0.11169727891683578], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0034791436046361923, -0.0007948100101202726, -0.6872982382774353, -0.0027479289565235376, -0.0034397027920931578, -2.3841855067985307e-07, -2.145764938177308e-06, -0.00016127715934999287, -5.960462772236497e-07, -6.556489552167477e-06, -9.512448741588742e-05, -0.060711346566677094, -0.0027300964575260878, -0.0044676256366074085, -0.13441871106624603, -0.006474707741290331, -0.00013195598148740828, -0.00013433984713628888, -0.3212575912475586, -0.005432960111647844], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(4, 3))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "4", ",", " ", "3", "))", "\n"], "logprobs": [-0.024285217747092247, -0.003815752686932683, -0.00035041390219703317, -0.00042572495294734836, -0.007577249314635992, -6.329813186312094e-05, -1.5453414916992188, -0.40851324796676636, -0.0001102625101339072, -0.011416936293244362, -3.2440879344940186, -0.0432780459523201, -0.1423175036907196, -1.313366413116455, -0.1991749405860901, -0.013690385036170483], "finish_reason": "stop"}, {"text": "plot(recall, precision, 'o')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "o", "')", "\n"], "logprobs": [-0.15069089829921722, -0.014640048146247864, -0.007727727759629488, -0.0005914607318118215, -0.012257014401257038, -0.0010868363315239549, -0.3323177695274353, -1.7268363237380981, -1.6533021926879883, -0.8782566785812378, -0.5264841914176941], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.3992263078689575, -0.0917511135339737, -0.32513517141342163, -0.015012850053608418, -0.006741754245012999, -4.303362584323622e-05, -0.006758449599146843, -0.022303340956568718], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.00036221143091097474, -2.455681169521995e-05, -0.000612071540672332, -0.0002146728802472353, -0.00022146634000819176, -8.702239938429557e-06, -0.0006845038151368499, -0.0028593153692781925], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.009061994962394238, -8.618460560683161e-05, -0.001443654764443636, -0.005727902054786682, -0.002139780670404434, -6.437280717364047e-06, -0.0010378933511674404, -0.0024730355944484472, -0.00022635281493421644, -0.007035363931208849, -2.3483953555114567e-05, -0.0022100803907960653, -0.019650429487228394], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.07645762711763382, -0.7053825855255127, -0.12101268023252487], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.01545254047960043, -0.0009934734553098679, -0.04360289126634598, -0.713017463684082], "finish_reason": "stop"}], "metrics": {"energy": 334.7134419975281, "energy_per_token": 1.7253270206058149, "time": 14.723351, "time_per_token": 0.0758935618556701}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42, shuffle=True)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ",", " shuffle", "=", "True", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -0.11303243041038513, -0.0010281282011419535, -0.017568212002515793, -0.02432035468518734, -0.11031465232372284, -9.536697689327411e-06, -3.0278701160568744e-05, -0.035017866641283035, -0.025812646374106407, -0.00011264643399044871, -0.011294122785329819, -0.2927887439727783, -0.11860455572605133, -3.099436753473128e-06, -5.602820692729438e-06, -0.004598043859004974, -0.25428569316864014, -0.03538269177079201, -1.8288345336914062, -0.49251842498779297, -0.0043849037028849125, -0.040766336023807526, -0.29173874855041504, -0.0182584747672081], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.694961428642273, -0.025279276072978973, -0.022904597222805023, -0.004212435334920883, -0.001696815132163465, -0.09516768157482147], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.13433179259300232, -0.00010156115604331717, -0.00010895135346800089, -0.8901640772819519, -3.4570634852570947e-06, -2.264974000354414e-06, -0.09779954701662064, -0.2072804868221283], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.0005913416389375925, -0.0014387742849066854, -1.001067876815796, -7.748573807475623e-06, -0.14670394361019135, -0.6308349370956421, -0.00011085849109804258, -0.00013672371278516948, -0.00030250742565840483, -0.007106503937393427, -0.028813611716032028, -0.013665573671460152, -0.0013988957507535815, -0.00016425691137555987, -7.60526381782256e-05, -0.26497405767440796, -0.010743044316768646], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=300, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "3", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007373951375484467, -7.366862701019272e-05, -0.017250027507543564, -0.014045204035937786, -0.00011252723925281316, -0.00040463366894982755, -0.02034498006105423, -0.0019286142196506262, -2.253030106658116e-05, -0.006626536604017019, -0.7806212902069092, -0.0007447806419804692, -2.2969107627868652, -0.6405813097953796, -1.2234102487564087, -0.08658219128847122, -0.09038352221250534, -0.0007992172613739967, -0.120131716132164, -0.09383807331323624, -0.05892530083656311], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.023721346631646156, -5.3165931603871286e-05, -0.00023934361524879932, -0.02449648454785347, -0.00038211196078918874, -0.001279846066609025, -0.0018757858779281378, -0.0042235939763486385, -0.07736465334892273], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.002920055529102683, -0.0005635818815790117, -0.8857358694076538, -0.002460906282067299, -0.0037104112561792135, -2.3841855067985307e-07, -2.264974000354414e-06, -0.00015198028995655477, -5.960462772236497e-07, -6.437280717364047e-06, -0.0001072826053132303, -0.056362051516771317, -0.004802952986210585, -0.005594785790890455, -0.12702013552188873, -0.0073701865039765835, -0.00014172980445437133, -0.00012170527770649642, -0.2851826548576355, -0.006570521276444197], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.02727220393717289, -0.0033450147602707148, -0.0003325386205688119, -0.0005545270396396518, -0.00866604968905449, -7.199982064776123e-05, -0.2436349093914032, -0.0072615500539541245], "finish_reason": "stop"}, {"text": "plot(recall, precision, label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.13545522093772888, -0.01138688251376152, -0.006512844935059547, -0.000753476400859654, -0.013880742713809013, -0.0010459910845384002, -0.34264883399009705, -1.359805941581726, -0.1842188984155655, -0.05412822961807251, -0.00020239688456058502, -0.043067965656518936, -0.0038450846914201975, -6.174850568640977e-05, -0.23467624187469482, -6.985420623095706e-05, -0.018288088962435722, -0.22555315494537354], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')  # Modify here to add title", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "  ", "#", " Mod", "ify", " here", " to", " add", " title", "\n"], "logprobs": [-0.38556501269340515, -0.10314583033323288, -1.3321435451507568, -0.03200200945138931, -0.002631179988384247, -1.0251946150674485e-05, -0.0024379552341997623, -0.0021151569671928883, -0.00021431533969007432, -0.016083383932709694, -3.2305197237292305e-05, -0.005423830822110176, -2.1609628200531006, -7.462222856702283e-05, -0.2802240252494812, -0.0013493727892637253, -0.08071474730968475, -0.20354996621608734, -3.3919668197631836, -0.6027191281318665, -0.14675664901733398], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.00042417587246745825, -1.9311717551317997e-05, -0.0007063039811328053, -0.0002723561483435333, -0.0002383901592111215, -1.168244216387393e-05, -0.0007375142886303365, -0.00276801991276443], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.007286165840923786, -8.606540359323844e-05, -0.002144301077350974, -0.005831134971231222, -0.002271454781293869, -6.198863957251888e-06, -0.0011020784731954336, -0.0028211576864123344, -0.000266278104390949, -0.007209594361484051, -2.312633478140924e-05, -0.001911837956868112, -0.01621147431433201], "finish_reason": "stop"}, {"text": "legend(loc='upper left')", "tokens": ["legend", "(", "loc", "='", "upper", " left", "')", "\n"], "logprobs": [-0.07718920707702637, -0.6569526195526123, -0.0014394884929060936, -0.1068284809589386, -0.5491678714752197, -0.6988387107849121, -0.09375287592411041, -0.15476292371749878], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.013348027132451534, -0.0010578995570540428, -0.03904620185494423], "finish_reason": "stop"}], "metrics": {"energy": 385.0654723253251, "energy_per_token": 1.8968742479080054, "time": 15.561874, "time_per_token": 0.07665947783251231}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -0.11303243041038513, -0.0010281282011419535, -0.017568212002515793, -0.02432035468518734, -0.11031465232372284, -9.536697689327411e-06, -3.0278701160568744e-05, -0.035017866641283035, -0.025812646374106407, -0.00011264643399044871, -0.011294122785329819, -1.5844433307647705, -0.0299764983355999], "finish_reason": "stop"}, {"text": " len(X_train[0])", "tokens": [" len", "(", "X", "_", "train", "[", "0", "])", "\n"], "logprobs": [-2.708498239517212, -0.0030329679138958454, -0.04685353487730026, -0.6321558952331543, -0.06205545738339424, -0.14980493485927582, -0.002244574250653386, -0.009179413318634033, -0.07068337500095367], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.14058774709701538, -9.476689592702314e-05, -0.00011407678539399058, -0.5316508412361145, -0.00014757021563127637, -5.245071224635467e-05, -8.344646857949556e-07, -5.483612312673358e-06, -1.2840349674224854, -0.04393789917230606], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005392765742726624, -0.0011121999705210328, -0.5910823941230774, -0.14499105513095856, -0.01619681343436241, -0.0007402540650218725, -0.0001833270798670128, -9.262132516596466e-05, -0.00010585224663373083, -0.0006156456656754017, -0.022966578602790833, -0.048208434134721756, -0.30460524559020996, -0.00016091958968900144, -0.034672025591135025, -0.009992810897529125], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007350126979872584, -8.964136941358447e-05, -0.017781957983970642, -0.015613222494721413, -0.00015090756642166525, -0.000362807244528085, -0.019469350576400757, -0.001416394836269319, -1.9192511899746023e-05, -0.007296106778085232, -0.8002110123634338, -0.0006836699321866035, -0.5550372004508972, -0.12562206387519836, -0.9400807619094849, -0.18456687033176422, -0.05595114827156067, -0.0007387054502032697, -0.13576072454452515, -0.06118982285261154, -0.04697251319885254], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.021417291834950447, -5.6622808187967166e-05, -0.00022110878489911556, -0.023427356034517288, -0.0003426679759286344, -0.0012034086976200342, -0.0015573289711028337, -0.0041940356604754925, -0.06981272995471954], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.003109622048214078, -0.0006501944735646248, -0.6333608031272888, -0.002873223042115569, -0.006652944255620241, -8.344646857949556e-07, -4.529942543740617e-06, -0.0003405229654163122, -2.3841855067985307e-07, -7.152531907195225e-06, -5.3881147323409095e-05, -0.04970817640423775, -0.0032302364706993103, -0.006180578377097845, -0.17306610941886902, -0.004007286392152309, -0.00010179955279454589, -0.00021741411183029413, -0.31651076674461365, -0.010881491005420685], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(6, 6))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "6", ",", " ", "6", "))", "\n"], "logprobs": [-0.02651326358318329, -0.003152522025629878, -0.00033146608620882034, -0.0004573014739435166, -0.0073394193314015865, -5.9602869441732764e-05, -1.6581788063049316, -0.47064724564552307, -0.00014840454969089478, -0.010391180403530598, -1.8794950246810913, -0.026250747963786125, -0.04918729141354561, -1.1248703002929688, -0.0175650492310524, -0.012831739149987698], "finish_reason": "stop"}, {"text": "plot(recall, precision, label='Precision-Recall Curve')  # Modify here to change line label", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "  ", "#", " Mod", "ify", " here", " to", " change", " line", " label", "\n"], "logprobs": [-0.14660769701004028, -0.013771518133580685, -0.006833279971033335, -0.0005735897575505078, -0.013842415995895863, -0.0009531007381156087, -0.30501535534858704, -1.1915075778961182, -0.22810235619544983, -0.05844888836145401, -0.00023648326168768108, -0.04895177483558655, -0.004559003282338381, -6.568216485902667e-05, -0.18544238805770874, -6.0437283536884934e-05, -0.016150949522852898, -1.6952351331710815, -0.00014137222024146467, -0.26755648851394653, -0.0009171332349069417, -0.1374233067035675, -0.12150517851114273, -2.9040472507476807, -3.7765705585479736, -0.9966907501220703, -0.1004323810338974], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.4769348204135895, -0.09807430952787399, -0.29040592908859253, -0.01484197098761797, -0.007727491203695536, -4.8636207793606445e-05, -0.006902066525071859, -0.018638120964169502], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.00035637227119877934, -1.8358061424805783e-05, -0.0007833749405108392, -0.00029488030122593045, -0.00021598390594590455, -8.583032467868179e-06, -0.0007889734115451574, -0.0029162520077079535], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.0071275727823376656, -5.304672595229931e-05, -0.0018685277318581939, -0.00634678453207016, -0.002843267982825637, -5.125986263010418e-06, -0.0011680454481393099, -0.0030246484093368053, -0.000254241080256179, -0.008305888622999191, -2.288792165927589e-05, -0.0023076115176081657, -0.021484382450580597], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.0888458713889122, -0.688387393951416, -0.11165143549442291], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.016084320843219757, -0.0008542464347556233, -0.039663027971982956, -0.6761463284492493], "finish_reason": "stop"}], "metrics": {"energy": 281.2455702981949, "energy_per_token": 1.4422849758881788, "time": 12.534026, "time_per_token": 0.06427705641025641}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -0.11303243041038513, -0.0010281282011419535, -0.017568212002515793, -0.02432035468518734, -0.11031465232372284, -9.536697689327411e-06, -3.0278701160568744e-05, -0.035017866641283035, -0.025812646374106407, -0.00011264643399044871, -0.011294122785329819, -0.2927887439727783, -0.11860455572605133, -3.099436753473128e-06, -5.602820692729438e-06, -0.004598043859004974, -0.25428569316864014, -0.03538269177079201, -0.17676354944705963, -0.022499993443489075], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.7624253034591675, -4.0531076592742465e-06, -2.3841830625315197e-06, -0.10218235850334167, -0.2219216227531433], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss='binary_crossentropy', metrics=['accuracy'])", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0005913416389375925, -0.0018340209499001503, -0.954389750957489, -8.821448318485636e-06, -0.13386578857898712, -0.6023122668266296, -0.00010358751023886725, -0.00014506718434859067, -0.00021205084340181202, -0.00970467273145914, -0.027092617005109787, -0.01432292815297842, -0.00114827963989228, -0.00019965562387369573, -7.64102369430475e-05, -1.411257028579712, -0.020170921459794044, -0.10082896798849106, -0.03456631675362587, -0.23231519758701324, -0.02432209998369217, -0.01065034233033657], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=500, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "5", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007225048611871898, -8.964136941358447e-05, -0.0188381839543581, -0.016191065311431885, -0.00011443436960689723, -0.0004119024670217186, -0.019425157457590103, -0.0014227039646357298, -2.47952248173533e-05, -0.00724521791562438, -0.8197774291038513, -0.0006466205231845379, -1.815183162689209, -1.0585942268371582, -1.3320033550262451, -0.08517324179410934, -0.08016762882471085, -0.0010831448016688228, -0.13997533917427063, -0.07484785467386246, -0.05640982463955879], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.02944684959948063, -5.2569914259947836e-05, -0.0002317160106031224, -0.01981581561267376, -0.00036090059438720345, -0.0013146100100129843, -0.0020843464881181717, -0.0037576796021312475, -0.0866558700799942], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.0026323688216507435, -0.0005172345554456115, -0.6784367561340332, -0.002703109523281455, -0.0032342765480279922, -2.3841855067985307e-07, -2.264974000354414e-06, -0.00019560330838430673, -4.768370445162873e-07, -6.6756979322235566e-06, -0.00010990492592100054, -0.05190717801451683, -0.003954686690121889, -0.00509487884119153, -0.15216046571731567, -0.007178585510700941, -0.00013433984713628888, -0.00016509123088326305, -1.2529034614562988, -0.025754094123840332, -0.0006962973857298493, -0.0005869334563612938, -0.003309370717033744, -0.04803347960114479, -0.09837578982114792, -0.014022399671375751], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.02814752236008644, -0.0038121899124234915, -0.00031668893643654883, -0.0005938435206189752, -0.009012376889586449, -6.508615479106084e-05, -0.20408326387405396, -0.005795342847704887], "finish_reason": "stop"}, {"text": "plot(recall, precision, 'o-', label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "o", "-'", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.14831730723381042, -0.012178467586636543, -0.008172523230314255, -0.0005820487276650965, -0.011956806294620037, -0.0010987442219629884, -0.3164975643157959, -1.746337652206421, -1.8059767484664917, -2.6755893230438232, -9.202533692587167e-05, -0.26723936200141907, -0.10839232802391052, -0.3231714367866516, -0.0006974886637181044, -0.08180918544530869, -0.0053494879975914955, -0.00016723664884921163, -0.19015003740787506, -0.00015436411194968969, -0.012793724425137043, -0.2008751928806305], "finish_reason": "stop"}, {"text": "grid(True)", "tokens": ["grid", "(", "True", ")", "\n"], "logprobs": [-3.23620867729187, -0.9804081916809082, -0.3495764136314392, -0.016999252140522003, -0.07599899917840958], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004203628050163388, -2.2053474822314456e-05, -0.0008582960581406951, -0.00021336186910048127, -0.00022182388056535274, -1.0371154530730564e-05, -0.0006909366929903626, -0.0025647147558629513], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.007810410112142563, -6.472854875028133e-05, -0.0016919358167797327, -0.00594134908169508, -0.001973468577489257, -5.8412379075889476e-06, -0.0011211306555196643, -0.002964984392747283, -0.0002746204845607281, -0.007150416262447834, -2.2053474822314456e-05, -0.002183911856263876, -0.013743886724114418], "finish_reason": "stop"}, {"text": "legend()  # Set the legend appropriately", "tokens": ["legend", "()", "  ", "#", " Set", " the", " legend", " appropriately", "\n"], "logprobs": [-0.09120902419090271, -0.6800848841667175, -2.1549019813537598, -0.00019894051365554333, -3.6462011337280273, -0.9501054286956787, -0.4492731988430023, -3.5439677238464355, -0.1251063346862793], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.014462172985076904, -0.0010662352433428168, -0.04327016696333885], "finish_reason": "stop"}], "metrics": {"energy": 325.7496123886105, "energy_per_token": 1.620644837754281, "time": 14.468813, "time_per_token": 0.07198414427860697}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -0.2810932397842407, -0.12280548363924026, -3.933898824470816e-06, -6.794906312279636e-06, -0.004519605077803135, -0.28695130348205566, -0.03699379786849022, -0.1545061618089676, -0.015607588924467564], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " keras.Sequential([keras.layers.Dense(1, activation='sigmoid', input_dim=input_dim)])", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "dim", "=", "input", "_", "dim", ")]", ")", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.7624253034591675, -4.0531076592742465e-06, -2.3841830625315197e-06, -0.10218235850334167, -1.7179601192474365, -6.5205356804654e-05, -0.002027957234531641, -1.6927575416048057e-05, -0.010228240862488747, -0.00016330339713022113, -0.00016878610767889768, -0.9803089499473572, -0.33337873220443726, -1.1809511184692383, -0.18096904456615448, -0.0010971962474286556, -1.537788011773955e-05, -0.10874492675065994, -0.00037126801908016205, -0.056478437036275864, -2.145764938177308e-06, -0.5935935378074646, -0.002147988649085164, -0.004197596572339535, -0.0001174142598756589, -9.42901024245657e-05, -0.03978263586759567, -0.0008208957733586431, -0.0716855376958847], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.0005913416389375925, -0.0018340209499001503, -0.954389750957489, -8.821448318485636e-06, -0.13386578857898712, -0.6023122668266296, -0.00010358751023886725, -0.00014506718434859067, -0.00021205084340181202, -0.00970467273145914, -0.027092617005109787, -0.01432292815297842, -0.00114827963989228, -0.00019965562387369573, -7.64102369430475e-05, -0.2796557545661926, -0.014510228298604488], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007225048611871898, -8.964136941358447e-05, -0.0188381839543581, -0.016191065311431885, -0.00011443436960689723, -0.0004119024670217186, -0.019425157457590103, -0.0014227039646357298, -2.47952248173533e-05, -0.00724521791562438, -0.8197774291038513, -0.0006466205231845379, -0.5144743323326111, -0.11786356568336487, -0.4064381718635559, -0.08021901547908783, -0.0007564543629996479, -0.1346435844898224, -0.047885309904813766, -0.06426350027322769], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.02944684959948063, -5.2569914259947836e-05, -0.0002317160106031224, -0.01981581561267376, -0.00036090059438720345, -0.0013146100100129843, -0.0020843464881181717, -0.0037576796021312475, -0.0866558700799942], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0026323688216507435, -0.0005172345554456115, -0.848970890045166, -0.00293990527279675, -0.006641576066613197, -5.960462772236497e-07, -3.814689989667386e-06, -0.00020287363440729678, -2.3841855067985307e-07, -7.033323527139146e-06, -6.41325386823155e-05, -0.04438170790672302, -0.0028721531853079796, -0.004911263473331928, -0.15564166009426117, -0.0030342750251293182, -0.00010358751023886725, -0.00015698630886618048, -0.2999744415283203, -0.008573509752750397], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.02704469859600067, -0.003232494229450822, -0.00029392691794782877, -0.0005149707430973649, -0.0124429352581501, -6.90197994117625e-05, -0.21798740327358246, -0.0054160053841769695], "finish_reason": "stop"}, {"text": "plot(recall, precision, label='Precision-Recall curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " curve", "')", "\n"], "logprobs": [-0.16251735389232635, -0.010797528550028801, -0.007973389700055122, -0.0005510718910954893, -0.011147009208798409, -0.001036107074469328, -0.39450356364250183, -1.1486506462097168, -0.2002006471157074, -0.046503569930791855, -0.00020394629973452538, -0.03857100382447243, -0.004778038710355759, -7.784063927829266e-05, -2.648329734802246, -0.01639760099351406, -0.1651361882686615], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.4384281635284424, -0.0903402790427208, -0.4028540253639221, -0.01602308638393879, -0.008898129686713219, -5.23315102327615e-05, -0.007952338084578514, -0.020700715482234955], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004032037395518273, -2.4676019165781327e-05, -0.000760385300964117, -0.00024399164249189198, -0.00026556302327662706, -9.775113539944869e-06, -0.0006942722829990089, -0.0030220337212085724], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008606130257248878, -7.891343557275832e-05, -0.0016261223936453462, -0.005457739345729351, -0.0027725372929126024, -6.6756979322235566e-06, -0.0012016226537525654, -0.0029326549265533686, -0.0003053675754927099, -0.008894821628928185, -2.038458114839159e-05, -0.0022595608606934547, -0.02581171691417694], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.10013141483068466, -0.7140827775001526, -0.11702531576156616], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.015362504869699478, -0.0009676303598098457, -0.052747294306755066, -0.6700127720832825], "finish_reason": "stop"}], "metrics": {"energy": 346.48934315586104, "energy_per_token": 1.6819871026983546, "time": 15.34049, "time_per_token": 0.07446839805825244}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, shuffle=True, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " shuffle", "=", "True", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -0.11303243041038513, -0.0010281282011419535, -0.017568212002515793, -0.02432035468518734, -0.11031465232372284, -9.536697689327411e-06, -3.0278701160568744e-05, -0.035017866641283035, -0.025812646374106407, -0.00011264643399044871, -0.011294122785329819, -0.2927887439727783, -2.7468204498291016, -0.005475642159581184, -0.053634386509656906, -0.48182353377342224, -0.06475022435188293, -1.6927575416048057e-05, -1.8954096958623268e-05, -0.0034522954374551773, -0.4244982600212097, -0.03623507544398308, -0.07636750489473343, -0.015835599973797798], "finish_reason": "stop"}, {"text": " int(X.shape[1])", "tokens": [" int", "(", "X", ".", "shape", "[", "1", "])", "\n"], "logprobs": [-2.7744429111480713, -0.03394218906760216, -0.7425544857978821, -1.130534052848816, -0.147235706448555, -0.03757297247648239, -0.008895293809473515, -0.031217532232403755, -0.07133738696575165], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.14058774709701538, -9.476689592702314e-05, -0.00011407678539399058, -0.9014018177986145, -3.933898824470816e-06, -2.145764938177308e-06, -0.10545164346694946, -0.19664424657821655], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005824061809107661, -0.0017890414455905557, -0.6444794535636902, -0.12497305124998093, -0.016954127699136734, -0.0007270314963534474, -0.00016020445036701858, -7.438383181579411e-05, -0.00013028726971242577, -0.0007017772295512259, -0.02802419662475586, -0.04852396249771118, -0.2980879545211792, -0.00013779645087197423, -0.03067929297685623, -0.010016296990215778], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=500, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "5", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007040405762381852, -8.844937838148326e-05, -0.016092650592327118, -0.017201751470565796, -0.00011491115583339706, -0.00037698791129514575, -0.02099037356674671, -0.0014606770128011703, -2.5152843591058627e-05, -0.006377464160323143, -0.7809471487998962, -0.0006540066679008305, -1.8888388872146606, -1.115694522857666, -1.340021014213562, -0.08304736018180847, -0.0874587893486023, -0.0008678245940245688, -0.13764157891273499, -0.07808841019868851, -0.052516575902700424], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.02896810881793499, -6.663577369181439e-05, -0.0002554328821133822, -0.030058633536100388, -0.0004287039046175778, -0.0013529442949220538, -0.0021787970326840878, -0.003638435387983918, -0.0918409451842308], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0028234163764864206, -0.0006001578294672072, -0.6545425057411194, -0.003347628517076373, -0.0060210986994206905, -4.768370445162873e-07, -4.6491513785440475e-06, -0.00020680672605521977, -2.3841855067985307e-07, -7.510157047363464e-06, -6.437094270950183e-05, -0.04979097470641136, -0.0027272433508187532, -0.0075366683304309845, -0.16610148549079895, -0.0033730538561940193, -0.00011395759065635502, -0.00018070495571009815, -0.2566540539264679, -0.007233856711536646], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.02904847450554371, -0.0034869839437305927, -0.0003060825983993709, -0.00048601735034026206, -0.008992884308099747, -6.401333666872233e-05, -0.22681522369384766, -0.0071869888342916965], "finish_reason": "stop"}, {"text": "plot(recall, precision, 'b-', label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "b", "-'", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.1702142208814621, -0.011614561080932617, -0.008267938159406185, -0.0005430892342701554, -0.012958835810422897, -0.0010282472940161824, -0.3967299461364746, -1.5471539497375488, -0.8549741506576538, -1.725853681564331, -8.332382276421413e-05, -0.7495120763778687, -0.06271132826805115, -0.12648065388202667, -0.00038378025055862963, -0.0631435215473175, -0.006121102254837751, -9.63164638960734e-05, -0.20205773413181305, -0.0001289761275984347, -0.01180755253881216, -0.19818025827407837], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.4359501302242279, -0.09364845603704453, -0.37687328457832336, -0.014421047642827034, -0.008660495281219482, -4.5298504119273275e-05, -0.006196809466928244, -0.020647820085287094], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.00043156370520591736, -2.2291887944447808e-05, -0.0006136203301139176, -0.00022671037004329264, -0.00030596344731748104, -9.65590606938349e-06, -0.0006561510381288826, -0.003062441712245345], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008102877996861935, -8.666139910928905e-05, -0.001615291927009821, -0.005933527834713459, -0.0021197961177676916, -6.079655122448457e-06, -0.0012417471734806895, -0.003483182517811656, -0.0002325502864550799, -0.008243818767368793, -2.2291887944447808e-05, -0.0020833946764469147, -0.018940307199954987], "finish_reason": "stop"}, {"text": "legend(loc='upper right')", "tokens": ["legend", "(", "loc", "='", "upper", " right", "')", "\n"], "logprobs": [-0.08672047406435013, -0.7182812094688416, -0.0016483780927956104, -0.11137227714061737, -0.5533546209335327, -0.6017650365829468, -0.06275498867034912, -0.1589844971895218], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.013458474539220333, -0.0010215784423053265, -0.04749409854412079, -0.6491089463233948], "finish_reason": "stop"}], "metrics": {"energy": 371.9815488557815, "energy_per_token": 1.8978650451825587, "time": 14.718911, "time_per_token": 0.07509648469387756}}
