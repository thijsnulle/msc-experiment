{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -1.686811089515686, -0.023820992559194565], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.694961428642273, -0.025279276072978973, -0.022904597222805023, -0.004212435334920883, -0.001696815132163465, -0.09516768157482147], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.13433179259300232, -0.00010156115604331717, -0.00010895135346800089, -0.5360037684440613, -0.00016330339713022113, -4.207999518257566e-05, -8.344646857949556e-07, -5.125986263010418e-06, -1.398467779159546, -0.043857697397470474], "finish_reason": "stop"}, {"text": "compile(optimizer=keras.optimizers.SGD(), loss='binary_crossentropy',", "tokens": ["compile", "(", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", "\n"], "logprobs": [-0.0006006343755871058, -0.0015997005393728614, -0.8272169828414917, -7.629365427419543e-06, -2.0251846313476562, -0.2913135588169098, -2.002696055569686e-05, -0.00042417587246745825, -0.010579690337181091, -0.00010001159535022452, -0.012796549126505852, -0.00036507140612229705, -0.7645007967948914, -0.00020954797219019383, -0.033865902572870255, -0.31768086552619934, -0.013037203811109066, -0.0005565524916164577, -0.0001532914029667154, -6.472854875028133e-05, -0.7944501042366028, -0.0041678003035485744, -2.4295382499694824], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, batch_size=16, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " batch", "_", "size", "=", "1", "6", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0010551605373620987, -7.176141662057489e-05, -0.017768841236829758, -0.01666763797402382, -0.00011622230522334576, -0.0004755319678224623, -0.019712846726179123, -0.0019851280376315117, -2.253030106658116e-05, -0.007078687660396099, -2.6640186309814453, -2.9444261599564925e-05, -1.9550132492440753e-05, -0.0012738931691274047, -0.5968035459518433, -1.3110226392745972, -0.007534657139331102, -0.0964876189827919, -0.0003084660565946251, -0.6229773163795471, -0.15802350640296936, -0.4662071466445923, -0.012604101561009884, -0.0008422164828516543, -0.14404168725013733, -0.060839008539915085, -0.041706766933202744], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.02970447763800621, -7.545663538621739e-05, -0.00023648326168768108, -0.02603253349661827, -0.0003819928097072989, -0.0011024356354027987, -0.001985247014090419, -0.003875128459185362, -0.08883605897426605], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.00282817124389112, -0.0006106419023126364, -0.5458616614341736, -0.002681828336790204, -0.006573837250471115, -5.960462772236497e-07, -3.4570634852570947e-06, -0.00026079590315930545, -2.3841855067985307e-07, -7.748573807475623e-06, -6.305972783593461e-05, -0.060470227152109146, -0.003124952083453536, -0.005394781939685345, -0.13039937615394592, -0.003543409751728177, -0.00011491115583339706, -0.00013326710904948413, -1.3943341970443726, -0.03212311118841171, -0.001149827498011291, -0.0006017066189087927, -0.0020379505585879087, -0.03606007993221283, -0.08889462798833847, -0.01588311977684498], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.029414208605885506, -0.0025383178144693375, -0.0003150205302517861, -0.00047791501856409013, -0.0071083977818489075, -6.23445157543756e-05, -0.21150679886341095, -0.005881384946405888], "finish_reason": "stop"}, {"text": "plot(recall, precision, color='green', linewidth=2, label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " color", "='", "green", "'", ",", " linewidth", "=", "2", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.13707111775875092, -0.011857503093779087, -0.006362775806337595, -0.0004741021548397839, -0.01093077939003706, -0.0009466695482842624, -0.44402241706848145, -1.616250991821289, -0.016736220568418503, -1.85715913772583, -0.24180643260478973, -0.00017105070583056659, -0.4690987467765808, -0.0014192519010975957, -1.233340859413147, -0.23880265653133392, -0.5395543575286865, -0.04804983735084534, -0.0763455256819725, -0.00043466180795803666, -0.02194654382765293, -0.00395266804844141, -6.139089964563027e-05, -0.263851135969162, -9.655486064730212e-05, -0.004982554819434881, -0.1273975968360901], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.43243759870529175, -0.08162693679332733, -1.3969618082046509, -0.02754743956029415, -0.0022293494548648596, -1.0132738680113107e-05, -0.0017094297800213099, -0.0015779199311509728, -0.00023457636416424066, -0.018169043585658073, -2.5629668016335927e-05, -0.004458724521100521, -0.17672808468341827], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0003333727945573628, -2.0146166207268834e-05, -0.0006587718962691724, -0.00023707917716819793, -0.0002321927313460037, -8.4638240878121e-06, -0.0007074952009133995, -0.00281200441531837], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.009564174339175224, -8.070142939686775e-05, -0.0016828911611810327, -0.006732991896569729, -0.0020638848654925823, -5.8412379075889476e-06, -0.0011954312212765217, -0.0028300732374191284, -0.00022575691400561482, -0.0070909978821873665, -2.2291887944447808e-05, -0.002021889900788665, -0.02547580748796463], "finish_reason": "stop"}, {"text": "legend(loc='upper left')", "tokens": ["legend", "(", "loc", "='", "upper", " left", "')", "\n"], "logprobs": [-0.09794796258211136, -0.8020049929618835, -0.0018867325270548463, -0.12378121167421341, -0.48484179377555847, -0.7046810984611511, -0.16422559320926666, -0.1431298702955246], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.016488129273056984, -0.0009029601933434606, -0.040321268141269684, -0.6175735592842102], "finish_reason": "stop"}], "metrics": {"energy": 327.4996663284301, "energy_per_token": 1.5303722725627575, "time": 13.80591, "time_per_token": 0.06451359813084112}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -0.11303243041038513, -0.0010281282011419535, -0.017568212002515793, -0.02432035468518734, -0.11031465232372284, -9.536697689327411e-06, -3.0278701160568744e-05, -0.035017866641283035, -0.025812646374106407, -0.00011264643399044871, -0.011294122785329819, -1.5844433307647705, -0.0299764983355999], "finish_reason": "stop"}, {"text": " X[0].shape[0]", "tokens": [" X", "[", "0", "]", ".", "shape", "[", "0", "]", "\n"], "logprobs": [-0.26965174078941345, -2.6906909942626953, -0.012736053206026554, -0.017957136034965515, -0.0008965287124738097, -0.37541311979293823, -0.04489404708147049, -0.10053987056016922, -0.0013772298116236925, -0.08179325610399246], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.7624253034591675, -4.0531076592742465e-06, -2.3841830625315197e-06, -0.10218235850334167, -0.2219216227531433], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.BinaryCrossentropy(), optimizer=keras.optimizers.SGD())", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "()", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "())", "\n"], "logprobs": [-0.0005913416389375925, -0.0018340209499001503, -0.6168748736381531, -2.0899410247802734, -0.11443544924259186, -1.9073304429184645e-05, -0.013976671732962132, -1.0728830375228426e-06, -4.815939246327616e-05, -0.7188529372215271, -0.00020382710499688983, -0.009571612812578678, -0.19177989661693573, -0.00016711745411157608, -0.14314185082912445, -0.3177647590637207, -0.005381620954722166, -4.446407547220588e-05, -7.414542778860778e-05, -0.0023778993636369705, -4.684815212385729e-05, -0.013403310440480709, -0.00040642108069732785, -0.1797424554824829, -0.009261267259716988], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007360848248936236, -7.688703772146255e-05, -0.01772129349410534, -0.014002886600792408, -0.0001282609737245366, -0.00038914260221645236, -0.019012710079550743, -0.0011501847766339779, -2.3483953555114567e-05, -0.00792915839701891, -0.8560027480125427, -0.0015554246492683887, -0.09487856924533844, -0.4482124447822571, -0.07004337757825851], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.022435884922742844, -5.61460001335945e-05, -0.000251142424531281, -0.023160070180892944, -0.00042429505265317857, -0.001668252982199192, -0.0018149822717532516, -0.00384935992769897, -0.08187827467918396], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0021208669058978558, -0.000536655425094068, -0.5755569338798523, -0.0029218385461717844, -0.006836239714175463, -7.152555099310121e-07, -3.814689989667386e-06, -0.00022754464589525014, -2.3841855067985307e-07, -7.510157047363464e-06, -6.353653589030728e-05, -0.04096866026520729, -0.0032191856298595667, -0.006677574943751097, -0.13849656283855438, -0.0034962499048560858, -0.00012373158824630082, -0.00014482879487331957, -0.31904205679893494, -0.006982212886214256], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.028140218928456306, -0.00268729729577899, -0.0003203832311555743, -0.00047851080307736993, -0.011300605721771717, -6.603976362384856e-05, -0.22689920663833618, -0.005560881923884153], "finish_reason": "stop"}, {"text": "plot(recall, precision, 'b-', label='Precision-Recall curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "b", "-'", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " curve", "')", "\n"], "logprobs": [-0.16571329534053802, -0.012311063706874847, -0.006919942796230316, -0.000607782625593245, -0.012937536463141441, -0.0010631391778588295, -0.3680555820465088, -1.797747015953064, -0.8709940910339355, -1.808490514755249, -9.190614218823612e-05, -0.7011293172836304, -0.06749100983142853, -0.12198139727115631, -0.0004104725376237184, -0.08053527027368546, -0.005792142357677221, -0.0001006075763143599, -2.506495237350464, -0.014458530582487583, -0.10785726457834244], "finish_reason": "stop"}, {"text": "legend(loc='upper right')  # Modify here to set legend location", "tokens": ["legend", "(", "loc", "='", "upper", " right", "')", "  ", "#", " Mod", "ify", " here", " to", " set", " legend", " location", "\n"], "logprobs": [-2.4939017295837402, -0.6563690900802612, -0.0040666512213647366, -0.035623837262392044, -0.49454349279403687, -0.7275094985961914, -0.09581411629915237, -1.4458670616149902, -0.00013791563105769455, -0.4140460789203644, -0.0009472650708630681, -0.09159035235643387, -0.0959211215376854, -2.26468563079834, -1.08687162399292, -0.8230336308479309, -0.07285162806510925], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0006192197324708104, -2.098061486321967e-05, -0.0006678258068859577, -0.00027259447961114347, -0.0002687808300834149, -1.0132738680113107e-05, -0.0006860524881631136, -0.0028029698878526688], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.00845992099493742, -7.652943895664066e-05, -0.00185591506306082, -0.007449703756719828, -0.0024616196751594543, -6.318072337307967e-06, -0.0011202972382307053, -0.0029679557774215937, -0.0002299282787134871, -0.007230069488286972, -2.0861407392658293e-05, -0.0022024677600711584, -0.025212323293089867], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.06409893184900284, -0.7695558667182922, -0.11683431267738342], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>from collections import Counter", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "from", " collections", " import", " Counter", "\n"], "logprobs": [-0.015587754547595978, -0.00099871342536062, -0.04405209422111511, -1.2086983919143677, -2.3841855067985307e-07, -3.4570634852570947e-06, -3.969590397900902e-05, -0.00014423283573705703, -0.086056649684906, -1.244032382965088, -3.078744411468506, -0.023319868370890617, -1.1044065952301025, -0.07786743342876434], "finish_reason": "stop"}], "metrics": {"energy": 388.6350561332699, "energy_per_token": 1.9239359214518312, "time": 15.540368, "time_per_token": 0.07693251485148515}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -2.3200266361236572], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.7624253034591675, -4.0531076592742465e-06, -2.3841830625315197e-06, -0.10218235850334167, -0.2219216227531433], "finish_reason": "stop"}, {"text": "compile(optimizer='SGD', loss='binary_crossentropy', metrics=['accuracy'])", "tokens": ["compile", "(", "optim", "izer", "='", "S", "GD", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0005913416389375925, -0.0018340209499001503, -0.954389750957489, -8.821448318485636e-06, -0.13386578857898712, -0.8670007586479187, -0.00018368464952800423, -8.260862523457035e-05, -0.0003488647344056517, -0.0116850221529603, -0.025985145941376686, -0.022503722459077835, -0.00058466981863603, -0.00016890530241653323, -6.770858453819528e-05, -0.5839711427688599, -0.009478447958827019, -0.08824119716882706, -0.0373229905962944, -0.26575273275375366, -0.01817220263183117, -0.009573619812726974], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=5, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "5", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007225048611871898, -8.964136941358447e-05, -0.0188381839543581, -0.016191065311431885, -0.00011443436960689723, -0.0004119024670217186, -0.019425157457590103, -0.0014227039646357298, -2.47952248173533e-05, -0.00724521791562438, -0.8197774291038513, -0.0006466205231845379, -1.815183162689209, -0.47250035405158997, -0.08143300563097, -0.0009556017466820776, -0.1332450658082962, -0.05025055631995201, -0.04474016651511192], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.02944684959948063, -5.2569914259947836e-05, -0.0002317160106031224, -0.01981581561267376, -0.00036090059438720345, -0.0013146100100129843, -0.0020843464881181717, -0.0037576796021312475, -0.0866558700799942], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.0026323688216507435, -0.0005172345554456115, -0.848970890045166, -0.00293990527279675, -0.006641576066613197, -5.960462772236497e-07, -3.814689989667386e-06, -0.00020287363440729678, -2.3841855067985307e-07, -7.033323527139146e-06, -6.41325386823155e-05, -0.04438170790672302, -0.0028721531853079796, -0.004911263473331928, -0.15564166009426117, -0.0030342750251293182, -0.00010358751023886725, -0.00015698630886618048, -1.3738155364990234, -0.030826449394226074, -0.002176180249080062, -0.0007107115816324949, -0.0024855216033756733, -0.04482543095946312, -0.09828405827283859, -0.013322383165359497], "finish_reason": "stop"}, {"text": " ax = plt.subplots(1,1)", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "1", ",", "1", ")", "\n"], "logprobs": [-0.02704469859600067, -0.003232494229450822, -0.00029392691794782877, -0.0005149707430973649, -0.0124429352581501, -6.90197994117625e-05, -1.6325362920761108, -1.22100830078125, -0.188467875123024, -2.6608541011810303, -0.5328755974769592, -0.017629940062761307], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.14941047132015228, -0.011698336340487003, -0.00699393218383193, -0.00048268112004734576, -0.01030115969479084, -0.0010141950333490968, -1.0294281244277954, -0.291331022977829], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.5250840187072754, -0.11431752890348434, -1.348259449005127, -0.029974646866321564, -0.0025000290479511023, -9.65590606938349e-06, -0.0022558735217899084, -0.0015995815629139543, -0.0001842805795604363, -0.017169879749417305, -2.7656173188006505e-05, -0.005460585001856089, -0.20057880878448486], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004412154376041144, -1.7046782886609435e-05, -0.0005339150666259229, -0.00023600654094479978, -0.00023636408150196075, -1.0013530300057027e-05, -0.0006157647585496306, -0.0023830130230635405], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006785564590245485, -6.782778655178845e-05, -0.0014484162675216794, -0.005620035342872143, -0.0023852726444602013, -6.198863957251888e-06, -0.001404966926202178, -0.0028754814993590117, -0.0002884448622353375, -0.007115381304174662, -2.1576648578047752e-05, -0.0019902437925338745, -0.021859657019376755], "finish_reason": "stop"}, {"text": "legend(loc='lower left')", "tokens": ["legend", "(", "loc", "='", "lower", " left", "')", "\n"], "logprobs": [-0.08269370347261429, -0.7839468717575073, -0.0015235256869345903, -0.1266598403453827, -1.0051841735839844, -1.3811421394348145, -0.18936346471309662, -0.14264552295207977], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.013586549088358879, -0.001046705641783774, -0.04423299431800842, -0.6618893146514893], "finish_reason": "stop"}], "metrics": {"energy": 335.7263689718246, "energy_per_token": 1.886103196470925, "time": 14.723981, "time_per_token": 0.08271899438202247}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.8410364985466003, -0.0003175231395289302, -0.00046075694262981415, -0.00017379203927703202, -0.004202226642519236, -3.635817120084539e-05, -0.00034028460504487157, -0.005131763871759176, -0.02631019987165928, -1.2397689715726301e-05, -7.748573807475623e-06, -8.344646857949556e-07, -2.3841574147809297e-05, -0.0012505576014518738, -0.11303243041038513, -0.0010281282011419535, -0.017568212002515793, -0.02432035468518734, -0.11031465232372284, -9.536697689327411e-06, -3.0278701160568744e-05, -0.035017866641283035, -0.025812646374106407, -0.00011264643399044871, -0.011294122785329819, -0.2927887439727783, -0.11860455572605133, -3.099436753473128e-06, -5.602820692729438e-06, -0.004598043859004974, -0.25428569316864014, -0.03538269177079201, -0.17676354944705963, -0.022499993443489075], "finish_reason": "stop"}, {"text": " len(X[0])", "tokens": [" len", "(", "X", "[", "0", "])", "\n"], "logprobs": [-2.708498239517212, -0.0030329679138958454, -0.04685353487730026, -0.8055605888366699, -0.0038459161296486855, -0.009771491400897503, -0.08069495856761932], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.14058774709701538, -9.476689592702314e-05, -0.00011407678539399058, -0.5316508412361145, -0.00014757021563127637, -5.245071224635467e-05, -8.344646857949556e-07, -5.483612312673358e-06, -0.3456518054008484, -0.23429322242736816], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='SGD')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "S", "GD", "')", "\n"], "logprobs": [-0.0006191005813889205, -0.0012542485492303967, -0.62135910987854, -0.12294896692037582, -0.015198846347630024, -0.0008578196284361184, -0.00016604475968051702, -8.475421054754406e-05, -0.0001147919538198039, -0.0009974034037441015, -0.026803098618984222, -0.04154427722096443, -1.8608877658843994, -0.00037496211007237434, -0.09846286475658417, -0.010357438586652279], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007453762227669358, -8.189342770492658e-05, -0.018887901678681374, -0.015943074598908424, -0.00011503035057103261, -0.0003554189461283386, -0.017841564491391182, -0.0016902696806937456, -1.8715683836489916e-05, -0.006736070849001408, -0.6702916026115417, -0.0017780937487259507, -0.08034618943929672, -0.37293609976768494, -0.07582198083400726], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.026805652305483818, -5.94836674281396e-05, -0.00023231192608363926, -0.02516082674264908, -0.00038366109947673976, -0.0014462736435234547, -0.001900772680528462, -0.0039285640232264996, -0.06347260624170303], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.0032831120770424604, -0.0006037319544702768, -0.9298179745674133, -0.0025924190413206816, -0.0041315918788313866, -2.3841855067985307e-07, -2.622600959512056e-06, -0.00017724849749356508, -5.960462772236497e-07, -6.794906312279636e-06, -0.00011240804451517761, -0.0634496733546257, -0.0037733560893684626, -0.005045182537287474, -0.13303564488887787, -0.007795624900609255, -0.0001454247540095821, -0.00012790338951162994, -1.269432544708252, -0.020831018686294556, -0.0007410878897644579, -0.0006450717919506133, -0.0030504383612424135, -0.04324505105614662, -0.11016005277633667, -0.011889073997735977], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.027268260717391968, -0.003903983859345317, -0.0003073934931308031, -0.00048160876031033695, -0.0081920325756073, -7.652943895664066e-05, -0.2346138209104538, -0.006143257953226566], "finish_reason": "stop"}, {"text": "plot(recall, precision, linewidth=2)", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " linewidth", "=", "2", ")", "\n"], "logprobs": [-0.16425210237503052, -0.01139961089938879, -0.008405309170484543, -0.0005517867393791676, -0.010553857311606407, -0.001122440560720861, -0.4546103775501251, -1.7542387247085571, -0.009573856368660927, -0.41959694027900696, -1.5042293071746826, -0.25120675563812256], "finish_reason": "stop"}, {"text": "plot([0, 1], [0, 1], label='perfect diagonal')", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " label", "='", "perfect", " diagonal", "')", "\n"], "logprobs": [-1.6877365112304688, -0.33471983671188354, -0.001931469771079719, -0.020182721316814423, -0.008813410066068172, -0.0012357940431684256, -0.0006277974462136626, -0.00014661667228210717, -0.0017102628480643034, -0.0011169631034135818, -0.0012259118957445025, -0.000364713923772797, -0.00043764073052443564, -0.008388523012399673, -3.40932747349143e-05, -2.218757390975952, -0.03677734360098839, -2.6293883323669434, -0.6761981844902039, -0.13647089898586273, -0.20525144040584564], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.00040260792593471706, -2.1815061700181104e-05, -0.0007327494095079601, -0.0002113357331836596, -0.0002873722987715155, -8.702239938429557e-06, -0.0006280356901697814, -0.0029122107662260532], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.005895013455301523, -8.129743218887597e-05, -0.001663373550400138, -0.006216001696884632, -0.0019964303355664015, -5.722029527532868e-06, -0.0011734035797417164, -0.002680758247151971, -0.00027736154152080417, -0.00846193078905344, -1.9311717551317997e-05, -0.002001189161092043, -0.022135918959975243], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.08789122849702835, -0.6332072615623474, -0.15519416332244873], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.01454665046185255, -0.0011079132091253996, -0.04654988273978233, -0.7078514695167542], "finish_reason": "stop"}], "metrics": {"energy": 331.1865967493058, "energy_per_token": 1.7430873513121359, "time": 14.710079, "time_per_token": 0.07742146842105263}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.007933533750474453, -0.00014685506175737828, -0.009836181066930294, -0.0007425173535011709, -0.5689226984977722, -0.00030620177858509123, -0.0014036574866622686, -0.00023827097902540118, -0.00531842140480876, -4.1960789531003684e-05, -0.0006497179274447262, -0.006197046022862196, -0.024385739117860794, -1.645074735279195e-05, -9.417489309271332e-06, -1.5497195136049413e-06, -2.1576648578047752e-05, -0.0009704885887913406, -0.10664784163236618, -0.0010302717564627528, -0.03673172369599342, -0.020009450614452362, -0.12552732229232788, -1.1086402082582936e-05, -3.433168603805825e-05, -0.03267153725028038, -0.026765726506710052, -0.000105375460407231, -0.009641864337027073, -0.2810932397842407, -0.12280548363924026, -3.933898824470816e-06, -6.794906312279636e-06, -0.004519605077803135, -0.28695130348205566, -0.03699379786849022, -0.1545061618089676, -0.015607588924467564], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.26965174078941345, -0.8454264402389526, -0.028589004650712013, -0.054789092391729355, -0.017276274040341377, -0.05646739527583122, -0.0030780103988945484, -0.0012451999355107546, -0.06530740112066269], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.12906135618686676, -0.00013040646445006132, -0.00013731967192143202, -0.7624253034591675, -4.0531076592742465e-06, -2.3841830625315197e-06, -0.10218235850334167, -0.2219216227531433], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005913416389375925, -0.0018340209499001503, -0.6168748736381531, -0.1341322809457779, -0.015253206714987755, -0.0005868143052794039, -0.00016234986833296716, -8.225102646974847e-05, -0.00012158608296886086, -0.0007756323902867734, -0.02274799533188343, -0.052170395851135254, -0.3014521896839142, -0.00013410145766101778, -0.03498517721891403, -0.009408303536474705], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0008879532688297331, -8.785339014139026e-05, -0.018035581335425377, -0.014765153639018536, -0.00013755806139670312, -0.0004832768754567951, -0.020032936707139015, -0.0015538772568106651, -2.5152843591058627e-05, -0.008456612005829811, -0.8162858486175537, -0.0013858010061085224, -0.0840364471077919, -0.44373011589050293, -0.06116156280040741], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.029401475563645363, -5.781483559985645e-05, -0.00023576818057335913, -0.018596816807985306, -0.00032646095496602356, -0.0011095802765339613, -0.0020754244178533554, -0.004536100197583437, -0.0792415589094162], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.002690982772037387, -0.0006403064471669495, -0.7826443314552307, -0.002592062344774604, -0.0036806000862270594, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.00014852374442853034, -4.768370445162873e-07, -6.794906312279636e-06, -9.226373367710039e-05, -0.07539810985326767, -0.002971640322357416, -0.005768556613475084, -0.1318001002073288, -0.00782543234527111, -0.00014649749209638685, -0.00020287363440729678, -0.30164599418640137, -0.006546598393470049], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.026960574090480804, -0.0034095270093530416, -0.00029583368450403214, -0.0006697318749502301, -0.008161881938576698, -5.5549986427649856e-05, -0.1988089680671692, -0.005558747798204422], "finish_reason": "stop"}, {"text": "plot(recall, precision, '--', color='blue', label='Precision-Recall Curve')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " '", "--", "'", ",", " color", "='", "blue", "'", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.14610999822616577, -0.014682339504361153, -0.007979066111147404, -0.000654602306894958, -0.010737619362771511, -0.0010886224918067455, -0.4146851897239685, -1.886878252029419, -3.411226511001587, -0.2699795961380005, -0.000756216119043529, -1.5340285301208496, -0.025316236540675163, -3.2286601066589355, -0.25677478313446045, -0.00010442188795423135, -0.4341377913951874, -0.05369618535041809, -0.17277559638023376, -0.0004943578969687223, -0.05273948982357979, -0.006839318200945854, -9.905801562126726e-05, -0.43994417786598206, -0.00013064485392533243, -0.009871120564639568, -0.16000054776668549], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.4778367578983307, -0.0945790708065033, -0.3774808645248413, -0.013176980428397655, -0.009220636449754238, -4.255681051290594e-05, -0.006801075302064419, -0.02077731303870678], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-0.0004085659747943282, -2.288792165927589e-05, -0.0006721144891344011, -0.0002499506517779082, -0.0002503081923350692, -9.179073458653875e-06, -0.0006760457181371748, -0.002933486830443144], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008673259057104588, -8.165503095369786e-05, -0.0016952680889517069, -0.005010903812944889, -0.002115632640197873, -5.960446742392378e-06, -0.0013577061472460628, -0.003003255231305957, -0.0003060825983993709, -0.007898644544184208, -2.038458114839159e-05, -0.0021108745131641626, -0.021922051906585693], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.08033661544322968, -0.7225016951560974, -0.14813999831676483], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.011806963011622429, -0.0010458719916641712, -0.04973630607128143, -0.5928705930709839], "finish_reason": "stop"}], "metrics": {"energy": 333.20399666500094, "energy_per_token": 1.7914193369086073, "time": 14.516255, "time_per_token": 0.0780443817204301}}
