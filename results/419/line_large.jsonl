{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -1.4570636749267578, -0.023609932512044907], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -1.6277048587799072, -0.08179732412099838], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD())", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "())", "\n"], "logprobs": [-0.0006039702566340566, -0.04098261892795563, -0.20781828463077545, -0.2058044970035553, -0.0005603650351986289, -1.5735502529423684e-05, -3.909988299710676e-05, -3.0636318115284666e-05, -0.0004711233195848763, -5.376194530981593e-05, -0.011650735512375832, -1.9477989673614502, -0.057188525795936584, -6.639736966462806e-05, -9.619726915843785e-05, -0.00021300431399140507, -1.7165990357170813e-05, -0.011920525692403316, -0.00012838016846217215, -0.4977799355983734, -0.02254568226635456], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0005530973430722952, -0.00011097769311163574, -0.015374008566141129, -0.010547605343163013, -5.900685573578812e-05, -0.0009313059854321182, -0.007798463571816683, -0.00013469743134919554, -8.702239938429557e-06, -0.01269085519015789, -1.315822720527649, -0.0017294225981459022, -0.16680152714252472, -0.038971222937107086, -0.30484917759895325], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()  # Flatten predictions to 1-dimensional array", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "  ", "#", " Fl", "atten", " predictions", " to", " ", "1", "-", "dimensional", " array", "\n"], "logprobs": [-0.10399749875068665, -0.15275798738002777, -0.0004924515378661454, -0.11389732360839844, -0.0006568658282049, -0.00737941637635231, -0.00035446559195406735, -0.026717212051153183, -0.7949069738388062, -0.6781878471374512, -5.376194530981593e-05, -1.3538881540298462, -6.282132380874828e-05, -1.072188138961792, -0.0462048202753067, -2.024221181869507, -1.2402626276016235, -0.1315220147371292, -0.0009818024700507522, -2.1269919872283936, -0.4194226562976837, -0.08323363214731216, -0.022913219407200813], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0002520958660170436, -0.0006526962388306856, -0.5403412580490112, -0.001013599568977952, -0.0022633669432252645, -3.933898824470816e-06, -2.372236667724792e-05, 0.0, -3.814689989667386e-06, -1.6689286894688848e-06, -0.00042167355422861874, -0.04050902649760246, -0.0007102350937202573, -0.0009233264136128128, -0.21241767704486847, -0.0007532381569035351, -1.7046782886609435e-05, -1.156323378381785e-05, -0.02132452465593815, -0.02148204855620861], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.018652044236660004, -0.004535388201475143, -0.0018386616138741374, -2.610649426060263e-05, -8.594620157964528e-05, -0.00038985759601928294, -0.2857670485973358, -0.012867634184658527], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.22721412777900696, -0.005804350133985281, -0.003564197337254882, -2.264974000354414e-06, -0.0004078510100953281, -0.00034814971149899065, -0.10871915519237518, -0.0347200408577919], "finish_reason": "stop"}, {"text": "set_xlim([0.0, 1.01])", "tokens": ["set", "_", "x", "lim", "([", "0", ".", "0", ",", " ", "1", ".", "0", "1", "])", "\n"], "logprobs": [-0.14932052791118622, -0.054064761847257614, -2.280122995376587, -0.03353707119822502, -0.014907155185937881, -0.05510864406824112, -0.036770906299352646, -0.003616699017584324, -0.0029496517963707447, -2.002696055569686e-05, -0.00010966652916977182, -0.005184064619243145, -0.0024201171472668648, -0.05212095007300377, -0.0006386386230587959, -0.010960257612168789], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-7.199982064776123e-05, -5.722029527532868e-06, -0.0005158047424629331, -0.00020656836568377912, -0.00013076403411105275, -1.1086402082582936e-05, -0.0003054867556784302, -0.0009416675311513245], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008985204622149467, -0.00016604475968051702, -0.0026726736687123775, -0.020044738426804543, -0.0017410848522558808, -3.0397906812140718e-05, -0.000458254711702466, -6.83045873302035e-05, -2.9802276912960224e-06, -0.005806483328342438, -6.6756979322235566e-06, -0.009165829047560692, -0.052234891802072525], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.08196768164634705, -0.05959928780794144, -0.11388988047838211], "finish_reason": "stop"}, {"text": " model, ax  # Return the Axes object for further customization", "tokens": [" model", ",", " ax", "  ", "#", " Return", " the", " Ax", "es", " object", " for", " further", " customization", "\n"], "logprobs": [-0.017624668776988983, -0.0031987475231289864, -0.006917338352650404, -0.24708187580108643, -6.258291978156194e-05, -1.5654703378677368, -0.6363173127174377, -0.4078543186187744, -0.00025042734341695905, -0.004609554074704647, -3.1818981170654297, -0.14505673944950104, -0.09735103696584702, -0.47468215227127075], "finish_reason": "stop"}], "metrics": {"energy": 979.8240668659207, "energy_per_token": 4.923739029476988, "time": 26.268648, "time_per_token": 0.13200325628140702}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -0.43862515687942505, -0.03604041785001755, -0.041098520159721375, -0.030600907281041145], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -1.2362818717956543, -1.1920928244535389e-07, 0.0, -0.8236678242683411, -0.05954796075820923], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd', metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0005447572330012918, -0.04295172169804573, -0.1883288472890854, -0.1573992669582367, -0.0005776405450887978, -1.4543427823809907e-05, -3.540453326422721e-05, -1.823885577323381e-05, -0.00042882305569946766, -6.139089964563027e-05, -0.013169803656637669, -0.1568147987127304, -0.0222522784024477, -9.775113539944869e-06, -0.8107233643531799, -0.00033241944038309157, -0.005361937917768955, -0.07849252223968506, -0.03737432509660721, -0.008430133573710918, -0.015494327060878277], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007535954937338829, -0.00013505500101018697, -0.01570417359471321, -0.010682069696485996, -6.5205356804654e-05, -0.000943096645642072, -0.0068023777566850185, -0.00011336160969221964, -1.3708974620385561e-05, -0.01099350769072771, -1.5728709697723389, -0.0015405465383082628, -0.16646580398082733, -0.037714410573244095, -0.3677523136138916], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.10143318772315979, -0.11781524866819382, -0.0006105228094384074, -0.12090335041284561, -0.0007238152320496738, -0.008422095328569412, -0.00039200251922011375, -0.018051035702228546, -0.627951979637146], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00020728347590193152, -0.0006375664379447699, -0.6085717082023621, -0.0008691347320564091, -0.0030231033451855183, -4.768360213347478e-06, -2.610649426060263e-05, 0.0, -4.172316494077677e-06, -2.145764938177308e-06, -0.0004300146538298577, -0.03285669907927513, -0.0005719218170270324, -0.000992997083812952, -0.20092999935150146, -0.000811366830021143, -1.6927575416048057e-05, -1.3232143828645349e-05, -0.02098441869020462, -0.020819343626499176], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.02166474610567093, -0.0037370147183537483, -0.0014081810368224978, -2.169585604860913e-05, -6.878139538457617e-05, -0.0004651656490750611, -0.3334771990776062, -0.013240508735179901], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-2.109048843383789, -0.0200419332832098, -0.8201114535331726, -0.12573476135730743, -0.005310002248734236, -2.586808113846928e-05, -0.029098382219672203, -0.06391454488039017], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.22510381042957306, -0.0827489048242569, -0.19158148765563965, -0.05841841548681259, -0.0005608416395261884, -5.125986263010418e-06, -0.03268469125032425, -0.044491857290267944], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-3.9934315282152966e-05, -4.410734163684538e-06, -0.0005138983833603561, -0.00028701478731818497, -0.00012611546844709665, -1.3708974620385561e-05, -0.0004085659747943282, -0.0012265071272850037], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006199297029525042, -0.00018439977429807186, -0.0014349650591611862, -0.02124365232884884, -0.0021354984492063522, -2.8729025871143676e-05, -0.0005214046686887741, -7.652943895664066e-05, -2.145764938177308e-06, -0.005786572117358446, -7.629365427419543e-06, -0.009590622037649155, -0.056170593947172165], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.0649741142988205, -0.04930270090699196, -0.08810640126466751], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.013882153667509556, -0.004133372567594051, -0.007693067658692598, -2.0118181705474854], "finish_reason": "stop"}], "metrics": {"energy": 926.3040026168827, "energy_per_token": 5.385488387307458, "time": 25.635586, "time_per_token": 0.1490441046511628}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -1.4570636749267578, -0.023609932512044907], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -1.6277048587799072, -0.08179732412099838], "finish_reason": "stop"}, {"text": "compile(optimizer=keras.optimizers.SGD(), loss=keras.losses.BinaryCrossentropy())", "tokens": ["compile", "(", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", " loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "())", "\n"], "logprobs": [-0.0006039702566340566, -0.04098261892795563, -1.756364107131958, -9.810443589231e-05, -1.4842578172683716, -0.1326526701450348, -0.00014745102089364082, -0.0001397035230183974, -4.017272294731811e-05, -9.775113539944869e-06, -0.018739912658929825, -0.00011097769311163574, -0.059479668736457825, -0.00033420699764974415, -0.01572694070637226, -1.1706125736236572, -0.07737679034471512, -1.728519782773219e-05, -0.0010706413304433227, -4.053033626405522e-05, -3.802703940891661e-05, -0.680847704410553, -1.0967194612021558e-05, -0.0006267252028919756, -0.3941161334514618, -0.014178493060171604], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=30, batch_size=1, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "3", "0", ",", " batch", "_", "size", "=", "1", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0005818104837089777, -0.00011848701251437888, -0.014586829580366611, -0.008985795080661774, -7.879423355916515e-05, -0.0007870675181038678, -0.009175633080303669, -0.00015484087634831667, -1.4066597032069694e-05, -0.012202844955027103, -0.27124136686325073, -0.0019975011236965656, -3.1335980892181396, -0.1151144877076149, -0.4791873097419739, -1.8719592094421387, -0.00011038171214750037, -1.6212332411669195e-05, -0.0011455409694463015, -0.5579962134361267, -0.29439428448677063, -0.00613626791164279, -0.0011301804333925247, -0.04159150272607803, -0.004528624005615711, -0.38349461555480957], "finish_reason": "stop"}, {"text": " model.predict(X_test).reshape(-1)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "resh", "ape", "(-", "1", ")", "\n"], "logprobs": [-0.12471053004264832, -0.17974644899368286, -0.0004621868138201535, -0.11007463186979294, -0.0008700875914655626, -0.009653552435338497, -0.00040451448876410723, -0.0247802771627903, -0.7953790426254272, -2.149880886077881, -4.768370445162873e-07, -0.5538817048072815, -4.303362584323622e-05, -0.03970988839864731, -0.21477100253105164], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00023195437097456306, -0.0006409021443687379, -0.5730054378509521, -0.0008861667010933161, -0.002927543828263879, -4.529942543740617e-06, -2.539125671319198e-05, 0.0, -4.410734163684538e-06, -1.0132738680113107e-05, -0.000458254711702466, -0.04451363533735275, -0.0006736631621606648, -0.0008521024719811976, -0.2149266004562378, -0.000874851830303669, -1.645074735279195e-05, -1.2874520507466514e-05, -0.020643731579184532, -0.03060426004230976], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(8, 8))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "8", ",", " ", "8", "))", "\n"], "logprobs": [-0.020982084795832634, -0.003902558935806155, -0.0018206939566880465, -2.3364747903542593e-05, -8.809178689261898e-05, -0.00029762129997834563, -1.2734708786010742, -0.2945703864097595, -2.4914430468925275e-05, -0.009025844745337963, -1.4237239360809326, -0.015143309719860554, -0.061506327241659164, -1.419560194015503, -0.02819538675248623, -0.0277030598372221], "finish_reason": "stop"}, {"text": "plot(recall, precision, marker='.')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " marker", "='", ".", "')", "\n"], "logprobs": [-0.22549445927143097, -0.005053485278040171, -0.00234352913685143, -2.145764938177308e-06, -0.00045563330058939755, -0.00028355870745144784, -2.2413277626037598, -1.3741424083709717, -0.03218013793230057, -0.02445995807647705, -0.023304611444473267, -0.018367327749729156], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.1855955719947815, -0.05827537551522255, -0.158950537443161, -0.07916732877492905, -0.0004258441040292382, -5.602820692729438e-06, -0.024879468604922295, -0.03493579477071762], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-4.565611743601039e-05, -4.6491513785440475e-06, -0.0006156456656754017, -0.0002324311062693596, -0.00014077626110520214, -1.2636104656849056e-05, -0.00026294111739844084, -0.0012829415500164032], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008928967639803886, -0.0001720042055239901, -0.002405489794909954, -0.0180265661329031, -0.0023454318288713694, -2.8013790142722428e-05, -0.0004505096294451505, -6.16293036728166e-05, -1.9073468138230965e-06, -0.004813393112272024, -6.318072337307967e-06, -0.010116846300661564, -0.05165645480155945], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.04430849477648735, -0.04275653883814812, -0.08498218655586243], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object"], "logprobs": [-0.015108318999409676, -0.003941981587558985, -0.006361472886055708, -0.2440786212682724, -4.911301948595792e-05, -0.26161476969718933, -0.002615842269733548, -0.0248856320977211, -0.011207248084247112, -0.006485485937446356, -0.2697024345397949, -0.00021300431399140507, -0.0046090795658528805], "finish_reason": "stop"}], "metrics": {"energy": 1060.3251843986511, "energy_per_token": 5.049167544755481, "time": 27.754263, "time_per_token": 0.13216315714285715}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -0.43862515687942505, -0.03604041785001755, -0.041098520159721375, -0.030600907281041145], "finish_reason": "stop"}, {"text": " len(X_train[0])", "tokens": [" len", "(", "X", "_", "train", "[", "0", "])", "\n"], "logprobs": [-1.452148675918579, -0.0011970981722697616, -0.0069925119169056416, -0.9062341451644897, -0.027286820113658905, -0.04711820185184479, -0.006476602982729673, -0.015699362382292747, -0.022447656840085983], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0831821858882904, -6.997340824455023e-05, -2.8609820219571702e-05, -0.3951778709888458, -1.9430925021879375e-05, -1.9311717551317997e-05, 0.0, -2.3841855067985307e-07, -0.25424206256866455, -0.047616638243198395], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(), metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0006945105269551277, -0.039385836571455, -0.17467907071113586, -0.21965034306049347, -0.0006036128615960479, -1.4185804502631072e-05, -5.030505417380482e-05, -4.9232225137529895e-05, -0.0005021026590839028, -5.4238757002167404e-05, -0.013892734423279762, -1.8881380558013916, -0.07641787081956863, -4.9828242481453344e-05, -9.095255518332124e-05, -0.00040451448876410723, -2.002696055569686e-05, -0.010125107131898403, -0.00010525626566959545, -1.7183537483215332, -0.0011641160817816854, -0.030233178287744522, -0.08750051259994507, -0.04933867231011391, -0.007862688973546028, -0.00824192725121975], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=False)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "False", ")", "\n"], "logprobs": [-0.0010507544502615929, -0.00012575789878610522, -0.01447216048836708, -0.01125534251332283, -7.92710343375802e-05, -0.0007781338645145297, -0.007499635685235262, -0.00019238528329879045, -1.1086402082582936e-05, -0.00951410923153162, -0.3370189964771271, -0.0018700745422393084, -0.3945479094982147, -0.10154649615287781, -1.6209408044815063, -0.06897036731243134, -0.0015786340227350593, -3.0434327125549316, -0.010038839653134346, -0.24144093692302704], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "\n"], "logprobs": [-0.1021091639995575, -0.1811964213848114, -0.0005007919971831143, -0.10995801538228989, -0.0007427555974572897, -0.00867834035307169, -0.0004070168943144381, -0.019024640321731567, -0.7760429382324219, -0.6283406615257263, -4.756337511935271e-05, -0.2605350911617279], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00022849810193292797, -0.0006135011790320277, -1.0148653984069824, -0.0009891861118376255, -0.0026481819804757833, -3.814689989667386e-06, -2.3007127310847864e-05, -1.1920928244535389e-07, -3.099436753473128e-06, -2.145764938177308e-06, -0.0006008726777508855, -0.027787353843450546, -0.0008114859228953719, -0.0010802869219332933, -0.13561657071113586, -0.0008575814426876605, -3.015949550899677e-05, -1.4543427823809907e-05, -0.04220081865787506, -0.011805078014731407], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.018520521000027657, -0.0049233632162213326, -0.0019537187181413174, -2.372236667724792e-05, -0.00010430268594063818, -0.00025149996508844197, -0.32648926973342896, -0.013267801143229008], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.25635668635368347, -0.00471088569611311, -0.0023858672939240932, -2.264974000354414e-06, -0.0003971264814026654, -0.0002935693773906678, -0.11087571829557419, -0.03259723260998726], "finish_reason": "stop"}, {"text": "set_xlabel(\"Recall\")", "tokens": ["set", "_", "xlabel", "(", "\"", "Rec", "all", "\"", ")", "\n"], "logprobs": [-0.11685796827077866, -0.056856464594602585, -0.16022512316703796, -2.9137117862701416, -0.004787174053490162, -0.002279780339449644, -7.390948667307384e-06, -0.0003667397249955684, -0.023351196199655533, -0.027621310204267502], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-7.92710343375802e-05, -3.6954811548639555e-06, -0.00045753977610729635, -0.00022384998737834394, -0.00011765264935093, -8.940656698541716e-06, -0.0003013156820088625, -0.001110175740905106], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.010536517947912216, -0.0002366024418734014, -0.0023445994593203068, -0.018336545675992966, -0.0030244106892496347, -2.8371408916427754e-05, -0.0005706112715415657, -5.9960475482512265e-05, -2.264974000354414e-06, -0.005754570942372084, -6.437280717364047e-06, -0.009820126928389072, -0.05876019224524498], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.06308353692293167, -0.0482705719769001, -0.09043242037296295], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return the Axes object instead of figure", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " the", " Ax", "es", " object", " instead", " of", " figure", "\n"], "logprobs": [-0.016093941405415535, -0.003507772693410516, -0.006809244863688946, -0.27898335456848145, -6.151010165922344e-05, -0.22803764045238495, -0.002779432339593768, -0.01677713356912136, -0.013849587179720402, -0.007432073354721069, -2.4250669479370117, -0.137708380818367, -0.0008355463505722582, -0.004979114979505539, -3.493269920349121, -0.07975868880748749, -3.3116390705108643, -0.8083911538124084], "finish_reason": "stop"}], "metrics": {"energy": 982.3524161872859, "energy_per_token": 4.839174463976778, "time": 26.550852, "time_per_token": 0.13079237438423644}}
