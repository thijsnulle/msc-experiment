{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -1.4570636749267578, -0.023609932512044907], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -1.6277048587799072, -0.08179732412099838], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD())", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "())", "\n"], "logprobs": [-0.0006039702566340566, -0.04098261892795563, -0.20781828463077545, -0.2058044970035553, -0.0005603650351986289, -1.5735502529423684e-05, -3.909988299710676e-05, -3.0636318115284666e-05, -0.0004711233195848763, -5.376194530981593e-05, -0.011650735512375832, -1.9477989673614502, -0.057188525795936584, -6.639736966462806e-05, -9.619726915843785e-05, -0.00021300431399140507, -1.7165990357170813e-05, -0.011920525692403316, -0.00012838016846217215, -0.4977799355983734, -0.02254568226635456], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0005530973430722952, -0.00011097769311163574, -0.015374008566141129, -0.010547605343163013, -5.900685573578812e-05, -0.0009313059854321182, -0.007798463571816683, -0.00013469743134919554, -8.702239938429557e-06, -0.01269085519015789, -1.315822720527649, -0.0017294225981459022, -0.16680152714252472, -0.038971222937107086, -0.30484917759895325], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()  # Flatten predictions to 1-dimensional array", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "  ", "#", " Fl", "atten", " predictions", " to", " ", "1", "-", "dimensional", " array", "\n"], "logprobs": [-0.10399749875068665, -0.15275798738002777, -0.0004924515378661454, -0.11389732360839844, -0.0006568658282049, -0.00737941637635231, -0.00035446559195406735, -0.026717212051153183, -0.7949069738388062, -0.6781878471374512, -5.376194530981593e-05, -1.3538881540298462, -6.282132380874828e-05, -1.072188138961792, -0.0462048202753067, -2.024221181869507, -1.2402626276016235, -0.1315220147371292, -0.0009818024700507522, -2.1269919872283936, -0.4194226562976837, -0.08323363214731216, -0.022913219407200813], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0002520958660170436, -0.0006526962388306856, -0.5403412580490112, -0.001013599568977952, -0.0022633669432252645, -3.933898824470816e-06, -2.372236667724792e-05, 0.0, -3.814689989667386e-06, -1.6689286894688848e-06, -0.00042167355422861874, -0.04050902649760246, -0.0007102350937202573, -0.0009233264136128128, -0.21241767704486847, -0.0007532381569035351, -1.7046782886609435e-05, -1.156323378381785e-05, -0.02132452465593815, -0.02148204855620861], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.018652044236660004, -0.004535388201475143, -0.0018386616138741374, -2.610649426060263e-05, -8.594620157964528e-05, -0.00038985759601928294, -0.2857670485973358, -0.012867634184658527], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.22721412777900696, -0.005804350133985281, -0.003564197337254882, -2.264974000354414e-06, -0.0004078510100953281, -0.00034814971149899065, -0.10871915519237518, -0.0347200408577919], "finish_reason": "stop"}, {"text": "set_xlim([0.0, 1.01])", "tokens": ["set", "_", "x", "lim", "([", "0", ".", "0", ",", " ", "1", ".", "0", "1", "])", "\n"], "logprobs": [-0.14932052791118622, -0.054064761847257614, -2.280122995376587, -0.03353707119822502, -0.014907155185937881, -0.05510864406824112, -0.036770906299352646, -0.003616699017584324, -0.0029496517963707447, -2.002696055569686e-05, -0.00010966652916977182, -0.005184064619243145, -0.0024201171472668648, -0.05212095007300377, -0.0006386386230587959, -0.010960257612168789], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-7.199982064776123e-05, -5.722029527532868e-06, -0.0005158047424629331, -0.00020656836568377912, -0.00013076403411105275, -1.1086402082582936e-05, -0.0003054867556784302, -0.0009416675311513245], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008985204622149467, -0.00016604475968051702, -0.0026726736687123775, -0.020044738426804543, -0.0017410848522558808, -3.0397906812140718e-05, -0.000458254711702466, -6.83045873302035e-05, -2.9802276912960224e-06, -0.005806483328342438, -6.6756979322235566e-06, -0.009165829047560692, -0.052234891802072525], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.08196768164634705, -0.05959928780794144, -0.11388988047838211], "finish_reason": "stop"}, {"text": " model, ax  # Return the Axes object for further customization", "tokens": [" model", ",", " ax", "  ", "#", " Return", " the", " Ax", "es", " object", " for", " further", " customization", "\n"], "logprobs": [-0.017624668776988983, -0.0031987475231289864, -0.006917338352650404, -0.24708187580108643, -6.258291978156194e-05, -1.5654703378677368, -0.6363173127174377, -0.4078543186187744, -0.00025042734341695905, -0.004609554074704647, -3.1818981170654297, -0.14505673944950104, -0.09735103696584702, -0.47468215227127075], "finish_reason": "stop"}], "metrics": {"energy": 979.8240668659207, "energy_per_token": 4.923739029476988, "time": 26.268648, "time_per_token": 0.13200325628140702}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -0.43862515687942505, -0.03604041785001755, -0.041098520159721375, -0.030600907281041145], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -1.2362818717956543, -1.1920928244535389e-07, 0.0, -0.8236678242683411, -0.05954796075820923], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd', metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0005447572330012918, -0.04295172169804573, -0.1883288472890854, -0.1573992669582367, -0.0005776405450887978, -1.4543427823809907e-05, -3.540453326422721e-05, -1.823885577323381e-05, -0.00042882305569946766, -6.139089964563027e-05, -0.013169803656637669, -0.1568147987127304, -0.0222522784024477, -9.775113539944869e-06, -0.8107233643531799, -0.00033241944038309157, -0.005361937917768955, -0.07849252223968506, -0.03737432509660721, -0.008430133573710918, -0.015494327060878277], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007535954937338829, -0.00013505500101018697, -0.01570417359471321, -0.010682069696485996, -6.5205356804654e-05, -0.000943096645642072, -0.0068023777566850185, -0.00011336160969221964, -1.3708974620385561e-05, -0.01099350769072771, -1.5728709697723389, -0.0015405465383082628, -0.16646580398082733, -0.037714410573244095, -0.3677523136138916], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.10143318772315979, -0.11781524866819382, -0.0006105228094384074, -0.12090335041284561, -0.0007238152320496738, -0.008422095328569412, -0.00039200251922011375, -0.018051035702228546, -0.627951979637146], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00020728347590193152, -0.0006375664379447699, -0.6085717082023621, -0.0008691347320564091, -0.0030231033451855183, -4.768360213347478e-06, -2.610649426060263e-05, 0.0, -4.172316494077677e-06, -2.145764938177308e-06, -0.0004300146538298577, -0.03285669907927513, -0.0005719218170270324, -0.000992997083812952, -0.20092999935150146, -0.000811366830021143, -1.6927575416048057e-05, -1.3232143828645349e-05, -0.02098441869020462, -0.020819343626499176], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.02166474610567093, -0.0037370147183537483, -0.0014081810368224978, -2.169585604860913e-05, -6.878139538457617e-05, -0.0004651656490750611, -0.3334771990776062, -0.013240508735179901], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-2.109048843383789, -0.0200419332832098, -0.8201114535331726, -0.12573476135730743, -0.005310002248734236, -2.586808113846928e-05, -0.029098382219672203, -0.06391454488039017], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.22510381042957306, -0.0827489048242569, -0.19158148765563965, -0.05841841548681259, -0.0005608416395261884, -5.125986263010418e-06, -0.03268469125032425, -0.044491857290267944], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-3.9934315282152966e-05, -4.410734163684538e-06, -0.0005138983833603561, -0.00028701478731818497, -0.00012611546844709665, -1.3708974620385561e-05, -0.0004085659747943282, -0.0012265071272850037], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006199297029525042, -0.00018439977429807186, -0.0014349650591611862, -0.02124365232884884, -0.0021354984492063522, -2.8729025871143676e-05, -0.0005214046686887741, -7.652943895664066e-05, -2.145764938177308e-06, -0.005786572117358446, -7.629365427419543e-06, -0.009590622037649155, -0.056170593947172165], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.0649741142988205, -0.04930270090699196, -0.08810640126466751], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.013882153667509556, -0.004133372567594051, -0.007693067658692598, -2.0118181705474854], "finish_reason": "stop"}], "metrics": {"energy": 926.3040026168827, "energy_per_token": 5.385488387307458, "time": 25.635586, "time_per_token": 0.1490441046511628}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -1.4570636749267578, -0.023609932512044907], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -1.6277048587799072, -0.08179732412099838], "finish_reason": "stop"}, {"text": "compile(optimizer=keras.optimizers.SGD(), loss=keras.losses.BinaryCrossentropy())", "tokens": ["compile", "(", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", " loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "())", "\n"], "logprobs": [-0.0006039702566340566, -0.04098261892795563, -1.756364107131958, -9.810443589231e-05, -1.4842578172683716, -0.1326526701450348, -0.00014745102089364082, -0.0001397035230183974, -4.017272294731811e-05, -9.775113539944869e-06, -0.018739912658929825, -0.00011097769311163574, -0.059479668736457825, -0.00033420699764974415, -0.01572694070637226, -1.1706125736236572, -0.07737679034471512, -1.728519782773219e-05, -0.0010706413304433227, -4.053033626405522e-05, -3.802703940891661e-05, -0.680847704410553, -1.0967194612021558e-05, -0.0006267252028919756, -0.3941161334514618, -0.014178493060171604], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=30, batch_size=1, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "3", "0", ",", " batch", "_", "size", "=", "1", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0005818104837089777, -0.00011848701251437888, -0.014586829580366611, -0.008985795080661774, -7.879423355916515e-05, -0.0007870675181038678, -0.009175633080303669, -0.00015484087634831667, -1.4066597032069694e-05, -0.012202844955027103, -0.27124136686325073, -0.0019975011236965656, -3.1335980892181396, -0.1151144877076149, -0.4791873097419739, -1.8719592094421387, -0.00011038171214750037, -1.6212332411669195e-05, -0.0011455409694463015, -0.5579962134361267, -0.29439428448677063, -0.00613626791164279, -0.0011301804333925247, -0.04159150272607803, -0.004528624005615711, -0.38349461555480957], "finish_reason": "stop"}, {"text": " model.predict(X_test).reshape(-1)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "resh", "ape", "(-", "1", ")", "\n"], "logprobs": [-0.12471053004264832, -0.17974644899368286, -0.0004621868138201535, -0.11007463186979294, -0.0008700875914655626, -0.009653552435338497, -0.00040451448876410723, -0.0247802771627903, -0.7953790426254272, -2.149880886077881, -4.768370445162873e-07, -0.5538817048072815, -4.303362584323622e-05, -0.03970988839864731, -0.21477100253105164], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00023195437097456306, -0.0006409021443687379, -0.5730054378509521, -0.0008861667010933161, -0.002927543828263879, -4.529942543740617e-06, -2.539125671319198e-05, 0.0, -4.410734163684538e-06, -1.0132738680113107e-05, -0.000458254711702466, -0.04451363533735275, -0.0006736631621606648, -0.0008521024719811976, -0.2149266004562378, -0.000874851830303669, -1.645074735279195e-05, -1.2874520507466514e-05, -0.020643731579184532, -0.03060426004230976], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(8, 8))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "8", ",", " ", "8", "))", "\n"], "logprobs": [-0.020982084795832634, -0.003902558935806155, -0.0018206939566880465, -2.3364747903542593e-05, -8.809178689261898e-05, -0.00029762129997834563, -1.2734708786010742, -0.2945703864097595, -2.4914430468925275e-05, -0.009025844745337963, -1.4237239360809326, -0.015143309719860554, -0.061506327241659164, -1.419560194015503, -0.02819538675248623, -0.0277030598372221], "finish_reason": "stop"}, {"text": "plot(recall, precision, marker='.')", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " marker", "='", ".", "')", "\n"], "logprobs": [-0.22549445927143097, -0.005053485278040171, -0.00234352913685143, -2.145764938177308e-06, -0.00045563330058939755, -0.00028355870745144784, -2.2413277626037598, -1.3741424083709717, -0.03218013793230057, -0.02445995807647705, -0.023304611444473267, -0.018367327749729156], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.1855955719947815, -0.05827537551522255, -0.158950537443161, -0.07916732877492905, -0.0004258441040292382, -5.602820692729438e-06, -0.024879468604922295, -0.03493579477071762], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-4.565611743601039e-05, -4.6491513785440475e-06, -0.0006156456656754017, -0.0002324311062693596, -0.00014077626110520214, -1.2636104656849056e-05, -0.00026294111739844084, -0.0012829415500164032], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008928967639803886, -0.0001720042055239901, -0.002405489794909954, -0.0180265661329031, -0.0023454318288713694, -2.8013790142722428e-05, -0.0004505096294451505, -6.16293036728166e-05, -1.9073468138230965e-06, -0.004813393112272024, -6.318072337307967e-06, -0.010116846300661564, -0.05165645480155945], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.04430849477648735, -0.04275653883814812, -0.08498218655586243], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object"], "logprobs": [-0.015108318999409676, -0.003941981587558985, -0.006361472886055708, -0.2440786212682724, -4.911301948595792e-05, -0.26161476969718933, -0.002615842269733548, -0.0248856320977211, -0.011207248084247112, -0.006485485937446356, -0.2697024345397949, -0.00021300431399140507, -0.0046090795658528805], "finish_reason": "stop"}], "metrics": {"energy": 1060.3251843986511, "energy_per_token": 5.049167544755481, "time": 27.754263, "time_per_token": 0.13216315714285715}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -0.43862515687942505, -0.03604041785001755, -0.041098520159721375, -0.030600907281041145], "finish_reason": "stop"}, {"text": " len(X_train[0])", "tokens": [" len", "(", "X", "_", "train", "[", "0", "])", "\n"], "logprobs": [-1.452148675918579, -0.0011970981722697616, -0.0069925119169056416, -0.9062341451644897, -0.027286820113658905, -0.04711820185184479, -0.006476602982729673, -0.015699362382292747, -0.022447656840085983], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0831821858882904, -6.997340824455023e-05, -2.8609820219571702e-05, -0.3951778709888458, -1.9430925021879375e-05, -1.9311717551317997e-05, 0.0, -2.3841855067985307e-07, -0.25424206256866455, -0.047616638243198395], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(), metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0006945105269551277, -0.039385836571455, -0.17467907071113586, -0.21965034306049347, -0.0006036128615960479, -1.4185804502631072e-05, -5.030505417380482e-05, -4.9232225137529895e-05, -0.0005021026590839028, -5.4238757002167404e-05, -0.013892734423279762, -1.8881380558013916, -0.07641787081956863, -4.9828242481453344e-05, -9.095255518332124e-05, -0.00040451448876410723, -2.002696055569686e-05, -0.010125107131898403, -0.00010525626566959545, -1.7183537483215332, -0.0011641160817816854, -0.030233178287744522, -0.08750051259994507, -0.04933867231011391, -0.007862688973546028, -0.00824192725121975], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=False)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "False", ")", "\n"], "logprobs": [-0.0010507544502615929, -0.00012575789878610522, -0.01447216048836708, -0.01125534251332283, -7.92710343375802e-05, -0.0007781338645145297, -0.007499635685235262, -0.00019238528329879045, -1.1086402082582936e-05, -0.00951410923153162, -0.3370189964771271, -0.0018700745422393084, -0.3945479094982147, -0.10154649615287781, -1.6209408044815063, -0.06897036731243134, -0.0015786340227350593, -3.0434327125549316, -0.010038839653134346, -0.24144093692302704], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "\n"], "logprobs": [-0.1021091639995575, -0.1811964213848114, -0.0005007919971831143, -0.10995801538228989, -0.0007427555974572897, -0.00867834035307169, -0.0004070168943144381, -0.019024640321731567, -0.7760429382324219, -0.6283406615257263, -4.756337511935271e-05, -0.2605350911617279], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00022849810193292797, -0.0006135011790320277, -1.0148653984069824, -0.0009891861118376255, -0.0026481819804757833, -3.814689989667386e-06, -2.3007127310847864e-05, -1.1920928244535389e-07, -3.099436753473128e-06, -2.145764938177308e-06, -0.0006008726777508855, -0.027787353843450546, -0.0008114859228953719, -0.0010802869219332933, -0.13561657071113586, -0.0008575814426876605, -3.015949550899677e-05, -1.4543427823809907e-05, -0.04220081865787506, -0.011805078014731407], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.018520521000027657, -0.0049233632162213326, -0.0019537187181413174, -2.372236667724792e-05, -0.00010430268594063818, -0.00025149996508844197, -0.32648926973342896, -0.013267801143229008], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.25635668635368347, -0.00471088569611311, -0.0023858672939240932, -2.264974000354414e-06, -0.0003971264814026654, -0.0002935693773906678, -0.11087571829557419, -0.03259723260998726], "finish_reason": "stop"}, {"text": "set_xlabel(\"Recall\")", "tokens": ["set", "_", "xlabel", "(", "\"", "Rec", "all", "\"", ")", "\n"], "logprobs": [-0.11685796827077866, -0.056856464594602585, -0.16022512316703796, -2.9137117862701416, -0.004787174053490162, -0.002279780339449644, -7.390948667307384e-06, -0.0003667397249955684, -0.023351196199655533, -0.027621310204267502], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-7.92710343375802e-05, -3.6954811548639555e-06, -0.00045753977610729635, -0.00022384998737834394, -0.00011765264935093, -8.940656698541716e-06, -0.0003013156820088625, -0.001110175740905106], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.010536517947912216, -0.0002366024418734014, -0.0023445994593203068, -0.018336545675992966, -0.0030244106892496347, -2.8371408916427754e-05, -0.0005706112715415657, -5.9960475482512265e-05, -2.264974000354414e-06, -0.005754570942372084, -6.437280717364047e-06, -0.009820126928389072, -0.05876019224524498], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.06308353692293167, -0.0482705719769001, -0.09043242037296295], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return the Axes object instead of figure", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " the", " Ax", "es", " object", " instead", " of", " figure", "\n"], "logprobs": [-0.016093941405415535, -0.003507772693410516, -0.006809244863688946, -0.27898335456848145, -6.151010165922344e-05, -0.22803764045238495, -0.002779432339593768, -0.01677713356912136, -0.013849587179720402, -0.007432073354721069, -2.4250669479370117, -0.137708380818367, -0.0008355463505722582, -0.004979114979505539, -3.493269920349121, -0.07975868880748749, -3.3116390705108643, -0.8083911538124084], "finish_reason": "stop"}], "metrics": {"energy": 982.3524161872859, "energy_per_token": 4.839174463976778, "time": 26.550852, "time_per_token": 0.13079237438423644}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01104526687413454, -0.00011121608258690685, -0.005668991710990667, -0.0007210753974504769, -0.269975870847702, -0.00023541064001619816, -0.00025459862081333995, -0.0013605633284896612, -0.0012699642684310675, -4.1126360883936286e-05, -0.0006459057331085205, -0.004584872163832188, -0.05168158560991287, -0.0002112165529979393, -5.018585216021165e-05, -1.3470558769768104e-05, -1.6689286894688848e-06, -0.00034517052699811757, -0.17708414793014526, -0.003903508884832263, -0.01166098564863205, -0.016146374866366386, -0.1426718831062317, -4.6967357775429264e-05, -6.437280717364047e-06, -0.03444043919444084, -0.015143309719860554, -2.312633478140924e-05, -0.007254567462950945, -0.370238333940506, -0.12211518734693527, -3.814689989667386e-06, -4.887569048150908e-06, -0.006251660641282797, -0.49341005086898804, -0.03585376963019371, -0.05239124223589897, -0.028444994240999222], "finish_reason": "stop"}, {"text": " len(X[0])", "tokens": [" len", "(", "X", "[", "0", "])", "\n"], "logprobs": [-1.452148675918579, -0.0011970981722697616, -0.0069925119169056416, -0.5833848714828491, -0.0027731317095458508, -0.02637115865945816, -0.024520214647054672], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0831821858882904, -6.997340824455023e-05, -2.8609820219571702e-05, -1.1205692291259766, -1.1920928244535389e-07, 0.0, -0.880248486995697, -0.05730200558900833], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005548844928853214, -0.03444090113043785, -0.1672227829694748, -0.20773190259933472, -0.000538680877070874, -1.6212332411669195e-05, -5.531158240046352e-05, -4.3748852476710454e-05, -0.0004343043256085366, -6.83045873302035e-05, -0.01130791287869215, -0.1914694756269455, -0.020149540156126022, -8.4638240878121e-06, -0.5480966567993164, -0.032366663217544556], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0010055014863610268, -0.00010930894495686516, -0.014468635432422161, -0.011207837611436844, -7.545663538621739e-05, -0.0008815216715447605, -0.007008255925029516, -0.00017951308109331876, -1.3589766240329482e-05, -0.012607398442924023, -0.30785560607910156, -0.002009041141718626, -0.3445086181163788, -0.10382752865552902, -1.3613687753677368, -0.0742516964673996, -0.0016788449138402939, -0.08097357302904129, -0.007868248037993908, -0.36808353662490845], "finish_reason": "stop"}, {"text": " model(X_test).numpy()  # Predict using model object", "tokens": [" model", "(", "X", "_", "test", ")", ".", "numpy", "()", "  ", "#", " Pred", "ict", " using", " model", " object", "\n"], "logprobs": [-0.12449488788843155, -1.7876036167144775, -0.0037325017619878054, -0.017133669927716255, -0.0019215944921597838, -0.013615361414849758, -0.519841730594635, -0.005302769131958485, -0.0006003961316309869, -1.5870082378387451, -0.00019476900342851877, -2.2975916862487793, -0.9338578581809998, -2.128938913345337, -2.167154550552368, -2.014493227005005, -0.44754552841186523], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00018308870494365692, -0.000724887300748378, -0.9694921970367432, -0.0009561972692608833, -0.002807843731716275, -3.099436753473128e-06, -2.706014311115723e-05, -1.1920928244535389e-07, -3.2186455882765586e-06, -1.1920922133867862e-06, -0.0005626287311315536, -0.03264673054218292, -0.0007059465860947967, -0.0009453595266677439, -0.13150978088378906, -0.0008823553798720241, -2.6225699912174605e-05, -2.062299427052494e-05, -0.03615620359778404, -0.011020978912711143], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.023653708398342133, -0.004600773099809885, -0.0015018623089417815, -2.2291887944447808e-05, -7.939023635117337e-05, -0.00025650550378486514, -0.34001266956329346, -0.011927947402000427], "finish_reason": "stop"}, {"text": "step(recall, precision, where='post')", "tokens": ["step", "(", "re", "call", ",", " precision", ",", " where", "='", "post", "')", "\n"], "logprobs": [-2.50771164894104, -0.00015531764074694365, -0.016130071133375168, -1.0728830375228426e-06, -0.0007602662080898881, -0.0005720409681089222, -0.0187898688018322, -0.8807408809661865, -0.011796832084655762, -0.00134151556994766, -1.008258581161499, -0.06865420937538147], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.160676047205925, -0.05981827527284622, -0.1452568620443344, -0.05739768594503403, -0.000436925794929266, -5.125986263010418e-06, -0.0290822871029377, -0.03479534015059471], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-4.7205765440594405e-05, -4.887569048150908e-06, -0.0004839917819481343, -0.0002165798214264214, -0.00012778419477399439, -1.1205610462639015e-05, -0.0003670972364488989, -0.0010289618512615561], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.0067929052747786045, -0.0001573438785271719, -0.0017589349299669266, -0.018595529720187187, -0.002016774145886302, -2.5629668016335927e-05, -0.0005166388000361621, -7.73638384998776e-05, -2.3841830625315197e-06, -0.005416598170995712, -6.198863957251888e-06, -0.00973277073353529, -0.05900060012936592], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.07612483203411102, -0.043403614312410355, -0.07956571877002716], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "\n"], "logprobs": [-0.012596096843481064, -0.003517038421705365, -0.007197640836238861, -0.23158228397369385, -4.7444173105759546e-05, -0.30322733521461487, -0.002435576869174838, -0.03226543962955475, -0.01682097464799881, -0.007367701735347509, -0.2537190318107605, -0.00020561488054227084, -0.005128205753862858, -0.9164350032806396], "finish_reason": "stop"}], "metrics": {"energy": 1116.372230499268, "energy_per_token": 5.81443870051702, "time": 38.156696, "time_per_token": 0.19873279166666666}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -0.43862515687942505, -0.03604041785001755, -0.041098520159721375, -0.030600907281041145], "finish_reason": "stop"}, {"text": " len(X[0])", "tokens": [" len", "(", "X", "[", "0", "])", "\n"], "logprobs": [-1.452148675918579, -0.0011970981722697616, -0.0069925119169056416, -0.5833848714828491, -0.0027731317095458508, -0.02637115865945816, -0.024520214647054672], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0831821858882904, -6.997340824455023e-05, -2.8609820219571702e-05, -0.3951778709888458, -1.9430925021879375e-05, -1.9311717551317997e-05, 0.0, -2.3841855067985307e-07, -0.25424206256866455, -0.047616638243198395], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0006945105269551277, -0.039385836571455, -0.17467907071113586, -0.21965034306049347, -0.0006036128615960479, -1.4185804502631072e-05, -5.030505417380482e-05, -4.9232225137529895e-05, -0.0005021026590839028, -5.4238757002167404e-05, -0.013892734423279762, -0.16457007825374603, -0.027902593836188316, -1.0967194612021558e-05, -0.5364038944244385, -0.02832958474755287], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007849234389141202, -9.989239333663136e-05, -0.01967848278582096, -0.008929558098316193, -7.56950321374461e-05, -0.0008630603551864624, -0.008319838903844357, -0.00015043080202303827, -1.1205610462639015e-05, -0.012037373147904873, -0.3259466886520386, -0.001666705822572112, -0.3610740005970001, -0.09860944747924805, -0.24422906339168549, -0.43914204835891724, -0.09103108942508698, -0.0022871545515954494, -0.11472725123167038, -0.01102251186966896, -0.35114121437072754], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "\n"], "logprobs": [-0.10905645787715912, -0.17775790393352509, -0.0005351065192371607, -0.14694902300834656, -0.0007134514744393528, -0.007918632589280605, -0.0002982171718031168, -0.02011098526418209, -0.8412339091300964, -0.7749879956245422, -5.1616290875244886e-05, -0.2900579571723938], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0002177716523874551, -0.0006461439770646393, -1.0767848491668701, -0.0009140365873463452, -0.002387651242315769, -3.099436753473128e-06, -4.255681051290594e-05, -1.1920928244535389e-07, -5.006777428206988e-06, -1.6689286894688848e-06, -0.0004472924047149718, -0.0350511334836483, -0.0007253637886606157, -0.0008021951070986688, -0.1692124307155609, -0.0008052920456975698, -3.123234637314454e-05, -2.1576648578047752e-05, -0.03377808630466461, -0.00957515463232994], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.0198185034096241, -0.004276654217392206, -0.0015354283386841416, -2.3603161025675945e-05, -9.226373367710039e-05, -0.0003122795606032014, -0.28169307112693787, -0.012010989710688591], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.20441271364688873, -0.006026904564350843, -0.0036123041063547134, -1.9073468138230965e-06, -0.00045563330058939755, -0.00029297350556589663, -0.1005619689822197, -0.03868764638900757], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.16442231833934784, -0.05783915892243385, -0.1717749685049057, -0.06012218818068504, -0.0004894727608188987, -4.6491513785440475e-06, -0.030128270387649536, -0.04514134302735329], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-6.437094270950183e-05, -5.006777428206988e-06, -0.0005135409301146865, -0.00021300431399140507, -0.0001147919538198039, -1.2516897186287679e-05, -0.0005162813467904925, -0.0010961245279759169], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008969609625637531, -0.0002109781780745834, -0.002168329432606697, -0.021420441567897797, -0.0027611248660832644, -2.7179348762729205e-05, -0.0005062728887423873, -6.949660019017756e-05, -3.6954811548639555e-06, -0.005166038405150175, -6.437280717364047e-06, -0.009692395105957985, -0.08214404433965683], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.0731804147362709, -0.052145618945360184, -0.10404197871685028], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return the Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " the", " Ax", "es", " object", "\n"], "logprobs": [-0.016624493524432182, -0.0038307157810777426, -0.0072060441598296165, -0.2846139669418335, -4.7801782784517854e-05, -0.25625327229499817, -0.002701207296922803, -0.022658847272396088, -0.014518099837005138, -0.006705638952553272, -2.7210710048675537, -0.14696095883846283, -0.0007058274932205677, -0.004287456162273884, -0.6467053890228271], "finish_reason": "stop"}], "metrics": {"energy": 929.9095593547821, "energy_per_token": 4.972778392271562, "time": 24.82099, "time_per_token": 0.13273256684491977}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.7, test_size=0.3, random_state=0)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " train", "_", "size", "=", "0", ".", "7", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -2.0759425163269043, -1.2636104656849056e-05, -2.145764938177308e-06, -0.04498966783285141, -0.02778526581823826, -1.4066597032069694e-05, -0.005284033250063658, -0.3526802659034729, -1.1349154710769653, -7.271740287251305e-06, -5.602820692729438e-06, -0.001479484373703599, -0.001759410952217877, -1.8596476365928538e-05, -0.0011812621960416436, -0.8394377827644348, -0.4802943170070648, -3.814689989667386e-06, -2.50339189733495e-06, -0.008507084101438522, -1.7886574268341064, -0.03369786962866783, -0.013150038197636604], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -1.6277048587799072, -0.08179732412099838], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0006039702566340566, -0.04098261892795563, -0.20781828463077545, -0.2058044970035553, -0.0005603650351986289, -1.5735502529423684e-05, -3.909988299710676e-05, -3.0636318115284666e-05, -0.0004711233195848763, -5.376194530981593e-05, -0.011650735512375832, -0.15435713529586792, -0.022460944950580597, -9.179073458653875e-06, -0.622807502746582, -0.033675968647003174], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0)  # Fit in non-verbose mode", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "  ", "#", " Fit", " in", " non", "-", "verbose", " mode", "\n"], "logprobs": [-0.0007320346776396036, -0.00011205045302631333, -0.013290622271597385, -0.011206894181668758, -5.61460001335945e-05, -0.0009802542626857758, -0.008020575158298016, -0.00014351768186315894, -1.3589766240329482e-05, -0.01203030627220869, -0.24048340320587158, -0.0021243165247142315, -0.3465801477432251, -0.09817557036876678, -0.22543184459209442, -0.5093709826469421, -0.09679791331291199, -0.002257657703012228, -0.181002676486969, -0.009308864362537861, -1.1937347650527954, -0.00010358751023886725, -2.1726763248443604, -2.6346521377563477, -0.1629684567451477, -0.002288105897605419, -0.004241755697876215, -0.006344533991068602, -0.04999329522252083], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.09318341314792633, -0.18416644632816315, -0.0004481264913920313, -0.1308584213256836, -0.0006100462633185089, -0.007779065053910017, -0.00032455421751365066, -0.019886519759893417, -0.7683910131454468], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0001770101225702092, -0.000700466800481081, -0.6800476312637329, -0.0009747759322635829, -0.0020409247372299433, -4.172316494077677e-06, -1.645074735279195e-05, 0.0, -3.576272320060525e-06, -5.602820692729438e-06, -0.00028320116689428687, -0.06110740080475807, -0.0007163104019127786, -0.0006671110168099403, -0.20863470435142517, -0.0006982034537941217, -1.3947389561508317e-05, -1.2874520507466514e-05, -0.021638382226228714, -0.02729424461722374], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(10, 8))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "0", ",", " ", "8", "))", "\n"], "logprobs": [-0.017698924988508224, -0.004330068361014128, -0.001493054092861712, -2.2411095415009186e-05, -7.30726242181845e-05, -0.00033718624035827816, -1.229192852973938, -0.4361993968486786, -2.3364747903542593e-05, -0.00954575464129448, -1.1122099161148071, -0.5823991298675537, -0.005933290813118219, -0.0724901333451271, -1.542296051979065, -0.02444332279264927, -0.022033656015992165], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.24676859378814697, -0.006034251302480698, -0.003023341065272689, -1.9073468138230965e-06, -0.0004114258335903287, -0.00029559535323642194, -0.09460043907165527, -0.03573829308152199], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.11148083955049515, -0.08040691167116165, -0.14712119102478027, -0.06386712193489075, -0.0007365613128058612, -6.198863957251888e-06, -0.02679799124598503, -0.029428908601403236], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-6.985420623095706e-05, -4.887569048150908e-06, -0.0006587718962691724, -0.00022539935889653862, -0.0001599660754436627, -1.168244216387393e-05, -0.000248401309363544, -0.0010523025412112474], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.013289328664541245, -0.00019298121333122253, -0.001903866184875369, -0.016557661816477776, -0.0020148707553744316, -2.3483953555114567e-05, -0.000546425289940089, -7.450303382938728e-05, -2.861018856492592e-06, -0.005222606472671032, -6.079655122448457e-06, -0.00910511240363121, -0.060655586421489716], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.06986742466688156, -0.04881293699145317, -0.08118034154176712], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.019160659983754158, -0.0037942577619105577, -0.0059707374311983585, -1.9651892185211182], "finish_reason": "stop"}], "metrics": {"energy": 989.6686489324575, "energy_per_token": 4.973209291117877, "time": 26.273739, "time_per_token": 0.1320288391959799}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, shuffle=False)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " shuffle", "=", "False", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -2.4837846755981445, -0.03142722323536873, -0.4801556468009949, -0.06246934458613396, -0.02775384485721588], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -0.29880163073539734, -0.07811398804187775], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD())", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "())", "\n"], "logprobs": [-0.0006767605082131922, -0.039814941585063934, -0.15005242824554443, -0.1780387908220291, -0.0007210753974504769, -1.7404405298293568e-05, -4.2437604861333966e-05, -2.2649508537142538e-05, -0.0005298641044646502, -4.458328112377785e-05, -0.013318972662091255, -1.8641700744628906, -0.06808909773826599, -2.7894584491150454e-05, -0.0001102625101339072, -0.00041059168870560825, -2.002696055569686e-05, -0.012966249138116837, -0.00015853578224778175, -0.47223201394081116, -0.02234344370663166], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0008823553798720241, -0.00010513706365600228, -0.014812489040195942, -0.011333726346492767, -6.282132380874828e-05, -0.000985136954113841, -0.009318430908024311, -0.00014077626110520214, -1.2993727978027891e-05, -0.014466284774243832, -0.3351697623729706, -0.00200737570412457, -0.38020530343055725, -0.10546280443668365, -0.2277119755744934, -0.5581822991371155, -0.09258613735437393, -0.0020436609629541636, -0.13297009468078613, -0.00975579023361206, -0.3346574902534485], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.10175131261348724, -0.13223665952682495, -0.00044705410255119205, -0.09889619052410126, -0.0008395960903726518, -0.007364743389189243, -0.00044610086479224265, -0.01771145686507225, -0.7413836717605591], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00021062063751742244, -0.0007314390386454761, -0.4483225345611572, -0.0010483728256076574, -0.0020518696401268244, -4.768360213347478e-06, -2.6464111215318553e-05, -1.1920928244535389e-07, -3.6954811548639555e-06, -2.0265558760002023e-06, -0.0004138090298511088, -0.03983418643474579, -0.0007390628452412784, -0.000739539333153516, -0.23491482436656952, -0.0006728292210027575, -1.645074735279195e-05, -1.2755313036905136e-05, -0.020161107182502747, -0.02178606018424034], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.017979148775339127, -0.003949224483221769, -0.002132048597559333, -2.1457441107486375e-05, -0.00011467275908216834, -0.0003618539194576442, -0.31919869780540466, -0.011041494086384773], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.23943497240543365, -0.0046386257745325565, -0.003941269125789404, -2.50339189733495e-06, -0.00035255891270935535, -0.0003197873884346336, -0.10004793107509613, -0.040011271834373474], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.15370647609233856, -0.06966952979564667, -0.13445164263248444, -0.063919797539711, -0.000663894519675523, -5.722029527532868e-06, -0.025846103206276894, -0.03755655139684677], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-6.651657167822123e-05, -5.364403477869928e-06, -0.0007744412287138402, -0.0001961992384167388, -0.00013410145766101778, -1.4066597032069694e-05, -0.0003693613689392805, -0.0009455977124162018], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.009651781059801579, -0.00023898606013972312, -0.00220282468944788, -0.018929429352283478, -0.0025825502816587687, -3.015949550899677e-05, -0.0004135706985834986, -9.274052717955783e-05, -1.9073468138230965e-06, -0.004742682911455631, -7.271740287251305e-06, -0.010682069696485996, -0.07162649929523468], "finish_reason": "stop"}, {"text": "legend()  # Modify here to return Axes object", "tokens": ["legend", "()", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "\n"], "logprobs": [-0.05409886687994003, -0.06327535212039948, -2.3456780910491943, -9.023735765367746e-05, -0.9658641219139099, -0.003286676714196801, -0.012391248717904091, -0.07003059983253479, -2.391291618347168, -0.0883978009223938, -0.0002712835557758808, -0.005133661441504955, -0.05465489998459816], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "\n"], "logprobs": [-0.014796985313296318, -0.0030834770295768976, -0.007793732453137636, -0.29240119457244873, -5.793403761344962e-05, -0.3133610785007477, -0.002871202304959297, -0.03149295598268509, -0.015655001625418663, -0.008025423623621464, -0.2608584761619568, -0.00026794656878337264, -0.005869296845048666, -0.8668438792228699], "finish_reason": "stop"}], "metrics": {"energy": 966.0984150619505, "energy_per_token": 4.904052868334774, "time": 26.066338, "time_per_token": 0.13231643654822334}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -1.8145819902420044], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -0.29880163073539734, -0.07811398804187775], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0006767605082131922, -0.039814941585063934, -0.15005242824554443, -0.1780387908220291, -0.0007210753974504769, -1.7404405298293568e-05, -4.2437604861333966e-05, -2.2649508537142538e-05, -0.0005298641044646502, -4.458328112377785e-05, -0.013318972662091255, -0.1689147651195526, -0.019089436158537865, -9.417489309271332e-06, -0.5163885354995728, -0.027536306530237198], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1000, verbose=0)  # Adjust the number of epochs as needed", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", "0", ",", " verbose", "=", "0", ")", "  ", "#", " Adjust", " the", " number", " of", " epochs", " as", " needed", "\n"], "logprobs": [-0.0007849234389141202, -0.00011729506513802335, -0.015671197324991226, -0.011897084303200245, -7.676783570786938e-05, -0.0008939084364101291, -0.007874871604144573, -0.00018845213344320655, -1.07287787614041e-05, -0.015132272616028786, -0.29879987239837646, -0.0019537187181413174, -0.364462673664093, -0.10778405517339706, -0.24799637496471405, -1.0445417165756226, -0.10680833458900452, -0.0670522153377533, -0.00268729729577899, -0.21759343147277832, -0.008935347199440002, -1.1128000020980835, -0.00011669908417388797, -3.2448976039886475, -1.9849634170532227, -0.17545366287231445, -0.0018240257631987333, -0.0028788098134100437, -0.36004236340522766, -0.10882415622472763, -0.03996167704463005], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.10176369547843933, -0.14264076948165894, -0.0005942009738646448, -0.10580646246671677, -0.0007572882459498942, -0.008432733826339245, -0.00039402826223522425, -0.020840942859649658, -0.7770266532897949], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0002493547508493066, -0.0007898071780800819, -1.1013199090957642, -0.0009894242975860834, -0.0034868652001023293, -3.576272320060525e-06, -4.31528314948082e-05, -1.1920928244535389e-07, -3.814689989667386e-06, -1.5497195136049413e-06, -0.000448841426987201, -0.030085355043411255, -0.0006269635050557554, -0.0010412277188152075, -0.1401241421699524, -0.0007689617923460901, -2.753696753643453e-05, -1.3232143828645349e-05, -0.03621748462319374, -0.011357770301401615], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.026434898376464844, -0.004224068485200405, -0.0018667429685592651, -2.52720492426306e-05, -7.176141662057489e-05, -0.00024959311122074723, -0.3315781354904175, -0.01009796466678381], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.20605286955833435, -0.004802240990102291, -0.0030374841298907995, -1.9073468138230965e-06, -0.0003580405900720507, -0.00034433635300956666, -0.10116656869649887, -0.03546012565493584], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.21604520082473755, -0.05536786466836929, -0.1315607875585556, -0.07461974024772644, -0.0004894727608188987, -6.198863957251888e-06, -0.03956082463264465, -0.04438204690814018], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-5.245071224635467e-05, -5.722029527532868e-06, -0.0006168370018713176, -0.000259723310591653, -0.00012599628826137632, -8.821448318485636e-06, -0.00023648326168768108, -0.0008780676289461553], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006591245997697115, -0.00021681819634977728, -0.0018007030012086034, -0.019645754247903824, -0.0029289701487869024, -3.0517112463712692e-05, -0.0004586121649481356, -6.341733387671411e-05, -3.2186455882765586e-06, -0.00482774805277586, -6.6756979322235566e-06, -0.010076958686113358, -0.050655197352170944], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.07055573910474777, -0.049141667783260345, -0.09809711575508118], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object<|endoftext|>\"\"\"", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.012889876030385494, -0.0033965774346143007, -0.006074182223528624, -0.22621841728687286, -5.113947918289341e-05, -0.28394848108291626, -0.002971164882183075, -0.021406322717666626, -0.01491983886808157, -0.007480704225599766, -0.21330498158931732, -0.00020990552729927003, -0.005714745726436377, -0.873475193977356, -2.7418097943154862e-06, -2.145764938177308e-06, -1.811964830267243e-05, -9.083335316972807e-05, -1.7877739667892456, -0.001134943449869752, -0.0032660020515322685, -0.0003496989083942026, -0.28966665267944336], "finish_reason": "stop"}], "metrics": {"energy": 914.5527985982899, "energy_per_token": 4.943528641071837, "time": 24.435394, "time_per_token": 0.1320832108108108}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -0.43862515687942505, -0.03604041785001755, -0.041098520159721375, -0.030600907281041145], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -0.29880163073539734, -0.07811398804187775], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd', metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0006767605082131922, -0.039814941585063934, -0.15005242824554443, -0.1780387908220291, -0.0007210753974504769, -1.7404405298293568e-05, -4.2437604861333966e-05, -2.2649508537142538e-05, -0.0005298641044646502, -4.458328112377785e-05, -0.013318972662091255, -0.1689147651195526, -0.019089436158537865, -9.417489309271332e-06, -0.9081979990005493, -0.00045003299601376057, -0.004748733714222908, -0.06380695849657059, -0.04222973436117172, -0.011553757824003696, -0.013393665663897991], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0)  # Adjust epochs as needed for convergence", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "  ", "#", " Adjust", " epochs", " as", " needed", " for", " convergence", "\n"], "logprobs": [-0.0007849234389141202, -0.00011729506513802335, -0.015671197324991226, -0.011897084303200245, -7.676783570786938e-05, -0.0008939084364101291, -0.007874871604144573, -0.00018845213344320655, -1.07287787614041e-05, -0.015132272616028786, -0.29879987239837646, -0.0019537187181413174, -0.364462673664093, -0.10778405517339706, -0.24799637496471405, -0.4840787649154663, -0.10631196945905685, -0.0021540552843362093, -0.11627774685621262, -0.008863155730068684, -1.059201955795288, -0.00011681827891152352, -3.5614163875579834, -0.4930824041366577, -1.1833295822143555, -0.09617669135332108, -2.7559547424316406, -1.0896251201629639, -0.055963996797800064], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.10176369547843933, -0.14264076948165894, -0.0005942009738646448, -0.10580646246671677, -0.0007572882459498942, -0.008432733826339245, -0.00039402826223522425, -0.020840942859649658, -0.7770266532897949], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0002493547508493066, -0.0007898071780800819, -1.1013199090957642, -0.0009894242975860834, -0.0034868652001023293, -3.576272320060525e-06, -4.31528314948082e-05, -1.1920928244535389e-07, -3.814689989667386e-06, -1.5497195136049413e-06, -0.000448841426987201, -0.030085355043411255, -0.0006269635050557554, -0.0010412277188152075, -0.1401241421699524, -0.0007689617923460901, -2.753696753643453e-05, -1.3232143828645349e-05, -0.03621748462319374, -0.011357770301401615], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(10, 8))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "0", ",", " ", "8", "))", "\n"], "logprobs": [-0.026434898376464844, -0.004224068485200405, -0.0018667429685592651, -2.52720492426306e-05, -7.176141662057489e-05, -0.00024959311122074723, -1.2659443616867065, -0.32358741760253906, -1.9192511899746023e-05, -0.010916629806160927, -1.2569462060928345, -0.5657561421394348, -0.006501474883407354, -0.07967019081115723, -1.5538041591644287, -0.020530221983790398, -0.022443577647209167], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.1952388733625412, -0.006880637723952532, -0.0026475873310118914, -2.0265558760002023e-06, -0.0004119024670217186, -0.0002858230145648122, -0.07657810300588608, -0.03569654002785683], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.2886228561401367, -0.0677216425538063, -0.14313647150993347, -0.07178084552288055, -0.0004551566671580076, -4.529942543740617e-06, -0.032107874751091, -0.0393044650554657], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-3.540453326422721e-05, -4.529942543740617e-06, -0.0006441186997108161, -0.0001934579631779343, -0.000129691296024248, -1.3708974620385561e-05, -0.0003880701260641217, -0.0010088359704241157], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006947408430278301, -0.00014256415306590497, -0.0019556223414838314, -0.023151101544499397, -0.0018446111353114247, -3.075552376685664e-05, -0.0005616756388917565, -6.294052582234144e-05, -2.50339189733495e-06, -0.005326010286808014, -5.8412379075889476e-06, -0.009649892337620258, -0.06937150657176971], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.07682431489229202, -0.0471130833029747, -0.11927992850542068], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "\n"], "logprobs": [-0.012138190679252148, -0.004114615265280008, -0.006817296147346497, -0.27865996956825256, -6.0437283536884934e-05, -0.30493345856666565, -0.00351204932667315, -0.03196921944618225, -0.018201585859060287, -0.006763067562133074, -0.208265483379364, -0.00028010259848088026, -0.0046065873466432095, -0.9613415598869324], "finish_reason": "stop"}], "metrics": {"energy": 975.605449087143, "energy_per_token": 4.713069802353348, "time": 26.476706, "time_per_token": 0.1279067922705314}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, shuffle=False)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " shuffle", "=", "False", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -2.4837846755981445, -0.03142722323536873, -0.4801556468009949, -0.06246934458613396, -0.02775384485721588], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -1.2362818717956543, -1.1920928244535389e-07, 0.0, -0.8236678242683411, -0.05954796075820923], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005447572330012918, -0.04295172169804573, -0.1883288472890854, -0.1573992669582367, -0.0005776405450887978, -1.4543427823809907e-05, -3.540453326422721e-05, -1.823885577323381e-05, -0.00042882305569946766, -6.139089964563027e-05, -0.013169803656637669, -0.1568147987127304, -0.0222522784024477, -9.775113539944869e-06, -0.5881052613258362, -0.03304678946733475], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1000, verbose=0)  # Non-verbose mode", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", "0", ",", " verbose", "=", "0", ")", "  ", "#", " Non", "-", "verbose", " mode", "\n"], "logprobs": [-0.0007535954937338829, -0.00013505500101018697, -0.01570417359471321, -0.010682069696485996, -6.5205356804654e-05, -0.000943096645642072, -0.0068023777566850185, -0.00011336160969221964, -1.3708974620385561e-05, -0.01099350769072771, -0.28238943219184875, -0.002328186994418502, -0.38043212890625, -0.1156667172908783, -0.23817652463912964, -1.1182003021240234, -0.0870828703045845, -0.06682700663805008, -0.0020624573808163404, -0.22650550305843353, -0.009274967946112156, -1.0600717067718506, -0.0001512651506345719, -1.3880372047424316, -0.005075901746749878, -0.004876506049185991, -0.16621030867099762, -0.10694288462400436], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "\n"], "logprobs": [-0.10949505120515823, -0.14800553023815155, -0.00044371772673912346, -0.1298786848783493, -0.0006011109799146652, -0.008202910423278809, -0.0003660247311927378, -0.019253628328442574, -0.7810912132263184, -0.7380484938621521, -5.817244164063595e-05, -0.26011690497398376], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00019894051365554333, -0.000685576000250876, -0.5553204417228699, -0.0008447177824564278, -0.0018478238489478827, -4.0531076592742465e-06, -2.610649426060263e-05, 0.0, -4.0531076592742465e-06, -2.0265558760002023e-06, -0.0003466005437076092, -0.041434142738580704, -0.0007220283732749522, -0.000704278820194304, -0.18280825018882751, -0.0007522851810790598, -1.8000440832111053e-05, -1.07287787614041e-05, -0.018395651131868362, -0.024818535894155502], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.018727978691458702, -0.004430240951478481, -0.0016141016967594624, -2.3364747903542593e-05, -8.129743218887597e-05, -0.0002971446083392948, -0.31808406114578247, -0.011112939566373825], "finish_reason": "stop"}, {"text": "step(recall, precision, color='r', where='post', label='Precision')  # Modify here", "tokens": ["step", "(", "re", "call", ",", " precision", ",", " color", "='", "r", "'", ",", " where", "='", "post", "'", ",", " label", "='", "Prec", "ision", "')", "  ", "#", " Mod", "ify", " here", "\n"], "logprobs": [-2.4413836002349854, -0.0001436368766007945, -0.012991548515856266, -1.1920922133867862e-06, -0.0006764031131751835, -0.0005016260547563434, -0.018186835572123528, -0.9474280476570129, -0.03832896053791046, -2.7582550048828125, -0.02407367341220379, -2.1815061700181104e-05, -0.10452143102884293, -0.0014456784119829535, -0.00017498392844572663, -1.2152926921844482, -7.092700980138034e-05, -0.2407400906085968, -0.052989378571510315, -0.3114670515060425, -0.000816131301689893, -0.915594756603241, -2.6690595149993896, -0.0001357701694360003, -0.4381885230541229, -0.0029149444308131933, -0.13979187607765198, -1.8072103261947632], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.23678451776504517, -0.0673074722290039, -0.15133747458457947, -0.058041542768478394, -0.0005847889697179198, -5.8412379075889476e-06, -0.03538062050938606, -0.03503616899251938], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-6.723177648382261e-05, -4.6491513785440475e-06, -0.0006700892699882388, -0.00020108585886191577, -0.0001387499796692282, -1.3232143828645349e-05, -0.000331704446580261, -0.0009925207123160362], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.009686374105513096, -0.00019822540343739092, -0.0013936578761786222, -0.018190933391451836, -0.0022980966605246067, -3.218599158572033e-05, -0.00048351517762057483, -7.819823804311454e-05, -2.9802276912960224e-06, -0.0057531483471393585, -7.033323527139146e-06, -0.01058098766952753, -0.052608754485845566], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.09476841241121292, -0.061272796243429184, -0.09718901664018631], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object<|endoftext|>\"\"\"", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.014851014129817486, -0.0033831524197012186, -0.00833201501518488, -0.23001410067081451, -4.9828242481453344e-05, -0.3195939362049103, -0.0025638823863118887, -0.028917036950588226, -0.01158286351710558, -0.0065852063708007336, -0.23452237248420715, -0.00022027450904715806, -0.004789309576153755, -0.858863115310669, -3.3378546504536644e-06, -1.9073468138230965e-06, -2.1219027985353023e-05, -0.00012230125139467418, -1.6582494974136353, -0.0009046276099979877, -0.0032844191882759333, -0.00030083899036981165, -0.2593040466308594], "finish_reason": "stop"}], "metrics": {"energy": 1083.9532934045797, "energy_per_token": 4.94955841737251, "time": 29.410332, "time_per_token": 0.13429375342465755}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -1.8145819902420044], "finish_reason": "stop"}, {"text": " len(X[0])", "tokens": [" len", "(", "X", "[", "0", "])", "\n"], "logprobs": [-1.452148675918579, -0.0011970981722697616, -0.0069925119169056416, -0.5833848714828491, -0.0027731317095458508, -0.02637115865945816, -0.024520214647054672], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0831821858882904, -6.997340824455023e-05, -2.8609820219571702e-05, -1.1205692291259766, -1.1920928244535389e-07, 0.0, -0.880248486995697, -0.05730200558900833], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss='binary_crossentropy', metrics=['accuracy'])", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0005548844928853214, -0.03444090113043785, -1.96402907371521, -9.214453893946484e-05, -0.24218489229679108, -0.06722967326641083, -4.291525328881107e-06, -1.1801649634435307e-05, -0.00011896379146492109, -0.01728588156402111, -0.05931386351585388, -0.0005919373361393809, -4.029192859889008e-05, -5.757642793469131e-05, -4.207999518257566e-05, -0.3426240384578705, -0.0001333863037871197, -0.00916181318461895, -0.06412743777036667, -0.07452282309532166, -0.011056113988161087, -0.014780775643885136], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0005833592731505632, -0.0001280225842492655, -0.017055153846740723, -0.011156911961734295, -7.223821739898995e-05, -0.0008263748604804277, -0.008911244571208954, -0.00015662873920518905, -9.179073458653875e-06, -0.012446467764675617, -1.5197761058807373, -0.0017188312485814095, -0.13290654122829437, -0.036653123795986176, -0.33306196331977844], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "\n"], "logprobs": [-0.1441315859556198, -0.1654472053050995, -0.0005571481888182461, -0.11442641168832779, -0.0008237544680014253, -0.007967120967805386, -0.0002687808300834149, -0.021587517112493515, -0.7126434445381165, -0.7146639823913574, -4.1483970562694594e-05, -0.2525235712528229], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0002348147245356813, -0.0007284610182978213, -0.40217533707618713, -0.0008197046699933708, -0.0023112983908504248, -4.0531076592742465e-06, -1.8000440832111053e-05, -1.1920928244535389e-07, -3.814689989667386e-06, -3.4570634852570947e-06, -0.0004183370911050588, -0.055027976632118225, -0.0007123793475329876, -0.0006158839096315205, -0.20422768592834473, -0.0006737822550348938, -1.5139465176616795e-05, -1.1920858014491387e-05, -0.01698378100991249, -0.025443732738494873], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.02490144595503807, -0.0048155286349356174, -0.0016887226374819875, -2.7656173188006505e-05, -0.00011014331539627165, -0.0003175231395289302, -0.3733868896961212, -0.014476625248789787], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-2.5452287197113037, -0.030022772029042244, -0.6869307160377502, -0.22990451753139496, -0.00665069418027997, -0.0001280225842492655, -0.007336105685681105, -9.762764238985255e-05, -2.0265558760002023e-06, -0.013803028501570225, -6.5205356804654e-05, -0.02071601152420044, -0.07668133825063705], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.2086748480796814, -0.06755853444337845, -0.14033178985118866, -0.0712706670165062, -0.0005735897575505078, -4.410734163684538e-06, -0.02706952765583992, -0.032616037875413895], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-6.139089964563027e-05, -4.887569048150908e-06, -0.000691770575940609, -0.0002449450839776546, -0.00015198028995655477, -1.0251946150674485e-05, -0.00038366109947673976, -0.0010063351364806294], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006889990530908108, -0.0001411338453181088, -0.0016611122991889715, -0.019988534972071648, -0.0026537699159234762, -2.4914430468925275e-05, -0.0004104725376237184, -7.354942499659956e-05, -4.0531076592742465e-06, -0.004580956418067217, -6.794906312279636e-06, -0.00898744910955429, -0.05037332698702812], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.05884179472923279, -0.058507468551397324, -0.1063137948513031], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.012621170841157436, -0.0037365397438406944, -0.006858024746179581, -1.9305543899536133], "finish_reason": "stop"}], "metrics": {"energy": 907.23019922638, "energy_per_token": 5.670188745164875, "time": 24.602306, "time_per_token": 0.1537644125}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -1.8145819902420044], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -0.29880163073539734, -0.07811398804187775], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0006767605082131922, -0.039814941585063934, -0.15005242824554443, -0.1780387908220291, -0.0007210753974504769, -1.7404405298293568e-05, -4.2437604861333966e-05, -2.2649508537142538e-05, -0.0005298641044646502, -4.458328112377785e-05, -0.013318972662091255, -0.1689147651195526, -0.019089436158537865, -9.417489309271332e-06, -0.5163885354995728, -0.027536306530237198], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1000, verbose=False)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", "0", ",", " verbose", "=", "False", ")", "\n"], "logprobs": [-0.0007849234389141202, -0.00011729506513802335, -0.015671197324991226, -0.011897084303200245, -7.676783570786938e-05, -0.0008939084364101291, -0.007874871604144573, -0.00018845213344320655, -1.07287787614041e-05, -0.015132272616028786, -0.29879987239837646, -0.0019537187181413174, -0.364462673664093, -0.10778405517339706, -0.24799637496471405, -1.0445417165756226, -0.10680833458900452, -0.0670522153377533, -0.00268729729577899, -1.7072250843048096, -0.007674022112041712, -0.30860692262649536], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.10176369547843933, -0.14264076948165894, -0.0005942009738646448, -0.10580646246671677, -0.0007572882459498942, -0.008432733826339245, -0.00039402826223522425, -0.020840942859649658, -0.7770266532897949], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0002493547508493066, -0.0007898071780800819, -0.47866782546043396, -0.0008401916129514575, -0.0023485240526497364, -5.8412379075889476e-06, -2.3603161025675945e-05, 0.0, -3.933898824470816e-06, -4.768360213347478e-06, -0.0004959068610332906, -0.037162888795137405, -0.0006591292913071811, -0.0009141556802205741, -0.18155637383460999, -0.0007214327342808247, -1.4781842764932662e-05, -1.680836794548668e-05, -0.018305176869034767, -0.023895954713225365], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.01957889087498188, -0.004824189003556967, -0.0017285895301029086, -2.4437606043647975e-05, -7.760223525110632e-05, -0.000271879427600652, -0.3062323033809662, -0.013216509483754635], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.19489048421382904, -0.003196846228092909, -0.0032936870120465755, -1.4305104514278355e-06, -0.00045277358731254935, -0.0003175231395289302, -0.094623863697052, -0.029266495257616043], "finish_reason": "stop"}, {"text": "set_xlim([0.0, 1.01])", "tokens": ["set", "_", "x", "lim", "([", "0", ".", "0", ",", " ", "1", ".", "0", "1", "])", "\n"], "logprobs": [-0.1811029314994812, -0.0736270546913147, -2.2104172706604004, -0.03589022904634476, -0.01506064459681511, -0.05923263356089592, -0.03828433156013489, -0.003773474832996726, -0.0022435036953538656, -1.585470999998506e-05, -0.00012146688823122531, -0.004072231240570545, -0.0030629171524196863, -0.03781381994485855, -0.0005438040825538337, -0.012094025500118732], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-4.303362584323622e-05, -8.821448318485636e-06, -0.000523430178873241, -0.00023231192608363926, -0.00012146688823122531, -1.0132738680113107e-05, -0.000328367663314566, -0.0009870424401015043], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.007920405827462673, -0.00015567521040793508, -0.0017501289257779717, -0.017981842160224915, -0.0027218933682888746, -3.45700973412022e-05, -0.0006225554971024394, -6.8662193370983e-05, -2.622600959512056e-06, -0.005730983801186085, -6.437280717364047e-06, -0.00998714566230774, -0.05924083665013313], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.07687972486019135, -0.045804526656866074, -0.10388189554214478], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "\n"], "logprobs": [-0.017312360927462578, -0.003954211715608835, -0.006831148639321327, -0.2514384686946869, -5.221230458118953e-05, -0.22890210151672363, -0.002677667187526822, -0.02938816323876381, -0.017411476001143456, -0.007247940171509981, -0.1855148822069168, -0.00036590558011084795, -0.0046500167809426785, -0.8824561238288879], "finish_reason": "stop"}], "metrics": {"energy": 944.5065675306319, "energy_per_token": 5.397180385889325, "time": 24.818123, "time_per_token": 0.1418178457142857}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -0.43862515687942505, -0.03604041785001755, -0.041098520159721375, -0.030600907281041145], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -0.29880163073539734, -0.07811398804187775], "finish_reason": "stop"}, {"text": "compile(optimizer=keras.optimizers.SGD(), loss='binary_crossentropy', metrics=['accuracy'])", "tokens": ["compile", "(", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0006767605082131922, -0.039814941585063934, -2.0533690452575684, -0.00013755806139670312, -1.3860597610473633, -0.12016565352678299, -0.00020525732543319464, -0.0001941730733960867, -7.855583680793643e-05, -9.417489309271332e-06, -0.016917090862989426, -7.70062324590981e-05, -0.08373050391674042, -0.0002470903273206204, -0.014303890988230705, -0.4042151868343353, -0.0013575871707871556, -6.103329360485077e-05, -3.2543604902457446e-05, -4.8040190449682996e-05, -1.036618947982788, -0.0002474478678777814, -0.03296732157468796, -0.07873627543449402, -0.05424352362751961, -0.00771412393078208, -0.012611047364771366], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1000, verbose=False)  # Fit the model with non-verbose mode", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", "0", ",", " verbose", "=", "False", ")", "  ", "#", " Fit", " the", " model", " with", " non", "-", "verbose", " mode", "\n"], "logprobs": [-0.00044848397374153137, -0.00015448330668732524, -0.016042910516262054, -0.011710943654179573, -6.151010165922344e-05, -0.0009152276325039566, -0.00771317770704627, -0.0001597276859683916, -1.3232143828645349e-05, -0.010609296150505543, -0.30132755637168884, -0.0022743092849850655, -0.38505762815475464, -0.08789439499378204, -0.21870216727256775, -1.1197723150253296, -0.08594212681055069, -0.07058517634868622, -0.0026242840103805065, -1.6898475885391235, -0.00724829500541091, -1.1865158081054688, -0.0001858300092862919, -2.4143781661987305, -0.8167667984962463, -0.013271800242364407, -1.1613283157348633, -1.197943091392517, -0.0012982996413484216, -0.0026253541000187397, -0.07751337438821793, -0.03687523677945137], "finish_reason": "stop"}, {"text": " model(X_test)  # Get the predictions using the model's __call__ method", "tokens": [" model", "(", "X", "_", "test", ")", "  ", "#", " Get", " the", " predictions", " using", " the", " model", "'", "s", " __", "call", "__", " method", "\n"], "logprobs": [-0.10065780580043793, -1.5649868249893188, -0.003115682862699032, -0.015825625509023666, -0.0016930069541558623, -0.016957644373178482, -2.5466556549072266, -0.00023588736075907946, -3.9143762588500977, -1.3733508586883545, -1.1184040307998657, -2.4994919300079346, -0.2937926948070526, -0.3179144263267517, -1.5165396928787231, -8.260862523457035e-05, -1.3748501539230347, -0.00027211778797209263, -0.00015472168161068112, -0.05124633014202118, -0.03994151949882507], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00020144341397099197, -0.0005709686665795743, -0.40186256170272827, -0.0009687021956779063, -0.0020663831382989883, -4.172316494077677e-06, -2.098061486321967e-05, 0.0, -3.814689989667386e-06, -1.4305104514278355e-06, -0.000316927267704159, -0.03696748986840248, -0.0006705658161081374, -0.0009018882992677391, -0.22613513469696045, -0.0007846852531656623, -1.4662635294371285e-05, -1.1801649634435307e-05, -0.01796100102365017, -0.02320305071771145], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.022928014397621155, -0.0041812146082520485, -0.0018605556106194854, -2.4676019165781327e-05, -8.761498611420393e-05, -0.00026306029758416116, -0.31874361634254456, -0.01139925792813301], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.24470208585262299, -0.003642473602667451, -0.0031325577292591333, -2.264974000354414e-06, -0.0004175029753241688, -0.00029583368450403214, -0.08685065060853958, -0.03666242957115173], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.2189953476190567, -0.058714888989925385, -0.1657652109861374, -0.06381109356880188, -0.0005501187406480312, -4.768360213347478e-06, -0.027057576924562454, -0.0431964173913002], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-4.7444173105759546e-05, -4.6491513785440475e-06, -0.0005476167425513268, -0.00022194306075107306, -0.0001510267611593008, -1.0967194612021558e-05, -0.000251142424531281, -0.0010193157941102982], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.005853534676134586, -0.0002215855201939121, -0.0016374287661165, -0.02422075904905796, -0.0027205857913941145, -3.266281055402942e-05, -0.00047267231275327504, -6.747018051100895e-05, -2.264974000354414e-06, -0.004864761605858803, -8.22540732769994e-06, -0.0108446991071105, -0.056784383952617645], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.12362594157457352, -0.04851067438721657, -0.07855533808469772], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object"], "logprobs": [-0.016787566244602203, -0.0036722859367728233, -0.006521964445710182, -0.26078253984451294, -6.031808152329177e-05, -0.2876620888710022, -0.0027214179281145334, -0.025605257600545883, -0.014535488560795784, -0.007198587525635958, -0.2380949854850769, -0.00019047829846385866, -0.0056391204707324505], "finish_reason": "stop"}], "metrics": {"energy": 1103.2193339519506, "energy_per_token": 5.0606391465685805, "time": 28.938232, "time_per_token": 0.13274418348623854}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -1.5804119110107422, -0.0001908358681248501, -2.8609820219571702e-05, -0.0009128456003963947, -0.00040189296123571694, -6.9141146923357155e-06, -0.00013815402053296566, -0.0033949140924960375, -0.027618758380413055, -0.00011848701251437888, -3.2543604902457446e-05, -7.271740287251305e-06, -1.0728830375228426e-06, -0.000259365770034492, -0.13480828702449799, -0.002504071919247508, -0.009806787595152855, -0.015796056017279625, -0.13829052448272705, -2.5510462364763953e-05, -2.7418097943154862e-06, -0.016671858727931976, -0.012213679030537605, -1.3351351299206726e-05, -0.006039820611476898, -0.23721463978290558, -0.10129380226135254, -2.145764938177308e-06, -2.7418097943154862e-06, -0.0067705269902944565, -0.3653407692909241, -0.03120620921254158, -0.042273614555597305, -0.0214015394449234], "finish_reason": "stop"}, {"text": " len(X[0])", "tokens": [" len", "(", "X", "[", "0", "])", "\n"], "logprobs": [-1.452148675918579, -0.0011970981722697616, -0.0069925119169056416, -0.5833848714828491, -0.0027731317095458508, -0.02637115865945816, -0.024520214647054672], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0831821858882904, -6.997340824455023e-05, -2.8609820219571702e-05, -1.1205692291259766, -1.1920928244535389e-07, 0.0, -0.880248486995697, -0.05730200558900833], "finish_reason": "stop"}, {"text": "compile(optimizer=keras.optimizers.SGD(), loss=keras.losses.binary_crossentropy)", "tokens": ["compile", "(", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "()", ",", " loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ")", "\n"], "logprobs": [-0.0005548844928853214, -0.03444090113043785, -1.96402907371521, -9.214453893946484e-05, -1.5442688465118408, -0.1796644777059555, -0.0002236116270069033, -0.00013398226292338222, -4.255681051290594e-05, -1.07287787614041e-05, -0.016434071585536003, -0.00010215714428341016, -0.08005231618881226, -0.0002859421947505325, -0.016180744394659996, -1.1555399894714355, -0.050646357238292694, -1.6331539882230572e-05, -0.001500672078691423, -2.5510462364763953e-05, -3.2543604902457446e-05, -0.7855231165885925, -0.00011312322021694854, -5.328513361746445e-05, -1.6093124941107817e-05, -0.5976569056510925, -0.029488056898117065], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=15, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "5", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0005833592731505632, -0.0001280225842492655, -0.017055153846740723, -0.011156911961734295, -7.223821739898995e-05, -0.0008263748604804277, -0.008911244571208954, -0.00015662873920518905, -9.179073458653875e-06, -0.012446467764675617, -0.2891509532928467, -0.0019520529313012958, -0.37155628204345703, -2.916839122772217, -0.9180184602737427, -0.0567169189453125, -0.0023783750366419554, -0.08605227619409561, -0.010104455053806305, -0.3149855434894562], "finish_reason": "stop"}, {"text": " model(X_test).numpy()  # Convert tensor to numpy array", "tokens": [" model", "(", "X", "_", "test", ")", ".", "numpy", "()", "  ", "#", " Convert", " tensor", " to", " numpy", " array", "\n"], "logprobs": [-0.11431720852851868, -1.970507025718689, -0.0036505504976958036, -0.014737197197973728, -0.0018255725735798478, -0.014132889918982983, -0.4985542297363281, -0.00608366122469306, -0.000695463502779603, -1.5526096820831299, -0.00021884430316276848, -1.7177540063858032, -1.6433384418487549, -0.33120739459991455, -0.3752190172672272, -0.013339322060346603, -0.21646934747695923], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00017951308109331876, -0.0005709686665795743, -0.6215859055519104, -0.0008978387922979891, -0.002598720835521817, -4.887569048150908e-06, -3.075552376685664e-05, -1.1920928244535389e-07, -4.172316494077677e-06, -2.3841830625315197e-06, -0.0003960540343541652, -0.04015923663973808, -0.0006276782951317728, -0.0006513857515528798, -0.2419729381799698, -0.0009635811438784003, -2.062299427052494e-05, -1.07287787614041e-05, -0.021329890936613083, -0.02380399778485298], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.019459998235106468, -0.0043713729828596115, -0.001426989445462823, -2.5152843591058627e-05, -8.487341256113723e-05, -0.00036125810584053397, -0.32440900802612305, -0.012011696584522724], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.2272474616765976, -0.005545351654291153, -0.003821452846750617, -1.6689286894688848e-06, -0.0003911683743353933, -0.00029225845355540514, -0.10905271768569946, -0.029599396511912346], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.1478326916694641, -0.0578279085457325, -0.15308056771755219, -0.06552346795797348, -0.0004303721070755273, -4.768360213347478e-06, -0.03542952239513397, -0.03655681386590004], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-5.185469490243122e-05, -5.8412379075889476e-06, -0.0006586528033949435, -0.00020668754586949944, -0.0001463782973587513, -1.3112935448589269e-05, -0.00024136967840604484, -0.0013196102809160948], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.007848141714930534, -0.00017963226127903908, -0.0017308506648987532, -0.024975161999464035, -0.002730334410443902, -3.3854863431770355e-05, -0.0006044468027539551, -7.962863310240209e-05, -2.264974000354414e-06, -0.004670662805438042, -7.152531907195225e-06, -0.009483289904892445, -0.07295957207679749], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.05811994522809982, -0.04905688390135765, -0.10017811506986618], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.012035960331559181, -0.003850903594866395, -0.007024591788649559, -2.0319457054138184], "finish_reason": "stop"}], "metrics": {"energy": 1031.0694833297732, "energy_per_token": 5.455394091691922, "time": 27.728762, "time_per_token": 0.14671302645502646}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=1)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -1.8056752681732178, -0.7268799543380737, -0.017579106613993645], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -1.2362818717956543, -1.1920928244535389e-07, 0.0, -0.8711226582527161, -0.2204493284225464], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005447572330012918, -0.04295172169804573, -0.1883288472890854, -0.1573992669582367, -0.0005776405450887978, -1.4543427823809907e-05, -3.540453326422721e-05, -1.823885577323381e-05, -0.00042882305569946766, -6.139089964563027e-05, -0.013169803656637669, -0.1568147987127304, -0.0222522784024477, -9.775113539944869e-06, -0.5881052613258362, -0.03304678946733475], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=20, verbose=0)  # Set epochs=20 and disable verbose mode", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "2", "0", ",", " verbose", "=", "0", ")", "  ", "#", " Set", " epochs", "=", "2", "0", " and", " disable", " verbose", " mode", "\n"], "logprobs": [-0.0007535954937338829, -0.00013505500101018697, -0.01570417359471321, -0.010682069696485996, -6.5205356804654e-05, -0.000943096645642072, -0.0068023777566850185, -0.00011336160969221964, -1.3708974620385561e-05, -0.01099350769072771, -0.28238943219184875, -0.002328186994418502, -2.1931724548339844, -0.144181028008461, -0.6674341559410095, -0.10006389766931534, -0.001783329644240439, -0.08622650057077408, -0.008633195422589779, -1.059627890586853, -0.00012206286191940308, -2.1333298683166504, -0.1498207300901413, -2.2847862243652344, -0.2992062568664551, -0.004404605366289616, -0.8616243004798889, -2.6089184284210205, -0.11547905951738358, -0.49211543798446655, -0.06785409152507782], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.11316657066345215, -0.12142430990934372, -0.0004042761866003275, -0.12285187095403671, -0.0006677066558040679, -0.008003664202988148, -0.00041345154750160873, -0.02229401469230652, -0.7247476577758789], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0001627074379939586, -0.0008423355757258832, -0.5803759694099426, -0.0012735360069200397, -0.0021947361528873444, -4.172316494077677e-06, -2.7894584491150454e-05, -1.1920928244535389e-07, -3.3378546504536644e-06, -1.7881377516459906e-06, -0.0005041282274760306, -0.03661220893263817, -0.0007001094636507332, -0.0007949291029945016, -0.21141137182712555, -0.0009637002367526293, -1.597391747054644e-05, -1.2755313036905136e-05, -0.01731681264936924, -0.021021423861384392], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(10, 10))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "0", ",", " ", "1", "0", "))", "\n"], "logprobs": [-0.02105492353439331, -0.004240687470883131, -0.0018086755881085992, -1.847726889536716e-05, -8.368142152903602e-05, -0.0002325502864550799, -1.268674612045288, -0.20683516561985016, -2.6464111215318553e-05, -0.009977231733500957, -1.193307876586914, -0.5452747344970703, -0.005924877244979143, -0.06515495479106903, -1.1507668495178223, -0.011730972677469254, -0.02467432990670204, -0.038317833095788956], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')  # Modify here to set the title", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "  ", "#", " Mod", "ify", " here", " to", " set", " the", " title", "\n"], "logprobs": [-1.9538352489471436, -0.025365633890032768, -0.6240557432174683, -0.19803974032402039, -0.004981250036507845, -9.464769391342998e-05, -0.006535939406603575, -0.0001230164198204875, -2.3841830625315197e-06, -0.01281808689236641, -7.545663538621739e-05, -0.019235853105783463, -2.4051709175109863, -7.521823135903105e-05, -0.45898348093032837, -0.0016858663875609636, -0.03819885104894638, -0.16403844952583313, -0.34899407625198364, -1.8818867206573486, -0.18693901598453522, -0.26591867208480835], "finish_reason": "stop"}, {"text": "plot(recall, recall, label='Random', linestyle='--')", "tokens": ["plot", "(", "re", "call", ",", " recall", ",", " label", "='", "Random", "'", ",", " lin", "estyle", "='", "--", "')", "\n"], "logprobs": [-2.1013169288635254, -2.3881676197052, -0.11153703182935715, -1.1324817933200393e-05, -0.040509141981601715, -0.1498522311449051, -0.0044088782742619514, -0.7459896802902222, -0.007421068847179413, -0.5733843445777893, -1.6687597036361694, -7.843663479434326e-05, -0.1344810277223587, -3.576278118089249e-07, -0.042078301310539246, -0.5327275991439819, -0.12707261741161346, -0.19537703692913055], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-4.5298504119273275e-05, -5.483612312673358e-06, -0.0006675875629298389, -0.00020323118951637298, -0.00016604475968051702, -9.298280929215252e-06, -0.0004233417857903987, -0.0010483728256076574], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008523158729076385, -0.00018821375851985067, -0.0017915404168888927, -0.021574918180704117, -0.0030288081616163254, -3.099393507000059e-05, -0.0005159238935448229, -6.222531374078244e-05, -2.7418097943154862e-06, -0.00508681358769536, -6.079655122448457e-06, -0.008820381946861744, -0.059150051325559616], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.08616919815540314, -0.05351461470127106, -0.09018594026565552], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return the Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " the", " Ax", "es", " object"], "logprobs": [-0.019495656713843346, -0.003294518683105707, -0.0065327417105436325, -0.2673729360103607, -4.95898348162882e-05, -0.2908475399017334, -0.0029198178090155125, -0.028062330558896065, -0.014757048338651657, -0.006811376195400953, -2.7282447814941406, -0.17726179957389832, -0.0008858094224706292, -0.004803190007805824], "finish_reason": "stop"}], "metrics": {"energy": 1145.2274154701236, "energy_per_token": 5.067377944558069, "time": 30.578272, "time_per_token": 0.1353020884955752}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=0)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -2.1407124996185303, -0.060246895998716354, -0.021802272647619247], "finish_reason": "stop"}, {"text": " len(X[0])", "tokens": [" len", "(", "X", "[", "0", "])", "\n"], "logprobs": [-1.452148675918579, -0.0011970981722697616, -0.0069925119169056416, -0.5833848714828491, -0.0027731317095458508, -0.02637115865945816, -0.024520214647054672], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.0831821858882904, -6.997340824455023e-05, -2.8609820219571702e-05, -1.1205692291259766, -1.1920928244535389e-07, 0.0, -0.8066133856773376, -0.26738855242729187], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd', metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0005548844928853214, -0.03444090113043785, -0.1672227829694748, -0.20773190259933472, -0.000538680877070874, -1.6212332411669195e-05, -5.531158240046352e-05, -4.3748852476710454e-05, -0.0004343043256085366, -6.83045873302035e-05, -0.01130791287869215, -0.1914694756269455, -0.020149540156126022, -8.4638240878121e-06, -0.8630685806274414, -0.00040546778473071754, -0.0049999915063381195, -0.07637998461723328, -0.03688281774520874, -0.009954806417226791, -0.014251712709665298], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0010055014863610268, -0.00010930894495686516, -0.014468635432422161, -0.011207837611436844, -7.545663538621739e-05, -0.0008815216715447605, -0.007008255925029516, -0.00017951308109331876, -1.3589766240329482e-05, -0.012607398442924023, -0.30785560607910156, -0.002009041141718626, -0.3445086181163788, -0.10382752865552902, -1.3613687753677368, -0.0742516964673996, -0.0016788449138402939, -0.08097357302904129, -0.007868248037993908, -0.36808353662490845], "finish_reason": "stop"}, {"text": " model.predict(X_test).flatten()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "fl", "atten", "()", "\n"], "logprobs": [-0.12449488788843155, -0.1836836338043213, -0.00037496211007237434, -0.11542287468910217, -0.0007454953738488257, -0.008649386465549469, -0.00037377048283815384, -0.027620961889624596, -0.8286721706390381, -1.140749454498291, -2.062299427052494e-05, -7.879423355916515e-05, -0.1772712767124176], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0002631794777698815, -0.0005768066039308906, -1.148974061012268, -0.0010630200849846005, -0.00300586991943419, -3.2186455882765586e-06, -3.576214658096433e-05, -2.3841855067985307e-07, -4.291525328881107e-06, -1.0728830375228426e-06, -0.00044204952428117394, -0.043494127690792084, -0.0006993946735747159, -0.000925112864933908, -0.1540927141904831, -0.0009915679693222046, -2.884823152271565e-05, -2.2291887944447808e-05, -0.03291541710495949, -0.01341730821877718], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.02527265064418316, -0.004000162705779076, -0.001508289948105812, -2.312633478140924e-05, -7.30726242181845e-05, -0.0002862997353076935, -0.33911025524139404, -0.011353174224495888], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-2.229811191558838, -0.024202723056077957, -0.9199154376983643, -0.2035973221063614, -0.005449084565043449, -8.821098163025454e-05, -0.005773890297859907, -0.00010156115604331717, -1.4305104514278355e-06, -0.011340444907546043, -6.41325386823155e-05, -0.017412295565009117, -0.090680792927742], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.2334008365869522, -0.07054385542869568, -0.14853620529174805, -0.05745452642440796, -0.0005981324939057231, -5.8412379075889476e-06, -0.024757366627454758, -0.03613481670618057], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-5.6980417866725475e-05, -3.4570634852570947e-06, -0.0006495987763628364, -0.0002047805901383981, -0.00010585224663373083, -1.07287787614041e-05, -0.0003375437227077782, -0.0010604002745822072], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006526346318423748, -0.00015662873920518905, -0.002739726100116968, -0.022756852209568024, -0.0020240312442183495, -3.0040289857424796e-05, -0.0005654881824739277, -7.378782902378589e-05, -2.145764938177308e-06, -0.005344507750123739, -8.22540732769994e-06, -0.010654824785888195, -0.06134040653705597], "finish_reason": "stop"}, {"text": "legend()  # Modify here to add legend", "tokens": ["legend", "()", "  ", "#", " Mod", "ify", " here", " to", " add", " legend", "\n"], "logprobs": [-0.07789081335067749, -0.06325677037239075, -2.539654493331909, -8.964136941358447e-05, -1.0297534465789795, -0.00318971648812294, -0.014231615699827671, -0.07701737433671951, -0.9543978571891785, -0.4007430672645569, -0.39131635427474976], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.013769636861979961, -0.003758867271244526, -0.006685627158731222, -1.996931791305542], "finish_reason": "stop"}], "metrics": {"energy": 977.7219086780541, "energy_per_token": 5.118962872659969, "time": 26.890053, "time_per_token": 0.14078561780104712}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=10)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", "0", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -1.5804119110107422, -0.0001908358681248501, -2.8609820219571702e-05, -0.0009128456003963947, -0.00040189296123571694, -6.9141146923357155e-06, -0.00013815402053296566, -0.0033949140924960375, -0.027618758380413055, -0.00011848701251437888, -3.2543604902457446e-05, -7.271740287251305e-06, -1.0728830375228426e-06, -0.000259365770034492, -0.13480828702449799, -0.002504071919247508, -0.009806787595152855, -0.015796056017279625, -0.13829052448272705, -2.5510462364763953e-05, -2.7418097943154862e-06, -0.016671858727931976, -0.012213679030537605, -1.3351351299206726e-05, -0.006039820611476898, -0.23721463978290558, -0.10129380226135254, -2.145764938177308e-06, -2.7418097943154862e-06, -0.0067705269902944565, -1.8709063529968262, -1.940923810005188, -0.7949914336204529, -0.01998397707939148], "finish_reason": "stop"}, {"text": " X.shape[1]", "tokens": [" X", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -1.9260151386260986, -0.0004998388467356563, -0.026672177016735077, -0.010880664922297001, -0.00442620599642396, -0.032475490123033524], "finish_reason": "stop"}, {"text": " Sequential()", "tokens": [" Sequ", "ential", "()", "\n"], "logprobs": [-2.6675591468811035, -7.867782187531702e-06, -0.07621242851018906, -0.07987359911203384], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005497612874023616, -0.035802703350782394, -0.20757518708705902, -0.18380683660507202, -0.0006162413046695292, -1.5020257706055418e-05, -4.029192859889008e-05, -3.218599158572033e-05, -0.00033790123416110873, -5.2569914259947836e-05, -0.014547002501785755, -0.14873871207237244, -0.02533518336713314, -1.0371154530730564e-05, -0.5452739596366882, -0.026898376643657684], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)  # Epochs is 10 as per assignment", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "  ", "#", " Ep", "och", "s", " is", " ", "1", "0", " as", " per", " assignment", "\n"], "logprobs": [-0.0009515525307506323, -0.00011908298620255664, -0.014429742470383644, -0.013718371279537678, -6.97350042173639e-05, -0.0010345588671043515, -0.008334379643201828, -0.0001525762490928173, -1.1801649634435307e-05, -0.013445889577269554, -0.3326903283596039, -0.0017840436194092035, -0.4009409248828888, -0.11674246191978455, -1.65901517868042, -0.09028005599975586, -0.0017590539064258337, -0.0645320937037468, -0.0071842665784060955, -1.085292100906372, -7.891343557275832e-05, -3.38801908493042, -2.3007127310847864e-05, -0.10967795550823212, -3.8062407970428467, -2.5015273094177246, -0.014414232224225998, -0.04015694931149483, -2.884873867034912, -0.6531357765197754, -3.257587432861328, -1.5003011226654053], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.1396041363477707, -0.15518487989902496, -0.0004567056894302368, -0.14056268334388733, -0.0008866431307978928, -0.00934653915464878, -0.0004128557338844985, -0.027385763823986053, -0.6211000680923462], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00023326536756940186, -0.0005993238883093, -0.4689139127731323, -0.0008929556352086365, -0.003093340899795294, -4.529942543740617e-06, -2.002696055569686e-05, 0.0, -3.099436753473128e-06, -7.033323527139146e-06, -0.0005004345439374447, -0.03856905549764633, -0.0007844470092095435, -0.00067473528906703, -0.20290865004062653, -0.0007205988513305783, -1.6093124941107817e-05, -1.1801649634435307e-05, -0.018776297569274902, -0.025906391441822052], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(8, 6))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "8", ",", " ", "6", "))", "\n"], "logprobs": [-0.018358901143074036, -0.0039879330433905125, -0.0015786340227350593, -2.407998726994265e-05, -7.199982064776123e-05, -0.0003036991402041167, -1.2688186168670654, -0.37460651993751526, -2.407998726994265e-05, -0.009350200183689594, -1.2817721366882324, -0.015521205961704254, -0.048947010189294815, -0.6668654084205627, -0.031518250703811646, -0.035946812480688095], "finish_reason": "stop"}, {"text": "step(recall, precision, where='post')", "tokens": ["step", "(", "re", "call", ",", " precision", ",", " where", "='", "post", "')", "\n"], "logprobs": [-2.3401846885681152, -0.00011848701251437888, -0.01404026709496975, -8.344646857949556e-07, -0.000659248442389071, -0.0005768066039308906, -0.02505236305296421, -0.9194028973579407, -0.012430808506906033, -0.0011455409694463015, -0.9677164554595947, -0.10579133778810501], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.1891169250011444, -0.059227354824543, -0.11699965596199036, -0.07092759013175964, -0.0004786299541592598, -5.364403477869928e-06, -0.02613845281302929, -0.04050330072641373], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-5.709961988031864e-05, -4.410734163684538e-06, -0.00042060110718011856, -0.00021395778458099812, -9.560128091834486e-05, -1.0013530300057027e-05, -0.00026639728457666934, -0.0010337253334000707], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.0076462216675281525, -0.00017188502533826977, -0.0023646983318030834, -0.0176186952739954, -0.002247785683721304, -3.349725011503324e-05, -0.0005427317810244858, -6.329813186312094e-05, -2.622600959512056e-06, -0.005715812090784311, -6.198863957251888e-06, -0.008166966028511524, -0.05770008638501167], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.06127750873565674, -0.049784623086452484, -0.0644858181476593], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "\n"], "logprobs": [-0.01652400940656662, -0.0037230004090815783, -0.006370001472532749, -0.28752535581588745, -5.9126061387360096e-05, -0.2663668692111969, -0.0034848456270992756, -0.024642113596200943, -0.013117448426783085, -0.007106030359864235, -0.2377200424671173, -0.0003116837178822607, -0.006407076492905617, -0.8130658864974976], "finish_reason": "stop"}], "metrics": {"energy": 1045.2869632015238, "energy_per_token": 5.226434816007619, "time": 27.950943, "time_per_token": 0.139754715}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.7, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " train", "_", "size", "=", "0", ".", "7", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -2.0759425163269043, -1.2636104656849056e-05, -2.145764938177308e-06, -0.04498966783285141, -0.02778526581823826, -1.4066597032069694e-05, -0.005284033250063658, -0.3526802659034729, -0.6877871751785278, -4.0531076592742465e-06, -4.529942543740617e-06, -0.009760985150933266, -0.7219923138618469, -0.05521310865879059, -0.05501466244459152, -0.025263700634241104], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -1.2362818717956543, -1.1920928244535389e-07, 0.0, -0.8236678242683411, -0.05954796075820923], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.binary_crossentropy, optimizer='sgd')", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005447572330012918, -0.04295172169804573, -0.1883288472890854, -1.940156102180481, -0.1066538393497467, -0.00010156115604331717, -0.0011324428487569094, -1.9073304429184645e-05, -1.8000440832111053e-05, -0.6669595837593079, -4.672895011026412e-05, -2.0861407392658293e-05, -6.556489552167477e-06, -0.00633896654471755, -0.02459779940545559, -1.4299719333648682, -0.01670749858021736, -4.172316494077677e-06, -0.05552823841571808, -0.0223239753395319], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0006909366929903626, -0.00011419598013162613, -0.015510759316384792, -0.012497798539698124, -7.331102824537084e-05, -0.000867467257194221, -0.008076390251517296, -0.00015555603022221476, -1.3351351299206726e-05, -0.01083479356020689, -1.5136786699295044, -0.0017733338754624128, -0.13118070363998413, -0.03273383900523186, -0.34694406390190125], "finish_reason": "stop"}, {"text": " model.predict_proba(X_test)", "tokens": [" model", ".", "predict", "_", "prob", "a", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.10668212920427322, -0.16559065878391266, -0.00044371772673912346, -2.1650891304016113, -0.20250771939754486, -0.00028832571115344763, -0.006906920112669468, -0.0023079682141542435, -0.008207639679312706, -0.0004096384218428284, -0.029839513823390007, -0.5182411074638367], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test.ravel(), Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0001931004080688581, -0.0005990855861455202, -0.5827495455741882, -0.0008917645900510252, -0.0025649527087807655, -4.887569048150908e-06, -2.0265373677830212e-05, -2.3841855067985307e-07, -3.4570634852570947e-06, -2.145764938177308e-06, -0.0004408579843584448, -0.03799436241388321, -0.0005905076395720243, -0.0007969540893100202, -1.681015968322754, -0.015546441078186035, -7.557583012385294e-05, -0.002926830668002367, -0.001320562674663961, -1.1920858014491387e-05, -6.6756979322235566e-06, -0.025937173515558243, -0.019042184576392174], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.02180623821914196, -0.003840334713459015, -0.0018649582052603364, -2.253030106658116e-05, -7.366862701019272e-05, -0.0002890407631639391, -0.32440099120140076, -0.013382021337747574], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.21466714143753052, -0.0051231058314442635, -0.002810459118336439, -1.7881377516459906e-06, -0.00032085992279462516, -0.0003165697562508285, -0.13298669457435608, -0.03663933277130127], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.14640021324157715, -0.05021053925156593, -0.1940627545118332, -0.052694935351610184, -0.00046993177966214716, -4.887569048150908e-06, -0.025066662579774857, -0.03784733638167381], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-6.329813186312094e-05, -4.172316494077677e-06, -0.0007900454220362008, -0.00017486473370809108, -0.0001463782973587513, -9.65590606938349e-06, -0.0003831844369415194, -0.0010131231974810362], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.00719598401337862, -0.0002422039397060871, -0.001911718980409205, -0.019585086032748222, -0.0024845702573657036, -3.2305197237292305e-05, -0.0005006728461012244, -6.282132380874828e-05, -2.7418097943154862e-06, -0.00590129429474473, -7.152531907195225e-06, -0.008795803412795067, -0.06666798889636993], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.0651397630572319, -0.045397575944662094, -0.07868481427431107], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object"], "logprobs": [-0.01450012344866991, -0.003161553293466568, -0.008014307357370853, -0.30362585186958313, -4.768258077092469e-05, -0.23160195350646973, -0.0028300732374191284, -0.027788745239377022, -0.014678697101771832, -0.006237563211470842, -0.23121275007724762, -0.0002329078270122409, -0.005077444016933441], "finish_reason": "stop"}], "metrics": {"energy": 1011.0083863086691, "energy_per_token": 5.435528958648758, "time": 27.119488, "time_per_token": 0.1458036989247312}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=11)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", "1", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -1.8056752681732178, -3.5446557998657227, -0.3876630365848541, -0.019255381077528], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -1.2362818717956543, -1.1920928244535389e-07, 0.0, -0.8236678242683411, -0.05954796075820923], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005447572330012918, -0.04295172169804573, -0.1883288472890854, -0.1573992669582367, -0.0005776405450887978, -1.4543427823809907e-05, -3.540453326422721e-05, -1.823885577323381e-05, -0.00042882305569946766, -6.139089964563027e-05, -0.013169803656637669, -0.1568147987127304, -0.0222522784024477, -9.775113539944869e-06, -0.5881052613258362, -0.03304678946733475], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0)  # Non-verbose mode", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "  ", "#", " Non", "-", "verbose", " mode", "\n"], "logprobs": [-0.0007535954937338829, -0.00013505500101018697, -0.01570417359471321, -0.010682069696485996, -6.5205356804654e-05, -0.000943096645642072, -0.0068023777566850185, -0.00011336160969221964, -1.3708974620385561e-05, -0.01099350769072771, -0.28238943219184875, -0.002328186994418502, -0.38043212890625, -0.1156667172908783, -0.23817652463912964, -0.4425983726978302, -0.11463998258113861, -0.0018609125399962068, -0.13300757110118866, -0.01042846031486988, -1.028967022895813, -9.917721035890281e-05, -1.2822316884994507, -0.0042567127384245396, -0.004077811259776354, -0.14677126705646515, -0.09530911594629288], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()  # Ravel ensures Y_pred is a 1D array for precision_recall_curve", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "  ", "#", " R", "avel", " ensures", " Y", "_", "pred", " is", " a", " ", "1", "D", " array", " for", " precision", "_", "re", "call", "_", "curve", "\n"], "logprobs": [-0.10949505120515823, -0.14800553023815155, -0.00044371772673912346, -0.1298786848783493, -0.0006011109799146652, -0.008202910423278809, -0.0003660247311927378, -0.019253628328442574, -0.7810912132263184, -0.7380484938621521, -5.817244164063595e-05, -1.4948428869247437, -6.69933797325939e-05, -2.7949893474578857, -0.0045228092931210995, -1.504051923751831, -3.454728126525879, -0.022963549941778183, -0.09955478459596634, -0.2028816044330597, -0.41650447249412537, -0.13910698890686035, -0.0006394725642167032, -0.17760130763053894, -0.05653364211320877, -3.022456407546997, -1.1989266872406006, -0.12160472571849823, -0.0003268184664193541, -7.30726242181845e-05, -0.0025698277167975903, -6.401333666872233e-05, -0.050576888024806976], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00019894051365554333, -0.000685576000250876, -0.5553204417228699, -0.0008447177824564278, -0.0018478238489478827, -4.0531076592742465e-06, -2.610649426060263e-05, 0.0, -4.0531076592742465e-06, -2.0265558760002023e-06, -0.0003466005437076092, -0.041434142738580704, -0.0007220283732749522, -0.000704278820194304, -0.18280825018882751, -0.0007522851810790598, -1.8000440832111053e-05, -1.07287787614041e-05, -0.018395651131868362, -0.024818535894155502], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.018727978691458702, -0.004430240951478481, -0.0016141016967594624, -2.3364747903542593e-05, -8.129743218887597e-05, -0.0002971446083392948, -0.31808406114578247, -0.011112939566373825], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.21265439689159393, -0.005182522814720869, -0.0029685499612241983, -1.9073468138230965e-06, -0.00042143522296100855, -0.0003159739135298878, -0.09724104404449463, -0.032826244831085205], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.20615027844905853, -0.07253792136907578, -0.15525572001934052, -0.06189780682325363, -0.0005222387262620032, -4.6491513785440475e-06, -0.03301484137773514, -0.04308532178401947], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-4.970903682988137e-05, -7.390948667307384e-06, -0.0005025792634114623, -0.0002146728802472353, -0.00019274283840786666, -1.07287787614041e-05, -0.00037174468161538243, -0.0012966329231858253], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008779142051935196, -0.00016234986833296716, -0.0017873755423352122, -0.02709830179810524, -0.002674457151442766, -2.7417760065873154e-05, -0.0003404037852305919, -7.819823804311454e-05, -3.3378546504536644e-06, -0.005601543001830578, -7.629365427419543e-06, -0.009809031151235104, -0.06321033090353012], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.07900232821702957, -0.044285230338573456, -0.09745323657989502], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "\n"], "logprobs": [-0.015855781733989716, -0.003885340876877308, -0.008902501314878464, -0.27125611901283264, -5.578839045483619e-05, -0.3341900706291199, -0.002876313403248787, -0.027371497824788094, -0.013976437039673328, -0.007551339454948902, -0.2459343522787094, -0.00025412190007045865, -0.005298025906085968, -0.9386736154556274], "finish_reason": "stop"}], "metrics": {"energy": 1087.218127859116, "energy_per_token": 5.10431045943247, "time": 29.435436, "time_per_token": 0.1381945352112676}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=1000)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", "0", "0", "0", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -1.8056752681732178, -2.1185503005981445, -1.3864214420318604, -2.1139755249023438, -0.1124107837677002, -0.0204811692237854], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -0.29880163073539734, -0.07811398804187775], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0006767605082131922, -0.039814941585063934, -0.15005242824554443, -0.1780387908220291, -0.0007210753974504769, -1.7404405298293568e-05, -4.2437604861333966e-05, -2.2649508537142538e-05, -0.0005298641044646502, -4.458328112377785e-05, -0.013318972662091255, -0.1689147651195526, -0.019089436158537865, -9.417489309271332e-06, -0.5163885354995728, -0.027536306530237198], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1000, verbose=0)  # Non-verbose mode", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", "0", ",", " verbose", "=", "0", ")", "  ", "#", " Non", "-", "verbose", " mode", "\n"], "logprobs": [-0.0007849234389141202, -0.00011729506513802335, -0.015671197324991226, -0.011897084303200245, -7.676783570786938e-05, -0.0008939084364101291, -0.007874871604144573, -0.00018845213344320655, -1.07287787614041e-05, -0.015132272616028786, -0.29879987239837646, -0.0019537187181413174, -0.364462673664093, -0.10778405517339706, -0.24799637496471405, -1.0445417165756226, -0.10680833458900452, -0.0670522153377533, -0.00268729729577899, -0.21759343147277832, -0.008935347199440002, -1.1128000020980835, -0.00011669908417388797, -1.5667760372161865, -0.004567309748381376, -0.004503465257585049, -0.16906708478927612, -0.13832540810108185], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()  # Predict class probabilities for the test set", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "  ", "#", " Pred", "ict", " class", " probabilities", " for", " the", " test", " set", "\n"], "logprobs": [-0.10176369547843933, -0.14264076948165894, -0.0005942009738646448, -0.10580646246671677, -0.0007572882459498942, -0.008432733826339245, -0.00039402826223522425, -0.020840942859649658, -0.7241625785827637, -0.6975820660591125, -5.602679812000133e-05, -1.4618310928344727, -8.034383063204587e-05, -3.0429515838623047, -0.6964834928512573, -3.424955368041992, -0.056176118552684784, -2.567471742630005, -1.3029770851135254, -0.04550135135650635, -0.16623272001743317, -0.033521853387355804], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0002493547508493066, -0.0007898071780800819, -0.47866782546043396, -0.0008401916129514575, -0.0023485240526497364, -5.8412379075889476e-06, -2.3603161025675945e-05, 0.0, -3.933898824470816e-06, -4.768360213347478e-06, -0.0004959068610332906, -0.037162888795137405, -0.0006591292913071811, -0.0009141556802205741, -0.18155637383460999, -0.0007214327342808247, -1.4781842764932662e-05, -1.680836794548668e-05, -0.018305176869034767, -0.023895954713225365], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.01957889087498188, -0.004824189003556967, -0.0017285895301029086, -2.4437606043647975e-05, -7.760223525110632e-05, -0.000271879427600652, -0.3062323033809662, -0.013216509483754635], "finish_reason": "stop"}, {"text": "plot(recall, precision, linewidth=2)", "tokens": ["plot", "(", "re", "call", ",", " precision", ",", " linewidth", "=", "2", ")", "\n"], "logprobs": [-0.19489048421382904, -0.003196846228092909, -0.0032936870120465755, -1.4305104514278355e-06, -0.00045277358731254935, -0.0003175231395289302, -2.408519983291626, -0.736825704574585, -0.001313062384724617, -0.15673387050628662, -0.1712845116853714, -0.0681765079498291], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.1925884634256363, -0.06334494799375534, -0.12209313362836838, -0.05662703141570091, -0.0006171943969093263, -5.006777428206988e-06, -0.035955436527729034, -0.036627382040023804], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-5.6622808187967166e-05, -5.722029527532868e-06, -0.0004576589271891862, -0.00016139635408762842, -0.00012706902634818107, -9.298280929215252e-06, -0.00024148885859176517, -0.0009031984372995794], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008606248535215855, -0.00020358874462544918, -0.0027304531540721655, -0.020127926021814346, -0.0022351776715368032, -2.8729025871143676e-05, -0.0005181877058930695, -5.9960475482512265e-05, -2.264974000354414e-06, -0.005742362700402737, -6.6756979322235566e-06, -0.010693510062992573, -0.06359164416790009], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.07615753263235092, -0.06155531108379364, -0.104079470038414], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "\n"], "logprobs": [-0.015010031871497631, -0.003031541593372822, -0.0068284254521131516, -0.2523493468761444, -4.9828242481453344e-05, -0.262965589761734, -0.0025925380177795887, -0.032510340213775635, -0.012129122391343117, -0.006075011566281319, -0.2851179242134094, -0.00023338454775512218, -0.00464135454967618, -0.8484487533569336], "finish_reason": "stop"}], "metrics": {"energy": 1050.9116797313686, "energy_per_token": 4.98062407455625, "time": 27.72639, "time_per_token": 0.13140469194312795}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.7)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " train", "_", "size", "=", "0", ".", "7", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -2.0759425163269043, -1.2636104656849056e-05, -2.145764938177308e-06, -0.04498966783285141, -0.02778526581823826, -1.4066597032069694e-05, -0.005284033250063658, -1.3086433410644531, -0.023601200431585312], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " Sequential()", "tokens": [" Sequ", "ential", "()", "\n"], "logprobs": [-2.5436348915100098, -1.1801649634435307e-05, -0.06646288186311722, -0.08547873795032501], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005417786305770278, -0.025902673602104187, -0.15384528040885925, -0.1649484932422638, -0.0006425699684768915, -1.9430925021879375e-05, -3.814624506048858e-05, -1.9550132492440753e-05, -0.0003843760641757399, -7.414542778860778e-05, -0.016254285350441933, -0.15189290046691895, -0.03298104554414749, -9.417489309271332e-06, -0.5010101199150085, -0.03559335321187973], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1000, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0006089740199968219, -0.00011717586312443018, -0.013569261878728867, -0.01143744308501482, -7.557583012385294e-05, -0.0008306628442369401, -0.008239444345235825, -0.00014029949670657516, -1.07287787614041e-05, -0.013786685653030872, -0.27798348665237427, -0.0020070187747478485, -0.34095287322998047, -0.09503793716430664, -0.22291827201843262, -0.9426196217536926, -0.08304143697023392, -0.06974591314792633, -0.0027852572966367006, -0.2837606370449066, -0.009759804233908653, -0.37512946128845215], "finish_reason": "stop"}, {"text": " model.predict(X_test).flatten()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "fl", "atten", "()", "\n"], "logprobs": [-0.13022713363170624, -0.15120486915111542, -0.00042358008795417845, -0.10076289623975754, -0.0008577005355618894, -0.006734413094818592, -0.0003225283289793879, -0.021084805950522423, -0.8655943870544434, -1.2819008827209473, -1.7046782886609435e-05, -8.427741704508662e-05, -0.17222212255001068], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00024673278676345944, -0.0005870526074431837, -1.2967125177383423, -0.0008356655016541481, -0.0027612438425421715, -3.099436753473128e-06, -4.303362584323622e-05, -1.1920928244535389e-07, -3.4570634852570947e-06, -1.1920922133867862e-06, -0.00042632073746062815, -0.029777493327856064, -0.0006733057671226561, -0.0011709030950441957, -0.13514263927936554, -0.0008625839254818857, -3.421248038648628e-05, -1.728519782773219e-05, -0.030357619747519493, -0.013103799894452095], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.01999332569539547, -0.004454570822417736, -0.0018588898237794638, -2.1219027985353023e-05, -7.438383181579411e-05, -0.0002580548170953989, -0.30901530385017395, -0.010917101986706257], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.21787580847740173, -0.005323994439095259, -0.0028840398881584406, -1.7881377516459906e-06, -0.0003457663697190583, -0.00032443503732793033, -0.11240939795970917, -0.03221719339489937], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.14736133813858032, -0.05312221124768257, -0.16255402565002441, -0.05558958277106285, -0.00046957432641647756, -4.172316494077677e-06, -0.03130892291665077, -0.037615105509757996], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-4.8397800128441304e-05, -5.722029527532868e-06, -0.0007706294418312609, -0.00027509720530360937, -0.00014041867689229548, -1.2874520507466514e-05, -0.0002530493075028062, -0.0010592094622552395], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006874836515635252, -0.0001821352052502334, -0.0017144280718639493, -0.021340511739253998, -0.0018127213697880507, -3.242440288886428e-05, -0.0005547653418034315, -8.153582894010469e-05, -2.9802276912960224e-06, -0.0058282907120883465, -7.510157047363464e-06, -0.012601512484252453, -0.05491446703672409], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.05945877730846405, -0.051872771233320236, -0.09237812459468842], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.016221093013882637, -0.00415034918114543, -0.007428168319165707, -2.1383514404296875], "finish_reason": "stop"}], "metrics": {"energy": 900.8161851167682, "energy_per_token": 5.39410889291478, "time": 24.594814, "time_per_token": 0.1472743353293413}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -1.4570636749267578, -0.023609932512044907], "finish_reason": "stop"}, {"text": " len(X_train[0])", "tokens": [" len", "(", "X", "_", "train", "[", "0", "])", "\n"], "logprobs": [-1.452148675918579, -0.0011970981722697616, -0.0069925119169056416, -0.9062341451644897, -0.027286820113658905, -0.04711820185184479, -0.006476602982729673, -0.015699362382292747, -0.022447656840085983], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0831821858882904, -6.997340824455023e-05, -2.8609820219571702e-05, -1.1205692291259766, -1.1920928244535389e-07, 0.0, -0.880248486995697, -0.05730200558900833], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005548844928853214, -0.03444090113043785, -0.1672227829694748, -0.20773190259933472, -0.000538680877070874, -1.6212332411669195e-05, -5.531158240046352e-05, -4.3748852476710454e-05, -0.0004343043256085366, -6.83045873302035e-05, -0.01130791287869215, -0.1914694756269455, -0.020149540156126022, -8.4638240878121e-06, -0.5480966567993164, -0.032366663217544556], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=False)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "False", ")", "\n"], "logprobs": [-0.0010055014863610268, -0.00010930894495686516, -0.014468635432422161, -0.011207837611436844, -7.545663538621739e-05, -0.0008815216715447605, -0.007008255925029516, -0.00017951308109331876, -1.3589766240329482e-05, -0.012607398442924023, -1.4985370635986328, -0.0014986485475674272, -2.170999765396118, -0.03365775942802429, -0.1553008258342743], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "\n"], "logprobs": [-0.11250633746385574, -0.14036639034748077, -0.00038985759601928294, -0.12339974194765091, -0.0006304183625616133, -0.008203738369047642, -0.00032908268622122705, -0.02827848121523857, -0.7933068871498108, -0.7859790921211243, -5.006664650863968e-05, -0.24562565982341766], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0002169373765354976, -0.0006195771275088191, -0.45990127325057983, -0.0008521024719811976, -0.0022631289903074503, -5.364403477869928e-06, -2.658331868587993e-05, 0.0, -3.814689989667386e-06, -3.6954811548639555e-06, -0.00040260792593471706, -0.04271770268678665, -0.0007322729215957224, -0.0007339406292885542, -0.21772365272045135, -0.0008269704412668943, -1.4781842764932662e-05, -1.3589766240329482e-05, -0.018882520496845245, -0.02115366980433464], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.022855428978800774, -0.0039051712956279516, -0.0013611585600301623, -2.455681169521995e-05, -7.843663479434326e-05, -0.0002811751910485327, -0.35322821140289307, -0.013290269300341606], "finish_reason": "stop"}, {"text": "step(recall, precision, color='b', where='post', label='Precision-Recall curve')", "tokens": ["step", "(", "re", "call", ",", " precision", ",", " color", "='", "b", "'", ",", " where", "='", "post", "'", ",", " label", "='", "Prec", "ision", "-", "Rec", "all", " curve", "')", "\n"], "logprobs": [-2.728355884552002, -0.00014256415306590497, -0.011934425681829453, -1.4305104514278355e-06, -0.00048196621355600655, -0.0006272017490118742, -0.020383642986416817, -0.6453611850738525, -0.03956391662359238, -0.18762128055095673, -0.004870455712080002, -1.549708758830093e-05, -1.0502758026123047, -0.0005553610390052199, -0.0015281677478924394, -1.3086488246917725, -6.01988795096986e-05, -0.24405021965503693, -0.13634712994098663, -0.13447758555412292, -0.0004637358069885522, -1.0583229064941406, -0.0010848119854927063, -6.198863957251888e-06, -1.0313928127288818, -0.008636031299829483, -0.01732981763780117], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.18190358579158783, -0.05827616527676582, -0.14668160676956177, -0.045424576848745346, -0.0004602803383022547, -4.410734163684538e-06, -0.031686536967754364, -0.035844799131155014], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-3.540453326422721e-05, -6.556489552167477e-06, -0.0005220004240982234, -0.00019393471302464604, -0.00013136000779923052, -9.775113539944869e-06, -0.000454799213912338, -0.0008734225411899388], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008123925887048244, -0.0001720042055239901, -0.0019757291302084923, -0.018713003024458885, -0.0020843464881181717, -3.075552376685664e-05, -0.0005529781919904053, -6.770858453819528e-05, -3.3378546504536644e-06, -0.005665909964591265, -6.079655122448457e-06, -0.00972438883036375, -0.0524025522172451], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.0620541125535965, -0.058611467480659485, -0.10978028923273087], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.01627574861049652, -0.0032025498803704977, -0.0073394193314015865, -1.9551984071731567], "finish_reason": "stop"}], "metrics": {"energy": 992.4403538761134, "energy_per_token": 5.452968977341282, "time": 26.702501, "time_per_token": 0.14671703846153847}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=0)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -2.1407124996185303, -0.060246895998716354, -0.021802272647619247], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -1.6277048587799072, -0.08179732412099838], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd', metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0006039702566340566, -0.04098261892795563, -0.20781828463077545, -0.2058044970035553, -0.0005603650351986289, -1.5735502529423684e-05, -3.909988299710676e-05, -3.0636318115284666e-05, -0.0004711233195848763, -5.376194530981593e-05, -0.011650735512375832, -0.15435713529586792, -0.022460944950580597, -9.179073458653875e-06, -0.7689781188964844, -0.0003067976504098624, -0.004676595330238342, -0.07479210197925568, -0.04316764697432518, -0.010277326218783855, -0.01650911755859852], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007320346776396036, -0.00011205045302631333, -0.013290622271597385, -0.011206894181668758, -5.61460001335945e-05, -0.0009802542626857758, -0.008020575158298016, -0.00014351768186315894, -1.3589766240329482e-05, -0.01203030627220869, -1.708527684211731, -0.001520430902019143, -0.16552338004112244, -0.040520474314689636, -0.35167497396469116], "finish_reason": "stop"}, {"text": " model.predict(X_test).flatten()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "fl", "atten", "()", "\n"], "logprobs": [-0.12264542281627655, -0.17069615423679352, -0.0004189328756183386, -0.10743208229541779, -0.0007032066932879388, -0.007547434885054827, -0.00042274597217328846, -0.021996457129716873, -0.7906290888786316, -1.4690375328063965, -1.6569954823353328e-05, -9.929640509653836e-05, -0.15646009147167206], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00027616979787126184, -0.0006073060794733465, -0.522254228591919, -0.0008632985409349203, -0.002415598137304187, -4.0531076592742465e-06, -2.586808113846928e-05, -1.1920928244535389e-07, -3.3378546504536644e-06, -2.622600959512056e-06, -0.0003843760641757399, -0.03975662961602211, -0.0005527398898266256, -0.0008141063735820353, -0.23578795790672302, -0.0006413786904886365, -1.7404405298293568e-05, -1.0013530300057027e-05, -0.0206841342151165, -0.02405819483101368], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(9, 6))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "9", ",", " ", "6", "))", "\n"], "logprobs": [-0.019806114956736565, -0.004400332923978567, -0.0017408467829227448, -3.1470757676288486e-05, -7.891343557275832e-05, -0.0002636561985127628, -1.3101675510406494, -0.3228042721748352, -1.9311717551317997e-05, -0.009068019688129425, -2.945014715194702, -0.07851918786764145, -0.13055475056171417, -1.027499794960022, -0.05072545260190964, -0.0312575101852417], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.19797655940055847, -0.0068242815323174, -0.0027713484596461058, -2.3841830625315197e-06, -0.00040415700641460717, -0.0002693767019081861, -0.11943153291940689, -0.039569877088069916], "finish_reason": "stop"}, {"text": "plot([0, 1], [1, 1], linestyle='--', label='Random')  # Line indicates random prediction", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "1", ",", " ", "1", "]", ",", " lin", "estyle", "='", "--", "'", ",", " label", "='", "Random", "')", "  ", "#", " Line", " indicates", " random", " prediction", "\n"], "logprobs": [-2.0290396213531494, -0.11455600708723068, -0.00850932952016592, -0.005574158858507872, -0.0029437087941914797, -0.0004602803383022547, -0.0041605583392083645, -2.0146166207268834e-05, -0.030195241793990135, -0.842559814453125, -0.0025643580593168736, -0.0005523824947886169, -0.09042664617300034, -0.002387532265856862, -6.210611172718927e-05, -1.6359848976135254, 0.0, -0.02233411930501461, -0.0856204628944397, -0.10323012620210648, -1.2993727978027891e-05, -0.2103385627269745, -0.002193784574046731, -0.44369232654571533, -0.6960816383361816, -1.895963430404663, -0.00019631843315437436, -3.1140224933624268, -3.326810598373413, -0.19194835424423218, -1.452384352684021, -0.10424414277076721], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-6.05564855504781e-05, -5.960446742392378e-06, -0.0005824061809107661, -0.00024625606602057815, -0.00013600854435935616, -1.1801649634435307e-05, -0.00044204952428117394, -0.0009656057227402925], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006423066835850477, -0.00018416139937471598, -0.0017578639090061188, -0.02173648588359356, -0.002139067044481635, -3.135155202471651e-05, -0.0004245333548169583, -7.426462980220094e-05, -3.099436753473128e-06, -0.005197584163397551, -7.510157047363464e-06, -0.008856302127242088, -0.06980672478675842], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.08985844999551773, -0.05000361427664757, -0.10078272968530655], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.015486462973058224, -0.0029989767353981733, -0.007389119826257229, -1.9388257265090942], "finish_reason": "stop"}], "metrics": {"energy": 1059.7999969730374, "energy_per_token": 5.070813382646112, "time": 27.543518, "time_per_token": 0.13178716746411484}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.7, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " train", "_", "size", "=", "0", ".", "7", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -2.0759425163269043, -1.2636104656849056e-05, -2.145764938177308e-06, -0.04498966783285141, -0.02778526581823826, -1.4066597032069694e-05, -0.005284033250063658, -0.3526802659034729, -1.1349154710769653, -7.271740287251305e-06, -5.602820692729438e-06, -0.001479484373703599, -0.001759410952217877, -1.8596476365928538e-05, -0.0011812621960416436, -0.8394377827644348, -0.4802943170070648, -3.814689989667386e-06, -2.50339189733495e-06, -0.008507084101438522, -0.7672188878059387, -0.058314401656389236, -0.0387539304792881, -0.013561500236392021], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential(", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "(", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -2.7980082035064697, -0.06452460587024689], "finish_reason": "stop"}, {"text": "compile(loss=\"binary_crossentropy\", optimizer=\"sgd\")", "tokens": ["compile", "(", "loss", "=", "\"", "binary", "_", "cross", "entropy", "\"", ",", " optimizer", "=", "\"", "sg", "d", "\"", ")", "\n"], "logprobs": [-0.0006767605082131922, -0.039814941585063934, -0.15005242824554443, -1.8275749683380127, -2.6097893714904785, -0.0020626953337341547, -2.9444261599564925e-05, -8.570780482841656e-05, -0.00012706902634818107, -3.4689302992774174e-05, -0.0004576589271891862, -0.019948219880461693, -0.1706286072731018, -0.2672436535358429, -0.06256363540887833, -9.298280929215252e-06, -2.50339189733495e-06, -0.12745070457458496, -0.028178002685308456], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007232195930555463, -9.333651541965082e-05, -0.01498513575643301, -0.010023260489106178, -6.55629628454335e-05, -0.0008860476082190871, -0.0068627605214715, -0.00016115797916427255, -1.3708974620385561e-05, -0.011972119100391865, -0.2625388205051422, -0.0019803689792752266, -0.3786642253398895, -0.09308936446905136, -1.7777782678604126, -0.08428685367107391, -0.0017746428493410349, -0.06889959424734116, -0.00858568400144577, -0.3803514540195465], "finish_reason": "stop"}, {"text": " model.predict(X_test).flatten()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "fl", "atten", "()", "\n"], "logprobs": [-0.09830988198518753, -0.19774259626865387, -0.000514017534442246, -0.1197182834148407, -0.0007177399238571525, -0.009503954090178013, -0.00034648136352188885, -0.02145334519445896, -0.8557440638542175, -1.2457516193389893, -1.2993727978027891e-05, -7.366862701019272e-05, -0.1854594200849533], "finish_reason": "stop"}, {"text": " recall, thresholds = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " thresholds", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.000198821333469823, -0.0005701346672140062, -0.9325530529022217, -0.001050516264513135, -0.0029906569980084896, -3.814689989667386e-06, -3.528532761265524e-05, -1.1920928244535389e-07, -4.291525328881107e-06, -1.5497195136049413e-06, -0.00043561504571698606, -0.043567512184381485, -0.0006865289760753512, -0.0007313199457712471, -0.15351131558418274, -0.0007513322634622455, -3.2305197237292305e-05, -1.597391747054644e-05, -0.03934217244386673, -0.013784334063529968], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.017864281311631203, -0.0044701178558170795, -0.0018560340395197272, -2.3364747903542593e-05, -6.842378934379667e-05, -0.0002711643755901605, -0.34395545721054077, -0.013530452735722065], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.24891254305839539, -0.006134727504104376, -0.003336816793307662, -2.264974000354414e-06, -0.000288087350782007, -0.0003530356043484062, -0.09000096470117569, -0.037077657878398895], "finish_reason": "stop"}, {"text": "set_xlim([0.0, 1.01])", "tokens": ["set", "_", "x", "lim", "([", "0", ".", "0", ",", " ", "1", ".", "0", "1", "])", "\n"], "logprobs": [-0.17793971300125122, -0.0648631826043129, -1.9216558933258057, -0.018996920436620712, -0.01617358811199665, -0.061260126531124115, -0.03844287618994713, -0.0035815397277474403, -0.0028077249880880117, -2.455681169521995e-05, -0.00011920218821614981, -0.005222606472671032, -0.002454365836456418, -0.0429343618452549, -0.000685576000250876, -0.012171754613518715], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-4.637133679352701e-05, -8.106198947643861e-06, -0.0005586970364674926, -0.00022456508304458112, -0.0001510267611593008, -1.3112935448589269e-05, -0.0001851148990681395, -0.0009756095823831856], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.010264582931995392, -0.00018416139937471598, -0.002441760618239641, -0.020110052078962326, -0.002136925933882594, -3.3854863431770355e-05, -0.0005504761938937008, -6.460934673668817e-05, -2.145764938177308e-06, -0.004398433957248926, -7.867782187531702e-06, -0.008437107317149639, -0.0555928535759449], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.07903460413217545, -0.05492597445845604, -0.09171990305185318], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object<|endoftext|>import numpy as np", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "<", "|", "end", "of", "text", "|>", "import", " numpy", " as", " np", "\n"], "logprobs": [-0.016615934669971466, -0.003233563620597124, -0.007520932704210281, -0.24930328130722046, -6.365573790390044e-05, -0.27466657757759094, -0.0026090650353580713, -0.023250920698046684, -0.015836656093597412, -0.007854883559048176, -0.22365963459014893, -0.00018666432879399508, -0.005273716524243355, -0.852509081363678, -2.7418097943154862e-06, -2.264974000354414e-06, -2.1815061700181104e-05, -8.868777513271198e-05, -0.16978266835212708, -0.9256429672241211, -0.9513447880744934, -0.014562745578587055, -0.0031843690667301416, -0.007806506939232349], "finish_reason": "stop"}], "metrics": {"energy": 1072.991506900788, "energy_per_token": 4.944661322123447, "time": 27.964466, "time_per_token": 0.1288685069124424}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.7, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " train", "_", "size", "=", "0", ".", "7", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -2.0759425163269043, -1.2636104656849056e-05, -2.145764938177308e-06, -0.04498966783285141, -0.02778526581823826, -1.4066597032069694e-05, -0.005284033250063658, -0.3526802659034729, -0.6877871751785278, -4.0531076592742465e-06, -4.529942543740617e-06, -0.009760985150933266, -0.7219923138618469, -0.05521310865879059, -0.05501466244459152, -0.025263700634241104], "finish_reason": "stop"}, {"text": " len(X[0])", "tokens": [" len", "(", "X", "[", "0", "])", "\n"], "logprobs": [-1.452148675918579, -0.0011970981722697616, -0.0069925119169056416, -0.5833848714828491, -0.0027731317095458508, -0.02637115865945816, -0.024520214647054672], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.0831821858882904, -6.997340824455023e-05, -2.8609820219571702e-05, -0.3951778709888458, -1.9430925021879375e-05, -1.9311717551317997e-05, 0.0, -2.3841855067985307e-07, -1.7406541109085083, -0.08993799239397049], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0007413261337205768, -0.03526393696665764, -0.1374274641275406, -0.18502280116081238, -0.0006238659843802452, -1.7762025890988298e-05, -3.313963316031732e-05, -3.2305197237292305e-05, -0.0004987664869986475, -5.8887653722194955e-05, -0.01267319917678833, -0.17146459221839905, -0.021892545744776726, -1.0251946150674485e-05, -0.43574920296669006, -0.02876056358218193], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007427555974572897, -0.00011264643399044871, -0.013520337641239166, -0.011388885788619518, -7.295342220459133e-05, -0.0008696111617609859, -0.007760967127978802, -0.00019488819816615433, -1.1801649634435307e-05, -0.015504304319620132, -1.5243457555770874, -0.0014912686310708523, -0.13610568642616272, -0.040773775428533554, -0.33540335297584534], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.10181839764118195, -0.1416710764169693, -0.0003599472693167627, -0.11516123265028, -0.0007663412252441049, -0.0094601446762681, -0.0004029654082842171, -0.02662098966538906, -0.6969863176345825], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0002637753786984831, -0.0006637753685936332, -0.4247710406780243, -0.0009311868925578892, -0.003231187118217349, -4.768360213347478e-06, -3.135155202471651e-05, -1.1920928244535389e-07, -3.2186455882765586e-06, -1.9073468138230965e-06, -0.00038699767901562154, -0.04725136235356331, -0.0006168370018713176, -0.0007215518853627145, -0.21385890245437622, -0.0007927850820124149, -1.7046782886609435e-05, -1.0013530300057027e-05, -0.021830964833498, -0.027957890182733536], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.01903505064547062, -0.005032609682530165, -0.0018560340395197272, -2.825220326485578e-05, -7.855583680793643e-05, -0.00035386974923312664, -0.3540172576904297, -0.010611536912620068], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-2.079477548599243, -0.02008703351020813, -0.7100804448127747, -0.20700061321258545, -0.005705974064767361, -7.378782902378589e-05, -0.0053314645774662495, -0.00012110930401831865, -1.9073468138230965e-06, -0.012916471809148788, -8.153582894010469e-05, -0.018379617482423782, -0.08629802614450455], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.14091002941131592, -0.06225810945034027, -0.12419749796390533, -0.05414064973592758, -0.0005302215577103198, -4.6491513785440475e-06, -0.02903585322201252, -0.031647153198719025], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-7.557583012385294e-05, -8.702239938429557e-06, -0.0008646087371744215, -0.00018094333063345402, -0.0001225396408699453, -1.1324817933200393e-05, -0.0003594706067815423, -0.0010706413304433227], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.008532969281077385, -0.00024470672360621393, -0.0024077491834759712, -0.017400581389665604, -0.0020542489364743233, -2.932505594799295e-05, -0.0004732680681627244, -5.876845170860179e-05, -2.861018856492592e-06, -0.005073529668152332, -6.318072337307967e-06, -0.010145168751478195, -0.05467374995350838], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.06173497810959816, -0.05589546263217926, -0.11405358463525772], "finish_reason": "stop"}, {"text": " model, ax  # Return the Axes object instead of plt.plot()", "tokens": [" model", ",", " ax", "  ", "#", " Return", " the", " Ax", "es", " object", " instead", " of", " plt", ".", "plot", "()", "\n"], "logprobs": [-0.017640715464949608, -0.003930938430130482, -0.007405922748148441, -0.21730877459049225, -5.447716102935374e-05, -1.401171088218689, -0.6529400944709778, -0.37206873297691345, -0.00021634146105498075, -0.004390244372189045, -2.109240770339966, -0.05787594988942146, -2.2852225303649902, -0.8276196718215942, -2.6468632221221924, -1.0691171884536743, -0.5818076133728027], "finish_reason": "stop"}], "metrics": {"energy": 972.3370394096372, "energy_per_token": 5.255875888700742, "time": 25.424402, "time_per_token": 0.1374292}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.7, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " train", "_", "size", "=", "0", ".", "7", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -2.0759425163269043, -1.2636104656849056e-05, -2.145764938177308e-06, -0.04498966783285141, -0.02778526581823826, -1.4066597032069694e-05, -0.005284033250063658, -0.3526802659034729, -1.1349154710769653, -7.271740287251305e-06, -5.602820692729438e-06, -0.001479484373703599, -0.001759410952217877, -1.8596476365928538e-05, -0.0011812621960416436, -0.5984137654304504, -0.02124190144240856], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -0.34372663497924805, -1.823885577323381e-05, -1.3708974620385561e-05, 0.0, -2.3841855067985307e-07, -0.29880163073539734, -0.07811398804187775], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd', metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0006767605082131922, -0.039814941585063934, -0.15005242824554443, -0.1780387908220291, -0.0007210753974504769, -1.7404405298293568e-05, -4.2437604861333966e-05, -2.2649508537142538e-05, -0.0005298641044646502, -4.458328112377785e-05, -0.013318972662091255, -0.1689147651195526, -0.019089436158537865, -9.417489309271332e-06, -0.9081979990005493, -0.00045003299601376057, -0.004748733714222908, -0.06380695849657059, -0.04222973436117172, -0.011553757824003696, -0.013393665663897991], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007849234389141202, -0.00011729506513802335, -0.015671197324991226, -0.011897084303200245, -7.676783570786938e-05, -0.0008939084364101291, -0.007874871604144573, -0.00018845213344320655, -1.07287787614041e-05, -0.015132272616028786, -0.29879987239837646, -0.0019537187181413174, -0.364462673664093, -0.10778405517339706, -1.563948631286621, -0.08009215444326401, -0.0019279003608971834, -0.07364089787006378, -0.008032281883060932, -0.3785057067871094], "finish_reason": "stop"}, {"text": " model.predict(X_test).round()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "round", "()", "\n"], "logprobs": [-0.10176369547843933, -0.14264076948165894, -0.0005942009738646448, -0.10580646246671677, -0.0007572882459498942, -0.008432733826339245, -0.00039402826223522425, -0.020840942859649658, -0.7241625785827637, -2.6403157711029053, -0.008947870694100857, -0.3640234172344208], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0002493547508493066, -0.0007898071780800819, -0.47866782546043396, -0.0008401916129514575, -0.0023485240526497364, -5.8412379075889476e-06, -2.3603161025675945e-05, 0.0, -3.933898824470816e-06, -4.768360213347478e-06, -0.0004959068610332906, -0.037162888795137405, -0.0006591292913071811, -0.0009141556802205741, -0.18155637383460999, -0.0007214327342808247, -1.4781842764932662e-05, -1.680836794548668e-05, -0.018305176869034767, -0.023895954713225365], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.01957889087498188, -0.004824189003556967, -0.0017285895301029086, -2.4437606043647975e-05, -7.760223525110632e-05, -0.000271879427600652, -0.3062323033809662, -0.013216509483754635], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.19489048421382904, -0.003196846228092909, -0.0032936870120465755, -1.4305104514278355e-06, -0.00045277358731254935, -0.0003175231395289302, -0.094623863697052, -0.029266495257616043], "finish_reason": "stop"}, {"text": "plot([0, 1], [0, 1], linestyle='--', label='Chance level')", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " lin", "estyle", "='", "--", "'", ",", " label", "='", "Ch", "ance", " level", "')", "\n"], "logprobs": [-2.1591989994049072, -0.16563864052295685, -0.009140904992818832, -0.005132356658577919, -0.0032390295527875423, -0.0005233110277913511, -0.0038165838923305273, -1.3470558769768104e-05, -0.02440388686954975, -0.7383951544761658, -0.024569185450673103, -0.0008283997885882854, -0.0012698451755568385, -0.0014513921923935413, -1.1086402082582936e-05, -0.9374515414237976, -1.1920928244535389e-07, -0.019672522321343422, -0.1699117124080658, -0.1658998280763626, -5.23315102327615e-05, -0.31088000535964966, -0.0025782696902751923, -1.7397778034210205, -0.0008198237628675997, -0.34359636902809143, -1.480660080909729, -0.030622990801930428], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-5.972207145532593e-05, -5.125986263010418e-06, -0.0006202919175848365, -0.00017998983094003052, -0.00014280252798926085, -9.894321920000948e-06, -0.0003197873884346336, -0.001073022955097258], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.006986355874687433, -0.00020930961181875318, -0.0020769708789885044, -0.017469581216573715, -0.002512395614758134, -2.8490614567999728e-05, -0.0005287918029353023, -7.128461584215984e-05, -3.6954811548639555e-06, -0.004994297865778208, -6.318072337307967e-06, -0.011275970377027988, -0.061629850417375565], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.09549420326948166, -0.04520925134420395, -0.07662183046340942], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object<|endoftext|>def task_func(n):", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "n", "):", "\n"], "logprobs": [-0.022905994206666946, -0.003181635867804289, -0.0073417858220636845, -0.25512242317199707, -5.1973900554003194e-05, -0.24090301990509033, -0.0032410495914518833, -0.02736523374915123, -0.015537286177277565, -0.007049213629215956, -0.2446960210800171, -0.00023588736075907946, -0.004324964247643948, -1.0053420066833496, -2.9802276912960224e-06, -2.0265558760002023e-06, -2.396077979938127e-05, -0.00010334911348763853, -0.20891797542572021, -1.764204502105713, -0.5828238725662231, -0.06407500058412552, -0.1720026284456253, -0.11023276299238205, -2.5608768463134766, -0.5612096190452576, -0.006519358605146408], "finish_reason": "stop"}], "metrics": {"energy": 1100.9821109180446, "energy_per_token": 4.871602260699312, "time": 29.011915, "time_per_token": 0.1283713053097345}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.7)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " train", "_", "size", "=", "0", ".", "7", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -2.0759425163269043, -1.2636104656849056e-05, -2.145764938177308e-06, -0.04498966783285141, -0.02778526581823826, -1.4066597032069694e-05, -0.005284033250063658, -1.3086433410644531, -0.023601200431585312], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -1.2362818717956543, -1.1920928244535389e-07, 0.0, -0.8236678242683411, -0.05954796075820923], "finish_reason": "stop"}, {"text": "compile(optimizer=keras.optimizers.SGD(lr=1e-4), loss='binary_crossentropy', metrics=['accuracy'])", "tokens": ["compile", "(", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "1", "e", "-", "4", ")", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0005447572330012918, -0.04295172169804573, -1.855103611946106, -0.00010430268594063818, -1.563863754272461, -0.11140075325965881, -0.0001817776501411572, -0.00012885693286079913, -3.4450891689630225e-05, -1.0490362910786644e-05, -0.017863696441054344, -0.00010406429646536708, -2.6334526538848877, -2.3408360481262207, -0.0013019903562963009, -2.0633721351623535, -0.4280060827732086, -0.000987756997346878, -2.1039481163024902, -0.09474021941423416, -0.0003381395654287189, -0.01333991065621376, -0.4792220890522003, -0.003526779357343912, -6.496695277746767e-05, -4.7801782784517854e-05, -2.1576648578047752e-05, -0.5011534094810486, -0.00031406714697368443, -0.02340930700302124, -0.08256188780069351, -0.11357048153877258, -0.007860087789595127, -0.01227126270532608], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0006742588011547923, -9.917721035890281e-05, -0.01512029580771923, -0.011699868366122246, -7.64102369430475e-05, -0.0009631047723814845, -0.007936608977615833, -0.00014590153296012431, -1.0609570381348021e-05, -0.012956011109054089, -1.5418225526809692, -0.0018076046835631132, -0.154343843460083, -0.03666461259126663, -0.3166273236274719], "finish_reason": "stop"}, {"text": " model.predict_proba(X_test)", "tokens": [" model", ".", "predict", "_", "prob", "a", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.1212015151977539, -0.16889552772045135, -0.0003833036171272397, -2.19026255607605, -0.205309197306633, -0.00031025364296510816, -0.004749920219182968, -0.0029229081701487303, -0.007621969562023878, -0.0006612736615352333, -0.029355982318520546, -0.5031327605247498], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0001802282058633864, -0.0007339406292885542, -0.5272631049156189, -0.0010249129263684154, -0.002928851405158639, -4.410734163684538e-06, -2.0861407392658293e-05, 0.0, -4.529942543740617e-06, -1.6689286894688848e-06, -0.0004213160718791187, -0.03437018021941185, -0.0006403064471669495, -0.0006998711614869535, -0.220303013920784, -0.000746448349673301, -1.4185804502631072e-05, -1.156323378381785e-05, -0.01917995512485504, -0.022704413160681725], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(9, 9))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "9", ",", " ", "9", "))", "\n"], "logprobs": [-0.020394038408994675, -0.004023552872240543, -0.0014917447697371244, -2.3364747903542593e-05, -7.378782902378589e-05, -0.0003899767471011728, -1.2726573944091797, -0.25645503401756287, -2.169585604860913e-05, -0.0103662870824337, -2.740493059158325, -0.06916828453540802, -0.11536998301744461, -1.2578821182250977, -0.08037424087524414, -0.015503599308431149], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.23375938832759857, -0.006800956558436155, -0.0030004028230905533, -2.0265558760002023e-06, -0.00035089056473225355, -0.00031406714697368443, -0.10218536853790283, -0.036297500133514404], "finish_reason": "stop"}, {"text": "set_xlabel(\"Recall\")", "tokens": ["set", "_", "xlabel", "(", "\"", "Rec", "all", "\"", ")", "\n"], "logprobs": [-0.14841873943805695, -0.04441443458199501, -0.17921534180641174, -2.9082162380218506, -0.008678458631038666, -0.0022168601863086224, -7.390948667307384e-06, -0.00047565114800818264, -0.02639925666153431, -0.04372579604387283], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-4.053033626405522e-05, -6.437280717364047e-06, -0.0004855407460127026, -0.00022015532886143774, -0.00010680581908673048, -8.583032467868179e-06, -0.000256982195423916, -0.0008636558777652681], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.005968722980469465, -0.00017128908075392246, -0.0015013862866908312, -0.0192008875310421, -0.002179629635065794, -3.2066785934148356e-05, -0.0004761277523357421, -5.686121585313231e-05, -2.7418097943154862e-06, -0.005741295870393515, -6.079655122448457e-06, -0.009145984426140785, -0.05364297330379486], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.06932045519351959, -0.0467761792242527, -0.0941796749830246], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object<|endoftext|>import unittest", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "<", "|", "end", "of", "text", "|>", "import", " un", "ittest", "\n"], "logprobs": [-0.016437940299510956, -0.003803164465352893, -0.006784025114029646, -0.2971479892730713, -5.221230458118953e-05, -0.24262738227844238, -0.0030448525212705135, -0.028271295130252838, -0.01652412675321102, -0.006349627394229174, -0.30377984046936035, -0.0002727136597968638, -0.004877573344856501, -0.9069688320159912, -3.099436753473128e-06, -2.50339189733495e-06, -2.396077979938127e-05, -6.854299135738984e-05, -0.18821844458580017, -0.8657827377319336, -2.232189178466797, -0.0021942604798823595, -0.007791484706103802], "finish_reason": "stop"}], "metrics": {"energy": 1110.231073722839, "energy_per_token": 5.286814636775424, "time": 29.663868, "time_per_token": 0.14125651428571429}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -0.12170510739088058, -3.933898824470816e-06, -4.410734163684538e-06, -0.005990052595734596, -0.43862515687942505, -0.03604041785001755, -0.041098520159721375, -0.030600907281041145], "finish_reason": "stop"}, {"text": " X_train.shape[1]", "tokens": [" X", "_", "train", ".", "shape", "[", "1", "]", "\n"], "logprobs": [-0.3058932423591614, -0.16947299242019653, -0.007597361691296101, -0.03958740830421448, -0.00042989550274796784, -0.049156080931425095, -0.007125323638319969, -0.005846779327839613, -0.02853327989578247], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0888008251786232, -7.331102824537084e-05, -2.7179348762729205e-05, -1.2362818717956543, -1.1920928244535389e-07, 0.0, -0.8236678242683411, -0.05954796075820923], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.0005447572330012918, -0.04295172169804573, -0.1883288472890854, -0.1573992669582367, -0.0005776405450887978, -1.4543427823809907e-05, -3.540453326422721e-05, -1.823885577323381e-05, -0.00042882305569946766, -6.139089964563027e-05, -0.013169803656637669, -0.1568147987127304, -0.0222522784024477, -9.775113539944869e-06, -0.5881052613258362, -0.03304678946733475], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1000, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0007535954937338829, -0.00013505500101018697, -0.01570417359471321, -0.010682069696485996, -6.5205356804654e-05, -0.000943096645642072, -0.0068023777566850185, -0.00011336160969221964, -1.3708974620385561e-05, -0.01099350769072771, -0.28238943219184875, -0.002328186994418502, -0.38043212890625, -0.1156667172908783, -0.23817652463912964, -1.1182003021240234, -0.0870828703045845, -0.06682700663805008, -0.0020624573808163404, -0.22650550305843353, -0.009274967946112156, -0.4373491108417511], "finish_reason": "stop"}, {"text": " model.predict_proba(X_test).flatten()", "tokens": [" model", ".", "predict", "_", "prob", "a", "(", "X", "_", "test", ")", ".", "fl", "atten", "()", "\n"], "logprobs": [-0.10949505120515823, -0.14800553023815155, -0.00044371772673912346, -2.1195790767669678, -0.16135992109775543, -0.0002708068350329995, -0.006492473650723696, -0.003668722929432988, -0.007302023936063051, -0.0004451475979294628, -0.029608771204948425, -1.174971342086792, -0.6594275236129761, -6.675497570540756e-05, -0.0002252801787108183, -0.17788952589035034], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test.ravel(), Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00025233422638848424, -0.0005697772721759975, -0.46097004413604736, -0.0008423355757258832, -0.002415241440758109, -4.768360213347478e-06, -2.2053474822314456e-05, -1.1920928244535389e-07, -4.0531076592742465e-06, -2.145764938177308e-06, -0.00042083943844772875, -0.050431136041879654, -0.0007634824141860008, -0.00086198840290308, -1.576589822769165, -0.013013317249715328, -5.769562994828448e-05, -0.002576248487457633, -0.0009283285471610725, -1.1920858014491387e-05, -7.033323527139146e-06, -0.02342875488102436, -0.0160501841455698], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.0207819826900959, -0.0032250082585960627, -0.002158218529075384, -2.407998726994265e-05, -6.878139538457617e-05, -0.00021217002358753234, -0.332728773355484, -0.013849940150976181], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.2423100769519806, -0.0049951281398534775, -0.0025704221334308386, -1.6689286894688848e-06, -0.00031382881570607424, -0.0003992714046034962, -0.11581972241401672, -0.03741692751646042], "finish_reason": "stop"}, {"text": "set_xlabel('Recall')", "tokens": ["set", "_", "xlabel", "('", "Rec", "all", "')", "\n"], "logprobs": [-0.14781378209590912, -0.0648171454668045, -0.1616642028093338, -0.040555961430072784, -0.0006717570940963924, -6.318072337307967e-06, -0.02926371619105339, -0.052014805376529694], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-4.565611743601039e-05, -5.364403477869928e-06, -0.0005894353962503374, -0.00022289653134066612, -0.00013696208770852536, -1.2636104656849056e-05, -0.00035982808913104236, -0.001365087111480534], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.007510165683925152, -0.00016950124700088054, -0.001853535301052034, -0.022584842517971992, -0.0020102309063076973, -2.396077979938127e-05, -0.0005312938592396677, -5.721882189391181e-05, -2.264974000354414e-06, -0.005304429214447737, -7.033323527139146e-06, -0.008138706907629967, -0.06293657422065735], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.0848250463604927, -0.04794735088944435, -0.12355830520391464], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.014843614771962166, -0.003003255231305957, -0.006593614351004362, -2.026474714279175], "finish_reason": "stop"}], "metrics": {"energy": 959.3284962987906, "energy_per_token": 5.213741827710819, "time": 26.511845, "time_per_token": 0.1440861141304348}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, shuffle=False)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " shuffle", "=", "False", ")", "\n"], "logprobs": [-0.01165851205587387, -9.83428253675811e-05, -0.005381620954722166, -0.0005783553933724761, -0.2314205765724182, -0.0002131234941771254, -0.0002696150622796267, -0.001312586129643023, -0.0019785843323916197, -4.1126360883936286e-05, -0.0007238152320496738, -0.00517493300139904, -0.05057201534509659, -0.00019870213873218745, -5.340433563105762e-05, -1.4662635294371285e-05, -2.264974000354414e-06, -0.0004015354788862169, -0.18130412697792053, -0.003869784763082862, -0.012046325020492077, -0.012943302281200886, -0.15390732884407043, -4.51792984677013e-05, -7.033323527139146e-06, -0.04118375480175018, -0.015928994864225388, -2.0146166207268834e-05, -0.008876743726432323, -0.33107563853263855, -2.4837846755981445, -0.03142722323536873, -0.4801556468009949, -0.06246934458613396, -0.02775384485721588], "finish_reason": "stop"}, {"text": " len(X_train[0])", "tokens": [" len", "(", "X", "_", "train", "[", "0", "])", "\n"], "logprobs": [-1.452148675918579, -0.0011970981722697616, -0.0069925119169056416, -0.9062341451644897, -0.027286820113658905, -0.04711820185184479, -0.006476602982729673, -0.015699362382292747, -0.022447656840085983], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.0831821858882904, -6.997340824455023e-05, -2.8609820219571702e-05, -0.3951778709888458, -1.9430925021879375e-05, -1.9311717551317997e-05, 0.0, -2.3841855067985307e-07, -0.25424206256866455, -0.047616638243198395], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(lr=0.1), metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "1", ")", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0006945105269551277, -0.039385836571455, -0.17467907071113586, -0.21965034306049347, -0.0006036128615960479, -1.4185804502631072e-05, -5.030505417380482e-05, -4.9232225137529895e-05, -0.0005021026590839028, -5.4238757002167404e-05, -0.013892734423279762, -1.8881380558013916, -0.07641787081956863, -4.9828242481453344e-05, -9.095255518332124e-05, -0.00040451448876410723, -2.002696055569686e-05, -0.010125107131898403, -0.00010525626566959545, -1.5440754890441895, -2.2519617080688477, -0.0012365083675831556, -0.13747286796569824, -0.00020930961181875318, -1.2210402488708496, -1.209875226020813, -0.001177690108306706, -0.029086455702781677, -0.08225417882204056, -0.07630852609872818, -0.009979356080293655, -0.013991483487188816], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=False)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "False", ")", "\n"], "logprobs": [-0.0008398343343287706, -0.00011848701251437888, -0.01659107767045498, -0.009908066131174564, -6.747018051100895e-05, -0.000865561596583575, -0.00703832320868969, -0.000164018536452204, -1.07287787614041e-05, -0.01052413135766983, -0.27768442034721375, -0.0017901124665513635, -0.30595678091049194, -0.09516291320323944, -0.20904062688350677, -0.5218378901481628, -0.08692485839128494, -0.0017063356935977936, -2.054880380630493, -0.012749353423714638, -0.343202143907547], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.11217797547578812, -0.17033246159553528, -0.0005011494504287839, -0.1173529401421547, -0.0008071978809311986, -0.0075315809808671474, -0.00031144535751082003, -0.01889527216553688, -0.6879958510398865], "finish_reason": "stop"}, {"text": " recall, _ = precision_recall_curve(Y_test, Y_pred)", "tokens": [" recall", ",", " _", " =", " precision", "_", "re", "call", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.000192504478036426, -0.0006660388899035752, -0.6100780367851257, -0.0011735226726159453, -0.002209128811955452, -4.6491513785440475e-06, -2.3841574147809297e-05, 0.0, -3.099436753473128e-06, -1.5497195136049413e-06, -0.00031740395934320986, -0.04414768144488335, -0.0005772831500507891, -0.0009835887467488647, -0.23493753373622894, -0.0007027302053757012, -1.6093124941107817e-05, -1.07287787614041e-05, -0.01950056664645672, -0.022433670237660408], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.023288190364837646, -0.0038870032876729965, -0.0016655157087370753, -2.002696055569686e-05, -8.606540359323844e-05, -0.0003150205302517861, -0.34847569465637207, -0.010106815956532955], "finish_reason": "stop"}, {"text": "plot(recall, precision)", "tokens": ["plot", "(", "re", "call", ",", " precision", ")", "\n"], "logprobs": [-0.24461090564727783, -0.0044056735932827, -0.002566617215052247, -2.145764938177308e-06, -0.00039188333903439343, -0.000303818320389837, -0.09087174385786057, -0.037999410182237625], "finish_reason": "stop"}, {"text": "set_xlim([0.0, 1.01])", "tokens": ["set", "_", "x", "lim", "([", "0", ".", "0", ",", " ", "1", ".", "0", "1", "])", "\n"], "logprobs": [-0.14386332035064697, -0.06221318989992142, -2.2818214893341064, -0.023835891857743263, -0.010083802975714207, -0.05794041231274605, -0.035572875291109085, -0.0032728936057537794, -0.002160240663215518, -1.9073304429184645e-05, -0.00012146688823122531, -0.005096895154565573, -0.0026770727708935738, -0.039752047508955, -0.00048232366680167615, -0.011847606860101223], "finish_reason": "stop"}, {"text": "set_ylabel('Precision')", "tokens": ["set", "_", "ylabel", "('", "Prec", "ision", "')", "\n"], "logprobs": [-5.07818695041351e-05, -5.602820692729438e-06, -0.000577402301132679, -0.0002286172821186483, -0.00016926287207752466, -1.2397689715726301e-05, -0.00024172721896320581, -0.0010091932490468025], "finish_reason": "stop"}, {"text": "set_title('Precision-Recall Curve')", "tokens": ["set", "_", "title", "('", "Prec", "ision", "-", "Rec", "all", " Cur", "ve", "')", "\n"], "logprobs": [-0.005630111321806908, -0.00017915551143232733, -0.0018120075110346079, -0.01984994113445282, -0.0027033472433686256, -3.2782016205601394e-05, -0.0006200536736287177, -6.01988795096986e-05, -3.6954811548639555e-06, -0.0047488524578511715, -6.6756979322235566e-06, -0.007935899309813976, -0.053657885640859604], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.08369027078151703, -0.04480445757508278, -0.08308213949203491], "finish_reason": "stop"}, {"text": " model, ax  # Modify here to return Axes object", "tokens": [" model", ",", " ax", "  ", "#", " Mod", "ify", " here", " to", " return", " Ax", "es", " object", "\n"], "logprobs": [-0.013954336754977703, -0.0037611236330121756, -0.007407816126942635, -0.24642148613929749, -5.9960475482512265e-05, -0.24669426679611206, -0.0026343900244683027, -0.030863668769598007, -0.01892814226448536, -0.007631906773895025, -0.22447779774665833, -0.0002683041093405336, -0.005390750709921122, -0.9987763166427612], "finish_reason": "stop"}], "metrics": {"energy": 1021.6881766366964, "energy_per_token": 4.959651342896585, "time": 27.138924, "time_per_token": 0.1317423495145631}}
