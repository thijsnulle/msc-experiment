{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.500398576259613, -0.1768043041229248, -0.01964750699698925, -0.00041631137719377875, -9.775113539944869e-06, -0.07075423747301102], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {k: unicodedata.normalize('NFC', base64.b64decode(v).decode(ENCODING)) for k, v in data.items()}", "tokens": [" {", "k", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "N", "FC", "'", ",", " base", "6", "4", ".", "b", "6", "4", "decode", "(", "v", ")", ".", "decode", "(", "ENC", "OD", "ING", "))", " for", " k", ",", " v", " in", " data", ".", "items", "()}", "\n"], "logprobs": [-0.8462244272232056, -0.8887125253677368, -0.010616845451295376, -0.12680992484092712, -0.0005161621957086027, -7.152555099310121e-07, -3.576278118089249e-07, -0.00025042734341695905, -0.00041059168870560825, -8.332382276421413e-05, -0.08769261837005615, -0.001141611486673355, -8.344646857949556e-07, -6.437280717364047e-06, -7.760223525110632e-05, -0.1072382777929306, -3.933898824470816e-06, 0.0, -0.00012599628826137632, -0.09067175537347794, -0.0006873629172332585, -1.5497195136049413e-06, -6.735097849741578e-05, -0.00013445904187392443, -0.05034680292010307, -0.07909342646598816, -0.0010808822698891163, -0.0002669931564014405, -0.004605638328939676, -0.00815857108682394, -1.1920928244535389e-07, -2.145764938177308e-06, -0.025230340659618378, -0.09706006944179535, -0.004867608658969402, -0.00017188502533826977, -0.021946076303720474, -0.0002928543253801763, -0.006294426042586565, -0.000392598332837224, -9.572047565598041e-05, -0.008793912827968597, -0.0026463984977453947], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.003245921339839697, -5.960462772236497e-07, -1.811964830267243e-05, -6.556489552167477e-06, -0.6153104305267334], "finish_reason": "stop"}], "metrics": {"energy": 422.62231208419803, "energy_per_token": 5.711112325462135, "time": 12.483911, "time_per_token": 0.1687015}}
{"outputs": [{"text": " 'UTF-8'", "tokens": [" '", "UTF", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -1.6648067235946655, -0.0036828566808253527, -0.0001232548092957586, -5.5549986427649856e-05, -0.0632774755358696], "finish_reason": "stop"}, {"text": " open(json_file, 'r', encoding=ENCODING) as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "'", ",", " encoding", "=", "ENC", "OD", "ING", ")", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -1.1016064882278442, -0.00019393471302464604, -0.0059828246012330055, -0.028254492208361626, -0.0010350352386012673, 0.0, 0.0, -0.005742599721997976, -6.806619057897478e-05, -0.36525434255599976, -0.03510315716266632, -0.0035095547791570425], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.009814814664423466, -1.2993727978027891e-05, -0.018431464210152626, -1.2874520507466514e-05, -0.0001494772732257843, -0.0009706076816655695, -0.002084703417494893], "finish_reason": "stop"}, {"text": " {key: unicodedata.normalize('NFC', base64.b64decode(value).decode(ENCODING)) for key, value in data.items()}", "tokens": [" {", "key", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "N", "FC", "'", ",", " base", "6", "4", ".", "b", "6", "4", "decode", "(", "value", ")", ".", "decode", "(", "ENC", "OD", "ING", "))", " for", " key", ",", " value", " in", " data", ".", "items", "()}", "\n"], "logprobs": [-0.8542909622192383, -0.6785117387771606, -0.009188862517476082, -0.1132642924785614, -0.0010665925219655037, -1.5497195136049413e-06, -1.311301275563892e-06, -0.00019858295854646713, -0.00029976642690598965, -7.593343616463244e-05, -0.09334772080183029, -0.0014618673594668508, -1.311301275563892e-06, -5.006777428206988e-06, -8.713819261174649e-05, -0.0548236258327961, -4.0531076592742465e-06, 0.0, -0.00015376816736534238, -0.1499129831790924, -0.0005427317810244858, -1.5497195136049413e-06, -7.92710343375802e-05, -0.0001431601122021675, -0.31970158219337463, -0.14405284821987152, -0.0010345588671043515, -0.00019596086349338293, -0.0036701480858027935, -0.00969995092600584, -1.1920928244535389e-07, -2.0265558760002023e-06, -0.0158357173204422, -0.0815822184085846, -0.006305561400949955, -4.8993817472364753e-05, -0.014734730124473572, -0.0008214913541451097, -0.007899709045886993, -0.00041631137719377875, -7.60526381782256e-05, -0.008478006348013878, -0.0018992258701473475], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004771038889884949, -5.960462772236497e-07, -1.6927575416048057e-05, -5.483612312673358e-06, -0.5148886442184448], "finish_reason": "stop"}], "metrics": {"energy": 357.9790362777709, "energy_per_token": 4.419494275034208, "time": 10.086938, "time_per_token": 0.1245300987654321}}
{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -0.08482559025287628], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {", "tokens": [" {", "\n"], "logprobs": [-0.8462244272232056, -2.4091973304748535], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004587720148265362, -7.152555099310121e-07, -1.764281842042692e-05, -5.245195097813848e-06, -0.6041262149810791], "finish_reason": "stop"}], "metrics": {"energy": 188.4947935142517, "energy_per_token": 5.7119634398258095, "time": 5.690682, "time_per_token": 0.1724449090909091}}
{"outputs": [{"text": " 'utf-8'", "tokens": [" '", "utf", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -0.21233785152435303, -0.020759213715791702, -0.00045944625162519515, -3.8742269680369645e-05, -0.05927611514925957], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {k: unicodedata.normalize('NFC', base64.b64decode(v).decode(ENCODING)) for k, v in data.items()}", "tokens": [" {", "k", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "N", "FC", "'", ",", " base", "6", "4", ".", "b", "6", "4", "decode", "(", "v", ")", ".", "decode", "(", "ENC", "OD", "ING", "))", " for", " k", ",", " v", " in", " data", ".", "items", "()}", "\n"], "logprobs": [-0.8462244272232056, -0.8887125253677368, -0.010616845451295376, -0.12680992484092712, -0.0005161621957086027, -7.152555099310121e-07, -3.576278118089249e-07, -0.00025042734341695905, -0.00041059168870560825, -8.332382276421413e-05, -0.08769261837005615, -0.001141611486673355, -8.344646857949556e-07, -6.437280717364047e-06, -7.760223525110632e-05, -0.1072382777929306, -3.933898824470816e-06, 0.0, -0.00012599628826137632, -0.09067175537347794, -0.0006873629172332585, -1.5497195136049413e-06, -6.735097849741578e-05, -0.00013445904187392443, -0.05034680292010307, -0.07909342646598816, -0.0010808822698891163, -0.0002669931564014405, -0.004605638328939676, -0.00815857108682394, -1.1920928244535389e-07, -2.145764938177308e-06, -0.025230340659618378, -0.09706006944179535, -0.004867608658969402, -0.00017188502533826977, -0.021946076303720474, -0.0002928543253801763, -0.006294426042586565, -0.000392598332837224, -9.572047565598041e-05, -0.008793912827968597, -0.0026463984977453947], "finish_reason": "stop"}, {"text": " decoded_data<|endoftext|>from typing import List", "tokens": [" dec", "oded", "_", "data", "<", "|", "end", "of", "text", "|>", "from", " typing", " import", " List", "\n"], "logprobs": [-0.003245921339839697, -5.960462772236497e-07, -1.811964830267243e-05, -6.556489552167477e-06, -1.0906484127044678, -8.344646857949556e-07, -2.861018856492592e-06, -1.311301275563892e-06, -3.814689989667386e-06, -0.1542583405971527, -1.5869060754776, -0.8784708976745605, -0.0010894560255110264, -0.8069069385528564, -0.2509520947933197], "finish_reason": "stop"}], "metrics": {"energy": 289.56808056735986, "energy_per_token": 3.447239054373332, "time": 8.010525, "time_per_token": 0.09536339285714285}}
{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -0.08482559025287628], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {key: unicodedata.normalize('NFC', base64.b64decode(value).decode(ENCODING)) for key, value in data.items()}", "tokens": [" {", "key", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "N", "FC", "'", ",", " base", "6", "4", ".", "b", "6", "4", "decode", "(", "value", ")", ".", "decode", "(", "ENC", "OD", "ING", "))", " for", " key", ",", " value", " in", " data", ".", "items", "()}", "\n"], "logprobs": [-0.8462244272232056, -0.7582460641860962, -0.007143314927816391, -0.10376498848199844, -0.0008679436868987978, -1.6689286894688848e-06, -7.152555099310121e-07, -0.00027366707217879593, -0.0004247716860845685, -9.655486064730212e-05, -0.09379835426807404, -0.0011611393420025706, -9.536738616588991e-07, -4.768360213347478e-06, -7.068861305015162e-05, -0.06707261502742767, -3.933898824470816e-06, 0.0, -0.00012242044613230973, -0.10668619722127914, -0.0007049936102703214, -1.5497195136049413e-06, -9.42901024245657e-05, -0.0001299296854995191, -0.35103219747543335, -0.15632031857967377, -0.0008587724878452718, -0.00016211149340961128, -0.0048017664812505245, -0.012973426841199398, -1.1920928244535389e-07, -1.4305104514278355e-06, -0.01825929433107376, -0.07935894280672073, -0.007357879541814327, -3.6000557884108275e-05, -0.01109961699694395, -0.001049682730808854, -0.00727066257968545, -0.0003399271226953715, -0.00011062010162277147, -0.008270657621324062, -0.0020404488313943148], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004587720148265362, -7.152555099310121e-07, -1.764281842042692e-05, -5.245195097813848e-06, -0.6041262149810791], "finish_reason": "stop"}], "metrics": {"energy": 325.65517500209796, "energy_per_token": 4.400745608136459, "time": 9.263945, "time_per_token": 0.12518844594594594}}
{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -0.08482559025287628], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as file:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " file", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -1.3005380630493164, -0.009543628431856632, -0.0022518294863402843], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5910593271255493, -0.0005927712772972882], "finish_reason": "stop"}, {"text": " decoded_data<|endoftext|>import json", "tokens": [" dec", "oded", "_", "data", "<", "|", "end", "of", "text", "|>", "import", " json", "\n"], "logprobs": [-0.004629370290786028, -7.152555099310121e-07, -1.966933996300213e-05, -6.318072337307967e-06, -1.1054863929748535, -8.344646857949556e-07, -3.099436753473128e-06, -1.311301275563892e-06, -6.794906312279636e-06, -0.15004339814186096, -0.9295342564582825, -1.2907978296279907, -0.018866026774048805], "finish_reason": "stop"}], "metrics": {"energy": 207.03672691345213, "energy_per_token": 5.049676266181759, "time": 6.530804, "time_per_token": 0.15928790243902438}}
{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -0.08482559025287628], "finish_reason": "stop"}, {"text": " open(json_file, 'r', encoding=ENCODING) as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "'", ",", " encoding", "=", "ENC", "OD", "ING", ")", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -1.1016064882278442, -0.00019393471302464604, -0.0059828246012330055, -0.028254492208361626, -0.0010350352386012673, 0.0, 0.0, -0.005742599721997976, -6.806619057897478e-05, -0.36525434255599976, -0.03510315716266632, -0.0035095547791570425], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.009814814664423466, -1.2993727978027891e-05, -0.018431464210152626, -1.2874520507466514e-05, -0.0001494772732257843, -0.0009706076816655695, -0.002084703417494893], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5906991958618164, -0.0005409446312114596], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004766411613672972, -7.152555099310121e-07, -1.966933996300213e-05, -6.079655122448457e-06, -0.5771809816360474], "finish_reason": "stop"}], "metrics": {"energy": 206.7830044822693, "energy_per_token": 5.169575112056732, "time": 6.5307364, "time_per_token": 0.16326841}}
{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -0.08482559025287628], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as file:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " file", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -1.3005380630493164, -0.009543628431856632, -0.0022518294863402843], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {key: unicodedata.normalize('NFC', base64.b64decode(value).decode(ENCODING)) for key, value in data.items()}", "tokens": [" {", "key", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "N", "FC", "'", ",", " base", "6", "4", ".", "b", "6", "4", "decode", "(", "value", ")", ".", "decode", "(", "ENC", "OD", "ING", "))", " for", " key", ",", " value", " in", " data", ".", "items", "()}", "\n"], "logprobs": [-0.8462244272232056, -0.7582460641860962, -0.007143314927816391, -0.10376498848199844, -0.0008679436868987978, -1.6689286894688848e-06, -7.152555099310121e-07, -0.00027366707217879593, -0.0004247716860845685, -9.655486064730212e-05, -0.09379835426807404, -0.0011611393420025706, -9.536738616588991e-07, -4.768360213347478e-06, -7.068861305015162e-05, -0.06707261502742767, -3.933898824470816e-06, 0.0, -0.00012242044613230973, -0.10668619722127914, -0.0007049936102703214, -1.5497195136049413e-06, -9.42901024245657e-05, -0.0001299296854995191, -0.35103219747543335, -0.15632031857967377, -0.0008587724878452718, -0.00016211149340961128, -0.0048017664812505245, -0.012973426841199398, -1.1920928244535389e-07, -1.4305104514278355e-06, -0.01825929433107376, -0.07935894280672073, -0.007357879541814327, -3.6000557884108275e-05, -0.01109961699694395, -0.001049682730808854, -0.00727066257968545, -0.0003399271226953715, -0.00011062010162277147, -0.008270657621324062, -0.0020404488313943148], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004587720148265362, -7.152555099310121e-07, -1.764281842042692e-05, -5.245195097813848e-06, -0.6041262149810791], "finish_reason": "stop"}], "metrics": {"energy": 326.5899672546388, "energy_per_token": 4.4133779358734975, "time": 9.2607765, "time_per_token": 0.1251456283783784}}
{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -0.08482559025287628], "finish_reason": "stop"}, {"text": " open(json_file, 'r', encoding=ENCODING) as file:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "'", ",", " encoding", "=", "ENC", "OD", "ING", ")", " as", " file", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -1.1016064882278442, -0.00019393471302464604, -0.0059828246012330055, -0.028254492208361626, -0.0010350352386012673, 0.0, 0.0, -0.005742599721997976, -6.806619057897478e-05, -1.4745092391967773, -0.011011429131031036, -0.002240530215203762], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.009814814664423466, -1.2993727978027891e-05, -0.018431464210152626, -1.2874520507466514e-05, -0.0001494772732257843, -0.0009706076816655695, -0.002084703417494893], "finish_reason": "stop"}, {"text": " {key: unicodedata.normalize('NFC', base64.b64decode(data[key]).decode(ENCODING)) for key in data}", "tokens": [" {", "key", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "N", "FC", "'", ",", " base", "6", "4", ".", "b", "6", "4", "decode", "(", "data", "[", "key", "])", ".", "decode", "(", "ENC", "OD", "ING", "))", " for", " key", " in", " data", "}", "\n"], "logprobs": [-0.8542909622192383, -0.6785117387771606, -0.009188862517476082, -0.1132642924785614, -0.0010665925219655037, -1.5497195136049413e-06, -1.311301275563892e-06, -0.00019858295854646713, -0.00029976642690598965, -7.593343616463244e-05, -0.09334772080183029, -0.0014618673594668508, -1.311301275563892e-06, -5.006777428206988e-06, -8.713819261174649e-05, -0.0548236258327961, -4.0531076592742465e-06, 0.0, -0.00015376816736534238, -0.1499129831790924, -0.0005427317810244858, -1.5497195136049413e-06, -7.92710343375802e-05, -0.0001431601122021675, -2.279458522796631, -0.00688939867541194, -0.0003859252028632909, -0.41215023398399353, -0.00036149643710814416, -0.00017724849749356508, -0.0036950900685042143, -0.012826796621084213, 0.0, -1.5497195136049413e-06, -0.0162816122174263, -0.045947082340717316, -0.0028980658389627934, -0.0016185053391382098, -0.0034834202378988266, -0.07436679303646088, -0.0018198610050603747], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data"], "logprobs": [-0.004771038889884949, -5.960462772236497e-07, -1.6927575416048057e-05, -5.483612312673358e-06], "finish_reason": "stop"}], "metrics": {"energy": 365.85475832748415, "energy_per_token": 4.69044561958313, "time": 9.89571, "time_per_token": 0.12686807692307692}}
{"outputs": [{"text": " 'utf-8'", "tokens": [" '", "utf", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -0.21233785152435303, -0.020759213715791702, -0.00045944625162519515, -3.8742269680369645e-05, -0.05927611514925957], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {key: unicodedata.normalize('NFC', base64.b64decode(val).decode(ENCODING))", "tokens": [" {", "key", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "N", "FC", "'", ",", " base", "6", "4", ".", "b", "6", "4", "decode", "(", "val", ")", ".", "decode", "(", "ENC", "OD", "ING", "))", "\n"], "logprobs": [-0.8462244272232056, -0.7582460641860962, -0.007143314927816391, -0.10376498848199844, -0.0008679436868987978, -1.6689286894688848e-06, -7.152555099310121e-07, -0.00027366707217879593, -0.0004247716860845685, -9.655486064730212e-05, -0.09379835426807404, -0.0011611393420025706, -9.536738616588991e-07, -4.768360213347478e-06, -7.068861305015162e-05, -0.06707261502742767, -3.933898824470816e-06, 0.0, -0.00012242044613230973, -0.10668619722127914, -0.0007049936102703214, -1.5497195136049413e-06, -9.42901024245657e-05, -0.0001299296854995191, -2.4062232971191406, -0.18018895387649536, -0.0009868042543530464, -0.00018094333063345402, -0.006089822389185429, -0.013514457270503044, 0.0, -2.3841830625315197e-06, -0.02027185633778572, -2.4852049350738525], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004587720148265362, -7.152555099310121e-07, -1.764281842042692e-05, -5.245195097813848e-06, -0.6041262149810791], "finish_reason": "stop"}], "metrics": {"energy": 295.0885098609923, "energy_per_token": 4.539823228630651, "time": 8.619104, "time_per_token": 0.13260160000000001}}
{"outputs": [{"text": " 'utf-8'", "tokens": [" '", "utf", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -0.21233785152435303, -0.020759213715791702, -0.00045944625162519515, -3.8742269680369645e-05, -0.05927611514925957], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {k: unicodedata.normalize('NFC', base64.b64decode(v).decode(ENCODING)) for k, v in data.items()}", "tokens": [" {", "k", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "N", "FC", "'", ",", " base", "6", "4", ".", "b", "6", "4", "decode", "(", "v", ")", ".", "decode", "(", "ENC", "OD", "ING", "))", " for", " k", ",", " v", " in", " data", ".", "items", "()}", "\n"], "logprobs": [-0.8462244272232056, -0.8887125253677368, -0.010616845451295376, -0.12680992484092712, -0.0005161621957086027, -7.152555099310121e-07, -3.576278118089249e-07, -0.00025042734341695905, -0.00041059168870560825, -8.332382276421413e-05, -0.08769261837005615, -0.001141611486673355, -8.344646857949556e-07, -6.437280717364047e-06, -7.760223525110632e-05, -0.1072382777929306, -3.933898824470816e-06, 0.0, -0.00012599628826137632, -0.09067175537347794, -0.0006873629172332585, -1.5497195136049413e-06, -6.735097849741578e-05, -0.00013445904187392443, -0.05034680292010307, -0.07909342646598816, -0.0010808822698891163, -0.0002669931564014405, -0.004605638328939676, -0.00815857108682394, -1.1920928244535389e-07, -2.145764938177308e-06, -0.025230340659618378, -0.09706006944179535, -0.004867608658969402, -0.00017188502533826977, -0.021946076303720474, -0.0002928543253801763, -0.006294426042586565, -0.000392598332837224, -9.572047565598041e-05, -0.008793912827968597, -0.0026463984977453947], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.003245921339839697, -5.960462772236497e-07, -1.811964830267243e-05, -6.556489552167477e-06, -0.6153104305267334], "finish_reason": "stop"}], "metrics": {"energy": 285.1871474761963, "energy_per_token": 3.8538803712999496, "time": 7.156493, "time_per_token": 0.09670936486486487}}
{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -0.08482559025287628], "finish_reason": "stop"}, {"text": " open(json_file, 'r', encoding=ENCODING) as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "'", ",", " encoding", "=", "ENC", "OD", "ING", ")", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -1.1016064882278442, -0.00019393471302464604, -0.0059828246012330055, -0.028254492208361626, -0.0010350352386012673, 0.0, 0.0, -0.005742599721997976, -6.806619057897478e-05, -0.36525434255599976, -0.03510315716266632, -0.0035095547791570425], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.009814814664423466, -1.2993727978027891e-05, -0.018431464210152626, -1.2874520507466514e-05, -0.0001494772732257843, -0.0009706076816655695, -0.002084703417494893], "finish_reason": "stop"}, {"text": " {", "tokens": [" {", "\n"], "logprobs": [-0.8542909622192383, -2.312441825866699], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004771038889884949, -5.960462772236497e-07, -1.6927575416048057e-05, -5.483612312673358e-06, -0.5148886442184448], "finish_reason": "stop"}], "metrics": {"energy": 227.58702326202376, "energy_per_token": 5.689675581550594, "time": 6.5346003, "time_per_token": 0.1633650075}}
{"outputs": [{"text": " 'utf-8'", "tokens": [" '", "utf", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -0.21233785152435303, -0.020759213715791702, -0.00045944625162519515, -3.8742269680369645e-05, -0.05927611514925957], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5910593271255493, -0.0005927712772972882], "finish_reason": "stop"}, {"text": " decoded_data<|endoftext|>from typing import Any", "tokens": [" dec", "oded", "_", "data", "<", "|", "end", "of", "text", "|>", "from", " typing", " import", " Any", "\n"], "logprobs": [-0.004629370290786028, -7.152555099310121e-07, -1.966933996300213e-05, -6.318072337307967e-06, -1.1054863929748535, -8.344646857949556e-07, -3.099436753473128e-06, -1.311301275563892e-06, -6.794906312279636e-06, -0.15004339814186096, -1.6484959125518799, -1.0218708515167236, -0.0012665116228163242, -1.7206268310546875, -0.8104227185249329], "finish_reason": "stop"}], "metrics": {"energy": 234.5564988994599, "energy_per_token": 5.45480229998744, "time": 6.7391577, "time_per_token": 0.1567245976744186}}
{"outputs": [{"text": " \"UTF-8\"", "tokens": [" \"", "UTF", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -1.897002935409546, -0.0036367725115269423, -0.0001928620331455022, -8.583032467868179e-06, -0.0992773026227951], "finish_reason": "stop"}, {"text": " open(json_file, 'r', encoding=ENCODING) as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "'", ",", " encoding", "=", "ENC", "OD", "ING", ")", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -1.1016064882278442, -0.00019393471302464604, -0.0059828246012330055, -0.028254492208361626, -0.0010350352386012673, 0.0, 0.0, -0.005742599721997976, -6.806619057897478e-05, -0.36525434255599976, -0.03510315716266632, -0.0035095547791570425], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.009814814664423466, -1.2993727978027891e-05, -0.018431464210152626, -1.2874520507466514e-05, -0.0001494772732257843, -0.0009706076816655695, -0.002084703417494893], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5906991958618164, -0.0005409446312114596], "finish_reason": "stop"}, {"text": " decoded_data<|endoftext|>def task_func(string: str):", "tokens": [" dec", "oded", "_", "data", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "string", ":", " str", "):", "\n"], "logprobs": [-0.004766411613672972, -7.152555099310121e-07, -1.966933996300213e-05, -6.079655122448457e-06, -1.2375928163528442, -8.344646857949556e-07, -2.9802276912960224e-06, -1.0728830375228426e-06, -4.291525328881107e-06, -0.14302489161491394, -1.89937162399292, -0.3700307011604309, -0.02462548017501831, -0.0746481791138649, -0.04740610718727112, -2.430996894836426, -0.22032146155834198, -0.017592692747712135, -2.5198822021484375, -0.0034705903381109238], "finish_reason": "stop"}], "metrics": {"energy": 248.546274356842, "energy_per_token": 4.5190231701244, "time": 7.7910776, "time_per_token": 0.14165595636363637}}
{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -0.08482559025287628], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5910593271255493, -0.0005927712772972882], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data"], "logprobs": [-0.004629370290786028, -7.152555099310121e-07, -1.966933996300213e-05, -6.318072337307967e-06], "finish_reason": "stop"}], "metrics": {"energy": 185.60889884281158, "energy_per_token": 5.800278088837862, "time": 5.9103737, "time_per_token": 0.184699178125}}
{"outputs": [{"text": " 'utf-8'", "tokens": [" '", "utf", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -0.21233785152435303, -0.020759213715791702, -0.00045944625162519515, -3.8742269680369645e-05, -0.05927611514925957], "finish_reason": "stop"}, {"text": " open(json_file, 'r', encoding=ENCODING) as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "'", ",", " encoding", "=", "ENC", "OD", "ING", ")", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -1.1016064882278442, -0.00019393471302464604, -0.0059828246012330055, -0.028254492208361626, -0.0010350352386012673, 0.0, 0.0, -0.005742599721997976, -6.806619057897478e-05, -0.36525434255599976, -0.03510315716266632, -0.0035095547791570425], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.009814814664423466, -1.2993727978027891e-05, -0.018431464210152626, -1.2874520507466514e-05, -0.0001494772732257843, -0.0009706076816655695, -0.002084703417494893], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5906991958618164, -0.0005409446312114596], "finish_reason": "stop"}, {"text": " decoded_data<|endoftext|># This is a sample Python script.", "tokens": [" dec", "oded", "_", "data", "<", "|", "end", "of", "text", "|>", "#", " This", " is", " a", " sample", " Python", " script", ".", "\n"], "logprobs": [-0.004766411613672972, -7.152555099310121e-07, -1.966933996300213e-05, -6.079655122448457e-06, -1.2375928163528442, -8.344646857949556e-07, -2.9802276912960224e-06, -1.0728830375228426e-06, -4.291525328881107e-06, -0.14302489161491394, -1.561307430267334, -2.9801836013793945, -1.6253610849380493, -0.35562556982040405, -1.940818428993225, -0.007552759256213903, -0.0031230507884174585, -0.01541016437113285, -0.0009675112669356167], "finish_reason": "stop"}], "metrics": {"energy": 259.8846800994873, "energy_per_token": 4.812679261101617, "time": 7.7834196, "time_per_token": 0.1441374}}
{"outputs": [{"text": " 'utf-8'", "tokens": [" '", "utf", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -0.21233785152435303, -0.020759213715791702, -0.00045944625162519515, -3.8742269680369645e-05, -0.05927611514925957], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as file:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " file", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -1.3005380630493164, -0.009543628431856632, -0.0022518294863402843], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {key: unicodedata.normalize('NFC', base64.b64decode(value).decode(ENCODING)) for key, value in data.items()}", "tokens": [" {", "key", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "N", "FC", "'", ",", " base", "6", "4", ".", "b", "6", "4", "decode", "(", "value", ")", ".", "decode", "(", "ENC", "OD", "ING", "))", " for", " key", ",", " value", " in", " data", ".", "items", "()}", "\n"], "logprobs": [-0.8462244272232056, -0.7582460641860962, -0.007143314927816391, -0.10376498848199844, -0.0008679436868987978, -1.6689286894688848e-06, -7.152555099310121e-07, -0.00027366707217879593, -0.0004247716860845685, -9.655486064730212e-05, -0.09379835426807404, -0.0011611393420025706, -9.536738616588991e-07, -4.768360213347478e-06, -7.068861305015162e-05, -0.06707261502742767, -3.933898824470816e-06, 0.0, -0.00012242044613230973, -0.10668619722127914, -0.0007049936102703214, -1.5497195136049413e-06, -9.42901024245657e-05, -0.0001299296854995191, -0.35103219747543335, -0.15632031857967377, -0.0008587724878452718, -0.00016211149340961128, -0.0048017664812505245, -0.012973426841199398, -1.1920928244535389e-07, -1.4305104514278355e-06, -0.01825929433107376, -0.07935894280672073, -0.007357879541814327, -3.6000557884108275e-05, -0.01109961699694395, -0.001049682730808854, -0.00727066257968545, -0.0003399271226953715, -0.00011062010162277147, -0.008270657621324062, -0.0020404488313943148], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004587720148265362, -7.152555099310121e-07, -1.764281842042692e-05, -5.245195097813848e-06, -0.6041262149810791], "finish_reason": "stop"}], "metrics": {"energy": 323.5995991783143, "energy_per_token": 4.372967556463706, "time": 9.480677, "time_per_token": 0.12811725675675675}}
{"outputs": [{"text": " 'UTF-8'", "tokens": [" '", "UTF", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -1.6648067235946655, -0.0036828566808253527, -0.0001232548092957586, -5.5549986427649856e-05, -0.0632774755358696], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5910593271255493, -0.0005927712772972882], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data"], "logprobs": [-0.004629370290786028, -7.152555099310121e-07, -1.966933996300213e-05, -6.318072337307967e-06], "finish_reason": "stop"}], "metrics": {"energy": 183.3307318840026, "energy_per_token": 5.729085371375081, "time": 5.681687, "time_per_token": 0.17755271875}}
{"outputs": [{"text": " 'UTF-8'", "tokens": [" '", "UTF", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -1.6648067235946655, -0.0036828566808253527, -0.0001232548092957586, -5.5549986427649856e-05, -0.0632774755358696], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {", "tokens": [" {", "\n"], "logprobs": [-0.8462244272232056, -2.4091973304748535], "finish_reason": "stop"}, {"text": " decoded_data<|endoftext|>from typing import Union, Optional", "tokens": [" dec", "oded", "_", "data", "<", "|", "end", "of", "text", "|>", "from", " typing", " import", " Union", ",", " Optional", "\n"], "logprobs": [-0.004587720148265362, -7.152555099310121e-07, -1.764281842042692e-05, -5.245195097813848e-06, -1.1575090885162354, -9.536738616588991e-07, -3.3378546504536644e-06, -1.1920922133867862e-06, -3.933898824470816e-06, -0.17020246386528015, -1.6249873638153076, -0.9665138125419617, -0.0008818790083751082, -2.818039894104004, -1.0690147876739502, -1.9437105655670166, -0.5309692025184631], "finish_reason": "stop"}], "metrics": {"energy": 210.6129244174957, "energy_per_token": 4.680287209277682, "time": 6.7372026, "time_per_token": 0.14971561333333333}}
{"outputs": [{"text": " \"utf-8\"  # encoding to use for decoding", "tokens": [" \"", "utf", "-", "8", "\"", "  ", "#", " encoding", " to", " use", " for", " decoding", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -2.6852779388427734, -0.00023231192608363926, -2.807692050933838, -1.6152284145355225, -0.4715302288532257, -0.3657364547252655, -0.20560477674007416, -1.117368221282959], "finish_reason": "stop"}, {"text": " open(json_file, 'r', encoding=ENCODING) as file:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "'", ",", " encoding", "=", "ENC", "OD", "ING", ")", " as", " file", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -1.1016064882278442, -0.00019393471302464604, -0.0059828246012330055, -0.028254492208361626, -0.0010350352386012673, 0.0, 0.0, -0.005742599721997976, -6.806619057897478e-05, -1.4745092391967773, -0.011011429131031036, -0.002240530215203762], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.009814814664423466, -1.2993727978027891e-05, -0.018431464210152626, -1.2874520507466514e-05, -0.0001494772732257843, -0.0009706076816655695, -0.002084703417494893], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5906991958618164, -0.0005409446312114596], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004766411613672972, -7.152555099310121e-07, -1.966933996300213e-05, -6.079655122448457e-06, -0.5771809816360474], "finish_reason": "stop"}], "metrics": {"energy": 272.4747550659181, "energy_per_token": 5.79733521416847, "time": 7.1608634, "time_per_token": 0.15235879574468086}}
{"outputs": [{"text": " \"UTF-8\"  # Specify the encoding to be used for decoding and normalization", "tokens": [" \"", "UTF", "-", "8", "\"", "  ", "#", " Spec", "ify", " the", " encoding", " to", " be", " used", " for", " decoding", " and", " normalization", "\n"], "logprobs": [-0.5198244452476501, -1.897002935409546, -0.0036367725115269423, -0.0001928620331455022, -8.583032467868179e-06, -2.5392682552337646, -0.0003914067056030035, -2.590285301208496, -0.13219331204891205, -0.14786487817764282, -0.16397398710250854, -2.2530953884124756, -0.3906465470790863, -0.0067752632312476635, -0.5359454154968262, -0.05600773170590401, -2.4611093997955322, -0.3183688521385193, -0.06513295322656631], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5910593271255493, -0.0005927712772972882], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004629370290786028, -7.152555099310121e-07, -1.966933996300213e-05, -6.318072337307967e-06, -0.6063599586486816], "finish_reason": "stop"}], "metrics": {"energy": 241.96564329338068, "energy_per_token": 5.260122680290884, "time": 6.9420457, "time_per_token": 0.15091403695652175}}
{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -0.08482559025287628], "finish_reason": "stop"}, {"text": " open(json_file, 'r', encoding=ENCODING) as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "'", ",", " encoding", "=", "ENC", "OD", "ING", ")", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -1.1016064882278442, -0.00019393471302464604, -0.0059828246012330055, -0.028254492208361626, -0.0010350352386012673, 0.0, 0.0, -0.005742599721997976, -6.806619057897478e-05, -0.36525434255599976, -0.03510315716266632, -0.0035095547791570425], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.009814814664423466, -1.2993727978027891e-05, -0.018431464210152626, -1.2874520507466514e-05, -0.0001494772732257843, -0.0009706076816655695, -0.002084703417494893], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5906991958618164, -0.0005409446312114596], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004766411613672972, -7.152555099310121e-07, -1.966933996300213e-05, -6.079655122448457e-06, -0.5771809816360474], "finish_reason": "stop"}], "metrics": {"energy": 221.74376790428164, "energy_per_token": 5.543594197607041, "time": 6.520083, "time_per_token": 0.163002075}}
{"outputs": [{"text": " 'UTF-8'", "tokens": [" '", "UTF", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -1.6648067235946655, -0.0036828566808253527, -0.0001232548092957586, -5.5549986427649856e-05, -0.0632774755358696], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {key: unicodedata.normalize('NFC', base64.b64decode(value).decode(ENCODING)) for key, value in data.items()}", "tokens": [" {", "key", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "N", "FC", "'", ",", " base", "6", "4", ".", "b", "6", "4", "decode", "(", "value", ")", ".", "decode", "(", "ENC", "OD", "ING", "))", " for", " key", ",", " value", " in", " data", ".", "items", "()}", "\n"], "logprobs": [-0.8462244272232056, -0.7582460641860962, -0.007143314927816391, -0.10376498848199844, -0.0008679436868987978, -1.6689286894688848e-06, -7.152555099310121e-07, -0.00027366707217879593, -0.0004247716860845685, -9.655486064730212e-05, -0.09379835426807404, -0.0011611393420025706, -9.536738616588991e-07, -4.768360213347478e-06, -7.068861305015162e-05, -0.06707261502742767, -3.933898824470816e-06, 0.0, -0.00012242044613230973, -0.10668619722127914, -0.0007049936102703214, -1.5497195136049413e-06, -9.42901024245657e-05, -0.0001299296854995191, -0.35103219747543335, -0.15632031857967377, -0.0008587724878452718, -0.00016211149340961128, -0.0048017664812505245, -0.012973426841199398, -1.1920928244535389e-07, -1.4305104514278355e-06, -0.01825929433107376, -0.07935894280672073, -0.007357879541814327, -3.6000557884108275e-05, -0.01109961699694395, -0.001049682730808854, -0.00727066257968545, -0.0003399271226953715, -0.00011062010162277147, -0.008270657621324062, -0.0020404488313943148], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004587720148265362, -7.152555099310121e-07, -1.764281842042692e-05, -5.245195097813848e-06, -0.6041262149810791], "finish_reason": "stop"}], "metrics": {"energy": 312.2251322288512, "energy_per_token": 4.219258543633124, "time": 9.263005, "time_per_token": 0.12517574324324324}}
{"outputs": [{"text": " 'utf-8'", "tokens": [" '", "utf", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -0.21233785152435303, -0.020759213715791702, -0.00045944625162519515, -3.8742269680369645e-05, -0.05927611514925957], "finish_reason": "stop"}, {"text": " open(json_file, 'r', encoding=ENCODING) as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "'", ",", " encoding", "=", "ENC", "OD", "ING", ")", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -1.1016064882278442, -0.00019393471302464604, -0.0059828246012330055, -0.028254492208361626, -0.0010350352386012673, 0.0, 0.0, -0.005742599721997976, -6.806619057897478e-05, -0.36525434255599976, -0.03510315716266632, -0.0035095547791570425], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.009814814664423466, -1.2993727978027891e-05, -0.018431464210152626, -1.2874520507466514e-05, -0.0001494772732257843, -0.0009706076816655695, -0.002084703417494893], "finish_reason": "stop"}, {"text": " {k: unicodedata.normalize('NFC', base64.b64decode(v).decode(ENCODING)) for k, v in data.items()}", "tokens": [" {", "k", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "N", "FC", "'", ",", " base", "6", "4", ".", "b", "6", "4", "decode", "(", "v", ")", ".", "decode", "(", "ENC", "OD", "ING", "))", " for", " k", ",", " v", " in", " data", ".", "items", "()}", "\n"], "logprobs": [-0.8542909622192383, -1.0256949663162231, -0.008926722221076488, -0.12844644486904144, -0.0005943200667388737, -8.344646857949556e-07, -3.576278118089249e-07, -0.00021360022947192192, -0.00042000532266683877, -5.98412734689191e-05, -0.07569997757673264, -0.0014709139941260219, -8.344646857949556e-07, -7.271740287251305e-06, -7.486063259420916e-05, -0.07699066400527954, -3.4570634852570947e-06, 0.0, -0.00012396997772157192, -0.11823508143424988, -0.0006393534131348133, -1.4305104514278355e-06, -8.654219709569588e-05, -0.0001618731184862554, -0.056540850549936295, -0.061317309737205505, -0.0010699268896132708, -0.00023731753753963858, -0.003965610638260841, -0.00896358396857977, -1.1920928244535389e-07, -2.3841830625315197e-06, -0.022195732221007347, -0.0847984328866005, -0.005335970316082239, -0.00015579440514557064, -0.02673102356493473, -0.00027998341829515994, -0.008190732449293137, -0.0003424296446610242, -7.939023635117337e-05, -0.009295281954109669, -0.0028312618378549814], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data"], "logprobs": [-0.0038912780582904816, -7.152555099310121e-07, -1.645074735279195e-05, -6.318072337307967e-06], "finish_reason": "stop"}], "metrics": {"energy": 306.8000944633484, "energy_per_token": 3.835001180791855, "time": 7.9996986, "time_per_token": 0.0999962325}}
{"outputs": [{"text": " 'utf-8'", "tokens": [" '", "utf", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -0.21233785152435303, -0.020759213715791702, -0.00045944625162519515, -3.8742269680369645e-05, -0.05927611514925957], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5910593271255493, -0.0005927712772972882], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data"], "logprobs": [-0.004629370290786028, -7.152555099310121e-07, -1.966933996300213e-05, -6.318072337307967e-06], "finish_reason": "stop"}], "metrics": {"energy": 207.6754448871613, "energy_per_token": 6.48985765272379, "time": 6.3278904, "time_per_token": 0.197746575}}
{"outputs": [{"text": " \"UTF-8\"", "tokens": [" \"", "UTF", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -1.897002935409546, -0.0036367725115269423, -0.0001928620331455022, -8.583032467868179e-06, -0.0992773026227951], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5910593271255493, -0.0005927712772972882], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004629370290786028, -7.152555099310121e-07, -1.966933996300213e-05, -6.318072337307967e-06, -0.6063599586486816], "finish_reason": "stop"}], "metrics": {"energy": 213.7091875457763, "energy_per_token": 6.476035986235646, "time": 6.1010017, "time_per_token": 0.1848788393939394}}
{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -0.08482559025287628], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -0.4158315062522888, -0.0536055751144886, -0.002914468990638852], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5910593271255493, -0.0005927712772972882], "finish_reason": "stop"}, {"text": " decoded_data<|endoftext|>#!/usr/bin/env python", "tokens": [" dec", "oded", "_", "data", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.004629370290786028, -7.152555099310121e-07, -1.966933996300213e-05, -6.318072337307967e-06, -1.1054863929748535, -8.344646857949556e-07, -3.099436753473128e-06, -1.311301275563892e-06, -6.794906312279636e-06, -0.15004339814186096, -1.5580694675445557, -1.223085641860962, -0.03929173946380615, -0.048379044979810715, -5.6503606174374e-05, -0.00653380760923028, -0.0007381098694168031, -0.0784272700548172, -0.002788467099890113, -1.1954331398010254], "finish_reason": "stop"}], "metrics": {"energy": 218.0287762079239, "energy_per_token": 4.542266170998414, "time": 7.1604934, "time_per_token": 0.14917694583333332}}
{"outputs": [{"text": " 'UTF-8'", "tokens": [" '", "UTF", "-", "8", "'", "\n"], "logprobs": [-0.910979688167572, -1.6648067235946655, -0.0036828566808253527, -0.0001232548092957586, -5.5549986427649856e-05, -0.0632774755358696], "finish_reason": "stop"}, {"text": " open(json_file, 'r', encoding=ENCODING) as f:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "'", ",", " encoding", "=", "ENC", "OD", "ING", ")", " as", " f", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -1.1016064882278442, -0.00019393471302464604, -0.0059828246012330055, -0.028254492208361626, -0.0010350352386012673, 0.0, 0.0, -0.005742599721997976, -6.806619057897478e-05, -0.36525434255599976, -0.03510315716266632, -0.0035095547791570425], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.009814814664423466, -1.2993727978027891e-05, -0.018431464210152626, -1.2874520507466514e-05, -0.0001494772732257843, -0.0009706076816655695, -0.002084703417494893], "finish_reason": "stop"}, {"text": " {key: unicodedata.normalize('NFC', base64.b64decode(value).decode(ENCODING)) for key, value in data.items()}", "tokens": [" {", "key", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "N", "FC", "'", ",", " base", "6", "4", ".", "b", "6", "4", "decode", "(", "value", ")", ".", "decode", "(", "ENC", "OD", "ING", "))", " for", " key", ",", " value", " in", " data", ".", "items", "()}", "\n"], "logprobs": [-0.8542909622192383, -0.6785117387771606, -0.009188862517476082, -0.1132642924785614, -0.0010665925219655037, -1.5497195136049413e-06, -1.311301275563892e-06, -0.00019858295854646713, -0.00029976642690598965, -7.593343616463244e-05, -0.09334772080183029, -0.0014618673594668508, -1.311301275563892e-06, -5.006777428206988e-06, -8.713819261174649e-05, -0.0548236258327961, -4.0531076592742465e-06, 0.0, -0.00015376816736534238, -0.1499129831790924, -0.0005427317810244858, -1.5497195136049413e-06, -7.92710343375802e-05, -0.0001431601122021675, -0.31970158219337463, -0.14405284821987152, -0.0010345588671043515, -0.00019596086349338293, -0.0036701480858027935, -0.00969995092600584, -1.1920928244535389e-07, -2.0265558760002023e-06, -0.0158357173204422, -0.0815822184085846, -0.006305561400949955, -4.8993817472364753e-05, -0.014734730124473572, -0.0008214913541451097, -0.007899709045886993, -0.00041631137719377875, -7.60526381782256e-05, -0.008478006348013878, -0.0018992258701473475], "finish_reason": "stop"}, {"text": " decoded_data<|endoftext|>import json", "tokens": [" dec", "oded", "_", "data", "<", "|", "end", "of", "text", "|>", "import", " json", "\n"], "logprobs": [-0.004771038889884949, -5.960462772236497e-07, -1.6927575416048057e-05, -5.483612312673358e-06, -1.2655638456344604, -7.152555099310121e-07, -3.6954811548639555e-06, -1.4305104514278355e-06, -7.152531907195225e-06, -0.1738213151693344, -0.8796403408050537, -1.3063377141952515, -0.024900514632463455], "finish_reason": "stop"}], "metrics": {"energy": 367.01021531105033, "energy_per_token": 4.123710284393824, "time": 10.746984, "time_per_token": 0.12075262921348313}}
{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -0.08482559025287628], "finish_reason": "stop"}, {"text": " open(json_file, 'r', encoding=ENCODING) as file:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "'", ",", " encoding", "=", "ENC", "OD", "ING", ")", " as", " file", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -1.1016064882278442, -0.00019393471302464604, -0.0059828246012330055, -0.028254492208361626, -0.0010350352386012673, 0.0, 0.0, -0.005742599721997976, -6.806619057897478e-05, -1.4745092391967773, -0.011011429131031036, -0.002240530215203762], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.009814814664423466, -1.2993727978027891e-05, -0.018431464210152626, -1.2874520507466514e-05, -0.0001494772732257843, -0.0009706076816655695, -0.002084703417494893], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-0.5906991958618164, -0.0005409446312114596], "finish_reason": "stop"}, {"text": " decoded_data<|endoftext|>#!/usr/bin/env python3", "tokens": [" dec", "oded", "_", "data", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.004766411613672972, -7.152555099310121e-07, -1.966933996300213e-05, -6.079655122448457e-06, -1.2375928163528442, -8.344646857949556e-07, -2.9802276912960224e-06, -1.0728830375228426e-06, -4.291525328881107e-06, -0.14302489161491394, -1.561307430267334, -1.370142936706543, -0.03872182220220566, -0.0320112444460392, -4.970903682988137e-05, -0.003472372191026807, -0.0007855190197005868, -0.04231646656990051, -0.002111826092004776, -0.4001578390598297, -0.013835008256137371], "finish_reason": "stop"}], "metrics": {"energy": 274.231881875992, "energy_per_token": 4.896997890642714, "time": 8.007441, "time_per_token": 0.14299001785714285}}
{"outputs": [{"text": " \"utf-8\"", "tokens": [" \"", "utf", "-", "8", "\"", "\n"], "logprobs": [-0.5198244452476501, -0.16699573397636414, -0.018416015431284904, -0.00034505134681239724, -9.059865078597795e-06, -0.08482559025287628], "finish_reason": "stop"}, {"text": " open(json_file, 'r') as file:", "tokens": [" open", "(", "json", "_", "file", ",", " '", "r", "')", " as", " file", ":", "\n"], "logprobs": [-0.0008640132145956159, -0.0011632826644927263, -0.0018599607283249497, -2.4676019165781327e-05, -7.986990567587782e-06, -0.042149618268013, -0.14192059636116028, -0.04797280207276344, -0.4084226191043854, -0.00020740265608765185, -1.3005380630493164, -0.009543628431856632, -0.0022518294863402843], "finish_reason": "stop"}, {"text": " json.load(f)", "tokens": [" json", ".", "load", "(", "f", ")", "\n"], "logprobs": [-0.015202486887574196, -1.0490362910786644e-05, -0.018188709393143654, -1.5020257706055418e-05, -0.00011753345461329445, -0.0011442311806604266, -0.0026359357871115208], "finish_reason": "stop"}, {"text": " {", "tokens": [" {", "\n"], "logprobs": [-0.8462244272232056, -2.4091973304748535], "finish_reason": "stop"}, {"text": " decoded_data", "tokens": [" dec", "oded", "_", "data", "\n"], "logprobs": [-0.004587720148265362, -7.152555099310121e-07, -1.764281842042692e-05, -5.245195097813848e-06, -0.6041262149810791], "finish_reason": "stop"}], "metrics": {"energy": 201.89942796707155, "energy_per_token": 6.118164483850653, "time": 6.112812, "time_per_token": 0.18523672727272728}}
