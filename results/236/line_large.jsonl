{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.025459537282586098, -0.015970878303050995, -0.0001294529065489769, -0.006837778724730015, -0.0005546461907215416, -0.004559003282338381, -2.7417760065873154e-05, -0.015599491074681282, -0.004187031649053097, -0.010033528320491314], "finish_reason": "stop"}, {"text": " ValueError(\"input df must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "input", " df", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -2.083801031112671, -0.4364861249923706, -0.7395739555358887, -0.0016483780927956104, -0.019550835713744164, -0.24102593958377838, -0.0017477489309385419, -0.04636825993657112, -0.000714523543138057, -0.00581003911793232], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=100, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -1.5582866668701172, -1.1920922133867862e-06, -0.00027581225731410086, -3.576278118089249e-07, -0.008184347301721573, -0.04807381331920624, -0.0027308098506182432, -0.04506043717265129, -0.05827593803405762, -0.1750657856464386, -9.536738616588991e-07, 0.0, -0.00015054999676067382, -0.0803721472620964, -1.1920858014491387e-05, -2.7418097943154862e-06, -0.026745183393359184, -0.006143969018012285], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.111314072157256e-05, -1.0013530300057027e-05, -0.0002520958660170436, -0.0038404534570872784, -2.288792165927589e-05, -0.0026006230618804693, -0.0014111570781096816, -2.7656173188006505e-05, -2.622600959512056e-06, -0.0004117832868359983, -0.0003532739356160164], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007753941463306546, -1.2755313036905136e-05, -1.764281842042692e-05, -0.00037579628406092525, -0.0004101150552742183, -0.0009478605352342129, -0.0011467316653579473, -0.0002978596603497863, -0.0004935238393954933], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0070328782312572, -3.4570634852570947e-06, -1.764281842042692e-05, -7.843663479434326e-05, -0.08102502673864365, -3.099436753473128e-06, -0.0003843760641757399, -0.00022075122979003936, -0.0010513499146327376, -0.0030878742691129446, -0.003588547930121422], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.029026705771684647, -0.20132902264595032], "finish_reason": "stop"}], "metrics": {"energy": 793.5260423727036, "energy_per_token": 5.361662448464213, "time": 22.503637, "time_per_token": 0.15205160135135137}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError('Input must be a DataFrame with columns Name, Age, Score, and Category.')", "tokens": [" Value", "Error", "('", "Input", " must", " be", " a", " Data", "Frame", " with", " columns", " Name", ",", " Age", ",", " Score", ",", " and", " Category", ".", "')", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -1.9674487113952637, -0.7768980860710144, -2.3341073989868164, -0.0007363230688497424, -0.011099735274910927, -0.28574681282043457, -0.001824739621952176, -2.9754815101623535, -0.05077916011214256, -1.6909432411193848, -0.007421423681080341, -0.005259605124592781, -0.0007915939204394817, -0.008577410131692886, -0.0373428575694561, -0.1184665858745575, -0.0027791946195065975, -1.179886817932129, -0.004571700468659401, -0.0030423568096011877], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.007623862475156784, -0.03834410384297371, -0.06821437180042267, -0.01986326277256012, -1.4185804502631072e-05, -2.3841855067985307e-07, -0.16326487064361572, -0.013016612268984318, -0.513778805732727, -0.005389683414250612, -0.0654955506324768, -0.0950753316283226], "finish_reason": "stop"}, {"text": " df.iloc[:, 1:-1]", "tokens": [" df", ".", "il", "oc", "[:", ",", " ", "1", ":-", "1", "]", "\n"], "logprobs": [-0.0035263041500002146, -2.357928514480591, -1.4133093357086182, -3.576278118089249e-07, -0.0018507986096665263, -0.0019610952585935593, -0.2696785032749176, -0.037535540759563446, -2.1183085441589355, -0.0028278145473450422, -0.0001896439935080707, -0.5682169198989868], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011975744273513556, -0.05141076073050499, -0.00028880240279249847, -4.827859811484814e-05, -0.008446563966572285], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007787294453009963, -8.702239938429557e-06, -0.001129108713939786, -0.00012587709352374077, -0.00038020533975213766, -1.1801649634435307e-05, -7.152555099310121e-07, -6.675497570540756e-05, -8.999896090244874e-05, -2.622600959512056e-06, -0.00020656836568377912, -0.0011395872570574284, -0.0014160377904772758, -6.9141146923357155e-06, -4.768370445162873e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.8596476365928538e-05, -0.060540247708559036, -0.002493369858711958, -0.0035727499052882195, -0.0010758809512481093, -0.0017564359586685896, -2.9802276912960224e-06, -1.6689286894688848e-06, -0.005243596155196428, -0.016166316345334053, -1.2874520507466514e-05, -9.536697689327411e-06, -0.001693720929324627, -0.0023317548912018538, -2.0265558760002023e-06, -1.2516897186287679e-05, -0.00031251792097464204, -0.003263625781983137, -4.6491513785440475e-06, -5.960462772236497e-07, -0.006371541414409876, -0.0025550834834575653], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.00026306029758416116, -1.0728830375228426e-06, 0.0, -1.2278481335670222e-05, -1.0728830375228426e-06, -0.48406291007995605, -0.3164847195148468, -3.4570634852570947e-06, -1.1920928244535389e-07, -0.0012871085200458765, -0.04122379049658775, -5.602820692729438e-06, -1.311301275563892e-06, -0.06648195534944534, -0.01736227050423622], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.397406908334233e-05, -1.1324817933200393e-05, -0.00023767507809679955, -0.005601898767054081, -2.0146166207268834e-05, -0.0022586092818528414, -0.0016915787709876895, -1.9430925021879375e-05, -2.9802276912960224e-06, -0.00045753977610729635, -0.0003777029050979763], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007239343249239028, -1.2159273865108844e-05, -2.825220326485578e-05, -0.0003300360403954983, -0.0005137792322784662, -0.001100649475120008, -0.0011186301708221436, -0.00028081765049137175, -0.0005287918029353023], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.005862896796315908, -4.410734163684538e-06, -1.4185804502631072e-05, -6.5205356804654e-05, -0.0700579434633255, -4.172316494077677e-06, -0.00038842763751745224, -0.00016366096679121256, -0.0009043894242495298, -0.0023298519663512707, -0.004121382255107164], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.030724840238690376, -0.2200886607170105], "finish_reason": "stop"}], "metrics": {"energy": 618.9926917095183, "energy_per_token": 4.18238305209134, "time": 16.167404, "time_per_token": 0.10923921621621623}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input df must be a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.201442837715149, -0.3807627558708191, -0.0004577780782710761, -0.006612088996917009, -0.4643400311470032, -0.0008557948167435825, -1.1157268285751343, -0.004143225960433483, -0.000789688085205853, -0.0038041146472096443], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -2.21521258354187, -0.0037309578619897366, -0.01875126175582409, -0.08170032501220703], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.003022984601557255, -0.12427014112472534, -0.00119304982945323, -0.011607962660491467, -0.0016707521863281727, -0.000494715350214392, -0.01958894357085228, -0.0004942387458868325, -0.0022468341048806906, -5.757642793469131e-05, -0.24062922596931458], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.001053493469953537, -0.051048681139945984, -0.00025686301523819566, -4.815939246327616e-05, -0.009462861344218254], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0009583409409970045, -8.34461570775602e-06, -0.0011799524072557688, -0.00016091958968900144, -0.0003251500893384218, -1.4066597032069694e-05, -7.152555099310121e-07, -6.05564855504781e-05, -8.67805938469246e-05, -2.3841830625315197e-06, -4.255681051290594e-05, -0.0008742563077248633, -0.0013561585219576955, -7.748573807475623e-06, -3.576278118089249e-07, -8.344646857949556e-07, -4.768370445162873e-07, -1.8954096958623268e-05, -0.058716800063848495, -0.0025006234645843506, -0.003483182517811656, -0.0008176797418855131, -0.0014427024871110916, -2.50339189733495e-06, -1.1920922133867862e-06, -0.005459992215037346, -0.013592899776995182, -1.2993727978027891e-05, -8.583032467868179e-06, -0.0013506823452189565, -0.002423090161755681, -1.6689286894688848e-06, -1.9073304429184645e-05, -0.00034397884155623615, -0.003443741938099265, -4.291525328881107e-06, -7.152555099310121e-07, -0.006838134024292231, -0.0023594654630869627], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.00026782741770148277, -1.0728830375228426e-06, 0.0, -1.549708758830093e-05, -8.344646857949556e-07, -0.9941617846488953, -0.019952543079853058], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.540453326422721e-05, -1.07287787614041e-05, -0.0002493547508493066, -0.004134560003876686, -1.8596476365928538e-05, -0.002079706871882081, -0.0016070796409621835, -2.6464111215318553e-05, -2.0265558760002023e-06, -0.000485183292767033, -0.00036745471879839897], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007514513563364744, -1.6689160474925302e-05, -2.6225699912174605e-05, -0.00029595286468975246, -0.00045944625162519515, -0.0010170531459152699, -0.0018963703187182546, -0.0002796259068418294, -0.0006610354175791144], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.006288147531449795, -4.0531076592742465e-06, -1.168244216387393e-05, -8.976056415122002e-05, -0.08827775716781616, -4.0531076592742465e-06, -0.00034671969478949904, -0.0001851148990681395, -0.0009890670189633965, -0.00241452781483531, -0.0033635490108281374], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03507818281650543, -0.2004547119140625], "finish_reason": "stop"}], "metrics": {"energy": 553.0684120006559, "energy_per_token": 4.254372400005046, "time": 14.698276, "time_per_token": 0.11306366153846154}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input argument df must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " argument", " df", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -2.9986572265625, -0.8600372672080994, -0.381744921207428, -0.00034505134681239724, -0.0203956738114357, -0.5724086165428162, -0.004082916304469109, -0.00043275527423247695, -0.7755283713340759, -0.0009455977124162018, -0.003699365770444274], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -2.21521258354187, -0.0037309578619897366, -0.01875126175582409, -0.08170032501220703], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.003022984601557255, -0.12427014112472534, -0.00119304982945323, -0.011607962660491467, -0.0016707521863281727, -0.000494715350214392, -0.01958894357085228, -0.0004942387458868325, -0.0022468341048806906, -5.757642793469131e-05, -0.24062922596931458], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.001053493469953537, -0.051048681139945984, -0.00025686301523819566, -4.815939246327616e-05, -0.009462861344218254], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0009583409409970045, -8.34461570775602e-06, -0.0011799524072557688, -0.00016091958968900144, -0.0003251500893384218, -1.4066597032069694e-05, -7.152555099310121e-07, -6.05564855504781e-05, -8.67805938469246e-05, -2.3841830625315197e-06, -4.255681051290594e-05, -0.0008742563077248633, -0.0013561585219576955, -7.748573807475623e-06, -3.576278118089249e-07, -8.344646857949556e-07, -4.768370445162873e-07, -1.8954096958623268e-05, -0.058716800063848495, -0.0025006234645843506, -0.003483182517811656, -0.0008176797418855131, -0.0014427024871110916, -2.50339189733495e-06, -1.1920922133867862e-06, -0.005459992215037346, -0.013592899776995182, -1.2993727978027891e-05, -8.583032467868179e-06, -0.0013506823452189565, -0.002423090161755681, -1.6689286894688848e-06, -1.9073304429184645e-05, -0.00034397884155623615, -0.003443741938099265, -4.291525328881107e-06, -7.152555099310121e-07, -0.006838134024292231, -0.0023594654630869627], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state, max_depth=None, max_features=None, n_estimators=100)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ",", " max", "_", "depth", "=", "None", ",", " max", "_", "features", "=", "None", ",", " n", "_", "estim", "ators", "=", "1", "0", "0", ")", "\n"], "logprobs": [-0.00026782741770148277, -1.0728830375228426e-06, 0.0, -1.549708758830093e-05, -8.344646857949556e-07, -0.46224039793014526, -0.2450597733259201, -4.6491513785440475e-06, -4.768370445162873e-07, -0.0012321030953899026, -0.040837060660123825, -6.794906312279636e-06, -1.4305104514278355e-06, -2.9522902965545654, -1.2895697355270386, -6.079655122448457e-06, -0.04328055679798126, -0.007857722230255604, -3.5531678199768066, -0.22589531540870667, -0.5887441635131836, -1.9073468138230965e-06, -0.2577047646045685, -0.2863491475582123, -0.20672184228897095, -0.3545789420604706, -1.2955342531204224, -6.794906312279636e-06, -0.07736200839281082, -3.576278118089249e-07, -0.0023123687133193016, -0.20051997900009155, -0.011936663649976254, -0.15505483746528625, -0.2409578263759613, -0.009550123475492], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.8742269680369645e-05, -1.07287787614041e-05, -0.00024172721896320581, -0.004972353577613831, -2.074220174108632e-05, -0.0022299441043287516, -0.0018242637161165476, -1.9311717551317997e-05, -3.2186455882765586e-06, -0.0004862556525040418, -0.00042417587246745825], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0006144542712718248, -1.4543427823809907e-05, -2.8729025871143676e-05, -0.00032109825406223536, -0.00041738382424227893, -0.0009508379152975976, -0.0010886224918067455, -0.00027783826226368546, -0.0006059955921955407], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.006690719164907932, -3.933898824470816e-06, -1.168244216387393e-05, -7.092700980138034e-05, -0.07068759202957153, -3.4570634852570947e-06, -0.0004042761866003275, -0.000169382052263245, -0.0008082698914222419, -0.002829835517331958, -0.0053076306357979774], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.02593473345041275, -0.21778425574302673], "finish_reason": "stop"}], "metrics": {"energy": 636.9790610237119, "energy_per_token": 3.9811191313981995, "time": 16.822666, "time_per_token": 0.10514166250000001}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -2.5692138671875, -0.0007364421617239714, -0.011370853520929813, -1.3505489826202393, -0.006256043910980225, -0.0007294139941222966, -1.215177297592163, -0.002681352896615863, -0.0007939761853776872, -0.004153554327785969], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -1.058118462562561, -0.020894763991236687], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.6954195820726454e-05, -1.0251946150674485e-05, -0.0002294515579706058, -0.005699217785149813, -1.9073304429184645e-05, -0.0028077249880880117, -0.0014844838296994567, -2.169585604860913e-05, -2.7418097943154862e-06, -0.00047100416850298643, -0.00039414744242094457], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007097586058080196, -1.585470999998506e-05, -2.992108420585282e-05, -0.0003430254873819649, -0.0003968881501350552, -0.0010001424234360456, -0.0014944825088605285, -0.0002571013756096363, -0.0006922471220605075], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007169945631176233, -4.291525328881107e-06, -1.2636104656849056e-05, -8.105902816168964e-05, -0.08929319679737091, -4.291525328881107e-06, -0.0005240259342826903, -0.00020597243565134704, -0.0008622265886515379, -0.00244556600227952, -0.004081966355443001], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03058217652142048, -0.21500563621520996], "finish_reason": "stop"}], "metrics": {"energy": 555.9978892202378, "energy_per_token": 4.212105221365437, "time": 14.705326, "time_per_token": 0.11140398484848485}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input 'df' is not a valid pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " '", "df", "'", " is", " not", " a", " valid", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -2.879383087158203, -0.013719193637371063, -0.00022742546570952982, -1.8207052946090698, -0.02149849943816662, -0.017185933887958527, -2.3759021759033203, -1.68290114402771, -0.0035953186452388763, -0.0007998128421604633, -0.44697800278663635, -0.024024561047554016, -0.0007253637886606157, -0.004569445736706257], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset='Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "='", "Name", "')", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -1.0170105695724487, -0.002858958672732115, -0.050852127373218536, -0.08472757041454315], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -1.058118462562561, -0.020894763991236687], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.6954195820726454e-05, -1.0251946150674485e-05, -0.0002294515579706058, -0.005699217785149813, -1.9073304429184645e-05, -0.0028077249880880117, -0.0014844838296994567, -2.169585604860913e-05, -2.7418097943154862e-06, -0.00047100416850298643, -0.00039414744242094457], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007097586058080196, -1.585470999998506e-05, -2.992108420585282e-05, -0.0003430254873819649, -0.0003968881501350552, -0.0010001424234360456, -0.0014944825088605285, -0.0002571013756096363, -0.0006922471220605075], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007169945631176233, -4.291525328881107e-06, -1.2636104656849056e-05, -8.105902816168964e-05, -0.08929319679737091, -4.291525328881107e-06, -0.0005240259342826903, -0.00020597243565134704, -0.0008622265886515379, -0.00244556600227952, -0.004081966355443001], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03058217652142048, -0.21500563621520996], "finish_reason": "stop"}], "metrics": {"energy": 553.5295691223149, "energy_per_token": 4.070070361193492, "time": 14.72576, "time_per_token": 0.10827764705882352}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input 'df' is not a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " '", "df", "'", " is", " not", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -2.879383087158203, -0.013719193637371063, -0.00022742546570952982, -1.8207052946090698, -0.02149849943816662, -0.017185933887958527, -1.818572998046875, -0.00490189203992486, -0.0006910558440722525, -0.4932883679866791, -0.05296507105231285, -0.0007996936910785735, -0.004635184537619352], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -0.29646873474121094, -3.099436753473128e-06, -2.3841855067985307e-07, -0.00156589865218848, -0.04166845977306366, -5.483612312673358e-06, -1.5497195136049413e-06, -0.05792432650923729, -0.02104325219988823], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.218599158572033e-05, -1.2278481335670222e-05, -0.00019333878299221396, -0.004310364834964275, -1.9550132492440753e-05, -0.0026863461825996637, -0.0018435402307659388, -1.883488948806189e-05, -1.7881377516459906e-06, -0.000440262199845165, -0.0004552758182398975], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0006983225466683507, -1.537788011773955e-05, -2.253030106658116e-05, -0.0003270567976869643, -0.00042024365393444896, -0.0008173224050551653, -0.0018507986096665263, -0.00031799983116798103, -0.0005739472107961774], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007233974989503622, -4.291525328881107e-06, -1.823885577323381e-05, -8.046303264563903e-05, -0.11571279913187027, -3.576272320060525e-06, -0.0006104036583565176, -0.00021514961554203182, -0.0008947421447373927, -0.002380634658038616, -0.005045538302510977], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.030312171205878258, -0.19906367361545563], "finish_reason": "stop"}], "metrics": {"energy": 567.5016296539306, "energy_per_token": 3.9685428647128016, "time": 15.13557, "time_per_token": 0.10584314685314684}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input dataframe is not valid\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", "frame", " is", " not", " valid", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.2347604036331177, -2.6051530838012695, -0.38723182678222656, -0.027078114449977875, -1.913863182067871, -0.6409509778022766, -0.0007033258443698287, -0.006045863498002291], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset='Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "='", "Name", "')", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -1.0170105695724487, -0.002858958672732115, -0.050852127373218536, -0.08472757041454315], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -0.29646873474121094, -3.099436753473128e-06, -2.3841855067985307e-07, -0.00156589865218848, -0.04166845977306366, -5.483612312673358e-06, -1.5497195136049413e-06, -0.05792432650923729, -0.02104325219988823], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.218599158572033e-05, -1.2278481335670222e-05, -0.00019333878299221396, -0.004310364834964275, -1.9550132492440753e-05, -0.0026863461825996637, -0.0018435402307659388, -1.883488948806189e-05, -1.7881377516459906e-06, -0.000440262199845165, -0.0004552758182398975], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0006983225466683507, -1.537788011773955e-05, -2.253030106658116e-05, -0.0003270567976869643, -0.00042024365393444896, -0.0008173224050551653, -0.0018507986096665263, -0.00031799983116798103, -0.0005739472107961774], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007233974989503622, -4.291525328881107e-06, -1.823885577323381e-05, -8.046303264563903e-05, -0.11571279913187027, -3.576272320060525e-06, -0.0006104036583565176, -0.00021514961554203182, -0.0008947421447373927, -0.002380634658038616, -0.005045538302510977], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.030312171205878258, -0.19906367361545563], "finish_reason": "stop"}], "metrics": {"energy": 550.9690105419157, "energy_per_token": 3.9925290618979403, "time": 14.915307, "time_per_token": 0.1080819347826087}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"input df must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "input", " df", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -2.083801031112671, -0.4364861249923706, -0.7395739555358887, -0.0016483780927956104, -0.019550835713744164, -0.24102593958377838, -0.0017477489309385419, -0.04636825993657112, -0.000714523543138057, -0.00581003911793232], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -0.29646873474121094, -3.099436753473128e-06, -2.3841855067985307e-07, -0.00156589865218848, -0.04166845977306366, -5.483612312673358e-06, -1.5497195136049413e-06, -0.05792432650923729, -0.02104325219988823], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.218599158572033e-05, -1.2278481335670222e-05, -0.00019333878299221396, -0.004310364834964275, -1.9550132492440753e-05, -0.0026863461825996637, -0.0018435402307659388, -1.883488948806189e-05, -1.7881377516459906e-06, -0.000440262199845165, -0.0004552758182398975], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0006983225466683507, -1.537788011773955e-05, -2.253030106658116e-05, -0.0003270567976869643, -0.00042024365393444896, -0.0008173224050551653, -0.0018507986096665263, -0.00031799983116798103, -0.0005739472107961774], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007233974989503622, -4.291525328881107e-06, -1.823885577323381e-05, -8.046303264563903e-05, -0.11571279913187027, -3.576272320060525e-06, -0.0006104036583565176, -0.00021514961554203182, -0.0008947421447373927, -0.002380634658038616, -0.005045538302510977], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.030312171205878258, -0.19906367361545563], "finish_reason": "stop"}], "metrics": {"energy": 584.0360454502106, "energy_per_token": 4.201698168706551, "time": 15.350895, "time_per_token": 0.11043809352517986}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input 'df' must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " '", "df", "'", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -2.879383087158203, -0.013719193637371063, -0.00022742546570952982, -0.4199484586715698, -0.0005492847412824631, -0.012172814458608627, -0.6198795437812805, -0.003990426659584045, -0.00048828122089616954, -0.9412381052970886, -0.0006288696313276887, -0.005245374981313944], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=100, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -1.5582866668701172, -1.1920922133867862e-06, -0.00027581225731410086, -3.576278118089249e-07, -0.008184347301721573, -0.04807381331920624, -0.0027308098506182432, -0.04506043717265129, -0.05827593803405762, -0.1750657856464386, -9.536738616588991e-07, 0.0, -0.00015054999676067382, -0.0803721472620964, -1.1920858014491387e-05, -2.7418097943154862e-06, -0.026745183393359184, -0.006143969018012285], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.111314072157256e-05, -1.0013530300057027e-05, -0.0002520958660170436, -0.0038404534570872784, -2.288792165927589e-05, -0.0026006230618804693, -0.0014111570781096816, -2.7656173188006505e-05, -2.622600959512056e-06, -0.0004117832868359983, -0.0003532739356160164], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007753941463306546, -1.2755313036905136e-05, -1.764281842042692e-05, -0.00037579628406092525, -0.0004101150552742183, -0.0009478605352342129, -0.0011467316653579473, -0.0002978596603497863, -0.0004935238393954933], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0070328782312572, -3.4570634852570947e-06, -1.764281842042692e-05, -7.843663479434326e-05, -0.08102502673864365, -3.099436753473128e-06, -0.0003843760641757399, -0.00022075122979003936, -0.0010513499146327376, -0.0030878742691129446, -0.003588547930121422], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.029026705771684647, -0.20132902264595032], "finish_reason": "stop"}], "metrics": {"energy": 633.4027919940949, "energy_per_token": 4.194720476782085, "time": 17.007761, "time_per_token": 0.11263417880794702}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input should be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " should", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -2.6999244689941406, -0.0016120783984661102, -0.028765197843313217, -0.33549508452415466, -0.005082780960947275, -0.44013217091560364, -0.0009997851448133588, -0.005471847951412201], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']].values", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", ".", "values", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -1.527451515197754, -0.4356711804866791, -0.10285137593746185], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=100, max_depth=10, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", "0", ",", " max", "_", "depth", "=", "1", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -1.5582866668701172, -1.1920922133867862e-06, -0.00027581225731410086, -3.576278118089249e-07, -0.008184347301721573, -0.04807381331920624, -0.0027308098506182432, -0.04506043717265129, -0.05827593803405762, -1.958932638168335, -5.960462772236497e-07, -0.0031985098030418158, -0.0001546025014249608, -0.6083016395568848, -0.09954258799552917, -0.13591860234737396, -0.003949818201363087, -8.344646857949556e-07, -1.1920928244535389e-07, -0.0002466136065777391, -0.09374810010194778, -1.8596476365928538e-05, -1.311301275563892e-06, -0.008284962736070156, -0.007018554490059614], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.111314072157256e-05, -1.0013530300057027e-05, -0.0002520958660170436, -0.0038404534570872784, -2.288792165927589e-05, -0.0026006230618804693, -0.0014111570781096816, -2.7656173188006505e-05, -2.622600959512056e-06, -0.0004117832868359983, -0.0003532739356160164], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007753941463306546, -1.2755313036905136e-05, -1.764281842042692e-05, -0.00037579628406092525, -0.0004101150552742183, -0.0009478605352342129, -0.0011467316653579473, -0.0002978596603497863, -0.0004935238393954933], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0070328782312572, -3.4570634852570947e-06, -1.764281842042692e-05, -7.843663479434326e-05, -0.08102502673864365, -3.099436753473128e-06, -0.0003843760641757399, -0.00022075122979003936, -0.0010513499146327376, -0.0030878742691129446, -0.003588547930121422], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.029026705771684647, -0.20132902264595032], "finish_reason": "stop"}], "metrics": {"energy": 632.432710627556, "energy_per_token": 4.054055837356128, "time": 16.604221, "time_per_token": 0.1064373141025641}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input df should be a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " should", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.201442837715149, -1.8336284160614014, -0.0007809926173649728, -0.013848411850631237, -0.4906376600265503, -0.0014266322832554579, -0.9010420441627502, -0.005027391016483307, -0.0006691362359561026, -0.00296106212772429], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -0.29646873474121094, -3.099436753473128e-06, -2.3841855067985307e-07, -0.00156589865218848, -0.04166845977306366, -5.483612312673358e-06, -1.5497195136049413e-06, -0.05792432650923729, -0.02104325219988823], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.218599158572033e-05, -1.2278481335670222e-05, -0.00019333878299221396, -0.004310364834964275, -1.9550132492440753e-05, -0.0026863461825996637, -0.0018435402307659388, -1.883488948806189e-05, -1.7881377516459906e-06, -0.000440262199845165, -0.0004552758182398975], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0006983225466683507, -1.537788011773955e-05, -2.253030106658116e-05, -0.0003270567976869643, -0.00042024365393444896, -0.0008173224050551653, -0.0018507986096665263, -0.00031799983116798103, -0.0005739472107961774], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007233974989503622, -4.291525328881107e-06, -1.823885577323381e-05, -8.046303264563903e-05, -0.11571279913187027, -3.576272320060525e-06, -0.0006104036583565176, -0.00021514961554203182, -0.0008947421447373927, -0.002380634658038616, -0.005045538302510977], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.030312171205878258, -0.19906367361545563], "finish_reason": "stop"}], "metrics": {"energy": 614.7487563762664, "energy_per_token": 4.39106254554476, "time": 16.382748, "time_per_token": 0.11701962857142857}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"df should be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "df", " should", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -2.560148000717163, -2.0389506816864014, -0.003275388851761818, -0.050984565168619156, -0.9315823316574097, -0.021988293156027794, -0.0021281230729073286, -0.5381993651390076, -0.0005178302526473999, -0.004075793083757162], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -2.21521258354187, -0.0037309578619897366, -0.01875126175582409, -0.08170032501220703], "finish_reason": "stop"}, {"text": " df.iloc[:, [1, 2]].values", "tokens": [" df", ".", "il", "oc", "[:", ",", " [", "1", ",", " ", "2", "]]", ".", "values", "\n"], "logprobs": [-0.003022984601557255, -2.3185184001922607, -1.4964275360107422, -3.576278118089249e-07, -0.0023110604379326105, -0.0023098711390048265, -2.054466962814331, -0.08064062893390656, -0.0015562577173113823, -0.11020970344543457, -0.003953499253839254, -0.0012359131360426545, -0.095557801425457, -0.10052002966403961, -0.043735381215810776], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0012159105390310287, -0.043438199907541275, -0.0002466136065777391, -5.519237674889155e-05, -0.008045527152717113], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0009978797752410173, -8.702239938429557e-06, -0.0011628062929958105, -9.262132516596466e-05, -0.0003393312799744308, -1.0967194612021558e-05, -7.152555099310121e-07, -6.067568756407127e-05, -9.16677454370074e-05, -2.3841830625315197e-06, -9.238292841473594e-05, -0.0009873997187241912, -0.0015982723562046885, -7.152531907195225e-06, -4.768370445162873e-07, -7.152555099310121e-07, -7.152555099310121e-07, -1.966933996300213e-05, -0.06427735835313797, -0.0024813597556203604, -0.0035508933942764997, -0.0008987916517071426, -0.0018705505644902587, -2.861018856492592e-06, -1.0728830375228426e-06, -0.0044086407870054245, -0.01313980296254158, -1.537788011773955e-05, -8.821448318485636e-06, -0.0015550674870610237, -0.002078874269500375, -1.7881377516459906e-06, -2.2649508537142538e-05, -0.00035172473872080445, -0.0036950900685042143, -4.291525328881107e-06, -7.152555099310121e-07, -0.008370435796678066, -0.002399543533101678], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.00024148885859176517, -1.1920922133867862e-06, 0.0, -1.4424220353248529e-05, -8.344646857949556e-07, -0.49057772755622864, -0.3143942952156067, -3.576272320060525e-06, -1.1920928244535389e-07, -0.0011972171487286687, -0.041552621871232986, -5.722029527532868e-06, -1.9073468138230965e-06, -0.05306851491332054, -0.023037292063236237], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-2.8609820219571702e-05, -1.0967194612021558e-05, -0.00018439977429807186, -0.004401044920086861, -2.062299427052494e-05, -0.0025415283162146807, -0.0014129426563158631, -2.47952248173533e-05, -4.768360213347478e-06, -0.0004011779965367168, -0.0004337085410952568], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007927850820124149, -1.5735502529423684e-05, -2.372236667724792e-05, -0.000284154579276219, -0.0004353767435532063, -0.0008151783840730786, -0.0011812621960416436, -0.000302745756926015, -0.0006002769805490971], "finish_reason": "stop"}, {"text": " accuracy_score(predictions, y_test)", "tokens": [" accuracy", "_", "score", "(", "pred", "ictions", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.006043967790901661, -3.4570634852570947e-06, -1.6569954823353328e-05, -8.749579137656838e-05, -2.5493083000183105, -4.911301948595792e-05, -0.0005246216314844787, -0.004012985620647669, -6.01988795096986e-05, -3.397406908334233e-05, -0.0029174406081438065, -0.005215846933424473], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.033611420542001724, -0.1982552409172058], "finish_reason": "stop"}], "metrics": {"energy": 663.6187526359558, "energy_per_token": 4.6733714974363085, "time": 17.642649, "time_per_token": 0.12424400704225351}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input df must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.201442837715149, -0.3807627558708191, -0.0004577780782710761, -0.006612088996917009, -0.4643400311470032, -0.0008557948167435825, -0.49766573309898376, -0.0005581013392657042, -0.005088948644697666], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']].values", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", ".", "values", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -1.527451515197754, -0.4356711804866791, -0.10285137593746185], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -1.058118462562561, -0.020894763991236687], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.6954195820726454e-05, -1.0251946150674485e-05, -0.0002294515579706058, -0.005699217785149813, -1.9073304429184645e-05, -0.0028077249880880117, -0.0014844838296994567, -2.169585604860913e-05, -2.7418097943154862e-06, -0.00047100416850298643, -0.00039414744242094457], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007097586058080196, -1.585470999998506e-05, -2.992108420585282e-05, -0.0003430254873819649, -0.0003968881501350552, -0.0010001424234360456, -0.0014944825088605285, -0.0002571013756096363, -0.0006922471220605075], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007169945631176233, -4.291525328881107e-06, -1.2636104656849056e-05, -8.105902816168964e-05, -0.08929319679737091, -4.291525328881107e-06, -0.0005240259342826903, -0.00020597243565134704, -0.0008622265886515379, -0.00244556600227952, -0.004081966355443001], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03058217652142048, -0.21500563621520996], "finish_reason": "stop"}], "metrics": {"energy": 556.6235200119019, "energy_per_token": 4.185139248209788, "time": 14.712157, "time_per_token": 0.11061772180451128}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input data is not a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " is", " not", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.2347604036331177, -1.5975027084350586, -0.006418921053409576, -0.0358763113617897, -0.22802595794200897, -0.002161073498427868, -0.5388367772102356, -0.08859933167695999, -0.0010030006524175406, -0.005832083523273468], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset='Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "='", "Name", "')", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -1.0170105695724487, -0.002858958672732115, -0.050852127373218536, -0.08472757041454315], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -0.29646873474121094, -3.099436753473128e-06, -2.3841855067985307e-07, -0.00156589865218848, -0.04166845977306366, -5.483612312673358e-06, -1.5497195136049413e-06, -0.05792432650923729, -0.02104325219988823], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.218599158572033e-05, -1.2278481335670222e-05, -0.00019333878299221396, -0.004310364834964275, -1.9550132492440753e-05, -0.0026863461825996637, -0.0018435402307659388, -1.883488948806189e-05, -1.7881377516459906e-06, -0.000440262199845165, -0.0004552758182398975], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0006983225466683507, -1.537788011773955e-05, -2.253030106658116e-05, -0.0003270567976869643, -0.00042024365393444896, -0.0008173224050551653, -0.0018507986096665263, -0.00031799983116798103, -0.0005739472107961774], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007233974989503622, -4.291525328881107e-06, -1.823885577323381e-05, -8.046303264563903e-05, -0.11571279913187027, -3.576272320060525e-06, -0.0006104036583565176, -0.00021514961554203182, -0.0008947421447373927, -0.002380634658038616, -0.005045538302510977], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.030312171205878258, -0.19906367361545563], "finish_reason": "stop"}], "metrics": {"energy": 570.491586678505, "energy_per_token": 4.074939904846464, "time": 15.139658, "time_per_token": 0.10814041428571429}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input df must be a DataFrame with columns 'Name', 'Age', 'Score', and 'Category'.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " Data", "Frame", " with", " columns", " '", "Name", "'", ",", " '", "Age", "'", ",", " '", "Score", "'", ",", " and", " '", "Category", "'", ".", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.201442837715149, -0.3807627558708191, -0.0004577780782710761, -0.006612088996917009, -0.4643400311470032, -0.0008557948167435825, -3.428398370742798, -0.08597472310066223, -0.09740813821554184, -0.013981256633996964, -0.0009638193296268582, -0.000589792791288346, -0.00445563904941082, -0.0010250320192426443, -0.00023493390472140163, -0.0022722873836755753, -0.008348329924046993, -0.0005385617259889841, -0.00038926175329834223, -0.008963702246546745, -0.015599139034748077, -0.0005321278586052358, -0.0008110094931907952, -0.007295041810721159, -0.21091634035110474, -0.0030782478861510754, -0.0006613928126171231, -0.002118725562468171], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -1.058118462562561, -0.020894763991236687], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.6954195820726454e-05, -1.0251946150674485e-05, -0.0002294515579706058, -0.005699217785149813, -1.9073304429184645e-05, -0.0028077249880880117, -0.0014844838296994567, -2.169585604860913e-05, -2.7418097943154862e-06, -0.00047100416850298643, -0.00039414744242094457], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007097586058080196, -1.585470999998506e-05, -2.992108420585282e-05, -0.0003430254873819649, -0.0003968881501350552, -0.0010001424234360456, -0.0014944825088605285, -0.0002571013756096363, -0.0006922471220605075], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007169945631176233, -4.291525328881107e-06, -1.2636104656849056e-05, -8.105902816168964e-05, -0.08929319679737091, -4.291525328881107e-06, -0.0005240259342826903, -0.00020597243565134704, -0.0008622265886515379, -0.00244556600227952, -0.004081966355443001], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03058217652142048, -0.21500563621520996], "finish_reason": "stop"}], "metrics": {"energy": 636.5435227718353, "energy_per_token": 4.2436234851455685, "time": 17.007538, "time_per_token": 0.11338358666666667}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input df must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.201442837715149, -0.3807627558708191, -0.0004577780782710761, -0.006612088996917009, -0.4643400311470032, -0.0008557948167435825, -0.49766573309898376, -0.0005581013392657042, -0.005088948644697666], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=100, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -1.5582866668701172, -1.1920922133867862e-06, -0.00027581225731410086, -3.576278118089249e-07, -0.008184347301721573, -0.04807381331920624, -0.0027308098506182432, -0.04506043717265129, -0.05827593803405762, -0.1750657856464386, -9.536738616588991e-07, 0.0, -0.00015054999676067382, -0.0803721472620964, -1.1920858014491387e-05, -2.7418097943154862e-06, -0.026745183393359184, -0.006143969018012285], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.111314072157256e-05, -1.0013530300057027e-05, -0.0002520958660170436, -0.0038404534570872784, -2.288792165927589e-05, -0.0026006230618804693, -0.0014111570781096816, -2.7656173188006505e-05, -2.622600959512056e-06, -0.0004117832868359983, -0.0003532739356160164], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007753941463306546, -1.2755313036905136e-05, -1.764281842042692e-05, -0.00037579628406092525, -0.0004101150552742183, -0.0009478605352342129, -0.0011467316653579473, -0.0002978596603497863, -0.0004935238393954933], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0070328782312572, -3.4570634852570947e-06, -1.764281842042692e-05, -7.843663479434326e-05, -0.08102502673864365, -3.099436753473128e-06, -0.0003843760641757399, -0.00022075122979003936, -0.0010513499146327376, -0.0030878742691129446, -0.003588547930121422], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.029026705771684647, -0.20132902264595032], "finish_reason": "stop"}], "metrics": {"energy": 624.9091446628572, "energy_per_token": 4.222359085559846, "time": 16.584543, "time_per_token": 0.11205772297297298}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input should be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " should", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -2.6999244689941406, -0.0016120783984661102, -0.028765197843313217, -0.33549508452415466, -0.005082780960947275, -0.44013217091560364, -0.0009997851448133588, -0.005471847951412201], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -1.058118462562561, -0.020894763991236687], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.6954195820726454e-05, -1.0251946150674485e-05, -0.0002294515579706058, -0.005699217785149813, -1.9073304429184645e-05, -0.0028077249880880117, -0.0014844838296994567, -2.169585604860913e-05, -2.7418097943154862e-06, -0.00047100416850298643, -0.00039414744242094457], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007097586058080196, -1.585470999998506e-05, -2.992108420585282e-05, -0.0003430254873819649, -0.0003968881501350552, -0.0010001424234360456, -0.0014944825088605285, -0.0002571013756096363, -0.0006922471220605075], "finish_reason": "stop"}, {"text": " accuracy_score(predictions, y_test)", "tokens": [" accuracy", "_", "score", "(", "pred", "ictions", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.007169945631176233, -4.291525328881107e-06, -1.2636104656849056e-05, -8.105902816168964e-05, -2.4608218669891357, -7.438383181579411e-05, -0.0005903884884901345, -0.006046455819159746, -5.411955135059543e-05, -4.184158387943171e-05, -0.00364176114089787, -0.005127375479787588], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03390750288963318, -0.18144890666007996], "finish_reason": "stop"}], "metrics": {"energy": 546.5135501308441, "energy_per_token": 4.171859161304154, "time": 14.719944, "time_per_token": 0.11236598473282443}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input argument 'df' must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " argument", " '", "df", "'", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -2.9986572265625, -1.1556000709533691, -0.009415035136044025, -0.0002004899288294837, -0.24775762856006622, -0.0002706876548472792, -0.023396845906972885, -0.813997209072113, -0.0015624469378963113, -0.8115628957748413, -0.0007601470570079982, -0.006087689660489559], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -0.29646873474121094, -3.099436753473128e-06, -2.3841855067985307e-07, -0.00156589865218848, -0.04166845977306366, -5.483612312673358e-06, -1.5497195136049413e-06, -0.05792432650923729, -0.02104325219988823], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.218599158572033e-05, -1.2278481335670222e-05, -0.00019333878299221396, -0.004310364834964275, -1.9550132492440753e-05, -0.0026863461825996637, -0.0018435402307659388, -1.883488948806189e-05, -1.7881377516459906e-06, -0.000440262199845165, -0.0004552758182398975], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0006983225466683507, -1.537788011773955e-05, -2.253030106658116e-05, -0.0003270567976869643, -0.00042024365393444896, -0.0008173224050551653, -0.0018507986096665263, -0.00031799983116798103, -0.0005739472107961774], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007233974989503622, -4.291525328881107e-06, -1.823885577323381e-05, -8.046303264563903e-05, -0.11571279913187027, -3.576272320060525e-06, -0.0006104036583565176, -0.00021514961554203182, -0.0008947421447373927, -0.002380634658038616, -0.005045538302510977], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.030312171205878258, -0.19906367361545563], "finish_reason": "stop"}], "metrics": {"energy": 586.5889335975646, "energy_per_token": 4.130907983081441, "time": 15.558222, "time_per_token": 0.10956494366197184}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"df must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "df", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -2.560148000717163, -0.2664172947406769, -0.0013246104354038835, -0.023021332919597626, -0.5708572864532471, -0.0015593523858115077, -0.1804036647081375, -0.0006069486844353378, -0.003603514516726136], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'], keep='first')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "']", ",", " keep", "='", "first", "')", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -2.679643392562866, -0.002522978698834777, -0.10767584294080734, -0.06352418661117554, -0.07871478796005249, -0.0021858150139451027, -0.06574204564094543], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']].to_numpy()", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -1.527451515197754, -1.5224765539169312, -3.111314072157256e-05, -0.0003200257197022438, -0.0014215136179700494, -0.02840247005224228], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state, n_estimators=10)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ",", " n", "_", "estim", "ators", "=", "1", "0", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -0.29646873474121094, -3.099436753473128e-06, -2.3841855067985307e-07, -0.00156589865218848, -0.04166845977306366, -5.483612312673358e-06, -1.5497195136049413e-06, -2.883047103881836, -0.4091496765613556, -4.172316494077677e-06, -0.08069242537021637, -5.960462772236497e-07, -0.012156208977103233, -0.31114378571510315, -0.02538132295012474, -2.1519346237182617, -0.015696194022893906], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.218599158572033e-05, -1.2278481335670222e-05, -0.00019333878299221396, -0.004310364834964275, -1.9550132492440753e-05, -0.0026863461825996637, -0.0018435402307659388, -1.883488948806189e-05, -1.7881377516459906e-06, -0.000440262199845165, -0.0004552758182398975], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0006983225466683507, -1.537788011773955e-05, -2.253030106658116e-05, -0.0003270567976869643, -0.00042024365393444896, -0.0008173224050551653, -0.0018507986096665263, -0.00031799983116798103, -0.0005739472107961774], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007233974989503622, -4.291525328881107e-06, -1.823885577323381e-05, -8.046303264563903e-05, -0.11571279913187027, -3.576272320060525e-06, -0.0006104036583565176, -0.00021514961554203182, -0.0008947421447373927, -0.002380634658038616, -0.005045538302510977], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.030312171205878258, -0.19906367361545563], "finish_reason": "stop"}], "metrics": {"energy": 626.2852755985261, "energy_per_token": 4.014649202554655, "time": 16.818174, "time_per_token": 0.10780880769230769}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"input df should be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "input", " df", " should", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -2.083801031112671, -0.4364861249923706, -1.686511516571045, -0.0036526883486658335, -0.03279982879757881, -0.20349735021591187, -0.004566479008644819, -0.16911651194095612, -0.0008501967531628907, -0.004810308571904898], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df.iloc[:, :-1]", "tokens": [" df", ".", "il", "oc", "[:", ",", " :-", "1", "]", "\n"], "logprobs": [-0.0028190179727971554, -2.4253506660461426, -1.6853708028793335, -4.768370445162873e-07, -0.0022819212172180414, -0.002299642888829112, -2.9453086853027344, -0.006112097762525082, -0.00051115796668455, -0.6208289265632629], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0010342017048969865, -0.03875140845775604, -0.0002867764269467443, -5.054346183896996e-05, -0.007082238793373108], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0008355463505722582, -7.033323527139146e-06, -0.0010981488740071654, -0.0001358893496217206, -0.0003693613689392805, -1.6093124941107817e-05, -5.960462772236497e-07, -7.998623186722398e-05, -8.535020606359467e-05, -2.145764938177308e-06, -3.8980677345534787e-05, -0.0009553635609336197, -0.0012507957872003317, -6.437280717364047e-06, -3.576278118089249e-07, -5.960462772236497e-07, -7.152555099310121e-07, -2.002696055569686e-05, -0.06956956535577774, -0.003362479852512479, -0.0037285825237631798, -0.0007989790174178779, -0.0016038662288337946, -2.7418097943154862e-06, -1.4305104514278355e-06, -0.004913754761219025, -0.01316909771412611, -1.2755313036905136e-05, -6.437280717364047e-06, -0.0016198145458474755, -0.0020435419864952564, -1.4305104514278355e-06, -8.821448318485636e-06, -0.0003359945258125663, -0.0033993099350482225, -4.768360213347478e-06, -7.152555099310121e-07, -0.006091599818319082, -0.0028865360654890537], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002422039397060871, -1.0728830375228426e-06, 0.0, -1.168244216387393e-05, -8.344646857949556e-07, -0.4702848494052887, -0.2763400375843048, -4.0531076592742465e-06, -1.1920928244535389e-07, -0.0015150746330618858, -0.04194284975528717, -6.318072337307967e-06, -1.311301275563892e-06, -0.05948719382286072, -0.027318604290485382], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.3854863431770355e-05, -8.821448318485636e-06, -0.00017295771976932883, -0.005375810898840427, -2.396077979938127e-05, -0.0021157516166567802, -0.0014329414116218686, -2.407998726994265e-05, -2.9802276912960224e-06, -0.0005567907355725765, -0.0003987947420682758], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007926659309305251, -1.2874520507466514e-05, -1.6569954823353328e-05, -0.000359351426595822, -0.0003319427778478712, -0.0009348789462819695, -0.0017300175968557596, -0.0002928543253801763, -0.0006692553870379925], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.00604799622669816, -3.933898824470816e-06, -1.4781842764932662e-05, -7.462222856702283e-05, -0.069785937666893, -4.0531076592742465e-06, -0.00036971885128878057, -0.00015948931104503572, -0.0010414659045636654, -0.002504785545170307, -0.004170055501163006], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.031931694597005844, -0.21787284314632416], "finish_reason": "stop"}], "metrics": {"energy": 575.2992503404615, "energy_per_token": 4.168835147394649, "time": 15.337306, "time_per_token": 0.11113989855072463}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input df should be a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " should", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.201442837715149, -1.8336284160614014, -0.0007809926173649728, -0.013848411850631237, -0.4906376600265503, -0.0014266322832554579, -0.9010420441627502, -0.005027391016483307, -0.0006691362359561026, -0.00296106212772429], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset='Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "='", "Name", "')", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -1.0170105695724487, -0.002858958672732115, -0.050852127373218536, -0.08472757041454315], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -0.29646873474121094, -3.099436753473128e-06, -2.3841855067985307e-07, -0.00156589865218848, -0.04166845977306366, -5.483612312673358e-06, -1.5497195136049413e-06, -0.05792432650923729, -0.02104325219988823], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.218599158572033e-05, -1.2278481335670222e-05, -0.00019333878299221396, -0.004310364834964275, -1.9550132492440753e-05, -0.0026863461825996637, -0.0018435402307659388, -1.883488948806189e-05, -1.7881377516459906e-06, -0.000440262199845165, -0.0004552758182398975], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0006983225466683507, -1.537788011773955e-05, -2.253030106658116e-05, -0.0003270567976869643, -0.00042024365393444896, -0.0008173224050551653, -0.0018507986096665263, -0.00031799983116798103, -0.0005739472107961774], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007233974989503622, -4.291525328881107e-06, -1.823885577323381e-05, -8.046303264563903e-05, -0.11571279913187027, -3.576272320060525e-06, -0.0006104036583565176, -0.00021514961554203182, -0.0008947421447373927, -0.002380634658038616, -0.005045538302510977], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.030312171205878258, -0.19906367361545563], "finish_reason": "stop"}], "metrics": {"energy": 550.4934012222293, "energy_per_token": 3.9320957230159235, "time": 14.932603, "time_per_token": 0.10666145}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"df must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "df", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -2.560148000717163, -0.2664172947406769, -0.0013246104354038835, -0.023021332919597626, -0.5708572864532471, -0.0015593523858115077, -0.1804036647081375, -0.0006069486844353378, -0.003603514516726136], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=100, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -0.4264790117740631, -1.5582866668701172, -1.1920922133867862e-06, -0.00027581225731410086, -3.576278118089249e-07, -0.008184347301721573, -0.04807381331920624, -0.0027308098506182432, -0.04506043717265129, -0.05827593803405762, -0.1750657856464386, -9.536738616588991e-07, 0.0, -0.00015054999676067382, -0.0803721472620964, -1.1920858014491387e-05, -2.7418097943154862e-06, -0.026745183393359184, -0.006143969018012285], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.111314072157256e-05, -1.0013530300057027e-05, -0.0002520958660170436, -0.0038404534570872784, -2.288792165927589e-05, -0.0026006230618804693, -0.0014111570781096816, -2.7656173188006505e-05, -2.622600959512056e-06, -0.0004117832868359983, -0.0003532739356160164], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007753941463306546, -1.2755313036905136e-05, -1.764281842042692e-05, -0.00037579628406092525, -0.0004101150552742183, -0.0009478605352342129, -0.0011467316653579473, -0.0002978596603497863, -0.0004935238393954933], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0070328782312572, -3.4570634852570947e-06, -1.764281842042692e-05, -7.843663479434326e-05, -0.08102502673864365, -3.099436753473128e-06, -0.0003843760641757399, -0.00022075122979003936, -0.0010513499146327376, -0.0030878742691129446, -0.003588547930121422], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.029026705771684647, -0.20132902264595032], "finish_reason": "stop"}], "metrics": {"energy": 589.3239823369977, "energy_per_token": 4.0090066825646105, "time": 15.993948, "time_per_token": 0.10880236734693877}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError('Input data is not a DataFrame')", "tokens": [" Value", "Error", "('", "Input", " data", " is", " not", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -1.9674487113952637, -0.7768980860710144, -1.2857427597045898, -1.5822151899337769, -0.007049450185149908, -0.0500992015004158, -0.14776493608951569, -0.0023528055753558874, -0.3196556866168976, -0.004913754761219025], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset='Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "='", "Name", "')", "\n"], "logprobs": [-0.007623862475156784, -0.03834410384297371, -0.06821437180042267, -0.01986326277256012, -1.4185804502631072e-05, -2.3841855067985307e-07, -0.16326487064361572, -0.013016612268984318, -1.056503415107727, -0.0035813022404909134, -0.05583864450454712, -0.0778973177075386], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0035263041500002146, -0.12062761187553406, -0.0013905627420172095, -0.01337719801813364, -0.001901724492199719, -0.00038413776201196015, -0.018410397693514824, -0.0003700763627421111, -0.0021098037250339985, -4.708655978902243e-05, -0.2606092095375061], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0012418661499395967, -0.04193919152021408, -0.00024625606602057815, -5.876845170860179e-05, -0.007394326385110617], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0009010545909404755, -8.702239938429557e-06, -0.0011336335446685553, -0.00011455356434453279, -0.0002961912250611931, -9.417489309271332e-06, -7.152555099310121e-07, -6.806619057897478e-05, -8.463501580990851e-05, -2.3841830625315197e-06, -9.274052717955783e-05, -0.0009966888464987278, -0.0013675870141014457, -6.556489552167477e-06, -4.768370445162873e-07, -7.152555099310121e-07, -4.768370445162873e-07, -2.098061486321967e-05, -0.05784635990858078, -0.0025798154529184103, -0.003414635546505451, -0.0008618692518211901, -0.001520192832686007, -2.861018856492592e-06, -1.1920922133867862e-06, -0.005224741064012051, -0.01410315278917551, -1.2516897186287679e-05, -6.6756979322235566e-06, -0.0018008219776675105, -0.0024397389497607946, -1.5497195136049413e-06, -3.302042750874534e-05, -0.00036030475166626275, -0.0046491860412061214, -4.768360213347478e-06, -7.152555099310121e-07, -0.006789590232074261, -0.002062100451439619], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.00027176024741493165, -1.311301275563892e-06, 0.0, -1.4185804502631072e-05, -7.152555099310121e-07, -0.9767085313796997, -0.0203297957777977], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.93382906622719e-05, -1.168244216387393e-05, -0.00021109737281221896, -0.0054296404123306274, -2.586808113846928e-05, -0.0022205475252121687, -0.0014621054287999868, -2.777537883957848e-05, -1.6689286894688848e-06, -0.0004957877099514008, -0.00038044367101974785], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007194076315499842, -1.1920858014491387e-05, -2.90866428258596e-05, -0.0002858230145648122, -0.00047434045700356364, -0.0010251511121168733, -0.001348063233308494, -0.0003091811086051166, -0.0005332001601345837], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0061168367974460125, -4.291525328881107e-06, -1.2874520507466514e-05, -9.178694017464295e-05, -0.09514492005109787, -4.768360213347478e-06, -0.00046206763363443315, -0.00019488819816615433, -0.001001690630801022, -0.0026843249797821045, -0.004875438287854195], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.02392144501209259, -0.20288996398448944], "finish_reason": "stop"}], "metrics": {"energy": 545.3154028167725, "energy_per_token": 4.227251184626143, "time": 14.54043, "time_per_token": 0.11271651162790698}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input df must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.201442837715149, -0.3807627558708191, -0.0004577780782710761, -0.006612088996917009, -0.4643400311470032, -0.0008557948167435825, -0.49766573309898376, -0.0005581013392657042, -0.005088948644697666], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -2.21521258354187, -0.0037309578619897366, -0.01875126175582409, -0.08170032501220703], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.003022984601557255, -0.12427014112472534, -0.00119304982945323, -0.011607962660491467, -0.0016707521863281727, -0.000494715350214392, -0.01958894357085228, -0.0004942387458868325, -0.0022468341048806906, -5.757642793469131e-05, -0.24062922596931458], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.001053493469953537, -0.051048681139945984, -0.00025686301523819566, -4.815939246327616e-05, -0.009462861344218254], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0009583409409970045, -8.34461570775602e-06, -0.0011799524072557688, -0.00016091958968900144, -0.0003251500893384218, -1.4066597032069694e-05, -7.152555099310121e-07, -6.05564855504781e-05, -8.67805938469246e-05, -2.3841830625315197e-06, -4.255681051290594e-05, -0.0008742563077248633, -0.0013561585219576955, -7.748573807475623e-06, -3.576278118089249e-07, -8.344646857949556e-07, -4.768370445162873e-07, -1.8954096958623268e-05, -0.058716800063848495, -0.0025006234645843506, -0.003483182517811656, -0.0008176797418855131, -0.0014427024871110916, -2.50339189733495e-06, -1.1920922133867862e-06, -0.005459992215037346, -0.013592899776995182, -1.2993727978027891e-05, -8.583032467868179e-06, -0.0013506823452189565, -0.002423090161755681, -1.6689286894688848e-06, -1.9073304429184645e-05, -0.00034397884155623615, -0.003443741938099265, -4.291525328881107e-06, -7.152555099310121e-07, -0.006838134024292231, -0.0023594654630869627], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.00026782741770148277, -1.0728830375228426e-06, 0.0, -1.549708758830093e-05, -8.344646857949556e-07, -0.9941617846488953, -0.019952543079853058], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.540453326422721e-05, -1.07287787614041e-05, -0.0002493547508493066, -0.004134560003876686, -1.8596476365928538e-05, -0.002079706871882081, -0.0016070796409621835, -2.6464111215318553e-05, -2.0265558760002023e-06, -0.000485183292767033, -0.00036745471879839897], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007514513563364744, -1.6689160474925302e-05, -2.6225699912174605e-05, -0.00029595286468975246, -0.00045944625162519515, -0.0010170531459152699, -0.0018963703187182546, -0.0002796259068418294, -0.0006610354175791144], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.006288147531449795, -4.0531076592742465e-06, -1.168244216387393e-05, -8.976056415122002e-05, -0.08827775716781616, -4.0531076592742465e-06, -0.00034671969478949904, -0.0001851148990681395, -0.0009890670189633965, -0.00241452781483531, -0.0033635490108281374], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03507818281650543, -0.2004547119140625], "finish_reason": "stop"}], "metrics": {"energy": 549.1412899084092, "energy_per_token": 4.256909224096196, "time": 14.507771, "time_per_token": 0.11246334108527131}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input df must be a pandas DataFrame with columns 'Name', 'Age', 'Score', and 'Category'.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " pandas", " Data", "Frame", " with", " columns", " '", "Name", "'", ",", " '", "Age", "'", ",", " '", "Score", "'", ",", " and", " '", "Category", "'", ".", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.201442837715149, -0.3807627558708191, -0.0004577780782710761, -0.006612088996917009, -1.058072805404663, -0.003007058519870043, -0.00038926175329834223, -2.9064931869506836, -0.0672541931271553, -0.06361725926399231, -0.010750945657491684, -0.0009427393670193851, -0.00040141629870049655, -0.004464777186512947, -0.0007381098694168031, -0.00019870213873218745, -0.001777022727765143, -0.00817299634218216, -0.0003411188081372529, -0.0002464944263920188, -0.00770596181973815, -0.006455401889979839, -0.00048423008411191404, -0.000663894519675523, -0.004340869374573231, -0.138210266828537, -0.002443306613713503, -0.0008138681878335774, -0.0017284705536440015], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset='Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "='", "Name", "')", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -1.0170105695724487, -0.002858958672732115, -0.050852127373218536, -0.08472757041454315], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -1.058118462562561, -0.020894763991236687], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.6954195820726454e-05, -1.0251946150674485e-05, -0.0002294515579706058, -0.005699217785149813, -1.9073304429184645e-05, -0.0028077249880880117, -0.0014844838296994567, -2.169585604860913e-05, -2.7418097943154862e-06, -0.00047100416850298643, -0.00039414744242094457], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007097586058080196, -1.585470999998506e-05, -2.992108420585282e-05, -0.0003430254873819649, -0.0003968881501350552, -0.0010001424234360456, -0.0014944825088605285, -0.0002571013756096363, -0.0006922471220605075], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007169945631176233, -4.291525328881107e-06, -1.2636104656849056e-05, -8.105902816168964e-05, -0.08929319679737091, -4.291525328881107e-06, -0.0005240259342826903, -0.00020597243565134704, -0.0008622265886515379, -0.00244556600227952, -0.004081966355443001], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03058217652142048, -0.21500563621520996], "finish_reason": "stop"}], "metrics": {"energy": 609.9279500274661, "energy_per_token": 4.0392579472017625, "time": 16.177874, "time_per_token": 0.10713823841059603}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input data is not a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " is", " not", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.2347604036331177, -1.5975027084350586, -0.006418921053409576, -0.0358763113617897, -0.22802595794200897, -0.002161073498427868, -0.5388367772102356, -0.08859933167695999, -0.0010030006524175406, -0.005832083523273468], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -2.7591583728790283], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0002787916746456176, -8.344646857949556e-07, 0.0, -1.4185804502631072e-05, -7.152555099310121e-07, -0.9973671436309814, -0.014938394539058208], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-4.7205765440594405e-05, -1.1444026313256472e-05, -0.00021491125517059118, -0.006044560112059116, -2.276871418871451e-05, -0.002255040919408202, -0.001609698054380715, -2.312633478140924e-05, -3.4570634852570947e-06, -0.000519617460668087, -0.00044216870446689427], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0006684214458800852, -1.1324817933200393e-05, -1.9073304429184645e-05, -0.00032217081752605736, -0.0004717191040981561, -0.0008724696817807853, -0.0016911027487367392, -0.0002544794406276196, -0.0006225554971024394], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007386635057628155, -4.172316494077677e-06, -1.1801649634435307e-05, -7.045020902296528e-05, -0.06095409020781517, -3.814689989667386e-06, -0.0003773453936446458, -0.00020013237372040749, -0.0007856381707824767, -0.0022595608606934547, -0.0038448472041636705], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.031999584287405014, -2.3942856788635254, -1.1920922133867862e-06, -2.0265558760002023e-06, -3.6954811548639555e-06, -6.580135959666222e-05, -0.15168620645999908], "finish_reason": "stop"}], "metrics": {"energy": 593.0456877536773, "energy_per_token": 5.068766561997242, "time": 15.561461, "time_per_token": 0.13300394017094017}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input data is not a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " is", " not", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.2347604036331177, -1.5975027084350586, -0.006418921053409576, -0.0358763113617897, -0.22802595794200897, -0.002161073498427868, -0.9847367405891418, -0.0008991489303298295, -0.005940163973718882], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']].to_numpy()", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -1.527451515197754, -1.5224765539169312, -3.111314072157256e-05, -0.0003200257197022438, -0.0014215136179700494, -0.02840247005224228], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -2.7591583728790283], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0002787916746456176, -8.344646857949556e-07, 0.0, -1.4185804502631072e-05, -7.152555099310121e-07, -0.46037599444389343, -0.28456059098243713, -3.2186455882765586e-06, -1.1920928244535389e-07, -0.00126079679466784, -0.04422375559806824, -5.960446742392378e-06, -1.4305104514278355e-06, -0.05789237469434738, -0.02144506201148033], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.2543604902457446e-05, -1.0967194612021558e-05, -0.00023409964342135936, -0.005115515552461147, -1.7165990357170813e-05, -0.0019060078775510192, -0.0017614339012652636, -2.2649508537142538e-05, -1.9073468138230965e-06, -0.00040797016117721796, -0.00037424711626954377], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007905219099484384, -1.2993727978027891e-05, -2.13382354559144e-05, -0.00027497802511788905, -0.0005933669744990766, -0.0010144332190975547, -0.001209481037221849, -0.00029988560709170997, -0.0006619884516112506], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.006157830823212862, -4.291525328881107e-06, -1.2993727978027891e-05, -9.250213042832911e-05, -0.08346790075302124, -4.6491513785440475e-06, -0.00045265440712682903, -0.00018559163436293602, -0.000849601230584085, -0.00300717749632895, -0.004451722372323275], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03936222568154335, -0.21252283453941345], "finish_reason": "stop"}], "metrics": {"energy": 586.5699980106353, "energy_per_token": 4.730403209763188, "time": 15.54628, "time_per_token": 0.1253732258064516}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input df must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -1.201442837715149, -0.3807627558708191, -0.0004577780782710761, -0.006612088996917009, -0.4643400311470032, -0.0008557948167435825, -0.49766573309898376, -0.0005581013392657042, -0.005088948644697666], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -2.21521258354187, -0.0037309578619897366, -0.01875126175582409, -0.08170032501220703], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.003022984601557255, -0.12427014112472534, -0.00119304982945323, -0.011607962660491467, -0.0016707521863281727, -0.000494715350214392, -0.01958894357085228, -0.0004942387458868325, -0.0022468341048806906, -5.757642793469131e-05, -0.24062922596931458], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.001053493469953537, -0.051048681139945984, -0.00025686301523819566, -4.815939246327616e-05, -0.009462861344218254], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0009583409409970045, -8.34461570775602e-06, -0.0011799524072557688, -0.00016091958968900144, -0.0003251500893384218, -1.4066597032069694e-05, -7.152555099310121e-07, -6.05564855504781e-05, -8.67805938469246e-05, -2.3841830625315197e-06, -4.255681051290594e-05, -0.0008742563077248633, -0.0013561585219576955, -7.748573807475623e-06, -3.576278118089249e-07, -8.344646857949556e-07, -4.768370445162873e-07, -1.8954096958623268e-05, -0.058716800063848495, -0.0025006234645843506, -0.003483182517811656, -0.0008176797418855131, -0.0014427024871110916, -2.50339189733495e-06, -1.1920922133867862e-06, -0.005459992215037346, -0.013592899776995182, -1.2993727978027891e-05, -8.583032467868179e-06, -0.0013506823452189565, -0.002423090161755681, -1.6689286894688848e-06, -1.9073304429184645e-05, -0.00034397884155623615, -0.003443741938099265, -4.291525328881107e-06, -7.152555099310121e-07, -0.006838134024292231, -0.0023594654630869627], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.00026782741770148277, -1.0728830375228426e-06, 0.0, -1.549708758830093e-05, -8.344646857949556e-07, -0.9941617846488953, -0.019952543079853058], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.540453326422721e-05, -1.07287787614041e-05, -0.0002493547508493066, -0.004134560003876686, -1.8596476365928538e-05, -0.002079706871882081, -0.0016070796409621835, -2.6464111215318553e-05, -2.0265558760002023e-06, -0.000485183292767033, -0.00036745471879839897], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007514513563364744, -1.6689160474925302e-05, -2.6225699912174605e-05, -0.00029595286468975246, -0.00045944625162519515, -0.0010170531459152699, -0.0018963703187182546, -0.0002796259068418294, -0.0006610354175791144], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.006288147531449795, -4.0531076592742465e-06, -1.168244216387393e-05, -8.976056415122002e-05, -0.08827775716781616, -4.0531076592742465e-06, -0.00034671969478949904, -0.0001851148990681395, -0.0009890670189633965, -0.00241452781483531, -0.0033635490108281374], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03507818281650543, -0.2004547119140625], "finish_reason": "stop"}], "metrics": {"energy": 552.0984119281765, "energy_per_token": 4.279832650606019, "time": 14.50701, "time_per_token": 0.11245744186046511}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.024720966815948486, -0.014657552354037762, -0.00010430268594063818, -0.005032847169786692, -0.0006107610533945262, -0.004224780946969986, -3.564294092939235e-05, -0.008511457592248917, -0.0035695426631718874, -0.011371324770152569], "finish_reason": "stop"}, {"text": " ValueError(\"Input must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.007751503959298134, -6.6756979322235566e-06, -0.15759235620498657, -0.04490874707698822, -0.4170530438423157, -2.5692138671875, -0.0007364421617239714, -0.011370853520929813, -0.33512425422668457, -0.0016613503685221076, -0.39746764302253723, -0.0007983834366314113, -0.00644817715510726], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.0077484287321567535, -0.03606525436043739, -0.06188066303730011, -0.018162721768021584, -1.537788011773955e-05, -2.3841855067985307e-07, -0.16768145561218262, -0.015364030376076698, -0.5255554914474487, -0.004072349984198809, -0.07386955618858337, -0.1057462990283966], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0028190179727971554, -0.11135542392730713, -0.0011185110779479146, -0.013518456369638443, -0.002073521027341485, -0.0004961451631970704, -0.019174810498952866, -0.000550357042811811, -0.002070189919322729, -5.769562994828448e-05, -0.2583436667919159], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0011555430246517062, -0.035780277103185654, -0.0002592465898487717, -5.6980417866725475e-05, -0.007218589540570974], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007696765242144465, -8.940656698541716e-06, -0.0011356578906998038, -0.0001174142598756589, -0.00025817399728111923, -1.1801649634435307e-05, -7.152555099310121e-07, -6.532455881824717e-05, -8.308542601298541e-05, -2.264974000354414e-06, -6.639736966462806e-05, -0.0009566736407577991, -0.001396753010340035, -8.34461570775602e-06, -3.576278118089249e-07, -5.960462772236497e-07, -5.960462772236497e-07, -1.5735502529423684e-05, -0.06632533669471741, -0.002979603596031666, -0.003357489826157689, -0.0009709649602882564, -0.0016049373662099242, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00546580133959651, -0.01289787795394659, -1.3112935448589269e-05, -9.179073458653875e-06, -0.001657065935432911, -0.002080420730635524, -1.4305104514278355e-06, -5.722029527532868e-06, -0.0003146630187984556, -0.0031568000558763742, -3.6954811548639555e-06, -7.152555099310121e-07, -0.008652813732624054, -0.0025500894989818335], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0002406545972917229, -8.344646857949556e-07, 0.0, -1.4424220353248529e-05, -9.536738616588991e-07, -1.058118462562561, -0.020894763991236687], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-3.6954195820726454e-05, -1.0251946150674485e-05, -0.0002294515579706058, -0.005699217785149813, -1.9073304429184645e-05, -0.0028077249880880117, -0.0014844838296994567, -2.169585604860913e-05, -2.7418097943154862e-06, -0.00047100416850298643, -0.00039414744242094457], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0007097586058080196, -1.585470999998506e-05, -2.992108420585282e-05, -0.0003430254873819649, -0.0003968881501350552, -0.0010001424234360456, -0.0014944825088605285, -0.0002571013756096363, -0.0006922471220605075], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.007169945631176233, -4.291525328881107e-06, -1.2636104656849056e-05, -8.105902816168964e-05, -0.08929319679737091, -4.291525328881107e-06, -0.0005240259342826903, -0.00020597243565134704, -0.0008622265886515379, -0.00244556600227952, -0.004081966355443001], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03058217652142048, -0.21500563621520996], "finish_reason": "stop"}], "metrics": {"energy": 548.484072683334, "energy_per_token": 4.219108251410262, "time": 14.527991, "time_per_token": 0.11175377692307692}}
