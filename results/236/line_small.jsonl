{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError('Input must be a pandas DataFrame')", "tokens": [" Value", "Error", "('", "Input", " must", " be", " a", " pandas", " Data", "Frame", "')", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -1.7596702575683594, -0.45862433314323425, -1.4024264812469482, -0.0014800796052441, -0.059434063732624054, -0.3902222514152527, -0.04161403328180313, -0.0055826944299042225, -0.7561514377593994, -0.0019293281948193908], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=\"Name\")", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=", "\"", "Name", "\"", ")", "\n"], "logprobs": [-0.006517345551401377, -0.022867778316140175, -0.09301072359085083, -0.003249604720622301, -0.00016246906307060272, -3.2186455882765586e-06, -0.5574526786804199, -0.32378631830215454, -2.0525550842285156, -0.03885919973254204, -0.002549257129430771, -5.531158240046352e-05, -0.6929808259010315, -0.06367329508066177], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.005656901281327009, -0.7852301001548767, -0.008254341781139374, -0.011124609969556332, -0.02296704426407814, -5.8887653722194955e-05, -0.015912100672721863, -0.0006256530177779496, -0.005663539282977581, -0.0010025242809206247, -0.14770178496837616], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.005041031166911125, -0.03710028901696205, -0.00023409964342135936, -0.00011598391574807465, -0.017787110060453415], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.0008174415561370552, -3.135155202471651e-05, -0.0052565219812095165, -0.0001463782973587513, -0.0008281615446321666, -4.5060096454108134e-05, -0.0002787916746456176, -5.280832192511298e-05, -0.0007814691052772105, -4.1483970562694594e-05, -0.00014935807848814875, -0.000710592488758266, -0.00919583160430193, -1.4305104514278355e-06, -7.271740287251305e-06, -4.291525328881107e-06, -3.3378546504536644e-06, -0.00012265883560758084, -1.8769664764404297], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0017333496361970901, -4.529942543740617e-06, -0.00014840454969089478, -5.9960475482512265e-05, -2.145764938177308e-06, -1.0136559009552002, -0.005762985907495022], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.4596363042946905e-05, -1.9311717551317997e-05, -0.00033718624035827816, -0.007622797507792711, -9.798523387871683e-05, -0.0009432157967239618, -0.0030269066337496042, -0.0003475538978818804, -9.775113539944869e-06, -0.00023135847004596144, -0.0009235645993612707], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.005659983027726412, -7.271740287251305e-06, -0.0005532164941541851, -0.0010893370490521193, -0.0009517907164990902, -0.0002131234941771254, -0.00046885941992513835, -0.0007640779949724674, -0.0006914132391102612], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0024297498166561127, -5.722029527532868e-06, -1.9073468138230965e-06, -0.0015939876902848482, -0.21301591396331787, -0.00014077626110520214, -0.00010108436981681734, -0.001450320822186768, -0.002503001829609275, -0.0025566292461007833, -0.0024465173482894897], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.014537486247718334, -0.5536569356918335], "finish_reason": "stop"}], "metrics": {"energy": 183.4199546165466, "energy_per_token": 1.6524320235724919, "time": 6.934413, "time_per_token": 0.06247218918918919}}
{"outputs": [{"text": " type(df) != pd.core.frame.DataFrame:", "tokens": [" type", "(", "df", ")", " ", "!", "=", " pd", ".", "core", ".", "frame", ".", "DataFrame", ":", "\n"], "logprobs": [-2.744915723800659, -0.000288087350782007, -0.008074971847236156, -0.00031394799589179456, -0.7111983299255371, -3.576278118089249e-07, -1.2516897186287679e-05, -0.11281723529100418, -4.7444173105759546e-05, -1.4967325925827026, -0.0003194298769813031, -0.05006926879286766, -0.000764792668633163, -0.004233327694237232, -0.010938208550214767, -0.014889185316860676], "finish_reason": "stop"}, {"text": " ValueError(\"Input df must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -0.8922780752182007, -0.6708949208259583, -0.001069093239493668, -0.04028657451272011, -0.17665065824985504, -0.01688532717525959, -0.0021423976868391037, -1.0300374031066895, -0.0006206493126228452, -0.004762615077197552], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name', 'Age'], keep='first', inplace=False)", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'", ",", " '", "Age", "']", ",", " keep", "='", "first", "'", ",", " in", "place", "=", "False", ")", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -0.6117913126945496, -0.26825612783432007, -0.5058932304382324, -0.01120524387806654, -2.695293664932251, -0.0002177716523874551, -0.021896278485655785, -0.027638357132673264, -2.341468572616577, -0.005078155547380447, -0.009200911037623882, -0.06781978160142899, -0.22507859766483307, -2.379406452178955, -0.003024886129423976, -0.09221062064170837, -0.00011634149996098131, -0.00158565619494766, -0.0151044437661767, -0.01648414134979248, -0.025285668671131134], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.006171100307255983, -0.8933765292167664, -0.009498167783021927, -0.01057225838303566, -0.029219722375273705, -5.376194530981593e-05, -0.015325525775551796, -0.0006435230607166886, -0.0056154122576117516, -0.001134109916165471, -0.15544483065605164], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.006513910833746195, -0.03484910726547241, -0.00020740265608765185, -0.00011395759065635502, -0.02054551988840103], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0008347125840373337, -3.2305197237292305e-05, -0.004181333351880312, -0.00015889335190877318, -0.0008391196606680751, -5.245071224635467e-05, -0.0003067976504098624, -4.8993817472364753e-05, -0.000683074293192476, -7.974783511599526e-05, -0.00016199229867197573, -0.0007117837085388601, -0.008809510618448257, -1.1920922133867862e-06, -6.794906312279636e-06, -7.510157047363464e-06, -3.2186455882765586e-06, -0.00011991735664196312, -0.12868398427963257, -0.0003784178989008069, -0.00709194503724575, -0.00015948931104503572, -0.023294596001505852, -4.172316494077677e-06, -3.0636318115284666e-05, -0.005340831819921732, -0.018574584275484085, -5.340433563105762e-05, -5.98412734689191e-05, -0.000805053801741451, -0.014533726498484612, 0.0, -4.291525328881107e-06, -0.00013255194062367082, -0.0016042232746258378, -3.2186455882765586e-06, -0.0001062098381225951, -0.11005444824695587, -0.001123035908676684], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.001778569770976901, -4.768360213347478e-06, -0.00015007323236204684, -7.366862701019272e-05, -2.0265558760002023e-06, -0.4749937057495117, -0.6337562799453735, -1.5497195136049413e-06, -6.55629628454335e-05, -0.002277163788676262, -0.10791858285665512, -1.0967194612021558e-05, -0.0003657863999251276, -0.03791046515107155, -0.007909998297691345], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.376194530981593e-05, -1.8954096958623268e-05, -0.00032109825406223536, -0.008401407860219479, -0.0001037067049765028, -0.001076952670700848, -0.002803088864311576, -0.00034290633630007505, -8.702239938429557e-06, -0.000196556793525815, -0.0009968079393729568], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0042360578663647175, -6.6756979322235566e-06, -0.0005731132114306092, -0.0009600082994438708, -0.0007709868368692696, -0.00015162272029556334, -0.00035768310772255063, -0.000582644424866885, -0.0006781900301575661], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0021309780422598124, -5.245195097813848e-06, -1.9073468138230965e-06, -0.0014829363208264112, -0.1548537015914917, -0.0001517419150331989, -0.00010477947944309562, -0.0013148480793461204, -0.002677667187526822, -0.002959516830742359, -0.0024358145892620087], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.010761087760329247, -1.418813943862915, -2.50339189733495e-06, -1.311301275563892e-06, -8.737658936297521e-05, -0.0001497156627010554, -0.1109466701745987], "finish_reason": "stop"}], "metrics": {"energy": 198.15335894584658, "energy_per_token": 1.1936949334087144, "time": 9.037962, "time_per_token": 0.05444555421686747}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"Input df is not a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " is", " not", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -0.8922780752182007, -1.0546209812164307, -0.012325311079621315, -0.033057745546102524, -0.4064657986164093, -0.0037757314275950193, -0.4487195312976837, -0.036139991134405136, -0.0012509147636592388, -0.004933090414851904], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -1.5738484859466553, -0.0012779411626979709, -0.09486708045005798, -0.12686589360237122], "finish_reason": "stop"}, {"text": " df.loc[:, ['Age', 'Score']]", "tokens": [" df", ".", "loc", "[:", ",", " ['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.006094324868172407, -0.6770970225334167, -1.2764766216278076, -0.002376353135332465, -0.000348268891684711, -0.07640163600444794, -0.01671242155134678, -0.04510442167520523, -9.381330892210826e-05, -0.007805797271430492, -0.0007524043321609497, -0.003991613630205393, -0.00035565727739594877, -0.10471566021442413], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.004925379995256662, -0.04259364679455757, -0.0002388668799540028, -0.00010990492592100054, -0.019376637414097786], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.000966915744356811, -3.0636318115284666e-05, -0.0037878446746617556, -0.00014602071314584464, -0.0009502424509264529, -5.1377883210079744e-05, -0.00028391621890477836, -5.090107151772827e-05, -0.0009099871967919171, -6.0437283536884934e-05, -0.00017653337272349745, -0.0007469248375855386, -0.006396060809493065, -1.1920922133867862e-06, -8.106198947643861e-06, -5.960446742392378e-06, -3.099436753473128e-06, -0.0001248043408850208, -0.14306746423244476, -0.00039593485416844487, -0.007469937205314636, -0.0001726001501083374, -0.022317098453640938, -4.172316494077677e-06, -2.658331868587993e-05, -0.00605012895539403, -0.021593933925032616, -4.8993817472364753e-05, -6.4490144723095e-05, -0.0009563163621351123, -0.015500782988965511, 0.0, -3.6954811548639555e-06, -0.0001387499796692282, -0.002003925619646907, -3.6954811548639555e-06, -9.142934868577868e-05, -0.09212267398834229, -0.0010176486102864146], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=10)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", ")", "\n"], "logprobs": [-0.001677416730672121, -4.529942543740617e-06, -0.00016342257731594145, -4.8993817472364753e-05, -2.0265558760002023e-06, -0.4935522675514221, -0.8030127286911011, -8.344646857949556e-07, -0.0041946289129555225, -0.0007637205999344587, -0.0029403807129710913, -0.21312448382377625, -0.005905797705054283, -2.599151134490967, -0.008569018915295601], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.2569914259947836e-05, -1.7762025890988298e-05, -0.0003301552205812186, -0.0077648707665503025, -0.0001389883691444993, -0.0007708676857873797, -0.0026116808876395226, -0.00024732868769206107, -7.510157047363464e-06, -0.00022718709078617394, -0.0007416835287585855], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004897384438663721, -7.152531907195225e-06, -0.0005421360838226974, -0.0008080316474661231, -0.0010182439582422376, -0.00022587609419133514, -0.0003120412293355912, -0.0006700892699882388, -0.0006160030607134104], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0022966694086790085, -5.364403477869928e-06, -2.0265558760002023e-06, -0.0012330556055530906, -0.13897378742694855, -0.00016807096835691482, -8.153582894010469e-05, -0.0012322221882641315, -0.0024958669673651457, -0.0025794587563723326, -0.0022199528757482767], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.012132066302001476, -1.3541226387023926, -2.3841830625315197e-06, -1.1920922133867862e-06, -8.153582894010469e-05, -0.00014554394874721766, -2.295330047607422, -0.005095234606415033], "finish_reason": "stop"}], "metrics": {"energy": 213.44749376487735, "energy_per_token": 1.4520237671080092, "time": 8.205329, "time_per_token": 0.055818564625850345}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"Input should be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " should", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -2.6999106407165527, -0.0048220534808933735, -0.10897500813007355, -0.4485876262187958, -0.06007346883416176, -0.007746180985122919, -0.6503878235816956, -0.012341913767158985, -0.0009280903614126146, -0.005912789609283209], "finish_reason": "stop"}, {"text": " df.drop_duplicates(['Name'], keep='last')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(['", "Name", "']", ",", " keep", "='", "last", "')", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -2.1596734523773193, -0.014269458130002022, -1.4381775856018066, -0.010597028769552708, -0.03406432643532753, -0.08530591428279877, -1.263248324394226, -0.013586784712970257, -0.08739368617534637], "finish_reason": "stop"}, {"text": " df.drop('Category', axis=1)", "tokens": [" df", ".", "drop", "('", "Category", "'", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.006094324868172407, -0.6770970225334167, -0.5751482844352722, -0.7862535715103149, -0.346577525138855, -0.0038852221332490444, -9.881961887003854e-05, -0.002539625857025385, -0.009124130941927433, -0.0014494876377284527, -0.0071874624118208885, -0.0398557223379612], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.004925379995256662, -0.04259364679455757, -0.0002388668799540028, -0.00010990492592100054, -0.019376637414097786], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.000966915744356811, -3.0636318115284666e-05, -0.0037878446746617556, -0.00014602071314584464, -0.0009502424509264529, -5.1377883210079744e-05, -0.00028391621890477836, -5.090107151772827e-05, -0.0009099871967919171, -6.0437283536884934e-05, -0.00017653337272349745, -0.0007469248375855386, -0.006396060809493065, -1.1920922133867862e-06, -8.106198947643861e-06, -5.960446742392378e-06, -3.099436753473128e-06, -0.0001248043408850208, -0.14306746423244476, -0.00039593485416844487, -0.007469937205314636, -0.0001726001501083374, -0.022317098453640938, -4.172316494077677e-06, -2.658331868587993e-05, -0.00605012895539403, -0.021593933925032616, -4.8993817472364753e-05, -6.4490144723095e-05, -0.0009563163621351123, -0.015500782988965511, 0.0, -3.6954811548639555e-06, -0.0001387499796692282, -0.002003925619646907, -3.6954811548639555e-06, -9.142934868577868e-05, -0.09212267398834229, -0.0010176486102864146], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.001677416730672121, -4.529942543740617e-06, -0.00016342257731594145, -4.8993817472364753e-05, -2.0265558760002023e-06, -0.4935522675514221, -0.8308542966842651, -1.5497195136049413e-06, -7.116541382856667e-05, -0.002022246830165386, -0.09661512821912766, -1.0490362910786644e-05, -0.00041631137719377875, -0.04311329871416092, -0.007315633352845907], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-4.9470632802695036e-05, -1.6689160474925302e-05, -0.0003083468764089048, -0.008814710192382336, -0.00012814177898690104, -0.0008044582791626453, -0.00271428469568491, -0.0004223884898237884, -7.271740287251305e-06, -0.0002261144545627758, -0.0007681279676035047], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004468812141567469, -7.510157047363464e-06, -0.0005557184922508895, -0.0011148196645081043, -0.0010889797704294324, -0.00018869050836656243, -0.0003634030872490257, -0.0006556744920089841, -0.0007500219508074224], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.002039853949099779, -4.291525328881107e-06, -1.7881377516459906e-06, -0.0009982370538637042, -0.14612524211406708, -0.00013243274588603526, -8.606540359323844e-05, -0.0013649680186063051, -0.0031931623816490173, -0.0028514699079096317, -0.00206864345818758], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.011607491411268711, -0.6349933743476868], "finish_reason": "stop"}], "metrics": {"energy": 173.82037677955637, "energy_per_token": 1.2070859498580304, "time": 7.987626, "time_per_token": 0.055469624999999995}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"df is not a valid DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "df", " is", " not", " a", " valid", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -1.8769367933273315, -1.8498249053955078, -0.016610657796263695, -0.033138129860162735, -3.1914825439453125, -0.526346743106842, -0.0035786889493465424, -0.9866439700126648, -0.0005285535007715225, -0.004847678355872631], "finish_reason": "stop"}, {"text": " df.drop_duplicates()", "tokens": [" df", ".", "drop", "_", "dup", "licates", "()", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -2.025205373764038, -0.0852770209312439], "finish_reason": "stop"}, {"text": " df.loc[:, ['Age', 'Score']]", "tokens": [" df", ".", "loc", "[:", ",", " ['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.006094324868172407, -0.6770970225334167, -1.2764766216278076, -0.002376353135332465, -0.000348268891684711, -0.07640163600444794, -0.01671242155134678, -0.04510442167520523, -9.381330892210826e-05, -0.007805797271430492, -0.0007524043321609497, -0.003991613630205393, -0.00035565727739594877, -0.10471566021442413], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.004925379995256662, -0.04259364679455757, -0.0002388668799540028, -0.00010990492592100054, -0.019376637414097786], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.000966915744356811, -3.0636318115284666e-05, -0.0037878446746617556, -0.00014602071314584464, -0.0009502424509264529, -5.1377883210079744e-05, -0.00028391621890477836, -5.090107151772827e-05, -0.0009099871967919171, -6.0437283536884934e-05, -0.00017653337272349745, -0.0007469248375855386, -0.006396060809493065, -1.1920922133867862e-06, -8.106198947643861e-06, -5.960446742392378e-06, -3.099436753473128e-06, -0.0001248043408850208, -0.14306746423244476, -0.00039593485416844487, -0.007469937205314636, -0.0001726001501083374, -0.022317098453640938, -4.172316494077677e-06, -2.658331868587993e-05, -0.00605012895539403, -0.021593933925032616, -4.8993817472364753e-05, -6.4490144723095e-05, -0.0009563163621351123, -0.015500782988965511, 0.0, -3.6954811548639555e-06, -0.0001387499796692282, -0.002003925619646907, -3.6954811548639555e-06, -9.142934868577868e-05, -0.09212267398834229, -0.0010176486102864146], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=10, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.001677416730672121, -4.529942543740617e-06, -0.00016342257731594145, -4.8993817472364753e-05, -2.0265558760002023e-06, -0.4935522675514221, -0.8030127286911011, -8.344646857949556e-07, -0.0041946289129555225, -0.0007637205999344587, -0.0029403807129710913, -0.21312448382377625, -0.005905797705054283, -1.4125399589538574, -0.08322430402040482, -1.7881377516459906e-06, -3.0874729418428615e-05, -0.00025567124248482287, -0.16644197702407837, -5.960446742392378e-06, -0.0003687655262183398, -0.03872400149703026, -0.006416789256036282], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.2569914259947836e-05, -1.7762025890988298e-05, -0.0003301552205812186, -0.0077648707665503025, -0.0001389883691444993, -0.0007708676857873797, -0.0026116808876395226, -0.00024732868769206107, -7.510157047363464e-06, -0.00022718709078617394, -0.0007416835287585855], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004897384438663721, -7.152531907195225e-06, -0.0005421360838226974, -0.0008080316474661231, -0.0010182439582422376, -0.00022587609419133514, -0.0003120412293355912, -0.0006700892699882388, -0.0006160030607134104], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0022966694086790085, -5.364403477869928e-06, -2.0265558760002023e-06, -0.0012330556055530906, -0.13897378742694855, -0.00016807096835691482, -8.153582894010469e-05, -0.0012322221882641315, -0.0024958669673651457, -0.0025794587563723326, -0.0022199528757482767], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.012132066302001476, -0.517693042755127], "finish_reason": "stop"}], "metrics": {"energy": 181.73497195053102, "energy_per_token": 1.2447600818529523, "time": 8.214293, "time_per_token": 0.0562622808219178}}
{"outputs": [{"text": " type(df) is not pd.core.frame.DataFrame:", "tokens": [" type", "(", "df", ")", " is", " not", " pd", ".", "core", ".", "frame", ".", "DataFrame", ":", "\n"], "logprobs": [-2.744915723800659, -0.000288087350782007, -0.008074971847236156, -0.00031394799589179456, -0.8336749076843262, -0.035604625940322876, -0.10124855488538742, -0.0003530356043484062, -1.493013620376587, -0.00010573305189609528, -0.017294317483901978, -0.0003763920976780355, -0.0023480483796447515, -0.013192862272262573, -0.01560805831104517], "finish_reason": "stop"}, {"text": " ValueError(\"Input should be a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " should", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -2.6999106407165527, -0.0048220534808933735, -0.10897500813007355, -1.2820055484771729, -0.010379618965089321, -0.8055285811424255, -0.023960666730999947, -0.0008380476501770318, -0.005144572351127863], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -1.5738484859466553, -0.0012779411626979709, -0.09486708045005798, -0.12686589360237122], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.006094324868172407, -0.7573372721672058, -0.006859090179204941, -0.011802133172750473, -0.026874469593167305, -5.721882189391181e-05, -0.017561886459589005, -0.0008183944155462086, -0.005558984819799662, -0.0012390087358653545, -0.15311738848686218], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.005325180012732744, -0.0335046760737896, -0.0002115741081070155, -0.0001294529065489769, -0.020585693418979645], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007993363542482257, -2.729855441430118e-05, -0.003809221088886261, -0.00013779645087197423, -0.000873065204359591, -4.5536911784438416e-05, -0.0003513672563713044, -4.911301948595792e-05, -0.0008779485360719264, -7.629103492945433e-05, -0.00016282663273159415, -0.000759074988309294, -0.006154513452202082, -1.311301275563892e-06, -8.106198947643861e-06, -4.529942543740617e-06, -3.3378546504536644e-06, -0.00011145447206217796, -0.16052314639091492, -0.0005254556890577078, -0.00600202102214098, -0.00016807096835691482, -0.025919169187545776, -5.125986263010418e-06, -3.182837463100441e-05, -0.005514172837138176, -0.019378039985895157, -5.054346183896996e-05, -7.30726242181845e-05, -0.0008069596369750798, -0.015480241738259792, 0.0, -4.172316494077677e-06, -0.00013076403411105275, -0.0016499252524226904, -3.6954811548639555e-06, -8.296622399939224e-05, -0.11567584425210953, -0.001039560534991324], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=10, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0015948207583278418, -4.291525328881107e-06, -0.00013624693383462727, -6.4490144723095e-05, -2.0265558760002023e-06, -0.4877285957336426, -0.8723759055137634, -9.536738616588991e-07, -0.0038836784660816193, -0.0008102948195300996, -0.0026534132193773985, -0.2120712548494339, -0.0049558659084141254, -1.5495755672454834, -0.09409667551517487, -1.7881377516459906e-06, -2.992108420585282e-05, -0.0002637753786984831, -0.18291588127613068, -5.960446742392378e-06, -0.00037508129025809467, -0.03785112500190735, -0.007006125058978796], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.507317473529838e-05, -1.7523612768854946e-05, -0.000277123210253194, -0.005840853322297335, -0.00014172980445437133, -0.0009788251481950283, -0.002594678197056055, -0.0003321811091154814, -8.22540732769994e-06, -0.00022075122979003936, -0.0008239926537498832], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00407009432092309, -7.271740287251305e-06, -0.0005345107638277113, -0.001019673072732985, -0.0011155341053381562, -0.00016675988445058465, -0.00036971885128878057, -0.0007518087513744831, -0.000614335120189935], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0023776614107191563, -4.887569048150908e-06, -1.6689286894688848e-06, -0.0014092524070292711, -0.15464048087596893, -0.00014077626110520214, -9.929640509653836e-05, -0.0013937769690528512, -0.002259679604321718, -0.0022964314557611942, -0.0019152885070070624], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.011910160072147846, -0.52853924036026], "finish_reason": "stop"}], "metrics": {"energy": 219.77333471107477, "energy_per_token": 1.4651555647404984, "time": 8.407612, "time_per_token": 0.05605074666666667}}
{"outputs": [{"text": " type(df) is not pd.DataFrame:", "tokens": [" type", "(", "df", ")", " is", " not", " pd", ".", "DataFrame", ":", "\n"], "logprobs": [-2.744915723800659, -0.000288087350782007, -0.008074971847236156, -0.00031394799589179456, -0.8336749076843262, -0.035604625940322876, -0.10124855488538742, -0.0003530356043484062, -0.25618380308151245, -0.011959986761212349, -0.0175151489675045], "finish_reason": "stop"}, {"text": " ValueError(\"Input df should be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " should", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -0.8922780752182007, -2.1992170810699463, -0.0036607650108635426, -0.07582828402519226, -0.248190775513649, -0.029988877475261688, -0.003563365899026394, -1.0229873657226562, -0.0009364272118546069, -0.003986864350736141], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -1.5738484859466553, -0.0012779411626979709, -0.09486708045005798, -0.12686589360237122], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.006094324868172407, -0.7573372721672058, -0.006859090179204941, -0.011802133172750473, -0.026874469593167305, -5.721882189391181e-05, -0.017561886459589005, -0.0008183944155462086, -0.005558984819799662, -0.0012390087358653545, -0.15311738848686218], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.005325180012732744, -0.0335046760737896, -0.0002115741081070155, -0.0001294529065489769, -0.020585693418979645], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007993363542482257, -2.729855441430118e-05, -0.003809221088886261, -0.00013779645087197423, -0.000873065204359591, -4.5536911784438416e-05, -0.0003513672563713044, -4.911301948595792e-05, -0.0008779485360719264, -7.629103492945433e-05, -0.00016282663273159415, -0.000759074988309294, -0.006154513452202082, -1.311301275563892e-06, -8.106198947643861e-06, -4.529942543740617e-06, -3.3378546504536644e-06, -0.00011145447206217796, -0.16052314639091492, -0.0005254556890577078, -0.00600202102214098, -0.00016807096835691482, -0.025919169187545776, -5.125986263010418e-06, -3.182837463100441e-05, -0.005514172837138176, -0.019378039985895157, -5.054346183896996e-05, -7.30726242181845e-05, -0.0008069596369750798, -0.015480241738259792, 0.0, -4.172316494077677e-06, -0.00013076403411105275, -0.0016499252524226904, -3.6954811548639555e-06, -8.296622399939224e-05, -0.11567584425210953, -0.001039560534991324], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0015948207583278418, -4.291525328881107e-06, -0.00013624693383462727, -6.4490144723095e-05, -2.0265558760002023e-06, -0.952263355255127, -0.004364607855677605], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.566918844124302e-05, -1.8715683836489916e-05, -0.00028701478731818497, -0.005505755078047514, -0.00011574551899684593, -0.0008102948195300996, -0.0029706894420087337, -0.00032824851223267615, -8.4638240878121e-06, -0.0001829695247579366, -0.0009504806366749108], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004500261507928371, -8.583032467868179e-06, -0.000512111175339669, -0.001384372473694384, -0.0008474572678096592, -0.00015567521040793508, -0.00032860602368600667, -0.0006270825979299843, -0.0005278385942801833], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.00255555915646255, -4.887569048150908e-06, -1.7881377516459906e-06, -0.0015021003782749176, -0.14590653777122498, -0.00013720047718379647, -9.691245941212401e-05, -0.0012224590172991157, -0.003136717015877366, -0.003040693001821637, -0.002267529722303152], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.013687916100025177, -0.5632574558258057], "finish_reason": "stop"}], "metrics": {"energy": 161.69851940536492, "energy_per_token": 1.2343398427890453, "time": 7.3675156, "time_per_token": 0.05624057709923664}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"Input df is not a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " is", " not", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -0.8922780752182007, -1.0546209812164307, -0.012325311079621315, -0.033057745546102524, -1.2211744785308838, -0.02679021656513214, -0.0037539980839937925, -0.40959304571151733, -0.024282308295369148, -0.0011298231547698379, -0.004491716623306274], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -1.5738484859466553, -0.0012779411626979709, -0.09486708045005798, -0.12686589360237122], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.006094324868172407, -0.7573372721672058, -0.006859090179204941, -0.011802133172750473, -0.026874469593167305, -5.721882189391181e-05, -0.017561886459589005, -0.0008183944155462086, -0.005558984819799662, -0.0012390087358653545, -0.15311738848686218], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.005325180012732744, -0.0335046760737896, -0.0002115741081070155, -0.0001294529065489769, -0.020585693418979645], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007993363542482257, -2.729855441430118e-05, -0.003809221088886261, -0.00013779645087197423, -0.000873065204359591, -4.5536911784438416e-05, -0.0003513672563713044, -4.911301948595792e-05, -0.0008779485360719264, -7.629103492945433e-05, -0.00016282663273159415, -0.000759074988309294, -0.006154513452202082, -1.311301275563892e-06, -8.106198947643861e-06, -4.529942543740617e-06, -3.3378546504536644e-06, -0.00011145447206217796, -0.16052314639091492, -0.0005254556890577078, -0.00600202102214098, -0.00016807096835691482, -0.025919169187545776, -5.125986263010418e-06, -3.182837463100441e-05, -0.005514172837138176, -0.019378039985895157, -5.054346183896996e-05, -7.30726242181845e-05, -0.0008069596369750798, -0.015480241738259792, 0.0, -4.172316494077677e-06, -0.00013076403411105275, -0.0016499252524226904, -3.6954811548639555e-06, -8.296622399939224e-05, -0.11567584425210953, -0.001039560534991324], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0015948207583278418, -4.291525328881107e-06, -0.00013624693383462727, -6.4490144723095e-05, -2.0265558760002023e-06, -0.952263355255127, -0.004364607855677605], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.566918844124302e-05, -1.8715683836489916e-05, -0.00028701478731818497, -0.005505755078047514, -0.00011574551899684593, -0.0008102948195300996, -0.0029706894420087337, -0.00032824851223267615, -8.4638240878121e-06, -0.0001829695247579366, -0.0009504806366749108], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004500261507928371, -8.583032467868179e-06, -0.000512111175339669, -0.001384372473694384, -0.0008474572678096592, -0.00015567521040793508, -0.00032860602368600667, -0.0006270825979299843, -0.0005278385942801833], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.00255555915646255, -4.887569048150908e-06, -1.7881377516459906e-06, -0.0015021003782749176, -0.14590653777122498, -0.00013720047718379647, -9.691245941212401e-05, -0.0012224590172991157, -0.003136717015877366, -0.003040693001821637, -0.002267529722303152], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.013687916100025177, -0.5632574558258057], "finish_reason": "stop"}], "metrics": {"energy": 166.92903438091278, "energy_per_token": 1.274267438022235, "time": 7.581786, "time_per_token": 0.05787622900763359}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"Input df must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -0.8922780752182007, -0.6708949208259583, -0.001069093239493668, -0.04028657451272011, -0.17665065824985504, -0.01688532717525959, -0.0021423976868391037, -0.5091519951820374, -0.007034653797745705, -0.0005965837044641376, -0.004448043182492256], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset='Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "='", "Name", "')", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -0.6117913126945496, -0.26825612783432007, -1.7761225700378418, -0.0017865424742922187, -0.15561002492904663, -0.08929570764303207], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']].values", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", ".", "values", "\n"], "logprobs": [-0.006171100307255983, -0.8933765292167664, -0.009498167783021927, -0.01057225838303566, -0.029219722375273705, -5.376194530981593e-05, -0.015325525775551796, -0.0006435230607166886, -0.0056154122576117516, -0.001134109916165471, -2.0392282009124756, -0.3435550034046173, -0.05618693679571152], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.006513910833746195, -0.03484910726547241, -0.00020740265608765185, -0.00011395759065635502, -0.02054551988840103], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0008347125840373337, -3.2305197237292305e-05, -0.004181333351880312, -0.00015889335190877318, -0.0008391196606680751, -5.245071224635467e-05, -0.0003067976504098624, -4.8993817472364753e-05, -0.000683074293192476, -7.974783511599526e-05, -0.00016199229867197573, -0.0007117837085388601, -0.008809510618448257, -1.1920922133867862e-06, -6.794906312279636e-06, -7.510157047363464e-06, -3.2186455882765586e-06, -0.00011991735664196312, -0.12868398427963257, -0.0003784178989008069, -0.00709194503724575, -0.00015948931104503572, -0.023294596001505852, -4.172316494077677e-06, -3.0636318115284666e-05, -0.005340831819921732, -0.018574584275484085, -5.340433563105762e-05, -5.98412734689191e-05, -0.000805053801741451, -0.014533726498484612, 0.0, -4.291525328881107e-06, -0.00013255194062367082, -0.0016042232746258378, -3.2186455882765586e-06, -0.0001062098381225951, -0.11005444824695587, -0.001123035908676684], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.001778569770976901, -4.768360213347478e-06, -0.00015007323236204684, -7.366862701019272e-05, -2.0265558760002023e-06, -0.4749937057495117, -0.6337562799453735, -1.5497195136049413e-06, -6.55629628454335e-05, -0.002277163788676262, -0.10791858285665512, -1.0967194612021558e-05, -0.0003657863999251276, -0.03791046515107155, -0.007909998297691345], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.376194530981593e-05, -1.8954096958623268e-05, -0.00032109825406223536, -0.008401407860219479, -0.0001037067049765028, -0.001076952670700848, -0.002803088864311576, -0.00034290633630007505, -8.702239938429557e-06, -0.000196556793525815, -0.0009968079393729568], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0042360578663647175, -6.6756979322235566e-06, -0.0005731132114306092, -0.0009600082994438708, -0.0007709868368692696, -0.00015162272029556334, -0.00035768310772255063, -0.000582644424866885, -0.0006781900301575661], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0021309780422598124, -5.245195097813848e-06, -1.9073468138230965e-06, -0.0014829363208264112, -0.1548537015914917, -0.0001517419150331989, -0.00010477947944309562, -0.0013148480793461204, -0.002677667187526822, -0.002959516830742359, -0.0024358145892620087], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.010761087760329247, -0.503063440322876], "finish_reason": "stop"}], "metrics": {"energy": 177.33843386459353, "energy_per_token": 1.2401289081440108, "time": 7.9973173, "time_per_token": 0.0559252958041958}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(f\"df should be a pandas.DataFrame, got {type(df).__name__} instead.\")", "tokens": [" Value", "Error", "(", "f", "\"", "df", " should", " be", " a", " pandas", ".", "DataFrame", ",", " got", " {", "type", "(", "df", ")", ".", "__", "name", "__", "}", " instead", ".", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -2.6656036376953125, -0.18848910927772522, -2.2480990886688232, -1.6948421001434326, -0.009945600293576717, -0.32563385367393494, -0.4224926829338074, -2.9751715660095215, -0.017427993938326836, -0.666199803352356, -1.29938542842865, -0.12184400111436844, -0.039119113236665726, -0.0002530493075028062, -0.004796190652996302, -1.886291265487671, -0.0026151288766413927, -0.0009171332349069417, -0.005097606685012579, -0.00046790618216618896, -0.4839189946651459, -0.12414706498384476, -0.4740394353866577, -0.015254615806043148, -0.0016364767216145992, -0.0073806000873446465], "finish_reason": "stop"}, {"text": " df.drop_duplicates(keep='first')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "keep", "='", "first", "')", "\n"], "logprobs": [-0.005413396749645472, -0.02009427733719349, -0.09362435340881348, -0.003321608528494835, -0.00016127715934999287, -3.099436753473128e-06, -0.6001419425010681, -1.4775701761245728, -0.5432405471801758, -0.0691351369023323, -0.17481449246406555, -0.10413791239261627], "finish_reason": "stop"}, {"text": " df.loc[:, ['Age', 'Score']]", "tokens": [" df", ".", "loc", "[:", ",", " ['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.005764171481132507, -0.663623571395874, -1.1956679821014404, -0.002305827336385846, -0.0004332319076638669, -0.08673140406608582, -0.02036016620695591, -0.04243987053632736, -8.928377064876258e-05, -0.00682061119005084, -0.0008557948167435825, -0.0042988513596355915, -0.0004219118563923985, -0.08445810526609421], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.00511693861335516, -0.04227178543806076, -0.00022968991834204644, -0.00010692501382436603, -0.02080404944717884], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0009042703313753009, -2.992108420585282e-05, -0.0036554201506078243, -0.00017128908075392246, -0.000912369170691818, -4.7205765440594405e-05, -0.0002926159941125661, -5.721882189391181e-05, -0.0008925982983782887, -6.568216485902667e-05, -0.00017569905321579427, -0.0008086272282525897, -0.006054750178009272, -1.311301275563892e-06, -8.583032467868179e-06, -5.8412379075889476e-06, -3.6954811548639555e-06, -0.00012015574611723423, -0.1522301733493805, -0.0004463391669560224, -0.006690126843750477, -0.00013755806139670312, -0.026024403050541878, -5.125986263010418e-06, -3.123234637314454e-05, -0.005359211005270481, -0.021909106522798538, -4.51792984677013e-05, -7.390703103737906e-05, -0.0009828743059188128, -0.016220975667238235, 0.0, -3.933898824470816e-06, -0.00013648532330989838, -0.0018197420286014676, -4.172316494077677e-06, -9.595887240720913e-05, -0.08965521305799484, -0.0011213688412681222], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.001769763883203268, -4.768360213347478e-06, -0.00016723664884921163, -6.83045873302035e-05, -1.7881377516459906e-06, -0.5179675221443176, -0.6630240678787231, -1.311301275563892e-06, -5.709961988031864e-05, -0.00212395959533751, -0.10082497447729111, -1.2278481335670222e-05, -0.0003575639275368303, -0.034472111612558365, -0.0077989366836845875], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.173549288883805e-05, -1.8358061424805783e-05, -0.0003300360403954983, -0.006001309957355261, -9.97731985989958e-05, -0.001085883704945445, -0.00260300119407475, -0.0002864189154934138, -9.417489309271332e-06, -0.0001984637783607468, -0.0010064542293548584], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004792631138116121, -6.794906312279636e-06, -0.0005747812101617455, -0.0008752091089263558, -0.0011294659925624728, -0.00018940561858471483, -0.00033396866638213396, -0.0007334641413763165, -0.0007441850611940026], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0021293126046657562, -4.6491513785440475e-06, -2.0265558760002023e-06, -0.001209242851473391, -0.1436627060174942, -0.00011967896716669202, -0.00011085849109804258, -0.0011181537993252277, -0.0028389885555952787, -0.00246863579377532, -0.002317126141861081], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.01245435606688261, -0.5355441570281982], "finish_reason": "stop"}], "metrics": {"energy": 188.69142490386957, "energy_per_token": 1.201856209578787, "time": 8.626266, "time_per_token": 0.054944369426751585}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"Input must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -1.7087262868881226, -0.001128513365983963, -0.040666304528713226, -0.36493930220603943, -0.034728217869997025, -0.005109704099595547, -0.9543858766555786, -0.0006890306831337512, -0.004642185289412737], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -1.5738484859466553, -0.0012779411626979709, -0.09486708045005798, -0.12686589360237122], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.006094324868172407, -0.7573372721672058, -0.006859090179204941, -0.011802133172750473, -0.026874469593167305, -5.721882189391181e-05, -0.017561886459589005, -0.0008183944155462086, -0.005558984819799662, -0.0012390087358653545, -0.15311738848686218], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.005325180012732744, -0.0335046760737896, -0.0002115741081070155, -0.0001294529065489769, -0.020585693418979645], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0007993363542482257, -2.729855441430118e-05, -0.003809221088886261, -0.00013779645087197423, -0.000873065204359591, -4.5536911784438416e-05, -0.0003513672563713044, -4.911301948595792e-05, -0.0008779485360719264, -7.629103492945433e-05, -0.00016282663273159415, -0.000759074988309294, -0.006154513452202082, -1.311301275563892e-06, -8.106198947643861e-06, -4.529942543740617e-06, -3.3378546504536644e-06, -0.00011145447206217796, -0.16052314639091492, -0.0005254556890577078, -0.00600202102214098, -0.00016807096835691482, -0.025919169187545776, -5.125986263010418e-06, -3.182837463100441e-05, -0.005514172837138176, -0.019378039985895157, -5.054346183896996e-05, -7.30726242181845e-05, -0.0008069596369750798, -0.015480241738259792, 0.0, -4.172316494077677e-06, -0.00013076403411105275, -0.0016499252524226904, -3.6954811548639555e-06, -8.296622399939224e-05, -0.11567584425210953, -0.001039560534991324], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=100, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0015948207583278418, -4.291525328881107e-06, -0.00013624693383462727, -6.4490144723095e-05, -2.0265558760002023e-06, -0.4877285957336426, -0.8723759055137634, -9.536738616588991e-07, -0.0038836784660816193, -0.0008102948195300996, -0.0026534132193773985, -0.2120712548494339, -0.0049558659084141254, -0.3128774166107178, -0.3613273799419403, -0.0862169861793518, -1.7881377516459906e-06, -2.884823152271565e-05, -0.0002616301644593477, -0.18236559629440308, -5.960446742392378e-06, -0.0002935693773906678, -0.045520830899477005, -0.005801505874842405], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.507317473529838e-05, -1.7523612768854946e-05, -0.000277123210253194, -0.005840853322297335, -0.00014172980445437133, -0.0009788251481950283, -0.002594678197056055, -0.0003321811091154814, -8.22540732769994e-06, -0.00022075122979003936, -0.0008239926537498832], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00407009432092309, -7.271740287251305e-06, -0.0005345107638277113, -0.001019673072732985, -0.0011155341053381562, -0.00016675988445058465, -0.00036971885128878057, -0.0007518087513744831, -0.000614335120189935], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0023776614107191563, -4.887569048150908e-06, -1.6689286894688848e-06, -0.0014092524070292711, -0.15464048087596893, -0.00014077626110520214, -9.929640509653836e-05, -0.0013937769690528512, -0.002259679604321718, -0.0022964314557611942, -0.0019152885070070624], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.011910160072147846, -0.52853924036026], "finish_reason": "stop"}], "metrics": {"energy": 217.96976982688898, "energy_per_token": 1.4929436289512943, "time": 8.197117, "time_per_token": 0.05614463698630137}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(f'Invalid input type for df - got {type(df).__name__} instead of a DataFrame')", "tokens": [" Value", "Error", "(", "f", "'", "Invalid", " input", " type", " for", " df", " -", " got", " {", "type", "(", "df", ")", ".", "__", "name", "__", "}", " instead", " of", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -2.6656036376953125, -1.9824286699295044, -3.288066864013672, -0.32701846957206726, -2.3803606033325195, -2.4698879718780518, -0.38790902495384216, -3.6954398155212402, -3.131699323654175, -0.2972758710384369, -0.013828307390213013, -0.0009390473715029657, -0.006461679469794035, -2.639988899230957, -0.006451019551604986, -0.0005452338373288512, -0.002821038942784071, -0.000871278636623174, -0.033279161900281906, -1.4613173007965088, -0.5061912536621094, -2.857149600982666, -0.7197892665863037, -0.007694250904023647, -0.5623756051063538, -0.0029943413101136684], "finish_reason": "stop"}, {"text": " df.drop_duplicates(['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(['", "Name", "'])", "\n"], "logprobs": [-0.005413396749645472, -0.02009427733719349, -0.09362435340881348, -0.003321608528494835, -0.00016127715934999287, -3.099436753473128e-06, -2.177341938018799, -0.014394257217645645, -0.3809399902820587, -0.10426530241966248], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.006118851248174906, -0.7725006341934204, -0.009697353467345238, -0.010585470125079155, -0.02660520188510418, -6.41325386823155e-05, -0.01934834197163582, -0.0006899837171658874, -0.006369527895003557, -0.0012413900112733245, -0.13768520951271057], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.005957583896815777, -0.039830178022384644, -0.00023052419419400394, -0.00010096516780322418, -0.017728203907608986], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0008953376673161983, -2.90866428258596e-05, -0.004165307153016329, -0.00014029949670657516, -0.0007674132939428091, -4.541770613286644e-05, -0.0003524397616274655, -5.495397272170521e-05, -0.0008294717408716679, -6.925819616299123e-05, -0.00016246906307060272, -0.0008231588872149587, -0.006630680989474058, -1.0728830375228426e-06, -9.059865078597795e-06, -3.933898824470816e-06, -3.576272320060525e-06, -0.00012444675667211413, -0.14164035022258759, -0.00043156370520591736, -0.006009130738675594, -0.00014280252798926085, -0.02276092953979969, -3.576272320060525e-06, -3.0040289857424796e-05, -0.005375218112021685, -0.02030094340443611, -4.9828242481453344e-05, -7.259582343976945e-05, -0.000897957943379879, -0.015330925583839417, 0.0, -4.172316494077677e-06, -0.00015031162183731794, -0.0020165364257991314, -4.0531076592742465e-06, -8.725739462533966e-05, -0.0875769630074501, -0.0012081712484359741], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=100, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0017062166007235646, -4.291525328881107e-06, -0.00014304091746453196, -4.60137271147687e-05, -2.264974000354414e-06, -0.4227368235588074, -0.8532868027687073, -7.152555099310121e-07, -0.0032169281039386988, -0.0008761619683355093, -0.002595986006781459, -0.19849133491516113, -0.005382687784731388, -0.3574254512786865, -0.41256436705589294, -0.08166582882404327, -2.264974000354414e-06, -2.4199192921514623e-05, -0.00024375328212045133, -0.20593693852424622, -6.437280717364047e-06, -0.00037889453233219683, -0.04685501381754875, -0.005631652660667896], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.411955135059543e-05, -1.6927575416048057e-05, -0.0002809368306770921, -0.007260721642524004, -0.00014995403762441128, -0.0008231588872149587, -0.002762789139524102, -0.0003095386200584471, -8.583032467868179e-06, -0.0001892864383989945, -0.0009232072625309229], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0046105035580694675, -6.9141146923357155e-06, -0.0005690624238923192, -0.0010175295174121857, -0.0009211826254613698, -0.00017581824795342982, -0.0003116837178822607, -0.0007142852991819382, -0.0006139777251519263], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.002162500750273466, -4.410734163684538e-06, -1.7881377516459906e-06, -0.0014106809394434094, -0.13604700565338135, -0.00011824862303910777, -9.846202738117427e-05, -0.0015049570938572288, -0.0026154855731874704, -0.003060896648094058, -0.0022322041913866997], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy"], "logprobs": [-0.012712513096630573], "finish_reason": "stop"}], "metrics": {"energy": 208.8657868328095, "energy_per_token": 1.3054111677050595, "time": 9.274686, "time_per_token": 0.057966787500000005}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"Input must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -1.7087262868881226, -0.001128513365983963, -0.040666304528713226, -0.36493930220603943, -0.034728217869997025, -0.005109704099595547, -0.9543858766555786, -0.0006890306831337512, -0.004642185289412737], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset='Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "='", "Name", "')", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -0.6117913126945496, -0.26825612783432007, -1.7761225700378418, -0.0017865424742922187, -0.15561002492904663, -0.08929570764303207], "finish_reason": "stop"}, {"text": " df.drop('Name', axis=1)", "tokens": [" df", ".", "drop", "('", "Name", "'", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.006171100307255983, -0.5637103915214539, -0.5852068066596985, -0.7924242615699768, -1.1894737482070923, -0.0014068715972825885, -0.00010609064338495955, -0.0027838307432830334, -0.008984614163637161, -0.0011685217032209039, -0.004889911040663719, -0.05384745076298714], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0057222130708396435, -0.037469979375600815, -0.0002113357331836596, -0.00011276562872808427, -0.02030748501420021], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state,", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ",", "\n"], "logprobs": [-0.0009151084814220667, -3.0636318115284666e-05, -0.003847341053187847, -0.00014911970356479287, -0.0007406114018522203, -3.85038583772257e-05, -0.00031442465842701495, -5.543078441405669e-05, -0.0008378094644285738, -5.519237674889155e-05, -0.00016711745411157608, -0.0007468056865036488, -0.0068511576391756535, -1.1920922133867862e-06, -9.059865078597795e-06, -5.483612312673358e-06, -2.9802276912960224e-06, -0.00010847456724150106, -0.15544483065605164, -0.00044550508027896285, -0.006547901313751936, -0.0001685477327555418, -0.023348400369286537, -3.576272320060525e-06, -3.123234637314454e-05, -0.0045016855001449585, -0.021753283217549324, -5.400034933700226e-05, -7.545663538621739e-05, -0.0008382858941331506, -0.01438509114086628, 0.0, -3.4570634852570947e-06, -0.00010096516780322418, -0.0020201054867357016, -3.933898824470816e-06, -7.855583680793643e-05, -2.4012415409088135, -1.4469783306121826], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=200, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "2", "0", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0017187122721225023, -4.410734163684538e-06, -0.00016664070426486433, -5.2927523938706145e-05, -1.9073468138230965e-06, -0.4679102301597595, -0.9869435429573059, -7.152555099310121e-07, -0.003734877100214362, -0.0009193961159326136, -0.0028322129510343075, -2.5718891620635986, -0.04132765904068947, -0.5379752516746521, -0.256686806678772, -0.1132274642586708, -2.0265558760002023e-06, -2.992108420585282e-05, -0.00032550760079175234, -0.1826300024986267, -9.179073458653875e-06, -0.0004700509598478675, -0.07153517007827759, -0.004761428572237492], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-6.460934673668817e-05, -1.5616295058862306e-05, -0.0003300360403954983, -0.008774533867835999, -8.594620157964528e-05, -0.0008132726070471108, -0.0028314997907727957, -0.0003293210465926677, -7.986990567587782e-06, -0.0001854724541772157, -0.000969535845797509], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004219557624310255, -7.033323527139146e-06, -0.0005093707586638629, -0.0008758046315051615, -0.0009129646932706237, -0.00020752183627337217, -0.0004343043256085366, -0.00082601752365008, -0.0006039702566340566], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.002513584913685918, -5.125986263010418e-06, -1.9073468138230965e-06, -0.001466033631004393, -0.14135371148586273, -0.00013612773909699172, -9.738924563862383e-05, -0.0013550871517509222, -0.002619646955281496, -0.0030882307328283787, -0.0022527810651808977], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.012929651886224747, -0.559676468372345], "finish_reason": "stop"}], "metrics": {"energy": 242.9308863868714, "energy_per_token": 1.6304086334689356, "time": 9.237476, "time_per_token": 0.0619964832214765}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError('Input df must be a pandas DataFrame.')", "tokens": [" Value", "Error", "('", "Input", " df", " must", " be", " a", " pandas", " Data", "Frame", ".", "')", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -1.7596702575683594, -0.45862433314323425, -1.0389869213104248, -0.6938657760620117, -0.0011601868318393826, -0.045114677399396896, -0.20286796987056732, -0.02055135928094387, -0.0026456851046532393, -0.5074634552001953, -0.01210062112659216, -0.002748523373156786], "finish_reason": "stop"}, {"text": " df.drop_duplicates(['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(['", "Name", "'])", "\n"], "logprobs": [-0.006517345551401377, -0.022867778316140175, -0.09301072359085083, -0.003249604720622301, -0.00016246906307060272, -3.2186455882765586e-06, -2.2451624870300293, -0.016218043863773346, -0.35674965381622314, -0.08948713541030884], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.0059755961410701275, -0.7385422587394714, -0.009097788482904434, -0.00991007313132286, -0.0354769229888916, -6.437094270950183e-05, -0.015130394138395786, -0.0006635371246375144, -0.005301346071064472, -0.0011549476766958833, -0.14776955544948578], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.005477420520037413, -0.047626983374357224, -0.00021669900161214173, -0.00010716341057559475, -0.020275944843888283], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.00091856240760535, -3.111314072157256e-05, -0.004001824650913477, -0.00013183678674977273, -0.0009516716236248612, -4.5060096454108134e-05, -0.0002464944263920188, -6.568216485902667e-05, -0.0010253892978653312, -5.3881147323409095e-05, -0.00018702188390307128, -0.0007290565990842879, -0.007166986353695393, -1.311301275563892e-06, -7.152531907195225e-06, -4.0531076592742465e-06, -3.4570634852570947e-06, -0.00012933371181134135, -0.1342214047908783, -0.00046397410915233195, -0.006325581111013889, -0.0001532914029667154, -0.025143157690763474, -4.768360213347478e-06, -3.0874729418428615e-05, -0.004604095593094826, -0.01969040557742119, -6.210611172718927e-05, -7.64102369430475e-05, -0.0007391819381155074, -0.013576670549809933, 0.0, -3.6954811548639555e-06, -0.00012766500003635883, -0.0014465117128565907, -4.529942543740617e-06, -7.86750388215296e-05, -0.10740713775157928, -0.0010991015005856752], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0016725374152883887, -4.768360213347478e-06, -0.0001559135998832062, -7.426462980220094e-05, -1.7881377516459906e-06, -0.5167457461357117, -0.5064530372619629, -1.4305104514278355e-06, -5.98412734689191e-05, -0.0018076046835631132, -0.09728182107210159, -1.0609570381348021e-05, -0.0005660838796757162, -0.03959130123257637, -0.007442840840667486], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.1616290875244886e-05, -1.764281842042692e-05, -0.00033206192892976105, -0.005039608106017113, -0.00015853578224778175, -0.0007297713309526443, -0.0027470968198031187, -0.0003159739135298878, -6.9141146923357155e-06, -0.00018618757894728333, -0.0007435894221998751], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.005084797274321318, -7.629365427419543e-06, -0.000504723924677819, -0.000789688085205853, -0.0012350797187536955, -0.00021395778458099812, -0.0003355178632773459, -0.0009031984372995794, -0.000635183765552938], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0026177444960922003, -5.245195097813848e-06, -1.7881377516459906e-06, -0.0013180625392124057, -0.1539076268672943, -0.00012516192509792745, -8.77341881277971e-05, -0.0012692499440163374, -0.0028064174111932516, -0.003155255224555731, -0.0019421778852120042], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy"], "logprobs": [-0.013018612749874592], "finish_reason": "stop"}], "metrics": {"energy": 176.1705702066421, "energy_per_token": 1.2953718397547214, "time": 7.7687864, "time_per_token": 0.0571234294117647}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError('df is not a DataFrame')", "tokens": [" Value", "Error", "('", "df", " is", " not", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -1.7596702575683594, -1.9524216651916504, -1.666597604751587, -0.014813664369285107, -0.035181883722543716, -0.508808970451355, -0.003984133247286081, -0.5661609172821045, -0.0028511134441941977], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'], keep='last')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "']", ",", " keep", "='", "last", "')", "\n"], "logprobs": [-0.006517345551401377, -0.022867778316140175, -0.09301072359085083, -0.003249604720622301, -0.00016246906307060272, -3.2186455882765586e-06, -0.5574526786804199, -0.32378631830215454, -0.4881172478199005, -0.009166301228106022, -1.0751316547393799, -0.0070197382010519505, -0.008016318082809448, -0.053570546209812164, -1.2809611558914185, -0.07212129980325699, -0.1012597605586052], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.005656901281327009, -0.7852301001548767, -0.008254341781139374, -0.011124609969556332, -0.02296704426407814, -5.8887653722194955e-05, -0.015912100672721863, -0.0006256530177779496, -0.005663539282977581, -0.0010025242809206247, -0.14770178496837616], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.005041031166911125, -0.03710028901696205, -0.00023409964342135936, -0.00011598391574807465, -0.017787110060453415], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0008174415561370552, -3.135155202471651e-05, -0.0052565219812095165, -0.0001463782973587513, -0.0008281615446321666, -4.5060096454108134e-05, -0.0002787916746456176, -5.280832192511298e-05, -0.0007814691052772105, -4.1483970562694594e-05, -0.00014935807848814875, -0.000710592488758266, -0.00919583160430193, -1.4305104514278355e-06, -7.271740287251305e-06, -4.291525328881107e-06, -3.3378546504536644e-06, -0.00012265883560758084, -0.1669902801513672, -0.00038223114097490907, -0.0068268864415585995, -0.00016950124700088054, -0.02140398882329464, -4.172316494077677e-06, -4.088794958079234e-05, -0.005487379152327776, -0.018287504091858864, -4.756337511935271e-05, -8.201262971851975e-05, -0.0007482351502403617, -0.015937207266688347, 0.0, -4.0531076592742465e-06, -0.00013600854435935616, -0.001515550771728158, -3.4570634852570947e-06, -9.357491217087954e-05, -0.09715353697538376, -0.0010364643530920148], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=100, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0017522709676995873, -4.529942543740617e-06, -0.00016342257731594145, -6.913899414939806e-05, -2.145764938177308e-06, -0.4960585832595825, -0.9972731471061707, -7.152555099310121e-07, -0.00432852515950799, -0.0007717015105299652, -0.0027790756430476904, -0.22156110405921936, -0.005252727307379246, -0.3882789611816406, -0.430038183927536, -0.07435915619134903, -1.9073468138230965e-06, -3.0040289857424796e-05, -0.00023541064001619816, -0.2240842878818512, -6.794906312279636e-06, -0.0002719986077863723, -0.043599583208560944, -0.004867964424192905], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-4.8993817472364753e-05, -1.549708758830093e-05, -0.00032085992279462516, -0.005965760443359613, -0.0001528146385680884, -0.0009444067254662514, -0.0033974091056734324, -0.0002449450839776546, -9.775113539944869e-06, -0.0002184867626056075, -0.0010152667528018355], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00373832113109529, -7.271740287251305e-06, -0.0005361788207665086, -0.0010301527800038457, -0.0010286045726388693, -0.0001538873475510627, -0.00042512916843406856, -0.0007211944903247058, -0.0007371568935923278], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.00266304356046021, -4.410734163684538e-06, -1.7881377516459906e-06, -0.0013824678026139736, -0.21172299981117249, -0.00012718822108581662, -0.00011657988943625242, -0.001522811478935182, -0.0028330450877547264, -0.002612394280731678, -0.002069357316941023], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.010488506406545639, -1.3330483436584473, -2.50339189733495e-06, -1.311301275563892e-06, -8.940297266235575e-05, -0.0002101439022226259, -0.11606749147176743], "finish_reason": "stop"}], "metrics": {"energy": 191.51963609886184, "energy_per_token": 1.235610555476528, "time": 8.626647, "time_per_token": 0.0556557870967742}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError('Input must be a pandas DataFrame.')", "tokens": [" Value", "Error", "('", "Input", " must", " be", " a", " pandas", " Data", "Frame", ".", "')", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -1.7596702575683594, -0.45862433314323425, -1.4024264812469482, -0.0014800796052441, -0.059434063732624054, -0.3902222514152527, -0.04161403328180313, -0.0055826944299042225, -0.7309496402740479, -0.009734895080327988, -0.0025934891309589148], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.006517345551401377, -0.022867778316140175, -0.09301072359085083, -0.003249604720622301, -0.00016246906307060272, -3.2186455882765586e-06, -1.6228270530700684, -0.0012422234285622835, -0.08072200417518616, -0.13292105495929718], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']].to_numpy()", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.0059755961410701275, -0.7385422587394714, -0.009097788482904434, -0.00991007313132286, -0.0354769229888916, -6.437094270950183e-05, -0.015130394138395786, -0.0006635371246375144, -0.005301346071064472, -0.0011549476766958833, -2.09291410446167, -3.083466053009033, -0.00030119650182314217, -0.00366337806917727, -0.0008044582791626453, -0.027736222371459007], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.005477420520037413, -0.047626983374357224, -0.00021669900161214173, -0.00010716341057559475, -0.020275944843888283], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.00091856240760535, -3.111314072157256e-05, -0.004001824650913477, -0.00013183678674977273, -0.0009516716236248612, -4.5060096454108134e-05, -0.0002464944263920188, -6.568216485902667e-05, -0.0010253892978653312, -5.3881147323409095e-05, -0.00018702188390307128, -0.0007290565990842879, -0.007166986353695393, -1.311301275563892e-06, -7.152531907195225e-06, -4.0531076592742465e-06, -3.4570634852570947e-06, -0.00012933371181134135, -0.1342214047908783, -0.00046397410915233195, -0.006325581111013889, -0.0001532914029667154, -0.025143157690763474, -4.768360213347478e-06, -3.0874729418428615e-05, -0.004604095593094826, -0.01969040557742119, -6.210611172718927e-05, -7.64102369430475e-05, -0.0007391819381155074, -0.013576670549809933, 0.0, -3.6954811548639555e-06, -0.00012766500003635883, -0.0014465117128565907, -4.529942543740617e-06, -7.86750388215296e-05, -0.10740713775157928, -0.0010991015005856752], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0016725374152883887, -4.768360213347478e-06, -0.0001559135998832062, -7.426462980220094e-05, -1.7881377516459906e-06, -0.9077522158622742, -0.004696410149335861], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.7338023907504976e-05, -1.7404405298293568e-05, -0.00029023250681348145, -0.006178919691592455, -0.00013648532330989838, -0.0009012927766889334, -0.0025284483563154936, -0.0002517383254598826, -6.556489552167477e-06, -0.00020859450160060078, -0.0008741371566429734], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004706139676272869, -6.794906312279636e-06, -0.0005496421363204718, -0.000841025379486382, -0.0011151769431307912, -0.00022182388056535274, -0.000316927267704159, -0.0007346553611569107, -0.0005428509321063757], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.002260988112539053, -4.0531076592742465e-06, -1.9073468138230965e-06, -0.0012516292044892907, -0.10449361801147461, -0.00013100242358632386, -0.00010918975021922961, -0.0012366274604573846, -0.002843743422999978, -0.002718921285122633, -0.002039734972640872], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.01148175448179245, -0.5955834984779358], "finish_reason": "stop"}], "metrics": {"energy": 190.39059609031682, "energy_per_token": 1.4315082412805775, "time": 7.984839, "time_per_token": 0.06003638345864662}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(f'The input data is not a DataFrame but of type {type(df).__name__}.')", "tokens": [" Value", "Error", "(", "f", "'", "The", " input", " data", " is", " not", " a", " Data", "Frame", " but", " of", " type", " {", "type", "(", "df", ")", ".", "__", "name", "__", "}", ".", "')", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -2.6656036376953125, -1.9824286699295044, -2.854045867919922, -0.327154278755188, -2.137467622756958, -1.3938456773757935, -0.16701339185237885, -0.08400849997997284, -0.5650811791419983, -0.010616137646138668, -3.4141428470611572, -3.3573238849639893, -0.06978204101324081, -0.15708358585834503, -0.008103824220597744, -0.0014173472300171852, -0.008813055232167244, -2.1211705207824707, -0.003516206983476877, -0.0008853329927660525, -0.00264366390183568, -0.001177571015432477, -0.013856641948223114, -0.7521781921386719, -0.13779740035533905, -0.0033337275963276625], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name', keep='last')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "'", ",", " keep", "='", "last", "')", "\n"], "logprobs": [-0.005413396749645472, -0.02009427733719349, -0.09362435340881348, -0.003321608528494835, -0.00016127715934999287, -3.099436753473128e-06, -1.6155972480773926, -0.0011739989276975393, -2.3416907787323, -0.000436091679148376, -0.0087208840996027, -0.13338914513587952, -1.1986857652664185, -0.0052147796377539635, -0.08648193627595901], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']].values", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", ".", "values", "\n"], "logprobs": [-0.006118851248174906, -0.7725006341934204, -0.009697353467345238, -0.010585470125079155, -0.02660520188510418, -6.41325386823155e-05, -0.01934834197163582, -0.0006899837171658874, -0.006369527895003557, -0.0012413900112733245, -2.16389799118042, -0.3875140845775604, -0.07026620209217072], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.005957583896815777, -0.039830178022384644, -0.00023052419419400394, -0.00010096516780322418, -0.017728203907608986], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0008953376673161983, -2.90866428258596e-05, -0.004165307153016329, -0.00014029949670657516, -0.0007674132939428091, -4.541770613286644e-05, -0.0003524397616274655, -5.495397272170521e-05, -0.0008294717408716679, -6.925819616299123e-05, -0.00016246906307060272, -0.0008231588872149587, -0.006630680989474058, -1.0728830375228426e-06, -9.059865078597795e-06, -3.933898824470816e-06, -3.576272320060525e-06, -0.00012444675667211413, -0.14164035022258759, -0.00043156370520591736, -0.006009130738675594, -0.00014280252798926085, -0.02276092953979969, -3.576272320060525e-06, -3.0040289857424796e-05, -0.005375218112021685, -0.02030094340443611, -4.9828242481453344e-05, -7.259582343976945e-05, -0.000897957943379879, -0.015330925583839417, 0.0, -4.172316494077677e-06, -0.00015031162183731794, -0.0020165364257991314, -4.0531076592742465e-06, -8.725739462533966e-05, -0.0875769630074501, -0.0012081712484359741], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0017062166007235646, -4.291525328881107e-06, -0.00014304091746453196, -4.60137271147687e-05, -2.264974000354414e-06, -0.4227368235588074, -0.7437248826026917, -1.7881377516459906e-06, -6.353653589030728e-05, -0.00230404338799417, -0.12235866487026215, -1.1086402082582936e-05, -0.0003721021639648825, -0.03658405318856239, -0.007894623093307018], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.531158240046352e-05, -1.847726889536716e-05, -0.00030071981018409133, -0.008378356695175171, -0.0001714082609396428, -0.0008455515489913523, -0.0035594459623098373, -0.0003829461056739092, -9.417489309271332e-06, -0.00018880968855228275, -0.0009725131676532328], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.005579967983067036, -8.106198947643861e-06, -0.0005583396414294839, -0.0008764001540839672, -0.0008133916999213398, -0.0001629458274692297, -0.00035041390219703317, -0.0005912224878557026, -0.0005778788472525775], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0023469780571758747, -4.291525328881107e-06, -1.9073468138230965e-06, -0.00130425242241472, -0.13525374233722687, -0.0001426833332516253, -8.809178689261898e-05, -0.0014821031363680959, -0.002593132434412837, -0.002947036875411868, -0.0017916593933477998], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.012392307631671429, -0.558472752571106], "finish_reason": "stop"}], "metrics": {"energy": 191.70938287258141, "energy_per_token": 1.205719389135732, "time": 8.636263, "time_per_token": 0.054316119496855345}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError('input df should be a pandas DataFrame')", "tokens": [" Value", "Error", "('", "input", " df", " should", " be", " a", " pandas", " Data", "Frame", "')", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -1.7596702575683594, -3.4161534309387207, -0.784358024597168, -2.052609920501709, -0.008504838682711124, -0.19342300295829773, -0.39893460273742676, -0.07589027285575867, -0.006051788106560707, -0.19472379982471466, -0.0023497133515775204], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.006517345551401377, -0.022867778316140175, -0.09301072359085083, -0.003249604720622301, -0.00016246906307060272, -3.2186455882765586e-06, -1.6228270530700684, -0.0012422234285622835, -0.08072200417518616, -0.13292105495929718], "finish_reason": "stop"}, {"text": " df.drop('Category', axis=1)", "tokens": [" df", ".", "drop", "('", "Category", "'", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0059755961410701275, -0.6924740672111511, -0.5541221499443054, -0.820087194442749, -0.3899710178375244, -0.003044614801183343, -0.00011848701251437888, -0.0029074561316519976, -0.007900891825556755, -0.001450082752853632, -0.007338827475905418, -0.03906683996319771], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.006730386987328529, -0.03682813048362732, -0.0002040654799202457, -0.00011634149996098131, -0.0182375218719244], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0008332832949236035, -3.075552376685664e-05, -0.0040699755772948265, -0.0001438752660760656, -0.0008904544520191848, -5.1616290875244886e-05, -0.00023326536756940186, -5.936446541454643e-05, -0.000777776469476521, -6.592056161025539e-05, -0.00014256415306590497, -0.0007693191873840988, -0.006649036426097155, -1.311301275563892e-06, -7.510157047363464e-06, -5.8412379075889476e-06, -3.4570634852570947e-06, -0.00013219437096267939, -0.12414368987083435, -0.0003064401389565319, -0.007265337277203798, -0.0001586549769854173, -0.021628933027386665, -5.364403477869928e-06, -2.8967437174287625e-05, -0.005119073670357466, -0.018121864646673203, -4.827859811484814e-05, -5.602679812000133e-05, -0.0010087168775498867, -0.014449365437030792, 0.0, -3.814689989667386e-06, -0.00015114595589693636, -0.002162500750273466, -3.576272320060525e-06, -8.272782724816352e-05, -0.10555269569158554, -0.0010444429935887456], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0015065044863149524, -5.006777428206988e-06, -0.00011657988943625242, -5.090107151772827e-05, -2.0265558760002023e-06, -0.8841291666030884, -0.0050171902403235435], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-4.9828242481453344e-05, -1.6927575416048057e-05, -0.0003307510633021593, -0.007877828553318977, -0.0001389883691444993, -0.0009009354980662465, -0.0026298719458281994, -0.00032610344351269305, -9.179073458653875e-06, -0.0002060916303889826, -0.0009260656661354005], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004497175570577383, -8.106198947643861e-06, -0.0005086558521725237, -0.0007605044520460069, -0.000959531927946955, -0.0002366024418734014, -0.00040522945346310735, -0.0006691362359561026, -0.0004655231023207307], "finish_reason": "stop"}, {"text": " accuracy_score(predictions, y_test)", "tokens": [" accuracy", "_", "score", "(", "pred", "ictions", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.0022890574764460325, -5.125986263010418e-06, -2.0265558760002023e-06, -0.001427584677003324, -1.9196217060089111, -0.003922151867300272, -0.0010141950333490968, -0.001690983772277832, -7.295342220459133e-05, -5.686121585313231e-05, -0.00712721748277545, -0.00354127143509686], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.01233979407697916, -0.5215762853622437], "finish_reason": "stop"}], "metrics": {"energy": 162.20621891593936, "energy_per_token": 1.247740145507226, "time": 7.3685946, "time_per_token": 0.05668149692307692}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"df is not a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "df", " is", " not", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -1.8769367933273315, -1.8498249053955078, -0.016610657796263695, -0.033138129860162735, -1.1968954801559448, -0.03231888264417648, -0.0030488932970911264, -0.6473162770271301, -0.0008212531101889908, -0.0044967010617256165], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -0.6117913126945496, -0.26825612783432007, -0.5058932304382324, -0.01120524387806654, -0.5454886555671692, -0.08598248660564423], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.006171100307255983, -0.8933765292167664, -0.009498167783021927, -0.01057225838303566, -0.029219722375273705, -5.376194530981593e-05, -0.015325525775551796, -0.0006435230607166886, -0.0056154122576117516, -0.001134109916165471, -0.15544483065605164], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.006513910833746195, -0.03484910726547241, -0.00020740265608765185, -0.00011395759065635502, -0.02054551988840103], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0008347125840373337, -3.2305197237292305e-05, -0.004181333351880312, -0.00015889335190877318, -0.0008391196606680751, -5.245071224635467e-05, -0.0003067976504098624, -4.8993817472364753e-05, -0.000683074293192476, -7.974783511599526e-05, -0.00016199229867197573, -0.0007117837085388601, -0.008809510618448257, -1.1920922133867862e-06, -6.794906312279636e-06, -7.510157047363464e-06, -3.2186455882765586e-06, -0.00011991735664196312, -0.12868398427963257, -0.0003784178989008069, -0.00709194503724575, -0.00015948931104503572, -0.023294596001505852, -4.172316494077677e-06, -3.0636318115284666e-05, -0.005340831819921732, -0.018574584275484085, -5.340433563105762e-05, -5.98412734689191e-05, -0.000805053801741451, -0.014533726498484612, 0.0, -4.291525328881107e-06, -0.00013255194062367082, -0.0016042232746258378, -3.2186455882765586e-06, -0.0001062098381225951, -0.11005444824695587, -0.001123035908676684], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.001778569770976901, -4.768360213347478e-06, -0.00015007323236204684, -7.366862701019272e-05, -2.0265558760002023e-06, -0.4749937057495117, -0.6337562799453735, -1.5497195136049413e-06, -6.55629628454335e-05, -0.002277163788676262, -0.10791858285665512, -1.0967194612021558e-05, -0.0003657863999251276, -0.03791046515107155, -0.007909998297691345], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.376194530981593e-05, -1.8954096958623268e-05, -0.00032109825406223536, -0.008401407860219479, -0.0001037067049765028, -0.001076952670700848, -0.002803088864311576, -0.00034290633630007505, -8.702239938429557e-06, -0.000196556793525815, -0.0009968079393729568], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0042360578663647175, -6.6756979322235566e-06, -0.0005731132114306092, -0.0009600082994438708, -0.0007709868368692696, -0.00015162272029556334, -0.00035768310772255063, -0.000582644424866885, -0.0006781900301575661], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0021309780422598124, -5.245195097813848e-06, -1.9073468138230965e-06, -0.0014829363208264112, -0.1548537015914917, -0.0001517419150331989, -0.00010477947944309562, -0.0013148480793461204, -0.002677667187526822, -0.002959516830742359, -0.0024358145892620087], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy"], "logprobs": [-0.010761087760329247], "finish_reason": "stop"}], "metrics": {"energy": 172.27565367794028, "energy_per_token": 1.24837430201406, "time": 7.766398, "time_per_token": 0.05627824637681159}}
{"outputs": [{"text": " isinstance(df, pd.DataFrame) == False:", "tokens": [" isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " ==", " False", ":", "\n"], "logprobs": [-2.34332537651062, -0.0002836778585333377, -0.006210789084434509, -0.00045908879837952554, -0.10314088314771652, -6.854299135738984e-05, -0.06411648541688919, -1.5391031503677368, -1.467252492904663, -0.03676079586148262, -0.00958495493978262, -0.019542885944247246], "finish_reason": "stop"}, {"text": " ValueError(\"Input 'df' should be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " '", "df", "'", " should", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -3.1646056175231934, -0.0228477381169796, -0.0007331067463383079, -1.8902024030685425, -0.004225493408739567, -0.11183490604162216, -0.27215656638145447, -0.03438354283571243, -0.00456683523952961, -1.4274953603744507, -0.0010388459777459502, -0.004498243797570467], "finish_reason": "stop"}, {"text": " df.drop_duplicates(['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(['", "Name", "'])", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -2.1596734523773193, -0.014269458130002022, -0.37596938014030457, -0.10123767703771591], "finish_reason": "stop"}, {"text": " df.loc[:, ['Age', 'Score']]", "tokens": [" df", ".", "loc", "[:", ",", " ['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.006094324868172407, -0.6770970225334167, -1.2764766216278076, -0.002376353135332465, -0.000348268891684711, -0.07640163600444794, -0.01671242155134678, -0.04510442167520523, -9.381330892210826e-05, -0.007805797271430492, -0.0007524043321609497, -0.003991613630205393, -0.00035565727739594877, -0.10471566021442413], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.004925379995256662, -0.04259364679455757, -0.0002388668799540028, -0.00010990492592100054, -0.019376637414097786], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.000966915744356811, -3.0636318115284666e-05, -0.0037878446746617556, -0.00014602071314584464, -0.0009502424509264529, -5.1377883210079744e-05, -0.00028391621890477836, -5.090107151772827e-05, -0.0009099871967919171, -6.0437283536884934e-05, -0.00017653337272349745, -0.0007469248375855386, -0.006396060809493065, -1.1920922133867862e-06, -8.106198947643861e-06, -5.960446742392378e-06, -3.099436753473128e-06, -0.0001248043408850208, -0.14306746423244476, -0.00039593485416844487, -0.007469937205314636, -0.0001726001501083374, -0.022317098453640938, -4.172316494077677e-06, -2.658331868587993e-05, -0.00605012895539403, -0.021593933925032616, -4.8993817472364753e-05, -6.4490144723095e-05, -0.0009563163621351123, -0.015500782988965511, 0.0, -3.6954811548639555e-06, -0.0001387499796692282, -0.002003925619646907, -3.6954811548639555e-06, -9.142934868577868e-05, -0.09212267398834229, -0.0010176486102864146], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.001677416730672121, -4.529942543740617e-06, -0.00016342257731594145, -4.8993817472364753e-05, -2.0265558760002023e-06, -0.9430418610572815, -0.0054283360950648785], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.411955135059543e-05, -1.7404405298293568e-05, -0.0002818902430590242, -0.00877713318914175, -9.345571743324399e-05, -0.0007827793597243726, -0.00273556518368423, -0.0004700509598478675, -7.867782187531702e-06, -0.0002337421028641984, -0.0008865240379236639], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0052719381637871265, -7.748573807475623e-06, -0.00048565989709459245, -0.000972036796156317, -0.0008749709231778979, -0.0002153879904653877, -0.00027783826226368546, -0.0007538337376900017, -0.0006058764411136508], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0019930992275476456, -5.245195097813848e-06, -1.7881377516459906e-06, -0.0012904420727863908, -0.15222209692001343, -0.00010418349120300263, -7.843663479434326e-05, -0.0012149580288678408, -0.002722131321206689, -0.0029103087726980448, -0.0018837579991668463], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.013106506317853928, -0.6220473051071167], "finish_reason": "stop"}], "metrics": {"energy": 196.43198675918586, "energy_per_token": 1.4338101223298239, "time": 7.776391, "time_per_token": 0.05676197810218978}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"Input df is not a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " is", " not", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -0.8922780752182007, -1.0546209812164307, -0.012325311079621315, -0.033057745546102524, -0.4064657986164093, -0.0037757314275950193, -0.4487195312976837, -0.036139991134405136, -0.0012509147636592388, -0.004933090414851904], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'], keep='last')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "']", ",", " keep", "='", "last", "')", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -0.6117913126945496, -0.26825612783432007, -0.5058932304382324, -0.01120524387806654, -1.0440943241119385, -0.00657596904784441, -0.008351994678378105, -0.054488856345415115, -1.388000726699829, -0.08005385845899582, -0.08919844776391983], "finish_reason": "stop"}, {"text": " df.loc[:, ['Age', 'Score']].values", "tokens": [" df", ".", "loc", "[:", ",", " ['", "Age", "'", ",", " '", "Score", "']", "]", ".", "values", "\n"], "logprobs": [-0.006171100307255983, -0.5637103915214539, -1.2084500789642334, -0.0023701691534370184, -0.000439428084064275, -0.07528279721736908, -0.014324573799967766, -0.04158681631088257, -6.90197994117625e-05, -0.006607114803045988, -0.0007746794726699591, -0.003989001736044884, -0.00037281715776771307, -2.5192103385925293, -0.34014326333999634, -0.045674245804548264], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0057222130708396435, -0.037469979375600815, -0.0002113357331836596, -0.00011276562872808427, -0.02030748501420021], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0009151084814220667, -3.0636318115284666e-05, -0.003847341053187847, -0.00014911970356479287, -0.0007406114018522203, -3.85038583772257e-05, -0.00031442465842701495, -5.543078441405669e-05, -0.0008378094644285738, -5.519237674889155e-05, -0.00016711745411157608, -0.0007468056865036488, -0.0068511576391756535, -1.1920922133867862e-06, -9.059865078597795e-06, -5.483612312673358e-06, -2.9802276912960224e-06, -0.00010847456724150106, -0.15544483065605164, -0.00044550508027896285, -0.006547901313751936, -0.0001685477327555418, -0.023348400369286537, -3.576272320060525e-06, -3.123234637314454e-05, -0.0045016855001449585, -0.021753283217549324, -5.400034933700226e-05, -7.545663538621739e-05, -0.0008382858941331506, -0.01438509114086628, 0.0, -3.4570634852570947e-06, -0.00010096516780322418, -0.0020201054867357016, -3.933898824470816e-06, -7.855583680793643e-05, -0.09529513865709305, -0.00115697190631181], "finish_reason": "stop"}, {"text": " RandomForestClassifier()", "tokens": [" Random", "Fore", "st", "Class", "ifier", "()", "\n"], "logprobs": [-0.0017187122721225023, -4.410734163684538e-06, -0.00016664070426486433, -5.2927523938706145e-05, -1.9073468138230965e-06, -0.9845842719078064, -0.0055025541223585606], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.757642793469131e-05, -1.9550132492440753e-05, -0.0003325386205688119, -0.008725610561668873, -0.00010084597306558862, -0.0008929556352086365, -0.0024951535742729902, -0.00032276666024699807, -8.821448318485636e-06, -0.00021884430316276848, -0.0010119322687387466], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00400135014206171, -7.510157047363464e-06, -0.0004621868138201535, -0.0008216104470193386, -0.0008510305196978152, -0.0002057340752799064, -0.0004444326623342931, -0.0006718761869706213, -0.0007876630988903344], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.002165950369089842, -5.125986263010418e-06, -1.9073468138230965e-06, -0.0015288818394765258, -0.16589054465293884, -0.00012563870404846966, -0.0001070442158379592, -0.0013063953956589103, -0.0029829314444214106, -0.002662092447280884, -0.001727756578475237], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.012909293174743652, -0.5243224501609802], "finish_reason": "stop"}], "metrics": {"energy": 177.33078180789946, "energy_per_token": 1.2488083225908413, "time": 7.996282, "time_per_token": 0.056311845070422535}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError('Input must be a DataFrame')", "tokens": [" Value", "Error", "('", "Input", " must", " be", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -1.7596702575683594, -0.45862433314323425, -1.4024264812469482, -0.0014800796052441, -0.059434063732624054, -1.3680589199066162, -0.006075604353100061, -0.7449064254760742, -0.002174633787944913], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.006517345551401377, -0.022867778316140175, -0.09301072359085083, -0.003249604720622301, -0.00016246906307060272, -3.2186455882765586e-06, -1.6228270530700684, -0.0012422234285622835, -0.08072200417518616, -0.13292105495929718], "finish_reason": "stop"}, {"text": " df.drop('Name', axis=1)", "tokens": [" df", ".", "drop", "('", "Name", "'", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0059755961410701275, -0.6924740672111511, -0.5541221499443054, -0.820087194442749, -1.138490915298462, -0.0012326984433457255, -0.00010799778101500124, -0.0030460411217063665, -0.009297526441514492, -0.001328420010395348, -0.004370067268610001, -0.06427467614412308], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.006730386987328529, -0.03682813048362732, -0.0002040654799202457, -0.00011634149996098131, -0.0182375218719244], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state,", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ",", "\n"], "logprobs": [-0.0008332832949236035, -3.075552376685664e-05, -0.0040699755772948265, -0.0001438752660760656, -0.0008904544520191848, -5.1616290875244886e-05, -0.00023326536756940186, -5.936446541454643e-05, -0.000777776469476521, -6.592056161025539e-05, -0.00014256415306590497, -0.0007693191873840988, -0.006649036426097155, -1.311301275563892e-06, -7.510157047363464e-06, -5.8412379075889476e-06, -3.4570634852570947e-06, -0.00013219437096267939, -0.12414368987083435, -0.0003064401389565319, -0.007265337277203798, -0.0001586549769854173, -0.021628933027386665, -5.364403477869928e-06, -2.8967437174287625e-05, -0.005119073670357466, -0.018121864646673203, -4.827859811484814e-05, -5.602679812000133e-05, -0.0010087168775498867, -0.014449365437030792, 0.0, -3.814689989667386e-06, -0.00015114595589693636, -0.002162500750273466, -3.576272320060525e-06, -8.272782724816352e-05, -2.3038368225097656, -1.4247701168060303], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0015065044863149524, -5.006777428206988e-06, -0.00011657988943625242, -5.090107151772827e-05, -2.0265558760002023e-06, -0.5330702066421509, -0.6366621851921082, -1.6689286894688848e-06, -8.332382276421413e-05, -0.0019145745318382978, -0.10417357087135315, -1.1324817933200393e-05, -0.00038580605178140104, -0.03750040754675865, -0.008686613291501999], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.578839045483619e-05, -1.5616295058862306e-05, -0.00027926836628466845, -0.007455974817276001, -0.00012730741582345217, -0.0008649660157971084, -0.0029447784181684256, -0.00028880240279249847, -8.34461570775602e-06, -0.00020180096908006817, -0.0009765623253770173], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004486138932406902, -7.510157047363464e-06, -0.0005911033367738128, -0.0009698931244201958, -0.0010877889581024647, -0.00021073981770314276, -0.000356253091013059, -0.0007414452848024666, -0.0007627676823176444], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.002514773979783058, -5.483612312673358e-06, -2.0265558760002023e-06, -0.0013804440386593342, -0.11937069892883301, -0.00014232576359063387, -9.929640509653836e-05, -0.0014280608156695962, -0.0025238110683858395, -0.0024920618161559105, -0.0017927302978932858], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.012962248176336288, -0.5438652634620667], "finish_reason": "stop"}], "metrics": {"energy": 215.7284308300018, "energy_per_token": 1.5979883765185319, "time": 8.188252, "time_per_token": 0.06065371851851852}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"Input is not a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " is", " not", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -2.772305965423584, -0.023780949413776398, -0.04962899908423424, -1.3294733762741089, -0.05601212754845619, -0.006678048521280289, -0.4746640622615814, -0.02829030156135559, -0.0008759237825870514, -0.0040461113676428795], "finish_reason": "stop"}, {"text": " df.drop_duplicates(['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(['", "Name", "'])", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -2.1596734523773193, -0.014269458130002022, -0.37596938014030457, -0.10123767703771591], "finish_reason": "stop"}, {"text": " df.drop(['Name', 'Category'], axis=1)", "tokens": [" df", ".", "drop", "(['", "Name", "'", ",", " '", "Category", "']", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.006094324868172407, -0.6770970225334167, -0.5751482844352722, -1.1724611520767212, -0.08222991228103638, -0.06481971591711044, -0.00010430268594063818, -0.014539600349962711, -0.7143722772598267, -0.030635014176368713, -0.00032455421751365066, -0.0010917185572907329, -0.022949684411287308, -0.0019257587846368551, -0.006423185113817453, -0.029468610882759094], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.004925379995256662, -0.04259364679455757, -0.0002388668799540028, -0.00010990492592100054, -0.019376637414097786], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.000966915744356811, -3.0636318115284666e-05, -0.0037878446746617556, -0.00014602071314584464, -0.0009502424509264529, -5.1377883210079744e-05, -0.00028391621890477836, -5.090107151772827e-05, -0.0009099871967919171, -6.0437283536884934e-05, -0.00017653337272349745, -0.0007469248375855386, -0.006396060809493065, -1.1920922133867862e-06, -8.106198947643861e-06, -5.960446742392378e-06, -3.099436753473128e-06, -0.0001248043408850208, -2.0210752487182617], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0019396792631596327, -5.006777428206988e-06, -0.00018535325943958014, -7.080780778778717e-05, -2.0265558760002023e-06, -0.48935675621032715, -0.6247311234474182, -1.6689286894688848e-06, -7.211902266135439e-05, -0.0020960045512765646, -0.12528419494628906, -9.65590606938349e-06, -0.00043049128726124763, -0.0359836108982563, -0.008139652200043201], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.578839045483619e-05, -1.7523612768854946e-05, -0.0002951186615973711, -0.007193853612989187, -9.345571743324399e-05, -0.0010785006452351809, -0.0025034775026142597, -0.00029762129997834563, -1.0371154530730564e-05, -0.00018988236843142658, -0.000846147071570158], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004168037325143814, -8.106198947643861e-06, -0.0005666795768775046, -0.0009870424401015043, -0.0008965287124738097, -0.00020394629973452538, -0.0003914067056030035, -0.0006211258587427437, -0.0005389191792346537], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.00269787828437984, -4.6491513785440475e-06, -1.7881377516459906e-06, -0.0012944899499416351, -0.11444937437772751, -0.00011145447206217796, -0.00010489867418073118, -0.001335801207460463, -0.002815570682287216, -0.0028136686887592077, -0.0022191202733665705], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.013535156846046448, -0.5389192700386047], "finish_reason": "stop"}], "metrics": {"energy": 173.62548534774783, "energy_per_token": 1.4115893117703076, "time": 7.557545, "time_per_token": 0.06144345528455285}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"Input df is not a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " is", " not", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -0.8922780752182007, -1.0546209812164307, -0.012325311079621315, -0.033057745546102524, -0.4064657986164093, -0.0037757314275950193, -1.1644673347473145, -0.0008150592911988497, -0.004682053346186876], "finish_reason": "stop"}, {"text": " df.drop_duplicates()", "tokens": [" df", ".", "drop", "_", "dup", "licates", "()", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -2.025205373764038, -0.0852770209312439], "finish_reason": "stop"}, {"text": " df.iloc[:, 1:-1].values", "tokens": [" df", ".", "il", "oc", "[:", ",", " ", "1", ":-", "1", "]", ".", "values", "\n"], "logprobs": [-0.006094324868172407, -0.6770970225334167, -1.9902160167694092, -5.0424259825376794e-05, -0.0052642300724983215, -0.001335444045253098, -1.444579839706421, -0.14224636554718018, -1.5565730333328247, -0.01661628484725952, -0.00032074074260890484, -3.0197513103485107, -0.24464720487594604, -0.05617374926805496], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.004925379995256662, -0.04259364679455757, -0.0002388668799540028, -0.00010990492592100054, -0.019376637414097786], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.000966915744356811, -3.0636318115284666e-05, -0.0037878446746617556, -0.00014602071314584464, -0.0009502424509264529, -5.1377883210079744e-05, -0.00028391621890477836, -5.090107151772827e-05, -0.0009099871967919171, -6.0437283536884934e-05, -0.00017653337272349745, -0.0007469248375855386, -0.006396060809493065, -1.1920922133867862e-06, -8.106198947643861e-06, -5.960446742392378e-06, -3.099436753473128e-06, -0.0001248043408850208, -0.14306746423244476, -0.00039593485416844487, -0.007469937205314636, -0.0001726001501083374, -0.022317098453640938, -4.172316494077677e-06, -2.658331868587993e-05, -0.00605012895539403, -0.021593933925032616, -4.8993817472364753e-05, -6.4490144723095e-05, -0.0009563163621351123, -0.015500782988965511, 0.0, -3.6954811548639555e-06, -0.0001387499796692282, -0.002003925619646907, -3.6954811548639555e-06, -9.142934868577868e-05, -0.09212267398834229, -0.0010176486102864146], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=10, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.001677416730672121, -4.529942543740617e-06, -0.00016342257731594145, -4.8993817472364753e-05, -2.0265558760002023e-06, -0.4935522675514221, -0.8030127286911011, -8.344646857949556e-07, -0.0041946289129555225, -0.0007637205999344587, -0.0029403807129710913, -0.21312448382377625, -0.005905797705054283, -1.4125399589538574, -0.08322430402040482, -1.7881377516459906e-06, -3.0874729418428615e-05, -0.00025567124248482287, -0.16644197702407837, -5.960446742392378e-06, -0.0003687655262183398, -0.03872400149703026, -0.006416789256036282], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.2569914259947836e-05, -1.7762025890988298e-05, -0.0003301552205812186, -0.0077648707665503025, -0.0001389883691444993, -0.0007708676857873797, -0.0026116808876395226, -0.00024732868769206107, -7.510157047363464e-06, -0.00022718709078617394, -0.0007416835287585855], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004897384438663721, -7.152531907195225e-06, -0.0005421360838226974, -0.0008080316474661231, -0.0010182439582422376, -0.00022587609419133514, -0.0003120412293355912, -0.0006700892699882388, -0.0006160030607134104], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.0022966694086790085, -5.364403477869928e-06, -2.0265558760002023e-06, -0.0012330556055530906, -0.13897378742694855, -0.00016807096835691482, -8.153582894010469e-05, -0.0012322221882641315, -0.0024958669673651457, -0.0025794587563723326, -0.0022199528757482767], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.012132066302001476, -0.517693042755127], "finish_reason": "stop"}], "metrics": {"energy": 179.31762052726754, "energy_per_token": 1.2282028803237504, "time": 8.187659, "time_per_token": 0.05607985616438356}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"Input should be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " should", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -2.6999106407165527, -0.0048220534808933735, -0.10897500813007355, -1.2820055484771729, -0.010379618965089321, -0.8360747694969177, -0.0007795632118359208, -0.0049209906719625], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'], keep='last')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "']", ",", " keep", "='", "last", "')", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -0.6117913126945496, -0.26825612783432007, -0.5058932304382324, -0.01120524387806654, -1.0440943241119385, -0.00657596904784441, -0.008351994678378105, -0.054488856345415115, -1.388000726699829, -0.08005385845899582, -0.08919844776391983], "finish_reason": "stop"}, {"text": " df.drop('Category', axis=1)", "tokens": [" df", ".", "drop", "('", "Category", "'", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.006171100307255983, -0.5637103915214539, -0.5852068066596985, -0.7924242615699768, -0.3660656213760376, -0.003825134364888072, -0.00011538793478393927, -0.002582193585112691, -0.008785050362348557, -0.0011972171487286687, -0.0073590632528066635, -0.0421455055475235], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0057222130708396435, -0.037469979375600815, -0.0002113357331836596, -0.00011276562872808427, -0.02030748501420021], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0009151084814220667, -3.0636318115284666e-05, -0.003847341053187847, -0.00014911970356479287, -0.0007406114018522203, -3.85038583772257e-05, -0.00031442465842701495, -5.543078441405669e-05, -0.0008378094644285738, -5.519237674889155e-05, -0.00016711745411157608, -0.0007468056865036488, -0.0068511576391756535, -1.1920922133867862e-06, -9.059865078597795e-06, -5.483612312673358e-06, -2.9802276912960224e-06, -0.00010847456724150106, -0.15544483065605164, -0.00044550508027896285, -0.006547901313751936, -0.0001685477327555418, -0.023348400369286537, -3.576272320060525e-06, -3.123234637314454e-05, -0.0045016855001449585, -0.021753283217549324, -5.400034933700226e-05, -7.545663538621739e-05, -0.0008382858941331506, -0.01438509114086628, 0.0, -3.4570634852570947e-06, -0.00010096516780322418, -0.0020201054867357016, -3.933898824470816e-06, -7.855583680793643e-05, -0.09529513865709305, -0.00115697190631181], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0017187122721225023, -4.410734163684538e-06, -0.00016664070426486433, -5.2927523938706145e-05, -1.9073468138230965e-06, -0.4679102301597595, -0.617242157459259, -1.5497195136049413e-06, -7.343022298300639e-05, -0.0019919094629585743, -0.09351600706577301, -1.0132738680113107e-05, -0.0004148814477957785, -0.04346570745110512, -0.007509810850024223], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.054346183896996e-05, -1.597391747054644e-05, -0.0003409996279515326, -0.007997159846127033, -0.00015615197480656207, -0.0007751559023745358, -0.002811647718772292, -0.00036507140612229705, -9.65590606938349e-06, -0.00022468426323030144, -0.000972155889030546], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004838187713176012, -7.867782187531702e-06, -0.0006074252305552363, -0.0009744186536408961, -0.0007936188485473394, -0.0002411313180346042, -0.0004745787591673434, -0.0006756883230991662, -0.0007073761080391705], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.002223640214651823, -4.529942543740617e-06, -1.9073468138230965e-06, -0.0012986568035557866, -0.11163800209760666, -0.0001209901092806831, -9.667406266089529e-05, -0.00135389668866992, -0.0020329540129750967, -0.0030074152164161205, -0.001894704531878233], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.011804135516285896, -1.3219633102416992, -2.3841830625315197e-06, -1.1920922133867862e-06, -6.3774932641536e-05, -0.00014578233822248876, -0.09395994991064072], "finish_reason": "stop"}], "metrics": {"energy": 194.7281704559326, "energy_per_token": 1.306900472858608, "time": 8.615352, "time_per_token": 0.057821154362416104}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError('Input must be a pandas DataFrame.')", "tokens": [" Value", "Error", "('", "Input", " must", " be", " a", " pandas", " Data", "Frame", ".", "')", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -1.7596702575683594, -0.45862433314323425, -1.4024264812469482, -0.0014800796052441, -0.059434063732624054, -0.3902222514152527, -0.04161403328180313, -0.0055826944299042225, -0.7309496402740479, -0.009734895080327988, -0.0025934891309589148], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset='Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "='", "Name", "')", "\n"], "logprobs": [-0.006517345551401377, -0.022867778316140175, -0.09301072359085083, -0.003249604720622301, -0.00016246906307060272, -3.2186455882765586e-06, -0.5574526786804199, -0.32378631830215454, -1.801422119140625, -0.00180272595025599, -0.14636942744255066, -0.07109681516885757], "finish_reason": "stop"}, {"text": " df.iloc[:, 1:-1]", "tokens": [" df", ".", "il", "oc", "[:", ",", " ", "1", ":-", "1", "]", "\n"], "logprobs": [-0.005656901281327009, -0.6457399725914001, -2.134755849838257, -4.684815212385729e-05, -0.005777327343821526, -0.0011470888275653124, -1.2975808382034302, -0.13727544248104095, -1.6646274328231812, -0.01793336682021618, -0.00030214988510124385, -0.1583656370639801], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.005533852614462376, -0.0401284322142601, -0.00020740265608765185, -0.00010895135346800089, -0.021315304562449455], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0009525052737444639, -3.361645576660521e-05, -0.003675849176943302, -0.00015555603022221476, -0.0008361419313587248, -4.994744449504651e-05, -0.0003060825983993709, -5.590759246842936e-05, -0.0009497660794295371, -6.115249561844394e-05, -0.00014625910262111574, -0.0007036832394078374, -0.008660731837153435, -1.311301275563892e-06, -7.986990567587782e-06, -8.22540732769994e-06, -3.4570634852570947e-06, -0.0001174142598756589, -0.16872645914554596, -0.00037448544753715396, -0.006530373357236385, -0.00016699827392585576, -0.022034471854567528, -3.099436753473128e-06, -2.455681169521995e-05, -0.00494946027174592, -0.022674579173326492, -4.3987260141875595e-05, -5.900685573578812e-05, -0.0008668717346154153, -0.017820602282881737, 0.0, -3.814689989667386e-06, -0.0001323135511483997, -0.0015624469378963113, -5.125986263010418e-06, -6.806619057897478e-05, -0.09979961067438126, -0.0010121704544872046], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.001697053201496601, -4.0531076592742465e-06, -0.0001787979417713359, -6.09140915912576e-05, -2.264974000354414e-06, -0.523905873298645, -0.7398184537887573, -1.6689286894688848e-06, -7.60526381782256e-05, -0.002164047211408615, -0.09725175052881241, -1.2159273865108844e-05, -0.0004128557338844985, -0.04218893498182297, -0.006005694158375263], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.149708886165172e-05, -1.537788011773955e-05, -0.0002755738969426602, -0.005811224225908518, -0.00011979816190432757, -0.0009064141195267439, -0.0028810682706534863, -0.0003277718205936253, -7.390948667307384e-06, -0.00020346954988781363, -0.0008516260422766209], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004258492961525917, -7.748573807475623e-06, -0.0005368936690501869, -0.0008629412623122334, -0.0008481719414703548, -0.00017033556650858372, -0.00037996700848452747, -0.0006216024048626423, -0.0005478549865074456], "finish_reason": "stop"}, {"text": " accuracy_score(predictions, y_test)", "tokens": [" accuracy", "_", "score", "(", "pred", "ictions", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.002084703417494893, -5.125986263010418e-06, -1.7881377516459906e-06, -0.0013049667468294501, -2.018101930618286, -0.0036499565467238426, -0.0009483369067311287, -0.001764527871273458, -8.427741704508662e-05, -6.01988795096986e-05, -0.0067743160761892796, -0.0032346330117434263], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.013113683089613914, -1.181056022644043, -2.50339189733495e-06, -1.4305104514278355e-06, -9.48860906646587e-05, -0.00014709345123264939, -0.07689915597438812], "finish_reason": "stop"}], "metrics": {"energy": 178.31097269058228, "energy_per_token": 1.2297308461419467, "time": 8.194457, "time_per_token": 0.056513496551724135}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"df must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "df", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -1.8769367933273315, -0.4334316849708557, -0.0011843579122796655, -0.0254165381193161, -0.18483078479766846, -0.01784507744014263, -0.002360298065468669, -0.4646698832511902, -0.0005343916127458215, -0.003847816027700901], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=['Name'])", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=['", "Name", "'])", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -0.6117913126945496, -0.26825612783432007, -0.5058932304382324, -0.01120524387806654, -0.5454886555671692, -0.08598248660564423], "finish_reason": "stop"}, {"text": " df.iloc[:, [1, 2]].values", "tokens": [" df", ".", "il", "oc", "[:", ",", " [", "1", ",", " ", "2", "]]", ".", "values", "\n"], "logprobs": [-0.006171100307255983, -0.5637103915214539, -2.106811285018921, -4.100715523236431e-05, -0.004816596396267414, -0.0014494876377284527, -1.0514297485351562, -0.9846882224082947, -0.09563104063272476, -0.11543837934732437, -0.03320639953017235, -0.04155033454298973, -1.8295469284057617, -0.22637870907783508, -0.06867647171020508], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.0057222130708396435, -0.037469979375600815, -0.0002113357331836596, -0.00011276562872808427, -0.02030748501420021], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0009151084814220667, -3.0636318115284666e-05, -0.003847341053187847, -0.00014911970356479287, -0.0007406114018522203, -3.85038583772257e-05, -0.00031442465842701495, -5.543078441405669e-05, -0.0008378094644285738, -5.519237674889155e-05, -0.00016711745411157608, -0.0007468056865036488, -0.0068511576391756535, -1.1920922133867862e-06, -9.059865078597795e-06, -5.483612312673358e-06, -2.9802276912960224e-06, -0.00010847456724150106, -0.15544483065605164, -0.00044550508027896285, -0.006547901313751936, -0.0001685477327555418, -0.023348400369286537, -3.576272320060525e-06, -3.123234637314454e-05, -0.0045016855001449585, -0.021753283217549324, -5.400034933700226e-05, -7.545663538621739e-05, -0.0008382858941331506, -0.01438509114086628, 0.0, -3.4570634852570947e-06, -0.00010096516780322418, -0.0020201054867357016, -3.933898824470816e-06, -7.855583680793643e-05, -0.09529513865709305, -0.00115697190631181], "finish_reason": "stop"}, {"text": " RandomForestClassifier(max_depth=3, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "max", "_", "depth", "=", "3", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0017187122721225023, -4.410734163684538e-06, -0.00016664070426486433, -5.2927523938706145e-05, -1.9073468138230965e-06, -0.4679102301597595, -2.4699184894561768, -4.768370445162873e-07, -0.04686013236641884, -0.001312228967435658, -1.528947353363037, -0.13286541402339935, -0.3080897033214569, -1.0728830375228426e-06, -2.95634672511369e-05, -0.00015531764074694365, -0.34603351354599, -8.821448318485636e-06, -0.00031704644788987935, -0.05490340664982796, -0.009501120075583458], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-6.460934673668817e-05, -1.5616295058862306e-05, -0.0003300360403954983, -0.008774533867835999, -8.594620157964528e-05, -0.0008132726070471108, -0.0028314997907727957, -0.0003293210465926677, -7.986990567587782e-06, -0.0001854724541772157, -0.000969535845797509], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004219557624310255, -7.033323527139146e-06, -0.0005093707586638629, -0.0008758046315051615, -0.0009129646932706237, -0.00020752183627337217, -0.0004343043256085366, -0.00082601752365008, -0.0006039702566340566], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.002513584913685918, -5.125986263010418e-06, -1.9073468138230965e-06, -0.001466033631004393, -0.14135371148586273, -0.00013612773909699172, -9.738924563862383e-05, -0.0013550871517509222, -0.002619646955281496, -0.0030882307328283787, -0.0022527810651808977], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.012929651886224747, -1.2368175983428955, -1.9073468138230965e-06, -1.311301275563892e-06, -7.760223525110632e-05, -0.00023112009512260556, -0.07484530657529831], "finish_reason": "stop"}], "metrics": {"energy": 185.86816232013703, "energy_per_token": 1.2069361189619288, "time": 8.402542, "time_per_token": 0.05456196103896104}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"df is not a DataFrame!\")", "tokens": [" Value", "Error", "(", "\"", "df", " is", " not", " a", " Data", "Frame", "!", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -1.8769367933273315, -1.8498249053955078, -0.016610657796263695, -0.033138129860162735, -0.45439139008522034, -0.004218370653688908, -3.6518006324768066, -0.03431788831949234, -0.0006100462633185089, -0.00539964297786355], "finish_reason": "stop"}, {"text": " df.drop_duplicates(['Name']).reset_index(drop=True)", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(['", "Name", "'])", ".", "reset", "_", "index", "(", "drop", "=", "True", ")", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -2.1596734523773193, -0.014269458130002022, -0.37596938014030457, -2.888577938079834, -0.9669617414474487, -4.851700214203447e-05, -0.00014053787162993103, -0.0865444764494896, -0.0010550415609031916, -0.00355897075496614, -0.001312705222517252, -0.0019594295881688595, -0.03315819799900055], "finish_reason": "stop"}, {"text": " df.drop(['Name', 'Category'], axis=1)", "tokens": [" df", ".", "drop", "(['", "Name", "'", ",", " '", "Category", "']", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.006094324868172407, -0.6770970225334167, -0.5751482844352722, -1.1724611520767212, -0.08222991228103638, -0.06481971591711044, -0.00010430268594063818, -0.014539600349962711, -0.7143722772598267, -0.030635014176368713, -0.00032455421751365066, -0.0010917185572907329, -0.022949684411287308, -0.0019257587846368551, -0.006423185113817453, -0.029468610882759094], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.004925379995256662, -0.04259364679455757, -0.0002388668799540028, -0.00010990492592100054, -0.019376637414097786], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.000966915744356811, -3.0636318115284666e-05, -0.0037878446746617556, -0.00014602071314584464, -0.0009502424509264529, -5.1377883210079744e-05, -0.00028391621890477836, -5.090107151772827e-05, -0.0009099871967919171, -6.0437283536884934e-05, -0.00017653337272349745, -0.0007469248375855386, -0.006396060809493065, -1.1920922133867862e-06, -8.106198947643861e-06, -5.960446742392378e-06, -3.099436753473128e-06, -0.0001248043408850208, -0.14306746423244476, -0.00039593485416844487, -0.007469937205314636, -0.0001726001501083374, -0.022317098453640938, -4.172316494077677e-06, -2.658331868587993e-05, -0.00605012895539403, -0.021593933925032616, -4.8993817472364753e-05, -6.4490144723095e-05, -0.0009563163621351123, -0.015500782988965511, 0.0, -3.6954811548639555e-06, -0.0001387499796692282, -0.002003925619646907, -3.6954811548639555e-06, -9.142934868577868e-05, -0.09212267398834229, -0.0010176486102864146], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.001677416730672121, -4.529942543740617e-06, -0.00016342257731594145, -4.8993817472364753e-05, -2.0265558760002023e-06, -0.4935522675514221, -0.8308542966842651, -1.5497195136049413e-06, -7.116541382856667e-05, -0.002022246830165386, -0.09661512821912766, -1.0490362910786644e-05, -0.00041631137719377875, -0.04311329871416092, -0.007315633352845907], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-4.9470632802695036e-05, -1.6689160474925302e-05, -0.0003083468764089048, -0.008814710192382336, -0.00012814177898690104, -0.0008044582791626453, -0.00271428469568491, -0.0004223884898237884, -7.271740287251305e-06, -0.0002261144545627758, -0.0007681279676035047], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004468812141567469, -7.510157047363464e-06, -0.0005557184922508895, -0.0011148196645081043, -0.0010889797704294324, -0.00018869050836656243, -0.0003634030872490257, -0.0006556744920089841, -0.0007500219508074224], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, predictions)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " predictions", ")", "\n"], "logprobs": [-0.002039853949099779, -4.291525328881107e-06, -1.7881377516459906e-06, -0.0009982370538637042, -0.14612524211406708, -0.00013243274588603526, -8.606540359323844e-05, -0.0013649680186063051, -0.0031931623816490173, -0.0028514699079096317, -0.00206864345818758], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.011607491411268711, -1.1309592723846436, -2.264974000354414e-06, -1.1920922133867862e-06, -7.450303382938728e-05, -0.0002044230350293219, -0.11271435767412186], "finish_reason": "stop"}], "metrics": {"energy": 241.89409999465934, "energy_per_token": 1.5506032050939702, "time": 9.452647, "time_per_token": 0.06059389102564103}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"Input df must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -0.8922780752182007, -0.6708949208259583, -0.001069093239493668, -0.04028657451272011, -0.17665065824985504, -0.01688532717525959, -0.0021423976868391037, -0.5091519951820374, -0.007034653797745705, -0.0005965837044641376, -0.004448043182492256], "finish_reason": "stop"}, {"text": " df.drop_duplicates(subset=\"Name\", keep=\"first\")", "tokens": [" df", ".", "drop", "_", "dup", "licates", "(", "subset", "=", "\"", "Name", "\"", ",", " keep", "=", "\"", "first", "\"", ")", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -0.6117913126945496, -0.26825612783432007, -2.080176830291748, -0.04485289752483368, -0.002912448486313224, -5.507317473529838e-05, -0.7220754623413086, -0.007994676008820534, -0.15846432745456696, -0.000660439720377326, -0.24565894901752472, -1.597391747054644e-05, -0.09914333373308182, -0.03687741979956627], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.006171100307255983, -0.8933765292167664, -0.009498167783021927, -0.01057225838303566, -0.029219722375273705, -5.376194530981593e-05, -0.015325525775551796, -0.0006435230607166886, -0.0056154122576117516, -0.001134109916165471, -0.15544483065605164], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.006513910833746195, -0.03484910726547241, -0.00020740265608765185, -0.00011395759065635502, -0.02054551988840103], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.0008347125840373337, -3.2305197237292305e-05, -0.004181333351880312, -0.00015889335190877318, -0.0008391196606680751, -5.245071224635467e-05, -0.0003067976504098624, -4.8993817472364753e-05, -0.000683074293192476, -7.974783511599526e-05, -0.00016199229867197573, -0.0007117837085388601, -0.008809510618448257, -1.1920922133867862e-06, -6.794906312279636e-06, -7.510157047363464e-06, -3.2186455882765586e-06, -0.00011991735664196312, -2.120537757873535], "finish_reason": "stop"}, {"text": " RandomForestClassifier(random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0016098171472549438, -4.291525328881107e-06, -0.0001532914029667154, -5.566918844124302e-05, -2.0265558760002023e-06, -0.5023409724235535, -0.6417694687843323, -1.9073468138230965e-06, -6.186770770000294e-05, -0.0019180249655619264, -0.1167929470539093, -1.0371154530730564e-05, -0.0004239375703036785, -0.03660956770181656, -0.0079458337277174], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.566918844124302e-05, -1.597391747054644e-05, -0.00034957972820848227, -0.008615466766059399, -0.00010573305189609528, -0.0008349508279934525, -0.0026871783193200827, -0.0005060345865786076, -6.556489552167477e-06, -0.00020585325546562672, -0.0008873577462509274], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.004518893081694841, -7.390948667307384e-06, -0.0005710878176614642, -0.0008424547268077731, -0.0009576263837516308, -0.00017772526189219207, -0.0004326361231505871, -0.0004808938247151673, -0.0005919373361393809], "finish_reason": "stop"}, {"text": " accuracy_score(predictions, y_test)", "tokens": [" accuracy", "_", "score", "(", "pred", "ictions", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.002086130902171135, -7.033323527139146e-06, -1.7881377516459906e-06, -0.0015299530932679772, -1.7793245315551758, -0.0029817428439855576, -0.001212576637044549, -0.0017081208061426878, -6.961580220377073e-05, -6.16293036728166e-05, -0.008624212816357613, -0.0031628606375306845], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.011584159918129444, -0.4956800937652588], "finish_reason": "stop"}], "metrics": {"energy": 175.16526585388178, "energy_per_token": 1.3474251219529367, "time": 7.741255, "time_per_token": 0.05954811538461538}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.22377286851406097, -0.012272086925804615, -0.0002836778585333377, -0.004787055309861898, -0.0003817544784396887, -0.03775252401828766, -3.194758028257638e-05, -0.05404680594801903, -0.005744377616792917, -0.009853178635239601], "finish_reason": "stop"}, {"text": " ValueError(\"Input dataframe must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", "frame", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.011847489513456821, -2.4199192921514623e-05, -0.2075653076171875, -0.0912742018699646, -0.4697216749191284, -1.742841124534607, -1.9132657051086426, -1.0284240245819092, -0.0025435497518628836, -0.18687652051448822, -0.13360194861888885, -0.11759323626756668, -0.011374271474778652, -1.0395091772079468, -0.0005044856225140393, -0.004474627319723368], "finish_reason": "stop"}, {"text": " df.drop_duplicates('Name')", "tokens": [" df", ".", "drop", "_", "dup", "licates", "('", "Name", "')", "\n"], "logprobs": [-0.00568582396954298, -0.018601497635245323, -0.09494318813085556, -0.0030225091613829136, -0.00015853578224778175, -2.861018856492592e-06, -1.5738484859466553, -0.0012779411626979709, -0.09486708045005798, -0.12686589360237122], "finish_reason": "stop"}, {"text": " df[['Age', 'Score']]", "tokens": [" df", "[", "['", "Age", "'", ",", " '", "Score", "']", "]", "\n"], "logprobs": [-0.006094324868172407, -0.7573372721672058, -0.006859090179204941, -0.011802133172750473, -0.026874469593167305, -5.721882189391181e-05, -0.017561886459589005, -0.0008183944155462086, -0.005558984819799662, -0.0012390087358653545, -0.15311738848686218], "finish_reason": "stop"}, {"text": " df['Category']", "tokens": [" df", "['", "Category", "']", "\n"], "logprobs": [-0.005325180012732744, -0.0335046760737896, -0.0002115741081070155, -0.0001294529065489769, -0.020585693418979645], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state, stratify=y)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "random", "_", "state", ",", " strat", "ify", "=", "y", ")", "\n"], "logprobs": [-0.0007993363542482257, -2.729855441430118e-05, -0.003809221088886261, -0.00013779645087197423, -0.000873065204359591, -4.5536911784438416e-05, -0.0003513672563713044, -4.911301948595792e-05, -0.0008779485360719264, -7.629103492945433e-05, -0.00016282663273159415, -0.000759074988309294, -0.006154513452202082, -1.311301275563892e-06, -8.106198947643861e-06, -4.529942543740617e-06, -3.3378546504536644e-06, -0.00011145447206217796, -0.16052314639091492, -0.0005254556890577078, -0.00600202102214098, -0.00016807096835691482, -0.025919169187545776, -5.125986263010418e-06, -3.182837463100441e-05, -0.005514172837138176, -0.019378039985895157, -5.054346183896996e-05, -7.30726242181845e-05, -0.0008069596369750798, -0.015480241738259792, 0.0, -4.172316494077677e-06, -0.00013076403411105275, -0.0016499252524226904, -3.6954811548639555e-06, -8.296622399939224e-05, -2.21683406829834, -0.8671009540557861, -0.016101330518722534, -0.003410596400499344, -0.0210576094686985, -0.0728069618344307, -0.0032168091274797916], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=100, random_state=random_state)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "1", "0", "0", ",", " random", "_", "state", "=", "random", "_", "state", ")", "\n"], "logprobs": [-0.0015948207583278418, -4.291525328881107e-06, -0.00013624693383462727, -6.4490144723095e-05, -2.0265558760002023e-06, -0.4877285957336426, -0.8723759055137634, -9.536738616588991e-07, -0.0038836784660816193, -0.0008102948195300996, -0.0026534132193773985, -0.2120712548494339, -0.0049558659084141254, -0.3128774166107178, -0.3613273799419403, -0.0862169861793518, -1.7881377516459906e-06, -2.884823152271565e-05, -0.0002616301644593477, -0.18236559629440308, -5.960446742392378e-06, -0.0002935693773906678, -0.045520830899477005, -0.005801505874842405], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-5.507317473529838e-05, -1.7523612768854946e-05, -0.000277123210253194, -0.005840853322297335, -0.00014172980445437133, -0.0009788251481950283, -0.002594678197056055, -0.0003321811091154814, -8.22540732769994e-06, -0.00022075122979003936, -0.0008239926537498832], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00407009432092309, -7.271740287251305e-06, -0.0005345107638277113, -0.001019673072732985, -0.0011155341053381562, -0.00016675988445058465, -0.00036971885128878057, -0.0007518087513744831, -0.000614335120189935], "finish_reason": "stop"}, {"text": " accuracy_score(predictions, y_test)", "tokens": [" accuracy", "_", "score", "(", "pred", "ictions", ",", " y", "_", "test", ")", "\n"], "logprobs": [-0.0023776614107191563, -4.887569048150908e-06, -1.6689286894688848e-06, -0.0014092524070292711, -1.9559862613677979, -0.003544597653672099, -0.0012950851814821362, -0.0016401661559939384, -7.748303323751315e-05, -6.890059739816934e-05, -0.007031694054603577, -0.0032420000061392784], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.013424600474536419, -0.6035829186439514], "finish_reason": "stop"}], "metrics": {"energy": 191.92472529315953, "energy_per_token": 1.2462644499555813, "time": 8.602177, "time_per_token": 0.055858292207792204}}
