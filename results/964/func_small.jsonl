{"outputs": [{"text": "# Check if the source directory exists\n    source_path = Path(source_directory)\n    if not source_path.exists():\n        raise FileNotFoundError(f\"Source directory {source_directory} not found.\")\n\n    # List all the files in the source directory\n    file_paths = []\n    for root, dirnames, filenames in os.walk(source_path):\n        for filename in filenames:\n            if (source_path / filename).suffix in ('.txt', '.docx', '.xlsx', '.csv'):\n                file_paths.append(Path(os.path.join(root, filename)))\n\n    # Remove the file extension from the path and create CSV file names from file paths\n    file_name_list = []\n    for path in file_paths:\n        filename = str(path.relative_to(source_path).with_suffix(\"\"))\n        file_name_list.append(f\"{filename}.csv\")\n\n    # Create the target directory if it does not exist\n    target_path =", "tokens": ["#", " Check", " if", " the", " source", " directory", " exists", "\n", "    ", "source", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "#", " List", " all", " the", " files", " in", " the", " source", " directory", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " root", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "path", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "if", " (", "source", "_", "path", " /", " filename", ")", ".", "suff", "ix", " in", " ('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "')", ":", "\n", "                ", "file", "_", "paths", ".", "append", "(", "Path", "(", "os", ".", "path", ".", "join", "(", "root", ",", " filename", ")))", "\n", "\n", "    ", "#", " Remove", " the", " file", " extension", " from", " the", " path", " and", " create", " CS", "V", " file", " names", " from", " file", " paths", "\n", "    ", "file", "_", "name", "_", "list", " =", " []", "\n", "    ", "for", " path", " in", " file", "_", "paths", ":", "\n", "        ", "filename", " =", " str", "(", "path", ".", "relative", "_", "to", "(", "source", "_", "path", ")", ".", "with", "_", "suff", "ix", "(", "\"", "\"", "))", "\n", "        ", "file", "_", "name", "_", "list", ".", "append", "(", "f", "\"", "{", "filename", "}", ".", "csv", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "target", "_", "path", " ="], "logprobs": [-1.4604746103286743, -0.882057785987854, -0.22977805137634277, -0.49850672483444214, -0.05534564331173897, -0.0649527758359909, -0.01155363954603672, -0.253643661737442, -0.001888398313894868, -2.587972402572632, -0.012699917890131474, -2.8645715713500977, -0.03456631675362587, -0.06429994106292725, -0.0008771148277446628, -0.002797501627355814, -3.862306402879767e-05, -1.5735502529423684e-05, -0.0014921018155291677, -0.07653128355741501, -0.012409026734530926, -0.018883924931287766, -0.04189552366733551, -0.07599225640296936, -6.663577369181439e-05, -0.00038795097498223186, -8.272782724816352e-05, -0.10377121716737747, -0.005476116202771664, -0.00651201605796814, -0.0005482124397531152, -0.01893703266978264, -0.002285965019837022, -6.69933797325939e-05, -1.8000440832111053e-05, -0.2836908996105194, -0.276520699262619, -0.14492525160312653, -0.4574697017669678, -0.042130760848522186, -1.084150791168213, -0.0017488199518993497, -0.00016091958968900144, -0.1940079778432846, -0.017365433275699615, -0.6240849494934082, -0.0017623859457671642, -0.29984769225120544, -0.012873165309429169, -0.00010132275929208845, -0.0027281944639980793, -0.07777060568332672, -0.0009700122172944248, -0.12193771451711655, -3.621955156326294, -0.5100480914115906, -1.8127939701080322, -0.2000488042831421, -0.14559143781661987, -0.011028878390789032, -0.022037504240870476, -0.00739077664911747, -0.3476879894733429, -0.00035506143467500806, -2.063279628753662, -0.0070841326378285885, -1.888984203338623, -0.02755231037735939, -2.274811029434204, -0.0046008918434381485, -0.012652717530727386, -0.03743530064821243, -1.0636755228042603, -0.0027100048027932644, -3.355461597442627, -0.39406177401542664, -0.0001113352773245424, -0.009683540090918541, -8.22540732769994e-06, -5.1020273531321436e-05, -0.00024244230007752776, -0.0014815079048275948, -2.0265558760002023e-06, -2.253030106658116e-05, -0.0002901133266277611, -0.011753947474062443, -5.4596363042946905e-05, -0.3978399336338043, -0.051954712718725204, -0.012909999117255211, -0.0006473353132605553, -0.3819691836833954, -0.08220981806516647, -0.00019965562387369573, -0.004776970949023962, -8.344646857949556e-07, -3.6954811548639555e-06, -0.00021872512297704816, -0.0034506323281675577, -0.0008868813747540116, -2.4681026935577393, -2.27842378616333, -2.292320966720581, -0.0005038899253122509, -0.06794743239879608, -0.08635466545820236, -0.1338338851928711, -0.001256391522474587, -0.002188432030379772, -0.11893472820520401, -0.00018976318824570626, -0.42468371987342834, -1.8567169904708862, -0.008608375675976276, -0.034059833735227585, -0.003106769872829318, -0.0001541257370263338, -0.006376753095537424, -0.00125770119484514, -0.03300665318965912, -0.003921083174645901, -0.029839975759387016, -0.0001408954558428377, -0.0057065668515861034, -0.001698124222457409, -0.04961153119802475, -0.0012894895626232028, -0.0041853697039186954, -0.012835975736379623, -0.00016783259343355894, -0.0039438814856112, -0.0009080815361812711, -0.02483295649290085, -0.032283101230859756, -0.013018141500651836, -0.022348573431372643, -0.0005322470096871257, -0.016782408580183983, -0.0007877822499722242, -0.013439420610666275, -0.001179118873551488, -0.0006216024048626423, -0.07864801585674286, -2.2381651401519775, -0.014690562151372433, -1.1980077028274536, -7.438383181579411e-05, -0.0025236920919269323, -0.0005594118847511709, -0.026740193367004395, -0.000300958170555532, -0.008171104826033115, -0.0007738456479273736, -0.006389664486050606, -0.06634865701198578, -0.004312976263463497, -0.03226498141884804, -0.002709886059165001, -0.10614464432001114, -3.7283976078033447, -1.735366940498352, -2.6754064559936523, -1.2217867374420166, -0.42637014389038086, -0.3389091193675995, -3.5053112506866455, -1.6082382202148438, -2.3459060192108154, -3.3570404052734375, -0.01339684147387743, -2.3680388927459717, -1.3420586585998535, -2.4658169746398926, -2.9235386848449707, -0.44499659538269043, -0.10943051427602768, -0.0011125572491437197, -1.7182917594909668, -0.007917094975709915, -3.594675064086914, -0.0539519339799881, -1.4406039714813232, -0.014878380112349987, -0.9794947504997253, -0.005150739569216967, -0.006044560112059116, -0.07453034073114395, -1.4758436679840088, -0.01827099919319153, -0.006197757087647915, -2.145764938177308e-06, -9.894321920000948e-06, -0.0005596501869149506, -0.0011199399596080184, -0.0020249830558896065, -3.014261484146118, -0.12003963440656662, -1.9355366230010986, -0.007186160422861576, -0.03581225126981735, -0.7547681927680969, -2.492691993713379, -0.0016146968118846416, -0.00020144341397099197, -0.0014855550834909081, -0.04812527820467949, -0.00020311199477873743, -0.0513431578874588, -1.9929414987564087, -0.005724227987229824, -0.17370548844337463, -1.811964830267243e-05, -0.05730189010500908, -0.00019333878299221396, -1.4284324645996094, -0.08061324805021286, -0.6729000806808472, -0.030025549232959747, -0.2892671823501587, -0.0058044688776135445, -0.22348080575466156, -0.003780956845730543, -0.009392478503286839, -0.08555950969457626, -0.0017953482456505299, -0.0023972841445356607, -0.002667323686182499, -0.06604696065187454, -1.971955418586731, -0.15527144074440002, -0.019588125869631767, -0.36958128213882446, -0.15524092316627502, -0.0013196102809160948, -0.0025552024599164724, -0.0004555141495075077, -0.004238669760525227, -0.012164335697889328, -0.02851763926446438, -0.0016596842324361205, -0.11887376010417938, -1.1378138065338135, -1.6557893753051758, -0.17875944077968597, -0.052993446588516235, -0.11685594916343689, -0.022784467786550522, -0.9786765575408936, -0.0004812512779608369, -0.05399022251367569, -0.05530402436852455, -0.00032884435495361686, -0.36636656522750854, -0.002510374179109931, -0.057735756039619446, -0.0024662574287503958], "finish_reason": "length"}], "metrics": {"energy": 437.6696155967714, "energy_per_token": 1.7096469359248883, "time": 13.749771, "time_per_token": 0.05371004296875}}
{"outputs": [{"text": "if not os.path.exists(source_directory):\n        raise FileNotFoundError(\n            'The source directory does not exist. Please check the provided path.')\n    elif not os.path.isdir(source_directory):\n        raise ValueError('The provided source directory is not a directory.')\n\n    counter: int = 0\n    source_directory_path = Path(source_directory)\n    files = source_directory_path.iterdir()\n\n    for file in files:\n        if file.suffix in ('.txt', '.docx', '.xlsx', '.csv'):\n            print(f'Converting {file.name}...')\n            if file.suffix == '.txt':\n                pd.read_text(file, encoding='utf-8', errors='ignore').to_csv(\n                    target_directory + '/' + file.stem + '.csv')\n            else:\n                file_extension = '.' + file.suffix\n                if file_extension == '.csv':\n                    df: pd.DataFrame = pd.read", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\n", "            ", "'", "The", " source", " directory", " does", " not", " exist", ".", " Please", " check", " the", " provided", " path", ".", "')", "\n", "    ", "elif", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " Value", "Error", "('", "The", " provided", " source", " directory", " is", " not", " a", " directory", ".", "')", "\n", "\n", "    ", "counter", ":", " int", " =", " ", "0", "\n", "    ", "source", "_", "directory", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "files", " =", " source", "_", "directory", "_", "path", ".", "iter", "dir", "()", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "if", " file", ".", "suff", "ix", " in", " ('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "')", ":", "\n", "            ", "print", "(", "f", "'", "Con", "verting", " {", "file", ".", "name", "}", ".", ".", ".", "')", "\n", "            ", "if", " file", ".", "suff", "ix", " ==", " '", ".", "txt", "':", "\n", "                ", "pd", ".", "read", "_", "text", "(", "file", ",", " encoding", "='", "utf", "-", "8", "'", ",", " errors", "='", "ignore", "')", ".", "to", "_", "csv", "(", "\n", "                ", "    ", "target", "_", "directory", " +", " '/", "'", " +", " file", ".", "stem", " +", " '", ".", "csv", "')", "\n", "            ", "else", ":", "\n", "                ", "file", "_", "extension", " =", " '", ".", "'", " +", " file", ".", "suff", "ix", "\n", "                ", "if", " file", "_", "extension", " ==", " '", ".", "csv", "':", "\n", "                ", "    ", "df", ":", " pd", ".", "DataFrame", " =", " pd", ".", "read"], "logprobs": [-2.073333501815796, -0.11743085831403732, -0.10817014425992966, -3.5523738915799186e-05, -0.0004899493651464581, -0.008010641671717167, -0.3882741332054138, -0.0009301149984821677, -0.02972519025206566, -0.00022432672267314047, -0.00011503035057103261, -0.0032932115718722343, -0.034823548048734665, -0.001312943291850388, -0.04249996691942215, -0.0028183048125356436, -5.090107151772827e-05, -3.659658250398934e-05, -0.28828370571136475, -3.0304956436157227, -0.006290161516517401, -2.620305299758911, -0.7069713473320007, -0.1748058944940567, -0.02772868424654007, -0.207061767578125, -0.0002797450579237193, -0.0016314780805259943, -0.6718882322311401, -0.6593192219734192, -0.5282780528068542, -0.15134556591510773, -2.0660884380340576, -0.11471948772668839, -0.26051026582717896, -0.013199450448155403, -0.0033481037244200706, -1.488887071609497, -3.1648073196411133, -0.16199922561645508, -0.047797124832868576, -0.0008914072532206774, -0.008209413848817348, -0.0118629215285182, -0.47220778465270996, -0.006723519414663315, -0.00023576818057335913, -0.04311957582831383, -3.671578815556131e-05, -4.9828242481453344e-05, -0.009032106027007103, -0.005888969171792269, -0.0007415643776766956, -0.1314041018486023, -1.3597060441970825, -4.8397800128441304e-05, -0.851290225982666, -0.17163510620594025, -0.8579431176185608, -0.3204299509525299, -0.2705412805080414, -0.05699092522263527, -0.06857507675886154, -0.04290786758065224, -0.37242504954338074, -0.03694324940443039, -0.127823606133461, -0.0004395472351461649, -0.5612179636955261, -0.0009030792862176895, -3.620086193084717, -2.8651282787323, -0.017093945294618607, -0.013928943313658237, -0.003381013870239258, -0.0027900123968720436, -0.07751966267824173, -0.4123744070529938, -2.0986697673797607, -0.05706129968166351, -0.39143967628479004, -1.098771095275879, -0.2984764873981476, -1.2125370502471924, -0.0174756720662117, -0.0014099667314440012, -0.0033404999412596226, -3.766942609217949e-05, -8.583032467868179e-06, -0.0018126023933291435, -0.06892874836921692, -0.2573854923248291, -3.685492515563965, -1.2239165306091309, -1.0340827703475952, -4.529942543740617e-06, -3.349725011503324e-05, -0.0003687655262183398, -3.814689989667386e-06, -7.247662142617628e-05, -1.4332785606384277, -0.0011233931872993708, -0.0004316828562878072, -0.05081610009074211, -0.8612563014030457, -0.00018416139937471598, -0.25398242473602295, -0.17501115798950195, -0.15391826629638672, -0.008566063828766346, -0.00042060110718011856, -0.009198429994285107, -0.033567849546670914, -0.37179407477378845, -0.2104608565568924, -0.001213171985000372, -1.5563522577285767, -3.45700973412022e-05, -0.8021122217178345, -1.3282749652862549, -0.009447273798286915, -0.048716772347688675, -0.012479668483138084, -0.0002982171718031168, -0.010307767428457737, -0.001503052655607462, -0.10945957899093628, -0.008231168612837791, -0.06215493753552437, -0.00030357998912222683, -0.003617530455812812, -0.0031346967443823814, -0.05948977917432785, -0.0010158622171729803, -0.003650312777608633, -0.01818847469985485, -0.00018189683032687753, -0.0033530937507748604, -0.001292585046030581, -0.036031562834978104, -0.0556565597653389, -0.027064887806773186, -0.011140289716422558, -0.016862938180565834, -3.586503028869629, -0.1391870677471161, -0.3446064889431, -0.19992397725582123, -0.7269110679626465, -0.031284891068935394, -0.538648784160614, -0.041287507861852646, -0.2705412805080414, -0.058445628732442856, -0.020792489871382713, -1.0564026832580566, -0.03239620849490166, -0.004593297373503447, -0.045838914811611176, -0.007945715449750423, -0.1020975410938263, -1.607901930809021, -0.11306128650903702, -0.0008989107445813715, -0.030089519917964935, -5.3881147323409095e-05, -0.050777122378349304, -0.008063028566539288, -0.0011629253858700395, -0.40903404355049133, -0.026284655556082726, -0.008725610561668873, -0.001955146435648203, -2.857445240020752, -0.07452668994665146, -0.05975224822759628, -0.0007470439304597676, -0.5913000106811523, -0.006817296147346497, -0.2617308497428894, -0.8543366193771362, -0.32834136486053467, -0.09504725784063339, -0.06447095423936844, -0.08309310674667358, -0.013400370255112648, -1.5296802520751953, -0.009571731090545654, -2.298954486846924, -0.015493270941078663, -0.18929392099380493, -0.17333096265792847, -0.2907370328903198, -0.022529946640133858, -3.576278118089249e-07, -0.0006189814303070307, -0.06730468571186066, -0.5012206435203552, -0.00030286493711173534, -0.00907959695905447, -1.5543915033340454, -0.011940079741179943, -0.004651559051126242, -0.359397292137146, -0.5247986912727356, -0.027871640399098396, -0.0016482589999213815, -0.12995144724845886, -0.005990289617329836, -0.2976434826850891, -0.013417072594165802, -0.07000092417001724, -0.0016305259196087718, -0.00769933732226491, -1.8105788230895996, -0.009226777590811253, -0.20642969012260437, -2.9792957305908203, -8.606540359323844e-05, -0.014398956671357155, -0.0028773832600563765, -3.3322787284851074, -0.5289139747619629, -3.012010097503662, -0.2912958264350891, -2.7862846851348877, -0.4227526783943176, -0.37221309542655945, -0.004409115295857191, -0.05239463597536087, -0.0016868184320628643, -0.02094554714858532, -3.528532761265524e-05, -1.510117530822754, -0.028236644342541695, -1.503861665725708, -0.06960348039865494, -0.23935136198997498, -0.00018880968855228275, -0.12417528033256531, -0.008421622216701508, -0.0010682597057893872, -1.1513915061950684, -0.014159453101456165, -0.023122679442167282, -0.0010799296433106065, -0.00047124247066676617, -2.515718460083008, -2.066840171813965, -0.034946270287036896, -0.010950824245810509, -0.00945105217397213, -0.010962261818349361, -0.012528171762824059, -0.0001714082609396428, -0.007340957876294851], "finish_reason": "length"}], "metrics": {"energy": 361.9463484535216, "energy_per_token": 1.4138529236465687, "time": 12.508545, "time_per_token": 0.04886150390625}}
{"outputs": [{"text": "# Check if source directory exists\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Source directory '{source_directory}' not found.\")\n\n    # Check if target directory exists\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    else:\n        for file in os.listdir(target_directory):\n            path = os.path.join(target_directory, file)\n            if os.path.isfile(path):\n                os.remove(path)\n\n    files = []\n    file_count = 0\n    for file in os.listdir(source_directory):\n        path = os.path.join(source_directory, file)\n        if os.path.isfile(path):\n            files.append(file)\n\n    for file in files:\n        if file.lower().endswith('.txt'):\n            text = read_file(source_directory + file)\n            write_file(target_directory, file, 'Text', text)\n            file_count +=", "tokens": ["#", " Check", " if", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "directory", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " target", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "target", "_", "directory", ")", "\n", "    ", "else", ":", "\n", "        ", "for", " file", " in", " os", ".", "list", "dir", "(", "target", "_", "directory", "):", "\n", "            ", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", ")", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "path", "):", "\n", "                ", "os", ".", "remove", "(", "path", ")", "\n", "\n", "    ", "files", " =", " []", "\n", "    ", "file", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "path", "):", "\n", "            ", "files", ".", "append", "(", "file", ")", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "if", " file", ".", "lower", "()", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "text", " =", " read", "_", "file", "(", "source", "_", "directory", " +", " file", ")", "\n", "            ", "write", "_", "file", "(", "target", "_", "directory", ",", " file", ",", " '", "Text", "'", ",", " text", ")", "\n", "            ", "file", "_", "count", " +="], "logprobs": [-1.2732598781585693, -0.9082789421081543, -0.21613462269306183, -0.9031029343605042, -0.22464503347873688, -0.018011698499321938, -0.16835330426692963, -0.002863119123503566, -0.10517096519470215, -0.03111942857503891, -0.03712785616517067, -8.106198947643861e-06, -0.00010716341057559475, -0.0032613680232316256, -0.21441242098808289, -0.0002848696312867105, -0.0018396135419607162, -0.00011705666838679463, -8.737658936297521e-05, -0.001347587094642222, -0.004354993812739849, -0.000582644424866885, -0.028108229860663414, -0.0024471119977533817, -4.327203714638017e-05, -2.3245540432981215e-05, -0.27320700883865356, -0.3962506651878357, -0.19700035452842712, -0.4266200363636017, -0.04339824616909027, -1.3335480690002441, -0.0002225389762315899, -0.0007267932523973286, -0.00012885693286079913, -0.00011407678539399058, -0.0014292511623352766, -0.6615394949913025, -0.0008703258354216814, -0.23759756982326508, -0.011616681702435017, -8.070142939686775e-05, -0.0026228572241961956, -0.09437603503465652, -0.0009042703313753009, -0.13526301085948944, -1.6700226068496704, -0.03843725472688675, -0.04952769726514816, -0.005888613872230053, -0.04442811757326126, -0.6020553112030029, -0.0007115454645827413, -0.34091123938560486, -0.04304547235369682, -0.007897934876382351, -0.0007730118231847882, -9.786603914108127e-05, -0.0010170531459152699, -0.025017250329256058, -0.00012766500003635883, -0.002994222566485405, -1.2397689715726301e-05, -1.2874520507466514e-05, -0.0063768718391656876, -0.004231784492731094, -0.0013331820955500007, -0.11977052688598633, -0.0013847296359017491, -1.4144214391708374, -8.106198947643861e-06, -0.0006760457181371748, -0.009549533016979694, -1.5735502529423684e-05, -2.729855441430118e-05, -0.0016912217251956463, -0.04759788140654564, -2.1129887104034424, -0.6566182971000671, -6.389413465512916e-05, -0.04547105357050896, -0.0038738222792744637, -2.1143105030059814, -0.543082058429718, -0.37920695543289185, -0.1481763869524002, -0.0012873465893790126, -0.008506374433636665, -1.1920922133867862e-06, -0.0008623456815257668, -0.033909231424331665, -1.9311717551317997e-05, -7.56950321374461e-05, -0.0010785006452351809, -0.018009472638368607, -0.0025022882036864758, -3.1101484298706055, -0.03179647773504257, -0.16729357838630676, -4.291525328881107e-06, -3.6477376852417365e-05, -0.005043877754360437, -0.0009018882992677391, -7.462222856702283e-05, -0.003951599355787039, -2.95634672511369e-05, -6.770858453819528e-05, -0.00016664070426486433, -0.0018048678757622838, -0.00030083899036981165, -0.003491260576993227, -0.019943896681070328, -0.10885986685752869, -0.043267540633678436, -2.52720492426306e-05, -0.00011181206355104223, -0.0003053675754927099, -0.003981046378612518, -0.04477253928780556, -6.115249561844394e-05, -0.0012567488010972738, -0.18794021010398865, -0.011969645507633686, -0.0011042217956855893, -0.05216100439429283, -0.00045110538485459983, -0.11258548498153687, -6.97350042173639e-05, -0.006018136162310839, -0.00010597144137136638, -0.013055676594376564, -0.07803449034690857, -0.007278947159647942, -3.085447311401367, -0.8004305958747864, -1.0942087173461914, -0.09468264132738113, -0.22955870628356934, -3.4362733364105225, -0.024187013506889343, -1.4090981483459473, -0.008767325431108475, -0.008345847018063068, -0.006534755229949951, -0.0333222858607769, -0.7588534951210022, -0.5532087683677673, -1.4699451923370361, -0.29765960574150085, -0.23172375559806824, -5.0424259825376794e-05, -0.0018825681181624532, -5.960462772236497e-07, -0.0003233625029679388, -0.005012920126318932, -8.821448318485636e-06, -6.318072337307967e-06, -0.0006319671520031989, -0.006557612679898739, -0.005882451310753822, -0.8092514872550964, -0.005230314563959837, -0.02152090147137642, -3.7431014789035544e-05, -6.437280717364047e-06, -0.0001289761275984347, -0.00020740265608765185, -4.446407547220588e-05, -0.0007207180024124682, -4.8397800128441304e-05, -1.0728830375228426e-06, -0.00010096516780322418, -0.0008663953049108386, -0.0002592465898487717, -0.0007229813490994275, -0.05739149451255798, -0.06878086179494858, -0.13080590963363647, -1.2516897186287679e-05, -0.00019762947340495884, -6.01988795096986e-05, -0.003877978539094329, -0.011070025153458118, -4.7205765440594405e-05, -0.0003194298769813031, -0.3152840733528137, -0.005321267060935497, -0.003187221009284258, -1.5704454183578491, -0.0009939497103914618, -0.0005585778853856027, -0.036266230046749115, -1.7980085611343384, -0.008346320129930973, -0.002381110331043601, -0.4004100263118744, -0.027738424018025398, -0.32308313250541687, -0.18680888414382935, -0.10876908898353577, -0.021323474124073982, -0.0011693552369251847, -0.004974844865500927, -0.01770923100411892, -1.4719661474227905, -0.16990800201892853, -0.036628760397434235, -2.3868308067321777, -0.000735608336981386, -0.0047456491738557816, -0.005927009973675013, -3.8742269680369645e-05, 0.0, -0.5292671322822571, -0.04467929154634476, -0.1804107278585434, -0.0005477358354255557, -0.2320122867822647, -0.014943327754735947, -0.00413859635591507, -2.4655563831329346, -0.2864707112312317, -1.685351848602295, -0.011733565479516983, -0.9845990538597107, -0.24992498755455017, -0.5236490964889526, -0.0005969410995021462, -0.0009657248156145215, -0.826332688331604, -2.181083917617798, -0.08526990562677383, -0.021810203790664673, -0.05275328829884529, -1.3076173067092896, -0.0011949549661949277, -1.4664727449417114, -0.021784426644444466, -0.4936545789241791, -4.434487345861271e-05, -0.00011336160969221964, -1.1686768531799316, -0.4718981087207794, -0.877750813961029, -2.085679769515991, -1.40509033203125, -0.0606703981757164, -0.0010564705589786172, -0.2761066257953644, -0.1601732224225998, -0.0016784878680482507, -0.09489136189222336, -0.062175553292036057, -0.0004345426568761468, -0.00019476900342851877, -0.011173415929079056], "finish_reason": "length"}], "metrics": {"energy": 386.2583022518158, "energy_per_token": 1.5088214931711554, "time": 12.531676, "time_per_token": 0.048951859375}}
{"outputs": [{"text": "count = 0\n    source_directory = Path(source_directory)\n    if not source_directory.exists():\n        raise FileNotFoundError(f\"Source directory '{source_directory}' does not exist.\")\n    source_directory = source_directory.resolve()\n    target_directory = Path(target_directory)\n    for file in os.listdir(source_directory):\n        if file.lower().endswith('.txt'):\n            with open(source_directory / file, 'r', encoding='utf-8') as f:\n                text = f.read()\n            count += 1\n            with open(target_directory / f'converted_file_{count}.csv', 'w', encoding='utf-8') as csv_file:\n                csv_file.write(f'Text,\\nText\\n,\\n{text}')\n        elif file.lower().endswith('.docx'):\n            doc = docx.Document(source_directory / file)\n            text = '\\n'.join([para.text for para in doc.paragraphs])\n            ", "tokens": ["count", " =", " ", "0", "\n", "    ", "source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "source", "_", "directory", " =", " source", "_", "directory", ".", "resolve", "()", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "if", " file", ".", "lower", "()", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "with", " open", "(", "source", "_", "directory", " /", " file", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "                ", "text", " =", " f", ".", "read", "()", "\n", "            ", "count", " +=", " ", "1", "\n", "            ", "with", " open", "(", "target", "_", "directory", " /", " f", "'", "converted", "_", "file", "_{", "count", "}", ".", "csv", "'", ",", " '", "w", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " c", "sv", "_", "file", ":", "\n", "                ", "csv", "_", "file", ".", "write", "(", "f", "'", "Text", ",", "\\", "nText", "\\", "n", ",", "\\", "n", "{", "text", "}", "')", "\n", "        ", "elif", " file", ".", "lower", "()", ".", "end", "sw", "ith", "('", ".", "doc", "x", "')", ":", "\n", "            ", "doc", " =", " doc", "x", ".", "Document", "(", "source", "_", "directory", " /", " file", ")", "\n", "            ", "text", " =", " '\\", "n", "'", ".", "join", "([", "para", ".", "text", " for", " para", " in", " doc", ".", "paragraph", "s", "])", "\n", "            "], "logprobs": [-3.1268365383148193, -0.08452821522951126, -0.0034185561817139387, -0.0005322470096871257, -0.08787736296653748, -0.285730242729187, -1.74867844581604, -0.06602497398853302, -0.4785785377025604, -0.2141638994216919, -0.14365941286087036, -0.0015112657565623522, -0.0028691815678030252, -5.221230458118953e-05, -1.1801649634435307e-05, -0.001157924416474998, -0.1519048810005188, -0.07472329586744308, -0.7933794260025024, -0.11101793497800827, -0.14630383253097534, -2.5033637939486653e-05, -1.6331539882230572e-05, -0.00012611546844709665, -0.11047253012657166, -0.004259324166923761, -0.020540965721011162, -0.001212100381962955, -0.03269507363438606, -0.0032364153303205967, -8.546940807718784e-05, -3.2066785934148356e-05, -0.36798757314682007, -0.5501366853713989, -0.32385754585266113, -0.7836693525314331, -0.05924982577562332, -1.4753069877624512, -0.00025018901214934886, -0.0029444219544529915, -0.0001429217227268964, -8.844937838148326e-05, -0.0711335614323616, -0.6686849594116211, -0.0004914983292110264, -0.0028469529934227467, -0.1569436937570572, -0.006989315617829561, -0.0001311216183239594, -0.0022709788754582405, -0.9043238759040833, -2.2678792476654053, -0.0065834298729896545, -0.3187635540962219, -0.19584767520427704, -0.31922364234924316, -0.00020168177434243262, -3.707340147229843e-05, -0.022723408415913582, -0.23529571294784546, -0.01654992252588272, -0.0684070959687233, -0.29288214445114136, -0.6511706113815308, -0.002104212762787938, -0.002720704535022378, -0.0039552804082632065, -0.00643656961619854, -0.00029380773776210845, -0.001669562072493136, -1.7404405298293568e-05, -4.410734163684538e-06, -0.0009265420376323164, -0.3350701928138733, -0.06543358415365219, -2.8922460079193115, -0.4565386474132538, -0.4745238721370697, -2.1785778999328613, -1.6212332411669195e-05, -0.016651106998324394, -1.9073468138230965e-06, -0.00033802041434682906, -0.021718289703130722, -3.480850500636734e-05, -3.0874729418428615e-05, -0.009886701591312885, -0.012278563342988491, -0.003993157297372818, -0.914329469203949, -0.334830641746521, -0.010653290897607803, -1.9428040981292725, -0.00015722469834145159, -0.006858261302113533, -0.01007483433932066, -4.970903682988137e-05, 0.0, -0.527317464351654, -0.07332887500524521, -0.09634732455015182, -0.001007645158097148, -0.7129673957824707, -0.01637672632932663, -0.0013453251449391246, -1.7516316175460815, -0.006137571297585964, -0.004051335621625185, -0.3815425932407379, -8.582700684200972e-05, -3.361645576660521e-05, -0.1424141824245453, -0.013833009637892246, -0.03265376761555672, -0.14469969272613525, -0.09039735049009323, -0.46824002265930176, -0.0002791491860989481, -0.023871393874287605, -0.061274368315935135, -0.07187370955944061, -0.09975461661815643, -0.009311344474554062, -0.03572046384215355, -0.0009227308910340071, -0.8180522918701172, -0.05939047783613205, -0.0029925585258752108, -0.0005054388311691582, -0.7576524615287781, -0.053947415202856064, -0.04477151483297348, -7.60526381782256e-05, -2.634490556374658e-05, -0.019685612991452217, -0.041474971920251846, -0.42322638630867004, -3.7275407314300537, -0.05969037115573883, -0.25048506259918213, -0.0003045333724003285, -0.008208349347114563, -0.04007861390709877, -1.6089248657226562, -0.0980534479022026, -0.035223543643951416, -0.08147069811820984, -7.986990567587782e-06, -1.1086402082582936e-05, -0.007873807102441788, -0.3196973204612732, -1.3548731803894043, -0.987206220626831, -1.6494024991989136, -0.5107969641685486, -0.3893836736679077, -0.05574304237961769, -0.23560449481010437, -0.0003632839070633054, -0.026000013574957848, -0.00036197309964336455, -0.0020843464881181717, -0.017264673486351967, -0.019327878952026367, -0.3668431341648102, -0.0003895000845659524, -0.14947934448719025, -0.0017144280718639493, -0.002800592454150319, -0.0025632879696786404, -0.00010918975021922961, -0.09776052087545395, -0.0008611546363681555, -1.9587206840515137, -0.20759890973567963, -0.5081908702850342, -0.03222792595624924, -0.0007556205382570624, -0.0007096394547261298, -0.000927137560211122, -0.29528287053108215, -0.011613147333264351, -0.37184464931488037, -0.00102324562612921, -0.008748182095587254, -0.08950403332710266, -0.6575251221656799, -0.33104491233825684, -0.15442220866680145, -0.15395516157150269, -1.422957181930542, -2.783372640609741, -0.5500612258911133, -0.012801962904632092, -2.919969081878662, -0.9403476715087891, -0.009448690339922905, -0.06102396175265312, -0.00732995243743062, -0.2542227506637573, -0.08411481231451035, -0.004338851664215326, -0.11965303122997284, -0.0731477290391922, -0.009108302183449268, -0.00033885458833537996, -0.0029791281558573246, -1.764281842042692e-05, -0.0003054867556784302, -0.0006481691962108016, -2.4914430468925275e-05, -1.1920928244535389e-07, -0.04553700610995293, -0.0037709809839725494, -0.07765280455350876, -0.019143467769026756, -0.00023684080224484205, -0.11907686293125153, -0.003088349476456642, -0.0011029120068997145, -0.45434248447418213, -0.5127226114273071, -0.007560449652373791, -0.001016814960166812, -0.0004033228906337172, -0.02912038192152977, -0.003738915082067251, -0.06576236337423325, -4.327203714638017e-05, -3.45700973412022e-05, -0.008191087283194065, -0.004135865718126297, -0.006429699715226889, -0.007976109161973, -0.0013671108754351735, -0.2617940604686737, -0.08713018149137497, -0.8380501866340637, -0.007687271106988192, -0.25427940487861633, -0.001134109916165471, -6.675497570540756e-05, -0.27058839797973633, -1.0174460411071777, -0.0012298409128561616, -0.0025197681970894337, -0.013528335839509964, -0.001479841535910964, -3.123234637314454e-05, -0.0009055804111994803, -0.004210654646158218, -0.010221869684755802, -4.815939246327616e-05, -0.008793676272034645, -0.020960254594683647, -0.0017253764672204852], "finish_reason": "length"}], "metrics": {"energy": 365.6868096828462, "energy_per_token": 1.428464100323618, "time": 12.547355, "time_per_token": 0.04901310546875}}
{"outputs": [{"text": "count = 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    source_dir = Path(source_directory)\n    if not source_dir.exists():\n        raise FileNotFoundError(f\"Source directory {source_directory} not found.\")\n\n    for file in source_dir.glob('**/*.txt'):\n        try:\n            with open(file, 'r', encoding='utf8') as file:\n                text = file.read()\n            if file.name.endswith('.csv'):\n                # Skip if CSV already exists with the same name\n                continue\n            with open(f\"{target_directory}/{file.name}.csv\", 'w') as file:\n                file.write(text)\n                count += 1\n        except UnicodeDecodeError:\n            pass\n    for file in source_dir.glob('**/*.docx'):\n        try:\n            doc = docx.Document(file)\n            text = ''.join(paragraph.text for paragraph in doc.paragraphs", "tokens": ["count", " =", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "    ", "source", "_", "dir", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "dir", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "for", " file", " in", " source", "_", "dir", ".", "glob", "('", "**", "/*", ".", "txt", "')", ":", "\n", "        ", "try", ":", "\n", "            ", "with", " open", "(", "file", ",", " '", "r", "'", ",", " encoding", "='", "utf", "8", "')", " as", " file", ":", "\n", "                ", "text", " =", " file", ".", "read", "()", "\n", "            ", "if", " file", ".", "name", ".", "end", "sw", "ith", "('", ".", "csv", "')", ":", "\n", "                ", "#", " Skip", " if", " CS", "V", " already", " exists", " with", " the", " same", " name", "\n", "                ", "continue", "\n", "            ", "with", " open", "(", "f", "\"", "{", "target", "_", "directory", "}/{", "file", ".", "name", "}", ".", "csv", "\"", ",", " '", "w", "')", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "text", ")", "\n", "                ", "count", " +=", " ", "1", "\n", "        ", "except", " Un", "icode", "Dec", "ode", "Error", ":", "\n", "            ", "pass", "\n", "    ", "for", " file", " in", " source", "_", "dir", ".", "glob", "('", "**", "/*", ".", "doc", "x", "')", ":", "\n", "        ", "try", ":", "\n", "            ", "doc", " =", " doc", "x", ".", "Document", "(", "file", ")", "\n", "            ", "text", " =", " ''", ".", "join", "(", "paragraph", ".", "text", " for", " paragraph", " in", " doc", ".", "paragraph", "s"], "logprobs": [-3.1268365383148193, -0.08452821522951126, -0.0034185561817139387, -0.0005322470096871257, -0.08787736296653748, -0.285730242729187, -1.4778730869293213, -0.2922600507736206, -0.07540927082300186, -1.9192511899746023e-05, -0.000736918649636209, -0.003098807530477643, -0.344500333070755, -0.0008136299438774586, -2.85858416557312, -7.521823135903105e-05, -0.00014232576359063387, -0.00541126262396574, -0.03939042240381241, -0.003277052426710725, -0.16017159819602966, -0.0008197046699933708, -0.19352202117443085, -4.23184028477408e-05, -0.0012517482973635197, -0.0003992714046034962, -0.004882081411778927, -1.8596476365928538e-05, -2.13382354559144e-05, -0.057541973888874054, -0.03931225836277008, -0.485289990901947, -2.617074966430664, -0.02978570945560932, -2.1963002681732178, -0.21941575407981873, -0.09160177409648895, -0.0009414292871952057, -0.0033696084283292294, -1.9788545614574105e-05, -1.1920858014491387e-05, -0.001959905494004488, -0.08004549890756607, -0.06563298404216766, -1.571983814239502, -0.1976523995399475, -0.2393478900194168, -1.6569954823353328e-05, -0.0002004899288294837, -0.00021443451987579465, -0.251700222492218, -0.0058761704713106155, -0.008847085759043694, -0.001209481037221849, -0.03120066225528717, -0.0041801463812589645, -0.00011896379146492109, -5.721882189391181e-05, -0.5614496469497681, -0.6145473718643188, -0.3232448399066925, -0.9859350323677063, -0.07048175483942032, -0.5717886686325073, -0.002770516322925687, -0.00015805903240107, -0.08434372395277023, -0.010252665728330612, -0.6893656253814697, -0.005558036733418703, -0.4371192157268524, -0.01567143201828003, -0.00015043080202303827, -0.00244770641438663, -1.2072322368621826, -0.0005889588501304388, -0.25302591919898987, -0.38596227765083313, -0.39087292551994324, -0.10217331349849701, -0.00034290633630007505, -0.0005243833875283599, -5.9126061387360096e-05, -1.2486705780029297, -0.6109337210655212, -1.7930511236190796, -0.0027725372929126024, -0.22927524149417877, -0.3103444576263428, -0.04490749537944794, -0.03697564825415611, -0.04221910610795021, -0.006308996584266424, -1.8240771293640137, -0.0002924968139268458, -0.001622075797058642, -0.0010062160436064005, -1.2134709358215332, -0.18818585574626923, -0.004140614531934261, -0.048510219901800156, -0.08277316391468048, -0.19434165954589844, -0.11768215149641037, -0.4564880430698395, -0.0002456601650919765, -0.02332976832985878, -0.08150134980678558, -0.07562139630317688, -2.3827805519104004, -0.011850552633404732, -0.0011533997021615505, -1.6261210441589355, -1.2260565757751465, -0.0045014480128884315, -0.0011838816571980715, -0.7562782764434814, -0.07662668824195862, -0.04195942357182503, -7.73638384998776e-05, -8.546940807718784e-05, -0.024192018434405327, -0.052732933312654495, -1.1667163372039795, -3.507434844970703, -1.6028856039047241, -0.0033320642542093992, -0.8601351976394653, -0.1103193461894989, -0.11228836327791214, -2.1457441107486375e-05, 0.0, -0.2510715425014496, -0.03125381097197533, -1.8985092639923096, -0.001479722443036735, -0.10375972092151642, -0.033240072429180145, -0.0005326044629327953, -3.149888038635254, -1.222830057144165, -1.6104533672332764, -2.963955879211426, -0.005296365823596716, -0.7598771452903748, -0.02731292136013508, -2.5566115379333496, -0.5311594009399414, -0.01120713073760271, -0.0547623448073864, -0.11631446331739426, -0.00018094333063345402, -0.14622803032398224, -0.0005701346672140062, -0.1590474396944046, -2.050767421722412, -0.033696603029966354, -0.00629039853811264, -1.3064442873001099, -0.42637333273887634, -0.0010583758121356368, -0.13774213194847107, -3.099436753473128e-06, -0.00038509105797857046, -0.03196078911423683, -0.09225888550281525, -0.002616674406453967, -0.1660918891429901, -0.7197257876396179, -0.000710592488758266, -0.0029755623545497656, -0.0002826052950695157, -0.0006683023530058563, -0.10706745833158493, -0.021960770711302757, -1.5606595277786255, -0.00042226933874189854, -1.2556637525558472, -0.016553206369280815, -0.001978227635845542, -0.00040356122190132737, -0.4815444350242615, -0.0013705631718039513, -0.008119078353047371, -0.01666916161775589, -0.11352728307247162, -0.03050100989639759, -0.005597868002951145, -0.10692339390516281, -0.06291832774877548, -0.0029158953111618757, -0.0012756790965795517, -3.969590397900902e-05, -0.002636886900290847, -0.08138080686330795, -0.001782139646820724, -0.5665633678436279, -0.0003782987187150866, -0.1014568880200386, -0.01651591993868351, -6.282132380874828e-05, -0.07241839915513992, -0.07578595727682114, -0.0008573431987315416, -2.05816650390625, -0.07449427247047424, -1.7244555950164795, -0.4942968785762787, -0.006018847227096558, -0.002038069535046816, -0.0025531810242682695, -3.564294092939235e-05, -2.3603161025675945e-05, -1.5020257706055418e-05, -0.0016822961624711752, -0.010873472318053246, -0.007591564673930407, -0.002981624100357294, -0.0010280092246830463, -0.07113678753376007, -0.011821924708783627, -0.00083078199531883, -0.0004217927053105086, -0.001304609584622085, -0.0010205067228525877, -0.027576200664043427, -3.957670196541585e-05, -0.00031573555315844715, -0.0006280356901697814, -0.3156698942184448, -0.08136355131864548, -0.0066412207670509815, -0.0006449526408687234, -0.0007017772295512259, -0.03122388757765293, -0.00022933237778488547, -0.034481439739465714, -0.03430221974849701, -0.007391131483018398, -0.013208627700805664, -0.12354124337434769, -0.031166691333055496, -2.221865653991699, -0.9882799386978149, -5.98412734689191e-05, -0.4741295278072357, -1.4211175441741943, -0.0007662221323698759, -0.0007445423980243504, -0.04935557767748833, -0.00035208225017413497, -0.0008317348547279835, -0.0010745710460469127, -0.0004909025738015771, -0.007929394952952862, -3.325883881188929e-05], "finish_reason": "length"}], "metrics": {"energy": 362.2356817131044, "energy_per_token": 1.414983131691814, "time": 12.550059, "time_per_token": 0.04902366796875}}
{"outputs": [{"text": "if os.path.isdir(source_directory):\n        source_directory = Path(source_directory).resolve()\n        target_directory = Path(target_directory).resolve()\n        file_counter = 0\n        for file_path in source_directory.glob(\"*.txt\"):\n            try:\n                if file_path.stem == 'report':\n                    pass\n                else:\n                    file_name, file_ext = os.path.splitext(file_path)\n                    if file_ext.lower() == '.txt':\n                        text = file_path.read_text(encoding='utf-8')\n                        df = pd.DataFrame(columns=['Text'], data=[text])\n                        target_file_path = target_directory / f'{file_path.stem}.csv'\n                        df.to_csv(target_file_path, index=False)\n                        file_counter += 1\n            except Exception as e:\n                print(f\"An error occurred while converting {file_path} to CSV: {e}\")\n        return file_", "tokens": ["if", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", ".", "resolve", "()", "\n", "        ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", ".", "resolve", "()", "\n", "        ", "file", "_", "counter", " =", " ", "0", "\n", "        ", "for", " file", "_", "path", " in", " source", "_", "directory", ".", "glob", "(", "\"", "*", ".", "txt", "\"", "):", "\n", "            ", "try", ":", "\n", "                ", "if", " file", "_", "path", ".", "stem", " ==", " '", "report", "':", "\n", "                ", "    ", "pass", "\n", "                ", "else", ":", "\n", "                ", "    ", "file", "_", "name", ",", " file", "_", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "path", ")", "\n", "                ", "    ", "if", " file", "_", "ext", ".", "lower", "()", " ==", " '", ".", "txt", "':", "\n", "                ", "        ", "text", " =", " file", "_", "path", ".", "read", "_", "text", "(", "encoding", "='", "utf", "-", "8", "')", "\n", "                ", "        ", "df", " =", " pd", ".", "DataFrame", "(", "columns", "=['", "Text", "']", ",", " data", "=[", "text", "])", "\n", "                ", "        ", "target", "_", "file", "_", "path", " =", " target", "_", "directory", " /", " f", "'{", "file", "_", "path", ".", "stem", "}", ".", "csv", "'", "\n", "                ", "        ", "df", ".", "to", "_", "csv", "(", "target", "_", "file", "_", "path", ",", " index", "=", "False", ")", "\n", "                ", "        ", "file", "_", "counter", " +=", " ", "1", "\n", "            ", "except", " Exception", " as", " e", ":", "\n", "                ", "print", "(", "f", "\"", "An", " error", " occurred", " while", " converting", " {", "file", "_", "path", "}", " to", " CS", "V", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " file", "_"], "logprobs": [-2.073333501815796, -2.6108334064483643, -0.00035494225448928773, -0.007044951897114515, -0.024027936160564423, -0.5304341316223145, -0.10593277961015701, -0.0007659838884137571, -0.032582808285951614, -0.00015341058315243572, -0.00011085849109804258, -0.8146317601203918, -0.05341743305325508, -0.01809142716228962, -1.444440245628357, -0.04906925559043884, -0.349296510219574, -0.09909798949956894, -0.3508145809173584, -0.0012840130366384983, -0.005133661441504955, -7.426462980220094e-05, -8.940656698541716e-06, -0.0012287693098187447, -2.025249481201172, -0.1946260631084442, -0.005509904585778713, -0.08928949385881424, -0.21704493463039398, -0.2605857849121094, -0.0025502084754407406, -0.001671347301453352, -0.0024689924903213978, -0.004947799723595381, -0.000226472009671852, -0.0016213617054745555, -1.9311717551317997e-05, -8.4638240878121e-06, -0.00023123928986024112, -0.05841908976435661, -0.012445172294974327, -0.00026043839170597494, -0.018922293558716774, -0.4478680491447449, -3.0969762802124023, -0.009243668057024479, -2.0673999786376953, -0.029918652027845383, -0.011927122250199318, -0.006830319762229919, -0.03525484353303909, -0.41643980145454407, -0.2985239624977112, -0.573150634765625, -1.1230100393295288, -0.6671230792999268, -0.006521846167743206, -0.0774507150053978, -0.0001599660754436627, -2.6702524337451905e-05, -8.165503095369786e-05, -1.4802794456481934, -0.9270325899124146, -0.042277272790670395, -0.3248496353626251, -0.4870152473449707, -0.6181797385215759, -0.03542468696832657, -0.023151567205786705, -0.03142780065536499, -0.004889317788183689, -2.0143203735351562, -0.0004539651272352785, -0.002502050483599305, -0.0010883843060582876, -2.593811511993408, -0.5483336448669434, -0.0006571040721610188, -0.008149229921400547, -0.020250828936696053, -1.9010531902313232, -1.2470489740371704, -1.527085304260254, -4.625921249389648, -0.5264397859573364, -0.11654270440340042, -0.0015067425556480885, -0.006804390344768763, -3.1451659202575684, -0.011890840716660023, -0.02264544554054737, -0.7210909128189087, -0.0017533419886603951, -0.005739043932408094, -0.005277629941701889, -0.0016644446877762675, -1.4559985399246216, -0.15741321444511414, -0.7954559922218323, -2.8660805225372314, -0.5354834198951721, -0.00026520551182329655, -0.9445829391479492, -0.008903801441192627, -0.25811097025871277, -9.536697689327411e-06, -0.00014172980445437133, -0.00573963625356555, -0.0001433984871255234, -7.068861305015162e-05, -4.768370445162873e-07, -0.00010275312524754554, -0.12254492938518524, -2.276871418871451e-05, -0.00016008525562938303, -1.0128910541534424, -0.016751578077673912, -0.017863109707832336, -0.007339892443269491, -1.9860820770263672, -0.1021045371890068, -0.00024101213784888387, -0.0975378006696701, -1.8678771257400513, -0.17262835800647736, -0.003996481653302908, -0.6135017275810242, -0.23339499533176422, -0.012867162935435772, -0.3860556185245514, -0.06908273696899414, -0.01305120624601841, -0.005298381671309471, -0.0013521108776330948, -2.860076427459717, -0.40018051862716675, -0.7007841467857361, -0.00614858977496624, -0.00312673463486135, -0.0007048744591884315, -0.004481391981244087, -2.0503786799963564e-05, -0.003544003702700138, -1.4767252206802368, -0.05502526834607124, -0.2124844640493393, -0.13572773337364197, -0.07995074987411499, -0.025410030037164688, -0.0938948392868042, -0.05953627824783325, -0.020102106034755707, -0.015479420311748981, -1.2252510786056519, -0.03135386481881142, -0.015423311851918697, -9.178694017464295e-05, -0.09922149032354355, -1.2701172828674316, -1.4268602132797241, -0.3784695267677307, -0.06987131386995316, -1.7032920122146606, -0.013014023192226887, -0.5248072743415833, -0.09976077079772949, -0.37028738856315613, -0.09126973897218704, -0.008029798977077007, -0.012787251733243465, -0.0028942623175680637, -2.546783447265625, -0.018850702792406082, -0.7106941938400269, -0.31646811962127686, -0.12039618194103241, -0.002934081247076392, -0.28219977021217346, -2.0146166207268834e-05, -9.440929716220126e-05, -0.13305798172950745, -0.2310720682144165, -0.9791516661643982, -0.005210154689848423, -7.343022298300639e-05, -2.334285259246826, -0.0068105473183095455, -0.17201006412506104, -0.08650467544794083, -0.0018543682526797056, -0.017088552936911583, -0.0007859955076128244, -0.004880539141595364, -0.016380712389945984, -0.0017507239244878292, -0.20707310736179352, -0.0007848043460398912, -0.0035622967407107353, -1.6689286894688848e-06, -0.000559173640795052, -0.00022599527437705547, -0.05835330858826637, -1.3947389561508317e-05, -0.0025079960469156504, -2.3483953555114567e-05, -2.9802276912960224e-06, -0.07601092755794525, -0.12447194010019302, -0.005135203246027231, -0.009669254533946514, -0.17582149803638458, -0.007871204987168312, -0.004477950278669596, -0.009248274378478527, -0.2613828480243683, -9.238292841473594e-05, -0.00642176391556859, -0.004623199813067913, -0.0016708712792024016, -0.0001289761275984347, -0.0010156240314245224, -0.5491191744804382, -0.003888665698468685, -1.3191765546798706, -0.12334873527288437, -0.13925427198410034, -0.0003398079425096512, -0.0060164774768054485, -0.0009789442410692573, -0.10276532918214798, -0.06286783516407013, -0.2320060431957245, -0.4872573912143707, -1.6592381000518799, -0.03160049021244049, -0.010308356955647469, -0.1464347094297409, -1.0073803663253784, -0.5347990393638611, -0.019248949363827705, -0.0008422164828516543, -0.009509976021945477, -1.3722891807556152, -0.09616435319185257, -0.07066726684570312, -8.153582894010469e-05, -0.2533370554447174, -0.010920166969299316, -0.13116323947906494, -0.03658612072467804, -0.0023756397422403097, -0.0007817073492333293, -0.29093194007873535, -0.9454367160797119, -0.004671968054026365, -2.264974000354414e-06], "finish_reason": "length"}], "metrics": {"energy": 356.42573775672935, "energy_per_token": 1.392288038112224, "time": 12.336392, "time_per_token": 0.04818903125}}
{"outputs": [{"text": "# check if source directory exists\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(f'The source directory {source_directory} does not exist.')\n\n    # check if target directory exists and create it if it does not exist\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # get all files in source directory with specific extensions\n    source_files = [f for f in os.listdir(source_directory) if (\n        os.path.isfile(os.path.join(source_directory, f))\n        and f.endswith('.txt')\n        or f.endswith('.docx')\n        or f.endswith('.xlsx')\n        or f.endswith('.csv')\n    )]\n\n    # convert files to CSV files in target directory\n    converted_files_count = 0\n    for source_file in source_files:\n        if source_file.endswith('.txt'):\n            # convert .txt file to CSV\n", "tokens": ["#", " check", " if", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "The", " source", " directory", " {", "source", "_", "directory", "}", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "#", " check", " if", " target", " directory", " exists", " and", " create", " it", " if", " it", " does", " not", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " get", " all", " files", " in", " source", " directory", " with", " specific", " extensions", "\n", "    ", "source", "_", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", " if", " (", "\n", "        ", "os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " f", "))", "\n", "        ", "and", " f", ".", "end", "sw", "ith", "('", ".", "txt", "')", "\n", "        ", "or", " f", ".", "end", "sw", "ith", "('", ".", "doc", "x", "')", "\n", "        ", "or", " f", ".", "end", "sw", "ith", "('", ".", "x", "ls", "x", "')", "\n", "        ", "or", " f", ".", "end", "sw", "ith", "('", ".", "csv", "')", "\n", "    ", ")]", "\n", "\n", "    ", "#", " convert", " files", " to", " CS", "V", " files", " in", " target", " directory", "\n", "    ", "converted", "_", "files", "_", "count", " =", " ", "0", "\n", "    ", "for", " source", "_", "file", " in", " source", "_", "files", ":", "\n", "        ", "if", " source", "_", "file", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "#", " convert", " ", ".", "txt", " file", " to", " CS", "V", "\n"], "logprobs": [-1.2732598781585693, -2.971177577972412, -0.4076904058456421, -0.5959179401397705, -0.34742221236228943, -0.03469206020236015, -0.12164916843175888, -0.002254208317026496, -0.1618288904428482, -0.03509613871574402, -0.04451523348689079, -7.748573807475623e-06, -0.00019941726350225508, -0.0029353885911405087, -0.3082673251628876, -0.00040844682371243834, -0.002954762661829591, -0.00015400654228869826, -0.00012110930401831865, -0.0020691193640232086, -0.0049719978123903275, -0.0008248264202848077, -0.026838842779397964, -0.0030834770295768976, -6.592056161025539e-05, -2.884823152271565e-05, -0.3020796775817871, -0.3440455198287964, -1.7097423076629639, -2.2501766681671143, -0.11540386080741882, -0.014583658427000046, -0.4355751872062683, -0.0011566146276891232, -0.00019131260341964662, -0.0002330270071979612, -0.01393717247992754, -0.05177146568894386, -0.000760385300964117, -0.004839255474507809, -0.3243293762207031, -0.008515949361026287, -0.0013821106404066086, -0.14781531691551208, -0.0008609164506196976, -0.187509223818779, -0.9564322233200073, -0.03345556557178497, -0.04610351100564003, -0.01292282622307539, -0.04065634682774544, -2.284698486328125, -0.0668712705373764, -0.0650763213634491, -0.018663043156266212, -0.23140506446361542, -0.9270259141921997, -0.000346362212439999, -0.36255332827568054, -0.015910692512989044, -0.000498289882671088, -0.38742005825042725, -0.022961219772696495, -0.007119168993085623, -0.0006403064471669495, -0.00011622230522334576, -0.001982510555535555, -0.024044811725616455, -0.00013910756388213485, -0.0016012478154152632, -5.364403477869928e-06, -3.218599158572033e-05, -0.017220735549926758, -0.0037842821329832077, -0.0010320581495761871, -0.07746130228042603, -0.0007863528444431722, -0.1479089856147766, -1.7881233361549675e-05, -0.0003979606262873858, -0.00024732868769206107, -0.00459305988624692, -1.7046782886609435e-05, -1.2755313036905136e-05, -0.0864613801240921, -0.01628102734684944, -0.1413574367761612, -0.0012522244360297918, -0.2909547686576843, -1.500327229499817, -1.0544291734695435, -0.369172602891922, -0.4228256940841675, -0.4558194577693939, -0.035992350429296494, -1.5272948741912842, -0.8691900968551636, -0.06271670013666153, -0.21092502772808075, -0.001110771088860929, -1.272988200187683, -0.004806749522686005, -0.2577804923057556, -0.052303001284599304, -0.3500022292137146, -0.8954865336418152, -0.04078327491879463, -0.0027209424879401922, -0.0006297035724855959, -1.1940858364105225, -2.2649508537142538e-05, -0.0016534955939278007, -4.0531076592742465e-06, -0.0002806984703056514, -0.0030062266159802675, -9.536697689327411e-06, -7.152531907195225e-06, -0.005161887500435114, -0.506804883480072, -2.579796314239502, -1.2912170886993408, -0.4210610091686249, -0.8327988982200623, -0.0001147919538198039, -0.00028880240279249847, -0.0002019201492657885, -0.06531622260808945, -0.004925024230033159, -0.00011252723925281316, -0.07488922029733658, -0.0005589353386312723, -3.707340147229843e-05, -0.0019025574438273907, -0.00011717586312443018, -5.94836674281396e-05, -0.0015532821416854858, -3.6477376852417365e-05, -1.680836794548668e-05, -0.00016699827392585576, -0.0042999195866286755, -0.008535451255738735, -0.9638358354568481, -0.063870370388031, -0.005572143942117691, -0.7086040377616882, -0.008209177292883396, -0.25106099247932434, -1.5258672647178173e-05, 0.0, -0.5918893218040466, -0.041600193828344345, -0.06949661672115326, -0.014854772947728634, -0.7037531137466431, -0.11727544665336609, -0.01327415369451046, -0.008373510092496872, -0.0005553610390052199, -0.0016694430960342288, -3.6954811548639555e-06, -1.1920928244535389e-07, -0.002457695547491312, -0.0024925374891608953, -0.050088997930288315, -0.003811596194282174, -0.005837772041559219, -0.002202229807153344, -0.002891409443691373, -0.001167331007309258, -0.0006721144891344011, -2.1815061700181104e-05, -0.00033408781746402383, -1.3470558769768104e-05, -1.5497195136049413e-06, -0.0006254147156141698, -0.0023284247145056725, -0.04766335338354111, -0.0008835464250296354, -0.003865509992465377, -0.0019857229199260473, -0.0005891970940865576, -0.004203176125884056, -0.0014391313306987286, -0.0010201494442299008, -4.470248313737102e-05, -0.00015114595589693636, -2.455681169521995e-05, -1.5497195136049413e-06, -0.00030393750057555735, -0.0012257928028702736, -0.01651732623577118, -0.3678416907787323, -0.008531787432730198, -0.2553088963031769, -0.0063735549338161945, -0.0011198208667337894, -0.04155273735523224, -0.00029762129997834563, -0.17474162578582764, -1.164489507675171, -0.8006861209869385, -0.23757603764533997, -0.054952602833509445, -0.01612584851682186, -2.192736864089966, -1.849637746810913, -0.26232609152793884, -0.0037150431890040636, -0.08550631999969482, -0.002097075106576085, -1.3079460859298706, -0.07728278636932373, -0.4266985356807709, -2.179033041000366, -0.18179872632026672, -0.0028593153692781925, -0.0049832663498818874, -0.0001951265730895102, -0.009978883899748325, -0.11147113144397736, -0.01671992428600788, -1.1753711700439453, -0.0033111530356109142, -0.010674992576241493, -0.01626976765692234, -0.0023840833455324173, -2.0146166207268834e-05, -5.745722592109814e-05, -6.01988795096986e-05, -0.0014071096666157246, -0.019541366025805473, -2.7135305404663086, -0.14418134093284607, -7.438383181579411e-05, -0.0018626974197104573, -0.005592059344053268, -0.012721928767859936, -1.490105023549404e-05, 0.0, -0.04893338680267334, -0.004849695134907961, -0.1569676399230957, -0.0005035324720665812, -0.02093188837170601, -0.009607742540538311, -0.00135996809694916, -1.832011103630066, -0.9336954355239868, -0.8720808029174805, -0.0003630455757956952, -0.0026502031832933426, -1.163102388381958, -0.13305191695690155, -0.03439183533191681, -7.259582343976945e-05, -0.46542230248451233], "finish_reason": "length"}], "metrics": {"energy": 407.7567681884763, "energy_per_token": 1.5927998757362356, "time": 13.405305, "time_per_token": 0.05236447265625}}
{"outputs": [{"text": "if not os.path.exists(source_directory):\n        raise FileNotFoundError(f'Directory \"{source_directory}\" does not exist.')\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory, exist_ok=True)\n    exts = ('txt', 'docx', 'xlsx', 'csv')\n    count = 0\n    for file in Path(source_directory).rglob(f'*.*'):\n        if not file.is_file():\n            continue\n        ext = file.suffix[1:].lower()\n        if ext in exts:\n            try:\n                if ext == 'csv':\n                    pd.read_csv(file)  # Load CSV file\n                elif ext == 'xlsx' or ext == 'xls':\n                    pd.read_excel(file)  # Load Excel file\n                elif ext in {'txt', 'docx'}:\n                    docx.Document(file).element.toxml()\n                count += 1\n                file.rename(", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "Directory", " \"", "{", "source", "_", "directory", "}\"", " does", " not", " exist", ".", "')", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "ext", "s", " =", " ('", "txt", "'", ",", " '", "doc", "x", "'", ",", " '", "x", "ls", "x", "'", ",", " '", "csv", "')", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "directory", ")", ".", "rg", "lob", "(", "f", "'", "*", ".", "*", "')", ":", "\n", "        ", "if", " not", " file", ".", "is", "_", "file", "():", "\n", "            ", "continue", "\n", "        ", "ext", " =", " file", ".", "suff", "ix", "[", "1", ":]", ".", "lower", "()", "\n", "        ", "if", " ext", " in", " ex", "ts", ":", "\n", "            ", "try", ":", "\n", "                ", "if", " ext", " ==", " '", "csv", "':", "\n", "                ", "    ", "pd", ".", "read", "_", "csv", "(", "file", ")", "  ", "#", " Load", " CS", "V", " file", "\n", "                ", "elif", " ext", " ==", " '", "x", "ls", "x", "'", " or", " ext", " ==", " '", "x", "ls", "':", "\n", "                ", "    ", "pd", ".", "read", "_", "ex", "cel", "(", "file", ")", "  ", "#", " Load", " Excel", " file", "\n", "                ", "elif", " ext", " in", " {'", "txt", "'", ",", " '", "doc", "x", "'", "}:", "\n", "                ", "    ", "doc", "x", ".", "Document", "(", "file", ")", ".", "element", ".", "to", "xml", "()", "\n", "                ", "count", " +=", " ", "1", "\n", "                ", "file", ".", "rename", "("], "logprobs": [-2.073333501815796, -0.11743085831403732, -0.10817014425992966, -3.5523738915799186e-05, -0.0004899493651464581, -0.008010641671717167, -0.3882741332054138, -0.0009301149984821677, -0.02972519025206566, -0.00022432672267314047, -0.00011503035057103261, -0.0032932115718722343, -0.034823548048734665, -0.001312943291850388, -0.04249996691942215, -0.0028183048125356436, -5.090107151772827e-05, -3.659658250398934e-05, -0.28828370571136475, -0.32086095213890076, -1.4928855895996094, -1.7062867879867554, -2.3788039684295654, -0.0009957361035048962, -0.0025142983067780733, -0.00023040501400828362, -0.0001728385395836085, -0.0055129872635006905, -0.9141325354576111, -0.0008025524439290166, -0.010245468467473984, -0.5385074615478516, -0.022076917812228203, -0.0021423976868391037, -1.5322526693344116, -1.3359016180038452, -0.10185058414936066, -0.02581682801246643, -0.0006475735572166741, -0.0024010895285755396, -0.007188172545284033, -0.20690040290355682, -0.0011316093150526285, -0.023318937048316002, -3.576272320060525e-06, -2.8967437174287625e-05, -0.007307585794478655, -0.00804765522480011, -0.001808437635190785, -0.19543282687664032, -0.0007441850611940026, -0.23096950352191925, -2.992108420585282e-05, -0.0005385617259889841, -0.0005957497633062303, -0.013907195068895817, -1.9788545614574105e-05, -1.6689160474925302e-05, -1.9604735374450684, -0.02484121173620224, -3.576278118089249e-07, -6.151010165922344e-05, -0.004330780357122421, -0.011970116756856441, -0.002776816952973604, -0.037113841623067856, -0.7818095088005066, -4.1968536376953125, -0.7514623403549194, -0.17522957921028137, -1.8182072639465332, -1.3359830379486084, -0.0024299875367432833, -0.00023445718397852033, -0.010175023227930069, -0.04098261892795563, -0.007502711843699217, -0.006618602201342583, -1.07287787614041e-05, -0.0028110535349696875, -0.041611287742853165, -0.0010130041046068072, -0.005207545589655638, -0.005386600736528635, -2.7656173188006505e-05, -0.002446041675284505, -0.08500923216342926, -0.09653643518686295, -0.041941020637750626, -0.12801073491573334, -2.386446952819824, -0.04199874773621559, -0.0062645734287798405, -0.0013875867007300258, -0.03130118176341057, -0.07995878159999847, -0.12711870670318604, -1.5383661985397339, -0.42318040132522583, -0.30242595076560974, -0.0006980843027122319, -0.0014259180752560496, -9.179073458653875e-06, -1.6331539882230572e-05, -0.0006335158832371235, -1.8596476365928538e-05, -1.4054367542266846, -0.0029572586063295603, -0.7275092005729675, -0.37265732884407043, -0.09254701435565948, -0.5543811321258545, -0.003780956845730543, -1.2774877548217773, -0.009777394123375416, -0.0003332536434754729, -0.033656951040029526, -0.0019521719077602029, -0.3793468475341797, -2.654226541519165, -0.11192315816879272, -0.0004700509598478675, -0.3322097659111023, -2.3841830625315197e-06, -0.17986057698726654, -0.1687258630990982, -0.043361835181713104, -0.0004349001101218164, -0.021362565457820892, -0.026895707473158836, -0.009518950246274471, -1.1843801736831665, -0.014763978309929371, -0.14362047612667084, -0.000824230897706002, -0.03798919543623924, -8.511180931236595e-05, -0.2564857304096222, -0.0028805925976485014, -0.0009659630013629794, -0.7386666536331177, -0.008818373084068298, -0.0001012035645544529, -0.040219929069280624, -0.002372428774833679, -0.029698923230171204, -0.028215205296874046, -0.9178255200386047, -0.018854327499866486, -3.576272320060525e-06, -0.03434299677610397, -0.005051113199442625, -0.0014579391572624445, -2.439297676086426, -0.00018380382971372455, -0.004095263313502073, -0.0004994813934899867, -0.5737148523330688, -0.04284117370843887, -0.043141383677721024, -0.013269800692796707, -1.8740620613098145, -0.025684848427772522, -0.01913142204284668, -0.0001227780303452164, -0.0009860896971076727, -2.029768943786621, -0.0056167165748775005, -0.010523187927901745, -0.0003053675754927099, -0.012121584266424179, -0.0021736822091042995, -0.2808656096458435, -0.7710781097412109, -1.8540244102478027, -0.00011872540198964998, -4.159511566162109, -1.3625035285949707, -0.00527063338086009, -0.6088305115699768, -1.0003842115402222, -0.0029611808713525534, -0.9347233176231384, -0.02147936448454857, -0.28869563341140747, -0.0019240929977968335, -1.7572827339172363, -0.0022467151284217834, -0.019435329362750053, -2.2011454105377197, -0.0058777108788490295, -0.007192433346062899, -0.0024597172159701586, -0.0018352109473198652, -0.19615361094474792, -0.0061239455826580524, -0.022328289225697517, -0.027164781466126442, -0.00011169286881340668, -0.0004196478403173387, -0.28155967593193054, -0.003194232005625963, -0.04745806008577347, -7.617183291586116e-05, -0.0003375437227077782, -0.00041952868923544884, -0.00026651646476238966, -0.0029435898177325726, -0.17337116599082947, -0.024127086624503136, -0.0001284993631998077, -0.018527893349528313, -0.27571943402290344, -0.029168084263801575, -0.012702272273600101, -0.000886285852175206, -0.3370501399040222, -0.010498061776161194, -2.9006154537200928, -2.4210524559020996, -0.3785149157047272, -0.0027105992194265127, -0.004342412576079369, -0.0021203910000622272, -0.12616409361362457, -0.16040658950805664, -0.026339344680309296, -0.12656426429748535, -0.014668360352516174, -0.00019441144831944257, -0.00024589852546341717, -0.28797540068626404, -1.5041228532791138, -0.3526051938533783, -0.41713017225265503, -0.0014816269977018237, -0.06942889094352722, -0.03128061816096306, -0.8138322234153748, -1.8370338678359985, -0.24692301452159882, -3.2065584659576416, -0.1794774979352951, -0.1852390617132187, -2.3650031089782715, -0.024740388616919518, -1.8418200016021729, -0.004711953457444906, -0.005043047480285168, -3.4450891689630225e-05, -0.033990584313869476, -0.16032718122005463, -0.7574447989463806, -0.05414064973592758, -0.28555893898010254, -0.0026026444975286722], "finish_reason": "length"}], "metrics": {"energy": 372.8947876853941, "energy_per_token": 1.4566202643960706, "time": 12.528841, "time_per_token": 0.04894078515625}}
{"outputs": [{"text": "file_count = 0\n    if not os.path.isdir(source_directory):\n        raise FileNotFoundError(\"Source directory does not exist.\")\n\n    for file_name in os.listdir(source_directory):\n        source_path = os.path.join(source_directory, file_name)\n        target_path = os.path.join(target_directory, file_name)\n\n        # Check if the file is an executable file\n        if not os.path.isfile(source_path):\n            continue\n\n        # Extract the file extension and convert the file to CSV\n        if file_name.endswith(\".txt\") or file_name.endswith(\".docx\") or \\\n                file_name.endswith(\".xlsx\") or file_name.endswith(\".csv\"):\n            if os.path.isfile(target_path):\n                os.remove(target_path)\n            if file_name.endswith(\".txt\"):\n                pd.read_csv(source_path,", "tokens": ["file", "_", "count", " =", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Source", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "source", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", "_", "name", ")", "\n", "        ", "target", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", "_", "name", ")", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " is", " an", " executable", " file", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "source", "_", "path", "):", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Ext", "ract", " the", " file", " extension", " and", " convert", " the", " file", " to", " CS", "V", "\n", "        ", "if", " file", "_", "name", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", ")", " or", " file", "_", "name", ".", "end", "sw", "ith", "(", "\"", ".", "doc", "x", "\"", ")", " or", " \\", "\n", "                ", "file", "_", "name", ".", "end", "sw", "ith", "(", "\"", ".", "x", "ls", "x", "\"", ")", " or", " file", "_", "name", ".", "end", "sw", "ith", "(", "\"", ".", "csv", "\"", "):", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "target", "_", "path", "):", "\n", "                ", "os", ".", "remove", "(", "target", "_", "path", ")", "\n", "            ", "if", " file", "_", "name", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "\n", "                ", "pd", ".", "read", "_", "csv", "(", "source", "_", "path", ","], "logprobs": [-2.6073415279388428, -0.02261444553732872, -0.8665096163749695, -0.026273855939507484, -0.008238025940954685, -0.0006719953380525112, -0.08948593586683273, -0.4164181649684906, -1.5140924453735352, -0.24109628796577454, -0.08438403904438019, -1.6093124941107817e-05, -0.0005181877058930695, -0.003095123451203108, -0.9213311076164246, -0.004635303281247616, -0.0002307625545654446, -0.07593822479248047, -0.00011467275908216834, -7.366862701019272e-05, -0.005279171280562878, -0.031165534630417824, -0.001589702907949686, -0.05103021860122681, -0.004589025396853685, -0.0001419681793777272, -3.6000557884108275e-05, -0.35164520144462585, -1.3382185697555542, -0.7826402187347412, -0.08356987684965134, -0.8498145341873169, -0.00021145492792129517, -0.002605498069897294, -0.45538195967674255, -0.017186518758535385, -0.00018189683032687753, -0.003523453138768673, -0.5295653343200684, -0.0008166077313944697, -0.9700156450271606, -0.9123799204826355, -0.5296857357025146, -0.48588913679122925, -0.09938933700323105, -0.22706232964992523, -0.004044923931360245, -0.0002867764269467443, -2.9802276912960224e-06, -0.00022146634000819176, -0.0026367679238319397, -2.3364747903542593e-05, -9.179073458653875e-06, -0.00033945043105632067, -0.012562665157020092, -0.01419729832559824, -2.795518398284912, -0.018108051270246506, -1.364142894744873, -0.006093495525419712, -0.2866957187652588, -9.059865078597795e-06, -2.1576648578047752e-05, -0.0013679441763088107, -0.0001915509783430025, -6.48477507638745e-05, -0.0008796160109341145, -3.0517112463712692e-05, -1.4543427823809907e-05, -0.00011669908417388797, -0.0009922825265675783, -2.0265373677830212e-05, -2.2053474822314456e-05, -0.0005279577453620732, -0.00318508199416101, -0.07876536250114441, -1.4685546159744263, -0.0007736074039712548, -0.06996368616819382, -0.009865455329418182, -0.03326059505343437, -0.00010477947944309562, -1.156323378381785e-05, -0.0002526917669456452, -0.00207673292607069, -0.00020966715237591416, -0.010815218091011047, -2.861018856492592e-06, -3.433168603805825e-05, -0.000393432448618114, -0.40186813473701477, -1.9788545614574105e-05, -0.0015631611458957195, -1.2639689445495605, -0.3087558448314667, -0.5898585915565491, -0.00042548662167973816, -2.3991124629974365, -1.0780118703842163, -0.16794532537460327, -0.27718040347099304, -0.2938339114189148, -0.7913311719894409, -1.4421641826629639, -3.2353286743164062, -1.0644279718399048, -0.5819437503814697, -0.0010917185572907329, -0.07016285508871078, -1.4274495840072632, -0.2454264611005783, -9.357491217087954e-05, -0.1685524433851242, -3.480850500636734e-05, -0.017558608204126358, -0.013138744048774242, -3.731181277544238e-05, -0.01286233775317669, -1.0251946150674485e-05, -0.00013410145766101778, -0.33810293674468994, -0.0050629740580916405, -0.0005492847412824631, -0.06562081724405289, -0.01689411699771881, -0.1450721025466919, -0.0010869554243981838, -0.4938012659549713, -2.9366040229797363, -0.007451241835951805, -0.936363697052002, -0.25210100412368774, -0.11599446088075638, -2.5949461460113525, -2.2578210830688477, -0.779477596282959, -0.03882399946451187, -0.7508577108383179, -0.13266436755657196, -0.00016127715934999287, -0.16374661028385162, -0.0016731324139982462, -0.9327716827392578, -0.31256920099258423, -0.0001559135998832062, -0.0021343089174479246, -0.007804851047694683, -0.08162198960781097, -4.100715523236431e-05, 0.0, -0.7463634014129639, -0.2168496549129486, -0.023370761424303055, -0.11194320023059845, -0.0002454218047205359, -1.4434173107147217, -0.021699275821447372, -0.021987827494740486, -1.4305012882687151e-05, -0.00013243274588603526, -0.0015750633319839835, -0.004027708433568478, -3.6000557884108275e-05, -4.768370445162873e-07, -0.002378137083724141, -0.0029408561531454325, -0.0021975908894091845, -0.2960365116596222, -0.01834391988813877, -0.0001006075763143599, -0.2641732096672058, -0.04471144080162048, -2.4898784160614014, -2.3364747903542593e-05, -0.4891384541988373, -0.04789246618747711, -4.6491513785440475e-06, -1.1920858014491387e-05, -5.757642793469131e-05, -0.0008815216715447605, -3.099393507000059e-05, -4.768370445162873e-07, -0.0011068414896726608, -5.125868119648658e-05, -0.001857937895692885, -0.06226706877350807, -0.0013458014000207186, -0.006025245878845453, -7.843663479434326e-05, -0.012724636122584343, -0.0009422629955224693, -0.003338361158967018, -1.4305104514278355e-06, -1.3589766240329482e-05, -9.77468371274881e-05, -0.0002740246127359569, -2.3603161025675945e-05, -3.099436753473128e-06, -0.001013361383229494, -0.000743708573281765, -0.0010320581495761871, -0.05462566763162613, -0.00011705666838679463, -0.04307973012328148, -0.002565666101872921, -0.03393469750881195, -1.156387209892273, -1.001629114151001, -5.602820692729438e-06, -0.007903612218797207, -5.531158240046352e-05, -0.6671268939971924, -0.009687908925116062, -0.00011801023356383666, -0.1297658234834671, -3.3378546504536644e-06, -0.0007877822499722242, -0.08167505264282227, -0.01924988627433777, -0.0011149387573823333, -0.26334384083747864, -9.738924563862383e-05, -0.036905910819768906, -6.174850568640977e-05, -0.002493845531716943, -1.764281842042692e-05, -3.182837463100441e-05, -6.329813186312094e-05, -0.042290184646844864, -0.3837885856628418, -1.3083128929138184, -0.06016013026237488, -8.391981828026474e-05, -0.0003457663697190583, -0.0050878808833658695, -0.005413278471678495, -7.867782187531702e-06, 0.0, -0.018130410462617874, -0.0002169373765354976, -0.006151196081191301, -0.6015200614929199, -0.0004596845537889749, -0.15685473382472992, -0.006348916795104742, -0.0015737541252747178, -2.627805233001709, -0.026199886575341225, -0.027966003865003586, -0.00037448544753715396, -0.5504109859466553, -0.007844829931855202, -0.09995851665735245, -5.8053239627042785e-05, -0.00015341058315243572, -0.19611157476902008], "finish_reason": "length"}], "metrics": {"energy": 429.87098521041895, "energy_per_token": 1.679183535978199, "time": 13.354761, "time_per_token": 0.05216703515625}}
{"outputs": [{"text": "# Create a Path object from the source directory path and verify it exists\n    source_path = Path(source_directory)\n    if not source_path.is_dir():\n        raise FileNotFoundError(f\"Error: Directory not found: {source_directory}\")\n    # Get a list of all the files in the source directory\n    source_files = list(source_path.iterdir())\n\n    # Create a Path object from the target directory path and verify it exists\n    target_path = Path(target_directory)\n    if not target_path.is_dir():\n        target_path.mkdir(parents=True)\n\n    # Create a dictionary to store the total number of files successfully converted to CSV\n    total_csv_count = {}\n    # Loop over each file in the source directory\n    for source_file in source_files:\n        # Verify that the source file is of supported file types\n        if source_file.suffix in ['.txt', '.docx', '.xlsx', '.csv']:\n            # Read the source file contents\n            try:\n                with source_", "tokens": ["#", " Create", " a", " Path", " object", " from", " the", " source", " directory", " path", " and", " verify", " it", " exists", "\n", "    ", "source", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Error", ":", " Directory", " not", " found", ":", " {", "source", "_", "directory", "}\"", ")", "\n", "    ", "#", " Get", " a", " list", " of", " all", " the", " files", " in", " the", " source", " directory", "\n", "    ", "source", "_", "files", " =", " list", "(", "source", "_", "path", ".", "iter", "dir", "())", "\n", "\n", "    ", "#", " Create", " a", " Path", " object", " from", " the", " target", " directory", " path", " and", " verify", " it", " exists", "\n", "    ", "target", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " target", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "target", "_", "path", ".", "mk", "dir", "(", "parents", "=", "True", ")", "\n", "\n", "    ", "#", " Create", " a", " dictionary", " to", " store", " the", " total", " number", " of", " files", " successfully", " converted", " to", " CS", "V", "\n", "    ", "total", "_", "csv", "_", "count", " =", " {}", "\n", "    ", "#", " Loop", " over", " each", " file", " in", " the", " source", " directory", "\n", "    ", "for", " source", "_", "file", " in", " source", "_", "files", ":", "\n", "        ", "#", " Ver", "ify", " that", " the", " source", " file", " is", " of", " supported", " file", " types", "\n", "        ", "if", " source", "_", "file", ".", "suff", "ix", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", ":", "\n", "            ", "#", " Read", " the", " source", " file", " contents", "\n", "            ", "try", ":", "\n", "                ", "with", " source", "_"], "logprobs": [-1.2732598781585693, -2.617819309234619, -0.7566643357276917, -1.2382879257202148, -0.11294128745794296, -1.857270359992981, -0.1047225296497345, -0.13178786635398865, -0.19854919612407684, -0.995669424533844, -1.8617956638336182, -3.488905668258667, -1.4794902801513672, -0.0882355198264122, -0.3285018801689148, -0.0013822296168655157, -0.13112758100032806, -0.04810323566198349, -1.2779967784881592, -0.055608414113521576, -0.00555791798979044, -0.000795882020611316, -0.00300586991943419, -7.593343616463244e-05, -1.680836794548668e-05, -0.0014937683008611202, -0.04980481415987015, -0.017784181982278824, -0.0443984679877758, -0.04042888805270195, -0.037652187049388885, -2.0503786799963564e-05, -0.00036161558819003403, -5.1377883210079744e-05, -2.5027360916137695, -4.351044481154531e-05, -0.002362200990319252, -0.0023061842657625675, -0.01460515707731247, -0.0009634620510041714, -0.027755700051784515, -0.002088390989229083, -6.41325386823155e-05, -1.4662635294371285e-05, -0.20701341331005096, -0.2352433204650879, -0.14208008348941803, -3.1743974685668945, -0.06583112478256226, -2.3278424739837646, -1.1859941482543945, -0.0017090728506445885, -0.3198390603065491, -0.07009361684322357, -0.00503723556175828, -0.00012575789878610522, -0.10596377402544022, -0.044507477432489395, -0.00013064485392533243, -0.006257583852857351, -2.393958806991577, -0.5168378949165344, -2.110718011856079, -0.8990180492401123, -0.025010159239172935, -0.0031144944950938225, -0.434772253036499, -2.16768741607666, -0.2546311020851135, -0.15517038106918335, -0.016071652993559837, -0.0670367181301117, -0.012859160080552101, -0.5945906639099121, -0.0012494861148297787, -0.8458763957023621, -0.0015534012345597148, -0.0803816094994545, -0.026794277131557465, -1.6296513080596924, -0.013638409785926342, -0.07502049952745438, -0.0001646144810365513, -0.0003887851198669523, -6.711257447022945e-05, -1.308598279953003, -0.00042083943844772875, -0.0008039817912504077, -0.011336083523929119, -1.4114313125610352, -0.0020345004741102457, -0.19441428780555725, -1.3403469324111938, -0.10830889642238617, -0.3616954982280731, -0.0041587776504457, -0.10152947902679443, -0.004558172542601824, -0.006325462367385626, -0.010461964644491673, -0.023166010156273842, -0.4120006263256073, -0.4183328449726105, -0.0280749648809433, -0.07317842543125153, -0.28719303011894226, -0.0004538459761533886, -0.06409714370965958, -0.0006223172531463206, -0.00549686374142766, -0.0029939848463982344, -0.0002982171718031168, -0.000176652567461133, -0.0010495636379346251, -2.5748875486897305e-05, -1.9550132492440753e-05, -0.000164018536452204, -0.006420105695724487, -0.014626891352236271, -0.10037663578987122, -0.034915417432785034, -0.009771963581442833, -0.00019596086349338293, -5.1973900554003194e-05, -2.9205850296420977e-05, -0.11880114674568176, -1.966933996300213e-05, -0.00013624693383462727, -0.004747784696519375, -0.011521940119564533, -0.0011879300000146031, -0.33310553431510925, -0.00012146688823122531, -0.0012717501958832145, -0.0019378946162760258, -0.002199494047090411, -5.1973900554003194e-05, -0.41762956976890564, -0.07688888907432556, -0.0044434149749577045, -0.0017456068890169263, -0.09996271878480911, -0.07960579544305801, -0.4692665934562683, -0.003684875788167119, -0.19235864281654358, -2.233107089996338, -0.13737541437149048, -1.4283289909362793, -0.4124166965484619, -0.258687287569046, -0.54343581199646, -4.32879638671875, -0.2678666114807129, -0.0031294680666178465, -0.4303271472454071, -0.6803955435752869, -0.03057408332824707, -0.5629897713661194, -0.013070855289697647, -0.007333739195019007, -0.21634598076343536, -0.0019463420612737536, -0.8134870529174805, -0.15791234374046326, -2.8890209197998047, -0.11244689673185349, -1.8635798692703247, -0.037616483867168427, -2.1977767944335938, -0.008842123672366142, -1.2994427680969238, -0.5211346745491028, -1.0202902555465698, -1.6194391250610352, -0.7878290414810181, -0.11028005927801132, -0.10138417780399323, -0.016739385202527046, -0.04519125074148178, -0.015883002430200577, -0.07511914521455765, -0.0012172202114015818, -0.01147562637925148, -0.6527289748191833, -0.017879152670502663, -0.01700475998222828, -0.019559485837817192, -0.0018368767341598868, -3.886147169396281e-05, -0.004491123370826244, -0.0001174142598756589, -0.0016050563426688313, -0.03936532139778137, -0.14388510584831238, -4.072856426239014, -0.0014676999999210238, -1.0490036010742188, -0.1134759858250618, -2.089747428894043, -0.05109002813696861, -0.2512607276439667, -2.139969825744629, -2.0542237758636475, -1.547778606414795, -0.29241660237312317, -0.3755875527858734, -0.002342934487387538, -0.08704899996519089, -0.14984330534934998, -6.305972783593461e-05, -0.0028325694147497416, -0.00024041623692028224, -0.16877752542495728, -2.372236667724792e-05, -0.687596321105957, -0.7631980180740356, -0.00872490182518959, -0.0452614352107048, -0.00582592049613595, -0.00013255194062367082, -0.007335040718317032, -0.0015563768101856112, -0.030877886340022087, -0.008427650667726994, -0.014121606945991516, -8.844937838148326e-05, -0.004077930003404617, -0.001848180778324604, -0.03242633119225502, -0.000734297966118902, -0.00321752205491066, -0.00665199663490057, -9.512448741588742e-05, -0.002921957289800048, -0.000774798565544188, -0.043852560222148895, -0.0516236238181591, -0.012119228951632977, -0.007515963166952133, -0.025123976171016693, -0.15567603707313538, -3.846284866333008, -0.08143872022628784, -1.5444000959396362, -0.011608433909714222, -2.340585708618164, -1.1503329277038574, -0.0020260538440197706, -3.1064529418945312, -0.00017724849749356508, -0.0021130156237632036, -0.0013738964917138219, -1.4316279888153076, -0.44149506092071533, -2.312633478140924e-05], "finish_reason": "length"}], "metrics": {"energy": 412.4830137043, "energy_per_token": 1.6112617722824218, "time": 12.908247, "time_per_token": 0.05042283984375}}
{"outputs": [{"text": "csv_file_count = 0\n    for file in Path(source_directory).rglob(\"*\"):\n        if file.is_file() and (file.name.endswith('.txt') or file.name.endswith('.docx') or file.name.endswith('.xlsx') or file.name.endswith('.csv')):\n            with open(file, 'r') as f:\n                text = f.read()\n            csv_file_count += 1\n            file_path = os.path.join(target_directory, f\"{file.name[:-4]}.csv\")\n            with open(file_path, 'w', encoding='utf-8') as csv_file:\n                csv_file.write(text)\n    return csv_file_count", "tokens": ["csv", "_", "file", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "directory", ")", ".", "rg", "lob", "(", "\"", "*", "\"", "):", "\n", "        ", "if", " file", ".", "is", "_", "file", "()", " and", " (", "file", ".", "name", ".", "end", "sw", "ith", "('", ".", "txt", "')", " or", " file", ".", "name", ".", "end", "sw", "ith", "('", ".", "doc", "x", "')", " or", " file", ".", "name", ".", "end", "sw", "ith", "('", ".", "x", "ls", "x", "')", " or", " file", ".", "name", ".", "end", "sw", "ith", "('", ".", "csv", "'))", ":", "\n", "            ", "with", " open", "(", "file", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "text", " =", " f", ".", "read", "()", "\n", "            ", "csv", "_", "file", "_", "count", " +=", " ", "1", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " f", "\"", "{", "file", ".", "name", "[:", "-", "4", "]}", ".", "csv", "\"", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " c", "sv", "_", "file", ":", "\n", "                ", "csv", "_", "file", ".", "write", "(", "text", ")", "\n", "    ", "return", " c", "sv", "_", "file", "_", "count", "\n", "\n", "#"], "logprobs": [-3.72837233543396, -0.021269910037517548, -1.5882189273834229, -0.07968010008335114, -0.875571608543396, -0.03684030845761299, -0.010175731033086777, -0.0006532918778248131, -0.10285911709070206, -0.49452126026153564, -1.8821629285812378, -0.9563567042350769, -0.8522680997848511, -0.6264899373054504, -0.001602795091457665, -0.004625335801392794, -3.516612196108326e-05, -3.325883881188929e-05, -0.002298810286447406, -4.100715523236431e-05, -1.2259854078292847, -0.003988408017903566, -0.7065428495407104, -0.0946819856762886, -0.04956093430519104, -1.5660626888275146, -0.010089114308357239, -0.027731584385037422, -0.016111653298139572, -0.37037795782089233, -0.1704256534576416, -0.0005962263094261289, -0.528155505657196, -3.2186455882765586e-06, -0.035647764801979065, -0.5708367824554443, -0.011776921339333057, -0.9500796794891357, -0.26520371437072754, -0.0006479309522546828, -1.530491590499878, -0.01022210530936718, -0.05565295368432999, -7.354942499659956e-05, 0.0, -1.247678518295288, -0.045717522501945496, -0.08358095586299896, -0.036325663328170776, -0.09511413425207138, -0.0896695926785469, -7.211902266135439e-05, -0.0010180057724937797, -0.00037949037505313754, -0.0010346779599785805, -2.1219027985353023e-05, -2.3841855067985307e-07, -0.019108500331640244, -0.0022652698680758476, -0.06713270395994186, -0.004129217471927404, -0.047642212361097336, -0.17686812579631805, -0.14569799602031708, -0.00014995403762441128, -0.0005304598016664386, -0.0009303532424382865, -0.0005270045949146152, -2.4199192921514623e-05, -1.1920928244535389e-07, -0.028822993859648705, -0.0026468741707503796, -0.07549583166837692, -0.0009545299108140171, -0.0036833316553384066, -0.04523078724741936, -0.08029558509588242, -0.023840315639972687, -0.00038985759601928294, -0.00035315475543029606, -0.0002735478919930756, -0.000259365770034492, -5.018585216021165e-05, -1.1920928244535389e-07, -0.004837831947952509, -0.0011208925861865282, -0.025883043184876442, -0.06439707428216934, -0.012645772658288479, -0.014421752654016018, -0.01413547620177269, -4.248139381408691, -0.36314189434051514, -0.004839018452912569, -0.0881204828619957, -0.11698810011148453, -0.23407317698001862, -0.11922268569469452, -0.9130758047103882, -0.0011797142215073109, -0.5011857748031616, -0.021992841735482216, -0.006065769586712122, -0.0017989181214943528, -0.9434717893600464, -0.05492405593395233, -0.02334863319993019, -3.4689302992774174e-05, -3.564294092939235e-05, -0.012090492062270641, -0.030883435159921646, -0.462091863155365, -1.4060571193695068, -0.0143926115706563, -0.14825625717639923, -0.4298456013202667, -0.588388979434967, -0.010968510992825031, -0.026111742481589317, -0.00020966715237591416, -0.02103881537914276, -0.0512627512216568, -2.493633270263672, -0.05111789330840111, -1.9850348234176636, -0.0805254802107811, -1.4693386554718018, -2.2053474822314456e-05, -0.0013888961402699351, -9.142934868577868e-05, -0.051949165761470795, -0.00235661119222641, -0.026723712682724, -1.2397689715726301e-05, -0.00010406429646536708, -0.0010024051880463958, -0.6491978168487549, -0.6056508421897888, -0.06651195883750916, -0.1035798192024231, -0.009385629557073116, -0.4736964702606201, -1.2578608989715576, -0.04238034412264824, -0.1122424453496933, -0.036735400557518005, -0.0048736585304141045, -0.002002021996304393, -0.0005832401220686734, -0.005257589276880026, -0.025844011455774307, -0.01876296103000641, -0.9951145052909851, -0.03134104236960411, -0.0008465044084005058, -0.029353782534599304, -0.0004903068183921278, -7.510157047363464e-06, -0.0007803970365785062, -0.047538772225379944, -0.01398419588804245, -2.3013782501220703, -0.0004634975048247725, -0.3010912537574768, -0.08300698548555374, -0.05716544762253761, -0.05198843777179718, -0.0033001031260937452, -0.1205214112997055, -0.00032669928623363376, -1.0438876152038574, -0.010553386062383652, -0.15174807608127594, -0.05785997211933136, -0.00033122775494121015, -0.001497934339568019, -0.0015262633096426725, -0.22391849756240845, -0.009794275276362896, -0.17319343984127045, -0.0019602624233812094, -0.007351134438067675, -0.029450785368680954, -0.17666004598140717, -0.017782894894480705, -0.0035878352355211973, -0.42852258682250977, -0.2981872260570526, -0.002993152942508459, -7.760223525110632e-05, -3.3378546504536644e-06, -8.106198947643861e-06, -3.123234637314454e-05, -8.583032467868179e-06, -0.2278023511171341, -0.0197884663939476, -2.2338123321533203], "finish_reason": "stop"}], "metrics": {"energy": 278.7806285591126, "energy_per_token": 1.4151300942086933, "time": 9.227721, "time_per_token": 0.04684122335025381}}
{"outputs": [{"text": "source_directory = Path(source_directory)\n    target_directory = Path(target_directory)\n    if not source_directory.exists():\n        raise FileNotFoundError('Source directory not found.')\n    counter = 0\n    for file in os.listdir(source_directory):\n        path = source_directory / file\n        if path.suffix in ('.txt', '.docx', '.xlsx', '.csv'):\n            if path.suffix == '.txt':\n                df = pd.read_text(path)\n            elif path.suffix == '.docx':\n                try:\n                    doc = docx.Document(path)\n                    df = pd.DataFrame({'Text': [\n                        p.text for p in doc.paragraphs\n                    ]}, index=pd.RangeIndex(0, len(doc.paragraphs) - 1))\n                except Exception:\n                    continue\n            elif path.suffix == '.xlsx':\n                df = pd.read_excel(path)\n            elif path.suffix == '.csv", "tokens": ["source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Source", " directory", " not", " found", ".", "')", "\n", "    ", "counter", " =", " ", "0", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "path", " =", " source", "_", "directory", " /", " file", "\n", "        ", "if", " path", ".", "suff", "ix", " in", " ('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "')", ":", "\n", "            ", "if", " path", ".", "suff", "ix", " ==", " '", ".", "txt", "':", "\n", "                ", "df", " =", " pd", ".", "read", "_", "text", "(", "path", ")", "\n", "            ", "elif", " path", ".", "suff", "ix", " ==", " '", ".", "doc", "x", "':", "\n", "                ", "try", ":", "\n", "                ", "    ", "doc", " =", " doc", "x", ".", "Document", "(", "path", ")", "\n", "                ", "    ", "df", " =", " pd", ".", "DataFrame", "({", "'", "Text", "':", " [", "\n", "                ", "        ", "p", ".", "text", " for", " p", " in", " doc", ".", "paragraph", "s", "\n", "                ", "    ", "]}", ",", " index", "=", "pd", ".", "Range", "Index", "(", "0", ",", " len", "(", "doc", ".", "paragraph", "s", ")", " -", " ", "1", "))", "\n", "                ", "except", " Exception", ":", "\n", "                ", "    ", "continue", "\n", "            ", "elif", " path", ".", "suff", "ix", " ==", " '", ".", "x", "ls", "x", "':", "\n", "                ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "path", ")", "\n", "            ", "elif", " path", ".", "suff", "ix", " ==", " '", ".", "csv"], "logprobs": [-2.723632574081421, -0.028303047642111778, -0.21114936470985413, -0.13867424428462982, -0.1540398746728897, -0.0012725834967568517, -0.0032208492048084736, -9.48860906646587e-05, -1.8954096958623268e-05, -0.0018078426364809275, -0.1346055418252945, -0.04125765338540077, -0.39443477988243103, -0.0007420408655889332, -0.001292227883823216, -0.0008799732895568013, -0.001419608946889639, -0.00017498392844572663, -0.001058137626387179, -4.029192859889008e-05, -7.986990567587782e-06, -0.0004059444472659379, -0.004009186290204525, -0.7408239841461182, -0.5513553023338318, -0.08483654260635376, -0.1496046930551529, -3.9457496313843876e-05, -3.266281055402942e-05, -0.00011252723925281316, -0.18375177681446075, -0.004820273723453283, -0.02114981785416603, -0.0011336335446685553, -0.02218150906264782, -0.003470946568995714, -9.297892393078655e-05, -3.9934315282152966e-05, -1.1861746311187744, -0.6076772212982178, -0.04726000502705574, -0.8536494374275208, -0.0018600797047838569, -0.6406724452972412, -0.03917459771037102, -0.002791438950225711, -0.8266900181770325, -3.5657620429992676, -0.048033252358436584, -0.006018136162310839, -0.0022347019985318184, -0.03919408470392227, -0.11469738185405731, -0.2448703497648239, -0.5617349743843079, -0.3928166627883911, -2.127455472946167, -1.1801649634435307e-05, -0.010467744432389736, -3.099436753473128e-06, -0.000456109904916957, -0.009447863325476646, -6.0437283536884934e-05, -3.0278701160568744e-05, -0.019061483442783356, -0.014872860163450241, -0.00310177868232131, -3.0351052284240723, -0.05218680202960968, -0.8811310529708862, -0.00012385078298393637, -1.9192511899746023e-05, -0.27121230959892273, -0.010595731437206268, -0.025653593242168427, -0.006927283015102148, -0.14012424647808075, -0.2527886629104614, -0.0002602000313345343, -0.7799690961837769, -3.9934315282152966e-05, -0.9246106743812561, -1.2255809307098389, -0.006846421863883734, -0.04226332902908325, -0.00736829312518239, -0.00015710550360381603, -0.007066258694976568, -0.0017711918335407972, -0.04536989703774452, -0.006176550406962633, -0.035640519112348557, -0.000179036331246607, -0.003006464336067438, -0.0030559052247554064, -0.04423527419567108, -0.0008030288736335933, -0.00265733664855361, -0.012799492105841637, -0.00014840454969089478, -0.0027215369045734406, -0.0010346779599785805, -0.03751269355416298, -0.04152780771255493, -0.02615436352789402, -0.01721499301493168, -0.0020695950370281935, -0.9594249129295349, -0.1118641123175621, -0.0004583738627843559, -0.03945712000131607, -4.672895011026412e-05, -0.057828471064567566, -0.00563378632068634, -0.0004371640970930457, -0.5060619711875916, -0.03571632504463196, -0.01021514367312193, -0.0007618147064931691, -1.6381864547729492, -0.0368206612765789, -0.10119479894638062, -0.00047255316167138517, -0.05249723419547081, -4.172238186583854e-05, -1.4812949895858765, -0.0023563734721392393, -0.2154519408941269, -0.22055135667324066, -0.016544412821531296, -0.14860977232456207, -0.11689816415309906, -0.004509992431849241, -1.7881233361549675e-05, -0.003299390198662877, -4.9232225137529895e-05, -0.02252446860074997, -0.0007071378640830517, -0.0002506657037883997, -0.18301385641098022, -0.000663894519675523, -0.0019202856346964836, -0.002981148660182953, -0.0005793085438199341, -2.8954644203186035, -0.00030417583184316754, -0.004659034311771393, -9.083335316972807e-05, -0.00042798896902240813, -0.3106004297733307, -0.0530569851398468, -0.0117459362372756, -0.0013546108966693282, -0.0008728270186111331, -0.02841428853571415, -0.000979658798314631, -0.06290008127689362, -0.020755944773554802, -0.011972001753747463, -0.000940476544201374, -0.35331058502197266, -0.5656858086585999, -0.01011377852410078, -0.03685719892382622, -0.0002972637885250151, -0.1641598492860794, -1.0673813819885254, -0.05814513936638832, -0.034128040075302124, -0.002825318370014429, -0.11686581373214722, -3.6695287227630615, -0.00014923889830242842, -0.045736540108919144, -1.1654633283615112, -0.007766053546220064, -0.029582500457763672, -0.4290589988231659, -0.01567460037767887, -0.00022933237778488547, -0.017310017719864845, -0.002834590384736657, -0.004060358740389347, -0.001427465584129095, -0.6209915280342102, -0.0004614718782249838, -0.2172091007232666, -1.8710790872573853, -0.0064202239736914635, -0.24781560897827148, -0.22278547286987305, -2.3946871757507324, -0.00029869386344216764, -0.05004171282052994, -0.0006606780225411057, -0.07047486305236816, -1.102938175201416, -0.14459426701068878, -0.1840629130601883, -0.0003723404952324927, -0.05565103515982628, -0.021003330126404762, -0.0052520157769322395, -2.825220326485578e-05, -0.6205378770828247, -0.07860173285007477, -0.0010949337156489491, -0.0004999579978175461, -0.24301749467849731, -0.006318473257124424, -0.002256944077089429, -0.058020059019327164, -1.1052199602127075, -1.0671910047531128, -0.06842680275440216, -0.00026341783814132214, -0.00038556772051379085, -1.6018744707107544, -0.023861616849899292, -0.036425672471523285, -0.08653485029935837, -0.002890696283429861, -2.7417760065873154e-05, -0.0009946642676368356, -3.194758028257638e-05, -0.03051523119211197, -0.0004941195948049426, -0.00047922570956870914, -0.048513516783714294, -0.00012063252506777644, -0.00011848701251437888, -0.02001856453716755, -0.002078993245959282, -0.0005117537220939994, -1.1356967687606812, -0.0028254371136426926, -0.012067525647580624, -0.00013100242358632386, -0.04025600105524063, -8.070142939686775e-05, -0.00027855331427417696, -0.0007615765207447112, -0.0002097863471135497, -0.012127237394452095, -0.41623538732528687, -0.009535009041428566, -0.036071691662073135, -0.3499050438404083, -0.001967162825167179, -3.302042750874534e-05, -0.0008613928221166134, -5.817244164063595e-05, -0.012995196506381035, -0.0005822870298288763, -0.0002656822034623474, -0.00098525604698807], "finish_reason": "length"}], "metrics": {"energy": 400.7208264923096, "energy_per_token": 1.5653157284855843, "time": 12.938467, "time_per_token": 0.05054088671875}}
{"outputs": [{"text": "try:\n        # check if the source directory exists\n        if not Path(source_directory).is_dir():\n            raise FileNotFoundError('The source directory does not exist')\n    except FileNotFoundError as e:\n        print(e)\n        return 0\n\n    # count of successfully converted files\n    count = 0\n\n    # convert files\n    for file in Path(source_directory).glob('*.txt'):\n        try:\n            # check if the file exists\n            if not file.is_file():\n                raise FileNotFoundError\n        except FileNotFoundError:\n            print(f\"File '{file}' does not exist\")\n            continue\n\n        # create the destination directory if not already exists\n        Path(target_directory).mkdir(parents=True, exist_ok=True)\n\n        # get the file extension\n        extension = file.name.split('.')[-1]\n\n        # convert the file\n        if extension == 'txt':\n            with open(file, 'r', encoding='utf8') as f:\n                text = f.read()\n                new", "tokens": ["try", ":", "\n", "        ", "#", " check", " if", " the", " source", " directory", " exists", "\n", "        ", "if", " not", " Path", "(", "source", "_", "directory", ")", ".", "is", "_", "dir", "():", "\n", "            ", "raise", " File", "NotFound", "Error", "('", "The", " source", " directory", " does", " not", " exist", "')", "\n", "    ", "except", " File", "NotFound", "Error", " as", " e", ":", "\n", "        ", "print", "(", "e", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " count", " of", " successfully", " converted", " files", "\n", "    ", "count", " =", " ", "0", "\n", "\n", "    ", "#", " convert", " files", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "directory", ")", ".", "glob", "('", "*", ".", "txt", "')", ":", "\n", "        ", "try", ":", "\n", "            ", "#", " check", " if", " the", " file", " exists", "\n", "            ", "if", " not", " file", ".", "is", "_", "file", "():", "\n", "                ", "raise", " File", "NotFound", "Error", "\n", "        ", "except", " File", "NotFound", "Error", ":", "\n", "            ", "print", "(", "f", "\"", "File", " '", "{", "file", "}'", " does", " not", " exist", "\"", ")", "\n", "            ", "continue", "\n", "\n", "        ", "#", " create", " the", " destination", " directory", " if", " not", " already", " exists", "\n", "        ", "Path", "(", "target", "_", "directory", ")", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "        ", "#", " get", " the", " file", " extension", "\n", "        ", "extension", " =", " file", ".", "name", ".", "split", "('", ".", "')", "[-", "1", "]", "\n", "\n", "        ", "#", " convert", " the", " file", "\n", "        ", "if", " extension", " ==", " '", "txt", "':", "\n", "            ", "with", " open", "(", "file", ",", " '", "r", "'", ",", " encoding", "='", "utf", "8", "')", " as", " f", ":", "\n", "                ", "text", " =", " f", ".", "read", "()", "\n", "                ", "new"], "logprobs": [-2.820483922958374, -0.0011510183103382587, -0.012782308273017406, -0.011038429103791714, -1.854494571685791, -3.0998458862304688, -0.4360834062099457, -1.1249926090240479, -0.2770683467388153, -0.13465993106365204, -0.03008003532886505, -0.15921488404273987, -0.0011255365097895265, -0.5516425967216492, -0.09262460470199585, -2.5599558353424072, -0.011951270513236523, -0.0031777145341038704, -0.00014959646796341985, -9.30981186684221e-05, -0.0008233971311710775, -5.2689116273541003e-05, -1.3797006607055664, -9.321732068201527e-05, -0.004057034384459257, -0.0038713286630809307, -0.006674022413790226, -0.0012212683213874698, -0.058524783700704575, -0.011172001250088215, -0.00010144196130568162, -1.680836794548668e-05, -1.4912652969360352, -1.1167672872543335, -0.09133992344141006, -0.013249566778540611, -0.032821401953697205, -0.00027056847466155887, -0.001508051878772676, -1.3886278867721558, -0.001573873101733625, -1.4556300640106201, -0.020848648622632027, -0.11536392569541931, -0.00030322244856506586, -1.3112935448589269e-05, -0.23234477639198303, -0.31298595666885376, -0.0010804060148075223, -0.009292565286159515, -0.001580181298777461, -0.2659471035003662, -0.13879938423633575, -0.8117106556892395, -0.020388081669807434, -0.020549608394503593, -0.14069609344005585, -0.14005523920059204, -0.38809460401535034, -0.007435386534780264, -0.0395648330450058, -0.2783390283584595, -0.0013238961109891534, -0.4590810537338257, -4.0669097900390625, -1.9430210590362549, -1.3637385368347168, -0.05320834368467331, -0.07021119445562363, -0.060617778450250626, -0.001404728856869042, -1.1058285236358643, -0.07507922500371933, -0.002765285549685359, -0.0004233417857903987, -0.0023371067363768816, -0.354548841714859, -0.00044979469384998083, -0.44154274463653564, -2.92303729057312, -1.3465403318405151, -2.5465073585510254, -0.003479262348264456, -0.1432943195104599, -0.5837963819503784, -0.457966685295105, -0.7467619180679321, -0.000730128725990653, -0.0015824426664039493, -8.320462075062096e-05, -2.3483953555114567e-05, -0.000992997083812952, -7.426462980220094e-05, -1.411286473274231, -0.29097694158554077, -0.17167797684669495, -0.46284210681915283, -0.5046225190162659, -0.04424554109573364, -0.008833261206746101, -0.04184087738394737, -0.011184615083038807, -1.5069693326950073, -0.000303818320389837, -0.0023451941087841988, -0.002801424590870738, -0.9207744002342224, -2.3346469402313232, -0.09495598077774048, -0.28356602787971497, -0.6844090223312378, -0.5999335646629333, -0.18392804265022278, -0.00047434045700356364, -0.03300273045897484, -0.23002073168754578, -0.9581031203269958, -0.000671042304020375, -0.3883371949195862, -1.3708974620385561e-05, -0.0004316828562878072, -0.004362352658063173, -0.005604150705039501, -0.0003184764937032014, -0.6580101847648621, -0.06615418940782547, -0.028602097183465958, -4.3748852476710454e-05, -2.579728364944458, -1.1186649799346924, -0.0033597471192479134, -0.017491837963461876, -0.00018606838420964777, -3.8980677345534787e-05, -2.2830593585968018, -0.036596234887838364, -0.002743292599916458, -0.3653147220611572, -0.5572808384895325, -0.22614683210849762, -1.362445592880249, -1.0933222770690918, -1.6016135215759277, -0.0005110388156026602, -0.033737171441316605, -0.3344168961048126, -0.7102929353713989, -0.0007227431051433086, -0.006197520066052675, -0.26276615262031555, -0.0009311868925578892, -0.001900772680528462, -0.1675746887922287, -0.084448903799057, -0.006203562021255493, -0.6119065880775452, -0.0012817509705200791, -0.6675605177879333, -2.3753762245178223, -1.5665888786315918, -3.4901039600372314, -1.6020911931991577, -0.169375479221344, -2.9755923748016357, -2.396230936050415, -0.699144721031189, -0.014631707221269608, -0.00038389943074434996, -1.647817611694336, -0.013070972636342049, -0.013456474989652634, -4.6491513785440475e-06, -4.2437604861333966e-05, -0.0004343043256085366, -0.0001591317413840443, -0.004767479375004768, -2.8490614567999728e-05, -0.00013183678674977273, -0.28995001316070557, -0.0024649493861943483, -0.001420323271304369, -0.0016874135471880436, -0.003243544837459922, 0.0, -9.369411418447271e-05, -0.00047338721924461424, -0.0009664393728598952, -0.00019369633810129017, -0.013224391266703606, -0.19301962852478027, -0.0003496989083942026, -0.24245844781398773, -1.7581205368041992, -0.4464370012283325, -0.7086260318756104, -2.2161898612976074, -0.27622970938682556, -0.00037925204378552735, -1.3576107025146484, -0.023224597796797752, -0.3358514606952667, -0.0014959108084440231, -2.2747421264648438, -0.03915293142199516, -0.04904961958527565, -0.22105224430561066, -0.000102037942269817, -0.003377568442374468, -0.15734447538852692, -0.00021550717065110803, -0.0011643542675301433, -0.1075247973203659, -0.17427806556224823, -0.0006605588714592159, -0.20841561257839203, -0.9675272703170776, -0.5978091359138489, -0.058801330626010895, -1.999784231185913, -0.000774917658418417, -0.16761894524097443, -0.02367396466434002, -0.18282155692577362, -0.0586542971432209, -0.14238150417804718, -0.013605600222945213, -0.0097548458725214, -0.002148702275007963, -2.705038547515869, -0.037865933030843735, -0.009306502528488636, -0.3815101981163025, -0.1169373020529747, -0.1563289910554886, -0.06211886554956436, -0.40264269709587097, -0.0003002431185450405, -0.03446819633245468, -0.05089948698878288, -0.07325686514377594, -2.5008533000946045, -0.008254933170974255, -0.0007557396893389523, -0.5554158687591553, -0.1128775104880333, -0.004757395014166832, -0.002056271303445101, -1.043771505355835, -0.05463334172964096, -0.051356520503759384, -4.088794958079234e-05, -3.862306402879767e-05, -0.02210560254752636, -0.03856251761317253, -0.9966408610343933, -3.657960891723633], "finish_reason": "length"}], "metrics": {"energy": 344.78660577392606, "energy_per_token": 1.3468226788043987, "time": 11.906751, "time_per_token": 0.04651074609375}}
{"outputs": [{"text": "source_directory = Path(source_directory)\n    if not source_directory.exists():\n        raise FileNotFoundError('The source directory does not exist')\n    for source_file in source_directory.iterdir():\n        if source_file.suffix == '.txt':\n            text_file_name = source_file.with_suffix('.csv')\n            df = pd.read_csv(source_file)\n            df.to_csv(text_file_name, index=False)\n            os.remove(source_file)\n        elif source_file.suffix in ['.docx', '.doc']:\n            doc = docx.Document(source_file)\n            text = '\\n'.join([paragraph.text for paragraph in doc.paragraphs])\n            csv_file_name = source_file.with_suffix('.csv')\n            with open(csv_file_name, 'w', newline='') as csv_file:\n                csv_writer = pd.write.csv(csv_file)\n                csv_writer(text)\n            os.remove(source_", "tokens": ["source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "The", " source", " directory", " does", " not", " exist", "')", "\n", "    ", "for", " source", "_", "file", " in", " source", "_", "directory", ".", "iter", "dir", "():", "\n", "        ", "if", " source", "_", "file", ".", "suff", "ix", " ==", " '", ".", "txt", "':", "\n", "            ", "text", "_", "file", "_", "name", " =", " source", "_", "file", ".", "with", "_", "suff", "ix", "('", ".", "csv", "')", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "source", "_", "file", ")", "\n", "            ", "df", ".", "to", "_", "csv", "(", "text", "_", "file", "_", "name", ",", " index", "=", "False", ")", "\n", "            ", "os", ".", "remove", "(", "source", "_", "file", ")", "\n", "        ", "elif", " source", "_", "file", ".", "suff", "ix", " in", " ['", ".", "doc", "x", "'", ",", " '", ".", "doc", "']", ":", "\n", "            ", "doc", " =", " doc", "x", ".", "Document", "(", "source", "_", "file", ")", "\n", "            ", "text", " =", " '\\", "n", "'", ".", "join", "([", "paragraph", ".", "text", " for", " paragraph", " in", " doc", ".", "paragraph", "s", "])", "\n", "            ", "csv", "_", "file", "_", "name", " =", " source", "_", "file", ".", "with", "_", "suff", "ix", "('", ".", "csv", "')", "\n", "            ", "with", " open", "(", "csv", "_", "file", "_", "name", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "_", "file", ":", "\n", "                ", "csv", "_", "writer", " =", " pd", ".", "write", ".", "csv", "(", "csv", "_", "file", ")", "\n", "                ", "csv", "_", "writer", "(", "text", ")", "\n", "            ", "os", ".", "remove", "(", "source", "_"], "logprobs": [-2.723632574081421, -0.028303047642111778, -0.21114936470985413, -0.13867424428462982, -0.1540398746728897, -0.0012725834967568517, -0.0032208492048084736, -9.48860906646587e-05, -1.8954096958623268e-05, -0.0018078426364809275, -0.1346055418252945, -0.04125765338540077, -1.3458298444747925, -0.07105018198490143, -0.10372479259967804, -2.7179348762729205e-05, -2.0146166207268834e-05, -9.202533692587167e-05, -0.1399458944797516, -0.006021928042173386, -0.023640552535653114, -0.0008397151832468808, -0.019829489290714264, -0.0027715861797332764, -8.463501580990851e-05, -4.2914423829643056e-05, -1.1937800645828247, -1.1824462413787842, -0.08858001977205276, -0.016250649467110634, -0.025890709832310677, -0.00018916724366135895, -0.0013987767742946744, -1.677538275718689, -0.004157828167080879, -1.1709370613098145, -3.475048303604126, -2.196621894836426, -0.029046854004263878, -0.19760456681251526, -0.1319647580385208, -0.1520858258008957, -0.0003516055876389146, -0.0021387101151049137, -5.709961988031864e-05, -0.4890505075454712, -0.00034981805947609246, -0.000979658798314631, -0.012174227274954319, -0.007132780738174915, -0.38345441222190857, -0.07959941029548645, -0.000479344860650599, -0.0013785392511636019, -0.0008416209602728486, -0.7522620558738708, -3.85038583772257e-05, -1.845529317855835, -0.06647370010614395, -0.004903553053736687, -0.09169651567935944, -0.47887173295021057, -0.016159746795892715, -0.001907911617308855, -2.448627471923828, -0.8454546332359314, -1.1968554258346558, -1.996295690536499, -1.1720906496047974, -0.09373659640550613, -0.4972350597381592, -0.00042024365393444896, -0.0077531603164970875, -0.0035935367923229933, -2.3537299633026123, -0.00011240804451517761, -0.05666983500123024, -9.238292841473594e-05, -0.038163166493177414, -0.060810741037130356, -0.11450774222612381, -0.0017764277290552855, -0.08466985076665878, -0.05827829986810684, -2.9700686931610107, -0.053701043128967285, -0.05495418235659599, -0.00015424491721205413, -0.6278597712516785, -0.00022480344341602176, -1.1610205173492432, -0.0033776871860027313, -0.25450336933135986, -6.4490144723095e-05, -0.003780125407502055, -2.850980758666992, -0.06123759225010872, -0.03221892565488815, -0.08328913152217865, -0.03926824405789375, -0.051769088953733444, -1.5497195136049413e-06, -0.0031760509591549635, -0.005379012320190668, -0.1157468855381012, -0.00018606838420964777, -3.3378546504536644e-06, -7.86750388215296e-05, -2.3603161025675945e-05, -0.2018251270055771, -0.39723145961761475, -0.010065038688480854, -0.023032167926430702, -0.7388483881950378, -0.012849862687289715, -0.4207736551761627, -1.3192288875579834, -9.405170567333698e-05, -0.9896553754806519, -0.00018273114983458072, -0.007978474721312523, -4.970903682988137e-05, -0.0007005859515629709, -0.004050860647112131, -0.03781657665967941, -0.2588479816913605, -0.07263536751270294, -0.013211450539529324, -0.00011550712952157483, -1.4305012882687151e-05, -5.674201020156033e-05, -0.004395348019897938, -0.00013469743134919554, -1.8056343793869019, -0.376181423664093, -0.0009975224966183305, -0.06829220056533813, -0.0071512446738779545, -0.014139472506940365, -9.691245941212401e-05, -0.00625639921054244, -0.0073602464981377125, -0.6408913731575012, -0.7541179656982422, -0.014386971481144428, -0.005774838384240866, -0.0009925207123160362, -0.38086986541748047, -0.8825602531433105, -0.012995785102248192, -0.0011714984430000186, -0.0008578196284361184, -0.0325552299618721, -0.0010153858456760645, -0.025888966396450996, -3.40932747349143e-05, -0.00026306029758416116, -0.013357672840356827, -0.010537225753068924, -0.0037954451981931925, -0.437637060880661, -0.2124924659729004, -0.840937614440918, -0.00610534381121397, -0.04256954416632652, -0.0003455280384514481, -5.9126061387360096e-05, -0.15416382253170013, -1.3313530683517456, -0.0003762729174923152, -0.0012229352723807096, -0.013639233075082302, -0.0003599472693167627, -0.0007650309125892818, -0.0015481640584766865, -0.003877741051837802, -0.0043273381888866425, -0.0001438752660760656, -0.006382083520293236, -0.013369082473218441, -0.011844072490930557, -0.8920548558235168, -0.011906390078365803, -0.022595565766096115, -0.06924759596586227, -0.006830201484262943, -0.0005246216314844787, -0.02894263155758381, -1.728519782773219e-05, -0.00017593742813915014, -0.00013302871957421303, -0.006246448028832674, -3.2186455882765586e-06, -0.0022958368062973022, -4.017272294731811e-05, -0.0018158152233809233, -0.0006859333370812237, -0.0005147324409335852, -0.00024077377747744322, -0.002933962270617485, -0.0026907450519502163, -0.6785351037979126, -0.009456484578549862, -0.0006231511943042278, -0.0015253110323101282, -9.536738616588991e-07, -5.8412379075889476e-06, -2.0861407392658293e-05, -2.2411095415009186e-05, -0.0003817544784396887, -0.018849648535251617, -0.007188764400780201, -0.8398915529251099, -0.00023147765023168176, -1.702881932258606, -0.00019703354337252676, -0.052995823323726654, -0.00017927470616996288, -0.0003404037852305919, -0.5618894696235657, -0.000256982195423916, -0.017652075737714767, -0.0015676839975640178, -0.0005670370301231742, -0.0007186928996816278, -0.0011842388194054365, -0.7303754687309265, -0.011198288761079311, -0.5300024151802063, -0.00036113892565481365, -2.66357159614563, -2.038458114839159e-05, -0.5618773102760315, -0.27125754952430725, -0.30986282229423523, -0.6573143601417542, -0.06429804116487503, -0.0022724061273038387, -0.0010894560255110264, -1.7187063694000244, -0.028019791468977928, -0.05757078528404236, -0.046770717948675156, -0.0004536076739896089, -0.0037667055148631334, -1.119112491607666, -0.23309004306793213, -1.0169811248779297, -0.012814085930585861, -0.22698529064655304, -0.03620920702815056, -8.106198947643861e-06, -0.0006138585740700364, -0.00014745102089364082, -0.0029674803372472525, -3.8980677345534787e-05], "finish_reason": "length"}], "metrics": {"energy": 325.3356033973697, "energy_per_token": 1.2708422007709754, "time": 11.900756, "time_per_token": 0.046487328125}}
{"outputs": [{"text": "# check if the target directory exists\n    target_dir = Path(target_directory)\n    if not target_dir.exists():\n        print(\"Target directory does not exist. Creating...\")\n        os.makedirs(target_dir)\n    else:\n        print(\"Target directory already exists.\")\n\n    # create a list of all files in the source directory\n    source_files = os.listdir(source_directory)\n    # remove directories and filter to get only files\n    source_files = [f for f in source_files if os.path.isfile(os.path.join(source_directory, f))]\n\n    # create a dictionary to store the file paths and extensions\n    file_map = {}\n    for file in source_files:\n        # get file extension\n        ext = os.path.splitext(file)[1].lower()\n        if ext not in file_map:\n            file_map[ext] = []\n        # create a file path by joining the source directory and the file\n        file_path = os.path.join(source_directory, file", "tokens": ["#", " check", " if", " the", " target", " directory", " exists", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " target", "_", "dir", ".", "exists", "():", "\n", "        ", "print", "(", "\"", "Target", " directory", " does", " not", " exist", ".", " Creating", ".", ".", ".", "\"", ")", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "    ", "else", ":", "\n", "        ", "print", "(", "\"", "Target", " directory", " already", " exists", ".", "\"", ")", "\n", "\n", "    ", "#", " create", " a", " list", " of", " all", " files", " in", " the", " source", " directory", "\n", "    ", "source", "_", "files", " =", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", "\n", "    ", "#", " remove", " directories", " and", " filter", " to", " get", " only", " files", "\n", "    ", "source", "_", "files", " =", " [", "f", " for", " f", " in", " source", "_", "files", " if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " f", "))", "]", "\n", "\n", "    ", "#", " create", " a", " dictionary", " to", " store", " the", " file", " paths", " and", " extensions", "\n", "    ", "file", "_", "map", " =", " {}", "\n", "    ", "for", " file", " in", " source", "_", "files", ":", "\n", "        ", "#", " get", " file", " extension", "\n", "        ", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", ".", "lower", "()", "\n", "        ", "if", " ext", " not", " in", " file", "_", "map", ":", "\n", "            ", "file", "_", "map", "[", "ext", "]", " =", " []", "\n", "        ", "#", " create", " a", " file", " path", " by", " joining", " the", " source", " directory", " and", " the", " file", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file"], "logprobs": [-1.2732598781585693, -2.971177577972412, -0.4076904058456421, -1.0550949573516846, -2.8517160415649414, -0.07486632466316223, -0.11391700804233551, -0.679739236831665, -0.0026423560921102762, -2.155667304992676, -0.01889854669570923, -1.0957872867584229, -0.07386358082294464, -0.08186059445142746, -0.0014350840356200933, -0.0035417466424405575, -5.686121585313231e-05, -1.6569954823353328e-05, -0.0008741371566429734, -0.06625237315893173, -0.01825987920165062, -0.09694062918424606, -0.0528850220143795, -0.09585288912057877, -2.1457441107486375e-05, -0.00021514961554203182, -0.0002898749662563205, -0.09238410741090775, -0.00488160690292716, -0.01242762990295887, -0.001965021248906851, -2.9351627826690674, -0.2608516812324524, -1.0455996990203857, -0.6217050552368164, -0.044044334441423416, -0.177189901471138, -0.0004161922261118889, -0.0051918914541602135, -0.4592858850955963, -0.47907695174217224, -0.8622878193855286, -0.02787616103887558, -0.009180122055113316, -0.005332057364284992, -0.0016463547945022583, -0.004094195086508989, -0.00579759432002902, -0.7527009844779968, -1.8715683836489916e-05, -0.07728168368339539, -7.116541382856667e-05, -0.0005259322933852673, -0.0006163604557514191, -0.013323559425771236, -3.635817120084539e-05, -0.6958803534507751, -0.09695123136043549, -0.03541134297847748, -1.2630329132080078, -0.6035332679748535, -9.715084888739511e-05, -0.0327114574611187, -0.002516557462513447, -0.11608840525150299, -0.013441772200167179, -0.12704059481620789, -0.017905382439494133, -0.0026956195943057537, -0.6680129170417786, -0.0023462644312530756, -0.04906290024518967, -0.2961164116859436, -0.0005272428970783949, -0.000993354362435639, -0.24984578788280487, -0.003056618385016918, -0.32747095823287964, -2.6406960487365723, -0.4512157440185547, -0.6232261061668396, -0.20285317301750183, -1.4085943698883057, -0.8266105055809021, -0.2251940369606018, -0.028768440708518028, -0.06515897810459137, -0.011389357037842274, -0.39079517126083374, -0.0004468158003874123, -0.32759612798690796, -0.003246515290811658, -0.8180051445960999, -0.019741833209991455, -1.7886333465576172, -1.2755313036905136e-05, -0.002258847001940012, -2.9802276912960224e-06, -0.0002812943421304226, -0.005006277933716774, -6.389413465512916e-05, -3.7788631743751466e-05, -0.0002748588449321687, -0.0010979106882587075, -0.9006493091583252, -2.8531947135925293, -2.372964859008789, -4.0454912185668945, -1.6326839923858643, -3.815605878829956, -2.052701473236084, -2.5396218299865723, -1.001009225845337, -0.7240757942199707, -0.36260077357292175, -0.002172611653804779, -0.379130482673645, -0.0006897454150021076, -0.017177730798721313, -0.020880870521068573, -0.11727947741746902, -0.536739706993103, -0.017268892377614975, -0.000302745756926015, -0.00011407678539399058, -0.0069717951118946075, -5.6980417866725475e-05, -0.00020203932945150882, -0.01907750591635704, -0.1681714504957199, -5.602679812000133e-05, -0.0001811817055568099, -0.003197083715349436, -0.017575006932020187, -0.0006011109799146652, -0.0006255338666960597, -0.1473289281129837, -0.00032360086333937943, -0.00011824862303910777, -0.004788953345268965, -0.00010477947944309562, -0.00022480344341602176, -0.004310364834964275, -9.107174992095679e-05, -0.0003067976504098624, -0.00031931069679558277, -0.02023751102387905, -0.0005495230434462428, -0.01570722460746765, -0.0023808723781257868, -0.3248708248138428, -0.0003922408213838935, -0.3448055386543274, -1.7337626218795776, -0.19078519940376282, -1.6795580387115479, -1.0762656927108765, -0.3328564465045929, -0.6032261252403259, -1.5304560661315918, -2.4049172401428223, -0.7228642702102661, -2.198598623275757, -0.35603398084640503, -0.0011598295532166958, -0.5393419861793518, -0.019085342064499855, -3.710211753845215, -0.0177682563662529, -0.28025102615356445, -0.007240129169076681, -0.3534313142299652, -0.21314528584480286, -0.9330084919929504, -0.17518526315689087, -0.00296248821541667, -1.883488948806189e-05, -1.6569954823353328e-05, -0.00010668662434909493, -0.005016597453504801, -0.004557223059237003, -1.7401243448257446, -1.3129384517669678, -2.2657575607299805, -1.2805211544036865, -0.3326060473918915, -0.00023398046323563904, -0.8301798701286316, -0.015063109807670116, -0.37984052300453186, -9.298280929215252e-06, -0.0002791491860989481, -0.00017510310863144696, -0.0007930232677608728, -3.1709168979432434e-05, -2.3841855067985307e-07, -5.566918844124302e-05, -0.004431072156876326, -0.12009577453136444, -0.00025650550378486514, -0.07266940176486969, -0.9378347992897034, -0.6412829756736755, -0.07098433375358582, -0.04342758283019066, -0.05572015419602394, -2.2339489459991455, -0.052278563380241394, -1.5607773065567017, -3.6954811548639555e-06, -0.16337360441684723, -4.184158387943171e-05, -0.0001958416833076626, -0.13359037041664124, -0.011072855442762375, -0.0008023141999728978, -0.11862816661596298, -0.00015817821258679032, -0.0034583541564643383, -0.005127968266606331, -0.000785280775744468, -0.014181784354150295, -2.4676019165781327e-05, -0.1339743286371231, -0.009351616725325584, -0.044307123869657516, -0.9749209880828857, -3.574202537536621, -0.5842944979667664, -2.0309548377990723, -0.11583734303712845, -2.7558491230010986, -1.1027270555496216, -0.13535630702972412, -0.13704295456409454, -0.10663840919733047, -0.37949344515800476, -1.2003834247589111, -0.05779145285487175, -1.0487761497497559, -0.00033420699764974415, -0.18016675114631653, -0.014521271921694279, -0.2234429568052292, -0.002157504903152585, -0.05971080809831619, -6.198863957251888e-06, -4.851700214203447e-05, -0.0006579380133189261, -0.0008585343020968139, -7.199982064776123e-05, -0.0020157035905867815, -5.066266385256313e-05, -2.9682672902708873e-05, -0.00012230125139467418, -0.0016057705506682396], "finish_reason": "length"}], "metrics": {"energy": 385.21849155807536, "energy_per_token": 1.5047597326487319, "time": 12.528862, "time_per_token": 0.0489408671875}}
{"outputs": [{"text": "source_directory = Path(source_directory)\n    target_directory = Path(target_directory)\n    if not source_directory.exists():\n        raise FileNotFoundError(f\"Source directory '{source_directory}' does not exist.\")\n    if target_directory.exists():\n        # Check if the target directory is empty\n        if len(list(target_directory.iterdir())) == 0:\n            target_directory.mkdir()\n        else:\n            print(\"Target directory is not empty. Deleting files in target directory...\")\n            for file in target_directory.iterdir():\n                file.unlink()\n\n    # Iterate over files in the source directory\n    file_count = 0\n    for file in source_directory.rglob('*.txt'):\n        # Check if the file contains text\n        if not file.read_text().isspace():\n            file_name = file.name.replace('.txt', '')\n            file_path = Path(f'{file.parent}/{file_name}.csv')\n            with pd.ExcelWriter(str(", "tokens": ["source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " target", "_", "directory", ".", "exists", "():", "\n", "        ", "#", " Check", " if", " the", " target", " directory", " is", " empty", "\n", "        ", "if", " len", "(", "list", "(", "target", "_", "directory", ".", "iter", "dir", "()))", " ==", " ", "0", ":", "\n", "            ", "target", "_", "directory", ".", "mk", "dir", "()", "\n", "        ", "else", ":", "\n", "            ", "print", "(", "\"", "Target", " directory", " is", " not", " empty", ".", " De", "le", "ting", " files", " in", " target", " directory", ".", ".", ".", "\"", ")", "\n", "            ", "for", " file", " in", " target", "_", "directory", ".", "iter", "dir", "():", "\n", "                ", "file", ".", "un", "link", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " files", " in", " the", " source", " directory", "\n", "    ", "file", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " source", "_", "directory", ".", "rg", "lob", "('", "*", ".", "txt", "')", ":", "\n", "        ", "#", " Check", " if", " the", " file", " contains", " text", "\n", "        ", "if", " not", " file", ".", "read", "_", "text", "()", ".", "iss", "pace", "():", "\n", "            ", "file", "_", "name", " =", " file", ".", "name", ".", "replace", "('", ".", "txt", "'", ",", " '", "')", "\n", "            ", "file", "_", "path", " =", " Path", "(", "f", "'{", "file", ".", "parent", "}/{", "file", "_", "name", "}", ".", "csv", "')", "\n", "            ", "with", " pd", ".", "Excel", "Writer", "(", "str", "("], "logprobs": [-2.723632574081421, -0.028303047642111778, -0.21114936470985413, -0.13867424428462982, -0.1540398746728897, -0.0012725834967568517, -0.0032208492048084736, -9.48860906646587e-05, -1.8954096958623268e-05, -0.0018078426364809275, -0.1346055418252945, -0.04125765338540077, -0.39443477988243103, -0.0007420408655889332, -0.001292227883823216, -0.0008799732895568013, -0.001419608946889639, -0.00017498392844572663, -0.001058137626387179, -4.029192859889008e-05, -7.986990567587782e-06, -0.0004059444472659379, -0.004009186290204525, -0.7408239841461182, -0.5513553023338318, -0.08483654260635376, -0.1496046930551529, -3.9457496313843876e-05, -3.266281055402942e-05, -0.00011252723925281316, -0.18375177681446075, -0.004820273723453283, -0.02114981785416603, -0.0011336335446685553, -0.02218150906264782, -0.003470946568995714, -9.297892393078655e-05, -3.9934315282152966e-05, -0.4598657488822937, -0.4696826934814453, -0.24759981036186218, -0.5795562863349915, -0.04065050929784775, -1.2906043529510498, -0.00019107422849629074, -0.0028748870827257633, -0.0001411338453181088, -0.0001012035645544529, -0.0805075541138649, -0.5363667607307434, -0.00032586511224508286, -0.002934675430878997, -0.13975372910499573, -0.006559981033205986, -0.00014399446081370115, -0.002367552602663636, -0.8479788303375244, -1.1440950632095337, -2.0495293140411377, -1.311301275563892e-06, -3.2066785934148356e-05, -0.0073119644075632095, -0.10440266132354736, -0.3075248599052429, -0.014364057220518589, -0.0031497888267040253, -3.2535083293914795, -2.289259910583496, -0.290902704000473, -1.490216851234436, -0.29391974210739136, -0.04384731501340866, -1.0034244060516357, -0.1188623309135437, -0.35780778527259827, -0.0006987990345805883, -0.28355398774147034, -1.0236926078796387, -0.016433250159025192, -0.527337372303009, -0.018902523443102837, -0.022995587438344955, -6.318072337307967e-06, -4.279521817807108e-05, -9.775113539944869e-06, -0.3867885172367096, -0.000380324519937858, -0.0007759897271171212, -0.824267566204071, -0.0009732277248986065, -0.006343349348753691, -0.0027505443431437016, -0.0061369785107672215, -0.0020393780432641506, -2.089461326599121, -0.0023975218646228313, -0.02954905293881893, -0.013988192193210125, -0.05569038540124893, -7.295342220459133e-05, -0.4023425281047821, -0.08321717381477356, -0.3962228298187256, -0.14472517371177673, -8.5588610090781e-05, -0.06235286965966225, -0.0013078240444883704, -1.9401662349700928, -0.050927355885505676, -0.5497785806655884, -0.5617778897285461, -0.007196930702775717, -0.1955963522195816, -0.013706142082810402, -0.0011450645979493856, -0.31727612018585205, -3.1256489753723145, -0.0039702411741018295, -1.4066597032069694e-05, -1.5389975309371948, -0.7614923715591431, -0.9464292526245117, -0.04709966480731964, -0.13801340758800507, -0.3339170217514038, -0.0071830833330750465, -0.007412904407829046, -0.0013005617074668407, -0.004457300528883934, -0.011836650781333447, -0.29177144169807434, -0.20465658605098724, -0.060008808970451355, -0.09792947769165039, -3.814624506048858e-05, -3.182837463100441e-05, -0.00015627116954419762, -0.07332976162433624, -0.00020728347590193152, -0.00025900822947733104, -0.004011798650026321, -0.0003150205302517861, -0.36408379673957825, -0.0035082479007542133, -0.0013430631952360272, -0.00044312194222584367, -0.003782975720241666, -0.01681886427104473, -2.7328338623046875, -0.016890250146389008, -2.1372547149658203, -3.3656630516052246, -0.01357114315032959, -0.6329571604728699, -1.2217150926589966, -0.08861122280359268, -0.576898992061615, -0.02038913406431675, -0.006525399163365364, -0.2053351253271103, -0.0013659204123541713, -1.5867090225219727, -0.003604345954954624, -0.2826502323150635, -0.00876685231924057, -0.0031499075703322887, -0.00225242436863482, -0.019826684147119522, -0.018858423456549644, -0.08131421357393265, -0.15620356798171997, -0.1033252701163292, -0.03546495735645294, -4.2676016164477915e-05, -2.3007127310847864e-05, -2.634490556374658e-05, -1.9884490966796875, -0.002099573379382491, -0.825760543346405, -0.015766721218824387, -0.5320661067962646, -0.6676978468894958, -0.027194596827030182, -0.030131855979561806, -0.03846042975783348, -0.008859729394316673, -1.5111885070800781, -1.8831292390823364, -0.12428361922502518, -0.32347631454467773, -0.22574132680892944, -4.087874412536621, -0.8547732830047607, -0.5432837605476379, -0.0008120815036818385, -0.18620336055755615, -1.3910231590270996, -0.5030529499053955, -0.007823538966476917, -0.09482739865779877, -0.00047743841423653066, -0.0480889230966568, -0.42345985770225525, -0.009729582816362381, -2.769137144088745, -3.0397906812140718e-05, -0.039750099182128906, -0.005126782692968845, -0.007155860774219036, -2.146244764328003, -0.2536499500274658, -1.2709107398986816, -0.08667336404323578, -0.36405447125434875, -0.00269205286167562, -0.43820643424987793, -0.34372562170028687, -0.6293396353721619, -0.20988494157791138, -0.035977400839328766, -0.0034387523774057627, -0.00016091958968900144, -4.184158387943171e-05, -0.0514807403087616, -2.254243850708008, -0.1021101325750351, -0.03336656093597412, -1.707005500793457, -0.1929359883069992, -0.924665629863739, -0.009640801697969437, -0.7467697858810425, -0.020465051755309105, -2.662919521331787, -1.1922742128372192, -2.1480226516723633, -0.11962109059095383, -0.1634991466999054, -0.720142662525177, -0.004986706655472517, -0.06245579570531845, -0.00015948931104503572, -0.018005844205617905, -0.031987808644771576, -0.005014224909245968, -0.0018879224080592394, -0.018935393542051315, -0.09232889115810394, -3.0494203567504883, -1.4207285642623901, -6.568216485902667e-05, -0.05831383913755417, -0.042749229818582535, -0.001932302606292069, -2.7980942726135254, -0.000310730334604159], "finish_reason": "length"}], "metrics": {"energy": 345.9766541023254, "energy_per_token": 1.3514713050872087, "time": 12.114466, "time_per_token": 0.0473221328125}}
{"outputs": [{"text": "# Check if source_directory exists\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Directory {source_directory} does not exist!\")\n\n    # Get list of files in the source directory\n    source_files = [file for file in Path(source_directory).iterdir() if file.is_file()]\n    count = 0  # To keep track of the number of files successfully converted to CSV\n\n    # Iterate through the list of files\n    for file in source_files:\n        # Extract the extension of the file\n        ext = os.path.splitext(file)[1]\n        if ext == '.txt':\n            # Convert text files to CSV\n            df = pd.read_csv(file, header=None, index_col=None, encoding='utf-8')\n            df.to_csv(file.with_suffix('.csv'), index=False)\n            count += 1\n        elif ext == '.docx':\n            # Convert docx files to CSV\n            docx_file = docx.Document", "tokens": ["#", " Check", " if", " source", "_", "directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "source", "_", "directory", "}", " does", " not", " exist", "!", "\"", ")", "\n", "\n", "    ", "#", " Get", " list", " of", " files", " in", " the", " source", " directory", "\n", "    ", "source", "_", "files", " =", " [", "file", " for", " file", " in", " Path", "(", "source", "_", "directory", ")", ".", "iter", "dir", "()", " if", " file", ".", "is", "_", "file", "()", "]", "\n", "    ", "count", " =", " ", "0", "  ", "#", " To", " keep", " track", " of", " the", " number", " of", " files", " successfully", " converted", " to", " CS", "V", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " list", " of", " files", "\n", "    ", "for", " file", " in", " source", "_", "files", ":", "\n", "        ", "#", " Ext", "ract", " the", " extension", " of", " the", " file", "\n", "        ", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", "\n", "        ", "if", " ext", " ==", " '", ".", "txt", "':", "\n", "            ", "#", " Convert", " text", " files", " to", " CS", "V", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ",", " header", "=", "None", ",", " index", "_", "col", "=", "None", ",", " encoding", "='", "utf", "-", "8", "')", "\n", "            ", "df", ".", "to", "_", "csv", "(", "file", ".", "with", "_", "suff", "ix", "('", ".", "csv", "')", ",", " index", "=", "False", ")", "\n", "            ", "count", " +=", " ", "1", "\n", "        ", "elif", " ext", " ==", " '", ".", "doc", "x", "':", "\n", "            ", "#", " Convert", " doc", "x", " files", " to", " CS", "V", "\n", "            ", "doc", "x", "_", "file", " =", " doc", "x", ".", "Document"], "logprobs": [-1.2732598781585693, -0.9082789421081543, -0.21613462269306183, -0.9031029343605042, -1.7565053701400757, -0.01041064690798521, -0.06590679287910461, -0.24027858674526215, -0.0028729853220283985, -0.09792040288448334, -0.036262091249227524, -0.06931066513061523, -9.179073458653875e-06, -0.0001541257370263338, -0.0034002603497356176, -0.21344000101089478, -0.00020787939138244838, -0.0012882990995422006, -4.756337511935271e-05, -4.172238186583854e-05, -0.001956336200237274, -0.004421102814376354, -0.0006491222884505987, -0.028718169778585434, -0.002616674406453967, -4.637133679352701e-05, -2.5510462364763953e-05, -0.26330554485321045, -0.41524261236190796, -0.19593852758407593, -2.221240282058716, -0.8079726099967957, -0.0012886562617495656, -0.00014172980445437133, -0.00023552982020191848, -0.01533433049917221, -0.977150022983551, -0.0005714452126994729, -0.006462982390075922, -3.0037121772766113, -0.02261374518275261, -0.0002598424907773733, -0.00554475886747241, -0.1245841383934021, -0.0010737375123426318, -0.23092171549797058, -2.139230728149414, -2.0152640342712402, -0.002742817159742117, -0.5321070551872253, -0.5464646816253662, -1.601904273033142, -0.043148577213287354, -0.05632204934954643, -0.2316216230392456, -0.00042417587246745825, -0.6838147640228271, -0.0035470922011882067, -0.4190618395805359, -0.035212378948926926, -0.8132095336914062, -1.5595850944519043, -0.20529794692993164, -0.001474485034123063, -0.0013148480793461204, -0.6898673176765442, -0.0007817073492333293, -0.002035690238699317, -5.6503606174374e-05, -1.7046782886609435e-05, -0.001148755894973874, -0.00013207517622504383, -0.538327693939209, -0.0006286313873715699, -6.878139538457617e-05, -0.2491883486509323, -0.14273306727409363, -0.00028725311858579516, -0.18922457098960876, -3.576272320060525e-06, -0.00012981049076188356, -0.0011856677010655403, -0.0882466584444046, -0.00367881846614182, -2.4850573539733887, -3.9322404861450195, -0.12319877743721008, -0.01448907982558012, -0.0013690156629309058, -1.9608027935028076, -0.00014852374442853034, -2.569575786590576, -0.548425018787384, -0.04602063074707985, -0.0010084786918014288, -0.741468071937561, -0.19041189551353455, -0.0016037471359595656, -0.26764607429504395, -0.4006260931491852, -0.011720015667378902, -0.46142667531967163, -0.007988644763827324, -0.0020137999672442675, -0.08996762335300446, -0.12153357267379761, -0.00034624303225427866, -0.4696767330169678, -1.3175795078277588, -0.004274992737919092, -0.7718278765678406, -0.9290149211883545, -1.086667776107788, -0.013974085450172424, -0.24635356664657593, -0.7025431990623474, -0.0005420169327408075, -0.00439855270087719, -0.22375676035881042, -0.020355142652988434, -0.0009976415894925594, -0.0022691949270665646, -1.7046782886609435e-05, -7.4741430580616e-05, -0.0023639847058802843, -0.04168321192264557, -0.3458908200263977, -3.059422492980957, -0.0032322565093636513, -0.724061131477356, -1.9640514850616455, -0.6952534317970276, -0.009822015650570393, -0.047608908265829086, -0.1267555207014084, -0.00034278715611435473, -0.9666883945465088, -0.015289836563169956, -1.2305145263671875, -9.262132516596466e-05, -0.0010565895354375243, -0.0016916978638619184, -0.0006139777251519263, -2.7656173188006505e-05, -3.576278118089249e-07, -4.9828242481453344e-05, -0.038921233266592026, -1.5323847532272339, -0.0003992714046034962, -0.08829663693904877, -0.5011826753616333, -0.9697911739349365, -1.8719053268432617, -0.07071613520383835, -0.7979121208190918, -0.29969534277915955, -0.01796310767531395, -0.11442183703184128, -0.17287327349185944, -0.12252140790224075, -0.0036800061352550983, -0.7778893113136292, -1.044291377067566, -2.0566794872283936, -0.41900914907455444, -0.23324206471443176, -0.020624931901693344, -0.011761251837015152, -0.35532346367836, -0.0016386188799515367, -1.6322903633117676, -0.04032115265727043, -0.08416324853897095, -0.000386640167562291, -0.14901544153690338, -0.00018356545479036868, -1.5304604768753052, -0.005223910789936781, -0.15140663087368011, -0.1579001247882843, -1.061371088027954, -0.008075090125203133, -0.0535549558699131, -0.10616897791624069, -1.4024701118469238, -0.008162355050444603, -0.0055640824139118195, -0.006402457132935524, -0.1536296010017395, -0.6337863206863403, -1.4611469507217407, -0.1506224125623703, -0.06685911864042282, -0.05819833651185036, -0.011055995710194111, -0.3884214162826538, -0.07520362734794617, -0.05409310758113861, -0.2720504105091095, -0.03981517255306244, -0.0754687488079071, -1.1920928244535389e-07, -0.0008351890719495714, -0.015091996639966965, -2.2274789810180664, -0.03727441281080246, -0.7429724931716919, -5.1020273531321436e-05, -0.07597258687019348, -0.00023946279543451965, -0.0881037786602974, -0.011281628161668777, -0.003701265901327133, -0.026088282465934753, -0.005969315301626921, -0.3415386974811554, -0.007489933166652918, -0.03046817146241665, -0.7636206150054932, -0.03827205300331116, -0.054645758122205734, -0.2615864872932434, -0.004862507339566946, -0.001524953986518085, -0.00011216964776394889, -0.14990384876728058, -0.28443798422813416, -0.02879137359559536, -0.01027449406683445, -0.31124603748321533, -0.005720434710383415, -0.001383658149279654, -0.11218500882387161, -0.0046440837904810905, -0.050969500094652176, -0.005533378105610609, -0.0009844223968684673, -0.07390753924846649, -0.05893507972359657, -1.1343257427215576, -0.013456592336297035, -0.04138999432325363, -0.009343822486698627, -0.0073251002468168736, -0.00016723664884921163, -0.056689660996198654, -0.002330684568732977, -0.24606448411941528, -2.6523211002349854, -0.1684141457080841, -0.3626422584056854, -0.014774315059185028, -0.09169401228427887, -0.0017648849170655012, -0.0018018929986283183, -0.036060769110918045], "finish_reason": "length"}], "metrics": {"energy": 368.69342086982715, "energy_per_token": 1.4402086752727623, "time": 12.151906, "time_per_token": 0.0474683828125}}
{"outputs": [{"text": "# Check if source directory exists\n    source_directory = Path(source_directory).expanduser()\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Source directory {source_directory} not found.\")\n\n    # Check if target directory exists\n    target_directory = Path(target_directory).expanduser()\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # Get list of files in source directory\n    source_directory_files = [f for f in Path(source_directory).glob('*') if f.is_file()]\n\n    # Loop through each file\n    count = 0\n    for source_file in source_directory_files:\n\n        # Get file's name, extension, and path\n        file_name = source_file.name\n        extension = Path(source_file.name).suffix[1:]\n\n        # Convert file to CSV using the appropriate converter\n        if extension.lower() == \"txt\":\n            with open(source_file, 'r", "tokens": ["#", " Check", " if", " source", " directory", " exists", "\n", "    ", "source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", ".", "expand", "user", "()", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " target", " directory", " exists", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", ".", "expand", "user", "()", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Get", " list", " of", " files", " in", " source", " directory", "\n", "    ", "source", "_", "directory", "_", "files", " =", " [", "f", " for", " f", " in", " Path", "(", "source", "_", "directory", ")", ".", "glob", "('", "*", "')", " if", " f", ".", "is", "_", "file", "()", "]", "\n", "\n", "    ", "#", " Loop", " through", " each", " file", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " source", "_", "file", " in", " source", "_", "directory", "_", "files", ":", "\n", "\n", "        ", "#", " Get", " file", "'", "s", " name", ",", " extension", ",", " and", " path", "\n", "        ", "file", "_", "name", " =", " source", "_", "file", ".", "name", "\n", "        ", "extension", " =", " Path", "(", "source", "_", "file", ".", "name", ")", ".", "suff", "ix", "[", "1", ":]", "\n", "\n", "        ", "#", " Convert", " file", " to", " CS", "V", " using", " the", " appropriate", " converter", "\n", "        ", "if", " extension", ".", "lower", "()", " ==", " \"", "txt", "\":", "\n", "            ", "with", " open", "(", "source", "_", "file", ",", " '", "r"], "logprobs": [-1.2732598781585693, -0.9082789421081543, -0.21613462269306183, -0.9031029343605042, -0.22464503347873688, -0.018011698499321938, -0.16835330426692963, -0.002863119123503566, -2.8645761013031006, -0.014604334719479084, -0.43650415539741516, -0.41176000237464905, -0.27065524458885193, -0.0011972171487286687, -0.005352570675313473, -5.2927523938706145e-05, -8.821448318485636e-06, -0.0015393561916425824, -1.9189682006835938, -1.5017750263214111, -0.0019966682884842157, -0.0013329440262168646, -1.8122587203979492, -0.016045022755861282, -0.037397176027297974, -0.031848326325416565, -1.9499573707580566, -1.4185804502631072e-05, -0.000982278841547668, -0.005182522814720869, -0.29270443320274353, -9.881961887003854e-05, -0.017825521528720856, -3.266281055402942e-05, -3.659658250398934e-05, -0.008509566076099873, -0.007478337734937668, -0.0007443041540682316, -0.02453894354403019, -0.0023981165140867233, -6.97350042173639e-05, -2.932505594799295e-05, -0.3035353124141693, -0.3661348819732666, -0.23661696910858154, -0.4803871512413025, -0.03692888841032982, -0.990595817565918, -0.0031018974259495735, -0.000395815703086555, -0.0002549561613705009, -0.01929958164691925, -0.748017430305481, -0.002003092784434557, -0.38899731636047363, -0.017551463097333908, -0.00014351768186315894, -0.0029697385616600513, -0.12141259014606476, -0.0008553183870390058, -0.15330128371715546, -1.4385089874267578, -0.06337963789701462, -0.03695496916770935, -0.008251385763287544, -0.029650550335645676, -0.5882493853569031, -0.0007397775771096349, -0.112697534263134, -0.0013823487097397447, -0.006971321534365416, -0.0027045360766351223, -0.006800364702939987, -0.00023874769976828247, -0.0027270056307315826, -1.156323378381785e-05, -4.0531076592742465e-06, -0.00020203932945150882, -0.047989167273044586, -0.0021445390302687883, -2.8729025871143676e-05, -0.00025102324434556067, -0.032837897539138794, -0.05643269419670105, -0.16766643524169922, -0.05505956709384918, -0.032266709953546524, -0.0003680505615193397, -0.00010227633902104571, -0.0003909300430677831, -0.024349091574549675, -7.70062324590981e-05, -0.0021540552843362093, -1.4424220353248529e-05, -1.5735502529423684e-05, -0.004157353192567825, -0.006175721064209938, -0.0014649622607976198, -0.23700153827667236, -0.00036113892565481365, -0.12845703959465027, -3.9934315282152966e-05, -0.0004024887748528272, -0.0001736728590913117, -0.007769365329295397, -3.671578815556131e-05, -1.7881233361549675e-05, -0.0749763771891594, -0.05728781968355179, -0.12583261728286743, -0.0018499656580388546, -0.24482817947864532, -1.6265966892242432, -1.755462646484375, -0.0012430568458512425, -0.4846082329750061, -0.5425694584846497, -0.20647914707660675, -0.014916080981492996, -0.2576577961444855, -0.0004371640970930457, -0.5934634804725647, -0.002516914391890168, -1.6404411792755127, -1.0251998901367188, -0.6444814801216125, -0.015544797293841839, -1.2611626386642456, -1.1486862897872925, -0.39074936509132385, -0.0006428082706406713, -0.0005015069036744535, -3.397819757461548, -0.009388227015733719, -0.0028225842397660017, -1.5258672647178173e-05, -1.3708974620385561e-05, -0.000797192333266139, -0.0003392120997887105, -1.4080994129180908, -0.26677513122558594, -0.2174147665500641, -0.11439121514558792, -0.09610706567764282, -0.12146368622779846, -0.0027718241326510906, -0.023259306326508522, -9.536738616588991e-07, -9.07141511561349e-05, -0.0008827127167023718, -0.03082171082496643, -0.002290128031745553, -0.14426544308662415, -0.0002901133266277611, -0.13627265393733978, -2.721400737762451, -0.3232254385948181, -1.4650547504425049, -0.10055916756391525, -2.0988659858703613, -0.0009319015080109239, -2.3089890480041504, -0.04857495054602623, -0.003030471969395876, -0.004321997053921223, -0.025204535573720932, -0.012346506118774414, -0.017071092501282692, -1.295008659362793, -0.009369449689984322, -0.05219642072916031, -0.026220904663205147, -0.0033709153067320585, -2.4676019165781327e-05, -6.139089964563027e-05, -0.00016830935783218592, -1.311301275563892e-06, -0.00012087091454304755, -0.001924568903632462, -2.075472831726074, -0.0024272524751722813, -0.09112958610057831, -1.1441712379455566, -0.6191800236701965, -3.457613945007324, -0.0002343380037928, -0.9399685859680176, -2.137314558029175, -0.3958856463432312, -0.25838857889175415, -0.04183744639158249, -0.8353720307350159, -0.09795985370874405, -0.00038842763751745224, -0.9199709296226501, -0.007343797944486141, -0.0379016287624836, -0.6506088376045227, -0.20058640837669373, -9.536697689327411e-06, -0.004342530854046345, -0.0004993622424080968, -0.18736502528190613, -0.04005364701151848, -0.003546379506587982, -1.983676791191101, -0.008332488127052784, -2.641986846923828, -0.0010523025412112474, -0.38411638140678406, -4.100715523236431e-05, -0.010346348397433758, -0.8813174366950989, -0.03828708454966545, -0.0008800924406386912, -7.164221460698172e-05, -0.0008747326792217791, -0.0005411829333752394, -1.5443623065948486, -0.0019497923785820603, -0.005691750440746546, -0.35067102313041687, -1.1690843105316162, -0.0005951540661044419, -0.09270881861448288, -1.82744300365448, -0.6224851608276367, -0.3851112425327301, -0.08374267816543579, -0.0002644904307089746, -3.1226935386657715, -3.1536407470703125, -0.3554285764694214, -1.8432831764221191, -0.5407518148422241, -0.0017867805436253548, -0.11036834865808487, -0.031632136553525925, -2.1904654502868652, -0.049234386533498764, -0.0003734129713848233, -0.45604100823402405, -1.5305310487747192, -0.14934752881526947, -0.014190481044352055, -0.01107603870332241, -0.004633760545402765, -3.0678317546844482, -0.06867914646863937, -0.00219164346344769, -0.035702403634786606, -1.1444026313256472e-05, -0.03742106258869171, -0.03939821198582649, -0.5663072466850281, -0.0637047290802002], "finish_reason": "length"}], "metrics": {"energy": 338.48869256782507, "energy_per_token": 1.3222214553430667, "time": 12.110039, "time_per_token": 0.04730483984375}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        raise FileNotFoundError('Source directory not found')\n\n    file_count = 0\n\n    for file_path in Path(source_directory).glob('**/*.*'):\n        extension = file_path.suffix.lower()\n\n        if extension in ['.txt', '.docx', '.xlsx', '.csv']:\n            file_count += 1\n\n            if extension == '.docx':\n                doc = docx.Document(file_path)\n                text = '\\n'.join([paragraph.text for paragraph in doc.paragraphs])\n            elif extension == '.txt':\n                with open(file_path, 'r', encoding='utf-8') as file:\n                    text = file.read()\n            else:\n                # Open the file in read mode with binary encoding\n                with open(file_path, 'rb') as file:\n                    # Read the file data\n                    file_data = file.read()\n\n                    if extension == '.xlsx':\n", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Source", " directory", " not", " found", "')", "\n", "\n", "    ", "file", "_", "count", " =", " ", "0", "\n", "\n", "    ", "for", " file", "_", "path", " in", " Path", "(", "source", "_", "directory", ")", ".", "glob", "('", "**", "/*", ".", "*", "')", ":", "\n", "        ", "extension", " =", " file", "_", "path", ".", "suff", "ix", ".", "lower", "()", "\n", "\n", "        ", "if", " extension", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", ":", "\n", "            ", "file", "_", "count", " +=", " ", "1", "\n", "\n", "            ", "if", " extension", " ==", " '", ".", "doc", "x", "':", "\n", "                ", "doc", " =", " doc", "x", ".", "Document", "(", "file", "_", "path", ")", "\n", "                ", "text", " =", " '\\", "n", "'", ".", "join", "([", "paragraph", ".", "text", " for", " paragraph", " in", " doc", ".", "paragraph", "s", "])", "\n", "            ", "elif", " extension", " ==", " '", ".", "txt", "':", "\n", "                ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "                ", "    ", "text", " =", " file", ".", "read", "()", "\n", "            ", "else", ":", "\n", "                ", "#", " Open", " the", " file", " in", " read", " mode", " with", " binary", " encoding", "\n", "                ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "    ", "#", " Read", " the", " file", " data", "\n", "                ", "    ", "file", "_", "data", " =", " file", ".", "read", "()", "\n", "\n", "                ", "    ", "if", " extension", " ==", " '", ".", "x", "ls", "x", "':", "\n"], "logprobs": [-2.073333501815796, -0.11743085831403732, -0.10817014425992966, -3.5523738915799186e-05, -0.0004899493651464581, -0.008010641671717167, -1.1351251602172852, -0.009040257893502712, -0.00022635281493421644, -0.030146431177854538, -0.00021050144277978688, -6.472854875028133e-05, -0.0035533879417926073, -0.04279514402151108, -0.0012380562257021666, -0.042473576962947845, -0.0034405342303216457, -7.56950321374461e-05, -3.45700973412022e-05, -1.3648995161056519, -1.0059794187545776, -0.09004966169595718, -0.6494112014770508, -0.003682143986225128, -1.0232042074203491, -0.0034854395780712366, -0.318729043006897, -0.000756216119043529, -2.434723138809204, -0.010462318547070026, -0.7458993196487427, -0.024420056492090225, -0.006335768382996321, -0.0008992680232040584, -0.06165461987257004, -0.8253608345985413, -0.00028046013903804123, -0.31707054376602173, -0.8158196210861206, -0.5782036185264587, -1.005429983139038, -0.019589178264141083, -0.06673991680145264, -0.0006328010931611061, -0.0013974672183394432, -4.4225667807040736e-05, -1.811964830267243e-05, -0.000402250443585217, -1.8954096958623268e-05, -1.3372235298156738, -0.24327269196510315, -1.2429428100585938, -0.0035938932560384274, -0.3864905834197998, -1.531844139099121, -0.022420614957809448, -0.0006322053959593177, -0.03099912777543068, -0.04424040764570236, -3.2609827518463135, -0.01035614125430584, -0.44225218892097473, -7.486063259420916e-05, -0.00011121608258690685, -0.00010764019680209458, -0.035513971000909805, -0.00017021637177094817, -0.7759848833084106, -0.30372878909111023, -0.06901776045560837, -0.08098940551280975, -0.8427066206932068, -0.00017188502533826977, -0.12092775106430054, -0.09012483060359955, -0.36600685119628906, -0.5084758996963501, -0.018819700926542282, -0.055291954427957535, -0.012551010586321354, -7.021180499577895e-05, -0.0023832509759813547, -0.0013800868764519691, -0.0991060882806778, -0.012272675521671772, -0.03954432159662247, -0.00010072677832795307, -0.0016400470631197095, -0.0017563169822096825, -0.036344632506370544, -0.00208850996568799, -0.00259301345795393, -0.008799112401902676, -0.00011598391574807465, -0.0011261318577453494, -0.0006245807744562626, -0.03543228283524513, -0.05983702465891838, -0.010827128775417805, -0.007740503177046776, -0.00868625845760107, -1.555568814277649, -0.02863742969930172, -1.523569107055664, -0.0031161580700427294, -0.12962080538272858, -9.524368942948058e-05, -0.009649774059653282, -1.3155919313430786, -0.011833823285996914, -1.303033471107483, -0.8423435688018799, -0.07798851281404495, -0.005478843115270138, -0.0006030171643942595, -2.197553873062134, -0.004376120399683714, -0.02103671431541443, -0.012186475098133087, -0.0008033862104639411, -1.1321569681167603, -0.7132748961448669, -0.049143481999635696, -0.003140163142234087, -0.0021400186233222485, -0.036112166941165924, -0.0019066027598455548, -0.25174906849861145, -0.0003178806509822607, -6.103329360485077e-05, -0.056470438838005066, -0.0186725202947855, -0.07780788093805313, -0.7928715944290161, -0.22760707139968872, -0.9936097264289856, -0.006503370124846697, -0.018094120547175407, -0.000129691296024248, -6.007967749610543e-05, -0.15339934825897217, -0.8013684749603271, -0.0005840741214342415, -0.0013977054040879011, -0.014398721978068352, -0.000328367663314566, -0.0006150499684736133, -0.0013548490824177861, -0.00384187838062644, -0.0059780846349895, -8.34430247778073e-05, -0.005411855410784483, -0.015315898694097996, -0.8954233527183533, -0.7552923560142517, -0.013345674611628056, -0.10307969897985458, -0.0007375142886303365, -0.0004469349514693022, -1.9950809478759766, -0.006864181254059076, -0.0011188682401552796, -0.0004027270770166069, -0.039948735386133194, -0.006246922072023153, -0.000774917658418417, -0.005332294851541519, -1.4305104514278355e-06, -1.5020257706055418e-05, -0.056330952793359756, -0.07629726082086563, -0.02832251600921154, -0.4486500322818756, -0.00013326710904948413, -0.00797066930681467, -0.02427288517355919, -0.050536543130874634, -0.08727756887674332, -0.00904734618961811, -0.022166933864355087, -0.00019667598826345056, -0.446719229221344, -0.004599705338478088, -0.001176023157313466, -6.794698856538162e-05, -0.0005878866068087518, -0.012803022749722004, -0.0004489606071729213, -0.011946087703108788, -0.00013302871957421303, -1.9788545614574105e-05, -0.004390006884932518, -0.018875502049922943, -0.02613287977874279, -1.935736060142517, -0.00010764019680209458, -0.08466886729001999, -0.0006356602534651756, -3.226783275604248, -2.449706554412842, -0.6960834264755249, -0.22643204033374786, -1.5541483163833618, -1.120002031326294, -0.17666274309158325, -1.7183163166046143, -3.126677989959717, -1.7948774099349976, -0.8441502451896667, -0.0002037079248111695, -0.0570337139070034, -0.002114086179062724, -0.0006728292210027575, -0.005258775316178799, -0.00028951745480298996, -1.7881377516459906e-06, -0.00029797881143167615, -0.017939221113920212, -0.012447291985154152, -0.010441083461046219, -0.001488054753281176, -0.021934181451797485, -0.0025007424410432577, -0.000409161759307608, -0.008824753575026989, -0.0007677706307731569, -0.5654739737510681, -1.6549789905548096, -0.12314576655626297, -0.5119372606277466, -3.0596532821655273, -1.2556700706481934, -0.000771939754486084, -4.792098479811102e-05, -0.6091432571411133, -0.004428579472005367, -0.05887629836797714, -0.0014230611268430948, -0.004308347124606371, -0.0003703146940097213, -8.594620157964528e-05, -0.0026265429332852364, -0.0026480630040168762, -0.6765086054801941, -0.022317098453640938, -0.7624794244766235, -1.7238378524780273, -0.09227399528026581, -0.018582774326205254, -0.0037639739457517862, -0.0011754278093576431, -0.23280267417430878, -0.00013565097469836473, -0.003142658853903413, -0.02103811502456665, -0.013095328584313393], "finish_reason": "length"}], "metrics": {"energy": 346.96431408691393, "energy_per_token": 1.3553293519020075, "time": 12.303825, "time_per_token": 0.04806181640625}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        raise FileNotFoundError(f\"Directory '{source_directory}' not found.\")\n\n    counter = 0\n\n    for file in Path(source_directory).rglob(r'*.txt'):\n        # Save CSV with content from text file\n        # pd.read_text(file.name, encoding=\"utf-8\").to_csv(f\"{target_directory}/{file.stem}.csv\")\n\n        # Convert to CSV using Python-docx library\n        doc = docx.Document(file.resolve())\n        text = \" \".join([p.text for p in doc.paragraphs])\n        with open(f\"{target_directory}/{file.stem}.csv\", mode='w', encoding='utf-8') as csv_file:\n            writer = csv.writer(csv_file, delimiter=' ')\n            writer.writerow([text])\n            counter += 1\n\n    for file in Path(source_directory).rglob(r'*.docx", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "source", "_", "directory", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "counter", " =", " ", "0", "\n", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "directory", ")", ".", "rg", "lob", "(", "r", "'", "*", ".", "txt", "')", ":", "\n", "        ", "#", " Save", " CS", "V", " with", " content", " from", " text", " file", "\n", "        ", "#", " pd", ".", "read", "_", "text", "(", "file", ".", "name", ",", " encoding", "=", "\"", "utf", "-", "8", "\"", ")", ".", "to", "_", "csv", "(", "f", "\"", "{", "target", "_", "directory", "}/{", "file", ".", "stem", "}", ".", "csv", "\"", ")", "\n", "\n", "        ", "#", " Convert", " to", " CS", "V", " using", " Python", "-", "doc", "x", " library", "\n", "        ", "doc", " =", " doc", "x", ".", "Document", "(", "file", ".", "resolve", "())", "\n", "        ", "text", " =", " \"", " \"", ".", "join", "([", "p", ".", "text", " for", " p", " in", " doc", ".", "paragraph", "s", "])", "\n", "        ", "with", " open", "(", "f", "\"", "{", "target", "_", "directory", "}/{", "file", ".", "stem", "}", ".", "csv", "\"", ",", " mode", "='", "w", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " c", "sv", "_", "file", ":", "\n", "            ", "writer", " =", " c", "sv", ".", "writer", "(", "csv", "_", "file", ",", " del", "im", "iter", "='", " '", ")", "\n", "            ", "writer", ".", "writer", "ow", "([", "text", "])", "\n", "            ", "counter", " +=", " ", "1", "\n", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "directory", ")", ".", "rg", "lob", "(", "r", "'", "*", ".", "doc", "x"], "logprobs": [-2.073333501815796, -0.11743085831403732, -0.10817014425992966, -3.5523738915799186e-05, -0.0004899493651464581, -0.008010641671717167, -1.1351251602172852, -0.009040257893502712, -0.00022635281493421644, -0.030146431177854538, -0.00021050144277978688, -6.472854875028133e-05, -0.0035533879417926073, -0.04279514402151108, -0.0012380562257021666, -0.042473576962947845, -0.0034405342303216457, -7.56950321374461e-05, -3.45700973412022e-05, -0.4120129346847534, -0.33512672781944275, -0.24144253134727478, -1.7678190469741821, -1.4574192762374878, -0.0012653210433200002, -0.002283824374899268, -0.00026055757189169526, -0.00014053787162993103, -0.0023317548912018538, -0.5743634104728699, -0.002929921029135585, -0.3293023705482483, -0.029919462278485298, -0.00013612773909699172, -0.005602254066616297, -0.25567758083343506, -0.0007381098694168031, -3.3828632831573486, -0.06171402335166931, -0.0038283406756818295, -0.0015220972709357738, -0.06233853101730347, -0.7793068885803223, -0.0003669780562631786, -0.3553255498409271, -1.0295251607894897, -0.8544760942459106, -0.36429449915885925, -0.0009944260818883777, -0.001597201102413237, -5.8887653722194955e-05, -1.3589766240329482e-05, -0.0007453762227669358, -2.288792165927589e-05, -1.266674280166626, -0.0032644574530422688, -0.5041420459747314, -2.770944118499756, -0.9975871443748474, -0.28568023443222046, -0.30707255005836487, -0.7765898704528809, -0.11632974445819855, -0.02143864333629608, -0.054354287683963776, -0.017036519944667816, -2.711594581604004, -5.074145317077637, -3.641709089279175, -0.022142214700579643, -2.4947826862335205, -4.323878288269043, -1.6494325399398804, -1.9596762657165527, -0.46412143111228943, -0.395784854888916, -0.009797108359634876, -3.560089111328125, -4.043632507324219, -0.021609684452414513, -0.058745913207530975, -0.0019489595433697104, -0.9662498831748962, -0.6548018455505371, -0.33012327551841736, -2.231583595275879, -0.8541327118873596, -0.9289759993553162, -0.2867281138896942, -1.5240434408187866, -0.23110149800777435, -0.17374347150325775, -0.20951764285564423, -0.040176987648010254, -0.044616930186748505, -0.19001440703868866, -0.33858799934387207, -0.04375603422522545, -2.074220174108632e-05, -0.0018072477541863918, -0.1028541699051857, -1.0834294557571411, -0.34696176648139954, -0.025134671479463577, -0.5162580609321594, -0.0035936555359512568, -0.007725006900727749, -0.17779771983623505, -0.081227608025074, -0.022856593132019043, -0.327884316444397, -0.04230709746479988, -0.00047994061606004834, -0.0043462105095386505, -0.0008297099848277867, -0.5676177740097046, -0.014125837944447994, -1.7039146423339844, -0.0234978049993515, -0.710782527923584, -1.9468885660171509, -1.9877551794052124, -0.7697656154632568, -0.0027626703958958387, -1.1558185815811157, -2.128889560699463, -0.2608058750629425, -0.6830710172653198, -0.01381995901465416, -1.6175862550735474, -0.11761008948087692, -0.003942456562072039, -0.6446446180343628, -0.15190210938453674, -0.011336201801896095, -0.0012674640165641904, -0.0011595914838835597, -0.029995586723089218, -0.0023976408410817385, -0.21059586107730865, -0.8794992566108704, -2.974928617477417, -0.05183621123433113, -0.05180644243955612, -0.06124947592616081, -1.1468021869659424, -0.10401039570569992, -1.024345874786377, -1.7045118808746338, -0.001802606973797083, -7.807903602952138e-05, -0.49866941571235657, -1.5528008937835693, -0.004807105287909508, -0.0073410761542618275, -0.04513712599873543, -0.00019905969384126365, -5.638440416078083e-05, -0.0014256800059229136, -0.0028909340035170317, -0.004769140388816595, -0.0007432320853695273, -0.010217267088592052, -0.04437725991010666, -0.08658087998628616, -1.6488817930221558, -0.08295311778783798, -0.004259086679667234, -0.0540609210729599, -0.0180231723934412, -0.0017022894462570548, -0.0288466215133667, -0.00010168035078095272, -3.790783375734463e-05, -0.014992534182965755, -0.011807788163423538, -0.0017663128674030304, -0.05429873615503311, -0.012337792664766312, -0.00040951924165710807, -0.006612917874008417, -0.00016056202002801, -0.0008042200352065265, -1.9815455675125122, -0.6745200753211975, -0.06574606895446777, -0.20707882940769196, -0.00019751029321923852, -0.17331081628799438, -0.2496296912431717, -0.046818383038043976, -0.04892896115779877, -0.0012861560098826885, -0.17130199074745178, -0.0008615119731985033, -1.2911896705627441, -0.008294775150716305, -0.21557322144508362, -0.015367904677987099, -0.0007078525959514081, -0.0016696811653673649, -0.00676188338547945, -2.570150852203369, -0.0023617250844836235, -0.07294017821550369, -0.00013612773909699172, -0.0024792193435132504, -0.01448191236704588, -3.6000557884108275e-05, -0.0014029431622475386, -8.618460560683161e-05, -5.006777428206988e-06, -0.9254608154296875, -0.21011163294315338, -0.0002057340752799064, -8.344646857949556e-07, -0.16382433474063873, -2.192885637283325, -0.9437333345413208, -0.007589908316731453, -0.007394326385110617, -0.045323871076107025, -0.0001081169830285944, -0.0016463547945022583, -0.07770806550979614, -0.937337338924408, -0.3119052052497864, -0.02562280371785164, -0.011407743208110332, -0.6656500101089478, -0.11369764059782028, -0.01127608772367239, -0.003989239223301411, -7.807903602952138e-05, -0.003420100547373295, -0.15777990221977234, -0.06119834631681442, -0.9405112266540527, -0.006385281682014465, -0.0035999510437250137, -0.0048837424255907536, -0.00028081765049137175, -0.0007780147134326398, -0.00011622230522334576, -4.172316494077677e-06, -7.533743337262422e-05, -1.9192511899746023e-05, -0.023769192397594452, -4.255681051290594e-05, -0.013466354459524155, -0.003309370717033744, -0.009354215115308762, -0.0022902467753738165, -0.0018995827995240688, -0.2724364995956421, -0.015028821304440498], "finish_reason": "length"}], "metrics": {"energy": 347.9198982639309, "energy_per_token": 1.3590621025934801, "time": 12.125635, "time_per_token": 0.04736576171875}}
{"outputs": [{"text": "csv_files = 0\n    for root, dirs, files in os.walk(source_directory):\n        for file_name in files:\n            file_path = os.path.join(root, file_name)\n            if file_name.endswith('.txt') or file_name.endswith('.docx') or \\\n                    file_name.endswith('.xlsx') or file_name.endswith('.csv'):\n                if file_name.endswith('.txt'):\n                    with open(file_path, 'r') as file:\n                        text = file.read()\n                elif file_name.endswith('.docx'):\n                    docx_doc = docx.Document(file_path)\n                    text = '\\n'.join([\n                        paragraph.text\n                        for paragraph in docx_doc.paragraphs\n                    ])\n                elif file_name.endswith('.xlsx'):\n                    wb = load_workbook(file_path)\n                    sheet_name = wb", "tokens": ["csv", "_", "files", " =", " ", "0", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "directory", "):", "\n", "        ", "for", " file", "_", "name", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", "_", "name", ")", "\n", "            ", "if", " file", "_", "name", ".", "end", "sw", "ith", "('", ".", "txt", "')", " or", " file", "_", "name", ".", "end", "sw", "ith", "('", ".", "doc", "x", "')", " or", " \\", "\n", "                ", "    ", "file", "_", "name", ".", "end", "sw", "ith", "('", ".", "x", "ls", "x", "')", " or", " file", "_", "name", ".", "end", "sw", "ith", "('", ".", "csv", "')", ":", "\n", "                ", "if", " file", "_", "name", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "    ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " file", ":", "\n", "                ", "        ", "text", " =", " file", ".", "read", "()", "\n", "                ", "elif", " file", "_", "name", ".", "end", "sw", "ith", "('", ".", "doc", "x", "')", ":", "\n", "                ", "    ", "doc", "x", "_", "doc", " =", " doc", "x", ".", "Document", "(", "file", "_", "path", ")", "\n", "                ", "    ", "text", " =", " '\\", "n", "'", ".", "join", "([", "\n", "                ", "        ", "paragraph", ".", "text", "\n", "                ", "        ", "for", " paragraph", " in", " doc", "x", "_", "doc", ".", "paragraph", "s", "\n", "                ", "    ", "])", "\n", "                ", "elif", " file", "_", "name", ".", "end", "sw", "ith", "('", ".", "x", "ls", "x", "')", ":", "\n", "                ", "    ", "wb", " =", " load", "_", "work", "book", "(", "file", "_", "path", ")", "\n", "                ", "    ", "sheet", "_", "name", " =", " w", "b"], "logprobs": [-3.72837233543396, -0.021269910037517548, -1.6846964359283447, -0.44647201895713806, -1.1368929147720337, -0.002119558397680521, -0.11826050281524658, -0.33338719606399536, -1.894283413887024, -1.7078664302825928, -0.0022533759474754333, -0.33748236298561096, -0.0003143055073451251, -0.0003694805200211704, -0.006191359367221594, -0.0022025867365300655, -0.005355535075068474, -2.622600959512056e-06, -9.381330892210826e-05, -0.0020291469991207123, -0.01836896687746048, -7.60526381782256e-05, -7.247662142617628e-05, -0.051539842039346695, -0.032232776284217834, -0.005096776410937309, -0.21989846229553223, -0.283748060464859, -1.7121915817260742, -0.08274363726377487, -0.00197001826018095, -0.005413515493273735, -0.00018475732940714806, -0.0059450226835906506, -0.006121457554399967, -0.9416495561599731, -0.03806505352258682, -0.11312175542116165, -0.006581061519682407, -0.26944881677627563, -7.879423355916515e-05, -8.570780482841656e-05, -0.0005528590409085155, -0.0010912423022091389, -0.00012540031457319856, -0.003011693712323904, -0.00025018901214934886, -0.0014811508590355515, -3.528532761265524e-05, -1.1324817933200393e-05, -0.00019727191829588264, -0.009979120455682278, -0.04229281470179558, -0.6458697319030762, -0.426210880279541, -0.00036030475166626275, -0.3304814100265503, -0.01603059284389019, -0.15670952200889587, -1.9788545614574105e-05, 0.0, -0.43178874254226685, -0.05066176876425743, -0.12340500950813293, -0.0012174582807347178, -0.427892804145813, -0.02984275296330452, -2.9802276912960224e-06, -0.0004127365828026086, -0.00129270413890481, -0.002732117660343647, -2.7179348762729205e-05, -4.768370445162873e-07, -0.012547479011118412, -0.0017767847748473287, -0.07459363341331482, -0.00593696441501379, -0.0008114859228953719, -0.16822756826877594, -2.197479009628296, -3.0517112463712692e-05, -0.3478046953678131, -0.21705232560634613, -0.0029113786295056343, -6.794906312279636e-06, -7.533743337262422e-05, -0.00013183678674977273, -0.0006683023530058563, -3.302042750874534e-05, -3.576278118089249e-07, -0.002811172278597951, -0.002206987701356411, -0.04898583143949509, -0.0007413261337205768, -0.0037754937075078487, -0.00010096516780322418, -0.025939613580703735, -0.003125902730971575, -4.768370445162873e-07, -8.83301836438477e-05, -0.00026913834153674543, -0.0006287504802457988, -2.4914430468925275e-05, -1.9073468138230965e-06, -0.002090889262035489, -0.0011080323019996285, -0.040438391268253326, -0.000348268891684711, -0.03452393785119057, -0.004094670061022043, -0.016035638749599457, -1.5617659091949463, -0.4249507784843445, -0.00043025295599363744, -0.021392321214079857, -0.027518795803189278, -0.08217226713895798, -1.3828182090946939e-05, 0.0, -0.02003457210958004, -0.012532174587249756, -0.9323912858963013, -0.0018924438627436757, -0.08345243334770203, -0.012727225199341774, -0.00086198840290308, -0.0013636585790663958, -1.5655438899993896, -0.004110697191208601, -0.002027838258072734, -0.0054257274605333805, -0.0002320735511602834, -0.003777750302106142, -0.043959349393844604, -0.08714678883552551, -0.11579636484384537, -1.002225637435913, -0.0009280903614126146, -0.5591464042663574, -0.01728576421737671, -0.003276220755651593, -0.0003844952443614602, -0.00046969347749836743, -1.3398531675338745, -0.11271883547306061, -0.03445253148674965, -0.00016366096679121256, -4.8040190449682996e-05, -0.011606195010244846, -0.018403492867946625, -0.02310963347554207, -1.6900997161865234, -0.004677426069974899, -0.001032891683280468, -0.000506511190906167, -0.00025781645672395825, -0.00021681819634977728, -4.0531076592742465e-06, -1.1920928244535389e-07, -0.015210352838039398, -0.0012226970866322517, -0.06134578958153725, -0.0015885126776993275, -6.782778655178845e-05, -0.06107005849480629, -0.0024557928554713726, -0.0005933669744990766, -0.0013323486782610416, -0.22093689441680908, -2.074693202972412, -0.05879593640565872, -1.9419689178466797, -0.010983250103890896, -0.015138847753405571, -0.0006817638641223311, -0.0010099078062921762, -0.030224736779928207, -0.0002810560108628124, -0.005464141722768545, -0.0008045773720368743, -0.004361996427178383, -0.0028885568026453257, -0.00952591747045517, -0.0013043713988736272, -0.00020287363440729678, -0.0868566632270813, -0.04309697076678276, -1.409530520439148, -0.007980957627296448, -0.031422488391399384, -0.0006522196927107871, -6.41325386823155e-05, -0.2641076445579529, -3.8402915000915527, -3.2305197237292305e-05, -0.0040615457110106945, -1.0539222955703735, -0.001957169035449624, -0.002008446492254734, -0.5160252451896667, -2.6464111215318553e-05, -0.0008027906878851354, -0.0009049849468283355, -0.00990960095077753, -0.0038865283131599426, -0.002800592454150319, -1.0013530300057027e-05, -0.00017009719158522785, -1.4543427823809907e-05, -0.0025689953472465277, -0.0021766559220850468, -0.00011634149996098131, -0.013103917241096497, -6.69933797325939e-05, -0.16166014969348907, -0.0007726544863544405, -0.01981441304087639, -0.008534269407391548, -0.04890444129705429, -0.000880449719261378, -2.9802276912960224e-06, -0.00018904806347563863, -4.053033626405522e-05, -7.450303382938728e-05, -1.8000440832111053e-05, -1.1920928244535389e-07, -0.004420153331011534, -0.0010502781951799989, -0.02492365427315235, -6.425174069590867e-05, -0.00016890530241653323, -3.0636318115284666e-05, -0.0911378562450409, -0.0019911956042051315, -0.0006017066189087927, -0.0003036991402041167, -1.3852266073226929, -0.007884097285568714, -1.2204535007476807, -0.0028708456084132195, -0.00019214690837543458, -0.00022551853908225894, -0.0006283930852077901, -0.13624809682369232, -0.0011719746980816126, -0.0023329441901296377, -0.267259418964386, -0.006927638314664364, -0.0014732946874573827, -0.0003010773507412523, -1.4449729919433594, -2.4743735790252686, -0.835146427154541, -0.019757026806473732, -0.23134319484233856, -1.5020257706055418e-05], "finish_reason": "length"}], "metrics": {"energy": 335.0462462749482, "energy_per_token": 1.3087743995115164, "time": 12.1107, "time_per_token": 0.047307421875}}
{"outputs": [{"text": "files = list(Path(source_directory).glob('*.txt'))\n    files.extend(Path(source_directory).glob('*.docx'))\n    files.extend(Path(source_directory).glob('*.xlsx'))\n    files.extend(Path(source_directory).glob('*.csv'))\n\n    file_counter = 0\n    for file_path in files:\n        try:\n            if file_path.suffix == '.docx':\n                docx_file = docx.Document(file_path)\n                text = ' '.join(paragraph.text for paragraph in docx_file.paragraphs)\n\n                with open(f\"{target_directory}/{file_path.stem}.csv\", 'w', encoding='utf-8') as csv_file:\n                    csv_writer = csv.writer(csv_file, delimiter=',', quotechar='\"', quoting=csv.QUOTE_NONNUMERIC)\n                    csv_writer.writerow(['Text'])\n                    csv_writer.writerow([text", "tokens": ["files", " =", " list", "(", "Path", "(", "source", "_", "directory", ")", ".", "glob", "('", "*", ".", "txt", "'))", "\n", "    ", "files", ".", "extend", "(", "Path", "(", "source", "_", "directory", ")", ".", "glob", "('", "*", ".", "doc", "x", "'))", "\n", "    ", "files", ".", "extend", "(", "Path", "(", "source", "_", "directory", ")", ".", "glob", "('", "*", ".", "x", "ls", "x", "'))", "\n", "    ", "files", ".", "extend", "(", "Path", "(", "source", "_", "directory", ")", ".", "glob", "('", "*", ".", "csv", "'))", "\n", "\n", "    ", "file", "_", "counter", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " files", ":", "\n", "        ", "try", ":", "\n", "            ", "if", " file", "_", "path", ".", "suff", "ix", " ==", " '", ".", "doc", "x", "':", "\n", "                ", "doc", "x", "_", "file", " =", " doc", "x", ".", "Document", "(", "file", "_", "path", ")", "\n", "                ", "text", " =", " '", " '", ".", "join", "(", "paragraph", ".", "text", " for", " paragraph", " in", " doc", "x", "_", "file", ".", "paragraph", "s", ")", "\n", "\n", "                ", "with", " open", "(", "f", "\"", "{", "target", "_", "directory", "}/{", "file", "_", "path", ".", "stem", "}", ".", "csv", "\"", ",", " '", "w", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " c", "sv", "_", "file", ":", "\n", "                ", "    ", "csv", "_", "writer", " =", " c", "sv", ".", "writer", "(", "csv", "_", "file", ",", " del", "im", "iter", "='", ",", "'", ",", " quote", "char", "='", "\"", "'", ",", " quoting", "=", "csv", ".", "QU", "OTE", "_", "NON", "NUM", "ER", "IC", ")", "\n", "                ", "    ", "csv", "_", "writer", ".", "writer", "ow", "(['", "Text", "'])", "\n", "                ", "    ", "csv", "_", "writer", ".", "writer", "ow", "([", "text"], "logprobs": [-3.236755132675171, -1.0756727457046509, -2.002493381500244, -0.26302123069763184, -0.18675123155117035, -0.003914196044206619, -0.011754418723285198, -6.782778655178845e-05, -6.0794889577664435e-05, -0.0032093231566250324, -0.0002774807217065245, -1.0518481731414795, -0.512612521648407, -0.38657066226005554, -0.4649679660797119, -0.6474865674972534, -0.09057528525590897, -0.6103070974349976, -0.0797746554017067, -1.0210596323013306, -1.0903998613357544, -0.01607927680015564, -0.002248261356726289, -1.327226161956787, -0.0003505330823827535, -0.0007232195930555463, -6.12716976320371e-05, -4.410734163684538e-06, -5.411955135059543e-05, -0.0003116837178822607, -0.003335153218358755, -0.006515095010399818, -0.0035802333150058985, -0.0011730464175343513, -0.07116153836250305, -0.00609847204759717, -0.0006921279709786177, -0.005897501949220896, -0.002405965467914939, -0.006866667419672012, -0.0009220162755809724, -0.0004687402688432485, -0.00037472377880476415, -0.0008139872807078063, -2.5510462364763953e-05, -0.00011514954530866817, -1.5020257706055418e-05, -1.5497195136049413e-06, -2.2649508537142538e-05, -3.290122185717337e-05, -0.0003292018664069474, -0.0010044296504929662, -0.00036864637513644993, -0.0007058274932205677, -0.036200813949108124, -0.0004758894501719624, -0.00541493808850646, -0.0002903516869992018, -0.0009218971827067435, -0.01838230900466442, -0.013240743428468704, -0.0035735813435167074, -0.000525217386893928, -0.00029940891545265913, -0.0004011779965367168, -2.634490556374658e-05, -6.23445157543756e-05, -1.8000440832111053e-05, -2.3841830625315197e-06, -2.098061486321967e-05, -1.4305104514278355e-06, -0.00023195437097456306, -0.0005571481888182461, -0.00036483307485468686, -0.0004698126285802573, -0.017453767359256744, -0.0001829695247579366, -0.0017294225981459022, -0.5066430568695068, -0.0002369599969824776, -2.701629161834717, -0.012843625620007515, -2.0928311347961426, -0.030486324802041054, -0.0167800635099411, -0.01342013105750084, -0.023710520938038826, -0.3727729618549347, -0.2202266901731491, -0.1852489560842514, -2.2296078205108643, -0.29633820056915283, -0.0030958366114646196, -0.00525640370324254, -0.0003586364327929914, -0.0035213150549679995, -0.01813298650085926, -1.233995795249939, -0.00014578233822248876, -0.002460430609062314, -0.0040146480314433575, -0.8935056924819946, -0.1405349224805832, -0.00039319414645433426, -0.0012279358925297856, -0.0010682597057893872, -0.19795113801956177, -7.83174327807501e-05, -0.6655473709106445, -0.07063527405261993, -0.002288700779899955, -2.838754177093506, -0.009160986170172691, -0.03929426148533821, -0.015925122424960136, -0.0016872945707291365, -0.7372795939445496, -1.7333533763885498, -0.1078343614935875, -0.5855892300605774, -0.03184659406542778, -0.08624377846717834, -0.0014553203945979476, -0.007085908204317093, -0.03310699388384819, -0.001096005435101688, -0.2588442862033844, -0.0007314390386454761, -0.0002307625545654446, -0.06963050365447998, -0.03691671043634415, -0.02629220299422741, -1.0730626583099365, -0.419251948595047, -1.3500347137451172, -0.14977413415908813, -0.0009028411004692316, -0.0002181292074965313, -1.0630316734313965, -0.8855260610580444, -0.0013312773080542684, -0.0004972175229340792, -0.04397543519735336, -0.0004963834653608501, -0.0010792152024805546, -0.0024290361907333136, -1.2874520507466514e-05, -0.00014745102089364082, -5.5549986427649856e-05, -0.0019502682844176888, -0.0040146480314433575, -5.543078441405669e-05, -0.008096492849290371, -0.01662789285182953, -2.884674310684204, -0.4579637348651886, -2.2757744789123535, -0.14714990556240082, -0.03495306149125099, -1.304171085357666, -1.2240921258926392, -0.017662500962615013, -0.6825015544891357, -7.784063927829266e-05, -0.0005212855176068842, -0.27237221598625183, -0.08598402142524719, -0.0002489972102921456, -0.002858245512470603, -0.008043871261179447, -0.3074430823326111, -0.05177056044340134, -0.0007845661020837724, -0.016293810680508614, -0.0007861146004870534, -0.0005053196800872684, -0.416211873292923, -0.05896193906664848, -0.5061755776405334, -0.0010888606775552034, -0.28264036774635315, -0.07668741047382355, -0.0744328573346138, -0.08318021148443222, -0.007858668453991413, -0.22179366648197174, -0.0008542464347556233, -0.5843703746795654, -0.0011717366287484765, -0.025554710999131203, -0.0028693003114312887, -0.0006258912617340684, -0.0014079429674893618, -0.0016232660273090005, -0.003051626728847623, -0.3615192174911499, -0.029561204835772514, -0.3577440083026886, -0.0006205302197486162, -0.09665224701166153, -0.00020776021119672805, -0.0002195594133809209, -0.02422238700091839, -1.1920858014491387e-05, -0.0018635302549228072, -2.7417760065873154e-05, -7.629365427419543e-06, -0.496659517288208, -0.12179165333509445, -0.00020811776630580425, -7.152555099310121e-07, -0.054903294891119, -0.49015629291534424, -0.44976189732551575, -0.00014888131408952177, -0.11333166807889938, -5.2689116273541003e-05, -0.0029439465142786503, -0.07020174711942673, -0.16129620373249054, -4.446407547220588e-05, -0.04722793772816658, -0.0002734287118073553, -0.00010573305189609528, -5.054346183896996e-05, -0.000865561596583575, -0.0012162677012383938, -1.6689286894688848e-06, -0.9923328757286072, -0.008197826333343983, -9.738924563862383e-05, -0.00021491125517059118, -0.2265118807554245, -0.0014018717920407653, -0.014023693278431892, -0.00017581824795342982, -0.02598142810165882, -3.182837463100441e-05, -0.0002817710628733039, -2.9801878554280847e-05, -0.0008173224050551653, -0.022272564470767975, -0.17313949763774872, -0.02674936316907406, -0.032825324684381485, -0.0065117790363729, -0.0017422748496755958, -5.876845170860179e-05, -0.004562088754028082, -2.253030106658116e-05, -6.341733387671411e-05, -5.829164365422912e-05, -0.0002847504511009902, -0.04924323782324791, -0.011880592443048954, -0.004966067150235176], "finish_reason": "length"}], "metrics": {"energy": 343.3065504741671, "energy_per_token": 1.3410412127897153, "time": 12.098729, "time_per_token": 0.04726066015625}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        raise FileNotFoundError(f\"{source_directory} is not a valid path\")\n    converted_files = 0\n    for file in os.listdir(source_directory):\n        if file.endswith(('.txt', '.docx', '.xlsx', '.csv')):\n            source = os.path.join(source_directory, file)\n            target = os.path.join(target_directory, f\"{file.split('.')[0]}.csv\")\n            if os.path.isfile(source):\n                if os.path.isfile(target):\n                    os.remove(target)\n                try:\n                    if file.endswith(\".txt\"):\n                        with open(source, mode=\"r\", encoding=\"utf-8\") as file_object:\n                            lines = file_object.readlines()\n                            df = pd.DataFrame({\"Text\": lines})\n                    elif file.endswith(\".docx\"):\n", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "source", "_", "directory", "}", " is", " not", " a", " valid", " path", "\"", ")", "\n", "    ", "converted", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "(", "('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "'))", ":", "\n", "            ", "source", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", ")", "\n", "            ", "target", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " f", "\"", "{", "file", ".", "split", "('", ".", "')", "[", "0", "]}", ".", "csv", "\"", ")", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "source", "):", "\n", "                ", "if", " os", ".", "path", ".", "is", "file", "(", "target", "):", "\n", "                ", "    ", "os", ".", "remove", "(", "target", ")", "\n", "                ", "try", ":", "\n", "                ", "    ", "if", " file", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "\n", "                ", "        ", "with", " open", "(", "source", ",", " mode", "=", "\"", "r", "\"", ",", " encoding", "=", "\"", "utf", "-", "8", "\"", ")", " as", " file", "_", "object", ":", "\n", "                ", "            ", "lines", " =", " file", "_", "object", ".", "read", "lines", "()", "\n", "                ", "            ", "df", " =", " pd", ".", "DataFrame", "(", "{\"", "Text", "\":", " lines", "})", "\n", "                ", "    ", "elif", " file", ".", "end", "sw", "ith", "(", "\"", ".", "doc", "x", "\"", "):", "\n"], "logprobs": [-2.073333501815796, -0.11743085831403732, -0.10817014425992966, -3.5523738915799186e-05, -0.0004899493651464581, -0.008010641671717167, -1.1351251602172852, -0.009040257893502712, -0.00022635281493421644, -0.030146431177854538, -0.00021050144277978688, -6.472854875028133e-05, -0.0035533879417926073, -0.04279514402151108, -0.0012380562257021666, -0.042473576962947845, -0.0034405342303216457, -7.56950321374461e-05, -3.45700973412022e-05, -0.4120129346847534, -0.33512672781944275, -0.24144253134727478, -1.4129034280776978, -0.00526636466383934, -0.00041607304592616856, -0.0006256530177779496, -0.027050500735640526, -0.5295979380607605, -0.03130083531141281, -0.044651247560977936, -0.4669159948825836, -2.79630446434021, -1.2034870386123657, -0.000551310193259269, -0.0064975665882229805, -1.0805948972702026, -3.647740364074707, -0.1009090393781662, -0.714085042476654, -0.26203203201293945, -0.24765770137310028, -0.000892121868673712, -0.0339202955365181, -0.13569213449954987, -0.44986605644226074, -0.8261653184890747, -0.6591642498970032, -1.2484104633331299, -0.000200609109015204, -0.005083018448203802, -2.622600959512056e-06, -0.00019035911827813834, -0.006436451338231564, -5.411955135059543e-05, -1.4185804502631072e-05, -0.0006629414856433868, -0.02052438259124756, -0.004214453510940075, -0.9116994142532349, -0.34124305844306946, -0.01143956370651722, -0.13522668182849884, -1.7762025890988298e-05, 0.0, -0.7091447114944458, -0.9527596831321716, -0.05524254962801933, -0.06033623218536377, -0.006867614574730396, -0.0001731960946926847, -0.014693381264805794, -0.002601574407890439, -0.03788016363978386, -0.010765687562525272, -0.023119883611798286, -0.00024053541710600257, -0.0034246151335537434, -0.004217302426695824, -0.04039694741368294, -0.0012080521555617452, -0.002836967818439007, -0.011474329978227615, -9.512448741588742e-05, -0.00331911351531744, -0.0021333571057766676, -0.0344218946993351, -0.06881780922412872, -0.00634382339194417, -0.009377126581966877, -0.0031764074228703976, -2.1357779502868652, -2.328892707824707, -0.5250244140625, -6.687417771900073e-05, -0.00010263393050990999, -0.002312725642696023, -0.0007269124034792185, -9.500529267825186e-05, -0.0019298041006550193, -1.0609570381348021e-05, -1.1324817933200393e-05, -0.0002522150462027639, -0.0025236920919269323, -0.0008644896443001926, -0.008364880457520485, -0.00689946161583066, -0.6143918037414551, -0.020951617509126663, -0.060993682593107224, -0.0006518622976727784, -3.0397906812140718e-05, -0.0031480062752962112, -0.006300941575318575, -0.00021336186910048127, -0.014936281368136406, -3.313963316031732e-05, -3.8742269680369645e-05, -0.0006264869589358568, -0.8698196411132812, -0.5270299911499023, -0.09482143074274063, -0.22476252913475037, -0.43657317757606506, -0.8548000454902649, -0.007251372095197439, -0.0005290300468914211, -0.003167494898661971, -0.0005243833875283599, -0.0013580633094534278, -0.03786661848425865, -0.0021691620349884033, -0.001690745702944696, -0.0003589939442463219, -0.004836170934140682, -0.008900020271539688, -0.024781206622719765, -0.25116485357284546, -0.3784891963005066, -6.151010165922344e-05, -0.0021614301949739456, -5.9126061387360096e-05, -0.721680223941803, -0.0043707797303795815, -0.00026925752172246575, -1.704662561416626, -0.33409687876701355, -0.02314096689224243, -0.0017936823423951864, -0.7101437449455261, -0.23707517981529236, -6.90197994117625e-05, -0.008114702999591827, -4.2199197196168825e-05, -0.1077442392706871, -0.007959788665175438, -0.00013934595335740596, -0.0028080816846340895, -0.13189831376075745, -0.015842756256461143, -0.00020728347590193152, -0.0016057705506682396, -0.1349724531173706, -0.0001627074379939586, -0.042721930891275406, -7.593343616463244e-05, -0.006909525021910667, -0.00017987063620239496, -0.013070972636342049, -0.010055243968963623, -2.3894753456115723, -0.0021848634351044893, -0.003024172969162464, -0.0006031363154761493, -0.0013558013597503304, -0.5627877116203308, -0.09452354162931442, -0.0035394898150116205, -0.05033036321401596, -1.2755313036905136e-05, 0.0, -1.1530463695526123, -1.2369391918182373, -0.016742432489991188, -0.44864553213119507, -0.00019202772818971425, -0.010252311825752258, -0.005127494223415852, -0.0006886732880957425, -0.0013855629367753863, -0.5071203112602234, -0.005739043932408094, -0.0011553048389032483, -0.03739120438694954, -0.11107788980007172, -2.743607997894287, -0.9811450839042664, -0.0020843464881181717, -0.1300090104341507, -0.047273989766836166, -0.217581644654274, -0.025661379098892212, -0.1913732886314392, -0.002663162536919117, -0.10655868798494339, -0.24964594841003418, -0.020482104271650314, -0.01368086040019989, -0.013097329065203667, -0.0008518642862327397, -1.104446530342102, -1.0858323574066162, -2.751709222793579, -0.04739416763186455, -0.0032815674785524607, -0.00035089056473225355, -0.0015414986992254853, -2.6038644313812256, -0.045811813324689865, -0.19884638488292694, -0.0001842805795604363, -7.617183291586116e-05, -0.0003250309091527015, -0.00020847532141488045, -0.07259069383144379, -0.003198272082954645, -0.008198654279112816, -0.007506971247494221, -0.4791572690010071, -1.050739049911499, -0.02476632222533226, -0.011209959164261818, -9.894321920000948e-06, -0.029579490423202515, -0.3813459873199463, -1.0558021068572998, -0.05017425864934921, -0.00957692600786686, -0.17165297269821167, -0.034501709043979645, -0.010354253463447094, -0.010618260130286217, -1.4282889366149902, -0.10678379982709885, -0.004487088415771723, -0.0001333863037871197, -0.00041762212640605867, -8.34461570775602e-06, -1.0728830375228426e-06, -0.09918543696403503, -0.009251936338841915, -0.0026082326658070087, -0.1496969610452652, -0.0041320668533444405, -0.00013672371278516948, -0.026435479521751404, -0.0015091231325641274], "finish_reason": "length"}], "metrics": {"energy": 354.80791386413574, "energy_per_token": 1.3859684135317802, "time": 12.117324, "time_per_token": 0.047333296875}}
{"outputs": [{"text": "# Check if the source directory exists\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError('The source directory does not exist.')\n\n    # Check if the target directory exists\n    target_directory = os.path.abspath(target_directory)\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # Initialize variables\n    file_count = 0\n    text_count = 0\n\n    # Create a Pandas dataframe for the CSV output\n    df = pd.DataFrame({'Text': []})\n\n    for source_file in Path(source_directory).iterdir():\n        if source_file.name.endswith(('.txt', '.docx')):\n            text = open_text_file(source_file.name)\n            df.loc[len(df.index)]['Text'] = text\n            file_count += 1\n\n    # Write the Pandas dataframe to CSV\n    df.to_csv(os.path.join(target_directory, 'text", "tokens": ["#", " Check", " if", " the", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "The", " source", " directory", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "#", " Check", " if", " the", " target", " directory", " exists", "\n", "    ", "target", "_", "directory", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Initialize", " variables", "\n", "    ", "file", "_", "count", " =", " ", "0", "\n", "    ", "text", "_", "count", " =", " ", "0", "\n", "\n", "    ", "#", " Create", " a", " Pand", "as", " data", "frame", " for", " the", " CS", "V", " output", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "({", "'", "Text", "':", " []", "})", "\n", "\n", "    ", "for", " source", "_", "file", " in", " Path", "(", "source", "_", "directory", ")", ".", "iter", "dir", "():", "\n", "        ", "if", " source", "_", "file", ".", "name", ".", "end", "sw", "ith", "(", "('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'))", ":", "\n", "            ", "text", " =", " open", "_", "text", "_", "file", "(", "source", "_", "file", ".", "name", ")", "\n", "            ", "df", ".", "loc", "[", "len", "(", "df", ".", "index", ")]", "['", "Text", "']", " =", " text", "\n", "            ", "file", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "#", " Write", " the", " Pand", "as", " data", "frame", " to", " CS", "V", "\n", "    ", "df", ".", "to", "_", "csv", "(", "os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " '", "text"], "logprobs": [-1.2732598781585693, -0.9082789421081543, -0.21613462269306183, -0.5874043107032776, -0.06740988790988922, -0.05892384052276611, -0.010518351569771767, -0.26548629999160767, -0.0018679328495636582, -0.1172075942158699, -0.02441156469285488, -0.043760254979133606, -6.437280717364047e-06, -0.00010918975021922961, -0.0034768865443766117, -0.1846265345811844, -0.00022837892174720764, -0.0015789910685271025, -0.0001248043408850208, -8.427741704508662e-05, -0.0014386551920324564, -0.0035173948854207993, -0.000562271336093545, -0.03253261372447014, -0.002032359130680561, -4.184158387943171e-05, -2.7179348762729205e-05, -1.6150472164154053, -1.490159273147583, -0.04526644945144653, -0.007732695899903774, -0.01439613662660122, -0.00010740180005086586, -0.001090765930712223, -0.2746298015117645, -0.01365451980382204, -0.001280322321690619, -0.08188772201538086, -0.000990377040579915, -0.11399391293525696, -1.4725333452224731, -0.03027944080531597, -0.05131473392248154, -0.013806908391416073, -0.006097998004406691, -0.052079759538173676, -0.7893266081809998, -0.0007769426447339356, -2.076108932495117, -0.010308710858225822, -0.3457157611846924, -0.5367212295532227, -2.3788297176361084, -0.0009894242975860834, -0.002262772060930729, -0.06308812648057938, -0.7978211641311646, -1.2040065485052764e-05, -8.999896090244874e-05, -0.001947531825862825, -0.034613531082868576, -4.23184028477408e-05, -1.6569954823353328e-05, -0.0013463966315612197, -0.06671438366174698, -0.026311013847589493, -0.1360727995634079, -0.0320483036339283, -0.0033160243183374405, -0.0004748170613311231, -0.00014327930693980306, -0.0008364992681890726, -0.05388743802905083, -0.00019178935326635838, -0.006064940243959427, -2.1934269170742482e-05, -5.757642793469131e-05, -0.002638075966387987, -0.006356497760862112, -0.001513170194812119, -0.21046993136405945, -0.0005629861843772233, -0.1941458135843277, -3.862306402879767e-05, -0.00048708971007727087, -0.000377583724912256, -0.004766530357301235, -3.6954195820726454e-05, -2.5033637939486653e-05, -0.06606291979551315, -0.038495298475027084, -0.05976134166121483, -0.0014587724581360817, -0.24211929738521576, -2.453909397125244, -1.0626578330993652, -0.6346255540847778, -0.0014137759571895003, -1.9155081510543823, -0.00627594580873847, -0.2892613112926483, -0.024729689583182335, -0.007690465077757835, -0.002325689420104027, -0.100340835750103, -0.6987274289131165, -3.4573259353637695, -0.2184421569108963, -0.848892092704773, -0.004937360994517803, -0.00541861355304718, -0.0010094314347952604, -0.005950710736215115, -0.593099057674408, -0.0002882065309677273, -0.097316212952137, -2.8443360328674316, -0.25286298990249634, -3.484090805053711, -4.1960789531003684e-05, -0.9821497201919556, -0.04341160133481026, -1.6266322135925293, -1.5966618061065674, -1.58098566532135, -0.08417848497629166, -3.101593017578125, -0.24710701406002045, -0.0014355602907016873, -0.3761550784111023, -0.09745637327432632, -0.016791902482509613, -2.13382354559144e-05, -0.003142302157357335, -1.338021993637085, -0.06920566409826279, -0.18279236555099487, -0.01160301361232996, -0.1611117571592331, -0.13403896987438202, -0.012549950741231441, -0.11733237653970718, -0.0004328744253143668, -2.6407241821289062, -3.4418187141418457, -0.018291717395186424, -0.17298850417137146, -0.10596837848424911, -0.21293064951896667, -0.0007669368060305715, -0.002466376405209303, -2.002696055569686e-05, -1.5735502529423684e-05, -0.001209838199429214, -1.645074735279195e-05, -0.8471769690513611, -0.000331704446580261, -0.0006373281357809901, -0.019840708002448082, -0.04074813798069954, -1.0818767547607422, -0.09487499296665192, -5.054346183896996e-05, -0.0004120216181036085, -0.00036376056959852576, -1.8907413482666016, -0.025355173274874687, -0.13236773014068604, -1.3351351299206726e-05, 0.0, -0.7631745338439941, -0.051907289773225784, -0.11102326959371567, -0.07399245351552963, -0.024486249312758446, -9.178694017464295e-05, -0.00819061417132616, -0.004651677794754505, -0.06163153052330017, -0.01018434576690197, -2.98042368888855, -0.01852847822010517, -0.04853656888008118, -0.01553000882267952, -2.529587984085083, -0.6797494292259216, -3.773712158203125, -1.623539686203003, -1.8710417747497559, -1.0215643644332886, -0.15151287615299225, -0.015473316423594952, -0.01620115339756012, -1.4305012882687151e-05, -0.014181078411638737, -1.909072756767273, -0.4578612446784973, -0.4021246135234833, -0.028416607528924942, -0.14143463969230652, -0.7049620151519775, -0.45661845803260803, -0.16922028362751007, -0.08127058297395706, -1.9025943279266357, -5.9602869441732764e-05, -0.000427274004323408, -1.1856272220611572, -0.02101488597691059, -0.04066355898976326, -2.364234447479248, -0.0012950851814821362, -0.00024196557933464646, -0.0011851914459839463, -0.059659261256456375, -0.03889371454715729, -0.0610157772898674, -1.0084254741668701, -6.83045873302035e-05, -0.0009844223968684673, -0.004126130603253841, -0.000993830617517233, -6.878139538457617e-05, -0.004706020932644606, -1.671173334121704, -1.3205466270446777, -1.1594337224960327, -1.770263671875, -0.18213531374931335, -0.849629282951355, -1.1324817933200393e-05, -0.03759283199906349, -0.001567802974022925, -0.08038094639778137, -2.2679553031921387, -0.005708344746381044, -0.6489176154136658, -0.0006360176485031843, -0.29049456119537354, -0.013303680345416069, -0.016496337950229645, -5.8412379075889476e-06, -0.0007095203618519008, -0.09695480018854141, -0.6019791960716248, -0.00011586471373448148, -0.00043990471749566495, -0.004347159992903471, -0.0012554391287267208, -0.0006160030607134104, -0.0042932722717523575, -1.3351351299206726e-05, -2.658331868587993e-05, -0.000514851592015475, -0.4894023537635803, -1.016606330871582], "finish_reason": "length"}], "metrics": {"energy": 350.1096401882171, "energy_per_token": 1.367615781985223, "time": 12.114307, "time_per_token": 0.04732151171875}}
{"outputs": [{"text": "file_names = os.listdir(source_directory)\n    file_paths = [os.path.join(source_directory, file_name) for file_name in file_names]\n\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n\n    num_converted = 0\n    for file_path in file_paths:\n        file_name, file_extension = os.path.splitext(file_path)\n        if file_extension in ['.txt', '.docx', '.xlsx', '.csv']:\n            if file_extension == '.txt':\n                with open(file_path, 'r', encoding='utf-8') as f:\n                    data = f.read()\n                    pd.DataFrame({'Text': [data]}).to_csv(\n                        os.path.join(target_directory, file_name + '.csv'),\n                        index=False)\n                    num_converted += 1\n            elif file_extension in ['.docx', '", "tokens": ["file", "_", "names", " =", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", "\n", "    ", "file", "_", "paths", " =", " [", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", "_", "name", ")", " for", " file", "_", "name", " in", " file", "_", "names", "]", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "num", "_", "converted", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "        ", "file", "_", "name", ",", " file", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "path", ")", "\n", "        ", "if", " file", "_", "extension", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", ":", "\n", "            ", "if", " file", "_", "extension", " ==", " '", ".", "txt", "':", "\n", "                ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "                ", "    ", "data", " =", " f", ".", "read", "()", "\n", "                ", "    ", "pd", ".", "DataFrame", "({", "'", "Text", "':", " [", "data", "]", "})", ".", "to", "_", "csv", "(", "\n", "                ", "        ", "os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", "_", "name", " +", " '", ".", "csv", "')", ",", "\n", "                ", "        ", "index", "=", "False", ")", "\n", "                ", "    ", "num", "_", "converted", " +=", " ", "1", "\n", "            ", "elif", " file", "_", "extension", " in", " ['", ".", "doc", "x", "'", ",", " '"], "logprobs": [-2.6073415279388428, -0.02261444553732872, -2.506598711013794, -0.2048632949590683, -1.3232817649841309, -7.772143726469949e-05, -0.0028284089639782906, -7.748573807475623e-06, -0.0017521519912406802, -0.010371596552431583, -7.784063927829266e-05, -9.226373367710039e-05, -0.0004693360242526978, -0.028881829231977463, -0.14364567399024963, -1.478423833847046, -0.002357443794608116, -2.9209494590759277, -0.020859740674495697, -0.1161864772439003, -0.27298420667648315, -2.1457441107486375e-05, -0.00022480344341602176, -0.001149470335803926, -0.0015617328463122249, -0.00017307691450696439, -0.0071891192346811295, -3.8742269680369645e-05, -3.4927710657939315e-05, -0.0003071551618631929, -0.5067099928855896, -0.10571304708719254, -0.003301885211840272, -0.0006688979919999838, -0.02907603420317173, -0.0005066303419880569, -1.3708974620385561e-05, -7.581423415103927e-05, -0.000929519534111023, -0.0010203876299783587, -2.3841855067985307e-07, -1.3589766240329482e-05, -0.0574030876159668, -0.0031166335102170706, -1.0776619911193848, -0.0003121604095213115, -3.729494571685791, -0.29171764850616455, -0.13301090896129608, -5.23315102327615e-05, -0.00040797016117721796, -0.0015792291378602386, -1.052201271057129, -0.003227147040888667, -0.00045503751607611775, -0.06427579373121262, -6.556489552167477e-06, -8.737658936297521e-05, -0.009460262954235077, -0.0143154077231884, -0.002650916576385498, -0.17691057920455933, -0.0009868042543530464, -0.33458787202835083, -2.002696055569686e-05, -0.002097788965329528, -0.00027211778797209263, -0.0014054430648684502, -1.3828182090946939e-05, -2.276871418871451e-05, -0.12204660475254059, -0.02564348466694355, -0.06753814220428467, -0.0006250573205761611, -3.0343942642211914, -0.0017347777029499412, -0.9052761197090149, -0.5516584515571594, -0.005161531735211611, -0.00012587709352374077, -0.011178131215274334, -0.46496060490608215, -0.06849247962236404, -0.1057591661810875, -0.013143567368388176, -0.012231343425810337, -0.0054336716420948505, -0.0014248467050492764, -6.437280717364047e-06, -4.815939246327616e-05, -0.00015293381875380874, -0.0008185135084204376, -0.00800484698265791, -1.8340678215026855, -0.007017015945166349, -0.21964335441589355, -1.6590871810913086, -0.3388131260871887, -5.149708886165172e-05, -0.6379513144493103, -0.0005022218101657927, -0.0226905457675457, -2.264974000354414e-06, -2.276871418871451e-05, -0.004040056373924017, -0.002095647621899843, -2.6225699912174605e-05, -2.3841855067985307e-07, -7.629365427419543e-06, -0.09990350157022476, -1.1920922133867862e-06, -0.003937350586056709, -0.023236827924847603, -0.013768225908279419, -0.2661590576171875, -0.4179815351963043, -0.10635720193386078, -2.062299427052494e-05, -0.042405709624290466, -0.9879813194274902, -0.4788998067378998, -0.007720511872321367, -0.029547084122896194, -0.015509351156651974, -8.260862523457035e-05, -0.00352559145539999, -0.0005907459417358041, -0.0639682188630104, -0.007952574640512466, -0.03502684459090233, -0.00012694983161054552, -0.002176893875002861, -0.0015276916092261672, -0.04185265302658081, -0.001347825163975358, -0.0028325694147497416, -0.012584090232849121, -7.843663479434326e-05, -0.0016916978638619184, -0.00046302087139338255, -0.024672584608197212, -0.05223941430449486, -0.018566275015473366, -0.005540135782212019, -0.006564836483448744, -0.962158203125, -0.3069373369216919, -6.23445157543756e-05, -0.11581186205148697, -0.04531851410865784, -0.006115889176726341, -0.00040070133400149643, -0.25006452202796936, -0.01753951422870159, -0.008796748705208302, -0.0007225048611871898, -0.8257778286933899, -0.001388658070936799, -0.0009597701136954129, -0.002245644573122263, -2.861018856492592e-06, -0.01599997468292713, -0.05609046295285225, -0.056045155972242355, -0.06642841547727585, -0.5092530250549316, -5.543078441405669e-05, -0.022901101037859917, -0.037323564291000366, -0.08154332637786865, -0.07867181301116943, -0.0033595096319913864, -0.014428920112550259, -0.0005477358354255557, -1.4336596727371216, -0.032818518579006195, -0.0033043804578483105, -0.00018714107864070684, -0.00037067217635922134, -2.256822109222412, -0.027828628197312355, -0.16731667518615723, -4.017272294731811e-05, -2.47952248173533e-05, -0.1606464982032776, -0.05098932236433029, -1.0833356380462646, -0.6099787950515747, -2.729647636413574, -0.0160087738186121, -0.19074490666389465, -0.13479141891002655, -0.0065291887149214745, -0.03646521270275116, -0.0021339519880712032, -0.028147637844085693, -0.007310781162232161, -0.03213846683502197, -0.010021017864346504, -0.0037435467820614576, -0.0008510305196978152, -2.3841855067985307e-07, -0.0002892790944315493, -0.005912670865654945, -1.6352006196975708, -0.0002450642641633749, -0.008131730370223522, -0.2455226182937622, -1.4305104514278355e-06, -4.2199197196168825e-05, -1.5020257706055418e-05, -0.0007364421617239714, -0.00015722469834145159, -0.008486516773700714, -2.3841830625315197e-06, -9.48860906646587e-05, -0.00010847456724150106, -0.8450891971588135, -4.124556289752945e-05, -0.004663068801164627, -0.23037414252758026, -0.02289527654647827, -0.00034814971149899065, -0.0011794761521741748, -0.10321636497974396, -0.0031339838169515133, -0.6041455864906311, -6.592056161025539e-05, -0.0013666347367689013, -0.10208839178085327, -0.004068788141012192, -0.003939844202250242, -1.1811692714691162, -0.004144650883972645, -0.6821909546852112, -0.4315037727355957, -0.17433816194534302, -3.4570634852570947e-06, -2.6464111215318553e-05, -0.00275827175937593, -0.00043084874050691724, -5.745722592109814e-05, -0.0011594723910093307, -0.1802513748407364, -0.11734329164028168, -0.002951553324237466, -7.986990567587782e-06, -0.0003948624071199447, -2.328782558441162, -0.008322793990373611, -0.0005340342177078128, -0.02733600325882435, -0.0024361712858080864, -0.017381835728883743, -6.186770770000294e-05, -0.0037813130766153336], "finish_reason": "length"}], "metrics": {"energy": 347.48471149635304, "energy_per_token": 1.357362154282629, "time": 12.296125, "time_per_token": 0.04803173828125}}
{"outputs": [{"text": "# Create a pathlib object for the source directory\n    source_dir = Path(source_directory)\n\n    # Check if the source directory exists\n    if source_dir.exists():\n        # Get a list of all the files in the source directory\n        file_list = list(source_dir.rglob('*.*'))\n\n        # Check if the target directory exists\n        target_dir = Path(target_directory)\n        if not target_dir.exists():\n            target_dir.mkdir()\n\n        # Count the number of converted files\n        count = 0\n\n        # Iterate over all the files in the source directory\n        for source_file in file_list:\n            # Check if the file is a text file or an Excel spreadsheet\n            if source_file.suffix in ['.txt', '.docx', '.xlsx', '.csv']:\n                # Create a pathlib object for the target file\n                target_file = target_dir / source_file.name[:-4] + '.csv'\n\n                # Check if the target file exists and has the same name as", "tokens": ["#", " Create", " a", " path", "lib", " object", " for", " the", " source", " directory", "\n", "    ", "source", "_", "dir", " =", " Path", "(", "source", "_", "directory", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " source", " directory", " exists", "\n", "    ", "if", " source", "_", "dir", ".", "exists", "():", "\n", "        ", "#", " Get", " a", " list", " of", " all", " the", " files", " in", " the", " source", " directory", "\n", "        ", "file", "_", "list", " =", " list", "(", "source", "_", "dir", ".", "rg", "lob", "('", "*", ".", "*", "'))", "\n", "\n", "        ", "#", " Check", " if", " the", " target", " directory", " exists", "\n", "        ", "target", "_", "dir", " =", " Path", "(", "target", "_", "directory", ")", "\n", "        ", "if", " not", " target", "_", "dir", ".", "exists", "():", "\n", "            ", "target", "_", "dir", ".", "mk", "dir", "()", "\n", "\n", "        ", "#", " Count", " the", " number", " of", " converted", " files", "\n", "        ", "count", " =", " ", "0", "\n", "\n", "        ", "#", " Iter", "ate", " over", " all", " the", " files", " in", " the", " source", " directory", "\n", "        ", "for", " source", "_", "file", " in", " file", "_", "list", ":", "\n", "            ", "#", " Check", " if", " the", " file", " is", " a", " text", " file", " or", " an", " Excel", " spreadsheet", "\n", "            ", "if", " source", "_", "file", ".", "suff", "ix", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", ":", "\n", "                ", "#", " Create", " a", " path", "lib", " object", " for", " the", " target", " file", "\n", "                ", "target", "_", "file", " =", " target", "_", "dir", " /", " source", "_", "file", ".", "name", "[:", "-", "4", "]", " +", " '", ".", "csv", "'", "\n", "\n", "                ", "#", " Check", " if", " the", " target", " file", " exists", " and", " has", " the", " same", " name", " as"], "logprobs": [-1.2732598781585693, -2.617819309234619, -0.7566643357276917, -2.8680191040039062, -0.6263708472251892, -0.6322714686393738, -0.3566268980503082, -0.05935981124639511, -0.700701117515564, -0.10705021768808365, -0.2193090170621872, -0.0009080815361812711, -0.10436969250440598, -0.040072888135910034, -1.2709693908691406, -0.2761668562889099, -0.017349032685160637, -0.0013247294118627906, -0.004131235647946596, -4.5060096454108134e-05, -1.1920858014491387e-05, -0.0012142435880377889, -0.03488536924123764, -0.4661717116832733, -0.0003618539194576442, -0.08022098988294601, -0.4777197241783142, -0.11056731641292572, -0.07598131895065308, -0.020771358162164688, -0.018265381455421448, -0.005501013249158859, -0.1310494840145111, -0.0002908283786382526, -0.012737112119793892, -2.9805963039398193, -3.528532761265524e-05, -0.0005160430446267128, -0.0010665925219655037, -0.24982322752475739, -0.09786581248044968, -0.00833355262875557, -0.056332867592573166, -0.23093080520629883, -1.6113426685333252, -0.7790630459785461, -0.014491429552435875, -0.0014688903465867043, -0.32924988865852356, -1.7438545227050781, -0.21861930191516876, -0.07276151329278946, -0.0037560169585049152, -0.06946548074483871, -0.002082324121147394, -0.40610694885253906, -0.000742398202419281, -1.156396746635437, -0.0033692519646137953, -0.35521233081817627, -0.008157034404575825, -1.1309057474136353, -0.011822749860584736, -0.034387920051813126, -6.508615479106084e-05, -8.046303264563903e-05, -3.6238969187252223e-05, -1.503070592880249, -0.00917149893939495, -0.3507538139820099, -0.024354327470064163, -0.9023287296295166, -0.7509408593177795, -0.00937027670443058, -0.023507237434387207, -0.5652323365211487, -0.019839540123939514, -0.100008025765419, -2.8943448066711426, -0.2523340880870819, -0.0636507049202919, -0.021950509399175644, -0.007475498132407665, -0.06244649738073349, -0.595363199710846, -0.000730247818864882, -0.30600640177726746, -0.0021895025856792927, -0.008026961237192154, -0.012267377227544785, -0.004464302211999893, -0.00033158526639454067, -0.0014759134501218796, -4.51792984677013e-05, -7.903263758635148e-05, -0.00037472377880476415, -0.011018620803952217, -0.11698406934738159, -0.07506529241800308, -0.23833706974983215, -0.015735624358057976, -0.00018737945356406271, -3.3378044463461265e-05, -3.71926071238704e-05, -0.027981653809547424, -0.0007367995567619801, -0.006765909492969513, -0.0025952726136893034, -0.7864639759063721, -8.749579137656838e-05, -0.0001722425949992612, -0.002856343751773238, -0.0011144625023007393, -3.9219088648678735e-05, -0.8474874496459961, -0.055619463324546814, -0.10415584594011307, -0.004541084170341492, -0.1821397840976715, -2.77211594581604, -0.2166968584060669, -0.1093444973230362, -0.003617530455812812, -2.075671672821045, -0.0799797996878624, -0.2602134048938751, -0.0006249382277019322, -2.3179991245269775, -0.0377035066485405, -0.0044078100472688675, -0.00027211778797209263, -0.0034585916437208652, -0.22267365455627441, -0.0007658647373318672, -0.18776702880859375, -1.3739619255065918, -0.0011798333143815398, -0.6574615836143494, -1.8257949352264404, -0.4274347424507141, -0.05630774050951004, -0.20484600961208344, -0.004914466291666031, -0.06150924041867256, -0.0017872564494609833, -0.02732335962355137, -0.00047994061606004834, -0.0064411889761686325, -3.1049797534942627, -0.0517917275428772, -0.0419236458837986, -0.013111918233335018, -0.004505126737058163, -3.8265450712060556e-05, -1.1444026313256472e-05, -0.00012396997772157192, -0.0016288596671074629, -0.07900860905647278, -0.10745574533939362, -1.3403812646865845, -0.08493061363697052, -0.02045886218547821, -0.3099767565727234, -1.136391282081604, -0.550632894039154, -0.44500163197517395, -0.06589674949645996, -3.0564026832580566, -2.1348767280578613, -0.23570112884044647, -1.5943963527679443, -0.2844569981098175, -0.0022435036953538656, -0.08036917448043823, -0.1845562607049942, -0.00040058218291960657, -0.0009585791267454624, -0.00022671037004329264, -0.24842587113380432, -4.541770613286644e-05, -0.3922117054462433, -0.2931244969367981, -0.012675788253545761, -0.03373590484261513, -0.005161887500435114, -0.0001387499796692282, -0.004115802235901356, -0.0015594713622704148, -0.08274780958890915, -0.009170199744403362, -0.04570590704679489, -0.00012182447244413197, -0.004891927354037762, -0.001993456156924367, -0.04956671968102455, -0.0012360322289168835, -0.011100560426712036, -0.01704050414264202, -0.0001677133986959234, -0.005272175185382366, -0.0012163867941126227, -0.13203881680965424, -0.09386032819747925, -0.013859345577657223, -0.0017666699131950736, -0.04730093851685524, -0.10850538313388824, -1.2675279378890991, -0.043909721076488495, -0.260397344827652, -0.006486078258603811, -0.005744495894759893, -0.0064658247865736485, -0.00648216949775815, -0.5155361294746399, -0.08919637650251389, -0.18400847911834717, -0.0007251255447044969, -0.043450526893138885, -0.002650440903380513, -0.04135396331548691, -0.07230806350708008, -0.8544932007789612, -8.248942322097719e-05, -0.00018857131362892687, -0.12273188680410385, -0.35973310470581055, -3.313963316031732e-05, -0.0011080323019996285, -0.002657574601471424, -0.36030223965644836, -1.7305145263671875, -0.03099115379154682, -0.057579901069402695, -0.008143317885696888, -0.02602452039718628, -0.03500785306096077, -0.009404879063367844, -0.0015047191409394145, -0.0004273931554052979, -0.01861085742712021, -0.14133445918560028, -0.00031895318534225225, -0.01919819787144661, -0.16898402571678162, -0.002540576970204711, -0.022504422813653946, -0.11985206604003906, -0.00793483480811119, -1.7373509407043457, -2.0238285064697266, -1.4201600551605225, -0.09726397693157196, -0.004584278911352158, -0.02122054435312748, -0.2902146577835083], "finish_reason": "length"}], "metrics": {"energy": 370.48071297264124, "energy_per_token": 1.4471902850493799, "time": 12.727902, "time_per_token": 0.0497183671875}}
{"outputs": [{"text": "# Create a Path object for the source directory\n    source_dir_path = Path(source_directory)\n    if not source_dir_path.exists():\n        raise FileNotFoundError('Source directory not found: ' + str(source_dir_path))\n\n    # Get all files in the source directory\n    files_in_dir = [file for file in os.listdir(source_directory)\n                    if file.endswith(('.txt', '.docx', '.xlsx', '.csv'))]\n\n    # Create a Path object for the target directory\n    target_dir_path = Path(target_directory)\n    if not target_dir_path.exists():\n        target_dir_path.mkdir()\n    # Get the number of files already in the target directory\n    num_files_in_dir = len([file for file in os.listdir(target_directory)\n                            if file.endswith(('.csv'))])\n\n    # Create a dictionary to store file name and corresponding content as a list\n    file_content = {}\n    for file_name in", "tokens": ["#", " Create", " a", " Path", " object", " for", " the", " source", " directory", "\n", "    ", "source", "_", "dir", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "dir", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Source", " directory", " not", " found", ":", " '", " +", " str", "(", "source", "_", "dir", "_", "path", "))", "\n", "\n", "    ", "#", " Get", " all", " files", " in", " the", " source", " directory", "\n", "    ", "files", "_", "in", "_", "dir", " =", " [", "file", " for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", "\n", "                ", "    ", "if", " file", ".", "end", "sw", "ith", "(", "('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "'))", "]", "\n", "\n", "    ", "#", " Create", " a", " Path", " object", " for", " the", " target", " directory", "\n", "    ", "target", "_", "dir", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " target", "_", "dir", "_", "path", ".", "exists", "():", "\n", "        ", "target", "_", "dir", "_", "path", ".", "mk", "dir", "()", "\n", "    ", "#", " Get", " the", " number", " of", " files", " already", " in", " the", " target", " directory", "\n", "    ", "num", "_", "files", "_", "in", "_", "dir", " =", " len", "([", "file", " for", " file", " in", " os", ".", "list", "dir", "(", "target", "_", "directory", ")", "\n", "                ", "            ", "if", " file", ".", "end", "sw", "ith", "(", "('", ".", "csv", "'))", "])", "\n", "\n", "    ", "#", " Create", " a", " dictionary", " to", " store", " file", " name", " and", " corresponding", " content", " as", " a", " list", "\n", "    ", "file", "_", "content", " =", " {}", "\n", "    ", "for", " file", "_", "name", " in"], "logprobs": [-1.2732598781585693, -2.617819309234619, -0.7566643357276917, -1.2382879257202148, -0.11294128745794296, -0.32051190733909607, -0.08345824480056763, -0.2826012670993805, -0.1347167193889618, -0.2860323488712311, -0.0007370378007180989, -0.07365772873163223, -0.038218703120946884, -1.097300410270691, -1.2751760482788086, -0.008900138549506664, -0.03309246152639389, -0.005712730344384909, -0.0009385710000060499, -0.0018386616138741374, -3.361645576660521e-05, -1.680836794548668e-05, -0.0008662762120366096, -0.026145190000534058, -0.9774043560028076, -0.9841914772987366, -0.07587966322898865, -0.07420675456523895, -5.245195097813848e-06, -6.818538531661034e-05, -4.124556289752945e-05, -1.3708974620385561e-05, -0.00014625910262111574, -0.14883023500442505, -0.0033121034502983093, -0.07337074726819992, -0.0017315646400675178, -0.1746617555618286, -0.0029558322858065367, -6.437094270950183e-05, -2.098061486321967e-05, -1.5402719974517822, -0.49912434816360474, -0.029484352096915245, -0.6112123727798462, -0.0010149095905944705, -2.4089479446411133, -1.2575699090957642, -0.08236155658960342, -1.776205062866211, -0.00016234986833296716, -0.0019540756475180387, -0.000102037942269817, -0.030029134824872017, -0.0017879704246297479, -3.242440288886428e-05, -0.09069330990314484, -0.00736202159896493, -0.20730915665626526, -0.0010303908493369818, -0.14228555560112, -2.057724714279175, -1.065990924835205, -0.5180558562278748, -0.4445047378540039, -0.027822598814964294, -0.036269910633563995, -0.0040374440141022205, -0.8452197909355164, -0.0005222387262620032, -1.4614324569702148, -1.3865286111831665, -1.021067500114441, -0.0010577804641798139, -1.2739496231079102, -0.03315473720431328, -1.0496703386306763, -1.3749864101409912, -0.3479168117046356, -0.0016733704833313823, -0.0014550823252648115, -0.809975802898407, -1.6212332411669195e-05, -0.0043351720087230206, -3.2186455882765586e-06, -0.0006451908848248422, -0.08530252426862717, -2.1219027985353023e-05, -0.8897695541381836, -0.24462676048278809, -1.5879396200180054, -0.04595266282558441, -0.15537665784358978, -0.00608366122469306, -1.7230430841445923, -0.07488833367824554, -0.3592924177646637, -4.1483970562694594e-05, 0.0, -0.8368523120880127, -0.07793029397726059, -0.052659083157777786, -0.04795530438423157, -0.006782486103475094, -0.0001445904199499637, -0.011321114376187325, -0.0034975565504282713, -0.023195596411824226, -0.005011971574276686, -0.008811992593109608, -0.00020430385484360158, -0.004131235647946596, -0.004246741533279419, -0.03738328069448471, -0.0012273406609892845, -0.0037430718075484037, -0.006828662473708391, -5.578839045483619e-05, -0.004435937851667404, -0.0016294547822326422, -0.024713989347219467, -0.08172668516635895, -0.042701367288827896, -0.0032759830355644226, -0.15310561656951904, -0.00042965717148035765, -0.20456817746162415, -1.3454086780548096, -0.14879295229911804, -0.20887231826782227, -0.010848472826182842, -0.003394795348867774, -0.011177541688084602, -0.010575797408819199, -0.0031811606604605913, -0.12459234893321991, -0.0003163314249832183, -0.02429068647325039, -0.0004843492351938039, -0.010022198781371117, -0.01784355565905571, -0.0005611990345641971, -0.0028047531377524137, -0.0007850425899960101, -0.0003607814433053136, -0.0012438902631402016, -1.5616295058862306e-05, -0.00017653337272349745, -0.0004536076739896089, -0.014399897307157516, -0.11559779196977615, -0.2533724904060364, -0.03543343394994736, -0.015865284949541092, -2.9682672902708873e-05, -6.937739817658439e-05, -2.3483953555114567e-05, -1.0728830375228426e-06, -2.3841574147809297e-05, -0.026320070028305054, -0.0013178244698792696, -0.012572906911373138, -0.0012969900853931904, -0.4208887815475464, -4.7205765440594405e-05, -0.00015054999676067382, -0.00047922570956870914, -0.00014935807848814875, -0.0015955348499119282, -0.0013262771535664797, -3.802703940891661e-05, -0.5761957168579102, -0.025350291281938553, -2.4118876457214355, -1.8357599973678589, -1.9922536611557007, -1.6287727355957031, -1.402793526649475, -0.003072781255468726, -0.3605979382991791, -3.0627527236938477, -0.6706559658050537, -0.031329721212387085, -0.04300425201654434, -0.010387405753135681, -0.11690707504749298, -0.005061431787908077, -1.0965332984924316, -0.004113427828997374, -0.5769872069358826, -0.4276997447013855, -0.17893090844154358, -0.002654126612469554, -1.190407156944275, -0.008311444893479347, -0.13903853297233582, -0.2963373064994812, -0.04282940924167633, -0.026269791647791862, -0.0003446938644628972, -0.0027700408827513456, -0.04618228226900101, -0.002654126612469554, -0.0002631794777698815, -3.576278118089249e-07, -0.0002779574424494058, -0.03483022376894951, -2.992108420585282e-05, -0.029326114803552628, -0.06815657764673233, -0.09323587268590927, -0.003426991170272231, -0.13074754178524017, -0.0002525725867599249, -0.14497722685337067, -0.007177283521741629, -0.01861085742712021, -2.4914430468925275e-05, -4.768370445162873e-07, -0.20321564376354218, -0.006294900085777044, -0.004757395014166832, -0.40022504329681396, -0.4288657307624817, -0.01059313677251339, -0.0032214433886110783, -0.15718403458595276, -0.000806602300144732, -0.19183863699436188, -1.7981977462768555, -0.20234064757823944, -1.6903568506240845, -0.34025320410728455, -0.2727147042751312, -2.324648857116699, -2.9865033626556396, -1.1305058002471924, -4.174438953399658, -2.1240451335906982, -2.8334896564483643, -1.286651372909546, -1.1431039571762085, -0.8620359301567078, -0.002818542532622814, -0.7238525748252869, -0.004711953457444906, -0.9736183285713196, -1.1849514245986938, -0.21285347640514374, -0.0072603668086230755, -0.9320980906486511, -0.7889782786369324, -0.11945565044879913, -1.0144226551055908, -0.06294362246990204, -0.006545295473188162], "finish_reason": "length"}], "metrics": {"energy": 429.02778153991704, "energy_per_token": 1.675889771640301, "time": 13.577425, "time_per_token": 0.05303681640625}}
{"outputs": [{"text": "# Get the number of files found in the source directory\n    file_count = len(os.listdir(source_directory))\n\n    # If the target directory does not exist, create it\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # Loop through each file in the source directory\n    for filename in os.listdir(source_directory):\n        # Get the file's path\n        filepath = os.path.join(source_directory, filename)\n\n        # If the file is not a directory (i.e., it is a file)\n        if os.path.isfile(filepath):\n            # Get the file extension\n            extension = os.path.splitext(filename)[1].lower()\n\n            # Convert the file to a CSV\n            if extension == \".txt\":\n                df = pd.read_text(filepath, encoding=\"utf-8\")\n            elif extension == \".docx\":\n                doc = docx.Document(filepath)\n                df = pd.DataFrame()\n                for i", "tokens": ["#", " Get", " the", " number", " of", " files", " found", " in", " the", " source", " directory", "\n", "    ", "file", "_", "count", " =", " len", "(", "os", ".", "list", "dir", "(", "source", "_", "directory", "))", "\n", "\n", "    ", "#", " If", " the", " target", " directory", " does", " not", " exist", ",", " create", " it", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Loop", " through", " each", " file", " in", " the", " source", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "#", " Get", " the", " file", "'", "s", " path", "\n", "        ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", "\n", "\n", "        ", "#", " If", " the", " file", " is", " not", " a", " directory", " (", "i", ".", "e", ".", ",", " it", " is", " a", " file", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "path", "):", "\n", "            ", "#", " Get", " the", " file", " extension", "\n", "            ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "]", ".", "lower", "()", "\n", "\n", "            ", "#", " Convert", " the", " file", " to", " a", " CS", "V", "\n", "            ", "if", " extension", " ==", " \"", ".", "txt", "\":", "\n", "                ", "df", " =", " pd", ".", "read", "_", "text", "(", "file", "path", ",", " encoding", "=", "\"", "utf", "-", "8", "\"", ")", "\n", "            ", "elif", " extension", " ==", " \"", ".", "doc", "x", "\":", "\n", "                ", "doc", " =", " doc", "x", ".", "Document", "(", "file", "path", ")", "\n", "                ", "df", " =", " pd", ".", "DataFrame", "()", "\n", "                ", "for", " i"], "logprobs": [-1.2732598781585693, -3.816331386566162, -0.7831471562385559, -3.098165512084961, -0.00454559363424778, -0.2891777455806732, -2.7094621658325195, -0.342250257730484, -0.06693828105926514, -0.08269084990024567, -0.028003331273794174, -0.1804366111755371, -0.004132541362196207, -1.5995875597000122, -0.012091434560716152, -0.1320534497499466, -0.04823876544833183, -0.9176182150840759, -0.13140326738357544, -1.1844792366027832, -4.60137271147687e-05, -0.0021415650844573975, -1.4305012882687151e-05, -0.0005012686015106738, -0.006956287194043398, -7.688703772146255e-05, -7.199982064776123e-05, -0.0009417866240255535, -0.008606839925050735, -0.3679916262626648, -0.0007089247228577733, -0.28588661551475525, -3.0022101402282715, -0.1760515421628952, -0.23019176721572876, -0.019447021186351776, -0.21877028048038483, -0.0005082983989268541, -0.008241808973252773, -0.015590453520417213, -0.02911308780312538, -0.008291110396385193, -0.09244301170110703, -0.000432278640801087, -0.27785372734069824, -0.00708792032673955, -0.03220726549625397, -7.748573807475623e-06, -0.00017105070583056659, -0.0041857254691421986, -0.25296759605407715, -0.00025555206229910254, -0.0009201106731779873, -3.2186455882765586e-06, -3.671578815556131e-05, -0.004487088415771723, -0.0016740844585001469, -0.0013062763027846813, -0.059422943741083145, -0.00026842328952625394, -0.10294710099697113, -2.2053474822314456e-05, -0.0007715824176557362, -0.0001528146385680884, -0.0017822586232796311, -1.6569954823353328e-05, -1.3112935448589269e-05, -0.03734274208545685, -0.007702058181166649, -0.04209750145673752, -0.002315104240551591, -0.18292561173439026, -2.2819604873657227, -0.22922007739543915, -0.8296297192573547, -0.031952016055583954, -0.35983118414878845, -0.011381932534277439, -0.014458765275776386, -0.0016387379728257656, -0.11115778982639313, -0.0007198841194622219, -0.28116974234580994, -1.6841940879821777, -0.0014257990987971425, -0.02810637652873993, -0.0007525234250351787, -0.0005009111482650042, -1.1920928244535389e-07, -7.509902934543788e-05, -0.0010125277331098914, -1.9788545614574105e-05, -4.291525328881107e-06, -0.00021526881027966738, -0.0009510761592537165, -0.14749927818775177, -0.6771326065063477, -1.124369502067566, -0.04538140073418617, -1.5765191316604614, -1.679076910018921, -0.00013171759201213717, -0.758339524269104, -0.2841385304927826, -0.00016783259343355894, -0.2501010298728943, -0.879029393196106, -0.002903533633798361, -0.037634968757629395, -7.033323527139146e-06, -1.0967194612021558e-05, -0.0009267802815884352, -0.0001546025014249608, -5.340433563105762e-05, -0.0010970771545544267, -2.7417760065873154e-05, -6.794906312279636e-06, -0.00010692501382436603, -0.0011857867939397693, -4.482168878894299e-05, -0.00034564718953333795, -0.13414114713668823, -0.0005629861843772233, -0.03127022087574005, -1.0755233764648438, -0.03209967911243439, -0.013447770848870277, -0.11977433413267136, -1.6223336458206177, -0.10074317455291748, -0.23270387947559357, -3.5939536094665527, -0.7265011668205261, -5.2689116273541003e-05, -0.00028939827461726964, -0.008679522201418877, -0.1487327516078949, -0.5687996745109558, -0.8164675831794739, -0.13663135468959808, -0.10692349821329117, -0.03175952285528183, -0.6176290512084961, -0.0004223884898237884, -0.021560801193118095, -0.3028770089149475, -5.483612312673358e-06, -2.7894584491150454e-05, -0.0002786724944598973, -0.000358159770257771, -0.0013566347770392895, -2.7656173188006505e-05, -0.0007352509419433773, -5.07818695041351e-05, -0.016135817393660545, -0.0024968183133751154, -0.05711951106786728, -0.07204210758209229, -0.5964598655700684, -0.06396564841270447, -0.1616237461566925, -1.6314777135849, -0.24711836874485016, -0.0005608416395261884, -0.6839342713356018, -0.0034708278253674507, -0.16948485374450684, -2.861018856492592e-06, -8.451581379631534e-05, -0.0004941195948049426, -0.00029488030122593045, -2.038458114839159e-05, -3.576278118089249e-07, -5.018585216021165e-05, -0.19993481040000916, -0.06694519519805908, -0.0003066784702241421, -0.035707928240299225, -1.0347074270248413, -0.18843835592269897, -0.016756383702158928, -0.025192445144057274, -0.14252406358718872, -0.002419879427179694, -0.04953722655773163, -1.6941931247711182, -0.23259194195270538, -0.02965540997684002, -0.5582966208457947, -1.1161818504333496, -0.10639139264822006, -3.373566141817719e-05, -1.1540151834487915, -0.0017810686258599162, -0.12461791932582855, -0.0201248899102211, -0.1702958643436432, -2.2482388019561768, -0.010196971707046032, -0.10340245813131332, -0.030947811901569366, -0.01909937709569931, -0.0021158705931156874, -1.9487437009811401, -0.029670339077711105, -0.07255488634109497, -0.0006519814487546682, -0.04753490909934044, -6.329813186312094e-05, -1.0984678268432617, -0.001279250718653202, -0.12787050008773804, -0.0006791430641897023, -1.4013793468475342, -0.4626806080341339, -1.2106239795684814, -0.006412169896066189, -0.08892691135406494, -0.04670188948512077, -0.012881520204246044, -0.01260045263916254, -0.24323736131191254, -0.020801013335585594, -0.4645196199417114, -0.015490923076868057, -0.004712783731520176, -0.10528792440891266, -0.006771829444915056, -0.0011984078446403146, -0.21597172319889069, -0.005404741503298283, -0.02140223979949951, -0.0020666210912168026, -0.0012407946633175015, -0.38646554946899414, -0.1429561823606491, -0.012830444611608982, -0.0011726891389116645, -0.0008768765837885439, -0.03154608979821205, -0.00014149141497910023, -0.011934779584407806, -4.303362584323622e-05, -0.0049529001116752625, -0.010442852973937988, -0.021557651460170746, -0.47872018814086914, -0.018102431669831276, -0.04287954419851303, -0.00013386306818574667, -0.12145323306322098, -2.0034592151641846, -0.006684798281639814, -0.06270449608564377, -0.1086810901761055, -2.629518508911133], "finish_reason": "length"}], "metrics": {"energy": 376.8885736999512, "energy_per_token": 1.4722209910154345, "time": 12.1040325, "time_per_token": 0.047281376953125}}
{"outputs": [{"text": "# Create a Path object from the source directory and check its existence\n    source_dir_path = Path(source_directory)\n    if not source_dir_path.exists():\n        raise FileNotFoundError(f\"Source directory '{source_directory}' does not exist.\")\n\n    # Create a Path object from the target directory and check its existence\n    target_dir_path = Path(target_directory)\n    if not target_dir_path.exists():\n        target_dir_path.mkdir(parents=True)\n\n    # Get a list of all files in the source directory\n    files = [f.name for f in source_dir_path.iterdir() if f.is_file() and f.suffix in ['.txt', '.docx', '.xlsx', '.csv']]\n    print(files)\n\n    # Loop through all files in the source directory and convert them to CSV files\n    for file_name in files:\n        source_file = Path(source_dir_path / file_name)\n        csv_file = Path(target_dir_path / f", "tokens": ["#", " Create", " a", " Path", " object", " from", " the", " source", " directory", " and", " check", " its", " existence", "\n", "    ", "source", "_", "dir", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "dir", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " Path", " object", " from", " the", " target", " directory", " and", " check", " its", " existence", "\n", "    ", "target", "_", "dir", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " target", "_", "dir", "_", "path", ".", "exists", "():", "\n", "        ", "target", "_", "dir", "_", "path", ".", "mk", "dir", "(", "parents", "=", "True", ")", "\n", "\n", "    ", "#", " Get", " a", " list", " of", " all", " files", " in", " the", " source", " directory", "\n", "    ", "files", " =", " [", "f", ".", "name", " for", " f", " in", " source", "_", "dir", "_", "path", ".", "iter", "dir", "()", " if", " f", ".", "is", "_", "file", "()", " and", " f", ".", "suff", "ix", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "]", "\n", "    ", "print", "(", "files", ")", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " the", " source", " directory", " and", " convert", " them", " to", " CS", "V", " files", "\n", "    ", "for", " file", "_", "name", " in", " files", ":", "\n", "        ", "source", "_", "file", " =", " Path", "(", "source", "_", "dir", "_", "path", " /", " file", "_", "name", ")", "\n", "        ", "csv", "_", "file", " =", " Path", "(", "target", "_", "dir", "_", "path", " /", " f"], "logprobs": [-1.2732598781585693, -2.617819309234619, -0.7566643357276917, -1.2382879257202148, -0.11294128745794296, -1.857270359992981, -0.1047225296497345, -0.13178786635398865, -0.19854919612407684, -2.474196434020996, -1.4288110733032227, -2.188847064971924, -0.030712123960256577, -0.32231324911117554, -0.0008762810612097383, -0.13904733955860138, -0.04602939635515213, -1.1335639953613281, -0.8699873089790344, -0.014247128739953041, -0.060976747423410416, -0.005599646363407373, -0.0008198237628675997, -0.002053178148344159, -3.266281055402942e-05, -1.2755313036905136e-05, -0.0010145523119717836, -0.04017103463411331, -0.024125108495354652, -0.013867810368537903, -0.03868867829442024, -0.026614952832460403, -2.396077979938127e-05, -3.0040289857424796e-05, -4.327203714638017e-05, -8.821448318485636e-06, -6.103329360485077e-05, -0.1339728832244873, -0.002442830940708518, -0.011854557320475578, -0.0008095800876617432, -0.03654118627309799, -0.002021889900788665, -5.709961988031864e-05, -1.8358061424805783e-05, -0.24530437588691711, -0.26643526554107666, -0.13433824479579926, -0.48948946595191956, -0.02312629111111164, -1.0424096584320068, -8.5588610090781e-05, -0.00129413278773427, -7.045020902296528e-05, -0.2605760395526886, -0.001213648240081966, -0.6988899111747742, -0.0001760566228767857, -0.0015930355293676257, -0.15819193422794342, -0.005488208960741758, -0.0001012035645544529, -0.002313201315701008, -0.03743265941739082, -0.0010039533954113722, -0.07854233682155609, -0.4141738712787628, -0.1113576665520668, -0.07483302801847458, -0.0024833811912685633, -0.04982998967170715, -0.004119482357054949, -0.005147062707692385, -0.0029472745954990387, -0.40355992317199707, -0.5224943161010742, -0.2121124416589737, -0.02487214282155037, -0.20456895232200623, -0.0005318895564414561, -0.07879477739334106, -0.0001209901092806831, -0.0050568063743412495, -0.005939689930528402, -0.0007519278442487121, -0.001562208984978497, -0.0006151691195555031, -0.00021634146105498075, -0.00096941675292328, -2.658331868587993e-05, -4.434487345861271e-05, -0.00012265883560758084, -0.0075055514462292194, -0.014262054115533829, -0.11519831418991089, -0.05264144018292427, -0.007643500808626413, -0.0002824861148837954, -7.92710343375802e-05, -4.6491513785440475e-06, -4.768370445162873e-07, -1.2636104656849056e-05, -0.01691603660583496, -0.0008183944155462086, -0.007831582799553871, -0.0013950864085927606, -0.4109119474887848, -2.52720492426306e-05, -0.0002022777043748647, -0.0006098079611547291, -0.00013040646445006132, -0.0024812407791614532, -0.0016437364974990487, -5.221230458118953e-05, -0.29899030923843384, -0.08489491045475006, -0.0037017411086708307, -0.002227089600637555, -0.13919463753700256, -0.10798856616020203, -0.17813874781131744, -0.0026736250147223473, -0.20267370343208313, -1.5640640258789062, -0.7794690132141113, -0.010296204127371311, -0.001994050806388259, -0.5201602578163147, -0.5364845991134644, -0.20649456977844238, -0.017189214006066322, -0.021804139018058777, -0.0029859028290957212, -1.1462063789367676, -0.00021169328829273582, -2.1944479942321777, -0.3279036283493042, -1.1248300075531006, -0.8221966028213501, -1.8345322608947754, -0.1360861212015152, -0.007057026028633118, -0.00010501786891836673, -0.00018785618885885924, -0.11063935607671738, -4.2914423829643056e-05, -4.351044481154531e-05, -3.0397906812140718e-05, -8.344646857949556e-07, -1.4543427823809907e-05, -0.19724418222904205, -0.0003301552205812186, -0.00011240804451517761, -0.5564209818840027, -0.04269063100218773, -0.001484721782617271, -0.1561974436044693, -2.3841855067985307e-07, -4.0649541915627196e-05, -0.0010303908493369818, -2.640641927719116, -0.33071696758270264, -0.0011611393420025706, -0.0750160813331604, -9.321732068201527e-05, -0.8255752325057983, -0.5198596119880676, -0.008940072730183601, -0.0286044143140316, -0.0018810213077813387, -0.00015007323236204684, -0.017436780035495758, -0.0008993871742859483, -0.023754524067044258, -0.0025490194093436003, -0.007511467207223177, -0.00018821375851985067, -0.020600758492946625, -0.0028660909738391638, -0.03393089771270752, -0.0008355463505722582, -0.0026825417298823595, -0.007413614075630903, -0.00016604475968051702, -0.009983958676457405, -0.0005451146862469614, -0.009554609656333923, -0.03532906994223595, -0.00975708942860365, -0.0047532422468066216, -2.4178225994110107, -1.9138925075531006, -0.06315348297357559, -0.9763091802597046, -0.010994686745107174, -0.04535200819373131, -0.43988311290740967, -0.0014336556196212769, -0.1856028139591217, -2.107773542404175, -0.19669340550899506, -1.787104845046997, -0.2119103968143463, -0.5502535700798035, -0.02681017853319645, -0.025931714102625847, -0.0025450955145061016, -1.3990702629089355, -0.2229824662208557, -0.09378250688314438, -0.20216146111488342, -0.00803961418569088, -0.015092701651155949, -0.5138494968414307, -0.0798519179224968, -0.002160359639674425, -2.3157572746276855, -0.24984653294086456, -0.9444605708122253, -0.014048730954527855, -0.001192454481497407, -0.0010773098329082131, -0.00016985881666187197, -0.0024108411744236946, -0.04188603535294533, -2.1223673820495605, -0.00979793444275856, -0.2332160919904709, -1.6927944421768188, -1.686159610748291, -0.01066343393176794, -0.10185231268405914, -6.41325386823155e-05, -0.16977792978286743, -4.851700214203447e-05, -4.887569048150908e-06, -0.7956386208534241, -0.01225253939628601, -2.6464111215318553e-05, -1.8954096958623268e-05, -0.0003933132975362241, -0.052287161350250244, -0.04422204568982124, -2.3074657917022705, -0.000825898430775851, -0.1120302751660347, -0.1295461356639862, -0.14033189415931702, -0.002337939338758588, -0.009666775353252888, -2.3841830625315197e-06, -0.00024863966973498464, -8.106198947643861e-06, -1.1920928244535389e-07, -0.004620826803147793, -0.4603714048862457], "finish_reason": "length"}], "metrics": {"energy": 377.0539584751127, "energy_per_token": 1.472867025293409, "time": 12.088611, "time_per_token": 0.04722113671875}}
{"outputs": [{"text": "try:\n        # Check if source directory exists\n        if not os.path.isdir(source_directory):\n            raise FileNotFoundError(f\"Directory {source_directory} not found.\")\n    except Exception as e:\n        print(f\"ERROR: {e}\")\n        return 0\n    try:\n        os.makedirs(target_directory, exist_ok=True)\n    except Exception as e:\n        print(f\"ERROR: {e}\")\n        return 0\n    try:\n        # Create target directory if it doesn't exist\n        if not os.path.isdir(target_directory):\n            os.makedirs(target_directory, exist_ok=True)\n    except Exception as e:\n        print(f\"ERROR: {e}\")\n        return 0\n    # Create a list to store file extensions to convert\n    extensions = ['.txt', '.docx', '.xlsx', '.csv']\n\n    # Check each file in source directory for a matching extension\n    for filename in os.listdir(source_directory):\n        ", "tokens": ["try", ":", "\n", "        ", "#", " Check", " if", " source", " directory", " exists", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "            ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "source", "_", "directory", "}", " not", " found", ".", "\"", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "ERROR", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " ", "0", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "ERROR", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " ", "0", "\n", "    ", "try", ":", "\n", "        ", "#", " Create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "ERROR", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " ", "0", "\n", "    ", "#", " Create", " a", " list", " to", " store", " file", " extensions", " to", " convert", "\n", "    ", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "\n", "    ", "#", " Check", " each", " file", " in", " source", " directory", " for", " a", " matching", " extension", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        "], "logprobs": [-2.820483922958374, -0.0011510183103382587, -0.012782308273017406, -0.011038429103791714, -1.854494571685791, -1.1900252103805542, -0.1844126284122467, -0.9516317844390869, -0.22015216946601868, -0.018848830834031105, -0.2109997421503067, -0.0007564543629996479, -0.48787468671798706, -0.0838213860988617, -0.11560247093439102, -6.794906312279636e-06, -0.000228140561375767, -0.005862422753125429, -1.4707610607147217, -0.0011592342052608728, -0.00026043839170597494, -0.00282947882078588, -0.00029869386344216764, -7.033100700937212e-05, -0.0018789985915645957, -0.006379240658134222, -0.0008117241668514907, -0.03309211507439613, -0.00783655047416687, -8.95221673999913e-05, -1.4543427823809907e-05, -0.49313512444496155, -0.48401904106140137, -0.16371089220046997, -1.325298547744751, -0.7600528001785278, -0.00152757263276726, -0.0001705739414319396, -0.0001433984871255234, -0.016636217013001442, -0.5641719102859497, -0.0026106107980012894, -0.39764100313186646, -0.025315772742033005, -0.00010966652916977182, -0.002801305614411831, -1.632462739944458, -0.018796302378177643, -2.107818365097046, -0.07829687744379044, -0.1479252427816391, -0.0009241600637324154, -0.023561496287584305, -0.0014676999999210238, -0.28041622042655945, -0.01132205780595541, -0.3418217897415161, -0.016227073967456818, -3.2410199642181396, -0.16618457436561584, -0.11348407715559006, -0.24170346558094025, -0.13944654166698456, -0.004395110532641411, -0.02811553329229355, -0.17857040464878082, -0.21543867886066437, -0.4302496016025543, -0.019716354086995125, -0.027618642896413803, -1.1424357891082764, -1.635929822921753, -0.00021681819634977728, -0.0019471748964861035, -0.006677101366221905, -2.8132882118225098, -0.0005614373367279768, -0.28474730253219604, -1.3708974620385561e-05, -0.0007503792876377702, -0.0015416176756843925, -0.019933030009269714, -1.7046782886609435e-05, -0.00010287232726113871, -0.07178395241498947, -0.011782576330006123, -1.1920928244535389e-07, -0.00016735584358684719, -0.005328144412487745, -0.004369355272501707, -0.0005855038180015981, -0.2799926698207855, -0.06545446068048477, -0.003330638399347663, -0.27397167682647705, -0.017475906759500504, -0.0038364159408956766, -0.00481790117919445, -0.005504095461219549, -0.00047874910524114966, -0.012020648457109928, -0.0009311868925578892, -0.011091010645031929, -0.0018475858960300684, -0.020975196734070778, -0.008478124625980854, -0.03555067256093025, -0.001479603466577828, -0.021236533299088478, -0.00034850722295232117, -0.0007470439304597676, -0.07484088093042374, -0.00913535337895155, -0.001520549994893372, -0.0006490031373687088, -0.0011379201896488667, -0.44634029269218445, -1.2490886449813843, -0.0001463782973587513, -0.0029541682451963425, -0.009518359787762165, -1.0017319917678833, -2.697706699371338, -2.8435633182525635, -0.2898790240287781, -0.14262133836746216, -0.17404010891914368, -0.3795783519744873, -0.0005009111482650042, -1.0251946150674485e-05, -0.043348249047994614, -0.08064547181129456, -0.013598661869764328, -0.6404789686203003, -0.04963523894548416, -0.01528901420533657, -8.22540732769994e-06, -0.000256982195423916, -0.0008827127167023718, -0.3144969940185547, -0.000910344475414604, -0.00021526881027966738, -0.007416335865855217, -1.5258672647178173e-05, -5.3165931603871286e-05, -0.006668930407613516, -0.005294231232255697, -0.0019850090611726046, -0.05827357620000839, -0.00020001317898277193, -0.21556302905082703, -5.98412734689191e-05, -0.0007649118197150528, -0.00022480344341602176, -0.0018064148025587201, -1.585470999998506e-05, -4.351044481154531e-05, -0.6431741118431091, -0.005063922610133886, -6.9141146923357155e-06, -3.576278118089249e-07, -0.0006292270263656974, -0.03595612570643425, -0.0009009354980662465, -0.004516163375228643, -0.6979250907897949, -0.0015372138004750013, -0.019077973440289497, -0.0021872424986213446, -0.0015705404803156853, -0.00022539935889653862, -0.0012762743281200528, -0.0005138983833603561, -0.004808173049241304, -0.0005042473785579205, -0.004402113147079945, -0.00038795097498223186, -0.0031724858563393354, -0.0007904027588665485, -0.0024802894331514835, -0.00035613393993116915, -0.0029496517963707447, -0.00015937011630740017, -0.000226472009671852, -0.013263683766126633, -0.0027133338153362274, -0.0012479382567107677, -0.0005418977816589177, -0.00037448544753715396, -0.3999325931072235, -1.0685527324676514, -2.3942298889160156, -0.8552055954933167, -0.4950425326824188, -1.7559336423873901, -0.15323132276535034, -1.2473294734954834, -2.7234785556793213, -1.3853410482406616, -1.3117940425872803, -0.1612621247768402, -0.003661715192720294, -0.9932525753974915, -0.566128671169281, -0.48671963810920715, -0.5072206854820251, -0.07203245162963867, -0.008759408257901669, -0.0001811817055568099, -0.014809083193540573, -0.0028309053741395473, -0.04670826345682144, -0.00991467572748661, -0.01108488067984581, -0.00012420836719684303, -0.006032473873347044, -0.0020887479186058044, -0.04302731528878212, -0.001260677701793611, -0.006967059802263975, -0.006930834613740444, -4.1483970562694594e-05, -0.0036347531713545322, -0.0008762810612097383, -0.03296881914138794, -0.10675380378961563, -0.0058440533466637135, -1.921396017074585, -0.0013296105898916721, -0.3627452552318573, -2.882396936416626, -2.23354434967041, -0.05782408267259598, -0.1004893034696579, -0.9991596937179565, -0.0515713170170784, -1.7950644493103027, -3.3871283531188965, -0.5749517679214478, -0.054545074701309204, -0.3085781931877136, -0.0009046276099979877, -0.5182536244392395, -1.7005836963653564, -0.007314449641853571, -0.39633744955062866, -0.00024077377747744322, -0.0006194579764269292, -8.344646857949556e-07, -0.00024423000286333263, -0.0030370086897164583, -2.3007127310847864e-05, -1.645074735279195e-05, -0.0002834395272657275, -0.0020233176182955503, -0.011932069435715675], "finish_reason": "length"}], "metrics": {"energy": 370.39117758178696, "energy_per_token": 1.4468405374288553, "time": 12.106548, "time_per_token": 0.047291203125}}
