{"outputs": [{"text": " re.split(\"[^a-zA-Z]+\", text)", "tokens": [" re", ".", "split", "(", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "]+", "\"", ",", " text", ")", "\n"], "logprobs": [-0.2794874608516693, -0.0001461399078834802, -2.341663122177124, -0.10323721915483475, -1.6198893785476685, -1.1889930963516235, -0.47269973158836365, -0.17152345180511475, -0.00029905137489549816, -0.00044276448898017406, -0.1149689182639122, -8.308542601298541e-05, -0.0026214304380118847, -1.0655698776245117, -0.0016236230731010437, -0.0005298641044646502, -0.024708406999707222, -0.21783582866191864, -0.09091506153345108], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06], "finish_reason": "stop"}], "metrics": {"energy": 98.13246799278257, "energy_per_token": 1.924166039074168, "time": 3.7821884, "time_per_token": 0.0741605568627451}}
{"outputs": [{"text": " re.findall(r'\\w+', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.9772535562515259, -0.1095251813530922, -0.019652416929602623, -5.5549986427649856e-05, -0.01631949469447136, -0.20899111032485962, -0.06369298696517944], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06, -0.8032627105712891], "finish_reason": "stop"}], "metrics": {"energy": 59.02526501464844, "energy_per_token": 1.2831579351010531, "time": 2.5187645, "time_per_token": 0.05475575}}
{"outputs": [{"text": " re.sub(r\"[^\\w\\s]\", \"\", text).split()", "tokens": [" re", ".", "sub", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ",", " text", ")", ".", "split", "()", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -1.887852430343628, -0.08146783709526062, -0.3089025616645813, -0.2806221544742584, -0.42954906821250916, -0.4495401680469513, -0.0025609098374843597, -0.5323055386543274, -0.010721579194068909, -0.07442843168973923, -0.0003856868715956807, -0.054147426038980484, -0.3960762619972229, -0.00039414744242094457, -0.02586132101714611, -0.07780832052230835, -0.2649705111980438, -1.063377857208252, -0.05870983004570007, -0.09611843526363373], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-2.4223709106445312, -0.0008180370787158608, -0.001731802592985332, -0.0002420847595203668, -0.06373313814401627], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.009018520824611187, -1.1920858014491387e-05, -7.390948667307384e-06, -0.7478502988815308], "finish_reason": "stop"}], "metrics": {"energy": 61.74641533470154, "energy_per_token": 1.286383652806282, "time": 2.726696, "time_per_token": 0.056806166666666665}}
{"outputs": [{"text": " re.sub(r\"[^\\w]\", \" \", text).lower().split()", "tokens": [" re", ".", "sub", "(", "r", "\"", "[", "^\\", "w", "]\"", ",", " \"", " \"", ",", " text", ")", ".", "lower", "()", ".", "split", "()", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -1.887852430343628, -0.08146783709526062, -0.3089025616645813, -0.2806221544742584, -0.42954906821250916, -0.4495401680469513, -0.0025609098374843597, -1.0284125804901123, -0.0005317704635672271, -0.02574026770889759, -0.017466887831687927, -0.0003695997002068907, -0.015588458627462387, -0.07779001444578171, -0.22843396663665771, -0.6542836427688599, -0.0016023189527913928, -0.06586571782827377, -0.12815064191818237, -0.03192095458507538, -0.039113953709602356], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06, -0.8032627105712891], "finish_reason": "stop"}], "metrics": {"energy": 64.63795883750915, "energy_per_token": 1.1542492649555205, "time": 2.9237514, "time_per_token": 0.052209846428571426}}
{"outputs": [{"text": " re.findall(r'\\w+', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.9772535562515259, -0.1095251813530922, -0.019652416929602623, -5.5549986427649856e-05, -0.01631949469447136, -0.20899111032485962, -0.06369298696517944], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -1.5034070014953613, -0.09233443439006805, -0.0005220004240982234, -0.0002172949316445738, -0.014936516061425209, -0.0022182876709848642, -0.03446105495095253, -0.008910181000828743, -1.8954096958623268e-05, -0.004280690103769302, -4.768370445162873e-07, -2.658331868587993e-05, -1.6331539882230572e-05, -8.106198947643861e-06, -0.0020060669630765915, -0.005639239214360714], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.12189824134111404, -0.00015054999676067382, -0.0070637729950249195, -0.011678660288453102, -0.08301269263029099, -0.010423151776194572, -0.0056269108317792416, -0.006872942205518484, -2.0265558760002023e-06, -0.0021527467761188745, -0.026609381660819054, -0.05059162154793739], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007700875401496887, -1.5616295058862306e-05, -8.22540732769994e-06, -0.8224242329597473], "finish_reason": "stop"}], "metrics": {"energy": 62.01907797622681, "energy_per_token": 1.3482408255701481, "time": 2.7304885, "time_per_token": 0.05935844565217391}}
{"outputs": [{"text": " re.findall(r\"\\w+\", text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.4970899820327759, -0.2435448318719864, -0.06547801941633224, -0.25500398874282837, -0.011132155545055866, -0.00013350549852475524, -0.016835860908031464, -1.41282057762146, -0.009793920442461967, -0.013077444396913052, -0.060527004301548004], "finish_reason": "stop"}, {"text": " [word.lower() for word in words if word not in STOPWORDS]", "tokens": [" [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -2.4934680461883545, -1.339057207107544, -0.0004969792207702994, -0.010663198307156563, -0.00042381841922178864, -0.000362807244528085, -0.04815901815891266, -0.07427272200584412, -0.03114473633468151, -0.14009897410869598, -5.0424259825376794e-05, -0.003959911409765482, -4.768370445162873e-07, -2.2291887944447808e-05, -4.3748852476710454e-05, -9.059865078597795e-06, -0.007134082727134228, -0.0055058738216757774], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.10835777968168259, -9.417090768693015e-05, -0.006426383275538683, -0.0134924640879035, -0.11123181879520416, -0.010868637822568417, -0.004799868445843458, -0.00798970926553011, -1.6689286894688848e-06, -0.002201278228312731, -0.03126952424645424, -0.0624765120446682], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.00829985924065113, -1.0847986231965479e-05, -8.583032467868179e-06, -0.7838939428329468], "finish_reason": "stop"}], "metrics": {"energy": 73.80372151756286, "energy_per_token": 1.392523047501186, "time": 3.1527543, "time_per_token": 0.05948593018867924}}
{"outputs": [{"text": " re.findall(r\"\\w+\", text)", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.4970899820327759, -0.2435448318719864, -0.06547801941633224, -0.25500398874282837, -0.011132155545055866, -0.00013350549852475524, -0.016835860908031464, -0.30298206210136414, -0.058780986815690994], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06, -0.8032627105712891], "finish_reason": "stop"}], "metrics": {"energy": 61.178273900985715, "energy_per_token": 1.2745473729372023, "time": 2.7257085, "time_per_token": 0.05678559375}}
{"outputs": [{"text": " re.findall(r\"\\w+\", text)", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.4970899820327759, -0.2435448318719864, -0.06547801941633224, -0.25500398874282837, -0.011132155545055866, -0.00013350549852475524, -0.016835860908031464, -0.30298206210136414, -0.058780986815690994], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -1.5034070014953613, -0.09233443439006805, -0.0005220004240982234, -0.0002172949316445738, -0.014936516061425209, -0.0022182876709848642, -0.03446105495095253, -0.008910181000828743, -1.8954096958623268e-05, -0.004280690103769302, -4.768370445162873e-07, -2.658331868587993e-05, -1.6331539882230572e-05, -8.106198947643861e-06, -0.0020060669630765915, -0.005639239214360714], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.12189824134111404, -0.00015054999676067382, -0.0070637729950249195, -0.011678660288453102, -0.08301269263029099, -0.010423151776194572, -0.0056269108317792416, -0.006872942205518484, -2.0265558760002023e-06, -0.0021527467761188745, -0.026609381660819054, -0.05059162154793739], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007700875401496887, -1.5616295058862306e-05, -8.22540732769994e-06, -1.0278551578521729, -7.152555099310121e-07, -5.960462772236497e-07, -7.402622577501461e-05, -8.5588610090781e-05, -0.05208157002925873], "finish_reason": "stop"}], "metrics": {"energy": 106.47300627899166, "energy_per_token": 2.0089246467734276, "time": 2.9377103, "time_per_token": 0.055428496226415096}}
{"outputs": [{"text": " re.findall(r'\\w+', text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.9772535562515259, -0.1095251813530922, -0.019652416929602623, -5.5549986427649856e-05, -0.01631949469447136, -1.7254877090454102, -0.008976698853075504, -0.006976293865591288, -0.05682887136936188], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -1.5034070014953613, -0.09233443439006805, -0.0005220004240982234, -0.0002172949316445738, -0.014936516061425209, -0.0022182876709848642, -0.03446105495095253, -0.008910181000828743, -1.8954096958623268e-05, -0.004280690103769302, -4.768370445162873e-07, -2.658331868587993e-05, -1.6331539882230572e-05, -8.106198947643861e-06, -0.0020060669630765915, -0.005639239214360714], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.12189824134111404, -0.00015054999676067382, -0.0070637729950249195, -0.011678660288453102, -0.08301269263029099, -0.010423151776194572, -0.0056269108317792416, -0.006872942205518484, -2.0265558760002023e-06, -0.0021527467761188745, -0.026609381660819054, -0.05059162154793739], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts"], "logprobs": [-0.007700875401496887, -1.5616295058862306e-05, -8.22540732769994e-06], "finish_reason": "stop"}], "metrics": {"energy": 100.02158568954466, "energy_per_token": 2.128118844458397, "time": 2.731934, "time_per_token": 0.05812625531914893}}
{"outputs": [{"text": " re.findall(r\"\\w+\", text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.4970899820327759, -0.2435448318719864, -0.06547801941633224, -0.25500398874282837, -0.011132155545055866, -0.00013350549852475524, -0.016835860908031464, -1.41282057762146, -0.009793920442461967, -0.013077444396913052, -0.060527004301548004], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -1.5034070014953613, -0.09233443439006805, -0.0005220004240982234, -0.0002172949316445738, -0.014936516061425209, -0.0022182876709848642, -0.03446105495095253, -0.008910181000828743, -1.8954096958623268e-05, -0.004280690103769302, -4.768370445162873e-07, -2.658331868587993e-05, -1.6331539882230572e-05, -8.106198947643861e-06, -0.0020060669630765915, -0.005639239214360714], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.12189824134111404, -0.00015054999676067382, -0.0070637729950249195, -0.011678660288453102, -0.08301269263029099, -0.010423151776194572, -0.0056269108317792416, -0.006872942205518484, -2.0265558760002023e-06, -0.0021527467761188745, -0.026609381660819054, -0.05059162154793739], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007700875401496887, -1.5616295058862306e-05, -8.22540732769994e-06, -1.0278551578521729, -7.152555099310121e-07, -5.960462772236497e-07, -7.402622577501461e-05, -8.5588610090781e-05, -0.05208157002925873], "finish_reason": "stop"}], "metrics": {"energy": 75.19381459236145, "energy_per_token": 1.3671602653156627, "time": 3.1409786, "time_per_token": 0.05710870181818182}}
{"outputs": [{"text": " re.sub(\"[^\\w\\s]\", \"\", text).lower().strip().split()", "tokens": [" re", ".", "sub", "(", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ",", " text", ")", ".", "lower", "()", ".", "strip", "()", ".", "split", "()", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -1.887852430343628, -0.08146783709526062, -1.4890820980072021, -0.19200628995895386, -1.508461594581604, -0.0042397379875183105, -1.4367181062698364, -0.01292200293391943, -0.04789019376039505, -0.0004984090337529778, -0.030648771673440933, -0.4867057800292969, -0.00048565989709459245, -0.02983500063419342, -0.07556591182947159, -0.15879879891872406, -0.5203001499176025, -0.0014055621577426791, -0.067890964448452, -2.9380462169647217, -0.01404673233628273, -0.08901579678058624, -0.00873175635933876, -0.1141388788819313, -0.04582411050796509], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -1.5034070014953613, -0.09233443439006805, -0.0005220004240982234, -0.0002172949316445738, -0.014936516061425209, -0.0022182876709848642, -0.03446105495095253, -0.008910181000828743, -1.8954096958623268e-05, -0.004280690103769302, -4.768370445162873e-07, -2.658331868587993e-05, -1.6331539882230572e-05, -8.106198947643861e-06, -0.0020060669630765915, -0.005639239214360714], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.12189824134111404, -0.00015054999676067382, -0.0070637729950249195, -0.011678660288453102, -0.08301269263029099, -0.010423151776194572, -0.0056269108317792416, -0.006872942205518484, -2.0265558760002023e-06, -0.0021527467761188745, -0.026609381660819054, -0.05059162154793739], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007700875401496887, -1.5616295058862306e-05, -8.22540732769994e-06, -1.0278551578521729, -7.152555099310121e-07, -5.960462772236497e-07, -7.402622577501461e-05, -8.5588610090781e-05, -0.05208157002925873], "finish_reason": "stop"}], "metrics": {"energy": 88.97228670120238, "energy_per_token": 1.3688044107877289, "time": 3.567235, "time_per_token": 0.05488053846153847}}
{"outputs": [{"text": " re.findall(r'\\b[a-zA-Z0-9]+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "[", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.9772535562515259, -2.2989706993103027, -1.8558292388916016, -0.23405581712722778, -0.0001784403866622597, -0.0006957017467357218, -0.2901492714881897, -3.71926071238704e-05, -0.0015730400336906314, -1.5714654922485352, -0.0006002769805490971, -0.0002965487365145236, -0.6495847702026367, -0.021913189440965652, -0.0176863931119442, -0.009513518773019314, -0.00018904806347563863, -0.020246855914592743, -0.13496214151382446, -0.06370651721954346], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-2.4223709106445312, -0.0008180370787158608, -0.001731802592985332, -0.0002420847595203668, -0.06373313814401627], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts"], "logprobs": [-0.009018520824611187, -1.1920858014491387e-05, -7.390948667307384e-06], "finish_reason": "stop"}], "metrics": {"energy": 108.65713838577271, "energy_per_token": 2.1305321252112295, "time": 2.9522204, "time_per_token": 0.05788667450980392}}
{"outputs": [{"text": " re.findall(r\"\\w+'?\\w*|[a-z]\\w+\", text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+'", "?", "\\", "w", "*", "|", "[", "a", "-", "z", "]\\", "w", "+", "\"", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.4970899820327759, -0.2435448318719864, -0.06547801941633224, -2.9001474380493164, -0.2740548849105835, -1.5398296117782593, -0.020619209855794907, -1.026205062866211, -2.1481897830963135, -0.4921565353870392, -2.5834665298461914, -0.000129691296024248, -0.00048744716332294047, -1.5563371181488037, -0.005090490449219942, -0.21579468250274658, -0.08754201233386993, -0.00013648532330989838, -0.011182728223502636, -0.5779544115066528, -0.009171380661427975, -0.009664177894592285, -0.05040041729807854], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06, -0.8032627105712891], "finish_reason": "stop"}], "metrics": {"energy": 83.91902411842347, "energy_per_token": 1.3535326470713462, "time": 3.361969, "time_per_token": 0.05422530645161291}}
{"outputs": [{"text": " re.findall(r\"\\w+\", text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.4970899820327759, -0.2435448318719864, -0.06547801941633224, -0.25500398874282837, -0.011132155545055866, -0.00013350549852475524, -0.016835860908031464, -1.41282057762146, -0.009793920442461967, -0.013077444396913052, -0.060527004301548004], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06, -0.8032627105712891], "finish_reason": "stop"}], "metrics": {"energy": 101.23716304779052, "energy_per_token": 2.0247432609558103, "time": 2.7355556, "time_per_token": 0.054711112}}
{"outputs": [{"text": " re.findall(r'\\w+', text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.9772535562515259, -0.1095251813530922, -0.019652416929602623, -5.5549986427649856e-05, -0.01631949469447136, -1.7254877090454102, -0.008976698853075504, -0.006976293865591288, -0.05682887136936188], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -1.5034070014953613, -0.09233443439006805, -0.0005220004240982234, -0.0002172949316445738, -0.014936516061425209, -0.0022182876709848642, -0.03446105495095253, -0.008910181000828743, -1.8954096958623268e-05, -0.004280690103769302, -4.768370445162873e-07, -2.658331868587993e-05, -1.6331539882230572e-05, -8.106198947643861e-06, -0.0020060669630765915, -0.005639239214360714], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.12189824134111404, -0.00015054999676067382, -0.0070637729950249195, -0.011678660288453102, -0.08301269263029099, -0.010423151776194572, -0.0056269108317792416, -0.006872942205518484, -2.0265558760002023e-06, -0.0021527467761188745, -0.026609381660819054, -0.05059162154793739], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007700875401496887, -1.5616295058862306e-05, -8.22540732769994e-06, -1.0278551578521729, -7.152555099310121e-07, -5.960462772236497e-07, -7.402622577501461e-05, -8.5588610090781e-05, -0.05208157002925873], "finish_reason": "stop"}], "metrics": {"energy": 72.7937018585205, "energy_per_token": 1.3734660728022736, "time": 2.9415016, "time_per_token": 0.055500030188679245}}
{"outputs": [{"text": " re.findall(r\"[^\\W_]+\", text)", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "[", "^\\", "W", "_", "]+", "\"", ",", " text", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.4970899820327759, -2.192275285720825, -1.8915902376174927, -0.2004076987504959, -1.6397873163223267, -0.11708756536245346, -0.32540321350097656, -0.0001591317413840443, -0.018364986404776573, -0.23688019812107086, -0.0844280868768692], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06, -1.111074447631836, -8.344646857949556e-07, -4.768370445162873e-07, -0.00011324241495458409, -9.822363062994555e-05, -0.03971389681100845], "finish_reason": "stop"}], "metrics": {"energy": 98.17037827873229, "energy_per_token": 1.7849159687042233, "time": 2.9329438, "time_per_token": 0.053326250909090905}}
{"outputs": [{"text": " re.findall(r\"\\w+\", text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.4970899820327759, -0.2435448318719864, -0.06547801941633224, -0.25500398874282837, -0.011132155545055866, -0.00013350549852475524, -0.016835860908031464, -1.41282057762146, -0.009793920442461967, -0.013077444396913052, -0.060527004301548004], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06, -0.8032627105712891], "finish_reason": "stop"}], "metrics": {"energy": 67.31108707046509, "energy_per_token": 1.3462217414093018, "time": 2.730616, "time_per_token": 0.05461232}}
{"outputs": [{"text": " re.split(r'\\s+', text.lower())", "tokens": [" re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -1.9700610637664795, -0.112855464220047, -0.2369145303964615, -1.6180107593536377, -1.0444862842559814, -0.3464900255203247, -0.00010775939153973013, -0.012007220648229122, -2.5380303859710693, -0.044933367520570755, -0.04129311442375183, -0.08299294114112854], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06, -1.111074447631836, -8.344646857949556e-07, -4.768370445162873e-07, -0.00011324241495458409, -9.822363062994555e-05, -0.03971389681100845], "finish_reason": "stop"}], "metrics": {"energy": 100.68308724212646, "energy_per_token": 1.9362132161947396, "time": 2.912562, "time_per_token": 0.05601080769230769}}
{"outputs": [{"text": " re.findall(r'\\w+', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.9772535562515259, -0.1095251813530922, -0.019652416929602623, -5.5549986427649856e-05, -0.01631949469447136, -0.20899111032485962, -0.06369298696517944], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06], "finish_reason": "stop"}], "metrics": {"energy": 93.71685438919067, "energy_per_token": 2.0825967642042373, "time": 2.548779, "time_per_token": 0.05663953333333334}}
{"outputs": [{"text": " [word for word in re.split(r\"\\s+|-'\", text) if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " re", ".", "split", "(", "r", "\"", "\\", "s", "+|", "-'", "\"", ",", " text", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-2.330608606338501, -0.6356803178787231, -0.4417046308517456, -0.003504327731207013, -0.00189482350833714, -0.1444045454263687, -0.00013517419574782252, -1.7003779411315918, -0.11480218172073364, -0.19897067546844482, -0.3207849860191345, -0.32255375385284424, -1.6176832914352417, -3.0265839099884033, -2.3811264038085938, -0.27748456597328186, -0.0008500776602886617, -0.02136104926466942, -0.12548337876796722, -0.05168520659208298, -0.19035376608371735, -0.763361394405365, -7.283422019099817e-05, -0.004075674340128899, -4.768370445162873e-07, -1.811964830267243e-05, -2.0861407392658293e-05, -1.0132738680113107e-05, -0.08399315923452377, -0.014347253367304802], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-2.4223709106445312, -0.0008180370787158608, -0.001731802592985332, -0.0002420847595203668, -0.06373313814401627], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.009018520824611187, -1.1920858014491387e-05, -7.390948667307384e-06, -1.0744131803512573, -1.0728830375228426e-06, -5.960462772236497e-07, -0.0001006075763143599, -0.00010609064338495955, -0.04949604347348213], "finish_reason": "stop"}], "metrics": {"energy": 94.49569671249388, "energy_per_token": 1.5491097821720308, "time": 3.573088, "time_per_token": 0.058575213114754096}}
{"outputs": [{"text": " re.sub(\"[^A-Za-z]+\", \" \", text).lower().strip().split(\" \")", "tokens": [" re", ".", "sub", "(", "\"", "[", "^", "A", "-", "Z", "a", "-", "z", "]+", "\"", ",", " \"", " \"", ",", " text", ")", ".", "lower", "()", ".", "strip", "()", ".", "split", "(", "\"", " \"", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -1.887852430343628, -0.08146783709526062, -1.4890820980072021, -0.19200628995895386, -0.39223918318748474, -2.1006524562835693, -0.00013648532330989838, -0.004674578085541725, -0.0030096732079982758, -1.3112935448589269e-05, -6.842378934379667e-05, -2.093125820159912, -0.005952014587819576, -0.00032491172896698117, -0.06307290494441986, -0.019392071291804314, -0.00029666791670024395, -0.02607841044664383, -0.13795660436153412, -0.19414091110229492, -0.8398252129554749, -0.00313564739190042, -0.07281959801912308, -2.3805224895477295, -0.011792943812906742, -0.08953411877155304, -0.00791141763329506, -1.7305858135223389, -0.006448413711041212, -0.0008042200352065265, -0.008472805842757225, -0.03560163453221321], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06, -0.8032627105712891], "finish_reason": "stop"}], "metrics": {"energy": 85.49897878837584, "energy_per_token": 1.2761041610205348, "time": 3.3583913, "time_per_token": 0.05012524328358209}}
{"outputs": [{"text": " re.sub(r\"[^\\w\\s]\", \"\", text.lower()).split()", "tokens": [" re", ".", "sub", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ",", " text", ".", "lower", "())", ".", "split", "()", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -1.887852430343628, -0.08146783709526062, -0.3089025616645813, -0.2806221544742584, -0.42954906821250916, -0.4495401680469513, -0.0025609098374843597, -0.5323055386543274, -0.010721579194068909, -0.07442843168973923, -0.0003856868715956807, -0.054147426038980484, -0.3960762619972229, -0.00039414744242094457, -0.02586132101714611, -2.67730712890625, -0.025025390088558197, -0.017668824642896652, -0.14805632829666138, -0.0976063534617424, -0.06008885055780411, -0.044171292334795], "finish_reason": "stop"}, {"text": " [word.lower() for word in words if word not in STOPWORDS]", "tokens": [" [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -2.4934680461883545, -1.339057207107544, -0.0004969792207702994, -0.010663198307156563, -0.00042381841922178864, -0.000362807244528085, -0.04815901815891266, -0.07427272200584412, -0.03114473633468151, -0.14009897410869598, -5.0424259825376794e-05, -0.003959911409765482, -4.768370445162873e-07, -2.2291887944447808e-05, -4.3748852476710454e-05, -9.059865078597795e-06, -0.007134082727134228, -0.0055058738216757774], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.10835777968168259, -9.417090768693015e-05, -0.006426383275538683, -0.0134924640879035, -0.11123181879520416, -0.010868637822568417, -0.004799868445843458, -0.00798970926553011, -1.6689286894688848e-06, -0.002201278228312731, -0.03126952424645424, -0.0624765120446682], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.00829985924065113, -1.0847986231965479e-05, -8.583032467868179e-06, -1.1171115636825562, -8.344646857949556e-07, -4.768370445162873e-07, -8.844937838148326e-05, -9.178694017464295e-05, -0.04272729903459549], "finish_reason": "stop"}], "metrics": {"energy": 92.05111246299744, "energy_per_token": 1.4161709609691913, "time": 3.5562959, "time_per_token": 0.05471224461538461}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.9772535562515259, -2.2989706993103027, -0.23685075342655182, -0.031204821541905403, -0.14644645154476166, -0.004138715099543333, -0.0052745467983186245, -9.786603914108127e-05, -0.01813989318907261, -0.17169685661792755, -0.06005854159593582], "finish_reason": "stop"}, {"text": " [word.strip(\".,?!\") for word in words]", "tokens": [" [", "word", ".", "strip", "(", "\"", ".", ",", "?", "!", "\"", ")", " for", " word", " in", " words", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -2.4934680461883545, -0.4467288851737976, -0.12536591291427612, -0.19254322350025177, -0.4768761694431305, -0.27582475543022156, -1.3369112014770508, -0.13630780577659607, -1.0262742042541504, -0.0008447177824564278, -0.00936401728540659, -0.0002739054325502366, -0.00016020445036701858, -0.002126814564689994, -0.5757946372032166, -0.05776647478342056], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.10835777968168259, -9.417090768693015e-05, -0.006426383275538683, -0.0134924640879035, -0.11123181879520416, -0.010868637822568417, -0.004799868445843458, -0.00798970926553011, -1.6689286894688848e-06, -0.002201278228312731, -0.03126952424645424, -0.0624765120446682], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.00829985924065113, -1.0847986231965479e-05, -8.583032467868179e-06, -1.1171115636825562, -8.344646857949556e-07, -4.768370445162873e-07, -8.844937838148326e-05, -9.178694017464295e-05, -0.04272729903459549], "finish_reason": "stop"}], "metrics": {"energy": 74.7380138454437, "energy_per_token": 1.334607390097209, "time": 3.1582754, "time_per_token": 0.056397775}}
{"outputs": [{"text": " re.findall(r\"\\w+\", text)", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.4970899820327759, -0.2435448318719864, -0.06547801941633224, -0.25500398874282837, -0.011132155545055866, -0.00013350549852475524, -0.016835860908031464, -0.30298206210136414, -0.058780986815690994], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-2.4223709106445312, -0.0008180370787158608, -0.001731802592985332, -0.0002420847595203668, -0.06373313814401627], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.009018520824611187, -1.1920858014491387e-05, -7.390948667307384e-06, -0.7478502988815308], "finish_reason": "stop"}], "metrics": {"energy": 81.14276995849609, "energy_per_token": 1.9790919502072217, "time": 2.317474, "time_per_token": 0.05652375609756097}}
{"outputs": [{"text": " re.findall(r'\\w+', text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.9772535562515259, -0.1095251813530922, -0.019652416929602623, -5.5549986427649856e-05, -0.01631949469447136, -1.7254877090454102, -0.008976698853075504, -0.006976293865591288, -0.05682887136936188], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06, -0.8032627105712891], "finish_reason": "stop"}], "metrics": {"energy": 79.44641537094118, "energy_per_token": 1.6551336535612746, "time": 2.5213573, "time_per_token": 0.05252827708333333}}
{"outputs": [{"text": " re.sub(r\"\\W\", \" \", text)  # replace all non-word characters with space", "tokens": [" re", ".", "sub", "(", "r", "\"", "\\", "W", "\"", ",", " \"", " \"", ",", " text", ")", "  ", "#", " replace", " all", " non", "-", "word", " characters", " with", " space", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -1.887852430343628, -0.08146783709526062, -0.3089025616645813, -0.2806221544742584, -1.8168858289718628, -0.2880207300186157, -0.7410823702812195, -0.0004001055203843862, -0.04652496427297592, -0.035396844148635864, -0.0004418112221173942, -0.01788887195289135, -0.049983542412519455, -2.927767276763916, -0.0012393658980727196, -2.726820707321167, -1.5414248704910278, -0.11875848472118378, -0.020268701016902924, -0.5333653092384338, -0.02356964722275734, -0.18690480291843414, -3.156224012374878, -0.041046351194381714], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06, -0.8032627105712891], "finish_reason": "stop"}], "metrics": {"energy": 79.32438322257995, "energy_per_token": 1.3444810715691518, "time": 3.1574836, "time_per_token": 0.05351667118644068}}
{"outputs": [{"text": " re.findall(r'\\w+', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.9772535562515259, -0.1095251813530922, -0.019652416929602623, -5.5549986427649856e-05, -0.01631949469447136, -0.20899111032485962, -0.06369298696517944], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06], "finish_reason": "stop"}], "metrics": {"energy": 58.92444590759277, "energy_per_token": 1.3094321312798394, "time": 2.534547, "time_per_token": 0.05632326666666666}}
{"outputs": [{"text": " re.split(\"\\W+\", text)", "tokens": [" re", ".", "split", "(", "\"", "\\", "W", "+", "\"", ",", " text", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -1.9700610637664795, -0.112855464220047, -1.592863917350769, -1.019039273262024, -0.3590998947620392, -0.2284175455570221, -0.016300026327371597, -0.000673424918204546, -0.018830113112926483, -0.08782539516687393, -0.10171427577733994], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06, -1.111074447631836, -8.344646857949556e-07, -4.768370445162873e-07, -0.00011324241495458409, -9.822363062994555e-05, -0.03971389681100845], "finish_reason": "stop"}], "metrics": {"energy": 80.15371394348145, "energy_per_token": 1.5716414498721853, "time": 2.926888, "time_per_token": 0.05738996078431372}}
{"outputs": [{"text": " re.findall(r\"\\w+\", text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.4970899820327759, -0.2435448318719864, -0.06547801941633224, -0.25500398874282837, -0.011132155545055866, -0.00013350549852475524, -0.016835860908031464, -1.41282057762146, -0.009793920442461967, -0.013077444396913052, -0.060527004301548004], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -1.5034070014953613, -0.09233443439006805, -0.0005220004240982234, -0.0002172949316445738, -0.014936516061425209, -0.0022182876709848642, -0.03446105495095253, -0.008910181000828743, -1.8954096958623268e-05, -0.004280690103769302, -4.768370445162873e-07, -2.658331868587993e-05, -1.6331539882230572e-05, -8.106198947643861e-06, -0.0020060669630765915, -0.005639239214360714], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.12189824134111404, -0.00015054999676067382, -0.0070637729950249195, -0.011678660288453102, -0.08301269263029099, -0.010423151776194572, -0.0056269108317792416, -0.006872942205518484, -2.0265558760002023e-06, -0.0021527467761188745, -0.026609381660819054, -0.05059162154793739], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007700875401496887, -1.5616295058862306e-05, -8.22540732769994e-06, -1.0278551578521729, -7.152555099310121e-07, -5.960462772236497e-07, -7.402622577501461e-05, -8.5588610090781e-05, -0.05208157002925873], "finish_reason": "stop"}], "metrics": {"energy": 80.02886427688598, "energy_per_token": 1.4550702595797451, "time": 3.147014, "time_per_token": 0.05721843636363636}}
{"outputs": [{"text": " re.findall(r\"[\\w']+\", text)", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "[\\", "w", "']", "+", "\"", ",", " text", ")", "\n"], "logprobs": [-0.24194364249706268, -0.0001433984871255234, -0.3729693591594696, -0.0038443722296506166, -0.014717462472617626, -0.05003706365823746, -0.4970899820327759, -2.335559129714966, -0.005924995522946119, -0.21711689233779907, -0.1869647353887558, -0.007200244814157486, -8.380061626667157e-05, -0.017456695437431335, -0.21941164135932922, -0.07640251517295837], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.08408817648887634, -0.33981749415397644, -0.08937899768352509, -0.00042143522296100855, -0.0002584123576525599, -0.014764565974473953, -0.0024806461296975613, -0.02851717546582222, -0.012704508379101753, -2.7656173188006505e-05, -0.0036731173750013113, -2.3841855067985307e-07, -2.3841574147809297e-05, -2.6702524337451905e-05, -7.986990567587782e-06, -0.0018466339679434896, -0.0033325394615530968], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.1214485913515091, -0.00021896349790040404, -0.006409445311874151, -0.010476356372237206, -0.10261300206184387, -0.012275384739041328, -0.006860155612230301, -0.008507557213306427, -2.0265558760002023e-06, -0.002319504739716649, -0.02393447980284691, -0.04476695507764816], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts"], "logprobs": [-0.006738675758242607, -1.1801649634435307e-05, -7.629365427419543e-06], "finish_reason": "stop"}], "metrics": {"energy": 63.183682626724234, "energy_per_token": 1.3163267213900882, "time": 2.5273633, "time_per_token": 0.052653402083333335}}
