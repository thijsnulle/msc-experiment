{"outputs": [{"text": " re.findall(r'\\w+', text)  # Use regex to find all words", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "  ", "#", " Use", " regex", " to", " find", " all", " words", "\n"], "logprobs": [-0.17781388759613037, -6.210611172718927e-05, -0.12280000001192093, -0.0003594706067815423, -0.014311647042632103, -0.011718601919710636, -0.14669674634933472, -1.5668601989746094, -0.0053151012398302555, -9.97731985989958e-05, -0.014259586110711098, -0.6891527771949768, -2.113309383392334, -0.00012146688823122531, -2.4339141845703125, -0.09168705344200134, -0.03963083401322365, -0.19392500817775726, -0.2952876687049866, -0.18974120914936066, -0.9200440049171448], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -2.9467806816101074, -0.006477787159383297, -7.223821739898995e-05, -5.602820692729438e-06, -9.321732068201527e-05, -0.0003393312799744308, -0.006906209979206324, -0.019891660660505295, -5.364403477869928e-06, -0.003950174432247877, 0.0, -1.883488948806189e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.017544785514473915, -0.02014872245490551], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.005300634540617466, -6.05564855504781e-05, -0.06735929101705551, -0.0006563892820850015, -0.0011543523287400603, -0.0021327624563127756, -0.0006912940880283713, -0.000380324519937858, -4.768370445162873e-07, -9.417489309271332e-06, -0.006062688771635294, -0.008309435099363327], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts"], "logprobs": [-0.00710342638194561, -6.079655122448457e-06, -1.5735502529423684e-05], "finish_reason": "stop"}], "metrics": {"energy": 423.72737376022354, "energy_per_token": 7.994856108683463, "time": 10.665038, "time_per_token": 0.2012271320754717}}
{"outputs": [{"text": " re.sub(r\"[^\\w\\s]\", \" \", text).lower().split()", "tokens": [" re", ".", "sub", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", " \"", ",", " text", ")", ".", "lower", "()", ".", "split", "()", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -2.575303316116333, -0.03986053541302681, -0.07523193210363388, -0.7029866576194763, -0.38899344205856323, -0.11170495301485062, -0.0023310412652790546, -0.02835635282099247, -0.001549235312268138, -0.0699496790766716, -0.00031394799589179456, -0.027623165398836136, -2.5740573406219482, -0.00012134769349358976, -0.0074872118420898914, -0.22925761342048645, -0.03421006724238396, -0.07174023985862732, -0.000301673193462193, -0.011821454390883446, -0.0130917988717556, -0.04730650782585144, -0.07278335094451904], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05], "finish_reason": "stop"}], "metrics": {"energy": 279.09677461242677, "energy_per_token": 4.8964346423232765, "time": 6.695309, "time_per_token": 0.11746156140350877}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -1.201265573501587, -0.003385053249076009, -0.04740406200289726, -0.10416798293590546], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 251.57134294509885, "energy_per_token": 4.837910441251901, "time": 6.101969, "time_per_token": 0.1173455576923077}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -0.40722110867500305, -0.1018066555261612], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 230.24440973091123, "energy_per_token": 4.6048881946182245, "time": 5.850678, "time_per_token": 0.11701356}}
{"outputs": [{"text": " re.findall(r'\\w+', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -1.4227678775787354, -0.005127731245011091, -0.0001110968878492713, -0.012606927193701267, -0.536027193069458, -0.13735193014144897], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 248.4689837226868, "energy_per_token": 5.401499646145365, "time": 5.657496, "time_per_token": 0.12298904347826087}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -0.40722110867500305, -0.1018066555261612], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 246.13429513740536, "energy_per_token": 4.922685902748107, "time": 6.08328, "time_per_token": 0.1216656}}
{"outputs": [{"text": " re.findall(r'\\w+', text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -1.4227678775787354, -0.005127731245011091, -0.0001110968878492713, -0.012606927193701267, -0.925462007522583, -0.004597569350153208, -0.04347335174679756, -0.09474921971559525], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 216.00664426040652, "energy_per_token": 4.500138422091802, "time": 5.6680083, "time_per_token": 0.11808350625000001}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -1.201265573501587, -0.003385053249076009, -0.04740406200289726, -0.10416798293590546], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 255.68990534400942, "energy_per_token": 4.917113564307874, "time": 6.064075, "time_per_token": 0.11661682692307693}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -0.40722110867500305, -0.1018066555261612], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -1.4506707191467285, -1.680836794548668e-05, -2.3841830625315197e-06, -5.006777428206988e-06, -8.22540732769994e-06, -0.15946871042251587], "finish_reason": "stop"}], "metrics": {"energy": 251.86084887886042, "energy_per_token": 4.579288161433825, "time": 6.4613485, "time_per_token": 0.11747906363636364}}
{"outputs": [{"text": " text.lower().split()  # Convert to lowercase and split into words", "tokens": [" text", ".", "lower", "()", ".", "split", "()", "  ", "#", " Convert", " to", " lower", "case", " and", " split", " into", " words", "\n"], "logprobs": [-2.8118207454681396, -0.008768389001488686, -0.6638119220733643, -0.0006005152827128768, -0.07299260050058365, -0.044796135276556015, -0.07141008973121643, -2.8234405517578125, -0.00012635385792236775, -0.599078893661499, -0.5380200743675232, -0.0012413900112733245, -0.03818037733435631, -0.055627696216106415, -0.013841710053384304, -0.10410149395465851, -0.06726021319627762, -0.01470019482076168], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 230.70562943458552, "energy_per_token": 4.52363979283501, "time": 6.0675635, "time_per_token": 0.11897183333333335}}
{"outputs": [{"text": " re.sub(r'[^\\w\\s]', '', text).lower().split()", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", ".", "lower", "()", ".", "split", "()", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -2.575303316116333, -0.03986053541302681, -0.07523193210363388, -1.0156850814819336, -0.03129136189818382, -0.07714815437793732, -0.0037569671403616667, -0.0318601056933403, -0.00044550508027896285, -0.05220434069633484, -0.0020582936704158783, -0.0001714082609396428, -0.1349678784608841, -0.00019703354337252676, -0.02185359224677086, -0.37067413330078125, -0.015622963197529316, -0.041491784155368805, -0.0002461368858348578, -0.008477652445435524, -0.007913783192634583, -0.01014658436179161, -0.06545256823301315], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -1.4506707191467285, -1.680836794548668e-05, -2.3841830625315197e-06, -5.006777428206988e-06, -8.22540732769994e-06, -0.15946871042251587], "finish_reason": "stop"}], "metrics": {"energy": 290.71219588661194, "energy_per_token": 4.614479299787491, "time": 7.318793, "time_per_token": 0.11617131746031746}}
{"outputs": [{"text": " re.findall(r'\\b[a-zA-Z]+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "[", "a", "-", "z", "A", "-", "Z", "]", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -2.547940969467163, -0.7703134417533875, -0.0006531727267429233, -0.0001541257370263338, -0.2398892641067505, -4.5060096454108134e-05, -0.009376417845487595, -0.4720798134803772, -0.0014922209084033966, -6.496695277746767e-05, -0.0007102350937202573, -0.00013302871957421303, -0.02254626527428627, -0.3840014934539795, -0.13681560754776], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -1.4506707191467285, -1.680836794548668e-05, -2.3841830625315197e-06, -5.006777428206988e-06, -8.22540732769994e-06, -0.15946871042251587], "finish_reason": "stop"}], "metrics": {"energy": 273.6758197193146, "energy_per_token": 4.486488847857616, "time": 6.9178734, "time_per_token": 0.11340776065573771}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -0.40722110867500305, -0.1018066555261612], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 232.60220473098755, "energy_per_token": 4.652044094619751, "time": 5.863728, "time_per_token": 0.11727456}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -0.40722110867500305, -0.1018066555261612], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 235.62787388229367, "energy_per_token": 4.712557477645873, "time": 5.858974, "time_per_token": 0.11717948}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -0.40722110867500305, -0.1018066555261612], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 238.85395421409604, "energy_per_token": 4.777079084281921, "time": 6.0958657, "time_per_token": 0.121917314}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -1.201265573501587, -0.003385053249076009, -0.04740406200289726, -0.10416798293590546], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -2.9467806816101074, -0.006477787159383297, -7.223821739898995e-05, -5.602820692729438e-06, -9.321732068201527e-05, -0.0003393312799744308, -0.006906209979206324, -0.019891660660505295, -5.364403477869928e-06, -0.003950174432247877, 0.0, -1.883488948806189e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.017544785514473915, -0.02014872245490551], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.005300634540617466, -6.05564855504781e-05, -0.06735929101705551, -0.0006563892820850015, -0.0011543523287400603, -0.0021327624563127756, -0.0006912940880283713, -0.000380324519937858, -4.768370445162873e-07, -9.417489309271332e-06, -0.006062688771635294, -0.008309435099363327], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.00710342638194561, -6.079655122448457e-06, -1.5735502529423684e-05, -0.4970480799674988], "finish_reason": "stop"}], "metrics": {"energy": 282.7247187252045, "energy_per_token": 5.437013821638549, "time": 6.6857166, "time_per_token": 0.12857147307692307}}
{"outputs": [{"text": " re.findall(r'\\w+', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -1.4227678775787354, -0.005127731245011091, -0.0001110968878492713, -0.012606927193701267, -0.536027193069458, -0.13735193014144897], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.value_counts(words)", "tokens": [" pd", ".", "value", "_", "counts", "(", "words", ")", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -2.6343729496002197, -9.536738616588991e-07, -1.823885577323381e-05, -0.0003912875254172832, -0.019916553050279617, -0.01361759565770626, -0.027746656909585], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.006426027975976467, -5.245195097813848e-06, -1.2278481335670222e-05, -1.6269633769989014, -2.098061486321967e-05, -2.7418097943154862e-06, -4.172316494077677e-06, -1.6212332411669195e-05, -0.1806911677122116], "finish_reason": "stop"}], "metrics": {"energy": 256.5626925621032, "energy_per_token": 5.345056095043817, "time": 6.265272, "time_per_token": 0.13052650000000002}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -0.40722110867500305, -0.1018066555261612], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05], "finish_reason": "stop"}], "metrics": {"energy": 225.7695073814392, "energy_per_token": 4.6075409669681475, "time": 5.874355, "time_per_token": 0.11988479591836736}}
{"outputs": [{"text": " re.findall(r'\\w+', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -1.4227678775787354, -0.005127731245011091, -0.0001110968878492713, -0.012606927193701267, -0.536027193069458, -0.13735193014144897], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05], "finish_reason": "stop"}], "metrics": {"energy": 217.29759020614628, "energy_per_token": 4.828835337914362, "time": 5.6550837, "time_per_token": 0.12566852666666667}}
{"outputs": [{"text": " re.findall(r'\\w+', text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -1.4227678775787354, -0.005127731245011091, -0.0001110968878492713, -0.012606927193701267, -0.925462007522583, -0.004597569350153208, -0.04347335174679756, -0.09474921971559525], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -1.4506707191467285, -1.680836794548668e-05, -2.3841830625315197e-06, -5.006777428206988e-06, -8.22540732769994e-06, -0.15946871042251587], "finish_reason": "stop"}], "metrics": {"energy": 289.6519087562561, "energy_per_token": 5.465130353891625, "time": 6.924578, "time_per_token": 0.13065241509433964}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -1.201265573501587, -0.003385053249076009, -0.04740406200289726, -0.10416798293590546], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 276.9737533493041, "energy_per_token": 5.326418333640463, "time": 6.9103703, "time_per_token": 0.13289173653846154}}
{"outputs": [{"text": " text.lower().split()", "tokens": [" text", ".", "lower", "()", ".", "split", "()", "\n"], "logprobs": [-2.8118207454681396, -0.008768389001488686, -0.6638119220733643, -0.0006005152827128768, -0.07299260050058365, -0.044796135276556015, -0.07141008973121643, -0.07703392952680588], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -1.4506707191467285, -1.680836794548668e-05, -2.3841830625315197e-06, -5.006777428206988e-06, -8.22540732769994e-06, -1.9149503707885742, -0.004848271608352661], "finish_reason": "stop"}], "metrics": {"energy": 214.1096685485839, "energy_per_token": 4.555524862735828, "time": 5.6485486, "time_per_token": 0.12018188510638297}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -0.40722110867500305, -0.1018066555261612], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -1.4506707191467285, -1.680836794548668e-05, -2.3841830625315197e-06, -5.006777428206988e-06, -8.22540732769994e-06, -0.15946871042251587], "finish_reason": "stop"}], "metrics": {"energy": 266.5507653808594, "energy_per_token": 4.846377552379262, "time": 6.529843, "time_per_token": 0.11872441818181817}}
{"outputs": [{"text": " re.findall(r\"[\\w']+\", text)", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "[\\", "w", "']", "+", "\"", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -2.064013719558716, -2.994248151779175, -0.041135359555482864, -0.5645233988761902, -0.025472205132246017, -0.0006934384000487626, -7.60526381782256e-05, -0.006704928819090128, -0.5190311074256897, -0.15116500854492188], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -1.4506707191467285, -1.680836794548668e-05, -2.3841830625315197e-06, -5.006777428206988e-06, -8.22540732769994e-06, -0.15946871042251587], "finish_reason": "stop"}], "metrics": {"energy": 255.31772707176202, "energy_per_token": 4.7281060568844815, "time": 6.291306, "time_per_token": 0.11650566666666666}}
{"outputs": [{"text": " re.findall(r'\\b[A-Za-z]{3,}\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "[", "A", "-", "Z", "a", "-", "z", "]{", "3", ",", "}\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -2.547940969467163, -1.8332903385162354, -0.0005135409301146865, -0.02042008563876152, -0.020367641001939774, -2.145764938177308e-06, -3.7431014789035544e-05, -3.134570837020874, -1.3862814903259277, -0.047369156032800674, -0.28271809220314026, -5.2927523938706145e-05, -0.0007441850611940026, -0.00015233787416946143, -0.00889966543763876, -0.13455678522586823, -0.1650000512599945], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 287.45977512931825, "energy_per_token": 4.956203019471004, "time": 7.3268776, "time_per_token": 0.12632547586206896}}
{"outputs": [{"text": " re.findall(r'\\w+', text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -1.4227678775787354, -0.005127731245011091, -0.0001110968878492713, -0.012606927193701267, -0.925462007522583, -0.004597569350153208, -0.04347335174679756, -0.09474921971559525], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "\n"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -0.6113457679748535], "finish_reason": "stop"}], "metrics": {"energy": 237.92382718086247, "energy_per_token": 4.956746399601301, "time": 5.8602395, "time_per_token": 0.12208832291666666}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -0.40722110867500305, -0.1018066555261612], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -1.4506707191467285, -1.680836794548668e-05, -2.3841830625315197e-06, -5.006777428206988e-06, -8.22540732769994e-06, -0.15946871042251587], "finish_reason": "stop"}], "metrics": {"energy": 270.0455502166747, "energy_per_token": 4.9099190948486315, "time": 6.292463, "time_per_token": 0.11440841818181817}}
{"outputs": [{"text": " re.sub(r'[^\\w\\s]', '', text).lower().split()", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", ".", "lower", "()", ".", "split", "()", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -2.575303316116333, -0.03986053541302681, -0.07523193210363388, -1.0156850814819336, -0.03129136189818382, -0.07714815437793732, -0.0037569671403616667, -0.0318601056933403, -0.00044550508027896285, -0.05220434069633484, -0.0020582936704158783, -0.0001714082609396428, -0.1349678784608841, -0.00019703354337252676, -0.02185359224677086, -0.37067413330078125, -0.015622963197529316, -0.041491784155368805, -0.0002461368858348578, -0.008477652445435524, -0.007913783192634583, -0.01014658436179161, -0.06545256823301315], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -1.4506707191467285, -1.680836794548668e-05, -2.3841830625315197e-06, -5.006777428206988e-06, -8.22540732769994e-06, -0.15946871042251587], "finish_reason": "stop"}], "metrics": {"energy": 306.2092973461151, "energy_per_token": 4.860465037239922, "time": 7.3194633, "time_per_token": 0.11618195714285715}}
{"outputs": [{"text": " re.sub(r\"[^\\w\\s]\", \"\", text).lower().split()", "tokens": [" re", ".", "sub", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ",", " text", ")", ".", "lower", "()", ".", "split", "()", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -2.575303316116333, -0.03986053541302681, -0.07523193210363388, -0.7029866576194763, -0.38899344205856323, -0.11170495301485062, -0.0023310412652790546, -0.02835635282099247, -0.001549235312268138, -0.0699496790766716, -0.00031394799589179456, -0.027623165398836136, -0.07963452488183975, -0.00010013079008786008, -0.00584867550060153, -0.46941128373146057, -0.007599018048495054, -0.06785865873098373, -0.00019012074335478246, -0.009859670884907246, -0.004862151574343443, -0.0248300489038229, -0.07099399715662003], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05, -1.4506707191467285, -1.680836794548668e-05, -2.3841830625315197e-06, -5.006777428206988e-06, -8.22540732769994e-06, -0.15946871042251587], "finish_reason": "stop"}], "metrics": {"energy": 298.3964605216979, "energy_per_token": 4.736451754312665, "time": 7.1244273, "time_per_token": 0.11308614761904762}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.1379067599773407, -6.592056161025539e-05, -0.13237492740154266, -0.0002917817619163543, -0.01325109601020813, -0.009810565039515495, -0.1586296409368515, -0.2877199351787567, -0.16206522285938263, -0.05393058434128761, -0.015876078978180885, -5.4238757002167404e-05, -0.0006188622792251408, -6.568216485902667e-05, -0.0261787511408329, -1.201265573501587, -0.003385053249076009, -0.04740406200289726, -0.10416798293590546], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.03247525915503502, -0.05921117588877678, -0.005651448387652636, -3.540453326422721e-05, -1.0609570381348021e-05, -0.00023421882360707968, -0.0006272017490118742, -0.007605406921356916, -0.019979653880000114, -1.2755313036905136e-05, -0.0030422378331422806, 0.0, -1.6689160474925302e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.01233473140746355, -0.009724978357553482], "finish_reason": "stop"}, {"text": " pd.Series(words).value_counts()", "tokens": [" pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.006658391561359167, -5.352353764465079e-05, -0.07563421875238419, -0.0006785474251955748, -0.0015748253790661693, -0.0018318791408091784, -0.0007949291029945016, -0.0003013156820088625, -3.576278118089249e-07, -6.9141146923357155e-06, -0.005965760443359613, -0.008039259351789951], "finish_reason": "stop"}, {"text": " word_counts", "tokens": [" word", "_", "counts"], "logprobs": [-0.007245336659252644, -5.245195097813848e-06, -1.2278481335670222e-05], "finish_reason": "stop"}], "metrics": {"energy": 243.16492925643922, "energy_per_token": 4.767939789341946, "time": 6.297089, "time_per_token": 0.12347233333333332}}
