{"outputs": [{"text": "# Remove specific stopwords\n    words = re.findall(r\"\\w+\", text)\n    words = [word for word in words if word not in STOPWORDS]\n\n    # Count the frequency of each word\n    word_counts = pd.Series(words).value_counts()\n\n    # Exclude STOPWORDS words from the count\n    word_counts.drop(STOPWORDS, inplace=True)\n    return word_counts", "tokens": ["#", " Remove", " specific", " stop", "words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ")", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n", "\n", "    ", "#", " Ex", "clude", " ST", "OP", "W", "OR", "DS", " words", " from", " the", " count", "\n", "    ", "word", "_", "counts", ".", "drop", "(", "ST", "OP", "W", "OR", "DS", ",", " in", "place", "=", "True", ")", "\n", "    ", "return", " word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -1.1972424983978271, -0.018017200753092766, -0.015014964155852795, -1.0747082233428955, -0.001485078944824636, -1.6157586574554443, -0.06675876677036285, -0.5994971990585327, -6.3774932641536e-05, -0.47442182898521423, -0.0031177031341940165, -0.00749300979077816, -0.03487420454621315, -0.8574323058128357, -0.20282825827598572, -0.14871558547019958, -0.3301258683204651, -0.0094126733019948, -6.139089964563027e-05, -0.011394307017326355, -0.2403312623500824, -0.014937338419258595, -0.08882886171340942, -0.6145287752151489, -0.13047419488430023, -0.04040335863828659, -0.38437339663505554, -1.0311750173568726, -0.000200609109015204, -8.439661905867979e-05, -0.006543637719005346, -0.0021007629111409187, -0.03164553642272949, -0.2873794138431549, -7.867782187531702e-06, -0.002502050483599305, -4.768370445162873e-07, -2.9682672902708873e-05, -4.7205765440594405e-05, -7.986990567587782e-06, -0.0014590105274692178, -0.0025718489196151495, -0.1908973902463913, -0.0003120412293355912, -0.018326714634895325, -0.14545920491218567, -0.5347737073898315, -0.09329494088888168, -0.0045918733812868595, -0.06207864731550217, -0.0030126445926725864, -0.0963519811630249, -0.00026306029758416116, -0.4585644006729126, -0.0008905735448934138, -0.09701322764158249, -0.0030530530493706465, -0.09928086400032043, -1.0609570381348021e-05, -0.004724530037492514, -0.02433152310550213, -0.14584296941757202, -0.00668515358120203, -0.0010128850117325783, -0.010199685581028461, -2.3841855067985307e-07, -0.002859196625649929, -0.017824701964855194, -0.031640224158763885, -0.10452315211296082, -0.00011669908417388797, -2.7079732418060303, -2.0596671104431152, -0.009200556203722954, -2.087924003601074, -2.312633478140924e-05, -0.004550340585410595, -0.0002411313180346042, -0.00020919041708111763, -2.3577723503112793, -0.8438249230384827, -0.16300339996814728, -1.6781446933746338, -0.04931779205799103, -0.0003564914222806692, -0.4826858639717102, -8.380061626667157e-05, -0.0027022771537303925, -1.7110943794250488, -0.5778715014457703, -0.0040906332433223724, -0.057915326207876205, -1.311301275563892e-06, -1.2516897186287679e-05, -4.279521817807108e-05, -7.510157047363464e-06, -0.0022150760050863028, -0.03414624184370041, -7.867782187531702e-06, -0.007131005171686411, -0.0005158047424629331, -0.47110429406166077, -0.014430917799472809, -2.3109142780303955, -0.13433563709259033, -0.009143267758190632, -0.00018165845540352166, -5.8412379075889476e-06, -0.8143249154090881, -5.960462772236497e-07, -4.768370445162873e-07, -4.076874756719917e-05, -9.953480184776708e-05, -0.04517142474651337], "finish_reason": "stop"}], "metrics": {"energy": 152.78337744903567, "energy_per_token": 1.317098081457204, "time": 5.436663, "time_per_token": 0.04686778448275862}}
{"outputs": [{"text": "# Remove special characters and stopwords\n    text = re.sub(r'[^a-zA-Z\\s]', '', text)\n    text = text.lower()\n    words = re.split(r'\\s+', text)\n\n    # Count the frequency of each word\n    word_counts = Counter(words)\n\n    # Exclude the stopwords\n    for word in STOPWORDS:\n        if word in word_counts:\n            del word_counts[word]\n\n    return pd.Series(word_counts)", "tokens": ["#", " Remove", " special", " characters", " and", " stop", "words", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "    ", "words", " =", " re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ")", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", "\n", "    ", "word", "_", "counts", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "#", " Ex", "clude", " the", " stop", "words", "\n", "    ", "for", " word", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "        ", "if", " word", " in", " word", "_", "counts", ":", "\n", "            ", "del", " word", "_", "counts", "[", "word", "]", "\n", "\n", "    ", "return", " pd", ".", "Series", "(", "word", "_", "counts", ")", "\n", "\n", "#"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -3.360551595687866, -0.041432540863752365, -0.7879841327667236, -1.276355504989624, -0.03292360529303551, -0.635711669921875, -0.0018528213258832693, -0.6122373938560486, -0.07566483318805695, -0.08796481788158417, -7.664863369427621e-05, -0.008588047698140144, -0.05464259907603264, -0.024128716439008713, -1.2446285486221313, -0.025840526446700096, -1.16041898727417, -0.05396898835897446, -3.9457496313843876e-05, -8.296622399939224e-05, -0.10024604946374893, -1.2397689715726301e-05, -0.00029583368450403214, -0.7409640550613403, -0.05572917312383652, -0.27527153491973877, -0.010443797335028648, -4.494089080253616e-05, -0.07055940479040146, -8.83301836438477e-05, -0.005883755162358284, -0.06367228925228119, -0.44250524044036865, -0.024777021259069443, -0.39452436566352844, -0.0033582027535885572, -0.8447304368019104, -0.0005467826849780977, -0.05141348019242287, -9.16677454370074e-05, -0.10151483118534088, -0.0789237916469574, -1.5313975811004639, -0.01831524446606636, -1.9830577373504639, -0.0046380325220525265, -1.7970492839813232, -0.20769557356834412, -0.028042279183864594, -0.09038907289505005, -0.06345179677009583, -0.1348847597837448, -2.396077979938127e-05, -0.0021526277996599674, -0.012256071902811527, -0.007141539361327887, -0.8157034516334534, -0.0001776060671545565, -0.2122335433959961, -0.920139491558075, -0.6363788843154907, -0.1717296838760376, -0.003703997703269124, -0.1044914722442627, -0.006801667157560587, -0.3791685104370117, -0.0001691436773398891, -0.3274434506893158, -0.0011526852613314986, -0.1289653778076172, -0.0035892606247216463, -1.8706454038619995, -0.03334661200642586, -0.026565270498394966, -0.003575956914573908, -0.1392204612493515, -0.4755667746067047, -0.00013791563105769455, -0.026768164709210396, -0.7601389288902283, -0.006637312937527895, -0.8311977386474609, -0.3765399754047394, -0.01290623378008604, -0.37265223264694214, -0.00014625910262111574, -0.363407164812088, -0.4494815468788147, -0.0047979699447751045, -0.02558794431388378, -4.768370445162873e-07, -2.7418097943154862e-06, -2.992108420585282e-05, -6.437280717364047e-06, -0.0003875934926327318, -0.0005029367166571319, -0.000800408364739269, -0.4703088402748108, -0.0004683827864937484, -0.07766670733690262, -0.00890451017767191, -1.0013530300057027e-05, -8.583032467868179e-06, -0.06068621575832367, -0.0011330381967127323, -0.00038938093348406255, -0.1914246827363968, -0.0006280356901697814, -1.3589766240329482e-05, -1.0490362910786644e-05, -3.2066785934148356e-05, -0.00011729506513802335, -7.795983401592821e-05, -0.00044967554276809096, -0.013195921666920185, -0.00040451448876410723, -0.22746369242668152, -0.030207617208361626, -1.3708974620385561e-05, -0.001073142047971487, -0.016002437099814415, -0.02825159579515457, -2.706014311115723e-05, -1.1205610462639015e-05, -0.6072051525115967, -0.16406302154064178, -0.01803089864552021, -1.5664292573928833], "finish_reason": "stop"}], "metrics": {"energy": 168.11823955345156, "energy_per_token": 1.2932172273342428, "time": 6.0684953, "time_per_token": 0.04668073307692308}}
{"outputs": [{"text": "# Remove specific stopwords\n    text = re.sub(r'\\b(' + '|'.join(STOPWORDS) + r')\\b', '', text)\n\n    # Convert the text to lowercase to normalize the case\n    text = text.lower()\n\n    # Split the text into words\n    words = [word for word in re.findall(r'\\w+', text)]\n\n    # Count the frequency of each word\n    word_counts = pd.Series(words).value_counts()\n\n    return word_counts", "tokens": ["#", " Remove", " specific", " stop", "words", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "b", "('", " +", " '", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "'", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Convert", " the", " text", " to", " lower", "case", " to", " normalize", " the", " case", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "    ", "#", " Split", " the", " text", " into", " words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")]", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n", "\n", "    ", "return", " word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -1.1972424983978271, -0.018017200753092766, -0.015014964155852795, -1.0747082233428955, -0.001485078944824636, -0.8380295634269714, -0.08372743427753448, -0.4018256962299347, -8.880697714630514e-05, -0.016806790605187416, -0.07299736142158508, -0.2052358090877533, -0.7343646883964539, -0.0840388610959053, -1.1448981761932373, -0.02034299448132515, -0.2332574427127838, -0.0003438596613705158, -5.054346183896996e-05, -1.645074735279195e-05, -0.00026603974401950836, -0.008227266371250153, -0.01937546767294407, -3.576278118089249e-07, -2.5987286790041253e-05, -3.9457496313843876e-05, -8.34461570775602e-06, -0.00339443888515234, -0.003336697816848755, -0.0049356999807059765, -0.02199552394449711, -0.001741203828714788, -0.05026994273066521, -9.035655966727063e-05, -0.3100878894329071, -0.0001212284987559542, -0.003174387151375413, -0.12787774205207825, -0.0432799868285656, -0.2806483507156372, -0.00031609306461177766, -0.010424095205962658, -2.710167407989502, -1.4305915832519531, -0.06871186196804047, -0.23539218306541443, -0.606707751750946, -0.04139159619808197, -3.1219120025634766, -3.4229578971862793, -0.6542845964431763, -0.7108259797096252, -0.7065209746360779, -0.0006126672378741205, -0.06057188659906387, -0.007910116575658321, -0.004758699797093868, -4.95898348162882e-05, -0.0012312696781009436, -4.362964682513848e-05, -0.002058174693956971, -0.03498655930161476, -0.00039545822073705494, -0.005359211005270481, -0.942767322063446, -0.046015508472919464, -0.010187649168074131, -0.025383183732628822, -0.27793237566947937, -0.7207042574882507, -0.00022492263815365732, -0.03985663875937462, -0.011013551615178585, -3.1349878311157227, -0.09516464918851852, -0.41349947452545166, -0.0007863528444431722, -0.00025769727653823793, -0.5338338613510132, -0.0006854568491689861, -0.2167450487613678, -0.0006453100359067321, -0.005016241688281298, -0.0020987405441701412, -0.061665378510951996, -0.041811950504779816, -0.0033943201415240765, -1.0490362910786644e-05, -0.000757645582780242, -0.10528052598237991, -0.002507758093997836, -0.01685613952577114, -0.00020597243565134704, -0.004997618962079287, -0.2999899089336395, -0.04738541319966316, -0.15058907866477966, -0.0010776671115309, -0.0467781126499176, -0.0052790530025959015, -0.27316638827323914, -0.0001740304142003879, -0.22329260408878326, -0.0006233894382603467, -0.12017368525266647, -0.0027509010396897793, -0.22674329578876495, -1.7762025890988298e-05, -0.007243561092764139, -0.04451910778880119, -0.25746557116508484, -0.007463074289262295, -0.0010056205792352557, -0.004763564094901085, -1.1920928244535389e-07, -0.0017473918851464987, -0.018533626571297646, -0.048347242176532745, -0.02790931798517704, -0.00012909532233607024, -0.3536159098148346, -0.005470899399369955, -1.6689286894688848e-06, -1.549708758830093e-05, -0.9305819272994995, -1.0728830375228426e-06, -5.960462772236497e-07, -6.8662193370983e-05, -7.915183232398704e-05, -0.040902748703956604], "finish_reason": "stop"}], "metrics": {"energy": 204.84309927368156, "energy_per_token": 1.5518416611642543, "time": 6.0762987, "time_per_token": 0.046032565909090904}}
{"outputs": [{"text": "# Clean text and remove stopwords\n    text = re.sub(r'[^\\w\\s]', '', text.lower())\n    stopwords = set(STOPWORDS)\n    words = [w for w in re.findall(r'\\w+', text) if w not in stopwords]\n\n    # Count word frequencies\n    word_counts = pd.Series(words).value_counts()\n\n    return word_counts", "tokens": ["#", " Clean", " text", " and", " remove", " stop", "words", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ".", "lower", "())", "\n", "    ", "stop", "words", " =", " set", "(", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "words", " =", " [", "w", " for", " w", " in", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", " if", " w", " not", " in", " stop", "words", "]", "\n", "\n", "    ", "#", " Count", " word", " frequencies", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n", "\n", "    ", "return", " word", "_", "counts", "\n", "\n", "def"], "logprobs": [-0.5070599317550659, -3.6419126987457275, -1.5687416791915894, -2.2049403190612793, -0.41079550981521606, -0.5642648339271545, -0.0459846556186676, -0.14754618704319, -0.001368777477182448, -0.8279365301132202, -0.04669426754117012, -0.5803884267807007, -0.00015293381875380874, -0.01685965619981289, -0.024069366976618767, -0.07354365289211273, -1.861351728439331, -0.11742481589317322, -0.15326814353466034, -0.0009678685455583036, -0.0712973102927208, -0.003467026399448514, -0.034357741475105286, -0.030206924304366112, -3.71926071238704e-05, -0.13834190368652344, -7.068861305015162e-05, -0.011203357949852943, -2.5808587074279785, -0.010583111084997654, -0.010336673818528652, -0.2405412197113037, -0.01226396206766367, -2.2659807205200195, -0.24845227599143982, -0.13894183933734894, -0.3765356242656708, -0.001466033631004393, -0.026528239250183105, -3.576278118089249e-07, -7.867782187531702e-06, -6.508615479106084e-05, -5.722029527532868e-06, -0.038830649107694626, -0.02314632572233677, -0.006496027112007141, -0.9127093553543091, -0.0325331911444664, -0.7499935030937195, -2.9324116706848145, -0.04205532744526863, -0.00028761065914295614, -0.00031263710116036236, -1.1815640926361084, -0.0009885906474664807, -0.5635827779769897, -0.0028435057029128075, -0.01742483116686344, -0.0040638018399477005, -0.020699547603726387, -0.05131484568119049, -0.0078497976064682, -1.7046782886609435e-05, -0.003681550268083811, -0.04695511236786842, -0.009668191894888878, -0.02923523634672165, -0.010750473476946354, -5.8412379075889476e-06, -0.06039515137672424, -1.8954096958623268e-05, -0.006326173432171345, -0.0021626197267323732, -0.15677984058856964, -0.00022837892174720764, -0.00884720403701067, -0.13448290526866913, -0.40993523597717285, -0.08955243229866028, -0.07967019081115723, -0.00019000156316906214, -0.34128281474113464, -0.0015966061037033796, -0.24813635647296906, -0.0019502682844176888, -0.3235650956630707, -6.198863957251888e-06, -0.01455087959766388, -0.012187064625322819, -0.16512951254844666, -0.006063281558454037, -0.0009893052047118545, -0.006306035444140434, -2.3841855067985307e-07, -0.003218710422515869, -0.013694853521883488, -0.04661792516708374, -0.1221475750207901, -0.00013553177996072918, -0.09456095844507217, -0.006328305695205927, -8.11782301752828e-05, -1.2159273865108844e-05, -1.0192972421646118, -0.013205097988247871, -1.0616419315338135], "finish_reason": "stop"}], "metrics": {"energy": 151.63797884941098, "energy_per_token": 1.430546970277462, "time": 4.8189507, "time_per_token": 0.045461799056603774}}
{"outputs": [{"text": "words = re.split(r\"\\W+\", text)\n    words = [word.lower() for word in words]\n    words = [word for word in words if word not in STOPWORDS]\n    word_counts = pd.Series(words).value_counts()\n    return word_counts", "tokens": ["words", " =", " re", ".", "split", "(", "r", "\"", "\\", "W", "+", "\"", ",", " text", ")", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", "]", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n", "    ", "return", " word", "_", "counts", "\n", "\n", "#"], "logprobs": [-3.3977441787719727, -0.10257179290056229, -0.2643771171569824, -0.0001419681793777272, -2.1513006687164307, -0.10436443239450455, -0.19802536070346832, -0.4439662992954254, -0.2470533847808838, -0.39433586597442627, -0.24688203632831573, -0.007001745048910379, -0.00029952809563837945, -0.013942345045506954, -0.11465295404195786, -0.09091125428676605, -0.16347230970859528, -0.5933242440223694, -0.12332545220851898, -0.03708053007721901, -0.26844143867492676, -0.1306150108575821, -0.047725409269332886, -0.000301673193462193, -0.008874026127159595, -0.00019047829846385866, -0.00010716341057559475, -0.0009538153535686433, -1.7671289443969727, -0.019971240311861038, -0.12369073182344437, -0.24978506565093994, -0.01990264654159546, -0.05773294344544411, -0.024663513526320457, -0.057125478982925415, -0.0003040566807612777, -8.451581379631534e-05, -0.008514057844877243, -0.0009764432325027883, -0.14821791648864746, -0.178211972117424, -1.8358061424805783e-05, -0.002369217574596405, -7.152555099310121e-07, -3.40932747349143e-05, -3.313963316031732e-05, -8.940656698541716e-06, -0.008527177385985851, -0.002131572924554348, -0.11803403496742249, -1.0869436264038086, -0.0040679569356143475, -0.13583128154277802, -0.003766824258491397, -0.11536955833435059, -2.9682672902708873e-05, -0.005178965162485838, -0.02344994805753231, -0.10766877979040146, -0.0070057702250778675, -0.005567046348005533, -0.008785523474216461, -1.5497195136049413e-06, -0.0018441352294757962, -0.023141900077462196, -0.03595669940114021, -0.09344685077667236, -0.03663117438554764, -0.0069895521737635136, -5.8412379075889476e-06, -9.536697689327411e-06, -0.7436850666999817, -0.01499875821173191, -1.7864164113998413], "finish_reason": "stop"}], "metrics": {"energy": 113.4276255187988, "energy_per_token": 1.5123683402506507, "time": 3.3576906, "time_per_token": 0.044769208000000005}}
{"outputs": [{"text": "# Use regex to match all words, excluding stopwords and any characters\n    words = re.findall(r\"\\b[a-z]+\", text.lower())\n\n    # Exclude the stopwords in STOPWORDS list and remove any empty matches\n    words = [word for word in words if word not in STOPWORDS]\n    words = [word for word in words if word.strip()]\n\n    # Count the frequency of each word\n    return pd.Series(dict(Counter(words)))", "tokens": ["#", " Use", " regex", " to", " match", " all", " words", ",", " excluding", " stop", "words", " and", " any", " characters", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "\"", "\\", "b", "[", "a", "-", "z", "]+", "\"", ",", " text", ".", "lower", "())", "\n", "\n", "    ", "#", " Ex", "clude", " the", " stop", "words", " in", " ST", "OP", "W", "OR", "DS", " list", " and", " remove", " any", " empty", " matches", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", ".", "strip", "()", "]", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", "\n", "    ", "return", " pd", ".", "Series", "(", "dict", "(", "Counter", "(", "words", ")))", "\n", "\n", "if"], "logprobs": [-0.5070599317550659, -3.9843876361846924, -0.6949253678321838, -0.05913218483328819, -2.3935470581054688, -0.8599036931991577, -0.5289868712425232, -2.337627410888672, -1.0827797651290894, -1.6535648107528687, -0.06090429052710533, -2.4341883659362793, -3.85269832611084, -3.1814076900482178, -0.9777902960777283, -0.0017037175130099058, -0.7715043425559998, -0.1363634616136551, -0.09066598862409592, -6.341733387671411e-05, -0.02006775513291359, -0.0023700501769781113, -0.009262802079319954, -0.04511832445859909, -0.5395447611808777, -0.32607799768447876, -1.693152666091919, -1.1733494997024536, -0.5368144512176514, -0.0001454247540095821, -0.00038044367101974785, -2.165731906890869, -1.6505262851715088, -7.56950321374461e-05, -0.007920642383396626, -0.19732952117919922, -0.004609554074704647, -0.016592251136898994, -0.01761729083955288, -0.34009140729904175, -0.0002661589242052287, -0.01395974401384592, -2.417367458343506, -0.008947870694100857, -1.8562510013580322, -0.26529330015182495, -0.019129199907183647, -2.910400152206421, -1.529944658279419, -2.5987286790041253e-05, -0.0013447299133986235, -0.0001299296854995191, -1.4424220353248529e-05, -0.705091118812561, -3.1152591705322266, -1.210709571838379, -1.1748324632644653, -4.0385332107543945, -3.7345309257507324, -0.08878795057535172, -0.00012718822108581662, -0.4632475674152374, -0.07112646102905273, -0.033450838178396225, -0.18968430161476135, -0.018277553841471672, -0.0002119316632160917, -9.345571743324399e-05, -0.00806385651230812, -0.005255336407572031, -0.04208995774388313, -0.05332702025771141, -5.006777428206988e-06, -0.0036778682842850685, -1.1920922133867862e-06, -1.3112935448589269e-05, -3.1470757676288486e-05, -5.722029527532868e-06, -2.5007810592651367, -0.008589701727032661, -0.3603454530239105, -0.08101435750722885, -0.008344546891748905, -0.03678469732403755, -0.016595298424363136, -0.44480451941490173, -0.0001282609737245366, -2.7894584491150454e-05, -0.0006856950931251049, -0.0007242917199619114, -0.2845125198364258, -1.4761264324188232, -1.222901701927185, -0.040501583367586136, -0.12797245383262634, -0.016264254227280617, -0.024288475513458252, -0.00030858523678034544, -0.04384240880608559, -0.595884382724762, -0.09209386259317398, -0.2792632579803467, -0.005152755416929722, -0.09572648257017136, -0.014741073362529278, -0.9233510494232178, -0.0002696150622796267, -1.9174814224243164, -0.07882871478796005, -3.158996332786046e-05, -0.0012173393042758107, -0.09794018417596817, -1.2710564136505127, -0.37400317192077637, -0.16771672666072845, -0.0008669908274896443, -0.0020919598173350096, -0.12383460998535156, -1.155030608177185, -0.020175127312541008, -0.7677415013313293], "finish_reason": "stop"}], "metrics": {"energy": 162.85527822494507, "energy_per_token": 1.3459113902888022, "time": 5.6554193, "time_per_token": 0.04673900247933884}}
{"outputs": [{"text": "# Remove stopwords using regex\n    regex = re.compile(r'\\b({})\\b'.format('|'.join(STOPWORDS)))\n    stopwords = regex.findall(text)\n\n    for sw in STOPWORDS:\n        regex = re.compile(r'\\b({})\\b'.format(sw))\n        stopwords.append(regex.sub('', text))\n\n    # Create a series with word counts\n    word_counts = pd.Series(re.split('\\W+', text)).value_counts().drop(STOPWORDS)\n\n    # Remove any remaining empty words\n    word_counts.drop_duplicates()\n    word_counts = word_counts.reset_index(drop=True)\n    return word_counts", "tokens": ["#", " Remove", " stop", "words", " using", " regex", "\n", "    ", "regex", " =", " re", ".", "compile", "(", "r", "'\\", "b", "({", "})\\", "b", "'", ".", "format", "('", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")))", "\n", "    ", "stop", "words", " =", " regex", ".", "find", "all", "(", "text", ")", "\n", "\n", "    ", "for", " sw", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "        ", "regex", " =", " re", ".", "compile", "(", "r", "'\\", "b", "({", "})\\", "b", "'", ".", "format", "(", "sw", "))", "\n", "        ", "stop", "words", ".", "append", "(", "regex", ".", "sub", "('", "'", ",", " text", "))", "\n", "\n", "    ", "#", " Create", " a", " series", " with", " word", " counts", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "re", ".", "split", "('", "\\", "W", "+'", ",", " text", "))", ".", "value", "_", "counts", "()", ".", "drop", "(", "ST", "OP", "W", "OR", "DS", ")", "\n", "\n", "    ", "#", " Remove", " any", " remaining", " empty", " words", "\n", "    ", "word", "_", "counts", ".", "drop", "_", "dup", "licates", "()", "\n", "    ", "word", "_", "counts", " =", " word", "_", "counts", ".", "reset", "_", "index", "(", "drop", "=", "True", ")", "\n", "    ", "return", " word", "_", "counts", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.5070599317550659, -1.2460129261016846, -1.2688395977020264, -0.05602215975522995, -2.212292194366455, -0.3801148533821106, -0.36079472303390503, -0.0030355823691934347, -2.653952121734619, -0.512698233127594, -0.08269853889942169, -7.998623186722398e-05, -0.02571842633187771, -0.34079891443252563, -0.29186561703681946, -0.3357752859592438, -0.008562400005757809, -0.8007595539093018, -0.5049226880073547, -0.00011991735664196312, -0.0015753014013171196, -0.0003483880718704313, -0.0008218486327677965, -0.06302063167095184, -0.00028939827461726964, -9.619726915843785e-05, -5.245195097813848e-06, -0.00017426878912374377, -0.015033283270895481, -0.08740875869989395, -3.576278118089249e-07, -2.2411095415009186e-05, -2.8609820219571702e-05, -7.152531907195225e-06, -0.155670627951622, -0.0052994489669799805, -0.027919519692659378, -3.06022047996521, -0.49491631984710693, -2.1051483154296875, -0.6246036291122437, -0.0013267532922327518, -1.1847294569015503, -0.007134792860597372, -0.0008618692518211901, -0.004240212496370077, -0.0781656950712204, -0.004972709808498621, -2.3756847381591797, -0.00027176024741493165, -1.2510008811950684, -3.421557903289795, -0.023282716050744057, -0.49145254492759705, -2.9802276912960224e-06, -1.585470999998506e-05, -2.586808113846928e-05, -1.2874520507466514e-05, -0.004132304340600967, -0.007775397971272469, -0.006975938566029072, -2.717108726501465, -0.4179474711418152, -0.025343434885144234, -5.340433563105762e-05, -0.03919442743062973, -0.030560210347175598, -0.17844365537166595, -0.10270153731107712, -0.007815377786755562, -0.7250576019287109, -0.19736963510513306, -0.0022250674664974213, -0.004528386518359184, -0.0003331344632897526, -0.0006232702871784568, -0.006396179087460041, -0.009424718096852303, -0.037493400275707245, -0.003281448734924197, -0.016586152836680412, -1.2275617122650146, -0.0017676219576969743, -0.6495406627655029, -1.6756162643432617, -0.014693498611450195, -0.2643832564353943, -0.006587338168174028, -1.7963483333587646, -0.2620714008808136, -0.03577176481485367, -0.00047255316167138517, -0.13854265213012695, -0.1794886589050293, -0.0063566165044903755, -0.06102384999394417, -0.005091557744890451, -0.3027809262275696, -2.620741367340088, -0.21031074225902557, -3.214428663253784, -1.3754000663757324, -0.9170477390289307, -0.8295221328735352, -0.4022151231765747, -0.0011069605825468898, -0.8502349257469177, -0.020234473049640656, -0.05883864685893059, -0.0067732506431639194, -0.05663187429308891, -0.0002076410164590925, -0.009663705714046955, -0.08377918601036072, -3.6548357009887695, -0.0007625294383615255, -1.336390733718872, -0.9721543788909912, -0.41646692156791687, -0.2129722684621811, -0.22024992108345032, -0.00019786784832831472, -0.10377347469329834, -0.6811129450798035, -0.5620633363723755, -0.31772953271865845, -2.50339189733495e-06, -0.0006697318749502301, -0.0699363425374031, -1.3523507118225098, -0.15160733461380005, -0.11235591769218445, -0.46398013830184937, -1.1920922133867862e-06, -0.00011729506513802335, -0.00025948495022021234, -1.168244216387393e-05, -0.15882086753845215, -0.1049596518278122, -0.27407264709472656, -0.000556314189452678, -0.8327082991600037, -1.2932748794555664, -2.2368061542510986, -1.072184443473816, -1.57090163230896, -2.2010464668273926, -0.412049800157547, -0.0002727136597968638, -0.09713947027921677, -5.3165931603871286e-05, -0.00025245340657420456, -2.3146157264709473, -0.20215776562690735, -2.990851879119873, -0.00558779202401638, -3.4570634852570947e-06, -0.8960708975791931, -0.6163389682769775, -1.279910922050476, -0.6991146206855774, -0.00047195740626193583, -0.001493054092861712, -0.3417918086051941, -0.04269097372889519, -1.3708974620385561e-05, -3.397406908334233e-05, -0.12090451270341873, -3.3915669918060303, -2.1457441107486375e-05, -0.00020132421923335642, -0.29703444242477417, -0.1661136895418167, -0.009672088548541069, -0.005868941079825163, -0.017559193074703217, -0.07795719802379608, -1.6200631856918335, -0.7019807696342468, -0.029397770762443542, -0.00015484087634831667, -6.794906312279636e-06, -1.3029296398162842, -3.814689989667386e-06, -5.960462772236497e-07, -0.0001541257370263338, -9.858122211880982e-05, -2.7094595432281494, -0.0087501909583807], "finish_reason": "stop"}], "metrics": {"energy": 271.21913355636605, "energy_per_token": 1.4350218706686033, "time": 9.008337, "time_per_token": 0.04766315873015872}}
{"outputs": [{"text": "words = re.sub(r'[^\\w\\s]', '', text)\n    words = re.sub(r'\\d+', '', words)\n    words = words.split()\n    stopwords = set(STOPWORDS)\n    words = [word for word in words if word not in stopwords]\n    return pd.Series(words).value_counts()", "tokens": ["words", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "    ", "words", " =", " re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " words", ")", "\n", "    ", "words", " =", " words", ".", "split", "()", "\n", "    ", "stop", "words", " =", " set", "(", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " stop", "words", "]", "\n", "    ", "return", " pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n", "\n", "if"], "logprobs": [-3.3977441787719727, -0.10257179290056229, -0.2643771171569824, -0.0001419681793777272, -1.7620604038238525, -0.06958913803100586, -0.2953977584838867, -1.6026746034622192, -0.17092275619506836, -0.2074006199836731, -0.0017921352991834283, -0.48216894268989563, -0.012105684727430344, -0.03536899760365486, -0.02514013461768627, -0.0002002515539061278, -0.3142452538013458, -0.00024911639047786593, -0.0232793390750885, -0.08357251435518265, -1.8650035858154297, -0.057464879006147385, -0.14416596293449402, -0.06588859856128693, -1.5227572917938232, -0.004133610054850578, -0.16063310205936432, -0.04950205609202385, -0.02700524777173996, -0.45448338985443115, -1.3246465921401978, -0.6105343699455261, -9.30981186684221e-05, -0.12263878434896469, -0.00014172980445437133, -0.049206241965293884, -0.010717923752963543, -0.04674409702420235, -0.09521840512752533, -0.09469478577375412, -0.01830962486565113, -0.6618302464485168, -0.0004855407460127026, -1.0407488346099854, -0.12995938956737518, -0.0037450906820595264, -0.4503656029701233, -2.7284958362579346, -0.5199443697929382, -0.33350709080696106, -1.2864497900009155, -0.005739043932408094, -0.018461422994732857, -8.344646857949556e-07, -8.106198947643861e-06, -2.0503786799963564e-05, -5.960446742392378e-06, -0.05517057701945305, -0.011801308952271938, -0.10298345237970352, -0.3804837167263031, -0.16747981309890747, -0.060542602092027664, -0.21577411890029907, -0.5582960247993469, -0.0002261144545627758, -0.00022575691400561482, -0.004261223133653402, -0.005112076178193092, -0.05903464928269386, -0.3463030457496643, -4.076874756719917e-05, -0.03546104580163956, -4.541770613286644e-05, -0.016133472323417664, -0.0014910305617377162, -0.09135047346353531, -1.1800299882888794, -0.0411284975707531, -6.663577369181439e-05, -0.004005386959761381, -0.12038888782262802, -0.39625146985054016, -0.05327175557613373, -0.027281716465950012, -0.026199189946055412, -1.0490362910786644e-05, -0.0008185135084204376, -0.029344521462917328, -0.9376144409179688, -0.03043394349515438, -0.8070237636566162], "finish_reason": "stop"}], "metrics": {"energy": 150.38038259124758, "energy_per_token": 1.6345693759918216, "time": 4.191044, "time_per_token": 0.04555482608695652}}
{"outputs": [{"text": "# Remove specific stopwords and convert text to lowercase\n    text = re.sub(r\"\\b(\" + r\"|\".join(STOPWORDS) + r\")\\b\", \" \", text)\n    text = text.lower()\n\n    # Tokenize and count words in text\n    word_counts = pd.Series(re.findall(r\"\\w+\", text)).value_counts()\n\n    # Exclude stopwords from word counts\n    word_counts = word_counts[word_counts.index != \"\"]\n\n    return word_counts", "tokens": ["#", " Remove", " specific", " stop", "words", " and", " convert", " text", " to", " lower", "case", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "\"", "\\", "b", "(", "\"", " +", " r", "\"", "|", "\"", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "\"", ")\\", "b", "\"", ",", " \"", " \"", ",", " text", ")", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "    ", "#", " Token", "ize", " and", " count", " words", " in", " text", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", "))", ".", "value", "_", "counts", "()", "\n", "\n", "    ", "#", " Ex", "clude", " stop", "words", " from", " word", " counts", "\n", "    ", "word", "_", "counts", " =", " word", "_", "counts", "[", "word", "_", "counts", ".", "index", " ", "!", "=", " \"", "\"", "]", "\n", "\n", "    ", "return", " word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -1.1972424983978271, -0.018017200753092766, -0.015014964155852795, -3.0989181995391846, -0.9101758003234863, -1.0835225582122803, -0.023597007617354393, -0.037583187222480774, -0.07220936566591263, -0.1016562357544899, -0.0009279712685383856, -0.5531107187271118, -0.0799257680773735, -0.47729554772377014, -8.105902816168964e-05, -0.01486146729439497, -0.05847283825278282, -0.32351213693618774, -0.7135302424430847, -0.5647618174552917, -0.10665308684110641, -0.5197165608406067, -0.23253288865089417, -0.00869795773178339, -2.056145668029785, -0.016446148976683617, -0.008503420278429985, -0.0003734129713848233, -0.00013398226292338222, -0.00013076403411105275, -0.012995549477636814, -0.027733786031603813, -4.768370445162873e-07, -1.7762025890988298e-05, -2.7656173188006505e-05, -8.4638240878121e-06, -0.008234124630689621, -0.007787699811160564, -0.007620194926857948, -0.026580361649394035, -0.011431549675762653, -0.0025958672631531954, -0.0770433098077774, -0.00036006642039865255, -0.06182821840047836, -1.9189043045043945, -0.00015793983766343445, -0.009225361049175262, -1.0020866394042969, -0.9738823175430298, -0.015451248735189438, -0.06623352319002151, -0.006654364988207817, -0.04432252049446106, -9.095255518332124e-05, -0.012206613086163998, -5.245071224635467e-05, -0.012663899920880795, -0.1672825813293457, -0.00037079135654494166, -0.00433991989120841, -1.7176063060760498, -0.0033117469865828753, -1.959632396697998, -0.06643354892730713, -2.3735523223876953, -2.4551429748535156, -0.45630133152008057, -0.06131226569414139, -0.00018189683032687753, -1.0291318893432617, -0.0038956718053668737, -0.07883455604314804, -0.002086368855088949, -0.111488938331604, -1.07287787614041e-05, -0.00760623486712575, -0.05060986801981926, -1.8412140607833862, -0.006192070432007313, -0.13619941473007202, -0.00014590153296012431, -0.0023492376785725355, -0.009492027573287487, -0.292241632938385, -0.15198659896850586, -0.06265265494585037, -0.0435781255364418, -0.00543047022074461, -4.076874756719917e-05, -0.0015076948329806328, -0.25021806359291077, -0.015674835070967674, -0.03726372867822647, 0.0, -0.0015299530932679772, -0.022281773388385773, -0.056399572640657425, -0.10664912313222885, -0.00011765264935093, -1.1785775423049927, -1.30791175365448, -0.006990144029259682, -1.2711255550384521, -0.01595187373459339, -1.1346800327301025, -0.5965149402618408, -0.2717972993850708, -0.043552447110414505, -0.00017236177518498152, -0.47898250818252563, -8.737658936297521e-05, -0.0015816095983609557, -0.21493755280971527, -0.011642015539109707, -1.8596476365928538e-05, -1.9788545614574105e-05, -0.640774130821228, -0.5505539178848267, -0.00013457823661156, -2.098061486321967e-05, -0.015671197324991226, -0.0024586468935012817, -1.4835727214813232, -1.3112935448589269e-05, -5.3165931603871286e-05, -1.694688081741333, -0.534297525882721, -0.022467706352472305, -0.026909517124295235, -0.07651527225971222, -9.691245941212401e-05, -0.07171160727739334, -0.008522686548531055, -1.9311717551317997e-05, -5.245195097813848e-06, -1.242173671722412, -1.7881377516459906e-06, -7.152555099310121e-07, -7.939023635117337e-05, -9.786603914108127e-05, -0.05079763010144234], "finish_reason": "stop"}], "metrics": {"energy": 187.9516924247741, "energy_per_token": 1.3052200862831536, "time": 6.693305, "time_per_token": 0.04648128472222222}}
{"outputs": [{"text": "# Split text into words\n    words = re.findall(r\"\\w+\", text.lower())\n\n    # Remove specific stopwords\n    words = [word for word in words if word not in STOPWORDS]\n\n    # Count word frequencies\n    word_counts = Counter(words).most_common()\n\n    # Create a pandas Series with word frequencies\n    word_freq = pd.Series(word_counts)\n\n    # Return the Series\n    return word_freq", "tokens": ["#", " Split", " text", " into", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ".", "lower", "())", "\n", "\n", "    ", "#", " Remove", " specific", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " word", " frequencies", "\n", "    ", "word", "_", "counts", " =", " Counter", "(", "words", ")", ".", "most", "_", "common", "()", "\n", "\n", "    ", "#", " Create", " a", " pandas", " Series", " with", " word", " frequencies", "\n", "    ", "word", "_", "freq", " =", " pd", ".", "Series", "(", "word", "_", "counts", ")", "\n", "\n", "    ", "#", " Return", " the", " Series", "\n", "    ", "return", " word", "_", "freq", "\n", "\n", "def"], "logprobs": [-0.5070599317550659, -2.6625359058380127, -1.2050200700759888, -0.06034880504012108, -0.29833096265792847, -0.39226898550987244, -0.0009409529156982899, -0.07004593312740326, -0.01744626834988594, -0.1137084886431694, -3.504691630951129e-05, -0.12819354236125946, -0.0009635811438784003, -0.010095486417412758, -0.024141864851117134, -0.5990095138549805, -0.09504704177379608, -0.07801122963428497, -0.17442718148231506, -0.004682527855038643, -3.8980677345534787e-05, -0.006640154868364334, -1.5816270112991333, -0.006005457136780024, -0.0071265073493123055, -0.01285621803253889, -0.09732832759618759, -0.00023112009512260556, -0.002315342193469405, -0.20017176866531372, -2.030724287033081, -0.013951985165476799, -0.010087107308208942, -0.4248925745487213, -0.000390215078368783, -0.577569842338562, -0.08952038735151291, -0.006873889360576868, -0.13193915784358978, -0.0030607779044657946, -7.009260298218578e-05, -0.000102037942269817, -0.0011456600623205304, -0.0028676362708210945, -0.009115862660109997, -0.009750714525580406, -1.0251946150674485e-05, -0.0038062522653490305, -2.3841855067985307e-07, -2.6225699912174605e-05, -4.827859811484814e-05, -6.079655122448457e-06, -0.001193526084534824, -0.0002849888114724308, -0.007653911132365465, -0.00018988236843142658, -0.004549509845674038, -0.15304282307624817, -0.7250738143920898, -0.16070730984210968, -0.11243997514247894, -0.00034517052699811757, -0.27921411395072937, -0.0006306566647253931, -0.1412651091814041, -0.0024138144217431545, -2.1355109214782715, -0.0002698534226510674, -0.0007394201820716262, -0.00010835537250386551, -1.8373959064483643, -0.020500674843788147, -1.1920922133867862e-06, -0.00015567521040793508, -0.023472771048545837, -0.007131123449653387, -0.04930122569203377, -0.00016652150952722877, -0.2805873155593872, -1.0662761926651, -0.1902569830417633, -0.3125835657119751, -0.02229040116071701, -0.7610281109809875, -0.12516207993030548, -0.07352393865585327, -0.2557273209095001, -0.00027807659353129566, -0.7703222632408142, -0.002777054673060775, -2.522972345352173, -0.47839346528053284, -0.019615713506937027, -0.002485997276380658, -0.013138625770807266, -0.08223924785852432, -0.07907392829656601, -0.00024470672360621393, -2.658331868587993e-05, -0.42491844296455383, -0.32606714963912964, -0.27438583970069885, -0.00020072828920092434, -2.234321117401123, -1.4413741827011108, -0.6012279391288757, -0.4031120836734772, -0.10315357148647308, -0.0005968220066279173, -0.004626166541129351, -0.010051703080534935, -9.894321920000948e-06, -0.00034814971149899065, -0.8474476933479309, -0.011339737102389336, -1.3777015209197998], "finish_reason": "stop"}], "metrics": {"energy": 182.94024982070917, "energy_per_token": 1.5770711191440445, "time": 5.240633, "time_per_token": 0.04517787068965517}}
{"outputs": [{"text": "# Remove specific stopwords from the text and convert the text to lowercase\n    text = re.sub(r'\\b(in|is|are|the)\\b', '', text, flags=re.IGNORECASE)\n    text = re.sub(r'\\s+', ' ', text)\n    text = text.lower()\n\n    # Count the frequency of each word in the text and remove stopwords\n    word_counts = pd.Series(text.split()).value_counts()\n    word_counts.drop(STOPWORDS, inplace=True)\n\n    return word_counts", "tokens": ["#", " Remove", " specific", " stop", "words", " from", " the", " text", " and", " convert", " the", " text", " to", " lower", "case", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "b", "(", "in", "|", "is", "|", "are", "|", "the", ")\\", "b", "'", ",", " ''", ",", " text", ",", " flags", "=", "re", ".", "IGN", "ORE", "C", "ASE", ")", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " text", ")", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", " in", " the", " text", " and", " remove", " stop", "words", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "text", ".", "split", "())", ".", "value", "_", "counts", "()", "\n", "    ", "word", "_", "counts", ".", "drop", "(", "ST", "OP", "W", "OR", "DS", ",", " in", "place", "=", "True", ")", "\n", "\n", "    ", "return", " word", "_", "counts"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -1.1972424983978271, -0.018017200753092766, -0.015014964155852795, -0.8453629016876221, -0.2777825891971588, -0.07439390569925308, -3.1317903995513916, -0.9554553031921387, -2.4235799312591553, -0.24452409148216248, -0.0643610879778862, -0.11136246472597122, -0.05605529993772507, -0.27571338415145874, -0.0012754409108310938, -0.4977223873138428, -0.17134398221969604, -0.2820473909378052, -5.829164365422912e-05, -0.01207188330590725, -0.08862464874982834, -0.38696807622909546, -0.7795440554618835, -0.05870409682393074, -1.1436301469802856, -3.142666816711426, -0.039411623030900955, -0.25922492146492004, -0.01120665855705738, -0.0039411503821611404, -1.1340198516845703, -0.341137558221817, -0.26803165674209595, -0.0031522843055427074, -0.031682148575782776, -0.00010251473577227443, -0.2549172639846802, -0.0001731960946926847, -0.014005119912326336, -1.4526026248931885, -0.0345606729388237, -0.0027296210173517466, -0.0004686211177613586, -0.005104604177176952, -0.12089405953884125, -1.3232143828645349e-05, -2.682172998902388e-05, -0.0009370227344334126, -0.012747470289468765, -0.6046224236488342, -0.041525062173604965, -0.13503891229629517, -0.009001980535686016, -2.4951703548431396, -0.0004412154376041144, -0.0064962636679410934, -0.11674860864877701, -0.02046925760805607, -0.33435195684432983, -1.567888617515564, -0.16898201406002045, -3.194758028257638e-05, -0.017667535692453384, -0.0004067785630468279, -7.974783511599526e-05, -0.005388497840613127, -0.08809079229831696, -0.801870584487915, -0.22234119474887848, -0.1027907133102417, -0.00924721173942089, -0.04878239706158638, -0.0003116837178822607, -0.07778868824243546, -3.707340147229843e-05, -0.019440356642007828, -0.08894992619752884, -0.0003875934926327318, -0.007600083015859127, -2.5389325618743896, -0.09078933298587799, -0.13438962399959564, -0.00042572495294734836, -0.07023497670888901, -0.010001072660088539, -0.38307347893714905, -0.01691955141723156, -0.05971664935350418, -2.246412754058838, -1.109473705291748, -2.022188186645508, -0.00972533319145441, -0.14779557287693024, -0.0004786299541592598, -0.41803091764450073, -0.00197001826018095, -0.08198019862174988, -0.006440478377044201, -0.1418931782245636, -0.0003046525234822184, -0.0056761037558317184, -0.17857159674167633, -0.609643816947937, -0.003721100278198719, -0.016689209267497063, -0.24732458591461182, -0.09330743551254272, -0.17050637304782867, -1.1920928244535389e-07, -0.0019983339589089155, -0.08459832519292831, -0.28101006150245667, -0.08893858641386032, -0.1462029069662094, -2.3603161025675945e-05, -0.0002512616047170013, -0.8382301926612854, -0.11263927072286606, -0.003657320514321327, -0.03630336374044418, -3.576278118089249e-07, -5.960446742392378e-06, -1.1920922133867862e-06, -1.0490362910786644e-05, -0.0024812407791614532, -0.016988469287753105, -7.033323527139146e-06, -0.005559221841394901, -0.0006157647585496306, -0.5477694272994995, -0.04274728521704674, -0.15631328523159027, -0.00016378014697693288, -0.1013340875506401, -0.0033452522475272417, -3.659658250398934e-05, -6.6756979322235566e-06], "finish_reason": "stop"}], "metrics": {"energy": 187.834266122818, "energy_per_token": 1.3513256555598419, "time": 6.4947524, "time_per_token": 0.04672483741007195}}
{"outputs": [{"text": "# Remove specific stopwords from the text\n    words = re.findall(r\"\\w+\", text)\n    words = [word.lower() for word in words if word not in STOPWORDS]\n\n    # Count the frequency of each word\n    word_counts = pd.Series(words).value_counts()\n\n    return word_counts", "tokens": ["#", " Remove", " specific", " stop", "words", " from", " the", " text", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ")", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n", "\n", "    ", "return", " word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -1.1972424983978271, -0.018017200753092766, -0.015014964155852795, -0.8453629016876221, -0.2777825891971588, -0.07439390569925308, -0.20825794339179993, -0.002181057119742036, -3.0110409259796143, -0.08311636745929718, -0.4382143020629883, -6.01988795096986e-05, -0.361253947019577, -0.00275470525957644, -0.007463192567229271, -0.021178996190428734, -0.9457170963287354, -0.21461424231529236, -0.09547524154186249, -0.26981377601623535, -0.006167782936245203, -5.054346183896996e-05, -0.014470045454800129, -0.2718639671802521, -0.023502230644226074, -0.10295441001653671, -0.7303512096405029, -0.15910427272319794, -0.029043959453701973, -0.20896653831005096, -0.36047738790512085, -0.01259621512144804, -7.295342220459133e-05, -0.002842435846105218, -0.00011038171214750037, -8.797258487902582e-05, -0.00320825376547873, -0.10966000705957413, -0.020255034789443016, -0.694110631942749, -1.8596476365928538e-05, -0.0019881022162735462, -5.960462772236497e-07, -2.5987286790041253e-05, -3.5523738915799186e-05, -9.179073458653875e-06, -0.0027598170563578606, -0.0025435497518628836, -0.13452062010765076, -0.00027616979787126184, -0.011816741898655891, -0.15389679372310638, -0.14804624021053314, -0.07000859081745148, -0.0008027906878851354, -0.07158444076776505, -0.005151806864887476, -0.40861672163009644, -0.00016819016309455037, -0.34554120898246765, -0.0005945583689026535, -0.11994500458240509, -0.0033049744088202715, -0.13664352893829346, -0.0006945105269551277, -0.005352926440536976, -0.04480981454253197, -0.24352595210075378, -0.007667397148907185, -0.0023895539343357086, -0.00978813599795103, -2.3841855067985307e-07, -0.0021089711226522923, -0.020929787307977676, -0.037373751401901245, -0.0955730751156807, -0.00010168035078095272, -0.09099908918142319, -0.0046838331036269665, -1.156323378381785e-05, -9.536697689327411e-06, -1.0010435581207275, -4.768370445162873e-07, -4.768370445162873e-07, -4.577531944960356e-05, -0.0001551984460093081, -0.038123004138469696], "finish_reason": "stop"}], "metrics": {"energy": 150.65639224815365, "energy_per_token": 1.6927684522264455, "time": 3.9851203, "time_per_token": 0.044776632584269664}}
{"outputs": [{"text": "# Remove stopwords from text\n    stopwords_regex = re.compile(r'\\b(' + r'|'.join(STOPWORDS) + r')\\b')\n    text = re.sub(stopwords_regex, ' ', text)\n    # Tokenize text into words\n    words = re.findall(r'\\w+', text.lower())\n    # Count the frequency of each word\n    return pd.Series(Counter(words).values(), index=Counter(words).keys())", "tokens": ["#", " Remove", " stop", "words", " from", " text", "\n", "    ", "stop", "words", "_", "regex", " =", " re", ".", "compile", "(", "r", "'\\", "b", "('", " +", " r", "'", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "')", "\n", "    ", "text", " =", " re", ".", "sub", "(", "stop", "words", "_", "regex", ",", " '", " '", ",", " text", ")", "\n", "    ", "#", " Token", "ize", " text", " into", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", "\n", "    ", "return", " pd", ".", "Series", "(", "Counter", "(", "words", ")", ".", "values", "()", ",", " index", "=", "Counter", "(", "words", ")", ".", "keys", "())"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -1.2688395977020264, -0.05602215975522995, -1.1240772008895874, -1.5206935405731201, -0.24753466248512268, -0.001378896413370967, -2.3992505073547363, -0.5034239888191223, -0.8761877417564392, -0.7615717649459839, -0.005441614892333746, -0.44921591877937317, -4.172238186583854e-05, -0.009515408426523209, -0.28422608971595764, -0.6890641450881958, -0.42950817942619324, -0.0005889588501304388, -0.5955302715301514, -0.006152499467134476, -0.9552916884422302, -0.0765124037861824, -0.0018374717328697443, -0.00024828212917782366, -0.0001003691868390888, -8.439661905867979e-05, -0.016353856772184372, -0.14193135499954224, -5.960462772236497e-07, -6.556489552167477e-06, -2.658331868587993e-05, -6.318072337307967e-06, -0.011502731591463089, -0.003234870731830597, -0.003402517642825842, -0.005471610929816961, -0.00324758468195796, -0.19437630474567413, -0.015198846347630024, -0.009034468792378902, -0.4596041738986969, -0.3394056558609009, -1.2013864517211914, -7.068861305015162e-05, -0.0037219314835965633, -0.0005465444410219789, -0.0057588377967476845, -0.00015436411194968969, -0.00013374387344811112, -3.2305197237292305e-05, -0.00029571453342214227, -1.522817611694336, -0.00754932826384902, -0.00018404220463708043, -0.0017445358680561185, -0.04787212610244751, -0.032823361456394196, -2.1381049156188965, -0.23159629106521606, -1.7372437715530396, -0.005404978524893522, -0.19377072155475616, -0.6780474781990051, -0.12835155427455902, -0.14108426868915558, -0.0005827635759487748, -0.25732699036598206, -0.020491447299718857, -0.5405851602554321, -0.0027114315889775753, -0.14908988773822784, -0.0038224030286073685, -0.009440070018172264, -0.002359108766540885, -0.06587107479572296, -0.04642288759350777, -0.0024694681633263826, -1.6689160474925302e-05, -0.0032089666929095984, -1.486230731010437, -0.0065045543015003204, -0.0025839770678430796, -0.0060015469789505005, -0.03362606093287468, -0.015307211317121983, -0.20577965676784515, -1.3877551555633545, -0.0803733542561531, -0.0012081712484359741, -0.06966263800859451, -0.003893178189173341, -0.26594507694244385, -0.00043418517452664673, -1.6945186853408813, -0.15981808304786682, -2.372236667724792e-05, -0.0012515101116150618, -0.05027016997337341, -1.4081181287765503, -0.0007169060409069061, -0.0010405131615698338, -0.08889713883399963, -0.01574278250336647, -1.790665626525879, -0.2314601093530655, -0.0005698964232578874, -0.07261386513710022, -0.003465838497504592, -0.385759174823761, -0.00011216964776394889, -0.00016592556494288146, -0.0007479969062842429, -0.00036376056959852576, -0.0003251500893384218, -0.0021207479294389486], "finish_reason": "stop"}], "metrics": {"energy": 189.74765483665465, "energy_per_token": 1.621774827663715, "time": 5.434032, "time_per_token": 0.04644471794871795}}
{"outputs": [{"text": "# Remove stopwords using regular expressions\n    regex = re.compile('a?n?\\s' + '|'.join(STOPWORDS))\n    text = re.sub(regex, '', text)\n\n    # Remove leading and trailing spaces\n    text = text.strip()\n\n    # Split the text into words using the \"\\S+\" pattern (non-whitespace character(s)+)\n    words = re.findall(r'\\S+', text)\n\n    # Count the frequency of each word and return as a Series\n    return pd.Series(words, name='words').value_counts()", "tokens": ["#", " Remove", " stop", "words", " using", " regular", " expressions", "\n", "    ", "regex", " =", " re", ".", "compile", "('", "a", "?", "n", "?", "\\", "s", "'", " +", " '", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", "))", "\n", "    ", "text", " =", " re", ".", "sub", "(", "regex", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Remove", " leading", " and", " trailing", " spaces", "\n", "    ", "text", " =", " text", ".", "strip", "()", "\n", "\n", "    ", "#", " Split", " the", " text", " into", " words", " using", " the", " \"", "\\", "S", "+", "\"", " pattern", " (", "non", "-", "wh", "ites", "pace", " character", "(", "s", ")+", ")", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "S", "+'", ",", " text", ")", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", " and", " return", " as", " a", " Series", "\n", "    ", "return", " pd", ".", "Series", "(", "words", ",", " name", "='", "words", "')", ".", "value", "_", "counts", "()"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -1.2688395977020264, -0.05602215975522995, -2.212292194366455, -2.1052277088165283, -0.6215982437133789, -0.21145710349082947, -0.002580291125923395, -2.6688780784606934, -0.6956118941307068, -0.11691269278526306, -7.331102824537084e-05, -0.013202627189457417, -1.7654812335968018, -2.873955726623535, -3.0440478324890137, -0.38465890288352966, -0.040082622319459915, -2.59359073638916, -0.6703777313232422, -3.035160541534424, -0.17025907337665558, -0.343144029378891, -0.037785351276397705, -0.0029728286899626255, -0.0006703275139443576, -0.00017081231635529548, -0.060803670436143875, -0.11354739218950272, -7.152555099310121e-07, -3.611976353568025e-05, -6.83045873302035e-05, -9.298280929215252e-06, -1.32778799533844, -0.04350953549146652, -0.029055537655949593, -0.7790935635566711, -0.13292939960956573, -1.9937984943389893, -0.00042715485324151814, -0.0021491781808435917, -0.004142632707953453, -0.0025232164189219475, -0.0007549058645963669, -0.5761280655860901, -0.00019274283840786666, -0.0063223824836313725, -0.18510136008262634, -0.03826035186648369, -0.22650209069252014, -0.0003812778159044683, -0.026227757334709167, -2.6985020637512207, -2.7009470462799072, -0.2260143756866455, -0.0020616245456039906, -1.870371699333191, -0.3554644286632538, -0.0002942844294011593, -0.009533120319247246, -0.0038067272398620844, -0.10164374113082886, -0.00011467275908216834, -0.013626179657876492, -0.0030687404796481133, -0.00875314511358738, -0.018079133704304695, -0.0002843929105438292, -0.00588612537831068, -0.7553449273109436, -0.957073450088501, -0.010152130387723446, -0.03147897869348526, -0.1407434195280075, -2.1248509883880615, -3.4670979976654053, -3.3181421756744385, -1.0023813247680664, -2.1697583198547363, -0.1966836154460907, -0.006391559727489948, -0.65108323097229, -2.6781187057495117, -0.7087897658348083, -0.0023966894950717688, -0.4629916548728943, -8.582700684200972e-05, -0.004016666207462549, -2.1348187923431396, -2.731022357940674, -0.0011634016409516335, -1.3070831298828125, -0.07698481529951096, -0.06816181540489197, -0.0004158347437623888, -0.08009105175733566, -0.022026775404810905, -0.12946434319019318, -9.548207890475169e-05, -0.14271126687526703, -0.00012575789878610522, -0.24738648533821106, -0.22517462074756622, -0.297565221786499, -0.02615320309996605, -0.004439142532646656, -2.13382354559144e-05, -0.0017133570509031415, -0.018344152718782425, -0.0038177715614438057, -0.024895748123526573, -0.00032395837479270995, -0.020184239372611046, -0.6949312090873718, -0.09230910986661911, -0.28145936131477356, -0.002314628567546606, -0.03663186356425285, -0.005886006634682417, -2.8925602436065674, -0.6175111532211304, -1.530599594116211, -0.21514426171779633, -0.36165398359298706, -0.1023404523730278, -0.0007394201820716262, -0.6804447770118713, -0.07948292791843414, -3.671578815556131e-05, -0.0012044801842421293, -0.14016559720039368, -0.9837557673454285, -2.9696860313415527, -2.650961399078369, -0.44390711188316345, -2.6582109928131104, -0.0233401320874691, -0.004384072497487068, -0.014089752919971943, -8.702239938429557e-06, -0.001105888863094151, -0.050542548298835754], "finish_reason": "stop"}], "metrics": {"energy": 200.88634257125852, "energy_per_token": 1.4047995984004094, "time": 6.4636817, "time_per_token": 0.04520057132867133}}
{"outputs": [{"text": "# Clean the text to remove special characters and stopwords\n    cleaned_text = re.sub(r\"[^\\w\\s]\", \" \", text)\n    for word in STOPWORDS:\n        cleaned_text = cleaned_text.replace(word, \" \")\n\n    # Count the frequency of words in cleaned_text\n    word_counts = pd.Series(cleaned_text.split()).value_counts()\n    return word_counts", "tokens": ["#", " Clean", " the", " text", " to", " remove", " special", " characters", " and", " stop", "words", "\n", "    ", "cleaned", "_", "text", " =", " re", ".", "sub", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", " \"", ",", " text", ")", "\n", "    ", "for", " word", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "        ", "cleaned", "_", "text", " =", " cleaned", "_", "text", ".", "replace", "(", "word", ",", " \"", " \"", ")", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " words", " in", " cleaned", "_", "text", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "cleaned", "_", "text", ".", "split", "())", ".", "value", "_", "counts", "()", "\n", "    ", "return", " word", "_", "counts", "\n", "\n", "#"], "logprobs": [-0.5070599317550659, -3.6419126987457275, -0.43603405356407166, -0.05196444317698479, -3.538738489151001, -0.12767662107944489, -1.318622350692749, -0.010431881994009018, -0.4647381007671356, -0.40423905849456787, -0.034470152109861374, -0.12139242142438889, -0.002647468587383628, -0.8978947997093201, -0.008835033513605595, -0.0022025867365300655, -0.0015882747247815132, -0.1696377992630005, -0.00018070495571009815, -0.00529031828045845, -0.02089628204703331, -0.03142872825264931, -0.3290974497795105, -0.09708181768655777, -0.7647101879119873, -0.001837114803493023, -0.0949677973985672, -0.003330044448375702, -0.09620744735002518, -8.380061626667157e-05, -0.015033283270895481, -1.1267647743225098, -6.41325386823155e-05, -0.013136273249983788, -0.08958229422569275, -0.706071674823761, -0.06345202028751373, -0.8055731058120728, -0.9672455191612244, -0.0003469580551609397, -0.004050504416227341, -1.1920922133867862e-06, -9.298280929215252e-06, -4.541770613286644e-05, -5.722029527532868e-06, -0.0009664393728598952, -0.0009176096064038575, -0.0022557545453310013, -0.044822122901678085, -1.2755313036905136e-05, -5.8887653722194955e-05, -0.005167342722415924, -0.3658098876476288, -2.884823152271565e-05, -3.933898824470816e-06, -8.689979586051777e-05, -0.003141232766211033, -0.001259844284504652, -0.04342963919043541, -0.013408015482127666, -0.016149191185832024, -0.44119104743003845, -0.0003401654539629817, -0.017907489091157913, -0.6969699263572693, -0.0005267662927508354, -0.026517674326896667, -1.2982194423675537, -0.10227792710065842, -0.20024241507053375, -0.0006161222117953002, -2.7114040851593018, -0.5440123677253723, -2.960834264755249, -0.09773814678192139, -0.00028236693469807506, -0.19386254251003265, -0.000596107158344239, -0.1962009221315384, -0.0013684204313904047, -0.1009296253323555, -0.005593718960881233, -0.18335172533988953, -2.586808113846928e-05, -0.00602927478030324, -0.025147806853055954, -0.266767293214798, -7.86750388215296e-05, -2.145764938177308e-06, -0.0036482936702668667, -0.30852609872817993, -0.04411745443940163, -0.06804388016462326, -0.041798803955316544, 0.0, -0.0020320022013038397, -0.007484727073460817, -0.03473742678761482, -2.09894061088562, -0.16016864776611328, -0.008533087559044361, -1.966933996300213e-05, -7.867782187531702e-06, -0.7907740473747253, -0.020962823182344437, -1.5351197719573975], "finish_reason": "stop"}], "metrics": {"energy": 150.27059229087828, "energy_per_token": 1.4176470970837574, "time": 5.235907, "time_per_token": 0.049395349056603775}}
{"outputs": [{"text": "# Convert the text to lowercase\n    text = text.lower()\n\n    # Remove punctuation\n    text = re.sub(r\"[^\\w\\s]\", \"\", text)\n\n    # Remove stopwords using a regular expression\n    pattern = r\"(?i)\\b(?:{})\\b\".format(\"|\".join(STOPWORDS))\n    text = re.sub(pattern, \"\", text)\n\n    # Convert the text into words\n    words = text.split()\n\n    # Count the frequency of each word\n    word_counts = pd.Series(words).value_counts()\n\n    return word_counts", "tokens": ["#", " Convert", " the", " text", " to", " lower", "case", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ",", " text", ")", "\n", "\n", "    ", "#", " Remove", " stop", "words", " using", " a", " regular", " expression", "\n", "    ", "pattern", " =", " r", "\"", "(", "?", "i", ")\\", "b", "(", "?", ":", "{", "})\\", "b", "\"", ".", "format", "(", "\"", "|", "\"", ".", "join", "(", "ST", "OP", "W", "OR", "DS", "))", "\n", "    ", "text", " =", " re", ".", "sub", "(", "pattern", ",", " \"", "\"", ",", " text", ")", "\n", "\n", "    ", "#", " Convert", " the", " text", " into", " words", "\n", "    ", "words", " =", " text", ".", "split", "()", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n", "\n", "    ", "return", " word", "_", "counts"], "logprobs": [-0.5070599317550659, -2.8595736026763916, -0.766381025314331, -0.1598593294620514, -0.14643265306949615, -0.42080026865005493, -0.03755035251379013, -0.8590964078903198, -0.0010353925172239542, -0.08783336728811264, -0.057577311992645264, -0.013145449571311474, -0.00013386306818574667, -0.001086121890693903, -0.0001081169830285944, -0.0016552807064726949, -0.22664065659046173, -0.0003545847721397877, -0.004006574396044016, -0.2865218222141266, -1.6495909690856934, -0.27489352226257324, -1.437969446182251, -0.0003599472693167627, -0.20677942037582397, -0.018231434747576714, -0.06399013102054596, -3.9219088648678735e-05, -0.0016287406906485558, -0.01580767333507538, -0.009613174013793468, -0.5950696468353271, -0.10872150957584381, -0.3011842370033264, -0.00036054308293387294, -0.01936599612236023, -0.001313776709139347, -0.033385470509529114, -0.00010787858627736568, -0.02365603670477867, -0.11287590861320496, -0.00013290952483657748, -0.0009117737063206732, -0.001484959851950407, -0.004580363165587187, -0.01599680632352829, -0.00029452278977259994, -0.0017688118387013674, -0.6412081122398376, -0.2622647285461426, -0.03465579077601433, -3.1487061977386475, -1.718516230583191, -1.1273545026779175, -0.0005103239673189819, -0.1544639766216278, -0.000780754373408854, -2.5786781311035156, -0.0013705631718039513, -1.218217134475708, -0.1643526405096054, -0.8492016196250916, -0.2244446575641632, -1.4125707149505615, -0.021141763776540756, -0.009056797251105309, -0.37952932715415955, -0.6904390454292297, -0.17841313779354095, -0.04875151813030243, -0.13174648582935333, -0.0019713270012289286, -0.0010244365548714995, -0.0016930069541558623, -0.00040797016117721796, -0.033074814826250076, -0.1716010719537735, -0.002093744231387973, -2.396077979938127e-05, -1.4662635294371285e-05, -0.0002760506176855415, -0.027697378769516945, -0.2570180892944336, -5.960462772236497e-07, -3.40932747349143e-05, -2.682172998902388e-05, -1.07287787614041e-05, -0.0027524465695023537, -0.005012683104723692, -0.01010917592793703, -0.195221409201622, -0.01641307957470417, -0.0021090900991111994, -5.793403761344962e-05, -0.0011375630274415016, -2.5629668016335927e-05, -0.0027601737529039383, -0.00017021637177094817, -0.009463687427341938, -0.06017854064702988, -0.0001110968878492713, -0.0007421599584631622, -0.006097405683249235, -0.004846017807722092, -0.00752211594954133, -0.00056429672986269, -0.003661952679976821, -2.8812103271484375, -0.2872907817363739, -0.1961713433265686, -2.1949822902679443, -3.062316656112671, -0.5042298436164856, -0.00043072958942502737, -0.11353015154600143, -0.009984903037548065, -0.6902627348899841, -0.00021884430316276848, -0.023432480171322823, -0.0029709271620959044, -0.0021671399008482695, -0.01933548040688038, -0.0002656822034623474, -0.0037392713129520416, -0.2752927243709564, -0.058710504323244095, -0.22416803240776062, -0.0021738011855632067, -0.07194315642118454, -0.0029122107662260532, -0.25847873091697693, -0.00041059168870560825, -0.3886786997318268, -0.0013598490040749311, -0.10245085507631302, -0.0015635181916877627, -0.2666659355163574, -6.318072337307967e-06, -0.0052365995943546295, -0.036426130682229996, -0.14233911037445068, -0.006800838280469179, -0.002380634658038616, -0.00926870759576559, -1.1920928244535389e-07, -0.0014811508590355515, -0.023732056841254234, -0.03458888828754425, -0.033998534083366394, -0.0001411338453181088, -0.29730740189552307, -0.00733196409419179, -8.821448318485636e-06, -8.821448318485636e-06], "finish_reason": "stop"}], "metrics": {"energy": 235.31488515663145, "energy_per_token": 1.5280187347833212, "time": 7.0893717, "time_per_token": 0.04603488116883117}}
{"outputs": [{"text": "# remove stopwords\n    text = re.sub('[^\\w\\s]', '', text)\n    words = [word for word in text.split() if word not in STOPWORDS]\n\n    # count the frequency of each word\n    return pd.Series(words).value_counts()", "tokens": ["#", " remove", " stop", "words", "\n", "    ", "text", " =", " re", ".", "sub", "('", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " count", " the", " frequency", " of", " each", " word", "\n", "    ", "return", " pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5070599317550659, -3.38744854927063, -1.0247619152069092, -0.11881332099437714, -0.7155287265777588, -0.0021900972351431847, -1.0730814933776855, -0.10670226812362671, -0.502555251121521, -0.00013863079948350787, -0.0416167750954628, -2.2172279357910156, -1.0291509628295898, -1.4209471940994263, -0.0034389898646622896, -0.3611278533935547, -0.01602320186793804, -0.09520843625068665, -0.013006963767111301, -0.00014804698002990335, -0.18221907317638397, -0.00028975578607060015, -0.013925181701779366, -0.0290532223880291, -0.23295019567012787, -0.058045703917741776, -1.8207730054855347, -0.03606468066573143, -1.1585710048675537, -0.29981333017349243, -0.6073813438415527, -0.0005930095794610679, -0.00025674383505247533, -0.09872210770845413, -0.0010422994382679462, -0.272511750459671, -0.21552987396717072, -0.024509280920028687, -0.029500210657715797, -0.5174440741539001, -4.5536911784438416e-05, -0.0035969815216958523, -4.768370445162873e-07, -3.576214658096433e-05, -3.5523738915799186e-05, -8.702239938429557e-06, -0.0031606026459485292, -0.003762905253097415, -0.6173188090324402, -0.000458254711702466, -0.0352298729121685, -0.1822585165500641, -1.2407660484313965, -0.11930383741855621, -0.011461131274700165, -0.07390299439430237, -0.0027611248660832644, -0.10217493027448654, -0.0003678122302517295, -2.3502185344696045, -0.09415710717439651, -4.577531944960356e-05, -0.002393835224211216, -0.14462634921073914, -0.9634217619895935, -0.020452437922358513, -0.0007773000397719443, -0.014180843718349934, -2.7418097943154862e-06, -0.001958120847120881, -0.029031220823526382, -1.46388840675354, -8.344646857949556e-07, -4.768370445162873e-07, -3.659658250398934e-05, -0.00018380382971372455, -0.04711035639047623], "finish_reason": "stop"}], "metrics": {"energy": 99.23304259872437, "energy_per_token": 1.2887408129704463, "time": 3.3387642, "time_per_token": 0.04336057402597403}}
{"outputs": [{"text": "text = re.sub(r'[^\\w]', ' ', text)\n    text = text.lower()\n    text = [word for word in text.split() if word not in STOPWORDS]\n    counts = pd.Series(text).value_counts()\n\n    return counts", "tokens": ["text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "]", "'", ",", " '", " '", ",", " text", ")", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "    ", "text", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "counts", " =", " pd", ".", "Series", "(", "text", ")", ".", "value", "_", "counts", "()", "\n", "\n", "    ", "return", " counts", "\n", "\n", "def"], "logprobs": [-2.514662742614746, -0.08036202937364578, -0.6971612572669983, -0.0002470903273206204, -0.04460667073726654, -0.07002759724855423, -0.1441795825958252, -1.4395592212677002, -0.17626574635505676, -0.18229815363883972, -0.002717970171943307, -1.8317264318466187, -0.019130604341626167, -0.00011550712952157483, -0.0683533251285553, -0.0012045992771163583, -0.0002644904307089746, -0.02159043401479721, -0.06740063428878784, -0.41945305466651917, -0.08313216269016266, -0.2645516097545624, -0.029864273965358734, -0.34820255637168884, -0.0005401106318458915, -0.1465623825788498, -0.0003594706067815423, -0.1609395444393158, -0.12000284343957901, -0.4410226345062256, -0.044327083975076675, -3.3175599575042725, -0.3548678755760193, -0.141677588224411, -0.0008525789016857743, -0.00038521020906046033, -0.09157034009695053, -0.0015733970794826746, -0.03801708295941353, -0.1730705201625824, -0.013722838833928108, -0.02092745155096054, -0.03432387486100197, -7.521823135903105e-05, -0.003850191133096814, -5.960462772236497e-07, -4.7444173105759546e-05, -4.005352093372494e-05, -1.1205610462639015e-05, -0.004267632961273193, -0.003150739474222064, -0.11928056180477142, -2.847130298614502, -0.014103857800364494, -0.6244637370109558, -4.768360213347478e-06, -0.029447659850120544, -0.008464058861136436, -0.22626948356628418, -0.010049224831163883, -0.0302681066095829, -0.004303361754864454, -1.0728830375228426e-06, -0.0011800715001299977, -0.018296165391802788, -0.028521927073597908, -2.1814239025115967, -0.0022460015024989843, -0.04594070836901665, -0.005772467702627182, -0.8886066675186157, -0.015042208135128021, -1.1957041025161743], "finish_reason": "stop"}], "metrics": {"energy": 106.62865093231201, "energy_per_token": 1.4606664511275618, "time": 3.350718, "time_per_token": 0.04590024657534247}}
{"outputs": [{"text": "# Use regex to find all words that are not STOPWORDS and remove any non-alphabetic characters\n    pattern = re.compile(r\"\\w+\")\n    words = pattern.findall(text.lower())\n\n    # Use pandas to count the frequencies of each word, excluding the STOPWORDS list\n    word_counts = pd.Series(words).value_counts(normalize=True, drop_duplicates=True)\n    word_counts.drop(STOPWORDS, inplace=True)\n\n    return word_counts", "tokens": ["#", " Use", " regex", " to", " find", " all", " words", " that", " are", " not", " ST", "OP", "W", "OR", "DS", " and", " remove", " any", " non", "-", "alph", "abetic", " characters", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "r", "\"", "\\", "w", "+", "\"", ")", "\n", "    ", "words", " =", " pattern", ".", "find", "all", "(", "text", ".", "lower", "())", "\n", "\n", "    ", "#", " Use", " pandas", " to", " count", " the", " frequencies", " of", " each", " word", ",", " excluding", " the", " ST", "OP", "W", "OR", "DS", " list", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "(", "normal", "ize", "=", "True", ",", " drop", "_", "dup", "licates", "=", "True", ")", "\n", "    ", "word", "_", "counts", ".", "drop", "(", "ST", "OP", "W", "OR", "DS", ",", " in", "place", "=", "True", ")", "\n", "\n", "    ", "return", " word", "_", "counts", "\n", "\n", "#"], "logprobs": [-0.5070599317550659, -3.9843876361846924, -0.6949253678321838, -0.05913218483328819, -2.3195571899414062, -0.47454941272735596, -0.23357923328876495, -2.2123236656188965, -0.3458073139190674, -0.09744588285684586, -3.060539722442627, -2.8729025871143676e-05, -0.005173153709620237, -4.482168878894299e-05, -2.753696753643453e-05, -1.6569806337356567, -1.4392837285995483, -2.6178781986236572, -1.1288801431655884, -0.009072153829038143, -1.606191873550415, -0.357344388961792, -0.08998527377843857, -0.232472226023674, -0.0019480077316984534, -1.9007947444915771, -0.0025446198415011168, -0.2916838228702545, -3.4450891689630225e-05, -0.012127237394452095, -0.07341926544904709, -0.09892675280570984, -0.2802294194698334, -0.37082332372665405, -0.4380434453487396, -0.19666343927383423, -0.021068815141916275, -0.13681404292583466, -0.01747485250234604, -0.012249713763594627, -0.29130929708480835, -0.03720320388674736, -0.9045339226722717, -4.362964682513848e-05, -0.0026385514065623283, -0.006195743102580309, -0.00013743886665906757, -0.005218930076807737, -1.6110421419143677, -0.0035316497087478638, -0.014929821714758873, -0.006313142832368612, -0.19178146123886108, -0.00031454383861273527, -0.012235935777425766, -2.249438762664795, -0.907467246055603, -0.547982394695282, -0.23520827293395996, -0.06004057824611664, -3.2090883255004883, -0.018169861286878586, -0.3081825375556946, -0.009728874079883099, -2.9682607650756836, -0.12423129379749298, -0.890681266784668, -0.1750669926404953, -1.9788545614574105e-05, -0.000990734319202602, -8.082063141046092e-05, -1.4185804502631072e-05, -0.9312685132026672, -0.06388848274946213, -0.0006119524477981031, -0.6219291687011719, -0.0024825488217175007, -0.14425615966320038, -0.004595552105456591, -0.04047994688153267, -0.0004430027911439538, -0.004910196177661419, -0.11640392243862152, -0.3409534692764282, -0.013488465920090675, -0.007166513241827488, -0.04507274180650711, -1.9073468138230965e-06, -0.0012411518255248666, -1.834578514099121, -1.2963941097259521, -0.0004450284468475729, -0.02161446586251259, -0.038312554359436035, -1.0437909364700317, -0.03596210479736328, -1.7882869243621826, -0.6338421702384949, -1.537788011773955e-05, -0.0009590555564500391, -0.2094801366329193, -0.2102261185646057, -0.5045795440673828, -0.5132085084915161, -0.5589090585708618, -5.280832192511298e-05, -0.0005346299149096012, -0.49193090200424194, -1.043895959854126, -0.008121206425130367, -0.05001427233219147, -4.768370445162873e-07, -5.722029527532868e-06, -2.396077979938127e-05, -8.702239938429557e-06, -0.005869415123015642, -0.015213992446660995, -6.794906312279636e-06, -0.0014360364293679595, -0.0002898749662563205, -0.2762494385242462, -0.038599103689193726, -0.2826755940914154, -0.0005477358354255557, -0.06727147102355957, -0.00347961881197989, -0.0005060345865786076, -6.437280717364047e-06, -0.8587639927864075, -0.009577044285833836, -1.6159439086914062], "finish_reason": "stop"}], "metrics": {"energy": 194.26259871864315, "energy_per_token": 1.4829206009056728, "time": 6.4877024, "time_per_token": 0.04952444580152671}}
{"outputs": [{"text": "# Remove specific stopwords from the text\n    text = re.sub(r'\\b(?:{})\\b'.format('|'.join(STOPWORDS)), '', text)\n\n    # Tokenize the text into words using regular expressions\n    words = re.findall(r'\\w+', text)\n\n    # Count the frequency of each word using a dictionary\n    word_counts = pd.Series(Counter(words).most_common()).sort_values(ascending=False)\n\n    return word_counts", "tokens": ["#", " Remove", " specific", " stop", "words", " from", " the", " text", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "b", "(", "?", ":", "{", "})\\", "b", "'", ".", "format", "('", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", "))", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Token", "ize", " the", " text", " into", " words", " using", " regular", " expressions", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", " using", " a", " dictionary", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "Counter", "(", "words", ")", ".", "most", "_", "common", "())", ".", "sort", "_", "values", "(", "asc", "ending", "=", "False", ")", "\n", "\n", "    ", "return", " word", "_", "counts", "\n", "\n", "def"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -1.1972424983978271, -0.018017200753092766, -0.015014964155852795, -0.8453629016876221, -0.2777825891971588, -0.07439390569925308, -0.20825794339179993, -0.002181057119742036, -0.6607086062431335, -0.1307280957698822, -0.3469928503036499, -5.924526340095326e-05, -0.009907358326017857, -0.050283320248126984, -0.26372063159942627, -0.6496186256408691, -0.11046741157770157, -1.0400309562683105, -0.994574248790741, -0.20226731896400452, -0.6723421812057495, -0.0630783885717392, -0.0005119920242577791, -0.02524789236485958, -0.00022933237778488547, -0.000525217386893928, -0.09166410565376282, -0.0005204515182413161, -0.0003493413969408721, -1.5020257706055418e-05, -0.00011944057769142091, -0.011193337850272655, -0.04721474647521973, -3.576278118089249e-07, -4.541770613286644e-05, -8.34461570775602e-06, -1.07287787614041e-05, -0.0050040241330862045, -0.00030417583184316754, -0.4217429757118225, -0.0001006075763143599, -0.0022833484690636396, -0.07617498189210892, -0.027843816205859184, -0.10266001522541046, -0.00035589560866355896, -0.005521878600120544, -1.2008310556411743, -0.0038430660497397184, -0.2105749100446701, -0.012979781255126, -0.4990721642971039, -0.11962182819843292, -2.43249773979187, -1.2909847497940063, -0.04108673706650734, -0.10761343687772751, -0.0005477358354255557, -0.4140583574771881, -0.042284928262233734, -0.06223156303167343, -0.00012158608296886086, -0.008176898583769798, -0.0047648693434894085, -0.005542151164263487, -0.001995835453271866, -0.04368460178375244, -0.1214008703827858, -0.005476471967995167, -1.0013530300057027e-05, -0.0024038248229771852, -0.20753440260887146, -0.0018881603609770536, -0.025945769622921944, -0.00027176024741493165, -0.0034435042180120945, -0.26716727018356323, -0.05167943239212036, -0.10119835287332535, -0.0006803343421779573, -0.028383467346429825, -0.010349416173994541, -1.3586335182189941, -1.1867496967315674, -0.26722922921180725, -0.17360438406467438, -0.0003295593778602779, -0.04961005598306656, -0.0004378790326882154, -0.2153608351945877, -0.0021144431084394455, -1.8709852695465088, -0.00021217002358753234, -0.015165970660746098, -0.13131943345069885, -1.6560609340667725, -0.0006121906917542219, -0.000474936212413013, -0.15425139665603638, -0.014488139189779758, -1.4399906396865845, -1.1920928244535389e-07, -6.103329360485077e-05, -0.08169230073690414, -1.2235162258148193, -1.9299476146697998, -4.792098479811102e-05, -0.33191972970962524, -0.14690260589122772, -0.07783468067646027, -1.7523612768854946e-05, -0.010408405214548111, -0.012514515779912472, -0.03439655527472496, -0.08943546563386917, -0.07808190584182739, -0.00016783259343355894, -0.2401076704263687, -0.004386921413242817, -2.312633478140924e-05, -1.6212332411669195e-05, -1.1391103267669678, -0.017853157594799995, -1.4692153930664062], "finish_reason": "stop"}], "metrics": {"energy": 192.12642811203, "energy_per_token": 1.5248129215240476, "time": 6.283469, "time_per_token": 0.04986880158730159}}
{"outputs": [{"text": "# Remove the stopwords from the text using regex.\n    filtered_text = re.sub(r'\\b({})\\b'.format('|'.join(STOPWORDS)), '', text)\n\n    # Create a regular expression to match words.\n    pattern = re.compile('\\w+')\n\n    # Match all words in the filtered text.\n    matches = pattern.finditer(filtered_text)\n\n    # Count the number of occurrences of each word.\n    word_counts = pd.Series({match.group(): 1 for match in matches})\n\n    # Count the frequency of each word.\n    return word_counts.fillna(0).astype(int).sort_index()", "tokens": ["#", " Remove", " the", " stop", "words", " from", " the", " text", " using", " regex", ".", "\n", "    ", "filtered", "_", "text", " =", " re", ".", "sub", "(", "r", "'\\", "b", "({", "})\\", "b", "'", ".", "format", "('", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", "))", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Create", " a", " regular", " expression", " to", " match", " words", ".", "\n", "    ", "pattern", " =", " re", ".", "compile", "('", "\\", "w", "+", "')", "\n", "\n", "    ", "#", " Match", " all", " words", " in", " the", " filtered", " text", ".", "\n", "    ", "matches", " =", " pattern", ".", "find", "iter", "(", "filtered", "_", "text", ")", "\n", "\n", "    ", "#", " Count", " the", " number", " of", " occurrences", " of", " each", " word", ".", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "({", "match", ".", "group", "():", " ", "1", " for", " match", " in", " matches", "})", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", ".", "\n", "    ", "return", " word", "_", "counts", ".", "fill", "na", "(", "0", ")", ".", "ast", "ype", "(", "int", ")", ".", "sort", "_", "index", "()"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -2.3891074657440186, -0.6848932504653931, -0.06652601063251495, -0.660588264465332, -0.055569395422935486, -0.12274981290102005, -2.0381388664245605, -0.4613305330276489, -1.8034300804138184, -0.3766036033630371, -0.005032965913414955, -3.1513285636901855, -0.02342875488102436, -0.03279867395758629, -0.0016087458934634924, -0.12423718720674515, -7.199982064776123e-05, -0.012801139615476131, -0.114876888692379, -0.2547660171985626, -0.3683646619319916, -0.035337239503860474, -0.8650341629981995, -0.0754646584391594, -0.0004439560289029032, -0.022277111187577248, -0.00018308870494365692, -0.0010438475292176008, -0.05950797349214554, -0.0004138090298511088, -2.8490614567999728e-05, -8.106198947643861e-06, -0.00010716341057559475, -0.007835131138563156, -0.04262266308069229, -4.768370445162873e-07, -2.7894584491150454e-05, -1.3112935448589269e-05, -1.0132738680113107e-05, -0.003404418472200632, -0.00024863966973498464, -0.4433533549308777, -0.0002426806604489684, -0.004742089658975601, -0.07683424651622772, -0.010200511664152145, -0.2062721997499466, -0.0003691230376716703, -0.004293153528124094, -2.971433639526367, -0.023682812228798866, -3.5459225177764893, -0.0021908108610659838, -1.420985221862793, -1.0562669038772583, -0.7643747925758362, -1.5386158227920532, -0.03688948228955269, -0.0004961451631970704, -1.118445873260498, -0.0007825411157682538, -0.3742550015449524, -7.116541382856667e-05, -0.002172611653804779, -2.288358449935913, -0.07651637494564056, -0.03646751120686531, -0.5624256730079651, -0.0012187680695205927, -0.0026760026812553406, -0.061551276594400406, -0.00034600470098666847, -0.0016070796409621835, -3.4335744380950928, -0.24464702606201172, -0.09835471957921982, -0.059327006340026855, -0.036512453109025955, -0.2878853976726532, -0.03265296295285225, -0.8465499877929688, -0.0039044588338583708, -0.00022957073815632612, -0.313578724861145, -0.0011189873330295086, -0.11548968404531479, -6.198863957251888e-06, -2.8013790142722428e-05, -1.0512640476226807, -3.957670196541585e-05, -0.0005555993411689997, -3.6000557884108275e-05, -2.622600959512056e-06, -0.010280866175889969, -0.0004667146422434598, -0.025605838745832443, -0.00031418632715940475, -0.018625015392899513, -1.5536128282546997, -0.06366155296564102, -2.0678939819335938, -0.0005230727256275713, -1.2028508186340332, -0.11925336718559265, -0.03975067287683487, -0.01325144898146391, -0.6906707286834717, -0.003718962427228689, -0.00044526674901135266, -0.23255565762519836, -0.0007825411157682538, -0.0861695259809494, -0.003661121241748333, -0.9102188944816589, -1.3828182090946939e-05, -0.014172499068081379, -1.2119531631469727, -0.6100738048553467, -0.024212148040533066, -0.00215798057615757, -0.35257595777511597, -0.29050782322883606, -0.964974045753479, -0.017078708857297897, -0.0015041239093989134, -0.00025996167096309364, -0.00044550508027896285, -0.26846641302108765, -0.3823014795780182, -0.13148657977581024, -0.00022146634000819176, -0.52204829454422, -2.8683698177337646, -0.1533636599779129, -2.6522772312164307, -0.012455533258616924, -0.10773460566997528, -0.016295569017529488, -1.5473828315734863, -0.01086179818958044, -0.0005184260080568492, -1.03464937210083, -0.01480849552899599, -0.00039283663500100374, -9.810443589231e-05, -0.07947015762329102, -3.120913028717041, -5.578839045483619e-05, -0.006876612547785044, -0.026986798271536827, -0.06921667605638504, -0.0464712530374527, -0.12742793560028076, -7.271740287251305e-06, -0.055152527987957, -0.04411300644278526, -0.2978103458881378, -0.7081858515739441, -0.21656890213489532, -8.34430247778073e-05, -0.9814591407775879, -0.13224124908447266], "finish_reason": "stop"}], "metrics": {"energy": 236.1209220676422, "energy_per_token": 1.4397617199246475, "time": 7.7535458, "time_per_token": 0.04727771829268293}}
{"outputs": [{"text": "# Convert text to a list of words using regular expressions\n    word_list = re.findall(r\"\\w[\\w']*\", text)\n\n    # Remove stopwords\n    word_list = [word for word in word_list if word not in STOPWORDS]\n\n    # Count the frequency of each word\n    word_counts = Counter(word_list)\n\n    # Return a Series of word frequencies\n    return pd.Series(word_counts)", "tokens": ["#", " Convert", " text", " to", " a", " list", " of", " words", " using", " regular", " expressions", "\n", "    ", "word", "_", "list", " =", " re", ".", "find", "all", "(", "r", "\"", "\\", "w", "[\\", "w", "']", "*", "\"", ",", " text", ")", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "word", "_", "list", " =", " [", "word", " for", " word", " in", " word", "_", "list", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", "\n", "    ", "word", "_", "counts", " =", " Counter", "(", "word", "_", "list", ")", "\n", "\n", "    ", "#", " Return", " a", " Series", " of", " word", " frequencies", "\n", "    ", "return", " pd", ".", "Series", "(", "word", "_", "counts", ")", "\n", "\n", "if"], "logprobs": [-0.5070599317550659, -2.8595736026763916, -0.7851932048797607, -0.04452435299754143, -2.095946788787842, -0.4880598187446594, -0.06502717733383179, -0.15066711604595184, -2.247868299484253, -1.9788093566894531, -0.1561278998851776, -0.30165666341781616, -0.002220071852207184, -2.219386577606201, -0.004560189787298441, -0.1026240810751915, -0.0027591038960963488, -0.0910293459892273, -5.3881147323409095e-05, -0.019483964890241623, -0.00028880240279249847, -0.007535603828728199, -0.02003059908747673, -0.7537032961845398, -0.18040983378887177, -0.10466767102479935, -2.8669233322143555, -0.005993370432406664, -1.453379511833191, -0.23888950049877167, -0.10372307896614075, -6.997340824455023e-05, -0.009792976081371307, -0.25330042839050293, -0.01251310296356678, -0.09934239089488983, -0.00032729512895457447, -0.004992874339222908, -0.28638744354248047, -0.6427236795425415, -0.032510802149772644, -1.6577014923095703, -0.00031859567388892174, -0.2960781157016754, -0.0009974034037441015, -0.05939137935638428, -0.03348081186413765, -0.008981069549918175, -0.11405740678310394, -0.5114737749099731, -0.0001232548092957586, -7.557583012385294e-05, -0.0009477414423599839, -1.4662635294371285e-05, -1.6689160474925302e-05, -0.00496393209323287, -0.03201967105269432, -0.5535818934440613, -2.5629668016335927e-05, -0.003373529063537717, -2.3841855067985307e-07, -2.098061486321967e-05, -2.9801878554280847e-05, -9.298280929215252e-06, -0.0019982149824500084, -0.0003182381624355912, -0.009848102927207947, -0.00022635281493421644, -0.0040230778977274895, -0.3192492127418518, -0.361960232257843, -0.09642668068408966, -0.0015548295341432095, -0.051449261605739594, -0.004044211935251951, -0.6259231567382812, -0.0002441108226776123, -0.16504400968551636, -0.000641974329482764, -0.12947198748588562, -0.003820977872237563, -2.2483325004577637, -0.0011435167398303747, -0.0015610187547281384, -0.00033158526639454067, -5.722029527532868e-06, -0.00018142008048016578, -0.13347959518432617, -0.04282769560813904, -0.00017128908075392246, -0.33658239245414734, -2.140167236328125, -0.2395756095647812, -0.8576423525810242, -1.752103328704834, -0.275299608707428, -0.3651503324508667, -0.6441090106964111, -0.0002131234941771254, -0.0845625028014183, -0.01633732207119465, -2.884823152271565e-05, -0.0008095800876617432, -0.019053062424063683, -0.050795815885066986, -0.00010251473577227443, -0.001733468729071319, -0.6427993774414062, -0.13860678672790527, -0.017805730924010277, -0.7973857522010803], "finish_reason": "stop"}], "metrics": {"energy": 178.8687542285919, "energy_per_token": 1.6114302182756028, "time": 4.8318925, "time_per_token": 0.04353056306306306}}
{"outputs": [{"text": "# Remove specific stopwords using regex\n    regex = re.compile('[' + re.escape(STOPWORDS) + ']')\n    words = [regex.sub('', word) for word in text.split()]\n\n    # Count word frequencies using pandas Series\n    return pd.Series(Counter(words).most_common())", "tokens": ["#", " Remove", " specific", " stop", "words", " using", " regex", "\n", "    ", "regex", " =", " re", ".", "compile", "('", "['", " +", " re", ".", "escape", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " '", "]", "')", "\n", "    ", "words", " =", " [", "regex", ".", "sub", "('", "'", ",", " word", ")", " for", " word", " in", " text", ".", "split", "()", "]", "\n", "\n", "    ", "#", " Count", " word", " frequencies", " using", " pandas", " Series", "\n", "    ", "return", " pd", ".", "Series", "(", "Counter", "(", "words", ")", ".", "most", "_", "common", "())", "\n", "\n", "def"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -1.1972424983978271, -0.018017200753092766, -0.015014964155852795, -2.3378422260284424, -0.4377520978450775, -0.36125144362449646, -0.0022225696593523026, -2.8379712104797363, -0.9704397320747375, -0.14375346899032593, -6.687417771900073e-05, -0.028202921152114868, -1.668319821357727, -2.4851670265197754, -0.07524862885475159, -0.3322993814945221, -0.0006985607906244695, -0.43377137184143066, -1.4185459613800049, -1.3740007877349854, -1.0728830375228426e-06, -4.708655978902243e-05, -2.0503786799963564e-05, -5.125986263010418e-06, -0.02010093815624714, -0.010949881747364998, -0.01249874010682106, -0.018766822293400764, -0.06440042704343796, -0.009208587929606438, -0.06922189891338348, -1.9449279308319092, -0.08939055353403091, -1.4229892492294312, -0.12570007145404816, -0.0004782725009135902, -0.00039450492477044463, -0.06415405124425888, -0.0494372732937336, -4.160317621426657e-05, -0.29639819264411926, -0.22171670198440552, -0.19703206419944763, -0.00024971229140646756, -7.92710343375802e-05, -0.10437893122434616, -0.012497915886342525, -0.06813698261976242, -0.030434636399149895, -0.04587159305810928, -0.012344622053205967, -0.2272699624300003, -0.00031096869497559965, -0.023634962737560272, -0.46289435029029846, -1.246309518814087, -0.22764551639556885, -2.329256296157837, -0.3149387240409851, -1.031022310256958, -0.16940395534038544, -0.00037472377880476415, -1.5894601345062256, -0.025598634034395218, -1.0013530300057027e-05, -0.001190787530504167, -0.10094503313302994, -2.0433123111724854, -0.0041105784475803375, -0.003244614228606224, -0.36851218342781067, -0.0384133942425251, -0.5708643794059753, -7.152555099310121e-07, -6.890059739816934e-05, -0.059714626520872116, -1.516758918762207, -0.026690516620874405, -1.6095921993255615], "finish_reason": "stop"}], "metrics": {"energy": 122.34376418304443, "energy_per_token": 1.5104168417659807, "time": 3.750628, "time_per_token": 0.046304049382716046}}
{"outputs": [{"text": "stop_words = STOPWORDS + [\"to\", \"by\", \"from\"]\n    return pd.Series(text.lower().split()).map(\n        lambda x: 1 if not re.findall(rf\"\\b({'|'.join(stop_words)})\\b\", x) else 0\n    ).sum()", "tokens": ["stop", "_", "words", " =", " ST", "OP", "W", "OR", "DS", " +", " [", "\"", "to", "\"", ",", " \"", "by", "\"", ",", " \"", "from", "\"", "]", "\n", "    ", "return", " pd", ".", "Series", "(", "text", ".", "lower", "()", ".", "split", "())", ".", "map", "(", "\n", "        ", "lambda", " x", ":", " ", "1", " if", " not", " re", ".", "find", "all", "(", "rf", "\"", "\\", "b", "({", "'", "|", "'", ".", "join", "(", "stop", "_", "words", ")}", ")\\", "b", "\"", ",", " x", ")", " else", " ", "0", "\n", "    ", ")", ".", "sum", "()", "\n", "\n", "#"], "logprobs": [-3.0396223068237305, -1.8308981657028198, -0.17855893075466156, -0.11944348365068436, -1.0373055934906006, -2.9802276912960224e-06, -1.2755313036905136e-05, -1.1205610462639015e-05, -5.245195097813848e-06, -2.508673906326294, -0.433388888835907, -0.15759795904159546, -2.945988655090332, -0.0016251702327281237, -0.5161985158920288, -0.025580856949090958, -3.6346590518951416, -0.00017510310863144696, -0.39568135142326355, -0.011240843683481216, -2.7382142543792725, -0.00017450717859901488, -1.3354651927947998, -0.10163426399230957, -0.3755975365638733, -3.95627498626709, -0.12466906756162643, -0.0003033416287507862, -0.004710766952484846, -0.10556996613740921, -1.979507327079773, -0.02632715366780758, -0.7143308520317078, -0.03902636840939522, -0.04830851033329964, -0.14291970431804657, -0.41628506779670715, -0.09668319672346115, -2.092617988586426, -0.008048956282436848, -1.0127453804016113, -0.01810699701309204, -0.13568922877311707, -0.7709771394729614, -0.0017936823423951864, -1.2887237071990967, -0.1521661877632141, -0.06822394579648972, -1.713054895401001, -0.7420281171798706, -3.0278701160568744e-05, -3.0255026817321777, -0.0005647733341902494, -0.022983936592936516, -1.7054007053375244, -0.0578484982252121, -0.49445465207099915, -0.12987951934337616, -0.7560012340545654, -1.0662164688110352, -0.003049844177439809, -0.0006873629172332585, -4.2437604861333966e-05, -0.00020215852418914437, -0.014094807207584381, -0.41623082756996155, -0.001046705641783774, -5.495397272170521e-05, -0.9048763513565063, -0.04489757865667343, -0.01179317943751812, -0.01717468351125717, -0.0006541258189827204, -0.008139652200043201, -0.013864988461136818, -0.04506772756576538, -0.04745339974761009, -0.0006810491322539747, -0.10363462567329407, -0.0011647114297375083, -0.02234099619090557, -0.013755880296230316, -0.808358907699585, -0.026989931240677834, -1.073694109916687, -0.028833765536546707, -2.1399588584899902], "finish_reason": "stop"}], "metrics": {"energy": 109.87571078681947, "energy_per_token": 1.262939204446201, "time": 3.9983926, "time_per_token": 0.045958535632183904}}
{"outputs": [{"text": "# Split text into words\n    words = re.findall(r\"\\w+\", text)\n\n    # Remove common words\n    words = [word for word in words if word not in STOPWORDS]\n\n    # Count word frequencies\n    word_counts = Counter(words)\n\n    # Convert to a Series\n    word_counts_series = pd.Series(word_counts, name=\"word_counts\")\n\n    return word_counts_series", "tokens": ["#", " Split", " text", " into", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ")", "\n", "\n", "    ", "#", " Remove", " common", " words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " word", " frequencies", "\n", "    ", "word", "_", "counts", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "#", " Convert", " to", " a", " Series", "\n", "    ", "word", "_", "counts", "_", "series", " =", " pd", ".", "Series", "(", "word", "_", "counts", ",", " name", "=", "\"", "word", "_", "counts", "\"", ")", "\n", "\n", "    ", "return", " word", "_", "counts", "_", "series"], "logprobs": [-0.5070599317550659, -2.6625359058380127, -1.2050200700759888, -0.06034880504012108, -0.29833096265792847, -0.39226898550987244, -0.0009409529156982899, -0.07004593312740326, -0.01744626834988594, -0.1137084886431694, -3.504691630951129e-05, -0.12819354236125946, -0.0009635811438784003, -0.010095486417412758, -0.024141864851117134, -0.5990095138549805, -0.09504704177379608, -0.07801122963428497, -0.17442718148231506, -0.004682527855038643, -3.8980677345534787e-05, -0.006640154868364334, -0.23797622323036194, -0.005307511892169714, -0.10796491801738739, -0.0002571013756096363, -0.0016694430960342288, -0.14496681094169617, -3.0128190517425537, -0.36540454626083374, -0.8712870478630066, -0.0003097769513260573, -0.333905428647995, -0.09934012591838837, -0.015430002473294735, -0.1481163650751114, -0.4166235625743866, -0.0001045410826918669, -7.772143726469949e-05, -0.0011917401570826769, -0.002952860901132226, -0.021416474133729935, -0.6056790351867676, -7.510157047363464e-06, -0.002418452175334096, -4.768370445162873e-07, -3.2305197237292305e-05, -2.6464111215318553e-05, -8.106198947643861e-06, -0.002131453948095441, -0.00042763148667290807, -0.0111195407807827, -0.0002044230350293219, -0.004423832520842552, -0.1821916550397873, -0.5772571563720703, -0.1650988906621933, -0.08066284656524658, -0.0003228858404327184, -0.24902062118053436, -0.000720956246368587, -0.13851836323738098, -0.0028028511442244053, -2.1247398853302, -0.00039617318543605506, -0.0010550415609031916, -0.0002727136597968638, -0.09513624757528305, -0.03946433961391449, -0.00016175392374861985, -0.31235525012016296, -0.823949933052063, -1.1791194677352905, -0.6338147521018982, -1.433328628540039, -0.570480465888977, -0.00020692592079285532, -0.20834679901599884, -0.0009609610424377024, -0.0638202652335167, -1.8129315376281738, -0.1528567224740982, -0.0002933310461230576, -0.01792704500257969, -0.0008369756978936493, -0.0013705631718039513, -0.008140716701745987, -0.04935920983552933, -2.3483953555114567e-05, -9.775113539944869e-06, -1.6615595817565918, -0.9828329682350159, -0.04986843839287758, -0.005965523421764374, -0.637810230255127, -0.25967657566070557, -0.2554798126220703, -0.00911184586584568, -0.023197459056973457, -0.003397527849301696, -0.05632159858942032, -9.583967766957358e-05, -0.2161886841058731, -0.005871548317372799, -2.264974000354414e-06, -8.4638240878121e-06, -0.0005677518784068525, -1.1920858014491387e-05], "finish_reason": "stop"}], "metrics": {"energy": 138.88271743011475, "energy_per_token": 1.2859510873158773, "time": 5.034821, "time_per_token": 0.046618712962962966}}
{"outputs": [{"text": "# Remove STOPWORDS words and convert to lower case.\n    words = re.sub(r'\\W+', ' ', text).lower().split()\n    words = [w for w in words if w not in STOPWORDS]\n\n    # Count the frequency of each word.\n    word_counts = pd.Series(words).value_counts()\n\n    # Convert the Series to a pandas Series and remove STOPWORDS words.\n    return word_counts.drop(STOPWORDS)", "tokens": ["#", " Remove", " ST", "OP", "W", "OR", "DS", " words", " and", " convert", " to", " lower", " case", ".", "\n", "    ", "words", " =", " re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " text", ")", ".", "lower", "()", ".", "split", "()", "\n", "    ", "words", " =", " [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", ".", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n", "\n", "    ", "#", " Convert", " the", " Series", " to", " a", " pandas", " Series", " and", " remove", " ST", "OP", "W", "OR", "DS", " words", ".", "\n", "    ", "return", " word", "_", "counts", ".", "drop", "(", "ST", "OP", "W", "OR", "DS", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -3.158024549484253, -5.328513361746445e-05, -0.007778473664075136, -0.00025960413040593266, -0.0003943857445847243, -2.857635021209717, -2.3871259689331055, -1.4867725372314453, -0.6068601012229919, -0.05089971423149109, -1.8612881898880005, -3.0744974613189697, -0.02693307399749756, -0.003050557104870677, -1.1687517166137695, -0.05219755321741104, -0.8640679121017456, -9.619726915843785e-05, -1.196643590927124, -0.09171489626169205, -0.5257507562637329, -1.4099560976028442, -1.913137435913086, -0.6883983612060547, -0.00010930894495686516, -0.03726763650774956, -0.0028287656605243683, -0.0002795067266561091, -0.027950819581747055, -0.24101610481739044, -0.058566272258758545, -0.17233821749687195, -0.0031610780861228704, -0.07157112658023834, -0.15163683891296387, -0.02744445390999317, -0.013563970103859901, -0.22654248774051666, -0.34566059708595276, -0.07933846116065979, -0.04966893047094345, -1.6272468566894531, -0.08684267103672028, -0.0004152389301452786, -0.00025245340657420456, -0.014219275675714016, -0.0014099667314440012, -0.026485633105039597, -0.014942857436835766, -1.4662635294371285e-05, -0.0037497226148843765, -5.960462772236497e-07, -6.186770770000294e-05, -7.724463648628443e-05, -7.748573807475623e-06, -0.0062873181886971, -0.006357445381581783, -0.22153989970684052, -0.0003411188081372529, -0.032068971544504166, -0.34957337379455566, -0.2909362316131592, -0.13550259172916412, -0.0026165556628257036, -0.0997263491153717, -0.009742450900375843, -0.5592195987701416, -0.0028300732374191284, -0.00020203932945150882, -0.5764288902282715, -0.001994169782847166, -0.11167926341295242, -0.0018267625709995627, -0.15122556686401367, -0.00011669908417388797, -0.010607055388391018, -0.022722940891981125, -0.1791636347770691, -0.005967063829302788, -0.0016054133884608746, -0.014705833047628403, -1.311301275563892e-06, -0.0019591916352510452, -0.01688813976943493, -0.027569705620408058, -0.09570319205522537, -0.0001616347290109843, -2.2113330364227295, -3.7821218967437744, -1.0446165800094604, -0.8086179494857788, -0.08874344825744629, -0.08432980626821518, -0.8208998441696167, -0.3646650016307831, -1.539388656616211, -1.9811489582061768, -0.9833717346191406, -2.2053474822314456e-05, -0.002881305990740657, -4.6132929128361866e-05, -2.992108420585282e-05, -0.47009164094924927, -0.30754292011260986, -0.0021257440093904734, -0.0005577438860200346, -1.2660183906555176, -0.1103491336107254, -0.00019369633810129017, -2.753696753643453e-05, -0.5554957389831543, -0.2266191840171814, -0.012253363616764545, -0.05487813055515289, -3.576272320060525e-06, -0.0001494772732257843, -2.7417760065873154e-05, -7.033323527139146e-06, -1.4594535827636719, -4.768370445162873e-07, -4.768370445162873e-07, -9.643566590966657e-05, -6.544376083184034e-05, -0.04330430179834366], "finish_reason": "stop"}], "metrics": {"energy": 172.10031104660032, "energy_per_token": 1.365875484496828, "time": 6.0425935, "time_per_token": 0.04795709126984127}}
{"outputs": [{"text": "# Remove the specific stopwords from the text and convert it to a string\n    cleaned_text = re.sub(r'\\b({})\\b'.format('|'.join(STOPWORDS)), ' ', text)\n    cleaned_text = cleaned_text.strip()\n\n    # Use the regular expression library to split the cleaned text into words\n    words = re.findall(r'\\w+', cleaned_text)\n\n    # Count the frequency of each word\n    word_counts = pd.Series(words).value_counts()\n\n    return word_counts", "tokens": ["#", " Remove", " the", " specific", " stop", "words", " from", " the", " text", " and", " convert", " it", " to", " a", " string", "\n", "    ", "cleaned", "_", "text", " =", " re", ".", "sub", "(", "r", "'\\", "b", "({", "})\\", "b", "'", ".", "format", "('", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", "))", ",", " '", " '", ",", " text", ")", "\n", "    ", "cleaned", "_", "text", " =", " cleaned", "_", "text", ".", "strip", "()", "\n", "\n", "    ", "#", " Use", " the", " regular", " expression", " library", " to", " split", " the", " cleaned", " text", " into", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " cleaned", "_", "text", ")", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n", "\n", "    ", "return", " word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5070599317550659, -1.2460129261016846, -2.3891074657440186, -1.9210296869277954, -0.04096762835979462, -0.03172730281949043, -0.6019200086593628, -0.0572306327521801, -0.09000390768051147, -3.1201987266540527, -1.2238470315933228, -0.46585169434547424, -0.0981687605381012, -1.485284686088562, -1.9506171941757202, -0.28236427903175354, -0.0018104605842381716, -1.8969290256500244, -0.008860201574862003, -0.005350199528038502, -0.002116465475410223, -0.39155563712120056, -7.033100700937212e-05, -0.012342973612248898, -0.09920454770326614, -0.5232723951339722, -0.9028764367103577, -0.0763455256819725, -1.1415536403656006, -0.04713889956474304, -0.00043275527423247695, -0.033305682241916656, -0.00017331528943032026, -0.0012562725460156798, -0.07660570740699768, -0.0005709686665795743, -3.123234637314454e-05, -8.22540732769994e-06, -9.369411418447271e-05, -0.007938619703054428, -0.036271288990974426, -4.768370445162873e-07, -2.253030106658116e-05, -1.168244216387393e-05, -1.1324817933200393e-05, -0.005434501450508833, -0.00027366707217879593, -1.4379544258117676, -0.004804257769137621, -0.00016008525562938303, -0.019522426649928093, -0.07015229761600494, -0.4086262285709381, -0.7248353958129883, -0.28133097290992737, -0.0004828002711292356, -0.005767845548689365, -0.013623004779219627, -0.3884830176830292, -0.00018463814922142774, -5.125868119648658e-05, -0.00033206192892976105, -1.3968112468719482, -0.0008908117306418717, -0.05474440008401871, -0.28993165493011475, -0.0005268854438327253, -0.005353874992579222, -2.888822555541992, -0.8909401297569275, -3.824873447418213, -0.04677913710474968, -1.0900955200195312, -0.053944818675518036, -1.0984736680984497, -0.019436031579971313, -1.4210928678512573, -0.053266216069459915, -0.08560317009687424, -0.4074387848377228, -0.1938089281320572, -0.000309657771140337, -0.36613520979881287, -0.04693429544568062, -0.06180838495492935, -8.570780482841656e-05, -0.0593097060918808, -0.003650906728580594, -0.0038322594482451677, -0.0013940150383859873, -0.023532038554549217, -0.1568431258201599, -0.0038738222792744637, -5.722029527532868e-06, -0.0026867028791457415, -3.933898824470816e-06, -2.0265558760002023e-06, -0.08801372349262238, -0.0021319296211004257, -0.02402421273291111, -0.00025650550378486514, -0.003863728605210781, -0.9068096876144409, -0.02365231141448021, -0.17586249113082886, -0.0006952252588234842, -0.021362097933888435, -0.009827327914536, -2.125267744064331, -0.00030155404238030314, -0.22269397974014282, -0.0004857790481764823, -0.13175515830516815, -0.002467090031132102, -0.08081591129302979, -1.1324817933200393e-05, -0.008569727651774883, -0.05527232959866524, -0.4836128354072571, -0.007996213622391224, -0.000825898430775851, -0.00938220415264368, -1.1920928244535389e-07, -0.001553996349684894, -0.029822736978530884, -0.07328079640865326, -0.07561222463846207, -0.00012492353562265635, -0.6759280562400818, -0.005895842798054218, -2.622600959512056e-06, -1.2159273865108844e-05, -1.0531575679779053, -9.536738616588991e-07, -5.960462772236497e-07, -5.507317473529838e-05, -0.00014578233822248876, -0.045243434607982635], "finish_reason": "stop"}], "metrics": {"energy": 189.52412821388242, "energy_per_token": 1.3733632479266842, "time": 6.461789, "time_per_token": 0.04682455797101449}}
{"outputs": [{"text": "# Convert the text to lowercase\n    text = text.lower()\n\n    # Remove stopwords\n    pattern = re.compile(r'\\b(%s)\\b' % '|'.join(map(re.escape, STOPWORDS)))\n    text = re.sub(pattern, '', text)\n\n    # Extract words from the text\n    words = re.findall(r'\\w+', text)\n\n    # Count the frequency of words in the text\n    word_counts = Counter(words)\n\n    # Drop words with zero frequency\n    word_counts = word_counts.most_common()\n    return Series(word_counts)", "tokens": ["#", " Convert", " the", " text", " to", " lower", "case", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "r", "'\\", "b", "(%", "s", ")\\", "b", "'", " %", " '", "|", "'", ".", "join", "(", "map", "(", "re", ".", "escape", ",", " ST", "OP", "W", "OR", "DS", ")))", "\n", "    ", "text", " =", " re", ".", "sub", "(", "pattern", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Ext", "ract", " words", " from", " the", " text", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " words", " in", " the", " text", "\n", "    ", "word", "_", "counts", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "#", " Drop", " words", " with", " zero", " frequency", "\n", "    ", "word", "_", "counts", " =", " word", "_", "counts", ".", "most", "_", "common", "()", "\n", "    ", "return", " Series", "(", "word", "_", "counts", ")", "\n", "\n", "#"], "logprobs": [-0.5070599317550659, -2.8595736026763916, -0.766381025314331, -0.1598593294620514, -0.14643265306949615, -0.42080026865005493, -0.03755035251379013, -0.8590964078903198, -0.0010353925172239542, -0.08783336728811264, -0.057577311992645264, -0.013145449571311474, -0.00013386306818574667, -0.001086121890693903, -0.0001081169830285944, -0.0016552807064726949, -0.22664065659046173, -0.0003545847721397877, -0.004006574396044016, -0.2865218222141266, -2.0655264854431152, -0.03781083598732948, -1.3088558912277222, -0.0005913416389375925, -2.4778404235839844, -0.0047448184341192245, -0.23882313072681427, -2.2411095415009186e-05, -0.005016597453504801, -0.1508377194404602, -0.18605570495128632, -0.3004757761955261, -0.012199311517179012, -3.5225584506988525, -1.9550132492440753e-05, -0.0025069257244467735, -0.00041571559268049896, -0.0003800861886702478, -0.0009177286992780864, -0.11138869822025299, -0.00013362467871047556, -1.645074735279195e-05, -5.8412379075889476e-06, -8.999896090244874e-05, -0.0184192918241024, -1.0919888019561768, -0.00017808281700126827, -0.0004985281848348677, -0.0036225190851837397, -0.000545472139492631, -1.7404405298293568e-05, -0.003927851561456919, -7.152555099310121e-07, -2.109982233378105e-05, -2.109982233378105e-05, -9.179073458653875e-06, -0.01918743923306465, -0.0038785722572356462, -0.004803308751434088, -0.16924554109573364, -0.021128108724951744, -1.998044490814209, -5.23315102327615e-05, -0.002565190428867936, -0.0006348263123072684, -0.005279882811009884, -0.0007107115816324949, -0.3118880093097687, -0.0001399419124936685, -0.001493054092861712, -0.010442735627293587, -0.009788726456463337, -0.013296033255755901, -0.0004707658663392067, -0.005378300789743662, -3.855738639831543, -0.001474485034123063, -0.591752290725708, -1.2439178228378296, -0.1399850845336914, -0.029635852202773094, -0.2684377133846283, -0.00043478095903992653, -0.08076763898134232, -0.012379709631204605, -0.10012483596801758, -8.439661905867979e-05, -0.00965898297727108, -0.004639693535864353, -0.008436870761215687, -0.0034101211931556463, -0.03298093006014824, -0.06852153688669205, -0.004685019608587027, -1.0132738680113107e-05, -0.0015605426160618663, -0.002819731365889311, -0.0014697236474603415, -0.03016655705869198, -0.00029047083808109164, -0.007324508856981993, -0.2980068027973175, -0.21559348702430725, -0.13790281116962433, -0.0016182672698050737, -2.872069835662842, -1.6018749475479126, -0.06415114551782608, -0.02212519198656082, -0.05023445934057236, -0.000291662581730634, -0.3159351944923401, -0.0011735226726159453, -0.11906130611896515, -0.0015278107021003962, -1.2315956354141235, -0.0007964776013977826, -0.001579943229444325, -0.00015758226800244302, -0.04314915090799332, -0.027069993317127228, -0.00020930961181875318, -0.22992980480194092, -2.5018234252929688, -0.6510487198829651, -0.22259046137332916, -1.4907474517822266, -0.31361114978790283, -0.10057511925697327, -0.00019631843315437436, -0.13964426517486572, -0.0003023882454726845, -0.004215046763420105, -0.0548136942088604, -2.0709211826324463, -5.1377883210079744e-05, -7.950943836476654e-05, -0.02193767949938774, -0.05241601541638374, -2.3841855067985307e-07, -0.00012587709352374077, -0.037778694182634354, -0.013758349232375622, -0.28104329109191895, -1.554351806640625, -2.794189929962158, -0.11067382991313934, -0.8308626413345337, -0.00010275312524754554, -0.000715833914000541, -0.6308109760284424, -0.19324840605258942, -0.03416813164949417, -2.0243568420410156], "finish_reason": "stop"}], "metrics": {"energy": 204.38460268592831, "energy_per_token": 1.3271727447138202, "time": 7.0894375, "time_per_token": 0.04603530844155844}}
{"outputs": [{"text": "# Clean the text by removing extra spaces, new lines and punctuations\n    cleaned_text = re.sub(\"\\s+\", \" \", text.lower()).strip()\n\n    # Get the list of stopwords\n    stopwords = STOPWORDS\n\n    # Split the text into words\n    words = cleaned_text.split()\n\n    # Count the frequency of each word excluding the stopwords\n    word_counts = pd.Series(words).value_counts()\n\n    # Exclude the stopwords from the result\n    word_counts = word_counts[~word_counts.index.isin(stopwords)]\n\n    return word_counts", "tokens": ["#", " Clean", " the", " text", " by", " removing", " extra", " spaces", ",", " new", " lines", " and", " punct", "uations", "\n", "    ", "cleaned", "_", "text", " =", " re", ".", "sub", "(", "\"", "\\", "s", "+", "\"", ",", " \"", " \"", ",", " text", ".", "lower", "())", ".", "strip", "()", "\n", "\n", "    ", "#", " Get", " the", " list", " of", " stop", "words", "\n", "    ", "stop", "words", " =", " ST", "OP", "W", "OR", "DS", "\n", "\n", "    ", "#", " Split", " the", " text", " into", " words", "\n", "    ", "words", " =", " cleaned", "_", "text", ".", "split", "()", "\n", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " word", " excluding", " the", " stop", "words", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "words", ")", ".", "value", "_", "counts", "()", "\n", "\n", "    ", "#", " Ex", "clude", " the", " stop", "words", " from", " the", " result", "\n", "    ", "word", "_", "counts", " =", " word", "_", "counts", "[", "~", "word", "_", "counts", ".", "index", ".", "isin", "(", "stop", "words", ")]", "\n", "\n", "    ", "return", " word", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5070599317550659, -3.6419126987457275, -0.43603405356407166, -0.05196444317698479, -0.6671527028083801, -0.08750051259994507, -4.045480251312256, -0.5774059891700745, -0.7559449672698975, -1.8101649284362793, -1.2787501811981201, -2.482780933380127, -0.8194786310195923, -0.5813165307044983, -0.3470540940761566, -0.0021460852585732937, -1.0698950290679932, -0.01332791242748499, -0.0017454879125580192, -0.0012882990995422006, -0.16659285128116608, -7.4741430580616e-05, -0.0026405726093798876, -0.0255315862596035, -2.765894889831543, -1.434891700744629, -0.06219381093978882, -0.05485793203115463, -0.029539214447140694, -0.00010668662434909493, -0.003063154872506857, -0.0014788892585784197, -9.97731985989958e-05, -0.02739887125790119, -1.9568718671798706, -0.7443302869796753, -0.062149226665496826, -2.0550220012664795, -0.1397576779127121, -0.21499216556549072, -0.03205049782991409, -0.40706291794776917, -0.0003588747640606016, -0.009927423670887947, -4.003631591796875, -1.1431660652160645, -0.7219505906105042, -0.0012700833613052964, -1.0998034477233887, -0.03706708922982216, -0.7118856906890869, -0.0018794744974002242, -0.0958341509103775, -0.13484443724155426, -0.14576631784439087, -0.59921795129776, -1.5497195136049413e-06, -1.7404405298293568e-05, -8.713819261174649e-05, -4.6491513785440475e-06, -0.9370848536491394, -0.05687504634261131, -0.0004102342063561082, -0.006184369325637817, -1.6486856937408447, -0.02400023862719536, -0.6472797393798828, -0.06548416614532471, -0.25217029452323914, -0.457189679145813, -0.00037674958002753556, -0.07869385182857513, -0.023287374526262283, -0.7311431765556335, -1.7404405298293568e-05, -1.597391747054644e-05, -0.0002240883477497846, -0.007172549609094858, -0.1652822047472, -0.0013546108966693282, -0.015348417684435844, -0.000376034586224705, -0.0031711787451058626, -1.4675782918930054, -0.03055523708462715, -0.1702757626771927, -0.0018112935358658433, -0.09006829559803009, -0.006594088394194841, -1.8650842905044556, -0.16965480148792267, -0.07282569259405136, -0.00708792032673955, -0.05180191621184349, -0.0006382812280207872, -0.2563602030277252, -0.0007532381569035351, -0.17201648652553558, -0.005740466061979532, -0.15513832867145538, -4.3987260141875595e-05, -0.009654378518462181, -0.3450522720813751, -0.5358688235282898, -0.01703968457877636, -0.026986218988895416, -0.14140649139881134, -1.4305104514278355e-06, -0.0019431296968832612, -0.21334196627140045, -0.576906681060791, -0.3785408139228821, -0.00037698791129514575, -0.040271345525979996, -0.7986111640930176, -0.010677351616322994, -0.2686217129230499, -0.08553674072027206, -0.00893652904778719, -0.9135074019432068, -0.028371531516313553, -2.5980019569396973, -0.0643698051571846, -0.000328367663314566, -0.5111120343208313, -4.0411134250462055e-05, -0.001077786204405129, -0.14094647765159607, -0.010137143544852734, -1.3708974620385561e-05, -2.098061486321967e-05, -0.4437824487686157, -0.3398264944553375, -0.00416210200637579, -7.450303382938728e-05, -1.5258672647178173e-05, -0.0015474499668926, -0.00039915222441777587, -3.909988299710676e-05, -0.0018899451242759824, -0.0009105826611630619, -0.14120858907699585, -8.570780482841656e-05, -0.0016883655916899443, -0.012848333455622196, -0.022883625701069832, -0.0002153879904653877, -0.15472911298274994, -0.007446982432156801, -0.0004148814477957785, -5.722029527532868e-06, -1.0647433996200562, -8.344646857949556e-07, -7.152555099310121e-07, -9.07141511561349e-05, -7.068861305015162e-05, -0.04204515367746353], "finish_reason": "stop"}], "metrics": {"energy": 243.03861953926088, "energy_per_token": 1.5480166849634451, "time": 7.316049, "time_per_token": 0.04659903821656051}}
{"outputs": [{"text": "# Create a regex object that matches all words that contain at least one uppercase letter,\n    # lowercase letter, or digit.\n    pattern = re.compile(r\"\\w+\", re.IGNORECASE)\n\n    # Replace all non-word characters with a space (\" \") in the text string.\n    # This is to remove all non-words that do not follow the pattern.\n    words = re.sub(r\"[^a-zA-Z0-9]+\", \" \", text)\n\n    # Split the text into individual words based on the pattern and remove any leading or trailing spaces.\n    words = words.strip().split()\n\n    # Remove the stopwords from the words list using the STOPWORDS list.\n    words = [word for word in words if word not in STOPWORDS]\n\n    # Count the number of occurrences of each word in the words list,\n    # and return a pandas Series with the word counts.\n    word_counts = pd.Series(Counter(words).most_common()).rename(\"count\")\n    return word_counts\n", "tokens": ["#", " Create", " a", " regex", " object", " that", " matches", " all", " words", " that", " contain", " at", " least", " one", " upper", "case", " letter", ",", "\n", "    ", "#", " lower", "case", " letter", ",", " or", " digit", ".", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "r", "\"", "\\", "w", "+", "\"", ",", " re", ".", "IGN", "ORE", "C", "ASE", ")", "\n", "\n", "    ", "#", " Replace", " all", " non", "-", "word", " characters", " with", " a", " space", " (", "\"", " \"", ")", " in", " the", " text", " string", ".", "\n", "    ", "#", " This", " is", " to", " remove", " all", " non", "-", "words", " that", " do", " not", " follow", " the", " pattern", ".", "\n", "    ", "words", " =", " re", ".", "sub", "(", "r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]+", "\"", ",", " \"", " \"", ",", " text", ")", "\n", "\n", "    ", "#", " Split", " the", " text", " into", " individual", " words", " based", " on", " the", " pattern", " and", " remove", " any", " leading", " or", " trailing", " spaces", ".", "\n", "    ", "words", " =", " words", ".", "strip", "()", ".", "split", "()", "\n", "\n", "    ", "#", " Remove", " the", " stop", "words", " from", " the", " words", " list", " using", " the", " ST", "OP", "W", "OR", "DS", " list", ".", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Count", " the", " number", " of", " occurrences", " of", " each", " word", " in", " the", " words", " list", ",", "\n", "    ", "#", " and", " return", " a", " pandas", " Series", " with", " the", " word", " counts", ".", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "Series", "(", "Counter", "(", "words", ")", ".", "most", "_", "common", "())", ".", "rename", "(", "\"", "count", "\"", ")", "\n", "    ", "return", " word", "_", "counts", "\n"], "logprobs": [-0.5070599317550659, -3.19689679145813, -0.27217572927474976, -1.2929022312164307, -0.6565297842025757, -2.4612045288085938, -0.12191597372293472, -1.4607408046722412, -1.1690888404846191, -1.8543061017990112, -3.3305747509002686, -1.2117741107940674, -0.004893825389444828, -0.05976875498890877, -2.4288101196289062, -0.07066193222999573, -0.136841282248497, -3.04662823677063, -1.0208299160003662, -0.0005457103834487498, -0.0019412260735407472, -3.6667895317077637, -0.003952549304813147, -0.08188816159963608, -0.07672484219074249, -0.7718511819839478, -0.9838111400604248, -0.8138731718063354, -0.27509012818336487, -0.006638615392148495, -1.0999754667282104, -0.005551634822040796, -0.09943283349275589, -3.5523738915799186e-05, -0.0001532914029667154, -0.041397884488105774, -0.1314990222454071, -0.1431497037410736, -0.801900327205658, -0.4037006199359894, -0.28981029987335205, -0.08852263540029526, -2.477567672729492, -0.1313531994819641, -0.0003868784988299012, -0.4305216073989868, -6.174850568640977e-05, -5.8412379075889476e-06, -0.000428942235885188, -0.008134804666042328, -0.006750398315489292, -0.3153453767299652, -0.00032085992279462516, -0.009718485176563263, -3.6491539478302, -0.6356248259544373, -0.6535562872886658, -0.007706198375672102, -0.22456808388233185, -0.034716587513685226, -0.49754035472869873, -0.3526376187801361, -0.3553283214569092, -3.027806520462036, -2.69850754737854, -1.3118168115615845, -0.005489276256412268, -2.0981645584106445, -0.04872211068868637, -0.4425700306892395, -3.043092727661133, -0.4554280936717987, -0.02168446034193039, -0.0004904259694740176, -1.9226099252700806, -1.4997575283050537, -1.8233907222747803, -1.485238790512085, -0.387873113155365, -1.904354453086853, -0.4693770110607147, -0.00264140497893095, -2.1985793113708496, -3.301971912384033, -2.367387294769287, -0.00369437737390399, -2.331472396850586, -0.1509934365749359, -0.7431944608688354, -0.6499959826469421, -0.01342836394906044, -0.0020592452492564917, -2.268341541290283, -0.0991320013999939, -0.37621065974235535, -6.007967749610543e-05, -0.16152647137641907, -0.005835994146764278, -0.16643571853637695, -0.007608364336192608, -0.22313401103019714, -0.9621021747589111, -0.2611831724643707, -0.00011955977242905647, -0.0002786724944598973, -0.8706032037734985, -3.135155202471651e-05, -0.0006547214579768479, -0.07777733355760574, -2.8371408916427754e-05, -6.97350042173639e-05, -0.4194576144218445, -0.0032903600949794054, -6.460934673668817e-05, -0.01684734784066677, -0.0008041008841246367, -9.107174992095679e-05, -0.00809897668659687, -0.02954939939081669, -0.7382175922393799, -0.08406275510787964, -0.0008709213580004871, -0.0062858969904482365, -0.4169202744960785, -0.014504706487059593, -0.7137629985809326, -0.551433265209198, -2.7121598720550537, -0.002702039433643222, -2.543510913848877, -0.0007519278442487121, -0.21607670187950134, -0.5971805453300476, -1.3188560009002686, -0.6748530268669128, -0.9320811629295349, -2.91943621635437, -0.44660452008247375, -0.0698249563574791, -0.6634148955345154, -0.08770015090703964, -0.0006512666586786509, -0.00039152585668489337, -1.2765947580337524, -0.21533939242362976, -1.7857370376586914, -0.00018070495571009815, -1.2877799272537231, -0.0043453797698020935, -0.011729794554412365, -0.07560946047306061, -0.1366802304983139, -0.00248540285974741, -0.015203190967440605, -0.00037174468161538243, -0.013818196021020412, -2.0166072845458984, -1.3302723169326782, -0.2501439154148102, -0.05571169778704643, -0.41104552149772644, -0.00927154254168272, -1.1424336433410645, -0.07205618917942047, -1.4566928148269653, -0.8386316299438477, -0.1666778326034546, -7.510157047363464e-06, -0.0008369756978936493, -9.226373367710039e-05, -3.2543604902457446e-05, -0.09078585356473923, -0.31603366136550903, -0.005662828218191862, -0.0008101756684482098, -0.35714617371559143, -0.05833115428686142, -0.009606679901480675, -0.1514250785112381, -0.15436908602714539, -9.798523387871683e-05, -0.00010251473577227443, -0.0017409658757969737, -0.0027501878794282675, -0.03402123600244522, -0.868381917476654, -1.2040065485052764e-05, -0.003555526025593281, -2.264974000354414e-06, -6.174850568640977e-05, -1.1086402082582936e-05, -6.9141146923357155e-06, -0.005333836190402508, -0.00029047083808109164, -0.007394681219011545, -0.00040439533768221736, -0.006944093853235245, -1.6202585697174072, -0.0187761802226305, -3.155923843383789, -0.0008606782066635787, -0.1493520438671112, -0.044032927602529526, -0.008981306105852127, -0.027561239898204803, -0.3032270669937134, -0.010475059039890766, -0.32487377524375916, -0.0006796196103096008, -2.8910396099090576, -1.4169267416000366, -0.0001656871900195256, -0.0008895016508176923, -1.416172742843628, -0.5912489891052246, -0.552304744720459, -0.6597328782081604, -0.018203457817435265, -0.3638046085834503, -0.3524355888366699, -0.2389536201953888, -1.5656267404556274, -0.21351587772369385, -0.004368405789136887, -0.0032126503065228462, -1.0802795886993408, -0.0031112858559936285, -0.02929265983402729, -0.0027151170652359724, -0.0930786058306694, -0.0004478881892282516, -0.00344825629144907, -0.32908913493156433, -1.368051290512085, -0.0009130837861448526, -0.001095648156479001, -0.1861162632703781, -0.06202654913067818, -0.797848641872406, -4.768370445162873e-07, -6.949660019017756e-05, -0.0733586773276329, -1.056901454925537, -1.2727127075195312, -0.17014041543006897, -0.03821468725800514, -0.8652359247207642, -0.00109576724935323, -0.011068139225244522, -0.10207859426736832, -1.0381453037261963, -0.08030768483877182, -0.008595375344157219, -0.0002212279650848359, -1.5735502529423684e-05, -0.8025704026222229], "finish_reason": "length"}], "metrics": {"energy": 360.33596483421354, "energy_per_token": 1.4075623626336466, "time": 12.098932, "time_per_token": 0.047261453125}}
