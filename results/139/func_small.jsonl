{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError('df must be a DataFrame')\n    if not df.empty:\n        if not all(df.columns.apply(lambda x: pd.Series(df[x]).nunique() < 1000)):\n            raise ValueError('There should be at most 1000 unique values in each column')\n        else:\n            numeric_columns = [col for col in df.columns if df[col].dtypes.apply(lambda x: x not in ['object', 'category'])]\n            if numeric_columns:\n                return [df[col].hist(title='Value') for col in numeric_columns]\n            else:\n                raise ValueError('There are no numeric columns in the DataFrame')\n    else:\n        raise ValueError('There are no columns in the DataFrame')", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "('", "df", " must", " be", " a", " Data", "Frame", "')", "\n", "    ", "if", " not", " df", ".", "empty", ":", "\n", "        ", "if", " not", " all", "(", "df", ".", "columns", ".", "apply", "(", "lambda", " x", ":", " pd", ".", "Series", "(", "df", "[", "x", "])", ".", "nun", "ique", "()", " <", " ", "1", "0", "0", "0", "))", ":", "\n", "            ", "raise", " Value", "Error", "('", "There", " should", " be", " at", " most", " ", "1", "0", "0", "0", " unique", " values", " in", " each", " column", "')", "\n", "        ", "else", ":", "\n", "            ", "numeric", "_", "columns", " =", " [", "col", " for", " col", " in", " df", ".", "columns", " if", " df", "[", "col", "]", ".", "d", "types", ".", "apply", "(", "lambda", " x", ":", " x", " not", " in", " ['", "object", "'", ",", " '", "category", "']", ")]", "\n", "            ", "if", " numeric", "_", "columns", ":", "\n", "                ", "return", " [", "df", "[", "col", "]", ".", "hist", "(", "title", "='", "Value", "')", " for", " col", " in", " numeric", "_", "columns", "]", "\n", "            ", "else", ":", "\n", "                ", "raise", " Value", "Error", "('", "There", " are", " no", " numeric", " columns", " in", " the", " Data", "Frame", "')", "\n", "    ", "else", ":", "\n", "        ", "raise", " Value", "Error", "('", "There", " are", " no", " columns", " in", " the", " Data", "Frame", "')"], "logprobs": [-1.134972095489502, -0.26663315296173096, -0.10157729685306549, -0.0002908283786382526, -0.0012969900853931904, -0.0005785936955362558, -0.039269618690013885, -2.8371408916427754e-05, -0.25071361660957336, -0.5129403471946716, -0.008952951058745384, -0.0021385911386460066, -0.020371729508042336, -0.10643769800662994, -5.638440416078083e-05, -1.5050145387649536, -3.4863975048065186, -0.6680932641029358, -0.0019338493002578616, -0.10562381148338318, -0.887667179107666, -0.00392618915066123, -0.5942071676254272, -0.0012915135594084859, -0.3631576597690582, -0.20057782530784607, -1.1941789388656616, -0.3338439464569092, -0.013461649417877197, -0.3057488799095154, -0.015875492244958878, -0.017772706225514412, -0.014429625123739243, -2.1830434799194336, -0.8078722953796387, -1.3396244049072266, -0.18193340301513672, -0.4194171726703644, -0.16947369277477264, -1.6419329643249512, -0.031242836266756058, -1.5072864294052124, -0.0013672299683094025, -0.28310608863830566, -0.15999820828437805, -0.0006107610533945262, -0.4763895273208618, -0.0001110968878492713, -1.3077424764633179, -0.0066077071242034435, -0.21776516735553741, -0.17776978015899658, -0.0015100754098966718, -0.11303019523620605, -0.0033189947716891766, -3.7649073600769043, -0.013304268009960651, -0.0975203886628151, -2.7697744369506836, -0.03878844901919365, -0.6523936986923218, -0.06796737015247345, -0.5332343578338623, -1.2458196878433228, -0.37327224016189575, -0.003683806862682104, -0.019415922462940216, -0.004147143568843603, -0.09468437731266022, -0.006031999830156565, -1.4424220353248529e-05, -0.07388760894536972, -1.4199347496032715, -2.644134044647217, -0.20419123768806458, -1.6079442501068115, -0.11150344461202621, -0.05880683660507202, -0.014147229492664337, -0.049544259905815125, -0.009672442451119423, -0.006268719676882029, -0.5313096642494202, -0.14168162643909454, -0.27547943592071533, -0.3278300166130066, -0.18850085139274597, -0.4373352527618408, -0.002234464045614004, -0.2211102545261383, -2.7731034755706787, -0.00033825874561443925, -0.006683614104986191, -0.013128860853612423, -2.769299030303955, -0.03852386027574539, -0.8473001718521118, -0.02733612060546875, -1.1695101261138916, -0.8593076467514038, -0.020701300352811813, -0.0025084717199206352, -0.014147934503853321, -0.015850501134991646, -0.13358964025974274, -0.36110880970954895, -0.046976037323474884, -0.10663112252950668, -0.011345159262418747, -0.0004943578969687223, -0.0001714082609396428, -0.00010418349120300263, -0.43123170733451843, -1.4424806833267212, -0.5763024687767029, -1.5954790115356445, -0.0006804534932598472, -0.2676832973957062, -0.014443020336329937, -0.0015791100449860096, -1.0894560813903809, -2.264504909515381, -0.000849482137709856, -0.6066710352897644, -0.17069323360919952, -0.11277122795581818, -0.00032455421751365066, -0.06500360369682312, -0.16960328817367554, -1.2304859161376953, -0.010967331938445568, -0.009014385752379894, -0.07443706691265106, -0.8217410445213318, -2.567323684692383, -1.8954096958623268e-05, -0.0003357561945449561, -0.07333829253911972, -0.003812902607023716, -0.006307220086455345, -1.3095319271087646, -0.10089556872844696, -0.7287685871124268, -0.010795406065881252, -0.07050363719463348, -0.0015867274487391114, -0.00023993951617740095, -0.9717010259628296, -0.6199702024459839, -0.6414487361907959, -3.031708240509033, -0.28689947724342346, -0.4970870912075043, -0.10329054296016693, -0.0008105330052785575, -0.00015472168161068112, -0.054671719670295715, -0.00014029949670657516, -5.364403477869928e-06, -0.016155054792761803, -0.00482252798974514, -0.07867500931024551, -0.03840456157922745, -0.00017105070583056659, -0.00691769365221262, -0.0004182179400231689, -0.13500100374221802, -0.007622679229825735, -1.585470999998506e-05, -0.05756291002035141, -0.2979026436805725, -0.8164042234420776, -0.016080215573310852, -0.03567847982048988, -0.01236016396433115, -0.14367561042308807, -0.1710631102323532, -0.050893936306238174, -0.0008895016508176923, -0.07888908684253693, -0.010429286397993565, -0.19683215022087097, -0.019970539957284927, -0.0001454247540095821, -0.0020981458947062492, -0.0011551857460290194, -0.00756399892270565, -0.001741203828714788, -2.658331868587993e-05, -0.02049635350704193, -2.89670991897583, -1.3639335632324219, -0.03215901553630829, -2.874907970428467, -0.1720026284456253, -0.07982461899518967, -0.040876198559999466, -0.004348821938037872, -0.05305054038763046], "finish_reason": "stop"}], "metrics": {"energy": 238.94603361034407, "energy_per_token": 1.20073383723791, "time": 8.613907, "time_per_token": 0.0432859648241206}}
{"outputs": [{"text": "# Check that the input is a non-empty DataFrame\n    if not isinstance(df, pd.DataFrame) or len(df.columns) == 0:\n        raise ValueError(\"The input is not a non-empty DataFrame\")\n\n    # Initialize an empty list to store the Matplotlib Axes objects\n    axes = []\n\n    # Iterate over columns in the DataFrame\n    for col in df.columns:\n        # Check if the column is numeric\n        if pd.api.types.is_numeric_dtype(df[col]):\n            # Create a histogram\n            ax = df[col].hist(title=col, xlabel='Value', ylabel='Frequency', grid=True)\n            # Add the histogram to the list of axes\n            axes.append(ax)\n\n    # Return the list of axes\n    return axes", "tokens": ["#", " Check", " that", " the", " input", " is", " a", " non", "-", "empty", " Data", "Frame", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " len", "(", "df", ".", "columns", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " is", " not", " a", " non", "-", "empty", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " an", " empty", " list", " to", " store", " the", " Mat", "plotlib", " Ax", "es", " objects", "\n", "    ", "axes", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " over", " columns", " in", " the", " Data", "Frame", "\n", "    ", "for", " col", " in", " df", ".", "columns", ":", "\n", "        ", "#", " Check", " if", " the", " column", " is", " numeric", "\n", "        ", "if", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "df", "[", "col", "]", "):", "\n", "            ", "#", " Create", " a", " histogram", "\n", "            ", "ax", " =", " df", "[", "col", "]", ".", "hist", "(", "title", "=", "col", ",", " x", "label", "='", "Value", "'", ",", " y", "label", "='", "F", "requency", "'", ",", " grid", "=", "True", ")", "\n", "            ", "#", " Add", " the", " histogram", " to", " the", " list", " of", " axes", "\n", "            ", "axes", ".", "append", "(", "ax", ")", "\n", "\n", "    ", "#", " Return", " the", " list", " of", " axes", "\n", "    ", "return", " axes", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.7058968544006348, -0.8518466353416443, -2.6307718753814697, -0.3101653456687927, -0.04171271249651909, -0.02372460626065731, -0.12251782417297363, -0.3765837252140045, -0.0012396040838211775, -0.0003668589051812887, -0.02107289992272854, -0.0005212855176068842, -0.32553064823150635, -0.001520192832686007, -0.017471222206950188, -0.29204919934272766, -0.09843888133764267, -0.00016759421851020306, -0.0006104036583565176, -0.00040070133400149643, -0.015838298946619034, -9.894321920000948e-06, -0.17836257815361023, -0.2623746693134308, -0.0031566813122481108, -0.6023529171943665, -5.2927523938706145e-05, -0.0016936019528657198, -1.6430377960205078, -0.23717354238033295, -0.003474866971373558, -0.17032481729984283, -0.0006201728247106075, -0.00022492263815365732, -0.021631848067045212, -0.0019311128417029977, -0.0012054328108206391, -0.004774953704327345, -0.007665977813303471, -1.3232143828645349e-05, -0.29350295662879944, -0.03838058561086655, -2.649832248687744, -0.0072649819776415825, -0.3099232316017151, -0.02475224994122982, -0.020303279161453247, -0.14971984922885895, -0.0004077318590134382, -5.924526340095326e-05, -0.007054303307086229, -0.000825898430775851, -1.3289361000061035, -0.00013529339048545808, -0.0036669413093477488, -0.07385815680027008, -0.0006705658161081374, -0.07438793033361435, -2.622537136077881, -0.8315589427947998, -0.005735606420785189, -0.007546843495219946, -0.19854441285133362, -0.06393545120954514, -0.09047652035951614, -2.5063157081604004, -0.00011228884250158444, -0.09650959074497223, -0.004152129869908094, -0.12199922651052475, -0.04190604016184807, -0.0001716466504149139, -0.037638526409864426, -0.1357705146074295, -0.007508627604693174, -0.00015948931104503572, -0.013407780788838863, -0.00017712931730784476, -0.03626956418156624, -0.5043833255767822, -0.00048637480358593166, -0.2866239547729492, -2.7578492164611816, -0.8450522422790527, -0.11728986352682114, -0.014650268480181694, -7.807903602952138e-05, -0.19143255054950714, -0.0001284993631998077, -0.011538202874362469, -0.3437982201576233, -0.15153296291828156, -0.0023974028881639242, -0.14652058482170105, -0.102949358522892, -0.0017635759431868792, -0.0006864098832011223, -0.02347603067755699, -0.30946749448776245, -0.3700733482837677, -0.2882358133792877, -0.10179460048675537, -0.02762073092162609, -0.14469227194786072, -0.14165006577968597, -0.2713044583797455, -0.00019810620869975537, -0.06033600866794586, -1.425618290901184, -4.470248313737102e-05, -0.07648070901632309, -6.198863957251888e-06, -0.0024824298452585936, -1.728519782773219e-05, -0.0001954841281985864, -0.00043704494601115584, -0.01988207921385765, -0.004522453062236309, -0.0001525762490928173, -0.00017998983094003052, -8.093983342405409e-05, -0.0033091329969465733, -0.0033451335038989782, -3.9934315282152966e-05, -0.013427776284515858, -0.007692357990890741, -0.0007428746903315187, -0.006871166173368692, -0.03434380516409874, -0.436013400554657, -0.12278302758932114, -0.798794686794281, -1.6224443912506104, -0.0004349001101218164, -0.6261141300201416, -0.00828283466398716, -0.07423818856477737, -0.0033033110667020082, -0.00010775939153973013, -6.294052582234144e-05, -0.00010287232726113871, -1.3431148529052734, -0.3164394497871399, -0.8142326474189758, -0.04826284945011139, -0.21626849472522736, -0.4482165575027466, -0.9536866545677185, -0.0014925779541954398, -0.18377865850925446, -0.026020105928182602, -0.0052642300724983215, -3.671578815556131e-05, -0.0020763759966939688, -2.002696055569686e-05, -0.0033258858602494, -0.0030057511758059263, -0.003749247407540679, -1.3153586387634277, -0.0006347072194330394, -1.7516337633132935, -0.01766589656472206, -0.12714453041553497, -0.5502281785011292, -0.0048196809366345406, -0.17128944396972656, -0.2935795783996582, -0.36730220913887024, -0.06272957473993301, -0.1023917868733406, -0.024279633536934853, -0.0031818735878914595, -0.07615598291158676, -0.5840587019920349, -0.6831868886947632, -0.013145685195922852, -9.905801562126726e-05, -0.0013450870756059885, -0.00017808281700126827, -0.00031382881570607424, -3.397406908334233e-05, -7.60526381782256e-05, -0.002782879862934351, -0.0003116837178822607, -0.11871805042028427, -0.00655287504196167, -0.3850189447402954, -0.04284745454788208, -0.07214359194040298, -0.0023462644312530756, -0.0018488947534933686, -0.8938276171684265, -0.07100865244865417, -0.00012027494085486978, -0.0008866431307978928, -0.0010022860951721668, -1.4723882675170898, -9.536738616588991e-07, -1.0728830375228426e-06, -2.3245540432981215e-05, -0.00017891713650897145, -0.057808443903923035], "finish_reason": "stop"}], "metrics": {"energy": 221.33107051277142, "energy_per_token": 1.095698368875106, "time": 9.034589, "time_per_token": 0.044725688118811883}}
{"outputs": [{"text": "cols = [x for x in df.columns if df[x].dtype.name.lower().startswith('number')]\n    if not cols:\n        raise ValueError(\"Input is not a non-empty DataFrame or there are no numeric columns in the DataFrame.\")\n\n    axes = []\n    for col in cols:\n        ax = df[col].plot.hist()\n        ax.set_title(f\"Histogram of {col}\")\n        ax.set_xlabel(\"Value\")\n        ax.set_ylabel(\"Frequency\")\n        axes.append(ax)\n\n    return axes", "tokens": ["cols", " =", " [", "x", " for", " x", " in", " df", ".", "columns", " if", " df", "[", "x", "]", ".", "d", "type", ".", "name", ".", "lower", "()", ".", "start", "sw", "ith", "('", "number", "')", "]", "\n", "    ", "if", " not", " col", "s", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " is", " not", " a", " non", "-", "empty", " Data", "Frame", " or", " there", " are", " no", " numeric", " columns", " in", " the", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "axes", " =", " []", "\n", "    ", "for", " col", " in", " col", "s", ":", "\n", "        ", "ax", " =", " df", "[", "col", "]", ".", "plot", ".", "hist", "()", "\n", "        ", "ax", ".", "set", "_", "title", "(", "f", "\"", "H", "ist", "ogram", " of", " {", "col", "}\"", ")", "\n", "        ", "ax", ".", "set", "_", "xlabel", "(", "\"", "Value", "\"", ")", "\n", "        ", "ax", ".", "set", "_", "ylabel", "(", "\"", "F", "requency", "\"", ")", "\n", "        ", "axes", ".", "append", "(", "ax", ")", "\n", "\n", "    ", "return", " axes", "\n", "\n", "if"], "logprobs": [-4.033632755279541, -0.08826040476560593, -2.7544169425964355, -3.3426597118377686, -0.029247161000967026, -0.0038938906509429216, -0.011596414260566235, -0.026117781177163124, -0.04936261475086212, -0.17703622579574585, -0.13419722020626068, -0.12233313918113708, -0.009194650687277317, -0.0009447640040889382, -0.00014995403762441128, -0.00011991735664196312, -0.06964351236820221, -0.22612933814525604, -0.9942272305488586, -0.7276906967163086, -1.2796566486358643, -0.8314317464828491, -0.002146323211491108, -1.3807873725891113, -0.17658841609954834, -2.6702524337451905e-05, 0.0, -0.18297435343265533, -1.0408844947814941, -0.0014429405564442277, -0.08192253857851028, -0.02136944979429245, -0.21439413726329803, -0.13628076016902924, -0.8371106386184692, -0.32302531599998474, -1.0728830375228426e-06, -0.03217633068561554, -0.016801046207547188, -0.003836059710010886, -0.031603146344423294, -0.0060748932883143425, -5.364274329622276e-05, -0.5376389622688293, -0.07424472272396088, -2.1714329719543457, -0.456576406955719, -0.11012246459722519, -0.048753105103969574, -0.13636429607868195, -0.004642541520297527, -0.0004642124113161117, -0.026774315163493156, -0.0018173621501773596, -0.22014231979846954, -0.4557356536388397, -0.021224744617938995, -0.003513593692332506, -0.00808289460837841, -0.0069616143591701984, -0.32957032322883606, -0.12966760993003845, -0.018472891300916672, -0.0016671819612383842, -0.45097488164901733, -0.0049149408005177975, -0.001574111171066761, -0.009201028384268284, -1.030911922454834, -0.001978703308850527, -0.4502425789833069, -0.021538984030485153, -0.13419075310230255, -0.005189164076000452, -0.09683459252119064, -0.028982816264033318, -0.24056784808635712, -0.01848330721259117, -0.012830444611608982, -2.622600959512056e-06, -0.0005333193112164736, -0.0012324602575972676, -0.002347691683098674, -0.9567062854766846, -0.02678174339234829, -0.37995749711990356, -0.04224127531051636, -0.0013749678619205952, -0.00037245964631438255, -0.002926830668002367, -0.5794762372970581, -0.3849470615386963, -0.0007738456479273736, -1.072998046875, -0.0268880482763052, -0.010708724148571491, -0.166986346244812, -0.0033803009428083897, -0.05622265860438347, -0.1351562738418579, -0.1260780394077301, -0.0801822617650032, -1.293670892715454, -0.25093382596969604, -1.6114121675491333, -0.003960979636758566, -0.008205393329262733, -0.24320371448993683, -0.3302789032459259, -0.005228773225098848, -0.08781109005212784, -0.045413754880428314, -0.00848557148128748, -0.002779789036139846, -0.01432128343731165, -0.000534868217073381, -0.005963153671473265, -0.19744400680065155, -0.03833331912755966, -0.597001850605011, -0.015019779093563557, -0.06363258510828018, -0.0013393727131187916, -0.007880667224526405, -0.003030590945854783, -0.000163541772053577, -0.0004048719711136073, -9.83428253675811e-05, -0.0005787128466181457, -2.7179348762729205e-05, -0.00020883286197204143, -0.004940089304000139, -0.0005744237569160759, -0.0018901830771937966, -0.003941981587558985, -0.000734178873244673, -0.0010407513473182917, -0.002714522648602724, -0.014649094082415104, -0.08187299966812134, -0.001873882138170302, -0.000393432448618114, -0.00012957210128661245, -0.0005158047424629331, -0.0024364092387259007, -0.0020122535061091185, -0.5816498398780823, -0.0010368215152993798, -0.009068256244063377, -0.0022239969111979008, -0.5757330656051636, -0.01745564118027687, -1.2809398174285889], "finish_reason": "stop"}], "metrics": {"energy": 153.02306616497052, "energy_per_token": 1.0001507592481733, "time": 6.5193725, "time_per_token": 0.04261027777777778}}
{"outputs": [{"text": "result = []\n\n    if not isinstance(df, pd.core.generic.DataFrame):\n        raise ValueError(\"Input must be a DataFrame\")\n    elif df.empty:\n        raise ValueError(\"Input DataFrame must not be empty\")\n\n    numeric_cols = df.select_dtypes(include='number').columns\n\n    if len(numeric_cols) == 0:\n        raise ValueError(\"Input DataFrame must have at least one numeric column\")\n\n    for col in numeric_cols:\n        ax = df[col].hist(title=col, bins=50, xlabelsize=10, ylabelsize=5)\n        result.append(ax)\n\n    return result\n\ndf = pd.DataFrame({'A': np.random.normal(0, 1, 100), 'B': np.random.exponential(1, 100)})\naxes = task_func(df)\nfor ax in axes:\n    plt.show()", "tokens": ["result", " =", " []", "\n", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "core", ".", "generic", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " must", " be", " a", " Data", "Frame", "\"", ")", "\n", "    ", "elif", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " must", " not", " be", " empty", "\"", ")", "\n", "\n", "    ", "numeric", "_", "cols", " =", " df", ".", "select", "_", "d", "types", "(", "include", "='", "number", "')", ".", "columns", "\n", "\n", "    ", "if", " len", "(", "numeric", "_", "cols", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " must", " have", " at", " least", " one", " numeric", " column", "\"", ")", "\n", "\n", "    ", "for", " col", " in", " numeric", "_", "cols", ":", "\n", "        ", "ax", " =", " df", "[", "col", "]", ".", "hist", "(", "title", "=", "col", ",", " bins", "=", "5", "0", ",", " x", "label", "size", "=", "1", "0", ",", " y", "label", "size", "=", "5", ")", "\n", "        ", "result", ".", "append", "(", "ax", ")", "\n", "\n", "    ", "return", " result", "\n", "\n", "df", " =", " pd", ".", "DataFrame", "({", "'", "A", "':", " np", ".", "random", ".", "normal", "(", "0", ",", " ", "1", ",", " ", "1", "0", "0", ")", ",", " '", "B", "':", " np", ".", "random", ".", "exp", "onential", "(", "1", ",", " ", "1", "0", "0", ")})", "\n", "axes", " =", " task", "_", "func", "(", "df", ")", "\n", "for", " ax", " in", " axes", ":", "\n", "    ", "plt", ".", "show", "()", "\n", "\n", "#"], "logprobs": [-3.8104329109191895, -0.0881659984588623, -0.0653851255774498, -0.012695681303739548, -1.9288485050201416, -0.0010093123419210315, -0.7606380581855774, -0.5426874756813049, -0.19842906296253204, -0.0002983363519888371, -0.0011614966206252575, -0.0009154658182524145, -0.04319607466459274, -3.099393507000059e-05, -1.4799416065216064, -4.7801782784517854e-05, -2.1793744564056396, -0.0018374717328697443, -0.36818698048591614, -0.2418588548898697, -0.009464041329920292, -0.0028715587686747313, -0.027296332642436028, -0.0534602627158165, -5.4834770708112046e-05, -0.2743249535560608, -0.18902970850467682, -0.423616498708725, -1.4465059041976929, -0.0021357364021241665, -0.06082218140363693, -0.5357582569122314, -0.007081055082380772, -0.5601701736450195, -0.00032228996860794723, -0.002227446297183633, -1.0658645629882812, -1.4683310985565186, -0.9143679738044739, -0.013847471214830875, -0.0351090282201767, -0.032496608793735504, -0.004771987907588482, -0.0006578188622370362, -0.06406404823064804, -0.0014688903465867043, -2.002696055569686e-05, -0.0051305778324604034, -0.0037095798179507256, -0.4904017448425293, -0.5313746929168701, -0.004477238282561302, -0.7443554401397705, -0.6795477867126465, -0.0033060437999665737, -0.0011600677389651537, -0.043145038187503815, -0.00014172980445437133, -0.0009012927766889334, -0.47866666316986084, -0.0005090133054181933, -1.6008899211883545, -0.014814368449151516, -0.5106799602508545, -0.007031694054603577, -0.37489089369773865, -0.002837562235072255, -0.03815915063023567, -2.2411095415009186e-05, -4.768258077092469e-05, -0.00020311199477873743, -0.044131942093372345, -0.10258632153272629, -2.590709686279297, -0.03440231457352638, -0.002028076210990548, -0.7306861877441406, -0.0039930385537445545, -0.34025895595550537, -1.412974238395691, -6.294052582234144e-05, -0.43399614095687866, -0.5579498410224915, -7.56950321374461e-05, -0.001259963377378881, -2.3841855067985307e-07, -9.059865078597795e-06, -0.0019300420535728335, -0.12549567222595215, -0.000254241080256179, -0.0003516055876389146, -0.0005691815749742091, -0.0023093954659998417, -0.0004888770054094493, -0.015718843787908554, -0.0019358720164746046, -2.9802276912960224e-06, -0.007567193359136581, -0.009898386895656586, -1.1450684070587158, -0.006466180086135864, -0.00031883400515653193, -0.08338005095720291, -1.237586498260498, -0.15773460268974304, -0.0016708712792024016, -0.03438607603311539, -0.03589943051338196, -0.003769555827602744, -0.012270791456103325, -0.0001711698860162869, -0.001007645158097148, -0.160343736410141, -0.00034648136352188885, -0.09011611342430115, -0.15494538843631744, -0.02777506411075592, -0.035140909254550934, -9.65590606938349e-06, -8.344646857949556e-07, -0.0026862272061407566, -0.0007033258443698287, -0.006208538077771664, -1.3612370491027832, -0.024388879537582397, -0.12430772185325623, -0.04233543574810028, -0.00086198840290308, -0.00023755589791107923, -0.0007849234389141202, -1.3456521034240723, -0.6335564851760864, -1.357222557067871, -0.05475388094782829, -0.25915566086769104, -0.3533429205417633, -1.772645354270935, -0.023810982704162598, -2.015320062637329, -0.042520761489868164, -0.6002627015113831, -2.612847328186035, -0.008489471860229969, -1.8390307426452637, -0.03833228722214699, -1.1747170686721802, -0.6932522058486938, -0.05763988196849823, -0.06711720675230026, -0.0007320346776396036, -5.4834770708112046e-05, -0.00028153270250186324, -0.9201354384422302, -0.24963730573654175, -0.010180097073316574, -0.016752514988183975, -0.1594190150499344, -0.0018797124503180385, -0.0008978387922979891, -0.00021395778458099812, -0.000995974289253354, -0.004675408825278282, -0.0025315401144325733, -0.0747213065624237, -0.0016210046596825123, -0.011211845092475414, -0.0020366418175399303, -0.5586711764335632, -0.018412034958600998, -2.476515769958496, -0.05293601378798485, -0.0035671668592840433, -0.0011886443244293332, -0.02794073335826397, -0.11899621784687042, -0.07758838683366776, -0.07439501583576202, -0.0009235645993612707, -0.04478245601058006, -0.00010716341057559475, -0.0019201666582375765, -6.198863957251888e-06, -0.011828050948679447, -0.0005783553933724761, -0.0017121669370681047, -0.0007546676206402481, -0.0010002615163102746, -0.001869836589321494, -0.001563875237479806, -0.00031442465842701495, -0.00527063338086009, -0.0008657997823320329, -0.0038732285611331463, -0.008152185939252377, -0.00027998341829515994, -0.03403828665614128, -0.0002857038634829223, -6.151010165922344e-05, -0.000957030919380486, -5.709961988031864e-05, -0.00037400881410576403, -1.6569954823353328e-05, -0.00416696909815073, -3.4570634852570947e-06, -1.9430925021879375e-05, -0.000764792668633163, -0.0009716795175336301, -0.0002076410164590925, -0.00029392691794782877, -0.0001382732152706012, -0.00017152745567727834, -0.017340831458568573, -0.003607434220612049, -0.34654736518859863, -0.004324489738792181, -0.0007828985108062625, -3.3378546504536644e-06, -4.076874756719917e-05, -0.0003703146940097213, -0.00015793983766343445, -0.03569573536515236, -0.009103222750127316, -0.15738144516944885, -0.011805549263954163, -0.0005199749139137566, -0.0005485698929987848, -0.0006409021443687379, -0.0071037812158465385, -0.012222746387124062, -0.01904183439910412, -1.3112935448589269e-05, -0.00381337758153677, -0.002411317080259323, -1.763611078262329, -0.12563225626945496, -0.6533566117286682], "finish_reason": "stop"}], "metrics": {"energy": 258.3501076021197, "energy_per_token": 1.0947038457716936, "time": 10.481255, "time_per_token": 0.04441209745762712}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame) or df.empty:\n        raise ValueError(\"Input is not a non-empty DataFrame.\")\n    axes = []\n    for col in df.select_dtypes(include=['float', 'int']):\n        axes.append(df[col].hist(figsize=(10, 5), bins=30, histtype='stepfilled', edgecolor='black', color='C1'))\n    return axes", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " is", " not", " a", " non", "-", "empty", " Data", "Frame", ".", "\"", ")", "\n", "    ", "axes", " =", " []", "\n", "    ", "for", " col", " in", " df", ".", "select", "_", "d", "types", "(", "include", "=['", "float", "'", ",", " '", "int", "']", "):", "\n", "        ", "axes", ".", "append", "(", "df", "[", "col", "]", ".", "hist", "(", "fig", "size", "=(", "1", "0", ",", " ", "5", ")", ",", " bins", "=", "3", "0", ",", " hist", "type", "='", "step", "filled", "'", ",", " edge", "color", "='", "black", "'", ",", " color", "='", "C", "1", "'))", "\n", "    ", "return", " axes", "\n", "\n", "if"], "logprobs": [-1.134972095489502, -0.26663315296173096, -0.10157729685306549, -0.0002908283786382526, -0.0012969900853931904, -0.0005785936955362558, -0.039269618690013885, -2.8371408916427754e-05, -0.25071361660957336, -0.9138440489768982, -0.012736523523926735, -0.9658684134483337, -0.006666325498372316, -0.01631433516740799, -0.20481793582439423, -0.010189655236899853, -0.002464830409735441, -0.010726178996264935, -0.0038510223384946585, -3.373566141817719e-05, -0.28653696179389954, -0.07697984576225281, -0.45292162895202637, -0.40027767419815063, -0.03596429154276848, -0.03443456441164017, -0.16878829896450043, -0.0013341344892978668, -0.0002177716523874551, -0.012194483540952206, -0.0010793342953547835, -1.0550885200500488, -0.006664786022156477, -0.0001461399078834802, -0.003318757051602006, -1.065271019935608, -2.492476463317871, -0.028736703097820282, -0.06886310130357742, -0.006432542577385902, -0.052272114902734756, -0.45273417234420776, -0.41754797101020813, -0.22443446516990662, -0.007263562176376581, -0.1720718890428543, -0.7789008021354675, -5.960446742392378e-06, -0.0002727136597968638, -0.00027426297310739756, -0.09922872483730316, -0.3171958327293396, -1.6271467208862305, -1.6134108304977417, -0.4431144893169403, -0.00016962042718660086, -0.03875794634222984, -0.039963968098163605, -0.6065146923065186, -0.004405436106026173, -0.013754704035818577, -0.001359015703201294, -1.6451597213745117, -0.003922626841813326, -0.002686108462512493, -0.0029043657705187798, -0.8667054772377014, -0.021146666258573532, -0.0065884036011993885, -0.00413562823086977, -0.00026890001026913524, -0.8192929625511169, -0.7417843341827393, -2.3948159217834473, -6.937739817658439e-05, -0.03551052138209343, -0.43910276889801025, -0.5329170227050781, -0.001503052655607462, -0.08931347727775574, -0.258993536233902, -0.929045557975769, -0.00014077626110520214, -1.39642333984375, -0.0073942081071436405, -2.2328386306762695, -0.008993946947157383, -1.3373315334320068, -3.64975643157959, -0.002245644573122263, -0.03785824030637741, -0.4125516414642334, -0.30161070823669434, -0.3629050850868225, -0.00011073929636040702, -2.699716567993164, -0.0009632238652557135, -0.013710257597267628, -0.4832859933376312, -0.435849666595459, -0.000456109904916957, -2.075777292251587, -0.02907487563788891, -3.766664981842041, -1.4764204025268555, -0.23383477330207825, -0.008501292206346989, -0.10498186945915222, -0.0251679178327322, -0.003592824097722769, -0.523065984249115, -0.023072008043527603, -1.2347265481948853], "finish_reason": "stop"}], "metrics": {"energy": 143.13096065139766, "energy_per_token": 1.2666456694813952, "time": 4.844602, "time_per_token": 0.042872584070796464}}
{"outputs": [{"text": "if df is None or not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Invalid input. The input should be a non-empty DataFrame.\")\n\n    if len(df) == 0:\n        raise ValueError(\"Invalid input. The input DataFrame is empty.\")\n\n    numeric_cols = [col for col in df.columns if df[col].dtype.kind in ('i', 'f')]\n    if len(numeric_cols) == 0:\n        raise ValueError(\"Invalid input. The input DataFrame has no numeric columns.\")\n\n    axes = []\n    for col in numeric_cols:\n        axes.append(df[col].hist())\n\n    return axes", "tokens": ["if", " df", " is", " None", " or", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " input", ".", " The", " input", " should", " be", " a", " non", "-", "empty", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " input", ".", " The", " input", " Data", "Frame", " is", " empty", ".", "\"", ")", "\n", "\n", "    ", "numeric", "_", "cols", " =", " [", "col", " for", " col", " in", " df", ".", "columns", " if", " df", "[", "col", "]", ".", "d", "type", ".", "kind", " in", " ('", "i", "'", ",", " '", "f", "')", "]", "\n", "    ", "if", " len", "(", "numeric", "_", "cols", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " input", ".", " The", " input", " Data", "Frame", " has", " no", " numeric", " columns", ".", "\"", ")", "\n", "\n", "    ", "axes", " =", " []", "\n", "    ", "for", " col", " in", " numeric", "_", "cols", ":", "\n", "        ", "axes", ".", "append", "(", "df", "[", "col", "]", ".", "hist", "())", "\n", "\n", "    ", "return", " axes", "\n", "\n", "def"], "logprobs": [-1.134972095489502, -2.2353124618530273, -1.5958950519561768, -0.030071590095758438, -0.1999337375164032, -1.5206063985824585, -0.6060618758201599, -0.00019047829846385866, -0.0022606311831623316, -0.0024159548338502645, -0.03398275002837181, -1.3947389561508317e-05, -0.28990426659584045, -0.45632317662239075, -0.012288219295442104, -0.002245525596663356, -0.021864088252186775, -0.021624382585287094, -2.825220326485578e-05, -0.29831451177597046, -0.08730673044919968, -1.8240991830825806, -0.17861178517341614, -0.7429678440093994, -2.3011255264282227, -0.06302958726882935, -1.1253595352172852, -0.0015584002248942852, -0.02126757614314556, -0.2975965738296509, -0.001456272671930492, -0.0005571481888182461, -0.07008194923400879, -0.0015549485106021166, -0.09831798076629639, -0.004114496521651745, -0.0002053765201708302, -0.004966778680682182, -0.4774770438671112, -0.0005203323671594262, -1.0135618448257446, -0.9706141948699951, -0.00019631843315437436, -0.003307113191112876, -0.4617707133293152, -0.11470971256494522, -0.000609927112236619, -0.00031251792097464204, -0.04743248224258423, -0.021047336980700493, -0.0003040566807612777, -0.07748303562402725, -0.001639213995076716, -1.3828182090946939e-05, -0.0015624469378963113, -0.006610194221138954, -1.0585592985153198, -0.010471873916685581, -0.002063408959656954, -0.04928987845778465, -0.3475247919559479, -0.8345006704330444, -0.0004661188868340105, -1.9498835802078247, -0.002016298472881317, -0.010977943427860737, -0.00207399670034647, -0.0003719830128829926, -0.0014924588613212109, -0.00917102675884962, -0.00036125810584053397, -1.2518713474273682, -0.001829261309467256, -0.6265652775764465, -0.00736829312518239, -1.3553297519683838, -0.345716267824173, -0.017261041328310966, -0.0014079429674893618, -0.0025295186787843704, -0.00680995499715209, -0.0954970195889473, -0.2600843608379364, -0.013707670383155346, -0.042698513716459274, -0.002972709946334362, -4.446407547220588e-05, -1.490105023549404e-05, -1.2755313036905136e-05, -0.06600221246480942, -0.18028970062732697, -0.19248472154140472, -0.48917120695114136, -0.057511139661073685, -3.510162591934204, -0.10330560058355331, -0.004166731610894203, -2.3007127310847864e-05, -0.008255996741354465, -0.49631237983703613, -0.5124821066856384, -0.012608221732079983, -0.009271896444261074, -0.5624921917915344, -0.029756780713796616, -0.2675118148326874, -2.8371408916427754e-05, -0.00022837892174720764, 0.0, -5.960446742392378e-06, -0.00019929806876461953, -0.012116756290197372, -0.00010752100206445903, -3.862306402879767e-05, -0.00036030475166626275, -0.0012532960390672088, -0.0001817776501411572, -0.00241452781483531, -0.0004822045157197863, -1.2993727978027891e-05, -0.001783329644240439, -0.014600810594856739, -0.4215518534183502, -0.0019450333202257752, -0.0006530536338686943, -0.15123285353183746, -0.3918955624103546, -0.0055861324071884155, -0.00011634149996098131, -0.8224794268608093, -0.0009757286752574146, -0.017915921285748482, -0.02065202221274376, -0.006008537951856852, -0.0011016021016985178, -0.0003268184664193541, -0.001348539488390088, -0.010563411749899387, -0.0005360596696846187, -0.4366549849510193, -0.022414902225136757, -0.07143395394086838, -0.006147523410618305, -0.06933613866567612, -0.022840164601802826, -0.02909085527062416, -0.010104927234351635, -0.0391308069229126, -2.0265558760002023e-06, -1.1920922133867862e-06, -0.0001110968878492713, -0.000623032043222338, -0.0008586533949710429, -1.8124182224273682, -0.003805302083492279, -0.0014006814453750849, -0.002317720791324973, -0.8149577975273132, -0.02261199802160263, -0.0006302992696873844, -0.0017134760273620486, -0.0004291805380489677, -1.014954686164856, -0.9041274189949036, -0.014672706834971905, -0.3559773564338684, -0.00042703570215962827, -0.012116990983486176, -0.0030864481814205647, -0.5586559772491455, -0.01634259894490242, -1.297974705696106], "finish_reason": "stop"}], "metrics": {"energy": 179.04538334655763, "energy_per_token": 1.0409615310846374, "time": 7.3679605, "time_per_token": 0.04283697965116279}}
{"outputs": [{"text": "numeric_cols = [col for col in df.columns if df[col].dtype.name in ('int64', 'float64')]\n\n    if not numeric_cols:\n        raise ValueError('There are no numeric columns in the DataFrame')\n\n    return [df[col].plot.hist() for col in numeric_cols]", "tokens": ["numeric", "_", "cols", " =", " [", "col", " for", " col", " in", " df", ".", "columns", " if", " df", "[", "col", "]", ".", "d", "type", ".", "name", " in", " ('", "int", "6", "4", "'", ",", " '", "float", "6", "4", "')", "]", "\n", "\n", "    ", "if", " not", " numeric", "_", "cols", ":", "\n", "        ", "raise", " Value", "Error", "('", "There", " are", " no", " numeric", " columns", " in", " the", " Data", "Frame", "')", "\n", "\n", "    ", "return", " [", "df", "[", "col", "]", ".", "plot", ".", "hist", "()", " for", " col", " in", " numeric", "_", "cols", "]", "\n", "\n", "print"], "logprobs": [-3.7229294776916504, -0.02820199355483055, -0.6298421025276184, -0.011633060872554779, -1.8974940776824951, -0.34168490767478943, -0.022085312753915787, -0.0012709167785942554, -0.006435740273445845, -0.004319979343563318, -0.040580686181783676, -0.16980308294296265, -0.013271329924464226, -0.025869568809866905, -0.002643782878294587, -3.93382906622719e-05, -1.168244216387393e-05, -1.2040065485052764e-05, -0.04267852380871773, -0.27260786294937134, -0.2357226014137268, -1.5853934288024902, -0.5720562934875488, -2.071608066558838, -0.267256498336792, -0.46850666403770447, -4.0531076592742465e-06, -0.0010268182959407568, -9.583967766957358e-05, -0.00802305806428194, -0.15998682379722595, -0.004627590533345938, -6.9141146923357155e-06, -0.08490607887506485, -0.027529696002602577, -0.01044391468167305, -1.5499736070632935, -0.00018356545479036868, -0.03282082453370094, -0.5760009288787842, -0.5302278399467468, -5.602820692729438e-06, -1.2874520507466514e-05, -0.07225216925144196, -0.0042418744415044785, -0.0014363934751600027, -0.01437204796820879, -0.001910886145196855, -2.0503786799963564e-05, -0.7286894917488098, -1.7234516143798828, -0.013949164189398289, -0.005209087394177914, -0.007335277274250984, -0.004591517616063356, -0.06227222457528114, -0.04839642345905304, -0.07241994887590408, -0.000284154579276219, -1.24591064453125, -0.0016363576287403703, -0.11873519420623779, -0.0006198153714649379, -2.213336229324341, -0.03659416735172272, -0.42676278948783875, -0.002331279218196869, -0.015217162668704987, -0.0015730400336906314, -0.00016485285595990717, -0.6633871793746948, -0.0735623762011528, -0.0003389737685211003, -0.9492359161376953, -0.02822297066450119, -0.00017629499780014157, -5.07818695041351e-05, -0.012664252892136574, -9.42901024245657e-05, -9.536738616588991e-07, -0.11411835253238678, -0.23506475985050201, -0.02193628065288067, -3.537550449371338], "finish_reason": "stop"}], "metrics": {"energy": 119.21949110984806, "energy_per_token": 1.41927965606962, "time": 3.5897384, "time_per_token": 0.04273498095238095}}
{"outputs": [{"text": "axes = []\n    if not isinstance(df, pd.core.frame.DataFrame) or df.empty:\n        raise ValueError(\"Invalid data.\")\n    columns = df.select_dtypes(include=[np.number])\n    if not columns:\n        raise ValueError(\"Data has no numeric columns.\")\n    for column in columns:\n        axes.append(pd.plotting.hist(column))\n    return axes", "tokens": ["axes", " =", " []", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "core", ".", "frame", ".", "DataFrame", ")", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " data", ".", "\"", ")", "\n", "    ", "columns", " =", " df", ".", "select", "_", "d", "types", "(", "include", "=[", "np", ".", "number", "])", "\n", "    ", "if", " not", " columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Data", " has", " no", " numeric", " columns", ".", "\"", ")", "\n", "    ", "for", " column", " in", " columns", ":", "\n", "        ", "axes", ".", "append", "(", "pd", ".", "plot", "ting", ".", "hist", "(", "column", "))", "\n", "    ", "return", " axes"], "logprobs": [-2.4145569801330566, -0.04194604977965355, -0.04051898419857025, -0.014722278341650963, -0.28751516342163086, -1.0584379434585571, -0.712441623210907, -0.2736343443393707, -0.0003418338019400835, -0.0011120808776468039, -0.0009220162755809724, -0.0526733323931694, -2.729855441430118e-05, -1.4993635416030884, -5.936446541454643e-05, -0.14158788323402405, -0.003973803482949734, -0.001587798586115241, -0.7763767838478088, -0.02368129976093769, -1.0187783241271973, -0.007340247742831707, -0.02792554721236229, -0.09659813344478607, -0.01678275875747204, -0.004047892522066832, -0.022339247167110443, -0.0063348207622766495, -6.747018051100895e-05, -0.35353872179985046, -0.09977004677057266, -1.5705606937408447, -2.6476900577545166, -1.4523683786392212, -0.49857398867607117, -0.00034314466756768525, -0.005013394635170698, -0.40998774766921997, -2.2738046646118164, -0.03205477073788643, -0.3095932900905609, -0.0027295020408928394, -0.25272616744041443, -8.702239938429557e-06, -0.0004850641416851431, -0.00020787939138244838, -0.09233834594488144, -0.19480493664741516, -1.1893409490585327, -0.2961014211177826, -8.713819261174649e-05, -0.01805700734257698, -0.10866879671812057, -0.3980022370815277, -0.033308565616607666, -0.3754149377346039, -0.9596749544143677, -0.19044393301010132, -1.0422239303588867, -0.0036001885309815407, -0.0005443998379632831, -0.03699357062578201, -0.003647580975666642, -2.407998726994265e-05, -0.010063623078167439, -0.009700304828584194, -3.243049383163452, -1.1935317516326904, -0.0056110261939466, -0.22067075967788696, -0.12221488356590271, -0.03692980855703354, -0.0015222163638100028, -0.0002723561483435333, -0.0009348789462819695, -0.1063045784831047, -0.16338768601417542, -0.8148579001426697, -0.030494187027215958, -0.012445407919585705, -0.07559309899806976, -0.002046516165137291, -0.0015370947076007724, -1.5292143821716309, -0.005793209187686443, -0.0034039432648569345, -0.004025571048259735, -1.9887776374816895, -0.00015186110977083445, -1.3170733451843262, -0.001405204995535314, -7.235741941258311e-05, -0.17068137228488922, -0.583009660243988, -0.32006439566612244, -1.4134418964385986, -0.01123047061264515, -0.060459792613983154, -0.023530758917331696, -0.0049513583071529865], "finish_reason": "stop"}], "metrics": {"energy": 120.90815555953982, "energy_per_token": 1.2090815555953982, "time": 4.398185, "time_per_token": 0.043981849999999996}}
{"outputs": [{"text": "# Check if input is a non-empty DataFrame and if there are numeric columns\n    if not isinstance(df, pd.DataFrame) or not df.columns.isin(df.select_dtypes(include=np.number).columns).any():\n        raise ValueError(\"Input is not a valid DataFrame or no numeric columns found.\")\n\n    axes = []\n\n    # Iterate through all numeric columns and draw histograms\n    for col in df.select_dtypes(include=np.number).columns:\n        axes.append(plt.hist(df[col], bins=20, color='g')[0])\n\n    return axes", "tokens": ["#", " Check", " if", " input", " is", " a", " non", "-", "empty", " Data", "Frame", " and", " if", " there", " are", " numeric", " columns", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " not", " df", ".", "columns", ".", "isin", "(", "df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "columns", ")", ".", "any", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " is", " not", " a", " valid", " Data", "Frame", " or", " no", " numeric", " columns", " found", ".", "\"", ")", "\n", "\n", "    ", "axes", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " through", " all", " numeric", " columns", " and", " draw", " histogram", "s", "\n", "    ", "for", " col", " in", " df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "columns", ":", "\n", "        ", "axes", ".", "append", "(", "plt", ".", "hist", "(", "df", "[", "col", "]", ",", " bins", "=", "2", "0", ",", " color", "='", "g", "')", "[", "0", "])", "\n", "\n", "    ", "return", " axes", "\n", "\n", "#"], "logprobs": [-1.7058968544006348, -0.8518466353416443, -0.5432645678520203, -1.250896692276001, -0.028129208832979202, -0.7785764336585999, -0.47023361921310425, -0.0019525288371369243, -0.000427274004323408, -0.0229431614279747, -0.0008079125545918941, -2.202322483062744, -1.6812207698822021, -0.6647372841835022, -0.02100181207060814, -0.509188711643219, -0.002833758248016238, -0.41545242071151733, -0.002028076210990548, -0.06966686248779297, -0.2552042603492737, -0.08007696270942688, -0.00014578233822248876, -0.0007228621980175376, -0.0004895919119007885, -0.025075847283005714, -2.062299427052494e-05, -0.13133323192596436, -0.16751541197299957, -0.007275514770299196, -0.5746204257011414, -0.6187623739242554, -0.012207555584609509, -1.05831778049469, -0.0691840797662735, -2.32382869720459, -0.3000013828277588, -0.2283916473388672, -0.016469484195113182, -0.926360547542572, -9.536738616588991e-07, -0.00013219437096267939, -0.00044967554276809096, -0.07423266023397446, -0.32781413197517395, -0.6838428974151611, -0.08748839050531387, -0.0005646541831083596, -0.0011151769431307912, -0.1207616850733757, -0.008856656961143017, -0.002801305614411831, -0.06260887533426285, -0.0004704084130935371, -0.2410479485988617, -0.005533615127205849, -0.0022647941950708628, -0.0018215269083157182, -0.0070507521741092205, -0.005472677759826183, -1.5258672647178173e-05, -0.28124019503593445, -0.04156062752008438, -0.35004693269729614, -0.3817291259765625, -0.03698839992284775, -0.02983858808875084, -1.9780741930007935, -0.1189437285065651, -0.0014415121404454112, -0.16655036807060242, -2.678041934967041, -0.02019580453634262, -0.09063495695590973, -0.28222954273223877, -0.4009453058242798, -0.0043446677736938, -0.00038628268521279097, -0.0038125463761389256, -0.10795272141695023, -0.0007996936910785735, -2.127589225769043, -0.012762418016791344, -0.03779086098074913, -0.06270237267017365, -1.2214676141738892, -0.0002320735511602834, -0.5556996464729309, -1.3593958616256714, -0.0033004595898091793, -1.318058967590332, -2.1214561462402344, -0.09462451189756393, -0.013147332705557346, -0.5615004301071167, -0.4834761917591095, -0.3088175654411316, -0.05082912743091583, -0.22204822301864624, -0.00023409964342135936, -0.008255641907453537, -0.33536696434020996, -0.10739461332559586, -0.0008600826840847731, -0.06172926351428032, -0.13946250081062317, -1.7881377516459906e-06, -5.566918844124302e-05, -0.00022206225548870862, -0.0006308949086815119, -0.0010000233305618167, -0.008022703230381012, -0.0005311747081577778, -0.0003349220205564052, -0.00018320789968129247, -0.345876544713974, -4.2676016164477915e-05, -0.0013468727702274919, -0.0027286699041724205, -0.0026985916774719954, -0.0038948405999690294, -2.2324976921081543, -0.00403043907135725, -0.0024927754420787096, -0.0017283515771850944, -1.252732753753662, -0.00024971229140646756, -0.4485667645931244, -0.008124162442982197, -0.01222003810107708, -0.0033611729741096497, -7.390703103737906e-05, -0.18280626833438873, -0.021459296345710754, -0.16243760287761688, -0.05626199021935463, -0.9387855529785156, -0.14750586450099945, -0.5431114435195923, -1.883718490600586, -0.07445631921291351, -3.4108128547668457, -2.443345546722412, -0.029827017337083817, -0.16865436732769012, -0.005451930221170187, -0.031068699434399605, -0.13829249143600464, -0.007053119596093893, -0.09731383621692657, -0.002226970624178648, -0.5091743469238281, -0.018531521782279015, -1.2818881273269653], "finish_reason": "stop"}], "metrics": {"energy": 196.30380145645128, "energy_per_token": 1.2747000094574759, "time": 6.518408, "time_per_token": 0.04232732467532468}}
{"outputs": [{"text": "if df.empty or df.isnull().all().all():\n        raise ValueError(\"Input is not a non-empty DataFrame.\")\n    numeric_cols = df.select_dtypes(include=\"number\").columns\n    if not numeric_cols:\n        raise ValueError(\"There are no numeric columns in the DataFrame.\")\n    axes = []\n    for col in numeric_cols:\n        ax = df.hist(col)\n        axes.append(ax)\n    return axes", "tokens": ["if", " df", ".", "empty", " or", " df", ".", "is", "null", "()", ".", "all", "()", ".", "all", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " is", " not", " a", " non", "-", "empty", " Data", "Frame", ".", "\"", ")", "\n", "    ", "numeric", "_", "cols", " =", " df", ".", "select", "_", "d", "types", "(", "include", "=", "\"", "number", "\"", ")", ".", "columns", "\n", "    ", "if", " not", " numeric", "_", "cols", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "There", " are", " no", " numeric", " columns", " in", " the", " Data", "Frame", ".", "\"", ")", "\n", "    ", "axes", " =", " []", "\n", "    ", "for", " col", " in", " numeric", "_", "cols", ":", "\n", "        ", "ax", " =", " df", ".", "hist", "(", "col", ")", "\n", "        ", "axes", ".", "append", "(", "ax", ")", "\n", "    ", "return", " axes", "\n", "\n", "def"], "logprobs": [-1.134972095489502, -2.2353124618530273, -0.23851317167282104, -0.03455744683742523, -0.9774951934814453, -1.2438101768493652, -0.010346584022045135, -1.282996654510498, -1.2716165781021118, -0.005769149400293827, -0.00018308870494365692, -0.8602544665336609, -0.9749712347984314, -0.0768972784280777, -0.23047563433647156, -0.0407547764480114, -0.042697712779045105, -0.003361885668709874, -0.045924313366413116, -0.003310321131721139, -5.125868119648658e-05, -0.26170313358306885, -0.044823721051216125, -0.7476136684417725, -0.3620176911354065, -1.0227761268615723, -0.1165088564157486, -0.08397562056779861, -0.00324425776489079, -0.0004385939973872155, -0.018901120871305466, -0.0013323486782610416, -1.387775182723999, -0.01094646193087101, -0.0003682888636831194, -0.004413388203829527, -0.8195748329162598, -1.8159765005111694, -0.011158443987369537, -0.5272436738014221, -0.0049384282901883125, -0.32382717728614807, -0.005418732296675444, -0.038468800485134125, -1.8954096958623268e-05, -4.60137271147687e-05, -0.00019762947340495884, -0.04714106023311615, -0.11447074264287949, -1.1173357963562012, -1.9854011535644531, -0.02178920805454254, -3.981510963058099e-05, -0.001438060076907277, -0.738989531993866, -0.0066499835811555386, -0.1390179842710495, -0.03110729530453682, -0.18823987245559692, -0.9976330399513245, -0.09310033172369003, -1.1920922133867862e-06, -8.34461570775602e-06, -0.05104290693998337, -0.003272061934694648, -0.00038068200228735805, -0.003563365899026394, -0.0010943383676931262, -1.0132738680113107e-05, -0.0028651398606598377, -0.022560367360711098, -1.6887966394424438, -0.007854647003114223, -0.0018208129331469536, -0.0037997206673026085, -0.0021105175837874413, -0.03241998329758644, -0.01905224286019802, -0.03711062669754028, -0.00033182359766215086, -0.0052368370816111565, -0.0006736631621606648, -0.0005608416395261884, -0.0017790456768125296, -0.19555871188640594, -0.6013805270195007, -0.026260387152433395, -0.10969654470682144, -0.0038658662233501673, -0.014593761414289474, -0.029017210006713867, -0.10732565820217133, -0.0319618284702301, -0.031079329550266266, -6.079655122448457e-06, -1.311301275563892e-06, -0.001022888463921845, -0.0008288762182928622, -0.0011445883428677917, -0.9809306859970093, -0.019034583121538162, -0.16632024943828583, -2.925415277481079, -0.3989297151565552, -0.015234656631946564, -1.160149335861206, -1.4356324672698975, -0.025707155466079712, -0.007203084882348776, -0.7764731645584106, -0.0014953156933188438, -0.0015312624163925648, -0.00025722055579535663, -0.0019622850231826305, -0.16181287169456482, -0.003756254445761442, -0.047607772052288055, -0.010824769735336304, -0.004152604844421148, -0.587567925453186, -0.030156610533595085, -1.4522643089294434], "finish_reason": "stop"}], "metrics": {"energy": 160.1411888942718, "energy_per_token": 1.312632695854687, "time": 5.242922, "time_per_token": 0.04297477049180328}}
{"outputs": [{"text": "if df.empty:\n        raise ValueError(\"Input is empty\")\n    else:\n        cols = df.select_dtypes(include=np.number).columns\n        if cols.empty:\n            raise ValueError(\"No numeric columns in the DataFrame\")\n        else:\n            axes = [df[col].plot.hist(title=col, bins=20) for col in cols]\n            return axes", "tokens": ["if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " is", " empty", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "cols", " =", " df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "columns", "\n", "        ", "if", " col", "s", ".", "empty", ":", "\n", "            ", "raise", " Value", "Error", "(", "\"", "No", " numeric", " columns", " in", " the", " Data", "Frame", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "axes", " =", " [", "df", "[", "col", "]", ".", "plot", ".", "hist", "(", "title", "=", "col", ",", " bins", "=", "2", "0", ")", " for", " col", " in", " col", "s", "]", "\n", "            ", "return", " axes", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.134972095489502, -2.2353124618530273, -0.23851317167282104, -0.03455744683742523, -0.48235705494880676, -0.03157150000333786, -0.0024266578257083893, -0.026744836941361427, -0.003812665119767189, -3.325883881188929e-05, -0.3884144723415375, -0.035297077149152756, -0.5783275365829468, -0.2312878668308258, -0.4112817943096161, -0.7450800538063049, -0.00034850722295232117, -0.00498563889414072, -0.7970271706581116, -3.4735164642333984, -0.000200609109015204, -0.004398433957248926, -0.019352316856384277, -2.8045358657836914, -0.07515387237071991, -0.44111207127571106, -0.004297426901757717, -0.3070114552974701, -3.58813522325363e-05, -0.00021300431399140507, -0.00024101213784888387, -0.06284365803003311, -0.2964363992214203, -0.922508180141449, -0.1528857797384262, -0.005649788770824671, -0.0018126023933291435, -0.007114671170711517, -0.9521294832229614, -0.012010165490210056, -0.1619066596031189, -0.07356934994459152, -0.349204957485199, -2.4976160526275635, -9.059865078597795e-06, -0.4571280777454376, -0.12025021761655807, -0.008470914326608181, -0.005658560898154974, -0.0031026105862110853, -0.024806441739201546, -0.0027986904606223106, -8.4638240878121e-06, -0.02016870118677616, -0.016576187685132027, -0.7797638177871704, -0.0532098151743412, -0.058805715292692184, -0.8310935497283936, -0.25271838903427124, -0.1775788515806198, -0.0011613775277510285, -0.048692360520362854, -0.0012859179405495524, -0.004576565697789192, -0.12817277014255524, -0.14722779393196106, -0.000192504478036426, -0.0008254220010712743, -0.015129454433918, -0.9620264768600464, -0.03403886407613754, -1.8206349611282349, -0.7091495990753174, -0.012461184523999691, -0.23121435940265656, -0.005819757468998432, -0.00048565989709459245, -0.43718668818473816, -0.1587287187576294, -0.0007141662063077092, -0.6110312342643738, -1.1197068691253662, -0.06259667128324509, -0.2826361358165741, -0.3706136643886566, -1.511351227760315, -0.024804232642054558, -0.7352761030197144, -0.15998895466327667, -0.649749219417572, -0.0901215597987175, -0.0011705459328368306, -0.0001864259538706392, -0.054520126432180405, -7.748573807475623e-06, -0.007237170357257128, -0.01413700357079506, -0.38150832056999207, -0.07133649289608002, -0.020646067336201668, -1.7822185754776, -2.145764938177308e-06, -1.4305104514278355e-06, -1.3708974620385561e-05, -0.0001532914029667154, -0.09715375304222107], "finish_reason": "stop"}], "metrics": {"energy": 146.42635071182255, "energy_per_token": 1.3684705674002107, "time": 4.8450313, "time_per_token": 0.045280666355140185}}
{"outputs": [{"text": "return list()", "tokens": ["return", " list", "()", "\n", "\n", "def"], "logprobs": [-3.7449135780334473, -3.424232006072998, -0.73704594373703, -0.5269749164581299, -0.032139621675014496, -0.9774343967437744], "finish_reason": "stop"}], "metrics": {"energy": 5.787644348144531, "energy_per_token": 0.9646073913574219, "time": 0.23084395, "time_per_token": 0.038473991666666665}}
{"outputs": [{"text": "result_list = []\n    if df is None or len(df) == 0:\n        raise ValueError\n\n    numeric_columns = df.select_dtypes(include=[np.number, np.bool_])\n    for column_name, column in numeric_columns.items():\n        result_list.append(column.hist())\n\n    return result_list", "tokens": ["result", "_", "list", " =", " []", "\n", "    ", "if", " df", " is", " None", " or", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "\n", "\n", "    ", "numeric", "_", "columns", " =", " df", ".", "select", "_", "d", "types", "(", "include", "=[", "np", ".", "number", ",", " np", ".", "bool", "_", "])", "\n", "    ", "for", " column", "_", "name", ",", " column", " in", " numeric", "_", "columns", ".", "items", "():", "\n", "        ", "result", "_", "list", ".", "append", "(", "column", ".", "hist", "())", "\n", "\n", "    ", "return", " result", "_", "list", "\n", "\n", "def"], "logprobs": [-3.8104329109191895, -2.940800428390503, -0.6588641405105591, -0.05295930430293083, -0.08212735503911972, -0.01756739243865013, -0.20204585790634155, -1.205917477607727, -1.4670932292938232, -1.5242117643356323, -0.15379571914672852, -0.25629258155822754, -1.0466599464416504, -0.0005981324939057231, -0.011062716133892536, -0.28898856043815613, -0.18398398160934448, -0.0033864788711071014, -0.00012003655137959868, -0.2205256223678589, -0.019345885142683983, -0.0034950620029121637, -0.07717707008123398, -0.009985729120671749, -3.9934315282152966e-05, -2.697117805480957, -1.2818208932876587, -0.0007282227743417025, -1.7086620330810547, -0.024198999628424644, -0.745674729347229, -0.045689281076192856, -0.5681117177009583, -0.009636551141738892, -0.05187865346670151, -7.199982064776123e-05, -6.48477507638745e-05, -0.0001971527235582471, -0.05382395535707474, -0.1412721425294876, -0.9699189066886902, -0.277131050825119, -1.0728830375228426e-06, -0.02173578552901745, -1.9530450105667114, -0.42152753472328186, -0.0007850425899960101, -0.6009600758552551, -0.4669513404369354, -0.13917306065559387, -0.2505648732185364, -0.3822822868824005, -2.093146800994873, -0.7330642938613892, -1.4905766248703003, -0.023148423060774803, -0.3634711503982544, -0.21973800659179688, -0.4478381872177124, -0.06395222991704941, -5.602820692729438e-06, -1.3589766240329482e-05, -0.002012729411944747, -0.22130805253982544, -0.0003163314249832183, -0.004249709192663431, -0.018196318298578262, -2.0953145027160645, -0.17845234274864197, -0.02231663092970848, -0.007593812886625528, -0.002572205848991871, -0.007177757099270821, -0.7927479147911072, -0.005782068241387606, -0.517336368560791, -0.49932658672332764, -0.014310471713542938, -0.7957959771156311, -0.0037791754584759474, -0.020029548555612564, -0.006503606680780649, -0.00025650550378486514, -1.7165990357170813e-05, -0.3263346254825592, -0.019663522019982338, -1.1128928661346436], "finish_reason": "stop"}], "metrics": {"energy": 84.20730408668517, "energy_per_token": 0.9679000469733927, "time": 3.5803976, "time_per_token": 0.04115399540229885}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError('Input is not a non-empty DataFrame.')\n    if not df.empty:\n        axes = []\n        for col in df:\n            if df[col].dtype.kind in ['i', 'f']:\n                fig = plt.figure(figsize=(8, 3))\n                ax = fig.add_subplot(111)\n                ax.set_title(col)\n                ax.set_xlabel('Value')\n                ax.set_ylabel('Frequency')\n                ax.hist(df[col].values)\n                axes.append(ax)\n        return axes", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "('", "Input", " is", " not", " a", " non", "-", "empty", " Data", "Frame", ".", "')", "\n", "    ", "if", " not", " df", ".", "empty", ":", "\n", "        ", "axes", " =", " []", "\n", "        ", "for", " col", " in", " df", ":", "\n", "            ", "if", " df", "[", "col", "]", ".", "d", "type", ".", "kind", " in", " ['", "i", "'", ",", " '", "f", "']", ":", "\n", "                ", "fig", " =", " plt", ".", "figure", "(", "fig", "size", "=(", "8", ",", " ", "3", "))", "\n", "                ", "ax", " =", " fig", ".", "add", "_", "sub", "plot", "(", "1", "1", "1", ")", "\n", "                ", "ax", ".", "set", "_", "title", "(", "col", ")", "\n", "                ", "ax", ".", "set", "_", "xlabel", "('", "Value", "')", "\n", "                ", "ax", ".", "set", "_", "ylabel", "('", "F", "requency", "')", "\n", "                ", "ax", ".", "hist", "(", "df", "[", "col", "]", ".", "values", ")", "\n", "                ", "axes", ".", "append", "(", "ax", ")", "\n", "        ", "return", " axes", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.134972095489502, -0.26663315296173096, -0.10157729685306549, -0.0002908283786382526, -0.0012969900853931904, -0.0005785936955362558, -0.039269618690013885, -2.8371408916427754e-05, -0.25071361660957336, -0.5129403471946716, -0.008952951058745384, -0.0021385911386460066, -0.020371729508042336, -0.10643769800662994, -5.638440416078083e-05, -1.5050145387649536, -0.5245235562324524, -0.5787387490272522, -0.007319656666368246, -0.029683994129300117, -1.6559898853302002, -0.002121699508279562, -0.0003321811091154814, -0.03361165151000023, -0.0020325970835983753, -1.2293832302093506, -0.021445877850055695, -0.0019386084750294685, -0.5147215127944946, -0.5119259357452393, -1.1199342012405396, -0.43361592292785645, -0.009992929175496101, -0.5546438694000244, -0.026345614343881607, -0.018939722329378128, -0.017553921788930893, -3.10512113571167, -0.028423095121979713, -0.2083679884672165, -0.005081713665276766, -0.017634859308600426, -0.2716583013534546, -0.5436679124832153, -0.2474796622991562, -0.010261161252856255, -1.844050407409668, -0.004602197092026472, -0.0018767378060147166, -0.28342461585998535, -0.6200162768363953, -0.01303508598357439, -0.001401276676915586, -0.00032240914879366755, -8.821098163025454e-05, -0.16397064924240112, -0.17835190892219543, -0.6706170439720154, -0.4733068346977234, -0.1823364943265915, -2.15621280670166, -0.23555967211723328, -0.0009812070056796074, -0.0001380348257953301, -0.03635750710964203, -0.5306182503700256, -0.3296967148780823, -0.011588048189878464, -0.024372126907110214, -0.001809746609069407, -2.7926621437072754, -1.5740337371826172, -0.05932992696762085, -0.0001991788885788992, -0.024353744462132454, -0.9602265954017639, -0.23470480740070343, -0.00043704494601115584, -0.024027355015277863, -1.2594022750854492, -0.0033573710825294256, -0.17077936232089996, -3.53641414642334, -0.24201121926307678, -0.012535824440419674, -0.004468100145459175, -0.5158596038818359, -0.0971635952591896, -0.061627719551324844, -8.487341256113723e-05, -0.046068333089351654, -3.3378546504536644e-06, -0.03458278253674507, -9.48860906646587e-05, -0.13691790401935577, -0.008515594527125359, -0.5111048817634583, -0.00023457636416424066, -0.007617237512022257, -0.0009732277248986065, -0.004750632215291262, -0.6483864188194275, -0.008205748163163662, -0.9646086692810059, -0.03393665701150894, -0.2162151038646698, -0.06337404251098633, -0.24703429639339447, -0.19897887110710144, -0.0028307863976806402, -0.001508409040980041, -0.1560022532939911, -0.0031234072521328926, -0.04280473664402962, -0.006528833415359259, -0.07176431268453598, -0.04597657173871994, -0.0524832084774971, -0.011538555845618248, -0.0012729407753795385, -0.0001287377526750788, -0.002569114323705435, -0.0006338732782751322, -0.0020147517789155245, -2.7179348762729205e-05, -0.0008504349971190095, -0.001312586129643023, -0.004785038530826569, -0.00597002636641264, -0.002746383659541607, -0.0002936885575763881, -0.015076144598424435, -0.5399841070175171, -0.019988300278782845, -0.1874130517244339, -0.0032921424135565758, -0.0052352952770888805, -0.009930492378771305, -0.0002411313180346042, -0.7395288348197937, -2.076429843902588, -0.10835564136505127, -0.9379177689552307, -0.0035590894985944033, -0.006407313514500856, -0.19662867486476898, -0.004407453816384077, -0.001729184528812766, -0.0002479245886206627, -0.00287239090539515, -0.00043394684325903654, -0.00145948666613549, -0.33971598744392395, -0.03162232041358948, -0.004354163073003292, -2.9322562217712402, -3.099436753473128e-06, -1.1920922133867862e-06, -6.318072337307967e-06, -0.00018892886873800308, -0.08438053727149963], "finish_reason": "stop"}], "metrics": {"energy": 200.80603753471377, "energy_per_token": 1.2472424691597128, "time": 7.5744963, "time_per_token": 0.04704656086956522}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError('Input should be a non-empty DataFrame.')\n    if len(df) == 0:\n        raise ValueError('Input should be a non-empty DataFrame.')\n    if not df.columns.isin(df.select_dtypes(np.number).columns).all():\n        raise ValueError('There are no numeric columns in the input DataFrame.')\n    axes = []\n    for col in df.select_dtypes(np.number).columns:\n        axes.append(plt.hist(df[col], histtype='step', color='blue', label=f'Value'))\n    return axes", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "('", "Input", " should", " be", " a", " non", "-", "empty", " Data", "Frame", ".", "')", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "('", "Input", " should", " be", " a", " non", "-", "empty", " Data", "Frame", ".", "')", "\n", "    ", "if", " not", " df", ".", "columns", ".", "isin", "(", "df", ".", "select", "_", "d", "types", "(", "np", ".", "number", ")", ".", "columns", ")", ".", "all", "():", "\n", "        ", "raise", " Value", "Error", "('", "There", " are", " no", " numeric", " columns", " in", " the", " input", " Data", "Frame", ".", "')", "\n", "    ", "axes", " =", " []", "\n", "    ", "for", " col", " in", " df", ".", "select", "_", "d", "types", "(", "np", ".", "number", ")", ".", "columns", ":", "\n", "        ", "axes", ".", "append", "(", "plt", ".", "hist", "(", "df", "[", "col", "]", ",", " hist", "type", "='", "step", "'", ",", " color", "='", "blue", "'", ",", " label", "=", "f", "'", "Value", "'))", "\n", "    ", "return", " axes"], "logprobs": [-1.134972095489502, -0.26663315296173096, -0.10157729685306549, -0.0002908283786382526, -0.0012969900853931904, -0.0005785936955362558, -0.039269618690013885, -2.8371408916427754e-05, -0.25071361660957336, -0.5129403471946716, -0.008952951058745384, -0.0021385911386460066, -0.020371729508042336, -0.10643769800662994, -5.638440416078083e-05, -1.5050145387649536, -0.5245235562324524, -2.121201992034912, -0.0031652371399104595, -0.14976562559604645, -1.9934747219085693, -0.008105953224003315, -0.0008017186191864312, -0.1337723582983017, -0.004343599546700716, -0.9221513271331787, -0.014606684446334839, -0.0018265245016664267, -0.5118117928504944, -0.4151810109615326, -0.995286226272583, -0.00039402826223522425, -0.0058828070759773254, -0.5856925845146179, -0.09521136432886124, -0.0009059377480298281, -0.0002760506176855415, -0.0259148720651865, -0.014698315411806107, -0.000692842761054635, -0.039101000875234604, -0.0006092122639529407, -1.2397689715726301e-05, -0.005189401097595692, -0.0691734030842781, -0.01918591931462288, -0.005786216352134943, -0.0017614339012652636, -0.0008536509121768177, -0.00017128908075392246, -0.00012635385792236775, -0.00029047083808109164, -0.00038699767901562154, -0.00669794250279665, -0.0002951186615973711, -0.001426989445462823, -0.2619323134422302, -1.6945523023605347, -0.5260113477706909, -0.8939037919044495, -0.008357550948858261, -1.2597955465316772, -0.021744417026638985, -3.098818302154541, -0.4383714199066162, -0.20280860364437103, -0.03888660669326782, -0.604161262512207, -3.099436753473128e-06, -0.00014828535495325923, -0.0006053998949937522, -0.07221047580242157, -1.660901665687561, -0.0005453529884107411, -0.0019337303237989545, -0.0742364227771759, -0.0032789534889161587, -0.0027611248660832644, -0.04624295234680176, -0.000302030734019354, -0.5452641248703003, -0.007943586446344852, -0.010288417339324951, -0.0009298768127337098, -0.008650568313896656, -0.0014428215799853206, -1.966933996300213e-05, -0.061768487095832825, -1.5712507963180542, -0.5089625716209412, -0.029163917526602745, -0.021739402785897255, -0.008217571303248405, -0.06929153203964233, -0.04965565726161003, -2.6669137477874756, -0.2208213359117508, -0.00100192881654948, -0.016593657433986664, -0.0034961311612278223, -0.0008933129138313234, -0.4829886257648468, -1.098028540611267, -0.02722928300499916, -0.11250442266464233, -0.0041937981732189655, -0.020307017490267754, -0.0692305788397789, -0.5592910647392273, -0.1167399138212204, -0.005852349568158388, -0.06404615193605423, -0.1897916942834854, -1.07287787614041e-05, -9.822363062994555e-05, -0.00018439977429807186, -0.0013635394861921668, -0.009867697954177856, -0.0003149013500660658, -0.0003047717036679387, -0.1845049113035202, -0.00018499570433050394, -0.0023877699859440327, -0.007486265618354082, -0.0038454411551356316, -0.001932421582750976, -1.3379430770874023, -0.008435452356934547, -0.0028933114372193813, -0.003872872330248356, -1.4157054424285889, -0.00045134371612221, -0.3014663755893707, -0.01494591124355793, -0.02947624959051609, -0.009545636363327503, -0.00038485272671096027, -0.2208423614501953, -0.037691451609134674, -3.109130620956421, -0.034394484013319016, -0.05389534309506416, -0.06673367321491241, -0.800435483455658, -3.6000557884108275e-05, -1.9067237377166748, -0.06766126304864883, -1.5720635652542114, -0.358325332403183, -0.0003644755925051868, -0.7012283205986023, -0.356595516204834, -2.193725824356079, -0.5107958316802979, -0.45511165261268616, -1.4708586931228638, -0.007924545556306839, -0.45467445254325867, -0.9535369277000427, -0.014768676832318306], "finish_reason": "stop"}], "metrics": {"energy": 168.31314898109437, "energy_per_token": 1.0519571811318398, "time": 6.9409776, "time_per_token": 0.04338111}}
{"outputs": [{"text": "try:\n        if df.empty or not df.info()['nulls']:\n            raise ValueError(\"Invalid data.\")\n        df = df.loc[:, df.info()['columns'].map(pd.to_numeric)]\n        axes = []\n        for col in df.columns:\n            axes.append(\n                df[col].plot.hist(\n                    grid=True,\n                    bins=40,\n                    title=col,\n                    xlabel=\"Value\",\n                    ylabel=\"Frequency\"))\n        return axes\n    except (ValueError, TypeError, AttributeError) as e:\n        raise ValueError(f\"Invalid data: {e}\")\n\ndf = pd.DataFrame({'A': np.random.normal(0, 1, 100), 'B': np.random.exponential(1, 100)})\naxes = task_func(df)\nfor ax in axes:\n    plt.show()", "tokens": ["try", ":", "\n", "        ", "if", " df", ".", "empty", " or", " not", " df", ".", "info", "()", "['", "null", "s", "']", ":", "\n", "            ", "raise", " Value", "Error", "(", "\"", "Invalid", " data", ".", "\"", ")", "\n", "        ", "df", " =", " df", ".", "loc", "[:", ",", " df", ".", "info", "()", "['", "columns", "']", ".", "map", "(", "pd", ".", "to", "_", "numeric", ")]", "\n", "        ", "axes", " =", " []", "\n", "        ", "for", " col", " in", " df", ".", "columns", ":", "\n", "            ", "axes", ".", "append", "(", "\n", "                ", "df", "[", "col", "]", ".", "plot", ".", "hist", "(", "\n", "                ", "    ", "grid", "=", "True", ",", "\n", "                ", "    ", "bins", "=", "4", "0", ",", "\n", "                ", "    ", "title", "=", "col", ",", "\n", "                ", "    ", "xlabel", "=", "\"", "Value", "\"", ",", "\n", "                ", "    ", "ylabel", "=", "\"", "F", "requency", "\"", "))", "\n", "        ", "return", " axes", "\n", "    ", "except", " (", "Value", "Error", ",", " Type", "Error", ",", " Attribute", "Error", ")", " as", " e", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Invalid", " data", ":", " {", "e", "}\"", ")", "\n", "\n", "df", " =", " pd", ".", "DataFrame", "({", "'", "A", "':", " np", ".", "random", ".", "normal", "(", "0", ",", " ", "1", ",", " ", "1", "0", "0", ")", ",", " '", "B", "':", " np", ".", "random", ".", "exp", "onential", "(", "1", ",", " ", "1", "0", "0", ")})", "\n", "axes", " =", " task", "_", "func", "(", "df", ")", "\n", "for", " ax", " in", " axes", ":", "\n", "    ", "plt", ".", "show", "()"], "logprobs": [-2.9580655097961426, -0.0011443501571193337, -0.00868330430239439, -0.010925001464784145, -0.8242261409759521, -1.2670915126800537, -0.0728345587849617, -0.04223967343568802, -1.198939561843872, -0.8711351752281189, -0.20881591737270355, -0.002589208772405982, -2.9990851879119873, -0.570537269115448, -0.9850192666053772, -1.487922191619873, -1.4017192125320435, -0.12727899849414825, -0.8207290768623352, -0.05578768625855446, -0.0030758711509406567, -0.06795634329319, -0.018605943769216537, -5.209310256759636e-05, -0.5799102783203125, -0.0701659619808197, -3.3085598945617676, -2.041166067123413, -1.7746442556381226, -0.7252566814422607, -0.0003625689132604748, -0.006755726411938667, -0.719759464263916, -2.2844760417938232, -0.7901551127433777, -0.054610542953014374, -0.16822737455368042, -2.6989636421203613, -0.3676413893699646, -0.004974014591425657, -0.540152907371521, -0.005548315588384867, -1.5191044807434082, -0.14413273334503174, -0.007821764796972275, -0.4221400022506714, -0.0699346736073494, -0.4790898561477661, -2.5062499046325684, -0.02384764887392521, -1.1906039714813232, -0.00013302871957421303, -1.6014174222946167, -1.4305104514278355e-06, -0.0005062728887423873, -0.36695051193237305, -0.07298938184976578, -0.19507627189159393, -1.5722887516021729, -0.0222521610558033, -0.41986724734306335, -0.002451749751344323, -0.028211381286382675, -0.07523967325687408, -0.5852544903755188, -0.18338488042354584, -0.028448933735489845, -0.4785909354686737, -0.08416752517223358, -0.01800970733165741, -0.0012271024752408266, -0.001602795091457665, -1.0513297319412231, -0.006490460131317377, -0.0028067738749086857, -0.005111838690936565, -2.8513870239257812, -0.010860619135200977, -0.7495096921920776, -0.12785056233406067, -0.01662285067141056, -0.001341634662821889, -0.020161692053079605, -0.3467063307762146, -0.46128666400909424, -0.0011597104603424668, -0.08460752665996552, -1.0878574848175049, -0.00023600654094479978, -0.025593753904104233, -2.6662344932556152, -0.06059735640883446, -0.0486685186624527, -0.002898422535508871, -0.2163371443748474, -0.00014375607133843005, -0.0005590544897131622, -0.5280286073684692, -0.06321223825216293, -3.6486363410949707, -0.060672976076602936, -0.03456435725092888, -0.010019483976066113, -0.0005184260080568492, -0.006251542363315821, -0.9842020273208618, -0.10653757303953171, -0.5776910185813904, -0.34096431732177734, -0.0034895974677056074, -0.0003778220561798662, -0.005082899704575539, -0.06428663432598114, -1.417047142982483, -0.09021709859371185, -0.06909286230802536, -0.0023977598175406456, -0.001141849672421813, -0.002011063741520047, -4.8993817472364753e-05, -0.0002791491860989481, -0.0011397063499316573, -0.02795545570552349, -0.0006117141456343234, -0.00549010606482625, -0.005906508769840002, -0.0008860476082190871, -2.798102378845215, -0.003411903278902173, -0.23838524520397186, -0.049854375422000885, -0.007509337738156319, -0.009141495451331139, -0.07187404483556747, -0.001050516264513135, -1.2718428373336792, -0.8060259819030762, -2.3007127310847864e-05, -0.01750566065311432, -0.6310535669326782, -0.00014840454969089478, -1.0265371799468994, -0.4371819794178009, -1.3470558769768104e-05, -0.9968355298042297, -0.0010570659069344401, -0.24810734391212463, -0.00035661060246638954, -0.0027132148388773203, -0.0010962436208501458, -0.6123591065406799, -0.0971919372677803, -1.8358061424805783e-05, -0.031763218343257904, -0.589073657989502, -0.031217070296406746, -0.3636005222797394, -0.15577419102191925, -0.4380669891834259, -0.009246503002941608, -0.21721993386745453, -0.09974189102649689, -0.16252069175243378, -0.3168535828590393, -0.08841646462678909, -2.9612560272216797, -0.03295024856925011, -0.006739978212863207, -0.00010525626566959545, -0.04840437322854996, -0.20282281935214996, -0.3028562366962433, -0.06436678767204285, -0.0010831448016688228, -0.06213679164648056, -9.16677454370074e-05, -0.004361165687441826, -6.318072337307967e-06, -0.023900261148810387, -0.0008354272576980293, -0.00241964147426188, -0.0015095992712303996, -0.0006870055221952498, -0.002533442573621869, -0.0019613332115113735, -0.0007488307310268283, -0.005783372092992067, -0.0011554239317774773, -0.004961678292602301, -0.0145051758736372, -0.000651147507596761, -0.07303127646446228, -0.0003780603874474764, -6.675497570540756e-05, -0.0018129594391211867, -5.876845170860179e-05, -0.0007702721050009131, -1.9192511899746023e-05, -0.006161029916256666, -2.861018856492592e-06, -4.911301948595792e-05, -0.0011716175358742476, -0.0011263700434938073, -0.00030250742565840483, -0.0002796259068418294, -0.00010489867418073118, -0.0001668790791882202, -0.015152585692703724, -0.006641576066613197, -0.3833773136138916, -0.006189700681716204, -0.0021098037250339985, -2.264974000354414e-06, -4.303362584323622e-05, -0.0002848696312867105, -0.0007052318542264402, -0.06992822885513306, -0.027324635535478592, -0.10513737797737122, -0.011569430120289326, -0.0008431693422608078, -0.00048673225683160126, -0.0012897277483716607, -0.005543929059058428, -0.007858077064156532, -0.05095375329256058, -1.490105023549404e-05, -0.003888428211212158, -0.0027659989427775145], "finish_reason": "stop"}], "metrics": {"energy": 269.353097568512, "energy_per_token": 1.1762143998624979, "time": 10.08304, "time_per_token": 0.044030742358078606}}
{"outputs": [{"text": "axes = []\n    for col in df:\n        if df[col].dtype == np.number:\n            axes.append(df[col].plot.hist(bins=20, figsize=(10, 4)))\n    return axes", "tokens": ["axes", " =", " []", "\n", "    ", "for", " col", " in", " df", ":", "\n", "        ", "if", " df", "[", "col", "]", ".", "d", "type", " ==", " np", ".", "number", ":", "\n", "            ", "axes", ".", "append", "(", "df", "[", "col", "]", ".", "plot", ".", "hist", "(", "bins", "=", "2", "0", ",", " fig", "size", "=(", "1", "0", ",", " ", "4", ")))", "\n", "    ", "return", " axes", "\n", "\n", "if"], "logprobs": [-2.4145569801330566, -0.04194604977965355, -0.04051898419857025, -0.014722278341650963, -0.28751516342163086, -1.5894361734390259, -0.6757979989051819, -0.28789710998535156, -0.011298365890979767, -1.9002617597579956, -0.009519540704786777, -0.007592984475195408, -0.2627878785133362, -0.8400261998176575, -0.03142595291137695, -0.0024183334317058325, -0.0005810956354252994, -0.0004144048143643886, -0.15015491843223572, -0.16606593132019043, -0.9691963791847229, -0.8379319906234741, -0.002111707115545869, -0.810624361038208, -0.12934944033622742, -0.04434088245034218, -0.00412411242723465, -1.3395912647247314, -0.006081646773964167, -0.0032393860165029764, -0.00502834003418684, -0.5090218186378479, -0.017621273174881935, -0.0008929556352086365, -0.0017302555497735739, -0.0005025792634114623, -0.5398361682891846, -0.16944701969623566, -0.000446696620201692, -0.8023365139961243, -1.068799376487732, -0.07896796613931656, -1.2363507747650146, -0.1845681518316269, -0.8993845582008362, -2.4053955078125, -0.0007295330869965255, -0.025329139083623886, -0.40499347448349, -0.6525346040725708, -0.001328658196143806, -0.12228809297084808, -1.9153739213943481, -0.5212618112564087, -0.010200511664152145, -0.5229514837265015, -0.058501847088336945, -0.0036326153203845024, -0.4005618691444397, -0.029627520591020584, -1.1355912685394287], "finish_reason": "stop"}], "metrics": {"energy": 45.84948122596741, "energy_per_token": 0.7516308397699575, "time": 2.330168, "time_per_token": 0.038199475409836064}}
{"outputs": [{"text": "axes = []\n    if df.empty:\n        raise ValueError('Input is empty.')\n    if not df.select_dtypes(include=np.number).empty:\n        for col in df.select_dtypes(include=np.number).columns:\n            ax = df[col].hist()\n            axes.append(ax)\n    else:\n        raise ValueError('DataFrame contains no numerical columns.')\n    return axes", "tokens": ["axes", " =", " []", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "('", "Input", " is", " empty", ".", "')", "\n", "    ", "if", " not", " df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "empty", ":", "\n", "        ", "for", " col", " in", " df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "columns", ":", "\n", "            ", "ax", " =", " df", "[", "col", "]", ".", "hist", "()", "\n", "            ", "axes", ".", "append", "(", "ax", ")", "\n", "    ", "else", ":", "\n", "        ", "raise", " Value", "Error", "('", "DataFrame", " contains", " no", " numerical", " columns", ".", "')", "\n", "    ", "return", " axes", "\n", "\n", "def"], "logprobs": [-2.4145569801330566, -0.04194604977965355, -0.04051898419857025, -0.014722278341650963, -0.28751516342163086, -1.0584379434585571, -1.3619682788848877, -0.18095791339874268, -0.040898170322179794, -0.3057527542114258, -0.02890348806977272, -0.0028750060591846704, -0.044943053275346756, -0.004361758939921856, -5.471556869451888e-05, -1.227614402770996, -0.8522588610649109, -0.17498713731765747, -0.6015075445175171, -1.2917989492416382, -0.04109268635511398, -0.002554964739829302, -0.25683656334877014, -1.6806954145431519, -0.858233630657196, -0.39383161067962646, -0.006993695627897978, -1.5477324724197388, -9.727005090098828e-05, -0.0001677133986959234, -0.00047708096099086106, -0.16322912275791168, -0.0678509771823883, -0.7770229578018188, -0.06283257156610489, -0.0013388964580371976, -0.003556119976565242, -0.0029597545508295298, -0.000243634101934731, -0.14548373222351074, -0.00127948890440166, -0.020038777962327003, -0.009596762247383595, -0.3963429033756256, -0.5657584071159363, -0.17598246037960052, -0.013662516139447689, -0.12813764810562134, -0.3556177318096161, -1.3232143828645349e-05, -0.0003471963864285499, -0.00018904806347563863, -0.0018484188476577401, -0.0009507188224233687, -0.013399899937212467, -0.00017414960893802345, -0.0005498804384842515, -0.00021252757869660854, -1.3197288513183594, -0.000945121340919286, -0.01920030266046524, -0.016029421240091324, -0.0033388365991413593, -0.0027612438425421715, -1.6010193824768066, -0.027892159298062325, -0.16255442798137665, -0.07522563636302948, -0.0008195855189114809, -0.00025042734341695905, -0.0006025406182743609, -0.9545283913612366, -1.0222105979919434, -0.01753506250679493, -0.016743488609790802, -0.9143333435058594, -0.0016193384071812034, -0.0012210302520543337, -0.00044979469384998083, -0.0030896568205207586, -0.021307719871401787, -0.005786572117358446, -0.4356482923030853, -0.24267403781414032, -0.00018869050836656243, -0.004835577681660652, -0.0010249129263684154, -0.032506417483091354, -0.006857906002551317, -9.894321920000948e-06, -0.07856062799692154, -1.8642429113388062, -1.9167439937591553, -0.02644372172653675, -2.837311029434204, -0.23242074251174927, -0.05200212821364403, -0.0017353727016597986, -0.007914019748568535, -0.07182345539331436, -0.008759644813835621, -0.003786182263866067, -0.5541833639144897, -0.027839411050081253, -1.3334813117980957], "finish_reason": "stop"}], "metrics": {"energy": 115.5191400108338, "energy_per_token": 1.1001822858174648, "time": 4.628128, "time_per_token": 0.04407740952380953}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise TypeError(\"Input must be a DataFrame\")\n    if df.empty:\n        raise ValueError(\"Input DataFrame is empty\")\n    try:\n        numeric_cols = df.select_dtypes(include=['number', 'int', 'float']).columns\n    except AttributeError:\n        numeric_cols = df.select_dtypes(include=['number', 'int', 'float'])\n    if not numeric_cols.any():\n        raise ValueError(\"DataFrame has no numeric columns\")\n    axes = []\n    for col in numeric_cols:\n        df[col].plot(kind='hist', title=col, xlabel='Value', ylabel='Frequency')\n        axes.append(df[col].plot(kind='hist', title=col, xlabel='Value', ylabel='Frequency'))\n    return axes", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " must", " be", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", "\"", ")", "\n", "    ", "try", ":", "\n", "        ", "numeric", "_", "cols", " =", " df", ".", "select", "_", "d", "types", "(", "include", "=['", "number", "'", ",", " '", "int", "'", ",", " '", "float", "'])", ".", "columns", "\n", "    ", "except", " Attribute", "Error", ":", "\n", "        ", "numeric", "_", "cols", " =", " df", ".", "select", "_", "d", "types", "(", "include", "=['", "number", "'", ",", " '", "int", "'", ",", " '", "float", "'])", "\n", "    ", "if", " not", " numeric", "_", "cols", ".", "any", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "DataFrame", " has", " no", " numeric", " columns", "\"", ")", "\n", "    ", "axes", " =", " []", "\n", "    ", "for", " col", " in", " numeric", "_", "cols", ":", "\n", "        ", "df", "[", "col", "]", ".", "plot", "(", "kind", "='", "hist", "'", ",", " title", "=", "col", ",", " x", "label", "='", "Value", "'", ",", " y", "label", "='", "F", "requency", "')", "\n", "        ", "axes", ".", "append", "(", "df", "[", "col", "]", ".", "plot", "(", "kind", "='", "hist", "'", ",", " title", "=", "col", ",", " x", "label", "='", "Value", "'", ",", " y", "label", "='", "F", "requency", "'))", "\n", "    ", "return", " axes", "\n", "\n", "if"], "logprobs": [-1.134972095489502, -0.26663315296173096, -0.10157729685306549, -0.0002908283786382526, -0.0012969900853931904, -0.0005785936955362558, -0.039269618690013885, -2.8371408916427754e-05, -0.25071361660957336, -0.5129403471946716, -0.008952951058745384, -0.0021385911386460066, -0.020371729508042336, -2.329988479614258, -8.821448318485636e-06, -0.2733006179332733, -0.16823522746562958, -0.45240557193756104, -0.9131768941879272, -0.0007159530650824308, -0.07001148164272308, -0.6513121128082275, -0.005783016327768564, -0.6317262649536133, -0.0002516191452741623, -0.002965697320178151, -0.2547289729118347, -0.27838945388793945, -0.9512796401977539, -0.004125537350773811, -0.02651279792189598, -0.0348462276160717, -0.00546271912753582, -0.000448841426987201, -0.025113744661211967, -0.015500313602387905, -2.3245540432981215e-05, -0.006732873618602753, -0.0013404440833255649, -0.24112728238105774, -0.6073148250579834, -0.0029170839115977287, -1.4489612579345703, -0.001609936123713851, -0.03769340366125107, -0.00015817821258679032, -0.0017437029164284468, -0.356116384267807, -4.120555877685547, -0.0010405131615698338, -0.008525995537638664, -0.006757976021617651, -1.5944626331329346, -0.01699749380350113, -0.3382232189178467, -0.007684195414185524, -0.710975170135498, -0.009706679731607437, -0.04025336727499962, -2.8013790142722428e-05, -7.450303382938728e-05, -0.00024053541710600257, -0.056334443390369415, -0.13289600610733032, -1.0425673723220825, -0.6433799862861633, -2.424922227859497, -0.0002723561483435333, -0.04276156425476074, -1.79686439037323, -0.21087858080863953, -0.0003051292151212692, -0.00252832961268723, -0.06478999555110931, -0.1250630021095276, -0.7564718127250671, -0.0034669076558202505, -0.25881364941596985, -0.5041427612304688, -0.00019560330838430673, -1.1547975540161133, -1.490105023549404e-05, -0.14758259057998657, -0.057262152433395386, -0.0007121411035768688, -2.3946080207824707, -9.214453893946484e-05, -0.00038675934774801135, -0.002587663009762764, -0.6802476048469543, -0.010700115002691746, -0.23337696492671967, -0.00030310326837934554, -0.0009183242218568921, -0.00565109308809042, -0.09660516679286957, -0.007820936851203442, -0.17208001017570496, -0.02631821297109127, -0.28382623195648193, -0.0017273995326831937, -0.0031125929672271013, -0.005145758390426636, -0.009059632197022438, -0.0005578630371019244, -0.0008885487914085388, -0.0013491347199305892, -0.013218274340033531, -1.366895079612732, -0.17246262729167938, -0.35157424211502075, -0.772828221321106, -0.10376057773828506, -6.437280717364047e-06, -1.6569954823353328e-05, -1.4779996871948242, -0.3292079269886017, -0.004083866253495216, -0.00414251396432519, -0.0004773192631546408, -0.007413259241729975, -0.023631470277905464, -1.597391747054644e-05, -0.021852191537618637, -0.01759304478764534, -1.2796214818954468, -0.516173243522644, -0.001602675998583436, -0.06793751567602158, -0.04347894713282585, -0.01792786456644535, -0.0005519058904610574, -0.0024503227323293686, -0.20003767311573029, -0.7281336188316345, -0.025706691667437553, -0.11583564430475235, -0.0031272100750356913, -0.006794089451432228, -0.04336525872349739, -0.16177798807621002, -0.03979317471385002, -0.054969530552625656, -5.245195097813848e-06, -3.099436753473128e-06, -0.006214343011379242, -0.0009420248097740114, -0.0010445620864629745, -2.980543613433838, -0.9965571165084839, -0.005888969171792269, -0.001647425931878388, -0.00803807657212019, -0.7736856937408447, -0.8492377996444702, -0.020714960992336273, -0.11487635970115662, -0.0005557184922508895, -0.43591782450675964, -6.031808152329177e-05, -0.5062273740768433, -0.05850229784846306, -0.25425252318382263, -0.35944637656211853, -0.2487535923719406, -0.0028062984347343445, -0.02730526402592659, -0.028818128630518913, -0.004964524880051613, -5.507317473529838e-05, -0.002909239148721099, -0.00011586471373448148, -0.002095409668982029, -0.003296419745311141, -0.0051956865936517715, -0.3960226774215698, -0.004415880423039198, -0.0062871999107301235, -0.07924188673496246, -0.003260892815887928, -0.0017459639348089695, -0.0035571889020502567, -0.9161746501922607, -0.024402722716331482, -0.0002531684876885265, -0.24473540484905243, -0.00018690270371735096, -0.03456435725092888, -0.13723407685756683, -0.003563603386282921, -0.0014290130930021405, -0.00036173476837575436, -0.0724901333451271, -0.00035422726068645716, -0.011245676316320896, -0.008812464773654938, -0.005087288096547127, -0.022260673344135284, -0.0066816010512411594, -7.188061863416806e-05, -0.0004895919119007885, -0.001408419106155634, -0.000730247818864882, -9.179073458653875e-06, -0.001392705482430756, -2.9801878554280847e-05, -0.00031275625224225223, -0.000590865034610033, -0.0005845506675541401, -0.03448743000626564, -0.007150889839977026, -0.059364303946495056, -0.021136978641152382, -0.007293384987860918, -0.48509910702705383, -0.05060986801981926, -1.2377833127975464], "finish_reason": "stop"}], "metrics": {"energy": 262.68662614631637, "energy_per_token": 1.2105374476788773, "time": 9.470104, "time_per_token": 0.04364103225806451}}
{"outputs": [{"text": "axes = []\n    numeric_cols = df.select_dtypes(include=[np.number]).columns\n    for col in numeric_cols:\n        ax = plt.hist(df[col], label=col)\n        axes.append(ax)\n    return axes", "tokens": ["axes", " =", " []", "\n", "    ", "numeric", "_", "cols", " =", " df", ".", "select", "_", "d", "types", "(", "include", "=[", "np", ".", "number", "])", ".", "columns", "\n", "    ", "for", " col", " in", " numeric", "_", "cols", ":", "\n", "        ", "ax", " =", " plt", ".", "hist", "(", "df", "[", "col", "]", ",", " label", "=", "col", ")", "\n", "        ", "axes", ".", "append", "(", "ax", ")", "\n", "    ", "return", " axes", "\n", "\n", "#"], "logprobs": [-2.4145569801330566, -0.04194604977965355, -0.04051898419857025, -0.014722278341650963, -0.28751516342163086, -2.6789441108703613, -0.019204044714570045, -0.6284779906272888, -0.008893284946680069, -0.28714561462402344, -0.014893648214638233, -0.04062223806977272, -2.3007127310847864e-05, -5.376194530981593e-05, -0.0002549561613705009, -0.05199194326996803, -0.1273755580186844, -1.1378633975982666, -0.23433999717235565, -3.6954811548639555e-06, -0.012372998520731926, -0.08158881217241287, -0.9513181447982788, -0.004167681559920311, -0.2991149425506592, -0.1520342081785202, -1.7641916275024414, -0.12080732733011246, -0.04465090483427048, -0.016738448292016983, -8.344646857949556e-07, -3.099436753473128e-06, -0.001117201172746718, -0.001214600750245154, -0.0027563695330172777, -0.9408460855484009, -0.023172417655587196, -2.439678192138672, -0.0003194298769813031, -1.5604171752929688, -0.019538093358278275, -0.024512073025107384, -0.009132872335612774, -0.00011896379146492109, -0.3630812168121338, -0.039139632135629654, -2.131669759750366, -0.04109428822994232, -0.10973948240280151, -0.29324495792388916, -0.00820113718509674, -0.006247514393180609, -0.3210401237010956, -0.0013002045452594757, -0.0013987767742946744, -0.0002557904226705432, -0.0036651596892625093, -0.41342324018478394, -0.003601732663810253, -0.1530347317457199, -0.1678544133901596, -0.005724109243601561, -0.4062090218067169, -0.022521555423736572, -1.8940187692642212], "finish_reason": "stop"}], "metrics": {"energy": 67.7632421092987, "energy_per_token": 1.0425114170661338, "time": 2.7439525, "time_per_token": 0.042214653846153846}}
{"outputs": [{"text": "# Check input is non-empty\n    if not isinstance(df, pd.DataFrame) or len(df) == 0:\n        raise ValueError('Input is not a non-empty DataFrame')\n\n    # Create empty list to hold axes\n    axes = []\n\n    # Check for non-numeric columns\n    numeric_columns = []\n    for column in df.columns:\n        try:\n            pd.to_numeric(df[column])\n            numeric_columns.append(column)\n        except:\n            continue\n\n    # Draw histograms for each numeric column\n    if len(numeric_columns) > 0:\n        for col in numeric_columns:\n            ax = df[col].hist(bins=10, figsize=(10, 5))\n            axes.append(ax)\n\n    return axes", "tokens": ["#", " Check", " input", " is", " non", "-", "empty", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "('", "Input", " is", " not", " a", " non", "-", "empty", " Data", "Frame", "')", "\n", "\n", "    ", "#", " Create", " empty", " list", " to", " hold", " axes", "\n", "    ", "axes", " =", " []", "\n", "\n", "    ", "#", " Check", " for", " non", "-", "numeric", " columns", "\n", "    ", "numeric", "_", "columns", " =", " []", "\n", "    ", "for", " column", " in", " df", ".", "columns", ":", "\n", "        ", "try", ":", "\n", "            ", "pd", ".", "to", "_", "numeric", "(", "df", "[", "column", "])", "\n", "            ", "numeric", "_", "columns", ".", "append", "(", "column", ")", "\n", "        ", "except", ":", "\n", "            ", "continue", "\n", "\n", "    ", "#", " Draw", " histogram", "s", " for", " each", " numeric", " column", "\n", "    ", "if", " len", "(", "numeric", "_", "columns", ")", " >", " ", "0", ":", "\n", "        ", "for", " col", " in", " numeric", "_", "columns", ":", "\n", "            ", "ax", " =", " df", "[", "col", "]", ".", "hist", "(", "bins", "=", "1", "0", ",", " fig", "size", "=(", "1", "0", ",", " ", "5", "))", "\n", "            ", "axes", ".", "append", "(", "ax", ")", "\n", "\n", "    ", "return", " axes", "\n", "\n", "#"], "logprobs": [-1.7058968544006348, -0.8518466353416443, -1.822265863418579, -2.3668088912963867, -2.7980220317840576, -0.013028967194259167, -0.002266340423375368, -2.2833597660064697, -0.0022696706000715494, -0.027285777032375336, -0.5257267355918884, -0.3837030529975891, -0.0002559096028562635, -0.0009548871894367039, -0.0008961713756434619, -0.028981078416109085, -2.753696753643453e-05, -0.19170115888118744, -0.3673516511917114, -0.007810764946043491, -0.9065740704536438, -9.798523387871683e-05, -0.003819077741354704, -0.40758636593818665, -0.1198200210928917, -0.0004326361231505871, -5.030505417380482e-05, -0.01805056817829609, -0.0021506056655198336, -0.0014840076910331845, -0.008610621094703674, -0.008120851591229439, -2.634490556374658e-05, -1.3925960063934326, -0.30499979853630066, -0.46222832798957825, -0.03355274721980095, -0.058735236525535583, -0.08832043409347534, -0.0015457835979759693, -0.00014768941036891192, -0.02890881523489952, -0.0012347224401310086, -0.4440891742706299, -0.0005297449533827603, -0.11919020116329193, -0.0009717986104078591, -0.07476732134819031, -3.0096275806427, -1.4878034591674805, -0.1466401219367981, -0.504879891872406, -2.307553768157959, -1.2632595300674438, -0.154083713889122, -0.00026639728457666934, -0.05290887877345085, -0.0580718033015728, -0.014822825789451599, -0.0006173135479912162, -0.03694026544690132, -0.00035684893373399973, -0.03863741084933281, -3.0160176753997803, -1.2782549858093262, -2.8924460411071777, -0.012374058365821838, -0.2953912019729614, -0.06333588808774948, -0.49131062626838684, -0.0005398723296821117, -1.6209568977355957, -0.013838065788149834, -1.0714808702468872, -0.003380419919267297, -1.92997145652771, -0.0036351096350699663, -0.015798285603523254, -0.07831595093011856, -0.7604763507843018, -0.26507440209388733, -0.0023511406034231186, -0.21926258504390717, -0.04024558141827583, -0.0027437680400907993, -0.0008723505889065564, -0.0009378563845530152, -2.366516590118408, -5.173549288883805e-05, -0.002179510658606887, -0.0003064401389565319, -2.3628413677215576, -0.0006248190766200423, -0.20221814513206482, -5.125986263010418e-06, -0.003385766176506877, -0.0016562328673899174, -0.013793622143566608, -0.0032923799008131027, -0.00017426878912374377, -0.26261791586875916, -0.03605088219046593, -0.08623098582029343, -0.003540796460583806, -7.271740287251305e-06, -0.0002598424907773733, -0.001039441442117095, -0.0002127659390680492, -0.0010493254521861672, -0.0028802361339330673, -7.760223525110632e-05, -0.00231879111379385, -0.0019095772877335548, -0.0004619484825525433, -1.0499801635742188, -0.006810310296714306, -0.0008562712464481592, -1.754497766494751, -0.007663848344236612, -0.0834275409579277, -0.000949885172303766, -0.4570775330066681, -1.8444018363952637, -0.0491490438580513, -0.11693941801786423, -0.46506476402282715, -1.5024139881134033, -0.252734512090683, -0.00586645258590579, -0.10127580910921097, -0.0004985281848348677, -0.8980286121368408, -0.0769210159778595, -4.649054244509898e-05, -0.0006204110686667264, -3.3378546504536644e-06, -1.6569954823353328e-05, -0.03607100248336792, -0.7360847592353821, -0.00021181246847845614, -0.0018830440239980817, -0.000491021724883467, -0.0019252828788012266, -0.0056412541307508945, -0.06022444739937782, -2.7960379123687744, -0.028377441689372063, -0.021067064255475998, -8.583032467868179e-06, -3.6954811548639555e-06, -0.0001722425949992612, -0.000623032043222338, -0.005184894893318415, -1.044507384300232, -0.014387206174433231, -0.18774716556072235, -0.056755777448415756, -0.0009565545478835702, -0.00018153927521780133, -0.00038914260221645236, -1.0873723030090332, -0.2692858874797821, -0.8732457160949707, -0.04549918696284294, -1.052824854850769, -0.09517049789428711, -0.8221462965011597, -0.9886582493782043, -0.0003844952443614602, -0.008971854113042355, -0.43958738446235657, -0.6658297777175903, -0.0011533997021615505, -0.1455398052930832, -0.3042025566101074, -0.2880299389362335, -0.03294309973716736, -0.013624063692986965, -0.48074033856391907, -0.0003793711948674172, -0.000645429186988622, -0.00015531764074694365, -0.0007664603181183338, -0.015620146878063679, -0.008480606600642204, -0.5627407431602478, -0.04455376788973808, -0.3625319004058838, -0.002166901947930455, -0.504237174987793, -0.016445444896817207, -1.3449386358261108], "finish_reason": "stop"}], "metrics": {"energy": 213.67220793247225, "energy_per_token": 1.1128760829816262, "time": 8.196784, "time_per_token": 0.04269158333333333}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input is not a DataFrame\")\n    elif df.empty:\n        raise ValueError(\"DataFrame is empty\")\n\n    numeric_cols = df.select_dtypes(include=[np.number])\n    if not numeric_cols:\n        raise ValueError(\"No numeric columns found\")\n\n    axes = []\n    for col in numeric_cols.columns:\n        ax = df[col].hist()\n        ax.set_title(col)\n        ax.set_xlabel(\"Value\")\n        ax.set_ylabel(\"Frequency\")\n        axes.append(ax)\n    return axes", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " is", " not", " a", " Data", "Frame", "\"", ")", "\n", "    ", "elif", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "DataFrame", " is", " empty", "\"", ")", "\n", "\n", "    ", "numeric", "_", "cols", " =", " df", ".", "select", "_", "d", "types", "(", "include", "=[", "np", ".", "number", "])", "\n", "    ", "if", " not", " numeric", "_", "cols", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " numeric", " columns", " found", "\"", ")", "\n", "\n", "    ", "axes", " =", " []", "\n", "    ", "for", " col", " in", " numeric", "_", "cols", ".", "columns", ":", "\n", "        ", "ax", " =", " df", "[", "col", "]", ".", "hist", "()", "\n", "        ", "ax", ".", "set", "_", "title", "(", "col", ")", "\n", "        ", "ax", ".", "set", "_", "xlabel", "(", "\"", "Value", "\"", ")", "\n", "        ", "ax", ".", "set", "_", "ylabel", "(", "\"", "F", "requency", "\"", ")", "\n", "        ", "axes", ".", "append", "(", "ax", ")", "\n", "    ", "return", " axes", "\n", "\n", "if"], "logprobs": [-1.134972095489502, -0.26663315296173096, -0.10157729685306549, -0.0002908283786382526, -0.0012969900853931904, -0.0005785936955362558, -0.039269618690013885, -2.8371408916427754e-05, -0.25071361660957336, -0.5129403471946716, -0.008952951058745384, -0.0021385911386460066, -0.020371729508042336, -0.10643769800662994, -5.638440416078083e-05, -0.2745705544948578, -0.15869444608688354, -0.29857146739959717, -0.6790264248847961, -0.005001058802008629, -0.02586073987185955, -0.4046529531478882, -0.0036918832920491695, -0.724211573600769, -0.00031835734262131155, -0.0025754161179065704, -0.49850577116012573, -1.9001163244247437, -0.9967038035392761, -0.007395036518573761, -0.03634210303425789, -0.03629060089588165, -0.007548381574451923, -0.0006566275842487812, -0.024979697540402412, -0.0009614374139346182, -3.40932747349143e-05, -0.003884628415107727, -0.0022549221757799387, -1.1665229797363281, -0.01929689384996891, -0.001046586548909545, -0.023082608357071877, -0.00016890530241653323, -0.0011623300379142165, -1.1683238744735718, -0.0009592937421984971, -1.472355842590332, -0.01009796466678381, -0.5270389914512634, -0.006995944771915674, -0.6793938279151917, -0.002416311763226986, -0.028002403676509857, -1.3232143828645349e-05, -4.446407547220588e-05, -0.00018702188390307128, -0.04630691558122635, -0.10544360429048538, -0.9596083164215088, -0.23814092576503754, -4.887569048150908e-06, -0.009593337774276733, -0.12258794903755188, -0.5986211895942688, -0.27973729372024536, -0.18138764798641205, -1.2515946626663208, -0.07661288231611252, -3.576278118089249e-07, -2.264974000354414e-06, -1.6912723779678345, -0.0037357083056122065, -0.0003292018664069474, -0.004820748697966337, -0.0005376085755415261, -4.529942543740617e-06, -0.007869194261729717, -0.009367206133902073, -1.6625683307647705, -0.009133935905992985, -0.00917433388531208, -0.6132650971412659, -0.8371115922927856, -0.0013400870375335217, -0.004127199295908213, -0.06479513645172119, -0.0005765683017671108, -0.4572390913963318, -0.0236939899623394, -0.07700114697217941, -0.0026934794150292873, -0.0702294185757637, -0.018209312111139297, -0.11250463873147964, -0.15868894755840302, -0.019678600132465363, -2.622600959512056e-06, -2.622600959512056e-06, -1.2409685850143433, -0.011336790397763252, -0.03450343757867813, -0.0012673450401052833, -0.0013542537344619632, -0.8917140960693359, -0.015884527936577797, -1.6069891452789307, -0.03883959352970123, -0.0018091516103595495, -0.0003175231395289302, -0.0010921949287876487, -1.3257535696029663, -1.0251836776733398, -0.015809902921319008, -0.004764988087117672, -0.1929260492324829, -0.0024246361572295427, -0.027087396010756493, -0.04529789462685585, -0.09323500096797943, -0.031127633526921272, -0.6077105402946472, -0.15493139624595642, -0.003991494886577129, -0.0021755853667855263, -0.047411564737558365, -0.0003081085451412946, -0.005171019118279219, -0.06478262692689896, -0.048136863857507706, -1.0533758401870728, -0.010835029184818268, -0.057514965534210205, -0.0010625437134876847, -0.007412667386233807, -0.006718190852552652, -0.0001668790791882202, -0.00039915222441777587, -0.0001429217227268964, -0.0004070168943144381, -3.93382906622719e-05, -0.00017307691450696439, -0.0024199981708079576, -0.00013493580627255142, -0.0020919598173350096, -0.0036847570445388556, -0.0007475204183720052, -0.0010450384579598904, -0.0037884386256337166, -0.012362166307866573, -0.07033053785562515, -0.0009388091857545078, -0.0003321811091154814, -8.093983342405409e-05, -0.0002687808300834149, -0.0006825978052802384, -0.002363390289247036, -1.2097467184066772, -0.009732415899634361, -0.0041733793914318085, -0.7618047595024109, -0.018020596355199814, -1.066571831703186], "finish_reason": "stop"}], "metrics": {"energy": 165.42067837142946, "energy_per_token": 1.0148507875547819, "time": 6.9504867, "time_per_token": 0.0426410226993865}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input is not a non-empty DataFrame\")\n    elif df.empty:\n        raise ValueError(\"Input is not a non-empty DataFrame\")\n    else:\n        columns = df.select_dtypes(np.number).columns\n        if len(columns) < 1:\n            raise ValueError(\"No numeric columns in DataFrame\")\n        else:\n            axes = []\n            for col in columns:\n                ax = plt.subplot()\n                plt.title(col)\n                df[col].plot.hist()\n                axes.append(ax)\n            return axes", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " is", " not", " a", " non", "-", "empty", " Data", "Frame", "\"", ")", "\n", "    ", "elif", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " is", " not", " a", " non", "-", "empty", " Data", "Frame", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "columns", " =", " df", ".", "select", "_", "d", "types", "(", "np", ".", "number", ")", ".", "columns", "\n", "        ", "if", " len", "(", "columns", ")", " <", " ", "1", ":", "\n", "            ", "raise", " Value", "Error", "(", "\"", "No", " numeric", " columns", " in", " Data", "Frame", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "axes", " =", " []", "\n", "            ", "for", " col", " in", " columns", ":", "\n", "                ", "ax", " =", " plt", ".", "sub", "plot", "()", "\n", "                ", "plt", ".", "title", "(", "col", ")", "\n", "                ", "df", "[", "col", "]", ".", "plot", ".", "hist", "()", "\n", "                ", "axes", ".", "append", "(", "ax", ")", "\n", "            ", "return", " axes", "\n", "\n", "def"], "logprobs": [-1.134972095489502, -0.26663315296173096, -0.10157729685306549, -0.0002908283786382526, -0.0012969900853931904, -0.0005785936955362558, -0.039269618690013885, -2.8371408916427754e-05, -0.25071361660957336, -0.5129403471946716, -0.008952951058745384, -0.0021385911386460066, -0.020371729508042336, -0.10643769800662994, -5.638440416078083e-05, -0.2745705544948578, -0.15869444608688354, -0.29857146739959717, -0.6790264248847961, -0.005001058802008629, -0.02586073987185955, -1.9591325521469116, -0.0018137923907488585, -0.00025054652360267937, -0.025172218680381775, -0.0019530047429725528, -0.6460350751876831, -0.00030727434204891324, -0.003992801066488028, -0.5925512313842773, -2.5115103721618652, -0.953876793384552, -0.01037124264985323, -0.0654798075556755, -0.04153649881482124, -0.0056761037558317184, -0.001019792165607214, -0.03530202805995941, -0.0014512732159346342, -2.729855441430118e-05, -0.0024785057175904512, -0.0016446886584162712, -0.3685826063156128, -0.09833138436079025, -0.6481375694274902, -0.003627151483669877, -0.002894618781283498, -0.00022230061586014926, -7.343022298300639e-05, -0.00047541281674057245, -0.00037520044133998454, -0.00447901850566268, -0.00015615197480656207, -0.0012029323261231184, -0.28105732798576355, -0.8793432116508484, -0.00014900050882715732, -0.002242433140054345, -0.015760384500026703, -2.3979856967926025, -0.13192202150821686, -0.4077690839767456, -0.002974611707031727, -0.35082146525382996, -6.079655122448457e-06, -9.131014667218551e-05, -0.00024053541710600257, -0.046693358570337296, -2.1403393745422363, -1.2278481335670222e-05, -0.001864363206550479, -0.007608009502291679, -0.5921828150749207, -0.006768277380615473, -0.20442292094230652, -0.04612582176923752, -0.2231399267911911, -0.34252113103866577, -0.00022516099852509797, -0.0015755394706502557, -0.004477594513446093, -2.2282357215881348, -0.0015907741617411375, -0.04031382501125336, -0.00212027202360332, -0.004127555526793003, -0.0028139064088463783, -0.011400789953768253, -0.0021527467761188745, -3.3378546504536644e-06, -0.008516067638993263, -0.014890947379171848, -1.2545100450515747, -0.024007687345147133, -0.036171264946460724, -0.6560319066047668, -1.968909502029419, -0.002209128811955452, -0.04990382120013237, -0.0011513754725456238, -0.004622369538992643, -0.1646977812051773, -0.31333068013191223, -0.00019095504831057042, -0.0008455515489913523, -0.013191098347306252, -0.7220417261123657, -0.03362260386347771, -0.12533541023731232, -0.0034066757652908564, -0.016083383932709694, -0.03510039672255516, -0.9572832584381104, -0.033200979232788086, -0.018367210403084755, -0.0015562577173113823, -0.0012269833823665977, -0.0021308590658009052, -1.4708383083343506, -0.03523079305887222, -1.7481173276901245, -0.0007644353318028152, -0.4095907509326935, -0.2531243860721588, -0.7047263979911804, -0.007777054328471422, -0.0026324877981096506, -1.7168829441070557, -2.0503786799963564e-05, -0.3940090537071228, -0.013194980099797249, -0.29390448331832886, -0.09916438907384872, -0.006353062577545643, -0.0011260127648711205, -1.992980718612671, -0.10953255742788315, -0.0020217709243297577, -0.0009603655780665576, -0.00040356122190132737, -0.3460018038749695, -0.6658520698547363, -0.00220282468944788, -0.5229084491729736, -0.006131647154688835, -0.007884570397436619, -0.6455721259117126, -0.005586250685155392, -0.0015930355293676257, -0.0004049911512993276, -0.005248576868325472, -0.001730612595565617, -0.00535280816257, -0.40489473938941956, -0.04327164962887764, -0.008620667271316051, -0.8278185725212097, -0.09112697094678879, -1.4676024913787842], "finish_reason": "stop"}], "metrics": {"energy": 163.06090653038015, "energy_per_token": 1.0255402926439003, "time": 6.7371492, "time_per_token": 0.04237200754716981}}
{"outputs": [{"text": "cols = df.select_dtypes(include=['number'])\n    if len(cols) == 0:\n        raise ValueError('Input is not a non-empty DataFrame or has no numeric columns')\n    return [plt.hist(df[col].values, bins=10) for col in cols]", "tokens": ["cols", " =", " df", ".", "select", "_", "d", "types", "(", "include", "=['", "number", "'])", "\n", "    ", "if", " len", "(", "cols", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "('", "Input", " is", " not", " a", " non", "-", "empty", " Data", "Frame", " or", " has", " no", " numeric", " columns", "')", "\n", "    ", "return", " [", "plt", ".", "hist", "(", "df", "[", "col", "]", ".", "values", ",", " bins", "=", "1", "0", ")", " for", " col", " in", " col", "s", "]", "\n", "\n", "def"], "logprobs": [-4.033632755279541, -0.08826040476560593, -0.4332594871520996, -0.0032649326603859663, -0.7537133693695068, -3.290122185717337e-05, -0.00019429226813372225, -0.00021062063751742244, -0.08358928561210632, -0.25159335136413574, -2.2583606243133545, -0.47156354784965515, -0.04813527688384056, -0.3551616966724396, -0.1923861801624298, -0.2161625623703003, -0.6410342454910278, -0.0002834395272657275, -0.002685870509594679, -0.038676634430885315, -0.16652856767177582, -0.0010712367948144674, -0.0007441850611940026, -0.03722985088825226, -0.013022965751588345, -0.003142302157357335, -0.026392290368676186, -0.003987576812505722, -7.939023635117337e-05, -0.8814910650253296, -1.9103775024414062, -0.3732675015926361, -0.17289583384990692, -0.03195340186357498, -0.08699632436037064, -0.0034341190475970507, -0.0004017737810499966, -0.015477307140827179, -0.001383658149279654, -0.33662012219429016, -2.9624435901641846, -0.00808939803391695, -0.03617161139845848, -0.0450645387172699, -0.5107114315032959, -0.0027638589963316917, -0.36090460419654846, -2.054955005645752, -0.142680361866951, -2.582010507583618, -0.005808498244732618, -0.18535186350345612, -0.013570791110396385, -1.9504497051239014, -0.06814020872116089, -0.277893990278244, -0.5905655026435852, -2.037355422973633, -0.4566711485385895, -0.49947258830070496, -0.3978390395641327, -0.0775114968419075, -0.8802852630615234, -0.0761847048997879, -0.6928310990333557, -0.028518103063106537, -0.0014465117128565907, -0.0010457528987899423, -0.06823775172233582, -1.4424220353248529e-05, -0.38230058550834656, -0.24401912093162537, -0.054789770394563675, -1.4818167686462402], "finish_reason": "stop"}], "metrics": {"energy": 85.23837985801696, "energy_per_token": 1.1518699980813103, "time": 3.1697521, "time_per_token": 0.04283448783783784}}
{"outputs": [{"text": "axes = []\n    for colname in df.columns:\n        if colname == 'index':\n            continue\n        try:\n            df[colname].hist()\n            plt.title(colname + ' Values')\n            plt.xlabel('Value')\n            plt.ylabel('Frequency')\n            axes.append(plt.gca())\n        except (TypeError, AttributeError):\n            continue\n    return axes", "tokens": ["axes", " =", " []", "\n", "    ", "for", " col", "name", " in", " df", ".", "columns", ":", "\n", "        ", "if", " col", "name", " ==", " '", "index", "':", "\n", "            ", "continue", "\n", "        ", "try", ":", "\n", "            ", "df", "[", "col", "name", "]", ".", "hist", "()", "\n", "            ", "plt", ".", "title", "(", "col", "name", " +", " '", " Values", "')", "\n", "            ", "plt", ".", "xlabel", "('", "Value", "')", "\n", "            ", "plt", ".", "ylabel", "('", "F", "requency", "')", "\n", "            ", "axes", ".", "append", "(", "plt", ".", "g", "ca", "())", "\n", "        ", "except", " (", "Type", "Error", ",", " Attribute", "Error", "):", "\n", "            ", "continue", "\n", "    ", "return", " axes", "\n", "\n", "def"], "logprobs": [-2.4145569801330566, -0.04194604977965355, -0.04051898419857025, -0.014722278341650963, -0.28751516342163086, -1.5894361734390259, -0.6757979989051819, -3.1468353271484375, -0.8029966354370117, -0.02638961933553219, -0.11723431199789047, -0.25654542446136475, -0.02036600559949875, -0.011674300767481327, -0.009303785860538483, -0.4360269010066986, -1.9218673706054688, -0.00022790218645241112, -2.054483413696289, -0.23921069502830505, -2.4677999019622803, -0.11445256322622299, -0.08017522096633911, -0.0019668058957904577, -0.0723482072353363, -0.014195535331964493, -0.05552101880311966, -2.311723232269287, -0.0009783487766981125, -0.004030795302242041, -0.002077446784824133, -1.8778541088104248, -0.16434484720230103, -0.0037181309890002012, -8.940656698541716e-06, -0.003086923388764262, -0.07246562838554382, -0.16046659648418427, -0.6229344010353088, -0.012419858947396278, -0.25220727920532227, -1.723186731338501, -0.00035398892941884696, -0.2356208860874176, -0.05003468319773674, -0.18869750201702118, -0.00014745102089364082, -2.4206459522247314, -0.19329428672790527, -3.686678409576416, -0.07446649670600891, -0.007446627598255873, -0.011820393614470959, -0.04715937003493309, -0.0001641377166379243, -0.12345337122678757, -0.04467051476240158, -0.16062407195568085, -0.006019439548254013, -0.0016684910515323281, -0.0009679876384325325, -0.0008575814426876605, -2.8371408916427754e-05, -0.0020632902160286903, -0.0031592955347150564, -0.011184850707650185, -0.01168796792626381, -0.002069357316941023, -0.00047708096099086106, -0.07437730580568314, -0.39025333523750305, -0.0041211447678506374, -0.0019550274591892958, -0.0037433092948049307, -0.0645337700843811, -4.184158387943171e-05, -0.0012631779536604881, -0.04093078523874283, -0.003316499525681138, -0.026741353794932365, -0.2410423308610916, -0.002546284580603242, -2.7312984466552734, -1.0917280912399292, -0.0002802217786666006, -0.007915557362139225, -0.7281320095062256, -1.1801649634435307e-05, -0.3555828034877777, -0.023214349523186684, -0.0018174811266362667, -1.1332297325134277, -0.007284627296030521, -0.15944157540798187, -0.0907636433839798, -0.0035505369305610657, -0.5374170541763306, -0.03862147033214569, -1.2178289890289307], "finish_reason": "stop"}], "metrics": {"energy": 104.84158692741393, "energy_per_token": 1.0590059285597366, "time": 4.220848, "time_per_token": 0.04263482828282828}}
{"outputs": [{"text": "columns = []\n    for c in df.columns:\n        if pd.api.types.is_numeric_dtype(df[c]):\n            columns.append(c)\n\n    if not columns:\n        raise ValueError('No numeric columns found in the DataFrame.')\n\n    fig, axes = plt.subplots(nrows=2, ncols=3, figsize=(20, 20))\n    for i in range(3):\n        for j in range(2):\n            df.hist(columns[i], bins=30, ax=axes[i][j])\n\n    return axes", "tokens": ["columns", " =", " []", "\n", "    ", "for", " c", " in", " df", ".", "columns", ":", "\n", "        ", "if", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "df", "[", "c", "]", "):", "\n", "            ", "columns", ".", "append", "(", "c", ")", "\n", "\n", "    ", "if", " not", " columns", ":", "\n", "        ", "raise", " Value", "Error", "('", "No", " numeric", " columns", " found", " in", " the", " Data", "Frame", ".", "')", "\n", "\n", "    ", "fig", ",", " axes", " =", " plt", ".", "sub", "plots", "(", "n", "rows", "=", "2", ",", " n", "cols", "=", "3", ",", " fig", "size", "=(", "2", "0", ",", " ", "2", "0", "))", "\n", "    ", "for", " i", " in", " range", "(", "3", "):", "\n", "        ", "for", " j", " in", " range", "(", "2", "):", "\n", "            ", "df", ".", "hist", "(", "columns", "[", "i", "]", ",", " bins", "=", "3", "0", ",", " ax", "=", "axes", "[", "i", "][", "j", "])", "\n", "\n", "    ", "return", " axes", "\n", "\n", "def"], "logprobs": [-3.3723530769348145, -0.09494373202323914, -1.984044075012207, -0.026849403977394104, -0.11175772547721863, -0.42997923493385315, -3.3385705947875977, -0.10223057121038437, -0.03160615265369415, -0.12104151397943497, -0.04774802550673485, -0.013812669552862644, -0.004706732928752899, -0.0055027916096150875, -0.2034328579902649, -2.8651123046875, -0.00019107422849629074, -0.1267041712999344, -4.136476854910143e-05, -0.0016174342017620802, -4.732496745418757e-05, -0.0003987947420682758, -0.0014316319720819592, -0.05710645020008087, -0.0035554072819650173, -0.0015977962175384164, -0.00019333878299221396, -0.0005603650351986289, -0.004820273723453283, -0.01387039665132761, -0.0011788808042183518, -0.018632855266332626, -0.01923374831676483, -0.013057089410722256, -0.0027202290948480368, -0.05140906199812889, -0.007674022112041712, -0.000620768463704735, -0.015937911346554756, -0.031675104051828384, -0.0003921216703020036, -0.0006273209000937641, -0.941191554069519, -0.0023218835704028606, -0.06771818548440933, -0.9470879435539246, -0.12336581200361252, -0.01050584763288498, -0.0058606453239917755, -0.0008054111385717988, -0.018255548551678658, -0.0032936870120465755, -3.635817120084539e-05, -1.1540172100067139, -1.0796376466751099, -0.026827005669474602, -0.028045060113072395, -0.8388362526893616, -0.5011356472969055, -0.17348612844944, -0.14467205107212067, -0.0004930472350679338, -0.6851211190223694, -0.006783196236938238, -0.002031526295468211, -0.04522588849067688, -0.0004966217675246298, -2.830834150314331, -0.06141787767410278, -0.17321810126304626, -0.001562089892104268, -0.00046588058467023075, -7.486063259420916e-05, -0.0003592322755139321, -7.73638384998776e-05, -0.05871893838047981, -1.8743197917938232, -0.0022770448122173548, -0.02239322103559971, -1.8798255920410156, -0.02285018563270569, -0.15803560614585876, -0.0017996320966631174, -0.0017749997787177563, -2.30607271194458, -0.32410895824432373, -0.049158237874507904, -1.5020257706055418e-05, -0.003702097339555621, -2.0192975997924805, -0.21390394866466522, -0.0020848223939538, -0.0523458756506443, -1.519592046737671, -0.01577904261648655, -0.2586241662502289, -0.012208850122988224, -0.541686475276947, -0.596656858921051, -0.9817845821380615, -1.8304435014724731, -0.018075739964842796, -0.00043418517452664673, -2.143977642059326, -0.023757202550768852, -0.009258314035832882, -0.004405792336910963, -0.8030757308006287, -0.05832508206367493, -0.006918403785675764, -0.0030291646253317595, -0.00042512916843406856, -0.7573685050010681, -0.02307864837348461, -0.0012755600037053227, -0.004725954029709101, -3.4017038345336914, -3.4037556648254395, -0.20670302212238312, -0.004734140355139971, -0.683753490447998, -0.19978037476539612, -0.46037599444389343, -0.6921977996826172, -0.0011018402874469757, -2.580092191696167, -0.030308816581964493, -1.9625484943389893, -0.03235708549618721, -0.03343769535422325, -0.08142278343439102, -0.003578332718461752, -0.001902795396745205, -0.009669254533946514, -1.051123023033142, -0.5436949133872986, -0.013798560947179794, -0.29655107855796814, -0.008473987691104412, -0.9305310249328613, -0.011851965449750423, -0.42424270510673523, -0.20287692546844482, -0.818690299987793, -0.02947983890771866, -1.5440850257873535], "finish_reason": "stop"}], "metrics": {"energy": 152.8591602983474, "energy_per_token": 1.0469805499886808, "time": 6.5238304, "time_per_token": 0.04468376986301369}}
{"outputs": [{"text": "try:\n        df = pd.DataFrame(df)\n        numeric_cols = df.select_dtypes(include=[int, float])\n        if not len(numeric_cols):\n            raise ValueError('No numeric columns found in the DataFrame.')\n        return [df[col].plot.hist() for col in numeric_cols]\n    except Exception as e:\n        print(f'Exception caught: {e}')\n        raise e", "tokens": ["try", ":", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "(", "df", ")", "\n", "        ", "numeric", "_", "cols", " =", " df", ".", "select", "_", "d", "types", "(", "include", "=[", "int", ",", " float", "])", "\n", "        ", "if", " not", " len", "(", "numeric", "_", "cols", "):", "\n", "            ", "raise", " Value", "Error", "('", "No", " numeric", " columns", " found", " in", " the", " Data", "Frame", ".", "')", "\n", "        ", "return", " [", "df", "[", "col", "]", ".", "plot", ".", "hist", "()", " for", " col", " in", " numeric", "_", "cols", "]", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "Exception", " caught", ":", " {", "e", "}", "')", "\n", "        ", "raise", " e", "\n", "\n", "if"], "logprobs": [-2.9580655097961426, -0.0011443501571193337, -0.00868330430239439, -0.010925001464784145, -2.1815755367279053, -0.5100347995758057, -1.2038108110427856, -0.00030655929003842175, -0.08643798530101776, -0.06117647886276245, -0.029541760683059692, -0.021902110427618027, -0.07758507877588272, -0.6193386912345886, -1.8497908115386963, -0.027119534090161324, -0.43903160095214844, -0.0051741027273237705, -0.32888084650039673, -0.006944922264665365, -0.0413515642285347, -1.7046782886609435e-05, -5.221230458118953e-05, -0.00022063204960431904, -0.025557616725564003, -0.13302436470985413, -1.1519521474838257, -2.562248706817627, -0.0011624491307884455, -0.026113368570804596, -0.4045807421207428, -0.7242947816848755, -0.2543260157108307, -0.3024407625198364, -1.1904946565628052, -2.759220838546753, -0.00017891713650897145, -0.00889623910188675, -1.1920922133867862e-06, -9.417489309271332e-06, -0.1651710569858551, -0.024210402742028236, -0.0014675810234621167, -0.02701023779809475, -0.013660752214491367, -4.434487345861271e-05, -1.5119280815124512, -1.1121572256088257, -0.01578960195183754, -0.025769080966711044, -0.7119776606559753, -0.5467961430549622, -0.17801085114479065, -0.17007021605968475, -0.0006297035724855959, -0.5697450041770935, -0.009746582247316837, -0.0006026597693562508, -0.7264463901519775, -1.695296049118042, -0.16810011863708496, -1.5466315746307373, -0.05550951510667801, -0.2283230572938919, -0.014834923669695854, -0.00022682955022901297, -0.44212615489959717, -0.21566440165042877, -0.0004316828562878072, -0.7177600860595703, -0.018922176212072372, -0.0010088359704241157, -0.0005581013392657042, -0.12374487519264221, -2.706014311115723e-05, -1.6689286894688848e-06, -0.4010288119316101, -0.006064703222364187, -0.04881804808974266, -0.0010848119854927063, -0.813413143157959, -0.07392004877328873, -0.09579212218523026, -0.000286657246761024, -0.003789507318288088, -0.0006652049487456679, -0.9071261882781982, -0.12547244131565094, -0.5897480249404907, -0.42003995180130005, -2.610443115234375, -2.116945266723633, -0.1870487779378891, -0.00298269372433424, -0.24959997832775116, -0.04511820897459984, -0.009666657075285912, -0.04085766151547432, -0.13152891397476196, -0.2531272768974304, -1.0276250839233398, -0.2952518165111542, -0.04596347734332085, -0.8923707604408264], "finish_reason": "stop"}], "metrics": {"energy": 121.94500953674314, "energy_per_token": 1.1725481686225303, "time": 4.4208236, "time_per_token": 0.042507919230769235}}
{"outputs": [{"text": "# Check if the input is a non-empty DataFrame\n    if len(df) == 0:\n        raise ValueError(\"Input is empty.\")\n\n    # Get all numeric columns\n    numeric_cols = df.select_dtypes(include=[np.number])\n    if len(numeric_cols) == 0:\n        raise ValueError(\"No numeric columns found.\")\n\n    # Plot histograms for each numeric column\n    axes = []\n    for col in numeric_cols:\n        ax = df[col].plot(kind='hist')\n        ax.set(title='Value', xlabel='Value', ylabel='Frequency')\n        axes.append(ax)\n\n    return axes", "tokens": ["#", " Check", " if", " the", " input", " is", " a", " non", "-", "empty", " Data", "Frame", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " is", " empty", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " all", " numeric", " columns", "\n", "    ", "numeric", "_", "cols", " =", " df", ".", "select", "_", "d", "types", "(", "include", "=[", "np", ".", "number", "])", "\n", "    ", "if", " len", "(", "numeric", "_", "cols", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " numeric", " columns", " found", ".", "\"", ")", "\n", "\n", "    ", "#", " Plot", " histogram", "s", " for", " each", " numeric", " column", "\n", "    ", "axes", " =", " []", "\n", "    ", "for", " col", " in", " numeric", "_", "cols", ":", "\n", "        ", "ax", " =", " df", "[", "col", "]", ".", "plot", "(", "kind", "='", "hist", "')", "\n", "        ", "ax", ".", "set", "(", "title", "='", "Value", "'", ",", " x", "label", "='", "Value", "'", ",", " y", "label", "='", "F", "requency", "')", "\n", "        ", "axes", ".", "append", "(", "ax", ")", "\n", "\n", "    ", "return", " axes", "\n", "\n", "def"], "logprobs": [-1.7058968544006348, -0.8518466353416443, -0.5432645678520203, -0.48722296953201294, -0.025456400588154793, -0.024039458483457565, -0.2345828115940094, -0.20582613348960876, -0.0013638966483995318, -0.0002256377338198945, -0.010051230899989605, -0.00036590558011084795, -0.24087511003017426, -0.0011750705307349563, -0.013765404000878334, -2.7463133335113525, -0.00015054999676067382, -0.000774917658418417, -0.06443295627832413, -0.11515603214502335, -0.0005362979718483984, -0.00011252723925281316, -0.2785503566265106, -0.0037218127399683, -0.0007788485381752253, -0.007879129610955715, -0.0018102225149050355, -1.4662635294371285e-05, -0.34816133975982666, -0.017951399087905884, -0.3153955638408661, -0.25942644476890564, -0.8690375685691833, -0.703471839427948, -0.026762014254927635, -0.00010048838157672435, -0.0019672818016260862, -0.16235025227069855, -0.0007518087513744831, -0.05364184081554413, -1.3213337659835815, -0.981458842754364, -0.23391789197921753, -0.02788705937564373, -0.694171130657196, -0.0003343261778354645, -0.30234280228614807, -0.0016827721847221255, -0.5135095715522766, -0.0021435872185975313, -0.5417571663856506, -0.006189345382153988, -0.024853305891156197, -1.811964830267243e-05, -3.802703940891661e-05, -0.00017867876158561558, -0.03951200842857361, -0.06885809451341629, -0.9023733139038086, -0.23605263233184814, -5.972207145532593e-05, -0.010898824781179428, -0.1181136965751648, -0.6690293550491333, -1.2144440412521362, -0.21376831829547882, -0.1531512439250946, -3.111314072157256e-05, -0.0006479309522546828, -1.5497195136049413e-06, -3.099436753473128e-06, -0.008362160995602608, -0.0049513583071529865, -0.00013696208770852536, -3.194758028257638e-05, -0.0003580405900720507, -0.005408772733062506, -0.00019464982324279845, -0.00592866912484169, -0.0005763299996033311, -1.597391747054644e-05, -0.00472441129386425, -0.021647481247782707, -0.4746101498603821, -0.004806274548172951, -0.014779835939407349, -0.19683724641799927, -0.28211796283721924, -0.0016337393317371607, -0.00029225845355540514, -0.0015792291378602386, -0.01051870547235012, -0.0004974558250978589, -0.10440416634082794, -3.4168262481689453, -0.48496171832084656, -0.03493935987353325, -0.48354431986808777, -0.21353764832019806, -0.28328937292099, -0.0026614980306476355, -0.07716404646635056, -0.00031454383861273527, -0.20537026226520538, -0.012421743012964725, -0.09822732955217361, -0.0044061485677957535, -0.016064496710896492, -0.006017780862748623, -0.06976403295993805, -0.1735953688621521, -0.01046172808855772, -9.775113539944869e-06, -9.536738616588991e-07, -0.1819165050983429, -0.0009478605352342129, -0.0008100565755739808, -0.9915826320648193, -0.011567898094654083, -0.649543821811676, -0.04934661462903023, -0.002016893122345209, -0.0004295380203984678, -0.0003212174342479557, -0.41617485880851746, -1.111085057258606, -0.028986869379878044, -0.1638776659965515, -0.0002811751910485327, -1.3953337669372559, -0.020490046590566635, -0.0058221276849508286, -0.35740819573402405, -0.0020760190673172474, -0.033154506236314774, -2.1920766830444336, -1.3125123977661133, -2.1953229904174805, -0.3061618506908417, -0.2752250134944916, -0.0001646144810365513, -0.030946772545576096, -9.536288416711614e-05, -0.00941456202417612, -0.40557605028152466, -0.003350836457684636, -3.909988299710676e-05, -0.0006538875168189406, -2.407998726994265e-05, -0.0013971101725474, -0.006736070849001408, -0.0062097227200865746, -0.07277459651231766, -0.008076981641352177, -0.0037015036214143038, -0.0859888345003128, -0.00045122456504032016, -0.0003044141922146082, -7.843663479434326e-05, -0.0003190723655279726, -0.002581836888566613, -0.002761838026344776, -0.18723039329051971, -0.0004996005445718765, -0.05135153979063034, -0.001353658502921462, -0.6171690821647644, -0.02102655917406082, -1.5226415395736694], "finish_reason": "stop"}], "metrics": {"energy": 209.7142358646392, "energy_per_token": 1.240912638252303, "time": 7.788538, "time_per_token": 0.04608602366863905}}
{"outputs": [{"text": "if not isinstance(df, pd.core.generic.DataFrame):\n        raise ValueError('The input is not a non-empty DataFrame')\n    if not df.any():\n        raise ValueError('The input is empty')\n    numeric_cols = df.select_dtypes(np.number)\n    if not numeric_cols.empty:\n        numeric_cols.hist()\n        return [ax.figure.axes[0]]\n    else:\n        raise ValueError('No numeric columns found in the DataFrame')", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "core", ".", "generic", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "('", "The", " input", " is", " not", " a", " non", "-", "empty", " Data", "Frame", "')", "\n", "    ", "if", " not", " df", ".", "any", "():", "\n", "        ", "raise", " Value", "Error", "('", "The", " input", " is", " empty", "')", "\n", "    ", "numeric", "_", "cols", " =", " df", ".", "select", "_", "d", "types", "(", "np", ".", "number", ")", "\n", "    ", "if", " not", " numeric", "_", "cols", ".", "empty", ":", "\n", "        ", "numeric", "_", "cols", ".", "hist", "()", "\n", "        ", "return", " [", "ax", ".", "figure", ".", "axes", "[", "0", "]]", "\n", "    ", "else", ":", "\n", "        ", "raise", " Value", "Error", "('", "No", " numeric", " columns", " found", " in", " the", " Data", "Frame", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.134972095489502, -0.26663315296173096, -0.10157729685306549, -0.0002908283786382526, -0.0012969900853931904, -0.0005785936955362558, -0.039269618690013885, -2.8371408916427754e-05, -1.514517068862915, -3.659658250398934e-05, -2.11161732673645, -0.002034024568274617, -0.16482031345367432, -0.22274111211299896, -0.010647629387676716, -0.0036852320190519094, -0.023643113672733307, -0.0721190869808197, -5.507317473529838e-05, -1.4996063709259033, -2.044365167617798, -0.04815424606204033, -0.3813283145427704, -0.004274755250662565, -0.017164254561066628, -0.7306303381919861, -0.0011241076281294227, -0.00024577934527769685, -0.012705921195447445, -0.0008348317351192236, -0.722091794013977, -0.001520430902019143, -0.3664444088935852, -0.7900789380073547, -1.1028468608856201, -0.5043001174926758, -0.012606574222445488, -3.1310911178588867, -0.17179423570632935, -0.04637759551405907, -0.000819466426037252, -0.0920485258102417, -0.002282278146594763, -1.847726889536716e-05, -0.015058295801281929, -0.10765144228935242, -0.11479229480028152, -0.07943437248468399, -1.5033817291259766, -0.21375907957553864, -0.0016737275291234255, -0.3046281933784485, -1.9254422187805176, -0.03659117966890335, -0.4680018424987793, -0.010873000137507915, -0.33075660467147827, -0.0055187963880598545, -0.04820321127772331, -2.0146166207268834e-05, -0.00010024998482549563, -0.000248043768806383, -0.07195203006267548, -2.4338912963867188, -6.794906312279636e-06, -0.0021332381293177605, -0.012210970744490623, -1.9258861541748047, -0.022957956418395042, -0.11950399726629257, -0.7013421654701233, -0.21160143613815308, -7.152555099310121e-07, -2.264974000354414e-06, -0.15196099877357483, -2.352799892425537, -0.0022399353329092264, -0.005781238432973623, -0.011285871267318726, -1.5934596061706543, -0.0016214807983487844, -0.08162792772054672, -0.25279033184051514, -0.15808701515197754, -1.0106147527694702, -0.03897557780146599, -0.2501983940601349, -0.520818293094635, -1.8744004964828491, -0.872442364692688, -2.553138494491577, -0.930873692035675, -0.20029695332050323, -0.9893170595169067, -0.07368430495262146, -0.03156410902738571, -0.5383283495903015, -0.05700241029262543, -0.025795916095376015, -0.2951010465621948, -0.00031406714697368443, -0.006148115731775761, -0.000662703241687268, -0.10466080158948898, -0.009054552763700485, -1.3232143828645349e-05, -0.08933888375759125, -1.341049075126648, -0.01863929070532322, -0.043035537004470825, -0.849029004573822, -0.575900673866272, -0.04048967733979225, -0.24996593594551086, -0.0004761277523357421, -0.10485263913869858, -1.3913500308990479, -1.1920922133867862e-06, -5.960462772236497e-07, -3.6238969187252223e-05, -0.00013207517622504383, -0.1807737648487091], "finish_reason": "stop"}], "metrics": {"energy": 154.01151612091067, "energy_per_token": 1.2623894764009072, "time": 5.2717457, "time_per_token": 0.043211030327868855}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input must be a pandas DataFrame\")\n\n    columns = df.columns\n    numeric_columns = [col for col in columns if df[col].dtype in [np.float64, np.int64]]\n\n    if len(numeric_columns) == 0:\n        raise ValueError(\"DataFrame must contain at least one numeric column\")\n\n    axes = []\n    for col in numeric_columns:\n        axes.append(df[col].plot.hist(bins=20, title=f\"{col}\"))\n\n    return axes", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "columns", " =", " df", ".", "columns", "\n", "    ", "numeric", "_", "columns", " =", " [", "col", " for", " col", " in", " columns", " if", " df", "[", "col", "]", ".", "d", "type", " in", " [", "np", ".", "float", "6", "4", ",", " np", ".", "int", "6", "4", "]]", "\n", "\n", "    ", "if", " len", "(", "numeric", "_", "columns", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "DataFrame", " must", " contain", " at", " least", " one", " numeric", " column", "\"", ")", "\n", "\n", "    ", "axes", " =", " []", "\n", "    ", "for", " col", " in", " numeric", "_", "columns", ":", "\n", "        ", "axes", ".", "append", "(", "df", "[", "col", "]", ".", "plot", ".", "hist", "(", "bins", "=", "2", "0", ",", " title", "=", "f", "\"", "{", "col", "}\"", "))", "\n", "\n", "    ", "return", " axes", "\n", "\n", "def"], "logprobs": [-1.134972095489502, -0.26663315296173096, -0.10157729685306549, -0.0002908283786382526, -0.0012969900853931904, -0.0005785936955362558, -0.039269618690013885, -2.8371408916427754e-05, -0.25071361660957336, -0.5129403471946716, -0.008952951058745384, -0.0021385911386460066, -0.020371729508042336, -0.10643769800662994, -5.638440416078083e-05, -0.2745705544948578, -0.15869444608688354, -0.29857146739959717, -1.2141387462615967, -0.0006761648692190647, -0.036786533892154694, -1.5752568244934082, -0.07309654355049133, -0.004776970949023962, -0.7916239500045776, -0.0002530493075028062, -0.00237266649492085, -0.9211862683296204, -0.0006169561529532075, -3.0578086376190186, -0.048823270946741104, -0.45873960852622986, -0.0006791430641897023, -0.9114236235618591, -0.4291592836380005, -0.11834501475095749, -1.286933183670044, -0.00881943665444851, -0.354173868894577, -0.006435977295041084, -0.7203568816184998, -0.9184941649436951, -0.003906596451997757, -0.00019453064305707812, -0.0003486264031380415, -0.025724351406097412, -0.006580706220120192, -0.08932220190763474, -0.005329330451786518, -0.00021288513380568475, -1.728519782773219e-05, -1.883488948806189e-05, -0.07834603637456894, -0.34536442160606384, -1.5423610210418701, -0.6804206371307373, -0.1687467098236084, -1.883488948806189e-05, -0.857521653175354, -0.5153724551200867, -7.152555099310121e-07, -0.0036250133998692036, -0.005497812293469906, -0.00020037073409184813, -0.10101992636919022, -0.02565266378223896, -9.775113539944869e-06, -0.12660984694957733, -0.007130768615752459, -0.37319427728652954, -4.684815212385729e-05, -0.02403678186237812, -0.7685981392860413, -3.909988299710676e-05, -0.0044701178558170795, -7.152555099310121e-07, -5.2689116273541003e-05, -0.0008286379743367434, -0.07997649908065796, -0.0002233732520835474, -6.48477507638745e-05, -0.0008817598572932184, -0.001942891743965447, -0.00034195298212580383, -0.011707055382430553, -0.0007453762227669358, -4.172316494077677e-06, -0.0061393482610583305, -0.015222211368381977, -1.3695622682571411, -0.28746116161346436, -0.43269917368888855, -0.18557676672935486, -0.0018314032349735498, -0.025226503610610962, -0.03970404341816902, -0.003193756565451622, -0.026292666792869568, -0.00042548662167973816, -0.0034931611735373735, -0.007157281041145325, -0.0003594706067815423, -0.46463310718536377, -0.016009241342544556, -0.05772056430578232, -0.003426872193813324, -0.1910417675971985, -0.019357111304998398, -0.13132737576961517, -0.008502592332661152, -0.019089553505182266, -4.291525328881107e-06, -5.245195097813848e-06, -0.00012694983161054552, -0.0005202132160775363, -0.001453415839932859, -1.8230621814727783, -0.004583566915243864, -0.0011799524072557688, -0.0027877537067979574, -0.7608611583709717, -0.023714594542980194, -0.000788139586802572, -0.0020146328024566174, -0.0005399914807640016, -0.5787168741226196, -0.24743768572807312, -0.00020168177434243262, -0.5152208209037781, -1.1638920307159424, -0.02661077491939068, -0.8062395453453064, -0.2214181125164032, -0.4274229109287262, -0.6645181179046631, -0.04754343628883362, -2.0913751125335693, -0.3187989890575409, -0.27117884159088135, -0.004398315213620663, -1.2877161502838135, -1.229278326034546, -0.010295496322214603, -0.3695269823074341, -0.0008269704412668943, -0.01357278972864151, -0.003592824097722769, -0.6121839880943298, -0.015830671414732933, -1.3319088220596313], "finish_reason": "stop"}], "metrics": {"energy": 154.70610131072996, "energy_per_token": 1.0313740087381997, "time": 6.522146, "time_per_token": 0.04348097333333333}}
