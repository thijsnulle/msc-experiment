{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.11377647519111633, -0.061383794993162155, -0.03486660495400429, -0.082235187292099, -0.012104978784918785], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric data types\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", " types", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -0.5505996346473694, -0.014750705100595951, -0.002737823873758316, -0.009300478734076023, -0.22297969460487366, -0.058661941438913345, -0.21445292234420776, -0.0007551440503448248, -0.0009871615329757333], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -0.762954592704773, -4.0531076592742465e-06, -1.3112935448589269e-05, -2.288792165927589e-05, -0.006163754966109991, -0.004806156270205975, -0.018759334459900856, -0.001684914343059063, 0.0, -9.965400386136025e-05, -0.0010550415609031916, -0.016484376043081284, -0.09555487334728241, -1.5497195136049413e-06, -0.024743760004639626, -0.06994712352752686], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum),", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", "\n"], "logprobs": [-0.6762939691543579, -2.586808113846928e-05, -0.0006768796010874212, -0.00496333884075284, -0.10683683305978775, -4.768370445162873e-07, -1.4662635294371285e-05, -0.0002240883477497846, -4.768370445162873e-07, -1.5497195136049413e-06, -0.00016258825780823827, -0.010969100520014763, -0.0015194787411019206, -1.3947389561508317e-05, -2.3841855067985307e-07, -0.08320917189121246, -0.01277206838130951, -2.779311418533325], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.010351303964853287, -0.0016694430960342288, -0.0013892533024773002, -2.1815061700181104e-05, -2.145764938177308e-06, -1.7881377516459906e-06, -1.5902115106582642, -2.0265558760002023e-06, -1.5497195136049413e-06, -5.602820692729438e-06, -3.194758028257638e-05, -0.16741055250167847], "finish_reason": "stop"}], "metrics": {"energy": 776.664202899933, "energy_per_token": 8.090252113540968, "time": 19.452616, "time_per_token": 0.20263141666666665}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(", "tokens": [" Type", "Error", "(", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -2.509448766708374], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.016759900376200676, -0.001723829424008727, -0.07340143620967865, -0.32910192012786865, -0.00018285033002030104], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0003847335756290704, -7.152555099310121e-07, -0.0005634627304971218, -0.012583383359014988, -0.042482029646635056, -0.0007874249131418765, -0.00012110930401831865, -0.0923503041267395, -0.0046440837904810905, -0.0010224120924249291, -0.00949982088059187, -0.03761889412999153, -0.0021130156237632036, -0.002678618300706148, -0.016843948513269424, -0.000916537712328136, -0.0003299168893136084, -0.00013839241000823677], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.012538649141788483, -0.0036081469152122736, -0.7109829187393188, -3.576272320060525e-06, -9.298280929215252e-06, -2.288792165927589e-05, -0.008245001547038555, -0.007584821432828903, -0.0188209880143404, -0.0012944899499416351, 0.0, -0.00011169286881340668, -0.0011555430246517062, -0.01733778417110443, -0.08208068460226059, -2.264974000354414e-06, -0.023588625714182854, -0.06996113061904907], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0002954761730507016, -3.3378546504536644e-06, -3.6954811548639555e-06, 0.0, -0.013755409978330135, -0.0033222027122974396], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum), index=df_cumsum.index, columns=df_cumsum.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", " index", "=", "df", "_", "cum", "sum", ".", "index", ",", " columns", "=", "df", "_", "cum", "sum", ".", "columns", ")", "\n"], "logprobs": [-0.7397855520248413, -3.659658250398934e-05, -0.0005430892342701554, -0.004452909342944622, -0.1275935173034668, -4.768370445162873e-07, -1.3947389561508317e-05, -0.00037400881410576403, -3.576278118089249e-07, -1.6689286894688848e-06, -0.00021455370006151497, -0.008761889301240444, -0.0015957729192450643, -1.847726889536716e-05, -3.576278118089249e-07, -0.07912547886371613, -0.014577314257621765, -1.9162838459014893, -0.0010932666482403874, -0.0007188120507635176, -0.16635790467262268, -2.169585604860913e-05, -4.768370445162873e-07, -6.0437283536884934e-05, -2.169585604860913e-05, -0.1541750729084015, -0.00859750248491764, -0.00043049128726124763, -0.00013028726971242577, -0.061784736812114716, -4.792098479811102e-05, 0.0, -7.10462118149735e-05, -4.076874756719917e-05, -0.00493664899840951, -0.006589469499886036], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.01070766244083643, -0.0016268364852294326, -0.0012862751027569175, -1.9550132492440753e-05, -2.7418097943154862e-06, -1.5497195136049413e-06, -0.33026620745658875], "finish_reason": "stop"}], "metrics": {"energy": 587.4275694808957, "energy_per_token": 5.933611812938341, "time": 14.212175, "time_per_token": 0.14355732323232323}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame must contain only numeric columns\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numeric", " columns", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -1.1019949913024902, -0.19991616904735565, -0.021969052031636238, -0.2317705601453781, -2.151047945022583, -0.305936336517334, -0.0005545270396396518, -0.002185339340940118], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -0.762954592704773, -4.0531076592742465e-06, -1.3112935448589269e-05, -2.288792165927589e-05, -0.006163754966109991, -0.004806156270205975, -0.018759334459900856, -0.001684914343059063, 0.0, -9.965400386136025e-05, -0.0010550415609031916, -0.016484376043081284, -0.09555487334728241, -1.5497195136049413e-06, -0.024743760004639626, -0.06994712352752686], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.7519584894180298, -3.576278118089249e-07, -1.1444026313256472e-05, -0.00022754464589525014, -5.960446742392378e-06, -7.152555099310121e-07, -0.0006469779182225466, -0.012846567668020725, -0.0015528061194345355, -2.539125671319198e-05, -1.1920928244535389e-07, -0.3147784471511841, -0.03572678938508034], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.007469108793884516, -0.002082324121147394, -0.0014885308919474483, -2.3603161025675945e-05, -2.50339189733495e-06, -2.0265558760002023e-06, -0.32721996307373047], "finish_reason": "stop"}], "metrics": {"energy": 528.019813182831, "energy_per_token": 6.211997802150952, "time": 13.174023, "time_per_token": 0.15498850588235294}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame must contain only numerical data types\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numerical", " data", " types", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -1.1019949913024902, -0.19991616904735565, -0.021969052031636238, -1.5919008255004883, -1.3508996963500977, -0.250773161649704, -0.49092626571655273, -0.00043096792069263756, -0.0015349523164331913], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -0.762954592704773, -4.0531076592742465e-06, -1.3112935448589269e-05, -2.288792165927589e-05, -0.006163754966109991, -0.004806156270205975, -0.018759334459900856, -0.001684914343059063, 0.0, -9.965400386136025e-05, -0.0010550415609031916, -0.016484376043081284, -0.09555487334728241, -1.5497195136049413e-06, -0.024743760004639626, -0.06994712352752686], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum), index=df.index, columns=df_cumsum.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", " index", "=", "df", ".", "index", ",", " columns", "=", "df", "_", "cum", "sum", ".", "columns", ")", "\n"], "logprobs": [-0.6762939691543579, -2.586808113846928e-05, -0.0006768796010874212, -0.00496333884075284, -0.10683683305978775, -4.768370445162873e-07, -1.4662635294371285e-05, -0.0002240883477497846, -4.768370445162873e-07, -1.5497195136049413e-06, -0.00016258825780823827, -0.010969100520014763, -0.0015194787411019206, -1.3947389561508317e-05, -2.3841855067985307e-07, -0.08320917189121246, -0.01277206838130951, -1.7434190511703491, -0.0010489681735634804, -0.0007393010891973972, -1.609702229499817, -9.63164638960734e-05, -0.5025840997695923, -0.002861573826521635, -0.00048756631440483034, -0.00030393750057555735, -1.4416463375091553, -3.0874729418428615e-05, 0.0, -0.00023648326168768108, -5.519237674889155e-05, -0.004210298415273428, -0.004268226679414511], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.010351303964853287, -0.0016694430960342288, -0.0013892533024773002, -2.1815061700181104e-05, -2.145764938177308e-06, -1.7881377516459906e-06, -0.3323570787906647], "finish_reason": "stop"}], "metrics": {"energy": 606.3769309005733, "energy_per_token": 5.720537083967672, "time": 14.822681, "time_per_token": 0.13983661320754717}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric data types\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", " types", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -0.5505996346473694, -0.014750705100595951, -0.002737823873758316, -0.009300478734076023, -0.22297969460487366, -0.058661941438913345, -0.21445292234420776, -0.0007551440503448248, -0.0009871615329757333], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -1.1030501127243042, -4.6491513785440475e-06, -0.06035060063004494, -0.08442151546478271], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.000276765669696033, -3.6954811548639555e-06, -2.622600959512056e-06, 0.0, -0.01605088822543621, -0.0032947564031928778], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.6773914098739624, -2.3841855067985307e-07, -9.417489309271332e-06, -0.00031799983116798103, -7.510157047363464e-06, -5.960462772236497e-07, -0.0006860524881631136, -0.0094126733019948, -0.0018641252536326647, -3.2543604902457446e-05, -1.1920928244535389e-07, -0.292234867811203, -0.034129537642002106], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.008362160995602608, -0.0014999578706920147, -0.001646116841584444, -2.1576648578047752e-05, -2.622600959512056e-06, -1.9073468138230965e-06, -0.2790749669075012], "finish_reason": "stop"}], "metrics": {"energy": 473.8951678752899, "energy_per_token": 6.403988755071485, "time": 12.15489, "time_per_token": 0.16425527027027026}}
{"outputs": [{"text": " df.empty or df.isnull().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "null", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -2.6704108715057373, -0.03467098996043205, -0.0017972521018236876, -0.00643064733594656, -0.20871520042419434, -9.142934868577868e-05, -9.536697689327411e-06, -0.5083838105201721, -3.755022044060752e-05, -0.004198190290480852, -0.007943231612443924, -0.006094443611800671], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame must contain only numerical values\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numerical", " values", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -1.1019949913024902, -0.19991616904735565, -0.021969052031636238, -1.5919008255004883, -0.33260440826416016, -0.3879331946372986, -0.0005876483046449721, -0.0017147850012406707], "finish_reason": "stop"}, {"text": " df.empty or df.isnull().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "null", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -1.188530683517456, -0.027261996641755104, -0.0003985564399044961, -0.008779851719737053, -0.23679260909557343, -4.31528314948082e-05, -7.152555099310121e-07, -0.2070147693157196, -4.482168878894299e-05, -0.0014435357879847288, -0.0008441222598776221, -0.0017475108616054058], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0003393312799744308, -5.960462772236497e-07, -0.0004477690381463617, -0.01331685483455658, -0.03986385464668274, -0.0006768796010874212, -0.00011252723925281316, -0.08376723527908325, -0.005449914373457432, -0.0011860248632729053, -0.00749561283737421, -0.031886085867881775, -0.002052940195426345, -0.0024852838832885027, -0.017067458480596542, -0.0007911174325272441, -0.00036507140612229705, -0.00011467275908216834], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.012165277265012264, -0.004150111693888903, -0.6614591479301453, -2.145764938177308e-06, -1.1205610462639015e-05, -2.9801878554280847e-05, -0.007153375539928675, -0.005786809138953686, -0.020974263548851013, -0.001302347518503666, -1.1920928244535389e-07, -0.00010096516780322418, -0.0012541294563561678, -0.017177965492010117, -0.09552507847547531, -1.7881377516459906e-06, -0.026941543444991112, -0.0716603472828865], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.000291662581730634, -3.6954811548639555e-06, -2.7418097943154862e-06, 0.0, -0.017169762402772903, -0.003389805555343628], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum), columns=df_cumsum.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", " columns", "=", "df", "_", "cum", "sum", ".", "columns", ")", "\n"], "logprobs": [-0.5591970086097717, -4.23184028477408e-05, -0.0005401106318458915, -0.003702334826812148, -0.09522523730993271, -4.768370445162873e-07, -1.3589766240329482e-05, -0.0003736513026524335, -3.576278118089249e-07, -1.4305104514278355e-06, -0.00021300431399140507, -0.007439527660608292, -0.0012809175532311201, -1.4543427823809907e-05, -1.1920928244535389e-07, -0.09173828363418579, -0.014079409651458263, -0.20186789333820343, -0.002123364945873618, -0.0012584156356751919, -0.3145710825920105, -7.986990567587782e-06, 0.0, -0.000102037942269817, -4.362964682513848e-05, -0.10407667607069016, -0.008963820524513721], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.008696540258824825, -0.0016242180718109012, -0.0014119903789833188, -2.0503786799963564e-05, -2.264974000354414e-06, -1.9073468138230965e-06, -0.36354225873947144], "finish_reason": "stop"}], "metrics": {"energy": 625.0523541717528, "energy_per_token": 5.252540791359267, "time": 15.291583, "time_per_token": 0.1285006974789916}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame must contain only numeric data types.\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numeric", " data", " types", ".", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -1.1019949913024902, -0.19991616904735565, -0.021969052031636238, -0.2317705601453781, -0.4366162419319153, -0.08462439477443695, -0.8856922388076782, -0.005746036767959595, -0.0006829552003182471, -0.0014590105274692178], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -0.762954592704773, -4.0531076592742465e-06, -1.3112935448589269e-05, -2.288792165927589e-05, -0.006163754966109991, -0.004806156270205975, -0.018759334459900856, -0.001684914343059063, 0.0, -9.965400386136025e-05, -0.0010550415609031916, -0.016484376043081284, -0.09555487334728241, -1.5497195136049413e-06, -0.024743760004639626, -0.06994712352752686], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.7519584894180298, -3.576278118089249e-07, -1.1444026313256472e-05, -0.00022754464589525014, -5.960446742392378e-06, -7.152555099310121e-07, -0.0006469779182225466, -0.012846567668020725, -0.0015528061194345355, -2.539125671319198e-05, -1.1920928244535389e-07, -0.3147784471511841, -0.03572678938508034], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.007469108793884516, -0.002082324121147394, -0.0014885308919474483, -2.3603161025675945e-05, -2.50339189733495e-06, -2.0265558760002023e-06, -0.32721996307373047], "finish_reason": "stop"}], "metrics": {"energy": 552.5472681465146, "energy_per_token": 6.351118024672582, "time": 13.409473, "time_per_token": 0.1541318735632184}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric data types.\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", " types", ".", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -0.5505996346473694, -0.014750705100595951, -0.002737823873758316, -0.009300478734076023, -0.22297969460487366, -0.058661941438913345, -1.699037790298462, -0.05208756774663925, -0.0010544460965320468, -0.0017070496687665582], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -0.762954592704773, -4.0531076592742465e-06, -1.3112935448589269e-05, -2.288792165927589e-05, -0.006163754966109991, -0.004806156270205975, -0.018759334459900856, -0.001684914343059063, 0.0, -9.965400386136025e-05, -0.0010550415609031916, -0.016484376043081284, -0.09555487334728241, -1.5497195136049413e-06, -0.024743760004639626, -0.06994712352752686], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.astype(float))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "ast", "ype", "(", "float", "))", "\n"], "logprobs": [-0.7519584894180298, -3.576278118089249e-07, -1.1444026313256472e-05, -0.00022754464589525014, -5.960446742392378e-06, -7.152555099310121e-07, -0.0006469779182225466, -0.012846567668020725, -0.0015528061194345355, -2.539125671319198e-05, -1.1920928244535389e-07, -1.332388997077942, -2.3219962120056152, -1.1920928244535389e-07, -0.2779121398925781, -0.5724634528160095, -0.014960943721234798, -0.056508179754018784], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.007469108793884516, -0.002082324121147394, -0.0014885308919474483, -2.3603161025675945e-05, -2.50339189733495e-06, -2.0265558760002023e-06, -0.32721996307373047], "finish_reason": "stop"}], "metrics": {"energy": 565.8599583053589, "energy_per_token": 6.150651720710423, "time": 13.768758, "time_per_token": 0.14966041304347827}}
{"outputs": [{"text": " df.empty or df.isnull().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "null", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -2.6704108715057373, -0.03467098996043205, -0.0017972521018236876, -0.00643064733594656, -0.20871520042419434, -9.142934868577868e-05, -9.536697689327411e-06, -0.5083838105201721, -3.755022044060752e-05, -0.004198190290480852, -0.007943231612443924, -0.006094443611800671], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame must contain only numeric values\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numeric", " values", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -1.1019949913024902, -0.19991616904735565, -0.021969052031636238, -0.2317705601453781, -1.5155880451202393, -0.4096407890319824, -0.0005564333405345678, -0.001963474787771702], "finish_reason": "stop"}, {"text": " df.empty or df.isnull().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "null", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -1.188530683517456, -0.027261996641755104, -0.0003985564399044961, -0.008779851719737053, -0.23679260909557343, -4.31528314948082e-05, -7.152555099310121e-07, -0.2070147693157196, -4.482168878894299e-05, -0.0014435357879847288, -0.0008441222598776221, -0.0017475108616054058], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0003393312799744308, -5.960462772236497e-07, -0.0004477690381463617, -0.01331685483455658, -0.03986385464668274, -0.0006768796010874212, -0.00011252723925281316, -0.08376723527908325, -0.005449914373457432, -0.0011860248632729053, -0.00749561283737421, -0.031886085867881775, -0.002052940195426345, -0.0024852838832885027, -0.017067458480596542, -0.0007911174325272441, -0.00036507140612229705, -0.00011467275908216834], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.012165277265012264, -0.004150111693888903, -1.2419722080230713, -5.602820692729438e-06, -0.06587453931570053, -0.08427052944898605], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0002646096108946949, -4.768360213347478e-06, -3.933898824470816e-06, 0.0, -0.011931716464459896, -0.0030065830796957016], "finish_reason": "stop"}, {"text": " pd.DataFrame(", "tokens": [" pd", ".", "DataFrame", "(", "\n"], "logprobs": [-0.7371912598609924, -4.8993817472364753e-05, -0.0005990855861455202, -0.004470473621040583, -1.972076654434204], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.011133098043501377, -0.001321038813330233, -0.0016783688915893435, -1.8954096958623268e-05, -3.2186455882765586e-06, -1.4305104514278355e-06, -0.3172372281551361], "finish_reason": "stop"}], "metrics": {"energy": 488.4034028053284, "energy_per_token": 5.745922385945041, "time": 12.553873, "time_per_token": 0.14769262352941176}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric data types\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", " types", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -0.5505996346473694, -0.014750705100595951, -0.002737823873758316, -0.009300478734076023, -0.22297969460487366, -0.058661941438913345, -0.21445292234420776, -0.0007551440503448248, -0.0009871615329757333], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.apply(np.cumsum)", "tokens": [" df", ".", "apply", "(", "np", ".", "cum", "sum", ")", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -2.668689727783203, -0.002841603709384799, -1.6844613552093506, -2.3841855067985307e-07, -0.010145286098122597, -7.986990567587782e-06, -0.6481607556343079, -0.05966106057167053], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ")", "\n"], "logprobs": [-0.7519584894180298, -3.576278118089249e-07, -1.1444026313256472e-05, -0.00022754464589525014, -5.960446742392378e-06, -7.152555099310121e-07, -0.0006469779182225466, -0.012846567668020725, -0.0015528061194345355, -2.539125671319198e-05, -1.1920928244535389e-07, -1.332388997077942, -1.2235122919082642, -0.08970468491315842, -0.014197767712175846], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.007469108793884516, -0.002082324121147394, -0.0014885308919474483, -2.3603161025675945e-05, -2.50339189733495e-06, -2.0265558760002023e-06, -0.32721996307373047], "finish_reason": "stop"}], "metrics": {"energy": 517.8021079654693, "energy_per_token": 6.4725263495683665, "time": 12.77678, "time_per_token": 0.15970975}}
{"outputs": [{"text": " df.empty or df.isnull().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "null", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -2.6704108715057373, -0.03467098996043205, -0.0017972521018236876, -0.00643064733594656, -0.20871520042419434, -9.142934868577868e-05, -9.536697689327411e-06, -0.5083838105201721, -3.755022044060752e-05, -0.004198190290480852, -0.007943231612443924, -0.006094443611800671], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame must contain only numeric columns.\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numeric", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -1.1019949913024902, -0.19991616904735565, -0.021969052031636238, -0.2317705601453781, -2.151047945022583, -1.3982062339782715, -0.007757773622870445, -0.0007671750499866903, -0.001482222112827003], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -1.1030501127243042, -4.6491513785440475e-06, -0.06035060063004494, -0.08442151546478271], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.000276765669696033, -3.6954811548639555e-06, -2.622600959512056e-06, 0.0, -0.01605088822543621, -0.0032947564031928778], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.6773914098739624, -2.3841855067985307e-07, -9.417489309271332e-06, -0.00031799983116798103, -7.510157047363464e-06, -5.960462772236497e-07, -0.0006860524881631136, -0.0094126733019948, -0.0018641252536326647, -3.2543604902457446e-05, -1.1920928244535389e-07, -0.292234867811203, -0.034129537642002106], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.008362160995602608, -0.0014999578706920147, -0.001646116841584444, -2.1576648578047752e-05, -2.622600959512056e-06, -1.9073468138230965e-06, -1.7310974597930908, -2.264974000354414e-06, -1.7881377516459906e-06, -5.602820692729438e-06, -4.136476854910143e-05, -0.14778929948806763], "finish_reason": "stop"}], "metrics": {"energy": 555.5260076828002, "energy_per_token": 6.241865254862924, "time": 13.600018, "time_per_token": 0.15280919101123597}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError('The input DataFrame must contain only numerical values')", "tokens": [" Type", "Error", "('", "The", " input", " Data", "Frame", " must", " contain", " only", " numerical", " values", "')", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -1.919843316078186, -1.972651720046997, -2.1906442642211914, -0.1035933569073677, -0.003395508276298642, -0.9507153034210205, -0.2436758279800415, -0.025730624794960022, -1.6202807426452637, -0.15352848172187805, -0.5814274549484253, -0.0007607426377944648], "finish_reason": "stop"}, {"text": " df.empty or df.isna().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "na", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.020192183554172516, -0.0014879356604069471, -0.08692518621683121, -1.2500073909759521, -0.03529730811715126, -0.0005519058904610574, -0.008215679787099361, -1.384760856628418, -1.0132738680113107e-05, -5.960462772236497e-07, -0.5458494424819946, -4.0531076592742465e-06, -0.003732145531103015, -0.002099335426464677, -0.0014143711887300014], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.00039521988946944475, -7.152555099310121e-07, -0.00048792376765049994, -0.013638409785926342, -0.044855520129203796, -0.0007948100101202726, -0.0001262346631847322, -0.09019008278846741, -0.0045730057172477245, -0.001090289675630629, -0.008598684333264828, -0.03484116122126579, -0.0021077815908938646, -0.0023664822801947594, -0.018067074939608574, -0.0008717550663277507, -0.00041345154750160873, -0.0001287377526750788], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.011038192547857761, -0.0051009273156523705, -1.124385118484497, -5.125986263010418e-06, -0.05720192566514015, -0.0800122618675232], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00021884430316276848, -4.6491513785440475e-06, -3.4570634852570947e-06, 0.0, -0.015891214832663536, -0.0029768699314445257], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum), index=df_cumsum.index)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", " index", "=", "df", "_", "cum", "sum", ".", "index", ")", "\n"], "logprobs": [-0.7857089638710022, -4.649054244509898e-05, -0.000676998752169311, -0.0056534637697041035, -0.09570372849702835, -4.768370445162873e-07, -1.3828182090946939e-05, -0.00040522945346310735, -2.3841855067985307e-07, -1.4305104514278355e-06, -0.00018070495571009815, -0.010419494472444057, -0.0014647241914644837, -1.2636104656849056e-05, -2.3841855067985307e-07, -0.07369593530893326, -0.016149073839187622, -1.9908251762390137, -0.00117649941239506, -0.0008199428557418287, -0.1578313112258911, -2.6940935640595853e-05, -3.576278118089249e-07, -6.0437283536884934e-05, -3.3854863431770355e-05, -1.8713288307189941, -0.012702743522822857], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.010709431953728199, -0.0016448076348751783, -0.0013325868640094995, -2.0861407392658293e-05, -2.145764938177308e-06, -1.6689286894688848e-06, -0.29036009311676025], "finish_reason": "stop"}], "metrics": {"energy": 550.7546970882415, "energy_per_token": 5.619945888655526, "time": 13.597355, "time_per_token": 0.13874852040816327}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError('DataFrame contains non-numeric data types.')", "tokens": [" Type", "Error", "('", "DataFrame", " contains", " non", "-", "numeric", " data", " types", ".", "')", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -1.919843316078186, -0.3014824390411377, -0.3567880392074585, -0.015276804566383362, -0.005767371505498886, -0.010234848596155643, -0.2492537647485733, -0.06662750989198685, -2.3924882411956787, -0.06754739582538605, -0.002716662595048547], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.020192183554172516, -0.0014879356604069471, -0.08692518621683121, -0.3444173038005829, -0.00021026308240834624], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.00043025295599363744, -9.536738616588991e-07, -0.0004552758182398975, -0.01112897228449583, -0.03473719581961632, -0.0007244108128361404, -0.00011073929636040702, -0.09453493356704712, -0.005185368936508894, -0.0009216589969582856, -0.007903730496764183, -0.038063790649175644, -0.001731921685859561, -0.002166663995012641, -0.01800127699971199, -0.0009276139317080379, -0.00035470392322167754, -0.00011050090688513592], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.011742754839360714, -0.005102232098579407, -1.1066513061523438, -5.602820692729438e-06, -0.049627866595983505, -0.07857318967580795], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0002935693773906678, -3.933898824470816e-06, -4.172316494077677e-06, 0.0, -0.014382505789399147, -0.003123882692307234], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum), columns=df_cumsum.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", " columns", "=", "df", "_", "cum", "sum", ".", "columns", ")", "\n"], "logprobs": [-0.6960288286209106, -4.351044481154531e-05, -0.0005383234238252044, -0.00500924326479435, -0.09307143837213516, -5.960462772236497e-07, -1.4781842764932662e-05, -0.00025876989820972085, -4.768370445162873e-07, -1.4305104514278355e-06, -0.00022218143567442894, -0.008791076950728893, -0.0014938872773200274, -1.4543427823809907e-05, -1.1920928244535389e-07, -0.08746479451656342, -0.015131332911550999, -0.25230738520622253, -0.002189621329307556, -0.0016387379728257656, -0.32788240909576416, -5.006777428206988e-06, 0.0, -8.022463589441031e-05, -3.731181277544238e-05, -0.08626215159893036, -0.009757915511727333], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.008975398726761341, -0.0015349523164331913, -0.001142325927503407, -2.2649508537142538e-05, -2.861018856492592e-06, -1.7881377516459906e-06, -0.30574896931648254], "finish_reason": "stop"}], "metrics": {"energy": 548.3573520355224, "energy_per_token": 6.30295806937382, "time": 13.20232, "time_per_token": 0.15175080459770116}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " ValueError(\"DataFrame must contain only numeric data types\")", "tokens": [" Value", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numeric", " data", " types", "\"", ")", "\n"], "logprobs": [-2.021315813064575, -7.378782902378589e-05, -0.1306627094745636, -0.16796709597110748, -0.5284442901611328, -0.9717081785202026, -0.26219236850738525, -0.032330770045518875, -0.2752176821231842, -0.7690466046333313, -0.18287844955921173, -0.6877790093421936, -0.0006158839096315205, -0.0014041336253285408], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.017466770485043526, -0.0013136576162651181, -0.05725202336907387, -0.3023325800895691, -0.00022063204960431904], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0003992714046034962, -5.960462772236497e-07, -0.00042215018766000867, -0.011303198523819447, -0.045706022530794144, -0.0008962904685176909, -0.00011300401820335537, -0.0739617869257927, -0.00354519160464406, -0.0008879532688297331, -0.007109226193279028, -0.034087371081113815, -0.001943010720424354, -0.002560077467933297, -0.02189849503338337, -0.0009838269324973226, -0.0003129946126136929, -0.00010990492592100054], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.array(x).cumsum().reshape(-1, 1))", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "array", "(", "x", ")", ".", "cum", "sum", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.015370839275419712, -0.004907230380922556, -2.710550308227539, -0.002707508159801364, -0.25019800662994385, -0.33322036266326904, -0.0017933252966031432, -1.5351110696792603, -1.1920928244535389e-07, -2.2685365676879883, -0.2784287929534912, -0.045460574328899384, -1.0269160270690918, -0.03579971566796303, -0.012659426778554916, -3.4570634852570947e-06, -1.8361866474151611, -0.8541174530982971, -0.7312036156654358, -5.960462772236497e-07, -0.030457185581326485, -7.366862701019272e-05, -0.005536342039704323, -0.02896706759929657, -0.00021073981770314276, -0.09130510687828064, -0.06667178124189377], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026174934464506805, -3.2186455882765586e-06, -3.6954811548639555e-06, 0.0, -0.015897786244750023, -0.0036060088314116], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.6198199391365051, -3.576278118089249e-07, -1.3470558769768104e-05, -0.00028224775451235473, -6.318072337307967e-06, -5.960462772236497e-07, -0.0007974305190145969, -0.007827561348676682, -0.0017536989180371165, -2.3483953555114567e-05, -1.1920928244535389e-07, -0.3431468904018402, -0.028981078416109085], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.009659691713750362, -0.0014916256768628955, -0.0011362532386556268, -1.966933996300213e-05, -2.7418097943154862e-06, -1.5497195136049413e-06, -0.34655240178108215], "finish_reason": "stop"}], "metrics": {"energy": 569.2665838966371, "energy_per_token": 5.992279830490918, "time": 14.226342, "time_per_token": 0.14975096842105265}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-2.021315813064575, -7.378782902378589e-05, -0.1306627094745636, -2.100477457046509], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.017466770485043526, -0.0013136576162651181, -0.05725202336907387, -0.3023325800895691, -0.00022063204960431904], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0003992714046034962, -5.960462772236497e-07, -0.00042215018766000867, -0.011303198523819447, -0.045706022530794144, -0.0008962904685176909, -0.00011300401820335537, -0.0739617869257927, -0.00354519160464406, -0.0008879532688297331, -0.007109226193279028, -0.034087371081113815, -0.001943010720424354, -0.002560077467933297, -0.02189849503338337, -0.0009838269324973226, -0.0003129946126136929, -0.00010990492592100054], "finish_reason": "stop"}, {"text": " df.apply(lambda col: col.cumsum())", "tokens": [" df", ".", "apply", "(", "lambda", " col", ":", " col", ".", "cum", "sum", "())", "\n"], "logprobs": [-0.015370839275419712, -0.004907230380922556, -2.710550308227539, -0.002707508159801364, -0.25019800662994385, -1.4042233228683472, -0.0009831124916672707, -0.3265245258808136, -0.0033160243183374405, -0.0998421162366867, -7.271740287251305e-06, -0.36285290122032166, -0.046469546854496], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026174934464506805, -3.2186455882765586e-06, -3.6954811548639555e-06, 0.0, -0.015897786244750023, -0.0036060088314116], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.6198199391365051, -3.576278118089249e-07, -1.3470558769768104e-05, -0.00028224775451235473, -6.318072337307967e-06, -5.960462772236497e-07, -0.0007974305190145969, -0.007827561348676682, -0.0017536989180371165, -2.3483953555114567e-05, -1.1920928244535389e-07, -0.3431468904018402, -0.028981078416109085], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.009659691713750362, -0.0014916256768628955, -0.0011362532386556268, -1.966933996300213e-05, -2.7418097943154862e-06, -1.5497195136049413e-06, -0.34655240178108215], "finish_reason": "stop"}], "metrics": {"energy": 481.89412779426584, "energy_per_token": 6.787241236538955, "time": 12.111572, "time_per_token": 0.17058552112676056}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(f\"The DataFrame contains non-numeric data types: {df.columns}\")", "tokens": [" Type", "Error", "(", "f", "\"", "The", " Data", "Frame", " contains", " non", "-", "numeric", " data", " types", ":", " {", "df", ".", "columns", "}\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -2.974708318710327, -0.15818797051906586, -2.1905879974365234, -0.41130897402763367, -0.01182781532406807, -0.32700514793395996, -0.08320599049329758, -0.003499932587146759, -0.01635291986167431, -0.19953365623950958, -0.03920955955982208, -1.0912785530090332, -0.027226382866501808, -0.04893996939063072, -0.016626954078674316, -1.6429394483566284, -1.8246972560882568, -0.002021889900788665, -0.0009573881980031729], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.016759900376200676, -0.001723829424008727, -0.07340143620967865, -0.32910192012786865, -0.00018285033002030104], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0003847335756290704, -7.152555099310121e-07, -0.0005634627304971218, -0.012583383359014988, -0.042482029646635056, -0.0007874249131418765, -0.00012110930401831865, -0.0923503041267395, -0.0046440837904810905, -0.0010224120924249291, -0.00949982088059187, -0.03761889412999153, -0.0021130156237632036, -0.002678618300706148, -0.016843948513269424, -0.000916537712328136, -0.0003299168893136084, -0.00013839241000823677], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.012538649141788483, -0.0036081469152122736, -0.7109829187393188, -3.576272320060525e-06, -9.298280929215252e-06, -2.288792165927589e-05, -0.008245001547038555, -0.007584821432828903, -0.0188209880143404, -0.0012944899499416351, 0.0, -0.00011169286881340668, -0.0011555430246517062, -0.01733778417110443, -0.08208068460226059, -2.264974000354414e-06, -0.023588625714182854, -0.06996113061904907], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0002954761730507016, -3.3378546504536644e-06, -3.6954811548639555e-06, 0.0, -0.013755409978330135, -0.0033222027122974396], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum), columns=df_cumsum.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", " columns", "=", "df", "_", "cum", "sum", ".", "columns", ")", "\n"], "logprobs": [-0.7397855520248413, -3.659658250398934e-05, -0.0005430892342701554, -0.004452909342944622, -0.1275935173034668, -4.768370445162873e-07, -1.3947389561508317e-05, -0.00037400881410576403, -3.576278118089249e-07, -1.6689286894688848e-06, -0.00021455370006151497, -0.008761889301240444, -0.0015957729192450643, -1.847726889536716e-05, -3.576278118089249e-07, -0.07912547886371613, -0.014577314257621765, -0.24160507321357727, -0.002060435013845563, -0.0016875325236469507, -0.31274139881134033, -5.960446742392378e-06, 0.0, -7.509902934543788e-05, -3.135155202471651e-05, -0.0989190861582756, -0.007930577732622623], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.008199009113013744, -0.001557805109769106, -0.0012535341084003448, -2.5629668016335927e-05, -1.9073468138230965e-06, -1.6689286894688848e-06, -1.4556409120559692, -1.7881377516459906e-06, -2.264974000354414e-06, -4.887569048150908e-06, -2.777537883957848e-05, -0.16639666259288788], "finish_reason": "stop"}], "metrics": {"energy": 630.7465465354916, "energy_per_token": 5.581827845446828, "time": 15.265164, "time_per_token": 0.13508994690265488}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric values\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " values", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -0.5505996346473694, -0.014750705100595951, -0.002737823873758316, -0.009300478734076023, -1.90040123462677, -0.24804827570915222, -0.0010065733222290874, -0.0023154611699283123], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -0.762954592704773, -4.0531076592742465e-06, -1.3112935448589269e-05, -2.288792165927589e-05, -0.006163754966109991, -0.004806156270205975, -0.018759334459900856, -0.001684914343059063, 0.0, -9.965400386136025e-05, -0.0010550415609031916, -0.016484376043081284, -0.09555487334728241, -1.5497195136049413e-06, -0.024743760004639626, -0.06994712352752686], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum), columns=df_cumsum.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", " columns", "=", "df", "_", "cum", "sum", ".", "columns", ")", "\n"], "logprobs": [-0.6762939691543579, -2.586808113846928e-05, -0.0006768796010874212, -0.00496333884075284, -0.10683683305978775, -4.768370445162873e-07, -1.4662635294371285e-05, -0.0002240883477497846, -4.768370445162873e-07, -1.5497195136049413e-06, -0.00016258825780823827, -0.010969100520014763, -0.0015194787411019206, -1.3947389561508317e-05, -2.3841855067985307e-07, -0.08320917189121246, -0.01277206838130951, -0.27515730261802673, -0.0019192148465663195, -0.0013499680208042264, -0.3300972282886505, -4.768360213347478e-06, 0.0, -7.819823804311454e-05, -4.172238186583854e-05, -0.0948973298072815, -0.010558576323091984], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.007944532670080662, -0.001313776709139347, -0.0014418693026527762, -2.13382354559144e-05, -3.2186455882765586e-06, -1.5497195136049413e-06, -0.3262517750263214], "finish_reason": "stop"}], "metrics": {"energy": 621.0844965591432, "energy_per_token": 6.273580773324679, "time": 15.238838, "time_per_token": 0.15392765656565657}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric values\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " values", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -0.5505996346473694, -0.014750705100595951, -0.002737823873758316, -0.009300478734076023, -1.90040123462677, -0.24804827570915222, -0.0010065733222290874, -0.0023154611699283123], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -0.762954592704773, -4.0531076592742465e-06, -1.3112935448589269e-05, -2.288792165927589e-05, -0.006163754966109991, -0.004806156270205975, -0.018759334459900856, -0.001684914343059063, 0.0, -9.965400386136025e-05, -0.0010550415609031916, -0.016484376043081284, -0.09555487334728241, -1.5497195136049413e-06, -0.024743760004639626, -0.06994712352752686], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum),", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", "\n"], "logprobs": [-0.6762939691543579, -2.586808113846928e-05, -0.0006768796010874212, -0.00496333884075284, -0.10683683305978775, -4.768370445162873e-07, -1.4662635294371285e-05, -0.0002240883477497846, -4.768370445162873e-07, -1.5497195136049413e-06, -0.00016258825780823827, -0.010969100520014763, -0.0015194787411019206, -1.3947389561508317e-05, -2.3841855067985307e-07, -0.08320917189121246, -0.01277206838130951, -2.779311418533325], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.010351303964853287, -0.0016694430960342288, -0.0013892533024773002, -2.1815061700181104e-05, -2.145764938177308e-06, -1.7881377516459906e-06, -0.3323570787906647], "finish_reason": "stop"}], "metrics": {"energy": 590.6250797920228, "energy_per_token": 6.562500886578031, "time": 14.631229, "time_per_token": 0.1625692111111111}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame must contain only numeric data types\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numeric", " data", " types", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -1.1019949913024902, -0.19991616904735565, -0.021969052031636238, -0.2317705601453781, -0.4366162419319153, -0.08462439477443695, -0.5502544641494751, -0.0003746046277228743, -0.0013933007139712572], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -3.698589324951172, -0.024732597172260284, -0.21094559133052826], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum), index=df_cumsum.index)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", " index", "=", "df", "_", "cum", "sum", ".", "index", ")", "\n"], "logprobs": [-0.6762939691543579, -2.586808113846928e-05, -0.0006768796010874212, -0.00496333884075284, -0.10683683305978775, -4.768370445162873e-07, -1.4662635294371285e-05, -0.0002240883477497846, -4.768370445162873e-07, -1.5497195136049413e-06, -0.00016258825780823827, -0.010969100520014763, -0.0015194787411019206, -1.3947389561508317e-05, -2.3841855067985307e-07, -0.08320917189121246, -0.01277206838130951, -1.7434190511703491, -0.0010489681735634804, -0.0007393010891973972, -0.22309787571430206, -2.5748875486897305e-05, -5.960462772236497e-07, -7.283422019099817e-05, -2.3007127310847864e-05, -2.211408853530884, -0.012762770988047123], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.010351303964853287, -0.0016694430960342288, -0.0013892533024773002, -2.1815061700181104e-05, -2.145764938177308e-06, -1.7881377516459906e-06, -0.3323570787906647], "finish_reason": "stop"}], "metrics": {"energy": 535.3793159103393, "energy_per_token": 6.153785240348728, "time": 13.007265, "time_per_token": 0.14950879310344828}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame must contain only numerical data types\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numerical", " data", " types", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -1.1019949913024902, -0.19991616904735565, -0.021969052031636238, -1.5919008255004883, -1.3508996963500977, -0.250773161649704, -0.49092626571655273, -0.00043096792069263756, -0.0015349523164331913], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -1.1030501127243042, -4.6491513785440475e-06, -0.06035060063004494, -0.08442151546478271], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.000276765669696033, -3.6954811548639555e-06, -2.622600959512056e-06, 0.0, -0.01605088822543621, -0.0032947564031928778], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.6773914098739624, -2.3841855067985307e-07, -9.417489309271332e-06, -0.00031799983116798103, -7.510157047363464e-06, -5.960462772236497e-07, -0.0006860524881631136, -0.0094126733019948, -0.0018641252536326647, -3.2543604902457446e-05, -1.1920928244535389e-07, -0.292234867811203, -0.034129537642002106], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.008362160995602608, -0.0014999578706920147, -0.001646116841584444, -2.1576648578047752e-05, -2.622600959512056e-06, -1.9073468138230965e-06, -0.2790749669075012], "finish_reason": "stop"}], "metrics": {"energy": 471.9826650447846, "energy_per_token": 6.378144122226819, "time": 12.12835, "time_per_token": 0.1638966216216216}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric data types\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", " types", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -0.5505996346473694, -0.014750705100595951, -0.002737823873758316, -0.009300478734076023, -0.22297969460487366, -0.058661941438913345, -0.21445292234420776, -0.0007551440503448248, -0.0009871615329757333], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -0.762954592704773, -4.0531076592742465e-06, -1.3112935448589269e-05, -2.288792165927589e-05, -0.006163754966109991, -0.004806156270205975, -0.018759334459900856, -0.001684914343059063, 0.0, -9.965400386136025e-05, -0.0010550415609031916, -0.016484376043081284, -0.09555487334728241, -1.5497195136049413e-06, -0.024743760004639626, -0.06994712352752686], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.select_dtypes(include=np.number))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", "))", "\n"], "logprobs": [-0.7519584894180298, -3.576278118089249e-07, -1.1444026313256472e-05, -0.00022754464589525014, -5.960446742392378e-06, -7.152555099310121e-07, -0.0006469779182225466, -0.012846567668020725, -0.0015528061194345355, -2.539125671319198e-05, -1.1920928244535389e-07, -1.332388997077942, -0.9044338464736938, -3.2186455882765586e-06, -5.125986263010418e-06, -1.5497195136049413e-06, -0.003318163100630045, -0.028264805674552917, -0.04056374356150627, -0.0017551269847899675, -4.768370445162873e-07, -0.0007487116381525993, -0.04927705600857735, -0.00543782114982605], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.007469108793884516, -0.002082324121147394, -0.0014885308919474483, -2.3603161025675945e-05, -2.50339189733495e-06, -2.0265558760002023e-06, -0.32721996307373047], "finish_reason": "stop"}], "metrics": {"energy": 617.9236806449892, "energy_per_token": 6.370347223144218, "time": 14.26524, "time_per_token": 0.1470643298969072}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " ValueError(\"DataFrame must contain only numeric values\")", "tokens": [" Value", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numeric", " values", "\"", ")", "\n"], "logprobs": [-2.021315813064575, -7.378782902378589e-05, -0.1306627094745636, -0.16796709597110748, -0.5284442901611328, -0.9717081785202026, -0.26219236850738525, -0.032330770045518875, -0.2752176821231842, -1.0106885433197021, -0.33460715413093567, -0.0008996253600344062, -0.002610372845083475], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.017466770485043526, -0.0013136576162651181, -0.05725202336907387, -0.3023325800895691, -0.00022063204960431904], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0003992714046034962, -5.960462772236497e-07, -0.00042215018766000867, -0.011303198523819447, -0.045706022530794144, -0.0008962904685176909, -0.00011300401820335537, -0.0739617869257927, -0.00354519160464406, -0.0008879532688297331, -0.007109226193279028, -0.034087371081113815, -0.001943010720424354, -0.002560077467933297, -0.02189849503338337, -0.0009838269324973226, -0.0003129946126136929, -0.00010990492592100054], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.015370839275419712, -0.004907230380922556, -1.1611500978469849, -5.006777428206988e-06, -0.053828924894332886, -0.0737331435084343], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.000248401309363544, -3.576272320060525e-06, -3.3378546504536644e-06, 0.0, -0.015395491383969784, -0.0034228330478072166], "finish_reason": "stop"}, {"text": " pd.DataFrame(", "tokens": [" pd", ".", "DataFrame", "(", "\n"], "logprobs": [-0.7085779905319214, -4.5060096454108134e-05, -0.0007768235518597066, -0.004046348854899406, -1.9368031024932861], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.010680772364139557, -0.0015653035370633006, -0.0012435331009328365, -2.47952248173533e-05, -2.3841830625315197e-06, -1.7881377516459906e-06, -0.3625628650188446], "finish_reason": "stop"}], "metrics": {"energy": 471.643449842453, "energy_per_token": 7.256053074499277, "time": 12.107867, "time_per_token": 0.18627487692307693}}
{"outputs": [{"text": " not all(pd.api.types.is_numeric_dtype(df[col]) for col in df.columns):", "tokens": [" not", " all", "(", "pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "df", "[", "col", "])", " for", " col", " in", " df", ".", "columns", "):", "\n"], "logprobs": [-2.6063601970672607, -1.582890272140503, -0.32285815477371216, -1.3886423110961914, -2.8490614567999728e-05, -0.01599234901368618, -1.0728830375228426e-06, -7.986990567587782e-06, -7.510157047363464e-06, -0.00032181330607272685, -2.3841830625315197e-06, -0.023094139993190765, -2.50339189733495e-06, -0.001057542278431356, -8.344646857949556e-07, -0.0012672259472310543, -1.189319372177124, -0.09882146120071411, -0.09038504213094711, -0.002334847114980221, -0.003185438457876444, -5.4596363042946905e-05, -0.00020418466010596603, -0.0012835367815569043, -0.46987026929855347, -0.0004804172203876078, -0.009307446889579296, -0.0024170251563191414], "finish_reason": "stop"}, {"text": " ValueError(\"DataFrame must contain only numeric values\")", "tokens": [" Value", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numeric", " values", "\"", ")", "\n"], "logprobs": [-2.021315813064575, -7.378782902378589e-05, -0.1306627094745636, -0.16796709597110748, -0.5284442901611328, -0.9717081785202026, -0.26219236850738525, -0.032330770045518875, -0.2752176821231842, -1.0106885433197021, -0.33460715413093567, -0.0008996253600344062, -0.002610372845083475], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.017466770485043526, -0.0013136576162651181, -0.05725202336907387, -0.3023325800895691, -0.00022063204960431904], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0003992714046034962, -5.960462772236497e-07, -0.00042215018766000867, -0.011303198523819447, -0.045706022530794144, -0.0008962904685176909, -0.00011300401820335537, -0.0739617869257927, -0.00354519160464406, -0.0008879532688297331, -0.007109226193279028, -0.034087371081113815, -0.001943010720424354, -0.002560077467933297, -0.02189849503338337, -0.0009838269324973226, -0.0003129946126136929, -0.00010990492592100054], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.015370839275419712, -0.004907230380922556, -1.1611500978469849, -5.006777428206988e-06, -0.053828924894332886, -0.0737331435084343], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.000248401309363544, -3.576272320060525e-06, -3.3378546504536644e-06, 0.0, -0.015395491383969784, -0.0034228330478072166], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.7092188596725464, -2.3841855067985307e-07, -1.3112935448589269e-05, -0.00019596086349338293, -6.198863957251888e-06, -5.960462772236497e-07, -0.0007363230688497424, -0.013707200065255165, -0.001405204995535314, -2.6940935640595853e-05, -1.1920928244535389e-07, -0.3413473069667816, -0.03479890897870064], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum"], "logprobs": [-0.008106189779937267, -0.0013394916895776987, -0.001341753639280796, -1.9073304429184645e-05, -2.7418097943154862e-06, -1.5497195136049413e-06], "finish_reason": "stop"}], "metrics": {"energy": 619.5489626770018, "energy_per_token": 6.521568028178966, "time": 15.503057, "time_per_token": 0.16319007368421054}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric data types\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", " types", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -0.5505996346473694, -0.014750705100595951, -0.002737823873758316, -0.009300478734076023, -0.22297969460487366, -0.058661941438913345, -0.21445292234420776, -0.0007551440503448248, -0.0009871615329757333], "finish_reason": "stop"}, {"text": " df.empty or df.isnull().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "null", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -1.188530683517456, -0.027261996641755104, -0.0003985564399044961, -0.008779851719737053, -0.23679260909557343, -4.31528314948082e-05, -7.152555099310121e-07, -0.2070147693157196, -4.482168878894299e-05, -0.0014435357879847288, -0.0008441222598776221, -0.0017475108616054058], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0003393312799744308, -5.960462772236497e-07, -0.0004477690381463617, -0.01331685483455658, -0.03986385464668274, -0.0006768796010874212, -0.00011252723925281316, -0.08376723527908325, -0.005449914373457432, -0.0011860248632729053, -0.00749561283737421, -0.031886085867881775, -0.002052940195426345, -0.0024852838832885027, -0.017067458480596542, -0.0007911174325272441, -0.00036507140612229705, -0.00011467275908216834], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.012165277265012264, -0.004150111693888903, -0.6614591479301453, -2.145764938177308e-06, -1.1205610462639015e-05, -2.9801878554280847e-05, -0.007153375539928675, -0.005786809138953686, -0.020974263548851013, -0.001302347518503666, -1.1920928244535389e-07, -0.00010096516780322418, -0.0012541294563561678, -0.017177965492010117, -0.09552507847547531, -1.7881377516459906e-06, -0.026941543444991112, -0.0716603472828865], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.000291662581730634, -3.6954811548639555e-06, -2.7418097943154862e-06, 0.0, -0.017169762402772903, -0.003389805555343628], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.8932004570960999, -4.768370445162873e-07, -1.0490362910786644e-05, -0.00028200942324474454, -4.529942543740617e-06, -5.960462772236497e-07, -0.0007537146448157728, -0.010610711760818958, -0.0015551865799352527, -2.8132995794294402e-05, -2.3841855067985307e-07, -0.2876253128051758, -0.03222654387354851], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.007362139876931906, -0.0015067425556480885, -0.001255200942978263, -2.2053474822314456e-05, -2.0265558760002023e-06, -1.5497195136049413e-06, -0.3039884865283966], "finish_reason": "stop"}], "metrics": {"energy": 545.1321549606322, "energy_per_token": 5.678459947506585, "time": 13.829319, "time_per_token": 0.14405540625}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric data types\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", " types", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -0.5505996346473694, -0.014750705100595951, -0.002737823873758316, -0.009300478734076023, -0.22297969460487366, -0.058661941438913345, -0.21445292234420776, -0.0007551440503448248, -0.0009871615329757333], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -0.762954592704773, -4.0531076592742465e-06, -1.3112935448589269e-05, -2.288792165927589e-05, -0.006163754966109991, -0.004806156270205975, -0.018759334459900856, -0.001684914343059063, 0.0, -9.965400386136025e-05, -0.0010550415609031916, -0.016484376043081284, -0.09555487334728241, -1.5497195136049413e-06, -0.024743760004639626, -0.06994712352752686], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.7519584894180298, -3.576278118089249e-07, -1.1444026313256472e-05, -0.00022754464589525014, -5.960446742392378e-06, -7.152555099310121e-07, -0.0006469779182225466, -0.012846567668020725, -0.0015528061194345355, -2.539125671319198e-05, -1.1920928244535389e-07, -0.3147784471511841, -0.03572678938508034], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.007469108793884516, -0.002082324121147394, -0.0014885308919474483, -2.3603161025675945e-05, -2.50339189733495e-06, -2.0265558760002023e-06, -0.32721996307373047], "finish_reason": "stop"}], "metrics": {"energy": 572.3493995704654, "energy_per_token": 6.655225576400761, "time": 14.483902, "time_per_token": 0.16841746511627909}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric data types\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", " types", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -0.5505996346473694, -0.014750705100595951, -0.002737823873758316, -0.009300478734076023, -0.22297969460487366, -0.058661941438913345, -0.21445292234420776, -0.0007551440503448248, -0.0009871615329757333], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -3.698589324951172, -0.024732597172260284, -0.21094559133052826], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.7519584894180298, -3.576278118089249e-07, -1.1444026313256472e-05, -0.00022754464589525014, -5.960446742392378e-06, -7.152555099310121e-07, -0.0006469779182225466, -0.012846567668020725, -0.0015528061194345355, -2.539125671319198e-05, -1.1920928244535389e-07, -0.3147784471511841, -0.03572678938508034], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum"], "logprobs": [-0.007469108793884516, -0.002082324121147394, -0.0014885308919474483, -2.3603161025675945e-05, -2.50339189733495e-06, -2.0265558760002023e-06], "finish_reason": "stop"}], "metrics": {"energy": 471.6952028484343, "energy_per_token": 6.55132226178381, "time": 12.147038, "time_per_token": 0.1687088611111111}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame should only contain numeric values.\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " should", " only", " contain", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -2.9263453483581543, -1.811042308807373, -0.05755851790308952, -0.24073399603366852, -1.011851191520691, -0.9948009848594666, -0.011770795099437237, -0.0007320346776396036, -0.0017199022695422173], "finish_reason": "stop"}, {"text": " df.empty or df.isna().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "na", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -1.188530683517456, -0.027261996641755104, -0.0003985564399044961, -0.008779851719737053, -1.5575017929077148, -1.0013530300057027e-05, -7.152555099310121e-07, -0.472920298576355, -3.6954811548639555e-06, -0.001981677720323205, -0.0024547225330024958, -0.0017127619357779622], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0003575639275368303, -8.344646857949556e-07, -0.0005270045949146152, -0.013384608551859856, -0.047503646463155746, -0.0007596705690957606, -0.00012444675667211413, -0.10770763456821442, -0.0036816690117120743, -0.0010549224680289626, -0.008121088147163391, -0.03289499878883362, -0.0024210684932768345, -0.0024380742106586695, -0.018006546422839165, -0.0008524598088115454, -0.0003268184664193541, -0.00012790338951162994], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.01195527520030737, -0.00420388812199235, -0.8195716142654419, -3.2186455882765586e-06, -1.1920858014491387e-05, -1.7762025890988298e-05, -0.006226782221347094, -0.006631628610193729, -0.021123206242918968, -0.0018096276326104999, -1.1920928244535389e-07, -0.00013767725613433868, -0.0013997290516272187, -0.018048811703920364, -0.14361995458602905, -2.3841830625315197e-06, -0.02774943970143795, -0.07209279388189316], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0002802217786666006, -4.768360213347478e-06, -4.6491513785440475e-06, 0.0, -0.016141213476657867, -0.0027323553804308176], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ")", "\n"], "logprobs": [-0.6152762174606323, -3.576278118089249e-07, -1.5139465176616795e-05, -0.0002603192115202546, -1.0013530300057027e-05, -5.960462772236497e-07, -0.0010238410905003548, -0.01052413135766983, -0.0018789985915645957, -2.8013790142722428e-05, -2.3841855067985307e-07, -1.3123984336853027, -1.2004899978637695, -0.12196050584316254, -0.01661323755979538], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.00882877130061388, -0.0015568528324365616, -0.0010742137674242258, -2.1576648578047752e-05, -1.9073468138230965e-06, -1.4305104514278355e-06, -0.33636680245399475], "finish_reason": "stop"}], "metrics": {"energy": 587.9858112239835, "energy_per_token": 5.999855216571261, "time": 14.652884, "time_per_token": 0.14951922448979593}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame must contain only numerical values\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numerical", " values", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -1.1019949913024902, -0.19991616904735565, -0.021969052031636238, -1.5919008255004883, -0.33260440826416016, -0.3879331946372986, -0.0005876483046449721, -0.0017147850012406707], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -1.1030501127243042, -4.6491513785440475e-06, -0.06035060063004494, -0.08442151546478271], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.000276765669696033, -3.6954811548639555e-06, -2.622600959512056e-06, 0.0, -0.01605088822543621, -0.0032947564031928778], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.6773914098739624, -2.3841855067985307e-07, -9.417489309271332e-06, -0.00031799983116798103, -7.510157047363464e-06, -5.960462772236497e-07, -0.0006860524881631136, -0.0094126733019948, -0.0018641252536326647, -3.2543604902457446e-05, -1.1920928244535389e-07, -0.292234867811203, -0.034129537642002106], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.008362160995602608, -0.0014999578706920147, -0.001646116841584444, -2.1576648578047752e-05, -2.622600959512056e-06, -1.9073468138230965e-06, -0.2790749669075012], "finish_reason": "stop"}], "metrics": {"energy": 467.0375795383454, "energy_per_token": 6.397775062169115, "time": 12.114893, "time_per_token": 0.1659574383561644}}
{"outputs": [{"text": " df.empty or df.isnull().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "null", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -2.6704108715057373, -0.03467098996043205, -0.0017972521018236876, -0.00643064733594656, -0.20871520042419434, -9.142934868577868e-05, -9.536697689327411e-06, -0.5083838105201721, -3.755022044060752e-05, -0.004198190290480852, -0.007943231612443924, -0.006094443611800671], "finish_reason": "stop"}, {"text": " TypeError(\"The input DataFrame must contain only numeric data types\")", "tokens": [" Type", "Error", "(", "\"", "The", " input", " Data", "Frame", " must", " contain", " only", " numeric", " data", " types", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -2.2542779445648193, -2.3968002796173096, -0.07814143598079681, -0.0032188291661441326, -0.9309680461883545, -0.17898891866207123, -0.025116652250289917, -0.23318634927272797, -0.8233344554901123, -0.1584615856409073, -1.1053886413574219, -0.00052426423644647, -0.0005072260973975062], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -0.762954592704773, -4.0531076592742465e-06, -1.3112935448589269e-05, -2.288792165927589e-05, -0.006163754966109991, -0.004806156270205975, -0.018759334459900856, -0.001684914343059063, 0.0, -9.965400386136025e-05, -0.0010550415609031916, -0.016484376043081284, -0.09555487334728241, -1.5497195136049413e-06, -0.024743760004639626, -0.06994712352752686], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum), columns=df_cumsum.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", " columns", "=", "df", "_", "cum", "sum", ".", "columns", ")", "\n"], "logprobs": [-0.6762939691543579, -2.586808113846928e-05, -0.0006768796010874212, -0.00496333884075284, -0.10683683305978775, -4.768370445162873e-07, -1.4662635294371285e-05, -0.0002240883477497846, -4.768370445162873e-07, -1.5497195136049413e-06, -0.00016258825780823827, -0.010969100520014763, -0.0015194787411019206, -1.3947389561508317e-05, -2.3841855067985307e-07, -0.08320917189121246, -0.01277206838130951, -0.27515730261802673, -0.0019192148465663195, -0.0013499680208042264, -0.3300972282886505, -4.768360213347478e-06, 0.0, -7.819823804311454e-05, -4.172238186583854e-05, -0.0948973298072815, -0.010558576323091984], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum"], "logprobs": [-0.007944532670080662, -0.001313776709139347, -0.0014418693026527762, -2.13382354559144e-05, -3.2186455882765586e-06, -1.5497195136049413e-06], "finish_reason": "stop"}], "metrics": {"energy": 632.0483238658901, "energy_per_token": 5.643288605945448, "time": 15.270774, "time_per_token": 0.13634619642857143}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.12347286194562912, -0.04149109870195389, -0.042191218584775925, -0.07573379576206207, -0.013587490655481815], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric data types\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", " types", "\"", ")", "\n"], "logprobs": [-0.14810289442539215, -1.311301275563892e-06, -0.17695772647857666, -0.14294420182704926, -0.23000510036945343, -0.5505996346473694, -0.014750705100595951, -0.002737823873758316, -0.009300478734076023, -0.22297969460487366, -0.058661941438913345, -0.21445292234420776, -0.0007551440503448248, -0.0009871615329757333], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.015290657989680767, -0.0012075759004801512, -0.07541237026453018, -0.3701827824115753, -0.00021431533969007432], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0004294188693165779, -8.344646857949556e-07, -0.0004898302140645683, -0.008065038360655308, -0.03452439606189728, -0.0008597253472544253, -0.00014828535495325923, -0.09493906795978546, -0.004987655207514763, -0.0010009760735556483, -0.008478716015815735, -0.030801020562648773, -0.002031288342550397, -0.002093982184305787, -0.016024962067604065, -0.0006889115320518613, -0.00038914260221645236, -0.00010382589971413836], "finish_reason": "stop"}, {"text": " df.select_dtypes(include=np.number).cumsum()", "tokens": [" df", ".", "select", "_", "d", "types", "(", "include", "=", "np", ".", "number", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.013136626221239567, -0.0045533073134720325, -0.762954592704773, -4.0531076592742465e-06, -1.3112935448589269e-05, -2.288792165927589e-05, -0.006163754966109991, -0.004806156270205975, -0.018759334459900856, -0.001684914343059063, 0.0, -9.965400386136025e-05, -0.0010550415609031916, -0.016484376043081284, -0.09555487334728241, -1.5497195136049413e-06, -0.024743760004639626, -0.06994712352752686], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.00026723151677288115, -4.291525328881107e-06, -3.814689989667386e-06, 0.0, -0.01659049093723297, -0.0026751705445349216], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum), columns=df_cumsum.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", " columns", "=", "df", "_", "cum", "sum", ".", "columns", ")", "\n"], "logprobs": [-0.6762939691543579, -2.586808113846928e-05, -0.0006768796010874212, -0.00496333884075284, -0.10683683305978775, -4.768370445162873e-07, -1.4662635294371285e-05, -0.0002240883477497846, -4.768370445162873e-07, -1.5497195136049413e-06, -0.00016258825780823827, -0.010969100520014763, -0.0015194787411019206, -1.3947389561508317e-05, -2.3841855067985307e-07, -0.08320917189121246, -0.01277206838130951, -0.27515730261802673, -0.0019192148465663195, -0.0013499680208042264, -0.3300972282886505, -4.768360213347478e-06, 0.0, -7.819823804311454e-05, -4.172238186583854e-05, -0.0948973298072815, -0.010558576323091984], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.007944532670080662, -0.001313776709139347, -0.0014418693026527762, -2.13382354559144e-05, -3.2186455882765586e-06, -1.5497195136049413e-06, -0.3262517750263214], "finish_reason": "stop"}], "metrics": {"energy": 588.2068804359435, "energy_per_token": 5.882068804359435, "time": 14.018618, "time_per_token": 0.14018618}}
