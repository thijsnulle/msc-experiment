{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.7605302929878235, -0.06602118164300919, -0.20933374762535095, -0.7664977312088013, -0.027713032439351082], "finish_reason": "stop"}, {"text": " TypeError('The DataFrame contains non-numeric data types.')", "tokens": [" Type", "Error", "('", "The", " Data", "Frame", " contains", " non", "-", "numeric", " data", " types", ".", "')", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -1.8339295387268066, -1.2653231620788574, -0.3938041925430298, -0.003958842717111111, -0.44297656416893005, -0.010007327422499657, -0.0026223815511912107, -0.01939382404088974, -0.0303682591766119, -0.011459480971097946, -0.4962368309497833, -0.01569185219705105, -0.0021506056655198336], "finish_reason": "stop"}, {"text": " df.isna().values.any():", "tokens": [" df", ".", "is", "na", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.17857418954372406, -0.0033926567994058132, -0.9604960083961487, -0.8185505867004395, -0.0024995533749461174, -0.00013410145766101778, -0.8480851650238037, -0.0007857572636567056, -0.01920427940785885, -0.14986854791641235, -0.0030077716801315546], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002454841509461403, -3.5523738915799186e-05, -0.008304587565362453, -0.007475734688341618, -0.034810539335012436, -0.001788208493962884, -0.0014081810368224978, -1.2751696109771729, -0.036947961896657944, -0.0076824212446808815, -0.016012292355298996, -0.018892697989940643, -0.0024541281163692474, -0.0003121604095213115, -0.0011794761521741748], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.16151420772075653, -0.0319245345890522, -2.1479411125183105, -0.04428032413125038, -0.09088513255119324], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0012281740782782435, -0.00021801002731081098, -0.005185013171285391, -1.311301275563892e-06, -0.4167839586734772, -0.015173720195889473], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.35525137186050415, 0.0, -0.00013207517622504383, -0.0532488077878952, -0.014379685744643211, -9.297892393078655e-05, -0.0019647832959890366, -0.03431189805269241, -0.008340172469615936, -3.6954811548639555e-06, -7.080780778778717e-05, -0.3299035429954529, -0.25455671548843384, -0.1142948791384697, -0.006089111790060997, -1.1920922133867862e-06, -0.11849179118871689, -3.886147169396281e-05, -0.00014673586701974273, -0.05495914816856384, -0.0002416080387774855, -0.016855085268616676, -0.25115057826042175], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.0028953319415450096, -0.0012703214306384325, -0.0008962904685176909, -3.302042750874534e-05, -1.311301275563892e-06, -5.209310256759636e-05, -0.7018195986747742], "finish_reason": "stop"}], "metrics": {"energy": 207.02957703781132, "energy_per_token": 2.3796503107794407, "time": 7.1137724, "time_per_token": 0.08176749885057472}}
{"outputs": [{"text": " df.empty or df.isna().any().any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "na", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.5647587776184082, -0.25824210047721863, -0.011208898387849331, -0.03835006803274155, -0.5590254664421082, -0.026101406663656235, -0.00020489977032411844, -0.6134973764419556, -0.23202712833881378, -0.07451142370700836, -0.019518686458468437, -0.016688505187630653, -0.03392179310321808], "finish_reason": "stop"}, {"text": " TypeError('Input DataFrame contains non-numeric data types.')", "tokens": [" Type", "Error", "('", "Input", " Data", "Frame", " contains", " non", "-", "numeric", " data", " types", ".", "')", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -1.8339295387268066, -2.556518077850342, -0.7672030925750732, -0.015307915396988392, -0.47798052430152893, -0.019360968843102455, -0.006031644530594349, -0.07763394713401794, -0.10535230487585068, -0.02597968652844429, -0.8855952024459839, -0.012475665658712387, -0.00250680698081851], "finish_reason": "stop"}, {"text": " df.empty or (df.isnull()).values.any():", "tokens": [" df", ".", "empty", " or", " (", "df", ".", "is", "null", "())", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.17857418954372406, -0.0033926567994058132, -0.7802610993385315, -0.7948645353317261, -2.356858730316162, -0.05571756139397621, -0.21244466304779053, -0.12227290868759155, -0.5207152962684631, -1.275774359703064, -0.0022916740272194147, -0.9313792586326599, -0.003831784473732114, -0.14926867187023163, -0.05697549879550934, -0.00632025022059679], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0026442583184689283, -3.325883881188929e-05, -0.009839014150202274, -0.007337880786508322, -0.04174220934510231, -0.001712642959319055, -0.0012744885170832276, -1.3986632823944092, -0.04264642298221588, -0.006006049923598766, -0.01591479778289795, -0.02257714979350567, -0.002558888401836157, -0.00026806574896909297, -0.0010587330907583237], "finish_reason": "stop"}, {"text": " df.cumsum().sort_values(axis=1, ascending=True)", "tokens": [" df", ".", "cum", "sum", "()", ".", "sort", "_", "values", "(", "axis", "=", "1", ",", " ascending", "=", "True", ")", "\n"], "logprobs": [-0.18356318771839142, -0.035835713148117065, -0.18078559637069702, -0.0010176486102864146, -0.15849922597408295, -0.7244729995727539, -3.4732885360717773, -0.000659248442389071, -0.7746105790138245, -0.5685139298439026, -1.6675455570220947, -0.018533511087298393, -0.9359487295150757, -0.9860358238220215, -0.09813202172517776, -0.0033308761194348335, -0.26043760776519775, -0.05944473668932915, -0.38239267468452454], "finish_reason": "stop"}, {"text": " MinMaxScaler(copy=True, feature_range=(0, 1))", "tokens": [" Min", "Max", "Scal", "er", "(", "copy", "=", "True", ",", " feature", "_", "range", "=(", "0", ",", " ", "1", "))", "\n"], "logprobs": [-0.0012724645202979445, -0.0002324311062693596, -0.005243714898824692, -1.4305104514278355e-06, -1.194811224937439, -1.0956424474716187, -0.005822957493364811, -0.27810174226760864, -0.008965120650827885, -0.8357088565826416, -0.0001456631434848532, -0.0010626628063619137, -0.048567116260528564, -0.0024023978039622307, -0.024106837809085846, -0.01521164458245039, -0.002801424590870738, -0.2826424241065979, -0.0349721685051918], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum.values.reshape(1, -1)), columns=df_cumsum.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(", "1", ",", " -", "1", "))", ",", " columns", "=", "df", "_", "cum", "sum", ".", "columns", ")", "\n"], "logprobs": [-1.3781291246414185, -0.002383369952440262, -0.018249226734042168, -0.0845874771475792, -0.05940362066030502, -2.3603161025675945e-05, -9.333651541965082e-05, -0.0732051283121109, -0.007738492451608181, -7.545663538621739e-05, -0.0014315128792077303, -0.015296762809157372, -0.006972150411456823, -2.264974000354414e-06, -4.458328112377785e-05, -0.676376223564148, -0.18602481484413147, -0.92781662940979, -0.11656858772039413, -1.1920922133867862e-06, -2.1390843391418457, -0.24994271993637085, -0.00015710550360381603, -0.11504436284303665, -0.00024399164249189198, -0.3713701367378235, -0.17207971215248108, -1.6541553735733032, -0.026899537071585655, -0.01499640941619873, -0.395112007856369, -0.0005544078885577619, -7.795983401592821e-05, -0.00040046300273388624, -0.004900231491774321, -0.22512027621269226, -0.010574381798505783], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.0031657125800848007, -0.0011405398836359382, -0.000860320869833231, -2.884823152271565e-05, -1.1920922133867862e-06, -6.675497570540756e-05, -0.6486296057701111], "finish_reason": "stop"}], "metrics": {"energy": 242.46403903007507, "energy_per_token": 1.6837780488199658, "time": 8.791081, "time_per_token": 0.06104917361111111}}
{"outputs": [{"text": " df.empty or df.isna().any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "na", "()", ".", "any", "():", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.5647587776184082, -0.25824210047721863, -0.011208898387849331, -0.03835006803274155, -0.5590254664421082, -0.026101406663656235, -0.00020489977032411844, -0.6134973764419556, -1.6235524415969849, -0.04141618683934212], "finish_reason": "stop"}, {"text": " TypeError(\"The DataFrame contains non-numeric data types.\")", "tokens": [" Type", "Error", "(", "\"", "The", " Data", "Frame", " contains", " non", "-", "numeric", " data", " types", ".", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -1.0753954648971558, -0.30123788118362427, -0.002748999046161771, -0.40570300817489624, -0.0065924301743507385, -0.0013654442736878991, -0.01596994139254093, -0.02917364239692688, -0.010768282227218151, -0.24174576997756958, -0.00989224947988987, -0.00031442465842701495, -0.004078404977917671], "finish_reason": "stop"}, {"text": " not df.index.is_monotonic:", "tokens": [" not", " df", ".", "index", ".", "is", "_", "mon", "ot", "onic", ":", "\n"], "logprobs": [-2.5095763206481934, -0.2785434126853943, -0.02245243638753891, -3.403620719909668, -0.01752662844955921, -0.43357425928115845, -0.004884809721261263, -1.4158656597137451, -0.0020437799394130707, -1.311301275563892e-06, -1.4410357475280762, -0.010713205672800541], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002414646791294217, -4.100715523236431e-05, -0.009087983518838882, -0.006684798281639814, -0.03734423592686653, -0.0018893502419814467, -0.0013431822881102562, -0.2894611358642578, -0.0011547094909474254, -0.013334499672055244, -0.0066458391956985, -0.004683596082031727, -0.010072356089949608, -0.0022033003624528646, -0.007777882274240255, -0.000809818331617862, -0.000402250443585217, -0.0014350840356200933], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.15256847441196442, -0.033373940736055374, -0.15258720517158508, -0.0009423820883966982, -0.19071082770824432, -0.822538435459137], "finish_reason": "stop"}, {"text": " MinMaxScaler(feature_range=(0, 1), copy=True)", "tokens": [" Min", "Max", "Scal", "er", "(", "feature", "_", "range", "=(", "0", ",", " ", "1", ")", ",", " copy", "=", "True", ")", "\n"], "logprobs": [-0.0012705596163868904, -0.00020895205670967698, -0.004373983945697546, -1.4305104514278355e-06, -1.1190599203109741, -0.48887062072753906, -1.7881377516459906e-06, -0.00012313561455812305, -0.09128835052251816, -0.004026639740914106, -0.026919495314359665, -0.03787419572472572, -0.004697122145444155, -2.0753331184387207, -0.0004648081958293915, -0.23295557498931885, -0.00289794709533453, -0.8432713150978088, -0.20759378373622894, -0.03530237078666687], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.3532179892063141, 0.0, -0.00013505500101018697, -0.0351579450070858, -0.018498286604881287, -9.643566590966657e-05, -0.0023814670275896788, -0.039130233228206635, -0.008595493622124195, -3.576272320060525e-06, -7.819823804311454e-05, -0.35304346680641174, -0.26510220766067505, -0.09929025173187256, -0.005835757125169039, -9.536738616588991e-07, -0.10306141525506973, -3.9219088648678735e-05, -0.0002706876548472792, -0.059242747724056244, -0.00022659118985757232, -0.018627941608428955, -0.23723767697811127], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.003481163177639246, -0.0012313887709751725, -0.0009723940747790039, -3.123234637314454e-05, -1.1920922133867862e-06, -4.482168878894299e-05, -0.7555912137031555], "finish_reason": "stop"}], "metrics": {"energy": 208.79898609733587, "energy_per_token": 1.799991259459792, "time": 7.5199265, "time_per_token": 0.0648269525862069}}
{"outputs": [{"text": " df.isnull().any().any():", "tokens": [" df", ".", "is", "null", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -1.9141912460327148, -0.6654349565505981, -0.004385140724480152, -0.00022384998737834394, -0.607574462890625, -0.09226388484239578, -0.08341273665428162, -0.05482960492372513, -0.07736001908779144, -0.05986228957772255], "finish_reason": "stop"}, {"text": " TypeError(\"The DataFrame contains non-numeric data types.\")", "tokens": [" Type", "Error", "(", "\"", "The", " Data", "Frame", " contains", " non", "-", "numeric", " data", " types", ".", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -1.0753954648971558, -0.30123788118362427, -0.002748999046161771, -0.40570300817489624, -0.0065924301743507385, -0.0013654442736878991, -0.01596994139254093, -0.02917364239692688, -0.010768282227218151, -0.24174576997756958, -0.00989224947988987, -0.00031442465842701495, -0.004078404977917671], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.18993721902370453, -0.0025134659372270107, -0.7392634153366089, -0.6329855918884277, -0.003855297341942787], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002544144168496132, -3.528532761265524e-05, -0.009499703533947468, -0.009261621162295341, -0.03776480630040169, -0.0018486568005755544, -0.0013549680588766932, -0.2960534691810608, -0.0012655591126531363, -0.01022576354444027, -0.00661185197532177, -0.0044997865334153175, -0.0090414397418499, -0.0022747849579900503, -0.008780797012150288, -0.0008990298374556005, -0.00041059168870560825, -0.000974537746515125], "finish_reason": "stop"}, {"text": " df.cumsum() / df.cumsum().shift(1)", "tokens": [" df", ".", "cum", "sum", "()", " /", " df", ".", "cum", "sum", "()", ".", "shift", "(", "1", ")", "\n"], "logprobs": [-0.1410430669784546, -0.03342074900865555, -0.2189532071352005, -0.0009915679693222046, -0.18359225988388062, -3.3607118129730225, -0.2541525661945343, -0.04801473021507263, -1.062422513961792, -0.00463838828727603, -0.038808975368738174, -0.022789711132645607, -3.1005232334136963, -0.38491615653038025, -0.024673515930771828, -0.055362675338983536, -0.9692481756210327], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0012982996413484216, -0.00020740265608765185, -0.005842749495059252, -1.4305104514278355e-06, -0.3875442445278168, -0.0204022154211998], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.4483126997947693, 0.0, -0.00014125302550382912, -0.037238579243421555, -0.014826466329395771, -9.023735765367746e-05, -0.0021848634351044893, -0.03051881678402424, -0.009563937783241272, -4.172316494077677e-06, -6.305972783593461e-05, -1.432355523109436, -0.05766914039850235], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.0034805689938366413, -0.0010088359704241157, -0.000863894063513726, -2.5152843591058627e-05, -1.1920922133867862e-06, -8.093983342405409e-05, -0.7320396304130554], "finish_reason": "stop"}], "metrics": {"energy": 169.30483724594117, "energy_per_token": 1.7821561815362228, "time": 6.266665, "time_per_token": 0.0659648947368421}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-1.054012656211853, -0.5663197636604309, -0.0006771179032512009, -0.0064575341530144215, -0.014911852777004242, -0.02373124286532402, -6.592056161025539e-05, -0.044710639864206314, -0.0801544263958931, -0.012163981795310974], "finish_reason": "stop"}, {"text": " TypeError('The DataFrame contains non-numeric data types')", "tokens": [" Type", "Error", "('", "The", " Data", "Frame", " contains", " non", "-", "numeric", " data", " types", "')", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -1.8339295387268066, -1.2653231620788574, -0.3938041925430298, -0.003958842717111111, -0.44297656416893005, -0.010007327422499657, -0.0026223815511912107, -0.01939382404088974, -0.0303682591766119, -0.011459480971097946, -0.9838733673095703, -0.0017885654233396053], "finish_reason": "stop"}, {"text": " df.isnull().values.any():", "tokens": [" df", ".", "is", "null", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.17857418954372406, -0.0033926567994058132, -0.9604960083961487, -0.5843186378479004, -0.0023311602417379618, -7.950943836476654e-05, -0.8399320244789124, -0.0005963454605080187, -0.00843367911875248, -0.06680592894554138, -0.0035381829366087914], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002454841509461403, -3.5523738915799186e-05, -0.008304587565362453, -0.007475734688341618, -0.034810539335012436, -0.001788208493962884, -0.0014081810368224978, -0.3550761044025421, -0.0012824652949348092, -0.010032583959400654, -0.006757265888154507, -0.004535506945103407, -0.008312981575727463, -0.0021415650844573975, -0.008582374081015587, -0.0007239343249239028, -0.0003321811091154814, -0.000998594332486391], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.15532174706459045, -0.02836492843925953, -2.136382579803467, -0.043619554489851, -0.09410600364208221], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0012861560098826885, -0.0002087136817863211, -0.004804257769137621, -1.5497195136049413e-06, -0.43359583616256714, -0.01939651370048523], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values[:, :, np.newaxis]).T", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", "[:", ",", " :", ",", " np", ".", "new", "axis", "])", ".", "T", "\n"], "logprobs": [-0.3849683403968811, 0.0, -0.00014435203047469258, -0.03567548841238022, -0.018131347373127937, -9.60780744208023e-05, -0.002421425189822912, -0.037415433675050735, -0.007804141379892826, -4.410734163684538e-06, -8.21318244561553e-05, -0.2903975546360016, -0.20238173007965088, -2.705906391143799, -0.005800439044833183, -1.3605709075927734, -0.11469238996505737, -0.4322226047515869, -7.402622577501461e-05, -0.003942456562072039, -0.000966915744356811, -0.013029555790126324, -1.9177249670028687, -1.4824529886245728, -0.07614504545927048], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.003596625057980418, -0.0010592094622552395, -0.0011143434094265103, -3.194758028257638e-05, -1.0728830375228426e-06, -6.115249561844394e-05, -0.6969304084777832], "finish_reason": "stop"}], "metrics": {"energy": 217.2084275798798, "energy_per_token": 2.2625877872904145, "time": 6.471014, "time_per_token": 0.06740639583333334}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.853640079498291, -0.027729729190468788], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric data types.\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", " types", ".", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -1.3423765897750854, -0.5727438926696777, -0.015577895566821098, -0.006725650746375322, -0.07340575009584427, -0.07158055901527405, -0.024914467707276344, -1.0639221668243408, -0.009454830549657345, -0.0003079893649555743, -0.003476648824289441], "finish_reason": "stop"}, {"text": " df.isnull().any().any():", "tokens": [" df", ".", "is", "null", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.18993721902370453, -0.0025134659372270107, -0.9741705656051636, -0.7471652626991272, -0.002200207905843854, -8.987976616481319e-05, -0.8531144261360168, -0.013721898198127747, -0.0026889618020504713, -0.06982918083667755, -0.012930476106703281, -0.005303243175148964], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0027033472433686256, -3.8265450712060556e-05, -0.008904745802283287, -0.00924768391996622, -0.036257147789001465, -0.0017163321608677506, -0.001260677701793611, -0.3997972905635834, -0.0013228246243670583, -0.009754491969943047, -0.006591601297259331, -0.005233516450971365, -0.008353767916560173, -0.002615247620269656, -0.009327524341642857, -0.0007780147134326398, -0.00034564718953333795, -0.0011336335446685553], "finish_reason": "stop"}, {"text": " df.cumsum().ffill().rolling(3).apply(lambda x: x / x.sum(), raw=True)", "tokens": [" df", ".", "cum", "sum", "()", ".", "ff", "ill", "()", ".", "rolling", "(", "3", ")", ".", "apply", "(", "lambda", " x", ":", " x", " /", " x", ".", "sum", "()", ",", " raw", "=", "True", ")", "\n"], "logprobs": [-0.17216020822525024, -0.03587343916296959, -0.1554565578699112, -0.0011380392825230956, -0.1875656545162201, -0.6433644890785217, -4.3772430419921875, -0.0045648179948329926, -0.05195041000843048, -1.2007066011428833, -4.402080535888672, -0.010960965417325497, -2.5979485511779785, -0.5195627212524414, -0.008792849257588387, -1.3020981550216675, -0.041341155767440796, -0.5305498838424683, -0.08697676658630371, -0.0013888961402699351, -0.405737966299057, -1.138183832168579, -0.359588086605072, -0.021072549745440483, -0.6132848262786865, -0.5903205275535583, -0.089081771671772, -0.10025069117546082, -0.006161622237414122, -0.0194182600826025, -0.10649631917476654, -0.19829630851745605], "finish_reason": "stop"}, {"text": " MinMaxScaler(feature_range=(0, 1))", "tokens": [" Min", "Max", "Scal", "er", "(", "feature", "_", "range", "=(", "0", ",", " ", "1", "))", "\n"], "logprobs": [-0.0011023165425285697, -0.00022718709078617394, -0.005076494999229908, -1.311301275563892e-06, -1.052971601486206, -0.5699991583824158, -1.1920922133867862e-06, -0.00013171759201213717, -0.09119204431772232, -0.003311034059152007, -0.02448299154639244, -0.039862021803855896, -0.0047770896926522255, -0.11872895061969757, -0.03998607397079468], "finish_reason": "stop"}, {"text": " df_cumsum.copy()", "tokens": [" df", "_", "cum", "sum", ".", "copy", "()", "\n"], "logprobs": [-2.649531602859497, -0.02362949214875698, -3.85038583772257e-05, -0.0002803409588523209, -0.06555204838514328, -1.8892245292663574, -0.06749903410673141, -0.03808284178376198], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.003150739474222064, -0.0012415089877322316, -0.0008688965463079512, -3.135155202471651e-05, -1.1920922133867862e-06, -5.471556869451888e-05, -0.6999662518501282], "finish_reason": "stop"}], "metrics": {"energy": 190.59321145629886, "energy_per_token": 1.7017251022883826, "time": 7.1295185, "time_per_token": 0.06365641517857143}}
{"outputs": [{"text": " len(df) == 0:", "tokens": [" len", "(", "df", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-3.1302475929260254, -0.000392598332837224, -0.004515688866376877, -0.2800305187702179, -0.12589852511882782, -0.0009274948388338089, -0.0001961992384167388, -0.3242253363132477, -0.03492128849029541], "finish_reason": "stop"}, {"text": " TypeError(", "tokens": [" Type", "Error", "(", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -2.5897045135498047], "finish_reason": "stop"}, {"text": " df.empty or df.isnull().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "null", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.16300725936889648, -0.0032929740846157074, -0.6023963093757629, -0.7657190561294556, -0.53281569480896, -0.010441555641591549, -0.017202455550432205, -0.9656857252120972, -0.005950710736215115, -9.846202738117427e-05, -0.7412899732589722, -0.0014253228437155485, -0.025167103856801987, -0.027535494416952133, -0.0034665511921048164], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.00243926327675581, -3.731181277544238e-05, -0.008833142928779125, -0.007553350646048784, -0.03870806097984314, -0.001807485707104206, -0.0010626628063619137, -1.3364040851593018, -0.03867296501994133, -0.006009841803461313, -0.018718034029006958, -0.021644331514835358, -0.0027100048027932644, -0.00024685196694917977, -0.0012006701435893774], "finish_reason": "stop"}, {"text": " df.cumsum().rolling(window=2, min_periods=1).cumsum()", "tokens": [" df", ".", "cum", "sum", "()", ".", "rolling", "(", "window", "=", "2", ",", " min", "_", "period", "s", "=", "1", ")", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.1605869084596634, -0.03214262053370476, -0.19319003820419312, -0.0010008569806814194, -0.1504649966955185, -0.6407598257064819, -3.4597268104553223, -0.005481688305735588, -1.379201054573059, -0.012711570598185062, -1.3178672790527344, -0.5106349587440491, -0.40323013067245483, -5.722029527532868e-06, -0.002042233245447278, -2.264974000354414e-06, -0.0007327494095079601, -0.08968975394964218, -0.24624742567539215, -0.08981529623270035, -0.44686296582221985, -0.034529004245996475, -0.038016051054000854, -0.26651233434677124], "finish_reason": "stop"}, {"text": " MinMaxScaler(feature_range=(0, 1))", "tokens": [" Min", "Max", "Scal", "er", "(", "feature", "_", "range", "=(", "0", ",", " ", "1", "))", "\n"], "logprobs": [-0.001150541938841343, -0.0002517383254598826, -0.005923336371779442, -1.4305104514278355e-06, -1.0527927875518799, -0.40172144770622253, -1.311301275563892e-06, -0.00014065706636756659, -0.08232762664556503, -0.003628814360126853, -0.02445169910788536, -0.03639107197523117, -0.004634828772395849, -0.13159579038619995, -0.04010656103491783], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.40883177518844604, -1.1920928244535389e-07, -0.00015293381875380874, -0.0364082008600235, -0.014352071098983288, -9.77468371274881e-05, -0.003263150341808796, -0.04344082251191139, -0.00734699284657836, -4.0531076592742465e-06, -8.022463589441031e-05, -0.29667672514915466, -0.2147805243730545, -0.09146525710821152, -0.00855814479291439, -1.4305104514278355e-06, -0.09406846016645432, -4.994744449504651e-05, -0.00016890530241653323, -0.06778191030025482, -0.00024053541710600257, -0.014277919195592403, -0.2701493799686432], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum"], "logprobs": [-0.004387989174574614, -0.0009597701136954129, -0.0011570908827707171, -2.682172998902388e-05, -1.1920922133867862e-06, -5.221230458118953e-05], "finish_reason": "stop"}], "metrics": {"energy": 189.26458099937432, "energy_per_token": 1.7050863153096785, "time": 7.10338, "time_per_token": 0.0639944144144144}}
{"outputs": [{"text": " not df.isna().any().any() or df.isna().any().any():", "tokens": [" not", " df", ".", "is", "na", "()", ".", "any", "()", ".", "any", "()", " or", " df", ".", "is", "na", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-1.054012656211853, -1.2943737506866455, -0.051235005259513855, -1.1136231422424316, -0.6747530698776245, -0.008800412528216839, -0.0010600429959595203, -1.850266933441162, -0.319269061088562, -0.44099679589271545, -0.44815441966056824, -1.813646674156189, -0.15222638845443726, -0.8452783823013306, -0.058898892253637314, -1.129044771194458, -1.0901576280593872, -0.005612093489617109, -0.001374134561046958, -0.3825737535953522, -0.04569406434893608, -0.004232378210872412, -0.11069346219301224, -0.05625613033771515, -0.0451495461165905], "finish_reason": "stop"}, {"text": " TypeError(\"This DataFrame contains non-numeric data types\")", "tokens": [" Type", "Error", "(", "\"", "This", " Data", "Frame", " contains", " non", "-", "numeric", " data", " types", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -4.041343688964844, -1.798168420791626, -0.014722748659551144, -0.22932453453540802, -0.02625039964914322, -0.005537764634937048, -0.040174927562475204, -0.11229635775089264, -0.02649422362446785, -1.3141117095947266, -0.0008541273418813944, -0.004867845680564642], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.18993721902370453, -0.0025134659372270107, -0.7392634153366089, -0.6329855918884277, -0.003855297341942787], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002544144168496132, -3.528532761265524e-05, -0.009499703533947468, -0.009261621162295341, -0.03776480630040169, -0.0018486568005755544, -0.0013549680588766932, -0.2960534691810608, -0.0012655591126531363, -0.01022576354444027, -0.00661185197532177, -0.0044997865334153175, -0.0090414397418499, -0.0022747849579900503, -0.008780797012150288, -0.0008990298374556005, -0.00041059168870560825, -0.000974537746515125], "finish_reason": "stop"}, {"text": " df.cumsum().values", "tokens": [" df", ".", "cum", "sum", "()", ".", "values", "\n"], "logprobs": [-0.1410430669784546, -0.03342074900865555, -0.2189532071352005, -0.0009915679693222046, -0.18359225988388062, -0.6315305233001709, -3.9814276695251465, -0.36857905983924866], "finish_reason": "stop"}, {"text": " MinMaxScaler(feature_range=(0, 1), copy=False)", "tokens": [" Min", "Max", "Scal", "er", "(", "feature", "_", "range", "=(", "0", ",", " ", "1", ")", ",", " copy", "=", "False", ")", "\n"], "logprobs": [-0.0012982996413484216, -0.00020740265608765185, -0.005842749495059252, -1.4305104514278355e-06, -1.150373101234436, -0.45790907740592957, -1.311301275563892e-06, -0.00011896379146492109, -0.08596979826688766, -0.0032209681812673807, -0.0215387511998415, -0.03978114575147629, -0.004999872762709856, -2.1095807552337646, -0.0004011779965367168, -0.22420556843280792, -0.002840415108948946, -0.5426284074783325, -0.05358365550637245, -0.034354399889707565], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.3684134781360626, 0.0, -0.0001551984460093081, -0.04077732190489769, -0.016013700515031815, -0.00010430268594063818, -0.0021137294825166464, -0.031352363526821136, -0.008930266834795475, -3.933898824470816e-06, -6.0794889577664435e-05, -0.3369813561439514, -0.2129233330488205, -0.11677110195159912, -0.007275514770299196, -1.1920922133867862e-06, -0.11602461338043213, -4.255681051290594e-05, -0.0001784403866622597, -0.06655724346637726, -0.00021407696476671845, -0.01589895971119404, -0.2545538544654846], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.003653638530522585, -0.001046229270286858, -0.0009465504554100335, -2.2172682292875834e-05, -1.311301275563892e-06, -6.270212179515511e-05, -1.2895616292953491, -3.576278118089249e-07, -5.960462772236497e-07, -1.7165990357170813e-05, -6.48477507638745e-05, -0.05144699662923813], "finish_reason": "stop"}], "metrics": {"energy": 215.971955039978, "energy_per_token": 1.700566575117937, "time": 7.947339, "time_per_token": 0.06257747244094489}}
{"outputs": [{"text": " not pd.core.dtypes.common.is_numeric_dtype(df):", "tokens": [" not", " pd", ".", "core", ".", "d", "types", ".", "common", ".", "is", "_", "numeric", "_", "d", "type", "(", "df", "):", "\n"], "logprobs": [-1.054012656211853, -3.484402894973755, -0.0005367745761759579, -3.1400673389434814, -0.00012003655137959868, -0.9492160677909851, -0.0032433071173727512, -0.003283349797129631, -0.12687690556049347, -0.0013309201458469033, -0.03030245564877987, -0.001165664056316018, -0.05394786596298218, -0.019481509923934937, -0.12504500150680542, -0.00012635385792236775, -0.0013234198559075594, -0.004331374075263739, -0.0763152688741684, -0.022814180701971054], "finish_reason": "stop"}, {"text": " TypeError(\"The input DataFrame must contain only numeric columns\")", "tokens": [" Type", "Error", "(", "\"", "The", " input", " Data", "Frame", " must", " contain", " only", " numeric", " columns", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -1.0753954648971558, -1.8125426769256592, -0.19990913569927216, -0.002705843886360526, -1.4685542583465576, -0.10154810547828674, -0.3984483778476715, -0.5174573063850403, -0.42781081795692444, -1.6020286083221436, -0.0005372511222958565, -0.0016120783984661102], "finish_reason": "stop"}, {"text": " df.isnull().values.any():", "tokens": [" df", ".", "is", "null", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.18993721902370453, -0.0025134659372270107, -0.9741705656051636, -0.7471652626991272, -0.002200207905843854, -8.987976616481319e-05, -0.7660573124885559, -0.0006924853660166264, -0.011257345788180828, -0.06442569196224213, -0.004044211935251951], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0027033472433686256, -3.8265450712060556e-05, -0.008904745802283287, -0.00924768391996622, -0.036257147789001465, -0.0017163321608677506, -0.001260677701793611, -0.3997972905635834, -0.0013228246243670583, -0.009754491969943047, -0.006591601297259331, -0.005233516450971365, -0.008353767916560173, -0.002615247620269656, -0.009327524341642857, -0.0007780147134326398, -0.00034564718953333795, -0.0011336335446685553], "finish_reason": "stop"}, {"text": " df.cumsum().copy()", "tokens": [" df", ".", "cum", "sum", "()", ".", "copy", "()", "\n"], "logprobs": [-0.17216020822525024, -0.03587343916296959, -0.1554565578699112, -0.0011380392825230956, -0.1875656545162201, -0.6433644890785217, -1.674877405166626, -0.02812155894935131, -0.11783124506473541], "finish_reason": "stop"}, {"text": " MinMaxScaler(copy=True, l1_normalize=False)", "tokens": [" Min", "Max", "Scal", "er", "(", "copy", "=", "True", ",", " l", "1", "_", "normal", "ize", "=", "False", ")", "\n"], "logprobs": [-0.0011023165425285697, -0.00022718709078617394, -0.005076494999229908, -1.311301275563892e-06, -1.052971601486206, -0.9644865393638611, -0.005656071472913027, -0.25647133588790894, -0.00889623910188675, -2.074604034423828, -0.011356709524989128, -0.0010178867960348725, -0.04594002291560173, -0.1485164761543274, -0.0006690170848742127, -0.05557672679424286, -1.854885458946228, -0.041319992393255234], "finish_reason": "stop"}, {"text": " df_cumsum.apply(func=scaler.fit_transform)", "tokens": [" df", "_", "cum", "sum", ".", "apply", "(", "func", "=", "scal", "er", ".", "fit", "_", "transform", ")", "\n"], "logprobs": [-2.649531602859497, -0.02362949214875698, -3.85038583772257e-05, -0.0002803409588523209, -0.06555204838514328, -0.4381576180458069, -0.02850339002907276, -3.342069625854492, -0.015412160195410252, -0.12737807631492615, -1.7165990357170813e-05, -0.0010586139978840947, -0.4198024570941925, -0.005300160031765699, -0.0004659997357521206, -0.647053599357605, -0.09073120355606079], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.003150739474222064, -0.0012415089877322316, -0.0008688965463079512, -3.135155202471651e-05, -1.1920922133867862e-06, -5.471556869451888e-05, -0.6999662518501282], "finish_reason": "stop"}], "metrics": {"energy": 193.0086777057648, "energy_per_token": 1.663867911256593, "time": 7.1375217, "time_per_token": 0.06153035948275862}}
{"outputs": [{"text": " df.empty or df.isnull().any().any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "null", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.5647587776184082, -0.25824210047721863, -0.011208898387849331, -0.03835006803274155, -0.851761519908905, -0.009746228344738483, -0.0001433984871255234, -0.816489040851593, -0.17625954747200012, -0.014087755233049393, -0.011978715658187866, -0.009984785690903664, -0.032677534967660904], "finish_reason": "stop"}, {"text": " TypeError(\"df must contain only numeric values\")", "tokens": [" Type", "Error", "(", "\"", "df", " must", " contain", " only", " numeric", " values", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -3.350217819213867, -1.052126407623291, -0.3131415545940399, -0.5941089987754822, -0.5701844096183777, -3.203157663345337, -0.22481603920459747, -0.00033158526639454067, -0.004218726884573698], "finish_reason": "stop"}, {"text": " df.shape[1] == 0:", "tokens": [" df", ".", "shape", "[", "1", "]", " ==", " ", "0", ":", "\n"], "logprobs": [-0.18993721902370453, -0.0025134659372270107, -2.261455535888672, -0.02191167324781418, -1.8970237970352173, -0.0018672188743948936, -0.10076526552438736, -0.005363835021853447, -0.003554100636392832, -0.17324726283550262, -0.005096895154565573], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0027033472433686256, -3.8265450712060556e-05, -0.008904745802283287, -0.00924768391996622, -0.036257147789001465, -0.0017163321608677506, -0.001260677701793611, -0.3997972905635834, -0.0013228246243670583, -0.009754491969943047, -0.006591601297259331, -0.005233516450971365, -0.008353767916560173, -0.002615247620269656, -0.009327524341642857, -0.0007780147134326398, -0.00034564718953333795, -0.0011336335446685553], "finish_reason": "stop"}, {"text": " df.cumsum().copy()", "tokens": [" df", ".", "cum", "sum", "()", ".", "copy", "()", "\n"], "logprobs": [-0.17216020822525024, -0.03587343916296959, -0.1554565578699112, -0.0011380392825230956, -0.1875656545162201, -0.6433644890785217, -1.674877405166626, -0.02812155894935131, -0.11783124506473541], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011023165425285697, -0.00022718709078617394, -0.005076494999229908, -1.311301275563892e-06, -0.4364478886127472, -0.02011016756296158], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.transform(df_cumsum.values.reshape(-1, 1)),", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", ",", "\n"], "logprobs": [-1.595784068107605, -0.0021221754141151905, -0.020520294085144997, -0.08863162994384766, -0.07004626840353012, -2.2649508537142538e-05, -0.0001062098381225951, -2.551783561706543, -0.0039530242793262005, -0.011614678427577019, -0.007716963067650795, -3.2186455882765586e-06, -4.100715523236431e-05, -0.6640685200691223, -0.17063282430171967, -0.4166906774044037, -0.056656766682863235, -1.1920922133867862e-06, -0.27858734130859375, -5.0424259825376794e-05, -6.437094270950183e-05, -0.07047642022371292, -0.00025138078490272164, -0.18408453464508057, -0.24404481053352356, -0.7492129802703857], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.0031558494083583355, -0.0011793570592999458, -0.0010097887134179473, -3.40932747349143e-05, -1.1920922133867862e-06, -5.8530047681415454e-05, -0.6764132380485535], "finish_reason": "stop"}], "metrics": {"energy": 180.10056495666498, "energy_per_token": 1.6990619335534431, "time": 6.7219954, "time_per_token": 0.06341505094339622}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.853640079498291, -0.027729729190468788], "finish_reason": "stop"}, {"text": " TypeError('The input DataFrame contains non-numeric data types.')", "tokens": [" Type", "Error", "('", "The", " input", " Data", "Frame", " contains", " non", "-", "numeric", " data", " types", ".", "')", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -1.8339295387268066, -1.2653231620788574, -1.7857109308242798, -0.2262829840183258, -0.0036607650108635426, -0.3755650222301483, -0.010361921973526478, -0.0019695423543453217, -0.01397737767547369, -0.028937535360455513, -0.009518950246274471, -0.38057830929756165, -0.015538811683654785, -0.001972635742276907], "finish_reason": "stop"}, {"text": " not df.isnull().any().all():", "tokens": [" not", " df", ".", "is", "null", "()", ".", "any", "()", ".", "all", "():", "\n"], "logprobs": [-2.499678134918213, -0.3024963438510895, -0.01951810158789158, -2.1660537719726562, -0.6122038960456848, -0.0033831524197012186, -4.660974445869215e-05, -1.0241079330444336, -0.03733837977051735, -0.002115394687280059, -1.410114049911499, -0.030786801129579544, -0.009042148478329182], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0022775204852223396, -3.0040289857424796e-05, -0.009039667434990406, -0.007544358726590872, -0.03783390671014786, -0.001735967700369656, -0.0013688965700566769, -0.289143830537796, -0.0014185375766828656, -0.009726868011057377, -0.006537005305290222, -0.005031542386859655, -0.010137969627976418, -0.0021842687856405973, -0.008009104058146477, -0.0008912881603464484, -0.000356253091013059, -0.0013196102809160948], "finish_reason": "stop"}, {"text": " df.cumsum().cummax()", "tokens": [" df", ".", "cum", "sum", "()", ".", "cum", "max", "()", "\n"], "logprobs": [-0.16009531915187836, -0.029902223497629166, -0.18841752409934998, -0.000860201776959002, -0.15074032545089722, -0.6234374046325684, -1.2444905042648315, -1.6891899108886719, -0.017586249858140945, -0.31572970747947693], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0013511584838852286, -0.0001961992384167388, -0.005398813169449568, -1.4305104514278355e-06, -0.3411753475666046, -0.01725108176469803], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values.reshape(1, -1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(", "1", ",", " -", "1", "))", "\n"], "logprobs": [-0.36016586422920227, -1.1920928244535389e-07, -0.00011657988943625242, -0.02693423442542553, -0.015287723392248154, -0.00010942813969450071, -0.002597650745883584, -0.039630260318517685, -0.007375630084425211, -3.4570634852570947e-06, -8.11782301752828e-05, -0.334478497505188, -0.23333127796649933, -0.12007473409175873, -0.008607430383563042, -1.0728830375228426e-06, -2.500054359436035, -0.2639310657978058, -9.548207890475169e-05, -0.15556401014328003, -0.00032240914879366755, -0.0810273289680481, -0.3182382583618164], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum"], "logprobs": [-0.003936044406145811, -0.0008806879632174969, -0.0008029097807593644, -2.90866428258596e-05, -1.311301275563892e-06, -5.864924969500862e-05], "finish_reason": "stop"}], "metrics": {"energy": 166.15088407135008, "energy_per_token": 1.712895712075774, "time": 6.2760367, "time_per_token": 0.06470140927835051}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.853640079498291, -0.027729729190468788], "finish_reason": "stop"}, {"text": " TypeError('DataFrame contains non-numeric data types')", "tokens": [" Type", "Error", "('", "DataFrame", " contains", " non", "-", "numeric", " data", " types", "')", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -1.8339295387268066, -1.4981913566589355, -0.5846899747848511, -0.017372580245137215, -0.0066833775490522385, -0.08063963800668716, -0.08354279398918152, -0.02499469555914402, -0.34640413522720337, -0.002435933565720916], "finish_reason": "stop"}, {"text": " df.isna().any().any():", "tokens": [" df", ".", "is", "na", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.17857418954372406, -0.0033926567994058132, -0.9604960083961487, -0.8185505867004395, -0.0024995533749461174, -0.00013410145766101778, -0.7353017330169678, -0.012912235222756863, -0.006130343768745661, -0.08762556314468384, -0.019013646990060806, -0.004766055848449469], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002454841509461403, -3.5523738915799186e-05, -0.008304587565362453, -0.007475734688341618, -0.034810539335012436, -0.001788208493962884, -0.0014081810368224978, -0.3550761044025421, -0.0012824652949348092, -0.010032583959400654, -0.006757265888154507, -0.004535506945103407, -0.008312981575727463, -0.0021415650844573975, -0.008582374081015587, -0.0007239343249239028, -0.0003321811091154814, -0.000998594332486391], "finish_reason": "stop"}, {"text": " df.cumsum().dropna().cumsum()", "tokens": [" df", ".", "cum", "sum", "()", ".", "drop", "na", "()", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.15532174706459045, -0.02836492843925953, -0.19762177765369415, -0.0009827552130445838, -0.18026670813560486, -0.6427645087242126, -4.213420867919922, -0.34074684977531433, -0.07884655892848969, -1.3866428136825562, -3.2441887855529785, -0.02696092240512371, -0.061161115765571594, -0.39157676696777344], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.001191859133541584, -0.00025459862081333995, -0.005126189440488815, -1.1920922133867862e-06, -0.4579714238643646, -0.020478717982769012], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum),", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", ",", "\n"], "logprobs": [-1.4523491859436035, -0.0018749530427157879, -0.01679987460374832, -0.08051261305809021, -0.05573965981602669, -2.4437606043647975e-05, -0.00010179955279454589, -0.05853378027677536, -0.00568297877907753, -7.068861305015162e-05, -0.0016933638835325837, -0.01692189648747444, -0.008917033672332764, -2.9802276912960224e-06, -4.160317621426657e-05, -1.1974825859069824, -0.013933410868048668, -0.9658637642860413], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.003953143022954464, -0.0011457790387794375, -0.0008385241380892694, -2.682172998902388e-05, -1.1920922133867862e-06, -5.543078441405669e-05, -0.6673195958137512], "finish_reason": "stop"}], "metrics": {"energy": 190.48966531944274, "energy_per_token": 2.0705398404287254, "time": 6.074881, "time_per_token": 0.0660313152173913}}
{"outputs": [{"text": " df.isnull().any().any():", "tokens": [" df", ".", "is", "null", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -1.9141912460327148, -0.6654349565505981, -0.004385140724480152, -0.00022384998737834394, -0.607574462890625, -0.09226388484239578, -0.08341273665428162, -0.05482960492372513, -0.07736001908779144, -0.05986228957772255], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame contains non-numeric data types.\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", " types", ".", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -1.3423765897750854, -0.5727438926696777, -0.015577895566821098, -0.006725650746375322, -0.07340575009584427, -0.07158055901527405, -0.024914467707276344, -1.0639221668243408, -0.009454830549657345, -0.0003079893649555743, -0.003476648824289441], "finish_reason": "stop"}, {"text": " df.empty or df.isna().any().any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "na", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.18993721902370453, -0.0025134659372270107, -0.7392634153366089, -0.7723612785339355, -0.621601939201355, -0.010719692334532738, -0.017872946336865425, -0.6392460465431213, -0.01951821893453598, -9.119095193454996e-05, -0.929889976978302, -0.018329406157135963, -0.0015708976425230503, -0.038065627217292786, -0.007123666815459728, -0.004590805619955063], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002677667187526822, -3.302042750874534e-05, -0.009802774526178837, -0.011896259151399136, -0.03012746013700962, -0.0019024383509531617, -0.0012323412811383605, -1.2918472290039062, -0.03622093424201012, -0.007405212614685297, -0.014974214136600494, -0.020760731771588326, -0.002656147815287113, -0.0002796259068418294, -0.0010507544502615929], "finish_reason": "stop"}, {"text": " df.cumsum().copy()", "tokens": [" df", ".", "cum", "sum", "()", ".", "copy", "()", "\n"], "logprobs": [-0.16611066460609436, -0.03274168446660042, -0.16906405985355377, -0.001081834896467626, -0.15976159274578094, -0.5403269529342651, -1.790832281112671, -0.02531844563782215, -0.09925279766321182], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.001336158369667828, -0.00021395778458099812, -0.003985320683568716, -1.4305104514278355e-06, -0.42525383830070496, -0.01903505064547062], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.3759337067604065, 0.0, -0.00016044282529037446, -0.04370993375778198, -0.01808100752532482, -0.00010084597306558862, -0.0026448529679328203, -0.03825610503554344, -0.0076112039387226105, -3.4570634852570947e-06, -0.00010287232726113871, -0.3732197880744934, -0.24307294189929962, -0.11790774762630463, -0.007725006900727749, -1.1920922133867862e-06, -0.11526056379079819, -3.504691630951129e-05, -0.00016699827392585576, -0.07228033989667892, -0.0002325502864550799, -0.012810319662094116, -0.25989317893981934], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum"], "logprobs": [-0.0036997220013290644, -0.0011642351746559143, -0.0010886224918067455, -2.8013790142722428e-05, -1.311301275563892e-06, -6.151010165922344e-05], "finish_reason": "stop"}], "metrics": {"energy": 194.48533663177489, "energy_per_token": 1.9067189865860283, "time": 6.9076533, "time_per_token": 0.06772209117647059}}
{"outputs": [{"text": " df.empty or df.isna().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "na", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.5647587776184082, -0.25824210047721863, -0.011208898387849331, -0.03835006803274155, -0.5590254664421082, -0.026101406663656235, -0.00020489977032411844, -1.4411512613296509, -0.0029017506167292595, -0.03455710411071777, -0.063531793653965, -0.03206908702850342], "finish_reason": "stop"}, {"text": " TypeError('DataFrame contains non-numeric data types')", "tokens": [" Type", "Error", "('", "DataFrame", " contains", " non", "-", "numeric", " data", " types", "')", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -1.8339295387268066, -1.4981913566589355, -0.5846899747848511, -0.017372580245137215, -0.0066833775490522385, -0.08063963800668716, -0.08354279398918152, -0.02499469555914402, -0.34640413522720337, -0.002435933565720916], "finish_reason": "stop"}, {"text": " df.empty or df.isna().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "na", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.17857418954372406, -0.0033926567994058132, -0.7802610993385315, -0.7948645353317261, -0.535743236541748, -0.008254578337073326, -0.01956533081829548, -0.5207537412643433, -0.017643995583057404, -0.00010072677832795307, -0.9532269239425659, -0.002337344689294696, -0.05860157310962677, -0.059125106781721115, -0.0035045654512941837], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0025177467614412308, -3.516612196108326e-05, -0.008265810087323189, -0.007757536601275206, -0.040266647934913635, -0.0017514378996565938, -0.001328062848187983, -0.2874835133552551, -0.0013373488327488303, -0.010640788823366165, -0.007113961037248373, -0.005133423954248428, -0.009032106027007103, -0.0025052609853446484, -0.008524695411324501, -0.0007518087513744831, -0.00034374051028862596, -0.001149470335803926], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.16022217273712158, -0.024849003180861473, -2.129939079284668, -0.050756048411130905, -0.1200600415468216], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0012230543652549386, -0.00023266946664080024, -0.004344074055552483, -1.311301275563892e-06, -0.4092729389667511, -0.016869502142071724], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values.reshape(-1,1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", "1", "))", "\n"], "logprobs": [-0.3936682343482971, -1.1920928244535389e-07, -0.00013624693383462727, -0.042077042162418365, -0.02056899480521679, -9.357491217087954e-05, -0.0029062675312161446, -0.041674405336380005, -0.00773127656430006, -3.814689989667386e-06, -6.4490144723095e-05, -0.32184773683547974, -0.2025429606437683, -0.09970272332429886, -0.008358259685337543, -1.1920922133867862e-06, -0.09084964543581009, -5.1377883210079744e-05, -0.00018618757894728333, -2.909181594848633, -0.021144215017557144, -0.23415665328502655], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.00327800284139812, -0.0010438475292176008, -0.0009289240115322173, -2.992108420585282e-05, -1.311301275563892e-06, -5.3165931603871286e-05, -0.6328659653663635], "finish_reason": "stop"}], "metrics": {"energy": 226.79739060783385, "energy_per_token": 2.2679739060783386, "time": 6.7295837, "time_per_token": 0.067295837}}
{"outputs": [{"text": " not df.info().dtypes.values.all().any():", "tokens": [" not", " df", ".", "info", "()", ".", "d", "types", ".", "values", ".", "all", "()", ".", "any", "():", "\n"], "logprobs": [-1.054012656211853, -1.2943737506866455, -0.051235005259513855, -1.7735981941223145, -0.5331594347953796, -0.31333109736442566, -0.8340020179748535, -0.0025079960469156504, -0.10956984013319016, -2.3337645530700684, -0.690156102180481, -1.5399008989334106, -0.13123904168605804, -0.10616747289896011, -2.5038821697235107, -0.7473505139350891, -0.0672217607498169], "finish_reason": "stop"}, {"text": " TypeError(", "tokens": [" Type", "Error", "(", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -2.5897045135498047], "finish_reason": "stop"}, {"text": " df.isna().any().any():", "tokens": [" df", ".", "is", "na", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.16300725936889648, -0.0032929740846157074, -1.2007277011871338, -0.8096446394920349, -0.002508828416466713, -0.00011634149996098131, -0.6867501735687256, -0.01463816873729229, -0.007817861624062061, -0.08178292959928513, -0.020464235916733742, -0.004476526286453009], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002587781986221671, -3.3378044463461265e-05, -0.008892340585589409, -0.008304351009428501, -0.03619322553277016, -0.0018659100169315934, -0.0012638922780752182, -1.419482946395874, -0.04016049951314926, -0.0069120111875236034, -0.01674712263047695, -0.023157158866524696, -0.002351853996515274, -0.0003332536434754729, -0.0011013639159500599], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.14894764125347137, -0.04187928885221481, -1.997382402420044, -0.04302343353629112, -0.09337323158979416], "finish_reason": "stop"}, {"text": " MinMaxScaler(copy=True, clip=False, strategy='quantile', with_std=False)", "tokens": [" Min", "Max", "Scal", "er", "(", "copy", "=", "True", ",", " clip", "=", "False", ",", " strategy", "='", "quant", "ile", "'", ",", " with", "_", "std", "=", "False", ")", "\n"], "logprobs": [-0.0013508014380931854, -0.00022301571152638644, -0.004938191268593073, -1.6689286894688848e-06, -1.1836951971054077, -1.055455207824707, -0.005767608527094126, -0.25063204765319824, -0.011401142925024033, -1.733644723892212, -0.03322000801563263, -0.5852633714675903, -0.04578505456447601, -1.334058403968811, -0.3287055492401123, -2.460422992706299, -0.001650639227591455, -0.5321513414382935, -0.00031799983116798103, -3.0381839275360107, -6.318072337307967e-06, -1.372866153717041, -0.0007251255447044969, -0.7423534989356995, -0.3552364706993103, -0.0579008124768734], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values.reshape(-1, 1)).reshape(-1, df.shape[1])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", ".", "resh", "ape", "(-", "1", ",", " df", ".", "shape", "[", "1", "])", "\n"], "logprobs": [-0.38087597489356995, 0.0, -0.0001401803019689396, -0.03927202522754669, -0.018426548689603806, -9.154854342341423e-05, -0.0022508781403303146, -0.03988607972860336, -0.006943028420209885, -3.814689989667386e-06, -8.844937838148326e-05, -0.31229111552238464, -0.2151719480752945, -0.10233044624328613, -0.007057144306600094, -1.1920922133867862e-06, -0.11196867376565933, -4.9232225137529895e-05, -0.00015877417172305286, -0.060870975255966187, -0.0002315968304174021, -0.015955274924635887, -1.803399920463562, -0.23743323981761932, -1.0728830375228426e-06, -0.28153926134109497, -3.683499380713329e-05, -0.12960268557071686, -0.453875869512558, -0.2934665083885193, -0.013207921758294106, -0.01144969929009676, -0.007472658529877663, -0.020670123398303986, -0.02827836573123932], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.0037138555198907852, -0.0011854295153170824, -0.0013830630341544747, -2.825220326485578e-05, -1.311301275563892e-06, -5.364274329622276e-05, -0.6922861337661743], "finish_reason": "stop"}], "metrics": {"energy": 221.99020212745668, "energy_per_token": 1.8346297696484024, "time": 7.741812, "time_per_token": 0.0639819173553719}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.853640079498291, -0.027729729190468788], "finish_reason": "stop"}, {"text": " TypeError(", "tokens": [" Type", "Error", "(", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -2.5897045135498047], "finish_reason": "stop"}, {"text": " df.shape[0] == 0:", "tokens": [" df", ".", "shape", "[", "0", "]", " ==", " ", "0", ":", "\n"], "logprobs": [-0.16300725936889648, -0.0032929740846157074, -2.191354990005493, -0.02069919742643833, -0.17165307700634003, -0.001409014337696135, -0.07025475800037384, -0.002376353135332465, -0.0002791491860989481, -0.13136397302150726, -0.003879997180774808], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002587781986221671, -3.3378044463461265e-05, -0.008892340585589409, -0.008304351009428501, -0.03619322553277016, -0.0018659100169315934, -0.0012638922780752182, -0.3045803904533386, -0.0012855607783421874, -0.010686669498682022, -0.0065204245038330555, -0.005254980642348528, -0.008874734863638878, -0.002386699663475156, -0.007615935988724232, -0.0007307243067771196, -0.00032360086333937943, -0.0010617101797834039], "finish_reason": "stop"}, {"text": " df.cumsum(axis=0)", "tokens": [" df", ".", "cum", "sum", "(", "axis", "=", "0", ")", "\n"], "logprobs": [-0.14510509371757507, -0.03760569170117378, -0.17979255318641663, -0.0008577005355618894, -1.723379373550415, -0.05744248256087303, -0.054838407784700394, -0.08267845213413239, -0.1253400444984436, -0.5511844754219055], "finish_reason": "stop"}, {"text": " MinMaxScaler(copy=True, feature_range=(0, 1), preserve_dtype=True)", "tokens": [" Min", "Max", "Scal", "er", "(", "copy", "=", "True", ",", " feature", "_", "range", "=(", "0", ",", " ", "1", ")", ",", " preserve", "_", "d", "type", "=", "True", ")", "\n"], "logprobs": [-0.0013231817865744233, -0.0001774868869688362, -0.004895723424851894, -1.5497195136049413e-06, -1.045587182044983, -1.127803087234497, -0.005992659833282232, -0.2700048089027405, -0.007889301516115665, -0.7277842164039612, -6.01988795096986e-05, -0.0007184546557255089, -0.04192764684557915, -0.002704417100176215, -0.028501998633146286, -0.01951611414551735, -0.002900799736380577, -1.3247512578964233, -0.00020096666412428021, -1.6864145994186401, -5.960446742392378e-06, -0.9360769987106323, -0.07242117077112198, -0.012308472767472267, -0.31597205996513367, -0.09824958443641663, -0.022704413160681725], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum.values.reshape(-1, 1)),", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", ",", "\n"], "logprobs": [-1.6042563915252686, -0.0017615529941394925, -0.018068363890051842, -0.0939386785030365, -0.05858459696173668, -2.312633478140924e-05, -8.606540359323844e-05, -0.08750750124454498, -0.004829527344554663, -8.165503095369786e-05, -0.0014252038672566414, -0.014278624206781387, -0.007688336074352264, -2.9802276912960224e-06, -4.088794958079234e-05, -0.7629721164703369, -0.20978637039661407, -0.8242375254631042, -0.14027583599090576, -1.311301275563892e-06, -0.13629917800426483, -4.2914423829643056e-05, -0.00030763185350224376, -0.07697267085313797, -0.0006104036583565176, -0.17666444182395935, -0.20437881350517273, -0.3525182902812958], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum"], "logprobs": [-0.0035691861994564533, -0.0009183242218568921, -0.00078671018127352, -3.3378044463461265e-05, -1.311301275563892e-06, -6.627816765103489e-05], "finish_reason": "stop"}], "metrics": {"energy": 188.1041579971313, "energy_per_token": 1.725726220157168, "time": 6.9258795, "time_per_token": 0.06354017889908256}}
{"outputs": [{"text": " df.empty or df.isnull().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "null", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.5647587776184082, -0.25824210047721863, -0.011208898387849331, -0.03835006803274155, -0.851761519908905, -0.009746228344738483, -0.0001433984871255234, -1.137943983078003, -0.0018128404626622796, -0.02876531332731247, -0.02120712213218212, -0.030387919396162033], "finish_reason": "stop"}, {"text": " TypeError(\"The DataFrame should only have numeric data types.\")", "tokens": [" Type", "Error", "(", "\"", "The", " Data", "Frame", " should", " only", " have", " numeric", " data", " types", ".", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -1.0753954648971558, -0.30123788118362427, -0.002748999046161771, -2.7159600257873535, -1.4890958070755005, -3.0363364219665527, -0.9613876938819885, -1.3922412395477295, -0.0895790234208107, -0.3574710786342621, -0.009838069789111614, -0.0004001055203843862, -0.003456453327089548], "finish_reason": "stop"}, {"text": " df.isna().any().any():", "tokens": [" df", ".", "is", "na", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.18993721902370453, -0.0025134659372270107, -0.9741705656051636, -0.6450305581092834, -0.0030478236731141806, -0.000102037942269817, -0.7453482151031494, -0.010825948789715767, -0.00765769649296999, -0.07124968618154526, -0.023131415247917175, -0.005090490449219942], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0027033472433686256, -3.8265450712060556e-05, -0.008904745802283287, -0.00924768391996622, -0.036257147789001465, -0.0017163321608677506, -0.001260677701793611, -1.1798056364059448, -0.03428828343749046, -0.007928330451250076, -0.014718402177095413, -0.020238913595676422, -0.0026373625732958317, -0.0002848696312867105, -0.0011319665936753154], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.16733279824256897, -0.037448618561029434, -0.19223235547542572, -0.0009889479260891676, -0.19941072165966034, -0.7581314444541931], "finish_reason": "stop"}, {"text": " MinMaxScaler(copy=True, fill_value=0.0, l1_p=1.0, l2_p=1.0, clip=True)", "tokens": [" Min", "Max", "Scal", "er", "(", "copy", "=", "True", ",", " fill", "_", "value", "=", "0", ".", "0", ",", " l", "1", "_", "p", "=", "1", ".", "0", ",", " l", "2", "_", "p", "=", "1", ".", "0", ",", " clip", "=", "True", ")", "\n"], "logprobs": [-0.0012979424791410565, -0.000228140561375767, -0.00363522837869823, -1.311301275563892e-06, -1.1227974891662598, -1.0615047216415405, -0.006233416497707367, -0.2669183611869812, -0.010091474279761314, -3.5638585090637207, -0.5214697122573853, -0.09475995600223541, -0.003094172803685069, -0.05260208249092102, -0.5972059369087219, -0.058950476348400116, -0.014900343492627144, -0.5287954807281494, -0.04438626766204834, -0.0005374894244596362, -0.9284558892250061, -0.06725353002548218, -0.15358349680900574, -1.3386980295181274, -0.04317951947450638, -0.008173114620149136, -0.03838953375816345, -0.004778038710355759, -1.597391747054644e-05, -0.00023850933939684182, -0.0014271085383370519, -0.15898601710796356, -0.00436164066195488, -0.00735716987401247, -0.3096478581428528, -0.6891884803771973, -0.13661877810955048, -0.5271837711334229, -0.45501357316970825, -0.033081043511629105], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.3729686141014099, -1.1920928244535389e-07, -0.00015901254664640874, -0.04076393321156502, -0.016370275989174843, -8.809178689261898e-05, -0.0026298719458281994, -0.03484611213207245, -0.005716286599636078, -3.6954811548639555e-06, -8.296622399939224e-05, -1.2528692483901978, -0.06961404532194138], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.003549467772245407, -0.001134109916165471, -0.001043133088387549, -2.372236667724792e-05, -1.1920922133867862e-06, -6.186770770000294e-05, -0.6797863245010376], "finish_reason": "stop"}], "metrics": {"energy": 279.7807817382813, "energy_per_token": 2.2382462539062504, "time": 8.78897, "time_per_token": 0.07031176}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-1.054012656211853, -0.5663197636604309, -0.0006771179032512009, -0.0064575341530144215, -0.014911852777004242, -0.02373124286532402, -6.592056161025539e-05, -0.044710639864206314, -0.0801544263958931, -0.012163981795310974], "finish_reason": "stop"}, {"text": " TypeError(\"Dataframe contains non-numeric data types.\")", "tokens": [" Type", "Error", "(", "\"", "Data", "frame", " contains", " non", "-", "numeric", " data", " types", ".", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -2.4348220825195312, -0.3372928202152252, -0.8085451126098633, -0.039468005299568176, -0.03419704735279083, -0.21778607368469238, -0.28359609842300415, -0.05290333926677704, -0.7901878356933594, -0.015973225235939026, -0.00034767304896377027, -0.004948155488818884], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.18993721902370453, -0.0025134659372270107, -0.7392634153366089, -0.6329855918884277, -0.003855297341942787], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002544144168496132, -3.528532761265524e-05, -0.009499703533947468, -0.009261621162295341, -0.03776480630040169, -0.0018486568005755544, -0.0013549680588766932, -1.4419770240783691, -0.036666568368673325, -0.007030273787677288, -0.01756364479660988, -0.01940539851784706, -0.0028539663180708885, -0.0003110878460574895, -0.0009813260985538363], "finish_reason": "stop"}, {"text": " df.cumsum(axis=0)", "tokens": [" df", ".", "cum", "sum", "(", "axis", "=", "0", ")", "\n"], "logprobs": [-0.14518222212791443, -0.029801562428474426, -0.1745934784412384, -0.0008974815136753023, -1.8968836069107056, -0.0676562488079071, -0.056139715015888214, -0.08467543870210648, -0.11888466775417328, -0.5145426392555237], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.001365087111480534, -0.00024375328212045133, -0.00395575538277626, -1.311301275563892e-06, -0.4082171320915222, -0.014992416836321354], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.4379304349422455, -1.1920928244535389e-07, -0.0001299296854995191, -0.044798530638217926, -0.015598669648170471, -0.00011228884250158444, -0.0026116808876395226, -0.030405843630433083, -0.007493482902646065, -4.768360213347478e-06, -6.210611172718927e-05, -1.169830560684204, -0.061574142426252365], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0034364950843155384, -0.0011526852613314986, -0.0008971241768449545, -2.2053474822314456e-05, -1.311301275563892e-06, -5.471556869451888e-05, -1.2939238548278809, -3.576278118089249e-07, -5.960462772236497e-07, -3.0397906812140718e-05, -7.533743337262422e-05, -0.05280688777565956], "finish_reason": "stop"}], "metrics": {"energy": 187.73206559371943, "energy_per_token": 2.1578398344105683, "time": 6.711173, "time_per_token": 0.07713991954022988}}
{"outputs": [{"text": " df is None:", "tokens": [" df", " is", " None", ":", "\n"], "logprobs": [-0.7068980932235718, -3.0328073501586914, -0.05145809426903725, -0.6023539304733276, -0.01773698627948761], "finish_reason": "stop"}, {"text": " TypeError(\"The input DataFrame contains non-numeric data types.\")", "tokens": [" Type", "Error", "(", "\"", "The", " input", " Data", "Frame", " contains", " non", "-", "numeric", " data", " types", ".", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -1.0753954648971558, -1.8125426769256592, -0.19990913569927216, -0.002705843886360526, -0.39630192518234253, -0.010831138119101524, -0.00209469604305923, -0.017304042354226112, -0.03883856162428856, -0.009854476898908615, -0.22953388094902039, -0.007624808698892593, -0.0004070168943144381, -0.004206500016152859], "finish_reason": "stop"}, {"text": " df.shape[0] == 0:", "tokens": [" df", ".", "shape", "[", "0", "]", " ==", " ", "0", ":", "\n"], "logprobs": [-0.18993721902370453, -0.0025134659372270107, -2.261455535888672, -0.02191167324781418, -0.16268888115882874, -0.001341396477073431, -0.07651913911104202, -0.0021899782586842775, -0.0003083468764089048, -0.09334326535463333, -0.0034273474011570215], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0027033472433686256, -3.8265450712060556e-05, -0.008904745802283287, -0.00924768391996622, -0.036257147789001465, -0.0017163321608677506, -0.001260677701793611, -0.3997972905635834, -0.0013228246243670583, -0.009754491969943047, -0.006591601297259331, -0.005233516450971365, -0.008353767916560173, -0.002615247620269656, -0.009327524341642857, -0.0007780147134326398, -0.00034564718953333795, -0.0011336335446685553], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.17216020822525024, -0.03587343916296959, -0.1554565578699112, -0.0011380392825230956, -0.1875656545162201, -0.8927674889564514], "finish_reason": "stop"}, {"text": " MinMaxScaler(feature_range=(0, 1))", "tokens": [" Min", "Max", "Scal", "er", "(", "feature", "_", "range", "=(", "0", ",", " ", "1", "))", "\n"], "logprobs": [-0.0011023165425285697, -0.00022718709078617394, -0.005076494999229908, -1.311301275563892e-06, -1.052971601486206, -0.5699991583824158, -1.1920922133867862e-06, -0.00013171759201213717, -0.09119204431772232, -0.003311034059152007, -0.02448299154639244, -0.039862021803855896, -0.0047770896926522255, -0.11872895061969757, -0.03998607397079468], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.38570713996887207, 0.0, -0.00015007323236204684, -0.04727410525083542, -0.01735852099955082, -0.00010227633902104571, -0.0017546509625390172, -0.0369168259203434, -0.005431537050753832, -3.933898824470816e-06, -7.283422019099817e-05, -0.39446893334388733, -0.2295522689819336, -0.10609189420938492, -0.006830675061792135, -1.1920922133867862e-06, -0.11624442040920258, -4.100715523236431e-05, -0.00020144341397099197, -0.05530628189444542, -0.0002273062855238095, -0.016043849289417267, -0.23994432389736176], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.003150739474222064, -0.0012415089877322316, -0.0008688965463079512, -3.135155202471651e-05, -1.1920922133867862e-06, -5.471556869451888e-05, -0.6999662518501282], "finish_reason": "stop"}], "metrics": {"energy": 178.00520912361148, "energy_per_token": 1.7282059138214707, "time": 6.71716, "time_per_token": 0.06521514563106796}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-1.054012656211853, -0.5663197636604309, -0.0006771179032512009, -0.0064575341530144215, -0.014911852777004242, -0.02373124286532402, -6.592056161025539e-05, -0.044710639864206314, -0.0801544263958931, -0.012163981795310974], "finish_reason": "stop"}, {"text": " TypeError('Dataframe must contain only numerical values')", "tokens": [" Type", "Error", "('", "Data", "frame", " must", " contain", " only", " numerical", " values", "')", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -1.8339295387268066, -2.2341647148132324, -0.43877044320106506, -1.444782018661499, -0.3638925850391388, -0.506270170211792, -0.9403751492500305, -1.348645567893982, -0.41213229298591614, -0.002727600047364831], "finish_reason": "stop"}, {"text": " df.empty or np.isnan(df).any().any():", "tokens": [" df", ".", "empty", " or", " np", ".", "is", "nan", "(", "df", ")", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.17857418954372406, -0.0033926567994058132, -0.7802610993385315, -0.7948645353317261, -1.5311903953552246, -0.0002985746832564473, -0.8543910384178162, -0.00315941427834332, -0.0004922132357023656, -0.007984979078173637, -0.17532452940940857, -8.141662692651153e-05, -0.46261322498321533, -0.09724612534046173, -0.008565590716898441, -0.037410613149404526, -0.009029152803122997, -0.004554375074803829], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0026442583184689283, -3.325883881188929e-05, -0.009839014150202274, -0.007337880786508322, -0.04174220934510231, -0.001712642959319055, -0.0012744885170832276, -0.31044459342956543, -0.00130425242241472, -0.01118225697427988, -0.0064749447628855705, -0.005190468393266201, -0.008107963018119335, -0.002462095348164439, -0.007817033678293228, -0.0007354891858994961, -0.00031585473334416747, -0.0010587330907583237], "finish_reason": "stop"}, {"text": " df.cumsum().apply(lambda x: MinMaxScaler().fit_transform(np.expand_dims(x, axis=0))[0])", "tokens": [" df", ".", "cum", "sum", "()", ".", "apply", "(", "lambda", " x", ":", " Min", "Max", "Scal", "er", "()", ".", "fit", "_", "transform", "(", "np", ".", "expand", "_", "dim", "s", "(", "x", ",", " axis", "=", "0", "))", "[", "0", "])", "\n"], "logprobs": [-0.1449999213218689, -0.02977101318538189, -0.1763862669467926, -0.0008214913541451097, -0.17508170008659363, -0.64732825756073, -3.0317676067352295, -0.014924653805792332, -0.7153205275535583, -0.09309186041355133, -0.0009298768127337098, -2.844637870788574, -0.00023600654094479978, -0.001911718980409205, -3.3378546504536644e-06, -0.46163472533226013, -0.0019546705298125744, -0.12042186409235, -0.03947488218545914, -0.0010065733222290874, -0.0076620737090706825, -1.5234715938568115, -0.0005235493299551308, -1.831752896308899, -3.158996332786046e-05, -8.189342770492658e-05, -5.483612312673358e-06, -0.0019299230771139264, -0.0170751940459013, -0.05914982780814171, -0.21043960750102997, -0.18569587171077728, -0.7382869720458984, -0.38642778992652893, -0.7661300301551819, -0.00283946399576962, -0.22769232094287872, -0.0659862533211708], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0013243722496554255, -0.00024423000286333263, -0.005330753047019243, -1.311301275563892e-06, -0.4048909842967987, -0.019407153129577637], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.345899760723114, 0.0, -0.00016389934171456844, -0.0389547124505043, -0.017460092902183533, -0.00011634149996098131, -0.0022054414730519056, -0.030944345518946648, -0.007412430830299854, -3.814689989667386e-06, -7.724463648628443e-05, -0.42518123984336853, -0.24770887196063995, -0.10111937671899796, -0.00735716987401247, -1.1920922133867862e-06, -0.09659120440483093, -4.3987260141875595e-05, -0.00020919041708111763, -0.058191929012537, -0.00024184639914892614, -0.01495060883462429, -0.23418891429901123], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.003333489876240492, -0.0010786197381094098, -0.001156376558355987, -2.634490556374658e-05, -1.0728830375228426e-06, -6.282132380874828e-05, -0.7579246759414673], "finish_reason": "stop"}], "metrics": {"energy": 225.21544064903262, "energy_per_token": 1.7061775806744894, "time": 8.159493, "time_per_token": 0.0618143409090909}}
{"outputs": [{"text": " df.empty or df.isna().any().any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "na", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.5647587776184082, -0.25824210047721863, -0.011208898387849331, -0.03835006803274155, -0.5590254664421082, -0.026101406663656235, -0.00020489977032411844, -0.6134973764419556, -0.23202712833881378, -0.07451142370700836, -0.019518686458468437, -0.016688505187630653, -0.03392179310321808], "finish_reason": "stop"}, {"text": " TypeError(\"The input DataFrame contains non-numeric data types.\")", "tokens": [" Type", "Error", "(", "\"", "The", " input", " Data", "Frame", " contains", " non", "-", "numeric", " data", " types", ".", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -1.0753954648971558, -1.8125426769256592, -0.19990913569927216, -0.002705843886360526, -0.39630192518234253, -0.010831138119101524, -0.00209469604305923, -0.017304042354226112, -0.03883856162428856, -0.009854476898908615, -0.22953388094902039, -0.007624808698892593, -0.0004070168943144381, -0.004206500016152859], "finish_reason": "stop"}, {"text": " df.isna().any().any():", "tokens": [" df", ".", "is", "na", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.18993721902370453, -0.0025134659372270107, -0.9741705656051636, -0.6450305581092834, -0.0030478236731141806, -0.000102037942269817, -0.7453482151031494, -0.010825948789715767, -0.00765769649296999, -0.07124968618154526, -0.023131415247917175, -0.005090490449219942], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0027033472433686256, -3.8265450712060556e-05, -0.008904745802283287, -0.00924768391996622, -0.036257147789001465, -0.0017163321608677506, -0.001260677701793611, -0.3997972905635834, -0.0013228246243670583, -0.009754491969943047, -0.006591601297259331, -0.005233516450971365, -0.008353767916560173, -0.002615247620269656, -0.009327524341642857, -0.0007780147134326398, -0.00034564718953333795, -0.0011336335446685553], "finish_reason": "stop"}, {"text": " df.cumsum().div(df.sum(axis=0)).astype(float)", "tokens": [" df", ".", "cum", "sum", "()", ".", "div", "(", "df", ".", "sum", "(", "axis", "=", "0", "))", ".", "ast", "ype", "(", "float", ")", "\n"], "logprobs": [-0.17216020822525024, -0.03587343916296959, -0.1554565578699112, -0.0011380392825230956, -0.1875656545162201, -0.6433644890785217, -2.6543238162994385, -0.2837062478065491, -0.015364499762654305, -0.07997440546751022, -1.752797245979309, -1.4285616874694824, -0.09677983820438385, -0.03642842918634415, -0.19923989474773407, -1.8851691484451294, -2.0674426555633545, -3.1669702529907227, -8.95221673999913e-05, -0.09826503694057465, -0.9555891156196594, -0.009962832555174828, -0.09261928498744965], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011023165425285697, -0.00022718709078617394, -0.005076494999229908, -1.311301275563892e-06, -0.4364478886127472, -0.02011016756296158], "finish_reason": "stop"}, {"text": " df_cumsum.copy()", "tokens": [" df", "_", "cum", "sum", ".", "copy", "()", "\n"], "logprobs": [-2.7237653732299805, -0.02227046526968479, -3.2543604902457446e-05, -0.00025293012731708586, -0.05207229033112526, -1.9011685848236084, -0.0646870881319046, -0.037630949169397354], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0033282621297985315, -0.0011538759572431445, -0.0010425376240164042, -2.5152843591058627e-05, -1.1920922133867862e-06, -4.994744449504651e-05, -1.3433523178100586, -3.576278118089249e-07, -5.960462772236497e-07, -2.3007127310847864e-05, -8.225102646974847e-05, -0.058841682970523834], "finish_reason": "stop"}], "metrics": {"energy": 258.74102811813356, "energy_per_token": 2.289743611664899, "time": 7.7381377, "time_per_token": 0.06847909469026549}}
{"outputs": [{"text": " len(df) == 0:", "tokens": [" len", "(", "df", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-3.1302475929260254, -0.000392598332837224, -0.004515688866376877, -0.2800305187702179, -0.12589852511882782, -0.0009274948388338089, -0.0001961992384167388, -0.3242253363132477, -0.03492128849029541], "finish_reason": "stop"}, {"text": " TypeError(\"Dataframe must have only numerical columns\")", "tokens": [" Type", "Error", "(", "\"", "Data", "frame", " must", " have", " only", " numerical", " columns", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -2.4348220825195312, -0.3372928202152252, -1.2548141479492188, -2.2350709438323975, -1.1380882263183594, -1.0995104312896729, -0.6428760290145874, -0.5086433291435242, -0.0007844470092095435, -0.004106185864657164], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.18993721902370453, -0.0025134659372270107, -0.7392634153366089, -0.6329855918884277, -0.003855297341942787], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002544144168496132, -3.528532761265524e-05, -0.009499703533947468, -0.009261621162295341, -0.03776480630040169, -0.0018486568005755544, -0.0013549680588766932, -0.2960534691810608, -0.0012655591126531363, -0.01022576354444027, -0.00661185197532177, -0.0044997865334153175, -0.0090414397418499, -0.0022747849579900503, -0.008780797012150288, -0.0008990298374556005, -0.00041059168870560825, -0.000974537746515125], "finish_reason": "stop"}, {"text": " df.cumsum().copy()", "tokens": [" df", ".", "cum", "sum", "()", ".", "copy", "()", "\n"], "logprobs": [-0.1410430669784546, -0.03342074900865555, -0.2189532071352005, -0.0009915679693222046, -0.18359225988388062, -0.6315305233001709, -1.7872270345687866, -0.02253321185708046, -0.10981415212154388], "finish_reason": "stop"}, {"text": " MinMaxScaler(copy=True, features_to_select=None, feature_range=(0, 1), preserve_data_type=True, strategy='transform', min_max_order=None)", "tokens": [" Min", "Max", "Scal", "er", "(", "copy", "=", "True", ",", " features", "_", "to", "_", "select", "=", "None", ",", " feature", "_", "range", "=(", "0", ",", " ", "1", ")", ",", " preserve", "_", "data", "_", "type", "=", "True", ",", " strategy", "='", "transform", "'", ",", " min", "_", "max", "_", "order", "=", "None", ")", "\n"], "logprobs": [-0.0012982996413484216, -0.00020740265608765185, -0.005842749495059252, -1.4305104514278355e-06, -1.150373101234436, -1.1305737495422363, -0.0057679638266563416, -0.2820013463497162, -0.009620612487196922, -2.994619369506836, -0.003979858942329884, -0.18017442524433136, -2.145764938177308e-06, -2.7502858638763428, -0.2128286212682724, -0.6357261538505554, -0.09744523465633392, -1.0502817630767822, -0.006760344374924898, -0.2814023196697235, -0.15105359256267548, -0.005558036733418703, -0.05026688426733017, -0.03273557126522064, -0.007170774042606354, -1.083035945892334, -0.0010578995570540428, -3.081711530685425, -0.00011717586312443018, -2.5009071826934814, -0.03793720528483391, -0.43311843276023865, -0.004860134795308113, -0.7788540124893188, -0.9562574028968811, -1.6867603063583374, -0.48083940148353577, -2.5219485759735107, -1.3146346807479858, -0.012891759164631367, -2.3177061080932617, -0.007287112530320883, -0.25359758734703064, -0.006111504975706339, -0.5425987839698792, -0.8902981281280518, -1.2402637004852295, -0.5044311881065369, -0.05552530288696289], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.3684134781360626, 0.0, -0.0001551984460093081, -0.04077732190489769, -0.016013700515031815, -0.00010430268594063818, -0.0021137294825166464, -0.031352363526821136, -0.008930266834795475, -3.933898824470816e-06, -6.0794889577664435e-05, -1.4019036293029785, -0.05670790746808052], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.003653638530522585, -0.001046229270286858, -0.0009465504554100335, -2.2172682292875834e-05, -1.311301275563892e-06, -6.270212179515511e-05, -1.2895616292953491, -3.576278118089249e-07, -5.960462772236497e-07, -1.7165990357170813e-05, -6.48477507638745e-05, -0.05144699662923813], "finish_reason": "stop"}], "metrics": {"energy": 249.45874806022636, "energy_per_token": 1.9337887446529174, "time": 8.754692, "time_per_token": 0.06786582945736434}}
{"outputs": [{"text": " df.empty or df.isna().any().any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "na", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.5647587776184082, -0.25824210047721863, -0.011208898387849331, -0.03835006803274155, -0.5590254664421082, -0.026101406663656235, -0.00020489977032411844, -0.6134973764419556, -0.23202712833881378, -0.07451142370700836, -0.019518686458468437, -0.016688505187630653, -0.03392179310321808], "finish_reason": "stop"}, {"text": " TypeError('Invalid type. The input dataframe should contain only numerical columns.')", "tokens": [" Type", "Error", "('", "Invalid", " type", ".", " The", " input", " data", "frame", " should", " contain", " only", " numerical", " columns", ".", "')", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -1.8339295387268066, -3.8847641944885254, -3.305849552154541, -1.8604217767715454, -2.6761505603790283, -1.5421878099441528, -1.8572781085968018, -0.3843969404697418, -1.3836947679519653, -0.5718917846679688, -0.5867237448692322, -0.8819925785064697, -1.2657692432403564, -0.36950209736824036, -0.02204601652920246, -0.002746026962995529], "finish_reason": "stop"}, {"text": " df.isna().values.any():", "tokens": [" df", ".", "is", "na", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.17857418954372406, -0.0033926567994058132, -0.9604960083961487, -0.8185505867004395, -0.0024995533749461174, -0.00013410145766101778, -0.8480851650238037, -0.0007857572636567056, -0.01920427940785885, -0.14986854791641235, -0.0030077716801315546], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002454841509461403, -3.5523738915799186e-05, -0.008304587565362453, -0.007475734688341618, -0.034810539335012436, -0.001788208493962884, -0.0014081810368224978, -0.3550761044025421, -0.0012824652949348092, -0.010032583959400654, -0.006757265888154507, -0.004535506945103407, -0.008312981575727463, -0.0021415650844573975, -0.008582374081015587, -0.0007239343249239028, -0.0003321811091154814, -0.000998594332486391], "finish_reason": "stop"}, {"text": " df.cumsum().copy()", "tokens": [" df", ".", "cum", "sum", "()", ".", "copy", "()", "\n"], "logprobs": [-0.15532174706459045, -0.02836492843925953, -0.19762177765369415, -0.0009827552130445838, -0.18026670813560486, -0.6427645087242126, -1.7857130765914917, -0.028171280398964882, -0.097477026283741], "finish_reason": "stop"}, {"text": " MinMaxScaler(feature_range=(0, 1), copy=False)", "tokens": [" Min", "Max", "Scal", "er", "(", "feature", "_", "range", "=(", "0", ",", " ", "1", ")", ",", " copy", "=", "False", ")", "\n"], "logprobs": [-0.001191859133541584, -0.00025459862081333995, -0.005126189440488815, -1.1920922133867862e-06, -1.0159395933151245, -0.5025473833084106, -1.0728830375228426e-06, -0.0001793938863556832, -0.09590130299329758, -0.004060358740389347, -0.02768068015575409, -0.03587953373789787, -0.0047770896926522255, -2.1091291904449463, -0.00041392818093299866, -0.2532796859741211, -0.0027816910296678543, -0.5656269788742065, -0.04837893322110176, -0.03356531262397766], "finish_reason": "stop"}, {"text": " pd.DataFrame()", "tokens": [" pd", ".", "DataFrame", "()", "\n"], "logprobs": [-1.4924252033233643, -0.0024791003670543432, -0.017010502517223358, -2.8516030311584473, -0.00791910570114851], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.0033881422132253647, -0.0010995777556672692, -0.0008663953049108386, -2.8013790142722428e-05, -1.1920922133867862e-06, -6.532455881824717e-05, -0.6398885846138], "finish_reason": "stop"}], "metrics": {"energy": 253.58449721717844, "energy_per_token": 2.4383124732421004, "time": 7.532512, "time_per_token": 0.07242799999999999}}
{"outputs": [{"text": " not (df.columns.dtypes == 'float64').all():", "tokens": [" not", " (", "df", ".", "columns", ".", "d", "types", " ==", " '", "float", "6", "4", "')", ".", "all", "():", "\n"], "logprobs": [-1.054012656211853, -2.86987042427063, -0.5514811277389526, -0.04587113857269287, -2.5849075317382812, -0.249970480799675, -0.8267199993133545, -1.2733328342437744, -0.2081983983516693, -0.4616513252258301, -0.6321617364883423, -0.04361087828874588, -7.152555099310121e-07, -0.3641236424446106, -0.24321193993091583, -0.06417719274759293, -0.10347727686166763, -0.02398068644106388], "finish_reason": "stop"}, {"text": " TypeError('Input DataFrame contains non-numeric data types')", "tokens": [" Type", "Error", "('", "Input", " Data", "Frame", " contains", " non", "-", "numeric", " data", " types", "')", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -1.8339295387268066, -2.556518077850342, -0.7672030925750732, -0.015307915396988392, -0.47798052430152893, -0.019360968843102455, -0.006031644530594349, -0.07763394713401794, -0.10535230487585068, -0.02597968652844429, -0.5639055967330933, -0.002179153962060809], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.17857418954372406, -0.0033926567994058132, -0.7802610993385315, -0.6140764951705933, -0.003889140672981739], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002380991354584694, -4.0649541915627196e-05, -0.010857906192541122, -0.008321257308125496, -0.03495513275265694, -0.0016906267264857888, -0.0014132998185232282, -0.31574925780296326, -0.0014058002270758152, -0.010732665657997131, -0.006339321844279766, -0.0047651068307459354, -0.008509093895554543, -0.002435457892715931, -0.008009104058146477, -0.0007354891858994961, -0.0003592322755139321, -0.0010351543314754963], "finish_reason": "stop"}, {"text": " df.cumsum().div(df.cumsum()).reindex(df.index, copy=False)", "tokens": [" df", ".", "cum", "sum", "()", ".", "div", "(", "df", ".", "cum", "sum", "())", ".", "re", "index", "(", "df", ".", "index", ",", " copy", "=", "False", ")", "\n"], "logprobs": [-0.14030702412128448, -0.028442444279789925, -0.16379165649414062, -0.0009425011812709272, -0.1985856592655182, -0.6025712490081787, -2.804157257080078, -0.26997703313827515, -0.01604408398270607, -0.08588732033967972, -0.2538636028766632, -0.00028451209072954953, -1.0940603017807007, -2.110995292663574, -3.9706900119781494, -0.13912265002727509, -0.1079806536436081, -0.3540906310081482, -0.02394355833530426, -0.3902226686477661, -2.0204262733459473, -1.553770899772644, -0.005622406490147114, -0.17473451793193817, -0.010642086155712605, -0.0732194185256958], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011688789818435907, -0.0002060916303889826, -0.00417088670656085, -1.311301275563892e-06, -0.40207406878471375, -0.014946616254746914], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.3309013247489929, 0.0, -0.0001311216183239594, -0.04062040522694588, -0.017260104417800903, -0.00012027494085486978, -0.0022401732858270407, -0.03392133116722107, -0.008098858408629894, -4.0531076592742465e-06, -7.807903602952138e-05, -0.3446199297904968, -0.2248562127351761, -0.12267779558897018, -0.007568849716335535, -1.0728830375228426e-06, -0.11208046972751617, -3.7788631743751466e-05, -0.00018225439998786896, -0.05621691420674324, -0.00021896349790040404, -0.013102623634040356, -0.24320539832115173], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum"], "logprobs": [-0.003293805755674839, -0.00084436044562608, -0.0010001424234360456, -2.5748875486897305e-05, -1.1920922133867862e-06, -6.210611172718927e-05], "finish_reason": "stop"}], "metrics": {"energy": 238.28768714714053, "energy_per_token": 2.0542041995443148, "time": 7.3405366, "time_per_token": 0.06328048793103448}}
{"outputs": [{"text": " df is None or df.empty:", "tokens": [" df", " is", " None", " or", " df", ".", "empty", ":", "\n"], "logprobs": [-0.7068980932235718, -3.0328073501586914, -0.05145809426903725, -0.7962778806686401, -0.5843147039413452, -0.004319860599935055, -0.12430835515260696, -0.4102020561695099, -0.02331940270960331], "finish_reason": "stop"}, {"text": " TypeError(\"DataFrame must contain only numerical columns.\")", "tokens": [" Type", "Error", "(", "\"", "DataFrame", " must", " contain", " only", " numerical", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -0.2433701753616333, -1.3423765897750854, -1.213061809539795, -0.21207213401794434, -0.5176257491111755, -0.9630634188652039, -1.2269926071166992, -1.0336394309997559, -0.004698901902884245, -0.0002330270071979612, -0.0035415091551840305], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.18993721902370453, -0.0025134659372270107, -0.7392634153366089, -0.6329855918884277, -0.003855297341942787], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002544144168496132, -3.528532761265524e-05, -0.009499703533947468, -0.009261621162295341, -0.03776480630040169, -0.0018486568005755544, -0.0013549680588766932, -0.2960534691810608, -0.0012655591126531363, -0.01022576354444027, -0.00661185197532177, -0.0044997865334153175, -0.0090414397418499, -0.0022747849579900503, -0.008780797012150288, -0.0008990298374556005, -0.00041059168870560825, -0.000974537746515125], "finish_reason": "stop"}, {"text": " df.cumsum(axis=0)", "tokens": [" df", ".", "cum", "sum", "(", "axis", "=", "0", ")", "\n"], "logprobs": [-0.1410430669784546, -0.03342074900865555, -0.2189532071352005, -0.0009915679693222046, -1.810091495513916, -0.06214463338255882, -0.06314744055271149, -0.09298280626535416, -0.10237360000610352, -0.5858423709869385], "finish_reason": "stop"}, {"text": " MinMaxScaler(feature_range=(0, 1), copy=False)", "tokens": [" Min", "Max", "Scal", "er", "(", "feature", "_", "range", "=(", "0", ",", " ", "1", ")", ",", " copy", "=", "False", ")", "\n"], "logprobs": [-0.0012982996413484216, -0.00020740265608765185, -0.005842749495059252, -1.4305104514278355e-06, -1.150373101234436, -0.45790907740592957, -1.311301275563892e-06, -0.00011896379146492109, -0.08596979826688766, -0.0032209681812673807, -0.0215387511998415, -0.03978114575147629, -0.004999872762709856, -2.1095807552337646, -0.0004011779965367168, -0.22420556843280792, -0.002840415108948946, -0.5426284074783325, -0.05358365550637245, -0.034354399889707565], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.3684134781360626, 0.0, -0.0001551984460093081, -0.04077732190489769, -0.016013700515031815, -0.00010430268594063818, -0.0021137294825166464, -0.031352363526821136, -0.008930266834795475, -3.933898824470816e-06, -6.0794889577664435e-05, -1.4019036293029785, -0.05670790746808052], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.003653638530522585, -0.001046229270286858, -0.0009465504554100335, -2.2172682292875834e-05, -1.311301275563892e-06, -6.270212179515511e-05, -1.2895616292953491, -3.576278118089249e-07, -5.960462772236497e-07, -1.7165990357170813e-05, -6.48477507638745e-05, -0.05144699662923813], "finish_reason": "stop"}], "metrics": {"energy": 250.7175442123413, "energy_per_token": 2.4823519228944684, "time": 7.5249987, "time_per_token": 0.07450493762376238}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.853640079498291, -0.027729729190468788], "finish_reason": "stop"}, {"text": " TypeError('The DataFrame must contain only numeric data types.')", "tokens": [" Type", "Error", "('", "The", " Data", "Frame", " must", " contain", " only", " numeric", " data", " types", ".", "')", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -1.8339295387268066, -1.2653231620788574, -0.3938041925430298, -0.003958842717111111, -1.5090147256851196, -0.12011543661355972, -0.4442022442817688, -0.5167428851127625, -0.8787691593170166, -0.10172396153211594, -0.33909785747528076, -0.007260603364557028, -0.002022127853706479], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.17857418954372406, -0.0033926567994058132, -0.7802610993385315, -0.6140764951705933, -0.003889140672981739], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002380991354584694, -4.0649541915627196e-05, -0.010857906192541122, -0.008321257308125496, -0.03495513275265694, -0.0016906267264857888, -0.0014132998185232282, -0.31574925780296326, -0.0014058002270758152, -0.010732665657997131, -0.006339321844279766, -0.0047651068307459354, -0.008509093895554543, -0.002435457892715931, -0.008009104058146477, -0.0007354891858994961, -0.0003592322755139321, -0.0010351543314754963], "finish_reason": "stop"}, {"text": " df.cumsum(axis=0)", "tokens": [" df", ".", "cum", "sum", "(", "axis", "=", "0", ")", "\n"], "logprobs": [-0.14030702412128448, -0.028442444279789925, -0.16379165649414062, -0.0009425011812709272, -1.7344056367874146, -0.048381317406892776, -0.05869240686297417, -0.07701671123504639, -0.11501853913068771, -0.6156430244445801], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011688789818435907, -0.0002060916303889826, -0.00417088670656085, -1.311301275563892e-06, -0.40207406878471375, -0.014946616254746914], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum.values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.3309013247489929, 0.0, -0.0001311216183239594, -0.04062040522694588, -0.017260104417800903, -0.00012027494085486978, -0.0022401732858270407, -0.03392133116722107, -0.008098858408629894, -4.0531076592742465e-06, -7.807903602952138e-05, -0.3446199297904968, -0.2248562127351761, -0.12267779558897018, -0.007568849716335535, -1.0728830375228426e-06, -0.11208046972751617, -3.7788631743751466e-05, -0.00018225439998786896, -0.05621691420674324, -0.00021896349790040404, -0.013102623634040356, -0.24320539832115173], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum"], "logprobs": [-0.003293805755674839, -0.00084436044562608, -0.0010001424234360456, -2.5748875486897305e-05, -1.1920922133867862e-06, -6.210611172718927e-05], "finish_reason": "stop"}], "metrics": {"energy": 161.4090921649933, "energy_per_token": 1.8341942291476512, "time": 6.0716257, "time_per_token": 0.0689957465909091}}
{"outputs": [{"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.853640079498291, -0.027729729190468788], "finish_reason": "stop"}, {"text": " TypeError(f\"DataFrame contains non-numeric data types.\")", "tokens": [" Type", "Error", "(", "f", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", " types", ".", "\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -1.9687024354934692, -0.2987540662288666, -1.623818278312683, -0.5586407780647278, -0.05635078251361847, -0.012617639265954494, -0.11770801246166229, -0.16412636637687683, -0.04403555393218994, -1.0999958515167236, -0.27522310614585876, -0.003386003663763404, -0.005421222187578678], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.16300725936889648, -0.0032929740846157074, -0.6023963093757629, -0.6380335092544556, -0.0029487009160220623], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0024756519123911858, -3.45700973412022e-05, -0.009756971150636673, -0.008495500311255455, -0.035902075469493866, -0.0017327546374872327, -0.001261987374164164, -0.32728639245033264, -0.0013827058719471097, -0.010772173292934895, -0.006495671812444925, -0.005859697237610817, -0.008211660198867321, -0.002274071332067251, -0.008692758157849312, -0.0007394201820716262, -0.00032586511224508286, -0.0009497660794295371], "finish_reason": "stop"}, {"text": " df.cumsum().apply(pd.Series.cumsum)", "tokens": [" df", ".", "cum", "sum", "()", ".", "apply", "(", "pd", ".", "Series", ".", "cum", "sum", ")", "\n"], "logprobs": [-0.15428070724010468, -0.03538372740149498, -0.18937629461288452, -0.0007744412287138402, -0.20879143476486206, -0.6401723027229309, -2.7164039611816406, -0.008717929944396019, -1.5823616981506348, -0.000243634101934731, -0.1735076755285263, -0.0029510778840631247, -0.026228684931993484, -0.011427543126046658, -0.09767544269561768, -0.3345952033996582], "finish_reason": "stop"}, {"text": " MinMaxScaler(copy=True, feature_range=(0, 1))", "tokens": [" Min", "Max", "Scal", "er", "(", "copy", "=", "True", ",", " feature", "_", "range", "=(", "0", ",", " ", "1", "))", "\n"], "logprobs": [-0.0011978124966844916, -0.0002087136817863211, -0.004361046943813562, -1.4305104514278355e-06, -1.097158432006836, -1.1304599046707153, -0.006456941831856966, -0.26123303174972534, -0.009195004589855671, -0.7861260771751404, -0.00015758226800244302, -0.0009871615329757333, -0.03918066993355751, -0.002498364308848977, -0.030929898843169212, -0.014848313294351101, -0.0026066871359944344, -0.3037683069705963, -0.03646935150027275], "finish_reason": "stop"}, {"text": " df_cumsum.apply(scaler.fit_transform)", "tokens": [" df", "_", "cum", "sum", ".", "apply", "(", "scal", "er", ".", "fit", "_", "transform", ")", "\n"], "logprobs": [-2.6053788661956787, -0.027340643107891083, -3.2543604902457446e-05, -0.00026901919045485556, -0.05317635461688042, -0.40187716484069824, -0.024990392848849297, -0.6263768672943115, -7.629365427419543e-06, -0.002018677769228816, -0.5386319756507874, -0.011637774296104908, -0.000402250443585217, -0.2958081066608429, -0.08291558921337128], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum"], "logprobs": [-0.003731314092874527, -0.0010942192748188972, -0.00114827963989228, -2.8371408916427754e-05, -1.1920922133867862e-06, -6.16293036728166e-05], "finish_reason": "stop"}], "metrics": {"energy": 179.2425553512573, "energy_per_token": 1.792425553512573, "time": 6.7192197, "time_per_token": 0.067192197}}
{"outputs": [{"text": " not (df.dtypes == 'float64').all():", "tokens": [" not", " (", "df", ".", "d", "types", " ==", " '", "float", "6", "4", "')", ".", "all", "():", "\n"], "logprobs": [-1.054012656211853, -2.86987042427063, -0.5514811277389526, -0.04587113857269287, -1.1224268674850464, -0.0037847571074962616, -0.3155517280101776, -0.37187859416007996, -0.9636572003364563, -0.06454963982105255, -1.311301275563892e-06, -0.6586902737617493, -0.026701658964157104, -0.08863959461450577, -0.18463733792304993, -0.030250180512666702], "finish_reason": "stop"}, {"text": " TypeError(f'df has non-numerical columns')", "tokens": [" Type", "Error", "(", "f", "'", "df", " has", " non", "-", "n", "umerical", " columns", "')", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -1.9687024354934692, -1.392422080039978, -2.8020029067993164, -2.1853790283203125, -0.25638094544410706, -0.03621874749660492, -1.5134910345077515, -0.010629111900925636, -0.5732002258300781, -0.6492798924446106, -0.005003787111490965], "finish_reason": "stop"}, {"text": " df.isnull().any().any():", "tokens": [" df", ".", "is", "null", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.16300725936889648, -0.0032929740846157074, -1.2007277011871338, -0.5915774703025818, -0.002329376293346286, -9.023735765367746e-05, -0.8742109537124634, -0.01232907921075821, -0.0028483793139457703, -0.07014596462249756, -0.012959659099578857, -0.004690477624535561], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002587781986221671, -3.3378044463461265e-05, -0.008892340585589409, -0.008304351009428501, -0.03619322553277016, -0.0018659100169315934, -0.0012638922780752182, -0.3045803904533386, -0.0012855607783421874, -0.010686669498682022, -0.0065204245038330555, -0.005254980642348528, -0.008874734863638878, -0.002386699663475156, -0.007615935988724232, -0.0007307243067771196, -0.00032360086333937943, -0.0010617101797834039], "finish_reason": "stop"}, {"text": " df.cumsum() / df.cumsum().max()", "tokens": [" df", ".", "cum", "sum", "()", " /", " df", ".", "cum", "sum", "()", ".", "max", "()", "\n"], "logprobs": [-0.14510509371757507, -0.03760569170117378, -0.17979255318641663, -0.0008577005355618894, -0.2008536458015442, -3.38681697845459, -0.23446156084537506, -0.039626020938158035, -0.9965016841888428, -0.005081357900053263, -0.0350000262260437, -0.022341812029480934, -0.4489234685897827, -0.07948248833417892, -0.14938387274742126], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0013231817865744233, -0.0001774868869688362, -0.004895723424851894, -1.5497195136049413e-06, -0.4410492479801178, -0.016533037647604942], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.39349693059921265, 0.0, -0.00016318420239258558, -0.04501838609576225, -0.016305772587656975, -0.00011431517486926168, -0.002554608043283224, -0.034643471240997314, -0.006775973830372095, -4.0531076592742465e-06, -8.368142152903602e-05, -1.2985398769378662, -0.06126674264669418], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0034468306694179773, -0.0010364643530920148, -0.0008936702506616712, -2.6702524337451905e-05, -1.1920922133867862e-06, -6.48477507638745e-05, -1.216797113418579, -3.576278118089249e-07, -5.960462772236497e-07, -2.6225699912174605e-05, -8.582700684200972e-05, -0.04514612630009651], "finish_reason": "stop"}], "metrics": {"energy": 225.12383407402038, "energy_per_token": 2.1238097554152864, "time": 6.8867245, "time_per_token": 0.06496909905660377}}
{"outputs": [{"text": " df.isnull().any().any():", "tokens": [" df", ".", "is", "null", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -1.9141912460327148, -0.6654349565505981, -0.004385140724480152, -0.00022384998737834394, -0.607574462890625, -0.09226388484239578, -0.08341273665428162, -0.05482960492372513, -0.07736001908779144, -0.05986228957772255], "finish_reason": "stop"}, {"text": " TypeError(f\"Invalid data type: {df.dtypes}\")", "tokens": [" Type", "Error", "(", "f", "\"", "Invalid", " data", " type", ":", " {", "df", ".", "d", "types", "}\"", ")", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -0.28249791264533997, -1.9687024354934692, -0.2987540662288666, -3.625727653503418, -1.0364961624145508, -0.9878923892974854, -2.0326757431030273, -0.39811617136001587, -0.1926528662443161, -0.04330669716000557, -0.5549103617668152, -0.0044206278398633, -0.5742589235305786, -0.0011631635716184974, -0.009882924146950245], "finish_reason": "stop"}, {"text": " df.empty or df.isnull().values.any():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "null", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.16300725936889648, -0.0032929740846157074, -0.6023963093757629, -0.7657190561294556, -0.53281569480896, -0.010441555641591549, -0.017202455550432205, -0.9656857252120972, -0.005950710736215115, -9.846202738117427e-05, -0.7412899732589722, -0.0014253228437155485, -0.025167103856801987, -0.027535494416952133, -0.0034665511921048164], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.00243926327675581, -3.731181277544238e-05, -0.008833142928779125, -0.007553350646048784, -0.03870806097984314, -0.001807485707104206, -0.0010626628063619137, -0.33342862129211426, -0.001209719106554985, -0.009585308842360973, -0.006930005736649036, -0.004983148071914911, -0.00964670442044735, -0.0022461204789578915, -0.008973035961389542, -0.0007593132322654128, -0.0003389737685211003, -0.001081358641386032], "finish_reason": "stop"}, {"text": " df.cumsum().copy()", "tokens": [" df", ".", "cum", "sum", "()", ".", "copy", "()", "\n"], "logprobs": [-0.13648702204227448, -0.029566992074251175, -0.1987149566411972, -0.0009922825265675783, -0.19794496893882751, -0.6807171702384949, -1.800821304321289, -0.028059201315045357, -0.10260632634162903], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0012902038870379329, -0.00021801002731081098, -0.0050953528843820095, -1.4305104514278355e-06, -0.4135434031486511, -0.019088149070739746], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(df_cumsum.T).T)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ".", "T", ")", ".", "T", ")", "\n"], "logprobs": [-1.5450851917266846, -0.0016890796832740307, -0.01859506033360958, -0.07908626645803452, -0.05529646575450897, -3.194758028257638e-05, -0.00010084597306558862, -0.05987890809774399, -0.005654411856085062, -7.676783570786938e-05, -0.0015018623089417815, -0.015909049659967422, -0.008086323738098145, -2.7418097943154862e-06, -3.421248038648628e-05, -0.9438450932502747, -3.040809154510498, -0.38264521956443787, -0.3026313781738281, -0.008465949445962906, -0.5722541213035583, -0.03345729410648346], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "\n"], "logprobs": [-0.0035247597843408585, -0.0011531615164130926, -0.0008628221112303436, -2.7656173188006505e-05, -1.1920922133867862e-06, -5.98412734689191e-05, -0.6641957759857178], "finish_reason": "stop"}], "metrics": {"energy": 179.95772714424135, "energy_per_token": 1.6977144070211447, "time": 6.693721, "time_per_token": 0.06314831132075471}}
{"outputs": [{"text": " df.empty or df.isna().all().all():", "tokens": [" df", ".", "empty", " or", " df", ".", "is", "na", "()", ".", "all", "()", ".", "all", "():", "\n"], "logprobs": [-0.7068980932235718, -0.05638030543923378, -0.21148017048835754, -0.5647587776184082, -0.25824210047721863, -0.011208898387849331, -0.03835006803274155, -0.5590254664421082, -0.026101406663656235, -0.00020489977032411844, -1.5836511850357056, -0.5756931304931641, -0.047436803579330444, -0.3582434356212616, -0.024912608787417412, -0.04534699767827988], "finish_reason": "stop"}, {"text": " TypeError('DataFrame contains non-numeric data types')", "tokens": [" Type", "Error", "('", "DataFrame", " contains", " non", "-", "numeric", " data", " types", "')", "\n"], "logprobs": [-0.02938932180404663, -7.986990567587782e-06, -1.8339295387268066, -1.4981913566589355, -0.5846899747848511, -0.017372580245137215, -0.0066833775490522385, -0.08063963800668716, -0.08354279398918152, -0.02499469555914402, -0.34640413522720337, -0.002435933565720916], "finish_reason": "stop"}, {"text": " df.empty:", "tokens": [" df", ".", "empty", ":", "\n"], "logprobs": [-0.17857418954372406, -0.0033926567994058132, -0.7802610993385315, -0.6140764951705933, -0.003889140672981739], "finish_reason": "stop"}, {"text": " ValueError(\"Input DataFrame is empty or contains NaN values.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", " or", " contains", " Na", "N", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002380991354584694, -4.0649541915627196e-05, -0.010857906192541122, -0.008321257308125496, -0.03495513275265694, -0.0016906267264857888, -0.0014132998185232282, -0.31574925780296326, -0.0014058002270758152, -0.010732665657997131, -0.006339321844279766, -0.0047651068307459354, -0.008509093895554543, -0.002435457892715931, -0.008009104058146477, -0.0007354891858994961, -0.0003592322755139321, -0.0010351543314754963], "finish_reason": "stop"}, {"text": " df.cumsum().copy()", "tokens": [" df", ".", "cum", "sum", "()", ".", "copy", "()", "\n"], "logprobs": [-0.14030702412128448, -0.028442444279789925, -0.16379165649414062, -0.0009425011812709272, -0.1985856592655182, -0.6025712490081787, -1.691898226737976, -0.03005979023873806, -0.09486491233110428], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011688789818435907, -0.0002060916303889826, -0.00417088670656085, -1.311301275563892e-06, -0.40207406878471375, -0.014946616254746914], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_cumsum)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "cum", "sum", ")", "\n"], "logprobs": [-0.3309013247489929, 0.0, -0.0001311216183239594, -0.04062040522694588, -0.017260104417800903, -0.00012027494085486978, -0.0022401732858270407, -0.03392133116722107, -0.008098858408629894, -4.0531076592742465e-06, -7.807903602952138e-05, -1.3663160800933838, -0.051768410950899124], "finish_reason": "stop"}, {"text": " df_norm_cumsum", "tokens": [" df", "_", "norm", "_", "cum", "sum", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.003293805755674839, -0.00084436044562608, -0.0010001424234360456, -2.5748875486897305e-05, -1.1920922133867862e-06, -6.210611172718927e-05, -1.2825467586517334, -2.3841855067985307e-07, -5.960462772236497e-07, -2.2291887944447808e-05, -0.00010930894495686516, -0.05193207412958145], "finish_reason": "stop"}], "metrics": {"energy": 166.49407576942437, "energy_per_token": 1.8296052282354327, "time": 6.2724814, "time_per_token": 0.06892836703296704}}
