{"outputs": [{"text": "# Check if the log directory exists\n    if not os.path.exists(log_dir):\n        os.makedirs(log_dir)\n\n    # Construct the log file path\n    log_file = os.path.join(log_dir, filename)\n\n    # Write the metrics to the log file\n    try:\n        with open(log_file, 'a') as f:\n            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n            for metric, value in metrics.items():\n                f.write(f'[{timestamp}] {metric}: {value}\\n')\n        print(f'Metrics logged to {log_file}')\n        return True\n    except Exception as e:\n        print(f'An error occurred: {e}')\n        return False", "tokens": ["#", " Check", " if", " the", " log", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "\n", "    ", "#", " Construct", " the", " log", " file", " path", "\n", "    ", "log", "_", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Write", " the", " metrics", " to", " the", " log", " file", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "file", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "f", "'", "[{", "timestamp", "}]", " {", "metric", "}:", " {", "value", "}\\", "n", "')", "\n", "        ", "print", "(", "f", "'", "Metrics", " logged", " to", " {", "log", "_", "file", "}", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-1.312898874282837, -1.183685064315796, -0.1372096687555313, -0.39080381393432617, -0.2971900701522827, -0.13415542244911194, -0.021322306245565414, -1.1967040300369263, -0.0008864049450494349, -0.01697428710758686, -0.009625452570617199, -0.0008607972995378077, -4.291525328881107e-06, -0.002419165801256895, -2.1815061700181104e-05, -0.10169327259063721, -0.0010093123419210315, -0.009187917225062847, -8.4638240878121e-06, -1.9907753085135482e-05, -0.0005314130103215575, -0.0002401778765488416, -0.0019190958701074123, -0.8549325466156006, -1.4185804502631072e-05, -0.08375616371631622, -5.8410845667822286e-05, -2.3483953555114567e-05, -0.000198821333469823, -0.001574349240399897, -4.410734163684538e-06, -2.3841855067985307e-07, -0.001966092037037015, -0.013592076487839222, -0.07990529388189316, -0.00076908094342798, -0.1405242532491684, -0.6818928122520447, -0.016533389687538147, -1.1767076253890991, -0.039565179497003555, -0.032963283360004425, -0.07303603738546371, -0.00010489867418073118, -0.34742406010627747, -0.006175484042614698, -0.2320646494626999, -0.4249432384967804, -0.04963694140315056, -2.145764938177308e-06, -1.6093124941107817e-05, -6.079655122448457e-06, -0.0004991239402443171, -0.0003081085451412946, -0.0016126735135912895, -5.245195097813848e-06, -2.622600959512056e-06, -4.160317621426657e-05, -0.0036452056374400854, -0.0023088008165359497, -0.0007111880695447326, -0.014583070762455463, -0.0001515035255579278, -0.3112887442111969, -2.186282157897949, -0.24534335732460022, -0.10868322849273682, -0.06286783516407013, -0.0039749909192323685, -0.4490503966808319, -9.357491217087954e-05, -0.4003508388996124, -0.00026842328952625394, -0.06648407131433487, -2.1576648578047752e-05, -3.71926071238704e-05, -0.0009610801353119314, -0.02910776063799858, -0.00035577642847783864, -0.0002503081923350692, -0.0003543464408721775, -3.099436753473128e-06, -4.0531076592742465e-06, -0.00014959646796341985, -0.027399450540542603, -0.024319307878613472, -0.054132409393787384, -3.45700973412022e-05, -0.17179764807224274, -0.001649330137297511, -0.004462878219783306, -0.00040236959466710687, -0.4703977704048157, -0.0010545651894062757, -0.009971566498279572, -2.3841574147809297e-05, -0.01368003711104393, -3.611976353568025e-05, -0.020107831805944443, -0.024895282462239265, -5.960462772236497e-07, -0.2479039877653122, -0.014438790269196033, -0.016635045409202576, -0.009509976021945477, -0.0004807746736332774, -9.417489309271332e-06, -0.00010096516780322418, -0.001872930210083723, -0.0003375437227077782, -0.0007219092221930623, -6.210611172718927e-05, -0.0005740663618780673, -7.974783511599526e-05, -0.02379247359931469, -0.003366281744092703, -0.007636165712028742, -0.1860063076019287, -0.38701990246772766, -0.1873980313539505, -0.0012506766943261027, -3.242440288886428e-05, -0.007823184132575989, -0.0013062763027846813, -3.2305197237292305e-05, -2.0146166207268834e-05, -0.00020847532141488045, -0.00019095504831057042, -0.046175338327884674, -7.271740287251305e-06, -1.3351351299206726e-05, -0.004000518936663866, -0.0017923733685165644, -2.267794132232666, -0.03705594688653946, -0.000704278820194304, -0.008325868286192417, -0.030671777203679085, -0.00017379203927703202, -0.08127420395612717, -0.002934675430878997, -0.016599519178271294, -0.004323302768170834, -3.564294092939235e-05, -4.351044481154531e-05, -0.00029345019720494747, -0.21032030880451202, -2.4732682704925537, -0.009934859350323677, -0.020882856100797653, -0.5640028715133667, -0.5187292695045471, -2.366063356399536, -0.22063128650188446, -0.06425421684980392, -0.03463241457939148, -9.536738616588991e-07, -0.0015873225638642907, -0.008107726462185383, -0.06502293050289154, -0.0029526231810450554, -0.08217885345220566, -0.003402874106541276, -0.000757645582780242, -0.005838483106344938, -0.025751188397407532, -0.000380324519937858, -0.3896479606628418, -0.0009432157967239618, -0.013321442529559135, -2.2053474822314456e-05, -0.0023953812196850777, -0.0002760506176855415, -0.04576455429196358, -0.009518359787762165, -0.0016540905926376581, -0.00803452916443348, -0.005189164076000452, -4.029192859889008e-05, -8.523101132595912e-05, -0.003813140094280243, -0.0004650464979931712, -0.3454764783382416, -0.007348767947405577, -0.003318044124171138, -0.00042215018766000867, -0.030195821076631546, -0.010567069053649902, -0.0006708040600642562, -0.3672249913215637, -0.0167433712631464, -0.606184720993042], "finish_reason": "stop"}], "metrics": {"energy": 658.3560410919184, "energy_per_token": 3.4289377140204085, "time": 16.187466, "time_per_token": 0.08430971875}}
{"outputs": [{"text": "try:\n        # Check if the log directory exists\n        if not os.path.isdir(log_dir):\n            # Create the log directory if it doesn't exist\n            os.makedirs(log_dir)\n        # Open the file in append mode to append new metrics\n        with open(os.path.join(log_dir, filename), 'a') as f:\n            # Get the current timestamp\n            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n            # Write the timestamp and each metric to the file\n            f.write(f\"{timestamp} - {str(metrics)}\\n\")\n        # Return True if the metrics were written successfully\n        return True\n    except Exception as e:\n        # Handle exceptions by printing the error message and returning False\n        print(f\"An error occurred: {str(e)}\")\n        return False", "tokens": ["try", ":", "\n", "        ", "#", " Check", " if", " the", " log", " directory", " exists", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "log", "_", "dir", "):", "\n", "            ", "#", " Create", " the", " log", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "        ", "#", " Open", " the", " file", " in", " append", " mode", " to", " append", " new", " metrics", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "#", " Get", " the", " current", " timestamp", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "            ", "#", " Write", " the", " timestamp", " and", " each", " metric", " to", " the", " file", "\n", "            ", "f", ".", "write", "(", "f", "\"", "{", "timestamp", "}", " -", " {", "str", "(", "metrics", ")}\\", "n", "\"", ")", "\n", "        ", "#", " Return", " True", " if", " the", " metrics", " were", " written", " successfully", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " Handle", " exceptions", " by", " printing", " the", " error", " message", " and", " returning", " False", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-0.9884417653083801, -0.00011503035057103261, -0.0009750141180120409, -0.00599159300327301, -1.4140290021896362, -1.3758801221847534, -0.037908513098955154, -0.36748918890953064, -0.2089419662952423, -0.14687955379486084, -0.019507696852087975, -1.5598992109298706, -0.00032455421751365066, -0.021130092442035675, -0.011300958693027496, -0.00047922570956870914, -8.106198947643861e-06, -0.0015389991458505392, -1.2755313036905136e-05, -2.1042895317077637, -8.272782724816352e-05, -0.0011524471919983625, -0.00979982316493988, -5.125986263010418e-06, -4.2199197196168825e-05, -0.0005015069036744535, -0.0003165697562508285, -0.0011685217032209039, -1.4316036701202393, -0.9586410522460938, -0.008285081014037132, -0.0966343879699707, -0.0002669931564014405, -0.1474907398223877, -0.0019645453430712223, -0.1944602131843567, -8.737658936297521e-05, -1.4305104514278355e-06, -0.0017340637277811766, -0.002817234955728054, -6.711257447022945e-05, -0.007638768292963505, -4.410734163684538e-06, -0.1531333476305008, -6.079655122448457e-06, -4.339123915997334e-05, -0.0003738896339200437, -0.002909239148721099, -9.179073458653875e-06, -3.576278118089249e-07, -0.014842440374195576, -0.00012146688823122531, -1.9648665189743042, -0.065281942486763, -1.3258620500564575, -0.025642788037657738, -1.294555425643921, -0.3315775394439697, -0.04358543083071709, -0.0012303171679377556, -2.5944974422454834, -2.8831396102905273, -1.2091519832611084, -0.8360109925270081, -0.14400628209114075, -0.0002734287118073553, -0.02627083659172058, -0.0006245807744562626, -0.0015564957866445184, -0.28852370381355286, -8.4638240878121e-06, -5.364403477869928e-06, -6.6756979322235566e-06, -9.202533692587167e-05, -0.0002574589161667973, -0.0015617328463122249, -4.0531076592742465e-06, -3.576278118089249e-07, -3.1470757676288486e-05, -0.004568140488117933, -0.0007549058645963669, -0.00011383838864276186, -0.028071140870451927, -0.0008030288736335933, -0.03283189982175827, -3.576214658096433e-05, -0.6171181201934814, -0.0034054878633469343, -0.0007826602668501437, -0.001470794901251793, -0.08008895814418793, -0.9367833137512207, -0.0631006583571434, -0.020235290750861168, -0.27689358592033386, -0.12592123448848724, -7.629103492945433e-05, -0.05432504415512085, -0.0005578630371019244, -0.011464666575193405, -1.1205610462639015e-05, -0.005533141084015369, -4.95898348162882e-05, -0.0600394569337368, -0.016958698630332947, -8.344646857949556e-07, -0.4110199809074402, -0.007504013366997242, -0.017407258972525597, -0.01230623573064804, -0.0003641180810518563, -8.583032467868179e-06, -0.00016246906307060272, -0.0028186615090817213, -0.0002734287118073553, -0.0008095800876617432, -5.709961988031864e-05, -0.0004893536097370088, -8.749579137656838e-05, -0.027047134935855865, -0.0002277830062666908, -0.005734065547585487, -0.027578404173254967, -0.21424856781959534, -0.34594419598579407, -0.19687415659427643, -0.1698656529188156, -1.593491792678833, -0.013069560751318932, -0.3817155361175537, -0.0109635591506958, -0.007888000458478928, -0.1079990565776825, -0.00011514954530866817, -0.5160720944404602, -1.1205610462639015e-05, -0.00029130507027730346, -0.03214723989367485, -0.01931513473391533, -0.669616162776947, -0.9638066291809082, -0.00041130665340460837, -1.5018279552459717, -0.6504474878311157, -0.5343360304832458, -2.5923264026641846, -0.008108081296086311, -0.008870008401572704, -0.017129335552453995, -8.451581379631534e-05, -0.00039843725971877575, -0.00016783259343355894, -0.0006363751017488539, -0.20676051080226898, -0.9109905362129211, -0.08657858520746231, -0.009939462877810001, -0.27354204654693604, -0.19169072806835175, -0.10975048691034317, -0.043540578335523605, -0.6741982698440552, -0.03536612167954445, -0.003485914785414934, -0.0005428509321063757, -0.011079810559749603, -0.00032789100077934563, -0.00023934361524879932, -0.007344862911850214, -0.06911098957061768, -0.13565310835838318, -0.0007226239540614188, -0.018173491582274437, -5.304672595229931e-05, -0.0054420894011855125, -0.0008418591460213065, -0.047996893525123596, -2.1264286041259766, -2.173957347869873, -0.8372125625610352, -0.20052407681941986, -0.8583378791809082, -0.0017511999467387795, -0.09333381801843643, -0.210764080286026, -0.01752299815416336, -0.000860320869833231, -0.0010966007830575109, -0.00012194366718176752, -0.01209944300353527, -0.025126533582806587, -0.030597900971770287, -0.08940014988183975, -0.002884158631786704, -7.688703772146255e-05, -4.1126360883936286e-05, -0.000998951611109078, -0.00026067672297358513, -0.643326461315155, -1.4305012882687151e-05, -2.2411095415009186e-05, -0.0009120118920691311, -0.0006250573205761611, -0.0004465774691198021, -0.0005552418879233301, -0.007788172923028469, -0.004351907875388861, -0.0005209281225688756, -0.3987690806388855, -0.02711327001452446, -0.7109907269477844], "finish_reason": "stop"}], "metrics": {"energy": 710.6716401386266, "energy_per_token": 3.36811203857169, "time": 17.650852, "time_per_token": 0.08365332701421802}}
{"outputs": [{"text": "try:\n        # Create log file if it doesn't exist\n        os.makedirs(log_dir, exist_ok=True)\n        log_file = os.path.join(log_dir, filename)\n        with open(log_file, 'a') as f:\n            for metric_name, metric_value in metrics.items():\n                timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n                entry = f\"{timestamp}: {metric_name}={metric_value}\\n\"\n                f.write(entry)\n        return True\n    except Exception as e:\n        print(f'An error occurred: {e}')\n        return False", "tokens": ["try", ":", "\n", "        ", "#", " Create", " log", " file", " if", " it", " doesn", "'", "t", " exist", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "        ", "log", "_", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "        ", "with", " open", "(", "log", "_", "file", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "for", " metric", "_", "name", ",", " metric", "_", "value", " in", " metrics", ".", "items", "():", "\n", "                ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "                ", "entry", " =", " f", "\"", "{", "timestamp", "}:", " {", "metric", "_", "name", "}=", "{", "metric", "_", "value", "}\\", "n", "\"", "\n", "                ", "f", ".", "write", "(", "entry", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-0.9884417653083801, -0.00011503035057103261, -0.0009750141180120409, -0.00599159300327301, -1.4140290021896362, -1.1084736585617065, -1.6869374513626099, -1.9165523052215576, -0.54740309715271, -0.02001132071018219, -0.1557941734790802, -0.0003375437227077782, -2.5033637939486653e-05, -0.00925099104642868, -0.06510905176401138, -0.0008012421894818544, -1.7970695495605469, -0.0003496989083942026, -0.0027359218802303076, -3.576278118089249e-07, -7.986990567587782e-06, -0.0003861635341309011, -0.011730501428246498, -1.0490362910786644e-05, -7.629365427419543e-06, -0.0022980966605246067, -0.00019107422849629074, -9.536738616588991e-07, -4.410734163684538e-06, -0.0008428120636381209, -0.00014077626110520214, -2.658331868587993e-05, -0.009662525728344917, -0.02523615211248398, -1.5583837032318115, -0.020248375833034515, -0.4683440625667572, -0.21732257306575775, -0.045384250581264496, -1.9073468138230965e-06, -7.712543447269127e-05, -1.4662635294371285e-05, -0.0007245299639180303, -0.0002674698771443218, -0.0024595982395112514, -1.0609570381348021e-05, -8.344646857949556e-07, -5.2569914259947836e-05, -0.008010759949684143, -0.0020274813286960125, -0.0009502424509264529, -0.31466975808143616, -0.701734185218811, -0.0006761648692190647, -0.0002618685248307884, -0.0005694198189303279, -3.4570634852570947e-06, -4.0531076592742465e-06, -0.00024470672360621393, -0.038062069565057755, -0.08098170906305313, -0.0628388449549675, -0.00030191155383363366, -0.1473352015018463, -0.002400851808488369, -0.002699305070564151, -0.0013947292463853955, -1.6457414627075195, -0.3363579511642456, -1.8246986865997314, -0.003091201651841402, -0.004476288799196482, -0.27552181482315063, -0.010699407197535038, -0.019367283210158348, -0.00011169286881340668, -0.005615886766463518, -0.002529280725866556, -2.8132995794294402e-05, -1.9192511899746023e-05, -0.0004001055203843862, -0.0005428509321063757, -0.56517493724823, -0.015238648280501366, -0.013566910289227962, -2.253030106658116e-05, -0.016043027862906456, -4.60137271147687e-05, -0.018521223217248917, -0.03227825462818146, -4.768370445162873e-07, -0.3695236146450043, -0.010407697409391403, -0.022462576627731323, -0.011101385578513145, -0.00037281715776771307, -9.298280929215252e-06, -0.00013016807497479022, -0.003026431193575263, -0.000433112756581977, -0.0008179179858416319, -6.532455881824717e-05, -0.0006774752982892096, -0.000163541772053577, -0.057654064148664474, -0.0015807764139026403, -0.0005990855861455202, -1.712677001953125, -0.0006544832140207291, -0.0054699513129889965, -0.5662996768951416, -0.4779522120952606, -0.336004376411438, -2.043933868408203, -0.012562665157020092, -0.00010954733443213627, -5.364403477869928e-06, -0.00027581225731410086, -1.02935791015625, -0.001752984942868352, -0.0021636902820318937, -2.50339189733495e-06, -6.794906312279636e-06, -0.026033347472548485, -8.5588610090781e-05, -3.290122185717337e-05, -0.0004592079494614154, -0.00044145373976789415, -0.00922228954732418, -2.145764938177308e-06, -5.113947918289341e-05, -6.878139538457617e-05, -0.0003070359816774726, -0.00030322244856506586, -0.000198821333469823, -0.19560086727142334, -0.1418720781803131, -0.001476984703913331, -0.008412874303758144, -0.016181329265236855, -0.00033968876232393086, -0.0921100601553917, -0.0007017772295512259, -0.021374817937612534, -3.7431014789035544e-05, -0.0020543676801025867, -0.00042548662167973816, -0.04561570659279823, -0.020102808251976967, -0.06309248507022858, -2.1638829708099365, -0.003921914380043745, -0.00012039413559250534, -0.00012516192509792745, -0.0026304665952920914, -0.00026651646476238966, -0.6348425149917603, -0.012330020777881145, -0.000759074988309294, -0.0017740478506311774, -0.03526025265455246, -0.006192899774760008, -0.0007714632665738463, -0.4029512405395508, -0.01846505142748356, -1.836517572402954], "finish_reason": "stop"}], "metrics": {"energy": 569.9313825740816, "energy_per_token": 3.4333215817715756, "time": 13.864078, "time_per_token": 0.0835185421686747}}
{"outputs": [{"text": "log_path = os.path.join(log_dir, filename)\n\n    # Ensure that the log file can be accessed for reading and writing\n    try:\n        with open(log_path, 'a') as log_file:\n            current_time = datetime.now()\n            for metric_name, metric_value in metrics.items():\n                log_file.write(f\"{current_time}, {metric_name}, {metric_value}\\n\")\n        return True\n\n    except Exception as e:\n        # Log the error message to the console and return False\n        print(f\"An error occurred: {e}\")\n        return False", "tokens": ["log", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Ensure", " that", " the", " log", " file", " can", " be", " accessed", " for", " reading", " and", " writing", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "path", ",", " '", "a", "')", " as", " log", "_", "file", ":", "\n", "            ", "current", "_", "time", " =", " datetime", ".", "now", "()", "\n", "            ", "for", " metric", "_", "name", ",", " metric", "_", "value", " in", " metrics", ".", "items", "():", "\n", "                ", "log", "_", "file", ".", "write", "(", "f", "\"", "{", "current", "_", "time", "}", ",", " {", "metric", "_", "name", "}", ",", " {", "metric", "_", "value", "}\\", "n", "\"", ")", "\n", "        ", "return", " True", "\n", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " Log", " the", " error", " message", " to", " the", " console", " and", " return", " False", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-3.08638596534729, -0.04582639038562775, -1.0333064794540405, -0.0005515484372153878, -0.03890254348516464, -3.2186455882765586e-06, -5.3165931603871286e-05, -1.0013530300057027e-05, -0.0010258655529469252, -0.0005579821881838143, -0.00848474446684122, -8.34461570775602e-06, -0.001666586846113205, -0.0003121604095213115, -0.004687867127358913, -0.0008871195605024695, -0.012625643983483315, -1.1439183950424194, -0.0005583396414294839, -2.056096076965332, -2.137856960296631, -1.4645123481750488, -0.184560626745224, -0.3130640685558319, -1.6035255193710327, -3.316972017288208, -0.002195212058722973, -1.9889482259750366, -3.371000051498413, -2.8504762649536133, -0.17103467881679535, -0.009451170451939106, -0.09281127154827118, -0.0007043979712761939, -0.1399884968996048, -5.8053239627042785e-05, -0.00017796363681554794, -0.0013804440386593342, -0.7497262358665466, -0.0033117469865828753, -0.0002451834443490952, -0.001915883389301598, -5.960446742392378e-06, -3.0397906812140718e-05, -0.0003909300430677831, -0.052247222512960434, -0.3785546123981476, -0.19788755476474762, -0.1612163633108139, -1.3122766017913818, -0.07368330657482147, -0.0006765222642570734, -0.0002324311062693596, -0.013070855289697647, -0.004933090414851904, -3.172236919403076, -0.0009151084814220667, -0.05339449271559715, -0.00042167355422861874, -0.012179644778370857, -2.8967437174287625e-05, -0.008662858977913857, -0.00011395759065635502, -2.221299648284912, -0.05054311454296112, -0.9562858939170837, -0.3030349910259247, -1.0540437698364258, -0.0033227966632694006, -0.003602564102038741, -0.20163269340991974, -0.005196516867727041, -0.006970137823373079, -9.583967766957358e-05, -0.0064905788749456406, -0.002405489794909954, -6.747018051100895e-05, -2.8609820219571702e-05, -0.0006252956227399409, -0.0009885906474664807, -0.25013360381126404, -0.0006992755807004869, -0.6277785897254944, -0.0007638397510163486, -0.00013481661153491586, -0.006437280215322971, -0.035596344619989395, -0.33709344267845154, -0.3746770918369293, -0.6490981578826904, -6.437280717364047e-06, -2.3841855067985307e-07, -0.45992445945739746, -2.417172431945801, -0.4231087267398834, -0.0013273486401885748, -1.0847986231965479e-05, -0.00403708778321743, -1.0967304706573486, -0.10086819529533386, -0.00917232595384121, -0.010974995791912079, -4.6491513785440475e-06, -8.368142152903602e-05, -0.05015101656317711, -0.00024375328212045133, -0.00017772526189219207, -0.0005003153928555548, -0.0009130837861448526, -0.6144611239433289, -0.07569368183612823, -0.001416156766936183, -0.013516103848814964, -2.8440101146698, -0.001671347301453352, -0.18821893632411957, -0.40345457196235657, -0.0008455515489913523, -0.11206331104040146, -0.00010823617776622996, -0.007506498135626316, -0.0020486575085669756, -1.710513710975647, -1.0678491592407227, -0.40518930554389954, -0.02847546711564064, -1.3030675649642944, -1.7030333280563354, -0.40667983889579773, -0.10059581696987152, -2.281609058380127, -0.2711153030395508, -0.03175270929932594, -0.29270869493484497, -0.0002602000313345343, -0.05301278084516525, -0.01128716766834259, -0.032775141298770905, -0.06824677437543869, -0.007491471711546183, -0.00020382710499688983, -0.0001652104256208986, -0.0083712637424469, -0.0010495636379346251, -0.7807712554931641, -0.013718371279537678, -0.0014096095692366362, -0.0012238877825438976, -0.00807993859052658, -0.005595734342932701, -0.0009239218779839575, -1.183467149734497, -4.410734163684538e-06, -3.814689989667386e-06, -1.9073468138230965e-06, -1.1324817933200393e-05, -1.412337064743042, -0.0017408467829227448], "finish_reason": "stop"}], "metrics": {"energy": 526.927217596054, "energy_per_token": 3.334982389848443, "time": 13.246631, "time_per_token": 0.08383943670886077}}
{"outputs": [{"text": "if not os.path.exists(log_dir):\n        os.makedirs(log_dir)\n    try:\n        with open(f'{log_dir}/{filename}', 'w') as file:\n            for metric, value in metrics.items():\n                file.write(f'{metric}: {value} | {datetime.now()}\\n')\n    except Exception as e:\n        print(f'An error occurred: {e}')\n        return False\n    else:\n        return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "f", "'{", "log", "_", "dir", "}/{", "filename", "}'", ",", " '", "w", "')", " as", " file", ":", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "file", ".", "write", "(", "f", "'{", "metric", "}:", " {", "value", "}", " |", " {", "datetime", ".", "now", "()", "}\\", "n", "')", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "    ", "else", ":", "\n", "        ", "return", " True", "\n", "\n", "if"], "logprobs": [-2.315866708755493, -0.10061371326446533, -0.14663507044315338, -6.6756979322235566e-06, -0.009209061041474342, -8.034383063204587e-05, -0.2923744320869446, -0.003242237726226449, -0.013458121567964554, -1.8358061424805783e-05, -2.312633478140924e-05, -0.0006236277404241264, -0.00412743678316474, -0.0029834068845957518, -0.13171544671058655, -1.585470999998506e-05, -0.09651154279708862, -1.811964830267243e-05, -2.5987286790041253e-05, -0.00019858295854646713, -0.0013244913425296545, -4.887569048150908e-06, 0.0, -0.004172904882580042, -0.011275263503193855, -0.6600016951560974, -1.4554953575134277, -0.00010513706365600228, -0.0001658063702052459, -0.0010988633148372173, -0.1366472691297531, -0.002876432379707694, -0.0013448490062728524, -2.114511489868164, -0.5832132697105408, -0.006663246545940638, -6.794906312279636e-06, -5.960462772236497e-07, -0.001189835020340979, -0.00034564718953333795, -0.007788291200995445, -0.00024589852546341717, -0.020709941163659096, -2.797405242919922, -0.08009655028581619, -0.00015209948469419032, -1.471721887588501, -0.003848053514957428, -0.0025844527408480644, -0.000605638197157532, -0.16948235034942627, -0.382902055978775, -0.180189847946167, -0.0029794846195727587, -4.8040190449682996e-05, -0.004221932031214237, -0.0010240792762488127, -2.9682672902708873e-05, -2.7417760065873154e-05, -0.00025459862081333995, -0.0002708068350329995, -1.3308683633804321, -0.0001629458274692297, -0.0001486429391661659, -0.0020367607939988375, -0.011409510858356953, -0.3450711667537689, -0.6734327077865601, -0.11369827389717102, -0.006067547015845776, -0.01477643009275198, -0.12937374413013458, -2.885237455368042, -0.2883971035480499, -0.011725199408829212, -8.391981828026474e-05, -0.012357573956251144, -0.029634810984134674, -0.08724676072597504, -2.706014311115723e-05, -0.00019178935326635838, -0.0006478118011727929, -1.879615068435669, -0.0003135904553346336, -0.5248448252677917, -0.0015149556566029787, -0.05658906698226929, -9.07141511561349e-05, -0.0016060085035860538, -0.0009715604246594012, -0.019409257918596268, -0.06151316314935684, -0.01533233467489481, -0.13274390995502472, -0.005767015740275383, -0.00013136000779923052, -0.00015090756642166525, -0.004819206427782774, -0.0003860443539451808, -0.33258509635925293, -0.00689496286213398, -0.0008062449633143842, -0.0011277989251539111, -0.0098017118871212, -0.010800712741911411, -0.0026177444960922003, -0.0019867937080562115, -0.026861589401960373, -1.3405544757843018, -2.372236667724792e-05, -0.00018451895448379219, -0.0004170263418927789, -0.0646870881319046, -0.0008330450509674847, -0.43681952357292175, -0.0339844785630703, -0.6919512748718262], "finish_reason": "stop"}], "metrics": {"energy": 397.01980542373667, "energy_per_token": 3.393331670288348, "time": 9.683638, "time_per_token": 0.08276613675213676}}
{"outputs": [{"text": "if not os.path.exists(log_dir):\n        os.makedirs(log_dir)\n\n    # Get the absolute path of the log file\n    abs_file_path = os.path.join(os.getcwd(), log_dir, filename)\n\n    try:\n        with open(abs_file_path, 'w') as file:\n            for metric, value in metrics.items():\n                timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n                file.write(f\"{metric}: {value} @ {timestamp}\\n\")\n        return True\n    except Exception as e:\n        print(f\"An error occurred: {str(e)}\")\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "\n", "    ", "#", " Get", " the", " absolute", " path", " of", " the", " log", " file", "\n", "    ", "abs", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "os", ".", "get", "c", "wd", "()", ",", " log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "abs", "_", "file", "_", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "                ", "file", ".", "write", "(", "f", "\"", "{", "metric", "}:", " {", "value", "}", " @", " {", "timestamp", "}\\", "n", "\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.315866708755493, -0.10061371326446533, -0.14663507044315338, -6.6756979322235566e-06, -0.009209061041474342, -8.034383063204587e-05, -0.2923744320869446, -0.003242237726226449, -0.013458121567964554, -1.8358061424805783e-05, -2.312633478140924e-05, -0.0006236277404241264, -0.00412743678316474, -0.0029834068845957518, -0.13171544671058655, -1.585470999998506e-05, -0.09651154279708862, -1.811964830267243e-05, -2.5987286790041253e-05, -0.00019858295854646713, -0.0013244913425296545, -4.887569048150908e-06, 0.0, -0.004172904882580042, -0.011275263503193855, -0.7443484663963318, -0.00046171018038876355, -3.7142770290374756, -3.0171799659729004, -0.3428953289985657, -2.3659677505493164, -0.057841408997774124, -0.4493866264820099, -0.006393336225301027, -0.25015467405319214, -0.022171948105096817, -0.15011100471019745, -0.00038914260221645236, -2.7998290061950684, -0.0005003153928555548, -2.6455492973327637, -0.33252131938934326, -0.0020165364257991314, -0.00018892886873800308, -0.005768912378698587, -2.50339189733495e-06, -4.1483970562694594e-05, -2.145764938177308e-06, -0.052217014133930206, -0.0007770617958158255, -0.480080783367157, -6.079655122448457e-06, -0.3740903437137604, -0.00015293381875380874, -1.1920922133867862e-06, -0.0002157455455744639, -0.00032145579461939633, -0.032951634377241135, -4.768360213347478e-06, -2.264974000354414e-06, -0.0024463983718305826, -0.0018548441585153341, -0.0009126074146479368, -0.0019177870126441121, -0.055906958878040314, -0.0001677133986959234, -0.4484066665172577, -5.113947918289341e-05, -0.0002899941464420408, -0.00210564024746418, -0.48709383606910706, -0.0008469808381050825, -0.00047505536349490285, -0.012115225195884705, -4.410734163684538e-06, -1.0609570381348021e-05, -8.940656698541716e-06, -5.960462772236497e-07, -0.00034445550409145653, -0.041106417775154114, -2.990400552749634, -0.10860270261764526, -0.00027652730932459235, -1.054802417755127, -0.0030462786089628935, -0.007184503600001335, -0.0008736607851460576, -0.34080517292022705, -0.16747407615184784, -0.3399026095867157, -0.0033889738842844963, -4.172238186583854e-05, -0.0061414809897542, -0.0008594871615059674, -1.6212332411669195e-05, -1.490105023549404e-05, -0.0005379660287871957, -0.0005174727994017303, -0.3771785795688629, -0.015015198849141598, -0.013012140989303589, -2.610649426060263e-05, -0.012437872588634491, -4.851700214203447e-05, -0.012334377504885197, -0.02002931386232376, -1.311301275563892e-06, -0.49878814816474915, -0.011466198600828648, -0.021248670294880867, -0.011931009590625763, -0.0004067785630468279, -7.748573807475623e-06, -3.635817120084539e-05, -0.0025270215701311827, -0.00039152585668489337, -0.0008300673216581345, -8.570780482841656e-05, -0.0004657614335883409, -9.345571743324399e-05, -0.05060238763689995, -0.0021964015904814005, -0.0012076949933543801, -0.5870378017425537, -0.00036900385748595, -4.1483970562694594e-05, -0.0015825617592781782, -0.002227089600637555, -0.5068169236183167, -0.7749435901641846, -1.1318235397338867, -0.21852311491966248, -0.0041801463812589645, -0.002703822683542967, -0.09933029860258102, -2.4145724773406982, -0.016964560374617577, -0.00012003655137959868, -0.0068697454407811165, -4.2437604861333966e-05, -7.30726242181845e-05, -9.858122211880982e-05, -0.000348268891684711, -0.3745279014110565, -0.18126235902309418, -0.0016130305593833327, -0.00635164137929678, -0.04110264033079147, -0.00022420754248742014, -0.31816020607948303, -0.000598251644987613, -0.031904906034469604, -3.635817120084539e-05, -0.00120936194434762, -0.0003921216703020036, -0.07128699123859406, -0.026173060759902, -0.04026756435632706, -0.09942344576120377, -0.0026899129152297974, -7.962863310240209e-05, -7.378782902378589e-05, -0.00625035772100091, -0.0006183857913129032, -0.8773640990257263, -1.585470999998506e-05, -1.2516897186287679e-05, -0.0013410394312813878, -0.0043938048183918, -0.001859008800238371, -0.0017874945187941194, -0.027855873107910156, -0.010782315395772457, -0.0006560318870469928, -1.617842674255371, -5.602820692729438e-06, -4.529942543740617e-06, -3.814689989667386e-06, -2.288792165927589e-05, -0.22886113822460175], "finish_reason": "stop"}], "metrics": {"energy": 620.0719782218935, "energy_per_token": 3.4448443234549635, "time": 15.141429, "time_per_token": 0.08411905}}
{"outputs": [{"text": "try:\n        os.makedirs(log_dir, exist_ok=True)\n        log_path = os.path.join(log_dir, filename)\n        with open(log_path, 'a') as f:\n            timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n            f.write(f\"[{timestamp}] \")\n            for metric_name, metric_value in metrics.items():\n                f.write(f\"{metric_name}={metric_value};\")\n            f.write(\"\\n\")\n        return True\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return False", "tokens": ["try", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "        ", "log", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "        ", "with", " open", "(", "log", "_", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "            ", "f", ".", "write", "(", "f", "\"", "[{", "timestamp", "}]", " \"", ")", "\n", "            ", "for", " metric", "_", "name", ",", " metric", "_", "value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "f", "\"", "{", "metric", "_", "name", "}=", "{", "metric", "_", "value", "};", "\"", ")", "\n", "            ", "f", ".", "write", "(", "\"", "\\", "n", "\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-0.9884417653083801, -0.00011503035057103261, -0.0009750141180120409, -0.00599159300327301, -1.2611855268478394, -0.0007102350937202573, -0.01493146549910307, -1.490105023549404e-05, -7.4741430580616e-05, -0.000705470098182559, -0.018444687128067017, -1.1205610462639015e-05, -8.4638240878121e-06, -0.03565501421689987, -0.00045217780279926956, -1.311301275563892e-06, -1.9073468138230965e-06, -0.0008026715368032455, -0.00028606137493625283, -2.1815061700181104e-05, -0.10170523077249527, -0.025187911465764046, -1.657346248626709, -0.018957151100039482, -0.9017854332923889, -0.0002882065309677273, -0.013798560947179794, -1.311301275563892e-06, -1.549708758830093e-05, -4.529942543740617e-06, -0.0014938872773200274, -0.00034624303225427866, -0.0029938658699393272, -1.4424220353248529e-05, -3.933898824470816e-06, -4.756337511935271e-05, -0.008488290011882782, -0.0018234307644888759, -0.001010384177789092, -0.3374726474285126, -0.15036612749099731, -0.0011157722910866141, -0.00027164106722921133, -0.0009544108179397881, -4.529942543740617e-06, 0.0, -0.00012408917245920748, -0.04129139706492424, -0.0421781912446022, -0.08801601827144623, -4.541770613286644e-05, -0.5170891880989075, -0.004051691386848688, -0.006604628171771765, -0.0005433275364339352, -0.292105108499527, -0.0017936823423951864, -0.010656122118234634, -1.0490362910786644e-05, -0.019171183928847313, -3.433168603805825e-05, -0.011516283266246319, -0.028383931145071983, -4.768370445162873e-07, -1.4176851511001587, -0.010174669325351715, -0.006517108529806137, -0.03174243122339249, -0.019512256607413292, -0.00043418517452664673, -8.702239938429557e-06, -0.00011359999916749075, -0.00407769251614809, -0.0003885467885993421, -0.0005613181856460869, -7.962863310240209e-05, -0.001608150894753635, -9.440929716220126e-05, -0.0408339723944664, -4.184158387943171e-05, -0.001933373394422233, -0.002031407319009304, -1.5670405626296997, -6.460934673668817e-05, -0.00031895318534225225, -0.01743057183921337, -0.019516581669449806, -0.14738468825817108, -0.5410898923873901, -0.0004094000905752182, -0.019166039302945137, -0.5674206614494324, -0.13175944983959198, -0.008329533040523529, -0.0034012107644230127, -0.242865651845932, -0.4750555455684662, -1.8495213985443115, -0.001909934333525598, -0.0032743194606155157, -0.4110625684261322, -0.005023714154958725, -0.00836842693388462, -7.116541382856667e-05, -0.009125431068241596, -0.0019403931219130754, -2.253030106658116e-05, -1.1920858014491387e-05, -0.0001161031104857102, -0.0001560327800689265, -0.025426765903830528, -5.125986263010418e-06, -1.4543427823809907e-05, -0.00016973962192423642, -0.0019859608728438616, -0.004423238802701235, -0.008216152898967266, -0.00011276562872808427, -8.821448318485636e-06, -0.0004690977220889181, -0.8853341341018677, -0.002003092784434557, -0.0025387934874743223, -2.7418097943154862e-06, -2.932505594799295e-05, -3.0734317302703857, -2.001586675643921, -0.0027267676778137684, -0.0006831934442743659, -0.01125133503228426, -0.0023186723701655865, -7.152555099310121e-07, -1.6569954823353328e-05, -0.443211168050766, -0.0049747261218726635, -0.00041929035796783864, -0.0001510267611593008, -0.00011765264935093, -0.00016151554882526398, -0.001301871263422072, -0.14933910965919495, -0.12903599441051483, -0.0015905360924080014, -0.00315180909819901, -0.009303195402026176, -0.00017307691450696439, -0.09640892595052719, -0.0004167880106251687, -0.025022482499480247, -4.124556289752945e-05, -0.0024673277512192726, -0.00048029806930571795, -0.04214882105588913, -0.011110581457614899, -0.038770560175180435, -0.03617701306939125, -0.0030953611712902784, -6.389413465512916e-05, -8.630380034446716e-05, -0.002936696168035269, -0.00043025295599363744, -0.563554048538208, -0.010190717875957489, -0.00034528967808000743, -0.0011275607394054532, -0.03008153848350048, -0.005264585837721825, -0.0007334641413763165, -0.34810131788253784, -0.020649803802371025, -0.6880757808685303], "finish_reason": "stop"}], "metrics": {"energy": 644.5755325527192, "energy_per_token": 3.7694475587878316, "time": 14.5075655, "time_per_token": 0.08483956432748538}}
{"outputs": [{"text": "# Create the log directory if it doesn't exist\n    if not os.path.exists(log_dir):\n        os.makedirs(log_dir)\n\n    # Construct the file path\n    file_path = os.path.join(log_dir, filename)\n\n    # Append a timestamp before each entry\n    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    try:\n        with open(file_path, 'a') as f:\n            for key, value in metrics.items():\n                f.write(f'{timestamp} {key}: {value}\\n')\n    except OSError as e:\n        print(f\"An error occurred: {e}\")\n        return False\n    else:\n        return True", "tokens": ["#", " Create", " the", " log", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "\n", "    ", "#", " Construct", " the", " file", " path", "\n", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " App", "end", " a", " timestamp", " before", " each", " entry", "\n", "    ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "f", "'{", "timestamp", "}", " {", "key", "}:", " {", "value", "}\\", "n", "')", "\n", "    ", "except", " O", "SE", "rror", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "    ", "else", ":", "\n", "        ", "return", " True", "\n", "\n", "def"], "logprobs": [-1.312898874282837, -1.4073216915130615, -0.31349849700927734, -0.29195529222488403, -0.12504668533802032, -0.005602135788649321, -0.001957050058990717, -0.217070072889328, -0.00018487652414478362, -5.960446742392378e-06, -0.011898262426257133, -0.012340853922069073, -0.0015122179174795747, -0.339504212141037, -0.004973540082573891, -0.0005694198189303279, -1.6689286894688848e-06, -0.0024635223671793938, -3.659658250398934e-05, -0.033533841371536255, -0.0008923601126298308, -0.009226541966199875, -7.867782187531702e-06, -2.539125671319198e-05, -0.00027581225731410086, -0.0003965306677855551, -0.00182819040492177, -0.04024443402886391, -1.2397689715726301e-05, -0.0829629898071289, -1.5497195136049413e-06, -2.861018856492592e-06, -0.00019035911827813834, -0.0010364643530920148, -4.172316494077677e-06, -3.576278118089249e-07, -0.0015534012345597148, -0.0004949536523781717, -0.08180040121078491, -0.0005731132114306092, -0.1969086229801178, -0.6977756023406982, -0.010925473645329475, -1.604555606842041, -0.12022252380847931, -0.4372870624065399, -8.737658936297521e-05, -0.014202821999788284, -0.25615057349205017, -0.0001770101225702092, -0.0001234931987710297, -0.05095057934522629, -4.172316494077677e-06, -8.940656698541716e-06, -2.145764938177308e-06, -0.0003813969960901886, -0.0003793711948674172, -0.0016382618341594934, -4.887569048150908e-06, -1.6689286894688848e-06, -4.470248313737102e-05, -0.00302381650544703, -0.0013005617074668407, -0.0006015875260345638, -0.014099273830652237, -0.00018821375851985067, -0.31460657715797424, -2.5181665420532227, -0.0035965063143521547, -1.471194863319397, -0.03763049095869064, -3.3389198780059814, -0.14069132506847382, -0.9246464371681213, -0.15875649452209473, -0.0001821352052502334, -0.3703599274158478, -0.06388378888368607, -0.01173203345388174, -2.407998726994265e-05, -0.013194862753152847, -3.838465272565372e-05, -0.013814903795719147, -0.008792495355010033, -7.152555099310121e-07, -0.5234542489051819, -0.016676196828484535, -0.017378555610775948, -0.010446982458233833, -0.0005958688561804593, -9.65590606938349e-06, -0.00020275443966966122, -0.008691104128956795, -0.0003178806509822607, -0.002170589519664645, -9.452849917579442e-05, -0.0010785006452351809, -8.570780482841656e-05, -0.023797014728188515, -0.002927187131717801, -0.9821798801422119, -3.4337124824523926, -9.583967766957358e-05, -0.0003014348621945828, -0.002615604316815734, -0.18711215257644653, -0.00043132537393830717, -0.0005538121913559735, -0.0005942009738646448, -3.504691630951129e-05, -3.576278118089249e-07, -0.00014006110723130405, -0.029306435957551003, -0.03672540560364723, -0.06220041960477829, -5.149708886165172e-05, -0.5932413339614868, -0.001862221397459507, -0.02605634368956089, -0.0007046362152323127, -0.5774418711662292, -1.3520376682281494, -0.014642397873103619, -0.019926367327570915, -3.0636318115284666e-05, -0.007203676737844944, -0.0005485698929987848, -4.458328112377785e-05, -1.7165990357170813e-05, -0.0004988856380805373, -0.00029952809563837945, -0.08664187788963318, -5.960446742392378e-06, -2.062299427052494e-05, -0.009502182714641094, -0.005358499474823475, -0.6204958558082581, -0.1654466986656189, -0.3052053153514862, -0.840171217918396, -0.00046135272714309394, -0.10863853245973587, -0.011930420994758606, -0.011468437500298023, -0.006242420058697462, -5.364274329622276e-05, -8.987976616481319e-05, -0.0016362386522814631, -1.513770341873169, -0.0006531727267429233, -1.4313435554504395, -5.006777428206988e-06, 0.0, -0.01726643182337284, -0.025426648557186127, -5.674201020156033e-05, -0.0015604236396029592, -0.000979539705440402, -0.06958857923746109, -0.07466211915016174, -0.014637346379458904, -1.690287470817566, -0.004058815073221922, -7.176141662057489e-05, -0.00010227633902104571, -0.005073648411780596, -0.0008467426523566246, -0.14501941204071045, -0.009305085055530071, -0.000626367807853967, -0.003716230858117342, -0.00483035808429122, -0.005844646133482456, -0.0015185264637693763, -0.0030392666812986135, -0.8148444294929504, -1.1656992435455322, -1.8596476365928538e-05, -0.00042143522296100855, -0.0004127365828026086, -0.08248439431190491, -0.0009346407605335116, -0.31978243589401245, -0.04372716322541237, -2.1197519302368164], "finish_reason": "stop"}], "metrics": {"energy": 644.2622533931732, "energy_per_token": 3.4824986669901254, "time": 15.772587, "time_per_token": 0.08525722702702702}}
{"outputs": [{"text": "log_file_path = os.path.join(log_dir, filename)\n    try:\n        with open(log_file_path, 'a') as log_file:\n            for metric, value in metrics.items():\n                log_file.write(f'[{datetime.now()}] {metric}: {value}\\n')\n        return True\n    except Exception as e:\n        print(f'An error occurred: {e}')\n        return False", "tokens": ["log", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "file", "_", "path", ",", " '", "a", "')", " as", " log", "_", "file", ":", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "log", "_", "file", ".", "write", "(", "f", "'", "[{", "datetime", ".", "now", "()", "}]", " {", "metric", "}:", " {", "value", "}\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-3.08638596534729, -0.04582639038562775, -0.5567649602890015, -0.8979209065437317, -0.008331424556672573, -0.00046361665590666234, -0.08229941129684448, -3.099436753473128e-06, -4.482168878894299e-05, -6.437280717364047e-06, -0.0007011815905570984, -0.0007286992622539401, -0.008874616585671902, -9.298280929215252e-06, -3.182837463100441e-05, -0.00021526881027966738, -0.003259823424741626, -0.0007906410028226674, -0.012757238931953907, -0.5028729438781738, -0.32614848017692566, -9.023735765367746e-05, -0.0003071551618631929, -0.0021319296211004257, -0.11793370544910431, -0.0016950300196185708, -0.0003860443539451808, -0.0008597253472544253, -2.145764938177308e-06, -4.6491513785440475e-06, -3.182837463100441e-05, -1.6689286894688848e-06, -0.0001512651506345719, -0.04700106009840965, -0.028782919049263, -0.09777111560106277, -3.7431014789035544e-05, -0.9302951693534851, -0.01043978612869978, -0.0002172949316445738, -0.00014447122521232814, -0.004620233550667763, -0.0005793085438199341, -1.2594752311706543, -0.21073539555072784, -0.5703703165054321, -0.0031011844985187054, -4.660974445869215e-05, -0.004934039432555437, -0.0009732277248986065, -3.8742269680369645e-05, -2.169585604860913e-05, -0.0004731489170808345, -0.000251142424531281, -0.6037281155586243, -0.00039843725971877575, -0.4848315119743347, -0.00042250767000950873, -4.756337511935271e-05, -0.014222096651792526, -0.02468305267393589, -2.902296543121338, -0.13389739394187927, -0.02606819011271, -8.67805938469246e-05, -0.01217222586274147, -0.004665441811084747, -0.2858962118625641, -0.0367981381714344, -0.00012003655137959868, -0.11210444569587708, -0.0024254685267806053, -0.014636054635047913, -0.003992088604718447, -4.8993817472364753e-05, -5.61460001335945e-05, -0.0007310817018151283, -0.21150776743888855, -0.08574104309082031, -0.0007750368095003068, -0.0043716104701161385, -0.00306303589604795, -8.856858039507642e-05, -0.432051420211792, -0.0006345880683511496, -0.06234345957636833, -3.862306402879767e-05, -0.0020368797704577446, -0.00045658653834834695, -0.040742646902799606, -0.029453100636601448, -0.008163182996213436, -0.298523873090744, -0.004168868530541658, -0.00011240804451517761, -9.142934868577868e-05, -0.004794173873960972, -0.0005040090763941407, -0.4397372305393219, -0.010294671170413494, -0.0014830554137006402, -0.001910886145196855, -0.05720113590359688, -0.007536431774497032, -0.0010004997020587325, -0.5267282724380493, -0.021100446581840515, -1.4405277967453003], "finish_reason": "stop"}], "metrics": {"energy": 391.6828264951706, "energy_per_token": 3.6266928379182466, "time": 9.0517235, "time_per_token": 0.08381225462962963}}
{"outputs": [{"text": "try:\n        os.makedirs(log_dir, exist_ok=True)\n        with open(os.path.join(log_dir, filename), 'a') as f:\n            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n            f.write(f'{timestamp}: {metrics}\\n')\n        return True\n    except Exception as e:\n        print(f'An error occurred: {e}')\n        return False", "tokens": ["try", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "            ", "f", ".", "write", "(", "f", "'{", "timestamp", "}:", " {", "metrics", "}\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-0.9884417653083801, -0.00011503035057103261, -0.0009750141180120409, -0.00599159300327301, -1.2611855268478394, -0.0007102350937202573, -0.01493146549910307, -1.490105023549404e-05, -7.4741430580616e-05, -0.000705470098182559, -0.018444687128067017, -1.1205610462639015e-05, -8.4638240878121e-06, -0.03565501421689987, -0.00045217780279926956, -1.311301275563892e-06, -1.9073468138230965e-06, -0.0008026715368032455, -0.00028606137493625283, -2.1815061700181104e-05, -0.10170523077249527, -0.025187911465764046, -1.5449328422546387, -0.007686916273087263, -0.0016251702327281237, -0.4648107588291168, -7.986990567587782e-06, -1.597391747054644e-05, -5.364403477869928e-06, -0.00019012074335478246, -0.0002609150833450258, -0.002968074521049857, -5.722029527532868e-06, -7.152555099310121e-07, -3.5523738915799186e-05, -0.0059943185187876225, -0.0009180859779007733, -0.00016366096679121256, -0.025969000533223152, -0.02212624065577984, -0.05567651987075806, -2.8490614567999728e-05, -0.4516962468624115, -0.004778157453984022, -0.0026750515680760145, -0.0008981961291283369, -0.4415420591831207, -0.003298320807516575, -0.0063294898718595505, -1.537788011773955e-05, -0.02028306946158409, -3.93382906622719e-05, -0.015997745096683502, -0.021066363900899887, -8.344646857949556e-07, -0.22807615995407104, -0.01204738486558199, -0.014334327541291714, -0.01274158526211977, -0.0003361137059982866, -8.583032467868179e-06, -7.664863369427621e-05, -0.0033527372870594263, -0.0002696150622796267, -0.0010636154329404235, -6.842378934379667e-05, -0.0008331642020493746, -0.00015198028995655477, -0.028342215344309807, -0.0018057008273899555, -0.003780600382015109, -1.7888389825820923, -8.666139910928905e-05, -0.0004789874074049294, -0.055230364203453064, -0.01570781134068966, -1.5054800510406494, -0.001689555705524981, -0.673564076423645, -0.07540971785783768, -0.05237630754709244, -0.006633049808442593, -4.351044481154531e-05, -0.00016223068814724684, -0.0009384519071318209, -0.1798500120639801, -0.048566434532403946, -0.0007900454220362008, -0.0017929683672264218, -0.007712349761277437, -0.0002516191452741623, -0.18123501539230347, -0.0005771639989688993, -0.03375987708568573, -3.075552376685664e-05, -0.0013524680398404598, -0.0005068686441518366, -0.03411697968840599, -0.03564569354057312, -0.010754129849374294, -0.12911038100719452, -0.0034846081398427486, -0.0001532914029667154, -0.00014304091746453196, -0.0028019000310450792, -0.00025519452174194157, -0.27700075507164, -0.007752331905066967, -0.0007496645557694137, -0.0011525661684572697, -0.06792459636926651, -0.004473677836358547, -0.0008470999309793115, -0.5015276074409485, -0.026660222560167313, -0.6598876118659973], "finish_reason": "stop"}], "metrics": {"energy": 386.2802694606782, "energy_per_token": 3.330002322936881, "time": 9.889166, "time_per_token": 0.08525143103448275}}
{"outputs": [{"text": "try:\n        os.makedirs(log_dir, exist_ok=True)\n        with open(os.path.join(log_dir, filename), 'a') as f:\n            timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n            for key, value in metrics.items():\n                f.write(f'[{timestamp}] {key}: {value}\\n')\n        return True\n    except Exception as e:\n        print(f'An error occurred: {str(e)}')\n        return False", "tokens": ["try", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "            ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "f", "'", "[{", "timestamp", "}]", " {", "key", "}:", " {", "value", "}\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "str", "(", "e", ")}", "')", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-0.9884417653083801, -0.00011503035057103261, -0.0009750141180120409, -0.00599159300327301, -1.2611855268478394, -0.0007102350937202573, -0.01493146549910307, -1.490105023549404e-05, -7.4741430580616e-05, -0.000705470098182559, -0.018444687128067017, -1.1205610462639015e-05, -8.4638240878121e-06, -0.03565501421689987, -0.00045217780279926956, -1.311301275563892e-06, -1.9073468138230965e-06, -0.0008026715368032455, -0.00028606137493625283, -2.1815061700181104e-05, -0.10170523077249527, -0.025187911465764046, -1.5449328422546387, -0.007686916273087263, -0.0016251702327281237, -0.4648107588291168, -7.986990567587782e-06, -1.597391747054644e-05, -5.364403477869928e-06, -0.00019012074335478246, -0.0002609150833450258, -0.002968074521049857, -5.722029527532868e-06, -7.152555099310121e-07, -3.5523738915799186e-05, -0.0059943185187876225, -0.0009180859779007733, -0.00016366096679121256, -0.025969000533223152, -0.02212624065577984, -0.05567651987075806, -2.8490614567999728e-05, -0.4516962468624115, -0.004778157453984022, -0.0026750515680760145, -0.0008981961291283369, -0.4415420591831207, -0.003298320807516575, -0.0063294898718595505, -1.537788011773955e-05, -0.02028306946158409, -3.93382906622719e-05, -0.015997745096683502, -0.021066363900899887, -8.344646857949556e-07, -1.5914719104766846, -0.01025207620114088, -0.009898741729557514, -0.033465251326560974, -0.01871616207063198, -0.0003810394846368581, -9.65590606938349e-06, -9.762764238985255e-05, -0.003371271537616849, -0.0003965306677855551, -0.0006083783227950335, -8.439661905867979e-05, -0.003034512745216489, -0.00011383838864276186, -0.041378214955329895, -4.351044481154531e-05, -0.0021589321549981833, -0.003930938430130482, -0.22436493635177612, -1.3077516555786133, -0.020434919744729996, -0.023629141971468925, -2.825220326485578e-05, -0.007825195789337158, -0.0008764001540839672, -3.158996332786046e-05, -3.015949550899677e-05, -0.00024148885859176517, -0.00025912740966305137, -0.03835901990532875, -4.0531076592742465e-06, -1.9073304429184645e-05, -0.0032059960067272186, -0.0042663272470235825, -2.5707218647003174, -0.052858222275972366, -0.0014666287461295724, -0.00714449817314744, -0.04877762869000435, -0.00039915222441777587, -0.12458013743162155, -0.0034780744463205338, -0.008903564885258675, -0.006075841374695301, -3.909988299710676e-05, -5.411955135059543e-05, -0.0003587556129787117, -0.20651356875896454, -0.044648054987192154, -0.0007874249131418765, -0.0015423318836838007, -0.007623862475156784, -0.00020561488054227084, -0.14804871380329132, -0.0004368066438473761, -0.027702944353222847, -3.862306402879767e-05, -0.0016956250183284283, -0.00048720886115916073, -0.02644081972539425, -0.05512477457523346, -0.03288000077009201, -0.27754390239715576, -0.005458095110952854, -0.00010656742961145937, -0.00013171759201213717, -0.0035906860139220953, -0.0003003622987307608, -0.9322678446769714, -4.005352093372494e-05, -1.2874520507466514e-05, -0.0005638201837427914, -0.0010600429959595203, -0.0012061471352353692, -0.039768315851688385, -0.004930243361741304, -0.0008985534077510238, -0.5264360904693604, -0.020712625235319138, -1.7707884311676025], "finish_reason": "stop"}], "metrics": {"energy": 454.49924687004096, "energy_per_token": 3.3666610879262295, "time": 11.363314, "time_per_token": 0.0841726962962963}}
{"outputs": [{"text": "log_path = os.path.join(log_dir, filename)\n\n    try:\n        with open(log_path, 'a') as file:\n            timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n            for metric, value in metrics.items():\n                file.write(f\"{metric}: {value} ({timestamp})\\n\")\n\n        return True\n\n    except Exception as error:\n        print(f\"An error occurred: {error}\")\n        return False", "tokens": ["log", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "path", ",", " '", "a", "')", " as", " file", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "file", ".", "write", "(", "f", "\"", "{", "metric", "}:", " {", "value", "}", " ({", "timestamp", "})\\", "n", "\"", ")", "\n", "\n", "        ", "return", " True", "\n", "\n", "    ", "except", " Exception", " as", " error", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "error", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "#"], "logprobs": [-3.08638596534729, -0.04582639038562775, -1.0333064794540405, -0.0005515484372153878, -0.03890254348516464, -3.2186455882765586e-06, -5.3165931603871286e-05, -1.0013530300057027e-05, -0.0010258655529469252, -0.0005579821881838143, -0.00848474446684122, -8.34461570775602e-06, -0.001666586846113205, -0.0003121604095213115, -0.004687867127358913, -0.0008871195605024695, -0.012625643983483315, -1.1439183950424194, -0.0005583396414294839, -0.22530843317508698, -5.173549288883805e-05, -0.0005943200667388737, -0.0022393406834453344, -0.17255282402038574, -0.002120985882356763, -0.0003364712174516171, -0.0008199428557418287, -2.50339189733495e-06, -5.722029527532868e-06, -0.00016783259343355894, -0.04931643232703209, -0.032719649374485016, -0.10723774135112762, -2.992108420585282e-05, -1.0658948421478271, -0.002594559220597148, -0.004582142923027277, -0.0006277974462136626, -0.6708269119262695, -0.0029105464927852154, -0.01155269704759121, -1.490105023549404e-05, -0.01092995423823595, -5.113947918289341e-05, -0.021249836310744286, -0.018620101734995842, -1.0728830375228426e-06, -1.2022979259490967, -0.007405804470181465, -0.006622391752898693, -0.034079305827617645, -0.013879919424653053, -0.0004481264913920313, -1.168244216387393e-05, -0.00014435203047469258, -0.001735967700369656, -0.00023231192608363926, -0.00042548662167973816, -0.00010072677832795307, -0.001364015624858439, -7.4741430580616e-05, -0.026912998408079147, -3.4450891689630225e-05, -0.0025609098374843597, -0.07296622544527054, -0.24956746399402618, -0.5727056264877319, -0.2836416959762573, -0.0023409125860780478, -4.124556289752945e-05, -0.004626166541129351, -0.0012434140080586076, -1.3589766240329482e-05, -1.9192511899746023e-05, -0.00020323118951637298, -0.00022706791060045362, -0.08013594150543213, -2.682172998902388e-05, -1.4543427823809907e-05, -0.0008294717408716679, -0.003042475553229451, -0.16082485020160675, -0.4996563196182251, -1.7688181400299072, -0.21691375970840454, -0.0074447342194616795, -0.006964810658246279, -0.12321416288614273, -1.1876697540283203, -0.0001006075763143599, -0.00409158319234848, -2.4676019165781327e-05, -5.602679812000133e-05, -5.1973900554003194e-05, -0.0007010624394752085, -2.0142366886138916, -0.054154541343450546, -0.19026683270931244, -0.0009323778795078397, -0.017490433529019356, -1.4658217430114746, -0.00023958197562023997, -0.0016401661559939384, -0.3605552017688751, -0.0005508335889317095, -2.411693811416626, -0.012445996515452862, -0.005249881185591221, -0.0013921103673055768, -0.03375688195228577, -0.01596219651401043, -0.05835196003317833, -0.106284961104393, -0.0018377096857875586, -8.332382276421413e-05, -8.546940807718784e-05, -0.004968795459717512, -0.00022790218645241112, -0.05825648456811905, -0.010508797131478786, -0.00026592056383378804, -0.0014366315444931388, -0.03838781267404556, -0.005602728575468063, -0.0006379238329827785, -0.2851388156414032, -0.012203315272927284, -1.3035988807678223], "finish_reason": "stop"}], "metrics": {"energy": 427.2655803108212, "energy_per_token": 3.3380123461782905, "time": 10.721851, "time_per_token": 0.0837644609375}}
{"outputs": [{"text": "# Initialize the log file path\n    log_path = os.path.join(log_dir, filename)\n\n    # Open the log file in append mode\n    try:\n        with open(log_path, 'a') as f:\n            # Write a timestamp for the current time\n            f.write(f\"\\nTime: {datetime.now()}\\n\")\n\n            # Write each metric and its value to the log file, with a timestamp\n            for metric, value in metrics.items():\n                f.write(f\"{metric}: {value} | Timestamp: {datetime.now()}\\n\")\n        print(f\"Metrics written to {log_path}\")\n        return True\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return False", "tokens": ["#", " Initialize", " the", " log", " file", " path", "\n", "    ", "log", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Open", " the", " log", " file", " in", " append", " mode", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "#", " Write", " a", " timestamp", " for", " the", " current", " time", "\n", "            ", "f", ".", "write", "(", "f", "\"", "\\", "nTime", ":", " {", "datetime", ".", "now", "()", "}\\", "n", "\"", ")", "\n", "\n", "            ", "#", " Write", " each", " metric", " and", " its", " value", " to", " the", " log", " file", ",", " with", " a", " timestamp", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "f", "\"", "{", "metric", "}:", " {", "value", "}", " |", " Tim", "estamp", ":", " {", "datetime", ".", "now", "()", "}\\", "n", "\"", ")", "\n", "        ", "print", "(", "f", "\"", "Metrics", " written", " to", " {", "log", "_", "path", "}\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.312898874282837, -3.9124295711517334, -0.94906085729599, -1.0060642957687378, -0.14429062604904175, -0.45690837502479553, -0.2603094279766083, -0.0008095800876617432, -0.28998756408691406, -0.026272347196936607, -1.0259909629821777, -0.0007664603181183338, -0.135941281914711, -1.0371154530730564e-05, -5.507317473529838e-05, -1.2516897186287679e-05, -0.0010763572063297033, -0.000692842761054635, -0.009291148744523525, -1.07287787614041e-05, -0.0008985534077510238, -0.0003281293320469558, -0.00772465206682682, -0.0017577449325472116, -0.0024974129628390074, -0.12073390185832977, -0.00025090406415984035, -0.15490210056304932, -1.31443190574646, -0.029201198369264603, -0.17472140491008759, -0.0004114258335903287, -0.4143815040588379, -0.061824072152376175, -0.0013767535565420985, -0.41286590695381165, -0.0004843492351938039, -0.07844005525112152, -5.531158240046352e-05, -9.48860906646587e-05, -0.0024701817892491817, -0.03553859144449234, -0.0005946775199845433, -0.00031513971043750644, -0.0007981451926752925, -4.410734163684538e-06, -1.966933996300213e-05, -0.00011288482346571982, -0.021414725109934807, -0.001412466517649591, -0.06854535639286041, -4.2676016164477915e-05, -0.73722904920578, -0.007898526266217232, -0.001388420001603663, -0.025515899062156677, -0.04708965867757797, -1.1573009490966797, -1.941456913948059, -0.10843350738286972, -3.16634202003479, -1.5411300659179688, -0.17919930815696716, -0.19093245267868042, -0.15685871243476868, -0.0002351722796447575, -0.7299450635910034, -4.9232225137529895e-05, -0.00011181206355104223, -0.06708777695894241, -0.17352430522441864, -0.29425910115242004, -3.4064781665802, -2.3994250297546387, -0.06452449411153793, -0.006149537395685911, -0.043220505118370056, -9.63164638960734e-05, -0.012949892319738865, -0.02167116291821003, -0.49391046166419983, -0.0007645544828847051, -0.005975833162665367, -0.0010180057724937797, -0.0003660247311927378, -0.3616851270198822, -0.0018518695142120123, -0.0007397775771096349, -0.3325114846229553, -0.35849711298942566, -0.01886707916855812, -1.0837098360061646, -0.012650245800614357, -0.1409798115491867, -0.17233160138130188, -0.002819731365889311, -0.8121454119682312, -0.004796190652996302, -1.9470309019088745, -1.6040065288543701, -0.22940830886363983, -0.5805429816246033, -1.1957931518554688, -0.00014256415306590497, -0.0055879103019833565, -0.3306022882461548, -0.08006706088781357, -0.0038798784371465445, -6.913899414939806e-05, -0.005550449248403311, -0.0013017522869631648, -4.3748852476710454e-05, -1.811964830267243e-05, -9.83428253675811e-05, -0.0007917130133137107, -0.12935729324817657, -2.4676019165781327e-05, -2.002696055569686e-05, -0.000993354362435639, -0.004163170233368874, -0.024484386667609215, -0.08805432915687561, -0.023343509063124657, -0.06978626549243927, -0.004585821647197008, -0.008643831126391888, -0.7382972836494446, -1.9952269792556763, -2.5836429595947266, -0.00040904260822571814, -0.007109581492841244, -0.00206055399030447, -0.0037667055148631334, -5.447716102935374e-05, -0.005035100504755974, -0.015648899599909782, -0.022446725517511368, -2.5748875486897305e-05, -0.0005691815749742091, -0.0003010773507412523, -0.0004029654082842171, -1.4767825603485107, -2.0685110092163086, -0.007524008862674236, -0.03336171805858612, -0.06224444508552551, -0.6224544048309326, -0.5996929407119751, -0.057238511741161346, -0.14370287954807281, -0.0643145814538002, -1.0728830375228426e-06, -0.00321597745642066, -0.12018753588199615, -0.00027414379292167723, -0.018761908635497093, -0.13781027495861053, -0.00890651810914278, -0.0012201968347653747, -0.018132636323571205, -0.18009208142757416, -0.005578189622610807, -0.4654131829738617, -0.0006382812280207872, -0.019528856500983238, -5.94836674281396e-05, -0.005002719350159168, -0.000943096645642072, -0.2129823863506317, -0.001908744452521205, -0.013096504844725132, -0.01012109499424696, -0.005339053459465504, -0.0001212284987559542, -0.00015531764074694365, -0.006481340620666742, -0.0006532918778248131, -0.21775701642036438, -0.03911154717206955, -0.002763621276244521, -0.0021343089174479246, -0.038118645548820496, -0.010230719111859798, -0.0009800160769373178, -1.3440923690795898, -4.410734163684538e-06, -3.814689989667386e-06, -2.7418097943154862e-06, -1.4305012882687151e-05, -0.2718837559223175], "finish_reason": "stop"}], "metrics": {"energy": 638.8625446605683, "energy_per_token": 3.362434445581939, "time": 15.983954, "time_per_token": 0.08412607368421053}}
{"outputs": [{"text": "try:\n        # Ensure that the log directory exists\n        if not os.path.exists(log_dir):\n            os.makedirs(log_dir)\n\n        # Construct the log file path\n        log_file_path = os.path.join(log_dir, filename)\n\n        # Open the log file in append mode\n        with open(log_file_path, 'a') as log_file:\n            # Get the current date and time\n            current_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n\n            # Write each metric to the log file with its timestamp\n            for metric, value in metrics.items():\n                log_file.write(f\"[{current_time}] {metric}: {value}\\n\")\n\n            return True\n\n    except Exception as e:\n        # Log the error message\n        print(f\"An error occurred: {str(e)}\")\n        return False", "tokens": ["try", ":", "\n", "        ", "#", " Ensure", " that", " the", " log", " directory", " exists", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "\n", "        ", "#", " Construct", " the", " log", " file", " path", "\n", "        ", "log", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "        ", "#", " Open", " the", " log", " file", " in", " append", " mode", "\n", "        ", "with", " open", "(", "log", "_", "file", "_", "path", ",", " '", "a", "')", " as", " log", "_", "file", ":", "\n", "            ", "#", " Get", " the", " current", " date", " and", " time", "\n", "            ", "current", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "            ", "#", " Write", " each", " metric", " to", " the", " log", " file", " with", " its", " timestamp", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "log", "_", "file", ".", "write", "(", "f", "\"", "[{", "current", "_", "time", "}]", " {", "metric", "}:", " {", "value", "}\\", "n", "\"", ")", "\n", "\n", "            ", "return", " True", "\n", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " Log", " the", " error", " message", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-0.9884417653083801, -0.00011503035057103261, -0.0009750141180120409, -0.00599159300327301, -1.4140290021896362, -1.784788966178894, -1.0907222032546997, -0.12314566224813461, -0.21068133413791656, -0.1213727816939354, -0.003553862916305661, -0.14262422919273376, -0.00044979469384998083, -0.5446137189865112, -0.00878635048866272, -0.0005416594794951379, -1.2874520507466514e-05, -0.0013975863112136722, -1.3470558769768104e-05, -0.06681931018829346, -0.0004972175229340792, -0.007427931763231754, -5.8412379075889476e-06, -2.7179348762729205e-05, -0.00031573555315844715, -0.0004545609117485583, -0.0006028980133123696, -0.006108542904257774, -8.583032467868179e-06, -0.09363347291946411, -1.9073468138230965e-06, -5.125986263010418e-06, -0.0001486429391661659, -0.0013805630151182413, -5.483612312673358e-06, 0.0, -0.0016565899131819606, -0.0012479382567107677, -0.13022002577781677, -0.0011831672163680196, -0.061654508113861084, -0.7240263223648071, -0.0123963113874197, -1.4344303607940674, -0.03479349985718727, -0.02654924988746643, -0.06503286957740784, -8.785339014139026e-05, -0.6067402958869934, -0.005899516865611076, -0.16549763083457947, -1.1459417343139648, -0.0009908534120768309, -0.00012599628826137632, -0.06853533536195755, -2.3841830625315197e-06, -1.4185804502631072e-05, -3.6954811548639555e-06, -0.0006243425305001438, -0.00025817399728111923, -0.0018924438627436757, -7.152531907195225e-06, -3.3378546504536644e-06, -5.090107151772827e-05, -0.0033918251283466816, -0.0025000290479511023, -0.0006236277404241264, -0.021547269076108932, -0.0010524216340854764, -0.03138737007975578, -0.6271843314170837, -0.019603906199336052, -0.20784249901771545, -9.262132516596466e-05, -0.23281429708003998, -0.03137177228927612, -0.0009056995622813702, -0.37198880314826965, -6.544376083184034e-05, -0.005684045609086752, -0.0001858300092862919, -0.00016783259343355894, -0.0005105622112751007, -2.3841830625315197e-06, -6.556489552167477e-06, -4.637133679352701e-05, 0.0, -0.0001045410826918669, -0.031056448817253113, -0.0005967028555460274, -0.05354161933064461, -4.5536911784438416e-05, -0.6497533917427063, -0.010384456254541874, -0.00016973962192423642, -0.00012182447244413197, -0.00014172980445437133, -0.04127481207251549, -0.032030873000621796, -1.2507877349853516, -0.03021351620554924, -0.01522127166390419, -2.2659378051757812, -0.01363746915012598, -0.0018487757770344615, -0.08135970681905746, -0.00012933371181134135, -1.9329938888549805, -0.0004951919545419514, -0.35095807909965515, -0.0005415403284132481, -0.005785979330539703, -1.2159273865108844e-05, -0.0053983391262590885, -4.470248313737102e-05, -0.2608548104763031, -0.0070052966475486755, -3.576278118089249e-07, -0.33556821942329407, -0.0029584472067654133, -0.017153240740299225, -0.012657543644309044, -0.0004391897819004953, -8.22540732769994e-06, -0.000125281119835563, -0.002387056592851877, -0.0003492222458589822, -0.0007651500636711717, -4.470248313737102e-05, -0.000479344860650599, -3.7431014789035544e-05, -0.026925645768642426, -0.00022635281493421644, -0.07807451486587524, -0.0007269124034792185, -0.0038890219293534756, -0.22843633592128754, -1.3597772121429443, -0.01733708195388317, -0.39194464683532715, -0.0023327062372118235, -0.0936761349439621, -0.00022003613412380219, -0.7295472025871277, -2.9005305767059326, -2.418954372406006, -0.018671700730919838, -0.00010322991875000298, -0.010576269589364529, -0.0989646464586258, -0.5868496894836426, -0.0013333010720089078, -6.341733387671411e-05, -0.004876268561929464, -0.0011949549661949277, -1.680836794548668e-05, -1.4662635294371285e-05, -7.915183232398704e-05, -0.00018130090029444546, -0.026124518364667892, -0.00023040501400828362, -0.10784666985273361, -0.00036137725692242384, -1.3589766240329482e-05, -0.0035935367923229933, -0.004446500446647406, -0.8904253244400024, -0.7097141146659851, -0.0011020784731954336, -3.933898824470816e-06, -1.311301275563892e-06, -0.008578473702073097, -0.03357568755745888, -0.0002215855201939121, -0.10717263072729111, -0.0016538526397198439, -0.011281863786280155, -0.004088496323674917, -5.0424259825376794e-05, -3.58813522325363e-05, -0.00019834458362311125, -0.0002232540718978271, -0.06748432666063309, -3.001007556915283, -0.9888415336608887, -0.0007834940915927291, -0.10537440329790115, -0.9277557134628296, -0.0013899675104767084, -0.008268765173852444, -0.07663264870643616, -0.000406301929615438, -0.0989360362291336, -8.535020606359467e-05, -0.011557881720364094, -0.0009650102583691478, -0.6012175679206848, -1.1990954875946045, -0.7062634229660034, -0.019869105890393257, -1.2251107692718506, -0.36691513657569885, -0.000179036331246607, -0.10149016231298447, -0.01949729211628437, -0.0436553880572319, -0.043501660227775574, -0.002970451721921563, -7.1403817855753e-05, -7.080780778778717e-05, -0.0023677905555814505, -0.00033158526639454067, -0.8595945239067078, -2.5152843591058627e-05, -1.6927575416048057e-05, -0.0015041239093989134, -0.0009654866298660636, -0.0007483542431145906, -0.0007142852991819382, -0.17845363914966583, -0.008163891732692719, -0.0004659997357521206, -0.3279005289077759, -0.01776696741580963, -1.5541751384735107], "finish_reason": "stop"}], "metrics": {"energy": 802.4901151390067, "energy_per_token": 3.566622733951141, "time": 19.120855, "time_per_token": 0.08498157777777778}}
{"outputs": [{"text": "# Check if the directory exists and create it if it doesn't\n    if not os.path.exists(log_dir):\n        try:\n            os.makedirs(log_dir)\n        except OSError as e:\n            print('An error occurred: %s' % e)\n            return False\n\n    # Construct the path to the log file\n    log_file = os.path.join(log_dir, filename)\n\n    # Try to write the metrics to the file\n    try:\n        with open(log_file, 'a') as f:\n            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n            for key, value in metrics.items():\n                f.write('{} | {} : {}\\n'.format(timestamp, key, value))\n        return True\n    except Exception as e:\n        print('An error occurred: %s' % e)\n        return False", "tokens": ["#", " Check", " if", " the", " directory", " exists", " and", " create", " it", " if", " it", " doesn", "'", "t", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "        ", "except", " O", "SE", "rror", " as", " e", ":", "\n", "            ", "print", "('", "An", " error", " occurred", ":", " %", "s", "'", " %", " e", ")", "\n", "            ", "return", " False", "\n", "\n", "    ", "#", " Construct", " the", " path", " to", " the", " log", " file", "\n", "    ", "log", "_", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Try", " to", " write", " the", " metrics", " to", " the", " file", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "file", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "            ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "('", "{}", " |", " {}", " :", " {}\\", "n", "'", ".", "format", "(", "timestamp", ",", " key", ",", " value", "))", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "('", "An", " error", " occurred", ":", " %", "s", "'", " %", " e", ")", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.312898874282837, -1.183685064315796, -0.1372096687555313, -0.39080381393432617, -2.857975482940674, -0.15905852615833282, -1.5799392461776733, -0.06371882557868958, -0.05757753923535347, -0.000952386180870235, -0.9747807383537292, -0.09731870144605637, -0.00015937011630740017, -8.702239938429557e-06, -0.034389760345220566, -0.0011649496154859662, -0.03970072418451309, -0.004436175338923931, -0.0007783720502629876, -1.4305012882687151e-05, -0.0016632545739412308, -1.9073304429184645e-05, -0.09280486404895782, -0.0011805477552115917, -0.010057131759822369, -8.583032467868179e-06, -6.318072337307967e-06, -0.0003228858404327184, -0.000303818320389837, -0.002104093786329031, -2.333271026611328, -1.4066597032069694e-05, -0.00011955977242905647, -0.0004440752090886235, -0.0021974719129502773, -5.364403477869928e-06, -0.15012270212173462, -2.288792165927589e-05, -0.00011324241495458409, -0.000912369170691818, -0.0020705468486994505, -4.768360213347478e-06, -3.576278118089249e-07, -0.00699393218383193, -0.00171538011636585, -0.04345029592514038, -0.0003289635351393372, -0.23495684564113617, -3.2186455882765586e-06, 0.0, -0.16235825419425964, -0.08094026148319244, -0.00010358751023886725, -0.0005752577562816441, -0.00029273517429828644, -0.08133673667907715, -1.4490103721618652, -0.03548233211040497, -0.00013696208770852536, -0.0002252801787108183, -0.5593491196632385, -2.063427448272705, -0.045913610607385635, -0.016819098964333534, -0.002113253576681018, -0.30441755056381226, -0.06430664658546448, -0.00625035772100091, -0.0027254601009190083, -0.00439914595335722, -0.005245968233793974, -0.003866341197863221, -0.13394670188426971, -0.000734178873244673, -0.06594931334257126, -1.0908396244049072, -0.017066756263375282, -2.03227162361145, -0.11475860327482224, -0.00042465253500267863, -0.19508205354213715, -0.0007175016799010336, -0.1339838206768036, -6.05564855504781e-05, -0.4135497808456421, -0.008320902474224567, -0.6511830687522888, -0.20318849384784698, -0.01728658378124237, -8.4638240878121e-06, -1.4543427823809907e-05, -2.264974000354414e-06, -0.0006962973857298493, -0.00022265815641731024, -0.0019954785238951445, -4.768360213347478e-06, -4.172316494077677e-06, -5.006664650863968e-05, -0.001970970071852207, -0.0017298986203968525, -0.0005646541831083596, -0.016078924760222435, -0.00015186110977083445, -0.09845400601625443, -2.339722156524658, -0.024655023589730263, -0.4182904064655304, -0.046927813440561295, -0.03280813619494438, -0.018678605556488037, -0.0035383019130676985, -0.43649235367774963, -0.16564956307411194, -0.00017975145601667464, -0.005022171884775162, -2.002696055569686e-05, -2.539125671319198e-05, -0.0009742995607666671, -0.0958278700709343, -0.00028224775451235473, -0.0001951265730895102, -0.0003960540343541652, -2.7418097943154862e-06, -1.4424220353248529e-05, -0.0001546025014249608, -0.02077019028365612, -0.023609234020113945, -0.05040404573082924, -3.540453326422721e-05, -0.05284341052174568, -0.002688842825591564, -0.004354993812739849, -0.000856509490404278, -0.7033335566520691, -0.0013685394078493118, -0.013080385513603687, -2.47952248173533e-05, -0.014643220230937004, -3.731181277544238e-05, -0.021701958030462265, -0.022213220596313477, -3.3378546504536644e-06, -0.11717493832111359, -0.010781018063426018, -0.02091110870242119, -0.011209841817617416, -0.000387831823900342, -1.2636104656849056e-05, -0.00016485285595990717, -0.0033056873362511396, -0.00038413776201196015, -0.0008889061282388866, -8.761498611420393e-05, -0.0005788319394923747, -0.00013851160474587232, -0.027352243661880493, -0.005893591325730085, -0.004746123682707548, -0.09971955418586731, -1.4314486980438232, -0.018427016213536263, -0.019055284559726715, -4.029192859889008e-05, -0.006754660978913307, -0.0008883106056600809, -0.00037281715776771307, -3.135155202471651e-05, -0.0002461368858348578, -0.0001646144810365513, -0.03161608427762985, -4.768360213347478e-06, -1.1205610462639015e-05, -1.0051262378692627, -1.5403529405593872, -2.7600464820861816, -0.14332273602485657, -2.2712509632110596, -0.013981139287352562, -8.129743218887597e-05, -0.0001674750237725675, -0.00020013237372040749, -0.0001357701694360003, -8.856858039507642e-05, -0.004133847542107105, -9.083335316972807e-05, -0.001408419106155634, -0.010160391218960285, -0.011127203702926636, -0.00023052419419400394, -0.0004670721245929599, -0.7046774625778198, -0.02787024900317192, -0.00032610344351269305, -0.004501566756516695, -0.08070991188287735, -0.004507975187152624, -1.7082054615020752, -0.005696847103536129, -0.0007731309160590172, -0.00011395759065635502, -0.004808054305613041, -0.000512111175339669, -0.06363940238952637, -0.0047760214656591415, -0.0021864098962396383, -0.0002787916746456176, -3.8742269680369645e-05, -0.004561970010399818, -0.014346196316182613, -0.00037055302527733147, -0.00027569307712838054, -0.00010108436981681734, -0.0025535377208143473, -0.001158519764430821, -0.0008579387213103473, -0.032977472990751266, -0.0006891497760079801, -0.0002636561985127628, -1.159844160079956, -7.033323527139146e-06, -2.50339189733495e-06, -5.483612312673358e-06, -4.470248313737102e-05, -1.4037588834762573, -0.0029118540696799755], "finish_reason": "stop"}], "metrics": {"energy": 800.4677481937406, "energy_per_token": 3.557634436416625, "time": 18.918549, "time_per_token": 0.08408244}}
{"outputs": [{"text": "try:\n        os.makedirs(log_dir, exist_ok=True)\n        filepath = os.path.join(log_dir, filename)\n        with open(filepath, 'a') as f:\n            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n            for metric, value in metrics.items():\n                f.write(f\"[{timestamp}] {metric}: {value}\\n\")\n        return True\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return False", "tokens": ["try", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "        ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "        ", "with", " open", "(", "file", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "f", "\"", "[{", "timestamp", "}]", " {", "metric", "}:", " {", "value", "}\\", "n", "\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-0.9884417653083801, -0.00011503035057103261, -0.0009750141180120409, -0.00599159300327301, -1.2611855268478394, -0.0007102350937202573, -0.01493146549910307, -1.490105023549404e-05, -7.4741430580616e-05, -0.000705470098182559, -0.018444687128067017, -1.1205610462639015e-05, -8.4638240878121e-06, -0.03565501421689987, -0.00045217780279926956, -1.311301275563892e-06, -1.9073468138230965e-06, -0.0008026715368032455, -0.00028606137493625283, -2.1815061700181104e-05, -0.10170523077249527, -0.025187911465764046, -0.8972792029380798, -1.2125169038772583, -0.00026246439665555954, -0.023272700607776642, -1.4305104514278355e-06, -3.111314072157256e-05, -5.245195097813848e-06, -0.0010265801101922989, -0.00029309268575161695, -0.0027549429796636105, -5.960446742392378e-06, -5.960462772236497e-07, -3.659658250398934e-05, -0.005556851159781218, -0.001292823115363717, -0.0010317008709535003, -0.22096402943134308, -0.22199007868766785, -0.0009049849468283355, -0.00018344627460464835, -0.0004919749335385859, -6.556489552167477e-06, -0.0001494772732257843, -0.05208451300859451, -0.03402296453714371, -0.0672273337841034, -6.007967749610543e-05, -0.477489173412323, -0.0044478061608970165, -0.003777512814849615, -0.0004818470624741167, -0.25368157029151917, -0.0023636280093342066, -0.006023823749274015, -1.2636104656849056e-05, -0.01532270759344101, -3.8265450712060556e-05, -0.012127944268286228, -0.0293587613850832, -4.768370445162873e-07, -0.27542224526405334, -0.012597039341926575, -0.020400112494826317, -0.011026402935385704, -0.00036221143091097474, -8.34461570775602e-06, -0.00012039413559250534, -0.0025505651719868183, -0.0003195490571670234, -0.0007381098694168031, -6.854299135738984e-05, -0.0005719218170270324, -0.00011932138295378536, -0.0493617057800293, -0.002079231198877096, -0.0019922663923352957, -0.1956767439842224, -0.6351656913757324, -0.17054146528244019, -0.002297620987519622, -2.4914430468925275e-05, -0.011192512698471546, -0.0013167529832571745, -1.5258672647178173e-05, -1.6569954823353328e-05, -0.00016211149340961128, -0.00020001317898277193, -0.06666341423988342, -4.0531076592742465e-06, -1.3947389561508317e-05, -0.0027201101183891296, -0.0015368566382676363, -1.1078803539276123, -0.907930850982666, -0.000620768463704735, -0.007058209739625454, -0.0438014455139637, -0.00011681827891152352, -0.1085750088095665, -0.0019758481066673994, -0.005916818510740995, -0.005199600011110306, -2.312633478140924e-05, -4.2676016164477915e-05, -0.00014101465058047324, -0.00041952868923544884, -0.18553447723388672, -0.08297055959701538, -0.0011297041783109307, -0.0021004059817641973, -0.008479188196361065, -0.00014923889830242842, -0.08988841623067856, -0.000440262199845165, -0.027271509170532227, -2.729855441430118e-05, -0.0015501875896006823, -0.0005012686015106738, -0.03477576747536659, -0.02033446729183197, -0.039367154240608215, -0.09015043079853058, -0.002987328916788101, -7.557583012385294e-05, -9.297892393078655e-05, -0.0038538724184036255, -0.00028224775451235473, -0.39771243929862976, -0.006757976021617651, -0.0002936885575763881, -0.0018774517811834812, -0.039649393409490585, -0.0053718979470431805, -0.0007211944903247058, -0.31856444478034973, -0.022887352854013443, -0.646948516368866], "finish_reason": "stop"}], "metrics": {"energy": 459.5545121879575, "energy_per_token": 3.306147569697536, "time": 11.561909, "time_per_token": 0.08317920143884892}}
{"outputs": [{"text": "# Check if the log directory exists\n    if not os.path.exists(log_dir):\n        print(f\"Directory '{log_dir}' does not exist. Creating it now...\")\n        try:\n            os.makedirs(log_dir)\n        except OSError as e:\n            print(f\"Failed to create directory '{log_dir}': {e}\")\n            return False\n    # Check if the log file already exists\n    log_file_path = os.path.join(log_dir, filename)\n    if not os.path.exists(log_file_path):\n        try:\n            open(log_file_path, 'a').close()\n        except OSError as e:\n            print(f\"An error occurred while creating the log file {log_file_path}: {e}\")\n            return False\n    # Write the metrics to the log file\n    current_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    with open(log_file_path, 'a') as f:", "tokens": ["#", " Check", " if", " the", " log", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "print", "(", "f", "\"", "Directory", " '", "{", "log", "_", "dir", "}'", " does", " not", " exist", ".", " Creating", " it", " now", ".", ".", ".", "\"", ")", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "        ", "except", " O", "SE", "rror", " as", " e", ":", "\n", "            ", "print", "(", "f", "\"", "Failed", " to", " create", " directory", " '", "{", "log", "_", "dir", "}", "':", " {", "e", "}\"", ")", "\n", "            ", "return", " False", "\n", "    ", "#", " Check", " if", " the", " log", " file", " already", " exists", "\n", "    ", "log", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "file", "_", "path", "):", "\n", "        ", "try", ":", "\n", "            ", "open", "(", "log", "_", "file", "_", "path", ",", " '", "a", "')", ".", "close", "()", "\n", "        ", "except", " O", "SE", "rror", " as", " e", ":", "\n", "            ", "print", "(", "f", "\"", "An", " error", " occurred", " while", " creating", " the", " log", " file", " {", "log", "_", "file", "_", "path", "}:", " {", "e", "}\"", ")", "\n", "            ", "return", " False", "\n", "    ", "#", " Write", " the", " metrics", " to", " the", " log", " file", "\n", "    ", "current", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "with", " open", "(", "log", "_", "file", "_", "path", ",", " '", "a", "')", " as", " f", ":"], "logprobs": [-1.312898874282837, -1.183685064315796, -0.1372096687555313, -0.39080381393432617, -0.2971900701522827, -0.13415542244911194, -0.021322306245565414, -1.1967040300369263, -0.0008864049450494349, -0.01697428710758686, -0.009625452570617199, -0.0008607972995378077, -4.291525328881107e-06, -0.002419165801256895, -2.1815061700181104e-05, -0.10169327259063721, -0.0010093123419210315, -0.009187917225062847, -8.4638240878121e-06, -1.9907753085135482e-05, -0.0005314130103215575, -0.0002401778765488416, -0.0019190958701074123, -1.6848924160003662, -0.05918780714273453, -0.12983639538288116, -0.24311958253383636, -2.708127498626709, -0.8898558020591736, -0.0004648081958293915, -0.0022794236429035664, -2.3245540432981215e-05, -8.749579137656838e-05, -0.0010280092246830463, -0.16324806213378906, -0.0001431601122021675, -0.001278893556445837, -0.13579235970973969, -1.1145555973052979, -0.6821121573448181, -0.3850472569465637, -0.0024995533749461174, -0.709170937538147, -0.007704897318035364, -0.0011143434094265103, -0.00042226933874189854, -0.00040928093949332833, -0.006016003433614969, -2.7118449211120605, -2.992108420585282e-05, -0.0008575814426876605, -0.0005745429079979658, -0.014827759005129337, -9.298280929215252e-06, -0.0837867483496666, -6.198863957251888e-06, -0.00023803261865396053, -0.0003904534096363932, -0.0014255610294640064, -4.172316494077677e-06, -1.6689286894688848e-06, -0.022955743595957756, -0.015501839108765125, -0.20188942551612854, -9.965400386136025e-05, -0.28839433193206787, -2.9802276912960224e-06, -1.1920928244535389e-07, -0.09640849381685257, -0.08911056071519852, -9.548207890475169e-05, -0.0004065402317792177, -0.00013839241000823677, -0.050063032656908035, -0.005348895210772753, -0.05490509793162346, -0.01299319602549076, -2.269871950149536, -0.0003405229654163122, -0.0004820853646378964, -0.08344048261642456, -0.18335579335689545, -4.1483970562694594e-05, -0.0005421360838226974, -5.8412379075889476e-06, -4.768370445162873e-07, -0.19756121933460236, -0.0017392997397109866, -0.0030791987664997578, -0.17494480311870575, -0.026611121371388435, -0.00013934595335740596, -0.0001284993631998077, -0.012971073389053345, -0.014226679690182209, -0.014375220984220505, -0.002133833011612296, -2.2768359184265137, -0.26235899329185486, -1.6533739566802979, -0.007222731597721577, -0.08988448977470398, -0.40522801876068115, -0.0793667659163475, -2.228778123855591, -0.0027599360328167677, -0.10966940969228745, -0.0006519814487546682, -1.0720834732055664, -0.016267772763967514, -0.4346970021724701, -1.7765392065048218, -0.0196407288312912, -0.00022468426323030144, -0.031167268753051758, -4.768370445162873e-07, -1.4066597032069694e-05, -3.6954811548639555e-06, -0.0008336406317539513, -0.0002611534437164664, -0.0018625784432515502, -7.748573807475623e-06, -1.0490362910786644e-05, -4.088794958079234e-05, -0.003046635305508971, -0.0013568728463724256, -0.0009341643890365958, -0.005738806910812855, -0.0644524022936821, -1.4302332401275635, -0.003730007680132985, -1.4305104514278355e-06, -0.0007874249131418765, -2.3841830625315197e-06, -0.2202279269695282, -3.6477376852417365e-05, -0.004139308352023363, -7.152555099310121e-07, -5.471556869451888e-05, -5.7338023907504976e-05, -0.00011503035057103261, -0.0003711488388944417, -0.0004468158003874123, -0.0010206258157268167, -1.305030107498169, -1.4066597032069694e-05, -0.00027926836628466845, -0.0004124982515349984, -1.2692179679870605, -0.00015269544383045286, -0.0009260656661354005, -1.0728830375228426e-06, -1.5497195136049413e-06, -0.00012492353562265635, -2.0265558760002023e-06, -0.0001525762490928173, -0.017643174156546593, -2.3150622844696045, -0.02415059320628643, -0.021950742229819298, -2.2172682292875834e-05, -6.210611172718927e-05, -0.08934400230646133, -0.06987886875867844, -0.00010513706365600228, -0.21783429384231567, 0.0, 0.0, -0.005118124652653933, -0.0009313059854321182, -6.723177648382261e-05, -0.00021801002731081098, -0.00010585224663373083, -0.004278672393411398, -0.000798859924543649, -0.005160108674317598, -0.02025865577161312, -0.9599026441574097, -0.00029094755882397294, -0.0005498804384842515, -1.534240484237671, -0.15210609138011932, -0.13268618285655975, -0.42725351452827454, -0.00037949037505313754, -2.7730672359466553, -0.3567866086959839, -8.4638240878121e-06, -0.002419522497802973, -0.0012086475035175681, -4.482168878894299e-05, -0.04608723148703575, -0.005364902317523956, -0.010501600801944733, -0.007412904407829046, -0.0003023882454726845, -8.594620157964528e-05, -0.008466067723929882, -0.002778600202873349, -0.0009759668610058725, -0.00031609306461177766, -0.055994659662246704, -0.09137212485074997, -0.5223546624183655, -0.2805838882923126, -0.0768413096666336, -0.03162359073758125, -0.0035655039828270674, -0.22277097404003143, -0.00017391123401466757, -0.23003390431404114, -0.0005187834613025188, -3.2216386795043945, -0.0006082591717131436, -0.053335271775722504, -0.0013081812066957355, -0.008988985791802406, -1.9430925021879375e-05, -0.0074725402519106865, -8.737658936297521e-05, -0.11099905520677567, -0.015362387523055077, -3.3378546504536644e-06, -0.9293872117996216, -0.0032238198909908533, -0.003758867271244526, -0.04112575203180313, -0.01834953762590885, -0.000592890428379178, -1.7404405298293568e-05, -9.738924563862383e-05, -0.002877620980143547, -0.0005304598016664386, -0.0005466635921038687, -8.749579137656838e-05, -0.0017964191501960158, -9.846202738117427e-05, -0.03681502863764763, -4.8874615458771586e-05, -0.004504414740949869, -0.002987566636875272, -0.4013354480266571, -0.0003190723655279726, -0.00024005869636312127, -0.00274757225997746, -2.145764938177308e-06, -2.3364747903542593e-05, -0.0002203936892328784, -1.1920928244535389e-07, -8.987976616481319e-05, -0.010637721978127956, -0.0010476582683622837, -0.02240767516195774, -1.2755313036905136e-05, -0.23402808606624603, -0.000916418619453907], "finish_reason": "length"}], "metrics": {"energy": 872.4766629257202, "energy_per_token": 3.4081119645535947, "time": 21.633429, "time_per_token": 0.08450558203125}}
{"outputs": [{"text": "# Create the log directory if it doesn't exist\n    os.makedirs(log_dir, exist_ok=True)\n\n    # Construct the log file path\n    log_file_path = os.path.join(log_dir, filename)\n\n    # Open the log file in append mode and write the metrics with a timestamp\n    try:\n        with open(log_file_path, 'a') as log_file:\n            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n            for metric, value in metrics.items():\n                log_file.write(f'{timestamp} - {metric}: {value}\\n')\n        return True\n    except Exception as e:\n        # Log an error message if an exception occurs\n        error_message = f'An error occurred: {str(e)}'\n        print(error_message)\n        return False", "tokens": ["#", " Create", " the", " log", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Construct", " the", " log", " file", " path", "\n", "    ", "log", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Open", " the", " log", " file", " in", " append", " mode", " and", " write", " the", " metrics", " with", " a", " timestamp", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "file", "_", "path", ",", " '", "a", "')", " as", " log", "_", "file", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "log", "_", "file", ".", "write", "(", "f", "'{", "timestamp", "}", " -", " {", "metric", "}:", " {", "value", "}\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " Log", " an", " error", " message", " if", " an", " exception", " occurs", "\n", "        ", "error", "_", "message", " =", " f", "'", "An", " error", " occurred", ":", " {", "str", "(", "e", ")}", "'", "\n", "        ", "print", "(", "error", "_", "message", ")", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-1.312898874282837, -1.4073216915130615, -0.31349849700927734, -0.29195529222488403, -0.12504668533802032, -0.005602135788649321, -0.001957050058990717, -0.217070072889328, -0.00018487652414478362, -5.960446742392378e-06, -0.011898262426257133, -0.012340853922069073, -0.0015122179174795747, -1.5637130737304688, -0.00024256148026324809, -0.0005900310934521258, -1.1920928244535389e-07, -1.2278481335670222e-05, -0.00012087091454304755, -0.011237071827054024, -1.1205610462639015e-05, -8.583032467868179e-06, -0.000714404450263828, -0.00029392691794782877, -1.5497195136049413e-06, -3.933898824470816e-06, -0.0011948358733206987, -0.00027855331427417696, -0.00011598391574807465, -0.002623570617288351, -0.21463125944137573, -0.00024780540843494236, -0.13285216689109802, -0.5879183411598206, -0.010139504447579384, -1.1913762092590332, -0.032245125621557236, -0.029026472941040993, -0.08415240049362183, -9.893881360767409e-05, -0.21913591027259827, -0.004059171304106712, -0.32684001326560974, -0.8800052404403687, -0.0010848119854927063, -0.00011836781777674332, -0.11802979558706284, -9.536738616588991e-07, -4.100715523236431e-05, -1.1086402082582936e-05, -0.0006171943969093263, -0.00036113892565481365, -0.004102030768990517, -5.125986263010418e-06, -3.576272320060525e-06, -6.663577369181439e-05, -0.0031815171241760254, -0.0026134641375392675, -0.0010218166280537844, -0.01152382604777813, -0.00023624490131624043, -0.34284836053848267, -0.720684289932251, -0.021398622542619705, -0.2232448309659958, -9.679325739853084e-05, -0.27859383821487427, -0.03999363258481026, -0.0009683449170552194, -0.9930675625801086, -0.3094484210014343, -0.14836807548999786, -0.29041242599487305, -0.4992802143096924, -1.066856026649475, -0.0008124388405121863, -0.027291228994727135, -0.0005634627304971218, -0.030177198350429535, -2.0861407392658293e-05, -0.00010895135346800089, -0.0015145984943956137, -0.019980238750576973, -0.00033623288618400693, -0.0002273062855238095, -0.0005049622268415987, -2.9802276912960224e-06, -4.768360213347478e-06, -0.0002602000313345343, -1.9073468138230965e-06, -8.237022848334163e-05, -0.026622381061315536, -0.0005631053354591131, -0.06773891299962997, -1.490105023549404e-05, -0.9822196364402771, -0.00840400904417038, -9.393251093570143e-05, -8.165503095369786e-05, -0.0003846143954433501, -0.000597179401665926, -0.37778207659721375, -0.0026653024833649397, -0.01371731236577034, -1.549708758830093e-05, -0.012118169106543064, -3.6000557884108275e-05, -0.017796596512198448, -0.02311883494257927, -9.536738616588991e-07, -0.30765482783317566, -0.010790806263685226, -0.012029717676341534, -0.007362258154898882, -0.0004391897819004953, -9.417489309271332e-06, -9.548207890475169e-05, -0.0022172171156853437, -0.0002636561985127628, -0.0005000770906917751, -7.891343557275832e-05, -0.0004247716860845685, -9.679325739853084e-05, -0.029439326375722885, -0.002955594565719366, -0.011298365890979767, -0.21468916535377502, -0.18314191699028015, -0.5150120258331299, -0.0010551605373620987, -3.504691630951129e-05, -0.0049957213923335075, -0.0012655591126531363, -1.6093124941107817e-05, -1.0967194612021558e-05, -0.00018070495571009815, -0.00019739109848160297, -0.013061325065791607, -7.855583680793643e-05, -0.017919784411787987, -0.0001411338453181088, -1.6927575416048057e-05, -0.0019920284394174814, -0.00257303798571229, -0.6927786469459534, -0.1498737931251526, -0.20622670650482178, -1.0003349781036377, -0.009097198024392128, -0.0001740304142003879, -0.026036830618977547, -0.0013758012792095542, -0.006206761114299297, -0.003616461530327797, -4.625213477993384e-05, -6.186770770000294e-05, -0.00024196557933464646, -0.39658820629119873, -0.08008136600255966, -0.0011151769431307912, -0.02584180422127247, -0.033104684203863144, -0.0008148210472427309, -0.42252644896507263, -0.001629335805773735, -0.04038641229271889, -4.95898348162882e-05, -0.004864405374974012, -0.0004203628050163388, -2.286632776260376, -1.5338528156280518, -2.6578612327575684, -0.006412643473595381, -0.11595019698143005, -0.21458038687705994, -0.8524867296218872, -0.13796481490135193, -0.39142918586730957, -0.10337601602077484, -0.00017105070583056659, -2.8523361682891846, -0.0117524154484272, -0.13964208960533142, -0.00037496211007237434, -0.11842518299818039, -0.24594749510288239, -0.012127591297030449, -0.0003567297535482794, -6.294052582234144e-05, -0.014539718627929688, -0.0011804286623373628, -0.6465540528297424, -1.6212332411669195e-05, -7.188061863416806e-05, -0.0009056995622813702, -0.003031541593372822, -0.0009192770230583847, -0.0007466865936294198, -0.14804521203041077, -0.0013050857232883573, -0.005878658965229988, -1.8954096958623268e-05, -4.887569048150908e-06, -0.003720862790942192, -0.009141732007265091, -0.022211706265807152, -0.09376763552427292, -0.0014065144350752234, -0.4174933433532715, -0.018002448603510857, -0.8635192513465881], "finish_reason": "stop"}], "metrics": {"energy": 735.7001193370826, "energy_per_token": 3.4867304233984955, "time": 17.647396, "time_per_token": 0.08363694786729858}}
{"outputs": [{"text": "log_filepath = os.path.join(log_dir, filename)\n    try:\n        with open(log_filepath, 'a') as file:\n            for metric, value in metrics.items():\n                timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n                file.write(f\"{timestamp} {metric}: {value}\\n\")\n        return True\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n    return False", "tokens": ["log", "_", "file", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "file", "path", ",", " '", "a", "')", " as", " file", ":", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "                ", "file", ".", "write", "(", "f", "\"", "{", "timestamp", "}", " {", "metric", "}:", " {", "value", "}\\", "n", "\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "    ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.08638596534729, -0.04582639038562775, -0.5567649602890015, -2.795820474624634, -0.0010375360725447536, -0.11135542392730713, -1.0132738680113107e-05, -0.00021634146105498075, -1.2397689715726301e-05, -0.001767145935446024, -0.0005108005134388804, -0.008976816199719906, -3.135155202471651e-05, -0.0003784178989008069, -0.00022110878489911556, -0.0037437842693179846, -0.0009210634743794799, -0.012459653429687023, -0.41357776522636414, -0.4999256432056427, -9.452849917579442e-05, -0.0005421360838226974, -0.0023826563265174627, -0.16384923458099365, -0.002557580592110753, -0.0002892790944315493, -0.0008798541966825724, -7.271740287251305e-06, -2.0265373677830212e-05, -1.7523612768854946e-05, -0.0002244459028588608, -0.05446673184633255, -0.02858344465494156, -0.10694245994091034, -6.508615479106084e-05, -0.994163990020752, -0.005316642578691244, -0.02342630922794342, -0.0006921279709786177, -0.7122282981872559, -0.19205991923809052, -0.34946462512016296, -0.00366124021820724, -5.9960475482512265e-05, -0.0048825559206306934, -0.0011191064259037375, -3.361645576660521e-05, -2.0861407392658293e-05, -0.00038842763751745224, -0.0002733095607254654, -0.7157766819000244, -0.02445216476917267, -0.010852482169866562, -2.13382354559144e-05, -0.01952499896287918, -4.8993817472364753e-05, -0.022294482216238976, -0.019950907677412033, -1.0728830375228426e-06, -0.44993066787719727, -0.013673452660441399, -0.026491902768611908, -0.012529467232525349, -0.0004406196530908346, -1.1444026313256472e-05, -0.00011240804451517761, -0.0023843212984502316, -0.0004189328756183386, -0.001029200037010014, -8.964136941358447e-05, -0.000592890428379178, -0.00010787858627736568, -0.06327042728662491, -0.0025939648039638996, -0.00036066226311959326, -0.4211599826812744, -0.00030191155383363366, -2.5033637939486653e-05, -0.0018317601643502712, -0.0023677905555814505, -0.5136763453483582, -0.5819293856620789, -0.21257372200489044, -0.17821785807609558, -1.225581407546997, -0.0006456674309447408, -0.2523558437824249, -0.012788781896233559, -0.006906446535140276, -0.008695240132510662, -8.546940807718784e-05, -5.578839045483619e-05, -0.00015507926582358778, -0.0007961202645674348, -0.22825607657432556, -0.18157437443733215, -0.001143040368333459, -0.008127709850668907, -0.004179671406745911, -9.595887240720913e-05, -0.4122093617916107, -0.0007046362152323127, -0.07268824428319931, -4.7801782784517854e-05, -0.0016004146309569478, -0.0005122303264215589, -0.058934517204761505, -0.02815934270620346, -0.03241952136158943, -0.10206987708806992, -0.002856224775314331, -0.00011312322021694854, -0.00012337400403339416, -0.0037566106766462326, -0.00026127262390218675, -0.3679010272026062, -0.012699917890131474, -0.00040844682371243834, -0.0029277815483510494, -2.572742223739624, -0.00866167712956667, -0.001081953989341855, -1.8693207502365112, -6.437280717364047e-06, -4.291525328881107e-06, -2.3841830625315197e-06, -9.179073458653875e-06, -0.23314160108566284], "finish_reason": "stop"}], "metrics": {"energy": 446.12856893730157, "energy_per_token": 3.4853794448226685, "time": 10.72211, "time_per_token": 0.083766484375}}
{"outputs": [{"text": "log_path = os.path.join(log_dir, filename)\n    try:\n        with open(log_path, 'a') as f:\n            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n            for metric, value in metrics.items():\n                f.write(f'[{timestamp}] {metric}: {value}\\n')\n        return True\n    except Exception as e:\n        print(f'An error occurred: {e}')\n        return False", "tokens": ["log", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "f", "'", "[{", "timestamp", "}]", " {", "metric", "}:", " {", "value", "}\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.08638596534729, -0.04582639038562775, -1.0333064794540405, -0.0005515484372153878, -0.03890254348516464, -3.2186455882765586e-06, -5.3165931603871286e-05, -1.0013530300057027e-05, -0.0010258655529469252, -0.0005579821881838143, -0.00848474446684122, -8.34461570775602e-06, -0.001666586846113205, -0.0003121604095213115, -0.004687867127358913, -0.0008871195605024695, -0.012625643983483315, -0.38381707668304443, -0.31356698274612427, -8.380061626667157e-05, -0.00025912740966305137, -0.0017408467829227448, -0.1208675429224968, -0.0029179160483181477, -0.00032884435495361686, -0.001065401709638536, -3.3378546504536644e-06, -7.986990567587782e-06, -0.00015341058315243572, -0.04172917455434799, -0.020173491910099983, -0.08475232124328613, -2.8013790142722428e-05, -0.6956639885902405, -0.0039316508919000626, -0.006460258271545172, -0.0005441615357995033, -0.5689172744750977, -0.00248540285974741, -0.01223416905850172, -1.8000440832111053e-05, -0.01458870992064476, -3.6238969187252223e-05, -0.018846841529011726, -0.024999462068080902, -1.4305104514278355e-06, -0.3141114413738251, -0.009818119928240776, -0.021119587123394012, -0.011156558059155941, -0.0003387354372534901, -7.271740287251305e-06, -0.00014840454969089478, -0.0022819212172180414, -0.00036125810584053397, -0.0005525015876628458, -6.723177648382261e-05, -0.0009503615438006818, -8.83301836438477e-05, -0.021828165277838707, -0.0023849159479141235, -0.0023310412652790546, -0.1425561159849167, -0.6106035113334656, -0.1870325654745102, -0.0024812407791614532, -3.45700973412022e-05, -0.0072993021458387375, -0.0012731788447126746, -2.2411095415009186e-05, -1.9550132492440753e-05, -0.00018737945356406271, -0.00022873646230436862, -0.056451961398124695, -4.172316494077677e-06, -1.5139465176616795e-05, -0.002955119125545025, -0.0018660289933905005, -2.08463191986084, -0.03221511468291283, -0.000998594332486391, -0.009388581849634647, -0.04228515550494194, -0.00017927470616996288, -0.09094978868961334, -0.002311536343768239, -0.0142855579033494, -0.0038497161585837603, -4.124556289752945e-05, -4.279521817807108e-05, -0.00036161558819003403, -0.1799217164516449, -0.08549581468105316, -0.0009033175301738083, -0.002781928749755025, -0.0033566581550985575, -0.00015066919149830937, -0.31719452142715454, -0.0006876011611893773, -0.02578023262321949, -2.6940935640595853e-05, -0.0014416311169043183, -0.0004986473359167576, -0.038157086819410324, -0.03949619457125664, -0.008580955676734447, -0.21144726872444153, -0.0039550429210066795, -0.0001037067049765028, -0.00010966652916977182, -0.0035133559722453356, -0.00035958975786343217, -0.4747874438762665, -0.00977255403995514, -0.0017244244227185845, -0.0020174880046397448, -0.06161673739552498, -0.006951433606445789, -0.0013106813421472907, -1.0830609798431396, -7.390948667307384e-06, -2.264974000354414e-06, -2.861018856492592e-06, -1.0132738680113107e-05, -0.27345752716064453], "finish_reason": "stop"}], "metrics": {"energy": 423.6556819133757, "energy_per_token": 3.3892454553070057, "time": 10.307959, "time_per_token": 0.082463672}}
{"outputs": [{"text": "filepath = os.path.join(log_dir, filename)\n    try:\n        with open(filepath, 'a') as file:\n            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n            for metric, value in metrics.items():\n                file.write(f\"{metric}: {value} ({timestamp})\\n\")\n        return True\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return False", "tokens": ["file", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "file", "path", ",", " '", "a", "')", " as", " file", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "file", ".", "write", "(", "f", "\"", "{", "metric", "}:", " {", "value", "}", " ({", "timestamp", "})\\", "n", "\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.944251298904419, -0.5742605924606323, -0.0005800233921036124, -0.10242944210767746, -3.933898824470816e-06, -9.738924563862383e-05, -8.940656698541716e-06, -0.0013975863112136722, -0.0005221195751801133, -0.005363005213439465, -1.168244216387393e-05, -4.124556289752945e-05, -0.00012110930401831865, -0.0031634545885026455, -0.0007164295529946685, -0.011780809611082077, -0.30073779821395874, -0.39363548159599304, -4.994744449504651e-05, -0.00028272447525523603, -0.0016565899131819606, -0.14787845313549042, -0.002374569419771433, -0.00021026308240834624, -0.0007233387441374362, -1.0013530300057027e-05, -0.0001958416833076626, -0.056173864752054214, -0.019388679414987564, -0.0788409411907196, -3.075552376685664e-05, -0.9544252753257751, -0.0034827073104679585, -0.0038681223522871733, -0.0005495230434462428, -0.5273576974868774, -0.002394905546680093, -0.013806556351482868, -1.9073304429184645e-05, -0.01156106311827898, -4.2437604861333966e-05, -0.019148029386997223, -0.0194383691996336, -1.1920922133867862e-06, -0.3960765302181244, -0.0191702488809824, -0.024051561951637268, -0.008506374433636665, -0.0003672163875307888, -1.1086402082582936e-05, -0.00015031162183731794, -0.00226693507283926, -0.00029130507027730346, -0.0005038899253122509, -8.189342770492658e-05, -0.000922849983908236, -0.000120751719805412, -0.02132522314786911, -0.0027898934204131365, -0.0034659572411328554, -0.1639235019683838, -0.6938905119895935, -0.2577798664569855, -0.002221380127593875, -2.932505594799295e-05, -0.0056545305997133255, -0.0011528043542057276, -1.764281842042692e-05, -1.680836794548668e-05, -0.0001616347290109843, -0.0001805857609724626, -0.045633815228939056, -3.397406908334233e-05, -1.0847986231965479e-05, -0.0018511555390432477, -0.002078874269500375, -1.078801155090332, -0.5786539912223816, -1.360192894935608, -0.20690950751304626, -0.005752793047577143, -0.004962034057825804, -0.11819016933441162, -0.9478707909584045, -5.3881147323409095e-05, -0.003493992844596505, -2.95634672511369e-05, -4.6132929128361866e-05, -9.262132516596466e-05, -0.0002643712505232543, -0.19319337606430054, -0.11325311660766602, -0.000977276940830052, -0.0028747683390975, -0.003966441843658686, -0.00010585224663373083, -0.3761438727378845, -0.0005731132114306092, -0.07271584868431091, -3.099393507000059e-05, -0.0013313962845131755, -0.0004637358069885522, -0.049812979996204376, -0.02149849943816662, -0.02299651876091957, -0.12130214273929596, -0.0020418763160705566, -7.652943895664066e-05, -8.77341881277971e-05, -0.004053353797644377, -0.00019429226813372225, -0.3830276429653168, -0.009580113925039768, -0.000359351426595822, -0.0021027852781116962, -0.058828193694353104, -0.00415486004203558, -0.0007153574260883033, -1.5315409898757935, -6.6756979322235566e-06, -2.3841830625315197e-06, -2.3841830625315197e-06, -1.2874520507466514e-05, -0.24666725099086761], "finish_reason": "stop"}], "metrics": {"energy": 447.27833153533913, "energy_per_token": 3.60708331883338, "time": 10.522518, "time_per_token": 0.08485901612903225}}
{"outputs": [{"text": "try:\n        filepath = os.path.join(log_dir, filename)\n        with open(filepath, 'a') as f:\n            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n            for metric, value in metrics.items():\n                f.write(f'{timestamp} | {metric}: {value}\\n')\n        return True\n    except Exception as e:\n        print(f'An error occurred: {e}')\n        return False", "tokens": ["try", ":", "\n", "        ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "        ", "with", " open", "(", "file", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "f", "'{", "timestamp", "}", " |", " {", "metric", "}:", " {", "value", "}\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-0.9884417653083801, -0.00011503035057103261, -0.0009750141180120409, -0.00599159300327301, -3.799433708190918, -0.7679866552352905, -0.00047124247066676617, -0.05200495943427086, -4.768360213347478e-06, -0.00011717586312443018, -1.156323378381785e-05, -0.0016991952434182167, -0.0005372511222958565, -0.009710930287837982, -1.490105023549404e-05, -4.51792984677013e-05, -0.000226472009671852, -0.0038125463761389256, -0.0010058587649837136, -0.012742291204631329, -0.03252095729112625, -0.3954760432243347, -0.0032380789052695036, -0.00025245340657420456, -0.0012043612077832222, -8.4638240878121e-06, -0.00020430385484360158, -0.04239256680011749, -0.037645529955625534, -0.0896303579211235, -5.3881147323409095e-05, -0.6317949295043945, -0.006638023070991039, -0.006531083956360817, -0.0006521005416288972, -0.37224695086479187, -0.0021458473056554794, -0.01436452753841877, -1.4662635294371285e-05, -0.01574113965034485, -4.0411134250462055e-05, -0.017606163397431374, -0.024271605536341667, -9.536738616588991e-07, -0.3452031910419464, -0.013157803565263748, -0.02163114957511425, -0.01082359068095684, -0.00036483307485468686, -1.0251946150674485e-05, -0.0002273062855238095, -0.002395024523139, -0.00025090406415984035, -0.0006899837171658874, -8.189342770492658e-05, -0.0008724696817807853, -0.00010239553375868127, -0.020492615178227425, -0.0021310970187187195, -0.0037770376075059175, -0.21190597116947174, -0.5708087682723999, -0.22478386759757996, -0.002963082632049918, -2.8609820219571702e-05, -0.008640522137284279, -0.0013223483692854643, -2.407998726994265e-05, -1.645074735279195e-05, -0.00021979777375236154, -0.00022218143567442894, -0.06400992721319199, -3.4570634852570947e-06, -1.7881233361549675e-05, -0.002801305614411831, -0.001957288011908531, -0.7355425953865051, -0.21575605869293213, -0.17427806556224823, -2.050854206085205, -0.011962343007326126, -0.0009198724874295294, -0.1835058331489563, -0.0021074246615171432, -0.009505843743681908, -0.004161508288234472, -3.433168603805825e-05, -5.435795901576057e-05, -0.0004532501916401088, -0.21381808817386627, -0.075129434466362, -0.0012330556055530906, -0.0034462367184460163, -0.009182720445096493, -0.0002256377338198945, -0.16961213946342468, -0.0006982034537941217, -0.04007987678050995, -3.659658250398934e-05, -0.0018693606834858656, -0.00045849301386624575, -0.05827009305357933, -0.03922319784760475, -0.011782105080783367, -0.21811546385288239, -0.0032038569916039705, -0.00011193125828867778, -0.00014757021563127637, -0.003053528256714344, -0.0002972637885250151, -0.3495659828186035, -0.009108892641961575, -0.001303299912251532, -0.001259606215171516, -0.038344793021678925, -0.0057718753814697266, -0.0010214593494310975, -0.5951376557350159, -0.02296576276421547, -0.7062667608261108], "finish_reason": "stop"}], "metrics": {"energy": 420.75180822372425, "energy_per_token": 3.5062650685310355, "time": 10.092685, "time_per_token": 0.08410570833333333}}
{"outputs": [{"text": "# Initialize the flag\n    success = False\n    try:\n        # Create a log file path with the timestamp\n        log_file_path = os.path.join(log_dir, f'{filename}_{datetime.now().strftime(\"%Y_%m_%d_%H_%M_%S\")}.log')\n\n        # Write the metrics to the log file with a timestamp\n        with open(log_file_path, 'a') as log_file:\n            for metric_name, metric_value in metrics.items():\n                log_file.write(f'{datetime.now()} - {metric_name}: {metric_value}\\n')\n\n        # Set the success flag to True\n        success = True\n    except Exception as e:\n        # Print an error message if an exception occurs\n        print(f'An error occurred: {e}')\n\n    return success", "tokens": ["#", " Initialize", " the", " flag", "\n", "    ", "success", " =", " False", "\n", "    ", "try", ":", "\n", "        ", "#", " Create", " a", " log", " file", " path", " with", " the", " timestamp", "\n", "        ", "log", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " f", "'{", "filename", "}_{", "datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "_", "%", "m", "_", "%", "d", "_", "%", "H", "_", "%", "M", "_", "%", "S", "\"", ")}", ".", "log", "')", "\n", "\n", "        ", "#", " Write", " the", " metrics", " to", " the", " log", " file", " with", " a", " timestamp", "\n", "        ", "with", " open", "(", "log", "_", "file", "_", "path", ",", " '", "a", "')", " as", " log", "_", "file", ":", "\n", "            ", "for", " metric", "_", "name", ",", " metric", "_", "value", " in", " metrics", ".", "items", "():", "\n", "                ", "log", "_", "file", ".", "write", "(", "f", "'{", "datetime", ".", "now", "()}", " -", " {", "metric", "_", "name", "}:", " {", "metric", "_", "value", "}\\", "n", "')", "\n", "\n", "        ", "#", " Set", " the", " success", " flag", " to", " True", "\n", "        ", "success", " =", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " Print", " an", " error", " message", " if", " an", " exception", " occurs", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "\n", "    ", "return", " success", "\n", "\n", "if"], "logprobs": [-1.312898874282837, -3.9124295711517334, -0.94906085729599, -2.6752195358276367, -2.0850014686584473, -0.0004010588163509965, -0.7631269693374634, -0.09240768849849701, -0.7244157791137695, -0.0007869484252296388, -1.589708685874939, -1.5766316652297974, -0.0001262346631847322, -0.0009098681039176881, -0.00561719061806798, -0.06761457771062851, -0.9384933710098267, -3.0810532569885254, -2.12461519241333, -0.18514524400234222, -0.9100074172019958, -1.9695658683776855, -0.7433038949966431, -2.0808334350585938, -0.7863390445709229, -0.00035506143467500806, -1.3485372066497803, -0.04880374297499657, -0.5614500045776367, -1.0505965948104858, -0.012090727686882019, -0.0010080024367198348, -0.15012127161026, -3.397406908334233e-05, -0.00010907054820563644, -1.6689160474925302e-05, -0.0011193446116521955, -0.0013571109157055616, -0.022318031638860703, -9.059865078597795e-06, -1.7165990357170813e-05, -0.0004357342259027064, -1.6025530099868774, -0.6285142302513123, -0.046958524733781815, -0.3677016496658325, -0.1289849728345871, -2.455681169521995e-05, -0.015478950925171375, -0.0630650669336319, -0.006300230510532856, -0.02189977653324604, -2.3841855067985307e-07, -0.00041845624218694866, -0.0005911033367738128, -0.00040987672400660813, -0.036306120455265045, -2.8783118724823, -1.5020257706055418e-05, -0.0012143626809120178, -0.0037873697001487017, -2.7656173188006505e-05, -5.8887653722194955e-05, -0.39392969012260437, -0.0021224133670330048, -0.004473559092730284, -0.10955467075109482, -8.070142939686775e-05, -0.0007198841194622219, -0.05732114240527153, -0.0001995364436879754, -0.0001517419150331989, -0.07187459617853165, -0.001396991079673171, -0.03712739422917366, -0.23105353116989136, -0.0003644755925051868, -0.0006358985556289554, -1.2606090307235718, -0.0018507986096665263, -0.011577089317142963, -1.8832166194915771, -0.2069297730922699, -0.09197567403316498, -0.06421252340078354, -0.011240608058869839, -0.17820219695568085, -0.00024077377747744322, -1.8513994216918945, -0.6016355156898499, -0.003569661406800151, -0.20231260359287262, -0.00028224775451235473, -0.020745202898979187, -0.0005989664932712913, -0.00025340684805996716, -0.0009265420376323164, -2.50339189733495e-06, -6.4490144723095e-05, -0.00024482590379193425, -2.9802276912960224e-06, -0.00017796363681554794, -0.027948616072535515, -0.47638818621635437, -0.04679131135344505, -5.018585216021165e-05, -0.8387609720230103, -0.019022535532712936, -0.0003216941258870065, -0.00029380773776210845, -0.002971521345898509, -0.001209838199429214, -0.49699637293815613, -0.19173678755760193, -0.9036061763763428, -0.004044093191623688, -0.004997026175260544, -0.15293274819850922, -0.007382138166576624, -0.005059652961790562, -0.00012015574611723423, -0.009255125187337399, -0.002808200428262353, -3.0040289857424796e-05, -1.728519782773219e-05, -0.00032062159152701497, -0.00034528967808000743, -0.11620982736349106, -6.818538531661034e-05, -0.04018488898873329, -0.0005994430393911898, -8.67805938469246e-05, -0.003389805555343628, -0.005633193533867598, -0.30171141028404236, -0.765306293964386, -7.629365427419543e-06, -0.0016171961324289441, -2.292860507965088, -0.7990351319313049, -0.011421650648117065, -0.00033146608620882034, -2.3841830625315197e-06, -0.0004543225804809481, -0.0427459180355072, -0.0019785843323916197, -0.010080026462674141, -1.4305104514278355e-06, -1.549708758830093e-05, -0.0033384801354259253, -0.0001267114421352744, -0.00020001317898277193, -0.0001225396408699453, -0.27481645345687866, -0.01562742330133915, -0.035370148718357086, -0.14779238402843475, -0.0444939099252224, -0.9779345989227295, -0.0016229089815169573, -0.022483091801404953, -0.007187107112258673, -0.18492788076400757, -0.000169382052263245, -0.00077622797107324, -0.00012885693286079913, -0.0002698534226510674, -9.285972191719338e-05, -0.25869107246398926, -0.005784912966191769, -0.18744419515132904, -0.0008952185744419694, -0.12182088941335678, -0.00010668662434909493, -0.004803308751434088, -0.0015399513067677617, -0.32933762669563293, -1.0242176055908203, -1.569065809249878, -0.0009983561467379332, -0.006029156036674976, -0.3643524646759033, -0.28177186846733093, -0.14766640961170197, -0.36372265219688416, -0.030839281156659126, -0.00010549465514486656, -0.013865224085748196, -0.04325304180383682, -0.01667221076786518, -0.25996682047843933, -0.004238551016896963, -0.00014804698002990335, -8.34430247778073e-05, -0.00428698118776083, -0.0006934384000487626, -0.08463545888662338, -0.011227170005440712, -0.0019298041006550193, -0.0003626880934461951, -0.08918602019548416, -0.003115088678896427, -1.4885355234146118, -0.00167753582354635, -0.32449033856391907, -0.01060044951736927, -0.5750107169151306], "finish_reason": "stop"}], "metrics": {"energy": 721.688888061523, "energy_per_token": 3.486419749089483, "time": 17.449558, "time_per_token": 0.08429738164251208}}
{"outputs": [{"text": "log_file = os.path.join(log_dir, filename)\n    try:\n        with open(log_file, 'a', encoding='utf-8') as f:\n            for metric, value in metrics.items():\n                timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n                entry = f\"{timestamp} - {metric}: {value}\\n\"\n                f.write(entry)\n        return True\n    except OSError as e:\n        print(f\"An error occurred: {e}\")\n    except Exception as e:\n        print(f\"An unexpected error occurred: {e}\")\n    return False", "tokens": ["log", "_", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "file", ",", " '", "a", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "                ", "entry", " =", " f", "\"", "{", "timestamp", "}", " -", " {", "metric", "}:", " {", "value", "}\\", "n", "\"", "\n", "                ", "f", ".", "write", "(", "entry", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " O", "SE", "rror", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " unexpected", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "    ", "return", " False", "\n", "\n", "def"], "logprobs": [-3.08638596534729, -0.04582639038562775, -0.5567649602890015, -0.6322615742683411, -0.10445474833250046, -3.576272320060525e-06, -6.818538531661034e-05, -7.629365427419543e-06, -0.0009455977124162018, -0.0005465444410219789, -0.0073421411216259, -9.298280929215252e-06, -0.00017033556650858372, -0.0001726001501083374, -0.004691426642239094, -0.0009773960337042809, -0.010526491329073906, -0.32180383801460266, -0.2682594060897827, -8.320462075062096e-05, -0.000219321038457565, -0.0017199022695422173, -0.09833408147096634, -0.0019832244142889977, -0.0002269487304147333, -0.0005362979718483984, -3.2186455882765586e-06, -1.9073468138230965e-06, -0.0001928620331455022, -0.04045453295111656, -0.02503887563943863, -3.0739660263061523, -0.00027414379292167723, -0.009799469262361526, -0.07804518938064575, -0.009420466609299183, -0.021794341504573822, -0.00045193947153165936, -0.006698534358292818, -3.6954195820726454e-05, -0.4061424732208252, -0.004421102814376354, -0.0129320053383708, -0.0006996329175308347, -0.9809452891349792, -0.4373528063297272, -0.24017545580863953, -0.004276298452168703, -4.935142715112306e-05, -0.0035584955476224422, -0.0009124883217737079, -2.455681169521995e-05, -1.5139465176616795e-05, -0.0005768066039308906, -0.00025602878304198384, -0.5719140768051147, -0.01113121211528778, -0.008358614519238472, -1.597391747054644e-05, -0.015551605261862278, -4.8993817472364753e-05, -0.02034030854701996, -0.0259831715375185, -1.5497195136049413e-06, -0.25366178154945374, -0.007713532540947199, -0.014874034561216831, -0.011849610134959221, -0.0003491030656732619, -1.0251946150674485e-05, -4.100715523236431e-05, -0.0023401989601552486, -0.0002885640424210578, -0.0007977878558449447, -7.378782902378589e-05, -0.000782183778937906, -0.00010954733443213627, -0.07159797847270966, -0.002154411980882287, -0.0003331344632897526, -2.1599559783935547, -0.00032872517476789653, -0.003566216677427292, -0.46495184302330017, -0.6235048174858093, -0.36867767572402954, -0.1479245126247406, -0.7302404642105103, -0.012413619086146355, -0.00016497205069754273, -0.033054862171411514, -0.0012070996453985572, -0.011456888169050217, -0.014696436002850533, -6.151010165922344e-05, -4.470248313737102e-05, -0.0006694936309941113, -0.0003411188081372529, -0.005621220916509628, -3.3378546504536644e-06, -3.671578815556131e-05, -6.568216485902667e-05, -0.00021395778458099812, -0.0005115154199302197, -0.00014256415306590497, -0.17643792927265167, -0.10189300775527954, -0.0015137653099372983, -0.004163526464253664, -0.0035194142255932093, -8.582700684200972e-05, -2.7411820888519287, -6.6756979322235566e-06, -1.1920928244535389e-07, -0.01373071689158678, -0.04732618108391762, -4.279521817807108e-05, -0.0021504866890609264, -0.000490068516228348, -0.03835167735815048, -0.019917018711566925, -0.04043220728635788, -0.08832480013370514, -0.00418715039268136, -6.937739817658439e-05, -0.00010263393050990999, -0.00802400428801775, -0.00034528967808000743, -0.2040383517742157, -0.010870523750782013, -0.0004389514506328851, -0.002975443610921502, -1.9165072441101074, -1.1997846364974976, -0.07256397604942322, -0.002485878299921751, -0.00036638224264606833, -0.0001463782973587513, -0.0029996896628290415, -0.00017867876158561558, -0.0018465149914845824, -0.0001264730526600033, -0.0027500689029693604, -0.0006227937992662191, -0.028936030343174934, -0.9538833498954773, -0.0003955773718189448, -0.00013052565918769687, -0.005356839392334223, -4.8874615458771586e-05, -0.006320842541754246, -0.0005250982358120382, -0.007629304192960262, -0.0028003547340631485, -0.06589273363351822, -0.061828892678022385, -0.0006790239713154733, -0.34517702460289, -0.011564362794160843, -1.3239612579345703], "finish_reason": "stop"}], "metrics": {"energy": 554.6488474082948, "energy_per_token": 3.4665552963018427, "time": 13.463433, "time_per_token": 0.08414645625}}
{"outputs": [{"text": "if not os.path.exists(log_dir):\n        os.makedirs(log_dir)\n    full_file_path = os.path.join(log_dir, filename)\n    try:\n        with open(full_file_path, 'a') as file:\n            for name, value in metrics.items():\n                file.write(f'{name}: {value} - {datetime.now()}\\n')\n        return True\n    except IOError as e:\n        print(f'An error occurred: {e}')\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "    ", "full", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "full", "_", "file", "_", "path", ",", " '", "a", "')", " as", " file", ":", "\n", "            ", "for", " name", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "file", ".", "write", "(", "f", "'{", "name", "}:", " {", "value", "}", " -", " {", "datetime", ".", "now", "()", "}\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " IO", "Error", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "#"], "logprobs": [-2.315866708755493, -0.10061371326446533, -0.14663507044315338, -6.6756979322235566e-06, -0.009209061041474342, -8.034383063204587e-05, -0.2923744320869446, -0.003242237726226449, -0.013458121567964554, -1.8358061424805783e-05, -2.312633478140924e-05, -0.0006236277404241264, -0.00412743678316474, -0.0029834068845957518, -0.13171544671058655, -1.585470999998506e-05, -0.09651154279708862, -1.811964830267243e-05, -2.5987286790041253e-05, -0.00019858295854646713, -0.0013244913425296545, -4.887569048150908e-06, 0.0, -0.004172904882580042, -0.011275263503193855, -0.6600016951560974, -3.5943732261657715, -0.010110828094184399, -3.1827311515808105, -0.16952329874038696, -0.05456652119755745, -0.00030751267331652343, -0.0371694341301918, -1.311301275563892e-06, -2.2053474822314456e-05, -2.145764938177308e-06, -0.0006853376980870962, -0.00039915222441777587, -0.00378606328740716, -7.748573807475623e-06, -1.311301275563892e-06, -6.460934673668817e-05, -0.0035715620033442974, -0.0018745961133390665, -0.0018203369108960032, -0.17703482508659363, -0.21786709129810333, -6.544376083184034e-05, -0.00019000156316906214, -0.0009004590683616698, -0.020191365852952003, -0.000976919662207365, -0.000387831823900342, -0.0012441283324733377, -2.9802276912960224e-06, -1.1920922133867862e-06, -8.821448318485636e-06, -7.510157047363464e-06, -0.0002847504511009902, -0.05799992382526398, -0.03928681090474129, -0.08557111024856567, -5.185469490243122e-05, -1.0635429620742798, -0.004062258172780275, -0.008020575158298016, -0.0004297763225622475, -0.6869853138923645, -2.3815414905548096, -0.0037469910457730293, -0.037836089730262756, -5.066266385256313e-05, -0.005885888356715441, -0.0010250320192426443, -0.0001070442158379592, -2.5510462364763953e-05, -0.000427274004323408, -0.0002512616047170013, -1.2507652044296265, -0.0002162222663173452, -8.356221951544285e-05, -0.010623096488416195, -0.014796985313296318, -1.0823549032211304, -2.0451202392578125, -0.13301320374011993, -0.010700821876525879, -0.010856019333004951, -0.09992485493421555, -1.8301349878311157, -0.06499890983104706, -0.01510209497064352, -4.1483970562694594e-05, -0.010432707145810127, -0.020315194502472878, -0.09568553417921066, -1.9073304429184645e-05, -0.00013541258522309363, -0.001065401709638536, -0.2593376040458679, -0.06899217516183853, -0.0006490031373687088, -0.00240430049598217, -0.001035749795846641, -9.786603914108127e-05, -1.9611872434616089, -1.5497195136049413e-06, -0.055825117975473404, -0.12662361562252045, -6.258291978156194e-05, -0.0006229128921404481, -0.0004010588163509965, -0.02364986576139927, -0.0728488564491272, -0.0346732921898365, -0.24649128317832947, -0.0027122637256979942, -0.00018523407925385982, -0.00010871296399272978, -0.0057305097579956055, -0.00027533553657121956, -0.29465970396995544, -0.017383944243192673, -0.0034240209497511387, -0.0017287085065618157, -0.14583410322666168, -0.008090699091553688, -0.0006803343421779573, -0.4788041114807129, -0.03553502634167671, -1.324042558670044], "finish_reason": "stop"}], "metrics": {"energy": 444.8460839099883, "energy_per_token": 3.395771632900674, "time": 10.932871, "time_per_token": 0.08345703053435115}}
{"outputs": [{"text": "try:\n        os.makedirs(log_dir, exist_ok=True)\n        full_path = os.path.join(log_dir, filename)\n        with open(full_path, 'a') as f:\n            for metric, value in metrics.items():\n                entry = f'{metric}: {value}'\n                timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n                f.write(f'{entry} ({timestamp})\\n')\n        return True\n    except Exception as e:\n        print(f'An error occurred: {e}')\n        return False", "tokens": ["try", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "        ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "        ", "with", " open", "(", "full", "_", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "entry", " =", " f", "'{", "metric", "}:", " {", "value", "}'", "\n", "                ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "                ", "f", ".", "write", "(", "f", "'{", "entry", "}", " ({", "timestamp", "})\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-0.9884417653083801, -0.00011503035057103261, -0.0009750141180120409, -0.00599159300327301, -1.2611855268478394, -0.0007102350937202573, -0.01493146549910307, -1.490105023549404e-05, -7.4741430580616e-05, -0.000705470098182559, -0.018444687128067017, -1.1205610462639015e-05, -8.4638240878121e-06, -0.03565501421689987, -0.00045217780279926956, -1.311301275563892e-06, -1.9073468138230965e-06, -0.0008026715368032455, -0.00028606137493625283, -2.1815061700181104e-05, -0.10170523077249527, -0.025187911465764046, -3.088731288909912, -0.007199415937066078, -0.3039688766002655, -0.002415598137304187, -0.019620155915617943, -1.4305104514278355e-06, -2.6464111215318553e-05, -5.722029527532868e-06, -0.0009441685397177935, -0.0003779412363655865, -0.0035421031061559916, -7.033323527139146e-06, -1.311301275563892e-06, -4.23184028477408e-05, -0.004009423777461052, -0.002015227684751153, -0.0012809175532311201, -0.2645559310913086, -0.1576424539089203, -0.0010052633006125689, -0.0002731903805397451, -0.0009385710000060499, -3.3378546504536644e-06, 0.0, -0.00021145492792129517, -0.058651939034461975, -0.04798291623592377, -0.08446336537599564, -4.60137271147687e-05, -0.3935870826244354, -0.005132119636982679, -0.0032364153303205967, -0.0005857420619577169, -1.1352770328521729, -0.4664401710033417, -0.30602192878723145, -0.004498718306422234, -6.12716976320371e-05, -0.00451580761000514, -0.001142325927503407, -3.349725011503324e-05, -1.7762025890988298e-05, -0.00025185750564560294, -0.000289159914245829, -2.536395311355591, -0.001209004782140255, -0.018428537994623184, -0.8997306227684021, -0.3141259551048279, -0.12443698942661285, -0.00500900624319911, -0.008074735291302204, -2.7275586128234863, -0.008343245834112167, -0.0004009396652691066, -0.2725313603878021, -0.07043186575174332, -0.02252831496298313, -1.811964830267243e-05, -0.016517560929059982, -3.480850500636734e-05, -0.010503724217414856, -0.016914043575525284, -1.0728830375228426e-06, -0.15817280113697052, -0.024909701198339462, -0.03038664720952511, -0.015820110216736794, -0.000399033073335886, -1.3589766240329482e-05, -0.00016652150952722877, -0.0020402108784765005, -0.0002302858338225633, -0.0013716346584260464, -8.821098163025454e-05, -0.0007717015105299652, -8.427741704508662e-05, -0.03775160387158394, -0.0012316268403083086, -0.0006700892699882388, -0.1648084819316864, -6.794906312279636e-06, -7.652943895664066e-05, -0.0011213688412681222, -0.003665278432890773, -0.2475915253162384, -1.7241456508636475, -0.05406995862722397, -1.0341558456420898, -7.30726242181845e-05, -0.005942534189671278, -8.4638240878121e-06, -0.00013076403411105275, -0.00025900822947733104, -0.1637450009584427, -0.1177327036857605, -0.0013629442546516657, -0.002923145890235901, -0.009343704208731651, -0.0002675890573300421, -0.13636772334575653, -0.000668659748043865, -0.026498984545469284, -2.9205850296420977e-05, -0.0012759171659126878, -0.00045074793160893023, -0.04509485140442848, -0.0359608419239521, -0.014649446122348309, -0.1253599226474762, -0.004433208145201206, -8.868777513271198e-05, -0.00014494798961095512, -0.003469164716079831, -0.0002812943421304226, -0.4124806225299835, -0.008064092136919498, -0.0013500871136784554, -0.0013394916895776987, -0.034828152507543564, -0.006123116239905357, -0.0007862337515689433, -0.5545517802238464, -0.02841811254620552, -1.8224831819534302], "finish_reason": "stop"}], "metrics": {"energy": 527.7906537017826, "energy_per_token": 3.5904126102162084, "time": 12.194219, "time_per_token": 0.08295387074829932}}
{"outputs": [{"text": "timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # Ensure the log directory exists\n    if not os.path.exists(log_dir):\n        os.makedirs(log_dir)\n\n    # Construct the file path\n    file_path = os.path.join(log_dir, filename)\n\n    # Attempt to write the metrics to the file\n    try:\n        with open(file_path, 'a') as file:\n            file.write(f'[{timestamp}] ')\n            for name, value in metrics.items():\n                file.write(f'{name}: {value}, ')\n            file.write('\\n')\n    except Exception as e:\n        print(f\"An error occurred: {str(e)}\")\n        return False\n\n    return True", "tokens": ["timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "#", " Ensure", " the", " log", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "\n", "    ", "#", " Construct", " the", " file", " path", "\n", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Att", "empt", " to", " write", " the", " metrics", " to", " the", " file", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "a", "')", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "f", "'", "[{", "timestamp", "}]", " '", ")", "\n", "            ", "for", " name", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "file", ".", "write", "(", "f", "'{", "name", "}:", " {", "value", "}", ",", " '", ")", "\n", "            ", "file", ".", "write", "('", "\\", "n", "')", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False", "\n", "\n", "    ", "return", " True", "\n", "\n", "#"], "logprobs": [-3.1967546939849854, -0.013331676833331585, -0.01962202601134777, -7.30726242181845e-05, -0.019359799101948738, -6.69933797325939e-05, -0.04044949635863304, -0.023213649168610573, -1.3351351299206726e-05, -0.978678286075592, -0.01169762946665287, -0.00850542914122343, -0.0356561616063118, -0.037476636469364166, -0.000740968796890229, -1.6569954823353328e-05, -3.290122185717337e-05, -0.02204718254506588, -0.0007457336178049445, -0.0019823915790766478, -0.0001037067049765028, -0.004856457468122244, -7.009260298218578e-05, -0.046692561358213425, -9.059495641849935e-05, -0.013525277376174927, -1.5711370706558228, -0.000871040450874716, -1.2928814888000488, -2.055924654006958, -1.453352451324463, -0.15203124284744263, -0.11221356689929962, -0.0036557766143232584, -0.09687214344739914, -0.00040356122190132737, -0.36149337887763977, -0.00978849083185196, -0.0008002892718650401, -4.768360213347478e-06, -0.0021177739836275578, -1.3828182090946939e-05, -0.052067313343286514, -0.0007115454645827413, -0.010076604783535004, -7.152531907195225e-06, -2.861018856492592e-06, -0.0004894727608188987, -0.00025960413040593266, -0.001086359960027039, -0.042516421526670456, -8.22540732769994e-06, -0.061907555907964706, -2.9802276912960224e-06, -6.6756979322235566e-06, -0.00011228884250158444, -0.0006723527330905199, -4.0531076592742465e-06, -2.622600959512056e-06, -0.0009049849468283355, -0.0013628251617774367, -0.011955629102885723, -0.0003331344632897526, -1.0012308359146118, -0.5033639669418335, -0.04802575334906578, -1.822094440460205, -0.09941718727350235, -0.28646257519721985, -9.07141511561349e-05, -0.028023848310112953, -0.21377910673618317, -0.0002097863471135497, -8.940297266235575e-05, -0.04164593294262886, -1.311301275563892e-06, -1.3708974620385561e-05, -4.887569048150908e-06, -0.0007267932523973286, -0.00038699767901562154, -0.001739775761961937, -6.556489552167477e-06, -2.0265558760002023e-06, -5.23315102327615e-05, -0.004235939122736454, -0.0015612567076459527, -0.0008596062543801963, -0.017858309671282768, -0.00017653337272349745, -0.8060213923454285, -1.3651347160339355, -0.0008357845945283771, -0.0027531597297638655, -0.09098134934902191, -0.28015682101249695, -0.037024930119514465, -0.027690421789884567, -0.010895994491875172, -0.05381062626838684, -0.044202085584402084, -0.000393432448618114, -0.003832021960988641, -3.135155202471651e-05, -4.2437604861333966e-05, -0.0011044599814340472, -0.020079556852579117, -0.0002798642381094396, -0.00026258357684127986, -0.0005417786305770278, -2.825220326485578e-05, -3.576278118089249e-07, -9.274052717955783e-05, -0.06973190605640411, -0.023931918665766716, -0.0746496170759201, -2.2172682292875834e-05, -0.8170410990715027, -0.001622551935724914, -0.002448420040309429, -0.000613143783994019, -1.633246660232544, -0.0002686616498976946, -0.0007425173535011709, -0.04403897374868393, -0.04716448485851288, -2.5727906227111816, -0.3510081171989441, -0.00036161558819003403, -0.011035245843231678, -1.1387263536453247, -0.15747778117656708, -0.020309235900640488, -0.03804611787199974, -0.26915740966796875, -2.615220069885254, -0.0012750837486237288, -0.004762140568345785, -2.6225699912174605e-05, -0.0038461536169052124, -0.0008878341759555042, -2.586808113846928e-05, -1.8596476365928538e-05, -0.00010358751023886725, -0.00015984688070602715, -0.010078846476972103, -7.986990567587782e-06, -1.537788011773955e-05, -0.0006299418746493757, -0.0005639393348246813, -0.026493875309824944, -0.0002991705550812185, -0.5961323380470276, -0.006436214316636324, -0.007572517264634371, -0.11921654641628265, -1.2083590030670166, -0.0013322297018021345, -0.0007638397510163486, -0.0002811751910485327, -0.008802066557109356, -0.0048146978951990604, -1.7881377516459906e-06, -3.2066785934148356e-05, -0.00586420064792037, -2.90866428258596e-05, -0.00011276562872808427, -0.0003864018653985113, -0.0008268513483926654, -1.8686795234680176, -0.00458012567833066, -0.46632322669029236, -0.0031370734795928, -0.052311938256025314, -6.317892984952778e-05, -0.003723238129168749, -0.0006243425305001438, -0.25672027468681335, -0.05040166527032852, -0.01449225191026926, -1.6223195791244507, -0.0044084032997488976, -8.165503095369786e-05, -6.735097849741578e-05, -0.008031218312680721, -0.00040951924165710807, -0.9686353802680969, -2.2411095415009186e-05, -1.1205610462639015e-05, -0.0006380429258570075, -0.002869062591344118, -0.0008898589294403791, -0.006061978172510862, -0.00784459337592125, -0.00907569844275713, -0.001484721782617271, -0.003956824075430632, -0.24742968380451202, -0.0038879532366991043, -0.2524663209915161, -0.0007109498255886137, -0.3849438428878784, -0.009084912948310375, -1.369768738746643], "finish_reason": "stop"}], "metrics": {"energy": 679.9030312347406, "energy_per_token": 3.349276015934683, "time": 17.026861, "time_per_token": 0.08387616256157636}}
{"outputs": [{"text": "# Create the log directory if it does not exist\n    if not os.path.exists(log_dir):\n        os.makedirs(log_dir)\n\n    # Append timestamp to each metric entry\n    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    metrics_with_timestamp = {f'{metric} ({timestamp})': value for metric, value in metrics.items()}\n\n    # Write metrics to the file\n    try:\n        with open(os.path.join(log_dir, filename), 'a') as file:\n            for metric, value in metrics_with_timestamp.items():\n                file.write(f'{metric}: {value}\\n')\n        return True\n    except IOError:\n        print(f'An error occurred: {e}')\n    return False\n\nmetrics = {'accuracy': 0.98, 'loss': 0.05}\ntask_func(metrics, 'metrics.log')\n\n\"\"\"\n    The function takes in a dictionary of metrics, a filename, and an optional directory path where the log file", "tokens": ["#", " Create", " the", " log", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "\n", "    ", "#", " App", "end", " timestamp", " to", " each", " metric", " entry", "\n", "    ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "metrics", "_", "with", "_", "timestamp", " =", " {", "f", "'{", "metric", "}", " ({", "timestamp", "})", "':", " value", " for", " metric", ",", " value", " in", " metrics", ".", "items", "()}", "\n", "\n", "    ", "#", " Write", " metrics", " to", " the", " file", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "')", " as", " file", ":", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", "_", "with", "_", "timestamp", ".", "items", "():", "\n", "                ", "file", ".", "write", "(", "f", "'{", "metric", "}:", " {", "value", "}\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " IO", "Error", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "    ", "return", " False", "\n", "\n", "metrics", " =", " {'", "accuracy", "':", " ", "0", ".", "9", "8", ",", " '", "loss", "':", " ", "0", ".", "0", "5", "}", "\n", "task", "_", "func", "(", "metrics", ",", " '", "metrics", ".", "log", "')", "\n", "\n", "\"", "\"", "\"", "\n", "    ", "The", " function", " takes", " in", " a", " dictionary", " of", " metrics", ",", " a", " filename", ",", " and", " an", " optional", " directory", " path", " where", " the", " log", " file"], "logprobs": [-1.312898874282837, -1.4073216915130615, -0.31349849700927734, -0.29195529222488403, -0.12504668533802032, -0.005602135788649321, -0.001957050058990717, -1.6361451148986816, -2.7656173188006505e-05, -0.00625035772100091, -0.013883094303309917, -0.0014527016319334507, -0.22407867014408112, -0.005268261767923832, -0.0007339406292885542, -6.556489552167477e-06, -0.001923617091961205, -2.3841574147809297e-05, -0.03629336133599281, -0.0007975496700964868, -0.0114445136860013, -7.390948667307384e-06, -6.031808152329177e-05, -0.00034648136352188885, -0.0003277718205936253, -0.0017376337200403214, -0.03850677236914635, -1.156323378381785e-05, -0.08235068619251251, -2.145764938177308e-06, -7.152531907195225e-06, -0.0001938155182870105, -0.0009676303598098457, -3.3378546504536644e-06, -1.1920928244535389e-07, -0.0025553214363753796, -0.0006158839096315205, -0.08503835648298264, -0.0006252956227399409, -0.17226797342300415, -3.5289034843444824, -0.0017268045339733362, -1.167964220046997, -0.3456967771053314, -0.39223942160606384, -0.6348825097084045, -1.1522916555404663, -0.09634115546941757, -0.00015484087634831667, -0.5842708349227905, -0.26263976097106934, -0.014632177539169788, -1.7881233361549675e-05, -0.016321489587426186, -3.158996332786046e-05, -0.026373596861958504, -0.020305849611759186, -2.7418097943154862e-06, -0.4504372477531433, -0.010674403049051762, -0.022640783339738846, -0.020531272515654564, -0.0004060635983478278, -1.0490362910786644e-05, -8.21318244561553e-05, -0.021029595285654068, -0.0003277718205936253, -0.002419522497802973, -7.462222856702283e-05, -0.0012326984433457255, -0.00012182447244413197, -0.036164481192827225, -0.004747191444039345, -0.01487509161233902, -2.2179958820343018, -0.5636196136474609, -0.099701426923275, -4.768370445162873e-07, -0.03738098591566086, -0.00013493580627255142, -0.18529066443443298, -0.14825831353664398, -0.2856195867061615, -0.901981770992279, -0.9173290133476257, -0.3175108730792999, -0.000902007392141968, -0.0021014767698943615, -0.003756848396733403, -0.04505109041929245, -0.0027954806573688984, -0.0001234931987710297, -8.201262971851975e-05, -0.048430267721414566, -0.0003045333724003285, -0.0008305437513627112, -0.0001677133986959234, -1.6093124941107817e-05, -0.0005351065192371607, -0.0001711698860162869, -0.0028448132798075676, -0.00018416139937471598, -0.32935023307800293, -0.5998297333717346, -0.6247830390930176, -0.030729927122592926, -1.1289950609207153, -0.9786744713783264, -0.1324557512998581, -0.00023135847004596144, -0.1662459522485733, -2.002696055569686e-05, -1.1086402082582936e-05, -0.0004866131057497114, -0.08828157931566238, -0.002791438950225711, -0.0003103728231508285, -0.17179173231124878, -2.861018856492592e-06, -4.291525328881107e-06, -3.6954811548639555e-06, -6.603976362384856e-05, -0.00026794656878337264, -0.0020385454408824444, -3.3378546504536644e-06, -5.960446742392378e-06, -2.0861407392658293e-05, -0.0011997176334261894, -0.00022825974156148732, -3.373566141817719e-05, -0.006851631216704845, -0.08225473016500473, -0.03499335050582886, -1.7165990357170813e-05, -0.6421142816543579, -0.0007871866691857576, -0.0008373330347239971, -0.0004343043256085366, -0.4430173635482788, -0.055690500885248184, -0.015227729454636574, -0.00014602071314584464, -1.4543427823809907e-05, -0.0015100754098966718, -0.0012716311030089855, -2.145764938177308e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0003829461056739092, -1.811964830267243e-05, -4.172316494077677e-06, -6.007967749610543e-05, -8.153582894010469e-05, -0.014367112889885902, -1.0609570381348021e-05, -3.659658250398934e-05, -0.0012759171659126878, -0.0014640099834650755, -0.2891146242618561, -0.00112160702701658, -0.193672314286232, -0.0016957441112026572, -0.013174392282962799, -0.0019258777610957623, -3.790783375734463e-05, -0.00011395759065635502, -0.00010024998482549563, -0.19666187465190887, -0.06323148310184479, -0.0004503904783632606, -0.002900324296206236, -0.015266004018485546, -0.00029309268575161695, -2.2668895721435547, -9.536738616588991e-07, -2.6962010860443115, -0.0016800350276753306, -0.00021240839851088822, -0.1097237840294838, -0.030220109969377518, -0.008675976656377316, -0.13362646102905273, -0.0035804708022624254, -0.0002644904307089746, -6.568216485902667e-05, -0.014713233336806297, -0.038004230707883835, -0.923190176486969, -0.03552398085594177, -0.0010971962474286556, -0.0034159424249082804, -2.445441961288452, -0.20351164042949677, -0.0011954312212765217, -0.3620761036872864, -0.013823251239955425, -3.7555296421051025, -0.02545628324151039, -0.038798656314611435, -0.06866645812988281, -0.0005204515182413161, -0.0019610952585935593, -0.0016517103649675846, -2.8132995794294402e-05, -0.006334702018648386, -0.026942240074276924, -0.0023280680179595947, -0.0006756883230991662, -0.002093982184305787, -3.909988299710676e-05, -0.0001720042055239901, -0.00030763185350224376, -8.821448318485636e-06, -0.0009304723353125155, -0.0011195826809853315, -0.007905149832367897, -0.0011020784731954336, -0.7279190421104431, -0.0009062950266525149, -0.0041712429374456406, -0.000931663322262466, -0.00024577934527769685, -0.0004772001120727509, -0.008993946947157383, -0.02870728075504303, -0.004595314618200064, -0.0077403848990798, -0.007501528598368168, -0.84571373462677, -0.13188013434410095, -2.6094696521759033, -0.010690797120332718, -0.00019274283840786666, -0.06612060964107513, -0.40813714265823364, -0.16200844943523407, -1.5338962078094482, -1.8545544147491455, -0.5302906632423401, -0.6832521557807922, -0.1431208848953247, -0.029967011883854866, -0.011056113988161087, -0.45413821935653687, -0.11710930615663528, -0.09108702838420868, -0.8006324768066406, -0.002240411238744855, -0.0935199186205864, -0.0016013667918741703, -2.4683661460876465, -0.7554077506065369, -1.4318532943725586, -0.02587433159351349, -0.1010449230670929, -0.17231965065002441], "finish_reason": "length"}], "metrics": {"energy": 871.5452632837295, "energy_per_token": 3.4044736847020682, "time": 21.653538, "time_per_token": 0.0845841328125}}
{"outputs": [{"text": "timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    try:\n        if not os.path.exists(log_dir):\n            os.makedirs(log_dir)\n        with open(os.path.join(log_dir, filename), 'a') as file:\n            for metric, value in metrics.items():\n                file.write(f\"[{timestamp}] {metric}: {value}\\n\")\n    except Exception as e:\n        print(f\"An error occurred: {str(e)}\")\n        return False\n    return True", "tokens": ["timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "')", " as", " file", ":", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "file", ".", "write", "(", "f", "\"", "[{", "timestamp", "}]", " {", "metric", "}:", " {", "value", "}\\", "n", "\"", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "\n", "\n", "def"], "logprobs": [-3.1967546939849854, -0.013331676833331585, -0.01962202601134777, -7.30726242181845e-05, -0.019359799101948738, -6.69933797325939e-05, -0.04044949635863304, -0.023213649168610573, -1.3351351299206726e-05, -0.47202926874160767, -0.012138661928474903, -0.03373590484261513, -0.021007299423217773, -0.0005149707430973649, -1.3470558769768104e-05, -2.7179348762729205e-05, -0.015540923923254013, -0.00048530244384892285, -0.0017933252966031432, -0.00010644822759786621, -0.0013066334649920464, -0.0001399419124936685, -0.03095416910946369, -0.011211138218641281, -0.1966412216424942, -2.0152664184570312, -0.00011705666838679463, -0.0005048430757597089, -0.0026203603483736515, -1.3440852165222168, -0.03756321221590042, -0.005862896796315908, -2.729855441430118e-05, -0.0008837846689857543, -5.8412379075889476e-06, -0.13489235937595367, -0.001735967700369656, -0.009908538311719894, -1.07287787614041e-05, -2.5152843591058627e-05, -0.0005453529884107411, -0.0035324811469763517, -0.0021730875596404076, -0.005107924807816744, -7.748573807475623e-06, -0.060646165162324905, -3.814689989667386e-06, -5.6980417866725475e-05, -0.0004292996891308576, -0.0009835887467488647, -9.417489309271332e-06, -2.3841855067985307e-07, -0.0023463834077119827, -0.010325111448764801, -0.16042253375053406, -0.5030331611633301, -0.0033753111492842436, -0.0009918061550706625, -0.18697096407413483, -7.152531907195225e-06, -7.390948667307384e-06, -3.576272320060525e-06, -4.8993817472364753e-05, -0.00031275625224225223, -0.002330089919269085, -5.8412379075889476e-06, -5.602820692729438e-06, -3.2066785934148356e-05, -0.0060030873864889145, -0.0007727735792286694, -0.00013243274588603526, -0.016907362267374992, -0.013729188591241837, -0.040132783353328705, -3.611976353568025e-05, -1.2396624088287354, -0.0018322361866012216, -0.0019443194614723325, -0.0005876483046449721, -0.3935122787952423, -0.562526524066925, -0.18753165006637573, -0.0024205928202718496, -3.373566141817719e-05, -0.007955649867653847, -0.000914393924176693, -1.764281842042692e-05, -2.5629668016335927e-05, -0.00017808281700126827, -0.0002015625941567123, -0.09451985359191895, -9.810443589231e-05, -3.671578815556131e-05, -0.003590923734009266, -0.004082441329956055, -1.0173389911651611, -0.7597931623458862, -0.0006073060794733465, -0.007104610092937946, -0.034973666071891785, -0.00011383838864276186, -0.10014597326517105, -0.002151557244360447, -0.006283053662627935, -0.003921201918274164, -4.2676016164477915e-05, -3.8980677345534787e-05, -9.393251093570143e-05, -0.00017093151109293103, -2.0051891803741455, -0.000402250443585217, -0.23967935144901276, -0.0005967028555460274, -0.05970979854464531, -5.364274329622276e-05, -0.0011335145682096481, -0.000927137560211122, -0.01870773918926716, -0.06859221309423447, -0.05569624900817871, -0.10646191239356995, -0.0025440254248678684, -7.83174327807501e-05, -8.761498611420393e-05, -0.006513792555779219, -0.0003054867556784302, -1.4096488952636719, -1.811964830267243e-05, -1.168244216387393e-05, -0.0012296028435230255, -0.0008177988929674029, -0.0006416169344447553, -0.0011241076281294227, -0.00812593661248684, -0.007834894582629204, -0.0014423454413190484, -0.0014661526074633002, -0.06210777536034584, -0.39078831672668457, -0.00134151556994766, -0.33695515990257263, -0.015577191486954689, -1.5582778453826904], "finish_reason": "stop"}], "metrics": {"energy": 478.39543164444007, "energy_per_token": 3.3454225989121684, "time": 11.994739, "time_per_token": 0.0838792937062937}}
{"outputs": [{"text": "timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    log_file = os.path.join(log_dir, filename)\n\n    try:\n        with open(log_file, 'a') as f:\n            for metric, value in metrics.items():\n                f.write(f'{timestamp}: {metric}={value}\\n')\n        return True\n    except Exception as e:\n        print(f'An error occurred: {e}')\n        return False", "tokens": ["timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "log", "_", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "file", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "f", "'{", "timestamp", "}:", " {", "metric", "}=", "{", "value", "}\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-3.1967546939849854, -0.013331676833331585, -0.01962202601134777, -7.30726242181845e-05, -0.019359799101948738, -6.69933797325939e-05, -0.04044949635863304, -0.023213649168610573, -1.3351351299206726e-05, -0.47202926874160767, -0.012138661928474903, -0.03373590484261513, -0.021007299423217773, -0.0005149707430973649, -1.3470558769768104e-05, -2.7179348762729205e-05, -0.015540923923254013, -0.00048530244384892285, -0.0017933252966031432, -0.00010644822759786621, -0.0013066334649920464, -0.0001399419124936685, -0.03095416910946369, -0.011211138218641281, -0.1966412216424942, -1.3383961915969849, -0.02003328688442707, -0.739653468132019, -0.2667754888534546, -0.1276550143957138, -3.099436753473128e-06, -6.294052582234144e-05, -1.1444026313256472e-05, -0.0008794969180598855, -0.0004822045157197863, -0.007896633818745613, -1.2755313036905136e-05, -2.288792165927589e-05, -0.00011598391574807465, -0.006583074573427439, -0.0009531007381156087, -0.005825327709317207, -0.785912275314331, -0.000440262199845165, -0.10390499979257584, -4.136476854910143e-05, -0.0006096888100728393, -0.001918738940730691, -0.08854914456605911, -0.001086359960027039, -0.0002575780963525176, -0.0006379238329827785, -4.0531076592742465e-06, -9.65590606938349e-06, -0.00015627116954419762, -0.024434134364128113, -0.019341208040714264, -0.07008928060531616, -2.6940935640595853e-05, -0.21628519892692566, -0.0023044003173708916, -0.011730148456990719, -0.0004693360242526978, -0.3976108729839325, -0.3730236887931824, -0.2524339258670807, -0.0027599360328167677, -4.935142715112306e-05, -0.005961612798273563, -0.0010371787939220667, -2.992108420585282e-05, -1.680836794548668e-05, -0.00028200942324474454, -0.00017355366435367614, -0.14776812493801117, -7.271740287251305e-06, -2.52720492426306e-05, -0.0037379649002104998, -0.002202229807153344, -0.5088251829147339, -0.05457114800810814, -1.5400068759918213, -0.012009458616375923, -0.00011681827891152352, -1.046443223953247, -0.000990377040579915, -0.0019622850231826305, -0.0024437822867184877, -4.684815212385729e-05, -4.2914423829643056e-05, -0.0004391897819004953, -0.2951485216617584, -0.0904475525021553, -0.000890097115188837, -0.002914468990638852, -0.032244548201560974, -9.572047565598041e-05, -0.392652302980423, -0.0005978942499496043, -0.027868742123246193, -2.8132995794294402e-05, -0.0018857807153835893, -0.00042691652197390795, -0.035572875291109085, -0.05367686599493027, -0.007929631508886814, -0.1279657483100891, -0.0026481819804757833, -9.83428253675811e-05, -9.357491217087954e-05, -0.002372785471379757, -0.0002479245886206627, -0.24733184278011322, -0.009378897957503796, -0.0008522216230630875, -0.002066264161840081, -0.03999432176351547, -0.00619692774489522, -0.0008188708452507854, -1.3131539821624756, -1.3232143828645349e-05, -2.0265558760002023e-06, -3.933898824470816e-06, -1.6569954823353328e-05, -1.5451340675354004, -0.0022333934903144836], "finish_reason": "stop"}], "metrics": {"energy": 434.86960155868525, "energy_per_token": 3.4513460441165495, "time": 10.51125, "time_per_token": 0.08342261904761905}}
