{"outputs": [{"text": "try:\n        with open(f'{log_dir}/{filename}', 'a') as file:\n            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f')\n            for key, value in metrics.items():\n                file.write(f'{key}={value}, {timestamp}\\n')\n            return True\n    except (OSError, ValueError) as e:\n        return False", "tokens": ["try", ":", "\n", "        ", "with", " open", "(", "f", "'{", "log", "_", "dir", "}/{", "filename", "}'", ",", " '", "a", "')", " as", " file", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", ".", "%", "f", "')", "\n", "            ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "file", ".", "write", "(", "f", "'{", "key", "}=", "{", "value", "}", ",", " {", "timestamp", "}\\", "n", "')", "\n", "            ", "return", " True", "\n", "    ", "except", " (", "OS", "Error", ",", " Value", "Error", ")", " as", " e", ":", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-1.0232642889022827, -0.0004702892620116472, -0.004674222320318222, -0.008629885502159595, -1.3579739332199097, -0.018535733222961426, -0.005607944447547197, -2.980119228363037, -0.6309228539466858, -0.06644179672002792, -3.5523738915799186e-05, -3.731181277544238e-05, -0.03758537024259567, -0.008075208403170109, -0.07929419726133347, -0.000607782625593245, -0.05650649219751358, -0.22721146047115326, -0.3073749542236328, -0.0005264088395051658, -1.2334678173065186, -0.006342875771224499, -0.005945852026343346, -0.006563534028828144, -2.2527074813842773, -0.010338915511965752, -0.030312633141875267, -4.9828242481453344e-05, -0.03320824354887009, -0.00025185750564560294, -0.014750940725207329, -0.028035903349518776, -5.745722592109814e-05, -0.16181926429271698, -0.03907623887062073, -0.079084612429142, -0.034601785242557526, -0.0006500753224827349, -7.247662142617628e-05, -6.05564855504781e-05, -0.1094236746430397, -0.00212027202360332, -0.0015598285244777799, -3.111314072157256e-05, -0.008896947838366032, -0.0004776767164003104, -2.232158660888672, -0.0009551253751851618, -0.0006752118351869285, -0.018960660323500633, -0.5217511653900146, -0.06325061619281769, -0.6574292182922363, -0.5572181940078735, -0.03734653443098068, -0.0870380699634552, -9.083335316972807e-05, -0.0032078970689326525, -0.0025552024599164724, -0.0003830652858596295, -0.00010156115604331717, -0.0034610864240676165, -0.0008611546363681555, -0.09964855760335922, -0.00034898388548754156, -0.001970613142475486, -0.020439941436052322, -0.008490181528031826, -0.12638914585113525, -0.3767217993736267, -2.2913992404937744, -0.014374633319675922, -0.015789015218615532, -0.24663399159908295, -0.6765924692153931, -0.5374961495399475, -0.003000640543177724, -0.058686111122369766, -0.0026594768278300762, -0.0013603252591565251, -0.003371271537616849, -1.2524034976959229, -0.22543878853321075, -0.007999288849532604, -0.004437006078660488, -0.062291041016578674, -0.0037165870890021324, -2.851719379425049, -1.199148416519165, -0.0016150538576766849, -0.11309939622879028, -2.6240220069885254, -5.5549986427649856e-05, -0.5532816052436829, -0.0005442806868813932, -0.46561524271965027, -0.0002169373765354976, -0.006193729117512703, -0.0009311868925578892, -2.486464500427246, -0.06934625655412674, -0.42085638642311096, -0.048288632184267044, -0.7772647142410278], "finish_reason": "stop"}], "metrics": {"energy": 170.4161987190247, "energy_per_token": 1.6386172953752374, "time": 5.4663434, "time_per_token": 0.05256099423076924}}
{"outputs": [{"text": "if not os.path.isdir(log_dir):\n        os.mkdir(log_dir)\n    with open(os.path.join(log_dir, filename), 'a') as f:\n        timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n        for key, val in metrics.items():\n            f.write(f\"{timestamp} - {key} : {val} \\n\")\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "log", "_", "dir", ")", "\n", "    ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "')", " as", " f", ":", "\n", "        ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "        ", "for", " key", ",", " val", " in", " metrics", ".", "items", "():", "\n", "            ", "f", ".", "write", "(", "f", "\"", "{", "timestamp", "}", " -", " {", "key", "}", " :", " {", "val", "}", " \\", "n", "\"", ")", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-1.8861359357833862, -0.21806706488132477, -0.20104213058948517, -0.00014959646796341985, -0.0071010589599609375, -0.008580010384321213, -1.4500460624694824, -0.013779513537883759, -0.000974656839389354, -0.019939806312322617, -4.8874615458771586e-05, -2.6702524337451905e-05, -0.010476591996848583, -0.041949592530727386, -0.001838185708038509, -1.127099633216858, -0.00034671969478949904, -0.9991817474365234, -0.00015293381875380874, -0.0029086447320878506, -0.014857592061161995, -4.970903682988137e-05, -3.480850500636734e-05, -0.013362730853259563, -0.015723420307040215, -0.7288215756416321, -2.3796701431274414, -0.008524458855390549, -0.00888513308018446, -0.21190866827964783, -0.004327456932514906, -0.0005306981038302183, -0.005294705741107464, -0.0007949291029945016, -0.0004928089329041541, -0.004432614892721176, -6.794906312279636e-06, -1.07287787614041e-05, -0.0006023023161105812, -0.02622891776263714, -0.004127199295908213, -0.0012265071272850037, -0.0857904925942421, -0.24355651438236237, -0.2634981870651245, -0.000613143783994019, -0.6028163433074951, -0.04598294571042061, -0.006410037633031607, -0.0028383941389620304, -3.031890392303467, -0.014799804426729679, -0.042245618999004364, -6.353653589030728e-05, -0.03926904499530792, -0.00023100091493688524, -0.012303998693823814, -0.03372172638773918, -5.638440416078083e-05, -1.4198534488677979, -0.01699526607990265, -0.027501747012138367, -0.10886242985725403, -0.03546518832445145, -0.0003466005437076092, -7.10462118149735e-05, -5.745722592109814e-05, -0.17838072776794434, -0.0016042232746258378, -0.002688367385417223, -2.5510462364763953e-05, -0.00468869786709547, -0.000604565953835845, -0.11355367302894592, -0.0010633773636072874, -0.04313978552818298, -0.00874203722923994, -0.5816636085510254, -0.6322775483131409, -0.06635423004627228, -1.907875657081604, -0.0007135705673135817, -0.005324942991137505, -0.001913860673084855, -0.0010705222375690937, -0.00016306500765495002, -0.002398592187091708, -0.00135318236425519, -0.12793542444705963, -0.00013124081306159496, -0.0015095992712303996, -0.05516572669148445, -0.14529798924922943, -0.2705998718738556, -0.014104328118264675, -0.5740253925323486, -0.2293425351381302, -0.9539728760719299, -0.03307250887155533, -0.005876051727682352, -1.8315855264663696, -0.9466661214828491, -0.010145993903279305, -0.03437144681811333, -2.41414213180542, -0.1085420697927475, -0.007678044028580189, -0.005583405494689941, -0.040324244648218155, -0.03623472899198532, -0.9415802955627441, -0.07192307710647583, -0.2228744775056839, -0.22338765859603882, -0.03759444132447243, -1.0507540702819824], "finish_reason": "stop"}], "metrics": {"energy": 131.59815342140195, "energy_per_token": 1.134466839839672, "time": 5.0620737, "time_per_token": 0.043638566379310344}}
{"outputs": [{"text": "log_file = os.path.join(log_dir, filename)\n    try:\n        with open(log_file, 'a') as f:\n            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S') + ' - '\n            for metric, value in metrics.items():\n                f.write(timestamp + metric + ' = ' + str(value) + '\\n')\n        return True\n    except FileNotFoundError:\n        print('An error occurred: ' + str(log_file))\n        return False", "tokens": ["log", "_", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "file", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", " +", " '", " -", " '", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "timestamp", " +", " metric", " +", " '", " =", " '", " +", " str", "(", "value", ")", " +", " '\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "print", "('", "An", " error", " occurred", ":", " '", " +", " str", "(", "log", "_", "file", "))", "\n", "        ", "return", " False", "\n", "\n", "#"], "logprobs": [-3.003270149230957, -0.2059544026851654, -0.47716212272644043, -0.1333770453929901, -0.12150760740041733, -1.585470999998506e-05, -0.0005491655902005732, -0.003594605950638652, -0.0014100857079029083, -0.0004558716027531773, -0.01342389453202486, -1.764281842042692e-05, -2.5987286790041253e-05, -0.0006087357178330421, -0.0214653629809618, -0.003641998628154397, -0.006390493828803301, -0.36963316798210144, -0.4907030463218689, -0.00022003613412380219, -0.002564120339229703, -0.004082322586327791, -0.30420976877212524, -0.002882137894630432, -0.000459565402707085, -0.004985164385288954, -0.0001045410826918669, -3.6954195820726454e-05, -0.0020673349499702454, -0.05430077016353607, -0.15410058200359344, -0.25956466794013977, -0.00020990552729927003, -0.3917565941810608, -0.035785336047410965, -0.006066125351935625, -0.002616674406453967, -2.2856550216674805, -0.008949524722993374, -0.029039673507213593, -7.855583680793643e-05, -0.023814823478460312, -0.00019536493346095085, -0.010347056202590466, -0.03714095056056976, -3.707340147229843e-05, -0.2856939435005188, -0.052336711436510086, -0.049448393285274506, -0.022938966751098633, -0.00020656836568377912, -3.6477376852417365e-05, -3.8980677345534787e-05, -0.07295558601617813, -0.0018942285096272826, -0.0008267321973107755, -1.9311717551317997e-05, -0.006986711174249649, -0.00021324267436284572, -0.15125764906406403, -3.0050315856933594, -0.6963278651237488, -1.7982338666915894, -0.054610881954431534, -0.03478590026497841, -0.0202802661806345, -0.9978010058403015, -1.530745506286621, -0.47473621368408203, -0.028798207640647888, -0.00011991735664196312, -0.0034344755113124847, -0.0018656720640137792, -0.00043335105874575675, -0.0001255195093108341, -0.0031457485165446997, -0.0008945039589889348, -0.2061673402786255, -0.00012599628826137632, -0.0009402383584529161, -0.02360888384282589, -0.28529495000839233, -0.02656492218375206, -0.2629590928554535, -0.006740570068359375, -2.1553006172180176, -1.2007994651794434, -0.009107830002903938, -0.0016249321633949876, -0.01985262893140316, -5.435795901576057e-05, -0.0015470929211005569, -0.026959413662552834, -0.0012338890228420496, -0.06817562133073807, -0.0011747133685275912, -0.000582525331992656, -0.0019351581577211618, -0.8986687660217285, -0.1001911610364914, -0.006875783670693636, -0.006408142391592264, -0.04276144877076149, -0.003274794900789857, -1.4028316736221313, -0.0015866083558648825, -2.7417760065873154e-05, -0.2545538544654846, -0.01452961377799511, -0.000971917703282088, -0.5375189781188965, -1.1127996444702148, -0.015566159039735794, -0.0003321811091154814, -0.0006955826538614929, -0.19590099155902863, -0.8444989919662476, -0.8443323373794556, -0.415391743183136, -0.0010115751065313816, -2.1764297485351562, -0.005155008751899004, -0.054138168692588806, -0.1840844452381134, -0.008978352881968021, -0.033397573977708817, -0.03843415901064873, -0.00115863885730505, -0.38742563128471375, -0.3997258245944977, -2.428713798522949], "finish_reason": "stop"}], "metrics": {"energy": 126.48225999832147, "energy_per_token": 0.9655134351016906, "time": 5.687145, "time_per_token": 0.04341332061068703}}
{"outputs": [{"text": "if not os.path.isdir(log_dir):\n        return False\n    try:\n        now = datetime.now()\n        now_str = now.strftime('%Y%m%d%H%M%S')\n        logfile_path = os.path.join(log_dir, filename)\n        with open(logfile_path, 'a') as f:\n            f.write(\"%s\\n\" % \", \".join([\"%s=%s\" % (k, metrics[k]) for k in metrics]))\n    except Exception as err:\n        return False\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "log", "_", "dir", "):", "\n", "        ", "return", " False", "\n", "    ", "try", ":", "\n", "        ", "now", " =", " datetime", ".", "now", "()", "\n", "        ", "now", "_", "str", " =", " now", ".", "str", "ftime", "('", "%", "Y", "%", "m", "%", "d", "%", "H", "%", "M", "%", "S", "')", "\n", "        ", "log", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "        ", "with", " open", "(", "log", "file", "_", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "\"", "%", "s", "\\", "n", "\"", " %", " \"", ",", " \"", ".", "join", "([", "\"", "%", "s", "=%", "s", "\"", " %", " (", "k", ",", " metrics", "[", "k", "])", " for", " k", " in", " metrics", "]))", "\n", "    ", "except", " Exception", " as", " err", ":", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "\n", "\n", "def"], "logprobs": [-1.8861359357833862, -0.21806706488132477, -0.20104213058948517, -0.00014959646796341985, -0.0071010589599609375, -0.008580010384321213, -1.4500460624694824, -0.013779513537883759, -0.000974656839389354, -0.019939806312322617, -4.8874615458771586e-05, -2.6702524337451905e-05, -0.010476591996848583, -0.041949592530727386, -0.001838185708038509, -1.7001911401748657, -0.0672387033700943, -0.014209403656423092, -0.8802592158317566, -1.4864449501037598, -0.0001445904199499637, -0.0012850845232605934, -0.0037943765055388212, -3.294623374938965, -0.021940479055047035, -0.007240010891109705, -7.92710343375802e-05, -0.023084821179509163, -0.0006386386230587959, -0.2329680472612381, -0.01707812398672104, -3.423135757446289, -0.25485461950302124, -0.4184240996837616, -0.0022341071162372828, -0.14920726418495178, -9.476689592702314e-05, -0.01986396498978138, -5.972207145532593e-05, -0.3156312108039856, -0.0633099228143692, -0.20131966471672058, -2.5184195041656494, -0.004405436106026173, -0.0010150285670533776, -0.001811888418160379, -2.2528676986694336, -0.0022347019985318184, -0.02015795186161995, -0.000695463502779603, -0.06828328967094421, -0.0023161747958511114, -0.0783081203699112, -0.02231977880001068, -0.05216372013092041, -1.1983813047409058, -1.9901421070098877, -2.417475700378418, -0.33631637692451477, -0.002095290692523122, -0.061969295144081116, -6.794906312279636e-06, -0.00026770823751576245, -0.01566849835216999, -0.0025016937870532274, -0.000533795915544033, -0.014878262765705585, -7.629365427419543e-06, -1.3708974620385561e-05, -0.0006057572900317609, -0.5243560075759888, -0.06501633673906326, -0.008476469665765762, -0.05479225143790245, -0.4761309027671814, -0.001634096377529204, -0.0006185048841871321, -0.007635101210325956, -0.0001227780303452164, -1.4424220353248529e-05, -1.311301275563892e-06, -0.007711521815508604, -0.07323869317770004, -0.1682461053133011, -0.30331870913505554, -0.00032586511224508286, -1.0588634014129639, -0.039568960666656494, -0.006453388370573521, -0.0021856960374861956, -1.2272140979766846, -0.0019972631707787514, -0.014518804848194122, -0.3519798517227173, -2.4123036861419678, -2.159960985183716, -0.006952143739908934, -1.17235267162323, -0.09816227853298187, -0.05620519444346428, -0.009264810010790825, -3.2339699268341064, -1.08132004737854, -0.8311954736709595, -0.0009602464851923287, -0.0005476167425513268, -0.5135994553565979, -0.3907959759235382, -0.1311083436012268, -0.001416633022017777, -1.4001672267913818, -0.01972207985818386, -0.005289843771606684, -0.005742599721997976, -0.17432783544063568, -0.6736493706703186, -0.0029309908859431744, -1.9530800580978394, -0.022136734798550606, -0.0010317008709535003, -0.0063495091162621975, -0.10368191450834274, -0.0020378315821290016, -0.015539750456809998, -0.09613793343305588, -0.36737361550331116, -0.0024252308066934347, -2.712531566619873, -0.006816822569817305, -0.7102769613265991, -0.43080252408981323, -2.983572006225586, -0.0009223736124113202, -0.03438054770231247, -0.0008216104470193386, -2.505728244781494, -0.08053779602050781, -0.08038149774074554, -0.12021449208259583, -0.14945265650749207, -0.004395941272377968, -0.717253565788269, -0.015595265664160252, -0.6706714034080505], "finish_reason": "stop"}], "metrics": {"energy": 157.76572241592405, "energy_per_token": 1.095595294555028, "time": 6.320763, "time_per_token": 0.0438941875}}
{"outputs": [{"text": "if not os.path.exists(os.path.join(log_dir, filename)):\n        with open(os.path.join(log_dir, filename), 'w') as f:\n            now = datetime.now()\n            f.write(f'At {now}: \\n')\n            for metric in metrics:\n                f.write(f' - {metric}: {metrics[metric]}\\n')\n            return True\n    return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", "))", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "now", " =", " datetime", ".", "now", "()", "\n", "            ", "f", ".", "write", "(", "f", "'", "At", " {", "now", "}:", " \\", "n", "')", "\n", "            ", "for", " metric", " in", " metrics", ":", "\n", "                ", "f", ".", "write", "(", "f", "'", " -", " {", "metric", "}:", " {", "metrics", "[", "metric", "]}\\", "n", "')", "\n", "            ", "return", " True", "\n", "    ", "return", " False", "\n", "\n", "if"], "logprobs": [-1.8861359357833862, -0.21806706488132477, -0.20104213058948517, -0.00014959646796341985, -0.0071010589599609375, -0.008580010384321213, -0.2703585624694824, -0.004726903047412634, -3.031120777130127, -0.0006721144891344011, -0.0019243309507146478, -0.005623117554932833, -0.045168690383434296, -0.001503528794273734, -0.02688653953373432, -5.304672595229931e-05, -2.7417760065873154e-05, -0.010716980323195457, -0.026334932073950768, -0.003449206706136465, -0.009068491868674755, -0.028384510427713394, -0.0046568987891077995, -1.8598662614822388, -0.014070829376578331, -0.001352706109173596, -0.07577015459537506, -0.00011121608258690685, -0.000288087350782007, -0.002262415364384651, -0.00031704644788987935, -0.00042489083716645837, -0.01061318814754486, -7.271502545336261e-05, -1.823885577323381e-05, -0.0001380348257953301, -0.005052417516708374, -0.0026038335636258125, -0.0013344916515052319, -0.08526377379894257, -0.33563655614852905, -0.06535229086875916, -0.006454335991293192, -0.5992549061775208, -0.02704841084778309, -0.0059018866159021854, -0.004015004262328148, -3.0044939517974854, -0.007353619672358036, -0.0056143454276025295, -9.691245941212401e-05, -0.026847083121538162, -0.00041237910045310855, -0.16116492450237274, -0.0108671048656106, -0.7572760581970215, -0.0013913960428908467, -0.0036165802739560604, -0.345532089471817, -0.2545831501483917, -0.7968372702598572, -3.921056032180786, -0.18422077596187592, -0.021299434825778008, -2.3494694232940674, -1.6895040273666382, -0.020001037046313286, -0.2078753262758255, -0.00365672679618001, -0.4513675570487976, -0.13983821868896484, -2.3802335262298584, -2.1541147232055664, -0.010715329088270664, -0.1705131083726883, -0.0036786997225135565, -0.0006735440110787749, -0.11258963495492935, -5.924526340095326e-05, -0.000773250067140907, -0.02239648438990116, -0.04340840503573418, -1.8129892349243164, -1.7774828672409058, -0.040413547307252884, -0.004341225605458021, -0.2545209527015686, -0.013782099820673466, -0.015147889032959938, -0.004653101786971092, -0.0002012050390476361, -0.27512452006340027, -0.0005287918029353023, -0.002607875969260931, -0.019191065803170204, -1.2568578720092773, -0.41026920080184937, -0.5835948586463928, -0.010353781282901764, -0.18126782774925232, -0.7877543568611145, -0.003123169532045722, -0.5066863894462585, -0.01877407543361187, -1.0872228145599365], "finish_reason": "stop"}], "metrics": {"energy": 116.96319597244263, "energy_per_token": 1.1139351997375488, "time": 4.4309344, "time_per_token": 0.042199375238095235}}
{"outputs": [{"text": "if not os.path.exists(log_dir):\n        os.mkdir(log_dir)\n    log_path = os.path.join(log_dir, filename)\n\n    try:\n        # Create the log file if it doesn't already exist\n        if not os.path.exists(log_path):\n            with open(log_path, 'w') as f:\n                pass\n        # Write metrics to the log file\n        with open(log_path, 'a') as f:\n            for metric in metrics:\n                f.write(f\"{metric}: {metrics[metric]}{os.linesep}\")\n        return True\n    except FileNotFoundError as e:\n        print(e)\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "log", "_", "dir", ")", "\n", "    ", "log", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "#", " Create", " the", " log", " file", " if", " it", " doesn", "'", "t", " already", " exist", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "path", "):", "\n", "            ", "with", " open", "(", "log", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "                ", "pass", "\n", "        ", "#", " Write", " metrics", " to", " the", " log", " file", "\n", "        ", "with", " open", "(", "log", "_", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "for", " metric", " in", " metrics", ":", "\n", "                ", "f", ".", "write", "(", "f", "\"", "{", "metric", "}:", " {", "metrics", "[", "metric", "]", "}{", "os", ".", "lines", "ep", "}\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " File", "NotFound", "Error", " as", " e", ":", "\n", "        ", "print", "(", "e", ")", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.8861359357833862, -0.21806706488132477, -0.20104213058948517, -0.00014959646796341985, -0.0071010589599609375, -0.008580010384321213, -0.2703585624694824, -0.004726903047412634, -0.08361110836267471, -5.94836674281396e-05, -2.1576648578047752e-05, -0.01449025422334671, -0.044045478105545044, -0.0018239067867398262, -0.49996915459632874, -0.00040391870425082743, -1.1905872821807861, -7.199982064776123e-05, -0.0030656505841761827, -0.02068541944026947, -5.1973900554003194e-05, -3.290122185717337e-05, -0.009688853286206722, -0.01784577965736389, -0.763776421546936, -1.965814471244812, -0.17217154800891876, -1.6168081760406494, -0.0026277319993823767, -0.04755162075161934, -1.0490362910786644e-05, -0.0002195594133809209, -0.010386579670011997, -0.0023347281385213137, -0.0004829194222111255, -0.007504249922931194, -1.7881377516459906e-06, -9.298280929215252e-06, -0.0006292270263656974, -0.03579200804233551, -0.0038720411248505116, -0.005563489627093077, -1.7346839904785156, -0.0008070787298493087, -0.5666202306747437, -0.00015746307326480746, -0.0019481267081573606, -0.0026035956107079983, -2.856602668762207, -2.1095504760742188, -0.7311685085296631, -0.4337671101093292, -0.062009409070014954, -0.18208275735378265, -0.027929257601499557, -0.20770342648029327, -0.00023445718397852033, -6.079655122448457e-06, -2.0655758380889893, -0.003062085248529911, -0.07169418781995773, -0.00026472879108041525, -0.578964114189148, -0.01120748370885849, -0.0011177966371178627, -8.940656698541716e-06, -0.00011955977242905647, -0.00020358874462544918, -0.0790652260184288, -6.770858453819528e-05, -0.0013805630151182413, -1.2278481335670222e-05, -0.0005567907355725765, -0.0029938658699393272, -0.000779205875005573, -0.0005505952867679298, -0.20813867449760437, -0.0007640779949724674, -0.00015579440514557064, -0.0033625985961407423, -8.940656698541716e-06, -8.415821503149346e-05, -0.0002388668799540028, -0.07089916616678238, -0.08224561810493469, -0.040021006017923355, -0.4507001042366028, -0.525565505027771, -0.00640873471274972, -0.003789507318288088, -0.0004941195948049426, -0.640059232711792, -0.010140329599380493, -1.815240740776062, -0.5754446983337402, -0.9254581928253174, -1.204096794128418, -0.046989914029836655, -0.09207700937986374, -0.16999107599258423, -0.020296620205044746, -0.20050115883350372, -0.00159708212595433, -0.1992756426334381, -0.0004583738627843559, -0.00014518637908622622, -0.0006249382277019322, -3.099436753473128e-06, -2.2411095415009186e-05, -0.0004278697888366878, -0.008313809521496296, -0.024251127615571022, -0.07899340987205505, -4.23184028477408e-05, -0.01659412682056427, -0.0024452093057334423, -0.0014454403426498175, -0.001142206834629178, -0.7411308884620667, -1.0699913501739502, -2.423445463180542, -0.007375038228929043, -0.061469558626413345, -0.0016032711137086153, -0.00036459474358707666, -0.42523670196533203, -4.970903682988137e-05, -0.0005191409145481884, -0.1308332085609436, -0.17351919412612915, -0.6135053038597107, -0.017637552693486214, -0.1586657613515854, -0.26835712790489197, -0.012259605340659618, -0.022895043715834618, -0.002557104919105768, -7.83174327807501e-05, -1.7149649858474731, -1.647761344909668, -0.10181128978729248, -1.2755313036905136e-05, -0.004476882051676512, -2.50339189733495e-06, -0.0019976201001554728, -0.0033327771816402674, -0.011943142861127853, -0.2881382405757904, -0.1832493096590042, -0.005662590730935335, -0.00545169273391366, -0.06357855349779129, -0.006342046428471804, -2.94283390045166, -0.01166145782917738, -0.00015960850578267127, -1.3642672300338745, -0.1379256546497345, -0.0005938435206189752, -0.005342017859220505, -0.0007103541865944862, -0.14461345970630646, -0.0582738034427166, -1.9199360609054565, -0.04931597784161568, -0.008272194303572178, -0.07744894921779633, -0.043940067291259766, -0.0015378089156001806, -2.9065818786621094, -5.960462772236497e-07, -1.6689286894688848e-06, -0.00011002412065863609, -6.508615479106084e-05, -0.11249706894159317], "finish_reason": "stop"}], "metrics": {"energy": 176.97521866035456, "energy_per_token": 1.0112869637734545, "time": 7.5806627, "time_per_token": 0.04331807257142858}}
{"outputs": [{"text": "try:\n        if os.path.exists(os.path.join(log_dir, filename)):\n            print('An error occurred: [Errno 2] No such file or directory:', os.path.join(log_dir, filename))\n            return False\n        else:\n            with open(os.path.join(log_dir, filename), 'a') as file:\n                timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n                for key, value in metrics.items():\n                    file.write(f'{timestamp} - {key} = {value}\\n')\n        return True\n    except Exception as e:\n        print(f'An error occurred: {e}')\n        return False", "tokens": ["try", ":", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", "))", ":", "\n", "            ", "print", "('", "An", " error", " occurred", ":", " [", "Err", "no", " ", "2", "]", " No", " such", " file", " or", " directory", ":'", ",", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", "))", "\n", "            ", "return", " False", "\n", "        ", "else", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "')", " as", " file", ":", "\n", "                ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "                ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "    ", "file", ".", "write", "(", "f", "'{", "timestamp", "}", " -", " {", "key", "}", " =", " {", "value", "}\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -1.7769255638122559, -2.412635087966919, -0.00019703354337252676, -0.07838881015777588, -0.005256996490061283, -0.37935924530029297, -0.009278982877731323, -1.4841694831848145, -0.00048673225683160126, -0.0016858663875609636, -0.007056670729070902, -0.002582312561571598, -0.0006457865820266306, -0.021438410505652428, -3.433168603805825e-05, -1.8715683836489916e-05, -0.0006728292210027575, -0.01596383936703205, -0.003096668515354395, -0.03188481554389, -0.023094605654478073, -0.0037683681584894657, -3.033738136291504, -1.282119631767273, -0.12783074378967285, -0.003325291909277439, -0.0014425835106521845, -0.16032809019088745, -0.27988284826278687, -0.000262106885202229, -0.00017033556650858372, -0.2020866721868515, -0.005626792553812265, -0.0007526425761170685, -0.0022393406834453344, -0.00010513706365600228, -0.00030155404238030314, -8.940297266235575e-05, -0.00016080040950328112, -1.6522809267044067, -0.0396350733935833, -0.5856170654296875, -0.0014885308919474483, -0.0027469778433442116, -0.0029891119338572025, -0.005495085380971432, -0.00100514420773834, -0.00933449249714613, -3.7431014789035544e-05, -0.00013159839727450162, -0.0004727914638351649, -0.006193729117512703, -0.013407192192971706, -0.005409721285104752, -0.07365484535694122, -0.044366199523210526, -0.009034468792378902, -0.0038757221773266792, -0.33379971981048584, -0.9708867073059082, -0.00023958197562023997, -0.004896079655736685, -0.00652551744133234, -0.6854477524757385, -0.003135290928184986, -0.002050560899078846, -0.02443390153348446, -1.5735502529423684e-05, -7.879423355916515e-05, -0.00042906138696707785, -0.00020549570035655051, -0.00033778208307921886, -0.005011378321796656, -2.2411095415009186e-05, -9.65590606938349e-06, -0.00016640232934150845, -0.004767360631376505, -0.0009814451914280653, -0.000679500459227711, -0.07254534959793091, -0.7182241678237915, -0.30138418078422546, -0.0005987281911075115, -1.4266459941864014, -0.020588263869285583, -0.005605099257081747, -0.0031774768140167, -2.7702057361602783, -0.00980407278984785, -0.054863009601831436, -7.724463648628443e-05, -0.026942240074276924, -0.00034683887497521937, -0.028867585584521294, -0.028855539858341217, -3.862306402879767e-05, -0.37040436267852783, -0.044977813959121704, -0.1027204692363739, -0.02500050887465477, -0.00035089056473225355, -6.0794889577664435e-05, -3.85038583772257e-05, -0.0737266093492508, -0.0018982740584760904, -0.0018618644680827856, -1.8715683836489916e-05, -0.008008276112377644, -0.0003399271226953715, -0.18569251894950867, -0.0826939269900322, -0.026742398738861084, -0.8396222591400146, -0.623379647731781, -0.06174035742878914, -0.08233355730772018, -0.00012468514614738524, -0.0015918452991172671, -0.0013303249143064022, -0.0003947432560380548, -0.000120751719805412, -0.002889032242819667, -0.0001433984871255234, -0.000493762141559273, -0.07542331516742706, -0.00023946279543451965, -0.0019585967529565096, -0.10175023972988129, -0.08011768013238907, -0.4923454225063324, -0.8678279519081116, -0.2239559441804886, -0.8752616047859192, -0.04443153738975525, -0.00415070541203022, -2.1819705963134766, -0.9354852437973022, -0.0024301065132021904, -0.007427222095429897, -0.06550582498311996, -0.0016446886584162712, -0.0007340597221627831, -0.0022999995853751898, -1.5619261264801025, -0.17297235131263733, -0.0027220123447477818, -0.0021288369316607714, -0.09058835357427597, -0.00759499566629529, -0.5071518421173096, -0.1285979300737381, -0.10641893744468689, -0.0002431573811918497, -0.005848793778568506, -0.0013860390754416585, -0.03837989643216133, -0.4225260317325592, -0.7844735980033875, -0.1906128078699112, -0.02362832799553871, -0.0033667569514364004, -0.0005401106318458915, -0.028250204399228096, -0.005609011277556419, -0.08772537112236023, -0.07833798974752426, -0.003663140581920743, -0.01246824860572815, -0.048896607011556625, -0.021256254985928535, -0.0018392566125839949, -0.46682801842689514, -0.025919053703546524, -1.300279974937439], "finish_reason": "stop"}], "metrics": {"energy": 212.99541037940966, "energy_per_token": 1.1966034290978071, "time": 7.9820976, "time_per_token": 0.04484324494382023}}
{"outputs": [{"text": "try:\n        # Create the directory if it doesn't exist\n        if not os.path.isdir(log_dir):\n            os.makedirs(log_dir)\n        # Write the metrics to the file\n        now = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n        log_file = os.path.join(log_dir, filename)\n        with open(log_file, 'a') as f:\n            for key, value in metrics.items():\n                f.write(f\"{now}, {key}: {value}\\n\")\n        return True\n    except Exception as e:\n        print(f'An error occurred: {e}')\n        return False", "tokens": ["try", ":", "\n", "        ", "#", " Create", " the", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "log", "_", "dir", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "        ", "#", " Write", " the", " metrics", " to", " the", " file", "\n", "        ", "now", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "        ", "log", "_", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "        ", "with", " open", "(", "log", "_", "file", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "f", "\"", "{", "now", "}", ",", " {", "key", "}:", " {", "value", "}\\", "n", "\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -1.9930434226989746, -1.1636892557144165, -0.5125617384910583, -1.6296119689941406, -0.11593586206436157, -0.054565053433179855, -0.19792628288269043, -0.00025650550378486514, -5.602820692729438e-06, -0.06392303854227066, -0.05852748081088066, -0.00032944019767455757, -0.48556438088417053, -0.010441909544169903, -0.0014663906767964363, -4.0531076592742465e-06, -0.00028618055512197316, -0.001142564113251865, -2.0353784561157227, -0.00018261195509694517, -0.0002874914789572358, -0.012318834662437439, -2.3841574147809297e-05, -1.1920858014491387e-05, -0.0015655416063964367, -0.0022481423802673817, -0.000809699238743633, -0.033223118633031845, -6.222531374078244e-05, -0.2993529438972473, -2.002696055569686e-05, -0.0019133847672492266, -9.965400386136025e-05, -0.0020731640979647636, -2.9444261599564925e-05, -1.2278481335670222e-05, -0.05044722929596901, -0.0021341899409890175, -2.1300745010375977, -0.34402433037757874, -1.948030948638916, -0.33850157260894775, -0.15724770724773407, -0.09466680884361267, -0.6732983589172363, -0.7316141724586487, -0.309396356344223, -0.0014816269977018237, -2.668973684310913, -0.006766264792531729, -0.0037569671403616667, -5.304672595229931e-05, -0.018112968653440475, -0.00024136967840604484, -1.75559401512146, -0.04524890333414078, -7.617183291586116e-05, -0.7259389758110046, -0.012249124236404896, -0.01704050414264202, -0.16484548151493073, -0.10696077346801758, -0.0005440423847176135, -7.724463648628443e-05, -0.00012432756193447858, -0.25372663140296936, -0.0006909366929903626, -0.009953389875590801, -1.168244216387393e-05, -0.0071695903316140175, -0.0008922410197556019, -0.09336324781179428, -0.00032276666024699807, -0.018105827271938324, -0.0070099132135510445, -3.064905881881714, -0.21041275560855865, -0.19094467163085938, -0.051700375974178314, -0.09489060193300247, -1.6927575416048057e-05, -0.0001431601122021675, -0.010308829136192799, -0.0007234578370116651, -0.0002338612830499187, -0.004572531208395958, -1.3470558769768104e-05, -7.748573807475623e-06, -0.00029225845355540514, -0.12378869205713272, -0.0067389123141765594, -0.004819562193006277, -0.011203947477042675, -0.04492117092013359, -0.0003270567976869643, -0.00022194306075107306, -0.00201974855735898, -2.932505594799295e-05, -1.4185804502631072e-05, -0.001121845212765038, -0.140586718916893, -0.09475117176771164, -0.16483871638774872, -6.01988795096986e-05, -0.42184609174728394, -0.0123069416731596, -0.004778750240802765, -0.0012827033642679453, -1.3205432891845703, -0.7244386672973633, -0.05114326253533363, -0.14248964190483093, -6.425174069590867e-05, -0.002579696709290147, -0.0006899837171658874, -0.000362807244528085, -6.067568756407127e-05, -0.0012525817146524787, -0.0005915798828937113, -0.06264414638280869, -2.753696753643453e-05, -0.0004027270770166069, -0.05755199119448662, -0.10287266969680786, -0.21125543117523193, -0.011849138885736465, -0.7120253443717957, -0.23194243013858795, -1.7905700206756592, -0.14418618381023407, -0.003963117022067308, -0.6413249373435974, -0.015638455748558044, -0.007890838198363781, -0.07211298495531082, -0.0008316157618537545, -0.0002840353990904987, -0.0010303908493369818, -0.009504544548690319, -0.2435787469148636, -0.17654815316200256, -0.011678306385874748, -0.011908275075256824, -0.044082436710596085, -0.010893518105149269, -0.3876022696495056, -0.08654425293207169, -0.06818363815546036, -7.343022298300639e-05, -0.012916943058371544, -0.0005505952867679298, -0.1358666718006134, -0.03993235528469086, -0.357530415058136, -1.8543075323104858, -0.00742284394800663, -0.00016735584358684719, -0.0003357561945449561, -0.009818356484174728, -0.0028372055385261774, -0.1395011842250824, -0.05835994333028793, -0.0021433494985103607, -0.004450179636478424, -0.007837614975869656, -0.008103705942630768, -0.00024959311122074723, -0.6175913214683533, -0.028754424303770065, -0.6091191172599792], "finish_reason": "stop"}], "metrics": {"energy": 180.02173223876954, "energy_per_token": 1.0346076565446525, "time": 7.792401, "time_per_token": 0.044783913793103446}}
{"outputs": [{"text": "try:\n        with open(os.path.join(log_dir, filename), 'a', encoding='utf-8') as f:\n            f.write('\\n' + datetime.now().isoformat(sep=' ', timespec='minutes') + '\\n')\n            for k, v in metrics.items():\n                f.write(k + ': ' + str(v) + '\\n')\n    except OSError as e:\n        print(f'An error occurred: {e}')\n        return False\n    except Exception as e:\n        print(f'An error occurred: {e}')\n        return False\n    return True", "tokens": ["try", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "('", "\\", "n", "'", " +", " datetime", ".", "now", "()", ".", "iso", "format", "(", "sep", "='", " '", ",", " times", "pec", "='", "minutes", "')", " +", " '\\", "n", "')", "\n", "            ", "for", " k", ",", " v", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "k", " +", " ':", " '", " +", " str", "(", "v", ")", " +", " '\\", "n", "')", "\n", "    ", "except", " O", "SE", "rror", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "\n", "\n", "#"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -1.417752742767334, -0.01794554479420185, -0.006461797747761011, -0.15728875994682312, -1.0132738680113107e-05, -0.0005245024804025888, -0.0036052961368113756, -0.000442407006630674, -0.0004182179400231689, -0.008860438130795956, -2.2053474822314456e-05, -2.3483953555114567e-05, -0.000390215078368783, -0.015172664076089859, -0.002392170252278447, -0.001007764250971377, -0.08021736145019531, -0.31576091051101685, -2.2755277156829834, -0.005800794344395399, -0.05292515829205513, -0.04983600229024887, -0.039759837090969086, -0.09814001619815826, -0.000982278841547668, -0.02602742426097393, -0.0040862406603991985, -0.681032121181488, -0.04375500604510307, -0.004055490717291832, -0.005493544042110443, -0.9284758567810059, -0.002760530449450016, -0.011386646889150143, -1.1795928478240967, -1.3486950397491455, -0.07629162818193436, -0.8112603425979614, -0.6104555726051331, -0.8670880198478699, -0.00010418349120300263, -0.13997119665145874, -0.0003860443539451808, -0.000659248442389071, -2.305265188217163, -0.00011705666838679463, -1.9613943099975586, -1.1023681163787842, -0.014648506417870522, -0.10487367957830429, -0.3115661144256592, -0.019634416326880455, -0.0003097769513260573, -0.003089419100433588, -3.3542978763580322, -0.45459917187690735, -0.028953401371836662, -0.7264352440834045, -0.0060234684497118, -0.06813786923885345, -0.009027735330164433, -0.0520632378757, -0.3791906237602234, -1.578122615814209, -0.030275624245405197, -0.012357338331639767, -0.0004430027911439538, -0.00661054952070117, -0.0029439465142786503, -0.00044467096449807286, -0.00013672371278516948, -0.005633074790239334, -0.0007794441189616919, -0.036409005522727966, -3.0040289857424796e-05, -0.00029202012228779495, -0.24957360327243805, -2.419191837310791, -0.05185579136013985, -0.32280704379081726, -0.010977707803249359, -0.005559340585023165, -0.021505383774638176, -0.00012432756193447858, -0.0055575622245669365, -0.08098413050174713, -0.012375117279589176, -0.15462495386600494, -0.0026085893623530865, -0.0008611546363681555, -0.00212479243054986, -1.4977139234542847, -0.004539185669273138, -1.524648904800415, -1.2159273865108844e-05, -5.960446742392378e-06, -0.5407016277313232, -0.2936180531978607, -0.0006759266252629459, -0.010013464838266373, -0.0009901388548314571, -0.10963265597820282, -0.4694775640964508, -0.7707540988922119, -0.42207950353622437, -0.017863696441054344, -0.00034421717282384634, -0.0004551566671580076, -0.022625749930739403, -0.010558458045125008, -0.11905442923307419, -0.09367819875478745, -0.0028023754712194204, -0.005035219248384237, -0.04096900299191475, -0.015134268440306187, -0.002209961414337158, -0.00969003327190876, -0.1273355782032013, -2.642448663711548, -0.8332948684692383, -0.06683670729398727, -0.00503723556175828, -0.0012124576605856419, -0.0068481978960335255, -0.00021228920377325267, -0.01676611416041851, -0.04435661807656288, -0.14968998730182648, -0.03203895315527916, -0.08778499066829681, -0.47183436155319214, -0.0024239225313067436, -0.03853326663374901, -0.0024857595562934875, -0.01823810674250126, -0.018402673304080963, -0.001440797932446003, -0.001790707348845899, -0.02361668460071087, -0.013011669740080833, -0.0020268866792321205, -0.003172842552885413, -0.09281062334775925, -0.30615296959877014, -0.0012042421149089932, -0.6329387426376343, -0.015258724801242352, -2.874645233154297], "finish_reason": "stop"}], "metrics": {"energy": 189.84012817382805, "energy_per_token": 1.2407851514629284, "time": 6.7433386, "time_per_token": 0.04407410849673203}}
{"outputs": [{"text": "try:\n        if os.path.exists(log_dir):\n            with open(os.path.join(log_dir, filename), 'w') as file:\n                for metric in metrics:\n                    file.write(metric + ': ' + str(metrics[metric]) + '\\n')\n                file.write('Timestamp: ' + datetime.now().strftime('%Y-%m-%d %H:%M:%S'))\n                file.write('\\n')\n        else:\n            os.makedirs(log_dir)\n            task_func(metrics, filename, log_dir)\n\n    except IOError as e:\n        print(str(e) + ':', file=sys.stderr)\n        return False\n    return True", "tokens": ["try", ":", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "w", "')", " as", " file", ":", "\n", "                ", "for", " metric", " in", " metrics", ":", "\n", "                ", "    ", "file", ".", "write", "(", "metric", " +", " ':", " '", " +", " str", "(", "metrics", "[", "metric", "])", " +", " '\\", "n", "')", "\n", "                ", "file", ".", "write", "('", "Timestamp", ":", " '", " +", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "'))", "\n", "                ", "file", ".", "write", "('", "\\", "n", "')", "\n", "        ", "else", ":", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "            ", "task", "_", "func", "(", "metrics", ",", " filename", ",", " log", "_", "dir", ")", "\n", "\n", "    ", "except", " IO", "Error", " as", " e", ":", "\n", "        ", "print", "(", "str", "(", "e", ")", " +", " '", ":'", ",", " file", "=", "sys", ".", "stderr", ")", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -1.7769255638122559, -2.412635087966919, -0.00019703354337252676, -0.07838881015777588, -0.005256996490061283, -0.37935924530029297, -0.009278982877731323, -0.5135274529457092, -0.00016544880054425448, -0.00015686711412854493, -0.273602157831192, -0.0288307536393404, -0.007155624218285084, -1.230299472808838, -0.011342448182404041, -0.007289242930710316, -0.3376575708389282, -0.0012713929172605276, -0.0004301338049117476, -0.006859326735138893, -0.0008119623525999486, -0.0004959068610332906, -0.007403082679957151, -7.271502545336261e-05, -1.4781842764932662e-05, -0.0006398299592547119, -0.02217847667634487, -0.0040070489048957825, -0.0007833749405108392, -0.09540198743343353, -1.9989917278289795, -0.07519378513097763, -0.0005361788207665086, -1.2051966190338135, -0.012409026734530926, -0.002988874213770032, -0.00382608431391418, -0.7620766162872314, -1.3887557983398438, -2.029836893081665, -0.019869457930326462, -0.14478272199630737, -0.002385153668001294, -0.0003275334893260151, -0.00033384948619641364, -0.37654054164886475, -0.0005466635921038687, -0.0016066036187112331, -0.22069619596004486, -2.744554281234741, -0.14008550345897675, -0.4204159080982208, -0.006530373357236385, -0.006032473873347044, -0.08824905753135681, -0.000310730334604159, -0.0022722873836755753, -0.010424921289086342, -0.0002004899288294837, -0.05330905318260193, -0.001677297754213214, -0.17505978047847748, -0.003368539037182927, -0.0013850866816937923, -0.0021398996468633413, -1.3290369510650635, -1.4197019338607788, -0.0002985746832564473, -0.4970683753490448, -0.2603040039539337, -1.1472567319869995, -0.02284039743244648, -0.018470901995897293, -0.009468529373407364, -1.1000802516937256, -7.712543447269127e-05, -0.07161873579025269, -0.0038132588379085064, -6.97350042173639e-05, -0.1407804936170578, -4.255681051290594e-05, -0.24422000348567963, -0.0005882440018467605, -0.1419903039932251, -0.02252388745546341, -0.0003513672563713044, -5.757642793469131e-05, -5.435795901576057e-05, -0.032174136489629745, -0.0034917357843369246, -0.0007375142886303365, -3.4927710657939315e-05, -0.00989224947988987, -0.00031394799589179456, -0.3205181360244751, -0.0037807191256433725, -0.9102340340614319, -0.6987370848655701, -0.0003475538978818804, -0.11265727132558823, -0.010624747723340988, -0.009168427437543869, -0.003874653484672308, -0.3412412106990814, -0.0059635089710354805, -1.1592317819595337, -0.12308979779481888, -0.0001445904199499637, -0.014582600444555283, -0.0009514334378764033, -1.3604013919830322, -5.2927523938706145e-05, -0.1770918369293213, -0.0005165196489542723, -0.0019748962949961424, -0.0018189090769737959, -0.09116266667842865, -6.711257447022945e-05, -1.537788011773955e-05, -0.22614796459674835, -0.015116303227841854, -0.07046997547149658, -1.7906147241592407, -0.0018521074671298265, -0.0008394769974984229, -0.009142912924289703, -0.002900443272665143, -0.002178321359679103, -0.004773174412548542, -0.16990497708320618, -0.016785573214292526, -0.0001565095444675535, -4.5536911784438416e-05, -0.28302741050720215, -0.028172671794891357, -2.3551127910614014, -0.7217033505439758, -0.011684197932481766, -2.593318223953247, -0.00013422065239865333, -0.5771733522415161, -0.3096763789653778, -0.0010886224918067455, -0.009371929802000523, -0.004861558321863413, -0.17241406440734863, -0.5664100050926208, -2.9324402809143066, -0.0011262509506195784, -0.012783014215528965, -2.2670040130615234, -0.3505578637123108, -0.9133843183517456, -2.5040149688720703, -0.18654894828796387, -1.8029004335403442, -0.015811897814273834, -0.01678065024316311, -0.00011467275908216834, -0.005355653818696737, -0.07630510628223419, -0.014371930621564388, -0.05065655708312988, -0.09443297982215881, -0.0052083758637309074, -0.06486005336046219, -1.1261730194091797, -0.6501961350440979, -0.005020748823881149, -1.0455973148345947, -4.768370445162873e-07, -1.311301275563892e-06, -7.974783511599526e-05, -5.340433563105762e-05, -0.15793290734291077], "finish_reason": "stop"}], "metrics": {"energy": 190.81763312149045, "energy_per_token": 1.066020296768103, "time": 7.790609, "time_per_token": 0.04352295530726257}}
{"outputs": [{"text": "# Check for missing requirements\n    if not os.path.isdir(log_dir):\n        print('An error occurred: [Errno 2] No such file or directory: \\'' + log_dir + '\\'')\n        return False\n\n    # Create a log file\n    try:\n        with open(os.path.join(log_dir, filename), 'w') as f:\n            f.write(str(datetime.now()) + ':' + os.linesep)\n            f.write(str(metrics) + os.linesep)\n        print('Metrics written to: ' + os.path.join(log_dir, filename))\n    except Exception as e:\n        print('An error occurred: ' + str(e))\n        return False\n    return True", "tokens": ["#", " Check", " for", " missing", " requirements", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "log", "_", "dir", "):", "\n", "        ", "print", "('", "An", " error", " occurred", ":", " [", "Err", "no", " ", "2", "]", " No", " such", " file", " or", " directory", ":", " \\", "''", " +", " log", "_", "dir", " +", " '\\", "'')", "\n", "        ", "return", " False", "\n", "\n", "    ", "#", " Create", " a", " log", " file", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "str", "(", "datetime", ".", "now", "())", " +", " '", ":'", " +", " os", ".", "lines", "ep", ")", "\n", "            ", "f", ".", "write", "(", "str", "(", "metrics", ")", " +", " os", ".", "lines", "ep", ")", "\n", "        ", "print", "('", "Metrics", " written", " to", ":", " '", " +", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", "))", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "('", "An", " error", " occurred", ":", " '", " +", " str", "(", "e", "))", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "\n", "\n", "print"], "logprobs": [-1.4080322980880737, -1.4041237831115723, -2.638108730316162, -3.146664619445801, -0.9071076512336731, -0.20150552690029144, -0.004696054384112358, -0.7274117469787598, -0.18135464191436768, -0.5155937075614929, -0.0032490105368196964, -0.01853315904736519, -0.04694259911775589, -1.2888296842575073, -0.05709293857216835, -0.003387073054909706, -0.026359664276242256, -2.9682672902708873e-05, -1.811964830267243e-05, -0.016176287084817886, -0.016453418880701065, -0.0012977044098079205, -0.6146789193153381, -1.1337558031082153, -0.031974297016859055, -0.000248401309363544, -0.0004574206250254065, -0.08733218908309937, -0.20554761588573456, -0.000764673575758934, -0.0003369478799868375, -0.06759429723024368, -0.003268140833824873, -0.0006814065272919834, -0.0014302035560831428, -0.00011944057769142091, -0.0012530578533187509, -7.188061863416806e-05, -9.452849917579442e-05, -0.18232278525829315, -1.2983201742172241, -0.8636896014213562, -0.32913193106651306, -0.22874005138874054, -0.0002650863316375762, -0.00011252723925281316, -0.009676102548837662, -0.060135770589113235, -0.024528007954359055, -0.004323658533394337, -0.005528517533093691, -0.02406715601682663, -0.009244848974049091, -0.0015260252403095365, -0.2978755533695221, -0.0007098776986822486, -0.4801841974258423, -1.4513745307922363, -1.374009132385254, -1.3491647243499756, -0.057449910789728165, -2.4958231449127197, -0.0007663412252441049, -1.6753877401351929, -0.00026592056383378804, -0.0006300609675236046, -0.0022426710929721594, -0.7988459467887878, -0.005077206529676914, -0.007526375353336334, -0.19313834607601166, -0.00013565097469836473, -0.0009155849111266434, -0.002414052141830325, -0.0006705658161081374, -0.0005634627304971218, -0.005646114237606525, -9.894321920000948e-06, -7.033323527139146e-06, -0.0005527398898266256, -0.026450108736753464, -0.0053666806779801846, -0.0018669809214770794, -0.03771452605724335, -1.2762718200683594, -0.07429684698581696, -0.0003519630990922451, -0.704807460308075, -0.02443739026784897, -0.002244930947199464, -0.018256718292832375, -1.1811271905899048, -0.0017353727016597986, -0.01164236944168806, -0.8869235515594482, -0.7569482922554016, -0.007621378172188997, -0.4850001931190491, -0.0003580405900720507, -0.030474068596959114, -0.29939112067222595, -0.008165784180164337, -2.1284537315368652, -3.56343936920166, -0.01064715813845396, -2.179447650909424, -0.004437836818397045, -0.003576075891032815, -3.3378546504536644e-06, -0.09776300936937332, -0.016976280137896538, -0.16116340458393097, -1.031996726989746, -9.858122211880982e-05, -0.06965207308530807, -0.34934669733047485, -0.3029736876487732, -0.01956474594771862, -0.005111601669341326, -0.1682300865650177, -0.024587098509073257, -0.013376140035688877, -0.00012659224739763886, -0.00011503035057103261, -0.00011967896716669202, -0.010588654316961765, -0.004586889408528805, -1.4765263795852661, -1.138047456741333, -0.4393225908279419, -0.6823281049728394, -0.6054860353469849, -0.11050519347190857, -1.6961324214935303, -0.10212133079767227, -0.07853010296821594, -0.2954910099506378, -0.001591369160450995, -0.0008079125545918941, -0.0009753713966347277, -0.013971381820738316, -0.00043871314846910536, -0.008375992067158222, -4.768360213347478e-06, -2.6464111215318553e-05, -0.00035684893373399973, -0.002792390063405037, -0.019611388444900513, -0.0014061573892831802, -1.3160628080368042, -0.0071220095269382, -1.2446107864379883, -0.2337774932384491, -0.08882318437099457, -0.0003895000845659524, -0.017685456201434135, -0.0006023023161105812, -0.013224626891314983, -0.26334521174430847, -0.010842340998351574, -0.0004086851258762181, -0.0004717191040981561, -0.11190131306648254, -0.06862271577119827, -0.15964412689208984, -0.09248605370521545, -0.00012563870404846966, -0.006703744642436504, -0.021872369572520256, -0.004517231602221727, -0.13775314390659332, -0.05405934154987335, -0.0012815127847716212, -0.04575316980481148, -0.700284481048584, -0.16828791797161102, -0.002405370818451047, -0.6046597957611084, -0.015012850053608418, -3.3585569858551025], "finish_reason": "stop"}], "metrics": {"energy": 224.90372122192375, "energy_per_token": 1.2494651178995764, "time": 7.7859607, "time_per_token": 0.043255337222222225}}
{"outputs": [{"text": "try:\n        # Check if the directory exists\n        if not os.path.isdir(log_dir):\n            os.makedirs(log_dir)\n\n        # Create the log file\n        logfile = os.path.join(log_dir, filename)\n        with open(logfile, 'a') as f:\n            for k, v in metrics.items():\n                timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n                f.write(f'{k}: {v}, {timestamp}\\n')\n\n        # Log success\n        print(f\"Metrics written to {logfile} successfully!\")\n        return True\n\n    # Handle errors\n    except Exception as e:\n        print(f\"An error occurred: {str(e)}\")\n        return False", "tokens": ["try", ":", "\n", "        ", "#", " Check", " if", " the", " directory", " exists", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "log", "_", "dir", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "\n", "        ", "#", " Create", " the", " log", " file", "\n", "        ", "log", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "        ", "with", " open", "(", "log", "file", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "for", " k", ",", " v", " in", " metrics", ".", "items", "():", "\n", "                ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "                ", "f", ".", "write", "(", "f", "'{", "k", "}:", " {", "v", "}", ",", " {", "timestamp", "}\\", "n", "')", "\n", "\n", "        ", "#", " Log", " success", "\n", "        ", "print", "(", "f", "\"", "Metrics", " written", " to", " {", "log", "file", "}", " successfully", "!", "\"", ")", "\n", "        ", "return", " True", "\n", "\n", "    ", "#", " Handle", " errors", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -1.9930434226989746, -2.213087558746338, -0.25793176889419556, -0.500450074672699, -2.0609827041625977, -0.12361909449100494, -1.2076520919799805, -0.0004122599493712187, -0.15696540474891663, -0.030928857624530792, -0.004243298899382353, -7.867782187531702e-06, -0.0007924277451820672, -0.0008169650682248175, -1.3908261060714722, -0.0004469349514693022, -0.0005799042410217226, -0.01400300394743681, -2.777537883957848e-05, -1.0251946150674485e-05, -0.002526308177039027, -0.002197353169322014, -0.0010758809512481093, -0.867377758026123, -0.00037508129025809467, -0.4644579589366913, -6.806619057897478e-05, -0.0037765626329928637, -0.000717144284863025, -0.005955924745649099, -3.2782016205601394e-05, -1.9550132492440753e-05, -0.0708971694111824, -0.053320128470659256, -0.3213323652744293, -0.00275827175937593, -0.11742492020130157, -1.1880793571472168, -0.43971940875053406, -0.47332942485809326, -0.05508878827095032, -1.1220548152923584, -0.00027616979787126184, -0.7808668613433838, -2.1973562240600586, -0.05137407407164574, -0.24255816638469696, -2.52720492426306e-05, -0.0005260513862594962, -0.005517729092389345, -0.0010552796302363276, -0.0003073934931308031, -0.004476407542824745, -7.510157047363464e-06, -2.7418097943154862e-06, -0.0005685858195647597, -0.04034210368990898, -0.005467935465276241, -0.0031617910135537386, -0.05627821385860443, -0.39675551652908325, -0.0014252038672566414, -0.00022289653134066612, -0.002334371441975236, -8.749579137656838e-05, -0.0013460394693538547, -0.08297769725322723, -0.31458568572998047, -0.19459712505340576, -0.00010942813969450071, -0.27965790033340454, -0.039030611515045166, -0.004280215594917536, -0.019161244854331017, -1.6168092489242554, -1.814261555671692, -0.02510804869234562, -0.014276979491114616, -0.0003499372396618128, -0.013849352486431599, -0.001419608946889639, -0.0017302555497735739, -8.761498611420393e-05, -0.006652825977653265, -0.000715833914000541, -2.970289468765259, -0.01156895887106657, -0.04314800724387169, -7.486063259420916e-05, -0.04503490775823593, -0.00028939827461726964, -0.02191680483520031, -0.036530956625938416, -6.270212179515511e-05, -0.2732756733894348, -0.03311218321323395, -0.07778659462928772, -0.025523917749524117, -0.0004159538948442787, -5.94836674281396e-05, -3.576214658096433e-05, -0.06016428396105766, -0.002135379472747445, -0.0006877202540636063, -2.5152843591058627e-05, -0.004841984249651432, -0.00032884435495361686, -0.2506817877292633, -0.037263501435518265, -0.002997193718329072, -0.1542954295873642, -0.00015233787416946143, -0.0014481781981885433, -0.1813155561685562, -0.0631730705499649, -0.7730631232261658, -1.3859199285507202, -0.5904213786125183, -0.041923873126506805, -0.03138633072376251, -0.09926251322031021, -0.7146531343460083, -0.31000542640686035, -0.0037279885727912188, -0.052774883806705475, -0.0006084974738769233, -0.0014118712861090899, -0.002334252465516329, -0.49794238805770874, -0.12969012558460236, -2.027602195739746, -2.674150228500366, -2.4833154678344727, -0.11673736572265625, -0.002081372309476137, -0.7705013751983643, -0.38588884472846985, -0.17839160561561584, -1.5284922122955322, -0.48241284489631653, -0.4336799681186676, -0.057321254163980484, -0.5307251214981079, -0.03918846696615219, -0.001801535952836275, -0.8440487384796143, -0.7165709137916565, -2.1841416358947754, -0.012990842573344707, -0.0005230727256275713, -0.0015553055563941598, -0.15182243287563324, -0.010297620669007301, -0.0039673917926847935, -0.004385021980851889, -0.7791426777839661, -0.0012447236804291606, -2.2025136947631836, -1.6993818283081055, -1.569886565208435, -0.2562708854675293, -0.00042417587246745825, -0.0018447301117703319, -0.4739839434623718, -0.013938231393694878, -0.06647046655416489, -0.00011812942830147222, -0.0028676362708210945, -0.0011185110779479146, -0.04914915934205055, -0.03148787096142769, -0.14153221249580383, -0.15706831216812134, -0.0118520837277174, -0.00023398046323563904, -0.00043049128726124763, -0.01988266222178936, -0.004033288452774286, -2.2827272415161133, -0.00014077626110520214, -0.0018165291985496879, -0.011168346740305424, -0.004137883894145489, -0.009634307585656643, -0.011519701220095158, -0.005392410326749086, -0.02613125368952751, -0.00038890427094884217, -1.1359519958496094, -1.1920922133867862e-06, -5.960462772236497e-07, -4.053033626405522e-05, -3.6238969187252223e-05, -0.127815842628479], "finish_reason": "stop"}], "metrics": {"energy": 211.92732041358957, "energy_per_token": 1.0703400020888363, "time": 8.630587, "time_per_token": 0.043588823232323236}}
{"outputs": [{"text": "try:\n        if not os.path.exists(log_dir):\n            os.makedirs(log_dir)\n\n        with open(os.path.join(log_dir, filename), 'a', encoding='utf-8') as f:\n            f.write('-' * 40 + '\\n')\n            f.write('{datetime}'.format(**locals()))\n            f.write('-' * 40 + '\\n')\n            for key, value in metrics.items():\n                f.write('{key}: {value}'.format(**locals()))\n                f.write('\\n')\n            f.write('-' * 80 + '\\n')\n    except Exception:\n        print(\"An error occurred:\", sys.exc_info()[1])\n    return False", "tokens": ["try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "('", "-'", " *", " ", "4", "0", " +", " '\\", "n", "')", "\n", "            ", "f", ".", "write", "('", "{", "datetime", "}'", ".", "format", "(", "**", "local", "s", "()))", "\n", "            ", "f", ".", "write", "('", "-'", " *", " ", "4", "0", " +", " '\\", "n", "')", "\n", "            ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "('", "{", "key", "}:", " {", "value", "}'", ".", "format", "(", "**", "local", "s", "()))", "\n", "                ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "f", ".", "write", "('", "-'", " *", " ", "8", "0", " +", " '\\", "n", "')", "\n", "    ", "except", " Exception", ":", "\n", "        ", "print", "(", "\"", "An", " error", " occurred", ":\"", ",", " sys", ".", "exc", "_", "info", "()[", "1", "])", "\n", "    ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -1.7769255638122559, -0.2916995584964752, -0.07775703817605972, -4.124556289752945e-05, -0.0064244880340993404, -0.0022218560334295034, -0.2713129222393036, -0.0025536566972732544, -0.05792061239480972, -4.3748852476710454e-05, -2.47952248173533e-05, -0.00833118800073862, -0.03747399523854256, -0.0013218722306191921, -0.1195153146982193, -0.0002719986077863723, -0.3570813536643982, -0.0002946419408544898, -0.003460373729467392, -0.0006750926841050386, -0.005735606420785189, -2.8132995794294402e-05, -1.8954096958623268e-05, -0.04792848974466324, -0.017067575827240944, -1.3070812225341797, -0.005840972065925598, -1.080772876739502, -0.004382054787129164, -0.003789744805544615, -0.17907284200191498, -0.0014040146488696337, -0.0004119024670217186, -0.003916214685887098, -0.0004786299541592598, -0.0003597089380491525, -0.00394625635817647, -3.3378546504536644e-06, -5.245195097813848e-06, -0.0003057250869460404, -0.015220098197460175, -0.002205798402428627, -0.000617432699073106, -0.05063173919916153, -0.18651828169822693, -3.1093015670776367, -0.0037644491530954838, -0.07550213485956192, -0.048303741961717606, -0.04586487635970116, -0.1181778833270073, -0.0006320862448774278, -0.011368024162948132, -0.0050423359498381615, -0.6998193264007568, -0.03449629619717598, -0.0029548814054578543, -0.004940682090818882, -0.8404676914215088, -0.0019828674849122763, -0.010927360504865646, -1.2105889320373535, -3.355429172515869, -0.3625251054763794, -0.01724334992468357, -2.421555995941162, -0.0859457328915596, -0.09415189921855927, -0.10664719343185425, -0.009832285344600677, -0.017350204288959503, -0.016564110293984413, -0.06421956419944763, -0.5893402695655823, -0.00011228884250158444, -0.0040984689258039, -1.087425947189331, -3.9487977027893066, -2.327752113342285, -3.1129493713378906, -0.09587942808866501, -0.002753873122856021, -0.0019120759097859263, -2.213006019592285, -0.4316471517086029, -1.6093124941107817e-05, -0.37512364983558655, -0.0127252247184515, -0.04505143314599991, -0.2287011593580246, -0.00020930961181875318, -0.0047800554893910885, -0.12967723608016968, -1.257535696029663, -0.003686419688165188, -0.0008819981012493372, -0.004617148544639349, -0.0008167268824763596, -0.004000281449407339, -0.0009777533123269677, -7.068861305015162e-05, -0.1155666783452034, -0.0005516675882972777, -0.18744172155857086, -0.9935023188591003, -0.7400090098381042, -0.07932271808385849, -0.27959463000297546, -0.0002300474588992074, -0.025667769834399223, -0.0023649362847208977, -0.0007962394156493247, -0.0001691436773398891, -0.0030835960060358047, -0.00048685140791349113, -0.045740414410829544, -3.373566141817719e-05, -0.000546425289940089, -0.10836152732372284, -0.15304608643054962, -0.0923236683011055, -0.9682643413543701, -0.1135953813791275, -0.007352199871093035, -0.35232219099998474, -0.0014848408754915, -0.0011269653914496303, -0.0010147904977202415, -0.011982602998614311, -0.0024123871698975563, -0.000539634027518332, -0.011378160677850246, -0.00214037555269897, -0.2784084975719452, -0.04993829503655434, -6.198863957251888e-06, -0.0016688480973243713, -0.015771297737956047, -0.0360245481133461, -0.0019377756398171186, -0.041185468435287476, -0.000560245884116739, -0.8014963865280151, -0.016573255881667137, -0.00012194366718176752, -0.021111534908413887, -0.022547081112861633, -1.2247029542922974, -0.0028174726758152246, -0.0007879013428464532, -2.2872982025146484, -0.012829032726585865, -0.1708318144083023, -0.0016959820641204715, -5.0424259825376794e-05, -0.035139527171850204, -0.0015138844028115273, -0.8984585404396057, -0.004705308936536312, -0.4556383788585663, -1.5602024793624878, -0.02514711022377014, -0.0010155049385502934, -1.0912470817565918, -0.9001086950302124, -1.0547292232513428, -0.01004285179078579, -0.0007213136414065957, -0.0008150592911988497, -0.7810631990432739, -0.07396001368761063, -0.8694453239440918, -0.0006416169344447553, -0.003427822608500719, -6.627816765103489e-05, -0.004026283510029316, -0.29061391949653625, -0.3794122040271759, -0.02586921863257885, -0.014234671369194984, -2.124352216720581, -0.6587759852409363, -0.1013086661696434, -1.6815361976623535, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.0003209791029803455, -5.149708886165172e-05, -0.17319925129413605], "finish_reason": "stop"}], "metrics": {"energy": 228.07922887229913, "energy_per_token": 1.1817576625507726, "time": 8.419115, "time_per_token": 0.04362235751295337}}
{"outputs": [{"text": "if not os.path.exists(log_dir):\n        print(f'An error occurred: [Errno 2] No such file or directory: {log_dir}')\n        return False\n    # Write the dictionary of metrics to the file\n    with open(os.path.join(log_dir, filename), 'a') as f:\n        for metric, value in metrics.items():\n            f.write(f'{metric} = {value}\\n')\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " [", "Err", "no", " ", "2", "]", " No", " such", " file", " or", " directory", ":", " {", "log", "_", "dir", "}", "')", "\n", "        ", "return", " False", "\n", "    ", "#", " Write", " the", " dictionary", " of", " metrics", " to", " the", " file", "\n", "    ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "')", " as", " f", ":", "\n", "        ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "            ", "f", ".", "write", "(", "f", "'{", "metric", "}", " =", " {", "value", "}\\", "n", "')", "\n", "    ", "return", " True", "\n", "\n", "def"], "logprobs": [-1.8861359357833862, -0.21806706488132477, -0.20104213058948517, -0.00014959646796341985, -0.0071010589599609375, -0.008580010384321213, -0.2703585624694824, -0.004726903047412634, -0.08361110836267471, -5.94836674281396e-05, -2.1576648578047752e-05, -0.01449025422334671, -0.044045478105545044, -0.0018239067867398262, -2.4702794551849365, -0.3484512269496918, -0.3326627016067505, -0.6964163780212402, -0.06737489253282547, -0.00033885458833537996, -0.0006331584881991148, -0.017826106399297714, -0.19786252081394196, -0.0010243174619972706, -0.0003106111544184387, -0.24141405522823334, -0.008765907026827335, -0.0016645636642351747, -0.0026977595407515764, -9.715084888739511e-05, -0.0006414977833628654, -0.0001740304142003879, -0.00015138434537220746, -0.00482774805277586, -0.6663723587989807, -0.01580473966896534, -7.30726242181845e-05, -0.0002022777043748647, -0.04772677272558212, -0.0027453135699033737, -0.006768395658582449, -0.007772677578032017, -0.019699756056070328, -0.007404147647321224, -0.0021429925691336393, -0.8589809536933899, -3.3933169841766357, -2.2512733936309814, -1.0526610612869263, -2.0720462799072266, -1.2910752296447754, -0.012385714799165726, -0.06040570139884949, -0.8657446503639221, -1.6491224765777588, -0.6227146983146667, -0.004781241994351149, -0.6652384400367737, -0.0027045360766351223, -0.004156878218054771, -0.18377390503883362, -0.0004294188693165779, -0.0003392120997887105, -0.002275855513289571, -0.00033718624035827816, -0.0003703146940097213, -0.004844356793910265, -2.0146166207268834e-05, -6.318072337307967e-06, -0.000356253091013059, -0.013667454943060875, -0.0012686545960605145, -0.00044967554276809096, -0.03428908810019493, -0.2298419028520584, -0.1443023830652237, -0.00015805903240107, -0.6240557432174683, -0.015102212317287922, -0.003975822124630213, -0.0022155519109219313, -0.6782565712928772, -1.1602437496185303, -0.46649596095085144, -0.02263122797012329, -7.557583012385294e-05, -0.002089104847982526, -0.0011133907828480005, -0.0002859421947505325, -8.380061626667157e-05, -0.005093929823487997, -0.0005969410995021462, -0.2589391767978668, -0.00011240804451517761, -0.0006111184484325349, -0.040456824004650116, -0.03156618773937225, -0.287748783826828, -0.15867237746715546, -1.2323026657104492, -0.8834380507469177, -0.00403981888666749, -0.022890616208314896, -0.6449135541915894, -0.004015004262328148, -0.0026043090038001537, -0.004087783861905336, -0.26871219277381897, -0.1630740910768509, -0.0050763762556016445, -0.19566801190376282, -0.015085538849234581, -0.6075462102890015], "finish_reason": "stop"}], "metrics": {"energy": 128.81377973556516, "energy_per_token": 1.1399449534120811, "time": 4.850874, "time_per_token": 0.04292808849557522}}
{"outputs": [{"text": "if not os.path.exists(log_dir):\n        os.makedirs(log_dir, exist_ok=True)\n    filename = os.path.join(log_dir, filename)\n\n    try:\n        with open(filename, 'a') as file:\n            for key, value in metrics.items():\n                file.write(f\"{key} {value} {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\\n\")\n        return True\n    except IOError:\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "filename", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "filename", ",", " '", "a", "')", " as", " file", ":", "\n", "            ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "file", ".", "write", "(", "f", "\"", "{", "key", "}", " {", "value", "}", " {", "datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "}\\", "n", "\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " IO", "Error", ":", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-1.8861359357833862, -0.21806706488132477, -0.20104213058948517, -0.00014959646796341985, -0.0071010589599609375, -0.008580010384321213, -0.2703585624694824, -0.004726903047412634, -0.08361110836267471, -5.94836674281396e-05, -2.1576648578047752e-05, -0.01449025422334671, -0.044045478105545044, -0.0018239067867398262, -0.49996915459632874, -0.00040391870425082743, -0.3640682101249695, -0.0002379134384682402, -0.003943287767469883, -0.0005882440018467605, -0.006252845283597708, -2.825220326485578e-05, -1.3828182090946939e-05, -2.4564602375030518, -0.24585260450839996, -1.311301275563892e-06, -0.0002637753786984831, -0.0029526231810450554, -0.01565101183950901, -0.002919223625212908, -0.029813595116138458, -0.8483895659446716, -2.9363503456115723, -0.028460867702960968, -0.29550448060035706, -0.0003326578007545322, -0.0003081085451412946, -0.009218155406415462, -0.01927175186574459, -0.0006706849089823663, -0.008434033952653408, -1.0251946150674485e-05, -1.9907753085135482e-05, -0.000700466800481081, -0.010211603716015816, -0.003049249993637204, -0.0075737000443041325, -1.0417462587356567, -0.0006858142442069948, -0.6266269087791443, -0.0001463782973587513, -0.0016248131869360805, -0.002188075101003051, -0.26251837611198425, -0.002895926358178258, -0.0004032037395518273, -0.002690150635316968, -0.0024791003670543432, -0.07269423454999924, -0.20997394621372223, -0.3269139528274536, -0.00019560330838430673, -1.1289424896240234, -0.010893164202570915, -0.003447662340477109, -0.0023611304350197315, -0.7208707928657532, -0.7435276508331299, -0.04508322849869728, -0.07005038112401962, -9.417090768693015e-05, -0.00673760985955596, -0.0013581824023276567, -0.0003159739135298878, -6.4490144723095e-05, -0.0035511308815330267, -0.00042846560245379806, -0.27599701285362244, -0.0003513672563713044, -0.0009951406391337514, -0.15955407917499542, -0.0630357414484024, -0.7223362922668457, -0.025109561160206795, -0.32177677750587463, -1.6908533573150635, -2.372103691101074, -0.08905767649412155, -0.5005688667297363, -0.2832021713256836, -0.02427230216562748, -6.878139538457617e-05, -0.05649545043706894, -0.10316754877567291, -0.38613802194595337, -0.17220264673233032, -5.2569914259947836e-05, -0.0033426384907215834, -0.0017665509367361665, -0.23494629561901093, -0.029657956212759018, -0.0008644896443001926, -4.1483970562694594e-05, -4.1960789531003684e-05, -0.025169312953948975, -0.0047050719149410725, -0.0008205384365282953, -3.671578815556131e-05, -0.0022094857413321733, -0.0002935693773906678, -0.6560829877853394, -0.0014872215688228607, -0.0012023370945826173, -0.0005258131423033774, -0.0009540535393171012, -0.0028921226039528847, -0.5527787804603577, -0.06806715577840805, -0.006650812458246946, -0.0035727499052882195, -0.0690540298819542, -0.0012219827622175217, -2.460104465484619, -9.536288416711614e-05, -0.669833242893219, -0.00762551836669445, -0.0005932478234171867, -0.5000301003456116, -0.0021083762403577566, -0.3886985778808594, -0.042680464684963226, -0.8626790046691895], "finish_reason": "stop"}], "metrics": {"energy": 142.86238427352913, "energy_per_token": 1.0822907899509782, "time": 5.68389, "time_per_token": 0.043059772727272724}}
{"outputs": [{"text": "try:\n        with open(os.path.join(log_dir, filename), 'a', encoding='utf-8') as f:\n            for key, val in metrics.items():\n                f.write(f\"{datetime.now():%H:%M:%S} - {key}: {val}\\n\")\n        return True\n    except:\n        return False", "tokens": ["try", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "            ", "for", " key", ",", " val", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "f", "\"", "{", "datetime", ".", "now", "():", "%", "H", ":%", "M", ":%", "S", "}", " -", " {", "key", "}:", " {", "val", "}\\", "n", "\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", ":", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -1.417752742767334, -0.01794554479420185, -0.006461797747761011, -0.15728875994682312, -1.0132738680113107e-05, -0.0005245024804025888, -0.0036052961368113756, -0.000442407006630674, -0.0004182179400231689, -0.008860438130795956, -2.2053474822314456e-05, -2.3483953555114567e-05, -0.000390215078368783, -0.015172664076089859, -0.002392170252278447, -0.001007764250971377, -0.08021736145019531, -0.31576091051101685, -2.2755277156829834, -0.005800794344395399, -0.05292515829205513, -0.04983600229024887, -0.039759837090969086, -0.09814001619815826, -0.000982278841547668, -0.02602742426097393, -0.0040862406603991985, -0.681032121181488, -0.04375500604510307, -0.004055490717291832, -0.005493544042110443, -1.1277861595153809, -0.8257190585136414, -0.05153656005859375, -1.8434163331985474, -0.0009715604246594012, -0.012324369512498379, -0.0026777861639857292, -0.0008287570672109723, -0.00013267113536130637, -0.004663543310016394, -0.0010639727115631104, -0.24032826721668243, -0.00014935807848814875, -0.000856747676152736, -0.14241468906402588, -0.11658694595098495, -0.8499723672866821, -0.033029258251190186, -1.4336063861846924, -0.00011276562872808427, -0.06886465847492218, -1.9582927227020264, -0.2276710569858551, -2.152024507522583, -0.017665429040789604, -0.0002748588449321687, -0.07132839411497116, -0.0016534955939278007, -0.08469142764806747, -1.2025060653686523, -0.051063183695077896, -0.01039731502532959, -0.28238287568092346, -0.026399487629532814, -0.026387877762317657, -0.12771837413311005, -0.0022184066474437714, -0.000985494232736528, -0.002204370917752385, -0.00817358773201704, -0.8065952062606812, -0.07973040640354156, -0.007262141909450293, -0.006116599775850773, -0.055273909121751785, -0.00283946399576962, -2.701903820037842, -0.03126860037446022, -0.0013235389487817883, -0.5990327000617981, -0.003336103865876794, -0.5521474480628967, -0.03093278780579567, -0.8711945414543152], "finish_reason": "stop"}], "metrics": {"energy": 124.1550336799622, "energy_per_token": 1.3950003784265417, "time": 3.8024545, "time_per_token": 0.04272420786516854}}
{"outputs": [{"text": "if not os.path.exists(log_dir):\n        os.makedirs(log_dir)\n\n    try:\n        with open(os.path.join(log_dir, filename), 'a') as f:\n            for metric, value in metrics.items():\n                timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n                f.write(f'{metric}: {value}, {timestamp}\\n')\n            f.close()\n        return True\n    except Exception as err:\n        print('An error occurred: ', err)\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "                ", "f", ".", "write", "(", "f", "'{", "metric", "}:", " {", "value", "}", ",", " {", "timestamp", "}\\", "n", "')", "\n", "            ", "f", ".", "close", "()", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " err", ":", "\n", "        ", "print", "('", "An", " error", " occurred", ":", " '", ",", " err", ")", "\n", "        ", "return", " False"], "logprobs": [-1.8861359357833862, -0.21806706488132477, -0.20104213058948517, -0.00014959646796341985, -0.0071010589599609375, -0.008580010384321213, -0.2703585624694824, -0.004726903047412634, -0.08361110836267471, -5.94836674281396e-05, -2.1576648578047752e-05, -0.01449025422334671, -0.044045478105545044, -0.0018239067867398262, -0.49996915459632874, -0.00040391870425082743, -0.3640682101249695, -0.0002379134384682402, -0.003943287767469883, -0.0005882440018467605, -0.006252845283597708, -2.825220326485578e-05, -1.3828182090946939e-05, -0.08980865031480789, -0.025340180844068527, -0.5848942399024963, -0.0010378933511674404, -1.1946454048156738, -0.00022110878489911556, -0.0016890796832740307, -0.007118103560060263, -0.4538438618183136, -0.003959317691624165, -0.00486060930415988, -0.17355507612228394, -0.0003588747640606016, -0.00032824851223267615, -0.002715354785323143, -0.0003873551613651216, -0.00041416651220060885, -0.004111884627491236, -2.7418097943154862e-06, -4.291525328881107e-06, -0.0002803409588523209, -0.016681354492902756, -0.0018221217906102538, -0.000651147507596761, -0.06733143329620361, -0.13754092156887054, -0.21090465784072876, -0.0002294515579706058, -0.5537397265434265, -0.033198557794094086, -0.003059114096686244, -0.0033680638298392296, -1.0786609649658203, -1.2547650337219238, -0.40358731150627136, -0.031717486679553986, -8.594620157964528e-05, -0.004216589964926243, -0.0018317601643502712, -0.0006547214579768479, -9.190614218823612e-05, -0.003941625356674194, -0.0006803343421779573, -1.796773076057434, -0.011670294217765331, -0.04029298573732376, -8.21318244561553e-05, -0.04429047554731369, -0.00029023250681348145, -0.023979289457201958, -0.046311698853969574, -5.125868119648658e-05, -0.20706361532211304, -0.03850917890667915, -0.0799652710556984, -0.01686997152864933, -0.00029774048016406596, -5.400034933700226e-05, -2.2172682292875834e-05, -0.0691991001367569, -0.0016897936584427953, -0.0006256530177779496, -1.490105023549404e-05, -0.003740933956578374, -0.00024470672360621393, -0.2514844536781311, -0.02235906571149826, -0.0055913482792675495, -0.1496221423149109, -0.00024184639914892614, -0.001754293916746974, -0.0809500440955162, -0.029984712600708008, -0.8119701743125916, -0.47398245334625244, -0.5248160362243652, -0.030138911679387093, -0.028420547023415565, -0.10501997172832489, -0.6453412175178528, -0.28834062814712524, -0.003693308448418975, -0.04096454009413719, -0.0003927174839191139, -0.0017971331253647804, -0.0018394945655018091, -1.125632643699646, -1.5578956604003906, -8.916457591112703e-05, -0.4632430672645569, -0.00805723387748003, -0.002668155822902918, -0.5673324465751648, -0.04814038798213005, -0.005742125678807497, -0.005126663949340582, -0.10041350871324539, -0.0023268787190318108, -0.7642068862915039, -0.09139660745859146, -2.8587121963500977, -0.0005609607324004173, -0.01098808366805315, -0.0009542917250655591, -0.10042127221822739, -2.2199223041534424, -0.010177265852689743, -0.000570253818295896, -0.0013731822837144136, -1.0007866621017456, -0.20098401606082916, -0.24079321324825287, -0.09922419488430023, -0.06719757616519928, -0.004024977795779705, -0.0226410161703825, -0.014873094856739044, -0.0010350352386012673], "finish_reason": "stop"}], "metrics": {"energy": 144.4146022109985, "energy_per_token": 1.0242170369574362, "time": 6.1055584, "time_per_token": 0.043301832624113475}}
{"outputs": [{"text": "# Check if the log directory exists and create it if it doesn't\n    if not os.path.exists(log_dir):\n        os.makedirs(log_dir)\n\n    # Create the timestamped file name\n    timestamp = datetime.now().strftime(\"%Y-%m-%d_%H-%M-%S\")\n    file_name = f'{timestamp}.log'\n    log_file = os.path.join(log_dir, filename)\n\n    # Check if the file already exists and append the timestamp to the file name\n    if os.path.exists(log_file):\n        count = 1\n        while os.path.exists(f\"{log_file}{count}\"):\n            count += 1\n        file_name = f\"{count}.log\"\n        timestamp = datetime.now().strftime(\"%Y-%m-%d_%H-%M-%S\")\n        log_file = os.path.join(log_dir, f\"{timestamp}{file_name}\")\n\n    # Write the metrics to the log file\n    with open(", "tokens": ["#", " Check", " if", " the", " log", " directory", " exists", " and", " create", " it", " if", " it", " doesn", "'", "t", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "\n", "    ", "#", " Create", " the", " timestamp", "ed", " file", " name", "\n", "    ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", "_", "%", "H", "-%", "M", "-%", "S", "\"", ")", "\n", "    ", "file", "_", "name", " =", " f", "'{", "timestamp", "}", ".", "log", "'", "\n", "    ", "log", "_", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " file", " already", " exists", " and", " append", " the", " timestamp", " to", " the", " file", " name", "\n", "    ", "if", " os", ".", "path", ".", "exists", "(", "log", "_", "file", "):", "\n", "        ", "count", " =", " ", "1", "\n", "        ", "while", " os", ".", "path", ".", "exists", "(", "f", "\"", "{", "log", "_", "file", "}{", "count", "}\"", "):", "\n", "            ", "count", " +=", " ", "1", "\n", "        ", "file", "_", "name", " =", " f", "\"", "{", "count", "}", ".", "log", "\"", "\n", "        ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", "_", "%", "H", "-%", "M", "-%", "S", "\"", ")", "\n", "        ", "log", "_", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " f", "\"", "{", "timestamp", "}{", "file", "_", "name", "}\"", ")", "\n", "\n", "    ", "#", " Write", " the", " metrics", " to", " the", " log", " file", "\n", "    ", "with", " open", "("], "logprobs": [-1.4080322980880737, -1.4041237831115723, -0.507750928401947, -0.6341384053230286, -0.5688394904136658, -0.3977448642253876, -0.016756735742092133, -2.2033793926239014, -0.6023473143577576, -0.01887737400829792, -0.007677334360778332, -0.3163934051990509, -0.15623334050178528, -0.0002787916746456176, -1.0847986231965479e-05, -0.39653119444847107, -0.0015074567636474967, -0.2463674545288086, -0.01451187301427126, -0.0028607419226318598, -6.437280717364047e-06, -0.000890097115188837, -0.002970332745462656, -0.18257786333560944, -0.00032062159152701497, -0.011947030201554298, -3.516612196108326e-05, -8.4638240878121e-06, -0.016876183450222015, -0.00244770641438663, -0.0016388569492846727, -0.2663520574569702, -0.00016318420239258558, -0.15233634412288666, -6.854299135738984e-05, -0.0009588173124939203, -0.000179036331246607, -0.0024044194724410772, -3.123234637314454e-05, -1.6212332411669195e-05, -0.02745152823626995, -0.0031411137897521257, -0.14090609550476074, -0.001311871805228293, -0.14909666776657104, -1.5329707860946655, -0.5999736785888672, -2.7536237239837646, -0.18606095016002655, -1.9839658737182617, -0.49470460414886475, -0.3657133877277374, -0.00042167355422861874, -0.23172734677791595, -0.1015745997428894, -0.007074662949889898, -2.0265373677830212e-05, -0.027483422309160233, -0.00010430268594063818, -0.0023522109258919954, -0.011661693453788757, -1.9907753085135482e-05, -1.486462116241455, -0.020293349400162697, -0.016569504514336586, -0.028299223631620407, -0.3297496736049652, -0.00032574593205936253, -6.16293036728166e-05, -3.9934315282152966e-05, -0.6542582511901855, -0.00126079679466784, -0.0006680640508420765, -0.3054385185241699, -5.7338023907504976e-05, -0.003822996746748686, -0.001116844010539353, -0.08149167895317078, -0.0003010773507412523, -0.015445731580257416, -0.009296462871134281, -1.380459189414978, -0.06335658580064774, -0.18936702609062195, -0.0007618147064931691, -0.6421594023704529, -1.4480082988739014, -1.418748140335083, -0.7505063414573669, -0.030312402173876762, -0.18803858757019043, -0.0011560192797333002, -0.005768912378698587, -0.2967129647731781, -2.012354612350464, -0.017042849212884903, -0.4534575939178467, -0.14712026715278625, -0.06763830780982971, -8.106198947643861e-06, -8.83301836438477e-05, -0.0037373711820691824, -0.00040391870425082743, -0.00010466027742950246, -0.0031179406214505434, -1.1920858014491387e-05, -7.033323527139146e-06, -0.00011407678539399058, -1.7901736497879028, -0.00553266704082489, -0.007643027231097221, -0.07690412551164627, -0.0003678122302517295, -0.14750884473323822, -2.1903316974639893, -0.03538107872009277, -0.13458585739135742, -0.5347455143928528, -0.7658449411392212, -0.003057688008993864, -0.6500798463821411, -1.204017162322998, -0.780750572681427, -0.9182488918304443, -0.899609386920929, -0.5352530479431152, -1.4066143035888672, -0.07423952221870422, -0.3746545612812042, -0.0006093314150348306, -0.4011370539665222, -0.062220249325037, -3.611976353568025e-05, -8.129743218887597e-05, -0.0004745787591673434, -0.07896366715431213, -0.0001245659514097497, -0.02965552546083927, -1.9073304429184645e-05, -0.0007265550084412098, -0.031994618475437164, -0.001320086419582367, -0.0012719882652163506, -3.7579541206359863, -0.0014571059728041291, -0.005267906002700329, -0.16556186974048615, -0.011423771269619465, -0.034989435225725174, -0.09119106829166412, -1.0348303318023682, -5.4596363042946905e-05, -4.768360213347478e-06, -2.3007127310847864e-05, -0.005587554536759853, -0.0030578067526221275, -1.4437763690948486, -2.06331467628479, -0.0008459088858217001, -1.1629546880722046, -3.909988299710676e-05, -0.032411325722932816, -3.490602493286133, -0.20447325706481934, -0.12296488881111145, -0.0028140253853052855, -0.00662073353305459, -0.0006302992696873844, -0.009922466240823269, -0.005369171034544706, -0.0012424614978954196, -2.8967437174287625e-05, -0.0012775840004906058, -0.040841180831193924, -0.2597840428352356, -0.0015887507470324636, -0.0013921103673055768, -0.0019743014127016068, -0.0065322681330144405, -0.09079575538635254, -0.0017853525932878256, -1.325690507888794, -0.5358529686927795, -0.003897215472534299, -0.07052230089902878, -0.0006361367995850742, -0.004733547102659941, -1.8379895687103271, -2.5398213863372803, -0.27062806487083435, -0.9920751452445984, -0.00013636612857226282, -0.002645209664478898, -7.593343616463244e-05, -0.001831641187891364, -0.0007934997556731105, -0.0001102625101339072, -0.0023098711390048265, -0.001838304684497416, -0.07176253944635391, -0.011143000796437263, -0.00557901943102479, -8.666139910928905e-05, -3.564294092939235e-05, -8.487341256113723e-05, -0.014465698041021824, -0.00012742661056108773, -0.0001578206429257989, -0.0014279417227953672, -5.090107151772827e-05, -0.0005756151513196528, -0.000341476290486753, -0.018267253413796425, -0.0006193388253450394, -0.0034027553629130125, -1.2938125133514404, -0.10129035264253616, -0.00047839165199548006, -0.0010962436208501458, -0.011447224766016006, -0.036392681300640106, -0.00013779645087197423, -1.728519782773219e-05, -0.0030328489374369383, -0.00020072828920092434, -0.000316212244797498, -0.010231545194983482, -1.7881377516459906e-06, -0.00025018901214934886, -8.153582894010469e-05, -0.721422553062439, -0.16968940198421478, -0.002332468517124653, -0.3552471101284027, -1.724661111831665, -0.6192429661750793, -0.0013360392767935991, -0.0017487009754404426, -0.008038549683988094, -0.0009634620510041714, -0.003733214223757386, -0.03827446326613426, -0.009108892641961575, -0.24663306772708893, -0.8041681051254272, -0.2492249608039856, -0.11818000674247742, -0.10021240264177322, -0.07006149739027023, -0.5968927145004272, -0.0065798768773674965, -0.1505117565393448, -0.0009378563845530152, -0.7185623049736023, -0.0005224770284257829, -0.00019905969384126365], "finish_reason": "length"}], "metrics": {"energy": 267.02020453834535, "energy_per_token": 1.0430476739779115, "time": 11.352112, "time_per_token": 0.0443441875}}
{"outputs": [{"text": "try:\n        metrics_dict = {key.upper(): val for key, val in metrics.items()}\n        if log_dir is not None:\n            logfile = os.path.join(log_dir, filename)\n        else:\n            logfile = filename\n\n        with open(logfile, 'w') as f:\n            for metric_name, metric_value in metrics_dict.items():\n                f.write(f\"{metric_name} - {metric_value}\\n\")\n    except Exception as e:\n        print(e)\n        return False\n\n    return True", "tokens": ["try", ":", "\n", "        ", "metrics", "_", "dict", " =", " {", "key", ".", "upper", "():", " val", " for", " key", ",", " val", " in", " metrics", ".", "items", "()}", "\n", "        ", "if", " log", "_", "dir", " is", " not", " None", ":", "\n", "            ", "log", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "        ", "else", ":", "\n", "            ", "log", "file", " =", " filename", "\n", "\n", "        ", "with", " open", "(", "log", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "for", " metric", "_", "name", ",", " metric", "_", "value", " in", " metrics", "_", "dict", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "f", "\"", "{", "metric", "_", "name", "}", " -", " {", "metric", "_", "value", "}\\", "n", "\"", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "e", ")", "\n", "        ", "return", " False", "\n", "\n", "    ", "return", " True", "\n", "\n", "def"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -3.5462145805358887, -0.4727582633495331, -2.2589004039764404, -0.024619782343506813, -1.0760345458984375, -2.6969258785247803, -2.671036720275879, -2.3726346492767334, -0.03677389398217201, -2.335754871368408, -0.022560134530067444, -0.04358120635151863, -0.000439428084064275, -0.003499932587146759, -0.002889864146709442, -0.012409145012497902, -0.010076014325022697, -0.007415744010359049, -0.017326537519693375, -0.06403542309999466, -0.18349015712738037, -3.0271782875061035, -2.8715476989746094, -0.0012324602575972676, -0.0035727499052882195, -0.8579317927360535, -0.47298285365104675, -0.011045148596167564, -0.16512830555438995, -0.015437163412570953, -0.002148583298549056, -1.734161138534546, -2.1773765087127686, -0.11396040767431259, -0.13344725966453552, -1.0847986231965479e-05, -0.0009647720726206899, -0.0012292455649003386, -0.0028834454715251923, -0.0006997520686127245, -0.017244404181838036, -6.48477507638745e-05, -8.583032467868179e-06, -0.0007198841194622219, -0.045751575380563736, -0.0063714231364429, -0.007906569167971611, -0.5280206799507141, -0.13021425902843475, -0.00010024998482549563, -0.008493845351040363, -0.000645429186988622, -0.023466017097234726, -0.0011344670783728361, -0.0005638201837427914, -0.2580869495868683, -0.008158689364790916, -1.2875829935073853, -0.00352167128585279, -0.5538148283958435, -0.003254357725381851, -0.0007088055717758834, -0.010094188153743744, -0.00014304091746453196, -0.005921914242208004, -0.1070781722664833, -1.5423126220703125, -0.140029639005661, -0.0004236992390360683, -0.5648941397666931, -0.056652601808309555, -0.004434988368302584, -0.0034675016067922115, -1.075888991355896, -2.296609401702881, -1.641226053237915, -0.023964274674654007, -0.082823745906353, -0.16812822222709656, -0.008211896754801273, -0.09556755423545837, -0.00016437610611319542, -0.004938902799040079, -0.013910486362874508, -2.3841830625315197e-06, -0.0009497660794295371, -0.000316927267704159, -5.98412734689191e-05, -0.005140183959156275, -0.0015017433324828744, -0.5126526355743408, -0.0007952864980325103, -0.001019673072732985, -0.2588304877281189, -0.1582152396440506, -0.4582468569278717, -0.03836555778980255, -0.12390433251857758, -0.0006164796068333089, -0.0019593106117099524, -1.510737657546997, -2.3585944175720215, -0.00876094400882721, -0.03451898321509361, -0.00018690270371735096, -8.570780482841656e-05, -0.21096643805503845, -0.0012743694242089987, -0.001292465953156352, -0.0019075546879321337, -0.008760353550314903, -2.0821280479431152, -0.005100809037685394, -0.765435516834259, -0.10439696907997131, -0.1191980317234993, -0.00025233422638848424, -0.01708175614476204, -0.0012959185987710953, -0.14180949330329895, -0.06506012380123138, -2.583099842071533, -0.03881482407450676, -0.011517344042658806, -0.040843356400728226, -0.05371561646461487, -0.0038921094965189695, -0.015603011474013329, -1.4245502948760986, -0.019333725795149803, -0.05651066079735756, -0.009692512452602386, -0.36023837327957153, -0.0060241795144975185, -0.8436964750289917], "finish_reason": "stop"}], "metrics": {"energy": 133.32301938629146, "energy_per_token": 0.9591584128510178, "time": 5.888748, "time_per_token": 0.04236509352517985}}
{"outputs": [{"text": "log_file_path = os.path.join(log_dir, filename)\n    try:\n        with open(log_file_path, 'a') as f:\n            f.write('[{}]\\n'.format(datetime.now().strftime(\"%Y-%m-%d %H:%M:%S.%f\")))\n            for k, v in metrics.items():\n                f.write('{}: {}\\n'.format(k, v))\n            f.write('\\n')\n    except FileNotFoundError:\n        print('An error occurred: [Errno 2] No such file or directory: %s' % (log_file_path))\n        return False\n    return True", "tokens": ["log", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "log", "_", "file", "_", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "('", "[", "{}", "]\\", "n", "'", ".", "format", "(", "datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", ".", "%", "f", "\"", ")))", "\n", "            ", "for", " k", ",", " v", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "('", "{}", ":", " {}\\", "n", "'", ".", "format", "(", "k", ",", " v", "))", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "print", "('", "An", " error", " occurred", ":", " [", "Err", "no", " ", "2", "]", " No", " such", " file", " or", " directory", ":", " %", "s", "'", " %", " (", "log", "_", "file", "_", "path", "))", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "\n", "\n", "#"], "logprobs": [-3.003270149230957, -0.2059544026851654, -0.47716212272644043, -2.279163360595703, -0.22091232240200043, -0.0017447738209739327, -0.051375433802604675, -1.3232143828645349e-05, -0.0002809368306770921, -0.005553887225687504, -0.001019911258481443, -0.0002746204845607281, -0.01372460275888443, -1.0967194612021558e-05, -2.276871418871451e-05, -0.0005264088395051658, -0.023671170696616173, -0.003289290703833103, -0.010386579670011997, -0.4141984283924103, -0.45052021741867065, -0.00025567124248482287, -0.0021061161532998085, -0.004343955311924219, -0.3369578719139099, -0.0023443615064024925, -0.0004400238685775548, -0.005254743155092001, -9.667406266089529e-05, -6.913899414939806e-05, -5.447716102935374e-05, -2.0265558760002023e-06, -0.0020626953337341547, -0.062054336071014404, -0.21477879583835602, -0.25926512479782104, -0.0002308817347511649, -1.1174688339233398, -0.029365243390202522, -0.004809834063053131, -0.002798809204250574, -1.632293462753296, -0.002658406738191843, -0.010717215947806835, -1.133758783340454, -3.5016727447509766, -1.0213872194290161, -0.05615030974149704, -0.02070772275328636, -0.08102919906377792, -0.0038390285335481167, -0.00043871314846910536, -0.002195925684645772, -0.05916421115398407, -0.0001892864383989945, -0.03569021075963974, -1.0888676643371582, -0.0012281740782782435, -0.431845098733902, -8.40390202938579e-05, -1.950729250907898, -0.0358830988407135, -0.0016230279579758644, -0.40705734491348267, -0.09552714228630066, -0.0012423424050211906, -0.000284154579276219, -0.0001902399235405028, -0.08824796229600906, -0.0047271400690078735, -0.002314509591087699, -9.643566590966657e-05, -0.006263033486902714, -0.000675807474181056, -2.839277505874634, -0.0010245556477457285, -0.004907586146146059, -0.01565723307430744, -0.32993218302726746, -0.008332961238920689, -0.02588641084730625, -0.30303314328193665, -1.801527500152588, -0.013565145432949066, -0.015296880155801773, -0.00025567124248482287, -0.007916267029941082, -0.002393954200670123, -0.0012350797187536955, -0.00011693747364915907, -0.0035259476862847805, -0.0009731086320243776, -0.022407442331314087, -2.47952248173533e-05, -0.0004905451205559075, -0.14693832397460938, -0.5169735550880432, -0.16005894541740417, -0.04168206825852394, -0.0006225554971024394, -0.0008335214806720614, -5.531158240046352e-05, -0.0006185048841871321, -0.0003152588615193963, -0.016293928027153015, -0.011075920425355434, -0.030883897095918655, -0.0006949870148673654, -0.0006360176485031843, -1.0233514308929443, -0.03774069994688034, -3.540453326422721e-05, -0.0056115007027983665, -0.005470662377774715, -0.05742863938212395, -0.0002661589242052287, -0.022216252982616425, -0.006662299390882254, -0.9513577818870544, -0.004467388149350882, -1.5965909957885742, -0.0026521054096519947, -2.5629668016335927e-05, -0.29075512290000916, -0.02157445065677166, -0.0011436357162892818, -0.7996940612792969, -0.5294259786605835, -0.04016553610563278, -0.0003400462737772614, -0.0006494796834886074, -0.12865358591079712, -0.38453149795532227, -0.0028219898231327534, -0.001666586846113205, -0.805329442024231, -0.005105434451252222, -0.001384134404361248, -0.0019900058396160603, -0.00012718822108581662, -0.00031799983116798103, -8.5588610090781e-05, -9.548207890475169e-05, -0.17400184273719788, -3.4196908473968506, -0.059496741741895676, -0.0207754448056221, -0.045578692108392715, -2.252326011657715, -0.11227782070636749, -0.00015507926582358778, -0.03374604880809784, -0.0016530195716768503, -0.000179036331246607, -0.07648512721061707, -0.005044945515692234, -0.06670857965946198, -0.04005742818117142, -0.0030358200892806053, -0.012880696915090084, -0.08069616556167603, -0.8304005265235901, -0.0029593980871140957, -0.6410096883773804, -0.017555328086018562, -2.81630277633667], "finish_reason": "stop"}], "metrics": {"energy": 170.0549425106049, "energy_per_token": 1.0244273645217161, "time": 7.1555963, "time_per_token": 0.043106001807228914}}
{"outputs": [{"text": "# Ensure the log directory exists.\n    os.makedirs(log_dir, exist_ok=True)\n\n    # Open the log file for writing.\n    with open(os.path.join(log_dir, filename), 'a') as file:\n        # Get the current timestamp.\n        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n\n        # Write the metrics to the file.\n        file.write(f'Time: {timestamp}\\n')\n        for metric, value in metrics.items():\n            file.write(f'{metric}: {value}\\n')\n        file.write('\\n')\n\n    return True", "tokens": ["#", " Ensure", " the", " log", " directory", " exists", ".", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Open", " the", " log", " file", " for", " writing", ".", "\n", "    ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "')", " as", " file", ":", "\n", "        ", "#", " Get", " the", " current", " timestamp", ".", "\n", "        ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "        ", "#", " Write", " the", " metrics", " to", " the", " file", ".", "\n", "        ", "file", ".", "write", "(", "f", "'", "Time", ":", " {", "timestamp", "}\\", "n", "')", "\n", "        ", "for", " metric", ",", " value", " in", " metrics", ".", "items", "():", "\n", "            ", "file", ".", "write", "(", "f", "'{", "metric", "}:", " {", "value", "}\\", "n", "')", "\n", "        ", "file", ".", "write", "('", "\\", "n", "')", "\n", "\n", "    ", "return", " True", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.4080322980880737, -3.1651835441589355, -0.7986516952514648, -0.4902295172214508, -0.41543251276016235, -0.015124640427529812, -3.092013359069824, -0.07910135388374329, -0.004627709276974201, -2.5628888607025146, -0.0009277330245822668, -0.013403899036347866, -6.329813186312094e-05, -0.0005913416389375925, -0.0009454786195419729, -0.04536590725183487, -0.00010096516780322418, -2.4676019165781327e-05, -0.0008362610242329538, -0.007980485446751118, 0.0, -7.271502545336261e-05, -0.0011937642702832818, -0.0007445423980243504, -0.0010783816687762737, -0.0024219010956585407, -0.15526174008846283, -0.0003719830128829926, -0.22888627648353577, -2.520676612854004, -0.09283202141523361, -0.44403955340385437, -0.004540016409009695, -0.985730767250061, -0.7776046991348267, -0.4095427095890045, -0.006270378362387419, -0.0004325169720686972, -1.6414775848388672, -0.004126368090510368, -0.0025630502495914698, -0.13471995294094086, -0.0003303935518488288, -0.0002026352594839409, -0.00843119714409113, -0.00016080040950328112, -0.00021324267436284572, -0.002422971185296774, -1.9907753085135482e-05, -6.794906312279636e-06, -0.000163541772053577, -0.008961457759141922, -0.0018960132729262114, -0.0007883778307586908, -0.0364445224404335, -0.28412750363349915, -0.14755544066429138, -0.00015889335190877318, -1.6404821872711182, -0.009111727587878704, -0.00042250767000950873, -0.056740570813417435, -0.4720645248889923, -2.6582393646240234, -0.1416519284248352, -0.042865727096796036, -0.5944323539733887, -0.406022846698761, -0.002283705398440361, -0.00020454221521504223, -0.1455351710319519, -0.003296063281595707, -0.012287513352930546, -2.312633478140924e-05, -0.02569786086678505, -0.00018654513405635953, -0.011882594786584377, -0.02715259976685047, -3.6954195820726454e-05, -0.15547452867031097, -0.02642909437417984, -0.053576987236738205, -0.03601212799549103, -0.0002798642381094396, -3.93382906622719e-05, -2.3841574147809297e-05, -0.2488393932580948, -0.0018506796332076192, -0.005349369253963232, -1.4066597032069694e-05, -0.00858178362250328, -0.00029094755882397294, -0.2089005559682846, -0.011780102737247944, -0.17152675986289978, -0.0007385863573290408, -0.042045269161462784, -0.6752738952636719, -0.3611123859882355, -0.9382388591766357, -0.1960492581129074, -0.008318065665662289, -0.9066465497016907, -0.42443951964378357, -0.007208529394119978, -0.000658057106193155, -1.1977810859680176, -0.0008025524439290166, -0.009940524585545063, -0.1351904422044754, -0.2842170298099518, -1.598395824432373, -1.9459779262542725, -0.08830024302005768, -0.006227967329323292, -0.0010681406129151583, -0.24409271776676178, -0.022620156407356262, -0.03002462349832058, -0.002882851054891944, -0.08840096741914749, -0.21524500846862793, -1.5161551237106323, -0.2700303792953491, -0.005409128498286009, -4.8397800128441304e-05, -0.00101383775472641, -0.0009031984372995794, -0.00013910756388213485, -3.540453326422721e-05, -0.0010388459777459502, -0.0006324436399154365, -0.022981025278568268, -1.3112935448589269e-05, -0.00011777184408856556, -0.006896620616316795, -0.000880568812135607, -0.08565733581781387, -0.001022888463921845, -0.051943957805633545, -0.002525594551116228, -0.01231212355196476, -0.07414388656616211, -0.00022146634000819176, -0.0002928543253801763, -0.008772525005042553, -0.32111024856567383, -0.08066163212060928, -3.540453326422721e-05, -0.0009035557159222662, -0.01012994535267353, -0.04306408390402794, -0.0002060916303889826, -0.009837479330599308, -0.062389157712459564, -0.16934387385845184, -0.2527633011341095, -0.430329293012619, -0.08578469604253769, -1.3844243288040161, -1.1920928244535389e-07, -9.536738616588991e-07, -3.0636318115284666e-05, -5.638440416078083e-05, -0.12133604288101196], "finish_reason": "stop"}], "metrics": {"energy": 187.75839243698107, "energy_per_token": 1.1379296511332186, "time": 7.3711123, "time_per_token": 0.04467340787878788}}
{"outputs": [{"text": "log_path = os.path.join(log_dir, filename)\n\n    try:\n        log_file = open(log_path, \"a+\")\n\n    except OSError as err:\n        print(f'An error occurred: {err}')\n        return False\n\n    else:\n        try:\n            now = datetime.now()\n            log_file.write(f'{now}, {metrics}\\n')\n            log_file.write(f'--------------------------------------------\\n')\n\n            log_file.close()\n            return True\n\n        except Exception:\n            print(f'An error occurred: {err}')\n            return False\n\n    finally:\n        if os.path.isfile(log_path):\n            os.remove(log_path)", "tokens": ["log", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "log", "_", "file", " =", " open", "(", "log", "_", "path", ",", " \"", "a", "+", "\"", ")", "\n", "\n", "    ", "except", " O", "SE", "rror", " as", " err", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "err", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "    ", "else", ":", "\n", "        ", "try", ":", "\n", "            ", "now", " =", " datetime", ".", "now", "()", "\n", "            ", "log", "_", "file", ".", "write", "(", "f", "'{", "now", "}", ",", " {", "metrics", "}\\", "n", "')", "\n", "            ", "log", "_", "file", ".", "write", "(", "f", "'", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "--\\", "n", "')", "\n", "\n", "            ", "log", "_", "file", ".", "close", "()", "\n", "            ", "return", " True", "\n", "\n", "        ", "except", " Exception", ":", "\n", "            ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "err", "}", "')", "\n", "            ", "return", " False", "\n", "\n", "    ", "f", "inally", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "log", "_", "path", "):", "\n", "            ", "os", ".", "remove", "(", "log", "_", "path", ")", "\n", "\n", "def"], "logprobs": [-3.003270149230957, -0.2059544026851654, -1.5523650646209717, -0.004369830247014761, -0.04131530225276947, -1.8000440832111053e-05, -0.0004266782198101282, -0.012133244425058365, -0.0022142434027045965, -0.0005267662927508354, -0.012293165549635887, -1.6927575416048057e-05, -4.005352093372494e-05, -0.0005214046686887741, -0.027279745787382126, -0.003664684481918812, -0.009608923457562923, -1.1809769868850708, -0.0008468617452308536, -0.49093714356422424, -0.00022671037004329264, -0.0028313808143138885, -0.0038231154903769493, -2.8285012245178223, -0.2539030909538269, -0.10936340689659119, -0.00471942825242877, -0.010888801887631416, -0.0008036244544200599, -0.008593838661909103, -8.237022848334163e-05, -0.0002493547508493066, -0.0020375936292111874, -2.5608887672424316, -0.2881465554237366, -1.6562237739562988, -0.0024029924534261227, -0.09069908410310745, -0.025481153279542923, -2.1652846336364746, -2.2618820667266846, -0.028020022436976433, -1.4856919050216675, -1.3112935448589269e-05, -2.50339189733495e-06, -0.6003718972206116, -1.9641656875610352, -0.003680124878883362, -0.01683996431529522, -0.04153592884540558, -0.23759709298610687, -0.20078596472740173, -0.675858199596405, -1.0016887187957764, -0.025748517364263535, -0.0007653883076272905, -0.0008541273418813944, -0.027763353660702705, -0.01069681253284216, -0.035598184913396835, -0.03843771666288376, -0.0034722534473985434, -0.00633138557896018, -0.06936471909284592, -0.0359971784055233, -0.0055129872635006905, -0.0024683980736881495, -0.05162113159894943, -0.0008264940115623176, -2.0378239154815674, -7.331102824537084e-05, -0.0032208492048084736, -0.023742884397506714, -1.4977703094482422, -0.00038211196078918874, -0.001490197260864079, -0.022739022970199585, -2.7839956283569336, -0.015764491632580757, -0.011914988979697227, -0.0001805857609724626, -0.03183158114552498, -0.0004745787591673434, -0.16683705151081085, -0.15182530879974365, -1.5568325519561768, -0.027630122378468513, -0.2077176570892334, -0.012829032726585865, -0.05509668588638306, -0.08079985529184341, -0.21791031956672668, -1.3558677434921265, -0.14279425144195557, -0.868813693523407, -1.9572426080703735, -0.4096923768520355, -0.08320850878953934, -0.4858604073524475, -0.005069497041404247, -0.004437243565917015, -0.007471948396414518, -1.290776252746582, -0.21629442274570465, -5.94836674281396e-05, -9.357491217087954e-05, -0.00033849707688204944, -2.8024046421051025, -0.720881462097168, -0.2049950808286667, -0.6642781496047974, -2.0599756240844727, -0.06060779094696045, -0.03619920462369919, -0.06188156083226204, -0.06186150014400482, -0.06234883517026901, -0.0998341292142868, -0.1039251983165741, -0.09883258491754532, -0.107037253677845, -0.177801713347435, -0.13676570355892181, -0.13066710531711578, -0.13808028399944305, -2.8986101150512695, -0.00021681819634977728, -0.04977191984653473, -0.0028287656605243683, -0.5785021781921387, -2.7206003665924072, -0.16820721328258514, -7.676783570786938e-05, -0.00018904806347563863, -0.0003597089380491525, -0.060332417488098145, -0.0013369916705414653, -0.003412734717130661, -1.3379452228546143, -0.11517833918333054, -0.004324845504015684, -0.0029975504148751497, -0.08204521238803864, -0.00851724948734045, -0.017524871975183487, -0.7445820569992065, -2.118438482284546, -0.02465955913066864, -0.00466045830398798, -0.43043628334999084, -0.3952338993549347, -0.3284618854522705, -0.10253962874412537, -0.0783633440732956, -0.07849781215190887, -0.004326982423663139, -0.3925149738788605, -0.2503341734409332, -0.11491557210683823, -0.01829698495566845, -0.0060149370692670345, -0.004271550104022026, -0.055938635021448135, -0.0905911847949028, -0.0037915261927992105, -0.22274455428123474, -0.04347243905067444, -1.3605021238327026, -0.020335635170340538, -7.867782187531702e-06, -6.747018051100895e-05, -0.010422208346426487, -0.0028161650989204645, -2.5091896057128906, -2.014556884765625, -0.0005913416389375925, -0.10876566916704178, -0.00083078199531883, -1.174906849861145, -0.010710139758884907, -0.0025517542380839586, -0.011301902122795582, -4.9470632802695036e-05, -0.02290436439216137, -0.040725018829107285, -0.01427921187132597, -0.003997669089585543, -0.14476539194583893, -0.0003833036171272397, -0.038579147309064865, -0.0012174582807347178, -0.006971321534365416, -4.410734163684538e-06, -0.0004124982515349984, -0.13208624720573425, -0.1967705637216568, -0.16368386149406433, -1.1635804176330566], "finish_reason": "stop"}], "metrics": {"energy": 232.65552407073974, "energy_per_token": 1.1750278993471703, "time": 8.632584, "time_per_token": 0.04359890909090909}}
{"outputs": [{"text": "# check if file exists or create it\n    file_path = os.path.join(log_dir, filename)\n    try:\n        with open(file_path, 'a') as f:\n            for key, value in metrics.items():\n                # append each metric to the file with a timestamp\n                f.write(f\"{datetime.now()},{key}: {value},\\n\")\n            f.close()\n    except Exception as e:\n        print(\"An error occurred:\", str(e))\n        return False\n    return True", "tokens": ["#", " check", " if", " file", " exists", " or", " create", " it", "\n", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "#", " append", " each", " metric", " to", " the", " file", " with", " a", " timestamp", "\n", "                ", "f", ".", "write", "(", "f", "\"", "{", "datetime", ".", "now", "()}", ",", "{", "key", "}:", " {", "value", "}", ",", "\\", "n", "\"", ")", "\n", "            ", "f", ".", "close", "()", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "\"", "An", " error", " occurred", ":\"", ",", " str", "(", "e", "))", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "\n", "\n", "def"], "logprobs": [-1.4080322980880737, -4.035698413848877, -0.8284236192703247, -3.3422842025756836, -0.2799377143383026, -2.7515323162078857, -1.8359023332595825, -0.4149132966995239, -0.2568914294242859, -0.009194177575409412, -2.5822596549987793, -0.49399295449256897, -0.2322850525379181, -0.0028372055385261774, -0.03248703107237816, -1.0371154530730564e-05, -0.00020728347590193152, -0.00505455257371068, -0.0015369757311418653, -0.0005435658385977149, -0.01371978223323822, -1.2874520507466514e-05, -1.7523612768854946e-05, -0.0005336767644621432, -0.01368415355682373, -0.0015975582646206021, -0.006545769516378641, -0.09604664146900177, -0.46315237879753113, -0.00018130090029444546, -0.0011562574654817581, -0.0025810045190155506, -0.6897723078727722, -0.002557461615651846, -0.000366263062460348, -0.004264309536665678, -8.21318244561553e-05, -3.0040289857424796e-05, -0.0011252983240410686, -0.08296310156583786, -0.5311481952667236, -0.2096443772315979, -0.00047839165199548006, -0.7749798893928528, -0.03037138283252716, -0.010127467103302479, -0.005940163973718882, -1.2781157493591309, -0.9707468152046204, -0.0613473579287529, -0.17322340607643127, -0.00011240804451517761, -0.00975248496979475, -0.002281683497130871, -0.0005687049706466496, -9.250213042832911e-05, -0.0053774709813296795, -0.0009302341495640576, -3.1360137462615967, -2.4106664657592773, -3.1915946006774902, -0.6216145753860474, -0.8522465825080872, -0.19191834330558777, -0.3106892704963684, -0.8781205415725708, -0.23126846551895142, -0.03816741332411766, -0.129842147231102, -0.0003064401389565319, -0.3221113085746765, -0.00018189683032687753, -0.0017995130037888885, -0.1709303855895996, -0.07647716999053955, -0.5520178079605103, -0.059717435389757156, -0.7684680223464966, -7.986703712958843e-05, -0.043402355164289474, -1.6834187507629395, -2.1891679763793945, -2.600609064102173, -0.012823500670492649, -0.8894405961036682, -0.31214281916618347, -0.010253491811454296, -2.0670130252838135, -0.5780671238899231, -0.2820986211299896, -0.004554019309580326, -0.0023242621682584286, -0.0021708274725824594, -0.0038264405447989702, -1.135433316230774, -0.9212626218795776, -0.00022599527437705547, -0.791695237159729, -0.008817427791655064, -0.009059750474989414, -1.2222380638122559, -0.013684741221368313, -1.89516019821167, -0.11126914620399475, -0.1371038556098938, -0.0004941195948049426, -0.018813617527484894, -0.0017819016939029098, -0.1477717161178589, -0.0925760343670845, -1.4461488723754883, -0.010968157090246677, -0.00046456989366561174, -0.0006201728247106075, -0.6824936270713806, -0.009481046348810196, -1.5852348804473877, -0.00023457636416424066, -0.005095234606415033, -0.022216951474547386, -0.007290899753570557, -0.029146317392587662, -0.01891375333070755, -0.0018009409541264176, -0.023553580045700073, -0.1403353065252304, -0.27542251348495483, -0.0032954690977931023, -0.6259232759475708, -0.021793756633996964, -0.8601042032241821], "finish_reason": "stop"}], "metrics": {"energy": 169.29055467224126, "energy_per_token": 1.292294310475124, "time": 5.6943736, "time_per_token": 0.04346850076335877}}
{"outputs": [{"text": "if not os.path.exists(log_dir):\n        os.makedirs(log_dir)\n\n    if os.path.isdir(log_dir):\n        logfile = os.path.join(log_dir, filename)\n        with open(logfile, 'a', encoding='utf-8') as f:\n            f.write(\"Metrics written to file: \")\n            f.write('\\n')\n            f.write(\"Time: \")\n            f.write(\" \")\n            f.write(str(datetime.now()))\n            f.write('\\n')\n            for key, value in metrics.items():\n                f.write(key)\n                f.write(':')\n                f.write(' ')\n                f.write(str(value))\n                f.write('\\n')\n        return True\n    else:\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "\n", "    ", "if", " os", ".", "path", ".", "is", "dir", "(", "log", "_", "dir", "):", "\n", "        ", "log", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "        ", "with", " open", "(", "log", "file", ",", " '", "a", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "\"", "Metrics", " written", " to", " file", ":", " \"", ")", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "f", ".", "write", "(", "\"", "Time", ":", " \"", ")", "\n", "            ", "f", ".", "write", "(", "\"", " \"", ")", "\n", "            ", "f", ".", "write", "(", "str", "(", "datetime", ".", "now", "()))", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "f", ".", "write", "(", "key", ")", "\n", "                ", "f", ".", "write", "('", ":", "')", "\n", "                ", "f", ".", "write", "('", " '", ")", "\n", "                ", "f", ".", "write", "(", "str", "(", "value", "))", "\n", "                ", "f", ".", "write", "('", "\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "else", ":", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-1.8861359357833862, -0.21806706488132477, -0.20104213058948517, -0.00014959646796341985, -0.0071010589599609375, -0.008580010384321213, -0.2703585624694824, -0.004726903047412634, -0.08361110836267471, -5.94836674281396e-05, -2.1576648578047752e-05, -0.01449025422334671, -0.044045478105545044, -0.0018239067867398262, -0.49996915459632874, -0.00040391870425082743, -0.3640682101249695, -0.0002379134384682402, -0.003943287767469883, -0.0005882440018467605, -0.006252845283597708, -2.825220326485578e-05, -1.3828182090946939e-05, -0.08980865031480789, -0.025340180844068527, -0.5848942399024963, -0.0010378933511674404, -2.886669635772705, -2.0658960342407227, -0.0012422234285622835, -0.024146636947989464, -0.019797349348664284, -1.2133216857910156, -1.4115748405456543, -0.003462274558842182, -0.08209089934825897, -5.2569914259947836e-05, -4.851700214203447e-05, -0.17093782126903534, -0.01764504797756672, -0.019112007692456245, -1.9200233221054077, -1.6953802108764648, -0.10147164016962051, -0.1818556785583496, -5.411955135059543e-05, -0.0011510183103382587, -0.00312958681024611, -0.0027929842472076416, -0.000720956246368587, -0.01078927330672741, -4.1126360883936286e-05, -6.556489552167477e-06, -0.0014571059728041291, -0.10254586488008499, -0.011685140430927277, -0.008007803000509739, -0.2867289185523987, -0.8271565437316895, -0.002409533131867647, -0.0007091629668138921, -0.006078684702515602, -0.00013863079948350787, -0.002010825788602233, -0.12947386503219604, -0.25173044204711914, -2.1261887550354004, -0.0012149580288678408, -0.06099659949541092, -0.059555262327194214, -0.0601239874958992, -0.1151915118098259, -0.0006784282741136849, -0.02267749421298504, -0.0007259594276547432, -0.4748245179653168, -0.07421140372753143, -0.005142319016158581, -0.007928330451250076, -0.8700583577156067, -0.002865853253751993, -0.00996767170727253, -0.3148217797279358, -1.891592264175415, -3.2632784843444824, -2.9949488639831543, -1.0619263648986816, -1.2583231925964355, -0.6093702912330627, -1.2474257946014404, -1.3211071491241455, -0.0037254944909363985, -0.038622044026851654, -0.6448407173156738, -0.0004943578969687223, -0.009055261500179768, -1.889343500137329, -0.19760221242904663, -0.013289211317896843, -0.14947287738323212, -0.003841640893369913, -0.08893236517906189, -1.3176414966583252, -0.0001546025014249608, -0.009955396875739098, -0.2267388254404068, -1.4300963878631592, -1.9772785902023315, -0.2686564326286316, -0.39549168944358826, -0.23818808794021606, -0.0024133387487381697, -0.002891409443691373, -0.027495484799146652, -5.006777428206988e-06, -0.00031799983116798103, -0.1243748888373375, -3.145390272140503, -1.1857715845108032, -0.13743504881858826, -0.00965662207454443, -0.0077505577355623245, -0.05279908329248428, -0.00010227633902104571, -0.001987864263355732, -0.027334263548254967, -0.6922003626823425, -0.0028588399291038513, -0.0019224273273721337, -7.056941103655845e-05, -0.04231258109211922, -0.1473793387413025, -0.0041857254691421986, -0.026304511353373528, -0.08344026654958725, -2.253030106658116e-05, -0.0008332832949236035, -0.19253791868686676, -0.028186580166220665, -0.0021893836092203856, -0.013818783685564995, -0.0006536492728628218, -0.20113171637058258, -0.5066114068031311, -0.45310091972351074, -0.13154782354831696, -0.19105131924152374, -0.0001736728590913117, -0.0029452538583427668, -0.003148600459098816, -0.0006208876147866249, -0.00022790218645241112, -0.002540101297199726, -0.0012172202114015818, -0.03634129837155342, -5.924526340095326e-05, -0.00048565989709459245, -0.07597225904464722, -1.128149390220642, -0.14737378060817719, -0.0020061859395354986, -0.0025367720518261194, -0.002214005682617426, -3.814689989667386e-06, -6.69933797325939e-05, -1.1344218254089355, -0.40393775701522827, -0.8477495908737183, -0.0006406639004126191, -0.00022551853908225894, -0.0026656591799110174, -7.152555099310121e-07, -6.174850568640977e-05, -0.23236140608787537, -0.03639509528875351, -0.022443460300564766, -0.001321276999078691, -0.0005197366117499769, -0.004078523721545935, -3.6954811548639555e-06, -0.00011669908417388797, -0.025799518451094627, -0.024282773956656456, -0.0001842805795604363, -0.004576091188937426, -0.010483198799192905, -0.0011235122801735997, -0.02041085809469223, -0.0011801904765889049, -9.536738616588991e-07, -0.0001113352773245424, -0.017421668395400047, -0.07197599112987518, -0.001142564113251865, -0.0007048744591884315, -0.02575862407684326, -1.7189205884933472, -0.09621772915124893, -0.03350963443517685, -0.013507400639355183, -0.09648090600967407, -0.33420801162719727, -0.00027223696815781295, -0.007655567489564419, -0.0016141016967594624, -0.4227663278579712, -0.003774306271225214, -0.5390468835830688, -0.03503283113241196, -1.039705753326416], "finish_reason": "stop"}], "metrics": {"energy": 209.62370696830735, "energy_per_token": 0.9982081284205112, "time": 9.257927, "time_per_token": 0.04408536666666667}}
{"outputs": [{"text": "try:\n        log_file = os.path.join(log_dir, filename)\n        with open(log_file, 'a') as file:\n            timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n            for name, value in metrics.items():\n                file.write(f'{name}: {value} | {timestamp}\\n')\n        return True\n    except Exception as e:\n        print(f'An error occurred: {str(e)}')\n        return False", "tokens": ["try", ":", "\n", "        ", "log", "_", "file", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "        ", "with", " open", "(", "log", "_", "file", ",", " '", "a", "')", " as", " file", ":", "\n", "            ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "            ", "for", " name", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "file", ".", "write", "(", "f", "'{", "name", "}:", " {", "value", "}", " |", " {", "timestamp", "}\\", "n", "')", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "str", "(", "e", ")}", "')", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -2.109067440032959, -0.16962411999702454, -0.33522143959999084, -0.14208535850048065, -0.10548897832632065, -1.5139465176616795e-05, -0.0011599486460909247, -0.0029891119338572025, -0.0010026433737948537, -0.0003359945258125663, -0.013178509660065174, -2.396077979938127e-05, -2.52720492426306e-05, -0.0004963834653608501, -0.017787812277674675, -0.002823891816660762, -0.0075857676565647125, -0.08817483484745026, -0.3782033324241638, -0.0015644703526049852, -0.00040391870425082743, -0.003922983072698116, -0.0001012035645544529, -3.111314072157256e-05, -0.0010570659069344401, -0.060788415372371674, -0.19363322854042053, -0.28307095170021057, -0.0001380348257953301, -1.2908782958984375, -0.01846938021481037, -0.00648513063788414, -0.0037908137310296297, -2.114276885986328, -0.009357757866382599, -0.030461695045232773, -6.05564855504781e-05, -0.025700300931930542, -0.0001573438785271719, -0.007560686208307743, -0.02548440732061863, -3.40932747349143e-05, -0.2922787666320801, -0.041415728628635406, -0.044063158333301544, -0.015086008235812187, -0.0001961992384167388, -3.0278701160568744e-05, -2.074220174108632e-05, -0.05462013557553291, -0.001722401357255876, -0.000841025379486382, -1.4066597032069694e-05, -0.006400206591933966, -0.00029488030122593045, -0.1392451524734497, -0.050994761288166046, -0.023272700607776642, -0.4737353026866913, -2.5490026473999023, -0.006027378607541323, -0.022972986102104187, -0.00011014331539627165, -0.002344004809856415, -0.0020744726061820984, -0.0003978414461016655, -0.00011205045302631333, -0.004161270800977945, -0.000604565953835845, -0.11848840117454529, -0.00017271934484597296, -0.0009966888464987278, -0.08698660135269165, -0.030692124739289284, -0.5313767194747925, -0.5167106986045837, -0.4527047574520111, -0.011881652288138866, -0.015643853694200516, -0.26950016617774963, -1.3436667919158936, -0.07706715166568756, -0.0017698828596621752, -0.04016130045056343, -0.000615407363511622, -0.0024925374891608953, -0.0034381584264338017, -0.5624005794525146, -0.08653704077005386, -0.007082357071340084, -0.006954748183488846, -0.04851760342717171, -0.0020021409727633, -0.9810413122177124, -0.11851010471582413, -0.1547822207212448, -9.214453893946484e-05, -0.018500978127121925, -0.00071190285962075, -0.102896548807621, -0.1095833033323288, -0.20713193714618683, -0.1672597974538803, -0.00695439288392663, -0.0002269487304147333, -0.0003781795676331967, -0.01177762821316719, -0.0028547984547913074, -2.4196786880493164, -0.00012003655137959868, -0.0011645924532786012, -0.01468492392450571, -0.003243901301175356, -0.004658204037696123, -0.012075887992978096, -0.008075681515038013, -0.0003311085747554898, -0.505052924156189, -0.018634259700775146, -1.2147738933563232], "finish_reason": "stop"}], "metrics": {"energy": 158.96244815826412, "energy_per_token": 1.2819552270827752, "time": 5.2675924, "time_per_token": 0.04248058387096774}}
{"outputs": [{"text": "try:\n        os.makedirs(log_dir, exist_ok=True)\n        with open(os.path.join(log_dir, filename), 'w') as file:\n            for key, value in metrics.items():\n                file.write(f\"{key}: {value}\\n\")\n        return True\n    except PermissionError as e:\n        print(e)\n        return False", "tokens": ["try", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "w", "')", " as", " file", ":", "\n", "            ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "file", ".", "write", "(", "f", "\"", "{", "key", "}:", " {", "value", "}\\", "n", "\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Perm", "ission", "Error", " as", " e", ":", "\n", "        ", "print", "(", "e", ")", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -2.737525463104248, -0.000695463502779603, -0.15590842068195343, -0.00016759421851020306, -0.00369010167196393, -0.0016920547932386398, -0.07408610731363297, -8.093983342405409e-05, -5.149708886165172e-05, -0.058815717697143555, -0.03538372740149498, -3.576278118089249e-07, -0.0001991788885788992, -0.0011848341673612595, -0.0015436412068083882, -0.0016436175210401416, -0.05916072800755501, -0.5963574647903442, -0.8595473766326904, -0.004201989155262709, -0.0052398014813661575, -0.1926278918981552, -0.0017889224691316485, -0.00044050050200894475, -0.013452240265905857, -0.0003591130953282118, -0.0003588747640606016, -0.002610967494547367, -2.6702524337451905e-05, -1.2159273865108844e-05, -0.00021217002358753234, -0.016012292355298996, -0.0024540091399103403, -0.0006329201860353351, -0.08278347551822662, -2.009406805038452, -0.07032565027475357, -0.0002933310461230576, -1.1718488931655884, -0.006576916202902794, -0.0022747849579900503, -0.003955992870032787, -0.7827054858207703, -0.6137564182281494, -0.06325811892747879, -0.08641579002141953, -7.533743337262422e-05, -0.011671707965433598, -0.0016976482002064586, -0.00026973424246534705, -5.221230458118953e-05, -0.003346678102388978, -0.0005544078885577619, -0.17380017042160034, -0.0003987947420682758, -0.000688077649101615, -0.2210996448993683, -0.05581756308674812, -0.6496310234069824, -0.008474579080939293, -0.1966431736946106, -0.28590264916419983, -0.017134958878159523, -0.020205968990921974, -0.2808278799057007, -0.005538001656532288, -0.0008418591460213065, -0.001890540006570518, -0.009832403622567654, -0.439549058675766, -0.10430171340703964, -0.006384808104485273, -0.005671718157827854, -0.04131210222840309, -0.0031488381791859865, -3.6409409046173096, -0.0003582789213396609, -7.557583012385294e-05, -1.3719438314437866, -0.31660205125808716, -0.0006460248259827495, -0.014839856885373592, -0.0007834940915927291, -0.12440910190343857, -0.05952133983373642, -2.0483033657073975, -0.03864968568086624, -0.008478006348013878, -0.08757554739713669, -0.028122255578637123, -0.0013423488708212972, -0.041359685361385345, -1.1553726196289062, -0.935340404510498], "finish_reason": "stop"}], "metrics": {"energy": 111.74994986915584, "energy_per_token": 1.1403056109097536, "time": 4.2192526, "time_per_token": 0.043053597959183676}}
{"outputs": [{"text": "try:\n        # Get the current timestamp\n        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n\n        # Construct the path for the log file\n        path = os.path.join(log_dir, filename)\n\n        # Open the file in append mode\n        with open(path, 'a') as f:\n            f.write(f\"{timestamp}: {metrics}\\n\")\n\n        return True\n    except Exception as e:\n        # Print the error message and return False\n        print(f\"An error occurred: {e}\")\n        return False", "tokens": ["try", ":", "\n", "        ", "#", " Get", " the", " current", " timestamp", "\n", "        ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "        ", "#", " Construct", " the", " path", " for", " the", " log", " file", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "\n", "        ", "#", " Open", " the", " file", " in", " append", " mode", "\n", "        ", "with", " open", "(", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "f", "\"", "{", "timestamp", "}:", " {", "metrics", "}\\", "n", "\"", ")", "\n", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " Print", " the", " error", " message", " and", " return", " False", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -1.9930434226989746, -3.347965717315674, -0.5924526453018188, -0.11940042674541473, -0.5937599539756775, -0.4248793125152588, -0.0003081085451412946, -0.15471196174621582, -0.003633565502241254, -0.009966136887669563, -2.6702524337451905e-05, -0.04018557816743851, -0.00016366096679121256, -0.009557561948895454, -0.022548479959368706, -2.3483953555114567e-05, -0.2236074060201645, -0.009783060289919376, -0.036922454833984375, -0.11442332714796066, -0.00033778208307921886, -4.8993817472364753e-05, -2.1815061700181104e-05, -0.9314457178115845, -0.001957882894203067, -0.018783317878842354, -1.9907753085135482e-05, -0.009200437925755978, -0.0003321811091154814, -0.2511169910430908, -0.00736261298879981, -0.13515762984752655, -0.0005888396990485489, -0.0989547148346901, -3.197683334350586, -0.08618724346160889, -2.1833298206329346, -2.608438730239868, -0.01502236258238554, -0.17298829555511475, -0.006717598531395197, -0.07273003458976746, -0.00015984688070602715, -1.0266311168670654, -0.01020605769008398, -0.05554729327559471, -5.8412379075889476e-06, -0.00023231192608363926, -0.022613979876041412, -0.0005691815749742091, -0.00034540885826572776, -0.009181775152683258, -1.597391747054644e-05, -1.4424220353248529e-05, -0.0002803409588523209, -0.10272746533155441, -0.0068692718632519245, -0.005343677941709757, -0.0334111787378788, -0.0004357342259027064, -0.08477488905191422, -0.4547160565853119, -0.05318189412355423, -1.31745445728302, -0.5940659046173096, -0.3681509494781494, -0.0023070168681442738, -0.25979140400886536, -0.0002499506517779082, -0.05761073902249336, -0.0007630059262737632, -0.00031704644788987935, -0.0015706595731899142, -0.002204370917752385, -0.03507496044039726, -0.014040149748325348, -0.1741093099117279, -8.010543388081715e-05, -0.8418371677398682, -0.01265212893486023, -0.000179036331246607, -0.03969694301486015, -1.7258641719818115, -0.00029583368450403214, -0.0029950544703751802, -0.12174996733665466, -0.3087610900402069, -0.7613658905029297, -0.14750473201274872, -0.016682643443346024, -1.111865520477295, -0.533591091632843, -0.07650157809257507, -0.1289321482181549, -0.0015224544331431389, -0.00787096843123436, -0.005475523415952921, -0.03306247666478157, -0.15608221292495728, -0.13239696621894836, -0.35166439414024353, -0.015575900673866272, -0.016347289085388184, -0.49532973766326904, -0.005785387009382248, -0.4467449188232422, -0.09533306956291199, -0.06117378920316696, -9.214453893946484e-05, -0.014698315411806107, -0.001774523756466806, -2.7814385890960693, -1.2888578176498413, -0.553611695766449, -0.04978847876191139, -0.2478160709142685, -1.0056891441345215, -0.03631049022078514, -0.005364665295928717, -0.0773712769150734, -0.0003734129713848233, -0.019273273646831512, -0.032977815717458725, -0.1792934685945511, -0.15960967540740967, -0.008726674132049084, -0.00012957210128661245, -0.00027700403006747365, -0.010721461847424507, -0.0023606547620147467, -0.21519358456134796, -0.0826646238565445, -0.0025307077448815107, -0.0034359011333435774, -0.006825702264904976, -0.009110191836953163, -0.0003067976504098624, -0.5419517755508423, -0.01355444360524416, -0.6304531097412109], "finish_reason": "stop"}], "metrics": {"energy": 163.48506970596307, "energy_per_token": 1.135312984069188, "time": 6.319378, "time_per_token": 0.043884569444444445}}
{"outputs": [{"text": "if not os.path.exists(log_dir):\n        os.makedirs(log_dir)\n    with open(f'{log_dir}/{filename}', 'w') as file:\n        for key, value in metrics.items():\n            file.write(f'{key}: {value}\\n')\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "log", "_", "dir", ")", "\n", "    ", "with", " open", "(", "f", "'{", "log", "_", "dir", "}/{", "filename", "}'", ",", " '", "w", "')", " as", " file", ":", "\n", "        ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "            ", "file", ".", "write", "(", "f", "'{", "key", "}:", " {", "value", "}\\", "n", "')", "\n", "    ", "return", " True"], "logprobs": [-1.8861359357833862, -0.21806706488132477, -0.20104213058948517, -0.00014959646796341985, -0.0071010589599609375, -0.008580010384321213, -0.2703585624694824, -0.004726903047412634, -0.08361110836267471, -5.94836674281396e-05, -2.1576648578047752e-05, -0.01449025422334671, -0.044045478105545044, -0.0018239067867398262, -0.49996915459632874, -0.00040391870425082743, -0.3640682101249695, -0.0002379134384682402, -0.003943287767469883, -0.0005882440018467605, -0.006252845283597708, -2.825220326485578e-05, -1.3828182090946939e-05, -0.08980865031480789, -0.025340180844068527, -0.8659496903419495, -1.9756269454956055, -0.009859316982328892, -0.007495375815778971, -2.934283494949341, -0.3951077461242676, -0.020673509687185287, -1.6212332411669195e-05, -1.4185804502631072e-05, -0.034764714539051056, -0.01586211659014225, -0.05829247087240219, -0.0007253637886606157, -0.04749944061040878, -1.8326654434204102, -0.0782814472913742, -0.0007013006834313273, -1.3662160634994507, -0.006533097010105848, -0.003747109789401293, -0.003349886042997241, -0.6614968180656433, -0.6370576620101929, -0.06689848005771637, -0.11209294199943542, -0.00014137222024146467, -0.007302497513592243, -0.002922432729974389, -0.00037019551382400095, -5.8053239627042785e-05, -0.00278371199965477, -0.0007858763565309346, -0.19829435646533966, -0.0007574073388241231, -0.0018005840247496963, -0.035620272159576416, -0.02078910544514656, -0.11808255314826965, -0.4185093641281128, -0.4615405797958374, -0.04320383816957474, -0.02023213729262352, -0.3351026773452759, -0.0033768555149435997, -0.0019081495702266693, -0.008343955501914024, -0.3964298367500305, -0.10336483269929886, -0.2554957866668701], "finish_reason": "stop"}], "metrics": {"energy": 103.78491300201419, "energy_per_token": 1.402498824351543, "time": 3.1720772, "time_per_token": 0.04286590810810811}}
{"outputs": [{"text": "try:\n        if not os.path.exists(log_dir):\n            os.mkdir(log_dir)\n        filepath = os.path.join(log_dir, filename)\n        with open(filepath, 'a') as file:\n            for key, value in metrics.items():\n                timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n                file.write(f\"{key}: {value}, {timestamp}\\n\")\n    except Exception as e:\n        print(f\"An error occurred: {str(e)}\")\n        return False\n    else:\n        return True", "tokens": ["try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "log", "_", "dir", "):", "\n", "            ", "os", ".", "mk", "dir", "(", "log", "_", "dir", ")", "\n", "        ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", "\n", "        ", "with", " open", "(", "file", "path", ",", " '", "a", "')", " as", " file", ":", "\n", "            ", "for", " key", ",", " value", " in", " metrics", ".", "items", "():", "\n", "                ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "                ", "file", ".", "write", "(", "f", "\"", "{", "key", "}:", " {", "value", "}", ",", " {", "timestamp", "}\\", "n", "\"", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False", "\n", "    ", "else", ":", "\n", "        ", "return", " True", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -1.7769255638122559, -0.2916995584964752, -0.07775703817605972, -4.124556289752945e-05, -0.0064244880340993404, -0.0022218560334295034, -0.2713129222393036, -0.0025536566972732544, -0.05792061239480972, -4.3748852476710454e-05, -2.47952248173533e-05, -0.00833118800073862, -0.03747399523854256, -0.0013218722306191921, -0.1195153146982193, -0.0002719986077863723, -1.2049665451049805, -9.011816291604191e-05, -0.0026534132193773985, -0.00910700298845768, -5.519237674889155e-05, -2.9682672902708873e-05, -0.015200960449874401, -0.017962872982025146, -0.4707837998867035, -3.2122325897216797, -1.430431842803955, -0.004331136588007212, -0.07701229304075241, -1.2516897186287679e-05, -0.0002557904226705432, -0.009524027816951275, -0.0032005298417061567, -0.0004797023138962686, -0.0075699142180383205, -3.6954811548639555e-06, -5.602820692729438e-06, -0.0012749646557494998, -0.022712336853146553, -0.0025454522110521793, -0.007168880198150873, -0.06405487656593323, -0.33398574590682983, -0.0018151012482121587, -0.0006117141456343234, -0.0031751003116369247, -8.487341256113723e-05, -0.002314985264092684, -0.09308958053588867, -0.24961437284946442, -0.2821575999259949, -0.0002640137099660933, -1.4693607091903687, -0.022238288074731827, -0.005114448256790638, -0.0025454522110521793, -0.9845628142356873, -0.5471786260604858, -0.048653073608875275, -0.10191582888364792, -0.00016509123088326305, -0.007877237163484097, -0.0025630502495914698, -0.0005864569102413952, -8.49926145747304e-05, -0.0037181309890002012, -0.0006102845072746277, -2.0442593097686768, -0.014130421914160252, -0.05794176086783409, -6.854299135738984e-05, -0.05117044597864151, -0.00033146608620882034, -0.01636030711233616, -0.037830691784620285, -6.90197994117625e-05, -0.2254890352487564, -0.045085277408361435, -0.09323478490114212, -0.02358175627887249, -0.000440262199845165, -5.2569914259947836e-05, -4.31528314948082e-05, -0.06335154920816422, -0.0023334198631346226, -0.0009367844904772937, -1.8596476365928538e-05, -0.0065535856410861015, -0.00034731553751043975, -0.24747872352600098, -0.02992883324623108, -0.00150781380943954, -0.2043578177690506, -0.0019019624451175332, -0.002405846491456032, -0.11514731496572495, -0.046213697642087936, -0.8833131790161133, -0.021426159888505936, -1.2617294788360596, -0.4287492632865906, -0.040584806352853775, -0.019352199509739876, -0.1419352889060974, -0.7069083452224731, -0.40411075949668884, -0.003542459337040782, -0.04822036251425743, -0.0003695997002068907, -0.0011878109071403742, -0.0010674261720851064, -0.0097969900816679, -1.3858494758605957, -0.0018317601643502712, -0.6805211305618286, -0.11583861708641052, -0.1475500911474228, -9.321732068201527e-05, -0.010047572664916515, -0.0006854568491689861, -0.11361038684844971, -0.054328545928001404, -0.33342117071151733, -0.1374962478876114, -0.0075036585330963135, -0.0001760566228767857, -0.0003935516288038343, -0.01572388969361782, -0.002880949294194579, -2.511392593383789, -0.00012087091454304755, -0.0015147175872698426, -0.01562601514160633, -0.0025505651719868183, -0.0073136212304234505, -0.010097138583660126, -0.08295530825853348, -0.016039391979575157, -0.0011077941162511706, -0.010946933180093765, -0.10717605799436569, -1.3736040592193604, -4.2437604861333966e-05, -0.0030990452505648136, -0.00039867559098638594, -0.592908501625061, -0.0073556313291192055, -1.0243048667907715, -4.768370445162873e-07, -1.1920922133867862e-06, -4.637133679352701e-05, -4.088794958079234e-05, -0.09045419842004776], "finish_reason": "stop"}], "metrics": {"energy": 173.67025393295296, "energy_per_token": 1.1061799613563883, "time": 6.7257886, "time_per_token": 0.042839417834394905}}
{"outputs": [{"text": "try:\n        with open(os.path.join(log_dir, filename), 'a') as f:\n            f.write(\n                \"metrics: {}\\n\\t\".format(metrics) + datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\") + \"\\n\")\n        return True\n    except IOError as e:\n        print(\"An error occurred: %s\" % (e,))\n        return False", "tokens": ["try", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "log", "_", "dir", ",", " filename", ")", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "\n", "                ", "\"", "metrics", ":", " {}\\", "n", "\\", "t", "\"", ".", "format", "(", "metrics", ")", " +", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", " +", " \"", "\\", "n", "\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " IO", "Error", " as", " e", ":", "\n", "        ", "print", "(", "\"", "An", " error", " occurred", ":", " %", "s", "\"", " %", " (", "e", ",", "))", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-1.1086643934249878, -0.0004986473359167576, -0.0043565365485847, -0.008185766637325287, -1.417752742767334, -0.01794554479420185, -0.006461797747761011, -0.15728875994682312, -1.0132738680113107e-05, -0.0005245024804025888, -0.0036052961368113756, -0.000442407006630674, -0.0004182179400231689, -0.008860438130795956, -2.2053474822314456e-05, -2.3483953555114567e-05, -0.000390215078368783, -0.015172664076089859, -0.002392170252278447, -0.001007764250971377, -0.08021736145019531, -0.31576091051101685, -0.19207920134067535, -0.00035208225017413497, -0.6277807354927063, -0.028463879600167274, -0.006269549019634724, -0.005698862485587597, -1.2064199447631836, -0.0027497122064232826, -0.012584325857460499, -0.3737523555755615, -2.465810775756836, -0.0026773104909807444, -2.161530017852783, -4.721951484680176, -1.00821053981781, -0.8030372858047485, -0.2266501635313034, -2.3676557540893555, -1.5896118879318237, -1.2675528526306152, -0.16740278899669647, -0.00625663623213768, -0.02338310517370701, -0.4201287031173706, -0.14021316170692444, -0.6856143474578857, -1.633712649345398, -0.0002817710628733039, -0.09701842069625854, -0.006584614049643278, -0.005697084590792656, -0.19024841487407684, -0.0003067976504098624, -0.25247225165367126, -0.026101289317011833, -0.1276981383562088, -0.6122153401374817, -0.08833330869674683, -0.003415467217564583, -0.00040439533768221736, -0.0005044856225140393, -0.09948085993528366, -0.00827585905790329, -0.0027500689029693604, -9.30981186684221e-05, -0.015586228109896183, -0.0015254301251843572, -0.3206447660923004, -0.18439428508281708, -0.07694540917873383, -0.24541163444519043, -0.012807730585336685, -0.010503959842026234, -0.3307493329048157, -0.43890610337257385, -0.005394781939685345, -1.0004334449768066, -0.07886705547571182, -0.006858261302113533, -0.004492903593927622, -0.060177866369485855, -0.004324133507907391, -2.567244052886963, -0.00011979816190432757, -0.6984093189239502, -0.2352370172739029, -0.000902007392141968, -0.009083731099963188, -0.0012206730898469687, -0.16405999660491943, -0.09727543592453003, -0.389032781124115, -0.020185992121696472, -0.0007476395112462342, -0.0007677706307731569, -0.1564188003540039, -2.3455123901367188, -0.022384945303201675, -0.05499367415904999, -0.019365178421139717, -1.8611987829208374, -0.3961229622364044, -1.7715973854064941, -0.14230695366859436, -0.011549397371709347, -0.04259307682514191, -0.01285692397505045, -0.001701099332422018, -0.3403964638710022, -0.0352923609316349, -0.8441197872161865], "finish_reason": "stop"}], "metrics": {"energy": 143.94507821464546, "energy_per_token": 1.273850249687128, "time": 4.8526783, "time_per_token": 0.04294405575221239}}
