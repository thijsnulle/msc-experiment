{"outputs": [{"text": "# Check that the dataframe has both the 'Title' and 'Content' columns\n    if 'Title' not in df.columns or 'Content' not in df.columns:\n        return plt.gca()  # return the current figure axes without error\n\n    # Find articles that have the words \"how\" or \"what\" in their title\n    mask = df['Title'].apply(lambda x: re.search(r'\\b(how|what)\\b', x, re.IGNORECASE))\n    df = df[mask]\n\n    # Check that there are articles with the words \"how\" or \"what\" in their title\n    if df.empty:\n        return plt.gca()  # return the current figure axes without error\n\n    # Vectorize the 'Content' column\n    vectorizer = TfidfVectorizer()\n    tfidf = vectorizer.fit_transform(df['Content'])\n\n    # Calculate the mean TF-IDF score for each word\n    feature_names = vectorizer.get_feature_names_out()\n    tfidf_scores = np.mean(tfidf.to", "tokens": ["#", " Check", " that", " the", " data", "frame", " has", " both", " the", " '", "Title", "'", " and", " '", "Content", "'", " columns", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "  ", "#", " return", " the", " current", " figure", " axes", " without", " error", "\n", "\n", "    ", "#", " Find", " articles", " that", " have", " the", " words", " \"", "how", "\"", " or", " \"", "what", "\"", " in", " their", " title", "\n", "    ", "mask", " =", " df", "['", "Title", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "search", "(", "r", "'\\", "b", "(", "how", "|", "what", ")\\", "b", "'", ",", " x", ",", " re", ".", "IGN", "ORE", "C", "ASE", "))", "\n", "    ", "df", " =", " df", "[", "mask", "]", "\n", "\n", "    ", "#", " Check", " that", " there", " are", " articles", " with", " the", " words", " \"", "how", "\"", " or", " \"", "what", "\"", " in", " their", " title", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "  ", "#", " return", " the", " current", " figure", " axes", " without", " error", "\n", "\n", "    ", "#", " Vector", "ize", " the", " '", "Content", "'", " column", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "df", "['", "Content", "'])", "\n", "\n", "    ", "#", " Calculate", " the", " mean", " TF", "-", "ID", "F", " score", " for", " each", " word", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "tf", "id", "f", "_", "scores", " =", " np", ".", "mean", "(", "tf", "id", "f", ".", "to"], "logprobs": [-0.9820042252540588, -0.6316481232643127, -2.423219680786133, -0.30134010314941406, -3.347456932067871, -0.22234968841075897, -0.6866623163223267, -2.6309831142425537, -1.7052998542785645, -0.43122372031211853, -0.01419729832559824, -0.0022394596599042416, -0.0022169791627675295, -0.0047241742722690105, -0.0018717404454946518, -0.0004094000905752182, -0.018590029329061508, -0.08654556423425674, -0.002649489790201187, -0.16321535408496857, -0.16391167044639587, -0.0028431490063667297, -5.328513361746445e-05, -0.09096970409154892, -1.2993727978027891e-05, -0.005075783468782902, -0.11664391309022903, -0.00030048147891648114, -0.0141482874751091, -0.0012866322649642825, -0.0010609956225380301, -1.2755313036905136e-05, -1.6212332411669195e-05, -1.811964830267243e-05, -3.71926071238704e-05, -1.597391747054644e-05, -3.814689989667386e-06, -0.0014255610294640064, -0.0013892533024773002, -0.006651641335338354, -1.2708059549331665, -0.43805569410324097, -0.024527311325073242, -1.447685956954956, -0.0024756519123911858, -0.00019000156316906214, -2.050359010696411, -2.682172998902388e-05, -0.9198898077011108, -2.651144027709961, -0.04435319826006889, -3.408174514770508, -0.006790537387132645, -2.7936556339263916, -3.8656005859375, -0.12118609249591827, -0.05777997523546219, -0.0005916990339756012, -0.06890749931335449, -2.5784189701080322, -0.661528468132019, -1.3885407447814941, -0.37284421920776367, -2.2391858100891113, -0.357278436422348, -0.3186168968677521, -0.03528441861271858, -0.001479722443036735, -0.021780576556921005, -0.0004383556661196053, -0.0006522196927107871, -0.00041321321623399854, -0.009186145849525928, -0.7522614002227783, -0.6026003956794739, -0.05297829955816269, -0.000582644424866885, -2.9201996326446533, -0.040217868983745575, -0.11156357824802399, -0.07240375876426697, -0.00016973962192423642, -0.00020859450160060078, -0.00010322991875000298, -1.563206434249878, -0.0003808011533692479, -0.07269755750894547, -0.05262187495827675, -0.0004323977918829769, -1.0780699253082275, -7.462222856702283e-05, -0.09082743525505066, -0.3561658263206482, -0.020142531022429466, -0.22868722677230835, -0.0022172171156853437, -0.5401541590690613, -0.15328961610794067, -0.0019250449258834124, -0.0016452836571261287, -0.02567276544868946, -0.001050516264513135, -0.0018343779956921935, -6.270212179515511e-05, -0.020054785534739494, -0.14716081321239471, -0.3904746472835541, -1.847726889536716e-05, -0.037187010049819946, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.34838998317718506, -0.055772580206394196, -0.29399874806404114, -1.0557743310928345, -0.5420880913734436, -0.0006447143969126046, -0.054085541516542435, -0.006503961980342865, -0.04740610718727112, -0.10237305611371994, -0.04472602903842926, -0.00023767507809679955, -0.08479668200016022, -1.1377859115600586, -1.4336234331130981, -0.19062462449073792, -0.08470741659402847, -0.24076998233795166, -0.30720752477645874, -2.1005911827087402, -0.2832879424095154, -0.014377453364431858, -0.0011556621175259352, -0.00011765264935093, -0.01645893044769764, -8.141662692651153e-05, -0.00017951308109331876, -0.0005193791585043073, -0.006284949369728565, -0.7109053730964661, -0.03267095983028412, -0.011410689912736416, -8.999896090244874e-05, -0.007273503113538027, -0.10448341816663742, -0.0006287504802457988, -0.1336313635110855, -0.005185368936508894, -0.0011653067776933312, -0.00036554806865751743, -0.005618850234895945, -0.001693720929324627, -5.209310256759636e-05, -0.0005666795768775046, -2.264974000354414e-06, -0.0006092122639529407, -0.03942812606692314, -1.1920922133867862e-06, -0.005385652184486389, -0.006380780600011349, -0.00032264748006127775, -0.0006804534932598472, -0.001945747178979218, -0.005205055233091116, -0.0019729926716536283, -0.0037015036214143038, -0.0022168601863086224, -0.00044824567157775164, -0.0459350161254406, -3.3949804306030273, -0.016297094523906708, -0.07057318091392517, -2.526703119277954, -0.01633814163506031, -0.00033384948619641364, -0.08421245217323303, -1.0519319772720337, -0.00011967896716669202, -0.3955736458301544, -0.0018174811266362667, -0.000580499938223511, -0.00015841660206206143, 0.0, -0.00019262365822214633, 0.0, -8.344646857949556e-07, 0.0, -0.42873668670654297, -0.009593337774276733, -0.006271681282669306, -0.7326408624649048, -0.06941354274749756, -0.0020609109196811914, -0.2540264427661896, -0.0008247073274105787, 0.0, -2.5987286790041253e-05, -0.00018249277491122484, -5.7338023907504976e-05, -7.033323527139146e-06, -0.0019751342479139566, -0.0019983339589089155, -0.0055696540512144566, -0.0003361137059982866, -0.058927323669195175, -0.03920462727546692, -0.24610111117362976, -0.00018404220463708043, -0.007493364624679089, -0.9627121686935425, -0.09104284644126892, -0.8402794003486633, -0.16686448454856873, -0.02559305727481842, -2.2172682292875834e-05, -0.00014280252798926085, -0.2369442582130432, -0.07613079994916916, -0.009155788458883762, -1.4857457876205444, -0.6847550272941589, -0.00010334911348763853, -1.2621049880981445, -0.0012267453130334616, -0.026324134320020676, -0.00048029806930571795, -0.22328326106071472, -1.1920928244535389e-07, -1.1920922133867862e-06, -3.0278701160568744e-05, 0.0, -4.410734163684538e-06, 0.0, -5.960446742392378e-06, -0.6231223344802856, -0.00011646069469861686, -0.017523465678095818, -0.044831015169620514, -0.004262885078787804, -1.1079332828521729, -0.0021915247198194265, -0.0015231685247272253, -0.05338115617632866, -0.5946094393730164, -0.0017691688844934106, -0.155967578291893, -4.0531076592742465e-06, -0.10758378356695175, -0.0079382648691535, -0.033145971596241, -6.4490144723095e-05, -1.0728830375228426e-06, -0.09209223091602325, -0.03295682370662689], "finish_reason": "length"}], "metrics": {"energy": 1128.3464391574857, "energy_per_token": 4.407603277958929, "time": 32.14619, "time_per_token": 0.1255710546875}}
{"outputs": [{"text": "# check if DataFrame has 'Title' and 'Content' columns\n    if 'Title' not in df.columns or 'Content' not in df.columns:\n        return plt.figure().axes\n\n    # filter articles with titles including \"how\" or \"what\"\n    df = df[df['Title'].str.contains(r'\\bhow\\b|\\bwhat\\b', case=False)]\n\n    # check if there are any articles left\n    if df.empty:\n        return plt.figure().axes\n\n    # calculate tf-idf scores\n    vectorizer = TfidfVectorizer(ngram_range=(1, 1), max_df=0.8, min_df=0.0015, max_features=10000, use_idf=True, smooth_idf=False)\n    tfidf = vectorizer.fit_transform(df['Content'])\n    feature_names = vectorizer.get_feature_names_out()\n\n    # get top 10 features (words)\n    top_features = tfidf.sum(axis=", "tokens": ["#", " check", " if", " Data", "Frame", " has", " '", "Title", "'", " and", " '", "Content", "'", " columns", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "return", " plt", ".", "figure", "()", ".", "axes", "\n", "\n", "    ", "#", " filter", " articles", " with", " titles", " including", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "df", " =", " df", "[", "df", "['", "Title", "']", ".", "str", ".", "contains", "(", "r", "'\\", "b", "how", "\\", "b", "|\\", "b", "what", "\\", "b", "'", ",", " case", "=", "False", ")]", "\n", "\n", "    ", "#", " check", " if", " there", " are", " any", " articles", " left", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "return", " plt", ".", "figure", "()", ".", "axes", "\n", "\n", "    ", "#", " calculate", " tf", "-", "id", "f", " scores", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "ng", "ram", "_", "range", "=(", "1", ",", " ", "1", ")", ",", " max", "_", "df", "=", "0", ".", "8", ",", " min", "_", "df", "=", "0", ".", "0", "0", "1", "5", ",", " max", "_", "features", "=", "1", "0", "0", "0", "0", ",", " use", "_", "id", "f", "=", "True", ",", " smooth", "_", "id", "f", "=", "False", ")", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "df", "['", "Content", "'])", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "#", " get", " top", " ", "1", "0", " features", " (", "words", ")", "\n", "    ", "top", "_", "features", " =", " tf", "id", "f", ".", "sum", "(", "axis", "="], "logprobs": [-1.0111974477767944, -3.1634602546691895, -0.32732513546943665, -2.960482358932495, -0.009031870402395725, -0.7044035792350769, -0.5083640813827515, -0.012792665511369705, -0.0014541300479322672, -0.0126979174092412, -0.0009327351581305265, -0.0016056514577940106, -0.0016085079405456781, -0.024718988686800003, -0.07284176349639893, -0.0019281383138149977, -0.09833181649446487, -0.14367066323757172, -0.002708102809265256, -8.916457591112703e-05, -0.05381186679005623, -1.6093124941107817e-05, -0.00361420470289886, -0.07089350372552872, -0.00032240914879366755, -0.014453007839620113, -0.0011606630869209766, -0.000894146622158587, -1.7165990357170813e-05, -1.9550132492440753e-05, -3.158996332786046e-05, -1.823885577323381e-05, -2.074220174108632e-05, -8.4638240878121e-06, -0.001259487122297287, -0.001259606215171516, -0.005186791997402906, -1.348939061164856, -0.4948176145553589, -0.02509177289903164, -1.5212126970291138, -0.028093857690691948, -0.5251467227935791, -1.619894027709961, -0.05688856169581413, -0.12352743744850159, -0.0007516896002925932, -0.03965500742197037, -1.2323216199874878, -0.30825480818748474, -0.35158607363700867, -0.3745279014110565, -2.1583895683288574, -0.40635019540786743, -0.0230012945830822, -0.0013054428854957223, -0.010252665728330612, -0.0001934579631779343, -0.00038842763751745224, -0.003256258787587285, -0.02407669834792614, -0.0006685405969619751, -0.7278347611427307, -0.31111976504325867, -0.002387056592851877, -0.2720748484134674, -0.026445232331752777, -0.03519557788968086, -0.00024875884992070496, -0.00012790338951162994, -0.00016902448260225356, -0.06125598028302193, -2.109982233378105e-05, -0.21164341270923615, -0.8486307263374329, -0.021276911720633507, -0.19743353128433228, -0.000735608336981386, -0.9240365624427795, -0.05031687393784523, -0.00015853578224778175, -0.012574554421007633, -8.618460560683161e-05, -0.0002694958820939064, -0.0003299168893136084, -4.887569048150908e-06, -0.12225423753261566, -0.00012683063687290996, -0.180273175239563, -0.005439836531877518, -0.003995888400822878, -0.39019715785980225, -0.035242531448602676, -0.052117668092250824, -0.0003095386200584471, -0.06427646428346634, -1.3474011421203613, -0.009200556203722954, -0.46354687213897705, -0.02213125489652157, -0.13508327305316925, -0.19196182489395142, -2.037177085876465, -0.5154699683189392, -5.543078441405669e-05, -0.0009202298242598772, -0.03313951566815376, -0.0001245659514097497, -0.06884662806987762, -0.002027838258072734, -0.00019822540343739092, -0.0006661579827778041, -0.008017618209123611, -0.003121505957096815, -4.5536911784438416e-05, -0.001492816023528576, -0.000125281119835563, -0.000226472009671852, -0.0001805857609724626, -0.0006506709614768624, -0.003219304606318474, -0.0004768426588270813, -0.019763806834816933, -1.6997591257095337, -2.6860344409942627, -0.29573458433151245, -0.00010525626566959545, -8.666139910928905e-05, -0.1615132987499237, -0.979642391204834, -0.0009037939016707242, -0.8586912751197815, -0.0011002921964973211, -0.0007662221323698759, -0.00021288513380568475, -1.1920928244535389e-07, -0.005011141300201416, 0.0, -1.7881377516459906e-06, -3.576278118089249e-07, -0.788151741027832, -2.4521374702453613, -0.001919690752401948, -0.000382707774406299, -4.291525328881107e-06, -0.004288286902010441, -0.049773961305618286, -5.817244164063595e-05, -0.06574752181768417, -1.3159465789794922, -0.4275968372821808, -0.00015639036428183317, -2.5273678302764893, -3.6954811548639555e-06, -0.07744640856981277, -0.007149824406951666, -0.3442479968070984, -7.462222856702283e-05, -0.953323483467102, -0.1878882497549057, -0.042312126606702805, -4.768370445162873e-07, -1.1920928244535389e-07, -0.00019774865359067917, -2.225175619125366, -0.11129442602396011, -0.750860869884491, -1.8617243766784668, -1.4705301523208618, -2.8474698066711426, -1.2261496782302856, -0.936332643032074, -1.6689286894688848e-06, -0.0004769618099089712, -0.0022061550989747047, -0.5563249588012695, -0.020731424912810326, -0.031176744028925896, -0.03186195343732834, -0.10402489453554153, -1.7173162698745728, -1.4940881729125977, -1.0251946150674485e-05, -4.351044481154531e-05, -1.0728830375228426e-06, -0.0021592890843749046, -0.09817621856927872, -0.4627780318260193, -0.18202999234199524, -2.3841830625315197e-06, -0.00014911970356479287, 0.0, -0.0001292145170737058, -2.6833648681640625, -2.218395948410034, -0.008681649342179298, -0.020606830716133118, -0.29710009694099426, -0.08217006921768188, -0.012399254366755486, -0.2943832576274872, -0.0033500047866255045, -3.576278118089249e-07, -0.0005488081369549036, -0.002026529749855399, -0.0003424296446610242, -0.0003361137059982866, -0.023220404982566833, -0.008617594838142395, -0.02943180315196514, -0.0021038558334112167, -0.14756356179714203, -0.09813094139099121, -0.41818487644195557, -1.378568410873413, -0.004743513651192188, -0.043707992881536484, -0.0015029336791485548, -0.18916724622249603, -1.9073468138230965e-06, -1.680836794548668e-05, -0.0007166677969507873, -1.1920928244535389e-07, -3.576272320060525e-06, 0.0, -4.768370445162873e-07, -0.8467936515808105, -0.00028308198670856655, -0.008011823520064354, -0.014401894994080067, -0.761786699295044, -0.000285227142740041, -0.0540040023624897, -1.2845021486282349, -1.909084439277649, -0.40048009157180786, -0.7592916488647461, -0.14170408248901367, -0.8822911381721497, -2.8659090995788574, -0.26236221194267273, -0.034549158066511154, -0.798715353012085, -8.630380034446716e-05, -0.48938050866127014, -0.13936637341976166, -0.48388671875, -0.0912344828248024, -1.935856819152832, -3.1470757676288486e-05, -7.152555099310121e-07, -0.13746342062950134, -0.25606152415275574, -0.00029297350556589663, -0.008345965296030045, -0.000856747676152736], "finish_reason": "length"}], "metrics": {"energy": 896.9317280712124, "energy_per_token": 3.5036395627781736, "time": 22.050262, "time_per_token": 0.0861338359375}}
{"outputs": [{"text": "if 'Title' not in df or 'Content' not in df:\n        print(\"Dataframe must contain at least two columns: 'Title' and 'Content'\")\n        plt.subplots()\n        return plt.gca()\n\n    filtered_data = df[df['Title'].str.contains('how|what', case=False)]\n    if filtered_data.empty:\n        print(\"There are no articles with titles containing 'how' or 'what'.\")\n        plt.subplots()\n        return plt.gca()\n\n    tfidf = TfidfVectorizer()\n    tfidf_values = tfidf.fit_transform(filtered_data['Content'])\n    tfidf_features = np.array(tfidf.get_feature_names_out())\n    tfidf_scores = list(tfidf_values.mean(axis=0).A1)\n\n    plt.subplots()\n    plt.bar(tfidf_features, tfidf_scores)\n    plt.xticks(rotation=90)\n    plt.ylabel('", "tokens": ["if", " '", "Title", "'", " not", " in", " df", " or", " '", "Content", "'", " not", " in", " df", ":", "\n", "        ", "print", "(", "\"", "Data", "frame", " must", " contain", " at", " least", " two", " columns", ":", " '", "Title", "'", " and", " '", "Content", "'", "\"", ")", "\n", "        ", "plt", ".", "sub", "plots", "()", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "filtered", "_", "data", " =", " df", "[", "df", "['", "Title", "']", ".", "str", ".", "contains", "('", "how", "|", "what", "'", ",", " case", "=", "False", ")]", "\n", "    ", "if", " filtered", "_", "data", ".", "empty", ":", "\n", "        ", "print", "(", "\"", "There", " are", " no", " articles", " with", " titles", " containing", " '", "how", "'", " or", " '", "what", "'", ".", "\"", ")", "\n", "        ", "plt", ".", "sub", "plots", "()", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "tf", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", "_", "values", " =", " tf", "id", "f", ".", "fit", "_", "transform", "(", "filtered", "_", "data", "['", "Content", "'])", "\n", "    ", "tf", "id", "f", "_", "features", " =", " np", ".", "array", "(", "tf", "id", "f", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "    ", "tf", "id", "f", "_", "scores", " =", " list", "(", "tf", "id", "f", "_", "values", ".", "mean", "(", "axis", "=", "0", ")", ".", "A", "1", ")", "\n", "\n", "    ", "plt", ".", "sub", "plots", "()", "\n", "    ", "plt", ".", "bar", "(", "tf", "id", "f", "_", "features", ",", " tf", "id", "f", "_", "scores", ")", "\n", "    ", "plt", ".", "xt", "icks", "(", "rotation", "=", "9", "0", ")", "\n", "    ", "plt", ".", "ylabel", "('"], "logprobs": [-1.1495336294174194, -0.2776464819908142, -0.010533686727285385, -0.00011562632425921038, -0.27052363753318787, -5.769562994828448e-05, -0.0025295186787843704, -2.420048236846924, -0.0037722873967140913, -0.0006052807439118624, -7.795983401592821e-05, -0.0004015354788862169, -0.00016556799528189003, -3.7431014789035544e-05, -0.008229158818721771, -0.01338790263980627, -0.008058889769017696, -2.7561001777648926, -0.5299733877182007, -0.04764721542596817, -2.4352660179138184, -0.3734843134880066, -1.3094923496246338, -0.488431453704834, -3.0294535160064697, -0.022849487140774727, -1.046920895576477, -0.014635349623858929, -0.3487485945224762, -0.16912616789340973, -0.006649272982031107, -0.0015968440566211939, -0.030644841492176056, -0.003352381056174636, -0.0012275787303224206, -0.010934553109109402, -0.42740342020988464, -0.004737581126391888, -0.0010555178159847856, -0.07596220076084137, -1.3981298208236694, -0.00039962888695299625, -3.6396775245666504, -0.02001727931201458, -0.12068381905555725, -0.08305460214614868, -0.016653452068567276, -0.34681716561317444, -0.3047301769256592, -0.021572934463620186, -0.023507703095674515, -0.0001902399235405028, -7.60526381782256e-05, -0.02584691531956196, -0.27149394154548645, -0.000606710382271558, -3.115449905395508, -0.13742154836654663, -2.7433152198791504, -0.01832355372607708, -0.02917572669684887, -0.5192634463310242, -0.15448594093322754, -0.13104456663131714, -0.0006829552003182471, -0.0004901876673102379, -0.001142325927503407, -0.09252941608428955, -8.451581379631534e-05, -0.09432179480791092, -1.1390495300292969, -0.556324303150177, -0.05754220113158226, -0.0028823756147176027, -0.3713794946670532, -0.0004273931554052979, -0.04096156358718872, -0.010582520626485348, -0.0026481819804757833, -0.8610509634017944, -0.07030686736106873, -0.7880712151527405, -0.2376195639371872, -0.13587790727615356, -1.7881377516459906e-06, -1.0728830375228426e-06, -0.002559483051300049, -0.03892948850989342, -0.00402379035949707, -0.0032420000061392784, -0.0007400158210657537, -0.08200414478778839, -0.0955425277352333, -0.007159648463129997, -2.167954444885254, -0.11355920881032944, -0.01839611865580082, -0.03809546306729317, -0.19960299134254456, -0.34988006949424744, -0.33566808700561523, -0.28923138976097107, -0.033785924315452576, -0.0013605633284896612, -0.010072828270494938, -0.0007683662115596235, -0.0012369846226647496, -0.02001342363655567, -1.595804214477539, -0.017656762152910233, -0.00022384998737834394, -9.83428253675811e-05, -0.023806676268577576, -0.02708345092833042, -5.1377883210079744e-05, -0.004032695200294256, -1.680836794548668e-05, -0.0002261144545627758, -0.0003133521240670234, -0.005770334508270025, -0.00032634177478030324, -0.0007294139941222966, -7.510157047363464e-06, -0.00018404220463708043, -5.483612312673358e-06, -3.58813522325363e-05, -0.0007999319350346923, -0.04222550615668297, -0.00039176418795250356, -2.1379506587982178, -0.16719292104244232, -0.00403613829985261, -0.7375494241714478, -0.017623264342546463, -4.768370445162873e-07, -0.007824603468179703, -2.3841855067985307e-07, -2.2411095415009186e-05, -4.768370445162873e-07, -0.4206385612487793, -0.8312795758247375, -0.049990687519311905, -0.6911786198616028, -0.00552306417375803, -0.006412761751562357, -0.09240105748176575, -3.5004944801330566, -0.0024673277512192726, -0.03262700140476227, -4.029192859889008e-05, -1.7881377516459906e-06, -0.00012158608296886086, -0.010813920758664608, -0.00014697425649501383, -1.8000440832111053e-05, -0.027857843786478043, -0.026576878502964973, -3.933898824470816e-06, -3.6954811548639555e-06, -0.05783690884709358, -0.001899820752441883, -0.12743601202964783, -0.2905235290527344, -0.2914430797100067, -1.2323894500732422, -0.003754354314878583, -0.0014303225325420499, -0.006143613718450069, -2.882801055908203, -0.025046665221452713, -2.0160412788391113, -2.1576648578047752e-05, -0.14790046215057373, -0.005485245026648045, -0.00034231049357913435, -1.764281842042692e-05, -9.536738616588991e-07, -0.0997292622923851, -7.176141662057489e-05, 0.0, -1.2159273865108844e-05, 0.0, -4.887569048150908e-06, -0.11980944871902466, -0.00015376816736534238, -0.0014105618465691805, -0.03102443739771843, -0.5221328735351562, -0.2618333399295807, -0.006005931179970503, -0.0025780319701880217, -0.0024378362577408552, -0.5172027349472046, -0.011636949144303799, -1.7096803188323975, -0.018740614876151085, -2.039478302001953, -4.637133679352701e-05, -2.3841830625315197e-06, -0.0009377372916787863, -7.211902266135439e-05, -0.05842437595129013, -2.824941635131836, -0.0004295380203984678, -0.0018849477637559175, -0.002702990546822548, -0.0003123987407889217, -0.003460730193182826, -6.568216485902667e-05, -1.1291303634643555, -0.026047052815556526, -0.0052430033683776855, -0.013800324872136116, -0.46513426303863525, -0.0002203936892328784, -0.7356492280960083, -0.0009514334378764033, -2.175330638885498, -0.0067070601508021355, -0.6366189122200012, -0.0032740819733589888, -0.04280736669898033, -0.4965268075466156, -0.0009757286752574146, -0.10357336699962616, -0.23205594718456268, -0.3148467540740967, -3.099436753473128e-06, -5.8412379075889476e-06, -0.00012087091454304755, -0.00298542738892138, -0.018368380144238472, -0.01171058975160122, -1.7404405298293568e-05, -2.7418097943154862e-06, -4.4225667807040736e-05, -0.00010871296399272978, -0.0902179703116417, -0.0019092203583568335, -0.03296605125069618, -0.022797519341111183, -3.0517112463712692e-05, -0.554063081741333, -3.290122185717337e-05, -0.0012072187382727861, -0.014926650561392307, -0.21695071458816528, -0.18107478320598602, -3.433168603805825e-05, -0.03264384716749191, -0.004175753798335791, -0.025649527087807655, -0.04698263481259346, -4.339123915997334e-05, -0.8930481672286987, -0.05908454209566116], "finish_reason": "length"}], "metrics": {"energy": 909.8326256961823, "energy_per_token": 3.554033694125712, "time": 22.244083, "time_per_token": 0.08689094921875}}
{"outputs": [{"text": "# Check if the 'Title' and 'Content' columns are present in the DataFrame\n    if 'Title' not in df.columns or 'Content' not in df.columns:\n        print(\"The DataFrame does not contain 'Title' and 'Content' columns\")\n        plt.figure()\n        return plt.gca()\n\n    # Extract the titles and content\n    titles = df['Title'].tolist()\n    content = df['Content'].tolist()\n\n    # Convert the list of titles to a string\n    titles_str = ' '.join(titles)\n\n    # Check if the string includes the words \"how\" or \"what\"\n    if not re.search(r'\\b(how|what)\\b', titles_str, re.IGNORECASE):\n        print(\"No articles found with titles containing 'how' or 'what'\")\n        plt.figure()\n        return plt.gca()\n\n    # Create a TF-IDF vectorizer with lower case, removing stop words, and a bigram character analyzer\n    vectorizer = TfidfVectorizer", "tokens": ["#", " Check", " if", " the", " '", "Title", "'", " and", " '", "Content", "'", " columns", " are", " present", " in", " the", " Data", "Frame", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "print", "(", "\"", "The", " Data", "Frame", " does", " not", " contain", " '", "Title", "'", " and", " '", "Content", "'", " columns", "\"", ")", "\n", "        ", "plt", ".", "figure", "()", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "#", " Ext", "ract", " the", " titles", " and", " content", "\n", "    ", "t", "itles", " =", " df", "['", "Title", "']", ".", "tol", "ist", "()", "\n", "    ", "content", " =", " df", "['", "Content", "']", ".", "tol", "ist", "()", "\n", "\n", "    ", "#", " Convert", " the", " list", " of", " titles", " to", " a", " string", "\n", "    ", "t", "itles", "_", "str", " =", " '", " '", ".", "join", "(", "t", "itles", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " string", " includes", " the", " words", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "if", " not", " re", ".", "search", "(", "r", "'\\", "b", "(", "how", "|", "what", ")\\", "b", "'", ",", " titles", "_", "str", ",", " re", ".", "IGN", "ORE", "C", "ASE", "):", "\n", "        ", "print", "(", "\"", "No", " articles", " found", " with", " titles", " containing", " '", "how", "'", " or", " '", "what", "'", "\"", ")", "\n", "        ", "plt", ".", "figure", "()", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "#", " Create", " a", " TF", "-", "ID", "F", " vector", "izer", " with", " lower", " case", ",", " removing", " stop", " words", ",", " and", " a", " big", "ram", " character", " analy", "zer", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer"], "logprobs": [-1.0111974477767944, -0.6307379007339478, -0.18224549293518066, -0.4321698248386383, -3.0880861282348633, -0.032645806670188904, -0.0013398488517850637, -0.15384241938591003, -0.0006409021443687379, -0.001210314454510808, -0.00047839165199548006, -0.004568733740597963, -1.051666021347046, -0.46340933442115784, -0.09975213557481766, -0.004065701272338629, -0.05922757834196091, -0.0020173690281808376, -0.07463777810335159, -0.002224115887656808, -0.03847121074795723, -0.10607527941465378, -0.0022021110635250807, -0.00012337400403339416, -0.13647526502609253, -9.775113539944869e-06, -0.0016483780927956104, -0.10270250588655472, -0.0001227780303452164, -0.006876612547785044, -0.0005768066039308906, -0.0007585985003970563, -7.748573807475623e-06, -1.5616295058862306e-05, -3.313963316031732e-05, -2.3483953555114567e-05, -2.0265373677830212e-05, -4.768360213347478e-06, -0.0013229437172412872, -0.0006901028100401163, -0.0030219147447496653, -1.6592904329299927, -0.18328900635242462, -0.03169762343168259, -1.2343038320541382, -0.1385027915239334, -0.003388023469597101, -0.5189785957336426, -0.00025149996508844197, -0.2920123338699341, -0.3788314163684845, -0.00048387263086624444, -7.10462118149735e-05, -0.08371943235397339, -0.01732700504362583, -0.00012373158824630082, -0.0003797286772169173, -0.001141373417340219, -1.2422114610671997, -0.0004637358069885522, -0.0004956685588695109, -0.022947005927562714, -1.8264846801757812, -0.0002603192115202546, -1.7935457229614258, -0.18971575796604156, -0.1322086602449417, -0.006608062423765659, -0.19078372418880463, -0.20052407681941986, -0.005171612370759249, -0.029869018122553825, -8.987976616481319e-05, -4.172238186583854e-05, -0.07021386176347733, -0.029146896675229073, -0.0009326160652562976, -0.051525235176086426, -1.9576878547668457, -0.012604808434844017, -0.7407222390174866, -2.9227230548858643, -2.1892082691192627, -0.4367425739765167, -2.201205253601074, -0.00032908268622122705, -0.30359601974487305, -0.0005430892342701554, -0.017578285187482834, -0.030660564079880714, -0.04843674227595329, -8.427741704508662e-05, -5.1377883210079744e-05, -1.230129599571228, -0.4372318685054779, -9.536738616588991e-07, -8.761498611420393e-05, -0.0014280608156695962, -0.0036233505234122276, -0.3293437063694, -0.009922820143401623, -0.010038367472589016, -0.0009133219718933105, -5.304672595229931e-05, -8.523101132595912e-05, -0.007588962092995644, -0.00401369808241725, -4.768370445162873e-07, -7.271740287251305e-06, -0.0003673355677165091, -0.025488706305623055, -0.00026306029758416116, -0.029778188094496727, -4.219056129455566, -0.9556373953819275, -2.332562208175659, -0.10318271070718765, -0.47990310192108154, -0.5940784215927124, -0.47182679176330566, -0.6673533916473389, -0.5427813529968262, -0.00011288482346571982, -0.3554620146751404, -0.001134109916165471, -0.10908638685941696, -0.48640790581703186, -0.0009480987209826708, -0.2791440486907959, -0.09899887442588806, -0.0008058876264840364, -0.00010001159535022452, -0.01270462665706873, -0.0299350805580616, -3.8980677345534787e-05, -0.00014041867689229548, -0.014417639933526516, -0.02236652560532093, -9.381330892210826e-05, -0.0036131355445832014, -1.0939750671386719, -0.031402502208948135, -0.9479697346687317, -0.6361708045005798, -2.684537649154663, -0.42469486594200134, -0.10537225753068924, -0.08095191419124603, -0.020869897678494453, -0.00112255965359509, -0.032988082617521286, -0.00019631843315437436, -0.0004932855372317135, -0.0028272203635424376, -0.10031086206436157, -0.0003071551618631929, -0.13129769265651703, -1.326613187789917, -0.12036775052547455, -5.173549288883805e-05, -0.04530871659517288, -0.1482306569814682, -0.004801885224878788, -0.08075059950351715, -0.0008819981012493372, -1.3098196983337402, -0.08904600888490677, -0.003772168420255184, -0.0022820401936769485, -0.013383550569415092, -0.00019226610311307013, -0.0005306981038302183, -4.827859811484814e-05, -0.0014353221049532294, -3.838465272565372e-05, 0.0, -0.35311606526374817, -0.1337861269712448, -6.437280717364047e-06, -0.01835702732205391, 0.0, 0.0, -4.9828242481453344e-05, -0.00204722979106009, -0.0011705459328368306, -0.0004483648226596415, -0.027835585176944733, -0.2827334403991699, -0.00887544360011816, -0.16615962982177734, -0.02342025376856327, -2.218184471130371, -0.07106105983257294, -0.0643172636628151, -0.36778682470321655, -0.06663631647825241, -0.017461147159337997, -0.0001517419150331989, -0.0024512740783393383, -9.870042413240299e-05, -0.0001370812824461609, -0.004065820015966892, -0.15730302035808563, -6.401333666872233e-05, -0.0001003691868390888, -0.009141613729298115, -0.014200471341609955, -2.1576648578047752e-05, -0.0009326160652562976, -0.00028200942324474454, -0.0007874249131418765, -0.0006948678637854755, -0.0003768687602132559, -0.0009346407605335116, -1.2040065485052764e-05, -4.303362584323622e-05, -4.768370445162873e-07, -2.52720492426306e-05, -0.0011547094909474254, -0.005429877433925867, -0.0006354220095090568, -0.01460680179297924, -2.0666160583496094, -0.09553775936365128, -1.5015980005264282, -0.008229395374655724, -2.753696753643453e-05, -0.00014327930693980306, -0.06225407496094704, -0.0008986725588329136, -2.821023941040039, -3.062256336212158, -2.8951432704925537, -1.3853694200515747, -1.4979723691940308, -0.21866701543331146, -0.06516244262456894, -0.7393540740013123, -0.28919103741645813, -2.6865386962890625, -2.8362953662872314, -0.02134762890636921, -2.726330280303955, -0.3967305123806, -2.312633478140924e-05, -0.02134902961552143, -0.0002972637885250151, -0.46579110622406006, -0.0008349508279934525, -0.0018543682526797056, -0.0001854724541772157, 0.0, -0.0013833011034876108, -5.960462772236497e-07, -9.536738616588991e-07, -2.3841855067985307e-07], "finish_reason": "length"}], "metrics": {"energy": 915.0559381618501, "energy_per_token": 3.574437258444727, "time": 22.449198, "time_per_token": 0.0876921796875}}
{"outputs": [{"text": "if not ('Title' in df.columns and 'Content' in df.columns):\n        # If the DataFrame does not contain the required columns, return an empty plot\n        ax = plt.plot()\n        return ax\n    df_filtered = df.loc[df['Title'].str.contains(r'(?=\\bhow\\b|\\bwhat\\b)', case=False, regex=True)]\n    # Filter the articles that contain the words \"how\" or \"what\" in their titles\n    if df_filtered.empty:\n        # If no articles have titles containing \"how\" or \"what,\" return an empty plot\n        ax = plt.plot()\n    else:\n        # Create a TF-IDF vectorizer with stop words removed, lowercase and tokenized\n        tfidf_vectorizer = TfidfVectorizer(stop_words='english', lowercase=True, token_pattern=r\"\\b\\w+\\b\")\n        # Transform the filtered DataFrame into a TF-IDF matrix\n        tfidf_matrix = tfidf_vectorizer.fit_transform(df_filtered['Content'])", "tokens": ["if", " not", " ('", "Title", "'", " in", " df", ".", "columns", " and", " '", "Content", "'", " in", " df", ".", "columns", "):", "\n", "        ", "#", " If", " the", " Data", "Frame", " does", " not", " contain", " the", " required", " columns", ",", " return", " an", " empty", " plot", "\n", "        ", "ax", " =", " plt", ".", "plot", "()", "\n", "        ", "return", " ax", "\n", "    ", "df", "_", "filtered", " =", " df", ".", "loc", "[", "df", "['", "Title", "']", ".", "str", ".", "contains", "(", "r", "'(", "?", "=\\", "b", "how", "\\", "b", "|\\", "b", "what", "\\", "b", ")'", ",", " case", "=", "False", ",", " regex", "=", "True", ")]", "\n", "    ", "#", " Filter", " the", " articles", " that", " contain", " the", " words", " \"", "how", "\"", " or", " \"", "what", "\"", " in", " their", " titles", "\n", "    ", "if", " df", "_", "filtered", ".", "empty", ":", "\n", "        ", "#", " If", " no", " articles", " have", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", ",", "\"", " return", " an", " empty", " plot", "\n", "        ", "ax", " =", " plt", ".", "plot", "()", "\n", "    ", "else", ":", "\n", "        ", "#", " Create", " a", " TF", "-", "ID", "F", " vector", "izer", " with", " stop", " words", " removed", ",", " lower", "case", " and", " token", "ized", "\n", "        ", "tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "'", ",", " lower", "case", "=", "True", ",", " token", "_", "pattern", "=", "r", "\"", "\\", "b", "\\", "w", "+\\", "b", "\"", ")", "\n", "        ", "#", " Transform", " the", " filtered", " Data", "Frame", " into", " a", " TF", "-", "ID", "F", " matrix", "\n", "        ", "tf", "id", "f", "_", "matrix", " =", " tf", "id", "f", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "df", "_", "filtered", "['", "Content", "'])"], "logprobs": [-1.1495336294174194, -3.0348029136657715, -1.9985144138336182, -0.015147419646382332, -0.00014208737411536276, -0.09983737021684647, -0.034284137189388275, -0.2440071702003479, -0.002312606666237116, -0.03648946434259415, -0.0031305374577641487, -0.00032669928623363376, -5.185469490243122e-05, -0.00012575789878610522, -0.0001851148990681395, -0.0004847066884394735, -3.099436753473128e-06, -0.0020236745476722717, -0.03739912807941437, -0.006737136282026768, -2.9870481491088867, -1.5873463153839111, -0.25148630142211914, -0.28042054176330566, -0.0036235882434993982, -0.49642226099967957, -0.0007708676857873797, -0.2313702553510666, -1.7101536989212036, -0.406231164932251, -0.014965053647756577, -0.1278056651353836, -0.17587338387966156, -0.067445769906044, -0.0021808191668242216, -0.02691369317471981, -0.26971080899238586, -0.002449371386319399, -2.5983619689941406, -0.010674049146473408, -0.02866777963936329, -0.00013076403411105275, -2.8793439865112305, -0.0851210206747055, -0.01620865985751152, -0.07796414196491241, -0.12048083543777466, -0.0033683013170957565, -0.0010457528987899423, -2.1417622566223145, -1.96938157081604, -1.6511576175689697, -1.4550038576126099, -0.025955641642212868, -0.015685750171542168, -1.603123426437378, -0.05680972710251808, -0.05570842698216438, -0.11757458001375198, -0.09100061655044556, -0.0006847421173006296, -0.0004901876673102379, -0.001800346071831882, -0.043103136122226715, -0.0002783149539027363, -0.18008999526500702, -0.5230339765548706, -0.07132772356271744, -1.496376395225525, -0.16776159405708313, -3.2075843811035156, -0.07402599602937698, -0.2046370655298233, -0.04430290684103966, -0.002027838258072734, -0.9005907773971558, -2.276871418871451e-05, -0.0004866131057497114, -0.0005808573332615197, -3.766942609217949e-05, -0.02633005566895008, -0.000957030919380486, -0.6256362199783325, -0.018331045284867287, -0.0037347583565860987, -0.8650994300842285, -0.12388158589601517, -0.0010339635191485286, -0.00046528480015695095, -0.10551633685827255, -0.25689685344696045, -0.08842650055885315, -1.5648205280303955, -0.9054027795791626, -0.24999602138996124, -2.2774548530578613, -2.273535966873169, -0.9271852970123291, -0.686072826385498, -0.19003826379776, -0.10675165802240372, -0.013735773041844368, -0.0006513857515528798, -0.019786713644862175, -0.0005088941543363035, -0.0005514293443411589, -0.004148449748754501, -0.07541712373495102, -0.560028076171875, -0.7929264903068542, -0.11071491241455078, -0.18942393362522125, -0.18146778643131256, -0.314083993434906, -0.0003583981015253812, -3.2186455882765586e-06, -0.004848627373576164, -0.10932237654924393, -0.005932461470365524, -0.021033097058534622, -0.0040076426230371, -0.05169856548309326, -0.012391248717904091, -0.577046811580658, -0.03721514716744423, -0.3075271248817444, -0.043657898902893066, -0.06722164899110794, -0.07903141528367996, -0.0020063049159944057, -0.0003703146940097213, -0.0007721779984422028, -0.00011860620725201443, -0.0002646096108946949, -0.14030484855175018, -0.000339569611242041, -0.027413485571742058, -0.005205292254686356, -0.0003103728231508285, -0.002050679875537753, -0.003190072951838374, -0.00014399446081370115, -0.007074899971485138, -0.00020954797219019383, -0.000382707774406299, -1.4305104514278355e-06, -0.0020509178284555674, -0.0001802282058633864, -0.00022027450904715806, -2.538156747817993, -0.014692558906972408, -7.855583680793643e-05, -0.00035506143467500806, -0.002301307860761881, -1.0696812868118286, -2.0885305404663086, -0.1842910796403885, -0.8916420340538025, -0.01120665855705738, -6.997340824455023e-05, -0.0002547178009990603, -0.1287825107574463, -0.002536890795454383, -2.624293804168701, -1.902058720588684, -0.3971007466316223, -1.3349013328552246, -3.284442663192749, -2.972024440765381, -0.3299896717071533, -2.010958671569824, -2.435527801513672, -1.7391421794891357, -0.6534740924835205, -0.0006735440110787749, -1.0114600658416748, -0.040923573076725006, -0.0004170263418927789, -0.8468881249427795, -0.08234816044569016, -0.026033230125904083, -0.0014609150821343064, -0.0009307105210609734, 0.0, -0.00062851223628968, 0.0, -2.0265558760002023e-06, 0.0, -0.0016245751176029444, -0.192617267370224, -8.106198947643861e-06, -2.2053474822314456e-05, -0.1010342538356781, -0.0007202415145002306, -4.768370445162873e-07, -0.011101385578513145, -8.511180931236595e-05, -0.19549459218978882, -8.34461570775602e-06, -0.002821395406499505, -0.00158565619494766, -0.0166111271828413, -0.025471972301602364, -0.3975285291671753, -0.0015747062861919403, -0.028655152767896652, -0.016622968018054962, -2.043196439743042, -0.11728901416063309, -0.09237606078386307, -0.25021547079086304, -0.0036950900685042143, -0.00560545502230525, -3.8980677345534787e-05, -0.0009872806258499622, -0.04164193198084831, -0.00236160634085536, -0.13995471596717834, -0.32722389698028564, -2.937868118286133, -0.017541270703077316, -1.1573904752731323, -1.2022920846939087, -0.001255677198059857, -0.9335174560546875, -0.17269976437091827, -0.41866984963417053, -0.0010656398953869939, -6.69933797325939e-05, -4.6132929128361866e-05, -0.05234859138727188, -0.08805444091558456, -0.00028689560713246465, -0.10978701710700989, -0.02392446994781494, -0.00038580605178140104, -0.04134367033839226, -0.00966559536755085, -0.009569959715008736, -0.001615172834135592, -3.4570634852570947e-06, -1.1920928244535389e-07, -7.390948667307384e-06, -2.622600959512056e-06, 0.0, -3.755022044060752e-05, -8.976056415122002e-05, -7.986990567587782e-06, -4.2437604861333966e-05, -0.0032443765085190535, -0.01126418262720108, -0.00042989550274796784, -8.34461570775602e-06, -0.03746756538748741, -0.0017059786478057504, -0.1078169122338295], "finish_reason": "length"}], "metrics": {"energy": 950.1001701250092, "energy_per_token": 3.711328789550817, "time": 26.096678, "time_per_token": 0.1019401484375}}
{"outputs": [{"text": "try:\n        if not {'Title', 'Content'}.issubset(df.columns):\n            raise ValueError(\"DataFrame should contain 'Title' and 'Content' columns\")\n        articles_list = df[df['Title'].str.contains(r'\\bhow\\b|\\bwhat\\b', case=False, regex=True)]\n        if not articles_list.empty:\n            titles = [item[0] for item in articles_list['Content'].tolist()]\n            vectorizer = TfidfVectorizer()\n            vectors = vectorizer.fit_transform(titles)\n            words = np.array(vectorizer.get_feature_names_out())\n            tfidf = np.array(vectors.sum(axis=0).tolist()).ravel()\n            plt.barh(words, tfidf)\n            plt.xlabel('TF-IDF score')\n            plt.ylabel('Features')\n            plt.yticks(rotation=30)\n            return plt.gca()\n        else:\n            raise ValueError('No articles found with \"how\" or \"", "tokens": ["try", ":", "\n", "        ", "if", " not", " {'", "Title", "'", ",", " '", "Content", "'}", ".", "iss", "ub", "set", "(", "df", ".", "columns", "):", "\n", "            ", "raise", " Value", "Error", "(", "\"", "DataFrame", " should", " contain", " '", "Title", "'", " and", " '", "Content", "'", " columns", "\"", ")", "\n", "        ", "articles", "_", "list", " =", " df", "[", "df", "['", "Title", "']", ".", "str", ".", "contains", "(", "r", "'\\", "b", "how", "\\", "b", "|\\", "b", "what", "\\", "b", "'", ",", " case", "=", "False", ",", " regex", "=", "True", ")]", "\n", "        ", "if", " not", " articles", "_", "list", ".", "empty", ":", "\n", "            ", "t", "itles", " =", " [", "item", "[", "0", "]", " for", " item", " in", " articles", "_", "list", "['", "Content", "']", ".", "tol", "ist", "()", "]", "\n", "            ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "            ", "vectors", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "t", "itles", ")", "\n", "            ", "words", " =", " np", ".", "array", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "            ", "tf", "id", "f", " =", " np", ".", "array", "(", "vectors", ".", "sum", "(", "axis", "=", "0", ")", ".", "tol", "ist", "())", ".", "ravel", "()", "\n", "            ", "plt", ".", "bar", "h", "(", "words", ",", " tf", "id", "f", ")", "\n", "            ", "plt", ".", "xlabel", "('", "TF", "-", "ID", "F", " score", "')", "\n", "            ", "plt", ".", "ylabel", "('", "Features", "')", "\n", "            ", "plt", ".", "yt", "icks", "(", "rotation", "=", "3", "0", ")", "\n", "            ", "return", " plt", ".", "g", "ca", "()", "\n", "        ", "else", ":", "\n", "            ", "raise", " Value", "Error", "('", "No", " articles", " found", " with", " \"", "how", "\"", " or", " \""], "logprobs": [-2.722443103790283, -0.0009996660519391298, -0.012156915850937366, -0.030227048322558403, -2.85516357421875, -1.6342041492462158, -3.2266743183135986, -0.010882080532610416, -0.0036047021858394146, -0.00014208737411536276, -0.00463933777064085, -0.0001991788885788992, -0.004825493786484003, -0.09976853430271149, -0.0004530118894763291, -3.862306402879767e-05, -1.1920928244535389e-07, -0.0009589364635758102, -0.528558611869812, -0.009445265866816044, -0.0002388668799540028, -0.025991301983594894, -0.026996660977602005, -0.0021445390302687883, -1.3790028095245361, -0.33897969126701355, -2.5987286790041253e-05, -0.0823022648692131, -0.03522124141454697, -0.3686714172363281, -1.902430534362793, -0.5630180835723877, -0.37589898705482483, -0.004432970657944679, -0.000442407006630674, -0.003176169702783227, -0.0006075443816371262, -0.0002706876548472792, -0.0004033228906337172, -0.005372372455894947, -0.2527974545955658, -0.00014983485743869096, -0.000458254711702466, -1.913879632949829, -2.8195958137512207, -1.4703723192214966, -3.2887096405029297, -0.013967737555503845, -0.2862454652786255, -0.8127274513244629, -0.18286891281604767, -0.2049088478088379, -0.0006705658161081374, -0.0007520469953306019, -0.0022251864429563284, -0.1195688396692276, -0.0003215749457012862, -0.14781634509563446, -0.38437867164611816, -0.05441175028681755, -0.4257955253124237, -0.0019945267122238874, -1.1459578275680542, -0.0485556460916996, -0.00018594920402392745, -0.005888732150197029, -9.679325739853084e-05, -0.0007278653793036938, -0.00037174468161538243, -6.794906312279636e-06, -0.1700778603553772, -0.00035041390219703317, -0.1002877876162529, -0.0073514897376298904, -0.005268855020403862, -1.418208122253418, -0.05085461959242821, -0.0008698494057171047, -0.0003023882454726845, -0.22123295068740845, -0.5865061283111572, -0.1469700187444687, -0.27349597215652466, -2.711181402206421, -0.04796484857797623, -4.7444173105759546e-05, -3.576278118089249e-07, -0.007384149823337793, -0.03166794031858444, -0.003487102687358856, -0.0030352259054780006, -0.006949894595891237, -4.692973613739014, -0.02777726575732231, -0.4323875308036804, -2.8044140338897705, -4.0935564041137695, -1.9681243896484375, -0.8519455194473267, -0.019647274166345596, -0.1332799196243286, -0.023976728320121765, -0.0002971446083392948, -0.0888964831829071, -4.827859811484814e-05, -6.6756979322235566e-06, -0.4906402826309204, -1.0715374946594238, -0.00029738296871073544, -0.11576174944639206, -2.6639323234558105, -5.960462772236497e-07, -0.004178721457719803, -0.022134752944111824, -0.010575797408819199, -0.024271488189697266, -0.7295604348182678, -0.01365651935338974, -0.0027877537067979574, -0.0005323661607690156, -3.576278118089249e-07, -3.838465272565372e-05, -3.576278118089249e-07, -1.0728830375228426e-06, -4.768370445162873e-07, -0.28571411967277527, -0.02161586657166481, -0.0022969073615968227, -1.3038322925567627, -0.0190851092338562, -0.01140137854963541, -1.1920928244535389e-07, -0.00017498392844572663, -0.001046229270286858, -2.074220174108632e-05, -1.2040065485052764e-05, -0.0026643513701856136, -0.009163939394056797, -5.483612312673358e-06, -0.0006594866863451898, -0.13842599093914032, -0.017149021849036217, -3.71201229095459, -0.16397248208522797, -1.4218083620071411, -2.6225699912174605e-05, -0.06430921703577042, -0.02445344440639019, -0.01076592318713665, 0.0, -5.006777428206988e-06, -0.002334847114980221, -5.960462772236497e-07, -9.298280929215252e-06, 0.0, -4.172316494077677e-06, -0.2330417037010193, -0.00013386306818574667, -0.003880472155287862, -0.02045559138059616, -0.021888814866542816, -2.5843992233276367, -0.3903496563434601, -0.1861691176891327, -1.9523532390594482, -0.9672776460647583, -3.1709168979432434e-05, -1.3538825511932373, -0.3572937846183777, -0.016759196296334267, -0.01243775524199009, -0.732330858707428, -1.0371154530730564e-05, -2.396077979938127e-05, -0.0037011471576988697, -0.00044431351125240326, -0.35105955600738525, -0.011937960051000118, -1.0924456119537354, -1.1920928244535389e-07, -1.6592503786087036, -0.15653063356876373, -0.09194381535053253, -0.00043811736395582557, -0.018093183636665344, -0.04109508916735649, -2.514260768890381, -0.002166188322007656, -0.47153475880622864, -1.265769362449646, -0.001655637752264738, -0.07398448139429092, -0.06376434117555618, -0.036345090717077255, -5.6503606174374e-05, -1.9073468138230965e-06, -0.12008467316627502, -0.009935449808835983, -0.009685547091066837, -0.05610883608460426, -2.109982233378105e-05, -0.643822968006134, -0.2579496204853058, -0.10435626655817032, -0.014409767463803291, -0.0005158047424629331, -0.0003331344632897526, -2.5968103408813477, -0.007786043919622898, -0.004405436106026173, -0.044738683849573135, -0.14089728891849518, -0.00014220656885299832, -0.3896639347076416, -0.017197182402014732, -1.6515347957611084, -0.006363131105899811, -0.00043406602344475687, -0.023728331550955772, -0.038880642503499985, -9.560128091834486e-05, -0.4461175501346588, -3.266281055402942e-05, -0.0034508698154240847, -0.6591974496841431, -0.0845877006649971, -2.479438304901123, -0.11991096287965775, -0.03456689044833183, -0.006546124815940857, -0.28714659810066223, -0.9111083149909973, -0.004748140461742878, -0.024647580459713936, -0.03234831243753433, -0.003028332721441984, -4.255681051290594e-05, -0.003413091180846095, -0.42541223764419556, -0.12419307231903076, -2.825220326485578e-05, -0.0015874415403231978, -0.0004807746736332774, -1.20263671875, -0.06041288375854492, -5.125986263010418e-06, -1.8910585641860962, -0.24825020134449005, -0.04983418807387352, -1.8452808856964111, -0.20105499029159546, -1.719240665435791, -0.05831226333975792, -0.001734539750032127, -0.044361066073179245, -0.0004182179400231689], "finish_reason": "length"}], "metrics": {"energy": 988.0263865089419, "energy_per_token": 3.859478072300554, "time": 27.563951, "time_per_token": 0.10767168359375}}
{"outputs": [{"text": "# Check if the DataFrame has the required columns\n    if 'Title' not in df.columns or 'Content' not in df.columns:\n        # If the DataFrame does not have the required columns, return an empty plot\n        plt.clf()\n        return plt.gca()\n\n    # Create a new DataFrame with articles that have titles containing the words \"how\" or \"what\"\n    new_df = df[df['Title'].str.lower().str.contains(r'\\b(how|what)\\b')]\n\n    # Check if there are any articles with titles containing \"how\" or \"what\"\n    if new_df.empty:\n        # If there are no articles with titles containing \"how\" or \"what\", return an empty plot\n        plt.clf()\n        return plt.gca()\n\n    # Create a TfidfVectorizer to calculate the TF-IDF scores for each word in the content of the articles\n    tfidf = TfidfVectorizer()\n\n    # Calculate the TF-IDF scores for the words in the content of the articles\n    tfidf_", "tokens": ["#", " Check", " if", " the", " Data", "Frame", " has", " the", " required", " columns", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "#", " If", " the", " Data", "Frame", " does", " not", " have", " the", " required", " columns", ",", " return", " an", " empty", " plot", "\n", "        ", "plt", ".", "cl", "f", "()", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "#", " Create", " a", " new", " Data", "Frame", " with", " articles", " that", " have", " titles", " containing", " the", " words", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "new", "_", "df", " =", " df", "[", "df", "['", "Title", "']", ".", "str", ".", "lower", "()", ".", "str", ".", "contains", "(", "r", "'\\", "b", "(", "how", "|", "what", ")\\", "b", "')", "]", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " articles", " with", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "if", " new", "_", "df", ".", "empty", ":", "\n", "        ", "#", " If", " there", " are", " no", " articles", " with", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", "\"", ",", " return", " an", " empty", " plot", "\n", "        ", "plt", ".", "cl", "f", "()", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "#", " Create", " a", " T", "f", "id", "f", "Vector", "izer", " to", " calculate", " the", " TF", "-", "ID", "F", " scores", " for", " each", " word", " in", " the", " content", " of", " the", " articles", "\n", "    ", "tf", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "\n", "    ", "#", " Calculate", " the", " TF", "-", "ID", "F", " scores", " for", " the", " words", " in", " the", " content", " of", " the", " articles", "\n", "    ", "tf", "id", "f", "_"], "logprobs": [-1.0111974477767944, -0.6307379007339478, -0.18224549293518066, -0.4321698248386383, -0.2791605591773987, -0.003108908887952566, -0.897624671459198, -1.3388594388961792, -0.5905814170837402, -0.06829141825437546, -0.15779292583465576, -0.0017878514481708407, -0.08984842151403427, -0.15474320948123932, -0.005403555929660797, -7.009260298218578e-05, -0.07863401621580124, -4.887569048150908e-06, -0.0017144280718639493, -0.07135958224534988, -0.00013517419574782252, -0.00855258945375681, -0.0008672290714457631, -0.00018106251081917435, -1.6093124941107817e-05, -2.8132995794294402e-05, -1.07287787614041e-05, -1.156323378381785e-05, -1.4424220353248529e-05, -2.50339189733495e-06, -0.0015070997178554535, -0.0007759897271171212, -0.0037794129457324743, -1.7571152448654175, -1.7128477096557617, -0.9454829096794128, -0.22285054624080658, -0.0011045790743082762, -0.7412605285644531, -0.00038246947224251926, -0.16169939935207367, -0.22913837432861328, -0.17591717839241028, -0.002591111231595278, -0.010447571985423565, -0.17104482650756836, -0.1352023035287857, -0.002326997695490718, -0.05203098803758621, -0.04273289442062378, -0.0013637775555253029, -1.2215653657913208, -0.0004240567213855684, -1.5130136013031006, -0.012365816161036491, -0.0005747812101617455, -0.0655181035399437, -0.007960261777043343, -0.2222273200750351, -0.060479652136564255, -0.008574219420552254, -0.009776568040251732, -3.707340147229843e-05, -9.214453893946484e-05, -0.004974844865500927, -0.033284351229667664, -0.000706780469045043, -0.04731173813343048, -1.8343416452407837, -0.04950852319598198, -1.1461100578308105, -0.25635650753974915, -0.0005663221818394959, -0.33991339802742004, -1.101825475692749, -0.4643651247024536, -0.1419447958469391, -0.29917293787002563, -0.38001400232315063, -1.8684593439102173, -0.22175031900405884, -0.0694049820303917, -0.027600320056080818, -0.0008930747280828655, -0.008200664073228836, -0.0002029928145930171, -0.000359351426595822, -0.0037912887055426836, -0.032787024974823, -0.0004812512779608369, -3.0437111854553223, -0.06417059898376465, -0.05137622356414795, -0.004416355397552252, -0.004106423351913691, -0.2686355710029602, -0.073668472468853, -0.07646016776561737, -0.0004555141495075077, -0.00013684290752280504, -0.0002585315378382802, -0.08384835720062256, -3.731181277544238e-05, -2.022631883621216, -0.00021050144277978688, -0.00046588058467023075, -0.017234912142157555, -4.410734163684538e-06, -0.002978890435770154, -1.367964506149292, -0.12685422599315643, -0.1061570793390274, -0.0009712031460367143, -0.2965046465396881, -0.09906722605228424, -0.0023586330935359, -0.002526545897126198, -0.012382889166474342, -0.0002774807217065245, -0.029951393604278564, -0.019490979611873627, -0.09263242781162262, -0.09123100340366364, -0.00030751267331652343, -0.06508816033601761, -0.7997748851776123, -0.008824399672448635, -0.0832052230834961, -0.011221865192055702, -0.180769681930542, -0.10680008679628372, -0.17237423360347748, -0.027764281257987022, -0.05618276447057724, -0.6561712026596069, -0.0010825494537129998, -4.660974445869215e-05, -0.0009939497103914618, -5.6265202147187665e-05, -0.00016711745411157608, -0.0060484702698886395, -0.01069185882806778, -0.00010275312524754554, -0.005552583374083042, -0.12425719201564789, -1.4305104514278355e-06, -4.768370445162873e-07, -0.0008526980527676642, -0.08080645650625229, -0.003497437806800008, -0.0012732979375869036, -0.0007251255447044969, -0.010777126997709274, -0.005903071723878384, -0.04348647966980934, -0.0010120513616129756, -0.0012363893911242485, -0.20851199328899384, -0.21112628281116486, -0.019999751821160316, -0.013381903059780598, -0.012478255666792393, -0.000301673193462193, -0.0008436457719653845, -0.0007435894221998751, -7.080780778778717e-05, -0.00044490929576568305, -0.35851526260375977, -0.01057320274412632, -0.0033464403823018074, -0.0011762612266466022, -0.0001370812824461609, -0.0007046362152323127, -0.0006671110168099403, -0.0002157455455744639, -0.00359745672903955, -1.311301275563892e-06, -0.00023719835735391825, -4.172316494077677e-06, -1.2874520507466514e-05, -6.997340824455023e-05, -0.0007428746903315187, -0.001848061801865697, -0.00037925204378552735, -1.9430925021879375e-05, -0.00014065706636756659, -3.0874729418428615e-05, -4.017272294731811e-05, -0.00011884459672728553, -0.01586892269551754, -0.0005528590409085155, -0.03540535643696785, -1.584222674369812, -0.06269632279872894, -1.4092775583267212, -7.676783570786938e-05, -0.0012506766943261027, -0.2608737349510193, -0.002904841210693121, -8.95221673999913e-05, -2.278470039367676, -0.08137058466672897, -0.2732829451560974, -0.016434187069535255, -0.0006376855308189988, -1.0609570381348021e-05, -2.6225699912174605e-05, -0.015359334647655487, -1.4095909595489502, -1.582728385925293, -0.1433868706226349, -0.04929044470191002, -0.019952543079853058, -0.171656996011734, -0.15902893245220184, -0.11223296076059341, -0.07008105516433716, -0.025248240679502487, -0.0005532164941541851, -0.8117464184761047, -0.026110349223017693, -0.0004180987598374486, -0.2890770435333252, -0.00027616979787126184, 0.0, -1.9073468138230965e-06, 0.0, -1.1920922133867862e-06, 0.0, -0.4887194037437439, -0.015813305974006653, -1.617506504058838, -0.00012718822108581662, -0.006155579816550016, -1.0115082263946533, -0.003307113191112876, -0.003465482033789158, -0.0002681849291548133, -2.7894584491150454e-05, -2.109982233378105e-05, -0.0047578695230185986, -0.07838263362646103, -2.99851393699646, -0.23650169372558594, -0.0015041239093989134, -0.010069996118545532, -0.0022545652464032173, -0.00918484665453434, -0.016845356673002243, -0.06417987495660782, -0.1006963923573494, -0.00014399446081370115, -0.5052714943885803, -0.006171574350446463, -0.0007089247228577733, -0.04283854365348816], "finish_reason": "length"}], "metrics": {"energy": 965.7915146522531, "energy_per_token": 3.7726231041103637, "time": 25.669127, "time_per_token": 0.10027002734375}}
{"outputs": [{"text": "import numpy as np\n    import matplotlib.pyplot as plt\n    from sklearn.feature_extraction.text import TfidfVectorizer\n\n    # Check if the DataFrame contains 'Title' and 'Content' columns\n    if 'Title' not in df.columns or 'Content' not in df.columns:\n        return plt.figure()\n\n    # Identify articles that have \"how\" or \"what\" in the title\n    df['has_how_or_what'] = df['Title'].str.contains(r'\\b(how|what)\\b', case=False)\n\n    # Keep only the articles that have \"how\" or \"what\" in the title\n    df_how_or_what = df[df['has_how_or_what']]\n\n    # Check if there are any articles that have \"how\" or \"what\" in the title\n    if df_how_or_what.empty:\n        return plt.figure()\n\n    # Calculate the TF-IDF scores for the content\n    vectorizer = TfidfVectorizer()\n    tfidf = vectorizer.fit_transform", "tokens": ["import", " numpy", " as", " np", "\n", "    ", "import", " matplotlib", ".", "py", "plot", " as", " plt", "\n", "    ", "from", " sklearn", ".", "feature", "_", "ext", "raction", ".", "text", " import", " T", "f", "id", "f", "Vector", "izer", "\n", "\n", "    ", "#", " Check", " if", " the", " Data", "Frame", " contains", " '", "Title", "'", " and", " '", "Content", "'", " columns", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "return", " plt", ".", "figure", "()", "\n", "\n", "    ", "#", " Ident", "ify", " articles", " that", " have", " \"", "how", "\"", " or", " \"", "what", "\"", " in", " the", " title", "\n", "    ", "df", "['", "has", "_", "how", "_", "or", "_", "what", "']", " =", " df", "['", "Title", "']", ".", "str", ".", "contains", "(", "r", "'\\", "b", "(", "how", "|", "what", ")\\", "b", "'", ",", " case", "=", "False", ")", "\n", "\n", "    ", "#", " Keep", " only", " the", " articles", " that", " have", " \"", "how", "\"", " or", " \"", "what", "\"", " in", " the", " title", "\n", "    ", "df", "_", "how", "_", "or", "_", "what", " =", " df", "[", "df", "['", "has", "_", "how", "_", "or", "_", "what", "']", "]", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " articles", " that", " have", " \"", "how", "\"", " or", " \"", "what", "\"", " in", " the", " title", "\n", "    ", "if", " df", "_", "how", "_", "or", "_", "what", ".", "empty", ":", "\n", "        ", "return", " plt", ".", "figure", "()", "\n", "\n", "    ", "#", " Calculate", " the", " TF", "-", "ID", "F", " scores", " for", " the", " content", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform"], "logprobs": [-2.852440357208252, -3.1865761280059814, -0.01029290072619915, -0.001207337831147015, -0.01096520945429802, -0.19087059795856476, -0.39947089552879333, -0.667766809463501, -0.04269028827548027, -0.0026844439562410116, -4.9470632802695036e-05, -0.00044586253352463245, -0.0033724596723914146, -0.002228278899565339, -0.13811038434505463, -0.18772482872009277, -0.009516943246126175, -9.464769391342998e-05, -0.00038938093348406255, -2.3841855067985307e-07, -1.4066597032069694e-05, -4.768370445162873e-07, -0.0016381428577005863, -3.0397906812140718e-05, -1.156323378381785e-05, -0.001189477858133614, -2.3841855067985307e-07, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0008329259580932558, -1.0728830375228426e-06, -0.0008615119731985033, -0.449884295463562, -0.0032427129335701466, -0.5871613621711731, -0.7509104013442993, -0.17838191986083984, -0.4632536470890045, -0.27585369348526, -0.0031935188453644514, -0.5704090595245361, -0.7506424784660339, -0.01029065903276205, -0.0012291265884414315, -0.0062020220793783665, -0.00038699767901562154, -0.0008498394163325429, -0.0013156814966350794, -0.020324772223830223, -0.0559261217713356, -0.0011130335042253137, -0.04388325288891792, -0.12123551219701767, -0.0028225842397660017, -2.9682672902708873e-05, -0.09041368961334229, -1.0371154530730564e-05, -0.0018994638230651617, -0.11205020546913147, -0.0002644904307089746, -0.010268595069646835, -0.0006548406090587378, -0.0003343261778354645, -8.22540732769994e-06, -7.164221460698172e-05, -0.00015400654228869826, -1.5020257706055418e-05, -1.1205610462639015e-05, -2.9802276912960224e-06, -0.0008611546363681555, -0.0004943578969687223, -0.0033959834836423397, -1.5380672216415405, -0.2670519948005676, -0.011603484861552715, -1.2084214687347412, -0.024861793965101242, -0.40448734164237976, -0.016030123457312584, -0.0007826602668501437, -0.03878971189260483, -2.7466840744018555, -0.0031726048327982426, -0.12038973718881607, -2.9598844051361084, -0.6954110264778137, -1.6912676095962524, -0.029076265171170235, -0.0036562515888363123, -0.06254179775714874, -0.0003992714046034962, -0.0008993871742859483, -0.0009703694959171116, -0.02009229175746441, -0.3286252021789551, -0.15745039284229279, -0.042636144906282425, -0.0017080017132684588, -0.8068570494651794, -0.4209999740123749, -1.3094327449798584, -0.05757146328687668, -0.3039100170135498, -0.040079303085803986, -0.7909712791442871, -8.225102646974847e-05, -0.0006119524477981031, -0.02598131261765957, -0.0001618731184862554, -0.030465396121144295, -0.010611655190587044, -0.00026306029758416116, -3.4450891689630225e-05, -9.405170567333698e-05, -0.6161262392997742, -4.136476854910143e-05, -0.4578186273574829, -0.3372548520565033, -0.017763571813702583, -0.162776917219162, -0.0006759266252629459, -0.2993808686733246, -0.12818609178066254, -0.0014726994559168816, -0.0011798333143815398, -0.01073030661791563, -0.00033861625706776977, -0.122222900390625, -5.435795901576057e-05, -0.08019018918275833, -0.002414052141830325, -0.007956004701554775, -0.23516087234020233, -0.028501998633146286, -0.7494893074035645, -0.0001429217227268964, -0.016204319894313812, -3.5848522186279297, -0.21129480004310608, -0.8535782694816589, -0.2224741280078888, -0.48824542760849, -0.05065292865037918, -0.035794422030448914, -0.000724887300748378, -0.00015948931104503572, -0.0013617537915706635, -6.508615479106084e-05, -0.00011920218821614981, -0.00027259447961114347, -0.006488683633506298, -0.006005931179970503, -0.0016673009376972914, -0.013803616166114807, -0.00018666432879399508, -0.05994279310107231, -2.484168529510498, -2.1399075984954834, -0.05413726344704628, -0.5897676944732666, -0.00015400654228869826, -0.0011651878012344241, -0.012746763415634632, -6.580135959666222e-05, -0.01662343740463257, -0.0012346034636721015, -0.0001774868869688362, -0.00031001531169749796, -2.3841855067985307e-07, -1.4424220353248529e-05, -6.556489552167477e-06, -1.1920928244535389e-07, 0.0, -1.883488948806189e-05, -4.0531076592742465e-06, -0.11642036586999893, -0.02269660495221615, -0.02738936059176922, -0.0003067976504098624, -0.05141665041446686, -0.8308650255203247, -0.01443491317331791, -0.12895961105823517, -0.021989576518535614, -0.2574072480201721, -0.06228174269199371, -1.3193330764770508, -0.07555054873228073, -0.00905018113553524, -0.0005461869877763093, -5.61460001335945e-05, -0.0009640575153753161, -0.00010430268594063818, -0.00017891713650897145, -0.0006889115320518613, -0.009164529852569103, -0.004855626728385687, -0.001128632458858192, -0.005298262927681208, -0.0001787979417713359, -0.0035042089875787497, -0.08504755049943924, -0.001960976282134652, -1.5497195136049413e-06, -4.887569048150908e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.00021205084340181202, -0.0010590903693810105, -0.13138936460018158, -0.0018887552432715893, -0.0006721144891344011, -0.000878544058650732, -0.0077498480677604675, -0.0028248426970094442, -8.809178689261898e-05, -0.0013165149139240384, -0.00036113892565481365, -0.000888191512785852, -0.0027676632162183523, -0.0006332775810733438, -0.03496376425027847, -2.1711015701293945, -0.5085123777389526, -0.024659443646669388, -0.0023136769887059927, -9.417489309271332e-06, -5.209310256759636e-05, -0.08500967174768448, -0.21288363635540009, -0.2469104379415512, -1.3040506839752197, -2.1367080211639404, -0.00096941675292328, -0.4741770923137665, -0.000525217386893928, -0.001081953989341855, -0.0001280225842492655, -4.768370445162873e-07, -0.00014208737411536276, 0.0, -1.0728830375228426e-06, 0.0, -0.22135314345359802, -0.0021328814327716827, -0.007398704532533884, -0.12802457809448242, -0.015222798101603985, -0.00038342276820912957, -0.5683797001838684, -0.0006504327175207436, 0.0, -3.731181277544238e-05, -6.937739817658439e-05, -5.0424259825376794e-05, -2.396077979938127e-05], "finish_reason": "length"}], "metrics": {"energy": 935.4960480499269, "energy_per_token": 3.654281437695027, "time": 25.106636, "time_per_token": 0.098072796875}}
{"outputs": [{"text": "# Check if the DataFrame has 'Title' and 'Content' columns\n    if 'Title' not in df.columns or 'Content' not in df.columns:\n        return\n\n    # Identify articles with titles that include the words \"how\" or \"what\"\n    df_filtered = df[df['Title'].str.contains('How|What', case=False, na=False)]\n\n    # Check if there are any articles with titles containing \"how\" or \"what\"\n    if df_filtered.empty:\n        return\n\n    # Get the content of the articles\n    corpus = df_filtered['Content']\n\n    # Calculate TF-IDF scores for the words in the content\n    vectorizer = TfidfVectorizer()\n    tfidf_matrix = vectorizer.fit_transform(corpus)\n\n    # Extract TF-IDF scores for each word\n    feature_names = vectorizer.get_feature_names_out()\n    tfidf_scores = tfidf_matrix.sum(axis=0).A1\n\n    # Create a DataFrame with the feature names and TF", "tokens": ["#", " Check", " if", " the", " Data", "Frame", " has", " '", "Title", "'", " and", " '", "Content", "'", " columns", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "return", "\n", "\n", "    ", "#", " Ident", "ify", " articles", " with", " titles", " that", " include", " the", " words", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "df", "_", "filtered", " =", " df", "[", "df", "['", "Title", "']", ".", "str", ".", "contains", "('", "How", "|", "What", "'", ",", " case", "=", "False", ",", " na", "=", "False", ")]", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " articles", " with", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "if", " df", "_", "filtered", ".", "empty", ":", "\n", "        ", "return", "\n", "\n", "    ", "#", " Get", " the", " content", " of", " the", " articles", "\n", "    ", "cor", "pus", " =", " df", "_", "filtered", "['", "Content", "']", "\n", "\n", "    ", "#", " Calculate", " TF", "-", "ID", "F", " scores", " for", " the", " words", " in", " the", " content", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "cor", "pus", ")", "\n", "\n", "    ", "#", " Ext", "ract", " TF", "-", "ID", "F", " scores", " for", " each", " word", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "tf", "id", "f", "_", "scores", " =", " tf", "id", "f", "_", "matrix", ".", "sum", "(", "axis", "=", "0", ")", ".", "A", "1", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " with", " the", " feature", " names", " and", " TF"], "logprobs": [-1.0111974477767944, -0.6307379007339478, -0.18224549293518066, -0.4321698248386383, -0.2791605591773987, -0.003108908887952566, -0.897624671459198, -0.7202242612838745, -0.007433493155986071, -0.0008760428754612803, -0.004276298452168703, -0.0006563892820850015, -0.0009496469865553081, -0.0008238735608756542, -0.006452204193919897, -0.1068730428814888, -0.0019728736951947212, -0.04828374832868576, -0.10936468839645386, -0.0025159630458801985, -9.250213042832911e-05, -0.09456920623779297, -2.0265373677830212e-05, -0.001754413009621203, -0.0962323471903801, -0.00013982271775603294, -0.008183637633919716, -0.0010186012368649244, -0.001026222831569612, -1.0251946150674485e-05, -1.585470999998506e-05, -1.3708974620385561e-05, -1.9311717551317997e-05, -1.6689160474925302e-05, -2.9802276912960224e-06, -0.0008395960903726518, -0.0008666335488669574, -0.003134934464469552, -1.2604131698608398, -1.8449382781982422, -0.06906426697969437, -0.0007281036232598126, -0.03565132990479469, -3.004178047180176, -0.004527318757027388, -0.14355480670928955, -0.09902112185955048, -0.09892480820417404, -0.5041584372520447, -0.054676685482263565, -0.19347624480724335, -0.037892214953899384, -0.056305598467588425, -0.012270438484847546, -0.0005749003030359745, -0.006276419851928949, -0.0001726001501083374, -0.0003064401389565319, -0.005020985845476389, -0.03193850442767143, -0.001416275859810412, -0.7177749872207642, -1.7058038711547852, -1.0378096103668213, -0.008983196690678596, -0.00276445341296494, -0.35682132840156555, -0.06052543595433235, -0.02594960294663906, -0.00040415700641460717, -0.00010668662434909493, -0.0004204819560982287, -0.037571020424366, -2.0503786799963564e-05, -0.05456516519188881, -0.5197332501411438, -3.2111830711364746, -0.06076609343290329, -0.0021114691626280546, -0.263894259929657, -8.987976616481319e-05, -0.10252241045236588, -0.004137883894145489, -0.0009240409708581865, -0.671064555644989, -1.8971216678619385, -0.00017331528943032026, -0.0004596845537889749, -0.04569713771343231, -0.03330729529261589, -0.10525541752576828, -0.00028606137493625283, -0.05814536288380623, -0.6407611966133118, -0.010354016907513142, -0.20929864048957825, -0.013467412441968918, -0.25018009543418884, -0.15688449144363403, -0.1775616854429245, -0.27593719959259033, -0.5098536610603333, -0.03340829536318779, -0.004068194422870874, -6.282132380874828e-05, -0.0016429034294560552, -7.629103492945433e-05, -0.00015555603022221476, -0.009275440126657486, -0.007596415467560291, -7.784063927829266e-05, -0.0020231986418366432, -0.043607454746961594, -0.00013457823661156, -3.4570634852570947e-06, -0.0006798578542657197, -0.10146302729845047, -0.0011815002653747797, -0.00029762129997834563, -0.0006392342620529234, -0.023995349183678627, -0.0049441223964095116, -0.0020233176182955503, -0.0004017737810499966, -0.02473178133368492, -2.3238916397094727, -0.05804300680756569, -0.2101399451494217, -0.13298356533050537, -0.35484591126441956, -0.1601410210132599, -1.1292312145233154, -0.0001380348257953301, -2.17677640914917, -0.0032976078800857067, -0.007243206258863211, -0.052103977650403976, -0.0018046298064291477, -9.298280929215252e-06, -0.014499888755381107, -0.0005432083853520453, -2.1934269170742482e-05, -1.081886649131775, -0.02339288778603077, -0.00027926836628466845, -0.009733478538691998, -1.2398676872253418, -0.6061946749687195, -0.009336736053228378, -1.6927575416048057e-05, -4.434487345861271e-05, -0.03413103520870209, -0.42124924063682556, -0.4032529890537262, -0.12764756381511688, -0.020525315776467323, -0.004426443483680487, -0.03514815866947174, -0.5624035000801086, -0.0010203876299783587, -0.24008449912071228, -0.0010896942112594843, -0.00041345154750160873, -0.0001915509783430025, -3.576278118089249e-07, -5.245195097813848e-06, 0.0, -8.344646857949556e-07, -3.576278118089249e-07, -0.13990464806556702, -0.005067243706434965, -0.0018605556106194854, -0.2848585844039917, -0.02638752944767475, -0.0003625689132604748, -1.1985349655151367, -0.22174735367298126, -0.00014220656885299832, -0.00020251607929822057, -2.3841855067985307e-07, -0.00019393471302464604, -4.31528314948082e-05, -1.2874520507466514e-05, -2.95634672511369e-05, -0.0005597693379968405, -0.0002858230145648122, -3.576278118089249e-07, -0.006356497760862112, -0.008076036348938942, -0.8259907960891724, -0.0002517383254598826, -0.01553153432905674, -1.237217664718628, -0.002001189161092043, -2.8057944774627686, -0.0018648391123861074, -3.290122185717337e-05, -2.5152843591058627e-05, -0.018086159601807594, -0.7306628823280334, -0.4143819808959961, -0.43006059527397156, -0.38938286900520325, -7.247662142617628e-05, -0.4592144191265106, -0.00019536493346095085, -0.019382717087864876, -0.00021360022947192192, -0.02216903306543827, -1.1920928244535389e-07, -1.7881377516459906e-06, -1.9073304429184645e-05, 0.0, -3.933898824470816e-06, 0.0, -4.529942543740617e-06, -0.4161794185638428, -0.0001879753835964948, -0.0068284254521131516, -0.00867692194879055, -0.01842678152024746, -0.4851183593273163, -0.010840925388038158, -0.0033515493851155043, -0.016242438927292824, -0.03738006576895714, -0.0023142718710005283, -0.9578006267547607, -0.00025197668583132327, -5.960462772236497e-07, -2.0265558760002023e-06, -8.344646857949556e-07, -0.005811342969536781, -1.0972416400909424, -0.000393432448618114, -6.83045873302035e-05, -0.000188332938705571, -0.0005658455775119364, -0.00040368037298321724, -0.02650037780404091, -0.29041314125061035, -0.039997413754463196, -0.04140188917517662, -0.04439413547515869, -0.00015841660206206143, -0.00462343730032444, -0.7360172271728516, -0.06933802366256714, -1.7296266555786133, -0.0006957017467357218, -0.43328654766082764, -0.7148725986480713, -0.6526480913162231, -0.007691530045121908, -0.02060764841735363, -1.9357576370239258], "finish_reason": "length"}], "metrics": {"energy": 916.0932960567476, "energy_per_token": 3.5784894377216703, "time": 22.425098, "time_per_token": 0.0875980390625}}
{"outputs": [{"text": "try:\n        titles = df['Title']\n        articles = df['Content']\n        filtered_articles = []\n\n        pattern = r'\\b(how|what)\\b'\n        for article in titles:\n            if re.search(pattern, article, re.IGNORECASE):\n                filtered_articles.append(article)\n\n        if len(filtered_articles) == 0:\n            return plt.figure(figsize=(15, 4))\n\n        article_content = articles.loc[titles.isin(filtered_articles)].values\n\n        vectorizer = TfidfVectorizer()\n        X = vectorizer.fit_transform(article_content)\n        X = X.toarray()[0]\n\n        plt.figure(figsize=(15, 4))\n        ax = plt.bar(np.arange(X.size), X)\n\n        plt.xlabel('Features')\n        plt.ylabel('TF-IDF Score')\n        plt.xticks(rotation='vertical')\n\n        feature_names = np.array(vectorizer.get_feature_names_out", "tokens": ["try", ":", "\n", "        ", "t", "itles", " =", " df", "['", "Title", "']", "\n", "        ", "articles", " =", " df", "['", "Content", "']", "\n", "        ", "filtered", "_", "articles", " =", " []", "\n", "\n", "        ", "pattern", " =", " r", "'\\", "b", "(", "how", "|", "what", ")\\", "b", "'", "\n", "        ", "for", " article", " in", " titles", ":", "\n", "            ", "if", " re", ".", "search", "(", "pattern", ",", " article", ",", " re", ".", "IGN", "ORE", "C", "ASE", "):", "\n", "                ", "filtered", "_", "articles", ".", "append", "(", "article", ")", "\n", "\n", "        ", "if", " len", "(", "filtered", "_", "articles", ")", " ==", " ", "0", ":", "\n", "            ", "return", " plt", ".", "figure", "(", "fig", "size", "=(", "1", "5", ",", " ", "4", "))", "\n", "\n", "        ", "article", "_", "content", " =", " articles", ".", "loc", "[", "t", "itles", ".", "isin", "(", "filtered", "_", "articles", ")]", ".", "values", "\n", "\n", "        ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "        ", "X", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "article", "_", "content", ")", "\n", "        ", "X", " =", " X", ".", "to", "array", "()[", "0", "]", "\n", "\n", "        ", "plt", ".", "figure", "(", "fig", "size", "=(", "1", "5", ",", " ", "4", "))", "\n", "        ", "ax", " =", " plt", ".", "bar", "(", "np", ".", "ar", "ange", "(", "X", ".", "size", ")", ",", " X", ")", "\n", "\n", "        ", "plt", ".", "xlabel", "('", "Features", "')", "\n", "        ", "plt", ".", "ylabel", "('", "TF", "-", "ID", "F", " Score", "')", "\n", "        ", "plt", ".", "xt", "icks", "(", "rotation", "='", "vertical", "')", "\n", "\n", "        ", "feature", "_", "names", " =", " np", ".", "array", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out"], "logprobs": [-2.722443103790283, -0.0009996660519391298, -0.012156915850937366, -0.030227048322558403, -3.0878047943115234, -0.010097138583660126, -0.258461058139801, -0.09636042267084122, -0.5868568420410156, -0.0019279003608971834, -0.008138115517795086, -0.26031649112701416, -0.12978990375995636, -3.5291104316711426, -0.14858973026275635, -0.18797004222869873, -0.8713611364364624, -0.012087547220289707, -0.008054632693529129, -0.016747474670410156, -1.1462256908416748, -3.509096145629883, -0.1840389221906662, -0.22163322567939758, -0.021036949008703232, -0.44493424892425537, -0.006047403905540705, -1.8234766721725464, -0.00535221491008997, -3.080538272857666, -0.05504636466503143, -1.0532371997833252, -1.1664936542510986, -0.02635316178202629, -0.19836269319057465, -0.3713937997817993, -0.013994775712490082, -0.006041716318577528, -0.042710162699222565, -0.0073685296811163425, -0.02150445058941841, -0.03602880239486694, -0.43743887543678284, -0.4073667526245117, -2.785947799682617, -0.4576287865638733, -1.861783742904663, -0.013042616657912731, -0.001420561340637505, -0.003578926669433713, -0.3381733298301697, -0.04991062730550766, -4.434487345861271e-05, -0.06669341772794724, -0.00021228920377325267, -0.0007043979712761939, -0.0004338276921771467, -0.01815394125878811, -0.45444685220718384, -0.31891217827796936, -6.437280717364047e-06, -0.021125657483935356, -1.1920928244535389e-07, 0.0, -1.811964830267243e-05, -0.033502254635095596, -0.0015518538421019912, -0.0011942405253648758, -0.09363456070423126, -0.00016378014697693288, -0.0030137142166495323, -0.0037146867252886295, -0.004076742567121983, -0.008817782625555992, -0.10247528553009033, -0.011080753989517689, -0.0013805630151182413, -0.18242838978767395, -0.005818809382617474, -0.4329391419887543, -1.1827459335327148, -8.105902816168964e-05, -0.005571314133703709, -2.0265558760002023e-06, -3.6954811548639555e-06, -0.0039046963211148977, -0.16399534046649933, -0.00025102324434556067, -0.00038532938924618065, -0.0018510365625843406, -0.0058761704713106155, -0.001743940869346261, -0.6353760361671448, -0.2549842298030853, -0.047969963401556015, -1.0595581531524658, -2.803399085998535, -0.09868257492780685, -9.298280929215252e-06, -0.031176859512925148, -0.6836417317390442, -2.0947914123535156, -0.007690110243856907, -0.06724917888641357, -2.0863280296325684, -0.09778419882059097, -0.4595669209957123, -0.15488718450069427, -0.003631546162068844, -3.2322115898132324, -0.09132914990186691, -1.9049519300460815, -0.029421037063002586, -1.1940562725067139, -0.9264148473739624, -0.275586873292923, -0.0028285279404371977, -0.1577194184064865, -2.586808113846928e-05, -0.01888895407319069, -0.12602223455905914, -0.0005703729693777859, -0.01002208050340414, -1.5497195136049413e-06, -9.417489309271332e-06, -0.008939837105572224, -2.040195941925049, -1.0498899221420288, -0.08698605746030807, -0.903141438961029, -0.005404741503298283, -0.695909857749939, -0.011004944331943989, -0.00189779803622514, -0.0003367095487192273, 0.0, -2.9682672902708873e-05, 0.0, -1.0728830375228426e-06, 0.0, -0.334303081035614, -0.008322557434439659, -0.05215964838862419, -3.005845308303833, -0.016333920881152153, -0.016289470717310905, -1.1920928244535389e-07, -0.001453653909265995, -0.00335808377712965, -1.4305012882687151e-05, -5.125986263010418e-06, -0.08042417466640472, -0.02378595434129238, -8.451581379631534e-05, -7.033323527139146e-06, -0.00784766860306263, -0.07169318944215775, -0.5638638734817505, -2.699113368988037, -0.4940186142921448, -0.4104465842247009, -0.03895551711320877, -0.28607863187789917, -0.0003367095487192273, -1.405920147895813, -0.007983204908668995, -0.009360711090266705, -0.0707029178738594, -0.47636678814888, -0.003237484721466899, -1.6233668327331543, -0.0010609956225380301, -0.4664958715438843, -0.0036678914912045, -0.0010869554243981838, -2.264974000354414e-06, -0.007451123557984829, -0.007922298274934292, -0.012379709631204605, -8.21318244561553e-05, -0.00829288363456726, -0.0030603024642914534, -0.0008659188752062619, -0.0023824183735996485, -0.09284288436174393, -2.5536844730377197, -0.002022008877247572, -0.00949710514396429, -3.349725011503324e-05, -0.05193343386054039, -0.16293007135391235, -1.2305091619491577, -2.0265558760002023e-06, -0.016236810013651848, -1.1920928244535389e-07, -0.0001267114421352744, -2.77681827545166, -0.00015472168161068112, -2.281344175338745, -0.009871120564639568, -0.04868895560503006, -0.09297607094049454, -0.21419209241867065, -0.004330542869865894, -2.231297254562378, -0.004041243344545364, -0.4603932201862335, -2.2053474822314456e-05, -2.680387258529663, -0.14259962737560272, -0.8808401823043823, -0.0933564081788063, -0.0013622299302369356, -0.01265883818268776, -0.1706239879131317, -3.635817120084539e-05, -0.045021120458841324, -0.00833603460341692, -0.00506261782720685, -0.006324988789856434, -0.0002896366349887103, -0.00019870213873218745, -0.03442857787013054, -0.01731318049132824, -0.002144657773897052, -0.36850279569625854, -0.06028595566749573, -2.3483953555114567e-05, -0.07487815618515015, -4.529942543740617e-06, -0.004013579338788986, -0.29679882526397705, -2.344684600830078, -0.0009436921682208776, -0.020159004256129265, -0.001262820791453123, -0.8828644752502441, -0.02442633919417858, -2.1301822662353516, -0.003124595619738102, -0.022246798500418663, -0.002371001522988081, -0.8888843655586243, -9.059865078597795e-06, -0.004002774599939585, -0.0018690037541091442, -0.003236177610233426, -1.1920928244535389e-07, -5.006777428206988e-06, -1.0251946150674485e-05, -1.0728830375228426e-06, -5.006777428206988e-06, 0.0, -5.602820692729438e-06, -0.20479267835617065, -4.672895011026412e-05], "finish_reason": "length"}], "metrics": {"energy": 970.4012539291382, "energy_per_token": 3.790629898160696, "time": 26.545696, "time_per_token": 0.103694125}}
{"outputs": [{"text": "# Check if the DataFrame has the required columns\n    if 'Title' not in df.columns or 'Content' not in df.columns:\n        plt.show()\n\n    # Filter the articles that have \"how\" or \"what\" in the Title\n    filtered_articles = df[df['Title'].str.contains('how|what', case=False)]\n\n    # If no articles have \"how\" or \"what\" in the Title, return an empty plot\n    if filtered_articles.empty:\n        plt.show()\n\n    # Concatenate the content of the filtered articles to create a corpus for TF-IDF analysis\n    corpus = filtered_articles['Content'].str.cat(sep=' ')\n\n    # Extract the words from the concatenated content and store them in a list\n    words = re.findall(r'\\b\\w+\\b', corpus)\n\n    # Calculate TF-IDF scores using TF-IDF vectorizer on the words list\n    tfidf_vectorizer = TfidfVectorizer()\n    tfidf_matrix = tfidf_vectorizer.fit", "tokens": ["#", " Check", " if", " the", " Data", "Frame", " has", " the", " required", " columns", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "plt", ".", "show", "()", "\n", "\n", "    ", "#", " Filter", " the", " articles", " that", " have", " \"", "how", "\"", " or", " \"", "what", "\"", " in", " the", " Title", "\n", "    ", "filtered", "_", "articles", " =", " df", "[", "df", "['", "Title", "']", ".", "str", ".", "contains", "('", "how", "|", "what", "'", ",", " case", "=", "False", ")]", "\n", "\n", "    ", "#", " If", " no", " articles", " have", " \"", "how", "\"", " or", " \"", "what", "\"", " in", " the", " Title", ",", " return", " an", " empty", " plot", "\n", "    ", "if", " filtered", "_", "articles", ".", "empty", ":", "\n", "        ", "plt", ".", "show", "()", "\n", "\n", "    ", "#", " Con", "cat", "en", "ate", " the", " content", " of", " the", " filtered", " articles", " to", " create", " a", " corpus", " for", " TF", "-", "ID", "F", " analysis", "\n", "    ", "cor", "pus", " =", " filtered", "_", "articles", "['", "Content", "']", ".", "str", ".", "cat", "(", "sep", "='", " '", ")", "\n", "\n", "    ", "#", " Ext", "ract", " the", " words", " from", " the", " concaten", "ated", " content", " and", " store", " them", " in", " a", " list", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " corpus", ")", "\n", "\n", "    ", "#", " Calculate", " TF", "-", "ID", "F", " scores", " using", " TF", "-", "ID", "F", " vector", "izer", " on", " the", " words", " list", "\n", "    ", "tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " tf", "id", "f", "_", "vector", "izer", ".", "fit"], "logprobs": [-1.0111974477767944, -0.6307379007339478, -0.18224549293518066, -0.4321698248386383, -0.2791605591773987, -0.003108908887952566, -0.897624671459198, -1.3388594388961792, -0.5905814170837402, -0.06829141825437546, -0.15779292583465576, -0.0017878514481708407, -0.08984842151403427, -0.15474320948123932, -0.005403555929660797, -7.009260298218578e-05, -0.07863401621580124, -4.887569048150908e-06, -0.0017144280718639493, -0.07135958224534988, -0.00013517419574782252, -0.00855258945375681, -0.0008672290714457631, -0.00018106251081917435, -1.6093124941107817e-05, -2.8132995794294402e-05, -1.07287787614041e-05, -1.156323378381785e-05, -1.4424220353248529e-05, -2.50339189733495e-06, -0.0015070997178554535, -0.0007759897271171212, -0.0037794129457324743, -1.2502068281173706, -0.00034028460504487157, -2.7629690170288086, -0.0012649638811126351, -0.019053997471928596, -2.4625370502471924, -0.006943264976143837, -0.07616625726222992, -1.1498641967773438, -1.1045958995819092, -1.1326593160629272, -1.8397083282470703, -0.2721617519855499, -1.4810035228729248, -0.032572075724601746, -0.003418080974370241, -0.030530031770467758, -0.0002681849291548133, -0.0006821212591603398, -0.0007990981102921069, -0.01039318647235632, -0.31424281001091003, -2.73567795753479, -0.09731297194957733, -0.0010124086402356625, -0.9933679103851318, -0.018630748614668846, -0.43411216139793396, -0.005062499549239874, -0.005133542697876692, -0.22348204255104065, -0.025130020454525948, -0.04429401084780693, -0.0006361367995850742, -5.972207145532593e-05, -0.00046456989366561174, -0.04151751473546028, -2.098061486321967e-05, -0.11819440871477127, -0.6204091310501099, -0.4407285451889038, -0.019375935196876526, -0.00038366109947673976, -0.2617426812648773, -0.0001591317413840443, -0.016617223620414734, -0.003992326091974974, -0.0016076747560873628, -0.39199724793434143, -0.02400093711912632, -0.0460188090801239, -0.000427274004323408, -0.03220703452825546, -1.3925708532333374, -0.8895269632339478, -0.06638424098491669, -0.812461256980896, -0.29017210006713867, -0.0014793653972446918, -0.00016139635408762842, -0.005325535777956247, -0.00019071667338721454, -0.00015817821258679032, -0.03372368589043617, -0.07078466564416885, -0.0551706925034523, -0.1480761617422104, -0.0958227813243866, -0.3295174241065979, -0.23199933767318726, -0.001658851164393127, -0.01966153457760811, -0.002799165900796652, -0.00015269544383045286, -0.0009677494526840746, -0.027017315849661827, -4.768370445162873e-07, -7.152555099310121e-07, -0.00027176024741493165, -0.016423048451542854, -0.0009843033039942384, -0.0001662831346038729, -0.0008802115335129201, -0.01659424416720867, -1.3351351299206726e-05, -0.019671235233545303, -0.00019929806876461953, -0.0002146728802472353, -0.011252395808696747, -0.0018585327779874206, -0.04379129037261009, -1.6687449216842651, -0.0007899263291619718, -0.002008446492254734, -0.0009740613750182092, -0.1341361403465271, -0.5536487102508545, -0.06288250535726547, -0.297978937625885, -0.31601446866989136, -0.0016839622985571623, -2.472059726715088, -0.6590009331703186, -0.16703729331493378, -1.226995825767517, -2.801400661468506, -0.22102701663970947, -0.004404842853546143, -2.7179348762729205e-05, -4.5060096454108134e-05, -3.4097514152526855, -0.001424251589924097, -0.00024577934527769685, -0.11291083693504333, -0.0001578206429257989, -0.007362376432865858, -1.093829870223999, -5.960462772236497e-07, -3.9457496313843876e-05, -0.013660987839102745, -0.0013679441763088107, -7.73638384998776e-05, -0.14385361969470978, -1.155320405960083, -0.0008858094224706292, -0.03570079430937767, -0.026827702298760414, -0.00023409964342135936, -0.02302459441125393, -0.06400545686483383, -0.0014392504235729575, -0.03901960700750351, -0.05999814346432686, -0.00018487652414478362, -0.00802459567785263, -3.402531623840332, -0.008189667947590351, -0.7435638308525085, -0.7265129089355469, -0.3280986547470093, -0.006803916767239571, -2.1114721298217773, -0.0003116837178822607, -0.13754050433635712, -3.069634437561035, -2.3578813076019287, -0.04201303422451019, -0.14193476736545563, -0.11371412873268127, -0.09899185597896576, -0.0972222238779068, -0.00011216964776394889, -0.33489280939102173, -0.08027897030115128, -0.07514867186546326, -3.242440288886428e-05, -0.042504310607910156, -1.6927575416048057e-05, -0.1701224148273468, -0.0032568529713898897, -0.01716015301644802, -1.0358760356903076, -0.10550925135612488, -0.013342145830392838, -0.011137224733829498, -4.7205765440594405e-05, -0.00013028726971242577, -2.2172682292875834e-05, -0.0016801540041342378, -0.15895572304725647, -0.019033413380384445, -0.2187640517950058, -0.00019429226813372225, -0.005075901746749878, -2.5961754322052, -1.959040641784668, -0.025371793657541275, -3.361645576660521e-05, -5.400034933700226e-05, -0.09085671603679657, -1.3311221599578857, -2.8147125244140625, -0.057734519243240356, -2.8132995794294402e-05, -0.00022492263815365732, -0.40523165464401245, -0.15532073378562927, -1.824307918548584, -0.009573619812726974, -1.2489433288574219, -1.005183458328247, -0.06422258168458939, -0.00042083943844772875, -1.246803879737854, -0.016700228676199913, -4.792098479811102e-05, -0.26693716645240784, -0.014442785643041134, -0.00807236973196268, -0.0003545847721397877, -0.00010740180005086586, 0.0, -0.00013267113536130637, 0.0, -9.536738616588991e-07, -7.152555099310121e-07, -0.7101489305496216, -0.012858925387263298, -0.003390162019059062, -0.08346647024154663, -0.009852943010628223, -0.00047291061491705477, -0.2112678736448288, -0.6538700461387634, -0.0003499372396618128, -0.0003299168893136084, -7.152555099310121e-07, -1.1920928244535389e-07, -2.0265558760002023e-06, -9.536738616588991e-07, 0.0, -3.611976353568025e-05, -4.303362584323622e-05], "finish_reason": "length"}], "metrics": {"energy": 952.0467257642746, "energy_per_token": 3.7189325225166976, "time": 25.897747, "time_per_token": 0.10116307421875}}
{"outputs": [{"text": "# Filter the data to only include articles with titles that include the words \"how\" or \"what\"\n    filtered_df = df[(df['Title'].str.contains('how', case=False)) | (df['Title'].str.contains('what', case=False))]\n\n    # Check if the filtered DataFrame is empty\n    if filtered_df.empty:\n        return plt.subplot()\n\n    # Extract the content of the filtered articles\n    text = filtered_df['Content']\n\n    # Tokenize the content\n    tokenized_text = text.apply(lambda x: re.findall(r'\\w+', x.lower()))\n\n    # Initialize the TF-IDF vectorizer\n    vectorizer = TfidfVectorizer(tokenizer=lambda x: x, lowecase=False)\n\n    # Compute the TF-IDF scores\n    tfidf = vectorizer.fit_transform(tokenized_text)\n\n    # Get the feature names (words) from the vectorizer\n    feature_names = np.array(vectorizer.get_feature_names_out())\n\n", "tokens": ["#", " Filter", " the", " data", " to", " only", " include", " articles", " with", " titles", " that", " include", " the", " words", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "filtered", "_", "df", " =", " df", "[(", "df", "['", "Title", "']", ".", "str", ".", "contains", "('", "how", "'", ",", " case", "=", "False", "))", " |", " (", "df", "['", "Title", "']", ".", "str", ".", "contains", "('", "what", "'", ",", " case", "=", "False", "))", "]", "\n", "\n", "    ", "#", " Check", " if", " the", " filtered", " Data", "Frame", " is", " empty", "\n", "    ", "if", " filtered", "_", "df", ".", "empty", ":", "\n", "        ", "return", " plt", ".", "sub", "plot", "()", "\n", "\n", "    ", "#", " Ext", "ract", " the", " content", " of", " the", " filtered", " articles", "\n", "    ", "text", " =", " filtered", "_", "df", "['", "Content", "']", "\n", "\n", "    ", "#", " Token", "ize", " the", " content", "\n", "    ", "token", "ized", "_", "text", " =", " text", ".", "apply", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " x", ".", "lower", "()))", "\n", "\n", "    ", "#", " Initialize", " the", " TF", "-", "ID", "F", " vector", "izer", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "token", "izer", "=", "lambda", " x", ":", " x", ",", " low", "ec", "ase", "=", "False", ")", "\n", "\n", "    ", "#", " Compute", " the", " TF", "-", "ID", "F", " scores", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "token", "ized", "_", "text", ")", "\n", "\n", "    ", "#", " Get", " the", " feature", " names", " (", "words", ")", " from", " the", " vector", "izer", "\n", "    ", "feature", "_", "names", " =", " np", ".", "array", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "\n"], "logprobs": [-1.0111974477767944, -3.453979969024658, -1.1042900085449219, -1.9998130798339844, -1.884483814239502, -1.0559372901916504, -0.060121066868305206, -0.2579476833343506, -0.15559472143650055, -0.14945439994335175, -0.7278870344161987, -0.27103522419929504, -0.5371013879776001, -0.13139741122722626, -0.04289153590798378, -0.015553834848105907, -0.0008199428557418287, -0.003947087563574314, -0.0003054867556784302, -0.0006324436399154365, -0.013897789642214775, -0.0849301740527153, -0.004613826051354408, -1.6062414646148682, -0.05072975903749466, -0.5354498028755188, -0.0010388459777459502, -0.005481332540512085, -0.4820665419101715, -0.012418799102306366, -0.14265969395637512, -0.002249807585030794, -0.0003387354372534901, -0.00037377048283815384, -0.019976265728473663, -2.1815061700181104e-05, -0.38080430030822754, -0.1631176471710205, -0.39206963777542114, -0.36533018946647644, -0.0024926564656198025, -0.02655157260596752, -0.009776568040251732, -0.0008509114268235862, -0.472658634185791, -0.020918462425470352, -0.10907324403524399, -0.007998579181730747, -8.689979586051777e-05, -5.709961988031864e-05, -2.407998726994265e-05, -1.1920922133867862e-06, -9.881961887003854e-05, -0.0001137191939051263, -0.0002598424907773733, -0.001122916815802455, -0.003542578313499689, -0.00014900050882715732, -1.6093124941107817e-05, -0.00036149643710814416, -2.729855441430118e-05, -8.844937838148326e-05, -0.00035291642416268587, -0.007888000458478928, -0.030046025291085243, -0.16435132920742035, -0.000501030299346894, -0.1776636838912964, -1.288910150527954, -0.0939544141292572, -3.010816812515259, -0.06790009140968323, -0.42339977622032166, -0.0029099523089826107, -0.049726326018571854, -0.043633248656988144, -0.16812631487846375, -0.00019405389321036637, -0.006428870838135481, -0.0028199690859764814, -4.768370445162873e-07, -1.5497195136049413e-06, -0.00033361115492880344, -0.0014081810368224978, -0.002708102809265256, -0.0005174727994017303, -0.002046635141596198, -1.1044261455535889, -0.3057279884815216, -0.028457043692469597, -1.1926121711730957, -2.324364423751831, -0.004710529465228319, -0.16025374829769135, -0.019483964890241623, -0.0005323661607690156, -0.02919008396565914, -1.4022141695022583, -0.007369949948042631, -0.09608389437198639, -0.28993403911590576, -0.40008193254470825, -0.07340719550848007, -0.72331702709198, -0.0661836490035057, -0.23313008248806, -0.00011467275908216834, -2.496671199798584, -0.3666874170303345, -0.1541607677936554, -4.0531076592742465e-06, -5.960446742392378e-06, -0.03614873066544533, -0.0015040049329400063, -9.619726915843785e-05, -0.5576648712158203, -0.03104512393474579, -0.00020072828920092434, -0.006148945074528456, -3.0004141330718994, -0.022807305678725243, -0.0840778797864914, -0.8843896389007568, -1.198817253112793, -0.00047910655848681927, -0.4386460483074188, -0.5412607192993164, -0.05569624900817871, -0.4284908175468445, -0.10927428305149078, -0.6915201544761658, -0.000436925794929266, -0.2092290222644806, -0.00014554394874721766, -0.026954077184200287, -0.001292227883823216, -0.0010536124464124441, -0.12389075011014938, -2.9205850296420977e-05, -0.34718838334083557, 0.0, -0.062067557126283646, -0.008056997321546078, -0.01605323515832424, -1.6898185014724731, -0.0014851979212835431, -0.00011336160969221964, -0.03836807981133461, -0.32071709632873535, -0.00048303857329301536, -0.006172166671603918, -0.011181903071701527, -0.06401573866605759, -8.129743218887597e-05, -0.0048933508805930614, -3.7231805324554443, -0.7719743251800537, -0.8188208341598511, -0.011930420994758606, -2.396077979938127e-05, -0.00015436411194968969, -0.03282520920038223, -0.0001532914029667154, -0.1172238141298294, -7.223821739898995e-05, -0.7800860404968262, -0.00022587609419133514, -0.0004761277523357421, -9.97731985989958e-05, 0.0, -0.0024400956463068724, 0.0, -7.152555099310121e-07, 0.0, -0.24934090673923492, -1.4080209732055664, -0.0029982635751366615, -0.09981945902109146, -0.08753655105829239, -0.05618107691407204, -0.0003400462737772614, -0.005205055233091116, -1.0980592966079712, -2.545315980911255, -0.2744902968406677, -1.728519782773219e-05, -0.0001225396408699453, -0.024184221401810646, -0.16484366357326508, -0.00868814904242754, -0.15469706058502197, -7.188061863416806e-05, -0.0008108903421089053, -3.41796612739563, -0.09572377055883408, -0.023174630478024483, -0.0010377742582932115, -0.00010346830822527409, -0.00010918975021922961, -0.23118087649345398, -0.5342307090759277, -8.296622399939224e-05, -0.10740970820188522, -0.032453104853630066, -0.0006401873542927206, -0.2656220495700836, -0.009617306292057037, -8.22540732769994e-06, -8.713819261174649e-05, -3.2782016205601394e-05, -0.0002864189154934138, -1.2755313036905136e-05, -0.007911299355328083, -0.012730521149933338, -7.271502545336261e-05, -1.5497195136049413e-06, -5.125986263010418e-06, -0.01447321753948927, -0.05988452211022377, -0.12848953902721405, -0.00011419598013162613, -0.0059434822760522366, -1.2555195093154907, -0.044254548847675323, -0.12211202085018158, -0.04947323724627495, -1.1685022115707397, -0.7617040872573853, -0.0645248293876648, -2.247474431991577, -0.006977122277021408, -0.10157955437898636, -0.00021598390594590455, -0.012363814748823643, -4.756337511935271e-05, -0.30140137672424316, -0.0003146630187984556, -0.0008535317610949278, -0.0005055579822510481, -1.045543909072876, -5.364403477869928e-06, -0.0020452074240893126, -0.00042489083716645837, -0.00031573555315844715, 0.0, -1.0728830375228426e-06, -5.960462772236497e-07, -3.3378546504536644e-06, -7.152531907195225e-06, 0.0, -1.490105023549404e-05, -0.8987758159637451, -0.00039283663500100374, -0.0018493706593289971, -0.0029900625813752413, -0.007182017900049686], "finish_reason": "length"}], "metrics": {"energy": 969.8283534679412, "energy_per_token": 3.788392005734145, "time": 26.360718, "time_per_token": 0.1029715546875}}
{"outputs": [{"text": "if 'Title' not in df.columns or 'Content' not in df.columns:\n        plt.clf()\n        return plt.gca()\n\n    df = df[(df['Title'].str.lower().str.contains('how') == True) | (df['Title'].str.lower().str.contains('what') == True)]\n    if df.empty:\n        plt.clf()\n        return plt.gca()\n\n    vectorizer = TfidfVectorizer(max_features=10, token_pattern=r'\\b[^\\d\\W]+\\b')\n    word_scores = vectorizer.fit_transform(df['Content'])\n    feature_names = np.array(vectorizer.get_feature_names_out())\n\n    scores = np.sum(word_scores, axis=0).tolist()\n    feature_names_to_scores = {name: score for name, score in zip(feature_names, scores)}\n\n    sorted_names, sorted_scores = zip(*sorted(feature_names_to_scores.items(), key=lambda", "tokens": ["if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "plt", ".", "cl", "f", "()", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "df", " =", " df", "[(", "df", "['", "Title", "']", ".", "str", ".", "lower", "()", ".", "str", ".", "contains", "('", "how", "')", " ==", " True", ")", " |", " (", "df", "['", "Title", "']", ".", "str", ".", "lower", "()", ".", "str", ".", "contains", "('", "what", "')", " ==", " True", ")]", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "plt", ".", "cl", "f", "()", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "max", "_", "features", "=", "1", "0", ",", " token", "_", "pattern", "=", "r", "'\\", "b", "[", "^\\", "d", "\\", "W", "]", "+\\", "b", "')", "\n", "    ", "word", "_", "scores", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "df", "['", "Content", "'])", "\n", "    ", "feature", "_", "names", " =", " np", ".", "array", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "\n", "    ", "scores", " =", " np", ".", "sum", "(", "word", "_", "scores", ",", " axis", "=", "0", ")", ".", "tol", "ist", "()", "\n", "    ", "feature", "_", "names", "_", "to", "_", "scores", " =", " {", "name", ":", " score", " for", " name", ",", " score", " in", " zip", "(", "feature", "_", "names", ",", " scores", ")}", "\n", "\n", "    ", "s", "orted", "_", "names", ",", " sorted", "_", "scores", " =", " zip", "(*", "s", "orted", "(", "feature", "_", "names", "_", "to", "_", "scores", ".", "items", "()", ",", " key", "=", "lambda"], "logprobs": [-1.1495336294174194, -0.2776464819908142, -0.010533686727285385, -0.00011562632425921038, -0.27052363753318787, -5.769562994828448e-05, -0.0025295186787843704, -0.09683264791965485, -0.0007246490567922592, -0.03447234258055687, -0.0026931229513138533, -0.0003475538978818804, -3.0397906812140718e-05, -0.00011646069469861686, -2.7179348762729205e-05, -3.516612196108326e-05, -2.884823152271565e-05, -4.172316494077677e-06, -0.005251304246485233, -0.008453774265944958, -0.007163672707974911, -1.2235546112060547, -0.0007348936051130295, -1.9447118043899536, -0.014769029803574085, -0.0010792152024805546, -0.019267192110419273, -0.018002916127443314, -0.13584710657596588, -0.21016351878643036, -0.014389203861355782, -0.010875005275011063, -0.000426439888542518, -0.00027176024741493165, -0.016922833397984505, -0.19574809074401855, -0.0006201728247106075, -1.248307466506958, -0.6764439344406128, -0.014206817373633385, -1.41538405418396, -0.04525437206029892, -0.08753720670938492, -0.0013529442949220538, -0.00036554806865751743, -0.0009042703313753009, -0.025100376456975937, -6.854299135738984e-05, -0.7650014162063599, -0.006368816830217838, -0.0008043391280807555, -0.0064043523743748665, -1.0967194612021558e-05, -0.005960072390735149, -0.2444802075624466, -0.498826801776886, -0.5556808710098267, -2.3446555137634277, -0.03710557147860527, -0.027278121560811996, -0.019390316680073738, -0.15425415337085724, -0.037728991359472275, -0.00033790123416110873, -0.0009026029147207737, -4.005352093372494e-05, -2.634490556374658e-05, -6.603976362384856e-05, -0.00010013079008786008, -0.001806057756766677, -9.345571743324399e-05, -0.00048458753735758364, -8.904537389753386e-05, -3.7431014789035544e-05, -0.00010764019680209458, -0.004129573702812195, -0.0045219785533845425, -0.01201346330344677, -0.003070523263886571, -0.0012893705861642957, -0.005497337784618139, -0.04751535505056381, -0.7656809091567993, -0.36433523893356323, -0.4623188078403473, -0.004755140747874975, -0.19740965962409973, -0.04047800227999687, -0.0037439032457768917, -0.0020008322317153215, -0.016719572246074677, -1.7881233361549675e-05, -0.0011336335446685553, -2.634490556374658e-05, -9.095255518332124e-05, -0.0007435894221998751, -0.0016843193443492055, -0.00303498818539083, -0.0027505443431437016, -2.4676019165781327e-05, -0.00019786784832831472, -3.576278118089249e-07, -0.0001578206429257989, -0.0006835508393123746, -0.15447388589382172, -0.0008434075862169266, -2.4530999660491943, -0.0072230868972837925, -0.0037296514492481947, -0.0011013639159500599, -3.576278118089249e-07, -1.645074735279195e-05, 0.0, -1.6689286894688848e-06, -1.4305104514278355e-06, -0.33782467246055603, -2.261934280395508, -1.0728830375228426e-06, -0.5411772131919861, -0.014010409824550152, -0.5732231140136719, -0.10743861645460129, -2.8694491386413574, -1.5001620054244995, -0.1662791669368744, -0.00027295202016830444, -0.032715264707803726, -0.0408630408346653, -1.1362793445587158, -0.015861060470342636, -2.0722031593322754, -0.14195649325847626, -0.12319023907184601, -0.004964524880051613, -7.939023635117337e-05, -0.4231736660003662, -0.00028010259848088026, -1.2397689715726301e-05, -0.2542099952697754, -0.038041070103645325, -0.07256253063678741, -4.047804832458496, -0.036011554300785065, -1.4244892597198486, -0.017452945932745934, -1.4027959108352661, -0.0006033745594322681, -3.6000557884108275e-05, -0.0017196642002090812, -0.00010013079008786008, -1.4305104514278355e-06, -0.01845814660191536, -0.008531787432730198, -0.031325213611125946, -0.003361885668709874, -0.17874747514724731, -0.546638011932373, -0.3575250208377838, -0.5468747615814209, -0.0006688979919999838, -0.01441117748618126, -0.0019723977893590927, -1.3088115453720093, -2.7418097943154862e-06, -0.02605343982577324, -0.014719577506184578, -0.003299390198662877, -3.576278118089249e-07, -9.298280929215252e-06, -0.00010406429646536708, -1.1920928244535389e-07, -2.50339189733495e-06, 0.0, -6.198863957251888e-06, -0.43591102957725525, -5.924526340095326e-05, -0.0034070322290062904, -0.02640424855053425, -1.0731287002563477, -0.00028534632292576134, -2.367107391357422, -0.1725839227437973, -0.6178598403930664, -3.099393507000059e-05, -1.4029316902160645, -0.0005553610390052199, -0.06745847314596176, -4.768370445162873e-07, -2.47952248173533e-05, -0.14624595642089844, -0.0031688022427260876, -0.00305174570530653, -0.0012716311030089855, -0.00724237784743309, -0.3427914083003998, -0.7579443454742432, -8.344646857949556e-07, -1.5224764347076416, -0.008982487954199314, -0.1126311793923378, -2.617918014526367, -0.00257303798571229, -0.4959559440612793, -2.986374855041504, -3.349431037902832, -0.0012747265864163637, -0.5269711017608643, -0.02442855015397072, -0.8190237283706665, -1.3757457733154297, -0.013695089146494865, -0.1870206892490387, -0.04368779435753822, -0.042559489607810974, -0.00046039948938414454, -0.0019063648069277406, -0.0002033503697020933, -0.0037918826565146446, -0.0006680640508420765, -0.0013875867007300258, -3.576278118089249e-07, -1.1920922133867862e-06, -0.0061429026536643505, -0.009156025014817715, -0.26923462748527527, -0.001010503270663321, -1.1787126064300537, -0.00017772526189219207, -0.8442537784576416, -0.0004499138449318707, -0.00040713604539632797, -1.7482717037200928, -1.9983876943588257, -0.04855269193649292, -1.2278481335670222e-05, -0.010892574675381184, -0.0013262771535664797, -0.02684534154832363, -0.005101164802908897, -0.019193638116121292, 0.0, -0.0006136203301139176, -0.0026567422319203615, -2.3841855067985307e-07, -3.576278118089249e-07, -7.1403817855753e-05, -2.3841855067985307e-07, 0.0, -1.1920928244535389e-07, -2.3245540432981215e-05, -6.532455881824717e-05, -0.0008428120636381209, -1.4305012882687151e-05, -0.0171947218477726, -0.0031209117732942104, -0.0031798535492271185], "finish_reason": "length"}], "metrics": {"energy": 913.6232112541194, "energy_per_token": 3.568840668961404, "time": 22.852936, "time_per_token": 0.08926928125}}
{"outputs": [{"text": "try:\n        df = df.loc[df[\"Title\"].str.contains(r'\\b(how|what)\\b')]\n        df = df.loc[:, [\"Content\"]]\n        vectorizer = TfidfVectorizer()\n        tfidf = vectorizer.fit_transform(df[\"Content\"])\n        feature_names = np.array(vectorizer.get_feature_names())\n        df = pd.DataFrame(tfidf.T.sparse.todense(), index=feature_names)\n        df.columns = [\"score\"]\n        df = df.sort_values(by=\"score\", ascending=False)\n        df = df[:5]\n        ax = df.plot.bar(rot=90)\n        ax.set_ylabel(\"TF-IDF Score\")\n        plt.xticks(rotation=270)\n        return ax\n    except KeyError:\n        plt.clf()\n        plt.show()\n        return plt.gca()", "tokens": ["try", ":", "\n", "        ", "df", " =", " df", ".", "loc", "[", "df", "[", "\"", "Title", "\"", "]", ".", "str", ".", "contains", "(", "r", "'\\", "b", "(", "how", "|", "what", ")\\", "b", "')", "]", "\n", "        ", "df", " =", " df", ".", "loc", "[:", ",", " [", "\"", "Content", "\"", "]]", "\n", "        ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "        ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "df", "[", "\"", "Content", "\"", "])", "\n", "        ", "feature", "_", "names", " =", " np", ".", "array", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "(", "tf", "id", "f", ".", "T", ".", "sparse", ".", "t", "od", "ense", "()", ",", " index", "=", "feature", "_", "names", ")", "\n", "        ", "df", ".", "columns", " =", " [", "\"", "score", "\"", "]", "\n", "        ", "df", " =", " df", ".", "sort", "_", "values", "(", "by", "=", "\"", "score", "\"", ",", " ascending", "=", "False", ")", "\n", "        ", "df", " =", " df", "[:", "5", "]", "\n", "        ", "ax", " =", " df", ".", "plot", ".", "bar", "(", "rot", "=", "9", "0", ")", "\n", "        ", "ax", ".", "set", "_", "ylabel", "(", "\"", "TF", "-", "ID", "F", " Score", "\"", ")", "\n", "        ", "plt", ".", "xt", "icks", "(", "rotation", "=", "2", "7", "0", ")", "\n", "        ", "return", " ax", "\n", "    ", "except", " Key", "Error", ":", "\n", "        ", "plt", ".", "cl", "f", "()", "\n", "        ", "plt", ".", "show", "()", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-2.722443103790283, -0.0009996660519391298, -0.012156915850937366, -0.030227048322558403, -0.9772453308105469, -0.3875402808189392, -0.026653258129954338, -1.4385846853256226, -1.290144681930542, -0.4962631165981293, -0.1499907672405243, -1.9177216291427612, -0.07397928088903427, -0.004121619276702404, -0.0001784403866622597, -0.0017852336168289185, -0.008057115599513054, -0.07956670969724655, -0.0007844470092095435, -0.25077834725379944, -0.022532278671860695, -0.48007142543792725, -2.3333308696746826, -0.0043015810661017895, -0.7389053702354431, -0.535487711429596, -0.007111475337296724, -0.005137930624186993, -0.05337132513523102, -0.00553290406242013, -1.6641149520874023, -0.2589239776134491, -0.0804104283452034, -0.5076018571853638, -1.65548574924469, -1.1057733297348022, -0.05116217955946922, -0.7020860910415649, -0.6779496073722839, -0.3704293966293335, -0.08409705758094788, -0.3180861473083496, -0.003257803386077285, -0.5359200239181519, -3.671578815556131e-05, -0.07591325789690018, -0.039176661521196365, -0.3599192798137665, -1.6898555755615234, -0.01430107094347477, -0.0027948864735662937, -0.0011630444787442684, -3.576278118089249e-07, -0.002700850600376725, -7.152555099310121e-07, -2.0265558760002023e-06, -3.576278118089249e-07, -0.5794617533683777, -0.01947356015443802, -0.021925901994109154, -0.8599397540092468, -0.1027359589934349, -0.012641770765185356, -0.4356819689273834, -0.0071769286878407, -3.576278118089249e-07, -0.00037043384509161115, -0.0028106968384236097, -0.00026782741770148277, -2.861018856492592e-06, -0.0081545514985919, -0.02163114957511425, -0.3003308176994324, -0.001134824356995523, -8.034383063204587e-05, -1.0728830375228426e-06, -0.14626088738441467, -0.09915477782487869, -0.030823444947600365, -1.0468658208847046, -0.00757784117013216, -0.10042957961559296, -0.0021845067385584116, -1.4446964263916016, -0.00010072677832795307, -0.009348073974251747, -0.0006025406182743609, -0.0018160531762987375, -2.3841855067985307e-07, -1.9311717551317997e-05, -4.494089080253616e-05, -3.576278118089249e-07, -4.887569048150908e-06, 0.0, -4.172316494077677e-06, -0.9966462254524231, -0.008541479706764221, -0.04308292642235756, -3.1612868309020996, -2.0430428981781006, -0.10483342409133911, -4.351044481154531e-05, -0.01767655462026596, -0.03179647773504257, -0.22020679712295532, -3.099436753473128e-06, -3.576278118089249e-07, -0.0033551135566085577, -1.3757543563842773, -0.3931256830692291, -0.5244854688644409, -0.007036074064671993, -0.058728042989969254, -2.3364747903542593e-05, -0.004293153528124094, -0.010920049622654915, -0.0802229717373848, -0.2684580385684967, -0.007398113142699003, -0.04934128001332283, -1.7881377516459906e-06, -1.5497195136049413e-06, -0.1443513035774231, -0.03445817530155182, -0.05664798244833946, -0.820367693901062, -1.026820182800293, -1.8357219696044922, -0.007905622944235802, -0.16273406147956848, -0.1273442804813385, -2.852365493774414, -0.001972635742276907, -0.0019676387310028076, -0.0017014563782140613, -0.028918080031871796, -0.19820880889892578, -0.3065725266933441, -0.006185317412018776, -0.051745545119047165, -0.23383590579032898, -3.2186455882765586e-06, -0.0004943578969687223, -0.0426311157643795, -0.567617654800415, -0.34154555201530457, -0.0008525789016857743, -3.58813522325363e-05, -8.344646857949556e-07, -0.15707726776599884, -0.004706614185124636, -0.004062258172780275, -0.16495445370674133, -0.013403075747191906, -0.07808841019868851, -0.07074068486690521, -1.1393613815307617, -0.5632257461547852, -0.002076613949611783, -2.16239595413208, -1.9633551836013794, -0.12222976237535477, -0.05435676872730255, -0.060732439160346985, -0.4948471188545227, -0.0025983641389757395, -0.012221804820001125, -0.04837314039468765, -0.013545271009206772, -0.3895223140716553, -0.0001510267611593008, -1.6945635080337524, -0.18401868641376495, -0.01934986189007759, -1.2802679538726807, -0.0001995364436879754, -0.14243154227733612, -0.005820113234221935, -0.028409190475940704, -0.09025304019451141, -0.008147574961185455, -0.01785631850361824, -0.015560994856059551, -0.23169179260730743, -0.8419656753540039, -0.015383400022983551, -0.0030648186802864075, -0.0014259180752560496, -5.3165931603871286e-05, -6.544376083184034e-05, -0.02305103838443756, -0.0002244459028588608, -0.013670512475073338, -0.0056310598738491535, -0.018543105572462082, -0.2854468524456024, -3.1470757676288486e-05, -0.046374063938856125, -2.50339189733495e-06, -0.00013672371278516948, -0.003097381442785263, -0.0434807725250721, -3.2085256576538086, -0.1753949522972107, -0.00012635385792236775, -0.025542045012116432, -0.0019622850231826305, -0.14733149111270905, -0.598676323890686, -0.005277629941701889, -0.008300804533064365, -0.09124983102083206, -0.0026395025197416544, -1.1683329343795776, -5.066266385256313e-05, -0.13021615147590637, -0.01011554803699255, -0.0013624681159853935, -1.9796239137649536, -0.0035669293720275164, -2.8957090377807617, -0.003882253309711814, -0.002008922165259719, -0.00943546462804079, -0.04831169173121452, -1.6861439943313599, -0.00029023250681348145, -0.9174743294715881, -0.0021051643416285515, -0.03960723057389259, -0.3614245355129242, -0.05929970741271973, -0.7221887111663818, -0.03085361421108246, -0.033026259392499924, -0.003654232481494546, -0.0008267321973107755, -1.5144834518432617, -5.960462772236497e-07, -1.9073468138230965e-06, -5.960446742392378e-06, -1.9192511899746023e-05, -1.8483067750930786, -0.0018390186596661806], "finish_reason": "stop"}], "metrics": {"energy": 897.2740530529021, "energy_per_token": 3.6773526764463202, "time": 23.0228, "time_per_token": 0.09435573770491804}}
{"outputs": [{"text": "if 'Title' not in df.columns or 'Content' not in df.columns:\n        print(\"DataFrame must have 'Title' and 'Content' columns.\")\n        return\n\n    articles = df[(df['Title'].str.lower().str.contains('how ')) | (df['Title'].str.lower().str.contains('what '))]\n\n    if articles.empty:\n        print(\"No articles found with titles containing 'How' or 'What'.\")\n        return\n\n    content = ' '.join(articles['Content'].tolist())\n    words = re.findall(r'\\w+', content.lower())\n    vectorizer = TfidfVectorizer(analyzer='word')\n    tfidf_matrix = vectorizer.fit_transform([' '.join(words)])\n    feature_names = vectorizer.get_feature_names_out()\n\n    scores = tfidf_matrix.toarray()[0]\n\n    plt.figure(figsize=(8, 5))\n    plt.bar(range(len(scores)), scores)\n", "tokens": ["if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "print", "(", "\"", "DataFrame", " must", " have", " '", "Title", "'", " and", " '", "Content", "'", " columns", ".", "\"", ")", "\n", "        ", "return", "\n", "\n", "    ", "articles", " =", " df", "[(", "df", "['", "Title", "']", ".", "str", ".", "lower", "()", ".", "str", ".", "contains", "('", "how", " '", "))", " |", " (", "df", "['", "Title", "']", ".", "str", ".", "lower", "()", ".", "str", ".", "contains", "('", "what", " '", "))", "]", "\n", "\n", "    ", "if", " articles", ".", "empty", ":", "\n", "        ", "print", "(", "\"", "No", " articles", " found", " with", " titles", " containing", " '", "How", "'", " or", " '", "What", "'", ".", "\"", ")", "\n", "        ", "return", "\n", "\n", "    ", "content", " =", " '", " '", ".", "join", "(", "articles", "['", "Content", "']", ".", "tol", "ist", "())", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " content", ".", "lower", "())", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "analy", "zer", "='", "word", "')", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(['", " '", ".", "join", "(", "words", ")]", ")", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "scores", " =", " tf", "id", "f", "_", "matrix", ".", "to", "array", "()[", "0", "]", "\n", "\n", "    ", "plt", ".", "figure", "(", "fig", "size", "=(", "8", ",", " ", "5", "))", "\n", "    ", "plt", ".", "bar", "(", "range", "(", "len", "(", "scores", "))", ",", " scores", ")", "\n"], "logprobs": [-1.1495336294174194, -0.2776464819908142, -0.010533686727285385, -0.00011562632425921038, -0.27052363753318787, -5.769562994828448e-05, -0.0025295186787843704, -0.09683264791965485, -0.0007246490567922592, -0.03447234258055687, -0.0026931229513138533, -0.0003475538978818804, -3.0397906812140718e-05, -0.00011646069469861686, -2.7179348762729205e-05, -3.516612196108326e-05, -2.884823152271565e-05, -4.172316494077677e-06, -0.005251304246485233, -0.008453774265944958, -0.007163672707974911, -2.204984664916992, -0.4078214168548584, -0.04963739588856697, -0.704470157623291, -0.8368729948997498, -0.8576170206069946, -0.16049787402153015, -0.003981758840382099, -0.0007601470570079982, -0.0019708510953933, -0.000800408364739269, -0.0001323135511483997, -0.0002699726028367877, -0.0037260884419083595, -1.4347343444824219, -0.013503049500286579, -0.0005909841856919229, -0.0004966217675246298, -0.03896663710474968, -0.4645111560821533, -1.3455710411071777, -0.12520794570446014, -0.0010045487433671951, -3.6504642963409424, -0.2248879224061966, -0.03325967490673065, -0.9973375797271729, -0.012934711761772633, -0.08345287293195724, -0.0007701530121266842, -0.00026294111739844084, -0.0007238152320496738, -0.02320677787065506, -5.781483559985645e-05, -0.8078786134719849, -0.005476234946399927, -0.0008058876264840364, -0.0018271195003762841, -1.0251946150674485e-05, -0.004914822522550821, -0.42163121700286865, -0.4153672754764557, -2.5213351249694824, -0.2576157748699188, -0.04003360494971275, -0.13720747828483582, -0.008227739483118057, -0.00020418466010596603, -0.0006162413046695292, -4.672895011026412e-05, -1.728519782773219e-05, -5.4834770708112046e-05, -3.0278701160568744e-05, -0.00037901371251791716, -6.97350042173639e-05, -0.0003817544784396887, -0.00011801023356383666, -3.3854863431770355e-05, -0.00017808281700126827, -0.0009578645695000887, -0.23730537295341492, -0.017367660999298096, -0.00036423723213374615, -0.02933352440595627, -0.030548185110092163, -0.4971107244491577, -0.00026341783814132214, -0.06920555233955383, -0.09604112058877945, -0.0013733012601733208, -0.09068220853805542, -0.002344004809856415, -0.0028924793004989624, -0.0005492847412824631, -0.038900937885046005, -0.13895003497600555, -0.00153840403072536, -0.037205155938863754, -0.014871451072394848, -0.9700573682785034, -0.1362553834915161, -0.3293556272983551, -0.30957770347595215, -0.0159938745200634, -2.512352466583252, -0.03386037051677704, -0.029936352744698524, -0.0003070359816774726, -0.003104987321421504, -0.1367153823375702, -0.1299557387828827, -0.0027202290948480368, -0.00010287232726113871, -0.00011264643399044871, -0.010891278274357319, -0.016764823347330093, -0.010842340998351574, -0.01739519089460373, -0.0005146132898516953, -2.1699471473693848, -0.21623094379901886, -1.8796895742416382, -0.07223786413669586, -0.0003149013500660658, -0.00017951308109331876, -0.0057420069351792336, -0.036973580718040466, -0.01374529767781496, -0.00041571559268049896, -0.8353429436683655, -0.002449490362778306, -0.35239267349243164, -7.152555099310121e-07, -0.0006173135479912162, -0.022415950894355774, -0.6168646812438965, -1.0756466388702393, -0.010781725868582726, -0.150637686252594, -3.0517112463712692e-05, -0.19739528000354767, -9.500529267825186e-05, -0.11856590956449509, -0.0018047487828880548, -0.051302842795848846, -0.6617190837860107, -0.012004158459603786, -1.7881233361549675e-05, -0.002908525988459587, -0.3471677601337433, -0.0029659350402653217, -0.007383439689874649, -0.0495452806353569, -0.7397474050521851, -0.6727797985076904, -0.0008499585674144328, -0.0002803409588523209, -0.00016783259343355894, -1.1920928244535389e-07, -8.34461570775602e-06, -1.1920928244535389e-07, -1.5497195136049413e-06, 0.0, -0.34715914726257324, -1.0522727966308594, -0.0002748588449321687, -0.0073078228160738945, -0.0009528625523671508, -0.44935017824172974, -0.0221552737057209, -0.00877606961876154, -0.2871253788471222, -0.10071126371622086, -0.001773571828380227, -0.45690813660621643, -0.08247089385986328, -0.00016544880054425448, -0.00046135272714309394, -1.1920928244535389e-07, -9.023735765367746e-05, -2.5033637939486653e-05, -3.755022044060752e-05, -5.1377883210079744e-05, -0.5342346429824829, -0.00389246572740376, -0.00029392691794782877, -7.247662142617628e-05, -0.011113528162240982, -0.04341639578342438, -0.005496152210980654, -0.0002008474839385599, -0.03208697959780693, -0.2669324278831482, -0.43938130140304565, -0.0005502378917299211, -0.032071277499198914, -0.000504723924677819, -0.7453757524490356, -1.1920928244535389e-07, -4.410734163684538e-06, -4.2199197196168825e-05, 0.0, -2.9802276912960224e-06, 0.0, -2.0265558760002023e-06, -0.3557821810245514, -0.0002535260282456875, -0.0004996005445718765, -0.0027499499265104532, -1.043338656425476, -0.00024244230007752776, -2.310182571411133, -0.002797977067530155, -1.7508071660995483, -5.447716102935374e-05, -1.4305104514278355e-06, -6.556489552167477e-06, -1.0251946150674485e-05, -0.013560089282691479, -0.6183332800865173, -4.9232225137529895e-05, -0.22994230687618256, -0.00012516192509792745, -0.003935094457119703, -0.03894393518567085, -1.2848073244094849, -0.00040546778473071754, -1.067000150680542, -0.00031895318534225225, -1.1486027240753174, -0.32500237226486206, -0.010032348334789276, -2.0265558760002023e-06, -0.004443651996552944, -1.678342580795288, -0.0048436447978019714, -0.043824609369039536, -2.4292609691619873, -0.007900773547589779, -0.011407743208110332, -0.057730916887521744, -0.13048005104064941, -0.00025960413040593266, -0.031129945069551468, -0.2764880657196045, -1.2384848594665527, -1.3470558769768104e-05, -0.019189193844795227, -2.0146166207268834e-05, -0.2717103362083435, -0.0009016501135192811, -0.0006816447712481022, -0.001016576774418354, -0.17113986611366272, -0.0009311868925578892], "finish_reason": "length"}], "metrics": {"energy": 904.7752835960387, "energy_per_token": 3.534278451547026, "time": 22.87781, "time_per_token": 0.0893664453125}}
{"outputs": [{"text": "if 'Title' not in df or 'Content' not in df:\n        ax = plt.subplot()\n        plt.show()\n        return ax\n\n    pattern = re.compile(r'(?<!\\w)(?i)how|what(?!\\w)')\n    df = df[df['Title'].str.contains(pattern)]\n\n    if df.empty:\n        ax = plt.subplot()\n        plt.show()\n        return ax\n\n    tfidf_vectorizer = TfidfVectorizer()\n    tfidf_matrix = tfidf_vectorizer.fit_transform(df['Content'])\n\n    feature_names = tfidf_vectorizer.get_feature_names()\n    tfidf_scores = np.asarray(tfidf_matrix.toarray()[0])\n\n    ax = plt.subplot()\n    ax.set_xlabel('Feature name')\n    ax.set_ylabel('TF-IDF Score')\n    plt.xticks(rotation=90)\n    plt.bar(feature_names, tfidf_scores)\n", "tokens": ["if", " '", "Title", "'", " not", " in", " df", " or", " '", "Content", "'", " not", " in", " df", ":", "\n", "        ", "ax", " =", " plt", ".", "sub", "plot", "()", "\n", "        ", "plt", ".", "show", "()", "\n", "        ", "return", " ax", "\n", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "r", "'(", "?", "<", "!", "\\", "w", ")(", "?", "i", ")", "how", "|", "what", "(", "?", "!", "\\", "w", ")", "')", "\n", "    ", "df", " =", " df", "[", "df", "['", "Title", "']", ".", "str", ".", "contains", "(", "pattern", ")]", "\n", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "ax", " =", " plt", ".", "sub", "plot", "()", "\n", "        ", "plt", ".", "show", "()", "\n", "        ", "return", " ax", "\n", "\n", "    ", "tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " tf", "id", "f", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "df", "['", "Content", "'])", "\n", "\n", "    ", "feature", "_", "names", " =", " tf", "id", "f", "_", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "tf", "id", "f", "_", "scores", " =", " np", ".", "as", "array", "(", "tf", "id", "f", "_", "matrix", ".", "to", "array", "()[", "0", "])", "\n", "\n", "    ", "ax", " =", " plt", ".", "sub", "plot", "()", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Feature", " name", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "TF", "-", "ID", "F", " Score", "')", "\n", "    ", "plt", ".", "xt", "icks", "(", "rotation", "=", "9", "0", ")", "\n", "    ", "plt", ".", "bar", "(", "feature", "_", "names", ",", " tf", "id", "f", "_", "scores", ")", "\n"], "logprobs": [-1.1495336294174194, -0.2776464819908142, -0.010533686727285385, -0.00011562632425921038, -0.27052363753318787, -5.769562994828448e-05, -0.0025295186787843704, -2.420048236846924, -0.0037722873967140913, -0.0006052807439118624, -7.795983401592821e-05, -0.0004015354788862169, -0.00016556799528189003, -3.7431014789035544e-05, -0.008229158818721771, -0.01338790263980627, -0.008058889769017696, -2.827454090118408, -0.011622808873653412, -0.0380551852285862, -0.00016890530241653323, -1.0582818984985352, -0.1673169732093811, -0.10231613367795944, -0.03252742066979408, -0.022301942110061646, -0.9366866946220398, -4.815939246327616e-05, -0.7557669281959534, -0.1710936576128006, -0.0027692087460309267, -0.016028834506869316, -0.019569071009755135, -0.005078630056232214, -0.002787159290164709, -0.22879286110401154, -0.0005536930402740836, -2.4479548931121826, -0.03671012073755264, -0.7009949684143066, -0.00012814177898690104, -0.0005303407087922096, -0.15340231359004974, -0.0482376292347908, -1.4851808547973633, -0.5577046275138855, -1.6803961992263794, -1.0760102272033691, -0.4484840929508209, -0.622191309928894, -0.19620347023010254, -2.5680150985717773, -2.7059569358825684, -0.754131019115448, -0.15701837837696075, -0.5649257302284241, -0.15999962389469147, -0.02014416642487049, -0.000325388420606032, -0.0028526587411761284, -0.0013516347389668226, -0.0014184186002239585, -0.026596032083034515, -0.0020848223939538, -0.01403062790632248, -0.2859468162059784, -0.9150578379631042, -0.8423681855201721, -0.006169678643345833, -0.36318808794021606, -0.06669865548610687, -0.0731736570596695, -0.0009065332706086338, -7.903263758635148e-05, -0.000270091783022508, -0.5886589288711548, -3.6954195820726454e-05, -0.0397266149520874, -0.000285227142740041, -0.006568744778633118, -0.510596752166748, -0.09119433164596558, -0.32172536849975586, -7.343022298300639e-05, -0.04977951943874359, -0.26531168818473816, -0.0016595651395618916, -0.13380657136440277, -0.004889317788183689, -0.004152129869908094, -0.0007022537174634635, -0.013819018378853798, -0.00023874769976828247, -0.0001722425949992612, -5.960462772236497e-07, -0.0008248264202848077, -9.715084888739511e-05, -0.00013386306818574667, -0.00020203932945150882, -0.0013827058719471097, -0.010349416173994541, -4.6491513785440475e-06, -0.0018924438627436757, -0.00047124247066676617, -3.135155202471651e-05, -0.0012736550997942686, -0.00016985881666187197, -0.00047267231275327504, -0.00025197668583132327, -0.04375044256448746, -0.00046564225340262055, -1.4983947277069092, -0.2048759162425995, -0.0023371067363768816, -1.0011000633239746, -0.06063774973154068, -0.040418241173028946, -0.0010492063593119383, -0.0006494796834886074, 0.0, -0.0022567061241716146, 0.0, -3.576272320060525e-06, -1.7881377516459906e-06, -0.7898795008659363, -0.007218115963041782, -0.06693460047245026, -0.21583080291748047, -0.010635835118591785, -0.0103731295093894, -0.1363000124692917, -0.24794501066207886, -0.0016677769599482417, -0.002996956231072545, -5.960462772236497e-07, 0.0, -8.4638240878121e-06, -1.4543427823809907e-05, -2.3841855067985307e-07, -0.0003759154351428151, -0.00014029949670657516, -8.356221951544285e-05, -4.8397800128441304e-05, -0.027219073846936226, -0.014227737672626972, -0.024710731580853462, -0.0007827793597243726, -0.17121872305870056, -0.02450113743543625, -1.0100404024124146, -0.0001793938863556832, -1.041761875152588, -0.0012882990995422006, -0.06918341666460037, -0.0017804736271500587, -0.1361140012741089, -2.50339189733495e-06, 0.0, -2.3841855067985307e-07, -0.0004493180604185909, -1.0728830375228426e-06, -3.576272320060525e-06, -0.00030250742565840483, -1.1920928244535389e-07, -4.768360213347478e-06, 0.0, -2.074220174108632e-05, -0.9426196217536926, -0.0015506636118516326, -0.13144643604755402, -2.0293402671813965, -0.031438082456588745, -0.009116334840655327, -0.0467086024582386, -0.05691119655966759, -0.004811376333236694, -0.44252246618270874, -3.421248038648628e-05, -0.5665333867073059, -5.125986263010418e-06, -0.002044017892330885, -0.044820185750722885, -4.029192859889008e-05, -4.768370445162873e-07, -1.311301275563892e-06, -0.00017772526189219207, -0.007170774042606354, -0.5774325132369995, -0.0009994279826059937, -0.9723280668258667, -0.002538674511015415, -0.024674097076058388, -0.16361676156520844, -0.17719559371471405, -0.00019238528329879045, -0.90538090467453, -0.0007591941393911839, -0.012981781736016273, -9.775113539944869e-06, -0.07605810463428497, -0.0004483648226596415, -0.005584472790360451, -0.0006288696313276887, -0.030539976432919502, -1.3228161334991455, -0.0018021309515461326, -2.2427847385406494, -0.0044574192725121975, -1.4201451539993286, -0.04769279062747955, -1.3134263753890991, -3.626739501953125, -0.011364017613232136, -0.0004901876673102379, -0.0028049908578395844, -0.011615621857345104, -4.2437604861333966e-05, -0.007106977514922619, -2.4676019165781327e-05, -0.05750652402639389, -0.0011806668480858207, -0.005703485105186701, -0.0017467968864366412, -2.169585604860913e-05, -2.8371408916427754e-05, -0.10747823119163513, -0.011267011985182762, -0.000809818331617862, -0.17576490342617035, -0.9868535399436951, -9.476689592702314e-05, -1.5748860836029053, -1.4185804502631072e-05, -0.00522035313770175, -0.04627516120672226, -0.18082599341869354, -0.2207787036895752, -3.4689302992774174e-05, -0.02133607678115368, -0.0031060567125678062, -0.1247207373380661, -0.4259380102157593, -1.3470558769768104e-05, -0.06764543801546097, -0.028608005493879318, -0.04396870359778404, -2.622600959512056e-06, -1.1920928244535389e-07, -0.0038601660635322332, -0.0027995225973427296, -8.880697714630514e-05, -1.1920928244535389e-07, -8.344646857949556e-07, -2.002696055569686e-05, -0.033295996487140656, -0.0005017452058382332], "finish_reason": "length"}], "metrics": {"energy": 973.0077285118098, "energy_per_token": 3.800811439499257, "time": 26.12526, "time_per_token": 0.102051796875}}
{"outputs": [{"text": "if 'Title' not in df.columns or 'Content' not in df.columns:\n        return plt.subplot()\n\n    df.reset_index(inplace=True)\n\n    title_regex = re.compile(r'\\bhow\\b|\\bwhat\\b')\n    articles = df[df['Title'].str.lower().apply(lambda x: bool(title_regex.search(x)))]\n\n    if articles.empty:\n        return plt.subplot()\n\n    vectorizer = TfidfVectorizer()\n    tfidf = vectorizer.fit_transform(articles['Content'])\n\n    feature_names = vectorizer.get_feature_names_out()\n    feature_values = [sum(tfidf.toarray()[:, i]) for i in range(tfidf.shape[1])]\n    sorted_feature_names = [i[0] for i in sorted(zip(feature_names, feature_values), key=lambda x: -x[1])]\n\n    x = np.arange(len(sorted_feature_names))\n    ", "tokens": ["if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "return", " plt", ".", "sub", "plot", "()", "\n", "\n", "    ", "df", ".", "reset", "_", "index", "(", "in", "place", "=", "True", ")", "\n", "\n", "    ", "title", "_", "regex", " =", " re", ".", "compile", "(", "r", "'\\", "b", "how", "\\", "b", "|\\", "b", "what", "\\", "b", "')", "\n", "    ", "articles", " =", " df", "[", "df", "['", "Title", "']", ".", "str", ".", "lower", "()", ".", "apply", "(", "lambda", " x", ":", " bool", "(", "title", "_", "regex", ".", "search", "(", "x", "))", ")]", "\n", "\n", "    ", "if", " articles", ".", "empty", ":", "\n", "        ", "return", " plt", ".", "sub", "plot", "()", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "articles", "['", "Content", "'])", "\n", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "feature", "_", "values", " =", " [", "sum", "(", "tf", "id", "f", ".", "to", "array", "()", "[:", ",", " i", "])", " for", " i", " in", " range", "(", "tf", "id", "f", ".", "shape", "[", "1", "]", ")]", "\n", "    ", "s", "orted", "_", "feature", "_", "names", " =", " [", "i", "[", "0", "]", " for", " i", " in", " sorted", "(", "zip", "(", "feature", "_", "names", ",", " feature", "_", "values", ")", ",", " key", "=", "lambda", " x", ":", " -", "x", "[", "1", "]", ")]", "\n", "\n", "    ", "x", " =", " np", ".", "ar", "ange", "(", "len", "(", "s", "orted", "_", "feature", "_", "names", "))", "\n", "    "], "logprobs": [-1.1495336294174194, -0.2776464819908142, -0.010533686727285385, -0.00011562632425921038, -0.27052363753318787, -5.769562994828448e-05, -0.0025295186787843704, -0.09683264791965485, -0.0007246490567922592, -0.03447234258055687, -0.0026931229513138533, -0.0003475538978818804, -3.0397906812140718e-05, -0.00011646069469861686, -2.7179348762729205e-05, -3.516612196108326e-05, -2.884823152271565e-05, -4.172316494077677e-06, -0.005251304246485233, -0.008453774265944958, -0.007163672707974911, -1.151468276977539, -0.40798670053482056, -0.028775041922926903, -0.9352497458457947, -1.2860630750656128, -0.008863982744514942, -0.06727336347103119, -0.29418110847473145, -0.0007802779437042773, -1.2275192737579346, -3.2376787662506104, -2.2229163646698, -3.1709168979432434e-05, -1.6331539882230572e-05, -0.010983956977725029, -0.9000834226608276, -1.311301275563892e-06, -0.02196788415312767, -0.00022218143567442894, -0.29106712341308594, -0.03204241767525673, -1.3964309692382812, -0.00029130507027730346, -3.1543707847595215, -0.30048203468322754, -2.2236216068267822, -0.05933992564678192, -0.3049936294555664, -8.21318244561553e-05, -0.001999404514208436, -0.2039368599653244, -0.054070860147476196, -1.5149545669555664, -0.05548820272088051, -1.9671602249145508, -0.06297922134399414, -0.000705470098182559, -0.021855458617210388, -6.603976362384856e-05, -0.0019289711490273476, -0.00047338721924461424, -6.532455881824717e-05, -0.9302430748939514, -0.01806180737912655, -0.40559884905815125, -2.831835985183716, -0.5532406568527222, -0.04358291998505592, -0.35566192865371704, -0.05587415397167206, -0.1756407916545868, -0.0006949870148673654, -0.00015424491721205413, -0.0009843033039942384, -0.8960142731666565, -0.00010144196130568162, -2.81408429145813, -0.0003237200144212693, -0.0008667526417411864, -1.385535717010498, -0.0011884062550961971, -0.42221567034721375, -0.17946933209896088, -0.001001690630801022, -1.0326323509216309, -0.00024768622824922204, -0.1929192692041397, -3.2186455882765586e-06, -1.1920928244535389e-07, -0.00016711745411157608, -0.0333581417798996, -0.00012158608296886086, -0.004954561125487089, -0.04692644625902176, -0.017004525288939476, -0.1158047467470169, -0.37262940406799316, -0.00010346830822527409, -0.11574189364910126, -0.37780267000198364, -0.00468691810965538, -0.2693864405155182, -0.009375590831041336, -0.0030877552926540375, -0.0006149308173917234, -0.015436341054737568, -0.008549517020583153, -0.0002233732520835474, -0.001354015665128827, -8.583032467868179e-06, -0.0002571013756096363, -0.001211624126881361, -0.015222211368381977, -0.00012039413559250534, -1.4356147050857544, -0.007526848465204239, -0.0028681117109954357, -0.0004862556525040418, 0.0, -0.0006320862448774278, 0.0, -1.0728830375228426e-06, -4.768370445162873e-07, -0.9015835523605347, -0.013354378752410412, -0.07032753527164459, -0.7424771189689636, -0.11485499888658524, -0.008604830130934715, -0.9533895254135132, -0.01114453375339508, -1.1920928244535389e-07, -0.0001212284987559542, -0.0004297763225622475, -0.00020716428116429597, -1.3470558769768104e-05, -0.05467656999826431, -0.01718698814511299, -0.03150554373860359, -0.0008384049870073795, -0.14312852919101715, -0.061928845942020416, -0.8575076460838318, -0.00012694983161054552, -1.606171727180481, -0.005025493446737528, -0.1871601939201355, -0.0014403217937797308, -0.30881720781326294, -1.1920922133867862e-06, -3.6954811548639555e-06, -0.0001760566228767857, -1.1920928244535389e-07, -4.172316494077677e-06, 0.0, -1.537788011773955e-05, -0.34298399090766907, -0.0001394651480950415, -0.014415055513381958, -0.006079040467739105, -0.41101208329200745, -1.0796332359313965, -0.005205766763538122, -2.2870748043060303, -0.00292671169154346, -2.6847381591796875, -1.3756606578826904, -0.024484504014253616, -0.7749805450439453, -0.010657419450581074, -0.0006030171643942595, -1.3518556356430054, -1.0836430788040161, -0.000617551791947335, -0.08700255304574966, -0.007741094566881657, -0.007636875845491886, -0.4625309407711029, -0.014360766857862473, -0.01718253456056118, -2.753696753643453e-05, -0.08250338584184647, -0.007416927255690098, -5.543078441405669e-05, -0.6697819232940674, -3.3378546504536644e-06, -1.311301275563892e-06, -0.0001532914029667154, -0.02437957189977169, -0.00018189683032687753, -0.0002445875434204936, -0.0018105795606970787, -6.949660019017756e-05, -0.004818138666450977, -2.03446626663208, -2.125535726547241, -0.025667304173111916, -0.0006768796010874212, -1.1614688634872437, -0.009244022890925407, -0.44347330927848816, -0.17155227065086365, -0.15954402089118958, -3.460679769515991, -0.28857746720314026, -0.26079732179641724, -0.0017979660769924521, -0.0058308979496359825, -5.0424259825376794e-05, -4.470248313737102e-05, -0.04908980056643486, -0.0004654039512388408, -0.030323505401611328, -0.0008081507403403521, -0.0012724645202979445, -3.576278118089249e-07, -0.001960976282134652, -0.0008133916999213398, -0.007355867885053158, -3.576278118089249e-07, -7.045020902296528e-05, -0.008318774402141571, -8.427741704508662e-05, -0.03462297096848488, -0.0050723436288535595, -0.001278179232031107, -0.07146558165550232, -0.0028177103959023952, -1.298201084136963, -0.00878824107348919, -0.0007347744540311396, -3.313963316031732e-05, -0.09868959337472916, -0.00013493580627255142, -0.015032813884317875, -0.5744675993919373, -0.00012718822108581662, -2.9758191108703613, -0.24106359481811523, -0.09061960130929947, -3.576278118089249e-07, -0.013850410468876362, -1.5497195136049413e-06, -0.0002012050390476361, -0.06407678872346878, -0.0002535260282456875, -0.14750328660011292, 0.0, -2.2649508537142538e-05, -4.768370445162873e-07, -2.3841855067985307e-07, -2.9802276912960224e-06, -0.020761316642165184, -0.008282598108053207, -0.06974613666534424], "finish_reason": "length"}], "metrics": {"energy": 931.5228138313288, "energy_per_token": 3.638760991528628, "time": 23.445658, "time_per_token": 0.0915846015625}}
{"outputs": [{"text": "df = df.copy()\n    if 'Title' not in df.columns:\n        plt.bar([], [], tick_label='')\n        return plt.gca()\n    if 'Content' not in df.columns:\n        plt.bar([], [], tick_label='')\n        return plt.gca()\n    pattern = re.compile(r'(?<=^|\\s)(how|what)(?=$|\\s)')\n    mask = df['Title'].apply(lambda x: bool(pattern.findall(x)))\n    df = df[mask]\n    if df.shape[0] == 0:\n        plt.bar([], [], tick_label='')\n        return plt.gca()\n    tf = TfidfVectorizer()\n    features = tf.fit_transform(df['Content']).toarray()\n    sum_features = np.sum(features, axis=0)\n    sum_features_dict = {}\n    for i in range(len(sum_features)):\n        sum_features_dict[tf.get_feature_names()[i]] = sum_features", "tokens": ["df", " =", " df", ".", "copy", "()", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "plt", ".", "bar", "([]", ",", " []", ",", " tick", "_", "label", "='", "')", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "    ", "if", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "plt", ".", "bar", "([]", ",", " []", ",", " tick", "_", "label", "='", "')", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "r", "'(", "?", "<=", "^", "|\\", "s", ")(", "how", "|", "what", ")(", "?", "=$", "|\\", "s", ")", "')", "\n", "    ", "mask", " =", " df", "['", "Title", "']", ".", "apply", "(", "lambda", " x", ":", " bool", "(", "pattern", ".", "find", "all", "(", "x", ")))", "\n", "    ", "df", " =", " df", "[", "mask", "]", "\n", "    ", "if", " df", ".", "shape", "[", "0", "]", " ==", " ", "0", ":", "\n", "        ", "plt", ".", "bar", "([]", ",", " []", ",", " tick", "_", "label", "='", "')", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "    ", "tf", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "features", " =", " tf", ".", "fit", "_", "transform", "(", "df", "['", "Content", "'])", ".", "to", "array", "()", "\n", "    ", "sum", "_", "features", " =", " np", ".", "sum", "(", "features", ",", " axis", "=", "0", ")", "\n", "    ", "sum", "_", "features", "_", "dict", " =", " {}", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "sum", "_", "features", "))", ":", "\n", "        ", "sum", "_", "features", "_", "dict", "[", "tf", ".", "get", "_", "feature", "_", "names", "()[", "i", "]]", " =", " sum", "_", "features"], "logprobs": [-2.9559264183044434, -0.5748932361602783, -0.03559151291847229, -1.4435745477676392, -1.0474995374679565, -0.016567159444093704, -0.07300256937742233, -0.3235870897769928, -1.5902034044265747, -0.36549845337867737, -0.02097286283969879, -0.00023576818057335913, -0.3432648181915283, -7.986703712958843e-05, -0.004664611537009478, -0.15820343792438507, -0.002694787224754691, -2.8458588123321533, -0.017774228006601334, -0.009426371194422245, -2.427762269973755, -0.0012067424831911922, -1.7364373207092285, -0.07273457944393158, -0.0497458353638649, -2.875922918319702, -0.014339497312903404, -1.4094314575195312, -9.775113539944869e-06, -0.0002329078270122409, -2.475322723388672, -0.29317668080329895, -0.02619233913719654, -0.06471949070692062, -0.3631942868232727, -0.2566656768321991, -0.09953805804252625, -0.029664669185876846, -0.0013273486401885748, -0.00042524831951595843, -0.011161981150507927, -0.21942752599716187, -0.12277206033468246, -0.0072049787268042564, -0.0018458010163158178, -8.5588610090781e-05, -0.0006739014061167836, -6.151010165922344e-05, -3.71926071238704e-05, -0.0003471963864285499, -3.290122185717337e-05, -0.0011366104008629918, -0.00038580605178140104, -0.00047672350774519145, -0.022560950368642807, -1.156323378381785e-05, -0.012496504001319408, -0.0027668310794979334, -4.637133679352701e-05, -0.0015872034709900618, -2.1219027985353023e-05, -0.0003053675754927099, -1.6689286894688848e-06, -2.7418097943154862e-06, -0.00873471051454544, -0.000954649003688246, -0.00026854246971197426, -0.0013733012601733208, -0.0005727558163926005, -0.0012879418209195137, -3.814689989667386e-06, -0.0002047805901383981, -4.0531076592742465e-06, -9.822363062994555e-05, -0.0003875934926327318, -0.5404165387153625, -2.7886452674865723, -0.048396989703178406, -0.7699187397956848, -9.262132516596466e-05, -0.00100192881654948, -0.1947081983089447, -0.05247144401073456, -1.420430064201355, -0.678552508354187, -2.6948089599609375, -0.7902792692184448, -1.3603512048721313, -0.21187230944633484, -0.19087602198123932, -0.3164527416229248, -0.01586211659014225, -0.0058784219436347485, -0.13011117279529572, -0.004727258812636137, -1.4985997676849365, -0.0010362261673435569, -0.03540478274226189, -0.5897171497344971, -0.029185451567173004, -0.015185344032943249, -0.050316423177719116, -2.026618480682373, -0.0399300642311573, -0.09600862860679626, -0.14226125180721283, -0.000653530121780932, -0.00022265815641731024, -0.00010632903286023065, -0.4953765869140625, -0.00037877538125030696, -0.033427782356739044, -0.08506879210472107, -0.0014348459662869573, -0.41924992203712463, -0.00034350217902101576, -0.1889222413301468, -6.198863957251888e-06, -2.8446292877197266, -1.5735502529423684e-05, -0.0007058274932205677, -0.044879913330078125, -0.6087795495986938, -0.01603657566010952, -0.04290638491511345, -0.7862719297409058, -0.2163943648338318, -0.0010284854797646403, -0.17673057317733765, -0.005406875628978014, -0.013834656216204166, -0.1557040959596634, -0.03735974058508873, -0.1368798464536667, -0.42834293842315674, -0.006782130803912878, -1.171766996383667, -0.006567205302417278, -0.00014685506175737828, -0.004184775985777378, -0.07153850048780441, -0.0003137096355203539, -0.00012587709352374077, -0.0007465674425475299, -0.003338717622682452, -0.0006061147432774305, -0.0071629625745117664, -6.318072337307967e-06, -0.00835388619452715, -0.0002983363519888371, -0.00012242044613230973, -0.009539850056171417, -2.52720492426306e-05, -0.00022933237778488547, -1.0728830375228426e-06, -7.748573807475623e-06, -0.00529079232364893, -0.0029295645654201508, -0.0002571013756096363, -0.012080952525138855, -0.007135502994060516, -0.0029949357267469168, -1.2993727978027891e-05, -0.00016258825780823827, -1.1920922133867862e-06, -0.00024196557933464646, -0.0004912600270472467, -0.15313641726970673, -1.655443549156189, -2.7904794216156006, -0.0161138828843832, -3.576278118089249e-07, -2.8729025871143676e-05, -5.960462772236497e-07, -2.622600959512056e-06, -5.960462772236497e-07, -0.5281098484992981, -0.3500836193561554, -0.0026944305282086134, -2.5725209712982178, -0.021437594667077065, -0.13660599291324615, -0.0001662831346038729, -0.08566762506961823, -0.0030176362488418818, -3.957670196541585e-05, -0.006134016439318657, -0.029833149164915085, -0.06464574486017227, -0.0021613112185150385, -0.16380369663238525, -1.423185110092163, -0.04975558817386627, -8.642300235806033e-05, -0.0027506633196026087, -0.16665996611118317, -0.006321316584944725, -2.402045726776123, -0.31954285502433777, -0.9333094358444214, -0.006709902081638575, -0.34631508588790894, -2.264974000354414e-06, -0.22064027190208435, -0.0002762889489531517, -0.005943837575614452, -0.009609395638108253, -0.021573051810264587, -0.022491833195090294, -0.00228537037037313, -0.01284021232277155, -0.04689402878284454, -0.009752603247761726, -1.9892362356185913, -0.015171724371612072, -0.0829092264175415, -1.331757664680481, -1.7949566841125488, -0.004876149818301201, -2.534583806991577, -0.0012704405235126615, -0.007757536601275206, -0.0958341509103775, -0.8411678075790405, -0.4493795335292816, -0.011620806530117989, -0.00017069313616957515, -0.23597580194473267, -0.0002914242504630238, -0.46163713932037354, -3.576278118089249e-07, -7.390948667307384e-06, -0.001328181941062212, -9.738924563862383e-05, -0.0003586364327929914, -0.0027488800697028637, -0.1415404975414276, -5.221230458118953e-05, -0.00029345019720494747, -0.0001629458274692297, -2.610649426060263e-05, -0.032384321093559265, -0.23662430047988892, -9.333651541965082e-05, -0.021132661029696465, -5.722029527532868e-06, -1.1920858014491387e-05, 0.0, -7.986990567587782e-06, -0.42095568776130676, -0.02170674130320549, -0.0028019000310450792, -0.007935781031847, -0.030799170956015587, -7.033323527139146e-06, -1.7881377516459906e-06], "finish_reason": "length"}], "metrics": {"energy": 946.6127364292146, "energy_per_token": 3.6977060016766194, "time": 25.523235, "time_per_token": 0.09970013671875}}
{"outputs": [{"text": "# Check if the DataFrame contains the required columns 'Title' and 'Content'. If not, return an empty plot.\n    if 'Title' not in df.columns or 'Content' not in df.columns:\n        print(\"DataFrame does not contain 'Title' or 'Content' columns\")\n        return plt.figure().add_subplot()\n\n    # Create a new DataFrame 'df2' containing articles with titles that include the words \"how\" or \"what\".\n    df2 = df[(df['Title'].str.contains(r'\\bwhat\\b|\\bhow\\b', case=False))]\n\n    # If there are no articles with titles containing \"how\" or \"what,\" return an empty plot.\n    if len(df2) == 0:\n        print(\"No articles with titles containing 'how' or 'what'\")\n        return plt.figure().add_subplot()\n\n    # Initialize a TfidVectorizer object.\n    vectorizer = TfidfVectorizer()\n\n    # Fit and transform the content of each article in the DataFrame using the Tf", "tokens": ["#", " Check", " if", " the", " Data", "Frame", " contains", " the", " required", " columns", " '", "Title", "'", " and", " '", "Content", "'", ".", " If", " not", ",", " return", " an", " empty", " plot", ".", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "print", "(", "\"", "DataFrame", " does", " not", " contain", " '", "Title", "'", " or", " '", "Content", "'", " columns", "\"", ")", "\n", "        ", "return", " plt", ".", "figure", "()", ".", "add", "_", "sub", "plot", "()", "\n", "\n", "    ", "#", " Create", " a", " new", " Data", "Frame", " '", "df", "2", "'", " containing", " articles", " with", " titles", " that", " include", " the", " words", " \"", "how", "\"", " or", " \"", "what", "\"", ".", "\n", "    ", "df", "2", " =", " df", "[(", "df", "['", "Title", "']", ".", "str", ".", "contains", "(", "r", "'\\", "b", "what", "\\", "b", "|\\", "b", "how", "\\", "b", "'", ",", " case", "=", "False", "))", "]", "\n", "\n", "    ", "#", " If", " there", " are", " no", " articles", " with", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", ",", "\"", " return", " an", " empty", " plot", ".", "\n", "    ", "if", " len", "(", "df", "2", ")", " ==", " ", "0", ":", "\n", "        ", "print", "(", "\"", "No", " articles", " with", " titles", " containing", " '", "how", "'", " or", " '", "what", "'", "\"", ")", "\n", "        ", "return", " plt", ".", "figure", "()", ".", "add", "_", "sub", "plot", "()", "\n", "\n", "    ", "#", " Initialize", " a", " T", "f", "id", "Vector", "izer", " object", ".", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "\n", "    ", "#", " Fit", " and", " transform", " the", " content", " of", " each", " article", " in", " the", " Data", "Frame", " using", " the", " T", "f"], "logprobs": [-1.0111974477767944, -0.6307379007339478, -0.18224549293518066, -0.4321698248386383, -0.2791605591773987, -0.003108908887952566, -0.6048771739006042, -0.7826364040374756, -0.6749594807624817, -0.038596924394369125, -2.328012704849243, -0.007576776202768087, -0.0011026738211512566, -0.002013562014326453, -0.0007558587822131813, -0.0014757943572476506, -0.008964884094893932, -2.990121603012085, -1.067588448524475, -0.06565307825803757, -0.0046783750876784325, -0.0806131362915039, -0.19660870730876923, -0.005417783744633198, -0.03302810713648796, -0.14822562038898468, -0.0016947920667007565, -0.002514773979783058, -0.07384752482175827, -0.22523410618305206, -0.0027151170652359724, -6.603976362384856e-05, -0.024263808503746986, -9.65590606938349e-06, -0.004454333335161209, -0.04784519597887993, -0.0003175231395289302, -0.014124545268714428, -0.0009532198309898376, -0.0022509971167892218, -1.4543427823809907e-05, -3.8742269680369645e-05, -2.2172682292875834e-05, -2.4676019165781327e-05, -2.2172682292875834e-05, -1.5497195136049413e-06, -0.001334729720838368, -0.0009062950266525149, -0.004238313529640436, -2.049245834350586, -0.25468626618385315, -0.03291010856628418, -0.9404810667037964, -0.6046732068061829, -0.00034648136352188885, -0.030707500874996185, -0.7229657769203186, -0.0011236312566325068, -0.00013052565918769687, -1.4432549476623535, -0.0003178806509822607, -0.0002752163854893297, -0.0010605193674564362, -0.1745646446943283, -0.6148125529289246, -0.0004567056894302368, -0.0008681819308549166, -0.016466787084937096, -0.33363083004951477, -0.4880877733230591, -0.060976747423410416, -1.2921433448791504, -0.04064524546265602, -0.5260987877845764, -0.8285201787948608, -2.3841855067985307e-07, -0.002975443610921502, -8.761498611420393e-05, -0.2985075116157532, -0.09770333766937256, -0.04542172700166702, -0.0008995062671601772, -0.042329609394073486, -1.4772993326187134, -0.05661621689796448, -1.0005348920822144, -0.1742459237575531, -0.0011881680693477392, -3.77219820022583, -0.6854268908500671, -2.5916473865509033, -0.002095409668982029, -0.9751318097114563, -1.2960476875305176, -0.24800251424312592, -0.051297519356012344, -0.5129358768463135, -0.07234732061624527, -0.14015544950962067, -0.03996247798204422, -0.08584465086460114, -0.01695084571838379, -0.0003587556129787117, -0.009386573918163776, -0.00024637524620629847, -0.0002648479712661356, -0.04638590291142464, -0.3383001685142517, -0.050575073808431625, -0.0009656057227402925, -0.24996696412563324, -0.007332082372158766, -0.003281448734924197, -0.013232391327619553, -1.557334303855896, -0.020747656002640724, -0.14922328293323517, -0.00030214988510124385, -0.00021920185827184469, -0.0005228344234637916, -0.01875418610870838, -3.3854863431770355e-05, -0.5107229351997375, -1.4734736680984497, -0.06316758692264557, -0.2955731451511383, -0.0012181727215647697, -2.575593948364258, -0.07256707549095154, -0.0002530493075028062, -0.19657647609710693, -0.00032205163734033704, -0.0026076382491737604, -0.0008348317351192236, -2.1457441107486375e-05, -0.30174094438552856, -0.0008535317610949278, -0.2495364397764206, -0.011240254156291485, -0.0048912158235907555, -0.45649006962776184, -0.0598808154463768, -0.07963496446609497, -0.07186239212751389, -0.0005233110277913511, -0.013607246801257133, -0.9184088706970215, -0.7000927925109863, -0.005351859610527754, -0.005681437905877829, -0.051423218101263046, -0.07572484761476517, -0.03919224813580513, -0.7923794984817505, -0.04000932350754738, -0.0032619622070342302, -0.00012385078298393637, -0.0012911563972011209, -0.00013600854435935616, -0.0001811817055568099, -0.1305791288614273, -0.0003090619284193963, -0.022344376891851425, -0.0033851719927042723, -0.000271879427600652, -0.0017325166845694184, -0.006967652123421431, -0.0032412870787084103, -0.00011359999916749075, -0.0027500689029693604, -1.73337721824646, -6.067568756407127e-05, -7.211902266135439e-05, -0.0006384003208950162, -0.013736008666455746, -0.02480190619826317, -0.00018857131362892687, -2.539125671319198e-05, -0.0013308010529726744, -0.0004551566671580076, -0.0005683475756086409, -0.29514116048812866, -0.05395803228020668, -0.002689674962311983, -0.1259123980998993, -0.010337971150875092, -0.8244746923446655, -0.18162119388580322, -0.04757094383239746, -0.0210250411182642, -0.030314946547150612, -0.0002833203470800072, -0.0032537635415792465, -0.0003156163729727268, -0.0020139189437031746, -0.028610553592443466, -0.46167048811912537, -5.709961988031864e-05, -4.625213477993384e-05, -0.0025723245926201344, -0.0023236675187945366, -0.0016005337238311768, -9.369411418447271e-05, -0.0014448452275246382, -0.00016735584358684719, -0.0005042473785579205, -4.7801782784517854e-05, -5.960446742392378e-06, -2.5510462364763953e-05, -4.768360213347478e-06, -0.0002470903273206204, -0.0005254556890577078, -0.005925469566136599, -0.00035494225448928773, -0.015058647841215134, -3.280710220336914, -0.2667238116264343, -0.21622402966022491, -3.540453326422721e-05, -0.0009657248156145215, -0.8384047746658325, -0.005396679043769836, -0.5800755620002747, -2.0718321800231934, -0.18890535831451416, -0.0002474478678777814, -0.8013511300086975, -0.007114197593182325, -0.0020814912859350443, -0.0004724340105894953, -1.0728830375228426e-06, -0.0014094904763624072, -0.0002015625941567123, -8.4638240878121e-06, -1.1920928244535389e-07, -0.6642321348190308, -0.0024165494833141565, -0.04164193198084831, -0.00021169328829273582, -0.0006587718962691724, -0.7126338481903076, -0.8224973678588867, -0.009827209636569023, -0.029636200517416, -0.6533220410346985, -0.0781952366232872, -2.9681670665740967, -0.017034996300935745, -0.9426746964454651, -1.6795146465301514, -0.9948440194129944, -0.017411593347787857, -1.1867742538452148, -0.05292527377605438, -0.29198360443115234, -0.0009494088008068502], "finish_reason": "length"}], "metrics": {"energy": 1029.3876176919941, "energy_per_token": 4.021045381609352, "time": 29.565779, "time_per_token": 0.11549132421875}}
{"outputs": [{"text": "# Filter articles with titles containing the words \"how\" or \"what\"\n    df['title_how_what'] = df['Title'].apply(\n        lambda x: bool(re.search(r'(?:^|\\s)(how|what)(?:$|\\s)', x, re.IGNORECASE)))\n    df = df[df['title_how_what']]\n\n    # Check if there are any articles with titles containing \"how\" or \"what\"\n    if len(df) == 0:\n        ax = plt.gca()\n    else:\n        # Convert content into tfid vector\n        content = df['Content'].tolist()\n        tfidf = TfidfVectorizer().fit_transform(content)\n\n        # Create bar plot\n        df_idf = pd.DataFrame(tfidf.T.abs().sum(axis=1), index=tfidf.T.index)\n        ax = df_idf.sort_values(by=0, ascending=False).T.plot(\n            kind='bar', legend=False, title='TF-", "tokens": ["#", " Filter", " articles", " with", " titles", " containing", " the", " words", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "df", "['", "title", "_", "how", "_", "what", "']", " =", " df", "['", "Title", "']", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " bool", "(", "re", ".", "search", "(", "r", "'(", "?", ":", "^", "|\\", "s", ")(", "how", "|", "what", ")(", "?", ":$", "|\\", "s", ")'", ",", " x", ",", " re", ".", "IGN", "ORE", "C", "ASE", ")))", "\n", "    ", "df", " =", " df", "[", "df", "['", "title", "_", "how", "_", "what", "']", "]", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " articles", " with", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "else", ":", "\n", "        ", "#", " Convert", " content", " into", " tf", "id", " vector", "\n", "        ", "content", " =", " df", "['", "Content", "']", ".", "tol", "ist", "()", "\n", "        ", "tf", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "()", ".", "fit", "_", "transform", "(", "content", ")", "\n", "\n", "        ", "#", " Create", " bar", " plot", "\n", "        ", "df", "_", "id", "f", " =", " pd", ".", "DataFrame", "(", "tf", "id", "f", ".", "T", ".", "abs", "()", ".", "sum", "(", "axis", "=", "1", ")", ",", " index", "=", "tf", "id", "f", ".", "T", ".", "index", ")", "\n", "        ", "ax", " =", " df", "_", "id", "f", ".", "sort", "_", "values", "(", "by", "=", "0", ",", " ascending", "=", "False", ")", ".", "T", ".", "plot", "(", "\n", "            ", "kind", "='", "bar", "'", ",", " legend", "=", "False", ",", " title", "='", "TF", "-"], "logprobs": [-1.0111974477767944, -3.453979969024658, -0.9471130967140198, -0.6506139636039734, -0.26840025186538696, -0.5686082243919373, -2.1573474407196045, -0.13607259094715118, -0.07229132205247879, -0.032896727323532104, -0.0006791430641897023, -0.012320601381361485, -0.00020680672605521977, -0.00037305548903532326, -0.008426113985478878, -0.043333180248737335, -0.004602197092026472, -1.0519193410873413, -2.781409978866577, -2.932131290435791, -0.037978410720825195, -2.585340976715088, -0.22807635366916656, -0.22691336274147034, -0.08460062742233276, -0.0018272384768351912, -0.05547376722097397, -0.07472672313451767, -0.01175595074892044, -0.0004441943601705134, -0.0010296764085069299, -0.7827020287513733, -0.0007616956136189401, -1.7702178955078125, -0.01662789285182953, -0.0024757706560194492, -0.1219492107629776, -0.00038115866482257843, -1.550137996673584, -0.0034343567676842213, -0.0195329487323761, -3.909988299710676e-05, -0.06609572470188141, -0.6027776002883911, -0.017553219571709633, -2.2868099212646484, -0.34888550639152527, -2.0757460594177246, -0.2668439745903015, -0.41558781266212463, -0.5543234348297119, -0.029894009232521057, -0.1623174101114273, -0.0040037245489656925, -0.005695661995559931, -0.026149718090891838, -0.00013171759201213717, -0.27442777156829834, -0.0005840741214342415, -0.0092624481767416, -0.018464114516973495, -4.5060096454108134e-05, -0.03556528314948082, -0.6268351674079895, -0.42957574129104614, -2.4437606043647975e-05, -0.014408709481358528, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.3915172815322876, -0.0071083977818489075, -0.14325527846813202, -0.489419162273407, -0.863185465335846, -0.00032431588624604046, -0.05817629396915436, -0.001885304693132639, -0.002063408959656954, -0.00016759421851020306, -1.6689286894688848e-06, -6.9141146923357155e-06, -4.768370445162873e-07, -4.494089080253616e-05, -4.6491513785440475e-06, -0.1686224341392517, -0.0761178731918335, -0.14559803903102875, -0.0003401654539629817, -0.12145957350730896, -1.0119521617889404, -0.15341518819332123, -0.4484559893608093, -0.0233280211687088, -0.3457709550857544, -0.17634889483451843, -0.39650312066078186, -0.1401221752166748, -0.06668482720851898, -0.2328556627035141, -0.0027946485206484795, -0.0001616347290109843, -0.0025404582265764475, -0.00014053787162993103, -0.00013422065239865333, -0.010524957440793514, -0.01955539360642433, -0.00032360086333937943, -0.0072060441598296165, -1.7790558338165283, -3.218599158572033e-05, -0.00014661667228210717, -0.020119749009609222, -0.043727390468120575, -6.937739817658439e-05, -0.00013839241000823677, -0.0012017417466267943, -0.001086121890693903, -0.0021503677126020193, -3.4325790405273438, -0.006110675632953644, -0.09156305342912674, -0.00048423008411191404, -1.6955511569976807, -1.2755313036905136e-05, -0.00036197309964336455, -0.012374646961688995, -3.0122084617614746, -0.014683865942060947, -3.2543604902457446e-05, -0.0016549237770959735, -0.02045500837266445, -0.06090642139315605, -3.309307813644409, -0.9719874858856201, -2.031001091003418, -2.5173180103302, -0.6326754689216614, -2.7104597091674805, -0.5129760503768921, -0.0010237219976261258, -2.0505423545837402, -0.4910805821418762, -0.12642161548137665, -0.06774013489484787, -0.0019508631667122245, -0.0005794276366941631, -1.0910688638687134, -1.0728000402450562, -3.2186455882765586e-06, -0.0009248746791854501, -0.008724783547222614, -0.05859258025884628, -1.1917202472686768, -0.05940193682909012, -0.15534205734729767, -0.6362128853797913, -0.004243417643010616, -8.344646857949556e-07, -0.0022352966479957104, 0.0, -1.2516897186287679e-05, -1.0728830375228426e-06, -0.1789175570011139, -1.0250811576843262, -0.0005634627304971218, -0.09707467257976532, -6.318072337307967e-06, -0.001608269871212542, -0.019946349784731865, -0.00023421882360707968, -0.011264536529779434, -0.5594990253448486, -0.0008659188752062619, -0.016144147142767906, -2.0186407566070557, -1.9029104709625244, -0.039258044213056564, -0.8184953331947327, -0.000705589191056788, -2.4131109714508057, -0.6798669695854187, -3.661248207092285, -0.02291123755276203, -0.12337866425514221, -0.03345395252108574, -0.00016985881666187197, -0.017972709611058235, -0.0022313715890049934, -0.6577675938606262, -5.185469490243122e-05, -4.768370445162873e-07, -0.013952220790088177, -0.27074629068374634, -0.014694438315927982, -1.0053147077560425, -0.00242594419978559, -0.0036472247447818518, -0.7791953086853027, -0.005268973298370838, -0.0003812778159044683, -0.0011986460303887725, -0.6142258048057556, -0.011047743260860443, -0.0046074180863797665, -0.36729633808135986, -0.01024192851036787, -0.17384786903858185, -4.911301948595792e-05, -2.2291887944447808e-05, -0.00046266341814771295, -0.4221886396408081, -0.0003164505760651082, -1.0761915445327759, -0.14076578617095947, -0.0340556837618351, -0.05753612518310547, -1.2413866519927979, -0.0009446449112147093, -0.006147760432213545, -0.0002675890573300421, -1.6331539882230572e-05, 0.0, -0.007172430865466595, -0.26917725801467896, -3.0517112463712692e-05, -0.0019546705298125744, -0.00203116936609149, -0.22976307570934296, -0.0111461840569973, -0.0003389737685211003, -0.015139435417950153, -0.0006525770877487957, -0.00011932138295378536, -0.06545178592205048, -0.11088436096906662, -0.05899734050035477, -2.8609628677368164, -0.0028805925976485014, -0.0012384133879095316, -0.2837696075439453, -0.3621280789375305, -0.006479564122855663, -0.008982841856777668, -0.004682290833443403, -7.009260298218578e-05, -0.2089678943157196, -9.107174992095679e-05, -0.49728256464004517, -4.3987260141875595e-05, -0.005331108812242746, -1.4132435321807861, -1.640076756477356, -0.09512302279472351, -0.10786047577857971, -0.020814323797822], "finish_reason": "length"}], "metrics": {"energy": 973.8423338451385, "energy_per_token": 3.804071616582572, "time": 26.91002, "time_per_token": 0.105117265625}}
{"outputs": [{"text": "if 'Title' not in df.columns or 'Content' not in df.columns:\n        return\n\n    # Extract articles with titles containing \"how\" or \"what\"\n    articles = df[(df['Title'].str.lower().str.contains(r'\\b(how|what)\\b'))]\n\n    # Calculate TF-IDF scores\n    vectorizer = TfidfVectorizer()\n    tfidf = vectorizer.fit_transform(articles['Content'])\n    tfidf_scores = tfidf.sum(axis=0).A1()\n\n    # Visualization\n    features = vectorizer.get_feature_names_out()\n    ax = plt.barh(features, tfidf_scores)\n    plt.yticks(rotation=0)\n    plt.ylabel(\"TF-IDF Score\")\n    plt.title(\"TF-IDF Scores\")\n    return ax", "tokens": ["if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "return", "\n", "\n", "    ", "#", " Ext", "ract", " articles", " with", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "articles", " =", " df", "[(", "df", "['", "Title", "']", ".", "str", ".", "lower", "()", ".", "str", ".", "contains", "(", "r", "'\\", "b", "(", "how", "|", "what", ")\\", "b", "'))", "]", "\n", "\n", "    ", "#", " Calculate", " TF", "-", "ID", "F", " scores", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "articles", "['", "Content", "'])", "\n", "    ", "tf", "id", "f", "_", "scores", " =", " tf", "id", "f", ".", "sum", "(", "axis", "=", "0", ")", ".", "A", "1", "()", "\n", "\n", "    ", "#", " Visual", "ization", "\n", "    ", "features", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "ax", " =", " plt", ".", "bar", "h", "(", "features", ",", " tf", "id", "f", "_", "scores", ")", "\n", "    ", "plt", ".", "yt", "icks", "(", "rotation", "=", "0", ")", "\n", "    ", "plt", ".", "ylabel", "(", "\"", "TF", "-", "ID", "F", " Score", "\"", ")", "\n", "    ", "plt", ".", "title", "(", "\"", "TF", "-", "ID", "F", " Sc", "ores", "\"", ")", "\n", "    ", "return", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.1495336294174194, -0.2776464819908142, -0.010533686727285385, -0.00011562632425921038, -0.27052363753318787, -5.769562994828448e-05, -0.0025295186787843704, -0.09683264791965485, -0.0007246490567922592, -0.03447234258055687, -0.0026931229513138533, -0.0003475538978818804, -3.0397906812140718e-05, -0.00011646069469861686, -2.7179348762729205e-05, -3.516612196108326e-05, -2.884823152271565e-05, -4.172316494077677e-06, -0.005251304246485233, -0.008453774265944958, -0.007163672707974911, -1.151468276977539, -1.6906232833862305, -0.27610987424850464, -0.0009691785671748221, -0.909156084060669, -2.5546350479125977, -0.07944868505001068, -0.6702092289924622, -0.25939399003982544, -0.2643888294696808, -0.6291838884353638, -0.4011293649673462, -0.0541229210793972, -0.0011344670783728361, -0.015664977952837944, -0.00032479254878126085, -0.0006792622152715921, -0.013084503822028637, -0.07329342514276505, -0.0015586382942274213, -1.533674955368042, -0.12046043574810028, -0.014048142358660698, -1.3677375316619873, -0.012227457016706467, -0.055824778974056244, -0.0005729940603487194, -0.00015889335190877318, -0.00032860602368600667, -0.030601948499679565, -2.3245540432981215e-05, -0.5778428316116333, -0.0027942920569330454, -0.00032228996860794723, -0.0016750366194173694, -4.768360213347478e-06, -0.003672404680401087, -0.9525009989738464, -0.07590939104557037, -0.1723206639289856, -0.001090646837837994, -0.5162757635116577, -0.16050365567207336, -0.004559596534818411, -0.002711669309064746, -0.015736211091279984, -0.001259725191630423, -0.15355445444583893, -0.4709903597831726, -0.06314016878604889, -0.22695717215538025, -0.00020919041708111763, -1.0531442165374756, -3.1168863773345947, -0.2765749394893646, -0.016997024416923523, -2.634490556374658e-05, -0.00015960850578267127, -0.1528165191411972, -1.023205280303955, -0.0013404440833255649, -0.5983906984329224, -0.0009658439084887505, -0.0007210753974504769, -0.0002337421028641984, -1.1920928244535389e-07, -0.01493158284574747, 0.0, -3.6954811548639555e-06, -2.3841855067985307e-07, -0.5216478109359741, -0.003270517336204648, -0.010182575322687626, -0.24773009121418, -0.015526722185313702, -0.0037121926434338093, -0.7583242058753967, -0.005534800700843334, 0.0, -0.00040797016117721796, -0.00020168177434243262, -8.856858039507642e-05, -4.410734163684538e-06, -0.008513939566910267, -0.013416013680398464, -0.011010839603841305, -0.0010384886991232634, -0.11807799339294434, -0.049533139914274216, -0.7744451761245728, -1.4763731956481934, -0.0035387768875807524, -0.001901843468658626, -0.08720196783542633, -0.2715696096420288, -0.005643743555992842, -1.565798044204712, -0.00013243274588603526, -1.7881377516459906e-06, -0.009978529997169971, -1.1395845413208008, -0.0003461238811723888, -0.00022980909852776676, -0.0009943069890141487, -0.0046500167809426785, -0.001579943229444325, -0.09166616946458817, -0.7243792414665222, -0.3509534001350403, -1.1327495574951172, -0.07096801698207855, -0.19786477088928223, -0.0003738896339200437, -0.08096499741077423, -0.6374396085739136, -2.084929943084717, -0.11776947230100632, -0.0023671959061175585, -2.8850836753845215, -0.01060457807034254, -0.2769537568092346, 0.0, -6.318072337307967e-06, -0.0007826602668501437, -1.1920928244535389e-07, -7.271740287251305e-06, 0.0, -2.884823152271565e-05, -0.31489574909210205, -8.630380034446716e-05, -0.004289118107408285, -0.008280115202069283, -0.09506134688854218, -1.3617359399795532, -0.001911718980409205, -0.2351096123456955, -1.1086402082582936e-05, -0.19725121557712555, -0.1444816142320633, -0.0032782405614852905, -0.01619892381131649, -0.006007234565913677, -0.011852201074361801, -1.2516897186287679e-05, -4.768370445162873e-07, -8.630380034446716e-05, -2.861018856492592e-06, -0.07033920288085938, -0.009429678320884705, -0.12061313539743423, -0.3845197260379791, -6.8662193370983e-05, -1.0848170518875122, -0.00012134769349358976, -0.0025957482866942883, -1.049555778503418, -0.029075108468532562, -0.1593559831380844, -0.0016419512685388327, -0.012708981521427631, -0.14478158950805664, -0.2634468972682953, -5.1020273531321436e-05, -0.7525843977928162, -2.427046775817871, -0.010862152092158794, -0.008969019167125225, -0.0034426727797836065, -0.00015472168161068112, -9.536288416711614e-05, -0.01759948581457138, -0.0003916450368706137, -0.004968202207237482, -0.0029079315718263388, -0.33159559965133667, -0.41142746806144714, -6.603976362384856e-05, -0.9434031248092651, -0.1029358059167862, -0.03475642576813698, -0.14773531258106232, -0.0037091048434376717, -0.0003064401389565319, -0.00027533553657121956, -0.4619158208370209, -8.606540359323844e-05, -0.7804625630378723, -0.007203913759440184, -0.00040439533768221736, -0.37724095582962036, -0.8528059124946594, -0.018372125923633575, -1.2307367324829102, -1.4305104514278355e-06, -2.861018856492592e-06, -7.748573807475623e-06, -3.4450891689630225e-05, -0.15895022451877594], "finish_reason": "stop"}], "metrics": {"energy": 850.0604347114561, "energy_per_token": 3.881554496399343, "time": 25.040573, "time_per_token": 0.11434051598173516}}
{"outputs": [{"text": "if 'Title' not in df.columns or 'Content' not in df.columns:\n        plt.bar([], [])\n        return plt.gca()\n\n    df['title_with_how_or_what'] = df['Title'].apply(lambda x: bool(re.search('how|what', x, re.IGNORECASE)))\n\n    df_articles = df[df['title_with_how_or_what']]\n\n    if df_articles.empty:\n        plt.bar([], [])\n        return plt.gca()\n\n    vectorizer = TfidfVectorizer(stop_words='english')\n    tfidf = vectorizer.fit_transform(df_articles['Content'].astype('str'))\n    feature_names = vectorizer.get_feature_names_out()\n\n    tfidf_array = np.asarray(tfidf.mean(axis=0)).ravel()\n\n    df_articles = pd.DataFrame({'Feature': feature_names, 'TF-IDF Score': tfidf_array}).sort_values(", "tokens": ["if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "plt", ".", "bar", "([]", ",", " [", "])", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "df", "['", "title", "_", "with", "_", "how", "_", "or", "_", "what", "']", " =", " df", "['", "Title", "']", ".", "apply", "(", "lambda", " x", ":", " bool", "(", "re", ".", "search", "('", "how", "|", "what", "'", ",", " x", ",", " re", ".", "IGN", "ORE", "C", "ASE", ")))", "\n", "\n", "    ", "df", "_", "articles", " =", " df", "[", "df", "['", "title", "_", "with", "_", "how", "_", "or", "_", "what", "']", "]", "\n", "\n", "    ", "if", " df", "_", "articles", ".", "empty", ":", "\n", "        ", "plt", ".", "bar", "([]", ",", " [", "])", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "df", "_", "articles", "['", "Content", "']", ".", "ast", "ype", "('", "str", "'))", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "tf", "id", "f", "_", "array", " =", " np", ".", "as", "array", "(", "tf", "id", "f", ".", "mean", "(", "axis", "=", "0", "))", ".", "ravel", "()", "\n", "\n", "    ", "df", "_", "articles", " =", " pd", ".", "DataFrame", "({", "'", "Feature", "':", " feature", "_", "names", ",", " '", "TF", "-", "ID", "F", " Score", "':", " tf", "id", "f", "_", "array", "})", ".", "sort", "_", "values", "("], "logprobs": [-1.1495336294174194, -0.2776464819908142, -0.010533686727285385, -0.00011562632425921038, -0.27052363753318787, -5.769562994828448e-05, -0.0025295186787843704, -0.09683264791965485, -0.0007246490567922592, -0.03447234258055687, -0.0026931229513138533, -0.0003475538978818804, -3.0397906812140718e-05, -0.00011646069469861686, -2.7179348762729205e-05, -3.516612196108326e-05, -2.884823152271565e-05, -4.172316494077677e-06, -0.005251304246485233, -0.008453774265944958, -0.007163672707974911, -1.2235546112060547, -0.0007348936051130295, -3.022043228149414, -0.07839497923851013, -0.05331447720527649, -0.053869590163230896, -0.0001971527235582471, -0.06041625142097473, -0.05103429779410362, -0.14847393333911896, -0.2771521210670471, -0.032483454793691635, -0.013651933521032333, -0.00024101213784888387, -8.49926145747304e-05, -0.014977854676544666, -0.2567827105522156, -0.0007726544863544405, -1.3335833549499512, -1.4904894828796387, -2.860480785369873, -0.06145162135362625, -3.009894847869873, -0.031062457710504532, -0.4083995521068573, -0.11038339883089066, -0.7014865279197693, -0.00016950124700088054, -0.005434857215732336, -0.01290282141417265, -0.004058340098708868, -0.05596050247550011, -0.09644540399312973, -0.0010525407269597054, -0.000548331590835005, -0.0017210922669619322, -0.39603182673454285, -0.00126079679466784, -0.16342656314373016, -0.09546689689159393, -0.002895807381719351, -1.7922025918960571, -0.015785612165927887, -0.007806388661265373, -5.745722592109814e-05, -0.12056230753660202, -0.6573702692985535, -1.417201042175293, -0.06524743139743805, -0.0007681279676035047, -0.006362657528370619, -0.00025245340657420456, -0.05594528838992119, -0.5344876050949097, -0.2238195687532425, -1.847726889536716e-05, -0.005919544491916895, -2.3841855067985307e-07, 0.0, -3.3378546504536644e-06, -0.025875724852085114, -0.006865601986646652, -0.871583104133606, -0.000179036331246607, -0.9044061899185181, -0.17234162986278534, -2.8540878295898438, -0.5299478769302368, -0.004413388203829527, -0.14673833549022675, -0.01497703231871128, -0.014434090815484524, -0.00040928093949332833, -7.152555099310121e-07, -1.5497195136049413e-06, -3.576278118089249e-07, -2.3841855067985307e-07, -1.6689286894688848e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.5020257706055418e-05, -2.9801878554280847e-05, -0.359788179397583, -0.0922524705529213, -0.3434751033782959, -0.00017498392844572663, -0.21199025213718414, -0.5115907788276672, -0.0018279524520039558, -8.77341881277971e-05, -0.0058794887736439705, -0.29073694348335266, -0.01248979289084673, -0.004027352202683687, -0.0011049362365156412, -0.020143698900938034, -2.7417760065873154e-05, -0.009454713203012943, -0.00014077626110520214, -0.00014673586701974273, -0.0020591262727975845, -1.2397689715726301e-05, -0.0005359405186027288, -0.008437107317149639, -0.0077032409608364105, -0.002744124736636877, -3.0874729418428615e-05, -0.00018308870494365692, -1.1920928244535389e-07, -0.00010275312524754554, -0.000990257947705686, -0.02892884984612465, -0.0002217047003796324, -1.5905489921569824, -0.008985204622149467, -0.0041993772611021996, -0.0005034133209846914, -1.1920928244535389e-07, -1.3351351299206726e-05, -1.1920928244535389e-07, -1.4305104514278355e-06, -5.960462772236497e-07, -0.7902284860610962, -1.0475120544433594, -1.1920922133867862e-06, -1.2278481335670222e-05, -0.045279208570718765, -8.5588610090781e-05, -7.152555099310121e-07, -0.0949583649635315, -0.006298216991126537, -0.14674800634384155, -0.7472634315490723, -0.012488027103245258, -0.0024474686942994595, -0.4957294166088104, -0.003309964668005705, 0.0, -8.749579137656838e-05, -0.0001225396408699453, -4.935142715112306e-05, -5.006777428206988e-06, -0.023810284212231636, -0.008708357810974121, -0.00823991745710373, -7.724463648628443e-05, -0.01683621294796467, -0.0017863045213744044, -2.36090350151062, -0.006054987199604511, -1.8074308633804321, -5.006777428206988e-06, -1.679084300994873, -0.18040047585964203, -0.010228477418422699, -0.04373344033956528, -0.6429672837257385, -1.032958984375, -0.0017535799415782094, -0.04159790650010109, -0.0020698329899460077, -0.147266685962677, -3.576278118089249e-07, -4.0531076592742465e-06, -7.70062324590981e-05, 0.0, -3.2186455882765586e-06, 0.0, -3.933898824470816e-06, -0.5086271166801453, -0.00010346830822527409, -0.010666736401617527, -0.005814661271870136, -0.44283586740493774, -7.652943895664066e-05, -0.8789905905723572, -0.017011204734444618, -0.0028117666952311993, -0.08400017023086548, -2.895272970199585, -0.0031054625287652016, -0.7290129065513611, -4.31528314948082e-05, -0.7733721137046814, -6.305972783593461e-05, -0.0013817534781992435, -0.0008752091089263558, -5.3881147323409095e-05, -7.152555099310121e-07, -0.004512484651058912, -1.3442466259002686, -0.0019230222096666694, -0.0004085659747943282, -0.0025197681970894337, -0.0002613918040879071, -0.5830844640731812, -0.028747590258717537, -0.2595515251159668, -0.0002802217786666006, -0.018280362710356712, -0.6753609776496887, -0.0001591317413840443, -2.8634824752807617, -0.03509613871574402, -2.782651424407959, -0.892886757850647, -0.7931339144706726, -5.507317473529838e-05, -0.0481659471988678, -0.2933029234409332, -0.047799624502658844, -1.8147618770599365, -0.6103718876838684, -0.01317368634045124, -5.960462772236497e-07, -3.576278118089249e-07, -0.005131526384502649, -0.046381350606679916, -0.13144057989120483, -0.08320620656013489, -9.083335316972807e-05, -0.000542612629942596, -0.30461764335632324, -0.0006423317245207727, -0.0048852842301130295, -5.483612312673358e-06, 0.0, -0.00028939827461726964, -4.23184028477408e-05, -0.054174527525901794, -2.8321685791015625, -0.03577038645744324, -5.364403477869928e-06, -5.960462772236497e-07, -0.6362313032150269], "finish_reason": "length"}], "metrics": {"energy": 965.9003730773915, "energy_per_token": 3.7730483323335604, "time": 25.911098, "time_per_token": 0.1012152265625}}
{"outputs": [{"text": "if 'Title' not in df.columns or 'Content' not in df.columns:\n        return plt.gca()\n\n    # Define regular expressions to match articles with titles containing \"how\" or \"what\"\n    how_regex = re.compile(r'^\\s*(?:How|WHY|WHAT)\\s', re.IGNORECASE)\n    what_regex = re.compile(r'^\\s*WHAT\\s', re.IGNORECASE)\n\n    # Use regular expressions to identify articles with titles containing \"how\" or \"what\"\n    df['How'] = df['Title'].str.contains(how_regex, regex=True)\n    df['What'] = df['Title'].str.contains(what_regex, regex=True)\n\n    # Create a sub-DataFrame with articles having titles containing \"how\" or \"what\"\n    df_how_or_what = df[(df['How'] == True) | (df['What'] == True)]\n\n    # If there are no articles with titles containing \"how\" or \"what\", return an empty plot\n    if df_", "tokens": ["if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "#", " Define", " regular", " expressions", " to", " match", " articles", " with", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "how", "_", "regex", " =", " re", ".", "compile", "(", "r", "'^", "\\", "s", "*(", "?", ":", "How", "|", "WH", "Y", "|", "WH", "AT", ")\\", "s", "'", ",", " re", ".", "IGN", "ORE", "C", "ASE", ")", "\n", "    ", "what", "_", "regex", " =", " re", ".", "compile", "(", "r", "'^", "\\", "s", "*", "WH", "AT", "\\", "s", "'", ",", " re", ".", "IGN", "ORE", "C", "ASE", ")", "\n", "\n", "    ", "#", " Use", " regular", " expressions", " to", " identify", " articles", " with", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "df", "['", "How", "']", " =", " df", "['", "Title", "']", ".", "str", ".", "contains", "(", "how", "_", "regex", ",", " regex", "=", "True", ")", "\n", "    ", "df", "['", "What", "']", " =", " df", "['", "Title", "']", ".", "str", ".", "contains", "(", "what", "_", "regex", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Create", " a", " sub", "-", "DataFrame", " with", " articles", " having", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "df", "_", "how", "_", "or", "_", "what", " =", " df", "[(", "df", "['", "How", "']", " ==", " True", ")", " |", " (", "df", "['", "What", "']", " ==", " True", ")]", "\n", "\n", "    ", "#", " If", " there", " are", " no", " articles", " with", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", "\"", ",", " return", " an", " empty", " plot", "\n", "    ", "if", " df", "_"], "logprobs": [-1.1495336294174194, -0.2776464819908142, -0.010533686727285385, -0.00011562632425921038, -0.27052363753318787, -5.769562994828448e-05, -0.0025295186787843704, -0.09683264791965485, -0.0007246490567922592, -0.03447234258055687, -0.0026931229513138533, -0.0003475538978818804, -3.0397906812140718e-05, -0.00011646069469861686, -2.7179348762729205e-05, -3.516612196108326e-05, -2.884823152271565e-05, -4.172316494077677e-06, -0.005251304246485233, -0.008453774265944958, -0.007163672707974911, -1.151468276977539, -0.40798670053482056, -0.028775041922926903, -1.36014986038208, -0.003518464043736458, -0.00027736154152080417, -0.10375498980283737, -0.25313329696655273, -0.0008911690674722195, -1.1691526174545288, -4.023409843444824, -1.755024790763855, -1.4296646118164062, -0.4803568422794342, -0.5571817755699158, -0.3810233771800995, -0.2298649102449417, -0.42345884442329407, -1.0828335285186768, -0.17412564158439636, -0.07048119604587555, -0.0015655416063964367, -0.040584806352853775, -0.0003002431185450405, -0.0021002870053052902, -0.018806247040629387, -0.0928688496351242, -0.002878453116863966, -0.6364784836769104, -0.0471709668636322, -0.8372388482093811, -0.02272387407720089, -0.14893808960914612, -3.0517112463712692e-05, -0.0001209901092806831, -0.09439512342214584, -0.04595676064491272, -0.7777439951896667, -1.2229126691818237, -0.2444557547569275, -0.7200545072555542, -2.1786065101623535, -0.19794106483459473, -1.2294243574142456, -0.052949920296669006, -0.7990520596504211, -1.2026808261871338, -0.5968435406684875, -2.3402695655822754, -1.5047751665115356, -0.7693515419960022, -0.018048694357275963, -2.569953203201294, -0.0002460177056491375, -0.03803395479917526, -1.1444026313256472e-05, -0.0049562216736376286, -1.1920928244535389e-07, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.0018530593952164054, -0.01963277906179428, -0.027524825185537338, -0.15625843405723572, -0.00016830935783218592, -0.002785851713269949, -0.00021371940965764225, -0.0004146431456319988, -3.099436753473128e-06, -1.2636104656849056e-05, -0.000747877755202353, -0.0022162655368447304, -0.011569548398256302, -0.007386516313999891, -4.708655978902243e-05, -1.9790172576904297, -2.2917680740356445, -0.07997968792915344, -0.0859898179769516, -0.003290835302323103, -0.07839035242795944, -4.6967357775429264e-05, -0.0005876483046449721, -3.3378546504536644e-06, -3.909988299710676e-05, -2.455681169521995e-05, 0.0, -3.576278118089249e-07, -9.858122211880982e-05, -0.003258278826251626, -0.13101539015769958, -0.0003302744007669389, -0.06304357945919037, -3.861478328704834, -0.5418481230735779, -0.04123729094862938, -0.006337663624435663, -1.959977149963379, -0.1431170552968979, -0.13938462734222412, -0.05236612632870674, -0.26205238699913025, -0.005930091254413128, -0.0016916978638619184, -0.00031454383861273527, -0.010911441408097744, -0.0001255195093108341, -0.0008212531101889908, -0.004653813783079386, -0.03086436353623867, -0.0005351065192371607, -0.7757968902587891, -0.3329678177833557, -2.4033401012420654, -0.9133340716362, -0.0014418693026527762, -0.011463252827525139, -0.07088739424943924, -0.0011793570592999458, -3.6000557884108275e-05, -7.903263758635148e-05, -1.5494110584259033, -0.00032240914879366755, -0.6998259425163269, -0.0025632879696786404, -0.003153591649606824, -7.748573807475623e-06, -5.960462772236497e-07, -1.1622846126556396, -1.1647025346755981, -0.0024194037541747093, -0.0007887351675890386, -0.17498153448104858, -0.08903630077838898, -0.001192097319290042, -0.0008646087371744215, -0.0005150898941792548, -0.001832593115977943, -0.0007911174325272441, -2.3603161025675945e-05, -0.007831701077520847, -7.617183291586116e-05, -0.00011729506513802335, -2.4199192921514623e-05, -1.9073468138230965e-06, -0.0017417988274246454, -3.814689989667386e-06, -0.001969780307263136, -0.00040570611599832773, -0.0006025406182743609, -7.152531907195225e-06, -1.7881377516459906e-06, -0.00056429672986269, -0.00013004888023715466, -3.7431014789035544e-05, -0.00018308870494365692, -0.0016137446509674191, -0.012511455453932285, -0.26099613308906555, -0.00013505500101018697, -0.07823128998279572, -1.9974826574325562, -0.11837901175022125, -4.33925199508667, -0.224381223320961, -0.147279754281044, -1.7275347709655762, -0.8390512466430664, -1.7795488834381104, -0.5094703435897827, -0.07562050968408585, -0.02502969093620777, -0.00463933777064085, -0.0003890234511345625, -0.013209685683250427, -0.00033182359766215086, -0.000858415151014924, -0.003436732804402709, -0.033556435257196426, -9.119095193454996e-05, -1.0545002222061157, -0.07729227095842361, -0.8174667954444885, -0.2007710486650467, -1.3263185024261475, -0.00033146608620882034, -0.004913873504847288, -0.017979733645915985, -0.0008973624208010733, -0.3190837502479553, -0.001100054127164185, -0.014439025893807411, -0.0019006537040695548, -0.005893117282539606, -0.7453575730323792, -0.006892358418554068, -0.005470662377774715, -0.0010709986090660095, -0.0013624681159853935, -0.0003225283289793879, -7.545663538621739e-05, -0.00014983485743869096, -0.0002681849291548133, -0.0004520586517173797, -0.00012814177898690104, -0.007934716530144215, -0.07238002866506577, -0.10127710551023483, -0.00018654513405635953, -0.3929215371608734, -1.0919462442398071, -0.6902117729187012, -0.015202016569674015, -0.03638877347111702, -0.08954054862260818, -0.17662937939167023, -0.056998129934072495, -0.04553131014108658, -0.005754096899181604, -0.0008311392739415169, -0.0001652104256208986, -0.0028373245149850845, -0.0001397035230183974, -0.00039295581518672407, -0.12722252309322357, -0.09137202054262161, -0.0557938888669014, -0.07774964720010757, -0.001292227883823216, -0.03062772937119007, -0.007965466007590294, -0.000176652567461133, -0.0014753182185813785, -0.25081443786621094, -0.0007875440060161054], "finish_reason": "length"}], "metrics": {"energy": 1023.790094455719, "energy_per_token": 3.9991800564676523, "time": 26.183613, "time_per_token": 0.10227973828125}}
{"outputs": [{"text": "import warnings\n    warnings.filterwarnings(\"ignore\")\n\n    # Check if the required columns exist\n    required_columns = ['Title', 'Content']\n    if not all(col in df.columns for col in required_columns):\n        return plt.gca()\n\n    # Create a new DataFrame with articles that have titles containing \"how\" or \"what\"\n    df = df[(df['Title'].str.contains('How', case=False)) | (df['Title'].str.contains('What', case=False))]\n\n    # If there are no articles with \"how\" or \"what\" in titles, return an empty plot\n    if df.empty:\n        return plt.gca()\n\n    # Create a new DataFrame with the content of the selected articles\n    articles = df['Content']\n\n    # Convert the content to a list\n    article_list = articles.tolist()\n\n    # Create a TF-IDF vectorizer to calculate the TF-IDF scores\n    vectorizer = TfidfVectorizer(stop_words='english')\n    tfidf =", "tokens": ["import", " warnings", "\n", "    ", "w", "arnings", ".", "filter", "w", "arnings", "(", "\"", "ignore", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " required", " columns", " exist", "\n", "    ", "required", "_", "columns", " =", " ['", "Title", "'", ",", " '", "Content", "']", "\n", "    ", "if", " not", " all", "(", "col", " in", " df", ".", "columns", " for", " col", " in", " required", "_", "columns", "):", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "#", " Create", " a", " new", " Data", "Frame", " with", " articles", " that", " have", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "df", " =", " df", "[(", "df", "['", "Title", "']", ".", "str", ".", "contains", "('", "How", "'", ",", " case", "=", "False", "))", " |", " (", "df", "['", "Title", "']", ".", "str", ".", "contains", "('", "What", "'", ",", " case", "=", "False", "))", "]", "\n", "\n", "    ", "#", " If", " there", " are", " no", " articles", " with", " \"", "how", "\"", " or", " \"", "what", "\"", " in", " titles", ",", " return", " an", " empty", " plot", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "#", " Create", " a", " new", " Data", "Frame", " with", " the", " content", " of", " the", " selected", " articles", "\n", "    ", "articles", " =", " df", "['", "Content", "']", "\n", "\n", "    ", "#", " Convert", " the", " content", " to", " a", " list", "\n", "    ", "article", "_", "list", " =", " articles", ".", "tol", "ist", "()", "\n", "\n", "    ", "#", " Create", " a", " TF", "-", "ID", "F", " vector", "izer", " to", " calculate", " the", " TF", "-", "ID", "F", " scores", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "tf", "id", "f", " ="], "logprobs": [-2.852440357208252, -3.3049404621124268, -0.012032661586999893, -0.2579272389411926, -0.17525850236415863, -3.182837463100441e-05, -9.369411418447271e-05, -0.08344859629869461, -9.536738616588991e-07, 0.0, -0.3495730459690094, -0.03236239403486252, -0.0040984689258039, -1.8715683836489916e-05, -0.5328704118728638, -0.04322461411356926, -0.5477821826934814, -0.0034514637663960457, -1.0951164960861206, -0.7940136790275574, -0.18520963191986084, -0.46696650981903076, -2.784139394760132, -0.021010451018810272, -0.5392018556594849, -1.9359416961669922, -0.0015482831513509154, -2.966771364212036, -0.0027232011780142784, -0.33489853143692017, -0.0011784045491367579, -0.1495145559310913, -0.007734352257102728, -0.006635536439716816, -7.450303382938728e-05, -0.0025496138259768486, -0.0002901133266277611, -0.0003570872650016099, -0.0007292948430404067, -0.019978953525424004, -0.13336098194122314, -0.09073566645383835, -0.0740818977355957, -0.1134171336889267, -0.4678882658481598, -0.0020286710932850838, -0.015660284087061882, -0.07612957805395126, -3.671578815556131e-05, -0.0033704398665577173, -5.006777428206988e-06, -1.2993727978027891e-05, -0.00012790338951162994, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000458254711702466, -0.0007491880678571761, -0.002633201191201806, -1.1683332920074463, -0.29734256863594055, -0.01860407181084156, -0.7253745198249817, -0.003956349100917578, -9.023735765367746e-05, -0.3333967626094818, -0.00947573222219944, -0.00068926892708987, -0.10181958228349686, -2.3165459632873535, -0.07973624020814896, -1.1357933282852173, -0.47368356585502625, -0.0017635759431868792, -0.2292022556066513, -0.9542650580406189, -0.7069557309150696, -0.3755795359611511, -0.5403352975845337, -0.3914804458618164, -0.25841060280799866, -0.03199635073542595, -0.0005656072753481567, -0.007777645718306303, -0.0003407612966839224, -0.0003694805200211704, -0.006431002635508776, -0.03745424747467041, -0.0006485265912488103, -1.490851640701294, -1.5519707202911377, -0.006266468670219183, -2.020456314086914, -0.02961849234998226, -0.07899605482816696, -0.00045622908510267735, -9.16677454370074e-05, -0.0001842805795604363, -0.01695834845304489, -1.537788011773955e-05, -0.5281912684440613, -0.20435315370559692, -1.8738067150115967, -0.2880755066871643, -0.0007879013428464532, -0.04598579183220863, -0.004288049414753914, -0.0008779485360719264, -0.5378262996673584, -0.01582198776304722, -0.06845586001873016, -0.007957897149026394, -0.00010823617776622996, -3.1470757676288486e-05, -3.290122185717337e-05, -1.5497195136049413e-06, -0.00010561384988250211, -1.1444026313256472e-05, -0.00027807659353129566, -0.001857937895692885, -0.0020443748217076063, -0.0001525762490928173, -9.179073458653875e-06, -0.00018690270371735096, -2.9444261599564925e-05, -6.615896563744172e-05, -0.000390215078368783, -0.012562193907797337, -0.0972059965133667, -0.08038050681352615, -0.0004524161049630493, -0.06473223119974136, -1.4108246564865112, -0.8098474144935608, -0.00572458328679204, -0.008027906529605389, -0.26273903250694275, -0.18370653688907623, -1.7426800727844238, -0.01468762569129467, -0.0008996253600344062, -0.035992581397295, -0.00015615197480656207, -0.00038985759601928294, -0.0079887630417943, -0.23331710696220398, -2.508904218673706, -0.08867024630308151, -0.07217420637607574, -0.07881053537130356, -0.0020793499425053596, -0.025202907621860504, -0.005788824055343866, -0.00015948931104503572, -0.0007216709782369435, -0.04128441959619522, -0.0005206898204050958, -0.07656429708003998, -0.008113048039376736, -0.00016068121476564556, -0.0011963837314397097, -0.012101327069103718, -0.0018454440869390965, -4.494089080253616e-05, -0.002081967191770673, -4.768370445162873e-07, -3.194758028257638e-05, -0.00029118589009158313, -0.005022409372031689, -0.0005595310358330607, -0.056371062994003296, -1.9894911050796509, -0.15621080994606018, -2.8453140258789062, -0.25781625509262085, -0.00029559535323642194, -0.21870073676109314, -0.9690412282943726, -0.6769281625747681, -0.19598957896232605, -0.5073181986808777, -2.4229612350463867, -0.0035154942888766527, -0.12023742496967316, -0.00033468366018496454, -3.1703672409057617, -0.4163387715816498, -0.31874775886535645, -0.42563095688819885, -0.0022671727929264307, -0.003022152464836836, -0.26522427797317505, -0.1272049993276596, -0.0004555141495075077, -0.020949164405465126, -2.5669713020324707, -0.25213733315467834, -0.8150272965431213, -0.4005909264087677, -0.26676398515701294, -0.1940566748380661, -1.049570083618164, -0.00013410145766101778, -1.9405550956726074, -0.0093148872256279, -0.18727685511112213, -0.0008532935753464699, -0.0929320752620697, -0.0005752577562816441, -0.28791534900665283, 0.0, -0.00035232058144174516, -0.00027700403006747365, -0.014701956883072853, -0.00026651646476238966, -0.013528806157410145, -0.9780460000038147, -0.16534112393856049, -0.5384002327919006, -0.013907195068895817, -3.8980677345534787e-05, -0.0003480305604171008, -0.06604595482349396, -0.001412704586982727, -2.9721198081970215, -0.24170327186584473, -0.23420192301273346, -0.18811959028244019, -0.0011845960980281234, -2.1576648578047752e-05, -0.00042965717148035765, -0.020828217267990112, -0.17986923456192017, -0.00035744477645494044, -0.5585846900939941, -0.0011024356354027987, -0.0003570872650016099, -0.00030155404238030314, 0.0, -0.0017763087525963783, 0.0, -1.1920922133867862e-06, -1.1920928244535389e-07, -1.0905925035476685, -1.0066865682601929, -8.344646857949556e-07, -8.106198947643861e-06, -0.02919471450150013, -5.030505417380482e-05, -5.960462772236497e-07, -0.1119762435555458, -0.016943931579589844, -0.2317993938922882, -0.18478162586688995, -0.0029273061081767082, -0.000426439888542518, -0.5357677936553955], "finish_reason": "length"}], "metrics": {"energy": 1049.2466458292008, "energy_per_token": 4.098619710270316, "time": 30.326231, "time_per_token": 0.11846183984375}}
{"outputs": [{"text": "# Check if DataFrame has 'Title' and 'Content' columns\n    if 'Title' not in df or 'Content' not in df:\n        plt.plot()\n        return\n\n    # Filter articles with titles containing \"how\" or \"what\"\n    filtered_df = df[df['Title'].str.contains(r'\\bhow\\b|\\bwhat\\b', case=False, regex=True)]\n\n    # If no articles match, return empty plot\n    if filtered_df.empty:\n        plt.plot()\n        return\n\n    # Get the content of matching articles and create a list of sentences\n    content_list = filtered_df['Content'].tolist()\n    sentence_list = [sentence.strip().rstrip('.') for sentence in content_list]  # strip and remove period from end of sentence\n\n    # Calculate TF-IDF scores for the sentences\n    vectorizer = TfidfVectorizer()\n    tfidf = vectorizer.fit_transform(sentence_list)\n\n    # Extract the feature names from the vectorizer\n    feature_names = vectorizer.get_", "tokens": ["#", " Check", " if", " Data", "Frame", " has", " '", "Title", "'", " and", " '", "Content", "'", " columns", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", " or", " '", "Content", "'", " not", " in", " df", ":", "\n", "        ", "plt", ".", "plot", "()", "\n", "        ", "return", "\n", "\n", "    ", "#", " Filter", " articles", " with", " titles", " containing", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "filtered", "_", "df", " =", " df", "[", "df", "['", "Title", "']", ".", "str", ".", "contains", "(", "r", "'\\", "b", "how", "\\", "b", "|\\", "b", "what", "\\", "b", "'", ",", " case", "=", "False", ",", " regex", "=", "True", ")]", "\n", "\n", "    ", "#", " If", " no", " articles", " match", ",", " return", " empty", " plot", "\n", "    ", "if", " filtered", "_", "df", ".", "empty", ":", "\n", "        ", "plt", ".", "plot", "()", "\n", "        ", "return", "\n", "\n", "    ", "#", " Get", " the", " content", " of", " matching", " articles", " and", " create", " a", " list", " of", " sentences", "\n", "    ", "content", "_", "list", " =", " filtered", "_", "df", "['", "Content", "']", ".", "tol", "ist", "()", "\n", "    ", "sentence", "_", "list", " =", " [", "sentence", ".", "strip", "()", ".", "r", "strip", "('", ".", "')", " for", " sentence", " in", " content", "_", "list", "]", "  ", "#", " strip", " and", " remove", " period", " from", " end", " of", " sentence", "\n", "\n", "    ", "#", " Calculate", " TF", "-", "ID", "F", " scores", " for", " the", " sentences", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "sentence", "_", "list", ")", "\n", "\n", "    ", "#", " Ext", "ract", " the", " feature", " names", " from", " the", " vector", "izer", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_"], "logprobs": [-1.0111974477767944, -0.6307379007339478, -0.18224549293518066, -2.4204912185668945, -0.005947392899543047, -0.7338829636573792, -0.5166561603546143, -0.00971116591244936, -0.0011504229623824358, -0.009765943512320518, -0.0005109196645207703, -0.000847933697514236, -0.0008406681008636951, -0.016186608001589775, -0.10802537947893143, -0.0017886845162138343, -0.06922724097967148, -0.12087282538414001, -0.002209723461419344, -7.974783511599526e-05, -0.06874147057533264, -1.1444026313256472e-05, -0.0038551785983145237, -2.60844087600708, -0.0012448427733033895, -0.0002802217786666006, -8.594620157964528e-05, -0.0001262346631847322, -0.00015269544383045286, -2.729855441430118e-05, -0.002376353135332465, -0.0015575670404359698, -0.003411546815186739, -1.1688235998153687, -0.0004124982515349984, -2.7751669883728027, -0.0050171902403235435, -0.14696991443634033, -0.011472916230559349, -0.08982042223215103, -1.3175990581512451, -0.05204830318689346, -0.0006406639004126191, -0.03408794477581978, -1.7152607440948486, -0.5179314017295837, -0.4194214940071106, -0.3419577181339264, -0.45650237798690796, -0.17900975048542023, -0.02550916001200676, -0.0005827635759487748, -0.006973452400416136, -0.0001565095444675535, -0.0003389737685211003, -0.0041136653162539005, -0.03865908831357956, -0.0005449955351650715, -1.5578083992004395, -0.029182441532611847, -1.142842173576355, -0.00036530973738990724, -0.004164950922131538, -0.3451857268810272, -0.040287259966135025, -0.03371965512633324, -0.00024101213784888387, -0.00011419598013162613, -0.0004605186404660344, -0.04230412468314171, -2.3603161025675945e-05, -0.16041836142539978, -0.6755126118659973, -0.02729041688144207, -0.22023481130599976, -0.0006887924391776323, -0.8666034936904907, -0.03384273871779442, -0.00010263393050990999, -0.005999650806188583, -7.819823804311454e-05, -0.00025769727653823793, -0.00019691436318680644, -3.099436753473128e-06, -0.1355651468038559, -8.737658936297521e-05, -0.12688520550727844, -0.002169756917282939, -0.0033307571429759264, -1.3635215759277344, -0.010341392830014229, -0.0002146728802472353, -0.0003685271949507296, -0.02028505690395832, -0.022895043715834618, -0.12314312905073166, -0.00023326536756940186, -0.05322496220469475, -1.3678927421569824, -0.22269970178604126, -0.0633983165025711, -1.6596823930740356, -1.390679121017456, -0.09862414002418518, -0.755645215511322, -0.007250070571899414, -0.003927020356059074, -4.446407547220588e-05, -0.0003084660565946251, -0.022023510187864304, -2.3841855067985307e-07, -5.960462772236497e-07, -0.0002708068350329995, -0.018472891300916672, -0.0025018127635121346, -0.00013565097469836473, -0.0002299282787134871, -0.008417957462370396, -5.125986263010418e-06, -0.00836688932031393, -6.544376083184034e-05, -0.00032550760079175234, -0.001481984043493867, -0.0006179092451930046, -0.0010369406081736088, -0.003577738767489791, -0.00042882305569946766, -0.028597114607691765, -1.8445817232131958, -1.0114943981170654, -0.35320961475372314, -0.14852489531040192, -2.5169053077697754, -0.0016702761640772223, -2.066033124923706, -2.363297939300537, -0.36782997846603394, -0.6982265114784241, -0.00975992251187563, -1.8378665447235107, -0.09046998620033264, -0.0002848696312867105, -0.8675646185874939, -1.295474886894226, -0.38217344880104065, -0.0007238152320496738, -0.23614874482154846, -7.152555099310121e-07, -5.960462772236497e-07, -0.015229607932269573, -0.00025662468397058547, -0.00012981049076188356, -0.00836440734565258, -0.1958625763654709, 0.0, -0.0005600076401606202, -0.0017270424868911505, -0.2157163769006729, -2.0056073665618896, -0.004146194085478783, -0.008769216015934944, -0.0005882440018467605, -0.580434262752533, -0.5617822408676147, -1.3736114501953125, -0.2487766444683075, -0.0798870250582695, -2.3587217330932617, -2.473555088043213, -0.0011294659925624728, -0.17719778418540955, -0.020830553025007248, -0.0016797969583421946, -0.11457705497741699, -1.1339969635009766, -0.0009766814764589071, -0.3066163957118988, -0.00015090756642166525, -2.264974000354414e-06, -1.6555589437484741, -2.92681622505188, -0.00011300401820335537, -3.074464797973633, -2.0533998012542725, -0.011605723761022091, -1.8427380323410034, -0.8577975034713745, -0.6239079236984253, -0.38932496309280396, -0.23480340838432312, -0.013886150903999805, -0.04306602478027344, -0.0004944770480506122, -0.012002273462712765, -1.9007861614227295, -0.14403818547725677, -0.013854525052011013, -1.3112935448589269e-05, -6.794698856538162e-05, -0.06975669413805008, -0.8031526207923889, -1.6666290760040283, -0.9685264229774475, -0.23977728188037872, -0.0009373800130560994, -0.33890971541404724, -0.0009438112610951066, -0.0005743046058341861, -0.00016699827392585576, 0.0, -0.0003669780562631786, -1.1920928244535389e-07, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.32726162672042847, -0.016521664336323738, -0.0022178117651492357, -0.18689531087875366, -0.02706894837319851, -0.0004042761866003275, -1.0864663124084473, -0.0006370898918248713, 0.0, -5.2927523938706145e-05, -0.00013505500101018697, -0.0001284993631998077, -1.311301275563892e-06, -0.005788468290120363, -0.004585109651088715, -2.7418097943154862e-06, -3.576278118089249e-07, -0.00012683063687290996, -0.03916003927588463, -0.4283343255519867, -0.00021217002358753234, -0.027873031795024872, -1.1522433757781982, -0.0017749997787177563, -0.9190180897712708, -0.3889472186565399, -0.03710212558507919, -1.7678887844085693, -0.013556678779423237, -0.07602684199810028, -0.00014828535495325923, -0.12193749845027924, -8.654219709569588e-05, -0.03486660495400429, -0.00013457823661156, -0.0032215621322393417, -0.0005017452058382332, -0.037099942564964294, 0.0, -6.198863957251888e-06, -6.305972783593461e-05, 0.0], "finish_reason": "length"}], "metrics": {"energy": 958.3320104694366, "energy_per_token": 3.7434844158962366, "time": 26.10498, "time_per_token": 0.101972578125}}
{"outputs": [{"text": "# Check if the required columns exist in the DataFrame\n    if 'Title' not in df.columns or 'Content' not in df.columns:\n        plt.figure()\n        return plt.gca()\n\n    # Initialize an empty list to store articles that have \"how\" or \"what\" in their title\n    articles = []\n\n    # Iterate over the rows of the DataFrame\n    for index, row in df.iterrows():\n        # Extract the title and content from the row\n        title = row['Title']\n        content = row['Content']\n\n        # Check if the title contains \"how\" or \"what\"\n        if re.search(r'\\bhow\\b|\\bwhat\\b', title, re.IGNORECASE) is not None:\n            articles.append(row)\n\n    # Check if any articles have titles with \"how\" or \"what\"\n    if not articles:\n        plt.figure()\n        return plt.gca()\n\n    # Initialize an empty list to store the words in the content of the articles\n    words = []\n\n    # Iterate over the articles\n    ", "tokens": ["#", " Check", " if", " the", " required", " columns", " exist", " in", " the", " Data", "Frame", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "plt", ".", "figure", "()", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "#", " Initialize", " an", " empty", " list", " to", " store", " articles", " that", " have", " \"", "how", "\"", " or", " \"", "what", "\"", " in", " their", " title", "\n", "    ", "articles", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " rows", " of", " the", " Data", "Frame", "\n", "    ", "for", " index", ",", " row", " in", " df", ".", "iter", "rows", "():", "\n", "        ", "#", " Ext", "ract", " the", " title", " and", " content", " from", " the", " row", "\n", "        ", "title", " =", " row", "['", "Title", "']", "\n", "        ", "content", " =", " row", "['", "Content", "']", "\n", "\n", "        ", "#", " Check", " if", " the", " title", " contains", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "        ", "if", " re", ".", "search", "(", "r", "'\\", "b", "how", "\\", "b", "|\\", "b", "what", "\\", "b", "'", ",", " title", ",", " re", ".", "IGN", "ORE", "C", "ASE", ")", " is", " not", " None", ":", "\n", "            ", "articles", ".", "append", "(", "row", ")", "\n", "\n", "    ", "#", " Check", " if", " any", " articles", " have", " titles", " with", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "if", " not", " articles", ":", "\n", "        ", "plt", ".", "figure", "()", "\n", "        ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "#", " Initialize", " an", " empty", " list", " to", " store", " the", " words", " in", " the", " content", " of", " the", " articles", "\n", "    ", "words", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " articles", "\n", "    "], "logprobs": [-1.0111974477767944, -0.6307379007339478, -0.18224549293518066, -0.4321698248386383, -2.7871599197387695, -0.024238094687461853, -0.7120994329452515, -0.17616289854049683, -0.0029561889823526144, -0.03891744837164879, -0.0019392033573240042, -0.04356500133872032, -0.0015575670404359698, -0.06770370900630951, -0.1811695694923401, -0.004073418211191893, -5.376194530981593e-05, -0.08219543844461441, -4.768360213347478e-06, -0.001608269871212542, -0.044853582978248596, -0.00016151554882526398, -0.00857729185372591, -0.0009352362249046564, -0.00015722469834145159, -1.1444026313256472e-05, -3.0040289857424796e-05, -7.748573807475623e-06, -1.2397689715726301e-05, -2.169585604860913e-05, -2.3841830625315197e-06, -0.001606484642252326, -0.0007108307327143848, -0.0035277295392006636, -1.2953009605407715, -0.00024005869636312127, -1.3792234659194946, -0.16622546315193176, -0.19605788588523865, -0.004438074305653572, -0.09878020733594894, -0.29011332988739014, -0.056437429040670395, -0.029503103345632553, -0.000129691296024248, -8.070142939686775e-05, -0.11470206081867218, -0.03733837977051735, -0.0006808108882978559, -0.04826625436544418, -4.143925666809082, -1.00716233253479, -0.006037213373929262, -0.5938807725906372, -0.07944615185260773, -0.11896097660064697, -1.7559794187545776, -1.290850281715393, -1.0092570781707764, -1.6093083620071411, -0.04754968732595444, -0.002193665597587824, -0.04081406071782112, -0.0002814135223161429, -0.0003995097358711064, -0.0008247073274105787, -0.01944725587964058, -0.9393395185470581, -0.7070013284683228, -0.019880209118127823, -0.0003407612966839224, -0.31492534279823303, -0.3955855965614319, -0.011662871576845646, -0.0012137673329561949, -0.2245030403137207, -0.00032419670606032014, -0.019324839115142822, -0.5840712785720825, -0.0005552418879233301, -0.23923359811306, -0.6736259460449219, -0.5365987420082092, -0.8220889568328857, -0.004518062341958284, -0.015492918901145458, -0.0006375664379447699, -0.3021135926246643, -0.00013422065239865333, -0.0038505473639816046, -0.8226867318153381, -0.004826442804187536, -0.009084558114409447, -0.00014137222024146467, -0.0006730675231665373, -0.0005222387262620032, -5.4596363042946905e-05, -1.5020257706055418e-05, -4.0531076592742465e-06, -0.0003666205739136785, -0.03607951104640961, -0.20557159185409546, -2.1847105026245117, -0.001280560391023755, -0.03751636669039726, -0.3456491231918335, -0.12240560352802277, -0.026730559766292572, -0.31305980682373047, -0.18711234629154205, -0.6988418102264404, -0.006794918328523636, -0.00022587609419133514, -0.02876322716474533, -0.09674174338579178, -0.03689396381378174, -0.029155580326914787, -9.905801562126726e-05, -2.038458114839159e-05, -0.1235300749540329, -0.0025357017293572426, -0.03825736790895462, -0.00039176418795250356, -0.0018493706593289971, -0.0003510097449179739, -7.891343557275832e-05, -0.00011288482346571982, -0.00257862638682127, -0.13816925883293152, -0.0008629412623122334, -0.0022357723210006952, -0.18262195587158203, -0.0018272384768351912, -0.5276188850402832, -0.028303859755396843, -0.21566373109817505, -0.2234838604927063, -0.007636283989995718, -0.00015209948469419032, -0.0015812524361535907, -6.651657167822123e-05, -0.00021205084340181202, -0.003923220559954643, -0.484160453081131, -0.00010764019680209458, -0.04553142189979553, -0.1522739976644516, -5.304672595229931e-05, -0.0660073459148407, -0.13612377643585205, -0.009838895872235298, -0.2694595456123352, -0.0011551857460290194, -0.783176064491272, -0.008983432315289974, -9.548207890475169e-05, -0.012950245290994644, -7.784063927829266e-05, -0.00037520044133998454, -0.00016020445036701858, -1.0013530300057027e-05, -0.011293533258140087, -3.683499380713329e-05, -0.0018839959520846605, -0.17194461822509766, -0.06815680116415024, -6.556489552167477e-06, -0.004805207252502441, 0.0, -1.1920928244535389e-07, -4.768370445162873e-07, -2.843928575515747, -0.02554367296397686, -0.0020137999672442675, -1.4305104514278355e-06, -0.001555900671519339, -0.0014062763657420874, -0.002295004203915596, -1.0838868618011475, -0.00013934595335740596, -0.00014149141497910023, -0.3278736472129822, -2.756011962890625, -0.052937258034944534, -0.11183682084083557, -0.01450047641992569, -0.004895605146884918, -0.02286195382475853, -0.99531090259552, -0.00505538284778595, -1.454774022102356, -0.0396563820540905, -1.377781867980957, -1.3964762687683105, -1.5908544063568115, -0.006892003118991852, -0.0008071978809311986, -5.566918844124302e-05, -0.0011561383726075292, -7.068861305015162e-05, -0.00020358874462544918, -0.002274071332067251, -0.036087676882743835, -0.00011920218821614981, -0.002234345069155097, -0.7797136306762695, -0.003682975424453616, -0.0015435221139341593, -0.0012752028414979577, -0.0004621868138201535, -0.10657422244548798, -7.867782187531702e-06, -0.003474273020401597, -0.0004570631426759064, -0.0015642322832718492, -0.0006308949086815119, -0.002819731365889311, -0.0007745603215880692, -1.0967194612021558e-05, -0.00015805903240107, -8.344646857949556e-07, -2.1934269170742482e-05, -0.0023539948742836714, -0.004809122066944838, -0.0006816447712481022, -0.014258881099522114, -2.9871644973754883, -0.9219550490379333, -0.022828513756394386, -0.12017284333705902, -0.014428215101361275, -0.003755423240363598, -0.24903567135334015, -2.775202512741089, -0.6686400175094604, -0.03482700139284134, -0.06702758371829987, -0.2371046096086502, -0.1377454549074173, -0.15987883508205414, -0.17378684878349304, -6.663577369181439e-05, -0.6677297353744507, -0.10846217721700668, -0.004543932154774666, -0.00015710550360381603, -0.05941620469093323, -0.00013100242358632386, -0.007180597633123398, -0.11763753741979599, -0.00011050090688513592, -0.00390635896474123, -0.013859580270946026, -0.13678275048732758, -0.7538147568702698, -2.3841574147809297e-05], "finish_reason": "length"}], "metrics": {"energy": 886.3014688053132, "energy_per_token": 3.4621151125207548, "time": 22.277317, "time_per_token": 0.08702076953125}}
{"outputs": [{"text": "# Check if the DataFrame contains the required columns\n    if 'Title' not in df.columns or 'Content' not in df.columns:\n        return None\n\n    # Filter the DataFrame to articles with \"how\" or \"what\" in the title\n    articles = df.loc[df['Title'].str.contains(r'\\bhow\\b|\\bwhat\\b', case=False, regex=True)]\n\n    # If there are no articles with \"how\" or \"what\" in the title, return an empty plot\n    if articles.empty:\n        return None\n\n    # Get the content of the filtered articles\n    content = articles['Content'].astype(str)\n\n    # Create a TfidfVectorizer object with lower case and token pattern \"[a-z]+\"\n    tfidf = TfidfVectorizer(lowercase=True, token_pattern=\"[a-z]+\")\n\n    # Fit the TfidfVectorizer on the content and get the word counts using transform()\n    word_counts = tfidf.transform(content)\n\n    # Get the feature", "tokens": ["#", " Check", " if", " the", " Data", "Frame", " contains", " the", " required", " columns", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " Filter", " the", " Data", "Frame", " to", " articles", " with", " \"", "how", "\"", " or", " \"", "what", "\"", " in", " the", " title", "\n", "    ", "articles", " =", " df", ".", "loc", "[", "df", "['", "Title", "']", ".", "str", ".", "contains", "(", "r", "'\\", "b", "how", "\\", "b", "|\\", "b", "what", "\\", "b", "'", ",", " case", "=", "False", ",", " regex", "=", "True", ")]", "\n", "\n", "    ", "#", " If", " there", " are", " no", " articles", " with", " \"", "how", "\"", " or", " \"", "what", "\"", " in", " the", " title", ",", " return", " an", " empty", " plot", "\n", "    ", "if", " articles", ".", "empty", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " Get", " the", " content", " of", " the", " filtered", " articles", "\n", "    ", "content", " =", " articles", "['", "Content", "']", ".", "ast", "ype", "(", "str", ")", "\n", "\n", "    ", "#", " Create", " a", " T", "f", "id", "f", "Vector", "izer", " object", " with", " lower", " case", " and", " token", " pattern", " \"", "[", "a", "-", "z", "]+", "\"", "\n", "    ", "tf", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "(", "low", "erc", "ase", "=", "True", ",", " token", "_", "pattern", "=", "\"", "[", "a", "-", "z", "]+", "\"", ")", "\n", "\n", "    ", "#", " Fit", " the", " T", "f", "id", "f", "Vector", "izer", " on", " the", " content", " and", " get", " the", " word", " counts", " using", " transform", "()", "\n", "    ", "word", "_", "counts", " =", " tf", "id", "f", ".", "transform", "(", "content", ")", "\n", "\n", "    ", "#", " Get", " the", " feature"], "logprobs": [-1.0111974477767944, -0.6307379007339478, -0.18224549293518066, -0.4321698248386383, -0.2791605591773987, -0.003108908887952566, -0.6048771739006042, -0.7826364040374756, -0.6749594807624817, -0.038596924394369125, -0.18820412456989288, -0.0017527469899505377, -0.09466517716646194, -0.17158228158950806, -0.005014224909245968, -6.4490144723095e-05, -0.07512224465608597, -6.198863957251888e-06, -0.002050560899078846, -0.056381091475486755, -0.0001731960946926847, -0.01316792145371437, -0.0007169060409069061, -0.00019131260341964662, -1.680836794548668e-05, -2.825220326485578e-05, -1.1920858014491387e-05, -1.9907753085135482e-05, -1.537788011773955e-05, -3.099436753473128e-06, -0.0015506636118516326, -0.0006062338361516595, -0.0036351096350699663, -1.2762287855148315, -2.2072744369506836, -0.0752159059047699, -0.041667889803647995, -0.0008722314960323274, -0.04361738637089729, -1.4233715534210205, -0.9659813642501831, -0.3799624741077423, -0.0007126175914891064, -0.08701632171869278, -2.8699960708618164, -0.19268569350242615, -2.4367451667785645, -0.030484706163406372, -0.0011295850854367018, -0.04601801186800003, -0.00021908267808612436, -0.0005233110277913511, -0.0006960591417737305, -0.006506567820906639, -0.07638926804065704, -0.1260821372270584, -0.015352996066212654, -0.0004583738627843559, -2.996959686279297, -0.15098010003566742, -0.004133135080337524, -2.654641628265381, -0.01864549331367016, -0.0550089068710804, -0.012027950957417488, -0.027309903874993324, -0.0004624251159839332, -9.655486064730212e-05, -0.00040558696491643786, -0.024533940479159355, -2.753696753643453e-05, -0.14222806692123413, -0.7339454889297485, -0.04740849509835243, -0.2650386393070221, -0.0007097586058080196, -1.048828125, -0.07772703468799591, -0.0002047805901383981, -0.004011086188256741, -6.496695277746767e-05, -0.00023576818057335913, -0.00025781645672395825, -4.172316494077677e-06, -0.14674605429172516, -0.00011002412065863609, -0.1135822981595993, -0.003289290703833103, -0.0029585659503936768, -0.9394175410270691, -0.013416602276265621, -0.0003156163729727268, -0.00037079135654494166, -0.058914851397275925, -0.023197459056973457, -0.11363188177347183, -0.0002675890573300421, -0.02271641604602337, -1.2563302516937256, -0.526598334312439, -0.0030567371286451817, -0.005300990305840969, -0.18317784368991852, -0.16574975848197937, -0.05029375106096268, -0.001540784491226077, -7.295342220459133e-05, -0.0026723172049969435, -7.438383181579411e-05, -7.176141662057489e-05, -0.02634642831981182, -0.035000141710042953, -0.005999177228659391, -0.0021564343478530645, -0.02293197624385357, -0.0409647673368454, -0.5631440281867981, -0.0015422129072248936, -0.034873973578214645, -0.0027290266007184982, -0.00015233787416946143, -0.0006615119054913521, -0.031050555408000946, -0.00012170527770649642, -0.0537806898355484, -0.0011938833631575108, -0.00012206286191940308, -0.0008024332928471267, -0.09482598304748535, -0.01561380922794342, -0.0003152588615193963, -0.0034827073104679585, -0.0005376085755415261, -0.016357844695448875, -2.4176926612854004, -0.045144304633140564, -0.17741245031356812, -0.16220439970493317, -0.05372115224599838, -1.9314895868301392, -0.0013572300085797906, -0.291497141122818, -9.989239333663136e-05, -0.43218523263931274, -0.01865040697157383, -0.05222504585981369, -0.021410172805190086, -0.0005698964232578874, -5.411955135059543e-05, -1.3924949169158936, -2.0859322547912598, -0.00025340684805996716, -0.05243513360619545, -0.00138853897806257, -0.0004294188693165779, -0.24352894723415375, -0.02244509384036064, -0.0002840353990904987, -0.007462482899427414, -1.1713430881500244, -0.2045968472957611, -1.8734679222106934, -6.663577369181439e-05, -0.001684914343059063, -0.22242765128612518, -0.0036228755488991737, -9.893881360767409e-05, -1.0186374187469482, -1.840922236442566, -2.4758353233337402, -3.172790765762329, -1.2702783346176147, -2.439067840576172, -0.8203563690185547, -3.799875259399414, -0.753201425075531, -0.3246375322341919, -0.00014101465058047324, -0.00038914260221645236, -1.304875135421753, -0.02006051130592823, -0.090554378926754, -0.00018320789968129247, -0.7100613117218018, -0.01604408398270607, -0.00019500737835187465, -0.3386193513870239, -0.00029023250681348145, -2.3841855067985307e-07, -0.0002112165529979393, -1.1920928244535389e-07, -2.0265558760002023e-06, -7.152555099310121e-07, -0.0003526780928950757, -0.24266768991947174, -0.0005227153305895627, -5.2689116273541003e-05, -0.0031068886164575815, -0.0016408802475780249, -0.0015962490579113364, -0.005235414020717144, -3.576278118089249e-07, -1.0728830375228426e-06, -0.24053503572940826, -1.3673924207687378, -0.0004954302567057312, -0.0002611534437164664, -8.22540732769994e-06, -7.152555099310121e-07, -0.006723637692630291, -0.0011036264477297664, -0.033251140266656876, -0.010114958509802818, -0.027190187945961952, -0.0001392267586197704, -0.0008224442135542631, -0.3760928809642792, -0.701846182346344, -0.16856986284255981, -0.00121412449516356, -0.0005334384622983634, -0.00011014331539627165, -0.0003766304289456457, -5.924526340095326e-05, -1.0274784564971924, -0.0028561060316860676, -0.07536184787750244, -1.1844902038574219, -0.9789797067642212, -0.01599528081715107, -2.2137081623077393, -1.103865623474121, -3.273198366165161, -0.7417799234390259, -1.0411550998687744, -0.06633727252483368, -3.218599158572033e-05, -0.32104963064193726, -0.003125665243715048, -0.093602754175663, -0.0051924847066402435, -0.0008885487914085388, -9.894321920000948e-06, -2.3841855067985307e-07, -5.125986263010418e-06, -2.261532783508301, -0.00029702542815357447, -0.0008214913541451097, -0.0053682224825024605, -0.02338683232665062, -0.013933057896792889, -0.0002783149539027363, -0.0010269373888149858, -0.7150921821594238, -0.029925132170319557, -0.4397546648979187], "finish_reason": "length"}], "metrics": {"energy": 935.8197572879794, "energy_per_token": 3.6555459269061696, "time": 25.887733, "time_per_token": 0.10112395703125}}
{"outputs": [{"text": "if 'Title' not in df.columns or 'Content' not in df.columns:\n        plt.gca()\n        return\n\n    # filter articles by titles including \"how\" or \"what\"\n    df = df[(df['Title'].str.contains('how', case=False)) | (df['Title'].str.contains('what', case=False))]\n    if df.empty:\n        plt.gca()\n        return\n\n    # create TF-IDF vectorizer and fit to content\n    tfidf_vectorizer = TfidfVectorizer(stop_words='english', token_pattern=r'[a-zA-Z\\']+')\n    tfidf_matrix = tfidf_vectorizer.fit_transform(df['Content'].astype(str))\n\n    # get the most important words for each article\n    n_words = 10\n    feature_names = np.array(tfidf_vectorizer.get_feature_names_out())\n    tfidf_scores = np.asarray(tfidf_matrix.todense", "tokens": ["if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "plt", ".", "g", "ca", "()", "\n", "        ", "return", "\n", "\n", "    ", "#", " filter", " articles", " by", " titles", " including", " \"", "how", "\"", " or", " \"", "what", "\"", "\n", "    ", "df", " =", " df", "[(", "df", "['", "Title", "']", ".", "str", ".", "contains", "('", "how", "'", ",", " case", "=", "False", "))", " |", " (", "df", "['", "Title", "']", ".", "str", ".", "contains", "('", "what", "'", ",", " case", "=", "False", "))", "]", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "plt", ".", "g", "ca", "()", "\n", "        ", "return", "\n", "\n", "    ", "#", " create", " TF", "-", "ID", "F", " vector", "izer", " and", " fit", " to", " content", "\n", "    ", "tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "'", ",", " token", "_", "pattern", "=", "r", "'", "[", "a", "-", "z", "A", "-", "Z", "\\", "']", "+", "')", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " tf", "id", "f", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "df", "['", "Content", "']", ".", "ast", "ype", "(", "str", "))", "\n", "\n", "    ", "#", " get", " the", " most", " important", " words", " for", " each", " article", "\n", "    ", "n", "_", "words", " =", " ", "1", "0", "\n", "    ", "feature", "_", "names", " =", " np", ".", "array", "(", "tf", "id", "f", "_", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "    ", "tf", "id", "f", "_", "scores", " =", " np", ".", "as", "array", "(", "tf", "id", "f", "_", "matrix", ".", "t", "od", "ense"], "logprobs": [-1.1495336294174194, -0.2776464819908142, -0.010533686727285385, -0.00011562632425921038, -0.27052363753318787, -5.769562994828448e-05, -0.0025295186787843704, -0.09683264791965485, -0.0007246490567922592, -0.03447234258055687, -0.0026931229513138533, -0.0003475538978818804, -3.0397906812140718e-05, -0.00011646069469861686, -2.7179348762729205e-05, -3.516612196108326e-05, -2.884823152271565e-05, -4.172316494077677e-06, -0.005251304246485233, -0.008453774265944958, -0.007163672707974911, -1.2235546112060547, -0.0007348936051130295, -3.776124954223633, -0.15542656183242798, -0.00021753329201601446, -0.4659630060195923, -0.07260643690824509, -0.05836804211139679, -0.20368406176567078, -0.24753578007221222, -0.000743708573281765, -1.395472526550293, -2.9886698722839355, -0.4853985905647278, -2.1757874488830566, -2.026186466217041, -2.6823530197143555, -0.4972895085811615, -0.040958017110824585, -0.004214809741824865, -0.042866867035627365, -0.0005395148764364421, -0.0013329440262168646, -0.009336736053228378, -0.038204703480005264, -0.0010668307077139616, -0.8470327258110046, -0.42966410517692566, -0.002239816589280963, -1.9501659870147705, -0.019228486344218254, -0.061962686479091644, -0.0002991705550812185, -0.00018976318824570626, -0.0004323977918829769, -0.02414512261748314, -2.312633478140924e-05, -0.8965975642204285, -0.2546851634979248, -0.405478298664093, -0.11954948306083679, -0.0014610340585932136, -0.03626071289181709, -0.005930447019636631, -0.0007743220776319504, -0.3859492242336273, -0.02462955191731453, -0.08856824040412903, -0.008349984884262085, -6.997340824455023e-05, -0.00012563870404846966, -2.1576648578047752e-05, -6.198863957251888e-06, -8.511180931236595e-05, -8.761498611420393e-05, -0.00036137725692242384, -0.0009956170106306672, -0.0019350391812622547, -0.00023755589791107923, -1.1205610462639015e-05, -0.0004648081958293915, -4.017272294731811e-05, -0.00019143179815728217, -0.0004704084130935371, -0.005144335329532623, -0.02849898673593998, -1.6591038703918457, -0.21286042034626007, -0.13679388165473938, -0.0008809261489659548, -0.07176864147186279, -0.0024385498836636543, -0.007141539361327887, -0.000459565402707085, -0.022910771891474724, -4.100715523236431e-05, -0.011543033644557, -2.3364747903542593e-05, -3.7431014789035544e-05, -0.0005510718910954893, -0.0018653151346370578, -0.0004301338049117476, -0.0009675112669356167, -0.02797655388712883, -0.0009140365873463452, -0.06918752938508987, -2.496469020843506, -1.1699999570846558, -0.015588106587529182, -0.00019131260341964662, -0.00018308870494365692, -0.44553127884864807, -0.013319090008735657, -1.1187165975570679, -0.45343124866485596, -1.4207619428634644, -1.3339368104934692, -0.519483208656311, -0.00013362467871047556, -1.4836399555206299, -0.027211301028728485, -0.00014530557382386178, -1.443963646888733, -0.07306883484125137, -0.02100834995508194, -0.0005921755800954998, -0.00035577642847783864, 0.0, -0.030916260555386543, 0.0, -2.7418097943154862e-06, -7.152555099310121e-07, -0.6243917942047119, -1.2246001958847046, -2.7418097943154862e-06, -9.179073458653875e-06, -0.04518623650074005, -0.00011955977242905647, -1.1920928244535389e-07, -1.3966491222381592, -0.00010263393050990999, -0.9958004951477051, -0.5797640681266785, -0.00036900385748595, -0.02896382473409176, -0.0316632054746151, -2.4430274963378906, -0.042255330830812454, -1.3723666667938232, -6.6756979322235566e-06, -2.5748875486897305e-05, -0.007743933703750372, -4.0531076592742465e-06, -0.001986317802220583, -1.2267569303512573, -1.3607499599456787, -0.11839711666107178, -0.002229706384241581, -0.01654394343495369, -0.0032160962000489235, -0.1470046043395996, -0.005950710736215115, -0.005241699051111937, -0.20991064608097076, -0.27477478981018066, -0.0012530578533187509, -0.0005818104837089777, -1.9073468138230965e-06, 0.0, -4.291525328881107e-06, -3.099436753473128e-06, 0.0, -4.386805812828243e-05, -3.480850500636734e-05, -8.976056415122002e-05, -6.198863957251888e-06, -0.007728319149464369, -0.00219533103518188, -0.005484652239829302, -0.0005824061809107661, -2.0408143997192383, -0.002895807381719351, -1.3470158576965332, 0.0, -0.10990365594625473, -0.002369217574596405, -0.027928445488214493, -0.02117421105504036, -0.06412307918071747, -0.00015722469834145159, -0.008852403610944748, -1.1191996335983276, -2.062490940093994, -2.7108120918273926, -0.28210440278053284, -0.40588247776031494, -0.7230237126350403, -0.11339584738016129, -0.09175404906272888, -0.3259899914264679, -0.00015662873920518905, -2.741593837738037, -1.0799428224563599, -2.9642534255981445, -0.019344482570886612, -0.18115116655826569, -0.9434814453125, -0.07311449199914932, -0.12508277595043182, -0.0014240134041756392, -0.6740230321884155, -1.9788545614574105e-05, -0.019954180344939232, -0.001053493469953537, -0.2512420117855072, -1.1920928244535389e-07, -3.8980677345534787e-05, -0.00018606838420964777, -0.00031394799589179456, -1.1920928244535389e-07, 0.0, -4.768370445162873e-07, -1.5616295058862306e-05, 0.0, -1.1920922133867862e-06, -7.152555099310121e-07, 0.0, -2.9802276912960224e-06, 0.0, -5.960462772236497e-07, -0.25573545694351196, -7.199982064776123e-05, -0.001258534612134099, -0.0024018031544983387, -0.016950495541095734, -0.708775520324707, -0.002294528530910611, -5.709961988031864e-05, -0.012165984138846397, -1.1610809564590454, -0.013898495584726334, -0.32545316219329834, -5.245195097813848e-06, -2.9458510875701904, -1.0013530300057027e-05, -0.003517038421705365, -0.00037329382030293345, -1.2040065485052764e-05, 0.0, -1.6689286894688848e-06, -0.0026467551942914724, -0.0009248746791854501, -2.4141392707824707, -5.245195097813848e-06, -0.0006723527330905199], "finish_reason": "length"}], "metrics": {"energy": 896.5723866577144, "energy_per_token": 3.502235885381697, "time": 22.053707, "time_per_token": 0.08614729296875}}
{"outputs": [{"text": "import pandas as pd\n\n    if 'Title' not in df.columns or 'Content' not in df.columns:\n        plt.show()\n        return\n\n    df = df[df['Title'].str.contains(r'\\b(how|what)\\b', case=False)]\n    if df.empty:\n        plt.show()\n        return\n\n    vectorizer = TfidfVectorizer(stop_words='english')\n    tfidf = vectorizer.fit_transform(df['Content'])\n    feature_names = vectorizer.get_feature_names_out()\n\n    tfidf_scores = np.squeeze(np.asarray(tfidf.toarray()))\n    sorted_indices = np.flip(np.argsort(tfidf_scores))\n    feature_names = np.array(feature_names)[sorted_indices]\n    tfidf_scores = tfidf_scores[sorted_indices]\n\n    fig, ax = plt.subplots()\n    ax.barh(feature_names, tfidf_scores)\n    ax.", "tokens": ["import", " pandas", " as", " pd", "\n", "\n", "    ", "if", " '", "Title", "'", " not", " in", " df", ".", "columns", " or", " '", "Content", "'", " not", " in", " df", ".", "columns", ":", "\n", "        ", "plt", ".", "show", "()", "\n", "        ", "return", "\n", "\n", "    ", "df", " =", " df", "[", "df", "['", "Title", "']", ".", "str", ".", "contains", "(", "r", "'\\", "b", "(", "how", "|", "what", ")\\", "b", "'", ",", " case", "=", "False", ")]", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "plt", ".", "show", "()", "\n", "        ", "return", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "df", "['", "Content", "'])", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "tf", "id", "f", "_", "scores", " =", " np", ".", "squ", "ee", "ze", "(", "np", ".", "as", "array", "(", "tf", "id", "f", ".", "to", "array", "()))", "\n", "    ", "s", "orted", "_", "indices", " =", " np", ".", "flip", "(", "np", ".", "args", "ort", "(", "tf", "id", "f", "_", "scores", "))", "\n", "    ", "feature", "_", "names", " =", " np", ".", "array", "(", "feature", "_", "names", ")[", "s", "orted", "_", "indices", "]", "\n", "    ", "tf", "id", "f", "_", "scores", " =", " tf", "id", "f", "_", "scores", "[", "s", "orted", "_", "indices", "]", "\n", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "bar", "h", "(", "feature", "_", "names", ",", " tf", "id", "f", "_", "scores", ")", "\n", "    ", "ax", "."], "logprobs": [-2.852440357208252, -1.6116669178009033, -0.007342851255089045, -0.0009064141195267439, -0.023193150758743286, -1.395318627357483, -0.0029525042045861483, -1.3175058364868164, -0.39897701144218445, -0.011987550184130669, -0.00015805903240107, -0.27023229002952576, -4.8993817472364753e-05, -0.002435101196169853, -0.1407368928194046, -0.00043930893298238516, -0.029994314536452293, -0.002252305392175913, -0.00042906138696707785, -3.0397906812140718e-05, -0.00014399446081370115, -3.2782016205601394e-05, -3.480850500636734e-05, -3.0636318115284666e-05, -9.417489309271332e-06, -0.00442620599642396, -0.006827241275459528, -0.008068349212408066, -1.2874424457550049, -0.0004732680681627244, -2.4398980140686035, -0.0010881462367251515, -0.010564827360212803, -0.21834450960159302, -0.019945766776800156, -0.18477033078670502, -0.06294921785593033, -0.0007605044520460069, -1.1318110227584839, -0.8956037759780884, -0.039645154029130936, -0.6927039623260498, -0.191421240568161, -0.09165268391370773, -0.0020019030198454857, -0.0002978596603497863, -0.0005135409301146865, -0.08684562146663666, -8.153582894010469e-05, -0.1925922930240631, -0.6945523023605347, -0.03240671008825302, -0.3369709849357605, -0.0011755467858165503, -1.0341256856918335, -0.5269181132316589, -0.003936044406145811, -0.003971309866756201, -0.028317764401435852, -0.004320098087191582, -0.14656445384025574, -0.0002619877050165087, -0.12799584865570068, -0.008860201574862003, -0.005454301368445158, -0.4194870889186859, -0.08174195885658264, -1.1189956665039062, -0.14286990463733673, -0.13679979741573334, -0.0007827793597243726, -0.05543147400021553, -0.0022327988408505917, -0.002033191965892911, -0.0008256602450273931, -0.02294432558119297, -2.6464111215318553e-05, -0.01742260530591011, -8.546940807718784e-05, -0.00029583368450403214, -0.008123098872601986, -0.0006581762572750449, -0.002945848274976015, -0.04002421349287033, -0.0005864569102413952, -1.3013877868652344, -0.0025994342286139727, -0.0017203782917931676, -0.0006009918288327754, -1.1920928244535389e-07, -0.0005981324939057231, -1.1920928244535389e-07, -1.6689286894688848e-06, -1.4305104514278355e-06, -0.7024355530738831, -1.223388433456421, -9.536738616588991e-07, -2.264974000354414e-06, -0.028605224564671516, -6.258291978156194e-05, -2.3841855067985307e-07, -0.10886574536561966, -0.004941156599670649, -0.026880040764808655, -0.3225679099559784, -0.004233565181493759, -0.0023655309341847897, -0.7716915607452393, -0.004043974447995424, -1.1920928244535389e-07, -7.045020902296528e-05, -0.00014208737411536276, -3.731181277544238e-05, -5.722029527532868e-06, -0.006045863498002291, -0.00431748665869236, -0.013450476340949535, -0.001520192832686007, -0.1119457557797432, -0.050230152904987335, -0.27355554699897766, -0.6826781630516052, -0.001277702976949513, -0.04686331748962402, -0.0007946909172460437, -0.18869473040103912, -4.768370445162873e-07, -5.722029527532868e-06, -4.827859811484814e-05, -1.1920928244535389e-07, -4.410734163684538e-06, 0.0, -2.264974000354414e-06, -0.4820670485496521, -0.00014006110723130405, -0.0011249411618337035, -0.004516519606113434, -0.6684172749519348, -0.00020239688456058502, -0.9973980188369751, -0.016518382355570793, -0.003078485606238246, -0.08121133595705032, -0.18694733083248138, -0.01371249184012413, -0.9058406949043274, -1.2874520507466514e-05, -1.394395112991333, -5.960462772236497e-07, -1.1920928244535389e-07, -0.00023362292267847806, -1.4132837057113647, -1.764281842042692e-05, -0.02094613015651703, -0.0003861635341309011, -0.0013458014000207186, -0.002663162536919117, -0.0003673355677165091, -1.1920928244535389e-07, -0.05111517384648323, -0.507219672203064, -0.00011753345461329445, -0.07103230804204941, -0.06995601952075958, -0.551756739616394, -2.410801410675049, -0.0015629230765625834, -0.00011538793478393927, -0.24968421459197998, -0.0006713996990583837, -0.20472098886966705, -2.3841855067985307e-07, -1.3686537742614746, -0.003540796460583806, -0.19284142553806305, -2.3841855067985307e-07, -0.00013934595335740596, 0.0, -0.00015615197480656207, -0.0031558494083583355, -1.311301275563892e-06, 0.0, -0.00018308870494365692, -8.701899787411094e-05, -0.042499855160713196, -0.022530879825353622, -0.43851467967033386, -1.7769086360931396, -0.0001629458274692297, -0.010045211762189865, -0.48069339990615845, -0.30045387148857117, -8.344646857949556e-07, -0.16506624221801758, -0.006486551836133003, -0.002679926110431552, -3.576278118089249e-07, -1.1920928244535389e-07, -0.22683174908161163, -0.0011932880152016878, 0.0, -3.576278118089249e-07, -4.768370445162873e-07, -0.012451059184968472, -0.0057664234191179276, -0.18434511125087738, -0.14019791781902313, -0.00016437610611319542, -0.00010680581908673048, -0.0004472924047149718, -0.0017815446481108665, -0.002536058658733964, -0.09432829916477203, -2.3841855067985307e-07, 0.0, -0.00010442188795423135, -9.536738616588991e-07, -0.00023064337437972426, -4.076874756719917e-05, 0.0, -1.1920928244535389e-07, -2.861018856492592e-06, -0.01046043075621128, -0.0038106462452560663, -0.039255063980817795, -0.0002411313180346042, -2.366525888442993, -0.0639243796467781, -0.003983658738434315, -0.0012704405235126615, -4.672895011026412e-05, -2.3841855067985307e-07, -8.702239938429557e-06, -8.034383063204587e-05, -0.1323414146900177, -0.00022110878489911556, -0.03844769671559334, -0.04163438454270363, -0.0005511910421773791, -0.04338386654853821, -0.4766239523887634, -0.0035818961914628744, -0.1234579011797905, -5.960462772236497e-07, -4.768370445162873e-07, -0.025368422269821167, -0.0048712859861552715, -1.9073468138230965e-06, -3.576278118089249e-07, -7.390948667307384e-06, -2.0265558760002023e-06, -0.029154885560274124, -0.0017629809444770217, -0.08800684660673141, -0.07716868072748184, -9.119095193454996e-05], "finish_reason": "length"}], "metrics": {"energy": 912.0869103717808, "energy_per_token": 3.562839493639769, "time": 22.235416, "time_per_token": 0.08685709375}}
{"outputs": [{"text": "if \"Title\" not in df.columns or \"Content\" not in df.columns:\n        plt.subplots()\n        plt.show()\n        return\n\n    df[\"check\"] = df[\"Title\"].apply(lambda x: re.search(r\"\\b(what|how)\\b\", x) is not None)\n\n    filtered_df = df[df[\"check\"]]\n    filtered_df[\"check\"] = filtered_df[\"Title\"].apply(lambda x: re.search(r\"\\b(what|how)\\b\", x).group(0))\n\n    if filtered_df.shape[0] == 0:\n        plt.subplots()\n        plt.show()\n        return\n\n    vectorizer = TfidfVectorizer(stop_words=\"english\")\n    tfidf = vectorizer.fit_transform(filtered_df[\"Content\"])\n    tfidf = np.mean(tfidf.toarray(), axis=0)\n    feature_names = np.array(vectorizer.get_feature_", "tokens": ["if", " \"", "Title", "\"", " not", " in", " df", ".", "columns", " or", " \"", "Content", "\"", " not", " in", " df", ".", "columns", ":", "\n", "        ", "plt", ".", "sub", "plots", "()", "\n", "        ", "plt", ".", "show", "()", "\n", "        ", "return", "\n", "\n", "    ", "df", "[", "\"", "check", "\"", "]", " =", " df", "[", "\"", "Title", "\"", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "search", "(", "r", "\"", "\\", "b", "(", "what", "|", "how", ")\\", "b", "\"", ",", " x", ")", " is", " not", " None", ")", "\n", "\n", "    ", "filtered", "_", "df", " =", " df", "[", "df", "[", "\"", "check", "\"", "]]", "\n", "    ", "filtered", "_", "df", "[", "\"", "check", "\"", "]", " =", " filtered", "_", "df", "[", "\"", "Title", "\"", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "search", "(", "r", "\"", "\\", "b", "(", "what", "|", "how", ")\\", "b", "\"", ",", " x", ")", ".", "group", "(", "0", "))", "\n", "\n", "    ", "if", " filtered", "_", "df", ".", "shape", "[", "0", "]", " ==", " ", "0", ":", "\n", "        ", "plt", ".", "sub", "plots", "()", "\n", "        ", "plt", ".", "show", "()", "\n", "        ", "return", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "=", "\"", "eng", "lish", "\"", ")", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "filtered", "_", "df", "[", "\"", "Content", "\"", "])", "\n", "    ", "tf", "id", "f", " =", " np", ".", "mean", "(", "tf", "id", "f", ".", "to", "array", "()", ",", " axis", "=", "0", ")", "\n", "    ", "feature", "_", "names", " =", " np", ".", "array", "(", "vector", "izer", ".", "get", "_", "feature", "_"], "logprobs": [-1.1495336294174194, -2.2487006187438965, -0.010783377103507519, -7.676783570786938e-05, -0.2821393609046936, -5.602679812000133e-05, -0.003061728784814477, -0.14536695182323456, -0.0009952597320079803, -0.04656751826405525, -0.0052745467983186245, -0.00026008085114881396, -2.372236667724792e-05, -0.00011276562872808427, -3.576214658096433e-05, -2.6702524337451905e-05, -5.769562994828448e-05, -3.4570634852570947e-06, -0.004100012592971325, -0.010000600479543209, -0.005934712942689657, -1.370772361755371, -0.0010375360725447536, -3.133035659790039, -0.011353762820363045, -0.1422388255596161, -0.09508270025253296, -0.03258592262864113, -2.299222469329834, -0.0002760506176855415, -0.14202174544334412, -0.01906931959092617, -0.005057873670011759, -0.07790261507034302, -0.02822134830057621, -0.5655842423439026, -0.24986064434051514, -0.0005415403284132481, -1.1864460706710815, -1.2362406253814697, -0.001036583329550922, -3.778951644897461, -0.3458935022354126, -0.0017717868322506547, -0.0002656822034623474, -0.0695493295788765, -0.1342111974954605, -0.0009863278828561306, -0.0007139279623515904, -8.583032467868179e-06, -0.00026794656878337264, -0.0012384133879095316, -0.3739843964576721, -0.0009816833771765232, -0.27959346771240234, -0.14052364230155945, -0.0018699555657804012, -0.9291260838508606, -0.00022063204960431904, -0.37180107831954956, -0.0275610089302063, -0.4649100601673126, -0.15416219830513, -0.8831150531768799, -0.014232556335628033, -0.34840720891952515, -2.6532793045043945, -0.049643293023109436, -0.04264996573328972, -0.03484760969877243, -0.008727974258363247, -0.01156895887106657, -0.0001436368766007945, -0.02607620321214199, -2.815645217895508, -0.05570267513394356, -0.0042586117051541805, -5.245071224635467e-05, -0.021412741392850876, -0.01302461326122284, -1.3388550281524658, -6.341733387671411e-05, -3.4708681106567383, -0.16072416305541992, -0.2866421043872833, -0.00250894739292562, -0.0021052833180874586, -0.11280541867017746, -0.00779515178874135, -0.011363663710653782, -5.411955135059543e-05, -0.0008840228547342122, -2.50339189733495e-06, -0.3171634376049042, -0.04707532748579979, -1.0094963312149048, -0.9205778241157532, -0.0005498804384842515, -0.06374645233154297, -0.38313743472099304, -0.0012660353677347302, -0.7243272662162781, -0.004876031540334225, -0.00018571082910057157, -0.0828390046954155, -0.29089629650115967, -6.318072337307967e-06, -0.00046826363541185856, -0.03995159640908241, -0.002836611121892929, -1.0919137001037598, -5.471556869451888e-05, -0.0005200940649956465, -0.12858083844184875, -0.2543770372867584, -8.916457591112703e-05, -0.1220698207616806, -0.005206003785133362, -0.00045015214709565043, -0.14190228283405304, -6.472854875028133e-05, -0.6504883766174316, -0.00041869457345455885, -0.003705898066982627, -0.001257224939763546, -0.033031679689884186, -0.0012199586490169168, -0.07217808812856674, -0.07400651276111603, -0.030823098495602608, -0.0006538875168189406, -0.0023442425299435854, -3.540453326422721e-05, -0.0002134810492862016, -0.0002244459028588608, -0.0012486526975408196, -0.21493755280971527, -0.27105823159217834, -0.02300572209060192, -0.6537123322486877, -0.06509486585855484, -0.15692199766635895, -0.017562121152877808, -0.42439109086990356, -0.0001932195882545784, -0.9273902177810669, -0.4900398850440979, -2.622600959512056e-06, -2.4199192921514623e-05, -0.024688169360160828, -0.9706910252571106, -0.004628658294677734, -9.142934868577868e-05, -0.001928376266732812, -0.07367865741252899, -0.00017569905321579427, -0.0005202132160775363, -0.0020632902160286903, -0.0034996948670595884, -0.0007047553663142025, -0.02102118916809559, -1.490105023549404e-05, -0.005382332019507885, -9.274052717955783e-05, -0.0003307510633021593, -0.0004190520558040589, -0.0027422227431088686, -0.011824987828731537, -4.768370445162873e-07, -0.0019449143437668681, -0.00019596086349338293, -6.246371776796877e-05, -0.011873170733451843, -0.002060672966763377, -0.0037997206673026085, -0.03222723677754402, -0.0002727136597968638, -1.1754816770553589, -0.00913346279412508, -0.003257803386077285, -0.0004583738627843559, -1.1920928244535389e-07, -4.6491513785440475e-06, 0.0, -9.536738616588991e-07, -7.152555099310121e-07, -0.4466756582260132, -1.79616117477417, -1.5497195136049413e-06, -5.722029527532868e-06, -0.13994869589805603, -0.1309703141450882, -0.0005884823040105402, -2.8729025871143676e-05, -9.179073458653875e-06, -0.26788386702537537, -0.009287014603614807, -0.1331062912940979, -0.9104349613189697, -0.04232652485370636, -0.0031478875316679478, -0.5242987275123596, -0.008169685490429401, -3.576278118089249e-07, -0.0001137191939051263, -0.00032729512895457447, -9.691245941212401e-05, -9.894321920000948e-06, -0.012833151035010815, -0.048995137214660645, -8.22540732769994e-06, -1.9073468138230965e-06, -0.03349291905760765, -0.0009733468177728355, -0.006545769516378641, -4.6491513785440475e-06, -0.08317724615335464, -0.07765380293130875, -0.5934641361236572, -1.0491031408309937, -0.009716833010315895, -0.0021433494985103607, -1.4752017259597778, -1.0432630777359009, -3.325883881188929e-05, -3.779872417449951, -0.023926565423607826, -0.08582232892513275, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.02076096646487713, -0.18414591252803802, -1.1205610462639015e-05, -0.007012635935097933, -0.005434264428913593, -0.00044919890933670104, -0.0004905451205559075, -0.0006260104128159583, -0.006043019704520702, -0.04051978513598442, -1.2449982166290283, -1.1485170125961304, -0.0028709645848721266, -0.006555006839334965, -0.0007850425899960101, -0.8483275771141052, -2.264974000354414e-06, -0.024178985506296158, -0.00158410903532058, -0.002798809204250574, -1.1920928244535389e-07, -2.3841830625315197e-06, -1.6212332411669195e-05, -1.1920928244535389e-07, -3.4570634852570947e-06, 0.0], "finish_reason": "length"}], "metrics": {"energy": 935.5829089632049, "energy_per_token": 3.654620738137519, "time": 25.485312, "time_per_token": 0.099552}}
