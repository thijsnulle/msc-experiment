{"outputs": [{"text": "if not Path(source_dir).is_dir():\n        raise ValueError(f\"{source_dir} is not a valid directory\")\n    if not Path(target_dir).is_dir():\n        raise ValueError(f\"{target_dir} is not a valid directory\")\n\n    files_to_move = [\n        file for file in Path(source_dir).iterdir()\n        if file.suffix in extensions\n    ]\n\n    for file in files_to_move:\n        shutil.move(file, target_dir)\n\n    return len(files_to_move)", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "source", "_", "dir", "}", " is", " not", " a", " valid", " directory", "\"", ")", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "target", "_", "dir", "}", " is", " not", " a", " valid", " directory", "\"", ")", "\n", "\n", "    ", "files", "_", "to", "_", "move", " =", " [", "\n", "        ", "file", " for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "iter", "dir", "()", "\n", "        ", "if", " file", ".", "suff", "ix", " in", " extensions", "\n", "    ", "]", "\n", "\n", "    ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "return", " len", "(", "files", "_", "to", "_", "move", ")", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.6741411685943604, -9.345571743324399e-05, -0.005923099350184202, -0.5887438058853149, -0.008858902379870415, -0.005258538294583559, -0.012459771707654, -0.005215372424572706, -1.0251946150674485e-05, -0.1999618411064148, -0.44520893692970276, -0.37650683522224426, -2.166478395462036, -0.002412268426269293, -0.0001081169830285944, -9.298280929215252e-06, -0.11874429881572723, -1.6427408456802368, -0.029807347804307938, -0.10837585479021072, -0.8412670493125916, -0.21161340177059174, -0.6996306777000427, -0.0005637010326609015, -0.0010445620864629745, -0.2672698199748993, -0.03334107995033264, -0.001115891383960843, -0.0012522244360297918, -8.046303264563903e-05, -0.001013361383229494, -3.576272320060525e-06, -1.0728830375228426e-06, -0.00014435203047469258, -2.753696753643453e-05, -0.012323427014052868, -2.396077979938127e-05, -0.0003149013500660658, -0.0005714452126994729, -0.0005545270396396518, -0.0009800160769373178, -0.0006861716392450035, -0.0003313469351269305, -1.0728830375228426e-06, -0.0003034608089365065, -0.0015419748378917575, -0.00043644916149787605, -0.0003987947420682758, -0.004446737933903933, -5.185469490243122e-05, -1.9192511899746023e-05, -0.00018308870494365692, -0.0004001055203843862, -0.00017128908075392246, -0.0003564914222806692, -0.0004932855372317135, -0.0018402085406705737, -0.001042775809764862, -4.053033626405522e-05, -3.302042750874534e-05, -0.5008843541145325, -0.0006861716392450035, -2.2412803173065186, -0.4511237144470215, -1.0484178066253662, -7.86750388215296e-05, -0.02730259671807289, -0.031125206500291824, -0.30086231231689453, -0.8417969346046448, -0.009158741682767868, -0.748793363571167, -0.3093878924846649, -0.12330880016088486, -0.002179748611524701, -0.1605745255947113, -0.0011469698511064053, -0.004201514180749655, -1.4066597032069694e-05, -6.437280717364047e-06, -0.0004814896092284471, -0.0002215855201939121, -0.41974276304244995, -6.317892984952778e-05, -0.001822478836402297, -0.4689248204231262, -0.0028299542609602213, -0.0015962490579113364, -0.0677451491355896, -6.55629628454335e-05, -0.2518882751464844, -9.536738616588991e-07, -0.08126827329397202, -0.018291015177965164, -0.43132665753364563, -0.03214585408568382, -1.811964830267243e-05, -0.0007513322634622455, -0.33551332354545593, -0.0002320735511602834, -0.5212603211402893, -0.012743938714265823, -0.032135579735040665, -0.001279131742194295, -1.0132738680113107e-05, -4.768370445162873e-07, 0.0, -5.960462772236497e-07, -0.0004957877099514008, -0.0001711698860162869, -0.0015866083558648825, -0.06873735040426254, -4.0531076592742465e-06, -4.0531076592742465e-06, -0.011277266778051853, -3.8980677345534787e-05, -0.4336177706718445, -0.03188088908791542, -0.30397626757621765, -4.1126360883936286e-05, -3.158996332786046e-05, -0.011519347317516804, -0.0014513921923935413, -0.0353478267788887, -0.0016705142334103584, -0.047538772225379944, -0.0034244961570948362, -0.00019488819816615433, -0.0002673506969586015, -1.4185804502631072e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -3.0517112463712692e-05, -0.2737986445426941, -0.20966902375221252, -0.006863588932901621, -0.39367425441741943], "finish_reason": "stop"}], "metrics": {"energy": 522.2993584709168, "energy_per_token": 3.577392866239156, "time": 12.801382, "time_per_token": 0.08768069863013699}}
{"outputs": [{"text": "if not Path(source_dir).is_dir():\n        raise ValueError(f\"The source directory '{source_dir}' does not exist.\")\n    if not Path(target_dir).is_dir():\n        raise ValueError(f\"The target directory '{target_dir}' does not exist.\")\n\n    moved_files = 0\n    for extension in extensions:\n        if not extension.startswith('.'):\n            extension = '.' + extension\n        for file_path in Path(source_dir).glob(f'*{extension}'):\n            shutil.move(file_path, target_dir)\n            moved_files += 1\n\n    return moved_files", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " source", " directory", " '", "{", "source", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " target", " directory", " '", "{", "target", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "if", " not", " extension", ".", "start", "sw", "ith", "('", ".", "')", ":", "\n", "            ", "extension", " =", " '", ".", "'", " +", " extension", "\n", "        ", "for", " file", "_", "path", " in", " Path", "(", "source", "_", "dir", ")", ".", "glob", "(", "f", "'", "*{", "extension", "}", "')", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.6741411685943604, -9.345571743324399e-05, -0.005923099350184202, -0.5887438058853149, -0.008858902379870415, -0.005258538294583559, -0.012459771707654, -0.005215372424572706, -1.0251946150674485e-05, -0.1999618411064148, -0.44520893692970276, -0.37650683522224426, -1.8952724933624268, -1.4897992610931396, -0.06621154397726059, -0.6265648603439331, -0.0016352864913642406, -0.0021422787103801966, -1.2993727978027891e-05, -1.0013530300057027e-05, -0.00472061475738883, -0.04159436374902725, -0.0011997176334261894, -0.0037656365893781185, -0.37088659405708313, -0.006623338907957077, -0.0006781900301575661, -0.0005884823040105402, -0.23617087304592133, -0.038557469844818115, -0.0007712250226177275, -0.001168402610346675, -9.07141511561349e-05, -0.0009700122172944248, -3.2186455882765586e-06, -1.0728830375228426e-06, -8.821098163025454e-05, -7.510157047363464e-06, -0.005441970657557249, -4.887569048150908e-06, -0.00015472168161068112, -0.0003587556129787117, -0.0006385194719769061, -0.0009071287349797785, -0.0007641970878466964, -0.0002874914789572358, -1.4305104514278355e-06, -0.00033718624035827816, -0.015466743148863316, -0.0003237200144212693, -0.001760957995429635, -0.011844662018120289, -0.00040570611599832773, -0.003158463630825281, -5.23315102327615e-05, -0.0026500842068344355, -6.794906312279636e-06, -5.8412379075889476e-06, -0.0005495230434462428, -0.0005530973430722952, -6.115249561844394e-05, -0.0002338612830499187, -0.0014541300479322672, -0.000289159914245829, -5.4596363042946905e-05, -3.862306402879767e-05, -0.421741783618927, -0.0006475735572166741, -0.7465611100196838, -0.010492635890841484, -0.022746829316020012, -0.32241731882095337, -0.4338509440422058, -0.14548353850841522, -3.361645576660521e-05, -0.006496382411569357, -0.2504223585128784, -0.09182919561862946, -0.6950749754905701, -0.0009239218779839575, -0.0023092764895409346, -0.00012170527770649642, -0.000902126485016197, -0.0021647608373314142, -1.6261098384857178, -0.14593219757080078, -0.005846542306244373, -0.007192551624029875, -0.003090488724410534, -9.65590606938349e-06, 0.0, -0.08817724138498306, -0.0003829461056739092, -2.539125671319198e-05, -0.002738299546763301, -0.012250419706106186, -0.0007909983396530151, -0.030324198305606842, -0.0005673944251611829, -0.425508052110672, -4.672895011026412e-05, -0.0029569019097834826, -7.688703772146255e-05, -0.0017578639090061188, -0.027613889425992966, -0.15240298211574554, -0.3533855378627777, -0.12735214829444885, -1.053917407989502, -0.3031344711780548, -0.0016208856832236052, -0.013736596331000328, -0.00029023250681348145, -0.0036196685396134853, -2.9802276912960224e-06, -1.1920922133867862e-06, -0.002147988649085164, -3.814689989667386e-06, -1.056833267211914, -0.1649460643529892, -0.014454183168709278, -0.11138913035392761, -0.3669385313987732, -0.00033682872890494764, -0.004048129543662071, -0.0001394651480950415, -4.708655978902243e-05, -0.002211864572018385, -0.0018340209499001503, -0.4025684893131256, -4.887569048150908e-06, -5.483612312673358e-06, -0.012955893762409687, -3.1470757676288486e-05, -1.0175745487213135, -3.516612196108326e-05, -7.152555099310121e-07, -0.04598374292254448, -0.23028476536273956, -2.3364747903542593e-05, -0.0001559135998832062, -0.003212174866348505, -0.002776816952973604, -0.0007471630233339965, -0.012774422764778137, -2.0265558760002023e-06, -5.483612312673358e-06, -5.483612312673358e-06, -0.0007427555974572897, -0.0005003153928555548, -3.7788631743751466e-05, -0.0003817544784396887, -0.9447656273841858, -0.0011173202656209469, -0.01978776603937149, -0.0013580633094534278, -1.0371154530730564e-05, -2.264974000354414e-06, -0.48266395926475525, -0.006678640842437744, -0.3866097033023834], "finish_reason": "stop"}], "metrics": {"energy": 678.8048051586151, "energy_per_token": 3.9929694421095006, "time": 15.340763, "time_per_token": 0.09023978235294118}}
{"outputs": [{"text": "if not Path(source_dir).is_dir():\n        raise ValueError(f\"Source directory '{source_dir}' does not exist\")\n    if not Path(target_dir).is_dir():\n        raise ValueError(f\"Target directory '{target_dir}' does not exist\")\n\n    num_moved_files = 0\n    for ext in extensions:\n        for file in Path(source_dir).glob(f\"*{ext}\"):\n            shutil.move(str(file), target_dir)\n            num_moved_files += 1\n\n    return num_moved_files", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "dir", "}'", " does", " not", " exist", "\"", ")", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Target", " directory", " '", "{", "target", "_", "dir", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "num", "_", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "glob", "(", "f", "\"", "*{", "ext", "}\"", "):", "\n", "            ", "sh", "util", ".", "move", "(", "str", "(", "file", ")", ",", " target", "_", "dir", ")", "\n", "            ", "num", "_", "m", "oved", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "return", " num", "_", "m", "oved", "_", "files"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.6741411685943604, -9.345571743324399e-05, -0.005923099350184202, -0.5887438058853149, -0.008858902379870415, -0.005258538294583559, -0.012459771707654, -0.005215372424572706, -1.0251946150674485e-05, -0.1999618411064148, -0.44520893692970276, -0.37650683522224426, -1.1245567798614502, -0.0356287844479084, -0.5666106343269348, -0.0007752750534564257, -0.002109446795657277, -9.894321920000948e-06, -8.22540732769994e-06, -0.004116395954042673, -0.05602847412228584, -0.0006822404102422297, -0.00218414980918169, -1.1646811962127686, -0.0005112771177664399, -0.0009683449170552194, -0.2589513063430786, -0.02890603616833687, -0.0011835244949907064, -0.0012193633010610938, -7.891343557275832e-05, -0.0009190387791022658, -3.2186455882765586e-06, -1.5497195136049413e-06, -9.119095193454996e-05, -1.1444026313256472e-05, -0.004911619704216719, -6.079655122448457e-06, -0.00012754580529872328, -0.0004949536523781717, -0.0007178590167313814, -0.0008451942121610045, -0.0011330381967127323, -0.00036745471879839897, -1.6689286894688848e-06, -0.00035232058144174516, -0.009489311836659908, -0.0005746620590798557, -0.006270614918321371, -0.0005395148764364421, -0.003238316625356674, -9.333651541965082e-05, -0.004727615043520927, -1.1801649634435307e-05, -8.106198947643861e-06, -0.0008166077313944697, -0.0007038023322820663, -4.994744449504651e-05, -0.00012563870404846966, -0.002791557926684618, -5.125868119648658e-05, -3.576214658096433e-05, -0.4325745105743408, -0.0004707658663392067, -2.846367359161377, -0.003953617997467518, -0.13395901024341583, -0.022761395201086998, -0.3265167772769928, -0.0006516240537166595, -0.005837890785187483, -0.01467035710811615, -2.634490556374658e-05, -0.004519960843026638, -0.29672881960868835, -0.09178309142589569, -0.9218822717666626, -0.002673862734809518, -0.004581549670547247, -0.00016759421851020306, -0.0009569118265062571, -0.001979774096980691, -0.7793335318565369, -0.1490103006362915, -0.32715335488319397, -0.08140695840120316, -0.00032848684350028634, -0.004048604518175125, -6.318072337307967e-06, -1.5497195136049413e-06, -0.003735352074727416, -8.22540732769994e-06, -0.472342312335968, -0.027044467628002167, -0.012891876511275768, -1.5805244445800781, -0.4011017680168152, -0.0007717015105299652, -0.005939926952123642, -0.0006227937992662191, -0.005167342722415924, -0.0015530440723523498, -0.4260484278202057, -5.364403477869928e-06, -6.079655122448457e-06, -0.016262143850326538, -5.245071224635467e-05, -0.9267862439155579, -9.417489309271332e-06, -0.00011765264935093, -0.012347212061285973, -0.00016091958968900144, -0.0838966965675354, -2.1219027985353023e-05, -6.16293036728166e-05, -0.0038454411551356316, -0.020898383110761642, -0.0014175852993503213, -0.009015684947371483, -2.264974000354414e-06, -3.814689989667386e-06, 0.0, -1.5497195136049413e-06, -2.264974000354414e-06, -0.0005494038923643529, -0.0006368515896610916, -3.58813522325363e-05, -0.0006171943969093263, -0.7565590143203735, -0.0010251511121168733, -0.02019580453634262, -0.0015822045970708132, -6.437280717364047e-06, -2.264974000354414e-06, 0.0, -1.2516897186287679e-05, -1.5497195136049413e-06], "finish_reason": "stop"}], "metrics": {"energy": 555.9356813068388, "energy_per_token": 3.8077786390879367, "time": 13.026327, "time_per_token": 0.08922141780821918}}
{"outputs": [{"text": "if not Path(source_dir).is_dir() or not Path(target_dir).is_dir():\n        raise ValueError('source_dir or target_dir does not exist')\n\n    files = [file for file in Path(source_dir).iterdir() if file.suffix in extensions]\n    moved_files_count = 0\n\n    for file in files:\n        shutil.move(str(file), target_dir)\n        moved_files_count += 1\n\n    return moved_files_count", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "()", " or", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "('", "source", "_", "dir", " or", " target", "_", "dir", " does", " not", " exist", "')", "\n", "\n", "    ", "files", " =", " [", "file", " for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "iter", "dir", "()", " if", " file", ".", "suff", "ix", " in", " extensions", "]", "\n", "    ", "m", "oved", "_", "files", "_", "count", " =", " ", "0", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "sh", "util", ".", "move", "(", "str", "(", "file", ")", ",", " target", "_", "dir", ")", "\n", "        ", "m", "oved", "_", "files", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files", "_", "count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.6741411685943604, -9.345571743324399e-05, -0.005923099350184202, -0.8149400949478149, -0.01824875921010971, -0.004905451089143753, -0.0010461101774126291, -9.7508447652217e-05, -0.005145283881574869, -3.576272320060525e-06, -1.7881377516459906e-06, -0.00016151554882526398, -2.062299427052494e-05, -0.003050676081329584, -2.9802276912960224e-06, -0.0001515035255579278, -0.0038860533386468887, -0.002316293539479375, -0.0053811464458703995, -0.017252136021852493, -0.007463074289262295, -5.125986263010418e-06, -1.060895562171936, -1.4906359910964966, -0.01635080762207508, -0.0003810394846368581, -0.1297086477279663, -0.0010545651894062757, -0.0003921216703020036, -0.00010597144137136638, -0.024596985429525375, -0.0005343916127458215, -0.022639036178588867, -0.3502199649810791, -0.0009951406391337514, -0.37379950284957886, -0.0005708495154976845, -3.2237939834594727, -1.1650066375732422, -0.6916314363479614, -0.6463273763656616, -0.06916383653879166, -0.11124546825885773, -0.003975822124630213, -0.3060721457004547, -0.0019701372366398573, -0.010743279941380024, -1.3112935448589269e-05, -8.22540732769994e-06, -0.0005504761938937008, -0.00019560330838430673, -0.2457033395767212, -2.825220326485578e-05, -0.001786899520084262, -0.19128233194351196, -0.12139284610748291, -0.00014685506175737828, -0.14851051568984985, -7.152555099310121e-07, -0.03943454101681709, -0.016825076192617416, -0.08590361475944519, -0.0024878999684005976, -0.1771978884935379, -1.2224948406219482, -0.011240608058869839, -0.11505074054002762, -0.21068355441093445, -1.848677635192871, -0.22602511942386627, -0.004405317362397909, -0.35412007570266724, -0.00033742457162588835, -0.00222756527364254, -0.5229482650756836, -0.00010418349120300263, -0.028536871075630188, -0.010642675682902336, -0.015032579191029072, -0.001572444918565452, -0.00012861855793744326, -0.0004901876673102379, -0.003772762371227145, -0.5617216229438782, -9.65590606938349e-06, -9.894321920000948e-06, -0.018418122082948685, -9.7508447652217e-05, -0.9775094389915466, -2.0146166207268834e-05, -0.000947622349485755, -0.006509647238999605, -0.00027736154152080417, -0.20630089938640594, -2.407998726994265e-05, -2.3245540432981215e-05, -0.024828653782606125, -0.012255837209522724, -0.00258516613394022, -0.014467813074588776, -2.145764938177308e-06, -1.1920922133867862e-06, -8.344646857949556e-07, -1.9550132492440753e-05, -2.861018856492592e-06, -0.003076584078371525, -0.001960738329216838, -6.651657167822123e-05, -0.00044312194222584367, -0.03984220698475838, -0.00169955228921026, -0.016206664964556694, -0.0011262509506195784, -3.3378546504536644e-06, -1.7881377516459906e-06, -3.0040289857424796e-05, -4.529942543740617e-06, -1.3043694496154785, -1.0728830375228426e-06, -2.7418097943154862e-06, -7.152555099310121e-07, -1.1920922133867862e-06, -0.06750760972499847], "finish_reason": "stop"}], "metrics": {"energy": 441.3629286594388, "energy_per_token": 3.343658550450294, "time": 10.939841, "time_per_token": 0.08287758333333332}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise ValueError(\"Source directory does not exist\")\n    if not os.path.exists(target_dir):\n        raise ValueError(\"Target directory does not exist\")\n\n    moved_files = 0\n    for extension in extensions:\n        files = Path(source_dir).rglob(f'*{extension}')\n        for file in files:\n            if os.path.isfile(file):\n                shutil.move(file, target_dir)\n                moved_files += 1\n    return moved_files", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " directory", " does", " not", " exist", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Target", " directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "files", " =", " Path", "(", "source", "_", "dir", ")", ".", "rg", "lob", "(", "f", "'", "*{", "extension", "}", "')", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "                ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -2.3493359088897705, -1.645074735279195e-05, -0.0014111570781096816, -2.47952248173533e-05, -0.24036557972431183, -0.0006412595394067466, -0.02373613230884075, -2.062299427052494e-05, -4.0531076592742465e-06, -0.25557804107666016, -0.003384815761819482, -0.005436991341412067, -0.018025396391749382, -0.00887733418494463, -6.318072337307967e-06, -0.09063724428415298, -0.9638211727142334, -0.3595339357852936, -0.012758533470332623, -0.05644858255982399, -0.0004985281848348677, -0.00215512583963573, -0.5491548776626587, -0.0017527469899505377, -0.0006713996990583837, -0.23051577806472778, -0.030454179272055626, -0.0008916454971767962, -0.0023212889209389687, -6.079655122448457e-06, -1.1324817933200393e-05, -8.344646857949556e-07, -0.00047124247066676617, -0.00013469743134919554, -0.0007367995567619801, -6.437280717364047e-06, -5.722029527532868e-06, -0.002678142860531807, -8.546940807718784e-05, -0.00048637480358593166, -0.0013673489447683096, -0.0003216941258870065, 0.0, -0.0005946775199845433, -0.0006264869589358568, -0.007125560659915209, -0.00030989613151177764, -0.00019488819816615433, -2.7179348762729205e-05, -3.0397906812140718e-05, -0.0019519339548423886, -2.3364747903542593e-05, -4.2676016164477915e-05, -0.4363584518432617, -0.0007789676310494542, -0.8406414985656738, -0.010396843776106834, -0.0395754911005497, -0.27039265632629395, -0.3595026433467865, -0.13806875050067902, -4.172238186583854e-05, -0.004909128416329622, -0.20740817487239838, -0.19803307950496674, -0.9877657294273376, -0.0007113072206266224, -0.002626899629831314, -0.0001311216183239594, -0.000950004265177995, -0.0027354462072253227, -1.681349754333496, -0.39512374997138977, -0.8223971128463745, -0.001259129960089922, -0.004963101353496313, -2.288792165927589e-05, -1.0967194612021558e-05, -0.003200292121618986, -0.0006238659843802452, -0.7964966893196106, -1.5497195136049413e-06, -0.005906508769840002, -0.03893980756402016, -0.4828355610370636, -0.14274154603481293, -0.0014944825088605285, -0.02862514927983284, -0.00020525732543319464, -0.019843630492687225, -0.009140314534306526, -0.027913490310311317, -0.01679331064224243, -0.04749125614762306, -0.0061867390759289265, -0.00013684290752280504, -0.0010388459777459502, -0.0015997005393728614, -2.5878219604492188, -1.846835970878601, -0.00013052565918769687, -0.0024990777019411325, -7.271740287251305e-06, -0.9114893078804016, -0.08122111856937408, -0.0006274400511756539, -0.023665117099881172, -0.04226813092827797, -0.005947748199105263, -0.0006834316882304847, -0.22380270063877106, -1.2159273865108844e-05, -4.768360213347478e-06, -0.009430622681975365, -4.672895011026412e-05, -0.1202564537525177, -0.005325061734765768, -0.1009853333234787, -1.823885577323381e-05, -1.5139465176616795e-05, -0.005820113234221935, -0.002015108708292246, -0.0028442188631743193, -0.03585239127278328, -4.887569048150908e-06, -7.629365427419543e-06, -4.887569048150908e-06, -0.001967162825167179, -0.0012761552352458239, -3.838465272565372e-05, -0.00030655929003842175, -0.42102062702178955, -0.014701017178595066, -0.001557924086228013, -1.2636104656849056e-05, -1.3589766240329482e-05, -0.3689066171646118, -0.013898259960114956, -0.3676551878452301], "finish_reason": "stop"}], "metrics": {"energy": 472.6894755039214, "energy_per_token": 3.352407627687386, "time": 11.772167, "time_per_token": 0.08349054609929078}}
{"outputs": [{"text": "source_path = Path(source_dir)\n    target_path = Path(target_dir)\n\n    if not source_path.is_dir():\n        raise ValueError('The source directory does not exist.')\n\n    if not target_path.is_dir():\n        raise ValueError('The target directory does not exist.')\n\n    moved_files = 0\n    for extension in extensions:\n        for file in source_path.glob(f'*{extension}'):\n            shutil.move(file, target_path)\n            moved_files += 1\n\n    return moved_files", "tokens": ["source", "_", "path", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "path", " =", " Path", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "if", " not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "('", "The", " source", " directory", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "if", " not", " target", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "('", "The", " target", " directory", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " source", "_", "path", ".", "glob", "(", "f", "'", "*{", "extension", "}", "')", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "path", ")", "\n", "            ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.4910401105880737, -0.15119226276874542, -0.8541111350059509, -0.059505727142095566, -0.002560553140938282, -0.002144182100892067, -0.002666966989636421, -1.2993727978027891e-05, -1.6927575416048057e-05, -0.0016564709367230535, -0.025544369593262672, -0.003994107246398926, -0.04917764291167259, -0.0002774807217065245, -0.001930517959408462, -0.0003626880934461951, -0.00013863079948350787, -0.00010656742961145937, -0.00018130090029444546, -2.0265558760002023e-06, -9.536738616588991e-07, -0.000226472009671852, -0.0015343570848926902, -0.39477840065956116, -0.00032944019767455757, -0.14373447000980377, -0.02609838731586933, -0.03773725405335426, -2.0265558760002023e-06, -0.0007039214833639562, -0.0004844683862756938, -0.5494462847709656, -0.00010549465514486656, -0.005945378448814154, -0.5557382702827454, -0.003106294432654977, -0.001840446493588388, -0.013210038654506207, -0.0068937791511416435, -3.2186455882765586e-06, -2.4440505504608154, -1.4442325830459595, -0.4663005769252777, -0.11180548369884491, -0.024815047159790993, -0.0005993238883093, -0.001754413009621203, -0.43797066807746887, -0.007280958816409111, -0.0006384003208950162, -0.6470754146575928, -6.878139538457617e-05, -0.007439054548740387, -0.014563803561031818, -0.0031087901443243027, -6.556489552167477e-06, -0.0006165986997075379, -1.9073304429184645e-05, -0.03475607931613922, -1.2159273865108844e-05, -0.0001481661747675389, -0.000690460205078125, -9.42901024245657e-05, -0.000523430178873241, -0.015205304138362408, -0.00020489977032411844, -1.1920928244535389e-07, -0.0026430694852024317, -0.006169323343783617, -0.014054255560040474, -0.0006886732880957425, -0.0005989664932712913, -7.033100700937212e-05, -0.0004748170613311231, -0.006786511745303869, -0.0001892864383989945, -5.209310256759636e-05, -0.004183707758784294, -0.00044979469384998083, -0.5579238533973694, -0.011316989548504353, -0.021705923601984978, -0.3053993582725525, -0.5237463116645813, -0.15333808958530426, -4.625213477993384e-05, -0.002914112526923418, -0.9970793724060059, -0.09623180329799652, -0.7787783741950989, -0.00195693108253181, -0.003148600459098816, -0.00013791563105769455, -0.0005497612874023616, -0.0035091983154416084, -0.6890525817871094, -0.10243794322013855, -0.4476505517959595, -0.037275902926921844, -9.536738616588991e-07, -0.0007783720502629876, -2.3245540432981215e-05, -0.5108583569526672, -0.04646829515695572, -0.011488000862300396, -0.03144432231783867, -0.14279797673225403, -0.00045122456504032016, -0.013205568306148052, -0.0002731903805397451, -0.00011097769311163574, -0.0047914450988173485, -0.00226205843500793, -0.5124099850654602, -7.629365427419543e-06, -1.1920858014491387e-05, -0.01256290078163147, -5.602679812000133e-05, -0.4381105303764343, -0.02204788289964199, -0.003815515199676156, -2.074220174108632e-05, -0.009090346284210682, -0.1131359115242958, -0.003799839410930872, -0.0011628062929958105, -0.014031333848834038, -3.576272320060525e-06, -4.529942543740617e-06, -5.602820692729438e-06, -0.0013499680208042264, -0.0008680627797730267, -5.8410845667822286e-05, -0.00036006642039865255, -0.14568141102790833, -0.0010807631770148873, -0.024791324511170387, -0.002177488524466753, -8.106198947643861e-06, -4.529942543740617e-06, -1.5615291595458984, -9.536738616588991e-07, -1.9073468138230965e-06, -9.536738616588991e-07, -8.344646857949556e-07, -0.06568009406328201], "finish_reason": "stop"}], "metrics": {"energy": 491.39537941837307, "energy_per_token": 3.3657217768381718, "time": 11.976362, "time_per_token": 0.08202987671232877}}
{"outputs": [{"text": "# Check that source and target directories exist\n    source_dir_path = Path(source_dir)\n    target_dir_path = Path(target_dir)\n    if not source_dir_path.is_dir():\n        raise ValueError(\"The source directory does not exist\")\n    if not target_dir_path.is_dir():\n        raise ValueError(\"The target directory does not exist\")\n\n    # Initialize variables\n    moved_count = 0\n\n    # Iterate through files in source directory\n    for file_path in source_dir_path.iterdir():\n        # Check if file has the right extension\n        if file_path.suffix in extensions:\n            # Move file to target directory\n            shutil.move(file_path, target_dir_path)\n            # Increment the number of moved files\n            moved_count += 1\n\n    return moved_count", "tokens": ["#", " Check", " that", " source", " and", " target", " directories", " exist", "\n", "    ", "source", "_", "dir", "_", "path", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "dir", "_", "path", " =", " Path", "(", "target", "_", "dir", ")", "\n", "    ", "if", " not", " source", "_", "dir", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " source", " directory", " does", " not", " exist", "\"", ")", "\n", "    ", "if", " not", " target", "_", "dir", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " target", " directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " variables", "\n", "    ", "m", "oved", "_", "count", " =", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " through", " files", " in", " source", " directory", "\n", "    ", "for", " file", "_", "path", " in", " source", "_", "dir", "_", "path", ".", "iter", "dir", "():", "\n", "        ", "#", " Check", " if", " file", " has", " the", " right", " extension", "\n", "        ", "if", " file", "_", "path", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "#", " Move", " file", " to", " target", " directory", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "dir", "_", "path", ")", "\n", "            ", "#", " In", "crement", " the", " number", " of", " moved", " files", "\n", "            ", "m", "oved", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "count", "\n", "\n", "if"], "logprobs": [-1.7178105115890503, -0.4810100197792053, -2.2066221237182617, -0.6155829429626465, -1.548661470413208, -0.0033890926279127598, -0.03348842263221741, -0.028134308755397797, -0.18568983674049377, -0.0017147850012406707, -1.3820210695266724, -0.17502176761627197, -0.5670963525772095, -0.8377970457077026, -0.16296188533306122, -0.03516761213541031, -0.0019164782715961337, -0.0012371037155389786, -0.001135776867158711, -2.50339189733495e-06, -2.861018856492592e-06, -0.0005373702733777463, -0.025238128378987312, -0.0013891342096030712, -0.15962684154510498, -4.589452510117553e-05, -0.00020990552729927003, -0.0006287504802457988, -9.655486064730212e-05, -0.00027450130437500775, -0.00014506718434859067, -6.544376083184034e-05, -0.0002754547167569399, -3.6954811548639555e-06, -1.1920928244535389e-07, -0.00010942813969450071, -0.0004351384413894266, -0.13188357651233673, -0.014489314518868923, -0.008943617343902588, -0.022514445707201958, -2.145764938177308e-06, -4.887569048150908e-06, -0.0013260389678180218, -3.4570634852570947e-06, -0.00041952868923544884, -0.6608306765556335, -9.595887240720913e-05, -0.0009950215462595224, -0.432844340801239, -0.0026685125194489956, -0.0018117694417014718, -0.0065300180576741695, -0.0057372660376131535, -2.0265558760002023e-06, -0.05903510004281998, -1.4136286973953247, -2.047736406326294, -0.14011482894420624, -0.0177150871604681, -0.062100715935230255, -0.0004631400224752724, -0.0010634964564815164, -1.4246509075164795, -0.0011433976469561458, -0.00039402826223522425, -0.008768743835389614, -0.03472971171140671, -0.002537485444918275, -0.0010222929995507002, -1.0728830375228426e-06, -4.172316494077677e-06, -0.0008226824575103819, -9.536738616588991e-07, -3.8742269680369645e-05, -0.00875669065862894, -8.4638240878121e-06, -0.00010835537250386551, -0.0007842087652534246, -0.00018451895448379219, -0.0003946240758523345, -0.0005290300468914211, -0.00015496007108595222, -1.1920928244535389e-07, -0.0006322053959593177, -0.000636255950666964, -0.0034726096782833338, -0.00976700522005558, -0.0004002247005701065, -0.0002623452164698392, -4.470248313737102e-05, -0.0002648479712661356, -0.0018362818518653512, -3.755022044060752e-05, -2.8371408916427754e-05, -0.07693944871425629, -0.0008404298569075763, -0.1580323576927185, -1.9697401523590088, -2.2456281185150146, -0.19844520092010498, -0.0003225283289793879, -0.6065700054168701, -0.010945872403681278, -0.008917033672332764, -1.6167786121368408, -0.012898466549813747, -0.0006957017467357218, -3.0636318115284666e-05, -0.019229188561439514, -0.39989006519317627, -0.0003493413969408721, -0.012566432356834412, -1.0613584518432617, -0.004613707307726145, -1.1941685676574707, -1.6473932266235352, -0.08742962777614594, -0.9092673659324646, -0.018826134502887726, -0.11630459874868393, -0.00013410145766101778, -0.027975626289844513, -0.24909766018390656, -1.141966462135315, -0.279700368642807, -0.003951718099415302, -0.03244698792695999, -3.576278118089249e-07, -2.3841830625315197e-06, -0.0002112165529979393, -1.0728830375228426e-06, -0.00011908298620255664, -0.16979514062404633, -6.151010165922344e-05, -6.258291978156194e-05, -0.00040725519647821784, -0.01846926473081112, -0.7534539699554443, -0.14750853180885315, -0.1336507648229599, -0.6096075177192688, -0.39657312631607056, -1.5609114170074463, -1.7852630615234375, -0.007055842317640781, -0.09177645295858383, -0.0002575780963525176, -0.044018328189849854, -0.033097997307777405, -6.198863957251888e-06, -2.145764938177308e-06, -5.4238757002167404e-05, -0.012354394420981407, -3.576278118089249e-07, -0.08494210988283157, -0.004889554809778929, -0.04720894992351532, -0.0010642108973115683, -0.002460906282067299, -0.13093161582946777, -0.42698293924331665, -0.2563723623752594, -0.08845017850399017, -0.06302287429571152, -0.0020350953564047813, -0.2747073173522949, -0.0002454218047205359, -0.2767064869403839, -1.0013530300057027e-05, -1.07287787614041e-05, -0.005048147868365049, -2.9801878554280847e-05, -0.36657223105430603, -6.007967749610543e-05, -2.622600959512056e-06, -0.006877914536744356, -0.027288561686873436, -2.932505594799295e-05, -9.202533692587167e-05, -0.02203715406358242, -9.298280929215252e-06, -0.45427095890045166, -0.0009915679693222046, -0.01131981797516346, -2.1299479007720947, -0.1466429978609085, -0.0008949803304858506, -1.249560832977295, -1.2033867835998535, -0.0017002663807943463, -0.019088031724095345, -0.0015066235791891813, -0.00735918153077364, -0.0002698534226510674, -0.0003182381624355912, -1.6689286894688848e-06, -2.622600959512056e-06, -8.22540732769994e-06, -0.002442830940708518, -0.0011374439345672727, -5.94836674281396e-05, -0.0007459718617610633, -0.056741584092378616, -0.001302942750044167, -0.7720685005187988, -0.002461500931531191, -2.253030106658116e-05, -2.074220174108632e-05, -0.437229186296463, -0.007815969176590443, -0.4660708010196686], "finish_reason": "stop"}], "metrics": {"energy": 742.0709549570084, "energy_per_token": 3.500334693193436, "time": 17.643559, "time_per_token": 0.08322433490566038}}
{"outputs": [{"text": "if not Path(source_dir).exists():\n        raise ValueError('The directory does not exist')\n    if not Path(target_dir).exists():\n        raise ValueError('The directory does not exist')\n\n    source_files = [f for f in Path(source_dir).iterdir() if f.suffix in extensions]\n    moved_files = 0\n    for file in source_files:\n        shutil.move(file, target_dir)\n        moved_files += 1\n    return moved_files", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "The", " directory", " does", " not", " exist", "')", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "The", " directory", " does", " not", " exist", "')", "\n", "\n", "    ", "source", "_", "files", " =", " [", "f", " for", " f", " in", " Path", "(", "source", "_", "dir", ")", ".", "iter", "dir", "()", " if", " f", ".", "suff", "ix", " in", " extensions", "]", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", " in", " source", "_", "files", ":", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "        ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.7140657901763916, -0.5253757238388062, -0.008766498416662216, -0.0057725864462554455, -0.013280034996569157, -0.013477057218551636, -8.940656698541716e-06, -1.8080321550369263, -1.5104010105133057, -1.2843492031097412, -0.3244580328464508, -0.0018825681181624532, -0.010476002469658852, -0.8197543025016785, -0.0012561534531414509, -0.19653436541557312, -0.07715212553739548, -0.0041597275994718075, -0.0025452144909650087, -0.0002696150622796267, -0.009091528132557869, -5.8412379075889476e-06, -1.4305104514278355e-06, -0.000286657246761024, -2.312633478140924e-05, -0.027899347245693207, -0.0010253892978653312, -0.00034791138023138046, -0.0017065736465156078, -0.0010102650849148631, -0.0012223399244248867, -5.364403477869928e-06, -0.004617266822606325, -0.019141830503940582, -0.07401702553033829, -0.003942456562072039, -0.00010406429646536708, -0.0005480932886712253, -0.0016164820408448577, -0.00010573305189609528, -0.6532100439071655, -0.0005899119423702359, -2.991159439086914, -0.1714928150177002, -1.9514479637145996, -0.0534164160490036, -0.970623254776001, -1.8115171194076538, -0.044251699000597, -0.06847299635410309, -0.0001629458274692297, -0.2462109923362732, -0.0015720878727734089, -0.010629347525537014, -1.9192511899746023e-05, -7.748573807475623e-06, -0.0006574614671990275, -0.0005303407087922096, -0.1880420446395874, -3.4450891689630225e-05, -0.0029870914295315742, -0.07445798069238663, -0.10792093724012375, -0.00013171759201213717, -1.081846833229065, -3.576278118089249e-07, -0.043191391974687576, -0.011252748779952526, -0.1510193645954132, -0.004223712719976902, -0.13625673949718475, -0.5458712577819824, -0.008366771042346954, -0.06292056292295456, -0.24293531477451324, -0.162303626537323, -0.3090583384037018, -0.000406301929615438, -0.0021303833927959204, -0.6196498274803162, -0.030436718836426735, -0.5543291568756104, -0.06933724880218506, -0.001531857531517744, -4.410734163684538e-06, -6.6756979322235566e-06, -0.00022396916756406426, -0.0005125877796672285, -0.003548636334016919, -0.3325493633747101, -9.536697689327411e-06, -8.821448318485636e-06, -0.02550114132463932, -9.464769391342998e-05, -0.5202282667160034, -0.04606514424085617, -0.1663786917924881, -5.602679812000133e-05, -4.172238186583854e-05, -0.01594788394868374, -0.00388177833519876, -0.0020760190673172474, -0.01509352307766676, -5.483612312673358e-06, -5.8412379075889476e-06, -7.152531907195225e-06, -0.0069884867407381535, -0.0029006809927523136, -7.688703772146255e-05, -0.0005987281911075115, -0.30533698201179504, -0.018387574702501297, -0.004204006865620613, -2.1457441107486375e-05, -1.3589766240329482e-05, -0.4326598346233368, -0.01318721566349268, -0.41391706466674805], "finish_reason": "stop"}], "metrics": {"energy": 466.2335482959747, "energy_per_token": 3.6711303015431076, "time": 10.509127, "time_per_token": 0.08274903149606298}}
{"outputs": [{"text": "if not Path(source_dir).exists() or not Path(target_dir).exists():\n        raise ValueError('Source or target directory does not exist.')\n    moved_files_count = 0\n    for ext in extensions:\n        for file_path in Path(source_dir).rglob(f'*{ext}'):\n            shutil.move(file_path, target_dir)\n            moved_files_count += 1\n    return moved_files_count", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "()", " or", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "Source", " or", " target", " directory", " does", " not", " exist", ".", "')", "\n", "    ", "m", "oved", "_", "files", "_", "count", " =", " ", "0", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "for", " file", "_", "path", " in", " Path", "(", "source", "_", "dir", ")", ".", "rg", "lob", "(", "f", "'", "*{", "ext", "}", "')", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", "_", "count", " +=", " ", "1", "\n", "    ", "return", " moved", "_", "files", "_", "count", "\n", "\n", "def"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.7140657901763916, -0.9024871587753296, -0.036048006266355515, -0.006815283093601465, -0.0015238827327266335, -0.00013696208770852536, -0.04027225822210312, -2.7418097943154862e-06, -1.0728830375228426e-06, -0.00024351492174901068, -5.6622808187967166e-05, -0.030717672780156136, -0.0057248203083872795, -0.002598720835521817, -0.005831609014421701, -0.01930776797235012, -0.009081132709980011, -6.6756979322235566e-06, -1.2673008441925049, -0.8860874772071838, -0.6201468110084534, -0.02003445476293564, -0.03177245706319809, -0.0214750487357378, -0.0006112375995144248, -0.0034280603285878897, -0.4810279905796051, -0.0036474622320383787, -0.0010384886991232634, -1.321744680404663, -0.779415488243103, -0.006504436023533344, -0.05216507986187935, -0.2614268958568573, -1.3283710479736328, -0.2502831220626831, -0.015431411564350128, -0.015914563089609146, -4.446407547220588e-05, -0.0034581166692078114, -0.019747911021113396, -0.10588163137435913, -1.112638235092163, -0.005207901354879141, -0.004764750599861145, -0.00018034738604910672, -0.0010524216340854764, -0.0024986020289361477, -0.6817120313644409, -0.12199384719133377, -1.627838134765625, -0.6480419635772705, -0.0035301053430885077, -0.02481655962765217, -0.000641974329482764, -0.0048507628962397575, -6.318072337307967e-06, -1.5497195136049413e-06, -0.0018588898237794638, -1.6212332411669195e-05, -0.25479233264923096, -1.9430925021879375e-05, -0.017220383509993553, -0.02096177265048027, -0.05858302116394043, -0.05451640114188194, -0.0010081215295940638, -0.021296866238117218, -9.643566590966657e-05, -0.0001250427303602919, -0.006437753792852163, -0.0031280419789254665, -0.49014532566070557, -7.390948667307384e-06, -1.3232143828645349e-05, -0.020961539819836617, -7.843663479434326e-05, -0.40974485874176025, -4.565611743601039e-05, -7.152555099310121e-07, -0.0875190794467926, -0.13473546504974365, -2.8371408916427754e-05, -0.00010632903286023065, -0.004357604775577784, -0.003877028590068221, -0.002285489346832037, -0.01267743669450283, -3.814689989667386e-06, -2.0265558760002023e-06, -3.2186455882765586e-06, -2.90866428258596e-05, -9.179073458653875e-06, -0.0017132379580289125, -0.0014175852993503213, -6.83045873302035e-05, -0.0004042761866003275, -0.036603935062885284, -0.024591751396656036, -0.0013456823071464896, -3.6954811548639555e-06, -9.536738616588991e-07, -1.156323378381785e-05, -3.099436753473128e-06, -0.34537091851234436, -0.00888324249535799, -1.8804996013641357], "finish_reason": "stop"}], "metrics": {"energy": 402.9815808773043, "energy_per_token": 3.4739791454940026, "time": 9.459045, "time_per_token": 0.08154349137931034}}
{"outputs": [{"text": "if not Path(source_dir).is_dir():\n        raise ValueError(\"Source directory does not exist.\")\n\n    if not Path(target_dir).is_dir():\n        raise ValueError(\"Target directory does not exist.\")\n\n    moved_files = 0\n    for ext in extensions:\n        if ext[0] != \".\":\n            ext = f\".{ext}\"\n\n        for filename in os.listdir(source_dir):\n            filepath = Path(source_dir, filename)\n            if filename.endswith(ext) and filepath.is_file():\n                shutil.move(filepath, Path(target_dir, filename))\n                moved_files += 1\n    return moved_files", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Target", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "if", " ext", "[", "0", "]", " ", "!", "=", " \"", ".", "\":", "\n", "            ", "ext", " =", " f", "\"", ".", "{", "ext", "}\"", "\n", "\n", "        ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "            ", "file", "path", " =", " Path", "(", "source", "_", "dir", ",", " filename", ")", "\n", "            ", "if", " filename", ".", "end", "sw", "ith", "(", "ext", ")", " and", " file", "path", ".", "is", "_", "file", "():", "\n", "                ", "sh", "util", ".", "move", "(", "file", "path", ",", " Path", "(", "target", "_", "dir", ",", " filename", "))", "\n", "                ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.6741411685943604, -9.345571743324399e-05, -0.005923099350184202, -0.5887438058853149, -0.008858902379870415, -0.005258538294583559, -0.012459771707654, -0.005215372424572706, -1.0251946150674485e-05, -0.1999618411064148, -1.0844453573226929, -0.573473334312439, -0.0327090322971344, -0.09223171323537827, -0.001292108790948987, -0.0022442173212766647, -0.6391891837120056, -0.0036162238102406263, -0.0008511496125720441, -0.0007102350937202573, -1.7073878049850464, -0.00014029949670657516, -0.012530761770904064, -0.0015435221139341593, -0.0014156806282699108, -7.83174327807501e-05, -0.000559292733669281, -2.3841830625315197e-06, -1.1920928244535389e-07, -9.572047565598041e-05, -1.8715683836489916e-05, -0.007046254351735115, -3.576272320060525e-06, -9.941560711013153e-05, -0.0004978132783435285, -0.00035124807618558407, -0.0007001094636507332, -0.0004637358069885522, -0.0002858230145648122, -2.3841855067985307e-07, -0.0009776342194527388, -0.0009432157967239618, -0.007352909538894892, -0.0003761537664104253, -0.00039569655200466514, -5.721882189391181e-05, -0.0005407063290476799, -0.0042304787784814835, -0.00022206225548870862, -6.305972783593461e-05, -5.745722592109814e-05, -0.009567243978381157, -0.0008998635457828641, -0.5484046339988708, -0.00961187481880188, -0.028638355433940887, -0.39289286732673645, -0.3810216784477234, -0.16012071073055267, -3.0040289857424796e-05, -0.004141207784414291, -0.9304134845733643, -0.11384094506502151, -0.8702379465103149, -0.0036806000862270594, -0.0045853471383452415, -0.0001829695247579366, -0.0008470999309793115, -0.003359984839335084, -2.99006724357605, -1.8901816606521606, -0.85598224401474, -0.0007929041748866439, -0.00034528967808000743, -0.036178622394800186, -3.576278118089249e-07, -0.00019429226813372225, -1.7068297863006592, -0.00021181246847845614, -0.0029868537094444036, -0.01132960058748722, -0.000890097115188837, -0.02135731466114521, -0.0004096384218428284, -1.2629179954528809, -0.020760616287589073, -0.00340323057025671, -6.854299135738984e-05, -0.0006328010931611061, -0.0004931663861498237, -0.02635037526488304, -0.9807159900665283, -0.008727974258363247, -0.30609944462776184, -2.4848384857177734, -0.00121174321975559, -0.8435900807380676, -1.3708974620385561e-05, -0.0009242791566066444, -1.1920928244535389e-07, -0.00012957210128661245, -0.00791354663670063, -3.111314072157256e-05, -2.264974000354414e-06, -0.00012706902634818107, -0.0013077049516141415, -0.0016037471359595656, -2.9152028560638428, -1.0222830772399902, -0.004975556395947933, -1.7032041549682617, -0.000961913785431534, -0.06459176540374756, -2.777537883957848e-05, -2.0265558760002023e-06, -1.0544960498809814, -0.0007527616689912975, -0.00013457823661156, -0.004517469089478254, -0.25963741540908813, -0.038285937160253525, -2.319204330444336, -0.006004983093589544, -0.051430124789476395, -3.814689989667386e-06, -2.50339189733495e-06, -0.00043764073052443564, -0.002077327808365226, -0.3057285249233246, -0.003029045881703496, -0.11317029595375061, -2.169585604860913e-05, -0.0002972637885250151, -0.002258965978398919, -9.417489309271332e-06, -0.0008021951070986688, -0.029107296839356422, -0.0019242119742557406, -0.001157209975644946, -0.11696624755859375, -3.4570634852570947e-06, -4.887569048150908e-06, -0.011569076217710972, -5.6265202147187665e-05, -0.27210909128189087, -1.5139465176616795e-05, -0.010760733857750893, -0.9238535165786743, -0.00010346830822527409, -0.004401163663715124, -1.1324817933200393e-05, -1.168244216387393e-05, -0.005360396578907967, -0.011316400021314621, -0.002463284647092223, -0.0027174947317689657, -0.0022499265614897013, -0.012251362204551697, -2.50339189733495e-06, -6.556489552167477e-06, -4.768360213347478e-06, -0.003546260530129075, -0.00039736481267027557, -3.635817120084539e-05, -0.0005690624238923192, -2.061877965927124, -0.018740614876151085, -0.001669800141826272, -1.2516897186287679e-05, -1.0132738680113107e-05, -0.49554917216300964, -0.008513466455042362, -0.4354848861694336], "finish_reason": "stop"}], "metrics": {"energy": 655.0278842201229, "energy_per_token": 3.599054308901774, "time": 15.931948, "time_per_token": 0.08753817582417582}}
{"outputs": [{"text": "if not Path(source_dir).exists() or not Path(target_dir).exists():\n        raise ValueError('Source or target directory does not exist.')\n\n    moved_files_count = 0\n    for ext in extensions:\n        for file in Path(source_dir).iterdir():\n            if file.suffix == ext:\n                shutil.move(str(file), target_dir)\n                moved_files_count += 1\n\n    return moved_files_count", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "()", " or", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "Source", " or", " target", " directory", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "m", "oved", "_", "files", "_", "count", " =", " ", "0", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "iter", "dir", "():", "\n", "            ", "if", " file", ".", "suff", "ix", " ==", " ext", ":", "\n", "                ", "sh", "util", ".", "move", "(", "str", "(", "file", ")", ",", " target", "_", "dir", ")", "\n", "                ", "m", "oved", "_", "files", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files", "_", "count", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.7140657901763916, -0.9024871587753296, -0.036048006266355515, -0.006815283093601465, -0.0015238827327266335, -0.00013696208770852536, -0.04027225822210312, -2.7418097943154862e-06, -1.0728830375228426e-06, -0.00024351492174901068, -5.6622808187967166e-05, -0.030717672780156136, -0.0057248203083872795, -0.002598720835521817, -0.005831609014421701, -0.01930776797235012, -0.009081132709980011, -6.6756979322235566e-06, -1.2673008441925049, -0.8860874772071838, -0.6201468110084534, -0.02003445476293564, -0.03177245706319809, -0.0214750487357378, -0.0006112375995144248, -0.0034280603285878897, -0.4810279905796051, -0.0036474622320383787, -0.0010384886991232634, -0.3120076656341553, -0.0006584145012311637, -0.5489686727523804, -0.004884809721261263, -0.02543548122048378, -0.299326628446579, -1.0201644897460938, -0.15775536000728607, -0.00928973127156496, -0.007044597063213587, -4.076874756719917e-05, -0.004319148138165474, -0.3804587721824646, -0.11135297268629074, -1.129589557647705, -0.003283706260845065, -0.006815756671130657, -0.00015090756642166525, -0.0011023165425285697, -0.0024136954452842474, -0.6498299241065979, -0.14155012369155884, -0.3068648874759674, -0.07334183901548386, -0.0005428509321063757, -0.003462155582383275, -9.65590606938349e-06, -1.4305104514278355e-06, -0.0013085383689031005, -1.1205610462639015e-05, -1.8812675476074219, -0.0002628219372127205, -0.00017891713650897145, -0.0035535066854208708, -0.0017590539064258337, -0.013878039084374905, -0.044177450239658356, -0.00015484087634831667, -0.25086909532546997, -1.6689286894688848e-06, -0.150864377617836, -0.0006897454150021076, -0.0635569617152214, -0.002186171943321824, -0.0003927174839191139, -0.12282498925924301, -6.794906312279636e-06, -8.821448318485636e-06, -0.021752582862973213, -7.223821739898995e-05, -1.0707566738128662, -1.4543427823809907e-05, -0.00033563701435923576, -0.006118021905422211, -0.0001823735801735893, -0.08201040327548981, -3.0636318115284666e-05, -3.2782016205601394e-05, -0.014485906809568405, -0.019616998732089996, -0.0012992521515116096, -0.014631824567914009, -2.50339189733495e-06, -1.7881377516459906e-06, -1.7881377516459906e-06, -2.372236667724792e-05, -2.622600959512056e-06, -0.001111485529690981, -0.0009377372916787863, -5.2927523938706145e-05, -0.00044967554276809096, -0.7138174176216125, -0.0013524680398404598, -0.017983481287956238, -0.0009008163469843566, -3.099436753473128e-06, -1.9073468138230965e-06, -1.1205610462639015e-05, -2.145764938177308e-06, -0.5168493986129761, -0.0050490968860685825, -0.3739286959171295], "finish_reason": "stop"}], "metrics": {"energy": 429.6676619997025, "energy_per_token": 3.5805638499975205, "time": 10.295825, "time_per_token": 0.08579854166666667}}
{"outputs": [{"text": "if not Path(source_dir).exists():\n        raise ValueError(\"Source directory does not exist\")\n\n    if not Path(target_dir).exists():\n        raise ValueError(\"Target directory does not exist\")\n\n    count = 0\n    for ext in extensions:\n        count += sum(1 for file in Path(source_dir).rglob(f'*{ext}') if file.is_file())\n        shutil.move(source_dir, target_dir)\n\n    return count", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Target", " directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "count", " +=", " sum", "(", "1", " for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "rg", "lob", "(", "f", "'", "*{", "ext", "}", "')", " if", " file", ".", "is", "_", "file", "())", "\n", "        ", "sh", "util", ".", "move", "(", "source", "_", "dir", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.7140657901763916, -0.5253757238388062, -0.008766498416662216, -0.0057725864462554455, -0.013280034996569157, -0.013477057218551636, -8.940656698541716e-06, -0.18654172122478485, -1.2004635334014893, -0.4763055741786957, -0.026645945385098457, -0.07883510738611221, -0.001077548018656671, -0.004176110029220581, -0.9592269659042358, -0.0017814256716519594, -0.0010584949050098658, -1.7351268529891968, -0.00013457823661156, -0.008552353829145432, -0.000971917703282088, -0.00129413278773427, -9.727005090098828e-05, -0.0023048759903758764, -2.3841830625315197e-06, -4.768370445162873e-07, -0.00022289653134066612, -2.3841574147809297e-05, -0.01068560779094696, -0.0006337541271932423, -0.00042298430344089866, -0.0008905735448934138, -0.0008579387213103473, -0.00026663561584427953, -9.536738616588991e-07, -0.0010378933511674404, -0.0012156723532825708, -0.00870481226593256, -0.0007134514744393528, -0.0003936707798857242, -6.544376083184034e-05, -0.00034397884155623615, -0.0021251493599265814, -3.731181277544238e-05, -2.5152843591058627e-05, -0.010283107869327068, -0.0009055804111994803, -1.8678091764450073, -0.20080000162124634, -0.010865689255297184, -8.546940807718784e-05, -0.009754610247910023, -0.4870211184024811, -0.11178949475288391, -0.6687526702880859, -0.003474747994914651, -0.005771045573055744, -0.00018416139937471598, -0.001292942208237946, -0.004246147815138102, -2.9230058193206787, -0.009644697420299053, -0.5318018794059753, -0.06767953187227249, -0.6704296469688416, -0.0026688692159950733, -1.185254454612732, -0.03228171542286873, -0.0334305465221405, -0.0011862630490213633, -0.012895289808511734, -1.764281842042692e-05, -3.099436753473128e-06, -0.0011542332358658314, -0.00014745102089364082, -0.47978320717811584, -6.794906312279636e-06, -0.04742884263396263, -0.04553939774632454, -0.7469540238380432, -0.37092992663383484, -0.0016210046596825123, -0.03386221453547478, -0.02452905662357807, -0.10264354944229126, -0.045623794198036194, -0.0015698263887315989, -0.0038417596369981766, -1.156323378381785e-05, -3.6477376852417365e-05, -0.043374162167310715, -0.004926566034555435, -0.5770902633666992, -0.27697789669036865, -3.4570634852570947e-06, -7.271740287251305e-06, -0.012133597396314144, -0.0012032896047458053, -1.2260878086090088, -0.0009232072625309229, -2.5152843591058627e-05, -0.21757367253303528, -0.00835494976490736, -0.00010513706365600228, -4.410646579344757e-05, -0.07566195726394653, -0.032904572784900665, -0.3211017847061157, -0.0033263610675930977, -0.04054062068462372, -0.0018180761253461242, -0.5539919137954712, -0.015209061093628407, -0.46511268615722656], "finish_reason": "stop"}], "metrics": {"energy": 437.81707270050066, "energy_per_token": 3.5594883959390295, "time": 10.909484, "time_per_token": 0.08869499186991871}}
{"outputs": [{"text": "if not Path(source_dir).is_dir() or not Path(target_dir).is_dir():\n        raise ValueError(\"One of the specified paths does not exist.\")\n\n    number_of_moved_files = 0\n    for extension in extensions:\n        source_path = Path(source_dir) / extension[1:]\n        for file in source_path.rglob('*'):\n            if file.suffix == extension:\n                target_path = Path(target_dir) / file.name\n                shutil.move(str(file), str(target_path))\n                number_of_moved_files += 1\n    return number_of_moved_files", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "()", " or", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "One", " of", " the", " specified", " paths", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "number", "_", "of", "_", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "source", "_", "path", " =", " Path", "(", "source", "_", "dir", ")", " /", " extension", "[", "1", ":]", "\n", "        ", "for", " file", " in", " source", "_", "path", ".", "rg", "lob", "('", "*", "')", ":", "\n", "            ", "if", " file", ".", "suff", "ix", " ==", " extension", ":", "\n", "                ", "target", "_", "path", " =", " Path", "(", "target", "_", "dir", ")", " /", " file", ".", "name", "\n", "                ", "sh", "util", ".", "move", "(", "str", "(", "file", ")", ",", " str", "(", "target", "_", "path", "))", "\n", "                ", "number", "_", "of", "_", "m", "oved", "_", "files", " +=", " ", "1", "\n", "    ", "return", " number", "_", "of", "_", "m", "oved", "_", "files", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.6741411685943604, -9.345571743324399e-05, -0.005923099350184202, -0.8149400949478149, -0.01824875921010971, -0.004905451089143753, -0.0010461101774126291, -9.7508447652217e-05, -0.005145283881574869, -3.576272320060525e-06, -1.7881377516459906e-06, -0.00016151554882526398, -2.062299427052494e-05, -0.003050676081329584, -2.9802276912960224e-06, -0.0001515035255579278, -0.0038860533386468887, -0.002316293539479375, -0.0053811464458703995, -0.017252136021852493, -0.007463074289262295, -5.125986263010418e-06, -0.4482932984828949, -0.05950022488832474, -3.3393490314483643, -0.6962119936943054, -0.1641615629196167, -1.8715862035751343, -1.2279798984527588, -0.5027594566345215, -0.0010031197452917695, -0.027837786823511124, -0.7006394863128662, -0.014825879596173763, -0.0006304183625616133, -0.001278060139156878, -0.3069073557853699, -0.0005352256703190506, -3.7813916206359863, -0.03553732484579086, -0.13461200892925262, -0.00010632903286023065, -0.1279003918170929, -0.04970692843198776, -0.01854720152914524, -0.007242969702929258, -0.0751955583691597, -0.017735347151756287, -7.283422019099817e-05, -0.00535174086689949, -0.44885316491127014, -0.20635764300823212, -0.7895504832267761, -0.004530047997832298, -0.00792915839701891, -0.00019238528329879045, -0.0018741200910881162, -0.005633549299091101, -3.3260607719421387, -0.07321277260780334, -1.523703932762146, -0.03386486694216728, -0.10431180894374847, -0.003026312217116356, -0.010360860265791416, -1.1444026313256472e-05, -2.288792165927589e-05, -0.19273820519447327, -0.6642839312553406, -0.8403634428977966, -0.7254654765129089, -0.0008266131044365466, -0.0016921738861128688, -0.7196851968765259, -0.006890227552503347, -2.775909662246704, -0.30512702465057373, -0.3643566071987152, -0.07202180474996567, -2.50339189733495e-06, -0.0005162813467904925, -0.0004758894501719624, -1.6111159324645996, -2.407998726994265e-05, -0.8547151684761047, -0.0036361785605549812, -0.024474384263157845, -0.0016267173923552036, -0.008697603829205036, -0.00257303798571229, -0.3247533142566681, -0.05596129223704338, -0.000979896984063089, -0.6748102903366089, -4.768370445162873e-07, -0.16300582885742188, -0.0008480527903884649, -0.06618800014257431, -0.0022702652495354414, -0.00035744477645494044, -0.9936418533325195, -0.01830388978123665, -0.052012428641319275, -0.0026648270431905985, -0.012299994938075542, -0.0007560970261693001, -0.005661049857735634, -8.940656698541716e-06, -3.075552376685664e-05, -0.004975912161171436, -0.035784993320703506, -0.25528496503829956, -0.005514172837138176, -0.10695391893386841, -0.0037227629218250513, -0.0024717275518924, -0.1045246496796608, -2.50339189733495e-06, -5.483612312673358e-06, -0.006865720264613628, -4.660974445869215e-05, -1.069159984588623, -8.4638240878121e-06, -0.003263982245698571, -0.006047285161912441, -0.00012134769349358976, -0.05274378880858421, -1.7046782886609435e-05, -0.00040082051418721676, -1.1920922133867862e-06, -0.0006366133457049727, -0.003025361569598317, -0.021753165870904922, -0.0021962826140224934, -0.013144979253411293, -5.960462772236497e-07, -2.0265558760002023e-06, -2.3841855067985307e-07, -6.6756979322235566e-06, 0.0, -2.622600959512056e-06, -2.861018856492592e-06, -0.0029845954850316048, -0.0014029431622475386, -4.5536911784438416e-05, -0.0005283151986077428, -0.629357635974884, -0.015362739562988281, -0.002656504511833191, -1.5497195136049413e-06, -2.3841855067985307e-07, -9.536738616588991e-07, -1.823885577323381e-05, -1.1920928244535389e-07, -1.3112935448589269e-05, -5.722029527532868e-06, -0.37548011541366577, -0.008737428113818169, -0.4063969552516937], "finish_reason": "stop"}], "metrics": {"energy": 651.2897401981357, "energy_per_token": 3.876724644036522, "time": 14.903898, "time_per_token": 0.08871367857142858}}
{"outputs": [{"text": "source_dir = Path(source_dir)\n    target_dir = Path(target_dir)\n\n    if not source_dir.is_dir() or not target_dir.is_dir():\n        raise ValueError(\"Both source_dir and target_dir should be valid directory paths\")\n\n    moved_files_count = 0\n\n    for extension in extensions:\n        for file in source_dir.glob(f\"*{extension}\"):\n            target_file = target_dir / file.name\n            if not target_file.exists():\n                shutil.move(file, target_file)\n                moved_files_count += 1\n\n    return moved_files_count", "tokens": ["source", "_", "dir", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "if", " not", " source", "_", "dir", ".", "is", "_", "dir", "()", " or", " not", " target", "_", "dir", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Both", " source", "_", "dir", " and", " target", "_", "dir", " should", " be", " valid", " directory", " paths", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", "_", "count", " =", " ", "0", "\n", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " source", "_", "dir", ".", "glob", "(", "f", "\"", "*{", "extension", "}\"", "):", "\n", "            ", "target", "_", "file", " =", " target", "_", "dir", " /", " file", ".", "name", "\n", "            ", "if", " not", " target", "_", "file", ".", "exists", "():", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "file", ")", "\n", "                ", "m", "oved", "_", "files", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files", "_", "count", "\n", "\n", "if"], "logprobs": [-1.4910401105880737, -0.15119226276874542, -0.6296905875205994, -0.4958654046058655, -0.017801513895392418, -0.002409889828413725, -0.0037072044797241688, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.002807368291541934, -0.04368402808904648, -0.0011549476766958833, -0.04841618612408638, -0.00011669908417388797, -0.00011896379146492109, -0.00040725519647821784, -0.00012194366718176752, -0.00013350549852475524, -0.0001419681793777272, -2.145764938177308e-06, -2.3841855067985307e-07, -0.00029023250681348145, -0.0027963127940893173, -0.45287734270095825, -0.00031549722189083695, -0.11185973882675171, -0.014577431604266167, -0.030357619747519493, -9.65590606938349e-06, -2.407998726994265e-05, -0.0014906733995303512, -0.34919822216033936, -0.00026723151677288115, -0.0036880825646221638, -0.9296643137931824, -0.016442278400063515, -0.002120153047144413, -0.0033983595203608274, -4.887569048150908e-06, -1.0728830375228426e-06, -0.0001754606782924384, -0.003665278432890773, -2.622600959512056e-06, -6.770858453819528e-05, -0.004751344211399555, -0.0010680215200409293, -0.0019456282025203109, -0.010000482201576233, -0.0062048654071986675, -2.50339189733495e-06, -0.15525847673416138, -0.05945664271712303, -1.8946752548217773, -0.11914247274398804, -0.6330920457839966, -0.0004086851258762181, -0.0005802616360597312, -0.00034195298212580383, -5.745722592109814e-05, -4.994744449504651e-05, -2.1026923656463623, -0.6725752353668213, -0.4768933355808258, -1.544970989227295, -0.13521553575992584, -1.2758351564407349, -0.0002356490003876388, -0.00023624490131624043, -0.01518463995307684, -0.00037055302527733147, -0.42116856575012207, -0.005864911712706089, -0.015297232195734978, -0.29904264211654663, -0.7322566509246826, -0.057627055794000626, -0.0018918488640338182, -0.020931653678417206, -2.253030106658116e-05, -0.0018453251104801893, -0.5872569680213928, -0.00016211149340961128, -0.052721623331308365, -0.6948263645172119, -0.0012237686896696687, -0.0037896260619163513, -0.00012432756193447858, -0.0007372760446742177, -0.00437540840357542, -0.8218533992767334, -0.14168204367160797, -0.29751327633857727, -0.023503394797444344, -1.0728830375228426e-06, -2.622600959512056e-06, -8.583032467868179e-06, -0.3807288706302643, -0.02196718566119671, -0.019565096125006676, -1.3024775981903076, -0.2688593566417694, -0.0003649522550404072, -0.005780646111816168, -0.0008107712492346764, -0.004896435420960188, -0.002978890435770154, -2.6461338996887207, -0.03604236990213394, -0.23018400371074677, -0.31975603103637695, -0.007457276340574026, -2.264974000354414e-06, -1.2516897186287679e-05, -0.0125464191660285, -0.003443741938099265, -0.008359914645552635, -0.0035268981009721756, -0.004583804402500391, -0.1274794638156891, -1.405057668685913, -1.8566285371780396, -0.02282862924039364, -2.622600959512056e-06, -0.0016318351263180375, -0.00034767304896377027, -0.0617016926407814, -0.035999596118927, -0.06302958726882935, -0.00035172473872080445, -0.046555232256650925, -2.7418097943154862e-06, -1.311301275563892e-06, -0.005134728737175465, -1.6093124941107817e-05, -0.2363976091146469, -0.004888605792075396, -0.0008561521535739303, -1.823885577323381e-05, -0.21435633301734924, -0.0035995945800095797, -0.0017407278064638376, -0.0029309908859431744, -0.02178722620010376, -2.861018856492592e-06, -1.1920922133867862e-06, -1.4305104514278355e-06, -9.417489309271332e-06, -1.0728830375228426e-06, -0.0004593271005433053, -0.00034338299883529544, -4.2914423829643056e-05, -0.00027581225731410086, -0.17093631625175476, -0.0020104688592255116, -0.008310144767165184, -0.0005938435206189752, -3.6954811548639555e-06, -1.5497195136049413e-06, -1.5139465176616795e-05, -2.0265558760002023e-06, -0.3912811279296875, -0.009506434202194214, -0.32834309339523315], "finish_reason": "stop"}], "metrics": {"energy": 615.0015991916653, "energy_per_token": 3.7730159459611365, "time": 13.872154, "time_per_token": 0.08510523926380369}}
{"outputs": [{"text": "if not (Path(source_dir).exists() and Path(target_dir).exists()):\n        raise ValueError(\"Source directory or target directory does not exist.\")\n    count = 0\n    for extension in extensions:\n        for file_name in os.listdir(source_dir):\n            if file_name.endswith(extension):\n                shutil.move(\n                    os.path.join(source_dir, file_name),\n                    os.path.join(target_dir, file_name))\n                count += 1\n    return count", "tokens": ["if", " not", " (", "Path", "(", "source", "_", "dir", ")", ".", "exists", "()", " and", " Path", "(", "target", "_", "dir", ")", ".", "exists", "()", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " directory", " or", " target", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "            ", "if", " file", "_", "name", ".", "end", "sw", "ith", "(", "extension", "):", "\n", "                ", "sh", "util", ".", "move", "(", "\n", "                ", "    ", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "_", "name", ")", ",", "\n", "                ", "    ", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", "_", "name", "))", "\n", "                ", "count", " +=", " ", "1", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -2.4029324054718018, -0.06373940408229828, -0.0017357297474518418, -0.01039141695946455, -4.0649541915627196e-05, -4.172316494077677e-06, -0.0038399784825742245, -0.0032080160453915596, -0.6993184685707092, -0.004215046763420105, -0.08559255301952362, -0.004842577036470175, -0.00022313489171210676, -0.03402146324515343, -3.4570634852570947e-06, -7.152555099310121e-07, -0.0005445189890451729, -0.00013171759201213717, -0.024623386561870575, -0.0038352282717823982, -0.006385518703609705, -0.004540609661489725, -0.006480037700384855, -0.02185429073870182, -0.011570255272090435, -6.6756979322235566e-06, -0.2748279571533203, -0.14821390807628632, -0.9224627017974854, -1.351470708847046, -0.15215063095092773, -0.01683867536485195, -0.0033767367713153362, -0.10337698459625244, -0.0015194787411019206, -0.007601029239594936, -0.4358726441860199, -0.005290674045681953, -0.0005376085755415261, -0.0009111781837418675, -1.293952465057373, -1.6994092464447021, -0.18575042486190796, -0.02097403071820736, -6.806619057897478e-05, -0.007404621224850416, -0.011838535778224468, -0.13572929799556732, -1.2483024597167969, -0.0008164886385202408, -0.0054384139366447926, -0.00018714107864070684, -0.0014726994559168816, -0.003413091180846095, -0.5555515885353088, -0.2041589766740799, -1.4918766021728516, -0.8611912727355957, -0.0020535350777208805, -0.6765967011451721, -2.4318398573086597e-05, -0.0009729895391501486, -1.1920928244535389e-07, -0.0004012971476186067, -0.011216796934604645, -2.0265373677830212e-05, -7.629365427419543e-06, -0.0010843356139957905, -0.0034126159735023975, -0.0018687656847760081, -0.1865551769733429, -0.09051888436079025, -3.576214658096433e-05, -1.1920922133867862e-06, -0.0015960109885782003, -0.03488249331712723, -3.4570634852570947e-06, -1.7881377516459906e-06, -0.003171060001477599, -0.0017725008074194193, -0.03347977623343468, -0.0020334296859800816, -0.0003620922507252544, -0.5076914429664612, -4.887569048150908e-06, -8.34461570775602e-06, -0.017388278618454933, -0.001609698054380715, -1.8428547382354736, -0.00031668893643654883, -0.007927739061415195, -0.17255322635173798, -1.3470558769768104e-05, -0.00020752183627337217, -1.0609570381348021e-05, -0.0007135705673135817, -0.0001323135511483997, -0.002499791095033288, -4.291525328881107e-06, -1.7881377516459906e-06, -0.0002320735511602834, -0.00158184755127877, -6.794906312279636e-06, -2.264974000354414e-06, -9.738924563862383e-05, -0.00010930894495686516, -0.22744308412075043, -8.165503095369786e-05, -0.0003545847721397877, -0.013202039524912834, -1.0728830375228426e-06, -1.4305104514278355e-06, -2.3841855067985307e-07, -4.076874756719917e-05, -9.285972191719338e-05, -0.0010132422903552651, -6.318072337307967e-06, -1.9073468138230965e-06, -0.0016431414987891912, -0.010488389059901237, -4.887569048150908e-06, -7.748573807475623e-06, -2.565969944000244, -0.001400562352500856, -0.0053811464458703995, -0.009073572233319283, -0.006630918011069298, -0.002086368855088949, -4.994744449504651e-05, -0.0003274143091402948, -0.022123325616121292, -0.0182549636811018, -0.001013599568977952, -0.5221084356307983, -0.0158018060028553, -0.33143290877342224], "finish_reason": "stop"}], "metrics": {"energy": 476.3429304580687, "energy_per_token": 3.451760365638179, "time": 11.764283, "time_per_token": 0.0852484275362319}}
{"outputs": [{"text": "source_path = Path(source_dir)\n    target_path = Path(target_dir)\n\n    if not source_path.exists():\n        raise ValueError(f\"Source directory {source_dir} does not exist\")\n\n    if not target_path.exists():\n        raise ValueError(f\"Target directory {target_dir} does not exist\")\n\n    moved_files_count = 0\n\n    for ext in extensions:\n        # Ensure the extension starts with a dot\n        ext = ext if ext.startswith(\".\") else f\".{ext}\"\n        # Get a list of files with the specified extension in the source directory\n        files_to_move = [file for file in source_path.iterdir() if file.is_file() and file.suffix == ext]\n        # Move each file to the target directory\n        for file in files_to_move:\n            shutil.move(file, target_path)\n            moved_files_count += 1\n\n    return moved_files_count", "tokens": ["source", "_", "path", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "path", " =", " Path", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "if", " not", " source", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "if", " not", " target", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Target", " directory", " {", "target", "_", "dir", "}", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", "_", "count", " =", " ", "0", "\n", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "#", " Ensure", " the", " extension", " starts", " with", " a", " dot", "\n", "        ", "ext", " =", " ext", " if", " ext", ".", "start", "sw", "ith", "(", "\"", ".", "\"", ")", " else", " f", "\"", ".", "{", "ext", "}\"", "\n", "        ", "#", " Get", " a", " list", " of", " files", " with", " the", " specified", " extension", " in", " the", " source", " directory", "\n", "        ", "files", "_", "to", "_", "move", " =", " [", "file", " for", " file", " in", " source", "_", "path", ".", "iter", "dir", "()", " if", " file", ".", "is", "_", "file", "()", " and", " file", ".", "suff", "ix", " ==", " ext", "]", "\n", "        ", "#", " Move", " each", " file", " to", " the", " target", " directory", "\n", "        ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "path", ")", "\n", "            ", "m", "oved", "_", "files", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files", "_", "count", "\n", "\n", "if"], "logprobs": [-1.4910401105880737, -0.15119226276874542, -0.8541111350059509, -0.059505727142095566, -0.002560553140938282, -0.002144182100892067, -0.002666966989636421, -1.2993727978027891e-05, -1.6927575416048057e-05, -0.0016564709367230535, -0.025544369593262672, -0.003994107246398926, -0.04917764291167259, -0.0002774807217065245, -0.001930517959408462, -0.0003626880934461951, -0.00013863079948350787, -0.00010656742961145937, -0.00018130090029444546, -2.0265558760002023e-06, -9.536738616588991e-07, -0.000226472009671852, -0.0015343570848926902, -0.39477840065956116, -0.00032944019767455757, -0.14373447000980377, -0.02609838731586933, -0.03773725405335426, -2.0265558760002023e-06, -0.0007039214833639562, -0.0004844683862756938, -0.8613397479057312, -0.397373765707016, -0.002123126992955804, -0.0014859121292829514, -0.019427144899964333, -0.012729579582810402, -1.9073468138230965e-06, -0.08665510267019272, -0.3876117169857025, -0.1697162687778473, -0.4737545847892761, -0.05130714550614357, -0.9652842283248901, -0.016573255881667137, -2.3007127310847864e-05, -0.2408899962902069, -0.009407122619450092, -0.03641900420188904, -0.00027569307712838054, -0.0013317534467205405, -1.2761869430541992, -0.00020787939138244838, -0.00018976318824570626, -0.46693384647369385, -0.00011908298620255664, -0.026266423985362053, -0.0073632048442959785, -0.013171332888305187, -3.099436753473128e-06, -0.0005245024804025888, -1.823885577323381e-05, -0.005303598940372467, -0.0013685394078493118, -0.00015507926582358778, -0.00039760314393788576, -0.006633523385971785, -0.0002658013836480677, 0.0, -0.00011062010162277147, -0.005513105541467667, -0.00011717586312443018, -0.002890815259888768, -0.0002671123365871608, -0.0008843801915645599, -0.0001752223033690825, -9.298280929215252e-06, -0.0003364712174516171, -5.566918844124302e-05, -0.00018225439998786896, -2.9205850296420977e-05, -0.0002040654799202457, -0.0014892450999468565, -4.303362584323622e-05, -1.7762025890988298e-05, -0.004836645442992449, -0.00048065552255138755, -0.3812432587146759, -0.009978411719202995, -0.019037390127778053, -0.1936579793691635, -1.026358962059021, -0.06339619308710098, -0.0016456407029181719, -0.030986646190285683, -4.851700214203447e-05, -0.002254208317026496, -0.33112168312072754, -0.0001551984460093081, -0.05317330360412598, -1.168691635131836, -0.0031373111996799707, -0.0034964873921126127, -0.00013290952483657748, -0.000458254711702466, -0.004732360597699881, -2.795175552368164, -3.7139627933502197, -0.5057857632637024, -0.2610935568809509, -0.14337220788002014, -0.00045193947153165936, -0.08599189668893814, -0.11350386589765549, -0.28687989711761475, -0.0003971264814026654, -1.620544672012329, -0.01801895722746849, -0.469373881816864, -1.1200826168060303, -0.0005501187406480312, -0.0057961721904575825, -0.00015698630886618048, -1.4781842764932662e-05, 0.0, -1.2939867973327637, -0.0021245544776320457, -2.253030106658116e-05, -1.4305104514278355e-06, -7.271740287251305e-06, -0.0005080600967630744, -0.4747467339038849, -0.0034517014864832163, -0.0008005275158211589, -7.152531907195225e-06, -2.9801878554280847e-05, -0.0001147919538198039, -0.0013936578761786222, -1.4002315998077393, -0.6881816983222961, -1.7913477420806885, -2.239504337310791, -0.046633172780275345, -0.0004858981992583722, -0.3899124264717102, -0.0603908896446228, -0.0876893401145935, -1.1046476364135742, -0.002666966989636421, -0.6483299732208252, -0.016195053234696388, -0.01283115055412054, -0.01281726360321045, -0.00657999562099576, -0.0006973695708438754, -0.09659921377897263, -0.4821240305900574, -0.15020549297332764, -1.7881377516459906e-06, -0.0014391313306987286, -0.0006883158930577338, -0.48287948966026306, -0.6548078060150146, -0.06158490478992462, -9.643566590966657e-05, -0.0003756771038752049, -0.02266082912683487, -1.1920922133867862e-06, -0.00022968991834204644, -7.152301259338856e-05, -0.7354565858840942, -2.634490556374658e-05, -0.0007525234250351787, -0.07577170431613922, -0.018982650712132454, -2.884823152271565e-05, -1.1387265920639038, -7.152531907195225e-06, -5.447716102935374e-05, -0.004725242033600807, -0.018161432817578316, -0.00516912154853344, -2.3603161025675945e-05, -0.03190525248646736, -1.1920928244535389e-07, -0.0877348780632019, -0.00015793983766343445, -0.0024688737466931343, -0.0004857790481764823, -0.955941915512085, -0.7516077756881714, -0.04736245051026344, -0.406206876039505, -0.012113458476960659, -0.07011439651250839, -0.001479841535910964, -0.005304903257638216, -0.0013153243344277143, -0.2452124059200287, -0.000760385300964117, -0.006808179430663586, -0.007561632432043552, -0.03471992537379265, -0.00012408917245920748, -1.7881377516459906e-06, 0.0, 0.0, -2.3841855067985307e-07, -3.671578815556131e-05, -2.729855441430118e-05, -0.000724887300748378, -0.2546355426311493, -4.172316494077677e-06, -1.6689286894688848e-06, -0.0017974901711568236, -1.3708974620385561e-05, -0.29505640268325806, -0.008046945556998253, -0.002460311632603407, -5.364403477869928e-06, -0.009523673914372921, -0.1250198632478714, -0.0011681645410135388, -0.043839212507009506, -0.01448907982558012, -2.145764938177308e-06, -4.768370445162873e-07, -1.311301275563892e-06, -3.933898824470816e-06, -7.152555099310121e-07, -0.0002464944263920188, -0.00032574593205936253, -1.6331539882230572e-05, -0.0006579380133189261, -0.07000470161437988, -0.002009873976930976, -0.017491720616817474, -0.0005501187406480312, -2.861018856492592e-06, -4.768370445162873e-07, -1.7404405298293568e-05, -2.3841855067985307e-07, -0.4351527988910675, -0.007610493805259466, -0.4301793575286865], "finish_reason": "stop"}], "metrics": {"energy": 873.5668276081078, "energy_per_token": 3.5655788881963586, "time": 20.567223, "time_per_token": 0.08394784897959183}}
{"outputs": [{"text": "if not Path(source_dir).exists() or not Path(target_dir).exists():\n        raise ValueError(\"Source directory or target directory does not exist.\")\n\n    count = 0\n\n    for ext in extensions:\n        for file in Path(source_dir).glob(f'**/*{ext}'):\n            shutil.move(str(file), target_dir)\n            count += 1\n\n    return count", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "()", " or", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " directory", " or", " target", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "count", " =", " ", "0", "\n", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "glob", "(", "f", "'", "**", "/*", "{", "ext", "}", "')", ":", "\n", "            ", "sh", "util", ".", "move", "(", "str", "(", "file", ")", ",", " target", "_", "dir", ")", "\n", "            ", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " count", "\n", "\n", "#"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.7140657901763916, -0.9024871587753296, -0.036048006266355515, -0.006815283093601465, -0.0015238827327266335, -0.00013696208770852536, -0.04027225822210312, -2.7418097943154862e-06, -1.0728830375228426e-06, -0.00024351492174901068, -5.6622808187967166e-05, -0.030717672780156136, -0.0057248203083872795, -0.002598720835521817, -0.005831609014421701, -0.01930776797235012, -0.009081132709980011, -6.6756979322235566e-06, -0.3496677577495575, -0.08216194808483124, -0.7957020998001099, -1.214348554611206, -0.08482833206653595, -0.01874587871134281, -0.0030269066337496042, -0.08249756693840027, -0.0014646052150055766, -0.007816560566425323, -0.5535234808921814, -0.0068706925958395, -0.0006728292210027575, -0.0008992680232040584, -0.334442675113678, -0.0007076143519952893, -2.1260313987731934, -0.14995762705802917, -0.010764861479401588, -4.970903682988137e-05, -0.012333671562373638, -1.921971321105957, -0.00020692592079285532, -0.15689601004123688, -0.7527623176574707, -0.004407691303640604, -0.007042466197162867, -0.00015531764074694365, -0.0015335239004343748, -0.0077989366836845875, -0.5400789380073547, -0.16406971216201782, -0.22581332921981812, -0.12627306580543518, -0.0007142852991819382, -0.0032487730495631695, -9.179073458653875e-06, -5.960462772236497e-07, -0.001354134758003056, -1.6212332411669195e-05, -0.6702163815498352, -0.03852913901209831, -0.03280698135495186, -0.3794383108615875, -2.5162601470947266, -0.0023618440609425306, -0.0033004595898091793, -0.0008261366747319698, -0.014260291121900082, -0.007530634291470051, -0.00025459862081333995, -0.010980655439198017, -0.005527094937860966, -0.5022489428520203, -1.597391747054644e-05, -1.156323378381785e-05, -0.04013014957308769, -8.701899787411094e-05, -0.625835120677948, -1.5735502529423684e-05, -0.00027295202016830444, -0.024513235315680504, -0.0005557184922508895, -0.1026376336812973, -2.6702524337451905e-05, -4.303362584323622e-05, -0.00962887704372406, -0.021356964483857155, -0.0029937471263110638, -0.007111948449164629, -0.0036621904000639915, -0.002142873592674732, -6.854299135738984e-05, -0.00047791501856409013, -0.09608487039804459, -0.001910886145196855, -0.021056674420833588, -0.0022973830346018076, -0.36330446600914, -0.007818571291863918, -2.875890016555786], "finish_reason": "stop"}], "metrics": {"energy": 395.5476531600953, "energy_per_token": 3.6624782700008827, "time": 8.841521, "time_per_token": 0.08186593518518519}}
{"outputs": [{"text": "if not Path(source_dir).exists():\n        raise ValueError('Directory does not exist!')\n    if not Path(target_dir).exists():\n        raise ValueError('Directory does not exist!')\n\n    files_moved = 0\n\n    for ext in extensions:\n        for file in Path(source_dir).glob(f'*{ext}'):\n            shutil.move(file, target_dir)\n            files_moved += 1\n    return files_moved", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "Directory", " does", " not", " exist", "!", "')", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "Directory", " does", " not", " exist", "!", "')", "\n", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "glob", "(", "f", "'", "*{", "ext", "}", "')", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "            ", "files", "_", "m", "oved", " +=", " ", "1", "\n", "    ", "return", " files", "_", "m", "oved", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.7140657901763916, -0.5253757238388062, -0.008766498416662216, -0.0057725864462554455, -0.013280034996569157, -0.013477057218551636, -8.940656698541716e-06, -1.8080321550369263, -1.9434702396392822, -0.5357921719551086, -0.0028105778619647026, -0.026164118200540543, -2.718160390853882, -0.02358163893222809, -0.0017810686258599162, -0.29211756587028503, -0.13632912933826447, -0.007161897141486406, -0.0034072697162628174, -0.00029237763374112546, -0.009005052968859673, -6.6756979322235566e-06, -1.5497195136049413e-06, -0.0002907091984525323, -2.682172998902388e-05, -0.04392067342996597, -0.0009064141195267439, -0.00042465253500267863, -0.0016317160334438086, -0.0016024379292503, -0.0022514727897942066, -6.9141146923357155e-06, -0.003452533157542348, -0.12330785393714905, -0.0030764653347432613, -9.798523387871683e-05, -0.0025021694600582123, -0.0037446157075464725, -0.0004674295778386295, -0.000198821333469823, -0.5811657905578613, -0.0006485265912488103, -2.241654396057129, -0.5271212458610535, -0.9691726565361023, -0.0014572249492630363, -0.12274432927370071, -0.0380093939602375, -8.177422569133341e-05, -0.004848746117204428, -1.2893640995025635, -0.00031454383861273527, -0.17795796692371368, -1.117563009262085, -0.006139940582215786, -0.009717423468828201, -0.0002083561266772449, -0.0017484629061073065, -0.011789998970925808, -0.8165642023086548, -0.16375188529491425, -0.1864163875579834, -0.19548459351062775, -0.001932421582750976, -0.003752216463908553, -1.7046782886609435e-05, -1.0728830375228426e-06, -0.0017629809444770217, -2.6940935640595853e-05, -1.0339796543121338, -0.07630554586648941, -0.02452358789741993, -0.06690237671136856, -0.3408276438713074, -0.001508409040980041, -0.012714749202132225, -0.0003337303060106933, -0.0001515035255579278, -0.006834581959992647, -0.00532269012182951, -0.38098210096359253, -1.6689160474925302e-05, -1.4066597032069694e-05, -0.036093078553676605, -0.00013410145766101778, -0.40198180079460144, -0.06967531144618988, -0.23625484108924866, -7.188061863416806e-05, -2.8729025871143676e-05, -0.011541619896888733, -0.007340129464864731, -0.003127091098576784, -0.02095150016248226, -2.9802276912960224e-06, -3.099436753473128e-06, 0.0, -0.004913873504847288, -0.002404776168987155, -0.00011014331539627165, -0.0006357794045470655, -2.048017978668213, -0.03171771764755249, -0.006337900646030903, -1.6569954823353328e-05, -5.602820692729438e-06, 0.0, -0.472513347864151, -0.011497781611979008, -0.4060124456882477], "finish_reason": "stop"}], "metrics": {"energy": 419.1580420074464, "energy_per_token": 3.5223364874575327, "time": 9.8916235, "time_per_token": 0.08312288655462184}}
{"outputs": [{"text": "if not Path(source_dir).exists() or not Path(target_dir).exists():\n        raise ValueError('source_dir or target_dir does not exist.')\n    num_moved = 0\n    for ext in extensions:\n        if ext.startswith('.'):\n            ext = ext[1:]\n        for file in Path(source_dir).iterdir():\n            if file.suffix == f'.{ext}' and file.is_file():\n                shutil.move(file, target_dir)\n                num_moved += 1\n    return num_moved", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "()", " or", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "source", "_", "dir", " or", " target", "_", "dir", " does", " not", " exist", ".", "')", "\n", "    ", "num", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "if", " ext", ".", "start", "sw", "ith", "('", ".", "')", ":", "\n", "            ", "ext", " =", " ext", "[", "1", ":]", "\n", "        ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "iter", "dir", "():", "\n", "            ", "if", " file", ".", "suff", "ix", " ==", " f", "'", ".", "{", "ext", "}'", " and", " file", ".", "is", "_", "file", "():", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "                ", "num", "_", "m", "oved", " +=", " ", "1", "\n", "    ", "return", " num", "_", "m", "oved"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.7140657901763916, -0.9024871587753296, -0.036048006266355515, -0.006815283093601465, -0.0015238827327266335, -0.00013696208770852536, -0.04027225822210312, -2.7418097943154862e-06, -1.0728830375228426e-06, -0.00024351492174901068, -5.6622808187967166e-05, -0.030717672780156136, -0.0057248203083872795, -0.002598720835521817, -0.005831609014421701, -0.01930776797235012, -0.009081132709980011, -6.6756979322235566e-06, -1.2673008441925049, -1.922027587890625, -0.027072660624980927, -0.0004873280122410506, -0.08811306208372116, -0.0009815642843022943, -0.00043156370520591736, -0.0001662831346038729, -0.01668311282992363, -0.000545472139492631, -0.004730343818664551, -0.9933480620384216, -0.003344539552927017, -0.0009679876384325325, -1.2880382537841797, -3.194581985473633, -0.021697524935007095, -0.24891291558742523, -0.02546604536473751, -0.9919341802597046, -0.02005981095135212, -3.4450891689630225e-05, -0.005375455133616924, -0.011621159501373768, -0.0942995548248291, -0.6509388089179993, -0.0038459161296486855, -0.00718994764611125, -0.00017736769223120064, -0.0009254701435565948, -0.0031269723549485207, -3.3365020751953125, -1.3442553281784058, -0.7069907784461975, -0.007632025051862001, -2.7656173188006505e-05, -1.1920928244535389e-07, -0.021734153851866722, -0.01260210108011961, -0.00019643761334009469, -0.01751807890832424, -0.0200419332832098, -0.0015216212486848235, -0.3123111128807068, -0.05443049222230911, -0.004492072854191065, -0.07629428058862686, -0.0003418338019400835, -0.00042417587246745825, -0.07507579773664474, -0.019086044281721115, -0.48970746994018555, -0.2567876875400543, -0.14852848649024963, -0.09896648675203323, -0.0007203606073744595, -0.003056142944842577, -6.318072337307967e-06, -6.198863957251888e-06, -0.0013919912744313478, -1.0847986231965479e-05, -1.9107201099395752, -0.0003493413969408721, -0.0001938155182870105, -0.0014848408754915, -0.001166735659353435, -0.009837597608566284, -0.0230197012424469, -9.917721035890281e-05, -0.66134113073349, -1.6689286894688848e-06, -0.42760956287384033, -0.25098204612731934, -0.022965064272284508, -5.8412379075889476e-06, -2.729855441430118e-05, -0.0004040378553327173, -0.9861633777618408, -0.01884426735341549, -0.04392135888338089, -0.015834778547286987, -0.014552406966686249, -5.245195097813848e-06, -0.0003147821989841759, -0.02629162184894085, -0.0024827865418046713, -0.0004573014739435166, -0.12939667701721191, -8.4638240878121e-06, -4.768360213347478e-06, -0.021037299185991287, -6.103329360485077e-05, -0.5500850677490234, -0.023476729169487953, -0.7090368270874023, -0.00012265883560758084, -6.139089964563027e-05, -0.0093770083039999, -0.003757323371246457, -0.0014602008741348982, -0.022348690778017044, -1.2636104656849056e-05, -7.152531907195225e-06, 0.0, -0.0008661571191623807, -0.0006684214458800852, -6.401333666872233e-05, -0.00030894274823367596, -0.028987795114517212, -0.0223302710801363, -0.0013978243805468082, -7.271740287251305e-06, -7.748573807475623e-06, -2.3841855067985307e-07], "finish_reason": "stop"}], "metrics": {"energy": 475.77030133438114, "energy_per_token": 3.3742574562722067, "time": 11.778168, "time_per_token": 0.08353310638297873}}
{"outputs": [{"text": "source = Path(source_dir)\n    target = Path(target_dir)\n\n    if not source.exists() or not source.is_dir():\n        raise ValueError(\"The directory specified by source_dir does not exist.\")\n    if not target.exists() or not target.is_dir():\n        raise ValueError(\"The directory specified by target_dir does not exist.\")\n\n    moved_files = 0\n    for ext in extensions:\n        for file in source.iterdir():\n            if file.suffix == ext:\n                shutil.move(file, target)\n                moved_files += 1\n\n    return moved_files", "tokens": ["source", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", " =", " Path", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "if", " not", " source", ".", "exists", "()", " or", " not", " source", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " directory", " specified", " by", " source", "_", "dir", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " not", " target", ".", "exists", "()", " or", " not", " target", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " directory", " specified", " by", " target", "_", "dir", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " source", ".", "iter", "dir", "():", "\n", "            ", "if", " file", ".", "suff", "ix", " ==", " ext", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " target", ")", "\n", "                ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.4910401105880737, -2.101414203643799, -0.014047437347471714, -0.002545927884057164, -0.0030686217360198498, -2.396077979938127e-05, -4.768360213347478e-06, -0.0015218593180179596, -0.048078130930662155, -0.004436294082552195, -0.07857175916433334, -0.0007076143519952893, -0.00017736769223120064, -0.00011550712952157483, -0.00011574551899684593, -4.6491513785440475e-06, -2.3841855067985307e-07, -0.0007739647408016026, -0.0033024793956428766, -0.5629174709320068, -0.0002455409849062562, -0.10333172231912613, -0.05533131957054138, -0.08088947087526321, -0.0026041902601718903, -0.47641149163246155, -1.0596622228622437, -0.032561808824539185, -0.006939121522009373, -2.9647507667541504, -0.0001494772732257843, -0.0011875727213919163, -4.458328112377785e-05, -0.006301296874880791, -0.10086528211832047, -0.002716662595048547, -0.0014037764631211758, -0.013388372957706451, -0.008021639660000801, -2.861018856492592e-06, -0.1462661325931549, -1.3343545198440552, -1.5008773803710938, -2.5073130130767822, -3.2834677696228027, -0.7466011047363281, -0.46092358231544495, -0.08769971132278442, -0.0025751783978194, -0.06307480484247208, -0.0013463966315612197, -0.00485977903008461, -0.6483709812164307, -0.008266755379736423, -0.0011829291470348835, -0.0004374024283606559, -0.8961051106452942, -0.053651899099349976, -0.015582355670630932, -0.003166069043800235, -0.0005723983631469309, -0.00781111977994442, -0.09329830855131149, -0.0022266136948019266, -0.0041681560687720776, -0.0037716934457421303, -0.0001292145170737058, -0.00038044367101974785, -4.6491513785440475e-06, -0.00018225439998786896, -0.0003399271226953715, -0.0008708022069185972, -0.0004858981992583722, -0.0007457336178049445, -0.0003184764937032014, 0.0, -0.0010190776083618402, -0.00400799885392189, -0.0009332115878351033, -0.0011587579501792789, -0.0007202415145002306, -0.0007133323233574629, -0.0037518602330237627, -0.0005142558366060257, -0.00017677174764685333, -0.0003492222458589822, -0.00013207517622504383, -0.0006182666402310133, -0.0037618363276124, -0.0002553137019276619, -6.0437283536884934e-05, -3.58813522325363e-05, -0.051259469240903854, -0.0003580405900720507, -0.6825758218765259, -0.02129056490957737, -0.08385723829269409, -0.20292986929416656, -0.36899885535240173, -0.13501933217048645, -3.8742269680369645e-05, -0.003974515944719315, -0.45371201634407043, -0.0752386823296547, -0.7599915862083435, -0.00350052653811872, -0.005952725186944008, -0.00019274283840786666, -0.0010746901389211416, -0.002371001522988081, -0.4701257646083832, -0.09268610924482346, -0.2130516618490219, -0.03976178541779518, -0.00016223068814724684, -1.806445598602295, -2.8371408916427754e-05, -0.00013743886665906757, -0.0035417466424405575, -0.0016762267332524061, -0.014711589552462101, -0.03283732011914253, -0.00021109737281221896, -0.15835882723331451, -2.0265558760002023e-06, -0.1962890923023224, -0.0012171011185273528, -0.11361613124608994, -0.0023454318288713694, -0.00038378025055862963, -0.14965437352657318, -1.0967194612021558e-05, -6.556489552167477e-06, -0.014848665334284306, -6.663577369181439e-05, -0.5580773949623108, -0.018707387149333954, -0.015179356560111046, -0.19808579981327057, -0.006701258011162281, -0.0014811508590355515, -0.018363934010267258, -5.8412379075889476e-06, -8.940656698541716e-06, -7.867782187531702e-06, -0.002314747544005513, -0.0010194348869845271, -5.400034933700226e-05, -0.0004893536097370088, -0.6432337164878845, -0.0011400636285543442, -0.02497772127389908, -0.001353777595795691, -1.156323378381785e-05, -5.483612312673358e-06, -0.4981890618801117, -0.006572297774255276, -0.37835562229156494], "finish_reason": "stop"}], "metrics": {"energy": 569.6669607877727, "energy_per_token": 3.6054870935934984, "time": 13.028589, "time_per_token": 0.08245942405063292}}
{"outputs": [{"text": "source_dir = Path(source_dir)\n    target_dir = Path(target_dir)\n\n    if not source_dir.is_dir():\n        raise ValueError(\"Source directory does not exist.\")\n\n    if not target_dir.is_dir():\n        raise ValueError(\"Target directory does not exist.\")\n\n    moved_files = 0\n\n    for extension in extensions:\n        files_to_move = source_dir.glob(f\"*{extension}\")\n\n        for file in files_to_move:\n            shutil.move(file, target_dir)\n            moved_files += 1\n\n    return moved_files", "tokens": ["source", "_", "dir", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "if", " not", " source", "_", "dir", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " target", "_", "dir", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Target", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "files", "_", "to", "_", "move", " =", " source", "_", "dir", ".", "glob", "(", "f", "\"", "*{", "extension", "}\"", ")", "\n", "\n", "        ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.4910401105880737, -0.15119226276874542, -0.6296905875205994, -0.4958654046058655, -0.017801513895392418, -0.002409889828413725, -0.0037072044797241688, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.002807368291541934, -0.04368402808904648, -0.0011549476766958833, -0.04841618612408638, -0.00011669908417388797, -0.00011896379146492109, -0.00040725519647821784, -0.00012194366718176752, -0.00013350549852475524, -0.0001419681793777272, -2.145764938177308e-06, -2.3841855067985307e-07, -0.00029023250681348145, -0.0027963127940893173, -0.45287734270095825, -0.00031549722189083695, -0.11185973882675171, -0.014577431604266167, -0.030357619747519493, -9.65590606938349e-06, -2.407998726994265e-05, -0.0014906733995303512, -0.34919822216033936, -0.00026723151677288115, -0.0036880825646221638, -0.5052964091300964, -0.003145154332742095, -0.001959072658792138, -0.012324015609920025, -0.009631474502384663, -4.291525328881107e-06, -0.11343841999769211, -1.1221120357513428, -0.4452516436576843, -0.010293726809322834, -0.06220165267586708, -0.0003358753747306764, -0.0010618292726576328, -0.499825119972229, -0.0021162275224924088, -0.0006850994541309774, -0.00027366707217879593, -0.5600727200508118, -9.703165414975956e-05, -0.011213378049433231, -0.011435674503445625, -0.0027913199737668037, -2.7418097943154862e-06, -3.6954811548639555e-06, -9.881961887003854e-05, -0.021261507645249367, -7.510157047363464e-06, -0.00011944057769142091, -0.001293775625526905, -0.00012730741582345217, -0.0002636561985127628, -0.005517847836017609, -0.00021371940965764225, -8.344646857949556e-07, -0.0004287039046175778, -0.000336590368533507, -0.003920845687389374, -0.0001618731184862554, -0.0004135706985834986, -1.6331539882230572e-05, -0.00024089295766316354, -0.002451511798426509, -0.0001538873475510627, -4.4225667807040736e-05, -2.4914430468925275e-05, -0.005099860019981861, -0.0005389191792346537, -0.3516972064971924, -0.007349241059273481, -0.02133222483098507, -0.22555115818977356, -0.4581456780433655, -0.13218359649181366, -3.85038583772257e-05, -0.004163170233368874, -0.4519604444503784, -0.00017128908075392246, -0.0505635142326355, -0.5953713655471802, -0.0008344743982888758, -0.002411673776805401, -9.262132516596466e-05, -0.0003580405900720507, -0.00523612555116415, -1.8180689811706543, -0.7961285710334778, -0.18877360224723816, -1.490105023549404e-05, -0.007946070283651352, -0.0007394201820716262, -0.933127760887146, -5.364403477869928e-06, -8.583032467868179e-06, -0.0002858230145648122, -0.2929508090019226, -0.0057037221267819405, -0.022288069128990173, -1.1677138805389404, -0.14914073050022125, -0.0004003438516519964, -0.0052936384454369545, -0.00046456989366561174, -0.003400735557079315, -0.7802385687828064, -0.0003233625029679388, -0.011281156912446022, -0.02363484725356102, -0.11659713089466095, -0.002199494047090411, -1.1801649634435307e-05, -2.3841855067985307e-07, 0.0, -4.768370445162873e-07, -6.210611172718927e-05, -0.000192504478036426, -0.0015562577173113823, -0.2891432046890259, -5.8412379075889476e-06, -3.099436753473128e-06, -0.004288880620151758, -1.5735502529423684e-05, -0.3494288921356201, -0.0076548573561012745, -0.001191501971334219, -9.894321920000948e-06, -8.809178689261898e-05, -0.052253443747758865, -0.0015755394706502557, -0.0034722534473985434, -0.008274677209556103, -2.145764938177308e-06, -2.622600959512056e-06, -3.099436753473128e-06, -0.0006038511055521667, -0.0003331344632897526, -4.23184028477408e-05, -0.00030751267331652343, -0.033493150025606155, -0.00334097514860332, -0.010569663718342781, -0.0011517327511683106, -1.07287787614041e-05, -2.3841830625315197e-06, -1.4321861267089844, -9.536738616588991e-07, -4.0531076592742465e-06, -1.1920922133867862e-06, -1.311301275563892e-06, -2.60919189453125, -0.024144891649484634], "finish_reason": "stop"}], "metrics": {"energy": 557.2691460914615, "energy_per_token": 3.3979825981186678, "time": 13.670553, "time_per_token": 0.08335703048780488}}
{"outputs": [{"text": "# Check if the source directory and target directory exist.\n    source_path = Path(source_dir)\n    target_path = Path(target_dir)\n    if not source_path.is_dir():\n        raise ValueError(\"Source directory does not exist.\")\n    if not target_path.is_dir():\n        raise ValueError(\"Target directory does not exist.\")\n    # Find files in the source directory with matching extensions\n    files = list(source_path.glob(f\"*{extensions[0]}\"))\n    for ext in extensions[1:]:\n        files += list(source_path.glob(f\"*{ext}\"))\n    # Move the files to the target directory\n    moved_count = 0\n    for file in files:\n        shutil.move(file, target_path)\n        moved_count += 1\n    return moved_count", "tokens": ["#", " Check", " if", " the", " source", " directory", " and", " target", " directory", " exist", ".", "\n", "    ", "source", "_", "path", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "path", " =", " Path", "(", "target", "_", "dir", ")", "\n", "    ", "if", " not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " not", " target", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Target", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "#", " Find", " files", " in", " the", " source", " directory", " with", " matching", " extensions", "\n", "    ", "files", " =", " list", "(", "source", "_", "path", ".", "glob", "(", "f", "\"", "*{", "extensions", "[", "0", "]}", "\"", "))", "\n", "    ", "for", " ext", " in", " extensions", "[", "1", ":", "]:", "\n", "        ", "files", " +=", " list", "(", "source", "_", "path", ".", "glob", "(", "f", "\"", "*{", "ext", "}\"", "))", "\n", "    ", "#", " Move", " the", " files", " to", " the", " target", " directory", "\n", "    ", "m", "oved", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "path", ")", "\n", "        ", "m", "oved", "_", "count", " +=", " ", "1", "\n", "    ", "return", " moved", "_", "count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.7178105115890503, -0.4810100197792053, -0.2337503284215927, -1.2912843227386475, -0.20054982602596283, -1.0695165395736694, -1.7134791612625122, -0.16600757837295532, -0.01467740535736084, -0.10414467751979828, -1.7311406135559082, -0.08867602795362473, -0.004572531208395958, -1.3064265251159668, -0.09000477939844131, -1.1207151412963867, -0.06820401549339294, -0.0027718241326510906, -0.0028675172943621874, -0.0019355150870978832, -2.109982233378105e-05, -2.8013790142722428e-05, -0.0012992521515116096, -0.039839569479227066, -0.0014788892585784197, -0.21783986687660217, -0.0002735478919930756, -0.0027891802601516247, -0.00032860602368600667, -0.00011872540198964998, -9.7508447652217e-05, -0.0002915434306487441, -3.3378546504536644e-06, -5.125986263010418e-06, -0.00010442188795423135, -0.0009296386269852519, -0.2157306969165802, -0.024529986083507538, -0.01551827136427164, -0.021549951285123825, -8.106198947643861e-06, -0.0017047885339707136, -0.00044276448898017406, -0.2937072813510895, -0.00012909532233607024, -0.002981148660182953, -0.40239912271499634, -0.0030687404796481133, -0.0026463984977453947, -0.01017278153449297, -0.008583910763263702, -6.198863957251888e-06, -0.09615319967269897, -1.441390037536621, -0.6452139616012573, -0.016366170719265938, -0.06794419884681702, -0.00041368984966538846, -0.0011560192797333002, -0.30102404952049255, -0.001964307390153408, -0.0008744944934733212, -0.0005206898204050958, -0.011252984404563904, -0.037454474717378616, -0.0022826348431408405, -0.0011976935202255845, -7.748573807475623e-06, -0.0010141950333490968, -2.7179348762729205e-05, -0.008761771954596043, -1.0609570381348021e-05, -7.843663479434326e-05, -0.0007108307327143848, -0.00028355870745144784, -0.0003522014303598553, -0.0009378563845530152, -0.0002603192115202546, -1.0728830375228426e-06, -0.000403084559366107, -0.0005667987279593945, -0.0037170620635151863, -0.00040737437666393816, -0.0002610342635307461, -2.7417760065873154e-05, -0.00022182388056535274, -0.0018982740584760904, -0.00017105070583056659, -3.9219088648678735e-05, -4.1126360883936286e-05, -2.361679792404175, -0.1850956231355667, -3.285274028778076, -1.9167087078094482, -1.6950336694717407, -0.07331070303916931, -0.037222497165203094, -0.013110153377056122, -0.17326751351356506, -2.8479621410369873, -0.14262443780899048, -2.274862051010132, -0.0009347598534077406, -1.0327876806259155, -1.1095637083053589, -3.116739273071289, -0.026446856558322906, -0.3195470869541168, -1.168244216387393e-05, -0.0018938715802505612, -0.0005423743859864771, -0.1814659982919693, -0.08389582484960556, -0.15934379398822784, -0.24829243123531342, -0.9505343437194824, -1.5073957443237305, -0.31416600942611694, -0.0019102912629023194, -0.203821063041687, -0.005721738561987877, -0.00992588885128498, -0.30913814902305603, -0.007953520864248276, -0.1791626363992691, -0.5099680423736572, -0.005607114639133215, -0.002237913431599736, -0.01508859172463417, -0.0003693613689392805, -0.002857413375750184, -0.0003081085451412946, -0.006280092056840658, -0.0019308748887851834, -0.03211560845375061, -1.7903504371643066, -0.0899415835738182, -0.0014816269977018237, -0.0015119798481464386, -1.823885577323381e-05, -6.460934673668817e-05, -1.7523612768854946e-05, -0.0006014683749526739, -0.00025555206229910254, -0.002133119385689497, -0.000962151971179992, -0.0007638397510163486, -0.0002019201492657885, -0.0014460355741903186, -0.00041333239641971886, -0.001846038969233632, -0.12929695844650269, -0.08726543933153152, -0.09274967014789581, -0.4770968556404114, -0.4371253252029419, -0.3176351487636566, -0.0019587157294154167, -0.01130873803049326, -0.003498982172459364, -0.48254284262657166, -0.000226472009671852, -0.7541735172271729, -0.01753365807235241, -0.09051202237606049, -1.697585105895996, -0.002463760320097208, -0.021757015958428383, -8.618460560683161e-05, -0.016161154955625534, -0.0012717501958832145, -0.009757679887115955, -0.08238954842090607, -0.04806983470916748, -0.001672775368206203, -0.00026651646476238966, -0.0005585778853856027, -0.0017738097812980413, -0.6935858726501465, -8.22540732769994e-06, -6.079655122448457e-06, -0.003842472331598401, -4.565611743601039e-05, -0.6843166351318359, -0.0418747179210186, -0.006400443147867918, -9.894321920000948e-06, -0.04194685071706772, -0.05019024387001991, -0.003953380510210991, -0.001765955938026309, -0.014272631146013737, -5.364403477869928e-06, -1.0967194612021558e-05, -1.5735502529423684e-05, -0.0013221102999523282, -0.0006833125371485949, -4.339123915997334e-05, -0.0004234609368722886, -0.04046884551644325, -0.2727038860321045, -0.0008690156391821802, -2.6225699912174605e-05, -1.0609570381348021e-05, -1.3049598932266235, -1.6689286894688848e-06, -3.6954811548639555e-06, -9.536738616588991e-07, -1.5497195136049413e-06, -0.081604965031147], "finish_reason": "stop"}], "metrics": {"energy": 754.985271300316, "energy_per_token": 3.595167958572933, "time": 17.447416, "time_per_token": 0.08308293333333333}}
{"outputs": [{"text": "# Check if the source and target directories exist\n    if not Path(source_dir).exists():\n        raise ValueError(f\"Source directory '{source_dir}' does not exist.\")\n    if not Path(target_dir).exists():\n        raise ValueError(f\"Target directory '{target_dir}' does not exist.\")\n\n    # Initialize a counter for moved files\n    moved_files_count = 0\n\n    # Iterate through the files in the source directory\n    for file in Path(source_dir).iterdir():\n        # Check if the file is a file and its extension is in the specified extensions\n        if file.is_file() and file.suffix.lower() in extensions:\n            # Construct the new path for the file in the target directory\n            target_file = Path(target_dir) / file.name\n            # Move the file\n            shutil.move(file, target_file)\n            # Increment the counter\n            moved_files_count += 1\n\n    # Return the count of moved files\n    return moved_files_count", "tokens": ["#", " Check", " if", " the", " source", " and", " target", " directories", " exist", "\n", "    ", "if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Target", " directory", " '", "{", "target", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " a", " counter", " for", " moved", " files", "\n", "    ", "m", "oved", "_", "files", "_", "count", " =", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " files", " in", " the", " source", " directory", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "iter", "dir", "():", "\n", "        ", "#", " Check", " if", " the", " file", " is", " a", " file", " and", " its", " extension", " is", " in", " the", " specified", " extensions", "\n", "        ", "if", " file", ".", "is", "_", "file", "()", " and", " file", ".", "suff", "ix", ".", "lower", "()", " in", " extensions", ":", "\n", "            ", "#", " Construct", " the", " new", " path", " for", " the", " file", " in", " the", " target", " directory", "\n", "            ", "target", "_", "file", " =", " Path", "(", "target", "_", "dir", ")", " /", " file", ".", "name", "\n", "            ", "#", " Move", " the", " file", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "file", ")", "\n", "            ", "#", " In", "crement", " the", " counter", "\n", "            ", "m", "oved", "_", "files", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "#", " Return", " the", " count", " of", " moved", " files", "\n", "    ", "return", " moved", "_", "files", "_", "count", "\n", "\n", "#"], "logprobs": [-1.7178105115890503, -0.4810100197792053, -0.2337503284215927, -1.2912843227386475, -0.20054982602596283, -0.5642408132553101, -0.005476353224366903, -0.014826231636106968, -0.020398244261741638, -0.20037296414375305, -0.00215429300442338, -0.46268337965011597, -0.009104876779019833, -0.1702132225036621, -0.0011605439940467477, -0.004172667395323515, -1.8000440832111053e-05, -4.0531076592742465e-06, -0.0007138088112697005, -0.0004772001120727509, -0.5078244805335999, -0.3733263313770294, -0.0017423938261345029, -0.0020318832248449326, -0.00997652392834425, -0.010613778606057167, -3.2186455882765586e-06, -0.04539165273308754, -0.4080793559551239, -0.1076170802116394, -0.48866236209869385, -0.004526962526142597, -0.5301904678344727, -0.00025281094713136554, -0.002044731518253684, -1.0847986231965479e-05, -3.3378546504536644e-06, -0.0018062957096844912, -0.02596946433186531, -0.00022682955022901297, -0.0013242532731965184, -0.40297165513038635, -0.0024661386851221323, -0.00023719835735391825, -0.00019810620869975537, -0.1407756209373474, -0.020433984696865082, -0.0004687402688432485, -0.0003526780928950757, -3.9934315282152966e-05, -0.0007918321643956006, -7.152555099310121e-07, -2.3841855067985307e-07, -0.00010275312524754554, -1.9311717551317997e-05, -0.004800105467438698, -0.0004961451631970704, -0.00010668662434909493, -0.00041130665340460837, -0.0005109196645207703, -0.0002658013836480677, -0.001190311275422573, -9.393251093570143e-05, -0.0033457274548709393, -5.972207145532593e-05, -0.0013247294118627906, -0.00012265883560758084, -0.0010102650849148631, -3.3378044463461265e-05, -0.0006139777251519263, -5.8412379075889476e-06, -6.318072337307967e-06, -0.0002273062855238095, -0.0001282609737245366, -1.8358061424805783e-05, -3.6000557884108275e-05, -0.0005024601123295724, -5.709961988031864e-05, -2.4914430468925275e-05, -1.811964830267243e-05, -0.057939738035202026, -0.0005277194431982934, -0.2543332278728485, -1.1742626428604126, -0.6532594561576843, -0.2092939019203186, -0.2370881587266922, -1.0647261142730713, -0.0013185387942939997, -0.0073887649923563, -8.332382276421413e-05, -0.20570668578147888, -0.005435450002551079, -0.007305101025849581, -0.31675195693969727, -0.8713811039924622, -0.16771018505096436, -0.001718236249871552, -0.0004278697888366878, -3.838465272565372e-05, -0.00021860594279132783, -0.025950763374567032, -0.0002162222663173452, -0.011252160184085369, -0.9926284551620483, -0.0005926521262153983, -1.4013173580169678, -0.8886715769767761, -0.42347151041030884, -0.013267448171973228, -0.0061493003740906715, -0.006572297774255276, -0.0011818574275821447, -0.019999634474515915, -0.00011252723925281316, -0.022888751700520515, -0.14874404668807983, -0.35187169909477234, -0.15344883501529694, -9.846202738117427e-05, -0.0006242233794182539, -3.099436753473128e-06, -1.1920922133867862e-06, -0.00012432756193447858, -4.410734163684538e-06, -0.1361895352602005, -8.05822346592322e-05, -6.961580220377073e-05, -0.00019703354337252676, -0.02155473455786705, -0.538273811340332, -0.05057620629668236, -0.0014366315444931388, -0.034716010093688965, -0.009221699088811874, -0.19986559450626373, -0.0355851836502552, -1.236140251159668, -0.7341179251670837, -0.8503462672233582, -0.03195628896355629, -0.17604243755340576, -0.03421501815319061, -0.011266658082604408, -1.765593409538269, -0.3406323790550232, -0.501727283000946, -0.00022909401741344482, -0.0019819156732410192, -0.007561159320175648, -2.706014311115723e-05, -0.005203157663345337, -5.8412379075889476e-06, -0.0016718233237043023, -0.0017766657983884215, -0.0001045410826918669, -0.03543124720454216, -4.327203714638017e-05, -0.0005743046058341861, -2.3841855067985307e-07, -1.8223114013671875, -0.0017035985365509987, -4.160317621426657e-05, -0.0024234468583017588, -0.0740700513124466, -0.004657966550439596, -0.0030947669874876738, -0.0020016650669276714, -0.06289022415876389, -1.6126127243041992, -0.006627720780670643, -2.3483362197875977, -1.3008146286010742, -0.30093422532081604, -0.008527768775820732, -0.03425660356879234, -0.1892828792333603, -0.001437583938241005, -0.0024103655014187098, -0.0002127659390680492, -0.01507696695625782, -0.0002762889489531517, -0.8856687545776367, -0.003750553820282221, -0.4112829566001892, -0.6862742304801941, -0.007524955552071333, -0.0009255892946384847, -0.0037411716766655445, -1.4305104514278355e-06, -5.483612312673358e-06, -0.8344243764877319, -0.010396843776106834, -0.009640329517424107, -0.0009109399979934096, -0.00030882356804795563, -0.0005418977816589177, -0.35505637526512146, -0.0532623715698719, -0.0931764617562294, -0.002684919396415353, -0.0006521005416288972, -1.9244341850280762, -0.00048458753735758364, -0.0213918536901474, -1.7881377516459906e-06, -1.1920922133867862e-06, -0.0004998388467356563, -1.4424220353248529e-05, -0.159144327044487, -0.003251981223002076, -0.0014329414116218686, -3.6954811548639555e-06, -8.606540359323844e-05, -0.002315104240551591, -0.0011270844843238592, -0.012464598752558231, -0.06465300917625427, -0.03753209486603737, -9.07141511561349e-05, -0.002300713211297989, -0.26963353157043457, -0.08195757865905762, -0.00020644917094614357, -0.00040046300273388624, -1.1920928244535389e-07, -2.3841855067985307e-07, -3.576278118089249e-07, -2.264974000354414e-06, -2.3841855067985307e-07, -0.00032419670606032014, -0.00022420754248742014, -2.9801878554280847e-05, -0.00101383775472641, -0.04227350279688835, -0.0010490872664377093, -0.7444096207618713, -0.016208190470933914, -0.0007250064518302679, -1.7846605777740479, -0.003084308933466673, -0.0045217410661280155, -0.0002632986579556018, -0.0012711548479273915, -0.00020358874462544918, -0.0040728249587118626, -0.0015213831793516874, -5.960446742392378e-06, -1.3232143828645349e-05, -5.185469490243122e-05, -9.059865078597795e-06, -0.3329673707485199, -0.009936511516571045, -1.4717559814453125], "finish_reason": "stop"}], "metrics": {"energy": 882.150618297577, "energy_per_token": 3.473033930305421, "time": 21.430235, "time_per_token": 0.08437100393700787}}
{"outputs": [{"text": "if not Path(source_dir).exists():\n        raise ValueError(f\"Source directory '{source_dir}' does not exist.\")\n\n    if not Path(target_dir).exists():\n        raise ValueError(f\"Target directory '{target_dir}' does not exist.\")\n\n    count_moved_files = 0\n    for extension in extensions:\n        files = Path(source_dir).glob(f\"*{extension}\")\n        for file in files:\n            shutil.move(file, Path(target_dir, file.name))\n            count_moved_files += 1\n\n    return count_moved_files", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Target", " directory", " '", "{", "target", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "count", "_", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "files", " =", " Path", "(", "source", "_", "dir", ")", ".", "glob", "(", "f", "\"", "*{", "extension", "}\"", ")", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " Path", "(", "target", "_", "dir", ",", " file", ".", "name", "))", "\n", "            ", "count", "_", "m", "oved", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "return", " count", "_", "m", "oved", "_", "files", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.7140657901763916, -0.5253757238388062, -0.008766498416662216, -0.0057725864462554455, -0.013280034996569157, -0.013477057218551636, -8.940656698541716e-06, -0.18654172122478485, -0.3857128918170929, -0.44212156534194946, -0.9707058072090149, -0.036309339106082916, -0.5918026566505432, -0.0007309625507332385, -0.0024785057175904512, -1.2636104656849056e-05, -8.344646857949556e-07, -0.004521503578871489, -0.054846420884132385, -0.0008267321973107755, -0.003933432046324015, -0.4006282389163971, -0.002980791963636875, -0.00031859567388892174, -0.00022623363474849612, -1.6075571775436401, -0.00010287232726113871, -0.01461772806942463, -0.0010568277211859822, -0.0011481605470180511, -6.890059739816934e-05, -0.001321515068411827, -2.622600959512056e-06, -1.1920922133867862e-06, -0.0001802282058633864, -1.9550132492440753e-05, -0.008917978964745998, -0.0006187431863509119, -0.00014125302550382912, -0.0007340597221627831, -0.0005191409145481884, -0.0001685477327555418, -7.152555099310121e-07, -0.00014411364099942148, -0.006931663025170565, -0.00015424491721205413, -0.0042588491924107075, -0.00026246439665555954, -0.003183061955496669, -6.925819616299123e-05, -0.0010243174619972706, -4.529942543740617e-06, -2.50339189733495e-06, -0.0006282739923335612, -0.00024863966973498464, -3.93382906622719e-05, -0.00019560330838430673, -0.0008108903421089053, -0.00018404220463708043, -3.7788631743751466e-05, -2.5510462364763953e-05, -0.01355609018355608, -0.0007515705074183643, -2.25445818901062, -1.922730803489685, -0.2914199233055115, -0.021133126690983772, -0.27978965640068054, -0.005278697237372398, -0.012003333307802677, -0.01570640318095684, -6.16293036728166e-05, -0.0047448184341192245, -0.9903236627578735, -0.12018869817256927, -0.8650233149528503, -0.001409014337696135, -0.0030757521744817495, -0.0001436368766007945, -0.0009889479260891676, -0.004692138638347387, -2.036520481109619, -0.6241039037704468, -0.4666748642921448, -0.0019368238281458616, -0.00553906848654151, -1.4185804502631072e-05, -8.583032467868179e-06, -0.0023409125860780478, -0.00032693761750124395, -0.3885450065135956, -0.009336736053228378, -0.013548563234508038, -1.3356571197509766, -0.5216105580329895, -0.001493054092861712, -0.006787103600800037, -0.00040558696491643786, -0.013402958400547504, -0.11046356707811356, -0.04323820024728775, -0.027074633166193962, -0.0634290874004364, -0.005584354046732187, -0.00019441144831944257, -0.0005688241217285395, -0.001408419106155634, -0.39281392097473145, -5.960446742392378e-06, -4.6491513785440475e-06, -0.017759589478373528, -3.6477376852417365e-05, -0.6018221378326416, -0.06115427613258362, -2.2102928161621094, -0.00015877417172305286, -0.002092435723170638, -9.179073458653875e-06, -3.4570634852570947e-06, -0.9525384902954102, -0.010275320149958134, -0.0026956195943057537, -0.03340483829379082, -0.002737942850217223, -0.005597986746579409, -0.002014394849538803, -0.005657968111336231, -2.1934269170742482e-05, -7.152531907195225e-06, 0.0, -4.291525328881107e-06, -2.145764938177308e-06, -0.002589208772405982, -0.0024855216033756733, -6.294052582234144e-05, -0.0008772339206188917, -0.3079010546207428, -0.0022884628269821405, -0.022383546456694603, -0.0014092524070292711, -2.4199192921514623e-05, -4.6491513785440475e-06, 0.0, -7.271740287251305e-06, -1.4305104514278355e-06, -0.4424363970756531, -0.0072778817266225815, -0.3567521572113037], "finish_reason": "stop"}], "metrics": {"energy": 550.2157950849535, "energy_per_token": 3.504559204362761, "time": 13.433523, "time_per_token": 0.08556384076433121}}
{"outputs": [{"text": "if not Path(source_dir).exists() or not Path(target_dir).exists():\n        raise ValueError(\"Source or target directory does not exist.\")\n    moved_files_count = 0\n    for ext in extensions:\n        for file in Path(source_dir).rglob(f'*{ext}'):\n            if file.is_file():\n                shutil.move(str(file), target_dir)\n                moved_files_count += 1\n    return moved_files_count", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "()", " or", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " or", " target", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "m", "oved", "_", "files", "_", "count", " =", " ", "0", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "rg", "lob", "(", "f", "'", "*{", "ext", "}", "')", ":", "\n", "            ", "if", " file", ".", "is", "_", "file", "():", "\n", "                ", "sh", "util", ".", "move", "(", "str", "(", "file", ")", ",", " target", "_", "dir", ")", "\n", "                ", "m", "oved", "_", "files", "_", "count", " +=", " ", "1", "\n", "    ", "return", " moved", "_", "files", "_", "count", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.7140657901763916, -0.9024871587753296, -0.036048006266355515, -0.006815283093601465, -0.0015238827327266335, -0.00013696208770852536, -0.04027225822210312, -2.7418097943154862e-06, -1.0728830375228426e-06, -0.00024351492174901068, -5.6622808187967166e-05, -0.030717672780156136, -0.0057248203083872795, -0.002598720835521817, -0.005831609014421701, -0.01930776797235012, -0.009081132709980011, -6.6756979322235566e-06, -0.3496677577495575, -0.08216194808483124, -0.7957020998001099, -0.5896080136299133, -0.022504188120365143, -0.017846833914518356, -0.06476351618766785, -0.0007354891858994961, -0.0021990183740854263, -0.49943163990974426, -0.003563603386282921, -0.00041392818093299866, -0.0006637753685936332, -1.5314805507659912, -1.0338588953018188, -0.006550743710249662, -0.03851204738020897, -0.3296184241771698, -1.4746062755584717, -0.1664242148399353, -0.009300832636654377, -0.014929469674825668, -3.397406908334233e-05, -0.00361634255386889, -0.021508533507585526, -0.13599227368831635, -1.0459365844726562, -0.004061071202158928, -0.005632956512272358, -0.0001805857609724626, -0.001069093239493668, -0.0033059250563383102, -0.5055808424949646, -0.12384883314371109, -0.2732492983341217, -0.08141794800758362, -0.0007817073492333293, -0.004663780797272921, -1.2159273865108844e-05, -1.9073468138230965e-06, -0.0011204162146896124, -1.0967194612021558e-05, -0.8355460166931152, -1.9430925021879375e-05, -0.019565915688872337, -0.03242771327495575, -0.5209985375404358, -0.06031277775764465, -0.0018215269083157182, -0.03311275690793991, -6.460934673668817e-05, -9.440929716220126e-05, -0.012240881100296974, -0.002994103590026498, -2.209162473678589, -0.41262006759643555, -0.017614128068089485, -0.09601329267024994, -9.179073458653875e-06, -0.003589141881093383, -0.07279466092586517, -0.004757157526910305, -0.0007454953738488257, -0.21002322435379028, -6.198863957251888e-06, -6.6756979322235566e-06, -0.012655542232096195, -4.649054244509898e-05, -0.7753651738166809, -9.536697689327411e-06, -0.00010966652916977182, -0.007673666812479496, -0.0002441108226776123, -0.058973513543605804, -1.6093124941107817e-05, -5.61460001335945e-05, -0.006950486451387405, -0.013165333308279514, -0.003348816651850939, -0.018381956964731216, -4.291525328881107e-06, -2.264974000354414e-06, -2.3841830625315197e-06, -2.6464111215318553e-05, -2.861018856492592e-06, -0.0015885126776993275, -0.0016624215058982372, -5.471556869451888e-05, -0.00029059001826681197, -0.03135167062282562, -0.021963920444250107, -0.0014627005439251661, -2.9802276912960224e-06, -2.50339189733495e-06, -7.629365427419543e-06, -2.264974000354414e-06, -0.4700949192047119, -0.010435656644403934, -0.4070272743701935], "finish_reason": "stop"}], "metrics": {"energy": 421.69290790557835, "energy_per_token": 3.3467691103617327, "time": 10.307528, "time_per_token": 0.08180577777777777}}
{"outputs": [{"text": "if not os.path.exists(source_dir) or not os.path.exists(target_dir):\n        raise ValueError(\"Source and target directories must exist.\")\n\n    moved_count = 0\n    for ext in extensions:\n        moved_count += move_files_by_ext(source_dir, target_dir, ext)\n\n    return moved_count", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", ")", " or", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " and", " target", " directories", " must", " exist", ".", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "count", " =", " ", "0", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "m", "oved", "_", "count", " +=", " move", "_", "files", "_", "by", "_", "ext", "(", "source", "_", "dir", ",", " target", "_", "dir", ",", " ext", ")", "\n", "\n", "    ", "return", " moved", "_", "count", "\n", "\n", "def"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -2.3493359088897705, -1.645074735279195e-05, -0.0014111570781096816, -2.47952248173533e-05, -0.24036557972431183, -0.0006412595394067466, -0.02373613230884075, -2.062299427052494e-05, -4.0531076592742465e-06, -1.4943246841430664, -0.02553902380168438, -0.0021466801408678293, -0.0020009512081742287, -1.5139465176616795e-05, -0.00011205045302631333, -3.576272320060525e-06, -0.0520978644490242, -0.00018880968855228275, -0.003748534945771098, -7.152531907195225e-06, -6.556489552167477e-06, -0.0030677898321300745, -0.0018167671514675021, -0.005698980763554573, -0.020369043573737144, -0.006079277489334345, -2.861018856492592e-06, -0.16395153105258942, -0.0801820456981659, -0.7810466885566711, -2.3009305000305176, -0.08517838269472122, -0.16346947848796844, -0.05964735895395279, -0.014634056948125362, -0.44162699580192566, -0.0030562616884708405, -0.00030632095877081156, -0.0005053196800872684, -0.25655418634414673, -0.0007314390386454761, -0.9048213362693787, -0.004824070259928703, -0.01640346460044384, -1.836006999015808, -0.007093957159668207, -0.01412666030228138, -1.764281842042692e-05, -0.008241100236773491, -0.3221369683742523, -0.2196241319179535, -0.7621060013771057, -0.001574349240399897, -0.004386446438729763, -0.00013767725613433868, -0.0008613928221166134, -0.002333657816052437, -3.617751359939575, -0.011098320595920086, -0.01705351285636425, -0.021073482930660248, -0.0015262633096426725, -0.5475276112556458, -0.0031058192253112793, -0.06798730790615082, -0.5606232285499573, -0.9043460488319397, -0.00042143522296100855, -1.1945834159851074, -0.02337530255317688, -0.07295447587966919, -0.0009395237429998815, -0.00035232058144174516, -0.009753193706274033, -0.003343826625496149, -1.4185804502631072e-05, -3.576278118089249e-07, -0.0007743220776319504, -0.00486060930415988, -0.05288016051054001, -0.0015207880642265081, -0.27182134985923767, -0.0006469779182225466, -0.07605744153261185, -0.0006032554083503783, -7.986990567587782e-06, -1.0728830375228426e-06, -0.020689155906438828, -0.0013562776148319244, -0.0536678284406662], "finish_reason": "stop"}], "metrics": {"energy": 306.50673581695565, "energy_per_token": 3.3315949545321266, "time": 7.3675838, "time_per_token": 0.08008243260869566}}
{"outputs": [{"text": "if not Path(source_dir).is_dir() or not Path(target_dir).is_dir():\n        raise ValueError(\"source_dir or target_dir does not exist.\")\n    count = 0\n    for ext in extensions:\n        for file in Path(source_dir).rglob(f'*{ext}'):\n            shutil.move(file, target_dir)\n            count += 1\n    return count", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "()", " or", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "source", "_", "dir", " or", " target", "_", "dir", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "rg", "lob", "(", "f", "'", "*{", "ext", "}", "')", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "            ", "count", " +=", " ", "1", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.6741411685943604, -9.345571743324399e-05, -0.005923099350184202, -0.8149400949478149, -0.01824875921010971, -0.004905451089143753, -0.0010461101774126291, -9.7508447652217e-05, -0.005145283881574869, -3.576272320060525e-06, -1.7881377516459906e-06, -0.00016151554882526398, -2.062299427052494e-05, -0.003050676081329584, -2.9802276912960224e-06, -0.0001515035255579278, -0.0038860533386468887, -0.002316293539479375, -0.0053811464458703995, -0.017252136021852493, -0.007463074289262295, -5.125986263010418e-06, -0.4482932984828949, -0.05950022488832474, -1.629451036453247, -0.012722281739115715, -0.0003921216703020036, -0.33934664726257324, -0.0006015875260345638, -0.00025078488397412, -0.00017820201173890382, -0.03659646585583687, -0.0005202132160775363, -0.0728791132569313, -0.48981907963752747, -0.0030194190330803394, -0.0004127365828026086, -0.0007217901293188334, -1.3021514415740967, -1.6962288618087769, -0.16092899441719055, -0.018153591081500053, -4.95898348162882e-05, -0.004927752539515495, -0.011552814394235611, -0.1549578458070755, -0.6882728934288025, -0.00369010167196393, -0.01003777701407671, -0.00020597243565134704, -0.00108159682713449, -0.0029778205789625645, -0.45335161685943604, -0.16401143372058868, -0.16390791535377502, -0.05577607452869415, -0.0007757514831610024, -0.003794020274654031, -1.0490362910786644e-05, -3.099436753473128e-06, -0.0011524471919983625, -1.5735502529423684e-05, -0.954612135887146, -1.7165990357170813e-05, -0.01974008046090603, -0.05607287958264351, -0.5171992778778076, -0.08664636313915253, -0.001503290724940598, -0.04206150025129318, -7.319182623177767e-05, -0.00011359999916749075, -0.01024782843887806, -0.00290198833681643, -0.40532514452934265, -1.1920858014491387e-05, -9.65590606938349e-06, -0.025076543912291527, -8.153582894010469e-05, -0.48220786452293396, -0.05111030489206314, -0.2810072898864746, -3.325883881188929e-05, -2.4437606043647975e-05, -0.0049838596023619175, -0.00525640370324254, -0.002912091789767146, -0.005484770983457565, -0.004075793083757162, -0.0032387918327003717, -4.8636207793606445e-05, -0.00033396866638213396, -0.024405281990766525, -0.01929478906095028, -0.002086011925712228, -0.44734030961990356, -0.011694801971316338, -0.3347862958908081], "finish_reason": "stop"}], "metrics": {"energy": 386.518819451332, "energy_per_token": 3.612325415433009, "time": 8.832155, "time_per_token": 0.0825435046728972}}
{"outputs": [{"text": "if not Path(source_dir).is_dir() or not Path(target_dir).is_dir():\n        raise ValueError(\"source_dir or target_dir does not exist\")\n\n    moved_files_count = 0\n\n    for extension in extensions:\n        for file in os.listdir(source_dir):\n            if file.endswith(extension):\n                source_path = os.path.join(source_dir, file)\n                target_path = os.path.join(target_dir, file)\n                shutil.move(source_path, target_path)\n                moved_files_count += 1\n    return moved_files_count", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "()", " or", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "source", "_", "dir", " or", " target", "_", "dir", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", "_", "count", " =", " ", "0", "\n", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "            ", "if", " file", ".", "end", "sw", "ith", "(", "extension", "):", "\n", "                ", "source", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", "\n", "                ", "target", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", ")", "\n", "                ", "sh", "util", ".", "move", "(", "source", "_", "path", ",", " target", "_", "path", ")", "\n", "                ", "m", "oved", "_", "files", "_", "count", " +=", " ", "1", "\n", "    ", "return", " moved", "_", "files", "_", "count", "\n", "\n", "if"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.6741411685943604, -9.345571743324399e-05, -0.005923099350184202, -0.8149400949478149, -0.01824875921010971, -0.004905451089143753, -0.0010461101774126291, -9.7508447652217e-05, -0.005145283881574869, -3.576272320060525e-06, -1.7881377516459906e-06, -0.00016151554882526398, -2.062299427052494e-05, -0.003050676081329584, -2.9802276912960224e-06, -0.0001515035255579278, -0.0038860533386468887, -0.002316293539479375, -0.0053811464458703995, -0.017252136021852493, -0.007463074289262295, -5.125986263010418e-06, -0.4482932984828949, -0.05950022488832474, -1.629451036453247, -0.012722281739115715, -0.0003921216703020036, -0.33934664726257324, -0.0006015875260345638, -0.00025078488397412, -0.00017820201173890382, -0.03659646585583687, -0.0005202132160775363, -0.0728791132569313, -1.0314984321594238, -0.0006252956227399409, -0.001190192298963666, -0.45767706632614136, -0.0006936766440048814, -0.6613469123840332, -0.008641703985631466, -0.04519421234726906, -0.2605443596839905, -1.0406781435012817, -0.2526471018791199, -0.012517224065959454, -0.011291176080703735, -3.2305197237292305e-05, -0.004312620032578707, -1.0479596853256226, -0.0002548369811847806, -0.1692027747631073, -0.961553692817688, -0.0014454403426498175, -0.005425016395747662, -0.00013326710904948413, -0.0011443501571193337, -0.00848167110234499, -0.8297208547592163, -0.15598848462104797, -0.45551207661628723, -2.5344789028167725, -2.396077979938127e-05, -0.020603444427251816, -1.1920928244535389e-07, -0.0002699726028367877, -0.009816349484026432, -2.0503786799963564e-05, -2.145764938177308e-06, -0.000558220490347594, -0.0035045654512941837, -0.0034353071823716164, -0.23210538923740387, -0.08887816220521927, -0.0010618292726576328, -0.03205984830856323, -1.7881377516459906e-06, -5.960462772236497e-07, -0.0026397404726594687, -0.002829003380611539, -0.03487558662891388, -0.001738466788083315, -0.0007001094636507332, -2.1003575325012207, -0.07190687954425812, -0.2543451488018036, -0.005407705903053284, -0.05499548092484474, -1.0728830375228426e-06, -0.00018523407925385982, -1.537788011773955e-05, -0.0017926113214343786, -3.886147169396281e-05, -0.001212338567711413, -6.556489552167477e-06, -9.536697689327411e-06, -0.00018499570433050394, -0.0005116345710121095, -6.401333666872233e-05, -0.0010055014863610268, -0.0015017433324828744, -0.07016796618700027, -0.0003159739135298878, -0.0005507144378498197, -0.00017796363681554794, -0.001291037304326892, -9.536738616588991e-07, -8.22540732769994e-06, -1.1920928244535389e-07, -5.7338023907504976e-05, -5.674201020156033e-05, -0.0014187756460160017, -2.145764938177308e-06, -4.768360213347478e-06, -0.0004873280122410506, -0.004507263191044331, -0.000766102981287986, -0.00032062159152701497, -0.21154066920280457, -0.10718676447868347, -1.311301275563892e-06, -4.172316494077677e-06, -0.0036222815979272127, -2.169585604860913e-05, -0.002415122464299202, -4.2437604861333966e-05, -2.13382354559144e-05, -0.00014649749209638685, -0.0004306104383431375, -2.622600959512056e-06, -0.0024597172159701586, -0.0005255748401395977, -0.0009926398051902652, -0.002698948374018073, -0.023931803181767464, -1.1920922133867862e-06, -1.5497195136049413e-06, -1.5497195136049413e-06, -1.2755313036905136e-05, -1.7881377516459906e-06, -0.0015531631652265787, -0.0006504327175207436, -3.9219088648678735e-05, -0.00039593485416844487, -2.7367148399353027, -0.024186432361602783, -0.0015337619697675109, -1.07287787614041e-05, -1.9550132492440753e-05, -3.135155202471651e-05, -9.775113539944869e-06, -0.5191249847412109, -0.011767378076910973, -0.3350144922733307], "finish_reason": "stop"}], "metrics": {"energy": 595.7244323158264, "energy_per_token": 3.654751118502003, "time": 13.66064, "time_per_token": 0.0838076073619632}}
{"outputs": [{"text": "if not Path(source_dir).is_dir():\n        raise ValueError(\"Source directory does not exist!\")\n    if not Path(target_dir).is_dir():\n        raise ValueError(\"Target directory does not exist!\")\n    if not extensions:\n        raise ValueError(\"Extensions list is empty!\")\n\n    files_to_move = [\n        file_path for file_path in Path(source_dir).rglob(\"*\")\n        if file_path.suffix in extensions\n    ]\n\n    moved_files = 0\n    for file_path in files_to_move:\n        if Path(target_dir).is_dir():\n            shutil.move(file_path, target_dir)\n            moved_files += 1\n            print(\n                f\"Moved file '{file_path.name}' from '{file_path.parent}' to '{Path(target_dir).resolve()}'.\"\n            )\n        else:\n            print(f\"Target directory '{Path(target_dir).resolve()", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " directory", " does", " not", " exist", "!", "\"", ")", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Target", " directory", " does", " not", " exist", "!", "\"", ")", "\n", "    ", "if", " not", " extensions", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Extensions", " list", " is", " empty", "!", "\"", ")", "\n", "\n", "    ", "files", "_", "to", "_", "move", " =", " [", "\n", "        ", "file", "_", "path", " for", " file", "_", "path", " in", " Path", "(", "source", "_", "dir", ")", ".", "rg", "lob", "(", "\"", "*", "\"", ")", "\n", "        ", "if", " file", "_", "path", ".", "suff", "ix", " in", " extensions", "\n", "    ", "]", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "if", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "            ", "print", "(", "\n", "                ", "f", "\"", "M", "oved", " file", " '", "{", "file", "_", "path", ".", "name", "}'", " from", " '", "{", "file", "_", "path", ".", "parent", "}'", " to", " '", "{", "Path", "(", "target", "_", "dir", ")", ".", "resolve", "()", "}'", ".", "\"", "\n", "            ", ")", "\n", "        ", "else", ":", "\n", "            ", "print", "(", "f", "\"", "Target", " directory", " '", "{", "Path", "(", "target", "_", "dir", ")", ".", "resolve", "()"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.6741411685943604, -9.345571743324399e-05, -0.005923099350184202, -0.5887438058853149, -0.008858902379870415, -0.005258538294583559, -0.012459771707654, -0.005215372424572706, -1.0251946150674485e-05, -0.1999618411064148, -1.0844453573226929, -0.573473334312439, -0.0327090322971344, -0.09223171323537827, -0.001292108790948987, -0.0022442173212766647, -3.0760178565979004, -0.009143621660768986, -0.001468295231461525, -0.001665158779360354, -0.1835843175649643, -0.08329187333583832, -0.0009266611887142062, -0.0009140365873463452, -8.83301836438477e-05, -0.001313419546931982, -3.814689989667386e-06, -2.0265558760002023e-06, -0.00010775939153973013, -1.4543427823809907e-05, -0.0034583541564643383, -2.7418097943154862e-06, -9.953480184776708e-05, -0.0003995097358711064, -0.0007233387441374362, -0.00100740697234869, -0.001025627483613789, -0.00035148640745319426, -8.344646857949556e-07, -0.0023193859960883856, -0.0007238152320496738, -0.010493225418031216, -0.0014734136639162898, -0.0010719512356445193, -0.00017808281700126827, -0.0008859285153448582, -0.005087762605398893, -0.0003393312799744308, -7.390703103737906e-05, -5.185469490243122e-05, -0.8635216951370239, -3.201516628265381, -0.22479024529457092, -0.3631499409675598, -0.02593531459569931, -0.005466038826853037, -0.0006492413813248277, -0.525854229927063, -0.0074208322912454605, -8.344646857949556e-07, -0.012854453176259995, -0.00788823701441288, -1.256477952003479, -0.471550315618515, -0.13207361102104187, -0.0053206742741167545, -0.052947770804166794, -0.004493378102779388, -0.00013279033009894192, -0.0004259632551111281, -0.4644353985786438, -0.000785280775744468, -2.819838762283325, -0.2528088390827179, -1.2043836116790771, -0.00011598391574807465, -0.03661060333251953, -0.03195270895957947, -0.5496323704719543, -0.6288824081420898, -0.011946676298975945, -0.6902394890785217, -2.0687546730041504, -0.28162074089050293, -0.6109988689422607, -0.15520916879177094, -0.000387831823900342, -0.0012412709183990955, -0.010270955041050911, -0.028146594762802124, -0.0005968220066279173, -0.006560336332768202, -1.3470558769768104e-05, -1.311301275563892e-06, -0.00046790618216618896, -0.00019739109848160297, -1.0837913751602173, -1.3112935448589269e-05, -0.45905783772468567, -0.0067784604616463184, -0.01408152561634779, -0.0507330447435379, -0.0003511289251036942, -0.2211776226758957, -0.005612685810774565, -0.003909921273589134, -0.09807690232992172, -2.0265558760002023e-06, -8.344646857949556e-07, -0.0001559135998832062, -0.11884846538305283, -3.576278118089249e-07, -0.14968843758106232, -0.01864011026918888, -0.27044677734375, -0.028786510229110718, -1.9907753085135482e-05, -0.0011193446116521955, -0.5137569904327393, -0.0002926159941125661, -1.1050889492034912, -0.01341813150793314, -0.024752948433160782, -0.3356211185455322, -0.5975704193115234, -0.26570209860801697, -0.00018499570433050394, -0.001942058908753097, -0.16040506958961487, -0.018480850383639336, -0.020575767382979393, -0.1435147374868393, -0.045402247458696365, -0.0011809049174189568, -0.00128020322881639, -1.7881377516459906e-06, -1.1920928244535389e-07, 0.0, -9.536738616588991e-07, -0.0003978414461016655, -0.00022182388056535274, -0.0021257440093904734, -2.7203876972198486, -1.607973337173462, -0.00481991795822978, -0.17367032170295715, -1.0490362910786644e-05, -5.960446742392378e-06, -0.3182590901851654, -0.3256586492061615, -0.7427501082420349, -0.0002369599969824776, -0.020742284134030342, -0.03693830966949463, -0.005152636673301458, -0.0011878109071403742, -0.2767602801322937, -6.198863957251888e-06, -1.4066597032069694e-05, -0.008552826009690762, -5.531158240046352e-05, -0.3255952000617981, -4.9828242481453344e-05, -3.4570634852570947e-06, -0.008680467493832111, -0.08961619436740875, -0.00012361239350866526, -0.0005978942499496043, -0.00811789557337761, -0.0026950249448418617, -0.01293082907795906, -0.042591020464897156, -1.7046782886609435e-05, -5.483612312673358e-06, -3.933898824470816e-06, -0.0021504866890609264, -0.0007074952009133995, -6.651657167822123e-05, -0.00043275527423247695, -2.673238515853882, -0.09566234797239304, -0.006367750931531191, -3.0540614128112793, -0.0033289750572293997, -0.05192438140511513, -0.12600794434547424, -0.8708550930023193, -0.1012013703584671, -0.7689448595046997, -1.2036302089691162, -0.0004864939546678215, -0.046732835471630096, -0.0001110968878492713, -2.109982233378105e-05, -0.21730953454971313, -0.04118318110704422, -0.0043260324746370316, -0.4602207839488983, -0.07023853063583374, -0.0005787128466181457, -0.5241209268569946, -9.417489309271332e-06, -2.622600959512056e-06, -0.034905288368463516, -0.001459962804801762, -0.3644992709159851, -0.020285874605178833, -0.007757773622870445, -0.0010403940686956048, -1.753446102142334, -0.0014969820622354746, -0.0034528893884271383, -6.556489552167477e-06, -3.135155202471651e-05, -0.5052467584609985, -0.003914433531463146, -0.8029181957244873, -0.004842814523726702, -0.008115649223327637, -1.3237452507019043, -0.0037664680276066065, -0.39775586128234863, -0.005002244841307402, -1.7762025890988298e-05, -0.0038156339433044195, -0.3809434771537781, -0.004141801502555609, -6.9141146923357155e-06, -0.0008993871742859483, -0.00024482590379193425, -0.16108080744743347, -0.0005018643569201231, -0.49687182903289795, -0.0008616310660727322, -0.79132080078125, -0.01679319329559803, -0.30583491921424866, -0.00034171465085819364, -1.8421752452850342, -0.00017414960893802345, -0.0006460248259827495, -7.748573807475623e-06, -9.536697689327411e-06, -0.10036574304103851, -0.000440262199845165, -0.0271652452647686, -0.0009395237429998815], "finish_reason": "length"}], "metrics": {"energy": 889.181903796196, "energy_per_token": 3.4733668117038907, "time": 22.063961, "time_per_token": 0.08618734765625}}
{"outputs": [{"text": "if not Path(source_dir).is_dir():\n        raise ValueError(f\"source_dir '{source_dir}' is not a valid directory\")\n    if not Path(target_dir).is_dir():\n        raise ValueError(f\"target_dir '{target_dir}' is not a valid directory\")\n\n    # Calculate the number of files before moving.\n    total_files = sum(1 for file in Path(target_dir).iterdir())\n\n    # Move the files with the specified extensions.\n    for extension in extensions:\n        for file in Path(source_dir).iterdir():\n            if file.suffix == extension:\n                shutil.move(file, target_dir)\n\n    # Calculate the number of files after moving.\n    moved_files = sum(1 for file in Path(target_dir).iterdir()) - total_files\n\n    return moved_files", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "source", "_", "dir", " '", "{", "source", "_", "dir", "}'", " is", " not", " a", " valid", " directory", "\"", ")", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "target", "_", "dir", " '", "{", "target", "_", "dir", "}'", " is", " not", " a", " valid", " directory", "\"", ")", "\n", "\n", "    ", "#", " Calculate", " the", " number", " of", " files", " before", " moving", ".", "\n", "    ", "total", "_", "files", " =", " sum", "(", "1", " for", " file", " in", " Path", "(", "target", "_", "dir", ")", ".", "iter", "dir", "())", "\n", "\n", "    ", "#", " Move", " the", " files", " with", " the", " specified", " extensions", ".", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "iter", "dir", "():", "\n", "            ", "if", " file", ".", "suff", "ix", " ==", " extension", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "#", " Calculate", " the", " number", " of", " files", " after", " moving", ".", "\n", "    ", "m", "oved", "_", "files", " =", " sum", "(", "1", " for", " file", " in", " Path", "(", "target", "_", "dir", ")", ".", "iter", "dir", "())", " -", " total", "_", "files", "\n", "\n", "    ", "return", " moved", "_", "files", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9192169904708862, -0.038112103939056396, -0.25383493304252625, -0.0016933638835325837, -0.010701529681682587, -1.3112935448589269e-05, -2.145764938177308e-06, -0.001784638618119061, -0.0015495923580601811, -0.6741411685943604, -9.345571743324399e-05, -0.005923099350184202, -0.5887438058853149, -0.008858902379870415, -0.005258538294583559, -0.012459771707654, -0.005215372424572706, -1.0251946150674485e-05, -0.1999618411064148, -0.44520893692970276, -0.37650683522224426, -3.569607973098755, -0.1194167211651802, -0.0021906918846070766, -1.093614935874939, -0.0014497257070615888, -0.006000717636197805, -9.298280929215252e-06, -6.437280717364047e-06, -0.007166039664298296, -2.864084482192993, -0.08086495101451874, -0.18218380212783813, -1.2827523946762085, -0.05999207869172096, -0.5102024674415588, -0.000501030299346894, -0.000976800569333136, -0.20725615322589874, -0.043632104992866516, -0.001210909802466631, -0.001013718661852181, -7.343022298300639e-05, -0.00151305110193789, -3.2186455882765586e-06, -7.152555099310121e-07, -0.00012087091454304755, -9.65590606938349e-06, -0.005895131733268499, -4.172238186583854e-05, -0.00023862851958256215, -0.000522357877343893, -0.000713213172275573, -0.001293299370445311, -0.0009496469865553081, -0.0003746046277228743, -1.311301275563892e-06, -0.0005231918767094612, -0.013160744681954384, -0.000505677133332938, -0.015029055997729301, -0.0005545270396396518, -0.0004391897819004953, -0.004306447692215443, -0.00025781645672395825, -0.004830832593142986, -9.059865078597795e-06, -8.583032467868179e-06, -0.0012732979375869036, -0.0009647720726206899, -0.0001928620331455022, -0.00047946401173248887, -0.0009954979177564383, -0.0003846143954433501, -0.0013188959565013647, -6.8662193370983e-05, -3.969590397900902e-05, -0.45705267786979675, -0.0005993238883093, -3.310587167739868, -4.878082752227783, -0.2698909342288971, -0.875941812992096, -0.0013011569390073419, -0.3126516044139862, -2.3767051696777344, -0.31378135085105896, -3.09194016456604, -0.011192277073860168, -0.0007845661020837724, -2.912827968597412, -0.01365616638213396, -0.055436212569475174, -0.10460131615400314, -0.2967359125614166, -0.051364220678806305, -0.758063554763794, -0.0017776177264750004, -0.9869106411933899, -0.04458888620138168, -0.15071089565753937, -0.0010162194957956672, -1.3353216648101807, -7.152531907195225e-06, -7.152555099310121e-07, -0.0006148116663098335, -4.446407547220588e-05, -0.3732915222644806, -0.001760838902555406, -1.6095491647720337, -0.016923420131206512, -0.08780039101839066, -0.00032550760079175234, -0.6184061765670776, -0.3156184256076813, -0.6508686542510986, -0.12084567546844482, -0.8385100364685059, -0.46293410658836365, -0.24015116691589355, -0.02983083575963974, -0.18521270155906677, -0.0009217780898325145, -0.0003093002596870065, -0.22944138944149017, -1.3342292308807373, -0.0004180987598374486, -0.0035331938415765762, -0.00023576818057335913, -0.00034671969478949904, -0.0018640062771737576, -0.2756468653678894, -0.07199640572071075, -0.10206244885921478, -0.009084203280508518, -0.00044228785554878414, -0.013451887294650078, -1.1920922133867862e-06, 0.0, -0.006755608133971691, -2.3364747903542593e-05, -0.6244189143180847, -0.000797192333266139, -4.994744449504651e-05, -0.00056429672986269, -0.000846266164444387, -0.026636891067028046, -0.0271789338439703, -0.00038509105797857046, -0.13765893876552582, -1.311301275563892e-06, -0.22652983665466309, -0.0011507801245898008, -0.07866553217172623, -0.00350812915712595, -0.0004047528200317174, -0.06855103373527527, -4.768360213347478e-06, -5.483612312673358e-06, -0.005175525788217783, -7.60526381782256e-05, -0.5571872591972351, -0.018458029255270958, -0.38813546299934387, -0.00010168035078095272, -0.0001284993631998077, -0.00852114986628294, -0.0037367772310972214, -0.09961262345314026, -0.0071037812158465385, -0.008317947387695312, -0.057805854827165604, -0.0781741812825203, -0.03687489032745361, -0.00033778208307921886, -0.9381039142608643, -0.040623266249895096, -0.0032456836197525263, -0.2971441149711609, -0.0020360471680760384, -0.00015090756642166525, -0.211674764752388, -5.280832192511298e-05, -0.0006200536736287177, -0.002622500527650118, -0.004431427922099829, -0.026735318824648857, -0.0008204193436540663, -0.0015368566382676363, -0.00010775939153973013, -0.011861390434205532, -8.11782301752828e-05, -0.00022802136663813144, -3.0397906812140718e-05, -0.0010892179561778903, -1.6689286894688848e-06, -4.768370445162873e-07, -3.325883881188929e-05, -3.4570634852570947e-06, -0.00010561384988250211, 0.0, -0.007690110243856907, -0.017524754628539085, -0.0003432638186495751, -4.768370445162873e-07, -5.960462772236497e-07, -0.0008903353591449559, -0.22499530017375946, -0.00024732868769206107, -0.2227487415075302, -0.002234939718618989, -1.0609570381348021e-05, -2.7418097943154862e-06, -1.8620725870132446, -9.536738616588991e-07, -1.9073468138230965e-06, -1.0728830375228426e-06, -1.6689286894688848e-06, -0.07238047569990158], "finish_reason": "stop"}], "metrics": {"energy": 765.7612771625522, "energy_per_token": 3.496626836358686, "time": 18.29127, "time_per_token": 0.08352178082191782}}
