{"outputs": [{"text": "source_dir = Path(source_dir)\n    target_dir = Path(target_dir)\n    if not source_dir.exists():\n        raise ValueError(f'Source directory {source_dir} not found')\n    if not target_dir.exists():\n        raise ValueError(f'Target directory {target_dir} not found')\n    extensions = [ext.lower() for ext in extensions]\n    count = 0\n    for file in source_dir.glob('**/*'):\n        if file.suffix.lower() in extensions:\n            shutil.move(str(file), str(target_dir))\n            count += 1\n    return count", "tokens": ["source", "_", "dir", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "dir", ")", "\n", "    ", "if", " not", " source", "_", "dir", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "Source", " directory", " {", "source", "_", "dir", "}", " not", " found", "')", "\n", "    ", "if", " not", " target", "_", "dir", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "Target", " directory", " {", "target", "_", "dir", "}", " not", " found", "')", "\n", "    ", "extensions", " =", " [", "ext", ".", "lower", "()", " for", " ext", " in", " extensions", "]", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " source", "_", "dir", ".", "glob", "('", "**", "/*", "')", ":", "\n", "        ", "if", " file", ".", "suff", "ix", ".", "lower", "()", " in", " extensions", ":", "\n", "            ", "sh", "util", ".", "move", "(", "str", "(", "file", ")", ",", " str", "(", "target", "_", "dir", "))", "\n", "            ", "count", " +=", " ", "1", "\n", "    ", "return", " count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.5760852098464966, -0.08438897132873535, -0.07118818908929825, -0.3076334595680237, -0.020370326936244965, -0.002329970942810178, -0.0010141950333490968, -3.2782016205601394e-05, -2.3364747903542593e-05, -0.0011830481234937906, -0.08262599259614944, -0.00865919515490532, -0.1827930510044098, -0.0002553137019276619, -0.00021300431399140507, -0.0002431573811918497, -0.00015221867943182588, -7.080780778778717e-05, -0.00028379703871905804, -6.05564855504781e-05, -1.7165990357170813e-05, -8.868777513271198e-05, -0.0010515881003811955, -0.5168532133102417, -0.204554483294487, -0.1003931313753128, -0.04387606307864189, -4.386805812828243e-05, -3.075552376685664e-05, -0.0009220162755809724, -0.1472133845090866, -0.09543254971504211, -0.018629346042871475, -0.0023612494114786386, -0.023294245824217796, -0.007056552451103926, -3.242440288886428e-05, -0.6017016768455505, -0.38113129138946533, -0.8319408297538757, -0.6596989631652832, -0.12388095259666443, -0.33857277035713196, -0.0022832294926047325, -7.807903602952138e-05, -0.00011097769311163574, -0.03838907554745674, -2.7060294151306152, -0.0840688943862915, -0.895050585269928, -0.0019076736643910408, -0.03108707256615162, -0.039977025240659714, -0.0037410527002066374, -0.007392906583845615, -6.079655122448457e-06, -1.2874520507466514e-05, -0.0001072826053132303, -0.009286542423069477, -0.0015548295341432095, -0.000316212244797498, -0.00027247529942542315, -0.08754583448171616, -0.0001829695247579366, -1.0013530300057027e-05, -0.001891610911116004, -0.0005254556890577078, -0.002408819505944848, -0.014606684446334839, -0.001785828499123454, -0.002193070948123932, -0.018022118136286736, -3.1470757676288486e-05, -0.00010346830822527409, -0.000620768463704735, -0.0013149671722203493, -0.0006948678637854755, -0.0010417040903121233, -0.0011532806092873216, -0.6141977310180664, -1.9729149341583252, -0.1145232617855072, -0.5847532749176025, -0.7790432572364807, -0.17782236635684967, -1.4365272521972656, -0.20990504324436188, -0.11856982856988907, -0.0005422552349045873, -0.00016342257731594145, -0.0055576809681952, -0.04439573362469673, -0.048952799290418625, -0.20642688870429993, -2.493243932723999, -0.013165215030312538, -0.015071682631969452, -0.000144709600135684, -0.013232155703008175, -0.09769663214683533, -0.04978496581315994, -0.5293944478034973, -0.25436630845069885, -0.09637904912233353, -9.179073458653875e-06, -8.821448318485636e-06, -2.539125671319198e-05, -1.4090056419372559, -0.17399261891841888, -1.8234081268310547, -0.005250236950814724, -0.24672529101371765, -0.00028701478731818497, -0.0219319649040699, -0.0012754409108310938, -0.11835147440433502, -0.12394193559885025, -0.00022849810193292797, -1.5127804279327393, -2.372236667724792e-05, -0.11713676899671555, -0.0019904817454516888, -0.0012571059633046389, -0.06137022748589516, -0.001847109873779118, -0.10127182304859161, -0.0037290574982762337, -0.0005656072753481567, -0.6383010745048523, -7.152301259338856e-05, -4.768360213347478e-06, -0.009045337326824665, -0.00034445550409145653, -1.1532632112503052, -7.188061863416806e-05, -0.0011936451774090528, -0.02815505489706993, -0.00010895135346800089, -0.6830645203590393, -0.0013087764382362366, -0.022588223218917847, -1.0967194612021558e-05, -2.861018856492592e-06, -0.6374651789665222, -0.00782886240631342, -0.0013380631571635604, -0.019892362877726555, -0.005002363584935665, -0.0035137124359607697, -1.2278481335670222e-05, -0.0010383697226643562, -0.04081245884299278, -0.09190043061971664, -0.0010971962474286556, -1.1063811779022217, -1.1920922133867862e-06, -3.576278118089249e-07, -9.715084888739511e-05, -6.985420623095706e-05, -0.05953998491168022], "finish_reason": "stop"}], "metrics": {"energy": 211.36649286270136, "energy_per_token": 1.3210405803918834, "time": 7.9761977, "time_per_token": 0.049851235625000004}}
{"outputs": [{"text": "if not Path(source_dir).exists():\n        raise ValueError(f\"{source_dir} does not exist\")\n    if not Path(target_dir).exists():\n        raise ValueError(f\"{target_dir} does not exist\")\n\n    moved_files = 0\n    for file_path in Path(source_dir).glob(\"*\"):\n        if file_path.is_file() and file_path.suffix in extensions:\n            shutil.move(str(file_path), str(Path(target_dir) / file_path.name))\n            moved_files += 1\n    return moved_files", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "source", "_", "dir", "}", " does", " not", " exist", "\"", ")", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "target", "_", "dir", "}", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " Path", "(", "source", "_", "dir", ")", ".", "glob", "(", "\"", "*", "\"", "):", "\n", "        ", "if", " file", "_", "path", ".", "is", "_", "file", "()", " and", " file", "_", "path", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "sh", "util", ".", "move", "(", "str", "(", "file", "_", "path", ")", ",", " str", "(", "Path", "(", "target", "_", "dir", ")", " /", " file", "_", "path", ".", "name", "))", "\n", "            ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.1855026483535767, -0.1673680990934372, -0.16622605919837952, -0.025812646374106407, -0.00987324584275484, -0.00013791563105769455, -3.969590397900902e-05, -0.001715261023491621, -0.0004383556661196053, -0.27787116169929504, -0.06675697863101959, -0.01265671942383051, -0.003562177997082472, -0.04697433114051819, -0.008674204349517822, -3.218599158572033e-05, -0.5200412273406982, -0.28106263279914856, -0.8018671274185181, -1.409083366394043, -0.003890684340149164, -6.568216485902667e-05, -0.00035494225448928773, -0.062413573265075684, -0.27843016386032104, -0.0010900514898821712, -0.015043969266116619, -0.59459388256073, -0.00018487652414478362, -0.00481790117919445, -0.23421353101730347, -0.13497453927993774, -0.0054441047832369804, -0.0005385617259889841, -0.00023827097902540118, -0.005347590893507004, -1.0490362910786644e-05, -1.597391747054644e-05, -0.00022301571152638644, -2.6702524337451905e-05, -0.023508168756961823, -0.0012512720422819257, -0.0005153281381353736, -0.0004403813509270549, -0.09999227523803711, -0.00022957073815632612, -1.0490362910786644e-05, -0.0004829194222111255, -0.0012444854946807027, -0.0021400186233222485, -0.0017680978635326028, -0.02131565473973751, -2.169585604860913e-05, -0.00028796817059628665, -0.0004247716860845685, -0.0021766559220850468, -0.0003234816831536591, -0.0009732277248986065, -0.0037279885727912188, -0.00020990552729927003, -0.0006920088781043887, -0.4531606137752533, -0.0008335214806720614, -1.2793903350830078, -0.05182794854044914, -0.25103759765625, -0.1715146005153656, -0.0631021112203598, -0.04698343202471733, -9.619726915843785e-05, -0.008887732401490211, -0.39567387104034424, -0.12761566042900085, -0.5512255430221558, -1.2142318487167358, -0.9184421896934509, -0.002693836111575365, -0.0455588735640049, -0.0007113072206266224, -0.00099871342536062, -0.00019691436318680644, -1.2993727978027891e-05, -0.00015352977789007127, -6.627816765103489e-05, -0.8972569704055786, -0.8008286356925964, -0.2900655269622803, -0.4852786958217621, -0.5758255124092102, -0.024314653128385544, -0.011902385391294956, -0.0027505443431437016, -0.21095755696296692, -0.0968032106757164, -0.00024351492174901068, -5.602679812000133e-05, -0.0001565095444675535, -1.2591166496276855, -7.390948667307384e-06, -0.01894252933561802, -0.1726551353931427, -0.00541944382712245, -0.36678817868232727, -0.0023958568926900625, -0.00019441144831944257, -9.512448741588742e-05, -0.03452635556459427, -2.6940935640595853e-05, -0.46774065494537354, -0.002009873976930976, -0.006782012525945902, -0.0030430699698626995, -0.0012636542087420821, -0.4131205081939697, -6.818538531661034e-05, -8.702239938429557e-06, -0.014653205871582031, -0.00014077626110520214, -1.249730110168457, -5.829164365422912e-05, -0.0018745961133390665, -1.3351351299206726e-05, -2.0265558760002023e-06, -0.02481609396636486, -0.00011228884250158444, -1.161461353302002, -0.0009790633339434862, -0.18222612142562866, -0.0017571499338373542, -0.018074218183755875, -4.8636207793606445e-05, -1.2159273865108844e-05, -0.32482001185417175, -0.35146579146385193, -0.12010317295789719, -6.294052582234144e-05, -0.0002548369811847806, -0.021012434735894203, -0.06790532916784286, -0.004664967302232981, -0.014336442574858665, -0.002316531492397189, -0.014018167741596699, -6.318072337307967e-06, -1.156323378381785e-05, -1.1444026313256472e-05, -0.0024148847442120314, -0.0026642323937267065, -1.1801649634435307e-05, -0.0012625826057046652, -0.6130437254905701, -0.06330858170986176, -0.0013430631952360272, -4.4225667807040736e-05, -1.168244216387393e-05, -0.7995666265487671, -0.010152839124202728, -0.6416763067245483], "finish_reason": "stop"}], "metrics": {"energy": 207.31244175910945, "energy_per_token": 1.3121040617665154, "time": 7.5349774, "time_per_token": 0.04768973037974684}}
{"outputs": [{"text": "if not Path(source_dir).is_dir():\n        raise ValueError('source_dir does not exist')\n\n    if not Path(target_dir).is_dir():\n        raise ValueError('target_dir does not exist')\n\n    source_dir = Path(source_dir)\n    target_dir = Path(target_dir)\n    moved_files = 0\n\n    for file_name in source_dir.iterdir():\n        if file_name.suffix in extensions:\n            shutil.move(str(file_name), str(target_dir / file_name.name))\n            moved_files += 1\n\n    return moved_files", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "('", "source", "_", "dir", " does", " not", " exist", "')", "\n", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "('", "target", "_", "dir", " does", " not", " exist", "')", "\n", "\n", "    ", "source", "_", "dir", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "dir", ")", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "\n", "    ", "for", " file", "_", "name", " in", " source", "_", "dir", ".", "iter", "dir", "():", "\n", "        ", "if", " file", "_", "name", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "sh", "util", ".", "move", "(", "str", "(", "file", "_", "name", ")", ",", " str", "(", "target", "_", "dir", " /", " file", "_", "name", ".", "name", "))", "\n", "            ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.1855026483535767, -0.1673680990934372, -0.16622605919837952, -0.025812646374106407, -0.00987324584275484, -0.00013791563105769455, -3.969590397900902e-05, -0.001715261023491621, -0.0004383556661196053, -1.4309968948364258, -0.00023600654094479978, -0.007248768582940102, -0.1508864164352417, -0.013317207805812359, -0.0036751364823430777, -0.057314611971378326, -0.0063887168653309345, -3.2305197237292305e-05, -0.9426394104957581, -0.6284030675888062, -0.031374432146549225, -0.001378896413370967, -0.963043212890625, -0.0005488081369549036, -0.011073091067373753, -0.27659618854522705, -0.002148345345631242, -1.958331823348999, -0.00024148885859176517, -0.06604483723640442, -0.0035200081765651703, -0.00033778208307921886, -0.0004528927383944392, -0.0025680442340672016, -2.002696055569686e-05, -2.825220326485578e-05, -0.00014590153296012431, -5.304672595229931e-05, -0.007143551483750343, -4.255681051290594e-05, -6.365573790390044e-05, -0.0013108003186061978, -0.0004477690381463617, -0.00042500998824834824, -0.06603412330150604, -0.00025281094713136554, -2.4676019165781327e-05, -0.002281088614836335, -0.009487304836511612, -0.0013827058719471097, -0.00038723601028323174, -0.0018634112784639, -0.0002127659390680492, -0.0005554801900871098, -0.0008102948195300996, -0.0009214208112098277, -0.01490891631692648, -0.0007418026216328144, -2.5305418968200684, -0.08075950294733047, -0.6534956097602844, -0.27260613441467285, -0.025289040058851242, -0.0013012760318815708, -0.000985136954113841, -9.298280929215252e-06, -1.883488948806189e-05, -0.0006999903125688434, -0.2533448338508606, -0.03148752450942993, -0.06557951122522354, -0.00043096792069263756, -0.00037019551382400095, -0.000393432448618114, -0.00011562632425921038, -0.00011860620725201443, -0.00018142008048016578, -1.0132738680113107e-05, -1.0967194612021558e-05, -0.00012134769349358976, -0.0010665925219655037, -1.8032668828964233, -1.7731866836547852, -0.051584336906671524, -0.26075196266174316, -0.2804543972015381, -0.06190677359700203, -0.04950375854969025, -9.321732068201527e-05, -0.010424685664474964, -0.15424557030200958, -0.0001618731184862554, -0.07391052693128586, -0.26169541478157043, -1.2833014726638794, -0.7330225110054016, -0.011853261850774288, -0.24903251230716705, -1.0013530300057027e-05, -6.353653589030728e-05, -1.6331539882230572e-05, -0.45293259620666504, -0.0004167880106251687, -0.0002946419408544898, -0.006462864112108946, -0.0032528128940612078, -0.1304323375225067, -0.08783663809299469, -0.00014482879487331957, -0.00010513706365600228, -0.00013660451804753393, -0.5078824758529663, -3.111314072157256e-05, -0.47494545578956604, -0.0032946374267339706, -0.09326279908418655, -0.005865859799087048, -0.0014640099834650755, -0.6142781376838684, -4.6132929128361866e-05, -7.390948667307384e-06, -0.007755525875836611, -0.00019786784832831472, -0.7330880165100098, -0.00013362467871047556, -0.01213147770613432, -5.722029527532868e-06, -0.00012635385792236775, -0.04190512374043465, -0.00013433984713628888, -0.45943453907966614, -0.0016304069431498647, -0.008262972347438335, -1.4185804502631072e-05, -5.722029527532868e-06, -0.8330802917480469, -0.0507364422082901, -3.802703940891661e-05, -1.8000440832111053e-05, -0.03517232835292816, -0.12396446615457535, -0.0035576641093939543, -0.015136617235839367, -0.0019173111068084836, -0.01705925539135933, -5.8412379075889476e-06, -1.8715683836489916e-05, -1.2993727978027891e-05, -0.002319623716175556, -0.0025739893317222595, -1.2397689715726301e-05, -0.001347706071101129, -0.03340195491909981, -0.0008119623525999486, -0.0508931428194046, -0.0013268723851069808, -3.123234637314454e-05, -1.1086402082582936e-05, -0.842361330986023, -0.009441841393709183, -0.7376291155815125], "finish_reason": "stop"}], "metrics": {"energy": 224.9391913146972, "energy_per_token": 1.3971378342527778, "time": 7.5319624, "time_per_token": 0.046782375155279506}}
{"outputs": [{"text": "# Create Path objects for source_dir and target_dir\n    source_dir_path = Path(source_dir)\n    target_dir_path = Path(target_dir)\n\n    # Check if source_dir or target_dir exist\n    if not source_dir_path.is_dir():\n        raise ValueError(f\"{source_dir} does not exist.\")\n    if not target_dir_path.is_dir():\n        raise ValueError(f\"{target_dir} does not exist.\")\n\n    # Check if target_dir is not the source_dir\n    if source_dir_path.resolve().is_dir() and target_dir_path.resolve().is_dir():\n        raise ValueError(\"Cannot move files into themselves.\")\n\n    # Get files in source_dir with specified extensions\n    files = list(source_dir_path.rglob(f\"*{'.'.join(extensions)}\"))\n\n    # Move files to target_dir\n    moved_count = 0\n    for file in files:\n        shutil.move(str", "tokens": ["#", " Create", " Path", " objects", " for", " source", "_", "dir", " and", " target", "_", "dir", "\n", "    ", "source", "_", "dir", "_", "path", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "dir", "_", "path", " =", " Path", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Check", " if", " source", "_", "dir", " or", " target", "_", "dir", " exist", "\n", "    ", "if", " not", " source", "_", "dir", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "source", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " not", " target", "_", "dir", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "target", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " target", "_", "dir", " is", " not", " the", " source", "_", "dir", "\n", "    ", "if", " source", "_", "dir", "_", "path", ".", "resolve", "()", ".", "is", "_", "dir", "()", " and", " target", "_", "dir", "_", "path", ".", "resolve", "()", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "C", "annot", " move", " files", " into", " themselves", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " files", " in", " source", "_", "dir", " with", " specified", " extensions", "\n", "    ", "files", " =", " list", "(", "source", "_", "dir", "_", "path", ".", "rg", "lob", "(", "f", "\"", "*{", "'", ".", "'", ".", "join", "(", "extensions", ")}", "\"", "))", "\n", "\n", "    ", "#", " Move", " files", " to", " target", "_", "dir", "\n", "    ", "m", "oved", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "sh", "util", ".", "move", "(", "str"], "logprobs": [-1.9581161737442017, -2.855996608734131, -1.5116784572601318, -0.21072101593017578, -0.10215695947408676, -0.21095147728919983, -0.7410231232643127, -0.0006500753224827349, -0.0256606824696064, -0.002298334613442421, -0.0007902836659923196, -0.00030310326837934554, -0.21568284928798676, -0.0025755350943654776, -0.09800794720649719, -0.09091059863567352, -0.17334429919719696, -0.21223585307598114, -0.028543243184685707, -0.0859670639038086, -0.0013610394671559334, -0.001359134796075523, -0.000446696620201692, -2.038458114839159e-05, -7.510157047363464e-06, -0.000935950840357691, -0.02997545711696148, -0.0024802894331514835, -0.047024719417095184, -3.135155202471651e-05, -0.0006256530177779496, -0.00014518637908622622, -8.093983342405409e-05, -0.00031263710116036236, -4.815939246327616e-05, -6.23445157543756e-05, -0.0002374367177253589, -2.47952248173533e-05, -1.5616295058862306e-05, -7.557583012385294e-05, -0.0005480932886712253, -0.1707763522863388, -0.0003137096355203539, -0.12768565118312836, -0.3496766686439514, -0.15340660512447357, -0.11397561430931091, -0.04967131093144417, -0.0004175029753241688, -2.6890511512756348, -0.0010543270036578178, -0.00039736481267027557, -0.00018046658078674227, -0.5298361778259277, -0.13355647027492523, -0.0007245299639180303, -0.015364382416009903, -0.023751962929964066, -0.038847390562295914, -5.602820692729438e-06, -7.271740287251305e-06, -0.0014173472300171852, -7.807903602952138e-05, -0.0001012035645544529, -2.203707218170166, -1.823885577323381e-05, -0.001336158369667828, -0.0766998901963234, -0.0023394853342324495, -0.0010305099422112107, -0.03916725888848305, -0.002039615996181965, -7.629365427419543e-06, -0.2767869234085083, -0.27494606375694275, -0.13738049566745758, -1.3230459690093994, -0.0029326549265533686, -3.540453326422721e-05, -0.00011538793478393927, -0.07205574959516525, -0.8071226477622986, -0.00019012074335478246, -0.0018731682794168591, -0.9181007742881775, -0.008749245665967464, -3.683499380713329e-05, -0.0018154582940042019, -0.20827613770961761, -0.14777356386184692, -0.0036501940339803696, -0.0007643162389285862, -5.960462772236497e-07, -9.059865078597795e-06, -0.00039772229501977563, -1.3112935448589269e-05, -4.494089080253616e-05, -0.019036103039979935, -0.00017557987303007394, -2.253030106658116e-05, -0.0015447123441845179, -0.00032634177478030324, -0.00028379703871905804, -0.015671079978346825, -0.0001429217227268964, -1.680836794548668e-05, -0.00013016807497479022, -0.0003688847064040601, -0.00047886825632303953, -0.00045313104055821896, -0.007474906742572784, -1.2159273865108844e-05, -0.00015317220822907984, -0.002316293539479375, -0.0006733057671226561, -0.0002150304353563115, -0.00011705666838679463, -0.0012584156356751919, -0.0002908283786382526, -0.00014709345123264939, -0.0003583981015253812, -0.014657787047326565, -0.0008964095613919199, -0.12740273773670197, -3.201509475708008, -0.1941799819469452, -2.4408087730407715, -0.017377618700265884, -0.0012862751027569175, -1.1216989755630493, -2.021385669708252, -1.8550478219985962, -0.9744399189949036, -0.04288068786263466, -0.0006124289939180017, -0.09049492329359055, -0.00041786045767366886, -0.011803664267063141, -0.23357772827148438, -1.3470558769768104e-05, -1.6212332411669195e-05, -0.0807279422879219, -1.4185804502631072e-05, -1.825033187866211, -1.312864065170288, -0.002646992914378643, -2.780794620513916, -1.871415138244629, -0.00025996167096309364, -3.3942747116088867, -0.2509649097919464, -0.20945730805397034, -0.3661344647407532, -3.361645576660521e-05, -6.437280717364047e-06, -0.004529098514467478, -4.0531076592742465e-06, -0.020208189263939857, -0.019972525537014008, -0.00041940953815355897, -0.00655986275523901, -0.004589381627738476, -0.0004273931554052979, -0.0007520469953306019, -0.43281441926956177, -0.0071297031827270985, -0.005254032090306282, -0.7208731770515442, -0.020725587382912636, -1.1920858014491387e-05, -0.01560465432703495, -0.8622390031814575, -2.626718759536743, -0.0027403205167502165, -0.14226767420768738, -0.43124687671661377, -2.9104788303375244, -0.8261110186576843, -0.07737944275140762, -0.013820547610521317, -0.0006165986997075379, -0.001729065552353859, -0.011603249236941338, -0.0012710357550531626, -0.12928177416324615, -1.8307716846466064, -3.059699296951294, -0.7962724566459656, -0.12310697883367538, -0.041409894824028015, -0.0004981707315891981, -0.5693710446357727, -1.456497073173523, -0.10026805102825165, -0.07544586807489395, -0.0007759897271171212, -1.2925336360931396, -0.5441980957984924, -1.999337911605835, -0.04264482483267784, -0.19045446813106537, -3.9219088648678735e-05, -1.0609570381348021e-05, -0.0001267114421352744, -1.9073468138230965e-06, -5.686121585313231e-05, -0.7321291565895081, -0.001784638618119061, -0.17647041380405426, -0.31943604350090027, -0.16751591861248016, -0.7372158169746399, -0.07207249850034714, -0.959265947341919, -0.0016644446877762675, -0.009670907631516457, -0.0002530493075028062, -0.0027659989427775145, -0.030127229169011116, -0.014190481044352055, -0.013939171098172665, -0.0017314456636086106, -0.005522708408534527, -0.2469664067029953, -0.00020549570035655051, -0.15170812606811523, -0.40445950627326965, -0.12932734191417694, -0.13562114536762238, -0.02547813206911087, -0.021374117583036423, -0.0003868784988299012, -0.19087591767311096, -0.0006254147156141698, -1.6051304340362549, -0.026355599984526634, -0.14903853833675385, -2.0681071281433105, -0.0022082962095737457, -0.06149612367153168, -0.00019035911827813834, -0.005028932821005583, -0.01402275264263153, -0.015773175284266472, -0.08173514902591705, -0.05905352905392647, -0.0014978153631091118, -0.0001951265730895102, -0.001177928177639842, -0.0016906267264857888, -2.021461009979248, -5.245071224635467e-05, -1.537788011773955e-05, -0.004935937467962503, -0.00010227633902104571, -1.4359525442123413], "finish_reason": "length"}], "metrics": {"energy": 266.13742119121554, "energy_per_token": 1.0395993015281857, "time": 11.124899, "time_per_token": 0.04345663671875}}
{"outputs": [{"text": "try:\n        source_dir_path = Path(source_dir)\n        if source_dir_path.exists():\n            source_dir_path.iterdir()\n    except FileNotFoundError:\n        raise ValueError('source_dir must exist') from None\n\n    try:\n        target_dir_path = Path(target_dir)\n        if target_dir_path.exists():\n            target_dir_path.mkdir(exist_ok=True, parents=True)\n    except FileNotFoundError:\n        raise ValueError('target_dir must exist') from None\n\n    moved_files = 0\n\n    for source_file in source_dir_path.iterdir():\n        extension = source_file.suffix.lower()\n        if extension in extensions:\n            target_file = target_dir_path / (source_file.name)\n            source_file.replace(target_file)\n            moved_files += 1\n\n    return moved_files", "tokens": ["try", ":", "\n", "        ", "source", "_", "dir", "_", "path", " =", " Path", "(", "source", "_", "dir", ")", "\n", "        ", "if", " source", "_", "dir", "_", "path", ".", "exists", "():", "\n", "            ", "source", "_", "dir", "_", "path", ".", "iter", "dir", "()", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " Value", "Error", "('", "source", "_", "dir", " must", " exist", "')", " from", " None", "\n", "\n", "    ", "try", ":", "\n", "        ", "target", "_", "dir", "_", "path", " =", " Path", "(", "target", "_", "dir", ")", "\n", "        ", "if", " target", "_", "dir", "_", "path", ".", "exists", "():", "\n", "            ", "target", "_", "dir", "_", "path", ".", "mk", "dir", "(", "exist", "_", "ok", "=", "True", ",", " parents", "=", "True", ")", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " Value", "Error", "('", "target", "_", "dir", " must", " exist", "')", " from", " None", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "\n", "    ", "for", " source", "_", "file", " in", " source", "_", "dir", "_", "path", ".", "iter", "dir", "():", "\n", "        ", "extension", " =", " source", "_", "file", ".", "suff", "ix", ".", "lower", "()", "\n", "        ", "if", " extension", " in", " extensions", ":", "\n", "            ", "target", "_", "file", " =", " target", "_", "dir", "_", "path", " /", " (", "source", "_", "file", ".", "name", ")", "\n", "            ", "source", "_", "file", ".", "replace", "(", "target", "_", "file", ")", "\n", "            ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.930345058441162, -0.0006335158832371235, -0.0032903600949794054, -0.00827585905790329, -0.3881998062133789, -0.1447390913963318, -0.12119443714618683, -1.2417174577713013, -0.14437399804592133, -0.06207405403256416, -0.008759762160480022, -0.001986198825761676, -0.0012335318606346846, -4.8636207793606445e-05, -1.680836794548668e-05, -0.001292942208237946, -0.09388083964586258, -0.052849967032670975, -2.074173927307129, -2.2676663398742676, -1.3351351299206726e-05, -2.7656173188006505e-05, -0.002078041434288025, -2.074220174108632e-05, -0.0037645678967237473, -0.331226646900177, -0.43593207001686096, -0.010806962847709656, -0.008714384399354458, -1.3233940601348877, -0.011476097628474236, -0.08000632375478745, -0.06262197345495224, -0.18309655785560608, -0.13133281469345093, -3.1522717475891113, -0.0015941066667437553, -0.011553050018846989, -0.06471771001815796, -2.585669994354248, -0.004379087593406439, -0.8958908915519714, -0.0018999397289007902, -0.0001998939987970516, -0.37968558073043823, -0.019981056451797485, -0.0022601555101573467, -0.40656614303588867, -0.12267020344734192, -6.0794889577664435e-05, -0.9111784100532532, -0.7891565561294556, -0.05386168509721756, -0.0032107490114867687, -3.044086456298828, -0.1716582030057907, -0.18420164287090302, -2.758378505706787, -0.022390073165297508, -0.005504095461219549, -0.49728989601135254, -0.0025913489516824484, -0.38209301233291626, -5.972207145532593e-05, -0.0002351722796447575, -0.0006101653561927378, -0.011117654852569103, -0.00029404606902971864, -0.00353521341457963, -0.0016550427535548806, -0.0003289635351393372, -0.0006780709372833371, -0.00032217081752605736, -0.00022897482267580926, -0.0014672239776700735, -4.756337511935271e-05, -1.764281842042692e-05, -0.00015579440514557064, -0.0013743727467954159, -0.019956165924668312, -0.031316664069890976, -0.10203144699335098, -4.434487345861271e-05, -4.9470632802695036e-05, -0.001985247014090419, -1.680836794548668e-05, -0.00027998341829515994, -0.004072587471455336, -0.007935899309813976, -0.0019367048516869545, -0.0054470691829919815, -0.4033397436141968, -0.002152984729036689, -0.007763687986880541, -0.0065686265006661415, -0.006032473873347044, -0.015502308495342731, -1.7684062719345093, -6.174850568640977e-05, -0.07659079879522324, -1.454566478729248, -0.0001289761275984347, -2.2649508537142538e-05, -0.006955340038985014, -0.01073797233402729, -0.6973968744277954, -0.010801302269101143, -0.0004278697888366878, -0.003640810726210475, -0.03813252970576286, -0.012365697883069515, -0.44760406017303467, -0.000248401309363544, -0.13626797497272491, -0.24636158347129822, -0.00011359999916749075, -0.007188764400780201, -0.0021391860209405422, -0.0005984899471513927, -0.007381191477179527, -0.002000356325879693, -6.556489552167477e-06, -0.005181574262678623, -0.008608848787844181, -0.002432128181681037, -0.0004170263418927789, -0.026020919904112816, -0.006377937737852335, -0.010228477418422699, -0.008293120190501213, -0.0001820160250645131, -0.001115891383960843, -0.04032458737492561, -0.000730128725990653, -1.2679625749588013, -0.051104187965393066, -0.12910671532154083, -0.26073265075683594, -0.16978900134563446, -0.07641798257827759, -0.00014280252798926085, -0.006847013719379902, -1.2085437774658203, -0.00035696811391972005, -0.07320113480091095, -1.7923954725265503, -0.02386394515633583, -0.181568905711174, -0.27630606293678284, -0.03443986177444458, -9.298280929215252e-06, -0.00022456508304458112, -0.0028746493626385927, -0.00011276562872808427, -0.0002735478919930756, -0.15418170392513275, -0.000125281119835563, -0.000995974289253354, -0.0034157049376517534, -0.005908286198973656, -2.722196102142334, -0.014732733368873596, -0.09475388377904892, -7.188061863416806e-05, -0.00017581824795342982, -0.00011526874004630372, -0.013151567429304123, -1.9192511899746023e-05, -1.6371808052062988, -0.03875691443681717, -0.004733310081064701, -0.025328906252980232, -0.16569188237190247, -0.04614471644163132, -0.07658815383911133, -0.13704918324947357, -0.013367082923650742, -0.024449490010738373, -0.0028953319415450096, -0.001930517959408462, -0.5421720147132874, -0.010681243613362312, -0.07640859484672546, -0.04870598763227463, -0.8180200457572937, -2.5987286790041253e-05, -0.00018654513405635953, -0.005237548612058163, -6.556489552167477e-06, -0.08338378369808197, -2.068173885345459, -0.02119428478181362, -2.9802276912960224e-06, -0.0012631779536604881, -0.0004107108688913286, -0.1269713044166565, -0.973924994468689, -0.019230708479881287, -0.017752094194293022, -0.9647871851921082, -0.001192454481497407, -0.0035921114031225443, -0.0016161249950528145, -0.41420143842697144, -2.8490614567999728e-05, -0.017783714458346367, -1.2040065485052764e-05, -0.004767716862261295, -0.0077259535901248455, -0.01646924950182438, -0.011858327314257622, -0.04639739543199539, -1.0251946150674485e-05, -1.2278481335670222e-05, -4.577531944960356e-05, -0.007047319319099188, -0.0023820616770535707, -1.9311717551317997e-05, -0.0016211237525567412, -0.11327206343412399, -0.0024592415429651737, -0.058670710772275925, -0.001405324088409543, -8.21318244561553e-05, -1.549708758830093e-05, -1.324808120727539, -5.960462772236497e-07, -4.768370445162873e-07, -4.875540980719961e-05, -0.00010692501382436603, -0.06466183811426163], "finish_reason": "stop"}], "metrics": {"energy": 252.2964619388582, "energy_per_token": 1.092192475925793, "time": 10.099943, "time_per_token": 0.04372269696969697}}
{"outputs": [{"text": "if not Path(source_dir).exists():\n        raise ValueError(f'source_dir {source_dir} does not exist')\n\n    if not Path(target_dir).exists():\n        raise ValueError(f'target_dir {target_dir} does not exist')\n\n    files_count = 0\n    for root, dirs, files in os.walk(source_dir):\n        for extension in extensions:\n            for file in files:\n                if file.endswith(extension):\n                    try:\n                        shutil.move(os.path.join(root, file), os.path.join(target_dir, file))\n                        files_count += 1\n                    except:\n                        pass\n    return files_count", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "source", "_", "dir", " {", "source", "_", "dir", "}", " does", " not", " exist", "')", "\n", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "target", "_", "dir", " {", "target", "_", "dir", "}", " does", " not", " exist", "')", "\n", "\n", "    ", "files", "_", "count", " =", " ", "0", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " extension", " in", " extensions", ":", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "if", " file", ".", "end", "sw", "ith", "(", "extension", "):", "\n", "                ", "    ", "try", ":", "\n", "                ", "        ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", ")", ",", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", "))", "\n", "                ", "        ", "files", "_", "count", " +=", " ", "1", "\n", "                ", "    ", "except", ":", "\n", "                ", "        ", "pass", "\n", "    ", "return", " files", "_", "count", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.1855026483535767, -0.1673680990934372, -0.16622605919837952, -0.025812646374106407, -0.00987324584275484, -0.00013791563105769455, -3.969590397900902e-05, -0.001715261023491621, -0.0004383556661196053, -0.27787116169929504, -0.06675697863101959, -0.01265671942383051, -0.003562177997082472, -0.04697433114051819, -0.008674204349517822, -3.218599158572033e-05, -0.5200412273406982, -0.28106263279914856, -0.719582200050354, -1.4771298170089722, -0.13499359786510468, -0.0020769708789885044, -0.6465314030647278, -0.0032147890888154507, -4.351044481154531e-05, -0.00034731553751043975, -0.04508231580257416, -0.20239274203777313, -0.001559947500936687, -0.025488590821623802, -0.24411392211914062, -0.002560672117397189, -1.7981433868408203, -0.00016211149340961128, -0.05458683893084526, -0.005298974458128214, -0.0006625840906053782, -0.0003630455757956952, -0.003267903346568346, -2.4437606043647975e-05, -2.0861407392658293e-05, -0.00024136967840604484, -2.6225699912174605e-05, -0.01696690358221531, -0.0011239885352551937, -0.00037126801908016205, -0.0004256058018654585, -0.10571230202913284, -0.0002610342635307461, -7.271740287251305e-06, -0.004243298899382353, -0.000547378440387547, -0.003536282340064645, -0.013749413192272186, -0.0024219010956585407, -0.00041952868923544884, -0.002947036875411868, -0.016796357929706573, -2.1934269170742482e-05, -0.0005097282119095325, -0.000498289882671088, -0.0035160882398486137, -0.0004456242313608527, -0.0016596842324361205, -0.0013273486401885748, -0.0007446615491062403, -0.021402940154075623, -0.000735608336981386, -2.9927735328674316, -0.7338139414787292, -1.879185676574707, -0.03472522273659706, -0.01756376214325428, -0.0002361257211305201, -0.011922881938517094, -0.6457661986351013, -0.17237304151058197, -3.0234808921813965, -0.010069051757454872, -0.6442459225654602, -0.00040904260822571814, -0.0007110689766705036, -0.03192164748907089, -0.002840415108948946, -0.035849861800670624, -4.136476854910143e-05, -0.00013493580627255142, -0.0019050560658797622, -0.0043608094565570354, -0.00023541064001619816, -5.328513361746445e-05, -0.0912720263004303, -0.011179545894265175, -0.007771494798362255, -0.2168464958667755, -2.422910213470459, -0.005855075083673, -0.003977602813392878, -0.0005616756388917565, -0.0020976699888706207, -0.002830310957506299, -0.35197341442108154, -0.24339942634105682, -0.13361947238445282, -0.10422437638044357, -0.001711095916107297, -0.0014718662714585662, -0.0012874656822532415, -0.09421406686306, -0.10684272646903992, -0.010265409015119076, -0.04326583072543144, -0.00022516099852509797, -1.0728830375228426e-06, -0.0012471048394218087, -0.003356776898726821, -0.018189646303653717, -0.004411251749843359, -0.001995121594518423, -0.0003502947511151433, -3.4027657508850098, -0.00022802136663813144, -0.0017852336168289185, -0.0004262015863787383, -0.0006451908848248422, -0.2475738525390625, -4.792098479811102e-05, -6.437280717364047e-06, -0.04355952516198158, -0.0021378775127232075, -0.3542807698249817, -3.111314072157256e-05, -9.655486064730212e-05, -8.141662692651153e-05, -0.0010206258157268167, -6.97350042173639e-05, -0.011457595974206924, -0.000474936212413013, -0.004901417531073093, -0.0002217047003796324, -0.0002613918040879071, -0.19214147329330444, -0.0004631400224752724, -2.539125671319198e-05, -0.0002366024418734014, -0.0001308832288486883, -0.00010096516780322418, -0.00989366602152586, -2.169585604860913e-05, -5.364403477869928e-06, -0.003353925421833992, -0.03557954728603363, -0.004640998784452677, -0.007133609149605036, -0.0037435467820614576, -0.24912525713443756, -0.05515173822641373, -0.00016640232934150845, -3.58813522325363e-05, -0.008221710100769997, -0.003381726797670126, -2.586808113846928e-05, -0.0013153243344277143, -0.012167632579803467, -0.010714856907725334, -0.0029206499457359314, -1.6995444297790527, -0.0430266335606575, -0.000459565402707085, -0.0007886160165071487, -0.9356234073638916, -0.01789741963148117, -0.6980186104774475, -0.057442594319581985, -0.00278632715344429, -7.986990567587782e-06, -7.986990567587782e-06, -1.2721976041793823, -8.344646857949556e-07, -7.152555099310121e-07, -3.0874729418428615e-05, -0.00020954797219019383, -2.9174842834472656, -0.01618391089141369], "finish_reason": "stop"}], "metrics": {"energy": 198.81594996452327, "energy_per_token": 1.080521467198496, "time": 7.7734456, "time_per_token": 0.04224698695652174}}
{"outputs": [{"text": "# create Path objects for source and target directories\n    source_dir = Path(source_dir)\n    if not source_dir.exists():\n        raise ValueError(f'The directory {source_dir} does not exist.')\n    target_dir = Path(target_dir)\n    if not target_dir.exists():\n        target_dir.mkdir(parents=True)\n\n    # initialize count variable\n    count = 0\n\n    # for each file in the source directory\n    for file in source_dir.iterdir():\n        # if the file is a file with the desired extensions\n        if file.is_file() and file.suffix in extensions:\n            # move the file to the target directory\n            shutil.move(str(file), str(target_dir / file.name))\n            count += 1\n\n    # return the count\n    return count", "tokens": ["#", " create", " Path", " objects", " for", " source", " and", " target", " directories", "\n", "    ", "source", "_", "dir", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "if", " not", " source", "_", "dir", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "The", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", ".", "')", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "dir", ")", "\n", "    ", "if", " not", " target", "_", "dir", ".", "exists", "():", "\n", "        ", "target", "_", "dir", ".", "mk", "dir", "(", "parents", "=", "True", ")", "\n", "\n", "    ", "#", " initialize", " count", " variable", "\n", "    ", "count", " =", " ", "0", "\n", "\n", "    ", "#", " for", " each", " file", " in", " the", " source", " directory", "\n", "    ", "for", " file", " in", " source", "_", "dir", ".", "iter", "dir", "():", "\n", "        ", "#", " if", " the", " file", " is", " a", " file", " with", " the", " desired", " extensions", "\n", "        ", "if", " file", ".", "is", "_", "file", "()", " and", " file", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "#", " move", " the", " file", " to", " the", " target", " directory", "\n", "            ", "sh", "util", ".", "move", "(", "str", "(", "file", ")", ",", " str", "(", "target", "_", "dir", " /", " file", ".", "name", "))", "\n", "            ", "count", " +=", " ", "1", "\n", "\n", "    ", "#", " return", " the", " count", "\n", "    ", "return", " count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.9581161737442017, -3.7959208488464355, -1.8776733875274658, -0.348751038312912, -0.20826219022274017, -0.1741429716348648, -0.8206406831741333, -0.009676574729382992, -0.07487760484218597, -0.06298929452896118, -0.0021787970326840878, -0.09827897697687149, -0.1711023896932602, -0.19019903242588043, -1.3180335760116577, -0.0029870914295315742, -0.0015883937012404203, -0.0005495230434462428, -2.2291887944447808e-05, -1.2636104656849056e-05, -0.0009838269324973226, -0.024890398606657982, -0.0017716678557917476, -2.8873231410980225, -0.05287190526723862, -0.005091083236038685, -5.125868119648658e-05, -2.9444261599564925e-05, -0.00016258825780823827, -0.14479757845401764, -0.005171730648726225, -0.017229406163096428, -0.0027611248660832644, -0.03972730040550232, -0.007036547642201185, -2.47952248173533e-05, -0.45998796820640564, -0.46972718834877014, -1.07581627368927, -3.531114101409912, -2.755537748336792, -0.1388564556837082, -0.003637841437011957, -9.810443589231e-05, -0.0002708068350329995, -0.06650727242231369, -0.011645668186247349, -0.0006868863711133599, -0.005538475699722767, -0.3468843996524811, -0.003944475203752518, -0.0029794846195727587, -0.5019954442977905, -0.008481434546411037, -0.00040463366894982755, -0.00021073981770314276, -0.00098204065579921, -0.00016985881666187197, -0.0001515035255579278, -0.0002475670480635017, -4.458328112377785e-05, -4.0531076592742465e-06, -8.844937838148326e-05, -0.001602914067916572, -0.0777711570262909, -0.03582076355814934, -0.015652185305953026, -0.0050804088823497295, -0.00013267113536130637, -1.0013530300057027e-05, -5.280832192511298e-05, -0.019057389348745346, -0.0012575822183862329, -0.0013718727277591825, -0.00041631137719377875, -0.7674237489700317, -0.00011491115583339706, -4.3748852476710454e-05, -0.0025274972431361675, -0.0018390186596661806, -9.250213042832911e-05, -0.3183189928531647, -0.08110010623931885, -0.0047482592053711414, -0.0011630444787442684, -0.42064428329467773, -0.04342997819185257, -0.4111669063568115, -0.0016857474111020565, -0.19497759640216827, -3.179029941558838, -2.227511167526245, -1.1360336542129517, -0.48758620023727417, -0.00031835734262131155, -0.22573067247867584, -0.009046755731105804, -0.0008764001540839672, -8.976056415122002e-05, -0.0038785722572356462, -0.059739332646131516, -0.00036638224264606833, -0.09566299617290497, -3.665566921234131, -0.3201392590999603, -0.18500249087810516, -0.28426432609558105, -1.0126221179962158, -0.025062592700123787, -0.022774213925004005, -0.8924612402915955, -0.0007914748275652528, -0.03624841198325157, -0.21052101254463196, -0.08201710134744644, -0.026149950921535492, -9.83428253675811e-05, -2.4318398573086597e-05, -3.373566141817719e-05, -0.29096242785453796, -0.0003812778159044683, -0.0003455280384514481, -0.009425545111298561, -0.06156674399971962, -0.11865018308162689, -0.3748527765274048, -0.45772889256477356, -0.052382078021764755, -1.5590739250183105, -0.8860753774642944, -0.31170621514320374, -0.7978914976119995, -1.7092927694320679, -1.103602647781372, -1.4850842952728271, -0.10544521361589432, -0.00041261743172071874, -0.007642908953130245, -0.04739314690232277, -5.602679812000133e-05, -0.48564594984054565, -1.0728830375228426e-06, -0.00017379203927703202, -0.004626878537237644, -0.0005677518784068525, -0.29491233825683594, -0.0001012035645544529, -0.03098398819565773, -2.1457441107486375e-05, -0.4864059090614319, -0.0041725486516952515, -0.004815409891307354, -0.0007886160165071487, -0.008528241887688637, -0.09060043841600418, -0.16072975099086761, -0.39339902997016907, -0.0008574623498134315, -0.015750644728541374, -0.0322161540389061, -0.014985722489655018, -0.0033471533097326756, -0.03867525979876518, -0.00034278715611435473, -0.15612851083278656, -3.3378044463461265e-05, -3.2186455882765586e-06, -0.004130286164581776, -0.00012933371181134135, -0.770832896232605, -4.31528314948082e-05, -0.006976293865591288, -0.01892825961112976, -5.519237674889155e-05, -0.5401149988174438, -0.0008390005677938461, -0.007499753963202238, -6.627816765103489e-05, -4.410734163684538e-06, -0.6200488209724426, -0.06973979622125626, -0.0028904585633426905, -0.04592442512512207, -0.002303091809153557, -0.02112974226474762, -0.012644242495298386, -1.1771571636199951, -0.002533442573621869, -0.0015688742278143764, -1.0847986231965479e-05, -0.055438581854104996, -0.0800895094871521, -0.0026072815526276827, -1.244558334350586, -0.05481753125786781, -0.13613200187683105, -0.44956737756729126, -0.6742196083068848, -0.0002076410164590925, -0.013012140989303589, -0.00103265349753201, -0.9064134955406189, -4.768370445162873e-07, -3.576278118089249e-07, -3.5523738915799186e-05, -8.356221951544285e-05, -0.07648953795433044], "finish_reason": "stop"}], "metrics": {"energy": 219.65821907806395, "energy_per_token": 1.0611508168022412, "time": 9.025859, "time_per_token": 0.04360318357487923}}
{"outputs": [{"text": "if Path(source_dir).is_dir() and Path(target_dir).is_dir():\n        return 0\n    else:\n        raise ValueError(\"One of the provided paths does not exist.\")\n\n    # Move files with certain extensions\n    move_files = []\n    for ext in extensions:\n        move_files.extend(Path(source_dir).glob('*' + ext))\n    for file in move_files:\n        shutil.move(str(file), target_dir)\n\n    # Return the number of files moved\n    return len(move_files)", "tokens": ["if", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "()", " and", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "return", " ", "0", "\n", "    ", "else", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "One", " of", " the", " provided", " paths", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Move", " files", " with", " certain", " extensions", "\n", "    ", "move", "_", "files", " =", " []", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "move", "_", "files", ".", "extend", "(", "Path", "(", "source", "_", "dir", ")", ".", "glob", "('", "*", "'", " +", " ext", "))", "\n", "    ", "for", " file", " in", " move", "_", "files", ":", "\n", "        ", "sh", "util", ".", "move", "(", "str", "(", "file", ")", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "#", " Return", " the", " number", " of", " files", " moved", "\n", "    ", "return", " len", "(", "move", "_", "files", ")", "\n", "\n", "if"], "logprobs": [-1.1855026483535767, -2.233806848526001, -0.007428641896694899, -0.008099803701043129, -0.00010477947944309562, -3.683499380713329e-05, -0.000647692708298564, -0.015876665711402893, -0.8728843331336975, -8.95221673999913e-05, -0.16747921705245972, -0.18091711401939392, -0.2383076697587967, -0.0027260545175522566, -0.00039009589818306267, -0.008695121854543686, -6.9141146923357155e-06, -2.5629668016335927e-05, -0.00028451209072954953, -0.0037119551561772823, -0.009068728424608707, -0.0005085367010906339, -0.00020728347590193152, -0.009457782842218876, -0.007003165781497955, -0.02264159917831421, -3.549828052520752, -2.603257656097412, -0.07596010714769363, -0.02345588617026806, -0.16152150928974152, -0.5689655542373657, -0.0002057340752799064, -0.018673690035939217, -0.002632131101563573, -0.1982349008321762, -0.015221154317259789, -8.49926145747304e-05, -1.041290521621704, -0.5529406070709229, -2.160231590270996, -0.7109254002571106, -0.13725653290748596, -2.562159776687622, -0.8422170281410217, -0.9628505706787109, -0.0015957729192450643, -0.027474956586956978, -0.6440820097923279, -0.04196228086948395, -0.04013850912451744, -0.02837037295103073, -0.2691531181335449, -0.5616912841796875, -1.9030553102493286, -2.3847076892852783, -0.9553918242454529, -1.0761122703552246, -0.6097794771194458, -0.022576333954930305, -1.440791368484497, -0.011155261658132076, -3.0711748600006104, -0.03738247603178024, -0.983034610748291, -0.4111500680446625, -0.7200561165809631, -0.039990540593862534, -0.04153238236904144, -0.05385016277432442, -2.1345338821411133, -0.00512962881475687, -0.003183418419212103, -0.0006017066189087927, -0.004250183701515198, -0.0015568528324365616, -0.9401222467422485, -0.0005211663665249944, -0.0026700582820922136, -0.5354878306388855, -0.058565035462379456, -0.1838361918926239, -0.6985834836959839, -0.003480806713923812, -0.008732938207685947, -3.3378044463461265e-05, -0.0002150304353563115, -0.000501983508002013, -0.001336158369667828, -0.6650342345237732, -2.2368531227111816, -0.23075146973133087, -0.06916806101799011, -8.034383063204587e-05, -0.0028994923923164606, -0.006215409375727177, -0.009210123680531979, -0.5923102498054504, -0.5286353826522827, -0.24801190197467804, -0.041399143636226654, -0.0020283141639083624, -1.1086402082582936e-05, -5.3165931603871286e-05, -0.000647692708298564, -0.0015017433324828744, -0.001586013357155025, -0.861290693283081, -8.5588610090781e-05, -1.168244216387393e-05, -0.007611795328557491, -0.00032646095496602356, -0.8964734077453613, -4.076874756719917e-05, -0.002772418549284339, -0.021971849724650383, -0.00021455370006151497, -0.28761592507362366, -0.0001802282058633864, -8.260862523457035e-05, -0.08561225235462189, -0.030717672780156136, -1.0578358173370361, -0.07227790355682373, -0.8841493129730225, -0.9160915613174438, -0.21451333165168762, -0.08422023057937622, -0.0008623456815257668, -1.0154258012771606, -0.06996290385723114, -0.033629633486270905, -0.0007049936102703214, -0.03534253314137459, -0.007080818060785532, -0.0008647278300486505, -0.0020368797704577446, -2.9801878554280847e-05, -5.864924969500862e-05, -0.42101991176605225, -0.3494391441345215, -0.011604073457419872, -0.9971002340316772], "finish_reason": "stop"}], "metrics": {"energy": 160.51059454727172, "energy_per_token": 1.1224517101207814, "time": 6.1069045, "time_per_token": 0.04270562587412587}}
{"outputs": [{"text": "count = 0\n    if not Path(source_dir).exists():\n        raise ValueError('source_dir does not exist')\n\n    if not Path(target_dir).exists():\n        raise ValueError('target_dir does not exist')\n\n    for root, dirs, files in os.walk(source_dir):\n        for f in files:\n            if f.endswith(tuple(extensions)):\n                count += 1\n                shutil.move(os.path.join(root, f), os.path.join(target_dir, f))\n\n    return count", "tokens": ["count", " =", " ", "0", "\n", "    ", "if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "source", "_", "dir", " does", " not", " exist", "')", "\n", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "target", "_", "dir", " does", " not", " exist", "')", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " f", " in", " files", ":", "\n", "            ", "if", " f", ".", "end", "sw", "ith", "(", "tuple", "(", "extensions", "))", ":", "\n", "                ", "count", " +=", " ", "1", "\n", "                ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "root", ",", " f", ")", ",", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " f", "))", "\n", "\n", "    ", "return", " count"], "logprobs": [-3.569983959197998, -0.04438501223921776, -0.005768438335508108, -0.00027497802511788905, -0.02029615268111229, -0.31583523750305176, -1.2122001647949219, -0.3001091182231903, -0.21786804497241974, -0.028865614905953407, -0.01796954683959484, -9.131014667218551e-05, -3.8742269680369645e-05, -0.002676240401342511, -0.00047017011092975736, -0.30408427119255066, -0.11014777421951294, -0.014858531765639782, -0.004372797440737486, -0.06272868067026138, -0.008080292493104935, -3.4927710657939315e-05, -0.809841513633728, -0.922057032585144, -0.055244918912649155, -0.0016233850037679076, -0.17635199427604675, -0.0006841464783065021, -0.009497223421931267, -0.23829743266105652, -0.0022107940167188644, -2.788177967071533, -0.00018785618885885924, -0.1105668842792511, -0.011231177486479282, -0.0006453100359067321, -0.00045277358731254935, -0.0023481673561036587, -1.8000440832111053e-05, -1.645074735279195e-05, -0.00016950124700088054, -2.062299427052494e-05, -0.013183685950934887, -0.0015163839561864734, -0.0005735897575505078, -0.0005988473421894014, -0.3357095718383789, -0.00029237763374112546, -2.4318398573086597e-05, -0.003295112634077668, -0.00996436644345522, -0.0013723488664254546, -0.0003532739356160164, -0.0020528212189674377, -0.00027044929447583854, -0.0012057899730280042, -0.0011124381562694907, -0.000773250067140907, -0.02704028971493244, -0.00045408427831716835, -0.2984156310558319, -3.303870677947998, -0.005926535930484533, -0.8317748308181763, -0.0006064721383154392, -0.0004180987598374486, -0.02108795754611492, -0.0014194899704307318, -0.02903747372329235, -3.58813522325363e-05, -0.0002076410164590925, -0.002447230741381645, -0.004413150716573, -2.3603161025675945e-05, -5.447716102935374e-05, -0.11662481725215912, -0.010968864895403385, -0.009808204136788845, -0.11766381561756134, -2.4394116401672363, -0.1501956433057785, -0.016631878912448883, -0.0003256267518736422, -0.0031417079735547304, -0.00420008972287178, -0.941914975643158, -0.8530824780464172, -0.041929587721824646, -0.23776957392692566, -0.00020823694649152458, -5.960462772236497e-07, -0.015093876048922539, -0.42859792709350586, -0.008878634311258793, -0.016867391765117645, -0.0020720933098345995, -0.009217564947903156, -0.005050164181739092, -0.002644971711561084, -3.030667781829834, -0.007702886126935482, -0.018452061340212822, -6.19869097135961e-05, -0.0102814557030797, -0.025852374732494354, -0.7715929746627808, -0.0001267114421352744, -1.2397689715726301e-05, -0.028159575536847115, -0.001495434669777751, -0.14579588174819946, -0.00012754580529872328, -9.929640509653836e-05, -0.0008722314960323274, -0.00082601752365008, -6.282132380874828e-05, -0.011575557291507721, -0.0004887578543275595, -0.005318777170032263, -8.928377064876258e-05, -0.00020323118951637298, -0.26103323698043823, -0.0003399271226953715, -1.728519782773219e-05, -0.00034767304896377027, -0.000163541772053577, -0.00011526874004630372, -0.00606885040178895, -3.93382906622719e-05, -4.768360213347478e-06, -0.004693088121712208, -0.01645154319703579, -0.0030093167442828417, -0.003907783888280392, -0.555654764175415, -0.0065897065214812756, -0.06971422582864761, -0.002079112222418189], "finish_reason": "stop"}], "metrics": {"energy": 157.32028186035154, "energy_per_token": 1.1400020424663155, "time": 6.3121505, "time_per_token": 0.04574022101449276}}
{"outputs": [{"text": "source_dir = Path(source_dir).resolve()\n    target_dir = Path(target_dir).resolve()\n\n    if not source_dir.exists():\n        raise ValueError(f'source_dir {source_dir} does not exist')\n    if not target_dir.exists():\n        raise ValueError(f'target_dir {target_dir} does not exist')\n\n    n_moved = 0\n    for file_path in source_dir.iterdir():\n        if file_path.name.endswith(tuple(extensions)):\n            shutil.move(file_path, target_dir / file_path.name)\n            n_moved += 1\n\n    return n_moved", "tokens": ["source", "_", "dir", " =", " Path", "(", "source", "_", "dir", ")", ".", "resolve", "()", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "dir", ")", ".", "resolve", "()", "\n", "\n", "    ", "if", " not", " source", "_", "dir", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "source", "_", "dir", " {", "source", "_", "dir", "}", " does", " not", " exist", "')", "\n", "    ", "if", " not", " target", "_", "dir", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "target", "_", "dir", " {", "target", "_", "dir", "}", " does", " not", " exist", "')", "\n", "\n", "    ", "n", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " source", "_", "dir", ".", "iter", "dir", "():", "\n", "        ", "if", " file", "_", "path", ".", "name", ".", "end", "sw", "ith", "(", "tuple", "(", "extensions", "))", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "dir", " /", " file", "_", "path", ".", "name", ")", "\n", "            ", "n", "_", "m", "oved", " +=", " ", "1", "\n", "\n", "    ", "return", " n", "_", "m", "oved", "\n", "\n", "if"], "logprobs": [-1.6686302423477173, -0.0826939269900322, -0.08127882331609726, -0.31399857997894287, -0.018837951123714447, -0.0022640805691480637, -0.0009946642676368356, -3.40932747349143e-05, -2.372236667724792e-05, -0.0010994586627930403, -2.617474317550659, -0.3016606271266937, -0.005802928004413843, -0.03363378345966339, -0.006496618967503309, -0.1584451049566269, -0.0002892790944315493, -0.00018535325943958014, -0.0003147821989841759, -0.00014673586701974273, -6.770858453819528e-05, -0.000834117061458528, -2.9682672902708873e-05, -3.158996332786046e-05, -6.174850568640977e-05, -0.18320325016975403, -0.0010473009897395968, -6.115249561844394e-05, -0.0015632801223546267, -0.8938316106796265, -0.0001740304142003879, -0.09636345505714417, -0.07188346982002258, -0.024587446823716164, -2.777537883957848e-05, -2.455681169521995e-05, -0.0002286172821186483, -0.13581037521362305, -0.05086493119597435, -0.004887538496404886, -0.0010213402565568686, -0.02456243894994259, -0.00827089324593544, -2.1815061700181104e-05, -0.39423075318336487, -0.23467670381069183, -1.0428615808486938, -1.6596742868423462, -0.06372833251953125, -0.000990257947705686, -0.6612130403518677, -0.0050402008928358555, -0.00010227633902104571, -0.0001072826053132303, -0.030524250119924545, -0.08230358362197876, -0.000713213172275573, -0.010659424588084221, -0.22349606454372406, -0.0015910121146589518, -0.3872665464878082, -0.06970588862895966, -0.005322215612977743, -0.019090838730335236, -6.437280717364047e-06, -1.156323378381785e-05, -8.260862523457035e-05, -0.022524120286107063, -0.001101244823075831, -0.0002506657037883997, -0.0002743821241892874, -0.10931414365768433, -0.00017557987303007394, -6.079655122448457e-06, -0.0017629809444770217, -0.0003343261778354645, -0.0018035589018836617, -0.00802849791944027, -0.0010577804641798139, -0.00025006983196362853, -0.0024380742106586695, -0.021268391981720924, -2.407998726994265e-05, -0.00019369633810129017, -0.0013149671722203493, -0.0021251493599265814, -0.0003301552205812186, -0.0011343479854986072, -0.0011979315895587206, -0.001158162602223456, -0.03898899257183075, -0.0004832768754567951, -3.700565814971924, -0.5555245876312256, -0.32915425300598145, -0.04985380917787552, -0.18837743997573853, -0.015898020938038826, -9.786603914108127e-05, -0.007917804643511772, -0.34936004877090454, -0.09020598232746124, -0.8162568211555481, -1.239349365234375, -0.707444965839386, -0.0026295154821127653, -0.14981693029403687, -6.079655122448457e-06, -2.3364747903542593e-05, -1.883488948806189e-05, -1.034286379814148, -0.0009889479260891676, -0.0008696111617609859, -0.004045042674988508, -0.003093697363510728, -0.16296836733818054, -0.1189606562256813, -0.0004145239945501089, -6.270212179515511e-05, -0.0003083468764089048, -2.878251552581787, -0.05199567973613739, -0.16275645792484283, -3.433168603805825e-05, -3.576278118089249e-07, -0.016700346022844315, -0.10281942784786224, -0.009650010615587234, -0.024678517132997513, -0.002560077467933297, -0.031988732516765594, -0.004332916811108589, -0.002147988649085164, -0.6919551491737366, -8.129743218887597e-05, -9.298280929215252e-06, -0.014291081577539444, -0.00024101213784888387, -0.5086403489112854, -6.103329360485077e-05, -5.4596363042946905e-05, -0.025126881897449493, -0.03164749965071678, -3.969590397900902e-05, -1.8715683836489916e-05, -1.1742894649505615, -0.04040404409170151, -3.58813522325363e-05, -0.0013913960428908467, -0.002690031658858061, -0.01897422783076763, -0.008694294840097427, -0.017114100977778435, -0.0023864619433879852, -0.018617060035467148, -3.6000557884108275e-05, -9.941560711013153e-05, -5.245195097813848e-06, -0.0035012392327189445, -0.002812123391777277, -1.5258672647178173e-05, -0.0016095790779218078, -0.3458241820335388, -0.0018346159486100078, -0.09938113391399384, -0.00212479243054986, -1.0609570381348021e-05, -1.7762025890988298e-05, -2.288792165927589e-05, -0.8055857419967651, -0.00708164693787694, -0.6342896223068237], "finish_reason": "stop"}], "metrics": {"energy": 217.00412539100645, "energy_per_token": 1.2616518918081772, "time": 7.997141, "time_per_token": 0.04649500581395349}}
{"outputs": [{"text": "source_dir = Path(source_dir)\n    target_dir = Path(target_dir)\n\n    if not source_dir.exists():\n        raise ValueError('Source directory does not exist.')\n\n    if not target_dir.exists():\n        raise ValueError('Target directory does not exist.')\n\n    # Count the number of files to move\n    num_files_to_move = 0\n    for ext in extensions:\n        files_to_move = source_dir.glob(ext)\n        num_files_to_move += len(list(files_to_move))\n\n    if num_files_to_move == 0:\n        print('No files to move.')\n        return 0\n\n    print(f'Moving {num_files_to_move} files...')\n\n    for ext in extensions:\n        files_to_move = source_dir.glob(ext)\n        for file in files_to_move:\n            shutil.move(file, target_dir)\n            print(f'Moved {file.name}')\n\n    print('", "tokens": ["source", "_", "dir", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "if", " not", " source", "_", "dir", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "Source", " directory", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "if", " not", " target", "_", "dir", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "Target", " directory", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "#", " Count", " the", " number", " of", " files", " to", " move", "\n", "    ", "num", "_", "files", "_", "to", "_", "move", " =", " ", "0", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "files", "_", "to", "_", "move", " =", " source", "_", "dir", ".", "glob", "(", "ext", ")", "\n", "        ", "num", "_", "files", "_", "to", "_", "move", " +=", " len", "(", "list", "(", "files", "_", "to", "_", "move", "))", "\n", "\n", "    ", "if", " num", "_", "files", "_", "to", "_", "move", " ==", " ", "0", ":", "\n", "        ", "print", "('", "No", " files", " to", " move", ".", "')", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "print", "(", "f", "'", "M", "oving", " {", "num", "_", "files", "_", "to", "_", "move", "}", " files", ".", ".", ".", "')", "\n", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "files", "_", "to", "_", "move", " =", " source", "_", "dir", ".", "glob", "(", "ext", ")", "\n", "        ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "            ", "print", "(", "f", "'", "M", "oved", " {", "file", ".", "name", "}", "')", "\n", "\n", "    ", "print", "('"], "logprobs": [-1.6686302423477173, -0.0826939269900322, -0.08127882331609726, -0.31399857997894287, -0.018837951123714447, -0.0022640805691480637, -0.0009946642676368356, -3.40932747349143e-05, -2.372236667724792e-05, -0.0010994586627930403, -0.08210825175046921, -0.008098267018795013, -0.18132033944129944, -0.00022921319759916514, -0.00021038226259406656, -0.0002449450839776546, -0.00017557987303007394, -6.794698856538162e-05, -0.0003225283289793879, -7.83174327807501e-05, -1.728519782773219e-05, -8.999896090244874e-05, -0.0008577005355618894, -0.9506669044494629, -0.00022504181833937764, -0.1133829727768898, -0.08400565385818481, -0.028417302295565605, -4.017272294731811e-05, -3.671578815556131e-05, -0.0003936707798857242, -0.11077509820461273, -0.06795890629291534, -0.006672838237136602, -0.0010935047175735235, -0.017974816262722015, -0.005285337567329407, -2.706014311115723e-05, -0.9808144569396973, -0.8206173777580261, -0.05974505841732025, -0.0514373704791069, -0.00013207517622504383, -0.002814263105392456, -0.5812404751777649, -0.0034929236862808466, -0.0006484074983745813, -1.1168783903121948, -8.332382276421413e-05, -0.021505966782569885, -0.003693902399390936, -0.010475766845047474, -3.933898824470816e-06, -1.1920858014491387e-05, -5.817244164063595e-05, -0.01158109586685896, -0.0015549485106021166, -0.0005018643569201231, -0.00022480344341602176, -0.37811478972435, -0.00016330339713022113, -1.5616295058862306e-05, -0.0019605003762990236, -0.005273598246276379, -0.000601349223870784, -0.0009857324184849858, -0.0008718741592019796, -0.00047291061491705477, -0.002785138553008437, -0.000270091783022508, -0.0008636558777652681, -0.004685969091951847, -0.0004962643142789602, -2.9570798873901367, -3.0476880073547363, -0.3930739462375641, -0.09638997912406921, -0.0013302058214321733, -0.29822251200675964, -0.6221209764480591, -1.882520079612732, -0.18076083064079285, -0.0017420368967577815, -1.0706263780593872, -0.0019276624079793692, -0.22828036546707153, -0.7153375148773193, -0.14777840673923492, -0.00016485285595990717, -0.007515844888985157, -0.01230788417160511, -0.47844141721725464, -7.450303382938728e-05, -0.0024469930212944746, -0.4036913812160492, -0.04007013887166977, -2.3032591342926025, -0.0026538888923823833, -0.0016399280866608024, -0.0004258441040292382, -0.0036036332603543997, -0.0018192660063505173, -1.7081037759780884, -0.44833099842071533, -0.03996110334992409, -1.728519782773219e-05, -0.003929157741367817, -0.0242261104285717, -0.8475990891456604, -2.9802276912960224e-06, -1.0490362910786644e-05, -0.00014602071314584464, -0.17911399900913239, -0.06449197232723236, -2.0453689098358154, -0.027908042073249817, -0.0148949408903718, -0.01772422157227993, -0.07059817016124725, -2.288792165927589e-05, -0.0006293461774475873, -0.0003532739356160164, -0.00014232576359063387, -6.198863957251888e-06, -9.894321920000948e-06, -0.006024653557687998, -0.03391338139772415, -0.0062896874733269215, -0.6791388988494873, -0.000647692708298564, -0.0036720484495162964, -1.3947389561508317e-05, -4.172316494077677e-06, -2.3841855067985307e-07, -6.556489552167477e-06, -0.0003108495147898793, -0.0038961467798799276, -0.03190432861447334, -0.014531963504850864, -1.2849936485290527, -0.09448341280221939, -9.190614218823612e-05, -8.22540732769994e-06, -1.4066597032069694e-05, -3.3378546504536644e-06, -1.4305012882687151e-05, -4.887569048150908e-06, -0.12310813367366791, -0.0002369599969824776, -0.0005834784242324531, -0.0004532501916401088, -0.008710838854312897, -0.0001934579631779343, -0.5280436277389526, -0.2560296058654785, -0.04728797450661659, -0.0438823401927948, -0.6384053230285645, -0.01173721719533205, -0.21060523390769958, -0.010177855379879475, -0.0030076527036726475, -0.049582261592149734, -0.00805522408336401, -0.04993659630417824, -0.0006878394051454961, -0.008208231069147587, -0.05513560771942139, -0.0006952252588234842, -1.7426176071166992, -0.10744728893041611, -0.021844960749149323, -0.12855735421180725, -0.6603921055793762, -0.0005118728731758893, -0.024192366749048233, -0.003491617040708661, -7.510157047363464e-06, -7.629365427419543e-06, -3.504691630951129e-05, -2.7418097943154862e-06, -7.748573807475623e-06, -1.4781842764932662e-05, -0.0089956009760499, -0.024759460240602493, -0.30464833974838257, -0.2133028656244278, -0.002583739347755909, -0.004161627031862736, -0.008987213484942913, -0.31749022006988525, -0.0002949994814116508, -1.2679108381271362, -0.04389603063464165, -0.001335205975919962, -0.0008631794480606914, -0.00017128908075392246, -0.0026049036532640457, -0.0022104373201727867, -0.1771971881389618, -0.013570908457040787, -0.001116724917665124, -1.0371154530730564e-05, -0.0010626628063619137, -0.0019133847672492266, -0.03773622214794159, -3.111314072157256e-05, -8.344646857949556e-07, -4.303362584323622e-05, -0.0012463905150070786, -0.001090765930712223, -0.011424596421420574, -0.00018940561858471483, -0.003948512487113476, -0.09026077389717102, -0.1513332724571228, -0.2107454389333725, -0.1942272037267685, -0.04742088541388512, -5.793403761344962e-05, -3.099436753473128e-06, -2.3841830625315197e-06, -2.0265558760002023e-06, -4.768258077092469e-05, -0.001602795091457665, -0.002328186994418502, -0.6581870913505554, -5.8887653722194955e-05, -4.0531076592742465e-06, -0.012659309431910515, -0.00018010901112575084, -0.41304993629455566, -0.018990954384207726, -0.011702342890202999, -2.6464111215318553e-05, -6.9141146923357155e-06, -0.13935372233390808, -0.023343393579125404, -2.7601516246795654, -0.05268136411905289, -0.02726512774825096, -0.06017595902085304, -0.16660739481449127, -0.10178684443235397, -0.027559848502278328, -0.3260400593280792, -0.07265432178974152, -0.8457745909690857, -0.03510730341076851, -0.014330213889479637, -0.3869604766368866, -0.09452831745147705, -0.06111558899283409, -0.010134429670870304, -1.5854971408843994, -0.38740506768226624], "finish_reason": "length"}], "metrics": {"energy": 284.67838011550896, "energy_per_token": 1.1120249223262069, "time": 11.127875, "time_per_token": 0.04346826171875}}
{"outputs": [{"text": "if not Path(source_dir).exists():\n        raise ValueError('source_dir does not exist')\n    if not Path(target_dir).exists():\n        raise ValueError('target_dir does not exist')\n\n    counter = 0\n    for file_name in Path(source_dir).iterdir():\n        if file_name.is_file() and file_name.suffix in extensions:\n            shutil.move(str(file_name), target_dir)\n            counter += 1\n    return counter", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "source", "_", "dir", " does", " not", " exist", "')", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "target", "_", "dir", " does", " not", " exist", "')", "\n", "\n", "    ", "counter", " =", " ", "0", "\n", "    ", "for", " file", "_", "name", " in", " Path", "(", "source", "_", "dir", ")", ".", "iter", "dir", "():", "\n", "        ", "if", " file", "_", "name", ".", "is", "_", "file", "()", " and", " file", "_", "name", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "sh", "util", ".", "move", "(", "str", "(", "file", "_", "name", ")", ",", " target", "_", "dir", ")", "\n", "            ", "counter", " +=", " ", "1", "\n", "    ", "return", " counter", "\n", "\n", "if"], "logprobs": [-1.1855026483535767, -0.1673680990934372, -0.16622605919837952, -0.025812646374106407, -0.00987324584275484, -0.00013791563105769455, -3.969590397900902e-05, -0.001715261023491621, -0.0004383556661196053, -0.27787116169929504, -0.06675697863101959, -0.01265671942383051, -0.003562177997082472, -0.04697433114051819, -0.008674204349517822, -3.218599158572033e-05, -0.933729887008667, -0.8265442848205566, -0.0715726763010025, -0.001583751873113215, -0.19434499740600586, -0.0004805363714694977, -0.009865927509963512, -0.23950590193271637, -0.0018054627580568194, -0.1630864441394806, -0.06233853101730347, -0.0030670766718685627, -0.00028379703871905804, -0.0003195490571670234, -0.0029444219544529915, -9.894321920000948e-06, -1.9430925021879375e-05, -0.00015317220822907984, -3.93382906622719e-05, -0.024069366976618767, -0.001105888863094151, -0.00040439533768221736, -0.0002675890573300421, -0.050806693732738495, -0.0001967951684491709, -2.276871418871451e-05, -0.0024257064796984196, -0.011654741130769253, -0.0015976772410795093, -0.0002503081923350692, -0.001810817513614893, -0.00026782741770148277, -0.0014040146488696337, -0.0008224442135542631, -0.0010709986090660095, -0.4942286014556885, -0.0007774191326461732, -2.9880194664001465, -0.059334646910429, -0.007091234438121319, -0.00043764073052443564, -0.015942135825753212, -0.25722983479499817, -0.12006490677595139, -0.8607347011566162, -1.3070913553237915, -0.8330429196357727, -0.061760418117046356, -0.3892163038253784, -0.0014790082350373268, -0.0010839784517884254, -8.34461570775602e-06, -1.8715683836489916e-05, -0.00044586253352463245, -3.480850500636734e-05, -0.7388330698013306, -0.0006817638641223311, -0.0007035640883259475, -0.007992193102836609, -0.004351077135652304, -0.17607083916664124, -0.11722805351018906, -0.0005859803641214967, -0.0001234931987710297, -0.00018726025882642716, -1.758543848991394, -1.2159273865108844e-05, -0.023537861183285713, -0.1791030317544937, -0.004213741049170494, -0.2964116632938385, -0.0013179434463381767, -0.0002821285743266344, -8.308542601298541e-05, -0.03383605554699898, -3.516612196108326e-05, -0.3354250192642212, -0.003093103179708123, -0.00916996318846941, -0.002875600242987275, -0.0012735360069200397, -0.40327274799346924, -7.128461584215984e-05, -5.125986263010418e-06, -0.02104523591697216, -0.0006324436399154365, -1.0980416536331177, -0.00011789103882620111, -0.010637014172971249, -1.3351351299206726e-05, -4.577531944960356e-05, -0.02242877334356308, -0.00018416139937471598, -0.44064798951148987, -0.00011205045302631333, -1.9192511899746023e-05, -0.030278053134679794, -0.016090186312794685, -0.0026458040811121464, -0.03393504396080971, -0.009158387780189514, -0.004464658442884684, -2.002696055569686e-05, -0.0022515917662531137, -0.7034022808074951, -0.074947290122509, -0.0012357940431684256, -0.7055161595344543, -0.009160631336271763, -0.6130359172821045], "finish_reason": "stop"}], "metrics": {"energy": 178.02289833259582, "energy_per_token": 1.412880145496792, "time": 5.6716723, "time_per_token": 0.04501327222222222}}
{"outputs": [{"text": "counter = 0\n    source_dir_path = Path(source_dir)\n    target_dir_path = Path(target_dir)\n    if source_dir_path.exists() is False:\n        raise ValueError(\"source_dir is not exist!\")\n    if target_dir_path.exists() is False:\n        raise ValueError(\"target_dir is not exist!\")\n    for item in source_dir_path.iterdir():\n        if item.suffix in extensions:\n            shutil.move(str(item.absolute()), target_dir)\n            counter += 1\n    return counter", "tokens": ["counter", " =", " ", "0", "\n", "    ", "source", "_", "dir", "_", "path", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "dir", "_", "path", " =", " Path", "(", "target", "_", "dir", ")", "\n", "    ", "if", " source", "_", "dir", "_", "path", ".", "exists", "()", " is", " False", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "source", "_", "dir", " is", " not", " exist", "!", "\"", ")", "\n", "    ", "if", " target", "_", "dir", "_", "path", ".", "exists", "()", " is", " False", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "target", "_", "dir", " is", " not", " exist", "!", "\"", ")", "\n", "    ", "for", " item", " in", " source", "_", "dir", "_", "path", ".", "iter", "dir", "():", "\n", "        ", "if", " item", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "sh", "util", ".", "move", "(", "str", "(", "item", ".", "absolute", "())", ",", " target", "_", "dir", ")", "\n", "            ", "counter", " +=", " ", "1", "\n", "    ", "return", " counter", "\n", "\n", "if"], "logprobs": [-4.0655035972595215, -0.0782640278339386, -0.005700284615159035, -0.000648883986286819, -0.01511794701218605, -0.35604408383369446, -1.419578194618225, -0.17171703279018402, -0.16914106905460358, -1.0136265754699707, -0.17155788838863373, -0.05719415470957756, -0.011876232922077179, -0.0017642899183556437, -0.0010253892978653312, -0.0024942022282630205, -1.4185804502631072e-05, -0.0012044801842421293, -0.04494088888168335, -0.025576207786798477, -0.37062203884124756, -0.00010585224663373083, -0.0011810240102931857, -0.00042083943844772875, -0.0002632986579556018, -0.0008276851149275899, -0.00015579440514557064, -9.679325739853084e-05, -0.00041845624218694866, -3.8742269680369645e-05, -3.45700973412022e-05, -9.452849917579442e-05, -0.0006523388437926769, -0.442757785320282, -0.20365896821022034, -1.7745654582977295, -2.6940935640595853e-05, -2.90866428258596e-05, -0.003278121817857027, -5.745722592109814e-05, -0.005150857847183943, -0.2513454854488373, -0.41700479388237, -2.1466846466064453, -0.06167669966816902, -0.14529025554656982, -0.013521749526262283, -0.0033658065367490053, -0.08989473432302475, -0.011441214010119438, -6.639736966462806e-05, -0.798914909362793, -1.510148525238037, -1.106339931488037, -0.09681609272956848, -0.0038860533386468887, -2.9806501865386963, -0.3095657229423523, -1.62315034866333, -1.9490041732788086, -0.0537637434899807, -0.0006891497760079801, -0.004021771717816591, -0.07790206372737885, -0.2044876366853714, -0.009663705714046955, -5.722029527532868e-06, -7.271740287251305e-06, -0.0003912875254172832, -1.3112935448589269e-05, -0.000285584683297202, -0.003830122062936425, -0.010145993903279305, -0.0012000747956335545, -0.001609936123713851, -0.0006866481271572411, -0.003405368886888027, -0.0005640584276989102, -0.01759737730026245, -0.0002748588449321687, -2.5629668016335927e-05, -0.011978715658187866, -0.0008841419476084411, -0.011943024583160877, -0.002762313699349761, -0.0007926659309305251, -0.010405809618532658, -0.0005926521262153983, -0.005961612798273563, -0.006192425731569529, -0.0009093916742131114, -0.0001433984871255234, -0.00044800734031014144, -0.3832082152366638, -0.394342839717865, -2.995326519012451, -0.04990234598517418, -0.23325395584106445, -2.3245540432981215e-05, -4.458328112377785e-05, -0.0015655416063964367, -3.242440288886428e-05, -0.0013669917825609446, -0.19850540161132812, -0.0001530530134914443, -0.0032194233499467373, -0.011893432587385178, -0.0033235095907002687, -0.2188071459531784, -0.05622310936450958, -0.0006606780225411057, -1.602437138557434, -4.5298504119273275e-05, -0.23102788627147675, -0.0074525438249111176, -0.09047847986221313, -0.005009124521166086, -0.002116465475410223, -0.770534336566925, -0.00012003655137959868, -2.0503786799963564e-05, -0.013370376080274582, -0.000874851830303669, -1.0083166360855103, -0.0004140473320148885, -0.020480353385210037, -2.6607205867767334, -0.7204997539520264, -0.003761598840355873, -0.0007844470092095435, -0.7527172565460205, -0.00012146688823122531, -4.1126360883936286e-05, -0.326145201921463, -0.010066809132695198, -0.006512489635497332, -0.04548563435673714, -0.0395393967628479, -0.013114506378769875, -8.046303264563903e-05, -0.003089538076892495, -0.13363981246948242, -0.11707664281129837, -0.0037190811708569527, -0.6529756784439087, -0.02031344175338745, -0.5280700325965881], "finish_reason": "stop"}], "metrics": {"energy": 146.11225602245332, "energy_per_token": 0.9939609253228118, "time": 6.1003685, "time_per_token": 0.04149910544217687}}
{"outputs": [{"text": "source_path = Path(source_dir)\n    target_path = Path(target_dir)\n    if not source_path.exists():\n        raise ValueError(f\"Source directory {source_path} does not exist\")\n    if not target_path.exists():\n        raise ValueError(f\"Target directory {target_path} does not exist\")\n\n    source_dir_files = source_path.glob('*.*')\n    extensions_set = set(ext.lower() for ext in extensions)\n    moved = 0\n    for file in source_dir_files:\n        if file.suffix.lower() in extensions_set:\n            shutil.move(file, target_path)\n            moved += 1\n    return moved", "tokens": ["source", "_", "path", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "path", " =", " Path", "(", "target", "_", "dir", ")", "\n", "    ", "if", " not", " source", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "path", "}", " does", " not", " exist", "\"", ")", "\n", "    ", "if", " not", " target", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Target", " directory", " {", "target", "_", "path", "}", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "source", "_", "dir", "_", "files", " =", " source", "_", "path", ".", "glob", "('", "*", ".", "*", "')", "\n", "    ", "extensions", "_", "set", " =", " set", "(", "ext", ".", "lower", "()", " for", " ext", " in", " extensions", ")", "\n", "    ", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", " in", " source", "_", "dir", "_", "files", ":", "\n", "        ", "if", " file", ".", "suff", "ix", ".", "lower", "()", " in", " extensions", "_", "set", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "path", ")", "\n", "            ", "m", "oved", " +=", " ", "1", "\n", "    ", "return", " moved", "\n", "\n", "if"], "logprobs": [-1.6686302423477173, -0.0826939269900322, -2.8230085372924805, -0.06459534168243408, -0.01122882030904293, -0.0023137959651649, -0.0008823553798720241, -0.0014002051902934909, -1.4543427823809907e-05, -0.0013398488517850637, -0.0549791194498539, -0.012470484711229801, -0.21066780388355255, -0.00015496007108595222, -0.0017339446349069476, -0.0005619138828478754, -0.0001045410826918669, -9.524368942948058e-05, -0.0002796259068418294, -7.784063927829266e-05, -4.7205765440594405e-05, -9.881961887003854e-05, -0.0009056995622813702, -0.6030009388923645, -0.21399760246276855, -0.1439806967973709, -0.05561438947916031, -2.074220174108632e-05, -0.0023308033123612404, -0.0004764852055814117, -0.13025569915771484, -0.13083624839782715, -0.019254328683018684, -0.0024722032248973846, -0.034598443657159805, -0.005945852026343346, -3.266281055402942e-05, -0.5261316299438477, -0.32806843519210815, -0.6628745198249817, -0.5201805233955383, -0.22503413259983063, -0.6087623834609985, -0.0018475858960300684, -7.021180499577895e-05, -1.1048555374145508, -0.0456698052585125, -0.09998386353254318, -0.0006426891195587814, -0.004833917133510113, -1.4501835107803345, -0.00021300431399140507, -0.0021528657525777817, -0.05882111191749573, -0.060192570090293884, -0.008239680901169777, -0.008886195719242096, -5.602820692729438e-06, -0.00024339574156329036, -7.486063259420916e-05, -0.01585601642727852, -0.0014191328082233667, -0.0002809368306770921, -0.00042763148667290807, -0.0407320000231266, -0.0001728385395836085, -7.867782187531702e-06, -0.00028308198670856655, -0.0019996424671262503, -0.0022055604495108128, -0.010030696168541908, -0.0018720973748713732, -0.001095648156479001, -0.019904164597392082, -1.8000440832111053e-05, -0.0058751036413013935, -0.0005714452126994729, -0.001604580320417881, -0.00045074793160893023, -0.0009984752396121621, -0.002972590969875455, -0.0002681849291548133, -0.0005970602505840361, -0.6616962552070618, -0.0006692553870379925, -2.964385509490967, -0.01985321193933487, -2.525545597076416, -0.22504794597625732, -1.2707465887069702, -0.02878986857831478, -1.4084641933441162, -4.410734163684538e-06, -0.0021127776708453894, -0.00011562632425921038, -0.4106609523296356, -0.7216770052909851, -0.48002031445503235, -0.8317562341690063, -0.1148136556148529, -0.005609722342342138, -0.023618897423148155, -0.10194220393896103, -3.0907340049743652, -0.672019362449646, -1.7816283702850342, -0.008132913149893284, -0.2611088156700134, -0.19058187305927277, -2.4447152614593506, -0.3187248706817627, -0.5099226236343384, -0.27695775032043457, -0.03495018184185028, -0.004192848224192858, -0.000277123210253194, -0.01471699308604002, -0.04025748744606972, -0.03542353957891464, -0.3553701937198639, -1.0467355251312256, -0.07097245752811432, -2.4859719276428223, -0.018695687875151634, -9.679325739853084e-05, -0.00666620722040534, -0.38628119230270386, -0.04505770280957222, -0.7206186652183533, -0.2982093393802643, -0.00669794250279665, -3.576278118089249e-07, -0.0006461439770646393, -6.05564855504781e-05, -1.6689286894688848e-06, -0.00047910655848681927, -0.0027249844279140234, -0.0015960109885782003, -0.5477786660194397, -0.0862111896276474, -0.0003047717036679387, -0.14279910922050476, -2.4914430468925275e-05, -0.06776965409517288, -0.0023982354905456305, -0.0013521108776330948, -0.054719459265470505, -0.0010062160436064005, -0.0035612278152257204, -4.172316494077677e-06, -0.022000888362526894, -0.005078036803752184, -0.000940476544201374, -0.7325819730758667, -7.164221460698172e-05, -8.702239938429557e-06, -0.00782637856900692, -0.00030751267331652343, -0.5194517374038696, -0.02692866325378418, -0.022017912939190865, -6.3774932641536e-05, -0.0647578164935112, -0.18523499369621277, -0.00923221092671156, -0.00158565619494766, -0.026103032752871513, -4.410734163684538e-06, -0.006664786022156477, -0.004237838555127382, -1.5139465176616795e-05, -0.002114919014275074, -0.4705069661140442, -0.07783324271440506, -0.0014361554058268666, -0.8434438705444336, -0.017765795812010765, -0.6633926630020142], "finish_reason": "stop"}], "metrics": {"energy": 225.18649820613857, "energy_per_token": 1.2650926865513403, "time": 8.19759, "time_per_token": 0.04605387640449438}}
{"outputs": [{"text": "count = 0\n\n    for filename in Path(source_dir).glob('**/*'):\n        if filename.suffix in extensions:\n            target_path = Path(target_dir, filename.name)\n            if target_path.exists():\n                target_path.unlink()\n            shutil.move(filename, target_dir)\n            count += 1\n\n    return count", "tokens": ["count", " =", " ", "0", "\n", "\n", "    ", "for", " filename", " in", " Path", "(", "source", "_", "dir", ")", ".", "glob", "('", "**", "/*", "')", ":", "\n", "        ", "if", " filename", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "target", "_", "path", " =", " Path", "(", "target", "_", "dir", ",", " filename", ".", "name", ")", "\n", "            ", "if", " target", "_", "path", ".", "exists", "():", "\n", "                ", "target", "_", "path", ".", "un", "link", "()", "\n", "            ", "sh", "util", ".", "move", "(", "filename", ",", " target", "_", "dir", ")", "\n", "            ", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.569983959197998, -0.04438501223921776, -0.005768438335508108, -0.00027497802511788905, -0.02029615268111229, -1.3069279193878174, -0.00040880427695810795, -1.771571159362793, -3.3196871280670166, -0.014591529034078121, -0.19027501344680786, -0.003965373151004314, -0.004961796570569277, -4.911301948595792e-05, -2.1934269170742482e-05, -0.0006292270263656974, -2.407998726994265e-05, -1.0088622570037842, -0.25502321124076843, -1.6719708442687988, -0.007956832647323608, -0.3884647488594055, -0.0027060816064476967, -0.03945436701178551, -0.018181217834353447, -0.1272536963224411, -0.2121204435825348, -0.00013255194062367082, -1.4742895364761353, -2.074220174108632e-05, -0.4301892817020416, -0.00595770264044404, -0.3063482344150543, -0.009609395638108253, -0.004069856833666563, -3.1778364181518555, -0.3021836578845978, -0.9839000105857849, -0.001984533155336976, -0.06488887220621109, -0.011898379772901535, -0.1414071023464203, -6.174850568640977e-05, -1.1444026313256472e-05, -2.2740402221679688, -0.040718380361795425, -0.009978411719202995, -0.35944223403930664, -0.0010746901389211416, -0.016614878550171852, -0.04483979195356369, -1.9495190382003784, -2.439990758895874, -7.879423355916515e-05, -0.0020880342926830053, -0.008606957271695137, -0.5203964114189148, -0.04840153455734253, -0.02645776979625225, -0.0010413468116894364, -1.6873964071273804, -0.004988485481590033, -0.05774329602718353, -0.21284836530685425, -0.3878014385700226, -0.0007979070069268346, -0.0021429925691336393, -0.027346791699528694, -0.17600545287132263, -0.38608819246292114, -1.8000440832111053e-05, -5.006777428206988e-06, -0.026324598118662834, -0.00029583368450403214, -0.2297990769147873, -0.03538556769490242, -0.013596663251519203, -1.1205610462639015e-05, -2.048799514770508, -0.013414132408797741, -0.01831524446606636, -0.004600773099809885, -0.049448393285274506, -0.004634116776287556, -0.0027624324429780245, -1.8715683836489916e-05, -0.0022345830220729113, -0.1634466052055359, -0.0029695008415728807, -0.03197914734482765, -0.0014060382964089513, -1.05105721950531, -1.5497195136049413e-06, -3.576278118089249e-07, -6.83045873302035e-05, -7.879423355916515e-05, -0.08989179134368896], "finish_reason": "stop"}], "metrics": {"energy": 90.6562928533554, "energy_per_token": 0.9346009572510866, "time": 4.0027976, "time_per_token": 0.04126595463917526}}
{"outputs": [{"text": "source_dir = Path(source_dir)\n    target_dir = Path(target_dir)\n    if not source_dir.exists():\n        raise ValueError(f'The source directory {source_dir} does not exist.')\n    if not target_dir.exists():\n        raise ValueError(f'The target directory {target_dir} does not exist.')\n    # Iterate through source_dir files\n    n_moved = 0\n    for file in Path(source_dir).glob('**/*'):\n        if not file.is_file():\n            continue\n        # Extract extension\n        ext = file.suffix.lower()\n        if ext in extensions:\n            shutil.move(file, target_dir)\n            n_moved += 1\n    return n_moved", "tokens": ["source", "_", "dir", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "dir", ")", "\n", "    ", "if", " not", " source", "_", "dir", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "The", " source", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", ".", "')", "\n", "    ", "if", " not", " target", "_", "dir", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "The", " target", " directory", " {", "target", "_", "dir", "}", " does", " not", " exist", ".", "')", "\n", "    ", "#", " Iter", "ate", " through", " source", "_", "dir", " files", "\n", "    ", "n", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "glob", "('", "**", "/*", "')", ":", "\n", "        ", "if", " not", " file", ".", "is", "_", "file", "():", "\n", "            ", "continue", "\n", "        ", "#", " Ext", "ract", " extension", "\n", "        ", "ext", " =", " file", ".", "suff", "ix", ".", "lower", "()", "\n", "        ", "if", " ext", " in", " extensions", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "            ", "n", "_", "m", "oved", " +=", " ", "1", "\n", "    ", "return", " n", "_", "m", "oved", "\n", "\n", "if"], "logprobs": [-1.6686302423477173, -0.0826939269900322, -0.08127882331609726, -0.31399857997894287, -0.018837951123714447, -0.0022640805691480637, -0.0009946642676368356, -3.40932747349143e-05, -2.372236667724792e-05, -0.0010994586627930403, -0.08210825175046921, -0.008098267018795013, -0.18132033944129944, -0.00022921319759916514, -0.00021038226259406656, -0.0002449450839776546, -0.00017557987303007394, -6.794698856538162e-05, -0.0003225283289793879, -7.83174327807501e-05, -1.728519782773219e-05, -8.999896090244874e-05, -0.0008577005355618894, -0.48880815505981445, -0.27213752269744873, -0.09273260831832886, -0.04468236863613129, -3.6954195820726454e-05, -2.8729025871143676e-05, -0.000746448349673301, -0.17678982019424438, -0.09281985461711884, -0.021310986950993538, -0.002340436913073063, -0.02570425160229206, -0.006417025811970234, -3.707340147229843e-05, -0.5519415140151978, -0.43963146209716797, -0.8492690920829773, -3.130077600479126, -0.17170760035514832, -0.1180468499660492, -0.31882211565971375, -0.0023284247145056725, -9.905801562126726e-05, -0.00012206286191940308, -0.03688684105873108, -0.013693912886083126, -0.0012763934209942818, -0.007078095804899931, -0.3036535680294037, -0.002917797304689884, -0.001095886342227459, -0.019714951515197754, -0.051100220531225204, -0.00372893875464797, -0.009643634781241417, -6.079655122448457e-06, -1.2636104656849056e-05, -7.319182623177767e-05, -0.0170462466776371, -0.0013048476539552212, -0.00032908268622122705, -0.00027640812913887203, -0.17991355061531067, -0.00017176583060063422, -1.0013530300057027e-05, -0.001304133329540491, -0.0025484247598797083, -0.0023660066071897745, -0.0022048468235880136, -0.012450587935745716, -0.0018343779956921935, -0.0013329440262168646, -0.014459587633609772, -1.9073304429184645e-05, -0.0001538873475510627, -0.0006959400488995016, -0.0009197533945553005, -0.0003097769513260573, -0.0009323778795078397, -0.001754293916746974, -0.0002420847595203668, -0.0009687021956779063, -0.6057970523834229, -3.4836249351501465, -4.776139259338379, -0.022293666377663612, -0.9094719886779785, -2.869424819946289, -1.4081969261169434, -0.005373321007937193, -1.8771178722381592, -0.8011243939399719, -0.0034267534501850605, -3.0114049911499023, -0.5270434021949768, -0.3710111379623413, -0.057607587426900864, -0.1859845370054245, -0.010328179225325584, -0.00013720047718379647, -0.02119743637740612, -0.005864081904292107, -0.04964522272348404, -0.6934612393379211, -0.3949016034603119, -2.8467912673950195, -0.011635064147412777, -0.0005326044629327953, -0.00033122775494121015, -1.8715683836489916e-05, -0.005361582152545452, -7.30726242181845e-05, -1.932837963104248, -0.2092089056968689, -1.8612260818481445, -0.005707870703190565, -0.24343447387218475, -0.0017457258654758334, -0.05934138596057892, -0.008513348177075386, -1.0657471418380737, -2.633613109588623, -0.049916524440050125, -0.00020776021119672805, -0.10881496220827103, -4.529942543740617e-06, -0.02433815598487854, -0.12740473449230194, -0.07762809842824936, -0.00098525604698807, -0.05362579971551895, -0.1074434369802475, -0.026596495881676674, -1.4650412797927856, -2.943833351135254, -0.023935411125421524, -0.9150175452232361, -0.4928857386112213, -0.000266278104390949, -0.6898338794708252, -0.024155711755156517, -1.1273798942565918, -0.0013455632142722607, -0.032158900052309036, -6.878139538457617e-05, -1.4231876134872437, -0.09251865744590759, -0.02235964871942997, -0.022351838648319244, -0.009293392300605774, -0.7377779483795166, -0.12503290176391602, -0.9335627555847168, -0.022907042875885963, -0.01760955899953842, -0.007978119887411594, -0.0014393694000318646, -1.4972416162490845, -0.0001289761275984347, -1.4305012882687151e-05, -0.030997278168797493, -0.00047874910524114966, -0.6270193457603455, -0.01575569063425064, -0.16757671535015106, -0.00011193125828867778, -1.4662635294371285e-05, -0.4159415364265442, -0.03134161978960037, -0.0036601710598915815, -0.023042185232043266, -5.6503606174374e-05, -9.464769391342998e-05, -8.940656698541716e-06, -0.004821460228413343, -0.0038602848071604967, -1.6331539882230572e-05, -0.0021942604798823595, -0.0800330638885498, -0.1386478841304779, -0.0018952994141727686, -1.7165990357170813e-05, -2.1934269170742482e-05, -2.8490614567999728e-05, -0.9993709325790405, -0.016129719093441963, -0.591842532157898], "finish_reason": "stop"}], "metrics": {"energy": 216.34281135749816, "energy_per_token": 1.1386463755657799, "time": 8.624009, "time_per_token": 0.045389521052631575}}
{"outputs": [{"text": "# TODO: Implement the task\n\n    source_dir = Path(source_dir)\n    target_dir = Path(target_dir)\n\n    if source_dir.exists() and target_dir.exists():\n        for path in source_dir.glob(f'*.{extensions[0]}'):\n            shutil.move(path, target_dir)\n        return len(extensions)\n\n    raise ValueError('Path not found')", "tokens": ["#", " TODO", ":", " Im", "plement", " the", " task", "\n", "\n", "    ", "source", "_", "dir", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "if", " source", "_", "dir", ".", "exists", "()", " and", " target", "_", "dir", ".", "exists", "():", "\n", "        ", "for", " path", " in", " source", "_", "dir", ".", "glob", "(", "f", "'", "*", ".", "{", "extensions", "[", "0", "]}", "')", ":", "\n", "            ", "sh", "util", ".", "move", "(", "path", ",", " target", "_", "dir", ")", "\n", "        ", "return", " len", "(", "extensions", ")", "\n", "\n", "    ", "raise", " Value", "Error", "('", "Path", " not", " found", "')", "\n", "\n", "#"], "logprobs": [-1.9581161737442017, -3.546477794647217, -0.47367241978645325, -1.8731251955032349, -0.0033865978475660086, -1.1419405937194824, -0.34723496437072754, -1.613785743713379, -1.861963152885437, -0.20360355079174042, -1.676544427871704, -0.09167955070734024, -0.12063395231962204, -0.46405884623527527, -0.03427480533719063, -0.0029090014286339283, -0.001016934053041041, -7.199982064776123e-05, -9.238292841473594e-05, -0.00125770119484514, -0.05655031278729439, -0.01462759543210268, -0.12206064164638519, -0.00017796363681554794, -0.00026520551182329655, -0.00033301531220786273, -0.00025948495022021234, -0.00013493580627255142, -0.00041154498467221856, -8.880697714630514e-05, -5.245071224635467e-05, -9.417090768693015e-05, -0.0011391110019758344, -0.5420081615447998, -0.0007809926173649728, -0.13848920166492462, -2.057685136795044, -4.970903682988137e-05, -3.266281055402942e-05, -0.008905100636184216, -0.27814072370529175, -0.2370818555355072, -0.3923441767692566, -0.02706407569348812, -0.0003607814433053136, -2.777537883957848e-05, -0.0007289375062100589, -0.008034056052565575, -0.008374928496778011, -0.006994050461798906, -0.07398083060979843, -2.250582218170166, -2.9142909049987793, -0.04001276195049286, -0.17413495481014252, -0.00012909532233607024, -9.214453893946484e-05, -0.00029047083808109164, -1.435257911682129, -0.8223389983177185, -0.8654080629348755, -0.16897325217723846, -1.445815920829773, -0.022652437910437584, -1.1060446500778198, -0.11314187198877335, -2.022101640701294, -0.02420179173350334, -0.055279772728681564, -0.003964779432862997, -0.00103586888872087, -0.022708024829626083, -0.01372424978762865, -0.9911959171295166, -0.0003766304289456457, -4.589452510117553e-05, -0.050424449145793915, -0.0009259465732611716, -0.2785435914993286, -0.02838427945971489, -0.08133091777563095, -4.494089080253616e-05, -4.565611743601039e-05, -0.20533619821071625, -0.01836346462368965, -0.4797133207321167, -0.1523294746875763, -0.17648810148239136, -0.013844766654074192, -2.600999593734741, -0.1518007218837738, -0.1920420080423355, -1.8733091354370117, -0.022532396018505096, -0.6413879990577698, -0.02248903550207615, -6.139089964563027e-05, -0.7773985266685486, -3.762087345123291, -2.1454567909240723, -0.15247391164302826, -0.36617860198020935, -0.772346019744873, -0.01649586856365204, -2.4600982666015625], "finish_reason": "stop"}], "metrics": {"energy": 118.5915204906464, "energy_per_token": 1.1294430522918706, "time": 4.4302425, "time_per_token": 0.04219278571428572}}
{"outputs": [{"text": "counter = 0\n\n    try:\n        source_dir_path = Path(source_dir)\n        target_dir_path = Path(target_dir)\n\n        if not source_dir_path.exists():\n            raise ValueError(\n                f\"The source directory '{source_dir}' does not exist.\")\n        if not target_dir_path.exists():\n            raise ValueError(\n                f\"The target directory '{target_dir}' does not exist.\")\n\n        for filename in source_dir_path.iterdir():\n            file_extension = Path(filename).suffix\n            if file_extension in extensions:\n                target_path = target_dir_path / filename.name\n                shutil.move(str(filename), str(target_path))\n                counter += 1\n    except Exception as e:\n        print(f\"Error moving files: {e}\")\n\n    return counter", "tokens": ["counter", " =", " ", "0", "\n", "\n", "    ", "try", ":", "\n", "        ", "source", "_", "dir", "_", "path", " =", " Path", "(", "source", "_", "dir", ")", "\n", "        ", "target", "_", "dir", "_", "path", " =", " Path", "(", "target", "_", "dir", ")", "\n", "\n", "        ", "if", " not", " source", "_", "dir", "_", "path", ".", "exists", "():", "\n", "            ", "raise", " Value", "Error", "(", "\n", "                ", "f", "\"", "The", " source", " directory", " '", "{", "source", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "        ", "if", " not", " target", "_", "dir", "_", "path", ".", "exists", "():", "\n", "            ", "raise", " Value", "Error", "(", "\n", "                ", "f", "\"", "The", " target", " directory", " '", "{", "target", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "        ", "for", " filename", " in", " source", "_", "dir", "_", "path", ".", "iter", "dir", "():", "\n", "            ", "file", "_", "extension", " =", " Path", "(", "filename", ")", ".", "suff", "ix", "\n", "            ", "if", " file", "_", "extension", " in", " extensions", ":", "\n", "                ", "target", "_", "path", " =", " target", "_", "dir", "_", "path", " /", " filename", ".", "name", "\n", "                ", "sh", "util", ".", "move", "(", "str", "(", "filename", ")", ",", " str", "(", "target", "_", "path", "))", "\n", "                ", "counter", " +=", " ", "1", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " moving", " files", ":", " {", "e", "}\"", ")", "\n", "\n", "    ", "return", " counter", "\n", "\n", "print"], "logprobs": [-4.0655035972595215, -0.0782640278339386, -0.005700284615159035, -0.000648883986286819, -0.01511794701218605, -1.2060291767120361, -0.0002944036095868796, -2.1154158115386963, -0.00043847484630532563, -0.0029478687793016434, -0.012744409963488579, -0.3145570755004883, -0.23542459309101105, -0.1189018115401268, -1.0513885021209717, -0.17316867411136627, -0.05879615992307663, -0.008613931015133858, -0.0014485353603959084, -0.0010390841634944081, -9.894321920000948e-06, -1.7404405298293568e-05, -0.0016628975281491876, -0.09310608357191086, -0.062422532588243484, -0.18024420738220215, -0.0001541257370263338, -0.0013824678026139736, -0.0003933132975362241, -0.00023541064001619816, -0.00033396866638213396, -0.00015722469834145159, -8.368142152903602e-05, -0.0005519058904610574, -3.6238969187252223e-05, -1.5616295058862306e-05, -8.475421054754406e-05, -0.000576449150685221, -0.798759400844574, -0.05977043882012367, -0.32371342182159424, -0.17087683081626892, -0.02161644957959652, -1.1801649634435307e-05, -2.47952248173533e-05, -0.0012912754900753498, -8.248942322097719e-05, -0.0007134514744393528, -0.12171323597431183, -0.08346888422966003, -0.00850743893533945, -0.0009282094542868435, -0.04458044841885567, -0.024870863184332848, -1.6927575416048057e-05, -0.529270589351654, -2.782494068145752, -0.0028851095121353865, -0.40007057785987854, -0.5616085529327393, -2.0547549724578857, -0.24778498709201813, -0.15889500081539154, -0.847069501876831, -0.0007986216805875301, -0.00199690624140203, -3.4927710657939315e-05, -0.00013326710904948413, -0.20181557536125183, -0.0523887537419796, -0.0015195977175608277, -0.004807698540389538, -0.13345351815223694, -0.009685665369033813, -0.1506832093000412, -0.0020872014574706554, -0.7700297832489014, -0.43309903144836426, -0.0064731682650744915, -0.007195510435849428, -3.933898824470816e-06, -1.3708974620385561e-05, -0.0004912600270472467, -6.437280717364047e-06, -7.593343616463244e-05, -0.013424600474536419, -0.0014617482665926218, -0.00028796817059628665, -0.0006510283565148711, -0.04874572530388832, -0.0001429217227268964, -9.298280929215252e-06, -0.0002791491860989481, -0.06849159300327301, -0.000277123210253194, -0.0008874768391251564, -0.00024029705673456192, -0.0011485177092254162, -0.010058076120913029, -0.0014986485475674272, -0.0017780937487259507, -0.00016819016309455037, -0.022331787273287773, -1.2397689715726301e-05, -0.00020823694649152458, -0.0023415072355419397, -0.0010124086402356625, -0.00040344204171560705, -0.0005752577562816441, -0.0009896624833345413, -0.00045265440712682903, -0.012149025686085224, -0.0009112972766160965, -0.16652706265449524, -0.07325431704521179, -0.2438623011112213, -3.0541114807128906, -0.010231662541627884, -0.2032891809940338, -0.0004275123355910182, -2.9444261599564925e-05, -0.0019828674849122763, -1.8715683836489916e-05, -6.747018051100895e-05, -0.4610755145549774, -0.00028391621890477836, -0.000442407006630674, -0.007137041538953781, -0.007440356072038412, -3.0424489974975586, -0.12549515068531036, -0.7164656519889832, -0.005007345695048571, -1.0341569185256958, -0.0016415942227467895, -0.015388917177915573, -0.15070249140262604, -0.00023815179883968085, -0.002617269055917859, -0.00019047829846385866, -0.17343249917030334, -0.37332913279533386, -0.03363931551575661, -0.05984713137149811, -4.7205765440594405e-05, -5.829164365422912e-05, -0.4367365539073944, -0.003686419688165188, -0.03409796953201294, -0.0021472747903317213, -0.0023877699859440327, -2.552344799041748, -0.059575702995061874, -0.9078269004821777, -0.003542459337040782, -0.44085004925727844, -0.0001864259538706392, -3.015949550899677e-05, -0.007121417671442032, -2.861018856492592e-06, -0.08897664397954941, -0.27311521768569946, -0.23740758001804352, -0.030978208407759666, -0.008709539659321308, -0.025379696860909462, -0.3530309796333313, -4.005352093372494e-05, -3.6954811548639555e-06, -0.018867196515202522, -0.00017486473370809108, -0.8089394569396973, -6.460934673668817e-05, -0.011536081321537495, -0.01694510318338871, -7.056941103655845e-05, -0.02326943911612034, -6.4490144723095e-05, -0.0011162485461682081, -7.867782187531702e-06, -0.0017147850012406707, -0.005128917284309864, -0.0058510457165539265, -0.006590654142200947, -0.12574611604213715, -0.006093969568610191, -0.0019891730044037104, -1.549708758830093e-05, -0.0021054022945463657, -1.4427735805511475, -0.007557491771876812, -0.750883936882019, -0.07616206258535385, -0.16257794201374054, -0.00015841660206206143, -0.004705308936536312, -0.0008592489175498486, -0.13633973896503448, -0.02235708385705948, -0.36787503957748413, -0.06845185160636902, -0.9519437551498413, -1.5449621677398682, -0.04026424512267113, -0.02311207912862301, -0.001671228208579123, -0.1378002017736435, -0.020384110510349274, -0.005126070696860552, -0.0042924415320158005, -0.5780884623527527, -0.012444112449884415, -0.03851468488574028, -0.0028152139857411385, -0.6523381471633911, -0.006340861786156893, -3.5454390048980713], "finish_reason": "stop"}], "metrics": {"energy": 222.85113202762597, "energy_per_token": 1.0269637420627924, "time": 9.461158, "time_per_token": 0.0435998064516129}}
{"outputs": [{"text": "# Create the source directory path if it doesn't exist\n    if not Path(source_dir).exists():\n        raise ValueError(f\"{source_dir} does not exist.\")\n\n    # Create the target directory path if it doesn't exist\n    if not Path(target_dir).exists():\n        Path(target_dir).mkdir(parents=True)\n        if not Path(target_dir).exists():\n            raise ValueError(f\"{target_dir} does not exist.\")\n\n    # Get all the files in the source directory with certain extensions\n    source_files = [f for f in Path(source_dir).glob('*') if f.suffix.lower() in extensions and f.is_file()]\n\n    # Move all the files to the target directory\n    for source_file in source_files:\n        target_file = source_file.parent / f'{source_file.name}'\n        shutil.move(str(source_file), str(target_file))\n\n    # Return the number of moved files\n    return len(source_files", "tokens": ["#", " Create", " the", " source", " directory", " path", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "source", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " path", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "Path", "(", "target", "_", "dir", ")", ".", "mk", "dir", "(", "parents", "=", "True", ")", "\n", "        ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "            ", "raise", " Value", "Error", "(", "f", "\"", "{", "target", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " all", " the", " files", " in", " the", " source", " directory", " with", " certain", " extensions", "\n", "    ", "source", "_", "files", " =", " [", "f", " for", " f", " in", " Path", "(", "source", "_", "dir", ")", ".", "glob", "('", "*", "')", " if", " f", ".", "suff", "ix", ".", "lower", "()", " in", " extensions", " and", " f", ".", "is", "_", "file", "()", "]", "\n", "\n", "    ", "#", " Move", " all", " the", " files", " to", " the", " target", " directory", "\n", "    ", "for", " source", "_", "file", " in", " source", "_", "files", ":", "\n", "        ", "target", "_", "file", " =", " source", "_", "file", ".", "parent", " /", " f", "'{", "source", "_", "file", ".", "name", "}'", "\n", "        ", "sh", "util", ".", "move", "(", "str", "(", "source", "_", "file", ")", ",", " str", "(", "target", "_", "file", "))", "\n", "\n", "    ", "#", " Return", " the", " number", " of", " moved", " files", "\n", "    ", "return", " len", "(", "source", "_", "files"], "logprobs": [-1.9581161737442017, -2.855996608734131, -2.5585896968841553, -1.29548978805542, -2.6244821548461914, -1.0321364402770996, -1.622090220451355, -0.018685391172766685, -0.5023046731948853, -0.0006942722829990089, -3.0636318115284666e-05, -0.028593523427844048, -0.11477677524089813, -0.0009527434594929218, -1.095027208328247, -0.07000847905874252, -0.09782419353723526, -0.01038091629743576, -0.0005365362740121782, -9.131014667218551e-05, -3.433168603805825e-05, -0.00046659549116156995, -1.1801649634435307e-05, -0.293997585773468, -0.002253019018098712, -0.0024222577922046185, -0.00129270413890481, -0.08343653380870819, -0.006183539982885122, -8.106198947643861e-06, -0.21623103320598602, -0.21357345581054688, -0.33991578221321106, -2.172290563583374, -0.0013763965107500553, -0.00010179955279454589, -0.0003716255014296621, -0.034316159784793854, -0.18995191156864166, -0.00032455421751365066, -0.0025417660363018513, -0.8396221995353699, -0.011596649885177612, -9.274052717955783e-05, -0.0032604176085442305, -0.10599003732204437, -0.0010113369207829237, -0.0383133590221405, -0.03831370174884796, -0.008095192722976208, -0.01831524446606636, -0.002890815259888768, -0.00942731648683548, -0.015282909385859966, -0.0011299422476440668, -0.007726071868091822, -0.0001559135998832062, -1.6689286894688848e-06, -0.0005143749876879156, -0.01008604560047388, -0.00016532962035853416, -0.014524209313094616, -0.005918596405535936, -0.00033718624035827816, -0.00015853578224778175, -0.001379610737785697, -5.125986263010418e-06, -9.417489309271332e-06, -0.00018273114983458072, -1.3470558769768104e-05, -0.013981492258608341, -0.0002961912250611931, -0.00037579628406092525, -0.0002733095607254654, -0.3811982274055481, -0.04691814258694649, -0.004526250530034304, -8.940656698541716e-06, -8.034383063204587e-05, -0.00021419614495243877, -0.0007713441736996174, -0.0026591201312839985, -5.757642793469131e-05, -0.17433574795722961, -0.037793733179569244, -0.0033117469865828753, -0.0019062458304688334, -0.7851614952087402, -0.025572722777724266, -2.812891721725464, -0.6015679836273193, -0.03829614818096161, -0.006380307022482157, -0.0020159415435045958, -0.013473999686539173, -6.496695277746767e-05, -5.1616290875244886e-05, -0.0007383481133729219, -0.00016664070426486433, -0.06458774954080582, -0.0013399679446592927, -0.017407024279236794, -0.0028284089639782906, -0.0119515061378479, -0.01937277801334858, -1.2159273865108844e-05, -0.0013678251998499036, -0.01043530274182558, -0.003183418419212103, -0.11253584921360016, -0.01842748373746872, -0.0001928620331455022, -0.0003133521240670234, -0.0012507957872003317, -0.40584278106689453, -0.0005847889697179198, -0.0012444854946807027, -0.07828982174396515, -0.0068825320340693, -0.0002526917669456452, -0.0015043619787320495, -0.05283922702074051, -0.00550954882055521, -0.2952873110771179, -1.6850236654281616, -0.888710618019104, -2.0884299278259277, -0.28970789909362793, -0.3966986835002899, -0.08504875749349594, -0.03204784169793129, -0.013803734444081783, -0.973353922367096, -2.6559548377990723, -0.02730688825249672, -0.04830169677734375, -0.0010006187949329615, -0.5927126407623291, -0.008191442117094994, -0.14004187285900116, -0.0496777780354023, -0.28660479187965393, -0.9155956506729126, -0.07989946007728577, -0.0010937429033219814, -0.0004720765573438257, -0.09098178893327713, -0.000660439720377326, -0.000528076896443963, -2.396077979938127e-05, -1.0251946150674485e-05, -9.202533692587167e-05, -6.139089964563027e-05, -1.2009986639022827, -0.1589186042547226, -0.08631114661693573, -0.16919320821762085, -0.036403488367795944, -0.10314120352268219, -0.00045468006283044815, -0.2862395644187927, -3.075552376685664e-05, -1.619901180267334, -0.012058809399604797, -0.0009700122172944248, -0.013581963256001472, -0.018345674499869347, -2.4108572006225586, -0.2822851836681366, -0.017310135066509247, -0.08217918872833252, -3.45700973412022e-05, -6.3774932641536e-05, -0.0017764277290552855, -0.006755015812814236, -0.0021082572638988495, -0.12732917070388794, -0.0002849888114724308, -0.1087479218840599, -0.251005619764328, -1.1471556425094604, -0.2820247411727905, -0.17699097096920013, -0.16263447701931, -0.016960104927420616, -0.006172047927975655, -0.003115088678896427, -0.0645524337887764, -0.0007384672062471509, -0.8041521310806274, -1.536456823348999, -0.030261052772402763, -0.00600759033113718, -0.002386342966929078, -0.0017755947774276137, -1.847726889536716e-05, -9.214453893946484e-05, -0.00016223068814724684, -0.0006027788622304797, -0.003752572927623987, -0.7449853420257568, -0.007632143795490265, -0.04172757640480995, -0.022797752171754837, -2.4469172954559326, -8.904537389753386e-05, -0.09865222126245499, -0.0023940731771290302, -1.0058221817016602, -0.10664044320583344, -1.0967389345169067, -1.3866052627563477, -0.07464474439620972, -0.00019929806876461953, -0.004126605577766895, -0.0010170531459152699, -1.366588830947876, -0.5360302925109863, -0.030580906197428703, -0.016216401010751724, -0.33020615577697754, -4.184158387943171e-05, -1.7881377516459906e-06, -0.003955874126404524, -0.00028236693469807506, -1.9703712463378906, -3.480850500636734e-05, -0.0003449321957305074, -2.753696753643453e-05, -0.00014685506175737828, -0.009390471503138542, -0.00011526874004630372, -0.05295828729867935, -0.0001282609737245366, -0.0054082986898720264, -1.3828182090946939e-05, -0.004456944297999144, -0.04440861940383911, -0.02284296043217182, -0.13290727138519287, -0.027364885434508324, -0.8434295058250427, -0.2900560796260834, -0.006657562684267759, -0.06359051913022995, -0.0004761277523357421, -0.5299177765846252, -0.0007577646756544709, -0.01910814829170704, -0.00038068200228735805, -0.01121986098587513, -0.003316618502140045, -0.0005843124235980213, -0.0018353299237787724, -2.4318398573086597e-05, -8.153582894010469e-05], "finish_reason": "length"}], "metrics": {"energy": 264.14170834445946, "energy_per_token": 1.0318035482205448, "time": 11.13315, "time_per_token": 0.0434888671875}}
{"outputs": [{"text": "if not Path(source_dir).exists():\n        raise ValueError(\"Source directory does not exist.\")\n    if not Path(target_dir).exists():\n        raise ValueError(\"Target directory does not exist.\")\n    count = 0\n    for file in Path(source_dir).rglob('*.*'):\n        if file.suffix in extensions:\n            count += 1\n            shutil.move(str(file), str(Path(target_dir, file.name)))\n    return count", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Target", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "rg", "lob", "('", "*", ".", "*", "')", ":", "\n", "        ", "if", " file", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "count", " +=", " ", "1", "\n", "            ", "sh", "util", ".", "move", "(", "str", "(", "file", ")", ",", " str", "(", "Path", "(", "target", "_", "dir", ",", " file", ".", "name", ")))", "\n", "    ", "return", " count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.1855026483535767, -0.1673680990934372, -0.16622605919837952, -0.025812646374106407, -0.00987324584275484, -0.00013791563105769455, -3.969590397900902e-05, -0.001715261023491621, -0.0004383556661196053, -0.27787116169929504, -0.06675697863101959, -0.01265671942383051, -0.003562177997082472, -0.04697433114051819, -0.008674204349517822, -3.218599158572033e-05, -0.5200412273406982, -1.613868236541748, -0.5839881896972656, -0.10998150706291199, -0.14200231432914734, -0.00020096666412428021, -0.005151213612407446, -0.6216763854026794, -0.004968202207237482, -0.0001517419150331989, -0.002144182100892067, -0.26746973395347595, -0.10489095747470856, -0.003641167189925909, -0.00047565114800818264, -0.00026067672297358513, -0.005119073670357466, -1.1801649634435307e-05, -1.8596476365928538e-05, -0.0001658063702052459, -2.6702524337451905e-05, -0.030908631160855293, -0.0008983152220025659, -0.00045217780279926956, -0.0003763920976780355, -0.09675192087888718, -0.0002388668799540028, -2.1457441107486375e-05, -0.0025022882036864758, -0.0003939091111533344, -0.009506669826805592, -0.0009148702956736088, -0.0020058290101587772, -0.0008350699208676815, -0.0005641775787808001, -0.002466376405209303, -0.00025412190007045865, -0.00024637524620629847, -0.0010205067228525877, -1.0798158645629883, -2.773292303085327, -0.011931127868592739, -0.007946188561618328, -0.00014006110723130405, -0.028908351436257362, -0.10465961694717407, -0.0962611511349678, -0.6872211694717407, -0.5195031762123108, -0.13359162211418152, -0.0007750368095003068, -0.0013577061472460628, -1.8715683836489916e-05, -1.5735502529423684e-05, -0.0003519630990922451, -5.23315102327615e-05, -1.694169044494629, -0.0068114944733679295, -0.7711407542228699, -0.015280209481716156, -1.440199613571167, -0.1343919187784195, -0.005163073539733887, -0.0004948345012962818, -0.042290184646844864, -0.0025752971414476633, -0.1682887226343155, -0.08303309977054596, -0.00042524831951595843, -0.2151947319507599, -2.8371408916427754e-05, -0.4292867183685303, -0.004518181085586548, -0.07596386224031448, -0.007284154184162617, -0.0009193961159326136, -2.483376979827881, -0.009898151271045208, -0.03930457681417465, -6.675497570540756e-05, -0.007435386534780264, -0.007946306839585304, -0.23959015309810638, -5.8053239627042785e-05, -1.156323378381785e-05, -0.01033785380423069, -0.0006980843027122319, -1.2951862812042236, -6.3774932641536e-05, -0.0024465173482894897, -0.03490586206316948, -0.00018106251081917435, -1.6167384386062622, -0.0013083001831546426, -0.15770283341407776, -0.005263162776827812, -0.08610357344150543, -0.00032276666024699807, -4.291525328881107e-06, -1.1333441734313965, -0.118170365691185, -0.011245558969676495, -0.09302429854869843, -0.0257207490503788, -0.00691212946549058, -0.06774403154850006, -0.19755427539348602, -0.0015813715290278196, -1.3376150131225586, -9.536738616588991e-07, -3.576278118089249e-07, -3.40932747349143e-05, -0.00018606838420964777, -0.06808920949697495], "finish_reason": "stop"}], "metrics": {"energy": 170.87089842224114, "energy_per_token": 1.314391526324932, "time": 5.476444, "time_per_token": 0.042126492307692304}}
{"outputs": [{"text": "if not Path(source_dir).exists():\n        raise ValueError(f'source_dir: {source_dir} does not exist')\n    if not Path(target_dir).exists():\n        raise ValueError(f'target_dir: {target_dir} does not exist')\n\n    counter = 0\n    for file in Path(source_dir).iterdir():\n        if file.is_file() and file.suffix in extensions:\n            shutil.move(str(file), f'{target_dir}{file.name}')\n            counter += 1\n\n    return counter", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "source", "_", "dir", ":", " {", "source", "_", "dir", "}", " does", " not", " exist", "')", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "target", "_", "dir", ":", " {", "target", "_", "dir", "}", " does", " not", " exist", "')", "\n", "\n", "    ", "counter", " =", " ", "0", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "iter", "dir", "():", "\n", "        ", "if", " file", ".", "is", "_", "file", "()", " and", " file", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "sh", "util", ".", "move", "(", "str", "(", "file", ")", ",", " f", "'{", "target", "_", "dir", "}{", "file", ".", "name", "}", "')", "\n", "            ", "counter", " +=", " ", "1", "\n", "\n", "    ", "return", " counter", "\n", "\n", "if"], "logprobs": [-1.1855026483535767, -0.1673680990934372, -0.16622605919837952, -0.025812646374106407, -0.00987324584275484, -0.00013791563105769455, -3.969590397900902e-05, -0.001715261023491621, -0.0004383556661196053, -0.27787116169929504, -0.06675697863101959, -0.01265671942383051, -0.003562177997082472, -0.04697433114051819, -0.008674204349517822, -3.218599158572033e-05, -0.5200412273406982, -0.28106263279914856, -0.719582200050354, -1.4771298170089722, -0.13499359786510468, -0.0020769708789885044, -2.0446465015411377, -0.14967499673366547, -0.003399547655135393, -3.2782016205601394e-05, -0.0004711233195848763, -0.03116229921579361, -0.3703088164329529, -0.002687891712412238, -0.03163132816553116, -0.3733210861682892, -0.0026271373499184847, -0.16924594342708588, -0.06485770642757416, -0.0042841327376663685, -0.00041059168870560825, -0.0002924968139268458, -0.0038948405999690294, -1.8358061424805783e-05, -2.0503786799963564e-05, -0.00022790218645241112, -4.339123915997334e-05, -0.022414086386561394, -0.001259963377378881, -0.0003916450368706137, -0.00039283663500100374, -0.062117185443639755, -0.00022075122979003936, -7.748573807475623e-06, -0.007021987345069647, -0.00046659549116156995, -0.0024497280828654766, -0.014828228391706944, -0.0020123724825680256, -0.0003400462737772614, -0.007227110676467419, -0.002902939449995756, -0.018548371270298958, -1.6689160474925302e-05, -0.0006649667047895491, -0.00039319414645433426, -0.003052815329283476, -0.0006050424999557436, -0.0015185264637693763, -0.001278298324905336, -0.001057184999808669, -0.44522491097450256, -0.0007564543629996479, -2.835845947265625, -0.06645128130912781, -0.008917033672332764, -0.0006475735572166741, -0.015126753598451614, -0.2185177505016327, -0.1372392773628235, -0.9483662843704224, -0.4042496383190155, -0.1656157225370407, -0.0016496871830895543, -0.0013887770473957062, -3.862306402879767e-05, -2.0503786799963564e-05, -0.0007034449372440577, -0.00013779645087197423, -0.8683141469955444, -0.0004351384413894266, -0.0013874676078557968, -0.010513043031096458, -0.003875959664583206, -0.12874047458171844, -0.10907334834337234, -0.00027044929447583854, -1.5197585821151733, -6.6756979322235566e-06, -0.05483490973711014, -0.19246603548526764, -0.004035900812596083, -0.2889479398727417, -0.0001250427303602919, -0.0848522037267685, -2.753696753643453e-05, -0.3081117570400238, -0.004888724535703659, -0.013153214938938618, -0.0057297986932098866, -0.0017780937487259507, -0.4151862561702728, -0.00010096516780322418, -8.106198947643861e-06, -0.02649979665875435, -0.0006304183625616133, -1.1635901927947998, -9.381330892210826e-05, -0.006017543841153383, -0.03327420353889465, -0.00020382710499688983, -2.168118953704834, -0.07608053088188171, -0.028479289263486862, -3.2066785934148356e-05, -5.006777428206988e-06, -0.3403903543949127, -0.06782256811857224, -0.012559369206428528, -0.5671102404594421, -0.01717972382903099, -0.0009662011871114373, -0.018338534981012344, -0.002506093354895711, -0.027746308594942093, -0.013465765863656998, -0.007235158234834671, -2.407998726994265e-05, -0.0017565549351274967, -0.7558491826057434, -0.002608470618724823, -0.09919223934412003, -0.0029320605099201202, -0.7741945385932922, -0.0057808831334114075, -0.5547378659248352], "finish_reason": "stop"}], "metrics": {"energy": 180.39606229591365, "energy_per_token": 1.2703948049008003, "time": 6.1022873, "time_per_token": 0.04297385422535212}}
{"outputs": [{"text": "source_dir = Path(source_dir)\n    target_dir = Path(target_dir)\n    if not source_dir.is_dir():\n        raise ValueError('Source directory does not exist')\n    if not target_dir.is_dir():\n        raise ValueError('Target directory does not exist')\n\n    n = 0\n    for file_ in source_dir.glob('*'):\n        if file_.suffix in extensions:\n            shutil.move(file_, target_dir)\n            n += 1\n\n    print(n)\n    return n", "tokens": ["source", "_", "dir", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "dir", ")", "\n", "    ", "if", " not", " source", "_", "dir", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "('", "Source", " directory", " does", " not", " exist", "')", "\n", "    ", "if", " not", " target", "_", "dir", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "('", "Target", " directory", " does", " not", " exist", "')", "\n", "\n", "    ", "n", " =", " ", "0", "\n", "    ", "for", " file", "_", " in", " source", "_", "dir", ".", "glob", "('", "*", "')", ":", "\n", "        ", "if", " file", "_", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", ",", " target", "_", "dir", ")", "\n", "            ", "n", " +=", " ", "1", "\n", "\n", "    ", "print", "(", "n", ")", "\n", "    ", "return", " n"], "logprobs": [-1.6686302423477173, -0.0826939269900322, -0.08127882331609726, -0.31399857997894287, -0.018837951123714447, -0.0022640805691480637, -0.0009946642676368356, -3.40932747349143e-05, -2.372236667724792e-05, -0.0010994586627930403, -0.08210825175046921, -0.008098267018795013, -0.18132033944129944, -0.00022921319759916514, -0.00021038226259406656, -0.0002449450839776546, -0.00017557987303007394, -6.794698856538162e-05, -0.0003225283289793879, -7.83174327807501e-05, -1.728519782773219e-05, -8.999896090244874e-05, -0.0008577005355618894, -0.48880815505981445, -0.27213752269744873, -0.09273260831832886, -0.04468236863613129, -3.6954195820726454e-05, -2.8729025871143676e-05, -0.000746448349673301, -1.8237624168395996, -4.8993817472364753e-05, -0.005887665785849094, -0.1713516116142273, -0.013075443916022778, -0.0025206005666404963, -0.04252795875072479, -0.0043586730025708675, -3.158996332786046e-05, -0.8157004117965698, -1.3087656497955322, -0.09785327315330505, -0.13522344827651978, -0.0003051292151212692, -0.005356958135962486, -0.812466025352478, -0.002238508081063628, -0.03147135302424431, -0.052224140614271164, -0.0035921114031225443, -0.002509423065930605, -6.6756979322235566e-06, -2.0503786799963564e-05, -0.0001134808044298552, -0.02521592564880848, -0.00019071667338721454, -4.339123915997334e-05, -0.003623469267040491, -0.0003692421887535602, -0.0003233625029679388, -0.05372782051563263, -0.00024232311989180744, -2.6940935640595853e-05, -0.0022047278471291065, -0.011670765466988087, -0.0014879356604069471, -0.001158519764430821, -0.00043883229955099523, -0.000568228424526751, -0.0013863962376490235, -0.0005893162451684475, -0.8575877547264099, -0.000635183765552938, -3.8667800426483154, -1.1414783000946045, -0.024050280451774597, -0.0003995097358711064, -0.07212218642234802, -0.09364693611860275, -0.0508420467376709, -0.757175087928772, -1.39165461063385, -2.1224522590637207, -0.32451188564300537, -0.0001842805795604363, -1.2278481335670222e-05, -4.95898348162882e-05, -1.2666523456573486, -0.18596722185611725, -0.11623073369264603, -0.24687476456165314, -0.0004974558250978589, -0.010960728861391544, -0.0022940528579056263, -0.13342326879501343, -0.09952414035797119, -0.0005821678787469864, -0.00024816294899210334, -0.6119069457054138, -2.2053474822314456e-05, -0.2483615279197693, -0.004918025340884924, -0.1182059571146965, -0.006205457728356123, -0.001004667836241424, -0.6357088088989258, -8.237022848334163e-05, -9.894321920000948e-06, -0.015344778075814247, -0.0006386386230587959, -0.46028295159339905, -0.04593774676322937, -0.02292335405945778, -0.021815918385982513, -4.732496745418757e-05, -1.6331539882230572e-05, -0.18760310113430023, -0.012823736295104027, -0.0014615101972594857, -0.013852173462510109, -0.013654167763888836, -0.0039265453815460205, -1.811964830267243e-05, -0.0018160531762987375, -1.1088101863861084, -0.002949770539999008, -2.541914224624634, -0.11405081301927567, -1.29221510887146, -0.22762729227542877, -0.026273740455508232, -0.23388628661632538, -0.00977585930377245, -0.01239536888897419], "finish_reason": "stop"}], "metrics": {"energy": 139.07944872856137, "energy_per_token": 1.0379063337952341, "time": 5.6673965, "time_per_token": 0.04229400373134328}}
{"outputs": [{"text": "if not Path(source_dir).is_dir():\n        raise ValueError(f'{source_dir} does not exist.')\n    if not Path(target_dir).is_dir():\n        raise ValueError(f'{target_dir} does not exist.')\n\n    counter = 0\n    for ext in extensions:\n        source = Path(source_dir) / ext\n        target = Path(target_dir) / ext\n        shutil.move(str(source), str(target))\n        counter += 1\n    return counter", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'{", "source", "_", "dir", "}", " does", " not", " exist", ".", "')", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'{", "target", "_", "dir", "}", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "counter", " =", " ", "0", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "source", " =", " Path", "(", "source", "_", "dir", ")", " /", " ext", "\n", "        ", "target", " =", " Path", "(", "target", "_", "dir", ")", " /", " ext", "\n", "        ", "sh", "util", ".", "move", "(", "str", "(", "source", ")", ",", " str", "(", "target", "))", "\n", "        ", "counter", " +=", " ", "1", "\n", "    ", "return", " counter", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.1855026483535767, -0.1673680990934372, -0.16622605919837952, -0.025812646374106407, -0.00987324584275484, -0.00013791563105769455, -3.969590397900902e-05, -0.001715261023491621, -0.0004383556661196053, -1.4309968948364258, -0.00023600654094479978, -0.007248768582940102, -0.1508864164352417, -0.013317207805812359, -0.0036751364823430777, -0.057314611971378326, -0.0063887168653309345, -3.2305197237292305e-05, -0.5255365967750549, -0.31972089409828186, -2.34366774559021, -0.003171060001477599, -6.854299135738984e-05, -0.0002543602604418993, -0.08862115442752838, -1.245579719543457, -0.0011828100541606545, -0.02256666123867035, -1.6078935861587524, -0.01860816590487957, -0.002102547325193882, -0.2020592987537384, -0.09304330497980118, -0.0036579144652932882, -0.00034528967808000743, -0.0002847504511009902, -0.0028216331265866756, -1.156323378381785e-05, -1.7881233361549675e-05, -0.000271879427600652, -6.389413465512916e-05, -0.013899083249270916, -2.5629668016335927e-05, -7.760223525110632e-05, -0.001190192298963666, -0.0004606377915479243, -0.00040797016117721796, -0.026803910732269287, -0.0002755738969426602, -1.7046782886609435e-05, -0.0015219782944768667, -0.00047469791024923325, -0.0020452074240893126, -0.0226287804543972, -2.8132995794294402e-05, -0.00010597144137136638, -0.0005099665140733123, -0.001602914067916572, -0.0005428509321063757, -0.0004861365014221519, -0.00312210014089942, -0.0002489972102921456, -0.0013750869547948241, -0.5063546299934387, -0.0005514293443411589, -2.7612972259521484, -0.07600175589323044, -0.006152025423943996, -0.00047434045700356364, -0.013764463365077972, -0.19562488794326782, -0.11034390330314636, -2.9570560455322266, -0.009479274973273277, -0.005326366052031517, -0.0007611000328324735, -0.003946968819946051, -0.0045648179948329926, -1.5815848112106323, -2.4269943237304688, -0.27427056431770325, -0.00471088569611311, -0.006895910017192364, -7.629103492945433e-05, -2.9802276912960224e-06, -0.014134300872683525, -1.2961678504943848, -0.8969813585281372, -0.07347121834754944, -0.015600781887769699, -0.4534859359264374, -0.003621806390583515, -0.002359822392463684, -0.0003237200144212693, -0.002619646955281496, -3.0517112463712692e-05, -1.847726889536716e-05, -0.012883991934359074, -0.022002404555678368, -0.016671154648065567, -0.004106779582798481, -0.18549972772598267, -1.7342181205749512, -0.0004323977918829769, -3.099393507000059e-05, -0.041368719190359116, -0.004681934602558613, -1.1300840377807617, -0.0001262346631847322, -0.0014578201808035374, -0.018314892426133156, -0.0003748429589904845, -0.02426171489059925, -5.8053239627042785e-05, -0.0002212279650848359, -0.03185513988137245, -0.013173921033740044, -0.01693771965801716, -0.06787002086639404, -0.028892485424876213, -0.7743043303489685, -0.00023135847004596144, -0.010036950930953026, -0.6157917380332947, -0.05864474177360535, -0.0027312852907925844, -0.9486645460128784, -1.0728830375228426e-06, -4.768370445162873e-07, -8.296622399939224e-05, -5.757642793469131e-05, -0.06248132884502411], "finish_reason": "stop"}], "metrics": {"energy": 134.13992609119416, "energy_per_token": 1.0162115612969254, "time": 5.6778736, "time_per_token": 0.04301419393939394}}
{"outputs": [{"text": "# Check if source and target directories exist\n    if not Path(source_dir).exists():\n        raise ValueError(f\"Directory {source_dir} does not exist.\")\n    if not Path(target_dir).exists():\n        raise ValueError(f\"Directory {target_dir} does not exist.\")\n\n    # Move files from source to target directory\n    moved_files = 0\n    for file in Path(source_dir).iterdir():\n        if file.suffix.lower() in extensions:\n            shutil.move(file, Path(target_dir) / file.name)\n            moved_files += 1\n\n    return moved_files", "tokens": ["#", " Check", " if", " source", " and", " target", " directories", " exist", "\n", "    ", "if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Directory", " {", "source", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Directory", " {", "target", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Move", " files", " from", " source", " to", " target", " directory", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "iter", "dir", "():", "\n", "        ", "if", " file", ".", "suff", "ix", ".", "lower", "()", " in", " extensions", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " Path", "(", "target", "_", "dir", ")", " /", " file", ".", "name", ")", "\n", "            ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files"], "logprobs": [-1.9581161737442017, -0.9550824165344238, -0.3658955693244934, -0.2780938744544983, -1.7892568111419678, -0.012060930021107197, -0.05507389456033707, -0.012909293174743652, -0.1436719000339508, -0.0023557788226753473, -0.4487260580062866, -0.05544918030500412, -0.22693778574466705, -0.010198387317359447, -0.0018935146508738399, -6.12716976320371e-05, -2.109982233378105e-05, -0.001111366436816752, -0.0001284993631998077, -0.28896936774253845, -0.10548029094934464, -0.004475576803088188, -0.0011150578502565622, -0.023692242801189423, -0.007633563131093979, -1.5020257706055418e-05, -0.3289651870727539, -0.2826412618160248, -0.37745389342308044, -2.5789759159088135, -0.5032958388328552, -0.0007404923089779913, -5.411955135059543e-05, -0.0001394651480950415, -0.02503666654229164, -0.09403721243143082, -0.00021336186910048127, -0.0016623024130240083, -0.43187931180000305, -0.0034743917640298605, -6.460934673668817e-05, -0.0018008219776675105, -0.11331251263618469, -0.05408147722482681, -0.0038986403960734606, -0.0002112165529979393, -0.00015007323236204684, -0.0009392855572514236, -4.768360213347478e-06, -9.298280929215252e-06, -0.00010787858627736568, -1.3828182090946939e-05, -0.010653998702764511, -0.000534868217073381, -0.0003554189461283386, -0.00033909291960299015, -0.0494949072599411, -0.0001161031104857102, -1.0013530300057027e-05, -0.0001851148990681395, -0.0007724162423983216, -0.000750617531593889, -0.002183911856263876, -0.00038342276820912957, -0.010281692259013653, -1.4662635294371285e-05, -0.00025376438861712813, -0.00018594920402392745, -0.0005314130103215575, -0.0004744596080854535, -0.0002766464895103127, -0.0007458527106791735, -0.00022313489171210676, -0.0001641377166379243, -0.0007700338610447943, -0.09911267459392548, -0.0009532198309898376, -0.18492135405540466, -1.2693088054656982, -0.32268428802490234, -2.202299118041992, -0.044735148549079895, -1.0384023189544678, -0.0038327344227582216, -0.5046594142913818, -0.1287974864244461, -0.002417976502329111, -0.622044563293457, -0.023538559675216675, -0.09428024291992188, -0.17871686816215515, -0.024157458916306496, -0.023080162703990936, -4.410646579344757e-05, -0.009715179912745953, -0.045497819781303406, -0.03283524513244629, -0.276887446641922, -0.2942526340484619, -0.11053112894296646, -0.0006356602534651756, -0.0005446380819194019, -2.0503786799963564e-05, -5.8412379075889476e-06, -0.0005399914807640016, -1.9788545614574105e-05, -0.7176585793495178, -0.00047779586748220026, -0.00018916724366135895, -0.0079458337277174, -0.0008553183870390058, -0.08419711142778397, -0.04498875513672829, -4.7444173105759546e-05, -0.4282550811767578, -2.8609820219571702e-05, -1.0820035934448242, -0.016290761530399323, -0.00035279724397696555, -0.011913222260773182, -0.01640944369137287, -0.06486295908689499, -0.009946780279278755, -0.0005156855913810432, -0.43298035860061646, -4.124556289752945e-05, -2.3841830625315197e-06, -0.006299993954598904, -9.357491217087954e-05, -0.44327306747436523, -0.03909538313746452, -0.48812222480773926, -0.0028038020245730877, -0.007569559384137392, -3.45700973412022e-05, -2.7418097943154862e-06, -0.5687920451164246, -1.0871506929397583, -0.07688646018505096, -0.025727836415171623, -0.022719794884324074, -0.003909921273589134, -0.01942293718457222, -0.0010028815595433116, -0.015204600058495998, -5.8412379075889476e-06, -1.0013530300057027e-05, -1.1086402082582936e-05, -0.0015600664773955941, -0.001517693279311061, -1.0609570381348021e-05, -0.0014830554137006402, -0.3363982141017914, -0.0007601470570079982, -0.125483900308609, -0.0011138670379295945, -2.5152843591058627e-05, -1.2159273865108844e-05], "finish_reason": "stop"}], "metrics": {"energy": 186.9233293991088, "energy_per_token": 1.1830590468298026, "time": 6.741223, "time_per_token": 0.04266596835443038}}
{"outputs": [{"text": "if not Path(source_dir).exists():\n        raise ValueError('Source directory does not exist!')\n    if not Path(target_dir).exists():\n        raise ValueError('Target directory does not exist!')\n\n    moved_files = 0\n\n    for extension in extensions:\n        for path in Path(source_dir).rglob(extension):\n            shutil.move(path, target_dir)\n            moved_files += 1\n\n    return moved_files", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "Source", " directory", " does", " not", " exist", "!", "')", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "Target", " directory", " does", " not", " exist", "!", "')", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "for", " path", " in", " Path", "(", "source", "_", "dir", ")", ".", "rg", "lob", "(", "extension", "):", "\n", "            ", "sh", "util", ".", "move", "(", "path", ",", " target", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "files"], "logprobs": [-1.1855026483535767, -0.1673680990934372, -0.16622605919837952, -0.025812646374106407, -0.00987324584275484, -0.00013791563105769455, -3.969590397900902e-05, -0.001715261023491621, -0.0004383556661196053, -0.27787116169929504, -0.06675697863101959, -0.01265671942383051, -0.003562177997082472, -0.04697433114051819, -0.008674204349517822, -3.218599158572033e-05, -0.933729887008667, -0.9835114479064941, -0.15353094041347504, -0.09513440728187561, -0.00027616979787126184, -0.005977965891361237, -2.5305795669555664, -0.015422842465341091, -0.0017644088948145509, -0.16402579843997955, -0.13280132412910461, -0.0038484097458422184, -0.0005156855913810432, -0.00037281715776771307, -0.004893825389444828, -1.2993727978027891e-05, -2.1576648578047752e-05, -0.00022980909852776676, -4.136476854910143e-05, -0.025988861918449402, -0.001485078944824636, -0.00043525759247131646, -0.00035232058144174516, -0.09114177525043488, -0.00031549722189083695, -2.074220174108632e-05, -0.0038028082344681025, -0.027487481012940407, -0.0030012347269803286, -0.003254595212638378, -0.0009159421897493303, -0.0014029431622475386, -0.007045188918709755, -0.00034874555421993136, -0.002704773796722293, -0.4589598476886749, -0.0008269704412668943, -1.2525324821472168, -0.05466415733098984, -0.234629288315773, -0.19912073016166687, -0.07027542591094971, -0.042706623673439026, -0.00010179955279454589, -0.01141057163476944, -0.9933189749717712, -0.00020418466010596603, -0.10024972259998322, -2.4099810123443604, -0.002639264799654484, -0.0016614693449810147, -0.00035363141796551645, -0.0025069257244467735, -0.010972520336508751, -0.7919763922691345, -2.5959432125091553, -0.02911459282040596, -0.05647922679781914, -0.0016606362769380212, -0.0013940150383859873, -2.7418097943154862e-06, -6.9141146923357155e-06, -0.00014006110723130405, -4.2437604861333966e-05, -0.8386309146881104, -0.0052256896160542965, -0.12332302331924438, -0.9863654375076294, -0.010577685199677944, -0.02659510262310505, -0.004223950207233429, -0.9854889512062073, -7.319182623177767e-05, -9.65590606938349e-06, -0.015049958601593971, -0.0003237200144212693, -0.6631110906600952, -0.01829698495566845, -1.9548763036727905, -0.00016819016309455037, -2.074220174108632e-05, -0.1950138807296753, -0.02769598737359047, -0.009811273775994778, -0.03460938483476639, -7.629365427419543e-06, -1.8000440832111053e-05, -2.3007127310847864e-05, -0.0076203132048249245, -0.0025418850127607584, -2.074220174108632e-05, -0.00416305148974061, -0.055522371083498, -0.0022096047177910805, -0.05695139989256859, -0.0017141900025308132, -3.683499380713329e-05, -1.156323378381785e-05], "finish_reason": "stop"}], "metrics": {"energy": 151.9637835540771, "energy_per_token": 1.3330156452112027, "time": 4.6401787, "time_per_token": 0.04070332192982456}}
{"outputs": [{"text": "if not Path(source_dir).exists():\n        raise ValueError(\"source_dir does not exist\")\n    if not Path(target_dir).exists():\n        raise ValueError(\"target_dir does not exist\")\n    # Check if the source and target directories are the same\n    if source_dir == target_dir:\n        print(\"Source and target directories are the same\")\n        return 0\n\n    source_files = []\n    for file in Path(source_dir).rglob('*'):\n        if file.suffix.lower() in extensions:\n            source_files.append(str(file))\n\n    count = 0\n    for file in source_files:\n        file_name = Path(file).name\n        # Move file to the target directory\n        target_file = Path(target_dir) / file_name\n        try:\n            shutil.move(file, target_file)\n            count += 1\n        except PermissionError:\n            print(\"Permission denied: {}\".format(file))\n\n    return count", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "source", "_", "dir", " does", " not", " exist", "\"", ")", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "target", "_", "dir", " does", " not", " exist", "\"", ")", "\n", "    ", "#", " Check", " if", " the", " source", " and", " target", " directories", " are", " the", " same", "\n", "    ", "if", " source", "_", "dir", " ==", " target", "_", "dir", ":", "\n", "        ", "print", "(", "\"", "Source", " and", " target", " directories", " are", " the", " same", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "source", "_", "files", " =", " []", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "rg", "lob", "('", "*", "')", ":", "\n", "        ", "if", " file", ".", "suff", "ix", ".", "lower", "()", " in", " extensions", ":", "\n", "            ", "source", "_", "files", ".", "append", "(", "str", "(", "file", "))", "\n", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " source", "_", "files", ":", "\n", "        ", "file", "_", "name", " =", " Path", "(", "file", ")", ".", "name", "\n", "        ", "#", " Move", " file", " to", " the", " target", " directory", "\n", "        ", "target", "_", "file", " =", " Path", "(", "target", "_", "dir", ")", " /", " file", "_", "name", "\n", "        ", "try", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "file", ")", "\n", "            ", "count", " +=", " ", "1", "\n", "        ", "except", " Perm", "ission", "Error", ":", "\n", "            ", "print", "(", "\"", "Permission", " denied", ":", " {", "}\"", ".", "format", "(", "file", "))", "\n", "\n", "    ", "return", " count"], "logprobs": [-1.1855026483535767, -0.1673680990934372, -0.16622605919837952, -0.025812646374106407, -0.00987324584275484, -0.00013791563105769455, -3.969590397900902e-05, -0.001715261023491621, -0.0004383556661196053, -0.27787116169929504, -0.06675697863101959, -0.01265671942383051, -0.003562177997082472, -0.04697433114051819, -0.008674204349517822, -3.218599158572033e-05, -0.5200412273406982, -1.613868236541748, -1.4109344482421875, -0.06760989874601364, -0.002149297157302499, -0.2175125926733017, -0.0006862907321192324, -0.009968261234462261, -0.2939379811286926, -0.00031287543242797256, -0.005201853346079588, -0.17821037769317627, -0.09423326700925827, -0.0032942809630185366, -0.00040928093949332833, -0.0002901133266277611, -0.004118414130061865, -9.536697689327411e-06, -1.6212332411669195e-05, -0.00014375607133843005, -2.8967437174287625e-05, -0.02208811230957508, -0.0008507922757416964, -0.00038378025055862963, -0.0003962923656217754, -0.04813743382692337, -0.0002809368306770921, -2.0503786799963564e-05, -0.005635564215481281, -0.0005162813467904925, -0.006668930407613516, -0.0016210046596825123, -0.0003471963864285499, -0.0020343814976513386, -0.0003046525234822184, -0.001111961784772575, -0.0019041041377931833, -0.0002719986077863723, -0.0007032066932879388, -0.8381617069244385, -3.026318073272705, -3.4607789516448975, -0.5500194430351257, -1.4688907861709595, -0.9047544002532959, -1.2135144472122192, -0.02113044261932373, -0.07930950075387955, -0.33207884430885315, -0.30750617384910583, -0.0020024979021400213, -0.28625646233558655, -0.0027214179281145334, -0.028539884835481644, -0.11498400568962097, -4.577531944960356e-05, -1.0967194612021558e-05, -0.029545465484261513, -0.0007359656738117337, -2.2649508537142538e-05, -1.9788545614574105e-05, -0.002367552602663636, -0.001388420001603663, -0.0011132716899737716, -1.767706274986267, -0.055735036730766296, -0.3091125190258026, -0.8913120627403259, -0.20291945338249207, -0.01821083389222622, -0.030160080641508102, -0.03783803805708885, -0.03480558842420578, -7.366862701019272e-05, -1.9154448509216309, -0.0013513966696336865, -0.005393358878791332, -0.17762187123298645, -0.051545388996601105, -0.04036763682961464, -0.004701868165284395, -0.009434874169528484, -0.8953942060470581, -0.0010130041046068072, -3.2438905239105225, -0.07540396600961685, -0.6944888234138489, -0.04136448726058006, -1.3177385330200195, -0.0720662847161293, -0.03159044310450554, -0.30942076444625854, -1.5984117984771729, -0.2869974672794342, -0.16582630574703217, -0.001369372708722949, -0.00130353809799999, -1.9550132492440753e-05, -6.318072337307967e-06, -0.0022928635589778423, -9.536697689327411e-06, -1.9983537197113037, -0.004510585684329271, -0.8897859454154968, -0.01534806564450264, -0.2932588458061218, -0.000358159770257771, -0.053931377828121185, -0.0016157679492607713, -0.18075624108314514, -0.06181342899799347, -0.00013040646445006132, -1.255781650543213, -2.5987286790041253e-05, -0.8288400173187256, -0.01816658489406109, -0.0006003961316309869, -0.025546343997120857, -0.022878497838974, -0.1921183466911316, -0.008179381489753723, -0.0007340597221627831, -0.045580629259347916, -4.637133679352701e-05, -0.0006735440110787749, -0.0007820646860636771, -0.0006556744920089841, -0.0029939848463982344, -2.4032933712005615, -0.0002489972102921456, -0.005778868217021227, -0.6098182797431946, -0.008341354317963123, -0.3002340495586395, -0.003081456758081913, -2.8035402297973633, -0.020534658804535866, -0.04483944922685623, -0.0015286438865587115, -0.01748797297477722, -0.0516946017742157, -0.09453688561916351, -0.42340633273124695, -0.044292300939559937, -0.06112523004412651, -2.7417760065873154e-05, -0.00015770144818816334, -0.0006183857913129032, -0.0015501875896006823, -0.0023550651967525482, -3.1647632122039795, -0.13294881582260132, -0.5404148101806641, -0.13721059262752533, -0.621281623840332, -0.0013609204906970263, -0.017777156084775925, -0.0017404898535460234, -0.01753799244761467, -0.2792135775089264, -0.020524265244603157, -0.012591741979122162, -3.675795078277588, -2.274658203125, -1.941832423210144, -0.12453098595142365, -1.7419360876083374, -0.07409828156232834, -0.028686314821243286, -0.172975555062294, -0.0012860370334237814, -1.5577683448791504, -0.03608468547463417, -0.18380673229694366, -0.06397067755460739, -0.11761506646871567, -0.003991494886577129, -0.043988440185785294, -4.184158387943171e-05, -5.125986263010418e-06, -0.27955371141433716, -0.08637828379869461, -0.033435966819524765, -0.0005763299996033311, -3.814689989667386e-06, -0.004339682403951883, -0.0075185662135481834, -1.6058818101882935, -0.00011228884250158444, -0.0005558376433327794, -0.0007713441736996174, -0.12030982971191406, -3.0517112463712692e-05, -2.0265558760002023e-06, -0.007941575720906258, -8.844937838148326e-05, -0.021231630817055702, -0.00032074074260890484, -0.16473154723644257, -2.777537883957848e-05, -0.01034516841173172, -0.004869387950748205, -0.012242766097187996, -0.0868242010474205, -0.2502670884132385, -0.0028275768272578716, -0.002262653084471822, -1.1801649634435307e-05, -0.0025668551679700613, -0.1294252723455429, -0.004715631250292063, -2.4192352294921875, -0.00031025364296510816, -4.410646579344757e-05, -0.10237069427967072, -0.042370859533548355, -0.0007428746903315187, -0.3096321225166321, -0.016988234594464302, -1.9993011951446533, -0.571993350982666, -0.7382233142852783, -1.3023937940597534, -1.3039453029632568, -0.04122985526919365, -0.0017946342704817653, -0.0013138956855982542, -0.00024184639914892614, -0.07284475862979889, -0.2209973931312561, -0.005131763871759176, -1.445720911026001, -0.009205635637044907, -0.3260285258293152, -0.0017877324717119336], "finish_reason": "stop"}], "metrics": {"energy": 292.5288582868578, "energy_per_token": 1.1654536186727404, "time": 10.716146, "time_per_token": 0.04269380876494024}}
{"outputs": [{"text": "try:\n        source = Path(source_dir)\n        target = Path(target_dir)\n    except FileNotFoundError:\n        raise ValueError('One of the given paths does not exist')\n    count = 0\n    for file_ in Path(source).iterdir():\n        if file_.suffix in extensions:\n            shutil.move(file_, target)\n            count += 1\n\n    return count", "tokens": ["try", ":", "\n", "        ", "source", " =", " Path", "(", "source", "_", "dir", ")", "\n", "        ", "target", " =", " Path", "(", "target", "_", "dir", ")", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " Value", "Error", "('", "One", " of", " the", " given", " paths", " does", " not", " exist", "')", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " file", "_", " in", " Path", "(", "source", ")", ".", "iter", "dir", "():", "\n", "        ", "if", " file", "_", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", ",", " target", ")", "\n", "            ", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " count"], "logprobs": [-2.930345058441162, -0.0006335158832371235, -0.0032903600949794054, -0.00827585905790329, -0.3881998062133789, -2.076051712036133, -0.024572325870394707, -0.0020912461914122105, -0.0016770598012953997, -0.00025018901214934886, -1.645074735279195e-05, -0.0020027358550578356, -0.17207951843738556, -0.04828181862831116, -0.08390119671821594, -0.0041391896083951, -0.00033861625706776977, -0.00013684290752280504, -0.0002818902430590242, -4.005352093372494e-05, -1.645074735279195e-05, -0.00010549465514486656, -0.0011689979583024979, -0.9555927515029907, -0.0012234115274623036, -0.916568398475647, -0.0005052005290053785, -1.2516897186287679e-05, -0.2647532522678375, -0.01657876744866371, -0.0011800715001299977, -0.5415704846382141, -0.17805065214633942, -4.053033626405522e-05, -0.8616639375686646, -2.338660717010498, -0.8683845400810242, -0.17728206515312195, -1.6760648488998413, -0.9289103746414185, -0.356192946434021, -0.0012415089877322316, -0.013282976113259792, -1.0035440921783447, -0.048396989703178406, -0.928520679473877, -2.7746663093566895, -0.02559828571975231, -0.023875467479228973, -0.0003524397616274655, -0.021092860028147697, -0.07756687700748444, -0.15497928857803345, -0.7533556818962097, -2.5926311016082764, -1.2881431579589844, -2.9340415000915527, -0.03647647798061371, -0.0022808508947491646, -0.33977338671684265, -2.1815061700181104e-05, -0.7765004634857178, -0.000382707774406299, -0.001804986852221191, -0.014134300872683525, -0.002427133498713374, -0.142564594745636, -0.08099666237831116, -0.0013273486401885748, -0.00018380382971372455, -0.3729652464389801, -4.005352093372494e-05, -0.36683040857315063, -0.007595587521791458, -0.10350769758224487, -0.005880081094801426, -0.0012463905150070786, -0.5198876261711121, -6.949660019017756e-05, -8.583032467868179e-06, -0.012886933982372284, -0.000847814604640007, -0.6555185317993164, -0.08666319400072098, -0.025364238768815994, -0.07021786272525787, -0.08142388612031937, -0.011691149324178696, -0.00301276333630085, -0.022415950894355774, -0.0155666284263134, -0.006218845024704933, -1.9430925021879375e-05, -0.0024132197722792625, -3.0422019958496094, -0.02981671877205372, -0.05660686641931534, -0.002110398607328534], "finish_reason": "stop"}], "metrics": {"energy": 92.26859568786621, "energy_per_token": 0.941516282529247, "time": 4.010186, "time_per_token": 0.04092026530612245}}
{"outputs": [{"text": "if not Path(source_dir).is_dir():\n        raise ValueError('source_dir must be a directory')\n    if not Path(target_dir).is_dir():\n        raise ValueError('target_dir must be a directory')\n    moved_files = 0\n    for file in Path(source_dir).iterdir():\n        if file.is_file() and file.suffix in extensions:\n            try:\n                shutil.move(file, Path(target_dir) / file.name)\n                moved_files += 1\n            except Exception as e:\n                print(f'Error moving file: {file}')\n                print(f'Error: {e}')\n    return moved_files", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "('", "source", "_", "dir", " must", " be", " a", " directory", "')", "\n", "    ", "if", " not", " Path", "(", "target", "_", "dir", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "('", "target", "_", "dir", " must", " be", " a", " directory", "')", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "iter", "dir", "():", "\n", "        ", "if", " file", ".", "is", "_", "file", "()", " and", " file", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "try", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " Path", "(", "target", "_", "dir", ")", " /", " file", ".", "name", ")", "\n", "                ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "            ", "except", " Exception", " as", " e", ":", "\n", "                ", "print", "(", "f", "'", "Error", " moving", " file", ":", " {", "file", "}", "')", "\n", "                ", "print", "(", "f", "'", "Error", ":", " {", "e", "}", "')", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.1855026483535767, -0.1673680990934372, -0.16622605919837952, -0.025812646374106407, -0.00987324584275484, -0.00013791563105769455, -3.969590397900902e-05, -0.001715261023491621, -0.0004383556661196053, -1.4309968948364258, -0.00023600654094479978, -0.007248768582940102, -0.1508864164352417, -0.013317207805812359, -0.0036751364823430777, -0.057314611971378326, -0.0063887168653309345, -3.2305197237292305e-05, -0.9426394104957581, -0.6284030675888062, -0.031374432146549225, -0.001378896413370967, -1.4233818054199219, -0.2175135463476181, -0.09120021015405655, -0.4330553412437439, -0.1720728874206543, -0.0017071687616407871, -0.16152800619602203, -0.04914087429642677, -0.0029683122411370277, -0.00029237763374112546, -0.00032050241134129465, -0.003171060001477599, -8.34461570775602e-06, -1.823885577323381e-05, -0.00015484087634831667, -0.00037043384509161115, -0.010884438641369343, -5.531158240046352e-05, -7.128461584215984e-05, -0.0012261499650776386, -0.0003985564399044961, -0.0003843760641757399, -0.013402958400547504, -0.00019977481861133128, -2.8132995794294402e-05, -0.0015728019643574953, -0.009463333524763584, -0.0008996253600344062, -0.0003002431185450405, -0.0028713210485875607, -0.0015170981641858816, -0.0010881462367251515, -0.0008363801171071827, -0.0006785474251955748, -0.0012487717904150486, -0.909372091293335, -1.7204533815383911, -0.055437903851270676, -0.2656437158584595, -0.24758650362491608, -0.05031823739409447, -0.037652187049388885, -7.629103492945433e-05, -0.009754491969943047, -0.14834578335285187, -0.09021665900945663, -0.6027326583862305, -0.3182967007160187, -0.12982319295406342, -0.0012488907668739557, -0.0014866263372823596, -1.0490362910786644e-05, -1.3589766240329482e-05, -0.0004786299541592598, -6.23445157543756e-05, -0.7656955122947693, -0.00033623288618400693, -0.0006617502076551318, -0.008381548337638378, -0.0013908008113503456, -0.06134320795536041, -0.05833374336361885, -0.00010489867418073118, -1.0661256313323975, -2.3841830625315197e-06, -0.024777254089713097, -0.103105828166008, -0.002095409668982029, -0.18711867928504944, -0.00012194366718176752, -0.08999486267566681, -3.2782016205601394e-05, -0.3133806884288788, -0.0031159203499555588, -0.013114153407514095, -0.0028593153692781925, -0.0009440494468435645, -2.496682643890381, -0.00011944057769142091, -0.00216821045614779, -0.0006075443816371262, -0.09072673320770264, -2.9682672902708873e-05, -4.291525328881107e-06, -0.03575853630900383, -0.00035148640745319426, -0.37925752997398376, -0.028991037979722023, -0.3104887306690216, -0.004148331005126238, -0.017177145928144455, -9.524368942948058e-05, -2.145764938177308e-06, -0.7054778933525085, -0.07829621434211731, -0.08692135661840439, -0.020103976130485535, -0.030309973284602165, -0.0028609796427190304, -0.019315017387270927, -0.13065612316131592, -0.06308510154485703, -6.6756979322235566e-06, -2.5748875486897305e-05, -2.90866428258596e-05, -0.0033694894518703222, -0.002337463665753603, -1.3470558769768104e-05, -0.0012771077454090118, -0.010759436525404453, -0.002628207439556718, -1.3828130960464478, -0.39444732666015625, -0.11199308186769485, -0.0001248043408850208, -0.0218687541782856, -0.00039057256071828306, -0.06078718230128288, -0.07629041373729706, -0.07582021504640579, -0.1785307228565216, -0.6841423511505127, -0.09972656518220901, -0.4412379860877991, -0.7035598158836365, -0.004338257946074009, -0.21818877756595612, -0.5100070834159851, -1.0814335346221924, -0.0031648806761950254, -0.05236329883337021, -0.04321137070655823, -0.02049039676785469, -0.7749460339546204, -0.06045316904783249, -0.5141795873641968, -0.5804246664047241, -0.0016919358167797327, -0.11578202992677689, -0.0228385329246521, -0.0008175606490112841, -0.0015986294019967318, -0.11576387286186218, -0.05906510353088379, -0.000834236154332757, -5.686121585313231e-05, -8.940656698541716e-06, -0.6640953421592712, -0.012882108800113201, -0.5731765031814575], "finish_reason": "stop"}], "metrics": {"energy": 173.63938409137737, "energy_per_token": 1.0095313028568451, "time": 7.373177, "time_per_token": 0.04286730813953488}}
{"outputs": [{"text": "source_dir = Path(source_dir)\n    if not source_dir.exists():\n        raise ValueError(f'source_dir {source_dir} does not exist')\n\n    target_dir = Path(target_dir)\n    if not target_dir.exists():\n        raise ValueError(f'target_dir {target_dir} does not exist')\n\n    source_dir = Path(source_dir)\n    target_dir = Path(target_dir)\n\n    extensions = [ext.replace('.', '') for ext in extensions]\n\n    moved_files = []\n\n    for file in source_dir.rglob('*'):\n        if file.is_file() and file.suffix.strip('.') in extensions:\n            moved_files.append(file)\n\n    for file in moved_files:\n        file.replace(target_dir / file.name)\n\n    return len(moved_files)", "tokens": ["source", "_", "dir", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "if", " not", " source", "_", "dir", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "source", "_", "dir", " {", "source", "_", "dir", "}", " does", " not", " exist", "')", "\n", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "dir", ")", "\n", "    ", "if", " not", " target", "_", "dir", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "target", "_", "dir", " {", "target", "_", "dir", "}", " does", " not", " exist", "')", "\n", "\n", "    ", "source", "_", "dir", " =", " Path", "(", "source", "_", "dir", ")", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "extensions", " =", " [", "ext", ".", "replace", "('", ".", "'", ",", " '", "')", " for", " ext", " in", " extensions", "]", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "\n", "    ", "for", " file", " in", " source", "_", "dir", ".", "rg", "lob", "('", "*", "')", ":", "\n", "        ", "if", " file", ".", "is", "_", "file", "()", " and", " file", ".", "suff", "ix", ".", "strip", "('", ".", "')", " in", " extensions", ":", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "file", ")", "\n", "\n", "    ", "for", " file", " in", " moved", "_", "files", ":", "\n", "        ", "file", ".", "replace", "(", "target", "_", "dir", " /", " file", ".", "name", ")", "\n", "\n", "    ", "return", " len", "(", "m", "oved", "_", "files", ")", "\n", "\n", "if"], "logprobs": [-1.6686302423477173, -0.0826939269900322, -0.08127882331609726, -0.31399857997894287, -0.018837951123714447, -0.0022640805691480637, -0.0009946642676368356, -3.40932747349143e-05, -2.372236667724792e-05, -0.0010994586627930403, -0.08210825175046921, -0.008098267018795013, -1.8504334688186646, -0.06723212450742722, -0.010368174873292446, -2.074220174108632e-05, -2.4318398573086597e-05, -0.00031609306461177766, -0.1767939180135727, -0.01019992120563984, -0.018554924055933952, -0.0022440983448177576, -0.025920679792761803, -0.005014106631278992, -2.8729025871143676e-05, -0.5618723630905151, -0.2804775536060333, -0.7650692462921143, -1.2283377647399902, -0.10590962320566177, -0.001881259260699153, -0.6150742173194885, -0.005945970769971609, -0.00013672371278516948, -0.00018952481332235038, -0.04968390241265297, -0.15565860271453857, -0.0011970981722697616, -0.02243250422179699, -0.2578132152557373, -0.002217574045062065, -0.6901917457580566, -0.00013517419574782252, -0.06779550015926361, -0.0005106813623569906, -0.00032789100077934563, -0.0006537684239447117, -0.00018726025882642716, -0.0001006075763143599, -0.0004204819560982287, -6.9141146923357155e-06, -1.9073468138230965e-06, -9.83428253675811e-05, -0.0018766188295558095, -0.004379918798804283, -0.005719960667192936, -0.004175160080194473, -0.005876999814063311, -0.00012361239350866526, -1.4662635294371285e-05, -4.9232225137529895e-05, -0.014238549396395683, -0.0011815002653747797, -0.0005787128466181457, -0.00036006642039865255, -0.1987180858850479, -0.0002796259068418294, -8.34461570775602e-06, -0.0016563518438488245, -0.00038747431244701147, -0.004129098728299141, -0.012353452853858471, -0.0017203782917931676, -0.00028200942324474454, -0.0027484046295285225, -0.021463030949234962, -2.7417760065873154e-05, -0.00027926836628466845, -0.0012554391287267208, -0.0030422378331422806, -0.0006092122639529407, -0.0016448076348751783, -0.0014757943572476506, -0.0005830018781125546, -0.023338617756962776, -0.0004683827864937484, -3.123929500579834, -0.034152232110500336, -0.5468468070030212, -0.31184491515159607, -0.6913982629776001, -0.022075051441788673, -0.003153948113322258, -6.210611172718927e-05, -0.00036113892565481365, -0.02506398782134056, -0.21689467132091522, -0.07413126528263092, -0.596891462802887, -0.001128989621065557, -0.0017233534017577767, -0.001701218425296247, -0.0005055579822510481, -0.0002489972102921456, -0.0004693360242526978, -1.0013530300057027e-05, -1.168244216387393e-05, -0.00048637480358593166, -0.0009370227344334126, -0.19669614732265472, -0.0004065402317792177, -2.073935031890869, -0.15440136194229126, -0.4593762755393982, -1.0010467767715454, -0.20016610622406006, -3.086024761199951, -0.12648674845695496, -0.013939053751528263, -0.00046969347749836743, -0.00010346830822527409, -0.1341758519411087, -0.003809458576142788, -0.07987800240516663, -0.00032669928623363376, -0.00021395778458099812, -0.004300394095480442, -0.04376481845974922, -0.02895641326904297, -0.3232137858867645, -0.00019369633810129017, -1.2515897750854492, -0.0582202710211277, -0.19669458270072937, -0.19749215245246887, -0.04222321882843971, -2.5705554485321045, -0.012119228951632977, -0.898383617401123, -0.0001656871900195256, -0.06130228564143181, -0.4516499638557434, -0.2460343837738037, -0.055307406932115555, -8.702239938429557e-06, -2.95634672511369e-05, -4.911301948595792e-05, -2.1469273567199707, -0.003565979190170765, -0.1717473566532135, -0.01590048521757126, -0.19137988984584808, -0.0003307510633021593, -0.024239491671323776, -0.007414679042994976, -0.14291299879550934, -0.08297132700681686, -0.00042965717148035765, -0.3487468361854553, -2.0265558760002023e-06, -0.03264915198087692, -0.21772077679634094, -0.005109822377562523, -0.12452351301908493, -0.0003691230376716703, -0.09675721824169159, -4.625213477993384e-05, -0.4526602625846863, -3.2125561237335205, -0.01658744364976883, -0.0026410482823848724, -0.0010495636379346251, -0.10289569199085236, -0.0023706448264420033, -0.01778324507176876, -0.0029822182841598988, -0.0028299542609602213, -1.8405333757400513, -0.0015606615925207734, -0.012489321641623974, -0.2330872118473053, -0.0027088159695267677, -0.001068616984412074, -0.029609929770231247, -0.19570693373680115, -0.8040569424629211, -0.0033112717792391777, -0.48413872718811035, -0.0484900064766407, -0.31061816215515137, -0.09476722031831741, -0.010933255776762962, -0.009184964932501316, -5.4596363042946905e-05, -2.0265558760002023e-06, -0.0003392120997887105, -0.0004374024283606559, -0.0016105312388390303, -1.8115665912628174, -0.32357603311538696, -0.2408473640680313, -0.0010409895330667496, -0.11368700116872787, -0.0001289761275984347, -7.545663538621739e-05, -0.1515422910451889, -0.06540700793266296, -0.013227920979261398, -0.03474467992782593, -0.03257877007126808, -0.01234438642859459, -0.03979913145303726, -0.002434982219710946, -0.039571020752191544, -0.0038757221773266792, -0.00028772983932867646, -0.0006783091812394559, -2.6702524337451905e-05, -1.7404405298293568e-05, -2.3841830625315197e-06, -0.5999959111213684, -0.2612874507904053, -0.006838489323854446, -0.6409626007080078], "finish_reason": "stop"}], "metrics": {"energy": 226.022143221855, "energy_per_token": 1.009027425097567, "time": 9.681934, "time_per_token": 0.04322291964285714}}
{"outputs": [{"text": "if not Path(source_dir).exists():\n        raise ValueError('Source directory does not exist.')\n    elif not Path(target_dir).exists():\n        raise ValueError('Target directory does not exist.')\n    moved_files = 0\n    for file in Path(source_dir).glob('*'):\n        if file.is_file() and file.suffix in extensions:\n            shutil.move(str(file), target_dir)\n            moved_files += 1\n    return moved_files", "tokens": ["if", " not", " Path", "(", "source", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "Source", " directory", " does", " not", " exist", ".", "')", "\n", "    ", "elif", " not", " Path", "(", "target", "_", "dir", ")", ".", "exists", "():", "\n", "        ", "raise", " Value", "Error", "('", "Target", " directory", " does", " not", " exist", ".", "')", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", " in", " Path", "(", "source", "_", "dir", ")", ".", "glob", "('", "*", "')", ":", "\n", "        ", "if", " file", ".", "is", "_", "file", "()", " and", " file", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "sh", "util", ".", "move", "(", "str", "(", "file", ")", ",", " target", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.1855026483535767, -0.1673680990934372, -0.16622605919837952, -0.025812646374106407, -0.00987324584275484, -0.00013791563105769455, -3.969590397900902e-05, -0.001715261023491621, -0.0004383556661196053, -0.27787116169929504, -0.06675697863101959, -0.01265671942383051, -0.003562177997082472, -0.04697433114051819, -0.008674204349517822, -3.218599158572033e-05, -0.933729887008667, -0.9835114479064941, -0.15353094041347504, -0.09513440728187561, -0.00027616979787126184, -0.005977965891361237, -0.7267560958862305, -0.006438464857637882, -0.0014173472300171852, -0.15708929300308228, -2.8497490882873535, -0.004454452078789473, -0.0005980133428238332, -0.0003250309091527015, -0.004701037425547838, -1.2159273865108844e-05, -1.7523612768854946e-05, -0.00036566724884323776, -0.00029976642690598965, -0.027387388050556183, -0.0015656605828553438, -0.0005034133209846914, -0.0005974177038297057, -0.11952927708625793, -0.00026043839170597494, -1.823885577323381e-05, -0.002920055529102683, -0.01679084822535515, -0.0013617537915706635, -0.001712642959319055, -0.0009267802815884352, -0.0006985607906244695, -0.004639693535864353, -0.00019453064305707812, -0.0011226787464693189, -1.2620463371276855, -2.18424654006958, -0.06380113959312439, -0.2645098865032196, -0.17192724347114563, -0.03595393896102905, -0.032174251973629, -0.00012158608296886086, -0.010981363244354725, -0.19321313500404358, -0.12350552529096603, -0.5800850987434387, -0.41872844099998474, -0.1351538896560669, -0.0008874768391251564, -0.001378896413370967, -8.821448318485636e-06, -1.3351351299206726e-05, -0.0005447572330012918, -6.365573790390044e-05, -1.0280483961105347, -0.21708686649799347, -0.17850229144096375, -0.20602212846279144, -0.0027481666766107082, -0.017755139619112015, -0.002253494691103697, -0.11561956256628036, -0.07970090210437775, -0.00018451895448379219, -1.0595917701721191, -4.291525328881107e-06, -0.018926972523331642, -0.14874117076396942, -0.0035830840934067965, -0.1757580041885376, -0.0001691436773398891, -0.07395636290311813, -2.8013790142722428e-05, -0.4989205300807953, -0.0027942920569330454, -0.00894680805504322, -0.006112334318459034, -0.0011660212185233831, -0.44765686988830566, -5.9126061387360096e-05, -7.390948667307384e-06, -0.011212906800210476, -0.00048828122089616954, -1.1583579778671265, -7.617183291586116e-05, -0.005187978036701679, -0.026862286031246185, -0.0001232548092957586, -0.4745601415634155, -0.00014900050882715732, -2.2172682292875834e-05, -0.03669207915663719, -0.015454183332622051, -0.002435933565720916, -0.019212815910577774, -7.152531907195225e-06, -2.658331868587993e-05, -4.172238186583854e-05, -0.0055253165774047375, -0.0036233505234122276, -1.7762025890988298e-05, -0.0014662717003375292, -0.06237325444817543, -0.07896410673856735, -0.0017627429915592074, -3.9219088648678735e-05, -1.3947389561508317e-05, -0.7606642842292786, -0.016123266890645027, -0.73858642578125], "finish_reason": "stop"}], "metrics": {"energy": 161.72341547775264, "energy_per_token": 1.273412720297265, "time": 5.270216, "time_per_token": 0.041497763779527554}}
