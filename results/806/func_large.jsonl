{"outputs": [{"text": "text = text.lower()\n    tokens = re.sub(r'[^\\w\\s]', ' ', text).split()\n\n    tokens = [token for token in tokens if token not in STOPWORDS]\n    tokens = [token for i, token in enumerate(tokens) if token not in tokens[:i]]\n\n    ngrams = Counter([tokens[i:i+n] for i in range(len(tokens) - n + 1)])\n\n    return ngrams", "tokens": ["text", " =", " text", ".", "lower", "()", "\n", "    ", "tokens", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", ".", "split", "()", "\n", "\n", "    ", "tokens", " =", " [", "token", " for", " token", " in", " tokens", " if", " token", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "tokens", " =", " [", "token", " for", " i", ",", " token", " in", " enumerate", "(", "tokens", ")", " if", " token", " not", " in", " tokens", "[:", "i", "]]", "\n", "\n", "    ", "ng", "rams", " =", " Counter", "([", "tokens", "[", "i", ":", "i", "+", "n", "]", " for", " i", " in", " range", "(", "len", "(", "tokens", ")", " -", " n", " +", " ", "1", ")]", ")", "\n", "\n", "    ", "return", " n", "grams", "\n", "\n", "#"], "logprobs": [-2.2689971923828125, -0.05313916504383087, -1.5002669095993042, -0.004828459583222866, -0.13445362448692322, -0.00037102968781255186, -0.19477088749408722, -0.12860913574695587, -2.617220640182495, -0.0029319417662918568, -0.5161600708961487, -8.368142152903602e-05, -1.5617270469665527, -0.07471245527267456, -0.05844079330563545, -0.3870840072631836, -0.012371703051030636, -0.12681695818901062, -0.004748496692627668, -0.09861873835325241, -9.941560711013153e-05, -0.04068931192159653, -0.0011451836908236146, -0.0002015625941567123, -2.8059163093566895, -0.0020198675338178873, -0.00029118589009158313, -0.008477415889501572, -0.030151057988405228, -0.018411099910736084, -0.04771188646554947, -0.008113638497889042, -0.0773501992225647, -2.2247979640960693, -0.0013490156270563602, -1.477919101715088, -0.09617864340543747, -0.07730341702699661, -0.7761356234550476, -0.015172193758189678, -0.0005569098866544664, -5.924526340095326e-05, -0.0024329605512320995, -0.01938715949654579, -0.03627244010567665, -0.035303983837366104, -6.568216485902667e-05, -0.0032541200052946806, 0.0, -0.00012289722508285195, 0.0, -9.179073458653875e-06, -0.2518777847290039, -0.0173390731215477, -1.1927382946014404, -0.759492039680481, -0.02040022984147072, -0.7130805850028992, -0.16249820590019226, -0.0160426776856184, -2.3603901863098145, -0.0009410720085725188, -0.02469014748930931, -0.00023052419419400394, -0.0005063920398242772, -2.1457441107486375e-05, -0.006592193618416786, -0.002531421137973666, -0.06883805990219116, -0.459915429353714, -0.08903924375772476, -0.0001102625101339072, -0.0048190876841545105, -0.006837778724730015, -0.00048708971007727087, -0.004772343672811985, -0.01548622827976942, -0.07028331607580185, -0.00029488030122593045, -0.10308045148849487, -0.01466283854097128, -0.006633049808442593, -1.3441613912582397, -1.9909989833831787, -2.2939395904541016, -0.0003610197745729238, -0.00203473842702806, -0.018728213384747505, -0.0083366259932518, -0.32140541076660156, -0.0012963948538526893, -0.0005233110277913511, -0.006692021619528532, -0.00016652150952722877, -0.0015367376618087292, -0.0003404037852305919, -0.0002847504511009902, -0.031352363526821136, -1.3828182090946939e-05, -0.0001311216183239594, -2.176682472229004, -0.0009395237429998815, -0.06912089139223099, -0.010464205406606197, -0.0015374518698081374, -0.00012158608296886086, -0.003132795449346304, -0.00021169328829273582, -0.0035405587404966354, -0.5044613480567932, -0.000598251644987613, -0.030074598267674446, -0.07205641269683838, -4.434487345861271e-05, -0.24059848487377167, -0.007454909849911928, -1.6982002258300781], "finish_reason": "stop"}], "metrics": {"energy": 486.81122758579215, "energy_per_token": 4.160779722955488, "time": 14.539059, "time_per_token": 0.12426546153846153}}
{"outputs": [{"text": "# Remove duplicate and stopwords from the text\n    # Lowercase the text\n    text = text.lower()\n    # Remove stopwords from the text\n    text = \" \".join([word for word in text.split() if word not in STOPWORDS])\n    # Split the text into words\n    words = re.findall(r'\\w+', text)\n    # Generate n-grams\n    ngrams = zip(*(words[i:] for i in range(n)))\n    # Count the n-grams\n    ngrams_count = Counter(ngrams)\n    # Return the count of the n-grams\n    return ngrams_count", "tokens": ["#", " Remove", " duplicate", " and", " stop", "words", " from", " the", " text", "\n", "    ", "#", " Lower", "case", " the", " text", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "    ", "#", " Remove", " stop", "words", " from", " the", " text", "\n", "    ", "text", " =", " \"", " \"", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "    ", "#", " Split", " the", " text", " into", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " zip", "(*", "(", "words", "[", "i", ":]", " for", " i", " in", " range", "(", "n", ")))", "\n", "    ", "#", " Count", " the", " n", "-", "grams", "\n", "    ", "ng", "rams", "_", "count", " =", " Counter", "(", "ng", "rams", ")", "\n", "    ", "#", " Return", " the", " count", " of", " the", " n", "-", "grams", "\n", "    ", "return", " n", "grams", "_", "count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.3499735891819, -0.8898080587387085, -0.9788067936897278, -0.7297564148902893, -0.015340317040681839, -0.039626594632864, -0.3321916460990906, -0.20651453733444214, -0.1543569266796112, -0.29263636469841003, -0.004725835286080837, -3.238999605178833, -4.141746520996094, -0.2544136345386505, -0.35633036494255066, -0.15353697538375854, -0.5238178968429565, -0.007352909538894892, -0.4399798810482025, -0.04007426276803017, -0.11317359656095505, -0.00032217081752605736, -0.010134194046258926, -0.0006160030607134104, -0.009644106961786747, -0.21140462160110474, -0.03688741475343704, -0.3338708281517029, -1.9298357963562012, -0.06249510124325752, -0.3267529308795929, -0.006091481540352106, -0.01187929604202509, -0.040452588349580765, -0.004175753798335791, -0.7045241594314575, -0.10461248457431793, -1.7628358602523804, -0.01766870729625225, -0.0005735897575505078, -0.0002668739762157202, -0.6747183799743652, -0.0808497741818428, -0.0028291221242398024, -3.516612196108326e-05, -0.00011920218821614981, -0.006939713377505541, -0.0013496108585968614, -0.0016287406906485558, -0.01162092387676239, -0.005282491911202669, -0.014238080009818077, -0.0071473391726613045, -3.373566141817719e-05, -0.004617385566234589, 0.0, -0.00016783259343355894, 0.0, -2.3841855067985307e-07, -0.010642911307513714, -0.0016903887735679746, -0.20197075605392456, -0.020639995113015175, -2.4417917728424072, -0.057542312890291214, -0.023698994889855385, -0.028556915000081062, -0.29598891735076904, -0.18064768612384796, -0.001949554425664246, -0.07341428101062775, -0.0015200738562271, -1.5781365633010864, -1.0371154530730564e-05, -0.23909403383731842, -1.4543427823809907e-05, -0.022629128769040108, -0.0025755350943654776, -0.06346690654754639, -0.05587708577513695, -0.005308579187840223, -2.002696055569686e-05, -0.0029157765675336123, -0.03412516042590141, -0.004662475548684597, -0.1491224467754364, -0.03512030839920044, -0.3061331510543823, -1.1660876274108887, -0.23485374450683594, -0.002601098734885454, -0.5551868081092834, -0.0014106809394434094, -0.019789401441812515, -0.002167734783142805, -0.001210433547385037, -0.6468304991722107, -0.00025293012731708586, -2.0945024490356445, -0.0009336879593320191, -0.00038723601028323174, -0.0024029924534261227, -1.7165990357170813e-05, -0.0010399178136140108, -2.9682672902708873e-05, -1.847726889536716e-05, -0.00019643761334009469, -6.151010165922344e-05, -0.015069451183080673, -0.0008515069494023919, -0.0046554747968912125, -0.01535992231220007, -0.020196272060275078, -0.06204761192202568, -0.07521656900644302, -0.0950855240225792, -0.013400370255112648, -0.0003449321957305074, -0.05064193904399872, -0.0012774649076163769, -0.20455031096935272, -0.87580806016922, -0.32202500104904175, -0.28211894631385803, -0.0016280265990644693, -0.010402270592749119, -0.0026295154821127653, -0.0025983641389757395, -2.3841830625315197e-06, -0.00013016807497479022, -0.001513408264145255, -0.16120114922523499, -0.5096952319145203, -0.12417948991060257, -0.011177187785506248, -0.14356006681919098, -0.03554606810212135, -0.2870124876499176, -0.003572631161659956, -0.0031967272516340017, -0.0001705739414319396, -0.059239041060209274, -0.0043090591207146645, -0.00819416157901287, -0.028660830110311508, -2.1457441107486375e-05, -0.0008131535141728818, -4.577531944960356e-05, -2.6107101440429688, -1.0371154530730564e-05, -1.0251946150674485e-05, -6.198863957251888e-06, -2.5510462364763953e-05, -0.1369018852710724], "finish_reason": "stop"}], "metrics": {"energy": 684.6866869831086, "energy_per_token": 4.446017447942264, "time": 19.449411, "time_per_token": 0.12629487662337663}}
{"outputs": [{"text": "# Remove all stopwords from the text.\n    cleaned_text = ' '.join(word for word in re.findall(r\"\\w+\", text) if word.lower() not in STOPWORDS)\n\n    # Generate the count of n-grams.\n    ngrams = Counter(tuple(cleaned_text.split()[i:i+n]) for i in range(len(cleaned_text.split())-n+1))\n\n    return ngrams", "tokens": ["#", " Remove", " all", " stop", "words", " from", " the", " text", ".", "\n", "    ", "cleaned", "_", "text", " =", " '", " '", ".", "join", "(", "word", " for", " word", " in", " re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ")", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", ")", "\n", "\n", "    ", "#", " Generate", " the", " count", " of", " n", "-", "grams", ".", "\n", "    ", "ng", "rams", " =", " Counter", "(", "tuple", "(", "cleaned", "_", "text", ".", "split", "()[", "i", ":", "i", "+", "n", "])", " for", " i", " in", " range", "(", "len", "(", "cleaned", "_", "text", ".", "split", "()", ")-", "n", "+", "1", "))", "\n", "\n", "    ", "return", " n", "grams", "\n", "\n", "def"], "logprobs": [-0.3499735891819, -0.8898080587387085, -3.1861870288848877, -2.404317855834961, -0.2107626348733902, -1.2400442361831665, -0.19136403501033783, -0.12641699612140656, -2.322190761566162, -0.03536094352602959, -0.006819900590926409, -3.1379456520080566, -0.11608128994703293, -0.14295266568660736, -0.006502777803689241, -0.8922336101531982, -0.0013429442187771201, -0.0010110987350344658, -0.0003216941258870065, -0.46464112401008606, -0.7279537916183472, -0.013286270201206207, -0.00024875884992070496, -0.000730247818864882, -2.26137113571167, -0.0002449450839776546, -1.5793120861053467, -0.000271521887043491, -0.053205180913209915, -0.1055980697274208, -2.8630471229553223, -0.5299588441848755, -0.2100401371717453, -0.047447603195905685, -0.005634734407067299, -0.00027652730932459235, -0.025652548298239708, -0.5549606680870056, -0.11324747651815414, -0.03399127721786499, -1.261579155921936, -0.009287132881581783, -0.0022640805691480637, -0.011857973411679268, -0.00023707917716819793, -0.0019514580490067601, 0.0, -4.5060096454108134e-05, 0.0, -2.6225699912174605e-05, -0.015002516098320484, -0.021300600841641426, -0.21605519950389862, -0.0007875440060161054, -0.04082436114549637, -0.8277061581611633, -1.0565738677978516, -2.2361929416656494, -0.016254637390375137, -0.34797245264053345, -0.06656248867511749, -0.0032431883737444878, -1.2128989696502686, -0.011611615307629108, -0.0023958568926900625, -0.1705332249403, -0.05309586971998215, -0.026044612750411034, -0.33199945092201233, -0.1623210608959198, -0.963066041469574, -0.005844409111887217, -0.5995849967002869, -0.0015948207583278418, -0.013172744773328304, -0.10149296373128891, -0.09441334754228592, -0.2121494561433792, -0.029219375923275948, -0.07241784036159515, -0.025873981416225433, -0.31460946798324585, -0.0015310243470594287, -0.0017716678557917476, -0.06804443895816803, -0.00023850933939684182, -0.005353993736207485, -0.0014734136639162898, -0.0003748429589904845, -0.010972520336508751, -0.0001754606782924384, -0.005311543587595224, -1.823885577323381e-05, -6.389413465512916e-05, -0.018304241821169853, -0.00012516192509792745, -0.9420478343963623, -0.08708560466766357, -0.008665813133120537, -0.0043171304278075695, -0.00031835734262131155, -0.0028747683390975, -0.00381337758153677, -0.15557371079921722, -0.0005809764843434095, -0.21218648552894592, -0.021122973412275314, -3.504691630951129e-05, -0.35651281476020813, -0.009476086124777794, -1.7384940385818481], "finish_reason": "stop"}], "metrics": {"energy": 499.6625926046371, "energy_per_token": 4.501464798239974, "time": 15.343783, "time_per_token": 0.13823227927927928}}
{"outputs": [{"text": "# Remove stopwords\n    text_no_stopwords = [word for word in text.split() if word not in STOPWORDS]\n\n    # Remove duplicates\n    text_no_duplicates = ' '.join(text_no_stopwords)\n\n    # Count n-grams\n    ngrams = Counter(ngrams(text_no_duplicates.split(), n))\n\n    return ngrams", "tokens": ["#", " Remove", " stop", "words", "\n", "    ", "text", "_", "no", "_", "stop", "words", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Remove", " dup", "licates", "\n", "    ", "text", "_", "no", "_", "dup", "licates", " =", " '", " '", ".", "join", "(", "text", "_", "no", "_", "stop", "words", ")", "\n", "\n", "    ", "#", " Count", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " Counter", "(", "ng", "rams", "(", "text", "_", "no", "_", "dup", "licates", ".", "split", "()", ",", " n", "))", "\n", "\n", "    ", "return", " n", "grams", "\n", "\n", "#"], "logprobs": [-0.3499735891819, -0.8898080587387085, -2.6290409564971924, -0.12460034340620041, -2.4084715843200684, -0.008337689563632011, -0.9781009554862976, -1.9717583656311035, -1.5430296659469604, -0.021027259528636932, -0.26402783393859863, -0.20388144254684448, -0.0026581690181046724, -2.151719808578491, -0.3003930449485779, -0.02668808028101921, -0.00020287363440729678, -0.0004990047891624272, -0.14091913402080536, -0.03198469057679176, -0.03304390609264374, -0.05163607373833656, -0.012807730585336685, -0.009059160016477108, -0.4780553877353668, -5.531158240046352e-05, -0.005846897605806589, 0.0, -8.5588610090781e-05, 0.0, -5.066266385256313e-05, -0.014471924863755703, -0.0018406844465062022, -0.23593758046627045, -0.000982397934421897, -0.01694498583674431, -0.9468003511428833, -0.9383135437965393, -0.0023930028546601534, -0.10651442408561707, -0.0016983621753752232, -0.12413348257541656, -0.01296271849423647, -0.1367066353559494, -2.0265373677830212e-05, -0.0795425996184349, -0.20229993760585785, -0.001947531825862825, -2.1444077491760254, -0.000766102981287986, -0.0003778220561798662, -0.0012466285843402147, -0.018140947446227074, -2.7699828147888184, -0.0017591729993000627, -0.00021050144277978688, -1.4305104514278355e-06, -0.0009309487068094313, -3.4689302992774174e-05, -0.08443882316350937, -0.02665720507502556, -0.053218405693769455, -0.00030489088385365903, -0.020146619528532028, -2.3285694122314453, -0.22348739206790924, -0.1118168905377388, -0.006135912146419287, -0.10979876667261124, -0.0034522954374551773, -0.13159120082855225, -0.03930755704641342, -0.02877979166805744, -0.48247286677360535, -0.13726173341274261, -1.1037029027938843, -0.3639112412929535, -0.10923250019550323, -0.02916472777724266, -0.006113519426435232, -0.00010072677832795307, -1.4305104514278355e-06, -0.007933770306408405, -7.867782187531702e-06, -0.36466526985168457, -0.008441717363893986, -0.00974634662270546, -4.625213477993384e-05, -0.003968697972595692, -0.046367350965738297, -0.005665791220963001, -0.121109738945961, -0.0003634030872490257, -0.1498713195323944, -0.015475664287805557, -0.000620768463704735, -0.2842268943786621, -0.010581458918750286, -1.350213885307312], "finish_reason": "stop"}], "metrics": {"energy": 397.5638588218688, "energy_per_token": 4.0157965537562506, "time": 10.237471, "time_per_token": 0.10340879797979798}}
{"outputs": [{"text": "# Clean the text by removing punctuation and making it lowercase\n    cleaned_text = re.sub(r'[^\\w\\s]', '', text.lower())\n\n    # Remove duplicate words from the text\n    words = cleaned_text.split()\n    unique_words = list(set(words))\n\n    # Remove stopwords from the text\n    filtered_words = [word for word in unique_words if word not in STOPWORDS]\n\n    # Generate n-grams from the filtered words\n    ngrams = [tuple(filtered_words[i:i+n]) for i in range(len(filtered_words)-n+1)]\n\n    # Count the occurrence of each n-gram\n    ngram_counts = Counter(ngrams)\n\n    return ngram_counts", "tokens": ["#", " Clean", " the", " text", " by", " removing", " punct", "uation", " and", " making", " it", " lower", "case", "\n", "    ", "cleaned", "_", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ".", "lower", "())", "\n", "\n", "    ", "#", " Remove", " duplicate", " words", " from", " the", " text", "\n", "    ", "words", " =", " cleaned", "_", "text", ".", "split", "()", "\n", "    ", "unique", "_", "words", " =", " list", "(", "set", "(", "words", "))", "\n", "\n", "    ", "#", " Remove", " stop", "words", " from", " the", " text", "\n", "    ", "filtered", "_", "words", " =", " [", "word", " for", " word", " in", " unique", "_", "words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", " from", " the", " filtered", " words", "\n", "    ", "ng", "rams", " =", " [", "tuple", "(", "filtered", "_", "words", "[", "i", ":", "i", "+", "n", "])", " for", " i", " in", " range", "(", "len", "(", "filtered", "_", "words", ")-", "n", "+", "1", ")]", "\n", "\n", "    ", "#", " Count", " the", " occurrence", " of", " each", " n", "-", "gram", "\n", "    ", "ng", "ram", "_", "counts", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "return", " n", "gram", "_", "counts", "\n", "\n", "if"], "logprobs": [-0.3499735891819, -3.0428500175476074, -0.4143327474594116, -0.15676231682300568, -0.5344522595405579, -0.06254303455352783, -1.3533958196640015, -0.0270491074770689, -0.6008025407791138, -2.324798107147217, -0.2969789206981659, -0.0069747548550367355, -0.035043537616729736, -0.09500682353973389, -0.002504547592252493, -1.0969018936157227, -0.04131438955664635, -0.007216577418148518, -0.0011685217032209039, -0.02583611197769642, -5.0424259825376794e-05, -0.0017896364443004131, -0.03703710809350014, -0.01103453803807497, -0.1293601244688034, -0.00937783531844616, -0.02792230062186718, -0.00044288364006206393, -0.016795186325907707, -1.8596476365928538e-05, -0.009306029416620731, -0.0008183944155462086, -2.706014311115723e-05, -0.08717246353626251, -0.00012265883560758084, -0.0044141001999378204, -0.2700349986553192, -0.003792238887399435, -0.012570316903293133, -0.07112223654985428, -0.07599479705095291, -0.0005516675882972777, -0.005278222728520632, -1.3068653345108032, -0.7669813632965088, -0.5507327318191528, -1.6698461771011353, -0.027865959331393242, -0.27261531352996826, -0.09698369354009628, -0.0006258912617340684, -0.8964254856109619, -0.029997091740369797, -0.3740864098072052, -5.8412379075889476e-06, -4.0531076592742465e-06, -0.00023135847004596144, -0.005277274176478386, -0.029020914807915688, -0.008793676272034645, -0.025527171790599823, -0.24038319289684296, -0.0007487116381525993, -0.010493461042642593, -0.0017853525932878256, -0.7847306728363037, -0.000708090839907527, -0.18751415610313416, -0.0011266082292422652, -0.003016566624864936, -0.001801535952836275, -0.008584265597164631, -0.1190437376499176, -0.00024923557066358626, -0.0043722037225961685, -0.23636110126972198, -0.009683421812951565, -0.05018990486860275, -0.07242061197757721, -0.006894371006637812, -0.5789841413497925, -0.027455007657408714, -0.00018535325943958014, -0.31286391615867615, -0.0010492063593119383, -0.03994186222553253, -0.00025102324434556067, -0.008076036348938942, -0.0477961003780365, -0.0022488560061901808, -1.1801649634435307e-05, -2.407998726994265e-05, -0.01322639174759388, -1.6689286894688848e-06, -1.9073468138230965e-06, -0.0007917130133137107, -0.002219476969912648, -0.018642684444785118, -6.794906312279636e-06, -0.0005274811992421746, 0.0, -0.0001586549769854173, 0.0, -1.9073468138230965e-06, -0.009099679067730904, -0.0006188622792251408, -0.008948934264481068, -0.0001915509783430025, -0.006463100668042898, -0.15690232813358307, -0.4580993056297302, -0.04486235976219177, -0.005577359814196825, -0.8897518515586853, -0.016688272356987, -0.2850954234600067, -0.126852348446846, -0.07673146575689316, -0.0005382042727433145, -0.01751924864947796, -0.004692376125603914, -0.005812765099108219, -1.440288782119751, -0.08813969045877457, -0.0008525789016857743, -0.008140361867845058, -2.1576648578047752e-05, -1.597391747054644e-05, -0.0001110968878492713, -0.00108624086715281, -0.016775023192167282, -0.0025592453312128782, -0.20458751916885376, -0.0006260104128159583, -0.0004048719711136073, -0.007892020978033543, -0.0001967951684491709, -0.0003400462737772614, -0.0003657863999251276, -6.782778655178845e-05, -0.00831274501979351, -7.510157047363464e-06, -0.0010970771545544267, -2.3841830625315197e-06, -2.3841830625315197e-06, -0.09677637368440628, -0.0011931689223274589, -0.00047434045700356364, -8.666139910928905e-05, -0.00447189761325717, -0.0008810452418401837, -0.015875257551670074, -0.00015627116954419762, -0.005085746292024851, -0.021971499547362328, -0.0123707614839077, -2.6572766304016113, -0.00045753977610729635, -0.055952612310647964, -0.005135796032845974, -0.005643861833959818, -0.003808271139860153, -0.4943261742591858, -0.0006009918288327754, -0.03672264516353607, -0.04681053385138512, -2.3364747903542593e-05, -0.29344162344932556, -0.00010191874753218144, -0.007044833619147539, -0.0010887415846809745, -0.0005432083853520453, -9.298280929215252e-06, -5.280832192511298e-05, -0.0007849234389141202, -0.017729725688695908, -0.00025614796322770417, -0.10261794924736023, -0.03599993884563446, -0.0002553137019276619, -1.1205610462639015e-05, -2.5629668016335927e-05, -0.24227069318294525, -0.01162752229720354, -1.0351245403289795], "finish_reason": "stop"}], "metrics": {"energy": 683.7303551330572, "energy_per_token": 3.695839757475985, "time": 16.797363, "time_per_token": 0.09079655675675675}}
{"outputs": [{"text": "# Remove special characters and lowercase the text\n    text = re.sub(r'[^\\w\\s]', '', text).lower()\n\n    # Split the text into words\n    words = [w for w in text.split() if w not in STOPWORDS]\n\n    # Create the n-grams\n    ngrams = Counter([tuple(words[i:i+n]) for i in range(len(words)-n+1)])\n\n    # Remove duplicate n-grams and update the counts\n    dedup_ngrams = Counter()\n    for ngram, count in ngrams.items():\n        dedup_ngrams[tuple([word for word in ngram if word not in STOPWORDS])] += count\n\n    # Remove ngrams that have no words\n    ngrams = Counter({k: v for k, v in dedup_ngrams.items() if k})\n\n    return ngrams", "tokens": ["#", " Remove", " special", " characters", " and", " lower", "case", " the", " text", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", ".", "lower", "()", "\n", "\n", "    ", "#", " Split", " the", " text", " into", " words", "\n", "    ", "words", " =", " [", "w", " for", " w", " in", " text", ".", "split", "()", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Create", " the", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " Counter", "([", "tuple", "(", "words", "[", "i", ":", "i", "+", "n", "])", " for", " i", " in", " range", "(", "len", "(", "words", ")-", "n", "+", "1", ")]", ")", "\n", "\n", "    ", "#", " Remove", " duplicate", " n", "-", "grams", " and", " update", " the", " counts", "\n", "    ", "dedup", "_", "ng", "rams", " =", " Counter", "()", "\n", "    ", "for", " n", "gram", ",", " count", " in", " n", "grams", ".", "items", "():", "\n", "        ", "dedup", "_", "ng", "rams", "[", "tuple", "([", "word", " for", " word", " in", " n", "gram", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", ")]", " +=", " count", "\n", "\n", "    ", "#", " Remove", " n", "grams", " that", " have", " no", " words", "\n", "    ", "ng", "rams", " =", " Counter", "({", "k", ":", " v", " for", " k", ",", " v", " in", " ded", "up", "_", "ng", "rams", ".", "items", "()", " if", " k", "})", "\n", "\n", "    ", "return", " n", "grams"], "logprobs": [-0.3499735891819, -0.8898080587387085, -3.139167070388794, -0.04416661337018013, -0.5093441605567932, -2.294050693511963, -0.13538525998592377, -0.4228198528289795, -0.0318450927734375, -0.07221679389476776, -0.002997193718329072, -0.32997390627861023, -0.028363652527332306, -0.03850126639008522, -2.992108420585282e-05, -0.0006864098832011223, -0.13796304166316986, -0.010832435451447964, -0.14714032411575317, -0.004209230188280344, -0.1024833545088768, -0.0014138950500637293, -0.03655474632978439, -2.2053474822314456e-05, -0.011980246752500534, -0.0005538121913559735, -2.777537883957848e-05, -0.10799562931060791, -0.0002244459028588608, -0.0023935975041240454, -0.29068371653556824, -0.08583130687475204, -0.009327760897576809, -2.8967437174287625e-05, -0.01963745430111885, -0.17026439309120178, -0.0005893162451684475, -0.008707412518560886, -1.41102933883667, -0.08874399214982986, -0.009215084835886955, -0.006224886979907751, -0.20578217506408691, -0.5935077667236328, -0.00040165462996810675, -0.017324896529316902, -0.003178308717906475, -1.690494179725647, -2.2743048667907715, -0.09501462429761887, -0.0012351986952126026, -4.351044481154531e-05, -0.3721148371696472, -0.0006579380133189261, -0.0028058229945600033, -0.05407097190618515, -0.015725767239928246, -0.011644137091934681, -0.07544873654842377, -0.00011801023356383666, -0.0014866263372823596, -2.3841855067985307e-07, -2.3603161025675945e-05, 0.0, -3.3378546504536644e-06, -0.07596452534198761, -0.02444285899400711, -0.06484910100698471, -0.0006822404102422297, -0.013012846931815147, -2.256612777709961, -1.2116574048995972, -0.13323859870433807, -0.02527904324233532, -0.004498481284826994, -0.41244590282440186, -0.0007609808817505836, -0.022370606660842896, -0.0019110051216557622, -0.0013923484366387129, -3.40231990814209, -2.197237968444824, -0.16362516582012177, -0.0017864234978333116, -0.019854731857776642, -0.000886285852175206, -0.002855036174878478, -0.04911942407488823, -0.00601742509752512, -0.2477811723947525, -0.0005905076395720243, -0.0007663412252441049, -0.005334903486073017, -0.00020644917094614357, -0.0013703251024708152, -0.0004961451631970704, -8.248942322097719e-05, -0.009014149196445942, -2.0146166207268834e-05, -0.0010799296433106065, -0.14347094297409058, -0.001739775761961937, -0.003304499201476574, -0.0002420847595203668, -0.016531866043806076, -0.0007120219524949789, -0.0032286918722093105, -0.054497212171554565, -0.000395815703086555, -1.2183377742767334, -0.705206573009491, -0.27250030636787415, -0.3593696653842926, -0.03910845145583153, -0.0008073169738054276, -2.0831995010375977, -2.874401330947876, -0.026965448632836342, -1.4514126777648926, -0.04332256689667702, -0.001191621064208448, -2.537855863571167, -1.6042420864105225, -0.009498286060988903, -0.0021261009387671947, -0.0006227937992662191, -0.11142687499523163, -0.01688391901552677, -0.00024387246230617166, -0.013497992418706417, -0.17002828419208527, -0.22294048964977264, -0.008991112001240253, -0.12865054607391357, -0.01058641355484724, -6.294052582234144e-05, -0.0025819556321948767, -3.576272320060525e-06, -0.00011324241495458409, -0.0013862771447747946, -2.8132995794294402e-05, -6.949660019017756e-05, -0.0016653967322781682, -1.4641939401626587, -0.04810289666056633, -0.03144871070981026, -0.20431379973888397, -0.11093898862600327, -0.643130898475647, -2.2226450443267822, -0.6082611680030823, -0.013715313747525215, -0.002356849145144224, -8.904537389753386e-05, -0.00036507140612229705, -1.4066597032069694e-05, -0.0030574502889066935, -0.0456908755004406, -0.022974267601966858, -6.925819616299123e-05, -0.05299288406968117, 0.0, -3.933898824470816e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.008243110030889511, -0.0001754606782924384, -0.0006632988806813955, -0.03318668156862259, -0.004211841616779566, -0.020941810682415962, -0.0003591130953282118, -1.7248209714889526, -1.7921931743621826, -0.586977481842041, -2.553795576095581, -1.6230247020721436, -1.2627192735671997, -2.7983405590057373, -0.37501099705696106, -0.9947736859321594, -0.00047267231275327504, -0.9106538891792297, -0.014936281368136406, -0.10741934180259705, -0.19719700515270233, -0.06314609944820404, -0.7066362500190735, -0.0008241117466241121, -0.03143173083662987, -0.0001255195093108341, -7.915183232398704e-05, -2.5033637939486653e-05, -0.0012172202114015818, -1.728519782773219e-05, -0.0023782560601830482, 0.0, -2.3841830625315197e-06, -2.0146166207268834e-05, -5.722029527532868e-06, -0.0001734344696160406, -0.0012685356196016073, -2.6225699912174605e-05, -0.0004593271005433053, -1.691425085067749, -0.20166650414466858, -0.0004755319678224623, -0.033553555607795715, -0.0003668589051812887, -0.17016515135765076, -0.02596667781472206, -8.546940807718784e-05], "finish_reason": "stop"}], "metrics": {"energy": 808.9849630279538, "energy_per_token": 3.815966806735631, "time": 22.550962, "time_per_token": 0.10637246226415094}}
{"outputs": [{"text": "# Remove punctuation and lowercase\n    text = re.sub(r'[^\\w\\s]', '', text).lower()\n\n    # Remove stopwords and duplicates\n    words = [word for word in text.split() if word not in STOPWORDS]\n    words = list(set(words))\n\n    # Generate n-grams\n    ngrams = zip(*[words[i:] for i in range(n)])\n    ngrams = Counter(ngrams)\n\n    return ngrams", "tokens": ["#", " Remove", " punct", "uation", " and", " lower", "case", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " stop", "words", " and", " dup", "licates", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "words", " =", " list", "(", "set", "(", "words", "))", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " zip", "(*", "[", "words", "[", "i", ":]", " for", " i", " in", " range", "(", "n", ")]", ")", "\n", "    ", "ng", "rams", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "return", " n", "grams", "\n", "\n", "if"], "logprobs": [-0.3499735891819, -0.8898080587387085, -1.4564430713653564, -0.025368422269821167, -0.5741568207740784, -1.81361985206604, -0.10850100219249725, -2.479917526245117, -0.0015482831513509154, -0.1289786845445633, -0.03695669397711754, -0.1356639266014099, -6.01988795096986e-05, -0.0007833749405108392, -0.04398798197507858, -0.01184902060776949, -0.13345737755298615, -0.006151670124381781, -0.029875149950385094, -0.0014044907875359058, -0.012526053003966808, -2.7656173188006505e-05, -0.00899749156087637, -0.0003793711948674172, -2.253030106658116e-05, -0.15875211358070374, -0.00017855956684798002, -0.00266779912635684, -0.5697723031044006, -0.11379051953554153, -0.005434501450508833, -3.313963316031732e-05, -0.0233705285936594, -0.2509833574295044, -0.0004465774691198021, -0.011428956873714924, -0.30758944153785706, -0.7512850165367126, -0.0796792209148407, -0.7272445559501648, -1.1315447092056274, -0.0024317714851349592, -0.06371580064296722, -0.0007512131123803556, -0.4068230986595154, -0.006288147531449795, -0.3169163465499878, -0.11970052123069763, -0.008403772488236427, -0.0002217047003796324, -8.332382276421413e-05, -0.12842904031276703, -0.0006598440813831985, -0.0013573489850386977, -0.026527194306254387, -0.020854836329817772, -0.022822454571723938, -0.022075984627008438, -4.458328112377785e-05, -0.0010269373888149858, 0.0, -7.950943836476654e-05, 0.0, -2.622600959512056e-06, -0.9231444597244263, -0.0038355845026671886, -0.5417609810829163, -0.5008130669593811, -0.01786264218389988, -0.3937046527862549, -0.00031799983116798103, -0.7596543431282043, -0.003128636162728071, -0.004991213791072369, -0.001798085169866681, -0.04510670155286789, -0.023508168756961823, -0.00018916724366135895, -0.010522480122745037, -0.1849702000617981, -0.1377960443496704, -0.135405033826828, -0.00448115449398756, -0.4312892556190491, -0.0005486889858730137, -0.011899675242602825, -0.0024317714851349592, -0.000602421467192471, -1.4276854991912842, -0.0006133820279501379, -0.059253983199596405, -0.0012854416854679585, -0.0006606780225411057, -0.0007340597221627831, -0.0002026352594839409, -0.00046230596490204334, -3.182837463100441e-05, -1.156323378381785e-05, -0.00018082413589581847, -3.325883881188929e-05, -0.02239823341369629, -0.00043025295599363744, -8.535020606359467e-05, -0.0073654530569911, -2.161634683609009, -0.44514358043670654, -0.3189705014228821, -0.23849382996559143, -0.1746024787425995, -0.008489117957651615, -0.02024603821337223, -5.602820692729438e-06, -0.0004564673872664571, -0.015635285526514053, -0.1381296068429947, -0.00043394684325903654, -0.12337455153465271, -0.047162096947431564, -0.00036244976217858493, -0.2519744336605072, -0.010043088346719742, -0.779363751411438], "finish_reason": "stop"}], "metrics": {"energy": 530.0717669162752, "energy_per_token": 4.344850548494059, "time": 15.373991, "time_per_token": 0.12601631967213114}}
{"outputs": [{"text": "# Remove punctuation and make the text lowercase\n    text = re.sub(r'[^\\w\\s]', '', text)\n    text = text.lower()\n\n    # Split the text into words\n    words = text.split()\n\n    # Remove duplicate words and stopwords\n    words = [word for word in words if word not in STOPWORDS and word not in STOPWORDS]\n\n    # Generate n-grams\n    ngrams = [tuple(words[i:i+n]) for i in range(len(words)-n+1)]\n\n    # Count the occurrences of each n-gram\n    count = Counter(ngrams)\n\n    return count", "tokens": ["#", " Remove", " punct", "uation", " and", " make", " the", " text", " lower", "case", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "    ", "#", " Split", " the", " text", " into", " words", "\n", "    ", "words", " =", " text", ".", "split", "()", "\n", "\n", "    ", "#", " Remove", " duplicate", " words", " and", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " [", "tuple", "(", "words", "[", "i", ":", "i", "+", "n", "])", " for", " i", " in", " range", "(", "len", "(", "words", ")-", "n", "+", "1", ")]", "\n", "\n", "    ", "#", " Count", " the", " occurrences", " of", " each", " n", "-", "gram", "\n", "    ", "count", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "return", " count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.3499735891819, -0.8898080587387085, -1.4564430713653564, -0.025368422269821167, -0.5741568207740784, -2.504469156265259, -1.920055866241455, -0.06656639277935028, -0.008398925885558128, -0.03945104405283928, -0.06184536591172218, -0.0033654500730335712, -0.20920145511627197, -0.033015187829732895, -0.051250066608190536, -4.386805812828243e-05, -0.0009140365873463452, -0.05960243567824364, -0.008960630744695663, -0.10240824520587921, -0.005582457408308983, -0.02360469289124012, -0.0006404255982488394, -0.005914804060012102, -2.539125671319198e-05, -0.010956366546452045, -0.00038223114097490907, -2.312633478140924e-05, -0.09050995111465454, -0.00022575691400561482, -0.0025844527408480644, -0.7594009041786194, -2.143643379211426, -0.022434018552303314, -0.05062856525182724, -0.007670472841709852, -0.026742631569504738, -9.810443589231e-05, -0.008572446182370186, -3.969590397900902e-05, -0.012204493395984173, -0.06444547325372696, -0.0004886387032456696, -0.010973935015499592, -1.3924646377563477, -0.06838873028755188, -0.01107910368591547, -0.004876861814409494, -0.36064454913139343, -0.46212559938430786, -0.0004670721245929599, -0.01773710362613201, -0.0018237876938655972, -0.3083230257034302, -7.60526381782256e-05, -0.0017477489309385419, -0.02158845029771328, -0.0006936766440048814, -0.02977055124938488, -0.00033778208307921886, -0.0027353274635970592, -0.06645752489566803, -0.7214660048484802, -0.9021881818771362, -0.601375937461853, -0.017699861899018288, -0.028933366760611534, -0.06171178072690964, -0.0003010773507412523, -0.3296487033367157, -0.023006537929177284, -0.21864105761051178, -0.1044706404209137, -0.005260079633444548, -0.004111528396606445, -0.0002113357331836596, -0.022723523899912834, -0.0025938458275049925, -0.06027282401919365, -0.009636905044317245, -1.2516897186287679e-05, -0.007091116160154343, 0.0, -8.5588610090781e-05, 0.0, -1.0132738680113107e-05, -0.7862550616264343, -1.7125810384750366, -0.06307805329561234, -1.764281842042692e-05, -2.420933723449707, -2.95634672511369e-05, -0.0033774496987462044, -0.0001072826053132303, -8.34461570775602e-06, -0.25580283999443054, -0.012979075312614441, -0.03523493558168411, -0.0002348147245356813, -0.00520896865054965, -0.15390610694885254, -0.7161386013031006, -0.03402400016784668, -0.002215432934463024, -0.41365769505500793, -0.0005211663665249944, -0.011682312935590744, -0.0016025570221245289, -0.0011723319767042994, -1.4048004150390625, -0.18700259923934937, -0.0010412277188152075, -0.002718921285122633, -0.0004003438516519964, -0.0008798541966825724, -0.027397362515330315, -0.002477792324498296, -0.23307164013385773, -0.0011897159274667501, -0.0007296522380784154, -0.0005069877952337265, -0.00010656742961145937, -0.0008026715368032455, -0.00015925093612167984, -8.046303264563903e-05, -0.007178703788667917, -1.1801649634435307e-05, -0.00159172632265836, -0.041685499250888824, -0.0012538912706077099, -0.002867279574275017, -0.00018749863374978304, -0.01204491127282381, -0.0007071378640830517, -0.020044270902872086, -0.0001919085334520787, -0.00821508839726448, -0.017690492793917656, -0.06072032079100609, -2.6940879821777344, -0.0015300721861422062, -0.29052984714508057, -0.0037733560893684626, -0.004919804632663727, -0.002723438898101449, -0.043345965445041656, -0.0008599635912105441, -3.0843746662139893, -0.04349207133054733, -0.005675748456269503, -0.004986350424587727, -0.000860201776959002, -3.075552376685664e-05, -0.00011336160969221964, -0.000557267339900136, -0.0393131747841835, -0.0004383556661196053, -0.147215336561203, -0.03211849555373192, -2.539862632751465, -1.764281842042692e-05, -1.3232143828645349e-05, -1.4781842764932662e-05, -2.9801878554280847e-05, -0.1198352500796318], "finish_reason": "stop"}], "metrics": {"energy": 653.5359879856111, "energy_per_token": 3.960824169609764, "time": 18.544, "time_per_token": 0.11238787878787879}}
{"outputs": [{"text": "# Remove duplicate words from the text\n    text = re.sub(r'\\b(\\w+)\\b(?:\\s+\\1)+', r'\\1', text, flags=re.IGNORECASE)\n    # Remove stop words from the text\n    text = re.sub(r'\\b\\w+\\'*\\w+\\b', lambda m: m.group(0) if m.group(0).lower() not in STOPWORDS else '', text)\n    # Count n-grams in the text\n    ngrams = Counter(nltk.ngrams(text.split(), n))\n    # Return the count of n-grams\n    return ngrams", "tokens": ["#", " Remove", " duplicate", " words", " from", " the", " text", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "b", "(\\", "w", "+", ")\\", "b", "(", "?", ":\\", "s", "+\\", "1", ")+", "'", ",", " r", "'\\", "1", "'", ",", " text", ",", " flags", "=", "re", ".", "IGN", "ORE", "C", "ASE", ")", "\n", "    ", "#", " Remove", " stop", " words", " from", " the", " text", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "b", "\\", "w", "+\\", "'", "*\\", "w", "+\\", "b", "'", ",", " lambda", " m", ":", " m", ".", "group", "(", "0", ")", " if", " m", ".", "group", "(", "0", ")", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", " else", " ''", ",", " text", ")", "\n", "    ", "#", " Count", " n", "-", "grams", " in", " the", " text", "\n", "    ", "ng", "rams", " =", " Counter", "(", "nl", "tk", ".", "ng", "rams", "(", "text", ".", "split", "()", ",", " n", "))", "\n", "    ", "#", " Return", " the", " count", " of", " n", "-", "grams", "\n", "    ", "return", " n", "grams", "\n", "\n", "if"], "logprobs": [-0.3499735891819, -0.8898080587387085, -0.9788067936897278, -1.0051641464233398, -1.5360393524169922, -0.10421653836965561, -0.17076900601387024, -0.28997427225112915, -0.0037007909268140793, -0.7014009356498718, -0.11719328165054321, -0.36793410778045654, -3.8980677345534787e-05, -0.0010845737997442484, -0.007293384987860918, -0.0027466213796287775, -0.3704957365989685, -0.008309553377330303, -0.010258447378873825, -2.7179348762729205e-05, -0.06431379914283752, -0.08546188473701477, -0.13586875796318054, -0.3167612552642822, -0.006177379284054041, -0.7525981068611145, -0.3443242907524109, -0.09693446010351181, -0.00025996167096309364, -2.974187135696411, -0.0012518672738224268, -6.270212179515511e-05, -0.0007830176036804914, -0.0002928543253801763, -0.00015293381875380874, -0.0005310555570758879, -9.011816291604191e-05, -0.001734658726491034, -2.815420627593994, -0.004843289032578468, -0.0008973624208010733, -0.00026794656878337264, -9.536697689327411e-06, -0.4133707284927368, -8.344646857949556e-07, -7.152555099310121e-07, -1.1920928244535389e-07, -0.0014672239776700735, -0.01994927227497101, -2.027318000793457, -0.11687260121107101, -0.3025403916835785, -0.08104568719863892, -2.471377372741699, -0.08071298897266388, -0.0015716117341071367, -0.005478487350046635, -0.01588781364262104, -0.0016871754778549075, -0.3100282549858093, -0.06337817758321762, -1.9806153774261475, -5.98412734689191e-05, -0.0012338890228420496, -0.01387039665132761, -0.018349887803196907, -0.010315672494471073, -0.0008774721063673496, -0.6137701869010925, -0.0002208704245276749, -0.4191826581954956, -0.42588576674461365, -2.8773951530456543, -0.026798803359270096, -1.006217360496521, -0.017460443079471588, -0.005187859293073416, -0.0003781795676331967, -0.09193642437458038, -0.8547970652580261, -0.0017113338690251112, -0.23744556307792664, -0.008788714185357094, -5.757642793469131e-05, -0.025655103847384453, -0.011994381435215473, -7.176141662057489e-05, -0.05343415588140488, -0.007409354206174612, -0.0002683041093405336, -6.890059739816934e-05, -0.0004471732536330819, -0.008104770444333553, -2.6940935640595853e-05, -0.36843881011009216, -0.004403300117701292, -0.001970613142475486, -0.008962993510067463, -0.000348268891684711, -0.001065401709638536, 0.0, -5.2927523938706145e-05, 0.0, -3.576278118089249e-07, -0.028427034616470337, -0.015591861680150032, -0.0003668589051812887, -0.03807228431105614, -0.5894758701324463, -0.04156874865293503, -0.1640964150428772, -0.04141835868358612, -1.96631920337677, -1.0488855838775635, -0.10179061442613602, -0.005061431787908077, -0.27422237396240234, -0.005069141276180744, -0.02844765968620777, -0.06880868226289749, -0.0021395429503172636, -0.4060763120651245, -0.022510133683681488, -0.006037450395524502, -0.14389263093471527, -0.13767597079277039, -1.554309606552124, -0.0001245659514097497, -2.407998726994265e-05, -0.11242718994617462, -1.6331539882230572e-05, -0.007391131483018398, -0.25448083877563477, -0.002752922009676695, -0.1028398647904396, -0.013771988451480865, -0.00019488819816615433, -0.002033786615356803, -0.017692599445581436, -0.005319725722074509, -0.11686348170042038, -2.1285629272460938, -0.29302266240119934, -0.035653747618198395, -0.10479509830474854, -0.007360956631600857, -0.7064818739891052, -0.0020887479186058044, -0.0001436368766007945, -0.592202365398407, -0.0036250133998692036, -0.0068618133664131165, -0.03438814729452133, -0.00011383838864276186, -0.21597442030906677, -0.016332043334841728, -1.0617982149124146], "finish_reason": "stop"}], "metrics": {"energy": 584.3320606403346, "energy_per_token": 3.721860258855634, "time": 14.6812315, "time_per_token": 0.09351102866242039}}
{"outputs": [{"text": "# Remove stopwords from the text\n    tokens = nltk.word_tokenize(text)\n    text_without_stopwords = [\n        token for token in tokens if token.lower() not in STOPWORDS\n    ]\n\n    # Remove duplicate tokens from the text\n    text_without_duplicates = []\n    for token in text_without_stopwords:\n        if token.lower() not in text_without_duplicates:\n            text_without_duplicates.append(token)\n\n    # Generate the n-grams and count them\n    ngrams = nltk.ngrams(text_without_duplicates, n)\n    ngrams_counter = Counter(ngrams)\n    return ngrams_counter", "tokens": ["#", " Remove", " stop", "words", " from", " the", " text", "\n", "    ", "tokens", " =", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "text", ")", "\n", "    ", "text", "_", "without", "_", "stop", "words", " =", " [", "\n", "        ", "token", " for", " token", " in", " tokens", " if", " token", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "\n", "    ", "]", "\n", "\n", "    ", "#", " Remove", " duplicate", " tokens", " from", " the", " text", "\n", "    ", "text", "_", "without", "_", "dup", "licates", " =", " []", "\n", "    ", "for", " token", " in", " text", "_", "without", "_", "stop", "words", ":", "\n", "        ", "if", " token", ".", "lower", "()", " not", " in", " text", "_", "without", "_", "dup", "licates", ":", "\n", "            ", "text", "_", "without", "_", "dup", "licates", ".", "append", "(", "token", ")", "\n", "\n", "    ", "#", " Generate", " the", " n", "-", "grams", " and", " count", " them", "\n", "    ", "ng", "rams", " =", " n", "lt", "k", ".", "ng", "rams", "(", "text", "_", "without", "_", "dup", "licates", ",", " n", ")", "\n", "    ", "ng", "rams", "_", "counter", " =", " Counter", "(", "ng", "rams", ")", "\n", "    ", "return", " n", "grams", "_", "counter", "\n", "\n", "if"], "logprobs": [-0.3499735891819, -0.8898080587387085, -2.6290409564971924, -0.12460034340620041, -1.82551908493042, -0.36432844400405884, -0.16704365611076355, -0.2584192454814911, -0.006993577349931002, -2.5590481758117676, -0.011097259819507599, -2.6251378059387207, -0.0008287570672109723, -4.100715523236431e-05, -4.6967357775429264e-05, -0.10346351563930511, -0.003335153218358755, -0.00033098942367359996, -8.583032467868179e-06, -0.0008542464347556233, -0.008322320878505707, -0.10704078525304794, -0.015394669026136398, -0.032107874751091, -3.3589119911193848, -0.7526901960372925, -0.7885136008262634, -0.004775428678840399, -0.08508740365505219, -0.04426299035549164, -0.0021421597339212894, -0.7122817635536194, -2.291269540786743, -0.012654718942940235, -1.754618763923645, -0.060542602092027664, -0.0002644904307089746, -2.5510462364763953e-05, -0.0033416880760341883, -0.011733447201550007, -0.009752603247761726, -0.8201785683631897, -0.11399412155151367, -0.0021302644163370132, -0.0026473496109247208, -8.34461570775602e-06, -0.0014379409840330482, -1.1920928244535389e-07, -0.0001501924270996824, 0.0, -4.768370445162873e-07, -1.1045089960098267, -0.0186587143689394, -7.331102824537084e-05, -0.001404847833327949, -0.11949986964464188, -0.0007674132939428091, -0.03500140830874443, -1.2589706182479858, -0.3608246445655823, -1.2929511070251465, -0.6560607552528381, -0.015108788385987282, -0.05741332843899727, -0.05239859223365784, -0.0014287750236690044, -0.4944198429584503, -0.025455238297581673, -0.08396224677562714, -2.9801878554280847e-05, -0.26464998722076416, -0.05142548307776451, -0.00527632562443614, -1.6792278289794922, -0.0011613775277510285, -0.013340969569981098, -0.14943747222423553, -0.13125325739383698, -0.0006304183625616133, -0.041012827306985855, -0.006724584847688675, -7.652943895664066e-05, -4.768370445162873e-07, -1.680836794548668e-05, -6.794906312279636e-06, -0.0008542464347556233, -0.0008081507403403521, -0.0010617101797834039, -0.050348956137895584, -0.0464542955160141, -1.6666784286499023, -0.012531938962638378, -0.0009423820883966982, -0.014359239488840103, -1.9073468138230965e-06, -0.19918763637542725, -0.00035339308669790626, -5.376194530981593e-05, -9.536738616588991e-07, -0.042202532291412354, -4.124556289752945e-05, -0.020563272759318352, -0.003803758416324854, -0.0004539651272352785, -0.005409958306699991, -2.4914430468925275e-05, -1.9073468138230965e-06, 0.0, -0.00011312322021694854, -1.0490362910786644e-05, -0.0025794587563723326, -0.00015352977789007127, -0.0006121906917542219, -0.002525594551116228, -0.8291379809379578, -0.00029452278977259994, -0.04139354079961777, -0.0011705459328368306, -0.03655083850026131, -0.4268261194229126, -1.1527855396270752, -0.4276461899280548, -0.04594571888446808, -0.04465831443667412, -1.2318168878555298, -0.1969403475522995, -0.8189066648483276, -0.037110164761543274, -0.00526233296841383, -0.06347842514514923, -0.024641066789627075, -0.016495399177074432, -1.3344857692718506, -0.0009344025747850537, -4.6491513785440475e-06, -4.053033626405522e-05, -0.08808358758687973, -3.4927710657939315e-05, -0.0018306892598047853, -0.014770204201340675, -0.0008457897347398102, -3.814689989667386e-06, -5.960462772236497e-07, -0.01458870992064476, -2.9802276912960224e-06, -0.00026842328952625394, -0.00393533194437623, -0.03045186586678028, -0.0018951804377138615, -0.03552605211734772, -0.20389223098754883, -1.2230758666992188, -0.03999924659729004, -0.9609105587005615, -0.0002002515539061278, -0.004111884627491236, -0.013718841597437859, -0.011827933602035046, -0.0001248043408850208, -0.00016675988445058465, -0.002014275873079896, -1.7968297004699707, -0.09298259019851685, -0.036814916878938675, -1.168244216387393e-05, -0.0009425011812709272, -2.253030106658116e-05, -0.2203245311975479, -0.008479188196361065, -0.9864798188209534], "finish_reason": "stop"}], "metrics": {"energy": 631.8548170051574, "energy_per_token": 3.716793041206808, "time": 16.582348, "time_per_token": 0.09754322352941176}}
{"outputs": [{"text": "# Remove duplicate words in the text\n    text_unique = ' '.join(set(text.split()))\n    # Remove stopwords from the unique text\n    text_clean = ' '.join(w for w in text_unique.split() if w not in STOPWORDS)\n    # Generate the n-grams and count them\n    ngrams = Counter(\n        text_clean[i: i + n] for i in range(len(text_clean) - n + 1)\n    )\n    return ngrams", "tokens": ["#", " Remove", " duplicate", " words", " in", " the", " text", "\n", "    ", "text", "_", "unique", " =", " '", " '", ".", "join", "(", "set", "(", "text", ".", "split", "()))", "\n", "    ", "#", " Remove", " stop", "words", " from", " the", " unique", " text", "\n", "    ", "text", "_", "clean", " =", " '", " '", ".", "join", "(", "w", " for", " w", " in", " text", "_", "unique", ".", "split", "()", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "#", " Generate", " the", " n", "-", "grams", " and", " count", " them", "\n", "    ", "ng", "rams", " =", " Counter", "(", "\n", "        ", "text", "_", "clean", "[", "i", ":", " i", " +", " n", "]", " for", " i", " in", " range", "(", "len", "(", "text", "_", "clean", ")", " -", " n", " +", " ", "1", ")", "\n", "    ", ")", "\n", "    ", "return", " n", "grams", "\n", "\n", "def"], "logprobs": [-0.3499735891819, -0.8898080587387085, -0.9788067936897278, -1.0051641464233398, -2.379251480102539, -0.10112713277339935, -0.17855405807495117, -0.29607251286506653, -0.004138952121138573, -0.5810269117355347, -1.8720757961273193, -2.5500648021698, -0.10650671273469925, -1.5035120248794556, -0.0005449955351650715, -0.00023135847004596144, -0.00021717573690693825, -0.004300275351852179, -0.7847795486450195, -0.0033786376006901264, -0.03553088381886482, -0.015096458606421947, -0.055498238652944565, -0.047434981912374496, -0.01167147234082222, -1.7010741233825684, -0.13408631086349487, -0.3767012059688568, -0.14666050672531128, -0.0969017893075943, -0.187142014503479, -0.01131097786128521, -2.861294746398926, -0.1339106261730194, -0.06558074057102203, -0.0009416675311513245, -0.12678219377994537, -0.012202962301671505, -2.9563541412353516, -0.006239340174943209, -0.1302541345357895, -9.131014667218551e-05, -0.00023493390472140163, -0.00019000156316906214, -0.49101412296295166, -1.411706566810608, -0.0055954973213374615, -3.766942609217949e-05, -8.725739462533966e-05, -0.13082441687583923, -0.0032772899139672518, -1.3232143828645349e-05, -0.002998025855049491, -0.006714875344187021, -0.0076469313353300095, -0.03183770179748535, -0.005256284959614277, -0.13886381685733795, -7.462222856702283e-05, -0.0008777103503234684, -2.3841855067985307e-07, -0.000120751719805412, 0.0, -1.1920928244535389e-07, -0.007918987423181534, -0.002244574250653386, -0.2539620101451874, -0.048820316791534424, -0.36930328607559204, -1.2118823528289795, -0.31118202209472656, -0.08596761524677277, -0.04988669604063034, -2.7769815921783447, -0.21581092476844788, -0.740892231464386, -0.05534575879573822, -0.002973423106595874, -0.09103239327669144, -0.02169215865433216, -0.024612803012132645, -0.37384480237960815, -0.06555361300706863, -2.3150267601013184, -0.029404716566205025, -1.4945106506347656, -0.0764421671628952, -0.002567092888057232, -0.012710041366517544, -0.017127342522144318, -0.048518624156713486, -2.567944049835205, -0.21418824791908264, -0.00655583618208766, -0.006940068677067757, -0.507414698600769, -0.006260664202272892, -0.0060234684497118, -0.0016279076226055622, -0.0006200536736287177, -0.011155261658132076, -7.414542778860778e-05, -0.0006690170848742127, -0.008153960108757019, -0.00023755589791107923, -0.01023402251303196, -0.0021651177667081356, -0.1464719921350479, -0.014345255680382252, -0.00034564718953333795, -0.0003698380314745009, -0.4365500509738922, -0.016760604456067085, -0.05105389282107353, -0.00015114595589693636, -0.013065796345472336, -0.12816523015499115, -0.19081002473831177, -0.03803739696741104, -9.07141511561349e-05, -0.26082754135131836, -0.008872135542333126, -1.4763476848602295], "finish_reason": "stop"}], "metrics": {"energy": 515.9201822166447, "energy_per_token": 4.194473026151583, "time": 15.554383, "time_per_token": 0.12645839837398373}}
{"outputs": [{"text": "# Remove duplicates from the input text\n    text = re.sub(r'\\b(\\w+)\\b(?:.*\\1\\b)+', r'\\1', text)\n    # Split the text into a list of words\n    words = nltk.word_tokenize(text)\n    # Remove stopwords from the list of words\n    words = [w for w in words if w not in STOPWORDS]\n    # Create a list of n-grams from the list of words\n    ngrams = [(tuple(words[i:i+n])) for i in range(len(words)-n+1)]\n    # Count the frequency of each n-gram in the list of n-grams\n    ngram_counts = Counter(ngrams)\n    # Return the count of each n-gram\n    return ngram_counts", "tokens": ["#", " Remove", " dup", "licates", " from", " the", " input", " text", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "b", "(\\", "w", "+", ")\\", "b", "(", "?", ":", ".", "*\\", "1", "\\", "b", ")+", "'", ",", " r", "'\\", "1", "'", ",", " text", ")", "\n", "    ", "#", " Split", " the", " text", " into", " a", " list", " of", " words", "\n", "    ", "words", " =", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "text", ")", "\n", "    ", "#", " Remove", " stop", "words", " from", " the", " list", " of", " words", "\n", "    ", "words", " =", " [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "#", " Create", " a", " list", " of", " n", "-", "grams", " from", " the", " list", " of", " words", "\n", "    ", "ng", "rams", " =", " [(", "tuple", "(", "words", "[", "i", ":", "i", "+", "n", "]))", " for", " i", " in", " range", "(", "len", "(", "words", ")-", "n", "+", "1", ")]", "\n", "    ", "#", " Count", " the", " frequency", " of", " each", " n", "-", "gram", " in", " the", " list", " of", " n", "-", "grams", "\n", "    ", "ng", "ram", "_", "counts", " =", " Counter", "(", "ng", "rams", ")", "\n", "    ", "#", " Return", " the", " count", " of", " each", " n", "-", "gram", "\n", "    ", "return", " n", "gram", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.3499735891819, -0.8898080587387085, -2.8647453784942627, -0.0023773047141730785, -1.5472805500030518, -0.1580381542444229, -2.7841086387634277, -0.5771969556808472, -0.19655434787273407, -0.004150111693888903, -0.3320448696613312, -0.06146630644798279, -0.453467458486557, -6.48477507638745e-05, -0.0009588173124939203, -0.00978246983140707, -0.004473440814763308, -0.7739417552947998, -0.21631650626659393, -0.05056600645184517, -0.00021181246847845614, -0.10908788442611694, -0.14135557413101196, -0.18273477256298065, -0.037679512053728104, -0.001177809201180935, -1.9340283870697021, -0.13015367090702057, -0.017905499786138535, -0.6773356199264526, -0.008283661678433418, -4.029192859889008e-05, -0.023617150261998177, -0.000562271336093545, -5.435795901576057e-05, -0.0002859421947505325, -0.0003181189822498709, -0.0001284993631998077, -0.0011829291470348835, -0.00010764019680209458, -0.0018215269083157182, -0.05611007288098335, -0.019476015120744705, -1.851921796798706, -0.075382299721241, -2.181033134460449, -0.07769902050495148, -0.16748365759849548, -0.01301672961562872, -2.309023380279541, -0.004139070864766836, -0.0008055302896536887, -0.05340172350406647, -0.2279762327671051, -0.0019511011196300387, -0.09512887895107269, -0.004123993683606386, -2.4934158325195312, -0.000800408364739269, -0.00019131260341964662, -7.509902934543788e-05, -0.0561133436858654, -0.004787885583937168, -0.00014590153296012431, -4.0531076592742465e-06, -0.00048196621355600655, -0.0017055026255548, -0.05819833651185036, -0.002072688192129135, -0.04234903305768967, -0.02249591238796711, -0.09865276515483856, -0.039151668548583984, -0.056623876094818115, -0.1549663245677948, -0.0009336879593320191, -0.09832911193370819, -0.011891311965882778, -0.0007141662063077092, -0.009521312080323696, -0.0007254829397425056, -0.1260867565870285, -0.011844897642731667, -0.0028313808143138885, -2.1106204986572266, -0.024542083963751793, -2.8609820219571702e-05, -1.5735502529423684e-05, -0.00023338454775512218, -0.0004419303731992841, -0.007269124500453472, -0.47726574540138245, -5.364403477869928e-06, -0.0012473430251702666, 0.0, -9.131014667218551e-05, 0.0, -3.576272320060525e-06, -0.0335719995200634, -0.0006135011790320277, -0.031397998332977295, -0.00795742403715849, -2.5340735912323, -0.960385262966156, -0.3361274003982544, -0.004774004686623812, -0.31795769929885864, -0.018551530316472054, -0.025307055562734604, -0.7163053750991821, -0.0008181562297977507, -0.046359043568372726, -0.00031454383861273527, -0.006082831881940365, -0.08227075636386871, -0.0004306104383431375, -0.02118121273815632, -0.002142873592674732, -0.0014859121292829514, -2.5277771949768066, -2.555171251296997, -0.005336444824934006, -0.016601746901869774, -0.004452909342944622, -0.006294900085777044, -0.09205994009971619, -0.005831846036016941, -0.16780029237270355, -0.005112787708640099, -0.50767582654953, -0.019364360719919205, -0.0003797286772169173, -0.0030762276146560907, -0.0005169962532818317, -0.0008768765837885439, -0.014216572046279907, -6.12716976320371e-05, -0.003980571404099464, -0.06762827932834625, -0.0028064174111932516, -0.007973744533956051, -0.00023731753753963858, -0.006255806889384985, -0.0029257608111947775, -0.0092815812677145, -0.009581885300576687, -0.30192217230796814, -0.005869296845048666, -0.9033552408218384, -0.00036483307485468686, -0.06269072741270065, -0.01482564490288496, -0.008629885502159595, -0.002053059171885252, -0.5506817102432251, -0.0005108005134388804, -0.05395837128162384, -0.04028370976448059, -0.022227095440030098, -0.12260366231203079, -0.000945121340919286, -0.03758525475859642, -0.0010085977846756577, -0.37634584307670593, -0.6705172657966614, -0.00395231181755662, -0.21061305701732635, -0.0005009111482650042, -0.016721215099096298, -0.0070978631265461445, -0.007963573560118675, -0.00012659224739763886, -0.0002215855201939121, -0.0028551549185067415, -0.07018707692623138, -0.5870101451873779, -0.0972251445055008, -0.04772370681166649, -0.4445124566555023, -0.014682808890938759, -1.5039780139923096, -0.013626297935843468, -0.0014617482665926218, -0.0007231004419736564, -0.9896892309188843, -0.0018217648612335324, -0.006691666319966316, -0.0872761458158493, -0.000570253818295896, -1.4185804502631072e-05, -3.349725011503324e-05, -2.8965835571289062, -1.490105023549404e-05, -8.34461570775602e-06, -1.8358061424805783e-05, -6.3774932641536e-05, -0.13690198957920074], "finish_reason": "stop"}], "metrics": {"energy": 728.8088581275932, "energy_per_token": 3.6995373509014886, "time": 18.426338, "time_per_token": 0.09353471065989849}}
{"outputs": [{"text": "text = re.sub(r'\\s+', ' ', text)  # Remove duplicate spaces\n    words = [word for word in text.lower().split() if word not in STOPWORDS]\n    ngrams = Counter(tuple(words[i:i + n]) for i in range(len(words) - n + 1))\n\n    return ngrams", "tokens": ["text", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " text", ")", "  ", "#", " Remove", " duplicate", " spaces", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " text", ".", "lower", "()", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "ng", "rams", " =", " Counter", "(", "tuple", "(", "words", "[", "i", ":", "i", " +", " n", "])", " for", " i", " in", " range", "(", "len", "(", "words", ")", " -", " n", " +", " ", "1", "))", "\n", "\n", "    ", "return", " n", "grams", "\n", "\n", "#"], "logprobs": [-2.2689971923828125, -0.05313916504383087, -0.40510162711143494, -0.00015186110977083445, -0.011389239691197872, -0.0826321393251419, -0.014303538016974926, -1.8663498163223267, -1.8128221035003662, -0.20662683248519897, -0.00019667598826345056, -0.024915864691138268, -0.00032205163734033704, -8.177422569133341e-05, -0.060858748853206635, -0.21707823872566223, -1.6008154153823853, -0.0001419681793777272, -0.6206099390983582, -0.656404972076416, -0.4019955098628998, -0.1262369155883789, -0.14538457989692688, -1.3202041387557983, -0.003810290014371276, -0.4333266615867615, -0.3039930760860443, -0.09724093228578568, -0.0004828002711292356, -0.0002674698771443218, -0.3403414189815521, -0.001441036001779139, -1.0045368671417236, -0.00018416139937471598, -0.002518816851079464, -0.05576164275407791, -0.05999084562063217, -0.06658880412578583, -0.031043505296111107, -0.019386107102036476, -0.00025876989820972085, -0.0016899126349017024, 0.0, -4.458328112377785e-05, 0.0, -2.145764938177308e-06, -0.0367778018116951, -0.41113489866256714, -0.24894265830516815, -0.11569453775882721, -0.013472587801516056, -0.002372190821915865, -0.699493944644928, -0.17339561879634857, -0.6463987827301025, -0.0005520250415429473, -0.034574493765830994, -0.0005665604257956147, -0.013406604528427124, -0.09028179198503494, -0.0027305721305310726, -1.613144040107727, -0.0016331442166119814, -0.0008180370787158608, -0.017234327271580696, -0.00024577934527769685, -0.0016398091102018952, -0.0002531684876885265, -8.487341256113723e-05, -0.0021491781808435917, -3.707340147229843e-05, -0.0013167529832571745, -0.026693999767303467, -0.00034850722295232117, -0.06101543828845024, -0.0017514378996565938, -0.00017331528943032026, -9.846202738117427e-05, -0.0025378421414643526, -0.01664418913424015, -2.2867066860198975, -0.002493488835170865, -0.08359246701002121, -0.04992140084505081, -0.0002348147245356813, -0.3043705224990845, -0.010219273157417774, -1.4685962200164795], "finish_reason": "stop"}], "metrics": {"energy": 381.59802482509605, "energy_per_token": 4.336341191194273, "time": 11.61817, "time_per_token": 0.13202465909090907}}
{"outputs": [{"text": "# Clean and remove duplicates and stopwords\n    text = text.replace('\\n', '').strip()\n    text = text.replace('  ', ' ')\n\n    # Split the text into words and remove duplicates and stopwords\n    words = text.split(' ')\n    words = [word for word in words if word not in STOPWORDS]\n    words = list(set(words))\n\n    # Generate n-grams\n    ngrams = [words[i:i + n] for i in range(len(words) - n + 1)]\n\n    # Count n-grams\n    ngram_counts = Counter(tuple(ngram) for ngram in ngrams)\n\n    return ngram_counts", "tokens": ["#", " Clean", " and", " remove", " dup", "licates", " and", " stop", "words", "\n", "    ", "text", " =", " text", ".", "replace", "('", "\\", "n", "'", ",", " '", "')", ".", "strip", "()", "\n", "    ", "text", " =", " text", ".", "replace", "('", "  ", "'", ",", " '", " '", ")", "\n", "\n", "    ", "#", " Split", " the", " text", " into", " words", " and", " remove", " dup", "licates", " and", " stop", "words", "\n", "    ", "words", " =", " text", ".", "split", "('", " '", ")", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "words", " =", " list", "(", "set", "(", "words", "))", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " [", "words", "[", "i", ":", "i", " +", " n", "]", " for", " i", " in", " range", "(", "len", "(", "words", ")", " -", " n", " +", " ", "1", ")]", "\n", "\n", "    ", "#", " Count", " n", "-", "grams", "\n", "    ", "ng", "ram", "_", "counts", " =", " Counter", "(", "tuple", "(", "ng", "ram", ")", " for", " n", "gram", " in", " n", "grams", ")", "\n", "\n", "    ", "return", " n", "gram", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.3499735891819, -3.0428500175476074, -2.436458110809326, -2.089254379272461, -2.072136640548706, -0.005048740655183792, -1.8808798789978027, -0.015630943700671196, -0.058047953993082047, -0.36240994930267334, -0.0033388365991413593, -0.6627146005630493, -0.07332532852888107, -1.8120989799499512, -0.003164761932566762, -2.5551390647888184, -0.5309675931930542, -0.8512324690818787, -0.03540662303566933, -0.00424389261752367, -0.00024256148026324809, -0.02956363558769226, -1.7642406225204468, -0.9288177490234375, -1.8186719417572021, -0.0711200162768364, -0.6598961353302002, -0.05166856572031975, -0.666126549243927, -0.08120540529489517, -2.1986236572265625, -0.012447762303054333, -1.170703649520874, -0.18741315603256226, -2.7512059211730957, -0.0006777135422453284, -0.0003156163729727268, -0.007818098179996014, -0.07298716902732849, -0.0004926898400299251, -0.3525141179561615, -1.9631482362747192, -0.0005629861843772233, -0.9828506112098694, -2.455918312072754, -0.7781907916069031, -0.12482228130102158, -0.036845821887254715, -0.3077208995819092, -1.7003275156021118, -0.18354472517967224, -1.1743041276931763, -0.0008438840159215033, -0.36366307735443115, -0.00852859579026699, -0.014282384887337685, -0.017855968326330185, -0.0034368515480309725, -0.20286066830158234, -0.021323006600141525, -1.5857255458831787, -0.0004847066884394735, -0.12949031591415405, -0.6820992827415466, -0.0015887507470324636, -0.00018618757894728333, -0.01129424013197422, -0.05205633491277695, -0.26220566034317017, -0.048035409301519394, -0.25979095697402954, -0.19762374460697174, -0.07726049423217773, -0.0008577005355618894, -7.617183291586116e-05, -0.00789734348654747, -0.004788360092788935, -0.06309136748313904, -0.12593910098075867, -3.58813522325363e-05, -0.005735251121222973, 0.0, -8.77341881277971e-05, 0.0, -4.160317621426657e-05, -0.36073970794677734, -0.020833004266023636, -0.2474917620420456, -0.15592536330223083, -0.013037556782364845, -0.32940801978111267, -0.00016532962035853416, -0.2930983304977417, -0.0027883481234312057, -0.008463112637400627, -0.006969072390347719, -0.017829736694693565, -0.0873575285077095, -0.0006236277404241264, -0.03217840939760208, -0.3357652425765991, -0.6404493451118469, -0.12640532851219177, -0.006997483782470226, -0.45034950971603394, -0.0011619728757068515, -0.033459022641181946, -0.0028330450877547264, -0.0027908445335924625, -1.1761854887008667, -1.1929270029067993, -0.0009675112669356167, -0.000834355247206986, -0.008753618225455284, -0.007078687660396099, -1.9197357892990112, -0.002948581939563155, -0.0007071378640830517, -0.0019227842567488551, -0.0003134713042527437, -0.0023444804828613997, -0.00018892886873800308, -7.1403817855753e-05, -0.02257097326219082, -1.3232143828645349e-05, -0.0008681819308549166, -0.012615637853741646, -0.0010124086402356625, -0.030504247173666954, -0.00291482568718493, -0.00028081765049137175, -0.00012706902634818107, -0.009987971745431423, -0.0013790155062451959, -0.16250285506248474, -0.00020621081057470292, -0.010225173085927963, -0.061293091624975204, -2.3310625553131104, -0.011559649370610714, -0.004755615256726742, -0.16775332391262054, -0.0006952252588234842, -0.18492580950260162, -0.31826263666152954, -0.0013269914779812098, -0.22074122726917267, -0.00024720950750634074, -0.01189237181097269, -0.05129774659872055, -0.02899092249572277, -0.0005968220066279173, -0.1232038363814354, -0.005223436746746302, -0.0004551566671580076, -0.0003219324571546167, -5.817244164063595e-05, -9.894321920000948e-06, -1.2159273865108844e-05, -0.0001497156627010554, -2.145764938177308e-06, -0.013174626976251602, -0.0028077249880880117, -0.04682077467441559, -0.00031549722189083695, -0.13070538640022278, -0.018428068608045578, -0.0008411445305682719, -8.940656698541716e-06, -5.8053239627042785e-05, -2.737633466720581, -2.682172998902388e-05, -5.8412379075889476e-06, -6.437280717364047e-06, -1.1324817933200393e-05, -0.10163792222738266], "finish_reason": "stop"}], "metrics": {"energy": 707.9389348621373, "energy_per_token": 4.022380311716689, "time": 20.597313, "time_per_token": 0.1170301875}}
{"outputs": [{"text": "# Remove punctuation and extra spaces\n    text = re.sub(r'[^\\w\\s]', '', text)\n    text = re.sub(r'\\s+', ' ', text).strip()\n\n    # Convert the text to lowercase\n    text = text.lower()\n\n    # Split the text into words\n    words = text.split()\n\n    # Remove duplicate words\n    words = list(set(words))\n\n    # Remove stopwords\n    words = [w for w in words if w not in STOPWORDS]\n\n    # Generate the n-grams\n    ngrams = [words[i:i+n] for i in range(len(words)-n+1)]\n\n    # Count the n-grams\n    return Counter(ngrams)", "tokens": ["#", " Remove", " punct", "uation", " and", " extra", " spaces", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " text", ")", ".", "strip", "()", "\n", "\n", "    ", "#", " Convert", " the", " text", " to", " lower", "case", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "    ", "#", " Split", " the", " text", " into", " words", "\n", "    ", "words", " =", " text", ".", "split", "()", "\n", "\n", "    ", "#", " Remove", " duplicate", " words", "\n", "    ", "words", " =", " list", "(", "set", "(", "words", "))", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "words", " =", " [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Generate", " the", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " [", "words", "[", "i", ":", "i", "+", "n", "]", " for", " i", " in", " range", "(", "len", "(", "words", ")-", "n", "+", "1", ")]", "\n", "\n", "    ", "#", " Count", " the", " n", "-", "grams", "\n", "    ", "return", " Counter", "(", "ng", "rams", ")", "\n", "\n", "if"], "logprobs": [-0.3499735891819, -0.8898080587387085, -1.4564430713653564, -0.025368422269821167, -0.5741568207740784, -3.7751028537750244, -0.2955533564090729, -0.36548182368278503, -0.0021190824918448925, -0.24885165691375732, -0.02386988140642643, -0.09517505019903183, -4.351044481154531e-05, -0.00027652730932459235, -0.0357045903801918, -0.006812915205955505, -0.10852431505918503, -0.014208933338522911, -0.021817784756422043, -0.0005994430393911898, -0.010633240453898907, -5.7338023907504976e-05, -0.01728646643459797, -0.00086198840290308, -3.099393507000059e-05, -0.34169846773147583, -0.00020001317898277193, -0.00465962802991271, -0.15740710496902466, -0.42831552028656006, -0.09201068431138992, -0.08973105996847153, -0.0010605193674564362, -0.3189787268638611, -4.768360213347478e-06, -2.8490614567999728e-05, -0.13647963106632233, -0.0003868784988299012, -0.005474811885505915, -0.07452503591775894, -0.8779793977737427, -1.4305012882687151e-05, -0.0033456087112426758, -1.2874520507466514e-05, -2.634490556374658e-05, -0.00013016807497479022, -0.002230776706710458, -2.5129528045654297, -0.3204193115234375, -0.00015436411194968969, -0.14050623774528503, -0.07730264216661453, -0.00044919890933670104, -0.013063207268714905, -0.8399443030357361, -1.6541402339935303, -0.043985702097415924, -0.04082447290420532, -0.10632237046957016, -0.026758182793855667, -1.1092276573181152, -0.0003238391946069896, -0.024041203781962395, -0.009101214818656445, -0.003343113698065281, -3.1709168979432434e-05, -0.0004714807728305459, -1.3232143828645349e-05, -0.0021738011855632067, -0.008957204408943653, -0.00040534863364882767, -0.010710375383496284, -1.3627252578735352, -0.0417294055223465, -0.006993458606302738, -0.004319266881793737, -0.14477096498012543, -0.12960289418697357, -0.00038366109947673976, -0.01897691935300827, -0.0014556775568053126, -0.26049134135246277, -2.5510462364763953e-05, -0.0005628670332953334, -0.02858402393758297, -0.0014882928226143122, -0.009311934933066368, -0.0002598424907773733, -0.0023788507096469402, -0.06512736529111862, -0.8010239601135254, -0.856250524520874, -0.489859938621521, -0.00040820849244482815, -0.22158163785934448, -0.013482702895998955, -0.1465844213962555, -3.9934315282152966e-05, -0.06666352599859238, -0.0011556621175259352, -0.002338652964681387, -0.02239823341369629, -0.002910784212872386, -0.009210478514432907, -0.00015186110977083445, -0.0009280903614126146, -0.021049438044428825, -0.007105675060302019, -0.0894198790192604, -0.08620856702327728, -0.0001599660754436627, -0.033740974962711334, -0.002298334613442421, -0.0036351096350699663, -1.8951021432876587, -0.0008463853155262768, -1.0490362910786644e-05, -4.172316494077677e-06, -7.83174327807501e-05, -7.64102369430475e-05, -0.009022182784974575, -0.012073296122252941, -1.0728830375228426e-06, -0.0005392765742726624, 0.0, -3.8742269680369645e-05, 0.0, -3.4570634852570947e-06, -0.014277567155659199, -0.0006050424999557436, -0.005764408502727747, -0.0002090712368953973, -0.004675883334130049, -0.21575884521007538, -1.1795064210891724, -0.07212906330823898, -0.032286908477544785, -0.0025324912276118994, -0.11321979761123657, -0.0004010588163509965, -0.014013701118528843, -0.001479484373703599, -0.0007463291985914111, -1.5205336809158325, -1.4449301958084106, -0.0002951186615973711, -0.0003846143954433501, -0.008016908541321754, -0.002054605633020401, -0.2180444300174713, -0.0007281036232598126, -0.00014184899919200689, -0.0010832638945430517, -9.357491217087954e-05, -0.0005200940649956465, -0.0001517419150331989, -5.6265202147187665e-05, -0.00893168430775404, -3.4570634852570947e-06, -0.0006709231529384851, -0.054620251059532166, -0.0008878341759555042, -0.0007969540893100202, -0.00010501786891836673, -0.004795834422111511, -0.0004295380203984678, -0.02101815491914749, -0.00011097769311163574, -0.0024069168139249086, -0.019631143659353256, -0.003270873799920082, -0.09734811633825302, -0.009891186840832233, -0.0003960540343541652, -0.0345090813934803, -0.0004543225804809481, -3.120720624923706, -0.029700079932808876, -0.05588655546307564, -2.1459784507751465, -3.6000557884108275e-05, -0.14521737396717072, -0.12161000072956085, -0.009406059980392456, -0.8272859454154968], "finish_reason": "stop"}], "metrics": {"energy": 749.6197371759416, "energy_per_token": 4.051998579329414, "time": 21.2604, "time_per_token": 0.11492108108108108}}
{"outputs": [{"text": "# Remove punctuation and make words lowercase\n    text = re.sub('[^A-Za-z ]+', '', text).lower()\n    words = text.split()\n\n    # Remove duplicate and stopwords\n    words = [word for word in words if word not in STOPWORDS and words.count(word) <= 1]\n\n    # Generate ngrams\n    ngrams = [(words[i], words[i+1]) for i in range(len(words)-1)]\n    ngrams = [ngram for ngram in ngrams if len(set(ngram)) == n]\n\n    # Count ngrams\n    ngram_counts = Counter(ngrams)\n\n    return ngram_counts", "tokens": ["#", " Remove", " punct", "uation", " and", " make", " words", " lower", "case", "\n", "    ", "text", " =", " re", ".", "sub", "('", "[", "^", "A", "-", "Z", "a", "-", "z", " ]", "+'", ",", " ''", ",", " text", ")", ".", "lower", "()", "\n", "    ", "words", " =", " text", ".", "split", "()", "\n", "\n", "    ", "#", " Remove", " duplicate", " and", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " words", ".", "count", "(", "word", ")", " <=", " ", "1", "]", "\n", "\n", "    ", "#", " Generate", " n", "grams", "\n", "    ", "ng", "rams", " =", " [(", "words", "[", "i", "]", ",", " words", "[", "i", "+", "1", "])", " for", " i", " in", " range", "(", "len", "(", "words", ")-", "1", ")]", "\n", "    ", "ng", "rams", " =", " [", "ng", "ram", " for", " n", "gram", " in", " n", "grams", " if", " len", "(", "set", "(", "ng", "ram", "))", " ==", " n", "]", "\n", "\n", "    ", "#", " Count", " n", "grams", "\n", "    ", "ng", "ram", "_", "counts", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "return", " n", "gram", "_", "counts", "\n", "\n", "def"], "logprobs": [-0.3499735891819, -0.8898080587387085, -1.4564430713653564, -0.025368422269821167, -0.5741568207740784, -2.504469156265259, -3.093967914581299, -0.02365952916443348, -0.04827738553285599, -0.05875637009739876, -0.00284576416015625, -0.3994764983654022, -0.02548905462026596, -0.1415070742368698, -5.364274329622276e-05, -0.0011049362365156412, -2.7554941177368164, -0.09316473454236984, -1.4036993980407715, -1.4010990858078003, -0.00011491115583339706, -0.0070573813281953335, -0.0035263041500002146, -1.3232143828645349e-05, -7.879423355916515e-05, -1.1048704385757446, -0.23390741646289825, -0.00017486473370809108, -0.28423309326171875, -0.00042524831951595843, -0.005409840028733015, -0.11819197237491608, -0.10130996257066727, -0.0021466801408678293, -5.447716102935374e-05, -0.027929024770855904, -1.5250868797302246, -1.0698102712631226, -0.010059728287160397, -0.7246628999710083, -0.0001902399235405028, -0.00793885625898838, -0.06601013243198395, -0.0254136323928833, -0.18331223726272583, -0.0008723505889065564, -0.012035135179758072, -0.0916956439614296, -0.6316826939582825, -0.6198384761810303, -0.008772643283009529, -0.05538230016827583, -0.25559744238853455, -0.00038532938924618065, -0.5046148300170898, -0.03933781385421753, -0.044055286794900894, -0.10263042896986008, -0.010268359445035458, -0.004819799214601517, -0.0001935771433636546, -0.005143979098647833, -0.005025493446737528, -0.043775543570518494, -0.05116002634167671, -2.777537883957848e-05, -0.006662062369287014, 0.0, -0.00012158608296886086, 0.0, -1.1920922133867862e-06, -0.7664321064949036, -0.20174230635166168, -0.008574928157031536, -0.0029958863742649555, -0.0004076126788277179, -0.00993426889181137, -0.0036013764329254627, -2.4727251529693604, -0.026340622454881668, -0.368460088968277, -0.037156227976083755, -0.0023092764895409346, -0.029266726225614548, -0.0003110878460574895, -0.028266428038477898, -0.26103442907333374, -0.30466610193252563, -2.0798046588897705, -0.2773885428905487, -0.0007780147134326398, -0.02731582149863243, -0.006216119974851608, -0.001529357978142798, -3.1496639251708984, -0.14881329238414764, -0.001884471857920289, -0.0055458261631429195, -0.11053166538476944, -0.0017417988274246454, -0.004171361681073904, -0.00031740395934320986, -0.013957040384411812, -0.4862385094165802, -0.4227922558784485, -0.01955048367381096, -0.0130006093531847, -0.000331704446580261, -0.0012561534531414509, -0.0004294188693165779, -9.7508447652217e-05, -0.006569810677319765, -2.992108420585282e-05, -0.0011651878012344241, -0.03944176062941551, -0.09637168794870377, -0.11290647089481354, -0.0026713658589869738, -1.8890657424926758, -0.8001480102539062, -0.5281446576118469, -0.5804641246795654, -0.8799862265586853, -0.42334434390068054, -0.0032544764690101147, -0.003570492845028639, -0.00034350217902101576, -0.00016175392374861985, -9.333651541965082e-05, -0.001957288011908531, -9.536738616588991e-07, -0.003894009394571185, -1.1464385986328125, -0.004763920325785875, -0.48489081859588623, -0.00382121535949409, -0.0029580905102193356, -0.0033516681287437677, -0.0017395378090441227, -0.06377765536308289, -1.8890310525894165, -0.03698943555355072, -0.06415684521198273, -0.060540471225976944, -0.00016950124700088054, -0.06305857747793198, -0.06940342485904694, -0.6965884566307068, -0.032989006489515305, -0.1278800368309021, -0.00037949037505313754, -0.33295926451683044, -0.6209901571273804, -0.001700980355963111, -0.35562407970428467, -0.0002388668799540028, -0.01833619549870491, -0.008933693170547485, -0.012359458021819592, -0.0007142852991819382, -8.654219709569588e-05, -0.0015814905054867268, -0.23433999717235565, -0.0003491030656732619, -0.10014155507087708, -0.027052124962210655, -0.0022031813859939575, -1.0013530300057027e-05, -5.411955135059543e-05, -0.27376970648765564, -0.011148659512400627, -1.9532057046890259], "finish_reason": "stop"}], "metrics": {"energy": 747.1244655599594, "energy_per_token": 4.3437468927904614, "time": 21.397009, "time_per_token": 0.12440121511627908}}
{"outputs": [{"text": "# Remove duplicate and stopwords from the text\n    text = re.sub(r'\\b(' + '|'.join(STOPWORDS) + r')\\b\\s*', '', text, flags=re.IGNORECASE)\n\n    # Generate the n-grams and count them\n    ngrams = Counter(ngrams(text.split(), n))\n\n    return ngrams", "tokens": ["#", " Remove", " duplicate", " and", " stop", "words", " from", " the", " text", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "b", "('", " +", " '", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "\\", "s", "*", "'", ",", " ''", ",", " text", ",", " flags", "=", "re", ".", "IGN", "ORE", "C", "ASE", ")", "\n", "\n", "    ", "#", " Generate", " the", " n", "-", "grams", " and", " count", " them", "\n", "    ", "ng", "rams", " =", " Counter", "(", "ng", "rams", "(", "text", ".", "split", "()", ",", " n", "))", "\n", "\n", "    ", "return", " n", "grams", "\n", "\n", "if"], "logprobs": [-0.3499735891819, -0.8898080587387085, -0.9788067936897278, -0.7297564148902893, -0.015340317040681839, -0.039626594632864, -0.3321916460990906, -0.20651453733444214, -0.1543569266796112, -0.29263636469841003, -0.004725835286080837, -0.8635704517364502, -0.1767093986272812, -0.9658158421516418, -8.237022848334163e-05, -0.007658051792532206, -0.03538361191749573, -0.012085545808076859, -0.4277345538139343, -0.2790588438510895, -1.3219966888427734, -0.005397508852183819, -0.19016483426094055, -0.0002840353990904987, -0.0005222387262620032, -3.421248038648628e-05, -1.490105023549404e-05, -0.023473352193832397, -0.019383184611797333, 0.0, -9.524368942948058e-05, 0.0, 0.0, -0.005148604512214661, -0.0002575780963525176, -0.0008680627797730267, -0.019522426649928093, -0.002628207439556718, -0.009355750866234303, -0.0004920940846204758, -0.041960567235946655, -0.0004017737810499966, -3.2066785934148356e-05, -0.11377488076686859, -0.00016425691137555987, -0.005925232544541359, -1.3804925680160522, -0.0020327160600572824, -0.0013750869547948241, -2.706014311115723e-05, -3.099436753473128e-06, -0.06700963526964188, -1.311301275563892e-06, -2.3841830625315197e-06, 0.0, -0.002565071452409029, -0.03326970711350441, -0.3872765004634857, -0.0006063529872335494, -0.004360453691333532, -0.34123969078063965, -1.3957566022872925, -0.4880017936229706, -0.022945141419768333, -0.0101179089397192, -1.9309910535812378, -0.13392731547355652, -0.575141429901123, -0.04550066962838173, -0.0017162130679935217, -0.563701331615448, -0.017981139943003654, -0.0041862004436552525, -0.9404217004776001, -0.05633016303181648, -1.4971394538879395, -0.8807323575019836, -0.14713384211063385, -0.10382688045501709, -0.05258941650390625, -0.03193354234099388, -0.01830470934510231, -5.757642793469131e-05, -0.0035195332020521164, -0.06855759769678116, -0.011967643164098263, -0.18397614359855652, -0.000647692708298564, -0.11190802603960037, -0.043695785105228424, -0.0017043125117197633, -0.2706458866596222, -0.011994028463959694, -0.9904005527496338], "finish_reason": "stop"}], "metrics": {"energy": 414.5703852643968, "energy_per_token": 4.410323247493583, "time": 13.265203, "time_per_token": 0.1411191808510638}}
{"outputs": [{"text": "# Remove duplicate words\n    text = re.sub(r'\\b(\\w+)\\b(?:.*\\1\\b)+', r'\\1', text, flags=re.DOTALL)\n\n    # Remove stopwords\n    text = ' '.join(word for word in text.split() if word.lower() not in STOPWORDS)\n\n    # Generate the count of n-grams\n    ngrams = Counter(tuple(word for word in nltk.word_tokenize(text)) for _ in range(n))\n\n    # Return the count of n-grams\n    return ngrams", "tokens": ["#", " Remove", " duplicate", " words", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "b", "(\\", "w", "+", ")\\", "b", "(", "?", ":", ".", "*\\", "1", "\\", "b", ")+", "'", ",", " r", "'\\", "1", "'", ",", " text", ",", " flags", "=", "re", ".", "D", "OT", "ALL", ")", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "text", " =", " '", " '", ".", "join", "(", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", ")", "\n", "\n", "    ", "#", " Generate", " the", " count", " of", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " Counter", "(", "tuple", "(", "word", " for", " word", " in", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "text", "))", " for", " _", " in", " range", "(", "n", "))", "\n", "\n", "    ", "#", " Return", " the", " count", " of", " n", "-", "grams", "\n", "    ", "return", " n", "grams", "\n", "\n", "if"], "logprobs": [-0.3499735891819, -0.8898080587387085, -0.9788067936897278, -1.0051641464233398, -1.1286544799804688, -0.0032170468475669622, -0.7196066975593567, -0.08545050770044327, -0.3707769215106964, -3.981510963058099e-05, -0.000936189026106149, -0.010951178148388863, -0.003933669533580542, -0.4648476243019104, -0.012808789499104023, -0.011300016194581985, -1.7046782886609435e-05, -0.06052756682038307, -0.07650246471166611, -0.24185772240161896, -0.29399579763412476, -0.006006286945194006, -0.9610930681228638, -0.2657882869243622, -0.03623208403587341, -0.20887908339500427, -0.0012669878778979182, -2.169585604860913e-05, -0.002202943665906787, -0.00029905137489549816, -0.00013529339048545808, -0.0001770101225702092, -9.214453893946484e-05, -0.00018034738604910672, -0.0005720409681089222, -0.00012027494085486978, -0.0021928329952061176, -2.530163049697876, -0.0069046709686517715, -0.002031407319009304, -0.0005129451747052372, -3.6954811548639555e-06, -0.7805195450782776, -0.0005577438860200346, -2.0861407392658293e-05, -0.01475998479872942, -0.019189544022083282, -0.21594272553920746, -0.0005498804384842515, -0.0065473089925944805, -0.19087907671928406, -0.040990401059389114, -0.10098037868738174, -0.12006521970033646, -0.0006559127941727638, -0.6198292374610901, -0.07772725820541382, -0.38296568393707275, -0.00010942813969450071, -0.00011944057769142091, -0.00015233787416946143, -0.3352433443069458, -0.3043454587459564, -0.0018939905567094684, -2.7179348762729205e-05, -3.45700973412022e-05, -0.05712761729955673, -9.989239333663136e-05, -0.009495570324361324, -0.016307063400745392, -0.008343364112079144, -0.003257565898820758, -1.9486576318740845, -0.012663193978369236, -0.0007253637886606157, -0.0039242892526090145, -5.6622808187967166e-05, -0.0013261580606922507, 0.0, -9.095255518332124e-05, -1.1920928244535389e-07, -8.940656698541716e-06, -0.009449871256947517, -0.0016751555958762765, -0.010285349562764168, -0.0003793711948674172, -0.025317516177892685, -0.34538593888282776, -2.107250452041626, -0.9157794117927551, -0.009110191836953163, -0.08813663572072983, -0.04254555329680443, -0.0014324652729555964, -0.2277992218732834, -0.001353063271380961, -0.32562851905822754, -0.03132636845111847, -0.00450536422431469, -0.4663677215576172, -0.17470258474349976, -0.8124397993087769, -0.0008885487914085388, -0.8387234807014465, -1.9548890590667725, -0.0024120304733514786, -0.0006183857913129032, -1.1231706142425537, -0.021769380196928978, -0.00014518637908622622, -0.0001971527235582471, -0.0831984207034111, -0.004548916593194008, -0.00037067217635922134, -7.152555099310121e-07, -0.02380329929292202, -0.47633516788482666, -2.284874439239502, -1.6284562349319458, -0.6216815710067749, -0.013453299179673195, -0.022739605978131294, -0.0002351722796447575, -0.020176177844405174, -0.03207162395119667, -0.010568720288574696, -0.11796591430902481, -0.0007475204183720052, -2.1199324131011963, -0.7291475534439087, -0.05275418981909752, -0.34195610880851746, -0.10124478489160538, -0.13581620156764984, -0.0028291221242398024, -0.00023850933939684182, -0.05798833444714546, -0.001258891774341464, -0.006666680797934532, -0.10500237345695496, -0.00023541064001619816, -0.2143155336380005, -0.01318639237433672, -0.9272403717041016], "finish_reason": "stop"}], "metrics": {"energy": 557.0738447437286, "energy_per_token": 3.868568366275893, "time": 14.05082, "time_per_token": 0.09757513888888888}}
{"outputs": [{"text": "# Convert the text to lowercase and remove special characters and punctuation\n    text = re.sub(r\"[^a-zA-Z0-9]\", \" \", text.lower())\n\n    # Tokenize the text into words\n    words = [word for word in re.split(r\"\\s+\", text) if word not in STOPWORDS]\n\n    # Generate the n-grams\n    ngrams = [tuple(words[i:i + n]) for i in range(len(words) - n + 1) if len(words) >= n]\n\n    # Count the n-grams\n    ngrams_count = Counter(ngrams)\n\n    return ngrams_count", "tokens": ["#", " Convert", " the", " text", " to", " lower", "case", " and", " remove", " special", " characters", " and", " punct", "uation", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]\"", ",", " \"", " \"", ",", " text", ".", "lower", "())", "\n", "\n", "    ", "#", " Token", "ize", " the", " text", " into", " words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " re", ".", "split", "(", "r", "\"", "\\", "s", "+", "\"", ",", " text", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Generate", " the", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " [", "tuple", "(", "words", "[", "i", ":", "i", " +", " n", "])", " for", " i", " in", " range", "(", "len", "(", "words", ")", " -", " n", " +", " ", "1", ")", " if", " len", "(", "words", ")", " >=", " n", "]", "\n", "\n", "    ", "#", " Count", " the", " n", "-", "grams", "\n", "    ", "ng", "rams", "_", "count", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "return", " n", "grams", "_", "count", "\n", "\n", "if"], "logprobs": [-0.3499735891819, -2.384192943572998, -0.8793280720710754, -0.12256823480129242, -0.05383016914129257, -0.020161807537078857, -0.04488937184214592, -0.5186102986335754, -0.3602844476699829, -2.0002834796905518, -0.012224866077303886, -1.3930714130401611, -2.391913414001465, -0.0731736570596695, -0.19295720756053925, -0.00542288227006793, -0.16514356434345245, -0.019328346475958824, -0.16887247562408447, -3.93382906622719e-05, -0.000377583724912256, -0.12504079937934875, -0.021241551265120506, -2.145695447921753, -0.07937347888946533, -0.12813208997249603, -0.04743077605962753, -8.34461570775602e-06, -2.539125671319198e-05, -0.09605368226766586, -1.8596476365928538e-05, -0.0014573440421372652, -0.2956596314907074, -0.00022349244682118297, -6.770858453819528e-05, -1.14827299118042, -0.00015507926582358778, -0.02414454147219658, -0.0027684953529387712, -5.543078441405669e-05, -0.013257448561489582, -0.31159326434135437, -0.008829480037093163, -0.015559233725070953, -0.05073859542608261, -0.15922048687934875, -0.0006375664379447699, -0.008638513274490833, -1.9957282543182373, -0.00599017133936286, -0.037609249353408813, -0.032609693706035614, -0.38080552220344543, -0.21896010637283325, -0.216336190700531, -0.0007979070069268346, -0.14494134485721588, -0.0024307011626660824, -1.82747483253479, -0.1892368048429489, -0.025739455595612526, -0.0012507957872003317, -0.00024053541710600257, -2.601123094558716, -6.961580220377073e-05, -0.11788390576839447, -0.06709714233875275, -0.11189459264278412, -0.0445038303732872, -0.012528290040791035, -0.1720115691423416, -0.0164966881275177, -0.002805228577926755, -5.411955135059543e-05, -0.0023689798545092344, -0.04570351541042328, -0.02113032527267933, -0.07238923758268356, -0.29529067873954773, -0.00012396997772157192, -0.004383360501378775, -1.1920928244535389e-07, -1.5616295058862306e-05, 0.0, -2.3841855067985307e-07, -0.17979863286018372, -0.013183451257646084, -0.04327279329299927, -0.0004563482361845672, -0.011030882596969604, -0.5388192534446716, -0.7056042551994324, -0.12695062160491943, -0.0265530813485384, -0.004019041080027819, -0.6138349771499634, -0.001379253575578332, -0.0222396869212389, -0.0032396235037595034, -0.0023657686542719603, -0.9284614324569702, -0.2217462956905365, -0.0015774437924847007, -0.007073952816426754, -0.00038187362952157855, -0.0036618339363485575, -0.08882733434438705, -0.006576442625373602, -1.5066126585006714, -0.0022520674392580986, -0.0011381583753973246, -0.0018029639031738043, -0.0001823735801735893, -0.001016934053041041, -0.00016211149340961128, -7.10462118149735e-05, -0.014722866006195545, -1.8954096958623268e-05, -0.00030727434204891324, -0.008736364543437958, -0.0006308949086815119, -0.036078132688999176, -0.0023155799135565758, -0.0001538873475510627, -0.0002379134384682402, -2.773059606552124, -0.07394805550575256, -0.29553472995758057, -0.01648777723312378, -0.21986153721809387, -2.431182861328125, -0.5009987354278564, -0.0962098240852356, -0.02628988027572632, -0.003254238748922944, -0.0387907437980175, -0.000271521887043491, -0.02236582711338997, -0.06572151184082031, -0.01034693792462349, -0.5102697610855103, -0.023113826289772987, -0.005136863328516483, -0.339547336101532, -0.0010876698652282357, -0.40803924202919006, -1.3146425485610962, -0.08619271218776703, -0.4651624858379364, -0.001440678839571774, -0.021819300949573517, -0.004721089266240597, -0.0017283515771850944, -5.483612312673358e-06, -0.0001479277852922678, -0.002535345032811165, -0.045100320130586624, -0.0003589939442463219, -0.27523088455200195, -0.03786271810531616, -2.0503786799963564e-05, -0.003631902625784278, -7.056941103655845e-05, -0.24463601410388947, -0.010984075255692005, -0.8775903582572937], "finish_reason": "stop"}], "metrics": {"energy": 695.0920579738618, "energy_per_token": 4.187301554059408, "time": 19.946009, "time_per_token": 0.12015668072289157}}
{"outputs": [{"text": "# Convert the text to lowercase\n    text = text.lower()\n\n    # Remove special characters and digits\n    text = re.sub(r'[^a-zA-Z\\s]', '', text)\n\n    # Tokenize the text into words\n    words = nltk.word_tokenize(text)\n\n    # Remove duplicate words\n    words = list(set(words))\n\n    # Remove stopwords\n    words = [word for word in words if word not in STOPWORDS]\n\n    # Generate n-grams\n    ngrams = nltk.ngrams(words, n)\n\n    # Count n-grams\n    ngram_counts = Counter(ngrams)\n\n    return ngram_counts", "tokens": ["#", " Convert", " the", " text", " to", " lower", "case", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " special", " characters", " and", " digits", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Token", "ize", " the", " text", " into", " words", "\n", "    ", "words", " =", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "text", ")", "\n", "\n", "    ", "#", " Remove", " duplicate", " words", "\n", "    ", "words", " =", " list", "(", "set", "(", "words", "))", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " n", "lt", "k", ".", "ng", "rams", "(", "words", ",", " n", ")", "\n", "\n", "    ", "#", " Count", " n", "-", "grams", "\n", "    ", "ng", "ram", "_", "counts", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "return", " n", "gram", "_", "counts", "\n", "\n", "if"], "logprobs": [-0.3499735891819, -2.384192943572998, -0.8793280720710754, -0.12256823480129242, -0.05383016914129257, -0.020161807537078857, -0.04488937184214592, -1.221498727798462, -0.0025894464924931526, -0.09936462342739105, -0.02533634565770626, -0.03594888001680374, -0.0001714082609396428, -0.003385053249076009, -0.0002674698771443218, -0.008412283845245838, -0.22889944911003113, -0.0006959400488995016, -0.0037401027511805296, -0.2771880626678467, -2.3833389282226562, -0.010296676307916641, -0.7933812737464905, -1.4146828651428223, -0.39722704887390137, -0.0014424644177779555, -0.1342773735523224, -0.008258006535470486, -0.015537520870566368, -3.302042750874534e-05, -0.00026723151677288115, -0.26540878415107727, -0.024093572050333023, -0.3366880416870117, -0.01812233403325081, -0.32746562361717224, -0.012137130834162235, -1.7881377516459906e-06, -1.823885577323381e-05, -1.0952084064483643, -2.2172682292875834e-05, -0.000491855782456696, -0.37266290187835693, -0.0017610769718885422, -0.10185812413692474, -0.07025620341300964, -4.482168878894299e-05, -0.10754086077213287, -0.00013731967192143202, -0.004835577681660652, -0.007055605761706829, -0.01563951186835766, -0.14865200221538544, -0.00033885458833537996, -0.003953499253839254, -1.4189659357070923, -0.011952684260904789, -0.040585264563560486, -0.020464586094021797, -0.2006242573261261, -0.10465070605278015, -0.0714888870716095, -0.0004676678800024092, -0.12907706201076508, -0.0013942531077191234, -0.9792630672454834, -0.00013505500101018697, -3.659658250398934e-05, -4.565611743601039e-05, -0.0751969963312149, -0.0015811334596946836, -3.290122185717337e-05, -8.344646857949556e-07, -0.00046361665590666234, -0.0007758706342428923, -0.005553887225687504, -0.00045253525604493916, -0.01659424416720867, -0.00032729512895457447, -0.0026032389141619205, -0.0769733339548111, -1.1448253393173218, -0.6333017349243164, -0.5207661986351013, -0.0005036516231484711, -0.3403894305229187, -0.022780273109674454, -0.20673957467079163, -7.521823135903105e-05, -0.07779938727617264, -0.006424843333661556, -0.014431740157306194, -0.013145449571311474, -0.004293628502637148, -0.006682311650365591, -0.00012611546844709665, -0.00084436044562608, -0.037699371576309204, -0.007002928759902716, -0.10952315479516983, -0.07986809313297272, -0.00016366096679121256, -0.0491020567715168, -0.004806630779057741, -0.002769803162664175, -0.15585650503635406, -0.0009991897968575358, -9.775113539944869e-06, -8.821448318485636e-06, -0.00010096516780322418, -0.00042524831951595843, -0.005734302569180727, -0.01649821363389492, -1.9073468138230965e-06, -0.0007848043460398912, 0.0, -0.0001954841281985864, 0.0, 0.0, -0.015676947310566902, -0.0003980797773692757, -0.0071678152307868, -0.00018225439998786896, -0.003173793200403452, -0.18114133179187775, -0.3071470856666565, -0.09396059811115265, -0.0026043090038001537, -0.2067151516675949, -0.00046921687317080796, -0.016230005770921707, -0.0022612258326262236, -0.001158043509349227, -1.451268196105957, -0.0021034989040344954, -2.658331868587993e-05, -1.2159273865108844e-05, -0.03483368083834648, -2.3007127310847864e-05, -0.0003389737685211003, -0.0009999042376875877, -0.00016378014697693288, -0.0036314274184405804, -0.01808803156018257, -0.0007840896723791957, -0.040619146078825, -0.00011491115583339706, -0.002977345371618867, -0.024372708052396774, -2.958937168121338, -0.005561830010265112, -0.016556020826101303, -0.13357368111610413, -0.00044526674901135266, -0.22033265233039856, -0.17293775081634521, -0.00019798702851403505, -0.19859856367111206, -7.557583012385294e-05, -0.003661477705463767, -0.0014831743901595473, -0.005702181253582239, -0.0001722425949992612, -0.00011646069469861686, -0.0003810394846368581, -0.009423301555216312, -0.0001746263587847352, -0.1608957052230835, -0.024053074419498444, -0.0002536452084314078, -1.7762025890988298e-05, -3.111314072157256e-05, -0.22192229330539703, -0.008099330589175224, -0.9411057829856873], "finish_reason": "stop"}], "metrics": {"energy": 619.756054016113, "energy_per_token": 3.54146316580636, "time": 15.919002, "time_per_token": 0.09096572571428573}}
{"outputs": [{"text": "# remove duplicate\n    words = re.findall(r'\\w+', text.lower())\n    unique_words = set(words)\n\n    # remove stopwords\n    filtered_words = [word for word in unique_words if word not in STOPWORDS]\n\n    # generate ngrams\n    ngrams = zip(*[filtered_words[i:] for i in range(n)])\n\n    # count the ngrams\n    ngram_counts = Counter(ngrams)\n\n    return ngram_counts", "tokens": ["#", " remove", " duplicate", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n", "    ", "unique", "_", "words", " =", " set", "(", "words", ")", "\n", "\n", "    ", "#", " remove", " stop", "words", "\n", "    ", "filtered", "_", "words", " =", " [", "word", " for", " word", " in", " unique", "_", "words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " generate", " n", "grams", "\n", "    ", "ng", "rams", " =", " zip", "(*", "[", "filtered", "_", "words", "[", "i", ":]", " for", " i", " in", " range", "(", "n", ")]", ")", "\n", "\n", "    ", "#", " count", " the", " n", "grams", "\n", "    ", "ng", "ram", "_", "counts", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "return", " n", "gram", "_", "counts", "\n", "\n", "#"], "logprobs": [-0.3499735891819, -3.1275362968444824, -0.9696170091629028, -2.9842941761016846, -0.013217098079621792, -2.53822922706604, -0.03793766722083092, -0.6929528117179871, -7.271502545336261e-05, -0.2134448140859604, -3.182837463100441e-05, -0.01113109476864338, -0.0025450955145061016, -0.04326331615447998, -0.033071815967559814, -0.01213665958493948, -7.092700980138034e-05, -0.018010761588811874, -0.6698417067527771, -0.0016912217251956463, -0.014386971481144428, -0.02045629359781742, -0.3140932321548462, -2.075960397720337, -0.03847683221101761, -0.05742109566926956, -0.004402113147079945, -0.4085726737976074, -0.01026847679167986, -0.023531224578619003, -0.0009956170106306672, -0.027077069506049156, -0.452384352684021, -0.001872930210083723, -0.03377647325396538, -0.1370963752269745, -0.025064336135983467, -0.18597543239593506, -0.029895860701799393, -0.002094101160764694, -0.6230558753013611, -0.0163410734385252, -0.07672495394945145, -0.0016568278660997748, -0.04971509426832199, -0.09214702248573303, -0.0034566910471767187, -3.480850500636734e-05, -3.0517112463712692e-05, -0.05427559092640877, -3.0517112463712692e-05, -5.94836674281396e-05, -0.00194193993229419, -0.0018229547422379255, -0.012616344727575779, -1.3470558769768104e-05, -0.0027673065196722746, 0.0, -0.00017569905321579427, 0.0, -3.862306402879767e-05, -0.013295798562467098, -0.0016971721779555082, -0.03799424692988396, -0.0007124984404072165, -0.06462596356868744, -0.4569598436355591, -0.2307281792163849, -1.7553720474243164, -0.07893998175859451, -0.003013238776475191, -0.03422676771879196, -0.008089161477982998, -0.009353270754218102, -1.060297966003418, -0.000376034586224705, -0.17437110841274261, -0.003008247120305896, -3.93382906622719e-05, -3.516612196108326e-05, -8.49926145747304e-05, -0.0007123793475329876, -9.035655966727063e-05, -0.002683255122974515, -0.00011991735664196312, -3.313963316031732e-05, -0.0002992897352669388, -7.795983401592821e-05, -0.016623085364699364, -0.0003955773718189448, -0.00014041867689229548, -0.007923126220703125, -0.30316510796546936, -0.0003511289251036942, -0.030689118430018425, -0.09625638276338577, -2.032102108001709, -0.18699043989181519, -0.023221570998430252, -0.033532921224832535, -0.0014986485475674272, -0.17944063246250153, -0.27734094858169556, -0.0005075835506431758, -0.3028273582458496, -0.00023934361524879932, -0.010479423217475414, -0.0023761154152452946, -0.002114086179062724, -6.079655122448457e-06, -0.0001311216183239594, -0.0019458661554381251, -0.09104273468255997, -0.0003325386205688119, -0.06988631933927536, -0.028326109051704407, -0.0006467396160587668, -1.537788011773955e-05, -5.638440416078083e-05, -0.2646600306034088, -0.010612835176289082, -1.5444844961166382], "finish_reason": "stop"}], "metrics": {"energy": 583.292779779434, "energy_per_token": 4.7810883588478195, "time": 17.16177, "time_per_token": 0.14067024590163935}}
{"outputs": [{"text": "# Remove special characters and convert to lowercase\n    text = re.sub('[^\\w ]', ' ', text).lower()\n    # Split text into words and remove duplicate and stopwords\n    words = list(filter(lambda w: w not in STOPWORDS, text.split()))\n    # Generate n-grams using zip\n    ngrams = Counter(zip(*[words[i:] for i in range(n)]))\n    return ngrams", "tokens": ["#", " Remove", " special", " characters", " and", " convert", " to", " lower", "case", "\n", "    ", "text", " =", " re", ".", "sub", "('", "[", "^\\", "w", " ]", "'", ",", " '", " '", ",", " text", ")", ".", "lower", "()", "\n", "    ", "#", " Split", " text", " into", " words", " and", " remove", " duplicate", " and", " stop", "words", "\n", "    ", "words", " =", " list", "(", "filter", "(", "lambda", " w", ":", " w", " not", " in", " ST", "OP", "W", "OR", "DS", ",", " text", ".", "split", "()))", "\n", "    ", "#", " Generate", " n", "-", "grams", " using", " zip", "\n", "    ", "ng", "rams", " =", " Counter", "(", "zip", "(*", "[", "words", "[", "i", ":]", " for", " i", " in", " range", "(", "n", ")]", "))", "\n", "    ", "return", " n", "grams", "\n", "\n", "if"], "logprobs": [-0.3499735891819, -0.8898080587387085, -3.139167070388794, -0.04416661337018013, -0.5093441605567932, -1.8825441598892212, -0.25322720408439636, -0.00834301020950079, -0.07556381076574326, -0.04344721511006355, -0.0028921226039528847, -0.33666643500328064, -0.020644666627049446, -0.03241097927093506, -2.884823152271565e-05, -0.0004605186404660344, -1.9215930700302124, -0.024036316201090813, -1.5200591087341309, -0.012178231962025166, -1.6225296258926392, -0.08961433917284012, -4.792098479811102e-05, -1.7460410594940186, -0.0022590849548578262, -0.00011443436960689723, -0.005284033250063658, -0.2888070046901703, -0.1271171271800995, -0.0095830662176013, -5.3881147323409095e-05, -0.06527870148420334, -1.7588218450546265, -0.31686320900917053, -1.5770668983459473, -1.6198244094848633, -0.022410355508327484, -0.21949884295463562, -2.088469982147217, -0.14878329634666443, -1.3211116790771484, -1.0086172819137573, -0.007660536095499992, -0.04569212719798088, -0.04107232019305229, -0.0017939202953130007, -0.08314631134271622, -0.006123234983533621, -2.5059375762939453, -0.009456129744648933, -1.1818568706512451, -0.0015022194711491466, -0.007192433346062899, -0.7918115258216858, -0.005164496600627899, -0.040027305483818054, -0.043173469603061676, -1.7881233361549675e-05, -0.003975347150117159, 0.0, -3.2543604902457446e-05, -3.933898824470816e-06, -9.536738616588991e-07, -0.45336487889289856, -1.8571884632110596, -0.0009752523037604988, -0.0028832077514380217, -0.08239416033029556, -0.007701348513364792, -0.17288079857826233, -0.20368951559066772, -0.3388069272041321, -0.31178730726242065, -0.08740395307540894, -0.008571973070502281, -2.2192063331604004, -0.4663526117801666, -1.2905001640319824, -0.0005395148764364421, -0.0197749100625515, -0.001970970071852207, -0.003071949351578951, -3.1471335887908936, -0.07472141087055206, -0.027644965797662735, -0.0006404255982488394, -0.014520919881761074, -0.0012737740762531757, -0.002308325143530965, -0.005203869193792343, -0.00015627116954419762, -0.00025245340657420456, -3.3854863431770355e-05, -3.58813522325363e-05, -0.0004351384413894266, -1.8358061424805783e-05, -0.008126646280288696, -0.0005881248507648706, -0.00033909291960299015, -0.003865747479721904, -0.14919628202915192, -0.30893057584762573, -0.02219410054385662, -0.0002811751910485327, -0.27812546491622925, -0.010825831443071365, -0.8432005047798157], "finish_reason": "stop"}], "metrics": {"energy": 456.17866537952426, "energy_per_token": 4.26335201289275, "time": 13.681421, "time_per_token": 0.1278637476635514}}
{"outputs": [{"text": "# Clean and prepare the text\n    cleaned_text = re.sub(r'[^\\w\\s]', '', text.lower())\n    tokens = cleaned_text.split()\n    unique_tokens = set(tokens)\n    filtered_tokens = [word for word in tokens if word not in STOPWORDS and word in unique_tokens]\n\n    # Generate ngrams\n    ngrams = zip(*(filtered_tokens[i:] for i in range(n)))\n\n    # Count ngrams\n    ngram_count = Counter(ngrams)\n\n    return ngram_count", "tokens": ["#", " Clean", " and", " prepare", " the", " text", "\n", "    ", "cleaned", "_", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ".", "lower", "())", "\n", "    ", "tokens", " =", " cleaned", "_", "text", ".", "split", "()", "\n", "    ", "unique", "_", "tokens", " =", " set", "(", "tokens", ")", "\n", "    ", "filtered", "_", "tokens", " =", " [", "word", " for", " word", " in", " tokens", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " word", " in", " unique", "_", "tokens", "]", "\n", "\n", "    ", "#", " Generate", " n", "grams", "\n", "    ", "ng", "rams", " =", " zip", "(*", "(", "filtered", "_", "tokens", "[", "i", ":]", " for", " i", " in", " range", "(", "n", ")))", "\n", "\n", "    ", "#", " Count", " n", "grams", "\n", "    ", "ng", "ram", "_", "count", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "return", " n", "gram", "_", "count", "\n", "\n", "if"], "logprobs": [-0.3499735891819, -3.0428500175476074, -2.436458110809326, -3.6775379180908203, -0.15514405071735382, -0.13731244206428528, -0.46015775203704834, -0.0032303552143275738, -2.0672008991241455, -0.04513382166624069, -0.03946307674050331, -0.0016415942227467895, -0.36724621057510376, -0.00012694983161054552, -0.008268174715340137, -0.06298582255840302, -0.02975909598171711, -0.17038564383983612, -0.019537391141057014, -0.06983952224254608, -0.0009968079393729568, -0.04453142359852791, -0.00012444675667211413, -0.016939830034971237, -0.0009128456003963947, -3.4450891689630225e-05, -0.10267851501703262, -0.00010609064338495955, -0.0076871528290212154, -0.27836599946022034, -0.0065023042261600494, -0.014932992868125439, -0.5277249217033386, -0.1354295015335083, -2.3960959911346436, -0.0013663965510204434, -2.142486572265625, -2.4914430468925275e-05, -2.169585604860913e-05, -0.00023183519078884274, -0.015965834259986877, -0.01652834750711918, -0.010266470722854137, -0.2983287572860718, -1.1896114349365234, -0.003603514516726136, -0.11482864618301392, -0.002616198966279626, -1.406716227531433, -0.00415913388133049, -0.03255961462855339, -0.0012661544606089592, -0.10556524991989136, -0.7672314643859863, -0.7408720254898071, -0.00573489535599947, -0.06279797852039337, -0.00025412190007045865, -0.019174810498952866, -1.4525213241577148, -0.004704478662461042, -3.564294092939235e-05, -2.90866428258596e-05, -2.4989359378814697, -0.0040708063170313835, -0.024724571034312248, -0.14946046471595764, -1.6569954823353328e-05, -0.02692761830985546, 0.0, -3.480850500636734e-05, 0.0, -3.576272320060525e-06, -0.5244720578193665, -0.02115938812494278, -0.1450880765914917, -0.0006121906917542219, -2.0265558760002023e-06, -1.0132738680113107e-05, -0.09525839984416962, -0.008978825062513351, -0.19173845648765564, -0.000635183765552938, -0.06614124774932861, -0.3921084702014923, -0.34059661626815796, -2.241816759109497, -0.2450762838125229, -0.000507464399561286, -0.012386303395032883, -0.008638513274490833, -0.005164852365851402, -0.9018307328224182, -0.0002261144545627758, -1.1464378833770752, -0.003212888026610017, -0.00019751029321923852, -6.425174069590867e-05, -0.00011181206355104223, -0.00998620130121708, -0.00010322991875000298, -0.0009010545909404755, -3.564294092939235e-05, -2.3007127310847864e-05, -0.00015639036428183317, -3.373566141817719e-05, -0.03257369250059128, -0.0010883843060582876, -0.012633177451789379, -0.3471510708332062, -0.00016807096835691482, -0.03015071153640747, -0.046544305980205536, -1.2014029026031494, -0.04608449712395668, -0.19805264472961426, -0.00036530973738990724, -0.09556787461042404, -0.10726954787969589, -0.0002300474588992074, -1.2928446531295776, -0.0019857229199260473, -0.010220099240541458, -0.009765825234353542, -0.0025541323702782393, -2.2291887944447808e-05, -5.209310256759636e-05, -0.0014055621577426791, -0.04523010179400444, -0.0001752223033690825, -0.05507321655750275, -0.08546528220176697, -0.0002889215829782188, -1.3708974620385561e-05, -1.7046782886609435e-05, -0.22996124625205994, -0.01002255268394947, -0.9657411575317383], "finish_reason": "stop"}], "metrics": {"energy": 553.9897520198824, "energy_per_token": 4.014418492897699, "time": 16.023403, "time_per_token": 0.11611161594202897}}
{"outputs": [{"text": "# Remove stopwords and duplicate words from the text\n    tokens = [token for token in text.lower().split() if token not in STOPWORDS and text.count(token) == 1]\n\n    # Generate the n-grams\n    ngrams = []\n    for i in range(len(tokens) - n + 1):\n        ngrams.append(tuple(tokens[i:i+n]))\n\n    # Count the n-grams\n    ngram_counts = Counter(ngrams)\n\n    # Return the count of the n-grams\n    return ngram_counts", "tokens": ["#", " Remove", " stop", "words", " and", " duplicate", " words", " from", " the", " text", "\n", "    ", "tokens", " =", " [", "token", " for", " token", " in", " text", ".", "lower", "()", ".", "split", "()", " if", " token", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " text", ".", "count", "(", "token", ")", " ==", " ", "1", "]", "\n", "\n", "    ", "#", " Generate", " the", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "tokens", ")", " -", " n", " +", " ", "1", "):", "\n", "        ", "ng", "rams", ".", "append", "(", "tuple", "(", "tokens", "[", "i", ":", "i", "+", "n", "]))", "\n", "\n", "    ", "#", " Count", " the", " n", "-", "grams", "\n", "    ", "ng", "ram", "_", "counts", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "#", " Return", " the", " count", " of", " the", " n", "-", "grams", "\n", "    ", "return", " n", "gram", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.3499735891819, -0.8898080587387085, -2.6290409564971924, -0.12460034340620041, -0.4045443832874298, -0.8279145359992981, -0.13334491848945618, -1.2588430643081665, -0.13830754160881042, -0.17998623847961426, -0.14761796593666077, -0.004710648208856583, -3.263143539428711, -0.007060221862047911, -0.6560907959938049, -1.447695016860962, -0.09787403047084808, -0.0012061471352353692, -0.00033456450910307467, -0.42734479904174805, -0.012313300743699074, -1.8820593357086182, -9.119095193454996e-05, -0.002303210785612464, -0.04343591630458832, -0.1084909439086914, -0.07730143517255783, -0.00886185560375452, -0.0638071820139885, -0.00015400654228869826, -0.0016191004542633891, -3.576278118089249e-07, -0.00010513706365600228, 0.0, -1.1920928244535389e-07, -0.554777979850769, -2.3184971809387207, -0.05704193189740181, -0.2719949185848236, -0.0003759154351428151, -0.011405267752707005, -0.005486905109137297, -0.2923804819583893, -0.0007194076315499842, -0.0007267932523973286, -0.00964115560054779, -0.002430344233289361, -0.25113222002983093, -0.0008262557676061988, -0.015550666488707066, -0.25039607286453247, -1.1745951175689697, -0.3997611701488495, -0.021067529916763306, -0.016492819413542747, -1.1184558868408203, -0.0015812524361535907, -0.023195013403892517, -0.005050994455814362, -0.002679926110431552, -3.4638640880584717, -0.004783140029758215, -0.007785215973854065, -0.018602432683110237, -0.009868170134723186, -0.00126151111908257, -0.00010108436981681734, -0.00025090406415984035, -0.010772762820124626, -2.682172998902388e-05, -0.0023529245518147945, -0.5058701634407043, -0.0004967409186065197, -0.0601993054151535, -0.004704715684056282, -0.0004755319678224623, -6.210611172718927e-05, -8.439661905867979e-05, -0.0009591746493242681, -0.0030906074680387974, -0.00891904253512621, -0.2664434015750885, -0.0038993528578430414, -0.002073521027341485, -0.017563292756676674, -0.013169333338737488, -0.002291436307132244, -0.0011455409694463015, -7.045020902296528e-05, -0.0002637753786984831, -0.025185123085975647, -0.004998923745006323, -0.2490169107913971, -0.0004673104267567396, -0.0013085383689031005, -0.0024873053189367056, -0.05178765207529068, -0.0006848612101748586, -0.03127356991171837, -0.042482487857341766, -0.014704306609928608, -0.22415345907211304, -0.020408404991030693, -0.001800346071831882, -0.23850612342357635, -0.000726316764485091, -0.5652174949645996, -0.22916282713413239, -0.0010886224918067455, -0.3147345185279846, -0.00024732868769206107, -0.013573025353252888, -0.011585456319153309, -0.0006094505661167204, -8.904537389753386e-05, -0.00012635385792236775, -0.0010425376240164042, -0.10692853480577469, -0.0003047717036679387, -2.172981023788452, -0.361846923828125, -0.0346919447183609, -0.651504635810852, -0.09420333057641983, -0.42447125911712646, -0.018613314256072044, -0.0018541302997618914, -0.0004107108688913286, -0.2754548192024231, -0.0008127961773425341, -0.004845543298870325, -0.0628434345126152, -0.00046171018038876355, -1.549708758830093e-05, -0.0004459816846065223, -2.3774361610412598, -1.537788011773955e-05, -5.722029527532868e-06, -7.152531907195225e-06, -1.4662635294371285e-05, -0.10924072563648224], "finish_reason": "stop"}], "metrics": {"energy": 613.5918147764205, "energy_per_token": 4.35171499841433, "time": 17.418125, "time_per_token": 0.12353280141843971}}
{"outputs": [{"text": "# Step 1: Remove punctuation\n    text = text.translate(str.maketrans(\"\", \"\", string.punctuation))\n\n    # Step 2: Convert to lowercase\n    text = text.lower()\n\n    # Step 3: Split the text into words\n    words = re.split(r'\\s+', text)\n\n    # Step 4: Remove duplicate words\n    words = list(dict.fromkeys(words))\n\n    # Step 5: Remove stopwords\n    words = [word for word in words if word not in STOPWORDS]\n\n    # Step 6: Count n-grams\n    ngrams = zip(*(words[i:] for i in range(n)))\n    ngrams_count = Counter(ngrams)\n\n    return ngrams_count", "tokens": ["#", " Step", " ", "1", ":", " Remove", " punct", "uation", "\n", "    ", "text", " =", " text", ".", "translate", "(", "str", ".", "mak", "et", "rans", "(", "\"", "\"", ",", " \"", "\"", ",", " string", ".", "punct", "uation", "))", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Convert", " to", " lower", "case", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Split", " the", " text", " into", " words", "\n", "    ", "words", " =", " re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ")", "\n", "\n", "    ", "#", " Step", " ", "4", ":", " Remove", " duplicate", " words", "\n", "    ", "words", " =", " list", "(", "dict", ".", "from", "keys", "(", "words", "))", "\n", "\n", "    ", "#", " Step", " ", "5", ":", " Remove", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Step", " ", "6", ":", " Count", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " zip", "(*", "(", "words", "[", "i", ":]", " for", " i", " in", " range", "(", "n", ")))", "\n", "    ", "ng", "rams", "_", "count", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "return", " n", "grams", "_", "count", "\n", "\n", "#"], "logprobs": [-0.3499735891819, -3.1927409172058105, -0.01242727693170309, -0.04380977526307106, -0.15846362709999084, -0.6847530007362366, -1.3461991548538208, -0.03440657630562782, -1.5762356519699097, -0.006077026017010212, -0.37919747829437256, -0.06444625556468964, -2.523505687713623, -0.0033591531682759523, -0.43108826875686646, -0.0014027050929144025, -0.05419892072677612, -3.814624506048858e-05, -1.311301275563892e-06, -2.062299427052494e-05, -7.152555099310121e-07, -1.2188024520874023, -0.10251068323850632, -0.01597357727587223, -0.00028320116689428687, -0.015049958601593971, -0.0010656398953869939, -0.0004960260121151805, -0.18233610689640045, -0.00016080040950328112, -7.10462118149735e-05, -1.0728830375228426e-06, -0.005853771697729826, -0.09208690375089645, -0.12396236509084702, -0.00033468366018496454, -0.0014790082350373268, -0.013264624401926994, -0.000356253091013059, -0.005464615765959024, -0.004634947050362825, -1.1087286472320557, -0.4034827649593353, -0.023155294358730316, -0.03346444293856621, -0.32166919112205505, -0.00032431588624604046, -0.02365289255976677, -0.002888675546273589, -0.003285963786765933, -0.00013934595335740596, -0.0014837696217000484, -0.00018010901112575084, -0.005656545516103506, -0.005495203658938408, -0.0002683041093405336, -0.002013324061408639, -0.010727830231189728, -0.00045348849380388856, -0.007077385671436787, -0.002926355227828026, -1.7458386421203613, -1.4685895442962646, -0.080586738884449, -0.013384844176471233, -0.18067584931850433, -0.10418108850717545, -0.0006062338361516595, -0.02888333611190319, -0.0013606823049485683, -1.7560772895812988, -4.2199197196168825e-05, -0.9864262342453003, -0.43004438281059265, -0.08205312490463257, -0.0504876933991909, -0.8874282836914062, -0.11247044056653976, -0.00011145447206217796, -0.008427178487181664, -0.11707441508769989, -0.018292654305696487, -0.03593726456165314, -0.0003723404952324927, -0.0035501806996762753, -0.03525852784514427, -0.0002531684876885265, -0.033871088176965714, -0.00351204932667315, -0.036158159375190735, -0.7517656087875366, -0.7575571537017822, -0.3332027494907379, -0.0006980843027122319, -0.5328384041786194, -0.030862513929605484, -0.3057694435119629, -0.00015448330668732524, -1.5643811225891113, -0.0007855190197005868, -3.2186455882765586e-06, -1.5497195136049413e-06, -0.00034254882484674454, -0.0018603176577016711, -0.008820381946861744, -0.017292911186814308, -0.015358982607722282, -0.0002499506517779082, -0.0021830792538821697, -0.010559873655438423, -0.00033444532891735435, -0.018154878169298172, -0.002378612756729126, -0.033705130219459534, -0.0050150551833212376, -0.13805411756038666, -0.0332692451775074, -0.0004857790481764823, -0.08938837796449661, -0.008442663587629795, -0.008072961121797562, -0.14508241415023804, -0.001434488920494914, -1.6927575416048057e-05, -1.0609570381348021e-05, -0.00014435203047469258, -0.0003579214389901608, -0.011723197065293789, -0.021676411852240562, -3.2186455882765586e-06, -0.0022980966605246067, 0.0, -0.00019071667338721454, 0.0, 0.0, -0.026359083130955696, -0.0015717307105660439, -0.009107593446969986, -0.0002337421028641984, -0.004429528955370188, -0.02749432437121868, -0.0007636015070602298, -0.011104804463684559, -0.003497794270515442, -2.3420372009277344, -0.45712733268737793, -0.07165601849555969, -0.0032936870120465755, -0.07184264808893204, -0.001663373550400138, -0.03179578483104706, -0.007651190273463726, -0.0026376002933830023, -2.1331987380981445, -0.0006986799417063594, -1.3207508325576782, -0.0009046276099979877, -0.00026353701832704246, -0.002959516830742359, -7.438383181579411e-05, -0.0008917645900510252, -3.158996332786046e-05, -2.4676019165781327e-05, -7.83174327807501e-05, -5.400034933700226e-05, -0.022278860211372375, -0.0008706831140443683, -0.01872166059911251, -0.20456798374652863, -0.2461629956960678, -0.934625506401062, -0.34163975715637207, -0.40090659260749817, -0.0006609162664972246, -0.026201743632555008, -0.003235583659261465, -0.004511179402470589, -3.2186455882765586e-06, -0.00010144196130568162, -0.004256593994796276, -0.030126303434371948, -0.000266278104390949, -0.49277636408805847, -0.05452565848827362, -7.10462118149735e-05, -0.0018504415638744831, -6.663577369181439e-05, -0.21640320122241974, -0.010119324550032616, -1.530727744102478], "finish_reason": "stop"}], "metrics": {"energy": 770.6872081222535, "energy_per_token": 4.056248463801334, "time": 21.46089, "time_per_token": 0.11295205263157894}}
{"outputs": [{"text": "# Convert text to lowercase and remove punctuation\n    text = text.lower()\n    text = re.sub(r'[^\\w\\s]', '', text)\n\n    # Remove duplicate and stopwords\n    words = [w for w in text.split() if w not in STOPWORDS]\n\n    # Generate n-grams\n    ngrams = [tuple(words[i:i+n]) for i in range(len(words)-n+1)]\n\n    # Count the n-grams\n    return Counter(ngrams)", "tokens": ["#", " Convert", " text", " to", " lower", "case", " and", " remove", " punct", "uation", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Remove", " duplicate", " and", " stop", "words", "\n", "    ", "words", " =", " [", "w", " for", " w", " in", " text", ".", "split", "()", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " [", "tuple", "(", "words", "[", "i", ":", "i", "+", "n", "])", " for", " i", " in", " range", "(", "len", "(", "words", ")-", "n", "+", "1", ")]", "\n", "\n", "    ", "#", " Count", " the", " n", "-", "grams", "\n", "    ", "return", " Counter", "(", "ng", "rams", ")", "\n", "\n", "def"], "logprobs": [-0.3499735891819, -2.384192943572998, -1.0659677982330322, -0.02991228923201561, -0.05782385542988777, -0.044994793832302094, -0.6375172138214111, -0.36464032530784607, -0.8780032396316528, -0.008679640479385853, -0.35066792368888855, -0.003561940509825945, -0.12482133507728577, -0.014745066873729229, -1.5587308406829834, -0.0003589939442463219, -0.009927777573466301, -0.0006246999255381525, -0.05389116331934929, -0.01342636439949274, -0.06838026642799377, -0.0044972943142056465, -0.030087552964687347, -4.2676016164477915e-05, -0.0007643162389285862, -0.03780452162027359, -0.00529541727155447, -0.17795687913894653, -0.0110595328733325, -0.05874265357851982, -0.0014129426563158631, -0.007431481499224901, -2.1457441107486375e-05, -0.008053568191826344, -0.00048137042904272676, -2.1934269170742482e-05, -0.08090507984161377, -0.00011264643399044871, -0.000860201776959002, -0.0022969073615968227, -0.027106424793601036, -0.06877986341714859, -0.0004798214649781585, -0.0055944304913282394, -0.920645534992218, -0.6804304718971252, -0.882100522518158, -0.01123188529163599, -0.04958679899573326, -0.6092312932014465, -0.0007048744591884315, -0.25181078910827637, -0.00652575446292758, -0.5127482414245605, -2.129542827606201, -0.017951983958482742, -0.0006291079334914684, -8.427741704508662e-05, -0.1758163869380951, -0.0022156708873808384, -0.0031339838169515133, -0.041126322001218796, -0.007239419035613537, -0.01361794862896204, -0.015261072665452957, -2.1219027985353023e-05, -0.002379445359110832, 0.0, -7.60526381782256e-05, 0.0, -3.4570634852570947e-06, -0.2931644916534424, -0.005618257448077202, -0.23530325293540955, -0.00032693761750124395, -0.00740710599347949, -0.15641717612743378, -0.1727592498064041, -0.11487540602684021, -0.006590417120605707, -0.38890859484672546, -0.0005030558677390218, -0.011251923628151417, -0.0025357017293572426, -0.0016899126349017024, -1.0512046813964844, -0.33361998200416565, -0.0010356307029724121, -0.006138400640338659, -0.00027855331427417696, -0.0018123644404113293, -0.02996666543185711, -0.002322002314031124, -0.14434964954853058, -0.0009846605826169252, -0.0006809299811720848, -0.000962151971179992, -8.761498611420393e-05, -0.0007622911944054067, -0.00016878610767889768, -4.625213477993384e-05, -0.00773943867534399, -8.583032467868179e-06, -0.0023736178409308195, -0.07290638238191605, -0.0006288696313276887, -0.0019936938770115376, -0.00015114595589693636, -0.010030459612607956, -0.0009445258183404803, -0.026934465393424034, -0.00014995403762441128, -0.012196484953165054, -0.023309852927923203, -0.5239899158477783, -0.14182129502296448, -0.025154665112495422, -0.0005270045949146152, -0.07141263782978058, -0.0004385939973872155, -2.5333988666534424, -0.018285630270838737, -0.0007124984404072165, -0.0010318199638277292, -6.556489552167477e-06, -0.16849090158939362, -0.1458393633365631, -0.0074048577807843685, -1.774435043334961], "finish_reason": "stop"}], "metrics": {"energy": 966.9336478519433, "energy_per_token": 7.495609673270878, "time": 33.11835, "time_per_token": 0.2567313953488372}}
{"outputs": [{"text": "# Remove punctuation\n    text = re.sub(r'[^\\w\\s]', '', text)\n\n    # Convert text to lowercase\n    text = text.lower()\n\n    # Tokenize text\n    words = text.split()\n\n    # Remove duplicate words\n    words = list(set(words))\n\n    # Remove stopwords\n    words = [word for word in words if word not in STOPWORDS]\n\n    # Generate n-grams\n    ngrams = [tuple(words[i:i+n]) for i in range(len(words)-n+1)]\n\n    # Count n-grams\n    count = Counter(ngrams)\n\n    return count\n\ntext = \"The quick brown fox jumps over the lazy dog and the dog was not that quick to respond.\"", "tokens": ["#", " Remove", " punct", "uation", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Convert", " text", " to", " lower", "case", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "    ", "#", " Token", "ize", " text", "\n", "    ", "words", " =", " text", ".", "split", "()", "\n", "\n", "    ", "#", " Remove", " duplicate", " words", "\n", "    ", "words", " =", " list", "(", "set", "(", "words", "))", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " [", "tuple", "(", "words", "[", "i", ":", "i", "+", "n", "])", " for", " i", " in", " range", "(", "len", "(", "words", ")-", "n", "+", "1", ")]", "\n", "\n", "    ", "#", " Count", " n", "-", "grams", "\n", "    ", "count", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "return", " count", "\n", "\n", "text", " =", " \"", "The", " quick", " brown", " fox", " jumps", " over", " the", " lazy", " dog", " and", " the", " dog", " was", " not", " that", " quick", " to", " respond", ".", "\"", "\n", "\n", "print"], "logprobs": [-0.3499735891819, -0.8898080587387085, -1.4564430713653564, -0.025368422269821167, -1.510910987854004, -0.0028254371136426926, -0.26734593510627747, -0.04907822236418724, -0.08816567063331604, -4.660974445869215e-05, -0.0011016021016985178, -0.04401319473981857, -0.009793094359338284, -0.16890418529510498, -0.004307515919208527, -0.018870003521442413, -0.0003946240758523345, -0.0038158714305609465, -3.909988299710676e-05, -0.006583074573427439, -0.0002549561613705009, -5.721882189391181e-05, -0.10962720960378647, -0.00021455370006151497, -0.0016270744381472468, -0.035168763250112534, -0.052563514560461044, -0.2881059944629669, -0.000442407006630674, -0.004359029233455658, -0.9234364628791809, -1.7472522258758545, -0.019776545464992523, -0.3263816833496094, -0.030028093606233597, -0.3043847680091858, -0.0005779979983344674, -0.01204997580498457, -0.004238551016896963, -0.004861083813011646, -4.756337511935271e-05, -0.0009298768127337098, -3.886147169396281e-05, -0.0029024637769907713, -0.01129824761301279, -0.0004278697888366878, -0.006205457728356123, -1.523508071899414, -0.019310222938656807, -0.7403385043144226, -0.8859894871711731, -0.0007390628452412784, -0.9961518049240112, -0.002877620980143547, -0.6577062010765076, -4.362964682513848e-05, -0.005982231814414263, -0.014983726665377617, -0.0009323778795078397, -0.01805279217660427, -0.00032455421751365066, -0.004109272733330727, -0.038350529968738556, -1.0302234888076782, -0.5062081217765808, -0.2994432747364044, -0.0005193791585043073, -0.19835564494132996, -0.014113261364400387, -0.15268637239933014, -4.5536911784438416e-05, -0.06372329592704773, -0.0007448997348546982, -0.0018550821114331484, -0.007458459585905075, -0.0026066871359944344, -0.008481434546411037, -0.00018940561858471483, -0.0010825494537129998, -0.020272906869649887, -0.0030702855437994003, -0.09382982552051544, -0.04504220187664032, -0.0002300474588992074, -0.04158155620098114, -0.0031690397299826145, -0.002945372834801674, -0.16499286890029907, -0.0011784045491367579, -7.390948667307384e-06, -9.298280929215252e-06, -8.34430247778073e-05, -0.00031680811662226915, -0.00628269836306572, -0.006775500252842903, -3.099436753473128e-06, -0.0007408496458083391, 0.0, -0.00011812942830147222, 0.0, -6.318072337307967e-06, -0.01262941025197506, -0.0003968881501350552, -0.004188456106930971, -0.00016711745411157608, -0.005733591504395008, -0.24850547313690186, -0.026573164388537407, -0.10244794934988022, -0.0026271373499184847, -0.055489782243967056, -0.0005998004344291985, -0.010526137426495552, -0.0012710357550531626, -0.0007850425899960101, -1.246622085571289, -0.22472254931926727, -0.0005435658385977149, -0.0023218835704028606, -0.0001616347290109843, -0.000844479538500309, -0.030919726938009262, -0.0020124914590269327, -0.15655173361301422, -0.0007570500019937754, -0.0003502947511151433, -0.0007525234250351787, -8.976056415122002e-05, -0.0008440031087957323, -0.00014077626110520214, -5.1020273531321436e-05, -0.008080292493104935, -5.125986263010418e-06, -0.0009890670189633965, -0.057620976120233536, -0.0010152667528018355, -0.0008587724878452718, -0.00011765264935093, -0.004746716935187578, -0.00058466981863603, -0.011318167671561241, -0.00012563870404846966, -0.006035672966390848, -0.023562312126159668, -0.16379417479038239, -0.014554286375641823, -0.003998500294983387, -0.018023522570729256, -0.0006171943969093263, -2.5994842052459717, -0.04235897585749626, -0.005192840471863747, -0.0030688594561070204, -0.0006293461774475873, -1.2993727978027891e-05, -5.8410845667822286e-05, -0.0004351384413894266, -0.02494737319648266, -0.0002803409588523209, -0.16829940676689148, -0.01896112784743309, -0.27788811922073364, -0.01021514367312193, -2.7485666275024414, -0.03053824044764042, -0.07393056154251099, -0.14724332094192505, -0.008974808268249035, -0.0015822045970708132, -0.0010437285527586937, -0.013856288976967335, -0.0005606033373624086, -0.0011944787111133337, -0.0005485698929987848, -0.00031859567388892174, -0.04562105983495712, -0.0026160799898207188, -0.0021112312097102404, -0.004870455712080002, -0.001662064460106194, -0.004312976263463497, -0.0018667429685592651, -0.003806845983490348, -0.00045313104055821896, -0.01844433695077896, -0.005760733969509602, -0.005889680236577988, -1.9467417001724243, -2.434133529663086], "finish_reason": "stop"}], "metrics": {"energy": 748.72673690033, "energy_per_token": 3.961517126456773, "time": 20.674854, "time_per_token": 0.10939076190476191}}
{"outputs": [{"text": "# Clean the text by removing non-alphanumeric characters and converting to lowercase\n    cleaned_text = re.sub(r'[^a-zA-Z0-9\\s]', '', text.lower())\n\n    # Remove duplicate and stopwords from the text\n    unique_words = [word for word in cleaned_text.split() if word not in STOPWORDS]\n\n    # Generate n-grams\n    ngrams = zip(*[unique_words[i:] for i in range(n)])\n\n    # Count the n-grams\n    ngrams_count = Counter(ngrams)\n\n    return ngrams_count", "tokens": ["#", " Clean", " the", " text", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " and", " converting", " to", " lower", "case", "\n", "    ", "cleaned", "_", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "]", "'", ",", " ''", ",", " text", ".", "lower", "())", "\n", "\n", "    ", "#", " Remove", " duplicate", " and", " stop", "words", " from", " the", " text", "\n", "    ", "unique", "_", "words", " =", " [", "word", " for", " word", " in", " cleaned", "_", "text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " zip", "(*", "[", "unique", "_", "words", "[", "i", ":]", " for", " i", " in", " range", "(", "n", ")]", ")", "\n", "\n", "    ", "#", " Count", " the", " n", "-", "grams", "\n", "    ", "ng", "rams", "_", "count", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "return", " n", "grams", "_", "count", "\n", "\n", "if"], "logprobs": [-0.3499735891819, -3.0428500175476074, -0.4143327474594116, -0.15676231682300568, -0.5344522595405579, -0.06254303455352783, -3.2531075477600098, -0.0064610871486365795, -0.7164076566696167, -0.0011400636285543442, -0.0013790155062451959, -0.11125613003969193, -0.4775699973106384, -1.114743947982788, -0.20067009329795837, -0.003989239223301411, -0.03282509371638298, -0.10697770118713379, -0.0037815505638718605, -0.8181776404380798, -0.03497987985610962, -0.008961694315075874, -0.0012161486083641648, -0.039803944528102875, -4.017272294731811e-05, -0.005086220800876617, -0.09182365238666534, -0.017082927748560905, -0.37980252504348755, -0.007422133814543486, -0.48585399985313416, -0.15227746963500977, -4.768370445162873e-07, -3.290122185717337e-05, -0.04752638190984726, -1.3947389561508317e-05, -0.00023505308490712196, -0.17410781979560852, -0.00016652150952722877, -1.3232143828645349e-05, -0.5601521134376526, -0.0034816381521523, -0.1148926168680191, -0.0004037995240651071, -4.970903682988137e-05, -0.7629968523979187, -0.00016532962035853416, -0.003211580915376544, -0.170999214053154, -0.002359108766540885, -0.008036539889872074, -0.02811077982187271, -0.07973029464483261, -0.000560245884116739, -0.007977883331477642, -1.1829913854599, -0.5911359190940857, -0.976748526096344, -0.011163631454110146, -0.04860265925526619, -0.34216347336769104, -0.027700508013367653, -0.415408194065094, -0.0597049705684185, -0.0007307243067771196, -2.5416007041931152, -0.0036145609337836504, -0.2526828348636627, -0.007867301814258099, -1.0297603607177734, -0.05874580144882202, -0.008749599568545818, -0.0006836699321866035, -0.00026723151677288115, -0.3185965120792389, -5.8412379075889476e-06, -2.7418097943154862e-06, -0.006358274724334478, -0.002584809437394142, -0.019678600132465363, -0.027209213003516197, -0.02542862482368946, -0.03090851567685604, -0.00013243274588603526, -0.003215858479961753, 0.0, -4.792098479811102e-05, 0.0, -5.125986263010418e-06, -0.41270139813423157, -0.0024164305068552494, -0.07669900357723236, -0.00020346954988781363, -0.008865518495440483, -0.11864987015724182, -0.5931192636489868, -0.061139922589063644, -0.004663306288421154, -0.8990214467048645, -0.0003861635341309011, -0.01589144952595234, -0.005117057356983423, -0.0034029928501695395, -1.1167808771133423, -0.000388665939681232, -0.11781683564186096, -0.0011019593803212047, -6.198863957251888e-06, -5.960462772236497e-07, -4.815939246327616e-05, -0.0015231685247272253, -0.00015317220822907984, -0.0008151783840730786, -2.8013790142722428e-05, -2.109982233378105e-05, -0.00011801023356383666, -3.2305197237292305e-05, -0.017286935821175575, -0.0003150205302517861, -9.63164638960734e-05, -0.013156979344785213, -0.026028353720903397, -0.00016735584358684719, -0.010218211449682713, -0.037657126784324646, -0.07341605424880981, -0.401989609003067, -0.029288029298186302, -0.0012378181563690305, -0.22922159731388092, -0.00035696811391972005, -0.1590994894504547, -2.0310301780700684, -0.0203398410230875, -0.2627957761287689, -0.0010736184194684029, -0.008829007856547832, -0.0024867109023034573, -0.0016175531782209873, -3.4570634852570947e-06, -7.64102369430475e-05, -0.001446987851522863, -0.02195459045469761, -0.00028236693469807506, -0.11890075355768204, -0.048208095133304596, -2.2291887944447808e-05, -0.001149351242929697, -6.12716976320371e-05, -0.2479000836610794, -0.009800530970096588, -1.0507900714874268], "finish_reason": "stop"}], "metrics": {"energy": 566.1197413749693, "energy_per_token": 3.724471982730061, "time": 13.6787405, "time_per_token": 0.08999171381578948}}
{"outputs": [{"text": "# Convert text to lowercase and remove stopwords\n    text = text.lower()\n    #text = ' '.join([word for word in text.split() if word not in STOPWORDS])\n\n    # Remove punctuation and convert to n-grams\n    pattern = re.compile(r'[^a-zA-Z0-9\\s]')\n    text = re.sub(pattern, '', text)\n    ngrams = [text.split()[i:i + n] for i in range(len(text.split()) - (n - 1))]\n\n    # Count the number of occurrences of each n-gram\n    ngram_counts = Counter()\n    for gram in ngrams:\n        ngram_counts[tuple(gram)] += 1\n\n    return ngram_counts", "tokens": ["#", " Convert", " text", " to", " lower", "case", " and", " remove", " stop", "words", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "    ", "#", "text", " =", " '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "\n", "    ", "#", " Remove", " punct", "uation", " and", " convert", " to", " n", "-", "grams", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "]", "')", "\n", "    ", "text", " =", " re", ".", "sub", "(", "pattern", ",", " ''", ",", " text", ")", "\n", "    ", "ng", "rams", " =", " [", "text", ".", "split", "()[", "i", ":", "i", " +", " n", "]", " for", " i", " in", " range", "(", "len", "(", "text", ".", "split", "())", " -", " (", "n", " -", " ", "1", "))", "]", "\n", "\n", "    ", "#", " Count", " the", " number", " of", " occurrences", " of", " each", " n", "-", "gram", "\n", "    ", "ng", "ram", "_", "counts", " =", " Counter", "()", "\n", "    ", "for", " gram", " in", " n", "grams", ":", "\n", "        ", "ng", "ram", "_", "counts", "[", "tuple", "(", "gram", ")]", " +=", " ", "1", "\n", "\n", "    ", "return", " n", "gram", "_", "counts"], "logprobs": [-0.3499735891819, -2.384192943572998, -1.0659677982330322, -0.02991228923201561, -0.05782385542988777, -0.044994793832302094, -0.6375172138214111, -0.36464032530784607, -2.6260862350463867, -0.11022432893514633, -0.7190799117088318, -0.006442847196012735, -0.3609831929206848, -0.056395288556814194, -0.6549752354621887, -0.0005955114611424506, -0.010212901048362255, -0.0004338276921771467, -0.07129687070846558, -0.11996752768754959, -2.8266382217407227, -3.0729005336761475, -0.08038754761219025, -0.9491612911224365, -0.005209087394177914, -0.0014515112852677703, -0.0008326877141371369, -0.4819974899291992, -0.05377018451690674, -0.0036973466631025076, -0.0001389883691444993, -6.675497570540756e-05, -0.03347747027873993, -0.0033884986769407988, -0.006227848585695028, -0.010483198799192905, -0.005009954795241356, -0.04081474617123604, -0.017535531893372536, -0.00013660451804753393, -0.023150285705924034, -3.3378546504536644e-06, -0.00031835734262131155, -3.576278118089249e-07, -2.145764938177308e-06, -0.022861488163471222, -0.02145206183195114, -0.3084590435028076, -0.0023365120869129896, -0.027563095092773438, -1.7343541383743286, -1.0238670110702515, -0.020653190091252327, -0.9514211416244507, -1.9054838418960571, -0.8933589458465576, -2.0951902866363525, -0.4630235433578491, -0.014676582999527454, -0.041008707135915756, -0.006059134379029274, -2.0370171070098877, -0.004491597879678011, -1.173666000366211, -7.56950321374461e-05, -0.0015814905054867268, -0.011759013868868351, -0.005646588280797005, -0.5496644973754883, -0.08419568836688995, -0.3458545506000519, -0.04876389354467392, -9.536697689327411e-06, -1.4066597032069694e-05, -0.06346746534109116, -1.7046782886609435e-05, -0.0006281548412516713, -1.3113856315612793, -0.0008405489497818053, -0.0001494772732257843, -0.0412442684173584, -1.9192511899746023e-05, -0.12672968208789825, -0.003356776898726821, -0.015904003754258156, -0.011037839576601982, -0.40676307678222656, -0.02694084867835045, -2.10957932472229, -1.5616295058862306e-05, -0.0005676327273249626, -0.0009058186551555991, -0.005273835267871618, -0.0006033745594322681, -0.08420861512422562, -0.0002422039397060871, -0.002857413375750184, -0.008231641724705696, -0.07151397317647934, -0.08235222101211548, -0.7465506196022034, -0.01432692352682352, -0.0034880531020462513, -1.499107837677002, -2.148895025253296, -2.149296998977661, -0.027607163414359093, -0.15343207120895386, -0.003381013870239258, -0.011067314073443413, -0.005603558383882046, -2.330019235610962, -0.00605593528598547, -0.0009900197619572282, -0.0063570900820195675, -0.00019095504831057042, -0.0012360322289168835, -0.0003844952443614602, -8.201262971851975e-05, -0.038427963852882385, -5.6503606174374e-05, -8.40390202938579e-05, -0.002022246830165386, -3.814624506048858e-05, -0.012853393331170082, -0.0002964295563288033, -2.8796348571777344, -0.0001941730733960867, -0.05098298192024231, -0.0009613183210603893, -7.116541382856667e-05, -0.00037281715776771307, -0.007779301609843969, -0.007315751630812883, -0.0841965600848198, -0.0005722792120650411, -0.02713925763964653, -0.11127448081970215, -0.32330214977264404, -2.609182834625244, -0.0005092516075819731, -0.8264769911766052, -0.009806670248508453, -0.014372282661497593, -0.019981171935796738, -0.0051788464188575745, -0.00624052481725812, -0.1465238779783249, -0.002837918698787689, -0.5326846241950989, -0.1734277904033661, -0.0019356340635567904, -0.18986336886882782, -0.0004129749140702188, -0.03485520929098129, -2.509280204772949, -0.0021998509764671326, -0.029228636994957924, -0.017879387363791466, -1.7837870121002197, -0.0015489972429350019, -0.0007931424188427627, -3.933898824470816e-06, -0.00026675479602999985, -0.0006403064471669495, -0.0064338454976677895, -0.28178003430366516, -0.000871040450874716, -0.08594956248998642, -0.008176898583769798, -0.19561634957790375, -0.03950662165880203, -0.0010145523119717836, -0.0018868515035137534, -0.0028483793139457703, -0.004383597988635302, -0.0007827793597243726, -6.09140915912576e-05, -0.0027869215700775385, -0.07948700338602066, -0.0009966888464987278, -0.17806722223758698, -0.07301908731460571, -0.0005285535007715225, -1.7523612768854946e-05, -1.490105023549404e-05], "finish_reason": "stop"}], "metrics": {"energy": 730.7264528789524, "energy_per_token": 3.928636843435228, "time": 19.111382, "time_per_token": 0.10274936559139784}}
{"outputs": [{"text": "# Remove duplicate and stopwords from the text\n    words = re.findall(r'\\w+', text.lower())\n    words = [word for word in words if word not in STOPWORDS]\n\n    # Generate n-grams and count their occurrences\n    ngrams = Counter(tuple(words[i:i+n]) for i in range(len(words)-n+1))\n\n    return ngrams", "tokens": ["#", " Remove", " duplicate", " and", " stop", "words", " from", " the", " text", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", " and", " count", " their", " occurrences", "\n", "    ", "ng", "rams", " =", " Counter", "(", "tuple", "(", "words", "[", "i", ":", "i", "+", "n", "])", " for", " i", " in", " range", "(", "len", "(", "words", ")-", "n", "+", "1", "))", "\n", "\n", "    ", "return", " n", "grams", "\n", "\n", "#"], "logprobs": [-0.3499735891819, -0.8898080587387085, -0.9788067936897278, -0.7297564148902893, -0.015340317040681839, -0.039626594632864, -0.3321916460990906, -0.20651453733444214, -0.1543569266796112, -0.29263636469841003, -0.004725835286080837, -1.2939598560333252, -0.013254507444798946, -1.0455037355422974, -8.320462075062096e-05, -0.2710420489311218, -1.07287787614041e-05, -0.006994524039328098, -0.0009416675311513245, -0.05625218525528908, -0.12994703650474548, -0.006090059410780668, -1.728519782773219e-05, -0.006390019785612822, -0.4059092700481415, -0.0015636371681466699, -0.02479969710111618, -0.026001522317528725, -0.011316164396703243, -0.6342501044273376, -0.014199883677065372, -0.025666141882538795, -0.16291406750679016, -0.0035070599988102913, -0.00020692592079285532, -3.611976353568025e-05, -0.001568279112689197, -0.0024209495168179274, -0.01620408520102501, -0.023382173851132393, -3.5523738915799186e-05, -0.0017625049222260714, 0.0, -0.00011812942830147222, 0.0, -9.894321920000948e-06, -0.07666566222906113, -0.012186357751488686, -0.09740187227725983, -0.000456109904916957, -0.008915734477341175, -0.12749530375003815, -1.3694772720336914, -0.11066026985645294, -0.015576252713799477, -1.1121580600738525, -0.06599652022123337, -0.7717276215553284, -0.33869555592536926, -0.04964454099535942, -0.0011249411618337035, -0.013045793399214745, -0.007106148637831211, -0.0034806879702955484, -0.7518946528434753, -0.0879809707403183, -0.3082641661167145, -0.0002760506176855415, -0.0027138092555105686, -0.0001408954558428377, -0.0029057920910418034, -0.08636647462844849, -0.002045802306383848, -0.17205381393432617, -0.00069165148306638, -0.000532008707523346, -0.0033555887639522552, -5.006664650863968e-05, -0.000494715350214392, -0.0001230164198204875, -5.8410845667822286e-05, -0.0017927302978932858, -7.748573807475623e-06, -0.0005392765742726624, -0.07793988287448883, -0.0016897936584427953, -0.00082923355512321, -0.00014935807848814875, -0.0021472747903317213, -0.002405370818451047, -0.10873369872570038, -0.0003274143091402948, -0.0758645236492157, -0.033356066793203354, -0.0005287918029353023, -0.2137986421585083, -0.009189452975988388, -1.297133207321167], "finish_reason": "stop"}], "metrics": {"energy": 441.35956703376786, "energy_per_token": 4.503669051364978, "time": 12.882515, "time_per_token": 0.13145423469387754}}
