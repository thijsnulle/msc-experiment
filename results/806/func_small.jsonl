{"outputs": [{"text": "# Remove duplicate and stopwords from the text string\n    text = re.sub(\"\\\\b\\\\w+\\\\b\", \"\", text)\n\n    # Generate a count of n-grams (default is bigrams) in the text\n    ngrams = Counter(re.findall(r\"\\b(\\w+)\", text))\n\n    # Return the count of the n-grams\n    return ngrams", "tokens": ["#", " Remove", " duplicate", " and", " stop", "words", " from", " the", " text", " string", "\n", "    ", "text", " =", " re", ".", "sub", "(", "\"", "\\\\", "b", "\\\\", "w", "+\\\\", "b", "\"", ",", " \"", "\"", ",", " text", ")", "\n", "\n", "    ", "#", " Generate", " a", " count", " of", " n", "-", "grams", " (", "default", " is", " big", "rams", ")", " in", " the", " text", "\n", "    ", "ng", "rams", " =", " Counter", "(", "re", ".", "find", "all", "(", "r", "\"", "\\", "b", "(\\", "w", "+", ")\"", ",", " text", "))", "\n", "\n", "    ", "#", " Return", " the", " count", " of", " the", " n", "-", "grams", "\n", "    ", "return", " n", "grams", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8722405433654785, -1.298819899559021, -0.45594552159309387, -0.49173903465270996, -0.01823740452528, -0.00851417612284422, -0.30759865045547485, -0.31082165241241455, -0.20553936064243317, -2.5188655853271484, -0.3592555522918701, -0.004517943598330021, -0.6028397679328918, -0.07675575464963913, -1.1792221069335938, -0.000125281119835563, -0.07767520099878311, -0.2090519368648529, -2.4405550956726074, -1.8853566646575928, -2.4141032695770264, -0.434438556432724, -0.13112957775592804, -0.17315654456615448, -0.11892996728420258, -0.1690625548362732, -0.0019043420907109976, -0.18173113465309143, -0.2670564651489258, -0.002228159923106432, -0.12015814334154129, -0.2866668999195099, -0.2356845587491989, -0.6404001712799072, -0.0008510305196978152, -0.04099005460739136, -0.3415941894054413, -1.06032395362854, -0.08340374380350113, -0.0034172493033111095, -0.06857629865407944, -0.03865037113428116, -0.0020616245456039906, -0.6883375644683838, -0.2603297233581543, -0.014666715636849403, -0.02130655199289322, -0.002191048813983798, -0.008520204573869705, -0.26034030318260193, -0.0036950900685042143, -0.005525791086256504, -0.07445023208856583, -0.0035495867487043142, -0.5245301723480225, -0.018821338191628456, -0.04347449541091919, -0.029727967455983162, -0.556628942489624, -1.2025246620178223, -0.004156522452831268, -0.04921509325504303, -0.0017498909728601575, -0.01455087959766388, -0.4456813633441925, -0.2125365138053894, -0.15922343730926514, -0.4730713367462158, -2.711425304412842, -0.015329164452850819, -1.0370442867279053, -0.6926924586296082, -0.07410570234060287, -0.013213332742452621, -0.29840466380119324, -0.029027283191680908, -0.12651427090168, -0.001177094760350883, -1.513770341873169, -1.0361168384552002, -0.046447012573480606, -0.06707707792520523, -0.046600401401519775, -0.40947654843330383, -0.006640983745455742, -0.002810340141877532, -0.002398592187091708, -0.7528836131095886, -0.00063744728686288, -0.012079774402081966, -0.031817033886909485, -0.0007581220706924796, -1.2739486694335938, -4.768360213347478e-06, -1.1920922133867862e-06, -0.00013398226292338222, -0.00012337400403339416, -0.0583416149020195], "finish_reason": "stop"}], "metrics": {"energy": 114.52900660324097, "energy_per_token": 1.1686633326861324, "time": 4.221779, "time_per_token": 0.043079377551020405}}
{"outputs": [{"text": "if n == 1:\n        text = ' '.join([char for char in text if char not in STOPWORDS])\n        text = text.split()\n        return Counter(text)\n    else:\n        text = ' '.join([char for char in text if char not in STOPWORDS])\n        text = text.split()\n        bigrams = list(zip(text, text[1:]))\n        return Counter(bigrams)", "tokens": ["if", " n", " ==", " ", "1", ":", "\n", "        ", "text", " =", " '", " '", ".", "join", "([", "char", " for", " char", " in", " text", " if", " char", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "        ", "text", " =", " text", ".", "split", "()", "\n", "        ", "return", " Counter", "(", "text", ")", "\n", "    ", "else", ":", "\n", "        ", "text", " =", " '", " '", ".", "join", "([", "char", " for", " char", " in", " text", " if", " char", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "        ", "text", " =", " text", ".", "split", "()", "\n", "        ", "big", "rams", " =", " list", "(", "zip", "(", "text", ",", " text", "[", "1", ":]", "))", "\n", "        ", "return", " Counter", "(", "big", "rams", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-3.166069507598877, -1.1307226419448853, -2.1002895832061768, -0.030937641859054565, -0.3821192681789398, -0.02241700142621994, -0.06352519243955612, -0.010705657303333282, -2.6189465522766113, -0.12081599235534668, -2.971292734146118, -0.039487600326538086, -0.019445735961198807, -0.0003887851198669523, -1.5040841102600098, -3.7027058601379395, -0.1454014927148819, -0.011208662763237953, -0.00038509105797857046, -0.427590936422348, -0.5973328351974487, -0.2775549292564392, -0.4479116201400757, -7.60526381782256e-05, -0.06655512750148773, -4.172316494077677e-06, -8.225102646974847e-05, -4.410734163684538e-06, -1.1205610462639015e-05, -0.04829771816730499, -0.043660979717969894, -0.37691670656204224, -1.7145949602127075, -0.10638207197189331, -1.815773844718933, -0.007696143351495266, -0.8961777687072754, -0.2082962691783905, -0.005758245009928942, -0.3175942599773407, -0.5063881874084473, -0.03295186534523964, -0.15640147030353546, -0.07546233385801315, -0.026183629408478737, -0.01059136725962162, -0.34999608993530273, -0.5480056405067444, -0.0008521024719811976, -0.005508007947355509, -0.0038661037106066942, -0.5744416117668152, -0.035232748836278915, -0.5491849184036255, -0.0029835256282240152, -0.00037067217635922134, -0.0006814065272919834, -0.05726620554924011, -0.09659390896558762, -0.007703122682869434, -0.0009691785671748221, -7.259582343976945e-05, -0.012133714742958546, -0.05671263858675957, -0.012834799475967884, -0.013137919828295708, -9.238292841473594e-05, -0.0014941253466531634, -8.4638240878121e-06, -2.3841830625315197e-06, -7.629365427419543e-06, -2.4199192921514623e-05, -0.003894009394571185, -0.009145393967628479, -0.005281780380755663, -0.31611379981040955, -0.014174732379615307, -0.6983682513237, -0.0006052807439118624, -0.12640953063964844, -0.013651697896420956, -0.0032170468475669622, -0.016284896060824394, -2.734494686126709, -0.11076539009809494, -0.05690331384539604, -1.747362732887268, -0.18336829543113708, -0.4140842854976654, -0.034213289618492126, -0.010940566658973694, -0.29986855387687683, -0.04396436735987663, -0.0014922209084033966, -0.012792665511369705, -0.019144169986248016, -0.0023767100647091866, -0.00589489471167326, -0.0193164199590683, -0.5735751390457153, -0.006018610205501318, -0.05207670480012894, -0.020434102043509483, -4.279521817807108e-05, -1.2469040155410767, -3.099436753473128e-06, -1.5497195136049413e-06, -0.00012742661056108773, -0.00013743886665906757, -0.055232733488082886], "finish_reason": "stop"}], "metrics": {"energy": 129.71780770492552, "energy_per_token": 1.1792527973175047, "time": 4.64174, "time_per_token": 0.04219763636363637}}
{"outputs": [{"text": "# Remove duplicate and stopwords from the input text\n    clean_text = re.sub(r\"[\\s]{2,}\", \" \", text.strip())\n    words = [word.lower() for word in clean_text.split() if word not in STOPWORDS]\n\n    # Generate n-grams using a sliding window\n    ngrams = [tuple(words[i:i+n]) for i in range(len(words)-n+1)]\n\n    # Count the occurrences of each n-gram\n    ngrams_counter = Counter(ngrams)\n\n    return ngrams_counter", "tokens": ["#", " Remove", " duplicate", " and", " stop", "words", " from", " the", " input", " text", "\n", "    ", "clean", "_", "text", " =", " re", ".", "sub", "(", "r", "\"", "[\\", "s", "]{", "2", ",", "}\"", ",", " \"", " \"", ",", " text", ".", "strip", "())", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " clean", "_", "text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", " using", " a", " sliding", " window", "\n", "    ", "ng", "rams", " =", " [", "tuple", "(", "words", "[", "i", ":", "i", "+", "n", "])", " for", " i", " in", " range", "(", "len", "(", "words", ")-", "n", "+", "1", ")]", "\n", "\n", "    ", "#", " Count", " the", " occurrences", " of", " each", " n", "-", "gram", "\n", "    ", "ng", "rams", "_", "counter", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "return", " n", "grams", "_", "counter", "\n", "\n", "if"], "logprobs": [-0.8722405433654785, -1.298819899559021, -0.45594552159309387, -0.49173903465270996, -0.01823740452528, -0.00851417612284422, -0.30759865045547485, -0.31082165241241455, -2.688464879989624, -0.54388028383255, -0.2684698700904846, -0.004778750240802765, -2.5977554321289062, -0.020885424688458443, -0.018555276095867157, -0.0029862592928111553, -1.741917371749878, -0.00011729506513802335, -0.03689407929778099, -0.15131442248821259, -0.07657269388437271, -1.3628742694854736, -1.993994951248169, -2.5747954845428467, -4.02839469909668, -0.05926757678389549, -0.003533431561663747, -0.021389169618487358, -0.0002859421947505325, -0.1841803342103958, -0.027740860357880592, -0.0004606377915479243, -0.3926161527633667, -1.0389748811721802, -1.5506713390350342, -0.07263802736997604, -0.22184160351753235, -0.14251993596553802, -1.9180214405059814, -0.02911887690424919, -0.42504945397377014, -0.251822292804718, -0.9109957218170166, -0.0922163799405098, -0.000200609109015204, -0.02083207108080387, -0.0005720409681089222, -0.0008170842193067074, -0.143895223736763, -2.3841574147809297e-05, -5.1020273531321436e-05, -0.0007992172613739967, -0.004260748624801636, -0.14064647257328033, -0.20446820557117462, -0.04790837690234184, -1.1231882572174072, -2.3007127310847864e-05, -0.0036042272113263607, -1.0728830375228426e-06, -4.887569048150908e-06, -1.1920858014491387e-05, -1.8000440832111053e-05, -0.04978382959961891, -0.003321371041238308, -0.19760163128376007, -0.0010786197381094098, -0.039473965764045715, -0.23104539513587952, -0.20068170130252838, -0.18635109066963196, -0.017599720507860184, -2.12015438079834, -2.37292218208313, -0.1905616670846939, -0.005138523876667023, -0.7854104042053223, -0.001046229270286858, -0.07156246900558472, -0.0053118993528187275, -0.03466672822833061, -2.371718406677246, -0.1628502607345581, -0.0016095790779218078, -0.008851812221109867, -0.0014156806282699108, -0.005435212515294552, -0.03130118176341057, -0.02139943838119507, -0.32121166586875916, -0.001039441442117095, -0.00020597243565134704, -0.005423712078481913, -0.00010775939153973013, -0.00042298430344089866, -4.351044481154531e-05, -7.891343557275832e-05, -0.022760113701224327, -3.397406908334233e-05, -0.00015007323236204684, -1.5058027505874634, -0.005189875606447458, -0.007338354364037514, -4.4225667807040736e-05, -0.002352567622438073, -0.0012654400197789073, -0.1429109275341034, -0.00040463366894982755, -0.14573045074939728, -0.2016482800245285, -0.3563419580459595, -0.3647521734237671, -0.004209942650049925, -0.3748445212841034, -0.008290992118418217, -0.04482531547546387, -0.003954092971980572, -0.2509459853172302, -0.0003303935518488288, -1.0339412689208984, -0.9779616594314575, -0.011374978348612785, -1.3923964500427246, -0.0003800861886702478, -0.002703465986996889, -0.0036696731112897396, -0.0008166077313944697, -3.2782016205601394e-05, -0.000554288737475872, -0.002428322797641158, -0.05577314272522926, -0.0002644904307089746, -0.10487367957830429, -0.013851938769221306, -0.0008607972995378077, -0.00042655906872823834, -8.106198947643861e-06, -0.5689175724983215, -0.02525533176958561, -1.2178664207458496], "finish_reason": "stop"}], "metrics": {"energy": 162.1159389638901, "energy_per_token": 1.157970992599215, "time": 6.936441, "time_per_token": 0.049546007142857146}}
{"outputs": [{"text": "# Remove duplicate and stopwords from the string text\n    text = ' '.join([word for word in re.sub(r\"[^\\w\\s]\", \"\", text).split() if word not in STOPWORDS])\n    # Generate a count of n-grams\n    return Counter([text[i:i + n] for i in range(len(text) - n + 1)])", "tokens": ["#", " Remove", " duplicate", " and", " stop", "words", " from", " the", " string", " text", "\n", "    ", "text", " =", " '", " '", ".", "join", "([", "word", " for", " word", " in", " re", ".", "sub", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ",", " text", ")", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "    ", "#", " Generate", " a", " count", " of", " n", "-", "grams", "\n", "    ", "return", " Counter", "([", "text", "[", "i", ":", "i", " +", " n", "]", " for", " i", " in", " range", "(", "len", "(", "text", ")", " -", " n", " +", " ", "1", ")]", ")", "\n", "\n", "if"], "logprobs": [-0.8722405433654785, -1.298819899559021, -0.45594552159309387, -0.49173903465270996, -0.01823740452528, -0.00851417612284422, -0.30759865045547485, -0.31082165241241455, -2.3311192989349365, -2.1275758743286133, -0.525134265422821, -0.005439599510282278, -0.6013357043266296, -0.10129056870937347, -1.5072458982467651, -0.001814506365917623, -0.0002498314715921879, -0.00019822540343739092, -0.9222955107688904, -0.3890496492385864, -0.04112540930509567, -0.0004024887748528272, -0.0014028241857886314, -0.7745805382728577, -0.00020239688456058502, -0.5847506523132324, -0.20334123075008392, -0.13687683641910553, -1.192813515663147, -0.5196520686149597, -0.467102587223053, -0.0017175221582874656, -0.33415865898132324, -0.007614161353558302, -0.09579634666442871, -0.0005573864909820259, -0.16286808252334595, -0.7202849388122559, -0.0005583396414294839, -0.03420603275299072, -0.053956564515829086, -0.002495748223736882, -0.28550902009010315, -0.054156120866537094, -0.043539322912693024, -0.12742845714092255, -0.695076048374176, -2.3245540432981215e-05, -0.005033439956605434, -1.0728830375228426e-06, -6.794906312279636e-06, -1.585470999998506e-05, -1.966933996300213e-05, -0.023809585720300674, -0.04653508961200714, -1.5518383979797363, -0.24269284307956696, -0.20171716809272766, -1.5533161163330078, -0.04976817965507507, -0.003988289274275303, -0.06933513283729553, -0.03512042388319969, -0.002080777660012245, -1.8093713521957397, -0.004035663325339556, -1.023587703704834, -0.015904473140835762, -1.6634752750396729, -0.5413461327552795, -0.0031194856856018305, -0.030735360458493233, -0.0621514655649662, -0.05114813521504402, -1.1496367454528809, -0.0023265217896550894, -0.0023227159399539232, -0.03388699144124985, -0.0003182381624355912, -0.001405086019076407, -0.00037877538125030696, -0.00027044929447583854, -0.060913823544979095, -7.760223525110632e-05, -0.00023278864682652056, -0.06863028556108475, -0.0017879704246297479, -0.03206781670451164, -0.07277459651231766, -0.0009994279826059937, -0.00017534149810671806, -0.007037849631160498, -0.17832377552986145, -0.5291073322296143, -0.02818739041686058, -1.1726784706115723], "finish_reason": "stop"}], "metrics": {"energy": 134.92402408027652, "energy_per_token": 1.405458584169547, "time": 4.829834, "time_per_token": 0.05031077083333333}}
{"outputs": [{"text": "text = re.sub(r'[\\n\\t ]+', r' ', text)\n    words = [word for word in re.findall(r'\\w+', text) if word not in STOPWORDS]\n    return Counter([tuple(words[i:i+n]) for i in range(len(words)-n+1)])", "tokens": ["text", " =", " re", ".", "sub", "(", "r", "'", "[\\", "n", "\\", "t", " ]", "+'", ",", " r", "'", " '", ",", " text", ")", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "return", " Counter", "([", "tuple", "(", "words", "[", "i", ":", "i", "+", "n", "])", " for", " i", " in", " range", "(", "len", "(", "words", ")-", "n", "+", "1", ")]", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-2.2295403480529785, -0.07866950333118439, -1.1775381565093994, -0.00016985881666187197, -0.06941309571266174, -0.326351135969162, -0.1897422969341278, -0.878284215927124, -2.46238374710083, -2.7273776531219482, -0.5125872492790222, -0.30053526163101196, -2.604753017425537, -0.1827545315027237, -0.00027652730932459235, -2.4601802825927734, -0.031900517642498016, -0.001970970071852207, -0.00019751029321923852, -0.04147268459200859, -0.058981604874134064, -0.30336499214172363, -0.21651476621627808, -1.5180160999298096, -0.031314585357904434, -1.2785005569458008, -0.6065816283226013, -0.5631983280181885, -0.002091603120788932, -0.0013598490040749311, -1.3730055093765259, -0.0007089247228577733, -1.392756462097168, -0.003200292121618986, -0.026050420477986336, -0.01030989084392786, -0.5435728430747986, -0.07796833664178848, -0.023441679775714874, -5.817244164063595e-05, -0.01796954683959484, -0.5899871587753296, -0.08003801107406616, -0.13468368351459503, -0.7618223428726196, -6.532455881824717e-05, -0.0033557077404111624, -8.344646857949556e-07, -3.933898824470816e-06, -1.4543427823809907e-05, -1.5735502529423684e-05, -0.02547871321439743, -0.007990892045199871, -0.19034843146800995, -0.8408200740814209, -0.011467966251075268, -1.1418304443359375, -0.17957541346549988, -0.009557915851473808, -0.0818944200873375, -0.006623220629990101, -0.029456457123160362, -0.08171482384204865, -0.05764247104525566, -0.3870636820793152, -0.001562208984978497, -0.0022747849579900503, -0.013992189429700375, -0.0006381620769388974, -0.007635101210325956, -0.00040344204171560705, -0.0003812778159044683, -0.046185582876205444, -7.688703772146255e-05, -0.0006422125734388828, -0.8806045651435852, -0.030495459213852882, -0.03785422444343567, -0.00010561384988250211, -0.0025870685931295156, -1.5305333137512207, -9.65590606938349e-06, -2.145764938177308e-06, -0.00022063204960431904, -0.0001802282058633864, -0.06356904655694962], "finish_reason": "stop"}], "metrics": {"energy": 100.69785457992553, "energy_per_token": 1.1709052858130875, "time": 4.4203153, "time_per_token": 0.051399015116279076}}
{"outputs": [{"text": "# Convert the text to lowercase and remove punctuation.\n    text = re.sub(r'[^\\w\\s]', '', text)\n    text = text.lower()\n    # Remove stopwords.\n    words = [word for word in text.split() if word not in STOPWORDS]\n\n    # Create a counter for the n-grams.\n    ngrams = Counter()\n    for i in range(len(words) - n + 1):\n        ngrams.update([tuple(words[i + j] for j in range(n))])\n    return ngrams", "tokens": ["#", " Convert", " the", " text", " to", " lower", "case", " and", " remove", " punct", "uation", ".", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "    ", "#", " Remove", " stop", "words", ".", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Create", " a", " counter", " for", " the", " n", "-", "grams", ".", "\n", "    ", "ng", "rams", " =", " Counter", "()", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "words", ")", " -", " n", " +", " ", "1", "):", "\n", "        ", "ng", "rams", ".", "update", "([", "tuple", "(", "words", "[", "i", " +", " j", "]", " for", " j", " in", " range", "(", "n", "))", "])", "\n", "    ", "return", " n", "grams"], "logprobs": [-0.8722405433654785, -3.7144904136657715, -1.229034185409546, -0.35707226395606995, -0.416402131319046, -0.25833335518836975, -0.08116847276687622, -1.0914876461029053, -0.22630399465560913, -1.2257190942764282, -0.2588164210319519, -1.9383176565170288, -0.014468399807810783, -0.004040531348437071, -0.30165162682533264, -0.0465204119682312, -0.49141237139701843, -5.149708886165172e-05, -0.01070495042949915, -0.10981233417987823, -0.020059460774064064, -0.1787581443786621, -0.021394655108451843, -0.09492432326078415, -0.0005598884890787303, -0.049810368567705154, -0.0030700478237122297, -0.05067854002118111, -0.03587033227086067, -6.210611172718927e-05, -0.044142890721559525, -9.011816291604191e-05, -0.015850501134991646, -0.7355848550796509, -1.0345821380615234, -0.29682788252830505, -0.270321249961853, -0.009636551141738892, -0.07314784079790115, -9.941560711013153e-05, -0.009543156251311302, -7.533743337262422e-05, -0.02160816639661789, -1.9658604860305786, -0.26512205600738525, -1.0283496379852295, -0.17300955951213837, -0.028917616233229637, -1.2632659673690796, -0.004902841057628393, -0.0014643670292571187, -0.40299442410469055, -0.015676947310566902, -0.33063626289367676, -0.11749307811260223, -0.006733347196131945, -0.0002821285743266344, -0.00032205163734033704, -0.09255342930555344, -0.00041762212640605867, -0.005751252174377441, -0.024296969175338745, -0.0038780972827225924, -0.014255590736865997, -0.00797670055180788, -1.1920858014491387e-05, -0.002499315422028303, -5.960462772236497e-07, -9.536697689327411e-06, -7.617183291586116e-05, -1.3112935448589269e-05, -0.005590636748820543, -0.0009049849468283355, -2.37724232673645, -0.002063408959656954, -0.04776325821876526, -2.2584080696105957, -0.3968542814254761, -2.3600974082946777, -2.5890512466430664, -0.5714527368545532, -0.08163242787122726, -0.2809905409812927, -0.019478587433695793, -0.15007418394088745, -0.006411814596503973, -0.0008624648326076567, -0.41770508885383606, -0.08442710340023041, -0.04471873492002487, -0.004369355272501707, -0.4889937937259674, -0.0019785843323916197, -0.32787710428237915, -0.16889914870262146, -0.07946916669607162, -0.0005501187406480312, -0.00013553177996072918, -0.0005106813623569906, -0.08318591117858887, -9.738924563862383e-05, -0.0014357983600348234, -0.15209072828292847, -0.0005906267906539142, -0.1827269196510315, -0.03566456213593483, -0.0012022180017083883, -0.00023958197562023997, -0.00018439977429807186, -0.004701393656432629, -0.003401923691853881, -0.006673785857856274, -0.04629485309123993, -1.0306750535964966, -0.0003103728231508285, -0.06268210709095001, -0.04521164670586586, -0.0005408254801295698, -0.00014625910262111574, -1.4185804502631072e-05, -0.010104455053806305, -1.4183592796325684, -0.012389717623591423, -0.0038507848512381315, -0.0008528171456418931, -1.645074735279195e-05, -7.617183291586116e-05, -0.00018690270371735096, -4.970903682988137e-05, -0.0037688431330025196, -0.0005486889858730137, -0.010234376415610313, -0.0020004753023386, -1.431988000869751, -0.04215007647871971, -0.03729795664548874, -0.0008978387922979891], "finish_reason": "stop"}], "metrics": {"energy": 182.4991062793732, "energy_per_token": 1.332110264812943, "time": 6.7299438, "time_per_token": 0.049123677372262774}}
{"outputs": [{"text": "# remove stopwords and duplicate words from text\n    text = ' '.join(w for w in re.sub(r'\\W+', ' ', text).split() if w.lower() not in STOPWORDS)\n\n    # generate n-grams\n    ngrams = Counter(re.findall(r'\\b\\w+\\b', text.lower()))\n    return ngrams", "tokens": ["#", " remove", " stop", "words", " and", " duplicate", " words", " from", " text", "\n", "    ", "text", " =", " '", " '", ".", "join", "(", "w", " for", " w", " in", " re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " text", ")", ".", "split", "()", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", ")", "\n", "\n", "    ", "#", " generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " Counter", "(", "re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ".", "lower", "()))", "\n", "    ", "return", " n", "grams", "\n", "\n", "#"], "logprobs": [-0.8722405433654785, -2.450594425201416, -1.5877900123596191, -0.05272151157259941, -1.1658025979995728, -0.44118645787239075, -0.6380085945129395, -1.80179762840271, -0.7865737676620483, -0.13211487233638763, -0.00776285957545042, -0.9452432990074158, -0.17606154084205627, -1.518630027770996, -0.0023795643355697393, -0.0003305127320345491, -0.0001971527235582471, -1.1773169040679932, -1.5076091289520264, -0.0613413043320179, -0.001053731539286673, -0.00030012393835932016, -1.3002045154571533, -0.0002361257211305201, -0.871870756149292, -0.13944809138774872, -0.22561490535736084, -1.3662080764770508, -0.35817986726760864, -0.18887940049171448, -0.00019596086349338293, -0.02438783273100853, -0.0021144431084394455, -0.0004158347437623888, -0.021002046763896942, -0.02552752010524273, -0.010774532333016396, -0.24310266971588135, -0.020108649507164955, -0.048588577657938004, -0.0904259905219078, -0.8120046854019165, -0.014789585024118423, -0.00017212340026162565, -0.00411722669377923, -1.2040065485052764e-05, -0.0033680638298392296, -1.0728830375228426e-06, -4.291525328881107e-06, -1.7881233361549675e-05, -2.2411095415009186e-05, -0.02581787295639515, -0.0798652321100235, -0.3550121784210205, -0.0011984078446403146, -0.06956879049539566, -0.35063645243644714, -0.23497673869132996, -0.6039074659347534, -0.02655261754989624, -0.4699527621269226, -0.0013053239090368152, -0.24094031751155853, -0.010179153643548489, -0.01934904232621193, -0.20514638721942902, -0.4806712865829468, -1.4973903894424438, -0.0013860390754416585, -0.3257491886615753, -0.0012971091782674193, -0.006584377493709326, -0.018878893926739693, -0.0384112149477005, -0.7780982255935669, -0.05669664219021797, -0.03537314012646675, -1.2509541511535645, -0.066693976521492, -0.055806964635849, -0.0021964015904814005, -0.014437262900173664, -2.8925344944000244, -0.062317363917827606, -0.218963161110878, -0.06280447542667389, -1.6254914999008179, -0.35623979568481445, -0.1310853362083435, -0.0008472190820612013, -0.6723012328147888, -0.02348010614514351, -1.7453911304473877], "finish_reason": "stop"}], "metrics": {"energy": 125.68429481506345, "energy_per_token": 1.3514440302694994, "time": 4.843185, "time_per_token": 0.05207725806451613}}
{"outputs": [{"text": "# Step 0: remove duplication\n    tokens = set(nltk.wordpunct_tokenize(text))\n    text = [w.lower() for w in tokens if w not in STOPWORDS]\n    # Step 1: ngrams\n    ngrams = Counter()\n    for n in range(2, n+1):\n        for ngram in zip(*[text[i:] for i in range(n)]):\n            ngrams[ngram] += 1\n    return ngrams", "tokens": ["#", " Step", " ", "0", ":", " remove", " dupl", "ication", "\n", "    ", "tokens", " =", " set", "(", "nl", "tk", ".", "word", "punct", "_", "token", "ize", "(", "text", "))", "\n", "    ", "text", " =", " [", "w", ".", "lower", "()", " for", " w", " in", " tokens", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "#", " Step", " ", "1", ":", " n", "grams", "\n", "    ", "ng", "rams", " =", " Counter", "()", "\n", "    ", "for", " n", " in", " range", "(", "2", ",", " n", "+", "1", "):", "\n", "        ", "for", " n", "gram", " in", " zip", "(*", "[", "text", "[", "i", ":]", " for", " i", " in", " range", "(", "n", ")]", "):", "\n", "            ", "ng", "rams", "[", "ng", "ram", "]", " +=", " ", "1", "\n", "    ", "return", " n", "grams", "\n", "\n", "def"], "logprobs": [-0.8722405433654785, -3.774933338165283, -0.06619580835103989, -2.9690215587615967, -0.3186590075492859, -3.0124294757843018, -3.7089948654174805, -2.4068703651428223, -1.246732473373413, -0.01488754153251648, -3.3089020252227783, -0.04435490816831589, -2.639371871948242, -0.1880100518465042, -1.574928879737854, -0.0005706112715415657, -0.0016601602546870708, -0.07658903300762177, -2.2804341316223145, -0.00012337400403339416, -0.000278195773717016, -0.0008228015503846109, -0.0015647084219381213, -0.024889469146728516, -0.12123245000839233, -0.2004009634256363, -0.6209089159965515, -2.2725563049316406, -0.16807936131954193, -2.6267104148864746, -1.6759942770004272, -0.6040536165237427, -0.04890398681163788, -0.00043215948971919715, -0.04416182264685631, -0.0012296028435230255, -0.0005173536483198404, -0.07817021012306213, -0.10570468753576279, -0.16535980999469757, -0.4876151978969574, -0.00010835537250386551, -0.006019321270287037, -2.50339189733495e-06, -8.106198947643861e-06, -1.0251946150674485e-05, -1.8000440832111053e-05, -0.12454024702310562, -0.00818150956183672, -1.1879353523254395, -0.40879741311073303, -0.055329740047454834, -0.0072029666043818, -0.01852625422179699, -0.026784760877490044, -3.7404916286468506, -1.3082962036132812, -0.36375755071640015, -0.007625163532793522, -1.2624725103378296, -0.04516265168786049, -0.07315338402986526, -0.7881383895874023, -1.033935308456421, -0.01289375964552164, -0.06825467944145203, -0.21895597875118256, -1.8816401958465576, -0.34435757994651794, -0.005161175969988108, -0.0015961299650371075, -2.1962950229644775, -0.003552437527105212, -0.147971510887146, -0.5024489164352417, -0.025501489639282227, -0.007170537486672401, -0.03854072466492653, -0.00978105328977108, -1.0194734334945679, -2.553874969482422, -0.3036365807056427, -0.04777905344963074, -0.5863627791404724, -0.014250301755964756, -0.17516794800758362, -0.2615680396556854, -0.024126039817929268, -0.04752615466713905, -0.009080659598112106, -0.0020310503896325827, -0.00011514954530866817, -0.0004111875023227185, -0.0003334919747430831, -0.0003209791029803455, -0.00466081453487277, -0.026638517156243324, -0.0009539344464428723, -0.02270045131444931, -0.00557309202849865, -0.045316919684410095, -0.0061742989346385, -0.23519979417324066, -0.25977733731269836, -0.011642605066299438, -0.010711554437875748, -0.007301077246665955, -0.0074231987819075584, -4.51792984677013e-05, -0.005063566844910383, -0.23228305578231812, -0.1289842277765274, -0.027860626578330994, -0.0004067785630468279, -0.6495206952095032, -0.02751450426876545, -1.159948706626892], "finish_reason": "stop"}], "metrics": {"energy": 147.42038254070275, "energy_per_token": 1.260003269578656, "time": 5.8897653, "time_per_token": 0.05033987435897436}}
{"outputs": [{"text": "text = text.lower()\n    text = re.sub(r'[^\\w\\s]', '', text)\n    text = re.sub(r' +', ' ', text)\n    text = text.split()\n\n    word_list = [word for word in text if word not in STOPWORDS]\n    count = Counter()\n    for i in range(0, len(word_list) - n + 1):\n        count[tuple(word_list[i : i + n])] += 1\n    return count", "tokens": ["text", " =", " text", ".", "lower", "()", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", " +", "'", ",", " '", " '", ",", " text", ")", "\n", "    ", "text", " =", " text", ".", "split", "()", "\n", "\n", "    ", "word", "_", "list", " =", " [", "word", " for", " word", " in", " text", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "count", " =", " Counter", "()", "\n", "    ", "for", " i", " in", " range", "(", "0", ",", " len", "(", "word", "_", "list", ")", " -", " n", " +", " ", "1", "):", "\n", "        ", "count", "[", "tuple", "(", "word", "_", "list", "[", "i", " :", " i", " +", " n", "]", ")]", " +=", " ", "1", "\n", "    ", "return", " count"], "logprobs": [-2.2295403480529785, -0.07866950333118439, -0.7895929217338562, -0.008813764899969101, -0.4136800765991211, -0.0010037152096629143, -0.13239644467830658, -0.24146489799022675, -0.723976194858551, -0.07676856219768524, -0.22561946511268616, -9.250213042832911e-05, -0.07892467081546783, -0.258731484413147, -0.11112013459205627, -0.8249409198760986, -0.11754310131072998, -0.18904085457324982, -0.003977721557021141, -0.12275097519159317, -0.0064779059030115604, -0.0856919139623642, -0.02128344587981701, -0.00021300431399140507, -0.24569746851921082, -0.00037245964631438255, -0.006663246545940638, -0.0032860825303941965, -0.08549439162015915, -0.14787742495536804, -0.42047297954559326, -0.03742312639951706, -0.9179812073707581, -0.002085298066958785, -0.027048643678426743, -0.07650312036275864, -0.01685965619981289, -2.0069010257720947, -2.8470537662506104, -0.00798970926553011, -0.00012766500003635883, -0.02388315089046955, -0.0007354891858994961, -0.0002549561613705009, -0.005385296419262886, -0.013097446411848068, -0.17708894610404968, -0.2223133146762848, -0.5580810904502869, -0.04871813580393791, -1.087141990661621, -0.0024738681968301535, -1.2740767002105713, -0.46607837080955505, -0.004692969378083944, -0.827368974685669, -0.0005465444410219789, -3.385240077972412, -0.05132855102419853, -2.188138961791992, -0.013991719111800194, -0.8419318795204163, -0.3183163106441498, -0.02544175647199154, -0.004199139773845673, -0.0016262413701042533, -0.03137801215052605, -0.02981104888021946, -0.06517673283815384, -0.02004789188504219, -4.756337511935271e-05, -0.0038587411399930716, -7.152555099310121e-07, -5.8412379075889476e-06, -8.4638240878121e-06, -9.894321920000948e-06, -0.04544804245233536, -0.005281898658722639, -0.7036924362182617, -2.609611749649048, -0.5047822594642639, -0.035193849354982376, -2.0685644149780273, -0.003619787283241749, -0.41192543506622314, -0.20460033416748047, -0.28091782331466675, -0.0035265416372567415, -0.0008108903421089053, -0.0013006808003410697, -2.3959462642669678, -0.0008666335488669574, -0.03452462702989578, -4.8636207793606445e-05, -0.014649564400315285, -1.1920858014491387e-05, -1.311301275563892e-06, -0.3448362946510315, -0.0515904501080513, -0.20718300342559814, -0.16870461404323578, -0.003662784118205309, -0.0006260104128159583, -0.01855059526860714, -0.0021050453651696444, -0.01088868360966444, -0.20253099501132965, -0.8979315757751465, -0.01034339889883995, -0.0009908534120768309, -0.000495549407787621, -0.0013262771535664797, -1.5497195136049413e-06, -9.095255518332124e-05, -0.002785138553008437, -2.4283809661865234, -0.004855270963162184, -0.034979190677404404, -0.0004817279113922268, -0.0019112430745735765, -6.985420623095706e-05, -0.006079632788896561, -0.0009441685397177935, -3.40932747349143e-05, -0.0018857807153835893, -0.8140931725502014, -0.026178983971476555, -0.03068692237138748], "finish_reason": "stop"}], "metrics": {"energy": 137.8315640697479, "energy_per_token": 1.0768090942949056, "time": 5.477536, "time_per_token": 0.04279325}}
{"outputs": [{"text": "# Your code starts here...\n    # regex expression that matches any single letters or numbers\n    single_character_pattern = re.compile('[a-zA-Z0-9]')\n    # regex expression that matches any characters other than a-zA-Z0-9\n    non_single_character_pattern = re.compile('[^a-zA-Z0-9]')\n    # split the text string into a list of words\n    words = non_single_character_pattern.sub(' ', text).lower().split()\n    # remove stopwords from the words list\n    words = [w for w in words if w not in STOPWORDS]\n    # split the words into bigrams, trigrams, or fourgrams\n    ngrams = []\n    for i in range(len(words) - n + 1):\n        ngrams.append(tuple(words[i:i+n]))\n    # count the number of times each ngram appears\n    ngram_counter = Counter(ngrams)\n    # return the ngram counter\n    return ngram_counter<|endof", "tokens": ["#", " Your", " code", " starts", " here", ".", ".", ".", "\n", "    ", "#", " regex", " expression", " that", " matches", " any", " single", " letters", " or", " numbers", "\n", "    ", "single", "_", "character", "_", "pattern", " =", " re", ".", "compile", "('", "[", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]", "')", "\n", "    ", "#", " regex", " expression", " that", " matches", " any", " characters", " other", " than", " a", "-", "z", "A", "-", "Z", "0", "-", "9", "\n", "    ", "non", "_", "single", "_", "character", "_", "pattern", " =", " re", ".", "compile", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]", "')", "\n", "    ", "#", " split", " the", " text", " string", " into", " a", " list", " of", " words", "\n", "    ", "words", " =", " non", "_", "single", "_", "character", "_", "pattern", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", ".", "split", "()", "\n", "    ", "#", " remove", " stop", "words", " from", " the", " words", " list", "\n", "    ", "words", " =", " [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "#", " split", " the", " words", " into", " big", "rams", ",", " trig", "rams", ",", " or", " four", "grams", "\n", "    ", "ng", "rams", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "words", ")", " -", " n", " +", " ", "1", "):", "\n", "        ", "ng", "rams", ".", "append", "(", "tuple", "(", "words", "[", "i", ":", "i", "+", "n", "]))", "\n", "    ", "#", " count", " the", " number", " of", " times", " each", " n", "gram", " appears", "\n", "    ", "ng", "ram", "_", "counter", " =", " Counter", "(", "ng", "rams", ")", "\n", "    ", "#", " return", " the", " n", "gram", " counter", "\n", "    ", "return", " n", "gram", "_", "counter", "<", "|", "end", "of"], "logprobs": [-0.8722405433654785, -3.6433653831481934, -0.11750961095094681, -2.270404815673828, -0.05477329343557358, -2.0098659992218018, -1.9955675601959229, -0.03900504484772682, -0.030486786738038063, -0.38866785168647766, -1.3051952123641968, -4.918116569519043, -4.675700664520264, -3.4946541786193848, -1.1354069709777832, -1.227785587310791, -4.118137359619141, -4.089597702026367, -1.8784972429275513, -1.378782033920288, -0.5368669629096985, -0.01938365213572979, -2.2496039867401123, -0.12964467704296112, -3.7855064868927, -0.4463782012462616, -1.3892990350723267, -0.011012372560799122, -0.3979160189628601, -5.376194530981593e-05, -0.00472441129386425, -1.0740199089050293, -0.41344714164733887, -0.47834375500679016, -0.0008523407159373164, -0.0019293281948193908, -0.33305034041404724, -0.00015889335190877318, -0.009045692160725594, -0.06619960069656372, -0.00021705655672121793, -0.00033456450910307467, -0.4838830530643463, -0.04111076518893242, -0.0076203132048249245, -0.43198153376579285, -0.28251779079437256, -0.9382808208465576, -0.04643665626645088, -0.05894339457154274, -0.03149757534265518, -0.44541504979133606, -3.305690288543701, -2.069329261779785, -0.014415290206670761, -2.2481157779693604, -1.1570228338241577, -0.004082560073584318, -1.3179903030395508, -0.0004960260121151805, -0.012858807109296322, -0.21164244413375854, -0.0009074860718101263, -0.0006202919175848365, -0.25578364729881287, -0.002371596172451973, -0.9733864068984985, -0.03450654819607735, -1.1551164388656616, -0.0024951535742729902, -0.06664401292800903, -0.005650263279676437, -0.007813485339283943, -0.0026824227534234524, -0.0028802361339330673, -0.0007251255447044969, -0.0002252801787108183, -0.06028561666607857, -0.036786533892154694, -0.13927294313907623, -0.01922602951526642, -0.00021526881027966738, -0.00036542891757562757, -0.001770953880622983, -2.2053474822314456e-05, -0.0003270567976869643, -0.0026065681595355272, -5.590759246842936e-05, -1.490105023549404e-05, -0.05929543823003769, -0.0016621834365651011, -0.0017628619680181146, -0.5216591954231262, -0.23416532576084137, -2.8848743438720703, -0.6785561442375183, -0.45672205090522766, -2.330294370651245, -0.5360000729560852, -1.0168540477752686, -0.0389997698366642, -0.0883074477314949, -0.3714575171470642, -0.48172271251678467, -0.003766824258491397, -0.5242960453033447, -0.07520517706871033, -1.320363163948059, -7.152555099310121e-07, -7.497983460780233e-05, -1.1920928244535389e-07, -6.210611172718927e-05, -1.8000440832111053e-05, -1.4305012882687151e-05, -0.0001072826053132303, -1.0828214883804321, -0.10576281696557999, -0.12259259074926376, -0.0004924515378661454, -0.10244709253311157, -0.3132803738117218, -0.016499267891049385, -1.5650792121887207, -0.0028449322562664747, -0.009356931783258915, -0.23707686364650726, -0.08219598233699799, -0.022030508145689964, -0.152739480137825, -0.08879493176937103, -0.3818795084953308, -0.7059219479560852, -0.08778652548789978, -0.9432842135429382, -0.09822538495063782, -1.2873393297195435, -0.09338735044002533, -0.11895780265331268, -0.00099323526956141, -0.20740488171577454, -0.07905784994363785, -0.03263865411281586, -1.657965064048767, -0.03101426735520363, -0.0003692421887535602, -0.0002727136597968638, -0.005806483328342438, -0.002663994673639536, -0.06513920426368713, -0.010565770789980888, -1.3351351299206726e-05, -0.0034139228519052267, -8.344646857949556e-07, -9.65590606938349e-06, -2.074220174108632e-05, -1.3947389561508317e-05, -0.017252840101718903, -0.0010113369207829237, -0.049604382365942, -0.03584549203515053, -3.407559871673584, -0.4838295578956604, -0.06451141834259033, -0.31735777854919434, -2.8018972873687744, -0.019722547382116318, -1.1605494022369385, -0.1433398723602295, -0.0001961992384167388, -0.19014127552509308, -2.139993190765381, -3.8959450721740723, -0.3642730414867401, -0.27763286232948303, -0.003806608496233821, -0.695643424987793, -0.015806851908564568, -0.045899149030447006, -2.862697124481201, -0.002163809258490801, -0.010300097987055779, -0.11465645581483841, -0.3329051733016968, -0.0010040724882856011, -0.004942698869854212, -0.0025819556321948767, -2.2009778022766113, -0.0006164796068333089, -0.0018882793374359608, -0.237822487950325, -0.008912780322134495, -0.440950483083725, -0.05344986543059349, -0.0024845702573657036, -0.0010171722387894988, -0.0013227055314928293, -0.005698150955140591, -0.007553232368081808, -0.171461284160614, -0.0790165439248085, -0.0027877537067979574, -0.019035635516047478, -0.059465065598487854, -0.06979560852050781, -0.0038789284881204367, -0.00396727304905653, -0.0003651905863080174, -0.0004786299541592598, -0.04867113009095192, -0.0467180460691452, -0.5271565914154053, -0.000771939754486084, -0.0006615119054913521, -0.002234939718618989, -0.16026481986045837, -0.2091456651687622, -0.7705461382865906, -0.07611091434955597, -2.113903522491455, -0.0029820995405316353, -1.5061163902282715, -0.049579087644815445, -0.42035868763923645, -0.3534764349460602, -0.2546808123588562, -2.5182597637176514, -0.0007474012672901154, -0.9896870255470276, -0.761565625667572, -0.0033450147602707148, -1.518601417541504, -0.0007110689766705036, -0.003197202691808343, -0.00615380285307765, -0.00252714054659009, -3.290122185717337e-05, -0.0005922947311773896, -0.0044931406155228615, -0.1705521196126938, -1.0712627172470093, -0.8707255125045776, -0.09067338705062866, -1.5228272676467896, -0.0527723990380764, -1.8024206161499023, -0.2802712023258209, -0.004486732184886932, -0.008848149329423904, -0.018175598233938217, -3.4450891689630225e-05, -3.349725011503324e-05, -1.2755313036905136e-05, -1.222116231918335, -2.3841830625315197e-06, -1.5497195136049413e-06, -0.00014804698002990335], "finish_reason": "length"}], "metrics": {"energy": 278.87973179244995, "energy_per_token": 1.0893739523142576, "time": 12.179902, "time_per_token": 0.0475777421875}}
{"outputs": [{"text": "# Split text into a list of words using whitespace as the delimiter\n    words = text.split()\n\n    # Create a set of unique n-grams in the text\n    ngrams = Counter()\n    for i in range(len(words) - n + 1):\n        ngrams[tuple(words[i:i + n])] += 1\n\n    # Filter out stopwords\n    ngrams = Counter({word: count for word, count in ngrams.items() if word not in STOPWORDS})\n\n    return ngrams", "tokens": ["#", " Split", " text", " into", " a", " list", " of", " words", " using", " whites", "pace", " as", " the", " del", "im", "iter", "\n", "    ", "words", " =", " text", ".", "split", "()", "\n", "\n", "    ", "#", " Create", " a", " set", " of", " unique", " n", "-", "grams", " in", " the", " text", "\n", "    ", "ng", "rams", " =", " Counter", "()", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "words", ")", " -", " n", " +", " ", "1", "):", "\n", "        ", "ng", "rams", "[", "tuple", "(", "words", "[", "i", ":", "i", " +", " n", "]", ")]", " +=", " ", "1", "\n", "\n", "    ", "#", " Filter", " out", " stop", "words", "\n", "    ", "ng", "rams", " =", " Counter", "({", "word", ":", " count", " for", " word", ",", " count", " in", " n", "grams", ".", "items", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "})", "\n", "\n", "    ", "return", " n", "grams", "\n", "\n", "if"], "logprobs": [-0.8722405433654785, -3.5291953086853027, -0.9843055009841919, -0.1710169017314911, -2.1534721851348877, -0.03648187965154648, -0.02901952527463436, -0.24862679839134216, -2.9627273082733154, -0.8330298662185669, -0.12638641893863678, -0.3114617168903351, -0.5464694499969482, -0.18038615584373474, -0.007077740505337715, -0.0019518149783834815, -0.2387314885854721, -0.002596223959699273, -0.2861717641353607, -0.025495098903775215, -1.0009267330169678, -0.0006092122639529407, -0.036311179399490356, -0.005111720412969589, -0.002809864701703191, -0.12102186679840088, -0.0007115454645827413, -0.008702566847205162, -2.6533241271972656, -0.4851609766483307, -1.6016302108764648, -0.5260801911354065, -2.5404739379882812, -1.8612456321716309, -0.17587918043136597, -0.08042506128549576, -4.321749687194824, -0.15150704979896545, -0.3398450016975403, -0.27390778064727783, -0.0017190692014992237, -0.2974541187286377, -0.009078415110707283, -0.08549165725708008, -1.8193988800048828, -1.0999619960784912, -0.01996142417192459, -0.055620141327381134, -0.04749000445008278, -0.0512261725962162, -0.0006618693005293608, -0.00016604475968051702, -0.0006026597693562508, -0.1903151273727417, -8.785339014139026e-05, -0.0016262413701042533, -0.18307997286319733, -0.0009471459779888391, -0.1382911503314972, -0.03412262350320816, -0.000878544058650732, -0.00025281094713136554, -0.00018869050836656243, -0.011724728159606457, -0.0036916458047926426, -0.03536025434732437, -0.1852966994047165, -0.25993362069129944, -0.007952692918479443, -0.0003933132975362241, -0.00034624303225427866, -4.1483970562694594e-05, -2.7417760065873154e-05, -0.014823412522673607, -0.017897654324769974, -0.919404149055481, -0.0004570631426759064, -5.8410845667822286e-05, -2.5152843591058627e-05, -0.004655593540519476, -0.0005453529884107411, -2.90866428258596e-05, -0.00770170334726572, -0.04590165242552757, -0.001334729720838368, -0.8971542119979858, -2.5784053802490234, -0.06763875484466553, -0.25218918919563293, -0.024849584326148033, -1.569231629371643, -0.0011713793501257896, -0.9635828733444214, -0.007713769096881151, -0.2274988293647766, -2.8234426975250244, -0.25481054186820984, -2.4590578079223633, -0.00905880518257618, -0.09274891018867493, -0.02876207046210766, -0.012402786873281002, -0.000824230897706002, -0.00100192881654948, -0.00024339574156329036, -0.007525783497840166, -0.00039521988946944475, -4.2914423829643056e-05, -0.007463902700692415, -6.925819616299123e-05, -0.0581902414560318, -0.048963580280542374, -0.046072546392679214, -1.3232143828645349e-05, -0.0022448119707405567, -4.768370445162873e-07, -2.169585604860913e-05, -7.283422019099817e-05, -1.168244216387393e-05, -0.022479012608528137, -0.00042703570215962827, -0.04210001602768898, -0.0005843124235980213, -0.1930229663848877, -0.02189161255955696, -0.00068926892708987, -0.8151469230651855, -0.018825434148311615, -1.1369279623031616], "finish_reason": "stop"}], "metrics": {"energy": 178.34257110404968, "energy_per_token": 1.3825005511941837, "time": 6.501989, "time_per_token": 0.05040301550387597}}
{"outputs": [{"text": "words = [w.lower() for w in re.findall('\\w+', text) if w.lower() not in STOPWORDS]\n    ngrams = Counter(ngrams(words, n))\n\n    return ngrams", "tokens": ["words", " =", " [", "w", ".", "lower", "()", " for", " w", " in", " re", ".", "find", "all", "('", "\\", "w", "+'", ",", " text", ")", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "ng", "rams", " =", " Counter", "(", "ng", "rams", "(", "words", ",", " n", "))", "\n", "\n", "    ", "return", " n", "grams"], "logprobs": [-3.0394768714904785, -0.05266134440898895, -1.9061806201934814, -1.263502836227417, -0.5387469530105591, -0.11549998074769974, -0.0012647256953641772, -0.054742369800806046, -0.0014463926199823618, -0.0008024332928471267, -0.39510101079940796, -0.00017081231635529548, -0.5249760746955872, -0.0003129946126136929, -2.616762638092041, -0.9354771971702576, -0.010815689340233803, -0.025563659146428108, -0.00013505500101018697, -0.01887117326259613, -1.790408730506897, -0.15472963452339172, -0.08734223991632462, -0.6518095135688782, -0.005950710736215115, -0.0017654799157753587, -0.009099205955862999, -6.651657167822123e-05, -0.003928089048713446, -8.344646857949556e-07, -2.3841830625315197e-06, -1.645074735279195e-05, -1.4781842764932662e-05, -0.017102031037211418, -0.017646806314587593, -0.24022740125656128, -1.7640453577041626, -0.03396085649728775, -0.05001971498131752, -0.21809005737304688, -0.4172145426273346, -2.532794713973999, -0.009738790802657604, -1.052674412727356, -0.05226973816752434, -0.0012303171679377556, -0.014184016734361649, -0.0735364556312561, -0.012322955764830112, -1.6178967952728271, -0.011306380853056908, -0.023293081670999527, -0.037213653326034546, -0.0007614573696628213], "finish_reason": "stop"}], "metrics": {"energy": 41.62892247581482, "energy_per_token": 0.7709059717743485, "time": 2.1192498, "time_per_token": 0.03924536666666666}}
{"outputs": [{"text": "# Remove duplicate and stopwords from the text\n    text = ' '.join([word for word in re.sub(r'[^\\w]', ' ', text).split() if word not in STOPWORDS])\n\n    # Generate n-grams\n    ngrams = Counter()\n    for n in range(1, n+1):\n        ngrams |= Counter(zip(text.split(), text.split()[1:]))\n\n    return ngrams", "tokens": ["#", " Remove", " duplicate", " and", " stop", "words", " from", " the", " text", "\n", "    ", "text", " =", " '", " '", ".", "join", "([", "word", " for", " word", " in", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "]", "'", ",", " '", " '", ",", " text", ")", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " Counter", "()", "\n", "    ", "for", " n", " in", " range", "(", "1", ",", " n", "+", "1", "):", "\n", "        ", "ng", "rams", " |=", " Counter", "(", "zip", "(", "text", ".", "split", "()", ",", " text", ".", "split", "()[", "1", ":]", "))", "\n", "\n", "    ", "return", " n", "grams", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8722405433654785, -1.298819899559021, -0.45594552159309387, -0.49173903465270996, -0.01823740452528, -0.00851417612284422, -0.30759865045547485, -0.31082165241241455, -0.20553936064243317, -0.3189467489719391, -0.0034898349549621344, -0.6676875352859497, -0.07768788188695908, -1.2565274238586426, -0.0017258524894714355, -0.00015507926582358778, -0.00016068121476564556, -0.8564717769622803, -0.268597275018692, -0.04693486541509628, -0.0003713871701620519, -0.001379372552037239, -0.9287018179893494, -0.00018892886873800308, -0.6115989089012146, -0.18657268583774567, -0.10705696046352386, -0.7035325765609741, -0.10198742151260376, -0.1146535873413086, -0.0015723258256912231, -1.1452701091766357, -0.06786032766103745, -0.0001456631434848532, -0.049374185502529144, -0.001580062322318554, -0.00020382710499688983, -0.018515488132834435, -0.020771358162164688, -0.00929351057857275, -0.4661162197589874, -0.014862877316772938, -0.05207444354891777, -0.0920879915356636, -0.9471657872200012, -1.3351351299206726e-05, -0.003872397355735302, -1.1920922133867862e-06, -6.437280717364047e-06, -1.4543427823809907e-05, -2.2411095415009186e-05, -0.02798791415989399, -0.06416153907775879, -0.2278740108013153, -0.0010332489619031549, -0.025464419275522232, -0.11408144980669022, -0.2987724542617798, -0.17550307512283325, -0.010678531602025032, -0.45062628388404846, -0.0009815642843022943, -0.21599631011486053, -0.0049413940869271755, -0.014874856919050217, -0.14163361489772797, -1.3206137418746948, -0.004167206585407257, -0.029519539326429367, -0.15340834856033325, -1.0216082334518433, -0.5476557612419128, -0.002027957234531641, -0.0005627478822134435, -0.3789558708667755, -0.00033396866638213396, -0.03066287562251091, -0.5591979026794434, -0.00146246247459203, -0.001320443581789732, -0.012986958958208561, -0.0026277319993823767, -0.7411608695983887, -0.0049677276983857155, -1.5224018096923828, -0.015559937804937363, -0.1309850662946701, -0.06502214819192886, -0.9756264090538025, -0.040415722876787186, -1.537318468093872, -0.024869468063116074, -0.019101599231362343, -0.009883278980851173, -0.02068401873111725, -0.03318298980593681, -0.0035569514147937298, -0.012135481461882591, -0.0033053308725357056, -0.0011199399596080184, -0.00762398075312376, -0.027729496359825134, -0.3132660984992981, -0.001416394836269319, -0.05012516677379608, -0.04950738698244095, -0.0010381315369158983, -1.3034143447875977, -5.006777428206988e-06, -1.311301275563892e-06, -0.00018702188390307128, -0.00011514954530866817, -0.05233965441584587], "finish_reason": "stop"}], "metrics": {"energy": 123.22278076362609, "energy_per_token": 1.0904670864037707, "time": 4.8516836, "time_per_token": 0.04293525309734514}}
{"outputs": [{"text": "text = re.sub(r'[^\\w\\s]', '', text) #remove all non-alphabet characters except space\n    words = nltk.wordpunct_tokenize(text) #split text into words\n\n    filtered_words = [w.lower() for w in words if w.lower() not in STOPWORDS and len(w) > 3] #remove stopwords, and words with length less than 3\n\n    #generate bigrams or trigrams from filtered words\n    n_gram_counter = Counter()\n    for word in filtered_words:\n        n_gram_counter.update(Counter(zip(filtered_words, filtered_words[1:])))\n        if len(word) > n + 1:\n            n_gram_counter.update(Counter(zip(word[-(n + 1):], word[-(n + 1) + 1:])))\n\n    return n_gram_counter", "tokens": ["text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", " #", "remove", " all", " non", "-", "alph", "abet", " characters", " except", " space", "\n", "    ", "words", " =", " n", "lt", "k", ".", "word", "punct", "_", "token", "ize", "(", "text", ")", " #", "split", " text", " into", " words", "\n", "\n", "    ", "filtered", "_", "words", " =", " [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " len", "(", "w", ")", " >", " ", "3", "]", " #", "remove", " stop", "words", ",", " and", " words", " with", " length", " less", " than", " ", "3", "\n", "\n", "    ", "#", "generate", " big", "rams", " or", " trig", "rams", " from", " filtered", " words", "\n", "    ", "n", "_", "gram", "_", "counter", " =", " Counter", "()", "\n", "    ", "for", " word", " in", " filtered", "_", "words", ":", "\n", "        ", "n", "_", "gram", "_", "counter", ".", "update", "(", "Counter", "(", "zip", "(", "filtered", "_", "words", ",", " filtered", "_", "words", "[", "1", ":]", ")))", "\n", "        ", "if", " len", "(", "word", ")", " >", " n", " +", " ", "1", ":", "\n", "            ", "n", "_", "gram", "_", "counter", ".", "update", "(", "Counter", "(", "zip", "(", "word", "[", "-(", "n", " +", " ", "1", "):", "]", ",", " word", "[", "-(", "n", " +", " ", "1", ")", " +", " ", "1", ":]", ")))", "\n", "\n", "    ", "return", " n", "_", "gram", "_", "counter"], "logprobs": [-2.2295403480529785, -0.07866950333118439, -1.1775381565093994, -0.00016985881666187197, -0.06941309571266174, -0.326351135969162, -0.1897422969341278, -0.878284215927124, -0.18394698202610016, -0.149446502327919, -0.0064459266141057014, -0.1966181993484497, -0.012817498296499252, -0.08189485967159271, -0.04115137830376625, -0.0001820160250645131, -0.21185098588466644, -0.0003466005437076092, -0.029877811670303345, -0.07850420475006104, -3.1386823654174805, -3.2920689582824707, -1.612716794013977, -0.7331367135047913, -0.09131968766450882, -1.841352939605713, -0.8695738315582275, -1.166496992111206, -3.2484776973724365, -1.514660358428955, -0.19413335621356964, -0.11012492328882217, -1.9690525531768799, -0.037317823618650436, -1.3975266218185425, -0.04885074496269226, -0.0002422039397060871, -0.000849482137709856, -0.06592465192079544, -1.2675127983093262, -7.664863369427621e-05, -0.0003933132975362241, -0.0003700763627421111, -0.0004873280122410506, -0.0032215621322393417, -0.13553257286548615, -0.8048275709152222, -1.4699705839157104, -1.0258028507232666, -0.20529969036579132, -0.32822340726852417, -0.29854997992515564, -1.4224681854248047, -0.0027501878794282675, -2.814290761947632, -0.1462201029062271, -0.1375548392534256, -0.01781861111521721, -0.25005850195884705, -0.5211039781570435, -0.7476159334182739, -0.016199510544538498, -0.0003159739135298878, -0.021331992000341415, -0.0004267973708920181, -0.000519617460668087, -0.003916808404028416, -0.06263116002082825, -0.1736811399459839, -0.284991979598999, -0.004464777186512947, -0.0010683787986636162, -0.011862804181873798, -9.941560711013153e-05, -0.003244614228606224, -9.536738616588991e-07, -3.6954811548639555e-06, -2.455681169521995e-05, -1.6689160474925302e-05, -1.531055212020874, -0.5854344367980957, -0.0007520469953306019, -0.0038007893599569798, -0.21851478517055511, -0.1696878969669342, -0.03004220686852932, -2.8434927463531494, -0.047064408659935, -0.3494632840156555, -0.4927433729171753, -0.18879492580890656, -0.0529361255466938, -2.1044869422912598, -2.9203600883483887, -0.5164146423339844, -1.2462314367294312, -0.44368216395378113, -0.6553770303726196, -0.016829414293169975, -0.08431841433048248, -0.19218730926513672, -0.37102338671684265, -0.4275093674659729, -0.0013136576162651181, -2.6169707775115967, -3.0988826751708984, -2.3197407722473145, -0.12381207197904587, -2.9891021251678467, -0.15487156808376312, -0.001091599464416504, -2.791184425354004, -0.5898140072822571, -0.5359628796577454, -0.16191324591636658, -0.012815144844353199, -2.9159975051879883, -0.02749745547771454, -0.9434291124343872, -0.3109988868236542, -2.1161017417907715, -0.015548553317785263, -0.026837218552827835, -1.544165015220642, -0.033578455448150635, -0.09426289051771164, -0.1731228530406952, -3.3561787605285645, -0.30882754921913147, -0.07547051459550858, -0.00012659224739763886, -1.2874520507466514e-05, -0.032940905541181564, -0.0210284274071455, -0.015017547644674778, -0.5842604637145996, -0.006642878521233797, -0.045678574591875076, -0.05795785039663315, -0.009627105668187141, -0.0539604052901268, -0.00015054999676067382, -0.48709288239479065, -0.8126347661018372, -0.054292526096105576, -0.48165953159332275, -0.219791978597641, -0.17881746590137482, -0.00011491115583339706, -7.10462118149735e-05, -0.051503609865903854, -0.03377290070056915, -0.000510204816237092, -2.861018856492592e-06, -0.007933060638606548, -0.001057542278431356, -0.004155097529292107, -0.04667685925960541, -0.30649688839912415, -1.2581260204315186, -1.2784863710403442, -1.2544142007827759, -0.0007609808817505836, -0.601615309715271, -0.025429321452975273, -0.6306319236755371, -0.8779428601264954, -2.573216438293457, -0.006008774973452091, -0.01708832010626793, -0.016086198389530182, -0.42033112049102783, -0.01134987361729145, -0.10020539909601212, -0.0007247682078741491, -0.0016104121459648013, -0.0058158463798463345, -0.00040904260822571814, -0.0035373514983803034, -0.001906721736304462, -0.02600744552910328, -0.05122492462396622, -0.010987966321408749, -0.09119749069213867, -0.012242412194609642, -0.589374840259552, -1.8070834875106812, -3.1261661052703857, -0.010228359140455723, -0.9227355718612671, -0.0038246591575443745, -0.010357084684073925, -0.11635022610425949, -0.01476938184350729, -0.00365256960503757, -0.22468236088752747, -0.12513579428195953, -0.2992570698261261, -0.0062813954427838326, -0.1398390382528305, -0.0015236446633934975, -0.05398209020495415, -0.41120433807373047, -0.029343249276280403, -0.00886327400803566, -0.0009954979177564383, -0.04901965707540512, -0.022842029109597206, -0.028481723740696907, -0.34856176376342773, -0.014102918095886707, -0.12839527428150177, -0.088898666203022, -0.0013154434273019433, -0.00026127262390218675, -9.65590606938349e-06, -5.769562994828448e-05], "finish_reason": "stop"}], "metrics": {"energy": 242.85285974693295, "energy_per_token": 1.1191376025204283, "time": 9.663275, "time_per_token": 0.04453122119815668}}
{"outputs": [{"text": "result = Counter()\n    words = nltk.word_tokenize(text)\n    for word in words:\n        if not word in STOPWORDS:\n            result[tuple(word)] += 1\n    return result", "tokens": ["result", " =", " Counter", "()", "\n", "    ", "words", " =", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "text", ")", "\n", "    ", "for", " word", " in", " words", ":", "\n", "        ", "if", " not", " word", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "            ", "result", "[", "tuple", "(", "word", ")]", " +=", " ", "1", "\n", "    ", "return", " result"], "logprobs": [-3.3446831703186035, -0.05202103033661842, -0.4372519552707672, -0.10726633667945862, -0.02494632825255394, -0.5621797442436218, -1.5806459188461304, -0.032821979373693466, -2.1499695777893066, -0.13164544105529785, -0.0008529362385161221, -0.005291266832500696, -0.12644241750240326, -0.5962775349617004, -0.001121845212765038, -0.0003914067056030035, -0.0019016055157408118, -0.010870052501559258, -0.0800352618098259, -0.012487320229411125, -0.3335602879524231, -1.0051227807998657, -1.735436201095581, -0.02660752460360527, -0.0621962770819664, -0.015163036063313484, -0.00657573202624917, -0.020586978644132614, -0.4189999997615814, -2.4984278678894043, -0.4152379035949707, -0.6985008716583252, -0.004418372642248869, -9.536738616588991e-07, -4.887569048150908e-06, -2.1815061700181104e-05, -1.5020257706055418e-05, -0.0439966544508934, -0.015630943700671196, -0.009267644956707954, -0.5360287427902222, -0.3864290118217468, -0.5495120286941528, -0.05238863825798035, -0.7440409064292908, -2.036069393157959, -0.07848160713911057, -0.021469565108418465, -0.00016664070426486433, -0.007906332612037659, -0.2899691164493561, -0.2364010065793991, -0.11671912670135498], "finish_reason": "stop"}], "metrics": {"energy": 57.91161395740508, "energy_per_token": 1.0926719614604732, "time": 2.946545, "time_per_token": 0.05559518867924528}}
{"outputs": [{"text": "# Remove stopwords from text and convert to lowercase\n    clean_text = ' '.join([word for word in text.split() if word.lower() not in STOPWORDS])\n    clean_text = re.sub(r\"[^A-Za-z\\s]\", \"\", clean_text.lower())\n\n    # Generate n-grams using the nltk library\n    ngrams = Counter(nltk.ngrams(clean_text.split(), n))\n\n    return ngrams", "tokens": ["#", " Remove", " stop", "words", " from", " text", " and", " convert", " to", " lower", "case", "\n", "    ", "clean", "_", "text", " =", " '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "    ", "clean", "_", "text", " =", " re", ".", "sub", "(", "r", "\"", "[", "^", "A", "-", "Z", "a", "-", "z", "\\", "s", "]\"", ",", " \"", "\"", ",", " clean", "_", "text", ".", "lower", "())", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", " using", " the", " n", "lt", "k", " library", "\n", "    ", "ng", "rams", " =", " Counter", "(", "nl", "tk", ".", "ng", "rams", "(", "clean", "_", "text", ".", "split", "()", ",", " n", "))", "\n", "\n", "    ", "return", " n", "grams"], "logprobs": [-0.8722405433654785, -1.298819899559021, -1.8121676445007324, -0.02983800880610943, -1.8775877952575684, -0.9412391185760498, -2.2432641983032227, -1.7603765726089478, -0.36521396040916443, -0.06969954818487167, -0.11502630263566971, -0.18731094896793365, -0.0016179102240130305, -3.3796732425689697, -0.01827252097427845, -0.01152736134827137, -0.002226970624178648, -0.8180029392242432, -0.0005766874528490007, -6.115249561844394e-05, -0.0001397035230183974, -0.2719407081604004, -0.1604803055524826, -0.3751141428947449, -0.00017617580306250602, -0.0004532501916401088, -0.5626965761184692, -0.012851511128246784, -0.6794658899307251, -0.05340104550123215, -0.018593188375234604, -0.023231470957398415, -0.4078856110572815, -0.034949030727148056, -0.00031406714697368443, -0.00420008972287178, -2.0146166207268834e-05, -0.0031742684077471495, -8.344646857949556e-07, -6.6756979322235566e-06, -1.4662635294371285e-05, -1.9907753085135482e-05, -0.010040136985480785, -0.33289217948913574, -1.4024336338043213, -1.142447829246521, -0.0007908792467787862, -0.0066714175045490265, -0.013753293082118034, -0.7463556528091431, -5.149708886165172e-05, -0.007268296089023352, -0.2728174328804016, -0.122061587870121, -1.460278868675232, -0.5169013142585754, -0.7319838404655457, -1.886290431022644, -8.320462075062096e-05, -0.001610174193046987, -0.0020004753023386, -6.318072337307967e-06, -8.22540732769994e-06, -2.1773488521575928, -0.10740809887647629, -0.598115861415863, -0.0001358893496217206, -0.10723217576742172, -0.2500753104686737, -0.0003023882454726845, -0.008228922262787819, -2.145764938177308e-06, -4.0531076592742465e-06, -2.872969150543213, -0.07661177963018417, -0.0051302220672369, -0.04280976206064224, -0.22271211445331573, -0.0011564955348148942, -0.023580824956297874, -0.56029212474823, -0.08674561232328415, -0.25667932629585266, -0.012297757901251316, -1.901482343673706, -2.6177423000335693, -0.5539490580558777, -0.13074681162834167, -1.549708758830093e-05, -1.3306846618652344, -0.0890214666724205, -0.0016680150292813778, -0.4636511206626892, -0.012316597625613213, -0.03811967745423317, -0.4494212865829468, -0.42164531350135803, -0.2133941650390625, -8.34430247778073e-05, -0.00012337400403339416, -0.12430667132139206, -0.004609198309481144, -0.0018576999427750707, -0.03504733368754387, -0.002142754616215825, -3.325883881188929e-05, -0.03241201862692833, -0.002121580531820655, -0.014179433695971966, -0.00045503751607611775, -0.005316049791872501, -0.06080389767885208, -0.008806319907307625, -0.1289306879043579, -0.0002817710628733039, -0.09797757863998413, -0.019954880699515343, -0.0007192885386757553], "finish_reason": "stop"}], "metrics": {"energy": 156.01108666038508, "energy_per_token": 1.3221278530541107, "time": 5.888816, "time_per_token": 0.04990522033898305}}
{"outputs": [{"text": "# Remove duplicate and stopwords\n    text_cleaned = ' '.join(word for word in text.split()\n                                   if not word in STOPWORDS and len(word) > 1)\n\n    # Generate n-grams\n    ngrams = Counter(ngrams.ngrams(text_cleaned, n))\n    return ngrams", "tokens": ["#", " Remove", " duplicate", " and", " stop", "words", "\n", "    ", "text", "_", "cleaned", " =", " '", " '", ".", "join", "(", "word", " for", " word", " in", " text", ".", "split", "()", "\n", "                ", "                ", "   ", "if", " not", " word", " in", " ST", "OP", "W", "OR", "DS", " and", " len", "(", "word", ")", " >", " ", "1", ")", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " Counter", "(", "ng", "rams", ".", "ng", "rams", "(", "text", "_", "cleaned", ",", " n", "))", "\n", "    ", "return", " n", "grams", "\n", "\n", "if"], "logprobs": [-0.8722405433654785, -1.298819899559021, -0.45594552159309387, -0.49173903465270996, -0.01823740452528, -0.00851417612284422, -1.580498218536377, -0.004690833389759064, -0.7138970494270325, -2.6166718006134033, -2.3445351123809814, -0.004422883037477732, -1.4800686836242676, -0.0012381753185763955, -0.0002195594133809209, -0.0001711698860162869, -0.598720133304596, -2.7636804580688477, -0.08073410391807556, -0.00022802136663813144, -0.0021296695340424776, -0.6272999048233032, -0.010885028168559074, -0.16119444370269775, -0.047797009348869324, -2.953442096710205, -0.10414789617061615, -2.476655960083008, -2.1908087730407715, -0.0007401349139399827, -2.6396472454071045, -0.42841580510139465, -0.2621677815914154, -0.004403655882924795, -1.0728830375228426e-06, -1.1920858014491387e-05, -6.9141146923357155e-06, -1.7165990357170813e-05, -2.8005588054656982, -1.6089121103286743, -0.0009280903614126146, -0.006841212511062622, -0.1260424107313156, -0.17112348973751068, -0.043074820190668106, -0.81356281042099, -0.02320118620991707, -0.020837556570768356, -0.1984756886959076, -0.001555662602186203, -0.053352225571870804, -0.2766128182411194, -0.3014847934246063, -0.3792939782142639, -0.017355358228087425, -0.05681321769952774, -0.0019442004850134254, -0.4867970049381256, -0.018193624913692474, -0.07611057907342911, -0.32724228501319885, -0.27842918038368225, -1.6970820426940918, -0.17587488889694214, -3.2314627170562744, -0.28528526425361633, -0.12223176658153534, -0.009947016835212708, -0.4574096202850342, -0.016471127048134804, -0.0011375630274415016, -0.22866597771644592, -0.04611056670546532, -0.12400995939970016, -0.021303752437233925, -1.4603121280670166, -0.047005269676446915, -0.029471505433321, -0.000871278636623174, -0.7561748623847961, -0.029109960421919823, -1.28449547290802], "finish_reason": "stop"}], "metrics": {"energy": 96.57758218383788, "energy_per_token": 1.1777753924858279, "time": 3.379144, "time_per_token": 0.04120907317073171}}
{"outputs": [{"text": "ngrams_count = Counter()\n\n    # remove stopwords and duplicate n-grams\n    words = re.sub(r'\\W', ' ', text.lower()).split()\n    words = [word for word in words if word not in STOPWORDS]\n    words = [word for _, word in Counter(words).items()]\n\n    # generate n-grams\n    ngrams_list = list(zip(words, words[1:]))\n    ngrams_count.update(Counter(ngrams_list))\n\n    # remove n-grams with n smaller than n\n    if n is None:\n        ngrams = ngrams_count\n    else:\n        ngrams = {n_gram: count for n_gram, count in ngrams_count.items() if len(n_gram) == n}\n\n    return ngrams", "tokens": ["ng", "rams", "_", "count", " =", " Counter", "()", "\n", "\n", "    ", "#", " remove", " stop", "words", " and", " duplicate", " n", "-", "grams", "\n", "    ", "words", " =", " re", ".", "sub", "(", "r", "'\\", "W", "'", ",", " '", " '", ",", " text", ".", "lower", "())", ".", "split", "()", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "words", " =", " [", "word", " for", " _", ",", " word", " in", " Counter", "(", "words", ")", ".", "items", "()", "]", "\n", "\n", "    ", "#", " generate", " n", "-", "grams", "\n", "    ", "ng", "rams", "_", "list", " =", " list", "(", "zip", "(", "words", ",", " words", "[", "1", ":]", "))", "\n", "    ", "ng", "rams", "_", "count", ".", "update", "(", "Counter", "(", "ng", "rams", "_", "list", "))", "\n", "\n", "    ", "#", " remove", " n", "-", "grams", " with", " n", " smaller", " than", " n", "\n", "    ", "if", " n", " is", " None", ":", "\n", "        ", "ng", "rams", " =", " n", "grams", "_", "count", "\n", "    ", "else", ":", "\n", "        ", "ng", "rams", " =", " {", "n", "_", "gram", ":", " count", " for", " n", "_", "gram", ",", " count", " in", " n", "grams", "_", "count", ".", "items", "()", " if", " len", "(", "n", "_", "gram", ")", " ==", " n", "}", "\n", "\n", "    ", "return", " n", "grams", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.8480401039123535, -0.05580662935972214, -2.330327272415161, -2.4267284870147705, -0.0904519110918045, -0.1286027431488037, -0.05643686279654503, -0.03077084943652153, -0.7136799097061157, -0.0020873204339295626, -0.6854621171951294, -2.31496524810791, -1.292495608329773, -0.05029601603746414, -1.0602926015853882, -0.768811047077179, -1.812244176864624, -1.08260178565979, -0.020197324454784393, -0.3271966576576233, -0.0034456427674740553, -1.056443214416504, -0.04265248030424118, -1.8268940448760986, -0.00018189683032687753, -1.476848840713501, -0.16365481913089752, -0.11385392397642136, -1.3908480405807495, -0.4217948019504547, -1.3098766803741455, -0.00018308870494365692, -0.10035237669944763, -0.003625726094469428, -0.0007408496458083391, -0.023119768127799034, -2.844263792037964, -0.052779972553253174, -0.013260742649435997, -0.025565285235643387, -0.13866853713989258, -0.05920005217194557, -0.025615250691771507, -0.07034831494092941, -0.44975924491882324, -0.12247352302074432, -0.054789770394563675, -0.4035881757736206, -0.018346143886446953, -0.0024688737466931343, -0.0010642108973115683, -0.04398319125175476, -0.007418465800583363, -0.10109944641590118, -0.014919133856892586, -8.4638240878121e-06, -0.0027607681695371866, -8.344646857949556e-07, -3.933898824470816e-06, -4.0411134250462055e-05, -1.645074735279195e-05, -0.04835326224565506, -0.004563631024211645, -0.7439209222793579, -0.5582475066184998, -0.1674240529537201, -0.31995195150375366, -0.3849922716617584, -0.07909761369228363, -1.9285519123077393, -0.5333763360977173, -0.04639250412583351, -0.004378256853669882, -0.2284739911556244, -0.0037005534395575523, -0.04337553307414055, -0.012037844397127628, -8.785339014139026e-05, -1.8603813648223877, -0.002021057065576315, -0.019594088196754456, -0.012645537033677101, -0.20879791676998138, -0.0003657863999251276, -0.4796201288700104, -0.1915314793586731, -0.10410654544830322, -0.10236714035272598, -0.018637536093592644, -0.12625929713249207, -0.0007033258443698287, -1.5972468852996826, -0.006338255945593119, -1.7001556158065796, -1.4319137334823608, -0.0019427727675065398, -1.956924319267273, -0.15576358139514923, -0.20326155424118042, -0.4174572229385376, -0.12112759053707123, -0.23652663826942444, -0.033044252544641495, -0.00472619105130434, -0.02162414975464344, -0.007649533916264772, -0.03636405989527702, -0.013140390627086163, -0.3031361401081085, -0.2910861074924469, -0.009790497832000256, -0.10648742318153381, -0.36612266302108765, -0.09545302391052246, -0.0001760566228767857, -0.20188717544078827, -1.761049747467041, -0.01966024935245514, -0.0159185528755188, -0.00029392691794782877, -0.002200088929384947, -5.1616290875244886e-05, -0.1189924106001854, -0.0034242586698383093, -0.0772644653916359, -0.0005216429708525538, -1.3110568523406982, -2.0486862659454346, -1.3651877641677856, -0.3202437460422516, -0.03172175958752632, -1.1164038181304932, -2.8443071842193604, -2.3994762897491455, -0.05516335740685463, -0.3573799133300781, -0.27902403473854065, -0.0006293461774475873, -2.514749050140381, -0.07733674347400665, -2.5126471519470215, -2.9399688243865967, -0.2421472817659378, -0.016366874799132347, -0.003195063676685095, -0.8477334976196289, -0.0034937553573399782, -2.1402475833892822, -0.6510460376739502, -0.002300951164215803, -0.0025849281810224056, -0.12614087760448456, -0.26568520069122314, -0.030060023069381714, -0.07245531678199768, -0.00013302871957421303, -0.000291662581730634, -0.0004459816846065223, -0.06783716380596161, -0.00037019551382400095, -0.019424689933657646, -0.36283573508262634, -2.6679930686950684, -0.2409384399652481, -0.03356139361858368, -0.058549292385578156, -0.20087851583957672, -0.034732360392808914, -0.02290063537657261, -0.0006227937992662191, -0.0005199749139137566, -0.002295123180374503, -0.001420085085555911, -0.0014116332167759538, -0.007750676013529301, -0.001279131742194295, -0.009353979490697384, -0.0009509570081718266, -0.002756488509476185, -0.01006704568862915, -0.0008859285153448582, -0.02340557985007763, -0.2513001263141632, -0.0002653246629051864, -0.01518276147544384, -0.0001515035255579278, -1.847726889536716e-05, -0.12369673699140549, -1.1097607612609863, -0.004920516163110733, -0.008104770444333553, -0.0005304598016664386, -0.0768224373459816, -0.001142564113251865, -0.04726262018084526, -0.09392283856868744, -0.00147162820212543, -1.4374183416366577, -9.536738616588991e-07, -1.5497195136049413e-06, -0.00024875884992070496, -0.00028427375946193933, -0.07843399792909622], "finish_reason": "stop"}], "metrics": {"energy": 224.08504183578484, "energy_per_token": 1.1038672011615016, "time": 9.869486, "time_per_token": 0.04861815763546798}}
{"outputs": [{"text": "# Remove duplicate and stopwords\n    clean_text = ' '.join([word for word in re.split('\\s+', text) if word not in STOPWORDS])\n\n    # Generate n-grams\n    ngrams = Counter(nltk.ngrams(clean_text.split(), n))\n    return ngrams", "tokens": ["#", " Remove", " duplicate", " and", " stop", "words", "\n", "    ", "clean", "_", "text", " =", " '", " '", ".", "join", "([", "word", " for", " word", " in", " re", ".", "split", "('", "\\", "s", "+'", ",", " text", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " Counter", "(", "nl", "tk", ".", "ng", "rams", "(", "clean", "_", "text", ".", "split", "()", ",", " n", "))", "\n", "    ", "return", " n", "grams", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8722405433654785, -1.298819899559021, -0.45594552159309387, -0.49173903465270996, -0.01823740452528, -0.00851417612284422, -1.580498218536377, -0.004690833389759064, -3.2181103229522705, -0.06312494724988937, -0.03605823963880539, -0.003381964284926653, -1.1862455606460571, -0.001141730579547584, -0.00014602071314584464, -0.00021169328829273582, -0.8962485194206238, -0.3204719126224518, -0.052334338426589966, -0.000277123210253194, -0.0013896104646846652, -1.1197035312652588, -0.00018892886873800308, -1.6612355709075928, -0.8012701272964478, -0.5050848722457886, -1.743769884109497, -0.1136997640132904, -0.00013076403411105275, -0.035108912736177444, -0.13015764951705933, -0.04746965691447258, -0.17388954758644104, -0.6149321794509888, -1.597391747054644e-05, -0.0074952575378119946, -8.344646857949556e-07, -5.8412379075889476e-06, -1.156323378381785e-05, -1.823885577323381e-05, -0.03986603394150734, -0.04263671487569809, -0.28130409121513367, -0.0008214913541451097, -0.026030095294117928, -0.17599286139011383, -0.18571023643016815, -0.22270342707633972, -0.014690562151372433, -0.047907695174217224, -0.0010149095905944705, -0.23165112733840942, -0.007502711843699217, -0.027425779029726982, -0.23998135328292847, -0.6534567475318909, -1.1187329292297363, -0.00018904806347563863, -0.0003134713042527437, -0.09272479265928268, -0.004009661264717579, -0.00651154201477766, -0.014248657040297985, -5.61460001335945e-05, -3.0040289857424796e-05, -0.09812197089195251, -0.013337322510778904, -0.09304624050855637, -0.0004213160718791187, -0.008404836058616638, -0.05253206938505173, -0.008549753576517105, -2.2052128314971924, -0.03653256595134735, -0.028746549040079117, -0.0007773000397719443, -1.322291374206543, -3.933898824470816e-06, -8.344646857949556e-07, -0.00016973962192423642, -0.00019012074335478246, -0.05459936708211899], "finish_reason": "stop"}], "metrics": {"energy": 97.60050224304197, "energy_per_token": 1.1902500273541703, "time": 3.5905397, "time_per_token": 0.04378706951219512}}
{"outputs": [{"text": "# Remove duplicate and stopwords from the text\n    clean_text = \" \".join(re.findall(r'\\w+', text)).lower()\n    word_list = clean_text.split()\n\n    # Generate ngrams\n    ngrams = Counter()\n    for i in range(len(word_list) - n + 1):\n        ngrams[tuple(word_list[i:i+n])] += 1\n\n    return ngrams", "tokens": ["#", " Remove", " duplicate", " and", " stop", "words", " from", " the", " text", "\n", "    ", "clean", "_", "text", " =", " \"", " \"", ".", "join", "(", "re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", "))", ".", "lower", "()", "\n", "    ", "word", "_", "list", " =", " clean", "_", "text", ".", "split", "()", "\n", "\n", "    ", "#", " Generate", " n", "grams", "\n", "    ", "ng", "rams", " =", " Counter", "()", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "word", "_", "list", ")", " -", " n", " +", " ", "1", "):", "\n", "        ", "ng", "rams", "[", "tuple", "(", "word", "_", "list", "[", "i", ":", "i", "+", "n", "]", ")]", " +=", " ", "1", "\n", "\n", "    ", "return", " n", "grams"], "logprobs": [-0.8722405433654785, -1.298819899559021, -0.45594552159309387, -0.49173903465270996, -0.01823740452528, -0.00851417612284422, -0.30759865045547485, -0.31082165241241455, -0.20553936064243317, -0.3189467489719391, -0.0034898349549621344, -2.6214780807495117, -0.029095718637108803, -0.012691090814769268, -0.0033852909691631794, -1.596257209777832, -0.11391796171665192, -0.0001560327800689265, -0.00012146688823122531, -0.5531942248344421, -0.3609330952167511, -0.00028355870745144784, -0.6075248718261719, -2.753696753643453e-05, -0.0337752066552639, -0.08834280073642731, -0.2896706759929657, -0.12399058789014816, -0.016974404454231262, -4.649054244509898e-05, -0.04751160368323326, -0.3627413511276245, -1.734002947807312, -0.1266292780637741, -0.0005221195751801133, -0.1131754070520401, -0.5080478191375732, -3.501332998275757, -0.03822547197341919, -0.39705538749694824, -0.002304638037458062, -0.7048947811126709, -0.00021836756786797196, -1.7165990357170813e-05, -0.0008848565630614758, -0.024466240778565407, -0.0959613025188446, -0.00558802904561162, -0.8448859453201294, -0.0009472650708630681, -0.11854685097932816, -0.6876370310783386, -0.5410444736480713, -1.6519091129302979, -0.3441213369369507, -0.0007738456479273736, -0.15550687909126282, -0.022695789113640785, -0.050555016845464706, -0.19346024096012115, -0.7603951096534729, -0.005298144184052944, -0.014985253103077412, -0.03751808777451515, -0.08816348761320114, -0.0012400802224874496, -0.0002195594133809209, -0.0005494038923643529, -0.18740880489349365, -0.00010442188795423135, -0.0010127659188583493, -4.887569048150908e-06, -2.50339189733495e-06, -0.15201117098331451, -0.0007712250226177275, -0.09827141463756561, -0.05908948555588722, -0.0009505997295491397, -0.00035684893373399973, -0.0003064401389565319, -0.001800226978957653, -0.0031241201795637608, -0.01765804924070835, -0.08839671313762665, -0.3376323878765106, -0.02264544554054737, -0.0002746204845607281, -0.00031144535751082003, -1.0013530300057027e-05, -9.536738616588991e-07, -1.07287787614041e-05, -7.70062324590981e-05, -0.01729724556207657, -0.01990474946796894, -0.5448978543281555, -0.0005415403284132481, -7.855583680793643e-05, -3.7431014789035544e-05, -0.003195420140400529, -0.002051393734291196, -1.764281842042692e-05, -0.002085179090499878, -0.07131795585155487, -0.0006681832019239664, -0.04812970757484436, -0.024922840297222137, -0.001057661371305585], "finish_reason": "stop"}], "metrics": {"energy": 156.4590534734726, "energy_per_token": 1.4622341446118936, "time": 5.4634237, "time_per_token": 0.05106003457943925}}
{"outputs": [{"text": "# remove stopwords from text\n    words = set(re.findall('[^\\W\\d_]+', text)) - STOPWORDS\n\n    # generate ngrams\n    ngrams = Counter(nltk.ngrams(words, n))\n\n    return ngrams", "tokens": ["#", " remove", " stop", "words", " from", " text", "\n", "    ", "words", " =", " set", "(", "re", ".", "find", "all", "('", "[", "^\\", "W", "\\", "d", "_", "]+", "'", ",", " text", "))", " -", " ST", "OP", "W", "OR", "DS", "\n", "\n", "    ", "#", " generate", " n", "grams", "\n", "    ", "ng", "rams", " =", " Counter", "(", "nl", "tk", ".", "ng", "rams", "(", "words", ",", " n", "))", "\n", "\n", "    ", "return", " n", "grams", "\n", "\n", "#"], "logprobs": [-0.8722405433654785, -2.450594425201416, -1.5877900123596191, -0.05272151157259941, -2.0462918281555176, -0.5070344805717468, -0.22754791378974915, -0.0053735580295324326, -1.719435214996338, -0.058371301740407944, -3.3776912689208984, -0.19411303102970123, -1.0334855318069458, -0.0004180987598374486, -0.3457980155944824, -0.0004532501916401088, -2.616884708404541, -0.7309674024581909, -2.3349530696868896, -0.17630521953105927, -0.1628669649362564, -0.015180295333266258, -0.4118764102458954, -0.1389651894569397, -0.05301877111196518, -0.0005504761938937008, -0.03300768882036209, -0.24956366419792175, -0.5747718811035156, -0.00562027283012867, -5.960462772236497e-07, -2.622600959512056e-06, -1.6927575416048057e-05, -1.4066597032069694e-05, -0.011076981201767921, -0.5370861887931824, -0.0011470888275653124, -0.07877527922391891, -0.5634415745735168, -0.2945699393749237, -0.5424528121948242, -0.5405052900314331, -0.001347229932434857, -0.4493483603000641, -0.015745598822832108, -0.0412340871989727, -0.18018099665641785, -0.9343386292457581, -1.093867301940918, -0.0002356490003876388, -0.0005615564878098667, -0.10710730403661728, -0.003424733877182007, -0.006557493936270475, -0.019822126254439354, -0.00047874910524114966, -0.005510023329406977, -0.04793485254049301, -0.009979356080293655, -0.22276124358177185, -0.00048756631440483034, -0.06510838121175766, -0.026318443939089775, -0.0005511910421773791, -0.9692933559417725, -0.018411684781312943, -1.615539789199829], "finish_reason": "stop"}], "metrics": {"energy": 79.78150690078735, "energy_per_token": 1.190768759713244, "time": 3.5713756, "time_per_token": 0.05330411343283582}}
{"outputs": [{"text": "text = re.sub(r'\\W+', '', text.lower())\n    words = text.split()\n    counter = Counter([tuple(words[i:i + n]) for i in range(len(words) - n + 1)])\n    return counter", "tokens": ["text", " =", " re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " ''", ",", " text", ".", "lower", "())", "\n", "    ", "words", " =", " text", ".", "split", "()", "\n", "    ", "counter", " =", " Counter", "([", "tuple", "(", "words", "[", "i", ":", "i", " +", " n", "])", " for", " i", " in", " range", "(", "len", "(", "words", ")", " -", " n", " +", " ", "1", ")]", ")", "\n", "    ", "return", " counter", "\n", "\n", "if"], "logprobs": [-2.2295403480529785, -0.07866950333118439, -1.1775381565093994, -0.00016985881666187197, -0.06941309571266174, -0.326351135969162, -0.1897422969341278, -1.6312634944915771, -0.6684677600860596, -0.23286330699920654, -0.0002240883477497846, -2.613187313079834, -0.0003694805200211704, -0.02051725797355175, -2.657616138458252, -0.06495210528373718, -0.014798042364418507, -0.14454124867916107, -0.29749006032943726, -1.1673049926757812, -0.03922617807984352, -1.110492467880249, -0.0027607681695371866, -0.02489911951124668, -0.05434807762503624, -0.01026175171136856, -0.2655915915966034, -3.0323915481567383, -0.016751226037740707, -0.009111137129366398, -2.1837005615234375, -0.598050594329834, -0.010679002851247787, -0.19099922478199005, -0.003819077741354704, -0.019810672849416733, -0.04510430991649628, -0.047927580773830414, -1.0893192291259766, -0.0018861376447603106, -0.0011624491307884455, -0.034063175320625305, -0.0004993622424080968, -0.003042832249775529, -0.0007066613179631531, -0.00029583368450403214, -0.042609184980392456, -0.00014244495832826942, -0.0014352031284943223, -0.018977386876940727, -0.001029200037010014, -0.04257651045918465, -0.24360285699367523, -0.0007545484695583582, -0.00014053787162993103, -0.005127849988639355, -0.0006187431863509119, -0.004155453760176897, -0.16556480526924133, -0.08424806594848633, -0.09365594387054443, -0.5130590796470642, -0.023586180061101913, -1.4999581575393677], "finish_reason": "stop"}], "metrics": {"energy": 98.89577714920044, "energy_per_token": 1.545246517956257, "time": 3.5762732, "time_per_token": 0.05587926875}}
{"outputs": [{"text": "# Remove duplicate words\n    text_list = [word for word in text.split() if word.lower() not in STOPWORDS]\n\n    # Generate n-grams\n    ngrams_list = nltk.ngrams(text_list, n)\n\n    # Count the occurrences of the n-grams in the text\n    ngrams_count = Counter(ngrams_list)\n\n    return ngrams_count", "tokens": ["#", " Remove", " duplicate", " words", "\n", "    ", "text", "_", "list", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", "_", "list", " =", " n", "lt", "k", ".", "ng", "rams", "(", "text", "_", "list", ",", " n", ")", "\n", "\n", "    ", "#", " Count", " the", " occurrences", " of", " the", " n", "-", "grams", " in", " the", " text", "\n", "    ", "ng", "rams", "_", "count", " =", " Counter", "(", "ng", "rams", "_", "list", ")", "\n", "\n", "    ", "return", " n", "grams", "_", "count", "\n", "\n", "def"], "logprobs": [-0.8722405433654785, -1.298819899559021, -0.45594552159309387, -1.3484132289886475, -1.0767922401428223, -0.003633802989497781, -0.8437734842300415, -2.5592286586761475, -1.6876307725906372, -0.005241699051111937, -0.9425958395004272, -0.3054981529712677, -0.40523794293403625, -0.0011316093150526285, -0.0029905380215495825, -0.8862850069999695, -0.00672008516266942, -0.07768677920103073, -0.07958795875310898, -0.05009942874312401, -0.06876417249441147, -1.056891679763794, -0.038475800305604935, -0.0005933669744990766, -0.009027381427586079, -7.164221460698172e-05, -0.005548196844756603, -9.536738616588991e-07, -2.622600959512056e-06, -1.1920858014491387e-05, -1.2397689715726301e-05, -0.0255113672465086, -0.0026590011548250914, -0.2630653977394104, -0.0009554826538078487, -0.04805983603000641, -0.8275918364524841, -0.15738612413406372, -0.2900402843952179, -0.014895292930305004, -0.10755402594804764, -0.0019462230848148465, -0.16194884479045868, -0.008839641697704792, -2.6696865558624268, -0.38218167424201965, -0.0015242397785186768, -2.303464889526367, -2.454556465148926, -0.0013683013385161757, -0.007415152620524168, -0.4067099988460541, -0.001465438399463892, -0.014187542721629143, -0.010746699757874012, -0.0032410495914518833, -5.07818695041351e-05, -0.0005264088395051658, -0.006347732152789831, -0.2273605614900589, -0.008493254892528057, -0.21574078500270844, -0.0003499372396618128, -0.1141841858625412, -0.29954415559768677, -1.054612636566162, -1.4272979497909546, -0.017143866047263145, -3.061523199081421, -0.006096457596868277, -0.028813380748033524, -0.0030110995285212994, -2.0579745769500732, -0.08375923335552216, -0.03726177662611008, -0.02776404842734337, -0.0007376333815045655, -0.49055007100105286, -0.014274981804192066, -0.2308148741722107, -0.772129237651825, -0.013230273500084877, -0.005110652651637793, -0.022571906447410583, -0.004215640481561422, -2.276871418871451e-05, -0.0011252983240410686, -2.4914430468925275e-05, -0.00195526541210711, -0.003799482947215438, -0.03674516826868057, -0.0002632986579556018, -0.11021258682012558, -0.01350928284227848, -0.0006504327175207436, -0.00012444675667211413, -0.0001382732152706012, -0.6798568367958069, -0.024273233488202095, -1.2053093910217285], "finish_reason": "stop"}], "metrics": {"energy": 110.04325294685367, "energy_per_token": 1.1004325294685366, "time": 4.208403, "time_per_token": 0.042084029999999994}}
{"outputs": [{"text": "result = Counter()\n    text = text.replace(',', ' ').replace('.', ' ').replace('!', ' ')\n    for word in re.sub(r\"\\W+\", ' ', text).split():\n        if word not in STOPWORDS:\n            result[word] += 1\n        for i in range(n-1):\n            result[word[:i+1], word[i+1:]] += 1\n    return result", "tokens": ["result", " =", " Counter", "()", "\n", "    ", "text", " =", " text", ".", "replace", "('", ",", "'", ",", " '", " '", ")", ".", "replace", "('", ".", "'", ",", " '", " '", ")", ".", "replace", "('", "!", "'", ",", " '", " '", ")", "\n", "    ", "for", " word", " in", " re", ".", "sub", "(", "r", "\"", "\\", "W", "+", "\"", ",", " '", " '", ",", " text", ")", ".", "split", "():", "\n", "        ", "if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "            ", "result", "[", "word", "]", " +=", " ", "1", "\n", "        ", "for", " i", " in", " range", "(", "n", "-", "1", "):", "\n", "            ", "result", "[", "word", "[:", "i", "+", "1", "]", ",", " word", "[", "i", "+", "1", ":", "]]", " +=", " ", "1", "\n", "    ", "return", " result", "\n", "\n", "def"], "logprobs": [-3.3446831703186035, -0.05202103033661842, -0.4372519552707672, -0.10726633667945862, -0.02494632825255394, -0.5621797442436218, -1.9627317190170288, -0.1878291666507721, -1.1669191122055054, -0.004786462057381868, -1.2352840900421143, -0.4829142689704895, -1.8002935647964478, -0.011423182673752308, -0.0011978124966844916, -0.16444183886051178, -0.819866418838501, -0.0012955614365637302, -0.7141514420509338, -0.1520049273967743, -0.026799269020557404, -0.3092211186885834, -0.0017091918271034956, -0.00021634146105498075, -0.01259032916277647, -0.0296857301145792, -0.002357919467613101, -0.48493993282318115, -0.5733742713928223, -0.06003822013735771, -1.6611497402191162, -0.0007432320853695273, -0.000163541772053577, -0.005080290138721466, -0.025232665240764618, -0.002884277608245611, -2.5882415771484375, -0.0859491229057312, -2.285562753677368, -1.4198909997940063, -0.009031988680362701, -1.0584943294525146, -8.49926145747304e-05, -1.5260462760925293, -0.3624362647533417, -0.10889215022325516, -1.3746724128723145, -1.4017729759216309, -0.4319172203540802, -0.5633741617202759, -0.03543216735124588, -0.00034445550409145653, -1.4125417470932007, -0.003976653330028057, -0.0009637002367526293, -0.032391130924224854, -0.08227668702602386, -0.0009947833605110645, -0.18642745912075043, -0.2051423043012619, -0.026219626888632774, -0.01141281146556139, -0.3752806782722473, -0.14634470641613007, -0.7543981075286865, -9.405170567333698e-05, -0.005536816082894802, -8.344646857949556e-07, -2.50339189733495e-06, -4.0531076592742465e-06, -1.680836794548668e-05, -0.09739040583372116, -0.013735538348555565, -0.005240157246589661, -0.6379075646400452, -0.41209810972213745, -0.9166271686553955, -0.6357668042182922, -0.07011350989341736, -0.00987135712057352, -0.00029595286468975246, -0.00587332621216774, -2.981649875640869, -1.1638118028640747, -0.47364428639411926, -0.002693836111575365, -0.0030332054011523724, -0.003229523543268442, -1.3263258934020996, -1.23653244972229, -0.013560089282691479, -0.17061081528663635, -0.014992534182965755, -0.004699020646512508, -0.7864099740982056, -0.27310070395469666, -0.5143898725509644, -2.2387399673461914, -0.3116028904914856, -0.12997353076934814, -0.1324785202741623, -0.3464449346065521, -0.33314236998558044, -0.07885812968015671, -0.06846632063388824, -0.0689050480723381, -0.03083280846476555, -0.0029199367854744196, -0.006302599795162678, -0.11850152909755707, -0.12493759393692017, -0.010169477201998234, -0.0006742588011547923, -0.00967397727072239, -0.24616970121860504, -0.03845423460006714, -0.03135848790407181, -0.9549893140792847, -0.03234242647886276, -1.156197190284729], "finish_reason": "stop"}], "metrics": {"energy": 165.98126874160755, "energy_per_token": 1.3831772395133963, "time": 6.1005945, "time_per_token": 0.050838287499999996}}
{"outputs": [{"text": "text = text.lower()\n    tokens = re.findall(r\"\\w+\\S*|[\\s.]\", text)\n    tokens = [t.strip() for t in tokens if t.strip() not in STOPWORDS]\n    ngrams = Counter([t[0:n] for t in tokens])\n    return ngrams", "tokens": ["text", " =", " text", ".", "lower", "()", "\n", "    ", "tokens", " =", " re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+\\", "S", "*", "|", "[\\", "s", ".", "]\"", ",", " text", ")", "\n", "    ", "tokens", " =", " [", "t", ".", "strip", "()", " for", " t", " in", " tokens", " if", " t", ".", "strip", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "ng", "rams", " =", " Counter", "([", "t", "[", "0", ":", "n", "]", " for", " t", " in", " tokens", "])", "\n", "    ", "return", " n", "grams", "\n", "\n", "if"], "logprobs": [-2.2295403480529785, -0.07866950333118439, -0.7895929217338562, -0.008813764899969101, -0.4136800765991211, -0.0010037152096629143, -0.13239644467830658, -0.24146489799022675, -2.59234619140625, -0.021813353523612022, -0.5158534646034241, -0.00010966652916977182, -0.3868878483772278, -0.0007571690948680043, -0.08350759744644165, -0.030035266652703285, -2.062755584716797, -0.5457572340965271, -0.08994463831186295, -3.4754638671875, -2.492262125015259, -0.14833879470825195, -1.796164870262146, -1.252507209777832, -2.954427480697632, -1.875815987586975, -1.6332050561904907, -0.0006213641609065235, -0.02011040225625038, -0.013857817277312279, -0.04331468790769577, -0.22942698001861572, -0.6149700284004211, -0.0619627982378006, -0.0991579070687294, -1.8095959424972534, -0.21212641894817352, -0.1393887847661972, -0.6398821473121643, -0.014089047908782959, -0.00026854246971197426, -0.0001954841281985864, -0.001930398982949555, -0.8645190596580505, -0.23727867007255554, -0.250814825296402, -0.009913967922329903, -0.004606231581419706, -0.161892369389534, -4.3748852476710454e-05, -0.007316816598176956, -1.1920922133867862e-06, -5.722029527532868e-06, -1.4543427823809907e-05, -1.6093124941107817e-05, -0.07558691501617432, -0.01442986074835062, -0.24837593734264374, -1.1861180067062378, -0.02603369578719139, -0.030872801318764687, -0.3401164412498474, -1.7905192375183105, -2.2814066410064697, -1.3065154552459717, -1.0762898921966553, -0.2907990515232086, -0.047986097633838654, -0.024849118664860725, -0.02757805585861206, -0.012735581956803799, -0.00019572250312194228, -0.04438558220863342, -0.407836377620697, -0.012355572544038296, -0.15176497399806976, -0.02515513077378273, -0.04295811802148819, -0.0006093314150348306, -0.747631311416626, -0.02623751014471054, -1.3620331287384033], "finish_reason": "stop"}], "metrics": {"energy": 96.20015069007871, "energy_per_token": 1.1731725693912038, "time": 3.5887916, "time_per_token": 0.04376575121951219}}
{"outputs": [{"text": "# ------------------------------------------------------------------------------------------------------------\n    # Write your code here\n    # ------------------------------------------------------------------------------------------------------------\n    stop_words = STOPWORDS\n\n    cleaned_text = ''\n    for word in text.split():\n        if word not in stop_words:\n            cleaned_text += ' ' + word\n\n    # remove punctuation from the text\n    cleaned_text = cleaned_text.replace('.', ' ')\n    cleaned_text = cleaned_text.replace(',', ' ')\n    cleaned_text = cleaned_text.replace('\"', ' ')\n    cleaned_text = cleaned_text.replace(':', ' ')\n\n    cleaned_text = re.sub(r'[^\\w\\s]', ' ', cleaned_text)\n    cleaned_text = ' '.join(cleaned_text", "tokens": ["#", " ", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "\n", "    ", "#", " Write", " your", " code", " here", "\n", "    ", "#", " ", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "\n", "    ", "stop", "_", "words", " =", " ST", "OP", "W", "OR", "DS", "\n", "\n", "    ", "cleaned", "_", "text", " =", " ''", "\n", "    ", "for", " word", " in", " text", ".", "split", "():", "\n", "        ", "if", " word", " not", " in", " stop", "_", "words", ":", "\n", "            ", "cleaned", "_", "text", " +=", " '", " '", " +", " word", "\n", "\n", "    ", "#", " remove", " punct", "uation", " from", " the", " text", "\n", "    ", "cleaned", "_", "text", " =", " cleaned", "_", "text", ".", "replace", "('", ".", "'", ",", " '", " '", ")", "\n", "    ", "cleaned", "_", "text", " =", " cleaned", "_", "text", ".", "replace", "('", ",", "'", ",", " '", " '", ")", "\n", "    ", "cleaned", "_", "text", " =", " cleaned", "_", "text", ".", "replace", "('", "\"", "'", ",", " '", " '", ")", "\n", "    ", "cleaned", "_", "text", " =", " cleaned", "_", "text", ".", "replace", "('", ":'", ",", " '", " '", ")", "\n", "\n", "    ", "cleaned", "_", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " cleaned", "_", "text", ")", "\n", "    ", "cleaned", "_", "text", " =", " '", " '", ".", "join", "(", "cleaned", "_", "text"], "logprobs": [-0.8722405433654785, -4.018030643463135, -1.7527278661727905, -0.31805917620658875, -0.04271644726395607, -0.0729677751660347, -0.05456877872347832, -0.035974640399217606, -0.04717392474412918, -0.037389252334833145, -0.03652486577630043, -0.036617957055568695, -0.07511892914772034, -0.03453614190220833, -0.03678193688392639, -0.05972439795732498, -0.03716989606618881, -0.02864391729235649, -0.07429905980825424, -0.04005170240998268, -0.0671296939253807, -0.08734070509672165, -0.06085336580872536, -0.07049085944890976, -0.0822964459657669, -0.17561089992523193, -0.29002174735069275, -0.1304704248905182, -0.12439288944005966, -0.1007063090801239, -0.12750202417373657, -0.12220117449760437, -0.18491995334625244, -0.13021154701709747, -0.13326051831245422, -0.11773916333913803, -0.10479080677032471, -0.11576015502214432, -3.030689239501953, -0.1837194412946701, -0.33602532744407654, -3.136643171310425, -0.3369746506214142, -0.34585437178611755, -0.28686538338661194, -0.6348862648010254, -0.15608547627925873, -0.21519935131072998, -0.20985691249370575, -0.004619402810931206, -0.00031990656862035394, -5.1973900554003194e-05, -4.51792984677013e-05, -3.2305197237292305e-05, -2.1219027985353023e-05, -5.221230458118953e-05, -7.73638384998776e-05, -8.749579137656838e-05, -8.22540732769994e-06, -7.271740287251305e-06, -7.331102824537084e-05, -0.00011991735664196312, -0.00010179955279454589, -1.7762025890988298e-05, -2.3841574147809297e-05, -2.539125671319198e-05, -0.00015245705435518175, -0.00024482590379193425, -0.0002675890573300421, -0.00010823617776622996, -0.00018988236843142658, -0.00013672371278516948, -0.0018433022778481245, -0.0005340342177078128, -0.0002317160106031224, -0.00017248096992261708, -2.9801878554280847e-05, -5.745722592109814e-05, -0.000597179401665926, -0.0004003438516519964, -0.00046171018038876355, -0.00018523407925385982, -0.000263894529780373, -0.0004781533498317003, -0.0017997510731220245, -0.008887850679457188, -0.3893146216869354, -3.700806140899658, -1.168550729751587, -0.255612850189209, -0.10474389791488647, -0.6036657691001892, -1.5497195136049413e-06, -1.4185804502631072e-05, -1.5497195136049413e-06, -1.9430925021879375e-05, -0.27576538920402527, -1.2195627689361572, -0.0018286664271727204, -4.163008213043213, -0.2287566363811493, -0.24530895054340363, -0.026987843215465546, -2.0802202224731445, -0.7636600136756897, -0.37096548080444336, -0.341337651014328, -0.5814762711524963, -0.010738798417150974, -0.21754711866378784, -0.18043293058872223, -0.04404992610216141, -0.10273241251707077, -0.01016499288380146, -0.02678011916577816, -0.7463350892066956, -0.19198307394981384, -0.9071376919746399, -0.00017248096992261708, -0.0404520146548748, -0.005753741133958101, -3.0517112463712692e-05, -0.0329158753156662, -0.008313809521496296, -0.005093218293040991, -0.042017605155706406, -6.544376083184034e-05, -0.000545472139492631, -0.0870683342218399, -1.7728862762451172, -0.016566220670938492, -0.06017158180475235, -0.017476141452789307, -0.15090814232826233, -0.3017914593219757, -0.0037879636511206627, -2.6697137355804443, -3.0235700607299805, -2.2795610427856445, -0.5889356136322021, -1.953572392463684, -0.7681883573532104, -0.5474150776863098, -0.13499079644680023, -0.00600782735273242, -0.5641670823097229, -0.004421814810484648, -0.01091014500707388, -0.03246060386300087, -1.108538269996643, -0.00010787858627736568, -6.842378934379667e-05, -0.0032791912090033293, -1.063537836074829, -0.5151782631874084, -1.2210440635681152, -0.016076814383268356, -0.0008380476501770318, -0.1096431314945221, -1.3674836158752441, -0.0029550003819167614, -0.6705285906791687, -0.07154304534196854, -0.013068854808807373, -0.00020346954988781363, -0.000248043768806383, -0.0019957164768129587, -0.016951080411672592, -0.0002548369811847806, -8.34461570775602e-06, -0.00021562635083682835, -0.022314416244626045, -0.0161549374461174, -0.21851132810115814, -0.0017172842053696513, -0.0007223857101053, -0.0021735632326453924, -0.02348010614514351, -0.00010358751023886725, -0.003313291585072875, -0.19717654585838318, -0.019433224573731422, -0.00019059749320149422, -0.00035291642416268587, -0.002199494047090411, -0.01855410635471344, -0.0007408496458083391, -8.22540732769994e-06, -0.00014423283573705703, -0.052563853561878204, -0.04439881071448326, -1.9830741882324219, -0.006174180656671524, -0.00011467275908216834, -0.00365043175406754, -0.11751502007246017, -0.00010978573118336499, -0.003962048329412937, -0.11187029629945755, -0.011550458148121834, -0.00017128908075392246, -8.248942322097719e-05, -0.001149589428678155, -0.007817861624062061, -0.0005788319394923747, -1.1920922133867862e-06, -3.802703940891661e-05, -0.010937146842479706, -0.6317932605743408, -2.82344913482666, -0.00015507926582358778, -0.0005865760613232851, -0.005124647635966539, -5.6622808187967166e-05, -0.000835903687402606, -2.152604341506958, -0.0007937379996292293, -1.538022518157959, -0.003216690383851528, -0.01800607703626156, -0.029619302600622177, -1.7151215076446533, -5.924526340095326e-05, -0.030360974371433258, -0.4366719424724579, -0.1400720179080963, -0.8958515524864197, -0.5054617524147034, -0.3205161392688751, -0.00881081074476242, -0.06291530281305313, -0.00541944382712245, -0.10432018339633942, -0.012042437680065632, -0.00021062063751742244, -1.5033363103866577, -0.0031159203499555588, -0.00039891392225399613, -0.009794510900974274, -2.8371408916427754e-05, -1.4305104514278355e-06, -0.023772800341248512, -0.08954719454050064, -0.9532524347305298, -0.15020857751369476, -0.0005016260547563434, -0.001987983239814639, -0.010355315171182156, -2.6293482780456543, -0.0017409658757969737, -0.009079360403120518, -0.00041476229671388865, -0.030850030481815338, -0.014280269853770733, -4.446407547220588e-05, -1.7881377516459906e-06], "finish_reason": "length"}], "metrics": {"energy": 316.8631568994525, "energy_per_token": 1.2377467066384864, "time": 13.030174, "time_per_token": 0.0508991171875}}
{"outputs": [{"text": "# remove duplicate words\n    text = re.sub(r\"\\b\\w+\\b\\s+\\b\\w+\\b\", ' ', text)\n    text = text.replace(\"  \", ' ')\n\n    # remove stopwords\n    text = \" \".join([word for word in text.split() if word not in STOPWORDS])\n\n    # generate ngrams\n    ngrams = Counter(nltk.ngrams(text.split(), n))\n    return ngrams", "tokens": ["#", " remove", " duplicate", " words", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "\"", "\\", "b", "\\", "w", "+\\", "b", "\\", "s", "+\\", "b", "\\", "w", "+\\", "b", "\"", ",", " '", " '", ",", " text", ")", "\n", "    ", "text", " =", " text", ".", "replace", "(", "\"", "  ", "\"", ",", " '", " '", ")", "\n", "\n", "    ", "#", " remove", " stop", "words", "\n", "    ", "text", " =", " \"", " \"", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "\n", "    ", "#", " generate", " n", "grams", "\n", "    ", "ng", "rams", " =", " Counter", "(", "nl", "tk", ".", "ng", "rams", "(", "text", ".", "split", "()", ",", " n", "))", "\n", "    ", "return", " n", "grams", "\n", "\n", "#"], "logprobs": [-0.8722405433654785, -2.450594425201416, -0.7442775368690491, -1.3836275339126587, -0.7618037462234497, -0.005149316042661667, -0.7512314915657043, -0.09067501872777939, -0.883969247341156, -0.00014351768186315894, -0.24585315585136414, -0.19853727519512177, -0.11979464441537857, -1.187304973602295, -0.34822022914886475, -0.5058754682540894, -0.8907806277275085, -0.05573165416717529, -0.6318660378456116, -0.05768309533596039, -1.0236966609954834, -0.059427887201309204, -0.8230169415473938, -0.05908746272325516, -0.016267655417323112, -0.0008546037715859711, -0.023305542767047882, -0.007793377619236708, -0.027603568509221077, -0.0006124289939180017, -1.7752768993377686, -0.01431693509221077, -0.00427143182605505, -0.026218930259346962, -0.07111058384180069, -0.16991916298866272, -0.5810251832008362, -0.8134037852287292, -0.019666559994220734, -1.610112190246582, -0.0021585754584521055, -1.5754039287567139, -1.0044007301330566, -0.06084742024540901, -1.8663538694381714, -0.003834872040897608, -0.0006146925734356046, -1.9115231037139893, -0.02850651741027832, -0.0007494263118132949, -0.21484024822711945, -1.2513431310653687, -0.0009869233472272754, -0.20302017033100128, -0.3539310693740845, -0.1181020438671112, -0.09442397207021713, -0.08004648238420486, -0.0027624324429780245, -1.1244608163833618, -0.1101849302649498, -1.746126651763916, -0.045465242117643356, -0.00037126801908016205, -0.0016071987338364124, -0.25824883580207825, -0.3685518503189087, -0.02923164702951908, -0.0003418338019400835, -0.000797192333266139, -0.07797583192586899, -0.0007715824176557362, -0.07008127868175507, -0.19876664876937866, -0.01489223912358284, -0.07836973667144775, -0.3853253424167633, -6.937739817658439e-05, -0.006686929613351822, -8.344646857949556e-07, -9.179073458653875e-06, -1.680836794548668e-05, -1.9550132492440753e-05, -0.007597480434924364, -0.0057697417214512825, -0.11175836622714996, -0.0009374991059303284, -0.2055879831314087, -0.5721065402030945, -0.2511776387691498, -0.7690702080726624, -0.07346844673156738, -0.003942337818443775, -0.41493138670921326, -0.01369708776473999, -0.03428332880139351, -0.17664065957069397, -0.7347529530525208, -0.8698427677154541, -0.0004472924047149718, -0.0005373702733777463, -0.11256854981184006, -0.0040607149712741375, -0.00583480903878808, -0.07400783896446228, -0.03963335230946541, -0.031497690826654434, -0.021869920194149017, -0.0009422629955224693, -0.012540650554001331, -0.06134948879480362, -0.011967290192842484, -1.2035393714904785, -0.0351950004696846, -0.030645303428173065, -0.0005374894244596362, -0.7614710927009583, -0.017602765932679176, -1.5410619974136353], "finish_reason": "stop"}], "metrics": {"energy": 173.5175097732544, "energy_per_token": 1.4581303342290286, "time": 6.073378, "time_per_token": 0.051036789915966385}}
{"outputs": [{"text": "if n <= 0:\n        raise Exception(\"N must be an integer > 0.\")\n\n    # Split the text into sentences\n    sentences = text.split(\".\")\n\n    # Filter out short sentences\n    sentences = [s.strip() for s in sentences if len(s.strip()) > 0]\n\n    # Remove duplicate and stopwords\n    words = Counter(re.findall(r'\\w+', sentence.lower()))\n\n    # Generate n-grams from the text\n    ngrams = []\n    for i in range(n):\n        ngrams.extend([tuple(words[w] for w in words[j:j+i+1]) for j in range(n)])\n    ngrams = Counter(ngrams)\n\n    # Filter out n-grams with 1 occurrence\n    ngrams = {k: v for k, v in ngrams.items() if v > 1}\n\n    return ngrams", "tokens": ["if", " n", " <=", " ", "0", ":", "\n", "        ", "raise", " Exception", "(", "\"", "N", " must", " be", " an", " integer", " >", " ", "0", ".", "\"", ")", "\n", "\n", "    ", "#", " Split", " the", " text", " into", " sentences", "\n", "    ", "sent", "ences", " =", " text", ".", "split", "(", "\"", ".", "\"", ")", "\n", "\n", "    ", "#", " Filter", " out", " short", " sentences", "\n", "    ", "sent", "ences", " =", " [", "s", ".", "strip", "()", " for", " s", " in", " sentences", " if", " len", "(", "s", ".", "strip", "())", " >", " ", "0", "]", "\n", "\n", "    ", "#", " Remove", " duplicate", " and", " stop", "words", "\n", "    ", "words", " =", " Counter", "(", "re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " sentence", ".", "lower", "()))", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", " from", " the", " text", "\n", "    ", "ng", "rams", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "n", "):", "\n", "        ", "ng", "rams", ".", "extend", "([", "tuple", "(", "words", "[", "w", "]", " for", " w", " in", " words", "[", "j", ":", "j", "+", "i", "+", "1", "])", " for", " j", " in", " range", "(", "n", ")]", ")", "\n", "    ", "ng", "rams", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "#", " Filter", " out", " n", "-", "grams", " with", " ", "1", " occurrence", "\n", "    ", "ng", "rams", " =", " {", "k", ":", " v", " for", " k", ",", " v", " in", " n", "grams", ".", "items", "()", " if", " v", " >", " ", "1", "}", "\n", "\n", "    ", "return", " n", "grams", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.166069507598877, -1.1307226419448853, -2.6179916858673096, -0.012939419597387314, -0.42013290524482727, -0.07746042311191559, -0.031901441514492035, -0.008613694459199905, -0.571908175945282, -1.795676350593567, -0.2714393138885498, -0.14558380842208862, -2.214582681655884, -1.1092395782470703, -0.011369203217327595, -3.630610466003418, -0.18224570155143738, -2.9148881435394287, -0.019760066643357277, -0.009952682070434093, -1.1641556024551392, -0.049537792801856995, -0.0010381315369158983, -0.0036222815979272127, -0.41812312602996826, -0.0009182051289826632, -0.9174190759658813, -3.038189649581909, -0.8259201049804688, -0.17855384945869446, -0.1127045601606369, -2.8003575801849365, -0.41660815477371216, -0.0016011287225410342, -0.08156903833150864, -0.0030441395938396454, -0.005414819810539484, -2.8988749980926514, -0.010259863920509815, -0.12140783667564392, -0.8065159916877747, -0.014751880429685116, -0.2285708487033844, -0.08036136627197266, -0.0023778993636369705, -0.016285600140690804, -0.15530766546726227, -0.00039152585668489337, -0.08842027932405472, -3.453021287918091, -0.559416651725769, -4.012533187866211, -0.073823943734169, -0.4339185953140259, -0.0008275659638457, -0.18769055604934692, -0.0006008726777508855, -0.018195733428001404, -0.23001770675182343, -0.6011950969696045, -0.4939911365509033, -0.0435781255364418, -0.009270952083170414, -0.05563558638095856, -0.00017772526189219207, -3.242440288886428e-05, -0.001779640675522387, -0.010347645729780197, -0.033557359129190445, -0.00022849810193292797, -0.00743810785934329, -0.10961075872182846, -0.2221185863018036, -0.010600686073303223, -0.15969473123550415, -0.028512194752693176, -0.8810925483703613, -0.12329941987991333, -0.002247666707262397, -0.03632727265357971, -0.0008812834857963026, -0.06991411000490189, -1.3094123601913452, -1.6552408933639526, -1.2955224514007568, -0.018671585246920586, -0.014673293568193913, -1.4161099195480347, -0.0010397987207397819, -2.04530668258667, -0.03849151358008385, -3.115858554840088, -1.09097421169281, -1.2654881477355957, -0.0012431758223101497, -0.3548738956451416, -0.00010561384988250211, -0.035994190722703934, -0.035496942698955536, -0.20274651050567627, -0.20752480626106262, -0.01966024935245514, -3.111314072157256e-05, -3.5073184967041016, -0.8811479210853577, -0.054157137870788574, -0.5511936545372009, -0.05007346346974373, -0.7409659624099731, -0.0006349454633891582, -0.2923695147037506, -1.0257432460784912, -0.42707914113998413, -0.21047504246234894, -0.01838909648358822, -2.980762481689453, -0.24882906675338745, -2.7958011627197266, -0.05543474480509758, -0.0025505651719868183, -0.18399766087532043, -0.004557223059237003, -0.022480761632323265, -3.1275248527526855, -0.0011600677389651537, -0.043854959309101105, -0.03998561576008797, -0.698776364326477, -0.00511670159175992, -0.001871978398412466, -0.0014373458689078689, -0.6325209140777588, -0.7814038991928101, -0.006212684325873852, -0.0019280193373560905, -0.4589938819408417, -0.031866107136011124, -0.11042887717485428, -0.6764808297157288, -0.6575140953063965, -0.5661569833755493, -0.012433634139597416, -0.43436387181282043, -0.7082008719444275, -0.6146388649940491, -0.021901292726397514, -0.027540946379303932, -0.006028089672327042, -0.0009270184673368931, -3.634709596633911, -1.2610383033752441, -2.255901336669922, -0.039541345089673996, -0.24313174188137054, -0.4004206657409668, -0.09727068245410919, -0.02390456758439541, -0.003459779778495431, -0.010575797408819199, -0.0561489574611187, -0.005002601072192192, -0.0026806395035237074, -0.0007184546557255089, -0.000806721393018961, -2.2956557273864746, -1.4115302562713623, -0.00472061475738883, -0.005582575686275959, -1.9585089683532715, -1.3807251453399658, -0.03573530167341232, -0.18592999875545502, -0.08300479501485825, -0.02313956990838051, -0.02170545794069767, -0.00026794656878337264, -0.0036061275750398636, -0.015524492599070072, -0.16356463730335236, -0.0006379238329827785, -2.102170944213867, -1.8330258131027222, -0.05804165452718735, -0.743119478225708, -0.3650500476360321, -0.006730150431394577, -0.8401996493339539, -3.037368059158325, -2.2915027141571045, -1.9567582607269287, -0.3034191429615021, -0.00039104922325350344, -0.434854120016098, -0.0011211306555196643, -0.11087486892938614, -0.12710526585578918, -1.3587536811828613, -0.018351176753640175, -0.1948523223400116, -0.0005166388000361621, -0.009679998271167278, -6.890059739816934e-05, -0.03825289383530617, -5.6265202147187665e-05, -0.00455532455816865, -0.0003177614707965404, -3.671578815556131e-05, -0.00887390784919262, -0.000608854868914932, -0.0002203936892328784, -0.009032460860908031, -0.08677556365728378, -0.0030178739689290524, -0.009819182567298412, -0.019569071009755135, -0.001068616984412074, -0.07327902317047119, -0.0005031750188209116, -0.2114274799823761, -0.029584120959043503, -0.0007065422250889242, -1.5156962871551514, -3.3378546504536644e-06, -1.311301275563892e-06, -0.00038425691309385, -0.00017534149810671806, -0.08744535595178604], "finish_reason": "stop"}], "metrics": {"energy": 287.04626316070573, "energy_per_token": 1.2645209830868094, "time": 10.924835, "time_per_token": 0.04812702643171806}}
{"outputs": [{"text": "text = re.sub(r'[^\\w\\s]', '', text)\n    text = text.lower()\n    text = text.split()\n    # text = [word for word in text if word not in STOPWORDS]\n    text = [word for word in text if word not in STOPWORDS and len(word) > 3]\n\n    freq = Counter(nltk.ngrams(text, n))\n    return freq", "tokens": ["text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "    ", "text", " =", " text", ".", "split", "()", "\n", "    ", "#", " text", " =", " [", "word", " for", " word", " in", " text", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "text", " =", " [", "word", " for", " word", " in", " text", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " len", "(", "word", ")", " >", " ", "3", "]", "\n", "\n", "    ", "freq", " =", " Counter", "(", "nl", "tk", ".", "ng", "rams", "(", "text", ",", " n", "))", "\n", "    ", "return", " fre", "q", "\n", "\n", "#"], "logprobs": [-2.2295403480529785, -0.07866950333118439, -1.1775381565093994, -0.00016985881666187197, -0.06941309571266174, -0.326351135969162, -0.1897422969341278, -0.878284215927124, -0.18394698202610016, -0.149446502327919, -0.0064459266141057014, -0.1966181993484497, -0.012817498296499252, -0.08189485967159271, -0.04115137830376625, -0.0001820160250645131, -0.21185098588466644, -0.0003466005437076092, -0.029877811670303345, -0.07850420475006104, -0.33582010865211487, -0.1844683289527893, -0.4837232828140259, -0.030637556686997414, -0.7810550332069397, -0.0007711059297434986, -0.1367654949426651, -0.00029952809563837945, -0.09158916026353836, -0.14102350175380707, -0.5786702632904053, -0.09706266969442368, -0.9307405948638916, -0.0019654971547424793, -0.3427882790565491, -0.04032309725880623, -0.005420748144388199, -0.28806817531585693, -3.312762498855591, -2.821251153945923, -0.13442891836166382, -0.536868155002594, -0.5450471639633179, -0.15619918704032898, -0.009200084023177624, -0.00402046600356698, -0.07948656380176544, -0.019084757193922997, -0.07757283747196198, -0.037583764642477036, -0.00013767725613433868, -0.028247075155377388, -3.707340147229843e-05, -0.0008033862104639411, -1.9907753085135482e-05, -1.2993727978027891e-05, -0.019352784380316734, -0.03251299634575844, -0.1357392817735672, -0.8652142286300659, -0.04976193979382515, -0.2364574670791626, -0.12215074151754379, -0.05650480091571808, -0.005757296923547983, -0.0005657264264300466, -0.04592511057853699, -0.01590799354016781, -1.0745080709457397, -0.4135925769805908, -0.00040570611599832773, -0.23444467782974243, -0.000739539333153516, -0.001077905297279358, -5.173549288883805e-05, -1.0490362910786644e-05, -1.3520255088806152, -0.7259916663169861, -0.0008706831140443683, -0.004254101309925318, -0.1225132867693901, -0.4349221885204315, -0.14941324293613434, -2.1927218437194824, -0.03957686573266983, -0.02705618552863598, -1.3362700939178467, -0.0008381668012589216, -4.617194175720215, -0.7343674302101135, -0.05534045770764351, -0.2421966791152954, -1.7750505208969116, -0.00019631843315437436, -0.0009058186551555991, -0.14263126254081726, -0.002679450437426567, -0.0032206117175519466, -0.007229832466691732, -0.0005435658385977149, -0.01658017374575138, -0.14063197374343872, -0.014128305949270725, -0.684456467628479, -0.11015663295984268, -0.02739991433918476, -1.7523612768854946e-05, -0.5406088829040527, -0.04137878492474556, -1.7994600534439087], "finish_reason": "stop"}], "metrics": {"energy": 127.04303222274783, "energy_per_token": 1.1549366565704349, "time": 4.8517017, "time_per_token": 0.04410637909090909}}
{"outputs": [{"text": "# remove duplicate and stopwords\n    words = [word for word in re.split(r'\\W*', text) if not word in STOPWORDS and len(word) >= 2]\n    # generate ngrams\n    return Counter(zip(words, words[1:]))", "tokens": ["#", " remove", " duplicate", " and", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " re", ".", "split", "(", "r", "'\\", "W", "*", "'", ",", " text", ")", " if", " not", " word", " in", " ST", "OP", "W", "OR", "DS", " and", " len", "(", "word", ")", " >=", " ", "2", "]", "\n", "    ", "#", " generate", " n", "grams", "\n", "    ", "return", " Counter", "(", "zip", "(", "words", ",", " words", "[", "1", ":]", "))"], "logprobs": [-0.8722405433654785, -2.450594425201416, -0.7442775368690491, -0.5748716592788696, -0.0347316712141037, -0.03387466073036194, -0.6621987223625183, -0.007709983736276627, -1.9570977687835693, -0.037817034870386124, -0.7318298816680908, -0.38452669978141785, -0.33219265937805176, -0.0011079132091253996, -0.0018625784432515502, -0.7760195136070251, -0.0001501924270996824, -1.6210966110229492, -0.3562765121459961, -0.11523687839508057, -0.6036105155944824, -0.34372571110725403, -1.9160245656967163, -0.0029768699314445257, -0.0002810560108628124, -0.030445044860243797, -0.13757354021072388, -0.059808842837810516, -2.673109531402588, -0.053744763135910034, -0.1609189361333847, -0.004703529179096222, -1.0728830375228426e-06, -5.8412379075889476e-06, -1.3589766240329482e-05, -1.680836794548668e-05, -2.0656261444091797, -0.4823070764541626, -0.0003923600015696138, -0.0014160377904772758, -0.14321602880954742, -2.3042826652526855, -0.12931299209594727, -0.7066174149513245, -0.017891447991132736, -0.00912968348711729, -0.8587996959686279, -0.5854581594467163, -0.3249264657497406, -0.6368079781532288, -1.0127243995666504, -0.07585856318473816, -0.00205972115509212, -2.0140905380249023, -0.016275396570563316, -0.3647977113723755, -0.5085840821266174, -0.525826632976532, -0.015340786427259445, -0.34915316104888916, -0.021166974678635597, -0.005548078566789627, -0.011551400646567345, -0.003767061745747924, -0.01732899807393551], "finish_reason": "stop"}], "metrics": {"energy": 62.0370164270401, "energy_per_token": 0.9544156373390784, "time": 2.7523696, "time_per_token": 0.042344147692307696}}
