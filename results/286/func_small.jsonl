{"outputs": [{"text": "count = 0\n    if os.path.exists(output_file):\n        with open(output_file, \"w\") as file:\n            csv_writer = csv.writer(file)\n            for dir in test_directory:\n                try:\n                    with open(dir, encoding='utf8') as file:\n                        for line in file:\n                            count += 1\n                            csv_writer.writerow([line.strip(), 1])\n                except OSError as err:\n                    print(f'Error: {err}')\n                except UnicodeDecodeError as err:\n                    print(f'Error: {err}')\n                except IOError as err:\n                    print(f'Error: {err}')\n                else:\n                    print(f'Count: {count}')\n    return count", "tokens": ["count", " =", " ", "0", "\n", "    ", "if", " os", ".", "path", ".", "exists", "(", "output", "_", "file", "):", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "            ", "csv", "_", "writer", " =", " c", "sv", ".", "writer", "(", "file", ")", "\n", "            ", "for", " dir", " in", " test", "_", "directory", ":", "\n", "                ", "try", ":", "\n", "                ", "    ", "with", " open", "(", "dir", ",", " encoding", "='", "utf", "8", "')", " as", " file", ":", "\n", "                ", "        ", "for", " line", " in", " file", ":", "\n", "                ", "            ", "count", " +=", " ", "1", "\n", "                ", "            ", "csv", "_", "writer", ".", "writer", "ow", "([", "line", ".", "strip", "()", ",", " ", "1", "])", "\n", "                ", "except", " O", "SE", "rror", " as", " err", ":", "\n", "                ", "    ", "print", "(", "f", "'", "Error", ":", " {", "err", "}", "')", "\n", "                ", "except", " Un", "icode", "Dec", "ode", "Error", " as", " err", ":", "\n", "                ", "    ", "print", "(", "f", "'", "Error", ":", " {", "err", "}", "')", "\n", "                ", "except", " IO", "Error", " as", " err", ":", "\n", "                ", "    ", "print", "(", "f", "'", "Error", ":", " {", "err", "}", "')", "\n", "                ", "else", ":", "\n", "                ", "    ", "print", "(", "f", "'", "Count", ":", " {", "count", "}", "')", "\n", "    ", "return", " count", "\n", "\n", "print"], "logprobs": [-4.17683744430542, -0.512515664100647, -0.36012834310531616, -0.0013223483692854643, -0.03844597563147545, -0.2602623701095581, -2.9663634300231934, -1.0824460983276367, -0.0003667397249955684, -0.06057704985141754, -0.01889796182513237, -0.8049643635749817, -0.00666620722040534, -0.9471139907836914, -0.00011920218821614981, -0.00038258862332440913, -0.40502527356147766, -0.06602676212787628, -0.013344968669116497, -1.3566781282424927, -0.010236854664981365, -0.009320792742073536, -0.015959030017256737, -1.883488948806189e-05, -0.00018010901112575084, -0.015823395922780037, -2.6048948764801025, -0.24555274844169617, -0.053033921867609024, -0.49433112144470215, -0.0011655449634417892, -1.7581722736358643, -0.08884762227535248, -0.01688685081899166, -0.009257960133254528, -3.1143851280212402, -0.2396906167268753, -0.04299488663673401, -0.0017556030070409179, -0.0029735418502241373, -1.9311717551317997e-05, -7.879423355916515e-05, -0.01357231941074133, -9.011816291604191e-05, -0.004978877957910299, -0.17724502086639404, -0.0021172980777919292, -0.04702824354171753, -1.5765130519866943, -3.2965333461761475, -2.9317150115966797, -1.5487990379333496, -0.00012933371181134135, -0.00015686711412854493, -0.024103231728076935, -0.00830127764493227, -0.009175751358270645, -2.3080055713653564, -0.0010996968485414982, -0.002968074521049857, -0.0022075825836509466, -0.001408776268362999, -0.8017704486846924, -0.00397332850843668, -0.006637549493461847, -0.3077974021434784, -0.22796769440174103, -2.5693631172180176, -0.5709215998649597, -0.15722723305225372, -1.5625377893447876, -0.03162035718560219, -0.004451010376214981, -1.2760236263275146, -0.08026895672082901, -0.005234109237790108, -0.003830834524706006, -0.0057305097579956055, -1.4406204223632812, -0.6325876116752625, -0.008748535998165607, -0.15888677537441254, -0.06552357971668243, -0.0048415097407996655, -0.0013856819132342935, -0.0029829314444214106, -1.9872792959213257, -0.04332667589187622, -0.18629439175128937, -0.0002627027570270002, -0.009128029458224773, -0.019357578828930855, -0.2767919898033142, -0.7450994253158569, -0.0005362979718483984, -0.0013860390754416585, -0.00023684080224484205, -0.0015391181223094463, -0.010076014325022697, -0.20963315665721893, -0.18389828503131866, -0.12208163738250732, -0.3452487885951996, -0.03435094654560089, -0.11143796890974045, -0.44162076711654663, -0.016265779733657837, -0.0022794236429035664, -0.009583655744791031, -0.05280620977282524, -0.16556227207183838, -2.7438268661499023, -3.4689302992774174e-05, -8.940656698541716e-06, -1.0313962697982788, -1.3454254865646362, -0.0027814533095806837, -0.010837388224899769, -0.0007463291985914111, -0.007828744128346443, -0.12366197258234024, -0.19027383625507355, -0.9933905005455017, -1.06980562210083, -0.999393880367279, -0.7259509563446045, -0.17049793899059296, -0.08411667495965958, -0.08204104006290436, -0.04507821425795555, -0.005084560252726078, -0.4850676953792572, -1.447159767150879, -0.6052802801132202, -0.00322073046118021, -0.8449574112892151, -0.006959601771086454, -5.185469490243122e-05, -0.31714677810668945, -0.4435795843601227, -0.009273904375731945, -0.005888376850634813, -0.0003626880934461951, -0.0010459910845384002, -0.01588558405637741, -0.019206266850233078, -0.023160653188824654, -0.06543771177530289, -0.15386725962162018, -0.03512732684612274, -0.06884351372718811, -0.005992422811686993, -0.015413333661854267, -0.027228819206357002, -0.0015025765169411898, -1.038422703742981, -0.3679767847061157, -2.9007503986358643, -2.825220326485578e-05, -0.027582578361034393, -0.012100385501980782, -0.0007725353352725506, -0.0020165364257991314, -0.0003045333724003285, -0.0009043894242495298, -0.003174862591549754, -0.0030182304326444864, -0.007387108169496059, -0.008964529260993004, -0.018567094579339027, -0.004144175909459591, -0.005951540544629097, -0.0009505997295491397, -0.003682381473481655, -0.0018487757770344615, -0.0008208957733586431, -0.9604203701019287, -1.9111231565475464, -0.00021252757869660854, -0.015889454632997513, -0.0012660353677347302, -0.0017050266033038497, -0.31034278869628906, -0.11211499571800232, -0.1482212096452713, -0.26262810826301575, -2.3825628757476807, -1.6851590871810913, -0.025903720408678055, -0.07440364360809326, -0.02083592303097248, -0.09233052283525467, -0.010155906900763512, -1.0276820659637451, -1.2615829706192017, -0.3121984004974365, -0.3663663864135742, -0.04021764174103737, -3.161860227584839], "finish_reason": "stop"}], "metrics": {"energy": 236.82801163101195, "energy_per_token": 1.1900905107086028, "time": 9.437168, "time_per_token": 0.04742295477386935}}
{"outputs": [{"text": "try:\n        # TODO 3.\n        # Write a script to count the number of words in all .txt files in the given directory\n        # and then write the counts to the output file (word_counts.csv), using the given header.\n\n        # Return the number of words in the given directory\n        words = 0\n        # open output file\n        with open(output_file, mode=\"w\") as csv_file:\n            writer = csv.writer(csv_file)\n            for file in os.listdir(test_directory):\n                if file.endswith('.txt'):\n                    with open(test_directory + file) as text:\n                        # skip first line\n                        next(text)\n                        # read the words in the file\n                        for word in text:\n                            words += 1\n                            # write the words to CSV file\n                            writer.writerow([word.strip(), 1])\n\n        return words\n    except Exception as e:\n        print(e)\n        return 0", "tokens": ["try", ":", "\n", "        ", "#", " TODO", " ", "3", ".", "\n", "        ", "#", " Write", " a", " script", " to", " count", " the", " number", " of", " words", " in", " all", " ", ".", "txt", " files", " in", " the", " given", " directory", "\n", "        ", "#", " and", " then", " write", " the", " counts", " to", " the", " output", " file", " (", "word", "_", "counts", ".", "csv", ")", ",", " using", " the", " given", " header", ".", "\n", "\n", "        ", "#", " Return", " the", " number", " of", " words", " in", " the", " given", " directory", "\n", "        ", "words", " =", " ", "0", "\n", "        ", "#", " open", " output", " file", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " mode", "=", "\"", "w", "\"", ")", " as", " c", "sv", "_", "file", ":", "\n", "            ", "writer", " =", " c", "sv", ".", "writer", "(", "csv", "_", "file", ")", "\n", "            ", "for", " file", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "                ", "if", " file", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "    ", "with", " open", "(", "test", "_", "directory", " +", " file", ")", " as", " text", ":", "\n", "                ", "        ", "#", " skip", " first", " line", "\n", "                ", "        ", "next", "(", "text", ")", "\n", "                ", "        ", "#", " read", " the", " words", " in", " the", " file", "\n", "                ", "        ", "for", " word", " in", " text", ":", "\n", "                ", "            ", "words", " +=", " ", "1", "\n", "                ", "            ", "#", " write", " the", " words", " to", " CS", "V", " file", "\n", "                ", "            ", "writer", ".", "writer", "ow", "([", "word", ".", "strip", "()", ",", " ", "1", "])", "\n", "\n", "        ", "return", " words", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "e", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "if"], "logprobs": [-1.567378044128418, -0.002057222882285714, -0.00830931682139635, -0.036056168377399445, -1.6682623624801636, -4.004415035247803, -2.8491897583007812, -2.5605015754699707, -1.9313640594482422, -2.6120941638946533, -0.051306579262018204, -0.5425615906715393, -3.9566609859466553, -1.2161601781845093, -3.132312059402466, -1.249237060546875, -0.5468297600746155, -0.17372843623161316, -0.2328414022922516, -0.011122370138764381, -0.10003477334976196, -0.1843419373035431, -2.2408573627471924, -0.9809917211532593, -0.0010806442005559802, -0.004225611686706543, -0.08443170040845871, -0.47365742921829224, -0.7851262092590332, -2.362419605255127, -0.2315046489238739, -1.3821654319763184, -0.043815139681100845, -0.08857467770576477, -1.431270956993103, -2.8630011081695557, -1.7228755950927734, -0.5080731511116028, -0.6175734400749207, -0.1102263554930687, -2.720881700515747, -1.7915890216827393, -1.0228760242462158, -2.4892351627349854, -1.3035839796066284, -0.05375798046588898, -0.020425692200660706, -0.019032008945941925, -0.0025381988380104303, -0.01631867326796055, -2.911048412322998, -2.523207664489746, -0.7007468938827515, -4.461338043212891, -1.216522216796875, -0.654645562171936, -0.007992311380803585, -2.047943592071533, -0.009603728540241718, -0.3232736587524414, -5.006077766418457, -1.2183635234832764, -2.3118155002593994, -0.00752743985503912, -0.12067610770463943, -1.1225330829620361, -0.6805389523506165, -3.0586423873901367, -0.4678560793399811, -0.6413038372993469, -0.1736968755722046, -3.7244791984558105, -0.5853180289268494, -1.6089587211608887, -0.0032905975822359324, -0.0333414264023304, -0.26007112860679626, -2.5695109367370605, -3.3729546070098877, -2.724700689315796, -0.15515486896038055, -0.8281668424606323, -0.010066927410662174, -0.6068068146705627, -0.005441140849143267, -0.019801674410700798, -0.06761691719293594, -7.760223525110632e-05, -0.0007831366965547204, -0.004892520606517792, -2.439013957977295, -1.9309643507003784, -0.02408915013074875, -0.028644032776355743, -0.07520396262407303, -0.47605210542678833, -0.004083747509866953, -1.276340365409851, -0.0067533585242927074, -0.8411205410957336, -0.22966709733009338, -0.005549382418394089, -0.0077011119574308395, -0.06295190751552582, -1.712970495223999, -0.008847558870911598, -0.0007832558476366103, -0.00013076403411105275, -6.937739817658439e-05, -0.01694885455071926, -0.00016509123088326305, -0.002726292237639427, -6.151010165922344e-05, -3.814689989667386e-06, -0.18269117176532745, -0.012509100139141083, -0.13742071390151978, -3.1074161529541016, -1.0936824083328247, -0.38263848423957825, -0.03768961504101753, -4.088794958079234e-05, -0.012754414230585098, -1.2874520507466514e-05, -0.0027822854463011026, -0.008288036100566387, -3.93382906622719e-05, -7.116541382856667e-05, -0.0010060969507321715, -0.03406225144863129, -0.011613971553742886, -0.7227993607521057, -0.13085244596004486, -0.017553336918354034, -0.01770150102674961, -0.00025722055579535663, -2.3841855067985307e-07, -0.8252429962158203, -0.045071832835674286, -0.00789119303226471, -0.0007284610182978213, -0.012753237038850784, -0.018839120864868164, -0.00915507972240448, -0.0029099523089826107, -1.1948983669281006, -0.0004568248405121267, -0.005632363725453615, -1.2800357341766357, -6.758938252460212e-05, -0.0002919009421020746, -0.2011474221944809, -0.11565099656581879, -1.0873329639434814, -0.0006554362480528653, -3.3677477836608887, -1.563557505607605, -0.00418323278427124, -0.0063836234621703625, -0.0033142422325909138, -1.903674840927124, -4.896759033203125, -1.4179627895355225, -0.25108814239501953, -0.7408681511878967, -0.0005123494775034487, -0.0005004345439374447, -0.6455171704292297, -0.0031247143633663654, -0.0065713501535356045, -0.01816248707473278, -0.002846715273335576, -0.04281581565737724, -0.001634096377529204, -0.9841517806053162, -1.8894267082214355, -2.5290164947509766, -3.1966514587402344, -1.1963577270507812, -0.4234562814235687, -0.274000883102417, -0.38969099521636963, -0.0009322587866336107, -0.00019727191829588264, -0.4263872802257538, -1.621895432472229, -0.03433585539460182, -0.016684051603078842, -0.15896567702293396, -0.0017591729993000627, -0.0018723353277891874, -0.0028671605978161097, -0.882083535194397, -0.029993388801813126, -0.06135823205113411, -8.368142152903602e-05, -0.012589269317686558, -0.034378357231616974, -0.0775732770562172, -0.7900843620300293, -0.7253120541572571, -0.6276503801345825, -1.668806552886963, -0.4275301396846771, -3.018261671066284, -0.0009698931244201958, -0.39617887139320374, -0.08439609408378601, -0.0015001959400251508, -0.0023852726444602013, -0.06666341423988342, -0.0001515035255579278, -0.0007929041748866439, -0.008607312105596066, -0.13549144566059113, -0.049952585250139236, -0.2194439023733139, -0.25501102209091187, -0.03123786859214306, -0.06430184096097946, -0.24743163585662842, -0.010113188065588474, -0.002150248736143112, -0.005746748298406601, -1.0074660778045654, -0.28768104314804077, -0.2539029121398926, -0.0301702581346035, -0.023965323343873024, -0.8946881890296936, -0.03591782972216606, -0.6111828088760376, -0.2354140430688858, -0.3345615863800049, -0.001122797722928226, -0.011446281336247921, -0.0031827054917812347, -0.256580650806427, -0.07621055096387863, -1.2655372619628906, -0.0494803860783577, -0.011604310013353825, -0.11351397633552551, -0.08247934281826019, -0.04585690423846245, -0.0007139279623515904, -0.3762958347797394, -0.04117151349782944, -0.5632439851760864], "finish_reason": "stop"}], "metrics": {"energy": 242.71977700519565, "energy_per_token": 0.9747782209044002, "time": 10.524355, "time_per_token": 0.0422664859437751}}
{"outputs": [{"text": "try:\n        counter = Counter()\n        # Read words from all files\n        for filename in os.listdir(test_directory):\n            if filename.endswith('.txt'):\n                with open(os.path.join(test_directory, filename)) as f:\n                    for line in f:\n                        words = line.strip().split()\n                        for word in words:\n                            counter[word] += 1\n        with open(output_file, 'w', newline='') as csv_file:\n            writer = csv.writer(csv_file)\n            writer.writerow(['Word', 'Count'])\n            for word, count in counter.most_common():\n                writer.writerow([word, count])\n        total_words = sum(counter.values())\n        return total_words\n    except:\n        return 0", "tokens": ["try", ":", "\n", "        ", "counter", " =", " Counter", "()", "\n", "        ", "#", " Read", " words", " from", " all", " files", "\n", "        ", "for", " filename", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "            ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " filename", "))", " as", " f", ":", "\n", "                ", "    ", "for", " line", " in", " f", ":", "\n", "                ", "        ", "words", " =", " line", ".", "strip", "()", ".", "split", "()", "\n", "                ", "        ", "for", " word", " in", " words", ":", "\n", "                ", "            ", "counter", "[", "word", "]", " +=", " ", "1", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "_", "file", ":", "\n", "            ", "writer", " =", " c", "sv", ".", "writer", "(", "csv", "_", "file", ")", "\n", "            ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "            ", "for", " word", ",", " count", " in", " counter", ".", "most", "_", "common", "():", "\n", "                ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "        ", "total", "_", "words", " =", " sum", "(", "counter", ".", "values", "())", "\n", "        ", "return", " total", "_", "words", "\n", "    ", "except", ":", "\n", "        ", "return", " ", "0", "\n", "\n", "def"], "logprobs": [-1.567378044128418, -0.002057222882285714, -0.00830931682139635, -0.036056168377399445, -3.304595947265625, -0.1049220860004425, -0.09460922330617905, -0.022843310609459877, -0.04922996088862419, -0.2131672501564026, -3.215564012527466, -3.6844353675842285, -3.8832974433898926, -0.18290287256240845, -1.0298357009887695, -1.1301312446594238, -1.8152589797973633, -0.007482005748897791, -0.17486944794654846, -0.7789769768714905, -0.0018139113672077656, -0.028505127876996994, -4.255681051290594e-05, -0.00199773907661438, -2.9802276912960224e-06, -0.0015976772410795093, -0.014711824245750904, -5.9126061387360096e-05, -5.721882189391181e-05, -0.000916537712328136, -0.009068137966096401, -0.003930463455617428, -0.3539324104785919, -0.34236234426498413, -0.004266208969056606, -0.0058877840638160706, -7.819823804311454e-05, -1.1920928244535389e-07, -0.2419474869966507, -0.01303543895483017, -0.008355659432709217, -0.0004351384413894266, -0.008633431047201157, -0.01469420362263918, -0.0030408117454499006, -0.45177197456359863, -0.00028868322260677814, -0.0019154074834659696, -0.42503395676612854, -0.0006343498243950307, -3.85038583772257e-05, -0.002314628567546606, -0.00010287232726113871, -0.00010239553375868127, -0.003135290928184986, -6.556489552167477e-06, -6.353653589030728e-05, -0.0004911408759653568, -0.019396046176552773, -1.2649331092834473, -0.000286657246761024, -0.8131876587867737, -0.015201312489807606, -0.0010932666482403874, -0.0013684204313904047, -0.0028860606253147125, -0.7560847401618958, -0.29917019605636597, -0.0007535954937338829, -0.0045025162398815155, -0.039589010179042816, -0.003599713556468487, -0.0003979606262873858, -0.0013598490040749311, -2.227252244949341, -0.015001576393842697, -0.05908915027976036, -0.000645429186988622, -0.9142487645149231, -0.0018743580440059304, -0.007349478080868721, -0.06604528427124023, -0.08959133923053741, -0.029558543115854263, -0.0040730624459683895, -0.001369372708722949, -1.1768858432769775, -0.018738742917776108, -0.0012418661499395967, -0.001851393491961062, -0.00021145492792129517, -0.001969780307263136, -0.0002949994814116508, -0.0014801985817030072, -0.08651703596115112, -0.09468231350183487, -0.0021384721621870995, -0.11529062688350677, -0.003784400876611471, -0.0030347504653036594, -7.271502545336261e-05, -0.01214313693344593, -1.3323005437850952, -3.0113327503204346, -0.0005150898941792548, -0.002148583298549056, -0.028444530442357063, -0.00013863079948350787, -0.0003738896339200437, -0.0014815079048275948, -0.0680214986205101, -0.013281799852848053, -0.7422575354576111, -0.0009243983076885343, -0.07534416019916534, -0.00018773700867313892, -0.05033115670084953, -7.045020902296528e-05, -0.0004266782198101282, -1.7413527965545654, -0.002978414995595813, -0.8783313632011414, -0.046187859028577805, -0.0002315968304174021, -0.005579849239438772, -0.003992682322859764, -0.1955418437719345, -0.00028165188268758357, -0.00045372682507149875, -1.1801649634435307e-05, -2.706014311115723e-05, -0.12012273073196411, -1.537788011773955e-05, -0.0005156855913810432, -1.728519782773219e-05, -8.344646857949556e-07, -0.05310468748211861, -0.0008437649230472744, -0.011461248621344566, -0.08268415927886963, -0.00012408917245920748, -0.0012872274965047836, -0.006845001131296158, -0.10721375048160553, -0.04329745098948479, -0.00150079105515033, -4.470248313737102e-05, -0.007171128876507282, -0.005739162210375071, -0.002948225475847721, -0.0040617831982672215, -0.0089569678530097, -0.05345935747027397, -0.05910937488079071, -0.11185377091169357, -0.009600185789167881, -0.00012933371181134135, -0.005924166180193424, -6.198863957251888e-06, -1.5696616172790527, -1.1920928244535389e-07, -7.080780778778717e-05, -0.02929428033530712, -0.004156403709203005, -0.0006180283380672336, -0.012352275662124157, -9.298280929215252e-06, -0.00017152745567727834, -0.000342191313393414, -0.0005964645533822477, -0.0014003242831677198, -0.014074825681746006, -0.005381857976317406, -0.00034278715611435473, -0.0011626873165369034, -0.17971406877040863, -2.415781021118164, -0.3295653760433197, -0.23123924434185028, -0.002607043832540512, -0.5971801280975342, -0.11636805534362793, -0.01577845588326454, -0.00048780461656861007, -0.0004632591735571623, -0.0003389737685211003, -0.009305320680141449, -0.05057394132018089, -0.13032811880111694, -0.006732044741511345, -2.0861407392658293e-05, -3.349725011503324e-05, -0.009669137187302113, -0.11800108850002289, -0.001503528794273734, -1.9176442623138428, -0.017959946766495705, -0.003469402203336358, -0.12287981063127518, -0.020749172195792198, -0.00032908268622122705, -0.6349009871482849, -0.04900433123111725, -1.5728062391281128], "finish_reason": "stop"}], "metrics": {"energy": 247.79361837577827, "energy_per_token": 1.214674599881266, "time": 8.819818, "time_per_token": 0.04323440196078431}}
{"outputs": [{"text": "try:\n        # Read and count all words in all .txt files\n        total_words = 0\n        word_counts = Counter()\n        for file_name in os.listdir(test_directory):\n            if file_name.endswith('.txt'):\n                with open(os.path.join(test_directory, file_name)) as file:\n                    file_words = Counter(line.strip() for line in file)\n                    word_counts.update(file_words)\n                    total_words += len(file_words)\n\n        # Write the counts to a CSV file\n        with open(output_file, 'w', encoding='utf-8') as file:\n            writer = csv.writer(file)\n            writer.writerow(['Word', 'Count'])\n            for word, count in word_counts.most_common():\n                writer.writerow([word, count])\n\n        return total_words\n\n    except FileNotFoundError:\n        print(\"Error: Input directory not found.\")\n        return 0", "tokens": ["try", ":", "\n", "        ", "#", " Read", " and", " count", " all", " words", " in", " all", " ", ".", "txt", " files", "\n", "        ", "total", "_", "words", " =", " ", "0", "\n", "        ", "word", "_", "counts", " =", " Counter", "()", "\n", "        ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "            ", "if", " file", "_", "name", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", "_", "name", "))", " as", " file", ":", "\n", "                ", "    ", "file", "_", "words", " =", " Counter", "(", "line", ".", "strip", "()", " for", " line", " in", " file", ")", "\n", "                ", "    ", "word", "_", "counts", ".", "update", "(", "file", "_", "words", ")", "\n", "                ", "    ", "total", "_", "words", " +=", " len", "(", "file", "_", "words", ")", "\n", "\n", "        ", "#", " Write", " the", " counts", " to", " a", " CS", "V", " file", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "            ", "writer", " =", " c", "sv", ".", "writer", "(", "file", ")", "\n", "            ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "            ", "for", " word", ",", " count", " in", " word", "_", "counts", ".", "most", "_", "common", "():", "\n", "                ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "\n", "        ", "return", " total", "_", "words", "\n", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "print", "(", "\"", "Error", ":", " Input", " directory", " not", " found", ".", "\"", ")", "\n", "        ", "return", " ", "0", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.567378044128418, -0.002057222882285714, -0.00830931682139635, -0.036056168377399445, -1.6682623624801636, -4.149410724639893, -3.712372303009033, -0.6431823372840881, -2.238948345184326, -1.0363073348999023, -0.42477095127105713, -0.8328989148139954, -1.005029559135437, -0.00043394684325903654, -0.0046506100334227085, -0.026532301679253578, -1.7367157936096191, -0.00885795708745718, -1.8858826160430908, -0.05936812236905098, -0.3850558400154114, -0.023277241736650467, -0.06189018860459328, -0.00011693747364915907, -0.027498383074998856, -0.049996696412563324, -0.9743503928184509, -0.007010031491518021, -0.2518002390861511, -0.03300480544567108, -0.15621070563793182, -0.005863015539944172, -0.08672747015953064, -0.20243869721889496, -0.15243224799633026, -1.0715196132659912, -0.6292845010757446, -0.11201343685388565, -0.003580946009606123, -0.01641003042459488, -1.549708758830093e-05, -0.0008150592911988497, -1.5497195136049413e-06, -0.0009421439026482403, -0.010906606912612915, -2.729855441430118e-05, -3.313963316031732e-05, -0.0006711614551022649, -0.010766158811748028, -0.0018703126115724444, -0.15997718274593353, -0.1193404421210289, -2.825220326485578e-05, -5.543078441405669e-05, -0.0036390291061252356, -0.0071441433392465115, -3.313963316031732e-05, -1.1920928244535389e-07, -0.19071093201637268, -0.014913849532604218, -0.003112830687314272, -0.0003719830128829926, -0.012361106462776661, -0.012888817116618156, -0.0017472729086875916, -0.7222911715507507, -0.00018976318824570626, -0.0010375360725447536, -0.37005096673965454, -0.00033420699764974415, -1.7165990357170813e-05, -0.0014543681172654033, -3.2543604902457446e-05, -6.067568756407127e-05, -0.003254595212638378, -3.4570634852570947e-06, -4.875540980719961e-05, -0.00025376438861712813, -0.005770097486674786, -1.1920922133867862e-06, -3.099436753473128e-06, -1.7552952766418457, -0.0001006075763143599, -0.378468781709671, -0.011839713901281357, -0.0004300146538298577, -0.0009168949909508228, -0.0008300673216581345, -3.2215449810028076, -0.0353478267788887, -0.47644510865211487, -0.006265284027904272, -0.9878803491592407, -0.0502164326608181, -1.2240477800369263, -0.00546271912753582, -0.07912514358758926, -0.004017259925603867, -0.35840490460395813, -0.0004203628050163388, -0.00017855956684798002, -0.0019759670831263065, -0.4109717011451721, -0.0055623045191168785, -0.014141704887151718, -0.08174503594636917, -0.4423581063747406, -7.60526381782256e-05, -0.00010024998482549563, -0.15858061611652374, -3.349725011503324e-05, -0.0005469018360599875, -0.0015944637125357985, -4.458328112377785e-05, -4.672895011026412e-05, -0.002183792879804969, -0.013474940322339535, -0.06383301317691803, -0.05040393024682999, -0.02016589790582657, -4.386805812828243e-05, -6.23445157543756e-05, -0.0018455630633980036, -0.721442699432373, -0.002261701738461852, -0.01222427748143673, -0.009461562149226665, -0.00023993951617740095, -0.008933929726481438, -0.0079458337277174, -0.41351816058158875, -0.015221389010548592, -0.03924405947327614, -0.6731165647506714, -1.1156466007232666, -1.304631233215332, -0.01642574556171894, -0.45225271582603455, -0.023402202874422073, -3.373566141817719e-05, -0.004156522452831268, -0.025253355503082275, -0.0005172345554456115, -0.0882520005106926, -8.153582894010469e-05, -0.0006976078147999942, -0.03187280520796776, -7.509902934543788e-05, -0.00013624693383462727, -0.0007787294453009963, -0.03082171082496643, -0.00538458488881588, -0.26213493943214417, -0.0002873722987715155, -2.8744618892669678, -0.010737854987382889, -0.05942811071872711, -0.0234462209045887, -0.0016799159348011017, -0.9775392413139343, -7.271502545336261e-05, -0.2939264178276062, -0.0005499995895661414, -0.0003411188081372529, -0.0009168949909508228, -0.08004219084978104, -0.00017581824795342982, -0.00011848701251437888, -2.3841830625315197e-06, -1.0013530300057027e-05, -0.11869391053915024, -3.2186455882765586e-06, -0.0007601470570079982, -0.1387391984462738, -0.00012611546844709665, -0.0026568612083792686, -0.01861659064888954, -2.7894584491150454e-05, -0.0006187431863509119, -0.01245777029544115, -0.058602359145879745, -0.01753576658666134, -0.0006712805479764938, -2.1815061700181104e-05, -0.0019810828380286694, -0.0023506649304181337, -0.002369098598137498, -0.0009193961159326136, -0.002865258837118745, -0.02756112441420555, -0.008066930808126926, -0.041432082653045654, -0.0010986251290887594, -0.00010287232726113871, -0.014611735939979553, -1.156323378381785e-05, -1.3112935448589269e-05, -1.645074735279195e-05, -0.6126068234443665, -2.622600959512056e-06, -6.210611172718927e-05, -0.03647555783390999, -0.0019407500512897968, -0.00040415700641460717, -0.009062467142939568, -3.576272320060525e-06, -6.317892984952778e-05, -0.00019798702851403505, -0.0004801789182238281, -0.0010224120924249291, -0.013123095966875553, -0.007608719170093536, -0.00022790218645241112, -0.00030155404238030314, -0.23739394545555115, -0.026612399145960808, -0.09745821356773376, -0.007861861027777195, -3.981510963058099e-05, -5.411955135059543e-05, -0.018589209765195847, -0.8812909722328186, -0.003700078232213855, -0.018756993114948273, -2.0440309047698975, -0.0019319456769153476, -7.402622577501461e-05, -0.31159186363220215, -0.00966842845082283, -0.0008361419313587248, -0.5251453518867493, -0.47595492005348206, -0.2071690410375595, -1.062618374824524, -0.07214492559432983, -2.7210581302642822, -1.4882762432098389, -0.6190973520278931, -0.012026655487716198, -0.4449380934238434, -0.10274424403905869, -0.00672778207808733, -0.005314270965754986, -0.1046128049492836, -0.010105399414896965, -0.029421847313642502, -0.0002256377338198945, -2.89518404006958, -5.960462772236497e-07, -4.768370445162873e-07, -7.510157047363464e-06, -0.0001062098381225951, -0.05242008715867996], "finish_reason": "stop"}], "metrics": {"energy": 272.3101587696073, "energy_per_token": 1.0763247382197918, "time": 10.932977, "time_per_token": 0.043213347826086955}}
{"outputs": [{"text": "try:\n        total_words = 0\n        with os.scandir(test_directory) as it:\n            for file in it:\n                if file.name.endswith(\".txt\"):\n                    with open(file.path, encoding='utf-8') as f:\n                        words = [line.split() for line in f]\n                    total_words += len(words)\n        with open(output_file, 'w') as csvfile:\n            csv_writer = csv.writer(csvfile)\n            csv_writer.writerow(['Word', 'Count'])\n            for word, count in Counter(words).items():\n                csv_writer.writerow([word, count])\n    except Exception as e:\n        print(\"Error reading file: \", e)\n        return 0\n    return total_words", "tokens": ["try", ":", "\n", "        ", "total", "_", "words", " =", " ", "0", "\n", "        ", "with", " os", ".", "sc", "and", "ir", "(", "test", "_", "directory", ")", " as", " it", ":", "\n", "            ", "for", " file", " in", " it", ":", "\n", "                ", "if", " file", ".", "name", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "\n", "                ", "    ", "with", " open", "(", "file", ".", "path", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "                ", "        ", "words", " =", " [", "line", ".", "split", "()", " for", " line", " in", " f", "]", "\n", "                ", "    ", "total", "_", "words", " +=", " len", "(", "words", ")", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "')", " as", " c", "sv", "file", ":", "\n", "            ", "csv", "_", "writer", " =", " c", "sv", ".", "writer", "(", "csv", "file", ")", "\n", "            ", "csv", "_", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "            ", "for", " word", ",", " count", " in", " Counter", "(", "words", ")", ".", "items", "():", "\n", "                ", "csv", "_", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "\"", "Error", " reading", " file", ":", " \"", ",", " e", ")", "\n", "        ", "return", " ", "0", "\n", "    ", "return", " total", "_", "words", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.567378044128418, -0.002057222882285714, -0.00830931682139635, -0.036056168377399445, -2.7746734619140625, -0.3621790409088135, -0.6554030179977417, -0.05506351590156555, -0.04306488484144211, -0.0002544794406276196, -0.035251278430223465, -0.20334482192993164, -2.22514009475708, -0.8480018377304077, -2.610649426060263e-05, -0.0641343742609024, -0.00022206225548870862, -0.00016211149340961128, -0.003409051802009344, -0.014887658879160881, -9.512448741588742e-05, -0.00011836781777674332, -0.0006567466771230102, -0.001611483283340931, -2.4147629737854004, -0.15291371941566467, -0.021278545260429382, -0.01616596430540085, -0.26667487621307373, -1.251700758934021, -0.13975881040096283, -0.01731318049132824, -0.006802259013056755, -0.008405309170484543, -0.0058843474835157394, -0.22061866521835327, -0.18197304010391235, -0.0004020121123176068, -0.5856726169586182, -0.025420257821679115, -0.022861020639538765, -0.00029523781267926097, -2.3841855067985307e-07, -1.7503398656845093, -0.011923941783607006, -0.05517813563346863, -0.01528173591941595, -9.7508447652217e-05, -0.08341372013092041, -0.018931299448013306, -0.005841801408678293, -0.0017164511373266578, -0.48404380679130554, -0.02690696343779564, -0.001883400953374803, -0.4186936914920807, -0.05981950834393501, -0.026573047041893005, -0.163472518324852, -1.565118432044983, -0.4007858633995056, -0.10898388177156448, -0.23062075674533844, -0.01425335742533207, -0.06943133473396301, -0.001465557492338121, -0.6512467265129089, -0.08211319148540497, -0.004395466763526201, -0.003255545860156417, -0.0023959758691489697, -1.9592015743255615, -0.1426205188035965, -2.4254226684570312, -0.8361349105834961, -0.009810801595449448, -3.0996503829956055, -0.4423915147781372, -0.03769753500819206, -0.0018849477637559175, -0.00022003613412380219, -0.004694037139415741, -0.4265630543231964, -0.018349772319197655, -0.02092803455889225, -2.868274211883545, -0.8178915977478027, -0.0055423881858587265, -0.0035168009344488382, -0.009977822192013264, -0.2010749876499176, -0.17821405827999115, -0.189925879240036, -0.02908865548670292, -0.01090802252292633, -2.139146327972412, -0.4284088909626007, -0.0018186711240559816, -0.004236770328134298, -0.017374221235513687, -8.034383063204587e-05, -0.0002734287118073553, -0.0022650319151580334, -0.27788615226745605, -0.022000771015882492, -1.8807127475738525, -0.001046705641783774, -1.4370490312576294, -0.010977472178637981, -0.5316676497459412, -0.0006582954083569348, -0.0044381930492818356, -0.004582499153912067, -2.6357131004333496, -1.5985411405563354, -0.021814752370119095, -0.0007407305529341102, -0.0014753182185813785, -2.4199192921514623e-05, -0.00014745102089364082, -0.022024327889084816, -5.435795901576057e-05, -0.006886912509799004, -6.079655122448457e-06, -0.4497460722923279, -0.0018040348077192903, -0.016356321051716805, -0.15666233003139496, -0.0007659838884137571, -0.0011316093150526285, -0.00022015532886143774, -0.00227656913921237, -0.006731571163982153, -0.49228399991989136, -0.04424747824668884, -0.003777275327593088, -0.00015615197480656207, -0.020983485504984856, -0.007221548352390528, -0.005173391196876764, -0.0018651961581781507, -0.02719343639910221, -0.08781567960977554, -0.15468326210975647, -0.4293869137763977, -0.08318053930997849, -0.001342110801488161, -0.06421050429344177, -0.06054271385073662, -0.41350436210632324, -0.04025004431605339, -2.0503786799963564e-05, -0.31325510144233704, -0.0006512666586786509, -0.007915675640106201, -0.0011192255187779665, -0.01625041477382183, -0.0026405726093798876, -0.00018869050836656243, -2.074220174108632e-05, -0.0002165798214264214, -0.0018527023494243622, -0.0022696706000715494, -0.016821326687932014, -0.08339782059192657, -0.011128382757306099, -0.0005785936955362558, -0.0009925207123160362, -2.3468539714813232, -0.004477357026189566, -1.0477067232131958, -0.21177373826503754, -0.22003240883350372, -0.0009698931244201958, -0.0088768620043993, -0.0018958942964673042, -0.20085012912750244, -0.07570738345384598, -1.2487421035766602, -0.4817371368408203, -3.5833287239074707, -1.9957903623580933, -1.1527302265167236, -0.4338538646697998, -0.10061619430780411, -0.2201627939939499, -0.02198992483317852, -0.004044567700475454, -0.06633704900741577, -0.0584518127143383, -0.03080287016928196, -0.00032360086333937943, -0.011658393777906895, -0.24410709738731384, -0.28426307439804077, -0.007619248237460852, -9.059865078597795e-06, -0.0001711698860162869, -1.6414211988449097, -5.960462772236497e-07, -7.152555099310121e-07, -3.838465272565372e-05, -0.0001691436773398891, -0.04478496313095093], "finish_reason": "stop"}], "metrics": {"energy": 211.48200119018566, "energy_per_token": 1.0366764764224787, "time": 8.830299, "time_per_token": 0.04328577941176471}}
{"outputs": [{"text": "if not os.path.exists(test_directory):\n        return 0\n    word_counts = Counter()\n    for file in os.listdir(test_directory):\n        file_name = os.path.join(test_directory, file)\n        with open(file_name, 'r') as f:\n            for line in f:\n                line = line.strip()\n                word_counts[line] += 1\n    with open(output_file, 'w') as f:\n        writer = csv.writer(f)\n        writer.writerow(['Word', 'Count'])\n        for word, count in word_counts.items():\n            writer.writerow([word, count])\n    return sum(word_counts.values())", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "test", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "    ", "word", "_", "counts", " =", " Counter", "()", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", ")", "\n", "        ", "with", " open", "(", "file", "_", "name", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "for", " line", " in", " f", ":", "\n", "                ", "line", " =", " line", ".", "strip", "()", "\n", "                ", "word", "_", "counts", "[", "line", "]", " +=", " ", "1", "\n", "    ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "writer", " =", " c", "sv", ".", "writer", "(", "f", ")", "\n", "        ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "        ", "for", " word", ",", " count", " in", " word", "_", "counts", ".", "items", "():", "\n", "            ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "    ", "return", " sum", "(", "word", "_", "counts", ".", "values", "())", "\n", "\n", "if"], "logprobs": [-2.5143251419067383, -0.38680097460746765, -0.6396499276161194, -0.0002195594133809209, -0.01250168401747942, -0.01626976765692234, -0.5172421336174011, -0.0043599787168204784, -0.05342783033847809, -2.9444261599564925e-05, -6.139089964563027e-05, -0.15837673842906952, -0.06564828008413315, -0.00395266804844141, -0.7194383144378662, -0.05316200107336044, -0.0006438804557546973, -0.030481815338134766, -0.8604122996330261, -2.494391441345215, -0.05024976283311844, -0.7212473154067993, -0.04994374141097069, -0.254356324672699, -0.013467177748680115, -0.0469391867518425, -0.16357819736003876, -0.27011755108833313, -1.0929738283157349, -0.6544188261032104, -0.04649503529071808, -0.0025829069782048464, -0.006414064671844244, -1.0013530300057027e-05, -0.0013172292383387685, -0.005119903478771448, -1.0490362910786644e-05, -2.7656173188006505e-05, -0.0008668717346154153, -0.006521372124552727, -0.003984370734542608, -2.02803111076355, -0.3066529631614685, -2.0588552951812744, -0.17217174172401428, -0.14029085636138916, -0.00022873646230436862, -0.0013318725395947695, -0.005673733074218035, -0.0265728160738945, -0.00025388356880284846, -0.005303480662405491, -4.792098479811102e-05, -4.446407547220588e-05, -0.0012554391287267208, -0.011175773106515408, -0.0005664412747137249, -0.004976742435246706, -0.013356143608689308, -1.3450255393981934, -0.0011886443244293332, -0.001369610894471407, -0.001302704680711031, -0.0032430693972855806, -3.158996332786046e-05, -0.1758594810962677, -0.41669246554374695, -0.07313188910484314, -0.40037113428115845, -0.0014966250164434314, -0.7515286207199097, -0.039870500564575195, -0.003774068783968687, -0.003912296146154404, -1.141891360282898, -0.3228183388710022, -0.0016123164677992463, -0.014619254507124424, -0.05813681706786156, -0.00468691810965538, -0.0012419852428138256, -1.7707149982452393, -0.1297551393508911, -0.009795927442610264, -0.002481716452166438, -0.11845695227384567, -0.015671079978346825, -0.15108434855937958, -0.004215877968817949, -0.5252965688705444, -0.20273171365261078, -0.005799727980047464, -0.21728162467479706, -0.001790588372386992, -0.04955776035785675, -0.012676848098635674, -0.006193965673446655, -9.798523387871683e-05, -0.00855767261236906, -0.4646023213863373, -0.5126092433929443, -0.00039176418795250356, -0.002092554699629545, -0.007072769105434418, -0.00019441144831944257, -0.0001896439935080707, -0.0023409125860780478, -0.018272988498210907, -0.02204228565096855, -0.37332862615585327, -0.0007083290838636458, -0.1653791069984436, -0.027698073536157608, -0.0017265664646402001, -0.001437464845366776, -0.10432340204715729, -0.0006849803612567484, -0.000445385929197073, -6.556489552167477e-06, -2.3483953555114567e-05, -0.06176770478487015, -3.969590397900902e-05, -0.0006532918778248131, -0.054520465433597565, -0.0006808108882978559, -0.003993394784629345, -0.1522165685892105, -0.00016318420239258558, -0.0014403217937797308, -0.02736419066786766, -0.14569757878780365, -0.03811485692858696, -0.001794158248230815, -8.570780482841656e-05, -0.010290540754795074, -0.003449444193392992, -0.0032690914813429117, -0.0008036244544200599, -0.0023375824093818665, -0.028161661699414253, -0.07416380941867828, -0.13321033120155334, -0.015596908517181873, -0.00018559163436293602, -0.006045507732778788, -0.00011145447206217796, -1.585470999998506e-05, -7.450303382938728e-05, -0.2610494792461395, -0.00016306500765495002, -0.0008625839254818857, -0.0012376990634948015, -0.009578460827469826, -1.4781842764932662e-05, -0.0003597089380491525, -0.0008123196894302964, -0.0008330450509674847, -0.002852896461263299, -0.005229721777141094, -0.006330200936645269, -0.00024291902082040906, -0.001211386057548225, -0.12296014279127121, -0.21878205239772797, -1.1421349048614502, -0.04392649233341217, -0.01189013384282589, -0.00017951308109331876, -4.5060096454108134e-05, -0.0007720588473603129, -0.0005554801900871098, -0.0021978288423269987, -0.43866926431655884, -0.036881785839796066, -0.829862654209137], "finish_reason": "stop"}], "metrics": {"energy": 190.3349827136993, "energy_per_token": 1.0876284726497103, "time": 7.57194, "time_per_token": 0.04326822857142857}}
{"outputs": [{"text": "total_word_count = 0\n    header = ['word', 'count']\n    output_file = open(output_file, 'w', newline='')\n    csv_writer = csv.writer(output_file)\n    csv_writer.writerow(header)\n\n    try:\n        for filename in os.listdir(test_directory):\n            if not filename.endswith('.txt'):\n                continue\n            filepath = os.path.join(test_directory, filename)\n            with open(filepath, 'r') as f:\n                data = f.read()\n                words = data.split()\n                for word in words:\n                    csv_writer.writerow([word, Counter(words).get(word)])\n                    total_word_count += Counter(words).get(word)\n\n    except Exception as e:\n        return 0\n        print(\"Exception raised:\", e)\n\n    return total_word_count", "tokens": ["total", "_", "word", "_", "count", " =", " ", "0", "\n", "    ", "header", " =", " ['", "word", "'", ",", " '", "count", "']", "\n", "    ", "output", "_", "file", " =", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " new", "line", "='", "')", "\n", "    ", "csv", "_", "writer", " =", " c", "sv", ".", "writer", "(", "output", "_", "file", ")", "\n", "    ", "csv", "_", "writer", ".", "writer", "ow", "(", "header", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "for", " filename", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "            ", "if", " not", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "continue", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "data", " =", " f", ".", "read", "()", "\n", "                ", "words", " =", " data", ".", "split", "()", "\n", "                ", "for", " word", " in", " words", ":", "\n", "                ", "    ", "csv", "_", "writer", ".", "writer", "ow", "([", "word", ",", " Counter", "(", "words", ")", ".", "get", "(", "word", ")]", ")", "\n", "                ", "    ", "total", "_", "word", "_", "count", " +=", " Counter", "(", "words", ")", ".", "get", "(", "word", ")", "\n", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "return", " ", "0", "\n", "        ", "print", "(", "\"", "Exception", " raised", ":\"", ",", " e", ")", "\n", "\n", "    ", "return", " total", "_", "word", "_", "count", "\n", "\n", "if"], "logprobs": [-2.3787851333618164, -0.46097543835639954, -1.5918781757354736, -0.09767976403236389, -0.10301807522773743, -0.012050800956785679, -0.019602036103606224, -0.0003660247311927378, -0.03259953856468201, -0.35866111516952515, -4.06326961517334, -0.2554871141910553, -0.5502445101737976, -2.9781315326690674, -0.007208055816590786, -0.0006148116663098335, -0.05682425573468208, -0.05787516012787819, -0.004834984894841909, -0.011346573941409588, -0.44492754340171814, -2.806126832962036, -0.18690747022628784, -0.4135861098766327, -0.3790447413921356, -0.3049519956111908, -0.02482249028980732, -0.032174251973629, -9.500529267825186e-05, -0.0005187834613025188, -0.0019964303355664015, -0.14744815230369568, -0.04972269386053085, -0.6351068019866943, -0.005524131003767252, -0.21359936892986298, -0.0003090619284193963, -0.16524067521095276, -0.00033539868309162557, -0.025830186903476715, -0.03618471696972847, -2.07173228263855, -0.2674728333950043, -0.14374098181724548, -0.0025980074424296618, -0.005411855410784483, -1.7881233361549675e-05, -7.533743337262422e-05, -0.02313106693327427, -0.00014911970356479287, -0.0032360588666051626, -3.886147169396281e-05, -2.038458114839159e-05, -0.41099855303764343, -0.0029609431512653828, -0.07021564245223999, -0.33631476759910583, -0.00015662873920518905, -0.00019751029321923852, -0.00016973962192423642, -0.0008722314960323274, -0.01565699838101864, -0.006301415152847767, -0.000542612629942596, -0.00047636605449952185, -0.004156166221946478, -0.5940378904342651, -0.0015197168104350567, -1.2880260944366455, -0.0013263961300253868, -0.002941807033494115, -0.01768943853676319, -0.5208844542503357, -0.7081543803215027, -0.002558888401836157, -0.023654406890273094, -2.2172682292875834e-05, -0.0019694233778864145, -3.2186455882765586e-06, -0.0015481640584766865, -0.006705638952553272, -4.160317621426657e-05, -7.795983401592821e-05, -0.0005306981038302183, -0.006822031922638416, -0.01045252662152052, -0.28322508931159973, -1.3186984062194824, -0.17486484348773956, -0.0007179781678132713, -0.014927707612514496, -9.595887240720913e-05, 0.0, -0.13318799436092377, -0.025782905519008636, -0.00745999813079834, -0.0003771070914808661, -0.01757664605975151, -0.017677024006843567, -0.0008288762182928622, -0.06391666829586029, -0.05479846149682999, -0.26189398765563965, -1.2290241718292236, -1.0093762874603271, -0.002540695946663618, -0.04380258545279503, -6.079655122448457e-06, -1.728519782773219e-05, -0.0035910424776375294, -0.0005957497633062303, -0.0002615109842736274, -0.003147174371406436, -1.3828182090946939e-05, -6.592056161025539e-05, -0.0004920940846204758, -0.003245327156037092, -9.595887240720913e-05, -0.0025247621815651655, -0.050422973930835724, -0.3138102889060974, -0.0007190502947196364, -0.00048458753735758364, -0.0007059465860947967, -0.00010191874753218144, -0.15556350350379944, -0.2889251708984375, -0.026176543906331062, -0.5191159248352051, -0.0013652060879394412, -1.5517752170562744, -0.03343481570482254, -0.0019246878800913692, -0.001725257490761578, -3.8791017532348633, -0.03282544016838074, -0.46671050786972046, -3.421248038648628e-05, -5.531158240046352e-05, -0.2907705307006836, -0.44894805550575256, -0.1737096905708313, -1.0216138362884521, -0.04246900603175163, -0.2931464612483978, -0.000346362212439999, -0.05236103758215904, -0.02058931440114975, -0.010515638627111912, -0.04358520358800888, -3.0289340019226074, -0.042136818170547485, -0.10255845636129379, -0.09737007319927216, -0.0005013877525925636, -0.0008793777669779956, -0.0010007378878071904, -0.0008469808381050825, -2.228663921356201, -7.390703103737906e-05, -0.0021528657525777817, -7.795983401592821e-05, -0.0006733057671226561, -0.0013378250878304243, -0.005707870703190565, -0.006317999679595232, -0.14804120361804962, -0.6973263621330261, -0.02032453939318657, -0.3906553387641907, -1.8449846506118774, -0.003392300335690379, -0.0026959760580211878, -0.000707971747033298, -0.002068405505269766, -1.6325849294662476, -0.0005316513124853373, -0.012467424385249615, -0.030436139553785324, -0.03467455878853798, -0.012083189561963081, -7.557583012385294e-05, -5.07818695041351e-05, -5.876845170860179e-05, -6.318072337307967e-06, -0.006217068061232567, -0.8374765515327454, -0.0004817279113922268, -0.0010781434830278158, -0.0010901705827564, -0.00036221143091097474, -0.00010597144137136638, -6.472854875028133e-05, -0.0003131137927994132, -0.011441567912697792, -0.009731117635965347, -1.3750243186950684, -0.6255871057510376, -0.02330915443599224, -1.3374052047729492, -0.11960670351982117, -0.23225131630897522, -0.00121174321975559, -0.007598308380693197, -0.003870259737595916, -2.608753204345703, -0.08539917320013046, -0.0003761537664104253, -0.014312352053821087, -2.8286914825439453, -1.098545789718628, -0.1322982758283615, -1.5945110321044922, -2.7966468334198, -1.7097699642181396, -0.8310811519622803, -0.016378015279769897, -0.29356658458709717, -0.013881448656320572, -0.005456079728901386, -0.8763797879219055, -0.012693915516138077, -2.1220526695251465, -0.011005769483745098, -0.00019298121333122253, -0.00010680581908673048, -0.00016878610767889768, -1.645074735279195e-05, -0.41226112842559814, -0.047562871128320694, -0.7253068685531616], "finish_reason": "stop"}], "metrics": {"energy": 241.85803402900694, "energy_per_token": 1.0470044763160473, "time": 10.079917, "time_per_token": 0.04363600432900433}}
{"outputs": [{"text": "output_file = os.path.join(FILE_DIR, output_file)\n\n    word_counts = Counter()\n    for file in os.listdir(test_directory):\n        file_path = os.path.join(test_directory, file)\n\n        if os.path.isfile(file_path) and file_path.endswith('.txt'):\n            with open(file_path, 'r', encoding='utf-8') as file:\n                word_counts.update(file.read().split())\n\n    with open(output_file, 'w', newline='', encoding='utf-8') as output_file:\n        writer = csv.writer(output_file)\n        writer.writerow(['Word', 'Count'])\n        for word, count in word_counts.items():\n            writer.writerow([word, count])\n\n    return len(word_counts)", "tokens": ["output", "_", "file", " =", " os", ".", "path", ".", "join", "(", "FILE", "_", "DIR", ",", " output", "_", "file", ")", "\n", "\n", "    ", "word", "_", "counts", " =", " Counter", "()", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", ")", "\n", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", ")", " and", " file", "_", "path", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "                ", "word", "_", "counts", ".", "update", "(", "file", ".", "read", "()", ".", "split", "())", "\n", "\n", "    ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " new", "line", "=", "''", ",", " encoding", "='", "utf", "-", "8", "')", " as", " output", "_", "file", ":", "\n", "        ", "writer", " =", " c", "sv", ".", "writer", "(", "output", "_", "file", ")", "\n", "        ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "        ", "for", " word", ",", " count", " in", " word", "_", "counts", ".", "items", "():", "\n", "            ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "\n", "    ", "return", " len", "(", "word", "_", "counts", ")"], "logprobs": [-3.322941780090332, -0.1948069930076599, -0.3062613606452942, -0.21702075004577637, -0.5165404677391052, -7.188061863416806e-05, -0.005666858050972223, -0.003673592582345009, -0.19829171895980835, -0.02915465459227562, -0.9259223937988281, -2.7179348762729205e-05, -0.00025006983196362853, -0.010176911018788815, -0.04739246517419815, -8.451581379631534e-05, -8.082063141046092e-05, -0.00883704237639904, -0.024017928168177605, -1.2048299312591553, -0.0015745873097330332, -2.7056360244750977, -0.02499539405107498, -0.6713643074035645, -0.048520103096961975, -0.19222910702228546, -0.019197380170226097, -0.05738237500190735, -0.7022767663002014, -0.7262201309204102, -1.3562350273132324, -0.7841246724128723, -0.05807045102119446, -0.0028532531578093767, -0.005582457408308983, -1.0371154530730564e-05, -0.002625948516651988, -0.01746782474219799, -0.0006588910473510623, -0.0001411338453181088, -0.0008868813747540116, -0.00983582716435194, -0.016491763293743134, -1.844832420349121, -0.4149225056171417, -0.15147405862808228, -0.0019123139791190624, -0.010628404095768929, -0.00018976318824570626, -7.748303323751315e-05, -0.004803071729838848, -0.0005698964232578874, -0.00016330339713022113, -0.013332500122487545, -1.823885577323381e-05, -4.60137271147687e-05, -0.0005390383303165436, -0.003521077334880829, -0.00037674958002753556, -0.0013854438439011574, -2.265171766281128, -0.0019330164650455117, -0.9083620309829712, -1.3043403625488281, -5.23315102327615e-05, -0.0009603655780665576, -0.000507464399561286, -0.017708878964185715, -0.046467382460832596, -0.00021002470748499036, -0.0010363452602177858, -0.002580172149464488, -4.6491513785440475e-06, -0.326670378446579, -0.0038322594482451677, -0.054589997977018356, -0.7409334778785706, -0.000418575422372669, -0.007830873131752014, -0.032541729509830475, -0.00024172721896320581, 0.0, -0.11093493551015854, -0.046486273407936096, -0.0061500114388763905, -0.0004320403386373073, -0.005454538390040398, -0.0067339395172894, -0.015265651047229767, -0.33628615736961365, -0.000393432448618114, -0.0003630455757956952, -0.0032968949526548386, -0.004415287170559168, -7.152555099310121e-07, -0.13403750956058502, -0.19148649275302887, -0.025516480207443237, -0.9032972455024719, -5.6622808187967166e-05, -0.02768566645681858, -0.04108181968331337, -0.08208584785461426, -0.10931126028299332, -0.0011870964663103223, -0.07204543054103851, -0.0007514513563364744, -0.6686038970947266, -0.10734471678733826, -0.0005616756388917565, -0.010919341817498207, -2.3420872688293457, -0.057203613221645355, -0.020236926153302193, -0.011962931603193283, -1.6331539882230572e-05, -0.05477476119995117, -0.7980993986129761, -0.041306838393211365, -0.0007286992622539401, -0.016126316040754318, -0.0002406545972917229, -0.1263066828250885, -0.06057267263531685, -0.013951514847576618, -0.10053329169750214, -0.02064034529030323, -0.2181977927684784, -0.00021443451987579465, -0.0005696581210941076, -0.001609698054380715, -0.00015960850578267127, -5.8887653722194955e-05, -0.00031251792097464204, -0.015955979004502296, -0.004319504369050264, -0.04971464350819588, -3.302042750874534e-05, -0.49680590629577637, -0.0003446938644628972, -0.5409348607063293, -0.012812084518373013, -8.67805938469246e-05, -0.004739835392683744, -0.0046304380521178246, -0.006304850801825523, -0.002605973742902279, -4.029192859889008e-05, -0.007035008631646633, -0.0001668790791882202, -2.95851469039917, -0.45149803161621094, -0.06886855512857437, -0.015115363523364067, -0.0006133820279501379, -0.002056628232821822, -0.09056919068098068, -0.00036423723213374615, -0.00028761065914295614, -1.4305104514278355e-06, -1.8954096958623268e-05, -0.1852228194475174, -9.417489309271332e-06, -0.0009800160769373178, -2.8609820219571702e-05, -5.125986263010418e-06, -0.08218774944543839, -0.0003780603874474764, -0.06746304035186768, -0.05714191496372223, -6.806619057897478e-05, -0.0005976559477858245, -0.013858992606401443, -0.096989206969738, -0.024556506425142288, -0.001259249052964151, -4.2914423829643056e-05, -0.0041248248890042305, -0.005230552051216364, -0.0033086577896028757, -0.0007166677969507873, -0.2190338373184204, -0.04348408058285713, -0.029233036562800407, -0.05478999391198158, -0.0033677073661237955, -0.00015090756642166525, -0.00458012567833066, -4.5298504119273275e-05, -1.537788011773955e-05, -2.610649426060263e-05, -0.44489559531211853, -6.782778655178845e-05, -0.0007634824141860008, -0.0011212497483938932, -0.007341430988162756, -7.867782187531702e-06, -9.154854342341423e-05, -0.000393432448618114, -0.00037520044133998454, -0.0021354984492063522, -0.011838889680802822, -0.010679121129214764, -0.0002547178009990603, -0.0023759964387863874, -0.08416029065847397, -0.009569605812430382, -0.3838330805301666, -0.7741196751594543, -0.006192307453602552, -0.015734216198325157, -4.8874615458771586e-05, -1.9788545614574105e-05, -0.25699716806411743], "finish_reason": "stop"}], "metrics": {"energy": 263.4799133787156, "energy_per_token": 1.231214548498671, "time": 9.243066, "time_per_token": 0.04319189719626169}}
{"outputs": [{"text": "if not os.path.exists(test_directory):\n        print(\"Invalid directory\")\n        return 0\n\n    output_file = os.path.join(test_directory, output_file)\n    print(output_file)\n    with open(output_file, 'w', newline='') as f:\n        csvwriter = csv.writer(f)\n        csvwriter.writerow(['Word', 'Count'])\n\n        word_counts = {}\n        for filename in os.listdir(test_directory):\n            if not filename.endswith('.txt'):\n                continue\n            with open(os.path.join(test_directory, filename)) as file:\n                for line in file:\n                    for word in line.split():\n                        word_counts[word] = word_counts.get(word, 0) + 1\n\n        sorted_words = sorted(word_counts.items(), key=lambda x: x[1], reverse=True)\n\n        for word, count in sorted_words:\n            csvwriter.writerow([word, count])", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "test", "_", "directory", "):", "\n", "        ", "print", "(", "\"", "Invalid", " directory", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "output", "_", "file", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " output", "_", "file", ")", "\n", "    ", "print", "(", "output", "_", "file", ")", "\n", "    ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " f", ":", "\n", "        ", "csv", "writer", " =", " c", "sv", ".", "writer", "(", "f", ")", "\n", "        ", "csv", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "\n", "        ", "word", "_", "counts", " =", " {}", "\n", "        ", "for", " filename", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "            ", "if", " not", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "continue", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " filename", "))", " as", " file", ":", "\n", "                ", "for", " line", " in", " file", ":", "\n", "                ", "    ", "for", " word", " in", " line", ".", "split", "():", "\n", "                ", "        ", "word", "_", "counts", "[", "word", "]", " =", " word", "_", "counts", ".", "get", "(", "word", ",", " ", "0", ")", " +", " ", "1", "\n", "\n", "        ", "s", "orted", "_", "words", " =", " sorted", "(", "word", "_", "counts", ".", "items", "()", ",", " key", "=", "lambda", " x", ":", " x", "[", "1", "]", ",", " reverse", "=", "True", ")", "\n", "\n", "        ", "for", " word", ",", " count", " in", " sorted", "_", "words", ":", "\n", "            ", "csv", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])"], "logprobs": [-2.5143251419067383, -0.38680097460746765, -0.6396499276161194, -0.0002195594133809209, -0.01250168401747942, -0.01626976765692234, -0.5172421336174011, -0.0043599787168204784, -0.05342783033847809, -2.9444261599564925e-05, -6.139089964563027e-05, -0.15837673842906952, -0.06564828008413315, -0.00395266804844141, -1.0366437435150146, -0.4634910225868225, -0.6777008175849915, -2.1715831756591797, -1.2674299478530884, -0.9949396252632141, -0.011861861683428288, -0.01113863941282034, -0.017048239707946777, -0.030560556799173355, -0.08654841035604477, -0.0007927850820124149, -0.010285940021276474, -0.5829301476478577, -0.0014922209084033966, -3.6529860496520996, -0.33171895146369934, -0.4367968738079071, -0.22300487756729126, -1.1313421726226807, -0.0018744770204648376, -0.004243180155754089, -0.011165046133100986, -0.10557597875595093, -0.016813237220048904, -0.47198882699012756, -1.7046782886609435e-05, -0.0006395916570909321, -0.0050276280380785465, -0.04858698695898056, -5.280832192511298e-05, -1.2397689715726301e-05, -0.010114840231835842, -0.0118694007396698, -0.537339985370636, -3.890829563140869, -0.07638506591320038, -0.7953196167945862, -0.000339569611242041, -0.001280084135942161, -0.01841835491359234, -0.011365902610123158, -0.5959805250167847, -2.1025543212890625, -0.018791858106851578, -0.0057165236212313175, -0.01640193909406662, -3.0397906812140718e-05, -0.0002949994814116508, -0.004248165991157293, -0.22664493322372437, -0.06174641102552414, -0.6393079161643982, -0.0003967689990531653, -0.1328554004430771, -0.00019167017308063805, -0.18794742226600647, -0.00024673278676345944, -0.0031571565195918083, -1.4467341899871826, -0.2487535923719406, -0.01513567753136158, -0.022524353116750717, -2.6503772735595703, -2.2741034030914307, -0.0016576610505580902, -0.0015506636118516326, -6.794906312279636e-06, -4.7205765440594405e-05, -0.018084753304719925, -0.00011693747364915907, -0.0019328974885866046, -0.11407049000263214, -0.002712144749239087, -0.08139003813266754, -0.5275022983551025, -0.00280962698161602, -0.00025376438861712813, -0.0024540091399103403, -0.003981165122240782, -0.538747251033783, -0.06400769203901291, -0.004032101482152939, -0.00020525732543319464, -0.028137437999248505, -0.008030745200812817, -0.007334448862820864, -0.005615175236016512, -0.9331746101379395, -0.12400870025157928, -1.9954744577407837, -0.05237970128655434, -0.7770114541053772, -0.017954794690012932, -2.4234135150909424, -0.031054483726620674, -0.29663604497909546, -0.26931995153427124, -0.6060054302215576, -0.0010190776083618402, -0.01916404999792576, -9.476689592702314e-05, -0.001280560391023755, -5.006777428206988e-06, -0.000964295701123774, -0.005078867077827454, -7.033323527139146e-06, -3.361645576660521e-05, -0.0005601267330348492, -0.004105235915631056, -0.005777920130640268, -0.2894245684146881, -0.45444828271865845, -0.0740172490477562, -0.0003922408213838935, -0.015221976675093174, -7.712543447269127e-05, 0.0, -0.1090569943189621, -0.027606118470430374, -0.006002139300107956, -0.00020621081057470292, -0.014976562932133675, -0.016226019710302353, -0.0005601267330348492, -0.0592724084854126, -0.051823873072862625, -0.2559114694595337, -0.7020058631896973, -0.00032872517476789653, -0.0006901028100401163, -0.02805444970726967, -0.00023493390472140163, -1.6331539882230572e-05, -0.0002343380037928, -2.4318398573086597e-05, -9.679325739853084e-05, -0.0015480450820177794, -2.9682672902708873e-05, -6.23445157543756e-05, -0.0001565095444675535, -0.004361046943813562, -1.5202733278274536, -0.00011967896716669202, -1.1305454969406128, -0.011049747467041016, -0.0003554189461283386, -0.004968083463609219, -0.4466477632522583, -0.16598384082317352, -0.0005578630371019244, -0.0030171608086675406, -0.01734422892332077, -0.001809508539736271, -0.0017613149248063564, -0.0006989181856624782, -1.6482752561569214, -0.004300987813621759, -0.0063704755157232285, -0.011060829274356365, -0.0013958006165921688, -0.2742099463939667, -0.0112437903881073, -0.006741044111549854, -0.0024727978743612766, -0.0008123196894302964, -0.28663191199302673, -1.184189796447754, -0.02279052697122097, -0.014971982687711716, -0.0013329440262168646, -0.07037509232759476, -0.0001461399078834802, -0.00812439899891615, -7.903263758635148e-05, -3.2305197237292305e-05, -8.844937838148326e-05, -0.009940524585545063, -3.0874729418428615e-05, -0.005086339078843594, -0.00033802041434682906, -0.0039018464740365744, -0.007192433346062899, -0.00757701275870204, -0.0009246364934369922, -0.002861217362806201, -2.5033637939486653e-05, -0.00459305988624692, -0.3475662171840668, -0.04011881351470947, -3.035017490386963, -0.001141611486673355, -0.0011468507582321763, -0.8416860699653625, -0.004204956814646721, -0.02571900747716427, -0.0043173679150640965, -0.011338086798787117, -0.00019226610311307013, -3.8742269680369645e-05, -0.2680038511753082, -0.3528777062892914, -0.2537088692188263, -5.6980417866725475e-05, -0.019850758835673332, -0.002093149581924081, -0.0033102023880928755, -0.08156606554985046, -0.000743708573281765, -0.1739712804555893, -0.0017018134240061045, -0.06808419525623322, -0.02506852149963379, -8.070142939686775e-05, -0.010246294550597668, -0.0004633783537428826, -0.0007730118231847882, -0.0009490515221841633, -0.014578488655388355, -1.613391637802124, -0.006604509893804789, -0.07155214995145798, -0.050148747861385345, -0.011107044294476509, -0.0047050719149410725, -0.0001401803019689396, -0.0013465156080201268, -0.0003108495147898793, -3.123234637314454e-05, -0.010079083032906055, -0.0006302992696873844, -0.001039560534991324, -0.030847834423184395, -0.00010108436981681734, -2.407998726994265e-05, -0.00023719835735391825, -0.00022718709078617394, -0.0007578838267363608, -0.0008397151832468808, -0.0338204987347126, -0.007848733104765415, -0.0003412379592191428], "finish_reason": "length"}], "metrics": {"energy": 271.54251542091373, "energy_per_token": 1.0607129508629443, "time": 11.134378, "time_per_token": 0.0434936640625}}
{"outputs": [{"text": "try:\n        words = Counter()\n        for fname in os.listdir(test_directory):\n            with open(test_directory+fname, encoding='utf8') as file:\n                reader = csv.reader(file, delimiter=';')\n                next(reader)\n                for row in reader:\n                    words[row[0]] += 1\n        with open(output_file, 'w', encoding='utf8') as file:\n            writer = csv.writer(file)\n            writer.writerow(['Word', 'Count'])\n            for word, count in words.items():\n                writer.writerow([word, count])\n        return sum(words.values())\n    except:\n        print(\"Error detected, please check your inputs\")\n        return 0", "tokens": ["try", ":", "\n", "        ", "words", " =", " Counter", "()", "\n", "        ", "for", " f", "name", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "            ", "with", " open", "(", "test", "_", "directory", "+", "f", "name", ",", " encoding", "='", "utf", "8", "')", " as", " file", ":", "\n", "                ", "reader", " =", " c", "sv", ".", "reader", "(", "file", ",", " del", "im", "iter", "='", ";", "')", "\n", "                ", "next", "(", "reader", ")", "\n", "                ", "for", " row", " in", " reader", ":", "\n", "                ", "    ", "words", "[", "row", "[", "0", "]]", " +=", " ", "1", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " encoding", "='", "utf", "8", "')", " as", " file", ":", "\n", "            ", "writer", " =", " c", "sv", ".", "writer", "(", "file", ")", "\n", "            ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "            ", "for", " word", ",", " count", " in", " words", ".", "items", "():", "\n", "                ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "        ", "return", " sum", "(", "words", ".", "values", "())", "\n", "    ", "except", ":", "\n", "        ", "print", "(", "\"", "Error", " detected", ",", " please", " check", " your", " inputs", "\"", ")", "\n", "        ", "return", " ", "0", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.567378044128418, -0.002057222882285714, -0.00830931682139635, -0.036056168377399445, -3.3258209228515625, -0.5695632696151733, -0.44647035002708435, -0.02951132133603096, -0.08959788084030151, -0.17881736159324646, -0.511020839214325, -3.01686429977417, -1.0064268112182617, -0.003164642956107855, -0.04141950234770775, -4.1126360883936286e-05, -0.0023292573168873787, -9.894321920000948e-06, -0.003456809790804982, -0.02029031328856945, -5.364274329622276e-05, -5.4238757002167404e-05, -0.0013306819600984454, -0.026182815432548523, -0.005056687630712986, -2.578871250152588, -0.0018185520311817527, -0.007026604376733303, -0.9010800719261169, -4.95898348162882e-05, -0.00016723664884921163, -2.244633674621582, -0.04457543045282364, -0.000164018536452204, -0.3519180715084076, -1.820258617401123, -0.18010881543159485, -0.11557146161794662, -1.6544268131256104, -0.054540105164051056, -0.002580647822469473, -1.767527461051941, -0.05368669703602791, -0.007471120450645685, -0.007833238691091537, -1.7201601266860962, -0.00655287504196167, -0.009354687295854092, -1.9311717551317997e-05, -0.0001740304142003879, -0.06620607525110245, -0.0019509821431711316, -0.008736364543437958, -1.2998747825622559, -0.15065358579158783, -0.0006585336523130536, -1.3351351299206726e-05, -0.5232117176055908, -2.8417789936065674, -0.2725346088409424, -0.01919691264629364, -0.02286451682448387, -1.7144756317138672, -0.0017041935352608562, -0.0012156723532825708, -0.2003728598356247, -0.35683467984199524, -0.028088178485631943, -0.1664460152387619, -0.40674278140068054, -0.0021918814163655043, -0.0022129351273179054, -0.00032145579461939633, -0.011616446077823639, -0.0014104428701102734, -0.005818335339426994, -0.4391613304615021, -0.12928177416324615, -0.014656847342848778, -0.005947748199105263, -0.11473553627729416, -0.02925468608736992, -0.03569803386926651, -0.3176541328430176, -0.00022957073815632612, -0.01642797328531742, -0.6088683605194092, -0.47086089849472046, -0.0006780709372833371, -0.010367113165557384, -0.018346143886446953, -7.283422019099817e-05, -0.00024482590379193425, -0.010980655439198017, -0.2779768705368042, -0.05143658071756363, -0.3577660322189331, -0.00048268112004734576, -0.46405622363090515, -0.0107793677598238, -0.012672374956309795, -0.046538617461919785, -0.3565702438354492, -0.0010102650849148631, -0.2564186751842499, -0.00670279748737812, -0.0011091040214523673, -0.004797495435923338, -0.13344277441501617, -0.0018641252536326647, -0.0004808938247151673, -2.13382354559144e-05, -2.002696055569686e-05, -0.01578197441995144, -8.642300235806033e-05, -0.0015312624163925648, -1.3569111824035645, -0.0010171722387894988, -0.00566982151940465, -0.2069108635187149, -0.00023469554434996098, -0.0015581621555611491, -0.03185190632939339, -0.26471930742263794, -0.03943534567952156, -0.0027377051301300526, -0.00033146608620882034, -0.04347563534975052, -0.00800839439034462, -0.006875073071569204, -0.0008878341759555042, -0.00830825325101614, -0.08992861956357956, -0.4064987599849701, -0.3647352159023285, -0.09303679317235947, -0.0010089550632983446, -0.016506772488355637, -0.0001512651506345719, -0.3106592297554016, -0.0003046525234822184, -0.0017072877380996943, -0.0012334127677604556, -0.0118845971301198, -2.0503786799963564e-05, -0.000456109904916957, -0.0011955503141507506, -0.004821223206818104, -0.004970574285835028, -0.010488742962479591, -0.015706520527601242, -0.0006827168981544673, -0.0005171154043637216, -0.25450217723846436, -0.24879199266433716, -1.452523946762085, -0.1565050482749939, -0.026004193350672722, -0.0014541300479322672, -0.0010887415846809745, -0.003696633968502283, -0.019049670547246933, -0.12717896699905396, -0.004171361681073904, -1.3132652044296265, -0.020877601578831673, -0.003267427906394005, -2.3527672290802, -0.7386401295661926, -0.20110763609409332, -1.3601903915405273, -4.43836784362793, -2.0654101371765137, -1.5382226705551147, -0.6411210894584656, -1.3147649765014648, -2.1868624687194824, -0.6827343702316284, -0.02480504661798477, -0.00970927719026804, -0.1390237957239151, -0.03369591012597084, -0.053682178258895874, -0.0006189814303070307, -1.6783490180969238, -2.9802276912960224e-06, -7.152555099310121e-07, -0.00011193125828867778, -0.00011681827891152352, -0.08485209196805954], "finish_reason": "stop"}], "metrics": {"energy": 209.3870912094116, "energy_per_token": 1.1020373221547979, "time": 8.21055, "time_per_token": 0.043213421052631575}}
{"outputs": [{"text": "try:\n        files = os.listdir(test_directory)\n        words = []\n\n        # \uc77d\uc5b4\uc628 \ub2e8\uc5b4 \ub9ac\uc2a4\ud2b8\uc5d0 \ucc98\ub9ac\n        for filename in files:\n            if filename.endswith('.txt'):\n                with open(os.path.join(test_directory, filename), 'r', encoding='utf-8') as f:\n                    reader = csv.reader(f)\n                    words.extend(reader)\n                    # print(filename)\n\n        # \ud544\ud130\ub9c1\n        words = list(dict.fromkeys(words))\n\n        # \ucd1d \ub2e8\uc5b4 \uc218 \uacc4\uc0b0\n        total_words = 0\n        for word in words:\n            total_words += int(word[1])\n            print(word[0], word[1])\n\n        # \uc800\uc7a5\n        with open(output_file, 'w', encoding='utf-8') as f", "tokens": ["try", ":", "\n", "        ", "files", " =", " os", ".", "list", "dir", "(", "test", "_", "directory", ")", "\n", "        ", "words", " =", " []", "\n", "\n", "        ", "#", " ", "", "", "", "", "", "", "", "", "", " ", "", "", "", "", "", "", " ", "\ub9ac", "\uc2a4", "", "", "", "\uc5d0", " ", "", "", "", "\ub9ac", "\n", "        ", "for", " filename", " in", " files", ":", "\n", "            ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " filename", ")", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "                ", "    ", "reader", " =", " c", "sv", ".", "reader", "(", "f", ")", "\n", "                ", "    ", "words", ".", "extend", "(", "reader", ")", "\n", "                ", "    ", "#", " print", "(", "filename", ")", "\n", "\n", "        ", "#", " ", "", "", "", "", "", "", "", "", "", "\n", "        ", "words", " =", " list", "(", "dict", ".", "from", "keys", "(", "words", "))", "\n", "\n", "        ", "#", " ", "", "", "", " ", "", "", "", "", "", "", " ", "\uc218", " ", "", "", "", "", "", "", "\n", "        ", "total", "_", "words", " =", " ", "0", "\n", "        ", "for", " word", " in", " words", ":", "\n", "            ", "total", "_", "words", " +=", " int", "(", "word", "[", "1", "])", "\n", "            ", "print", "(", "word", "[", "0", "]", ",", " word", "[", "1", "])", "\n", "\n", "        ", "#", " ", "", "", "", "", "", "", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f"], "logprobs": [-1.567378044128418, -0.002057222882285714, -0.00830931682139635, -0.036056168377399445, -3.592731475830078, -0.2852076590061188, -0.4177374243736267, -5.23315102327615e-05, -0.013822663575410843, -1.7523612768854946e-05, -0.003953855484724045, -0.02060706540942192, -8.487341256113723e-05, -7.56950321374461e-05, -0.0013017522869631648, -0.04477687180042267, -0.23325839638710022, -2.4644663333892822, -0.477042555809021, -1.1999573707580566, -0.010459722951054573, -1.7443917989730835, -0.003017992712557316, -1.3367573022842407, -5.0803680419921875, -2.7591147422790527, -2.3148910999298096, -0.8150763511657715, -0.6523479223251343, -0.009148937650024891, -1.7404405298293568e-05, -0.6049160957336426, -0.04379710927605629, -0.7851314544677734, -0.15540136396884918, -1.6845026016235352, -1.4516934156417847, -0.0011356578906998038, -0.0009392855572514236, -0.0018886362668126822, -4.136476854910143e-05, -1.5701274871826172, -0.8160357475280762, -0.0007993363542482257, -0.05850072205066681, -0.003541627898812294, -0.0002455409849062562, -1.1776033639907837, -0.21375629305839539, -1.3469264507293701, -4.237793922424316, -0.53014075756073, -0.5345540642738342, -1.1136574745178223, -0.0024260631762444973, -0.07160796970129013, -2.123518943786621, -0.001570302527397871, -0.008348566479980946, -0.0016144587425515056, -0.008547507226467133, -0.013726013712584972, -1.0987162590026855, -0.37702012062072754, -0.03859543427824974, -0.032440755516290665, -0.00017653337272349745, -1.1920928244535389e-07, -0.24988515675067902, -0.0377698577940464, -0.014957889914512634, -0.0007447806419804692, -0.02269124425947666, -0.05120884254574776, -0.008206339552998543, -0.5290667414665222, -0.00042083943844772875, -0.0027853762730956078, -0.5827193260192871, -0.0005281960475258529, -7.760223525110632e-05, -0.0028525397647172213, -0.00018559163436293602, -0.00017581824795342982, -0.004594840109348297, -8.940656698541716e-06, -6.675497570540756e-05, -0.0005611990345641971, -0.0129861356690526, -0.21821705996990204, -0.000442407006630674, -0.1656947135925293, -0.015895439311861992, -0.6906465291976929, -0.0012168630491942167, -0.05147168040275574, -0.061341192573308945, -0.29489654302597046, -0.17679141461849213, -0.0018656720640137792, -0.012971779331564903, -0.0023645793553441763, -0.8560712933540344, -0.014607272110879421, -0.0038611162453889847, -0.004465607926249504, -0.002413933165371418, -1.7922433614730835, -0.0009891861118376255, -0.008296548388898373, -9.536738616588991e-07, -0.0001062098381225951, -0.023508984595537186, -0.0007628867751918733, -0.0014800796052441, -0.21879853308200836, -0.011170350946485996, -0.1020917296409607, -0.0008437649230472744, -1.8755242824554443, -0.2086605280637741, -0.09146471321582794, -0.8178747892379761, -0.7743839025497437, -0.22233164310455322, -0.025748517364263535, -2.95658016204834, -0.4879058599472046, -1.129896879196167, -1.2371525764465332, -0.060027554631233215, -1.6679794788360596, -1.1895904541015625, -0.07854475826025009, -0.5850977897644043, -0.0881272479891777, -0.7516859173774719, -0.8425062894821167, -2.399794101715088, -1.6312856674194336, -0.5716775059700012, -0.7421826720237732, -0.0032802606001496315, -0.0052994489669799805, -0.20887599885463715, -0.014601867645978928, -0.0015305483248084784, -0.8721905946731567, -0.004125656094402075, -0.87483149766922, -0.15929336845874786, -0.9117575883865356, -0.004012273158878088, -3.3425285816192627, -0.22610433399677277, -0.001387943746522069, -6.711257447022945e-05, -0.061858922243118286, -0.15447449684143066, -0.019352199509739876, -0.18430744111537933, -0.8878512382507324, -0.002627375302836299, -0.391156405210495, -0.5081573724746704, -0.8264051079750061, -3.7530064582824707, -0.0528525710105896, -0.24245218932628632, -0.7199661731719971, -0.0315057747066021, -0.0005285535007715225, -0.0028586022090166807, -0.0012994902208447456, -1.4543427823809907e-05, -0.20806577801704407, -0.4633939564228058, -0.6365866661071777, -0.9982619881629944, -0.3462313711643219, -0.0009254701435565948, -0.00207673292607069, -0.0004801789182238281, -1.9073468138230965e-06, -0.09725023806095123, -0.0014873405452817678, -0.7706456780433655, -0.27694201469421387, -0.34862419962882996, -0.01403062790632248, -1.6791523694992065, -0.002064598724246025, -0.005642083939164877, -0.11512649059295654, -0.11096534132957458, -0.4894968569278717, -0.38483715057373047, -0.007881850004196167, -0.0026228572241961956, -0.0032045699190348387, -0.00435119541361928, -0.521680474281311, -0.00048315772437490523, -0.0005601267330348492, -0.012608221732079983, -1.5175082683563232, -0.006972860544919968, -0.04680553078651428, -0.018329523503780365, -0.0175328366458416, -0.00720793753862381, -0.01828516274690628, -2.275839328765869, -2.0333759784698486, -0.04189152270555496, -0.3394642472267151, -0.44937437772750854, -0.13528259098529816, -0.3626331090927124, -0.07344662398099899, -0.34948161244392395, -0.0009397619287483394, -0.001293299370445311, -0.08937954157590866, -0.014600693248212337, -0.2949773073196411, -0.025020739063620567, -0.33855950832366943, -0.6261914372444153, -0.645621120929718, -1.9407970905303955, -0.12952613830566406, -0.0025795777328312397, -0.0013047285610809922, -4.303362584323622e-05, -0.2434745579957962, -0.003948630765080452, -0.2800706923007965, -0.0002406545972917229, -0.006163991522043943, -0.15363317728042603, -0.00024470672360621393, -0.0003104920033365488, -0.002580647822469473, -0.050552863627672195, -0.017668941989541054, -0.10546956211328506, -6.925819616299123e-05, -0.30799558758735657, -0.00767106469720602, -0.020712509751319885, -0.008962639607489109, -0.0001045410826918669, -0.39873644709587097, -0.000514851592015475, -0.08329319208860397], "finish_reason": "length"}], "metrics": {"energy": 295.9790264749528, "energy_per_token": 1.1561680721677843, "time": 11.564775, "time_per_token": 0.04517490234375}}
{"outputs": [{"text": "# 1. Create a new CSV file with the header\n    try:\n        file_path = os.path.join(test_directory, output_file)\n        with open(file_path, mode='w') as file:\n            writer = csv.writer(file)\n            writer.writerow(['Word', 'Count'])\n    except FileNotFoundError:\n        print(\"File not found: {}\".format(file_path))\n        return 0\n\n    # 2. Count the number of words in each file\n    word_counts = {}\n    try:\n        for file in os.listdir(test_directory):\n            if file.endswith('.txt'):\n                file_path = os.path.join(test_directory, file)\n                with open(file_path) as file:\n                    reader = csv.reader(file)\n                    for row in reader:\n                        word_counts[row[0]] = word_counts.get(row[0], 0) + 1\n        for word, count in word_counts.items():\n            writer.", "tokens": ["#", " ", "1", ".", " Create", " a", " new", " CS", "V", " file", " with", " the", " header", "\n", "    ", "try", ":", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " output", "_", "file", ")", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " mode", "='", "w", "')", " as", " file", ":", "\n", "            ", "writer", " =", " c", "sv", ".", "writer", "(", "file", ")", "\n", "            ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "print", "(", "\"", "File", " not", " found", ":", " {", "}\"", ".", "format", "(", "file", "_", "path", "))", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " ", "2", ".", " Count", " the", " number", " of", " words", " in", " each", " file", "\n", "    ", "word", "_", "counts", " =", " {}", "\n", "    ", "try", ":", "\n", "        ", "for", " file", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "            ", "if", " file", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", ")", "\n", "                ", "with", " open", "(", "file", "_", "path", ")", " as", " file", ":", "\n", "                ", "    ", "reader", " =", " c", "sv", ".", "reader", "(", "file", ")", "\n", "                ", "    ", "for", " row", " in", " reader", ":", "\n", "                ", "        ", "word", "_", "counts", "[", "row", "[", "0", "]]", " =", " word", "_", "counts", ".", "get", "(", "row", "[", "0", "]", ",", " ", "0", ")", " +", " ", "1", "\n", "        ", "for", " word", ",", " count", " in", " word", "_", "counts", ".", "items", "():", "\n", "            ", "writer", "."], "logprobs": [-1.4501924514770508, -3.6155238151550293, -1.264007329940796, -0.3169006407260895, -3.095890998840332, -0.6891164779663086, -3.5492758750915527, -1.3536545038223267, -0.0007077334448695183, -0.09099974483251572, -1.6675971746444702, -0.7919200658798218, -0.6917823553085327, -1.4870680570602417, -0.01683187671005726, -2.5475807189941406, -0.0015920833684504032, -0.001926591619849205, -0.019421884790062904, -3.381603240966797, -0.5867632627487183, -1.6157662868499756, -0.022953063249588013, -0.2808215022087097, -2.3483953555114567e-05, -0.0023044003173708916, -0.006559507455676794, -0.00802104827016592, -0.004545474890619516, -0.9892643094062805, -4.172238186583854e-05, -9.011816291604191e-05, -0.002509898506104946, -0.12502238154411316, -0.0002002515539061278, -0.0002779574424494058, -0.007678753696382046, -0.01591937430202961, -0.05405392125248909, -0.48095768690109253, -0.0021799865644425154, -0.001838185708038509, -0.00437481515109539, -3.2186455882765586e-06, -6.317892984952778e-05, -0.0013719918206334114, -2.392585515975952, -0.09587530791759491, -0.042124245315790176, -1.4849661588668823, -0.0012521054595708847, -1.0312763452529907, -0.055120714008808136, -0.004970100242644548, -0.008433561772108078, -0.18238964676856995, -0.0015167410019785166, -0.0006176709430292249, -1.7881377516459906e-06, -4.458328112377785e-05, -0.0177326537668705, -2.884823152271565e-05, -0.002362795639783144, -0.0855545848608017, -0.001082192175090313, -0.022715715691447258, -0.07074279338121414, -0.00027533553657121956, -0.0006623458466492593, -0.00369010167196393, -0.16686873137950897, -0.038537051528692245, -0.0030050380155444145, -9.893881360767409e-05, -0.011538909748196602, -0.006431831978261471, -0.005222013685852289, -0.004315943457186222, -1.239923357963562, -0.011296244338154793, -1.0673753023147583, -0.007787699811160564, -7.56950321374461e-05, -0.2987980246543884, -0.014601750299334526, -0.001977394800633192, -0.5497443079948425, -0.5255260467529297, -0.8197490572929382, -1.5359827280044556, -0.3603431284427643, -0.010911677032709122, -2.4432191848754883, -0.9954798221588135, -0.08318459987640381, -0.0034122595097869635, -0.0018285474507138133, -0.0004934046883136034, -1.0707786083221436, -0.011723432689905167, -0.005396086256951094, -0.0019195717759430408, -0.007037494797259569, -0.055282820016145706, -0.019289059564471245, -0.052504245191812515, -0.0005701346672140062, -0.010802599601447582, -1.0325568914413452, -0.0021089711226522923, -0.15167874097824097, -0.027879174798727036, -0.021398155018687248, -0.004479849245399237, -1.6689521074295044, -0.22226788103580475, -0.4379916191101074, -0.003364737145602703, -0.08631125092506409, -0.16094593703746796, -1.2823010683059692, -1.0021361112594604, -0.5652790069580078, -0.006199652794748545, -1.3402310609817505, -0.0036485311575233936, -0.2894229590892792, -0.011535138823091984, -2.230522394180298, -0.03187038004398346, -0.03158709406852722, -2.156956195831299, -0.00011193125828867778, -0.0005957497633062303, -0.002175347413867712, -0.17432864010334015, -0.5946044921875, -1.1776021718978882, -0.04710250720381737, -0.0010274137603119016, -0.008378474973142147, -3.2186455882765586e-06, -0.0011819765204563737, -0.003915739711374044, -1.1444026313256472e-05, -3.325883881188929e-05, -0.00023266946664080024, -0.002849568147212267, -0.0016314780805259943, -0.20445217192173004, -0.11743530631065369, -0.004191542509943247, -0.011017795652151108, -5.1020273531321436e-05, -1.1920928244535389e-07, -0.11316487193107605, -0.017628533765673637, -0.010673577897250652, -0.0002574589161667973, -0.012473664246499538, -0.008358141407370567, -0.0032292858231812716, -0.8739638924598694, -0.023327438160777092, -0.023587694391608238, -0.0022211424075067043, -0.0007846852531656623, -5.6503606174374e-05, -4.6491513785440475e-06, -0.0008760428754612803, -8.523101132595912e-05, -4.815939246327616e-05, -0.0016396900173276663, -5.483612312673358e-06, -9.775113539944869e-06, -5.638440416078083e-05, -0.0006708040600642562, -0.0003518439189065248, -0.0008961713756434619, -0.016582166776061058, -0.024258339777588844, -0.00010585224663373083, -8.761498611420393e-05, -0.00019631843315437436, -0.0005315321614034474, -3.814689989667386e-06, -2.382718324661255, -8.34430247778073e-05, -0.1983286738395691, -0.007325455546379089, -0.00014697425649501383, -0.001279846066609025, -0.0009234455064870417, -1.608758807182312, -0.00018165845540352166, -0.0036806000862270594, -4.887569048150908e-06, -0.00024053541710600257, -0.01622953824698925, -8.701899787411094e-05, -0.0006711614551022649, -0.12496105581521988, -0.0018491327064111829, -0.020556148141622543, -0.00042143522296100855, -0.3134327232837677, -0.10489363968372345, -0.0005679901223629713, -0.00159327348228544, -0.0003121604095213115, -0.0029443029779940844, -0.0007270314963534474, -0.0006123098428361118, -0.07617288827896118, -2.1337034702301025, -0.03481709957122803, -0.03170628473162651, -0.004258967936038971, -0.0018962513422593474, -0.004426680505275726, -0.02868225984275341, -0.00017724849749356508, -0.38522031903266907, -3.85038583772257e-05, -8.987976616481319e-05, -0.0008560330606997013, -0.0063482061959803104, -7.903263758635148e-05, -0.0028191369492560625, -7.64102369430475e-05, -0.0007613382767885923, -0.0013056810712441802, -0.00035315475543029606, -0.005164140835404396, -0.0028291221242398024, -0.005710004363209009, -0.0016181482933461666, -0.6507412791252136, -3.802703940891661e-05, -0.010958489030599594, -2.8731415271759033, -2.5108566284179688, -0.17938773334026337, -0.11287932097911835, -0.0029463237151503563, -0.00013267113536130637, -0.03524494916200638, -3.0040289857424796e-05, -2.6702524337451905e-05, -8.511180931236595e-05, -0.0003274143091402948, -0.0001851148990681395, -0.0025070447009056807, -0.002495510270819068, -0.06609471887350082, -0.0005527398898266256], "finish_reason": "length"}], "metrics": {"energy": 270.60753276157357, "energy_per_token": 1.0570606748498967, "time": 11.133881, "time_per_token": 0.04349172265625}}
{"outputs": [{"text": "counter = Counter()\n    for file in os.listdir(test_directory):\n        filename = os.path.join(test_directory, file)\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'r', encoding='utf-8') as f:\n            reader = csv.reader(f, dialect='excel', quotechar='\"', skipinitialspace=True)\n            for row in reader:\n                if len(row) != 2:\n                    continue\n                counter[row[0]] += int(row[1])\n    with open(output_file, 'w', encoding='utf-8', newline='') as f:\n        writer = csv.writer(f, dialect='excel', quotechar='\"', skipinitialspace=True)\n        writer.writerow(['Word', 'Count'])\n        for word, count in counter.items():\n            writer.writerow([word, count])\n    return len(counter)", "tokens": ["counter", " =", " Counter", "()", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "filename", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", ")", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "filename", "):", "\n", "            ", "continue", "\n", "        ", "with", " open", "(", "filename", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "f", ",", " dialect", "='", "ex", "cel", "'", ",", " quote", "char", "='", "\"", "'", ",", " skip", "initial", "space", "=", "True", ")", "\n", "            ", "for", " row", " in", " reader", ":", "\n", "                ", "if", " len", "(", "row", ")", " ", "!", "=", " ", "2", ":", "\n", "                ", "    ", "continue", "\n", "                ", "counter", "[", "row", "[", "0", "]]", " +=", " int", "(", "row", "[", "1", "])", "\n", "    ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " encoding", "='", "utf", "-", "8", "'", ",", " new", "line", "='", "')", " as", " f", ":", "\n", "        ", "writer", " =", " c", "sv", ".", "writer", "(", "f", ",", " dialect", "='", "ex", "cel", "'", ",", " quote", "char", "='", "\"", "'", ",", " skip", "initial", "space", "=", "True", ")", "\n", "        ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "        ", "for", " word", ",", " count", " in", " counter", ".", "items", "():", "\n", "            ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "    ", "return", " len", "(", "counter", ")", "\n", "\n", "if"], "logprobs": [-3.3509626388549805, -0.09790429472923279, -0.22613199055194855, -0.015082838013768196, -0.04052184894680977, -0.33061787486076355, -1.0438865423202515, -1.3154611587524414, -0.5251418352127075, -0.043798934668302536, -0.00017355366435367614, -0.005517847836017609, -1.597391747054644e-05, -0.0034656007774174213, -0.017430689185857773, -0.00015793983766343445, -9.858122211880982e-05, -0.0026591201312839985, -0.021582618355751038, -0.01338954921811819, -3.42398738861084, -0.041856080293655396, -0.13887865841388702, -0.0002851079625543207, -0.0015938685974106193, -0.003458235412836075, -0.011615621857345104, -0.0004328744253143668, -0.007703004404902458, -3.45700973412022e-05, -9.07141511561349e-05, -0.0012440093560144305, -0.013904726132750511, -0.0008355463505722582, -0.005169596057385206, -0.039335522800683975, -0.794959306716919, -1.296341896057129, -0.24948935210704803, -0.00026067672297358513, -0.00012694983161054552, -0.0015632801223546267, -0.018788816407322884, -0.015371308661997318, -0.00014041867689229548, -0.0016811060486361384, -0.2517050504684448, -0.03970450162887573, -0.0022257810924202204, -0.2947458028793335, -0.061878982931375504, -0.10032660514116287, -0.32343992590904236, -0.0011297041783109307, -0.0006977269076742232, -0.002769684186205268, -0.10570554435253143, -0.31509166955947876, -0.06397011876106262, -0.9283658266067505, -0.0005388000281527638, -0.04300904646515846, -0.06583648175001144, -0.1259547621011734, -0.16990366578102112, -0.003249604720622301, -0.07967866957187653, -0.0020763759966939688, -0.5709362030029297, -0.04421566054224968, -0.002059364225715399, -0.0034252090845257044, -0.7534716129302979, -0.0011742371134459972, -0.009831222705543041, -1.7881377516459906e-06, -7.760223525110632e-05, -0.048462409526109695, -0.0007317964336834848, -0.0009114163694903255, -1.4661667346954346, -3.0686419010162354, -0.1492566615343094, -0.640529453754425, -0.00020704510097857565, -1.327202558517456, -0.00017796363681554794, -2.1844844818115234, -0.0009660820942372084, -0.018614718690514565, -0.5369023680686951, -1.1083537340164185, -0.00022230061586014926, -2.1185810565948486, -0.013517750427126884, -0.03335791453719139, -0.010451937094330788, -0.01234108954668045, -0.1198585107922554, -0.00399220734834671, -0.009699596092104912, -0.7391166687011719, -0.16705776751041412, -0.005377352237701416, -0.0030403363052755594, -0.0006317288498394191, -0.00844018068164587, -0.00200654286891222, -1.6868207454681396, -0.7457406520843506, -0.00019047829846385866, -0.0014774608425796032, -0.00958129484206438, -2.4429712295532227, -2.109982233378105e-05, -3.4570634852570947e-06, -0.002246477175503969, -0.15634377300739288, -0.124150849878788, -0.052870094776153564, -9.440929716220126e-05, -0.0009226117981597781, -0.6327056288719177, -0.018012868240475655, -0.0058536529541015625, -0.9339854121208191, -0.1429448127746582, -0.006555243860930204, -0.0020334296859800816, -0.02001470886170864, -0.10487324744462967, -0.4160052537918091, -0.054461538791656494, -0.00027414379292167723, -0.0009604846709407866, -0.0018983930349349976, -0.00030870441696606576, -0.0023497133515775204, -0.007351726293563843, -0.7268192172050476, -0.5769838094711304, -0.0005598884890787303, -0.001903747208416462, -0.005995266605168581, -2.6940935640595853e-05, -0.0001234931987710297, -0.0018243826925754547, -0.03433389961719513, -0.02803938090801239, -0.16757307946681976, -8.153582894010469e-05, -0.16012710332870483, -0.0036499565467238426, -0.003744971938431263, -0.003155968151986599, -8.475421054754406e-05, -1.1229791641235352, -0.0016593271866440773, -0.01088679675012827, -9.357491217087954e-05, -0.046697113662958145, -0.00017176583060063422, -0.0018486568005755544, -0.06540734320878983, -0.022015580907464027, -0.0004536076739896089, -0.0013731822837144136, -0.03982502222061157, -0.00021300431399140507, -0.0002475670480635017, -3.3378546504536644e-06, -1.3947389561508317e-05, -0.011827108450233936, -1.883488948806189e-05, -0.0005504761938937008, -0.5042765736579895, -0.08235880732536316, -0.004291017074137926, -0.0019973821472376585, -8.34461570775602e-06, -0.09555899351835251, -5.173549288883805e-05, -0.06682566553354263, -2.276871418871451e-05, -0.0026160799898207188, -0.0034884095657616854, -0.1988043636083603, -0.00014065706636756659, -0.4994063973426819, -0.00022968991834204644, -0.00016282663273159415, -0.0003939091111533344, -0.011439446359872818, -0.022185472771525383, -0.0011306566884741187, -0.002339247614145279, -0.3583439290523529, -0.0002469711471349001, -0.0009890670189633965, -0.04262632131576538, -0.1567632257938385, -0.03226463496685028, -0.002747691236436367, -8.201262971851975e-05, -0.00813350360840559, -0.006259479559957981, -0.002572800265625119, -0.0011942405253648758, -0.002070070942863822, -0.0495486818253994, -0.22708217799663544, -0.1403173804283142, -0.0316285565495491, -0.0002755738969426602, -0.01038410235196352, -5.0424259825376794e-05, -0.7013999819755554, -0.0002076410164590925, -0.00043883229955099523, -0.0009355935617350042, -0.006292056757956743, -7.986990567587782e-06, -0.00011264643399044871, -0.0003420721332076937, -0.0007911174325272441, -0.003356420435011387, -0.0059650493785738945, -0.02101745456457138, -0.00021741411183029413, -0.0008777103503234684, -0.09621751308441162, -0.1869044154882431, -0.7955906987190247, -0.0105531495064497, -0.021988993510603905, -0.20234522223472595, -0.21344336867332458, -0.027984900400042534, -0.5938417315483093], "finish_reason": "stop"}], "metrics": {"energy": 262.84309376049055, "energy_per_token": 1.0997618985794584, "time": 10.302395, "time_per_token": 0.043106255230125526}}
{"outputs": [{"text": "# check that input is valid\n    if not os.path.isdir(test_directory) or not os.path.exists(test_directory):\n        return 0\n\n    # export counts to csv file\n    with open(output_file, 'w', newline='') as output:\n        writer = csv.writer(output)\n        writer.writerow([\"Word\", \"Count\"])\n        counts = Counter()\n        for filename in os.listdir(test_directory):\n            if not os.path.isfile(os.path.join(test_directory, filename)):\n                continue\n            with open(os.path.join(test_directory, filename), encoding=\"utf-8\") as f:\n                for line in f:\n                    word = line.strip()\n                    if word:\n                        counts[word] += 1\n                writer.writerow([word, counts[word]])\n    return len(counts.elements())", "tokens": ["#", " check", " that", " input", " is", " valid", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "test", "_", "directory", ")", " or", " not", " os", ".", "path", ".", "exists", "(", "test", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " export", " counts", " to", " c", "sv", " file", "\n", "    ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " output", ":", "\n", "        ", "writer", " =", " c", "sv", ".", "writer", "(", "output", ")", "\n", "        ", "writer", ".", "writer", "ow", "([", "\"", "Word", "\"", ",", " \"", "Count", "\"", "])", "\n", "        ", "counts", " =", " Counter", "()", "\n", "        ", "for", " filename", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "            ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " filename", "))", ":", "\n", "                ", "continue", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " filename", ")", ",", " encoding", "=", "\"", "utf", "-", "8", "\"", ")", " as", " f", ":", "\n", "                ", "for", " line", " in", " f", ":", "\n", "                ", "    ", "word", " =", " line", ".", "strip", "()", "\n", "                ", "    ", "if", " word", ":", "\n", "                ", "        ", "counts", "[", "word", "]", " +=", " ", "1", "\n", "                ", "writer", ".", "writer", "ow", "([", "word", ",", " counts", "[", "word", "]]", ")", "\n", "    ", "return", " len", "(", "counts", ".", "elements", "())", "\n", "\n", "def"], "logprobs": [-1.4501924514770508, -3.4038796424865723, -3.7046217918395996, -1.8350930213928223, -0.37590208649635315, -0.196183979511261, -0.2695161700248718, -0.01019815169274807, -0.1397714614868164, -0.2983842194080353, -0.8479568958282471, -0.00011884459672728553, -0.010064921341836452, -0.009307683445513248, -0.5914732813835144, -0.01885947585105896, -0.001016814960166812, -0.006283527705818415, -3.5523738915799186e-05, -6.97350042173639e-05, -1.9476877450942993, -0.02988799288868904, -0.21934720873832703, -0.4180978536605835, -0.0013825867790728807, -0.3732582926750183, -0.02089242823421955, -0.27137497067451477, -0.006574310828000307, -0.1014353409409523, -3.397406908334233e-05, -0.00013314791431184858, -0.047191321849823, -0.01076273899525404, -0.004270126111805439, -0.670348584651947, -0.03720458224415779, -0.0004180987598374486, -0.019851459190249443, -0.20427870750427246, -0.001779640675522387, -0.40577173233032227, -4.925975799560547, -1.7732867002487183, -0.22455713152885437, -0.7839595079421997, -0.00040439533768221736, -0.8228493928909302, -0.1557331681251526, -0.0068380157463252544, -1.0735255479812622, -0.01076639536768198, -0.006576797924935818, -0.05388246849179268, -2.1219027985353023e-05, -0.0004487222759053111, -0.0029000865761190653, -0.13984039425849915, -0.022388558834791183, -0.3944283425807953, -0.00028379703871905804, -0.08727996796369553, -0.00015007323236204684, -0.11511597782373428, -0.00016378014697693288, -0.0008706831140443683, -3.165159225463867, -1.0935710668563843, -0.008550817146897316, -0.012320130132138729, -0.41777747869491577, -0.0033299254719167948, -0.0009544108179397881, -3.099436753473128e-06, -2.1815061700181104e-05, -0.03036571480333805, -6.23445157543756e-05, -0.001456272671930492, -0.15782958269119263, -0.001606484642252326, -0.04629451036453247, -0.23152299225330353, -0.00031799983116798103, -0.001532214693725109, -0.007438344415277243, -1.652422547340393, -0.009211422875523567, -0.046514153480529785, -0.00274757225997746, -0.00042822727118618786, -0.015661457553505898, -0.00566199840977788, -0.005169951822608709, -0.0014367506373673677, -0.011178956367075443, -0.31173014640808105, -2.5874550342559814, -0.03197303041815758, -0.05847194045782089, -0.01957152597606182, -0.05055864155292511, -0.22135160863399506, -0.087051622569561, -0.49577006697654724, -0.0012887752382084727, -0.029817067086696625, -4.9232225137529895e-05, -0.0012335318606346846, -4.0531076592742465e-06, -0.0004551566671580076, -0.0052365995943546295, -5.245195097813848e-06, -2.3483953555114567e-05, -0.00045265440712682903, -0.005299330223351717, -0.0018222408834844828, -0.25543272495269775, -0.842943549156189, -2.6781539916992188, -0.0001408954558428377, -0.0008610355434939265, -0.0010595666244626045, -0.023390674963593483, -0.040236763656139374, -0.00035398892941884696, -0.11820076406002045, -0.0009658439084887505, -0.00020966715237591416, -0.003535450901836157, -0.0003104920033365488, -9.214453893946484e-05, -0.0027100048027932644, -5.304672595229931e-05, -9.989239333663136e-05, -0.0005209281225688756, -0.014004179276525974, -0.0014369887067005038, -0.19999288022518158, -0.013697793707251549, -0.0004080893413629383, -0.03998733311891556, -0.06789441406726837, -0.03604961559176445, -0.2311503142118454, -0.0003073934931308031, -0.0005077026435174048, -0.03820367157459259, -6.556489552167477e-06, -3.969590397900902e-05, -6.437280717364047e-06, -0.0001646144810365513, -5.173549288883805e-05, -0.0013263961300253868, -7.510157047363464e-06, -1.1086402082582936e-05, -8.713819261174649e-05, -0.003398240776732564, -0.34845390915870667, -0.0002517383254598826, -1.994127869606018, -1.936850905418396, -0.0031436095014214516, -0.14598308503627777, -0.48286351561546326, -0.01284197811037302, -0.05690590292215347, -0.05245368182659149, -0.0004457433824427426, -1.5191314220428467, -0.031127749010920525, -0.0017527469899505377, -0.0009380945703014731, -0.7109012603759766, -0.2312454879283905, -0.001517931348644197, -0.00799940712749958, -0.06045384332537651, -0.0026116808876395226, -0.0002708068350329995, -0.0007849234389141202, -1.5865628719329834, -0.14406026899814606, -0.03988642245531082, -0.01143166795372963, -0.15291965007781982, -0.004487800411880016, -0.3280187249183655, -0.0013819915475323796, -0.00022754464589525014, -1.6976979970932007, -0.3753213882446289, -0.40085524320602417, -0.16369621455669403, -0.00014053787162993103, -0.001192097319290042, -0.04810403287410736, -0.03172764927148819, -0.002996956231072545, -0.07108016312122345, -0.00350052653811872, -0.0024097710847854614, -5.07818695041351e-05, -0.006629496812820435, -3.171558380126953, -1.8371458053588867, -0.0006846229662187397, -0.0001227780303452164, -0.0758986696600914, -0.006108779925853014, -1.7129716873168945, -0.02565603330731392, -0.01472639013081789, -0.0029810296837240458, -0.00011538793478393927, -0.004159965086728334, -0.0023712394759058952, -0.003949461970478296, -1.428112506866455, -0.3665030002593994, -0.6426998972892761, -0.013464825227856636, -0.032134078443050385, -2.6762216091156006, -2.8325681686401367, -0.004082916304469109, -0.6313464045524597, -0.028206396847963333, -1.6084988117218018], "finish_reason": "stop"}], "metrics": {"energy": 234.40038794136026, "energy_per_token": 1.0280718769357906, "time": 9.897002, "time_per_token": 0.04340790350877193}}
{"outputs": [{"text": "total_words = 0\n    try:\n        word_counts = Counter()\n        for filename in os.listdir(test_directory):\n            file_path = os.path.join(test_directory, filename)\n            with open(file_path, 'r') as f:\n                reader = csv.reader(f)\n                next(reader)  # Skip header row\n                for row in reader:\n                    word_counts.update(row[0].split())  # Update counts for each word\n\n        # Save the word counts to a CSV file\n        with open(output_file, 'w') as f:\n            writer = csv.writer(f)\n            writer.writerow(['Word', 'Count'])\n            for word, count in word_counts.most_common():\n                writer.writerow([word, count])\n\n        total_words = len(word_counts)\n        print(total_words)\n\n    except FileNotFoundError:\n        print(\"The directory does not exist.\")\n    except PermissionError:\n        print(\"You do not have sufficient permissions to", "tokens": ["total", "_", "words", " =", " ", "0", "\n", "    ", "try", ":", "\n", "        ", "word", "_", "counts", " =", " Counter", "()", "\n", "        ", "for", " filename", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "reader", " =", " c", "sv", ".", "reader", "(", "f", ")", "\n", "                ", "next", "(", "reader", ")", "  ", "#", " Skip", " header", " row", "\n", "                ", "for", " row", " in", " reader", ":", "\n", "                ", "    ", "word", "_", "counts", ".", "update", "(", "row", "[", "0", "]", ".", "split", "())", "  ", "#", " Update", " counts", " for", " each", " word", "\n", "\n", "        ", "#", " Save", " the", " word", " counts", " to", " a", " CS", "V", " file", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "writer", " =", " c", "sv", ".", "writer", "(", "f", ")", "\n", "            ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "            ", "for", " word", ",", " count", " in", " word", "_", "counts", ".", "most", "_", "common", "():", "\n", "                ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "\n", "        ", "total", "_", "words", " =", " len", "(", "word", "_", "counts", ")", "\n", "        ", "print", "(", "total", "_", "words", ")", "\n", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "print", "(", "\"", "The", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "except", " Perm", "ission", "Error", ":", "\n", "        ", "print", "(", "\"", "You", " do", " not", " have", " sufficient", " permissions", " to"], "logprobs": [-2.3787851333618164, -0.46097543835639954, -0.5871002078056335, -0.04961482062935829, -0.04096236452460289, -0.00035398892941884696, -0.04364728555083275, -0.29177892208099365, -1.241309404373169, -0.0017885654233396053, -0.00266304356046021, -0.019727222621440887, -2.838728904724121, -0.028119241818785667, -0.5158112645149231, -0.0611945316195488, -0.18614685535430908, -0.02123349905014038, -0.0543852224946022, -0.22614891827106476, -0.46322423219680786, -0.5397613048553467, -0.0022890574764460325, -0.019303791224956512, -3.218599158572033e-05, -0.0014974582009017467, -3.3378546504536644e-06, -0.001733111683279276, -0.017824934795498848, -4.6132929128361866e-05, -5.340433563105762e-05, -0.0007116645574569702, -0.007703595794737339, -0.004089921247214079, -2.8303050994873047, -0.7231314182281494, -0.06832237541675568, -0.0018148632952943444, -0.032384783029556274, -0.00020525732543319464, -2.074220174108632e-05, -0.004152604844421148, -0.0001854724541772157, -0.00012838016846217215, -0.004966659937053919, -1.3351351299206726e-05, -4.95898348162882e-05, -0.00037543877260759473, -0.005993252154439688, -0.00013207517622504383, -0.0016086269170045853, -0.01984585076570511, -1.262403964996338, -0.0004966217675246298, -0.0006170752458274364, -0.0013149671722203493, -0.00011145447206217796, -9.536697689327411e-06, -0.15368910133838654, -0.27530911564826965, -0.03150739148259163, -0.5099069476127625, -0.0008345934911631048, -1.3761357069015503, -0.021293366327881813, -0.0022884628269821405, -0.002735208487138152, -0.7426658868789673, -0.0007474012672901154, -0.007815969176590443, -1.7881377516459906e-06, -8.165503095369786e-05, -0.030728887766599655, -0.0002628219372127205, -0.0006529344827868044, -0.13100890815258026, -0.002800473477691412, -0.012079774402081966, -1.018225908279419, -0.000497336674015969, -0.0009919252479448915, -0.05825839564204216, -0.5854436755180359, -0.00010442188795423135, -0.8191978335380554, -0.3139243721961975, -1.0561161041259766, -0.09411565959453583, -0.015049723908305168, -0.05849510058760643, -0.22253338992595673, -0.0011550667695701122, -0.0005159238935448229, -2.4318398573086597e-05, -0.005302175879478455, -0.0003666205739136785, -0.00044967554276809096, -0.07471389323472977, -1.291963815689087, -0.036981161683797836, -0.8548999428749084, -4.4225667807040736e-05, -0.7989112734794617, -0.12648716568946838, -0.5933632254600525, -0.22266630828380585, -0.6746393442153931, -0.0036180056631565094, -0.22493627667427063, -0.1540934294462204, -1.9799460172653198, -0.0002456601650919765, -0.5795949697494507, -1.4327492713928223, -0.23392930626869202, -0.14221090078353882, -0.03065478429198265, -0.5248556137084961, -1.1840240955352783, -0.06186990439891815, -1.845684289932251, -2.7132644653320312, -1.5708909034729004, -0.23623046278953552, -0.10913170874118805, -0.1526443064212799, -0.20992861688137054, -0.040401067584753036, -2.3364747903542593e-05, -0.002971877809613943, -0.037020452320575714, -0.0007284610182978213, -0.09768841415643692, -5.876845170860179e-05, -0.005411974154412746, -0.008347738534212112, -2.634490556374658e-05, -0.00010513706365600228, -0.0007045170641504228, -0.009881625883281231, -0.00380850862711668, -1.1556587219238281, -0.00023123928986024112, -0.07940695434808731, -0.0036204999778419733, -0.00027855331427417696, -0.0005055579822510481, -0.032422058284282684, -0.0001357701694360003, -9.238292841473594e-05, -7.510157047363464e-06, -7.510157047363464e-06, -0.004643016029149294, -1.4305104514278355e-06, -0.0003477922291494906, -0.010960493236780167, -0.00027533553657121956, -0.0015209070406854153, -0.07118929922580719, -5.721882189391181e-05, -0.0007479969062842429, -0.015364382416009903, -0.14878657460212708, -0.02543443627655506, -0.001329253427684307, -1.3589766240329482e-05, -0.0022082962095737457, -0.002899135695770383, -0.0020149897318333387, -0.0018830440239980817, -0.0021012388169765472, -0.013984547927975655, -0.008608375675976276, -0.03475285694003105, -0.0016514724120497704, -9.595887240720913e-05, -0.0026614980306476355, -5.519237674889155e-05, -7.510157047363464e-06, -7.510157047363464e-06, -1.8371156454086304, -1.5497195136049413e-06, -6.031808152329177e-05, -0.03151640295982361, -0.020572848618030548, -0.0003058442671317607, -0.010519885458052158, -6.079655122448457e-06, -9.870042413240299e-05, -0.0003695997002068907, -0.0004814896092284471, -0.0010039533954113722, -0.027560891583561897, -0.007504486478865147, -0.00044371772673912346, -0.0019723977893590927, -0.169491708278656, -0.0310785211622715, -0.46618470549583435, -0.00319446949288249, -0.002124673454090953, -0.010756606236100197, -1.3469212055206299, -0.016078690066933632, -0.03894221410155296, -2.6702524337451905e-05, -9.894321920000948e-06, -0.08659815043210983, -0.04184293374419212, -2.016162395477295, -1.7730222940444946, -0.06933034956455231, -0.9709509015083313, -1.2278481335670222e-05, -0.00012194366718176752, -0.023631470277905464, -0.07368120551109314, -1.403956413269043, -0.10686425864696503, -0.005349250975996256, -1.1643131971359253, -0.000708090839907527, -5.495397272170521e-05, -0.6666351556777954, -0.007039625197649002, -0.0011041027028113604, -0.09611226618289948, -0.3853888511657715, -0.31657522916793823, -3.3257193565368652, -1.5611175298690796, -0.9693734645843506, -0.00067473528906703, -0.11426893621683121, -1.0357377529144287, -0.1327904760837555, -0.0009751332108862698, -0.0030685027595609426, -0.3137475550174713, -0.02366802841424942, -1.681491494178772, -0.00018952481332235038, -0.0005637010326609015, -0.022016631439328194, -0.006110083311796188, -0.0006148116663098335, -0.0019364668987691402, -0.00390635896474123, -0.006061504129320383, -0.6509979367256165, -0.6708728075027466, -0.0016562328673899174, -0.0005809764843434095, -2.171973705291748, -0.2894395589828491, -0.15683497488498688], "finish_reason": "length"}], "metrics": {"energy": 280.4044750776291, "energy_per_token": 1.0953299807719887, "time": 11.137093, "time_per_token": 0.04350426953125}}
{"outputs": [{"text": "try:\n        os.chdir(test_directory)\n        word_counts = []\n\n        for file_name in os.listdir(os.curdir):\n            if file_name.endswith('.txt'):\n                with open(file_name) as file:\n                    word_list = file.read().split()\n                    word_counts.extend(Counter(word_list).most_common())\n\n        with open(output_file, 'w', newline='') as file:\n            writer = csv.writer(file)\n            writer.writerow(['Word', 'Count'])\n            for word, count in word_counts:\n                writer.writerow([word, count])\n\n        total_words = sum([count for word, count in word_counts])\n        print(total_words)\n        return total_words\n\n    except (FileNotFoundError, UnicodeDecodeError, csv.Error, RuntimeError) as e:\n        print(f'An error occurred: {e}')\n        return 0", "tokens": ["try", ":", "\n", "        ", "os", ".", "ch", "dir", "(", "test", "_", "directory", ")", "\n", "        ", "word", "_", "counts", " =", " []", "\n", "\n", "        ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "os", ".", "cur", "dir", "):", "\n", "            ", "if", " file", "_", "name", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "with", " open", "(", "file", "_", "name", ")", " as", " file", ":", "\n", "                ", "    ", "word", "_", "list", " =", " file", ".", "read", "()", ".", "split", "()", "\n", "                ", "    ", "word", "_", "counts", ".", "extend", "(", "Counter", "(", "word", "_", "list", ")", ".", "most", "_", "common", "())", "\n", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n", "            ", "writer", " =", " c", "sv", ".", "writer", "(", "file", ")", "\n", "            ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "            ", "for", " word", ",", " count", " in", " word", "_", "counts", ":", "\n", "                ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "\n", "        ", "total", "_", "words", " =", " sum", "([", "count", " for", " word", ",", " count", " in", " word", "_", "counts", "])", "\n", "        ", "print", "(", "total", "_", "words", ")", "\n", "        ", "return", " total", "_", "words", "\n", "\n", "    ", "except", " (", "File", "NotFound", "Error", ",", " Un", "icode", "Dec", "ode", "Error", ",", " c", "sv", ".", "Error", ",", " Runtime", "Error", ")", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "e", "}", "')", "\n", "        ", "return", " ", "0", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.567378044128418, -0.002057222882285714, -0.00830931682139635, -0.036056168377399445, -3.054882049560547, -0.00286846817471087, -0.8301639556884766, -0.0012355559738352895, -0.011727909557521343, -0.04186282679438591, -0.00012337400403339416, -8.737658936297521e-05, -0.002709529362618923, -0.0949656292796135, -0.412371963262558, -1.9437837600708008, -0.047052353620529175, -0.6714890599250793, -0.0780535638332367, -3.157240629196167, -0.029679134488105774, -1.7716182470321655, -0.0029296833090484142, -0.3027516007423401, -0.8275543451309204, -1.1981178522109985, -0.04996097832918167, -0.0039018464740365744, -0.011446753516793251, -0.002855036174878478, -0.0015506636118516326, -6.318072337307967e-06, -0.7451919913291931, -1.781285047531128, -0.00046433156239800155, -1.3333499431610107, -0.0001454247540095821, -0.0018140303436666727, -0.04105721786618233, -0.013178274035453796, -0.3586377799510956, -0.208538219332695, -0.0006735440110787749, -0.0001646144810365513, -0.03466247022151947, -0.029695218428969383, -0.0001559135998832062, -1.1920928244535389e-07, -0.3230797052383423, -0.03521226346492767, -0.008759526535868645, -0.0006302992696873844, -0.021689243614673615, -0.009207525290548801, -0.01428003516048193, -0.4052811861038208, -0.0004312062228564173, -0.004735326860100031, -0.03222631290555, -3.933898824470816e-06, -4.3987260141875595e-05, -1.54704749584198, -0.00025102324434556067, -0.6347385048866272, -0.05658005550503731, -0.0018649582052603364, -0.006663246545940638, -0.0019469369435682893, -1.6568459272384644, -0.020346499979496002, -2.2028541564941406, -0.004589381627738476, -0.5481751561164856, -0.0002673506969586015, -0.00036840804386883974, -0.04561365768313408, -0.008100749924778938, -0.09710410237312317, -0.1493106633424759, -0.01610930822789669, -0.13776279985904694, -0.09338376671075821, -0.5559055209159851, -0.006534399930387735, -0.2860066294670105, -0.12252625823020935, -0.668103039264679, -0.07931578159332275, -0.6499943137168884, -0.003935450688004494, -0.0059007019735872746, -0.0021802245173603296, -7.509902934543788e-05, -0.04173820838332176, -0.00024327656137757003, -1.8964612483978271, -4.291525328881107e-06, -0.00012361239350866526, -0.030574316158890724, -0.013308032415807247, -0.14861829578876495, -0.023022731766104698, -0.3402118682861328, -0.000286657246761024, -0.016014404594898224, -0.018792325630784035, -7.533743337262422e-05, -0.00020489977032411844, -0.0017901124665513635, -0.13286259770393372, -0.020318932831287384, -0.29901567101478577, -0.0004889961564913392, -0.07728046923875809, -0.00023636408150196075, -0.059994887560606, -0.00011097769311163574, -0.0004353767435532063, -0.4373140037059784, -0.0028693003114312887, -0.0022851326502859592, -0.001779640675522387, -0.07423188537359238, -0.0004011779965367168, -0.00034445550409145653, -1.7881377516459906e-06, -9.894321920000948e-06, -0.011859976686537266, -3.0397906812140718e-05, -0.0007720588473603129, -0.10031258314847946, -0.00032395837479270995, -0.032599076628685, -0.10876096785068512, -7.986703712958843e-05, -0.001639452064409852, -0.0757812038064003, -0.1211468055844307, -0.03630451112985611, -0.0019001776818186045, -9.119095193454996e-05, -0.006394520867615938, -0.004643016029149294, -0.0037416466511785984, -0.0008484101272188127, -0.03351885452866554, -0.7746216058731079, -0.14381738007068634, -0.40938472747802734, -0.015315546654164791, -0.00036161558819003403, -0.001966924872249365, -8.702239938429557e-06, -1.9788545614574105e-05, -0.01372660230845213, -0.0005656072753481567, -0.0007013006834313273, -0.011881652288138866, -7.033323527139146e-06, -0.0001656871900195256, -0.0007454953738488257, -0.0017641709418967366, -0.005005922168493271, -0.030177660286426544, -0.01826760545372963, -0.0004109491710551083, -0.0002610342635307461, -0.1781948059797287, -0.0398750826716423, -1.84349524974823, -0.18763482570648193, -0.2903110384941101, -0.0036390291061252356, -0.5865808129310608, -1.1316977739334106, -0.3513815701007843, -0.006868324708193541, -0.3834557831287384, -0.0006587718962691724, -0.003986389376223087, -0.0017202593153342605, -0.0019276624079793692, -6.556489552167477e-06, -0.00014745102089364082, -0.006598114967346191, -0.0023503080010414124, -0.17323333024978638, -2.6165359020233154, -0.06277558952569962, -0.5203697681427002, -1.3232143828645349e-05, -5.328513361746445e-05, -0.01262646820396185, -0.028012024238705635, -0.37788182497024536, -0.04614778980612755, -0.05380825325846672, -6.460934673668817e-05, -2.062299427052494e-05, -0.009436290711164474, -0.9082735776901245, -0.005002601072192192, -0.0113521134480834, -2.0783793926239014, -0.8189678192138672, -0.002560553140938282, -2.9682672902708873e-05, -0.06304850429296494, -3.53286075592041, -0.5737906098365784, -0.11254148930311203, -0.028425412252545357, -6.97350042173639e-05, -1.054140567779541, -2.4550273418426514, -0.002214719308540225, -0.004703054670244455, -0.005667924880981445, -1.0834494829177856, -4.487140655517578, -0.015923716127872467, -1.272718906402588, -0.007312083151191473, -0.8324577808380127, -0.0006065912893973291, -0.004377307370305061, -0.0025958672631531954, -0.07556580007076263, -0.10038601607084274, -0.5677177309989929, -0.7996371984481812, -2.242579221725464, -0.05084181949496269, -0.06788795441389084, -0.1043207198381424, -0.0065071601420640945, -0.10529618710279465, -0.05229293182492256, -0.008582847192883492, -0.009617188014090061, -0.04475133866071701, -0.04251813516020775, -0.01569185219705105, -0.00018606838420964777, -1.486617922782898, -1.1920922133867862e-06, -5.960462772236497e-07, -2.7179348762729205e-05, -9.822363062994555e-05, -0.08636855334043503], "finish_reason": "stop"}], "metrics": {"energy": 281.64621669673926, "energy_per_token": 1.1265848667869571, "time": 10.937555, "time_per_token": 0.04375022}}
{"outputs": [{"text": "try:\n        # Generate a dictionary with a mapping word : count\n        words = {}\n        with os.scandir(test_directory) as files:\n            for file in files:\n                if file.name.endswith('txt'):\n                    with open(os.path.join(test_directory, file.name), mode='r', encoding='utf-8') as dict_file:\n                        reader = csv.reader(dict_file)\n                        for row in reader:\n                            words[row[0]] = 0\n                            for word in row[1:]:\n                                words[word] += 1\n        # Save counts to CSV file\n        with open(output_file, mode='w', encoding='utf-8', newline='') as csv_file:\n            writer = csv.writer(csv_file)\n            writer.writerow(['Word', 'Count'])\n            for word, count in words.items():\n                writer.writerow([word, count])\n        return sum(words.values())\n    except Exception:\n        return 0\n", "tokens": ["try", ":", "\n", "        ", "#", " Generate", " a", " dictionary", " with", " a", " mapping", " word", " :", " count", "\n", "        ", "words", " =", " {}", "\n", "        ", "with", " os", ".", "sc", "and", "ir", "(", "test", "_", "directory", ")", " as", " files", ":", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "if", " file", ".", "name", ".", "end", "sw", "ith", "('", "txt", "')", ":", "\n", "                ", "    ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", ".", "name", ")", ",", " mode", "='", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " dict", "_", "file", ":", "\n", "                ", "        ", "reader", " =", " c", "sv", ".", "reader", "(", "dict", "_", "file", ")", "\n", "                ", "        ", "for", " row", " in", " reader", ":", "\n", "                ", "            ", "words", "[", "row", "[", "0", "]]", " =", " ", "0", "\n", "                ", "            ", "for", " word", " in", " row", "[", "1", ":", "]:", "\n", "                ", "                ", "words", "[", "word", "]", " +=", " ", "1", "\n", "        ", "#", " Save", " counts", " to", " CS", "V", " file", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " mode", "='", "w", "'", ",", " encoding", "='", "utf", "-", "8", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "_", "file", ":", "\n", "            ", "writer", " =", " c", "sv", ".", "writer", "(", "csv", "_", "file", ")", "\n", "            ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "            ", "for", " word", ",", " count", " in", " words", ".", "items", "():", "\n", "                ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "        ", "return", " sum", "(", "words", ".", "values", "())", "\n", "    ", "except", " Exception", ":", "\n", "        ", "return", " ", "0", "\n"], "logprobs": [-1.567378044128418, -0.002057222882285714, -0.00830931682139635, -0.036056168377399445, -1.6682623624801636, -5.337210178375244, -0.9989997744560242, -1.1029917001724243, -2.320978879928589, -3.051603317260742, -3.4912445545196533, -3.3027877807617188, -3.2203996181488037, -0.3826868534088135, -0.8043957352638245, -0.007508391048759222, -2.68422794342041, -0.7943491339683533, -1.769127607345581, -0.0245895404368639, -0.14958621561527252, -2.591655969619751, -0.29852095246315, -3.981510963058099e-05, -0.028567921370267868, -0.00040558696491643786, -8.987976616481319e-05, -0.0022122215013951063, -0.017877396196126938, -0.00013755806139670312, -0.00013124081306159496, -0.0010095505276694894, -0.0014004433760419488, -2.096768856048584, -0.013910134322941303, -0.02540561370551586, -0.013017553836107254, -0.08649669587612152, -0.265790194272995, -0.04919444024562836, -0.004591398872435093, -0.0022709788754582405, -0.011981189250946045, -0.00666218064725399, -0.311472624540329, -0.16955338418483734, -0.0005418977816589177, -0.6921411156654358, -0.02522999234497547, -0.02381412498652935, -0.0005175919504836202, -2.3841855067985307e-07, -0.2344457060098648, -2.4765195846557617, -0.0006478118011727929, -0.03406340628862381, -0.033527158200740814, -0.0058212983421981335, -0.001536618685349822, -0.2285739779472351, -0.00817855354398489, -0.005274072289466858, -1.4442839622497559, -0.000645429186988622, -0.0011197017738595605, -0.0012424614978954196, -0.0031191289890557528, -0.0006644901586696506, -0.07736377418041229, -9.417489309271332e-06, -0.00021669900161214173, -0.001261987374164164, -0.02920154482126236, -0.05029726400971413, -0.0021906918846070766, -0.4853276312351227, -0.0016387379728257656, -3.1800265312194824, -0.0940035730600357, -0.08163660019636154, -0.8793171644210815, -0.0015614947769790888, -0.06287724524736404, -0.029943063855171204, -0.10922224074602127, -0.27769598364830017, -0.004829883575439453, -0.03819185122847557, -0.004859304521232843, -2.939552068710327, -0.1619146764278412, -0.0687965527176857, -0.001039203256368637, -0.0022104373201727867, -0.0066996002569794655, -0.001979893073439598, -2.9670281410217285, -0.008841178379952908, -0.019589528441429138, -3.814689989667386e-06, -0.00019774865359067917, -0.11467219144105911, -0.002084584441035986, -0.005840142257511616, -5.447716102935374e-05, -3.218599158572033e-05, -0.5582690834999084, -0.005245137959718704, -0.05648891627788544, -0.0018775707576423883, -0.4733351171016693, -0.4121120274066925, -0.0024142900947481394, -0.0030559052247554064, -0.0006273209000937641, -0.008221236988902092, -0.002292982302606106, -0.0026104918215423822, -1.4539015293121338, -0.06802550703287125, -0.0112879928201437, -0.011092543601989746, -0.023193616420030594, -0.04515558481216431, -0.0033717467449605465, -1.8995569944381714, -0.38875675201416016, -0.04555010423064232, -1.0233702659606934, -0.6437346339225769, -0.7566820979118347, -0.3968627154827118, -0.01928461529314518, -0.02270219847559929, -1.0092687606811523, -0.20939862728118896, -0.0880562961101532, -0.01332885306328535, -0.014191068708896637, -0.00043215948971919715, -0.0010296764085069299, -0.2654148042201996, -0.004008355084806681, -0.1313859224319458, -0.023372391238808632, -0.13522469997406006, -0.011065663769841194, -0.0002588890492916107, -0.007052172906696796, -0.9856931567192078, -0.5813512802124023, -3.41024112701416, -3.076983690261841, -0.2480301409959793, -1.249060869216919, -0.0005122303264215589, -0.3972780108451843, -0.11574847251176834, -0.0019801310263574123, -0.21369169652462006, -0.0008733034483157098, -0.0064726946875452995, -0.12865914404392242, -0.00015639036428183317, -0.00026246439665555954, -0.0025134659372270107, -0.2300177961587906, -0.015193210914731026, -0.02566405013203621, -0.25060996413230896, -9.393251093570143e-05, -0.20644859969615936, -0.0048620328307151794, -0.015747476369142532, -0.008193806745111942, -9.214453893946484e-05, -0.9590854644775391, -0.00523719284683466, -0.04571763798594475, -7.10462118149735e-05, -0.05188533291220665, -0.0002213471452705562, -0.0018110554665327072, -0.6686394214630127, -0.0026091840118169785, -0.27435511350631714, -0.038944050669670105, -0.0009394046501256526, -0.0015337619697675109, -0.0027394883800297976, -0.23999617993831635, -0.0008893824997358024, -0.00035613393993116915, -6.556489552167477e-06, -1.9430925021879375e-05, -0.017886295914649963, -2.7894584491150454e-05, -0.00105408881790936, -5.030505417380482e-05, -2.264974000354414e-06, -0.07412141561508179, -0.0006202919175848365, -0.007510994095355272, -0.20058387517929077, -0.0001227780303452164, -0.0011692361440509558, -0.01664571464061737, -0.1290183961391449, -0.03208212926983833, -0.002176299225538969, -9.583967766957358e-05, -0.01197471097111702, -0.004946850705891848, -0.004376357886940241, -0.0021445390302687883, -0.009194886311888695, -0.07387321442365646, -0.10126654803752899, -0.32377907633781433, -0.021708257496356964, -0.0004196478403173387, -0.0864185243844986, -3.4927710657939315e-05, -0.000428942235885188, -6.937739817658439e-05, -0.0016248131869360805, -0.000521523819770664, -0.00963537022471428, -1.2040065485052764e-05, -0.0002540027489885688, -0.0005637010326609015, -0.0015200738562271, -0.001961928093805909, -0.005444697570055723, -0.012520872987806797, -0.0005509527400135994, -0.00034445550409145653, -0.44278573989868164, -0.34980759024620056, -1.8851944208145142, -0.09946013987064362, -0.04588093236088753, -0.003653876017779112, -0.0012435331009328365, -0.001671109232120216, -0.03672356531023979, -0.14208504557609558, -0.012826796621084213, -0.5768296718597412, -1.4755563735961914, -0.01713472604751587, -0.001976324012503028, -0.31551477313041687, -0.01938224956393242, -0.00027569307712838054, -0.5172311067581177], "finish_reason": "length"}], "metrics": {"energy": 311.30381697464, "energy_per_token": 1.2160305350571874, "time": 11.327533, "time_per_token": 0.04424817578125}}
{"outputs": [{"text": "try:\n        file_list = os.listdir(test_directory)\n    except:\n        return 0\n\n    file_dict = dict()\n    for file in file_list:\n        with open(test_directory + file, 'rt') as file:\n            # print(file.read())\n            # file_dict[file] = Counter(file.readlines())\n            file_dict[file] = Counter(file.read().replace(\"\\n\", \"\").split(\" \"))\n\n    total = 0\n\n    with open(output_file, 'wt') as file:\n        writer = csv.writer(file)\n        writer.writerow(['Word', 'Count'])\n        for word in file_dict.items():\n            writer.writerow([word[0], word[1][0]])\n            total += word[1][0]\n\n    return total", "tokens": ["try", ":", "\n", "        ", "file", "_", "list", " =", " os", ".", "list", "dir", "(", "test", "_", "directory", ")", "\n", "    ", "except", ":", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "file", "_", "dict", " =", " dict", "()", "\n", "    ", "for", " file", " in", " file", "_", "list", ":", "\n", "        ", "with", " open", "(", "test", "_", "directory", " +", " file", ",", " '", "rt", "')", " as", " file", ":", "\n", "            ", "#", " print", "(", "file", ".", "read", "())", "\n", "            ", "#", " file", "_", "dict", "[", "file", "]", " =", " Counter", "(", "file", ".", "read", "lines", "())", "\n", "            ", "file", "_", "dict", "[", "file", "]", " =", " Counter", "(", "file", ".", "read", "()", ".", "replace", "(", "\"", "\\", "n", "\"", ",", " \"", "\"", ")", ".", "split", "(", "\"", " \"", "))", "\n", "\n", "    ", "total", " =", " ", "0", "\n", "\n", "    ", "with", " open", "(", "output", "_", "file", ",", " '", "wt", "')", " as", " file", ":", "\n", "        ", "writer", " =", " c", "sv", ".", "writer", "(", "file", ")", "\n", "        ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "        ", "for", " word", " in", " file", "_", "dict", ".", "items", "():", "\n", "            ", "writer", ".", "writer", "ow", "([", "word", "[", "0", "]", ",", " word", "[", "1", "][", "0", "]]", ")", "\n", "            ", "total", " +=", " word", "[", "1", "][", "0", "]", "\n", "\n", "    ", "return", " total", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.567378044128418, -0.002057222882285714, -0.00830931682139635, -0.036056168377399445, -3.057252883911133, -0.12918978929519653, -1.1137714385986328, -0.01815195195376873, -0.4572845995426178, -6.818538531661034e-05, -0.0073175267316401005, -2.0146166207268834e-05, -0.004384428728371859, -0.01750929281115532, -6.794698856538162e-05, -6.592056161025539e-05, -0.001321515068411827, -0.05440983176231384, -2.1425256729125977, -0.004849576391279697, -1.88578200340271, -0.028249045833945274, -0.003346678102388978, -0.4615098536014557, -0.060596346855163574, -0.0007286992622539401, -0.025587595999240875, -0.5510890483856201, -0.0009909725049510598, -2.6878440380096436, -0.03716564550995827, -2.0390448570251465, -0.0768161416053772, -1.9061380624771118, -0.06831936538219452, -0.02829887717962265, -0.26466917991638184, -0.49752795696258545, -0.48189258575439453, -0.4278508424758911, -0.007521997671574354, -7.235741941258311e-05, -0.00010263393050990999, -0.0016362386522814631, -0.011010485701262951, -0.017394723370671272, -2.275834560394287, -0.0017019324004650116, -0.009175160899758339, -0.5977379083633423, -6.41325386823155e-05, -9.762764238985255e-05, -0.23993109166622162, -0.12261515855789185, -0.2497827410697937, -0.3675808310508728, -2.8453259468078613, -0.5558385252952576, -0.006264218129217625, -1.7054988145828247, -1.2876828908920288, -0.004409946501255035, -0.010075423866510391, -3.4502665996551514, -3.1967031955718994, -0.15528520941734314, -0.29359912872314453, -0.7365643978118896, -0.5109726190567017, -0.5024965405464172, -0.07246729731559753, -0.012570199556648731, -2.7985079288482666, -2.420210838317871, -0.9890667200088501, -0.34596705436706543, -0.35982343554496765, -0.09296401590108871, -0.2206479161977768, -0.02083207108080387, -1.180564522743225, -0.08876428008079529, -0.09213300049304962, -0.10091054439544678, -0.014241370372474194, -3.185673475265503, -0.037049975246191025, -0.11033375561237335, -0.03871528431773186, -0.466304749250412, -0.008586511015892029, -0.02079482562839985, -0.02438841387629509, -0.015817176550626755, -0.05694475397467613, -0.0011976935202255845, -0.22493904829025269, -0.2179485708475113, -0.21735912561416626, -0.09076222777366638, -0.007210659794509411, -0.33757948875427246, -0.0010059778578579426, -3.1092355251312256, -1.3503186702728271, -0.051787879317998886, -0.10119802504777908, -0.050224028527736664, -0.002029860857874155, -0.0010221739066764712, -0.18195824325084686, -0.7844929695129395, -0.043006304651498795, -0.0026110862381756306, -0.24316230416297913, -0.9481894969940186, -0.005391580518335104, -0.2302199900150299, -0.012709570117294788, -0.0217739287763834, -0.3950854241847992, -0.028431786224246025, -3.0072646141052246, -1.3250393867492676, -0.10424156486988068, -0.0016132686287164688, -0.0034962499048560858, -2.172363519668579, -0.0007939761853776872, -0.3504581153392792, -0.0013842533808201551, -0.010942335240542889, -0.024243447929620743, -3.0636318115284666e-05, -0.0003361137059982866, -0.009262683801352978, -0.19473056495189667, -1.028558373451233, -0.10766845941543579, -0.0015306673012673855, -1.105659008026123, -0.04968469589948654, -0.006660049315541983, -0.016611596569418907, -0.42458197474479675, -0.006564125884324312, -0.0011462554102763534, -1.4424220353248529e-05, -5.602679812000133e-05, -0.09727262705564499, -0.0001991788885788992, -0.0023834886960685253, -0.20857422053813934, -0.0015111466636881232, -0.12297816574573517, -0.2537972927093506, -0.0004720765573438257, -0.0020732830744236708, -0.012613519094884396, -0.928567111492157, -0.07863655686378479, -0.007802248932421207, -0.00040725519647821784, -0.03329288214445114, -0.009747644886374474, -0.010142807848751545, -0.0032850131392478943, -0.31782957911491394, -0.06206228956580162, -1.8529212474822998, -1.034822940826416, -0.21950334310531616, -0.0005700155161321163, -0.002898778999224305, -1.7679071426391602, -2.398743152618408, -0.002590159885585308, -0.005845949519425631, -0.007101414259523153, -0.5406356453895569, -0.00026806574896909297, -0.00043883229955099523, -0.012354041449725628, -0.140532448887825, -0.050300437957048416, -0.029688971117138863, -0.02392609976232052, -0.07111147046089172, -0.13201729953289032, -0.37554875016212463, -0.0012240068754181266, -0.0004239375703036785, -1.5064680576324463, -0.9643847346305847, -0.022668519988656044, -0.0040666512213647366, -0.012966837733983994, -0.05288468301296234, -0.07780832052230835, -0.07106506079435349, -0.11596749722957611, -0.0005607224884442985, -0.0005653690313920379, -0.018557850271463394, -0.005701351445168257, -0.00038211196078918874, -0.005820113234221935, -0.3196009397506714, -0.057149458676576614, -0.12501807510852814, -0.019222287461161613, -1.7357105016708374, -1.6689286894688848e-06, -5.960462772236497e-07, -6.508615479106084e-05, -0.00011467275908216834, -0.0358625128865242], "finish_reason": "stop"}], "metrics": {"energy": 269.80402395439165, "energy_per_token": 1.2433365159188556, "time": 10.484877, "time_per_token": 0.048317405529953915}}
{"outputs": [{"text": "if os.path.isdir(test_directory):\n        count = 0\n        words_to_counts = Counter()\n\n        # Go through all the files in the specified directory.\n        for filename in os.listdir(test_directory):\n            if filename.endswith('.txt'):\n                with open(os.path.join(test_directory, filename)) as f:\n                    for line in f:\n                        line = line.strip()\n                        if line:\n                            words_to_counts[line] += 1\n                            count += 1\n\n        # Open the CSV file for writing.\n        with open(output_file, 'w') as f:\n            writer = csv.writer(f)\n            writer.writerow(['Word', 'Count'])\n            for word, count in words_to_counts.most_common():\n                writer.writerow([word, count])\n\n        return count\n    else:\n        return 0", "tokens": ["if", " os", ".", "path", ".", "is", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "count", " =", " ", "0", "\n", "        ", "words", "_", "to", "_", "counts", " =", " Counter", "()", "\n", "\n", "        ", "#", " Go", " through", " all", " the", " files", " in", " the", " specified", " directory", ".", "\n", "        ", "for", " filename", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "            ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " filename", "))", " as", " f", ":", "\n", "                ", "    ", "for", " line", " in", " f", ":", "\n", "                ", "        ", "line", " =", " line", ".", "strip", "()", "\n", "                ", "        ", "if", " line", ":", "\n", "                ", "            ", "words", "_", "to", "_", "counts", "[", "line", "]", " +=", " ", "1", "\n", "                ", "            ", "count", " +=", " ", "1", "\n", "\n", "        ", "#", " Open", " the", " CS", "V", " file", " for", " writing", ".", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "writer", " =", " c", "sv", ".", "writer", "(", "f", ")", "\n", "            ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "            ", "for", " word", ",", " count", " in", " words", "_", "to", "_", "counts", ".", "most", "_", "common", "():", "\n", "                ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "\n", "        ", "return", " count", "\n", "    ", "else", ":", "\n", "        ", "return", " ", "0"], "logprobs": [-2.5143251419067383, -2.137460947036743, -0.0010337253334000707, -0.08258844912052155, -0.04169235751032829, -0.4003317654132843, -0.19202597439289093, -0.0020136809907853603, -0.011955982074141502, -3.302042750874534e-05, -8.987976616481319e-05, -0.5162965655326843, -0.04006223753094673, -0.04339265450835228, -3.6177005767822266, -0.670971691608429, -1.0508379936218262, -0.0020745915826410055, -0.028295978903770447, -0.08609515428543091, -3.3609180450439453, -1.1896213293075562, -4.589902400970459, -0.003971191123127937, -1.8827670812606812, -0.05037740617990494, -0.24386893212795258, -0.009941233322024345, -0.057302117347717285, -1.4577702283859253, -0.002388007938861847, -2.002678155899048, -4.534950256347656, -0.17706717550754547, -0.8026155233383179, -1.2519351243972778, -0.4167642891407013, -0.23062719404697418, -0.11803986132144928, -2.6003568172454834, -0.04367421567440033, -2.908287525177002, -0.026685526594519615, -0.002881781430914998, -0.09399977326393127, -0.42730745673179626, -0.00114292127545923, -0.012676376849412918, -0.0037954451981931925, -0.0005540504935197532, -3.4570634852570947e-06, -0.0006355411605909467, -0.003144084708765149, -8.821448318485636e-06, -1.3947389561508317e-05, -0.0002802217786666006, -0.0017197832930833101, -0.025319142267107964, -0.7039210200309753, -0.4373760521411896, -0.003585103200748563, -0.008860201574862003, -5.602679812000133e-05, 0.0, -0.3984227478504181, -0.018819700926542282, -0.011173887178301811, -0.0005250982358120382, -0.01818625070154667, -0.017435140907764435, -0.02125777304172516, -1.137198805809021, -0.0003723404952324927, -0.0015824426664039493, -0.3353291153907776, -0.00022265815641731024, -2.7656173188006505e-05, -0.00102324562612921, -0.00010156115604331717, -8.153582894010469e-05, -0.003144797869026661, -1.0371154530730564e-05, -2.7417760065873154e-05, -0.0006565084331668913, -0.010324520990252495, -1.2868225574493408, -0.0002015625941567123, -1.092503309249878, -0.02254929579794407, -0.0016515913885086775, -0.016419529914855957, -0.0016452836571261287, -1.2229797840118408, -0.21782365441322327, -0.0016111262375488877, -0.007779656443744898, -0.024214474484324455, -0.004726903047412634, -0.0017660749144852161, -0.0012874656822532415, -1.6123756170272827, -0.0509457103908062, -0.010399674996733665, -0.000996093382127583, -0.12271934002637863, -0.002444852376356721, -0.17530430853366852, -0.06275980174541473, -0.0012322221882641315, -1.3606916666030884, -0.2187558114528656, -0.21117918193340302, -0.2567930221557617, -0.0011194637045264244, -0.0013827058719471097, -0.3373928666114807, -0.0322115384042263, -0.0002494739310350269, -1.3589766240329482e-05, -6.174850568640977e-05, -0.0720701664686203, -0.001649330137297511, -0.045603178441524506, -0.0008272086852230132, -0.0022643182892352343, -4.5060096454108134e-05, -0.011874230578541756, -0.14546146988868713, -0.08986324071884155, -0.022838184610009193, -0.014610678888857365, -0.007380836643278599, -5.686121585313231e-05, -0.010790453292429447, -0.28817325830459595, -0.029566992074251175, -0.4910880923271179, -3.184903144836426, -0.17378464341163635, -0.6731933355331421, -8.034383063204587e-05, -0.09372367709875107, -0.39664897322654724, -0.025071080774068832, -0.3643859922885895, -0.006408142391592264, -0.0009899006690829992, -0.0316183939576149, -0.00022599527437705547, -0.0006139777251519263, -0.04096270725131035, -9.894321920000948e-06, -9.941560711013153e-05, -0.0012497241841629148, -0.06719958037137985, -0.026209060102701187, -1.4407228231430054, -0.0004962643142789602, -0.2862412631511688, -0.03256688266992569, -0.00023898606013972312, -0.005937320180237293, -0.12750358879566193, -0.00012337400403339416, -0.00015448330668732524, -2.0265558760002023e-06, -7.390948667307384e-06, -0.0327458381652832, -5.602820692729438e-06, -0.0003960540343541652, -0.016888491809368134, -0.0006772369961254299, -0.1523553729057312, -0.07817826420068741, -7.033100700937212e-05, -0.0006588910473510623, -0.00775162223726511, -0.15069665014743805, -0.02982724830508232, -0.0012954423436895013, -3.671578815556131e-05, -0.004184775985777378, -0.003198272082954645, -0.00322370114736259, -0.005247272551059723, -0.25608155131340027, -0.10226792097091675, -0.02133362554013729, -0.08448724448680878, -0.007973862811923027, -0.001328658196143806, -0.01910487376153469, -6.460934673668817e-05, -1.0251946150674485e-05, -1.6331539882230572e-05, -2.5629668016335927e-05, -7.188061863416806e-05, -0.7266886234283447, -1.311301275563892e-06, -6.949660019017756e-05, -0.07434996962547302, -0.004793461877852678, -0.0007443041540682316, -0.0134210716933012, -1.156323378381785e-05, -0.00013219437096267939, -0.0004533693427219987, -0.0011294659925624728, -0.0014967439929023385, -0.020893828943371773, -0.005321148317307234, -0.00044550508027896285, -0.0016956250183284283, -0.21883492171764374, -0.03214458376169205, -0.10924628376960754, -0.009853769093751907, -0.027360014617443085, -0.26064062118530273, -0.15182919800281525, -0.00044610086479224265, -0.007606471423059702, -0.002544144168496132, -0.47794830799102783, -0.013689914718270302, -0.000296310376143083], "finish_reason": "stop"}], "metrics": {"energy": 281.1770551357269, "energy_per_token": 1.2441462616625085, "time": 10.721531, "time_per_token": 0.04744040265486726}}
{"outputs": [{"text": "total_words = 0\n\n    # Check the test directory\n    if not os.path.isdir(test_directory):\n        return 0\n\n    for file_name in os.listdir(test_directory):\n        if not file_name.endswith('.txt'):\n            continue\n\n        # Create a csv writer for each file\n        with open(os.path.join(test_directory, file_name), 'r') as file:\n            reader = csv.reader(file)\n            # Skip header\n            next(reader, None)\n            for row in reader:\n                word = row[0]\n                total_words += 1\n                # Write each word to the output file\n                with open(output_file, 'a') as out_file:\n                    writer = csv.writer(out_file)\n                    writer.writerow([word, 1])\n\n    return total_words", "tokens": ["total", "_", "words", " =", " ", "0", "\n", "\n", "    ", "#", " Check", " the", " test", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "if", " not", " file", "_", "name", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Create", " a", " c", "sv", " writer", " for", " each", " file", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", "_", "name", ")", ",", " '", "r", "')", " as", " file", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "file", ")", "\n", "            ", "#", " Skip", " header", "\n", "            ", "next", "(", "reader", ",", " None", ")", "\n", "            ", "for", " row", " in", " reader", ":", "\n", "                ", "word", " =", " row", "[", "0", "]", "\n", "                ", "total", "_", "words", " +=", " ", "1", "\n", "                ", "#", " Write", " each", " word", " to", " the", " output", " file", "\n", "                ", "with", " open", "(", "output", "_", "file", ",", " '", "a", "')", " as", " out", "_", "file", ":", "\n", "                ", "    ", "writer", " =", " c", "sv", ".", "writer", "(", "out", "_", "file", ")", "\n", "                ", "    ", "writer", ".", "writer", "ow", "([", "word", ",", " ", "1", "])", "\n", "\n", "    ", "return", " total", "_", "words", "\n", "\n", "#"], "logprobs": [-2.3787851333618164, -0.46097543835639954, -0.5871002078056335, -0.04961482062935829, -0.04096236452460289, -0.00035398892941884696, -0.04364728555083275, -1.3764156103134155, -0.0016946729738265276, -1.4346003532409668, -1.4422216415405273, -2.478269100189209, -2.6132428646087646, -0.8330250382423401, -1.5494754314422607, -0.0014069906901568174, -0.07793613523244858, -0.17582939565181732, -0.04878421500325203, -2.7894584491150454e-05, -0.0026562665589153767, -0.00580980209633708, -0.4443014860153198, -0.0013435394503176212, -0.00037889453233219683, -0.00241452781483531, -4.708655978902243e-05, -3.7788631743751466e-05, -0.03767400234937668, -0.004486376419663429, -0.0016024379292503, -1.1890000104904175, -0.14543920755386353, -0.0005388000281527638, -0.03859497606754303, -0.05437799543142319, -0.0015812524361535907, -2.3479819297790527, -1.112276554107666, -0.7514484524726868, -0.18412618339061737, -0.006562705151736736, -0.01567600853741169, -0.002697046147659421, -0.000760385300964117, -3.4570634852570947e-06, -0.0003299168893136084, -0.0014772227732464671, -4.291525328881107e-06, -9.536697689327411e-06, -0.0004389514506328851, -0.007139053661376238, -0.04520822688937187, -0.5456148982048035, -1.9709469079971313, -0.04212813451886177, -0.00021526881027966738, -5.6980417866725475e-05, -0.0010742137674242258, -0.014140177518129349, -7.509902934543788e-05, 0.0, -0.20653830468654633, -0.024784928187727928, -0.007913428358733654, -0.00040260792593471706, -0.03201066702604294, -0.012725813314318657, -0.00112160702701658, -0.028658628463745117, -0.10983091592788696, -0.4107144773006439, -0.0009324969723820686, -1.5195015668869019, -3.542642116546631, -0.7949774265289307, -3.5319743156433105, -0.0005150898941792548, -0.6150462031364441, -2.4712624549865723, -2.1882498264312744, -0.4441860616207123, -0.10884382575750351, -0.0010024051880463958, -1.0079916715621948, -0.0027232011780142784, -0.018163306638598442, -0.3623635768890381, -2.407998726994265e-05, -8.821098163025454e-05, -0.004061664454638958, -0.0002134810492862016, -0.0003129946126136929, -0.018829410895705223, -3.6954811548639555e-06, -5.3165931603871286e-05, -0.0002790300059132278, -0.0071328990161418915, -1.2397689715726301e-05, -6.6756979322235566e-06, -0.00941456202417612, -0.00033098942367359996, -0.19960211217403412, -0.04833940789103508, -0.2845100164413452, -0.0013065143721178174, -0.48906975984573364, -0.05330916494131088, -0.001191859133541584, -0.010946933180093765, -0.7197997570037842, -0.0015855372184887528, -0.007858550176024437, -9.536738616588991e-07, -5.209310256759636e-05, -0.05756920948624611, -0.0004553949984256178, -0.0013330630026757717, -0.277594655752182, -0.002548781456425786, -0.17157837748527527, -3.4377174377441406, -0.6828094720840454, -1.457240104675293, -0.7696205973625183, -0.0004256058018654585, -0.050321295857429504, -9.500529267825186e-05, -0.00011896379146492109, -1.3414112329483032, -0.007279775571078062, -4.362964682513848e-05, -0.01623387634754181, -0.6218734383583069, -0.48482033610343933, -0.2604888677597046, -0.003000759519636631, -0.0011250602547079325, -4.410646579344757e-05, -0.002739250659942627, -0.0040046744979918, -0.9451684355735779, -0.5541390776634216, -0.02608177810907364, -0.008155260235071182, -0.014555227011442184, -0.00047803416964598, -0.40432387590408325, -0.018881702795624733, -1.037893295288086, -0.00037281715776771307, -0.00032789100077934563, -0.0024915861431509256, -0.17550547420978546, -6.472854875028133e-05, -0.022575868293642998, -1.9546654224395752, -0.7880358099937439, -2.444307804107666, -2.6295998096466064, -0.6909377574920654, -1.5758509635925293, -0.5691692233085632, -2.168954849243164, -0.2424006462097168, -0.23110178112983704, -0.010268122889101505, -0.1343553364276886, -0.0005392765742726624, -0.004114971030503511, -0.04999465495347977, -0.00013171759201213717, -0.000302030734019354, -0.0024757706560194492, -0.029467685148119926, -0.033751003444194794, -0.08718524873256683, -0.0007996936910785735, -2.047539234161377, -0.8032150864601135, -0.007583046797662973, -0.0002658013836480677, -0.0006779517862014472, -0.0008806879632174969, -0.0017655988922342658, -0.4754795432090759, -0.005529940128326416, -0.0006210067658685148, -1.0967194612021558e-05, -2.312633478140924e-05, -0.004727733321487904, -2.3245540432981215e-05, -0.0014381790533661842, -9.894321920000948e-06, -1.9073468138230965e-06, -0.11320510506629944, -0.0005951540661044419, -0.0057801720686256886, -0.00039176418795250356, -0.036926936358213425, -9.655486064730212e-05, -0.00038115866482257843, -0.008059481158852577, -0.06793005764484406, -0.02373962476849556, -0.014876148663461208, -0.5849418640136719, -0.010528968647122383, -0.00223042001016438, -0.008818254806101322, -0.20755058526992798, -0.026712801307439804, -0.12776349484920502, -0.006146812345832586, -0.0002325502864550799, -7.450303382938728e-05, -0.46353286504745483, -0.013148861937224865, -1.578338623046875], "finish_reason": "stop"}], "metrics": {"energy": 247.24355704307553, "energy_per_token": 1.1289660138953221, "time": 10.085525, "time_per_token": 0.04605262557077626}}
{"outputs": [{"text": "file_counter = Counter()\n    words_found_in_dicts = []\n\n    # Check if the test_directory is valid\n    if not os.path.isdir(test_directory):\n        return 0\n\n    for file in os.listdir(test_directory):\n        if file.endswith('.txt'):\n            words_found_in_dicts.append(file)\n\n    for file in words_found_in_dicts:\n        file_dir = os.path.join(test_directory, file)\n        with open(file_dir, 'r') as dict_file:\n            for line in dict_file:\n                file_counter.update(line.strip().split())\n\n    with open(output_file, 'w') as file:\n        writer = csv.writer(file)\n        for word, count in file_counter.items():\n            writer.writerow([word, count])\n\n    return file_counter.total()", "tokens": ["file", "_", "counter", " =", " Counter", "()", "\n", "    ", "words", "_", "found", "_", "in", "_", "dict", "s", " =", " []", "\n", "\n", "    ", "#", " Check", " if", " the", " test", "_", "directory", " is", " valid", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "words", "_", "found", "_", "in", "_", "dict", "s", ".", "append", "(", "file", ")", "\n", "\n", "    ", "for", " file", " in", " words", "_", "found", "_", "in", "_", "dict", "s", ":", "\n", "        ", "file", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", ")", "\n", "        ", "with", " open", "(", "file", "_", "dir", ",", " '", "r", "')", " as", " dict", "_", "file", ":", "\n", "            ", "for", " line", " in", " dict", "_", "file", ":", "\n", "                ", "file", "_", "counter", ".", "update", "(", "line", ".", "strip", "()", ".", "split", "())", "\n", "\n", "    ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "')", " as", " file", ":", "\n", "        ", "writer", " =", " c", "sv", ".", "writer", "(", "file", ")", "\n", "        ", "for", " word", ",", " count", " in", " file", "_", "counter", ".", "items", "():", "\n", "            ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "\n", "    ", "return", " file", "_", "counter", ".", "total", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.9184579849243164, -0.11161880940198898, -2.7975082397460938, -0.051541995257139206, -0.8312432765960693, -0.027037272229790688, -0.07696196436882019, -0.2857116758823395, -3.8657119274139404, -0.5782593488693237, -3.4533867835998535, -2.735917329788208, -1.497770071029663, -0.06596560776233673, -1.868862509727478, -1.4400556087493896, -0.05319896340370178, -1.5797553062438965, -0.019443631172180176, -0.753507137298584, -0.001689317636191845, -1.3670755624771118, -1.8581645488739014, -0.726692795753479, -1.020599365234375, -1.5800780057907104, -0.4709254503250122, -0.027733786031603813, -0.7914597392082214, -0.34778472781181335, -0.4086156189441681, -0.0019620470702648163, -0.056876398622989655, -0.3118130564689636, -0.07941114157438278, -2.634490556374658e-05, -0.0012529388768598437, -0.008073670789599419, -0.415505588054657, -0.0010531361913308501, -0.0002641328901518136, -0.0033088955096900463, -0.0004829194222111255, -1.5139465176616795e-05, -0.039383888244628906, -0.003699840744957328, -0.0024876620154827833, -0.9523621797561646, -0.047940876334905624, -0.0006802152493037283, -0.033838361501693726, -0.05570470541715622, -0.001761909923516214, -1.8314672708511353, -0.9926925897598267, -0.8959636688232422, -0.03127830848097801, -0.004250896163284779, -0.005155483260750771, -5.245195097813848e-06, -0.0007510940195061266, -0.003488528309389949, -7.867782187531702e-06, -1.3112935448589269e-05, -0.0008350699208676815, -0.009739499539136887, -0.0284865889698267, -0.6834696531295776, -0.15542767941951752, -0.007805797271430492, -0.017691779881715775, -5.602679812000133e-05, 0.0, -0.36058005690574646, -0.027962643653154373, -0.016473589465022087, -0.0005514293443411589, -0.02386452630162239, -0.013160862028598785, -0.015747476369142532, -3.8350753784179688, -0.11292435973882675, -0.24039481580257416, -0.0563194565474987, -0.003509079571813345, -3.886147169396281e-05, -0.01053463015705347, -0.026293711736798286, -0.0772918313741684, -0.12644389271736145, -0.01713847555220127, -0.33515119552612305, -0.15194246172904968, -0.008793912827968597, -0.3605228662490845, -0.08035223931074142, -1.3524816036224365, -0.45312219858169556, -0.1482876092195511, -0.10813676565885544, -4.994744449504651e-05, -2.9205850296420977e-05, -2.0265558760002023e-06, -0.00017105070583056659, -3.3378546504536644e-06, -6.079655122448457e-06, -4.768370445162873e-07, -0.0006741396500729024, -0.003277765354141593, -0.017092538997530937, -1.8376206159591675, -0.2347257286310196, -3.4688358306884766, -0.07574783265590668, -0.19875013828277588, -1.3708974620385561e-05, -0.0005673944251611829, -0.011966347694396973, -0.0060325926169753075, -0.0007725353352725506, -0.021858839318156242, -7.510157047363464e-06, -0.00011276562872808427, -0.0012675831094384193, -0.009695109911262989, -0.0030362955294549465, -0.0069335573352873325, -0.11489580571651459, -0.4111519455909729, -0.0010367024224251509, -0.0017500099493190646, -0.0016944350209087133, -0.0037817880511283875, -0.00012134769349358976, -0.233717679977417, -0.3801763951778412, -0.06713169813156128, -0.5312000513076782, -0.0025329669006168842, -2.7535207271575928, -0.08711608499288559, -0.04390846565365791, -0.004327219445258379, -0.0030830015894025564, -0.016618981957435608, -1.0475270748138428, -0.47613680362701416, -0.0028347091283649206, -0.031389910727739334, -0.00013064485392533243, -6.258291978156194e-05, -0.07346978038549423, -0.006837660446763039, -0.002666966989636421, -1.8522518873214722, -0.0014987675240263343, -0.0063831498846411705, -0.9136739373207092, -8.666139910928905e-05, -0.20021948218345642, -0.12319308519363403, -0.05342184007167816, -0.4600660800933838, -0.11983969062566757, -0.0010917185572907329, -0.22130967676639557, -0.15817484259605408, -0.025341343134641647, -0.11274396628141403, -0.017854679375886917, -0.9113026261329651, -0.0007264359155669808, -0.00550362141802907, -0.006657562684267759, -3.1470757676288486e-05, -0.00016675988445058465, -0.001387943746522069, -0.039677463471889496, -0.026094669476151466, -0.5630810260772705, -0.0006236277404241264, -1.6748943328857422, -0.10850228369235992, -0.0020640038419514894, -0.0026676803827285767, -0.3371276557445526, -0.0017233534017577767, -0.00041083001997321844, -4.887569048150908e-06, -2.169585604860913e-05, -0.0932270735502243, -6.568216485902667e-05, -0.0017044316045939922, -0.12004132568836212, -0.00066985102603212, -0.050758086144924164, -2.2716526985168457, -0.2860910892486572, -0.14925964176654816, -0.03724110499024391, -0.0006777135422453284, -0.013349438086152077, -1.8954096958623268e-05, -3.4570634852570947e-06, -4.5298504119273275e-05, -0.3899833858013153, -0.0003601856005843729, -0.0017602439038455486, -0.00104301399551332, -0.02072523720562458, -3.707340147229843e-05, -0.0002083561266772449, -0.002695143921300769, -0.028390303254127502, -0.006341809406876564, -0.017108475789427757, -0.016000209376215935, -0.0005972985527478158, -0.0016955060418695211, -0.081316739320755, -0.010240394622087479, -0.19301579892635345, -2.279268980026245, -0.006593969650566578, -0.00010954733443213627, -0.22803403437137604, -0.016824960708618164, -0.04694566875696182, -1.2198069095611572, -2.3841855067985307e-07, -7.152555099310121e-07, -2.884823152271565e-05, -0.00037472377880476415, -0.04091430455446243], "finish_reason": "stop"}], "metrics": {"energy": 246.85289810371398, "energy_per_token": 1.0549269149731366, "time": 10.088012, "time_per_token": 0.0431111623931624}}
{"outputs": [{"text": "# Validate the input\n    if not test_directory or not os.path.exists(test_directory):\n        print(\"Invalid test directory: {}\".format(test_directory))\n        return 0\n\n    # Initialize the counter and total count\n    total_words = 0\n\n    # Open the output file\n    with open(output_file, 'w', newline='') as csv_file:\n        writer = csv.writer(csv_file)\n        writer.writerow([\"Word\", \"Count\"])\n\n        # Loop through all files in the test directory\n        for file in os.listdir(test_directory):\n            file_path = os.path.join(test_directory, file)\n            if os.path.isfile(file_path) and file.endswith(\".txt\"):\n                # Open the file\n                try:\n                    with open(file_path, 'r') as file:\n                        # Count the number of words in the file\n                        word_count = Counter(file.read().split())\n\n                        # Write the counts", "tokens": ["#", " Valid", "ate", " the", " input", "\n", "    ", "if", " not", " test", "_", "directory", " or", " not", " os", ".", "path", ".", "exists", "(", "test", "_", "directory", "):", "\n", "        ", "print", "(", "\"", "Invalid", " test", " directory", ":", " {", "}\"", ".", "format", "(", "test", "_", "directory", "))", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " Initialize", " the", " counter", " and", " total", " count", "\n", "    ", "total", "_", "words", " =", " ", "0", "\n", "\n", "    ", "#", " Open", " the", " output", " file", "\n", "    ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "_", "file", ":", "\n", "        ", "writer", " =", " c", "sv", ".", "writer", "(", "csv", "_", "file", ")", "\n", "        ", "writer", ".", "writer", "ow", "([", "\"", "Word", "\"", ",", " \"", "Count", "\"", "])", "\n", "\n", "        ", "#", " Loop", " through", " all", " files", " in", " the", " test", " directory", "\n", "        ", "for", " file", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", ")", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", ")", " and", " file", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "\n", "                ", "#", " Open", " the", " file", "\n", "                ", "try", ":", "\n", "                ", "    ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " file", ":", "\n", "                ", "        ", "#", " Count", " the", " number", " of", " words", " in", " the", " file", "\n", "                ", "        ", "word", "_", "count", " =", " Counter", "(", "file", ".", "read", "()", ".", "split", "())", "\n", "\n", "                ", "        ", "#", " Write", " the", " counts"], "logprobs": [-1.4501924514770508, -3.1847071647644043, -0.2187195122241974, -2.0225298404693604, -0.5495451092720032, -0.5137454867362976, -0.007069809827953577, -0.0659605860710144, -0.28526610136032104, -2.8713042736053467, -4.625213477993384e-05, -6.69933797325939e-05, -0.4286563992500305, -0.09581367671489716, -0.6269626021385193, -3.397406908334233e-05, -0.003759698709473014, -0.007876645773649216, -0.7246310114860535, -0.0013312773080542684, -0.015210235491394997, -1.5020257706055418e-05, -3.111314072157256e-05, -0.1501372754573822, -0.005986260715872049, -0.0025254758074879646, -0.99473637342453, -0.42726749181747437, -0.1979193389415741, -0.7466920614242554, -2.004192590713501, -0.3497452437877655, -3.489840507507324, -0.5662050247192383, -0.09096382558345795, -0.00233258749358356, -0.0018221217906102538, -0.0002033503697020933, -0.013299562968313694, -0.0003856868715956807, -0.0004040378553327173, -0.0032116996590048075, -0.0035786889493465424, -0.003980215173214674, -0.012015582993626595, -0.0385957770049572, -0.0003937899600714445, -0.010897056199610233, -0.189011350274086, -0.0014846028061583638, -0.4787479639053345, -2.639523983001709, -1.078123927116394, -1.030523419380188, -1.5838203430175781, -0.748677134513855, -1.1478979587554932, -0.2004697471857071, -0.0007812308613210917, -1.3674367666244507, -0.14822624623775482, -1.9372690916061401, -0.04218481853604317, -0.01645388826727867, -9.417090768693015e-05, -0.0038194339722394943, -0.6994200348854065, -0.0005036516231484711, -0.1884574145078659, -1.7224156856536865, -0.21654212474822998, -0.8839624524116516, -0.3171372413635254, -2.3098418712615967, -0.0009793015196919441, -0.4488477408885956, -0.003350836457684636, -0.0013336582342162728, -0.015886053442955017, -8.22540732769994e-06, -0.0005287918029353023, -0.0012668687850236893, -0.12463591992855072, -0.01524275727570057, -0.32627588510513306, -0.0003864018653985113, -0.07340564578771591, -8.046303264563903e-05, -0.10770346224308014, -5.936446541454643e-05, -0.0006431656656786799, -0.5319541692733765, -0.0008968859910964966, -0.5917894840240479, -0.046056948602199554, -0.003120079869404435, -0.0014965059235692024, -0.03859635069966316, -0.4692959487438202, -0.000639710808172822, -0.000602421467192471, -1.07287787614041e-05, -2.95634672511369e-05, -0.029085645452141762, -1.2516897186287679e-05, -0.0005212855176068842, -1.2755313036905136e-05, -2.7418097943154862e-06, -0.06507866829633713, -0.0020021409727633, -0.2023690789937973, -0.055349819362163544, -0.00011669908417388797, -0.0012232924345880747, -0.001383539172820747, -0.9487496614456177, -0.0018623403739184141, -0.040703848004341125, -0.002318315440788865, -0.0003196682082489133, -0.011508505791425705, -0.005297077354043722, -0.0021114691626280546, -0.0008698494057171047, -0.025994785130023956, -0.03888075798749924, -0.0063528260216116905, -0.09099996089935303, -1.26455557346344, -0.21966518461704254, -0.7871710658073425, -1.1966403722763062, -0.03339042514562607, -0.030617093667387962, -0.7349249720573425, -0.13029401004314423, -0.04618250951170921, -0.0006705658161081374, -0.009785185568034649, -1.067798376083374, -1.4672915935516357, -0.029853977262973785, -0.00014733182615600526, -0.002319504739716649, -9.536738616588991e-07, -8.391981828026474e-05, -0.0005759726045653224, -3.3378546504536644e-06, -6.198863957251888e-06, -0.00019894051365554333, -0.0004558716027531773, -0.01636710949242115, -2.2039694786071777, -0.14195193350315094, -0.09028081595897675, -0.0003943857445847243, -0.005828527733683586, -4.6967357775429264e-05, -3.2186455882765586e-06, -0.0008124388405121863, -6.139089964563027e-05, -3.0517112463712692e-05, -0.0006656814948655665, -3.576272320060525e-06, -2.7179348762729205e-05, -0.00012170527770649642, -0.0005912224878557026, -8.34430247778073e-05, -0.0016332633094862103, -0.4312553405761719, -0.2862541377544403, -0.6151348948478699, -0.00023755589791107923, -7.891343557275832e-05, -0.0007273888913914561, -0.004178840201348066, -0.0024743436370044947, -6.556489552167477e-06, -0.00022206225548870862, -0.000692961853928864, -4.768370445162873e-07, -0.20178809762001038, -0.0005830018781125546, -0.02410835213959217, -0.2826024293899536, -0.017587773501873016, -4.565611743601039e-05, 0.0, -1.2879565954208374, -0.0014730566181242466, -0.014968224801123142, -0.007223678287118673, -4.136476854910143e-05, -0.005662472452968359, -0.0037921201437711716, -0.020864760503172874, -1.6480625867843628, -0.3196880519390106, -0.06265231966972351, -0.4729677140712738, -1.8097121715545654, -0.0005043664714321494, -1.5313150882720947, -3.361645576660521e-05, -0.00016902448260225356, -0.00043561504571698606, -0.0009697740315459669, -0.01881747879087925, -0.00011097769311163574, -0.00012158608296886086, -0.0015977962175384164, -0.0010155049385502934, -2.3841855067985307e-07, -0.10532151162624359, -0.282137930393219, -0.011425421573221684, -0.3193424344062805, -0.0010469438275322318, -0.8514232039451599, -0.41079574823379517, -0.00014053787162993103, -0.009325752966105938, -0.0006449526408687234, -0.8193216919898987, -0.9462414979934692, -0.0663139596581459, -0.6835294365882874, -0.0009240409708581865, -0.10697019845247269, -0.45076149702072144, -0.0807613730430603, -0.017150193452835083, -0.07541601359844208, -0.0008612737292423844, -3.123234637314454e-05, -0.8805346488952637, -0.0012725834967568517, -0.8446698784828186, -0.007875108160078526, -0.20506763458251953, -0.07673157751560211, -0.213590607047081, -0.026771066710352898, -0.00010466027742950246, -0.008211187086999416, -0.0004359725280664861, -0.15890416502952576, -0.006999377626925707, -0.011441214010119438, -2.2969162464141846, -0.00019751029321923852, -0.02250022627413273, -0.12391907721757889, -0.7443845868110657, -0.0822632908821106, -1.354539394378662], "finish_reason": "length"}], "metrics": {"energy": 286.5417307271957, "energy_per_token": 1.1193036356531083, "time": 11.083755, "time_per_token": 0.04329591796875}}
{"outputs": [{"text": "try:\n        output_file = os.path.join(output_file, 'word_counts.csv')\n\n        csv_columns = ['Word', 'Count']\n        dict_list = [k for k, v in os.scandir(test_directory) if k.is_file() and k.endswith('.txt')]\n        dict_list.sort(key=lambda x: x.name)\n        dict_counts = []\n\n        for file_name in dict_list:\n            with open(os.path.join(test_directory, file_name), 'r') as infile:\n                dict_reader = csv.reader(infile, delimiter='\\n')\n                for row in dict_reader:\n                    count = len(row[0].split())\n                    dict_counts.append([file_name, count])\n\n        with open(output_file, 'w', newline='') as csv_file:\n            csv_writer = csv.writer(csv_file, delimiter=',', quotechar='\"', quoting=", "tokens": ["try", ":", "\n", "        ", "output", "_", "file", " =", " os", ".", "path", ".", "join", "(", "output", "_", "file", ",", " '", "word", "_", "counts", ".", "csv", "')", "\n", "\n", "        ", "csv", "_", "columns", " =", " ['", "Word", "'", ",", " '", "Count", "']", "\n", "        ", "dict", "_", "list", " =", " [", "k", " for", " k", ",", " v", " in", " os", ".", "sc", "and", "ir", "(", "test", "_", "directory", ")", " if", " k", ".", "is", "_", "file", "()", " and", " k", ".", "end", "sw", "ith", "('", ".", "txt", "')", "]", "\n", "        ", "dict", "_", "list", ".", "sort", "(", "key", "=", "lambda", " x", ":", " x", ".", "name", ")", "\n", "        ", "dict", "_", "counts", " =", " []", "\n", "\n", "        ", "for", " file", "_", "name", " in", " dict", "_", "list", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", "_", "name", ")", ",", " '", "r", "')", " as", " in", "file", ":", "\n", "                ", "dict", "_", "reader", " =", " c", "sv", ".", "reader", "(", "in", "file", ",", " del", "im", "iter", "=", "'\\", "n", "')", "\n", "                ", "for", " row", " in", " dict", "_", "reader", ":", "\n", "                ", "    ", "count", " =", " len", "(", "row", "[", "0", "]", ".", "split", "())", "\n", "                ", "    ", "dict", "_", "counts", ".", "append", "([", "file", "_", "name", ",", " count", "])", "\n", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "_", "file", ":", "\n", "            ", "csv", "_", "writer", " =", " c", "sv", ".", "writer", "(", "csv", "_", "file", ",", " del", "im", "iter", "='", ",", "'", ",", " quote", "char", "='", "\"", "'", ",", " quoting", "="], "logprobs": [-1.567378044128418, -0.002057222882285714, -0.00830931682139635, -0.036056168377399445, -2.806854248046875, -0.20372413098812103, -0.25389569997787476, -0.16102996468544006, -1.2197370529174805, -5.149708886165172e-05, -0.01053592748939991, -0.009144213050603867, -0.17008762061595917, -0.025034224614501, -2.662327766418457, -0.0001299296854995191, -0.014513400383293629, -1.46409010887146, -0.2774290144443512, -0.18329188227653503, -0.02207493595778942, -0.024641763418912888, -0.019812775775790215, -0.0014369887067005038, -0.0013317534467205405, -0.0145249143242836, -2.0713794231414795, -0.02173403650522232, -3.839926242828369, -0.1374340057373047, -2.815171718597412, -0.033478736877441406, -0.2523837089538574, -0.07246541231870651, -0.00421682745218277, -0.0005187834613025188, -0.022276295349001884, -0.0050844415090978146, -0.015930989757180214, -0.015949761494994164, -0.43781164288520813, -3.61385178565979, -0.12056156992912292, -3.0919017791748047, -0.02280346117913723, -2.4355268478393555, -4.586969375610352, -0.30519238114356995, -0.009043329395353794, -1.1633732318878174, -0.38759830594062805, -0.005678830202668905, -0.6723109483718872, -0.0007034449372440577, -0.9549196362495422, -3.421248038648628e-05, -0.00019560330838430673, -0.009154017083346844, -0.04396231472492218, -0.00011145447206217796, -0.00028224775451235473, -0.008496682159602642, -0.2535719573497772, -0.21492891013622284, -0.004529454745352268, -0.5322974920272827, -0.004928108304738998, -0.024871909990906715, -0.014860175549983978, -0.40247756242752075, -0.10915372520685196, -0.0005436849314719439, -3.0093393325805664, -0.0005007919971831143, -4.768370445162873e-07, -0.12710264325141907, -0.08570952713489532, -0.01176019199192524, -0.00046850196667946875, -0.01944994367659092, -0.008895885199308395, -0.528145968914032, -1.6095143556594849, -0.07537953555583954, -0.8904096484184265, -0.739597499370575, -0.028538957238197327, -1.256520390510559, -0.11674860864877701, -0.030127577483654022, -0.06777088344097137, -0.2892865538597107, -0.006181763019412756, -0.3310524523258209, -0.01607704907655716, -0.05388619378209114, -0.1740514189004898, -0.034033678472042084, -0.7433186769485474, -2.004849910736084, -0.0550815649330616, -2.6866202354431152, -0.03391234576702118, -1.9503874778747559, -0.009378070943057537, -0.7552489042282104, -0.0009114163694903255, -0.6196560859680176, -1.2162113189697266, -1.1875426769256592, -0.26960158348083496, -0.0052865236066281796, -0.005495085380971432, -3.313963316031732e-05, -2.5748875486897305e-05, -0.0015389991458505392, -0.0047086309641599655, -0.021017922088503838, -0.9512352347373962, -0.03362317755818367, -0.0029580905102193356, -2.5017006397247314, -0.00020096666412428021, -0.0007497837068513036, -0.0010116941994056106, -0.006855656858533621, -0.0017475108616054058, -0.11369103938341141, -8.22540732769994e-06, -0.00027092601521871984, -0.001140778069384396, -0.014272396452724934, -0.00010048838157672435, -2.5033637939486653e-05, -0.37103646993637085, -0.000727627135347575, -0.3836783468723297, -0.06234760582447052, -0.4420822560787201, -0.004655949305742979, -3.490819215774536, -0.4458240568637848, -0.009371694177389145, -0.0031223376281559467, -0.011312156915664673, -1.4551897048950195, -0.07389823347330093, -1.3893851041793823, -0.002852777484804392, -0.03834731504321098, -1.0847986231965479e-05, -0.0002603192115202546, -0.25123170018196106, -0.0015124559868127108, -0.00924083311110735, -2.8371408916427754e-05, -0.5288139581680298, -0.12221435457468033, -0.0006859333370812237, -1.168244216387393e-05, -0.6448503732681274, -0.3061800003051758, -1.3532371520996094, -0.11474531888961792, -0.014988776296377182, -0.11334018409252167, -1.1306418180465698, -0.26487866044044495, -0.012744409963488579, -0.010349887423217297, -5.090107151772827e-05, -3.504691630951129e-05, -0.001996787264943123, -0.006795273628085852, -0.004005386959761381, -0.0015644703526049852, -4.027341842651367, -0.17565229535102844, -2.1340858936309814, -0.10513684153556824, -0.11996879428625107, -1.9067497253417969, -0.10027807950973511, -0.06554434448480606, -0.0003271759778726846, -0.13103608787059784, -0.29196739196777344, -0.0555255301296711, -0.011943260207772255, -0.002737823873758316, -0.2481403648853302, -0.0006554362480528653, -0.010702473111450672, -0.006358630023896694, -0.006964692380279303, -0.6842554211616516, -0.6568694114685059, -0.0002865380665753037, -0.00012218205665703863, -1.1914799213409424, -0.07695986330509186, -0.005486905109137297, -0.002839939668774605, -0.18263407051563263, -0.027366742491722107, -0.3728870153427124, -0.0007736074039712548, -0.0019694233778864145, -0.018874917179346085, -3.3378044463461265e-05, -0.00018082413589581847, -0.0005689432728104293, -0.06497936695814133, -0.022896092385053635, -0.8063929080963135, -0.00040951924165710807, -0.0869799330830574, -0.0002723561483435333, -0.13498203456401825, -0.0005054388311691582, -0.0010444429935887456, -1.4997845888137817, -0.011637774296104908, -1.1757670640945435, -0.25770506262779236, -0.0023657686542719603, -0.005387905053794384, -0.0032113431952893734, -1.003443956375122, -0.06195024773478508, -0.027326956391334534, -0.0007111880695447326, -0.0014999578706920147, -1.2397689715726301e-05, -3.755022044060752e-05, -0.005912433844059706, -5.674201020156033e-05, -0.0037209815345704556, -5.364274329622276e-05, -9.298280929215252e-06, -0.5542489886283875, -0.08548662066459656, -0.0008872386533766985, -9.202533692587167e-05, -0.06332380324602127, -0.06030828878283501, -0.5948179364204407, -0.0006823595031164587, -0.5508635640144348, -4.732496745418757e-05, -0.0094411326572299, -0.1931508332490921, -0.0676102340221405, -6.09140915912576e-05, -0.02844812348484993, -0.0006344689172692597], "finish_reason": "length"}], "metrics": {"energy": 253.78443304824816, "energy_per_token": 0.9913454415947194, "time": 10.884437, "time_per_token": 0.04251733203125}}
{"outputs": [{"text": "# TODO\n\n    # Check for input validation\n    if not os.path.isdir(test_directory):\n        return 0\n\n    # Create CSV file object\n    csv_writer = csv.writer(open(output_file, 'w'))\n\n    # Iterate over the files in the test directory\n    for filename in os.listdir(test_directory):\n        # Skip files that are not .txt\n        if not filename.endswith('.txt'):\n            continue\n\n        # Get the absolute path of the file\n        filepath = os.path.join(test_directory, filename)\n\n        # Open the file for reading\n        with open(filepath, 'r', encoding='utf-8') as file:\n            # Iterate over each line in the file\n            for line in file:\n                # Remove leading and trailing whitespace\n                line = line.strip()\n\n                # Skip empty lines\n                if not line:\n                    continue\n\n                # Get the word count for each word\n                count = Counter(line.split(' '))\n\n                # Iterate over the words", "tokens": ["#", " TODO", "\n", "\n", "    ", "#", " Check", " for", " input", " validation", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " Create", " CS", "V", " file", " object", "\n", "    ", "csv", "_", "writer", " =", " c", "sv", ".", "writer", "(", "open", "(", "output", "_", "file", ",", " '", "w", "'))", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " files", " in", " the", " test", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "#", " Skip", " files", " that", " are", " not", " ", ".", "txt", "\n", "        ", "if", " not", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Get", " the", " absolute", " path", " of", " the", " file", "\n", "        ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " filename", ")", "\n", "\n", "        ", "#", " Open", " the", " file", " for", " reading", "\n", "        ", "with", " open", "(", "file", "path", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "            ", "#", " Iter", "ate", " over", " each", " line", " in", " the", " file", "\n", "            ", "for", " line", " in", " file", ":", "\n", "                ", "#", " Remove", " leading", " and", " trailing", " whites", "pace", "\n", "                ", "line", " =", " line", ".", "strip", "()", "\n", "\n", "                ", "#", " Skip", " empty", " lines", "\n", "                ", "if", " not", " line", ":", "\n", "                ", "    ", "continue", "\n", "\n", "                ", "#", " Get", " the", " word", " count", " for", " each", " word", "\n", "                ", "count", " =", " Counter", "(", "line", ".", "split", "('", " '", "))", "\n", "\n", "                ", "#", " Iter", "ate", " over", " the", " words"], "logprobs": [-1.4501924514770508, -2.240654468536377, -1.962194561958313, -1.6923062801361084, -0.2999425530433655, -0.970435380935669, -2.3470795154571533, -2.5182387828826904, -2.6518876552581787, -3.171285629272461, -0.2420777529478073, -0.006579166743904352, -0.04357356205582619, -0.29112014174461365, -1.0571894645690918, -0.0001541257370263338, -0.004095619544386864, -0.005255929194390774, -0.49760499596595764, -0.009614353999495506, -0.000621840707026422, -0.005664369091391563, -5.173549288883805e-05, -0.00011205045302631333, -0.15393278002738953, -0.008122389204800129, -0.0021773697808384895, -0.8739025592803955, -0.02566521242260933, -0.0004655231023207307, -0.019123468548059464, -0.12857675552368164, -0.0014890070306137204, -0.23620475828647614, -1.8691271543502808, -3.2440991401672363, -0.0006079017766751349, -0.49799108505249023, -4.332881450653076, -0.5137679576873779, -0.0016676579834893346, -1.49209725856781, -0.14414851367473602, -1.5525617599487305, -0.0037696745712310076, -0.2205243855714798, -3.790783375734463e-05, -6.496695277746767e-05, -0.014105621725320816, -0.00033122775494121015, -0.49621912837028503, -0.02359072118997574, -0.022448940202593803, -3.099393507000059e-05, -0.00034338299883529544, -0.002495748223736882, -0.2918502390384674, -0.03775746002793312, -0.6464495658874512, -0.003904221346601844, -0.3679365813732147, -0.0008373330347239971, -0.07584695518016815, -1.7988710403442383, -0.006315985694527626, -0.6315404772758484, -1.915802240371704, -0.7561793327331543, -0.061557888984680176, -0.0412442684173584, -1.6493573188781738, -0.4987688958644867, -0.08094850927591324, -0.0009866851614788175, -0.5334327816963196, -0.6091166734695435, -0.0009036748087964952, -0.016947096213698387, -0.0007127366843633354, -0.000342191313393414, -2.264974000354414e-06, -0.0002588890492916107, -0.0008841419476084411, -2.90866428258596e-05, -1.4662635294371285e-05, -0.00022206225548870862, -0.0005863377591595054, -0.0538933128118515, -1.3512730598449707, -1.5553362369537354, -0.9473044872283936, -0.181568905711174, -0.8218424916267395, -0.010726060718297958, -0.6322187185287476, -4.458328112377785e-05, -0.0026680370792746544, -1.6055318117141724, -0.0003296785580459982, -0.002893549157306552, -0.1230730339884758, -0.04183001443743706, -7.760223525110632e-05, -0.006216119974851608, -3.969590397900902e-05, -1.1920928244535389e-07, -0.12320668250322342, -0.019955933094024658, -0.003295706817880273, -0.0005392765742726624, -0.014513988047838211, -0.0007752750534564257, -0.0004231034545227885, -0.006283053662627935, -0.00041940953815355897, -0.1288837343454361, -0.0005441615357995033, -0.09059586375951767, -2.7830541133880615, -0.1847860962152481, -1.5030428171157837, -0.17446431517601013, -0.629509449005127, -0.014463583007454872, -0.5320835113525391, -0.049647603183984756, -0.00018821375851985067, -0.12667161226272583, -0.9108868837356567, -0.00031764229061082006, -0.0022638426162302494, -1.1205610462639015e-05, -3.6954811548639555e-06, -0.0010219357209280133, -0.012587033212184906, -5.495397272170521e-05, -0.0012860370334237814, -3.2543604902457446e-05, -7.629103492945433e-05, -0.00012516192509792745, -0.0005677518784068525, -6.103329360485077e-05, -0.0002503081923350692, -0.05287021026015282, -0.0006430465145967901, -0.09792580455541611, -0.7521229386329651, -0.05152818188071251, -0.04437965527176857, -1.4318883419036865, -0.0032643387094140053, -0.13079680502414703, -0.0002299282787134871, -0.14299647510051727, -9.464769391342998e-05, -8.070142939686775e-05, -0.0007917130133137107, -1.7523612768854946e-05, -0.0407194122672081, -0.01990615203976631, -0.011005652137100697, -1.0311347246170044, -0.0006566275842487812, -0.027621543034911156, -0.030440187081694603, -0.0621379092335701, -0.0759970098733902, -0.0013177053770050406, -0.05342240631580353, -0.0012763934209942818, -0.2978980541229248, -0.006722216960042715, -0.0001823735801735893, -0.06052666902542114, -0.22326256334781647, -1.3125042915344238, -0.0007618147064931691, -0.007057617884129286, -0.7451758980751038, -0.10992180556058884, -0.08244004845619202, -0.0015143604250624776, -0.005603083875030279, -0.04742429777979851, -0.0011250602547079325, -0.07338005304336548, -0.0189653392881155, -0.0017382287187501788, -0.0012216256000101566, -0.006164584308862686, -0.000262106885202229, -0.012240175157785416, -0.09745107591152191, -2.1845080852508545, -0.5848318934440613, -0.17552527785301208, -0.000771939754486084, -0.03733183443546295, -0.12742552161216736, -0.5776962041854858, -0.0003203832311555743, -0.4022948443889618, -0.015557238832116127, -0.0002379134384682402, -1.1801649634435307e-05, -0.0007488307310268283, -0.00035958975786343217, -0.006254148669540882, -0.4456668794155121, -0.0011550667695701122, -0.01518546137958765, -2.169677972793579, -0.12191544473171234, -0.008724783547222614, -0.0971837192773819, -9.154854342341423e-05, -0.0004530118894763291, -0.03405188396573067, -0.0005407063290476799, -0.004975912161171436, -0.0004564673872664571, -6.9141146923357155e-06, -9.476689592702314e-05, -0.00038223114097490907, -0.0001370812824461609, -0.009394368156790733, -0.0003962923656217754, -0.014578018337488174, -3.15464448928833, -0.09435053914785385, -0.5022209286689758, -2.156872272491455, -0.8880388140678406, -1.1872344017028809, -1.1281046867370605, -1.1024235486984253, -0.0012931802775710821, -2.9759292602539062, -0.03595198690891266, -0.10253220051527023, -0.011825223453342915, -0.012844567187130451, -0.013079679571092129, -0.033928822726011276, -2.565382480621338, -0.14078018069267273, -0.0011464934796094894, -0.04216470569372177, -0.1740749627351761, -0.0027402015402913094, -0.024245308712124825, -1.4817928075790405, -0.0008524598088115454, -0.010843991301953793, -0.4922875463962555, -0.3990321159362793], "finish_reason": "length"}], "metrics": {"energy": 253.2275510835646, "energy_per_token": 0.9891701214201742, "time": 11.08952, "time_per_token": 0.0433184375}}
{"outputs": [{"text": "# Get total number of words\n    word_counter = 0\n    for filename in os.listdir(test_directory):\n        if filename.endswith(\".txt\"):\n            with open(os.path.join(test_directory, filename), \"r\") as file:\n                for line in file:\n                    # Ignore empty lines and comments\n                    if not line.strip() or line.startswith('#'):\n                        continue\n\n                    word_counter += 1\n    return word_counter", "tokens": ["#", " Get", " total", " number", " of", " words", "\n", "    ", "word", "_", "counter", " =", " ", "0", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " filename", ")", ",", " \"", "r", "\"", ")", " as", " file", ":", "\n", "                ", "for", " line", " in", " file", ":", "\n", "                ", "    ", "#", " Ign", "ore", " empty", " lines", " and", " comments", "\n", "                ", "    ", "if", " not", " line", ".", "strip", "()", " or", " line", ".", "start", "sw", "ith", "('#", "')", ":", "\n", "                ", "        ", "continue", "\n", "\n", "                ", "    ", "word", "_", "counter", " +=", " ", "1", "\n", "    ", "return", " word", "_", "counter", "\n", "\n", "#"], "logprobs": [-1.4501924514770508, -4.226376056671143, -3.2465059757232666, -0.5528961420059204, -0.025165244936943054, -0.17947590351104736, -0.9688016772270203, -0.02042791061103344, -2.2516584396362305, -0.04549269378185272, -1.9648172855377197, -0.02831822820007801, -2.1486055850982666, -0.001004786929115653, -0.01097417064011097, -0.31807419657707214, -1.9692177772521973, -1.0022108554840088, -0.008122389204800129, -0.028271643444895744, -7.891343557275832e-05, -0.0032067089341580868, -7.271740287251305e-06, -0.002493845531716943, -0.028970656916499138, -0.00010287232726113871, -8.237022848334163e-05, -0.0016157679492607713, -0.016428792849183083, -0.017522411420941353, -0.5533151030540466, -0.44753098487854004, -0.04108627885580063, -0.028818940743803978, -0.00020811776630580425, -2.3841855067985307e-07, -1.3166704177856445, -0.005452404264360666, -0.02627861686050892, -0.029210343956947327, -0.00011419598013162613, -0.026835013180971146, -0.01614813506603241, -0.008471150882542133, -0.9900538325309753, -0.0007630059262737632, -0.002794054336845875, -0.48883843421936035, -0.0016958630876615644, -7.176141662057489e-05, -0.0022413628175854683, -0.00029202012228779495, -0.00014995403762441128, -0.008802303113043308, -6.6756979322235566e-06, -7.188061863416806e-05, -0.0007616956136189401, -0.03004590980708599, -0.1539151966571808, -0.000621959799900651, -1.4381165504455566, -0.041195765137672424, -0.00949982088059187, -0.24294568598270416, -0.0007383481133729219, -0.44747841358184814, -0.016340723261237144, -0.0018168861279264092, -0.00391763960942626, -1.5399037599563599, -0.18050867319107056, -0.0021007629111409187, -0.004875794053077698, -0.02648087404668331, -0.005981165450066328, -0.0006972504197619855, -0.0017060976242646575, -2.703624725341797, -3.8631489276885986, -0.019890258088707924, -0.908600389957428, -0.0644351914525032, -1.0933071374893188, -0.6785345077514648, -0.1466216892004013, -0.00031120702624320984, -0.00012635385792236775, -0.2849489450454712, -0.8296076059341431, -0.023952636867761612, -0.1190488189458847, -0.04098479077219963, -0.04405471682548523, -0.02576536312699318, -0.011818508617579937, -0.010297030210494995, -0.6688588261604309, -7.152555099310121e-07, 0.0, -1.7890675067901611, -0.0017007424030452967, -0.008698076009750366, -0.0018933956744149327, -4.3987260141875595e-05, -0.0002840353990904987, -0.006080699153244495, -0.0006955826538614929, -1.5843617916107178, -0.0009392855572514236, -0.00047922570956870914, -1.0897438526153564, -0.32625582814216614, -0.032057542353868484, -0.0015904169995337725, -0.29612791538238525, -9.655486064730212e-05, -0.04673966020345688, -2.2575461864471436, -0.7961650490760803, -0.012039022520184517, -0.00032669928623363376, -7.557583012385294e-05, -0.25879818201065063, -0.03204253315925598, -1.668046236038208], "finish_reason": "stop"}], "metrics": {"energy": 155.46822943973547, "energy_per_token": 1.2437458355178836, "time": 5.154328, "time_per_token": 0.041234624}}
{"outputs": [{"text": "# Create output file\n    csv_filename = f'{output_file}.csv'\n\n    # Create Counter object to count the number of words in the dictionary files\n    word_counts = Counter()\n    # Open all files in test_directory and add each word to the Counter object\n    for file in os.listdir(test_directory):\n        if file.endswith(\".txt\"):\n            try:\n                filepath = os.path.join(test_directory, file)\n                with open(filepath, 'r') as f:\n                    for line in f:\n                        word_counts.update(line.strip().split())\n            except OSError:\n                pass\n            except IOError:\n                pass\n\n    # Export word counts to csv\n    with open(csv_filename, 'w', newline='') as csv_file:\n        writer = csv.writer(csv_file)\n        writer.writerow([\"Word\", \"Count\"])\n        for word, count in word_counts.items():\n            writer.writerow([word, count])\n\n    ", "tokens": ["#", " Create", " output", " file", "\n", "    ", "csv", "_", "filename", " =", " f", "'{", "output", "_", "file", "}", ".", "csv", "'", "\n", "\n", "    ", "#", " Create", " Counter", " object", " to", " count", " the", " number", " of", " words", " in", " the", " dictionary", " files", "\n", "    ", "word", "_", "counts", " =", " Counter", "()", "\n", "    ", "#", " Open", " all", " files", " in", " test", "_", "directory", " and", " add", " each", " word", " to", " the", " Counter", " object", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", "):", "\n", "            ", "try", ":", "\n", "                ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", ")", "\n", "                ", "with", " open", "(", "file", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "    ", "for", " line", " in", " f", ":", "\n", "                ", "        ", "word", "_", "counts", ".", "update", "(", "line", ".", "strip", "()", ".", "split", "())", "\n", "            ", "except", " O", "SE", "rror", ":", "\n", "                ", "pass", "\n", "            ", "except", " IO", "Error", ":", "\n", "                ", "pass", "\n", "\n", "    ", "#", " Export", " word", " counts", " to", " c", "sv", "\n", "    ", "with", " open", "(", "csv", "_", "filename", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "_", "file", ":", "\n", "        ", "writer", " =", " c", "sv", ".", "writer", "(", "csv", "_", "file", ")", "\n", "        ", "writer", ".", "writer", "ow", "([", "\"", "Word", "\"", ",", " \"", "Count", "\"", "])", "\n", "        ", "for", " word", ",", " count", " in", " word", "_", "counts", ".", "items", "():", "\n", "            ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "\n", "    "], "logprobs": [-1.4501924514770508, -4.27472448348999, -3.2845802307128906, -0.48517170548439026, -0.749152660369873, -0.005917648319154978, -3.186537742614746, -0.2588861584663391, -3.886913299560547, -0.010866397060453892, -2.733285427093506, -0.8974927067756653, -0.21842481195926666, -5.590759246842936e-05, -0.0014890070306137204, -0.43484508991241455, -0.007589198648929596, -0.007296935189515352, -0.0004936429904773831, -0.026753541082143784, -1.9914791584014893, -0.000969297660049051, -0.4263366758823395, -2.308854341506958, -3.5309104919433594, -0.931987464427948, -1.5034708976745605, -0.9854803681373596, -1.349663496017456, -1.335221290588379, -0.0069365170784294605, -0.17444530129432678, -0.9455685615539551, -1.0407942533493042, -1.3260300159454346, -0.0545598603785038, -0.0995747447013855, -0.004881962668150663, -1.1025421619415283, -0.019072243943810463, -0.7170739769935608, -0.019557848572731018, -0.04704200476408005, -0.015418498776853085, -0.04166285693645477, -2.1376781463623047, -2.7187089920043945, -2.5642826557159424, -2.481618881225586, -1.4290508031845093, -0.29223060607910156, -1.3231422901153564, -0.2963539659976959, -0.043402813374996185, -1.2540369033813477, -1.8002375364303589, -3.5963449478149414, -0.3058987557888031, -0.4546907842159271, -0.7115675210952759, -0.27520373463630676, -0.3808113634586334, -0.10832494497299194, -0.013018141500651836, -0.1820560246706009, -1.2341060638427734, -0.540343165397644, -0.06301268935203552, -2.4199192921514623e-05, -0.009821425192058086, -5.722029527532868e-06, -0.0015561387408524752, -0.004724292550235987, -2.407998726994265e-05, -5.149708886165172e-05, -0.0008033862104639411, -0.009135471656918526, -0.008837515488266945, -0.6668574213981628, -0.10564708709716797, -0.0071115936152637005, -0.015545736066997051, -6.460934673668817e-05, -1.1920928244535389e-07, -1.8938544988632202, -0.011491182260215282, -0.01424266304820776, -0.0230779480189085, -8.284702198579907e-05, -0.020697446539998055, -0.035095103085041046, -0.005112906452268362, -2.20251727104187, -0.00011181206355104223, -0.002394667826592922, -0.002322002314031124, -3.025129556655884, -1.0871821641921997, -0.004419797100126743, -0.12580738961696625, -1.537788011773955e-05, -8.11782301752828e-05, -0.014033331535756588, -0.0018158152233809233, -0.0003328961320221424, -0.008564173243939877, -3.58813522325363e-05, -6.174850568640977e-05, -0.0006391151691786945, -0.006730624008923769, -0.0010939810890704393, -0.007530634291470051, -0.005946918856352568, -0.056215785443782806, -0.00031990656862035394, -0.00041631137719377875, -0.0008351890719495714, -0.00025555206229910254, -0.2209860235452652, -0.29818668961524963, -0.023116622120141983, -0.49408385157585144, -0.0012304362608119845, -0.6373451948165894, -0.023183248937129974, -0.00205972115509212, -0.0013310391223058105, -0.0015605426160618663, -0.6973206996917725, -0.2520310580730438, -0.0008137490367516875, -0.0063270023092627525, -0.03194543346762657, -0.003970834892243147, -0.00041738382424227893, -0.00091856240760535, -1.2230726480484009, -0.43218523263931274, -0.04748181998729706, -0.016728248447179794, -1.0967194612021558e-05, -0.10708834230899811, -0.14661768078804016, -0.01306450180709362, -0.615856945514679, -0.02513188123703003, -0.0009067714563570917, -0.07826028019189835, -0.1073705181479454, -0.033641159534454346, -0.06264661252498627, -0.010937382467091084, -2.9347052574157715, -3.635817120084539e-05, -1.2636104656849056e-05, -0.913272500038147, -0.038837071508169174, -0.0011131525970995426, -3.348851442337036, -0.07976056635379791, -3.0919721126556396, -0.27518996596336365, -1.5656235218048096, -2.396077979938127e-05, -0.011204772628843784, -0.0167176965624094, -0.0014723424101248384, -0.048252057284116745, -0.0054578580893576145, -0.573275089263916, -0.010188239626586437, -0.08093960583209991, -1.4183998107910156, -1.2317895889282227, -0.15431196987628937, -0.03184312954545021, -2.225069284439087, -0.00015031162183731794, -1.1604374647140503, -0.0029741362668573856, -0.1805131435394287, -0.000302745756926015, -0.000912250077817589, -0.0035284424666315317, -9.775113539944869e-06, -3.9457496313843876e-05, -0.0003045333724003285, -0.041439518332481384, -0.009999302215874195, -0.5375964641571045, -0.0006329201860353351, -0.04945746809244156, -0.00018142008048016578, -0.06366032361984253, -8.77341881277971e-05, -0.00033158526639454067, -0.6673086285591125, -0.002204251941293478, -0.6164805293083191, -0.04685012251138687, -0.00039545822073705494, -0.002074115676805377, -0.004302056040614843, -0.31624647974967957, -0.0005352256703190506, -0.0003146630187984556, -9.894321920000948e-06, -2.0861407392658293e-05, -0.05269651859998703, -1.4424220353248529e-05, -0.0007020154735073447, -1.764281842042692e-05, -4.684815212385729e-05, -0.052573468536138535, -0.0005978942499496043, -0.011347398161888123, -0.0938519686460495, -8.189342770492658e-05, -0.0012980615720152855, -0.010642675682902336, -1.5235228538513184, -0.003083952469751239, -0.033132363110780716, -0.002135974122211337, -0.0001776060671545565, -0.014582248404622078, -0.005995029583573341, -0.0045025162398815155, -0.0006323245470412076, -0.004300631582736969, -0.018175246194005013, -0.05525992065668106, -0.059921909123659134, -0.12040738761425018, -0.010122274979948997, -0.00026663561584427953, -0.006497329566627741, -1.585470999998506e-05, -1.1205610462639015e-05, -3.433168603805825e-05, -0.24058067798614502, -8.535020606359467e-05, -0.0017652419628575444, -0.0013093716697767377, -0.012770420871675014, -7.867782187531702e-06, -0.00013648532330989838, -0.0007565735140815377, -0.0009965697536244988, -0.005232567898929119, -0.009278510697185993, -0.012267730198800564, -0.0003535122668836266, -0.0018306892598047853, -0.10362076759338379, -0.01150013878941536], "finish_reason": "length"}], "metrics": {"energy": 293.95513760757444, "energy_per_token": 1.1482622562795877, "time": 11.086227, "time_per_token": 0.04330557421875}}
{"outputs": [{"text": "if not os.path.exists(test_directory):\n        return 0\n\n    # The task function should read all .txt files in the given test_directory and\n    # count the number of words in each file.\n\n    # Your code here\n    try:\n        with open(output_file, 'w', newline='') as csv_file:\n            writer = csv.writer(csv_file)\n            writer.writerow(['Word', 'Count'])\n            counter = Counter()\n            for file in os.listdir(test_directory):\n                if file.endswith('.txt'):\n                    file_path = os.path.join(test_directory, file)\n                    with open(file_path, 'r', encoding='utf-8') as f:\n                        reader = csv.reader(f)\n                        for row in reader:\n                            counter[row[0]] += 1\n            for word, count in counter.most_common():\n                writer.writerow([word, count])\n            csv_file.close()\n        return sum([count for", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "test", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " The", " task", " function", " should", " read", " all", " ", ".", "txt", " files", " in", " the", " given", " test", "_", "directory", " and", "\n", "    ", "#", " count", " the", " number", " of", " words", " in", " each", " file", ".", "\n", "\n", "    ", "#", " Your", " code", " here", "\n", "    ", "try", ":", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "_", "file", ":", "\n", "            ", "writer", " =", " c", "sv", ".", "writer", "(", "csv", "_", "file", ")", "\n", "            ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "            ", "counter", " =", " Counter", "()", "\n", "            ", "for", " file", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "                ", "if", " file", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", ")", "\n", "                ", "    ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "                ", "        ", "reader", " =", " c", "sv", ".", "reader", "(", "f", ")", "\n", "                ", "        ", "for", " row", " in", " reader", ":", "\n", "                ", "            ", "counter", "[", "row", "[", "0", "]]", " +=", " ", "1", "\n", "            ", "for", " word", ",", " count", " in", " counter", ".", "most", "_", "common", "():", "\n", "                ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "            ", "csv", "_", "file", ".", "close", "()", "\n", "        ", "return", " sum", "([", "count", " for"], "logprobs": [-2.5143251419067383, -0.38680097460746765, -0.6396499276161194, -0.0002195594133809209, -0.01250168401747942, -0.01626976765692234, -0.5172421336174011, -0.0043599787168204784, -0.05342783033847809, -2.9444261599564925e-05, -6.139089964563027e-05, -0.15837673842906952, -0.06564828008413315, -0.00395266804844141, -0.7194383144378662, -0.05316200107336044, -0.0006438804557546973, -0.030481815338134766, -0.5541588664054871, -0.0013985387049615383, -2.061173915863037, -5.152830123901367, -4.704033851623535, -1.5137664079666138, -1.1478626728057861, -3.2514472007751465, -0.8445137739181519, -1.3999100923538208, -0.00044312194222584367, -0.0045916358940303326, -0.0660867989063263, -0.41903212666511536, -0.20642299950122833, -2.245617628097534, -2.0356225967407227, -0.4371556341648102, -0.012535824440419674, -1.5644153356552124, -1.4099153280258179, -0.0019676387310028076, -0.006965284235775471, -0.9858685731887817, -0.11450104415416718, -0.345206081867218, -0.0028401773888617754, -0.1562877893447876, -0.3991551995277405, -0.10294172167778015, -0.14307862520217896, -0.5172536969184875, -0.6499639749526978, -2.3020071983337402, -0.002953336341306567, -0.820072591304779, -4.582781791687012, -0.22191809117794037, -0.9788132905960083, -0.18849562108516693, -0.35257425904273987, -2.8678736686706543, -0.00759677030146122, -0.003312222193926573, -0.028127586469054222, -1.9662894010543823, -0.2699695825576782, -0.02538411319255829, -0.3068912923336029, -0.00010251473577227443, -0.0005486889858730137, -0.007828625850379467, -0.31046226620674133, -0.04765744507312775, -0.45017677545547485, -0.005172560922801495, -0.14285750687122345, -0.00014041867689229548, -0.16176794469356537, -0.0002960720448754728, -0.003063511336222291, -0.8335244655609131, -0.006762002129107714, -0.9082186222076416, -0.12957148253917694, -0.0033780436497181654, -0.02259906195104122, -0.04040873795747757, -0.6492870450019836, -0.004626522306352854, -0.0019593106117099524, -2.7894584491150454e-05, -4.470248313737102e-05, -0.05726474151015282, -6.675497570540756e-05, -0.0012752028414979577, -3.8980677345534787e-05, -6.437280717364047e-06, -0.1191929504275322, -0.0020096360240131617, -0.11867474764585495, -0.5420142412185669, -0.00044216870446689427, -0.0025840960443019867, -0.003282993333414197, -0.3307454586029053, -0.0679188072681427, -0.004136221949011087, -0.00018535325943958014, -0.02950923703610897, -0.007556781638413668, -0.006456468254327774, -0.006953682750463486, -0.5228016376495361, -2.0501914024353027, -0.046672310680150986, -0.11405592411756516, -0.012265846133232117, -0.02208752930164337, -0.19207526743412018, -0.1495031714439392, -1.131096601486206, -0.5946742296218872, -0.031233130022883415, -0.0001012035645544529, -0.006782012525945902, -6.198863957251888e-06, -0.0023516162764281034, -0.008310144767165184, -1.4185804502631072e-05, -2.2411095415009186e-05, -0.0009366653976030648, -0.004360453691333532, -0.00450572045519948, -0.2505432665348053, -0.16956646740436554, -0.007848023436963558, -0.012427394278347492, -0.00013934595335740596, 0.0, -0.16792143881320953, -0.018298739567399025, -0.005989460274577141, -0.00045110538485459983, -0.01277595292776823, -0.006111504975706339, -0.001991790486499667, -0.0013813963159918785, -2.230236530303955, -0.17842023074626923, -0.11218788474798203, -0.0007612191257067025, -0.017558138817548752, -5.8412379075889476e-06, -1.1444026313256472e-05, -0.002087677363306284, -0.00019131260341964662, -0.00018773700867313892, -0.0030069397762417793, -8.22540732769994e-06, -5.864924969500862e-05, -0.0002967870968859643, -0.001500672078691423, -0.0004042761866003275, -0.001599105424247682, -0.005744021851569414, -0.000894146622158587, -0.034482475370168686, -0.0001805857609724626, -0.0002379134384682402, -0.00034254882484674454, -0.00038747431244701147, -3.099436753473128e-06, -0.13922347128391266, -0.13736772537231445, -0.013822310604155064, -1.6391407251358032, -0.00015269544383045286, -0.04644177854061127, -0.041175514459609985, -0.07722297310829163, -0.10745789110660553, -0.00203557126224041, -0.029621271416544914, -0.00030417583184316754, -1.527038812637329, -0.019381897523999214, -0.0008521024719811976, -0.0012837749673053622, -0.0011395872570574284, -1.964883804321289, -0.0006584145012311637, -0.015697132796049118, -6.198863957251888e-06, -0.0003675738989841193, -0.010987729765474796, -0.0013065143721178174, -0.002552467631176114, -0.0993993803858757, -0.0025515162851661444, -0.01700405590236187, -0.0004742213059216738, -0.3091888129711151, -0.1134084090590477, -0.0006678258068859577, -0.003569423919543624, -0.00014244495832826942, -0.002195450011640787, -0.0009727513534016907, -0.00174251280259341, -1.0128061771392822, -0.3192274570465088, -0.008833261206746101, -0.003257565898820758, -0.014500945806503296, -0.00707407109439373, -0.010115901939570904, -0.18533146381378174, -5.7338023907504976e-05, -0.012263019569218159, -0.5436233878135681, -0.19419735670089722, -0.3118433356285095, -0.06410485506057739, -0.025524381548166275, -0.00028951745480298996, -0.007712941151112318, -3.671578815556131e-05, -1.0438143014907837, -4.768370445162873e-07, -0.00010132275929208845, -0.025627683848142624, -0.004188337363302708, -0.0005214046686887741, -0.022510481998324394, -3.5523738915799186e-05, -0.0005191409145481884, -0.0012543675256893039, -0.0019748962949961424, -0.0008937893435359001, -0.007051935885101557, -0.00728604756295681, -0.0003097769513260573, -0.0007241725688800216, -1.5607261657714844, -2.9920613765716553, -0.002164641860872507, -0.0016454027500003576, -0.0005667987279593945, -0.11034923791885376, -0.014080467633903027, -0.002233155770227313, -0.8520747423171997, -0.16209430992603302, -1.975497841835022, -1.647716999053955, -0.9567493200302124, -0.01257467269897461], "finish_reason": "length"}], "metrics": {"energy": 248.58435215854644, "energy_per_token": 0.971032625619322, "time": 10.934513, "time_per_token": 0.04271294140625}}
{"outputs": [{"text": "try:\n        if not os.path.exists(test_directory):\n            return 0\n        # Open file\n        word_counts = {}\n        for file in os.listdir(test_directory):\n            filepath = os.path.join(test_directory, file)\n            with open(filepath, encoding='utf-8') as f:\n                for line in f:\n                    for word in line.split():\n                        word = word.strip()\n                        # check for valid word\n                        if word.isalpha():\n                            word = word.lower()\n                            word_counts[word] = word_counts.get(word, 0) + 1\n\n        with open(output_file, 'w') as f:\n            writer = csv.writer(f)\n            writer.writerow(['Word', 'Count'])\n            for word, count in word_counts.items():\n                writer.writerow([word, count])\n        return sum(word_counts.values())\n    except FileNotFoundError:\n        return 0\n    except Exception as e:\n        print(e", "tokens": ["try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "test", "_", "directory", "):", "\n", "            ", "return", " ", "0", "\n", "        ", "#", " Open", " file", "\n", "        ", "word", "_", "counts", " =", " {}", "\n", "        ", "for", " file", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "path", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "                ", "for", " line", " in", " f", ":", "\n", "                ", "    ", "for", " word", " in", " line", ".", "split", "():", "\n", "                ", "        ", "word", " =", " word", ".", "strip", "()", "\n", "                ", "        ", "#", " check", " for", " valid", " word", "\n", "                ", "        ", "if", " word", ".", "is", "alpha", "():", "\n", "                ", "            ", "word", " =", " word", ".", "lower", "()", "\n", "                ", "            ", "word", "_", "counts", "[", "word", "]", " =", " word", "_", "counts", ".", "get", "(", "word", ",", " ", "0", ")", " +", " ", "1", "\n", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "writer", " =", " c", "sv", ".", "writer", "(", "f", ")", "\n", "            ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "            ", "for", " word", ",", " count", " in", " word", "_", "counts", ".", "items", "():", "\n", "                ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "        ", "return", " sum", "(", "word", "_", "counts", ".", "values", "())", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "return", " ", "0", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "e"], "logprobs": [-1.567378044128418, -0.002057222882285714, -0.00830931682139635, -0.036056168377399445, -3.022146224975586, -0.6446043848991394, -0.3141680359840393, -0.00010072677832795307, -0.017893671989440918, -0.009316068142652512, -0.5973166823387146, -0.006296558305621147, -0.08089661598205566, -3.6477376852417365e-05, -7.390703103737906e-05, -0.17442186176776886, -0.06664367765188217, -0.004382529761642218, -1.6302798986434937, -0.05119876191020012, -0.0010787388309836388, -0.032408904284238815, -0.6018383502960205, -2.9332773685455322, -3.0748167037963867, -2.3818812370300293, -2.0765767097473145, -0.0035068225115537643, -2.61268949508667, -0.05445002391934395, -0.7250580787658691, -0.17165981233119965, -2.233731269836426, -0.020667437463998795, -0.057456664741039276, -1.4264932870864868, -0.8916321396827698, -0.33736902475357056, -0.04414654150605202, -0.0029948167502880096, -0.011146891862154007, -1.3708974620385561e-05, -0.0014481781981885433, -0.010176911018788815, -5.245195097813848e-06, -2.276871418871451e-05, -0.0008856903295964003, -0.014951195567846298, -0.010073182173073292, -1.9045722484588623, -1.7829562425613403, -0.007795506622642279, -0.14755317568778992, -0.0003979606262873858, -0.00020752183627337217, -0.008705285377800465, -0.004548797849565744, -0.00048315772437490523, -0.00978105328977108, -5.411955135059543e-05, -3.6954195820726454e-05, -0.0018628163961693645, -0.018105827271938324, -0.001408895361237228, -0.006523503921926022, -0.04767494648694992, -0.8753153681755066, -0.0008587724878452718, -0.0027241522911936045, -0.002686108462512493, -0.0008930747280828655, -0.2867916524410248, -1.6626440286636353, -0.16157253086566925, -0.11743445694446564, -0.3011983633041382, -0.005639831535518169, -0.07046886533498764, -0.0018617454916238785, -0.6745615601539612, -0.12543436884880066, -0.00892010610550642, -0.007106622215360403, -1.2505384683609009, -0.4490348696708679, -0.003931294661015272, -0.06743785738945007, -0.10158020257949829, -0.0074101826176047325, -0.0016870565013960004, -0.0009912106906995177, -2.0676300525665283, -0.04160705581307411, -0.03537049517035484, -0.01668545790016651, -0.003293449291959405, -0.6050453782081604, -0.05574044585227966, -0.024045975878834724, -0.0025982451625168324, -0.001450082752853632, -0.5889169573783875, -0.7706395387649536, -0.05301990360021591, -0.0026642323937267065, -0.7834381461143494, -0.6359976530075073, -0.34579649567604065, -0.019000429660081863, -0.0010812395485118032, -2.9521543979644775, -4.193609237670898, -1.841461420059204, -2.2379813194274902, -0.530142068862915, -0.28662529587745667, -0.0009470268851146102, -0.00010048838157672435, -0.07060705870389938, -0.6785888671875, -0.3890649378299713, -0.38357821106910706, -0.05140521377325058, -0.1354501098394394, -0.013450240716338158, -0.002146323211491108, -0.0023236675187945366, -0.5188868045806885, -0.2439700812101364, -0.016336970031261444, -0.001303061842918396, -0.058530181646347046, -0.0002833203470800072, -0.03786753863096237, -0.024760855361819267, -0.03218267858028412, -1.135642170906067, -0.15340670943260193, -0.006446874234825373, -0.03996889293193817, -0.0010894560255110264, -0.0021067108027637005, -0.0002735478919930756, -0.03882594779133797, -0.0004996005445718765, -6.687417771900073e-05, -0.0011851914459839463, -0.026661964133381844, -6.19869097135961e-05, -0.008045054040849209, -0.0010314626852050424, -0.01988254487514496, -0.026457887142896652, -0.03140885755419731, -0.002142873592674732, -0.0049133989959955215, -5.6622808187967166e-05, -0.006338729523122311, -0.887978196144104, -0.05460185185074806, -1.4179329872131348, -0.0008051729528233409, -0.004460148513317108, -0.012414914555847645, -5.721882189391181e-05, -0.00023505308490712196, -0.0021563153713941574, -0.20041950047016144, -0.03188828006386757, -1.620142936706543, -0.0008322112844325602, -0.4514631927013397, -0.04454818367958069, -0.004402587655931711, -0.002442117314785719, -0.1863429695367813, -0.0009535771678201854, -0.00034791138023138046, -3.3378546504536644e-06, -1.6569954823353328e-05, -0.11227355897426605, -4.2199197196168825e-05, -0.0018429452320560813, -0.11476200819015503, -0.0010727847693488002, -0.011567072942852974, -0.1847628951072693, -0.0002469711471349001, -0.0011294659925624728, -0.018300963565707207, -0.1959972232580185, -0.05029409006237984, -0.001992623321712017, -0.00011085849109804258, -0.008606248535215855, -0.00490307854488492, -0.004011916927993298, -0.0016263603465631604, -0.020314376801252365, -0.09965956211090088, -0.21268464624881744, -0.2300284057855606, -0.026507342234253883, -0.00028784899041056633, -0.08091277629137039, -9.894321920000948e-06, -1.3112935448589269e-05, -3.755022044060752e-05, -0.0009029601933434606, -9.30981186684221e-05, -0.0010749283246695995, -0.0007001094636507332, -0.009162640199065208, -2.777537883957848e-05, -0.00026079590315930545, -0.0008631794480606914, -0.0010837402660399675, -0.0016141016967594624, -0.005474337842315435, -0.009042030200362206, -0.0003810394846368581, -0.0003610197745729238, -1.0126590728759766, -0.29599902033805847, -0.9566109776496887, -0.0433298721909523, -0.026412026956677437, -0.00022456508304458112, -6.41325386823155e-05, -0.002093387534841895, -0.0007017772295512259, -0.00162588432431221, -0.01910616084933281, -0.23103810846805573, -0.015562520362436771, -2.726041793823242, -0.007774688303470612, -0.0005849081207998097, -0.3461981415748596, -0.009762165136635303, -0.0021146810613572598, -0.3928769528865814, -0.008447273634374142, -0.00019405389321036637, -0.28053462505340576, -0.5919832587242126, -0.04408882185816765, -1.410929560661316, -0.45207658410072327, -0.16023872792720795, -0.0005181877058930695, -0.006434082053601742, -0.0012540103634819388, -0.30733200907707214, -0.11347056180238724, -0.9901927709579468], "finish_reason": "length"}], "metrics": {"energy": 249.52333034515388, "energy_per_token": 0.9747005091607573, "time": 10.927148, "time_per_token": 0.042684171875}}
{"outputs": [{"text": "try:\n        files_list = [f for f in os.listdir(test_directory)]\n        # Filter all .txt files from the list\n        words_list = [file for file in files_list if file.endswith('.txt')]\n\n        # Export the count of words in all the .txt files to a CSV file\n        with open(output_file, 'w') as csvfile:\n            csv_writer = csv.writer(csvfile, delimiter=',', lineterminator='\\r\\n')\n            for word in files_list:\n                word_count = Counter(open(os.path.join(test_directory, word), 'r').read().split())\n                for word, count in word_count.items():\n                    csv_writer.writerow([word, count])\n\n        with open(os.path.join(test_directory, output_file), 'r') as csvfile:\n            # Skip the first row which contains the header\n            csvfile.readline()\n            # Iterate over each row and sum up the", "tokens": ["try", ":", "\n", "        ", "files", "_", "list", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", ")]", "\n", "        ", "#", " Filter", " all", " ", ".", "txt", " files", " from", " the", " list", "\n", "        ", "words", "_", "list", " =", " [", "file", " for", " file", " in", " files", "_", "list", " if", " file", ".", "end", "sw", "ith", "('", ".", "txt", "')", "]", "\n", "\n", "        ", "#", " Export", " the", " count", " of", " words", " in", " all", " the", " ", ".", "txt", " files", " to", " a", " CS", "V", " file", "\n", "        ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "')", " as", " c", "sv", "file", ":", "\n", "            ", "csv", "_", "writer", " =", " c", "sv", ".", "writer", "(", "csv", "file", ",", " del", "im", "iter", "='", ",", "'", ",", " l", "inet", "erm", "inator", "=", "'\\", "r", "\\", "n", "')", "\n", "            ", "for", " word", " in", " files", "_", "list", ":", "\n", "                ", "word", "_", "count", " =", " Counter", "(", "open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " word", ")", ",", " '", "r", "')", ".", "read", "()", ".", "split", "())", "\n", "                ", "for", " word", ",", " count", " in", " word", "_", "count", ".", "items", "():", "\n", "                ", "    ", "csv", "_", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " output", "_", "file", ")", ",", " '", "r", "')", " as", " c", "sv", "file", ":", "\n", "            ", "#", " Skip", " the", " first", " row", " which", " contains", " the", " header", "\n", "            ", "csv", "file", ".", "read", "line", "()", "\n", "            ", "#", " Iter", "ate", " over", " each", " row", " and", " sum", " up", " the"], "logprobs": [-1.567378044128418, -0.002057222882285714, -0.00830931682139635, -0.036056168377399445, -3.592731475830078, -1.4664133787155151, -0.6473788619041443, -0.018831633031368256, -1.7744468450546265, -1.4377694129943848, -0.07882342487573624, -0.0018742390675470233, -0.0017372767906636, -0.04783610254526138, -3.909988299710676e-05, -0.004924075212329626, -2.7418097943154862e-06, -0.004895723424851894, -0.02471410483121872, -4.160317621426657e-05, -4.851700214203447e-05, -1.6306523084640503, -0.046582311391830444, -0.2333977222442627, -2.97182559967041, -4.284977912902832, -3.583798885345459, -1.6807575225830078, -0.0005202132160775363, -0.012769950553774834, -0.15534451603889465, -1.7112126350402832, -0.45983007550239563, -1.1332467794418335, -0.5627376437187195, -0.004754666239023209, -3.4606752395629883, -0.32657182216644287, -0.33943384885787964, -0.013370140455663204, -0.30217698216438293, -2.1071629524230957, -0.2386278361082077, -0.005328737199306488, -0.0022279222030192614, -0.021079668775200844, -1.3112935448589269e-05, -6.437280717364047e-06, -0.031471237540245056, -0.05797809734940529, -0.03857547789812088, -0.057553455233573914, -3.0278701160568744e-05, -1.1920928244535389e-07, -0.3805510997772217, -0.05446977913379669, -0.005492358468472958, -0.0007074952009133995, -0.024787137284874916, -0.003095955355092883, -1.1098319292068481, -0.005165919661521912, -0.945533037185669, -4.4691667556762695, -1.1475470066070557, -2.949950933456421, -1.1151081323623657, -0.9604596495628357, -1.3660882711410522, -2.166201114654541, -1.9416334629058838, -0.9001180529594421, -0.00036566724884323776, -0.0028802361339330673, -0.028563054278492928, -0.4885488450527191, -0.21642422676086426, -0.15725544095039368, -0.00013302871957421303, -0.06939952820539474, -0.24189189076423645, -0.007692357990890741, -0.46324440836906433, -0.0014992436626926064, -0.013786450028419495, -0.036954622715711594, -2.9444261599564925e-05, -0.0004372832481749356, -0.0021350225433707237, -0.13391093909740448, -0.016531983390450478, -1.2785511016845703, -0.001420561340637505, -0.527999997138977, -0.0021975908894091845, -1.0245665311813354, -0.002035809215158224, -0.005565030965954065, -0.010367113165557384, -2.1700220108032227, -1.1189266443252563, -0.03336356207728386, -0.0005695389700122178, -0.0013299677520990372, -6.758938252460212e-05, -0.00014852374442853034, -0.015664391219615936, -5.280832192511298e-05, -0.006555480882525444, -7.271740287251305e-06, -1.8464645147323608, -0.07145404070615768, -0.0005725175142288208, -2.7418097943154862e-06, -0.048223771154880524, -0.05507005751132965, -0.830237865447998, -0.01518088299781084, -2.6084890365600586, -0.0010448002722114325, -0.0010087168775498867, -0.001801535952836275, -0.004763801582157612, -0.01752733252942562, -2.123680353164673, -0.10765808075666428, -6.437280717364047e-06, -0.507225751876831, -0.004634947050362825, -0.08415349572896957, -2.560833215713501, -1.3651652336120605, -0.19302140176296234, -2.9182381629943848, -0.002049728063866496, -0.00032848684350028634, -0.008119669742882252, -0.014298015274107456, -0.011084998026490211, -2.222501754760742, -0.3544319272041321, -0.9937025904655457, -0.036358658224344254, -0.5311729907989502, -0.5951855182647705, -0.6881887912750244, -0.008448218926787376, -1.340039849281311, -0.00015364897262770683, -0.0004226268210913986, -0.0023135582450777292, -0.0012155532604083419, -0.00142020417843014, -0.026481105014681816, -3.6954811548639555e-06, -5.531158240046352e-05, -0.0010259846458211541, -0.03512433543801308, -0.3835119903087616, -0.001335801207460463, -0.22259293496608734, -0.09086227416992188, -0.16893832385540009, -0.01695905067026615, -0.006531675811856985, -0.05956525728106499, -0.0101087037473917, -0.1262432187795639, -0.06667903065681458, -0.044146083295345306, -0.03352681174874306, -1.07437264919281, -1.6499983072280884, -0.36576607823371887, -0.07023142278194427, -0.0007557396893389523, -0.018041787669062614, -5.781483559985645e-05, -2.9205850296420977e-05, -0.00013755806139670312, -0.1617448329925537, -0.0008214913541451097, -0.004983503837138414, -0.00034195298212580383, -0.002937052631750703, -0.11832701414823532, -0.00047350639943033457, -0.0005080600967630744, -2.7417760065873154e-05, -0.0002632986579556018, -0.0013004426145926118, -0.026333075016736984, -0.010063032619655132, -0.060048434883356094, -0.04093112796545029, -0.002211983548477292, -0.0021033799275755882, -0.26562240719795227, -0.09878949820995331, -2.970081090927124, -0.0009355935617350042, -0.020181436091661453, -2.622343063354492, -0.004513908643275499, -0.0010762381134554744, -0.008268174715340137, -0.005465208552777767, -0.007902784273028374, -0.08604582399129868, -0.0001248043408850208, -0.00018165845540352166, -0.0037735935766249895, -0.5715439319610596, -0.00034874555421993136, -0.00016878610767889768, -0.10758068412542343, -0.0004558716027531773, -0.051734451204538345, -0.053805768489837646, -0.043731044977903366, -0.0012542485492303967, -0.20603686571121216, -0.0016182672698050737, -0.17940017580986023, -0.00220567942596972, -0.0027964317705482244, -0.010027273558080196, -2.2375874519348145, -2.1719810962677, -0.29957225918769836, -0.7309651374816895, -0.8161402344703674, -2.5766353607177734, -1.7143774032592773, -0.4395790994167328, -0.5441157817840576, -0.19846855103969574, -0.0004924515378661454, -0.5988254547119141, -1.8840457201004028, -0.012155973352491856, -0.40326932072639465, -0.0006119524477981031, -0.0006609162664972246, -0.004415168426930904, -0.08231368660926819, -1.8366361856460571, -2.7130093574523926, -0.02775106206536293, -0.4625698924064636, -1.1383137702941895, -0.2786243259906769, -1.9167840480804443, -2.5195436477661133, -1.0780357122421265, -0.23250114917755127], "finish_reason": "length"}], "metrics": {"energy": 286.3461491708756, "energy_per_token": 1.1185396451987328, "time": 10.942935, "time_per_token": 0.04274583984375}}
{"outputs": [{"text": "words_dict = Counter()\n    total = 0\n    for filename in os.listdir(test_directory):\n        if filename.endswith('.txt'):\n            with open(os.path.join(test_directory, filename), 'r', encoding='UTF-8') as file:\n                words = file.read().split()\n                total += len(words)\n                words_dict.update(Counter(words))\n    with open(output_file, 'w') as csvfile:\n        writer = csv.writer(csvfile)\n        writer.writerow(['Word', 'Count'])\n        for word, count in words_dict.items():\n            writer.writerow([word, count])\n    return total", "tokens": ["words", "_", "dict", " =", " Counter", "()", "\n", "    ", "total", " =", " ", "0", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "test", "_", "directory", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "test", "_", "directory", ",", " filename", ")", ",", " '", "r", "'", ",", " encoding", "='", "UTF", "-", "8", "')", " as", " file", ":", "\n", "                ", "words", " =", " file", ".", "read", "()", ".", "split", "()", "\n", "                ", "total", " +=", " len", "(", "words", ")", "\n", "                ", "words", "_", "dict", ".", "update", "(", "Counter", "(", "words", "))", "\n", "    ", "with", " open", "(", "output", "_", "file", ",", " '", "w", "')", " as", " c", "sv", "file", ":", "\n", "        ", "writer", " =", " c", "sv", ".", "writer", "(", "csv", "file", ")", "\n", "        ", "writer", ".", "writer", "ow", "(['", "Word", "'", ",", " '", "Count", "'])", "\n", "        ", "for", " word", ",", " count", " in", " words", "_", "dict", ".", "items", "():", "\n", "            ", "writer", ".", "writer", "ow", "([", "word", ",", " count", "])", "\n", "    ", "return", " total", "<", "|", "end", "of", "text", "|>"], "logprobs": [-4.164668083190918, -0.9911632537841797, -1.9249475002288818, -0.05928240716457367, -1.0157651901245117, -0.016368985176086426, -0.075691357254982, -0.3434215784072876, -2.5068864822387695, -1.7514824867248535, -0.013050499372184277, -0.0005189026123844087, -0.01229858212172985, -0.5783266425132751, -1.28851318359375, -0.892228901386261, -0.003684875788167119, -0.026241691783070564, -4.482168878894299e-05, -0.004529098514467478, -1.0967194612021558e-05, -0.003879759693518281, -0.0270351842045784, -8.272782724816352e-05, -4.935142715112306e-05, -0.0016387379728257656, -0.017038630321621895, -0.012518047355115414, -0.46857935190200806, -0.5078826546669006, -0.04782110080122948, -0.029836157336831093, -0.0002356490003876388, -2.3841855067985307e-07, -0.2641480267047882, -0.045866016298532486, -0.015805678442120552, -0.0007619338575750589, -0.02118518203496933, -0.010249008424580097, -0.006851394660770893, -0.7821081280708313, -0.000551310193259269, -0.0031589390709996223, -0.5015085935592651, -0.0013160386588424444, -0.00013469743134919554, -0.0034577602054923773, -0.00021109737281221896, -0.00022551853908225894, -0.008996192365884781, -7.748573807475623e-06, -4.95898348162882e-05, -0.0009550062823109329, -0.03364311903715134, -0.26884138584136963, -0.0006705658161081374, -0.2437247782945633, -0.029783394187688828, -1.2651338577270508, -0.002315936842933297, -0.06277380138635635, -0.08903488516807556, -2.82041597366333, -0.1569221019744873, -0.010318857617676258, -0.012850098311901093, -0.002809508005157113, -0.6145760416984558, -0.014327628538012505, -0.0023977598175406456, -0.0044676256366074085, -2.0143320560455322, -0.9236668348312378, -0.36275771260261536, -7.343022298300639e-05, -0.0004944770480506122, -0.13567818701267242, -0.04896528273820877, -0.11356707662343979, -0.1175927072763443, -0.020584993064403534, -0.05347314476966858, -1.5050365924835205, -0.046906884759664536, -0.010525665245950222, -0.0003719830128829926, -0.001709786825813353, -0.0011380392825230956, -0.011615739203989506, -0.04058915749192238, -0.19865640997886658, -0.015101977623999119, -0.013032849878072739, -0.10404326766729355, -5.8053239627042785e-05, -0.04245677962899208, -0.6381012797355652, -0.02419096976518631, -0.016637038439512253, -0.010054063983261585, -0.008759880438446999, -0.9310526847839355, -0.18546248972415924, -0.0003682888636831194, -0.00270263385027647, -0.058461595326662064, -3.1470757676288486e-05, -0.0003587556129787117, -0.002297620987519622, -0.05129706859588623, -0.010201573371887207, -2.468080759048462, -0.0009750141180120409, -1.6615841388702393, -0.003315192647278309, -0.5990097522735596, -0.0007751559023745358, -0.0023204563185572624, -0.0030103863682597876, -0.24277617037296295, -0.0008887869771569967, -0.0005190217634662986, -2.062299427052494e-05, -0.00011121608258690685, -0.15993095934391022, -6.460934673668817e-05, -0.0011559001868590713, -3.933898824470816e-06, -0.3834345042705536, -0.0006173135479912162, -0.009592747315764427, -0.15406480431556702, -0.0002273062855238095, -0.0014666287461295724, -0.012408556416630745, -0.1560753881931305, -0.03712659329175949, -0.0019085064996033907, -0.00014900050882715732, -0.013665220700204372, -0.00596374599263072, -0.004788597580045462, -0.0008562712464481592, -0.006386229302734137, -0.060284942388534546, -0.17830263078212738, -0.1726061850786209, -0.03153211250901222, -0.0002727136597968638, -0.010859557427465916, -0.00018344627460464835, -6.556489552167477e-06, -9.548207890475169e-05, -0.21961751580238342, -0.00017355366435367614, -0.0016838433220982552, -0.0013313962845131755, -0.00957515463232994, -7.390948667307384e-06, -0.0002426806604489684, -0.0006093314150348306, -0.0010091932490468025, -0.0029767509549856186, -0.0081670843064785, -0.011420235969126225, -0.00041940953815355897, -0.001076952670700848, -0.1467355489730835, -0.04804268106818199, -0.016829179599881172, -1.2178130149841309, -8.344646857949556e-07, -7.152555099310121e-07, -3.302042750874534e-05, -0.0001658063702052459, -0.055080439895391464], "finish_reason": "stop"}], "metrics": {"energy": 219.0919872589111, "energy_per_token": 1.2378078376209667, "time": 7.571269, "time_per_token": 0.04277553107344633}}
