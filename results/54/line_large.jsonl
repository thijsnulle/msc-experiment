{"outputs": [{"text": " re.split(r\"\\.\\s*\", text)", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", ".", "\\", "s", "*", "\"", ",", " text", ")", "\n"], "logprobs": [-0.3863198161125183, -0.0001234931987710297, -0.13475245237350464, -0.2624661922454834, -0.16196992993354797, -0.913896918296814, -0.23338384926319122, -0.07388317584991455, -0.34212249517440796, -0.01729150488972664, -0.4628627598285675, -0.0012625826057046652, -0.0009454786195419729, -0.0060279713943600655, -0.13201270997524261, -0.1627952605485916], "finish_reason": "stop"}, {"text": " list(filter(lambda x: x != \"\", sentences))", "tokens": [" list", "(", "filter", "(", "lambda", " x", ":", " x", " ", "!", "=", " \"", "\"", ",", " sentences", "))", "\n"], "logprobs": [-3.0185606479644775, -0.0007346553611569107, -0.026191988959908485, -0.00037102968781255186, -1.1575074195861816, -0.46784690022468567, -0.003760767402127385, -0.19565929472446442, -0.37870702147483826, -0.00041214076918549836, -1.311301275563892e-06, -0.11055706441402435, -0.00129341846331954, -0.00583753501996398, -0.002053892007097602, -0.0001565095444675535, -0.06984251737594604], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0021827223245054483, -5.125986263010418e-06, -2.7418097943154862e-06, -0.20815232396125793, -0.01202335674315691], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorizer.fit_transform(sentences).todense())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", ".", "t", "od", "ense", "())", "\n"], "logprobs": [-1.9783437252044678, -4.458328112377785e-05, -0.00041309406515210867, -0.008886787109076977, -0.10219623893499374, -3.6954811548639555e-06, -0.00012003655137959868, -0.000271521887043491, -4.708655978902243e-05, -1.1801649634435307e-05, -0.0004291805380489677, -0.0006369707407429814, -5.364403477869928e-06, -0.0023974028881639242, -0.0016612313920632005, -0.4824706017971039, -3.349725011503324e-05, -0.00026663561584427953, -1.5982742309570312, -0.028518566861748695], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.004492784850299358, -0.00015436411194968969, -0.00010692501382436603, -0.0058381278067827225, -0.04167474806308746, -1.3828182090946939e-05, -0.002303448738530278, -0.09536655247211456, -5.722029527532868e-06, -0.018389681354165077, -0.009443257935345173, -0.007915675640106201, -0.009687435813248158, -0.002285489346832037, -5.602820692729438e-06, -3.2543604902457446e-05, -0.002126219915226102, -3.576272320060525e-06, -5.006777428206988e-06, 0.0, -1.0728830375228426e-06, -1.2611438035964966, -0.0032700421288609505], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.003394795348867774, -0.36324411630630493], "finish_reason": "stop"}], "metrics": {"energy": 459.9429277868272, "energy_per_token": 5.541481057672617, "time": 13.222508, "time_per_token": 0.1593073253012048}}
{"outputs": [{"text": " re.split(r\"\\.\\s\", text)", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", ".", "\\", "s", "\"", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.9033246636390686, -0.2283378690481186, -0.06311733275651932, -0.32708948850631714, -0.015494444407522678, -1.9423677921295166, -0.0006871246150694788, -0.013857817277312279, -0.18326866626739502, -0.10948992520570755], "finish_reason": "stop"}, {"text": " [s for s in sentences if s]  # remove empty sentences", "tokens": [" [", "s", " for", " s", " in", " sentences", " if", " s", "]", "  ", "#", " remove", " empty", " sentences", "\n"], "logprobs": [-0.06979204714298248, -1.1526906490325928, -0.1057610958814621, -0.00032419670606032014, -2.253030106658116e-05, -0.00017796363681554794, -0.00036399890086613595, -0.05082878842949867, -0.48581045866012573, -1.0050976276397705, -0.00022659118985757232, -0.7277596592903137, -0.0006980843027122319, -0.0844624862074852, -0.006808771286159754], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -0.20153085887432098, -0.012459064833819866], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorizer.fit_transform(sentences).todense(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", ".", "t", "od", "ense", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-2.0414810180664062, -5.2569914259947836e-05, -0.0006810491322539747, -0.009328587912023067, -0.09679899364709854, -2.7418097943154862e-06, -0.00014840454969089478, -0.00022968991834204644, -4.088794958079234e-05, -1.1086402082582936e-05, -0.0005067494930699468, -0.0006653240998275578, -4.887569048150908e-06, -0.0027674254961311817, -0.0023930028546601534, -0.6197313666343689, -2.682172998902388e-05, -0.0002740246127359569, -0.25313088297843933, -0.017985939979553223, -0.1111188530921936, -0.02249533124268055, -0.002460311632603407, -7.152531907195225e-06, -9.703165414975956e-05, -0.018415313214063644, -3.6954811548639555e-06, -1.0013530300057027e-05, 0.0, -8.344646857949556e-07, -0.631115734577179, -0.026019293814897537], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.0032943999394774437, -0.00014149141497910023, -9.738924563862383e-05, -0.007475734688341618, -0.025273116305470467, -1.5258672647178173e-05, -0.001899820752441883, -0.051349274814128876, -7.033323527139146e-06, -0.022534027695655823, -0.008279051631689072, -0.009249101392924786, -0.009277448058128357, -0.0021227700635790825, -5.960446742392378e-06, -3.373566141817719e-05, -0.0023819427005946636, -3.2186455882765586e-06, -5.483612312673358e-06, 0.0, -7.152555099310121e-07, -1.1167304515838623, -0.0036459180992096663], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0025050232652574778, -0.3849426209926605], "finish_reason": "stop"}], "metrics": {"energy": 372.8183267030716, "energy_per_token": 4.052373116337734, "time": 9.867078, "time_per_token": 0.10725084782608695}}
{"outputs": [{"text": " re.split(r'[.]\\W', text, flags=re.IGNORECASE)", "tokens": [" re", ".", "split", "(", "r", "'", "[", ".", "]\\", "W", "'", ",", " text", ",", " flags", "=", "re", ".", "IGN", "ORE", "C", "ASE", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -1.9696507453918457, -0.49106940627098083, -0.11019923537969589, -1.5960110425949097, -2.8417062759399414, -1.3123035430908203, -0.0017753568245097995, -0.022265102714300156, -2.6965010166168213, -0.23150427639484406, -0.028294241055846214, -0.009996351785957813, -1.4781842764932662e-05, -0.12170384079217911, -9.536738616588991e-07, -9.059865078597795e-06, -1.1920928244535389e-07, -0.053251296281814575, -0.08284887671470642], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence != \"\"]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -0.9148834943771362, -1.8000440832111053e-05, -6.6756979322235566e-06, -0.09545248746871948, -0.0013906818348914385, -0.002150843385607004, -0.031830426305532455], "finish_reason": "stop"}, {"text": " CountVectorizer(", "tokens": [" Count", "Vector", "izer", "(", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -1.7464957237243652, -2.403383731842041], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences).toarray()", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", ".", "to", "array", "()", "\n"], "logprobs": [-0.21238373219966888, -4.541770613286644e-05, -0.0007370378007180989, -0.0004153581103309989, -8.05822346592322e-05, -6.556489552167477e-06, -0.0031885281205177307, -0.0007027302053757012, -1.2040065485052764e-05, -0.0011849532602354884, -1.4601428508758545, -0.35134750604629517, -0.00019536493346095085, -0.0001426833332516253, -0.010680889710783958], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.004242349416017532, -0.00014590153296012431, -9.023735765367746e-05, -0.0068058110773563385, -0.038564350455999374, -1.8358061424805783e-05, -0.0021034989040344954, -0.0533604733645916, -5.364403477869928e-06, -0.027437958866357803, -0.007774096913635731, -0.006610667798668146, -0.009827327914536, -0.0025236920919269323, -5.960446742392378e-06, -3.397406908334233e-05, -0.002110398607328534, -2.861018856492592e-06, -5.483612312673358e-06, 0.0, -1.1920922133867862e-06, -1.175054669380188, -0.0028439811430871487], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0032511495519429445, -0.31659477949142456], "finish_reason": "stop"}], "metrics": {"energy": 346.8678530139924, "energy_per_token": 4.129379202547528, "time": 8.835024, "time_per_token": 0.10517885714285716}}
{"outputs": [{"text": " re.split(r\"\\.\\s*\", text)", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", ".", "\\", "s", "*", "\"", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.9033246636390686, -0.2283378690481186, -0.06311733275651932, -0.32708948850631714, -0.015494444407522678, -0.5644857287406921, -0.0011538759572431445, -0.0008635367848910391, -0.006055224221199751, -0.12595412135124207, -0.19135960936546326], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -0.6132019758224487, -0.21711958944797516], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -0.19179680943489075, -0.011841363273561], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences).toarray()", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", ".", "to", "array", "()", "\n"], "logprobs": [-0.21238373219966888, -4.541770613286644e-05, -0.0007370378007180989, -0.0004153581103309989, -8.05822346592322e-05, -6.556489552167477e-06, -0.0031885281205177307, -0.0007027302053757012, -1.2040065485052764e-05, -0.0011849532602354884, -1.4601428508758545, -0.35134750604629517, -0.00019536493346095085, -0.0001426833332516253, -0.010680889710783958], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.004242349416017532, -0.00014590153296012431, -9.023735765367746e-05, -0.0068058110773563385, -0.038564350455999374, -1.8358061424805783e-05, -0.0021034989040344954, -0.0533604733645916, -5.364403477869928e-06, -0.027437958866357803, -0.007774096913635731, -0.006610667798668146, -0.009827327914536, -0.0025236920919269323, -5.960446742392378e-06, -3.397406908334233e-05, -0.002110398607328534, -2.861018856492592e-06, -5.483612312673358e-06, 0.0, -1.1920922133867862e-06, -0.38333335518836975, -0.0002643712505232543, -0.002526308177039027, -0.0026400971692055464], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0032511495519429445, -0.31659477949142456], "finish_reason": "stop"}], "metrics": {"energy": 299.06826022529606, "energy_per_token": 4.096825482538303, "time": 7.580458, "time_per_token": 0.10384189041095891}}
{"outputs": [{"text": " re.split(r\"\\.\\s+\", text)  # split sentences by period plus any whitespace", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", ".", "\\", "s", "+", "\"", ",", " text", ")", "  ", "#", " split", " sentences", " by", " period", " plus", " any", " whites", "pace", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.9033246636390686, -0.2283378690481186, -0.06311733275651932, -0.32708948850631714, -0.015494444407522678, -1.500377893447876, -0.015092349611222744, -0.0006347072194330394, -0.00869311299175024, -0.18611755967140198, -1.8594658374786377, -0.0008195855189114809, -0.927679181098938, -1.4534376859664917, -0.9715661406517029, -0.3984183669090271, -3.0607388019561768, -2.507791519165039, -0.7571483850479126, -0.010734670795500278, -0.6633808016777039], "finish_reason": "stop"}, {"text": " [s for s in sentences if s]", "tokens": [" [", "s", " for", " s", " in", " sentences", " if", " s", "]", "\n"], "logprobs": [-0.06979204714298248, -1.1526906490325928, -0.1057610958814621, -0.00032419670606032014, -2.253030106658116e-05, -0.00017796363681554794, -0.00036399890086613595, -0.05082878842949867, -0.48581045866012573, -0.5090916156768799], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -0.20153085887432098, -0.012459064833819866], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.14564141631126404, -4.184158387943171e-05, -0.0010122895473614335, -0.00048828122089616954, -0.00010108436981681734, -8.22540732769994e-06, -0.002822227543219924, -0.0008529362385161221, -1.168244216387393e-05, -0.001625646254979074, -0.30274325609207153], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.003869309788569808, -0.0001227780303452164, -7.247662142617628e-05, -0.00750353978946805, -0.03687179088592529, -1.6569954823353328e-05, -0.0021136105060577393, -0.06666731834411621, -4.768360213347478e-06, -0.03487420454621315, -0.008563818410038948, -0.009171144105494022, -0.010545010678470135, -0.0022787100169807673, -5.125986263010418e-06, -3.361645576660521e-05, -0.0019177870126441121, -2.622600959512056e-06, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -1.143627405166626, -0.003017755225300789], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.002861098386347294, -0.3315780460834503], "finish_reason": "stop"}], "metrics": {"energy": 296.32622123527517, "energy_per_token": 3.8483924835750023, "time": 8.211709, "time_per_token": 0.10664557142857144}}
{"outputs": [{"text": " re.split(r'[^\\s]+\\.\\s', text)", "tokens": [" re", ".", "split", "(", "r", "'", "[", "^\\", "s", "]", "+\\", ".", "\\", "s", "'", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -1.9696507453918457, -0.49106940627098083, -2.9319956302642822, -0.9052428603172302, -0.09312433004379272, -0.13337068259716034, -0.0018079616129398346, -0.08123353868722916, -0.04199257493019104, -1.5679943561553955, -0.001795467222109437, -0.014471807517111301, -0.3642832934856415, -0.17719469964504242], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence != \"\"]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -0.9148834943771362, -1.8000440832111053e-05, -6.6756979322235566e-06, -0.09545248746871948, -0.0013906818348914385, -0.002150843385607004, -0.031830426305532455], "finish_reason": "stop"}, {"text": " CountVectorizer(tokenizer=lambda x: x.split())", "tokens": [" Count", "Vector", "izer", "(", "token", "izer", "=", "lambda", " x", ":", " x", ".", "split", "())", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -1.7464957237243652, -2.120680332183838, -1.0687023401260376, -0.017872711643576622, -0.19042225182056427, -0.4009898602962494, -0.0005791893927380443, -0.14981046319007874, -0.0006033745594322681, -0.10046084225177765, -0.39465370774269104, -0.03419796749949455], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.21238373219966888, -4.541770613286644e-05, -0.0007370378007180989, -0.0004153581103309989, -8.05822346592322e-05, -6.556489552167477e-06, -0.0031885281205177307, -0.0007027302053757012, -1.2040065485052764e-05, -0.0011849532602354884, -0.27194470167160034], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.004242349416017532, -0.00014590153296012431, -9.023735765367746e-05, -0.0068058110773563385, -0.038564350455999374, -1.8358061424805783e-05, -0.0021034989040344954, -0.0533604733645916, -5.364403477869928e-06, -0.027437958866357803, -0.007774096913635731, -0.006610667798668146, -0.009827327914536, -0.0025236920919269323, -5.960446742392378e-06, -3.397406908334233e-05, -0.002110398607328534, -2.861018856492592e-06, -5.483612312673358e-06, 0.0, -1.1920922133867862e-06, -1.175054669380188, -0.0028439811430871487], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0032511495519429445, -0.31659477949142456], "finish_reason": "stop"}], "metrics": {"energy": 347.17998899173733, "energy_per_token": 4.084470458726321, "time": 9.116592, "time_per_token": 0.10725402352941177}}
{"outputs": [{"text": " re.split(r\"\\.\\s*\", text)", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", ".", "\\", "s", "*", "\"", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.9033246636390686, -0.2283378690481186, -0.06311733275651932, -0.32708948850631714, -0.015494444407522678, -0.5644857287406921, -0.0011538759572431445, -0.0008635367848910391, -0.006055224221199751, -0.12595412135124207, -0.19135960936546326], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence != \"\"]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -0.9148834943771362, -1.8000440832111053e-05, -6.6756979322235566e-06, -0.09545248746871948, -0.0013906818348914385, -0.002150843385607004, -0.031830426305532455], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -0.19179680943489075, -0.011841363273561], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences).todense()", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", ".", "t", "od", "ense", "()", "\n"], "logprobs": [-0.21238373219966888, -4.541770613286644e-05, -0.0007370378007180989, -0.0004153581103309989, -8.05822346592322e-05, -6.556489552167477e-06, -0.0031885281205177307, -0.0007027302053757012, -1.2040065485052764e-05, -0.0011849532602354884, -1.4601428508758545, -1.2603745460510254, -3.0874729418428615e-05, -0.00018904806347563863, -0.00014077626110520214, -0.02078968845307827], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.004242349416017532, -0.00014590153296012431, -9.023735765367746e-05, -0.0068058110773563385, -0.038564350455999374, -1.8358061424805783e-05, -0.0021034989040344954, -0.0533604733645916, -5.364403477869928e-06, -0.027437958866357803, -0.007774096913635731, -0.006610667798668146, -0.009827327914536, -0.0025236920919269323, -5.960446742392378e-06, -3.397406908334233e-05, -0.002110398607328534, -2.861018856492592e-06, -5.483612312673358e-06, 0.0, -1.1920922133867862e-06, -0.38333335518836975, -0.0002643712505232543, -0.002526308177039027, -0.0026400971692055464], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0032511495519429445, -0.31659477949142456], "finish_reason": "stop"}], "metrics": {"energy": 293.9831207351684, "energy_per_token": 3.7213053257616258, "time": 8.195145, "time_per_token": 0.10373601265822785}}
{"outputs": [{"text": " re.split(r\"\\.\", text)", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", ".", "\"", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.9033246636390686, -0.2283378690481186, -0.06311733275651932, -1.8717138767242432, -0.0012361512053757906, -0.011579328216612339, -0.20228737592697144, -0.10658729821443558], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence != \"\"]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -0.9148834943771362, -1.8000440832111053e-05, -6.6756979322235566e-06, -0.09545248746871948, -0.0013906818348914385, -0.002150843385607004, -0.031830426305532455], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -0.19179680943489075, -0.011841363273561], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.21238373219966888, -4.541770613286644e-05, -0.0007370378007180989, -0.0004153581103309989, -8.05822346592322e-05, -6.556489552167477e-06, -0.0031885281205177307, -0.0007027302053757012, -1.2040065485052764e-05, -0.0011849532602354884, -0.27194470167160034], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.004242349416017532, -0.00014590153296012431, -9.023735765367746e-05, -0.0068058110773563385, -0.038564350455999374, -1.8358061424805783e-05, -0.0021034989040344954, -0.0533604733645916, -5.364403477869928e-06, -0.027437958866357803, -0.007774096913635731, -0.006610667798668146, -0.009827327914536, -0.0025236920919269323, -5.960446742392378e-06, -3.397406908334233e-05, -0.002110398607328534, -2.861018856492592e-06, -5.483612312673358e-06, 0.0, -1.1920922133867862e-06, -1.175054669380188, -0.0028439811430871487], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0032511495519429445, -0.31659477949142456], "finish_reason": "stop"}], "metrics": {"energy": 285.6369254398346, "energy_per_token": 4.1396655860845595, "time": 7.419757, "time_per_token": 0.10753271014492753}}
{"outputs": [{"text": " re.split(r'(\\.\\s*)', text)", "tokens": [" re", ".", "split", "(", "r", "'", "(\\", ".", "\\", "s", "*)", "'", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -1.9696507453918457, -1.8081966638565063, -0.43163546919822693, -0.8394545912742615, -0.11434709280729294, -0.6664440035820007, -0.0015855372184887528, -0.0004704084130935371, -0.011727909557521343, -0.07920411229133606, -0.25244975090026855], "finish_reason": "stop"}, {"text": " [s for s in sentences if s]", "tokens": [" [", "s", " for", " s", " in", " sentences", " if", " s", "]", "\n"], "logprobs": [-0.06979204714298248, -1.1526906490325928, -0.1057610958814621, -0.00032419670606032014, -2.253030106658116e-05, -0.00017796363681554794, -0.00036399890086613595, -0.05082878842949867, -0.48581045866012573, -0.5090916156768799], "finish_reason": "stop"}, {"text": " CountVectorizer(decode_error=\"ignore\")", "tokens": [" Count", "Vector", "izer", "(", "decode", "_", "error", "=", "\"", "ignore", "\"", ")", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -1.701576590538025, -3.2732677459716797, -2.4676019165781327e-05, -0.007016897201538086, -0.3229750990867615, -0.0023284247145056725, -0.030260473489761353, -0.00023493390472140163, -0.22194300591945648, -0.03168792277574539], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.14564141631126404, -4.184158387943171e-05, -0.0010122895473614335, -0.00048828122089616954, -0.00010108436981681734, -8.22540732769994e-06, -0.002822227543219924, -0.0008529362385161221, -1.168244216387393e-05, -0.001625646254979074, -0.30274325609207153], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.003869309788569808, -0.0001227780303452164, -7.247662142617628e-05, -0.00750353978946805, -0.03687179088592529, -1.6569954823353328e-05, -0.0021136105060577393, -0.06666731834411621, -4.768360213347478e-06, -0.03487420454621315, -0.008563818410038948, -0.009171144105494022, -0.010545010678470135, -0.0022787100169807673, -5.125986263010418e-06, -3.361645576660521e-05, -0.0019177870126441121, -2.622600959512056e-06, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -0.3979990482330322, -0.001485078944824636, -0.0030688594561070204, -0.002629753202199936], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.002861098386347294, -0.3315780460834503], "finish_reason": "stop"}], "metrics": {"energy": 304.3053955926895, "energy_per_token": 3.9520181245803827, "time": 8.224161, "time_per_token": 0.10680728571428572}}
{"outputs": [{"text": " re.split('\\.\\s*', text)", "tokens": [" re", ".", "split", "('", "\\", ".", "\\", "s", "*", "'", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -1.7433843612670898, -0.39575597643852234, -0.06716926395893097, -0.8601463437080383, -0.02490888722240925, -0.7058649659156799, -0.005193433258682489, -0.001023483811877668, -0.0222396869212389, -0.1382114142179489, -0.16134460270404816], "finish_reason": "stop"}, {"text": " [s for s in sentences if s]", "tokens": [" [", "s", " for", " s", " in", " sentences", " if", " s", "]", "\n"], "logprobs": [-0.06979204714298248, -1.1526906490325928, -0.1057610958814621, -0.00032419670606032014, -2.253030106658116e-05, -0.00017796363681554794, -0.00036399890086613595, -0.05082878842949867, -0.48581045866012573, -0.5090916156768799], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -0.20153085887432098, -0.012459064833819866], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences).toarray()", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", ".", "to", "array", "()", "\n"], "logprobs": [-0.14564141631126404, -4.184158387943171e-05, -0.0010122895473614335, -0.00048828122089616954, -0.00010108436981681734, -8.22540732769994e-06, -0.002822227543219924, -0.0008529362385161221, -1.168244216387393e-05, -0.001625646254979074, -1.3728535175323486, -0.39720091223716736, -0.00019751029321923852, -0.00012683063687290996, -0.011545272544026375], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.003869309788569808, -0.0001227780303452164, -7.247662142617628e-05, -0.00750353978946805, -0.03687179088592529, -1.6569954823353328e-05, -0.0021136105060577393, -0.06666731834411621, -4.768360213347478e-06, -0.03487420454621315, -0.008563818410038948, -0.009171144105494022, -0.010545010678470135, -0.0022787100169807673, -5.125986263010418e-06, -3.361645576660521e-05, -0.0019177870126441121, -2.622600959512056e-06, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -0.3979990482330322, -0.001485078944824636, -0.0030688594561070204, -0.002629753202199936], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.002861098386347294, -0.3315780460834503], "finish_reason": "stop"}], "metrics": {"energy": 284.0223434791565, "energy_per_token": 4.000314696889529, "time": 7.8144054, "time_per_token": 0.11006204788732395}}
{"outputs": [{"text": " re.split(r\"\\.\\s\", text)", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", ".", "\\", "s", "\"", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.9033246636390686, -0.2283378690481186, -0.06311733275651932, -0.32708948850631714, -0.015494444407522678, -1.9423677921295166, -0.0006871246150694788, -0.013857817277312279, -0.18326866626739502, -0.10948992520570755], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence != \"\"]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -0.9148834943771362, -1.8000440832111053e-05, -6.6756979322235566e-06, -0.09545248746871948, -0.0013906818348914385, -0.002150843385607004, -0.031830426305532455], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -0.19179680943489075, -0.011841363273561], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.21238373219966888, -4.541770613286644e-05, -0.0007370378007180989, -0.0004153581103309989, -8.05822346592322e-05, -6.556489552167477e-06, -0.0031885281205177307, -0.0007027302053757012, -1.2040065485052764e-05, -0.0011849532602354884, -0.27194470167160034], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.004242349416017532, -0.00014590153296012431, -9.023735765367746e-05, -0.0068058110773563385, -0.038564350455999374, -1.8358061424805783e-05, -0.0021034989040344954, -0.0533604733645916, -5.364403477869928e-06, -0.027437958866357803, -0.007774096913635731, -0.006610667798668146, -0.009827327914536, -0.0025236920919269323, -5.960446742392378e-06, -3.397406908334233e-05, -0.002110398607328534, -2.861018856492592e-06, -5.483612312673358e-06, 0.0, -1.1920922133867862e-06, -0.38333335518836975, -0.0002643712505232543, -0.002526308177039027, -0.0026400971692055464], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0032511495519429445, -0.31659477949142456], "finish_reason": "stop"}], "metrics": {"energy": 291.7806333694458, "energy_per_token": 3.996994977663641, "time": 7.6151323, "time_per_token": 0.10431688082191781}}
{"outputs": [{"text": " [sentence for sentence in re.split('\\.\\s*', text) if sentence]", "tokens": [" [", "sentence", " for", " sentence", " in", " re", ".", "split", "('", "\\", ".", "\\", "s", "*", "'", ",", " text", ")", " if", " sentence", "]", "\n"], "logprobs": [-1.8458491563796997, -1.22525155544281, -0.5299950242042542, -0.0021923573222011328, -0.000614216027315706, -0.11837011575698853, -9.798523387871683e-05, -0.0838908925652504, -1.6940423250198364, -0.36515048146247864, -0.07982352375984192, -0.7126460075378418, -0.026799499988555908, -0.9410135746002197, -0.004478543531149626, -0.000679500459227711, -0.01483809482306242, -0.049112044274806976, -0.008462049067020416, -0.1034834012389183, -0.34870636463165283, -0.12733514606952667], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence != \"\"]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -0.9148834943771362, -1.8000440832111053e-05, -6.6756979322235566e-06, -0.09545248746871948, -0.0013906818348914385, -0.002150843385607004, -0.031830426305532455], "finish_reason": "stop"}, {"text": " CountVectorizer(lowercase=False)", "tokens": [" Count", "Vector", "izer", "(", "low", "erc", "ase", "=", "False", ")", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -1.7464957237243652, -1.149187684059143, -0.00029523781267926097, -6.079655122448457e-06, -0.012056454084813595, -1.2636451721191406, -0.3033466935157776, -0.05118370056152344], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorizer.fit_transform(sentences).toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-1.6828923225402832, -4.672895011026412e-05, -0.0005436849314719439, -0.008511812426149845, -0.1039472222328186, -2.7418097943154862e-06, -0.00011467275908216834, -0.00022182388056535274, -5.054346183896996e-05, -1.1444026313256472e-05, -0.000331704446580261, -0.0007827793597243726, -5.125986263010418e-06, -0.002443306613713503, -0.0016788449138402939, -0.8445292115211487, -2.3364747903542593e-05, -0.44306275248527527, -0.013532686978578568, -0.06756298989057541, -0.023621108382940292, -0.002062100451439619, -3.576272320060525e-06, -5.1020273531321436e-05, -0.013531276024878025, -1.5497195136049413e-06, -7.510157047363464e-06, 0.0, -8.344646857949556e-07, -0.5308268666267395, -0.001111128251068294, -0.003691408084705472, -0.005586606450378895], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.0032766959629952908, -0.00013410145766101778, -8.594620157964528e-05, -0.006884781178086996, -0.03545943647623062, -1.2993727978027891e-05, -0.0021214615553617477, -0.06928074359893799, -4.887569048150908e-06, -0.02051001787185669, -0.007954348810017109, -0.010377495549619198, -0.009629584848880768, -0.0020624573808163404, -6.6756979322235566e-06, -3.0517112463712692e-05, -0.0019729926716536283, -3.2186455882765586e-06, -5.364403477869928e-06, 0.0, -7.152555099310121e-07, -0.9556161761283875, -0.0034689269959926605], "finish_reason": "stop"}, {"text": " df<|endoftext|>#!/usr/bin/env python3", "tokens": [" df", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.003268853761255741, -1.585692048072815, -4.529942543740617e-06, -5.364403477869928e-06, -4.6491513785440475e-06, -1.3708974620385561e-05, -0.2236330509185791, -1.2037358283996582, -1.4136542081832886, -0.04056500270962715, -0.05945787951350212, -7.772143726469949e-05, -0.0044942088425159454, -0.000985017861239612, -0.030421338975429535, -0.003529392648488283, -0.44300442934036255, -0.013002844527363777], "finish_reason": "stop"}], "metrics": {"energy": 463.48106351661687, "energy_per_token": 3.7990251107919417, "time": 12.3263, "time_per_token": 0.10103524590163934}}
{"outputs": [{"text": " re.split(r'\\.\\s*', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", ".", "\\", "s", "*", "'", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.889008104801178, -0.024111026898026466, -0.5609467625617981, -0.03168492019176483, -0.6258442997932434, -0.0014998388942331076, -0.0015628041001036763, -0.00695226201787591, -0.12125367671251297, -0.21052072942256927], "finish_reason": "stop"}, {"text": " [s for s in sentences if s]  # remove empty sentences", "tokens": [" [", "s", " for", " s", " in", " sentences", " if", " s", "]", "  ", "#", " remove", " empty", " sentences", "\n"], "logprobs": [-0.06979204714298248, -1.1526906490325928, -0.1057610958814621, -0.00032419670606032014, -2.253030106658116e-05, -0.00017796363681554794, -0.00036399890086613595, -0.05082878842949867, -0.48581045866012573, -1.0050976276397705, -0.00022659118985757232, -0.7277596592903137, -0.0006980843027122319, -0.0844624862074852, -0.006808771286159754], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -0.20153085887432098, -0.012459064833819866], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.14564141631126404, -4.184158387943171e-05, -0.0010122895473614335, -0.00048828122089616954, -0.00010108436981681734, -8.22540732769994e-06, -0.002822227543219924, -0.0008529362385161221, -1.168244216387393e-05, -0.001625646254979074, -0.30274325609207153], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.003869309788569808, -0.0001227780303452164, -7.247662142617628e-05, -0.00750353978946805, -0.03687179088592529, -1.6569954823353328e-05, -0.0021136105060577393, -0.06666731834411621, -4.768360213347478e-06, -0.03487420454621315, -0.008563818410038948, -0.009171144105494022, -0.010545010678470135, -0.0022787100169807673, -5.125986263010418e-06, -3.361645576660521e-05, -0.0019177870126441121, -2.622600959512056e-06, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -0.3979990482330322, -0.001485078944824636, -0.0030688594561070204, -0.002629753202199936], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.002861098386347294, -0.3315780460834503], "finish_reason": "stop"}], "metrics": {"energy": 286.1798013219834, "energy_per_token": 3.920271250986074, "time": 7.810015, "time_per_token": 0.10698650684931507}}
{"outputs": [{"text": " re.split('\\.', text)", "tokens": [" re", ".", "split", "('", "\\", ".", "'", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -1.7433843612670898, -0.39575597643852234, -0.06716926395893097, -1.450585126876831, -0.003078129142522812, -0.06373795121908188, -0.13839173316955566, -0.09525948017835617], "finish_reason": "stop"}, {"text": " [s for s in sentences if s != \"\"]  # remove empty sentences", "tokens": [" [", "s", " for", " s", " in", " sentences", " if", " s", " ", "!", "=", " \"", "\"", "]", "  ", "#", " remove", " empty", " sentences", "\n"], "logprobs": [-0.06979204714298248, -1.1526906490325928, -0.1057610958814621, -0.00032419670606032014, -2.253030106658116e-05, -0.00017796363681554794, -0.00036399890086613595, -0.05082878842949867, -1.1583149433135986, -2.13382354559144e-05, -6.079655122448457e-06, -0.07245753705501556, -0.0018189090769737959, -0.0027821664698421955, -2.6611456871032715, -0.0004078510100953281, -0.7726212739944458, -0.0012394849909469485, -0.042196933180093765, -0.0063394405879080296], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -0.20153085887432098, -0.012459064833819866], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.14564141631126404, -4.184158387943171e-05, -0.0010122895473614335, -0.00048828122089616954, -0.00010108436981681734, -8.22540732769994e-06, -0.002822227543219924, -0.0008529362385161221, -1.168244216387393e-05, -0.001625646254979074, -0.30274325609207153], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.003869309788569808, -0.0001227780303452164, -7.247662142617628e-05, -0.00750353978946805, -0.03687179088592529, -1.6569954823353328e-05, -0.0021136105060577393, -0.06666731834411621, -4.768360213347478e-06, -0.03487420454621315, -0.008563818410038948, -0.009171144105494022, -0.010545010678470135, -0.0022787100169807673, -5.125986263010418e-06, -3.361645576660521e-05, -0.0019177870126441121, -2.622600959512056e-06, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -0.3979990482330322, -0.001485078944824636, -0.0030688594561070204, -0.002629753202199936], "finish_reason": "stop"}, {"text": " df<|endoftext|>\"\"\"", "tokens": [" df", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.002861098386347294, -1.5552146434783936, -5.006777428206988e-06, -6.6756979322235566e-06, -4.0531076592742465e-06, -1.5258672647178173e-05, -1.6117762327194214, -0.0021099227014929056, -0.004805207252502441, -0.00018714107864070684, -0.2430202066898346], "finish_reason": "stop"}], "metrics": {"energy": 335.6950012226106, "energy_per_token": 4.044518087019405, "time": 8.838097, "time_per_token": 0.10648309638554217}}
{"outputs": [{"text": " re.split(r'([.!?]+)', text)  # Split the text into sentences while preserving the delimiters", "tokens": [" re", ".", "split", "(", "r", "'", "([", ".", "!", "?", "]+", ")'", ",", " text", ")", "  ", "#", " Split", " the", " text", " into", " sentences", " while", " preserving", " the", " del", "imit", "ers", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -1.9696507453918457, -2.2064261436462402, -0.12520942091941833, -0.7987582087516785, -0.01251310296356678, -0.902341365814209, -0.05417667329311371, -0.00013469743134919554, -0.01104750670492649, -0.06716079264879227, -2.2515008449554443, -0.0005930095794610679, -0.7536227703094482, -0.6503901481628418, -0.019618751481175423, -0.05632757022976875, -0.012620699591934681, -1.3568862676620483, -1.2380952835083008, -0.5460092425346375, -0.5834315419197083, -0.1172049418091774, -7.283422019099817e-05, -0.1884215623140335], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -0.6132019758224487, -0.21711958944797516], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -0.19179680943489075, -0.011841363273561], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.21238373219966888, -4.541770613286644e-05, -0.0007370378007180989, -0.0004153581103309989, -8.05822346592322e-05, -6.556489552167477e-06, -0.0031885281205177307, -0.0007027302053757012, -1.2040065485052764e-05, -0.0011849532602354884, -0.27194470167160034], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.004242349416017532, -0.00014590153296012431, -9.023735765367746e-05, -0.0068058110773563385, -0.038564350455999374, -1.8358061424805783e-05, -0.0021034989040344954, -0.0533604733645916, -5.364403477869928e-06, -0.027437958866357803, -0.007774096913635731, -0.006610667798668146, -0.009827327914536, -0.0025236920919269323, -5.960446742392378e-06, -3.397406908334233e-05, -0.002110398607328534, -2.861018856492592e-06, -5.483612312673358e-06, 0.0, -1.1920922133867862e-06, -0.38333335518836975, -0.0002643712505232543, -0.002526308177039027, -0.0026400971692055464], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0032511495519429445, -0.31659477949142456], "finish_reason": "stop"}], "metrics": {"energy": 313.86965673923487, "energy_per_token": 3.8276787407223765, "time": 8.627861, "time_per_token": 0.10521781707317072}}
{"outputs": [{"text": " re.split(r\"\\.\\s*\", text.strip().lower())", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", ".", "\\", "s", "*", "\"", ",", " text", ".", "strip", "()", ".", "lower", "())", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.9033246636390686, -0.2283378690481186, -0.06311733275651932, -0.32708948850631714, -0.015494444407522678, -0.5644857287406921, -0.0011538759572431445, -0.0008635367848910391, -0.006055224221199751, -2.438995838165283, -2.7707552909851074, -1.1428093910217285, -0.15935222804546356, -0.05657464638352394, -0.011724256910383701, -0.12996599078178406], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -0.6132019758224487, -0.21711958944797516], "finish_reason": "stop"}, {"text": " CountVectorizer(max_df=1.0, min_df=1, stop_words=None, lowercase=False, token_pattern=r\"[^\\s]+\", ngram_range=(1, 1), analyzer=\"word\")", "tokens": [" Count", "Vector", "izer", "(", "max", "_", "df", "=", "1", ".", "0", ",", " min", "_", "df", "=", "1", ",", " stop", "_", "words", "=", "None", ",", " lower", "case", "=", "False", ",", " token", "_", "pattern", "=", "r", "\"", "[", "^\\", "s", "]+", "\"", ",", " n", "gram", "_", "range", "=(", "1", ",", " ", "1", ")", ",", " analy", "zer", "=", "\"", "word", "\"", ")", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -1.7464957237243652, -3.817244052886963, -3.6954195820726454e-05, -0.4365432858467102, -0.004444482736289501, -0.2655225098133087, -0.01685906946659088, -0.008996074087917805, -0.05173909291625023, -0.03646693751215935, 0.0, -1.1920928244535389e-07, -0.00022110878489911556, -0.009072390384972095, -0.09153673052787781, -1.0043940544128418, -2.3841855067985307e-07, -1.0728830375228426e-06, -0.05993571877479553, -0.02470828965306282, -0.38799887895584106, -0.5767490267753601, -2.5748875486897305e-05, -0.0005349873681552708, -1.243268370628357, -0.18219442665576935, -0.24322231113910675, -0.014013935811817646, -0.005450744181871414, -0.21886347234249115, -0.24374571442604065, -0.00013124081306159496, -3.4100356101989746, -0.36426493525505066, -0.025576788932085037, -0.0032620809506624937, -0.0012953233672305942, -0.24848510324954987, -2.796154022216797, -0.0010383697226643562, -2.52720492426306e-05, -4.768370445162873e-07, -0.0008612737292423844, -0.0060484702698886395, -3.0040289857424796e-05, -0.06420603394508362, -0.004430715925991535, -0.20271341502666473, -5.149708886165172e-05, -0.18360942602157593, -3.2186455882765586e-06, -0.16814948618412018, -0.0003165697562508285, -0.016617106273770332, -1.847726889536716e-05, -0.6355833411216736, -0.01947437785565853], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences).toarray()", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", ".", "to", "array", "()", "\n"], "logprobs": [-0.21238373219966888, -4.541770613286644e-05, -0.0007370378007180989, -0.0004153581103309989, -8.05822346592322e-05, -6.556489552167477e-06, -0.0031885281205177307, -0.0007027302053757012, -1.2040065485052764e-05, -0.0011849532602354884, -1.4601428508758545, -0.35134750604629517, -0.00019536493346095085, -0.0001426833332516253, -0.010680889710783958], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.004242349416017532, -0.00014590153296012431, -9.023735765367746e-05, -0.0068058110773563385, -0.038564350455999374, -1.8358061424805783e-05, -0.0021034989040344954, -0.0533604733645916, -5.364403477869928e-06, -0.027437958866357803, -0.007774096913635731, -0.006610667798668146, -0.009827327914536, -0.0025236920919269323, -5.960446742392378e-06, -3.397406908334233e-05, -0.002110398607328534, -2.861018856492592e-06, -5.483612312673358e-06, 0.0, -1.1920922133867862e-06, -1.175054669380188, -0.0028439811430871487], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0032511495519429445, -0.31659477949142456], "finish_reason": "stop"}], "metrics": {"energy": 493.64582917308803, "energy_per_token": 3.768288772313649, "time": 12.941514, "time_per_token": 0.09879018320610687}}
{"outputs": [{"text": " re.split('\\. ', text)", "tokens": [" re", ".", "split", "('", "\\", ".", " '", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -1.7433843612670898, -0.39575597643852234, -0.06716926395893097, -1.993330717086792, -0.0019677577074617147, -0.043426211923360825, -0.08203258365392685, -0.09735677391290665], "finish_reason": "stop"}, {"text": " [s for s in sentences if s != \"\"]", "tokens": [" [", "s", " for", " s", " in", " sentences", " if", " s", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -1.1526906490325928, -0.1057610958814621, -0.00032419670606032014, -2.253030106658116e-05, -0.00017796363681554794, -0.00036399890086613595, -0.05082878842949867, -1.1583149433135986, -2.13382354559144e-05, -6.079655122448457e-06, -0.07245753705501556, -0.0018189090769737959, -0.0027821664698421955, -0.07827890664339066], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -0.20153085887432098, -0.012459064833819866], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.14564141631126404, -4.184158387943171e-05, -0.0010122895473614335, -0.00048828122089616954, -0.00010108436981681734, -8.22540732769994e-06, -0.002822227543219924, -0.0008529362385161221, -1.168244216387393e-05, -0.001625646254979074, -0.30274325609207153], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.003869309788569808, -0.0001227780303452164, -7.247662142617628e-05, -0.00750353978946805, -0.03687179088592529, -1.6569954823353328e-05, -0.0021136105060577393, -0.06666731834411621, -4.768360213347478e-06, -0.03487420454621315, -0.008563818410038948, -0.009171144105494022, -0.010545010678470135, -0.0022787100169807673, -5.125986263010418e-06, -3.361645576660521e-05, -0.0019177870126441121, -2.622600959512056e-06, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -0.3979990482330322, -0.001485078944824636, -0.0030688594561070204, -0.002629753202199936], "finish_reason": "stop"}, {"text": " df<|endoftext|># -*- coding: utf-8 -*-", "tokens": [" df", "<", "|", "end", "of", "text", "|>", "#", " -", "*-", " coding", ":", " utf", "-", "8", " -", "*-", "\n"], "logprobs": [-0.002861098386347294, -1.5552146434783936, -5.006777428206988e-06, -6.6756979322235566e-06, -4.0531076592742465e-06, -1.5258672647178173e-05, -0.2226446568965912, -1.1976618766784668, -2.266244411468506, -0.005695424973964691, -0.012979310937225819, -0.0027457892429083586, -0.01812514290213585, -0.004891927354037762, -5.531158240046352e-05, -0.009583892300724983, -0.001954194623976946, -0.00284445658326149], "finish_reason": "stop"}], "metrics": {"energy": 369.56016252708434, "energy_per_token": 4.347766617965698, "time": 9.245875, "time_per_token": 0.108775}}
{"outputs": [{"text": " re.split(r\"\\.\\s*\", text)", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", ".", "\\", "s", "*", "\"", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.9033246636390686, -0.2283378690481186, -0.06311733275651932, -0.32708948850631714, -0.015494444407522678, -0.5644857287406921, -0.0011538759572431445, -0.0008635367848910391, -0.006055224221199751, -0.12595412135124207, -0.19135960936546326], "finish_reason": "stop"}, {"text": " [sent for sent in sentences if sent]  # remove empty sentences", "tokens": [" [", "sent", " for", " sent", " in", " sentences", " if", " sent", "]", "  ", "#", " remove", " empty", " sentences", "\n"], "logprobs": [-0.06979204714298248, -2.670001745223999, -0.054259106516838074, -0.00021217002358753234, -0.00010430268594063818, -0.0001774868869688362, -0.0006632988806813955, -0.14524129033088684, -0.677432119846344, -1.3681261539459229, -0.000770510348957032, -0.6873533725738525, -0.000739539333153516, -0.0841575488448143, -0.007452662102878094], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -0.20153085887432098, -0.012459064833819866], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorizer.fit_transform(sentences).toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-2.0414810180664062, -5.2569914259947836e-05, -0.0006810491322539747, -0.009328587912023067, -0.09679899364709854, -2.7418097943154862e-06, -0.00014840454969089478, -0.00022968991834204644, -4.088794958079234e-05, -1.1086402082582936e-05, -0.0005067494930699468, -0.0006653240998275578, -4.887569048150908e-06, -0.0027674254961311817, -0.0023930028546601534, -0.7801317572593689, -2.52720492426306e-05, -0.34863394498825073, -0.010693391785025597, -0.05873546004295349, -0.02076633647084236, -0.0021943794563412666, -4.172316494077677e-06, -6.4490144723095e-05, -0.008911481127142906, -1.1920922133867862e-06, -8.34461570775602e-06, 0.0, -5.960462772236497e-07, -0.9941123723983765, -0.00667260168120265], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.0032943999394774437, -0.00014149141497910023, -9.738924563862383e-05, -0.007475734688341618, -0.025273116305470467, -1.5258672647178173e-05, -0.001899820752441883, -0.051349274814128876, -7.033323527139146e-06, -0.022534027695655823, -0.008279051631689072, -0.009249101392924786, -0.009277448058128357, -0.0021227700635790825, -5.960446742392378e-06, -3.373566141817719e-05, -0.0023819427005946636, -3.2186455882765586e-06, -5.483612312673358e-06, 0.0, -7.152555099310121e-07, -1.1167304515838623, -0.0036459180992096663], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0025050232652574778, -0.3849426209926605], "finish_reason": "stop"}], "metrics": {"energy": 368.97314815616613, "energy_per_token": 4.010577697349632, "time": 9.872247, "time_per_token": 0.10730703260869565}}
{"outputs": [{"text": " [s.strip() for s in re.split(r'\\.\\s+', text) if s.strip()]", "tokens": [" [", "s", ".", "strip", "()", " for", " s", " in", " re", ".", "split", "(", "r", "'\\", ".", "\\", "s", "+'", ",", " text", ")", " if", " s", ".", "strip", "()", "]", "\n"], "logprobs": [-1.8458491563796997, -0.9413007497787476, -0.48018619418144226, -0.040288977324962616, -0.01526318583637476, -0.0480043925344944, -0.0003692421887535602, -9.97731985989958e-05, -0.1671576201915741, -9.738924563862383e-05, -0.10056595504283905, -0.26340246200561523, -0.17588898539543152, -1.0216442346572876, -0.04750796779990196, -0.2345636636018753, -0.014451832510530949, -1.1160433292388916, -0.0002379134384682402, -0.004042905755341053, -0.09836293011903763, -0.006457652430981398, -0.09902187436819077, -0.33247968554496765, -0.0005507144378498197, -0.0005098473629914224, -0.1158217340707779, -0.15214674174785614], "finish_reason": "stop"}, {"text": " [s for s in sentences if s]  # remove empty sentences", "tokens": [" [", "s", " for", " s", " in", " sentences", " if", " s", "]", "  ", "#", " remove", " empty", " sentences", "\n"], "logprobs": [-0.06979204714298248, -1.1526906490325928, -0.1057610958814621, -0.00032419670606032014, -2.253030106658116e-05, -0.00017796363681554794, -0.00036399890086613595, -0.05082878842949867, -0.48581045866012573, -1.0050976276397705, -0.00022659118985757232, -0.7277596592903137, -0.0006980843027122319, -0.0844624862074852, -0.006808771286159754], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -0.20153085887432098, -0.012459064833819866], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.14564141631126404, -4.184158387943171e-05, -0.0010122895473614335, -0.00048828122089616954, -0.00010108436981681734, -8.22540732769994e-06, -0.002822227543219924, -0.0008529362385161221, -1.168244216387393e-05, -0.001625646254979074, -0.30274325609207153], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.003869309788569808, -0.0001227780303452164, -7.247662142617628e-05, -0.00750353978946805, -0.03687179088592529, -1.6569954823353328e-05, -0.0021136105060577393, -0.06666731834411621, -4.768360213347478e-06, -0.03487420454621315, -0.008563818410038948, -0.009171144105494022, -0.010545010678470135, -0.0022787100169807673, -5.125986263010418e-06, -3.361645576660521e-05, -0.0019177870126441121, -2.622600959512056e-06, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -0.3979990482330322, -0.001485078944824636, -0.0030688594561070204, -0.002629753202199936], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.002861098386347294, -0.3315780460834503], "finish_reason": "stop"}], "metrics": {"energy": 361.27784685897836, "energy_per_token": 4.200905196034632, "time": 9.0405655, "time_per_token": 0.10512285465116279}}
{"outputs": [{"text": " text.split('.')", "tokens": [" text", ".", "split", "('", ".", "')", "\n"], "logprobs": [-2.0059120655059814, -0.008855121210217476, -0.10136629641056061, -0.6851421594619751, -0.00787250604480505, -0.006683495827019215, -0.13881100714206696], "finish_reason": "stop"}, {"text": " [sentence.lower() for sentence in sentences if sentence != \"\"]", "tokens": [" [", "sentence", ".", "lower", "()", " for", " sentence", " in", " sentences", " if", " sentence", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -2.7460458278656006, -2.298564910888672, -7.688703772146255e-05, -0.028800640255212784, -0.00016699827392585576, -8.463501580990851e-05, -0.00033825874561443925, -0.09174567461013794, -0.07436590641736984, -1.269210696220398, -1.764281842042692e-05, -1.7523612768854946e-05, -0.10584120452404022, -0.0021914057433605194, -0.0030399798415601254, -0.03848038613796234], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.002540101297199726, -5.8412379075889476e-06, -2.7418097943154862e-06, -0.19605199992656708, -0.011815916746854782], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.13069000840187073, -4.8397800128441304e-05, -0.0009080815361812711, -0.0005245024804025888, -8.844937838148326e-05, -1.0967194612021558e-05, -0.0029419257771223783, -0.0007717015105299652, -1.3232143828645349e-05, -0.001453415839932859, -0.3027808368206024], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.004053235054016113, -0.00015984688070602715, -0.00013314791431184858, -0.006443557795137167, -0.03387857973575592, -2.1457441107486375e-05, -0.002489208010956645, -0.06663832813501358, -8.821448318485636e-06, -0.028321821242570877, -0.01014705654233694, -0.008987567387521267, -0.00906081311404705, -0.0021384721621870995, -6.6756979322235566e-06, -3.158996332786046e-05, -0.0023834886960685253, -2.3841830625315197e-06, -5.483612312673358e-06, 0.0, -5.960462772236497e-07, -1.141715168952942, -0.003078129142522812], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.002515130676329136, -0.4154897928237915], "finish_reason": "stop"}], "metrics": {"energy": 283.70546245193486, "energy_per_token": 4.298567612908104, "time": 7.402948, "time_per_token": 0.11216587878787879}}
{"outputs": [{"text": " re.split(r'\\.\\s+', text.lower().strip())", "tokens": [" re", ".", "split", "(", "r", "'\\", ".", "\\", "s", "+'", ",", " text", ".", "lower", "()", ".", "strip", "())", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.889008104801178, -0.024111026898026466, -0.5609467625617981, -0.03168492019176483, -1.7305786609649658, -0.0011243456974625587, -0.010434359312057495, -1.7254036664962769, -0.1430026888847351, -2.3787436485290527, -0.29799988865852356, -0.040289320051670074, -0.0818236842751503, -0.1722947657108307], "finish_reason": "stop"}, {"text": " [sent for sent in sentences if sent]", "tokens": [" [", "sent", " for", " sent", " in", " sentences", " if", " sent", "]", "\n"], "logprobs": [-0.06979204714298248, -2.670001745223999, -0.054259106516838074, -0.00021217002358753234, -0.00010430268594063818, -0.0001774868869688362, -0.0006632988806813955, -0.14524129033088684, -0.677432119846344, -0.316791832447052], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -0.20153085887432098, -0.012459064833819866], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.14564141631126404, -4.184158387943171e-05, -0.0010122895473614335, -0.00048828122089616954, -0.00010108436981681734, -8.22540732769994e-06, -0.002822227543219924, -0.0008529362385161221, -1.168244216387393e-05, -0.001625646254979074, -0.30274325609207153], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.003869309788569808, -0.0001227780303452164, -7.247662142617628e-05, -0.00750353978946805, -0.03687179088592529, -1.6569954823353328e-05, -0.0021136105060577393, -0.06666731834411621, -4.768360213347478e-06, -0.03487420454621315, -0.008563818410038948, -0.009171144105494022, -0.010545010678470135, -0.0022787100169807673, -5.125986263010418e-06, -3.361645576660521e-05, -0.0019177870126441121, -2.622600959512056e-06, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -0.3979990482330322, -0.001485078944824636, -0.0030688594561070204, -0.002629753202199936], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.002861098386347294, -0.3315780460834503], "finish_reason": "stop"}], "metrics": {"energy": 285.8140865974426, "energy_per_token": 3.969640091631147, "time": 7.5744743, "time_per_token": 0.10520103194444445}}
{"outputs": [{"text": " text.split(\".\")", "tokens": [" text", ".", "split", "(", "\"", ".", "\"", ")", "\n"], "logprobs": [-2.0059120655059814, -0.008855121210217476, -0.10136629641056061, -0.7051197290420532, -0.012386656366288662, -0.007835485972464085, -0.02145007811486721, -0.0014746040105819702, -0.12948884069919586], "finish_reason": "stop"}, {"text": " [s for s in sentences if s]", "tokens": [" [", "s", " for", " s", " in", " sentences", " if", " s", "]", "\n"], "logprobs": [-0.06979204714298248, -1.1526906490325928, -0.1057610958814621, -0.00032419670606032014, -2.253030106658116e-05, -0.00017796363681554794, -0.00036399890086613595, -0.05082878842949867, -0.48581045866012573, -0.5090916156768799], "finish_reason": "stop"}, {"text": " CountVectorizer(lowercase=True)", "tokens": [" Count", "Vector", "izer", "(", "low", "erc", "ase", "=", "True", ")", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -1.701576590538025, -0.9825572967529297, -0.00017820201173890382, -4.291525328881107e-06, -0.011422593146562576, -0.36934351921081543, -0.41034600138664246, -0.030992308631539345], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.14564141631126404, -4.184158387943171e-05, -0.0010122895473614335, -0.00048828122089616954, -0.00010108436981681734, -8.22540732769994e-06, -0.002822227543219924, -0.0008529362385161221, -1.168244216387393e-05, -0.001625646254979074, -0.30274325609207153], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.003869309788569808, -0.0001227780303452164, -7.247662142617628e-05, -0.00750353978946805, -0.03687179088592529, -1.6569954823353328e-05, -0.0021136105060577393, -0.06666731834411621, -4.768360213347478e-06, -0.03487420454621315, -0.008563818410038948, -0.009171144105494022, -0.010545010678470135, -0.0022787100169807673, -5.125986263010418e-06, -3.361645576660521e-05, -0.0019177870126441121, -2.622600959512056e-06, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -0.3979990482330322, -0.001485078944824636, -0.0030688594561070204, -0.002629753202199936], "finish_reason": "stop"}, {"text": " df", "tokens": [" df"], "logprobs": [-0.002861098386347294], "finish_reason": "stop"}], "metrics": {"energy": 295.30797866058356, "energy_per_token": 4.407581771053486, "time": 7.5736294, "time_per_token": 0.1130392447761194}}
{"outputs": [{"text": " re.split('\\.\\s', text)", "tokens": [" re", ".", "split", "('", "\\", ".", "\\", "s", "'", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -1.7433843612670898, -0.39575597643852234, -0.06716926395893097, -0.8601463437080383, -0.02490888722240925, -1.8469266891479492, -0.002471965504810214, -0.04615974426269531, -0.1166844367980957, -0.14763185381889343], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence != \"\"]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -0.9148834943771362, -1.8000440832111053e-05, -6.6756979322235566e-06, -0.09545248746871948, -0.0013906818348914385, -0.002150843385607004, -0.031830426305532455], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -0.19179680943489075, -0.011841363273561], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences).toarray()", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", ".", "to", "array", "()", "\n"], "logprobs": [-0.21238373219966888, -4.541770613286644e-05, -0.0007370378007180989, -0.0004153581103309989, -8.05822346592322e-05, -6.556489552167477e-06, -0.0031885281205177307, -0.0007027302053757012, -1.2040065485052764e-05, -0.0011849532602354884, -1.4601428508758545, -0.35134750604629517, -0.00019536493346095085, -0.0001426833332516253, -0.010680889710783958], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.004242349416017532, -0.00014590153296012431, -9.023735765367746e-05, -0.0068058110773563385, -0.038564350455999374, -1.8358061424805783e-05, -0.0021034989040344954, -0.0533604733645916, -5.364403477869928e-06, -0.027437958866357803, -0.007774096913635731, -0.006610667798668146, -0.009827327914536, -0.0025236920919269323, -5.960446742392378e-06, -3.397406908334233e-05, -0.002110398607328534, -2.861018856492592e-06, -5.483612312673358e-06, 0.0, -1.1920922133867862e-06, -0.38333335518836975, -0.0002643712505232543, -0.002526308177039027, -0.0026400971692055464], "finish_reason": "stop"}, {"text": " df<|endoftext|>#!/usr/bin/env python3", "tokens": [" df", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.0032511495519429445, -1.6585443019866943, -5.8412379075889476e-06, -4.172316494077677e-06, -4.6491513785440475e-06, -1.3828182090946939e-05, -0.20427249372005463, -1.2388262748718262, -1.5250465869903564, -0.041074953973293304, -0.05818203091621399, -6.603976362384856e-05, -0.004434157628566027, -0.0008828318095766008, -0.02957671321928501, -0.0036855884827673435, -0.42633160948753357, -0.013983255252242088], "finish_reason": "stop"}], "metrics": {"energy": 362.8630352821351, "energy_per_token": 3.987505882221265, "time": 9.464316, "time_per_token": 0.10400347252747252}}
{"outputs": [{"text": " [sentence for sentence in re.split(r'\\.\\s*', text) if sentence]", "tokens": [" [", "sentence", " for", " sentence", " in", " re", ".", "split", "(", "r", "'\\", ".", "\\", "s", "*", "'", ",", " text", ")", " if", " sentence", "]", "\n"], "logprobs": [-1.8458491563796997, -1.22525155544281, -0.5299950242042542, -0.0021923573222011328, -0.000614216027315706, -0.11837011575698853, -9.798523387871683e-05, -0.0838908925652504, -0.2404595911502838, -0.19768840074539185, -1.1235893964767456, -0.029761988669633865, -0.3678137958049774, -0.02574770338833332, -0.600153923034668, -0.001465200330130756, -0.0004889961564913392, -0.008594075217843056, -0.04937554895877838, -0.0047241742722690105, -0.05941159650683403, -0.3941269814968109, -0.14230012893676758], "finish_reason": "stop"}, {"text": " [sentence.strip() for sentence in sentences if sentence.strip() != \"\"]", "tokens": [" [", "sentence", ".", "strip", "()", " for", " sentence", " in", " sentences", " if", " sentence", ".", "strip", "()", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -2.7460458278656006, -0.11724088340997696, -0.0008175606490112841, -0.0232427679002285, -0.00019405389321036637, -8.21318244561553e-05, -0.00021717573690693825, -0.05006813257932663, -0.0434131994843483, -0.10860591381788254, -0.00027771908207796514, -0.0002165798214264214, -1.4554860591888428, -2.8609820219571702e-05, -3.933898824470816e-06, -0.04298460856080055, -0.0007335832342505455, -0.0017094297800213099, -0.04189414903521538], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.002540101297199726, -5.8412379075889476e-06, -2.7418097943154862e-06, -0.19605199992656708, -0.011815916746854782], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorizer.fit_transform(sentences).todense())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", ".", "t", "od", "ense", "())", "\n"], "logprobs": [-2.1446022987365723, -4.172238186583854e-05, -0.00048780461656861007, -0.006772658322006464, -0.12362173199653625, -2.264974000354414e-06, -0.00013004888023715466, -0.000192504478036426, -3.9457496313843876e-05, -1.1444026313256472e-05, -0.00047541281674057245, -0.0007689617923460901, -5.245195097813848e-06, -0.00255769956856966, -0.002814263105392456, -0.5616500973701477, -2.9205850296420977e-05, -0.0002914242504630238, -1.46244215965271, -0.03608790785074234], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.todense(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "t", "od", "ense", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.004642066545784473, -0.000125281119835563, -0.00010918975021922961, -0.0067981150932610035, -0.02637394517660141, -1.8715683836489916e-05, -0.0022703842259943485, -3.0007405281066895, -1.9192511899746023e-05, -0.0001754606782924384, -0.014830930158495903, -0.009901338256895542, -0.014118903316557407, -0.011628818698227406, -0.002193784574046731, -1.7881377516459906e-06, -5.4596363042946905e-05, -0.0020147517789155245, -5.364403477869928e-06, -5.602820692729438e-06, 0.0, -8.344646857949556e-07, -0.5564662218093872, -0.000289159914245829, -0.00652303034439683, -0.007595587521791458], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0035942494869232178, -0.34851473569869995], "finish_reason": "stop"}], "metrics": {"energy": 420.76135590934734, "energy_per_token": 4.337745937209767, "time": 10.733824, "time_per_token": 0.1106579793814433}}
{"outputs": [{"text": " re.split(r\"\\.\\s*\", text.lower())  # split text into sentences", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", ".", "\\", "s", "*", "\"", ",", " text", ".", "lower", "())", "  ", "#", " split", " text", " into", " sentences", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.9033246636390686, -0.2283378690481186, -0.06311733275651932, -0.32708948850631714, -0.015494444407522678, -0.5644857287406921, -0.0011538759572431445, -0.0008635367848910391, -0.006055224221199751, -2.438995838165283, -0.07552103698253632, -0.054051660001277924, -1.993111252784729, -0.0009141556802205741, -0.8694849610328674, -0.9192372560501099, -0.28884372115135193, -0.015641389414668083, -0.24041646718978882], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -0.6132019758224487, -0.21711958944797516], "finish_reason": "stop"}, {"text": " CountVectorizer(lowercase=True, token_pattern=r\"\\S\\w+\")", "tokens": [" Count", "Vector", "izer", "(", "low", "erc", "ase", "=", "True", ",", " token", "_", "pattern", "=", "r", "\"", "\\", "S", "\\", "w", "+", "\"", ")", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -1.7464957237243652, -1.149187684059143, -0.00029523781267926097, -6.079655122448457e-06, -0.012056454084813595, -0.333160400390625, -1.1544177532196045, -1.8812263011932373, -0.20312564074993134, -0.019385874271392822, -0.03384723514318466, -0.052110765129327774, -0.02420353703200817, -0.5394721031188965, -1.90028977394104, -2.587313175201416, -0.06138188764452934, -1.5568965673446655, -0.16977210342884064, -0.19968226552009583, -0.044426750391721725], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.21238373219966888, -4.541770613286644e-05, -0.0007370378007180989, -0.0004153581103309989, -8.05822346592322e-05, -6.556489552167477e-06, -0.0031885281205177307, -0.0007027302053757012, -1.2040065485052764e-05, -0.0011849532602354884, -0.27194470167160034], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.004242349416017532, -0.00014590153296012431, -9.023735765367746e-05, -0.0068058110773563385, -0.038564350455999374, -1.8358061424805783e-05, -0.0021034989040344954, -0.0533604733645916, -5.364403477869928e-06, -0.027437958866357803, -0.007774096913635731, -0.006610667798668146, -0.009827327914536, -0.0025236920919269323, -5.960446742392378e-06, -3.397406908334233e-05, -0.002110398607328534, -2.861018856492592e-06, -5.483612312673358e-06, 0.0, -1.1920922133867862e-06, -0.38333335518836975, -0.0002643712505232543, -0.002526308177039027, -0.0026400971692055464], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0032511495519429445, -0.31659477949142456], "finish_reason": "stop"}], "metrics": {"energy": 383.73027700805653, "energy_per_token": 3.997190385500589, "time": 9.694735, "time_per_token": 0.10098682291666666}}
{"outputs": [{"text": " [sent.strip() for sent in text.strip().split('.') if sent.strip()]", "tokens": [" [", "sent", ".", "strip", "()", " for", " sent", " in", " text", ".", "strip", "()", ".", "split", "('", ".", "')", " if", " sent", ".", "strip", "()", "]", "\n"], "logprobs": [-1.8458491563796997, -2.2426047325134277, -0.5602753162384033, -0.07926082611083984, -0.01745552383363247, -0.06093120947480202, -0.0006436422117985785, -0.0008859285153448582, -2.2137324810028076, -0.0004948345012962818, -2.230285167694092, -0.2060522884130478, -0.0004663571889977902, -0.08636035025119781, -0.53059321641922, -0.007731513120234013, -0.0010502781951799989, -0.3468121886253357, -0.15066199004650116, -0.10947026312351227, -0.0018694796599447727, -0.0005492847412824631, -0.2363227903842926, -0.0947575643658638], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence.strip() != \"\"]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", ".", "strip", "()", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -2.9226808547973633, -0.005083136726170778, -0.0018574618734419346, -0.7321439385414124, -8.34461570775602e-06, -7.986990567587782e-06, -0.05334115028381348, -0.00033623288618400693, -0.0016175531782209873, -0.04309320077300072], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -0.19179680943489075, -0.011841363273561], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.21238373219966888, -4.541770613286644e-05, -0.0007370378007180989, -0.0004153581103309989, -8.05822346592322e-05, -6.556489552167477e-06, -0.0031885281205177307, -0.0007027302053757012, -1.2040065485052764e-05, -0.0011849532602354884, -0.27194470167160034], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.004242349416017532, -0.00014590153296012431, -9.023735765367746e-05, -0.0068058110773563385, -0.038564350455999374, -1.8358061424805783e-05, -0.0021034989040344954, -0.0533604733645916, -5.364403477869928e-06, -0.027437958866357803, -0.007774096913635731, -0.006610667798668146, -0.009827327914536, -0.0025236920919269323, -5.960446742392378e-06, -3.397406908334233e-05, -0.002110398607328534, -2.861018856492592e-06, -5.483612312673358e-06, 0.0, -1.1920922133867862e-06, -0.38333335518836975, -0.0002643712505232543, -0.002526308177039027, -0.0026400971692055464], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0032511495519429445, -0.31659477949142456], "finish_reason": "stop"}], "metrics": {"energy": 324.34720900154116, "energy_per_token": 3.8158495176651903, "time": 8.856138, "time_per_token": 0.10418985882352941}}
{"outputs": [{"text": " re.split('(?<=[.!?])\\s+', text)", "tokens": [" re", ".", "split", "('", "(", "?", "<", "=[", ".", "!", "?", "])\\", "s", "+'", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -1.7433843612670898, -1.9717867374420166, -0.045602839440107346, -0.4188379943370819, -0.5636555552482605, -0.3433261215686798, -0.16986031830310822, -0.0014554394874721766, -0.10106389224529266, -0.0012877037515863776, -0.1252761036157608, -0.002643544925376773, -0.014150755479931831, -0.07415318489074707, -0.19247852265834808], "finish_reason": "stop"}, {"text": " [sentence for sentence in sentences if sentence != \"\"]", "tokens": [" [", "sentence", " for", " sentence", " in", " sentences", " if", " sentence", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -0.5333173871040344, -0.06736920773983002, -0.0003013156820088625, -9.214453893946484e-05, -0.0002037079248111695, -0.0015632801223546267, -0.04965588450431824, -0.9148834943771362, -1.8000440832111053e-05, -6.6756979322235566e-06, -0.09545248746871948, -0.0013906818348914385, -0.002150843385607004, -0.031830426305532455], "finish_reason": "stop"}, {"text": " CountVectorizer(sentences)", "tokens": [" Count", "Vector", "izer", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.001730612595565617, -5.245195097813848e-06, -3.2186455882765586e-06, -1.7464957237243652, -3.3249707221984863, -0.0001525762490928173, -0.06552569568157196, -0.013241567648947239], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.21238373219966888, -4.541770613286644e-05, -0.0007370378007180989, -0.0004153581103309989, -8.05822346592322e-05, -6.556489552167477e-06, -0.0031885281205177307, -0.0007027302053757012, -1.2040065485052764e-05, -0.0011849532602354884, -0.27194470167160034], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.004242349416017532, -0.00014590153296012431, -9.023735765367746e-05, -0.0068058110773563385, -0.038564350455999374, -1.8358061424805783e-05, -0.0021034989040344954, -0.0533604733645916, -5.364403477869928e-06, -0.027437958866357803, -0.007774096913635731, -0.006610667798668146, -0.009827327914536, -0.0025236920919269323, -5.960446742392378e-06, -3.397406908334233e-05, -0.002110398607328534, -2.861018856492592e-06, -5.483612312673358e-06, 0.0, -1.1920922133867862e-06, -1.175054669380188, -0.0028439811430871487], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0032511495519429445, -0.31659477949142456], "finish_reason": "stop"}], "metrics": {"energy": 313.5714637947081, "energy_per_token": 4.072356672658547, "time": 8.214166, "time_per_token": 0.10667748051948053}}
{"outputs": [{"text": " re.split(r'\\.\\s*', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", ".", "\\", "s", "*", "'", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.889008104801178, -0.024111026898026466, -0.5609467625617981, -0.03168492019176483, -0.6258442997932434, -0.0014998388942331076, -0.0015628041001036763, -0.00695226201787591, -0.12125367671251297, -0.21052072942256927], "finish_reason": "stop"}, {"text": " [s for s in sentences if s]", "tokens": [" [", "s", " for", " s", " in", " sentences", " if", " s", "]", "\n"], "logprobs": [-0.06979204714298248, -1.1526906490325928, -0.1057610958814621, -0.00032419670606032014, -2.253030106658116e-05, -0.00017796363681554794, -0.00036399890086613595, -0.05082878842949867, -0.48581045866012573, -0.5090916156768799], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -0.20153085887432098, -0.012459064833819866], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorizer.fit_transform(sentences).todense(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", ".", "t", "od", "ense", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-2.0414810180664062, -5.2569914259947836e-05, -0.0006810491322539747, -0.009328587912023067, -0.09679899364709854, -2.7418097943154862e-06, -0.00014840454969089478, -0.00022968991834204644, -4.088794958079234e-05, -1.1086402082582936e-05, -0.0005067494930699468, -0.0006653240998275578, -4.887569048150908e-06, -0.0027674254961311817, -0.0023930028546601534, -0.6197313666343689, -2.682172998902388e-05, -0.0002740246127359569, -0.25313088297843933, -0.017985939979553223, -0.1111188530921936, -0.02249533124268055, -0.002460311632603407, -7.152531907195225e-06, -9.703165414975956e-05, -0.018415313214063644, -3.6954811548639555e-06, -1.0013530300057027e-05, 0.0, -8.344646857949556e-07, -0.8068435788154602, -0.0001820160250645131, -0.011435085907578468, -0.02359328232705593], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.0032943999394774437, -0.00014149141497910023, -9.738924563862383e-05, -0.007475734688341618, -0.025273116305470467, -1.5258672647178173e-05, -0.001899820752441883, -0.051349274814128876, -7.033323527139146e-06, -0.022534027695655823, -0.008279051631689072, -0.009249101392924786, -0.009277448058128357, -0.0021227700635790825, -5.960446742392378e-06, -3.373566141817719e-05, -0.0023819427005946636, -3.2186455882765586e-06, -5.483612312673358e-06, 0.0, -7.152555099310121e-07, -0.4103248119354248, -0.0008266131044365466, -0.0029986200388520956, -0.0027308098506182432], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.0025050232652574778, -0.3849426209926605], "finish_reason": "stop"}], "metrics": {"energy": 375.43595544719693, "energy_per_token": 4.125669840079087, "time": 9.681957, "time_per_token": 0.10639513186813188}}
{"outputs": [{"text": " re.split(r\"\\.\\s*\", text)", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", ".", "\\", "s", "*", "\"", ",", " text", ")", "\n"], "logprobs": [-0.46788325905799866, -0.00010251473577227443, -0.12318771332502365, -0.2276868224143982, -0.152749702334404, -0.9033246636390686, -0.2283378690481186, -0.06311733275651932, -0.32708948850631714, -0.015494444407522678, -0.5644857287406921, -0.0011538759572431445, -0.0008635367848910391, -0.006055224221199751, -0.12595412135124207, -0.19135960936546326], "finish_reason": "stop"}, {"text": " [s for s in sentences if s]", "tokens": [" [", "s", " for", " s", " in", " sentences", " if", " s", "]", "\n"], "logprobs": [-0.06979204714298248, -1.1526906490325928, -0.1057610958814621, -0.00032419670606032014, -2.253030106658116e-05, -0.00017796363681554794, -0.00036399890086613595, -0.05082878842949867, -0.48581045866012573, -0.5090916156768799], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -0.20153085887432098, -0.012459064833819866], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.14564141631126404, -4.184158387943171e-05, -0.0010122895473614335, -0.00048828122089616954, -0.00010108436981681734, -8.22540732769994e-06, -0.002822227543219924, -0.0008529362385161221, -1.168244216387393e-05, -0.001625646254979074, -0.30274325609207153], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.003869309788569808, -0.0001227780303452164, -7.247662142617628e-05, -0.00750353978946805, -0.03687179088592529, -1.6569954823353328e-05, -0.0021136105060577393, -0.06666731834411621, -4.768360213347478e-06, -0.03487420454621315, -0.008563818410038948, -0.009171144105494022, -0.010545010678470135, -0.0022787100169807673, -5.125986263010418e-06, -3.361645576660521e-05, -0.0019177870126441121, -2.622600959512056e-06, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -0.3979990482330322, -0.001485078944824636, -0.0030688594561070204, -0.002629753202199936], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.002861098386347294, -0.3315780460834503], "finish_reason": "stop"}], "metrics": {"energy": 278.61604811286924, "energy_per_token": 4.0379137407662204, "time": 7.5833783, "time_per_token": 0.10990403333333333}}
{"outputs": [{"text": " [s for s in text.split(\".\") if len(s.strip()) > 0]", "tokens": [" [", "s", " for", " s", " in", " text", ".", "split", "(", "\"", ".", "\"", ")", " if", " len", "(", "s", ".", "strip", "())", " >", " ", "0", "]", "\n"], "logprobs": [-1.8458491563796997, -0.9413007497787476, -0.9931371212005615, -0.0014811508590355515, -0.00015436411194968969, -2.2936370372772217, -0.001158162602223456, -0.10593031346797943, -0.8288173675537109, -0.014230088330805302, -0.002766236662864685, -0.010441319085657597, -0.02641446515917778, -0.0016640876419842243, -2.852447986602783, -0.00037055302527733147, -0.009722971357405186, -0.9810369610786438, -0.08721562474966049, -0.060113657265901566, -0.08998778462409973, -0.00043478095903992653, -0.0037870134692639112, -0.0028532531578093767, -0.07121050357818604], "finish_reason": "stop"}, {"text": " [s for s in sentences if s != \"\"]", "tokens": [" [", "s", " for", " s", " in", " sentences", " if", " s", " ", "!", "=", " \"", "\"", "]", "\n"], "logprobs": [-0.06979204714298248, -1.1526906490325928, -0.1057610958814621, -0.00032419670606032014, -2.253030106658116e-05, -0.00017796363681554794, -0.00036399890086613595, -0.05082878842949867, -1.1583149433135986, -2.13382354559144e-05, -6.079655122448457e-06, -0.07245753705501556, -0.0018189090769737959, -0.0027821664698421955, -0.07827890664339066], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0019421778852120042, -6.198863957251888e-06, -2.264974000354414e-06, -0.20153085887432098, -0.012459064833819866], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(sentences)", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "sent", "ences", ")", "\n"], "logprobs": [-0.14564141631126404, -4.184158387943171e-05, -0.0010122895473614335, -0.00048828122089616954, -0.00010108436981681734, -8.22540732769994e-06, -0.002822227543219924, -0.0008529362385161221, -1.168244216387393e-05, -0.001625646254979074, -0.30274325609207153], "finish_reason": "stop"}, {"text": " pd.DataFrame(dtm.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "dt", "m", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.003869309788569808, -0.0001227780303452164, -7.247662142617628e-05, -0.00750353978946805, -0.03687179088592529, -1.6569954823353328e-05, -0.0021136105060577393, -0.06666731834411621, -4.768360213347478e-06, -0.03487420454621315, -0.008563818410038948, -0.009171144105494022, -0.010545010678470135, -0.0022787100169807673, -5.125986263010418e-06, -3.361645576660521e-05, -0.0019177870126441121, -2.622600959512056e-06, -5.722029527532868e-06, 0.0, -9.536738616588991e-07, -0.3979990482330322, -0.001485078944824636, -0.0030688594561070204, -0.002629753202199936], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.002861098386347294, -0.3315780460834503], "finish_reason": "stop"}], "metrics": {"energy": 323.5989998836518, "energy_per_token": 3.8987831311283347, "time": 8.630626, "time_per_token": 0.10398344578313252}}
