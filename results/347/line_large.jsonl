{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -0.32374224066734314], "finish_reason": "stop"}, {"text": " np.concatenate(matches.tolist())", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "tol", "ist", "())", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -2.5662312507629395, 0.0, -0.005149909295141697, -0.021609334275126457], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts"], "logprobs": [-0.01439108420163393], "finish_reason": "stop"}], "metrics": {"energy": 672.4788647956844, "energy_per_token": 15.283610563538282, "time": 25.125395, "time_per_token": 0.5710317045454546}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -0.32374224066734314], "finish_reason": "stop"}, {"text": " np.concatenate(matches.values)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "values", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -0.5549665093421936, -0.09338094294071198, -0.0946756973862648], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 613.9636677246095, "energy_per_token": 13.953719721013853, "time": 22.512241, "time_per_token": 0.5116418409090909}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -0.32374224066734314], "finish_reason": "stop"}, {"text": " np.concatenate(matches.values)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "values", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -0.5549665093421936, -0.09338094294071198, -0.0946756973862648], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 473.57837681579593, "energy_per_token": 10.763144927631727, "time": 16.485828, "time_per_token": 0.37467790909090914}}
{"outputs": [{"text": " df[column].apply(lambda x: re.findall(PATTERN, x))", "tokens": [" df", "[", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " x", "))", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -1.494218111038208, -0.0007139279623515904, -0.07839850336313248, -0.048240240663290024, -0.0022947664838284254, -0.05500371754169464, -5.364274329622276e-05, -0.005832320544868708, -0.0055153584107756615, -0.0005191409145481884, -0.01983802020549774, -1.9073468138230965e-06, -3.814689989667386e-06, -0.0005194983095861971, -0.15201394259929657, -0.027276845648884773, -0.20076186954975128], "finish_reason": "stop"}, {"text": " np.concatenate(matches)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -1.346470832824707, -0.07554744929075241], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts<|endoftext|>import os", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "import", " os", "\n"], "logprobs": [-0.01439108420163393, -1.4661390781402588, -1.1920858014491387e-05, -1.311301275563892e-06, -3.3378546504536644e-06, -1.2993727978027891e-05, -0.14929218590259552, -0.9555882215499878, -3.305752992630005, -0.055669188499450684], "finish_reason": "stop"}], "metrics": {"energy": 322.5128945579528, "energy_per_token": 5.658120957157067, "time": 10.534685, "time_per_token": 0.1848190350877193}}
{"outputs": [{"text": " df[column].apply(lambda x: re.findall(PATTERN, x)).sum()", "tokens": [" df", "[", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " x", "))", ".", "sum", "()", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -1.494218111038208, -0.0007139279623515904, -0.07839850336313248, -0.048240240663290024, -0.0022947664838284254, -0.05500371754169464, -5.364274329622276e-05, -0.005832320544868708, -0.0055153584107756615, -0.0005191409145481884, -0.01983802020549774, -1.9073468138230965e-06, -3.814689989667386e-06, -0.0005194983095861971, -0.15201394259929657, -0.027276845648884773, -2.144369125366211, -2.6461586952209473, -0.05068103224039078, -0.05754794180393219], "finish_reason": "stop"}, {"text": " np.concatenate(np.array(matches))", "tokens": [" np", ".", "concat", "en", "ate", "(", "np", ".", "array", "(", "matches", "))", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -2.782644748687744, -2.9802276912960224e-06, -0.004460386000573635, -0.03674597293138504, -0.01062710676342249, -1.5949691534042358, -0.08534608781337738], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009962360374629498, -7.152531907195225e-06, -0.06424147635698318, -0.0011830481234937906, -0.002589208772405982, -4.2199197196168825e-05, -3.576278118089249e-07, -4.0531076592742465e-06, -2.3841855067985307e-07, -0.00633458374068141, -0.004401756916195154, -0.004420509096235037, -2.3841855067985307e-07, -1.5020257706055418e-05, -0.03029528632760048, -0.00904002133756876], "finish_reason": "stop"}, {"text": " counts<|endoftext|>def is_pandigital(num):", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "def", " is", "_", "pand", "igital", "(", "num", "):", "\n"], "logprobs": [-0.012950480915606022, -1.449836254119873, -1.0967194612021558e-05, -1.311301275563892e-06, -3.6954811548639555e-06, -1.4424220353248529e-05, -0.12150654941797256, -2.494072914123535, -3.5652103424072266, -0.09735266119241714, -5.185840129852295, -0.19337671995162964, -0.0976959839463234, -1.6855051517486572, -0.4954291880130768, -0.004288880620151758], "finish_reason": "stop"}], "metrics": {"energy": 712.4443112564087, "energy_per_token": 10.177775875091553, "time": 24.60458, "time_per_token": 0.351494}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -0.32374224066734314], "finish_reason": "stop"}, {"text": " np.concatenate(matches.values)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "values", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -0.5549665093421936, -0.09338094294071198, -0.0946756973862648], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts"], "logprobs": [-0.01439108420163393], "finish_reason": "stop"}], "metrics": {"energy": 399.455967979431, "energy_per_token": 9.289673673940257, "time": 13.642076, "time_per_token": 0.3172575813953488}}
{"outputs": [{"text": " re.findall(PATTERN, \" \".join(df[column].tolist()))", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " \"", " \"", ".", "join", "(", "df", "[", "column", "]", ".", "tol", "ist", "()))", "\n"], "logprobs": [-2.9349782466888428, -0.00016819016309455037, -0.007473960053175688, -0.0258207768201828, -0.0007602662080898881, -0.03137535601854324, -1.7881377516459906e-06, -9.65590606938349e-06, -0.00039081089198589325, -1.8621766567230225, -0.3228776454925537, -0.0011873346520587802, -0.00022218143567442894, -0.02787245251238346, -0.06373157352209091, -0.014529144391417503, -0.01874786801636219, -0.9872263669967651, -0.000920825288631022, -1.1323819160461426, 0.0, -0.014484027400612831, -0.04482531547546387], "finish_reason": "stop"}, {"text": " np.concatenate(matches.values)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "values", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -0.5549665093421936, -0.09338094294071198, -0.0946756973862648], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts.iloc[0:5]", "tokens": [" counts", ".", "il", "oc", "[", "0", ":", "5", "]", "\n"], "logprobs": [-0.01439108420163393, -2.6677725315093994, -2.9723267555236816, -1.3232143828645349e-05, -0.1540953665971756, -0.05747849866747856, -3.0101845264434814, -1.66887629032135, -0.6681309342384338, -0.2674374580383301], "finish_reason": "stop"}], "metrics": {"energy": 560.0445345306397, "energy_per_token": 9.334075575510662, "time": 18.731228, "time_per_token": 0.31218713333333337}}
{"outputs": [{"text": " df[column].apply(lambda x: re.findall(PATTERN, x))", "tokens": [" df", "[", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " x", "))", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -1.494218111038208, -0.0007139279623515904, -0.07839850336313248, -0.048240240663290024, -0.0022947664838284254, -0.05500371754169464, -5.364274329622276e-05, -0.005832320544868708, -0.0055153584107756615, -0.0005191409145481884, -0.01983802020549774, -1.9073468138230965e-06, -3.814689989667386e-06, -0.0005194983095861971, -0.15201394259929657, -0.027276845648884773, -0.20076186954975128], "finish_reason": "stop"}, {"text": " np.concatenate(matches)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -1.346470832824707, -0.07554744929075241], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 333.36321426773077, "energy_per_token": 6.803330903423077, "time": 11.2022, "time_per_token": 0.22861632653061223}}
{"outputs": [{"text": " df[column].str.extractall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "extract", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -1.7535550594329834, -0.042111560702323914, -0.0009654866298660636, -0.05200869217514992, -9.536738616588991e-07, -2.145764938177308e-06, -0.02635246515274048, -0.13805359601974487], "finish_reason": "stop"}, {"text": " np.concatenate(matches.to_numpy())", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "to", "_", "numpy", "())", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -1.0945477485656738, -4.5060096454108134e-05, -0.003174030687659979, -0.03995778411626816, -0.08725691586732864], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts<|endoftext|>from . import pandas", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "from", " ", ".", " import", " pandas", "\n"], "logprobs": [-0.01439108420163393, -1.4661390781402588, -1.1920858014491387e-05, -1.311301275563892e-06, -3.3378546504536644e-06, -1.2993727978027891e-05, -0.14929218590259552, -1.8205546140670776, -2.900517463684082, -0.013466237112879753, -2.5977187156677246, -2.5676839351654053, -2.175809383392334], "finish_reason": "stop"}], "metrics": {"energy": 404.5564554481505, "energy_per_token": 7.0974816745289555, "time": 13.862064, "time_per_token": 0.2431941052631579}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -0.32374224066734314], "finish_reason": "stop"}, {"text": " np.hstack(matches)", "tokens": [" np", ".", "h", "stack", "(", "matches", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -1.6676511764526367, -6.318072337307967e-06, -0.016265662387013435, -0.033771056681871414, -0.549225389957428, -0.030332526192069054], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.010881726630032063, -6.318072337307967e-06, -0.08217314630746841, -0.0011213688412681222, -0.002796788467094302, -4.017272294731811e-05, -3.576278118089249e-07, -3.576272320060525e-06, -3.576278118089249e-07, -0.005265653133392334, -0.003811833681538701, -0.0036921207793056965, -2.3841855067985307e-07, -2.1219027985353023e-05, -0.027624208480119705, -0.00969003327190876], "finish_reason": "stop"}, {"text": " counts<|endoftext|>\"\"\"", "tokens": [" counts", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.012869163416326046, -1.5788757801055908, -1.4305012882687151e-05, -1.1920922133867862e-06, -3.6954811548639555e-06, -1.6331539882230572e-05, -1.976453185081482, -0.00278371199965477, -0.007622087839990854, -0.00038675934774801135, -0.3399425745010376], "finish_reason": "stop"}], "metrics": {"energy": 321.4087279052734, "energy_per_token": 6.428174558105468, "time": 10.429069, "time_per_token": 0.20858138}}
{"outputs": [{"text": " df[column].apply(lambda x: re.findall(PATTERN, x))", "tokens": [" df", "[", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " x", "))", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -1.494218111038208, -0.0007139279623515904, -0.07839850336313248, -0.048240240663290024, -0.0022947664838284254, -0.05500371754169464, -5.364274329622276e-05, -0.005832320544868708, -0.0055153584107756615, -0.0005191409145481884, -0.01983802020549774, -1.9073468138230965e-06, -3.814689989667386e-06, -0.0005194983095861971, -0.15201394259929657, -0.027276845648884773, -0.20076186954975128], "finish_reason": "stop"}, {"text": " np.concatenate(matches.to_numpy())", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "to", "_", "numpy", "())", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -1.0945477485656738, -4.5060096454108134e-05, -0.003174030687659979, -0.03995778411626816, -0.08725691586732864], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 348.60777967834474, "energy_per_token": 6.577505276949901, "time": 10.793048, "time_per_token": 0.20364241509433964}}
{"outputs": [{"text": " df[column].astype(str).str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "ast", "ype", "(", "str", ")", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -2.2332470417022705, -7.152555099310121e-07, -0.010388467460870743, -0.11461649090051651, -0.0031122365035116673, -0.00984892901033163, -0.20866459608078003, -0.00019810620869975537, -0.21345098316669464, -0.00023576818057335913, -0.0005555993411689997, -0.02632099948823452, -9.536738616588991e-07, -3.099436753473128e-06, -0.01871534250676632, -0.40697839856147766], "finish_reason": "stop"}, {"text": " np.hstack(matches)", "tokens": [" np", ".", "h", "stack", "(", "matches", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -1.6676511764526367, -6.318072337307967e-06, -0.016265662387013435, -0.033771056681871414, -0.549225389957428, -0.030332526192069054], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.010881726630032063, -6.318072337307967e-06, -0.08217314630746841, -0.0011213688412681222, -0.002796788467094302, -4.017272294731811e-05, -3.576278118089249e-07, -3.576272320060525e-06, -3.576278118089249e-07, -0.005265653133392334, -0.003811833681538701, -0.0036921207793056965, -2.3841855067985307e-07, -2.1219027985353023e-05, -0.027624208480119705, -0.00969003327190876], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts"], "logprobs": [-0.012869163416326046], "finish_reason": "stop"}], "metrics": {"energy": 382.2716904602051, "energy_per_token": 8.310254140439241, "time": 12.456155, "time_per_token": 0.2707859782608696}}
{"outputs": [{"text": " df[column].str.extractall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "extract", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -1.7535550594329834, -0.042111560702323914, -0.0009654866298660636, -0.05200869217514992, -9.536738616588991e-07, -2.145764938177308e-06, -0.02635246515274048, -0.13805359601974487], "finish_reason": "stop"}, {"text": " np.concatenate(matches.tolist())", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "tol", "ist", "())", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -2.5662312507629395, 0.0, -0.005149909295141697, -0.021609334275126457], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts<|endoftext|>import pandas as pd", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "import", " pandas", " as", " pd", "\n"], "logprobs": [-0.01439108420163393, -1.4661390781402588, -1.1920858014491387e-05, -1.311301275563892e-06, -3.3378546504536644e-06, -1.2993727978027891e-05, -0.14929218590259552, -0.9555882215499878, -0.9831193089485168, -0.015018251724541187, -0.0044939713552594185, -0.012492382898926735], "finish_reason": "stop"}], "metrics": {"energy": 443.5197127227783, "energy_per_token": 8.063994776777788, "time": 14.48562, "time_per_token": 0.2633749090909091}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -0.32374224066734314], "finish_reason": "stop"}, {"text": " np.concatenate(matches)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -1.346470832824707, -0.07554744929075241], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 315.43231521987906, "energy_per_token": 7.51029321952093, "time": 10.997608, "time_per_token": 0.26184780952380954}}
{"outputs": [{"text": " df[column].astype(str).apply(lambda x: re.findall(PATTERN, x))", "tokens": [" df", "[", "column", "]", ".", "ast", "ype", "(", "str", ")", ".", "apply", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " x", "))", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -2.2332470417022705, -7.152555099310121e-07, -0.010388467460870743, -0.11461649090051651, -0.0031122365035116673, -0.00984892901033163, -1.7786586284637451, -0.0004372832481749356, -0.06615296751260757, -0.027037041261792183, -0.0028798794373869896, -0.03175201639533043, -3.9457496313843876e-05, -0.0036194308195263147, -0.002222807612270117, -0.00043990471749566495, -0.01924579218029976, -1.7881377516459906e-06, -2.622600959512056e-06, -0.0005891970940865576, -0.04901307076215744, -0.024442974478006363, -0.2227449268102646], "finish_reason": "stop"}, {"text": " np.concatenate(matches.values)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "values", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -0.5549665093421936, -0.09338094294071198, -0.0946756973862648], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 438.2311756057738, "energy_per_token": 7.688266238697786, "time": 15.059484, "time_per_token": 0.26420147368421054}}
{"outputs": [{"text": " df[column].apply(lambda x: re.findall(PATTERN, x))", "tokens": [" df", "[", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " x", "))", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -1.494218111038208, -0.0007139279623515904, -0.07839850336313248, -0.048240240663290024, -0.0022947664838284254, -0.05500371754169464, -5.364274329622276e-05, -0.005832320544868708, -0.0055153584107756615, -0.0005191409145481884, -0.01983802020549774, -1.9073468138230965e-06, -3.814689989667386e-06, -0.0005194983095861971, -0.15201394259929657, -0.027276845648884773, -0.20076186954975128], "finish_reason": "stop"}, {"text": " np.concatenate(matches).flat", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ")", ".", "flat", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -1.346470832824707, -2.814946413040161, -1.4184260368347168, -0.017552047967910767], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 436.9967488212585, "energy_per_token": 8.568563702377618, "time": 14.840096, "time_per_token": 0.29098227450980396}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -0.32374224066734314], "finish_reason": "stop"}, {"text": " np.concatenate(matches.to_numpy())", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "to", "_", "numpy", "())", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -1.0945477485656738, -4.5060096454108134e-05, -0.003174030687659979, -0.03995778411626816, -0.08725691586732864], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts.head(1)<|endoftext|># Copyright (c) Microsoft Corporation.", "tokens": [" counts", ".", "head", "(", "1", ")<", "|", "end", "of", "text", "|>", "#", " Copyright", " (", "c", ")", " Microsoft", " Corporation", ".", "\n"], "logprobs": [-0.01439108420163393, -2.6677725315093994, -1.3538308143615723, -0.2963491976261139, -0.7227635979652405, -1.8539128303527832, -5.125986263010418e-06, -5.960462772236497e-07, -1.1444026313256472e-05, -3.015949550899677e-05, -0.1555592119693756, -1.0721513032913208, -2.871029853820801, -0.9276363253593445, -0.5176530480384827, -0.00013004888023715466, -1.8539376258850098, -0.03266945853829384, -0.03639107197523117, -0.28699934482574463], "finish_reason": "stop"}], "metrics": {"energy": 571.9962699432373, "energy_per_token": 8.937441717863083, "time": 19.74228, "time_per_token": 0.308473125}}
{"outputs": [{"text": " df[column].str.findall(PATTERN).explode()", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", ".", "expl", "ode", "()", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -1.5777324438095093, -0.132893905043602, -3.4570634852570947e-06, -0.02136886678636074, -0.25400787591934204], "finish_reason": "stop"}, {"text": " np.concatenate(matches.values)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "values", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -0.5549665093421936, -0.09338094294071198, -0.0946756973862648], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts.index[0]", "tokens": [" counts", ".", "index", "[", "0", "]", "\n"], "logprobs": [-0.01439108420163393, -2.6677725315093994, -0.7802186012268066, -0.0707726702094078, -0.008450465276837349, -0.33804020285606384, -0.2223435789346695], "finish_reason": "stop"}], "metrics": {"energy": 548.1203966026305, "energy_per_token": 10.34189427552133, "time": 18.36118, "time_per_token": 0.34643735849056606}}
{"outputs": [{"text": " df[column].str.findall(PATTERN).explode()", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", ".", "expl", "ode", "()", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -1.5777324438095093, -0.132893905043602, -3.4570634852570947e-06, -0.02136886678636074, -0.25400787591934204], "finish_reason": "stop"}, {"text": " np.concatenate(matches.values)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "values", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -0.5549665093421936, -0.09338094294071198, -0.0946756973862648], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 358.36224800491334, "energy_per_token": 7.465880166769028, "time": 12.426051, "time_per_token": 0.2588760625}}
{"outputs": [{"text": " df[column].str.extractall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "extract", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -1.7535550594329834, -0.042111560702323914, -0.0009654866298660636, -0.05200869217514992, -9.536738616588991e-07, -2.145764938177308e-06, -0.02635246515274048, -0.13805359601974487], "finish_reason": "stop"}, {"text": " np.hstack(matches)", "tokens": [" np", ".", "h", "stack", "(", "matches", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -1.6676511764526367, -6.318072337307967e-06, -0.016265662387013435, -0.033771056681871414, -0.549225389957428, -0.030332526192069054], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.010881726630032063, -6.318072337307967e-06, -0.08217314630746841, -0.0011213688412681222, -0.002796788467094302, -4.017272294731811e-05, -3.576278118089249e-07, -3.576272320060525e-06, -3.576278118089249e-07, -0.005265653133392334, -0.003811833681538701, -0.0036921207793056965, -2.3841855067985307e-07, -2.1219027985353023e-05, -0.027624208480119705, -0.00969003327190876], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.012869163416326046, -0.4300643801689148], "finish_reason": "stop"}], "metrics": {"energy": 349.76785128784195, "energy_per_token": 8.530923202142487, "time": 12.41718, "time_per_token": 0.30285804878048783}}
{"outputs": [{"text": " re.findall(PATTERN, \" \".join(df[column].values))", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " \"", " \"", ".", "join", "(", "df", "[", "column", "]", ".", "values", "))", "\n"], "logprobs": [-2.9349782466888428, -0.00016819016309455037, -0.007473960053175688, -0.0258207768201828, -0.0007602662080898881, -0.03137535601854324, -1.7881377516459906e-06, -9.65590606938349e-06, -0.00039081089198589325, -1.8621766567230225, -0.3228776454925537, -0.0011873346520587802, -0.00022218143567442894, -0.02787245251238346, -0.06373157352209091, -0.014529144391417503, -0.01874786801636219, -0.9872263669967651, -0.000920825288631022, -1.4136223793029785, -0.3906092047691345, -0.04695920646190643], "finish_reason": "stop"}, {"text": " np.concatenate(matches.tolist())", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "tol", "ist", "())", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -2.5662312507629395, 0.0, -0.005149909295141697, -0.021609334275126457], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts"], "logprobs": [-0.01439108420163393], "finish_reason": "stop"}], "metrics": {"energy": 467.96696860504136, "energy_per_token": 9.17582291382434, "time": 15.285326, "time_per_token": 0.2997122745098039}}
{"outputs": [{"text": " df[column].str.findall(PATTERN).explode().str.strip()  # Remove leading/trailing whitespaces", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", ".", "expl", "ode", "()", ".", "str", ".", "strip", "()", "  ", "#", " Remove", " leading", "/", "tra", "iling", " whites", "paces", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -1.5777324438095093, -0.132893905043602, -3.4570634852570947e-06, -0.02136886678636074, -1.780561923980713, -1.085920810699463, -0.38174402713775635, -0.1737683117389679, -0.03140076994895935, -3.0481481552124023, -0.0005644158809445798, -3.4484026432037354, -0.5804532766342163, -0.859161376953125, -0.012896937318146229, -0.0011712603736668825, -0.20200815796852112, -0.9711273312568665, -0.40434780716896057], "finish_reason": "stop"}, {"text": " np.concatenate(matches)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -1.346470832824707, -0.07554744929075241], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 433.70985401916516, "energy_per_token": 7.2284975669860865, "time": 14.108891, "time_per_token": 0.23514818333333334}}
{"outputs": [{"text": " df[column].astype(str).str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "ast", "ype", "(", "str", ")", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -2.2332470417022705, -7.152555099310121e-07, -0.010388467460870743, -0.11461649090051651, -0.0031122365035116673, -0.00984892901033163, -0.20866459608078003, -0.00019810620869975537, -0.21345098316669464, -0.00023576818057335913, -0.0005555993411689997, -0.02632099948823452, -9.536738616588991e-07, -3.099436753473128e-06, -0.01871534250676632, -0.40697839856147766], "finish_reason": "stop"}, {"text": " np.concatenate(matches.values)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "values", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -0.5549665093421936, -0.09338094294071198, -0.0946756973862648], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts"], "logprobs": [-0.01439108420163393], "finish_reason": "stop"}], "metrics": {"energy": 357.54255924606315, "energy_per_token": 7.2967869233890434, "time": 12.006739, "time_per_token": 0.24503548979591835}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -0.32374224066734314], "finish_reason": "stop"}, {"text": " np.concatenate(matches)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -1.346470832824707, -0.07554744929075241], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 377.44060684204095, "energy_per_token": 8.98668111528669, "time": 13.399502, "time_per_token": 0.3190357619047619}}
{"outputs": [{"text": " df[column].str.findall(PATTERN).explode()  # Find matches using the regex pattern", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", ".", "expl", "ode", "()", "  ", "#", " Find", " matches", " using", " the", " regex", " pattern", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -1.5777324438095093, -0.132893905043602, -3.4570634852570947e-06, -0.02136886678636074, -3.090620517730713, -0.0007381098694168031, -1.0997726917266846, -1.8768571615219116, -2.08687162399292, -2.266770362854004, -0.8671048283576965, -0.042808279395103455, -0.28948041796684265], "finish_reason": "stop"}, {"text": " np.concatenate(matches)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -1.346470832824707, -0.07554744929075241], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 453.30035426330585, "energy_per_token": 8.394451004876034, "time": 14.226646, "time_per_token": 0.26345640740740744}}
{"outputs": [{"text": " df[column].str.extractall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "extract", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -1.7535550594329834, -0.042111560702323914, -0.0009654866298660636, -0.05200869217514992, -9.536738616588991e-07, -2.145764938177308e-06, -0.02635246515274048, -0.13805359601974487], "finish_reason": "stop"}, {"text": " np.hstack(matches)", "tokens": [" np", ".", "h", "stack", "(", "matches", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -1.6676511764526367, -6.318072337307967e-06, -0.016265662387013435, -0.033771056681871414, -0.549225389957428, -0.030332526192069054], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.010881726630032063, -6.318072337307967e-06, -0.08217314630746841, -0.0011213688412681222, -0.002796788467094302, -4.017272294731811e-05, -3.576278118089249e-07, -3.576272320060525e-06, -3.576278118089249e-07, -0.005265653133392334, -0.003811833681538701, -0.0036921207793056965, -2.3841855067985307e-07, -2.1219027985353023e-05, -0.027624208480119705, -0.00969003327190876], "finish_reason": "stop"}, {"text": " counts<|endoftext|>\"\"\"", "tokens": [" counts", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.012869163416326046, -1.5788757801055908, -1.4305012882687151e-05, -1.1920922133867862e-06, -3.6954811548639555e-06, -1.6331539882230572e-05, -1.976453185081482, -0.00278371199965477, -0.007622087839990854, -0.00038675934774801135, -0.3399425745010376], "finish_reason": "stop"}], "metrics": {"energy": 342.38860536956776, "energy_per_token": 6.847772107391355, "time": 11.4692955, "time_per_token": 0.22938591}}
{"outputs": [{"text": " df[column].apply(lambda x: re.findall(PATTERN, x)).explode().reset_index(drop=True)", "tokens": [" df", "[", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " x", "))", ".", "expl", "ode", "()", ".", "reset", "_", "index", "(", "drop", "=", "True", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -1.494218111038208, -0.0007139279623515904, -0.07839850336313248, -0.048240240663290024, -0.0022947664838284254, -0.05500371754169464, -5.364274329622276e-05, -0.005832320544868708, -0.0055153584107756615, -0.0005191409145481884, -0.01983802020549774, -1.9073468138230965e-06, -3.814689989667386e-06, -0.0005194983095861971, -0.15201394259929657, -0.027276845648884773, -2.144369125366211, -0.30393069982528687, -1.6689286894688848e-06, -0.043542176485061646, -1.2650152444839478, -1.7104817628860474, -2.3841830625315197e-06, -3.4570634852570947e-06, -0.02176004834473133, -0.00623211357742548, -0.014610561542212963, -0.0018925628392025828, -0.006614694371819496, -0.0753161832690239], "finish_reason": "stop"}, {"text": " np.concatenate(matches.values)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "values", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -0.5549665093421936, -0.09338094294071198, -0.0946756973862648], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts<|endoftext|># Python", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "#", " Python", "\n"], "logprobs": [-0.01439108420163393, -1.4661390781402588, -1.1920858014491387e-05, -1.311301275563892e-06, -3.3378546504536644e-06, -1.2993727978027891e-05, -0.14929218590259552, -1.142250895500183, -4.1175856590271, -3.3484749794006348], "finish_reason": "stop"}], "metrics": {"energy": 586.4040798454282, "energy_per_token": 8.144501108964281, "time": 19.55277, "time_per_token": 0.27156625}}
{"outputs": [{"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.6804044246673584, -0.023932384327054024], "finish_reason": "stop"}, {"text": " np.concatenate(matches.tolist())", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "tol", "ist", "())", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -2.5662312507629395, 0.0, -0.005149909295141697, -0.021609334275126457], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 260.32684285736076, "energy_per_token": 8.135213839292524, "time": 9.204651, "time_per_token": 0.28764534375}}
{"outputs": [{"text": " re.findall(PATTERN, \"\".join(df[column].tolist()))", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " \"", "\"", ".", "join", "(", "df", "[", "column", "]", ".", "tol", "ist", "()))", "\n"], "logprobs": [-2.9349782466888428, -0.00016819016309455037, -0.007473960053175688, -0.0258207768201828, -0.0007602662080898881, -0.03137535601854324, -1.7881377516459906e-06, -9.65590606938349e-06, -0.00039081089198589325, -1.8621766567230225, -1.7468717098236084, -0.000454799213912338, -0.00021169328829273582, -0.016637155786156654, -0.05514778941869736, -0.024240771308541298, -0.016922950744628906, -1.0983643531799316, -0.0008177988929674029, -1.5283379554748535, 0.0, -0.014200941659510136, -0.04565807431936264], "finish_reason": "stop"}, {"text": " np.concatenate(matches.values)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "values", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -0.3109254240989685, -0.5549665093421936, -0.09338094294071198, -0.0946756973862648], "finish_reason": "stop"}, {"text": " pd.value_counts(flattened_matches)", "tokens": [" pd", ".", "value", "_", "counts", "(", "fl", "att", "ened", "_", "matches", ")", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -2.4604241847991943, -4.768370445162873e-07, -5.960446742392378e-06, -0.0004744596080854535, -0.012346859090030193, -8.702239938429557e-06, -4.768370445162873e-07, -2.264974000354414e-06, -4.768370445162873e-07, -0.07212163507938385, -0.06291697919368744], "finish_reason": "stop"}, {"text": " counts<|endoftext|>def task_func(n: int, m: int):", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "n", ":", " int", ",", " m", ":", " int", "):", "\n"], "logprobs": [-0.014225034043192863, -1.4331942796707153, -1.2040065485052764e-05, -1.7881377516459906e-06, -3.4570634852570947e-06, -1.1205610462639015e-05, -0.13486319780349731, -2.617788076400757, -0.6577025651931763, -0.061105720698833466, -0.2210250049829483, -0.0713692381978035, -2.522617816925049, -1.7728016376495361, -0.14403177797794342, -1.5231695175170898, -0.8698971271514893, -0.005203395150601864, -0.01462759543210268, -1.3026822805404663, -0.005892998538911343], "finish_reason": "stop"}], "metrics": {"energy": 442.9809235115053, "energy_per_token": 6.514425345757431, "time": 14.486337, "time_per_token": 0.21303436764705883}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-0.2888600528240204, -0.02866302989423275, -0.011231767013669014, -0.0020511557813733816, -0.001209004782140255, -0.453591525554657, -0.0009087961516343057, -0.21257758140563965, -0.0005123494775034487, -0.0009480987209826708, -0.04462103545665741, -8.344646857949556e-07, -2.50339189733495e-06, -0.027737149968743324, -0.32374224066734314], "finish_reason": "stop"}, {"text": " np.concatenate(matches)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ")", "\n"], "logprobs": [-0.04897788539528847, -7.033323527139146e-06, -0.2717580497264862, -4.887569048150908e-06, -3.3378546504536644e-06, -0.002975800074636936, -0.11690378189086914, -1.346470832824707, -0.07554744929075241], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-0.009349963627755642, -7.629365427419543e-06, -0.10327313095331192, -0.0009958551963791251, -0.0027916766703128815, -3.480850500636734e-05, -3.576278118089249e-07, -4.172316494077677e-06, -3.576278118089249e-07, -0.006291109137237072, -0.0036802436225116253, -0.003392894519492984, -2.3841855067985307e-07, -1.6689160474925302e-05, -0.03442166745662689, -0.008915616199374199], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.01439108420163393, -0.4896300435066223], "finish_reason": "stop"}], "metrics": {"energy": 304.5046752815247, "energy_per_token": 7.250111316226779, "time": 10.416692, "time_per_token": 0.24801647619047618}}
