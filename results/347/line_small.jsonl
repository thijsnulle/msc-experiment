{"outputs": [{"text": " re.findall(PATTERN, df[column])", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "])", "\n"], "logprobs": [-0.9452728033065796, -9.035655966727063e-05, -0.0271126888692379, -0.05230560153722763, -0.000747877755202353, -0.011542209424078465, -6.6756979322235566e-06, -1.4185804502631072e-05, -0.0007288183551281691, -0.0917246863245964, -0.06073322147130966, -0.006249409634619951, -0.6545523405075073, -0.01481155026704073], "finish_reason": "stop"}, {"text": " np.concatenate(matches.apply(list).tolist())", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ".", "apply", "(", "list", ")", ".", "tol", "ist", "())", "\n"], "logprobs": [-1.3456060886383057, -1.9311717551317997e-05, -1.0389628410339355, -0.0002671123365871608, -0.000336590368533507, -0.039719853550195694, -0.04500596225261688, -0.902664303779602, -1.1486903429031372, -0.001354491920210421, -0.8550034761428833, -0.10449190437793732, -0.05095250532031059, -1.5017086267471313, -0.00504589406773448, -0.061364736407995224, -0.05077938735485077], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-1.9633963108062744, -0.0007636015070602298, -0.031645189970731735, -0.021513784304261208, -1.66432785987854, -0.0001911934232339263, -0.000271521887043491, -2.264974000354414e-06, -1.7523612768854946e-05, -0.030856503173708916, -0.02497376687824726, -0.08560787886381149, -1.7404405298293568e-05, -0.0003692421887535602, -0.04236149042844772, -0.09762505441904068], "finish_reason": "stop"}, {"text": " counts<|endoftext|>#!/usr/bin/env python", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.0060365027748048306, -1.1512856483459473, -2.50339189733495e-06, -7.152555099310121e-07, -1.4781842764932662e-05, -0.0001072826053132303, -0.059344980865716934, -0.9781593084335327, -1.102882981300354, -0.04747852310538292, -0.11705882847309113, -0.00018916724366135895, -0.007051344029605389, -0.00035279724397696555, -0.05575566738843918, -0.006354365963488817, -0.7719801664352417], "finish_reason": "stop"}], "metrics": {"energy": 133.79657432174682, "energy_per_token": 2.090571473777294, "time": 5.74608, "time_per_token": 0.0897825}}
{"outputs": [{"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.4525601863861084, -0.012974485754966736], "finish_reason": "stop"}, {"text": " [match for sublist in matches for match in sublist]", "tokens": [" [", "match", " for", " subl", "ist", " in", " matches", " for", " match", " in", " subl", "ist", "]", "\n"], "logprobs": [-1.2945215702056885, -1.071808099746704, -0.06306159496307373, -0.5181947946548462, -0.0010923140216618776, -0.0004522969538811594, -0.009314768947660923, -0.5733153223991394, -0.0003150205302517861, -0.00014494798961095512, -0.004394279792904854, -0.00034290633630007505, -0.013345086015760899, -0.010317324660718441], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -0.15434344112873077, -0.007039506919682026], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 86.34106211471557, "energy_per_token": 2.4668874889918735, "time": 3.5105672, "time_per_token": 0.10030192}}
{"outputs": [{"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.4525601863861084, -0.012974485754966736], "finish_reason": "stop"}, {"text": " np.unique(matches)", "tokens": [" np", ".", "unique", "(", "matches", ")", "\n"], "logprobs": [-1.3456060886383057, -1.9311717551317997e-05, -1.7185072898864746, -0.09217322617769241, -1.0083786249160767, -1.8046181201934814, -0.2460910528898239], "finish_reason": "stop"}, {"text": " Counter(flattened_matches)", "tokens": [" Counter", "(", "fl", "att", "ened", "_", "matches", ")", "\n"], "logprobs": [-1.9540627002716064, -0.0037461596075445414, -0.020682265982031822, -8.165503095369786e-05, -0.0002946419408544898, -1.5497195136049413e-06, -1.3708974620385561e-05, -0.001910886145196855, -0.07351064682006836], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005773179233074188, -0.6437326073646545], "finish_reason": "stop"}], "metrics": {"energy": 67.83744267654419, "energy_per_token": 3.391872133827209, "time": 3.292296, "time_per_token": 0.1646148}}
{"outputs": [{"text": " re.findall(PATTERN, df[column].astype(str))", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "]", ".", "ast", "ype", "(", "str", "))", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -0.059789638966321945, -0.0007459718617610633, -0.014018167741596699, -7.033323527139146e-06, -1.1086402082582936e-05, -0.000771939754486084, -0.07611897587776184, -0.04682759940624237, -0.004802478477358818, -0.8210533261299133, -0.0077629778534173965, -1.3112421035766602, -0.0006523388437926769, -0.02558678202331066, -0.0551772341132164, -0.14312191307544708, -0.023028438910841942], "finish_reason": "stop"}, {"text": " matches.apply(lambda x: [match for match in x if match])", "tokens": [" matches", ".", "apply", "(", "lambda", " x", ":", " [", "match", " for", " match", " in", " x", " if", " match", "])", "\n"], "logprobs": [-1.3526766300201416, -0.0036952088121324778, -0.27126002311706543, -0.001980012049898505, -0.08659771829843521, -0.016405809670686722, -0.0008232779800891876, -0.8248518705368042, -2.30415678024292, -0.3031282126903534, -0.28017592430114746, -0.012448116205632687, -0.01700475998222828, -0.22070078551769257, -0.1879294365644455, -0.38950836658477783, -0.027042841538786888], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -0.15434344112873077, -0.007039506919682026], "finish_reason": "stop"}, {"text": " counts<|endoftext|>\"\"\"", "tokens": [" counts", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.005066294688731432, -1.2719318866729736, -1.4305104514278355e-06, -8.344646857949556e-07, -1.07287787614041e-05, -9.762764238985255e-05, -2.692356824874878, -0.00788054894655943, -0.002293695928528905, -0.0007597897201776505, -0.22538380324840546], "finish_reason": "stop"}], "metrics": {"energy": 126.9173172264099, "energy_per_token": 1.952574111175537, "time": 4.6244483, "time_per_token": 0.07114535846153847}}
{"outputs": [{"text": " re.finditer(PATTERN, df[column].values)", "tokens": [" re", ".", "find", "iter", "(", "P", "AT", "TERN", ",", " df", "[", "column", "]", ".", "values", ")", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -2.8481521606445312, -0.0013762774178758264, -0.022393453866243362, -5.245195097813848e-06, -5.245195097813848e-06, -0.0007713441736996174, -0.07302407175302505, -0.044519905000925064, -0.005160701461136341, -0.8335186243057251, -0.03838586434721947, -0.9036844372749329, -0.5081499218940735, -0.013559030368924141], "finish_reason": "stop"}, {"text": " matches.map(lambda x: [m for m in x if m])", "tokens": [" matches", ".", "map", "(", "lambda", " x", ":", " [", "m", " for", " m", " in", " x", " if", " m", "])", "\n"], "logprobs": [-1.3526766300201416, -0.0036952088121324778, -1.8641688823699951, -0.007575119845569134, -0.12164410203695297, -0.025885947048664093, -0.00157196877989918, -0.8405627012252808, -1.859226942062378, -0.18526361882686615, -0.19519925117492676, -0.011139346286654472, -0.02937137894332409, -0.4687889814376831, -0.10291311144828796, -0.49892234802246094, -0.08990606665611267], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -0.15434344112873077, -0.007039506919682026], "finish_reason": "stop"}, {"text": " counts<|endoftext|>#!/usr/bin/env python3", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.005066294688731432, -1.2719318866729736, -1.4305104514278355e-06, -8.344646857949556e-07, -1.07287787614041e-05, -9.762764238985255e-05, -0.074631467461586, -0.9597899317741394, -1.0725470781326294, -0.049629680812358856, -0.09479985386133194, -0.0001618731184862554, -0.005468884017318487, -0.00029988560709170997, -0.056756339967250824, -0.006573718972504139, -0.6408979892730713, -0.033261172473430634], "finish_reason": "stop"}], "metrics": {"energy": 92.03140618896487, "energy_per_token": 1.3337884954922443, "time": 4.0094013, "time_per_token": 0.05810726521739131}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-1.0538175106048584, -0.028435029089450836, -0.0050779180601239204, -0.0026018121279776096, -0.07442378252744675, -0.8103836178779602, -0.05304352939128876, -0.3512715995311737, -0.0006680640508420765, -0.0009410720085725188, -0.040634941309690475, -1.168244216387393e-05, -8.702239938429557e-06, -0.025260096415877342, -0.18436524271965027], "finish_reason": "stop"}, {"text": " pd.Series([item for sublist in matches.tolist() for item in sublist])", "tokens": [" pd", ".", "Series", "([", "item", " for", " subl", "ist", " in", " matches", ".", "tol", "ist", "()", " for", " item", " in", " subl", "ist", "])", "\n"], "logprobs": [-3.3127615451812744, -0.0013236580416560173, -0.47673332691192627, -1.0966272354125977, -0.648662269115448, -0.03019454888999462, -0.034649111330509186, -0.0015862513100728393, -0.00046993177966214716, -0.021944444626569748, -1.0872986316680908, -2.7597827911376953, -2.3841830625315197e-06, -0.000966915744356811, -0.010447571985423565, -0.00012742661056108773, -0.00010740180005086586, -0.0009977606823667884, -0.000896052282769233, -0.024218548089265823, -0.07239444553852081], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -0.15434344112873077, -0.007039506919682026], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 67.70507265853881, "energy_per_token": 1.231001321064342, "time": 3.370501, "time_per_token": 0.06128183636363636}}
{"outputs": [{"text": " re.findall(PATTERN, df[column])", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "])", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -0.059789638966321945, -0.0007459718617610633, -0.014018167741596699, -7.033323527139146e-06, -1.1086402082582936e-05, -0.000771939754486084, -0.07611897587776184, -0.04682759940624237, -0.004802478477358818, -0.5931690335273743, -0.01486933697015047], "finish_reason": "stop"}, {"text": " [match for sublist in matches.to_list() for match in sublist]", "tokens": [" [", "match", " for", " subl", "ist", " in", " matches", ".", "to", "_", "list", "()", " for", " match", " in", " subl", "ist", "]", "\n"], "logprobs": [-1.2945215702056885, -1.071808099746704, -0.06306159496307373, -0.5181947946548462, -0.0010923140216618776, -0.0004522969538811594, -0.009314768947660923, -0.8534628748893738, -1.6359786987304688, -5.006777428206988e-06, -0.23992405831813812, -0.0023825373500585556, -0.004408284556120634, -0.00019464982324279845, -0.00017796363681554794, -0.0021318108774721622, -0.0003302744007669389, -0.017151013016700745, -0.009150473400950432], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)[1]", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")[", "1", "]", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -1.9554070234298706, -0.0022327988408505917, -0.0008361419313587248, -0.015435402281582355], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 73.73466162872315, "energy_per_token": 1.3654566968282065, "time": 3.5894508, "time_per_token": 0.06647131111111111}}
{"outputs": [{"text": " df[column]", "tokens": [" df", "[", "column", "]", "\n"], "logprobs": [-1.0538175106048584, -0.028435029089450836, -0.0050779180601239204, -0.0026018121279776096, -2.685502052307129], "finish_reason": "stop"}, {"text": " matches.apply(lambda x: np.unique(np.array(x, dtype=\"object\"))).astype(\"object\")", "tokens": [" matches", ".", "apply", "(", "lambda", " x", ":", " np", ".", "unique", "(", "np", ".", "array", "(", "x", ",", " dtype", "=", "\"", "object", "\"", ")))", ".", "ast", "ype", "(", "\"", "object", "\"", ")", "\n"], "logprobs": [-1.3526766300201416, -0.0036952088121324778, -0.27126002311706543, -0.001980012049898505, -0.08659771829843521, -0.016405809670686722, -0.0008232779800891876, -1.9909723997116089, -2.4676019165781327e-05, -0.8658602833747864, -0.027175338938832283, -1.490411400794983, -0.0002475670480635017, -0.4156864583492279, -0.08584366738796234, -0.02454964444041252, -2.708627462387085, -0.037819329649209976, -0.07801530510187149, -2.2298359870910645, -1.045160174369812, -2.0861407392658293e-05, -0.1623125523328781, -2.1484627723693848, -2.852036476135254, -1.0967194612021558e-05, -0.017404915764927864, -0.9035651683807373, -0.6757256984710693, -0.00016473367577418685, -0.005499827675521374, -0.06418903917074203], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -0.15434344112873077, -0.007039506919682026], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 95.54878380584715, "energy_per_token": 1.7062282822472705, "time": 3.5833228, "time_per_token": 0.06398790714285714}}
{"outputs": [{"text": " re.findall(PATTERN, df[column])", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "])", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -0.059789638966321945, -0.0007459718617610633, -0.014018167741596699, -7.033323527139146e-06, -1.1086402082582936e-05, -0.000771939754486084, -0.07611897587776184, -0.04682759940624237, -0.004802478477358818, -0.5931690335273743, -0.01486933697015047], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.9472410678863525, -0.003833684604614973], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -0.15434344112873077, -0.007039506919682026], "finish_reason": "stop"}, {"text": " counts<|endoftext|>from datetime import datetime", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "from", " datetime", " import", " datetime", "\n"], "logprobs": [-0.005066294688731432, -1.2719318866729736, -1.4305104514278355e-06, -8.344646857949556e-07, -1.07287787614041e-05, -9.762764238985255e-05, -0.074631467461586, -1.3901584148406982, -4.2589263916015625, -0.0005255748401395977, -0.22547484934329987, -0.3630790412425995], "finish_reason": "stop"}], "metrics": {"energy": 111.80924148559568, "energy_per_token": 2.484649810791015, "time": 3.7627382, "time_per_token": 0.08361640444444444}}
{"outputs": [{"text": " re.findall(PATTERN, df[column])", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "])", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -0.059789638966321945, -0.0007459718617610633, -0.014018167741596699, -7.033323527139146e-06, -1.1086402082582936e-05, -0.000771939754486084, -0.07611897587776184, -0.04682759940624237, -0.004802478477358818, -0.5931690335273743, -0.01486933697015047], "finish_reason": "stop"}, {"text": " np.concatenate(matches)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ")", "\n"], "logprobs": [-1.3456060886383057, -1.9311717551317997e-05, -1.0389628410339355, -0.0002671123365871608, -0.000336590368533507, -0.039719853550195694, -0.04500596225261688, -0.6576558351516724, -0.4958074688911438], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6501410007476807, -0.000982159748673439, -0.12092986702919006, -0.001413180842064321, -0.025017019361257553, -4.3987260141875595e-05, -0.0005739472107961774, -1.0728830375228426e-06, -9.179073458653875e-06, -0.1620250791311264, -0.004194747656583786, -5.960462772236497e-07, -0.010651522316038609, -0.006412998773157597, -0.002624878427013755, -0.15269659459590912, -0.005239683203399181], "finish_reason": "stop"}, {"text": " counts<|endoftext|># Import pandas", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "#", " Import", " pandas", "\n"], "logprobs": [-0.005589806940406561, -1.292508602142334, -1.6689286894688848e-06, -7.152555099310121e-07, -1.5258672647178173e-05, -9.762764238985255e-05, -0.06361445784568787, -0.9728654026985168, -3.062138080596924, -3.2090373039245605, -0.5996766686439514], "finish_reason": "stop"}], "metrics": {"energy": 82.15477624511719, "energy_per_token": 1.6108779655905332, "time": 3.9768562, "time_per_token": 0.0779775725490196}}
{"outputs": [{"text": " re.findall(PATTERN, df[column].astype(str))", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "]", ".", "ast", "ype", "(", "str", "))", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -0.059789638966321945, -0.0007459718617610633, -0.014018167741596699, -7.033323527139146e-06, -1.1086402082582936e-05, -0.000771939754486084, -0.07611897587776184, -0.04682759940624237, -0.004802478477358818, -0.8210533261299133, -0.0077629778534173965, -1.3112421035766602, -0.0006523388437926769, -0.02558678202331066, -0.0551772341132164, -0.14312191307544708, -0.023028438910841942], "finish_reason": "stop"}, {"text": " np.array([i for sublist in matches for i in sublist])", "tokens": [" np", ".", "array", "([", "i", " for", " subl", "ist", " in", " matches", " for", " i", " in", " subl", "ist", "])", "\n"], "logprobs": [-1.3456060886383057, -1.9311717551317997e-05, -1.4078783988952637, -0.653091549873352, -3.383877754211426, -0.06991510838270187, -0.5046291947364807, -0.004657373297959566, -0.00022933237778488547, -0.013755057007074356, -0.24563676118850708, -0.00022706791060045362, -9.572047565598041e-05, -0.0025296376552432775, -0.00013028726971242577, -0.03383386507630348, -0.046398647129535675], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6565257906913757, -0.0009401192655786872, -0.0964294895529747, -0.0011974553344771266, -0.02733994834125042, -4.494089080253616e-05, -0.0004966217675246298, -1.5497195136049413e-06, -8.4638240878121e-06, -0.16556419432163239, -0.0036044646985828876, -3.576278118089249e-07, -0.009099324233829975, -0.006899580359458923, -0.003368895500898361, -0.14070871472358704, -0.0068976860493421555], "finish_reason": "stop"}, {"text": " counts<|endoftext|>import numpy as np", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "import", " numpy", " as", " np", "\n"], "logprobs": [-0.005773179233074188, -1.3443055152893066, -2.0265558760002023e-06, -7.152555099310121e-07, -1.1086402082582936e-05, -9.405170567333698e-05, -0.0774383544921875, -1.3573952913284302, -1.9075175523757935, -0.011980011127889156, -0.002187480451539159, -0.004274043254554272], "finish_reason": "stop"}], "metrics": {"energy": 125.88516464996343, "energy_per_token": 1.9073509795449004, "time": 4.630644, "time_per_token": 0.07016127272727272}}
{"outputs": [{"text": " re.findall(PATTERN, df[column])", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "])", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -0.059789638966321945, -0.0007459718617610633, -0.014018167741596699, -7.033323527139146e-06, -1.1086402082582936e-05, -0.000771939754486084, -0.07611897587776184, -0.04682759940624237, -0.004802478477358818, -0.5931690335273743, -0.01486933697015047], "finish_reason": "stop"}, {"text": " np.unique(np.concatenate(matches)).tolist()", "tokens": [" np", ".", "unique", "(", "np", ".", "concat", "en", "ate", "(", "matches", "))", ".", "tol", "ist", "()", "\n"], "logprobs": [-1.3456060886383057, -1.9311717551317997e-05, -1.7185072898864746, -0.09217322617769241, -0.5363174676895142, -0.0004049911512993276, -0.5489984750747681, -0.0003526780928950757, -0.0005654881824739277, -0.0180125180631876, -0.04039373993873596, -0.7175372242927551, -2.6449992656707764, -0.09791412949562073, -8.344646857949556e-07, -0.000537727726623416, -0.019218429923057556], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6565257906913757, -0.0009401192655786872, -0.0964294895529747, -0.0011974553344771266, -0.02733994834125042, -4.494089080253616e-05, -0.0004966217675246298, -1.5497195136049413e-06, -8.4638240878121e-06, -0.16556419432163239, -0.0036044646985828876, -3.576278118089249e-07, -0.009099324233829975, -0.006899580359458923, -0.003368895500898361, -0.14070871472358704, -0.0068976860493421555], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005773179233074188, -0.6437326073646545], "finish_reason": "stop"}], "metrics": {"energy": 76.9748310470581, "energy_per_token": 1.539496620941162, "time": 3.3796544, "time_per_token": 0.06759308800000001}}
{"outputs": [{"text": " re.findall(PATTERN, df[column].apply(str))", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "]", ".", "apply", "(", "str", "))", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -0.059789638966321945, -0.0007459718617610633, -0.014018167741596699, -7.033323527139146e-06, -1.1086402082582936e-05, -0.000771939754486084, -0.07611897587776184, -0.04682759940624237, -0.004802478477358818, -0.8210533261299133, -0.0077629778534173965, -2.365046501159668, -0.0013979434734210372, -0.14046096801757812, -0.18003474175930023, -0.020349303260445595], "finish_reason": "stop"}, {"text": " [match for sublist in matches for match in sublist]", "tokens": [" [", "match", " for", " subl", "ist", " in", " matches", " for", " match", " in", " subl", "ist", "]", "\n"], "logprobs": [-1.2945215702056885, -1.071808099746704, -0.06306159496307373, -0.5181947946548462, -0.0010923140216618776, -0.0004522969538811594, -0.009314768947660923, -0.5733153223991394, -0.0003150205302517861, -0.00014494798961095512, -0.004394279792904854, -0.00034290633630007505, -0.013345086015760899, -0.010317324660718441], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -0.15434344112873077, -0.007039506919682026], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 137.60614174652093, "energy_per_token": 2.646271956663864, "time": 5.038653, "time_per_token": 0.09689717307692308}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-1.0538175106048584, -0.028435029089450836, -0.0050779180601239204, -0.0026018121279776096, -0.07442378252744675, -0.8103836178779602, -0.05304352939128876, -0.3512715995311737, -0.0006680640508420765, -0.0009410720085725188, -0.040634941309690475, -1.168244216387393e-05, -8.702239938429557e-06, -0.025260096415877342, -0.18436524271965027], "finish_reason": "stop"}, {"text": " np.concatenate(matches, axis=0)", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ",", " axis", "=", "0", ")", "\n"], "logprobs": [-1.3456060886383057, -1.9311717551317997e-05, -1.0389628410339355, -0.0002671123365871608, -0.000336590368533507, -0.039719853550195694, -0.04500596225261688, -2.6004257202148438, -0.058157287538051605, -0.025905927643179893, -0.6800553798675537, -0.00606138538569212, -0.3558717966079712], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6501410007476807, -0.000982159748673439, -0.12092986702919006, -0.001413180842064321, -0.025017019361257553, -4.3987260141875595e-05, -0.0005739472107961774, -1.0728830375228426e-06, -9.179073458653875e-06, -0.1620250791311264, -0.004194747656583786, -5.960462772236497e-07, -0.010651522316038609, -0.006412998773157597, -0.002624878427013755, -0.15269659459590912, -0.005239683203399181], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005589806940406561, -0.6763262152671814], "finish_reason": "stop"}], "metrics": {"energy": 101.40581857681278, "energy_per_token": 2.157570608017293, "time": 3.7722242, "time_per_token": 0.08026008936170213}}
{"outputs": [{"text": " re.findall(PATTERN, df[column])", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "])", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -0.059789638966321945, -0.0007459718617610633, -0.014018167741596699, -7.033323527139146e-06, -1.1086402082582936e-05, -0.000771939754486084, -0.07611897587776184, -0.04682759940624237, -0.004802478477358818, -0.5931690335273743, -0.01486933697015047], "finish_reason": "stop"}, {"text": " [item for sublist in matches for item in sublist]", "tokens": [" [", "item", " for", " subl", "ist", " in", " matches", " for", " item", " in", " subl", "ist", "]", "\n"], "logprobs": [-1.2945215702056885, -0.779920756816864, -0.0058621857315301895, -0.03186345472931862, -0.001134943449869752, -0.0003023882454726845, -0.014616905711591244, -0.5856101512908936, -0.00014482879487331957, -3.969590397900902e-05, -0.0014605579199269414, -0.0021489402279257774, -0.01030387356877327, -0.00956134032458067], "finish_reason": "stop"}, {"text": " pd.Series(np.unique(flattened_matches), np.array([len(re.findall(PATTERN, x)) for x in df[column]]))", "tokens": [" pd", ".", "Series", "(", "np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ")", ",", " np", ".", "array", "([", "len", "(", "re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " x", "))", " for", " x", " in", " df", "[", "column", "]]", "))", "\n"], "logprobs": [-1.9123960733413696, -0.0008338788175024092, -0.03109169565141201, -0.0212476197630167, -0.5355621576309204, -0.00041547726141288877, -0.11370210349559784, -0.00040975757292471826, -0.011448756791651249, -3.528532761265524e-05, -0.0004786299541592598, -1.7881377516459906e-06, -8.106198947643861e-06, -0.6904885172843933, -0.04397109895944595, -1.7755850553512573, -0.003304618177935481, -2.2154910564422607, -1.4863723516464233, -1.1607823371887207, -0.007712704595178366, -1.6334362030029297, -0.0012267453130334616, -0.020321033895015717, -0.00028224775451235473, -0.0018192660063505173, -0.08955918997526169, -8.737658936297521e-05, -3.6238969187252223e-05, -0.000285227142740041, -0.6981244087219238, -0.013550445437431335, -0.024589888751506805, -0.002351259347051382, -0.0007712250226177275, -3.010878324508667, -0.011868693865835667, -0.0036220441106706858, -0.1862778663635254, -0.16233514249324799, -0.04755537211894989], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts"], "logprobs": [-0.006236615125089884], "finish_reason": "stop"}], "metrics": {"energy": 97.09765234374998, "energy_per_token": 1.3871093191964283, "time": 3.803224, "time_per_token": 0.05433177142857143}}
{"outputs": [{"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.4525601863861084, -0.012974485754966736], "finish_reason": "stop"}, {"text": " np.concatenate(matches, axis=1).ravel()", "tokens": [" np", ".", "concat", "en", "ate", "(", "matches", ",", " axis", "=", "1", ")", ".", "ravel", "()", "\n"], "logprobs": [-1.3456060886383057, -1.9311717551317997e-05, -1.0389628410339355, -0.0002671123365871608, -0.000336590368533507, -0.039719853550195694, -0.04500596225261688, -2.6004257202148438, -0.058157287538051605, -0.025905927643179893, -1.077420949935913, -0.008232113905251026, -0.6423265337944031, -2.229952335357666, -0.027361057698726654, -0.11210092902183533], "finish_reason": "stop"}, {"text": " pd.Series(np.unique(flattened_matches)).apply(lambda x: len(x))", "tokens": [" pd", ".", "Series", "(", "np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", "))", ".", "apply", "(", "lambda", " x", ":", " len", "(", "x", "))", "\n"], "logprobs": [-1.9633963108062744, -0.0007636015070602298, -0.031645189970731735, -0.021513784304261208, -0.5026723742485046, -0.00039843725971877575, -0.10814853012561798, -0.0003856868715956807, -0.008377647027373314, -3.015949550899677e-05, -0.00041083001997321844, -1.6689286894688848e-06, -9.179073458653875e-06, -2.006342649459839, -0.5613313913345337, -2.4963297843933105, -0.0008093419019132853, -0.14408081769943237, -0.029713386669754982, -0.0012835367815569043, -1.3761322498321533, -0.004648711532354355, -0.4701434075832367, -0.04416273534297943, -0.032332733273506165], "finish_reason": "stop"}, {"text": " counts<|endoftext|>import pandas as pd", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "import", " pandas", " as", " pd", "\n"], "logprobs": [-0.005286997649818659, -1.2621800899505615, -2.0265558760002023e-06, -7.152555099310121e-07, -1.4662635294371285e-05, -9.583967766957358e-05, -0.04751092195510864, -1.3854663372039795, -1.4063090085983276, -0.019440941512584686, -0.0020173690281808376, -0.004372084978967905], "finish_reason": "stop"}], "metrics": {"energy": 89.07196349334717, "energy_per_token": 1.6194902453335849, "time": 4.2014155, "time_per_token": 0.07638937272727274}}
{"outputs": [{"text": " df[column].map(lambda x: re.findall(PATTERN, x))", "tokens": [" df", "[", "column", "]", ".", "map", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " x", "))", "\n"], "logprobs": [-1.0538175106048584, -0.028435029089450836, -0.0050779180601239204, -0.0026018121279776096, -0.07442378252744675, -1.8463466167449951, -0.005502317100763321, -0.569600522518158, -0.21597835421562195, -0.00506404135376215, -0.26073339581489563, -9.405170567333698e-05, -0.06611402332782745, -0.0013765154872089624, -0.0012423424050211906, -0.01268238015472889, -7.986990567587782e-06, -1.6212332411669195e-05, -0.0006236277404241264, -0.1431228369474411, -0.09005685150623322, -0.12676675617694855], "finish_reason": "stop"}, {"text": " np.array([match for sublist in matches for match in sublist])", "tokens": [" np", ".", "array", "([", "match", " for", " subl", "ist", " in", " matches", " for", " match", " in", " subl", "ist", "])", "\n"], "logprobs": [-1.3456060886383057, -1.9311717551317997e-05, -1.4078783988952637, -0.653091549873352, -1.3951196670532227, -0.08681436628103256, -0.5817142724990845, -0.0024358145892620087, -0.00031025364296510816, -0.013629472814500332, -0.29544371366500854, -0.0004880429187323898, -0.00018082413589581847, -0.0032564965076744556, -0.00024780540843494236, -0.02875465713441372, -0.040145039558410645], "finish_reason": "stop"}, {"text": " pd.Series(flattened_matches).value_counts()", "tokens": [" pd", ".", "Series", "(", "fl", "att", "ened", "_", "matches", ")", ".", "value", "_", "counts", "()", "\n"], "logprobs": [-1.9353630542755127, -0.0008436457719653845, -0.04026436060667038, -0.02704678662121296, -1.716449499130249, -0.0001546025014249608, -0.00030560590676032007, -2.264974000354414e-06, -1.966933996300213e-05, -0.03082829900085926, -0.025028876960277557, -0.08023705333471298, -2.7179348762729205e-05, -0.00031668893643654883, -0.037577562034130096, -0.1040319874882698], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts"], "logprobs": [-0.006011382210999727], "finish_reason": "stop"}], "metrics": {"energy": 133.91983436584474, "energy_per_token": 2.391425613675799, "time": 4.8037915, "time_per_token": 0.08578199107142857}}
{"outputs": [{"text": " list()", "tokens": [" list", "()", "\n"], "logprobs": [-3.8132569789886475, -1.7881710529327393, -0.017725158482789993], "finish_reason": "stop"}, {"text": " matches.apply(lambda x: np.unique(x))", "tokens": [" matches", ".", "apply", "(", "lambda", " x", ":", " np", ".", "unique", "(", "x", "))", "\n"], "logprobs": [-1.3526766300201416, -0.0036952088121324778, -0.27126002311706543, -0.001980012049898505, -0.08659771829843521, -0.016405809670686722, -0.0008232779800891876, -1.9909723997116089, -2.4676019165781327e-05, -0.8658602833747864, -0.027175338938832283, -0.2987838685512543, -0.44792789220809937, -0.12400037795305252], "finish_reason": "stop"}, {"text": " Counter(flattened_matches)", "tokens": [" Counter", "(", "fl", "att", "ened", "_", "matches", ")", "\n"], "logprobs": [-1.9542547464370728, -0.003953974228352308, -0.019818153232336044, -6.782778655178845e-05, -0.00022075122979003936, -1.311301275563892e-06, -1.3112935448589269e-05, -0.0022048468235880136, -0.06823085248470306], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 76.51489771270751, "energy_per_token": 2.7326749183109826, "time": 3.5503368, "time_per_token": 0.12679774285714288}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-1.0538175106048584, -0.028435029089450836, -0.0050779180601239204, -0.0026018121279776096, -0.07442378252744675, -0.8103836178779602, -0.05304352939128876, -0.3512715995311737, -0.0006680640508420765, -0.0009410720085725188, -0.040634941309690475, -1.168244216387393e-05, -8.702239938429557e-06, -0.025260096415877342, -0.18436524271965027], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.9472410678863525, -0.003833684604614973], "finish_reason": "stop"}, {"text": " Counter(flattened_matches)", "tokens": [" Counter", "(", "fl", "att", "ened", "_", "matches", ")", "\n"], "logprobs": [-1.9542547464370728, -0.003953974228352308, -0.019818153232336044, -6.782778655178845e-05, -0.00022075122979003936, -1.311301275563892e-06, -1.3112935448589269e-05, -0.0022048468235880136, -0.06823085248470306], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 83.79026549148558, "energy_per_token": 2.9925094818387707, "time": 3.1536803, "time_per_token": 0.11263143928571429}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-1.0538175106048584, -0.028435029089450836, -0.0050779180601239204, -0.0026018121279776096, -0.07442378252744675, -0.8103836178779602, -0.05304352939128876, -0.3512715995311737, -0.0006680640508420765, -0.0009410720085725188, -0.040634941309690475, -1.168244216387393e-05, -8.702239938429557e-06, -0.025260096415877342, -0.18436524271965027], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.9472410678863525, -0.003833684604614973], "finish_reason": "stop"}, {"text": " len(np.unique(flattened_matches))", "tokens": [" len", "(", "np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", "))", "\n"], "logprobs": [-2.79118013381958, -0.001482460182160139, -0.29741746187210083, -0.0011094611836597323, -0.006342757027596235, -0.00027509720530360937, -0.007025538943707943, -5.1616290875244886e-05, -0.0003299168893136084, -1.311301275563892e-06, -9.536697689327411e-06, -0.010801302269101143, -0.0291325394064188], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 40.3985591506958, "energy_per_token": 1.2624549734592438, "time": 2.328289, "time_per_token": 0.07275903125}}
{"outputs": [{"text": " re.findall(PATTERN, df[column].to_string(index=False))", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "]", ".", "to", "_", "string", "(", "index", "=", "False", "))", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -0.059789638966321945, -0.0007459718617610633, -0.014018167741596699, -7.033323527139146e-06, -1.1086402082582936e-05, -0.000771939754486084, -0.07611897587776184, -0.04682759940624237, -0.004802478477358818, -0.8210533261299133, -0.0077629778534173965, -2.767878532409668, -5.602820692729438e-06, -0.22231025993824005, -1.6568856239318848, -0.2017764151096344, -0.037980590015649796, -0.006569337099790573, -0.10182808339595795, -0.015710745006799698], "finish_reason": "stop"}, {"text": " [item for sublist in matches for item in sublist]", "tokens": [" [", "item", " for", " subl", "ist", " in", " matches", " for", " item", " in", " subl", "ist", "]", "\n"], "logprobs": [-1.2945215702056885, -0.779920756816864, -0.0058621857315301895, -0.03186345472931862, -0.001134943449869752, -0.0003023882454726845, -0.014616905711591244, -0.5856101512908936, -0.00014482879487331957, -3.969590397900902e-05, -0.0014605579199269414, -0.0021489402279257774, -0.01030387356877327, -0.00956134032458067], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -0.15434344112873077, -0.007039506919682026], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 87.9501615524292, "energy_per_token": 1.5705385991505214, "time": 4.1942134, "time_per_token": 0.07489666785714286}}
{"outputs": [{"text": " df[column].map(lambda x: re.findall(PATTERN, x))", "tokens": [" df", "[", "column", "]", ".", "map", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " x", "))", "\n"], "logprobs": [-1.0538175106048584, -0.028435029089450836, -0.0050779180601239204, -0.0026018121279776096, -0.07442378252744675, -1.8463466167449951, -0.005502317100763321, -0.569600522518158, -0.21597835421562195, -0.00506404135376215, -0.26073339581489563, -9.405170567333698e-05, -0.06611402332782745, -0.0013765154872089624, -0.0012423424050211906, -0.01268238015472889, -7.986990567587782e-06, -1.6212332411669195e-05, -0.0006236277404241264, -0.1431228369474411, -0.09005685150623322, -0.12676675617694855], "finish_reason": "stop"}, {"text": " np.ravel(matches.tolist())", "tokens": [" np", ".", "ravel", "(", "matches", ".", "tol", "ist", "())", "\n"], "logprobs": [-1.3456060886383057, -1.9311717551317997e-05, -3.5758681297302246, -0.09284071624279022, -0.04591451957821846, -1.1513800621032715, -2.6804933547973633, -3.933898824470816e-06, -0.00820610299706459, -0.019919591024518013], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6565257906913757, -0.0009401192655786872, -0.0964294895529747, -0.0011974553344771266, -0.02733994834125042, -4.494089080253616e-05, -0.0004966217675246298, -1.5497195136049413e-06, -8.4638240878121e-06, -0.16556419432163239, -0.0036044646985828876, -3.576278118089249e-07, -0.009099324233829975, -0.006899580359458923, -0.003368895500898361, -0.14070871472358704, -0.0068976860493421555], "finish_reason": "stop"}, {"text": " counts<|endoftext|>from itertools import chain", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "from", " iter", "tools", " import", " chain", "\n"], "logprobs": [-0.005773179233074188, -1.3443055152893066, -2.0265558760002023e-06, -7.152555099310121e-07, -1.1086402082582936e-05, -9.405170567333698e-05, -0.0774383544921875, -1.435939908027649, -3.466583013534546, -0.0014335366431623697, -0.0003121604095213115, -2.1131157875061035, -0.31205469369888306], "finish_reason": "stop"}], "metrics": {"energy": 87.23098348999022, "energy_per_token": 1.4069513466127455, "time": 3.378839, "time_per_token": 0.05449740322580646}}
{"outputs": [{"text": " re.findall(PATTERN, df[column].values.reshape(-1))", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", "))", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -0.059789638966321945, -0.0007459718617610633, -0.014018167741596699, -7.033323527139146e-06, -1.1086402082582936e-05, -0.000771939754486084, -0.07611897587776184, -0.04682759940624237, -0.004802478477358818, -0.8210533261299133, -0.0077629778534173965, -1.1497278213500977, -0.7448217272758484, -3.070918083190918, -0.0002317160106031224, -0.09540794789791107, -6.472854875028133e-05, -0.7497209310531616, -0.019490044564008713], "finish_reason": "stop"}, {"text": " np.hstack(matches.tolist())", "tokens": [" np", ".", "h", "stack", "(", "matches", ".", "tol", "ist", "())", "\n"], "logprobs": [-1.3456060886383057, -1.9311717551317997e-05, -2.7163233757019043, -0.006009841803461313, -0.060955774039030075, -0.03390946239233017, -1.1625869274139404, -2.2726316452026367, -1.6689286894688848e-06, -0.0013713965890929103, -0.10635334253311157], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)[1]", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")[", "1", "]", "\n"], "logprobs": [-0.6565257906913757, -0.0009401192655786872, -0.0964294895529747, -0.0011974553344771266, -0.02733994834125042, -4.494089080253616e-05, -0.0004966217675246298, -1.5497195136049413e-06, -8.4638240878121e-06, -0.16556419432163239, -0.0036044646985828876, -3.576278118089249e-07, -0.009099324233829975, -0.006899580359458923, -0.003368895500898361, -2.0435922145843506, -0.002145728562027216, -0.0008230397943407297, -0.012861278839409351], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005773179233074188, -0.6437326073646545], "finish_reason": "stop"}], "metrics": {"energy": 105.24877669143676, "energy_per_token": 1.949051420211792, "time": 4.200307, "time_per_token": 0.07778346296296296}}
{"outputs": [{"text": " df[column].apply(lambda x: re.findall(PATTERN, x))", "tokens": [" df", "[", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " x", "))", "\n"], "logprobs": [-1.0538175106048584, -0.028435029089450836, -0.0050779180601239204, -0.0026018121279776096, -0.07442378252744675, -1.2228152751922607, -0.0025469979736953974, -0.40642276406288147, -0.15353870391845703, -0.0030353448819369078, -0.20168384909629822, -0.00010251473577227443, -0.05441829934716225, -0.001503528794273734, -0.0010879080509766936, -0.009677755646407604, -6.794906312279636e-06, -1.3708974620385561e-05, -0.0006949870148673654, -0.16759072244167328, -0.06462685763835907, -0.06448380649089813], "finish_reason": "stop"}, {"text": " matches.apply(lambda x: [m for m in x])", "tokens": [" matches", ".", "apply", "(", "lambda", " x", ":", " [", "m", " for", " m", " in", " x", "])", "\n"], "logprobs": [-1.3526766300201416, -0.0036952088121324778, -0.27126002311706543, -0.001980012049898505, -0.08659771829843521, -0.016405809670686722, -0.0008232779800891876, -0.8248518705368042, -1.7177003622055054, -0.2332029789686203, -0.18035659193992615, -0.00866604968905449, -0.02105492353439331, -1.2057706117630005, -0.038454923778772354], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -0.15434344112873077, -0.007039506919682026], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 75.81499055862427, "energy_per_token": 1.3538391171182906, "time": 3.3719509, "time_per_token": 0.060213408928571424}}
{"outputs": [{"text": " re.findall(PATTERN, df[column].values.astype(str))", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "]", ".", "values", ".", "ast", "ype", "(", "str", "))", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -0.059789638966321945, -0.0007459718617610633, -0.014018167741596699, -7.033323527139146e-06, -1.1086402082582936e-05, -0.000771939754486084, -0.07611897587776184, -0.04682759940624237, -0.004802478477358818, -0.8210533261299133, -0.0077629778534173965, -1.1497278213500977, -0.7448217272758484, -0.9130486249923706, -0.0031212682370096445, -0.0216628797352314, -0.1007043719291687, -0.08386830985546112, -0.020637543871998787], "finish_reason": "stop"}, {"text": " matches.apply(lambda x: [item for sublist in x for item in sublist])", "tokens": [" matches", ".", "apply", "(", "lambda", " x", ":", " [", "item", " for", " subl", "ist", " in", " x", " for", " item", " in", " subl", "ist", "])", "\n"], "logprobs": [-1.3526766300201416, -0.0036952088121324778, -0.27126002311706543, -0.001980012049898505, -0.08659771829843521, -0.016405809670686722, -0.0008232779800891876, -0.8248518705368042, -1.9655030965805054, -0.062017809599637985, -0.06686993688344955, -0.00021371940965764225, -0.00019488819816615433, -0.004788835067301989, -0.0176401287317276, -0.0002644904307089746, -0.00014280252798926085, -0.0019900058396160603, -0.0007048744591884315, -0.025972716510295868, -0.02511746622622013], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -0.15434344112873077, -0.007039506919682026], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 77.0717245864868, "energy_per_token": 1.2430923320401095, "time": 3.5055952, "time_per_token": 0.05654185806451613}}
{"outputs": [{"text": " df[column].str.findall(PATTERN)", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", "\n"], "logprobs": [-1.0538175106048584, -0.028435029089450836, -0.0050779180601239204, -0.0026018121279776096, -0.07442378252744675, -0.8103836178779602, -0.05304352939128876, -0.3512715995311737, -0.0006680640508420765, -0.0009410720085725188, -0.040634941309690475, -1.168244216387393e-05, -8.702239938429557e-06, -0.025260096415877342, -0.18436524271965027], "finish_reason": "stop"}, {"text": " [match for sublist in matches for match in sublist]", "tokens": [" [", "match", " for", " subl", "ist", " in", " matches", " for", " match", " in", " subl", "ist", "]", "\n"], "logprobs": [-1.2945215702056885, -1.071808099746704, -0.06306159496307373, -0.5181947946548462, -0.0010923140216618776, -0.0004522969538811594, -0.009314768947660923, -0.5733153223991394, -0.0003150205302517861, -0.00014494798961095512, -0.004394279792904854, -0.00034290633630007505, -0.013345086015760899, -0.010317324660718441], "finish_reason": "stop"}, {"text": " pd.Series(Counter(flattened_matches)).drop(\"\")", "tokens": [" pd", ".", "Series", "(", "Counter", "(", "fl", "att", "ened", "_", "matches", "))", ".", "drop", "(", "\"", "\"", ")", "\n"], "logprobs": [-1.9123960733413696, -0.0008338788175024092, -0.03109169565141201, -0.0212476197630167, -3.4569125175476074, -0.0026648270431905985, -0.014476625248789787, -6.937739817658439e-05, -0.0004078510100953281, -1.311301275563892e-06, -1.2755313036905136e-05, -0.8419103622436523, -1.6990188360214233, -2.6199843883514404, -0.5439865589141846, -0.18539118766784668, -0.3358727693557739, -0.17230650782585144, -0.05867565795779228], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.006236615125089884, -0.7099875211715698], "finish_reason": "stop"}], "metrics": {"energy": 69.57789852142332, "energy_per_token": 1.3915579704284664, "time": 2.888701, "time_per_token": 0.05777402}}
{"outputs": [{"text": " re.findall(PATTERN, df[column].iloc[0])", "tokens": [" re", ".", "find", "all", "(", "P", "AT", "TERN", ",", " df", "[", "column", "]", ".", "il", "oc", "[", "0", "])", "\n"], "logprobs": [-0.8998563289642334, -9.345571743324399e-05, -0.029194368049502373, -0.059789638966321945, -0.0007459718617610633, -0.014018167741596699, -7.033323527139146e-06, -1.1086402082582936e-05, -0.000771939754486084, -0.07611897587776184, -0.04682759940624237, -0.004802478477358818, -0.8210533261299133, -0.0077629778534173965, -3.679898262023926, -0.0020957665983587503, -0.07451562583446503, -0.009301659651100636, -0.04376744478940964, -0.03982273116707802], "finish_reason": "stop"}, {"text": " [match for matches in matches for match in matches]", "tokens": [" [", "match", " for", " matches", " in", " matches", " for", " match", " in", " matches", "]", "\n"], "logprobs": [-1.2945215702056885, -1.071808099746704, -0.06306159496307373, -2.6080098152160645, -0.18415087461471558, -0.007367938291281462, -0.2689346969127655, -0.00042989550274796784, -0.0002598424907773733, -0.0016246942104771733, -0.044972799718379974, -0.015119238756597042], "finish_reason": "stop"}, {"text": " len(np.unique(flattened_matches))", "tokens": [" len", "(", "np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", "))", "\n"], "logprobs": [-2.79118013381958, -0.001482460182160139, -0.29741746187210083, -0.0011094611836597323, -0.006342757027596235, -0.00027509720530360937, -0.007025538943707943, -5.1616290875244886e-05, -0.0003299168893136084, -1.311301275563892e-06, -9.536697689327411e-06, -0.010801302269101143, -0.0291325394064188], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 80.91409664154052, "energy_per_token": 1.7215765242880963, "time": 3.905575, "time_per_token": 0.08309734042553191}}
{"outputs": [{"text": " df[column].str.findall(PATTERN).flatten()", "tokens": [" df", "[", "column", "]", ".", "str", ".", "find", "all", "(", "P", "AT", "TERN", ")", ".", "fl", "atten", "()", "\n"], "logprobs": [-1.0538175106048584, -0.028435029089450836, -0.0050779180601239204, -0.0026018121279776096, -0.07442378252744675, -0.8103836178779602, -0.05304352939128876, -0.3512715995311737, -0.0006680640508420765, -0.0009410720085725188, -0.040634941309690475, -1.168244216387393e-05, -8.702239938429557e-06, -0.025260096415877342, -1.9508771896362305, -2.471221446990967, -0.0003296785580459982, -0.00326017988845706, -0.4753246605396271], "finish_reason": "stop"}, {"text": " [item for sublist in matches for item in sublist]", "tokens": [" [", "item", " for", " subl", "ist", " in", " matches", " for", " item", " in", " subl", "ist", "]", "\n"], "logprobs": [-1.2945215702056885, -0.779920756816864, -0.0058621857315301895, -0.03186345472931862, -0.001134943449869752, -0.0003023882454726845, -0.014616905711591244, -0.5856101512908936, -0.00014482879487331957, -3.969590397900902e-05, -0.0014605579199269414, -0.0021489402279257774, -0.01030387356877327, -0.00956134032458067], "finish_reason": "stop"}, {"text": " pd.Series(Counter(flattened_matches))", "tokens": [" pd", ".", "Series", "(", "Counter", "(", "fl", "att", "ened", "_", "matches", "))", "\n"], "logprobs": [-1.9123960733413696, -0.0008338788175024092, -0.03109169565141201, -0.0212476197630167, -3.4569125175476074, -0.0026648270431905985, -0.014476625248789787, -6.937739817658439e-05, -0.0004078510100953281, -1.311301275563892e-06, -1.2755313036905136e-05, -0.8419103622436523, -0.2066100537776947], "finish_reason": "stop"}, {"text": " counts<|endoftext|>#!/usr/bin/env python3", "tokens": [" counts", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.006236615125089884, -1.1947230100631714, -2.0265558760002023e-06, -7.152555099310121e-07, -1.0132738680113107e-05, -0.00010513706365600228, -0.05781024321913719, -0.9318191409111023, -1.1469016075134277, -0.04710830748081207, -0.11005615442991257, -0.00020239688456058502, -0.006828070152550936, -0.00032729512895457447, -0.06623385846614838, -0.005486074835062027, -0.6566134691238403, -0.03104616329073906], "finish_reason": "stop"}], "metrics": {"energy": 121.2159448623657, "energy_per_token": 1.893999138474464, "time": 4.5223613, "time_per_token": 0.0706618953125}}
{"outputs": [{"text": " df[column]", "tokens": [" df", "[", "column", "]", "\n"], "logprobs": [-1.0538175106048584, -0.028435029089450836, -0.0050779180601239204, -0.0026018121279776096, -2.685502052307129], "finish_reason": "stop"}, {"text": " [match for sublist in matches.apply(list) for match in sublist]", "tokens": [" [", "match", " for", " subl", "ist", " in", " matches", ".", "apply", "(", "list", ")", " for", " match", " in", " subl", "ist", "]", "\n"], "logprobs": [-1.2945215702056885, -1.071808099746704, -0.06306159496307373, -0.5181947946548462, -0.0010923140216618776, -0.0004522969538811594, -0.009314768947660923, -0.8534628748893738, -1.6052513122558594, -0.003081456758081913, -1.0634597539901733, -0.0058794887736439705, -0.27938297390937805, -0.0006229128921404481, -0.000316927267704159, -0.003947918768972158, -0.0006277974462136626, -0.017001595348119736, -0.008970082737505436], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -0.15434344112873077, -0.007039506919682026], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 46.25352784347534, "energy_per_token": 1.0756634382203567, "time": 2.6822774, "time_per_token": 0.062378544186046506}}
{"outputs": [{"text": " df[column]", "tokens": [" df", "[", "column", "]", "\n"], "logprobs": [-1.0538175106048584, -0.028435029089450836, -0.0050779180601239204, -0.0026018121279776096, -2.685502052307129], "finish_reason": "stop"}, {"text": " [item for sublist in matches for item in sublist]", "tokens": [" [", "item", " for", " subl", "ist", " in", " matches", " for", " item", " in", " subl", "ist", "]", "\n"], "logprobs": [-1.2945215702056885, -0.779920756816864, -0.0058621857315301895, -0.03186345472931862, -0.001134943449869752, -0.0003023882454726845, -0.014616905711591244, -0.5856101512908936, -0.00014482879487331957, -3.969590397900902e-05, -0.0014605579199269414, -0.0021489402279257774, -0.01030387356877327, -0.00956134032458067], "finish_reason": "stop"}, {"text": " np.unique(flattened_matches, return_counts=True)[1]", "tokens": [" np", ".", "unique", "(", "fl", "att", "ened", "_", "matches", ",", " return", "_", "counts", "=", "True", ")[", "1", "]", "\n"], "logprobs": [-0.6633096933364868, -0.0010788579238578677, -0.11042022705078125, -0.0014353221049532294, -0.023468462750315666, -4.2676016164477915e-05, -0.0005312938592396677, -1.1920922133867862e-06, -8.22540732769994e-06, -0.14664886891841888, -0.0038067272398620844, -4.768370445162873e-07, -0.011557410471141338, -0.006727071478962898, -0.002526664873585105, -1.9554070234298706, -0.0022327988408505917, -0.0008361419313587248, -0.015435402281582355], "finish_reason": "stop"}, {"text": " counts", "tokens": [" counts", "\n"], "logprobs": [-0.005066294688731432, -0.6838353276252747], "finish_reason": "stop"}], "metrics": {"energy": 91.03545083999634, "energy_per_token": 2.2758862709999086, "time": 3.496797, "time_per_token": 0.087419925}}
