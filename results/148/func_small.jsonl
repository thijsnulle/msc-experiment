{"outputs": [{"text": "return df.copy()", "tokens": ["return", " df", ".", "copy", "()", "\n", "\n", "def"], "logprobs": [-1.8412235975265503, -0.3681522607803345, -0.5135397911071777, -0.48421385884284973, -0.06053822487592697, -0.21296311914920807, -0.09362359344959259, -0.676006019115448], "finish_reason": "stop"}], "metrics": {"energy": 18.291447105407716, "energy_per_token": 2.2864308881759645, "time": 1.0637933, "time_per_token": 0.1329741625}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"df must be a pandas DataFrame\")\n    if not isinstance(column_name, str):\n        raise ValueError(\"column_name must be a string\")\n\n    df[column_name] = LabelEncoder().fit_transform(df[column_name])\n\n    return df", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n", "    ", "if", " not", " isinstance", "(", "column", "_", "name", ",", " str", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "column", "_", "name", " must", " be", " a", " string", "\"", ")", "\n", "\n", "    ", "df", "[", "column", "_", "name", "]", " =", " Label", "Encoder", "()", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-2.929932117462158, -0.47935208678245544, -0.19038096070289612, -0.0002348147245356813, -0.10118984431028366, -0.002384559018537402, -0.006530373357236385, -2.5510462364763953e-05, -0.009685428813099861, -0.1540013551712036, -0.008259189315140247, -0.0016832482069730759, -0.060887016355991364, -2.270524501800537, -0.0003511289251036942, -0.12825268507003784, -0.19515089690685272, -1.0166040658950806, -0.2580198049545288, -0.0014027050929144025, -0.07304412871599197, -0.46557071805000305, -0.06991910934448242, -0.004360097460448742, -0.4339616298675537, -0.00013767725613433868, -0.00229904823936522, -0.5570333003997803, -0.05985667556524277, -0.16915546357631683, -0.027980495244264603, -1.9311717551317997e-05, -0.009532883763313293, -5.2689116273541003e-05, -1.2040065485052764e-05, -4.1483970562694594e-05, -0.0019091013818979263, -0.033221159130334854, -0.0005993238883093, -0.00022146634000819176, -0.00168658047914505, -0.03288323059678078, -0.0001525762490928173, -0.002259679604321718, -0.022352071478962898, -0.012093554250895977, -0.010242754593491554, -0.00013982271775603294, -0.001095529063604772, -0.0004618293314706534, -0.004455401562154293, -0.03713003918528557, -0.0041105784475803375, -0.00013553177996072918, -0.003171060001477599, -1.2224962711334229, -0.0006344689172692597, -2.3991289138793945, -0.3196316063404083, -0.005022171884775162, -5.364403477869928e-06, -2.7418097943154862e-06, -0.002900443272665143, -0.02362215705215931, -0.2449185997247696, -3.8265450712060556e-05, -0.002757082926109433, -0.00046921687317080796, -0.0031241201795637608, -0.009167601354420185, -0.00018869050836656243, -0.00031740395934320986, -0.022089393809437752, -0.00255769956856966, -0.00010930894495686516, -5.006777428206988e-06, -8.344646857949556e-07, -0.012368994764983654, -0.032039299607276917, -1.2108603715896606, -0.0025550834834575653, -0.00334251974709332, -0.0006094505661167204, -1.146620273590088, -0.008340527303516865, -1.3139592409133911], "finish_reason": "stop"}], "metrics": {"energy": 122.66420637702943, "energy_per_token": 1.4263279811282492, "time": 3.5607328, "time_per_token": 0.041403869767441856}}
{"outputs": [{"text": "return df.apply(lambda x: pd.Series(LabelEncoder().fit_transform(x[column_name])), axis=1)", "tokens": ["return", " df", ".", "apply", "(", "lambda", " x", ":", " pd", ".", "Series", "(", "Label", "Encoder", "()", ".", "fit", "_", "transform", "(", "x", "[", "column", "_", "name", "]))", ",", " axis", "=", "1", ")"], "logprobs": [-1.915535569190979, -0.457431435585022, -0.5566019415855408, -3.0037453174591064, -0.4382164478302002, -0.8051360249519348, -0.20988629758358002, -0.0011829291470348835, -2.128767490386963, -0.0007519278442487121, -0.26758432388305664, -0.010402152314782143, -0.09924092143774033, -6.615896563744172e-05, -0.004779580980539322, -0.00040713604539632797, -0.009960471652448177, -0.0032661210279911757, -0.0005141366855241358, -0.024114402011036873, -0.09274858236312866, -0.5893771052360535, -0.002649846486747265, -0.00013553177996072918, -9.179073458653875e-06, -0.2581596076488495, -0.011772915720939636, -0.029614094644784927, -0.007775516249239445, -0.005574870388954878, -0.6490210890769958], "finish_reason": "stop"}], "metrics": {"energy": 24.641214401245115, "energy_per_token": 0.7948778839111328, "time": 1.2740291, "time_per_token": 0.0410977129032258}}
{"outputs": [{"text": "le = LabelEncoder()\n    return df.assign(encoded_col=le.fit_transform(df[column_name]))", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "return", " df", ".", "assign", "(", "encoded", "_", "col", "=", "le", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "]))", "\n", "\n", "#"], "logprobs": [-1.8382841348648071, -0.006935688201338053, -0.003164999419823289, -8.809178689261898e-05, -0.003605177393183112, -0.029828058555722237, -0.04350028932094574, -1.770552635192871, -0.09782624989748001, -0.10337021201848984, -0.8155063986778259, -0.0030343940015882254, -2.1350936889648438, -0.6054341793060303, -1.7283401489257812, -0.0340438187122345, -0.014183311723172665, -0.0026806395035237074, -0.0237750131636858, -0.0002165798214264214, -0.00021634146105498075, -0.015034575015306473, -0.026203254237771034, -0.010818284004926682, -0.0007855190197005868, -4.482168878894299e-05, -3.4570634852570947e-06, -0.03377220779657364, -0.6276422739028931, -0.019083354622125626, -2.177621364593506], "finish_reason": "stop"}], "metrics": {"energy": 44.869046642303466, "energy_per_token": 1.447388601364628, "time": 1.0511726, "time_per_token": 0.03390879354838709}}
{"outputs": [{"text": "df[column_name] = LabelEncoder().fit_transform(df[column_name])\n    return df", "tokens": ["df", "[", "column", "_", "name", "]", " =", " Label", "Encoder", "()", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-2.7452149391174316, -0.4772384464740753, -0.009760159067809582, -4.005352093372494e-05, -1.811964830267243e-05, -0.005859341472387314, -0.03044215403497219, -0.1680002510547638, -3.302042750874534e-05, -0.00423938175663352, -0.0008728270186111331, -0.0016462358180433512, -0.009204808622598648, -0.00019894051365554333, -0.0005497612874023616, -0.011170586571097374, -0.002680877223610878, -0.00013422065239865333, -6.6756979322235566e-06, -2.3841830625315197e-06, -0.015325172804296017, -0.024768879637122154, -0.06320317089557648, -0.005300278775393963, -0.001082192175090313, -0.6473687291145325, -3.576278118089249e-07, -4.768370445162873e-07, -3.1470757676288486e-05, -0.0001209901092806831, -2.68166446685791, -0.008880997076630592], "finish_reason": "stop"}], "metrics": {"energy": 43.65308814239502, "energy_per_token": 1.3641590044498444, "time": 1.0605994, "time_per_token": 0.03314373125}}
{"outputs": [{"text": "# Create a LabelEncoder object\n    le = LabelEncoder()\n\n    # Encode the data in the specified column\n    df[column_name] = le.fit_transform(df[column_name])\n\n    return df", "tokens": ["#", " Create", " a", " Label", "Encoder", " object", "\n", "    ", "le", " =", " Label", "Encoder", "()", "\n", "\n", "    ", "#", " Enc", "ode", " the", " data", " in", " the", " specified", " column", "\n", "    ", "df", "[", "column", "_", "name", "]", " =", " le", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.4893251657485962, -2.414559841156006, -0.34680694341659546, -0.20711827278137207, -0.024823885411024094, -0.3241431713104248, -0.3080895245075226, -0.0009055804111994803, -0.6751694083213806, -0.0025676873046904802, -0.0010528980055823922, -2.8609820219571702e-05, -0.0009651293512433767, -0.0021360930986702442, -0.20325377583503723, -0.0003675738989841193, -0.01273240428417921, -0.5774362087249756, -0.0029463237151503563, -0.031180210411548615, -1.8598709106445312, -0.9326942563056946, -0.04812925308942795, -0.3427261710166931, -0.0020944580901414156, -0.19938893616199493, -0.00018261195509694517, -0.7549367547035217, -0.02493295632302761, -0.000962032878305763, -2.3841855067985307e-07, -4.529942543740617e-06, -0.0005754960584454238, -0.0017752378480508924, -0.005982468836009502, -1.6093124941107817e-05, -0.010632414370775223, -0.000301673193462193, -0.0003623305819928646, -0.0002526917669456452, -0.0036427113227546215, -0.0015378089156001806, -0.0001248043408850208, -9.536697689327411e-06, -1.1920922133867862e-06, -0.005682149436324835, -0.00599787337705493, -0.03200870379805565, -0.0005453529884107411, -0.3783324360847473, -0.0008500776602886617, -0.623840868473053, -3.576278118089249e-07, -5.960462772236497e-07, -5.6980417866725475e-05, -0.0001397035230183974, -0.06274311989545822], "finish_reason": "stop"}], "metrics": {"energy": 80.0726659965515, "energy_per_token": 1.4047836139745877, "time": 2.3308463, "time_per_token": 0.04089204035087719}}
{"outputs": [{"text": "return LabelEncoder().fit_transform(df[column_name])", "tokens": ["return", " Label", "Encoder", "()", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "\n", "#"], "logprobs": [-1.915535569190979, -2.6274161338806152, -0.0002867764269467443, -0.010534276254475117, -0.0007372760446742177, -0.001167926355265081, -0.016578415408730507, -0.00017987063620239496, -0.002970332745462656, -0.03290687873959541, -0.027304336428642273, -0.0012962757609784603, -1.6689286894688848e-06, -5.364403477869928e-06, -0.05058266967535019, -1.2944201231002808, -0.03246983513236046, -2.3162636756896973], "finish_reason": "stop"}], "metrics": {"energy": 9.261997232437134, "energy_per_token": 0.5145554018020629, "time": 0.6505688, "time_per_token": 0.03614271111111111}}
{"outputs": [{"text": "return df.copy().loc[:, column_name].fillna(0).replace({k: v for v, k in LabelEncoder().fit_transform(df[column_name]).items()})", "tokens": ["return", " df", ".", "copy", "()", ".", "loc", "[:", ",", " column", "_", "name", "]", ".", "fill", "na", "(", "0", ")", ".", "replace", "({", "k", ":", " v", " for", " v", ",", " k", " in", " Label", "Encoder", "()", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", ".", "items", "()", "})", "\n", "\n", "if"], "logprobs": [-1.915535569190979, -0.457431435585022, -0.5566019415855408, -0.48994186520576477, -0.07690577954053879, -3.087083339691162, -2.042755603790283, -0.005677289329469204, -0.0011700696777552366, -0.32594722509384155, -0.00013040646445006132, -2.3841574147809297e-05, -0.01063854806125164, -0.018123621121048927, -3.9862732887268066, -4.6132929128361866e-05, -0.44230687618255615, -0.8757562041282654, -0.00917102675884962, -0.0631137564778328, -1.8381482362747192, -1.471237301826477, -2.5241384506225586, -0.010759908705949783, -0.3060678243637085, -0.08048500120639801, -0.2819311320781708, -0.04618615284562111, -0.023845087736845016, -0.007233856711536646, -2.309116840362549, -0.0001559135998832062, -0.005242885090410709, -0.01418060902506113, -0.01767140068113804, -0.5157319903373718, -0.000311802898067981, -0.026847895234823227, -0.3231286108493805, -0.5155057907104492, -0.0022902467753738165, -1.8596476365928538e-05, -6.6756979322235566e-06, -0.4274102449417114, -0.2293234020471573, -0.1828235387802124, -0.09708462655544281, -0.031130868941545486, -0.9455071687698364, -0.02447054535150528, -1.112825632095337], "finish_reason": "stop"}], "metrics": {"energy": 33.99645183181762, "energy_per_token": 0.6665970947415221, "time": 1.9001764, "time_per_token": 0.03725836078431373}}
{"outputs": [{"text": "# Create a label encoder object\n    le = LabelEncoder()\n\n    # Fit the label encoder to the column\n    encoded_col = le.fit_transform(df[column_name])\n\n    # Create a new column with the encoded data\n    df[column_name] = encoded_col\n\n    # Return the DataFrame\n    return df", "tokens": ["#", " Create", " a", " label", " encoder", " object", "\n", "    ", "le", " =", " Label", "Encoder", "()", "\n", "\n", "    ", "#", " Fit", " the", " label", " encoder", " to", " the", " column", "\n", "    ", "encoded", "_", "col", " =", " le", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "\n", "    ", "#", " Create", " a", " new", " column", " with", " the", " encoded", " data", "\n", "    ", "df", "[", "column", "_", "name", "]", " =", " encoded", "_", "col", "\n", "\n", "    ", "#", " Return", " the", " Data", "Frame", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.4893251657485962, -2.414559841156006, -0.34680694341659546, -2.9129154682159424, -0.028936145827174187, -1.5598082542419434, -0.15550288558006287, -0.0006571040721610188, -0.5809997916221619, -0.0015892268856987357, -0.001053850632160902, -2.992108420585282e-05, -0.0006878394051454961, -0.002712501445785165, -0.1805737465620041, -0.0002530493075028062, -0.010336319915950298, -1.1273612976074219, -0.39232373237609863, -0.15306010842323303, -0.0018661479698494077, -0.5534971952438354, -0.028233399614691734, -0.8697709441184998, -0.6284351944923401, -0.00017593742813915014, -2.509279489517212, -0.042750485241413116, -2.2291924953460693, -0.008433443494141102, -0.036408890038728714, -3.862306402879767e-05, -0.00029297350556589663, -0.029873182997107506, -0.000750617531593889, -0.0032989149913191795, -0.012854806147515774, -0.004832849372178316, -0.00029869386344216764, -4.327203714638017e-05, -1.9073468138230965e-06, -0.016122445464134216, -0.00920882448554039, -0.07014185190200806, -0.00025722055579535663, -0.013685094192624092, -0.39952126145362854, -0.03470829874277115, -0.051557958126068115, -1.5655009746551514, -0.36221247911453247, -0.05471042916178703, -0.04481346160173416, -1.623476266860962, -0.046372245997190475, -0.00024232311989180744, -0.21078425645828247, -0.125267893075943, -0.047163236886262894, -5.483612312673358e-06, -5.125986263010418e-06, -0.14292332530021667, -0.00030655929003842175, -0.01972733996808529, -3.659658250398934e-05, -2.276871418871451e-05, -0.005653937812894583, -0.04576455429196358, -0.00045622908510267735, -1.0956233739852905, -0.0736750066280365, -0.00895306933671236, -0.8961074352264404, -0.0010528980055823922, -0.4841664135456085, -0.0010397987207397819, -0.0011200590524822474, -0.0013405631761997938, -0.6996740102767944, -3.576278118089249e-07, -3.576278118089249e-07, -2.6464111215318553e-05, -8.880697714630514e-05, -0.07595060020685196], "finish_reason": "stop"}], "metrics": {"energy": 89.79433961772918, "energy_per_token": 1.068980233544395, "time": 3.3760414, "time_per_token": 0.04019096904761905}}
{"outputs": [{"text": "le = LabelEncoder()\n    return df.copy().assign(**{column_name: le.fit_transform(df[column_name])})", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "return", " df", ".", "copy", "()", ".", "assign", "(", "**", "{", "column", "_", "name", ":", " le", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", "})", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.8382841348648071, -0.006935688201338053, -0.003164999419823289, -8.809178689261898e-05, -0.003605177393183112, -0.029828058555722237, -0.04350028932094574, -1.770552635192871, -0.09782624989748001, -0.10337021201848984, -0.8505825400352478, -0.09494795650243759, -0.3565804958343506, -0.6521005034446716, -0.002410603454336524, -0.42112383246421814, -0.003167851595208049, -0.011838654056191444, -0.00021872512297704816, -4.291525328881107e-06, -0.0009490515221841633, -0.010865453630685806, -0.00028308198670856655, -0.018521808087825775, -0.00019560330838430673, -0.0002526917669456452, -0.010829368606209755, -0.029969673603773117, -0.005903071723878384, -0.0002431573811918497, -1.5616295058862306e-05, -1.1920922133867862e-06, -0.00261310744099319, -0.004966304171830416, -0.8514392971992493, -3.576278118089249e-07, -4.768370445162873e-07, -0.00031740395934320986, -0.00012790338951162994, -0.0828145295381546], "finish_reason": "stop"}], "metrics": {"energy": 52.28232879638671, "energy_per_token": 1.3070582199096676, "time": 1.489394, "time_per_token": 0.03723485}}
{"outputs": [{"text": "column = df[column_name]\n    le = LabelEncoder()\n    df[column_name] = le.fit_transform(column)\n    return df", "tokens": ["column", " =", " df", "[", "column", "_", "name", "]", "\n", "    ", "le", " =", " Label", "Encoder", "()", "\n", "    ", "df", "[", "column", "_", "name", "]", " =", " le", ".", "fit", "_", "transform", "(", "column", ")", "\n", "    ", "return", " df", "\n", "\n", "def"], "logprobs": [-3.3108296394348145, -0.17317548394203186, -0.024286730214953423, -0.04009201377630234, -0.001278893556445837, -7.152531907195225e-06, -2.264974000354414e-06, -0.00013064485392533243, -0.06997713446617126, -0.06831859052181244, -1.084498643875122, -0.0038378408644348383, -0.001712642959319055, -5.638440416078083e-05, -0.001866623992100358, -0.018523212522268295, -0.008266283199191093, -2.472425937652588, -0.11077381670475006, -0.00448020501062274, -0.002513109240680933, -1.9073468138230965e-06, -0.016311051324009895, -0.0014444880653172731, -0.004867252893745899, -8.010543388081715e-05, -0.014971277676522732, -0.0003293210465926677, -0.00031013446277938783, -0.0006600823253393173, -0.02658674493432045, -0.04661371558904648, -0.009561458602547646, -0.16417056322097778, -0.012001920491456985, -0.0019306369358673692, -0.8552350401878357, -0.01365451980382204, -0.9729688167572021], "finish_reason": "stop"}], "metrics": {"energy": 56.61479084014893, "energy_per_token": 1.4516613035935622, "time": 1.4909978, "time_per_token": 0.03823071282051282}}
{"outputs": [{"text": "encoder = LabelEncoder()\n    return df[[column_name]].apply(encoder.fit_transform)", "tokens": ["encoder", " =", " Label", "Encoder", "()", "\n", "    ", "return", " df", "[[", "column", "_", "name", "]]", ".", "apply", "(", "encoder", ".", "fit", "_", "transform", ")", "\n", "\n", "def"], "logprobs": [-2.3354859352111816, -0.010423741303384304, -0.006938647944480181, -5.411955135059543e-05, -0.0038384345825761557, -0.02318604476749897, -0.029799826443195343, -2.1731483936309814, -0.7297529578208923, -2.7165024280548096, -0.005591585300862789, -0.00011753345461329445, -7.867782187531702e-06, -0.004676714073866606, -0.003689507720991969, -0.4060305655002594, -0.021298734471201897, -0.19419392943382263, -0.004840085748583078, -0.45865964889526367, -0.00010775939153973013, -0.0005351065192371607, -0.2127852588891983, -0.3861314654350281, -0.019989002496004105, -1.0517007112503052], "finish_reason": "stop"}], "metrics": {"energy": 18.954110984802245, "energy_per_token": 0.7290042686462402, "time": 0.85542935, "time_per_token": 0.03290112884615384}}
{"outputs": [{"text": "col_to_encode = df[column_name]\n    # TODO: Use LabelEncoder\n    # hint:\n    # https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelEncoder.html\n    #\n    # TODO: You must return the `df` with the encoded column, and not only the `df`!\n\n    return None", "tokens": ["col", "_", "to", "_", "encode", " =", " df", "[", "column", "_", "name", "]", "\n", "    ", "#", " TODO", ":", " Use", " Label", "Encoder", "\n", "    ", "#", " hint", ":", "\n", "    ", "#", " https", "://", "sci", "kit", "-", "learn", ".", "org", "/", "stable", "/", "modules", "/", "generated", "/", "sk", "learn", ".", "pre", "processing", ".", "Label", "Encoder", ".", "html", "\n", "    ", "#", "\n", "    ", "#", " TODO", ":", " You", " must", " return", " the", " `", "df", "`", " with", " the", " encoded", " column", ",", " and", " not", " only", " the", " `", "df", "`", "!", "\n", "\n", "    ", "return", " None", "\n", "\n", "def"], "logprobs": [-4.143116474151611, -1.5191895961761475, -2.0919442176818848, -0.0012696071062237024, -0.09308730065822601, -0.026344453915953636, -0.022102337330579758, -0.03023815155029297, -0.0024802894331514835, -4.1960789531003684e-05, -7.390948667307384e-06, -0.00018880968855228275, -0.10786175727844238, -0.08744742721319199, -2.6931440830230713, -1.706969141960144, -0.2165907919406891, -3.251866340637207, -0.9573793411254883, -0.0744147077202797, -2.6987500190734863, -0.0633629634976387, -1.9341950416564941, -3.7531070709228516, -0.09473132342100143, -3.796100378036499, -0.008976816199719906, -0.05033183842897415, -1.810380220413208, -0.0010824303608387709, -0.9776298999786377, -0.0016739654820412397, -0.0002910667099058628, -0.0012832987122237682, -0.00035982808913104236, -0.0015456646215170622, -0.0004634975048247725, -0.007303088903427124, -0.003932957071810961, -0.1853446364402771, -0.0009838269324973226, -0.011991790495812893, -0.0005346299149096012, -0.023115340620279312, -0.00024685196694917977, -7.080780778778717e-05, -0.0028101024217903614, -6.770858453819528e-05, -0.00015639036428183317, -0.0037639739457517862, -0.00017653337272349745, -0.007332200650125742, -0.0010239601833745837, -0.41159549355506897, -0.22094081342220306, -0.905730664730072, -2.6400041580200195, -0.035170719027519226, -0.1896923929452896, -2.5921263694763184, -0.020033521577715874, -4.724070072174072, -2.0803215503692627, -1.3524523973464966, -0.6761122345924377, -3.8657498359680176, -0.47847384214401245, -0.004062851890921593, -1.1400132179260254, -0.18541911244392395, -0.6746428608894348, -0.19580622017383575, -2.8657948970794678, -3.097383737564087, -0.614118754863739, -2.3539035320281982, -0.18430694937705994, -0.505799412727356, -2.6321821212768555, -0.3722397983074188, -3.955028772354126, -0.2625412940979004, -2.102616548538208, -0.04971180483698845, -0.525088369846344, -2.4244558811187744, -0.5627040266990662, -0.0482211597263813, -0.8158443570137024], "finish_reason": "stop"}], "metrics": {"energy": 113.21007998466492, "energy_per_token": 1.2720233706142126, "time": 3.577331, "time_per_token": 0.040194730337078655}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(df[column_name].values)\n    return df.assign(encoded=le.transform(df[column_name]))", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "df", "[", "column", "_", "name", "]", ".", "values", ")", "\n", "    ", "return", " df", ".", "assign", "(", "encoded", "=", "le", ".", "transform", "(", "df", "[", "column", "_", "name", "]))"], "logprobs": [-1.8382841348648071, -0.006935688201338053, -0.003164999419823289, -8.809178689261898e-05, -0.003605177393183112, -0.029828058555722237, -0.04350028932094574, -0.8817224502563477, -0.0470401868224144, -0.00038699767901562154, -0.01431058906018734, -0.015120061114430428, -0.006290279794484377, -0.0006752118351869285, -3.0636318115284666e-05, -4.6491513785440475e-06, -1.9472709894180298, -0.0005737089086323977, -0.6989356279373169, -0.027339715510606766, -0.011079810559749603, -0.06345772743225098, -1.0322555303573608, -0.17649589478969574, -0.03788452595472336, -0.6228178143501282, -0.005016122944653034, -2.263636589050293, -1.083755373954773, -0.007099993526935577, -0.0006934384000487626, -0.0022971450816839933, -0.004373509436845779, -0.006220977287739515, -0.005007463973015547, -0.00014244495832826942, -1.0251946150674485e-05, -1.0371154530730564e-05, -0.15148860216140747], "finish_reason": "stop"}], "metrics": {"energy": 50.96671798706054, "energy_per_token": 1.306838922745142, "time": 1.4883778, "time_per_token": 0.03816353333333333}}
{"outputs": [{"text": "# YOUR CODE GOES HERE\n    encoder = LabelEncoder()\n    df[column_name] = encoder.fit_transform(df[column_name])\n\n    return df", "tokens": ["#", " YOUR", " C", "ODE", " GO", "ES", " HERE", "\n", "    ", "encoder", " =", " Label", "Encoder", "()", "\n", "    ", "df", "[", "column", "_", "name", "]", " =", " encoder", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.4893251657485962, -3.332674503326416, -0.010536989197134972, -7.86750388215296e-05, -0.6383185982704163, -0.00010275312524754554, -0.006863588932901621, -0.24627110362052917, -0.166105717420578, -2.5042243003845215, -0.014668477699160576, -0.006720914039760828, -7.211902266135439e-05, -0.005195805337280035, -0.027856916189193726, -0.04109474644064903, -1.7321653366088867, -0.12263815104961395, -0.00518062524497509, -0.0001287377526750788, -2.6464111215318553e-05, -0.0066032069735229015, -0.009844915941357613, -0.004809715319424868, -0.00037281715776771307, -0.007491471711546183, -0.0032507930882275105, -0.00022671037004329264, -0.0006765222642570734, -0.008995955809950829, -0.0028393452521413565, -0.0002460177056491375, -9.417489309271332e-06, -1.9073468138230965e-06, -0.008824517019093037, -0.013066855259239674, -1.970860242843628, -0.006050721742212772, -0.029555650427937508, -0.006133661139756441, -0.8862153887748718, -2.3841855067985307e-07, -7.152555099310121e-07, -6.615896563744172e-05, -0.00013636612857226282, -2.84415340423584, -0.007635692600160837], "finish_reason": "stop"}], "metrics": {"energy": 50.7483470993042, "energy_per_token": 1.0797520659426425, "time": 1.9058583, "time_per_token": 0.04055017659574468}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(df[column_name])\n    df[column_name] = le.transform(df[column_name])\n    return df", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "df", "[", "column", "_", "name", "])", "\n", "    ", "df", "[", "column", "_", "name", "]", " =", " le", ".", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.8382841348648071, -0.006935688201338053, -0.003164999419823289, -8.809178689261898e-05, -0.003605177393183112, -0.029828058555722237, -0.04350028932094574, -0.8817224502563477, -0.0470401868224144, -0.00038699767901562154, -0.01431058906018734, -0.015120061114430428, -0.006290279794484377, -0.0006752118351869285, -3.0636318115284666e-05, -4.6491513785440475e-06, -0.15407340228557587, -0.005769860465079546, -0.058307088911533356, -1.18301522731781, -0.18735967576503754, -0.003172842552885413, -6.556489552167477e-06, -7.152555099310121e-07, -0.009201737120747566, -0.002702039433643222, -0.006352470256388187, -0.00011038171214750037, -0.0013833011034876108, -0.0003675738989841193, -0.0018670998979359865, -0.0003666205739136785, -2.47952248173533e-05, -9.059865078597795e-06, -5.960462772236497e-07, -0.0013191340258345008, -0.009672324173152447, -0.11144063621759415, -0.013431422412395477, -0.0018734062323346734, -0.8146346211433411, -3.576278118089249e-07, -7.152555099310121e-07, -4.279521817807108e-05, -8.976056415122002e-05, -0.06713850051164627], "finish_reason": "stop"}], "metrics": {"energy": 45.844676916122424, "energy_per_token": 0.9966234112200527, "time": 1.9042999, "time_per_token": 0.04139782391304348}}
{"outputs": [{"text": "df[column_name] = LabelEncoder().fit_transform(df[column_name])\n    return df", "tokens": ["df", "[", "column", "_", "name", "]", " =", " Label", "Encoder", "()", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-2.7452149391174316, -0.4772384464740753, -0.009760159067809582, -4.005352093372494e-05, -1.811964830267243e-05, -0.005859341472387314, -0.03044215403497219, -0.1680002510547638, -3.302042750874534e-05, -0.00423938175663352, -0.0008728270186111331, -0.0016462358180433512, -0.009204808622598648, -0.00019894051365554333, -0.0005497612874023616, -0.011170586571097374, -0.002680877223610878, -0.00013422065239865333, -6.6756979322235566e-06, -2.3841830625315197e-06, -0.015325172804296017, -0.024768879637122154, -0.06320317089557648, -0.005300278775393963, -0.001082192175090313, -1.0875790119171143, -0.010290305130183697, -1.262992024421692], "finish_reason": "stop"}], "metrics": {"energy": 40.84466496276855, "energy_per_token": 1.458738034384591, "time": 1.068419, "time_per_token": 0.03815782142857143}}
{"outputs": [{"text": "le = LabelEncoder()\n    df[column_name] = le.fit_transform(df[column_name])\n    return df", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "df", "[", "column", "_", "name", "]", " =", " le", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "    ", "return", " df", "\n", "\n", "def"], "logprobs": [-1.8382841348648071, -0.006935688201338053, -0.003164999419823289, -8.809178689261898e-05, -0.003605177393183112, -0.029828058555722237, -0.04350028932094574, -1.4345884323120117, -0.045096561312675476, -0.00258516613394022, -6.913899414939806e-05, -1.2040065485052764e-05, -0.0028046341612935066, -0.007917449809610844, -0.02409694716334343, -0.00010895135346800089, -0.007294805254787207, -0.0009170140838250518, -0.0003904534096363932, -0.00044347942457534373, -0.0057559930719435215, -0.002463046694174409, -0.00019810620869975537, -9.179073458653875e-06, -1.6689286894688848e-06, -0.021935347467660904, -0.017529089003801346, -0.09521114081144333, -0.009992929175496101, -0.0013294914970174432, -0.8883497714996338, -0.012161155231297016, -0.9476363062858582], "finish_reason": "stop"}], "metrics": {"energy": 29.867998294830322, "energy_per_token": 0.9050908574191007, "time": 1.2800655, "time_per_token": 0.038789863636363636}}
{"outputs": [{"text": "le = LabelEncoder()\n    df[column_name] = le.fit_transform(df[column_name])\n\n    return df", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "df", "[", "column", "_", "name", "]", " =", " le", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.8382841348648071, -0.006935688201338053, -0.003164999419823289, -8.809178689261898e-05, -0.003605177393183112, -0.029828058555722237, -0.04350028932094574, -1.4345884323120117, -0.045096561312675476, -0.00258516613394022, -6.913899414939806e-05, -1.2040065485052764e-05, -0.0028046341612935066, -0.007917449809610844, -0.02409694716334343, -0.00010895135346800089, -0.007294805254787207, -0.0009170140838250518, -0.0003904534096363932, -0.00044347942457534373, -0.0057559930719435215, -0.002463046694174409, -0.00019810620869975537, -9.179073458653875e-06, -1.6689286894688848e-06, -0.021935347467660904, -0.017529089003801346, -2.399242401123047, -0.005897857714444399, -0.011886246502399445, -0.002013205084949732, -0.7595698833465576, -2.3841855067985307e-07, -7.152555099310121e-07, -6.437094270950183e-05, -6.19869097135961e-05, -0.07335413247346878], "finish_reason": "stop"}], "metrics": {"energy": 56.99976536750793, "energy_per_token": 1.540534199121836, "time": 1.6931714, "time_per_token": 0.04576138918918919}}
{"outputs": [{"text": "return pd.DataFrame(df[[column_name]])", "tokens": ["return", " pd", ".", "DataFrame", "(", "df", "[[", "column", "_", "name", "]]", ")", "\n", "\n", "if"], "logprobs": [-1.915535569190979, -1.3818050622940063, -5.1616290875244886e-05, -0.2788753807544708, -0.5943180918693542, -1.984900712966919, -2.5815274715423584, -0.0030353448819369078, -5.1377883210079744e-05, -3.933898824470816e-06, -0.00326017988845706, -1.1238951683044434, -0.8311075568199158, -0.039949193596839905, -1.2633657455444336], "finish_reason": "stop"}], "metrics": {"energy": 10.301951662063598, "energy_per_token": 0.6867967774709065, "time": 0.4319882, "time_per_token": 0.028799213333333334}}
{"outputs": [{"text": "# Fill in your code here.\n    return df", "tokens": ["#", " Fill", " in", " your", " code", " here", ".", "\n", "    ", "return", " df", "\n", "\n", "def"], "logprobs": [-1.4893251657485962, -4.555720806121826, -0.33627983927726746, -1.2472803592681885, -0.06972745805978775, -0.08421387523412704, -1.54192054271698, -0.13246317207813263, -0.12116074562072754, -1.5162304639816284, -0.5801834464073181, -0.494729220867157, -0.01364428922533989, -1.0436757802963257], "finish_reason": "stop"}], "metrics": {"energy": 9.059689064025878, "energy_per_token": 0.6471206474304199, "time": 0.44033313, "time_per_token": 0.03145236642857143}}
{"outputs": [{"text": "# TODO: Implement me\n    return None", "tokens": ["#", " TODO", ":", " Im", "plement", " me", "\n", "    ", "return", " None", "\n", "\n", "#"], "logprobs": [-1.4893251657485962, -1.5962921380996704, -0.2502284646034241, -0.84971022605896, -0.001991790486499667, -2.6383657455444336, -0.5944529175758362, -0.11336338520050049, -1.1422981023788452, -1.443476915359497, -0.5001036524772644, -0.004916720557957888, -2.6852574348449707], "finish_reason": "stop"}], "metrics": {"energy": 5.236410552978516, "energy_per_token": 0.40280081176757815, "time": 0.2292789, "time_per_token": 0.017636838461538462}}
{"outputs": [{"text": "encoder = LabelEncoder()\n    encoder.fit(df[column_name])\n    df[column_name] = encoder.transform(df[column_name])\n\n    return df", "tokens": ["encoder", " =", " Label", "Encoder", "()", "\n", "    ", "encoder", ".", "fit", "(", "df", "[", "column", "_", "name", "])", "\n", "    ", "df", "[", "column", "_", "name", "]", " =", " encoder", ".", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "\n", "    ", "return", " df", "\n", "\n", "def"], "logprobs": [-2.3354859352111816, -0.010423741303384304, -0.006938647944480181, -5.411955135059543e-05, -0.0038384345825761557, -0.02318604476749897, -0.029799826443195343, -0.583726167678833, -0.014369815587997437, -0.0003146630187984556, -0.008164010010659695, -0.007894031703472137, -0.005883518140763044, -0.0006210067658685148, -7.271502545336261e-05, -4.172316494077677e-06, -0.08118341863155365, -0.005797476042062044, -0.05059864744544029, -1.1040961742401123, -0.09303407371044159, -0.0021893836092203856, -5.245195097813848e-06, -3.576278118089249e-07, -0.0063606440089643, -0.0017204972682520747, -0.0016286217141896486, -0.00017808281700126827, -0.0030972626991569996, -0.0006320862448774278, -0.002959516830742359, -0.0003937899600714445, -4.625213477993384e-05, -7.986990567587782e-06, -4.768370445162873e-07, -0.0007514513563364744, -0.015957269817590714, -2.017411470413208, -0.0016264794394373894, -0.00886185560375452, -0.005819757468998432, -1.1748251914978027, -0.006595509592443705, -0.8017725348472595], "finish_reason": "stop"}], "metrics": {"energy": 55.06586860656739, "energy_per_token": 1.2514970137856225, "time": 1.7002447, "time_per_token": 0.038641925}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(df[column_name].unique())\n    return df.assign(**{column_name: le.transform(df[column_name])})", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "df", "[", "column", "_", "name", "]", ".", "unique", "())", "\n", "    ", "return", " df", ".", "assign", "(", "**", "{", "column", "_", "name", ":", " le", ".", "transform", "(", "df", "[", "column", "_", "name", "])", "})", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.8382841348648071, -0.006935688201338053, -0.003164999419823289, -8.809178689261898e-05, -0.003605177393183112, -0.029828058555722237, -0.04350028932094574, -0.8817224502563477, -0.0470401868224144, -0.00038699767901562154, -0.01431058906018734, -0.015120061114430428, -0.006290279794484377, -0.0006752118351869285, -3.0636318115284666e-05, -4.6491513785440475e-06, -1.9472709894180298, -0.0005737089086323977, -1.456166386604309, -0.0036915268283337355, -0.007801302243024111, -0.07182944566011429, -1.058809757232666, -0.11435889452695847, -0.020166248083114624, -0.7302196621894836, -0.0033346780110150576, -0.8307267427444458, -0.005235769785940647, -0.020183071494102478, -1.3112935448589269e-05, -4.172316494077677e-06, -0.004148805979639292, -0.007797162514179945, -0.005102232098579407, -0.0017325166845694184, -0.005846779327839613, -0.007538325153291225, -0.002916370751336217, -8.618460560683161e-05, -8.22540732769994e-06, -8.344646857949556e-07, -0.0005421360838226974, -0.01881689392030239, -0.8699713349342346, -2.3841855067985307e-07, -4.768370445162873e-07, -0.000291662581730634, -0.0001510267611593008, -0.11161305010318756], "finish_reason": "stop"}], "metrics": {"energy": 63.10890798187256, "energy_per_token": 1.2621781596374513, "time": 1.9070367, "time_per_token": 0.038140733999999996}}
{"outputs": [{"text": "encoder = LabelEncoder()\n    encoder.fit(df[column_name])\n    return pd.DataFrame(encoder.transform(df[column_name]))", "tokens": ["encoder", " =", " Label", "Encoder", "()", "\n", "    ", "encoder", ".", "fit", "(", "df", "[", "column", "_", "name", "])", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "encoder", ".", "transform", "(", "df", "[", "column", "_", "name", "]))"], "logprobs": [-2.3354859352111816, -0.010423741303384304, -0.006938647944480181, -5.411955135059543e-05, -0.0038384345825761557, -0.02318604476749897, -0.029799826443195343, -0.583726167678833, -0.014369815587997437, -0.0003146630187984556, -0.008164010010659695, -0.007894031703472137, -0.005883518140763044, -0.0006210067658685148, -7.271502545336261e-05, -4.172316494077677e-06, -0.08118341863155365, -0.005797476042062044, -0.05059864744544029, -1.0929515361785889, -2.280325174331665, -0.0005208089714869857, -0.05100676789879799, -0.39354807138442993, -0.08522852510213852, -0.00015829740732442588, -0.002036522841081023, -0.0020009512081742287, -0.0024034681264311075, -0.002057936741039157, -0.00010418349120300263, -1.3708974620385561e-05, -3.6954811548639555e-06, -1.0303170680999756], "finish_reason": "stop"}], "metrics": {"energy": 21.656293258666988, "energy_per_token": 0.6369498017254996, "time": 1.2805978, "time_per_token": 0.03766464117647059}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(df[column_name])\n    encoded_df = df.copy()\n    encoded_df[column_name] = le.transform(encoded_df[column_name])\n    return encoded_df", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "df", "[", "column", "_", "name", "])", "\n", "    ", "encoded", "_", "df", " =", " df", ".", "copy", "()", "\n", "    ", "encoded", "_", "df", "[", "column", "_", "name", "]", " =", " le", ".", "transform", "(", "encoded", "_", "df", "[", "column", "_", "name", "])", "\n", "    ", "return", " encoded", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.8382841348648071, -0.006935688201338053, -0.003164999419823289, -8.809178689261898e-05, -0.003605177393183112, -0.029828058555722237, -0.04350028932094574, -0.8817224502563477, -0.0470401868224144, -0.00038699767901562154, -0.01431058906018734, -0.015120061114430428, -0.006290279794484377, -0.0006752118351869285, -3.0636318115284666e-05, -4.6491513785440475e-06, -0.15407340228557587, -0.005769860465079546, -0.058307088911533356, -1.3627980947494507, -0.08632000535726547, -0.15124832093715668, -0.0066714175045490265, -0.05956559628248215, -0.015294297598302364, -0.08319765329360962, -0.016324186697602272, -0.014557458460330963, -0.0016156489728018641, -0.01961921900510788, -0.00021491125517059118, -0.0014367506373673677, -0.014263112097978592, -0.0006199345225468278, -5.960446742392378e-06, -5.245195097813848e-06, -0.0007932615117169917, -0.002852896461263299, -0.005987564101815224, -8.022463589441031e-05, -0.0009545299108140171, -0.00013958434283267707, -0.28981199860572815, -5.364403477869928e-06, -5.2569914259947836e-05, -0.00047052756417542696, -4.3987260141875595e-05, -4.768360213347478e-06, -5.960462772236497e-07, -0.0018477048724889755, -0.0040489607490599155, -0.1105840727686882, -0.02522115781903267, -0.0005455912905745208, -7.510157047363464e-06, -2.145764938177308e-06, -0.7568506598472595, -2.3841855067985307e-07, -7.152555099310121e-07, -2.9801878554280847e-05, -0.00011824862303910777, -0.07874707132577896], "finish_reason": "stop"}], "metrics": {"energy": 64.31041800117494, "energy_per_token": 1.0372648064705634, "time": 2.7472641, "time_per_token": 0.04431071129032258}}
{"outputs": [{"text": "return df.copy()\n    # Your code here\n\ntask_func.__doc__ = __doc__", "tokens": ["return", " df", ".", "copy", "()", "\n", "    ", "#", " Your", " code", " here", "\n", "\n", "task", "_", "func", ".", "__", "doc", "__", " =", " __", "doc", "__", "\n", "\n", "if"], "logprobs": [-1.915535569190979, -0.457431435585022, -0.5566019415855408, -0.48994186520576477, -0.07690577954053879, -0.18693120777606964, -2.3560500144958496, -0.2676726281642914, -1.94952392578125, -0.07472816109657288, -0.9698604345321655, -0.273582398891449, -0.14673657715320587, -3.9420082569122314, -0.07358551770448685, -0.19025619328022003, -1.459939956665039, -0.608801543712616, -1.8908050060272217, -0.0011991222854703665, -0.2921797037124634, -2.411431312561035, -0.0440593920648098, -0.00019798702851403505, -1.0732390880584717, -0.12865766882896423, -0.8396968245506287], "finish_reason": "stop"}], "metrics": {"energy": 23.21586833953857, "energy_per_token": 0.8598469755384656, "time": 1.0701864, "time_per_token": 0.039636533333333335}}
{"outputs": [{"text": "column = df[column_name]\n    enc = LabelEncoder()\n    column = enc.fit_transform(column)\n    df.loc[:, column_name] = column\n    return df", "tokens": ["column", " =", " df", "[", "column", "_", "name", "]", "\n", "    ", "enc", " =", " Label", "Encoder", "()", "\n", "    ", "column", " =", " enc", ".", "fit", "_", "transform", "(", "column", ")", "\n", "    ", "df", ".", "loc", "[:", ",", " column", "_", "name", "]", " =", " column", "\n", "    ", "return", " df"], "logprobs": [-3.3108296394348145, -0.17317548394203186, -0.024286730214953423, -0.04009201377630234, -0.001278893556445837, -7.152531907195225e-06, -2.264974000354414e-06, -0.00013064485392533243, -0.06997713446617126, -0.06831859052181244, -3.3309319019317627, -0.06416813284158707, -0.007417045533657074, -6.782778655178845e-05, -0.0026643513701856136, -0.03678871691226959, -0.013670865446329117, -1.3206977844238281, -0.24042144417762756, -0.10970327258110046, -9.703165414975956e-05, -0.006258413195610046, -0.011409393511712551, -0.0008039817912504077, -0.00838462170213461, -0.0072504254058003426, -0.02959546260535717, -0.04717528820037842, -0.032634153962135315, -0.651727557182312, -1.2720236778259277, -0.4513179063796997, -0.004695698153227568, -0.0008687774534337223, -0.016387514770030975, -0.0022218560334295034, -2.622600959512056e-06, -0.001179118873551488, -0.0024131007958203554, -0.08017885684967041, -0.01841367408633232, -0.06620808690786362, -0.010889745317399502, -0.0025884953793138266], "finish_reason": "stop"}], "metrics": {"energy": 35.10553498649597, "energy_per_token": 0.7978530678749084, "time": 1.9108684, "time_per_token": 0.043428827272727274}}
{"outputs": [{"text": "df[column_name] = LabelEncoder().fit_transform(df[column_name])\n    return df", "tokens": ["df", "[", "column", "_", "name", "]", " =", " Label", "Encoder", "()", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.7452149391174316, -0.4772384464740753, -0.009760159067809582, -4.005352093372494e-05, -1.811964830267243e-05, -0.005859341472387314, -0.03044215403497219, -0.1680002510547638, -3.302042750874534e-05, -0.00423938175663352, -0.0008728270186111331, -0.0016462358180433512, -0.009204808622598648, -0.00019894051365554333, -0.0005497612874023616, -0.011170586571097374, -0.002680877223610878, -0.00013422065239865333, -6.6756979322235566e-06, -2.3841830625315197e-06, -0.015325172804296017, -0.024768879637122154, -0.06320317089557648, -0.005300278775393963, -0.001082192175090313, -0.6473687291145325, -3.576278118089249e-07, -4.768370445162873e-07, -3.1470757676288486e-05, -0.0001209901092806831, -0.07248780876398087], "finish_reason": "stop"}], "metrics": {"energy": 39.06806876373292, "energy_per_token": 1.2602602827010618, "time": 1.0700072, "time_per_token": 0.03451636129032258}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise TypeError(\"Input should be a pandas DataFrame.\")\n\n    if column_name not in df.columns:\n        raise ValueError(f\"Column '{column_name}' not found in DataFrame.\")\n\n    df[column_name] = LabelEncoder().fit_transform(df[column_name])\n\n    return df", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " should", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "if", " column", "_", "name", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " '", "{", "column", "_", "name", "}'", " not", " found", " in", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "df", "[", "column", "_", "name", "]", " =", " Label", "Encoder", "()", ".", "fit", "_", "transform", "(", "df", "[", "column", "_", "name", "])", "\n", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.929932117462158, -0.47935208678245544, -0.19038096070289612, -0.0002348147245356813, -0.10118984431028366, -0.002384559018537402, -0.006530373357236385, -2.5510462364763953e-05, -0.009685428813099861, -0.1540013551712036, -0.008259189315140247, -0.0016832482069730759, -0.060887016355991364, -0.13791610300540924, -0.00010501786891836673, -0.15968284010887146, -0.19436413049697876, -1.7302358150482178, -1.6834957599639893, -0.0044701178558170795, -0.2580113410949707, -0.7266876101493835, -0.13846252858638763, -0.01766788773238659, -0.5982931852340698, -0.003710767487064004, -0.00039319414645433426, -0.0028748870827257633, -0.6386591196060181, -0.00029797881143167615, -0.1648010015487671, -0.8255575895309448, -1.490105023549404e-05, -0.0002033503697020933, -0.02195529080927372, -1.0371154530730564e-05, -0.010921582579612732, -0.10467100143432617, -0.011385586112737656, -0.0015230495482683182, -0.0013229437172412872, -0.0003135904553346336, -0.004066176246851683, -0.352584570646286, -2.5152843591058627e-05, -0.003912296146154404, -0.4486730992794037, -0.009851526468992233, -0.3657144606113434, -1.2895128726959229, -0.00010871296399272978, -0.00044467096449807286, -1.6569954823353328e-05, -8.821098163025454e-05, -0.0007969540893100202, -0.1083945780992508, -0.17862753570079803, -0.09426256269216537, -1.3110672235488892, -0.0019152885070070624, -0.020459212362766266, -0.0032537635415792465, -0.00013159839727450162, -0.00227656913921237, -0.006943146698176861, -0.0001597276859683916, -2.5360193252563477, -0.18300046026706696, -0.004430478438735008, -2.145764938177308e-06, -2.9802276912960224e-06, -0.0014867454301565886, -0.01848330721259117, -0.12692752480506897, -4.649054244509898e-05, -0.0027772923931479454, -0.00030357998912222683, -0.0033353909384459257, -0.010643973015248775, -0.0001935771433636546, -0.0001928620331455022, -0.01543035451322794, -0.0013637775555253029, -6.663577369181439e-05, -4.291525328881107e-06, -7.152555099310121e-07, -0.012314477935433388, -0.025395851582288742, -0.9204553365707397, -0.0021045696921646595, -0.0024267768021672964, -0.0005521441926248372, -0.6504902243614197, -2.3841855067985307e-07, -7.152555099310121e-07, -3.3854863431770355e-05, -0.0001209901092806831, -0.09481243044137955], "finish_reason": "stop"}], "metrics": {"energy": 108.71639824295043, "energy_per_token": 1.109351002479086, "time": 4.013132, "time_per_token": 0.040950326530612244}}
