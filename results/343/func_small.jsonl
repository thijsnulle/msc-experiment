{"outputs": [{"text": "# Check if the input df is DataFrame, not empty, and must contain the specified column\n    if not isinstance(df, pd.core.generic.DataFrame) or df.empty or col not in df.columns:\n        raise ValueError(\"Input df must be DataFrame, not empty, and must contain the specified column\")\n\n    # Calculate number of unique values in the specified column\n    num_unique = df[col].nunique()\n\n    # Get the unique values\n    unique_values = df[col].unique()\n\n    # Get the counts of each unique value\n    value_counts = df[col].value_counts()\n\n    # Get the percentage of each unique value in relation to the total count\n    percentages = value_counts.apply(lambda x: x / len(df[col]) * 100)\n\n    # Create a dictionary of color and percentage for each unique value\n    color_percentages = dict(zip(unique_values, percentages))\n\n    # Plot the pie chart using matplotlib\n    plt.pie(list(percentages), labels=list(unique_values), colors=[", "tokens": ["#", " Check", " if", " the", " input", " df", " is", " Data", "Frame", ",", " not", " empty", ",", " and", " must", " contain", " the", " specified", " column", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "core", ".", "generic", ".", "DataFrame", ")", " or", " df", ".", "empty", " or", " col", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " must", " be", " Data", "Frame", ",", " not", " empty", ",", " and", " must", " contain", " the", " specified", " column", "\"", ")", "\n", "\n", "    ", "#", " Calculate", " number", " of", " unique", " values", " in", " the", " specified", " column", "\n", "    ", "num", "_", "unique", " =", " df", "[", "col", "]", ".", "nun", "ique", "()", "\n", "\n", "    ", "#", " Get", " the", " unique", " values", "\n", "    ", "unique", "_", "values", " =", " df", "[", "col", "]", ".", "unique", "()", "\n", "\n", "    ", "#", " Get", " the", " counts", " of", " each", " unique", " value", "\n", "    ", "value", "_", "counts", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", "\n", "\n", "    ", "#", " Get", " the", " percentage", " of", " each", " unique", " value", " in", " relation", " to", " the", " total", " count", "\n", "    ", "percent", "ages", " =", " value", "_", "counts", ".", "apply", "(", "lambda", " x", ":", " x", " /", " len", "(", "df", "[", "col", "])", " *", " ", "1", "0", "0", ")", "\n", "\n", "    ", "#", " Create", " a", " dictionary", " of", " color", " and", " percentage", " for", " each", " unique", " value", "\n", "    ", "color", "_", "percent", "ages", " =", " dict", "(", "zip", "(", "unique", "_", "values", ",", " percentages", "))", "\n", "\n", "    ", "#", " Plot", " the", " pie", " chart", " using", " matplotlib", "\n", "    ", "plt", ".", "pie", "(", "list", "(", "percent", "ages", ")", ",", " labels", "=", "list", "(", "unique", "_", "values", ")", ",", " colors", "=["], "logprobs": [-1.4008653163909912, -0.7513792514801025, -0.7887557744979858, -0.7354036569595337, -0.33151617646217346, -0.4316616952419281, -0.031662166118621826, -0.620853066444397, -0.008452474139630795, -0.5440126657485962, -0.5084902048110962, -0.21049977838993073, -0.06106467545032501, -0.023696551099419594, -1.6170612573623657, -0.02807937003672123, -0.01479275617748499, -0.014771614223718643, -0.007355039939284325, -0.43027472496032715, -0.006423777434974909, -0.05805695429444313, -0.2706134021282196, -0.030906204134225845, -0.0003131137927994132, -0.00530395470559597, -0.0014586533652618527, -0.045079924166202545, -2.0503786799963564e-05, -2.3944244384765625, -3.3378044463461265e-05, -2.1545615196228027, -0.0004128557338844985, -0.23466312885284424, -0.5150421857833862, -0.03323845565319061, -0.679003894329071, -0.007348886225372553, -0.012877519242465496, -0.24340811371803284, -0.1968442052602768, -0.000846147071570158, -0.00017498392844572663, -0.058363091200590134, -0.2957172691822052, -0.0069031319580972195, -0.005188096780329943, -0.0028187802527099848, -0.0027929842472076416, -0.03901513293385506, -0.005115752574056387, -3.8742269680369645e-05, -0.22963137924671173, -0.37278175354003906, -1.2209829092025757, -0.858689546585083, -0.1580321490764618, -0.014157337136566639, -0.41822388768196106, -0.0029082882683724165, -0.04978020116686821, -0.05375809594988823, -0.34345144033432007, -0.03453073278069496, -0.011646375060081482, -0.05476076528429985, -0.00361634255386889, -0.036406129598617554, -0.01010823156684637, -0.006803680211305618, -1.1833248138427734, -0.0008719933102838695, -0.0027593416161835194, -0.12655816972255707, -0.0006924853660166264, -0.31572476029396057, -2.257030963897705, -2.9284729957580566, -0.003638435387983918, -0.06863261759281158, -0.019158203154802322, -0.5324926972389221, -0.18228305876255035, -1.884338617324829, -0.008501528762280941, -0.14348964393138885, -0.0004807746736332774, -1.0526865720748901, -0.011885186657309532, -0.18332691490650177, -0.29612481594085693, -1.2401682138442993, -0.010618142783641815, -0.0001438752660760656, -4.184158387943171e-05, -1.2516897186287679e-05, -0.005381739232689142, -0.0008640132145956159, -0.01302461326122284, -0.004926566034555435, -0.09135852754116058, -0.00029059001826681197, -0.03682985156774521, -3.4378509521484375, -1.2146919965744019, -0.9345346689224243, -0.022715715691447258, -3.0347602367401123, -0.00014661667228210717, -0.17190808057785034, -0.09079118818044662, -0.1468496024608612, -0.0012825843878090382, -0.1590912640094757, -0.0034023988991975784, -0.0001003691868390888, -0.00012957210128661245, -0.00014518637908622622, -0.0739581286907196, -0.0002520958660170436, -0.02268681675195694, -0.038701750338077545, -0.0004435985756572336, -0.04363347589969635, -2.289304733276367, -0.39898237586021423, -1.7629337310791016, -0.603340744972229, -0.5222592353820801, -0.04703881964087486, -0.02006775513291359, -0.14936919510364532, -0.0002302858338225633, -2.344809055328369, -0.00032789100077934563, -0.032830629497766495, -0.004427511245012283, -0.01564350165426731, -0.015000519342720509, -4.3748852476710454e-05, -3.8980677345534787e-05, -3.6000557884108275e-05, -0.006162096280604601, -5.6980417866725475e-05, -0.004716699477285147, -0.029503798112273216, -0.034297842532396317, -0.06854179501533508, -0.00036864637513644993, -0.06055225059390068, -2.1193346977233887, -0.276199609041214, -2.1380186080932617, -0.0727221667766571, -0.2256779670715332, -0.1779959797859192, -0.0022652698680758476, -2.770968198776245, -0.8686637282371521, -0.013472705148160458, -0.18066242337226868, -0.07620912045240402, -2.080345630645752, -0.35773900151252747, -0.0008537700050510466, -0.25855743885040283, -0.500388503074646, -0.003374123014509678, -0.2592887580394745, -9.083335316972807e-05, -5.722029527532868e-06, -1.7286111116409302, -0.3681982159614563, -0.002115037990733981, -0.002775865839794278, -0.03167082741856575, -0.0006245807744562626, -0.27072882652282715, -0.11399189382791519, -1.8474622964859009, -2.3603161025675945e-05, -0.10164427757263184, -0.23974023759365082, -0.00018904806347563863, -0.23789314925670624, -0.011416818015277386, -0.000860201776959002, -0.00013052565918769687, -5.376194530981593e-05, -6.69933797325939e-05, -0.009735248982906342, -0.05745486170053482, -0.023177891969680786, -0.0005644158809445798, -0.0776044949889183, -1.1836011409759521, -0.34752944111824036, -1.3344495296478271, -1.616660475730896, -2.177873134613037, -1.788920521736145, -1.1067012548446655, -1.2545675039291382, -0.21346697211265564, -0.07163892686367035, -0.0036834506317973137, -0.05234440788626671, -0.000730128725990653, -0.6511110663414001, -0.008510394021868706, -0.7556861639022827, -1.303876280784607, -0.016699643805623055, -0.8216791749000549, -0.10406378656625748, -0.007012517657130957, -0.001443654764443636, -0.026299750432372093, -7.748573807475623e-06, -4.768360213347478e-06, -0.003910277504473925, -0.08702954649925232, -0.19198819994926453, -0.0019056509481742978, -0.02026648260653019, -0.0005770448478870094, -0.04108582064509392, -3.2191689014434814, -0.28829649090766907, -0.10053135454654694, -0.01480497233569622, -1.89311683177948, -0.9829015731811523, -0.22303615510463715, -0.004553900565952063, -1.756171464920044, -0.00113589596003294, -0.15323254466056824, -0.02238902449607849, -2.251396894454956, -0.00021252757869660854, -1.6698719263076782, -0.008582965470850468, -0.30676499009132385, -0.001167211914435029, -0.5392618179321289, -0.011319582350552082, -0.6034489870071411, -9.369411418447271e-05, -0.1475476175546646, -6.568216485902667e-05, -1.1205610462639015e-05, -0.0058751036413013935, -0.00047958316281437874, -0.15681958198547363, -1.5732897520065308], "finish_reason": "length"}], "metrics": {"energy": 299.4657117166519, "energy_per_token": 1.1697879363931716, "time": 12.334608, "time_per_token": 0.0481820625}}
{"outputs": [{"text": "try:\n        assert isinstance(df, pd.DataFrame) and not df.empty, \"The input df must be DataFrame, not be empty, and must contain the specified column, if it is not, the function will raise ValueError.\"\n        assert col in df.columns, \"The input col must be contained in df.columns\"\n        assert title is None or isinstance(title, str), \"title must be a string, or None if no title is set.\"\n\n    except (AssertionError, TypeError) as e:\n        raise ValueError(f\"{e}\") from None\n\n    # Create a pie chart with the specified colors and labels\n    ax = df[col].value_counts(sort=True, dropna=False, normalize=True).plot(kind='pie', figsize=(8, 8), ax=ax, labels=None,\n                                                                       colors=[COLORS[i % len(COLORS)] for i in range(len(df[col].unique()))],\n                                                                       label='')\n\n    # Set the title and add a legend if specified\n    if", "tokens": ["try", ":", "\n", "        ", "assert", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " and", " not", " df", ".", "empty", ",", " \"", "The", " input", " df", " must", " be", " Data", "Frame", ",", " not", " be", " empty", ",", " and", " must", " contain", " the", " specified", " column", ",", " if", " it", " is", " not", ",", " the", " function", " will", " raise", " Value", "Error", ".", "\"", "\n", "        ", "assert", " col", " in", " df", ".", "columns", ",", " \"", "The", " input", " col", " must", " be", " contained", " in", " df", ".", "columns", "\"", "\n", "        ", "assert", " title", " is", " None", " or", " isinstance", "(", "title", ",", " str", ")", ",", " \"", "title", " must", " be", " a", " string", ",", " or", " None", " if", " no", " title", " is", " set", ".", "\"", "\n", "\n", "    ", "except", " (", "Assert", "ion", "Error", ",", " Type", "Error", ")", " as", " e", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "e", "}\"", ")", " from", " None", "\n", "\n", "    ", "#", " Create", " a", " pie", " chart", " with", " the", " specified", " colors", " and", " labels", "\n", "    ", "ax", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "(", "sort", "=", "True", ",", " drop", "na", "=", "False", ",", " normalize", "=", "True", ")", ".", "plot", "(", "kind", "='", "pie", "'", ",", " fig", "size", "=(", "8", ",", " ", "8", ")", ",", " ax", "=", "ax", ",", " labels", "=", "None", ",", "\n", "                ", "                ", "                ", "                ", "       ", "colors", "=[", "COL", "ORS", "[", "i", " %", " len", "(", "COL", "ORS", ")]", " for", " i", " in", " range", "(", "len", "(", "df", "[", "col", "]", ".", "unique", "()))", "]", ",", "\n", "                ", "                ", "                ", "                ", "       ", "label", "='", "')", "\n", "\n", "    ", "#", " Set", " the", " title", " and", " add", " a", " legend", " if", " specified", "\n", "    ", "if"], "logprobs": [-2.3700459003448486, -0.0020208191126585007, -0.015671784058213234, -0.01481624785810709, -1.7588880062103271, -0.3043936491012573, -0.0004850641416851431, -0.03959141671657562, -0.0018521074671298265, -0.04750308021903038, -2.13382354559144e-05, -0.14474332332611084, -0.0006559127941727638, -1.3885860443115234, -0.2281266450881958, -0.0678381621837616, -0.0002694958820939064, -0.006958655081689358, -1.2605183124542236, -1.0318896770477295, -1.251814603805542, -0.16300715506076813, -0.26053425669670105, -0.03247353062033653, -0.01886298507452011, -0.07952597737312317, -0.001328539103269577, -0.017485864460468292, -0.015148828737437725, -0.027439698576927185, -0.0001262346631847322, -0.037905070930719376, -0.012683792971074581, -0.006252727005630732, -0.00405347254127264, -0.004656661301851273, -0.0026006230618804693, -0.0018687656847760081, -0.8542819619178772, -0.015906233340501785, -0.0040494357235729694, -0.003123882692307234, -0.0003911683743353933, -0.004067363683134317, -0.006079751066863537, -0.002558531705290079, -0.0008775911992415786, -0.00025900822947733104, -0.003831784473732114, -0.00014399446081370115, -0.06868036836385727, -0.02196217142045498, -0.007409827783703804, -0.2914103865623474, -0.23924073576927185, -0.12189043313264847, -0.005021816119551659, -0.04206790030002594, -0.2002222090959549, -0.007786398753523827, -0.042829979211091995, -0.3098999857902527, -0.27492740750312805, -1.7321455478668213, -1.2076729536056519, -0.26198065280914307, -0.06814121454954147, -3.8306617736816406, -0.055920373648405075, -1.14973783493042, -0.45331570506095886, -0.13802596926689148, -1.8417656421661377, -0.0019194527994841337, -1.1898365020751953, -1.4669557809829712, -1.6193712949752808, -0.18656882643699646, -0.09205570071935654, -0.011087828315794468, -0.0768236517906189, -0.00028880240279249847, -0.02680066041648388, -0.0002225389762315899, -0.013440243899822235, -0.0005134217790327966, -0.14162421226501465, -0.09114351123571396, -2.2949984073638916, -0.1199159324169159, -0.017795894294977188, -1.065043330192566, -0.3289772868156433, -1.8765813112258911, -1.3781967163085938, -0.1852457970380783, -2.262576103210449, -0.8792144656181335, -0.005709055811166763, -0.21224482357501984, -1.2647805213928223, -0.5025658011436462, -0.015518858097493649, -0.004902366548776627, -0.9062298536300659, -2.0239667892456055, -0.01029242854565382, -2.1759374141693115, -0.15187722444534302, -0.0001734344696160406, -1.811964830267243e-05, -0.8493313789367676, -0.3761554956436157, -3.2782016205601394e-05, -0.5222029089927673, -0.0011692361440509558, -0.2731289863586426, -0.0012722263345494866, -0.011999917216598988, -0.004038275219500065, -1.1412699222564697, -0.6643751263618469, -8.093983342405409e-05, -0.09022842347621918, -0.8653424978256226, -0.06763496994972229, -0.7548478841781616, -0.21013163030147552, -0.9785263538360596, -0.001142087858170271, -1.6901521682739258, -0.9954337477684021, -0.0243564210832119, -0.1702931523323059, -0.0009777533123269677, -1.9934991598129272, -2.5535058975219727, -0.4057807922363281, -1.0295857191085815, -0.1809631735086441, -1.4324886798858643, -0.632862389087677, -0.7684240937232971, -1.840456247329712, -0.8651198744773865, -2.4227991104125977, -0.30090537667274475, -0.0032828745897859335, -1.8004411458969116, -0.032693345099687576, -0.14421941339969635, -0.09545671194791794, -0.0009132028790190816, -0.0012080521555617452, -0.00025281094713136554, -0.031812991946935654, -6.3774932641536e-05, -0.002345907734706998, -1.5738565921783447, -1.4723842144012451, -0.011845957487821579, -1.0925112962722778, -0.6657471060752869, -1.3556336164474487, -0.0005427317810244858, -0.0006345880683511496, -0.32982948422431946, -1.9495320320129395, -0.21930661797523499, -0.00732805859297514, -0.027857612818479538, -0.2188386619091034, -0.013464119285345078, -0.16565349698066711, -1.7234481573104858, -0.13124552369117737, -0.102035753428936, -0.017898941412568092, -0.00994902290403843, -0.00043394684325903654, -1.5487639904022217, -0.0002379134384682402, -0.013211097568273544, -1.6933937072753906, -0.005989578552544117, -0.04768756404519081, -0.19091226160526276, -0.024800047278404236, -0.0004153581103309989, -2.026109457015991, -0.0034774804953485727, -0.7204964756965637, -0.05682290345430374, -2.8395919799804688, -0.16526220738887787, -0.34474340081214905, -0.04131953790783882, -2.813624620437622, -0.1059110164642334, -0.09907952696084976, -0.1176740974187851, -0.2367076575756073, -3.278761386871338, -0.47161173820495605, -1.1918928623199463, -0.06554244458675385, -9.738924563862383e-05, -0.05167241394519806, -0.1552516371011734, -0.6435438990592957, -0.02062271349132061, -0.0001740304142003879, -0.0017218063585460186, -2.622600959512056e-06, -0.009395195171236992, -0.04666093364357948, -0.0008381668012589216, -0.006700665690004826, -0.022559436038136482, -0.0009345216676592827, -0.25146719813346863, -0.0003149013500660658, -0.28321099281311035, -0.06548450142145157, -0.00039152585668489337, -0.19658812880516052, -0.0008249455713666975, -0.8654544949531555, -0.03449191898107529, -0.45854097604751587, -0.026376035064458847, -0.48953697085380554, -0.0017476299544796348, -0.00011276562872808427, -0.0002661589242052287, -0.0009116546134464443, -0.02823108248412609, -2.300264835357666, -1.9908257722854614, -0.4211792051792145, -0.03999913111329079, -0.4668678641319275, -0.0014705568319186568, -0.14398492872714996, -0.43612924218177795, -0.4322788417339325, -0.16772903501987457, -3.020827293395996, -4.281174182891846, -1.0979363918304443, -0.5057922601699829, -1.9999375343322754, -1.2830595970153809, -0.018060285598039627, -0.0022066310048103333, -0.26734602451324463], "finish_reason": "length"}], "metrics": {"energy": 292.0190683422088, "energy_per_token": 1.1406994857117532, "time": 11.137534, "time_per_token": 0.0435059921875}}
{"outputs": [{"text": "try:\n        if df.empty or col not in df:\n            raise ValueError(\"Invalid DataFrame or column name!\")\n    except TypeError:\n        raise ValueError(\"Invalid DataFrame or column name!\")\n\n    # Create the pie chart with custom colors and labels\n    labels = list(df[col])\n    colors = [COLORS[i % len(COLORS)] for i in range(len(labels))]\n    plt.pie(df[col].value_counts(), labels=labels, colors=colors)\n    plt.title(title) if title else None\n\n    # Return the axes object to be plotted\n    return plt.gca()\n\ndf = pd.DataFrame({\n    'fruit': ['apple', 'banana', 'orange', 'apple', 'banana', 'banana']\n})", "tokens": ["try", ":", "\n", "        ", "if", " df", ".", "empty", " or", " col", " not", " in", " df", ":", "\n", "            ", "raise", " Value", "Error", "(", "\"", "Invalid", " Data", "Frame", " or", " column", " name", "!", "\"", ")", "\n", "    ", "except", " Type", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " Data", "Frame", " or", " column", " name", "!", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " pie", " chart", " with", " custom", " colors", " and", " labels", "\n", "    ", "labels", " =", " list", "(", "df", "[", "col", "])", "\n", "    ", "colors", " =", " [", "COL", "ORS", "[", "i", " %", " len", "(", "COL", "ORS", ")]", " for", " i", " in", " range", "(", "len", "(", "labels", "))", "]", "\n", "    ", "plt", ".", "pie", "(", "df", "[", "col", "]", ".", "value", "_", "counts", "()", ",", " labels", "=", "labels", ",", " colors", "=", "colors", ")", "\n", "    ", "plt", ".", "title", "(", "title", ")", " if", " title", " else", " None", "\n", "\n", "    ", "#", " Return", " the", " axes", " object", " to", " be", " plotted", "\n", "    ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "df", " =", " pd", ".", "DataFrame", "({", "\n", "    ", "'", "fruit", "':", " ['", "apple", "'", ",", " '", "ban", "ana", "'", ",", " '", "orange", "'", ",", " '", "apple", "'", ",", " '", "ban", "ana", "'", ",", " '", "ban", "ana", "']", "\n", "})", "\n", "\n", "#"], "logprobs": [-2.3700459003448486, -0.0020208191126585007, -0.015671784058213234, -0.01481624785810709, -0.6143777370452881, -1.8978185653686523, -0.12081736326217651, -0.04377782717347145, -0.8669060468673706, -0.8622334599494934, -0.00692432327196002, -0.00022432672267314047, -0.04740099236369133, -1.092942714691162, -0.0277793537825346, -0.00446299696341157, -0.04019714146852493, -0.014214691706001759, -0.00013410145766101778, -0.5975703597068787, -0.4403965175151825, -1.775831937789917, -1.7272496223449707, -0.16571733355522156, -0.23178435862064362, -0.32644978165626526, -0.5091754198074341, -2.7988364696502686, -0.06019021198153496, -0.0003992714046034962, -0.004152604844421148, -1.2762863636016846, -0.004415642935782671, -1.7555088996887207, -0.0003069168305955827, -0.5268751382827759, -0.058392103761434555, -0.004873421508818865, -0.09034278988838196, -0.6816518902778625, -0.00016783259343355894, -0.024399466812610626, -0.05016348883509636, -0.42158618569374084, -0.17662617564201355, -0.011516637168824673, -0.4639904201030731, -0.006203443743288517, -0.020330846309661865, -0.018019190058112144, -0.0034244961570948362, -0.0006563892820850015, -0.0029187481850385666, -0.5820606350898743, -0.001013599568977952, -1.6746679544448853, -2.644257068634033, -2.4541280269622803, -0.4419375956058502, -0.07845978438854218, -2.8245034217834473, -3.58034086227417, -0.1888972669839859, -1.1516129970550537, -1.0136233568191528, -0.24551637470722198, -0.0026774294674396515, -2.7802484035491943, -0.015896260738372803, -1.034736156463623, -0.003453364595770836, -0.24203647673130035, -0.029595578089356422, -0.00025674383505247533, -2.979779005050659, -0.05522788316011429, -0.01194149348884821, -1.6304583549499512, -0.01617722399532795, -0.19424644112586975, -0.10110871493816376, -5.519237674889155e-05, -0.04499433934688568, -0.27615582942962646, -0.317434698343277, -0.02085787244141102, -6.806619057897478e-05, -0.04026687890291214, -2.0265558760002023e-06, -0.0018450870411470532, -0.009616952389478683, -0.00043930893298238516, -0.04289370775222778, -0.002309038769453764, -0.0002369599969824776, -0.03822730854153633, -4.8397800128441304e-05, -0.5350309014320374, -0.0010752854868769646, -0.0004048719711136073, -0.006005338858813047, -0.16960610449314117, -1.1214888095855713, -0.0006361367995850742, -0.02199179120361805, -0.006673193536698818, -0.5078403949737549, -0.04281102120876312, -0.0006065912893973291, -0.001280084135942161, -0.023331165313720703, -0.002381110331043601, -4.768370445162873e-07, -0.0016501632053405046, -0.008984377607703209, -0.1553269624710083, -0.0924416035413742, -0.003649837803095579, -0.013921654783189297, -0.0005903884884901345, -0.11308854073286057, -0.0008654424455016851, -0.0012435331009328365, -0.9140997529029846, -0.004384784959256649, -1.050601840019226, -0.7797703742980957, -0.0003847335756290704, -0.39467597007751465, -0.00438134279102087, -0.04087379574775696, -0.10635184496641159, -1.0845718383789062, -0.0018462770385667682, -0.30501842498779297, -0.189197838306427, -0.021997623145580292, -0.6788772940635681, -0.0009528625523671508, -0.2902986705303192, -0.7332319617271423, -0.06822684407234192, -0.948818564414978, -0.13645613193511963, -2.5829710960388184, -0.7901927828788757, -1.8581922054290771, -0.6614100337028503, -0.00026258357684127986, -0.04872290417551994, -0.005218218546360731, -0.03675194829702377, -0.04309457167983055, -0.028524938970804214, -0.0005050813779234886, -0.6237198710441589, -0.012986724264919758, -3.3727550506591797, -0.1209338828921318, -0.009854241274297237, -8.797258487902582e-05, -0.021356264129281044, -0.17562589049339294, -1.8062983751296997, -0.05576480180025101, -0.11771288514137268, -0.37750980257987976, -0.0054380581714212894, -0.033725302666425705, -0.020593401044607162, -0.0008331642020493746, -0.00016985881666187197, -0.004801647737622261, -0.03670357167720795, -7.283422019099817e-05, -0.0007967158453539014, -1.4662635294371285e-05, -0.0012275787303224206, -0.02178594283759594, -0.014503883197903633, -2.9444261599564925e-05, -0.0058396682143211365, -0.05108527094125748, -0.0026899129152297974, -3.2305197237292305e-05, -0.005300990305840969, -0.009762637317180634, -1.7762025890988298e-05, -0.009565118700265884, -5.4238757002167404e-05, -0.0029822182841598988, -0.03250676393508911, -2.5629668016335927e-05, -0.03411548212170601, -0.8001945614814758, -0.028514163568615913, -0.005372490733861923, -0.6745502352714539, -1.4890576601028442], "finish_reason": "stop"}], "metrics": {"energy": 197.12944879055024, "energy_per_token": 0.9906002451786444, "time": 8.632529, "time_per_token": 0.04337954271356784}}
{"outputs": [{"text": "if type(df) != pd.DataFrame:\n        raise TypeError('The input df must be DataFrame, not be empty, and must contain the specified column, if it is not, the function will raise ValueError.')\n\n    if not df.empty:\n        if col not in df.columns:\n            raise ValueError(f'{col} not in df.columns')\n        else:\n            df.plot.pie(y=col, autopct=\"%1.2f\", figsize=(5, 5), color=COLORS)\n            if title:\n                plt.title(title)\n            ax = plt.gca()\n            ax.axis('equal')\n\n            return ax\n    else:\n        raise ValueError('df is empty')", "tokens": ["if", " type", "(", "df", ")", " ", "!", "=", " pd", ".", "DataFrame", ":", "\n", "        ", "raise", " Type", "Error", "('", "The", " input", " df", " must", " be", " Data", "Frame", ",", " not", " be", " empty", ",", " and", " must", " contain", " the", " specified", " column", ",", " if", " it", " is", " not", ",", " the", " function", " will", " raise", " Value", "Error", ".", "')", "\n", "\n", "    ", "if", " not", " df", ".", "empty", ":", "\n", "        ", "if", " col", " not", " in", " df", ".", "columns", ":", "\n", "            ", "raise", " Value", "Error", "(", "f", "'{", "col", "}", " not", " in", " df", ".", "columns", "')", "\n", "        ", "else", ":", "\n", "            ", "df", ".", "plot", ".", "pie", "(", "y", "=", "col", ",", " aut", "op", "ct", "=", "\"", "%", "1", ".", "2", "f", "\"", ",", " fig", "size", "=(", "5", ",", " ", "5", ")", ",", " color", "=", "COL", "ORS", ")", "\n", "            ", "if", " title", ":", "\n", "                ", "plt", ".", "title", "(", "title", ")", "\n", "            ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "            ", "ax", ".", "axis", "('", "equal", "')", "\n", "\n", "            ", "return", " ax", "\n", "    ", "else", ":", "\n", "        ", "raise", " Value", "Error", "('", "df", " is", " empty", "')", "\n", "\n", "#"], "logprobs": [-0.7615711092948914, -2.8614795207977295, -0.00026782741770148277, -0.04353053495287895, -0.00259515387006104, -0.6310517191886902, -3.2186455882765586e-06, -2.0861407392658293e-05, -0.08172449469566345, -0.00011228884250158444, -0.81650710105896, -0.486303448677063, -0.015325290150940418, -0.00784672237932682, -0.04036683589220047, -1.4340481758117676, -0.00015424491721205413, -1.242857575416565, -1.0834118127822876, -0.22977975010871887, -0.3167373836040497, -0.035201676189899445, -0.0024234468583017588, -0.08432377874851227, -0.0029380035120993853, -0.07745413482189178, -0.011778924614191055, -0.06978081911802292, -0.008691458031535149, -0.0543116070330143, -0.021280761808156967, -0.009246384724974632, -0.004757750779390335, -0.006899343337863684, -0.0038254905957728624, -0.0023350848350673914, -0.4021376073360443, -0.0465315617620945, -0.006950960028916597, -0.001916716224513948, -0.0005818104837089777, -0.00793424341827631, -0.007907632738351822, -0.0034583541564643383, -0.0009354744106531143, -0.00030048147891648114, -0.03249591588973999, -0.0003532739356160164, -0.08882024139165878, -0.024032127112150192, -0.0027533976826816797, -1.2525107860565186, -0.00029845553217455745, -0.19778642058372498, -1.2542604207992554, -0.4853089153766632, -0.12225982546806335, -0.17290647327899933, -0.07492184638977051, -0.033089809119701385, -0.04544690251350403, -0.2891801595687866, -0.2643720805644989, -0.5451900362968445, -0.00032491172896698117, -0.055469706654548645, -0.3458138704299927, -0.02196601964533329, -0.006821795366704464, -0.004284844733774662, -0.004423950798809528, -0.008944562636315823, -0.11382977664470673, -7.056941103655845e-05, -1.1951305866241455, -0.36723822355270386, -2.389578104019165, -0.026604505255818367, -0.023125125095248222, -1.41196608543396, -0.23380184173583984, -0.9325894713401794, -0.4486968517303467, -0.05638120323419571, -0.46641743183135986, -0.0009873997187241912, -0.8950139880180359, -1.389467477798462, -0.0010071687866002321, -0.0030896568205207586, -0.030771775171160698, -1.6201317310333252, -2.2440781593322754, -2.2881436347961426, -0.5182201862335205, -0.006313142832368612, -0.00819061417132616, -0.6255844831466675, -0.08433867990970612, -0.011923117563128471, -0.021725520491600037, -1.6593092679977417, -0.007868957705795765, -0.0029031771700829268, -2.149878978729248, -0.8651893138885498, -0.004105354659259319, -0.432829350233078, -2.2649508537142538e-05, -1.1784260272979736, -0.00695332745090127, -1.411742091178894, -0.043793685734272, -2.039938449859619, -0.00037377048283815384, -0.07451020926237106, -1.4553028345108032, -0.016309525817632675, -0.31452295184135437, -0.09881789982318878, -0.1264999806880951, -0.0011177966371178627, -3.751784324645996, -0.13427478075027466, -0.023226695135235786, -2.8609820219571702e-05, -1.096589207649231, -0.02464071661233902, -0.17041802406311035, -0.5096737146377563, -0.03307262435555458, -0.5078189373016357, -0.028203846886754036, -0.0011700696777552366, -0.2536454200744629, -9.798523387871683e-05, -0.046481721103191376, -0.0014249657979235053, -0.029605068266391754, -0.04008674621582031, -0.006916272919625044, -0.3964645564556122, -2.1002697944641113, -0.05786852166056633, -0.005349250975996256, -0.0036044646985828876, -0.007524600252509117, -0.033018071204423904, -0.004018328618258238, -0.017360514029860497, -0.1499624401330948, -0.9847721457481384, -0.005118243396282196, -0.7680303454399109, -0.03268607333302498, -0.015032108873128891, -0.00025388356880284846, -0.08831170201301575, -2.8295347690582275, -0.5642181634902954, -0.260807603597641, -0.07312069833278656, -0.4101279377937317, -0.7303091287612915, -0.05444810539484024, -0.0004573014739435166, -0.006229625549167395, -0.003887834493070841, -0.11221516877412796, -0.1062532365322113, -0.00030048147891648114, -0.34853407740592957, -1.4464694261550903, -0.7529290914535522, -0.06301996111869812, -0.39185890555381775, -0.6530876159667969, -0.051789917051792145, -1.6034191846847534], "finish_reason": "stop"}], "metrics": {"energy": 206.6880748271942, "energy_per_token": 1.154681982274828, "time": 7.5798097, "time_per_token": 0.04234530558659218}}
{"outputs": [{"text": "if df.empty:\n        raise ValueError(\"Input DataFrame is empty\")\n\n    if col not in df.columns:\n        raise ValueError(f\"{col} is not a column in the DataFrame\")\n\n    _, ax = plt.subplots()\n    ax.pie(\n        df[col].value_counts().sort_index(),\n        labels=False,\n        autopct='%.2f%%',\n        pctdistance=0.55,\n        counterclock=False,\n        wedgeprops={'linewidth': 1, 'edgecolor': 'white'},\n        startangle=180,\n        textprops={'color': 'white', 'size': 12}\n    )\n\n    if title:\n        ax.set_title(title, fontdict=dict(fontsize=15))\n        ax.text(\n            0.5,\n            0.5,\n            title,\n            fontsize=14,\n            ha='center',\n            va='center',\n            transform=ax.transAxes,\n            ", "tokens": ["if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", "\"", ")", "\n", "\n", "    ", "if", " col", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "col", "}", " is", " not", " a", " column", " in", " the", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "_", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "pie", "(", "\n", "        ", "df", "[", "col", "]", ".", "value", "_", "counts", "()", ".", "sort", "_", "index", "()", ",", "\n", "        ", "labels", "=", "False", ",", "\n", "        ", "aut", "op", "ct", "='", "%", ".", "2", "f", "%%", "'", ",", "\n", "        ", "p", "ct", "distance", "=", "0", ".", "5", "5", ",", "\n", "        ", "counter", "clock", "=", "False", ",", "\n", "        ", "wedge", "props", "={", "'", "linewidth", "':", " ", "1", ",", " '", "edge", "color", "':", " '", "white", "'}", ",", "\n", "        ", "start", "angle", "=", "1", "8", "0", ",", "\n", "        ", "text", "props", "={", "'", "color", "':", " '", "white", "'", ",", " '", "size", "':", " ", "1", "2", "}", "\n", "    ", ")", "\n", "\n", "    ", "if", " title", ":", "\n", "        ", "ax", ".", "set", "_", "title", "(", "title", ",", " font", "dict", "=", "dict", "(", "fonts", "ize", "=", "1", "5", "))", "\n", "        ", "ax", ".", "text", "(", "\n", "            ", "0", ".", "5", ",", "\n", "            ", "0", ".", "5", ",", "\n", "            ", "title", ",", "\n", "            ", "fonts", "ize", "=", "1", "4", ",", "\n", "            ", "ha", "='", "center", "'", ",", "\n", "            ", "va", "='", "center", "'", ",", "\n", "            ", "transform", "=", "ax", ".", "trans", "Ax", "es", ",", "\n", "            "], "logprobs": [-0.7615711092948914, -2.6560771465301514, -0.23949801921844482, -0.03040006197988987, -0.4792240262031555, -0.0336557999253273, -0.0028547984547913074, -0.03755919262766838, -0.014373223297297955, -0.00010668662434909493, -0.360842764377594, -0.11792830377817154, -1.6164385080337524, -0.7600009441375732, -0.013612068258225918, -0.9394731521606445, -0.007784979417920113, -0.6180930137634277, -0.000251142424531281, -0.0041315918788313866, -0.8288235068321228, -0.00018785618885885924, -0.1464623063802719, -0.3615213632583618, -0.004068788141012192, -3.707340147229843e-05, -0.01040462963283062, -0.20408423244953156, -0.006953919306397438, -0.003452176693826914, -0.002422495512291789, -0.0008854520856402814, -0.004792512860149145, -0.02028774283826351, -0.00011991735664196312, -0.014127366244792938, -0.7731223106384277, -0.03165004029870033, -1.3480660915374756, -0.01535886526107788, -0.018556563183665276, -0.43415409326553345, -0.010727476328611374, -0.8038361668586731, -0.35714298486709595, -0.37525954842567444, -0.23286576569080353, -0.32249441742897034, -0.003036533249542117, -0.2202606350183487, -0.0002996472467202693, -0.0009204680100083351, -0.03450194001197815, -0.0005290300468914211, -4.619303226470947, -0.3575782775878906, -0.42029157280921936, -0.0295499786734581, -0.002711788285523653, -7.10462118149735e-05, -0.00011991735664196312, -0.00010942813969450071, -0.5830679535865784, -0.011604662984609604, -0.46070927381515503, -1.04092276096344, -0.01941416785120964, -0.09920022636651993, -0.028422052040696144, -0.8734540939331055, -0.035357605665922165, -0.10575133562088013, -0.04700276628136635, -0.0008093419019132853, -0.0006042085005901754, -0.0005719218170270324, -0.012807965278625488, -1.0728830375228426e-06, -0.001279131742194295, -0.03175351768732071, -1.1944639682769775, -0.9666866064071655, -1.7762025890988298e-05, -0.3955669701099396, -0.023475216701626778, -0.2022130787372589, -0.07300866395235062, -0.0012301980750635266, -0.23555542528629303, -0.031058644875884056, -1.526268482208252, -0.04631488397717476, -0.09644021093845367, -0.032128654420375824, -0.6842989921569824, -0.006215646397322416, -0.003703760216012597, -0.2532498836517334, -0.001260201446712017, -1.9065297842025757, -0.7017815709114075, -0.00358118349686265, -0.07098966836929321, -0.0293009951710701, -0.12371674925088882, -0.03596072643995285, -0.05538816750049591, -2.069551467895508, -0.04691052436828613, -0.21625494956970215, -0.011720958165824413, -1.2406275272369385, -0.0023468590807169676, -2.697850227355957, -1.6635706424713135, -0.10139613598585129, -0.025265328586101532, -0.0425826795399189, -3.101841449737549, -0.007762623019516468, -0.007736008148640394, -0.1562606692314148, -0.06115293130278587, -0.006802732590585947, -0.06751140207052231, -0.7365211248397827, -0.006464403588324785, -0.5654903054237366, -0.033142395317554474, -1.3299576044082642, -0.00013064485392533243, -0.01662578247487545, -1.0234320163726807, -0.3966671824455261, -0.014088460244238377, -0.13265788555145264, -0.000176652567461133, -0.00018153927521780133, -0.03918445482850075, -1.1843695640563965, -0.09277193993330002, -0.3562372922897339, -0.011095491237938404, -0.2937397360801697, -1.7726575136184692, -0.005497812293469906, -0.07383135706186295, -1.954887866973877, -0.38029348850250244, -0.004840797744691372, -0.35749098658561707, -0.007431955076754093, -0.1891993135213852, -1.2701438665390015, -0.04530814662575722, -0.07837877422571182, -0.025189073756337166, -0.8104398250579834, -0.0009659630013629794, -0.1741330474615097, -0.30561232566833496, -1.0570812225341797, -0.005989104975014925, -0.01842198334634304, -0.4848165214061737, -0.00047541281674057245, -0.527455747127533, -0.4486185908317566, -1.7904716730117798, -0.1133153885602951, -1.1747685670852661, -0.06705322116613388, -0.004217302426695824, -0.00658402219414711, -0.9384337067604065, -0.00015901254664640874, -0.389007568359375, -0.02355462685227394, -0.42153096199035645, -0.007941221818327904, -0.000990615226328373, -0.06013049557805061, -0.0002335037279408425, -0.00584369758144021, -0.005476234946399927, -0.0006655623437836766, -0.0007322729215957224, -0.04336605966091156, -0.8290619850158691, -1.8803141117095947, -0.24886076152324677, -2.4874725341796875, -0.5602636933326721, -0.001515550771728158, -2.5296614170074463, -0.00019965562387369573, -0.022016163915395737, -0.24757076799869537, -2.3230690956115723, -1.227737307548523, -0.008079702034592628, -2.865485191345215, -0.28418752551078796, -0.0021197961177676916, -1.9737272262573242, -0.08557438850402832, -1.0532326698303223, -0.010924648493528366, -0.1542314738035202, -0.1323726326227188, -0.25232917070388794, -0.011355177499353886, -0.3209572732448578, -0.00017152745567727834, -0.30970603227615356, -0.0765887051820755, -0.4639171063899994, -0.017876459285616875, -0.01211357582360506, -0.0001851148990681395, -0.6062928438186646, -0.026155292987823486, -0.0036659911274909973, -0.0005889588501304388, -0.8911851644515991, -0.0005813338793814182, -0.005808616988360882, -0.17119944095611572, -2.5310821533203125, -0.013241096399724483, -0.0020147517789155245, -0.0023651740048080683, -1.630881667137146, -0.4948328733444214, -0.005669228732585907, -0.0019902437925338745, -0.002271335804834962, -0.002536058658733964, -0.005234583746641874, -0.2029501050710678, -0.005684401374310255, -0.02044367976486683, -0.009789316914975643, -0.021633131429553032, -0.001035987981595099, -0.04014194756746292, -1.012007236480713, -0.002403705846518278, -0.01131097786128521, -0.0003494605771265924, -0.0017454879125580192, -0.003061728784814477, -0.00042226933874189854, -0.46438610553741455, -0.0046483553014695644, -0.22106333076953888], "finish_reason": "length"}], "metrics": {"energy": 263.89955301952364, "energy_per_token": 1.0308576289825142, "time": 11.152276, "time_per_token": 0.043563578125}}
{"outputs": [{"text": "# Check requirements\n    if not (isinstance(df, pd.DataFrame) and not df.empty and col in df):\n        raise ValueError\n\n    # Create axes\n    ax = plt.figure().add_subplot(111, title=title)\n\n    # Count number of unique values\n    total = len(df[col].value_counts())\n\n    # Draw the pie chart\n    df[col].value_counts().plot.pie(ax=ax, colors=COLORS, startangle=90, autopct='%1.1f%%', shadow=False)\n\n    return ax", "tokens": ["#", " Check", " requirements", "\n", "    ", "if", " not", " (", "is", "instance", "(", "df", ",", " pd", ".", "DataFrame", ")", " and", " not", " df", ".", "empty", " and", " col", " in", " df", "):", "\n", "        ", "raise", " Value", "Error", "\n", "\n", "    ", "#", " Create", " axes", "\n", "    ", "ax", " =", " plt", ".", "figure", "()", ".", "add", "_", "sub", "plot", "(", "1", "1", "1", ",", " title", "=", "title", ")", "\n", "\n", "    ", "#", " Count", " number", " of", " unique", " values", "\n", "    ", "total", " =", " len", "(", "df", "[", "col", "]", ".", "value", "_", "counts", "())", "\n", "\n", "    ", "#", " Draw", " the", " pie", " chart", "\n", "    ", "df", "[", "col", "]", ".", "value", "_", "counts", "()", ".", "plot", ".", "pie", "(", "ax", "=", "ax", ",", " colors", "=", "COL", "ORS", ",", " start", "angle", "=", "9", "0", ",", " aut", "op", "ct", "='", "%", "1", ".", "1", "f", "%%", "'", ",", " shadow", "=", "False", ")", "\n", "\n", "    ", "return", " ax"], "logprobs": [-1.3294174671173096, -0.7342183589935303, -3.7041215896606445, -0.2835254371166229, -0.008608848787844181, -0.5845813751220703, -0.29550981521606445, -2.1216583251953125, -0.5957266092300415, -0.0024418795946985483, -0.00030620177858509123, -0.042694058269262314, -0.0015448314370587468, -0.024547899141907692, -1.4543427823809907e-05, -0.12998326122760773, -0.06805980950593948, -0.07069692015647888, -0.8040704727172852, -0.0851801335811615, -0.00032360086333937943, -0.00369687145575881, -0.34975001215934753, -0.6323755979537964, -0.0019810828380286694, -0.02277444675564766, -0.7621598243713379, -0.013460944406688213, -0.0016500442288815975, -0.03613700345158577, -0.01024287287145853, -5.8530047681415454e-05, -3.064284324645996, -0.20641010999679565, -0.0005976559477858245, -0.3110083043575287, -2.339722156524658, -3.875277280807495, -1.2662580013275146, -0.0008366183610633016, -0.6729806661605835, -0.029143886640667915, -0.2218754142522812, -0.000445385929197073, -2.8848748207092285, -0.49391263723373413, -0.025528565049171448, -0.21097686886787415, -6.55629628454335e-05, -0.15161994099617004, -0.004635896533727646, -0.03217194229364395, -0.07150997966527939, -0.24086976051330566, -0.00012611546844709665, -1.097747802734375, -1.8259007930755615, -0.04840778186917305, -0.03128916770219803, -0.10790906101465225, -0.041432082653045654, -0.2122865617275238, -0.0003182381624355912, -0.08795586228370667, -3.5535521507263184, -2.1593706607818604, -0.0035568326711654663, -0.18946674466133118, -0.03190502151846886, -0.976707935333252, -0.0005452338373288512, -3.4308738708496094, -0.36869022250175476, -0.14661304652690887, -0.0007770617958158255, -0.189326673746109, -0.05457622930407524, -0.000602421467192471, -0.0756915807723999, -1.9907753085135482e-05, -2.8032310009002686, -1.5497195136049413e-06, -0.0001255195093108341, -0.09783079475164413, -0.011982602998614311, -0.2361816018819809, -0.0001699779968475923, -0.05793793871998787, -1.9135414361953735, -2.45483136177063, -0.05638165399432182, -0.08575701713562012, -0.12376562505960464, -0.0008070787298493087, -0.47809189558029175, -0.027519259601831436, -0.0008137490367516875, -0.0010113369207829237, -0.000688077649101615, -0.003995769657194614, -6.031808152329177e-05, -0.00034767304896377027, -0.04166640341281891, -0.001918857917189598, -0.04845298454165459, -0.07187659293413162, -0.001312348060309887, -0.003270160872489214, -0.6288946866989136, -0.04139022156596184, -0.0005155664402991533, -0.023878611624240875, -1.0691039562225342, -0.1149403378367424, -0.01126418262720108, -7.390948667307384e-06, -0.45064079761505127, -2.677588939666748, -0.006569455377757549, -0.014892004430294037, -0.09476722031831741, -0.00025388356880284846, -0.06354465335607529, -1.0191398859024048, -0.0022300630807876587, -0.0024084628093987703, -0.19090388715267181, -0.0015326907159760594, -0.179259791970253, -0.0001397035230183974, -0.2960827946662903, -0.009350200183689594, -0.00296379579231143, -0.40689578652381897, -0.0006210067658685148, -2.152026653289795, -0.005023951176553965, -2.3665053844451904, -1.2820730209350586, -0.02164199762046337, -0.35255399346351624, -0.0007876630988903344, -1.6158192157745361, -0.00943392887711525], "finish_reason": "stop"}], "metrics": {"energy": 153.47170360755908, "energy_per_token": 1.065775719496938, "time": 6.1020684, "time_per_token": 0.042375475}}
{"outputs": [{"text": "# check requirements\n    for req in ['pandas', 'matplotlib.pyplot']:\n        if not importlib.util.find_spec(req):\n            raise ImportError(f\"{req} is required to run this function, please install it.\")\n    # check if col exists, if not, raise ValueError\n    if not col in df.columns:\n        raise ValueError(f\"The column '{col}' does not exist in the input dataframe.\")\n    # check if input is empty, if so, raise ValueError\n    if df.empty:\n        raise ValueError(\"Input dataframe is empty, cannot draw a pie chart.\")\n    # make pie chart\n    values = df[col].value_counts().reindex()\n    if title is not None:\n        title = title\n    ax = plt.pie(\n        values,\n        colors=COLORS,\n        labels=values.index,\n        autopct=lambda x: f\"{round(x * 100 / values.sum(), 2)}%\",\n        title=title,\n        shadow", "tokens": ["#", " check", " requirements", "\n", "    ", "for", " req", " in", " ['", "pand", "as", "'", ",", " '", "mat", "plotlib", ".", "py", "plot", "']", ":", "\n", "        ", "if", " not", " import", "lib", ".", "util", ".", "find", "_", "spec", "(", "req", "):", "\n", "            ", "raise", " Import", "Error", "(", "f", "\"", "{", "req", "}", " is", " required", " to", " run", " this", " function", ",", " please", " install", " it", ".", "\"", ")", "\n", "    ", "#", " check", " if", " col", " exists", ",", " if", " not", ",", " raise", " Value", "Error", "\n", "    ", "if", " not", " col", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " column", " '", "{", "col", "}'", " does", " not", " exist", " in", " the", " input", " data", "frame", ".", "\"", ")", "\n", "    ", "#", " check", " if", " input", " is", " empty", ",", " if", " so", ",", " raise", " Value", "Error", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", "frame", " is", " empty", ",", " cannot", " draw", " a", " pie", " chart", ".", "\"", ")", "\n", "    ", "#", " make", " pie", " chart", "\n", "    ", "values", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", ".", "re", "index", "()", "\n", "    ", "if", " title", " is", " not", " None", ":", "\n", "        ", "title", " =", " title", "\n", "    ", "ax", " =", " plt", ".", "pie", "(", "\n", "        ", "values", ",", "\n", "        ", "colors", "=", "COL", "ORS", ",", "\n", "        ", "labels", "=", "values", ".", "index", ",", "\n", "        ", "aut", "op", "ct", "=", "lambda", " x", ":", " f", "\"", "{", "round", "(", "x", " *", " ", "1", "0", "0", " /", " values", ".", "sum", "()", ",", " ", "2", ")}", "%", "\"", ",", "\n", "        ", "title", "=", "title", ",", "\n", "        ", "shadow"], "logprobs": [-1.3294174671173096, -2.8656718730926514, -3.1972227096557617, -0.19747072458267212, -0.010809439234435558, -2.176007032394409, -1.1760802268981934, -0.058623045682907104, -1.6663405895233154, -0.05840638652443886, -4.172316494077677e-06, -0.06273248791694641, -0.0003121604095213115, -0.021718289703130722, -0.009104758501052856, -1.5020257706055418e-05, -0.11414259672164917, -0.0002531684876885265, -0.00011967896716669202, -0.01512405276298523, -0.0007550249574705958, -0.005465920083224773, -0.003387310542166233, -0.8915253281593323, -0.42076095938682556, -0.3304802179336548, -0.0240921750664711, -0.0012050755321979523, -0.0073643880896270275, -1.6212332411669195e-05, -0.00019596086349338293, 0.0, -0.0065839034505188465, -0.00015078838623594493, -0.003822759259492159, -0.05864788964390755, -0.0179313775151968, -0.002010825788602233, -0.13195650279521942, -0.20742154121398926, -0.002973779570311308, -0.06100545823574066, -0.325438529253006, -0.46592435240745544, -1.644507646560669, -0.01123223826289177, -0.05392132326960564, -0.5713598132133484, -1.170912742614746, -1.2201670408248901, -1.24045729637146, -0.18818329274654388, -0.5425530076026917, -1.9373438358306885, -1.0075324773788452, -0.24014301598072052, -0.15167054533958435, -1.9162756204605103, -0.02280159667134285, -0.004562444519251585, -0.010030696168541908, -1.9434181451797485, -0.8186161518096924, -0.4740854501724243, -2.5899462699890137, -4.0172858238220215, -1.7387471199035645, -3.0037081241607666, -0.7712156176567078, -0.2014942169189453, -0.5275988578796387, -0.16686388850212097, -0.36367592215538025, -0.01444325502961874, -0.057752858847379684, -0.004917669575661421, -0.09180320799350739, -0.6804736256599426, -1.2560948133468628, -0.011087591759860516, -0.038960788398981094, -0.2909562587738037, -0.021571185439825058, -0.01600501872599125, -0.0041007245890796185, -0.004024859052151442, -0.016910526901483536, -0.0143630001693964, -0.00018106251081917435, -0.025724466890096664, -0.12305722385644913, -0.047124799340963364, -2.0003914833068848, -0.4450722336769104, -1.1613454818725586, -0.0005119920242577791, -0.0016722993459552526, -0.0010281282011419535, -0.3759113550186157, -0.0011813811725005507, -0.01365487277507782, -0.10123261064291, -0.12008308619260788, -1.4903348684310913, -1.8358852863311768, -0.2751193642616272, -0.6185197234153748, -0.04185207933187485, -0.0010639727115631104, -0.002732949797064066, -0.2665341794490814, -0.12355577945709229, -0.7936643958091736, -0.1346421241760254, -2.6419246196746826, -0.9508035182952881, -0.5563445687294006, -0.8288924694061279, -0.2277228981256485, -0.3840861916542053, -0.13207820057868958, -0.11710983514785767, -0.1106443703174591, -0.0015404274454340339, -0.012630234472453594, -0.0008817598572932184, -0.015858598053455353, -0.8628935813903809, -0.07033220678567886, -0.08833079785108566, -0.015622024424374104, -0.0040906332433223724, -0.0012738931691274047, -0.005818216595798731, -0.02359316684305668, -4.970903682988137e-05, -0.025598866865038872, -0.2317170351743698, -1.3199386596679688, -0.21103063225746155, -0.13050222396850586, -0.0734299048781395, -0.002389316214248538, -2.185084104537964, -1.0263971090316772, -1.4394872188568115, -1.6542930603027344, -0.016718048602342606, -0.01587643101811409, -0.04314172640442848, -0.004256949760019779, -0.00030489088385365903, -0.000418575422372669, -0.3560720384120941, -0.061237141489982605, -4.317446231842041, -1.017650842666626, -0.15593953430652618, -0.19861683249473572, -0.0031714164651930332, -3.4497408866882324, -0.08746031671762466, -0.1675463616847992, -0.031487178057432175, -0.0004385939973872155, -0.00026723151677288115, -0.005331583321094513, -0.03943901136517525, -9.65590606938349e-06, -0.0007390628452412784, -0.06384151428937912, -2.3479316234588623, -3.8540890216827393, -0.041615404188632965, -0.8234564065933228, -0.20298932492733002, -0.01325227227061987, -2.608393669128418, -0.2570631802082062, -0.8367331027984619, -0.41717517375946045, -0.00010322991875000298, -0.003256615251302719, -0.00985860824584961, -0.0015594713622704148, -2.201962471008301, -0.14556144177913666, -1.0319262742996216, -0.7165435552597046, -0.06006123498082161, -1.5297977924346924, -0.01795104704797268, -0.7509320974349976, -0.00014995403762441128, -0.3562036454677582, -0.0017879704246297479, -1.2832167148590088, -0.04978133365511894, -0.0139660919085145, -0.5895214676856995, -0.2384922206401825, -0.000771820661611855, -1.2558465003967285, -0.316268652677536, -0.044918209314346313, -7.986990567587782e-06, -0.1568758338689804, -0.027033908292651176, -0.001891610911116004, -1.0026997327804565, -0.05183575674891472, -0.09671685844659805, -0.0431923046708107, -0.009561222046613693, -0.09435834735631943, -0.00331911351531744, -0.0034211697056889534, -0.48682132363319397, -0.001916716224513948, -0.004980775527656078, -1.211082935333252, -0.3452262282371521, -0.14715576171875, -0.009953035973012447, -0.3721998929977417, -0.4078786373138428, -0.030675014480948448, -1.674877643585205, -0.01142212189733982, -0.06797037273645401, -1.542348027229309, -0.6282264590263367, -0.006708836182951927, -0.010043205693364143, -0.0009313059854321182, -0.04276442155241966, -1.0835837125778198, -0.00031764229061082006, -0.09079543501138687, -0.006356142461299896, -0.33180734515190125, -0.02839401178061962, -0.46818435192108154, -0.006965520791709423, -0.02613404020667076, -0.013375669717788696, -0.0523269847035408, -0.011329364962875843, -0.04314732179045677, -0.7987527847290039, -0.017992496490478516, -0.03212680667638779, -0.2431727647781372, -0.013257213868200779, -0.6954748630523682, -1.262991189956665], "finish_reason": "length"}], "metrics": {"energy": 256.1208285112379, "energy_per_token": 1.000471986372023, "time": 11.148017, "time_per_token": 0.04354694140625}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError('Input must be a DataFrame!')\n    if len(df) == 0:\n        raise ValueError('Input must not be empty!')\n    if not (col in df.columns):\n        raise ValueError('Column {} does not exist!'.format(col))\n    data = df[col]\n    fig, ax = plt.subplots(figsize=(7.5, 4.5))\n    ax.pie(\n        data.value_counts().sort_index(),\n        labels=data.sort_index(),\n        autopct=lambda x: f'%.2f%%' % (100 * (len(data) / len(data.index)) * (x / 100)),\n        colors=COLORS,\n        textprops={\"fontsize\": 12, \"color\": \"black\"},\n        labeldistance=1.2,\n        pctdistance=0.7,\n        shadow=True,\n        explode=[0.03, 0, 0, 0, ", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "('", "Input", " must", " be", " a", " Data", "Frame", "!", "')", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "('", "Input", " must", " not", " be", " empty", "!", "')", "\n", "    ", "if", " not", " (", "col", " in", " df", ".", "columns", "):", "\n", "        ", "raise", " Value", "Error", "('", "Column", " {}", " does", " not", " exist", "!", "'", ".", "format", "(", "col", "))", "\n", "    ", "data", " =", " df", "[", "col", "]", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "7", ".", "5", ",", " ", "4", ".", "5", "))", "\n", "    ", "ax", ".", "pie", "(", "\n", "        ", "data", ".", "value", "_", "counts", "()", ".", "sort", "_", "index", "()", ",", "\n", "        ", "labels", "=", "data", ".", "sort", "_", "index", "()", ",", "\n", "        ", "aut", "op", "ct", "=", "lambda", " x", ":", " f", "'", "%", ".", "2", "f", "%%", "'", " %", " (", "1", "0", "0", " *", " (", "len", "(", "data", ")", " /", " len", "(", "data", ".", "index", "))", " *", " (", "x", " /", " ", "1", "0", "0", "))", ",", "\n", "        ", "colors", "=", "COL", "ORS", ",", "\n", "        ", "text", "props", "=", "{\"", "fonts", "ize", "\":", " ", "1", "2", ",", " \"", "color", "\":", " \"", "black", "\"}", ",", "\n", "        ", "label", "distance", "=", "1", ".", "2", ",", "\n", "        ", "p", "ct", "distance", "=", "0", ".", "7", ",", "\n", "        ", "shadow", "=", "True", ",", "\n", "        ", "expl", "ode", "=[", "0", ".", "0", "3", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " "], "logprobs": [-0.7615711092948914, -0.44754669070243835, -0.06285339593887329, -0.0002759314374998212, -0.03629014268517494, -0.0015198357868939638, -0.041521746665239334, -2.455681169521995e-05, -0.1216922327876091, -0.5978573560714722, -0.013428599573671818, -0.003953499253839254, -0.04353909566998482, -0.2376762479543686, -0.0003477922291494906, -1.3740745782852173, -1.1419092416763306, -0.9147685766220093, -0.001551496796309948, -0.5138567090034485, -0.47122418880462646, -0.015789249911904335, -3.1466453075408936, -0.03774287924170494, -0.0038175340741872787, -0.2321770340204239, -0.14043600857257843, -1.2256006002426147, -0.0002162222663173452, -0.0017151420470327139, -0.08317077904939651, -0.12995992600917816, -0.0009195152088068426, -7.676783570786938e-05, -0.060464393347501755, -0.014348899014294147, -0.0006656814948655665, -0.010501365177333355, -0.0032553081400692463, -0.0001174142598756589, -0.06341186165809631, -0.442963182926178, -1.3147751092910767, -0.3705930709838867, -0.005633430555462837, -0.07803581655025482, -0.04930054396390915, -0.0036948525812476873, -0.0018240257631987333, -0.08978914469480515, -0.0650489553809166, -1.4877151250839233, -2.1605656147003174, -0.09261798113584518, -0.004629014525562525, -0.03651578351855278, -0.11396986991167068, -0.01964692398905754, -0.03399404138326645, -0.003831072011962533, -0.001157209975644946, -0.0041803838685154915, -0.008256942965090275, -5.876845170860179e-05, -0.8537029027938843, -1.3614981174468994, -2.9294872283935547, -1.4343993663787842, -0.004292322788387537, -0.030043017119169235, -1.2476940155029297, -0.023529011756181717, -0.0020927926525473595, -0.002035690238699317, -0.000619696278590709, -0.012938359752297401, -0.003026787657290697, -0.0008696111617609859, -0.8783301711082458, -4.073698997497559, -0.0910767987370491, -0.3647668957710266, -0.10726580023765564, -0.0013525871327146888, -0.0009629856795072556, -1.2239594459533691, -0.09805593639612198, -3.6499271392822266, -0.15122485160827637, -0.03682548552751541, -0.025198955088853836, -0.0010782625759020448, -4.494089080253616e-05, -0.0006599632324650884, -0.0002450642641633749, -0.9989350438117981, -0.14297302067279816, -0.0004974558250978589, -0.03976086899638176, -2.8169846534729004, -2.563897132873535, -0.41400203108787537, -0.01094151008874178, -0.12142980098724365, -3.003263473510742, -0.7744406461715698, -0.28092285990715027, -0.15455509722232819, -0.03194023668766022, -0.04373982921242714, -0.7234347462654114, -0.014234554022550583, -0.10813162475824356, -0.011418585665524006, -1.2633121013641357, -0.045250725001096725, -0.16699554026126862, -0.0013777059502899647, -0.013458356261253357, -5.602820692729438e-06, -0.0008407871937379241, -0.033343732357025146, -1.287339687347412, -0.8977205157279968, -2.992108420585282e-05, -0.4740567207336426, -0.011168700642883778, -0.23267847299575806, -0.09185855835676193, -0.0013802058529108763, -0.29006722569465637, -0.036283474415540695, -0.4697812795639038, -0.0015566148795187473, -0.6113261580467224, -2.9205850296420977e-05, -0.01413512323051691, -0.003948274999856949, -0.20629926025867462, -0.021149467676877975, -0.001681939116679132, -0.6407392024993896, -0.002841722685843706, -0.004776733461767435, -2.261618137359619, -0.15267899632453918, -0.16954180598258972, -0.01217811368405819, -0.9468035101890564, -1.1446270942687988, -0.16170457005500793, -0.3673234283924103, -0.6667579412460327, -0.01718194968998432, -0.17835979163646698, -0.0644509494304657, -0.9393282532691956, -0.13582639396190643, -0.5499688982963562, -0.001505433232523501, -0.0006224363460205495, -0.17604553699493408, -2.4780807495117188, -3.1036338806152344, -0.0005322470096871257, -0.03725293278694153, -0.23533301055431366, -0.3210591673851013, -0.13629542291164398, -0.0002908283786382526, -0.02835855446755886, -0.03102443739771843, -1.963151216506958, -0.8276101350784302, -0.4388488531112671, -0.7082536220550537, -0.1362398862838745, -0.061461374163627625, -0.45814016461372375, -0.007996450178325176, -0.00023576818057335913, -0.00041261743172071874, -0.11459895223379135, -0.01583430916070938, -0.014324691146612167, -0.010502072982490063, -0.7698659300804138, -0.45864337682724, -0.06038954108953476, -3.3378546504536644e-06, -0.28883692622184753, -0.01702222228050232, -0.08874279260635376, -1.533348798751831, -0.018936563283205032, -2.0936529636383057, -1.2228593826293945, -1.3203184604644775, -4.8040190449682996e-05, -0.0018465149914845824, -0.1070222556591034, -0.42687925696372986, -1.6690599918365479, -2.3660755157470703, -0.08134772628545761, -0.18061605095863342, -0.0026814716402441263, -0.04851658269762993, -1.2821934223175049, -0.02754349634051323, -0.11592960357666016, -0.018365221098065376, -0.13074137270450592, -2.8038930892944336, -0.058719947934150696, -0.006673548836261034, -0.2523840069770813, -0.056328583508729935, -0.6772870421409607, -0.5782844424247742, -0.03317122906446457, -0.0979749858379364, -1.4721060991287231, -0.21754644811153412, -0.008290637284517288, -0.009067664854228497, -1.722556710243225, -0.014005354605615139, -2.0848007202148438, -0.3669230043888092, -0.01490938663482666, -0.06793161481618881, -1.3162943124771118, -0.00583504606038332, -0.2728291451931, -0.04549451917409897, -0.01053687185049057, -0.04960620030760765, -1.840690016746521, -0.10590061545372009, -0.29646679759025574, -0.1806725710630417, -0.5430343151092529, -0.8227773904800415, -2.5283942222595215, -0.7103583216667175, -0.024442974478006363, -0.0021111122332513332, -0.8033047914505005, -0.004344192799180746, -0.0021548878867179155, -0.15351775288581848, -0.0029357452876865864, -0.002650678623467684, -0.4141264259815216, -0.003151095937937498], "finish_reason": "length"}], "metrics": {"energy": 282.6206020421984, "energy_per_token": 1.1039867267273376, "time": 11.1468725, "time_per_token": 0.043542470703125}}
{"outputs": [{"text": "try:\n        if not isinstance(df, pd.core.frame.DataFrame) or df.empty or col not in df.columns:\n            raise ValueError\n        data = pd.Series(df[col])\n        colors = [COLORS[i] for i in range(len(data.unique()))]\n\n        ax = plt.pie(\n            data.value_counts().sort_values(),\n            labels=data.unique(),\n            colors=colors,\n            autopct='%1.2f%%',\n            shadow=True,\n            startangle=90,\n            textprops={'color': 'white'}\n        )\n\n        if title:\n            ax[0].set_title(title)\n    except ValueError:\n        raise ValueError(f\"Input data must be DataFrame, not empty, and must contain the specified column, {col}.\")\n    else:\n        return ax", "tokens": ["try", ":", "\n", "        ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "core", ".", "frame", ".", "DataFrame", ")", " or", " df", ".", "empty", " or", " col", " not", " in", " df", ".", "columns", ":", "\n", "            ", "raise", " Value", "Error", "\n", "        ", "data", " =", " pd", ".", "Series", "(", "df", "[", "col", "])", "\n", "        ", "colors", " =", " [", "COL", "ORS", "[", "i", "]", " for", " i", " in", " range", "(", "len", "(", "data", ".", "unique", "()))", "]", "\n", "\n", "        ", "ax", " =", " plt", ".", "pie", "(", "\n", "            ", "data", ".", "value", "_", "counts", "()", ".", "sort", "_", "values", "()", ",", "\n", "            ", "labels", "=", "data", ".", "unique", "()", ",", "\n", "            ", "colors", "=", "colors", ",", "\n", "            ", "aut", "op", "ct", "='", "%", "1", ".", "2", "f", "%%", "'", ",", "\n", "            ", "shadow", "=", "True", ",", "\n", "            ", "start", "angle", "=", "9", "0", ",", "\n", "            ", "text", "props", "={", "'", "color", "':", " '", "white", "'}", "\n", "        ", ")", "\n", "\n", "        ", "if", " title", ":", "\n", "            ", "ax", "[", "0", "]", ".", "set", "_", "title", "(", "title", ")", "\n", "    ", "except", " Value", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Input", " data", " must", " be", " Data", "Frame", ",", " not", " empty", ",", " and", " must", " contain", " the", " specified", " column", ",", " {", "col", "}", ".", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "return", " ax", "\n", "\n", "#"], "logprobs": [-2.3700459003448486, -0.0020208191126585007, -0.015671784058213234, -0.01481624785810709, -0.6143777370452881, -0.7978448867797852, -0.06847422569990158, -0.0002951186615973711, -0.0529683493077755, -0.004253626335412264, -0.05366692319512367, -4.0411134250462055e-05, -1.8160264492034912, -0.0002623452164698392, -0.12176305055618286, -0.0011356578906998038, -0.001981558743864298, -0.8636213541030884, -0.03299696370959282, -0.7873138189315796, -0.010682777501642704, -0.02780277281999588, -0.6614808440208435, -0.5503900051116943, -0.0025021694600582123, -0.00041309406515210867, -0.053120627999305725, -0.3044060468673706, -0.012227221392095089, -0.006978187710046768, -0.016221914440393448, -0.004297901410609484, -0.02067234180867672, -0.027884740382432938, -9.846202738117427e-05, -1.1354713439941406, -0.6726694107055664, -4.261100769042969, -0.08118737488985062, -2.543783187866211, -0.001401514746248722, -0.3939576745033264, -0.005149553529918194, -0.057386089116334915, -0.06063292548060417, -0.000521523819770664, -0.21939727663993835, -0.567438006401062, -0.10992982238531113, -2.450148820877075, -0.06216995045542717, -0.44699418544769287, -0.09481167048215866, -0.00014780859055463225, -0.04104337468743324, -0.2950841784477234, -1.5121362209320068, -0.02036016620695591, -0.0034046561922878027, -0.020251179113984108, -0.016087958589196205, -0.000773250067140907, -0.24498680233955383, -0.0003057250869460404, -0.6558037400245667, -0.2358778864145279, -0.06373626738786697, -0.0217168889939785, -0.0029403807129710913, -0.019495889544487, -2.8866822719573975, -0.013117565773427486, -1.5057133436203003, -0.016933618113398552, -1.6538165807724, -0.00012242044613230973, -0.4813505709171295, -0.0057531483471393585, -1.3293973207473755, -0.0376131534576416, -0.15641309320926666, -0.02338624931871891, -0.005424778908491135, -1.3708974620385561e-05, -0.0018191470298916101, -0.02771337889134884, -2.1870381832122803, -0.7371501922607422, -2.6940935640595853e-05, -0.8311013579368591, -0.9221416115760803, -0.1414465308189392, -0.09524333477020264, -0.0010890988633036613, -0.45878684520721436, -0.02646113745868206, -0.09296075254678726, -0.0025763672310858965, -0.05088668316602707, -0.003841403406113386, -0.08783926069736481, -0.053768713027238846, -0.0007254829397425056, -0.6634680032730103, -0.0062873181886971, -0.005524368025362492, -0.038866423070430756, -0.013750824145972729, -0.0282153207808733, -0.44507625699043274, -0.006077144294977188, -0.0036184806376695633, -0.17091822624206543, -0.0010318199638277292, -0.33886536955833435, -1.2993727978027891e-05, -0.9340991973876953, -0.005299567244946957, -0.08562450855970383, -0.03687351197004318, -0.06684685498476028, -0.020175477489829063, -0.06169732287526131, -1.0506229400634766, -0.005916344467550516, -0.09663677215576172, -0.04958577826619148, -0.008624567650258541, -0.03563142940402031, -0.7962079644203186, -0.0055093117989599705, -0.007983914576470852, -0.1337132304906845, -0.00033742457162588835, -0.2020552158355713, -0.002831618534401059, -0.13833318650722504, -1.0210094451904297, -0.03173099830746651, -0.16359783709049225, -0.022580180317163467, -0.5359111428260803, -0.0027096483390778303, -0.133305162191391, -1.4396857023239136, -0.10349318385124207, -1.0100380182266235, -0.02784242480993271, -0.0008679436868987978, -0.003002185607329011, -1.03817617893219, -0.030427351593971252, -0.2841702997684479, -0.011329364962875843, -0.37814655900001526, -0.00924851093441248, -0.0014585343888029456, -0.4543706476688385, -1.142411231994629, -0.04142236337065697, -0.071248359978199, -0.002267410745844245, -0.016366874799132347, -0.014817892573773861, -0.0004772001120727509, -0.0009363081189803779, -0.05616845563054085, -0.286382794380188, -0.004062970634549856, -2.3532650470733643, -0.006792786996811628, -0.8353492617607117, -8.451581379631534e-05, -0.24815551936626434, -0.009999420493841171, -0.003402161179110408, -0.8795307278633118, -0.10340503603219986, -0.0002019201492657885, -0.23473374545574188, -1.139976978302002, -0.21913065016269684, -1.7989718914031982, -1.560021162033081, -0.6328228116035461, -0.010224583558738232, -1.223137617111206, -0.012917649000883102, -0.3260466754436493, -0.25104084610939026, -0.5304797291755676, -0.06749836355447769, -0.03118494711816311, -0.2027973085641861, -0.014792874455451965, -0.12979555130004883, -0.06632746011018753, -0.007157399319112301, -1.2607009410858154, -1.7628344297409058, -0.009173152968287468, -0.4833909273147583, -0.36428406834602356, -0.022378649562597275, -0.02792728692293167, -0.023461010307073593, -1.0165952444076538, -2.523376703262329, -0.00017128908075392246, -0.005449914373457432, -0.0024223767686635256, -0.2381991744041443, -0.03392674773931503, -0.8376582264900208, -0.02923060581088066, -2.0133516788482666], "finish_reason": "stop"}], "metrics": {"energy": 239.27720980358123, "energy_per_token": 1.107764860201765, "time": 9.464818, "time_per_token": 0.04381860185185185}}
{"outputs": [{"text": "# Check input df and col are valid\n    if not isinstance(df, pd.DataFrame) or df.empty:\n        raise ValueError(\"Input df must be DataFrame, not be empty\")\n\n    if col not in df.columns:\n        raise ValueError(f\"Column {col} not in df\")\n\n    # Get unique values in the column and plot the pie chart\n    unique_values = df[col].unique()\n    values = df[col].value_counts()\n    colors = COLORS[0:len(unique_values)]\n\n    if title:\n        ax = df[col].plot.pie(values, autopct='%1.2f%%', colors=colors, title=title, shadow=False, startangle=90)\n    else:\n        ax = df[col].plot.pie(values, autopct='%1.2f%%', colors=colors, shadow=False, startangle=90)\n\n    return ax", "tokens": ["#", " Check", " input", " df", " and", " col", " are", " valid", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " must", " be", " Data", "Frame", ",", " not", " be", " empty", "\"", ")", "\n", "\n", "    ", "if", " col", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " {", "col", "}", " not", " in", " df", "\"", ")", "\n", "\n", "    ", "#", " Get", " unique", " values", " in", " the", " column", " and", " plot", " the", " pie", " chart", "\n", "    ", "unique", "_", "values", " =", " df", "[", "col", "]", ".", "unique", "()", "\n", "    ", "values", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", "\n", "    ", "colors", " =", " COL", "ORS", "[", "0", ":", "len", "(", "unique", "_", "values", ")]", "\n", "\n", "    ", "if", " title", ":", "\n", "        ", "ax", " =", " df", "[", "col", "]", ".", "plot", ".", "pie", "(", "values", ",", " aut", "op", "ct", "='", "%", "1", ".", "2", "f", "%%", "'", ",", " colors", "=", "colors", ",", " title", "=", "title", ",", " shadow", "=", "False", ",", " start", "angle", "=", "9", "0", ")", "\n", "    ", "else", ":", "\n", "        ", "ax", " =", " df", "[", "col", "]", ".", "plot", ".", "pie", "(", "values", ",", " aut", "op", "ct", "='", "%", "1", ".", "2", "f", "%%", "'", ",", " colors", "=", "colors", ",", " shadow", "=", "False", ",", " start", "angle", "=", "9", "0", ")", "\n", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.3294174671173096, -0.7342183589935303, -2.39837646484375, -2.2718963623046875, -2.4968132972717285, -0.3634994924068451, -1.5536805391311646, -0.5458272695541382, -0.3404122292995453, -0.005697202868759632, -0.04295960068702698, -0.18668505549430847, -0.04806392639875412, -0.0002775999018922448, -0.018127484247088432, -0.0005663221818394959, -0.03190860152244568, -1.6927575416048057e-05, -0.12818975746631622, -0.5629434585571289, -0.016746066510677338, -0.6408378481864929, -0.007220838218927383, -0.010925001464784145, -1.1482042074203491, -0.007358471397310495, -0.001843778183683753, -0.026059363037347794, -0.021056674420833588, -5.8887653722194955e-05, -0.3206205666065216, -0.19784745573997498, -0.8734596967697144, -0.6975349187850952, -0.13229306042194366, -0.0366700142621994, -1.5635875463485718, -0.004732716828584671, -0.39341431856155396, -0.11641516536474228, -0.5328891277313232, -0.0010931475553661585, -0.8927485346794128, -0.0005365362740121782, -0.0024291551671922207, -1.5019359588623047, -0.00013767725613433868, -0.13272199034690857, -0.453497976064682, -0.003280973294749856, -3.659658250398934e-05, -0.012938948348164558, -0.17920558154582977, -0.007264390587806702, -0.004118770360946655, -0.0013854438439011574, -0.0007152383332140744, -0.0058836364187300205, -0.014403539709746838, -7.164221460698172e-05, -0.010951650328934193, -0.4428400695323944, -0.027379268780350685, -0.5775866508483887, -0.23230677843093872, -0.0009039129945449531, -0.012617521919310093, -0.25195637345314026, -1.022735595703125, -0.76955246925354, -0.5424911975860596, -0.000409161759307608, -0.0020695950370281935, -0.024074021726846695, -0.0010402749758213758, -0.3247758150100708, -1.6447728872299194, -0.9650046825408936, -0.07006405293941498, -1.6662181615829468, -1.0036197900772095, -0.22918367385864258, -1.1503534317016602, -3.3111133575439453, -1.7644859552383423, -0.07551683485507965, -0.04734528064727783, -0.102313332259655, -0.0033117469865828753, -0.6309081315994263, -0.019648676738142967, -0.09872879832983017, -0.019999634474515915, -0.16107076406478882, -0.008260016329586506, -0.00010287232726113871, -5.674201020156033e-05, -4.100715523236431e-05, -0.6406283378601074, -0.00021443451987579465, -0.03450493514537811, -0.0833972692489624, -2.917214870452881, -0.7372298836708069, -0.1504879742860794, -0.024060871452093124, -0.00018821375851985067, -8.749579137656838e-05, -0.0007151191821321845, -0.01574278250336647, -1.2516897186287679e-05, -0.0019151695305481553, -0.09880980104207993, -0.1620643138885498, -0.36478710174560547, -1.822672963142395, -0.02259579859673977, -1.692696213722229, -0.00014995403762441128, -2.250966787338257, -0.5282433032989502, -0.08412850648164749, -0.3359684348106384, -9.226373367710039e-05, -0.47931548953056335, -8.821448318485636e-06, -1.1324817933200393e-05, -0.00713846180588007, -0.03369982913136482, -0.601471483707428, -0.0001134808044298552, -2.121373176574707, -0.10148553550243378, -0.44495365023612976, -0.007706080097705126, -0.0019376566633582115, -1.8418540954589844, -0.045393362641334534, -0.7325647473335266, -0.15127220749855042, -0.0015962490579113364, -0.001520311925560236, -0.0006908176001161337, -1.2094453573226929, -0.22894060611724854, -0.000797311426140368, -0.004174329340457916, -1.1875483989715576, -1.1286555528640747, -3.033982753753662, -0.0030690969433635473, -0.0016411182004958391, -0.17721976339817047, -0.000873065204359591, -0.2226250022649765, -0.00016151554882526398, -1.2735624313354492, -0.002946561435237527, -0.13061459362506866, -0.007795506622642279, -0.0001264730526600033, -0.6215803027153015, -0.005852823611348867, -0.005881621968001127, -0.11084050685167313, -0.5776736736297607, -0.008019865490496159, -0.02157188393175602, -0.7066787481307983, -2.736121892929077, -0.0055837612599134445, -2.463944911956787, -0.36722269654273987, -1.5717236995697021, -0.008557789959013462, -0.003712073899805546, -0.14138765633106232, -0.0003000047872774303, -0.8587731719017029, -0.011204301379621029, -0.08475779742002487, -0.0018279524520039558, -9.095255518332124e-05, -0.0011998366098850965, -0.0006324436399154365, -0.015718022361397743, -0.0005327236140146852, -0.0036659911274909973, -0.0011256556026637554, -1.3470558769768104e-05, -2.396077979938127e-05, -1.2159273865108844e-05, -0.01847909390926361, -0.00021741411183029413, -8.666139910928905e-05, -7.10462118149735e-05, -0.0020848223939538, -0.0006198153714649379, -0.04394383355975151, -6.937739817658439e-05, -2.7418097943154862e-06, -0.0007764662150293589, -2.753696753643453e-05, -0.000647692708298564, -0.000144709600135684, -0.004654288291931152, -2.5748875486897305e-05, -0.00016068121476564556, -0.001831522211432457, -1.6569954823353328e-05, -0.0031241201795637608, -0.0003524397616274655, -0.0006137394811958075, -0.03565294295549393, -0.16474610567092896, -0.0001245659514097497, -0.004394042305648327, -0.07920213043689728, -0.0024758896324783564, -3.0636318115284666e-05, -0.00023648326168768108, -0.0022958368062973022, -5.435795901576057e-05, -0.05108674243092537, -0.0019369428046047688, -0.29416903853416443, -0.0024760086089372635, -0.32717663049697876, -0.01289375964552164, -0.4920635521411896, -0.013263448141515255, -0.9111505746841431], "finish_reason": "stop"}], "metrics": {"energy": 246.1324583091735, "energy_per_token": 1.0609157685740238, "time": 10.099681, "time_per_token": 0.04353310775862069}}
{"outputs": [{"text": "# Check the input data\n    if not isinstance(df, pd.DataFrame) or df.empty:\n        raise ValueError(f\"df must be a DataFrame, not empty\")\n\n    if not col in df.columns:\n        raise ValueError(f\"Column {col} not found in the df\")\n\n    # Find the unique values in the column\n    unique_values = df[col].nunique()\n\n    # Generate the pie chart\n    fig, ax = plt.subplots()\n    ax.pie(unique_values, labels=list(unique_values.keys()), autopct='%.2f%%', colors=COLORS,\n        wedgeprops={'edgecolor': 'white'}, startangle=90, title=title)\n    ax.set_title(f\"Distribution of {col}\")\n    return ax", "tokens": ["#", " Check", " the", " input", " data", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "df", " must", " be", " a", " Data", "Frame", ",", " not", " empty", "\"", ")", "\n", "\n", "    ", "if", " not", " col", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " {", "col", "}", " not", " found", " in", " the", " df", "\"", ")", "\n", "\n", "    ", "#", " Find", " the", " unique", " values", " in", " the", " column", "\n", "    ", "unique", "_", "values", " =", " df", "[", "col", "]", ".", "nun", "ique", "()", "\n", "\n", "    ", "#", " Generate", " the", " pie", " chart", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "pie", "(", "unique", "_", "values", ",", " labels", "=", "list", "(", "unique", "_", "values", ".", "keys", "())", ",", " aut", "op", "ct", "='", "%", ".", "2", "f", "%%", "'", ",", " colors", "=", "COL", "ORS", ",", "\n", "        ", "wedge", "props", "={", "'", "edge", "color", "':", " '", "white", "'}", ",", " start", "angle", "=", "9", "0", ",", " title", "=", "title", ")", "\n", "    ", "ax", ".", "set", "_", "title", "(", "f", "\"", "Distribution", " of", " {", "col", "}\"", ")", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.3294174671173096, -0.7342183589935303, -2.3076772689819336, -0.7205162644386292, -1.5697821378707886, -1.8648301362991333, -0.0060779741033911705, -0.02996874786913395, -0.15890201926231384, -0.027936097234487534, -0.00018356545479036868, -0.015381638891994953, -0.000940714729949832, -0.02510119043290615, -1.3351351299206726e-05, -0.08679075539112091, -0.830353319644928, -0.009525799192488194, -0.5995349884033203, -0.003225127002224326, -0.008222655393183231, -0.6401015520095825, -0.007637585513293743, -0.0012386515736579895, -0.02765992470085621, -0.026985755190253258, -3.838465272565372e-05, -0.27366554737091064, -2.222012519836426, -0.21477197110652924, -3.071488380432129, -0.15017923712730408, -0.02040817216038704, -0.19375324249267578, -1.7226994037628174, -0.004728564061224461, -0.4313952624797821, -0.17553208768367767, -0.5048551559448242, -0.9279034733772278, -0.0005770448478870094, -0.003951955586671829, -0.7816590666770935, -0.00017033556650858372, -0.2321767508983612, -1.500183343887329, -0.6024907231330872, -0.0024801704566925764, -0.030388150364160538, -0.26254981756210327, -0.015874437987804413, -0.003399547655135393, -0.0031860326416790485, -0.0017249004449695349, -0.0052160839550197124, -0.01651076041162014, -5.781483559985645e-05, -0.0025519919581711292, -0.03744391351938248, -0.025440363213419914, -1.4738155603408813, -0.3224022090435028, -0.002648538677021861, -0.01326803583651781, -0.35797181725502014, -0.4645921289920807, -0.15900087356567383, -1.6201021671295166, -2.650730848312378, -0.8069109916687012, -0.0005824061809107661, -0.0016726563917472959, -0.021588101983070374, -0.001149232150055468, -0.3568202257156372, -4.174284934997559, -0.5431778430938721, -0.5730500221252441, -0.03803005442023277, -0.5616043210029602, -0.03705732524394989, -0.25390318036079407, -0.5520997643470764, -0.000595034915022552, -0.29084399342536926, -0.032448142766952515, -0.15289857983589172, -0.007464731112122536, -0.2223079800605774, -0.020326290279626846, -0.00012337400403339416, -6.174850568640977e-05, -6.985420623095706e-05, -1.5430669784545898, -0.0013248485047370195, -0.027697958052158356, -0.0214589461684227, -0.17820388078689575, -0.00033539868309162557, -0.0996994823217392, -3.286513328552246, -1.4385762214660645, -0.6253650188446045, -0.06814254820346832, -0.4529413878917694, -0.0017685738857835531, -1.4877656698226929, -0.03426558896899223, -0.01924988627433777, -0.03114612214267254, -0.00036900385748595, -6.842378934379667e-05, -0.001459962804801762, -0.00018892886873800308, -0.4742148518562317, -0.005487379152327776, -0.18092696368694305, -0.429194837808609, -0.0024067978374660015, -0.030536621809005737, -0.03789083659648895, -0.30830901861190796, -0.0001250427303602919, -1.4424220353248529e-05, -0.22435979545116425, -1.0903555154800415, -0.060964856296777725, -1.4162843227386475, -0.0005800233921036124, -0.08712723106145859, -8.523101132595912e-05, -1.847726889536716e-05, -0.22512350976467133, -0.6632228493690491, -0.0548105351626873, -0.0016337393317371607, -2.190302610397339, -0.0028966395184397697, -0.010952357202768326, -0.1229526549577713, -0.0010699268896132708, -2.324082851409912, -0.6723194718360901, -0.0015018623089417815, -0.0546511746942997, -0.2299562245607376, -0.000839238753542304, -0.22431273758411407, -0.08734114468097687, -0.020078739151358604, -6.556489552167477e-06, -1.1464893817901611, -1.8102878332138062, -2.997741937637329, -2.7131917476654053, -0.00047600860125385225, -0.6217929720878601, -0.0070470827631652355, -0.20362183451652527, -0.00045098623377270997, -0.002465425059199333, -0.29370027780532837, -1.2726043462753296, -0.8660886287689209, -0.03525714576244354, -1.2788773775100708, -0.007491944823414087, -0.007173022720962763, -0.16560621559619904, -0.00027533553657121956, -0.5557189583778381, -3.488384246826172, -0.025360288098454475, -0.03641371801495552, -0.1687372475862503, -0.005859223194420338, -0.4356243908405304, -0.4809601306915283, -0.0009147512027993798, -1.4048774242401123, -0.13363751769065857, -0.7829259634017944, -0.07300756126642227, -0.808464765548706, -0.3467095196247101, -1.6846425533294678, -0.05106295645236969, -0.28915613889694214, -0.06347440183162689, -0.25727877020835876, -0.23246636986732483, -0.029292890802025795, -0.4252629578113556, -0.5354523062705994, -0.03429888188838959, -0.4811818599700928, -0.02882334217429161, -1.0243356227874756], "finish_reason": "stop"}], "metrics": {"energy": 193.65996154308303, "energy_per_token": 0.9780806138539547, "time": 8.418104, "time_per_token": 0.042515676767676765}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame) or len(df) == 0 or not col in df.columns:\n        raise ValueError(\"The input df must be DataFrame, not be empty, and must contain the specified column.\")\n\n    # Get unique values for the specified column\n    unique_values = df[col].unique()\n\n    # Create a pie chart with the unique values\n    ax = plt.pie(\n        df[col].value_counts(),\n        autopct='%1.2f%%',\n        shadow=True,\n        counterclock=False,\n        colors=COLORS,\n        labels=unique_values,\n    )\n\n    # Set pie chart properties\n    ax[0].axis('equal')\n    ax[0].set_title(f\"{len(df[col])} unique values in {col} column\")\n\n    return ax[0]", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " len", "(", "df", ")", " ==", " ", "0", " or", " not", " col", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " df", " must", " be", " Data", "Frame", ",", " not", " be", " empty", ",", " and", " must", " contain", " the", " specified", " column", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " unique", " values", " for", " the", " specified", " column", "\n", "    ", "unique", "_", "values", " =", " df", "[", "col", "]", ".", "unique", "()", "\n", "\n", "    ", "#", " Create", " a", " pie", " chart", " with", " the", " unique", " values", "\n", "    ", "ax", " =", " plt", ".", "pie", "(", "\n", "        ", "df", "[", "col", "]", ".", "value", "_", "counts", "()", ",", "\n", "        ", "aut", "op", "ct", "='", "%", "1", ".", "2", "f", "%%", "'", ",", "\n", "        ", "shadow", "=", "True", ",", "\n", "        ", "counter", "clock", "=", "False", ",", "\n", "        ", "colors", "=", "COL", "ORS", ",", "\n", "        ", "labels", "=", "unique", "_", "values", ",", "\n", "    ", ")", "\n", "\n", "    ", "#", " Set", " pie", " chart", " properties", "\n", "    ", "ax", "[", "0", "]", ".", "axis", "('", "equal", "')", "\n", "    ", "ax", "[", "0", "]", ".", "set", "_", "title", "(", "f", "\"", "{", "len", "(", "df", "[", "col", "]", ")}", " unique", " values", " in", " {", "col", "}", " column", "\"", ")", "\n", "\n", "    ", "return", " ax", "[", "0", "]", "\n", "\n", "if"], "logprobs": [-0.7615711092948914, -0.44754669070243835, -0.06285339593887329, -0.0002759314374998212, -0.03629014268517494, -0.0015198357868939638, -0.041521746665239334, -2.455681169521995e-05, -0.1216922327876091, -0.7996376752853394, -0.025256842374801636, -1.3688298463821411, -0.00018451895448379219, -0.0027929842472076416, -0.07892709225416183, -0.14999116957187653, -0.0006865289760753512, -4.029192859889008e-05, -0.42364436388015747, -2.317126512527466, -0.18320970237255096, -0.004375289659947157, -0.06855937838554382, -0.4043506681919098, -0.021101029589772224, -0.010189301334321499, -0.02167046256363392, -0.00932693388313055, -0.0358554981648922, -0.010382331907749176, -0.00011050090688513592, -0.3973161578178406, -0.4574575424194336, -1.3812381029129028, -0.21495245397090912, -0.5841492414474487, -0.07703812420368195, -0.008197471499443054, -0.09331025183200836, -0.0024219010956585407, -0.014703248627483845, -0.014389674179255962, -0.04347415268421173, -0.00020668754586949944, -0.01014186441898346, -0.0070037576369941235, -0.004785275552421808, -0.002797977067530155, -0.0033845780417323112, -0.0020698329899460077, -0.0021067108027637005, -1.1561940908432007, -0.019305428490042686, -0.0009238027851097286, -0.003941387869417667, -0.3789297640323639, -0.000634111522231251, -1.8895536661148071, -1.7905689477920532, -1.0783131122589111, -0.04816163331270218, -3.299112319946289, -0.28808265924453735, -0.916353166103363, -0.009115389548242092, -0.36285200715065, -0.0006317288498394191, -0.39107710123062134, -0.015775756910443306, -0.14020197093486786, -0.005874629598110914, -0.27618613839149475, -0.038890160620212555, -0.00016139635408762842, -5.972207145532593e-05, -4.0411134250462055e-05, -0.5400847792625427, -0.00020382710499688983, -0.0262606181204319, -0.14248913526535034, -0.00026782741770148277, -0.08570559322834015, -0.9875393509864807, -0.4019949436187744, -0.8087739944458008, -0.12111290544271469, -1.1587061882019043, -0.529303252696991, -0.9317058324813843, -0.02578243985772133, -1.754059076309204, -0.0009153467253781855, -1.0045666694641113, -0.016556840389966965, -0.5786798000335693, -0.0002714027068577707, -0.5054080486297607, -0.021110599860548973, -0.8463525772094727, -0.03438711166381836, -0.5551712512969971, -0.07229498028755188, -0.0002037079248111695, -0.0007948100101202726, -0.00047302976599894464, -0.02689756453037262, -5.960462772236497e-07, -0.0034544337540864944, -0.034892164170742035, -0.22855453193187714, -0.08586357533931732, -0.0007159530650824308, -3.106468915939331, -0.011333726346492767, -0.002692409558221698, -0.20255883038043976, -0.0003960540343541652, -0.16069898009300232, -5.483612312673358e-06, -0.5447567701339722, -0.004178484436124563, -0.032861776649951935, -0.0015788720920681953, -0.0018705505644902587, -0.08252544701099396, -0.0036390291061252356, -2.313382148742676, -0.006535347551107407, -0.1657319813966751, -0.006642286200076342, -0.015105266124010086, -0.006163754966109991, -3.09397029876709, -0.08124881982803345, -0.0020650746300816536, -0.15663573145866394, -0.010100679472088814, -0.0038028082344681025, -0.010714856907725334, -2.028480052947998, -0.8024406433105469, -0.03723340854048729, -6.6756979322235566e-06, -0.3111785352230072, -0.023118719458580017, -0.12009122967720032, -1.7919106483459473, -0.025374000892043114, -0.03430083766579628, -7.128461584215984e-05, -9.179073458653875e-06, -0.45200315117836, -0.0036206187214702368, -1.7838237285614014, -0.0007493072189390659, -0.0017122859135270119, -0.10289601236581802, -0.00033504117163829505, -0.18708525598049164, -0.47140181064605713, -3.211432933807373, -0.06473323702812195, -2.5714118480682373, -0.20870117843151093, -0.001632549217902124, -0.9526492357254028, -0.127295583486557, -0.03256538510322571, -0.08112670481204987, -0.0009116546134464443, -2.52433180809021, -0.0859593003988266, -0.05526838079094887, -0.0001586549769854173, -0.24404938519001007, -0.22213195264339447, -0.3680686056613922, -0.0045822616666555405, -0.007300840690732002, -0.00014184899919200689, -4.458328112377785e-05, -0.18875306844711304, -0.06627324223518372, -0.028574060648679733, -0.013027437031269073, -1.7496306896209717, -0.6164184212684631, -0.7648462653160095, -2.151721715927124, -0.0001003691868390888, -1.1412696838378906, -0.5131314396858215, -0.0009127265075221658, -0.01682378724217415, -1.2696712017059326, -0.7999875545501709, -0.0898696705698967, -0.7959312200546265, -0.6518609523773193, -0.041332803666591644, -2.6806392669677734, -0.4422445297241211, -0.18813973665237427, -0.3765243589878082, -0.0387020967900753, -0.7763628363609314, -0.00047267231275327504, -3.339681386947632, -0.021143164485692978, -0.7725215554237366, -0.0010415849974378943, -0.09635025262832642, -0.24863237142562866, -0.027109092101454735, -1.0514508485794067], "finish_reason": "stop"}], "metrics": {"energy": 219.67388907146454, "energy_per_token": 1.0217390189370443, "time": 9.256779, "time_per_token": 0.043054786046511626}}
{"outputs": [{"text": "# Check if the input df is DataFrame, not empty, and contains the specified column\n    if not isinstance(df, pd.DataFrame) or len(df) == 0 or col not in df.columns:\n        raise ValueError(\"Input df must be DataFrame, not empty, and must contain the specified column.\")\n\n    # Calculate the unique values and their counts in the column\n    unique_values = df[col].nunique()\n    counts = df[col].value_counts()\n    colors = COLORS * int(unique_values / len(COLORS))  # Repeat colors if necessary\n\n    # Create the pie chart\n    ax = plt.subplot(111, projection='polar')\n    ax.set_thetagrids([])\n    plt.pie(counts.values, labels=counts.index, colors=colors, startangle=90, shadow=True, explode=(0, 0.1, 0, 0.1, 0),\n            autopct='%1.2f%%', counterclock=True, pctdistance=0.6, textprops={'", "tokens": ["#", " Check", " if", " the", " input", " df", " is", " Data", "Frame", ",", " not", " empty", ",", " and", " contains", " the", " specified", " column", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " len", "(", "df", ")", " ==", " ", "0", " or", " col", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " must", " be", " Data", "Frame", ",", " not", " empty", ",", " and", " must", " contain", " the", " specified", " column", ".", "\"", ")", "\n", "\n", "    ", "#", " Calculate", " the", " unique", " values", " and", " their", " counts", " in", " the", " column", "\n", "    ", "unique", "_", "values", " =", " df", "[", "col", "]", ".", "nun", "ique", "()", "\n", "    ", "counts", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", "\n", "    ", "colors", " =", " COL", "ORS", " *", " int", "(", "unique", "_", "values", " /", " len", "(", "COL", "ORS", "))", "  ", "#", " Repeat", " colors", " if", " necessary", "\n", "\n", "    ", "#", " Create", " the", " pie", " chart", "\n", "    ", "ax", " =", " plt", ".", "sub", "plot", "(", "1", "1", "1", ",", " projection", "='", "polar", "')", "\n", "    ", "ax", ".", "set", "_", "the", "tag", "rid", "s", "([]", ")", "\n", "    ", "plt", ".", "pie", "(", "counts", ".", "values", ",", " labels", "=", "counts", ".", "index", ",", " colors", "=", "colors", ",", " start", "angle", "=", "9", "0", ",", " shadow", "=", "True", ",", " explode", "=(", "0", ",", " ", "0", ".", "1", ",", " ", "0", ",", " ", "0", ".", "1", ",", " ", "0", ")", ",", "\n", "            ", "aut", "op", "ct", "='", "%", "1", ".", "2", "f", "%%", "'", ",", " counter", "clock", "=", "True", ",", " p", "ct", "distance", "=", "0", ".", "6", ",", " text", "props", "={", "'"], "logprobs": [-1.3294174671173096, -0.7342183589935303, -0.8138589859008789, -0.7157440185546875, -0.3336832523345947, -0.5070144534111023, -0.029022304341197014, -0.5820247530937195, -0.009041321463882923, -0.5747545957565308, -0.48640453815460205, -0.2188085913658142, -0.06956055760383606, -0.0221866387873888, -0.5948569774627686, -0.017907723784446716, -0.024388646706938744, -0.010101741179823875, -0.33916544914245605, -0.004030557814985514, -0.04111705720424652, -0.26675549149513245, -0.024254966527223587, -0.0002506657037883997, -0.0025190545711666346, -0.0015783959534019232, -0.040217068046331406, -1.5735502529423684e-05, -0.08784548193216324, -0.30021920800209045, -0.012828678824007511, -1.200950026512146, -8.225102646974847e-05, -0.0018475858960300684, -0.09631019085645676, -0.07483922690153122, -0.000350175570929423, -1.9788545614574105e-05, -0.08298812061548233, -0.07106206566095352, -0.0004094000905752182, -6.186770770000294e-05, -0.03715404495596886, -0.32081881165504456, -0.010379972867667675, -0.0024915861431509256, -0.0014031813479959965, -0.0023756397422403097, -0.03175721317529678, -0.0024109601508826017, -2.52720492426306e-05, -0.24860912561416626, -0.3335932493209839, -1.1907857656478882, -0.8864564895629883, -0.17851775884628296, -0.006547901313751936, -0.6719567775726318, -0.0021460852585732937, -0.04911647364497185, -0.04564327001571655, -0.285665899515152, -0.025685545057058334, -0.004526962526142597, -0.28212812542915344, -0.006046811584383249, -0.02362949214875698, -0.007769838906824589, -0.0039006590377539396, -0.4605540335178375, -0.006222517695277929, -0.0003002431185450405, -0.0014322272036224604, -0.10762757062911987, -0.0005759726045653224, -0.1925702691078186, -2.235269784927368, -0.2353898286819458, -2.181715965270996, -0.11617692559957504, -1.2594060897827148, -0.42107805609703064, -0.41719457507133484, -2.0440406799316406, -0.058656997978687286, -0.45035961270332336, -0.10400029271841049, -0.0004114258335903287, -0.34333229064941406, -0.04514578729867935, -0.14235235750675201, -0.21447370946407318, -0.1340530514717102, -0.0245602298527956, -6.317892984952778e-05, -1.9550132492440753e-05, -6.19869097135961e-05, -2.1235110759735107, -0.0008228015503846109, -0.034387920051813126, -0.047822125256061554, -0.05186326056718826, -0.28725141286849976, -0.02185627445578575, -0.03267292305827141, -0.013816667720675468, -4.255681051290594e-05, -4.732496745418757e-05, -8.225102646974847e-05, -0.014661076478660107, -1.311301275563892e-06, -0.0004633783537428826, -0.05101243406534195, -0.05547083541750908, -1.7613853216171265, -2.1458675861358643, -0.02504875883460045, -1.7760915756225586, -0.0001137191939051263, -1.0420713424682617, -1.6235002279281616, -0.058143340051174164, -0.9867076277732849, -1.9430925021879375e-05, -2.9801878554280847e-05, -0.41880175471305847, -0.05641309171915054, -0.00010847456724150106, -0.005333717446774244, -7.152555099310121e-07, -0.05458954721689224, -1.7854773998260498, -0.0005379660287871957, -1.1215949058532715, -1.2513551712036133, -2.0710508823394775, -0.7954467535018921, -0.07935861498117447, -0.2486611008644104, -0.00035851728171110153, -0.11051757633686066, -0.6935954093933105, -1.0432181358337402, -0.09619835019111633, -0.05547455698251724, -0.5381487607955933, -0.000445385929197073, -0.5817553997039795, -0.01893083192408085, -0.5964363217353821, -0.00017569905321579427, -1.3760769367218018, -0.29331645369529724, -0.3678092658519745, -0.12918885052204132, -0.2556600272655487, -2.276871418871451e-05, -0.09311369061470032, -0.5567055940628052, -0.07991190254688263, -0.10500795394182205, -0.020348835736513138, -0.09353815764188766, -0.03550361841917038, -0.3488394320011139, -0.0006866481271572411, -1.4521217346191406, -0.006416670512408018, -1.3733692169189453, -0.15591780841350555, -0.008623385801911354, -0.08992687612771988, -1.0366593599319458, -0.243896484375, -0.9227343201637268, -0.07116032391786575, -2.1199629306793213, -0.0003307510633021593, -0.6481741666793823, -0.002675645984709263, -0.20075134932994843, -1.2581546306610107, -0.1445213407278061, -0.05225672572851181, -0.2563908100128174, -0.007999761961400509, -0.0806584432721138, -0.0003066784702241421, -0.0013381821336224675, -0.03057246468961239, -0.1960567981004715, -0.0031488381791859865, -0.0076627833768725395, -0.22029641270637512, -1.3171956539154053, -0.004547848366200924, -0.004086121916770935, -0.21674887835979462, -0.0002302858338225633, -0.30182117223739624, -1.9476653337478638, -0.005293994210660458, -0.17353613674640656, -0.4079749584197998, -2.084310531616211, -0.5780622959136963, -0.06768254190683365, -0.5277462601661682, -0.042733579874038696, -0.0184017363935709, -1.913644790649414, -0.6919204592704773, -0.08433539420366287, -0.001319729257375002, -0.002001427114009857, -0.23247365653514862, -0.002705724909901619, -0.0023688608780503273, -1.3938394784927368, -0.2951605021953583, -0.07112046331167221, -0.0025009801611304283, -0.0016265984158962965, -1.6217069625854492, -0.006645957473665476, -0.9407871961593628, -0.05424860492348671, -1.9510712623596191, -0.0013441346818581223, -0.006551217287778854, -0.17218710482120514, -0.0015453074593096972, -0.08050458133220673, -5.3165931603871286e-05, -1.1115676164627075, -0.005353874992579222, -0.02243133820593357, -0.4614279270172119, -0.007726899813860655, -2.205822467803955, -0.004283301532268524, -0.0016505202511325479, -2.283393383026123, -0.4206501245498657, -1.3692342042922974, -0.02033902332186699, -0.034162141382694244, -0.005956991575658321, -0.798089861869812, -0.006163991522043943, -1.2181650400161743, -0.533906877040863, -1.8652430772781372, -0.06378526240587234, -0.22290806472301483, -0.0024217821191996336], "finish_reason": "length"}], "metrics": {"energy": 298.2964572362899, "energy_per_token": 1.1652205360792574, "time": 11.355575, "time_per_token": 0.04435771484375}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"The input df must be DataFrame, not be empty, and must contain the specified column, if it is not, the function will raise ValueError.\")\n    if df.empty:\n        raise ValueError(\"The input df must not be empty.\")\n    if not col in df.columns:\n        raise ValueError(f\"The column '{col}' not in the data frame, please check the data frame.\")\n    if not title:\n        title = ' '.join(df.columns)\n    unique_values = df[col].nunique()\n\n    # Generate colors for each unique value\n    colors = [COLORS[i % len(COLORS)] for i in range(len(unique_values))]\n\n    # Create pie chart\n    fig, ax = plt.subplots()\n    ax.pie(unique_values,\n           labels=unique_values,\n           colors=colors,\n           autopct='%1.0f%%',\n           textprops={'fontsize': 8},\n           shadow=True", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " df", " must", " be", " Data", "Frame", ",", " not", " be", " empty", ",", " and", " must", " contain", " the", " specified", " column", ",", " if", " it", " is", " not", ",", " the", " function", " will", " raise", " Value", "Error", ".", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " df", " must", " not", " be", " empty", ".", "\"", ")", "\n", "    ", "if", " not", " col", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " column", " '", "{", "col", "}'", " not", " in", " the", " data", " frame", ",", " please", " check", " the", " data", " frame", ".", "\"", ")", "\n", "    ", "if", " not", " title", ":", "\n", "        ", "title", " =", " '", " '", ".", "join", "(", "df", ".", "columns", ")", "\n", "    ", "unique", "_", "values", " =", " df", "[", "col", "]", ".", "nun", "ique", "()", "\n", "\n", "    ", "#", " Generate", " colors", " for", " each", " unique", " value", "\n", "    ", "colors", " =", " [", "COL", "ORS", "[", "i", " %", " len", "(", "COL", "ORS", ")]", " for", " i", " in", " range", "(", "len", "(", "unique", "_", "values", "))", "]", "\n", "\n", "    ", "#", " Create", " pie", " chart", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "pie", "(", "unique", "_", "values", ",", "\n", "           ", "labels", "=", "unique", "_", "values", ",", "\n", "           ", "colors", "=", "colors", ",", "\n", "           ", "aut", "op", "ct", "='", "%", "1", ".", "0", "f", "%%", "'", ",", "\n", "           ", "text", "props", "={", "'", "fonts", "ize", "':", " ", "8", "}", ",", "\n", "           ", "shadow", "=", "True"], "logprobs": [-0.7615711092948914, -0.44754669070243835, -0.06285339593887329, -0.0002759314374998212, -0.03629014268517494, -0.0015198357868939638, -0.041521746665239334, -2.455681169521995e-05, -0.1216922327876091, -0.5978573560714722, -0.013428599573671818, -0.003953499253839254, -0.04353909566998482, -0.2376762479543686, -0.0003477922291494906, -0.3104816675186157, -0.35746848583221436, -0.9080771207809448, -0.1532282531261444, -0.43819668889045715, -0.04182372987270355, -0.001207337831147015, -0.18153411149978638, -0.0021470370702445507, -0.08479174971580505, -0.010693156160414219, -0.11409442126750946, -0.005110771395266056, -0.06364332139492035, -0.02069767937064171, -0.013401076197624207, -0.005043877754360437, -0.006766619626432657, -0.004222762770950794, -0.003013595240190625, -0.6062947511672974, -0.05014614015817642, -0.007368174847215414, -0.004491479601711035, -0.0006779517862014472, -0.007729265373200178, -0.009054788388311863, -0.0026914584450423717, -0.0008507922757416964, -0.0003326578007545322, -0.003220373997464776, -0.0004601611872203648, -0.03583283722400665, -0.0281829871237278, -0.0021157516166567802, -0.003008722560480237, -0.43574875593185425, -0.10201077908277512, -1.186686396598816, -0.013169333338737488, -0.027956847101449966, -0.13007894158363342, -0.00751951290294528, -0.0013710394268855453, -0.011821454390883446, -0.003404774935916066, -6.890059739816934e-05, -0.006349864415824413, -0.007942167110741138, -0.07239500433206558, -0.06361468136310577, -0.05444245785474777, -0.10752565413713455, -1.0403944253921509, -0.004623911809176207, -0.021038465201854706, -0.4342920780181885, -0.013519279658794403, -0.0002890407631639391, -0.0007312007946893573, -0.10264892876148224, -0.06590444594621658, -1.480571985244751, -0.42331036925315857, -0.0033347969874739647, -0.05060091242194176, -0.3793521523475647, -0.014801801182329655, -0.003506347304210067, -0.0019326595356687903, -0.0011387537233531475, -0.003920251969248056, -0.01447016280144453, -6.05564855504781e-05, -0.006502777803689241, -1.345510482788086, -0.04489336162805557, -0.2947845160961151, -0.8402115702629089, -1.4287933111190796, -0.0008529362385161221, -0.002442117314785719, -0.0013004426145926118, -1.7343376874923706, -0.7097580432891846, -0.8463106751441956, -2.0782580375671387, -2.363485336303711, -2.0184319019317627, -0.9952653050422668, -0.512204647064209, -1.237844705581665, -2.0781869888305664, -0.3869982957839966, -0.9410372972488403, -0.03434944897890091, -0.0012028133496642113, -0.003149670083075762, -0.6874527931213379, -1.312807559967041, -1.489916443824768, -0.15826652944087982, -0.031840819865465164, -0.023839151486754417, -0.0027375861536711454, -0.3308272659778595, -0.03269876539707184, -2.971432685852051, -1.3155944347381592, -0.31196001172065735, -0.001022531185299158, -0.29651564359664917, -2.4429688453674316, -2.872946262359619, -0.2128993421792984, -0.2611653506755829, -0.3032316565513611, -0.3611781895160675, -3.4521608352661133, -0.11756652593612671, -0.32887396216392517, -0.05472250655293465, -0.3064803183078766, -0.02052718587219715, -0.0004576589271891862, -0.0001573438785271719, -0.00016020445036701858, -0.6696819067001343, -0.0005600076401606202, -0.014750822447240353, -0.031026402488350868, -2.8341457843780518, -0.0006039702566340566, -1.533204197883606, -3.3680291175842285, -2.2239174842834473, -0.24227003753185272, -1.2768582105636597, -0.32372137904167175, -0.010272606275975704, -0.13996393978595734, -0.0012368656462058425, -0.4985505938529968, -0.020618624985218048, -0.29414212703704834, -0.07890836894512177, -6.8662193370983e-05, -0.03857995197176933, -0.17636407911777496, -0.1512901335954666, -0.0052132378332316875, -7.581423415103927e-05, -0.01155835296958685, -9.536738616588991e-07, -0.0035596834495663643, -0.012068702839314938, -0.002293933881446719, -0.009040139615535736, -0.002887011505663395, -0.00022015532886143774, -1.3715697526931763, -4.029192859889008e-05, -0.050490640103816986, -5.125986263010418e-06, -5.722029527532868e-06, -0.005528873298317194, -0.0007205988513305783, -0.0016738465055823326, -0.14520324766635895, -0.00027581225731410086, -0.3727794289588928, -0.7185229063034058, -2.1173949241638184, -0.08628183603286743, -0.44678738713264465, -0.0008580578723922372, -1.922592043876648, -0.0530875064432621, -0.019813477993011475, -0.017447439953684807, -0.0005224770284257829, -9.345571743324399e-05, -0.004326982423663139, -0.00027211778797209263, -0.6280093193054199, -0.003890090622007847, -0.02183469757437706, -0.677331268787384, -0.002030455507338047, -0.01267108041793108, -0.01460045762360096, -0.2854919135570526, -1.5497195136049413e-06, -1.4305104514278355e-06, -0.5334407687187195, -2.972184419631958, -0.15718597173690796, -0.13805411756038666, -0.29500749707221985, -0.81627357006073, -0.0004731489170808345, -1.1086402082582936e-05, -1.2396658658981323, -0.015367083251476288, -0.0007631250191479921, -0.19490313529968262, -0.0011737607419490814, -0.003664446994662285, -0.09219333529472351, -0.004847322590649128, -0.0011410161387175322, -0.2528555989265442, -0.00485776225104928, -0.005331345833837986, -0.05411027371883392, -0.000593962671700865, -0.08525852113962173, -1.0013530300057027e-05, -2.273315191268921, -0.0003131137927994132, -0.0076378220692276955, -0.21130618453025818, -0.010574735701084137, -0.0725633054971695, -0.002152032917365432, -0.9600659012794495, -0.01754150539636612, -0.1345175951719284, -0.001193526084534824, -3.053107261657715, -2.396077979938127e-05, -0.00012134769349358976, -0.04192227125167847, -1.2496562004089355, -0.36268603801727295, -0.035026270896196365, -0.017390739172697067, -0.004690003115683794, -1.6757522821426392, -0.001981796696782112, -0.3178573250770569], "finish_reason": "length"}], "metrics": {"energy": 283.1887114791868, "energy_per_token": 1.1062059042155734, "time": 11.150383, "time_per_token": 0.04355618359375}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(f\"{df} is not of type DataFrame\")\n    if len(df) == 0:\n        raise ValueError(f\"{df} is empty\")\n    if col not in df.columns:\n        raise ValueError(f\"{df} does not contain {col} column\")\n    unique_values = len(df[col].unique())\n    fig, ax = plt.subplots()\n    labels = [f'Value {i+1}' for i in range(unique_values)]\n    values = df[col].value_counts().sort_index()\n    ax.pie(\n        values.values,\n        labels=labels,\n        autopct='%1.1f%%',\n        startangle=90,\n        colors=COLORS,\n        textprops={'size': 10},\n        labeldistance=1.25\n    )\n    if title is not None:\n        ax.set_title(title)\n    ax.legend(title='Categories')\n    return ax", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "df", "}", " is", " not", " of", " type", " Data", "Frame", "\"", ")", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "df", "}", " is", " empty", "\"", ")", "\n", "    ", "if", " col", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "df", "}", " does", " not", " contain", " {", "col", "}", " column", "\"", ")", "\n", "    ", "unique", "_", "values", " =", " len", "(", "df", "[", "col", "]", ".", "unique", "())", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "labels", " =", " [", "f", "'", "Value", " {", "i", "+", "1", "}'", " for", " i", " in", " range", "(", "unique", "_", "values", ")]", "\n", "    ", "values", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", ".", "sort", "_", "index", "()", "\n", "    ", "ax", ".", "pie", "(", "\n", "        ", "values", ".", "values", ",", "\n", "        ", "labels", "=", "labels", ",", "\n", "        ", "aut", "op", "ct", "='", "%", "1", ".", "1", "f", "%%", "'", ",", "\n", "        ", "start", "angle", "=", "9", "0", ",", "\n", "        ", "colors", "=", "COL", "ORS", ",", "\n", "        ", "text", "props", "={", "'", "size", "':", " ", "1", "0", "}", ",", "\n", "        ", "label", "distance", "=", "1", ".", "2", "5", "\n", "    ", ")", "\n", "    ", "if", " title", " is", " not", " None", ":", "\n", "        ", "ax", ".", "set", "_", "title", "(", "title", ")", "\n", "    ", "ax", ".", "legend", "(", "title", "='", "Categories", "')", "\n", "    ", "return", " ax"], "logprobs": [-0.7615711092948914, -0.44754669070243835, -0.06285339593887329, -0.0002759314374998212, -0.03629014268517494, -0.0015198357868939638, -0.041521746665239334, -2.455681169521995e-05, -0.1216922327876091, -0.5978573560714722, -0.013428599573671818, -0.003953499253839254, -0.04353909566998482, -0.2376762479543686, -0.0003477922291494906, -0.3104816675186157, -1.349629282951355, -0.25619328022003174, -2.2134432792663574, -0.3842281699180603, -0.12970572710037231, -0.31891563534736633, -0.04762277752161026, -3.40048885345459, -0.18406321108341217, -0.5731586813926697, -0.02298964560031891, -0.6820330619812012, -0.0006982034537941217, -0.002477435627952218, -0.27683258056640625, -0.15673846006393433, -1.3654289245605469, -0.0002571013756096363, -0.0024760086089372635, -0.11565736681222916, -0.13430239260196686, -0.0013856819132342935, -0.0001037067049765028, -0.04975740239024162, -0.00989036075770855, -0.0007546676206402481, -0.01309674046933651, -0.005311781074851751, -0.00011514954530866817, -0.020757462829351425, -0.3245609402656555, -0.01299766730517149, -0.19504782557487488, -0.12143729627132416, -0.0159072894603014, -0.10452454537153244, -0.17142824828624725, -0.13609495759010315, -0.0001323135511483997, -0.001029080944135785, -0.08712231367826462, -0.06843692809343338, -0.2532413899898529, -0.004516638349741697, -9.929640509653836e-05, -0.025985609740018845, -0.36234408617019653, -0.025271721184253693, -0.004432614892721176, -0.001446987851522863, -0.0008709213580004871, -0.005181692540645599, -0.016267186030745506, -0.00010322991875000298, -0.0024272524751722813, -0.02727556973695755, -0.014505410566926003, -0.1889650672674179, -1.082648515701294, -0.06515797227621078, -0.5100769996643066, -0.004732360597699881, -0.309425950050354, -1.327568531036377, -0.003152522025629878, -1.3403432369232178, -0.11651214957237244, -0.06808953732252121, -0.0005012686015106738, -0.0017469158628955483, -0.9393473267555237, -2.4063944816589355, -0.0957263708114624, -0.24267713725566864, -0.06137370318174362, -2.446174144744873, -0.0013975863112136722, -0.2659313976764679, -0.017659103497862816, -0.00045813556062057614, -0.0037707434967160225, -1.5020257706055418e-05, -0.0953187644481659, -0.0014386551920324564, -0.024177473038434982, -0.08561356365680695, -2.3029961585998535, -0.08250865340232849, -0.03760511800646782, -0.02532065473496914, -0.00044979469384998083, -4.768258077092469e-05, -0.000529149197973311, -0.00022742546570952982, -0.3869871199131012, -0.011936192400753498, -0.05424013361334801, -2.2607648372650146, -0.009874425828456879, -1.928116798400879, -0.9550856351852417, -2.8698484897613525, -1.7438299655914307, -0.46523517370224, -0.2732943594455719, -0.811549723148346, -0.0009723940747790039, -0.1842254400253296, -0.0062925308011472225, -0.0014321081107482314, -0.0065513355657458305, -0.0017099058022722602, -0.0002760506176855415, -0.03797117993235588, -2.9801878554280847e-05, -4.160317621426657e-05, -0.008135159499943256, -0.018926504999399185, -0.028606614097952843, -1.9835827350616455, -0.0077132959850132465, -0.5041773915290833, -0.02758246287703514, -9.142934868577868e-05, -0.0002711643755901605, -0.0059943185187876225, -0.033342231065034866, -3.0874729418428615e-05, -0.00026782741770148277, -0.04558928310871124, -0.671904981136322, -3.2562289237976074, -3.242440288886428e-05, -0.4685063660144806, -0.02637789212167263, -0.8448860049247742, -0.023592816665768623, -1.4269009828567505, -0.0038955530617386103, -0.006849855184555054, -0.004843170288950205, -2.416053295135498, -0.039163704961538315, -0.011389121413230896, -1.8985892534255981, -0.15091963112354279, -0.056609343737363815, -0.11927135288715363, -0.0006012300727888942, -0.09935598820447922, -0.015131215564906597, -0.08021406084299088, -0.012946479953825474, -0.005279171280562878, -0.002033310942351818, -1.554895281791687, -0.003141589229926467, -0.004198190290480852, -0.2475162297487259, -0.0006847421173006296, -0.08747102320194244, -5.245195097813848e-06, -0.44897451996803284, -0.002074234653264284, -0.004289830103516579, -0.0037238318473100662, -0.024264391511678696, -0.026981692761182785, -0.010464913211762905, -2.3271820545196533, -0.007009557913988829, -0.013090739957988262, -0.10257072001695633, -0.00040975757292471826, -0.04281444475054741, -0.00290198833681643, -0.024588841944932938, -0.7379651069641113, -0.5334079265594482, -0.11313463747501373, -5.245195097813848e-06, -0.5551779866218567, -0.012227692641317844, -0.4128348231315613, -1.4083013534545898, -0.044827595353126526, -0.2468998283147812, -0.038809891790151596, -0.9201073050498962, -0.0008594871615059674, -1.1845042705535889, -0.5834168195724487, -1.1354719400405884, -0.18670523166656494, -0.4264559745788574, -0.018406419083476067, -0.4486809968948364, -2.4850215911865234, -0.04702369496226311, -0.004726665560156107, -0.19016818702220917, -0.015936503186821938, -0.5761193633079529, -1.2248353958129883, -1.324751853942871, -0.07802897691726685, -0.0017764277290552855, -0.0029620127752423286, -0.05244090035557747, -1.0146870613098145, -0.01203372236341238, -0.8953412175178528, -0.053030528128147125, -0.00011205045302631333, -0.0013821106404066086, -0.004619165789335966, -0.0016874135471880436, -0.05856211110949516, -0.00019905969384126365, -0.007122956681996584, -0.003240930614992976, -0.000485183292767033, -0.0006403064471669495, -0.02880527265369892, -0.6197411417961121, -0.002414408838376403, -0.05130986496806145, -1.9458582401275635, -0.0016762267332524061, -1.2564470767974854, -0.0631774291396141, -2.456545352935791, -0.7700996398925781, -4.232862949371338, -0.2699589431285858, -0.015630004927515984, -0.022221500054001808, -0.4396919906139374, -0.016154468059539795], "finish_reason": "stop"}], "metrics": {"energy": 261.02877828598025, "energy_per_token": 1.0236422677881578, "time": 11.353744, "time_per_token": 0.044524486274509806}}
{"outputs": [{"text": "# Check if the input df is DataFrame, not empty, and contains the specified column, if not, raise ValueError\n    if not isinstance(df, pd.core.frame.DataFrame) or len(df) == 0 or col not in df.columns:\n        raise ValueError('Input DataFrame must be a non-empty DataFrame containing the specified column.')\n\n    # Set the title if specified\n    if title:\n        plt.title(title)\n\n    # Get the unique values in the column\n    unique_values = df[col].unique()\n\n    # Create an empty pie chart and set the labels\n    plt.pie([], labels=[])\n    plt.axis('equal')\n\n    # Get the lengths of all the slices, set the colors for them, and create a pie chart\n    unique_slices = []\n    colors = []\n    for i, v in enumerate(unique_values):\n        unique_slices.append(df[col].value_counts(normalize=True)[v])\n        colors.append(COLORS[i % len(COLORS)])\n    plt.pie(unique", "tokens": ["#", " Check", " if", " the", " input", " df", " is", " Data", "Frame", ",", " not", " empty", ",", " and", " contains", " the", " specified", " column", ",", " if", " not", ",", " raise", " Value", "Error", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "core", ".", "frame", ".", "DataFrame", ")", " or", " len", "(", "df", ")", " ==", " ", "0", " or", " col", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "('", "Input", " Data", "Frame", " must", " be", " a", " non", "-", "empty", " Data", "Frame", " containing", " the", " specified", " column", ".", "')", "\n", "\n", "    ", "#", " Set", " the", " title", " if", " specified", "\n", "    ", "if", " title", ":", "\n", "        ", "plt", ".", "title", "(", "title", ")", "\n", "\n", "    ", "#", " Get", " the", " unique", " values", " in", " the", " column", "\n", "    ", "unique", "_", "values", " =", " df", "[", "col", "]", ".", "unique", "()", "\n", "\n", "    ", "#", " Create", " an", " empty", " pie", " chart", " and", " set", " the", " labels", "\n", "    ", "plt", ".", "pie", "([]", ",", " labels", "=", "[]", ")", "\n", "    ", "plt", ".", "axis", "('", "equal", "')", "\n", "\n", "    ", "#", " Get", " the", " lengths", " of", " all", " the", " slices", ",", " set", " the", " colors", " for", " them", ",", " and", " create", " a", " pie", " chart", "\n", "    ", "unique", "_", "sl", "ices", " =", " []", "\n", "    ", "colors", " =", " []", "\n", "    ", "for", " i", ",", " v", " in", " enumerate", "(", "unique", "_", "values", "):", "\n", "        ", "unique", "_", "sl", "ices", ".", "append", "(", "df", "[", "col", "]", ".", "value", "_", "counts", "(", "normal", "ize", "=", "True", ")[", "v", "])", "\n", "        ", "colors", ".", "append", "(", "COL", "ORS", "[", "i", " %", " len", "(", "COL", "ORS", ")]", ")", "\n", "    ", "plt", ".", "pie", "(", "unique"], "logprobs": [-1.3294174671173096, -0.7342183589935303, -0.8138589859008789, -0.7157440185546875, -0.3336832523345947, -0.5070144534111023, -0.029022304341197014, -0.5820247530937195, -0.009041321463882923, -0.5747545957565308, -0.48640453815460205, -0.2188085913658142, -0.06956055760383606, -0.0221866387873888, -0.5948569774627686, -0.017907723784446716, -0.024388646706938744, -0.010101741179823875, -1.8035266399383545, -0.18082867562770844, -0.980431318283081, -0.048761509358882904, -0.3533151149749756, -0.05518321320414543, -0.003916095942258835, -0.33140647411346436, -0.010499831289052963, -0.03948656842112541, -0.2002735435962677, -0.032104987651109695, -0.00024720950750634074, -0.00310463085770607, -0.001168402610346675, -0.04175844416022301, -2.253030106658116e-05, -2.6935462951660156, -2.753696753643453e-05, -0.17364396154880524, -0.0009260656661354005, -0.0013971101725474, -0.4438607692718506, -0.020700950175523758, -1.182427167892456, -8.177422569133341e-05, -0.004081135615706444, -0.0865626186132431, -0.07890814542770386, -0.0006006343755871058, -3.790783375734463e-05, -0.1479826122522354, -0.08850528299808502, -0.00046528480015695095, -0.00012730741582345217, -0.06095801666378975, -0.20278027653694153, -0.01629721187055111, -0.005068192724138498, -0.0028703701682388783, -0.00418287655338645, -0.020208772271871567, -0.0035327188670635223, -2.002696055569686e-05, -1.6190862655639648, -1.3317877054214478, -2.085054874420166, -0.015366495586931705, -0.28416696190834045, -0.043873097747564316, -1.546708583831787, -0.6464522480964661, -0.008720765821635723, -0.0004711233195848763, -0.09678979218006134, -0.0013453251449391246, -0.8327900767326355, -0.08538834005594254, -0.05495350807905197, -0.003311390522867441, -0.5877726078033447, -0.005743073765188456, -0.00038378025055862963, -0.11230061948299408, -0.0008075552177615464, -0.21273978054523468, -3.7531027793884277, -0.4143071472644806, -0.5977811813354492, -1.1651840209960938, -0.2025652527809143, -0.3307790458202362, -0.00040928093949332833, -0.1022873967885971, -0.0042932722717523575, -0.3890819847583771, -0.0029440652579069138, -0.0008588915807195008, -0.23382100462913513, -0.00025340684805996716, -0.0336628295481205, -0.0004798214649781585, -0.012618816457688808, -0.020172089338302612, -0.0038479347713291645, -0.04835576191544533, -0.0015633992152288556, -0.06340201199054718, -1.377946376800537, -0.21911734342575073, -0.6362447738647461, -0.021293949335813522, -0.8806971311569214, -0.013876157812774181, -0.4288628399372101, -0.952204704284668, -0.0001864259538706392, -0.2418806552886963, -0.012595626525580883, -0.11539409309625626, -0.0038773848209530115, -0.2528386414051056, -0.01645834371447563, -9.798523387871683e-05, -3.6477376852417365e-05, -6.246371776796877e-05, -0.37479689717292786, -0.00017534149810671806, -0.017402103170752525, -0.07576407492160797, -0.0002494739310350269, -0.011834177188575268, -1.4210333824157715, -2.9985291957855225, -0.4584120810031891, -0.6902356147766113, -0.04292899742722511, -2.7477736473083496, -0.5539213418960571, -0.28913962841033936, -1.5054194927215576, -0.9387326836585999, -0.00039736481267027557, -0.6913843750953674, -0.0006544832140207291, -0.03994312137365341, -0.759962260723114, -0.08470161259174347, -0.2746947407722473, -0.04019840061664581, -0.21323351562023163, -0.26501092314720154, -0.009582002647221088, -0.6783303022384644, -1.6942412853240967, -0.0014862692914903164, -0.1688692569732666, -0.008614049293100834, -0.3833242356777191, -5.1020273531321436e-05, -0.0727023258805275, -0.10602638870477676, -0.0003426679759286344, -0.026377661153674126, -3.1362390518188477, -0.07656683772802353, -4.015035152435303, -0.12948539853096008, -2.312960624694824, -1.0196378231048584, -0.6383827924728394, -2.998939037322998, -3.864132881164551, -0.7937980890274048, -0.8885959982872009, -2.7569401264190674, -1.9941093921661377, -0.5090694427490234, -0.27029114961624146, -2.406797409057617, -0.7230337858200073, -1.8829033374786377, -0.06812695413827896, -0.5773472785949707, -0.0013566347770392895, -4.064785480499268, -0.0018985120113939047, -2.744983196258545, -0.002426419872790575, -0.13118049502372742, -1.348050594329834, -0.01332473661750555, -0.008920933119952679, -1.4904754161834717, -0.08120507746934891, -0.2862597107887268, -0.0027336629573255777, -0.03625737875699997, -0.12181075662374496, -1.3306684494018555, -0.7374544739723206, -2.70450496673584, -0.002840415108948946, -0.004086003173142672, -0.000676998752169311, -0.03775918111205101, -2.610649426060263e-05, -5.98412734689191e-05, -0.004678612574934959, -0.0025215516798198223, -0.004801410716027021, -0.9920833706855774, -0.00026294111739844084, -0.02166358008980751, -1.0013530300057027e-05, -0.005354942288249731, -0.001862221397459507, -0.02471933886408806, -1.0130765438079834, -0.056571830064058304, -0.0008435266790911555, -0.018560659140348434, -0.028995785862207413, -0.5892815589904785, -0.00013064485392533243, -0.003110334975644946, -2.662043809890747, -0.13917337357997894, -0.0015926783671602607, -0.005323045887053013, -0.003466075984761119, -0.03266219049692154, -0.02857660874724388, -0.057702112942934036, -0.008867409080266953, -0.0043472787365317345, -0.028538726270198822, -0.005908049177378416, -0.0017033604672178626, -0.004755022004246712, -0.00685127591714263, -2.4318398573086597e-05, -0.0066117336973547935, -0.0072403657250106335, -0.07323537021875381, -0.025151759386062622, -4.029192859889008e-05, -0.0027141659520566463, -8.344646857949556e-07, -0.0006808108882978559, -0.00396454194560647, -0.004461097996681929, -0.49252280592918396, -0.25664353370666504, -0.000649956171400845, -0.007247821893543005, -0.0014762704959139228, -0.05441062152385712], "finish_reason": "length"}], "metrics": {"energy": 255.46920669841782, "energy_per_token": 0.9979265886656946, "time": 11.144129, "time_per_token": 0.04353175390625}}
{"outputs": [{"text": "if df is None or df.empty:\n        raise ValueError(\"Input DataFrame must not be empty\")\n\n    if col not in df:\n        raise ValueError(\"The specified column not found in the DataFrame\")\n\n    color_map = {}\n    for index, value in df[col].value_counts().iteritems():\n        if len(color_map) < len(COLORS):\n            color_map[index] = COLORS[len(color_map)]\n        else:\n            color_map[index] = random.choice(COLORS)\n\n    ax = df[col].value_counts().plot.pie(\n        y=col,\n        figsize=(5, 5),\n        wedgeprops={'edgecolor': 'white', 'linewidth': 2, 'antialiased': True},\n        textprops={'size': 'x-large', 'color': 'black'},\n        autopct='%.2f%%',\n        pctdistance=0.5,\n        legend=False,\n        label=False,\n        counter", "tokens": ["if", " df", " is", " None", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " must", " not", " be", " empty", "\"", ")", "\n", "\n", "    ", "if", " col", " not", " in", " df", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " specified", " column", " not", " found", " in", " the", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "color", "_", "map", " =", " {}", "\n", "    ", "for", " index", ",", " value", " in", " df", "[", "col", "]", ".", "value", "_", "counts", "()", ".", "iter", "items", "():", "\n", "        ", "if", " len", "(", "color", "_", "map", ")", " <", " len", "(", "COL", "ORS", "):", "\n", "            ", "color", "_", "map", "[", "index", "]", " =", " COL", "ORS", "[", "len", "(", "color", "_", "map", ")]", "\n", "        ", "else", ":", "\n", "            ", "color", "_", "map", "[", "index", "]", " =", " random", ".", "choice", "(", "COL", "ORS", ")", "\n", "\n", "    ", "ax", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", ".", "plot", ".", "pie", "(", "\n", "        ", "y", "=", "col", ",", "\n", "        ", "fig", "size", "=(", "5", ",", " ", "5", ")", ",", "\n", "        ", "wedge", "props", "={", "'", "edge", "color", "':", " '", "white", "'", ",", " '", "linewidth", "':", " ", "2", ",", " '", "ant", "ial", "i", "ased", "':", " True", "}", ",", "\n", "        ", "text", "props", "={", "'", "size", "':", " '", "x", "-", "large", "'", ",", " '", "color", "':", " '", "black", "'}", ",", "\n", "        ", "aut", "op", "ct", "='", "%", ".", "2", "f", "%%", "'", ",", "\n", "        ", "p", "ct", "distance", "=", "0", ".", "5", ",", "\n", "        ", "legend", "=", "False", ",", "\n", "        ", "label", "=", "False", ",", "\n", "        ", "counter"], "logprobs": [-0.7615711092948914, -2.6560771465301514, -1.6139582395553589, -0.0315559059381485, -0.3551604449748993, -1.2353569269180298, -0.07534006983041763, -0.02426287904381752, -0.5734617710113525, -0.027828743681311607, -0.0027331875171512365, -0.05065111815929413, -0.009865100495517254, -7.021180499577895e-05, -0.36246636509895325, -0.1314452886581421, -1.403509497642517, -1.03550124168396, -0.0167103111743927, -0.8653073906898499, -0.41095075011253357, -0.0015998195158317685, -0.3088245689868927, -0.7691727876663208, -0.0004001055203843862, -0.002955951262265444, -0.8582497239112854, -0.0002469711471349001, -0.18208622932434082, -0.3737557828426361, -0.034458521753549576, -4.6967357775429264e-05, -0.00873175635933876, -1.5941855907440186, -0.003644730430096388, -0.0010307481279596686, -0.006118140183389187, -0.033275239169597626, -5.1973900554003194e-05, -0.015846511349081993, -0.7356512546539307, -1.6926524639129639, -0.7122900485992432, -0.014958477579057217, -2.768972396850586, -1.169565200805664, -0.17896310985088348, -0.2612268626689911, -0.47113391757011414, -0.004637439269572496, -0.2644709050655365, -0.0007142852991819382, -0.001471152063459158, -0.05480805039405823, -0.000485183292767033, -4.568625450134277, -0.10962262004613876, -2.8121464252471924, -0.029664089903235435, -1.315521240234375, -0.061950694769620895, -0.14886228740215302, -0.5328487157821655, -1.652595043182373, -0.05013208091259003, -1.135737419128418, -0.0014448452275246382, -0.9697747230529785, -0.08625351637601852, -0.0005352256703190506, -0.0006171943969093263, -6.794906312279636e-06, -0.1722707897424698, -1.4424220353248529e-05, -0.001750604948028922, -0.03286696597933769, -0.0019595485646277666, -1.4159023761749268, -0.06287332624197006, -0.00012087091454304755, -0.011960811913013458, -0.005565267987549305, -2.040534496307373, -1.2995424270629883, -0.000259365770034492, -0.3422151207923889, -2.7179348762729205e-05, -7.116541382856667e-05, -0.030725650489330292, -0.9348653554916382, -0.038716088980436325, -0.00021789084712509066, -0.0014118712861090899, -5.722029527532868e-06, -0.004388701636344194, -0.016071418300271034, -0.0011302995262667537, -0.03797944262623787, -0.14641988277435303, -0.0031749813351780176, -0.02034182660281658, -0.07588297873735428, -0.002546165604144335, -6.16293036728166e-05, -0.011028642766177654, -0.0002335037279408425, -0.032938484102487564, -0.008383085019886494, -3.480850500636734e-05, -0.0002699726028367877, -2.3364747903542593e-05, -3.4570634852570947e-06, -0.016046196222305298, -0.009435582906007767, -0.1622152477502823, -0.026676123961806297, -9.321732068201527e-05, -0.0025227407459169626, -0.0006211258587427437, -0.5290311574935913, -0.012230283580720425, -0.012067054398357868, -0.010972048155963421, -0.004350364673882723, -0.0017435838235542178, -0.004822883754968643, -2.2140445709228516, -0.04005296155810356, -0.02185615710914135, -0.0030958366114646196, -0.009408066980540752, -6.9141146923357155e-06, -0.00998714566230774, -0.01403391920030117, -0.1314990222454071, -0.004604333080351353, -1.3617311716079712, -0.020677128806710243, -0.10978712886571884, -0.008099212311208248, -0.00031859567388892174, -0.0005203323671594262, -0.0005852655158378184, -0.014584480784833431, -4.529942543740617e-06, -0.0010542079107835889, -0.08648029714822769, -0.002028076210990548, -0.04229395464062691, -0.17877739667892456, -0.00038747431244701147, -0.009916682727634907, -1.2253106832504272, -0.04560921713709831, -2.0425972938537598, -1.0913567543029785, -0.423682302236557, -0.002117179101333022, -0.6511136889457703, -0.0004962643142789602, -1.9804701805114746, -0.00038342276820912957, -0.0407819002866745, -1.5500507354736328, -0.02546546421945095, -0.042796630412340164, -0.04109394550323486, -0.0032695666886866093, -0.0033456087112426758, -0.010141981765627861, -0.0008736607851460576, -2.574002265930176, -0.0026100161485373974, -0.44407594203948975, -0.04098948463797569, -1.542702317237854, -0.0005329619161784649, -0.0008216104470193386, -0.08701905608177185, -1.0171916484832764, -2.0627646446228027, -0.002993152942508459, -0.04895836114883423, -0.012159035541117191, -0.00019691436318680644, -0.00910416804254055, -1.691343903541565, -1.7636537551879883, -0.047354716807603836, -1.2198413610458374, -0.0031291113700717688, -0.016502317041158676, -4.637133679352701e-05, -0.0007717015105299652, -0.017279788851737976, -0.06862571835517883, -0.013757055625319481, -0.014180726371705532, -0.005394900683313608, -3.636496067047119, -0.01095318328589201, -0.10859019309282303, -0.03619851544499397, -1.2724475860595703, -0.00037353215157054365, -0.4470861852169037, -0.8445313572883606, -0.0030658883042633533, -0.04081245884299278, -0.935225248336792, -0.00040522945346310735, -0.018845906481146812, -0.19498896598815918, -0.0007853999268263578, -0.11971469223499298, -0.8961907625198364, -0.19172930717468262, -0.0102468840777874, -0.007164145819842815, -0.005552109330892563, -1.4722386598587036, -0.007581745274364948, -0.006409327033907175, -0.23343992233276367, -0.004978284705430269, -1.9152756929397583, -0.46171805262565613, -0.005842038430273533, -0.2101079672574997, -0.0130482641980052, -0.008839878253638744, -0.034467387944459915, -0.0025782696902751923, -1.7486549615859985, -0.035640519112348557, -0.071759432554245, -0.008824044838547707, -0.4135825037956238, -0.0034048936795443296, -2.2517035007476807, -0.3877719044685364, -0.021199069917201996, -0.0029318227898329496, -3.5283203125, -0.017751391977071762, -0.7248849868774414, -0.06744008511304855, -0.011833587661385536, -0.013884386979043484, -3.4131455421447754, -1.1066975593566895, -1.35410475730896, -0.0942775309085846, -0.00825245026499033, -0.022389957681298256, -2.5562801361083984], "finish_reason": "length"}], "metrics": {"energy": 253.34106042385093, "energy_per_token": 0.9896135172806677, "time": 11.153856, "time_per_token": 0.04356975}}
{"outputs": [{"text": "try:\n        assert isinstance(df, pd.DataFrame)\n    except AssertionError:\n        print(f\"df must be a pandas DataFrame, not {type(df)}\")\n        raise\n    if df.empty:\n        print(\"df cannot be empty!\")\n        raise ValueError\n    try:\n        assert col in df\n    except AssertionError:\n        print(f\"df does not have column {col!r}.\")\n        raise\n    data = df[col].value_counts()\n    n_unique = len(data)\n    if n_unique <= len(COLORS):\n        labels, colors = data.index, COLORS[:n_unique]\n    else:\n        colors = pd.Series(data.index).apply(lambda x: task_func(df, col, title=title))\n    ax = plt.pie(data, colors=colors, labels=labels, autopct='%1.1f%%', title=title)\n    return ax", "tokens": ["try", ":", "\n", "        ", "assert", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", "\n", "    ", "except", " Ass", "ert", "ion", "Error", ":", "\n", "        ", "print", "(", "f", "\"", "df", " must", " be", " a", " pandas", " Data", "Frame", ",", " not", " {", "type", "(", "df", ")}", "\"", ")", "\n", "        ", "raise", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "print", "(", "\"", "df", " cannot", " be", " empty", "!", "\"", ")", "\n", "        ", "raise", " Value", "Error", "\n", "    ", "try", ":", "\n", "        ", "assert", " col", " in", " df", "\n", "    ", "except", " Ass", "ert", "ion", "Error", ":", "\n", "        ", "print", "(", "f", "\"", "df", " does", " not", " have", " column", " {", "col", "!", "r", "}", ".", "\"", ")", "\n", "        ", "raise", "\n", "    ", "data", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", "\n", "    ", "n", "_", "unique", " =", " len", "(", "data", ")", "\n", "    ", "if", " n", "_", "unique", " <=", " len", "(", "COL", "ORS", "):", "\n", "        ", "labels", ",", " colors", " =", " data", ".", "index", ",", " COL", "ORS", "[:", "n", "_", "unique", "]", "\n", "    ", "else", ":", "\n", "        ", "colors", " =", " pd", ".", "Series", "(", "data", ".", "index", ")", ".", "apply", "(", "lambda", " x", ":", " task", "_", "func", "(", "df", ",", " col", ",", " title", "=", "title", "))", "\n", "    ", "ax", " =", " plt", ".", "pie", "(", "data", ",", " colors", "=", "colors", ",", " labels", "=", "labels", ",", " aut", "op", "ct", "='", "%", "1", ".", "1", "f", "%%", "'", ",", " title", "=", "title", ")", "\n", "    ", "return", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.3700459003448486, -0.0020208191126585007, -0.015671784058213234, -0.01481624785810709, -1.7588880062103271, -0.3043936491012573, -0.0004850641416851431, -0.03959141671657562, -0.0018521074671298265, -0.04750308021903038, -2.13382354559144e-05, -0.14474332332611084, -0.0006559127941727638, -0.7593516707420349, -2.5461933612823486, -0.0025766051840037107, -0.3752000033855438, -0.0001525762490928173, -3.40932747349143e-05, -7.164221460698172e-05, -0.07029542326927185, -0.03295578807592392, -0.0031524032820016146, -2.336203098297119, -0.2936802804470062, -1.230475902557373, -0.3097122311592102, -3.295116424560547, -0.42824670672416687, -0.01116492785513401, -1.2707421779632568, -1.2569186687469482, -0.3338806629180908, -0.030922038480639458, -0.3586220443248749, -0.30501869320869446, -0.456609845161438, -0.04050879552960396, -0.0003406421164982021, -0.0026018121279776096, -0.14935943484306335, -0.42509815096855164, -0.002692884998396039, -0.00872383825480938, -0.24784128367900848, -0.5263479351997375, -0.7005525231361389, -0.5906767845153809, -1.022768497467041, -1.3412785530090332, -0.017955848947167397, -0.04678221046924591, -0.09750568121671677, -0.01701132208108902, -0.0007950482540763915, -0.23971809446811676, -0.08242149651050568, -0.21313691139221191, -0.36854633688926697, -2.113678216934204, -0.004710054956376553, -0.01770630292594433, -3.124749183654785, -0.05001359432935715, -0.000428108120104298, -0.0026087083388119936, -0.03070830926299095, -0.047007087618112564, -1.1319549083709717, -0.00010930894495686516, -0.11139979213476181, -0.20364312827587128, -0.8504703640937805, -0.0004368066438473761, -0.002493250882253051, -0.0018646011594682932, -0.19891566038131714, -0.2049168050289154, -0.0034563345834612846, -0.04676685109734535, -2.317629098892212, -0.013750588521361351, -0.00024911639047786593, -0.02351049706339836, -0.0002828436263371259, -0.00020597243565134704, -2.0265373677830212e-05, -0.0032667149789631367, -0.004137646406888962, -0.0006835508393123746, -0.09389375150203705, -0.007252910640090704, -0.09581877291202545, -0.0414854921400547, -2.2364683151245117, -1.2105903625488281, -0.00563959451392293, -1.617559790611267, -1.000427007675171, -0.37312114238739014, -0.005704077892005444, -2.4083948135375977, -0.015199786052107811, -0.6311642527580261, -1.5097460746765137, -0.13544324040412903, -0.0015891077928245068, -0.005006752442568541, -0.006318829022347927, -0.011861861683428288, -0.252473384141922, -0.4319894313812256, -4.225878715515137, -0.08561082929372787, -0.34341609477996826, -0.09407442808151245, -0.0009970461251214147, -0.0007142852991819382, -0.1910281777381897, -0.08934105932712555, -8.284702198579907e-05, -0.0008550802012905478, -0.08529376238584518, -0.2151271551847458, -0.06912846118211746, -3.6080474853515625, -0.5108648538589478, -1.948737382888794, -0.18602679669857025, -0.6243723034858704, -0.0006715188501402736, -0.10994594544172287, -0.21857446432113647, -0.023764653131365776, -0.0677952766418457, -1.54307222366333, -0.9219120144844055, -0.00043561504571698606, -2.90866428258596e-05, -1.9685981273651123, -0.4255776107311249, -0.0002286172821186483, -0.003675017738714814, -6.318072337307967e-06, -0.009854004718363285, -0.029685035347938538, -0.002319623716175556, -3.2393064498901367, -2.527095079421997, -0.32754671573638916, -0.04015912488102913, -0.8691120743751526, -0.017861705273389816, -0.020345915108919144, -0.5148014426231384, -0.24271202087402344, -8.308542601298541e-05, -1.7809069156646729, -0.07596109807491302, -3.576272320060525e-06, -3.707340147229843e-05, -0.004361996427178383, -0.011624930426478386, -0.05324473977088928, -0.009201737120747566, -3.194758028257638e-05, -0.005614227149635553, -0.0004058252670802176, -1.6853835582733154, -0.055859047919511795, -2.9597396850585938, -8.451581379631534e-05, -0.12137489765882492, -0.06492194533348083, -1.9540692567825317, -0.40945667028427124, -0.04030558094382286, -0.39958930015563965, -0.04676230251789093, -1.0439374446868896, -0.08565306663513184, -0.26731300354003906, -0.15226693451404572, -0.002955594565719366, -4.3432745933532715, -0.03681411221623421, -0.3161928653717041, -1.3016330003738403, -1.1312212944030762, -0.05485115945339203, -1.6053767204284668, -0.2906799912452698, -0.533309280872345, -0.7779268026351929, -0.49856412410736084, -0.643541693687439, -0.7697944641113281, -1.214939832687378, -1.564512014389038, -0.018948962911963463, -1.232454538345337, -0.00025328766787424684, -0.5478818416595459, -0.004380155820399523, -0.2978658378124237, -0.14180371165275574, -1.7546404600143433, -0.026280591264367104, -0.01768791489303112, -0.07394827902317047, -0.6394062042236328, -0.013881330378353596, -0.33229783177375793, -0.10236822068691254, -0.8237268328666687, -0.0006306566647253931, -0.007102242670953274, -0.18063296377658844, -0.0006680640508420765, -0.20286154747009277, -3.361645576660521e-05, -0.3139074742794037, -0.0024123871698975563, -0.003752572927623987, -0.3335134983062744, -0.007060340140014887, -0.5504905581474304, -0.008734947070479393, -0.020592818036675453, -0.23502564430236816, -0.00867585837841034, -0.02736198715865612, -0.45304301381111145, -0.005232686642557383, -1.3543035984039307, -8.344646857949556e-07, -1.0728830375228426e-06, -7.164221460698172e-05, -0.00011228884250158444, -0.09907802194356918], "finish_reason": "stop"}], "metrics": {"energy": 239.04163182544718, "energy_per_token": 0.9960067992726966, "time": 10.521567, "time_per_token": 0.0438398625}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame) or len(df) == 0:\n        raise ValueError('Invalid DataFrame input. Please provide valid data.')\n    if col not in df.columns:\n        raise ValueError(f'{col} is not a valid column name. Please provide a valid column name.')\n\n    n_values = len(df[col].unique())\n    if n_values < len(COLORS):\n        df_pie = df.pivot_table(index=col, values='index').count()\n        df_pie = df_pie.sort_values(ascending=False)\n        df_pie = df_pie.reset_index()\n        ax = df_pie.plot.pie(col=col, figsize=(10, 10), shadow=True, autopct='%.2f')\n        ax.set_title(f'{title}' if title else None)\n        return ax\n    else:\n        for color in COLORS:\n            df_pie = df.pivot_table(index=col, values='index').count()\n", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "('", "Invalid", " Data", "Frame", " input", ".", " Please", " provide", " valid", " data", ".", "')", "\n", "    ", "if", " col", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "'{", "col", "}", " is", " not", " a", " valid", " column", " name", ".", " Please", " provide", " a", " valid", " column", " name", ".", "')", "\n", "\n", "    ", "n", "_", "values", " =", " len", "(", "df", "[", "col", "]", ".", "unique", "())", "\n", "    ", "if", " n", "_", "values", " <", " len", "(", "COL", "ORS", "):", "\n", "        ", "df", "_", "pie", " =", " df", ".", "p", "iv", "ot", "_", "table", "(", "index", "=", "col", ",", " values", "='", "index", "')", ".", "count", "()", "\n", "        ", "df", "_", "pie", " =", " df", "_", "pie", ".", "sort", "_", "values", "(", "asc", "ending", "=", "False", ")", "\n", "        ", "df", "_", "pie", " =", " df", "_", "pie", ".", "reset", "_", "index", "()", "\n", "        ", "ax", " =", " df", "_", "pie", ".", "plot", ".", "pie", "(", "col", "=", "col", ",", " fig", "size", "=(", "1", "0", ",", " ", "1", "0", ")", ",", " shadow", "=", "True", ",", " aut", "op", "ct", "='", "%", ".", "2", "f", "')", "\n", "        ", "ax", ".", "set", "_", "title", "(", "f", "'{", "title", "}'", " if", " title", " else", " None", ")", "\n", "        ", "return", " ax", "\n", "    ", "else", ":", "\n", "        ", "for", " color", " in", " COL", "ORS", ":", "\n", "            ", "df", "_", "pie", " =", " df", ".", "p", "iv", "ot", "_", "table", "(", "index", "=", "col", ",", " values", "='", "index", "')", ".", "count", "()", "\n"], "logprobs": [-0.7615711092948914, -0.44754669070243835, -0.06285339593887329, -0.0002759314374998212, -0.03629014268517494, -0.0015198357868939638, -0.041521746665239334, -2.455681169521995e-05, -0.1216922327876091, -0.7996376752853394, -0.025256842374801636, -1.3688298463821411, -0.00018451895448379219, -0.0027929842472076416, -0.07892709225416183, -0.14999116957187653, -0.0006865289760753512, -4.029192859889008e-05, -1.0822136402130127, -0.028703805059194565, -0.0035015956964343786, -0.044779036194086075, -0.015610757283866405, -7.426462980220094e-05, -1.6099164485931396, -2.013094902038574, -1.71522855758667, -0.04637270048260689, -1.4848294258117676, -1.262947678565979, -2.5357983112335205, -0.6167846322059631, -2.9712889194488525, -0.6104432940483093, -0.16846269369125366, -0.010954833589494228, -0.0021391860209405422, -0.9198312163352966, -0.16638746857643127, -0.1614682525396347, -0.004321522079408169, -2.52720492426306e-05, -0.015223737806081772, -0.2513256371021271, -0.01392318308353424, -0.004077573772519827, -0.001148994080722332, -0.0006760457181371748, -0.005529466085135937, -0.02870843932032585, -0.00010609064338495955, -0.6303779482841492, -0.19663700461387634, -2.744861602783203, -0.007046017330139875, -0.018989084288477898, -0.5577341914176941, -0.022368157282471657, -0.6205897331237793, -0.8723536729812622, -0.036087099462747574, -1.0926563739776611, -0.23104813694953918, -1.0633361339569092, -1.2548810243606567, -0.2901194095611572, -0.06895656883716583, -0.05409310758113861, -0.2986699044704437, -0.18494027853012085, -0.007822001352906227, -0.0005530973430722952, -0.5199992060661316, -0.0004881620698142797, -4.420446395874023, -0.10784634947776794, -1.7562413215637207, -0.01714480295777321, -0.6097581386566162, -0.000867467257194221, -0.2557969391345978, -0.025007251650094986, -0.00040070133400149643, -0.009458019398152828, -9.65590606938349e-06, -0.15260152518749237, -0.0013437775196507573, -0.0525105819106102, -0.3698081076145172, -1.0334852933883667, -0.15330086648464203, -8.368142152903602e-05, -1.5020257706055418e-05, -2.3609564304351807, -1.3866841793060303, -0.00019262365822214633, -0.0038556535728275776, -7.390948667307384e-06, -0.015410516411066055, -0.032110415399074554, -0.0038215715903788805, -3.507211685180664, -1.822143316268921, -2.3557519912719727, -0.22986775636672974, -0.53216153383255, -0.4461013972759247, -2.4345169067382812, -0.0022521864157170057, -3.373566141817719e-05, -0.03683456405997276, -0.001492696930654347, -0.0686577707529068, -0.21305367350578308, -0.09281833469867706, -0.012956246733665466, -0.1022718995809555, -1.7520639896392822, -0.7696638107299805, -3.9928507804870605, -2.422680139541626, -1.1031652688980103, -2.2789015769958496, -0.2746869623661041, -0.47040775418281555, -0.32878533005714417, -1.0029597282409668, -0.014925476163625717, -0.06794007867574692, -1.0169543027877808, -0.06353648751974106, -0.005728257820010185, -1.4305012882687151e-05, -0.15752504765987396, -1.082501769065857, -0.0064308843575417995, -0.5293188095092773, -0.21088747680187225, -1.9130703210830688, -7.986990567587782e-06, -0.005367392208427191, -0.057498082518577576, -0.07966336607933044, -0.03361361101269722, -0.2126440852880478, -0.8828698396682739, -0.007222258020192385, -0.025389691814780235, -0.5410246253013611, -0.02217404544353485, -0.003158820327371359, -6.031808152329177e-05, -0.07756499946117401, -0.6165526509284973, -0.00029118589009158313, -0.000615407363511622, -0.21073000133037567, -0.09468307346105576, -0.33342766761779785, -1.7215334177017212, -0.040055595338344574, -0.06824754923582077, -0.008726556785404682, -1.0967194612021558e-05, -0.04964805766940117, -0.13496777415275574, -0.2931019067764282, -0.48491621017456055, -0.012323779985308647, -3.5463826656341553, -1.5303611755371094, -0.0901692733168602, -0.007330899126827717, -1.3596307039260864, -0.0001954841281985864, -0.039472587406635284, -1.5925437211990356, -0.34624385833740234, -0.009231384843587875, -0.04441021382808685, -0.19276081025600433, -0.009565472602844238, -0.04259616136550903, -0.0003383779258001596, -3.0255017280578613, -0.006647496949881315, -0.178805410861969, -0.08799974620342255, -1.67912757396698, -0.00898154266178608, -0.006962798070162535, -0.10440856963396072, -0.0038322594482451677, -1.619137167930603, -0.3220791816711426, -0.0018308082362636924, -2.7312564849853516, -0.01936272345483303, -0.7811431288719177, -0.6894263029098511, -0.02015993930399418, -0.30399033427238464, -0.03635026514530182, -0.020855654031038284, -0.02452533319592476, -1.5790576934814453, -0.9444628357887268, -0.7716808319091797, -2.8203420639038086, -0.220229834318161, -0.013461649417877197, -0.3534807860851288, -0.38263359665870667, -0.09214647859334946, -0.01585988700389862, -0.41459307074546814, -0.4090552031993866, -0.017288342118263245, -0.05368940532207489, -0.6930825710296631, -0.2470232993364334, -0.00021181246847845614, -0.015951287001371384, -0.005928313825279474, -3.4200220108032227, -2.1431972980499268, -0.5890836715698242, -0.10271390527486801, -5.94836674281396e-05, -0.01519473735243082, -0.0063962978310883045, -0.00406344560906291, -0.5871095657348633, -0.6346988081932068, -0.1865033507347107, -0.07312778383493423, -0.034595221281051636, -0.22702261805534363, -0.22611573338508606, -0.002410603454336524, -0.0004885195521637797, -0.0010527789127081633, -1.1086402082582936e-05, -0.0003935516288038343, -0.004652745556086302, -0.00731302984058857, -0.004227036144584417, -0.004027945920825005, -0.010051230899989605, -0.48616182804107666, -0.003791644936427474, -0.49773645401000977, -0.14133042097091675, -0.31613248586654663, -0.009023481979966164, -0.05836005508899689], "finish_reason": "length"}], "metrics": {"energy": 288.7530896148679, "energy_per_token": 1.1279417563080778, "time": 11.15011, "time_per_token": 0.0435551171875}}
{"outputs": [{"text": "# Check if the input df is DataFrame, not empty, and must contain the specified column. If it is not, the function will raise ValueError.\n    if not isinstance(df, pd.DataFrame) or len(df) == 0 or not col in df.columns:\n        raise ValueError(\n            f\"df must be DataFrame, not empty, and must contain the specified column: {col}.\")\n\n    # Generate unique colors for the pie slices\n    colors = [COLORS[i % len(COLORS)] for i in range(len(df[col].unique()))]\n\n    # Create a pie chart and set title, labels, and colors\n    ax = df[col].value_counts().plot.pie(\n        labels=df[col].unique(), figsize=(5, 5), colors=colors, autopct='%1.2f%%')\n\n    if title is not None:\n        ax.set_title(title)\n\n    return ax", "tokens": ["#", " Check", " if", " the", " input", " df", " is", " Data", "Frame", ",", " not", " empty", ",", " and", " must", " contain", " the", " specified", " column", ".", " If", " it", " is", " not", ",", " the", " function", " will", " raise", " Value", "Error", ".", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " len", "(", "df", ")", " ==", " ", "0", " or", " not", " col", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\n", "            ", "f", "\"", "df", " must", " be", " Data", "Frame", ",", " not", " empty", ",", " and", " must", " contain", " the", " specified", " column", ":", " {", "col", "}", ".", "\"", ")", "\n", "\n", "    ", "#", " Generate", " unique", " colors", " for", " the", " pie", " slices", "\n", "    ", "colors", " =", " [", "COL", "ORS", "[", "i", " %", " len", "(", "COL", "ORS", ")]", " for", " i", " in", " range", "(", "len", "(", "df", "[", "col", "]", ".", "unique", "()))", "]", "\n", "\n", "    ", "#", " Create", " a", " pie", " chart", " and", " set", " title", ",", " labels", ",", " and", " colors", "\n", "    ", "ax", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", ".", "plot", ".", "pie", "(", "\n", "        ", "labels", "=", "df", "[", "col", "]", ".", "unique", "()", ",", " fig", "size", "=(", "5", ",", " ", "5", ")", ",", " colors", "=", "colors", ",", " aut", "op", "ct", "='", "%", "1", ".", "2", "f", "%%", "')", "\n", "\n", "    ", "if", " title", " is", " not", " None", ":", "\n", "        ", "ax", ".", "set", "_", "title", "(", "title", ")", "\n", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-1.3294174671173096, -0.7342183589935303, -0.8138589859008789, -0.7157440185546875, -0.3336832523345947, -0.5070144534111023, -0.029022304341197014, -0.5820247530937195, -0.009041321463882923, -0.5747545957565308, -0.48640453815460205, -0.2188085913658142, -0.06956055760383606, -0.0221866387873888, -1.6590602397918701, -0.023595960810780525, -0.011254517361521721, -0.013265800662338734, -0.006103329826146364, -2.3676724433898926, -2.446816921234131, -0.6587876677513123, -0.12168969959020615, -0.039819639176130295, -0.008833497762680054, -0.3654938042163849, -0.009420584887266159, -0.02475527487695217, -0.004583329893648624, -0.027275916188955307, -8.976056415122002e-05, -0.10392788052558899, -0.003930226434022188, -0.015252619981765747, -0.07340298593044281, -0.20624813437461853, -0.03733309730887413, -0.0002574589161667973, -0.004487207159399986, -0.0015686361584812403, -0.04622269049286842, -1.9192511899746023e-05, -0.07448464632034302, -0.48459818959236145, -0.01030753180384636, -1.0989834070205688, -9.238292841473594e-05, -0.0019054129952564836, -0.07745159417390823, -0.0824536606669426, -0.00046302087139338255, -2.992108420585282e-05, -0.11772199720144272, -2.949653148651123, -0.2759842574596405, -0.001615410903468728, -0.0954342782497406, -0.46634969115257263, -0.021564185619354248, -0.009093654341995716, -0.004698308650404215, -0.009552248753607273, -0.028235021978616714, -0.009295045398175716, -6.925819616299123e-05, -0.3210713565349579, -3.01397705078125, -0.00605735694989562, -0.7208133935928345, -0.30262893438339233, -2.69816255569458, -0.21667613089084625, -0.006501238327473402, -0.4274176359176636, -0.00985034555196762, -0.16440431773662567, -0.11838652938604355, -0.6447072625160217, -0.041912440210580826, -0.01260421983897686, -0.08597734570503235, -0.0066522336564958096, -0.0788651779294014, -0.07835893332958221, -0.007927029393613338, -1.4242486953735352, -0.25847697257995605, -0.008036303333938122, -1.3149884939193726, -0.1957162469625473, -0.039644695818424225, -0.019542183727025986, -0.0014552014181390405, -0.20918656885623932, -0.0008644896443001926, -0.3300510346889496, -3.7188000679016113, -2.8837759494781494, -2.0995395183563232, -0.3197835683822632, -1.1906871795654297, -1.1126024723052979, -0.8204560279846191, -0.6579324007034302, -0.002529756398871541, -0.8546287417411804, -0.023274097591638565, -0.31254512071609497, -0.23374268412590027, -0.0001802282058633864, -0.03855804353952408, -0.14848707616329193, -0.1108848974108696, -0.01407517772167921, -8.451581379631534e-05, -0.0014879356604069471, -1.5497195136049413e-06, -0.0019776327535510063, -0.028108926489949226, -0.002147155813872814, -0.0034187936689704657, -0.0029452538583427668, -0.00031931069679558277, -0.31740301847457886, -9.893881360767409e-05, -0.1576024293899536, -0.1719738245010376, -0.00036352223833091557, -0.3191467225551605, -6.913899414939806e-05, -0.06141260638833046, -0.026259224861860275, -0.0008025524439290166, -0.0018260485958307981, -0.06257819384336472, -0.00029118589009158313, -0.17099247872829437, -1.1427292823791504, -0.5869563221931458, -0.3831976354122162, -0.16344620287418365, -2.2550063133239746, -0.5784333348274231, -2.31392765045166, -3.368906021118164, -2.37088942527771, -0.3379534184932709, -0.2037070095539093, -0.23158219456672668, -0.28637421131134033, -0.0012973472476005554, -0.5229638814926147, -0.04550670459866524, -0.2862544059753418, -0.05779268965125084, -0.00026723151677288115, -0.0002562671434134245, -0.00015746307326480746, -0.06769657880067825, -9.035655966727063e-05, -0.0025909922551363707, -0.14796780049800873, -0.003769793314859271, -0.02552124485373497, -0.12797024846076965, -0.0003971264814026654, -0.010226943530142307, -0.7694789171218872, -0.010979830287396908, -1.4168318510055542, -0.10542171448469162, -0.17049884796142578, -0.006045744754374027, -0.00014232576359063387, -0.0006155265145935118, -0.00013171759201213717, -0.1997707188129425, -0.003125665243715048, -0.13617320358753204, -1.9571411609649658, -0.00031609306461177766, -0.02605285868048668, -1.5956463813781738, -0.00614693108946085, -0.02687818370759487, -0.038068726658821106, -0.009443140588700771, -0.001039322349242866, -1.1559773683547974, -0.00215429300442338, -0.003202668856829405, -0.17807410657405853, -0.8382858037948608, -0.009236463345587254, -0.0045359814539551735, -0.057697273790836334, -0.0007277462864294648, -0.155690535902977, -3.1470757676288486e-05, -1.7771363258361816, -0.004041718319058418, -0.08016752451658249, -0.9568853378295898, -0.00834301020950079, -0.4542589485645294, -0.0004945961991325021, -1.4932302236557007, -0.00943640898913145, -1.0664324760437012, -0.008991466835141182, -5.4596363042946905e-05, -0.0009112972766160965, -0.00883952435106039, -0.0009507188224233687, -0.11019154638051987, -0.000739539333153516, -0.004284251015633345, -0.004421102814376354, -0.0003232433518860489, -0.0005589353386312723, -0.05588565394282341, -0.07186316698789597, -0.025000624358654022, -0.16731727123260498, -0.003999568987637758, -0.1562844216823578, -0.006111386697739363, -0.5108232498168945, -0.013482232578098774, -1.371008038520813], "finish_reason": "stop"}], "metrics": {"energy": 223.71510913181308, "energy_per_token": 0.9726743875296221, "time": 9.876969, "time_per_token": 0.04294334347826087}}
{"outputs": [{"text": "# check whether the input df is DataFrame, if not, raise ValueError.\n    if not isinstance(df, pd.DataFrame):\n        raise ValueError(f\"Input df must be DataFrame, not {type(df)}.\")\n    # check whether the input df is empty.\n    if df.empty:\n        raise ValueError(f\"The input df is empty.\")\n    # check whether the input df contains the specified column, if not, raise ValueError.\n    if col not in df:\n        raise ValueError(f\"The input df doesn't contain the specified column: {col}.\")\n\n    # generate the color list if the user input none.\n    color_list = COLORS[:len(pd.unique(df[col]))]\n\n    return df[col].value_counts(sort=False).plot.pie(figsize=(4, 4), colors=color_list, title=title)", "tokens": ["#", " check", " whether", " the", " input", " df", " is", " Data", "Frame", ",", " if", " not", ",", " raise", " Value", "Error", ".", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Input", " df", " must", " be", " Data", "Frame", ",", " not", " {", "type", "(", "df", ")}", ".", "\"", ")", "\n", "    ", "#", " check", " whether", " the", " input", " df", " is", " empty", ".", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " input", " df", " is", " empty", ".", "\"", ")", "\n", "    ", "#", " check", " whether", " the", " input", " df", " contains", " the", " specified", " column", ",", " if", " not", ",", " raise", " Value", "Error", ".", "\n", "    ", "if", " col", " not", " in", " df", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " input", " df", " doesn", "'", "t", " contain", " the", " specified", " column", ":", " {", "col", "}", ".", "\"", ")", "\n", "\n", "    ", "#", " generate", " the", " color", " list", " if", " the", " user", " input", " none", ".", "\n", "    ", "color", "_", "list", " =", " COL", "ORS", "[:", "len", "(", "pd", ".", "unique", "(", "df", "[", "col", "]))", "]", "\n", "\n", "    ", "return", " df", "[", "col", "]", ".", "value", "_", "counts", "(", "sort", "=", "False", ")", ".", "plot", ".", "pie", "(", "fig", "size", "=(", "4", ",", " ", "4", ")", ",", " colors", "=", "color", "_", "list", ",", " title", "=", "title", ")", "\n", "\n", "def"], "logprobs": [-1.3294174671173096, -2.8656718730926514, -3.0848388671875, -0.5661259293556213, -0.48223671317100525, -0.8951770663261414, -0.10011976212263107, -0.4784056544303894, -0.01979103870689869, -0.8138828873634338, -2.4101545810699463, -0.4894953966140747, -0.24410532414913177, -0.36478495597839355, -0.1743876188993454, -0.011185086332261562, -2.3817713260650635, -0.03092261590063572, -0.008898838423192501, -0.07609467208385468, -0.15078194439411163, -0.02583436854183674, -0.0004297763225622475, -0.0031688022427260876, -0.0010253892978653312, -0.05329187214374542, -1.811964830267243e-05, -0.10054375231266022, -0.3603903651237488, -0.0025788643397390842, -0.0032185916788876057, -0.02648180164396763, -0.09719907492399216, -4.124556289752945e-05, -0.29601994156837463, -1.4524686336517334, -0.23644542694091797, -1.104547381401062, -1.1651418209075928, -0.24929825961589813, -0.0023212889209389687, -0.5770373344421387, -0.012041849084198475, -0.12758637964725494, -0.2797112464904785, -0.09828686714172363, -0.02716130018234253, -0.0002224197960458696, -0.0017099058022722602, -0.14211370050907135, -0.964555561542511, -0.026819229125976562, -0.0005527398898266256, -0.0013936578761786222, -0.6234143972396851, -1.4586831331253052, -0.35252517461776733, -0.12912610173225403, -0.10124295204877853, -0.5492594838142395, -0.18071754276752472, -0.024844467639923096, -0.14121252298355103, -1.507817268371582, -0.08826728165149689, -0.0006741396500729024, -0.029407262802124023, -0.8007618188858032, -0.003823234234005213, -0.022578315809369087, -0.0077409762889146805, -0.0036446116864681244, -0.0006357794045470655, -0.011096552014350891, -0.0031203175894916058, -7.724463648628443e-05, -0.01460198499262333, -1.0801078081130981, -0.017318101599812508, -2.7579994201660156, -0.14387147128582, -0.27386924624443054, -0.34942319989204407, -0.005713560152798891, -0.13764376938343048, -0.010512571781873703, -0.0001538873475510627, -0.0009261847590096295, -0.07959412038326263, -0.015475429594516754, -0.05921926349401474, -0.024214359000325203, -0.05802275612950325, -0.4084634780883789, -0.6575239300727844, -0.2619163691997528, -0.05290752276778221, -0.0657510906457901, -0.028851602226495743, -1.1817227602005005, -0.0633450597524643, -0.18875731527805328, -0.010603752918541431, -0.012446703389286995, -0.025707969442009926, -0.0008039817912504077, -0.034315697848796844, -0.002190216211602092, -0.0007905219099484384, -0.04517757520079613, -0.12819479405879974, -0.0016124354442581534, -3.8980677345534787e-05, -0.015822339802980423, -1.7185521125793457, -0.0010259846458211541, -0.0005558376433327794, -0.003469521179795265, -0.006990617606788874, -5.018585216021165e-05, -0.0007091629668138921, -0.027877436950802803, -0.00975201278924942, -0.16914670169353485, -0.3559240698814392, -0.09628421068191528, -1.6933611631393433, -0.005988512188196182, -3.3378546504536644e-06, -0.09681727737188339, -0.14971214532852173, -0.0881061851978302, -0.024726897478103638, -0.9899740219116211, -0.07349348068237305, -0.004570395220071077, -0.12259765714406967, -0.009386928752064705, -0.0057294429279863834, -0.0006289887824095786, -0.0017666699131950736, -0.6469857096672058, -0.0010318199638277292, -0.34813717007637024, -4.233858108520508, -1.627022624015808, -3.346312999725342, -1.2762190103530884, -3.4178051948547363, -1.3530142307281494, -3.6943507194519043, -3.789640426635742, -3.3865418434143066, -0.7603033185005188, -0.018941476941108704, -0.0023960948456078768, -2.640876293182373, -0.06984652578830719, -0.13726100325584412, -0.018871290609240532, -0.568858802318573, -0.00020704510097857565, -1.5505051612854004, -0.6050560474395752, -0.0008203001925721765, -1.6524114608764648, -5.23315102327615e-05, -0.009177050553262234, -0.00022396916756406426, -0.001967043848708272, -0.004052403848618269, -0.00047874910524114966, -0.004043855704367161, -0.011814738623797894, -0.0387929230928421, -0.26699304580688477, -0.0003667397249955684, -3.336174964904785, -0.2993443012237549, -0.32189005613327026, -0.0012712739408016205, -0.0006512666586786509, -0.0018406844465062022, -0.019107213243842125, -7.343022298300639e-05, -0.0010476582683622837, -1.085838794708252, -2.0195116996765137, -0.013631707057356834, -0.46663418412208557, -0.2667934000492096, -0.006476484704762697, -0.10368965566158295, -0.08170998841524124, -0.00023362292267847806, -0.005093337036669254, -3.5685834884643555, -0.00011014331539627165, -0.08666374534368515, -2.6612014770507812, -0.03260069340467453, -0.23524558544158936, -0.06665237993001938, -0.009850582107901573, -0.0010000233305618167, -1.3501591682434082, -0.008544670417904854, -0.002714879112318158, -0.00031001531169749796, -2.1457441107486375e-05, -0.038862984627485275, -0.4700887203216553, -0.07563255727291107, -0.014993473887443542, -0.7232173681259155, -0.24479831755161285, -0.022133469581604004, -1.2269370555877686], "finish_reason": "stop"}], "metrics": {"energy": 216.27680926513676, "energy_per_token": 0.992095455344664, "time": 9.459898, "time_per_token": 0.04339402752293579}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input df must be pandas DataFrame.\")\n    if not isinstance(col, str):\n        raise ValueError(\"Input col must be str.\")\n    if not isinstance(title, (str, type(None))):\n        raise ValueError(\"Input title must be str or None.\")\n    if not len(df):\n        raise ValueError(\"Input df is empty.\")\n    if not col in df.columns:\n        raise ValueError(\"Column {0} does not exist.\".format(col))\n\n    unique_values = df[col].value_counts()\n\n    plt.pie(unique_values, colors=COLORS, labels=list(unique_values.index))\n    if title:\n        plt.title(title)\n\n    return plt.gca()", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " must", " be", " pandas", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " not", " isinstance", "(", "col", ",", " str", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " col", " must", " be", " str", ".", "\"", ")", "\n", "    ", "if", " not", " isinstance", "(", "title", ",", " (", "str", ",", " type", "(", "None", "))", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " title", " must", " be", " str", " or", " None", ".", "\"", ")", "\n", "    ", "if", " not", " len", "(", "df", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " is", " empty", ".", "\"", ")", "\n", "    ", "if", " not", " col", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Column", " {", "0", "}", " does", " not", " exist", ".", "\"", ".", "format", "(", "col", "))", "\n", "\n", "    ", "unique", "_", "values", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", "\n", "\n", "    ", "plt", ".", "pie", "(", "unique", "_", "values", ",", " colors", "=", "COL", "ORS", ",", " labels", "=", "list", "(", "unique", "_", "values", ".", "index", "))", "\n", "    ", "if", " title", ":", "\n", "        ", "plt", ".", "title", "(", "title", ")", "\n", "\n", "    ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "def"], "logprobs": [-0.7615711092948914, -0.44754669070243835, -0.06285339593887329, -0.0002759314374998212, -0.03629014268517494, -0.0015198357868939638, -0.041521746665239334, -2.455681169521995e-05, -0.1216922327876091, -0.5978573560714722, -0.013428599573671818, -0.003953499253839254, -0.04353909566998482, -0.2376762479543686, -0.0003477922291494906, -0.3104816675186157, -0.35746848583221436, -1.3255537748336792, -1.3838887214660645, -0.104754738509655, -0.0017702399054542184, -2.683565378189087, -0.4188321828842163, -0.012721340171992779, -1.7433723211288452, -0.04081646353006363, -0.0004619484825525433, -0.003432812402024865, -0.2968674898147583, -0.20474644005298615, -1.0283904075622559, -2.4104714393615723, -0.00018082413589581847, -0.30272573232650757, -0.000325388420606032, -0.004581193905323744, -0.13080549240112305, -0.0029069806914776564, -0.000942858459893614, -0.007620904594659805, -0.03818531334400177, -0.00013517419574782252, -0.007447692099958658, -0.11333496868610382, -0.4295942187309265, -0.10309700667858124, -0.016141565516591072, -0.0019502682844176888, -1.7413034439086914, -0.11677014827728271, -0.005419917870312929, -0.0002640137099660933, -0.0007653883076272905, -0.07854519784450531, -0.044558100402355194, -0.9567309021949768, -1.6289782524108887, -0.00028546550311148167, -0.06388334184885025, -0.00015054999676067382, -1.7750492095947266, -0.5718620419502258, -0.005474337842315435, -0.02119346708059311, -0.0001225396408699453, -0.00022349244682118297, -0.002609778428450227, -0.00023862851958256215, -0.006484183017164469, -0.0008705640211701393, -0.006300704553723335, -0.0030944105237722397, -3.58813522325363e-05, -0.003790338756516576, -0.007229832466691732, -0.15697212517261505, -0.006835410837084055, -0.010783377103507519, -0.012460477650165558, -0.12386231124401093, -0.07824793457984924, -0.00998667348176241, -0.05853445455431938, -0.001178999780677259, -0.00013767725613433868, -0.000578474544454366, -0.45978957414627075, -0.18132302165031433, -1.0336717367172241, -1.5852570533752441, -0.0005546461907215416, -0.007258591242134571, -0.6051908135414124, -0.03632543608546257, -0.0008543655276298523, -0.008448810316622257, -0.005438295193016529, -8.606540359323844e-05, -0.009696172550320625, -0.024975627660751343, -0.21549047529697418, -0.19990083575248718, -1.5352704524993896, -0.026343639940023422, -0.09390492737293243, -0.007027314510196447, -6.329813186312094e-05, -0.000596107158344239, -0.0550914965569973, -0.04780212417244911, -0.6927958130836487, -0.3012233078479767, -0.0030939350835978985, -0.036567043513059616, -0.43840718269348145, -0.02775001898407936, -0.004611333832144737, -0.0009214208112098277, -0.0006373281357809901, -0.0027901313733309507, -0.006600719876587391, -4.3987260141875595e-05, -0.012426217086613178, -0.682016909122467, -1.911186933517456, -3.5135738849639893, -0.6124562621116638, -0.02858240157365799, -1.9828276634216309, -0.0016286217141896486, -0.014093044213950634, -1.9113638401031494, -0.023906663060188293, -0.010079318657517433, -0.0010546842822805047, -0.000288087350782007, -0.01843942143023014, -0.0023900296073406935, -0.0005930095794610679, -0.47181999683380127, -0.0009576263837516308, -2.538424015045166, -0.12051676213741302, -0.2969176173210144, -0.0709652379155159, -0.42140841484069824, -0.06177084147930145, -0.00039057256071828306, -0.00017069313616957515, -0.00023183519078884274, -1.5381832122802734, -4.291525328881107e-06, -0.0006071869283914566, -0.07181768119335175, -0.3026060163974762, -1.3887410163879395, -0.00018737945356406271, -2.8881664276123047, -0.0027050115168094635, -0.19816255569458008, -0.004676120821386576, -0.31299981474876404, -0.0003121604095213115, -1.3112935448589269e-05, -0.2732846438884735, -1.4184945821762085, -0.10624347627162933, -0.01406953576952219, -7.390948667307384e-06, -0.5795469284057617, -1.1254171133041382, -0.01896183006465435, -1.9988230466842651, -0.0003592322755139321, -0.010123454965651035, -0.0001429217227268964, -1.0251946150674485e-05, -0.03195778653025627, -0.05397068336606026, -1.19293212890625, -0.008332251571118832, -0.3648516535758972, -0.35856932401657104, -0.032178983092308044, -0.31959784030914307, -0.012463891878724098, -0.002268243348225951, -0.027146218344569206, -0.00018106251081917435, -0.007330307271331549, -0.0007061848300509155, -0.014525501988828182, -0.017249910160899162, -0.004390244372189045, -0.8472940921783447, -0.012679319828748703, -0.20182006061077118, -0.008525758981704712, -0.009642218239605427, -0.046153370290994644, -0.0439649373292923, -0.000912369170691818, -0.7882631421089172, -0.020207371562719345, -1.1067183017730713], "finish_reason": "stop"}], "metrics": {"energy": 211.0399399604795, "energy_per_token": 1.0294631217584367, "time": 8.838058, "time_per_token": 0.04311247804878049}}
{"outputs": [{"text": "# Check input types\n    if not isinstance(df, pd.DataFrame):\n        raise TypeError('The input df must be pandas.DataFrame, not ' + str(type(df)))\n    if len(df) == 0:\n        raise ValueError('The input df must be non-empty')\n    if not col in df.columns:\n        raise ValueError(\"The column name '{}' is not in the DataFrame\".format(col))\n\n    # Get the unique values, colors and labels\n    unique_values = df[col].unique()\n    unique_values_count = df[col].value_counts()\n    unique_colors = [COLORS[i % len(COLORS)] for i in range(len(unique_values))]\n    unique_labels = ['{} ({})'.format(v, c) for v, c in zip(unique_values, unique_values_count)]\n\n    # Plot the pie chart\n    ax = df[col].value_counts().plot.pie(labels=unique_labels, colors=unique_colors, title=title, figsize=(10, ", "tokens": ["#", " Check", " input", " types", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Type", "Error", "('", "The", " input", " df", " must", " be", " pandas", ".", "DataFrame", ",", " not", " '", " +", " str", "(", "type", "(", "df", ")))", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "('", "The", " input", " df", " must", " be", " non", "-", "empty", "')", "\n", "    ", "if", " not", " col", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " column", " name", " '", "{}", "'", " is", " not", " in", " the", " Data", "Frame", "\"", ".", "format", "(", "col", "))", "\n", "\n", "    ", "#", " Get", " the", " unique", " values", ",", " colors", " and", " labels", "\n", "    ", "unique", "_", "values", " =", " df", "[", "col", "]", ".", "unique", "()", "\n", "    ", "unique", "_", "values", "_", "count", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", "\n", "    ", "unique", "_", "colors", " =", " [", "COL", "ORS", "[", "i", " %", " len", "(", "COL", "ORS", ")]", " for", " i", " in", " range", "(", "len", "(", "unique", "_", "values", "))", "]", "\n", "    ", "unique", "_", "labels", " =", " ['", "{}", " ({", "})", "'", ".", "format", "(", "v", ",", " c", ")", " for", " v", ",", " c", " in", " zip", "(", "unique", "_", "values", ",", " unique", "_", "values", "_", "count", ")]", "\n", "\n", "    ", "#", " Plot", " the", " pie", " chart", "\n", "    ", "ax", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", ".", "plot", ".", "pie", "(", "labels", "=", "unique", "_", "labels", ",", " colors", "=", "unique", "_", "colors", ",", " title", "=", "title", ",", " fig", "size", "=(", "1", "0", ",", " "], "logprobs": [-1.3294174671173096, -0.7342183589935303, -2.39837646484375, -2.1797971725463867, -0.4897003173828125, -0.007661127485334873, -0.09625086188316345, -0.12382777035236359, -0.02358653023838997, -0.0003277718205936253, -0.047644827514886856, -0.0005709686665795743, -0.030209237709641457, -1.2755313036905136e-05, -0.15573011338710785, -0.37586861848831177, -0.0051236990839242935, -0.0017921352991834283, -0.04094131290912628, -0.5818853974342346, -2.109982233378105e-05, -1.388812780380249, -1.4230282306671143, -0.1183856800198555, -0.30546557903289795, -0.04555124044418335, -0.001176618505269289, -2.1996231079101562, -0.6404030323028564, -0.006285659968852997, -0.518222451210022, -0.03799436241388321, -1.8031318187713623, -0.14132224023342133, -0.23790405690670013, -0.0006429274217225611, -0.004293391015380621, -0.0005789510905742645, -0.002758747199550271, -0.20150797069072723, -0.0029645089525729418, -0.11955054104328156, -0.17713528871536255, -1.5899819135665894, -0.00015901254664640874, -0.0019946456886827946, -0.08538144081830978, -0.1274985522031784, -0.0003588747640606016, -4.994744449504651e-05, -0.04379243031144142, -0.02609769068658352, -0.0006257721688598394, -0.006994405761361122, -0.026004426181316376, -4.6967357775429264e-05, -0.13560782372951508, -0.12307746708393097, -0.07627218961715698, -0.14931601285934448, -0.33841922879219055, -1.5146781206130981, -0.23120631277561188, -0.09743409603834152, -0.0023186723701655865, -0.7060743570327759, -0.0009221353684552014, -0.04509542137384415, -0.034937866032123566, -1.1821808815002441, -0.47073569893836975, -0.001081715920008719, -0.05547669902443886, -0.3606652617454529, -0.030921922996640205, -0.002342934487387538, -0.0018954183906316757, -0.0007348936051130295, -0.006242064759135246, -0.061495341360569, -8.856858039507642e-05, -1.3342361450195312, -0.9075770378112793, -0.27996060252189636, -1.280862808227539, -2.413696765899658, -1.707063913345337, -1.4796900749206543, -0.00199773907661438, -0.9701860547065735, -0.08471081405878067, -0.34176895022392273, -0.22745837271213531, -0.9222710728645325, -0.012060930021107197, -1.2699155807495117, -0.005937320180237293, -0.0026139398105442524, -0.00043883229955099523, -0.013104388490319252, -0.005985312629491091, -0.0012561534531414509, -0.16780532896518707, -0.0009128456003963947, -0.39101338386535645, -1.8672388792037964, -1.2469291687011719, -0.9506197571754456, -0.044043537229299545, -4.1674885749816895, -2.29819393157959, -1.1219286918640137, -2.2424349784851074, -0.4427531063556671, -0.001019911258481443, -0.8212230801582336, -0.07207638025283813, -0.20753982663154602, -0.04317723587155342, -0.3357561230659485, -0.036068473011255264, -0.0002445875434204936, -0.0001486429391661659, -0.00013445904187392443, -0.4816657304763794, -0.0006594866863451898, -0.06936372071504593, -0.008874026127159595, -2.260679006576538, -0.0012003129813820124, -1.4178190231323242, -0.2508244514465332, -1.042089581489563, -0.0032520999666303396, -0.5910391211509705, -0.015595617704093456, -0.00015889335190877318, -0.00015770144818816334, -6.675497570540756e-05, -0.4238690435886383, -2.1457441107486375e-05, -0.0013604442356154323, -0.042875319719314575, -0.10629546642303467, -0.13546469807624817, -1.3362340927124023, -0.0008092227508313954, -1.1271363496780396, -0.013525747694075108, -0.987976610660553, -0.07356436550617218, -0.00013159839727450162, -0.04029802232980728, -0.2438327819108963, -0.20590142905712128, -0.021924268454313278, -8.034383063204587e-05, -0.05073678493499756, -1.7881377516459906e-06, -0.007342851255089045, -0.013222744688391685, -0.002253732644021511, -0.015343251638114452, -0.021669412031769753, -0.00025733973598107696, -0.049563657492399216, -2.5033637939486653e-05, -0.020634857937693596, -2.074220174108632e-05, -0.0006866481271572411, -0.12507803738117218, -0.0008122005965560675, -0.006976648699492216, -0.10786047577857971, -0.13129089772701263, -0.00010024998482549563, -0.02951016277074814, -0.0018391376361250877, -2.21480393409729, -0.7813332676887512, -0.7031062245368958, -0.06583736836910248, -0.001743940869346261, -0.0006411403883248568, -0.0003334919747430831, -0.007688217796385288, -1.8789201974868774, -0.009064593352377415, -1.036036729812622, -0.17278282344341278, -0.019432641565799713, -0.07285019010305405, -0.003700078232213855, -0.003931057173758745, -0.0023907432332634926, -0.07695887237787247, -0.0010110987350344658, -0.019231293350458145, -4.827859811484814e-05, -0.0007388246012851596, -0.01691591925919056, -0.024405864998698235, -7.891343557275832e-05, -0.017755022272467613, -7.581423415103927e-05, -9.536738616588991e-07, -0.012887051329016685, -0.0033655688166618347, -0.05132243409752846, -0.0005079409456811845, -0.10110440105199814, -1.9437005519866943, -0.15316125750541687, -0.05002924054861069, -0.020712625235319138, -0.11860889196395874, -0.000686767278239131, -0.5260029435157776, -0.014936985448002815, -0.2920224070549011, -0.03404577821493149, -0.0004323977918829769, -0.000559292733669281, -0.00010001159535022452, -0.5460324287414551, -0.00011526874004630372, -0.013024025596678257, -0.07034598290920258, -0.00045753977610729635, -0.011618920601904392, -0.18613862991333008, -0.0005117537220939994, -0.013204862363636494, -1.8588083982467651, -0.00729953870177269, -0.0004297763225622475, -6.317892984952778e-05, -0.0025289240293204784, -0.004284251015633345, -0.5315220952033997, -0.0017301365733146667, -0.0004326361231505871, -0.0001147919538198039, -9.190614218823612e-05, -0.07358219474554062, -2.1269030570983887, -0.046129919588565826, -0.004173854365944862, -0.3490055203437805, -1.3275625705718994, -0.0002356490003876388, -0.01673164777457714, -1.9132213592529297, -0.32529422640800476, -0.0012542485492303967, -0.028553670272231102], "finish_reason": "length"}], "metrics": {"energy": 253.83005177593233, "energy_per_token": 0.9915236397497357, "time": 11.1524315, "time_per_token": 0.043564185546875}}
{"outputs": [{"text": "# Check if input df is DataFrame, is empty or not, not contains column, if it is, raise ValueError.\n    if not isinstance(df, pd.DataFrame):\n        raise ValueError(f\"Input df must be DataFrame, not {type(df)}.\")\n    if not df.shape[0] > 0:\n        raise ValueError(\"Input df is empty.\")\n    if col not in df.columns:\n        raise ValueError(f\"Input df doesn't contain {col} column.\")\n\n    # Count the number of unique values in the column\n    unique_values = df[col].value_counts().head(5)\n\n    # Create a pie chart\n    ax = df[col].value_counts().head(5).plot.pie(y = \"count\", figsize=(7, 7), ax=None, autopct='%1.2f%%',\n                                                  shadow=False, startangle=90, labels = None,\n                                                  counterclock=False, pctdistance=1.1, labeldistance=", "tokens": ["#", " Check", " if", " input", " df", " is", " Data", "Frame", ",", " is", " empty", " or", " not", ",", " not", " contains", " column", ",", " if", " it", " is", ",", " raise", " Value", "Error", ".", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Input", " df", " must", " be", " Data", "Frame", ",", " not", " {", "type", "(", "df", ")}", ".", "\"", ")", "\n", "    ", "if", " not", " df", ".", "shape", "[", "0", "]", " >", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " is", " empty", ".", "\"", ")", "\n", "    ", "if", " col", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Input", " df", " doesn", "'", "t", " contain", " {", "col", "}", " column", ".", "\"", ")", "\n", "\n", "    ", "#", " Count", " the", " number", " of", " unique", " values", " in", " the", " column", "\n", "    ", "unique", "_", "values", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", ".", "head", "(", "5", ")", "\n", "\n", "    ", "#", " Create", " a", " pie", " chart", "\n", "    ", "ax", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", ".", "head", "(", "5", ")", ".", "plot", ".", "pie", "(", "y", " =", " \"", "count", "\"", ",", " fig", "size", "=(", "7", ",", " ", "7", ")", ",", " ax", "=", "None", ",", " aut", "op", "ct", "='", "%", "1", ".", "2", "f", "%%", "'", ",", "\n", "                ", "                ", "                ", "  ", "shadow", "=", "False", ",", " start", "angle", "=", "9", "0", ",", " labels", " =", " None", ",", "\n", "                ", "                ", "                ", "  ", "counter", "clock", "=", "False", ",", " p", "ct", "distance", "=", "1", ".", "1", ",", " label", "distance", "="], "logprobs": [-1.3294174671173096, -0.7342183589935303, -0.8138589859008789, -1.7369041442871094, -1.1434653997421265, -0.05428270250558853, -0.5245082974433899, -0.01460715476423502, -0.8178793787956238, -2.0859875679016113, -0.2729426622390747, -1.5172622203826904, -2.01320743560791, -1.080065131187439, -4.14355993270874, -1.4374959468841553, -3.4035892486572266, -1.414750337600708, -1.0297082662582397, -1.1262086629867554, -0.32219967246055603, -0.9285436272621155, -0.8313131332397461, -0.1596030741930008, -0.017066052183508873, -1.4043306112289429, -0.006625826004892588, -0.01833268254995346, -0.09466181695461273, -0.23765312135219574, -0.039384230971336365, -0.0004151197790633887, -0.005207664333283901, -0.0012849654303863645, -0.04365595802664757, -2.2053474822314456e-05, -0.13043317198753357, -0.7782161831855774, -0.005638409405946732, -0.0037252570036798716, -0.034552037715911865, -0.2639138400554657, -0.00022754464589525014, -0.31547459959983826, -1.303634762763977, -0.2981666922569275, -0.8561102747917175, -0.7961413860321045, -0.2590269446372986, -0.0034589481074362993, -0.4337616264820099, -0.013217803090810776, -0.12264668941497803, -0.18851754069328308, -0.19184857606887817, -0.03251161053776741, -0.00021598390594590455, -0.0018089136574417353, -0.20248523354530334, -1.0780293941497803, -0.020541315898299217, -0.00047362555051222444, -0.0014809127897024155, -0.11609689891338348, -0.23229241371154785, -0.9502996206283569, -0.4729706645011902, -0.042062871158123016, -2.8948404788970947, -0.023318471387028694, -0.009053017012774944, -1.3663709163665771, -0.39511001110076904, -0.002308325143530965, -0.01201605424284935, -0.0525842122733593, -0.019046278670430183, -0.0003746046277228743, -0.0046674590557813644, -0.002730215433984995, -7.60526381782256e-05, -0.01524898037314415, -0.5907012820243835, -0.2723076641559601, -0.2176097333431244, -1.0461323261260986, -0.01294118445366621, -0.08215360343456268, -0.011062716133892536, -6.687417771900073e-05, -0.0007378716254606843, -0.038904376327991486, -0.05046853795647621, -0.28973671793937683, -0.0013222293928265572, -3.397406908334233e-05, -0.018542053177952766, -0.2542201578617096, -0.00965803861618042, -0.003867766121402383, -0.0009658439084887505, -0.0003432638186495751, -0.00420424435287714, -0.010624158196151257, -5.7338023907504976e-05, -0.0011781663633883, -0.04674353078007698, -0.015912335366010666, -0.7242308855056763, -0.3208885192871094, -1.763917088508606, -0.006512134335935116, -3.3378546504536644e-06, -0.2736145853996277, -2.5857696533203125, -0.004781004507094622, -0.05333809554576874, -0.2860737144947052, -0.03494131937623024, -0.004427036736160517, -0.0002227773511549458, -0.0013446108205243945, -0.15712229907512665, -0.0009116546134464443, -0.2725171148777008, -2.890316963195801, -0.6611722707748413, -0.26319339871406555, -0.0009675112669356167, -0.06879733502864838, -0.014288730919361115, -0.21003250777721405, -0.09136385470628738, -0.24838793277740479, -0.68011474609375, -0.0005105622112751007, -1.477642297744751, -0.03626232221722603, -0.2759450674057007, -0.04147668555378914, -0.35849669575691223, -0.019720561802387238, -0.00013362467871047556, -6.97350042173639e-05, -4.470248313737102e-05, -2.8312811851501465, -1.0728830375228426e-06, -0.0009105826611630619, -0.045340389013290405, -2.0386312007904053, -0.9277963638305664, -0.4365260899066925, -1.0285720825195312, -0.06556901335716248, -0.13203078508377075, -0.19824741780757904, -0.000284154579276219, -0.07190655171871185, -1.0488961935043335, -0.33924680948257446, -1.0666264295578003, -0.11030792444944382, -1.4156367778778076, -0.001091004116460681, -0.6540075540542603, -0.01519544143229723, -1.11561918258667, -0.04903214052319527, -0.0010202685371041298, -0.001716689090244472, -0.00044943721150048077, -0.06022489815950394, -3.886147169396281e-05, -0.0006828360492363572, -0.05518806353211403, -0.0026679181028157473, -0.5460283160209656, -0.023956244811415672, -0.020594336092472076, -0.0032891719602048397, -0.007449230644851923, -0.007726308424025774, -0.2821645438671112, -0.003009792184457183, -0.030037349089980125, -2.18705677986145, -2.7735636234283447, -2.4982686042785645, -0.9485925436019897, -0.0004752936656586826, -0.012020294554531574, -0.4119984805583954, -0.00016020445036701858, -0.6030281782150269, -1.7349852323532104, -0.041004929691553116, -0.3459741473197937, -0.07362394779920578, -0.02783280238509178, -0.001110890181735158, -2.1854848861694336, -0.45705366134643555, -1.064159631729126, -0.09602812677621841, -1.037545919418335, -0.007554652169346809, -0.0031261404510587454, -0.21993951499462128, -0.0017726197838783264, -0.12673746049404144, -3.85038583772257e-05, -1.3218002319335938, -0.004626641049981117, -0.299069344997406, -0.16707108914852142, -0.002518816851079464, -2.451028823852539, -0.28180181980133057, -0.18893398344516754, -0.36442938446998596, -1.1991900205612183, -2.0761141777038574, -0.0905890092253685, -1.217914342880249, -0.009071209467947483, -0.37363675236701965, -0.008591593243181705, -0.018594710156321526, -0.22921277582645416, -0.0002712835557758808, -0.028448818251490593, -1.9130092859268188, -1.9443303346633911, -1.8102439641952515, -0.15389403700828552, -1.3287467956542969, -0.0021244355011731386, -0.00014220656885299832, -0.001434131758287549, -0.005259605124592781, -2.2136402130126953, -0.21493467688560486, -0.08573327213525772, -1.191859483718872, -0.039067067205905914, -1.5791820287704468, -0.1085120141506195, -0.08278611302375793, -0.15751923620700836, -0.9113799929618835, -0.03174866735935211, -0.3179664611816406, -0.19882644712924957, -0.9112741351127625, -0.052086662501096725, -0.03976396098732948], "finish_reason": "length"}], "metrics": {"energy": 255.67141292190556, "energy_per_token": 0.9987164567261936, "time": 11.150557, "time_per_token": 0.04355686328125}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame) or df.empty:\n        raise ValueError(\"The input df must be DataFrame, not be empty, and must contain the specified column, if it is not, the function will raise ValueError.\")\n    if not col in df.columns:\n        raise ValueError(f\"The column {col} is not in the DataFrame.\")\n\n    ax = df[col].value_counts().plot.pie(label='', figsize=(5, 5), colors=COLORS, autopct='%1.2f%%')\n    ax.set_title(title)\n\n    return ax\n\ntask_func(pd.DataFrame(), 'fruit', title='Fruit Distribution')", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " df", " must", " be", " Data", "Frame", ",", " not", " be", " empty", ",", " and", " must", " contain", " the", " specified", " column", ",", " if", " it", " is", " not", ",", " the", " function", " will", " raise", " Value", "Error", ".", "\"", ")", "\n", "    ", "if", " not", " col", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " column", " {", "col", "}", " is", " not", " in", " the", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "ax", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", ".", "plot", ".", "pie", "(", "label", "=", "''", ",", " fig", "size", "=(", "5", ",", " ", "5", ")", ",", " colors", "=", "COL", "ORS", ",", " aut", "op", "ct", "='", "%", "1", ".", "2", "f", "%%", "')", "\n", "    ", "ax", ".", "set", "_", "title", "(", "title", ")", "\n", "\n", "    ", "return", " ax", "\n", "\n", "task", "_", "func", "(", "pd", ".", "DataFrame", "()", ",", " '", "fruit", "'", ",", " title", "='", "F", "ruit", " Distribution", "')"], "logprobs": [-0.7615711092948914, -0.44754669070243835, -0.06285339593887329, -0.0002759314374998212, -0.03629014268517494, -0.0015198357868939638, -0.041521746665239334, -2.455681169521995e-05, -0.1216922327876091, -0.7996376752853394, -0.025256842374801636, -0.6952859163284302, -0.010300924070179462, -0.01879677176475525, -0.8590272665023804, -0.03141116723418236, -0.003033918561413884, -0.03375745564699173, -0.023741602897644043, -6.425174069590867e-05, -0.2637406885623932, -0.2191673219203949, -1.339949607849121, -0.17588748037815094, -0.38847315311431885, -0.04123866185545921, -0.023399874567985535, -0.1925172656774521, -0.0012809175532311201, -0.022305790334939957, -0.014469927176833153, -0.03458163142204285, -0.00013052565918769687, -0.3061113655567169, -0.01891457289457321, -0.011107869446277618, -0.0027743205428123474, -0.0061643472872674465, -0.0036367725115269423, -0.0025927757378667593, -1.2698900699615479, -0.04082195460796356, -0.005958294961601496, -0.003864916041493416, -0.0005708495154976845, -0.00889245793223381, -0.008688503876328468, -0.0029401429928839207, -0.0008263748604804277, -0.0002809368306770921, -0.003025361569598317, -0.00047946401173248887, -0.042440786957740784, -0.024290569126605988, -0.001129227806814015, -0.00254568993113935, -0.6961658000946045, -0.16622354090213776, -1.7542277574539185, -0.5181321501731873, -0.004759886302053928, -0.048834510147571564, -0.3495371639728546, -0.017193080857396126, -0.0065309652127325535, -0.0021998509764671326, -0.0019392033573240042, -0.005945970769971609, -0.03741474449634552, -0.00011050090688513592, -0.0189103614538908, -1.0493005514144897, -0.08148211985826492, -0.43610459566116333, -0.7362668514251709, -0.6266759634017944, -0.0045614950358867645, -0.010056542232632637, -0.7451136708259583, -0.030906319618225098, -0.21820680797100067, -0.2935492694377899, -0.7951026558876038, -0.011982720345258713, -1.1972298622131348, -0.06984429806470871, -0.0009082006872631609, -0.002848854986950755, -0.5928109288215637, -0.0006858142442069948, -2.5677506923675537, -0.034003835171461105, -0.12287876009941101, -0.13282783329486847, -0.0011075560469180346, -0.0005216429708525538, -0.0010475391754880548, -0.03971641883254051, -0.00025388356880284846, -0.0031375489197671413, -0.0892067402601242, -0.02970331907272339, -0.07760316878557205, -0.1341302990913391, -0.00023064337437972426, -0.05065179616212845, -4.062144756317139, -0.09863753616809845, -1.202332615852356, -0.00038675934774801135, -1.0147649049758911, -0.0008579387213103473, -0.026935510337352753, -1.5264030694961548, -0.01730181649327278, -0.2837536334991455, -0.036597155034542084, -0.0688256025314331, -0.0003471963864285499, -1.2864700555801392, -0.32386288046836853, -0.015413803048431873, -9.298280929215252e-06, -0.3877612352371216, -0.4519217610359192, -0.01412184163928032, -0.006719138007611036, -0.08759640157222748, -0.0009598892065696418, -0.18837150931358337, -9.417090768693015e-05, -1.4127477407455444, -0.005906982813030481, -0.05601731315255165, -0.6116934418678284, -0.020571913570165634, -0.2557140290737152, -1.7741172313690186, -0.018991656601428986, -0.2398027926683426, -0.03927672654390335, -0.01746278628706932, -0.01017797365784645, -0.10781638324260712, -0.42072832584381104, -0.26386386156082153, -1.3083552122116089, -0.0032133632339537144, -0.060580864548683167, -0.01360571850091219, -0.9551266431808472, -0.018773021176457405, -3.7109220027923584, -0.030720101669430733, -0.07152684777975082, -0.3949894607067108, -0.3398909866809845, -0.0008699684985913336, -0.18399597704410553, -3.2125167846679688, -0.01169633399695158, -0.22287343442440033, -0.9057891368865967, -0.42291778326034546, -0.0005035324720665812, -0.21536102890968323, -0.12409736216068268, -0.27559545636177063, -0.0028373245149850845, -0.027230095118284225, -0.014474392868578434], "finish_reason": "stop"}], "metrics": {"energy": 168.7368216896058, "energy_per_token": 0.9867650391205017, "time": 7.3692803, "time_per_token": 0.043095206432748535}}
{"outputs": [{"text": "# Check input\n    if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"The input df must be DataFrame, not be empty, and must contain the specified column, if it is not, the function will raise ValueError.\")\n\n    if not df.empty or len(df.index) == 0:\n        raise ValueError(\"The input df must be DataFrame, not be empty, and must contain the specified column, if it is not, the function will raise ValueError.\")\n\n    if col not in df.columns:\n        raise ValueError(\"The specified column is not found in the DataFrame.\")\n\n    # Make a copy of the df for manipulations\n    df = df.copy()\n\n    # Plot the pie chart\n    df['fruit'].value_counts().plot.pie(colors=COLORS, labels=df['fruit'].unique())\n    ax = plt.gca()\n\n    # Set the title if given\n    if title:\n        ax.set_title(title)\n\n    return ax", "tokens": ["#", " Check", " input", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " df", " must", " be", " Data", "Frame", ",", " not", " be", " empty", ",", " and", " must", " contain", " the", " specified", " column", ",", " if", " it", " is", " not", ",", " the", " function", " will", " raise", " Value", "Error", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " df", ".", "empty", " or", " len", "(", "df", ".", "index", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " df", " must", " be", " Data", "Frame", ",", " not", " be", " empty", ",", " and", " must", " contain", " the", " specified", " column", ",", " if", " it", " is", " not", ",", " the", " function", " will", " raise", " Value", "Error", ".", "\"", ")", "\n", "\n", "    ", "if", " col", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " specified", " column", " is", " not", " found", " in", " the", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "#", " Make", " a", " copy", " of", " the", " df", " for", " manip", "ulations", "\n", "    ", "df", " =", " df", ".", "copy", "()", "\n", "\n", "    ", "#", " Plot", " the", " pie", " chart", "\n", "    ", "df", "['", "fruit", "']", ".", "value", "_", "counts", "()", ".", "plot", ".", "pie", "(", "colors", "=", "COL", "ORS", ",", " labels", "=", "df", "['", "fruit", "']", ".", "unique", "())", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "#", " Set", " the", " title", " if", " given", "\n", "    ", "if", " title", ":", "\n", "        ", "ax", ".", "set", "_", "title", "(", "title", ")", "\n", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-1.3294174671173096, -0.7342183589935303, -2.39837646484375, -1.7045639753341675, -0.0075222342275083065, -0.04994941130280495, -0.27868378162384033, -0.039712753146886826, -0.00029571453342214227, -0.02575002796947956, -0.0011288706446066499, -0.03503156453371048, -2.0265373677830212e-05, -0.1447109431028366, -0.5423629879951477, -0.006035199388861656, -0.0017214493127539754, -0.050612471997737885, -0.3522011637687683, -0.0002603192115202546, -0.267325758934021, -0.33637598156929016, -1.150439977645874, -0.0992741733789444, -0.6140904426574707, -0.047585379332304, -0.0010518262861296535, -0.2634545862674713, -0.0021107555367052555, -0.0928138792514801, -0.010344460606575012, -0.17559659481048584, -0.007349241059273481, -0.054799024015665054, -0.01787973754107952, -0.01163612399250269, -0.006120983976870775, -0.006578811444342136, -0.005410314071923494, -0.0025996719487011433, -0.7891151905059814, -0.04469217360019684, -0.005652752239257097, -0.004289830103516579, -0.0006567466771230102, -0.007662191987037659, -0.008099212311208248, -0.0030870423652231693, -0.0009469077922403812, -0.0003698380314745009, -0.0038098148070275784, -0.0005648924270644784, -0.0328235924243927, -0.02826063334941864, -0.0019319456769153476, -0.0021589321549981833, -1.4124127626419067, -0.00025138078490272164, -0.16038212180137634, -1.1231768131256104, -0.7349562644958496, -0.09246768057346344, -0.2155115306377411, -2.7194924354553223, -2.4482991695404053, -0.0003400462737772614, -0.09476765245199203, -0.6612401008605957, -2.690410852432251, -0.028521114960312843, -0.4228684902191162, -0.005037591326981783, -0.01624302566051483, -0.15145643055438995, -0.019173523411154747, -0.0013081812066957355, -0.009716005995869637, -0.0037354708183556795, -4.434487345861271e-05, -0.007760612294077873, -0.015029877424240112, -0.06118713319301605, -0.03094654157757759, -0.03415707126259804, -0.02813987247645855, -0.2674448490142822, -0.051280081272125244, -0.0016750366194173694, -0.008334852755069733, -0.009263629093766212, -0.003131844801828265, -7.497983460780233e-05, -0.014365702867507935, -0.001727637485601008, -0.0008644896443001926, -0.00025567124248482287, -0.0005779979983344674, -7.033100700937212e-05, -0.00018606838420964777, -0.014270750805735588, -0.0008503158460371196, -0.00018690270371735096, -5.638440416078083e-05, -1.3947389561508317e-05, -0.00018904806347563863, -0.0001691436773398891, -0.00012134769349358976, -3.1470757676288486e-05, -1.549708758830093e-05, -8.95221673999913e-05, -0.00037377048283815384, -0.0007521660882048309, -0.001149708521552384, -0.00019810620869975537, -0.0011685217032209039, -0.0675307884812355, -0.0001538873475510627, -0.14887851476669312, -0.37529659271240234, -0.008954723365604877, -6.806619057897478e-05, -0.05773688107728958, -0.1426192671060562, -0.011694448068737984, -0.01160961203277111, -0.0014590105274692178, -0.0007618147064931691, -0.005795816890895367, -0.02176378108561039, -5.364403477869928e-06, -0.009248747490346432, -0.163702592253685, -0.07145626097917557, -1.264453411102295, -0.052613504230976105, -0.9147149920463562, -0.03199531137943268, -1.8711555004119873, -0.1079888865351677, -0.07972501218318939, -1.3551719188690186, -0.004521266557276249, -0.7387265563011169, -0.05883954465389252, -0.0007582411635667086, -0.002212459221482277, -0.03277041018009186, -0.0011825718684121966, -0.38381895422935486, -4.542183876037598, -1.2541663646697998, -0.897322952747345, -0.2712022066116333, -0.1630723774433136, -2.3978428840637207, -3.129132032394409, -4.777623176574707, -0.06430865824222565, -0.21610312163829803, -0.0025485437363386154, -0.510643720626831, -1.1444416046142578, -0.005964931100606918, -0.006457415409386158, -0.006563534028828144, -0.018450072035193443, -0.008796394802629948, -0.15888382494449615, -0.0004993622424080968, -0.09320133179426193, -3.603231906890869, -0.9273166656494141, -0.23989498615264893, -0.06817562133073807, -0.1722709834575653, -0.0032283354084938765, -2.41988205909729, -3.5635201930999756, -2.4238789081573486, -0.19587630033493042, -0.19669879972934723, -0.05327966436743736, -1.3708974620385561e-05, -0.0009097489528357983, -0.0748286023736, -0.0035987631417810917, -0.03609101101756096, -0.2634163796901703, -0.0005621521850116551, -0.021847877651453018, -2.418064594268799, -0.08835655450820923, -0.007328768726438284, -7.152531907195225e-06, -0.1854909062385559, -2.9392008781433105, -0.15692219138145447, -1.2029285430908203, -0.16333453357219696, -0.0010625437134876847, -0.0056941211223602295, -0.003487102687358856, -0.05422364920377731, -2.9863874912261963, -0.061831019818782806, -0.8742034435272217, -1.0952597856521606, -0.01766870729625225, -0.01929899863898754, -0.0022286358289420605, -0.005942060146480799, -0.027887986972928047, -0.0022827538195997477, -0.014202469028532505, -0.48135003447532654, -0.00031263710116036236, -0.3067820072174072, -0.3957224190235138, -0.4747273027896881, -0.09418889880180359, -0.5617735385894775, -3.408963918685913, -0.029782932251691818, -0.00041797960875555873, -0.01388767920434475, -0.0027610058896243572, -0.4508565068244934, -0.003403468057513237, -0.0014753182185813785, -0.05717163905501366, -0.00020740265608765185, -0.001141849672421813, -0.0005284343496896327, -0.00031513971043750644, -0.0006028980133123696, -0.014623601920902729, -0.031479209661483765, -0.003485083347186446, -0.09301267564296722, -0.002947393339127302, -0.4602728486061096, -0.01248602569103241, -0.6309514045715332, -0.013245096430182457, -1.3062162399291992], "finish_reason": "stop"}], "metrics": {"energy": 244.1238613100051, "energy_per_token": 0.9964239237143065, "time": 10.728141, "time_per_token": 0.0437883306122449}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"The input df must be DataFrame, not be empty, and must contain the specified column, if it is not, the function will raise ValueError.\")\n    if not df.empty:\n        if col in df.columns:\n            if len(df[col].unique()) > 0:\n                # Check if the dataframe has the column\n                colors = [COLORS[i % len(COLORS)] for i in range(len(df[col].unique()))]\n                plt.pie(df.value_counts(), labels=df[col].unique(), colors=colors, autopct='%1.2f%%')\n                if title is None:\n                    # Set the title only if it is not provided\n                    plt.title(f\"{col.upper()} Distribution\")\n                return plt.gca()\n            else:\n                raise ValueError(\"The dataframe has no unique value\")\n        else:\n            raise ValueError(f\"The input DataFrame does not contain the specified column: {col}\")\n    ", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " df", " must", " be", " Data", "Frame", ",", " not", " be", " empty", ",", " and", " must", " contain", " the", " specified", " column", ",", " if", " it", " is", " not", ",", " the", " function", " will", " raise", " Value", "Error", ".", "\"", ")", "\n", "    ", "if", " not", " df", ".", "empty", ":", "\n", "        ", "if", " col", " in", " df", ".", "columns", ":", "\n", "            ", "if", " len", "(", "df", "[", "col", "]", ".", "unique", "())", " >", " ", "0", ":", "\n", "                ", "#", " Check", " if", " the", " data", "frame", " has", " the", " column", "\n", "                ", "colors", " =", " [", "COL", "ORS", "[", "i", " %", " len", "(", "COL", "ORS", ")]", " for", " i", " in", " range", "(", "len", "(", "df", "[", "col", "]", ".", "unique", "()))", "]", "\n", "                ", "plt", ".", "pie", "(", "df", ".", "value", "_", "counts", "()", ",", " labels", "=", "df", "[", "col", "]", ".", "unique", "()", ",", " colors", "=", "colors", ",", " aut", "op", "ct", "='", "%", "1", ".", "2", "f", "%%", "')", "\n", "                ", "if", " title", " is", " None", ":", "\n", "                ", "    ", "#", " Set", " the", " title", " only", " if", " it", " is", " not", " provided", "\n", "                ", "    ", "plt", ".", "title", "(", "f", "\"", "{", "col", ".", "upper", "()}", " Distribution", "\"", ")", "\n", "                ", "return", " plt", ".", "g", "ca", "()", "\n", "            ", "else", ":", "\n", "                ", "raise", " Value", "Error", "(", "\"", "The", " data", "frame", " has", " no", " unique", " value", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "raise", " Value", "Error", "(", "f", "\"", "The", " input", " Data", "Frame", " does", " not", " contain", " the", " specified", " column", ":", " {", "col", "}\"", ")", "\n", "    "], "logprobs": [-0.7615711092948914, -0.44754669070243835, -0.06285339593887329, -0.0002759314374998212, -0.03629014268517494, -0.0015198357868939638, -0.041521746665239334, -2.455681169521995e-05, -0.1216922327876091, -0.5978573560714722, -0.013428599573671818, -0.003953499253839254, -0.04353909566998482, -0.2376762479543686, -0.0003477922291494906, -0.3104816675186157, -0.35746848583221436, -0.9080771207809448, -0.1532282531261444, -0.43819668889045715, -0.04182372987270355, -0.001207337831147015, -0.18153411149978638, -0.0021470370702445507, -0.08479174971580505, -0.010693156160414219, -0.11409442126750946, -0.005110771395266056, -0.06364332139492035, -0.02069767937064171, -0.013401076197624207, -0.005043877754360437, -0.006766619626432657, -0.004222762770950794, -0.003013595240190625, -0.6062947511672974, -0.05014614015817642, -0.007368174847215414, -0.004491479601711035, -0.0006779517862014472, -0.007729265373200178, -0.009054788388311863, -0.0026914584450423717, -0.0008507922757416964, -0.0003326578007545322, -0.003220373997464776, -0.0004601611872203648, -0.03583283722400665, -0.0281829871237278, -0.0021157516166567802, -0.003008722560480237, -0.43574875593185425, -0.10201077908277512, -0.9902828931808472, -0.4685491919517517, -0.11410197615623474, -0.15863311290740967, -0.08866763114929199, -0.02234729193150997, -0.005468765739351511, -0.1812993586063385, -0.3501921594142914, -1.1406028270721436, -0.023466600105166435, -0.2455253303050995, -0.008891867473721504, -0.011538084596395493, -0.008108554407954216, -0.017063943669199944, -2.0980381965637207, -3.1634328365325928, -0.0013077049516141415, -0.11290551722049713, -0.21462875604629517, -0.002282278146594763, -0.10585793852806091, -0.0005850272136740386, -0.2819054126739502, -0.024563485756516457, -1.3239706754684448, -0.7606716752052307, -1.2614301443099976, -0.03214031457901001, -0.04102255031466484, -0.010383511893451214, -3.0498623847961426, -3.9974162578582764, -0.7053701877593994, -0.7853557467460632, -2.8491499423980713, -0.645759642124176, -1.6087582111358643, -1.462422251701355, -1.5300770998001099, -0.9600591659545898, -0.02817336656153202, -3.416144371032715, -0.1148415058851242, -0.8072759509086609, -0.1406818926334381, -0.00022230061586014926, -0.07487605512142181, -0.2730104327201843, -0.25751543045043945, -0.02686147205531597, -0.00014530557382386178, -0.014677170664072037, -1.9073468138230965e-06, -0.0033886174205690622, -0.017453767359256744, -0.0028272203635424376, -0.003184131346642971, -0.009101332165300846, -0.0008425738196820021, -0.0739063173532486, -0.0003307510633021593, -0.030549457296729088, -0.033051978796720505, -0.00037222131504677236, -0.0168275386095047, -9.905801562126726e-05, -0.004330424126237631, -0.024204351007938385, -0.0018842339050024748, -0.06595679372549057, -0.03467525169253349, -2.380587339401245, -0.0034037057776004076, -0.07964003086090088, -0.01272275298833847, -0.44638749957084656, -2.469424247741699, -1.98992919921875, -0.017602765932679176, -0.0036535197868943214, -0.31887465715408325, -0.1739405393600464, -0.25094959139823914, -0.035710111260414124, -0.049696266651153564, -0.026098735630512238, -9.643566590966657e-05, -0.0004447901446837932, -0.000289159914245829, -0.008610857650637627, -0.004806630779057741, -0.01350316684693098, -0.17918406426906586, -0.009834174066781998, -0.005592178087681532, -0.3948148488998413, -0.26715466380119324, -0.001587679609656334, -0.0034202192910015583, -0.0880509465932846, -0.0010436094598844647, -0.1363060474395752, -1.0132738680113107e-05, -1.079885721206665, -0.0028860606253147125, -0.023302631452679634, -0.3347894549369812, -0.01793687976896763, -0.0519164577126503, -0.35509130358695984, -0.015217280015349388, -1.0726977586746216, -2.876314640045166, -0.005086339078843594, -0.017175856977701187, -0.00047565114800818264, -0.0011308948742225766, -2.9321725368499756, -1.6926476955413818, -0.6828047633171082, -0.2770547866821289, -2.424351453781128, -0.12505479156970978, -1.635941505432129, -0.2308366447687149, -0.4117783308029175, -1.8323402404785156, -0.1889142394065857, -0.000289159914245829, -0.0005930095794610679, -0.11498113721609116, -8.415821503149346e-05, -0.025843314826488495, -0.08524537831544876, -0.5437138080596924, -0.48922616243362427, -0.5927722454071045, -0.3920452296733856, -1.9202046394348145, -1.5789895057678223, -0.3685378432273865, -0.0863250344991684, -0.058413807302713394, -0.014103740453720093, -0.004992281552404165, -0.0476575568318367, -0.6403074264526367, -0.024880049750208855, -0.006016003433614969, -0.04650823399424553, -0.05942597612738609, -0.001545069506391883, -0.06683581322431564, -0.4656619429588318, -0.04013049602508545, -0.00028939827461726964, -0.008342182263731956, -0.0009458358981646597, -0.4559548795223236, -0.04028989374637604, -4.95898348162882e-05, -0.024879934266209602, -0.37840306758880615, -0.39991995692253113, -1.1513843536376953, -0.1157865896821022, -0.8787277936935425, -0.35433030128479004, -0.7225472927093506, -1.9804130792617798, -2.6454927921295166, -0.017811937257647514, -0.03481767699122429, -0.07862365990877151, -0.007472185418009758, -0.00021336186910048127, -0.002115394687280059, -0.002873223042115569, -0.010722522623836994, -0.043865226209163666, -8.129743218887597e-05, -0.0111106988042593, -1.1946700811386108, -0.02866245061159134, -0.3984892666339874, -2.1745405197143555, -2.1374545097351074, -0.02658628113567829, -1.1815195083618164, -0.004170411732047796, -0.39342808723449707, -0.18298020958900452, -0.5701106190681458, -0.01853456348180771, -0.6238636374473572, -0.095418781042099, -0.011490121483802795, -0.19195464253425598, -0.0456048883497715, -0.06656884402036667, -0.05848970264196396], "finish_reason": "length"}], "metrics": {"energy": 263.2500531806945, "energy_per_token": 1.028320520237088, "time": 11.139587, "time_per_token": 0.04351401171875}}
{"outputs": [{"text": "# Check if the input df is empty\n    if len(df) == 0:\n        raise ValueError(\"Input DataFrame cannot be empty.\")\n\n    # Check if the specified column does not exist in the df\n    if col not in df.columns:\n        raise ValueError(\"The specified column does not exist in the DataFrame.\")\n\n    # Draw the pie chart\n    plt.pie(df[col].value_counts(), labels=df[col].unique(), colors=COLORS)\n    if title:\n        plt.title(title)\n    plt.show()\n    return plt.gca()", "tokens": ["#", " Check", " if", " the", " input", " df", " is", " empty", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " cannot", " be", " empty", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " specified", " column", " does", " not", " exist", " in", " the", " df", "\n", "    ", "if", " col", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " specified", " column", " does", " not", " exist", " in", " the", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "#", " Draw", " the", " pie", " chart", "\n", "    ", "plt", ".", "pie", "(", "df", "[", "col", "]", ".", "value", "_", "counts", "()", ",", " labels", "=", "df", "[", "col", "]", ".", "unique", "()", ",", " colors", "=", "COL", "ORS", ")", "\n", "    ", "if", " title", ":", "\n", "        ", "plt", ".", "title", "(", "title", ")", "\n", "    ", "plt", ".", "show", "()", "\n", "    ", "return", " plt", ".", "g", "ca", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.3294174671173096, -0.7342183589935303, -0.8138589859008789, -0.7157440185546875, -0.3336832523345947, -0.5070144534111023, -0.029022304341197014, -2.8753349781036377, -0.5795145630836487, -0.002454484812915325, -0.01465743500739336, -1.1050405502319336, -0.00012587709352374077, -0.0020857739727944136, -0.061450500041246414, -0.04432537034153938, -0.00047672350774519145, -3.540453326422721e-05, -0.055909328162670135, -0.005544640589505434, -0.0010350352386012673, -0.027802426367998123, -0.0065798768773674965, -4.160317621426657e-05, -0.3227621614933014, -0.08086483925580978, -1.0750657320022583, -0.7058423757553101, -0.008275032043457031, -1.050748586654663, -0.0006441186997108161, -0.004192136228084564, -0.5196007490158081, -0.010403567925095558, -0.00010108436981681734, -0.0017916593933477998, -0.11567329615354538, -0.0011560192797333002, -0.031491104513406754, -0.0598762109875679, -0.021744417026638985, -0.09939301013946533, -0.8244027495384216, -0.01930168643593788, -3.359591007232666, -0.09513343125581741, -0.014989598654210567, -0.39869460463523865, -0.09004029631614685, -1.5697088241577148, -0.16570661962032318, -0.0009291622554883361, -0.04963671416044235, -0.16525360941886902, -0.0010924329981207848, -1.8715683836489916e-05, -0.012757944874465466, -0.13201437890529633, -0.012779600918293, -0.003990070428699255, -0.0005361788207665086, -0.000485183292767033, -0.006627957336604595, -0.013872513547539711, -7.60526381782256e-05, -0.008864928036928177, -1.1561251878738403, -1.2982841730117798, -0.1547904908657074, -0.0048353406600654125, -0.12821240723133087, -0.00015960850578267127, -0.0008843801915645599, -0.05843314528465271, -0.018633674830198288, -0.35288113355636597, -0.0015194787411019206, -0.02010035328567028, -0.00898154266178608, -0.0002971446083392948, -0.0006865289760753512, -0.018985340371727943, -0.0008822362869977951, -0.18503151834011078, -2.8371315002441406, -0.4975759983062744, -0.026697713881731033, -0.012836211360991001, -0.3216860592365265, -0.002455436158925295, -2.4727325439453125, -0.001939917216077447, -0.30867117643356323, -0.018286801874637604, -0.48511776328086853, -0.027098998427391052, -0.00030012393835932016, -0.0007304860628210008, -0.00031394799589179456, -0.005571906454861164, -5.960462772236497e-07, -0.0017741668270900846, -0.02761528082191944, -0.0601317323744297, -0.20076783001422882, -0.015835952013731003, -0.23659034073352814, -0.00421172333881259, -7.986703712958843e-05, -0.0010985060362145305, -0.0002559096028562635, -0.4126863479614258, -0.0158546082675457, -0.023514922708272934, -0.26443201303482056, -0.04187802970409393, -0.009149055927991867, -7.152531907195225e-06, -1.2158699035644531, -0.010183047503232956, -0.4934009611606598, -0.655889093875885, -0.007294923532754183, -0.4629220962524414, -0.011402674950659275, -0.0016778928693383932, -0.025158850476145744, -0.00024053541710600257, -0.005864555947482586, -0.00031120702624320984, -0.01306191273033619, -0.011564362794160843, -0.012509807012975216, -0.4993853271007538, -1.1071996688842773, -0.0007742029847577214, -0.14747737348079681, -0.005683334544301033, -0.04716676101088524, -0.2361728549003601, -0.25239992141723633, -0.03641268238425255, -0.04925765097141266, -0.03300077095627785, -0.13961969316005707, -0.0022319662384688854, -1.6716598272323608, -8.344646857949556e-07, -9.536738616588991e-07, -0.00010525626566959545, -0.00012933371181134135, -0.12657487392425537], "finish_reason": "stop"}], "metrics": {"energy": 180.25465678215022, "energy_per_token": 1.1858858998825672, "time": 6.5228896, "time_per_token": 0.04291374736842105}}
{"outputs": [{"text": "# Check if input df is DataFrame and not empty, else raise ValueError\n    if not isinstance(df, pd.DataFrame) or df.empty:\n        raise ValueError(\"Input df must be a non-empty DataFrame!\")\n\n    # Check if column exists in the input df, else raise ValueError\n    if col not in df.columns:\n        raise ValueError(f\"Column {col} not found in the input DataFrame!\")\n\n    # Calculate number of unique values in column\n    n_unique = len(df[col].unique())\n\n    # Set the colors for the slices\n    colors = [COLORS[i % len(COLORS)] for i in range(n_unique)]\n\n    # Create a figure and axis object\n    fig, ax = plt.subplots()\n\n    # Set the title of the chart if specified\n    if title:\n        ax.set_title(title)\n\n    # Draw the pie chart with the given colors\n    ax.pie(df[col].value_counts(), labels=df[col].unique(), colors=colors, autopct='", "tokens": ["#", " Check", " if", " input", " df", " is", " Data", "Frame", " and", " not", " empty", ",", " else", " raise", " Value", "Error", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " non", "-", "empty", " Data", "Frame", "!", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " column", " exists", " in", " the", " input", " df", ",", " else", " raise", " Value", "Error", "\n", "    ", "if", " col", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " {", "col", "}", " not", " found", " in", " the", " input", " Data", "Frame", "!", "\"", ")", "\n", "\n", "    ", "#", " Calculate", " number", " of", " unique", " values", " in", " column", "\n", "    ", "n", "_", "unique", " =", " len", "(", "df", "[", "col", "]", ".", "unique", "())", "\n", "\n", "    ", "#", " Set", " the", " colors", " for", " the", " slices", "\n", "    ", "colors", " =", " [", "COL", "ORS", "[", "i", " %", " len", "(", "COL", "ORS", ")]", " for", " i", " in", " range", "(", "n", "_", "unique", ")]", "\n", "\n", "    ", "#", " Create", " a", " figure", " and", " axis", " object", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "\n", "    ", "#", " Set", " the", " title", " of", " the", " chart", " if", " specified", "\n", "    ", "if", " title", ":", "\n", "        ", "ax", ".", "set", "_", "title", "(", "title", ")", "\n", "\n", "    ", "#", " Draw", " the", " pie", " chart", " with", " the", " given", " colors", "\n", "    ", "ax", ".", "pie", "(", "df", "[", "col", "]", ".", "value", "_", "counts", "()", ",", " labels", "=", "df", "[", "col", "]", ".", "unique", "()", ",", " colors", "=", "colors", ",", " aut", "op", "ct", "='"], "logprobs": [-1.3294174671173096, -0.7342183589935303, -0.8138589859008789, -1.7369041442871094, -1.1434653997421265, -0.05428270250558853, -0.5245082974433899, -0.01460715476423502, -1.2604014873504639, -0.4681518077850342, -0.011727085337042809, -2.0442864894866943, -3.440037727355957, -0.10659082978963852, -0.1427086740732193, -0.01503856759518385, -0.10823893547058105, -0.006272273603826761, -0.02712208591401577, -0.1586678922176361, -0.03186749294400215, -0.00022492263815365732, -0.0025789830833673477, -0.0011386347468942404, -0.03786708042025566, -1.3470558769768104e-05, -0.1452474743127823, -0.30887752771377563, -0.007790893316268921, -0.9471771121025085, -0.00392072694376111, -0.011479279957711697, -0.0671352669596672, -0.0025064502842724323, -0.0026991860941052437, -0.013076385483145714, -0.008268292993307114, -7.033323527139146e-06, -0.35307085514068604, -0.13324694335460663, -0.5832929015159607, -0.5506922006607056, -0.09941664338111877, -0.019836032763123512, -0.4947417974472046, -0.7184233069419861, -0.012728285044431686, -0.0003361137059982866, -0.050129927694797516, -0.0023421018850058317, -3.3374252319335938, -0.0151642095297575, -0.00022933237778488547, -0.002700731623917818, -0.24293185770511627, -0.0003810394846368581, -0.11229252070188522, -0.10881368070840836, -0.0393172986805439, -1.8998240232467651, -1.0364882946014404, -0.34155791997909546, -2.1861884593963623, -2.514035224914551, -0.420505553483963, -0.5326616168022156, -0.13216668367385864, -0.011389592662453651, -0.045484837144613266, -0.0009504806366749108, -0.011234596371650696, -0.0009525052737444639, -0.03490171954035759, -0.08873689919710159, -0.0011068414896726608, -2.6702524337451905e-05, -0.015321768820285797, -0.19677694141864777, -0.007400006055831909, -0.0012143626809120178, -0.0004893536097370088, -0.0004029654082842171, -0.004969506990164518, -0.02263111062347889, -0.00015662873920518905, -0.006076314952224493, -0.6602464914321899, -0.02750418148934841, -0.8400506377220154, -0.35297277569770813, -0.0016790828667581081, -0.03312475234270096, -0.8157428503036499, -0.2569579780101776, -0.06775082647800446, -0.8478343486785889, -0.41443121433258057, -0.9633786678314209, -0.004231903236359358, -0.16923588514328003, -0.008835388347506523, -0.00019822540343739092, -0.0006982034537941217, -0.018329406157135963, -0.0005442806868813932, -0.18609201908111572, -2.4311816692352295, -1.6216835975646973, -0.0027854950167238712, -0.05462995544075966, -0.019435329362750053, -0.39946722984313965, -1.784135103225708, -0.3570616543292999, -0.0004306104383431375, -1.4283636808395386, -0.0515642985701561, -0.16435354948043823, -0.22229041159152985, -0.4045667350292206, -0.001851393491961062, -0.1612633317708969, -0.010340212844312191, -0.00016115797916427255, -0.0008127961773425341, -4.410734163684538e-06, -0.1109270378947258, -0.0009400001727044582, -0.007433138322085142, -0.056506603956222534, -0.00030191155383363366, -0.04368996247649193, -2.7754695415496826, -1.9021252393722534, -2.8408384323120117, -0.2695228159427643, -0.4970584511756897, -0.44444718956947327, -0.6676175594329834, -0.0004945961991325021, -0.37571585178375244, -0.010357084684073925, -0.267199844121933, -0.0580323189496994, -9.297892393078655e-05, -0.05129378288984299, -0.09457875043153763, -0.06449644267559052, -0.012182471342384815, -5.328513361746445e-05, -0.0007277462864294648, -1.1920922133867862e-06, -0.002074948512017727, -0.008684013038873672, -0.0006448334897868335, -0.0008405489497818053, -0.0012299600057303905, -0.00024291902082040906, -0.014452537521719933, -8.940656698541716e-06, -4.076874756719917e-05, -0.006622747052460909, -0.0024796947836875916, -0.018810341134667397, -0.00034290633630007505, -0.07538417726755142, -0.7868297100067139, -0.859498918056488, -2.04024600982666, -0.29172956943511963, -2.2549185752868652, -0.7859399914741516, -0.6604466438293457, -0.00020108585886191577, -0.04122333601117134, -0.008077691309154034, -0.0075508663430809975, -0.00846784096211195, -0.0001787979417713359, -6.544376083184034e-05, -0.0007231004419736564, -0.00012492353562265635, -0.36227884888648987, -0.000962032878305763, -0.09894910454750061, -0.0002669931564014405, -0.024146519601345062, -1.4686107635498047, -0.32635027170181274, -0.15290655195713043, -0.7996289134025574, -0.003944831434637308, -1.902459979057312, -1.0392377376556396, -0.3684462308883667, -0.025363890454173088, -0.00033444532891735435, -0.04195427894592285, -0.0006211258587427437, -0.28399524092674255, -0.003736183512955904, -0.0008181562297977507, -0.03444608300924301, -3.2782016205601394e-05, -0.0002153879904653877, -0.00013159839727450162, -0.0001541257370263338, -0.00012158608296886086, -0.00518774101510644, -0.020873982459306717, -0.0005492847412824631, -0.0034920922480523586, -0.0020816102623939514, -0.020700599998235703, -2.2615649700164795, -0.4180886745452881, -0.018643386662006378, -0.01542237214744091, -1.8489899635314941, -0.37709566950798035, -2.8889522552490234, -0.7289823293685913, -0.5012924075126648, -0.00026890001026913524, -0.5265767574310303, -0.0006445952458307147, -0.0021130156237632036, -0.03634233400225639, -0.9645490646362305, -0.034302566200494766, -0.00022516099852509797, -0.000597179401665926, -0.0005920564290136099, -0.004386921413242817, -2.3841855067985307e-07, -0.0013521108776330948, -0.01283068023622036, -0.5122432112693787, -0.7655224204063416, -0.017349500209093094, -0.3637143671512604, -0.004717292729765177, -4.303362584323622e-05, -0.0006920088781043887, -0.00038342276820912957, -0.022189553827047348, -0.0009491706150583923, -0.009359175339341164, -0.06947793811559677, -0.0006384003208950162, -0.0017879704246297479, -0.5976549386978149, -0.5385882258415222, -0.002750306623056531, -0.004123281687498093, -0.05199228227138519], "finish_reason": "length"}], "metrics": {"energy": 256.6992757129668, "energy_per_token": 1.0027315457537767, "time": 11.148015, "time_per_token": 0.04354693359375}}
{"outputs": [{"text": "if title is None:\n        title = col\n    ax = df[col].value_counts().plot.pie(figsize=(10, 10), autopct='%1.1f%%', labels=None,\n                                          colors=COLORS[:df[col].nunique()], textprops={'size': 'x-large'})\n    ax.set_title(title)\n    return ax", "tokens": ["if", " title", " is", " None", ":", "\n", "        ", "title", " =", " col", "\n", "    ", "ax", " =", " df", "[", "col", "]", ".", "value", "_", "counts", "()", ".", "plot", ".", "pie", "(", "fig", "size", "=(", "1", "0", ",", " ", "1", "0", ")", ",", " aut", "op", "ct", "='", "%", "1", ".", "1", "f", "%%", "'", ",", " labels", "=", "None", ",", "\n", "                ", "                ", "          ", "colors", "=", "COL", "ORS", "[:", "df", "[", "col", "]", ".", "nun", "ique", "()", "]", ",", " text", "props", "={", "'", "size", "':", " '", "x", "-", "large", "'})", "\n", "    ", "ax", ".", "set", "_", "title", "(", "title", ")", "\n", "    ", "return", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.7615711092948914, -2.3634822368621826, -0.46562856435775757, -0.391162633895874, -0.01865391619503498, -0.02379259094595909, -0.002918510464951396, -0.25844335556030273, -0.015032579191029072, -1.6118905544281006, -0.4519757032394409, -0.44238463044166565, -2.124763011932373, -0.023070959374308586, -0.20327401161193848, -0.13772758841514587, -0.003021558281034231, -0.0009639384225010872, -0.001671347301453352, -0.07870829105377197, -0.0007413261337205768, -0.003853991162031889, -0.16503451764583588, -0.04014400765299797, -0.04205326735973358, -0.09696356952190399, -0.0002890407631639391, -0.04215339198708534, -3.273414134979248, -0.0002374367177253589, -0.056548286229372025, -1.3640378713607788, -0.23961706459522247, -0.0057845572009682655, -0.068911612033844, -0.15367652475833893, -0.0063714231364429, -0.028821604326367378, -0.00029023250681348145, -1.0834879875183105, -0.006185672711580992, -0.006425435654819012, -0.1323445439338684, -0.000811366830021143, -0.2493344098329544, -5.6622808187967166e-05, -0.4073221683502197, -0.0017471539322286844, -0.008226912468671799, -0.09632870554924011, -0.0007413261337205768, -1.8221349716186523, -0.10102111101150513, -0.9967427253723145, -0.16905982792377472, -2.8454089164733887, -0.04056992754340172, -0.09535994380712509, -1.587529182434082, -0.900442898273468, -0.5584048628807068, -0.05837804824113846, -1.5616295058862306e-05, -2.856243848800659, -1.3623230457305908, -0.058638446033000946, -0.0003034608089365065, -0.0008939084364101291, -5.686121585313231e-05, -0.17455583810806274, -0.0066756801679730415, -0.00174251280259341, -0.4657480716705322, -0.002918035024777055, -2.9566516876220703, -0.11547109484672546, -0.3545350432395935, -0.009060222655534744, -1.2969175577163696, -0.0013893722789362073, -0.2855507731437683, -0.9801392555236816, -0.0020034497138112783, -0.03666587918996811, -1.1970590353012085, -0.01815113238990307, -0.041242897510528564, -0.37747204303741455, -0.007324981968849897, -0.1316927820444107, -0.0442398376762867, -0.014863698743283749, -0.004271787591278553, -0.092706099152565, -0.5871248245239258, -0.01569431647658348, -0.07554999738931656, -0.2144252210855484, -0.012495091184973717, -1.8628422021865845, -1.9073468138230965e-06, -1.0728830375228426e-06, -0.0002641328901518136, -9.369411418447271e-05, -0.15141093730926514], "finish_reason": "stop"}], "metrics": {"energy": 128.67536308956147, "energy_per_token": 1.225479648472014, "time": 4.4245443, "time_per_token": 0.04213851714285714}}
