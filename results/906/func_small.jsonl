{"outputs": [{"text": "# Define the regular expression pattern to match processed files\n    pattern = re.compile(r'_processed\\.[a-zA-Z0-9]{3}(?:$|\\.|/|\\\\)')\n\n    # Find all processed files in the source directory\n    processed_files = [f for f in os.listdir(source_dir) if pattern.search(f)]\n\n    # Create a ZipFile object with the specified archive name\n    archive = ZipFile(os.path.join(target_dir, archive_name), 'w')\n\n    # Iterate through the processed files and add them to the archive\n    for processed_file in processed_files:\n        archive.write(os.path.join(source_dir, processed_file), processed_file)\n\n    # Close the archive\n    archive.close()\n\n    # Return the path to the created archive\n    return os.path.join(target_dir, archive_name)", "tokens": ["#", " Define", " the", " regular", " expression", " pattern", " to", " match", " processed", " files", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "r", "'_", "processed", "\\", ".", "[", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]{", "3", "}(", "?", ":$", "|\\", ".", "|", "/", "|\\\\", ")", "')", "\n", "\n", "    ", "#", " Find", " all", " processed", " files", " in", " the", " source", " directory", "\n", "    ", "processed", "_", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " pattern", ".", "search", "(", "f", ")]", "\n", "\n", "    ", "#", " Create", " a", " Zip", "File", " object", " with", " the", " specified", " archive", " name", "\n", "    ", "archive", " =", " Zip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "w", "')", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " processed", " files", " and", " add", " them", " to", " the", " archive", "\n", "    ", "for", " processed", "_", "file", " in", " processed", "_", "files", ":", "\n", "        ", "archive", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " processed", "_", "file", ")", ",", " processed", "_", "file", ")", "\n", "\n", "    ", "#", " Close", " the", " archive", "\n", "    ", "archive", ".", "close", "()", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " created", " archive", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.5353851318359375, -3.029301643371582, -0.6749363541603088, -1.062337040901184, -0.025568887591362, -0.4400826692581177, -0.8790713548660278, -0.5922648906707764, -1.1424347162246704, -0.05777592584490776, -0.221114844083786, -0.001846038969233632, -0.2609749436378479, -0.004315705969929695, -0.5356211066246033, -5.721882189391181e-05, -0.0009689403814263642, -0.05015011131763458, -0.01894393377006054, -0.39647361636161804, -0.03483632579445839, -1.4056851863861084, -0.07384674996137619, -1.603626012802124, -0.24112597107887268, -0.0007116645574569702, -0.013723309151828289, -0.1681976467370987, -3.707340147229843e-05, -0.0004359725280664861, -0.22797243297100067, -1.1086402082582936e-05, -4.23184028477408e-05, -0.5717719197273254, -0.6406082510948181, -3.03108811378479, -0.39549392461776733, -3.8495755195617676, -1.6500484943389893, -0.11804579198360443, -2.3708462715148926, -1.8054314851760864, -2.462555170059204, -0.3085014224052429, -0.03784205764532089, -0.0066122072748839855, -0.16249202191829681, -0.0004190520558040589, -0.09140629321336746, -1.3653045892715454, -0.1213769018650055, -0.49838700890541077, -0.008994065225124359, -0.12862832844257355, -0.046202998608350754, -0.031207479536533356, -0.013388019986450672, -0.18743301928043365, -0.00035291642416268587, -1.1418483257293701, -0.006238984875380993, -0.00788729079067707, -0.015179121866822243, -0.6404337882995605, -0.9123594164848328, -0.04228447005152702, -0.0005597693379968405, -0.0007549058645963669, -0.02073294296860695, -3.576272320060525e-06, -0.00031919151660986245, -2.264974000354414e-06, -0.001095648156479001, -0.001829380402341485, -1.6927575416048057e-05, -1.5497195136049413e-06, -0.007505078334361315, -0.027161184698343277, -0.09803691506385803, -4.5298504119273275e-05, -0.28052031993865967, -9.214453893946484e-05, -0.014246776700019836, -0.07844986766576767, -0.0008936702506616712, -0.06464999169111252, -0.0001408954558428377, -0.05744113028049469, -0.5832637548446655, -0.8824959397315979, -1.1848745346069336, -0.12023182213306427, -0.44823795557022095, -2.241224765777588, -0.32952308654785156, -2.3922009468078613, -0.11076132953166962, -0.20841918885707855, -0.46151089668273926, -0.0003343261778354645, -1.3418735265731812, -0.1809636801481247, -2.2673707008361816, -0.0019142176024615765, -0.0032660020515322685, -0.5496501922607422, -1.2040065485052764e-05, -0.00022968991834204644, -0.0015922023449093103, -0.002715830225497484, -0.0002762889489531517, -0.00751773826777935, -2.0265558760002023e-06, -1.0728830375228426e-06, -0.0005115154199302197, -0.006514976732432842, -7.271740287251305e-06, -3.933898824470816e-06, -0.05308027192950249, -0.0006044468027539551, -0.07868349552154541, -0.019270699471235275, -0.05850240960717201, -0.005570246838033199, -0.08500441163778305, -0.00032479254878126085, -0.06519751250743866, -1.7954928874969482, -0.000694153131917119, -1.1558566093444824, -0.31970536708831787, -0.1394375115633011, -0.005413989536464214, -0.1688130646944046, -0.24017967283725739, -0.023002110421657562, -0.0019876263104379177, -0.0005043664714321494, -0.06643164902925491, -0.013924358412623405, -0.000311802898067981, -0.003740696469321847, -2.20121693611145, -0.02054551988840103, -0.001303776167333126, -0.001258058357052505, -0.0014382981462404132, -4.887569048150908e-06, -4.768370445162873e-07, -5.638440416078083e-05, -0.00018285033002030104, -0.0012172202114015818, -0.5344619750976562, -0.00391799584031105, -0.002249807585030794, -0.0003491030656732619, -0.04194685071706772, -0.0008428120636381209, -3.540453326422721e-05, -0.0003933132975362241, -0.000302745756926015, -4.5298504119273275e-05, -0.004778038710355759, -3.218599158572033e-05, -2.145764938177308e-06, -0.0001006075763143599, -0.0003864018653985113, -1.6093124941107817e-05, -7.462222856702283e-05, -0.34339722990989685, -0.0005669178790412843, -0.24234908819198608, -0.00014768941036891192, -9.464769391342998e-05, -0.04633980989456177, -0.002233750419691205, -0.018877021968364716, -0.0016252892091870308, -0.04488173499703407, -0.015829967334866524, -0.0012460333527997136, -0.3878858685493469, -0.6503016352653503, -0.00012361239350866526, -0.0012322221882641315, -1.6927575416048057e-05, -8.010543388081715e-05, -0.0002740246127359569, -0.005889680236577988, -0.03049488179385662, -0.0019121948862448335, -0.2452678084373474, -0.11751490831375122, -0.0017986800521612167, -0.04355541616678238, -0.03386014327406883, -0.0004586121649481356, -0.205636128783226, -0.0019885781221091747, -0.021021656692028046, -0.0003532739356160164, -0.007362139876931906, -0.05083535984158516, -3.0874729418428615e-05, -4.9828242481453344e-05, -0.00044216870446689427, -0.022360464558005333, -0.0003579214389901608, -0.004187506157904863, -1.6927575416048057e-05, -5.960462772236497e-07, -0.0001726001501083374, -0.001616839086636901, -0.011353174224495888, -8.344646857949556e-07, -1.080668330192566, -3.576278118089249e-07, -4.768370445162873e-07, -7.271740287251305e-06, -0.0004021312633994967, -0.2927587628364563], "finish_reason": "stop"}], "metrics": {"energy": 217.12013382434853, "energy_per_token": 0.9824440444540657, "time": 9.47155, "time_per_token": 0.04285769230769231}}
{"outputs": [{"text": "archive_path = os.path.join(target_dir, archive_name)\n    with ZipFile(archive_path, 'w') as archive:\n        for file_name in os.listdir(source_dir):\n            if re.search(r'_processed$', file_name):\n                archive.write(os.path.join(source_dir, file_name))\n\n    return archive_path", "tokens": ["archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " Zip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " archive", ":", "\n", "        ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "            ", "if", " re", ".", "search", "(", "r", "'_", "processed", "$'", ",", " file", "_", "name", "):", "\n", "                ", "archive", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "_", "name", "))", "\n", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "if"], "logprobs": [-1.8950366973876953, -0.10388243198394775, -0.17897087335586548, -0.03024902381002903, -0.11855246126651764, -3.111314072157256e-05, -0.0002747396647464484, -0.011239075101912022, -0.009174097329378128, -0.0008465044084005058, -0.012119464576244354, -3.933898824470816e-06, -1.0251946150674485e-05, -0.000593962671700865, -0.012807612307369709, -3.4570634852570947e-06, -2.706014311115723e-05, -0.000809699238743633, -0.010267768986523151, -0.6663973927497864, -1.85616934299469, -1.004408836364746, -0.0019891730044037104, -0.0012729407753795385, -0.00684523768723011, -0.0001720042055239901, -0.0005799042410217226, -0.0011116046225652099, -0.10725883394479752, -0.02725677564740181, -0.05653487890958786, -9.381330892210826e-05, -0.7165656685829163, -0.030584143474698067, -0.006094561889767647, -0.004105948377400637, -0.048203665763139725, -1.2958674430847168, -0.8374882936477661, -0.6424579620361328, -0.009300360456109047, -0.03137454763054848, -0.001951339072547853, -0.00011014331539627165, -9.536738616588991e-07, -0.0016180293168872595, -0.0017177602276206017, -7.748573807475623e-06, -5.245195097813848e-06, -0.0005090133054181933, -0.005125714931637049, -0.0011475651990622282, -0.600658118724823, -1.5227280855178833, -2.5510462364763953e-05, -0.34050559997558594, -0.33937323093414307, -0.01487509161233902, -0.21292275190353394, -0.02068810537457466, -0.474496066570282, -2.5033637939486653e-05, -0.0030353448819369078, -6.318072337307967e-06, -1.9073304429184645e-05, -0.16262120008468628, -0.013512340374290943, -0.0007009433466009796, -0.7182217240333557, -0.020843161270022392, -0.0027586284559220076, -0.0001864259538706392, -0.028601400554180145, -0.0004798214649781585, -8.702239938429557e-06, -0.0005141366855241358, -0.0001515035255579278, -3.242440288886428e-05, -0.0012625826057046652, -2.5629668016335927e-05, -2.622600959512056e-06, -0.00010168035078095272, -0.00040141629870049655, -2.622600959512056e-06, -4.529942543740617e-06, -0.8489457964897156, -0.003608503146097064, -2.102499485015869, -0.023650797083973885, -0.024482643231749535, -0.013542918488383293, -0.01291282381862402, -0.0005689432728104293, -0.695888340473175, -0.0064593106508255005, -1.2611061334609985], "finish_reason": "stop"}], "metrics": {"energy": 120.09388613510133, "energy_per_token": 1.2509779805739722, "time": 3.800033, "time_per_token": 0.03958367708333333}}
{"outputs": [{"text": "for dirpath, dirnames, filenames in os.walk(source_dir):\n        for filename in filenames:\n            filepath = os.path.join(dirpath, filename)\n            match = re.search(r'(?<=_processed/)(?:([^\\s]+?)(?:_\\d+\\.\\w+)?)?(\\.\\w+)', filename)\n            if match:\n                if match.group(1):\n                    target_dir = os.path.join(dirpath, match.group(1))\n                if not os.path.isdir(target_dir):\n                    os.mkdir(target_dir)\n                arcname = os.path.join(target_dir, match.group(1) + match.group(2) + '.zip')\n                print(f'Creating zip file: {arcname}')\n                with zipfile.ZipFile(arcname, 'w') as zipf:\n                    zipf.write(filepath)\n    return archive_name", "tokens": ["for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "            ", "match", " =", " re", ".", "search", "(", "r", "'(", "?", "<=", "_", "processed", "/", ")(", "?", ":", "([", "^\\", "s", "]+", "?", ")(", "?", ":", "_\\", "d", "+\\", ".", "\\", "w", "+)", "?", ")", "?", "(\\", ".", "\\", "w", "+", ")'", ",", " filename", ")", "\n", "            ", "if", " match", ":", "\n", "                ", "if", " match", ".", "group", "(", "1", "):", "\n", "                ", "    ", "target", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " match", ".", "group", "(", "1", "))", "\n", "                ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "dir", "):", "\n", "                ", "    ", "os", ".", "mk", "dir", "(", "target", "_", "dir", ")", "\n", "                ", "arc", "name", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " match", ".", "group", "(", "1", ")", " +", " match", ".", "group", "(", "2", ")", " +", " '", ".", "zip", "')", "\n", "                ", "print", "(", "f", "'", "C", "reating", " zip", " file", ":", " {", "arc", "name", "}", "')", "\n", "                ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "arc", "name", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "                ", "    ", "zip", "f", ".", "write", "(", "file", "path", ")", "\n", "    ", "return", " archive", "_", "name", "\n", "\n", "def"], "logprobs": [-4.002260208129883, -1.8824396133422852, -0.318022221326828, -0.0015847040340304375, -0.7061818242073059, -0.009763581678271294, -0.00029523781267926097, -0.008133385330438614, -1.9073304429184645e-05, -0.00011240804451517761, -0.0007839705212973058, -0.01026953849941492, -1.2636104656849056e-05, -4.7801782784517854e-05, -0.002075543161481619, -0.007733050733804703, -4.8397800128441304e-05, -0.00010048838157672435, -0.041032277047634125, -0.018345557153224945, -0.015200138092041016, -0.32353928685188293, -0.27895665168762207, -0.0010468247346580029, -0.020063549280166626, -1.1920928244535389e-07, -1.5497195136049413e-06, -0.0006850994541309774, -0.0068284254521131516, -0.0032620809506624937, -2.1129019260406494, -0.2106940746307373, -0.005182522814720869, -0.013311679475009441, -1.5735502529423684e-05, -7.748303323751315e-05, -0.0013303249143064022, -0.002053059171885252, -8.070142939686775e-05, -0.0009658439084887505, -2.062299427052494e-05, -0.0002506657037883997, -0.00194110709708184, -9.047575440490618e-05, -0.009452233090996742, -0.04860413447022438, -2.6233906745910645, -0.08786841481924057, -0.0037807191256433725, -3.194758028257638e-05, -0.24445948004722595, -0.10902920365333557, -0.022347640246152878, -3.132795810699463, -1.1189727783203125, -1.597991943359375, -0.21697556972503662, -0.061076562851667404, -3.9976463317871094, -0.10716234892606735, -3.0547361373901367, -2.2852632999420166, -3.1021780967712402, -2.348912239074707, -2.395674705505371, -0.5811970829963684, -2.9522202014923096, -1.5322033166885376, -0.06767886132001877, -1.1889609098434448, -2.5676472187042236, -0.060787517577409744, -3.2877004146575928, -0.046411506831645966, -1.4199044704437256, -2.6763756275177, -1.364179253578186, -0.062334053218364716, -1.7571828365325928, -1.1497478485107422, -2.88456654548645, -0.04039373993873596, -0.5183863639831543, -0.011716245673596859, -0.7123178839683533, -1.4244974851608276, -0.000346362212439999, -1.124334454536438, -0.04239496961236, -0.026836637407541275, -0.05806763842701912, -0.126235231757164, -0.06266049295663834, -0.4268242418766022, -0.011618684977293015, -0.0017089537577703595, -2.9008469581604004, -0.675459086894989, -0.1078297570347786, -0.0404413677752018, -0.02676723524928093, -0.6744006276130676, -0.6173943877220154, -0.09478207677602768, -0.0002671123365871608, -0.0006872437661513686, -2.690948009490967, -0.12806381285190582, -1.1481332778930664, -0.19271618127822876, -0.2479550689458847, -0.000248043768806383, -0.0009847796754911542, -0.0009517907164990902, -0.014209638349711895, -0.004279028624296188, -1.6246503591537476, -0.00029845553217455745, -0.03194878250360489, -0.38681846857070923, -0.0002090712368953973, -0.0005862186080776155, -0.0024882566649466753, -0.02836446464061737, -0.1433645635843277, -0.008797221817076206, -0.013983255252242088, -1.429337978363037, -2.2694003582000732, -0.05389455333352089, -0.0002711643755901605, -0.00034814971149899065, -0.0005793085438199341, -1.3320037126541138, -0.00358320283703506, -5.125868119648658e-05, -0.028198400512337685, -9.298280929215252e-06, -5.3881147323409095e-05, -0.010840571485459805, -0.0055106161162257195, -8.11782301752828e-05, -0.0018605556106194854, -0.02295353077352047, -0.0001711698860162869, -1.3330328464508057, -1.3232143828645349e-05, -0.00022456508304458112, -0.011366846039891243, -2.6225699912174605e-05, -2.9205850296420977e-05, -0.0101409200578928, -0.002029741881415248, -0.029881281778216362, -4.295623779296875, -1.052263617515564, -0.003449563169851899, -0.6281144618988037, -5.245195097813848e-06, -0.00012039413559250534, -6.12716976320371e-05, -0.12696385383605957, -0.0026466362178325653, -0.184577077627182, -2.6702524337451905e-05, -1.9073304429184645e-05, -0.002244336297735572, -1.0979243516921997, -0.0024356956128031015, -0.005563727114349604, -0.036280371248722076, -1.308732032775879, -0.27748337388038635, -0.16959966719150543, -0.3457120656967163, -0.00016509123088326305, -0.0015141224721446633, -0.0008255410939455032, -0.18910253047943115, -0.5717135071754456, -0.29015839099884033, -1.3059008121490479, -0.006689653266221285, -0.1762285679578781, -0.0046844263561069965, -0.014811314642429352, -0.014158395119011402, -1.9636645317077637, -0.16180242598056793, -0.6256867051124573, -0.4510550796985626, -2.2119390964508057, -0.003256971715018153, -3.089082717895508, -0.5879338383674622, -0.4812508225440979, -0.01730814203619957, -0.16342221200466156, -2.634490556374658e-05, -0.01828586496412754, -0.053145043551921844, -0.004747665952891111, -0.008070241659879684, -0.39322414994239807, -0.12380480766296387, -0.0001284993631998077, -3.576214658096433e-05, -0.004665086045861244, -0.00021884430316276848, -7.92710343375802e-05, -0.00248873233795166, -0.049062445759773254, -4.2437604861333966e-05, -0.0006883158930577338, -0.05434378609061241, -0.02878442406654358, -0.36606669425964355, -0.0001879753835964948, -0.4431982934474945, -1.6394249200820923, -0.0010374169796705246, -0.002064598724246025, -0.0003492222458589822, -0.0009363081189803779, -0.238855242729187, -0.006243841722607613, -2.634490556374658e-05, -0.0028646644204854965, -0.002092554699629545, -0.02510119043290615, -2.6464111215318553e-05, -0.6528370976448059, -0.01364805269986391, -0.4881049692630768, -0.31342801451683044, -2.2482056617736816, -0.001794158248230815, -0.013172862119972706, -0.32719123363494873, -0.012097440659999847, -1.069759726524353], "finish_reason": "stop"}], "metrics": {"energy": 236.50247314643877, "energy_per_token": 0.9813380628482937, "time": 10.303239, "time_per_token": 0.04275202904564315}}
{"outputs": [{"text": "# Check if source and target directories are valid.\n    if not os.path.isdir(source_dir):\n        raise FileNotFoundError(f\"{source_dir} is not a valid directory.\")\n    if not os.path.isdir(target_dir):\n        raise FileNotFoundError(f\"{target_dir} is not a valid directory.\")\n\n    # Create the archive in the target directory.\n    archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w', compression=zipfile.ZIP_DEFLATED) as archive:\n        for dirpath, dirnames, filenames in os.walk(source_dir):\n            for filename in filenames:\n                if filename.endswith('_processed.csv'):\n                    full_path = os.path.join(dirpath, filename)\n                    archive.write(full_path, os.path.relpath(full_path, start=source_dir))\n\n    return archive_path", "tokens": ["#", " Check", " if", " source", " and", " target", " directories", " are", " valid", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "source", "_", "dir", "}", " is", " not", " a", " valid", " directory", ".", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "target", "_", "dir", "}", " is", " not", " a", " valid", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " archive", " in", " the", " target", " directory", ".", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "'", ",", " compression", "=", "zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " archive", ":", "\n", "        ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "            ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "                ", "if", " filename", ".", "end", "sw", "ith", "('", "_", "processed", ".", "csv", "')", ":", "\n", "                ", "    ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "                ", "    ", "archive", ".", "write", "(", "full", "_", "path", ",", " os", ".", "path", ".", "rel", "path", "(", "full", "_", "path", ",", " start", "=", "source", "_", "dir", "))", "\n", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "#"], "logprobs": [-1.5353851318359375, -1.8450106382369995, -0.8298172354698181, -1.1315813064575195, -1.511061429977417, -0.012827384285628796, -0.05207138508558273, -0.7126632928848267, -0.6665503978729248, -2.472738027572632, -0.03600752726197243, -0.004019278567284346, -0.0991709753870964, -0.11029233783483505, -0.08492809534072876, -2.1219027985353023e-05, -0.00027366707217879593, -0.0009494088008068502, -0.36585620045661926, -0.0013242532731965184, -0.00015484087634831667, -0.012997196987271309, -2.52720492426306e-05, -3.933898824470816e-06, -0.1777460277080536, -0.0041985465213656425, -0.0006783091812394559, -0.1432534158229828, -1.7165526151657104, -0.0052758511155843735, -4.649054244509898e-05, -0.14670754969120026, -0.21675454080104828, -0.36709851026535034, -1.1770970821380615, -0.006799299269914627, -0.00015579440514557064, -0.00019977481861133128, -0.04704780504107475, -0.11060179024934769, -0.014636171981692314, -0.027175918221473694, -0.28912684321403503, -0.05521750450134277, -0.21034552156925201, -0.0215324517339468, -0.00014327930693980306, -0.0031054625287652016, -0.15402424335479736, -0.08231522142887115, -0.027501631528139114, -0.0025840960443019867, -5.864924969500862e-05, -0.001122083282098174, -0.0001370812824461609, -0.0553433895111084, -0.0021205099765211344, -3.302042750874534e-05, -0.0017396567855030298, -3.576278118089249e-07, -2.0265558760002023e-06, -0.0043098898604512215, -0.0005824061809107661, -0.0002795067266561091, -0.2868267297744751, -0.005608655512332916, -0.002045445377007127, -2.3841830625315197e-06, -0.00044967554276809096, -0.001839375589042902, -0.000545472139492631, -0.0014687713701277971, -0.01297613326460123, -1.537788011773955e-05, -9.190614218823612e-05, -0.0004368066438473761, -0.0005659647285938263, -0.0004963834653608501, -0.000849482137709856, -0.00027414379292167723, -0.0005122303264215589, -0.0017233534017577767, -0.0007636015070602298, -3.290122185717337e-05, -0.00017152745567727834, -0.22969646751880646, -0.0009860896971076727, -0.13597114384174347, -1.181040644645691, -1.6138269901275635, -0.30456113815307617, -2.8928046226501465, -0.07360401749610901, -0.05330068618059158, -0.011495307087898254, -0.26529815793037415, -0.004425494000315666, -0.0015797051601111889, -0.33493444323539734, -0.0741230770945549, -0.08035697042942047, -0.0069601936265826225, -0.026997242122888565, -2.0265558760002023e-06, -6.592056161025539e-05, -0.00422976678237319, -0.0018314032349735498, -8.737658936297521e-05, -0.009054670110344887, -5.125986263010418e-06, -1.4305104514278355e-06, -0.00026973424246534705, -0.011478926055133343, -4.172316494077677e-06, -1.8715683836489916e-05, -0.0006310140597634017, -0.004142395220696926, -0.046759799122810364, -0.4067424535751343, -0.4040486812591553, -5.9126061387360096e-05, -2.5510462364763953e-05, -0.003554100636392832, -0.00038628268521279097, -0.00010668662434909493, -0.0006381620769388974, -0.0062772491946816444, -5.4238757002167404e-05, -0.0005409446312114596, -0.00028165188268758357, -0.11637283116579056, -0.01895422674715519, -1.0667563676834106, -0.00013672371278516948, -0.8158517479896545, -0.005751133430749178, -0.003925476688891649, -7.629365427419543e-06, -8.106198947643861e-06, -0.0008989107445813715, -0.014431622810661793, -0.0002821285743266344, -0.00505597610026598, -0.0002213471452705562, -0.0012688927818089724, -0.040312107652425766, -0.00015758226800244302, -0.5831210017204285, -0.08257550001144409, -0.002615604316815734, -0.010886915028095245, -0.09752460569143295, -0.9346754550933838, -0.35945919156074524, -0.00030286493711173534, -0.8354942202568054, -0.0007645544828847051, -4.756337511935271e-05, -0.0012807984603568912, -1.1444026313256472e-05, -1.7046782886609435e-05, -0.00022480344341602176, -0.0019996424671262503, -2.7418097943154862e-06, -2.312633478140924e-05, -0.0007379907765425742, -0.0023302086628973484, -2.861018856492592e-06, -2.3841830625315197e-06, -0.030721604824066162, -0.006880282424390316, -0.0028400584124028683, -0.393741637468338, -0.23337101936340332, -0.00019095504831057042, -0.008284962736070156, 0.0, -1.311301275563892e-06, -0.0004704084130935371, -0.005219760350883007, -0.0014609150821343064, -0.6218571066856384, -0.27443549036979675, -0.009955396875739098, -0.0423584021627903, -1.2874520507466514e-05, 0.0, -0.12939804792404175, -0.19819912314414978, -0.0038191964849829674, -0.530369222164154, -2.364203929901123, -0.007920642383396626, -0.0696214959025383, -0.017638958990573883, -0.0009096298599615693, -0.0004189328756183386, -2.5159335136413574, -0.04292008653283119, -0.05564607307314873, -0.0018522264435887337, -0.0007663412252441049, -1.4305104514278355e-06, -5.602820692729438e-06, -0.000445385929197073, -0.0023472157772630453, -4.6967357775429264e-05, -0.003185200970619917, -1.0132738680113107e-05, -0.0001902399235405028, -0.000705589191056788, -7.92710343375802e-05, -0.002916846191510558, -0.0029627259355038404, -0.00018845213344320655, -0.0654023215174675, -0.0023742124903947115, -0.00043883229955099523, -2.706014311115723e-05, -0.004213503561913967, -1.537788011773955e-05, -7.152555099310121e-07, -0.34436357021331787, -0.6615138053894043, -4.565611743601039e-05, -0.00020180096908006817, -0.0010558750946074724, -0.06425466388463974, -2.3364747903542593e-05, -8.189342770492658e-05, -0.003864678554236889, -7.021180499577895e-05, -7.152555099310121e-07, -0.0017692878609523177, -1.7787197828292847, -0.002744243713095784, -0.1452871710062027, -8.702239938429557e-06, -2.0265558760002023e-06, -0.015557356178760529, -0.008177608251571655, -0.23996420204639435, -0.009892957285046577, -0.2041589766740799, -0.011610908433794975, -0.007641016039997339, -0.0005519058904610574, -0.5023000836372375, -0.005011497065424919, -2.2522518634796143], "finish_reason": "stop"}], "metrics": {"energy": 269.30588323783877, "energy_per_token": 1.077223532951355, "time": 10.721644, "time_per_token": 0.042886575999999996}}
{"outputs": [{"text": "# Ensure that source_dir and target_dir are absolute paths and that they exist\n    if not os.path.isabs(source_dir):\n        raise ValueError(f\"source_dir must be an absolute path: {source_dir}\")\n    if not os.path.isabs(target_dir):\n        raise ValueError(f\"target_dir must be an absolute path: {target_dir}\")\n    if not os.path.exists(source_dir):\n        raise ValueError(f\"source_dir does not exist: {source_dir}\")\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    # Find all processed files and add them to the archive\n    files = []\n    for root, dirnames, filenames in os.walk(source_dir):\n        for filename in filenames:\n            if re.match(r\".*\\_(processed|done|archive).*\", filename):\n                full_path = os.path.join(root, filename)\n                files.append(full_path)\n\n    if", "tokens": ["#", " Ensure", " that", " source", "_", "dir", " and", " target", "_", "dir", " are", " absolute", " paths", " and", " that", " they", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "abs", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "source", "_", "dir", " must", " be", " an", " absolute", " path", ":", " {", "source", "_", "dir", "}\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "abs", "(", "target", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "target", "_", "dir", " must", " be", " an", " absolute", " path", ":", " {", "target", "_", "dir", "}\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "source", "_", "dir", " does", " not", " exist", ":", " {", "source", "_", "dir", "}\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Find", " all", " processed", " files", " and", " add", " them", " to", " the", " archive", "\n", "    ", "files", " =", " []", "\n", "    ", "for", " root", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "if", " re", ".", "match", "(", "r", "\"", ".", "*\\", "_(", "processed", "|", "done", "|", "archive", ")", ".", "*", "\"", ",", " filename", "):", "\n", "                ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " filename", ")", "\n", "                ", "files", ".", "append", "(", "full", "_", "path", ")", "\n", "\n", "    ", "if"], "logprobs": [-1.5353851318359375, -4.660282135009766, -1.3494330644607544, -1.3436551094055176, -0.5680720210075378, -0.0007618147064931691, -0.2806185483932495, -0.004319741856306791, -0.0018356868531554937, -0.0002734287118073553, -0.14535097777843475, -1.0344082117080688, -0.018140127882361412, -3.0502593517303467, -2.062946319580078, -1.690063714981079, -0.0691758468747139, -0.34914064407348633, -0.0028855851851403713, -0.7624472975730896, -0.105799600481987, -0.11932171881198883, -2.8132995794294402e-05, -4.9470632802695036e-05, -0.00521442387253046, -0.03243325278162956, -0.15263324975967407, -5.1616290875244886e-05, -0.00691532576456666, -1.1324817933200393e-05, -1.1920922133867862e-06, -0.46868783235549927, -0.008212251588702202, -0.0003763920976780355, -1.059814214706421, -0.058265142142772675, -1.2874520507466514e-05, -0.09936796873807907, -0.9033020734786987, -0.08545488119125366, -0.9921762943267822, -0.005801268853247166, -0.0006394725642167032, -0.3681013584136963, -0.0004076126788277179, -0.04609280824661255, -0.0007345362100750208, -0.000709401210770011, -0.38017743825912476, -0.07942897826433182, -0.0035149003379046917, -3.45700973412022e-05, -7.390703103737906e-05, -0.12725821137428284, -3.242440288886428e-05, -0.0009589364635758102, -0.12907162308692932, -0.03766550496220589, -0.00791508425027132, -0.0021004059817641973, -7.426462980220094e-05, -6.568216485902667e-05, -0.0013578252401202917, -0.12168579548597336, -0.19692721962928772, -8.821448318485636e-06, -0.0006264869589358568, -1.0728830375228426e-06, -2.145764938177308e-06, -0.0006238659843802452, -8.368142152903602e-05, -9.476689592702314e-05, -0.0004530118894763291, -5.686121585313231e-05, -1.2040065485052764e-05, -6.568216485902667e-05, -0.0003694805200211704, -0.0001714082609396428, -0.005082306452095509, -0.00023993951617740095, -9.7508447652217e-05, -0.0006123098428361118, -7.080780778778717e-05, -0.0005530973430722952, -0.00035494225448928773, -0.0002330270071979612, -0.0003033416287507862, -0.00029702542815357447, -0.025720633566379547, -4.887569048150908e-06, -0.00010072677832795307, -0.0005987281911075115, -4.994744449504651e-05, -4.970903682988137e-05, -0.215207040309906, -0.08820463716983795, -0.03240601718425751, -0.01413512323051691, -0.0005787128466181457, -8.093983342405409e-05, -0.016574779525399208, -0.10892871767282486, -4.482168878894299e-05, -0.01007896475493908, -1.680836794548668e-05, -3.6954811548639555e-06, -0.030787380412220955, -0.0008488865569233894, -0.00020585325546562672, -0.008482498116791248, -1.2941081523895264, -3.504691630951129e-05, -0.0001234931987710297, -0.0019936938770115376, -0.0013846105430275202, -0.13531549274921417, -0.0035383019130676985, -0.0002051381452474743, -0.23221682012081146, -5.6622808187967166e-05, -0.0014006814453750849, -0.0032721806783229113, -0.00041345154750160873, -0.0011147005716338754, -1.549708758830093e-05, -2.6940935640595853e-05, -0.0023091575130820274, -3.766942609217949e-05, -5.9960475482512265e-05, -0.038973402231931686, -0.014222684316337109, -0.01634259894490242, -0.001674322527833283, -6.01988795096986e-05, -0.0001081169830285944, -0.00036173476837575436, -0.05468537658452988, -4.172238186583854e-05, -0.0012463905150070786, -2.7418097943154862e-06, -8.344646857949556e-07, -0.0031811606604605913, -0.0003698380314745009, -0.00012194366718176752, -1.3614798784255981, -0.00012218205665703863, -0.049376342445611954, -4.7444173105759546e-05, -0.00047636605449952185, -8.380061626667157e-05, -0.0016724183224141598, -4.0531076592742465e-06, -5.245195097813848e-06, -0.2046714574098587, -0.03129921853542328, -0.18374325335025787, -0.0010885033989325166, -0.2270161658525467, -2.0458695888519287, -0.29314306378364563, -0.5259105563163757, -0.015592684037983418, -2.2075958251953125, -3.903038501739502, -0.06212155520915985, -0.004523758310824633, -0.3377281427383423, -0.17667503654956818, -0.06018112227320671, -0.0008808070560917258, -2.138777256011963, -1.0757577419281006, -0.3696165382862091, -0.010712851770222187, -0.007881258614361286, -0.07402046024799347, -0.7951096296310425, -0.0010369406081736088, -3.0317485332489014, -0.13584253191947937, -2.5033637939486653e-05, -0.002893430180847645, -9.536697689327411e-06, -3.814624506048858e-05, -0.0001674750237725675, -0.0020616245456039906, -9.536738616588991e-07, -2.4676019165781327e-05, -0.0004146431456319988, -0.0018217648612335324, -3.6954811548639555e-06, -1.2755313036905136e-05, -0.0415533110499382, -0.003931413404643536, -0.00033885458833537996, -0.10862880200147629, -0.0987803190946579, -0.00031263710116036236, -0.01019815169274807, -1.1920928244535389e-07, -4.0531076592742465e-06, -6.0437283536884934e-05, -0.0015939876902848482, -0.00031799983116798103, -0.23806650936603546, -1.7241575717926025, -1.549708758830093e-05, -1.828831434249878, -0.11894552409648895, -0.032603923231363297, -1.4210941791534424, -0.4586196541786194, -1.7135432958602905, -1.5626862049102783, -0.06123119965195656, -1.4250080585479736, -3.1027848720550537, -1.2134345769882202, -4.013513565063477, -1.6412696838378906, -0.04073017090559006, -0.2498612105846405, -0.19496434926986694, -0.0002522150462027639, -0.011310035362839699, -0.6679608821868896, -0.01832624524831772, -0.0003575639275368303, -1.8570399284362793, -0.05173331871628761, -0.05924050137400627, -0.0006437613046728075, -0.0026538888923823833, -4.291525328881107e-06, -9.179073458653875e-06, -5.531158240046352e-05, -0.0034557406324893236, -2.0146166207268834e-05, -0.00608010683208704, -0.00030357998912222683, -0.0009257083875127137, -7.497983460780233e-05, -0.004337427206337452, -0.0009758477681316435, -0.2197486311197281, -0.0004880429187323898, -0.00030489088385365903, -0.026494108140468597, -0.020438188686966896, -1.8596476365928538e-05, -5.960462772236497e-07, -0.0011139861308038235, -0.0028033265843987465, -0.15249264240264893, -0.002580172149464488, -1.9085209369659424], "finish_reason": "length"}], "metrics": {"energy": 268.65381229114524, "energy_per_token": 1.049428954262286, "time": 10.93839, "time_per_token": 0.0427280859375}}
{"outputs": [{"text": "# Check if the source directory exists\n    if not os.path.isdir(source_dir):\n        raise ValueError(f\"Source directory '{source_dir}' not found\")\n\n    # Create the target directory if it doesn't exist\n    if not os.path.isdir(target_dir):\n        os.makedirs(target_dir, exist_ok=True)\n\n    # Create the archive file name\n    archive_file_name = os.path.join(target_dir, archive_name)\n\n    # Loop through all processed files in the source directory\n    for root, dirs, files in os.walk(source_dir):\n        for f in files:\n            # Get the file's absolute path\n            fpath = os.path.join(root, f)\n            # Skip non-processed files\n            if not re.match(r\".*_processed.*\", f):\n                continue\n            # Zip the file into the archive\n            with zipfile.ZipFile(archive_file_name, 'a') as zf:\n                zf.write(fpath,", "tokens": ["#", " Check", " if", " the", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "dir", "}'", " not", " found", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Create", " the", " archive", " file", " name", "\n", "    ", "archive", "_", "file", "_", "name", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "#", " Loop", " through", " all", " processed", " files", " in", " the", " source", " directory", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " f", " in", " files", ":", "\n", "            ", "#", " Get", " the", " file", "'", "s", " absolute", " path", "\n", "            ", "f", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " f", ")", "\n", "            ", "#", " Skip", " non", "-", "processed", " files", "\n", "            ", "if", " not", " re", ".", "match", "(", "r", "\"", ".", "*", "_", "processed", ".", "*", "\"", ",", " f", "):", "\n", "                ", "continue", "\n", "            ", "#", " Zip", " the", " file", " into", " the", " archive", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "file", "_", "name", ",", " '", "a", "')", " as", " z", "f", ":", "\n", "                ", "z", "f", ".", "write", "(", "f", "path", ","], "logprobs": [-1.5353851318359375, -1.8450106382369995, -0.8298172354698181, -0.8711290955543518, -0.6662217378616333, -0.5265960097312927, -0.13885198533535004, -0.27460741996765137, -0.001261630211956799, -0.021301301196217537, -0.02184915915131569, -0.0028161650989204645, -3.814689989667386e-06, -4.4225667807040736e-05, -0.0012036467669531703, -1.1241958141326904, -9.107174992095679e-05, -0.00011777184408856556, -0.0010919567430391908, -2.288792165927589e-05, -2.7418097943154862e-06, -0.0010034770239144564, -0.0016763457097113132, -0.0005639393348246813, -0.2800598740577698, -1.264519214630127, -1.1801649634435307e-05, -0.06656639277935028, -0.07078821957111359, -0.22562859952449799, -0.7379817366600037, -0.018497467041015625, -0.6886262893676758, -0.00013517419574782252, -0.0006469779182225466, -3.8265450712060556e-05, -8.630380034446716e-05, -0.0007027302053757012, -2.326677083969116, -0.011081697419285774, -1.5496525764465332, -5.340433563105762e-05, -0.0013822296168655157, -0.12864111363887787, -0.0010842165211215615, -0.03286408260464668, -1.5876368284225464, -0.7088515758514404, -0.446698397397995, -0.014117492362856865, -0.11721554398536682, -0.02261258102953434, -0.2070215493440628, -0.0004245333548169583, -7.748573807475623e-06, -0.05931476131081581, -0.02678685076534748, -0.0001387499796692282, -0.15066516399383545, -0.0021106365602463484, -0.00034528967808000743, -1.9073304429184645e-05, -1.883488948806189e-05, -0.00010775939153973013, -0.266728937625885, -1.8715683836489916e-05, -3.1709168979432434e-05, -0.0008391196606680751, -5.960462772236497e-07, -5.960462772236497e-07, -0.0011276798322796822, -0.00041059168870560825, -0.0002548369811847806, -0.018873512744903564, -0.0003768687602132559, -0.0722045972943306, -1.07287787614041e-05, -0.0005292683490552008, -1.5139465176616795e-05, -0.0004742213059216738, -4.410734163684538e-06, -1.0728830375228426e-06, -1.9984450340270996, -0.05323614925146103, 0.0, -4.458328112377785e-05, -0.001134824356995523, -0.004102386999875307, -0.001259963377378881, -0.004661170300096273, -0.02373054437339306, -0.0031130684074014425, -0.1194535344839096, -1.377761960029602, -0.8666425347328186, -0.10918974876403809, -0.6110959649085999, -0.8715716004371643, -0.44204846024513245, -0.0006292270263656974, -0.10505656898021698, -0.019591398537158966, -1.0876071453094482, -1.9680894613265991, -0.12236288189888, -0.006805929820984602, -0.12188231199979782, -2.264974000354414e-06, -6.437094270950183e-05, -0.0024968183133751154, -0.011733329854905605, -0.00016807096835691482, -0.017581917345523834, -6.079655122448457e-06, -1.5497195136049413e-06, -0.0002615109842736274, -0.025853537023067474, -2.861018856492592e-06, -2.539125671319198e-05, -0.0005610798834823072, -0.00224576354958117, -0.026073765009641647, -0.00026603974401950836, -0.030922384932637215, -3.851050853729248, -0.23592609167099, -0.6230734586715698, -2.0667617321014404, -0.022041352465748787, -0.21321946382522583, -0.031425029039382935, -0.02008703351020813, -0.005568350199609995, -0.13491809368133545, -0.000806602300144732, -0.4508092701435089, -2.2698538303375244, -0.0026788560207933187, -0.5212949514389038, -0.0001641377166379243, -0.0001429217227268964, -0.08491834998130798, -0.0009944260818883777, -0.0036345156840980053, -9.179073458653875e-06, -6.747018051100895e-05, -0.0005583396414294839, -0.0018887552432715893, -7.867782187531702e-06, -3.6954811548639555e-06, -0.08267614990472794, -0.002570303389802575, -0.013017553836107254, -0.31213390827178955, -2.077984094619751, -0.12236109375953674, -0.01935652643442154, -0.0004463391669560224, -0.0041250623762607574, -0.007974334992468357, -1.543871521949768, -2.635471820831299, -0.03396212309598923, -1.222474217414856, -3.0831780433654785, -1.3708974620385561e-05, -2.3658745288848877, -0.008197234943509102, -0.13445965945720673, -0.00020382710499688983, -2.1256189346313477, -2.2173168659210205, -0.0043446677736938, -0.002751970896497369, -2.3841855067985307e-07, -1.7046782886609435e-05, -0.0006609162664972246, -0.0846736878156662, -6.222531374078244e-05, -0.005647299811244011, -0.0002517383254598826, -0.00067223358200863, -7.462222856702283e-05, -0.0022254243958741426, -1.2757925987243652, -0.07171538472175598, -2.999420404434204, -2.2141880989074707, -0.018591783940792084, -0.19892416894435883, -0.007354566361755133, -0.03677791729569435, -0.0004407388041727245, -0.01122210081666708, -0.1552046835422516, -1.5003612041473389, -1.4662635294371285e-05, -1.6466858386993408, -0.1126285120844841, -0.04118398204445839, -1.684823751449585, -0.2920472323894501, -0.4484174847602844, -0.05431533232331276, -0.014166975393891335, -1.450683355331421, -0.24917106330394745, -0.018679073080420494, -0.00019226610311307013, -0.014816365204751492, -0.6786969900131226, -0.0027033472433686256, -0.00016878610767889768, -0.04571319743990898, -0.002721655648201704, -0.10213123261928558, -0.020863009616732597, -2.268294334411621, -0.048552241176366806, -0.21908000111579895, -1.6859116554260254, -0.011487646959722042, -0.01052637305110693, -0.0980473980307579, -0.0005365362740121782, -0.6263030767440796, -0.11938551068305969, -7.366862701019272e-05, -1.966933996300213e-05, -0.011300251819193363, -0.00042441420373506844, -0.0002294515579706058, -0.0014104428701102734, -0.014177905395627022, -4.7444173105759546e-05, -0.0004609952447935939, -0.0002337421028641984, -7.879423355916515e-05, -0.00012396997772157192, -0.1553587019443512, -0.020075233653187752, -0.26999807357788086, -5.2927523938706145e-05, -1.876617670059204, -0.08960801362991333, -0.00027891082572750747, -0.004383360501378775, -0.00043871314846910536, -0.031324636191129684, -0.0022149572614580393, -0.00011550712952157483, -0.0005641775787808001, -0.00011038171214750037, -0.00504506379365921, -0.0013247294118627906, -0.7286753058433533], "finish_reason": "length"}], "metrics": {"energy": 250.90605898189534, "energy_per_token": 0.9801017928980287, "time": 10.92923, "time_per_token": 0.0426923046875}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise ValueError(f'source_dir: {source_dir} doesn\\'t exists.')\n    if not os.path.isdir(source_dir):\n        raise ValueError(f'source_dir: {source_dir} is not a directory')\n    if os.path.isfile(target_dir):\n        raise ValueError(f'target_dir: {target_dir} is not a directory')\n    archive = os.path.join(target_dir, archive_name)\n    processed_files = []\n    for root, dirs, files in os.walk(source_dir):\n        for file in files:\n            if file.endswith('_processed'):\n                processed_files.append(os.path.join(root, file))\n    if not processed_files:\n        return f\"{target_dir}{archive_name}\"\n    with zipfile.ZipFile(archive, 'w') as archive_file:\n        for file in processed_files:\n            archive_file.write(file)\n    return archive\n", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "source", "_", "dir", ":", " {", "source", "_", "dir", "}", " doesn", "\\", "'", "t", " exists", ".", "')", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "source", "_", "dir", ":", " {", "source", "_", "dir", "}", " is", " not", " a", " directory", "')", "\n", "    ", "if", " os", ".", "path", ".", "is", "file", "(", "target", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "target", "_", "dir", ":", " {", "target", "_", "dir", "}", " is", " not", " a", " directory", "')", "\n", "    ", "archive", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "processed", "_", "files", " =", " []", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " file", ".", "end", "sw", "ith", "('", "_", "processed", "')", ":", "\n", "                ", "processed", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", "))", "\n", "    ", "if", " not", " processed", "_", "files", ":", "\n", "        ", "return", " f", "\"", "{", "target", "_", "dir", "}{", "archive", "_", "name", "}\"", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", ",", " '", "w", "')", " as", " archive", "_", "file", ":", "\n", "        ", "for", " file", " in", " processed", "_", "files", ":", "\n", "            ", "archive", "_", "file", ".", "write", "(", "file", ")", "\n", "    ", "return", " archive", "\n"], "logprobs": [-2.351156234741211, -0.23831301927566528, -0.15362714231014252, -3.71926071238704e-05, -0.0027518521528691053, -0.0019839382730424404, -0.7778077125549316, -0.002526545897126198, -0.3616466820240021, -2.539125671319198e-05, -5.8412379075889476e-06, -0.06670846790075302, -0.022195616737008095, -0.001292585046030581, -0.41126567125320435, -1.7376891374588013, -4.8874615458771586e-05, -0.2529495656490326, -0.21083301305770874, -0.9292014837265015, -2.296389102935791, -0.25317317247390747, -0.003147174371406436, -2.0155999660491943, -0.23332929611206055, -0.002854917198419571, -4.7801782784517854e-05, -0.00013612773909699172, -0.033497415482997894, -3.3848912715911865, -0.07286658883094788, -0.001490554423071444, -0.0042847259901463985, -1.8152331113815308, -1.9305533170700073, -0.08992262929677963, -0.002596580656245351, -0.3445735573768616, -0.15128777921199799, -0.07344884425401688, -0.013218274340033531, -0.00012337400403339416, -0.0012868703342974186, -0.0004468158003874123, -0.6535454988479614, -0.008232823573052883, -0.00038389943074434996, -0.07005026936531067, -1.168244216387393e-05, -6.556489552167477e-06, -0.0033568956423550844, -0.0010562323732301593, -0.000645429186988622, -0.008836451917886734, -0.1016736775636673, -1.5020257706055418e-05, -0.013098740950226784, -0.0056062848307192326, -0.047555483877658844, -0.028201529756188393, -0.003208134789019823, -0.00037079135654494166, -0.027716394513845444, -0.005249525420367718, -0.000454799213912338, -6.09140915912576e-05, -0.0002138386043952778, -0.0014787701657041907, -0.3396793305873871, -0.04026149585843086, -0.17253977060317993, -0.11943840980529785, -2.5059378147125244, -0.00015937011630740017, -0.4391452670097351, -0.1015530601143837, -2.449061632156372, -0.00010084597306558862, -0.0930289700627327, -0.00689283199608326, -1.459350347518921, -0.6679684519767761, -0.001086598145775497, -1.2469260692596436, -7.390948667307384e-06, -2.622600959512056e-06, -0.06162312626838684, -0.006826294120401144, -0.0007179781678132713, -0.04090915620326996, -0.0447741337120533, -3.111314072157256e-05, -0.016629651188850403, -0.008336862549185753, -0.019867587834596634, -0.04270182549953461, -0.011902031488716602, -0.0011507801245898008, -0.019983159378170967, -0.004449348896741867, -0.017093123868107796, -1.2874520507466514e-05, -9.417090768693015e-05, -0.00146793806925416, -0.12401743978261948, -1.3701908588409424, -0.049049392342567444, -0.05991315096616745, -0.11410409957170486, -0.000460876093711704, -0.42824313044548035, -2.999943494796753, -2.601445436477661, -1.416186809539795, -3.981510963058099e-05, -0.005687009077519178, -0.00462047103792429, -0.031237173825502396, -0.000892121868673712, -0.03034871630370617, -1.823885577323381e-05, -5.483612312673358e-06, -0.0011731653939932585, -0.033429279923439026, -2.4199192921514623e-05, -1.847726889536716e-05, -0.0029046034906059504, -0.011667937971651554, -0.3249101936817169, -2.6796488761901855, -0.07123292237520218, -0.3091934621334076, -0.08524581789970398, -0.7300329804420471, -0.015749940648674965, -0.142025887966156, -0.30076587200164795, -0.967800498008728, -0.005830305628478527, -0.40024349093437195, -0.0004981707315891981, -0.0004781533498317003, -0.0343724861741066, -0.001988935051485896, -0.006251778919249773, -1.9430925021879375e-05, -5.61460001335945e-05, -0.0010059778578579426, -0.0019462230848148465, -4.410734163684538e-06, -9.417489309271332e-06, -0.1048010066151619, -0.006860629189759493, -0.001708358759060502, -0.10185974091291428, -0.5180631875991821, -0.14459797739982605, -0.010730424895882607, -0.00031025364296510816, -0.00199333718046546, -0.0009868042543530464, -0.35656824707984924, -0.49393919110298157, -0.022427374497056007, -0.07625175267457962, -8.844937838148326e-05, 0.0, -0.06005663052201271, -0.19814905524253845, -0.006245263386517763, -0.4972715377807617, -0.022091610357165337, -0.006885491777211428, -0.0007556205382570624, -0.2245236188173294, -0.0009968079393729568, -0.018075622618198395, -0.0021489402279257774, -0.00080195686314255, -0.015328343026340008, -0.09537337720394135, -4.51792984677013e-05, -0.00020549570035655051, -0.0002699726028367877, -0.009277920238673687, -0.0003133521240670234, -0.014620312489569187, -0.001301871263422072, -0.004295052960515022, -0.015639159828424454, -0.0023262840695679188, -0.20390886068344116, -0.4320158362388611, -0.554686427116394, -0.025392016395926476, -1.7165990357170813e-05, -2.264974000354414e-06, -0.0007871866691857576, -0.0050683110021054745, -0.0006342306733131409, -1.7112270593643188, -2.850520133972168, -2.758477210998535, -1.0391719341278076, -0.9891541004180908, -0.0005849081207998097, -6.031808152329177e-05, -0.800161600112915, -0.06329593807458878, -0.11620207875967026, -0.00012015574611723423, -0.024706196039915085, -0.02018973045051098, -0.12345980107784271, -0.7181892991065979, -0.14321808516979218, -0.00016234986833296716, -4.970903682988137e-05, -0.0032428319100290537, -0.0003083468764089048, -0.00011407678539399058, -0.0014213945250958204, -0.016005488112568855, -0.0016986002447083592, -0.10451605916023254, -0.021434443071484566, -0.29142820835113525, -0.00011896379146492109, -2.224475860595703, -0.20873571932315826, -0.3774445652961731, -0.0005647733341902494, -0.003676443127915263, -0.0012204349040985107, -0.02291974239051342, -0.3407834768295288, -0.07037076354026794, -0.003562771948054433, -3.576272320060525e-06, -7.152555099310121e-07, -0.00011955977242905647, -0.0011242267210036516, -0.000967153930105269, -0.12949387729167938, -0.0001003691868390888, -0.03420211747288704, -0.00018737945356406271, -0.0006551980040967464, -0.00029571453342214227, -0.027037620544433594, -0.42665526270866394, -0.0039175208657979965, -0.4421629309654236, -0.3021875321865082, -1.091262936592102, -0.31373006105422974], "finish_reason": "length"}], "metrics": {"energy": 253.58344300174707, "energy_per_token": 0.9905603242255745, "time": 10.939757, "time_per_token": 0.04273342578125}}
{"outputs": [{"text": "processed_files = [\n        os.path.join(source_dir, f)\n        for f in os.listdir(source_dir)\n        if f.endswith('_processed')\n    ]\n    archive_file_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_file_path, 'w') as zip_file:\n        for f in processed_files:\n            zip_file.write(f)\n    return archive_file_path", "tokens": ["processed", "_", "files", " =", " [", "\n", "        ", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " f", ")", "\n", "        ", "for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", "\n", "        ", "if", " f", ".", "end", "sw", "ith", "('", "_", "processed", "')", "\n", "    ", "]", "\n", "    ", "archive", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "file", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " f", " in", " processed", "_", "files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "f", ")", "\n", "    ", "return", " archive", "_", "file", "_", "path", "\n", "\n", "def"], "logprobs": [-3.0417556762695312, -0.014570617116987705, -0.32547295093536377, -0.11805373430252075, -1.470423698425293, -1.451061487197876, -0.01058228500187397, -0.8515003323554993, -0.00010918975021922961, -0.00020883286197204143, -0.00031859567388892174, -0.07412362843751907, -0.000910225382540375, -0.1626599133014679, -0.005073411390185356, -0.0004166688595432788, -0.0007727735792286694, -1.1155047416687012, -0.13100336492061615, -0.7051821351051331, -0.0017864234978333116, -0.0009217780898325145, -0.005520337261259556, -0.008386394940316677, -0.010275792330503464, -0.00038723601028323174, -0.00037424711626954377, -8.344646857949556e-07, -0.0003194298769813031, -0.006494487170130014, -5.590759246842936e-05, -4.410734163684538e-06, -0.0006631797295995057, -0.031896013766527176, -0.002925523091107607, -0.003927851561456919, -0.8534060120582581, -0.008793322369456291, -0.07385405898094177, -1.1920858014491387e-05, 0.0, -0.10903550684452057, -0.09453134983778, -0.005125477910041809, -0.4676476716995239, -0.10594093054533005, -0.012777718715369701, -0.00016592556494288146, -0.0023999004624783993, -1.0453815460205078, -1.617634654045105, -0.28612467646598816, -2.638028144836426, -2.147512912750244, -0.34241440892219543, -0.007652018219232559, -0.03050355426967144, -1.8596476365928538e-05, -6.8662193370983e-05, -0.006678285542875528, -0.0010768335778266191, -0.00034171465085819364, -0.04458785802125931, -4.768370445162873e-07, -1.0728830375228426e-06, -0.0002675890573300421, -0.01759597286581993, -1.1444026313256472e-05, -7.509902934543788e-05, -0.000504723924677819, -0.0034435042180120945, -0.39192506670951843, -0.3070913255214691, -0.26858460903167725, -4.184158387943171e-05, -2.407998726994265e-05, -0.0062625594437122345, -0.0005451146862469614, -9.679325739853084e-05, -0.0007458527106791735, -0.006625233683735132, -5.8410845667822286e-05, -0.00043823651503771544, -3.194758028257638e-05, -1.0371154530730564e-05, -0.00021026308240834624, -0.09459587931632996, -0.01078974548727274, -0.1906377375125885, -4.2676016164477915e-05, -1.1085188388824463, -0.06500304490327835, -0.10232646018266678, -0.0008540081907995045, -0.0025213139597326517, -0.0008769956766627729, -0.017811467871069908, -1.53224778175354, -0.025572489947080612, -0.0015428080223500729, -8.344646857949556e-07, -1.9073468138230965e-06, -0.00011228884250158444, -0.0013565156841650605, -0.0007045170641504228, -0.1279621720314026, -0.0005943200667388737, -0.00928973127156496, -5.2569914259947836e-05, -0.0007600279641337693, -0.00011050090688513592, -0.011151842772960663, -0.4415542483329773, -0.011479279957711697, -0.4432426989078522, -0.0540676973760128, -0.021546218544244766, -5.376194530981593e-05, -0.0004857790481764823, -5.173549288883805e-05, -7.986990567587782e-06, -0.38052183389663696, -0.0065340446308255196, -0.5768123865127563], "finish_reason": "stop"}], "metrics": {"energy": 126.87330848884582, "energy_per_token": 1.0231718426519825, "time": 5.057804, "time_per_token": 0.04078874193548387}}
{"outputs": [{"text": "archive_path = os.path.join(target_dir, archive_name)\n    zip_files = []\n\n    for root, _, files in os.walk(source_dir):\n        for f in files:\n            if f.endswith('_processed.zip'):\n                zip_files.append(os.path.join(root, f))\n\n    with zipfile.ZipFile(archive_path, 'w') as archive:\n        for f in zip_files:\n            archive.write(f)\n\n    return archive_path", "tokens": ["archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "zip", "_", "files", " =", " []", "\n", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " f", " in", " files", ":", "\n", "            ", "if", " f", ".", "end", "sw", "ith", "('", "_", "processed", ".", "zip", "')", ":", "\n", "                ", "zip", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " f", "))", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " archive", ":", "\n", "        ", "for", " f", " in", " zip", "_", "files", ":", "\n", "            ", "archive", ".", "write", "(", "f", ")", "\n", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "if"], "logprobs": [-1.8950366973876953, -0.10388243198394775, -0.17897087335586548, -0.03024902381002903, -0.11855246126651764, -3.111314072157256e-05, -0.0002747396647464484, -0.011239075101912022, -0.009174097329378128, -0.0008465044084005058, -0.012119464576244354, -3.933898824470816e-06, -1.0251946150674485e-05, -0.000593962671700865, -0.012807612307369709, -3.4570634852570947e-06, -2.706014311115723e-05, -0.000809699238743633, -0.010267768986523151, -0.6663973927497864, -2.5704541206359863, -0.10400813817977905, -2.556058645248413, -0.3165099024772644, -0.4478604197502136, -0.01745493896305561, -0.8644143342971802, -0.0002821285743266344, -0.2890990078449249, -0.9189525246620178, -0.0037408152129501104, -1.3992812633514404, -0.05499311164021492, -0.11985893547534943, -0.0015581621555611491, -0.007075728382915258, -5.9126061387360096e-05, -0.00012289722508285195, -0.0008992680232040584, -0.00327800284139812, -1.3947389561508317e-05, -5.722029527532868e-06, -0.018810810521245003, -0.007068153005093336, -0.0022366049233824015, -0.04955662414431572, -2.4967591762542725, -0.12810523808002472, -0.0072364602237939835, -0.000169382052263245, -0.002834114944562316, -0.0015300721861422062, -0.4565204381942749, -0.6635177731513977, -0.019352316856384277, -0.05068567767739296, -1.9073304429184645e-05, 0.0, -0.1035427376627922, -0.3037944436073303, -0.005742599721997976, -0.3896758258342743, -2.805760383605957, -0.005263281520456076, -0.1483726054430008, -0.018206970766186714, -0.0025522299110889435, -0.20050573348999023, -0.0070731244049966335, -0.10388286411762238, -0.002768733073025942, -0.003634990891441703, -0.026723364368081093, -0.1222410500049591, -0.0002824861148837954, -2.825220326485578e-05, -0.0018253346206620336, -0.007480349391698837, -0.00010156115604331717, -0.008828416466712952, -0.0006244616815820336, -0.0019312318181619048, -0.0034368515480309725, -0.0033728161361068487, -0.036976106464862823, -0.0028262692503631115, -0.42433106899261475, -0.15589261054992676, -0.00026306029758416116, -1.8954096958623268e-05, -0.002986497012898326, -0.000722266617231071, -6.961580220377073e-05, -0.0032613680232316256, -0.00823495164513588, -3.2782016205601394e-05, -0.0009659630013629794, -0.00022098960471339524, -0.04857063665986061, -0.008969255723059177, -0.268352210521698, -8.49926145747304e-05, -1.4905495643615723, -0.03782656043767929, -0.0023289003875106573, -0.001166973845101893, -0.03531031310558319, -0.5186721086502075, -0.024272186681628227, -0.00346310599707067, -5.018585216021165e-05, -9.059865078597795e-06, -0.00012242044613230973, -0.0010177677031606436, -0.0006331584881991148, -0.12682892382144928, -0.003809933550655842, -0.002339723287150264, -0.00018594920402392745, -0.010772881098091602, -0.7084586024284363, -0.011893432587385178, -0.48078295588493347, -0.018077261745929718, -0.06875671446323395, -0.018833857029676437, -0.012746763415634632, -0.0002584123576525599, -0.7143541574478149, -0.006347613874822855, -1.168386459350586], "finish_reason": "stop"}], "metrics": {"energy": 122.67985229492186, "energy_per_token": 0.9364874220986401, "time": 5.483503, "time_per_token": 0.04185880152671755}}
{"outputs": [{"text": "# Make sure that both source and target directories exist\n    if not os.path.exists(source_dir):\n        raise ValueError(f\"Source directory {source_dir} does not exist\")\n    if not os.path.exists(target_dir):\n        raise ValueError(f\"Target directory {target_dir} does not exist\")\n\n    archive_path = os.path.join(target_dir, archive_name)\n\n    # Create an archive of all processed files\n    with zipfile.ZipFile(archive_path, 'w', zipfile.ZIP_DEFLATED) as zip_file:\n        for root, _, files in os.walk(source_dir):\n            for filename in files:\n                if re.search(r'_processed$', filename):\n                    file_path = os.path.join(root, filename)\n                    zip_file.write(file_path, os.path.relpath(file_path, source_dir))\n\n    return archive_path", "tokens": ["#", " Make", " sure", " that", " both", " source", " and", " target", " directories", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Target", " directory", " {", "target", "_", "dir", "}", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "#", " Create", " an", " archive", " of", " all", " processed", " files", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "            ", "for", " filename", " in", " files", ":", "\n", "                ", "if", " re", ".", "search", "(", "r", "'_", "processed", "$'", ",", " filename", "):", "\n", "                ", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " filename", ")", "\n", "                ", "    ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ",", " os", ".", "path", ".", "rel", "path", "(", "file", "_", "path", ",", " source", "_", "dir", "))", "\n", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "def"], "logprobs": [-1.5353851318359375, -4.73246955871582, -0.326202929019928, -2.2762246131896973, -2.9620201587677, -0.49545562267303467, -0.26303258538246155, -0.013411191292107105, -0.11790551990270615, -0.5052946209907532, -0.5294202566146851, -0.00263795698992908, -0.19300596415996552, -0.034099120646715164, -0.019005808979272842, -8.34461570775602e-06, -5.590759246842936e-05, -0.0013072286965325475, -0.3234802782535553, -0.00011824862303910777, -0.010187413543462753, -3.0636318115284666e-05, -3.3378546504536644e-06, -0.2175544947385788, -0.004206025041639805, -0.0005969410995021462, -0.23773498833179474, -1.542876958847046, -1.6212332411669195e-05, -0.08080095797777176, -0.10311055928468704, -0.2531479001045227, -0.26501622796058655, -0.018764013424515724, -0.8248278498649597, -0.0004949536523781717, -5.578839045483619e-05, -0.00011681827891152352, -0.009317603893578053, -0.1948942095041275, -0.00022957073815632612, -0.0019683525897562504, -1.4803324937820435, -8.40390202938579e-05, -0.0009299959056079388, -0.13272793591022491, -0.03060784377157688, -0.0058186911046504974, -0.00039176418795250356, -0.00016962042718660086, -5.519237674889155e-05, -0.0004204819560982287, -0.060639768838882446, -8.749579137656838e-05, -0.0010617101797834039, -4.768370445162873e-07, -3.576278118089249e-07, -0.001148874987848103, -0.000296310376143083, -0.00023719835735391825, -0.5106301307678223, -0.00099871342536062, -1.0013530300057027e-05, -0.00018499570433050394, -0.0012322221882641315, -0.000624104228336364, -0.00448851240798831, -0.0005772831500507891, -0.0013248485047370195, -0.022059893235564232, -1.3947389561508317e-05, -0.00010024998482549563, -0.00018690270371735096, -0.000925112864933908, -0.00018308870494365692, -0.0003014348621945828, -0.004008236341178417, -4.935142715112306e-05, -0.0002575780963525176, -0.148426353931427, -0.0011226787464693189, -2.994194269180298, -0.03546196594834328, -0.1488649547100067, -0.010334313847124577, -0.06613433361053467, -1.4305104514278355e-06, -9.583967766957358e-05, -0.008965002372860909, -0.003803995903581381, -0.00016723664884921163, -0.02050277590751648, -1.1801649634435307e-05, -2.50339189733495e-06, -0.00039295581518672407, -0.008865518495440483, -3.576272320060525e-06, -1.5139465176616795e-05, -0.0005746620590798557, -0.011899086646735668, -0.4045058786869049, -0.00036423723213374615, -0.23642735183238983, -1.4573214054107666, -1.243943214416504, -0.7001218199729919, -0.4052717983722687, -0.9994800686836243, -0.47846630215644836, -0.014718755148351192, -1.0345873832702637, -0.0008491248008795083, -0.6285677552223206, -0.4858477711677551, -4.577531944960356e-05, -1.9311717551317997e-05, -0.0031234072521328926, -0.00028463127091526985, -7.712543447269127e-05, -0.000692842761054635, -0.0032982020638883114, -3.7431014789035544e-05, -0.00022790218645241112, -0.00024101213784888387, -0.11144009977579117, -0.010370888747274876, -1.3075512647628784, -0.00014530557382386178, -0.7468706369400024, -0.0002978596603497863, -1.1920858014491387e-05, -0.0015806573210284114, -0.026203254237771034, -0.00021026308240834624, -0.0033946766052395105, -0.0002212279650848359, -0.00033468366018496454, -0.018255196511745453, -6.01988795096986e-05, -1.0271081924438477, -0.11602025479078293, -0.08810050785541534, -0.0002669931564014405, -0.0020638848654925823, -0.005832912866026163, -0.035573333501815796, -1.1232342720031738, -0.0011981697753071785, -0.3931707441806793, -0.013348380103707314, -0.30527251958847046, -0.0004714807728305459, -0.0023746881633996964, -1.645074735279195e-05, -4.7205765440594405e-05, -0.000648883986286819, -0.00242594419978559, -9.775113539944869e-06, -4.887569048150908e-06, -0.02205277979373932, -0.004049910698086023, -0.001167926355265081, -0.06457489728927612, -1.8004980087280273, -0.00018571082910057157, -0.008352112956345081, -8.737658936297521e-05, -0.0014787701657041907, -0.0008303055074065924, -0.6092223525047302, -1.5861036777496338, -1.3351351299206726e-05, -0.1245817169547081, -0.2594655454158783, -0.034856703132390976, -0.2757989764213562, -0.021570835262537003, -0.33538350462913513, -1.6212332411669195e-05, -0.004626522306352854, -0.16902872920036316, -0.013570672832429409, -0.000532008707523346, -0.00027295202016830444, -0.7617072463035583, -0.38221314549446106, -0.0021324055269360542, -0.000248401309363544, -0.00028880240279249847, -1.4305104514278355e-06, -4.887569048150908e-06, -0.0005250982358120382, -0.0018077236600220203, -2.098061486321967e-05, -0.002593132434412837, -0.00011646069469861686, -0.00033420699764974415, -4.7205765440594405e-05, -0.001900891656987369, -0.001957169035449624, -0.0001431601122021675, -0.03440496325492859, -0.00015877417172305286, -0.002050560899078846, -3.6000557884108275e-05, -0.00035291642416268587, -1.2755313036905136e-05, -0.00333574740216136, -0.0001494772732257843, -1.6689286894688848e-06, -0.2702016234397888, -0.7008944153785706, -0.00033778208307921886, -0.00010048838157672435, -0.0023764721117913723, -0.016990460455417633, -3.7788631743751466e-05, -3.158996332786046e-05, -0.004531946964561939, -8.451581379631534e-05, -9.536738616588991e-07, -0.0006891497760079801, -0.25152719020843506, -1.680836794548668e-05, -1.5497195136049413e-06, -0.013517280109226704, -0.0037788189947605133, -0.09107103198766708, -0.004704359918832779, -0.05495531111955643, -0.009742804802954197, -1.1205610462639015e-05, -0.00020811776630580425, -0.6319566965103149, -0.00756754819303751, -1.0048565864562988], "finish_reason": "stop"}], "metrics": {"energy": 256.61587599086766, "energy_per_token": 1.0873554067409648, "time": 10.091814, "time_per_token": 0.04276192372881356}}
{"outputs": [{"text": "archive_path = os.path.join(target_dir, archive_name)\n    processed_files = []\n\n    # Iterate over all files in the source directory\n    for root, _, files in os.walk(source_dir):\n        for file in files:\n            if file.endswith('_processed.txt'):\n                processed_file = os.path.join(root, file)\n                processed_files.append(processed_file)\n\n    # Create the archive using the list of processed files\n    with zipfile.ZipFile(archive_path, 'w', compression=zipfile.ZIP_DEFLATED) as archive:\n        for processed_file in processed_files:\n            archive.write(processed_file, os.path.relpath(processed_file, source_dir))\n\n    return archive_path", "tokens": ["archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "processed", "_", "files", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " over", " all", " files", " in", " the", " source", " directory", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " file", ".", "end", "sw", "ith", "('", "_", "processed", ".", "txt", "')", ":", "\n", "                ", "processed", "_", "file", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "                ", "processed", "_", "files", ".", "append", "(", "processed", "_", "file", ")", "\n", "\n", "    ", "#", " Create", " the", " archive", " using", " the", " list", " of", " processed", " files", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "'", ",", " compression", "=", "zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " archive", ":", "\n", "        ", "for", " processed", "_", "file", " in", " processed", "_", "files", ":", "\n", "            ", "archive", ".", "write", "(", "processed", "_", "file", ",", " os", ".", "path", ".", "rel", "path", "(", "processed", "_", "file", ",", " source", "_", "dir", "))", "\n", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "def"], "logprobs": [-1.8950366973876953, -0.10388243198394775, -0.17897087335586548, -0.03024902381002903, -0.11855246126651764, -3.111314072157256e-05, -0.0002747396647464484, -0.011239075101912022, -0.009174097329378128, -0.0008465044084005058, -0.012119464576244354, -3.933898824470816e-06, -1.0251946150674485e-05, -0.000593962671700865, -0.012807612307369709, -3.4570634852570947e-06, -2.706014311115723e-05, -0.000809699238743633, -0.010267768986523151, -0.6663973927497864, -2.5965447425842285, -0.0070094396360218525, -0.13340595364570618, -0.04745374247431755, -0.5043742060661316, -0.01811530999839306, -0.5298961997032166, -0.00024339574156329036, -1.6548478603363037, -1.9989473819732666, -0.03129690885543823, -0.7011266946792603, -0.990566611289978, -0.09846200048923492, -0.10369309037923813, -0.15269005298614502, -0.021866654977202415, -0.016252409666776657, -0.08273694664239883, -0.00039867559098638594, -0.012641416862607002, -0.9330506324768066, -0.0016914597945287824, -0.6802476048469543, -0.018940657377243042, -0.3641679286956787, -0.0007868293323554099, -0.003279666416347027, -1.883488948806189e-05, -0.00026055757189169526, -0.0002517383254598826, -0.001731921685859561, -2.50339189733495e-06, -4.529942543740617e-06, -0.015557121485471725, -0.0021023093722760677, -0.002529756398871541, -0.04095996171236038, -0.28040704131126404, -0.3505086600780487, -0.0019946456886827946, -5.376194530981593e-05, -0.0012336509535089135, -0.0032024311367422342, -0.6942036747932434, -0.15470419824123383, -0.005780053324997425, -0.05281774327158928, -1.168244216387393e-05, 0.0, -0.09773846715688705, -0.19367988407611847, -0.004771157167851925, -0.56144779920578, -0.9819956421852112, -0.0030597082804888487, -0.06370909512042999, -0.048937927931547165, -0.002146442187950015, -0.9021409749984741, -0.0003104920033365488, -2.483116865158081, -0.21576432883739471, -0.020173724740743637, -3.814689989667386e-06, -4.0531076592742465e-06, -0.0009910915978252888, -0.003696158993989229, -5.07818695041351e-05, -0.003125071059912443, -0.0003510097449179739, -0.0006439996068365872, -0.002517152111977339, -0.012067878618836403, -0.0071265073493123055, -0.13365118205547333, -8.320462075062096e-05, -0.0036038707476109266, -0.0003178806509822607, -0.0002450642641633749, -0.010171011090278625, -0.03659646585583687, -5.364403477869928e-06, -3.576272320060525e-06, -0.0016897936584427953, -0.003284062724560499, -0.03132787346839905, -0.011281274259090424, -0.16872525215148926, -0.6050559878349304, -1.353170394897461, -0.25279152393341064, -1.3926360607147217, -0.5379980802536011, -3.508218288421631, -0.0016696811653673649, -0.0774122104048729, -0.03994930535554886, -0.11713623255491257, -0.00038842763751745224, -0.1815742701292038, -0.17399202287197113, -2.169585604860913e-05, -1.7046782886609435e-05, -0.0021496538538485765, -0.00038699767901562154, -9.715084888739511e-05, -0.0011152960360050201, -0.0027447191532701254, -1.823885577323381e-05, -0.0004632591735571623, -0.00010799778101500124, -0.04349595308303833, -0.001989648910239339, -1.7188780307769775, -0.0004009396652691066, -0.5740134716033936, -0.002681709360331297, -0.001908744452521205, -4.0531076592742465e-06, -7.390948667307384e-06, -0.001212814822793007, -0.019287889823317528, -0.00015138434537220746, -0.004998923745006323, -0.00025138078490272164, -0.0012737740762531757, -0.012877283617854118, -4.541770613286644e-05, -0.6262370347976685, -0.0293982345610857, -0.0007272697403095663, -0.00043823651503771544, -0.06927651911973953, -0.5705603361129761, -0.010097138583660126, -0.0003134713042527437, -0.0005071069463156164, -0.0007730118231847882, -2.3841855067985307e-07, -1.5497195136049413e-06, -2.4199192921514623e-05, -0.00025912740966305137, -0.00038223114097490907, -0.06673400849103928, -0.0042457920499145985, -0.001057304092682898, -5.6980417866725475e-05, -0.010890924371778965, -1.1086402082582936e-05, -7.390948667307384e-06, -0.5624477863311768, -0.5246350169181824, -1.1920922133867862e-06, -2.932505594799295e-05, -0.00019441144831944257, -0.1548692137002945, -5.924526340095326e-05, -2.098061486321967e-05, -0.006693561095744371, -2.372236667724792e-05, -1.0132738680113107e-05, -0.0006939148879610002, -0.22899000346660614, -0.00019905969384126365, -2.145764938177308e-06, -0.0082096504047513, -0.004716699477285147, -0.04184293374419212, -0.009075343608856201, -0.04183070361614227, -0.012759710662066936, -0.006427567917853594, -0.00024673278676345944, -0.6511453986167908, -0.007349241059273481, -0.5955263376235962], "finish_reason": "stop"}], "metrics": {"energy": 189.68229636573795, "energy_per_token": 0.9628542962727815, "time": 8.422219, "time_per_token": 0.0427523807106599}}
{"outputs": [{"text": "file_list = []\n    for file in os.listdir(source_dir):\n        if file.endswith('.jpg'):\n            file_list.append(file)\n\n    zip_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(zip_path, 'w') as zipf:\n        for file in file_list:\n            zipf.write(os.path.join(source_dir, file))\n\n    return zip_path", "tokens": ["file", "_", "list", " =", " []", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "('", ".", "jpg", "')", ":", "\n", "            ", "file", "_", "list", ".", "append", "(", "file", ")", "\n", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "for", " file", " in", " file", "_", "list", ":", "\n", "            ", "zip", "f", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "))", "\n", "\n", "    ", "return", " zip", "_", "path", "\n", "\n", "if"], "logprobs": [-3.6443939208984375, -0.05219947546720505, -0.7310330867767334, -0.08493619412183762, -0.24148476123809814, -0.03519868478178978, -0.24206428229808807, -0.5444705486297607, -2.2330784797668457, -0.43415847420692444, -0.03461894392967224, -1.0609570381348021e-05, -0.005907338112592697, -6.6756979322235566e-06, -0.004399383440613747, -0.005079222843050957, -4.172238186583854e-05, -8.702239938429557e-06, -0.0013140147784724832, -0.013288975693285465, -0.0026695826090872288, -0.3326699733734131, -0.2668215036392212, -0.021760864183306694, -0.06290914863348007, -1.07287787614041e-05, -1.1920928244535389e-07, -0.19657383859157562, -1.2322529554367065, -2.836151123046875, -0.004043380729854107, -2.3482329845428467, -0.027141230180859566, -0.004640405531972647, -0.19805088639259338, -0.02299593575298786, -0.17589648067951202, -0.0027109559159725904, -0.0018705505644902587, -0.022496147081255913, -0.49020645022392273, -0.02720167301595211, -0.00534320343285799, -0.6878827810287476, -0.003847341053187847, -2.3497679233551025, -0.21377813816070557, -3.012155055999756, -0.00962037593126297, -0.09950708597898483, -4.100715523236431e-05, -0.00026520551182329655, -0.007669763173907995, -0.004851830657571554, -0.001485078944824636, -0.031796593219041824, -2.7418097943154862e-06, -5.006777428206988e-06, -0.0024108411744236946, -0.029022883623838425, -2.5510462364763953e-05, -2.8013790142722428e-05, -0.0009236836922354996, -0.005949051585048437, -0.16023486852645874, -0.3243900239467621, -0.2239595651626587, -9.476689592702314e-05, -2.586808113846928e-05, -0.006191359367221594, -0.0007347744540311396, -8.880697714630514e-05, -0.0009046276099979877, -0.00352167128585279, -0.00021371940965764225, -0.00022301571152638644, -0.00023445718397852033, -0.05344444140791893, -0.01520166452974081, -0.3258937895298004, -0.00013910756388213485, -0.22420042753219604, -2.761320114135742, -0.0008102948195300996, -0.002426538849249482, -0.002308325143530965, -0.03057107888162136, -0.06685298681259155, -0.06396273523569107, -0.005287590902298689, -3.480850500636734e-05, -2.2411095415009186e-05, -0.000490068516228348, -0.0007312007946893573, -0.001492816023528576, -0.5123962759971619, -0.010397079400718212, -3.373566141817719e-05, -0.00047231485950760543, -0.000760385300964117, -0.10113952308893204, -0.0008860476082190871, -5.090107151772827e-05, -0.0001726001501083374, -0.00033146608620882034, -0.0002928543253801763, -0.013115683570504189, -3.182837463100441e-05, -5.960446742392378e-06, -0.0005326044629327953, -0.0018744770204648376, -0.7184821963310242, -0.0034265159629285336, -0.35460400581359863, -0.01176148746162653, -0.053730305284261703, -0.07824021577835083, -8.594620157964528e-05, -6.9141146923357155e-06, -0.4048437476158142, -0.006319065578281879, -1.1907392740249634], "finish_reason": "stop"}], "metrics": {"energy": 118.20010665512086, "energy_per_token": 0.9688533332386956, "time": 5.061927, "time_per_token": 0.041491204918032785}}
{"outputs": [{"text": "archive_path = os.path.join(target_dir, archive_name)\n\n    with ZipFile(archive_path, 'w') as archive:\n        for path, _, files in os.walk(source_dir):\n            for file_name in files:\n                if file_name.endswith('_processed.txt'):\n                    file_path = os.path.join(path, file_name)\n                    archive.write(file_path, os.path.relpath(file_path, source_dir))\n\n    return archive_path", "tokens": ["archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "with", " Zip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " archive", ":", "\n", "        ", "for", " path", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "            ", "for", " file", "_", "name", " in", " files", ":", "\n", "                ", "if", " file", "_", "name", ".", "end", "sw", "ith", "('", "_", "processed", ".", "txt", "')", ":", "\n", "                ", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " file", "_", "name", ")", "\n", "                ", "    ", "archive", ".", "write", "(", "file", "_", "path", ",", " os", ".", "path", ".", "rel", "path", "(", "file", "_", "path", ",", " source", "_", "dir", "))", "\n", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "def"], "logprobs": [-1.8950366973876953, -0.10388243198394775, -0.17897087335586548, -0.03024902381002903, -0.11855246126651764, -3.111314072157256e-05, -0.0002747396647464484, -0.011239075101912022, -0.009174097329378128, -0.0008465044084005058, -0.012119464576244354, -3.933898824470816e-06, -1.0251946150674485e-05, -0.000593962671700865, -0.012807612307369709, -3.4570634852570947e-06, -2.706014311115723e-05, -0.000809699238743633, -0.010267768986523151, -0.7208350300788879, -0.00027176024741493165, -1.8278793096542358, -1.3121616840362549, -0.00210111984051764, -0.0014724613865837455, -0.005407942924648523, -0.00016509123088326305, -0.000607782625593245, -0.0009158230968751013, -0.07294361293315887, -0.025899887084960938, -0.08224187791347504, -9.572047565598041e-05, -0.5863621830940247, -0.04010483995079994, -0.0072744498029351234, -0.006072168238461018, -0.05657036602497101, -4.365402698516846, -0.1962878257036209, -0.42004990577697754, -0.003658983390778303, -0.4809649884700775, -0.0011928117601200938, -0.00446394644677639, -9.059865078597795e-06, -4.351044481154531e-05, -0.001347587094642222, -0.0038167026359587908, -7.152555099310121e-07, -9.775113539944869e-06, -0.017261745408177376, -0.006215409375727177, -0.002218644367530942, -0.09992463886737823, -0.4248291254043579, -1.4315146207809448, -0.05842415243387222, -0.00020728347590193152, -0.01609734259545803, -7.760223525110632e-05, -0.0030856162775307894, -0.001341396477073431, -0.4371151626110077, -0.30353468656539917, -0.0009819215629249811, -0.00037949037505313754, -0.006843343377113342, -0.06352776288986206, -9.179073458653875e-06, 0.0, -0.05540745332837105, -0.13337485492229462, -0.004995958413928747, -0.6568886041641235, -0.9173270463943481, -0.0021922383457422256, -0.03680744767189026, -0.008698549121618271, -0.0012721073580905795, -0.0006501944735646248, -0.9861806035041809, -0.00876933429390192, -0.005391936283558607, -0.00040439533768221736, -0.001416275859810412, -1.6212332411669195e-05, -5.960446742392378e-06, -0.0009127265075221658, -0.0007173825288191438, -3.671578815556131e-05, -0.003908140119165182, -6.103329360485077e-05, -0.00026675479602999985, 0.0, -1.9073468138230965e-06, -0.00016878610767889768, -0.001665277755819261, -0.01082618534564972, -0.0001677133986959234, -0.0334903821349144, -0.004601959604769945, -0.008663331158459187, -7.772143726469949e-05, -0.004567547235637903, -0.00019107422849629074, -0.0002317160106031224, -0.3571229875087738, -0.47504517436027527, -0.000446696620201692, -0.00012170527770649642, -0.0041587776504457, -0.1111653670668602, -3.5523738915799186e-05, -7.998623186722398e-05, -0.01085271779447794, -4.6491513785440475e-06, -0.008038549683988094, -0.0024441389832645655, -0.17656323313713074, -2.1934269170742482e-05, -2.7418097943154862e-06, -0.01545254047960043, -0.004838543478399515, -0.14004725217819214, -0.01882707141339779, -0.01894182711839676, -0.015122291631996632, -0.017374221235513687, -0.00040892345714382827, -0.5512830018997192, -0.0032793099526315928, -0.5983774065971375], "finish_reason": "stop"}], "metrics": {"energy": 160.48068474769593, "energy_per_token": 1.2066216898323003, "time": 5.4806643, "time_per_token": 0.0412080022556391}}
{"outputs": [{"text": "regex = '.*_processed'\n\n    archive_path = os.path.join(target_dir, archive_name)\n\n    with zipfile.ZipFile(archive_path, 'w') as archive:\n        for dirpath, dirnames, filenames in os.walk(source_dir):\n            for filename in filenames:\n                if re.match(regex, filename):\n                    file_path = os.path.join(dirpath, filename)\n                    archive.write(file_path)\n\n    return archive_path", "tokens": ["regex", " =", " '", ".", "*", "_", "processed", "'", "\n", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " archive", ":", "\n", "        ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "            ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "                ", "if", " re", ".", "match", "(", "regex", ",", " filename", "):", "\n", "                ", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "                ", "    ", "archive", ".", "write", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " archive", "_", "path", "<", "|", "end", "of", "text", "|>"], "logprobs": [-4.514238357543945, -0.16672858595848083, -2.908172130584717, -0.5497007369995117, -0.38072893023490906, -0.3401607275009155, -0.028762880712747574, -1.1358091831207275, -0.06313937902450562, -1.588069200515747, -0.0006369707407429814, -2.149967670440674, -0.22177475690841675, -0.31544584035873413, -0.0214430782943964, -0.16899670660495758, -3.8265450712060556e-05, -0.0004032037395518273, -0.011861036531627178, -0.01027768012136221, -0.0012688927818089724, -0.02230089344084263, -9.059865078597795e-06, -1.0132738680113107e-05, -0.0006246999255381525, -0.03429611772298813, -1.7762025890988298e-05, -3.290122185717337e-05, -0.0007786102942191064, -0.008849449455738068, -0.625036358833313, -0.00022980909852776676, -0.9265607595443726, -0.3081629276275635, -0.00010168035078095272, -7.593343616463244e-05, -0.004672205075621605, -0.001122440560720861, -9.548207890475169e-05, -0.0021607165690511465, -0.010396843776106834, -0.0001597276859683916, -0.0008556757238693535, -0.0005110388156026602, -0.08818957209587097, -0.03139129653573036, -0.4508720636367798, -0.00016151554882526398, -0.6091728806495667, -0.056407682597637177, -0.00493522547185421, -0.026361985132098198, -0.03468158468604088, -1.6748250722885132, -0.43596893548965454, -0.0012193633010610938, -0.8174076080322266, -0.003770030802115798, -0.0001530530134914443, -0.005535156466066837, -2.5629668016335927e-05, -5.9960475482512265e-05, -0.0006269635050557554, -0.005187029484659433, -6.210611172718927e-05, -3.862306402879767e-05, -0.0014555584639310837, -0.008817664347589016, -3.814689989667386e-06, -4.124556289752945e-05, -0.021664513275027275, -0.004280927591025829, -0.01426734309643507, -0.16884870827198029, -0.2859298884868622, -0.0006267252028919756, -0.028518103063106537, -2.0265558760002023e-06, -8.344646857949556e-07, -0.0003129946126136929, -0.003849953645840287, -0.007123429793864489, -0.9441153407096863, -0.04489336162805557, -1.7165990357170813e-05, -0.3710639476776123, -0.0003967689990531653, -0.0009614374139346182, -0.00022837892174720764, -0.004337783437222242, -0.07375971972942352, -0.007206754293292761, -0.0035064660478383303, -0.00047350639943033457, -0.9093273282051086, -0.5671079754829407, -0.01176537573337555, -0.0007846852531656623, -0.0009478605352342129, -4.386805812828243e-05, -1.2278481335670222e-05, -0.0014718662714585662, -0.0028750060591846704, -6.341733387671411e-05, -0.003906596451997757, -2.3603161025675945e-05, -0.00016080040950328112, -0.0009283285471610725, -0.0001389883691444993, -0.0023387717083096504, -0.02778642624616623, -0.0001658063702052459, -0.03831461817026138, -0.009496751241385937, -0.0013738964917138219, -8.225102646974847e-05, -0.010794580914080143, -0.0008422164828516543, -8.940656698541716e-06, -0.7267730236053467, -0.012168928049504757, -0.4127369225025177, -0.03821112960577011, -0.031441666185855865, -0.01172802783548832, -0.013139449991285801, -0.000362807244528085, -1.020158290863037, -3.576278118089249e-07, -4.768370445162873e-07, -1.537788011773955e-05, -0.00029940891545265913, -0.27024737000465393], "finish_reason": "stop"}], "metrics": {"energy": 141.13987512969976, "energy_per_token": 1.061202068644359, "time": 5.4812737, "time_per_token": 0.041212584210526315}}
{"outputs": [{"text": "os.makedirs(target_dir, exist_ok=True)\n    archive_path = os.path.join(target_dir, archive_name)\n\n    file_list = []\n    for root, dirs, files in os.walk(source_dir):\n        for file in files:\n            if file.endswith('.txt'):\n                file_path = os.path.join(root, file)\n                if file.endswith('_processed.txt'):\n                    file_list.append(file_path)\n    if file_list:\n        with zipfile.ZipFile(archive_path, 'w') as zip_file:\n            for file in file_list:\n                zip_file.write(file)\n                os.remove(file)\n\n    return archive_path", "tokens": ["os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "file", "_", "list", " =", " []", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " file", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "                ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "                ", "if", " file", ".", "end", "sw", "ith", "('", "_", "processed", ".", "txt", "')", ":", "\n", "                ", "    ", "file", "_", "list", ".", "append", "(", "file", "_", "path", ")", "\n", "    ", "if", " file", "_", "list", ":", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "            ", "for", " file", " in", " file", "_", "list", ":", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", ")", "\n", "                ", "os", ".", "remove", "(", "file", ")", "\n", "\n", "    ", "return", " archive", "_", "path"], "logprobs": [-4.078519821166992, -0.0064689042046666145, -0.238374263048172, -4.172238186583854e-05, -0.0002901133266277611, -0.019664807245135307, -0.06712902337312698, -1.4066597032069694e-05, -1.5616295058862306e-05, -0.00652551744133234, -0.013657459989190102, 0.0, -3.886147169396281e-05, -0.0038814221043139696, -0.0013173482147976756, -0.0030171608086675406, -0.04219659045338631, -0.46612077951431274, -0.9764849543571472, -0.129264697432518, -0.1878662109375, -0.013599014841020107, -0.05232291296124458, -7.188061863416806e-05, -0.00018666432879399508, -0.03096226043999195, -0.00490331556648016, -0.0002146728802472353, -0.011129207909107208, -1.6689160474925302e-05, -9.536738616588991e-07, -0.00038485272671096027, -0.011920996941626072, -8.821448318485636e-06, -2.407998726994265e-05, -0.0008824745309539139, -0.004932260140776634, -0.8300549983978271, -0.0002475670480635017, -2.6101558208465576, -0.014338087290525436, -0.6338422894477844, -0.024679796770215034, -0.16878093779087067, -0.015364382416009903, -0.1303068846464157, -0.07952895015478134, -0.7916923761367798, -0.0026751705445349216, -0.4120035469532013, -0.0002571013756096363, -0.0001481661747675389, -0.039476025849580765, -0.0006970121758058667, -0.0037845196202397346, -0.00021419614495243877, -5.2927523938706145e-05, -0.001259487122297287, -0.0020072567276656628, -3.2186455882765586e-06, -3.099436753473128e-06, -0.06264884769916534, -0.004982317797839642, -0.0012132910778746009, -0.06214239075779915, -0.3509700894355774, -0.1428033411502838, -0.005625014193356037, -0.00012182447244413197, -0.0013090145075693727, -0.0009990707039833069, -0.25164148211479187, -0.3142089545726776, -0.009767832234501839, -0.062259119004011154, -1.6569954823353328e-05, 0.0, -0.13086636364459991, -1.5665897130966187, -1.5885008573532104, -0.01162351667881012, -1.0455795526504517, -0.027743062004446983, -0.0020274813286960125, -0.22739475965499878, -0.015609349124133587, -1.1018955707550049, -0.0009372609201818705, -0.0015788720920681953, -2.9802276912960224e-06, -9.536697689327411e-06, -0.0006201728247106075, -0.0023449561558663845, -7.664863369427621e-05, -0.003677155589684844, -0.00042965717148035765, -0.0006958208978176117, -0.0005041282274760306, -0.006017306819558144, -0.006199771072715521, -1.8046095371246338, -1.4282490015029907, -0.421920508146286, -0.14180949330329895, -0.00015364897262770683, 0.0, -0.029153959825634956, -0.07877373695373535, -0.013475175015628338, -0.1575934737920761, -0.004655000288039446, -0.0003914067056030035, -0.042820729315280914, -0.007552049122750759, -0.0005442806868813932, -0.0009913297835737467, -0.11441726237535477, -0.0015315004857257009, -0.02510525844991207, -0.0007185738068073988, -0.0007048744591884315, -0.0410892553627491, -0.03572368621826172, -0.006614102050662041, -5.8887653722194955e-05, -0.007992902770638466, -0.002498839981853962, -2.7566051483154297, -1.112699031829834, -0.8648422360420227, -5.221230458118953e-05, -8.785339014139026e-05, -0.016075758263468742, -0.004267632961273193, -0.004800936207175255, -0.3111961781978607, -0.10422652959823608, -3.015949550899677e-05, -1.7046782886609435e-05, -0.003722406690940261, -0.00037067217635922134, -4.494089080253616e-05, -0.0010562323732301593, -0.005683097522705793, -3.433168603805825e-05, -0.0015460216673091054, -0.00021073981770314276, -0.03227652236819267, -0.007007664069533348, -0.3576856553554535, -8.391981828026474e-05, -0.620305597782135, -0.10627628117799759, -0.053474389016628265, -0.00014804698002990335, -0.001046467456035316, -0.0013400870375335217, -0.042975474148988724, -0.015553952194750309, -0.33130744099617004, -0.0007848043460398912, -1.883488948806189e-05, -1.3828182090946939e-05, -9.655486064730212e-05, -0.00030155404238030314, -0.0003999863693024963, -0.0693504810333252, -0.0010236029047518969, -0.005245137959718704, -4.31528314948082e-05, -0.00036030475166626275, -6.818538531661034e-05, -0.004732835106551647, -0.4465962052345276, -0.0028580077923834324, -2.124289035797119, -0.12242342531681061, -3.4570634852570947e-06, -0.03957434371113777, -6.103329360485077e-05, -0.0010996968485414982, -0.0019309938652440906, -0.013909545727074146, -1.1596636772155762, -0.2689911723136902, -0.024745389819145203, -0.018956448882818222, -3.58813522325363e-05, -0.0005054388311691582], "finish_reason": "stop"}], "metrics": {"energy": 185.70502613639817, "energy_per_token": 0.9825662758539586, "time": 7.99676, "time_per_token": 0.04231089947089947}}
{"outputs": [{"text": "zip_file = zipfile.ZipFile(os.path.join(target_dir, archive_name), 'w')\n    for file_name in os.listdir(source_dir):\n        if file_name.endswith('_processed'):\n            file_path = os.path.join(source_dir, file_name)\n            zip_file.write(file_path, file_name)\n    zip_file.close()\n    return os.path.join(target_dir, archive_name)", "tokens": ["zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "w", "')", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "if", " file", "_", "name", ".", "end", "sw", "ith", "('", "_", "processed", "')", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "_", "name", ")", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ",", " file", "_", "name", ")", "\n", "    ", "zip", "_", "file", ".", "close", "()", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "def"], "logprobs": [-3.103395462036133, -0.13146661221981049, -0.7614296078681946, -0.7928780317306519, -1.1196178197860718, -0.004259442910552025, -0.00016199229867197573, -0.010959785431623459, -0.0007612191257067025, -9.119095193454996e-05, -0.01287281233817339, -0.7355798482894897, -9.65590606938349e-06, -0.0007826602668501437, -0.003411546815186739, -0.007883269339799881, -0.0009471459779888391, -0.01796521618962288, -1.2040065485052764e-05, -1.07287787614041e-05, -0.0017487009754404426, -0.013935997150838375, -2.3841830625315197e-06, -3.290122185717337e-05, -0.004804495256394148, -0.0005029367166571319, -0.10521239042282104, -0.031024668365716934, -0.14720505475997925, -0.0405503511428833, -0.5053576231002808, -0.17715825140476227, -1.6801726818084717, -0.8056725859642029, -0.2552233636379242, -0.01650173030793667, -0.022928131744265556, -0.0016830102540552616, -0.000382707774406299, -9.536738616588991e-07, -0.0029810296837240458, -0.0033778061624616385, -2.6940935640595853e-05, -1.0967194612021558e-05, -0.000771820661611855, -0.005661642644554377, -0.0030095544643700123, -0.5467448830604553, -0.393537312746048, -0.0004724340105894953, -0.00045503751607611775, -0.013117683120071888, -0.0453864149749279, -9.775113539944869e-06, 0.0, -0.060063254088163376, -0.12101668864488602, -0.004919093102216721, -0.44141578674316406, -0.017891213297843933, -0.008343718945980072, -0.0023210509680211544, -1.4847793579101562, -0.017997413873672485, -0.015581299550831318, -0.001570064458064735, -0.0016520674107596278, -2.861018856492592e-06, -1.7523612768854946e-05, -0.0016121974913403392, -0.00043883229955099523, -7.080780778778717e-05, -0.004612283315509558, -9.894321920000948e-06, -8.344646857949556e-07, -0.00010191874753218144, -0.0006135011790320277, 0.0, -4.768360213347478e-06, -0.000570253818295896, -0.0017046695575118065, -0.0038735847920179367, -0.059703171253204346, -0.0006719953380525112, -0.009522492997348309, -0.00046957432641647756, -0.0006336349761113524, -8.904537389753386e-05, -0.004787885583937168, -0.00012385078298393637, -0.0011707840021699667, -0.33637216687202454, -1.2641921043395996, -0.06356311589479446, -0.010713913477957249, -0.08164308220148087, -0.012494384311139584, -0.10450178384780884, -0.01696760766208172, -0.000512111175339669, -2.4914430468925275e-05, -2.9444261599564925e-05, -0.00018749863374978304, -0.0005100856651552022, -0.003592824097722769, -0.061488278210163116, -0.039656154811382294, -0.059248365461826324, -1.0728830375228426e-06, -9.285972191719338e-05, -0.0007182164117693901, -0.035877346992492676, -0.0006542449118569493, -0.004059883765876293, -6.437280717364047e-06, -8.344646857949556e-07, -0.00024279984063468874, -0.0034781931899487972, -4.172316494077677e-06, -5.352353764465079e-05, -0.19819413125514984, -0.10323399305343628, -0.008618658408522606, -0.6826469302177429], "finish_reason": "stop"}], "metrics": {"energy": 145.49220755004876, "energy_per_token": 1.173324254435877, "time": 5.0598097, "time_per_token": 0.04080491693548387}}
{"outputs": [{"text": "archive_path = os.path.join(target_dir, archive_name)\n    archive_zip = zipfile.ZipFile(archive_path, 'w')\n    for root, dirs, files in os.walk(source_dir):\n        for file_name in files:\n            file_path = os.path.join(root, file_name)\n            if re.match(r'\\w+_processed', file_name):\n                archive_zip.write(file_path)\n    archive_zip.close()\n    return archive_path", "tokens": ["archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "archive", "_", "zip", " =", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " file", "_", "name", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", "_", "name", ")", "\n", "            ", "if", " re", ".", "match", "(", "r", "'\\", "w", "+", "_", "processed", "'", ",", " file", "_", "name", "):", "\n", "                ", "archive", "_", "zip", ".", "write", "(", "file", "_", "path", ")", "\n", "    ", "archive", "_", "zip", ".", "close", "()", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "def"], "logprobs": [-1.8950366973876953, -0.10388243198394775, -0.17897087335586548, -0.03024902381002903, -0.11855246126651764, -3.111314072157256e-05, -0.0002747396647464484, -0.011239075101912022, -0.009174097329378128, -0.0008465044084005058, -0.012119464576244354, -3.933898824470816e-06, -1.0251946150674485e-05, -0.000593962671700865, -0.012807612307369709, -3.4570634852570947e-06, -2.706014311115723e-05, -0.000809699238743633, -0.010267768986523151, -0.6663973927497864, -1.4489237070083618, -1.0320695638656616, -2.648538589477539, -0.15317395329475403, -0.15178556740283966, -0.0007908792467787862, -0.00013290952483657748, -0.006499935407191515, -0.0005975367967039347, -0.00010024998482549563, -0.0011700696777552366, -0.008025187067687511, -6.687417771900073e-05, -0.0005964645533822477, -0.0006759266252629459, -0.1307651251554489, -0.04521984979510307, -0.2595421373844147, -0.026088282465934753, -0.7579675316810608, -0.228993222117424, -1.1093512773513794, -0.005429284647107124, -0.5182093381881714, -0.0003331344632897526, -0.0003987947420682758, -0.01651873253285885, -0.0009264229447580874, -0.00472678430378437, -2.753696753643453e-05, -3.957670196541585e-05, -0.002996124094352126, -0.0047654625959694386, -4.0531076592742465e-06, -1.0967194612021558e-05, -0.057384178042411804, -0.00773281417787075, -0.002507282653823495, -0.14925481379032135, -0.38988450169563293, -2.1222763061523438, -0.14840897917747498, -0.00036590558011084795, -0.011043380945920944, -0.0001778444420779124, -0.0037725248839706182, -0.0012157914461567998, -1.7835216522216797, -0.015861881896853447, -0.019903581589460373, -0.0014602008741348982, -0.00189268181566149, -0.00011836781777674332, -2.2649508537142538e-05, -0.0013823487097397447, -0.0014680571621283889, -8.237022848334163e-05, -0.004768191371113062, -0.0002733095607254654, -0.0007471630233339965, -9.536697689327411e-06, -2.777537883957848e-05, -0.00011431517486926168, -0.002767544472590089, -0.009446918964385986, -0.2677314579486847, -1.5573492050170898, -2.002696055569686e-05, -2.0019454956054688, -0.19648069143295288, -0.025462791323661804, -2.0232105255126953, -0.6765220761299133, -0.3942347466945648, -0.5828817486763, -0.03108268231153488, -1.5147252082824707, -0.00024005869636312127, -0.08180259168148041, -2.3603161025675945e-05, -0.005574633367359638, -0.09071650356054306, -0.014910678379237652, -0.0011965028243139386, -0.06418188661336899, -8.237022848334163e-05, -0.027521345764398575, -0.00019560330838430673, -0.0009976415894925594, -7.629103492945433e-05, -0.00993509590625763, -0.00045980370487086475, -0.0027500689029693604, -0.5806363224983215, -0.007224388420581818, -0.12885408103466034, -0.013444595038890839, -2.0861407392658293e-05, -3.9457496313843876e-05, -4.51792984677013e-05, -0.00033420699764974415, -0.000579546787776053, -0.002987685613334179, -0.04466743394732475, -0.038954369723796844, -0.016085494309663773, -6.580135959666222e-05, -0.001110532903112471, -0.6802701354026794, -0.008364762179553509, -0.820652425289154], "finish_reason": "stop"}], "metrics": {"energy": 135.88986236190794, "energy_per_token": 1.0373271936023507, "time": 5.4771295, "time_per_token": 0.041810148854961836}}
{"outputs": [{"text": "archive_file = os.path.join(target_dir, archive_name)\n    with ZipFile(archive_file, 'w') as z:\n        for file in os.listdir(source_dir):\n            file_path = os.path.join(source_dir, file)\n            if file.endswith('_processed'):\n                z.write(file_path)\n    return archive_file", "tokens": ["archive", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " Zip", "File", "(", "archive", "_", "file", ",", " '", "w", "')", " as", " z", ":", "\n", "        ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", "\n", "            ", "if", " file", ".", "end", "sw", "ith", "('", "_", "processed", "')", ":", "\n", "                ", "z", ".", "write", "(", "file", "_", "path", ")", "\n", "    ", "return", " archive", "_", "file", "\n", "\n", "def"], "logprobs": [-1.8950366973876953, -0.10388243198394775, -2.423647403717041, -0.2217184156179428, -0.4013301730155945, -1.9192511899746023e-05, -0.0006244616815820336, -0.002832331694662571, -0.022981606423854828, -0.000795882020611316, -0.02341967076063156, -7.390948667307384e-06, -1.5020257706055418e-05, -0.00068926892708987, -0.01267108041793108, -6.198863957251888e-06, -2.276871418871451e-05, -0.000700466800481081, -0.01662730611860752, -0.4040205180644989, -1.3613765239715576, -0.8677464723587036, -0.003009435487911105, -0.0022509971167892218, -0.0046235560439527035, -0.00022873646230436862, -0.0009575072908774018, -0.0005595310358330607, -0.061010729521512985, -0.035394541919231415, -0.04374724626541138, -8.523101132595912e-05, -2.980499744415283, -2.458597421646118, -0.014601867645978928, -0.004525301046669483, -0.03039185144007206, -1.6898794174194336, -0.18260647356510162, -0.06740910559892654, -0.0016645636642351747, -0.0008825936238281429, -1.311301275563892e-06, -0.0018829250475391746, -0.0023842023219913244, -2.1576648578047752e-05, -7.271740287251305e-06, -0.0006636562757194042, -0.005500183440744877, -0.0012484145117923617, -2.019533395767212, -0.07848094403743744, -0.05150768533349037, -0.0004904259694740176, -0.0020318832248449326, -0.0001070442158379592, -1.2278481335670222e-05, -0.0011587579501792789, -0.00015770144818816334, -5.686121585313231e-05, -0.0017463208641856909, -8.22540732769994e-06, -1.1920922133867862e-06, -0.00012230125139467418, -0.0006641327636316419, -0.00013815402053296566, -0.000985136954113841, -0.00778143061324954, -0.049409132450819016, -1.117429256439209, -0.1254352182149887, -0.022380048409104347, -2.0503786799963564e-05, 0.0, -0.07220714539289474, -0.12090757489204407, -0.006249291356652975, -0.4569717049598694, -0.5058521628379822, -0.007135029416531324, -0.0008694920688867569, -0.0578153058886528, -0.00030155404238030314, -0.002353043295443058, -7.247662142617628e-05, -0.002059602178633213, -0.0011447074357420206, -2.145764938177308e-06, -0.4499451220035553, -0.02050674706697464, -0.3300255835056305, -0.021404573693871498, -0.022338781505823135, -7.450303382938728e-05, -0.0007537146448157728, -0.2727747857570648, -0.005662116687744856, -0.4377586245536804], "finish_reason": "stop"}], "metrics": {"energy": 96.04785741901401, "energy_per_token": 0.9800801777450409, "time": 4.0047884, "time_per_token": 0.04086518775510204}}
{"outputs": [{"text": "if not os.path.isdir(source_dir):\n        raise ValueError(\"'source_dir' is not a directory.\")\n\n    if not os.path.isdir(target_dir):\n        raise ValueError(\"'target_dir' is not a directory.\")\n\n    archive_path = os.path.join(target_dir, archive_name)\n    archive = zipfile.ZipFile(archive_path, 'w')\n\n    for file_name in os.listdir(source_dir):\n        if file_name.endswith('.csv'):\n            file_path = os.path.join(source_dir, file_name)\n            archive.write(file_path, os.path.basename(file_path))\n\n    archive.close()\n\n    return archive_path", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "source", "_", "dir", "'", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "target", "_", "dir", "'", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "archive", " =", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", "\n", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "if", " file", "_", "name", ".", "end", "sw", "ith", "('", ".", "csv", "')", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "_", "name", ")", "\n", "            ", "archive", ".", "write", "(", "file", "_", "path", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", "))", "\n", "\n", "    ", "archive", ".", "close", "()", "\n", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "def"], "logprobs": [-2.351156234741211, -0.23831301927566528, -0.15362714231014252, -3.71926071238704e-05, -0.0027518521528691053, -0.0019839382730424404, -0.6158833503723145, -0.006582127418369055, -0.0008878341759555042, -0.1384526640176773, -3.516612196108326e-05, -4.768360213347478e-06, -0.04211178794503212, -0.017184292897582054, -0.0011169631034135818, -0.3233998119831085, -0.8302288055419922, -4.660974445869215e-05, -0.2803265154361725, -1.613412857055664, -2.4032692909240723, -0.27138787508010864, -0.014081877656280994, -0.002359227742999792, -0.0058381278067827225, -1.1624419689178467, -0.044329818338155746, -0.028895379975438118, -0.6566139459609985, -0.8170573115348816, -0.02007044292986393, -0.00022063204960431904, -0.003586291102692485, -1.2756199836730957, -0.000342191313393414, -0.35931065678596497, -0.06606648862361908, -0.013578670099377632, -0.0002712835557758808, -0.002644615015015006, -0.0004683827864937484, -0.036122746765613556, -0.006552993785589933, -8.809178689261898e-05, -0.003957061562687159, -1.4305104514278355e-06, -2.264974000354414e-06, -0.007200007792562246, -0.0008406681008636951, -0.00034648136352188885, -0.3944818675518036, -0.0018937526037916541, -3.528532761265524e-05, -0.0021350225433707237, -0.005549264140427113, -0.0017088347813114524, -0.00405679689720273, -0.0006093314150348306, -0.00033825874561443925, -0.0017006233101710677, -0.001977275824174285, -0.0007036832394078374, -0.0008168459753505886, -0.003454671474173665, -0.0028696570079773664, -0.0006897454150021076, -4.815939246327616e-05, -0.0001770101225702092, -0.013774457387626171, -0.000546425289940089, -1.3811036348342896, -0.05094888061285019, -0.17935773730278015, -0.022301476448774338, -0.07340575009584427, -3.099436753473128e-06, -0.00010346830822527409, -0.010708488523960114, -0.006407076492905617, -0.0002444683632347733, -0.014193419367074966, -6.198863957251888e-06, -2.264974000354414e-06, -0.0003333727945573628, -0.016718048602342606, -3.4570634852570947e-06, -2.610649426060263e-05, -0.0005788319394923747, -0.005239564459770918, -1.2635176181793213, -0.8595126271247864, -0.4439941346645355, -0.1681850552558899, -0.0007491880678571761, -4.994744449504651e-05, -0.006909406278282404, -0.0001805857609724626, -0.00014900050882715732, -0.0005712069687433541, -0.006947763729840517, -0.000120751719805412, -0.0008743754005990922, -0.0005162813467904925, -0.10909825563430786, -0.038911715149879456, -0.3261369466781616, -0.021912023425102234, -0.24076369404792786, -0.0001616347290109843, -0.14830610156059265, -2.187218427658081, -0.40080398321151733, -0.5198106169700623, -0.009367087855935097, -0.021002747118473053, -0.00013958434283267707, -7.807903602952138e-05, -1.4305104514278355e-06, -0.001492934999987483, -0.002030455507338047, -5.364403477869928e-06, -3.576272320060525e-06, -0.0003873551613651216, -0.0045343199744820595, -0.0033085390459746122, -0.5742226243019104, -0.33168670535087585, -0.00014983485743869096, -0.00039009589818306267, -0.007464967668056488, -0.03856710344552994, -6.794906312279636e-06, 0.0, -0.11207226663827896, -1.9392637014389038, -1.3756895065307617, -0.02825414389371872, -0.8959612250328064, -0.020243117585778236, -0.004863930866122246, -0.6178870797157288, -0.00815502367913723, -0.007599609903991222, -0.0009010545909404755, -0.000996212475001812, -2.7418097943154862e-06, -8.34461570775602e-06, -0.000655793643090874, -0.00017188502533826977, -6.735097849741578e-05, -0.0018932766979560256, -1.2040065485052764e-05, -9.536738616588991e-07, -6.627816765103489e-05, -0.0003301552205812186, 0.0, -4.768360213347478e-06, -7.545663538621739e-05, -0.0008878341759555042, -0.033636435866355896, -0.06838727742433548, -0.03599660471081734, -0.001176975667476654, -5.1020273531321436e-05, -0.004896435420960188, -0.0005179494037292898, -0.0008744944934733212, -0.1559273898601532, -1.7727267742156982, -4.9828242481453344e-05, -0.00018320789968129247, -0.00565891619771719, -0.8344756364822388, -2.3841855067985307e-07, -5.900685573578812e-05, -0.0020270056556910276, -2.6464111215318553e-05, -0.2324557900428772, -0.02620011940598488, -0.004223475232720375, -0.08145816624164581, -0.005564675200730562, -0.011165988631546497, -0.00019238528329879045, -0.00022933237778488547, -0.0003597089380491525, -0.004518062341958284, -0.3194707930088043, -0.000615407363511622, -0.04288765415549278, -0.01432892121374607, -0.004101555794477463, -0.0005072260973975062, -0.5748729109764099, -0.004719309508800507, -0.5038176774978638], "finish_reason": "stop"}], "metrics": {"energy": 187.56485542774195, "energy_per_token": 0.9569635481007243, "time": 8.20301, "time_per_token": 0.041852091836734696}}
{"outputs": [{"text": "# Create an archive of all files with the '_processed' suffix\n    archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w') as archive:\n        for file in os.listdir(source_dir):\n            path = os.path.join(source_dir, file)\n            if os.path.isfile(path) and '_processed' in file:\n                archive.write(path)\n    return archive_path", "tokens": ["#", " Create", " an", " archive", " of", " all", " files", " with", " the", " '_", "processed", "'", " suffix", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " archive", ":", "\n", "        ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "            ", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "path", ")", " and", " '_", "processed", "'", " in", " file", ":", "\n", "                ", "archive", ".", "write", "(", "path", ")", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "if"], "logprobs": [-1.5353851318359375, -1.8879698514938354, -1.7608387470245361, -0.5471324324607849, -0.6607338786125183, -1.2372010946273804, -1.5842188596725464, -0.7228237390518188, -0.41224148869514465, -0.29412010312080383, -0.0054578580893576145, -0.004641236271709204, -0.007591919973492622, -0.893215000629425, -0.017624201253056526, -0.5289693474769592, -0.14360778033733368, -0.16955901682376862, -0.00839963462203741, -0.08257769793272018, -2.396077979938127e-05, -0.00011586471373448148, -0.013214980252087116, -0.00412019481882453, -0.0004611144249793142, -0.020164145156741142, -6.079655122448457e-06, -9.417489309271332e-06, -0.0004670721245929599, -0.02036483772099018, -4.0531076592742465e-06, -1.9073304429184645e-05, -0.0004960260121151805, -0.007978947833180428, -0.2804930508136749, -0.8658132553100586, -0.466787725687027, -7.795983401592821e-05, -2.4199192921514623e-05, -0.0034849646035581827, -0.0008099374244920909, -0.00011014331539627165, -0.0011188682401552796, -0.008580601774156094, -4.672895011026412e-05, -0.0001726001501083374, -0.0002536452084314078, -0.0627112165093422, -0.023083772510290146, -0.3015633821487427, -6.83045873302035e-05, -0.4347517192363739, -0.04312494397163391, -0.005655122920870781, -0.004196647088974714, -0.04279925674200058, -1.6123311519622803, -0.7711165547370911, -0.04590074345469475, -0.0009078433504328132, -0.0005099665140733123, -4.768370445162873e-07, -0.0017213303362950683, -0.0018199799815192819, -8.344646857949556e-07, -7.390948667307384e-06, -0.0006224363460205495, -0.0051231058314442635, -0.0005374894244596362, -2.972989082336426, -0.0049811312928795815, -0.0013575871707871556, -8.034383063204587e-05, -4.887569048150908e-06, -0.002413457492366433, -0.00017176583060063422, -5.1377883210079744e-05, -0.0025037152227014303, -3.433168603805825e-05, -1.0728830375228426e-06, -6.48477507638745e-05, -0.0005096090608276427, -6.317892984952778e-05, -0.0014692475087940693, -0.007459879852831364, -0.06115192174911499, -0.4489356577396393, -0.00013743886665906757, -0.0009108209051191807, -0.0015949398512020707, -0.003443979425355792, -0.009125076234340668, -4.2676016164477915e-05, -0.00024005869636312127, -0.04345589131116867, -0.0017257335130125284, -0.952655017375946, -0.0029056731145828962, -0.006261967122554779, -0.0007846852531656623, -0.10264182835817337, -0.019757261499762535, -0.0049230074509978294, -0.0004042761866003275, -0.023265013471245766, -0.0009753713966347277, -0.0005193791585043073, -2.5033637939486653e-05, -0.0076938956044614315, -0.5397185683250427, -0.007488276809453964, -0.5996915102005005, -0.05039531737565994, -0.01197600644081831, -0.008993593044579029, -0.0008111285860650241, -0.4396025240421295, -0.006318117957562208, -1.7008973360061646], "finish_reason": "stop"}], "metrics": {"energy": 127.42155426788334, "energy_per_token": 1.0707693635956583, "time": 4.8482814, "time_per_token": 0.040741860504201685}}
{"outputs": [{"text": "archive_path = os.path.join(target_dir, archive_name)\n    os.makedirs(target_dir, exist_ok=True)\n    with ZipFile(archive_path, 'w') as zip_archive:\n        for filename in os.listdir(source_dir):\n            match = re.search(r'_processed\\.(?P<ext>[^_]*)$', filename)\n            if match:\n                zip_archive.write(os.path.join(source_dir, filename), arcname=filename)\n    return archive_path", "tokens": ["archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "with", " Zip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "archive", ":", "\n", "        ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "            ", "match", " =", " re", ".", "search", "(", "r", "'_", "processed", "\\", ".", "(", "?", "P", "<", "ext", ">[", "^", "_", "]*", ")$", "'", ",", " filename", ")", "\n", "            ", "if", " match", ":", "\n", "                ", "zip", "_", "archive", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", ")", ",", " arc", "name", "=", "filename", ")", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "if"], "logprobs": [-1.8950366973876953, -0.10388243198394775, -0.17897087335586548, -0.03024902381002903, -0.11855246126651764, -3.111314072157256e-05, -0.0002747396647464484, -0.011239075101912022, -0.009174097329378128, -0.0008465044084005058, -0.012119464576244354, -3.933898824470816e-06, -1.0251946150674485e-05, -0.000593962671700865, -0.012807612307369709, -3.4570634852570947e-06, -2.706014311115723e-05, -0.000809699238743633, -0.010267768986523151, -0.6663973927497864, -4.000866413116455, -0.0009232072625309229, -0.03282947465777397, -2.7656173188006505e-05, -0.00019798702851403505, -0.002875956939533353, -0.13361050188541412, -2.3603161025675945e-05, -5.125986263010418e-06, -0.0025943215005099773, -0.007797872181981802, 0.0, -3.194758028257638e-05, -0.0035922301467508078, -0.001135300612077117, -0.002263604663312435, -0.06370070576667786, -0.6517046689987183, -0.9674392342567444, -1.1400376558303833, -0.0014724613865837455, -0.0011410161387175322, -0.004270719364285469, -0.00016127715934999287, -0.0003103728231508285, -0.0008366183610633016, -0.1434391289949417, -0.02702416107058525, -0.06995568424463272, -7.545663538621739e-05, -0.7069696187973022, -0.24056391417980194, -2.259409189224243, -0.002318910090252757, -0.008210832253098488, -0.004650728777050972, -0.03921712189912796, -1.8833719491958618, -0.002797977067530155, -0.035269688814878464, -1.8358061424805783e-05, -0.00015662873920518905, -4.768370445162873e-07, -0.0008274468709714711, -0.0033776871860027313, -5.364403477869928e-06, -6.6756979322235566e-06, -0.0004744596080854535, -0.005184894893318415, -0.0008087463211268187, -3.3101515769958496, -0.08021967113018036, -0.002723557874560356, -2.1576648578047752e-05, -0.38825544714927673, -0.10217870026826859, -0.012208261527121067, -0.2425576001405716, -0.02906167507171631, -1.4021892547607422, -0.03804967552423477, -1.1242812871932983, -0.37297141551971436, -0.057830046862363815, -0.0006307758158072829, -0.9114124178886414, -0.3619982600212097, -0.4929068684577942, -2.8905858993530273, -1.8431038856506348, -0.06099727004766464, -0.0002849888114724308, -2.396077979938127e-05, -0.006629970856010914, -0.022448822855949402, -0.0040893275290727615, -0.005228417459875345, -0.006006997544318438, -0.014074355363845825, -0.26054638624191284, -0.004996432922780514, -0.00040046300273388624, -0.8135417699813843, -0.0017902314430102706, -0.011334904469549656, -5.173549288883805e-05, -0.002279185689985752, -0.0003582789213396609, -0.07547858357429504, -0.0004508670826908201, -1.2636104656849056e-05, -0.0006156456656754017, -0.0002464944263920188, -1.966933996300213e-05, -0.004378731828182936, -1.823885577323381e-05, -9.536738616588991e-07, -6.663577369181439e-05, -0.001341634662821889, -0.19654719531536102, -0.0002369599969824776, -0.4741210639476776, -0.0003960540343541652, -0.003891396801918745, -0.4521450102329254, -0.10852281749248505, -0.006912958342581987, -0.14750175178050995, -0.027892623096704483, -0.013129566796123981, -4.9828242481453344e-05, -0.0005439232336357236, -0.4583260715007782, -0.005521759856492281, -1.339662790298462], "finish_reason": "stop"}], "metrics": {"energy": 155.81974377536775, "energy_per_token": 1.1542203242619833, "time": 5.477319, "time_per_token": 0.04057273333333333}}
{"outputs": [{"text": "# Check for the presence of the 'zipfile' module\n    if not os.path.exists('zipfile'):\n        raise ModuleNotFoundError('The zipfile module is missing.')\n\n    # Check for the presence of the 'os' and 're' modules\n    if not os.path.exists('os') or not os.path.exists('re'):\n        raise ModuleNotFoundError('The os and re modules are missing.')\n\n    # Check for the presence of the 'shutil' module\n    if not os.path.exists('shutil'):\n        raise ModuleNotFoundError('The shutil module is missing.')\n\n    # Check that source_dir and target_dir are both directories\n    if not os.path.isdir(source_dir):\n        raise NotADirectoryError(source_dir + ' is not a directory.')\n    if not os.path.isdir(target_dir):\n        raise NotADirectoryError(target_dir + ' is not a directory.')\n\n    # Create an empty archive file\n    archive_file = zipfile.ZipFile(os.path.join(", "tokens": ["#", " Check", " for", " the", " presence", " of", " the", " '", "zip", "file", "'", " module", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "('", "zip", "file", "')", ":", "\n", "        ", "raise", " Module", "NotFound", "Error", "('", "The", " zip", "file", " module", " is", " missing", ".", "')", "\n", "\n", "    ", "#", " Check", " for", " the", " presence", " of", " the", " '", "os", "'", " and", " '", "re", "'", " modules", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "('", "os", "')", " or", " not", " os", ".", "path", ".", "exists", "('", "re", "')", ":", "\n", "        ", "raise", " Module", "NotFound", "Error", "('", "The", " os", " and", " re", " modules", " are", " missing", ".", "')", "\n", "\n", "    ", "#", " Check", " for", " the", " presence", " of", " the", " '", "sh", "util", "'", " module", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "('", "sh", "util", "')", ":", "\n", "        ", "raise", " Module", "NotFound", "Error", "('", "The", " shut", "il", " module", " is", " missing", ".", "')", "\n", "\n", "    ", "#", " Check", " that", " source", "_", "dir", " and", " target", "_", "dir", " are", " both", " directories", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Not", "AD", "irect", "ory", "Error", "(", "source", "_", "dir", " +", " '", " is", " not", " a", " directory", ".", "')", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "dir", "):", "\n", "        ", "raise", " Not", "AD", "irect", "ory", "Error", "(", "target", "_", "dir", " +", " '", " is", " not", " a", " directory", ".", "')", "\n", "\n", "    ", "#", " Create", " an", " empty", " archive", " file", "\n", "    ", "archive", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "("], "logprobs": [-1.5353851318359375, -1.8450106382369995, -2.7996411323547363, -2.239314556121826, -0.7694656252861023, -0.007614161353558302, -0.5705232620239258, -1.9463595151901245, -1.9941885471343994, -0.5022363066673279, -0.004390481859445572, -0.6213372945785522, -0.5697450637817383, -0.0038561285473406315, -0.4364456534385681, -0.2245510369539261, -3.505176305770874, -0.0005694198189303279, -0.020379554480314255, -0.014449600130319595, -0.3323632478713989, -0.29799750447273254, -0.12836916744709015, -0.00024863966973498464, -0.2326744943857193, -0.03347942978143692, -0.02266141213476658, -0.0017321596387773752, -0.2237042486667633, -1.1550884246826172, -0.0018661479698494077, -0.007282852195203304, -0.7902712225914001, -0.7982332706451416, -1.1315116882324219, -0.005060720257461071, -0.04402836412191391, -0.15741708874702454, -2.5182132720947266, -0.25855889916419983, -1.5788168907165527, -0.0034456427674740553, -0.2280380129814148, -0.0006248190766200423, -0.24317295849323273, -0.624421238899231, -0.3313239514827728, -0.07205352932214737, -0.07110880315303802, -0.002784900600090623, -0.09805550426244736, -0.11012876778841019, -1.1143089532852173, -0.00990676786750555, -1.2616231441497803, -0.0037915261927992105, -0.1162063255906105, -0.00022897482267580926, -0.008704693987965584, -0.03098491206765175, -0.0006781900301575661, -0.20434926450252533, -0.015160569921135902, -0.5247544050216675, -0.0012963948538526893, -0.001997977029532194, -0.030814776197075844, -0.003788319882005453, -0.01132465060800314, -0.04283009469509125, -0.005543573759496212, -0.3335379362106323, -0.0012984187342226505, -0.0028794039972126484, -0.0002307625545654446, -0.0002506657037883997, -0.0012422234285622835, -0.00014256415306590497, -0.0019555033650249243, -0.0006525770877487957, -0.0005690624238923192, -0.024971790611743927, -0.0005407063290476799, -0.000846147071570158, -0.008910654112696648, -0.13093329966068268, -0.0011219641892239451, -8.999896090244874e-05, -0.04703438654541969, -0.1711200773715973, -0.02024206705391407, -0.3370002508163452, -0.15318448841571808, -0.0026021688245236874, -0.003418318461626768, -0.005284270271658897, -0.004994534887373447, -0.019451580941677094, -0.0005318895564414561, -0.02781413495540619, -0.0004033228906337172, -0.06926661729812622, -0.07247450202703476, -0.0327896773815155, -0.005904967896640301, -0.003093103179708123, -0.0008985534077510238, -0.006990854628384113, -0.009809620678424835, -0.023348866030573845, -0.00022635281493421644, -0.0006712805479764938, -0.05384485423564911, -0.0059318686835467815, -0.0003680505615193397, -0.002170232590287924, -0.0019902437925338745, -0.002063171239569783, -8.093983342405409e-05, -5.245071224635467e-05, -0.0002212279650848359, -0.00013052565918769687, -0.0005688241217285395, -0.0009545299108140171, -0.00015078838623594493, -0.0012546057114377618, -0.0048250192776322365, -0.0012722263345494866, -0.0002933310461230576, -0.0035379454493522644, -0.0008702066843397915, -0.0003594706067815423, -7.510157047363464e-06, -0.002964271232485771, -0.0007560970261693001, -0.0033021229319274426, -0.0014971011551097035, -0.001077190856449306, -0.00022230061586014926, -0.0004657614335883409, -0.0019587157294154167, -0.0006536492728628218, -0.0008760428754612803, -0.015039859339594841, -0.0009997851448133588, -0.35933369398117065, -1.0381032228469849, -2.560606002807617, -2.025977849960327, -0.43743085861206055, -0.0015351902693510056, -0.23574426770210266, -0.006275827530771494, -0.0011536378879100084, -0.0004117832868359983, -0.24093544483184814, -2.704127073287964, -0.8660055994987488, -0.08789974451065063, -0.0011329191038385034, -0.029696838930249214, -0.03129032254219055, -0.038740284740924835, -0.0011804286623373628, -2.1815061700181104e-05, -0.0065776268020272255, -0.010177619755268097, -0.001650639227591455, -0.0001429217227268964, -0.004187269136309624, -2.2411095415009186e-05, -1.6689286894688848e-06, -1.279889702796936, -0.0010673070792108774, -0.000454799213912338, -0.013576553203165531, -1.9432709217071533, -0.002155839465558529, -8.713819261174649e-05, -3.886147169396281e-05, -8.177422569133341e-05, -0.39367496967315674, -1.4164965152740479, -7.283422019099817e-05, -4.672895011026412e-05, -1.022204875946045, -0.07108748704195023, -0.028100118041038513, -0.0039438814856112, -0.004417541902512312, -0.10787428170442581, -0.28155040740966797, -0.006386939901858568, -0.00021979777375236154, -0.1864316165447235, -0.13955944776535034, -0.005853297654539347, -0.0005054388311691582, -2.2649508537142538e-05, -4.100715523236431e-05, -2.276871418871451e-05, -0.009601366706192493, -0.00027700403006747365, -7.807903602952138e-05, -0.0016945539973676205, -1.311301275563892e-06, -2.0265558760002023e-06, -0.0012311505852267146, -0.0002890407631639391, -0.0003351603518240154, -0.16067716479301453, -0.0008101756684482098, -0.00018404220463708043, -1.1920928244535389e-07, -5.149708886165172e-05, -2.2649508537142538e-05, -0.0021534604020416737, -0.009010723792016506, -1.1205610462639015e-05, -8.583032467868179e-06, -0.0003636414185166359, -0.0009045085171237588, -0.0013944911770522594, -9.142934868577868e-05, -0.00015293381875380874, -0.00013863079948350787, -0.0018880413845181465, -0.0003651905863080174, -0.00026222606538794935, -0.01770700514316559, -0.0009816833771765232, -0.1843847632408142, -1.1853383779525757, -1.9857048988342285, -0.9367550015449524, -1.4923254251480103, -1.1208150386810303, -0.3887471556663513, -0.0006392342620529234, -0.3476303219795227, -0.7189200520515442, -0.510735809803009, -0.025872820988297462, -0.5132288336753845, -0.0010109796421602368, -6.23445157543756e-05, -0.010146348737180233, -0.0001517419150331989, -0.00014101465058047324, -0.014855477958917618, -0.4407094419002533, -1.6689286894688848e-06, -0.00037722624256275594, -3.9934315282152966e-05, -0.007067324128001928, -0.0005198557628318667], "finish_reason": "length"}], "metrics": {"energy": 253.32248786163322, "energy_per_token": 0.9895409682095048, "time": 10.944723, "time_per_token": 0.04275282421875}}
{"outputs": [{"text": "# Define regular expression patterns to identify processed files\n    regex_patterns = [r'_processed\\..*']\n\n    # Iterate over files in source directory\n    for root, dirs, files in os.walk(source_dir):\n        for file in files:\n            # Get absolute path of processed file\n            processed_path = os.path.join(root, file)\n            # Iterate over regular expression patterns to identify processed files\n            for regex in regex_patterns:\n                if re.search(regex, processed_path):\n                    # Archive processed file\n                    archive_path = os.path.join(target_dir, f'{file}.zip')\n                    zipfile.ZipFile(archive_path, 'w').write(processed_path)\n                    os.remove(processed_path)\n                    break\n            else:  # no break\n                continue\n            break\n        else:  # no break\n            continue\n        break", "tokens": ["#", " Define", " regular", " expression", " patterns", " to", " identify", " processed", " files", "\n", "    ", "regex", "_", "patterns", " =", " [", "r", "'_", "processed", "\\", ".", ".", "*", "']", "\n", "\n", "    ", "#", " Iter", "ate", " over", " files", " in", " source", " directory", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "#", " Get", " absolute", " path", " of", " processed", " file", "\n", "            ", "processed", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "#", " Iter", "ate", " over", " regular", " expression", " patterns", " to", " identify", " processed", " files", "\n", "            ", "for", " regex", " in", " regex", "_", "patterns", ":", "\n", "                ", "if", " re", ".", "search", "(", "regex", ",", " processed", "_", "path", "):", "\n", "                ", "    ", "#", " Archive", " processed", " file", "\n", "                ", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " f", "'{", "file", "}", ".", "zip", "')", "\n", "                ", "    ", "zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", ".", "write", "(", "processed", "_", "path", ")", "\n", "                ", "    ", "os", ".", "remove", "(", "processed", "_", "path", ")", "\n", "                ", "    ", "break", "\n", "            ", "else", ":", "  ", "#", " no", " break", "\n", "                ", "continue", "\n", "            ", "break", "\n", "        ", "else", ":", "  ", "#", " no", " break", "\n", "            ", "continue", "\n", "        ", "break", "\n", "\n", "if"], "logprobs": [-1.5353851318359375, -3.029301643371582, -2.0649566650390625, -0.6869977712631226, -2.6317224502563477, -1.313467025756836, -2.026505708694458, -0.23606939613819122, -0.022523419931530952, -0.23718830943107605, -0.004403537139296532, -3.1686325073242188, -0.3436337411403656, -0.5149625539779663, -0.032205648720264435, -0.16040608286857605, -1.3748379945755005, -1.5281676054000854, -0.11156411468982697, -1.2246665954589844, -0.17679890990257263, -1.9894511699676514, -0.4777325987815857, -1.7879983186721802, -0.013840769417583942, -0.197355255484581, -0.0003351603518240154, -0.23457328975200653, -2.098914623260498, -0.0025315401144325733, -0.5287585258483887, -1.076486587524414, -0.17431272566318512, -0.8964766263961792, -0.17901074886322021, -0.21732228994369507, -0.0005495230434462428, -0.2153686136007309, -0.9076165556907654, -0.002183317206799984, -0.7143666744232178, -0.00020728347590193152, -0.0001565095444675535, -0.06056223809719086, -0.0005297449533827603, -0.004102386999875307, -1.6689286894688848e-06, -0.00010322991875000298, -0.0007331067463383079, -0.0037696745712310076, -1.0728830375228426e-06, -5.8412379075889476e-06, -0.030899962410330772, -0.005501013249158859, -0.016621561720967293, -0.24661359190940857, -0.410437673330307, -0.13273723423480988, -0.006483590696007013, -0.00019369633810129017, -0.009831694886088371, -0.024284519255161285, -0.9234939217567444, -3.0470919609069824, -2.0985300540924072, -0.31030941009521484, -0.8510443568229675, -3.207899808883667, -0.04727217182517052, -0.033370133489370346, -0.0004101150552742183, -1.6044073104858398, -0.0008457897347398102, -1.831405520439148, -0.0010751663940027356, -0.006099419668316841, -1.2516897186287679e-05, -1.4185804502631072e-05, -0.0019535997416824102, -0.011538084596395493, -8.523101132595912e-05, -0.01410550344735384, -0.00021896349790040404, -0.0008929556352086365, -0.0003779412363655865, -0.002146323211491108, -0.8229844570159912, -0.5817510485649109, -1.6991238594055176, -0.0006107610533945262, -0.02618606761097908, -0.9475531578063965, -0.437347948551178, -0.0019471748964861035, -1.5762524604797363, -1.9095773696899414, -0.1535460650920868, -0.043985359370708466, -0.03097531944513321, -0.0005843124235980213, -0.029541414231061935, -0.9001877903938293, -1.6801440715789795, -0.0010336062405258417, -0.00018273114983458072, -4.446407547220588e-05, -9.07141511561349e-05, -0.0009172523277811706, -0.001997025217860937, -2.5992493629455566, -0.028956875205039978, -1.6689160474925302e-05, -0.3499571979045868, -0.00029595286468975246, -0.0020061859395354986, -0.0005841932725161314, -0.7496280074119568, -1.549708758830093e-05, -2.276871418871451e-05, -0.032111916691064835, -0.004782191012054682, -0.0031724858563393354, -0.0005285535007715225, -0.05407842621207237, -3.1672701835632324, -0.09922775626182556, -0.03700367733836174, -0.29407939314842224, -0.0014246086357161403, -0.00014053787162993103, -0.41101863980293274, -0.03667518496513367, -0.0883769616484642, -0.0015851801726967096, -0.17259575426578522, -0.00027223696815781295, -2.7656173188006505e-05, -0.000550357042811811, -0.004595907870680094, -0.0002540027489885688, -0.035685956478118896, -3.6954811548639555e-06, -2.7418097943154862e-06, -0.00030655929003842175, -2.018200159072876, -0.23610393702983856, -2.1844189167022705, -0.17251549661159515, -0.010852836072444916, -0.07907579839229584, -0.0011559001868590713, -0.0068642995320260525, -0.017263034358620644, -0.00023314618738368154, -1.9170089960098267, -0.5640522241592407, -0.0056721922010183334, -0.4239838719367981, -0.00024530262453481555, -0.0012384133879095316, -0.0016891986597329378, -0.014965170994400978, -0.00011657988943625242, -0.00037508129025809467, -0.0005031750188209116, -0.07601059973239899, -0.021864671260118484, -0.20470157265663147, -0.005194381810724735, -0.0005772831500507891, -0.00021753329201601446, -0.045839596539735794, -9.775113539944869e-06, -3.3378546504536644e-06, -0.028045987710356712, -0.014530318789184093, -0.22744698822498322, -0.00498563889414072, -2.1078908443450928, -1.7881377516459906e-06, -0.04599171504378319, -9.333651541965082e-05, -0.002594797173514962, -2.7179348762729205e-05, -5.960462772236497e-07, -0.010955304838716984, -0.13068248331546783, -0.7853418588638306, -0.01029384508728981, -0.7177362442016602, -0.14784154295921326, -2.447767972946167, -0.12650617957115173, -1.728519782773219e-05, -2.1480698585510254, -0.0002703301142901182, -2.049992322921753, -0.3306981027126312, -0.4543742835521698, -0.0006424508756026626, -0.5144954919815063, -1.0456318855285645, -0.13742756843566895, -0.041613344103097916, -1.0898622274398804, -0.342550665140152, -0.0226533692330122, -2.8490614567999728e-05, -0.032304223626852036, -0.00014053787162993103, -0.042851679027080536, -0.05700274929404259, -0.031306151300668716, -0.0006509092636406422, -0.002718089148402214, -0.008656122721731663, -0.003050200641155243, -0.0013302058214321733, -0.05044122412800789, -0.845311164855957, -2.8439769744873047], "finish_reason": "stop"}], "metrics": {"energy": 249.00615890026077, "energy_per_token": 1.1267247009061574, "time": 10.309195, "time_per_token": 0.04664794117647059}}
{"outputs": [{"text": "archive_path = os.path.join(target_dir, archive_name)\n\n    # Create an empty archive file\n    with zipfile.ZipFile(archive_path, 'w') as archive:\n        for root, dirs, files in os.walk(source_dir):\n            # Add all processed files to the archive\n            for file_name in files:\n                if file_name.endswith('_processed.csv'):\n                    file_path = os.path.join(root, file_name)\n                    archive.write(file_path, os.path.relpath(file_path, start=source_dir))\n\n    return archive_path", "tokens": ["archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "#", " Create", " an", " empty", " archive", " file", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " archive", ":", "\n", "        ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "            ", "#", " Add", " all", " processed", " files", " to", " the", " archive", "\n", "            ", "for", " file", "_", "name", " in", " files", ":", "\n", "                ", "if", " file", "_", "name", ".", "end", "sw", "ith", "('", "_", "processed", ".", "csv", "')", ":", "\n", "                ", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", "_", "name", ")", "\n", "                ", "    ", "archive", ".", "write", "(", "file", "_", "path", ",", " os", ".", "path", ".", "rel", "path", "(", "file", "_", "path", ",", " start", "=", "source", "_", "dir", "))", "\n", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "def"], "logprobs": [-1.8950366973876953, -0.10388243198394775, -0.17897087335586548, -0.03024902381002903, -0.11855246126651764, -3.111314072157256e-05, -0.0002747396647464484, -0.011239075101912022, -0.009174097329378128, -0.0008465044084005058, -0.012119464576244354, -3.933898824470816e-06, -1.0251946150674485e-05, -0.000593962671700865, -0.012807612307369709, -3.4570634852570947e-06, -2.706014311115723e-05, -0.000809699238743633, -0.010267768986523151, -0.7208350300788879, -0.00027176024741493165, -0.9394878149032593, -1.7479469776153564, -1.4740207195281982, -0.7002627849578857, -1.105758786201477, -1.559942364692688, -0.3568762242794037, -0.0004002247005701065, -0.2672306001186371, -0.34181898832321167, -1.3708974620385561e-05, -1.7404405298293568e-05, -0.003608265658840537, -0.0011432785540819168, -0.00017021637177094817, -0.000802075956016779, -0.003076346591114998, -4.124556289752945e-05, -0.0003513672563713044, -0.0003543464408721775, -0.05179387703537941, -0.009041675366461277, -0.15485768020153046, -8.308542601298541e-05, -0.2390684187412262, -0.09370880573987961, -0.0014866263372823596, -0.01665368676185608, -0.2096303552389145, -1.1990779638290405, -0.0014447261346504092, -1.196523666381836, -0.00013004888023715466, -0.0002029928145930171, -0.020853085443377495, -0.00020454221521504223, -0.0023390096612274647, -1.156323378381785e-05, -3.707340147229843e-05, -0.0015353093622252345, -0.002529280725866556, -5.960462772236497e-07, -1.0490362910786644e-05, -0.03303929418325424, -0.006983514875173569, -0.004996788688004017, -2.627063035964966, -1.9562463760375977, -0.7066650390625, -0.6094863414764404, -0.007137515116482973, -0.15291330218315125, -0.002648538677021861, -0.008636031299829483, -0.03641107305884361, -0.0005511910421773791, -0.01077759824693203, -0.43890804052352905, -1.1298588514328003, -0.08060279488563538, -0.0002531684876885265, -0.030885284766554832, -8.928377064876258e-05, -0.0012821081327274442, -0.0007325111655518413, -0.1900189369916916, -0.17479948699474335, -0.0010783816687762737, -0.0003970073303207755, -0.0043273381888866425, -0.03533022105693817, -7.867782187531702e-06, 0.0, -0.054178595542907715, -0.07461122423410416, -0.003830003086477518, -0.7337767481803894, -1.4512968063354492, -0.008000588975846767, -0.06974101811647415, -0.009212840348482132, -0.0006137394811958075, -0.0003995097358711064, -0.6362496614456177, -0.007819044403731823, -0.002376353135332465, -0.00039736481267027557, -0.00040058218291960657, -7.629365427419543e-06, -5.006777428206988e-06, -0.0009385710000060499, -0.0007323920144699514, -5.054346183896996e-05, -0.007039506919682026, -0.00013302871957421303, -0.00029404606902971864, -6.556489552167477e-06, -4.410734163684538e-06, -9.965400386136025e-05, -0.002173920162022114, -0.007051581051200628, -0.00024244230007752776, -0.05749155580997467, -0.02634189836680889, -0.0011654258705675602, -2.3364747903542593e-05, -0.002055676421150565, -1.1801649634435307e-05, -0.0002451834443490952, -0.26890507340431213, -0.6156940460205078, -0.0003502947511151433, -8.594620157964528e-05, -0.0028622872196137905, -0.025667419657111168, -3.397406908334233e-05, -4.2676016164477915e-05, -0.002667323686182499, -3.576272320060525e-06, -0.005826749838888645, -0.0011235122801735997, -1.959745168685913, -0.001566374790854752, -0.15349075198173523, -4.7205765440594405e-05, -3.2186455882765586e-06, -0.00849951896816492, -0.0039041026029735804, -0.11327621340751648, -0.011561652645468712, -0.05304420739412308, -0.005750778131186962, -0.008287917822599411, -0.00040618274942971766, -0.5447296500205994, -0.0044513666070997715, -0.5675832033157349], "finish_reason": "stop"}], "metrics": {"energy": 154.48200903701786, "energy_per_token": 0.9777342344115054, "time": 6.52555, "time_per_token": 0.041300949367088606}}
{"outputs": [{"text": "archive_path = os.path.join(target_dir, archive_name)\n\n    # Find the processed files in the source directory\n    processed_files = [\n        os.path.join(source_dir, f) for f in os.listdir(source_dir) if os.path.isfile(f) and '_processed' in f\n    ]\n\n    # Zip the processed files and save them to the archive\n    with zipfile.ZipFile(archive_path, 'w') as archive:\n        for f in processed_files:\n            archive.write(f, os.path.relpath(f, source_dir))\n\n    return archive_path", "tokens": ["archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "#", " Find", " the", " processed", " files", " in", " the", " source", " directory", "\n", "    ", "processed", "_", "files", " =", " [", "\n", "        ", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " f", ")", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " os", ".", "path", ".", "is", "file", "(", "f", ")", " and", " '_", "processed", "'", " in", " f", "\n", "    ", "]", "\n", "\n", "    ", "#", " Zip", " the", " processed", " files", " and", " save", " them", " to", " the", " archive", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " archive", ":", "\n", "        ", "for", " f", " in", " processed", "_", "files", ":", "\n", "            ", "archive", ".", "write", "(", "f", ",", " os", ".", "path", ".", "rel", "path", "(", "f", ",", " source", "_", "dir", "))", "\n", "\n", "    ", "return", " archive", "_", "path", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.8950366973876953, -0.10388243198394775, -0.17897087335586548, -0.03024902381002903, -0.11855246126651764, -3.111314072157256e-05, -0.0002747396647464484, -0.011239075101912022, -0.009174097329378128, -0.0008465044084005058, -0.012119464576244354, -3.933898824470816e-06, -1.0251946150674485e-05, -0.000593962671700865, -0.012807612307369709, -3.4570634852570947e-06, -2.706014311115723e-05, -0.000809699238743633, -0.010267768986523151, -0.7208350300788879, -0.00027176024741493165, -0.9394878149032593, -2.3290598392486572, -2.425363302230835, -0.5391882061958313, -0.033286772668361664, -0.2695688009262085, -0.03936279937624931, -0.029449744150042534, -0.02080521732568741, -0.2520394027233124, -0.000582644424866885, -0.6034806370735168, -0.0014030622551217675, -0.029936237260699272, -0.013072502799332142, -0.9906052947044373, -0.6612982153892517, -0.0022461204789578915, -0.513060986995697, -4.291525328881107e-06, -3.349725011503324e-05, -0.0002416080387774855, -0.03133480250835419, -0.00023123928986024112, -0.038161102682352066, -0.0014352031284943223, -0.00016604475968051702, -0.00020895205670967698, -1.2159892320632935, -0.10335827618837357, -0.48035839200019836, -0.0010035961167886853, -0.001384372473694384, -0.008625749498605728, -0.00020704510097857565, -0.00011896379146492109, -4.768370445162873e-07, -0.00010716341057559475, -0.0014642480527982116, -2.47952248173533e-05, -2.264974000354414e-06, -0.0018648391123861074, -1.2825418710708618, -2.7242867946624756, -0.00022718709078617394, -0.00046230596490204334, -0.002306421985849738, -0.01796182058751583, -0.00046826363541185856, -0.000198821333469823, -2.349219799041748, -0.0031307751778513193, -0.11282937973737717, -0.6937642693519592, -0.003388260956853628, -0.005881503224372864, -0.0035173948854207993, -0.08597242832183838, -0.051128312945365906, -0.0061663612723350525, -0.00012790338951162994, -0.0005840741214342415, -0.03628703951835632, -0.00014840454969089478, -0.19934655725955963, -1.7075096368789673, -0.3173117935657501, -0.16684682667255402, -0.0007843278581276536, -0.8591004014015198, -0.21917115151882172, -0.9600387215614319, -0.528564453125, -0.08675730973482132, -0.4693935513496399, -0.3867212235927582, -0.0005292683490552008, -0.10392100363969803, -0.13806605339050293, -1.823885577323381e-05, -1.1920858014491387e-05, -0.002226970624178648, -0.00038652101648040116, -6.3774932641536e-05, -0.0007996936910785735, -0.003412734717130661, -2.90866428258596e-05, -0.00025733973598107696, -8.976056415122002e-05, -0.03297574073076248, -0.0027023961301892996, -0.294930100440979, -2.13382354559144e-05, -0.6933202743530273, -0.018227221444249153, -0.0009533389820717275, -0.0006161222117953002, -0.03215959295630455, -0.7890027761459351, -0.02498713880777359, -0.0009137984015978873, -2.7418097943154862e-06, -2.0265558760002023e-06, -4.5536911784438416e-05, -0.0005858612130396068, -0.00026842328952625394, -0.055490121245384216, -0.002895213197916746, -0.0010480155469849706, -4.1960789531003684e-05, -0.006113637704402208, -0.6333885788917542, -0.28281888365745544, -8.344646857949556e-07, -4.410646579344757e-05, -0.00029690624796785414, -0.5409767031669617, -4.708655978902243e-05, -5.2569914259947836e-05, -0.008221236988902092, -0.0011155341053381562, -0.21219892799854279, -8.487341256113723e-05, -2.145764938177308e-06, -0.014508113265037537, -0.009413854219019413, -0.044262420386075974, -0.005558510776609182, -0.06391207873821259, -0.015096458606421947, -0.016525885090231895, -0.0002522150462027639, -1.1431306600570679, -2.3841855067985307e-07, -4.768370445162873e-07, -4.8993817472364753e-05, -0.00019596086349338293, -1.604735255241394, -0.0035849844571202993], "finish_reason": "stop"}], "metrics": {"energy": 151.77309672546394, "energy_per_token": 0.9485818545341497, "time": 6.7394247, "time_per_token": 0.042121404375}}
{"outputs": [{"text": "# Create the target directory if it doesn't exist\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    # Identify processed files in the source directory\n    files_to_archive = []\n    for root, _, files in os.walk(source_dir):\n        for file_name in files:\n            if file_name.endswith('_processed.zip') or file_name.endswith('_processed.txt'):\n                file_path = os.path.join(root, file_name)\n                files_to_archive.append(file_path)\n\n    # Zip and rename the files\n    archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w', zipfile.ZIP_DEFLATED) as archive:\n        for file_path in files_to_archive:\n            archive.write(file_path, os.path.relpath(file_path, source_dir))\n\n    return archive_path<|endof", "tokens": ["#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Ident", "ify", " processed", " files", " in", " the", " source", " directory", "\n", "    ", "files", "_", "to", "_", "archive", " =", " []", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " file", "_", "name", " in", " files", ":", "\n", "            ", "if", " file", "_", "name", ".", "end", "sw", "ith", "('", "_", "processed", ".", "zip", "')", " or", " file", "_", "name", ".", "end", "sw", "ith", "('", "_", "processed", ".", "txt", "')", ":", "\n", "                ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", "_", "name", ")", "\n", "                ", "files", "_", "to", "_", "archive", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "#", " Zip", " and", " rename", " the", " files", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " archive", ":", "\n", "        ", "for", " file", "_", "path", " in", " files", "_", "to", "_", "archive", ":", "\n", "            ", "archive", ".", "write", "(", "file", "_", "path", ",", " os", ".", "path", ".", "rel", "path", "(", "file", "_", "path", ",", " source", "_", "dir", "))", "\n", "\n", "    ", "return", " archive", "_", "path", "<", "|", "end", "of"], "logprobs": [-1.5353851318359375, -1.8879698514938354, -1.1654751300811768, -1.7381716966629028, -0.09763576090335846, -0.11731074750423431, -0.01487156841903925, -0.1932392716407776, -0.0006708040600642562, -5.960446742392378e-06, -0.06728673726320267, -0.08304933458566666, -0.0008225633064284921, -0.16574379801750183, -0.010340685024857521, -0.001213529147207737, -2.50339189733495e-06, -5.125868119648658e-05, -0.0018164102220907807, -0.15331242978572845, -0.0004451475979294628, -0.0028062984347343445, -3.933898824470816e-06, -3.3378546504536644e-06, -0.003459779778495431, -0.001500314916484058, -0.0005779979983344674, -0.006409090012311935, -6.031808152329177e-05, -0.03247895464301109, -1.4424220353248529e-05, -0.0004751745145767927, -1.680836794548668e-05, -0.0003651905863080174, -7.271740287251305e-06, -2.0265558760002023e-06, -0.03762279823422432, -0.0014998388942331076, -0.09532678127288818, -0.00217475276440382, -0.14184683561325073, -3.773909330368042, -0.0029750869143754244, -0.8168725371360779, -0.00880537461489439, -0.5107443332672119, -0.05925128608942032, -0.019441409036517143, -0.011212081648409367, -0.1688273698091507, -0.0005353448214009404, -1.5864577293395996, -0.9979417324066162, -0.07415639609098434, -2.706014311115723e-05, -0.10722500085830688, -0.043584518134593964, -0.3083816170692444, -0.0028204445261508226, -0.009174570441246033, -0.031467195600271225, -0.878159761428833, -0.0009346407605335116, -0.6732555627822876, -0.030019650235772133, -0.3255343437194824, -0.000899982638657093, -0.0019972631707787514, -1.8000440832111053e-05, -9.178694017464295e-05, -0.0003044141922146082, -0.0013327058404684067, -8.344646857949556e-07, -3.099436753473128e-06, -0.011263947002589703, -0.003131369361653924, -0.0002681849291548133, -0.020217301324009895, -0.26359352469444275, -0.8647156953811646, -0.06680336594581604, -0.00013565097469836473, -0.0028974716551601887, -0.00010954733443213627, -0.00044109628652222455, -0.00032074074260890484, -0.24847571551799774, -0.3071943521499634, -0.001010503270663321, -0.0007151191821321845, -0.008158689364790916, -0.05145752802491188, -7.986990567587782e-06, 0.0, -0.11138251423835754, -0.14598000049591064, -0.0057983058504760265, -0.7385233640670776, -3.211664915084839, -0.006577745545655489, -2.37808895111084, -0.03780004382133484, -6.6756979322235566e-06, -3.0636318115284666e-05, -0.00515050208196044, -0.003678224515169859, -1.0967194612021558e-05, -1.1920928244535389e-07, -0.016569621860980988, -0.23125863075256348, -0.033041831105947495, -0.19816382229328156, -2.429239273071289, -0.006117666140198708, -0.11215027421712875, -0.006174654699862003, -0.0006842655711807311, -1.1735962629318237, -0.01670655980706215, -0.0064086164347827435, -0.0005249790847301483, -0.0009042703313753009, -5.125986263010418e-06, -1.0251946150674485e-05, -0.001342110801488161, -0.0010799296433106065, -3.218599158572033e-05, -0.002412862842902541, -0.00016485285595990717, -0.00027509720530360937, -9.536738616588991e-07, -2.622600959512056e-06, -0.0002150304353563115, -0.0033646184019744396, -0.00119066855404526, -0.06418389827013016, -6.818538531661034e-05, -2.312633478140924e-05, -6.318072337307967e-06, -2.2649508537142538e-05, -0.0002464944263920188, -0.00012194366718176752, -0.015219275839626789, -0.00909589882940054, -2.7418097943154862e-06, -0.0030359390657395124, -0.0016413562698289752, -0.0011197017738595605, -0.02083452232182026, -0.002477316651493311, -0.03179497644305229, -1.452972173690796, -2.873033285140991, -2.923764705657959, -0.4580543041229248, -0.5623902082443237, -0.4933946132659912, -0.0010962436208501458, -0.39809927344322205, -0.05851241573691368, -0.035596344619989395, -0.0012732979375869036, -0.02432628720998764, -3.576272320060525e-06, -2.038458114839159e-05, -0.00025662468397058547, -0.0007888542604632676, -7.283422019099817e-05, -0.0069285850040614605, -4.768370445162873e-07, -9.536738616588991e-07, -0.00016044282529037446, -0.01924789696931839, -3.814689989667386e-06, -2.407998726994265e-05, -0.0005653690313920379, -0.003100709058344364, -0.01307897362858057, -0.11293373256921768, -0.18767474591732025, -5.125868119648658e-05, -1.4543427823809907e-05, -0.004314044490456581, -0.00036423723213374615, -7.92710343375802e-05, -0.0004533693427219987, -0.001967995660379529, -2.825220326485578e-05, -0.0002669931564014405, -0.00013279033009894192, -0.0482393354177475, -0.007387818302959204, -0.945963978767395, -5.876845170860179e-05, -0.3946297764778137, -7.664863369427621e-05, -6.6756979322235566e-06, -0.0013377059949561954, -0.006140651647001505, -0.00020728347590193152, -0.0020824430976063013, -0.00017331528943032026, -0.0002857038634829223, -0.015990354120731354, -3.58813522325363e-05, -0.6791470646858215, -0.040530432015657425, -0.0006765222642570734, -0.0005443998379632831, -0.03407907485961914, -0.007475379854440689, -0.0667809545993805, -0.04250933602452278, -0.00029404606902971864, -0.0020468730945140123, -9.274052717955783e-05, -1.0728830375228426e-06, -2.264974000354414e-06, -2.8729025871143676e-05, -4.5298504119273275e-05, -0.00012218205665703863, -0.0005211663665249944, -0.05788404867053032, -0.01642574556171894, -0.000727508042473346, -0.0001006075763143599, -0.006240643095225096, -2.50339189733495e-06, -0.0002469711471349001, -0.28051310777664185, -0.1705121099948883, -3.576278118089249e-07, -2.5629668016335927e-05, -6.890059739816934e-05, -0.24856050312519073, -5.8530047681415454e-05, -3.4689302992774174e-05, -0.0032302364706993103, -1.1920922133867862e-06, -0.00010168035078095272, -0.002041757572442293, -0.32709842920303345, -0.00020621081057470292, -1.1444026313256472e-05, -0.013214980252087116, -0.005970619153231382, -0.13494016230106354, -0.01751444675028324, -0.14140762388706207, -0.00929976999759674, -0.0037978205364197493, -0.0004142856632824987, -1.191744089126587, -2.3841855067985307e-07, -5.960462772236497e-07, -1.5616295058862306e-05], "finish_reason": "length"}], "metrics": {"energy": 270.1075988016129, "energy_per_token": 1.0551078078188003, "time": 10.939679, "time_per_token": 0.04273312109375}}
{"outputs": [{"text": "# Check if the target directory exists\n    if not os.path.isdir(target_dir):\n        os.mkdir(target_dir)\n    # Archive the files\n    file_list = []\n    for root, _, filenames in os.walk(source_dir):\n        for filename in filenames:\n            if re.search(r\"_processed\\.(jpg|jpeg|png|tif|tiff)$\", filename):\n                file_list.append(os.path.join(root, filename))\n\n    zip_file = zipfile.ZipFile(os.path.join(target_dir, archive_name), 'w')\n    for file_name in file_list:\n        zip_file.write(file_name)\n    zip_file.close()\n    return os.path.join(target_dir, archive_name)", "tokens": ["#", " Check", " if", " the", " target", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "target", "_", "dir", ")", "\n", "    ", "#", " Archive", " the", " files", "\n", "    ", "file", "_", "list", " =", " []", "\n", "    ", "for", " root", ",", " _", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "if", " re", ".", "search", "(", "r", "\"", "_", "processed", "\\", ".", "(", "jpg", "|", "jpeg", "|", "png", "|", "tif", "|", "t", "iff", ")$", "\"", ",", " filename", "):", "\n", "                ", "file", "_", "list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " filename", "))", "\n", "\n", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "w", "')", "\n", "    ", "for", " file", "_", "name", " in", " file", "_", "list", ":", "\n", "        ", "zip", "_", "file", ".", "write", "(", "file", "_", "name", ")", "\n", "    ", "zip", "_", "file", ".", "close", "()", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.5353851318359375, -1.8450106382369995, -0.8298172354698181, -0.8711290955543518, -1.3695679903030396, -0.055761758238077164, -0.13314604759216309, -0.7905581593513489, -0.0013827058719471097, -0.023294596001505852, -0.04492151364684105, -0.002371120499446988, -3.099436753473128e-06, -0.00011431517486926168, -0.001498291501775384, -1.7774410247802734, -9.60780744208023e-05, -0.0001494772732257843, -0.003567642066627741, -4.172316494077677e-06, -2.9802276912960224e-06, -0.004520554561167955, -0.0022802562452852726, -0.0008147019543685019, -0.4864806830883026, -0.0002826052950695157, -2.503028392791748, -2.098061486321967e-05, -0.00021324267436284572, -0.0013234198559075594, -9.298280929215252e-06, -1.4781842764932662e-05, -0.006899935193359852, -0.029536783695220947, -2.180333137512207, -0.33358874917030334, -3.59031343460083, -1.2869806289672852, -0.7375277280807495, -0.6593294143676758, -0.0029592791106551886, -2.34232497215271, -0.031316664069890976, -0.43392515182495117, -0.02321586385369301, -0.26952454447746277, -0.03391764312982559, -0.015950582921504974, -0.10536839812994003, -0.8810468912124634, -0.002900324296206236, -1.677238941192627, -0.05670756846666336, -2.800995349884033, -0.0005224770284257829, -6.01988795096986e-05, -0.0017244244227185845, -0.007565181702375412, -0.00023648326168768108, -4.303362584323622e-05, -0.0016035091830417514, -0.003244970692321658, -5.602820692729438e-06, -3.2186455882765586e-06, -0.020100003108382225, -0.008124753832817078, -0.0011545903980731964, -0.0693998634815216, -0.15822583436965942, -0.00030524839530698955, -0.009352089837193489, -3.6954811548639555e-06, -5.245195097813848e-06, -9.035655966727063e-05, -0.0023394853342324495, -0.0012961566681042314, -0.42998963594436646, -1.8732905387878418, -2.4914430468925275e-05, -0.23080682754516602, -0.37191081047058105, -0.03733803331851959, -3.0137763023376465, -0.38784655928611755, -0.02570703998208046, -2.0404815673828125, -0.05747906118631363, -1.4957222938537598, -1.9794716835021973, -0.007494902703911066, -0.5114035606384277, -0.020780932158231735, -0.3447461724281311, -0.34161055088043213, -2.476635456085205, -0.1187371015548706, -0.11827173084020615, -0.003798770485445857, -0.755415678024292, -0.0033610539976507425, -0.00010764019680209458, -0.013502813875675201, -0.44675979018211365, -0.02217661216855049, -0.0010898133041337132, -0.1628861129283905, -0.02304067090153694, -0.14446602761745453, -0.0011816193582490087, -0.001675750594586134, -0.015800632536411285, -0.04176484793424606, -2.8609820219571702e-05, -0.00036113892565481365, -0.0014988866169005632, -0.022935472428798676, -0.00016425691137555987, -0.008773588575422764, -0.001099935034289956, -0.00501908827573061, -0.0045904493890702724, -0.004648237023502588, -2.2737796306610107, -0.0046006543561816216, -2.7089385986328125, -0.3589536249637604, -0.4525112807750702, -0.2554674446582794, -0.2893989384174347, -0.0009706076816655695, -4.660974445869215e-05, -0.008471742272377014, -0.0005446380819194019, -6.794698856538162e-05, -0.014500359073281288, -0.2888471186161041, -0.0002996472467202693, -0.0001232548092957586, -0.000797192333266139, -0.0016465928638353944, -0.0003575639275368303, -0.012211088091135025, -3.814689989667386e-06, -1.4305104514278355e-06, -0.0017266854410991073, -0.012187888845801353, -3.6954811548639555e-06, -2.1457441107486375e-05, -0.006761528551578522, -0.0002571013756096363, -0.07636518776416779, -0.01515223365277052, -0.14253109693527222, -0.007126389071345329, -0.05649556219577789, -0.11981917172670364, -0.7001020312309265, -1.466133713722229, -1.338229775428772, -0.0005969410995021462, -0.001587798586115241, -3.099436753473128e-06, -6.9141146923357155e-06, -0.0001839230244513601, -0.0006102845072746277, -0.0010543270036578178, -0.07392037659883499, -0.00027044929447583854, -0.0025216706562787294, -6.115249561844394e-05, -0.0005818104837089777, -0.0001691436773398891, -0.019066277891397476, -1.5258672647178173e-05, -5.185469490243122e-05, -0.3612445592880249, -0.004695223644375801, -0.27546578645706177, -0.020060043781995773, -0.0003773453936446458, -1.823885577323381e-05, -3.075552376685664e-05, -0.00030286493711173534, -0.0007615765207447112, -0.005575463175773621, -0.42722830176353455, -0.15915866196155548, -0.11293245106935501, -1.5497195136049413e-06, -0.00013267113536130637, -0.0008378094644285738, -0.06058512628078461, -0.0005461869877763093, -0.003929157741367817, -2.0146166207268834e-05, -1.0728830375228426e-06, -0.00035661060246638954, -0.0037260884419083595, -4.529942543740617e-06, -2.5152843591058627e-05, -1.0908913612365723, -2.3841855067985307e-07, -7.152555099310121e-07, -1.728519782773219e-05, -0.00045074793160893023, -0.2255968302488327], "finish_reason": "stop"}], "metrics": {"energy": 216.00107295703867, "energy_per_token": 1.0485488978497024, "time": 8.620996, "time_per_token": 0.04184949514563107}}
{"outputs": [{"text": "try:\n        # Get the names of all the processed files in the source directory\n        processed_files = [\n            os.path.join(source_dir, filename)\n            for filename in os.listdir(source_dir)\n            if filename.endswith('_processed.json')\n        ]\n\n        # If there are no processed files, return None\n        if not processed_files:\n            return None\n\n        # Create the archive and save it to the target directory\n        with zipfile.ZipFile(os.path.join(target_dir, archive_name), 'w') as archive:\n            for file in processed_files:\n                archive.write(file, os.path.relpath(file, source_dir))\n\n        # Return the path to the archive file\n        return os.path.join(target_dir, archive_name)\n\n    except Exception as e:\n        # Print the exception and return None\n        print(f\"Error: {str(e)}\")\n        return None", "tokens": ["try", ":", "\n", "        ", "#", " Get", " the", " names", " of", " all", " the", " processed", " files", " in", " the", " source", " directory", "\n", "        ", "processed", "_", "files", " =", " [", "\n", "            ", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", ")", "\n", "            ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", "\n", "            ", "if", " filename", ".", "end", "sw", "ith", "('", "_", "processed", ".", "json", "')", "\n", "        ", "]", "\n", "\n", "        ", "#", " If", " there", " are", " no", " processed", " files", ",", " return", " None", "\n", "        ", "if", " not", " processed", "_", "files", ":", "\n", "            ", "return", " None", "\n", "\n", "        ", "#", " Create", " the", " archive", " and", " save", " it", " to", " the", " target", " directory", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "w", "')", " as", " archive", ":", "\n", "            ", "for", " file", " in", " processed", "_", "files", ":", "\n", "                ", "archive", ".", "write", "(", "file", ",", " os", ".", "path", ".", "rel", "path", "(", "file", ",", " source", "_", "dir", "))", "\n", "\n", "        ", "#", " Return", " the", " path", " to", " the", " archive", " file", "\n", "        ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " Print", " the", " exception", " and", " return", " None", "\n", "        ", "print", "(", "f", "\"", "Error", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " None"], "logprobs": [-3.1932849884033203, -0.0004196478403173387, -0.003177952254191041, -0.016800811514258385, -1.6487003564834595, -3.2136192321777344, -1.6030939817428589, -3.1974709033966064, -0.032116301357746124, -0.3344292640686035, -1.7251847982406616, -1.086795687675476, -0.020845962688326836, -0.328978031873703, -0.07232048362493515, -0.07951904088258743, -0.037890952080488205, -0.167496457695961, -0.0018950614612549543, -1.0475233793258667, -0.004391075111925602, -0.24929454922676086, -0.03255961462855339, -0.530777096748352, -1.3951987028121948, -0.009028090164065361, -1.182984709739685, -6.997340824455023e-05, -0.00019631843315437436, -0.0001820160250645131, -0.07044108957052231, -0.0007407305529341102, -0.05231793224811554, -0.0017528659664094448, -0.00012146688823122531, -0.0005878866068087518, -1.082004189491272, -0.002538080094382167, -0.3873240053653717, -0.0035411526914685965, -0.0012672259472310543, -0.01441129483282566, -0.029020220041275024, -0.009257487021386623, -0.0004914983292110264, -0.00014995403762441128, -5.960462772236497e-07, -0.00018463814922142774, -0.00465749204158783, -5.578839045483619e-05, -3.814689989667386e-06, -0.0008660380262881517, -0.014254062436521053, -0.00403981888666749, -0.003112830687314272, -0.7028787732124329, -0.0050704460591077805, -0.04110298305749893, -6.198863957251888e-06, 0.0, -0.16830937564373016, -0.09306633472442627, -0.004538592416793108, -0.9809557199478149, -2.9690935611724854, -0.011331604793667793, -0.06860724091529846, -0.01952020637691021, -0.00020728347590193152, -0.0007167869480326772, -0.25676822662353516, -0.008394669741392136, -0.15088938176631927, -3.3730175495147705, -0.38475820422172546, -0.009442313574254513, -0.1199401468038559, -0.013698145747184753, -0.001831641187891364, -0.1210097223520279, -0.8061203360557556, -1.2673810720443726, -0.07388273626565933, -0.0003962923656217754, -0.0022884628269821405, -0.07972269505262375, -0.0014265133067965508, -3.6954811548639555e-06, -3.576278118089249e-07, -0.00014911970356479287, -0.0011100566480308771, -0.00016759421851020306, -0.08182456344366074, -0.022963782772421837, -0.0006756883230991662, -0.01203277986496687, -0.0027498311828821898, -0.028973320499062538, -0.4174058437347412, -1.6104191541671753, -0.3206779956817627, -2.834052324295044, -0.7607742547988892, -0.05576987564563751, -0.20872758328914642, -0.08043033629655838, -0.06043151393532753, -0.014155927114188671, -0.07844303548336029, -0.0008025524439290166, -1.0899351835250854, -0.23740249872207642, -7.235741941258311e-05, -1.883488948806189e-05, -0.0021312159951776266, -0.0006256530177779496, -8.916457591112703e-05, -0.007400597911328077, -0.17740295827388763, -3.9219088648678735e-05, -8.809178689261898e-05, -0.0008965287124738097, -0.0002450642641633749, -0.00011967896716669202, -0.008889149874448776, -3.933898824470816e-06, -3.814689989667386e-06, -0.00028975578607060015, -0.005345812067389488, -3.6954811548639555e-06, -1.3947389561508317e-05, -0.0007098776986822486, -0.0001308832288486883, -0.07999410480260849, -0.01373271644115448, -0.15890049934387207, -5.245071224635467e-05, -0.5339805483818054, -0.02047719992697239, -0.0010882653295993805, -0.0009603655780665576, -0.035662949085235596, -1.4192050695419312, -0.992318332195282, -0.002864902140572667, -7.152555099310121e-07, -9.536738616588991e-07, -9.738924563862383e-05, -0.0027625514194369316, -0.000479344860650599, -0.04656717926263809, -0.0014427024871110916, -0.0007111880695447326, -6.425174069590867e-05, -0.011805903166532516, -0.8603677153587341, -0.1527755856513977, -3.325883881188929e-05, -3.2305197237292305e-05, -0.002671603811904788, -0.3736834228038788, -9.42901024245657e-05, -5.900685573578812e-05, -0.0160276610404253, -0.0012725834967568517, -0.15821422636508942, -0.00011205045302631333, -1.6689286894688848e-06, -0.011000346392393112, -0.006909525021910667, -0.13339102268218994, -0.07886980473995209, -0.7084677815437317, -0.13374128937721252, -0.0024301065132021904, -0.06756053864955902, -0.028875460848212242, -0.00037555795279331505, -1.4042941331863403, -2.204010009765625, -0.023847533389925957, -0.00023338454775512218, -0.011486468836665154, -0.016024375334382057, -3.6477376852417365e-05, -2.312633478140924e-05, -0.0009976415894925594, -0.022537291049957275, -0.00014161060971673578, -0.005221064668148756, -5.3881147323409095e-05, -4.768370445162873e-07, -5.1973900554003194e-05, -0.0017521519912406802, -0.0024132197722792625, -2.622600959512056e-06, -0.011516991071403027, -0.0009485750924795866, -0.46266111731529236, -0.0025849281810224056, -0.041799146682024, -0.34520405530929565, -0.023004790768027306, -0.09394215047359467, -4.637133679352701e-05, -0.008577410131692886, -0.00035363141796551645, -2.2174298763275146, -1.6977899074554443, -0.8566979765892029, -2.826784610748291, -1.0644645690917969, -0.13453958928585052, -0.07616282999515533, -0.45717358589172363, -0.00025149996508844197, -0.022838417440652847, -0.04880192503333092, -0.09483422338962555, -0.48959898948669434, -0.48241785168647766, -0.6420534253120422, -0.00821248721331358, -1.5240528583526611, -7.068861305015162e-05, -0.005375810898840427, -0.013382138684391975, -0.003898521652445197, -0.0055069406516849995, -0.0016019619069993496, -0.0023417449556291103, -0.0043273381888866425, -0.0005667987279593945], "finish_reason": "stop"}], "metrics": {"energy": 254.49250703334798, "energy_per_token": 1.0922425194564291, "time": 9.883475, "time_per_token": 0.04241834763948498}}
{"outputs": [{"text": "try:\n        if not os.path.exists(target_dir):\n            os.makedirs(target_dir)\n    except PermissionError:\n        print('\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438')\n    else:\n        try:\n            files_to_archive = []\n            for root, dirs, files in os.walk(source_dir):\n                for name in files:\n                    if re.search(r'(.*)\\_\\d{1,6}(.*)', name) is not None:\n                        files_to_archive.append(os.path.join(root, name))\n        except PermissionError:\n            print('\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438')\n        else:\n            try:\n                with zipfile.ZipFile(archive_name, 'w', compression=zipfile.ZIP_DEFLATED) as my_zip:\n                    for file in files_to_archive:\n                        my_zip.write(file)\n            except PermissionError:\n                print('\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u0430", "tokens": ["try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "    ", "except", " Perm", "ission", "Error", ":", "\n", "        ", "print", "('", "\u041e", "\u0448\u0438", "\u0431", "\u043a\u0430", " \u0441\u043e", "\u0437\u0434\u0430", "\u043d\u0438\u044f", " \u0434\u0438", "\u0440\u0435", "\u043a\u0442\u043e", "\u0440\u0438", "\u0438", "')", "\n", "    ", "else", ":", "\n", "        ", "try", ":", "\n", "            ", "files", "_", "to", "_", "archive", " =", " []", "\n", "            ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "                ", "for", " name", " in", " files", ":", "\n", "                ", "    ", "if", " re", ".", "search", "(", "r", "'(", ".", "*", ")\\", "_\\", "d", "{", "1", ",", "6", "}(", ".", "*)", "'", ",", " name", ")", " is", " not", " None", ":", "\n", "                ", "        ", "files", "_", "to", "_", "archive", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " name", "))", "\n", "        ", "except", " Perm", "ission", "Error", ":", "\n", "            ", "print", "('", "\u041e", "\u0448\u0438", "\u0431", "\u043a\u0430", " \u0441\u043e", "\u0437\u0434\u0430", "\u043d\u0438\u044f", " \u0434\u0438", "\u0440\u0435", "\u043a\u0442\u043e", "\u0440\u0438", "\u0438", "')", "\n", "        ", "else", ":", "\n", "            ", "try", ":", "\n", "                ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "name", ",", " '", "w", "'", ",", " compression", "=", "zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " my", "_", "zip", ":", "\n", "                ", "    ", "for", " file", " in", " files", "_", "to", "_", "archive", ":", "\n", "                ", "        ", "my", "_", "zip", ".", "write", "(", "file", ")", "\n", "            ", "except", " Perm", "ission", "Error", ":", "\n", "                ", "print", "('", "\u041e", "\u0448\u0438", "\u0431", "\u043a\u0430", " \u0441\u043e", "\u0437\u0434\u0430", "\u043d\u0438\u044f", " \u0444", "\u0430\u0439", "\u043b\u0430"], "logprobs": [-3.1932849884033203, -0.0004196478403173387, -0.003177952254191041, -0.016800811514258385, -2.064450740814209, -0.45969751477241516, -0.16342990100383759, -3.397406908334233e-05, -0.006744714453816414, -0.0028775022365152836, -0.897706925868988, -0.006695574149489403, -0.5213221907615662, -1.0967194612021558e-05, -7.510157047363464e-06, -0.02266327664256096, -0.027171626687049866, -0.001955146435648203, -0.057872235774993896, -0.0005893162451684475, -0.1284215897321701, -3.85038583772257e-05, -0.0008381668012589216, -0.00019739109848160297, -0.0017730958061292768, -7.390948667307384e-06, -2.861018856492592e-06, -0.0988161712884903, -0.01899879239499569, -1.5746874809265137, -0.003762548789381981, -2.651200771331787, -0.00020644917094614357, -5.245071224635467e-05, -0.26297998428344727, -0.09310749918222427, -0.0015924404142424464, -0.6825051307678223, -1.1080973148345947, -4.674077987670898, -0.026309503242373466, -0.003219661070033908, -0.0004804172203876078, -0.45439887046813965, -0.019159723073244095, -0.0015631611458957195, -0.4865986704826355, -0.03340541571378708, -0.004283420275896788, -0.02102445811033249, -0.0017873755423352122, -1.2427067756652832, -0.004415880423039198, -1.2102762460708618, -1.6787267923355103, -0.0001323135511483997, -0.0037794129457324743, -0.023768959566950798, -2.8101277351379395, -0.0006688979919999838, -0.001683605252765119, -0.004474389832466841, -2.9708757400512695, -0.8153083920478821, -0.8317944407463074, -0.001279846066609025, -0.2631710469722748, -0.07444403320550919, -0.4966086447238922, -0.021937331184744835, -0.06790956109762192, -0.31349778175354004, -1.153672218322754, -0.008273730985820293, -0.3364187479019165, -0.00044264530879445374, -0.0007674132939428091, -0.09254191070795059, -0.004805800039321184, -0.007975990884006023, -4.339123915997334e-05, -7.056941103655845e-05, -0.0025758917909115553, -0.004988841712474823, -4.386805812828243e-05, -1.2874520507466514e-05, -0.07687366008758545, -0.014362295158207417, -0.0013255628291517496, -0.11133260279893875, -2.504648208618164, -0.0016268364852294326, -0.0066032069735229015, -0.0002933310461230576, -0.002942163497209549, -0.0008267321973107755, -0.0010869554243981838, -0.2394583374261856, -1.068166732788086, -3.349725011503324e-05, -0.2567891478538513, -0.3058008551597595, -0.052902545779943466, -3.324781894683838, -0.9397368431091309, -0.7939006090164185, -2.5565927028656006, -3.389535665512085, -1.9766517877578735, -0.6346321702003479, -2.152310371398926, -1.3859546184539795, -3.162731170654297, -1.3295583724975586, -0.5572089552879333, -0.8579770922660828, -0.11533917486667633, -0.000356253091013059, -0.019345417618751526, -1.285679578781128, -0.6560516953468323, -0.09912919253110886, -0.00016318420239258558, -0.026584075763821602, -0.029535626992583275, -0.0005919373361393809, -0.002246477175503969, -0.188023179769516, -0.00040439533768221736, -0.00023421882360707968, -1.2040065485052764e-05, -7.688703772146255e-05, -0.005079104099422693, -0.003817296586930752, -0.032353390008211136, -0.12302929162979126, -0.00014399446081370115, -0.0005347490659914911, -0.0012959185987710953, -0.015756746754050255, -0.00036423723213374615, -0.015324938111007214, -0.001517812255769968, -0.007640897762030363, -0.005397271830588579, -0.004179433919489384, -1.4015963077545166, -0.005992304068058729, -0.5075864791870117, -2.753696753643453e-05, -7.414542778860778e-05, -0.016278445720672607, -0.004795834422111511, -0.0011474461061879992, -0.028918659314513206, -0.056759607046842575, -0.11377977579832077, -0.007123548071831465, -0.0003638797497842461, -0.0008170842193067074, -2.3400235176086426, -0.031348783522844315, -0.0022730010095983744, -1.3616708517074585, -0.00381337758153677, -0.0011069605825468898, -0.007736481260508299, -0.0028761946596205235, -0.09293968230485916, -0.0005021026590839028, -0.05987643823027611, -0.10022804141044617, -5.364274329622276e-05, -0.002662092447280884, -0.005295535549521446, -0.4956413209438324, -0.0001426833332516253, -0.00046790618216618896, -0.0012362702982500196, -0.5674883723258972, -0.2650294005870819, -8.225102646974847e-05, -5.674201020156033e-05, -0.0032876271288841963, -0.0005588161875493824, -2.634490556374658e-05, -0.018024342134594917, -1.8742091655731201, -0.00045062878052704036, -0.001303061842918396, -0.0013234198559075594, -0.1186041310429573, -0.016339080408215523, -1.1618561744689941, -0.00010764019680209458, -0.7751407027244568, -0.008009813725948334, -0.007006362080574036, -5.364403477869928e-06, -2.992108420585282e-05, -0.0008717550663277507, -0.015135208144783974, -0.00014697425649501383, -0.0044538588263094425, -0.0002181292074965313, -0.0006561510381288826, -0.05869589373469353, -0.0008623456815257668, -2.0045487880706787, -0.6363646984100342, -0.13945680856704712, -0.33596426248550415, -0.00365672679618001, -0.0012198395561426878, -0.002531777834519744, -0.07735373079776764, -0.33425042033195496, -0.3079719543457031, -0.0030556675046682358, -0.00015209948469419032, -2.3841830625315197e-06, -4.887569048150908e-06, -5.245195097813848e-06, -0.00017009719158522785, -0.0019747773185372353, -0.0004390706308186054, -0.001086717238649726, -0.31828317046165466, -7.676783570786938e-05, -0.00026008085114881396, -9.345571743324399e-05, -0.0008407871937379241, -0.0005411829333752394, -0.03047233261168003, -0.18194830417633057, -0.004711597226560116, -0.5115100145339966, -0.0011386347468942404, -0.16411755979061127, -7.199982064776123e-05, -5.483612312673358e-06, -0.013669689185917377, -0.0019132657907903194, -0.000270091783022508, -0.006135438568890095, -0.02418038249015808, -0.02316717617213726, -0.0008542464347556233, -0.00018892886873800308, -0.001033010776154697, -0.11710558831691742, -0.05055059492588043, -0.00047541281674057245, -2.415449857711792, -0.001022531185299158, -0.02764461748301983], "finish_reason": "length"}], "metrics": {"energy": 270.522264816284, "energy_per_token": 1.0567275969386094, "time": 10.942319, "time_per_token": 0.04274343359375}}
{"outputs": [{"text": "regex = '^(.*)_processed$'\n    matches = [f for f in os.listdir(source_dir) if re.search(regex, f)]\n    if len(matches) == 0:\n        return 'No processed files found in source directory.'\n    zip_file = shutil.make_archive(os.path.join(target_dir, archive_name), 'zip', source_dir)\n    return zip_file", "tokens": ["regex", " =", " '", "^", "(", ".", "*", ")_", "processed", "$'", "\n", "    ", "matches", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " re", ".", "search", "(", "regex", ",", " f", ")]", "\n", "    ", "if", " len", "(", "matches", ")", " ==", " ", "0", ":", "\n", "        ", "return", " '", "No", " processed", " files", " found", " in", " source", " directory", ".", "'", "\n", "    ", "zip", "_", "file", " =", " shut", "il", ".", "make", "_", "archive", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "zip", "'", ",", " source", "_", "dir", ")", "\n", "    ", "return", " zip", "_", "file"], "logprobs": [-4.514238357543945, -0.16672858595848083, -2.908172130584717, -2.1940736770629883, -1.78376042842865, -0.16319096088409424, -0.6216570734977722, -0.5605145692825317, -0.07355184853076935, -1.3302241563796997, -0.03140388801693916, -0.1912231594324112, -3.960930347442627, -0.03381704166531563, -2.1658709049224854, -1.2105457782745361, -0.18078261613845825, -0.00495029054582119, -0.005070327315479517, -0.02742891199886799, -1.6331539882230572e-05, -0.001292585046030581, -2.50339189733495e-06, -0.0025393879041075706, -0.011989552527666092, -1.6689160474925302e-05, -2.9802276912960224e-06, -0.013864753767848015, -0.021808454766869545, -0.08442457765340805, -1.9907753085135482e-05, -1.2059721946716309, -0.0006139777251519263, -0.0009421439026482403, -0.00023898606013972312, -0.02118588238954544, -0.12584039568901062, -0.006639088969677687, -0.2195049673318863, -1.9360817670822144, -1.1932501792907715, -0.00021646064124070108, -0.0006118332967162132, -0.017550993710756302, -0.40097978711128235, -0.0005570290377363563, -0.0025095418095588684, -0.0025258325040340424, -0.01946409046649933, -0.0015414986992254853, -1.0709483623504639, -2.86478328704834, -0.6803841590881348, -0.5375112891197205, -0.029557617381215096, -0.14719116687774658, -0.939099907875061, -1.6146619319915771, -0.13989408314228058, -0.5997390151023865, -0.07469486445188522, -0.004728445317596197, -0.38987991213798523, -2.0081329345703125, -0.24864445626735687, -0.43112000823020935, -0.385608971118927, -1.3797892332077026, -0.0003843760641757399, -5.1020273531321436e-05, -0.0012742503313347697, -1.7881377516459906e-06, -0.0006641327636316419, -0.022924287244677544, -1.1393016576766968, -0.0017288275994360447, -0.00018952481332235038, -0.016263317316770554, -0.007170300465077162, -0.0009066523634828627, -0.023258142173290253, -6.079655122448457e-06, -8.702239938429557e-06, -0.0018231928115710616, -0.030120057985186577, -6.079655122448457e-06, -4.339123915997334e-05, -0.007648114114999771, -0.007845894433557987, -0.11036685109138489, -0.00037091050762683153, -0.007471475284546614, -0.00033361115492880344, -0.13471515476703644, -0.001775832730345428, -7.581423415103927e-05, -0.12967567145824432, -0.009096252731978893, -0.01947087049484253, -0.10554025322198868, -0.3271383047103882, -0.0003364712174516171, -9.894321920000948e-06], "finish_reason": "stop"}], "metrics": {"energy": 121.0463590660095, "energy_per_token": 1.1752073695729077, "time": 4.2185926, "time_per_token": 0.04095720970873786}}
