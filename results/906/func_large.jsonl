{"outputs": [{"text": "# Define the pattern to identify processed files\n    pattern = re.compile(r'_processed.*\\.(xlsx|csv|json|xml|jsonl|txt|html|html.gz)$')\n\n    # Create the archive file\n    archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w') as zip_file:\n        # Iterate over all files in the source directory\n        for filename in os.listdir(source_dir):\n            # Check if the file matches the processed pattern\n            if pattern.match(filename):\n                # Add the file to the zip archive\n                zip_file.write(os.path.join(source_dir, filename), filename)\n\n    # Move the archive to the target directory\n    shutil.move(archive_path, target_dir)\n\n    return os.path.join(target_dir, archive_name)", "tokens": ["#", " Define", " the", " pattern", " to", " identify", " processed", " files", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "r", "'_", "processed", ".", "*\\", ".", "(", "x", "ls", "x", "|", "csv", "|", "json", "|", "xml", "|", "jsonl", "|", "txt", "|", "html", "|", "html", ".", "gz", ")$", "')", "\n", "\n", "    ", "#", " Create", " the", " archive", " file", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "#", " Iter", "ate", " over", " all", " files", " in", " the", " source", " directory", "\n", "        ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "            ", "#", " Check", " if", " the", " file", " matches", " the", " processed", " pattern", "\n", "            ", "if", " pattern", ".", "match", "(", "filename", "):", "\n", "                ", "#", " Add", " the", " file", " to", " the", " zip", " archive", "\n", "                ", "zip", "_", "file", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", ")", ",", " filename", ")", "\n", "\n", "    ", "#", " Move", " the", " archive", " to", " the", " target", " directory", "\n", "    ", "sh", "util", ".", "move", "(", "archive", "_", "path", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "if"], "logprobs": [-1.0016841888427734, -3.3872458934783936, -0.3375566899776459, -1.7044826745986938, -0.6651608347892761, -1.150596261024475, -0.21717685461044312, -0.04968719184398651, -0.10136941820383072, -0.001022888463921845, -0.4728308618068695, -0.01503739319741726, -0.7113432884216309, -0.0011070796754211187, -0.0005311747081577778, -0.052253104746341705, -0.036379579454660416, -0.31632059812545776, -0.005954977124929428, -2.1721527576446533, -2.5166358947753906, -0.007155032362788916, -1.3821817636489868, -2.7807235717773438, -0.014703013934195042, -0.15142722427845, -0.016015812754631042, -0.4490514397621155, -0.716589093208313, -1.3069307804107666, -1.1018298864364624, -1.2444751262664795, -0.5043469071388245, -3.7193443775177, -0.5460431575775146, -1.2477949857711792, -0.7914110422134399, -2.2598915100097656, -0.5454806089401245, -4.068108081817627, -2.171983242034912, -0.1415310800075531, -1.8194260597229004, -0.05756932497024536, -0.00523612555116415, -0.11388903111219406, -0.0002752163854893297, -0.041344013065099716, -0.8357052803039551, -0.4239678680896759, -0.4247276186943054, -0.3922111690044403, -0.6671613454818726, -0.0001380348257953301, -0.4641197919845581, -0.12887011468410492, -0.1667051762342453, -0.0006703275139443576, -0.011959869414567947, -3.576278118089249e-07, -1.728519782773219e-05, -2.861018856492592e-06, -0.0032626751344650984, -0.0001567479339428246, -0.0025404582265764475, -4.6491513785440475e-06, -5.960462772236497e-07, -0.00025102324434556067, -0.0021371636539697647, -1.5497195136049413e-06, -7.152555099310121e-07, -0.00028236693469807506, -0.0011559001868590713, -0.09774484485387802, -0.13300830125808716, -0.003386122640222311, -1.5020257706055418e-05, -2.9802276912960224e-06, -6.627816765103489e-05, -2.3841855067985307e-07, -1.7881377516459906e-06, -6.55629628454335e-05, -0.000847933697514236, -8.344646857949556e-07, -0.0002019201492657885, -0.00018487652414478362, -0.09942927211523056, -0.015320359729230404, -0.4696289598941803, -0.0002821285743266344, -0.42528897523880005, -0.7819088697433472, -0.20991837978363037, -0.0002899941464420408, -0.0007322729215957224, -0.04489894583821297, -0.47911784052848816, -0.612139105796814, -0.0013060382334515452, -0.40930595993995667, -0.9858086109161377, -0.24912971258163452, -0.04410787299275398, -0.02873925119638443, -0.045997291803359985, -0.008976344019174576, -0.07847709208726883, -0.00019631843315437436, -0.004125893581658602, -2.0155134201049805, -0.00022551853908225894, -0.0030967872589826584, -4.768370445162873e-07, -9.7508447652217e-05, -9.536738616588991e-07, -2.6464111215318553e-05, -0.00033420699764974415, -8.344646857949556e-07, -8.344646857949556e-07, -6.890059739816934e-05, -6.568216485902667e-05, -0.0016066036187112331, -0.42801976203918457, -0.0761859193444252, -0.0015040049329400063, -0.02111095003783703, -0.3279176354408264, -0.14648352563381195, -0.0011082704877480865, -1.560758113861084, -1.9980158805847168, -0.011723903939127922, -9.178694017464295e-05, -0.0352388471364975, -0.03138020634651184, -2.276871418871451e-05, -0.4387187957763672, -4.100715523236431e-05, -0.0022876302246004343, -0.02240068092942238, -4.60137271147687e-05, -0.0004898302140645683, -0.5738273859024048, -0.582538902759552, -0.010657536797225475, -0.18752552568912506, -0.0007746794726699591, -0.00028796817059628665, -1.7412117719650269, -0.06106209382414818, -0.025239987298846245, -0.000161038784426637, -0.16601020097732544, -0.00020656836568377912, -0.000502817565575242, -2.7179348762729205e-05, -4.768360213347478e-06, -4.160317621426657e-05, -0.004467031918466091, -3.576278118089249e-07, -2.0265558760002023e-06, -1.1920928244535389e-07, -1.823885577323381e-05, -1.3828182090946939e-05, -0.0003625689132604748, -1.311301275563892e-06, -1.311301275563892e-06, -2.3007127310847864e-05, -0.00016664070426486433, -0.005417665466666222, -3.5523738915799186e-05, -0.45976948738098145, -0.02926047518849373, -0.0019511011196300387, -0.1947479248046875, -0.11611960828304291, -0.26050835847854614, -1.597602367401123, -0.07811883836984634, -0.27881187200546265, -0.354024201631546, -0.00959440041333437, -0.05627584829926491, -0.009874425828456879, -0.09565173089504242, -0.00011538793478393927, -0.08225429058074951, -5.960462772236497e-07, -2.861018856492592e-06, -0.004654525779187679, -2.884823152271565e-05, -0.03194832056760788, -2.3841830625315197e-06, -0.0008081507403403521, -0.0002079985715681687, -0.16426727175712585, -9.536697689327411e-06, -0.0003496989083942026, -0.005975122097879648, -0.0005824061809107661, -0.09930352866649628, -0.001081953989341855, -1.0835829973220825, -0.4864666759967804, -1.680836794548668e-05, -9.775113539944869e-06, -7.390948667307384e-06, -0.023858822882175446, -0.0003149013500660658, -0.0014544870937243104, -2.0146166207268834e-05, -1.7404405298293568e-05, -0.00038115866482257843, -0.012026301585137844, -2.50339189733495e-06, -0.03287942707538605, -0.6117047071456909, -0.48062241077423096, -0.008874734863638878, -0.5381694436073303], "finish_reason": "stop"}], "metrics": {"energy": 756.3791073837275, "energy_per_token": 3.438086851744216, "time": 18.503792, "time_per_token": 0.08410814545454545}}
{"outputs": [{"text": "pattern = re.compile(r'_processed$')\n\n    with zipfile.ZipFile(os.path.join(target_dir, archive_name), 'w') as z:\n        for filename in os.listdir(source_dir):\n            if pattern.search(filename):\n                z.write(os.path.join(source_dir, filename), filename)\n    return os.path.join(target_dir, archive_name)", "tokens": ["pattern", " =", " re", ".", "compile", "(", "r", "'_", "processed", "$", "')", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "w", "')", " as", " z", ":", "\n", "        ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "            ", "if", " pattern", ".", "search", "(", "filename", "):", "\n", "                ", "z", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", ")", ",", " filename", ")", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "def"], "logprobs": [-3.285970687866211, -0.02466839738190174, -0.6641337871551514, -0.0008336406317539513, -0.0006348263123072684, -0.06054866313934326, -0.05611886456608772, -0.5520820617675781, -0.006124419625848532, -0.942959725856781, -0.0017074067145586014, -0.060835082083940506, -1.5161417722702026, -0.0003721021639648825, -1.1838877201080322, -0.007128993049263954, -6.97350042173639e-05, -5.602820692729438e-06, -9.655486064730212e-05, 0.0, -6.9141146923357155e-06, -0.0009341643890365958, -0.20602086186408997, -1.1920922133867862e-06, -0.0001951265730895102, -3.576278118089249e-07, -0.002523573115468025, -0.0002790300059132278, -0.002388007938861847, -2.8013790142722428e-05, -1.5497195136049413e-06, -0.0020681675523519516, -0.004505838733166456, -7.271740287251305e-06, -3.576278118089249e-07, -0.0007614573696628213, -0.00012683063687290996, -0.15093418955802917, -0.03476644307374954, -0.12595580518245697, -5.8053239627042785e-05, -2.1065499782562256, -1.9062373638153076, -0.004184538498520851, -0.011778217740356922, -0.06178810074925423, -2.705977201461792, -0.0018479428254067898, -0.026791376993060112, -1.7881377516459906e-06, -0.0008214913541451097, -4.768370445162873e-07, -0.00011824862303910777, -0.004441159777343273, -2.098061486321967e-05, -6.794906312279636e-06, -0.0004828002711292356, -0.0011323237558826804, -0.0036351096350699663, -0.09613901376724243, -0.23401063680648804, -0.00015186110977083445, -0.043062373995780945, -0.00036054308293387294, -0.006437872536480427, -0.11020297557115555, -0.003055429784581065, -0.0013717536348849535, -0.33132404088974, -0.001865434111095965, -3.2782016205601394e-05, -0.00025197668583132327, -0.024785393849015236, -8.344646857949556e-07, -2.4676019165781327e-05, -2.3841855067985307e-07, -0.0003134713042527437, -9.7508447652217e-05, -0.0015698263887315989, -8.34461570775602e-06, -7.748573807475623e-06, -0.00012563870404846966, -0.002474224893376231, -0.12189265340566635, -0.0003073934931308031, -1.1035820245742798, -0.07427272200584412, -0.0053656138479709625, -2.268822193145752, -0.10530059039592743, -0.1346670240163803, -4.9828242481453344e-05, -0.00011050090688513592, -4.6491513785440475e-06, -0.01701507344841957, -0.0003026265767402947, -0.0010548033751547337, -2.0265373677830212e-05, -3.933898824470816e-06, -0.00023815179883968085, -0.006835174281150103, -1.0490362910786644e-05, -4.768360213347478e-06, -0.21186159551143646, -0.1291280835866928, -0.008537697605788708, -0.9316250681877136], "finish_reason": "stop"}], "metrics": {"energy": 356.07229468631743, "energy_per_token": 3.3277784550123126, "time": 8.630494, "time_per_token": 0.08065882242990655}}
{"outputs": [{"text": "# Get the list of files in the source directory\n    files = os.listdir(source_dir)\n\n    # Create the archive in the target directory\n    archive = zipfile.ZipFile(os.path.join(target_dir, archive_name), 'w')\n\n    # Add processed files to the archive\n    for file in files:\n        if '_processed' in file:\n            archive.write(os.path.join(source_dir, file), arcname=file)\n\n    # Close the archive\n    archive.close()\n\n    # Return the path to the created archive\n    return os.path.join(target_dir, archive_name)", "tokens": ["#", " Get", " the", " list", " of", " files", " in", " the", " source", " directory", "\n", "    ", "files", " =", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", "\n", "\n", "    ", "#", " Create", " the", " archive", " in", " the", " target", " directory", "\n", "    ", "archive", " =", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "w", "')", "\n", "\n", "    ", "#", " Add", " processed", " files", " to", " the", " archive", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "if", " '_", "processed", "'", " in", " file", ":", "\n", "            ", "archive", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", ",", " arc", "name", "=", "file", ")", "\n", "\n", "    ", "#", " Close", " the", " archive", "\n", "    ", "archive", ".", "close", "()", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " created", " archive", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "def"], "logprobs": [-1.0016841888427734, -2.5096004009246826, -0.6873995065689087, -0.6645547151565552, -0.00046075694262981415, -0.5984187722206116, -0.12881489098072052, -0.004003130830824375, -0.078036367893219, -0.00917669665068388, -0.08026807755231857, -0.00047946401173248887, -0.6097209453582764, -0.1125064492225647, -0.01368250697851181, -2.0265558760002023e-06, -0.00017248096992261708, 0.0, -9.381330892210826e-05, -0.0015278107021003962, -7.986990567587782e-06, -9.65590606938349e-06, -4.60137271147687e-05, -0.00028784899041056633, -0.15841275453567505, -0.00021824838768225163, -0.006182237062603235, -1.1820733547210693, -0.7442917823791504, -1.0839147567749023, -2.547272205352783, -0.03713336959481239, -0.01267284620553255, -0.0017698828596621752, -0.0975104421377182, -0.00011014331539627165, -0.2353716492652893, -2.9295318126678467, -1.8863234519958496, -4.6967357775429264e-05, -8.34461570775602e-06, -0.00022349244682118297, -3.3378546504536644e-06, -2.7418097943154862e-06, -0.0010013333521783352, -0.10078531503677368, -3.4570634852570947e-06, -1.3589766240329482e-05, -2.622600959512056e-06, -0.00027295202016830444, -0.0001433984871255234, -0.004866066388785839, -8.702239938429557e-06, -1.0728830375228426e-06, -0.00024327656137757003, -0.0020024979021400213, -1.1801649634435307e-05, -5.960462772236497e-07, -0.0007905219099484384, -5.435795901576057e-05, -0.07713281363248825, -0.02146081253886223, -0.054630860686302185, -0.0006876011611893773, -0.01131416019052267, -0.0001512651506345719, -0.036874085664749146, -1.802005410194397, -0.7986111640930176, -0.00647245766595006, -0.04598693177103996, -0.0019794171676039696, -0.00312673463486135, -0.03867010027170181, -0.00027497802511788905, -0.054300542920827866, -0.13152222335338593, -0.0835132971405983, -0.004680273588746786, -6.508615479106084e-05, -3.862306402879767e-05, -0.005795935168862343, -0.4374820590019226, -1.5098979473114014, -0.001627550576813519, -0.024016648530960083, -0.0011243456974625587, -0.03281032666563988, -0.08083537220954895, -0.03100929781794548, -0.0018603176577016711, -0.6760655641555786, -0.0028174726758152246, -3.302042750874534e-05, -8.082063141046092e-05, -0.006106884218752384, -5.125986263010418e-06, -1.0967194612021558e-05, -4.768370445162873e-07, -2.169585604860913e-05, -3.182837463100441e-05, -0.000865680689457804, -1.168244216387393e-05, -6.794906312279636e-06, -7.676783570786938e-05, -0.0008783058729022741, -0.00393224461004138, -6.878139538457617e-05, -0.3410131335258484, -4.768370445162873e-07, -0.013632060028612614, -0.07666058093309402, -0.1410311609506607, -0.007199297659099102, -0.17492929100990295, -0.015195794403553009, -0.04071437567472458, -0.041421905159950256, -0.0055129872635006905, -0.003592349123209715, -0.07727274298667908, -9.583967766957358e-05, -0.000837571220472455, -2.5510462364763953e-05, -4.7801782784517854e-05, -8.093983342405409e-05, -0.009835472330451012, -0.012612106278538704, -0.0010353925172239542, -0.14616160094738007, -1.277647614479065, -0.008840351365506649, -0.05135946348309517, -0.03594577684998512, -0.000301673193462193, -0.34178876876831055, -0.002758866176009178, -0.006305324379354715, -0.0002575780963525176, -0.003643661504611373, -0.02093457244336605, -1.4305012882687151e-05, -6.437280717364047e-06, -7.748573807475623e-06, -0.006631865166127682, -0.00021407696476671845, -0.00041333239641971886, -2.0146166207268834e-05, -3.099393507000059e-05, -5.864924969500862e-05, -0.000406301929615438, -0.0003228858404327184, -1.2993727978027891e-05, -0.3039778470993042, -0.2362375110387802, -0.010343634523451328, -1.0760034322738647], "finish_reason": "stop"}], "metrics": {"energy": 536.169589630127, "energy_per_token": 3.4150929275804267, "time": 13.038695, "time_per_token": 0.08304901273885351}}
{"outputs": [{"text": "# Validate the input arguments\n    assert os.path.exists(source_dir), f\"Source directory {source_dir} does not exist.\"\n    assert os.path.exists(target_dir), f\"Target directory {target_dir} does not exist.\"\n\n    # Find all files with the '_processed' suffix in the source directory\n    files_to_archive = [f for f in os.listdir(source_dir) if f.endswith('_processed')]\n\n    # Create the archive file\n    archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w') as zipf:\n        for file in files_to_archive:\n            zipf.write(os.path.join(source_dir, file), arcname=file)\n\n    # Return the path to the created archive\n    return archive_path", "tokens": ["#", " Valid", "ate", " the", " input", " arguments", "\n", "    ", "assert", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", ")", ",", " f", "\"", "Source", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", ".", "\"", "\n", "    ", "assert", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", ")", ",", " f", "\"", "Target", " directory", " {", "target", "_", "dir", "}", " does", " not", " exist", ".", "\"", "\n", "\n", "    ", "#", " Find", " all", " files", " with", " the", " '_", "processed", "'", " suffix", " in", " the", " source", " directory", "\n", "    ", "files", "_", "to", "_", "archive", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " f", ".", "end", "sw", "ith", "('", "_", "processed", "')", "]", "\n", "\n", "    ", "#", " Create", " the", " archive", " file", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "for", " file", " in", " files", "_", "to", "_", "archive", ":", "\n", "            ", "zip", "f", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", ",", " arc", "name", "=", "file", ")", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " created", " archive", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "#"], "logprobs": [-1.0016841888427734, -4.018401145935059, -0.06054922193288803, -1.647478461265564, -1.631192684173584, -1.5714030265808105, -0.10419730842113495, -0.0060123298317193985, -1.409684658050537, -0.2748715281486511, -4.291525328881107e-06, -0.000550357042811811, -1.4305012882687151e-05, -1.624320387840271, -0.00018499570433050394, -0.04970726743340492, -1.0132738680113107e-05, -5.125986263010418e-06, -0.00019691436318680644, -0.04195268079638481, -0.2561553716659546, -0.1400020718574524, -0.33362656831741333, -0.001479246304370463, -1.167748212814331, -0.0005323661607690156, -1.6093124941107817e-05, -4.291525328881107e-06, -0.000943096645642072, -0.09109421074390411, -0.00015090756642166525, -0.001148398732766509, -1.0401560068130493, -0.0017516759689897299, -0.00021479207498487085, -0.005810987204313278, -0.00809590145945549, -0.018067779019474983, -2.9802276912960224e-06, -0.0009018882992677391, -2.264974000354414e-06, -0.15890395641326904, -5.364274329622276e-05, -0.005524012725800276, -1.9073468138230965e-06, -7.152555099310121e-07, -3.766942609217949e-05, -0.009226187132298946, -0.0009816833771765232, -0.0001292145170737058, -0.0014116332167759538, -8.511180931236595e-05, -0.001111485529690981, -0.0002411313180346042, -2.50339189733495e-06, -5.960462772236497e-07, -2.610649426060263e-05, -8.165503095369786e-05, -1.3470558769768104e-05, -0.00011121608258690685, -0.0007345362100750208, -6.890059739816934e-05, -4.911301948595792e-05, -1.0717358589172363, -0.0003066784702241421, -0.12278556078672409, -2.4965994358062744, -0.41353023052215576, -0.6264628767967224, -1.0279550552368164, -0.5726242661476135, -0.3863397538661957, -0.0012237686896696687, -0.008426232263445854, -0.017183003947138786, -0.35492005944252014, -0.016561295837163925, -0.04163335636258125, -0.015894735231995583, -0.045106928795576096, -0.00028451209072954953, -1.6882978677749634, -0.6144572496414185, -0.019550133496522903, -1.0251946150674485e-05, -0.14572705328464508, -0.0010986251290887594, -0.13055925071239471, -0.6849700808525085, -0.0299428328871727, -0.0003299168893136084, -1.2278481335670222e-05, -0.0015468548517674208, -4.410734163684538e-06, -0.00021562635083682835, -4.768370445162873e-07, -1.5735502529423684e-05, -0.029655640944838524, -1.311301275563892e-06, -1.0728830375228426e-06, -0.0006256530177779496, -0.06316690891981125, -1.555941104888916, -0.009581176564097404, -0.012036548927426338, -3.576278118089249e-07, 0.0, -0.07423011213541031, -0.10111495852470398, -0.0007220283732749522, -0.2310119867324829, -0.023032167926430702, -0.0002233732520835474, -0.15564227104187012, -0.00018892886873800308, -0.022632276639342308, -0.780401349067688, -0.33554375171661377, -0.23720543086528778, -0.5250301361083984, -1.2670024633407593, -9.381330892210826e-05, -0.18029816448688507, -0.03924211114645004, -0.050775762647390366, -0.0002650863316375762, -0.004173142369836569, -9.536738616588991e-07, -6.9141146923357155e-06, -2.0265558760002023e-06, -0.0011126763420179486, -5.1973900554003194e-05, -0.0007439468172378838, -2.0265558760002023e-06, -1.7881377516459906e-06, -7.295342220459133e-05, -0.0011617346899583936, -4.172316494077677e-06, -2.622600959512056e-06, -0.0002240883477497846, -0.00035506143467500806, -0.06275992095470428, -0.04616384208202362, -0.00451580761000514, -2.8609820219571702e-05, -4.0531076592742465e-06, -3.9934315282152966e-05, 0.0, -2.145764938177308e-06, -2.7656173188006505e-05, -0.0010125277331098914, -1.5497195136049413e-06, -3.0040289857424796e-05, -0.0002584123576525599, -0.1188102513551712, -0.007026840932667255, -0.1149766743183136, -1.7046782886609435e-05, -0.362510085105896, -0.8750730752944946, -0.00017557987303007394, -0.0006413786904886365, -0.01101131085306406, -0.38266393542289734, -0.40010911226272583, -0.1961764395236969, -0.0007020154735073447, -4.887569048150908e-06, 0.0, -1.0013530300057027e-05, -7.629365427419543e-06, -5.94836674281396e-05, -0.00016151554882526398, -0.0020679295994341373, -1.3057026863098145, -0.0005740663618780673, -8.106198947643861e-06, -7.271740287251305e-06, -4.0649541915627196e-05, -0.005056924652308226, -3.2186455882765586e-06, -4.410734163684538e-06, -9.536738616588991e-07, -2.2411095415009186e-05, -1.549708758830093e-05, -0.0003965306677855551, -5.483612312673358e-06, -2.0265558760002023e-06, -6.353653589030728e-05, -0.0004059444472659379, -0.010692802257835865, -5.0424259825376794e-05, -0.44602087140083313, -2.3841855067985307e-07, -0.004733665846288204, -0.09774366021156311, -0.025227084755897522, -0.014908329583704472, -0.130231112241745, -0.035057809203863144, -0.29581865668296814, -1.26986563205719, -0.002217336092144251, -0.06711174547672272, -0.04972904548048973, -0.0002603192115202546, -0.30180343985557556, -0.004871167708188295, -0.0473274290561676, -0.00026425207033753395, -0.0030805058777332306, -0.019247079268097878, -1.8000440832111053e-05, -9.97731985989958e-05, -0.7336885929107666, -0.007696734741330147, -1.274490475654602], "finish_reason": "stop"}], "metrics": {"energy": 753.2675328388214, "energy_per_token": 3.471278953174292, "time": 18.083197, "time_per_token": 0.08333270506912442}}
{"outputs": [{"text": "# Check if the source directory exists\n    if not os.path.exists(source_dir):\n        print(f\"The directory '{source_dir}' does not exist.\")\n        return ''\n\n    # Check if the target directory exists and create it if not\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    # Get the list of file names with '_processed' suffix in the source directory\n    file_names = [f for f in os.listdir(source_dir) if re.search(r'_processed\\.[^.]+$', f)]\n\n    # Create the archive\n    archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w') as zipf:\n        for file_name in file_names:\n            file_path = os.path.join(source_dir, file_name)\n            zipf.write(file_path, arcname=file_name)\n            shutil.move(file_path, os.path.join", "tokens": ["#", " Check", " if", " the", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "print", "(", "f", "\"", "The", " directory", " '", "{", "source", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "        ", "return", " ''", "\n", "\n", "    ", "#", " Check", " if", " the", " target", " directory", " exists", " and", " create", " it", " if", " not", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Get", " the", " list", " of", " file", " names", " with", " '_", "processed", "'", " suffix", " in", " the", " source", " directory", "\n", "    ", "file", "_", "names", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " re", ".", "search", "(", "r", "'_", "processed", "\\", ".", "[", "^", ".", "]+", "$'", ",", " f", ")]", "\n", "\n", "    ", "#", " Create", " the", " archive", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "for", " file", "_", "name", " in", " file", "_", "names", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "_", "name", ")", "\n", "            ", "zip", "f", ".", "write", "(", "file", "_", "path", ",", " arc", "name", "=", "file", "_", "name", ")", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " os", ".", "path", ".", "join"], "logprobs": [-1.0016841888427734, -1.889591932296753, -0.21756601333618164, -0.48256543278694153, -0.2759992778301239, -0.20266474783420563, -0.1438300758600235, -0.09877955913543701, -0.0006169561529532075, -0.00826048944145441, -0.019089436158537865, -0.0012693690368905663, -1.2040065485052764e-05, -0.000350175570929423, -4.410734163684538e-06, -0.2095714956521988, -5.864924969500862e-05, -0.0012272215681150556, -1.0847986231965479e-05, -2.145764938177308e-06, -0.015630239620804787, -0.0001778444420779124, -0.0008085080771706998, -2.1618809700012207, -0.022049514576792717, -0.2320316582918167, -0.10198268294334412, -1.7504956722259521, -0.6335428357124329, -0.7039093375205994, -0.0001419681793777272, -0.0011088658357039094, -3.862306402879767e-05, -8.344646857949556e-07, -0.0021506056655198336, -0.040122706443071365, -0.00011693747364915907, -0.0018070096848532557, -0.059921011328697205, -0.05357947200536728, -0.0002658013836480677, -0.00017128908075392246, -0.011740398593246937, -0.03174254670739174, -1.7026902437210083, -0.008630831725895405, -0.02232036180794239, -0.00047886825632303953, -0.04068553447723389, -0.6767524480819702, -0.005615293979644775, -0.13902835547924042, -0.04556844010949135, -0.000874851830303669, -0.005668991710990667, -2.656738042831421, -0.019067447632551193, -0.08006156235933304, -0.0030084848403930664, -1.0807020664215088, -0.004336715210229158, -3.8742269680369645e-05, -0.01487039402127266, -0.004358435980975628, -6.294052582234144e-05, -2.3841855067985307e-07, -2.861018856492592e-06, -7.152555099310121e-07, -0.001312348060309887, -2.253030106658116e-05, -9.047575440490618e-05, -1.9073468138230965e-06, -2.3841855067985307e-07, -0.0006753309280611575, -1.0967194612021558e-05, -0.00024816294899210334, -0.07032398134469986, -2.7418097943154862e-06, -0.046210967004299164, -4.529942543740617e-06, -4.529942543740617e-06, -2.992108420585282e-05, -0.0001919085334520787, -1.1920922133867862e-06, -3.576278118089249e-07, -0.0029712836258113384, -0.00028713393840007484, -0.030337845906615257, -0.0006195771275088191, -0.021267341449856758, -2.4711966514587402, -0.9561497569084167, -0.3816719055175781, -8.248942322097719e-05, -3.189591646194458, -0.12077257037162781, -2.3680055141448975, -1.3602590560913086, -0.0024028734769672155, -0.011010721325874329, -0.38851404190063477, -0.8713705539703369, -0.008303878828883171, -0.032620884478092194, -0.0032428319100290537, -0.004383597988635302, -0.0003251500893384218, -0.5728251338005066, -0.0007800396997481585, -0.12102598696947098, -0.013603483326733112, -0.10314733535051346, -0.5660074949264526, -0.028468862175941467, -9.500529267825186e-05, -3.099436753473128e-06, -0.0005389191792346537, -3.576272320060525e-06, -5.340433563105762e-05, -1.1920928244535389e-07, -1.764281842042692e-05, -0.07791727781295776, -1.9073468138230965e-06, -3.576278118089249e-07, -0.0021328814327716827, -0.023307640105485916, -0.7265586853027344, -1.168244216387393e-05, -0.3255463242530823, -0.16151167452335358, -0.04287920147180557, -0.10466080158948898, -0.0055300588719546795, -0.6495345234870911, -0.07988152652978897, -1.8258781433105469, -1.0027687549591064, -0.037214115262031555, -0.20481424033641815, -0.009595699608325958, -4.8636207793606445e-05, -0.0013010379625484347, -0.09521418064832687, -0.0035861723590642214, -0.03315473720431328, -0.00015484087634831667, -0.03978057578206062, -1.0420022010803223, -0.34241625666618347, -0.27581316232681274, -2.0380773544311523, -0.00011574551899684593, -0.662082314491272, -0.05510333925485611, -0.016752632334828377, -0.0005516675882972777, -0.00925807747989893, -1.311301275563892e-06, -3.814689989667386e-06, -1.6689286894688848e-06, -0.0012479382567107677, -3.4689302992774174e-05, -0.0005831210291944444, -9.536738616588991e-07, -2.3841855067985307e-07, -6.913899414939806e-05, -0.0011063652345910668, -2.861018856492592e-06, -1.1920928244535389e-07, -0.00023445718397852033, -0.0015255491016432643, -0.04386613890528679, -0.06348692625761032, -0.003344064112752676, -1.2516897186287679e-05, -2.3841830625315197e-06, -4.2676016164477915e-05, 0.0, -1.1920922133867862e-06, -3.8742269680369645e-05, -0.00036614391137845814, -1.1920922133867862e-06, -1.0490362910786644e-05, -0.00019762947340495884, -0.07575324922800064, -0.006923494394868612, -0.13667118549346924, -4.2676016164477915e-05, -0.6776698231697083, -0.9390522241592407, -0.0002094287920044735, -0.000894027529284358, -0.003881540847942233, -0.18195228278636932, -0.057895638048648834, -0.025703903287649155, -0.0009394046501256526, -4.23184028477408e-05, -0.000445385929197073, -1.1920928244535389e-07, -3.576278118089249e-07, -2.6225699912174605e-05, -0.00032431588624604046, -0.0006026597693562508, -0.3315092623233795, -0.0007164295529946685, -0.00041130665340460837, -0.0009765623253770173, -0.00014482879487331957, -1.1920928244535389e-07, -1.311301275563892e-06, -2.264974000354414e-06, -9.60780744208023e-05, -7.986990567587782e-06, -0.00043299360550008714, -1.7881377516459906e-06, -4.768370445162873e-07, -2.729855441430118e-05, -9.321732068201527e-05, -1.9073468138230965e-06, -3.933898824470816e-06, -3.564294092939235e-05, -0.0006264869589358568, -0.03605018928647041, -0.09619271755218506, -0.0014525825390592217, -5.8412379075889476e-06, -5.006777428206988e-06, -7.867782187531702e-06, -0.00026067672297358513, -4.51792984677013e-05, -2.8013790142722428e-05, -0.00866415910422802, -0.2539220452308655, -4.768370445162873e-07, -0.009323745034635067, -0.3892253637313843, -2.9802276912960224e-06, -0.002334847114980221, -0.007608719170093536, -0.026946185156702995, -1.3336207866668701, -0.8662291169166565, -3.576278118089249e-07, -3.576278118089249e-07, -0.030985258519649506, -3.814624506048858e-05, -0.0008897398365661502, -3.4570634852570947e-06, -2.5152843591058627e-05, -0.0001720042055239901, -0.7415106892585754, -2.825220326485578e-05, -0.00021324267436284572, -1.1920928244535389e-07, -0.001964426366612315], "finish_reason": "length"}], "metrics": {"energy": 895.9842675876615, "energy_per_token": 3.499938545264303, "time": 21.649216, "time_per_token": 0.08456725}}
{"outputs": [{"text": "# create the target directory if it doesn't exist\n    os.makedirs(target_dir, exist_ok=True)\n\n    # create the archive path by joining the target directory and archive name\n    archive_path = os.path.join(target_dir, archive_name)\n\n    # create a zipfile object with the given mode ('w' indicates write mode)\n    with zipfile.ZipFile(archive_path, 'w') as zipf:\n        # list all files in the source directory and its subdirectories\n        for root, dirs, files in os.walk(source_dir):\n            for file in files:\n                # if the file has a '_processed' suffix\n                if re.search('_processed$', file):\n                    # add the file to the zipfile\n                    zipf.write(os.path.join(root, file), arcname=file)\n                    # rename the file to remove the '_processed' suffix\n                    new_file = file.replace('_processed', '')\n                    shutil.move(os.path.join(root, file),", "tokens": ["#", " create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " create", " the", " archive", " path", " by", " joining", " the", " target", " directory", " and", " archive", " name", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "#", " create", " a", " zip", "file", " object", " with", " the", " given", " mode", " ('", "w", "'", " indicates", " write", " mode", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "#", " list", " all", " files", " in", " the", " source", " directory", " and", " its", " sub", "direct", "ories", "\n", "        ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "#", " if", " the", " file", " has", " a", " '_", "processed", "'", " suffix", "\n", "                ", "if", " re", ".", "search", "('", "_", "processed", "$'", ",", " file", "):", "\n", "                ", "    ", "#", " add", " the", " file", " to", " the", " zip", "file", "\n", "                ", "    ", "zip", "f", ".", "write", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", ")", ",", " arc", "name", "=", "file", ")", "\n", "                ", "    ", "#", " rename", " the", " file", " to", " remove", " the", " '_", "processed", "'", " suffix", "\n", "                ", "    ", "new", "_", "file", " =", " file", ".", "replace", "('", "_", "processed", "'", ",", " '", "')", "\n", "                ", "    ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", ")", ","], "logprobs": [-1.0016841888427734, -3.9071853160858154, -1.3249669075012207, -0.7924104332923889, -0.026309620589017868, -0.016208073124289513, -0.00852256827056408, -0.2491467297077179, -0.0005969410995021462, -5.4834770708112046e-05, -0.005970145110040903, -0.026068074628710747, -0.0017021704697981477, -0.7682866454124451, -6.4490144723095e-05, -0.0005694198189303279, -4.768370445162873e-07, -1.1205610462639015e-05, -5.4834770708112046e-05, -0.0016157679492607713, -3.0636318115284666e-05, -5.364403477869928e-06, -0.0013467537937685847, -0.00027700403006747365, -5.960462772236497e-07, -1.4305104514278355e-06, -0.0018041539005935192, -0.000169382052263245, -0.00012742661056108773, -0.0006239851354621351, -0.1168586015701294, -0.0002623452164698392, -0.04695283621549606, -1.3933900594711304, -0.43376967310905457, -0.3754027187824249, -2.590013027191162, -2.466785430908203, -0.21153323352336884, -0.07088983803987503, -0.008335561491549015, -0.038279395550489426, -0.04964204505085945, -0.2650527358055115, -0.027623862028121948, -0.007846249267458916, -0.00012909532233607024, -0.029230721294879913, -0.01013726182281971, -0.0031911423429846764, -0.00146793806925416, -0.0012618682812899351, -1.1920928244535389e-07, -8.22540732769994e-06, -7.867782187531702e-06, -0.0006092122639529407, -3.862306402879767e-05, -0.0003045333724003285, -6.437280717364047e-06, -8.344646857949556e-07, -6.758938252460212e-05, -0.0005453529884107411, -1.5497195136049413e-06, -1.0728830375228426e-06, -0.0001212284987559542, -0.0002162222663173452, -0.018448082730174065, -0.00032634177478030324, -0.028074733912944794, -0.7699766755104065, -0.2900015711784363, -1.168467402458191, -1.0422236919403076, -0.2666921317577362, -1.715505599975586, -0.03962453082203865, -2.4309494495391846, -1.971099615097046, -1.7106027603149414, -0.15175801515579224, -0.040196456015110016, -3.059609889984131, -0.06751362979412079, -0.013657107017934322, -0.003093816339969635, -0.16744433343410492, -0.00021741411183029413, -0.18893714249134064, -0.0016614693449810147, -1.680836794548668e-05, -2.145764938177308e-06, -2.634490556374658e-05, 0.0, -1.6689286894688848e-06, -4.029192859889008e-05, -0.0008247073274105787, -1.311301275563892e-06, -3.6477376852417365e-05, -0.00011979816190432757, -0.14132845401763916, -0.0001851148990681395, -0.05602509155869484, -0.0006168370018713176, -0.45869484543800354, -0.5512906908988953, -0.0005620330339297652, -0.0009297577198594809, -0.13552549481391907, -0.06301234662532806, -1.7030024528503418, -0.05435948073863983, -0.1529424637556076, -0.02691148966550827, -0.0056980326771736145, -0.011008010245859623, -0.0018342590192332864, -1.9304746389389038, -0.06975847482681274, -0.0005314130103215575, -0.0152104701846838, -1.2993727978027891e-05, -0.09038874506950378, -0.0002485204895492643, -0.1300254464149475, -0.04215076193213463, -0.0024267768021672964, -0.22748515009880066, -5.745722592109814e-05, -1.1205610462639015e-05, -0.0013559204526245594, -0.000120751719805412, -8.368142152903602e-05, -2.264974000354414e-06, -1.728519782773219e-05, -0.00013028726971242577, -0.0006544832140207291, -1.311301275563892e-06, -3.4570634852570947e-06, -0.003381013870239258, -0.00037055302527733147, -0.0036981781013309956, -0.9705520868301392, -0.17911867797374725, -0.08855798095464706, -0.00040820849244482815, -2.5033637939486653e-05, -0.00034171465085819364, -0.002387413289397955, -0.029526252299547195, -1.7560036182403564, -0.05166279152035713, -0.22779817879199982, -1.473680019378662, -1.7901312112808228, -0.2408348172903061, -0.0028314997907727957, -0.013700968585908413, -0.014270985499024391, -2.4271652698516846, -7.557583012385294e-05, -0.034685611724853516, -0.1561432033777237, -7.033323527139146e-06, -0.2223297357559204, -0.9155786633491516, -0.585331916809082, -0.001936228945851326, -0.3646770119667053, -0.00012051333033014089, -0.005553768947720528, -0.06766616553068161, -0.0029119730461388826, -0.002952860901132226, -0.0004932855372317135, -0.020146386697888374, -1.5348376035690308, -0.22371825575828552, -0.051037807017564774, -0.01886497437953949, -0.0009496469865553081, -0.4979974627494812, -1.900099515914917, -0.7037878632545471, -5.054346183896996e-05, -4.684815212385729e-05, -0.03146777302026749, -0.0008075552177615464, -2.372236667724792e-05, -1.0251946150674485e-05, -0.00011252723925281316, -0.003083952469751239, -1.4305104514278355e-06, -2.145764938177308e-06, 0.0, -9.107174992095679e-05, -1.4424220353248529e-05, -0.0012056708801537752, -4.279521817807108e-05, -0.0009464313625358045, -0.09642039984464645, -0.00021300431399140507, -0.2958601415157318, -3.576278118089249e-07, -0.013150038197636604, -0.11475073546171188, -0.01850542426109314, -0.005470781121402979, -0.6050376296043396, -0.014553464017808437, -0.008925658650696278, -2.817842483520508, -0.016765058040618896, -0.06500617414712906, -1.4005283117294312, -0.3353077173233032, -0.07402200996875763, -0.08269195258617401, -0.0005022218101657927, -0.0006492413813248277, -0.0019119569333270192, -0.055679451674222946, -0.00023040501400828362, -0.00021860594279132783, -2.2400882244110107, -0.005062262061983347, -0.5158299207687378, -1.0895915031433105, -0.8054694533348083, -0.04181709885597229, -0.057971011847257614, -0.015002633444964886, -0.0016182672698050737, -0.00012051333033014089, -0.009385157376527786, -7.974783511599526e-05, -0.005069615785032511, -0.0002748588449321687, -0.003730482654646039, -0.0022005646023899317, -9.512448741588742e-05, -1.0328320264816284, -1.1920928244535389e-07, -7.152555099310121e-07, -0.005718064494431019, -7.164221460698172e-05, -0.0033507177140563726, -2.3841830625315197e-06, -8.344646857949556e-07, -4.768370445162873e-07, -7.748573807475623e-06, -1.168244216387393e-05, -0.004443533718585968, -1.5020257706055418e-05, -0.0003209791029803455, -0.00015484087634831667, -3.516612196108326e-05], "finish_reason": "length"}], "metrics": {"energy": 884.6966719303135, "energy_per_token": 3.455846374727787, "time": 21.64555, "time_per_token": 0.0845529296875}}
{"outputs": [{"text": "# Check if the source directory exists\n    if not os.path.exists(source_dir):\n        raise FileNotFoundError(f\"Source directory '{source_dir}' not found.\")\n\n    # Create the target directory if it doesn't exist\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    # Get a list of processed files in the source directory\n    processed_files = [f for f in os.listdir(source_dir) if re.search(r'_processed.\\D', f)]\n\n    # Check if there are any processed files\n    if not processed_files:\n        raise ValueError(f\"No processed files found in directory '{source_dir}'.\")\n\n    # Create the archive file path and open the archive\n    archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w') as archive:\n        # Add processed files to the archive\n        for file in processed_files:\n            archive.write(os.path.join", "tokens": ["#", " Check", " if", " the", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "dir", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Get", " a", " list", " of", " processed", " files", " in", " the", " source", " directory", "\n", "    ", "processed", "_", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " re", ".", "search", "(", "r", "'_", "processed", ".", "\\", "D", "'", ",", " f", ")]", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " processed", " files", "\n", "    ", "if", " not", " processed", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " processed", " files", " found", " in", " directory", " '", "{", "source", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " archive", " file", " path", " and", " open", " the", " archive", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " archive", ":", "\n", "        ", "#", " Add", " processed", " files", " to", " the", " archive", "\n", "        ", "for", " file", " in", " processed", "_", "files", ":", "\n", "            ", "archive", ".", "write", "(", "os", ".", "path", ".", "join"], "logprobs": [-1.0016841888427734, -1.889591932296753, -0.21756601333618164, -0.48256543278694153, -0.2759992778301239, -0.20266474783420563, -0.1438300758600235, -0.09877955913543701, -0.0006169561529532075, -0.00826048944145441, -0.019089436158537865, -0.0012693690368905663, -1.2040065485052764e-05, -0.000350175570929423, -4.410734163684538e-06, -0.2095714956521988, -5.864924969500862e-05, -0.0012272215681150556, -1.0847986231965479e-05, -2.145764938177308e-06, -0.015630239620804787, -0.0001778444420779124, -0.0008085080771706998, -0.17071202397346497, -0.6034167408943176, -0.00587083725258708, -6.318072337307967e-06, -0.02471131458878517, -0.10324925929307938, -0.04656410589814186, -0.3031584918498993, -0.0008060067193582654, -0.4578499495983124, -4.756337511935271e-05, -0.0004524161049630493, -2.253030106658116e-05, -3.576278118089249e-07, -0.001911837956868112, -1.1723912954330444, -0.00010597144137136638, -0.10802537947893143, -0.003179615829139948, -0.00013159839727450162, -0.00015162272029556334, -0.033609114587306976, -0.0003545847721397877, -0.012954363599419594, -1.415541172027588, -0.2721019983291626, -0.05167049169540405, -0.0009964506607502699, -0.00945967249572277, -0.004786936566233635, -0.08790673315525055, -0.0001501924270996824, -2.2411095415009186e-05, -0.001674322527833283, -0.008894821628928185, -4.339123915997334e-05, -0.7879542112350464, -0.000573351513594389, -3.3378044463461265e-05, -2.50339189733495e-06, -3.099436753473128e-06, -4.172316494077677e-06, -0.0010894560255110264, -1.1920858014491387e-05, -0.00012194366718176752, -3.814689989667386e-06, -5.960462772236497e-07, -0.00018571082910057157, -8.34461570775602e-06, -0.00014125302550382912, -0.005155483260750771, -9.536738616588991e-07, -0.017141170799732208, -3.2186455882765586e-06, -1.1920928244535389e-07, -2.312633478140924e-05, -5.2689116273541003e-05, -5.960462772236497e-07, -1.4305104514278355e-06, -0.0016707521863281727, -6.961580220377073e-05, -0.008666167967021465, -0.0004552758182398975, -0.022915082052350044, -2.475393772125244, -0.8630725741386414, -0.00250680698081851, -9.48860906646587e-05, -1.4897483587265015, -0.08440299332141876, -0.920054018497467, -0.0012974663404747844, -0.003186270361766219, -0.0007018963224254549, -0.020748356357216835, -0.0004020121123176068, -0.13519825041294098, -0.0006095697171986103, -0.00930780079215765, -0.0011622109450399876, -0.07227568328380585, -0.6750083565711975, -0.08324778079986572, -0.0002109781780745834, -5.245195097813848e-06, -0.0007385863573290408, -3.4570634852570947e-06, -3.8742269680369645e-05, 0.0, -1.2516897186287679e-05, -0.07757128775119781, -1.7881377516459906e-06, -1.1920928244535389e-07, -0.0004109491710551083, -0.03912243992090225, -0.6589217782020569, -8.821448318485636e-06, -0.32488617300987244, -0.23597440123558044, -0.04238811135292053, -0.09534455835819244, -0.006769698113203049, -2.119563341140747, -3.390460729598999, -2.3971714973449707, -1.3233027458190918, -8.022463589441031e-05, -0.0021251493599265814, -0.12811876833438873, -0.01169279869645834, -0.023450063541531563, -0.00012134769349358976, -0.037314608693122864, -0.8520305156707764, -0.0019207615405321121, -0.045730963349342346, -0.0018604366341605783, -0.23234297335147858, -0.02479155734181404, -0.0005689432728104293, -0.41969048976898193, -2.062299427052494e-05, -0.00044312194222584367, -0.030374273657798767, -0.0002890407631639391, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0001463782973587513, -7.295342220459133e-05, -0.00016425691137555987, -0.27144548296928406, -0.7950864434242249, -1.6689286894688848e-06, -0.010957427322864532, -0.41903018951416016, -0.0009472650708630681, -0.0014496066141873598, -0.07139787822961807, -0.005913500674068928, -0.019336765632033348, -0.0013381821336224675, -1.146535873413086, -0.07282580435276031, -5.9602869441732764e-05, -0.001312467036768794, -1.645074735279195e-05, -1.1920858014491387e-05, -0.002317007165402174, -0.08923846483230591, -0.004910907708108425, -0.00016616393986623734, -2.95634672511369e-05, -0.0012510338565334678, -0.00018618757894728333, -0.008057470433413982, -0.5608248114585876, -0.32058075070381165, -0.16286394000053406, -0.5401377081871033, -0.21805095672607422, -2.7264292240142822, -1.7008662223815918, -0.0905383750796318, -0.25360220670700073, -0.2603350579738617, -0.0001147919538198039, -0.02449892833828926, -0.00767768919467926, -0.2203722447156906, -0.00015245705435518175, -0.0020673349499702454, -2.3841855067985307e-07, -2.145764938177308e-06, -7.152555099310121e-07, -0.002420355100184679, -2.9205850296420977e-05, -0.0005957497633062303, -5.960462772236497e-07, -1.1920928244535389e-07, -4.0411134250462055e-05, -0.000715833914000541, -2.50339189733495e-06, -7.152555099310121e-07, -0.00016211149340961128, -0.0004690977220889181, -0.03334327042102814, -0.13074012100696564, -0.002680996200069785, -1.0967194612021558e-05, -2.0265558760002023e-06, -5.0424259825376794e-05, -1.1920928244535389e-07, -8.344646857949556e-07, -2.4676019165781327e-05, -0.00040880427695810795, -9.536738616588991e-07, -1.0371154530730564e-05, -0.00013433984713628888, -0.05324801802635193, -0.010995983146131039, -0.23132731020450592, -8.904537389753386e-05, -0.3257334530353546, -0.006580587476491928, -0.00029273517429828644, -0.03216409310698509, -0.16159534454345703, -0.649761974811554, -1.0842394828796387, -0.0008431693422608078, -0.0012342463014647365, -0.0017922543920576572, -0.0014701997861266136, -0.03210313990712166, -0.00010072677832795307, -0.0013096098555251956, -0.18700774013996124, -0.343921035528183, -0.0007191693875938654, -3.576278118089249e-07, -2.3841855067985307e-07, -4.5298504119273275e-05, -9.775113539944869e-06, -0.0003200257197022438, -1.9656150341033936, -0.009851526468992233, -1.0609570381348021e-05, -4.434487345861271e-05, -0.004895130638033152, -1.4305104514278355e-06, -1.311301275563892e-06, -2.3841855067985307e-07, -2.1815061700181104e-05], "finish_reason": "length"}], "metrics": {"energy": 873.892055273057, "energy_per_token": 3.413640840910379, "time": 21.428532, "time_per_token": 0.083705203125}}
{"outputs": [{"text": "pattern = r'_processed$'\n\n    file_list = [file for file in os.listdir(source_dir) if re.search(pattern, file)]\n    # file_list = [file for file in os.listdir(source_dir) if file.endswith(('_processed'))]\n\n    archive_path = os.path.join(target_dir, archive_name)\n    archive = zipfile.ZipFile(archive_path, 'w')\n\n    for file in file_list:\n        file_path = os.path.join(source_dir, file)\n        archive.write(file_path, arcname=file)\n        shutil.move(file_path, target_dir)\n\n    return archive_path", "tokens": ["pattern", " =", " r", "'_", "processed", "$'", "\n", "\n", "    ", "file", "_", "list", " =", " [", "file", " for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " re", ".", "search", "(", "pattern", ",", " file", ")]", "\n", "    ", "#", " file", "_", "list", " =", " [", "file", " for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " file", ".", "end", "sw", "ith", "(", "('", "_", "processed", "'))", "]", "\n", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "archive", " =", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", "\n", "\n", "    ", "for", " file", " in", " file", "_", "list", ":", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", "\n", "        ", "archive", ".", "write", "(", "file", "_", "path", ",", " arc", "name", "=", "file", ")", "\n", "        ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "return", " archive", "_", "path", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.285970687866211, -0.02466839738190174, -0.9927318096160889, -0.3632637560367584, -0.015313785523176193, -0.9211524724960327, -0.09713871777057648, -1.1889970302581787, -0.0005787128466181457, -3.8241400718688965, -0.029952434822916985, -0.6302824020385742, -0.00986285787075758, -0.8648161888122559, -1.1702927350997925, -0.1543346494436264, -0.0027165436185896397, -0.0007007050444371998, -0.009515880607068539, -4.291525328881107e-06, -0.0030317793134599924, -1.1920928244535389e-07, -0.00037579628406092525, -0.07355672121047974, -2.1219027985353023e-05, -2.5152843591058627e-05, -0.01401993166655302, -0.10202359408140182, -0.3036483824253082, -2.109982233378105e-05, -0.07876106351613998, -0.0001754606782924384, -0.002709886059165001, -0.0007893307483755052, -0.00689152954146266, -0.0981287732720375, -0.003714567981660366, -1.1029859781265259, -3.1712753772735596, -2.4807143211364746, -0.02643687278032303, -0.0325356125831604, -0.0505177266895771, -0.5852208733558655, -0.11450954526662827, -0.0191362164914608, -0.0015808953903615475, -0.0003846143954433501, -0.04867192357778549, -2.312633478140924e-05, -0.03001745231449604, -3.611976353568025e-05, -0.026607872918248177, -0.01696854457259178, -0.000979896984063089, -0.0007640779949724674, -0.114569291472435, -0.013760347850620747, -0.6461718678474426, -0.03213973715901375, -0.059355318546295166, -0.0013379440642893314, -3.814624506048858e-05, -1.8816438913345337, -2.4186301231384277, -0.09531345218420029, -0.010531327687203884, -1.1527352333068848, -0.006692495197057724, -0.09538877010345459, -0.2882777452468872, -0.00045062878052704036, -1.9262422323226929, -0.14637210965156555, -0.08128377050161362, -0.0017661938909441233, -0.050010304898023605, -2.7418097943154862e-06, -5.006664650863968e-05, -4.410734163684538e-06, -0.005174458492547274, -0.00021646064124070108, -0.002157623879611492, -2.50339189733495e-06, -1.4305104514278355e-06, -0.001960976282134652, -0.0030114559922367334, -8.702239938429557e-06, -6.556489552167477e-06, -0.00021455370006151497, -0.003669435391202569, -0.8841909766197205, -3.2066407203674316, -0.3526257276535034, -0.09464067220687866, -0.0001411338453181088, -2.1219027985353023e-05, -0.00024399164249189198, -2.3841855067985307e-07, -3.6954811548639555e-06, -0.00017331528943032026, -0.004203057382255793, -3.3378546504536644e-06, -0.00013958434283267707, -0.000562271336093545, -0.3521849811077118, -0.05292956903576851, -0.17127206921577454, -0.008302814327180386, -0.28570854663848877, -0.00019214690837543458, -0.12623460590839386, -0.09289003908634186, -0.1264714151620865, -0.001471032970584929, -8.702239938429557e-06, 0.0, -0.00021205084340181202, -0.000556314189452678, -0.005115634296089411, -0.7527656555175781, -0.033748697489500046, -0.022819308564066887, -0.004717173986136913, -0.0029448973946273327, -2.3841855067985307e-07, -4.541770613286644e-05, -2.455681169521995e-05, -0.0010875507723540068, -6.747018051100895e-05, -0.0048712859861552715, -1.5020257706055418e-05, -1.311301275563892e-06, -0.00021443451987579465, -0.0006313714548014104, -0.00044169207103550434, -0.0016199335223063827, -0.057233333587646484, -0.374100923538208, -0.004094788804650307, -3.158996332786046e-05, -4.8040190449682996e-05, -0.0022052035201340914, -0.0019070786656811833, -1.2397689715726301e-05, -0.006124893669039011, -0.5895516872406006, -1.6689286894688848e-06, -0.011726495809853077, -0.3507758677005768, -0.1873447597026825, -0.022523537278175354, -0.6059176921844482, -0.6813716888427734, -3.576278118089249e-07, -2.50339189733495e-06, -0.02252959832549095, -9.464769391342998e-05, -0.0027048927731812, -0.0013616346986964345, -3.4570634852570947e-06, -0.0004151197790633887, -0.580933153629303, -3.957670196541585e-05, -0.00026294111739844084, -0.012410675175487995, -0.07841712981462479, -0.04405859485268593, -0.003153472673147917, -1.8703134059906006, -0.05393024533987045, -0.019208956509828568, -0.0001311216183239594, -1.4077568054199219, -1.0728830375228426e-06, -4.0531076592742465e-06, -1.4305104514278355e-06, -6.9141146923357155e-06, -0.19868867099285126], "finish_reason": "stop"}], "metrics": {"energy": 607.3154184150698, "energy_per_token": 3.3928235665646356, "time": 14.936367, "time_per_token": 0.08344339106145252}}
{"outputs": [{"text": "processed_files = []\n    for file in os.listdir(source_dir):\n        if '_processed.' in file:\n            processed_files.append(os.path.join(source_dir, file))\n\n    shutil.make_archive(os.path.join(target_dir, archive_name), 'zip', root_dir=processed_files)\n\n    return os.path.join(target_dir, archive_name)", "tokens": ["processed", "_", "files", " =", " []", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "if", " '_", "processed", ".", "'", " in", " file", ":", "\n", "            ", "processed", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "))", "\n", "\n", "    ", "sh", "util", ".", "make", "_", "archive", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "zip", "'", ",", " root", "_", "dir", "=", "processed", "_", "files", ")", "\n", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.444732666015625, -0.006380899343639612, -0.12234558910131454, -0.01688602939248085, -1.070249080657959, -0.007900063879787922, -0.23624561727046967, -0.38713985681533813, -1.310392141342163, -0.7046154141426086, -0.006663364823907614, -1.2278481335670222e-05, -0.0033610539976507425, 0.0, -0.00025412190007045865, -0.0021583375055342913, -1.1444026313256472e-05, -1.5020257706055418e-05, -0.00029273517429828644, -0.0014766276581212878, -0.0031823490280658007, -0.06700316816568375, -1.415472388267517, -0.002991964342072606, -2.705235242843628, -0.8384401202201843, -0.0019121948862448335, -0.04006762057542801, -0.14190073311328888, -0.031641148030757904, -0.0019526478135958314, -0.18985794484615326, -0.0005734706646762788, -0.02384182997047901, -0.0005669178790412843, -0.0020436609629541636, -0.002673387061804533, -0.6612212061882019, -8.344646857949556e-07, -0.00013958434283267707, -4.768370445162873e-07, -0.0018009409541264176, -0.00017331528943032026, -0.0010456338059157133, -9.65590606938349e-06, -8.344646857949556e-07, -0.00011693747364915907, -0.0018066527554765344, -0.0007400158210657537, -0.001303419005125761, -0.37297311425209045, -0.001809508539736271, -3.8136210441589355, -5.674201020156033e-05, -5.8053239627042785e-05, -0.04123454540967941, -1.1920928244535389e-07, -9.238292841473594e-05, -0.04781064763665199, -0.29405462741851807, -2.9682672902708873e-05, -1.8358061424805783e-05, -4.768370445162873e-07, -0.010835029184818268, -0.0010760000441223383, -0.014715348370373249, -2.729855441430118e-05, -1.3589766240329482e-05, -0.0014054430648684502, -0.057283204048871994, -4.2199197196168825e-05, -3.266281055402942e-05, -0.07878607511520386, -0.008694530464708805, -0.0697355717420578, -0.0005210472736507654, -0.001669562072493136, -4.851700214203447e-05, -1.0126838684082031, -0.0002580548170953989, -2.145764938177308e-06, -0.031274955719709396, -1.7916576862335205, -1.0251946150674485e-05, -7.056941103655845e-05, -0.4640254080295563, -0.005629400257021189, -0.5310127139091492, -0.01550982054322958, -0.07009617239236832, -0.03640728071331978, -1.537788011773955e-05, -5.0424259825376794e-05, -1.0013530300057027e-05, -0.014580486342310905, -0.0004231034545227885, -0.002707746112719178, -3.075552376685664e-05, -1.966933996300213e-05, -0.0006108802044764161, -0.2969471216201782, -1.2159273865108844e-05, -1.9788545614574105e-05, -2.165788412094116, -1.5497195136049413e-06, -4.410734163684538e-06, -2.0265558760002023e-06, -9.65590606938349e-06, -0.26322582364082336], "finish_reason": "stop"}], "metrics": {"energy": 385.0542747745515, "energy_per_token": 3.532608025454601, "time": 9.047764, "time_per_token": 0.08300700917431193}}
{"outputs": [{"text": "# Identify processed files in the source directory\n    processed_files = [file for file in os.listdir(source_dir) if file.endswith('_processed.txt')]\n    print('Processed files found:', len(processed_files))\n    # Create the archive in the target directory\n    archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w') as zip_obj:\n        for file_to_archive in processed_files:\n            file_path = os.path.join(source_dir, file_to_archive)\n            zip_obj.write(file_path, arcname=file_to_archive)\n    print('Archive created:', archive_path)\n    # Remove the processed files from the source directory\n    for file_to_remove in processed_files:\n        file_path = os.path.join(source_dir, file_to_remove)\n        os.remove(file_path)\n    print('Processed files removed from source directory')\n    return archive_path", "tokens": ["#", " Ident", "ify", " processed", " files", " in", " the", " source", " directory", "\n", "    ", "processed", "_", "files", " =", " [", "file", " for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " file", ".", "end", "sw", "ith", "('", "_", "processed", ".", "txt", "')", "]", "\n", "    ", "print", "('", "Process", "ed", " files", " found", ":'", ",", " len", "(", "processed", "_", "files", "))", "\n", "    ", "#", " Create", " the", " archive", " in", " the", " target", " directory", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "obj", ":", "\n", "        ", "for", " file", "_", "to", "_", "archive", " in", " processed", "_", "files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "_", "to", "_", "archive", ")", "\n", "            ", "zip", "_", "obj", ".", "write", "(", "file", "_", "path", ",", " arc", "name", "=", "file", "_", "to", "_", "archive", ")", "\n", "    ", "print", "('", "Archive", " created", ":'", ",", " archive", "_", "path", ")", "\n", "    ", "#", " Remove", " the", " processed", " files", " from", " the", " source", " directory", "\n", "    ", "for", " file", "_", "to", "_", "remove", " in", " processed", "_", "files", ":", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "_", "to", "_", "remove", ")", "\n", "        ", "os", ".", "remove", "(", "file", "_", "path", ")", "\n", "    ", "print", "('", "Process", "ed", " files", " removed", " from", " source", " directory", "')", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "if"], "logprobs": [-1.0016841888427734, -2.144179105758667, -0.022811850532889366, -0.2877584397792816, -0.03627922013401985, -1.901979923248291, -0.11521435528993607, -0.021928466856479645, -0.015085538849234581, -0.16444912552833557, -0.002141208155080676, -0.18404963612556458, -0.002830429933965206, -0.023132115602493286, -0.0025216706562787294, -0.11065205186605453, -0.9638857841491699, -0.027357114478945732, -0.0007357274298556149, -0.0002592465898487717, -0.0024064411409199238, -2.038458114839159e-05, -0.0004259632551111281, -1.1920928244535389e-07, -0.00015746307326480746, -0.10377809405326843, -7.390948667307384e-06, -4.529942543740617e-06, -0.0009010545909404755, -0.056425485759973526, -0.5424286127090454, -0.0022977397311478853, -0.006702678743749857, -1.0728830375228426e-06, 0.0, -0.06829587370157242, -0.0864490270614624, -0.0013916341122239828, -1.2388702630996704, -0.43340232968330383, -0.0013704441953450441, -0.014903631992638111, -0.000559173640795052, -2.0130183696746826, -1.488585352897644, -2.2443270683288574, -1.1759204864501953, -0.007069928105920553, -0.09922559559345245, -1.4692494869232178, -0.44380125403404236, -0.002689674962311983, -2.943143606185913, -0.0006165986997075379, -0.0011736417654901743, -8.344646857949556e-07, -7.152555099310121e-07, -0.042609184980392456, -0.014815190806984901, -2.086367607116699, -0.9649415612220764, -0.6677392721176147, -0.5655093789100647, -0.5950543284416199, -2.0199344158172607, -0.017952803522348404, -0.017620686441659927, -0.0012697261990979314, -0.05177520215511322, -0.0014580582501366735, -0.37841546535491943, -0.0390513613820076, -0.02030736766755581, -0.0005772831500507891, -0.0076177106238901615, -3.576278118089249e-07, -2.455681169521995e-05, -9.298280929215252e-06, -0.0029046034906059504, -0.00018082413589581847, -0.0007418026216328144, -9.536738616588991e-07, -1.311301275563892e-06, -0.000458254711702466, -0.0025548457633703947, -2.264974000354414e-06, -1.0609570381348021e-05, -0.00023803261865396053, -0.0018239067867398262, -0.044651590287685394, -0.26775655150413513, -0.004028777126222849, -3.4927710657939315e-05, -4.0531076592742465e-06, -5.9960475482512265e-05, 0.0, -1.7881377516459906e-06, -0.00014923889830242842, -0.0010887415846809745, -1.6689286894688848e-06, -3.611976353568025e-05, -0.0002512616047170013, -0.07090049982070923, -0.009250400587916374, -0.15315799415111542, -5.125868119648658e-05, -0.45437949895858765, -0.761763334274292, -2.2008285522460938, -7.295342220459133e-05, -0.0017415608745068312, -0.0058125280775129795, -0.19555626809597015, -0.06559982895851135, -2.52663516998291, -2.659667491912842, -0.0006999903125688434, -0.5475149750709534, -0.0002898749662563205, -0.004906400106847286, -1.1920922133867862e-06, -7.152555099310121e-07, -0.0011999557027593255, -0.0005651307292282581, -0.0022352966479957104, -1.3287030458450317, -0.02958342619240284, -0.02649422362446785, -0.035421811044216156, -0.002241005888208747, -2.145764938177308e-06, -2.288792165927589e-05, -4.410734163684538e-06, -0.0009220162755809724, -9.738924563862383e-05, -0.005329448729753494, -1.2516897186287679e-05, -6.437280717364047e-06, -0.00019977481861133128, -0.0008950994815677404, -3.075552376685664e-05, -1.0847986231965479e-05, -8.34461570775602e-06, -6.9141146923357155e-06, -0.00018892886873800308, -0.004152367357164621, -0.003996244631707668, -0.40125030279159546, -0.0017835675971582532, -0.0011641160817816854, -1.156323378381785e-05, -1.168244216387393e-05, -2.8013790142722428e-05, -0.0009900197619572282, -0.00032610344351269305, -9.595887240720913e-05, -0.019354889169335365, -0.30755674839019775, -1.311301275563892e-06, -0.014300483278930187, -0.7472050189971924, -1.8715683836489916e-05, -0.008430251851677895, -5.960462772236497e-07, -3.814689989667386e-06, -0.015316955745220184, -0.0389266200363636, -0.34597086906433105, -0.6173310279846191, -0.18032622337341309, -0.8266384601593018, -0.17527329921722412, -0.5305474996566772, -0.000125281119835563, -0.03420373052358627, -1.4781842764932662e-05, -0.008566890843212605, -0.007798463571816683, -0.0025638823863118887, -0.03569113090634346, -1.9522294998168945, -1.1633023023605347, -0.27124056220054626, -0.22841081023216248, -0.024577327072620392, -0.02687806822359562, -0.00821899063885212, -0.01918124221265316, -0.0017987991450354457, -0.02256864309310913, -0.0005843124235980213, -0.10700897872447968, -0.11143775284290314, -0.02755996398627758, -0.013022259809076786, -1.597391747054644e-05, -0.4385485053062439, -4.5536911784438416e-05, -0.0009784678695723414, -3.576278118089249e-07, -3.576278118089249e-07, -0.000605638197157532, -0.00011896379146492109, -0.002079112222418189, -0.23845860362052917, -0.0006905793561600149, -0.016412610188126564, -0.03341394662857056, -0.00015162272029556334, -1.1920922133867862e-06, -2.0265373677830212e-05, -7.867782187531702e-06, -3.93382906622719e-05, -6.246371776796877e-05, -0.0051807439886033535, -1.0609570381348021e-05, -3.2186455882765586e-06, -2.729855441430118e-05, -0.0003216941258870065, -2.586808113846928e-05, -0.00037281715776771307, -1.1920928244535389e-07, -1.680836794548668e-05, -0.00022909401741344482, -0.00014149141497910023, -0.0015274535398930311, -0.04051944240927696, -1.0013530300057027e-05, -0.00046302087139338255, -1.0847986231965479e-05, -0.00027450130437500775, -9.179073458653875e-06, -7.629365427419543e-06, -0.000860201776959002, -0.0006118332967162132, -0.20416374504566193, -0.09049154818058014, -0.03572138398885727, -0.04150870814919472, -0.00012242044613230973, -0.0024541281163692474, -0.03490770235657692, -0.2668505311012268, -0.9563422203063965, -0.010168532840907574, -1.1718041896820068, -0.0009883524617180228, -0.09134209901094437, -0.1992104947566986, -0.016196461394429207, -2.1219027985353023e-05, -0.000270091783022508, -0.5195370316505432, -0.014147934503853321, -0.9507779479026794], "finish_reason": "stop"}], "metrics": {"energy": 860.9371968536376, "energy_per_token": 3.3762243013868143, "time": 21.444233, "time_per_token": 0.08409503137254902}}
{"outputs": [{"text": "archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w', zipfile.ZIP_DEFLATED) as zipf:\n        for file in os.listdir(source_dir):\n            if re.search('_processed', file):\n                shutil.move(os.path.join(source_dir, file), target_dir)\n                zipf.write(os.path.join(target_dir, file), file)\n    return archive_path", "tokens": ["archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "f", ":", "\n", "        ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "            ", "if", " re", ".", "search", "('", "_", "processed", "'", ",", " file", "):", "\n", "                ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", ",", " target", "_", "dir", ")", "\n", "                ", "zip", "f", ".", "write", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", ")", ",", " file", ")", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "def"], "logprobs": [-3.2332401275634766, -0.04744373634457588, -0.09181799739599228, -0.00306018372066319, -0.02100262977182865, -5.960462772236497e-07, -2.992108420585282e-05, -4.172316494077677e-06, -0.003749603871256113, -0.00016616393986623734, -0.0029006809927523136, -8.702239938429557e-06, -1.6689286894688848e-06, -0.0006962973857298493, -0.0025957482866942883, -4.6491513785440475e-06, -9.417489309271332e-06, -0.000336590368533507, -0.006303784437477589, -0.4501909911632538, -0.9674344062805176, -0.002980791963636875, -3.0874729418428615e-05, -4.410734163684538e-06, -8.010543388081715e-05, -2.3841855067985307e-07, -3.6954811548639555e-06, -0.00012933371181134135, -0.001479484373703599, -7.152555099310121e-07, -0.00010215714428341016, -0.0005290300468914211, -0.06853567063808441, -0.013845355249941349, -2.4009337425231934, -0.0002454218047205359, -0.11867929995059967, -1.7165990357170813e-05, -2.861018856492592e-06, -3.5523738915799186e-05, -1.1324817933200393e-05, -2.50339189733495e-06, -0.0028713210485875607, -2.50339189733495e-06, -2.6702524337451905e-05, -0.006587574724107981, -1.549708758830093e-05, -0.29036739468574524, -0.807545006275177, -0.0008172033121809363, -0.002110279630869627, -0.007209239527583122, -0.09707175195217133, -1.8867822885513306, -0.25103509426116943, -0.014659431762993336, -2.9802276912960224e-06, -0.00045694399159401655, -2.3841855067985307e-07, -0.0001833270798670128, -0.006924796849489212, -1.0847986231965479e-05, -1.3708974620385561e-05, -0.00018165845540352166, -0.0003200257197022438, -0.0015119798481464386, -0.09874208271503448, -0.2119111716747284, -2.1219027985353023e-05, -0.36720725893974304, -0.6439429521560669, -0.3085726797580719, -0.007251017261296511, -0.8976580500602722, -0.00020919041708111763, -0.004596619866788387, -0.10645302385091782, -0.009966845624148846, -0.0007575264316983521, -2.942216634750366, -4.0531076592742465e-06, -1.1920858014491387e-05, -0.2451746165752411, -0.000916418619453907, -0.0417785681784153, -9.894321920000948e-06, -3.611976353568025e-05, -2.622600959512056e-06, -0.00016830935783218592, -5.447716102935374e-05, -0.001568279112689197, -3.182837463100441e-05, -6.9141146923357155e-06, -0.00022551853908225894, -0.005288539454340935, -0.0029697385616600513, -0.0007007050444371998, -0.11141141504049301, -4.625213477993384e-05, -7.10462118149735e-05, -0.0028641889803111553, -0.020034806802868843, -0.015052424743771553, -0.009809738956391811, -0.0004693360242526978, -1.811964830267243e-05, -3.9457496313843876e-05, -0.00021181246847845614, -0.0594789944589138, -9.536738616588991e-07, -3.6954195820726454e-05, -4.768370445162873e-07, -0.0011142243165522814, -5.447716102935374e-05, -0.0014207994099706411, -8.34461570775602e-06, -2.145764938177308e-06, -0.0001134808044298552, -0.001856985967606306, -0.06947726756334305, -7.843663479434326e-05, -1.152293086051941, -0.012575731612741947, -0.009696763008832932, -0.4724492132663727, -0.031565725803375244, -0.06371983140707016, -5.006777428206988e-06, -9.893881360767409e-05, -0.9992021322250366, -0.007468517404049635, -1.6130670309066772], "finish_reason": "stop"}], "metrics": {"energy": 455.28100661468517, "energy_per_token": 3.4490985349597363, "time": 10.939018, "time_per_token": 0.08287134848484849}}
{"outputs": [{"text": "# Set the path for the processed files\n    processed_files = [f for f in os.listdir(source_dir) if '_processed' in f]\n\n    # Create an archive file name if none is provided\n    if not archive_name:\n        archive_name = 'archive.zip'\n\n    # Set the path for the archive file\n    archive_path = os.path.join(target_dir, archive_name)\n\n    # Open the archive in append mode to ensure existing files are not overwritten\n    with zipfile.ZipFile(archive_path, 'a') as zip:\n        # Loop through all processed files and archive them\n        for file in processed_files:\n            file_path = os.path.join(source_dir, file)\n\n            # Check if the file is a regular file (not a directory)\n            if os.path.isfile(file_path):\n                # Remove the '_processed' suffix from the file name before archiving\n                archive_name = re.sub('_processed', '', file)\n                zip.write(file_path, archive_name)\n\n    ", "tokens": ["#", " Set", " the", " path", " for", " the", " processed", " files", "\n", "    ", "processed", "_", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " '_", "processed", "'", " in", " f", "]", "\n", "\n", "    ", "#", " Create", " an", " archive", " file", " name", " if", " none", " is", " provided", "\n", "    ", "if", " not", " archive", "_", "name", ":", "\n", "        ", "archive", "_", "name", " =", " '", "archive", ".", "zip", "'", "\n", "\n", "    ", "#", " Set", " the", " path", " for", " the", " archive", " file", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "#", " Open", " the", " archive", " in", " append", " mode", " to", " ensure", " existing", " files", " are", " not", " over", "written", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "a", "')", " as", " zip", ":", "\n", "        ", "#", " Loop", " through", " all", " processed", " files", " and", " archive", " them", "\n", "        ", "for", " file", " in", " processed", "_", "files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", "\n", "\n", "            ", "#", " Check", " if", " the", " file", " is", " a", " regular", " file", " (", "not", " a", " directory", ")", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "                ", "#", " Remove", " the", " '_", "processed", "'", " suffix", " from", " the", " file", " name", " before", " arch", "iving", "\n", "                ", "archive", "_", "name", " =", " re", ".", "sub", "('", "_", "processed", "'", ",", " ''", ",", " file", ")", "\n", "                ", "zip", ".", "write", "(", "file", "_", "path", ",", " archive", "_", "name", ")", "\n", "\n", "    "], "logprobs": [-1.0016841888427734, -4.446505546569824, -0.6768171787261963, -1.309482455253601, -1.059518575668335, -0.009231975302100182, -2.5824179649353027, -0.41105687618255615, -0.58036869764328, -0.0016413562698289752, -0.6147047281265259, -0.005951777566224337, -0.8739632368087769, -0.783437967300415, -0.9254389405250549, -0.8784208297729492, -0.06607507914304733, -0.000551310193259269, -0.00010466027742950246, -0.007316343020647764, -2.3364747903542593e-05, -0.004404961597174406, -1.1920928244535389e-07, -0.0005777596961706877, -0.08955973386764526, -3.4689302992774174e-05, -1.3708974620385561e-05, -0.004915297031402588, -0.047676652669906616, -1.4883675575256348, -0.0030540036968886852, -0.07689816504716873, -0.0016217187512665987, -0.022409191355109215, -0.11465943604707718, -0.004181808326393366, -0.5553197860717773, -0.0006023023161105812, -0.06139209121465683, -1.1399115324020386, -2.709364891052246, -0.8154039978981018, -1.5087685585021973, -3.1055519580841064, -2.5970048904418945, -2.354992389678955, -0.3253228962421417, -0.2122393250465393, -0.04038652777671814, -0.0008734225411899388, -0.15646804869174957, -0.14940625429153442, -0.027886826545000076, -7.438383181579411e-05, -7.545663538621739e-05, -0.16274136304855347, -0.0008008848526515067, -0.00311354361474514, -0.18086877465248108, -0.002459954936057329, -0.020271271467208862, -0.0028032076079398394, -0.24173986911773682, -0.03173815831542015, -0.08580001443624496, -0.0010494445450603962, -2.109982233378105e-05, -0.0039434065110981464, -0.07027475535869598, -0.001053969725035131, -0.024400746449828148, -0.9886693358421326, -0.028414057567715645, -0.4819953739643097, -0.08968943357467651, -0.0028746493626385927, -0.1767682433128357, -0.6312310099601746, -0.07494385540485382, -0.0004129749140702188, -0.08526191115379333, -0.018967444077134132, -0.06176804006099701, -0.0010170531459152699, -0.015682699158787727, -9.536738616588991e-07, -5.185469490243122e-05, -1.0490362910786644e-05, -0.006226308643817902, -0.0006089740199968219, -0.003990426659584045, -1.4662635294371285e-05, -8.940656698541716e-06, -0.0009233264136128128, -0.00827089324593544, -5.602820692729438e-06, -1.3828182090946939e-05, -0.0008384049870073795, -0.0003781795676331967, -0.03203791379928589, -0.00042274597217328846, -0.027159444987773895, -1.8448536396026611, -0.3381696939468384, -0.059711258858442307, -2.218533754348755, -1.75138258934021, -0.0034884095657616854, -1.796027660369873, -3.0280208587646484, -1.7579197883605957, -0.2779305577278137, -0.025203721597790718, -0.08770615607500076, -0.10937163978815079, -0.015468151308596134, -0.021360931918025017, -0.0004557524516712874, -0.03295082598924637, -0.005049452651292086, -3.480850500636734e-05, -1.0609570381348021e-05, -5.8410845667822286e-05, -1.1920928244535389e-07, -3.504691630951129e-05, -0.00010787858627736568, -0.0032556646037846804, -4.887569048150908e-06, -0.0002422039397060871, -0.00032074074260890484, -0.16978688538074493, -0.009069555439054966, -0.11774636805057526, -0.00018439977429807186, -0.7324389219284058, -2.205977439880371, -0.005205648019909859, -0.06845518946647644, -0.43025797605514526, -1.2032537460327148, -0.2102532684803009, -2.109316110610962, -0.8384775519371033, -0.017586836591362953, -1.1013379096984863, -2.2836153507232666, -0.037535425275564194, -0.11278688907623291, -0.000607782625593245, -0.006487025413662195, -0.5264278054237366, -0.12521624565124512, -0.004287812393158674, -2.145764938177308e-06, -2.264974000354414e-06, -0.00011216964776394889, -9.154854342341423e-05, -0.006375213619321585, -1.0286245346069336, -0.0180794857442379, -0.008474697358906269, -0.0007818264421075583, -0.0016017238376662135, -8.106198947643861e-06, -5.340433563105762e-05, -1.0728830375228426e-06, -0.0005932478234171867, -0.00011300401820335537, -0.005326603073626757, -3.313963316031732e-05, -8.4638240878121e-06, -0.00018285033002030104, -0.0014331794809550047, -0.0005962263094261289, -0.0014862692914903164, -2.9646220207214355, -0.0029356263112276793, -0.07070691883563995, -1.0983736515045166, -0.08962338417768478, -0.12941354513168335, -0.10354875028133392, -0.9669254422187805, -0.550611674785614, -0.7113937139511108, -0.0012179345358163118, -1.6186957359313965, -0.05399903282523155, -0.018392490223050117, -0.017016010358929634, -0.265310674905777, -0.2398250252008438, -0.00012003655137959868, -0.0017520328983664513, -0.028993122279644012, -9.417489309271332e-06, -2.1219027985353023e-05, -1.1920928244535389e-07, -0.00029988560709170997, -0.00018559163436293602, -6.603976362384856e-05, -0.00038020533975213766, -0.001190073206089437, -3.099436753473128e-06, -0.0061703892424702644, -0.00015138434537220746, -0.009605498984456062, -0.735518753528595, -3.5350451469421387, -0.49913859367370605, -1.3337993621826172, -0.004912686999887228, -0.009747881442308426, -0.11293138563632965, -0.08204828947782516, -0.00806432869285345, -0.6404465436935425, -0.01760089211165905, -2.449640989303589, -0.6028279662132263, -0.009245085529983044, -0.04140898212790489, -0.0005690624238923192, -2.319106101989746, -0.00023123928986024112, -0.1740676462650299, -0.012760534882545471, -0.12570510804653168, -1.2397689715726301e-05, -0.0012856797548010945, -1.0207704305648804, -0.09680959582328796, -0.0010568277211859822, -0.33896976709365845, -0.0002079985715681687, -0.010565063916146755, -0.00013863079948350787, -0.031516749411821365, -0.01106259785592556, -0.0033496483229100704, -0.2657356560230255, -0.05453198030591011, -0.0004975749761797488, -1.1444026313256472e-05, -2.5987286790041253e-05, -0.002284775720909238, -0.0036741863004863262, -6.794906312279636e-06, -0.00023112009512260556, -0.6997066736221313, -9.775113539944869e-06, -0.0002097863471135497, -0.02978929691016674, -0.008428005501627922, -0.1676885038614273, -0.1602904200553894], "finish_reason": "length"}], "metrics": {"energy": 860.0831856155394, "energy_per_token": 3.3596999438107007, "time": 21.435356, "time_per_token": 0.083731859375}}
{"outputs": [{"text": "with zipfile.ZipFile(os.path.join(target_dir, archive_name), 'w') as zip_ref:\n        for root, dirs, files in os.walk(source_dir):\n            for file in files:\n                if re.match('^.+_processed\\\\.txt', file):\n                    zip_ref.write(os.path.join(root, file), file)\n    return os.path.join(target_dir, archive_name)", "tokens": ["with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "w", "')", " as", " zip", "_", "ref", ":", "\n", "        ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "if", " re", ".", "match", "('", "^", ".", "+", "_", "processed", "\\\\", ".", "txt", "'", ",", " file", "):", "\n", "                ", "    ", "zip", "_", "ref", ".", "write", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", ")", ",", " file", ")", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "if"], "logprobs": [-3.6505661010742188, -0.01481742225587368, -0.00013982271775603294, -1.4066597032069694e-05, -0.0001463782973587513, -4.768370445162873e-07, -7.986990567587782e-06, -0.001833664020523429, -0.2196005880832672, -1.4305104514278355e-06, -0.00010334911348763853, -1.4305104514278355e-06, -0.0020775655284523964, -0.00035482310340739787, -0.003135290928184986, -4.3987260141875595e-05, -4.887569048150908e-06, -0.0019119569333270192, -0.005919662769883871, -5.960446742392378e-06, -1.4305104514278355e-06, -0.000971917703282088, -0.0001436368766007945, -0.17286676168441772, -0.027721380814909935, -0.17462050914764404, -0.00016318420239258558, -0.3018340468406677, -0.6577500104904175, -2.9705193042755127, -0.0002650863316375762, -0.0034143980592489243, -0.01255360059440136, -0.16281814873218536, -0.37945592403411865, -0.012579381465911865, -0.33024367690086365, -0.0004881620698142797, -4.076874756719917e-05, -0.006503251381218433, -0.00034171465085819364, -0.0005144941387698054, -1.311301275563892e-06, -2.9801878554280847e-05, -0.00022635281493421644, -0.005600594449788332, -4.768360213347478e-06, -5.245195097813848e-06, -0.021155770868062973, -0.0022858462762087584, -0.0016356435371562839, -0.14924465119838715, -0.08557602763175964, -0.0397157296538353, -0.007786635309457779, -8.785339014139026e-05, -0.00014244495832826942, -0.001177928177639842, -0.2929522395133972, -0.21364104747772217, -3.981510963058099e-05, -1.717490315437317, -2.3408803939819336, -1.9609793424606323, -0.19957897067070007, -1.2728582620620728, -0.05916915461421013, -0.009525799192488194, -2.8163344860076904, -0.009466993622481823, -2.7515227794647217, -2.602341413497925, -0.00022468426323030144, -0.005612448789179325, -0.0616910457611084, -0.020118696615099907, -0.000747877755202353, -0.0006692553870379925, -0.49653950333595276, -0.0004670721245929599, -0.000969535845797509, -3.731181277544238e-05, -9.65590606938349e-06, -0.0001426833332516253, -0.006719375029206276, -1.1920928244535389e-07, -1.1324817933200393e-05, 0.0, -0.0004152389301452786, -4.100715523236431e-05, -0.007221193052828312, -0.00016759421851020306, -0.0018465149914845824, -0.030572697520256042, -0.0006959400488995016, -1.7356188297271729, -0.05024704337120056, -0.006446044892072678, -1.0586284399032593, -0.1948409378528595, -0.05277771130204201, -1.2755313036905136e-05, -7.390703103737906e-05, -1.2397689715726301e-05, -0.01924310252070427, -0.00043561504571698606, -0.0013304438907653093, -1.9192511899746023e-05, -8.34461570775602e-06, -0.00023469554434996098, -0.002816283842548728, -1.0847986231965479e-05, -3.2186455882765586e-06, -0.2743743062019348, -0.1834937334060669, -0.00803512055426836, -0.9235617518424988], "finish_reason": "stop"}], "metrics": {"energy": 410.9270528717039, "energy_per_token": 3.5121970330914865, "time": 9.460453, "time_per_token": 0.08085857264957265}}
{"outputs": [{"text": "# Check if the source_dir is a valid directory\n    if not os.path.isdir(source_dir):\n        raise ValueError(\"Invalid source directory\")\n\n    # Create the target directory if it does not exist\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    # Create the archive file path\n    archive_path = os.path.join(target_dir, archive_name)\n\n    # Use a regular expression to identify processed files\n    processed_regex = re.compile(r'_processed$')\n\n    # Create the archive\n    with zipfile.ZipFile(archive_path, 'w') as zip:\n        for root, dirs, files in os.walk(source_dir):\n            for file in files:\n                file_path = os.path.join(root, file)\n                match = processed_regex.search(file_path)\n                if match:\n                    # Add the file to the archive\n                    zip.write(file_path, arcname=file)\n                    # Remove the file from the source", "tokens": ["#", " Check", " if", " the", " source", "_", "dir", " is", " a", " valid", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " source", " directory", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Create", " the", " archive", " file", " path", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "#", " Use", " a", " regular", " expression", " to", " identify", " processed", " files", "\n", "    ", "processed", "_", "regex", " =", " re", ".", "compile", "(", "r", "'_", "processed", "$", "')", "\n", "\n", "    ", "#", " Create", " the", " archive", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " zip", ":", "\n", "        ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "                ", "match", " =", " processed", "_", "regex", ".", "search", "(", "file", "_", "path", ")", "\n", "                ", "if", " match", ":", "\n", "                ", "    ", "#", " Add", " the", " file", " to", " the", " archive", "\n", "                ", "    ", "zip", ".", "write", "(", "file", "_", "path", ",", " arc", "name", "=", "file", ")", "\n", "                ", "    ", "#", " Remove", " the", " file", " from", " the", " source"], "logprobs": [-1.0016841888427734, -1.889591932296753, -0.21756601333618164, -0.48256543278694153, -0.2759992778301239, -2.4657950401306152, -0.0040615457110106945, -2.4152493476867676, -0.255271852016449, -0.40856650471687317, -0.11866818368434906, -0.16330081224441528, -0.0011233931872993708, -0.016860008239746094, -0.02221217192709446, -0.0036089783534407616, -1.2636104656849056e-05, -0.0015329287853091955, -4.172316494077677e-06, -0.027332060039043427, -0.00010549465514486656, -9.07141511561349e-05, -0.0016686100279912353, -1.3232143828645349e-05, -2.0265558760002023e-06, -0.005796527955681086, -0.0004318020073696971, -0.001105888863094151, -0.1305382251739502, -0.2736540138721466, -2.3841830625315197e-06, -0.08965706080198288, -0.942154049873352, -1.02566397190094, -0.29819455742836, -0.15463189780712128, -0.9812346696853638, -0.0012748456792905927, -0.0002739054325502366, -0.17018455266952515, -0.0006922471220605075, -0.010901655070483685, -2.716823101043701, -0.4419463276863098, -0.12090472877025604, -0.24952241778373718, -0.01283115055412054, -0.0041279117576777935, -1.7211023569107056, -0.00015555603022221476, -0.012378414161503315, -0.015225264243781567, -9.202533692587167e-05, -0.29998964071273804, -0.0017855905462056398, -8.856858039507642e-05, -3.576278118089249e-07, -1.168244216387393e-05, -1.7165990357170813e-05, -0.356840580701828, -3.9934315282152966e-05, -0.000566203030757606, -2.861018856492592e-06, -8.344646857949556e-07, -0.0005171154043637216, -5.0424259825376794e-05, -0.0004914983292110264, -0.009349019266664982, -1.4305104514278355e-06, -0.03258246183395386, -5.245195097813848e-06, -2.3841855067985307e-07, -4.386805812828243e-05, -0.00011836781777674332, -4.768370445162873e-07, 0.0, -0.001384372473694384, -0.00010382589971413836, -0.022232109680771828, -0.0005598884890787303, -0.02370341867208481, -1.8234798908233643, -0.4114108085632324, -0.3210442066192627, -0.37187865376472473, -0.5418607592582703, -0.257660835981369, -0.0001616347290109843, -0.039140552282333374, -0.011551636271178722, -0.22246402502059937, -0.001278893556445837, -0.004032457713037729, -1.1920928244535389e-07, -5.364403477869928e-06, -2.861018856492592e-06, -0.0026312987320125103, -3.516612196108326e-05, -0.0007203606073744595, -1.5497195136049413e-06, -4.768370445162873e-07, -8.546940807718784e-05, -0.0016076747560873628, -2.622600959512056e-06, -3.4570634852570947e-06, -0.00024291902082040906, -0.00010024998482549563, -0.01777692139148712, -0.00027366707217879593, -0.014843028038740158, -3.5271055698394775, -1.2243493795394897, -0.18656191229820251, -0.000914393924176693, -0.35591891407966614, -1.433262825012207, -0.6282557249069214, -0.07438892871141434, -0.2382039576768875, -0.00017105070583056659, -0.3388417661190033, -0.0006861716392450035, -1.0932947397232056, -0.0008294717408716679, -0.13757115602493286, -8.046303264563903e-05, -0.00014447122521232814, -0.012121584266424179, -0.027439117431640625, -0.29229217767715454, -0.003500764025375247, -1.625544548034668, -0.0008839037618599832, -0.0018284284742549062, -0.020767737179994583, -0.0001003691868390888, -0.09075427800416946, -1.1244083642959595, -0.8969848155975342, -0.9214633107185364, -0.8015341758728027, -0.00013433984713628888, -0.024789929389953613, -0.0027591038960963488, -1.7046782886609435e-05, -3.2186455882765586e-06, -4.23184028477408e-05, 0.0, -1.311301275563892e-06, -4.625213477993384e-05, -0.0007974305190145969, -3.576272320060525e-06, -3.349725011503324e-05, -0.00014482879487331957, -0.06132134795188904, -0.006897094193845987, -0.18346862494945526, -5.781483559985645e-05, -0.6989223957061768, -1.7018623352050781, -0.0010413468116894364, -0.017107656225562096, -0.7219027876853943, -0.1994764357805252, -0.001026222831569612, -0.047538433223962784, -4.732496745418757e-05, -7.748573807475623e-06, -0.0005931286723352969, -6.937739817658439e-05, -9.190614218823612e-05, -3.576278118089249e-07, -5.245195097813848e-06, -0.00012957210128661245, -0.000720956246368587, -9.536738616588991e-07, -2.3841855067985307e-07, -0.004758106544613838, -0.00031144535751082003, -0.0005747812101617455, -0.09561479091644287, -0.05679970234632492, -0.028149724006652832, -0.0011330381967127323, -1.3232143828645349e-05, -4.589452510117553e-05, -0.000780635280534625, -1.726248860359192, -0.039043452590703964, -0.020178748294711113, -0.0001646144810365513, -0.0002172949316445738, -1.1920928244535389e-07, -5.960462772236497e-07, -3.576278118089249e-07, -0.0002094287920044735, -4.6491513785440475e-06, -0.0009545299108140171, -2.7179348762729205e-05, -8.67805938469246e-05, -2.8729025871143676e-05, -0.0002829628065228462, -0.10526721924543381, -3.5781564712524414, -0.00300586991943419, -0.022863933816552162, -1.1920928244535389e-07, -3.576278118089249e-07, -1.6689286894688848e-06, -0.00011121608258690685, -7.712543447269127e-05, -0.0028539663180708885, -1.3925144672393799, -1.3351351299206726e-05, -0.0008950994815677404, -0.003562415484338999, -0.05736740678548813, -0.0399700403213501, -0.0057972390204668045, -0.07492848485708237, -0.004437480587512255, -0.0003599472693167627, -0.0006573423161171377, -0.828625500202179, -1.1224957704544067, -0.20122696459293365, -0.5600835680961609, -0.007192669901996851, -0.0004481264913920313, -0.018062042072415352, -0.3767721951007843, -0.00010656742961145937, -5.066266385256313e-05, -0.0759061872959137, -0.0017921352991834283, -3.576272320060525e-06, -2.396077979938127e-05, -0.003531411988660693, -0.0004058252670802176, -3.2186455882765586e-06, -0.031559720635414124, -0.6699988842010498, -3.576278118089249e-07, -0.005053959786891937, -1.78976309299469, -0.061548810452222824, -0.002091722097247839, -0.31071707606315613, -0.003174862591549754, -0.013325441628694534, -0.5901191234588623, -0.00688596535474062, -0.8218808174133301, -0.08345704525709152, -0.08028018474578857, -0.2393077313899994], "finish_reason": "length"}], "metrics": {"energy": 880.436658575058, "energy_per_token": 3.4392056975588203, "time": 21.444088, "time_per_token": 0.08376596875}}
{"outputs": [{"text": "archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w', zipfile.ZIP_DEFLATED) as zipf:\n        for dirpath, dirnames, filenames in os.walk(source_dir):\n            for filename in filenames:\n                if re.match(r'^.+_processed\\.txt$', filename):\n                    filepath = os.path.join(dirpath, filename)\n                    zipf.write(filepath, arcname=os.path.relpath(filepath, source_dir))\n                    os.remove(filepath)\n    return archive_path", "tokens": ["archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "f", ":", "\n", "        ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "            ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "                ", "if", " re", ".", "match", "(", "r", "'^", ".", "+", "_", "processed", "\\", ".", "txt", "$'", ",", " filename", "):", "\n", "                ", "    ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "                ", "    ", "zip", "f", ".", "write", "(", "file", "path", ",", " arc", "name", "=", "os", ".", "path", ".", "rel", "path", "(", "file", "path", ",", " source", "_", "dir", "))", "\n", "                ", "    ", "os", ".", "remove", "(", "file", "path", ")", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "def"], "logprobs": [-3.2332401275634766, -0.04744373634457588, -0.09181799739599228, -0.00306018372066319, -0.02100262977182865, -5.960462772236497e-07, -2.992108420585282e-05, -4.172316494077677e-06, -0.003749603871256113, -0.00016616393986623734, -0.0029006809927523136, -8.702239938429557e-06, -1.6689286894688848e-06, -0.0006962973857298493, -0.0025957482866942883, -4.6491513785440475e-06, -9.417489309271332e-06, -0.000336590368533507, -0.006303784437477589, -0.4501909911632538, -0.9674344062805176, -0.002980791963636875, -3.0874729418428615e-05, -4.410734163684538e-06, -8.010543388081715e-05, -2.3841855067985307e-07, -3.6954811548639555e-06, -0.00012933371181134135, -0.001479484373703599, -7.152555099310121e-07, -0.00010215714428341016, -0.0005290300468914211, -0.06853567063808441, -0.013845355249941349, -2.4009337425231934, -0.0002454218047205359, -0.11867929995059967, -1.7165990357170813e-05, -2.861018856492592e-06, -3.5523738915799186e-05, -1.1324817933200393e-05, -2.50339189733495e-06, -0.0028713210485875607, -2.50339189733495e-06, -2.6702524337451905e-05, -0.006587574724107981, -1.549708758830093e-05, -0.29036739468574524, -0.807545006275177, -0.0008172033121809363, -0.002110279630869627, -0.007209239527583122, -0.09707175195217133, -2.732079267501831, -0.09302853792905807, -0.0003946240758523345, -0.0804729089140892, -0.00019393471302464604, -3.671578815556131e-05, -0.0010255083907395601, 0.0, -4.768370445162873e-07, -0.00024244230007752776, -0.00044276448898017406, -3.099436753473128e-06, -1.7165990357170813e-05, -0.0006596058374270797, -0.004992162808775902, -4.6491513785440475e-06, -5.245195097813848e-06, -0.004118295386433601, -0.0015981532633304596, -0.0009198724874295294, -0.24600203335285187, -0.08343664556741714, -7.521823135903105e-05, -0.002368622925132513, -2.3841855067985307e-07, -1.1920928244535389e-07, -7.4741430580616e-05, -0.0001915509783430025, -0.0008972433279268444, -0.2703656554222107, -0.31833747029304504, -5.9602869441732764e-05, -1.446752667427063, -0.081444650888443, -0.019560420885682106, -2.128126621246338, -0.20386657118797302, -0.9982262849807739, -0.09974685311317444, -0.006643589120358229, -0.2454417645931244, -0.0090800691395998, -2.2693393230438232, -0.01152771431952715, -5.6980417866725475e-05, -0.002674813847988844, -0.024009665474295616, -0.017283303663134575, -0.0004020121123176068, -0.0005174727994017303, -0.11893197894096375, -1.2535948753356934, -0.0027173757553100586, -0.0006517431465908885, -8.344646857949556e-07, -3.099436753473128e-06, -7.152555099310121e-07, -0.006592667195945978, -2.5748875486897305e-05, -0.00665093120187521, -3.576278118089249e-07, -0.00011288482346571982, -6.05564855504781e-05, -0.00023409964342135936, -0.0005224770284257829, -0.0011853104224428535, -5.686121585313231e-05, -0.571828305721283, -0.010227651335299015, -0.00015114595589693636, -8.940656698541716e-06, -1.490105023549404e-05, -0.0026349846739321947, -4.053033626405522e-05, -0.013976319693028927, -1.0489681959152222, -3.576278118089249e-07, -0.009328941814601421, -0.11092191934585571, -1.6689286894688848e-06, -0.0001267114421352744, -7.152555099310121e-07, -0.5215173363685608, -2.9802276912960224e-06, -6.318072337307967e-06, -0.02256421372294426, -3.814689989667386e-06, -0.001405086019076407, -0.12054022401571274, -2.7418097943154862e-06, -3.814689989667386e-06, -0.002622975967824459, -0.0034584729000926018, -1.6816034317016602, -0.13635429739952087, -0.7981391549110413, -2.47952248173533e-05, -0.011081697419285774, -0.00014780859055463225, -0.006307930685579777, -7.629365427419543e-06, -0.002657931065186858, -0.036346010863780975, -0.22068864107131958, -0.25197499990463257, -0.0357205793261528, -8.106198947643861e-06, -0.0002805792901199311, -0.5116766691207886, -0.009966373443603516, -1.1225831508636475], "finish_reason": "stop"}], "metrics": {"energy": 556.536241596222, "energy_per_token": 3.3935136682696463, "time": 13.665906, "time_per_token": 0.08332869512195122}}
{"outputs": [{"text": "# create directory if it does not exist\n    os.makedirs(target_dir, exist_ok=True)\n\n    # create a list of filenames ending with '_processed.txt'\n    filenames = [filename for filename in os.listdir(source_dir) if filename.endswith('_processed.txt')]\n\n    # create a zip archive\n    with zipfile.ZipFile(os.path.join(target_dir, archive_name), mode='w') as zip_archive:\n        # add each file to the zip archive\n        for filename in filenames:\n            zip_archive.write(os.path.join(source_dir, filename), arcname=filename)\n            shutil.move(os.path.join(source_dir, filename), target_dir)\n\n    return os.path.join(target_dir, archive_name)", "tokens": ["#", " create", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " create", " a", " list", " of", " fil", "en", "ames", " ending", " with", " '_", "processed", ".", "txt", "'", "\n", "    ", "fil", "en", "ames", " =", " [", "filename", " for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " filename", ".", "end", "sw", "ith", "('", "_", "processed", ".", "txt", "')", "]", "\n", "\n", "    ", "#", " create", " a", " zip", " archive", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " mode", "='", "w", "')", " as", " zip", "_", "archive", ":", "\n", "        ", "#", " add", " each", " file", " to", " the", " zip", " archive", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "zip", "_", "archive", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", ")", ",", " arc", "name", "=", "filename", ")", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", ")", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.0016841888427734, -3.9071853160858154, -4.288723468780518, -0.6657360196113586, -0.4020501375198364, -0.9919571280479431, -0.001908744452521205, -0.016525300219655037, -0.04544530808925629, -0.0024711331352591515, -1.904416561126709, -0.00025078488397412, -0.0030791987664997578, -1.0728830375228426e-06, -7.867782187531702e-06, -0.00021038226259406656, -0.009080187417566776, -2.9682672902708873e-05, -5.9960475482512265e-05, -0.006308641284704208, -0.000809818331617862, -1.0728830375228426e-06, -4.291525328881107e-06, -0.005779935047030449, -0.0005915798828937113, -0.00021991695393808186, -0.0013981815427541733, -0.2841288447380066, -0.0004379982128739357, -0.2299964874982834, -1.9131529331207275, -2.4009456634521484, -1.902306318283081, -0.045459434390068054, -3.6494221687316895, -0.00018988236843142658, -6.246371776796877e-05, -3.497873544692993, -0.2541116178035736, -0.4591464102268219, -0.005024900194257498, -1.0622539520263672, -0.83216392993927, -0.004758818540722132, -0.4873005747795105, -0.000697846058756113, -0.8742832541465759, -0.00019167017308063805, -1.6212332411669195e-05, -0.03371250629425049, -0.07768788188695908, -1.1515376567840576, -0.020406069234013557, -0.0018983930349349976, -0.002774677239358425, -0.005021934863179922, -8.106198947643861e-06, -0.00046171018038876355, -4.768370445162873e-07, -0.00027569307712838054, -0.052730217576026917, -1.0609570381348021e-05, -7.033323527139146e-06, -0.0025101364590227604, -0.23954445123672485, -0.3797157406806946, -0.01045075710862875, -0.0068229790776968, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.0526423454284668, -0.010113895870745182, -0.00018749863374978304, -0.0014756753807887435, -0.0011524471919983625, -0.0005942009738646448, -0.008179026655852795, -0.0003361137059982866, -0.09943865984678268, -0.00034767304896377027, -0.07171926647424698, -0.598664402961731, -1.431162714958191, -0.8577845692634583, -1.0883923768997192, -1.2764238119125366, -0.0001839230244513601, -0.5401049852371216, -0.003660052316263318, -2.1219027985353023e-05, -3.3378546504536644e-06, -5.94836674281396e-05, 0.0, -4.410734163684538e-06, -0.001745130866765976, -0.18715129792690277, -8.821448318485636e-06, -2.5033637939486653e-05, -1.1920922133867862e-06, -0.0003682888636831194, -0.00017891713650897145, -0.0008005275158211589, -6.556489552167477e-06, -5.960462772236497e-07, -0.0007316772826015949, -0.0023479294031858444, -4.172316494077677e-06, -7.152555099310121e-07, -0.0009848987683653831, -6.353653589030728e-05, -1.421566367149353, -0.015286901034414768, -0.01768006756901741, -0.0837336853146553, -2.8132995794294402e-05, -0.9529725909233093, -0.33867117762565613, -0.6334488987922668, -0.001459724735468626, -0.0008883106056600809, -0.07070858776569366, -0.46850308775901794, -0.5344642996788025, -1.35306715965271, -0.2835967242717743, -0.10986562818288803, -0.015255319885909557, -1.268042802810669, -0.006470325868576765, -0.1540372222661972, -0.0002944036095868796, -0.0075597395189106464, -0.01969321072101593, -0.00025829317746683955, -0.0003813969960901886, -1.1920922133867862e-06, -7.152555099310121e-07, -7.092700980138034e-05, -7.045020902296528e-05, -0.002651748713105917, -0.3958582878112793, -0.0022998806089162827, -0.0006256530177779496, -5.495397272170521e-05, -0.00023112009512260556, -7.211902266135439e-05, -0.034039899706840515, -3.099436753473128e-06, -6.079655122448457e-06, -3.576278118089249e-07, -7.1403817855753e-05, -5.864924969500862e-05, -0.0007233387441374362, -2.0265558760002023e-06, -5.125986263010418e-06, -8.809178689261898e-05, -0.0004332319076638669, -0.028507791459560394, -6.544376083184034e-05, -0.6870620846748352, -3.576278118089249e-07, -0.021808337420225143, -0.2854023873806, -0.12174700945615768, -0.009604791179299355, -1.5257169008255005, -2.455310344696045, -5.960462772236497e-07, -3.6954811548639555e-06, -0.04403190314769745, -0.0004567056894302368, -0.011329364962875843, -6.198863957251888e-06, -1.1324817933200393e-05, -1.0728830375228426e-06, -6.949660019017756e-05, -8.821098163025454e-05, -0.0011195826809853315, -4.637133679352701e-05, -1.5258672647178173e-05, -8.11782301752828e-05, -0.0009130837861448526, -0.0011085085570812225, -0.0003657863999251276, -1.1086790561676025, -6.925819616299123e-05, -0.00020632999076042324, -0.02497074380517006, -0.09563277661800385, -0.1700964719057083, -0.015493270941078663, -0.47348201274871826, -0.026836521923542023, -9.179073458653875e-06, -2.0503786799963564e-05, -7.867782187531702e-06, -0.01116233505308628, -0.000495549407787621, -0.001440678839571774, -2.6464111215318553e-05, -6.079655122448457e-06, -0.00022504181833937764, -0.003630002262070775, -1.0847986231965479e-05, -8.583032467868179e-06, -1.0241438150405884, -8.702239938429557e-06, -2.622600959512056e-06, -1.6689286894688848e-06, -7.986990567587782e-06, -0.23007641732692719], "finish_reason": "stop"}], "metrics": {"energy": 738.8184215946195, "energy_per_token": 3.5015091070835047, "time": 17.663946, "time_per_token": 0.08371538388625592}}
{"outputs": [{"text": "# Set default values\n    if not source_dir:\n        source_dir = './data/'\n    if not target_dir:\n        target_dir = './data_processed/'\n\n    # Find the source directory\n    if not os.path.isdir(source_dir):\n        raise ValueError(f\"The source directory {source_dir} does not exist or is not a valid directory.\")\n\n    # Create a new directory for the processed data\n    if not os.path.isdir(target_dir):\n        os.makedirs(target_dir)\n\n    # Identify the processed files and move them to the target directory\n    for file_name in os.listdir(source_dir):\n        if re.search('_processed.csv', file_name):\n            source_file_path = os.path.join(source_dir, file_name)\n            target_file_path = os.path.join(target_dir, file_name)\n            shutil.move(source_file_path, target_file_path)\n\n    # Archive the processed files\n    ", "tokens": ["#", " Set", " default", " values", "\n", "    ", "if", " not", " source", "_", "dir", ":", "\n", "        ", "source", "_", "dir", " =", " '", ".", "/", "data", "/'", "\n", "    ", "if", " not", " target", "_", "dir", ":", "\n", "        ", "target", "_", "dir", " =", " '", ".", "/", "data", "_", "processed", "/'", "\n", "\n", "    ", "#", " Find", " the", " source", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " source", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", " or", " is", " not", " a", " valid", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " new", " directory", " for", " the", " processed", " data", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Ident", "ify", " the", " processed", " files", " and", " move", " them", " to", " the", " target", " directory", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "if", " re", ".", "search", "('", "_", "processed", ".", "csv", "'", ",", " file", "_", "name", "):", "\n", "            ", "source", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "_", "name", ")", "\n", "            ", "target", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", "_", "name", ")", "\n", "            ", "sh", "util", ".", "move", "(", "source", "_", "file", "_", "path", ",", " target", "_", "file", "_", "path", ")", "\n", "\n", "    ", "#", " Archive", " the", " processed", " files", "\n", "    "], "logprobs": [-1.0016841888427734, -4.446505546569824, -2.976855516433716, -1.4222334623336792, -1.5996696949005127, -0.008354240097105503, -0.9225882887840271, -0.8702093958854675, -0.1876077502965927, -8.761498611420393e-05, -0.00047302976599894464, -0.3591867983341217, -0.014381448738276958, -0.0010745710460469127, -0.16993646323680878, -0.0003545847721397877, -0.0001546025014249608, -0.0011295850854367018, -0.42930737137794495, -0.12525737285614014, -0.5309194326400757, -0.03142514452338219, -0.1662992537021637, -0.004403774626553059, -0.17222091555595398, -0.00767437694594264, -0.001036583329550922, -0.001986555755138397, -2.109982233378105e-05, -9.059865078597795e-06, -0.0008644896443001926, -2.729855441430118e-05, -0.00017105070583056659, -0.0018004650482907891, -2.1457441107486375e-05, -6.079655122448457e-06, -0.00022766382608097047, -0.025813225656747818, -0.0020987405441701412, -0.0012988949893042445, -0.0069727422669529915, -0.005817742552608252, -0.003082169685512781, -0.009717186912894249, -0.00029023250681348145, -1.176037311553955, -0.0011308948742225766, -0.10263741761445999, -3.39060378074646, -2.5878567695617676, -2.9865660667419434, -0.3650270402431488, -0.9143094420433044, -0.0005333193112164736, -0.4025265872478485, -0.061887387186288834, -0.006646075751632452, -2.4676019165781327e-05, -0.004062970634549856, -2.622600959512056e-06, -0.7373543977737427, -0.005530177149921656, -0.0005287918029353023, -0.006352944299578667, -9.059865078597795e-06, -4.768360213347478e-06, -0.0063174073584377766, -0.0004385939973872155, -0.00135318236425519, -0.2432342767715454, -0.4210076332092285, -7.271740287251305e-06, -0.14722058176994324, -0.24188262224197388, -0.28286975622177124, -1.4013972282409668, -0.3190203905105591, -0.02652614936232567, -1.6389293670654297, -0.0022103183437138796, -0.00019095504831057042, -4.6491513785440475e-06, -0.004956814926117659, -0.09777825325727463, -0.0002613918040879071, -0.0024502037558704615, -2.617596387863159, -0.024379339069128036, -0.011816859245300293, -0.057646408677101135, -1.2845613956451416, -0.13714636862277985, -0.2848694324493408, -0.015210704877972603, -0.001042894902639091, -0.00013040646445006132, -0.06559659540653229, -0.0010749283246695995, -0.013636528514325619, -0.9370781779289246, -3.051548719406128, -2.2182092666625977, -0.23700407147407532, -0.7744341492652893, -0.2993091344833374, -0.3935811221599579, -0.7919732928276062, -0.49412110447883606, -0.00017045476124621928, -0.4271283745765686, -0.024178054183721542, -0.0013991338200867176, -2.264974000354414e-06, -7.593343616463244e-05, -8.940656698541716e-06, -0.3567374646663666, -2.4199192921514623e-05, -0.000482442817883566, -0.0027285509277135134, -5.8412379075889476e-06, -1.7881377516459906e-06, -0.004742682911455631, -0.0001778444420779124, -0.0008154166280291975, -0.06055472046136856, -5.006777428206988e-06, -0.32550370693206787, -1.4305104514278355e-06, -5.960462772236497e-07, -0.0001209901092806831, -0.0011480414541438222, -4.172316494077677e-06, -1.6689286894688848e-06, -0.026800312101840973, -0.0012055517872795463, -0.062380533665418625, -0.002495985943824053, -0.0359080545604229, -2.0182528495788574, -0.00760528864338994, -1.080345630645752, -0.30265384912490845, -0.14848287403583527, -2.6914169788360596, -1.2201805114746094, -0.012405612505972385, -0.03591093048453331, -0.03557954728603363, -0.6480251550674438, -0.011036423966288567, -0.01473026629537344, -0.0006283930852077901, -1.1622328758239746, -0.9275583028793335, -0.6963604092597961, -0.017721645534038544, -0.0006129055400379002, -0.0032076595816761255, -1.9073468138230965e-06, -3.0040289857424796e-05, 0.0, -0.00010990492592100054, -0.0006934384000487626, -7.510157047363464e-06, -1.2278481335670222e-05, -0.000125281119835563, -0.00028880240279249847, -0.004556036554276943, -0.15539850294589996, -0.3082837164402008, -4.0411134250462055e-05, -0.4429852366447449, -0.7673381567001343, -0.17355157434940338, -0.0026336766313761473, -1.8469451665878296, -1.1215540170669556, -0.6306747198104858, -0.0002119316632160917, -0.005266245920211077, -5.8412379075889476e-06, -1.1920928244535389e-07, -0.12984508275985718, -0.01116268802434206, -0.0020424711983650923, -1.9597125053405762, -0.04945440590381622, -0.44661763310432434, -1.715513825416565, -0.07198109477758408, -0.0006690170848742127, -0.025971556082367897, -1.1920922133867862e-06, -1.3351351299206726e-05, -2.264974000354414e-06, -0.0007013006834313273, -0.00010001159535022452, -0.0013427060330286622, -2.610649426060263e-05, -4.410734163684538e-06, -0.0001433984871255234, -0.0005619138828478754, -8.344646857949556e-07, -3.2186455882765586e-06, -0.0002044230350293219, -0.0019810828380286694, -0.0010249129263684154, -0.08113956451416016, -6.592056161025539e-05, -0.0011368485866114497, -0.0002829628065228462, -0.0019066027598455548, -0.00018773700867313892, -0.0043464479967951775, -4.768370445162873e-07, -2.0146166207268834e-05, -1.7881377516459906e-06, -0.0001931004080688581, -8.725739462533966e-05, -0.0005283151986077428, -3.576278118089249e-07, -2.3841830625315197e-06, -0.00024351492174901068, -0.01381560880690813, -2.861018856492592e-06, -1.4066597032069694e-05, -0.01597568951547146, -0.00028761065914295614, -0.029268810525536537, -0.03228379413485527, -4.768370445162873e-07, -1.311301275563892e-06, -0.10645580291748047, -1.5616295058862306e-05, -0.0002512616047170013, -3.683499380713329e-05, -2.4199192921514623e-05, -4.8874615458771586e-05, -7.152555099310121e-07, -5.686121585313231e-05, -0.0003669780562631786, -1.1920928244535389e-07, -0.000568228424526751, -5.125986263010418e-06, -9.536738616588991e-07, -0.0005361788207665086, -0.00023684080224484205, -0.051934339106082916, -0.029572779312729836, -0.00631101056933403, -0.9678395390510559, -0.07457537949085236, -0.06727113574743271, -0.05451538413763046, -0.42926740646362305, -0.0004297763225622475], "finish_reason": "length"}], "metrics": {"energy": 851.0727109651563, "energy_per_token": 3.3245027772076416, "time": 21.426504, "time_per_token": 0.08369728125}}
{"outputs": [{"text": "# Create a new ZipFile object\n    with zipfile.ZipFile(os.path.join(target_dir, archive_name), 'w') as zipf:\n        # Walk the source directory\n        for root, dirs, files in os.walk(source_dir):\n            # Iterate over all files\n            for file in files:\n                # Check if the file has a '_processed' suffix\n                if re.search(r'\\w+_processed.txt', file):\n                    # Construct the full path of the processed file\n                    file_path = os.path.join(root, file)\n                    # Construct the relative path for the archive\n                    relative_path = os.path.relpath(file_path, source_dir)\n                    # Add the processed file to the archive\n                    zipf.write(file_path, arcname=relative_path)\n                    # Remove the processed file from the source directory\n                    os.remove(file_path)\n    # Return the path to the created archive\n    return os.path.join(target_dir, archive_name)", "tokens": ["#", " Create", " a", " new", " Zip", "File", " object", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "#", " Walk", " the", " source", " directory", "\n", "        ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "            ", "#", " Iter", "ate", " over", " all", " files", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "#", " Check", " if", " the", " file", " has", " a", " '_", "processed", "'", " suffix", "\n", "                ", "if", " re", ".", "search", "(", "r", "'\\", "w", "+", "_", "processed", ".", "txt", "'", ",", " file", "):", "\n", "                ", "    ", "#", " Construct", " the", " full", " path", " of", " the", " processed", " file", "\n", "                ", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "                ", "    ", "#", " Construct", " the", " relative", " path", " for", " the", " archive", "\n", "                ", "    ", "relative", "_", "path", " =", " os", ".", "path", ".", "rel", "path", "(", "file", "_", "path", ",", " source", "_", "dir", ")", "\n", "                ", "    ", "#", " Add", " the", " processed", " file", " to", " the", " archive", "\n", "                ", "    ", "zip", "f", ".", "write", "(", "file", "_", "path", ",", " arc", "name", "=", "relative", "_", "path", ")", "\n", "                ", "    ", "#", " Remove", " the", " processed", " file", " from", " the", " source", " directory", "\n", "                ", "    ", "os", ".", "remove", "(", "file", "_", "path", ")", "\n", "    ", "#", " Return", " the", " path", " to", " the", " created", " archive", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "def"], "logprobs": [-1.0016841888427734, -2.0988948345184326, -1.0064995288848877, -2.996117115020752, -0.9265180230140686, -0.045356906950473785, -1.193556785583496, -1.6926195621490479, -0.0010806442005559802, -0.5035194754600525, -0.008312981575727463, -4.589452510117553e-05, -5.125986263010418e-06, -0.00010013079008786008, 0.0, -3.576278118089249e-07, -0.002645566128194332, -0.2269664704799652, -2.264974000354414e-06, -7.390703103737906e-05, -1.5497195136049413e-06, -0.001354134758003056, -0.00022957073815632612, -0.0035957936197519302, -3.93382906622719e-05, -3.6954811548639555e-06, -0.0014674619305878878, -0.005067243706434965, -7.629365427419543e-06, -4.768370445162873e-07, -0.0007578838267363608, -0.00013433984713628888, -0.17349866032600403, -0.03334834426641464, -0.07209179550409317, -0.0027852572966367006, -0.287680059671402, -1.085517406463623, -0.0011252983240410686, -0.0017034795600920916, -0.041594479233026505, -0.11314134299755096, -1.6168423891067505, -2.371115207672119, -0.6951915621757507, -0.017248621210455894, -0.9116172194480896, -0.0002277830062666908, -0.00618140771985054, -0.07381707429885864, -0.002971521345898509, -0.09822851419448853, -0.00015793983766343445, -1.5735502529423684e-05, -0.0015976772410795093, -0.00012575789878610522, -0.00011812942830147222, -2.622600959512056e-06, -5.722029527532868e-06, -9.905801562126726e-05, -0.002851588884368539, -1.9073468138230965e-06, -4.291525328881107e-06, -0.010537815280258656, -0.00018153927521780133, -0.0014735327567905188, -0.10541699826717377, -1.3621891736984253, -0.00043990471749566495, -0.33922845125198364, -2.199967384338379, -0.1866789311170578, -0.5636858940124512, -4.911301948595792e-05, -0.0007588367443531752, -0.1346741020679474, -0.037763770669698715, -0.0015994624700397253, -5.07818695041351e-05, -2.062299427052494e-05, -0.001029557315632701, -0.028581243008375168, -0.3550354838371277, -0.02450939640402794, -0.1234523206949234, -0.15585783123970032, -1.1442006826400757, -2.299354314804077, -0.33279314637184143, -0.004273805767297745, -0.015331042930483818, -0.01723092794418335, -0.33572304248809814, -0.00010263393050990999, -0.035571955144405365, -0.22672057151794434, -7.390948667307384e-06, -0.35558849573135376, -0.40513867139816284, -0.025351105257868767, -2.6634738445281982, -1.8429994583129883, -0.18883854150772095, -0.12230592221021652, -0.010415601544082165, -1.7884366512298584, -2.0865137577056885, -0.34897348284721375, -0.00010346830822527409, -0.01274876482784748, -0.0952911302447319, -0.001960024470463395, -0.0008621074957773089, -0.000551310193259269, -0.012016172520816326, -2.7404003143310547, -0.05152512341737747, -1.188685417175293, -0.15403640270233154, -1.178895115852356, -0.0048804203979671, -2.8847384452819824, -0.0039000653196126223, -0.03200985863804817, -5.209310256759636e-05, -9.238292841473594e-05, -0.8193753957748413, -0.03826643154025078, -0.02695198729634285, -0.00214037555269897, -0.0012710357550531626, -5.960462772236497e-07, -5.125986263010418e-06, -3.576278118089249e-07, -0.006681838072836399, -5.4596363042946905e-05, -0.009934505447745323, -0.00010084597306558862, -0.0008175606490112841, -0.00042965717148035765, -0.0005156855913810432, -0.033988624811172485, -0.00010978573118336499, -0.007431244943290949, -1.763030767440796, -0.015325995162129402, -0.8955966830253601, -0.030426310375332832, -1.776525855064392, -0.05370330438017845, -2.1969807147979736, -0.08786819130182266, -0.00010096516780322418, -1.537788011773955e-05, -1.0371671915054321, -0.0015592334093526006, -0.0055109718814492226, -0.000947622349485755, -0.02028821036219597, -1.4305104514278355e-06, -1.1920922133867862e-06, -4.291525328881107e-06, -0.0030091977678239346, -8.4638240878121e-06, -1.2159273865108844e-05, -0.006268719676882029, -0.00021491125517059118, -1.0728830375228426e-06, -0.00038509105797857046, -0.16153651475906372, -1.3828182090946939e-05, -1.5497195136049413e-06, -0.00023123928986024112, -0.0007400158210657537, -0.006079751066863537, -9.238292841473594e-05, -0.013592429459095001, -0.6515102982521057, -0.00691532576456666, -0.6019393801689148, -0.0012575822183862329, -0.0023080871906131506, -0.0007070187130011618, -0.08602853864431381, -0.11380647867918015, -0.00010442188795423135, -5.8887653722194955e-05, -0.0022094857413321733, -3.099393507000059e-05, -4.529942543740617e-06, -7.629365427419543e-06, -1.3470558769768104e-05, -0.0017755947774276137, -0.0002203936892328784, -3.576278118089249e-07, -0.00016616393986623734, -0.5940596461296082, -3.576278118089249e-07, -0.0015165030490607023, -0.011654623784124851, -9.536738616588991e-07, 0.0, -0.0033400245010852814, -0.000456109904916957, -0.3742843568325043, -0.012162686325609684, -0.011966112069785595, -0.798751711845398, -0.0032043324317783117, -0.17631950974464417, -0.0025480680633336306, -0.09983812272548676, -0.0643812045454979, -0.1536196768283844, -0.00666111521422863, -0.007953639142215252, -0.001046467456035316, -0.00012182447244413197, -0.11899706721305847, -5.722029527532868e-06, -0.004312263801693916, -3.5523738915799186e-05, -0.00610558083280921, -8.618460560683161e-05, -2.3841855067985307e-07, -0.0034282978158444166, -0.003382677212357521, -0.4578786790370941, -0.2820819914340973, -0.11640127003192902, -0.004078879952430725, -0.1123143658041954, -0.04672407731413841, -0.00037293630884960294, -0.15098246932029724, -0.019904866814613342, -0.013449887745082378, -0.0003363520372658968, -0.005757296923547983, -0.010449341498315334, -4.0531076592742465e-06, -1.0251946150674485e-05, -9.179073458653875e-06, -0.00819699838757515, -0.0002706876548472792, -0.0006366133457049727, -1.7523612768854946e-05, -7.986990567587782e-06, -8.892617915989831e-05, -0.0006447143969126046, -1.5020257706055418e-05, -2.3841855067985307e-07, -0.164435476064682, -0.1565501093864441, -0.00913535337895155, -0.7007128596305847], "finish_reason": "stop"}], "metrics": {"energy": 890.2474175434126, "energy_per_token": 3.4775289747789553, "time": 21.443544, "time_per_token": 0.08376384375}}
{"outputs": [{"text": "# Ensure that the source directory exists\n    if not os.path.isdir(source_dir):\n        print(\"Error: Source directory does not exist.\")\n        return \"\"\n\n    # Ensure that the target directory exists, create it if not\n    if not os.path.isdir(target_dir):\n        os.makedirs(target_dir)\n\n    # Check if the archive file exists, and if so, ask user for confirmation before overwriting\n    archive_path = os.path.join(target_dir, archive_name)\n    if os.path.exists(archive_path):\n        overwrite = input(\"The file {} already exists. Do you want to overwrite it? (y/n): \".format(archive_path))\n        if overwrite.lower() != 'y':\n            print(\"Archive creation canceled.\")\n            return \"\"\n\n    # Open a new ZipFile object with the specified archive_path and mode 'w' (write)\n    with zipfile.ZipFile(archive_path, 'w', zipfile.ZIP_DEFLATED)", "tokens": ["#", " Ensure", " that", " the", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "print", "(", "\"", "Error", ":", " Source", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "        ", "return", " \"", "\"", "\n", "\n", "    ", "#", " Ensure", " that", " the", " target", " directory", " exists", ",", " create", " it", " if", " not", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " archive", " file", " exists", ",", " and", " if", " so", ",", " ask", " user", " for", " confirmation", " before", " over", "writing", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "if", " os", ".", "path", ".", "exists", "(", "archive", "_", "path", "):", "\n", "        ", "over", "write", " =", " input", "(", "\"", "The", " file", " {}", " already", " exists", ".", " Do", " you", " want", " to", " over", "write", " it", "?", " (", "y", "/", "n", "):", " \"", ".", "format", "(", "archive", "_", "path", "))", "\n", "        ", "if", " over", "write", ".", "lower", "()", " ", "!", "=", " '", "y", "':", "\n", "            ", "print", "(", "\"", "Archive", " creation", " canceled", ".", "\"", ")", "\n", "            ", "return", " \"", "\"", "\n", "\n", "    ", "#", " Open", " a", " new", " Zip", "File", " object", " with", " the", " specified", " archive", "_", "path", " and", " mode", " '", "w", "'", " (", "write", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")"], "logprobs": [-1.0016841888427734, -4.489821434020996, -1.1953959465026855, -0.44290804862976074, -0.5579881072044373, -0.5571523904800415, -0.320923388004303, -0.1330423206090927, -0.0010561132803559303, -0.03702366724610329, -0.011556349694728851, -0.0013106813421472907, -1.1444026313256472e-05, -0.00023183519078884274, -5.483612312673358e-06, -1.737916111946106, -6.806619057897478e-05, -6.949660019017756e-05, -0.0017251383978873491, -1.680836794548668e-05, -3.6954811548639555e-06, -0.003176526166498661, -0.00019107422849629074, -0.0007889734115451574, -2.282418966293335, -0.021596968173980713, -2.07003116607666, -1.1730079650878906, -0.005555902607738972, -0.5883795022964478, -0.0009110590908676386, -0.3054412603378296, -9.262132516596466e-05, -0.0005403488758020103, -0.33852875232696533, -0.005659864749759436, -0.0009925207123160362, -0.00017569905321579427, -0.0067580947652459145, -0.030981330201029778, -1.0463300943374634, -0.06611637026071548, -0.009010959416627884, -0.027923692017793655, -0.00043156370520591736, -0.008592420257627964, -0.4891560673713684, -0.011668880470097065, -0.010819227434694767, -0.011109638027846813, -0.00041083001997321844, -0.0024536524433642626, -1.377232313156128, -0.8026100993156433, -0.36868345737457275, -0.01198896300047636, -0.943304181098938, -0.018695103004574776, -3.135155202471651e-05, -0.05824827402830124, -0.0021251493599265814, -6.890059739816934e-05, -2.3841855067985307e-07, -3.576272320060525e-06, -2.3841855067985307e-07, -0.06188178434967995, -3.2186455882765586e-06, -1.6689160474925302e-05, -0.0003026265767402947, -1.1920922133867862e-06, -2.3841855067985307e-07, -0.0004873280122410506, -9.894321920000948e-06, -0.0002797450579237193, -0.14483150839805603, -2.264974000354414e-06, -0.05156984552741051, -1.6689286894688848e-06, -2.9205850296420977e-05, -2.9444261599564925e-05, -7.283422019099817e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.0027001372072845697, -0.0005403488758020103, -0.010218211449682713, -0.000736918649636209, -0.02068868838250637, -2.9538159370422363, -0.1591900885105133, -0.3286910355091095, -0.7386491894721985, -0.9846004247665405, -2.559863328933716, -1.0671298503875732, -1.808451533317566, -1.780906081199646, -0.4531458616256714, -0.07428689301013947, -2.556896686553955, -2.696758270263672, -1.357670783996582, -0.27958083152770996, -1.797147512435913, -0.07770409435033798, -0.0071571627631783485, -0.17018556594848633, -0.0003904534096363932, -0.06449487805366516, -0.007792904507368803, -0.05073259025812149, -0.0003200257197022438, -0.0028547984547913074, -2.3841855067985307e-07, -4.172316494077677e-06, -4.768370445162873e-07, -0.0017815446481108665, -1.597391747054644e-05, -0.0007154765771701932, -1.0728830375228426e-06, -5.960462772236497e-07, -8.022463589441031e-05, -0.0007780147134326398, -2.9802276912960224e-06, -3.576278118089249e-07, -0.00019500737835187465, -0.001105293515138328, -0.006209248676896095, -0.01056730467826128, -0.00108624086715281, -2.622600959512056e-06, -5.364403477869928e-06, -7.152555099310121e-07, -0.18588268756866455, -6.079655122448457e-06, -0.000739658426027745, -1.1205610462639015e-05, -2.312633478140924e-05, -0.018505074083805084, -0.0001382732152706012, -0.00082601752365008, -0.7145516276359558, -3.373566141817719e-05, -0.07869583368301392, -0.0032557835802435875, -0.005945852026343346, -0.6504384875297546, -2.9564425945281982, -2.0723276138305664, -0.6665597558021545, -0.0071075689047575, -0.00026854246971197426, -0.08105294406414032, -0.10114113986492157, -1.4543427823809907e-05, -0.0016339774010702968, -9.369411418447271e-05, -0.007692003156989813, -5.924526340095326e-05, -0.026009419932961464, -0.010968629270792007, -0.043347109109163284, -0.14755286276340485, -0.0013060382334515452, -0.016875598579645157, -0.8177182674407959, -0.007844356819987297, -0.01495284028351307, -0.0023899106308817863, -4.5060096454108134e-05, -0.006305561400949955, -1.2636104656849056e-05, -0.32164785265922546, -0.00014625910262111574, -0.05753511190414429, -0.00772891053929925, -0.013362259604036808, -0.007265573833137751, 0.0, -0.035185910761356354, -0.008796985261142254, -5.924526340095326e-05, -0.0687856450676918, -1.1920928244535389e-07, -7.510157047363464e-06, -0.3535885214805603, -0.00011073929636040702, -0.00033158526639454067, -0.0013749678619205952, -0.00027533553657121956, -0.3891228437423706, -0.0035858158953487873, -0.0015723258256912231, -0.7818342447280884, -1.0141836404800415, -1.3798768520355225, -0.058503422886133194, -0.030087091028690338, -2.6940935640595853e-05, -1.537788011773955e-05, -0.0005389191792346537, -0.0021519139409065247, -0.012296815402805805, -0.00045849301386624575, -0.00035565727739594877, -0.14982812106609344, -0.013847588561475277, -0.01712312363088131, -2.048691511154175, -0.9941335916519165, -0.30176129937171936, -1.22005295753479, -0.06964406371116638, -1.0984874963760376, -2.2175498008728027, -0.9979051947593689, -0.37770918011665344, -0.9537904858589172, -1.709970474243164, -0.1862318515777588, -1.3017499446868896, -0.46046507358551025, -0.27995923161506653, -0.034283097833395004, -0.0003103728231508285, -0.4932413399219513, -0.21014149487018585, -1.0677138566970825, -0.021977446973323822, -0.00030989613151177764, -0.182537242770195, -0.02195027470588684, -1.0490362910786644e-05, -1.311301275563892e-06, -3.731181277544238e-05, 0.0, -1.1920928244535389e-07, -0.00013004888023715466, -0.008857483975589275, -8.344646857949556e-07, -1.8358061424805783e-05, -0.00013445904187392443, -0.06183572858572006, -0.0002493547508493066, -2.129995346069336, -6.592056161025539e-05, -0.3697451055049896, -1.5020257706055418e-05, -5.006777428206988e-06, -5.495397272170521e-05, -3.71926071238704e-05, -9.536738616588991e-07, -0.004473677836358547, -1.5497195136049413e-06, -1.6689160474925302e-05, -0.010171011090278625], "finish_reason": "length"}], "metrics": {"energy": 881.6056658382413, "energy_per_token": 3.44377213218063, "time": 21.624863, "time_per_token": 0.08447212109375}}
{"outputs": [{"text": "processed_files = [fname for fname in os.listdir(source_dir) if fname.endswith('_processed')]\n    archive_path = os.path.join(target_dir, archive_name)\n    if os.path.exists(archive_path):\n        os.remove(archive_path)\n    with zipfile.ZipFile(archive_path, 'w') as zip_file:\n        for fname in processed_files:\n            zip_file.write(os.path.join(source_dir, fname), arcname=fname)\n    return archive_path", "tokens": ["processed", "_", "files", " =", " [", "f", "name", " for", " f", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " f", "name", ".", "end", "sw", "ith", "('", "_", "processed", "')", "]", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "if", " os", ".", "path", ".", "exists", "(", "archive", "_", "path", "):", "\n", "        ", "os", ".", "remove", "(", "archive", "_", "path", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " f", "name", " in", " processed", "_", "files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " f", "name", ")", ",", " arc", "name", "=", "f", "name", ")", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "def"], "logprobs": [-1.444732666015625, -0.006380899343639612, -0.12234558910131454, -0.01688602939248085, -0.5029616951942444, -0.8956174254417419, -2.7249269485473633, -0.007188764400780201, -0.0024239225313067436, -0.0004782725009135902, -0.0028085571248084307, -0.008729037828743458, -6.6756979322235566e-06, -0.0008815216715447605, -1.1920928244535389e-07, -0.0004343043256085366, -0.10966545343399048, -2.098061486321967e-05, -1.9907753085135482e-05, -0.0019996424671262503, -0.11889398097991943, -0.9860483407974243, -0.0016112453304231167, -0.008756335824728012, -0.02060834877192974, -4.207999518257566e-05, -7.152555099310121e-07, -0.0870593786239624, -0.08796557784080505, -0.001824858714826405, -0.23398053646087646, -0.019223107025027275, -0.002918391488492489, -0.33598265051841736, -1.9029419422149658, -0.044320810586214066, -0.07133793830871582, -0.0006903410539962351, -0.013839006423950195, -3.814689989667386e-06, -4.017272294731811e-05, -6.198863957251888e-06, -0.002945016138255596, -0.0001787979417713359, -0.001892800792120397, -2.0265558760002023e-06, -8.344646857949556e-07, -0.000377583724912256, -0.0026666102930903435, -4.291525328881107e-06, -1.1205610462639015e-05, -0.00027569307712838054, -0.0014950776239857078, -0.47671571373939514, -2.5712883472442627, -1.033637523651123, -4.6491513785440475e-06, -0.0007252446957863867, -1.1920858014491387e-05, -0.042342979460954666, -0.00011944057769142091, -0.05797944962978363, -3.3378546504536644e-06, -0.0011937642702832818, -0.005683690309524536, -0.01355409063398838, -0.003333846339955926, -0.1682155877351761, -4.887569048150908e-06, -0.007872032932937145, -3.099393507000059e-05, -0.00012754580529872328, -6.079655122448457e-06, -1.5020257706055418e-05, -2.2053474822314456e-05, -0.03998114913702011, -0.19211913645267487, -0.1085319072008133, -0.0040699755772948265, -4.565611743601039e-05, -6.556489552167477e-06, -5.8530047681415454e-05, -3.576278118089249e-07, -7.033323527139146e-06, -0.0001722425949992612, -0.0022972640581429005, -8.344646857949556e-07, -0.0001429217227268964, -0.000651147507596761, -0.09802470356225967, -0.12136591970920563, -0.07604098320007324, -4.732496745418757e-05, -0.3641824424266815, -1.1569640636444092, -0.5594086647033691, -0.000690460205078125, -0.000878663151524961, -0.00195312371943146, -0.02640831284224987, -0.49994978308677673, -0.029503334313631058, -0.00020275443966966122, -0.0013462775386869907, -7.152555099310121e-07, -1.0728830375228426e-06, -0.00018225439998786896, -9.691245941212401e-05, -0.0009646529797464609, -0.4937055706977844, -0.0010069306008517742, -0.0016371908131986856, -0.00037853704998269677, -2.098061486321967e-05, -8.844937838148326e-05, -0.014219745993614197, -1.4305104514278355e-06, -1.9788545614574105e-05, -2.3841855067985307e-07, -7.950943836476654e-05, -5.638440416078083e-05, -0.0009925207123160362, -8.106198947643861e-06, -5.364403477869928e-06, -0.0001234931987710297, -0.001388658070936799, -8.916457591112703e-05, -0.009764880873262882, -9.178694017464295e-05, -0.49407491087913513, -7.152555099310121e-07, -0.008684367872774601, -0.10504841059446335, -0.0021716600749641657, -0.029137402772903442, -0.003725613234564662, -0.4621065855026245, -0.22170619666576385, -0.032153356820344925, -5.602820692729438e-06, -0.00019858295854646713, -0.49602648615837097, -0.00795801542699337, -0.6697927117347717], "finish_reason": "stop"}], "metrics": {"energy": 473.6535048923492, "energy_per_token": 3.2892604506413137, "time": 11.782397, "time_per_token": 0.08182220138888889}}
{"outputs": [{"text": "# 1. Use the re module to find all files in source_dir with the '_processed' suffix in their names.\n    files_to_archive = [file for file in os.listdir(source_dir) if re.search(r'_processed', file)]\n\n    # 2. Use the zipfile module to create a zipfile in the target_dir.\n    #    Set the name of the archive to archive_name, and set the compression mode to ZIP_DEFLATED.\n    #    Use the shutil module to copy the files from the source_dir to the target_dir,\n    #    preserving their metadata and using the zipfile as a file descriptor.\n    with zipfile.ZipFile(os.path.join(target_dir, archive_name), 'w', zipfile.ZIP_DEFLATED) as zip_ref:\n        for file in files_to_archive:\n            shutil.copy2(os.path.join(source_dir, file), os.path.join(target_dir, file), follow_symlinks=False,\n                         copymode=False", "tokens": ["#", " ", "1", ".", " Use", " the", " re", " module", " to", " find", " all", " files", " in", " source", "_", "dir", " with", " the", " '_", "processed", "'", " suffix", " in", " their", " names", ".", "\n", "    ", "files", "_", "to", "_", "archive", " =", " [", "file", " for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " re", ".", "search", "(", "r", "'_", "processed", "'", ",", " file", ")]", "\n", "\n", "    ", "#", " ", "2", ".", " Use", " the", " zip", "file", " module", " to", " create", " a", " zip", "file", " in", " the", " target", "_", "dir", ".", "\n", "    ", "#", "    ", "Set", " the", " name", " of", " the", " archive", " to", " archive", "_", "name", ",", " and", " set", " the", " compression", " mode", " to", " Z", "IP", "_", "DE", "FL", "ATED", ".", "\n", "    ", "#", "    ", "Use", " the", " shut", "il", " module", " to", " copy", " the", " files", " from", " the", " source", "_", "dir", " to", " the", " target", "_", "dir", ",", "\n", "    ", "#", "    ", "preserving", " their", " metadata", " and", " using", " the", " zip", "file", " as", " a", " file", " descriptor", ".", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "ref", ":", "\n", "        ", "for", " file", " in", " files", "_", "to", "_", "archive", ":", "\n", "            ", "sh", "util", ".", "copy", "2", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", ",", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", ")", ",", " follow", "_", "sym", "links", "=", "False", ",", "\n", "                ", "         ", "cop", "ym", "ode", "=", "False"], "logprobs": [-1.0016841888427734, -4.8713788986206055, -0.29716670513153076, -0.08509419113397598, -4.320915222167969, -1.8241467475891113, -3.183746814727783, -0.816697359085083, -0.062253180891275406, -0.7639495134353638, -0.2521350085735321, -0.49890244007110596, -0.3997678756713867, -2.536339282989502, -0.058550529181957245, -0.008406727574765682, -1.2591345310211182, -0.7318823337554932, -1.186376690864563, -0.003133864840492606, -0.014269692823290825, -0.015024946071207523, -0.5917787551879883, -1.2403149604797363, -0.9878255128860474, -0.4755420982837677, -0.027556369081139565, -0.030757786706089973, -2.492100477218628, -0.8938212394714355, -0.07260144501924515, -7.903263758635148e-05, -0.3073536455631256, -0.004972235299646854, -0.136977881193161, -1.0184813737869263, -0.03395279124379158, -0.0006169561529532075, -0.000382707774406299, -0.009558506309986115, -1.0371154530730564e-05, -0.0008765193051658571, -1.1920928244535389e-07, -0.00034195298212580383, -0.05144348740577698, -2.9444261599564925e-05, -2.9802276912960224e-06, -0.002995767630636692, -0.02842819318175316, -0.13455010950565338, -2.372236667724792e-05, -0.2557200491428375, -0.23139899969100952, -0.026769092306494713, -0.0560661181807518, -0.0011932880152016878, -1.7419019937515259, -0.0002348147245356813, -0.002550802892073989, -0.03637555614113808, -0.0013248485047370195, -0.25400418043136597, -0.0006578188622370362, -0.010038367472589016, -0.018327299505472183, -0.0037667055148631334, -0.002278947737067938, -0.74998539686203, -0.044087912887334824, -0.6340271830558777, -0.0018398514948785305, -0.029785824939608574, -0.021310754120349884, -0.07616183906793594, -0.8246733546257019, -1.2810999155044556, -2.9091830253601074, -0.910160481929779, -1.053821086883545, -0.018994346261024475, -0.03793651983141899, -0.0025418850127607584, -2.188133716583252, -0.11750070750713348, -0.0024732735473662615, -1.1916210651397705, -1.8480818271636963, -2.6227774620056152, -0.17300263047218323, -1.8356014490127563, -0.021391620859503746, -0.0035245222970843315, -1.9872492551803589, -0.442812442779541, -0.430437833070755, -0.0011014830088242888, -0.0008526980527676642, -2.954998254776001, -0.6258718371391296, -1.0272297859191895, -0.22481699287891388, -0.09149441123008728, -1.8268479108810425, -0.005744258873164654, -1.4874227046966553, -7.152555099310121e-07, -0.0006386386230587959, -0.022635888308286667, -3.290122185717337e-05, -0.00014161060971673578, -0.20499606430530548, -0.0019182630348950624, -0.012944243848323822, -0.8590325713157654, -0.052463073283433914, -0.8975388407707214, -0.2990154027938843, -1.232649564743042, -5.483612312673358e-06, -0.16005712747573853, -0.013333676382899284, -0.3346254229545593, -0.6184232831001282, -0.5260279178619385, -1.0008809566497803, -1.046691656112671, -0.02094811387360096, -0.03679193556308746, -0.0006194579764269292, -0.022622371092438698, -0.003699840744957328, -0.590031623840332, -0.04932040348649025, -0.01175630372017622, -1.7231160402297974, -1.722124695777893, -0.0010705222375690937, -0.001320800743997097, -0.011053873226046562, -3.0132863521575928, -1.0901710987091064, -2.480193614959717, -1.6107698678970337, -2.402669906616211, -0.0550517812371254, -0.7051606178283691, -0.03505849838256836, -0.7259821891784668, -0.9828723669052124, -0.36400964856147766, -1.337634563446045, -0.16853471100330353, -0.00187090749386698, -0.028761373832821846, -0.41702350974082947, -0.0030107428319752216, -3.731181277544238e-05, -2.038458114839159e-05, -0.00016783259343355894, -1.1920928244535389e-07, -1.2278481335670222e-05, -0.0011595914838835597, -0.07400507479906082, -1.1920922133867862e-06, -3.373566141817719e-05, -1.4305104514278355e-06, -0.0006812873762100935, -0.00014518637908622622, -0.000925112864933908, -1.5020257706055418e-05, -5.960462772236497e-07, -0.0010355116100981832, -0.003014308400452137, -1.0132738680113107e-05, -3.576278118089249e-07, -0.0005716835148632526, -0.00010597144137136638, -0.3379921615123749, -0.02723868004977703, -0.0013213959755375981, -2.0503786799963564e-05, -0.5138891339302063, -5.483612312673358e-06, -4.887569048150908e-06, -1.2159273865108844e-05, -9.536738616588991e-07, -1.7762025890988298e-05, -0.00025650550378486514, 0.0, -4.0649541915627196e-05, -0.003514187643304467, -0.0008191090892069042, -0.19190289080142975, -0.8815323114395142, -2.951984167098999, -0.00014935807848814875, -0.0002748588449321687, -0.00511753186583519, -0.025129904970526695, -0.032211191952228546, -0.06232105940580368, -0.0015543533954769373, -2.3603161025675945e-05, -7.152555099310121e-07, -1.4305104514278355e-06, -4.529942543740617e-06, -8.21318244561553e-05, -0.00021896349790040404, -0.0013190149329602718, -0.09628897160291672, -4.768370445162873e-07, -2.145764938177308e-06, -0.00013279033009894192, -0.7603515386581421, -5.793403761344962e-05, -0.008549398742616177, -8.344646857949556e-07, -7.748573807475623e-06, -5.960462772236497e-07, -2.4914430468925275e-05, -3.802703940891661e-05, -0.0006996329175308347, -2.5629668016335927e-05, -6.9141146923357155e-06, -8.880697714630514e-05, -0.0011387537233531475, -0.00028451209072954953, -4.60137271147687e-05, -2.7660207748413086, -4.0531076592742465e-06, -0.00010561384988250211, -6.318072337307967e-06, -0.0005797850899398327, -0.000500196241773665, -0.00910464022308588, -4.8040190449682996e-05, -8.821448318485636e-06, -0.004210180137306452, -0.013275917619466782, -0.012372056022286415, -0.00014149141497910023, -0.30668437480926514, -7.152531907195225e-06, -4.2437604861333966e-05, -1.311301275563892e-06, -0.0011382774682715535, -1.0865845680236816, -0.014837272465229034, -0.049766816198825836, -0.0011255365097895265, -0.003800076898187399, -3.2502341270446777, -0.0030830015894025564, -4.792098479811102e-05, -0.0020425901748239994, -0.44856902956962585], "finish_reason": "length"}], "metrics": {"energy": 873.1143078365329, "energy_per_token": 3.4106027649864568, "time": 21.435238, "time_per_token": 0.0837313984375}}
{"outputs": [{"text": "# Identify processed files in the source directory\n    processed_files = [f for f in os.listdir(source_dir) if re.match(r'.*_processed', f)]\n\n    # Create the target directory if it doesn't exist\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    # Construct the path to the archive file\n    archive_path = os.path.join(target_dir, archive_name)\n\n    # Open a new zip archive in write mode\n    with zipfile.ZipFile(archive_path, 'w') as archive:\n        # Add the processed files to the archive\n        for file in processed_files:\n            file_path = os.path.join(source_dir, file)\n            archive.write(file_path, arcname=os.path.basename(file_path))\n\n    # Return the path to the created archive\n    return archive_path", "tokens": ["#", " Ident", "ify", " processed", " files", " in", " the", " source", " directory", "\n", "    ", "processed", "_", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " re", ".", "match", "(", "r", "'", ".", "*", "_", "processed", "'", ",", " f", ")]", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Construct", " the", " path", " to", " the", " archive", " file", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "#", " Open", " a", " new", " zip", " archive", " in", " write", " mode", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " archive", ":", "\n", "        ", "#", " Add", " the", " processed", " files", " to", " the", " archive", "\n", "        ", "for", " file", " in", " processed", "_", "files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", "\n", "            ", "archive", ".", "write", "(", "file", "_", "path", ",", " arc", "name", "=", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", "))", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " created", " archive", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "#"], "logprobs": [-1.0016841888427734, -2.144179105758667, -0.022811850532889366, -0.2877584397792816, -0.03627922013401985, -1.901979923248291, -0.11521435528993607, -0.021928466856479645, -0.015085538849234581, -0.16444912552833557, -0.002141208155080676, -0.18404963612556458, -0.002830429933965206, -0.023132115602493286, -0.0025216706562787294, -0.11065205186605453, -0.7535700798034668, -0.03488433361053467, -0.0003567297535482794, -2.1815061700181104e-05, -0.0023768290411680937, -2.5033637939486653e-05, -0.0006805725861340761, -1.1920928244535389e-07, -7.903263758635148e-05, -0.06589295715093613, -9.417489309271332e-06, -3.2186455882765586e-06, -0.000714404450263828, -0.05005384609103203, -0.9266447424888611, -1.3708974620385561e-05, -1.1771208047866821, -0.0697232335805893, -0.04551764205098152, -0.434817373752594, -0.07280862331390381, -0.290992796421051, -0.037178050726652145, -0.0030721870716661215, -2.534912109375, -0.0002797450579237193, -0.002170470543205738, -0.09273184835910797, -0.0005654881824739277, -0.1177573949098587, -0.00022313489171210676, -0.03803613409399986, -0.42835235595703125, -0.3855716586112976, -1.229264259338379, -0.024290919303894043, -0.013177686370909214, -0.0042633600533008575, -0.11417291313409805, -0.00016807096835691482, -2.145764938177308e-06, -0.006425554398447275, -0.008126763626933098, -0.00015793983766343445, -1.012146234512329, -0.0013074668822810054, -0.00013290952483657748, -4.768360213347478e-06, -3.528532761265524e-05, -2.861018856492592e-06, -0.027460575103759766, -4.684815212385729e-05, -0.0004817279113922268, -6.079655122448457e-06, -7.152555099310121e-07, -0.0006291079334914684, -7.331102824537084e-05, -0.0006127863889560103, -0.0029506024438887835, -1.9073468138230965e-06, -0.06802472472190857, -3.4570634852570947e-06, -1.1920922133867862e-06, -3.397406908334233e-05, -0.00014041867689229548, -2.861018856492592e-06, -4.768370445162873e-07, -0.0010043105576187372, -5.686121585313231e-05, -0.0034905478823930025, -0.000403084559366107, -0.008606130257248878, -1.9728367328643799, -0.012832680717110634, -0.6645625233650208, -0.7366513609886169, -0.004578227177262306, -0.10525927692651749, -0.49434196949005127, -0.11920268088579178, -6.222531374078244e-05, -0.053740132600069046, -0.019297126680612564, -0.05578148737549782, -0.00031513971043750644, -0.0013572300085797906, -1.1920928244535389e-07, -4.6491513785440475e-06, -6.9141146923357155e-06, -0.002311417367309332, -6.890059739816934e-05, -0.0007247682078741491, -1.0728830375228426e-06, -1.4305104514278355e-06, -6.174850568640977e-05, -0.0007925468380562961, -4.291525328881107e-06, -3.576278118089249e-07, -0.00020883286197204143, -6.687417771900073e-05, -0.006373199634253979, -0.00013851160474587232, -0.019967852160334587, -1.6017482280731201, -1.5079102516174316, -0.8831484913825989, -1.0066637992858887, -1.0014008283615112, -0.41753581166267395, -0.08368489891290665, -0.00039664984797127545, -0.09619434177875519, -3.015949550899677e-05, -0.008948343805968761, -0.0027946485206484795, -9.059865078597795e-06, -2.145764938177308e-06, -2.0146166207268834e-05, -1.1920928244535389e-07, -1.7881377516459906e-06, -3.0278701160568744e-05, -0.0007303669699467719, -2.145764938177308e-06, -1.4543427823809907e-05, -0.00011503035057103261, -0.08928905427455902, -0.0009741804678924382, -0.1265949308872223, -0.0004060635983478278, -0.8687041997909546, -0.0170897264033556, -6.854299135738984e-05, -0.02820941060781479, -0.3466096520423889, -1.1391372680664062, -1.8933892250061035, -0.0124662471935153, -0.0018693606834858656, -0.0038132588379085064, -0.0002485204895492643, -0.028936956077814102, -0.01627281680703163, -0.00016807096835691482, -0.0010493254521861672, -0.2899482250213623, -0.268742173910141, -0.0003580405900720507, -1.0728830375228426e-06, -2.3841855067985307e-07, -4.470248313737102e-05, -7.152531907195225e-06, -0.0003805628512054682, -0.5919570922851562, -0.007957187481224537, -0.00033849707688204944, -0.00025567124248482287, -0.00015877417172305286, -2.3841855067985307e-07, -2.622600959512056e-06, -2.622600959512056e-06, -0.0002004899288294837, -2.2053474822314456e-05, -0.0007316772826015949, -3.3378546504536644e-06, -9.536738616588991e-07, -4.207999518257566e-05, -0.00010048838157672435, -0.00011598391574807465, -0.0006264869589358568, -0.012017939239740372, -0.039412882179021835, -0.002464235993102193, -6.9141146923357155e-06, -7.033323527139146e-06, -0.0003830652858596295, -0.00035339308669790626, -5.960462772236497e-07, -0.0026217871345579624, -0.4462555944919586, -3.576278118089249e-07, -0.007240602746605873, -1.1621689796447754, -3.4570634852570947e-06, -7.152531907195225e-06, -2.3841855067985307e-07, -0.011129443533718586, -1.0728830375228426e-06, -2.8967437174287625e-05, -0.0003233625029679388, -0.33958426117897034, -1.0609570381348021e-05, -0.042601872235536575, -0.0070516993291676044, -0.09748070687055588, -0.06927607208490372, -0.30750277638435364, -0.981966495513916, -0.0021843877620995045, -0.040563859045505524, -0.023695386946201324, -0.00011646069469861686, -0.2876664698123932, -0.003724900772795081, -0.026484588161110878, -0.0002493547508493066, -0.0030769407749176025, -0.01973271742463112, -0.002278947737067938, -0.00015496007108595222, -0.5113674998283386, -0.006445097737014294, -1.3590190410614014], "finish_reason": "stop"}], "metrics": {"energy": 776.0992055826183, "energy_per_token": 3.403943884134291, "time": 19.34203, "time_per_token": 0.0848334649122807}}
{"outputs": [{"text": "os.chdir(source_dir)\n\n    # List all files in the current directory\n    files = os.listdir()\n\n    # Create an empty list to store the file paths\n    file_paths = []\n\n    # Iterate through the list of files\n    for file_name in files:\n        # Check if the file ends with '_processed'\n        if re.search('\\d+_\\d+_\\d+_\\d+_\\d+_\\d+_\\d+_processed$', file_name):\n            file_paths.append(file_name)  # Add the file path to the list\n\n    # Archive the file paths\n    if file_paths:\n        with zipfile.ZipFile(archive_name, mode='w') as archive:\n            for file_path in file_paths:\n                archive.write(file_path, file_path)\n\n    # Move the archived file to the target directory\n    shutil.move(archive_name, target_dir + archive_name)\n\n    # Return the path to the created archive\n    return target_dir + archive_name", "tokens": ["os", ".", "ch", "dir", "(", "source", "_", "dir", ")", "\n", "\n", "    ", "#", " List", " all", " files", " in", " the", " current", " directory", "\n", "    ", "files", " =", " os", ".", "list", "dir", "()", "\n", "\n", "    ", "#", " Create", " an", " empty", " list", " to", " store", " the", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " list", " of", " files", "\n", "    ", "for", " file", "_", "name", " in", " files", ":", "\n", "        ", "#", " Check", " if", " the", " file", " ends", " with", " '_", "processed", "'", "\n", "        ", "if", " re", ".", "search", "('", "\\", "d", "+", "_\\", "d", "+", "_\\", "d", "+", "_\\", "d", "+", "_\\", "d", "+", "_\\", "d", "+", "_\\", "d", "+", "_", "processed", "$'", ",", " file", "_", "name", "):", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "name", ")", "  ", "#", " Add", " the", " file", " path", " to", " the", " list", "\n", "\n", "    ", "#", " Archive", " the", " file", " paths", "\n", "    ", "if", " file", "_", "paths", ":", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "name", ",", " mode", "='", "w", "')", " as", " archive", ":", "\n", "            ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "                ", "archive", ".", "write", "(", "file", "_", "path", ",", " file", "_", "path", ")", "\n", "\n", "    ", "#", " Move", " the", " archived", " file", " to", " the", " target", " directory", "\n", "    ", "sh", "util", ".", "move", "(", "archive", "_", "name", ",", " target", "_", "dir", " +", " archive", "_", "name", ")", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " created", " archive", "\n", "    ", "return", " target", "_", "dir", " +", " archive", "_", "name"], "logprobs": [-3.684965133666992, -0.013806203380227089, -0.49504727125167847, -0.005821535363793373, -0.0032879835925996304, -0.2004457414150238, -2.455681169521995e-05, -2.1457441107486375e-05, -0.0006825978052802384, -0.07153261452913284, -1.6574933528900146, -0.000533795915544033, -1.5853935480117798, -3.611008882522583, -0.49418357014656067, -0.25678813457489014, -0.3874160051345825, -0.18031488358974457, -1.226190447807312, -0.07596397399902344, -0.361610472202301, -0.0004836343287024647, -0.5936368703842163, -0.10860323905944824, -0.04489917308092117, -1.1324817933200393e-05, -0.0002967870968859643, 0.0, -0.7392944097518921, -0.0003725788265001029, -0.13188211619853973, -0.0001817776501411572, -0.060897111892700195, -2.027503490447998, -2.118162155151367, -0.2903105318546295, -0.07407038658857346, -0.053615063428878784, -0.13503745198249817, -0.46563372015953064, -1.732912302017212, -0.6065611243247986, -1.1926167011260986, -0.00023815179883968085, -0.4234936535358429, -0.005790957249701023, -0.11736555397510529, -0.01051327958703041, -0.006056764628738165, -0.00018475732940714806, -0.038476601243019104, -0.00020740265608765185, -0.05467758700251579, -1.0223629474639893, -0.0006992755807004869, -0.809000551700592, -0.4729323387145996, -0.8491688370704651, -0.011573201045393944, -0.04316387698054314, -0.14034515619277954, -0.00027056847466155887, -0.006095272954553366, -0.21684236824512482, -0.9673534035682678, -0.005912907887250185, -0.0001740304142003879, -0.0007010624394752085, -0.00014888131408952177, -9.703165414975956e-05, -0.1036677286028862, -0.08063051104545593, -0.3331696093082428, -0.010033292695879936, -0.026781395077705383, -0.0819440633058548, -1.0451836585998535, -0.020762134343385696, -0.5053084492683411, -0.005030712112784386, -0.40185993909835815, -0.473701536655426, -0.0008484101272188127, -0.03736238181591034, -0.9415267109870911, -1.0132738680113107e-05, -0.1365697979927063, -1.3785374164581299, -2.530190944671631, -1.3931596279144287, -0.8546907901763916, -1.7832059860229492, -0.14248396456241608, -0.11726972460746765, -0.7568413019180298, -0.05776287242770195, -0.06987186521291733, -0.26473093032836914, -0.04194433614611626, -0.04777985066175461, -0.17902261018753052, -0.011601598933339119, -0.013330617919564247, -0.15016579627990723, -0.013050029054284096, -0.062043242156505585, -0.734634518623352, -0.09170565009117126, -0.13945233821868896, -0.7275157570838928, -0.060030922293663025, -1.631606101989746, -0.00023421882360707968, -0.014186720363795757, -1.597391747054644e-05, -2.5987286790041253e-05, -0.1134672611951828, -0.00630473205819726, -0.008266637101769447, -1.6898777484893799, -0.0019491974962875247, -0.840251624584198, -0.0009267802815884352, -0.002361011691391468, -0.0069636269472539425, -1.1499589681625366, -9.059865078597795e-06, -6.05564855504781e-05, -0.0011206544004380703, -2.101564884185791, -2.8729025871143676e-05, -0.6921694278717041, -0.0646769180893898, -0.08657672256231308, -0.11783432215452194, -0.006426264997571707, -0.0021721357479691505, -0.00765107199549675, -0.019893648102879524, -0.06150733307003975, -0.009596525691449642, -0.19239316880702972, -3.701976776123047, -0.25167316198349, -1.8676831722259521, -0.12054339796304703, -0.8338454365730286, -0.0015595904551446438, -2.863001585006714, -1.3314963579177856, -4.768360213347478e-06, -0.0005828827270306647, -0.015830906108021736, -0.04696841910481453, -0.007832883857190609, -0.5409159064292908, -0.012109806761145592, -3.099393507000059e-05, -1.1444026313256472e-05, -5.411955135059543e-05, -2.3841855067985307e-07, -1.4305104514278355e-06, -0.0045198420993983746, -0.9738197326660156, -4.339123915997334e-05, -0.00016425691137555987, -0.0004611144249793142, -2.2411515712738037, -0.045062147080898285, -0.1317416876554489, -0.09568477421998978, -3.480850500636734e-05, -0.2941816449165344, -0.05601539835333824, -0.020611269399523735, -0.0013994909822940826, -0.07710235565900803, -0.07778957486152649, -0.07633017748594284, -0.010760379955172539, -0.00031418632715940475, -0.00023266946664080024, -8.344646857949556e-07, -9.775113539944869e-06, -9.095255518332124e-05, -0.0011361341457813978, -0.0005875291535630822, -0.0817020833492279, -0.0011570908827707171, -2.169585604860913e-05, -0.0005253365379758179, -0.007423317059874535, -7.211902266135439e-05, -0.0007524043321609497, -0.721775472164154, -2.804274559020996, -5.757642793469131e-05, -0.009825674816966057, -0.4374828040599823, -0.15176323056221008, -0.7560733556747437, -0.8771757483482361, -0.11496084183454514, -0.22270314395427704, -0.015228081494569778, -2.8690450191497803, -0.0862099900841713, -0.02517198584973812, -0.018599623814225197, -0.0967961773276329, -0.010987140238285065, -0.06644570082426071, -0.0009142747730948031, -0.20008443295955658, -1.7881377516459906e-06, -6.079655122448457e-06, -0.0033587967045605183, -0.00295048370026052, -0.05126841366291046, -0.0031576319597661495, -9.893881360767409e-05, -4.756337511935271e-05, -0.18664301931858063, -1.0371154530730564e-05, -0.00028880240279249847, -2.1622488498687744, -0.05749673396348953, -0.0003313469351269305, -1.2397689715726301e-05, -0.0027330685406923294, -0.0015120989410206676, -0.10150061547756195, -0.002506688004359603, -0.5930240750312805, -0.12838049232959747, -0.004829052835702896, -0.07912944257259369, -0.08076994866132736, -0.0004894727608188987, -0.3472135663032532, -0.009911960922181606, -0.04358052462339401, -0.00029774048016406596, -0.010391298681497574, -0.5585350394248962, -2.038458114839159e-05, -4.2199197196168825e-05, -0.002107305685058236, -0.00237171514891088, -7.390703103737906e-05, -8.22540732769994e-06], "finish_reason": "stop"}], "metrics": {"energy": 875.815141780853, "energy_per_token": 3.4893033537085776, "time": 21.000996, "time_per_token": 0.08366930677290838}}
{"outputs": [{"text": "# Initialize a zip file object\n    with zipfile.ZipFile(os.path.join(target_dir, archive_name), 'w') as zipf:\n        # List the files in the source directory\n        files = os.listdir(source_dir)\n        for f in files:\n            # Check if the file matches the naming pattern\n            if re.match(r'^.*_processed\\.(csv|txt|xls|xlsx)$', f):\n                # Add the file to the zip file\n                zipf.write(os.path.join(source_dir, f), arcname=f)\n\n    # Return the path to the created archive\n    return os.path.join(target_dir, archive_name)", "tokens": ["#", " Initialize", " a", " zip", " file", " object", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "#", " List", " the", " files", " in", " the", " source", " directory", "\n", "        ", "files", " =", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", "\n", "        ", "for", " f", " in", " files", ":", "\n", "            ", "#", " Check", " if", " the", " file", " matches", " the", " naming", " pattern", "\n", "            ", "if", " re", ".", "match", "(", "r", "'^", ".", "*", "_", "processed", "\\", ".", "(", "csv", "|", "txt", "|", "x", "ls", "|", "x", "ls", "x", ")$", "'", ",", " f", "):", "\n", "                ", "#", " Add", " the", " file", " to", " the", " zip", " file", "\n", "                ", "zip", "f", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " f", ")", ",", " arc", "name", "=", "f", ")", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " created", " archive", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "#"], "logprobs": [-1.0016841888427734, -3.7166965007781982, -1.1864112615585327, -1.626009225845337, -0.9825208783149719, -0.3408553898334503, -1.1970469951629639, -0.0009831124916672707, -1.0560674667358398, -0.006582837551832199, -3.862306402879767e-05, -7.986990567587782e-06, -5.721882189391181e-05, -2.3841855067985307e-07, -2.861018856492592e-06, -0.0026323688216507435, -0.2023526281118393, -2.622600959512056e-06, -7.915183232398704e-05, -1.5497195136049413e-06, -0.0012535341084003448, -0.000219321038457565, -0.003368539037182927, -3.373566141817719e-05, -2.861018856492592e-06, -0.0013453251449391246, -0.005379012320190668, -6.198863957251888e-06, -3.576278118089249e-07, -0.0008419782971031964, -0.00010764019680209458, -0.3181523382663727, -0.02529636211693287, -0.0755663514137268, -0.0018800693796947598, -0.20601105690002441, -1.1695027351379395, -0.0011062461417168379, -0.0013263961300253868, -0.0507364422082901, -0.0660599023103714, -3.58160400390625, -2.7867538928985596, -0.2626315951347351, -0.03561187535524368, -0.00723740691319108, -0.09080065786838531, -0.01450247410684824, -0.06223481148481369, -0.00019631843315437436, -0.9336398243904114, -0.02384834736585617, -0.008706466294825077, -9.536738616588991e-07, -7.271502545336261e-05, 0.0, -5.507317473529838e-05, -0.0009342834819108248, -5.006777428206988e-06, -5.364403477869928e-06, -5.61460001335945e-05, -0.00019369633810129017, -0.19880172610282898, -2.1411116123199463, -1.4271944761276245, -0.40076693892478943, -0.0030239352490752935, -0.00028308198670856655, -0.003541627898812294, -0.004313095007091761, -0.1127849668264389, -0.627250075340271, -0.01916545443236828, -0.06395994126796722, -0.2078937143087387, -2.7859907150268555, -0.03126571327447891, -2.7905020713806152, -0.6520510315895081, -1.1101986169815063, -0.0002611534437164664, -0.11317753791809082, -0.07513418793678284, -7.509902934543788e-05, -0.2542257010936737, -0.11899135261774063, -0.028021877631545067, -1.3100829124450684, -0.48927199840545654, -0.6095715165138245, -0.1156468540430069, -0.007530989591032267, -0.612930178642273, -0.010405809618532658, -1.312209129333496, -1.5886459350585938, -0.0034499194007366896, -0.840336263179779, -0.4950672388076782, -2.9281005859375, -0.07424682378768921, -2.8495869636535645, -0.4207693338394165, -0.0022633669432252645, -0.0010583758121356368, -0.6774904131889343, -0.0004711233195848763, -9.07141511561349e-05, -0.0024436633102595806, -0.037827018648386, -0.0025805288460105658, -0.0015711355954408646, -0.041264746338129044, -0.5229516625404358, -0.011919465847313404, -0.10662930458784103, -0.002691933885216713, -0.0010275328531861305, -0.3595729470252991, -0.6515017151832581, -0.1375579535961151, -0.00014733182615600526, -0.01882508210837841, -0.00031001531169749796, -1.7404405298293568e-05, -1.585470999998506e-05, -0.00011598391574807465, -0.006875073071569204, -3.576278118089249e-07, -6.198863957251888e-06, -1.1920928244535389e-07, -9.07141511561349e-05, -4.327203714638017e-05, -0.0016906267264857888, -5.245195097813848e-06, -5.245195097813848e-06, -4.9828242481453344e-05, -0.001726209418848157, -0.02596551552414894, -0.0001419681793777272, -0.4185340702533722, -9.536738616588991e-07, -0.00908054132014513, -0.08452898263931274, -0.024146171286702156, -0.0025505651719868183, -2.1053712368011475, -0.10671716183423996, -0.3613484799861908, -0.14020517468452454, -0.005792735144495964, -0.08901285380125046, -0.05868599936366081, -0.0006127863889560103, -0.17427997291088104, -0.07518748193979263, -0.024789929389953613, -0.0003175231395289302, -0.003197915619239211, -0.009964484721422195, -2.50339189733495e-06, -1.4185804502631072e-05, -7.152531907195225e-06, -0.010245940648019314, -0.0003152588615193963, -0.0005532164941541851, -1.4781842764932662e-05, -4.124556289752945e-05, -8.034383063204587e-05, -0.0013623490231111646, -1.168244216387393e-05, -4.6491513785440475e-06, -0.2103034108877182, -0.22775602340698242, -0.007462246343493462, -1.4109256267547607], "finish_reason": "stop"}], "metrics": {"energy": 625.5062865924837, "energy_per_token": 3.554012992002748, "time": 14.725055, "time_per_token": 0.08366508522727273}}
{"outputs": [{"text": "processed_files = []\n\n    for root, dirs, files in os.walk(source_dir):\n        for file in files:\n            if re.search('_processed.txt$', file):\n                processed_files.append(os.path.join(root, file))\n\n    if not processed_files:\n        return 'No processed files found.'\n\n    archive_path = os.path.join(target_dir, archive_name)\n\n    with zipfile.ZipFile(archive_path, 'w') as archive:\n        for file in processed_files:\n            archive.write(file, os.path.basename(file))\n\n    shutil.move(archive_path, target_dir)\n\n    return os.path.abspath(archive_path)", "tokens": ["processed", "_", "files", " =", " []", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " re", ".", "search", "('", "_", "processed", ".", "txt", "$'", ",", " file", "):", "\n", "                ", "processed", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", "))", "\n", "\n", "    ", "if", " not", " processed", "_", "files", ":", "\n", "        ", "return", " '", "No", " processed", " files", " found", ".", "'", "\n", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " archive", ":", "\n", "        ", "for", " file", " in", " processed", "_", "files", ":", "\n", "            ", "archive", ".", "write", "(", "file", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "sh", "util", ".", "move", "(", "archive", "_", "path", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "return", " os", ".", "path", ".", "ab", "sp", "ath", "(", "archive", "_", "path", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.444732666015625, -0.006380899343639612, -0.12234558910131454, -0.01688602939248085, -1.070249080657959, -0.007900063879787922, -1.5594420433044434, -0.0005788319394923747, -0.5946140885353088, -0.8597733378410339, -0.0033704398665577173, -0.4332836866378784, -0.0002755738969426602, -6.3774932641536e-05, -0.004560783039778471, -0.0002896366349887103, -0.000380324519937858, -5.960446742392378e-06, -3.3854863431770355e-05, -0.00048601735034026206, -0.003196133067831397, -3.933898824470816e-06, -3.576272320060525e-06, -0.020455241203308105, -0.004592585377395153, -0.005701588466763496, -0.0626610517501831, -0.166041299700737, -0.12917868793010712, -0.0013153243344277143, -7.152301259338856e-05, -0.00012766500003635883, -0.0030076527036726475, -0.1088336706161499, -0.8730208873748779, -3.0397906812140718e-05, -0.17199701070785522, -1.0728213787078857, -0.3932366967201233, -0.0047566830180585384, -1.7657670974731445, -2.1436095237731934, -1.2198292016983032, -8.308542601298541e-05, -0.010593372397124767, -0.12598229944705963, -0.026742050424218178, -0.0013797297142446041, -0.4693833291530609, -0.00023183519078884274, -0.12730902433395386, -0.00035494225448928773, -0.0012236495967954397, -0.002203062642365694, -0.027448279783129692, -1.311301275563892e-06, -3.1470757676288486e-05, -5.960462772236497e-07, -0.0020738777238875628, -8.034383063204587e-05, -0.0075055514462292194, -0.00019274283840786666, -0.0012518672738224268, -0.0010706413304433227, -0.0010720703285187483, -0.027041565626859665, -0.003938538022339344, -1.0613912343978882, -0.31269851326942444, -0.3874301612377167, -1.6689286894688848e-06, -8.344646857949556e-07, -0.0008079125545918941, -0.004443651996552944, -0.0009464313625358045, -1.090769648551941, -1.483513593673706, -0.19686554372310638, -0.22349034249782562, -0.018925920128822327, -0.10623040050268173, -1.025532603263855, -0.026308342814445496, -0.002483262214809656, -0.014068243093788624, -0.0002205128694185987, -0.9005696773529053, -0.04894360154867172, -0.027931692078709602, -0.0003914067056030035, -0.00378119433298707, -3.576278118089249e-07, -8.106198947643861e-06, -1.9073468138230965e-06, -0.0037206250708550215, -0.0001380348257953301, -0.0014319891342893243, -1.311301275563892e-06, -4.768370445162873e-07, -0.0003916450368706137, -0.0018297373317182064, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.00026294111739844084, -0.00048756631440483034, -0.7090412378311157, -0.00013076403411105275, -0.14469464123249054, -0.003974397201091051, -2.5510462364763953e-05, -3.3378546504536644e-06, -7.533743337262422e-05, 0.0, -1.9073468138230965e-06, -6.842378934379667e-05, -0.0008201810996979475, -8.344646857949556e-07, -1.585470999998506e-05, -0.0003768687602132559, -0.06340526044368744, -0.008584147319197655, -0.17229898273944855, -1.2874520507466514e-05, -1.114748239517212, -0.04219144955277443, -0.0010420613689348102, -0.0021416840609163046, -0.008770516142249107, -0.07010828703641891, -0.6084700226783752, -0.0004021312633994967, -2.3841855067985307e-07, -8.344646857949556e-07, -7.188061863416806e-05, -7.879423355916515e-05, -0.0009801351698115468, -0.17567040026187897, -0.01217387430369854, -8.34461570775602e-06, -1.847726889536716e-05, -0.003531411988660693, -0.04052070155739784, -1.653997540473938, -5.960462772236497e-07, -7.795983401592821e-05, 0.0, -0.5174527764320374, -9.536738616588991e-07, -3.0874729418428615e-05, -0.0009201106731779873, -0.1793050318956375, -0.0029245722107589245, -0.22807350754737854, -0.03029944933950901, -1.6004953384399414, -2.0265558760002023e-06, -3.576272320060525e-06, -0.6231237053871155, -0.010608823969960213, -0.028658512979745865, -0.007769247051328421, -7.295342220459133e-05, -0.00024589852546341717, -0.2040437012910843, -2.2053474822314456e-05, -0.00039867559098638594, -0.0074386997148394585, -0.036474406719207764, -0.315695196390152, -0.0013913960428908467, -0.026653142645955086, -0.958438515663147, -2.0265373677830212e-05, -2.634490556374658e-05, -2.7418097943154862e-06, -1.342408299446106, -1.5735502529423684e-05, -6.318072337307967e-06, -0.0002321927313460037, -0.08287883549928665, -0.0012540103634819388, -0.0001559135998832062, -1.016687035560608, -4.0531076592742465e-06, -3.4570634852570947e-06, -2.50339189733495e-06, -8.22540732769994e-06, -1.4940434694290161, -0.0019192148465663195], "finish_reason": "stop"}], "metrics": {"energy": 657.0819813442224, "energy_per_token": 3.4766242399165206, "time": 15.773114, "time_per_token": 0.08345562962962963}}
{"outputs": [{"text": "# Check if the source directory exists\n    if not os.path.exists(source_dir):\n        raise FileNotFoundError(f\"Source directory not found: {source_dir}\")\n\n    # Check if the target directory exists\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    # Find all files with the '_processed' suffix\n    file_pattern = re.compile(r'_processed\\..*$')\n    processed_files = [f for f in os.listdir(source_dir) if file_pattern.search(f)]\n\n    # Archive processed files\n    archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w') as archive:\n        for file in processed_files:\n            file_path = os.path.join(source_dir, file)\n            archive.write(file_path, arcname=file)\n            # Remove the original file after it is archived\n            os.remove(file_path)\n\n    return archive_path\n", "tokens": ["#", " Check", " if", " the", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " not", " found", ":", " {", "source", "_", "dir", "}\"", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " target", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Find", " all", " files", " with", " the", " '_", "processed", "'", " suffix", "\n", "    ", "file", "_", "pattern", " =", " re", ".", "compile", "(", "r", "'_", "processed", "\\", ".", ".", "*", "$", "')", "\n", "    ", "processed", "_", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " file", "_", "pattern", ".", "search", "(", "f", ")]", "\n", "\n", "    ", "#", " Archive", " processed", " files", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " archive", ":", "\n", "        ", "for", " file", " in", " processed", "_", "files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", "\n", "            ", "archive", ".", "write", "(", "file", "_", "path", ",", " arc", "name", "=", "file", ")", "\n", "            ", "#", " Remove", " the", " original", " file", " after", " it", " is", " archived", "\n", "            ", "os", ".", "remove", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " archive", "_", "path", "\n"], "logprobs": [-1.0016841888427734, -1.889591932296753, -0.21756601333618164, -0.48256543278694153, -0.2759992778301239, -0.20266474783420563, -0.1438300758600235, -0.09877955913543701, -0.0006169561529532075, -0.00826048944145441, -0.019089436158537865, -0.0012693690368905663, -1.2040065485052764e-05, -0.000350175570929423, -4.410734163684538e-06, -0.2095714956521988, -5.864924969500862e-05, -0.0012272215681150556, -1.0847986231965479e-05, -2.145764938177308e-06, -0.015630239620804787, -0.0001778444420779124, -0.0008085080771706998, -0.17071202397346497, -0.6034167408943176, -0.00587083725258708, -6.318072337307967e-06, -0.02471131458878517, -0.10324925929307938, -0.04656410589814186, -0.3031584918498993, -0.0008060067193582654, -2.4190239906311035, -0.0003631647559814155, -0.028127586469054222, -0.009732415899634361, -0.000803505361545831, -1.2755313036905136e-05, -1.1920928244535389e-07, -0.0035746502690017223, -9.142934868577868e-05, -8.129743218887597e-05, -0.03353995084762573, -0.0003296785580459982, -0.016363942995667458, -0.5680292248725891, -0.006078210659325123, -0.03930274397134781, -0.027345282956957817, -0.0005136600811965764, -0.007256579585373402, -1.2673406600952148, -2.0146166207268834e-05, -0.010173135437071323, -0.0030497252009809017, -7.664863369427621e-05, -1.1920928244535389e-07, -2.145764938177308e-06, -1.7881377516459906e-06, -0.001391872181557119, -1.764281842042692e-05, -0.0005046047735959291, -7.152555099310121e-07, -2.3841855067985307e-07, -0.0006643710657954216, -2.6940935640595853e-05, -0.0002224197960458696, -1.070817232131958, -4.529942543740617e-06, -0.011054934933781624, -1.0728830375228426e-06, -4.768360213347478e-06, -0.00013910756388213485, -0.0002374367177253589, -6.079655122448457e-06, -3.099436753473128e-06, -0.0107590826228261, -0.030490834265947342, -0.010658127255737782, -0.0004807746736332774, -0.022506985813379288, -2.9547505378723145, -0.6037247776985168, -0.6080090999603271, -0.9168510437011719, -0.7324886918067932, -0.455421507358551, -0.0015694693429395556, -0.011259232647716999, -0.018792208284139633, -1.2237005233764648, -0.0002951186615973711, -3.172903537750244, -0.01317568589001894, -1.329468011856079, -0.004678493831306696, -0.17483821511268616, -1.1801649634435307e-05, -0.0005868143052794039, -0.017364146187901497, -0.021657513454556465, -1.834934949874878, -0.003941506613045931, -0.7588782906532288, -0.014477799646556377, -2.791311264038086, -1.1464669704437256, -0.896155059337616, -0.00014053787162993103, -0.022291917353868484, -0.02711048536002636, -0.29254260659217834, -0.00023934361524879932, -0.0069843437522649765, -0.000587767455726862, -0.06308521330356598, -0.7714478969573975, -0.07327570021152496, -0.0004049911512993276, -3.576272320060525e-06, -0.0007238152320496738, -1.6689286894688848e-06, -0.000566203030757606, 0.0, -2.455681169521995e-05, -0.060747917741537094, -2.264974000354414e-06, -2.0265558760002023e-06, -0.0006261295638978481, -0.02329576015472412, -0.16240821778774261, -3.933898824470816e-06, -7.152555099310121e-07, -3.3854863431770355e-05, -0.006001191213726997, -5.531158240046352e-05, -0.001007764250971377, -0.03617069125175476, -0.00010823617776622996, -0.01798371411859989, -0.0001397035230183974, -0.0563485287129879, -2.813491106033325, -3.1333963871002197, -0.0009802542626857758, -0.47654712200164795, -0.0001560327800689265, -0.8422160744667053, -0.025586549192667007, -0.014614320360124111, -0.00022754464589525014, -0.003441603621467948, -2.3841855067985307e-07, -3.814689989667386e-06, -2.3841855067985307e-07, -0.0013617537915706635, -2.6940935640595853e-05, -0.000390215078368783, -5.960462772236497e-07, -1.1920928244535389e-07, -6.97350042173639e-05, -0.0007901645149104297, -2.622600959512056e-06, -4.768370445162873e-07, -0.0001232548092957586, -0.0013873485149815679, -0.04466025158762932, -0.046543508768081665, -0.005416479427367449, -8.22540732769994e-06, -2.145764938177308e-06, -3.6954195820726454e-05, 0.0, -1.311301275563892e-06, -2.169585604860913e-05, -0.00039867559098638594, -3.576278118089249e-07, -4.529942543740617e-06, -0.0001267114421352744, -0.07088395208120346, -0.00791449286043644, -0.08941420912742615, -1.0132738680113107e-05, -1.4307680130004883, -0.020266015082597733, -0.00047600860125385225, -0.0008498394163325429, -0.007872269488871098, -0.17088617384433746, -0.24986279010772705, -0.0006254147156141698, -1.1920928244535389e-07, -1.1920928244535389e-07, -2.539125671319198e-05, -4.4225667807040736e-05, -0.00032824851223267615, -0.35750657320022583, -0.006604391150176525, -0.0010892179561778903, -0.0006653240998275578, -0.0002401778765488416, -1.1920928244535389e-07, -2.264974000354414e-06, -2.264974000354414e-06, -0.0001137191939051263, -6.9141146923357155e-06, -0.0004924515378661454, -1.5497195136049413e-06, -8.344646857949556e-07, -2.3603161025675945e-05, -7.533743337262422e-05, -0.00010275312524754554, -0.0006730675231665373, -0.0121897729113698, -0.07346457242965698, -0.004122331738471985, -5.722029527532868e-06, -3.3378546504536644e-06, -0.00039736481267027557, -0.0005819296347908676, -8.344646857949556e-07, -0.004586771130561829, -0.3396419882774353, -1.0728830375228426e-06, -0.003652332117781043, -0.4643189013004303, -0.05883707478642464, -0.0249731857329607, -1.294708013534546, -0.740373432636261, -0.6101606488227844, -0.4314282536506653, -1.8850812911987305, -0.08386578410863876, -0.5554417967796326, -2.519099712371826, -1.1524183750152588, -0.2086508572101593, -0.012489321641623974, -0.0014423454413190484, -0.041678521782159805, -2.3841855067985307e-07, -0.0017828536219894886, -9.536697689327411e-06, -0.0016411182004958391, -0.00018666432879399508, -4.768370445162873e-07, -0.000639710808172822, -0.0005584587925113738, -0.06571347266435623, -0.008102405816316605, -0.24868108332157135, -0.02327258326113224, -0.000940595637075603, -0.00014137222024146467, -0.7222614288330078], "finish_reason": "length"}], "metrics": {"energy": 867.5422968940734, "energy_per_token": 3.388837097242474, "time": 21.44051, "time_per_token": 0.0837519921875}}
{"outputs": [{"text": "processed_files = []\n    for file_name in os.listdir(source_dir):\n        if '_processed' in file_name and not file_name.startswith('.'):\n            processed_files.append(os.path.join(source_dir, file_name))\n\n    if not processed_files:\n        return None\n\n    archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w', zipfile.ZIP_DEFLATED) as archive:\n        for file_path in processed_files:\n            archive.write(file_path, arcname=os.path.basename(file_path))\n\n    return archive_path", "tokens": ["processed", "_", "files", " =", " []", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "if", " '_", "processed", "'", " in", " file", "_", "name", " and", " not", " file", "_", "name", ".", "start", "sw", "ith", "('", ".", "')", ":", "\n", "            ", "processed", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "_", "name", "))", "\n", "\n", "    ", "if", " not", " processed", "_", "files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " archive", ":", "\n", "        ", "for", " file", "_", "path", " in", " processed", "_", "files", ":", "\n", "            ", "archive", ".", "write", "(", "file", "_", "path", ",", " arc", "name", "=", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", "))", "\n", "\n", "    ", "return", " archive", "_", "path", "\n", "\n", "def"], "logprobs": [-1.444732666015625, -0.006380899343639612, -0.12234558910131454, -0.01688602939248085, -1.070249080657959, -0.007900063879787922, -0.23624561727046967, -0.38713985681533813, -1.310392141342163, -0.6842067837715149, -0.026778029277920723, -0.0010925520909950137, -0.004388582892715931, -7.748573807475623e-06, -0.0007540719816461205, -1.1920928244535389e-07, -0.0002057340752799064, -0.0019564551766961813, -1.4305012882687151e-05, -7.986990567587782e-06, -0.0003281293320469558, -0.0025499705225229263, -0.00398579565808177, -0.054802633821964264, -1.1521210670471191, -0.002788823563605547, -0.04725397750735283, -0.008418548852205276, -0.029111698269844055, -9.894321920000948e-06, -2.264974000354414e-06, -1.6263413429260254, -2.0134592056274414, -0.1730881631374359, -4.529942543740617e-06, -1.4305104514278355e-06, -0.0046737478114664555, -1.0748852491378784, -3.683499380713329e-05, -1.311301275563892e-06, -0.025703322142362595, -0.16876624524593353, -0.006435503717511892, -0.06805234402418137, -0.07711824774742126, -0.002432722831144929, -0.290831059217453, -0.0006076634745113552, -0.047996096312999725, -0.0004002247005701065, -0.002441760618239641, -0.0025435497518628836, -0.5251044034957886, -2.3841855067985307e-07, -8.189342770492658e-05, -1.311301275563892e-06, -0.0017432268941774964, -0.00018106251081917435, -0.0016035091830417514, -1.0847986231965479e-05, -1.7881377516459906e-06, -0.00010752100206445903, -0.0010746901389211416, -1.0728830375228426e-06, -1.1920922133867862e-06, -0.0007850425899960101, -0.0007663412252441049, -0.3703060746192932, -0.0020378315821290016, -0.8089147806167603, -0.22094090282917023, -0.17987680435180664, -1.1920922133867862e-06, -7.152555099310121e-07, -0.0006144542712718248, -0.0032970139291137457, -0.0007490689749829471, -0.9765270948410034, -1.3469923734664917, -0.02160116657614708, -0.017956551164388657, -0.0004936429904773831, -1.0164076089859009, -0.03497884422540665, -0.03764576092362404, -0.0005989664932712913, -0.0014913876075297594, -2.3841855067985307e-07, -5.722029527532868e-06, -7.152555099310121e-07, -0.0025868306402117014, -0.00020668754586949944, -0.0011949549661949277, -1.6689286894688848e-06, -1.7881377516459906e-06, -0.0003494605771265924, -0.0025484247598797083, -2.861018856492592e-06, -8.940656698541716e-06, -0.0005731132114306092, -0.0004938812926411629, -0.3216324746608734, -0.15533460676670074, -0.005315931048244238, -3.909988299710676e-05, -4.887569048150908e-06, -5.185469490243122e-05, -1.1920928244535389e-07, -1.311301275563892e-06, -6.210611172718927e-05, -0.0012473430251702666, -8.344646857949556e-07, -1.811964830267243e-05, -0.0003660247311927378, -0.04661599174141884, -0.007610612083226442, -2.3147330284118652, -8.427741704508662e-05, -0.08032066375017166, -2.1815061700181104e-05, -2.622600959512056e-06, -7.557583012385294e-05, -7.056941103655845e-05, -1.9073468138230965e-06, -0.005279171280562878, -3.2186455882765586e-06, -2.8967437174287625e-05, -0.00451580761000514, -1.2397689715726301e-05, -1.3406271934509277, -0.039955493062734604, -0.0003830652858596295, -0.0015920833684504032, -0.01196304988116026, -0.06867558509111404, -0.05039520189166069, -0.030431976541876793, -0.00029488030122593045, -0.000324673397699371, -2.3841855067985307e-07, -4.768370445162873e-07, -8.201262971851975e-05, -9.30981186684221e-05, -0.00083078199531883, -0.42013096809387207, -0.011697983369231224, -7.390948667307384e-06, -2.3603161025675945e-05, -0.0018845908343791962, -2.1934269170742482e-05, -6.222531374078244e-05, -0.00563935749232769, -1.4769843816757202, -2.145764938177308e-06, -0.007236696779727936, -0.017012612894177437, -8.344646857949556e-07, -9.250213042832911e-05, 0.0, -0.00821508839726448, 0.0, -2.753696753643453e-05, -0.0013523490633815527, -2.3841830625315197e-06, -0.00034314466756768525, -0.029369758442044258, -0.002565190428867936, -0.6195899248123169, -0.06006718426942825, -0.27122557163238525, -0.016397014260292053, -0.0010403940686956048, -0.00012265883560758084, -0.6679642200469971, -0.00812794640660286, -0.803167462348938], "finish_reason": "stop"}], "metrics": {"energy": 590.5021938552849, "energy_per_token": 3.355126101450482, "time": 14.717571, "time_per_token": 0.0836225625}}
{"outputs": [{"text": "pattern = re.compile(r'[\\w]*\\_processed\\.csv$')\n    if os.path.exists(os.path.join(source_dir, archive_name)):\n        os.remove(os.path.join(source_dir, archive_name))\n\n    for file in os.listdir(source_dir):\n        if pattern.match(file):\n            archive = zipfile.ZipFile(os.path.join(target_dir, archive_name), 'a', zipfile.ZIP_DEFLATED)\n            archive.write(os.path.join(source_dir, file), os.path.basename(file))\n            archive.close()\n    return os.path.join(target_dir, archive_name)", "tokens": ["pattern", " =", " re", ".", "compile", "(", "r", "'", "[\\", "w", "]", "*\\", "_", "processed", "\\", ".", "csv", "$", "')", "\n", "    ", "if", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " archive", "_", "name", "))", ":", "\n", "        ", "os", ".", "remove", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " archive", "_", "name", "))", "\n", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "if", " pattern", ".", "match", "(", "file", "):", "\n", "            ", "archive", " =", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " '", "a", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", "\n", "            ", "archive", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "            ", "archive", ".", "close", "()", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")"], "logprobs": [-3.285970687866211, -0.02466839738190174, -0.6641337871551514, -0.0008336406317539513, -0.0006348263123072684, -0.06054866313934326, -0.05611886456608772, -2.5452537536621094, -3.222188949584961, -0.26938697695732117, -3.400848865509033, -2.8546228408813477, -0.2821100652217865, -0.02728774957358837, -0.5146563649177551, -0.0660969540476799, -2.577587842941284, -1.5516517162322998, -0.0008762810612097383, -0.0448092445731163, -0.1953888088464737, -3.8159117698669434, -1.533094048500061, -1.2993727978027891e-05, -0.026511404663324356, -1.0490362910786644e-05, -0.6567883491516113, -0.0028835644479840994, -1.742797613143921, -1.0490362910786644e-05, -0.0003983181086368859, -3.576272320060525e-06, -0.012368406169116497, -0.0032719431910663843, -1.2963390350341797, -0.00015066919149830937, -6.282132380874828e-05, -0.026040315628051758, -0.1792149543762207, -6.425174069590867e-05, -3.6238969187252223e-05, -0.0008052920456975698, -0.019101716578006744, -0.012282921001315117, -0.0082096504047513, -0.5073771476745605, -1.823885577323381e-05, -0.0441458560526371, -0.0006715188501402736, -0.007269715890288353, -1.0728830375228426e-06, -2.2172682292875834e-05, -3.576278118089249e-07, -0.0004058252670802176, -7.295342220459133e-05, -0.0029938658699393272, -8.4638240878121e-06, -1.7881377516459906e-06, -0.0001292145170737058, -0.0012956805294379592, -6.198863957251888e-06, -2.3841855067985307e-07, -0.0004970983718521893, -0.013245566748082638, -1.3422868251800537, -0.001553996349684894, -3.2566633224487305, -0.7266150712966919, -0.267520934343338, -0.013406486250460148, -4.172316494077677e-06, -0.009361537173390388, -1.0728830375228426e-06, -0.00024256148026324809, -0.006141006946563721, -1.847726889536716e-05, -8.821448318485636e-06, -0.0018850667402148247, -0.0026190525386482477, -0.009257723577320576, -0.10404949635267258, -0.34392112493515015, -0.0001438752660760656, -0.2748814821243286, -0.0004017737810499966, -0.0064005618914961815, -0.09728733450174332, -0.0018497277051210403, -0.005117057356983423, -3.5328686237335205, -1.097663402557373, -0.31475192308425903, -0.0001998939987970516, -0.00010430268594063818, -0.0008490057080052793, -3.576278118089249e-07, -8.880697714630514e-05, -0.002405489794909954, -0.14274919033050537, -3.814689989667386e-06, -2.884823152271565e-05, -2.145764938177308e-06, -0.0009802542626857758, -0.00036221143091097474, -0.38483941555023193, -3.123234637314454e-05, -2.1576648578047752e-05, -0.0021914057433605194, -0.01566310040652752, -2.2411095415009186e-05, -2.0265558760002023e-06, -0.0018343779956921935, -0.00022873646230436862, -0.4561639428138733, -0.009448690339922905, -2.0679008960723877, -0.0007264359155669808, -0.1266084909439087, -4.875540980719961e-05, -3.373566141817719e-05, -0.00018571082910057157, -2.288792165927589e-05, -9.536738616588991e-07, -0.013811376877129078, -3.3378546504536644e-06, -1.2516897186287679e-05, -0.3164718449115753, -0.007273739669471979, -0.009908892214298248, -0.10566575080156326, -0.0005712069687433541, -0.0005390383303165436, -0.0008563903393223882, -0.05699486657977104, -1.311301275563892e-06, -0.00013076403411105275, -2.3841855067985307e-07, -0.0013516347389668226, -0.00033718624035827816, -0.004511891398578882, -6.01988795096986e-05, -1.6569954823353328e-05, -0.000578474544454366, -0.00835353136062622, -0.00819853600114584, -0.00033968876232393086, -2.5872364044189453, -1.597391747054644e-05, -0.00027938754647038877, -1.311301275563892e-06, -0.7775555849075317, -3.576278118089249e-07, -0.0002848696312867105, -0.04153786972165108, -0.1286042183637619, -0.009061049669981003, -0.23023495078086853, -0.22389647364616394, -0.0008703258354216814, -0.0013858010061085224, -0.0005905076395720243, -0.02487039938569069, -1.3793025016784668, -0.13102416694164276, -0.12826578319072723, -1.9907753085135482e-05, -0.00017867876158561558, -4.875540980719961e-05, -0.01806391403079033, -0.0005659647285938263, -0.02008247748017311, -6.770858453819528e-05, -2.4676019165781327e-05, -0.0005914607318118215, -0.004130167420953512, -0.0007059465860947967, -1.4185804502631072e-05, -0.2482154220342636], "finish_reason": "stop"}], "metrics": {"energy": 597.4424513893127, "energy_per_token": 3.356418266232094, "time": 14.714396, "time_per_token": 0.08266514606741573}}
{"outputs": [{"text": "with zipfile.ZipFile(os.path.join(target_dir, archive_name), mode='w') as archive_file:\n        for dirpath, dirnames, filenames in os.walk(source_dir):\n            for filename in filenames:\n                if re.match(r'.+_processed\\.[a-z]+', filename):\n                    archive_file.write(os.path.join(dirpath, filename), arcname=filename)\n                    os.remove(os.path.join(dirpath, filename))\n    return os.path.join(target_dir, archive_name)", "tokens": ["with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", ",", " mode", "='", "w", "')", " as", " archive", "_", "file", ":", "\n", "        ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "            ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "                ", "if", " re", ".", "match", "(", "r", "'", ".", "+", "_", "processed", "\\", ".", "[", "a", "-", "z", "]+", "'", ",", " filename", "):", "\n", "                ", "    ", "archive", "_", "file", ".", "write", "(", "os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", ",", " arc", "name", "=", "filename", ")", "\n", "                ", "    ", "os", ".", "remove", "(", "os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", "))", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "\n", "#"], "logprobs": [-3.6505661010742188, -0.01481742225587368, -0.00013982271775603294, -1.4066597032069694e-05, -0.0001463782973587513, -4.768370445162873e-07, -7.986990567587782e-06, -0.001833664020523429, -0.2196005880832672, -1.4305104514278355e-06, -0.00010334911348763853, -1.4305104514278355e-06, -0.0020775655284523964, -0.00035482310340739787, -0.003135290928184986, -4.3987260141875595e-05, -4.887569048150908e-06, -0.0019119569333270192, -0.005919662769883871, -5.960446742392378e-06, -1.4305104514278355e-06, -0.000971917703282088, -0.0001436368766007945, -2.169483184814453, -0.1349167376756668, -0.05902790650725365, -0.07139088213443756, -0.0002431573811918497, -0.638818085193634, -2.84540057182312, -0.4535711407661438, -0.0019361099693924189, -0.004616317804902792, -0.018206501379609108, -0.1909674108028412, -2.4135818481445312, -0.21113845705986023, -0.0013829439412802458, -0.2666490375995636, -0.0010473009897395968, -6.8662193370983e-05, -0.0038564850110560656, 0.0, -9.536738616588991e-07, -0.000271879427600652, -0.0011917401570826769, -5.960462772236497e-07, -2.6464111215318553e-05, -0.0003830652858596295, -0.008439944125711918, -7.033323527139146e-06, -3.8265450712060556e-05, -0.00772465206682682, -0.0028978281188756227, -0.0025739893317222595, -0.16380338370800018, -0.27759385108947754, -0.0001691436773398891, -0.004273330792784691, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.0001287377526750788, -0.00028463127091526985, -0.0015394752845168114, -0.3051789402961731, -0.388866662979126, -6.282132380874828e-05, -1.1085362434387207, -0.11345034092664719, -0.02044566534459591, -0.37932702898979187, -0.09303537756204605, -1.1414833068847656, -0.05306139215826988, -0.00630639074370265, -0.2512642443180084, -0.013239332474768162, -1.9465287923812866, -0.48770734667778015, -0.000387831823900342, -3.504691630951129e-05, -1.3343758583068848, -0.5327941179275513, -0.00011944057769142091, -0.003764805383980274, -0.053122323006391525, -0.023492099717259407, -0.0010855264263227582, -0.0004930472350679338, -1.767264485359192, -0.00010799778101500124, -0.10041911900043488, -0.0024069168139249086, -1.811964830267243e-05, -7.295342220459133e-05, -0.036298420280218124, -1.7881377516459906e-06, -1.1324817933200393e-05, -1.1920928244535389e-07, -0.0004905451205559075, -2.539125671319198e-05, -0.009176578372716904, -8.344646857949556e-07, -0.00017355366435367614, -0.0007773000397719443, -0.03699827939271927, -0.00033158526639454067, -0.7857642769813538, -8.344646857949556e-07, -0.021898027509450912, -0.1658431738615036, -0.06015855818986893, -0.0042641907930374146, -0.7526531219482422, -0.02373298816382885, -0.3217982053756714, -2.3364747903542593e-05, -0.008879933506250381, -0.00021753329201601446, -0.0006443570018745959, -2.3841830625315197e-06, -1.7881377516459906e-06, 0.0, -0.0001419681793777272, -2.3364747903542593e-05, -0.01691955141723156, -4.768370445162873e-07, -1.6093124941107817e-05, -0.001492934999987483, -0.002727481070905924, -0.02765946090221405, -0.44440758228302, -0.14531850814819336, -0.05368680879473686, -9.059865078597795e-06, -3.7431014789035544e-05, -1.8954096958623268e-05, -0.018537255004048347, -0.00025602878304198384, -0.0017055026255548, -1.4185804502631072e-05, -1.0967194612021558e-05, -0.0001958416833076626, -0.0012518672738224268, -1.4066597032069694e-05, -0.00012432756193447858, -0.32788610458374023, -0.22026494145393372, -0.007544003892689943, -2.277735948562622], "finish_reason": "stop"}], "metrics": {"energy": 499.48550166130104, "energy_per_token": 3.3299033444086734, "time": 12.411521, "time_per_token": 0.08274347333333333}}
{"outputs": [{"text": "if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    processed_files = []\n    for filename in os.listdir(source_dir):\n        if re.search(r'_processed\\.\\w+', filename) and filename.endswith('.txt'):\n            processed_files.append(os.path.join(source_dir, filename))\n\n    if len(processed_files) == 0:\n        print(\"No files found with the '_processed' suffix.\")\n        return None\n\n    archive_path = os.path.join(target_dir, archive_name)\n    with zipfile.ZipFile(archive_path, 'w') as zip_archive:\n        for file_path in processed_files:\n            filename = os.path.basename(file_path)\n            zip_archive.write(file_path, filename)\n\n    shutil.rmtree(source_dir)\n\n    print(f\"The following files were archived successfully:\")\n    for file_path in processed_files:\n        print(", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "processed", "_", "files", " =", " []", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "if", " re", ".", "search", "(", "r", "'_", "processed", "\\", ".", "\\", "w", "+'", ",", " filename", ")", " and", " filename", ".", "end", "sw", "ith", "('", ".", "txt", "')", ":", "\n", "            ", "processed", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", "))", "\n", "\n", "    ", "if", " len", "(", "processed", "_", "files", ")", " ==", " ", "0", ":", "\n", "        ", "print", "(", "\"", "No", " files", " found", " with", " the", " '_", "processed", "'", " suffix", ".", "\"", ")", "\n", "        ", "return", " None", "\n", "\n", "    ", "archive", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " archive", "_", "name", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "archive", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "archive", ":", "\n", "        ", "for", " file", "_", "path", " in", " processed", "_", "files", ":", "\n", "            ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "            ", "zip", "_", "archive", ".", "write", "(", "file", "_", "path", ",", " filename", ")", "\n", "\n", "    ", "sh", "util", ".", "rm", "tree", "(", "source", "_", "dir", ")", "\n", "\n", "    ", "print", "(", "f", "\"", "The", " following", " files", " were", " archived", " successfully", ":\"", ")", "\n", "    ", "for", " file", "_", "path", " in", " processed", "_", "files", ":", "\n", "        ", "print", "("], "logprobs": [-2.580129623413086, -0.14093643426895142, -0.08159463107585907, -2.5987286790041253e-05, -0.0023443615064024925, -2.145764938177308e-06, -0.4064500033855438, -0.0012062662281095982, -0.5107761025428772, -1.1920858014491387e-05, -2.0265373677830212e-05, -0.005846068263053894, -0.0033283811062574387, -0.0027451948262751102, -0.035034097731113434, -7.033323527139146e-06, -0.16269232332706451, -1.9550132492440753e-05, -8.344646857949556e-07, -0.00015853578224778175, -0.00020656836568377912, -1.5497195136049413e-06, -1.1920928244535389e-07, -0.004471185617148876, -0.012069174088537693, -0.18691647052764893, -0.0008821171941235662, -1.6077998876571655, -0.005156194791197777, -0.10309163480997086, -0.0084308423101902, -1.3565280437469482, -0.0043179611675441265, -0.1590142846107483, -0.12787941098213196, -1.4513881206512451, -0.00024339574156329036, -0.004622369538992643, -3.6954811548639555e-06, -6.0437283536884934e-05, 0.0, -0.00014435203047469258, -0.001347468001767993, -2.0265558760002023e-06, -7.152555099310121e-07, -7.247662142617628e-05, -0.0005245024804025888, -0.0016987192211672664, -0.04357835277915001, -0.8136743903160095, -2.3841574147809297e-05, -0.3908836543560028, -0.6789618730545044, -0.06900396943092346, -0.09711545705795288, -0.008519021794199944, -0.5411635637283325, -0.033506520092487335, -1.1739510297775269, -0.002729264320805669, -0.6696361303329468, -4.351044481154531e-05, -0.0009455977124162018, -2.9500014781951904, -1.677053689956665, -1.3474351167678833, -0.20496751368045807, -0.1622401773929596, -2.3603161025675945e-05, 0.0, -0.2905173897743225, -0.031392451375722885, -0.7436846494674683, -0.0019928612746298313, -0.011030175723135471, -0.009382677264511585, -0.0015112657565623522, -0.3482587933540344, -9.60780744208023e-05, -0.02960842475295067, -0.00015877417172305286, -0.0010750473011285067, -0.0014221088495105505, -0.6179621815681458, -1.6689286894688848e-06, -3.302042750874534e-05, -1.1920928244535389e-07, -0.0015670888824388385, -7.545663538621739e-05, -0.0007462101057171822, -1.1920922133867862e-06, -3.576278118089249e-07, -4.1126360883936286e-05, -0.00020132421923335642, -0.00034314466756768525, -0.0005554801900871098, -0.03113815002143383, -0.0014760324265807867, -1.3560274839401245, -1.694023609161377, -3.611976353568025e-05, -0.00012492353562265635, -1.1920928244535389e-07, -1.4305012882687151e-05, -0.0026983539573848248, -0.17151561379432678, -9.07141511561349e-05, -0.0005011494504287839, -0.0005029367166571319, -0.002280374988913536, -0.0009426202741451561, -0.8431592583656311, -0.4083573818206787, -0.30433323979377747, -0.16994903981685638, -2.6676981449127197, -1.8928236961364746, -1.714860439300537, -0.7881079316139221, -0.36045053601264954, -0.0006531727267429233, -0.042426615953445435, -0.033660296350717545, -0.4722871780395508, -0.10612598806619644, -0.0003337303060106933, -0.0002127659390680492, -0.031012995168566704, -0.02045559138059616, -0.8599096536636353, -0.00189482350833714, -0.025263933464884758, -0.00016783259343355894, -0.6823285818099976, -0.04157789796590805, -0.02428428642451763, -0.0002580548170953989, -0.0026299909222871065, -2.3841855067985307e-07, -1.9073468138230965e-06, -1.0728830375228426e-06, -0.004254101309925318, -7.068861305015162e-05, -0.0004285847535356879, -3.576278118089249e-07, 0.0, -7.760223525110632e-05, -0.0015948207583278418, -2.264974000354414e-06, -1.0728830375228426e-06, -0.00025519452174194157, -0.00024434918304905295, -0.24181701242923737, -0.07304512709379196, -0.0046623568050563335, -1.4543427823809907e-05, -2.264974000354414e-06, -2.1934269170742482e-05, 0.0, -3.576278118089249e-07, -4.2437604861333966e-05, -0.0003469580551609397, -5.960462772236497e-07, -8.702239938429557e-06, -0.00021681819634977728, -0.060579292476177216, -0.005264704581350088, -0.1291690468788147, -1.6689160474925302e-05, -0.2748948931694031, -0.5264932513237, -1.8374643325805664, -9.893881360767409e-05, -0.0003897384158335626, -0.0011144625023007393, -0.008864691480994225, -0.11462510377168655, -0.977594256401062, -0.04786701127886772, -0.00011264643399044871, -0.00044204952428117394, -1.1920928244535389e-07, -7.152555099310121e-07, -3.302042750874534e-05, -5.07818695041351e-05, -0.0006715188501402736, -2.287679672241211, -0.0074423677287995815, -0.00025781645672395825, -3.576278118089249e-07, -2.3841855067985307e-07, -7.152555099310121e-07, -0.0016580180963501334, 0.0, -2.861018856492592e-06, -0.00016020445036701858, -1.9073468138230965e-06, 0.0, -0.0002975021197926253, -0.000982278841547668, -0.0005265279905870557, -0.027524594217538834, -0.000959531927946955, -0.0006964165368117392, -1.8596476365928538e-05, -7.986990567587782e-06, -2.2053474822314456e-05, -0.002178321359679103, -6.437280717364047e-06, -1.1920928244535389e-07, -0.0001736728590913117, -0.509926974773407, -0.01857142336666584, -0.001522573409602046, -0.3526248037815094, -0.03668621927499771, -2.2933106422424316, -4.768370445162873e-07, -2.861018856492592e-06, -0.21340523660182953, -1.3947389561508317e-05, -0.0010163385886698961, -0.12607604265213013, -2.8490614567999728e-05, -0.000120751719805412, -0.02159043401479721, -0.16466401517391205, -0.5721471309661865, -0.0014892450999468565, -1.756095051765442, -0.014362412504851818, -0.15437838435173035, -0.07506053894758224, -3.085634708404541, -0.6514270901679993, -0.05874243006110191, -0.8593583703041077, -0.18203416466712952, -2.9051730632781982, -1.5367271900177002, -0.028980500996112823, -0.00012230125139467418, -0.0022088908590376377, -0.0545332208275795, -0.20810043811798096, -0.1185990497469902, -0.012533234432339668, -0.0005665604257956147, -0.0009567927336320281, -3.576278118089249e-07, -2.3841855067985307e-07, -0.0001892864383989945, -0.00011777184408856556, -0.0008228015503846109, -0.019806114956736565, -0.003982708789408207], "finish_reason": "length"}], "metrics": {"energy": 865.9022123527526, "energy_per_token": 3.38243051700294, "time": 21.43004, "time_per_token": 0.08371109375}}
