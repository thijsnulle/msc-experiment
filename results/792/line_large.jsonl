{"outputs": [{"text": " feature not in df or target not in df:", "tokens": [" feature", " not", " in", " df", " or", " target", " not", " in", " df", ":", "\n"], "logprobs": [-0.17441816627979279, -0.003771099727600813, -1.1086402082582936e-05, -0.01067876722663641, -2.1004748344421387, -0.002637005876749754, -0.00015555603022221476, -2.5748875486897305e-05, -4.708655978902243e-05, -0.0016438555903732777, -0.0018744770204648376], "finish_reason": "stop"}, {"text": " ValueError(f\"Specified columns '{feature}' or '{target}' are not in the provided DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Spec", "ified", " columns", " '", "{", "feature", "}'", " or", " '", "{", "target", "}'", " are", " not", " in", " the", " provided", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.004512010142207146, -8.4638240878121e-06, -0.1376008689403534, -1.4235832691192627, -0.10058967769145966, -1.798140287399292, -0.0017495339270681143, -0.15409137308597565, -2.1096067428588867, -0.027187403291463852, -0.0035969815216958523, -0.02319699339568615, -1.5453641414642334, -0.00590567896142602, -0.0005747812101617455, -0.00045313104055821896, -0.003147174371406436, -1.785196304321289, -0.03838896006345749, -0.10481377691030502, -0.04070968180894852, -0.6358717083930969, -0.10322786867618561, -0.002054605633020401, -0.22009937465190887, -0.007043176330626011, -0.0011848341673612595, -0.002300951164215803], "finish_reason": "stop"}, {"text": " df[feature].to_numpy().reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.04203680902719498, -0.14303843677043915, -0.002867873990908265, -0.0007344171172007918, -0.04539700970053673, -1.4371206760406494, -1.0251946150674485e-05, -0.07446804642677307, -0.017540333792567253, -0.06735672801733017, -0.000447530735982582, 0.0, -0.016818277537822723, -2.8132995794294402e-05, -0.00011955977242905647, -0.03287723287940025, -1.4543427823809907e-05, -4.434487345861271e-05, -0.12477461248636246], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.00018785618885885924, -0.0003594706067815423, -5.173549288883805e-05, -6.079655122448457e-06, -0.04258039593696594, -0.00012587709352374077, -0.9272298812866211, -0.001567802974022925, -4.410734163684538e-06, -0.00048196621355600655, -7.152555099310121e-07, -3.611976353568025e-05, -0.0016162439715117216, -9.298280929215252e-06, -3.802703940891661e-05, -0.001987864263355732], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.004033288452774286, -8.106198947643861e-06, -4.207999518257566e-05, -0.004532421473413706, -0.30787304043769836], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.45700973412022e-05, -3.0278701160568744e-05, -0.0002449450839776546, -0.007850270718336105, -0.002823891816660762, -0.0003766304289456457, -0.03322185203433037], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.313448041677475, -0.002741509350016713, -0.0029345566872507334, -6.556489552167477e-06, -0.0003583981015253812, -4.303362584323622e-05, -0.0002060916303889826, -0.00023266946664080024, -0.03433101996779442], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "res", "idual", "s", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.18966832756996155, -0.0003438596613705158, -0.00033182359766215086, -0.0037630239967256784, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0013642538106068969, -0.018722480162978172, -0.0012872274965047836, -0.00815100409090519, -9.238292841473594e-05, -0.004338020924478769, -2.634490556374658e-05, -0.04525402933359146, -3.099436753473128e-06, -4.291525328881107e-06, -0.0002686616498976946, -0.00010740180005086586, -0.46648547053337097, -0.001261630211956799, -1.0021865367889404, -4.792098479811102e-05, -1.4305012882687151e-05, -1.645074735279195e-05, -0.012510042637586594, -1.4305104514278355e-06, -3.0874729418428615e-05, -4.768370445162873e-07, -0.0005586970364674926, -0.00556692760437727], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.03520800545811653, -5.722029527532868e-06, -1.4305104514278355e-06, -2.3841855067985307e-07, -2.3841574147809297e-05, -6.9141146923357155e-06, -0.002250402234494686, -0.0007899263291619718, -0.43579941987991333], "finish_reason": "stop"}], "metrics": {"energy": 609.3227414684299, "energy_per_token": 4.547184637824103, "time": 15.957018, "time_per_token": 0.11908222388059701}}
{"outputs": [{"text": " feature not in df.columns or target not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", " or", " target", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -0.2910308539867401, -0.0030490122735500336, -0.44530364871025085, -0.00310177868232131, -0.00013147920253686607, -2.396077979938127e-05, -6.19869097135961e-05, -0.0004338276921771467, -0.40232035517692566, -0.0007908792467787862, -0.0006958208978176117], "finish_reason": "stop"}, {"text": " ValueError(\"Columns not found in the provided DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Columns", " not", " found", " in", " the", " provided", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.0036826191935688257, -1.0132738680113107e-05, -0.12065444886684418, -0.4859316051006317, -2.2895612716674805, -0.8558981418609619, -1.2905465364456177, -0.03237970545887947, -0.3934771418571472, -0.8051636815071106, -0.17407886683940887, -0.0027192779816687107, -0.7651769518852234, -0.0006355411605909467, -0.0009528625523671508], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)  # reshape into 2D array", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "  ", "#", " resh", "ape", " into", " ", "2", "D", " array", "\n"], "logprobs": [-0.05301040783524513, -0.1318875402212143, -0.0023777803871780634, -0.0009678685455583036, -0.04243747144937515, -0.3671451508998871, -0.019574683159589767, -9.858122211880982e-05, 0.0, -0.009048054926097393, -1.8358061424805783e-05, -0.00011765264935093, -0.02169787511229515, -2.5748875486897305e-05, -2.4914430468925275e-05, -2.084547281265259, -0.00010430268594063818, -1.9899381399154663, -0.0326993428170681, -2.6434326171875, -0.1955367475748062, -0.00183723377995193, -0.05485115945339203, -0.2652754783630371, -0.36231064796447754], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.00018368464952800423, -0.0004832768754567951, -6.007967749610543e-05, -7.152531907195225e-06, -0.037166908383369446, -0.00014327930693980306, -0.5259895324707031], "finish_reason": "stop"}, {"text": " LinearRegression().fit(X, y)", "tokens": [" Linear", "Reg", "ression", "()", ".", "fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-0.003545072628185153, -9.059865078597795e-06, -3.838465272565372e-05, -0.00505538284778595, -1.3099613189697266, -3.480850500636734e-05, -3.8980677345534787e-05, -0.000719645875506103, -0.01221191231161356, -0.002006423892453313, -0.00039498155820183456, -0.029726464301347733], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.3378044463461265e-05, -2.682172998902388e-05, -0.00021240839851088822, -0.010846350342035294, -0.0028960451018065214, -0.00034517052699811757, -0.03347885236144066], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.28938090801239014, -0.0033964586909860373, -0.0030393856577575207, -5.483612312673358e-06, -0.0004219118563923985, -3.182837463100441e-05, -0.00020692592079285532, -0.0002965487365145236, -0.0314183309674263], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=lambda i: abs(residuals[i]))", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "lambda", " i", ":", " abs", "(", "res", "idual", "s", "[", "i", "]))", "\n"], "logprobs": [-0.14053814113140106, -0.0004631400224752724, -0.0002760506176855415, -0.003443741938099265, -4.768370445162873e-07, -1.1920928244535389e-07, -0.0010450384579598904, -0.02302890457212925, -0.0014193708775565028, -0.008009340614080429, -0.0001436368766007945, -0.005775075405836105, -1.6331539882230572e-05, -0.06668661534786224, -3.099436753473128e-06, -3.576272320060525e-06, -0.00030894274823367596, -0.00012218205665703863, -0.4084871709346771, -0.001412466517649591, -0.5240728259086609, -0.12365733832120895, -0.001831641187891364, -0.3679465055465698, -1.847726889536716e-05, -0.0006111184484325349, -2.3364747903542593e-05, -2.539125671319198e-05, -0.00048673225683160126, -0.00010024998482549563, -0.002366838976740837, -0.0043722037225961685], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model"], "logprobs": [-0.030484359711408615, -7.629365427419543e-06, -1.4305104514278355e-06, -1.1920928244535389e-07, -2.8013790142722428e-05, -1.0251946150674485e-05, -0.002682660473510623, -0.0008188708452507854], "finish_reason": "stop"}], "metrics": {"energy": 557.817347887039, "energy_per_token": 4.290902676054146, "time": 14.510882, "time_per_token": 0.11162216923076923}}
{"outputs": [{"text": " feature not in df.columns or target not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", " or", " target", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.18437694013118744, -0.0048569319769740105, -1.0609570381348021e-05, -0.011757953092455864, -0.24612869322299957, -0.0022857272997498512, -0.44867515563964844, -0.002064598724246025, -9.476689592702314e-05, -3.504691630951129e-05, -8.570780482841656e-05, -0.00041500062798149884, -0.41340306401252747, -0.0008353081648238003, -0.0007672941428609192], "finish_reason": "stop"}, {"text": " ValueError(f\"Column(s) {feature} or {target} not in provided DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", "(", "s", ")", " {", "feature", "}", " or", " {", "target", "}", " not", " in", " provided", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.0048250192776322365, -1.07287787614041e-05, -0.15078265964984894, -1.4119346141815186, -0.11567255109548569, -3.2895655632019043, -1.0230345726013184, -0.00016044282529037446, -0.0704246461391449, -0.7048675417900085, -0.06350818276405334, -0.17948774993419647, -1.0042232275009155, -0.010233551263809204, -0.0010633773636072874, -0.0022003266494721174, -0.24212434887886047, -0.3416743278503418, -2.089900016784668, -0.19939225912094116, -0.0058996351435780525, -0.7584541440010071, -0.009996705688536167, -0.0008381668012589216, -0.001453534816391766], "finish_reason": "stop"}, {"text": " df[feature].to_numpy().reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.04045041278004646, -0.1274205893278122, -0.0027707540430128574, -0.0008139872807078063, -0.060472022742033005, -1.091048002243042, -9.417489309271332e-06, -0.11546705663204193, -0.016496220603585243, -0.087099589407444, -0.0005790702416561544, 0.0, -0.018755590543150902, -3.123234637314454e-05, -0.0001284993631998077, -0.03797898441553116, -1.3470558769768104e-05, -4.95898348162882e-05, -0.10144256055355072], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.0001820160250645131, -0.0003871168300975114, -4.649054244509898e-05, -6.9141146923357155e-06, -0.02500864677131176, -0.0001382732152706012, -0.5783872008323669], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0036791746970266104, -5.960446742392378e-06, -4.660974445869215e-05, -0.0043873959220945835, -0.34236404299736023], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.659658250398934e-05, -3.075552376685664e-05, -0.0002315968304174021, -0.01008970383554697, -0.00335618294775486, -0.00026973424246534705, -0.03794443607330322], "finish_reason": "stop"}, {"text": " np.abs(model.predict(X) - y)", "tokens": [" np", ".", "abs", "(", "model", ".", "predict", "(", "X", ")", " -", " y", ")", "\n"], "logprobs": [-3.046354293823242, -1.6331539882230572e-05, -0.032287370413541794, -0.001640999224036932, -1.0209736824035645, -1.537788011773955e-05, -0.0032222752925008535, -8.21318244561553e-05, -0.0005527398898266256, -0.0059310393407940865, -0.003946731332689524, -0.004632336553186178, -0.0009155849111266434, -0.03783631697297096], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " residuals", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.1691581755876541, -0.0003629264247138053, -0.00025519452174194157, -0.0019170731538906693, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.0008789013954810798, -0.025496840476989746, -0.0014077048981562257, -0.008985086344182491, -0.00012706902634818107, -0.005211340729147196, -2.062299427052494e-05, -0.05912094935774803, -3.2186455882765586e-06, -3.6954811548639555e-06, -0.00021073981770314276, -8.713819261174649e-05, -1.273298978805542, -0.0003121604095213115, -0.02041074074804783, -2.3841855067985307e-07, -2.9802276912960224e-06, 0.0, -0.001671347301453352, -0.0055696540512144566], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model"], "logprobs": [-0.03743633255362511, -7.152531907195225e-06, -1.311301275563892e-06, -1.1920928244535389e-07, -2.3245540432981215e-05, -7.867782187531702e-06, -0.0026203603483736515, -0.0008349508279934525], "finish_reason": "stop"}], "metrics": {"energy": 555.6892791843411, "energy_per_token": 4.410232374478897, "time": 14.702844, "time_per_token": 0.1166892380952381}}
{"outputs": [{"text": " not all(col in df.columns for col in (feature, target)):", "tokens": [" not", " all", "(", "col", " in", " df", ".", "columns", " for", " col", " in", " (", "feature", ",", " target", "))", ":", "\n"], "logprobs": [-2.1681172847747803, -0.8649139404296875, -0.18064191937446594, -0.23214328289031982, -0.012368288822472095, -0.022845057770609856, -0.15590016543865204, -0.0005343916127458215, -0.003916689660400152, -1.6212332411669195e-05, -0.00015007323236204684, -1.458196997642517, -0.004932615906000137, -0.0002489972102921456, -0.0029546436853706837, -0.0014390123542398214, -0.00037496211007237434, -0.0008015995263122022], "finish_reason": "stop"}, {"text": " ValueError(f\"DataFrame must have at least {feature} and {target} columns.\")", "tokens": [" Value", "Error", "(", "f", "\"", "DataFrame", " must", " have", " at", " least", " {", "feature", "}", " and", " {", "target", "}", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.004893232602626085, -8.583032467868179e-06, -0.11132663488388062, -1.2667946815490723, -0.1325974464416504, -2.930820941925049, -0.9278931617736816, -0.6868743896484375, -2.8818135261535645, -0.02015993930399418, -2.386908531188965, -0.023294012993574142, -0.08404653519392014, -0.07397429645061493, -0.008949524722993374, -0.0019161213422194123, -0.09155674278736115, -0.27204933762550354, -0.5968989729881287, -0.010230600833892822, -0.001129227806814015, -0.0015331668546423316], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.04768165200948715, -0.11203091591596603, -0.0033582027535885572, -0.0006910558440722525, -0.05191091075539589, -0.3858829140663147, -0.01621616631746292, -7.414542778860778e-05, 0.0, -0.011590405367314816, -1.728519782773219e-05, -0.00010322991875000298, -0.02597562037408352, -2.4199192921514623e-05, -2.372236667724792e-05, -0.1639290750026703], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.0002177716523874551, -0.000448841426987201, -5.2569914259947836e-05, -7.033323527139146e-06, -0.047321632504463196, -0.00017510310863144696, -0.5078378319740295], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0030929844360798597, -8.583032467868179e-06, -5.1616290875244886e-05, -0.0037129053380340338, -0.3071657717227936], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.0636318115284666e-05, -2.8371408916427754e-05, -0.0001679517881711945, -0.00836239755153656, -0.0029169651679694653, -0.00034278715611435473, -0.03296016901731491], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.29695844650268555, -0.003272418398410082, -0.003484132932499051, -6.318072337307967e-06, -0.00038187362952157855, -4.637133679352701e-05, -0.00021705655672121793, -0.0002862997353076935, -0.0319320410490036], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " residuals", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.16640695929527283, -0.0003668589051812887, -0.0003321811091154814, -0.002719396958127618, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.0016815820708870888, -0.022380981594324112, -0.0011854295153170824, -0.0058389571495354176, -0.00012015574611723423, -0.0062323505990207195, -2.109982233378105e-05, -0.05230492353439331, -3.6954811548639555e-06, -3.6954811548639555e-06, -0.0002798642381094396, -0.0001234931987710297, -1.2260180711746216, -0.0003010773507412523, -0.028345460072159767, 0.0, -3.099436753473128e-06, 0.0, -0.0015235256869345903, -0.004778987728059292], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.02807937003672123, -8.4638240878121e-06, -1.6689286894688848e-06, -1.1920928244535389e-07, -2.2649508537142538e-05, -8.583032467868179e-06, -0.002872271928936243, -0.0007307243067771196, -0.5578604340553284], "finish_reason": "stop"}], "metrics": {"energy": 546.6365527057644, "energy_per_token": 4.593584476519029, "time": 14.487492, "time_per_token": 0.12174363025210083}}
{"outputs": [{"text": " feature not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -0.2910308539867401, -0.0030490122735500336, -1.0574328899383545, -0.0036751364823430777], "finish_reason": "stop"}, {"text": " ValueError(f\"Either {feature} or {target} not in the columns of the provided dataframe.\")", "tokens": [" Value", "Error", "(", "f", "\"", "E", "ither", " {", "feature", "}", " or", " {", "target", "}", " not", " in", " the", " columns", " of", " the", " provided", " data", "frame", ".", "\"", ")", "\n"], "logprobs": [-0.004912686999887228, -1.2755313036905136e-05, -0.13051635026931763, -1.2350256443023682, -0.1083323210477829, -3.5733144283294678, -0.2169809341430664, -0.8403269052505493, -0.0036572017706930637, -0.03216790407896042, -0.019244039431214333, -0.0017049076268449426, -0.0009274948388338089, -0.002634627977386117, -1.6394575834274292, -0.3597955107688904, -1.0924748182296753, -3.2793030738830566, -0.45294472575187683, -0.6002920269966125, -0.7855321764945984, -1.5770831108093262, -0.032099101692438126, -0.74062579870224, -0.027908969670534134, -0.004418254364281893, -0.003009435487911105], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)  # feature column to fit the model", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "  ", "#", " feature", " column", " to", " fit", " the", " model", "\n"], "logprobs": [-0.04195130988955498, -0.13206608593463898, -0.0034827073104679585, -0.0006828360492363572, -0.04979880154132843, -0.3516581952571869, -0.023306824266910553, -8.010543388081715e-05, 0.0, -0.009549296461045742, -1.9073304429184645e-05, -0.00011634149996098131, -0.026825033128261566, -2.932505594799295e-05, -2.5510462364763953e-05, -2.201786756515503, -0.00010227633902104571, -2.235069751739502, -1.4181382656097412, -3.649085521697998, -1.1989037990570068, -0.47161704301834106, -0.09502069652080536, -0.12732350826263428], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.0001711698860162869, -0.00042691652197390795, -5.030505417380482e-05, -7.152531907195225e-06, -0.04302845895290375, -0.00021562635083682835, -0.9980858564376831, -0.0018058198038488626, -6.556489552167477e-06, -0.0005357022164389491, -4.768370445162873e-07, -2.8132995794294402e-05, -0.0014871024759486318, -1.0609570381348021e-05, -3.540453326422721e-05, -0.001979060238227248], "finish_reason": "stop"}, {"text": " LinearRegression().fit(X, y)", "tokens": [" Linear", "Reg", "ression", "()", ".", "fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-0.00394079415127635, -8.702239938429557e-06, -5.245071224635467e-05, -0.004198902752250433, -1.4072976112365723, -3.528532761265524e-05, -4.076874756719917e-05, -0.0007165487040765584, -0.01551592443138361, -0.0016581370728090405, -0.0003875934926327318, -0.030718136578798294], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.45700973412022e-05, -2.7417760065873154e-05, -0.0002196785935666412, -0.010067635215818882, -0.0029705704655498266, -0.00034421717282384634, -0.02497144229710102], "finish_reason": "stop"}, {"text": " model.predict(X) - y", "tokens": [" model", ".", "predict", "(", "X", ")", " -", " y", "\n"], "logprobs": [-3.318251609802246, -6.151010165922344e-05, -0.0039952946826815605, -0.00011169286881340668, -0.0028297165408730507, -0.006489038933068514, -0.006416670512408018, -0.005092862527817488, -0.010718513280153275], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " residuals", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.1944247931241989, -0.00040999590419232845, -0.00043501926120370626, -0.0054043857380747795, -4.768370445162873e-07, -2.3841855067985307e-07, -0.0013846105430275202, -0.02345099486410618, -0.0012341272085905075, -0.008410155773162842, -0.0001662831346038729, -0.005960309412330389, -2.2649508537142538e-05, -0.04996267706155777, -2.622600959512056e-06, -3.576272320060525e-06, -0.0002727136597968638, -0.0001137191939051263, -1.2320125102996826, -0.00027426297310739756, -0.028988489881157875, -1.1920928244535389e-07, -6.437280717364047e-06, 0.0, -0.0014061573892831802, -0.005613515619188547], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.030314484611153603, -7.271740287251305e-06, -1.0728830375228426e-06, -1.1920928244535389e-07, -2.7179348762729205e-05, -7.510157047363464e-06, -0.0026624491438269615, -0.0007469248375855386, -0.4485972821712494], "finish_reason": "stop"}], "metrics": {"energy": 624.1882606306071, "energy_per_token": 4.52310333790295, "time": 16.413258, "time_per_token": 0.11893665217391304}}
{"outputs": [{"text": " feature not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.18437694013118744, -0.0048569319769740105, -1.0609570381348021e-05, -0.011757953092455864, -0.24612869322299957, -0.0022857272997498512, -1.0578784942626953, -0.0030578067526221275], "finish_reason": "stop"}, {"text": " ValueError(\"Dataframe does not contain provided columns\")", "tokens": [" Value", "Error", "(", "\"", "Data", "frame", " does", " not", " contain", " provided", " columns", "\"", ")", "\n"], "logprobs": [-0.004807105287909508, -1.0251946150674485e-05, -0.13883456587791443, -0.4993942379951477, -3.666577100753784, -0.12604713439941406, -0.5863263010978699, -0.002595629310235381, -0.40159836411476135, -3.378675937652588, -0.2917676866054535, -0.4277929365634918, -0.0016432604752480984, -0.0014487734297290444], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.05284849926829338, -0.1466609090566635, -0.0023481673561036587, -0.0007332258974201977, -0.04803995415568352, -0.3470792770385742, -0.021506549790501595, -7.593343616463244e-05, 0.0, -0.012780072167515755, -1.8358061424805783e-05, -0.00010168035078095272, -0.023057563230395317, -2.5033637939486653e-05, -2.3483953555114567e-05, -0.18904933333396912], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.0001839230244513601, -0.0003091811086051166, -5.2927523938706145e-05, -7.510157047363464e-06, -0.032435908913612366, -0.00011467275908216834, -0.5401268601417542], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003423308255150914, -6.9141146923357155e-06, -5.411955135059543e-05, -0.004392380826175213, -0.31228676438331604], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.0636318115284666e-05, -2.8371408916427754e-05, -0.00022587609419133514, -0.009659101255238056, -0.0029848332051187754, -0.0003203832311555743, -0.027316864579916], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.2877521812915802, -0.0030746827833354473, -0.0032510305754840374, -7.510157047363464e-06, -0.00024339574156329036, -3.576214658096433e-05, -0.0001967951684491709, -0.0002873722987715155, -0.0272839218378067], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=lambda i: abs(residuals[i]))", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "lambda", " i", ":", " abs", "(", "res", "idual", "s", "[", "i", "]))", "\n"], "logprobs": [-0.17032873630523682, -0.0003483880718704313, -0.0003672163875307888, -0.0026314177084714174, -4.768370445162873e-07, -2.3841855067985307e-07, -0.0015561387408524752, -0.026831068098545074, -0.0014143711887300014, -0.008464649319648743, -0.00018785618885885924, -0.005171493627130985, -1.6569954823353328e-05, -0.04252053424715996, -2.3841830625315197e-06, -3.099436753473128e-06, -0.00022206225548870862, -0.00010501786891836673, -0.2443980574607849, -0.0012874656822532415, -0.5675175189971924, -0.0962364599108696, -0.0016231469344347715, -0.30346253514289856, -2.1576648578047752e-05, -0.0005289109540171921, -1.3828182090946939e-05, -2.5987286790041253e-05, -0.0005383234238252044, -8.415821503149346e-05, -0.0022048468235880136, -0.0037149244453758], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.021003447473049164, -7.271740287251305e-06, -1.9073468138230965e-06, -2.3841855067985307e-07, -2.8490614567999728e-05, -1.2159273865108844e-05, -0.00225444626994431, -0.0007314390386454761, -1.5335780382156372, -7.390948667307384e-06, -1.311301275563892e-06, -4.529942543740617e-06, -5.876845170860179e-05, -0.16009745001792908], "finish_reason": "stop"}], "metrics": {"energy": 491.7135642919544, "energy_per_token": 4.390299681178164, "time": 13.298566, "time_per_token": 0.11873719642857142}}
{"outputs": [{"text": " feature not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.18026411533355713, -0.004215284250676632, -1.1086402082582936e-05, -0.011053873226046562, -0.22074934840202332, -0.0017974901711568236, -1.1127585172653198, -0.0036362973041832447], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.004303836729377508, -1.0490362910786644e-05, -0.13890811800956726, -1.81032133102417], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.05383683368563652, -0.15087175369262695, -0.002446041675284505, -0.000578474544454366, -0.04442846029996872, -0.3323383629322052, -0.019062886014580727, -8.380061626667157e-05, 0.0, -0.010383039712905884, -1.3828182090946939e-05, -0.00011443436960689723, -0.02659730799496174, -2.312633478140924e-05, -2.7417760065873154e-05, -0.18120308220386505], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.00016473367577418685, -0.0004236992390360683, -4.708655978902243e-05, -7.748573807475623e-06, -0.034203384071588516, -0.00012599628826137632, -0.8771536946296692, -0.001321276999078691, -5.364403477869928e-06, -0.00040737437666393816, -8.344646857949556e-07, -2.8609820219571702e-05, -0.0015448314370587468, -1.1920858014491387e-05, -3.6238969187252223e-05, -0.0018549631349742413], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.004284607246518135, -9.059865078597795e-06, -4.541770613286644e-05, -0.004784919787198305, -0.2989842891693115], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.611976353568025e-05, -3.075552376685664e-05, -0.0001760566228767857, -0.010779249481856823, -0.0033301631920039654, -0.000362807244528085, -0.03317687660455704], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.29044944047927856, -0.0033269552513957024, -0.0026467551942914724, -6.556489552167477e-06, -0.00046850196667946875, -3.3854863431770355e-05, -0.00013529339048545808, -0.0003280101518612355, -0.02919737808406353], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " residuals", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.17746536433696747, -0.0004614718782249838, -0.00038652101648040116, -0.003780362894758582, -3.576278118089249e-07, -1.1920928244535389e-07, -0.001383777242153883, -0.019604258239269257, -0.0014650813536718488, -0.007612978108227253, -0.00023469554434996098, -0.00522497808560729, -1.6927575416048057e-05, -0.057993508875370026, -2.861018856492592e-06, -3.3378546504536644e-06, -0.00026770823751576245, -9.810443589231e-05, -1.2768185138702393, -0.00027783826226368546, -0.030847949907183647, -4.768370445162873e-07, -2.622600959512056e-06, 0.0, -0.0012694880133494735, -0.005871904082596302], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.02562454529106617, -6.794906312279636e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -2.932505594799295e-05, -8.106198947643861e-06, -0.0027368729934096336, -0.0007788485381752253, -0.4719522297382355], "finish_reason": "stop"}], "metrics": {"energy": 531.410978000641, "energy_per_token": 5.31410978000641, "time": 13.677567, "time_per_token": 0.13677567}}
{"outputs": [{"text": " feature not in df.columns or target not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", " or", " target", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -0.2910308539867401, -0.0030490122735500336, -0.44530364871025085, -0.00310177868232131, -0.00013147920253686607, -2.396077979938127e-05, -6.19869097135961e-05, -0.0004338276921771467, -0.40232035517692566, -0.0007908792467787862, -0.0006958208978176117], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0036826191935688257, -1.0132738680113107e-05, -0.12065444886684418, -2.1223299503326416], "finish_reason": "stop"}, {"text": " df[[feature]].values", "tokens": [" df", "[[", "feature", "]]", ".", "values", "\n"], "logprobs": [-0.05301040783524513, -2.280183792114258, -0.0019267105963081121, -0.001821288955397904, -0.999875009059906, -0.45345792174339294, -0.20544442534446716], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.00014304091746453196, -0.0005128260818310082, -5.125868119648658e-05, -7.271740287251305e-06, -0.036266688257455826, -0.00011801023356383666, -0.8181905746459961, -0.0018277144990861416, -5.602820692729438e-06, -0.0005427317810244858, -5.960462772236497e-07, -3.707340147229843e-05, -0.0013660395052284002, -1.1444026313256472e-05, -3.85038583772257e-05, -0.0017265664646402001], "finish_reason": "stop"}, {"text": " LinearRegression().fit(X, y)", "tokens": [" Linear", "Reg", "ression", "()", ".", "fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-0.0035495867487043142, -8.4638240878121e-06, -5.113947918289341e-05, -0.004665441811084747, -1.4986598491668701, -3.766942609217949e-05, -3.71926071238704e-05, -0.0006210067658685148, -0.012368524447083473, -0.0017160940915346146, -0.00035637227119877934, -0.031138842925429344], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.361645576660521e-05, -2.8490614567999728e-05, -0.00017772526189219207, -0.00975248496979475, -0.003444335889071226, -0.000291662581730634, -0.03061038814485073], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.27088412642478943, -0.0026751705445349216, -0.002631774405017495, -5.722029527532868e-06, -0.0004923323867842555, -3.755022044060752e-05, -0.0002150304353563115, -0.0003034608089365065, -0.03300134837627411], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(X)), residuals.take)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "X", "))", ",", " residuals", ".", "take", ")", "\n"], "logprobs": [-0.2029406726360321, -0.00036030475166626275, -0.00018475732940714806, -0.0029257608111947775, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0010266992030665278, -0.020679697394371033, -0.0014348459662869573, -0.006948829162865877, -7.009260298218578e-05, -0.0036545887123793364, -2.0265373677830212e-05, -2.9346842765808105, -0.00013267113536130637, -8.463501580990851e-05, -1.296665072441101, -0.0006594866863451898, -2.6692299842834473, -0.00036995718255639076, -0.013335087336599827], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.027842309325933456, -9.298280929215252e-06, -1.1920922133867862e-06, -1.1920928244535389e-07, -3.4689302992774174e-05, -7.271740287251305e-06, -0.0026377192698419094, -0.0007744412287138402, -0.5336580276489258], "finish_reason": "stop"}], "metrics": {"energy": 504.01708972167955, "energy_per_token": 5.040170897216796, "time": 13.462548, "time_per_token": 0.13462548}}
{"outputs": [{"text": " feature not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.18026411533355713, -0.004215284250676632, -1.1086402082582936e-05, -0.011053873226046562, -0.22074934840202332, -0.0017974901711568236, -1.1127585172653198, -0.0036362973041832447], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.004303836729377508, -1.0490362910786644e-05, -0.13890811800956726, -1.81032133102417], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.05383683368563652, -0.15087175369262695, -0.002446041675284505, -0.000578474544454366, -0.04442846029996872, -0.3323383629322052, -0.019062886014580727, -8.380061626667157e-05, 0.0, -0.010383039712905884, -1.3828182090946939e-05, -0.00011443436960689723, -0.02659730799496174, -2.312633478140924e-05, -2.7417760065873154e-05, -0.18120308220386505], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.00016473367577418685, -0.0004236992390360683, -4.708655978902243e-05, -7.748573807475623e-06, -0.034203384071588516, -0.00012599628826137632, -0.5417101979255676], "finish_reason": "stop"}, {"text": " LinearRegression().fit(X, y)", "tokens": [" Linear", "Reg", "ression", "()", ".", "fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-0.004284607246518135, -9.059865078597795e-06, -4.541770613286644e-05, -0.004784919787198305, -1.396117925643921, -3.135155202471651e-05, -4.565611743601039e-05, -0.0007073761080391705, -0.013521749526262283, -0.0015691122971475124, -0.0004755319678224623, -0.03479073569178581], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.611976353568025e-05, -3.075552376685664e-05, -0.0001760566228767857, -0.010779249481856823, -0.0033301631920039654, -0.000362807244528085, -0.03317687660455704], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.29044944047927856, -0.0033269552513957024, -0.0026467551942914724, -6.556489552167477e-06, -0.00046850196667946875, -3.3854863431770355e-05, -0.00013529339048545808, -0.0003280101518612355, -0.02919737808406353], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " residuals", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.17746536433696747, -0.0004614718782249838, -0.00038652101648040116, -0.003780362894758582, -3.576278118089249e-07, -1.1920928244535389e-07, -0.001383777242153883, -0.019604258239269257, -0.0014650813536718488, -0.007612978108227253, -0.00023469554434996098, -0.00522497808560729, -1.6927575416048057e-05, -0.057993508875370026, -2.861018856492592e-06, -3.3378546504536644e-06, -0.00026770823751576245, -9.810443589231e-05, -1.2768185138702393, -0.00027783826226368546, -0.030847949907183647, -4.768370445162873e-07, -2.622600959512056e-06, 0.0, -0.0012694880133494735, -0.005871904082596302], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.02562454529106617, -6.794906312279636e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -2.932505594799295e-05, -8.106198947643861e-06, -0.0027368729934096336, -0.0007788485381752253, -0.4719522297382355], "finish_reason": "stop"}], "metrics": {"energy": 480.96048245430006, "energy_per_token": 4.907760025043878, "time": 12.603393, "time_per_token": 0.12860605102040817}}
{"outputs": [{"text": " feature not in df.columns or target not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", " or", " target", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.2026306837797165, -0.003833684604614973, -8.940656698541716e-06, -0.012805494479835033, -0.23743823170661926, -0.0019839382730424404, -0.4447970390319824, -0.0024177387822419405, -0.00011455356434453279, -3.0278701160568744e-05, -6.878139538457617e-05, -0.00033504117163829505, -0.2626647651195526, -0.0007663412252441049, -0.0007402540650218725], "finish_reason": "stop"}, {"text": " ValueError(f\"One or both columns are not in the provided DataFrame: {feature}, {target}\")", "tokens": [" Value", "Error", "(", "f", "\"", "One", " or", " both", " columns", " are", " not", " in", " the", " provided", " Data", "Frame", ":", " {", "feature", "}", ",", " {", "target", "}\"", ")", "\n"], "logprobs": [-0.004280453082174063, -9.536697689327411e-06, -0.15199817717075348, -1.2851331233978271, -0.1340298056602478, -3.4883298873901367, -0.3764185607433319, -0.7871150970458984, -1.1683249473571777, -2.6276307106018066, -0.0909166932106018, -0.14318141341209412, -0.08765144646167755, -0.7791776657104492, -0.21760858595371246, -0.0065098837949335575, -1.2671313285827637, -0.254463255405426, -0.030738597735762596, -0.09601306915283203, -0.10351081192493439, -0.005934001877903938, -0.001210909802466631, -0.033582258969545364, -0.0007600279641337693, -0.0034512262791395187], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.0432560108602047, -0.12816773355007172, -0.002964984392747283, -0.0005880056996829808, -0.04409053549170494, -0.39893996715545654, -0.021533500403165817, -0.0001003691868390888, 0.0, -0.009389881044626236, -1.5735502529423684e-05, -0.00012337400403339416, -0.01628994010388851, -2.634490556374658e-05, -2.682172998902388e-05, -0.18140266835689545], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.00013219437096267939, -0.0005285535007715225, -4.017272294731811e-05, -8.22540732769994e-06, -0.025177566334605217, -0.00011062010162277147, -0.8890509009361267, -0.001949435449205339, -6.198863957251888e-06, -0.0006355411605909467, -7.152555099310121e-07, -5.280832192511298e-05, -0.0012847273610532284, -1.07287787614041e-05, -3.3854863431770355e-05, -0.0020585316233336926], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0033149549271911383, -8.22540732769994e-06, -5.6503606174374e-05, -0.004607062321156263, -0.28808900713920593], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-2.6464111215318553e-05, -3.0397906812140718e-05, -0.00020776021119672805, -0.010188475251197815, -0.002725816797465086, -0.0002516191452741623, -0.030523672699928284], "finish_reason": "stop"}, {"text": " np.abs(model.predict(X) - y)", "tokens": [" np", ".", "abs", "(", "model", ".", "predict", "(", "X", ")", " -", " y", ")", "\n"], "logprobs": [-2.8363468647003174, -1.9788545614574105e-05, -0.04413079842925072, -0.0020905323326587677, -0.8724631667137146, -1.7165990357170813e-05, -0.002348880982026458, -8.225102646974847e-05, -0.000490068516228348, -0.005936846137046814, -0.00426241010427475, -0.004653220530599356, -0.0010594476480036974, -0.03708891570568085], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=lambda i: abs(residuals[i]))", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "lambda", " i", ":", " abs", "(", "res", "idual", "s", "[", "i", "]))", "\n"], "logprobs": [-0.1866297721862793, -0.0004109491710551083, -0.00027843413408845663, -0.0036462745629251003, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.0018830440239980817, -0.02409752830862999, -0.0014775798190385103, -0.007045780774205923, -9.154854342341423e-05, -0.004806156270205975, -2.455681169521995e-05, -0.0512261725962162, -2.3841830625315197e-06, -3.3378546504536644e-06, -0.0002169373765354976, -0.00012492353562265635, -0.4655308425426483, -0.0013948483392596245, -0.47489282488822937, -0.10689296573400497, -0.00156816013623029, -0.36042535305023193, -2.038458114839159e-05, -0.000559173640795052, -1.7762025890988298e-05, -2.0265373677830212e-05, -0.0004786299541592598, -9.60780744208023e-05, -0.002921600826084614, -0.004087071865797043], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.029673347249627113, -7.986990567587782e-06, -1.0728830375228426e-06, -1.1920928244535389e-07, -2.52720492426306e-05, -7.629365427419543e-06, -0.002607043832540512, -0.0007602662080898881, -1.4961388111114502, -6.437280717364047e-06, -9.536738616588991e-07, -5.245195097813848e-06, -0.0001262346631847322, -1.8187217712402344, -0.001934444298967719], "finish_reason": "stop"}], "metrics": {"energy": 620.8671085643767, "energy_per_token": 4.2525144422217585, "time": 15.756056, "time_per_token": 0.10791819178082192}}
{"outputs": [{"text": " feature not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -0.2910308539867401, -0.0030490122735500336, -1.0574328899383545, -0.0036751364823430777], "finish_reason": "stop"}, {"text": " ValueError('One or both provided columns not in DataFrame.')", "tokens": [" Value", "Error", "('", "One", " or", " both", " provided", " columns", " not", " in", " Data", "Frame", ".", "')", "\n"], "logprobs": [-0.004912686999887228, -1.2755313036905136e-05, -2.119446039199829, -3.002629280090332, -0.3448885679244995, -0.8984388113021851, -3.0549190044403076, -0.3063350021839142, -1.7599141597747803, -0.24435389041900635, -1.5225175619125366, -0.01466601062566042, -1.6329309940338135, -0.021456146612763405, -0.001927424455061555], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.04824887588620186, -0.12939709424972534, -0.0023764721117913723, -0.0006671110168099403, -0.039574459195137024, -0.38009241223335266, -0.022696955129504204, -0.0001045410826918669, 0.0, -0.01100989617407322, -1.7762025890988298e-05, -0.000129691296024248, -0.027795353904366493, -2.372236667724792e-05, -2.455681169521995e-05, -0.18076659739017487], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.00014923889830242842, -0.00038842763751745224, -4.3748852476710454e-05, -7.152531907195225e-06, -0.026240646839141846, -0.00010978573118336499, -0.5664229393005371], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003653994994238019, -7.629365427419543e-06, -4.9232225137529895e-05, -0.00507151335477829, -0.32529860734939575], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-2.8967437174287625e-05, -3.1709168979432434e-05, -0.0002277830062666908, -0.009222171269357204, -0.0028224652633070946, -0.0003407612966839224, -0.03754977881908417], "finish_reason": "stop"}, {"text": " abs(model.predict(X) - y)", "tokens": [" abs", "(", "model", ".", "predict", "(", "X", ")", " -", " y", ")", "\n"], "logprobs": [-2.6523995399475098, -0.0024813597556203604, -0.6240922212600708, -1.764281842042692e-05, -0.007357879541814327, -0.00010632903286023065, -0.0005810956354252994, -0.00708981417119503, -0.0041647134348750114, -0.0035693051759153605, -0.001142325927503407, -0.05440102517604828], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(X)), residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "X", "))", ",", " residuals", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.20208540558815002, -0.0003738896339200437, -0.000339569611242041, -0.0038923469837754965, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0007898071780800819, -0.017700916156172752, -0.001026341924443841, -0.007230069488286972, -0.00014435203047469258, -0.005652989260852337, -2.2053474822314456e-05, -2.987640857696533, -0.00012170527770649642, -9.226373367710039e-05, -1.3778594732284546, -0.0006803343421779573, -0.12600426375865936, -5.960462772236497e-07, -2.264974000354414e-06, -5.960462772236497e-07, -0.001437822007574141, -0.005769504699856043], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.026452893391251564, -6.079655122448457e-06, -1.4305104514278355e-06, -2.3841855067985307e-07, -2.8013790142722428e-05, -5.722029527532868e-06, -0.0026021688245236874, -0.0008693729760125279, -0.6103858947753906], "finish_reason": "stop"}], "metrics": {"energy": 582.7991298999783, "energy_per_token": 5.65824397961144, "time": 15.539932, "time_per_token": 0.15087312621359222}}
{"outputs": [{"text": " feature not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -0.2910308539867401, -0.0030490122735500336, -1.0574328899383545, -0.0036751364823430777], "finish_reason": "stop"}, {"text": " ValueError(\"Specified columns are not in the provided DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Spec", "ified", " columns", " are", " not", " in", " the", " provided", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.004912686999887228, -1.2755313036905136e-05, -0.13051635026931763, -0.5572874546051025, -1.0864927768707275, -0.0008361419313587248, -0.10640393197536469, -0.8563819527626038, -0.0133739048615098, -0.05362173169851303, -0.048532821238040924, -0.24884004890918732, -0.08431074023246765, -0.003494824282824993, -0.4786784052848816, -0.0037047103978693485, -0.0009380945703014731, -0.0012006701435893774], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.04800621047616005, -0.12063268572092056, -0.0024528198409825563, -0.0006220789509825408, -0.05064272880554199, -0.40206360816955566, -0.01889117807149887, -8.308542601298541e-05, 0.0, -0.009291856549680233, -1.3470558769768104e-05, -0.00012730741582345217, -0.024474266916513443, -2.4318398573086597e-05, -2.6940935640595853e-05, -0.19757825136184692], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.0001892864383989945, -0.00041797960875555873, -5.94836674281396e-05, -6.6756979322235566e-06, -0.03799309954047203, -0.00014244495832826942, -0.4148935377597809], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0038117149379104376, -7.152531907195225e-06, -6.890059739816934e-05, -0.003739984007552266, -0.30633726716041565], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.40932747349143e-05, -3.0636318115284666e-05, -0.0002181292074965313, -0.010692094452679157, -0.0029179160483181477, -0.0003398079425096512, -0.037670671939849854], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.3013990819454193, -0.0029763944912701845, -0.003466432448476553, -5.8412379075889476e-06, -0.0003741279651876539, -3.838465272565372e-05, -0.00017975145601667464, -0.0002919009421020746, -0.030500778928399086], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=lambda i: abs(residuals[i]))", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "lambda", " i", ":", " abs", "(", "res", "idual", "s", "[", "i", "]))", "\n"], "logprobs": [-0.14879880845546722, -0.00043930893298238516, -0.000327652640407905, -0.003869784763082862, -3.576278118089249e-07, -2.3841855067985307e-07, -0.001176856574602425, -0.029835695400834084, -0.0011177966371178627, -0.00672032218426466, -0.00013136000779923052, -0.00624218350276351, -2.288792165927589e-05, -0.055657461285591125, -2.7418097943154862e-06, -3.576272320060525e-06, -0.0002727136597968638, -0.00010656742961145937, -0.4454934895038605, -0.001444011926651001, -0.44855231046676636, -0.12603379786014557, -0.0017670269589871168, -0.4335532486438751, -2.1457441107486375e-05, -0.0005310555570758879, -1.2993727978027891e-05, -1.966933996300213e-05, -0.0006031363154761493, -8.761498611420393e-05, -0.0024159548338502645, -0.003361648181453347], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.03604743257164955, -6.318072337307967e-06, -1.5497195136049413e-06, -1.1920928244535389e-07, -2.7417760065873154e-05, -8.34461570775602e-06, -0.0023254514671862125, -0.0009177286992780864, -1.4399919509887695, -7.271740287251305e-06, -1.1920922133867862e-06, -7.986990567587782e-06, -7.390703103737906e-05, -0.15934358537197113], "finish_reason": "stop"}], "metrics": {"energy": 522.2921761703489, "energy_per_token": 4.502518760089214, "time": 13.872955, "time_per_token": 0.11959443965517241}}
{"outputs": [{"text": " feature not in df.columns or target not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", " or", " target", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.18437694013118744, -0.0048569319769740105, -1.0609570381348021e-05, -0.011757953092455864, -0.24612869322299957, -0.0022857272997498512, -0.44867515563964844, -0.002064598724246025, -9.476689592702314e-05, -3.504691630951129e-05, -8.570780482841656e-05, -0.00041500062798149884, -0.41340306401252747, -0.0008353081648238003, -0.0007672941428609192], "finish_reason": "stop"}, {"text": " ValueError(\"Columns are not in the provided DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Columns", " are", " not", " in", " the", " provided", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.0048250192776322365, -1.07287787614041e-05, -0.15078265964984894, -0.5088889002799988, -2.5571537017822266, -2.6389992237091064, -0.06975169479846954, -0.12650135159492493, -0.07021397352218628, -0.220865398645401, -0.09571618586778641, -0.005057162139564753, -0.4384441673755646, -0.005365495104342699, -0.0007783720502629876, -0.0009528625523671508], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.05309575796127319, -0.12924982607364655, -0.002813787665218115, -0.0007415643776766956, -0.049019429832696915, -0.46898603439331055, -0.021314021199941635, -9.214453893946484e-05, 0.0, -0.011385703459382057, -2.038458114839159e-05, -0.00010489867418073118, -0.02133479341864586, -2.8132995794294402e-05, -2.47952248173533e-05, -0.16022084653377533], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.00018702188390307128, -0.0005485698929987848, -6.961580220377073e-05, -7.510157047363464e-06, -0.05014795437455177, -0.00012814177898690104, -0.8382382988929749, -0.0009328543092124164, -4.291525328881107e-06, -0.0005721600609831512, -3.576278118089249e-07, -3.3854863431770355e-05, -0.001564113306812942, -1.3112935448589269e-05, -3.540453326422721e-05, -0.0017548889154568315], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0032261963933706284, -8.583032467868179e-06, -5.2689116273541003e-05, -0.004276060964912176, -0.32537153363227844], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.71926071238704e-05, -2.9801878554280847e-05, -0.0002256377338198945, -0.008414293639361858, -0.0023460264783352613, -0.00038378025055862963, -0.028131527826189995], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.38360583782196045, -0.0026586444582790136, -0.0030355823691934347, -6.318072337307967e-06, -0.00029988560709170997, -3.4689302992774174e-05, -0.00022706791060045362, -0.0002985746832564473, -0.03236978128552437], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=lambda i: abs(residuals[i]))", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "lambda", " i", ":", " abs", "(", "res", "idual", "s", "[", "i", "]))", "\n"], "logprobs": [-0.1642845720052719, -0.0004316828562878072, -0.00023314618738368154, -0.0048655918799340725, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.0010278901318088174, -0.02888854779303074, -0.0014262752374634147, -0.00695226201787591, -0.00013791563105769455, -0.005235414020717144, -2.0503786799963564e-05, -0.06249387189745903, -2.7418097943154862e-06, -3.4570634852570947e-06, -0.00024196557933464646, -9.643566590966657e-05, -0.4194931983947754, -0.0013615157222375274, -0.39548495411872864, -0.0977756604552269, -0.0014552014181390405, -0.435447096824646, -2.074220174108632e-05, -0.0005984899471513927, -1.2993727978027891e-05, -1.8000440832111053e-05, -0.0005318895564414561, -0.00011944057769142091, -0.0029397865291684866, -0.003405606606975198], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.027567850425839424, -6.556489552167477e-06, -1.1920922133867862e-06, -2.3841855067985307e-07, -1.966933996300213e-05, -8.106198947643861e-06, -0.0023947865702211857, -0.0008156548719853163, -0.47787460684776306], "finish_reason": "stop"}], "metrics": {"energy": 533.4196254730223, "energy_per_token": 4.267357003784178, "time": 13.458977, "time_per_token": 0.107671816}}
{"outputs": [{"text": " feature not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -0.2910308539867401, -0.0030490122735500336, -1.0574328899383545, -0.0036751364823430777], "finish_reason": "stop"}, {"text": " ValueError('Specified columns not in provided dataframe')", "tokens": [" Value", "Error", "('", "Spec", "ified", " columns", " not", " in", " provided", " data", "frame", "')", "\n"], "logprobs": [-0.004912686999887228, -1.2755313036905136e-05, -2.119446039199829, -1.482497215270996, -0.0010244365548714995, -0.09928388893604279, -1.1720929145812988, -0.2722376585006714, -1.9435195922851562, -1.9087789058685303, -0.030372075736522675, -0.3775821030139923, -0.002011658623814583], "finish_reason": "stop"}, {"text": " df[feature].to_numpy().reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.04824887588620186, -0.12939709424972534, -0.0023764721117913723, -0.0006671110168099403, -0.039574459195137024, -1.196826696395874, -9.059865078597795e-06, -0.11140576004981995, -0.011415757238864899, -0.0766950324177742, -0.0006021831650286913, 0.0, -0.01708761602640152, -3.182837463100441e-05, -0.0001294529065489769, -0.04112678021192551, -1.4543427823809907e-05, -4.458328112377785e-05, -0.12350373715162277], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.00013672371278516948, -0.0005071069463156164, -4.6967357775429264e-05, -8.34461570775602e-06, -0.04087356850504875, -0.00011014331539627165, -0.8992568850517273, -0.0018458010163158178, -7.271740287251305e-06, -0.000542493537068367, -5.960462772236497e-07, -2.95634672511369e-05, -0.001508051878772676, -1.1324817933200393e-05, -3.242440288886428e-05, -0.0020136809907853603], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0036722859367728233, -8.821448318485636e-06, -5.8887653722194955e-05, -0.0053735580295324326, -0.33026090264320374], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.0636318115284666e-05, -3.349725011503324e-05, -0.00020644917094614357, -0.009429678320884705, -0.0026749325916171074, -0.0002554328821133822, -0.02986566163599491], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.26407259702682495, -0.00334442057646811, -0.003982233814895153, -6.198863957251888e-06, -0.00032669928623363376, -2.8967437174287625e-05, -0.00014411364099942148, -0.0003057250869460404, -0.022513629868626595], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "res", "idual", "s", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.185822993516922, -0.00043275527423247695, -0.00030882356804795563, -0.003366638207808137, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0018458010163158178, -0.02735201083123684, -0.0010557560017332435, -0.00737681332975626, -0.00011407678539399058, -0.0037180122453719378, -2.0503786799963564e-05, -0.05260864272713661, -2.50339189733495e-06, -2.861018856492592e-06, -0.0002562671434134245, -9.917721035890281e-05, -0.42456918954849243, -0.001256510615348816, -1.0795257091522217, -4.434487345861271e-05, -1.4662635294371285e-05, -1.537788011773955e-05, -0.009550949558615685, -2.0265558760002023e-06, -3.480850500636734e-05, -4.768370445162873e-07, -0.0005457103834487498, -0.0062246499583125114], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0316857285797596, -6.079655122448457e-06, -1.4305104514278355e-06, -1.1920928244535389e-07, -2.038458114839159e-05, -7.390948667307384e-06, -0.002859196625649929, -0.0007944526732899249, -1.5509777069091797, -7.152531907195225e-06, -1.0728830375228426e-06, -5.960446742392378e-06, -8.535020606359467e-05, -0.16414183378219604], "finish_reason": "stop"}], "metrics": {"energy": 551.6813716306684, "energy_per_token": 4.559350178765855, "time": 14.52272, "time_per_token": 0.12002247933884297}}
{"outputs": [{"text": " feature not in df or target not in df:", "tokens": [" feature", " not", " in", " df", " or", " target", " not", " in", " df", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -1.9007682800292969, -0.0026006230618804693, -0.00014673586701974273, -2.4676019165781327e-05, -3.40932747349143e-05, -0.0017552459612488747, -0.0025983641389757395], "finish_reason": "stop"}, {"text": " ValueError(\"Specified columns are not in the provided DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Spec", "ified", " columns", " are", " not", " in", " the", " provided", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005381027702242136, -1.6093124941107817e-05, -0.10820887237787247, -0.5251814126968384, -1.218854308128357, -0.0008505540899932384, -0.11180122196674347, -0.9407681226730347, -0.011428839527070522, -0.04566240310668945, -0.04863036423921585, -0.2129107117652893, -0.08497988432645798, -0.0032478224020451307, -0.4814944863319397, -0.0035764321219176054, -0.0009326160652562976, -0.0013993718894198537], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.0531095489859581, -0.13318392634391785, -0.0023700501769781113, -0.0006123098428361118, -0.04927421733736992, -0.38901016116142273, -0.02168574370443821, -8.809178689261898e-05, 0.0, -0.011773858219385147, -1.597391747054644e-05, -0.00010680581908673048, -0.025447452440857887, -3.015949550899677e-05, -2.539125671319198e-05, -0.15861357748508453], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.00012182447244413197, -0.00044228785554878414, -4.410646579344757e-05, -7.271740287251305e-06, -0.03205592557787895, -0.00012313561455812305, -0.5425521731376648], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003676443127915263, -7.510157047363464e-06, -4.649054244509898e-05, -0.0044469754211604595, -0.27404889464378357], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.1470757676288486e-05, -3.0040289857424796e-05, -0.00019965562387369573, -0.009876432828605175, -0.0038072022143751383, -0.00033742457162588835, -0.035084281116724014], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.2745312452316284, -0.002732593100517988, -0.002305232686921954, -6.437280717364047e-06, -0.00039986721822060645, -3.969590397900902e-05, -0.0001902399235405028, -0.0003321811091154814, -0.03059963509440422], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "res", "idual", "s", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.17957481741905212, -0.00040522945346310735, -0.00029237763374112546, -0.0036387916188687086, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0015288818394765258, -0.019365880638360977, -0.0012467476772144437, -0.006868324708193541, -0.00012361239350866526, -0.005037354305386543, -2.3364747903542593e-05, -0.0694989562034607, -2.9802276912960224e-06, -3.4570634852570947e-06, -0.00025781645672395825, -0.00010907054820563644, -0.3294719159603119, -0.0010887415846809745, -1.3041216135025024, -5.769562994828448e-05, -1.1920858014491387e-05, -2.0861407392658293e-05, -0.010661075823009014, -1.6689286894688848e-06, -1.9430925021879375e-05, -4.768370445162873e-07, -0.000510204816237092, -0.004915178287774324], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.03476310148835182, -7.629365427419543e-06, -1.4305104514278355e-06, -1.1920928244535389e-07, -2.4676019165781327e-05, -8.106198947643861e-06, -0.002853609621524811, -0.0007398966699838638, -0.5790899395942688], "finish_reason": "stop"}], "metrics": {"energy": 523.2716824169161, "energy_per_token": 4.672068593008179, "time": 13.669726, "time_per_token": 0.12205112500000001}}
{"outputs": [{"text": " feature not in df.columns or target not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", " or", " target", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -0.2910308539867401, -0.0030490122735500336, -0.44530364871025085, -0.00310177868232131, -0.00013147920253686607, -2.396077979938127e-05, -6.19869097135961e-05, -0.0004338276921771467, -0.40232035517692566, -0.0007908792467787862, -0.0006958208978176117], "finish_reason": "stop"}, {"text": " ValueError(f\"Both columns {feature} and {target} must exist in the DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Both", " columns", " {", "feature", "}", " and", " {", "target", "}", " must", " exist", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.0036826191935688257, -1.0132738680113107e-05, -0.12065444886684418, -1.3284494876861572, -0.1219155490398407, -2.9638469219207764, -0.6486761569976807, -0.8329196572303772, -0.004410777240991592, -0.030040472745895386, -0.017768841236829758, -0.0020722122862935066, -0.0005583396414294839, -0.0036937836557626724, -0.17886871099472046, -0.5668859481811523, -0.07431544363498688, -0.10073152929544449, -0.795066773891449, -0.005293519701808691, -0.516112744808197, -0.002290722681209445, -0.0009011736838147044, -0.001142564113251865], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.049536317586898804, -0.14511406421661377, -0.002771110739558935, -0.0006009918288327754, -0.04764118790626526, -0.3570857644081116, -0.0201481394469738, -9.667406266089529e-05, 0.0, -0.009543392807245255, -1.7881233361549675e-05, -0.00012432756193447858, -0.022303691133856773, -2.5629668016335927e-05, -2.539125671319198e-05, -0.15546146035194397], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.0001282609737245366, -0.00046004203613847494, -4.672895011026412e-05, -5.960446742392378e-06, -0.03463540971279144, -0.00016223068814724684, -0.5116413235664368], "finish_reason": "stop"}, {"text": " LinearRegression().fit(X, y)", "tokens": [" Linear", "Reg", "ression", "()", ".", "fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-0.0033326582051813602, -1.0609570381348021e-05, -4.2914423829643056e-05, -0.004465370438992977, -1.2665377855300903, -3.45700973412022e-05, -4.827859811484814e-05, -0.0006152882124297321, -0.012788663618266582, -0.0019766809418797493, -0.00036530973738990724, -0.030379129573702812], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.313963316031732e-05, -3.421248038648628e-05, -0.00019214690837543458, -0.008646786212921143, -0.00275113875977695, -0.00028606137493625283, -0.03458980843424797], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.30287614464759827, -0.0030050380155444145, -0.003510861424729228, -5.960446742392378e-06, -0.0004567056894302368, -4.2199197196168825e-05, -0.00025507534155622125, -0.00028832571115344763, -0.02716408483684063], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "res", "idual", "s", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.1486000120639801, -0.000390215078368783, -0.00025054652360267937, -0.004074486903846264, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0015999386087059975, -0.024082284420728683, -0.0012903229799121618, -0.007813130505383015, -0.00010096516780322418, -0.005915633402764797, -2.4914430468925275e-05, -0.057174455374479294, -3.099436753473128e-06, -3.3378546504536644e-06, -0.00019762947340495884, -0.00011896379146492109, -0.3594847619533539, -0.0013998481445014477, -0.9019626975059509, -5.066266385256313e-05, -1.3947389561508317e-05, -1.490105023549404e-05, -0.010202399455010891, -2.0265558760002023e-06, -1.7165990357170813e-05, -4.768370445162873e-07, -0.0005135409301146865, -0.005585657898336649], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.029511552304029465, -7.390948667307384e-06, -1.4305104514278355e-06, -1.1920928244535389e-07, -2.074220174108632e-05, -6.556489552167477e-06, -0.002302616136148572, -0.0006609162664972246, -1.5630580186843872, -5.125986263010418e-06, -9.536738616588991e-07, -4.6491513785440475e-06, -8.189342770492658e-05, -0.17558829486370087], "finish_reason": "stop"}], "metrics": {"energy": 556.3285408048631, "energy_per_token": 4.151705528394501, "time": 14.925856, "time_per_token": 0.11138698507462687}}
{"outputs": [{"text": " feature not in df.columns or target not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", " or", " target", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.18437694013118744, -0.0048569319769740105, -1.0609570381348021e-05, -0.011757953092455864, -0.24612869322299957, -0.0022857272997498512, -0.44867515563964844, -0.002064598724246025, -9.476689592702314e-05, -3.504691630951129e-05, -8.570780482841656e-05, -0.00041500062798149884, -0.41340306401252747, -0.0008353081648238003, -0.0007672941428609192], "finish_reason": "stop"}, {"text": " ValueError(\"Specified columns not in the provided DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Spec", "ified", " columns", " not", " in", " the", " provided", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.0048250192776322365, -1.07287787614041e-05, -0.15078265964984894, -0.5088889002799988, -1.1592313051223755, -0.0007513322634622455, -0.10423500835895538, -0.9342474937438965, -0.3958015441894531, -0.6558259129524231, -0.530296266078949, -0.11125058680772781, -0.0044094715267419815, -0.7640734910964966, -0.003513593692332506, -0.0007363230688497424, -0.0008754473528824747], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.05309575796127319, -0.12924982607364655, -0.002813787665218115, -0.0007415643776766956, -0.049019429832696915, -0.46898603439331055, -0.021314021199941635, -9.214453893946484e-05, 0.0, -0.011385703459382057, -2.038458114839159e-05, -0.00010489867418073118, -0.02133479341864586, -2.8132995794294402e-05, -2.47952248173533e-05, -0.16022084653377533], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.00018702188390307128, -0.0005485698929987848, -6.961580220377073e-05, -7.510157047363464e-06, -0.05014795437455177, -0.00012814177898690104, -0.5701814293861389], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0032261963933706284, -8.583032467868179e-06, -5.2689116273541003e-05, -0.004276060964912176, -0.32537153363227844], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.71926071238704e-05, -2.9801878554280847e-05, -0.0002256377338198945, -0.008414293639361858, -0.0023460264783352613, -0.00038378025055862963, -0.028131527826189995], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.38360583782196045, -0.0026586444582790136, -0.0030355823691934347, -6.318072337307967e-06, -0.00029988560709170997, -3.4689302992774174e-05, -0.00022706791060045362, -0.0002985746832564473, -0.03236978128552437], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " residuals", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.1642845720052719, -0.0004316828562878072, -0.00023314618738368154, -0.0048655918799340725, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.0010278901318088174, -0.02888854779303074, -0.0014262752374634147, -0.00695226201787591, -0.00013791563105769455, -0.005235414020717144, -2.0503786799963564e-05, -0.06249387189745903, -2.7418097943154862e-06, -3.4570634852570947e-06, -0.00024196557933464646, -9.643566590966657e-05, -1.089815616607666, -0.00031704644788987935, -0.020908305421471596, -1.1920928244535389e-07, -3.3378546504536644e-06, 0.0, -0.0012016226537525654, -0.0061298697255551815], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.027005016803741455, -7.986990567587782e-06, -1.1920922133867862e-06, -2.3841855067985307e-07, -2.2291887944447808e-05, -9.894321920000948e-06, -0.002277282765135169, -0.0009232072625309229, -0.5251284241676331], "finish_reason": "stop"}], "metrics": {"energy": 492.8773954524993, "energy_per_token": 4.440336895968462, "time": 13.040884, "time_per_token": 0.11748544144144145}}
{"outputs": [{"text": " feature not in df:", "tokens": [" feature", " not", " in", " df", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -2.2857513427734375, -0.006788643077015877], "finish_reason": "stop"}, {"text": " ValueError(\"Specified columns not found in the DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Spec", "ified", " columns", " not", " found", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005381027702242136, -1.6093124941107817e-05, -0.10820887237787247, -0.5251814126968384, -1.218854308128357, -0.0008505540899932384, -0.11180122196674347, -0.9896458387374878, -1.367348551750183, -0.021720506250858307, -0.3899107277393341, -0.6448807120323181, -0.00482430774718523, -0.6401079893112183, -0.0033034298103302717, -0.0006206493126228452, -0.000803505361545831], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.0531095489859581, -0.13318392634391785, -0.0023700501769781113, -0.0006123098428361118, -0.04927421733736992, -0.38901016116142273, -0.02168574370443821, -8.809178689261898e-05, 0.0, -0.011773858219385147, -1.597391747054644e-05, -0.00010680581908673048, -0.025447452440857887, -3.015949550899677e-05, -2.539125671319198e-05, -0.15861357748508453], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.00012182447244413197, -0.00044228785554878414, -4.410646579344757e-05, -7.271740287251305e-06, -0.03205592557787895, -0.00012313561455812305, -0.8755695223808289, -0.0010480155469849706, -3.814689989667386e-06, -0.0006660388899035752, -3.576278118089249e-07, -4.410646579344757e-05, -0.0014980534324422479, -9.417489309271332e-06, -3.2066785934148356e-05, -0.0018285474507138133], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003676443127915263, -7.510157047363464e-06, -4.649054244509898e-05, -0.0044469754211604595, -0.27404889464378357], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.1470757676288486e-05, -3.0040289857424796e-05, -0.00019965562387369573, -0.009876432828605175, -0.0038072022143751383, -0.00033742457162588835, -0.035084281116724014], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.2745312452316284, -0.002732593100517988, -0.002305232686921954, -6.437280717364047e-06, -0.00039986721822060645, -3.969590397900902e-05, -0.0001902399235405028, -0.0003321811091154814, -0.03059963509440422], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " residuals", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.17957481741905212, -0.00040522945346310735, -0.00029237763374112546, -0.0036387916188687086, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0015288818394765258, -0.019365880638360977, -0.0012467476772144437, -0.006868324708193541, -0.00012361239350866526, -0.005037354305386543, -2.3364747903542593e-05, -0.0694989562034607, -2.9802276912960224e-06, -3.4570634852570947e-06, -0.00025781645672395825, -0.00010907054820563644, -1.2942336797714233, -0.0003781795676331967, -0.03310111165046692, 0.0, -5.245195097813848e-06, 0.0, -0.00135925377253443, -0.004890148062258959], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.028222622349858284, -6.198863957251888e-06, -1.0728830375228426e-06, -1.1920928244535389e-07, -2.1934269170742482e-05, -8.34461570775602e-06, -0.0026265429332852364, -0.0008055302896536887, -0.5512396693229675], "finish_reason": "stop"}], "metrics": {"energy": 527.5895054912568, "energy_per_token": 4.75305860802934, "time": 14.291459, "time_per_token": 0.1287518828828829}}
{"outputs": [{"text": " not {feature, target}.issubset(df.columns):", "tokens": [" not", " {", "feature", ",", " target", "}", ".", "iss", "ub", "set", "(", "df", ".", "columns", "):", "\n"], "logprobs": [-2.1681172847747803, -2.492767333984375, -0.011389004066586494, -0.0027285509277135134, -0.0011226787464693189, -0.0016446886584162712, -0.12710663676261902, -0.0017351347487419844, -5.686121585313231e-05, -9.536738616588991e-07, -0.0016511153662577271, -0.2372148334980011, -0.09237334132194519, -0.0020260538440197706, -0.005201023072004318, -0.002524643437936902], "finish_reason": "stop"}, {"text": " ValueError(\"Feature and target columns not in provided DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Feature", " and", " target", " columns", " not", " in", " provided", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.004893232602626085, -8.583032467868179e-06, -0.11132663488388062, -0.5642914772033691, -3.8648009300231934, -0.4147949516773224, -0.3143731355667114, -0.22445599734783173, -2.0689961910247803, -0.544130265712738, -1.5375615358352661, -0.21829688549041748, -0.009349963627755642, -0.7615028619766235, -0.004088140092790127, -0.0012521054595708847, -0.0010758809512481093], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)  # Convert to 2D array with one feature column", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "  ", "#", " Convert", " to", " ", "2", "D", " array", " with", " one", " feature", " column", "\n"], "logprobs": [-0.051993075758218765, -0.12041330337524414, -0.002702871570363641, -0.0007408496458083391, -0.04710887745022774, -0.38747039437294006, -0.01762092113494873, -9.870042413240299e-05, 0.0, -0.016247600317001343, -1.6569954823353328e-05, -0.00011848701251437888, -0.026484820991754532, -2.5629668016335927e-05, -2.706014311115723e-05, -2.006443738937378, -9.953480184776708e-05, -1.3511765003204346, -1.1103359460830688, -0.3232369124889374, -0.011390536092221737, -0.028606614097952843, -0.1420866996049881, -3.542603015899658, -0.7692527770996094, -2.638538360595703, -0.6804173588752747, -0.025110024958848953], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.00017379203927703202, -0.00044288364006206393, -5.1020273531321436e-05, -8.34461570775602e-06, -0.03418886661529541, -0.00012718822108581662, -0.5910723209381104], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0033014100044965744, -6.794906312279636e-06, -5.8410845667822286e-05, -0.004417067393660545, -0.3385906219482422], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-4.088794958079234e-05, -2.586808113846928e-05, -0.00017915551143232733, -0.008441008627414703, -0.0026950249448418617, -0.00038378025055862963, -0.02879983000457287], "finish_reason": "stop"}, {"text": " abs(model.predict(X) - y)", "tokens": [" abs", "(", "model", ".", "predict", "(", "X", ")", " -", " y", ")", "\n"], "logprobs": [-2.6285407543182373, -0.002629634225741029, -0.7621445059776306, -1.4781842764932662e-05, -0.00456802174448967, -0.00011205045302631333, -0.000614216027315706, -0.007723232731223106, -0.003711598925292492, -0.0036237069871276617, -0.0011651878012344241, -0.053628962486982346], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "res", "idual", "s", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.2096986025571823, -0.0005000770906917751, -0.0002401778765488416, -0.003550418186932802, -4.768370445162873e-07, -2.3841855067985307e-07, -0.0014859121292829514, -0.021319972351193428, -0.0015522110043093562, -0.00710342638194561, -0.00010966652916977182, -0.0041466690599918365, -2.455681169521995e-05, -0.06549231708049774, -2.0265558760002023e-06, -2.9802276912960224e-06, -0.0002903516869992018, -0.0001045410826918669, -0.39590612053871155, -0.001388420001603663, -0.9724845886230469, -5.400034933700226e-05, -1.2755313036905136e-05, -1.7165990357170813e-05, -0.01444560568779707, -1.9073468138230965e-06, -3.1470757676288486e-05, -5.960462772236497e-07, -0.00048601735034026206, -0.0056104338727891445], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.027263157069683075, -7.390948667307384e-06, -1.5497195136049413e-06, -1.1920928244535389e-07, -2.2411095415009186e-05, -1.0847986231965479e-05, -0.0022288737818598747, -0.0007491880678571761, -0.5929645895957947], "finish_reason": "stop"}], "metrics": {"energy": 586.2287240867616, "energy_per_token": 4.475028428143219, "time": 15.348916, "time_per_token": 0.11716729770992365}}
{"outputs": [{"text": " feature not in df:", "tokens": [" feature", " not", " in", " df", ":", "\n"], "logprobs": [-0.18437694013118744, -0.0048569319769740105, -1.0609570381348021e-05, -0.011757953092455864, -2.1524932384490967, -0.005723161157220602], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.004648830275982618, -1.1920858014491387e-05, -0.14659646153450012, -1.7522566318511963], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.05119434744119644, -0.12371295690536499, -0.002838275395333767, -0.0006667536217719316, -0.047596290707588196, -0.3712930679321289, -0.018302250653505325, -8.368142152903602e-05, 0.0, -0.010366994887590408, -1.8000440832111053e-05, -0.0001357701694360003, -0.020676661282777786, -2.6464111215318553e-05, -3.0040289857424796e-05, -0.20154333114624023], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.00018308870494365692, -0.00039760314393788576, -5.006664650863968e-05, -7.390948667307384e-06, -0.03758077695965767, -0.00011717586312443018, -0.9542254209518433, -0.001210909802466631, -3.6954811548639555e-06, -0.0005673944251611829, -3.576278118089249e-07, -3.802703940891661e-05, -0.001278179232031107, -1.2040065485052764e-05, -3.528532761265524e-05, -0.002096956130117178], "finish_reason": "stop"}, {"text": " LinearRegression().fit(X, y)", "tokens": [" Linear", "Reg", "ression", "()", ".", "fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-0.0033419255632907152, -8.4638240878121e-06, -5.23315102327615e-05, -0.005149197764694691, -1.399643063545227, -3.0874729418428615e-05, -3.8265450712060556e-05, -0.0007071378640830517, -0.013199333101511002, -0.0020139189437031746, -0.0003719830128829926, -0.030440302565693855], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.8980677345534787e-05, -3.0636318115284666e-05, -0.0002277830062666908, -0.010404158383607864, -0.0019587157294154167, -0.0003082277253270149, -0.03220922872424126], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.29717910289764404, -0.002649489790201187, -0.0031152074225246906, -5.602820692729438e-06, -0.0002196785935666412, -4.7801782784517854e-05, -0.00018475732940714806, -0.0002942844294011593, -0.029821693897247314], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=lambda i: residuals[i])", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "lambda", " i", ":", " residuals", "[", "i", "])", "\n"], "logprobs": [-0.18510830402374268, -0.00036030475166626275, -0.00033301531220786273, -0.0035947246942669153, -4.768370445162873e-07, -1.1920928244535389e-07, -0.0018475858960300684, -0.019641663879156113, -0.0010881462367251515, -0.00782886240631342, -9.572047565598041e-05, -0.004494446329772472, -1.966933996300213e-05, -0.06515473127365112, -3.099436753473128e-06, -3.4570634852570947e-06, -0.00034588552080094814, -0.00010322991875000298, -0.37408125400543213, -0.001419608946889639, -0.4034743309020996, -0.14673739671707153, -0.001531619462184608, -1.1689573526382446, -0.001208766596391797, -9.262132516596466e-05, -0.004843407776206732, -0.004835577681660652], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.021671278402209282, -6.9141146923357155e-06, -1.4305104514278355e-06, -1.1920928244535389e-07, -2.1576648578047752e-05, -7.390948667307384e-06, -0.0025854038540273905, -0.0008330450509674847, -0.4846535325050354], "finish_reason": "stop"}], "metrics": {"energy": 472.9995492143632, "energy_per_token": 4.420556534713675, "time": 12.602753, "time_per_token": 0.11778273831775701}}
{"outputs": [{"text": " feature not in df or target not in df:", "tokens": [" feature", " not", " in", " df", " or", " target", " not", " in", " df", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -1.9007682800292969, -0.0026006230618804693, -0.00014673586701974273, -2.4676019165781327e-05, -3.40932747349143e-05, -0.0017552459612488747, -0.0025983641389757395], "finish_reason": "stop"}, {"text": " ValueError(f\"Columns {feature} and {target} must both be present in the DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Columns", " {", "feature", "}", " and", " {", "target", "}", " must", " both", " be", " present", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005381027702242136, -1.6093124941107817e-05, -0.10820887237787247, -1.3229719400405884, -0.11354686319828033, -1.4630999565124512, -0.3719216585159302, -0.012558426707983017, -0.07084552943706512, -0.21153207123279572, -0.13932178914546967, -0.000618624035269022, -0.002398592187091708, -0.3525305390357971, -3.1816999912261963, -0.5920009613037109, -0.9973514080047607, -0.0502021498978138, -0.14787177741527557, -0.5060669183731079, -0.005079934373497963, -0.6784759163856506, -0.002753754146397114, -0.0008335214806720614, -0.0019364668987691402], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.03943270817399025, -0.14682181179523468, -0.002469230443239212, -0.0006831934442743659, -0.0486849807202816, -0.370238333940506, -0.020181436091661453, -8.737658936297521e-05, 0.0, -0.00678366981446743, -1.680836794548668e-05, -9.941560711013153e-05, -0.02297135442495346, -2.5152843591058627e-05, -2.753696753643453e-05, -0.17323614656925201], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.0001554368354845792, -0.0005066303419880569, -4.970903682988137e-05, -8.4638240878121e-06, -0.031584322452545166, -0.00013314791431184858, -0.818113386631012, -0.0018055817345157266, -6.6756979322235566e-06, -0.000619696278590709, -3.576278118089249e-07, -3.302042750874534e-05, -0.0012249593855813146, -1.2874520507466514e-05, -3.9219088648678735e-05, -0.002063052263110876], "finish_reason": "stop"}, {"text": " LinearRegression().fit(X, y)", "tokens": [" Linear", "Reg", "ression", "()", ".", "fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-0.0035112176556140184, -7.748573807475623e-06, -4.5536911784438416e-05, -0.004519367590546608, -1.4611237049102783, -3.433168603805825e-05, -4.1483970562694594e-05, -0.000673424918204546, -0.011491182260215282, -0.001759529928676784, -0.00036900385748595, -0.029175611212849617], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.9934315282152966e-05, -3.135155202471651e-05, -0.00018809456378221512, -0.008685076609253883, -0.0029588036704808474, -0.00028046013903804123, -0.03562832623720169], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.2971852123737335, -0.003045446705073118, -0.00328132975846529, -6.318072337307967e-06, -0.0003010773507412523, -2.9801878554280847e-05, -0.0001646144810365513, -0.00025102324434556067, -0.03895379602909088], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=lambda i: abs(residuals[i]))", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "lambda", " i", ":", " abs", "(", "res", "idual", "s", "[", "i", "]))", "\n"], "logprobs": [-0.17516274750232697, -0.000445385929197073, -0.0003293210465926677, -0.0031666632276028395, -4.768370445162873e-07, -1.1920928244535389e-07, -0.002126457868143916, -0.021858956664800644, -0.001258296542800963, -0.006075248587876558, -0.00011789103882620111, -0.005067718215286732, -2.1219027985353023e-05, -0.07003982365131378, -2.50339189733495e-06, -3.2186455882765586e-06, -0.0002755738969426602, -0.00010609064338495955, -0.37428370118141174, -0.001313300454057753, -0.3981219530105591, -0.15591229498386383, -0.0015197168104350567, -0.36314305663108826, -1.764281842042692e-05, -0.0004940004437230527, -1.6331539882230572e-05, -2.4676019165781327e-05, -0.0005428509321063757, -8.523101132595912e-05, -0.002976037794724107, -0.0037965141236782074], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.023581989109516144, -7.152531907195225e-06, -1.4305104514278355e-06, -2.3841855067985307e-07, -2.062299427052494e-05, -7.152531907195225e-06, -0.0025304697919636965, -0.00093606993323192, -0.536957323551178], "finish_reason": "stop"}], "metrics": {"energy": 597.2682015209199, "energy_per_token": 4.359621908911824, "time": 15.352248, "time_per_token": 0.11206020437956205}}
{"outputs": [{"text": " not all(c in df.columns for c in [feature, target]):", "tokens": [" not", " all", "(", "c", " in", " df", ".", "columns", " for", " c", " in", " [", "feature", ",", " target", "]", "):", "\n"], "logprobs": [-2.3791286945343018, -0.8224420547485352, -0.2612769901752472, -2.4844601154327393, -0.0012012654915452003, -0.017225774005055428, -0.17113946378231049, -0.0005878866068087518, -0.0038968592416495085, -3.8742269680369645e-05, -3.45700973412022e-05, -0.35183271765708923, -0.005080290138721466, -0.0007463291985914111, -0.00287108332850039, -0.003244970692321658, -5.3881147323409095e-05, -0.0008453133050352335], "finish_reason": "stop"}, {"text": " ValueError(\"Invalid columns provided\")", "tokens": [" Value", "Error", "(", "\"", "Invalid", " columns", " provided", "\"", ")", "\n"], "logprobs": [-0.005041386932134628, -1.0013530300057027e-05, -0.14203685522079468, -0.5342841148376465, -3.833479881286621, -1.288607120513916, -1.4076247215270996, -0.7672789096832275, -0.0006040894077159464, -0.0011591151123866439], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.04484332352876663, -0.12435951828956604, -0.002883089007809758, -0.0008456706418655813, -0.050438277423381805, -0.3682948648929596, -0.018582189455628395, -8.618460560683161e-05, 0.0, -0.008959448896348476, -1.4781842764932662e-05, -0.00011848701251437888, -0.024313490837812424, -2.2172682292875834e-05, -2.7656173188006505e-05, -0.19991733133792877], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.0001679517881711945, -0.0005418977816589177, -5.23315102327615e-05, -7.748573807475623e-06, -0.03466235473752022, -0.00011336160969221964, -0.5647283792495728], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0035321249160915613, -9.298280929215252e-06, -6.0437283536884934e-05, -0.0050723436288535595, -0.327767938375473], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.242440288886428e-05, -2.610649426060263e-05, -0.00020680672605521977, -0.009815051220357418, -0.0029464424587786198, -0.00034457468427717686, -0.03406478837132454], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.31390783190727234, -0.0034789058845490217, -0.003248891793191433, -7.748573807475623e-06, -0.0003937899600714445, -3.8980677345534787e-05, -0.00020644917094614357, -0.00024923557066358626, -0.027882536873221397], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=lambda x: abs(residuals[x]))", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "lambda", " x", ":", " abs", "(", "res", "idual", "s", "[", "x", "]))", "\n"], "logprobs": [-0.14650844037532806, -0.00047469791024923325, -0.0003299168893136084, -0.0025273782666772604, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.00160089076962322, -0.022399982437491417, -0.001255200942978263, -0.007861270569264889, -0.00013052565918769687, -0.005854364018887281, -2.0146166207268834e-05, -0.058275602757930756, -3.4570634852570947e-06, -3.4570634852570947e-06, -0.00030214988510124385, -9.476689592702314e-05, -0.42597758769989014, -0.0012510338565334678, -0.3535396456718445, -2.267174243927002, -0.0017855905462056398, -0.4712340831756592, -2.932505594799295e-05, -0.0012041230220347643, -2.5629668016335927e-05, -3.6238969187252223e-05, -0.0009658439084887505, -8.582700684200972e-05, -0.0031463427003473043, -0.004141207784414291], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.031814608722925186, -7.152531907195225e-06, -1.4305104514278355e-06, -1.1920928244535389e-07, -2.3007127310847864e-05, -7.629365427419543e-06, -0.0025403392501175404, -0.0008415018673986197, -0.5803735256195068], "finish_reason": "stop"}], "metrics": {"energy": 542.2785628280639, "energy_per_token": 4.798925334761627, "time": 13.463, "time_per_token": 0.11914159292035398}}
{"outputs": [{"text": " feature not in df or target not in df:", "tokens": [" feature", " not", " in", " df", " or", " target", " not", " in", " df", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -1.9007682800292969, -0.0026006230618804693, -0.00014673586701974273, -2.4676019165781327e-05, -3.40932747349143e-05, -0.0017552459612488747, -0.0025983641389757395], "finish_reason": "stop"}, {"text": " ValueError(\"Specified columns are not in the provided DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Spec", "ified", " columns", " are", " not", " in", " the", " provided", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005381027702242136, -1.6093124941107817e-05, -0.10820887237787247, -0.5251814126968384, -1.218854308128357, -0.0008505540899932384, -0.11180122196674347, -0.9407681226730347, -0.011428839527070522, -0.04566240310668945, -0.04863036423921585, -0.2129107117652893, -0.08497988432645798, -0.0032478224020451307, -0.9961696267127991, -0.000662822334561497, -0.001665158779360354], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.0531095489859581, -0.13318392634391785, -0.0023700501769781113, -0.0006123098428361118, -0.04927421733736992, -0.38901016116142273, -0.02168574370443821, -8.809178689261898e-05, 0.0, -0.011773858219385147, -1.597391747054644e-05, -0.00010680581908673048, -0.025447452440857887, -3.015949550899677e-05, -2.539125671319198e-05, -0.15861357748508453], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.00012182447244413197, -0.00044228785554878414, -4.410646579344757e-05, -7.271740287251305e-06, -0.03205592557787895, -0.00012313561455812305, -0.5425521731376648], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003676443127915263, -7.510157047363464e-06, -4.649054244509898e-05, -0.0044469754211604595, -0.27404889464378357], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.1470757676288486e-05, -3.0040289857424796e-05, -0.00019965562387369573, -0.009876432828605175, -0.0038072022143751383, -0.00033742457162588835, -0.035084281116724014], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.2745312452316284, -0.002732593100517988, -0.002305232686921954, -6.437280717364047e-06, -0.00039986721822060645, -3.969590397900902e-05, -0.0001902399235405028, -0.0003321811091154814, -0.03059963509440422], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "res", "idual", "s", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.17957481741905212, -0.00040522945346310735, -0.00029237763374112546, -0.0036387916188687086, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0015288818394765258, -0.019365880638360977, -0.0012467476772144437, -0.006868324708193541, -0.00012361239350866526, -0.005037354305386543, -2.3364747903542593e-05, -0.0694989562034607, -2.9802276912960224e-06, -3.4570634852570947e-06, -0.00025781645672395825, -0.00010907054820563644, -0.3294719159603119, -0.0010887415846809745, -1.3041216135025024, -5.769562994828448e-05, -1.1920858014491387e-05, -2.0861407392658293e-05, -0.010661075823009014, -1.6689286894688848e-06, -1.9430925021879375e-05, -4.768370445162873e-07, -0.000510204816237092, -0.004915178287774324], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model"], "logprobs": [-0.03476310148835182, -7.629365427419543e-06, -1.4305104514278355e-06, -1.1920928244535389e-07, -2.4676019165781327e-05, -8.106198947643861e-06, -0.002853609621524811, -0.0007398966699838638], "finish_reason": "stop"}], "metrics": {"energy": 529.3259616231918, "energy_per_token": 4.812054196574471, "time": 14.122268, "time_per_token": 0.12838425454545455}}
{"outputs": [{"text": " feature not in df.columns or target not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", " or", " target", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -0.2910308539867401, -0.0030490122735500336, -0.44530364871025085, -0.00310177868232131, -0.00013147920253686607, -2.396077979938127e-05, -6.19869097135961e-05, -0.0004338276921771467, -0.40232035517692566, -0.0007908792467787862, -0.0006958208978176117], "finish_reason": "stop"}, {"text": " ValueError(\"Specified columns do not exist in the provided dataframe\")", "tokens": [" Value", "Error", "(", "\"", "Spec", "ified", " columns", " do", " not", " exist", " in", " the", " provided", " data", "frame", "\"", ")", "\n"], "logprobs": [-0.0036826191935688257, -1.0132738680113107e-05, -0.12065444886684418, -0.4859316051006317, -1.1745691299438477, -0.0007626485894434154, -0.08921251446008682, -2.114569902420044, -0.0019370617810636759, -0.004738293122500181, -0.02769007347524166, -0.1118924617767334, -0.9530572891235352, -2.094843626022339, -0.03709029406309128, -1.2276930809020996, -0.0008152975351549685, -0.0015905360924080014], "finish_reason": "stop"}, {"text": " df[feature].to_numpy().reshape(-1, 1)  # Convert to numpy array and reshape for sklearn", "tokens": [" df", "[", "feature", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "  ", "#", " Convert", " to", " numpy", " array", " and", " resh", "ape", " for", " sklearn", "\n"], "logprobs": [-0.05301040783524513, -0.1318875402212143, -0.0023777803871780634, -0.0009678685455583036, -0.04243747144937515, -1.2192760705947876, -8.940656698541716e-06, -0.08256255090236664, -0.012627174146473408, -0.08780541270971298, -0.0004586121649481356, 0.0, -0.01689634472131729, -2.5987286790041253e-05, -0.00011097769311163574, -0.02955321967601776, -1.4662635294371285e-05, -4.9232225137529895e-05, -2.662572145462036, -0.00013457823661156, -1.0055819749832153, -1.2146378755569458, -0.6825590133666992, -0.121519535779953, -0.9243431687355042, -0.018476169556379318, -0.0015587572706863284, -1.3344666957855225, -0.5204325318336487, -0.4052983522415161], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.00016759421851020306, -0.0004210777406115085, -5.435795901576057e-05, -6.079655122448457e-06, -0.03541870415210724, -0.000144709600135684, -0.5383349657058716], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003211937379091978, -9.894321920000948e-06, -4.053033626405522e-05, -0.00435689277946949, -0.24993176758289337], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.8742269680369645e-05, -2.682172998902388e-05, -0.00022682955022901297, -0.007871086709201336, -0.003257209435105324, -0.0003225283289793879, -0.02874133549630642], "finish_reason": "stop"}, {"text": " abs(y - model.predict(X))", "tokens": [" abs", "(", "y", " -", " model", ".", "predict", "(", "X", "))", "\n"], "logprobs": [-2.2401652336120605, -0.002176299225538969, -0.7488613128662109, -0.0056545305997133255, -0.00348353898152709, -9.417489309271332e-06, -0.0013956816401332617, -4.732496745418757e-05, -0.00013624693383462727, -0.0031890033278614283, -0.05680420622229576], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "res", "idual", "s", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.1860150247812271, -0.0003491030656732619, -0.0002455409849062562, -0.0045935348607599735, -4.768370445162873e-07, -1.1920928244535389e-07, -0.00163588160648942, -0.017435256391763687, -0.0011622109450399876, -0.006564125884324312, -0.00011932138295378536, -0.004872591234743595, -2.0503786799963564e-05, -0.06492339819669724, -2.50339189733495e-06, -2.50339189733495e-06, -0.00023493390472140163, -0.00010430268594063818, -0.3926297724246979, -0.0012330556055530906, -1.0165388584136963, -4.2676016164477915e-05, -1.3470558769768104e-05, -1.490105023549404e-05, -0.011586163192987442, -2.264974000354414e-06, -3.2782016205601394e-05, -5.960462772236497e-07, -0.0004945961991325021, -0.005521759856492281], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.02769332006573677, -6.556489552167477e-06, -1.311301275563892e-06, -1.1920928244535389e-07, -2.52720492426306e-05, -6.794906312279636e-06, -0.0029034148901700974, -0.0008037435472942889, -1.6241145133972168, -7.033323527139146e-06, -8.344646857949556e-07, -5.602820692729438e-06, -7.080780778778717e-05, -1.8180276155471802, -0.0020092790946364403], "finish_reason": "stop"}], "metrics": {"energy": 613.1380625972747, "energy_per_token": 4.443029439110687, "time": 15.9823, "time_per_token": 0.11581376811594203}}
{"outputs": [{"text": " feature not in df:", "tokens": [" feature", " not", " in", " df", ":", "\n"], "logprobs": [-0.18437694013118744, -0.0048569319769740105, -1.0609570381348021e-05, -0.011757953092455864, -2.1524932384490967, -0.005723161157220602], "finish_reason": "stop"}, {"text": " ValueError(f\"Both {feature} and {target} columns must exist in the DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Both", " {", "feature", "}", " and", " {", "target", "}", " columns", " must", " exist", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.004648830275982618, -1.1920858014491387e-05, -0.14659646153450012, -1.405061960220337, -0.11766477674245834, -3.11297607421875, -1.6336658000946045, -0.0037138555198907852, -0.036109521985054016, -0.007251609116792679, -0.0015279296785593033, -0.0006573423161171377, -0.002427609171718359, -0.6849800944328308, -0.26682013273239136, -0.46703121066093445, -0.09860102832317352, -0.1590624898672104, -1.091800332069397, -0.006548019591718912, -0.5031393766403198, -0.0029440652579069138, -0.0009188005933538079, -0.0009727513534016907], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.04027123004198074, -0.1384619027376175, -0.0023922892287373543, -0.0007288183551281691, -0.0431961864233017, -0.37515199184417725, -0.024204235523939133, -8.940297266235575e-05, 0.0, -0.006390256807208061, -1.8715683836489916e-05, -0.0001003691868390888, -0.01980915293097496, -2.312633478140924e-05, -2.9801878554280847e-05, -0.1694464236497879], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.00015698630886618048, -0.0004295380203984678, -4.005352093372494e-05, -7.271740287251305e-06, -0.029656104743480682, -0.0001512651506345719, -0.5599912405014038], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0038395035080611706, -8.22540732769994e-06, -4.2914423829643056e-05, -0.004732953850179911, -0.316718190908432], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.242440288886428e-05, -3.099393507000059e-05, -0.0002097863471135497, -0.010447925888001919, -0.0029393110889941454, -0.00037102968781255186, -0.03420845419168472], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.3202812075614929, -0.0030563806649297476, -0.0030835960060358047, -6.794906312279636e-06, -0.0004885195521637797, -4.2437604861333966e-05, -0.00021944021864328533, -0.0002683041093405336, -0.03132694587111473], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " residuals", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.2054067701101303, -0.000380324519937858, -0.00034481301554478705, -0.001974658342078328, -4.768370445162873e-07, -1.1920928244535389e-07, -0.0011811431031674147, -0.031134450808167458, -0.001570183434523642, -0.006370238494127989, -9.083335316972807e-05, -0.004123162943869829, -1.5735502529423684e-05, -0.04813527688384056, -3.576272320060525e-06, -3.933898824470816e-06, -0.0002811751910485327, -0.00010692501382436603, -1.2061117887496948, -0.0002746204845607281, -0.02101103402674198, -3.576278118089249e-07, -3.6954811548639555e-06, 0.0, -0.001749176881276071, -0.005959006026387215], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.032975394278764725, -6.437280717364047e-06, -1.6689286894688848e-06, -1.1920928244535389e-07, -2.169585604860913e-05, -7.033323527139146e-06, -0.0026899129152297974, -0.0007983834366314113, -1.5698661804199219, -6.318072337307967e-06, -1.311301275563892e-06, -5.602820692729438e-06, -6.508615479106084e-05, -0.17423240840435028], "finish_reason": "stop"}], "metrics": {"energy": 552.5468538131713, "energy_per_token": 4.846902226431327, "time": 15.135214, "time_per_token": 0.1327650350877193}}
{"outputs": [{"text": " feature not in df.columns or target not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", " or", " target", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -0.2910308539867401, -0.0030490122735500336, -0.44530364871025085, -0.00310177868232131, -0.00013147920253686607, -2.396077979938127e-05, -6.19869097135961e-05, -0.0004338276921771467, -0.40232035517692566, -0.0007908792467787862, -0.0006958208978176117], "finish_reason": "stop"}, {"text": " ValueError(f\"Both {feature} and {target} columns need to be provided.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Both", " {", "feature", "}", " and", " {", "target", "}", " columns", " need", " to", " be", " provided", ".", "\"", ")", "\n"], "logprobs": [-0.0036826191935688257, -1.0132738680113107e-05, -0.12065444886684418, -1.3284494876861572, -0.1219155490398407, -2.9638469219207764, -1.5118200778961182, -0.0048807766288518906, -0.03308473527431488, -0.007412667386233807, -0.0014831743901595473, -0.0007088055717758834, -0.002502645133063197, -0.5441761612892151, -3.1648075580596924, -0.02465827949345112, -1.015179991722107, -3.035456657409668, -1.5575602054595947, -0.028058158233761787, -0.002760411472991109, -0.0016696811653673649], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.049536317586898804, -0.14511406421661377, -0.002771110739558935, -0.0006009918288327754, -0.04764118790626526, -0.3570857644081116, -0.0201481394469738, -9.667406266089529e-05, 0.0, -0.009543392807245255, -1.7881233361549675e-05, -0.00012432756193447858, -0.022303691133856773, -2.5629668016335927e-05, -2.539125671319198e-05, -0.15546146035194397], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.0001282609737245366, -0.00046004203613847494, -4.672895011026412e-05, -5.960446742392378e-06, -0.03463540971279144, -0.00016223068814724684, -0.9206379055976868, -0.00121412449516356, -4.768360213347478e-06, -0.0006366133457049727, -4.768370445162873e-07, -4.7444173105759546e-05, -0.0014038955559954047, -1.2278481335670222e-05, -3.015949550899677e-05, -0.0020584126468747854], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.0033326582051813602, -1.0609570381348021e-05, -4.2914423829643056e-05, -0.004465370438992977, -0.3443690538406372], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.313963316031732e-05, -3.421248038648628e-05, -0.00019214690837543458, -0.008646786212921143, -0.00275113875977695, -0.00028606137493625283, -0.03458980843424797], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.30287614464759827, -0.0030050380155444145, -0.003510861424729228, -5.960446742392378e-06, -0.0004567056894302368, -4.2199197196168825e-05, -0.00025507534155622125, -0.00028832571115344763, -0.02716408483684063], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " residuals", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.1486000120639801, -0.000390215078368783, -0.00025054652360267937, -0.004074486903846264, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0015999386087059975, -0.024082284420728683, -0.0012903229799121618, -0.007813130505383015, -0.00010096516780322418, -0.005915633402764797, -2.4914430468925275e-05, -0.057174455374479294, -3.099436753473128e-06, -3.3378546504536644e-06, -0.00019762947340495884, -0.00011896379146492109, -1.2204257249832153, -0.0002833203470800072, -0.02574874833226204, 0.0, -4.6491513785440475e-06, 0.0, -0.0011594723910093307, -0.005802216939628124], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model"], "logprobs": [-0.021825015544891357, -7.510157047363464e-06, -1.0728830375228426e-06, -1.1920928244535389e-07, -2.1219027985353023e-05, -8.940656698541716e-06, -0.002265507820993662, -0.0007198841194622219], "finish_reason": "stop"}], "metrics": {"energy": 560.0585004253387, "energy_per_token": 4.516600809881764, "time": 14.921516, "time_per_token": 0.1203348064516129}}
{"outputs": [{"text": " feature not in df.columns or target not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", " or", " target", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -0.2910308539867401, -0.0030490122735500336, -0.44530364871025085, -0.00310177868232131, -0.00013147920253686607, -2.396077979938127e-05, -6.19869097135961e-05, -0.0004338276921771467, -0.40232035517692566, -0.0007908792467787862, -0.0006958208978176117], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0036826191935688257, -1.0132738680113107e-05, -0.12065444886684418, -2.1223299503326416], "finish_reason": "stop"}, {"text": " df[feature].to_numpy().reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.05301040783524513, -0.1318875402212143, -0.0023777803871780634, -0.0009678685455583036, -0.04243747144937515, -1.2192760705947876, -8.940656698541716e-06, -0.08256255090236664, -0.012627174146473408, -0.08780541270971298, -0.0004586121649481356, 0.0, -0.01689634472131729, -2.5987286790041253e-05, -0.00011097769311163574, -0.02955321967601776, -1.4662635294371285e-05, -4.9232225137529895e-05, -0.09523899853229523], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.00016759421851020306, -0.0004210777406115085, -5.435795901576057e-05, -6.079655122448457e-06, -0.03541870415210724, -0.000144709600135684, -0.5383349657058716], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003211937379091978, -9.894321920000948e-06, -4.053033626405522e-05, -0.00435689277946949, -0.24993176758289337], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.8742269680369645e-05, -2.682172998902388e-05, -0.00022682955022901297, -0.007871086709201336, -0.003257209435105324, -0.0003225283289793879, -0.02874133549630642], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.30330216884613037, -0.0031283984426409006, -0.0030069397762417793, -7.748573807475623e-06, -0.00039664984797127545, -3.194758028257638e-05, -0.00022849810193292797, -0.000259723310591653, -0.03341129422187805], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=lambda i: abs(residuals[i]))", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "lambda", " i", ":", " abs", "(", "res", "idual", "s", "[", "i", "]))", "\n"], "logprobs": [-0.18213222920894623, -0.00043394684325903654, -0.00026294111739844084, -0.0034720157273113728, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0012362702982500196, -0.0241605993360281, -0.0014259180752560496, -0.00671901972964406, -0.00014041867689229548, -0.005342847667634487, -2.4199192921514623e-05, -0.06218978017568588, -2.145764938177308e-06, -2.861018856492592e-06, -0.00022623363474849612, -0.00010084597306558862, -0.44662120938301086, -0.001177332829684019, -0.418375700712204, -0.12431561946868896, -0.0019539566710591316, -0.4293476343154907, -1.9192511899746023e-05, -0.0005441615357995033, -1.6093124941107817e-05, -2.372236667724792e-05, -0.0004316828562878072, -8.49926145747304e-05, -0.0030240542255342007, -0.003566454164683819], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model"], "logprobs": [-0.034686993807554245, -6.556489552167477e-06, -2.0265558760002023e-06, -1.1920928244535389e-07, -2.13382354559144e-05, -7.867782187531702e-06, -0.0024770786985754967, -0.000699156429618597], "finish_reason": "stop"}], "metrics": {"energy": 488.6547898406982, "energy_per_token": 4.6099508475537565, "time": 12.195427, "time_per_token": 0.11505119811320755}}
{"outputs": [{"text": " feature not in df or target not in df:", "tokens": [" feature", " not", " in", " df", " or", " target", " not", " in", " df", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -1.9007682800292969, -0.0026006230618804693, -0.00014673586701974273, -2.4676019165781327e-05, -3.40932747349143e-05, -0.0017552459612488747, -0.0025983641389757395], "finish_reason": "stop"}, {"text": " ValueError(f\"Columns '{feature}' or '{target}' not found in provided DataFrame\")", "tokens": [" Value", "Error", "(", "f", "\"", "Columns", " '", "{", "feature", "}'", " or", " '", "{", "target", "}'", " not", " found", " in", " provided", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005381027702242136, -1.6093124941107817e-05, -0.10820887237787247, -1.3229719400405884, -0.11354686319828033, -1.4630999565124512, -1.502203106880188, -0.02987387776374817, -0.004964524880051613, -0.014429155737161636, -2.162432909011841, -0.003132438752800226, -0.0006347072194330394, -0.00037889453233219683, -0.005586250685155392, -0.3625292479991913, -1.01412034034729, -0.03769512474536896, -2.2829174995422363, -0.14248540997505188, -0.003397527849301696, -1.430625557899475, -0.0007907600956968963, -0.003687013639137149], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.04849841073155403, -0.13294558227062225, -0.002812479855492711, -0.0005962263094261289, -0.043169815093278885, -0.46709808707237244, -0.01869252882897854, -0.00012420836719684303, 0.0, -0.010291720740497112, -1.7165990357170813e-05, -0.00011085849109804258, -0.02033914066851139, -2.5629668016335927e-05, -3.0636318115284666e-05, -0.17226055264472961], "finish_reason": "stop"}, {"text": " df[target].values", "tokens": [" df", "[", "target", "]", ".", "values", "\n"], "logprobs": [-0.00013207517622504383, -0.00046695294440723956, -4.339123915997334e-05, -7.152531907195225e-06, -0.03508301451802254, -0.00013541258522309363, -0.5644186735153198], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.00399220734834671, -8.702239938429557e-06, -6.0437283536884934e-05, -0.004428223706781864, -0.2842409908771515], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-2.8967437174287625e-05, -2.586808113846928e-05, -0.0002277830062666908, -0.0092312665656209, -0.0031911423429846764, -0.0003083468764089048, -0.03338800370693207], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.28139856457710266, -0.003015378024429083, -0.00345918582752347, -7.271740287251305e-06, -0.00042012447374872863, -4.2437604861333966e-05, -0.00020632999076042324, -0.0003271759778726846, -0.029706096276640892], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=lambda i: abs(residuals[i]))", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "lambda", " i", ":", " abs", "(", "res", "idual", "s", "[", "i", "]))", "\n"], "logprobs": [-0.19619543850421906, -0.00038044367101974785, -0.000392598332837224, -0.0033845780417323112, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0012304362608119845, -0.023199673742055893, -0.0014636528212577105, -0.008489471860229969, -0.00013028726971242577, -0.003991494886577129, -1.8954096958623268e-05, -0.05847553536295891, -2.7418097943154862e-06, -2.7418097943154862e-06, -0.00027843413408845663, -0.00010549465514486656, -0.48895344138145447, -0.0012459142599254847, -0.5466837882995605, -0.11897335946559906, -0.0013917532050982118, -0.36567121744155884, -1.9192511899746023e-05, -0.0006123098428361118, -1.0490362910786644e-05, -2.276871418871451e-05, -0.0006864098832011223, -0.00011455356434453279, -0.003111048135906458, -0.0038645598106086254], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.027058273553848267, -8.22540732769994e-06, -1.5497195136049413e-06, -1.1920928244535389e-07, -2.2053474822314456e-05, -7.748573807475623e-06, -0.0025274972431361675, -0.0007463291985914111, -0.6879859566688538], "finish_reason": "stop"}], "metrics": {"energy": 533.109610372543, "energy_per_token": 4.442580086437858, "time": 13.670782, "time_per_token": 0.11392318333333334}}
{"outputs": [{"text": " feature not in df.columns:", "tokens": [" feature", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.18437694013118744, -0.0048569319769740105, -1.0609570381348021e-05, -0.011757953092455864, -0.24612869322299957, -0.0022857272997498512, -1.0578784942626953, -0.0030578067526221275], "finish_reason": "stop"}, {"text": " ValueError(\"Specified column(s) not found in the provided DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Spec", "ified", " column", "(", "s", ")", " not", " found", " in", " the", " provided", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.004807105287909508, -1.0251946150674485e-05, -0.13883456587791443, -0.4993942379951477, -1.178419828414917, -0.0008061258122324944, -2.565751075744629, -1.163188099861145, -6.615896563744172e-05, -0.000758955895435065, -0.2958213984966278, -1.5483661890029907, -0.057455312460660934, -0.25437554717063904, -1.1418392658233643, -0.1818467378616333, -0.0023837266489863396, -0.2625579833984375, -0.0040199910290539265, -0.0008152975351549685, -0.0013860390754416585], "finish_reason": "stop"}, {"text": " df[feature].values.reshape(-1, 1)  # Convert to 2D array with one column", "tokens": [" df", "[", "feature", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "  ", "#", " Convert", " to", " ", "2", "D", " array", " with", " one", " column", "\n"], "logprobs": [-0.05284849926829338, -0.1466609090566635, -0.0023481673561036587, -0.0007332258974201977, -0.04803995415568352, -0.3470792770385742, -0.021506549790501595, -7.593343616463244e-05, 0.0, -0.012780072167515755, -1.8358061424805783e-05, -0.00010168035078095272, -0.023057563230395317, -2.5033637939486653e-05, -2.3483953555114567e-05, -1.9331632852554321, -9.214453893946484e-05, -1.2921892404556274, -1.1721539497375488, -0.3402412235736847, -0.009267290122807026, -0.02822679467499256, -0.13713015615940094, -3.340341091156006, -0.8058324456214905, -0.07090327143669128, -0.034305792301893234], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.0001839230244513601, -0.0003091811086051166, -5.2927523938706145e-05, -7.510157047363464e-06, -0.032435908913612366, -0.00011467275908216834, -0.8794041275978088, -0.0021688053384423256, -6.079655122448457e-06, -0.000575376907363534, -4.768370445162873e-07, -4.23184028477408e-05, -0.0015656605828553438, -1.2278481335670222e-05, -3.266281055402942e-05, -0.0020626953337341547], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003423308255150914, -6.9141146923357155e-06, -5.411955135059543e-05, -0.004392380826175213, -0.31228676438331604], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.0636318115284666e-05, -2.8371408916427754e-05, -0.00022587609419133514, -0.009659101255238056, -0.0029848332051187754, -0.0003203832311555743, -0.027316864579916], "finish_reason": "stop"}, {"text": " np.abs(model.predict(X) - y)", "tokens": [" np", ".", "abs", "(", "model", ".", "predict", "(", "X", ")", " -", " y", ")", "\n"], "logprobs": [-2.850728988647461, -1.7523612768854946e-05, -0.04623691737651825, -0.0016790828667581081, -0.8787668347358704, -1.8000440832111053e-05, -0.0033092519734054804, -8.49926145747304e-05, -0.0005486889858730137, -0.005568705964833498, -0.0031996979378163815, -0.006313972175121307, -0.0012444854946807027, -0.03783046454191208], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "res", "idual", "s", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.16165092587471008, -0.0004805363714694977, -0.00028224775451235473, -0.0031404008623212576, -4.768370445162873e-07, -1.1920928244535389e-07, -0.0016288596671074629, -0.01946081779897213, -0.001303776167333126, -0.007405804470181465, -0.00012981049076188356, -0.005216558463871479, -2.586808113846928e-05, -0.06570666283369064, -2.145764938177308e-06, -2.7418097943154862e-06, -0.00031132620642893016, -0.0001358893496217206, -0.426700621843338, -0.0013050857232883573, -0.8994073271751404, -4.255681051290594e-05, -1.0609570381348021e-05, -1.7404405298293568e-05, -0.011568133719265461, -2.861018856492592e-06, -2.47952248173533e-05, -8.344646857949556e-07, -0.0006561510381288826, -0.00600806437432766], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.025099214166402817, -6.556489552167477e-06, -1.5497195136049413e-06, -2.3841855067985307e-07, -2.038458114839159e-05, -8.583032467868179e-06, -0.0027931032236665487, -0.0008412636234425008, -0.5239293575286865], "finish_reason": "stop"}], "metrics": {"energy": 600.3158914794923, "energy_per_token": 4.381867821018192, "time": 15.736492, "time_per_token": 0.11486490510948905}}
{"outputs": [{"text": " feature not in df:", "tokens": [" feature", " not", " in", " df", ":", "\n"], "logprobs": [-0.21378681063652039, -0.0037093423306941986, -1.0251946150674485e-05, -0.009920695796608925, -2.2857513427734375, -0.006788643077015877], "finish_reason": "stop"}, {"text": " ValueError(\"Specified columns not found in the DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Spec", "ified", " columns", " not", " found", " in", " the", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005381027702242136, -1.6093124941107817e-05, -0.10820887237787247, -0.5251814126968384, -1.218854308128357, -0.0008505540899932384, -0.11180122196674347, -0.9896458387374878, -1.367348551750183, -0.021720506250858307, -0.3899107277393341, -0.6448807120323181, -0.00482430774718523, -0.790887713432312, -0.0005712069687433541, -0.0012727025896310806], "finish_reason": "stop"}, {"text": " df[feature].to_numpy().reshape(-1, 1)", "tokens": [" df", "[", "feature", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.0531095489859581, -0.13318392634391785, -0.0023700501769781113, -0.0006123098428361118, -0.04927421733736992, -1.1664073467254639, -9.298280929215252e-06, -0.10497972369194031, -0.01283032726496458, -0.07864823192358017, -0.00045503751607611775, 0.0, -0.015292184427380562, -2.7179348762729205e-05, -0.00010966652916977182, -0.032633230090141296, -1.537788011773955e-05, -3.4927710657939315e-05, -0.10183357447385788], "finish_reason": "stop"}, {"text": " df[target].values.reshape(-1, 1)", "tokens": [" df", "[", "target", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.00015043080202303827, -0.0005183068569749594, -4.768258077092469e-05, -7.271740287251305e-06, -0.028088873252272606, -0.00012635385792236775, -0.8915116190910339, -0.001100054127164185, -6.437280717364047e-06, -0.0005123494775034487, -3.576278118089249e-07, -3.218599158572033e-05, -0.0011689979583024979, -9.179073458653875e-06, -3.2782016205601394e-05, -0.001806057756766677], "finish_reason": "stop"}, {"text": " LinearRegression()", "tokens": [" Linear", "Reg", "ression", "()", "\n"], "logprobs": [-0.003515256568789482, -8.583032467868179e-06, -4.875540980719961e-05, -0.004104286432266235, -0.28749656677246094], "finish_reason": "stop"}, {"text": "fit(X, y)", "tokens": ["fit", "(", "X", ",", " y", ")", "\n"], "logprobs": [-3.0040289857424796e-05, -2.753696753643453e-05, -0.00016020445036701858, -0.008162473328411579, -0.0023901485837996006, -0.0003143055073451251, -0.035680435597896576], "finish_reason": "stop"}, {"text": " y - model.predict(X)", "tokens": [" y", " -", " model", ".", "predict", "(", "X", ")", "\n"], "logprobs": [-0.334678053855896, -0.0025894464924931526, -0.0032995089422911406, -7.033323527139146e-06, -0.000325388420606032, -3.9457496313843876e-05, -0.00015114595589693636, -0.00033241944038309157, -0.027297724038362503], "finish_reason": "stop"}, {"text": " heapq.nlargest(n, range(len(residuals)), key=residuals.__getitem__)", "tokens": [" heap", "q", ".", "nl", "arg", "est", "(", "n", ",", " range", "(", "len", "(", "res", "idual", "s", "))", ",", " key", "=", "res", "idual", "s", ".", "__", "get", "item", "__", ")", "\n"], "logprobs": [-0.1924181431531906, -0.000366263062460348, -0.0003129946126136929, -0.0032113431952893734, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0008773530134931207, -0.028303280472755432, -0.0013759202556684613, -0.007338590919971466, -0.00014923889830242842, -0.005443630740046501, -2.0503786799963564e-05, -0.0681348666548729, -2.50339189733495e-06, -2.7418097943154862e-06, -0.00025388356880284846, -0.00010156115604331717, -0.4074769914150238, -0.0012259118957445025, -0.9977318048477173, -6.496695277746767e-05, -1.6689160474925302e-05, -1.7404405298293568e-05, -0.012031837366521358, -2.7418097943154862e-06, -2.074220174108632e-05, -5.960462772236497e-07, -0.0005651307292282581, -0.007106030359864235], "finish_reason": "stop"}, {"text": " largest_residual_indices, model", "tokens": [" largest", "_", "res", "idual", "_", "indices", ",", " model", "\n"], "logprobs": [-0.02865028753876686, -8.583032467868179e-06, -1.311301275563892e-06, -1.1920928244535389e-07, -2.90866428258596e-05, -1.07287787614041e-05, -0.002651273040100932, -0.0007400158210657537, -0.492806077003479], "finish_reason": "stop"}], "metrics": {"energy": 560.42229955101, "energy_per_token": 4.789934184196667, "time": 14.068688, "time_per_token": 0.12024519658119658}}
