{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.6066232919692993, -0.0007558587822131813, -0.1632644683122635, -2.8609820219571702e-05, -1.680836794548668e-05, -0.00023755589791107923, -7.390948667307384e-06, -2.264974000354414e-06, 0.0, -0.0014381790533661842, -0.008669713512063026, -0.0007899263291619718, -2.50339189733495e-06, -0.06961070746183395, -0.0023415072355419397, -7.510157047363464e-06, -0.02673984505236149, -0.09519954770803452, -7.629365427419543e-06, -0.01220802590250969, -0.0003947432560380548, -0.007389001548290253], "finish_reason": "stop"}, {"text": " [np.mean([x for x in column if np.issubdtype(np.asarray(x).dtype, np.number)]) for column in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "x", " for", " x", " in", " column", " if", " np", ".", "iss", "ub", "d", "type", "(", "np", ".", "as", "array", "(", "x", ")", ".", "d", "type", ",", " np", ".", "number", ")]", ")", " for", " column", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.31593501567840576, -0.050444621592760086, -1.7165990357170813e-05, -0.31140923500061035, -0.16284215450286865, -1.2021886110305786, -0.021364549174904823, -0.00023576818057335913, -2.753696753643453e-05, -2.426866054534912, -0.0034963686484843493, -1.400691032409668, -5.245195097813848e-06, -0.2991653382778168, -0.01251651719212532, -1.311301275563892e-06, -5.2689116273541003e-05, -0.00013016807497479022, -1.7932063341140747, -2.2291887944447808e-05, -1.9828650951385498, -0.006969072390347719, -0.011234596371650696, -0.006978543009608984, -0.0001915509783430025, -0.0008665143977850676, -1.8000440832111053e-05, -5.960446742392378e-06, -0.0005681092734448612, -0.016206080093979836, -2.7418097943154862e-06, -0.0024720842484384775, -0.008902501314878464, -0.020719747990369797, -0.30621984601020813, -0.001117082079872489, -0.00012861855793744326, -0.006082594860345125, -1.168244216387393e-05, -1.1920928244535389e-07, -1.7762025890988298e-05, -1.0728830375228426e-06, -0.006027615629136562, -0.0033698459155857563], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0021143241319805384, -2.264974000354414e-06, -4.768370445162873e-07, -0.4014982283115387], "finish_reason": "stop"}], "metrics": {"energy": 533.7070438995362, "energy_per_token": 7.624386341421945, "time": 15.678825, "time_per_token": 0.22398321428571427}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.5631663203239441, -0.000992877990938723, -0.17513573169708252, -2.1934269170742482e-05, -1.7881233361549675e-05, -0.00022635281493421644, -8.4638240878121e-06, -1.6689286894688848e-06, 0.0, -0.0013830630341544747, -0.009762401692569256, -0.0008500776602886617, -5.483612312673358e-06, -0.0707390159368515, -0.0023964515421539545, -7.033323527139146e-06, -0.027203412726521492, -0.09452126920223236, -7.748573807475623e-06, -0.012719810009002686, -0.0003551805857568979, -0.007226400543004274], "finish_reason": "stop"}, {"text": " [np.mean([value for value in column if isinstance(value, (int, float, np.number))]) for column in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "value", " for", " value", " in", " column", " if", " isinstance", "(", "value", ",", " (", "int", ",", " float", ",", " np", ".", "number", "))", "])", " for", " column", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.2973015606403351, -0.046801891177892685, -1.3351351299206726e-05, -0.19351495802402496, -0.15341007709503174, -1.7930718660354614, -0.01062816847115755, -0.00022516099852509797, -8.642300235806033e-05, -1.6814641952514648, -0.005796883255243301, -0.5249353051185608, -6.794698856538162e-05, -0.00472085177898407, -8.749579137656838e-05, -0.030636169016361237, -0.023572558537125587, -0.0001971527235582471, -0.0023424585815519094, -2.5294296741485596, -0.21582485735416412, -2.706014311115723e-05, -0.5176073312759399, -0.001858056872151792, -0.03326866775751114, -0.20075368881225586, -0.001255200942978263, -0.0001805857609724626, -0.009346302598714828, -1.0609570381348021e-05, -1.1920928244535389e-07, -2.1219027985353023e-05, -1.0728830375228426e-06, -0.002557580592110753, -0.0024786246940493584], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0024529388174414635, -2.264974000354414e-06, -4.768370445162873e-07, -0.4326004981994629], "finish_reason": "stop"}], "metrics": {"energy": 295.74416549682604, "energy_per_token": 4.848265008144689, "time": 7.573142, "time_per_token": 0.12414986885245902}}
{"outputs": [{"text": " itertools.zip_longest(*data_list, fillvalue=np.nan)", "tokens": [" iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", ")", "\n"], "logprobs": [-1.8605525493621826, -5.018585216021165e-05, -9.775113539944869e-06, -0.00039986721822060645, -7.629365427419543e-06, -1.7881377516459906e-06, 0.0, -0.0027973828837275505, -0.008703866973519325, -0.0005069877952337265, -1.0728830375228426e-06, -0.024329544976353645, -0.003132438752800226, -1.9192511899746023e-05, -0.032223887741565704, -0.08436936140060425, -9.65590606938349e-06, -0.016337906941771507, -0.00025519452174194157, -0.005048622377216816], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.6213291883468628, -0.0025095418095588684], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.002312725642696023, -2.50339189733495e-06, -4.768370445162873e-07, -0.45143571496009827], "finish_reason": "stop"}], "metrics": {"energy": 252.92494943809507, "energy_per_token": 9.727882670695964, "time": 8.171474, "time_per_token": 0.31428746153846154}}
{"outputs": [{"text": " list(zip(*[pad_tuple(tuple, len(data_list[0]), np.nan) for tuple in data_list]))", "tokens": [" list", "(", "zip", "(*", "[", "pad", "_", "tuple", "(", "tuple", ",", " len", "(", "data", "_", "list", "[", "0", "])", ",", " np", ".", "nan", ")", " for", " tuple", " in", " data", "_", "list", "]))", "\n"], "logprobs": [-0.5631663203239441, -0.000992877990938723, -2.20267391204834, -0.698309600353241, -0.38971611857414246, -2.402230739593506, -0.16078618168830872, -0.1335860937833786, -0.04029172658920288, -1.8836638927459717, -0.7208862900733948, -1.289060354232788, -0.0007013006834313273, -0.058915749192237854, -0.0005329619161784649, -3.2782016205601394e-05, -0.5122154355049133, -0.003185913898050785, -0.6690144538879395, -0.008328705094754696, -0.3595217764377594, -4.494089080253616e-05, -0.027318604290485382, -0.012055865488946438, -0.029256075620651245, -0.0011445883428677917, -0.0003718638326972723, -0.00241869012825191, -8.11782301752828e-05, -2.50339189733495e-06, -0.004708156455308199, -0.008540651760995388], "finish_reason": "stop"}, {"text": " [np.nanmean([val for val in column if isinstance(val, (int, float))])", "tokens": [" [", "np", ".", "nan", "mean", "([", "val", " for", " val", " in", " column", " if", " isinstance", "(", "val", ",", " (", "int", ",", " float", "))", "])", "\n"], "logprobs": [-0.29061105847358704, -0.04111957177519798, -1.3947389561508317e-05, -1.514382004737854, -0.008281179703772068, -0.1719769388437271, -1.9671801328659058, -0.028813611716032028, -0.00030501006403937936, -4.23184028477408e-05, -2.5431437492370605, -0.005622050724923611, -0.8138171434402466, -3.71926071238704e-05, -0.0037765626329928637, -6.139089964563027e-05, -0.033336468040943146, -0.033102262765169144, -0.00016282663273159415, -0.002434387570247054, -0.05259518325328827, -0.039300452917814255, -2.045353651046753], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0023234295658767223, -2.50339189733495e-06, -4.768370445162873e-07, -0.38922956585884094], "finish_reason": "stop"}], "metrics": {"energy": 349.8757349815368, "energy_per_token": 5.930097203076896, "time": 9.449308, "time_per_token": 0.1601577627118644}}
{"outputs": [{"text": " list(zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.5631663203239441, -0.000992877990938723, -2.20267391204834, -0.690008819103241, -0.001974420389160514, -1.4305104514278355e-06, -0.0024730355944484472, -0.03216340020298958, -0.001405204995535314, -1.311301275563892e-06, -0.05156848579645157, -0.0022646752186119556, -6.69933797325939e-05, -0.02945738285779953, -0.09518621861934662, -1.7523612768854946e-05, -0.01629721187055111, -0.000647692708298564, -0.012045618146657944], "finish_reason": "stop"}, {"text": " [np.mean([float(elem) for elem in position if isinstance(elem, (int, float))]) for position in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "float", "(", "elem", ")", " for", " ele", "m", " in", " position", " if", " isinstance", "(", "elem", ",", " (", "int", ",", " float", "))", "])", " for", " position", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.29061105847358704, -0.04111957177519798, -1.3947389561508317e-05, -0.2543989419937134, -0.1404830366373062, -1.776692509651184, -0.0004059444472659379, -3.7733588218688965, -0.0072907814756035805, -0.014302363619208336, -0.0004390706308186054, -5.960462772236497e-07, -0.000254241080256179, -2.25011944770813, -0.09017962217330933, -0.15277650952339172, -0.00018261195509694517, -0.006952735595405102, -0.00019560330838430673, -0.06419631093740463, -0.09379759430885315, -0.00015841660206206143, -0.0022211424075067043, -1.7783114910125732, -0.06892340630292892, -0.3407590687274933, -0.0011645924532786012, -0.0002618685248307884, -0.0036348719149827957, -8.4638240878121e-06, -2.3841855067985307e-07, -1.8954096958623268e-05, -1.4305104514278355e-06, -0.0035821336787194014, -0.0021469180937856436], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.001964307390153408, -2.145764938177308e-06, -4.768370445162873e-07, -0.44427579641342163], "finish_reason": "stop"}], "metrics": {"energy": 329.40305688858035, "energy_per_token": 5.67936304980311, "time": 9.252264, "time_per_token": 0.15952179310344827}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=None))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "None", "))", "\n"], "logprobs": [-0.6395570039749146, -0.0009657248156145215, -0.1254264861345291, -2.3603161025675945e-05, -1.847726889536716e-05, -0.00021526881027966738, -7.390948667307384e-06, -2.50339189733495e-06, 0.0, -0.001848061801865697, -0.01041925884783268, -0.0009533389820717275, -2.7418097943154862e-06, -0.06721719354391098, -0.0027136902790516615, -7.390948667307384e-06, -0.02782132476568222, -2.786774158477783, -0.00014423283573705703, -0.010300805792212486], "finish_reason": "stop"}, {"text": " [np.mean([val for val in unzipped_tuple if isinstance(val, (int, float))]) for unzipped_tuple in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "val", " for", " val", " in", " un", "z", "ipped", "_", "tuple", " if", " isinstance", "(", "val", ",", " (", "int", ",", " float", "))", "])", " for", " un", "z", "ipped", "_", "tuple", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.29632577300071716, -0.052240096032619476, -1.2755313036905136e-05, -0.24000133574008942, -0.170529305934906, -1.4869109392166138, -0.02636721171438694, -0.0002775999018922448, -2.8967437174287625e-05, -1.9085692167282104, -0.03980737924575806, -0.0005714452126994729, -0.03682766854763031, -3.200859785079956, -0.005968011915683746, -0.48969513177871704, -5.1616290875244886e-05, -0.0030780103988945484, -7.152301259338856e-05, -0.03613320738077164, -0.037226978689432144, -0.00017629499780014157, -0.002518697874620557, -0.3091372847557068, -0.034019507467746735, -0.30396315455436707, -0.004949222784489393, -1.9073468138230965e-06, -2.3841855067985307e-07, -9.536738616588991e-07, -1.4305012882687151e-05, -0.00033146608620882034, -0.0036889140028506517, -7.986990567587782e-06, 0.0, -3.3378546504536644e-06, -3.099436753473128e-06, -0.003601495176553726, -0.0019264726433902979], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.00243926327675581, -2.145764938177308e-06, -5.960462772236497e-07, -0.3593810498714447], "finish_reason": "stop"}], "metrics": {"energy": 297.47029975795743, "energy_per_token": 4.721750789808848, "time": 7.567356, "time_per_token": 0.1201167619047619}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.46608808636665344, -0.001134824356995523, -0.15695980191230774, -2.109982233378105e-05, -1.728519782773219e-05, -0.0002441108226776123, -9.298280929215252e-06, -2.3841830625315197e-06, 0.0, -0.001821288955397904, -0.011178956367075443, -0.0008906926377676427, -4.291525328881107e-06, -0.08096741884946823, -0.002342220861464739, -7.390948667307384e-06, -0.028176264837384224, -0.0885818749666214, -7.152531907195225e-06, -0.012816675007343292, -0.0004140473320148885, -0.008866345509886742], "finish_reason": "stop"}, {"text": " [np.nanmean([float(x) for x in values if x != \"\"]) for values in unzipped_data]", "tokens": [" [", "np", ".", "nan", "mean", "([", "float", "(", "x", ")", " for", " x", " in", " values", " if", " x", " ", "!", "=", " \"", "\"", "])", " for", " values", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.27724120020866394, -0.0426270067691803, -1.5139465176616795e-05, -1.5387500524520874, -0.008700794540345669, -0.18859483301639557, -1.1648123264312744, -0.0004103533865418285, -1.6176729202270508, -0.013381903059780598, -0.027773208916187286, -0.0002648479712661356, -7.199982064776123e-05, -2.014765977859497, -0.007905031554400921, -3.1342906951904297, -1.7751145362854004, -0.00041976699139922857, -0.0034193878527730703, -2.601449728012085, -0.45941293239593506, -0.6589924693107605, -0.19066669046878815, -0.0029042467940598726, -0.0007213136414065957, -0.0028196123894304037, -3.421248038648628e-05, 0.0, -2.7179348762729205e-05, -1.0728830375228426e-06, -0.011352230794727802, -0.007148285862058401], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0021971152164041996, -2.3841830625315197e-06, -4.768370445162873e-07, -0.41503074765205383], "finish_reason": "stop"}], "metrics": {"energy": 278.73138360214244, "energy_per_token": 4.805713510381766, "time": 7.5636306, "time_per_token": 0.13040742413793102}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.5631663203239441, -0.000992877990938723, -0.17513573169708252, -2.1934269170742482e-05, -1.7881233361549675e-05, -0.00022635281493421644, -8.4638240878121e-06, -1.6689286894688848e-06, 0.0, -0.0013830630341544747, -0.009762401692569256, -0.0008500776602886617, -5.483612312673358e-06, -0.0707390159368515, -0.0023964515421539545, -7.033323527139146e-06, -0.027203412726521492, -0.09452126920223236, -7.748573807475623e-06, -0.012719810009002686, -0.0003551805857568979, -0.007226400543004274], "finish_reason": "stop"}, {"text": " [np.mean(values) if all(np.isreal(v) for v in values) else np.nan", "tokens": [" [", "np", ".", "mean", "(", "values", ")", " if", " all", "(", "np", ".", "is", "real", "(", "v", ")", " for", " v", " in", " values", ")", " else", " np", ".", "nan", "\n"], "logprobs": [-0.2973015606403351, -0.046801891177892685, -1.3351351299206726e-05, -0.19351495802402496, -1.958501935005188, -3.0500855445861816, -0.25039374828338623, -0.7163810729980469, -0.30774861574172974, -0.0656980648636818, -1.559478521347046, -6.23445157543756e-05, -0.5913086533546448, -0.12729936838150024, -0.0007064230740070343, -1.2022206783294678, -0.0007123793475329876, -0.030280020087957382, -0.00031394799589179456, -6.782778655178845e-05, -0.003413447644561529, -0.016838088631629944, -0.017807487398386, -0.005653819069266319, -1.3232143828645349e-05, -0.0026065681595355272, -1.7148181200027466], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0024529388174414635, -2.264974000354414e-06, -4.768370445162873e-07, -0.4326004981994629], "finish_reason": "stop"}], "metrics": {"energy": 268.5859879417419, "energy_per_token": 5.067660149844187, "time": 7.1525917, "time_per_token": 0.1349545603773585}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.5631663203239441, -0.000992877990938723, -0.17513573169708252, -2.1934269170742482e-05, -1.7881233361549675e-05, -0.00022635281493421644, -8.4638240878121e-06, -1.6689286894688848e-06, 0.0, -0.0013830630341544747, -0.009762401692569256, -0.0008500776602886617, -5.483612312673358e-06, -0.0707390159368515, -0.0023964515421539545, -7.033323527139146e-06, -0.027203412726521492, -0.09452126920223236, -7.748573807475623e-06, -0.012719810009002686, -0.0003551805857568979, -0.007226400543004274], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.6510460376739502, -0.0022947664838284254], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0023360364139080048, -2.50339189733495e-06, -4.768370445162873e-07, -0.4082699120044708], "finish_reason": "stop"}], "metrics": {"energy": 225.26906649112695, "energy_per_token": 8.045323803254535, "time": 6.6984606, "time_per_token": 0.2392307357142857}}
{"outputs": [{"text": " itertools.zip_longest(*data_list, fillvalue=None)", "tokens": [" iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "None", ")", "\n"], "logprobs": [-1.747512936592102, -6.05564855504781e-05, -8.22540732769994e-06, -0.0004481264913920313, -1.9073304429184645e-05, -2.3841830625315197e-06, 0.0, -0.004016666207462549, -0.008798875845968723, -0.0005698964232578874, -1.311301275563892e-06, -0.030164243653416634, -0.0039087338373064995, -2.038458114839159e-05, -0.026748551055788994, -2.6364388465881348, -0.00023314618738368154, -0.006321671884506941], "finish_reason": "stop"}, {"text": " [np.mean([x for x in values if isinstance(x, (int, float))]) for values in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "x", " for", " x", " in", " values", " if", " isinstance", "(", "x", ",", " (", "int", ",", " float", "))", "])", " for", " values", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.2913670837879181, -0.04095195233821869, -1.4424220353248529e-05, -0.2682843804359436, -0.15954381227493286, -1.2108821868896484, -0.021122856065630913, -0.0002953569928649813, -2.777537883957848e-05, -1.986168384552002, -0.0017072877380996943, -0.3587356507778168, -5.4238757002167404e-05, -0.006108542904257774, -7.772143726469949e-05, -0.04463460296392441, -0.03679722175002098, -0.00017474555352237076, -0.003215620992705226, -0.18590624630451202, -0.021175961941480637, -0.15970103442668915, -0.0022168601863086224, -0.00027616979787126184, -0.001096481690183282, -2.109982233378105e-05, 0.0, -3.635817120084539e-05, -5.960462772236497e-07, -0.0032998654060065746, -0.002463760320097208], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.001663492526859045, -2.3841830625315197e-06, -4.768370445162873e-07, -0.40440478920936584], "finish_reason": "stop"}], "metrics": {"energy": 291.5090329856871, "energy_per_token": 5.500170433692209, "time": 8.621931, "time_per_token": 0.1626779433962264}}
{"outputs": [{"text": " [list(itertools.zip_longest(*data_list, fillvalue=np.nan))]", "tokens": [" [", "list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "]", "\n"], "logprobs": [-1.713943600654602, -0.29242104291915894, -0.0006429274217225611, -0.5891638398170471, -0.0009097489528357983, -1.2874520507466514e-05, -0.007777882274240255, -6.556489552167477e-06, -3.2186455882765586e-06, 0.0, -0.0026323688216507435, -0.04185996949672699, -0.0061867390759289265, -0.0004648081958293915, -0.03851376846432686, -0.012574084103107452, -1.5020257706055418e-05, -0.022803228348493576, -0.06782401353120804, -1.6212332411669195e-05, -0.012552423402667046, -0.0019224273273721337, -0.02011227048933506, -0.04006418585777283], "finish_reason": "stop"}, {"text": " [np.mean([float(num) for num in col if isinstance(num, (int, float))]) for col in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "float", "(", "num", ")", " for", " num", " in", " col", " if", " isinstance", "(", "num", ",", " (", "int", ",", " float", "))", "])", " for", " col", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.289712518453598, -0.039895929396152496, -1.4662635294371285e-05, -0.27256903052330017, -0.12859289348125458, -1.6960424184799194, -0.0004912600270472467, -3.5185084342956543, -0.01775912195444107, -0.02036472037434578, -0.000328367663314566, -0.00010585224663373083, -2.133662700653076, -0.013160274364054203, -0.25558581948280334, -9.583967766957358e-05, -0.003103085793554783, -0.000270091783022508, -0.09446660429239273, -0.10230838507413864, -0.00023040501400828362, -0.0067300316877663136, -1.1280893087387085, -0.06127728149294853, -0.1448490470647812, -0.00031156453769654036, -0.00011693747364915907, -0.0026016931515187025, -1.3470558769768104e-05, -1.1920928244535389e-07, -1.5735502529423684e-05, -1.5497195136049413e-06, -0.004234395921230316, -0.002092435723170638], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.002186052966862917, -2.50339189733495e-06, -3.576278118089249e-07, -0.40966761112213135], "finish_reason": "stop"}], "metrics": {"energy": 316.57305821609475, "energy_per_token": 5.106017068001528, "time": 9.049342, "time_per_token": 0.14595712903225805}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.5631663203239441, -0.000992877990938723, -0.17513573169708252, -2.1934269170742482e-05, -1.7881233361549675e-05, -0.00022635281493421644, -8.4638240878121e-06, -1.6689286894688848e-06, 0.0, -0.0013830630341544747, -0.009762401692569256, -0.0008500776602886617, -5.483612312673358e-06, -0.0707390159368515, -0.0023964515421539545, -7.033323527139146e-06, -0.027203412726521492, -0.09452126920223236, -7.748573807475623e-06, -0.012719810009002686, -0.0003551805857568979, -0.007226400543004274], "finish_reason": "stop"}, {"text": " [np.mean([float(value) for value in position if isinstance(value, (int, float))]) for position in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "float", "(", "value", ")", " for", " value", " in", " position", " if", " isinstance", "(", "value", ",", " (", "int", ",", " float", "))", "])", " for", " position", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.2973015606403351, -0.046801891177892685, -1.3351351299206726e-05, -0.19351495802402496, -0.15341007709503174, -1.6947060823440552, -0.0005421360838226974, -1.3642306327819824, -0.003986626863479614, -0.015762731432914734, -0.0004751745145767927, -0.00017736769223120064, -0.9995377063751221, -0.08015596866607666, -0.25077706575393677, -0.00015507926582358778, -0.00417895894497633, -0.0002460177056491375, -0.058201711624860764, -0.08839289098978043, -0.00014602071314584464, -0.0026963327545672655, -1.369622826576233, -0.04807131364941597, -0.2328135371208191, -0.000764673575758934, -0.0002536452084314078, -0.006928230170160532, -1.0847986231965479e-05, -1.1920928244535389e-07, -2.253030106658116e-05, -8.344646857949556e-07, -0.002825318370014429, -0.0022488560061901808], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0024529388174414635, -2.264974000354414e-06, -4.768370445162873e-07, -0.4326004981994629], "finish_reason": "stop"}], "metrics": {"energy": 302.40006129932397, "energy_per_token": 5.040001021655399, "time": 8.208562, "time_per_token": 0.13680936666666668}}
{"outputs": [{"text": " zip(*itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" zip", "(*", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-3.3184802532196045, -0.6026367545127869, -2.272584915161133, -1.6212332411669195e-05, -2.2649508537142538e-05, -0.0048377132043242455, -3.576278118089249e-07, -6.556489552167477e-06, 0.0, -0.0049817245453596115, -0.006710375659167767, -0.0007273888913914561, -3.3378546504536644e-06, -0.14599771797657013, -0.005984483286738396, -1.156323378381785e-05, -0.021883448585867882, -0.09286211431026459, -2.0861407392658293e-05, -0.013801147229969501, -0.0010698077967390418, -0.007205688860267401], "finish_reason": "stop"}, {"text": " [np.mean([x for x in col if isinstance(x, (int, float))]) for col in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "x", " for", " x", " in", " col", " if", " isinstance", "(", "x", ",", " (", "int", ",", " float", "))", "])", " for", " col", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.29094967246055603, -0.05944563448429108, -1.3232143828645349e-05, -0.2867288291454315, -0.16813689470291138, -1.1686488389968872, -0.016946157440543175, -0.00029988560709170997, -2.706014311115723e-05, -1.852465271949768, -0.002799165900796652, -0.46053314208984375, -5.98412734689191e-05, -0.003824896877631545, -0.0001212284987559542, -0.0387539304792881, -0.04673545062541962, -0.000176652567461133, -0.0031159203499555588, -0.10155995935201645, -0.029904885217547417, -0.1660783588886261, -0.0005194983095861971, -0.0001954841281985864, -0.0017176411347463727, -1.156323378381785e-05, -1.1920928244535389e-07, -1.680836794548668e-05, -8.344646857949556e-07, -0.005854956805706024, -0.0024536524433642626], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0018070096848532557, -2.7418097943154862e-06, -4.768370445162873e-07, -0.4018462896347046], "finish_reason": "stop"}], "metrics": {"energy": 319.29105784320825, "energy_per_token": 5.601597506021197, "time": 9.045594, "time_per_token": 0.15869463157894736}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.633560299873352, -0.0008274468709714711, -0.15100562572479248, -2.9444261599564925e-05, -1.537788011773955e-05, -0.0002557904226705432, -8.583032467868179e-06, -2.622600959512056e-06, 0.0, -0.0015162649797275662, -0.009990096092224121, -0.000747877755202353, -3.814689989667386e-06, -0.0816570371389389, -0.0024503227323293686, -5.364403477869928e-06, -0.024479037150740623, -0.11087583005428314, -7.510157047363464e-06, -0.013375316746532917, -0.0004253674705978483, -0.006710375659167767], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.6235783100128174, -0.002412268426269293], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.00237266649492085, -2.50339189733495e-06, -4.768370445162873e-07, -0.3821340799331665], "finish_reason": "stop"}], "metrics": {"energy": 189.43992056846622, "energy_per_token": 6.765711448873794, "time": 5.6746607, "time_per_token": 0.20266645357142857}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.5631663203239441, -0.000992877990938723, -0.17513573169708252, -2.1934269170742482e-05, -1.7881233361549675e-05, -0.00022635281493421644, -8.4638240878121e-06, -1.6689286894688848e-06, 0.0, -0.0013830630341544747, -0.009762401692569256, -0.0008500776602886617, -5.483612312673358e-06, -0.0707390159368515, -0.0023964515421539545, -7.033323527139146e-06, -0.027203412726521492, -0.09452126920223236, -7.748573807475623e-06, -0.012719810009002686, -0.0003551805857568979, -0.007226400543004274], "finish_reason": "stop"}, {"text": " [np.mean([x for x in data_tuple if isinstance(x, (int, float))]) for data_tuple in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "x", " for", " x", " in", " data", "_", "tuple", " if", " isinstance", "(", "x", ",", " (", "int", ",", " float", "))", "])", " for", " data", "_", "tuple", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.2973015606403351, -0.046801891177892685, -1.3351351299206726e-05, -0.19351495802402496, -0.15341007709503174, -1.396450161933899, -0.019824814051389694, -0.00035696811391972005, -3.0517112463712692e-05, -3.2937991619110107, -2.4254543781280518, -1.8058584928512573, -0.0028666851576417685, -0.20797505974769592, -5.435795901576057e-05, -0.0077691287733614445, -0.00013505500101018697, -0.05994155630469322, -0.05212649330496788, -0.00027450130437500775, -0.0035095547791570425, -0.16583620011806488, -0.04176267609000206, -0.21309462189674377, -0.0022066310048103333, -1.764281842042692e-05, -1.0251946150674485e-05, -0.00015531764074694365, -0.003214313881471753, -2.276871418871451e-05, 0.0, -1.7404405298293568e-05, -9.536738616588991e-07, -0.00465867854654789, -0.002383369952440262], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0024529388174414635, -2.264974000354414e-06, -4.768370445162873e-07, -0.4326004981994629], "finish_reason": "stop"}], "metrics": {"energy": 293.9114799232484, "energy_per_token": 4.818220982348334, "time": 7.580404, "time_per_token": 0.12426891803278688}}
{"outputs": [{"text": " itertools.zip_longest(*data_list, fillvalue=np.nan)", "tokens": [" iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", ")", "\n"], "logprobs": [-1.807735562324524, -5.9960475482512265e-05, -1.0967194612021558e-05, -0.0004371640970930457, -8.4638240878121e-06, -1.5497195136049413e-06, 0.0, -0.0026173877995461226, -0.010665557347238064, -0.0005934861255809665, -1.311301275563892e-06, -0.03271549567580223, -0.003980927634984255, -2.002696055569686e-05, -0.028273845091462135, -0.10089007019996643, -1.0013530300057027e-05, -0.012934358790516853, -0.00023755589791107923, -0.004250539932399988], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.6249672174453735, -0.0025239300448447466], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0023211699444800615, -2.3841830625315197e-06, -4.768370445162873e-07, -0.44960129261016846], "finish_reason": "stop"}], "metrics": {"energy": 502.2438034667969, "energy_per_token": 19.317069364107574, "time": 16.396046, "time_per_token": 0.6306171538461538}}
{"outputs": [{"text": " itertools.zip_longest(*data_list, fillvalue=np.nan)", "tokens": [" iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", ")", "\n"], "logprobs": [-1.833836317062378, -6.258291978156194e-05, -1.0251946150674485e-05, -0.00038509105797857046, -1.07287787614041e-05, -3.099436753473128e-06, 0.0, -0.0025253568310290575, -0.01283444557338953, -0.0006064721383154392, -1.1920922133867862e-06, -0.029033884406089783, -0.003922626841813326, -2.109982233378105e-05, -0.03226324915885925, -0.09995096176862717, -1.0967194612021558e-05, -0.011224105022847652, -0.0002847504511009902, -0.004577277693897486], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.6253818273544312, -0.0022895331494510174], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0023160558193922043, -2.622600959512056e-06, -4.768370445162873e-07, -0.43480682373046875], "finish_reason": "stop"}], "metrics": {"energy": 235.07333443450918, "energy_per_token": 9.041282093634969, "time": 7.775515, "time_per_token": 0.2990582692307692}}
{"outputs": [{"text": " itertools.zip_longest(*data_list, fillvalue=np.nan)", "tokens": [" iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", ")", "\n"], "logprobs": [-1.807735562324524, -5.9960475482512265e-05, -1.0967194612021558e-05, -0.0004371640970930457, -8.4638240878121e-06, -1.5497195136049413e-06, 0.0, -0.0026173877995461226, -0.010665557347238064, -0.0005934861255809665, -1.311301275563892e-06, -0.03271549567580223, -0.003980927634984255, -2.002696055569686e-05, -0.028273845091462135, -0.10089007019996643, -1.0013530300057027e-05, -0.012934358790516853, -0.00023755589791107923, -0.004250539932399988], "finish_reason": "stop"}, {"text": " [np.mean([val for val in row if isinstance(val, (int, float))]) for row in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "val", " for", " val", " in", " row", " if", " isinstance", "(", "val", ",", " (", "int", ",", " float", "))", "])", " for", " row", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.289712518453598, -0.039895929396152496, -1.4662635294371285e-05, -0.27256903052330017, -0.12859289348125458, -1.3024877309799194, -0.01891363598406315, -0.0001833270798670128, -3.3854863431770355e-05, -2.735806465148926, -0.004051810130476952, -0.36609727144241333, -3.9934315282152966e-05, -0.0029374093282967806, -7.70062324590981e-05, -0.03602535277605057, -0.025744333863258362, -0.00021491125517059118, -0.002300356514751911, -0.10349758714437485, -0.0353684239089489, -0.21441377699375153, -0.00043466180795803666, -6.222531374078244e-05, -0.0014868644066154957, -2.312633478140924e-05, -1.1920928244535389e-07, -1.811964830267243e-05, -2.264974000354414e-06, -0.0033069944474846125, -0.0020615055691450834], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.002186052966862917, -2.50339189733495e-06, -3.576278118089249e-07, -0.40966761112213135], "finish_reason": "stop"}], "metrics": {"energy": 288.66208053016675, "energy_per_token": 5.24840146418485, "time": 8.815363, "time_per_token": 0.16027932727272726}}
{"outputs": [{"text": " list(zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.5631663203239441, -0.000992877990938723, -2.20267391204834, -0.690008819103241, -0.001974420389160514, -1.4305104514278355e-06, -0.0024730355944484472, -0.03216340020298958, -0.001405204995535314, -1.311301275563892e-06, -0.05156848579645157, -0.0022646752186119556, -6.69933797325939e-05, -0.02945738285779953, -0.09518621861934662, -1.7523612768854946e-05, -0.01629721187055111, -0.000647692708298564, -0.012045618146657944], "finish_reason": "stop"}, {"text": " [np.nanmean([float(item) for item in sublist if isinstance(item, (float, int))]) for sublist in unzipped_data]", "tokens": [" [", "np", ".", "nan", "mean", "([", "float", "(", "item", ")", " for", " item", " in", " subl", "ist", " if", " isinstance", "(", "item", ",", " (", "float", ",", " int", "))", "])", " for", " subl", "ist", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.29061105847358704, -0.04111957177519798, -1.3947389561508317e-05, -1.514382004737854, -0.008281179703772068, -0.1719769388437271, -1.3254565000534058, -0.0005749003030359745, -2.9017910957336426, -0.014064128510653973, -0.016886381432414055, -0.0001551984460093081, -0.00011848701251437888, -1.3791532516479492, -0.006066480651497841, -0.016696946695446968, -0.172541081905365, -8.880697714630514e-05, -0.0033707963302731514, -0.00011145447206217796, -0.052771154791116714, -2.377378225326538, -0.00014923889830242842, -0.005161412991583347, -0.318781316280365, -0.03536105901002884, -0.13204394280910492, -0.001405086019076407, -2.3841830625315197e-06, -0.00020990552729927003, -0.008601048029959202, -1.8358061424805783e-05, -1.1920928244535389e-07, -1.680836794548668e-05, -1.311301275563892e-06, -0.0026303476188331842, -0.0017031225143000484], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0022898900788277388, -2.622600959512056e-06, -7.152555099310121e-07, -0.4288994073867798], "finish_reason": "stop"}], "metrics": {"energy": 312.34041933250427, "energy_per_token": 5.205673655541738, "time": 9.046178, "time_per_token": 0.15076963333333332}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.633560299873352, -0.0008274468709714711, -0.15100562572479248, -2.9444261599564925e-05, -1.537788011773955e-05, -0.0002557904226705432, -8.583032467868179e-06, -2.622600959512056e-06, 0.0, -0.0015162649797275662, -0.009990096092224121, -0.000747877755202353, -3.814689989667386e-06, -0.0816570371389389, -0.0024503227323293686, -5.364403477869928e-06, -0.024479037150740623, -0.11087583005428314, -7.510157047363464e-06, -0.013375316746532917, -0.0004253674705978483, -0.006710375659167767], "finish_reason": "stop"}, {"text": " [np.mean([x for x in position if isinstance(x, (int, float))]) for position in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "x", " for", " x", " in", " position", " if", " isinstance", "(", "x", ",", " (", "int", ",", " float", "))", "])", " for", " position", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.29030731320381165, -0.04302811622619629, -1.490105023549404e-05, -0.1961517482995987, -0.1678844541311264, -1.481921911239624, -0.022360697388648987, -0.0003526780928950757, -3.123234637314454e-05, -1.5880180597305298, -0.027645545080304146, -0.32313138246536255, -5.745722592109814e-05, -0.0056823864579200745, -0.00013052565918769687, -0.04033374786376953, -0.05153939127922058, -0.00021407696476671845, -0.0035426970571279526, -0.21766161918640137, -0.02489214390516281, -0.31597962975502014, -0.0008110094931907952, -0.00026174934464506805, -0.0009076051646843553, -8.22540732769994e-06, -1.1920928244535389e-07, -1.5258672647178173e-05, -7.152555099310121e-07, -0.004176822490990162, -0.002285608323290944], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0024119114968925714, -2.622600959512056e-06, -4.768370445162873e-07, -1.5460909605026245, -1.6689286894688848e-06, -9.536738616588991e-07, -2.3841830625315197e-06, -3.6000557884108275e-05, -0.19519631564617157], "finish_reason": "stop"}], "metrics": {"energy": 238.11865560054778, "energy_per_token": 3.84062347742819, "time": 6.948344, "time_per_token": 0.11207006451612903}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.6395570039749146, -0.0009657248156145215, -0.1254264861345291, -2.3603161025675945e-05, -1.847726889536716e-05, -0.00021526881027966738, -7.390948667307384e-06, -2.50339189733495e-06, 0.0, -0.001848061801865697, -0.01041925884783268, -0.0009533389820717275, -2.7418097943154862e-06, -0.06721719354391098, -0.0027136902790516615, -7.390948667307384e-06, -0.02782132476568222, -0.0877271220088005, -7.510157047363464e-06, -0.009813634678721428, -0.0004601611872203648, -0.007226282265037298], "finish_reason": "stop"}, {"text": " [np.mean(filter(lambda x: isinstance(x, (int, float)), row)) for row in unzipped_data]", "tokens": [" [", "np", ".", "mean", "(", "filter", "(", "lambda", " x", ":", " isinstance", "(", "x", ",", " (", "int", ",", " float", "))", ",", " row", "))", " for", " row", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.28718146681785583, -0.04372887685894966, -1.3589766240329482e-05, -0.21349826455116272, -1.8934569358825684, -1.2286244630813599, -0.0054723224602639675, -1.231494665145874, -0.017233623191714287, -0.000695344409905374, -0.1520337015390396, -3.802703940891661e-05, -0.0021354984492063522, -0.00040546778473071754, -0.048646602779626846, -0.04997515305876732, -0.00023469554434996098, -0.0032377224415540695, -0.02012629061937332, -0.0275336392223835, -2.4898486137390137, -0.00583729799836874, -0.18164773285388947, -0.001111128251068294, -9.131014667218551e-05, -0.0014340127818286419, -1.549708758830093e-05, -1.1920928244535389e-07, -1.2874520507466514e-05, -9.536738616588991e-07, -0.006892003118991852, -0.002538555534556508], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.002639264799654484, -2.622600959512056e-06, -4.768370445162873e-07, -0.3978845477104187], "finish_reason": "stop"}], "metrics": {"energy": 259.5554763469697, "energy_per_token": 4.47509441977534, "time": 6.948503, "time_per_token": 0.11980177586206896}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", "))", "\n"], "logprobs": [-0.46608808636665344, -0.001134824356995523, -0.15695980191230774, -2.109982233378105e-05, -1.728519782773219e-05, -0.0002441108226776123, -9.298280929215252e-06, -2.3841830625315197e-06, 0.0, -0.001821288955397904, -0.011178956367075443, -0.0008906926377676427, -4.291525328881107e-06, -2.559696674346924, -0.023818431422114372], "finish_reason": "stop"}, {"text": " [np.nanmean([value for value in sublist if isinstance(value, (int, float))]) for sublist in unzipped_data]", "tokens": [" [", "np", ".", "nan", "mean", "([", "value", " for", " value", " in", " subl", "ist", " if", " isinstance", "(", "value", ",", " (", "int", ",", " float", "))", "])", " for", " subl", "ist", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.2760133743286133, -0.04742145538330078, -1.2516897186287679e-05, -1.5528661012649536, -0.009677872993052006, -0.13252758979797363, -1.8098483085632324, -0.011496839113533497, -0.00028320116689428687, -7.617183291586116e-05, -3.7691102027893066, -0.002467090031132102, -0.0026263052131980658, -0.36964666843414307, -4.2676016164477915e-05, -0.003372578416019678, -9.548207890475169e-05, -0.031228508800268173, -0.03616471216082573, -0.00013374387344811112, -0.0021280040964484215, -0.16606512665748596, -0.025180937722325325, -0.176430344581604, -0.0005627478822134435, -1.0728830375228426e-06, -0.00020418466010596603, -0.0025613855104893446, -8.583032467868179e-06, -1.1920928244535389e-07, -1.5139465176616795e-05, -9.536738616588991e-07, -0.002871202304959297, -0.0017062166007235646], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0023646983318030834, -2.622600959512056e-06, -4.768370445162873e-07, -1.657719373703003, -1.4305104514278355e-06, -8.344646857949556e-07, -2.145764938177308e-06, -4.207999518257566e-05, -0.20166729390621185], "finish_reason": "stop"}], "metrics": {"energy": 247.46379600524898, "energy_per_token": 4.266617172504293, "time": 6.7508974, "time_per_token": 0.1163947827586207}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.5631663203239441, -0.000992877990938723, -0.17513573169708252, -2.1934269170742482e-05, -1.7881233361549675e-05, -0.00022635281493421644, -8.4638240878121e-06, -1.6689286894688848e-06, 0.0, -0.0013830630341544747, -0.009762401692569256, -0.0008500776602886617, -5.483612312673358e-06, -0.0707390159368515, -0.0023964515421539545, -7.033323527139146e-06, -0.027203412726521492, -0.09452126920223236, -7.748573807475623e-06, -0.012719810009002686, -0.0003551805857568979, -0.007226400543004274], "finish_reason": "stop"}, {"text": " [np.mean([val for val in position if isinstance(val, (int, float))]) for position in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "val", " for", " val", " in", " position", " if", " isinstance", "(", "val", ",", " (", "int", ",", " float", "))", "])", " for", " position", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.2973015606403351, -0.046801891177892685, -1.3351351299206726e-05, -0.19351495802402496, -0.15341007709503174, -1.4862405061721802, -0.021084105595946312, -0.0002554328821133822, -2.8609820219571702e-05, -1.4141881465911865, -0.04015099257230759, -0.5703225135803223, -4.589452510117553e-05, -0.004231784492731094, -8.415821503149346e-05, -0.03456942364573479, -0.021170591935515404, -0.0002087136817863211, -0.0030463975854218006, -0.13915346562862396, -0.018181100487709045, -0.3283834159374237, -0.0015648273983970284, -0.00011514954530866817, -0.0009739422821439803, -1.4662635294371285e-05, -2.3841855067985307e-07, -1.3828182090946939e-05, -5.960462772236497e-07, -0.0033462028950452805, -0.0025176277849823236], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0024529388174414635, -2.264974000354414e-06, -4.768370445162873e-07, -0.4326004981994629], "finish_reason": "stop"}], "metrics": {"energy": 273.3571688070297, "energy_per_token": 4.795739803632101, "time": 7.1634355, "time_per_token": 0.12567430701754387}}
{"outputs": [{"text": " zip_longest(*data_list, fillvalue=np.nan)", "tokens": [" zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", ")", "\n"], "logprobs": [-3.3184802532196045, -0.8042168021202087, -0.016593070700764656, -6.9141146923357155e-06, -0.0028389885555952787, -0.015748532488942146, -0.00098525604698807, -1.311301275563892e-06, -0.022692760452628136, -0.0029906569980084896, -0.00015233787416946143, -0.02964244969189167, -0.08431282639503479, -1.7523612768854946e-05, -0.023757202550768852, -0.0007426364463753998, -0.009604908525943756], "finish_reason": "stop"}, {"text": " np.nanmean(unzipped_data, axis=1, where=[isinstance(val, (int, float)) for val in unzipped_data], dtype=np.float64)", "tokens": [" np", ".", "nan", "mean", "(", "un", "z", "ipped", "_", "data", ",", " axis", "=", "1", ",", " where", "=[", "is", "instance", "(", "val", ",", " (", "int", ",", " float", "))", " for", " val", " in", " un", "z", "ipped", "_", "data", "]", ",", " dtype", "=", "np", ".", "float", "6", "4", ")", "\n"], "logprobs": [-3.1201694011688232, -3.361645576660521e-05, -0.5798323750495911, -0.001341753639280796, -0.6694278717041016, -1.11525559425354, -0.00019035911827813834, -3.099436753473128e-06, -0.00015901254664640874, -2.276871418871451e-05, -0.032812055200338364, -0.2746870517730713, -0.0018826870946213603, -0.00652705691754818, -0.36933624744415283, -0.2764778435230255, -0.18560072779655457, -0.19547566771507263, -0.07865726947784424, -0.0021063541062176228, -0.9740302562713623, -0.0007294139941222966, -0.05821014568209648, -0.05084181949496269, -0.00021610308613162488, -0.0030614910647273064, -0.10102111101150513, -0.007860797457396984, -0.003698534332215786, -0.0012438902631402016, -0.09250811487436295, -0.0006538875168189406, -1.5497195136049413e-06, -0.0004619484825525433, -3.9934315282152966e-05, -0.3582208752632141, -0.004577989690005779, -0.8404395580291748, -0.03928692638874054, -0.7382945418357849, -2.706014311115723e-05, -0.005291622597724199, -0.21036435663700104, -7.867782187531702e-06, -0.016055112704634666, -0.0570174977183342], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.002312725642696023, -2.50339189733495e-06, -4.768370445162873e-07, -0.45143571496009827], "finish_reason": "stop"}], "metrics": {"energy": 350.88493398571035, "energy_per_token": 5.2370885669509, "time": 10.726098, "time_per_token": 0.16009101492537314}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.633560299873352, -0.0008274468709714711, -0.15100562572479248, -2.9444261599564925e-05, -1.537788011773955e-05, -0.0002557904226705432, -8.583032467868179e-06, -2.622600959512056e-06, 0.0, -0.0015162649797275662, -0.009990096092224121, -0.000747877755202353, -3.814689989667386e-06, -0.0816570371389389, -0.0024503227323293686, -5.364403477869928e-06, -0.024479037150740623, -0.11087583005428314, -7.510157047363464e-06, -0.013375316746532917, -0.0004253674705978483, -0.006710375659167767], "finish_reason": "stop"}, {"text": " [np.nanmean([value for value in unzipped_row if isinstance(value, (int, float, np.integer, np.floating))]) for unzipped_row in unzipped_data]", "tokens": [" [", "np", ".", "nan", "mean", "([", "value", " for", " value", " in", " un", "z", "ipped", "_", "row", " if", " isinstance", "(", "value", ",", " (", "int", ",", " float", ",", " np", ".", "integer", ",", " np", ".", "flo", "ating", "))", "])", " for", " un", "z", "ipped", "_", "row", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.29030731320381165, -0.04302811622619629, -1.490105023549404e-05, -1.7487564086914062, -0.010058548301458359, -0.17449316382408142, -1.9395387172698975, -0.019381314516067505, -0.00027307120035402477, -7.390703103737906e-05, -2.512622833251953, -0.03274952992796898, -0.0004711233195848763, -0.029366053640842438, -3.2949929237365723, -0.007617355789989233, -0.2684040665626526, -7.855583680793643e-05, -0.0029194613453000784, -0.00010513706365600228, -0.039177462458610535, -0.04306991025805473, -0.00019965562387369573, -0.0019910766277462244, -2.2771692276000977, -0.19644014537334442, -1.1205610462639015e-05, -1.279857873916626, -0.06222640722990036, -0.00018571082910057157, -2.861018856492592e-06, -0.0832122415304184, -2.50339189733495e-06, -0.013684623874723911, -0.04736074432730675, -0.1994410902261734, -0.0015486401971429586, -2.264974000354414e-06, -1.1920928244535389e-07, -3.576272320060525e-06, -2.1815061700181104e-05, -0.00019905969384126365, -0.001660517300479114, -5.722029527532868e-06, 0.0, -4.887569048150908e-06, -7.033323527139146e-06, -0.0036374852061271667, -0.0031661877874284983], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0026637569535523653, -2.0265558760002023e-06, -4.768370445162873e-07, -0.3668654263019562], "finish_reason": "stop"}], "metrics": {"energy": 283.4628069362641, "energy_per_token": 3.779504092483521, "time": 7.790003, "time_per_token": 0.10386670666666666}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.5631663203239441, -0.000992877990938723, -0.17513573169708252, -2.1934269170742482e-05, -1.7881233361549675e-05, -0.00022635281493421644, -8.4638240878121e-06, -1.6689286894688848e-06, 0.0, -0.0013830630341544747, -0.009762401692569256, -0.0008500776602886617, -5.483612312673358e-06, -0.0707390159368515, -0.0023964515421539545, -7.033323527139146e-06, -0.027203412726521492, -0.09452126920223236, -7.748573807475623e-06, -0.012719810009002686, -0.0003551805857568979, -0.007226400543004274], "finish_reason": "stop"}, {"text": " [np.mean([float(val) for val in values if isinstance(val, (int, float, np.number))]) for values in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "float", "(", "val", ")", " for", " val", " in", " values", " if", " isinstance", "(", "val", ",", " (", "int", ",", " float", ",", " np", ".", "number", "))", "])", " for", " values", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.2973015606403351, -0.046801891177892685, -1.3351351299206726e-05, -0.19351495802402496, -0.15341007709503174, -1.6947060823440552, -0.0005421360838226974, -1.2000956535339355, -0.005794750060886145, -0.016620740294456482, -0.0002469711471349001, -7.593343616463244e-05, -1.9090142250061035, -0.015698658302426338, -0.3381480872631073, -5.6980417866725475e-05, -0.00330414273776114, -0.00019107422849629074, -0.06634753942489624, -0.07196689397096634, -0.00016878610767889768, -0.0031688022427260876, -0.38686543703079224, -0.09601621329784393, -1.490105023549404e-05, -0.4965131878852844, -0.005091201979666948, -0.02661251462996006, -0.15537308156490326, -0.0032933305483311415, -0.00037305548903532326, -0.014695613645017147, -2.1815061700181104e-05, 0.0, -2.8609820219571702e-05, -1.4305104514278355e-06, -0.0018368767341598868, -0.003355232300236821], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0024529388174414635, -2.264974000354414e-06, -4.768370445162873e-07, -0.4326004981994629], "finish_reason": "stop"}], "metrics": {"energy": 292.0855927581787, "energy_per_token": 4.563837386846542, "time": 7.3726177, "time_per_token": 0.1151971515625}}
{"outputs": [{"text": " list(itertools.zip_longest(*data_list, fillvalue=np.nan))", "tokens": [" list", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "\n"], "logprobs": [-0.5631663203239441, -0.000992877990938723, -0.17513573169708252, -2.1934269170742482e-05, -1.7881233361549675e-05, -0.00022635281493421644, -8.4638240878121e-06, -1.6689286894688848e-06, 0.0, -0.0013830630341544747, -0.009762401692569256, -0.0008500776602886617, -5.483612312673358e-06, -0.0707390159368515, -0.0023964515421539545, -7.033323527139146e-06, -0.027203412726521492, -0.09452126920223236, -7.748573807475623e-06, -0.012719810009002686, -0.0003551805857568979, -0.007226400543004274], "finish_reason": "stop"}, {"text": " [np.nanmean([val for val in unzip if np.isreal(val)]) for unzip in unzipped_data]", "tokens": [" [", "np", ".", "nan", "mean", "([", "val", " for", " val", " in", " un", "zip", " if", " np", ".", "is", "real", "(", "val", ")]", ")", " for", " un", "zip", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.2973015606403351, -0.046801891177892685, -1.3351351299206726e-05, -1.7607566118240356, -0.007515963166952133, -0.17150385677814484, -1.8300799131393433, -0.024363750591874123, -0.00038699767901562154, -3.40932747349143e-05, -1.9485228061676025, -2.9586191177368164, -0.2610742747783661, -0.8436846733093262, -1.9550132492440753e-05, -0.6982592344284058, -0.151943176984787, -0.005432248581200838, -0.007156926207244396, -0.02821601741015911, -0.025410495698451996, -0.1708996444940567, -0.0031072453130036592, -2.4676019165781327e-05, -0.0007926659309305251, -0.001401276676915586, -3.2186455882765586e-06, -1.1920928244535389e-07, -7.629365427419543e-06, -8.344646857949556e-07, -0.005674088839441538, -0.005333361681550741], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.002887843642383814, -2.145764938177308e-06, -3.576278118089249e-07, -0.423446923494339], "finish_reason": "stop"}], "metrics": {"energy": 259.4210055961609, "energy_per_token": 4.472775958554498, "time": 6.72235, "time_per_token": 0.11590258620689654}}
{"outputs": [{"text": " [tuple(itertools.zip_longest(*data_list, fillvalue=np.nan))]", "tokens": [" [", "tuple", "(", "iter", "tools", ".", "zip", "_", "long", "est", "(*", "data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", "))", "]", "\n"], "logprobs": [-1.890059232711792, -1.840131402015686, -0.12098997086286545, -0.4594517946243286, -0.0006208876147866249, -2.3841574147809297e-05, -0.5518819689750671, -4.994744449504651e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -0.005707870703190565, -0.057918138802051544, -0.005826986860483885, -0.00036173476837575436, -0.036211851984262466, -0.01159476488828659, -4.362964682513848e-05, -0.02616458386182785, -0.06674571335315704, -1.7881233361549675e-05, -0.019868405535817146, -0.0035600399132817984, -0.018582424148917198, -0.022109683603048325], "finish_reason": "stop"}, {"text": " [np.mean([float(x) for x in values if isinstance(x, (int, float))]) for values in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "float", "(", "x", ")", " for", " x", " in", " values", " if", " isinstance", "(", "x", ",", " (", "int", ",", " float", "))", "])", " for", " values", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.29094967246055603, -0.05944563448429108, -1.3232143828645349e-05, -0.2867288291454315, -0.16813689470291138, -1.8233882188796997, -0.0004925706889480352, -1.3464683294296265, -0.009627459570765495, -0.018640460446476936, -0.0002873722987715155, -9.035655966727063e-05, -2.0044360160827637, -0.009802891872823238, -0.22372941672801971, -6.782778655178845e-05, -0.004991569556295872, -0.0001896439935080707, -0.10490909963846207, -0.09068471193313599, -0.00015317220822907984, -0.0035107426811009645, -1.3423439264297485, -0.03512318432331085, -0.12041700631380081, -0.002647944027557969, -0.0002215855201939121, -0.0016106502152979374, -1.3470558769768104e-05, -1.1920928244535389e-07, -2.9682672902708873e-05, -7.152555099310121e-07, -0.002995292190462351, -0.0025465223006904125], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.0018070096848532557, -2.7418097943154862e-06, -4.768370445162873e-07, -0.4018462896347046], "finish_reason": "stop"}], "metrics": {"energy": 319.1389431715012, "energy_per_token": 5.147402309217761, "time": 9.047427, "time_per_token": 0.1459262419354839}}
{"outputs": [{"text": " zip(*[pad_tuple(d, data_list, fillvalue=np.nan) for d in data_list])", "tokens": [" zip", "(*", "[", "pad", "_", "tuple", "(", "d", ",", " data", "_", "list", ",", " fill", "value", "=", "np", ".", "nan", ")", " for", " d", " in", " data", "_", "list", "])", "\n"], "logprobs": [-3.1488113403320312, -0.7559774518013, -0.40325769782066345, -2.6820034980773926, -0.2522229254245758, -0.14947277307510376, -0.04416695609688759, -1.890032172203064, -0.06110493466258049, -1.955559492111206, -0.0018020119750872254, -0.00781324878334999, -2.3032596111297607, -1.2524698972702026, -0.3909016251564026, -0.060282137244939804, -0.09010794758796692, -2.7179348762729205e-05, -0.015066985040903091, -0.012421036139130592, -0.08125167340040207, -0.0002708068350329995, -0.0001003691868390888, -0.0018444921588525176, -0.00015162272029556334, -2.3841830625315197e-06, -0.006261967122554779, -0.005647062789648771], "finish_reason": "stop"}, {"text": " [np.mean([float(x) for x in sublist if isinstance(x, (int, float, complex)) and not np.isnan(x)]) for sublist in unzipped_data]", "tokens": [" [", "np", ".", "mean", "([", "float", "(", "x", ")", " for", " x", " in", " subl", "ist", " if", " isinstance", "(", "x", ",", " (", "int", ",", " float", ",", " complex", "))", " and", " not", " np", ".", "is", "nan", "(", "x", ")]", ")", " for", " subl", "ist", " in", " un", "z", "ipped", "_", "data", "]", "\n"], "logprobs": [-0.289712518453598, -0.039895929396152496, -1.4662635294371285e-05, -0.27256903052330017, -0.12859289348125458, -1.6960424184799194, -0.0004912600270472467, -1.4699777364730835, -0.009938400238752365, -0.015804622322320938, -0.0002865380665753037, -8.49926145747304e-05, -2.2855358123779297, -0.008920933119952679, -0.006213158369064331, -0.1642157882452011, -8.308542601298541e-05, -0.00200297380797565, -0.00014911970356479287, -0.0691118836402893, -0.08512824028730392, -0.00016139635408762842, -0.003339549293741584, -0.17887189984321594, -2.243556022644043, -0.14428463578224182, -1.6817861795425415, -0.10937900841236115, -0.030330559238791466, -1.0251946150674485e-05, -0.00013350549852475524, -0.003649600315839052, -0.00017236177518498152, -0.01676974818110466, -0.004238076042383909, -0.03391372784972191, -0.37617620825767517, -0.02112787589430809, -8.702239938429557e-06, -0.0004880429187323898, -0.001599224517121911, -1.2874520507466514e-05, 0.0, -2.4437606043647975e-05, -1.6689286894688848e-06, -0.004091345705091953, -0.002419879427179694], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.002186052966862917, -2.50339189733495e-06, -3.576278118089249e-07, -0.40966761112213135], "finish_reason": "stop"}], "metrics": {"energy": 368.6683213329316, "energy_per_token": 4.666687611809261, "time": 10.508265, "time_per_token": 0.13301601265822785}}
{"outputs": [{"text": " [list(map(lambda x: float(x) if x.isdigit() else np.nan,", "tokens": [" [", "list", "(", "map", "(", "lambda", " x", ":", " float", "(", "x", ")", " if", " x", ".", "is", "digit", "()", " else", " np", ".", "nan", ",", "\n"], "logprobs": [-1.713943600654602, -0.29242104291915894, -0.0006429274217225611, -2.7836103439331055, -0.0010482537327334285, -0.4219914972782135, -0.06420201063156128, -0.006584732793271542, -0.7674360871315002, -0.0014154425589367747, -0.0058676376938819885, -0.020097550004720688, -0.011221158318221569, -0.5481603741645813, -0.05061621218919754, -0.26435405015945435, -0.920619547367096, -0.0009379754774272442, -0.027915578335523605, -0.17238236963748932, -2.0146166207268834e-05, -0.030449669808149338, -0.010360977612435818, -3.0077102184295654], "finish_reason": "stop"}, {"text": " [np.mean([float(val) for val in pos if isinstance(val, (int, float, np.integer, np.floating))])", "tokens": [" [", "np", ".", "mean", "([", "float", "(", "val", ")", " for", " val", " in", " pos", " if", " isinstance", "(", "val", ",", " (", "int", ",", " float", ",", " np", ".", "integer", ",", " np", ".", "flo", "ating", "))", "])", "\n"], "logprobs": [-0.289712518453598, -0.039895929396152496, -1.4662635294371285e-05, -0.27256903052330017, -0.12859289348125458, -1.6960424184799194, -0.0004912600270472467, -1.216727614402771, -0.005457621067762375, -0.01575709879398346, -0.0002961912250611931, -8.248942322097719e-05, -2.1655702590942383, -1.316908359527588, -0.4339553713798523, -5.876845170860179e-05, -0.0035617027897387743, -0.00018487652414478362, -0.05435202643275261, -0.076738640666008, -0.00014995403762441128, -0.003392894519492984, -0.34890949726104736, -0.10843158513307571, -1.0013530300057027e-05, -2.0695996284484863, -0.05724763125181198, -0.00016675988445058465, -2.0265558760002023e-06, -0.0685504749417305, -2.0265558760002023e-06, -0.07084207981824875, -0.09805744886398315, -1.9119889736175537], "finish_reason": "stop"}, {"text": " mean_values", "tokens": [" mean", "_", "values", "\n"], "logprobs": [-0.002186052966862917, -2.50339189733495e-06, -3.576278118089249e-07, -0.40966761112213135], "finish_reason": "stop"}], "metrics": {"energy": 310.00728686714166, "energy_per_token": 5.000117530115188, "time": 8.839244, "time_per_token": 0.14256845161290324}}
