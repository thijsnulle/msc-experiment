{"outputs": [{"text": "response = requests.get(f\"{URL}{username}\")\n    response.raise_for_status()\n    data = response.json()\n    return {key: unicodedata.normalize('NFKD', str(data[key])).encode('ascii', 'ignore').decode() for key in data.keys()}", "tokens": ["response", " =", " requests", ".", "get", "(", "f", "\"", "{", "URL", "}{", "username", "}\"", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "data", " =", " response", ".", "json", "()", "\n", "    ", "return", " {", "key", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " str", "(", "data", "[", "key", "]))", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", " for", " key", " in", " data", ".", "keys", "()}"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -2.2964839935302734, -0.8914044499397278, -0.008215679787099361, -0.001995835453271866, -0.028885768726468086, -0.0030091977678239346, -0.013017082586884499, -0.03032824583351612, -0.024852141737937927, -0.0970814898610115, -0.24863320589065552, -0.0027814533095806837, -0.000766102981287986, -4.684815212385729e-05, -4.088794958079234e-05, -0.0007956438348628581, -1.645074735279195e-05, -0.0009391664643771946, -0.024286845698952675, -0.19959312677383423, -0.9817720055580139, -0.012544771656394005, -0.029950005933642387, -8.618460560683161e-05, -0.0010259846458211541, -0.0025618611834943295, -0.01317568589001894, -0.2261684089899063, -1.015185832977295, -0.2128319889307022, -1.4644248485565186, -0.453846275806427, -0.19716088473796844, -0.0012218636693432927, -5.829164365422912e-05, -9.715084888739511e-05, -5.23315102327615e-05, -0.0011458981316536665, -9.595887240720913e-05, -0.11593671143054962, -0.01259068213403225, -0.05779854208230972, -0.00011562632425921038, -0.00015400654228869826, -0.9517970085144043, -0.0010178867960348725, -2.7787070274353027, -0.014436440542340279, -0.0005707303644157946, -0.021318688988685608, -0.20323976874351501, -0.0002503081923350692, -0.0122537175193429, -0.2921850383281708, -0.0016609933227300644, -5.1973900554003194e-05, -0.06840631365776062, -0.004503821488469839, -0.000607782625593245, -0.1251048594713211, -0.011962814256548882, -0.32906219363212585, -0.403115451335907, -0.006463219411671162, -0.006130106747150421, -0.031580280512571335, -2.778935432434082, -0.0020352143328636885, -0.16524462401866913], "finish_reason": "stop"}], "metrics": {"energy": 81.26421815872192, "energy_per_token": 1.083522908782959, "time": 2.9610338, "time_per_token": 0.03948045066666667}}
{"outputs": [{"text": "response = requests.get(URL + username)\n\n    response.raise_for_status()\n    json_data = response.json()\n\n    return unicodedata.normalize('NFKD', json_data['name']).encode('ascii', 'ignore')\n\n@task\ndef task_func_2(username: str, text: str) -> Optional[str]:\n    \"\"\"\n    Retrieves user information from the GitHub API for a given username and normalizes all string data to ASCII,\n    checks if the provided text matches any string property of the user, and returns the normalized username if the\n    text matches. This function demonstrates data retrieval from a web API and handling of Unicode data normalization\n    as well as conditional execution based on input parameters.\n\n    Parameters:\n    username (str): The GitHub username.\n    text (str): The text to match against user properties.\n\n    Returns:\n    str | None: The normalized username if the text matches, otherwise None.\n\n    Raises:\n    requests.exceptions.HTTPError: For any HTTP response indicating an error.\n\n    Requirements:\n    -", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "json", "_", "data", " =", " response", ".", "json", "()", "\n", "\n", "    ", "return", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " json", "_", "data", "['", "name", "'])", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", "\n", "\n", "@", "task", "\n", "def", " task", "_", "func", "_", "2", "(", "username", ":", " str", ",", " text", ":", " str", ")", " ->", " Optional", "[", "str", "]:", "\n", "    ", "\"", "\"", "\"", "\n", "    ", "Ret", "rie", "ves", " user", " information", " from", " the", " GitHub", " API", " for", " a", " given", " username", " and", " normal", "izes", " all", " string", " data", " to", " ASC", "II", ",", "\n", "    ", "checks", " if", " the", " provided", " text", " matches", " any", " string", " property", " of", " the", " user", ",", " and", " returns", " the", " normalized", " username", " if", " the", "\n", "    ", "text", " matches", ".", " This", " function", " demonstrates", " data", " retrieval", " from", " a", " web", " API", " and", " handling", " of", " Un", "icode", " data", " normalization", "\n", "    ", "as", " well", " as", " conditional", " execution", " based", " on", " input", " parameters", ".", "\n", "\n", "    ", "Parameters", ":", "\n", "    ", "username", " (", "str", "):", " The", " GitHub", " username", ".", "\n", "    ", "text", " (", "str", "):", " The", " text", " to", " match", " against", " user", " properties", ".", "\n", "\n", "    ", "Returns", ":", "\n", "    ", "str", " |", " None", ":", " The", " normalized", " username", " if", " the", " text", " matches", ",", " otherwise", " None", ".", "\n", "\n", "    ", "Ra", "ises", ":", "\n", "    ", "requests", ".", "except", "ions", ".", "HTTP", "Error", ":", " For", " any", " HTTP", " response", " indicating", " an", " error", ".", "\n", "\n", "    ", "Requ", "irements", ":", "\n", "    ", "-"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -0.0999329462647438, -0.015437280759215355, -0.030148398131132126, -0.037500519305467606, -2.605867385864258, -0.00029380773776210845, -1.7241661548614502, -0.02203143946826458, -0.0014782940270379186, -5.2569914259947836e-05, -3.0517112463712692e-05, -0.0005113962688483298, -1.6569954823353328e-05, -0.0014284178614616394, -0.04417060688138008, -1.256691336631775, -3.1732921600341797, -0.3079507350921631, -0.5582183599472046, -0.005397627595812082, -0.03312671184539795, -0.00013493580627255142, -0.0018663860391825438, -0.001790707348845899, -0.016255928203463554, -0.5201670527458191, -0.00034791138023138046, -2.417579412460327, -3.183450222015381, -0.001207933179102838, -8.201262971851975e-05, -2.5033637939486653e-05, -0.0005161621957086027, -0.0007743220776319504, -2.3483953555114567e-05, -0.1389746218919754, -0.013945519924163818, -0.03384815528988838, -4.649054244509898e-05, -0.00031120702624320984, -0.12205525487661362, -0.002882851054891944, -8.475421054754406e-05, -1.0025197267532349, -1.7071434259414673, -0.020656343549489975, -0.13075821101665497, -0.0021577426232397556, -0.020372780039906502, -0.1568492352962494, -0.0008616310660727322, -0.0004956685588695109, -0.0528201162815094, -0.003105343785136938, -0.002559126354753971, -1.5062803030014038, -0.022664908319711685, -3.500070333480835, -1.9106813669204712, -0.7793348431587219, -0.055680353194475174, -1.43991219997406, -0.08795870095491409, -0.9941322207450867, -0.6393615007400513, -1.3872300386428833, -0.19392676651477814, -0.15321311354637146, -2.3437464237213135, -0.029226090759038925, -2.85373854637146, -4.558541297912598, -0.15495610237121582, -0.07082775980234146, -0.5442956686019897, -0.0005554801900871098, -3.7285046577453613, -0.0016467118402943015, -0.872775673866272, -0.00585756404325366, -0.005501961335539818, -0.00502750976011157, -0.031948089599609375, -0.00010752100206445903, -2.0861407392658293e-05, -0.011928888969123363, -0.01739448867738247, -1.0889859199523926, -0.001942058908753097, -1.5020257706055418e-05, -0.2969268262386322, -0.0321989543735981, -0.0287669338285923, -0.028571512550115585, -0.004332916811108589, -0.0004990047891624272, -0.04442230239510536, -0.013966679573059082, -0.0010846928926184773, -0.006533926352858543, -2.2537713050842285, -2.1338367462158203, -0.000576449150685221, -0.180184468626976, -0.07560249418020248, -0.038367968052625656, -0.09194251149892807, -0.06398454308509827, -0.00029380773776210845, -1.2231128215789795, -0.019059261307120323, -0.0038153964560478926, -2.8927395343780518, -0.3738613724708557, -0.20822763442993164, -2.778589963912964, -0.1576465219259262, -1.2111592292785645, -1.9394488334655762, -2.9783403873443604, -4.300649166107178, -0.6877949237823486, -0.06282205134630203, -0.40363556146621704, -1.2007060050964355, -0.07528102397918701, -0.07773707807064056, -0.40741586685180664, -1.9826923608779907, -1.7140097618103027, -0.5926312208175659, -1.4872950315475464, -0.18581408262252808, -0.0007026110542938113, -0.4926636219024658, -0.15588200092315674, -0.7281604409217834, -0.7109735012054443, -0.04474426805973053, -0.10739514976739883, -0.40783068537712097, -0.07484287768602371, -0.09436876326799393, -0.02578313834965229, -0.008890568278729916, -0.0018993448466062546, -0.9838109612464905, -1.1144565343856812, -0.008100513368844986, -0.07139810174703598, -2.2291887944447808e-05, -0.013405075296759605, -0.19407139718532562, -0.560343325138092, -0.0024535334669053555, -2.710773468017578, -0.018684688955545425, -0.0024612629786133766, -2.6359972953796387, -1.5492032766342163, -1.0822734832763672, -0.002917202888056636, -2.8741612434387207, -2.7890639305114746, -0.04497872665524483, -0.010679356753826141, -0.005852586589753628, -0.0009488132782280445, -0.01925397850573063, -0.0026721982285380363, -8.570780482841656e-05, -0.00846583116799593, -0.026086075231432915, -0.006473049987107515, -0.0006443570018745959, -0.0008629412623122334, -0.015215166844427586, -0.0065969303250312805, -0.0006305375136435032, -0.0669160932302475, -0.002215313958004117, -0.014315525069832802, -0.0011941214324906468, -0.003213600954040885, -0.005908997263759375, -0.004544644616544247, -0.4160648584365845, -0.5118688344955444, -0.07739444822072983, -1.0511305332183838, -0.19537723064422607, -1.6912649869918823, -0.8292571306228638, -0.05868431180715561, -0.011467023752629757, -0.003937113098800182, -5.435795901576057e-05, -0.004766767844557762, -0.0008089845650829375, -0.00018082413589581847, -0.0012311505852267146, -0.9708108901977539, -1.766080379486084, -0.007192196324467659, -0.009534536860883236, -0.06352227926254272, -0.04602791741490364, -0.4534539580345154, -0.136537566781044, -0.06775940954685211, -0.15174561738967896, -0.008779260329902172, -1.1864112615585327, -0.1805560439825058, -0.072673499584198, -0.010716389864683151, -0.003068384015932679, -0.01476315688341856, -0.00010525626566959545, -0.3209059238433838, -8.034383063204587e-05, -8.320462075062096e-05, -0.0002320735511602834, -0.0008207766804844141, -0.04674170911312103, -1.0609570381348021e-05, -0.001091480371542275, 0.0, -4.2199197196168825e-05, -0.0013849677052348852, -8.308542601298541e-05, -0.0010851691477000713, -0.006399969570338726, -0.00025245340657420456, -0.00036244976217858493, -0.0015303102554753423, -0.0006772369961254299, -0.0004326361231505871, -3.266281055402942e-05, -0.004514976870268583, -0.0007855190197005868, -0.12577491998672485, -0.0002119316632160917, -0.10937473922967911, -0.0002833203470800072, -0.0006932000978849828, -0.0002300474588992074, -0.0037783440202474594, -0.005684282630681992], "finish_reason": "length"}], "metrics": {"energy": 251.2708165397643, "energy_per_token": 0.9815266271084543, "time": 10.936958, "time_per_token": 0.0427224921875}}
{"outputs": [{"text": "r = requests.get(URL + username)\n    r.raise_for_status()\n    return {k: unicodedata.normalize('NFKD', v).encode('ascii', 'ignore').decode('ascii')\n            for k, v in r.json().items()}", "tokens": ["r", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "r", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "return", " {", "k", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " v", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ascii", "')", "\n", "            ", "for", " k", ",", " v", " in", " r", ".", "json", "()", ".", "items", "()", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-3.3588240146636963, -0.006494724191725254, -0.0036988905631005764, -7.426462980220094e-05, -0.0003483880718704313, -0.00575943011790514, -0.084664486348629, -0.10196481645107269, -0.015335151925683022, -0.03099820204079151, -0.03415568917989731, -0.08438743650913239, -0.25085246562957764, -0.002170232590287924, -0.0016658727545291185, -2.3841830625315197e-06, -6.19869097135961e-05, -0.00015853578224778175, -1.7523612768854946e-05, -0.0015979153104126453, -0.0253963153809309, -0.1252346634864807, -1.3325021266937256, -0.9335300922393799, -0.5019723773002625, -0.3055295944213867, -0.42112576961517334, -0.001091004116460681, -6.0437283536884934e-05, -7.033100700937212e-05, -4.792098479811102e-05, -0.001887565478682518, -4.95898348162882e-05, -0.06533576548099518, -0.007787463255226612, -0.04030454903841019, -0.00017021637177094817, -0.0002907091984525323, -0.13040366768836975, -0.027109673246741295, -0.03370685875415802, -0.00040665941196493804, -0.004109866451472044, -0.27355799078941345, -0.0013630633475258946, -6.389413465512916e-05, -0.06849414855241776, -0.0022999995853751898, -0.0005279577453620732, -0.3668368458747864, -0.008389114402234554, -1.0747002363204956, -0.36294296383857727, -0.010979830287396908, -0.7554345726966858, -0.1345420926809311, -0.06857462972402573, -0.04720224067568779, -0.00012432756193447858, -0.019144287332892418, -0.0018128404626622796, -0.031869687139987946, -0.00014518637908622622, -0.0002910667099058628, -0.024698985740542412, -0.004313569515943527, -0.005532074254006147, -0.8395933508872986, -1.0545804500579834, -2.3841855067985307e-07, -1.0728830375228426e-06, -0.00028153270250186324, -8.487341256113723e-05, -0.08881980180740356], "finish_reason": "stop"}], "metrics": {"energy": 68.92899215126039, "energy_per_token": 0.9314728669089242, "time": 2.9615319, "time_per_token": 0.04002070135135136}}
{"outputs": [{"text": "response = requests.get(f'{URL}{username}', timeout=5)\n    response.raise_for_status()\n    data = response.json()\n    return {key.encode('ASCII').decode('ASCII'): (value.encode('ASCII').decode('ASCII') if isinstance(value, str) else value) for key, value in data.items()}", "tokens": ["response", " =", " requests", ".", "get", "(", "f", "'{", "URL", "}{", "username", "}'", ",", " timeout", "=", "5", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "data", " =", " response", ".", "json", "()", "\n", "    ", "return", " {", "key", ".", "encode", "('", "ASC", "II", "')", ".", "decode", "('", "ASC", "II", "')", ":", " (", "value", ".", "encode", "('", "ASC", "II", "')", ".", "decode", "('", "ASC", "II", "')", " if", " isinstance", "(", "value", ",", " str", ")", " else", " value", ")", " for", " key", ",", " value", " in", " data", ".", "items", "()", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -2.2964839935302734, -0.5416787266731262, -0.0007830176036804914, -0.040547605603933334, -0.002678974997252226, -0.7341548204421997, -0.03863752633333206, -0.2015947848558426, -0.01693701557815075, -0.7843005061149597, -0.08479109406471252, -0.03401317074894905, -0.11372561752796173, -0.36982738971710205, -0.0033407374285161495, -0.001620647613890469, -1.597391747054644e-05, -3.099393507000059e-05, -0.0006484074983745813, -1.4662635294371285e-05, -0.000940714729949832, -0.02149861678481102, -0.1650036871433258, -1.1559940576553345, -0.015225616283714771, -0.05291283503174782, -0.0001134808044298552, -0.0015411416534334421, -0.0028460018802434206, -0.016957761719822884, -0.18940815329551697, -0.8590528964996338, -0.21416543424129486, -1.0749543905258179, -1.0008630752563477, -1.311389446258545, -0.08555447310209274, -1.61083984375, -4.8993817472364753e-05, -0.4765697717666626, -0.021470731124281883, -0.001279846066609025, -0.5501554012298584, -0.31272369623184204, -0.00029690624796785414, -0.0012284121476113796, -0.06329593807458878, -3.584759473800659, -0.5954381823539734, -0.19347812235355377, -0.029526829719543457, -0.004724292550235987, -0.010573084466159344, -8.093983342405409e-05, -0.01248979289084673, -0.05694498121738434, -0.0007606235449202359, -0.013196039013564587, -0.03655727580189705, -8.034383063204587e-05, -0.8636462092399597, -0.20516346395015717, -0.15281283855438232, -0.0008188708452507854, -0.03904402628540993, -0.00026294111739844084, -0.04124106466770172, -0.0006392342620529234, -0.052330151200294495, -0.01448038499802351, -0.01374529767781496, -0.25644275546073914, -0.043204180896282196, -0.0002951186615973711, -0.014009116217494011, -0.0015434031374752522, -0.005038421601057053, -0.002437717281281948, -0.0008954567601904273, -1.8665313720703125, -0.41165590286254883, -3.576278118089249e-07, -1.7881377516459906e-06, -0.0006429274217225611, -0.00014435203047469258, -0.08269535005092621], "finish_reason": "stop"}], "metrics": {"energy": 122.64878577423096, "energy_per_token": 1.3331389758068581, "time": 3.7947178, "time_per_token": 0.04124693260869565}}
{"outputs": [{"text": "try:\n        response = requests.get(URL + username)\n        response.raise_for_status()\n        return response.json()\n\n    except requests.exceptions.HTTPError as e:\n        print(f'ERROR: {e}')", "tokens": ["try", ":", "\n", "        ", "response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "        ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "        ", "return", " response", ".", "json", "()", "\n", "\n", "    ", "except", " requests", ".", "except", "ions", ".", "HTTP", "Error", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "ERROR", ":", " {", "e", "}", "')", "\n", "\n", "def"], "logprobs": [-2.3715593814849854, -0.00035851728171110153, -0.0015113847330212593, -0.005200667306780815, -0.5456674695014954, -0.0021089711226522923, -0.00201974855735898, -3.0040289857424796e-05, -0.0002857038634829223, -0.0015673269517719746, -0.1150703951716423, -0.06892184913158417, -0.012981193140149117, -0.03430072218179703, -0.023834729567170143, -0.029883479699492455, -0.07986391335725784, -0.0005504761938937008, -0.0002547178009990603, -4.529942543740617e-06, -4.410646579344757e-05, -0.00013243274588603526, -1.5616295058862306e-05, -0.0007065422250889242, -0.026959413662552834, -0.28490951657295227, -1.580021858215332, -1.0767426490783691, -0.0041474997997283936, -0.00035720644518733025, -0.02168772742152214, -0.059809401631355286, -2.47884202003479, -0.004121856763958931, -0.032836053520441055, -0.04411528632044792, -3.373566141817719e-05, -0.02760867029428482, -5.960462772236497e-07, -0.00047291061491705477, -0.03742438927292824, -0.00028772983932867646, -0.1930595338344574, -0.9838959574699402, -0.0006328010931611061, -0.00677064573392272, -0.005301938857883215, -0.6553288698196411, -0.14728426933288574, -0.7787395119667053, -0.7038655877113342, -3.2163209915161133, -0.18586328625679016, -0.1930234581232071, -0.12595097720623016, -0.09177982807159424, -0.031685613095760345, -0.037438973784446716, -0.35945871472358704, -0.634046196937561], "finish_reason": "stop"}], "metrics": {"energy": 44.02480333137512, "energy_per_token": 0.7337467221895853, "time": 2.3296144, "time_per_token": 0.03882690666666667}}
{"outputs": [{"text": "# Retrieve user information from GitHub\n    response = requests.get(URL + username)\n    response.raise_for_status()\n\n    # Normalize all string data to ASCII and return a dictionary with the normalized data\n    return {'login': response.json()[\"login\"].encode('ascii', 'ignore').decode('ascii')}", "tokens": ["#", " Ret", "rieve", " user", " information", " from", " GitHub", "\n", "    ", "response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "\n", "    ", "#", " Normal", "ize", " all", " string", " data", " to", " ASC", "II", " and", " return", " a", " dictionary", " with", " the", " normalized", " data", "\n", "    ", "return", " {'", "login", "':", " response", ".", "json", "()[", "\"", "login", "\"", "]", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ascii", "')}", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.621553659439087, -1.5557175874710083, -0.1880454123020172, -0.5959588885307312, -0.5504467487335205, -0.27229177951812744, -1.1008762121200562, -2.87217378616333, -0.0024711331352591515, -0.22479566931724548, -0.0016600412782281637, -0.002337344689294696, -3.194758028257638e-05, -0.00036054308293387294, -0.003306162776425481, -0.11330399662256241, -0.06734948605298996, -0.011448049917817116, -0.02973051369190216, -0.01996750198304653, -0.1281728744506836, -0.34038957953453064, -0.001465557492338121, -0.0005080600967630744, -2.753696753643453e-05, -4.160317621426657e-05, -0.00031263710116036236, -1.823885577323381e-05, -0.0005059154354967177, -0.05990596488118172, -2.142698287963867, -0.00038795097498223186, -0.3202417492866516, -0.4525255262851715, -0.010859557427465916, -0.47461971640586853, -0.10770421475172043, -0.315076619386673, -0.08745955675840378, -0.00573691027238965, -0.0002165798214264214, -2.8526508808135986, -0.2423221468925476, -0.7163229584693909, -0.034681353718042374, -3.102865219116211, -0.1634158343076706, -0.6003521084785461, -0.026023590937256813, -0.038592565804719925, -0.002221261151134968, -0.5035107135772705, -3.0859487056732178, -0.01801965944468975, -0.003731551580131054, -2.5263900756835938, -0.00040236959466710687, -0.10726751387119293, -1.8855267763137817, -0.3789195418357849, -0.051562488079071045, -6.627816765103489e-05, -0.12354008108377457, -1.537327527999878, -0.16787226498126984, -0.2260240763425827, -0.1998130828142166, -0.045405324548482895, -6.949660019017756e-05, -0.1438903659582138, -0.09322696179151535, -0.0020428281277418137, -0.011353174224495888, -0.004531353246420622, -0.8524103760719299, -0.13111086189746857, -0.365175724029541, -1.4532158374786377, -3.099436753473128e-06, -9.536738616588991e-07, -0.0007265550084412098, -0.00010275312524754554, -0.08353511989116669], "finish_reason": "stop"}], "metrics": {"energy": 114.21216209220883, "energy_per_token": 1.376050145689263, "time": 3.3803294, "time_per_token": 0.04072686024096386}}
{"outputs": [{"text": "response = requests.get(URL + username)\n    response.raise_for_status()\n    return {\n        'login': unicodedata.normalize('NFKD', data).encode('ascii', 'ignore').decode() for data in response.json()\n    }", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "return", " {", "\n", "        ", "'", "login", "':", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " data", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", " for", " data", " in", " response", ".", "json", "()", "\n", "    ", "}", "\n", "\n", "if"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -0.0999329462647438, -0.015437280759215355, -0.030148398131132126, -0.037500519305467606, -0.07681073248386383, -0.17982172966003418, -0.0010698077967390418, -0.0010213402565568686, -3.802703940891661e-05, -3.790783375734463e-05, -0.0007538337376900017, -2.2053474822314456e-05, -0.0008671099785715342, -0.02207306958734989, -0.14802886545658112, -1.2857455015182495, -1.0917249917984009, -1.0413719415664673, -0.012562193907797337, -0.2162822186946869, -0.045081060379743576, -0.005583287216722965, -0.5924801230430603, -0.0014419882791116834, -4.577531944960356e-05, -8.987976616481319e-05, -0.00030155404238030314, -0.0029774641152471304, -0.0004888770054094493, -0.06615352630615234, -0.023114409297704697, -0.07098455727100372, -0.0002553137019276619, -0.0001646144810365513, -1.7494310140609741, -0.9414423108100891, -0.02382006123661995, -0.003572037210687995, -0.010789155960083008, -0.2567703425884247, -0.0013521108776330948, -8.225102646974847e-05, -0.032716188579797745, -0.0019647832959890366, -0.0018384236609563231, -0.07285572588443756, -0.015839824452996254, -0.35432159900665283, -2.5551657676696777, -0.09133371710777283, -0.021218443289399147, -0.1616741418838501, -0.00279357866384089, -0.006957944482564926, -0.059209827333688736, -0.35790905356407166, -0.04314092919230461, -0.40197595953941345, -0.22296614944934845, -0.022519923746585846, -1.269998550415039], "finish_reason": "stop"}], "metrics": {"energy": 57.25747752761841, "energy_per_token": 0.8420217283473296, "time": 2.753072, "time_per_token": 0.04048635294117647}}
{"outputs": [{"text": "response = requests.get(URL + username)\n    if response.status_code != 200:\n        raise requests.exceptions.HTTPError(response.status_code)\n    # Unicode normalization for all strings\n    data = response.json()\n    data = {k: unicodedata.normalize('NFKD', v).encode('ascii', 'ignore').decode()\n            for k, v in data.items()}\n    return data", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "if", " response", ".", "status", "_", "code", " ", "!", "=", " ", "2", "0", "0", ":", "\n", "        ", "raise", " requests", ".", "except", "ions", ".", "HTTP", "Error", "(", "response", ".", "status", "_", "code", ")", "\n", "    ", "#", " Un", "icode", " normalization", " for", " all", " strings", "\n", "    ", "data", " =", " response", ".", "json", "()", "\n", "    ", "data", " =", " {", "k", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " v", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "            ", "for", " k", ",", " v", " in", " data", ".", "items", "()}", "\n", "    ", "return", " data", "\n", "\n", "def"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -0.0999329462647438, -0.015437280759215355, -0.030148398131132126, -0.037500519305467606, -0.07681073248386383, -2.5564486980438232, -0.033236611634492874, -0.0006723527330905199, -0.10858549177646637, -0.0003036991402041167, -1.0251946150674485e-05, -0.9718334078788757, -5.602820692729438e-06, -7.748573807475623e-06, -0.013815491460263729, -0.0016600412782281637, -6.437280717364047e-06, -6.97350042173639e-05, -0.0003813969960901886, -0.020378386601805687, -0.0017849955474957824, -0.2160118818283081, -0.07549229264259338, -4.339123915997334e-05, -0.02975863218307495, -3.576278118089249e-07, -8.034383063204587e-05, -0.0019370617810636759, -0.00028832571115344763, -0.5243804454803467, -0.34551283717155457, -0.11905717849731445, -0.4379948377609253, -0.0006121906917542219, -0.018022937700152397, -0.02861240692436695, -0.017288926988840103, -0.3146074712276459, -3.8268089294433594, -3.6676812171936035, -0.09065738320350647, -0.9252707362174988, -3.076782703399658, -0.9534274935722351, -2.1007442474365234, -0.985149085521698, -0.004563037771731615, -1.7150356769561768, -0.015947062522172928, -0.7286897897720337, -0.00011264643399044871, -0.002090889262035489, -0.0035827276296913624, -0.012721222825348377, -0.016691671684384346, -1.9852344989776611, -1.3758440017700195, -0.4310995638370514, -0.7105193138122559, -0.16978538036346436, -0.5287765264511108, -0.0008995062671601772, -2.9801878554280847e-05, -8.546940807718784e-05, -3.790783375734463e-05, -0.0011138670379295945, -5.3165931603871286e-05, -0.04144866764545441, -0.012900232337415218, -0.127357617020607, -0.0001486429391661659, -7.021180499577895e-05, -0.24036669731140137, -0.018211886286735535, -0.04658333584666252, -0.00041214076918549836, -0.0033056873362511396, -0.29277941584587097, -0.004938784521073103, -6.913899414939806e-05, -0.036871444433927536, -0.00421172333881259, -0.0007744412287138402, -0.15010926127433777, -0.007991128601133823, -0.6407946348190308, -0.8802046775817871, -0.055966816842556, -0.13669811189174652, -0.03245760500431061, -8.83301836438477e-05, -0.00889198575168848, -0.0004629017203114927, -0.003181754844263196, -0.00047874910524114966, -0.0012428186601027846, -0.10729995369911194, -0.005185013171285391, -0.050685904920101166, -0.05318709462881088, -0.007096561137586832, -0.262204647064209, -0.014794048853218555, -0.6395516991615295], "finish_reason": "stop"}], "metrics": {"energy": 120.45391918945312, "energy_per_token": 1.0851704431482263, "time": 4.6429105, "time_per_token": 0.041828022522522525}}
{"outputs": [{"text": "response = requests.get(URL + username)\n    response.raise_for_status()\n    return {\n        'login': unicodedata.normalize('NFKD', data).encode('ASCII', 'ignore').decode('ASCII')\n        for key, data in response.json().items()\n        if key != 'url'\n    }", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "return", " {", "\n", "        ", "'", "login", "':", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " data", ")", ".", "encode", "('", "ASC", "II", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ASC", "II", "')", "\n", "        ", "for", " key", ",", " data", " in", " response", ".", "json", "()", ".", "items", "()", "\n", "        ", "if", " key", " ", "!", "=", " '", "url", "'", "\n", "    ", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -0.0999329462647438, -0.015437280759215355, -0.030148398131132126, -0.037500519305467606, -0.07681073248386383, -0.17982172966003418, -0.0010698077967390418, -0.0010213402565568686, -3.802703940891661e-05, -3.790783375734463e-05, -0.0007538337376900017, -2.2053474822314456e-05, -0.0008671099785715342, -0.02207306958734989, -0.14802886545658112, -1.2857455015182495, -1.0917249917984009, -1.0413719415664673, -0.012562193907797337, -0.2162822186946869, -0.045081060379743576, -0.005583287216722965, -0.5924801230430603, -0.0014419882791116834, -4.577531944960356e-05, -8.987976616481319e-05, -0.00030155404238030314, -0.0029774641152471304, -0.0004888770054094493, -0.06615352630615234, -0.023114409297704697, -0.07098455727100372, -0.0002553137019276619, -0.0001646144810365513, -1.7494310140609741, -0.9414423108100891, -0.02382006123661995, -0.003572037210687995, -0.010789155960083008, -1.4900944232940674, -8.642300235806033e-05, -0.0017109769396483898, -0.00020692592079285532, -0.024270324036478996, -0.010467508807778358, -0.0019311128417029977, -0.049201589077711105, -0.0176081545650959, -1.594102382659912, -0.17812387645244598, -0.004223475232720375, -0.0311970803886652, -0.12838374078273773, -0.04855860024690628, -0.024810396134853363, -2.3134422302246094, -0.00037424711626954377, -0.027894362807273865, -0.004260867368429899, -0.011895906180143356, -0.00038389943074434996, -0.0009762050467543304, -0.013246743939816952, -0.005683927331119776, -0.0029913701582700014, -0.020384928211569786, -0.08965640515089035, -1.2805817127227783, -0.05170105770230293, -0.8168624639511108, -0.25472092628479004, -6.6756979322235566e-06, -0.00040999590419232845, -0.011179899796843529, -0.5007229447364807, -0.20160794258117676, -0.3280782997608185, -0.05618276447057724, -0.980674147605896, -3.576278118089249e-07, -1.311301275563892e-06, -0.0002637753786984831, -0.00013100242358632386, -0.12255452573299408], "finish_reason": "stop"}], "metrics": {"energy": 121.13941326522823, "energy_per_token": 1.3312023435739366, "time": 3.5879195, "time_per_token": 0.03942768681318681}}
{"outputs": [{"text": "response = requests.get(URL + username)\n    response.raise_for_status()\n    result = response.json()\n    for key, value in result.items():\n        # Normalize string values to ASCII\n        if isinstance(value, str):\n            result[key] = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode()\n    return result", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "result", " =", " response", ".", "json", "()", "\n", "    ", "for", " key", ",", " value", " in", " result", ".", "items", "():", "\n", "        ", "#", " Normal", "ize", " string", " values", " to", " ASC", "II", "\n", "        ", "if", " isinstance", "(", "value", ",", " str", "):", "\n", "            ", "result", "[", "key", "]", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " value", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "    ", "return", " result", "\n", "\n", "def"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -0.0999329462647438, -0.015437280759215355, -0.030148398131132126, -0.037500519305467606, -0.07681073248386383, -0.17982172966003418, -0.0010698077967390418, -0.0010213402565568686, -3.802703940891661e-05, -3.790783375734463e-05, -0.0007538337376900017, -2.2053474822314456e-05, -0.0008671099785715342, -0.02207306958734989, -0.14802886545658112, -3.2734241485595703, -0.032231736928224564, -0.07748347520828247, -0.00013290952483657748, -0.0006563892820850015, -0.0046017225831747055, -0.017467942088842392, -0.25513046979904175, -1.0326159000396729, -0.292697936296463, -0.5479522347450256, -0.0776105597615242, -0.00013457823661156, -0.023101596161723137, -0.0058275796473026276, -0.0028033265843987465, -0.00020930961181875318, -0.005561237223446369, -0.0042472160421311855, -2.821317434310913, -0.8155538439750671, -0.10411707311868668, -1.8369193077087402, -0.4916101396083832, -0.2788866460323334, -0.023175213485956192, -0.00020919041708111763, -0.5640069842338562, -0.00027736154152080417, -0.17505328357219696, -0.06759831309318542, -6.305972783593461e-05, -0.00833355262875557, -8.546940807718784e-05, -0.00973560381680727, -0.009629467502236366, -0.0013915151357650757, -0.0005934861255809665, -0.05867835506796837, -0.0005881248507648706, -0.0005996812833473086, -0.0004170263418927789, -7.068861305015162e-05, -0.030619174242019653, -0.00029845553217455745, -1.4305012882687151e-05, -0.00010799778101500124, -8.34461570775602e-06, -0.0011241076281294227, -5.936446541454643e-05, -0.055895235389471054, -0.01392353605479002, -0.023357834666967392, -2.4199192921514623e-05, -9.60780744208023e-05, -0.008403299376368523, -0.018216334283351898, -0.004596501123160124, -0.0005548844928853214, -0.016041504219174385, -0.14513055980205536, -0.006560454610735178, -9.858122211880982e-05, -0.013342498801648617, -0.0020129671320319176, -0.00020930961181875318, -0.049087755382061005, -0.007669763173907995, -0.3551446497440338, -0.017238661646842957, -0.18426738679409027, -0.019649026915431023, -0.002823891816660762, -0.41861918568611145, -0.010984429158270359, -0.6752213835716248], "finish_reason": "stop"}], "metrics": {"energy": 101.99336889266968, "energy_per_token": 1.0407486621700988, "time": 4.013195, "time_per_token": 0.040950969387755096}}
{"outputs": [{"text": "response = requests.get(URL+username)\n    response.raise_for_status()\n\n    json_data = response.json()\n\n    # Normalize all string values to ASCII\n    return {k: unicodedata.normalize('NFKD', v).encode('ascii', 'ignore').decode() for k, v in json_data.items()}", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", "+", "username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "\n", "    ", "json", "_", "data", " =", " response", ".", "json", "()", "\n", "\n", "    ", "#", " Normal", "ize", " all", " string", " values", " to", " ASC", "II", "\n", "    ", "return", " {", "k", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " v", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", " for", " k", ",", " v", " in", " json", "_", "data", ".", "items", "()", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -2.364152193069458, -0.01644650101661682, -0.027389824390411377, -0.04664238914847374, -0.12100813537836075, -0.35369935631752014, -0.004872472491115332, -0.0014193708775565028, -6.007967749610543e-05, -4.6132929128361866e-05, -0.00109576724935323, -2.0503786799963564e-05, -0.0021577426232397556, -0.020389366894960403, -2.3677244186401367, -0.0005951540661044419, -2.8416852951049805, -0.407932311296463, -0.3654901683330536, -0.00980407278984785, -0.06593402475118637, -0.00011860620725201443, -0.0017172842053696513, -0.0032399799674749374, -0.015562168322503567, -0.7753397226333618, -0.0011745942756533623, -1.6862963438034058, -0.5735542178153992, -0.12167840451002121, -0.4797852635383606, -0.23317521810531616, -0.5388098955154419, -0.1440446823835373, -0.012577615678310394, -0.0001308832288486883, -0.40736111998558044, -0.005116582848131657, -3.123328685760498, -0.16615478694438934, -1.0565024614334106, -0.19751405715942383, -0.32293978333473206, -0.0011023165425285697, -3.540453326422721e-05, -0.00015567521040793508, -3.6238969187252223e-05, -0.0016349294455721974, -4.2676016164477915e-05, -0.05504230409860611, -0.007362258154898882, -0.06651072949171066, -9.011816291604191e-05, -0.00011765264935093, -0.17695371806621552, -0.026980997994542122, -0.005357550922781229, -0.0003586364327929914, -0.003868834814056754, -0.3773943781852722, -0.0020208191126585007, -5.1973900554003194e-05, -0.10501546412706375, -0.003829528111964464, -0.0006743779522366822, -0.18167845904827118, -0.00857930164784193, -0.47846719622612, -0.7468509078025818, -0.03561866283416748, -0.00021419614495243877, -0.04121670126914978, -0.002089104847982526, -0.008234124630689621, -0.0005088941543363035, -1.4066597032069694e-05, -0.005396679043769836, -0.001023364719003439, -1.2684214115142822, -0.9656791687011719, -5.960462772236497e-07, -1.0728830375228426e-06, -0.00021884430316276848, -8.11782301752828e-05, -0.07998739182949066], "finish_reason": "stop"}], "metrics": {"energy": 83.01667018222807, "energy_per_token": 0.9023551106763921, "time": 3.807087, "time_per_token": 0.04138138043478261}}
{"outputs": [{"text": "response = requests.get(URL + username)\n    response.raise_for_status()\n    result = response.json()\n\n    def normalize(data):\n        if isinstance(data, str):\n            data = data.encode('utf-8')\n            return unicodedata.normalize('NFKD', data).decode('ascii')\n        elif isinstance(data, dict):\n            return {k: normalize(v) for k, v in data.items()}\n        elif isinstance(data, list):\n            return [normalize(item) for item in data]\n        else:\n            return data\n\n    return normalize(result)", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "result", " =", " response", ".", "json", "()", "\n", "\n", "    ", "def", " normalize", "(", "data", "):", "\n", "        ", "if", " isinstance", "(", "data", ",", " str", "):", "\n", "            ", "data", " =", " data", ".", "encode", "('", "utf", "-", "8", "')", "\n", "            ", "return", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " data", ")", ".", "decode", "('", "ascii", "')", "\n", "        ", "elif", " isinstance", "(", "data", ",", " dict", "):", "\n", "            ", "return", " {", "k", ":", " normalize", "(", "v", ")", " for", " k", ",", " v", " in", " data", ".", "items", "()}", "\n", "        ", "elif", " isinstance", "(", "data", ",", " list", "):", "\n", "            ", "return", " [", "normal", "ize", "(", "item", ")", " for", " item", " in", " data", "]", "\n", "        ", "else", ":", "\n", "            ", "return", " data", "\n", "\n", "    ", "return", " normalize", "(", "result", ")", "\n", "\n", "if"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -0.0999329462647438, -0.015437280759215355, -0.030148398131132126, -0.037500519305467606, -0.07681073248386383, -0.17982172966003418, -0.0010698077967390418, -0.0010213402565568686, -3.802703940891661e-05, -3.790783375734463e-05, -0.0007538337376900017, -2.2053474822314456e-05, -0.0008671099785715342, -0.02207306958734989, -0.14802886545658112, -3.2734241485595703, -0.032231736928224564, -0.07748347520828247, -0.00013290952483657748, -0.0006563892820850015, -0.0046017225831747055, -0.017467942088842392, -1.4917123317718506, -0.0009139174944721162, -3.146139144897461, -0.5813385248184204, -0.7484958171844482, -2.688188314437866, -0.12753476202487946, -0.004179552663117647, -0.002103260951116681, -0.41303005814552307, -0.09756850451231003, -0.00013612773909699172, -0.0005138983833603561, -0.00016199229867197573, -0.11991973966360092, -0.0154235465452075, -0.003877266077324748, -0.0009488132782280445, -2.226634979248047, -0.03375330939888954, -2.0545990467071533, -0.00041106835124082863, -0.13575208187103271, -0.05032515153288841, -2.033031940460205, -0.014070123434066772, -0.0017459639348089695, -0.0823197215795517, -0.4055083394050598, -0.15342460572719574, -1.369138240814209, -0.08849393576383591, -0.0004912600270472467, -4.172316494077677e-06, -5.280832192511298e-05, -2.3007127310847864e-05, -0.0018870895728468895, -3.6954811548639555e-06, -0.016676196828484535, -0.00729563320055604, -0.05500439554452896, -0.00026663561584427953, -6.83045873302035e-05, -0.0065673235803842545, -0.3360171616077423, -0.1545962542295456, -0.12543027102947235, -0.025643950328230858, -0.05098966509103775, -0.338640421628952, -0.03493141755461693, -0.05529206618666649, -0.21357470750808716, -0.0051709008403122425, -6.19869097135961e-05, -0.00018630675913300365, -2.5510462364763953e-05, -1.2829580307006836, -0.01649891771376133, -0.001913741696625948, -0.0003013156820088625, -0.14708156883716583, -0.03151143714785576, -0.6966255903244019, -0.0032643387094140053, -0.003598050447180867, -0.00013183678674977273, -0.015137908980250359, -1.5258672647178173e-05, -0.0003081085451412946, -0.0006909366929903626, -3.480850500636734e-05, -0.009466049261391163, -6.115249561844394e-05, -0.005867400672286749, -0.0002022777043748647, -0.025326581671833992, -0.0011941214324906468, -0.0005508335889317095, -0.005478013306856155, -0.04125078767538071, -0.0012178155593574047, -2.3007127310847864e-05, -6.5205356804654e-05, -2.825220326485578e-05, -0.033983442932367325, -0.009284062311053276, -9.965400386136025e-05, -5.6503606174374e-05, -0.0014418693026527762, -0.0059242844581604, -0.0009121309849433601, -6.198863957251888e-06, -0.0001431601122021675, -0.6398439407348633, -4.458328112377785e-05, -0.00020561488054227084, -1.156323378381785e-05, -3.4570634852570947e-06, -0.00025769727653823793, -0.0004124982515349984, -9.131014667218551e-05, -0.04772370681166649, -0.23573936522006989, -1.4662635294371285e-05, -0.007281905505806208, -0.00010871296399272978, -0.004336596466600895, -0.0012854416854679585, -0.0013379440642893314, -0.03817074000835419, -0.0001854724541772157, -0.15716855227947235, -0.11677438765764236, -0.003560396144166589, -0.003639266826212406, -0.24994616210460663, -0.15225301682949066, -0.011198053136467934, -1.3535668849945068], "finish_reason": "stop"}], "metrics": {"energy": 181.19798066711425, "energy_per_token": 1.2160938299806325, "time": 6.1094074, "time_per_token": 0.04100273422818792}}
{"outputs": [{"text": "response = requests.get(URL+username)\n    response.raise_for_status()\n    return dict((k.lower(), unicodedata.normalize('NFKD', v).encode('ASCII', 'ignore').decode('ASCII')) for k, v in response.json().items())", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", "+", "username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "return", " dict", "((", "k", ".", "lower", "()", ",", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " v", ")", ".", "encode", "('", "ASC", "II", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ASC", "II", "'))", " for", " k", ",", " v", " in", " response", ".", "json", "()", ".", "items", "())", "\n", "\n", "#"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -2.364152193069458, -0.01644650101661682, -0.027389824390411377, -0.04664238914847374, -0.12100813537836075, -0.35369935631752014, -0.004872472491115332, -0.0014193708775565028, -6.007967749610543e-05, -4.6132929128361866e-05, -0.00109576724935323, -2.0503786799963564e-05, -0.0021577426232397556, -0.020389366894960403, -0.09852897375822067, -1.6230475902557373, -1.8340283632278442, -1.8841536045074463, -0.7197694182395935, -0.7405131459236145, -0.46957045793533325, -0.0012137673329561949, -0.34092530608177185, -0.4920133352279663, -0.0017752378480508924, -6.663577369181439e-05, -0.00042215018766000867, -6.353653589030728e-05, -0.0006517431465908885, -6.437280717364047e-06, -0.06619904935359955, -0.007070756983011961, -0.029502639546990395, -6.949660019017756e-05, -0.00028618055512197316, -0.12393287569284439, -0.6388332843780518, -0.0032340388279408216, -0.0011638780124485493, -0.004118651617318392, -0.8106228113174438, -5.376194530981593e-05, -0.0006386386230587959, -0.00017450717859901488, -0.11401773989200592, -0.004339207895100117, -0.4626286029815674, -0.019741715863347054, -0.022369323298335075, -0.8019698262214661, -0.08095993846654892, -0.0035900920629501343, -0.03449687361717224, -0.7049745321273804, -0.19188213348388672, -0.00045980370487086475, -0.20771320164203644, -0.011809319257736206, -0.07261020690202713, -0.0001726001501083374, -0.0006474544061347842, -0.05009772628545761, -0.009201501496136189, -0.020473461598157883, -0.0765322744846344, -0.5160916447639465, -0.03260957822203636, -2.281984329223633], "finish_reason": "stop"}], "metrics": {"energy": 69.08901332092285, "energy_per_token": 0.9211868442789712, "time": 2.9600174, "time_per_token": 0.03946689866666667}}
{"outputs": [{"text": "response = requests.get(URL + username)\n    response.raise_for_status()\n\n    result = json.loads(response.text)\n    return {'login': result.get('login')}", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "\n", "    ", "result", " =", " json", ".", "loads", "(", "response", ".", "text", ")", "\n", "    ", "return", " {'", "login", "':", " result", ".", "get", "('", "login", "')}", "\n", "\n", "def"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -0.0999329462647438, -0.015437280759215355, -0.030148398131132126, -0.037500519305467606, -0.07681073248386383, -0.17982172966003418, -0.0010698077967390418, -0.0010213402565568686, -3.802703940891661e-05, -3.790783375734463e-05, -0.0007538337376900017, -2.2053474822314456e-05, -0.0008671099785715342, -0.02207306958734989, -1.9839320182800293, -0.0002907091984525323, -3.1424121856689453, -0.04619912803173065, -3.103616714477539, -0.003996481653302908, -0.004774123430252075, -0.00025328766787424684, -0.003941506613045931, -4.911301948595792e-05, -0.22493714094161987, -0.007876172661781311, -0.02083323709666729, -0.7643769383430481, -1.4119606018066406, -3.2960541248321533, -0.0196944959461689, -0.005016359966248274, -0.5214328169822693, -1.7676036357879639, -0.021439343690872192, -0.07676348090171814, -0.006357327103614807, -0.9761695861816406, -0.21570725739002228, -0.02357570081949234, -0.4850776791572571], "finish_reason": "stop"}], "metrics": {"energy": 67.54756015777589, "energy_per_token": 1.407240836620331, "time": 1.6992718, "time_per_token": 0.03540149583333333}}
{"outputs": [{"text": "try:\n        response = requests.get(URL + username)\n        response.raise_for_status()\n        data = response.json()\n        return {key: unicodedata.normalize('NFKD', str(value)).encode('ascii', 'ignore').decode()\n                for key, value in data.items()}\n    except requests.exceptions.HTTPError:\n        return {}", "tokens": ["try", ":", "\n", "        ", "response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "        ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "        ", "data", " =", " response", ".", "json", "()", "\n", "        ", "return", " {", "key", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " str", "(", "value", "))", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "                ", "for", " key", ",", " value", " in", " data", ".", "items", "()}", "\n", "    ", "except", " requests", ".", "except", "ions", ".", "HTTP", "Error", ":", "\n", "        ", "return", " {}", "\n", "\n", "def"], "logprobs": [-2.3715593814849854, -0.00035851728171110153, -0.0015113847330212593, -0.005200667306780815, -0.5456674695014954, -0.0021089711226522923, -0.00201974855735898, -3.0040289857424796e-05, -0.0002857038634829223, -0.0015673269517719746, -0.1150703951716423, -0.06892184913158417, -0.012981193140149117, -0.03430072218179703, -0.023834729567170143, -0.029883479699492455, -0.07986391335725784, -0.0005504761938937008, -0.0002547178009990603, -4.529942543740617e-06, -4.410646579344757e-05, -0.00013243274588603526, -1.5616295058862306e-05, -0.0007065422250889242, -0.026959413662552834, -0.28490951657295227, -0.8648786544799805, -0.0079963319003582, -0.03607157990336418, -8.630380034446716e-05, -0.00040463366894982755, -0.0030797929503023624, -0.02066767029464245, -0.3706616461277008, -1.162319540977478, -0.2773122191429138, -1.1251928806304932, -0.31484878063201904, -0.22542442381381989, -0.0012690117582678795, -5.602679812000133e-05, -9.500529267825186e-05, -5.495397272170521e-05, -0.0009541726321913302, -7.652943895664066e-05, -0.060993120074272156, -0.009171380661427975, -0.05588328838348389, -0.00021598390594590455, -0.00016616393986623734, -1.41243314743042, -0.0013604442356154323, -0.21770016849040985, -0.010471755638718605, -0.2056838721036911, -0.00022432672267314047, -0.005064752884209156, -0.4010281562805176, -0.0016138636274263263, -6.139089964563027e-05, -0.06347160041332245, -0.006533334031701088, -0.0006571040721610188, -0.2488671839237213, -0.012270791456103325, -0.41791656613349915, -0.8865641355514526, -0.08881882578134537, -0.09440011531114578, -0.05890563502907753, -0.00013481661153491586, -0.0037298889365047216, -0.003235227195546031, -0.0030467540491372347, -0.009231857024133205, -0.0012747265864163637, -0.36980152130126953, -0.010312722995877266, -0.09362424910068512, -0.0017312075942754745, -0.0518282875418663, -1.4424220353248529e-05, -0.00732604693621397, 0.0, -0.0002795067266561091, -0.038688793778419495, -7.10462118149735e-05, -1.2847533226013184, -0.007004231214523315, -0.0012761552352458239, -1.3294368982315063, -1.382368564605713, -0.22042341530323029, -0.043074361979961395, -0.595539927482605], "finish_reason": "stop"}], "metrics": {"energy": 94.19424208259584, "energy_per_token": 0.9915183377115351, "time": 3.7907205, "time_per_token": 0.03990232105263158}}
{"outputs": [{"text": "r = requests.get(URL + username)\n    r.raise_for_status()\n    data = r.json()\n\n    for k, v in data.items():\n        if isinstance(v, str):\n            data[k] = unicodedata.normalize('NFKD', v).encode('ascii', 'ignore').decode('ascii')\n\n    return data", "tokens": ["r", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "r", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "data", " =", " r", ".", "json", "()", "\n", "\n", "    ", "for", " k", ",", " v", " in", " data", ".", "items", "():", "\n", "        ", "if", " isinstance", "(", "v", ",", " str", "):", "\n", "            ", "data", "[", "k", "]", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " v", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ascii", "')", "\n", "\n", "    ", "return", " data"], "logprobs": [-3.3588240146636963, -0.006494724191725254, -0.0036988905631005764, -7.426462980220094e-05, -0.0003483880718704313, -0.00575943011790514, -0.084664486348629, -0.10196481645107269, -0.015335151925683022, -0.03099820204079151, -0.03415568917989731, -0.08438743650913239, -0.25085246562957764, -0.002170232590287924, -0.0016658727545291185, -2.3841830625315197e-06, -6.19869097135961e-05, -0.00015853578224778175, -1.7523612768854946e-05, -0.0015979153104126453, -0.0253963153809309, -0.1252346634864807, -1.1318128108978271, -0.015330690890550613, -0.04972496256232262, -0.00010168035078095272, -0.001576134585775435, -0.004288643132895231, -0.020818060263991356, -1.5999740362167358, -0.0005942009738646448, -1.8090200424194336, -1.310508370399475, -0.14023305475711823, -0.03209332749247551, -0.0008313775178976357, -0.026771994307637215, -0.007695433683693409, -0.006969309411942959, -0.00017927470616996288, -0.01232448685914278, -0.008841178379952908, -0.4078516960144043, -0.1010214313864708, -0.00010322991875000298, -0.012473898939788342, -0.00026079590315930545, -0.05936048552393913, -0.009163112379610538, -0.006618365179747343, -0.0012892514932900667, -0.05972832813858986, -0.0003670972364488989, -0.0013462775386869907, -0.003123525995761156, -0.00013743886665906757, -0.04097895696759224, -0.00042989550274796784, -2.729855441430118e-05, -0.00010287232726113871, -1.8715683836489916e-05, -0.0012497241841629148, -2.5629668016335927e-05, -0.055257439613342285, -0.006016358733177185, -0.04454430565237999, -4.565611743601039e-05, -0.00017736769223120064, -0.010783849284052849, -0.0271514393389225, -0.007964283227920532, -0.0009828743059188128, -0.01942562498152256, -0.14362110197544098, -0.005601898767054081, -0.0001565095444675535, -0.028063027188181877, -0.0030699288472533226, -0.0004542034293990582, -0.05655752494931221, -0.002880473854020238, -0.8260692358016968, -0.3286743760108948, -0.0018616265151649714, -0.01828855648636818, -0.2960350215435028, -0.0029472745954990387, -0.015658758580684662, -0.009235045872628689], "finish_reason": "stop"}], "metrics": {"energy": 84.81577305793762, "energy_per_token": 0.9529862141341305, "time": 3.587564, "time_per_token": 0.04030970786516854}}
{"outputs": [{"text": "response = requests.get(URL + username)\n    response.raise_for_status()\n    data = response.json()\n    return {k.lower(): unicodedata.normalize('NFKD', v).encode('ascii', 'ignore').decode('ascii') for k, v in data.items()}", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "data", " =", " response", ".", "json", "()", "\n", "    ", "return", " {", "k", ".", "lower", "():", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " v", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ascii", "')", " for", " k", ",", " v", " in", " data", ".", "items", "()}"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -0.0999329462647438, -0.015437280759215355, -0.030148398131132126, -0.037500519305467606, -0.07681073248386383, -0.17982172966003418, -0.0010698077967390418, -0.0010213402565568686, -3.802703940891661e-05, -3.790783375734463e-05, -0.0007538337376900017, -2.2053474822314456e-05, -0.0008671099785715342, -0.02207306958734989, -0.14802886545658112, -0.9992903470993042, -0.01586364209651947, -0.04609815776348114, -8.010543388081715e-05, -0.0009388091857545078, -0.00331578659825027, -0.01512722298502922, -0.214391827583313, -1.1276772022247314, -0.2271202802658081, -1.0003663301467896, -0.9123333692550659, -0.6835058331489563, -0.07412717491388321, -0.35406050086021423, -0.0007421599584631622, -7.83174327807501e-05, -0.0002592465898487717, -7.509902934543788e-05, -0.000925112864933908, -1.8000440832111053e-05, -0.07120828330516815, -0.011050808243453503, -0.03735261783003807, -0.0007462101057171822, -0.00018285033002030104, -0.28911104798316956, -0.02153361774981022, -0.05725562572479248, -0.000701658078469336, -0.007407816126942635, -0.415760338306427, -0.0027416283264756203, -4.672895011026412e-05, -0.04600514844059944, -0.0023148665204644203, -0.001061471994034946, -0.2743391692638397, -0.01581166312098503, -1.0316216945648193, -0.3767741620540619, -0.0069110640324652195, -0.40449315309524536, -0.11709445714950562, -0.0002051381452474743, -0.03542238846421242, -0.012407496571540833, -0.011865630745887756, -0.004557341802865267, -0.002434744266793132, -0.22596606612205505], "finish_reason": "stop"}], "metrics": {"energy": 102.9180256576538, "energy_per_token": 1.4098359679130656, "time": 2.9627256, "time_per_token": 0.04058528219178083}}
{"outputs": [{"text": "r = requests.get(URL+username)\n    r.raise_for_status()\n\n    data = r.json()\n\n    return {k.lower().replace('_', '-'): unicodedata.normalize('NFKD', v).encode('ascii', 'ignore').decode('ascii')\n            for k, v in data.items()}", "tokens": ["r", " =", " requests", ".", "get", "(", "URL", "+", "username", ")", "\n", "    ", "r", ".", "raise", "_", "for", "_", "status", "()", "\n", "\n", "    ", "data", " =", " r", ".", "json", "()", "\n", "\n", "    ", "return", " {", "k", ".", "lower", "()", ".", "replace", "('", "_", "'", ",", " '-", "')", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " v", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ascii", "')", "\n", "            ", "for", " k", ",", " v", " in", " data", ".", "items", "()}", "\n", "\n", "print"], "logprobs": [-3.3588240146636963, -0.006494724191725254, -0.0036988905631005764, -7.426462980220094e-05, -0.0003483880718704313, -0.00575943011790514, -0.084664486348629, -2.345750570297241, -0.016416598111391068, -0.03806551173329353, -0.03023202158510685, -0.09590736776590347, -0.32291701436042786, -0.003041643649339676, -0.0017803546506911516, -3.099436753473128e-06, -6.437094270950183e-05, -0.00025674383505247533, -1.8715683836489916e-05, -0.002749474486336112, -0.028960466384887695, -2.2870821952819824, -0.0006238659843802452, -1.6282514333724976, -0.02232665754854679, -0.0645277351140976, -0.00010680581908673048, -0.002014394849538803, -0.0034696399234235287, -0.023312414065003395, -0.6932855844497681, -0.001148874987848103, -2.0619325637817383, -0.30302345752716064, -0.874114453792572, -0.8980291485786438, -0.6048831343650818, -2.546140193939209, -0.26685118675231934, -0.09262004494667053, -0.15605692565441132, -2.316089630126953, -0.00034290633630007505, -0.0010340826120227575, -0.9831992983818054, -0.00036113892565481365, -0.08168153464794159, -0.5673076510429382, -0.000834236154332757, -5.566918844124302e-05, -0.00017128908075392246, -8.463501580990851e-05, -0.00044741155579686165, -2.884823152271565e-05, -0.08308707922697067, -0.0025733946822583675, -0.01431305706501007, -0.000248401309363544, -0.0006212450098246336, -0.4779372811317444, -0.013838536106050014, -0.03924509137868881, -0.0010177677031606436, -0.012370290234684944, -0.2356642186641693, -0.0036466307938098907, -0.00010835537250386551, -0.16816681623458862, -0.0013952055014669895, -0.0018353299237787724, -0.22859807312488556, -0.026744604110717773, -0.8452361226081848, -0.3509366810321808, -0.005437109619379044, -0.4414456784725189, -0.07791727781295776, -0.06285283714532852, -0.03706927224993706, -0.0002643712505232543, -0.04881906881928444, -0.0012498432770371437, -0.0043165371753275394, -0.0019326595356687903, -0.006338255945593119, -0.30701205134391785, -0.2576119005680084, -0.026969509199261665, -3.3467869758605957], "finish_reason": "stop"}], "metrics": {"energy": 88.32893990707396, "energy_per_token": 0.9924599989558872, "time": 3.5902355, "time_per_token": 0.04033972471910112}}
{"outputs": [{"text": "response = requests.get(URL + username)\n    response.raise_for_status()\n    data = response.json()\n    return {key: unicodedata.normalize('NFKD', data[key]).encode('ASCII', 'ignore') for key in data}", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "data", " =", " response", ".", "json", "()", "\n", "    ", "return", " {", "key", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " data", "[", "key", "])", ".", "encode", "('", "ASC", "II", "'", ",", " '", "ignore", "')", " for", " key", " in", " data", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -0.0999329462647438, -0.015437280759215355, -0.030148398131132126, -0.037500519305467606, -0.07681073248386383, -0.17982172966003418, -0.0010698077967390418, -0.0010213402565568686, -3.802703940891661e-05, -3.790783375734463e-05, -0.0007538337376900017, -2.2053474822314456e-05, -0.0008671099785715342, -0.02207306958734989, -0.14802886545658112, -0.9992903470993042, -0.01586364209651947, -0.04609815776348114, -8.010543388081715e-05, -0.0009388091857545078, -0.00331578659825027, -0.01512722298502922, -0.214391827583313, -1.1276772022247314, -0.2271202802658081, -1.2683049440383911, -0.38135063648223877, -0.20904700458049774, -0.0011457790387794375, -6.663577369181439e-05, -0.0001262346631847322, -4.541770613286644e-05, -0.0010370597010478377, -0.00011324241495458409, -0.06451108306646347, -0.01150544174015522, -0.056205980479717255, -0.0002134810492862016, -0.00023505308490712196, -3.1588432788848877, -0.013358849100768566, -0.0005731132114306092, -0.023214465007185936, -0.032897304743528366, -0.0005757343024015427, -0.007981903851032257, -1.1049937009811401, -5.018585216021165e-05, -0.0016162439715117216, -0.00014649749209638685, -0.043674442917108536, -0.009320320561528206, -0.0004974558250978589, -1.7999006509780884, -0.0034799750428646803, -0.004759767558425665, -0.016057340428233147, -1.621980905532837, -2.3841855067985307e-07, -1.7881377516459906e-06, -0.00031716562807559967, -0.00011693747364915907, -0.0803912878036499], "finish_reason": "stop"}], "metrics": {"energy": 65.2001129207611, "energy_per_token": 0.9314301845823014, "time": 2.7503297, "time_per_token": 0.03929042428571428}}
{"outputs": [{"text": "try:\n        response = requests.get(URL + username)\n        response.raise_for_status()\n        data = response.json()\n        data = {k.lower(): normalize('NFKD', v).encode('ascii', 'ignore').decode('ascii')\n               for k, v in data.items()}\n    except requests.exceptions.HTTPError as e:\n        print(f\"ERROR: {e}\")\n    return data", "tokens": ["try", ":", "\n", "        ", "response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "        ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "        ", "data", " =", " response", ".", "json", "()", "\n", "        ", "data", " =", " {", "k", ".", "lower", "():", " normalize", "('", "NF", "KD", "'", ",", " v", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ascii", "')", "\n", "               ", "for", " k", ",", " v", " in", " data", ".", "items", "()}", "\n", "    ", "except", " requests", ".", "except", "ions", ".", "HTTP", "Error", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "ERROR", ":", " {", "e", "}\"", ")", "\n", "    ", "return", " data", "\n", "\n", "def"], "logprobs": [-2.3715593814849854, -0.00035851728171110153, -0.0015113847330212593, -0.005200667306780815, -0.5456674695014954, -0.0021089711226522923, -0.00201974855735898, -3.0040289857424796e-05, -0.0002857038634829223, -0.0015673269517719746, -0.1150703951716423, -0.06892184913158417, -0.012981193140149117, -0.03430072218179703, -0.023834729567170143, -0.029883479699492455, -0.07986391335725784, -0.0005504761938937008, -0.0002547178009990603, -4.529942543740617e-06, -4.410646579344757e-05, -0.00013243274588603526, -1.5616295058862306e-05, -0.0007065422250889242, -0.026959413662552834, -0.28490951657295227, -0.8648786544799805, -0.0079963319003582, -0.03607157990336418, -8.630380034446716e-05, -0.00040463366894982755, -0.0030797929503023624, -0.02066767029464245, -0.3706616461277008, -2.1036038398742676, -1.1403417587280273, -0.6173469424247742, -0.799604058265686, -1.0098713636398315, -0.5048210620880127, -0.029549283906817436, -1.3457735776901245, -0.36049652099609375, -0.04453336074948311, -0.059813108295202255, -0.00032109825406223536, -0.0001597276859683916, -0.20459654927253723, -0.04193519055843353, -0.5568445920944214, -0.0016683719586580992, -0.00986757967621088, -0.9177523255348206, -0.009813988581299782, -6.007967749610543e-05, -0.04221464693546295, -0.008354476653039455, -0.0010422994382679462, -0.08081162720918655, -0.015312024392187595, -0.6637583374977112, -0.20841608941555023, -0.006508936639875174, -0.8088340163230896, -0.7429426908493042, -0.1031060442328453, -0.0807960107922554, -0.00010656742961145937, -0.016139455139636993, -0.001722282380796969, -0.0035302243195474148, -0.0012756790965795517, -0.0017134760273620486, -0.14375966787338257, -0.015495852567255497, -2.0260188579559326, -0.0045502218417823315, -0.0452517531812191, -1.8596476365928538e-05, -0.00549034308642149, -1.1920928244535389e-07, -0.00028689560713246465, -0.029161948710680008, -5.9126061387360096e-05, -0.36429208517074585, -0.5495278835296631, -0.00047136162174865603, -0.004891927354037762, -0.001648973091505468, -0.9138165712356567, -0.26223134994506836, -0.7156927585601807, -1.0162014961242676, -3.356863021850586, -0.21499216556549072, -0.24805106222629547, -0.15007859468460083, -0.15472666919231415, -0.005674799904227257, -0.00970927719026804, -1.1494476795196533, -0.4770033359527588, -0.013441067188978195, -0.17593547701835632, -0.01598472334444523, -0.7291794419288635], "finish_reason": "stop"}], "metrics": {"energy": 134.57269939613334, "energy_per_token": 1.2695537678880504, "time": 4.218463, "time_per_token": 0.03979682075471698}}
{"outputs": [{"text": "response = requests.get(URL + username)\n    response.raise_for_status()\n    return response.json()", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "return", " response", ".", "json", "()", "\n", "\n", "def"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -0.0999329462647438, -0.015437280759215355, -0.030148398131132126, -0.037500519305467606, -0.07681073248386383, -0.17982172966003418, -0.0010698077967390418, -0.0010213402565568686, -3.802703940891661e-05, -3.790783375734463e-05, -0.0007538337376900017, -2.2053474822314456e-05, -0.0008671099785715342, -0.02207306958734989, -0.14802886545658112, -1.2857455015182495, -1.94467031955719, -0.009031161665916443, -0.0007431129342876375, -0.03393654152750969, -0.2889353334903717, -0.04571319743990898, -0.500342071056366], "finish_reason": "stop"}], "metrics": {"energy": 12.507874059677125, "energy_per_token": 0.4169291353225708, "time": 1.0713571, "time_per_token": 0.03571190333333333}}
{"outputs": [{"text": "response = requests.get(URL + username)\n    response.raise_for_status()\n\n    json_data = response.json()\n\n    # Normalize all string values in the response data to ASCII\n    normalized_data = {}\n    for key, value in json_data.items():\n        if isinstance(value, str):\n            normalized_data[key] = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode()\n        else:\n            normalized_data[key] = value\n    return normalized_data", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "\n", "    ", "json", "_", "data", " =", " response", ".", "json", "()", "\n", "\n", "    ", "#", " Normal", "ize", " all", " string", " values", " in", " the", " response", " data", " to", " ASC", "II", "\n", "    ", "normalized", "_", "data", " =", " {}", "\n", "    ", "for", " key", ",", " value", " in", " json", "_", "data", ".", "items", "():", "\n", "        ", "if", " isinstance", "(", "value", ",", " str", "):", "\n", "            ", "normalized", "_", "data", "[", "key", "]", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " value", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "        ", "else", ":", "\n", "            ", "normalized", "_", "data", "[", "key", "]", " =", " value", "\n", "    ", "return", " normalized", "_", "data", "\n", "\n", "def"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -0.0999329462647438, -0.015437280759215355, -0.030148398131132126, -0.037500519305467606, -0.07681073248386383, -0.17982172966003418, -0.0010698077967390418, -0.0010213402565568686, -3.802703940891661e-05, -3.790783375734463e-05, -0.0007538337376900017, -2.2053474822314456e-05, -0.0008671099785715342, -0.02207306958734989, -1.9839320182800293, -0.0002907091984525323, -3.0179920196533203, -0.31525591015815735, -0.35272911190986633, -0.005546774249523878, -0.04014973342418671, -8.892617915989831e-05, -0.0012647256953641772, -0.002436052542179823, -0.01697416976094246, -0.7298208475112915, -0.0003361137059982866, -1.5010113716125488, -0.4840441644191742, -0.058678578585386276, -0.44960299134254456, -0.22154133021831512, -0.5401579737663269, -3.024369716644287, -0.26050227880477905, -2.673859119415283, -2.1717052459716797, -0.5435765385627747, -0.024632226675748825, -0.00012242044613230973, -0.3806459307670593, -0.0023831319995224476, -0.6132018566131592, -0.02534029632806778, -0.07543989270925522, -0.0015395942609757185, -0.22321555018424988, -0.00032479254878126085, -0.0783194750547409, -0.005545114632695913, -0.02545860782265663, -0.03742967173457146, -0.01708034984767437, -0.00036435641231946647, -0.006963271647691727, -0.0002728328399825841, -1.5139465176616795e-05, -0.0013222293928265572, -0.0006493605324067175, -5.5549986427649856e-05, -0.0007653883076272905, -0.003291191766038537, -0.19223107397556305, -0.061626825481653214, -3.45700973412022e-05, -0.007639005314558744, -6.69933797325939e-05, -0.019153408706188202, -0.014339497312903404, -0.003182467771694064, -0.0005486889858730137, -0.3885827660560608, -0.005463667679578066, -0.4063212275505066, -0.0006363751017488539, -0.009010132402181625, -0.0015510206576436758, -3.0040289857424796e-05, -0.030176272615790367, -0.0003108495147898793, -1.3708974620385561e-05, -0.0001399419124936685, -2.276871418871451e-05, -0.0008490057080052793, -2.777537883957848e-05, -0.10277565568685532, -0.011849138885736465, -0.04887208715081215, -3.909988299710676e-05, -9.500529267825186e-05, -0.008254578337073326, -0.020236343145370483, -0.002975800074636936, -0.0008017186191864312, -0.011294594034552574, -0.1503894031047821, -0.007209594361484051, -0.000129691296024248, -0.023895489051938057, -0.004512247163802385, -0.00033444532891735435, -0.02436468005180359, -0.0033098459243774414, -0.4090700149536133, -0.014080584980547428, -0.027457674965262413, -0.42257681488990784, -1.1086402082582936e-05, -0.0036194308195263147, -0.0002796259068418294, -0.011604191735386848, -0.00010585224663373083, -1.7523612768854946e-05, -2.7417760065873154e-05, -3.313963316031732e-05, -0.00014125302550382912, -5.566918844124302e-05, -0.010742807760834694, -0.005148130003362894, -2.090650796890259, -0.02536795847117901, -0.004636489786207676, -0.003280379343777895, -4.6491513785440475e-06, -0.4047802984714508, -0.015863876789808273, -0.9327303171157837], "finish_reason": "stop"}], "metrics": {"energy": 164.49615063095095, "energy_per_token": 1.227583213663813, "time": 5.476589, "time_per_token": 0.040870067164179104}}
{"outputs": [{"text": "# TODO\n\n    # https://realpython.com/python-unicode/\n    # https://www.youtube.com/watch?v=LqJGK7qjKJU\n    # https://www.programiz.com/python-programming/unicode\n\n    url = URL + username\n\n    response = requests.get(url)\n\n    if response.status_code == 200:\n        result = response.json()\n\n        for key, value in result.items():\n            if isinstance(value, str):\n                result[key] = unicodedata.normalize(\"NFKD\", value).encode(\"ascii\", \"ignore\").decode()\n\n        return result\n\n    else:\n        raise requests.exceptions.HTTPError", "tokens": ["#", " TODO", "\n", "\n", "    ", "#", " https", "://", "real", "python", ".", "com", "/", "python", "-", "un", "icode", "/", "\n", "    ", "#", " https", "://", "www", ".", "youtube", ".", "com", "/", "watch", "?", "v", "=", "L", "q", "J", "G", "K", "7", "q", "j", "K", "J", "U", "\n", "    ", "#", " https", "://", "www", ".", "program", "iz", ".", "com", "/", "python", "-", "program", "ming", "/", "un", "icode", "\n", "\n", "    ", "url", " =", " URL", " +", " username", "\n", "\n", "    ", "response", " =", " requests", ".", "get", "(", "url", ")", "\n", "\n", "    ", "if", " response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n", "        ", "result", " =", " response", ".", "json", "()", "\n", "\n", "        ", "for", " key", ",", " value", " in", " result", ".", "items", "():", "\n", "            ", "if", " isinstance", "(", "value", ",", " str", "):", "\n", "                ", "result", "[", "key", "]", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "(", "\"", "NF", "KD", "\"", ",", " value", ")", ".", "encode", "(", "\"", "ascii", "\"", ",", " \"", "ignore", "\"", ")", ".", "decode", "()", "\n", "\n", "        ", "return", " result", "\n", "\n", "    ", "else", ":", "\n", "        ", "raise", " requests", ".", "except", "ions", ".", "HTTP", "Error", "\n", "\n", "def"], "logprobs": [-2.621553659439087, -3.187204360961914, -2.517561435699463, -1.9582687616348267, -0.8907010555267334, -1.7462422847747803, -4.3912858963012695, -0.008167439140379429, -3.928079128265381, -0.0016575419576838613, -0.0003748429589904845, -0.004347990732640028, -0.00017951308109331876, -0.22100962698459625, -0.0013296105898916721, -1.5062386989593506, -0.004911382216960192, -0.6323428750038147, -0.05073848366737366, -0.21825367212295532, -0.31194281578063965, -0.20161573588848114, -0.0004234609368722886, -2.096255302429199, -0.001043133088387549, -2.9936819076538086, -0.0001805857609724626, -6.437280717364047e-06, -4.6132929128361866e-05, -0.008342655375599861, -0.00022063204960431904, -0.001611721352674067, -0.021984795108437538, -4.397331237792969, -3.7922275066375732, -4.397459030151367, -4.2999372482299805, -4.007333755493164, -3.8795018196105957, -3.8541998863220215, -4.006369113922119, -4.211645126342773, -4.837759017944336, -2.4739511013031006, -0.1702013462781906, -0.5140130519866943, -0.36674225330352783, -0.2563343644142151, -0.000674616196192801, -1.6812586784362793, -0.000327652640407905, -3.0602951049804688, -0.12481112778186798, -0.006093969568610191, -6.282132380874828e-05, -0.00014184899919200689, -0.0013546108966693282, -0.005746985320001841, -0.041397884488105774, -3.814624506048858e-05, -0.006128803361207247, -1.2830638885498047, -0.22236619889736176, -0.17605294287204742, -1.0627734661102295, -0.012715455144643784, -4.060242652893066, -0.08745496720075607, -0.10591412335634232, -0.021710239350795746, -0.021451596170663834, -0.021296050399541855, -1.0042380094528198, -0.0008579387213103473, -0.7597160339355469, -0.00993320718407631, -0.004475814290344715, -4.51792984677013e-05, -0.004022959154099226, -0.0001998939987970516, -0.0024141711182892323, -0.028271527960896492, -0.03558127209544182, -0.7885658144950867, -0.00040522945346310735, -0.8212014436721802, -0.04031817615032196, -0.0021137294825166464, -0.10099352151155472, -0.0007815881981514394, -2.52720492426306e-05, -0.7403802275657654, -0.02404935099184513, -0.2996635138988495, -1.4543427823809907e-05, -0.0003781795676331967, -0.001379848807118833, -0.02532297931611538, -0.06571369618177414, -2.6008565425872803, -0.040695950388908386, -0.09579071402549744, -0.0004328744253143668, -0.0023736178409308195, -0.004662713035941124, -0.022027475759387016, -0.8522012829780579, -0.07574993371963501, -1.345799207687378, -0.26263314485549927, -0.376461923122406, -0.10284051299095154, -0.0005286726518534124, -0.02463199384510517, -0.0064253173768520355, -0.004575022961944342, -0.00046302087139338255, -0.008009458892047405, -0.08907381445169449, -0.48859238624572754, -0.18314777314662933, -0.00026723151677288115, -0.01506146602332592, -0.0005535738891921937, -0.13218432664871216, -0.018596114590764046, -0.010845053009688854, -0.004671849310398102, -0.16562046110630035, -0.002237794455140829, -0.0011439929949119687, -0.0018306892598047853, -0.0005092516075819731, -0.08978903293609619, -0.0007297713309526443, -6.9141146923357155e-06, -0.00010346830822527409, -5.578839045483619e-05, -0.000990496133454144, -2.3483953555114567e-05, -1.5741701126098633, -0.16791217029094696, -0.011596178635954857, -0.052903562784194946, -8.916457591112703e-05, -0.0007775382255204022, -0.023750683292746544, -0.016389625146985054, -0.025397595018148422, -0.0021096847485750914, -0.6505199074745178, -0.11405177414417267, -0.068350650370121, -9.298280929215252e-06, -0.026340853422880173, -0.07639312744140625, -0.00534320343285799, -4.9828242481453344e-05, -0.002788467099890113, -0.11500748991966248, -0.006478261202573776, -0.9300183653831482, -0.019832877442240715, -0.3230321407318115, -0.22869272530078888, -0.046915072947740555, -0.006684680003672838, -0.0926065668463707, -0.7324017286300659, -0.06616467982530594, -0.2511238753795624, -0.0002954761730507016, -0.008826762437820435, -0.019878806546330452, -0.3093093931674957, -0.05975976958870888, -2.1576648578047752e-05, -0.015102799981832504, -8.344646857949556e-07, -0.00019536493346095085, -0.0019375376868993044, -0.00042381841922178864, -1.2485146522521973, -0.021111534908413887, -0.720750629901886], "finish_reason": "stop"}], "metrics": {"energy": 190.3761944236755, "energy_per_token": 1.029060510398246, "time": 7.7876472, "time_per_token": 0.042095390270270275}}
{"outputs": [{"text": "try:\n        response = requests.get(URL + username)\n        response.raise_for_status()\n        data = response.json()\n        # normalize data to ASCII\n        normalized_data = {}\n        for key, value in data.items():\n            if isinstance(value, str):\n                value = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode('utf-8')\n            normalized_data[key] = value\n    except requests.exceptions.HTTPError as e:\n        raise e\n    return normalized_data", "tokens": ["try", ":", "\n", "        ", "response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "        ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "        ", "data", " =", " response", ".", "json", "()", "\n", "        ", "#", " normalize", " data", " to", " ASC", "II", "\n", "        ", "normalized", "_", "data", " =", " {}", "\n", "        ", "for", " key", ",", " value", " in", " data", ".", "items", "():", "\n", "            ", "if", " isinstance", "(", "value", ",", " str", "):", "\n", "                ", "value", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " value", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "utf", "-", "8", "')", "\n", "            ", "normalized", "_", "data", "[", "key", "]", " =", " value", "\n", "    ", "except", " requests", ".", "except", "ions", ".", "HTTP", "Error", " as", " e", ":", "\n", "        ", "raise", " e", "\n", "    ", "return", " normalized", "_", "data", "\n", "\n", "def"], "logprobs": [-2.3715593814849854, -0.00035851728171110153, -0.0015113847330212593, -0.005200667306780815, -0.5456674695014954, -0.0021089711226522923, -0.00201974855735898, -3.0040289857424796e-05, -0.0002857038634829223, -0.0015673269517719746, -0.1150703951716423, -0.06892184913158417, -0.012981193140149117, -0.03430072218179703, -0.023834729567170143, -0.029883479699492455, -0.07986391335725784, -0.0005504761938937008, -0.0002547178009990603, -4.529942543740617e-06, -4.410646579344757e-05, -0.00013243274588603526, -1.5616295058862306e-05, -0.0007065422250889242, -0.026959413662552834, -0.28490951657295227, -0.8648786544799805, -0.0079963319003582, -0.03607157990336418, -8.630380034446716e-05, -0.00040463366894982755, -0.0030797929503023624, -0.02066767029464245, -0.3706616461277008, -2.517761707305908, -2.330227851867676, -2.302394390106201, -0.43224650621414185, -0.22881267964839935, -0.0001560327800689265, -0.43144652247428894, -0.0027667121030390263, -2.1605005264282227, -0.08960769325494766, -0.020109349861741066, -0.0021758233197033405, -0.9635608196258545, -0.0006090931710787117, -0.016241267323493958, -0.015579655766487122, -0.06685443222522736, -0.07715124636888504, -0.01793980784714222, -0.00012420836719684303, -0.0028360167052596807, -0.0023914568591862917, -0.0014427024871110916, -0.00012730741582345217, -0.001536618685349822, -0.0014400837244465947, -0.5729138255119324, -0.10725262761116028, -4.684815212385729e-05, -0.012569375336170197, -0.00012754580529872328, -0.018368029966950417, -0.00835695955902338, -0.006106410175561905, -0.0004190520558040589, -1.0462831258773804, -0.08245596289634705, -0.0750887393951416, -0.0005471401382237673, -1.2159273865108844e-05, -0.00015710550360381603, -1.3828182090946939e-05, -0.0005539313424378633, -1.6569954823353328e-05, -0.03205742686986923, -0.012595508247613907, -0.03796498104929924, -2.5033637939486653e-05, -5.304672595229931e-05, -0.004463827703148127, -0.010885263793170452, -0.014741543680429459, -0.0009011736838147044, -0.00788362417370081, -0.1647166907787323, -0.009992220439016819, -0.00017188502533826977, -0.015554421581327915, -0.002784068463370204, -0.00027569307712838054, -0.0949242115020752, -0.004138952121138573, -0.57926344871521, -0.9705836772918701, -0.10823069512844086, -0.00017641419253777713, -0.005974055267870426, -0.01026989333331585, -0.07016952335834503, -0.47407400608062744, -0.0002420847595203668, -0.001737157697789371, -0.0012627016985788941, -0.003185438457876444, -0.0023298519663512707, -1.0013530300057027e-05, -0.0034777179826050997, -0.003631546162068844, -1.6913686990737915, -0.003010148648172617, -0.03330360725522041, -8.583032467868179e-06, -0.0038829660043120384, 0.0, -0.00014172980445437133, -0.019470520317554474, -3.9934315282152966e-05, -0.16394515335559845, -0.4856710135936737, -0.0001479277852922678, -0.0027473345398902893, -0.00114994659088552, -0.8431646227836609, -0.45076724886894226, -0.030691547319293022, -0.20630545914173126, -0.2338370382785797, -0.005406282842159271, -4.660974445869215e-05, -2.5987286790041253e-05, -0.2792183458805084, -0.016133589670062065, -0.8788331747055054], "finish_reason": "stop"}], "metrics": {"energy": 149.10353919982902, "energy_per_token": 1.0883470014586059, "time": 5.687413, "time_per_token": 0.04151396350364964}}
{"outputs": [{"text": "response = requests.get(f\"{URL}{username}\")\n    response.raise_for_status()\n\n    return {k: unicodedata.normalize('NFKD', v).encode('ascii', 'ignore').decode()\n            for (k, v) in response.json().items()}", "tokens": ["response", " =", " requests", ".", "get", "(", "f", "\"", "{", "URL", "}{", "username", "}\"", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "\n", "    ", "return", " {", "k", ":", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " v", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "            ", "for", " (", "k", ",", " v", ")", " in", " response", ".", "json", "()", ".", "items", "()}", "\n", "\n", "#"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -2.2964839935302734, -0.8914044499397278, -0.008215679787099361, -0.001995835453271866, -0.028885768726468086, -0.0030091977678239346, -0.013017082586884499, -0.03032824583351612, -0.024852141737937927, -0.0970814898610115, -0.24863320589065552, -0.0027814533095806837, -0.000766102981287986, -4.684815212385729e-05, -4.088794958079234e-05, -0.0007956438348628581, -1.645074735279195e-05, -0.0009391664643771946, -0.024286845698952675, -1.7099614143371582, -0.00021669900161214173, -2.2591726779937744, -0.59383624792099, -1.54194176197052, -0.4325421154499054, -0.3407890796661377, -0.0009017692063935101, -4.31528314948082e-05, -0.00017796363681554794, -7.164221460698172e-05, -0.001610055100172758, -5.4834770708112046e-05, -0.15899252891540527, -0.009314061142504215, -0.04967131093144417, -0.000285584683297202, -0.00016342257731594145, -0.0731177031993866, -0.05277024954557419, -0.03910214826464653, -0.0008643704932183027, -0.003986033145338297, -0.25695928931236267, -0.0013058000477030873, -7.760223525110632e-05, -0.05832935497164726, -0.003060896648094058, -0.0009347598534077406, -0.18665152788162231, -0.007313148118555546, -0.4404219388961792, -0.9596569538116455, -0.05460049584507942, -0.05235051363706589, -2.9792213439941406, -0.00039200251922011375, -0.00018499570433050394, -0.01661253347992897, -0.0008388814167119563, -0.0043356469832360744, -0.07208669930696487, -0.0001528146385680884, -0.0006345880683511496, -0.04601949453353882, -0.01145842019468546, -0.002607875969260931, -0.3828185796737671, -0.2139735370874405, -0.024882839992642403, -2.2165567874908447], "finish_reason": "stop"}], "metrics": {"energy": 61.562359232902516, "energy_per_token": 0.810031042538191, "time": 2.9570463, "time_per_token": 0.038908503947368424}}
{"outputs": [{"text": "resp = requests.get(URL + username)\n    resp.raise_for_status()\n    user = resp.json()\n    return {k.lower(): unicodedata.normalize('NFKD', str(v)).encode('ascii', 'ignore').decode('ascii')\n            for k, v in user.items()}", "tokens": ["resp", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "resp", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "user", " =", " resp", ".", "json", "()", "\n", "    ", "return", " {", "k", ".", "lower", "():", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " str", "(", "v", "))", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ascii", "')", "\n", "            ", "for", " k", ",", " v", " in", " user", ".", "items", "()", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-2.985618829727173, -0.007849324494600296, -0.004785750061273575, -6.723177648382261e-05, -0.000648883986286819, -0.00442122109234333, -0.11033493280410767, -0.09036565572023392, -0.01433362253010273, -0.027713263407349586, -0.03832150250673294, -0.10394635796546936, -0.13016800582408905, -0.0018209319096058607, -0.0006859333370812237, -4.756337511935271e-05, -4.7801782784517854e-05, -0.00036554806865751743, -2.3603161025675945e-05, -0.0010417040903121233, -0.029360612854361534, -0.14031459391117096, -1.6380935907363892, -0.8262739181518555, -0.03397595137357712, -0.00010263393050990999, -0.00030560590676032007, -0.00850684754550457, -0.01961395889520645, -0.2632301449775696, -0.9041008949279785, -0.26926741003990173, -0.7084833979606628, -0.9959256649017334, -0.5528058409690857, -0.08167143166065216, -0.3723565638065338, -0.0010030006524175406, -8.082063141046092e-05, -0.00018070495571009815, -5.7338023907504976e-05, -0.0007566926069557667, -1.4543427823809907e-05, -0.0960964560508728, -0.013012375682592392, -0.02541526034474373, -0.00028880240279249847, -0.00016664070426486433, -2.1382761001586914, -0.0015373327769339085, -0.07457980513572693, -0.007521524094045162, -0.261021226644516, -0.0005458295345306396, -0.008711075410246849, -0.36491191387176514, -0.001741203828714788, -9.16677454370074e-05, -0.07552037388086319, -0.003116871230304241, -0.0010680215200409293, -0.23747292160987854, -0.0184504222124815, -1.040062665939331, -0.27151182293891907, -0.005682504735887051, -1.1187691688537598, -0.3276507556438446, -0.028374776244163513, -0.01783008873462677, -0.00011181206355104223, -0.017701853066682816, -0.00096941675292328, -0.005796527955681086, -0.00934122409671545, -0.004347872454673052, -1.411324143409729, -0.6509939432144165, -3.576278118089249e-07, -1.1920922133867862e-06, -0.0004371640970930457, -5.829164365422912e-05, -0.1716928333044052], "finish_reason": "stop"}], "metrics": {"energy": 115.38994525146481, "energy_per_token": 1.3902403042345157, "time": 3.3810625, "time_per_token": 0.04073569277108434}}
{"outputs": [{"text": "response = requests.get(URL + username)\n    response.raise_for_status()\n\n    # normalize all string data to ASCII\n    data = response.json()\n    return dict({key.lower(): unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode()\n                 for key, value in data.items()})", "tokens": ["response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "\n", "    ", "#", " normalize", " all", " string", " data", " to", " ASC", "II", "\n", "    ", "data", " =", " response", ".", "json", "()", "\n", "    ", "return", " dict", "({", "key", ".", "lower", "():", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " value", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "                ", " for", " key", ",", " value", " in", " data", ".", "items", "()", "})", "\n", "\n", "def"], "logprobs": [-0.7317525744438171, -0.0033170937094837427, -0.0030607779044657946, -4.8874615458771586e-05, -0.00034957972820848227, -0.002372190821915865, -0.12141226977109909, -0.0999329462647438, -0.015437280759215355, -0.030148398131132126, -0.037500519305467606, -0.07681073248386383, -0.17982172966003418, -0.0010698077967390418, -0.0010213402565568686, -3.802703940891661e-05, -3.790783375734463e-05, -0.0007538337376900017, -2.2053474822314456e-05, -0.0008671099785715342, -0.02207306958734989, -1.9839320182800293, -0.0002907091984525323, -2.0421504974365234, -3.863356590270996, -0.9399062991142273, -0.4065203368663788, -0.3827052414417267, -0.08036037534475327, -0.024214591830968857, -5.1377883210079744e-05, -0.2266799956560135, -0.0011703077470883727, -0.7379900217056274, -0.014940273948013783, -0.19957897067070007, -6.747018051100895e-05, -0.0009355935617350042, -0.008823571726679802, -0.013093916699290276, -0.07229786366224289, -2.059349775314331, -2.7509405612945557, -3.4060590267181396, -1.3615355491638184, -1.9705005884170532, -1.2506494522094727, -0.04082184284925461, -0.14422498643398285, -0.0010211020708084106, -4.792098479811102e-05, -0.00029273517429828644, -4.3987260141875595e-05, -0.001096005435101688, -1.1444026313256472e-05, -0.054888397455215454, -0.008977052755653858, -0.05719708278775215, -0.00038628268521279097, -0.00010764019680209458, -0.35794854164123535, -0.045569922775030136, -0.020162859931588173, -0.0011751896236091852, -0.004569920711219311, -0.6621648669242859, -0.0038399784825742245, -3.6238969187252223e-05, -0.06230840086936951, -0.0028929547406733036, -0.0011428022990003228, -0.2912788987159729, -0.010215379297733307, -0.3671568036079407, -0.771833598613739, -0.07918340712785721, -0.23627930879592896, -0.05911128595471382, -8.272782724816352e-05, -0.0019450333202257752, -0.0016509962733834982, -0.003411546815186739, -0.009177995845675468, -0.005165682639926672, -0.003372578416019678, -0.3122585117816925, -0.41784772276878357, -0.035290058702230453, -0.8246477842330933], "finish_reason": "stop"}], "metrics": {"energy": 82.85285720252988, "energy_per_token": 0.9309309798037064, "time": 3.5902143, "time_per_token": 0.040339486516853935}}
{"outputs": [{"text": "resp = requests.get(URL + username)\n    resp.raise_for_status()\n    data = resp.json()\n    return {\n        'login': data['login'],\n        'url': data['html_url'],\n        'avatar_url': data['avatar_url'],\n        'created_at': data['created_at'],\n        'followers': data['followers'],\n        'location': data['location'],\n        'name': data['name'],\n        'public_repos': data['public_repos'],\n        'repos_url': data['repos_url'],\n        'twitter_username': data['twitter_username'],\n        'bio': data['bio'],\n    }", "tokens": ["resp", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "resp", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "data", " =", " resp", ".", "json", "()", "\n", "    ", "return", " {", "\n", "        ", "'", "login", "':", " data", "['", "login", "']", ",", "\n", "        ", "'", "url", "':", " data", "['", "html", "_", "url", "']", ",", "\n", "        ", "'", "avatar", "_", "url", "':", " data", "['", "avatar", "_", "url", "']", ",", "\n", "        ", "'", "created", "_", "at", "':", " data", "['", "created", "_", "at", "']", ",", "\n", "        ", "'", "follow", "ers", "':", " data", "['", "follow", "ers", "']", ",", "\n", "        ", "'", "location", "':", " data", "['", "location", "']", ",", "\n", "        ", "'", "name", "':", " data", "['", "name", "']", ",", "\n", "        ", "'", "public", "_", "re", "pos", "':", " data", "['", "public", "_", "re", "pos", "']", ",", "\n", "        ", "'", "re", "pos", "_", "url", "':", " data", "['", "re", "pos", "_", "url", "']", ",", "\n", "        ", "'", "twitter", "_", "username", "':", " data", "['", "twitter", "_", "username", "']", ",", "\n", "        ", "'", "bio", "':", " data", "['", "bio", "']", ",", "\n", "    ", "}", "\n", "\n", "def"], "logprobs": [-2.985618829727173, -0.007849324494600296, -0.004785750061273575, -6.723177648382261e-05, -0.000648883986286819, -0.00442122109234333, -0.11033493280410767, -0.09036565572023392, -0.01433362253010273, -0.027713263407349586, -0.03832150250673294, -0.10394635796546936, -0.13016800582408905, -0.0018209319096058607, -0.0006859333370812237, -4.756337511935271e-05, -4.7801782784517854e-05, -0.00036554806865751743, -2.3603161025675945e-05, -0.0010417040903121233, -0.029360612854361534, -0.14031459391117096, -1.1457191705703735, -0.010809439234435558, -0.027392607182264328, -0.0001573438785271719, -0.0006411403883248568, -0.00491992337629199, -0.019851109012961388, -0.1955653727054596, -0.9177104830741882, -0.25559115409851074, -1.4434059858322144, -0.013473528437316418, -0.34740006923675537, -0.043650250881910324, -0.0078108832240104675, -0.9105390906333923, -0.18581734597682953, -0.0157941784709692, -0.00396727304905653, -0.22514702379703522, -0.016778070479631424, -0.026460440829396248, -0.1118488684296608, -1.6543164253234863, -0.002423090161755681, -0.027505921199917793, -0.049447257071733475, -0.6326205134391785, -0.00010716341057559475, -4.172238186583854e-05, -0.00020466140995267779, -0.05950336903333664, -0.005341187585145235, -0.04224858805537224, -0.018379617482423782, -1.6305071115493774, -0.4649606943130493, -0.0020785173401236534, -0.0004058252670802176, -0.007374565117061138, -0.020500557497143745, -0.009350435808300972, -0.001531619462184608, -0.0007751559023745358, -0.00042083943844772875, -0.10841425508260727, -0.0024559118319302797, -0.08005914092063904, -0.018730085343122482, -2.1298561096191406, -0.005076257977634668, -0.0010973153403028846, -0.0012516292044892907, -0.827538788318634, -0.01951552927494049, -0.001440797932446003, -2.145764938177308e-06, -6.12716976320371e-05, -0.010708016343414783, -0.08164352178573608, -0.005920255556702614, -0.05480680987238884, -0.007071230560541153, -3.372898578643799, -0.04552299529314041, -0.008755153976380825, -0.016022734344005585, -0.008827589452266693, -0.013384961523115635, -0.00022742546570952982, -0.00023147765023168176, -0.021641414612531662, -0.0011378012131899595, -0.048829853534698486, -0.0030750392470508814, -2.3773186206817627, -0.000532842765096575, -0.083296038210392, -0.0701349601149559, -0.00031013446277938783, -0.00027926836628466845, -0.07984432578086853, -0.0012259118957445025, -0.03053685463964939, -0.0036981781013309956, -0.5518070459365845, -0.0003325386205688119, -0.025429321452975273, -0.022181041538715363, -0.0002383901592111215, -0.00013600854435935616, -0.029837893322110176, -0.0007010624394752085, -0.0204975213855505, -0.0028062984347343445, -2.335312604904175, -0.012042202055454254, -0.017255300655961037, -0.0027921521104872227, -0.0011538759572431445, -0.0048561012372374535, -0.0009689403814263642, -0.0002867764269467443, -9.77468371274881e-05, -0.0001411338453181088, -0.0005315321614034474, -0.00010668662434909493, -0.06684506684541702, -0.0005718026659451425, -0.07253703474998474, -0.0034045374486595392, -1.1437150239944458, -0.1471504122018814, -0.06565988808870316, -0.009522728621959686, -0.0004614718782249838, -0.0029082882683724165, -0.0014686522772535682, -0.005732287652790546, -0.0020560333505272865, -3.0397906812140718e-05, -6.4490144723095e-05, -0.00015829740732442588, -0.13102051615715027, -0.0010340826120227575, -0.1398053616285324, -0.004916008561849594, -1.7238712310791016, -0.09298237413167953, -0.11134251952171326, -0.00135318236425519, -0.03977874293923378, -0.11915887892246246, -0.0012207920663058758, -0.0001679517881711945, -0.0009531007381156087, -0.0010337253334000707, -0.1314009726047516, -0.0009689403814263642, -0.19208283722400665, -0.010141155682504177, -2.9044997692108154, -0.003090845188125968, -0.2341795712709427, -0.011442393064498901, -0.0036997220013290644, -0.0011385156540200114, -0.3070324957370758, -0.0019321836298331618, -1.2059412002563477, -0.1524631679058075, -0.04793769121170044, -0.023523539304733276, -0.6700318455696106], "finish_reason": "stop"}], "metrics": {"energy": 174.31925816059103, "energy_per_token": 0.9904503304579036, "time": 7.3596954, "time_per_token": 0.04181645113636363}}
{"outputs": [{"text": "r = requests.get(URL + username)\n    r.raise_for_status()\n    return dict({\n        'login': r.text[1],\n        'name': unicodedata.normalize('NFD', r.text[2]),\n        'company': unicodedata.normalize('NFD', r.text[3]),\n        'location': unicodedata.normalize('NFD', r.text[4]),\n        'email': unicodedata.normalize('NFD', r.text[5]),\n        'created_at': r.text[6],\n        'updated_at': r.text[7],\n        'repos_url': r.text[8]\n    })", "tokens": ["r", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "    ", "r", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "return", " dict", "({", "\n", "        ", "'", "login", "':", " r", ".", "text", "[", "1", "]", ",", "\n", "        ", "'", "name", "':", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " r", ".", "text", "[", "2", "])", ",", "\n", "        ", "'", "company", "':", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " r", ".", "text", "[", "3", "])", ",", "\n", "        ", "'", "location", "':", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " r", ".", "text", "[", "4", "])", ",", "\n", "        ", "'", "email", "':", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " r", ".", "text", "[", "5", "])", ",", "\n", "        ", "'", "created", "_", "at", "':", " r", ".", "text", "[", "6", "]", ",", "\n", "        ", "'", "updated", "_", "at", "':", " r", ".", "text", "[", "7", "]", ",", "\n", "        ", "'", "re", "pos", "_", "url", "':", " r", ".", "text", "[", "8", "]", "\n", "    ", "})", "\n", "\n", "def"], "logprobs": [-3.3588240146636963, -0.006494724191725254, -0.0036988905631005764, -7.426462980220094e-05, -0.0003483880718704313, -0.00575943011790514, -0.084664486348629, -0.10196481645107269, -0.015335151925683022, -0.03099820204079151, -0.03415568917989731, -0.08438743650913239, -0.25085246562957764, -0.002170232590287924, -0.0016658727545291185, -2.3841830625315197e-06, -6.19869097135961e-05, -0.00015853578224778175, -1.7523612768854946e-05, -0.0015979153104126453, -0.0253963153809309, -0.1252346634864807, -1.3325021266937256, -1.9952843189239502, -2.5903496742248535, -1.162537693977356, -0.0301883015781641, -0.2956952750682831, -0.04724397137761116, -0.006267298012971878, -1.4484024047851562, -0.0007177399238571525, -2.085540294647217, -2.581875801086426, -1.3118267059326172, -2.892051935195923, -0.5963073968887329, -0.06247539073228836, -0.07246463745832443, -0.0412607416510582, -1.2084763050079346, -0.0055848280899226665, -0.28783121705055237, -0.0014456784119829535, -3.40932747349143e-05, -9.405170567333698e-05, -0.00014208737411536276, -0.004290779586881399, -4.911301948595792e-05, -0.09610013663768768, -0.010345404036343098, -2.8646793365478516, -0.003194232005625963, -0.0006974886637181044, -0.04399745166301727, -0.00012373158824630082, -0.024520564824342728, -0.020930837839841843, -1.1104564666748047, -0.14118902385234833, -1.441673994064331, -0.009139133617281914, -0.018255548551678658, -0.005545707419514656, -0.9321404099464417, -0.0026033578906208277, -0.22027307748794556, -0.00024005869636312127, -5.185469490243122e-05, -0.0005021026590839028, -2.884823152271565e-05, -3.957670196541585e-05, -5.364403477869928e-06, -0.005401895847171545, -0.0019759670831263065, -0.0008397151832468808, -2.3007127310847864e-05, -5.483612312673358e-06, -0.005894183646887541, -4.088794958079234e-05, -0.0005330810672603548, -0.003261605743318796, -0.1132265031337738, -0.02008645050227642, -0.05196308717131615, -0.0008515069494023919, -0.01778547093272209, -0.002702039433643222, -0.3052200675010681, -0.0014222278259694576, -0.03142791613936424, -0.00022182388056535274, -1.0013530300057027e-05, -2.47952248173533e-05, -5.8412379075889476e-06, -3.361645576660521e-05, -7.033323527139146e-06, -0.001708239782601595, -0.000270091783022508, -3.242440288886428e-05, -1.9073304429184645e-05, -2.0265558760002023e-06, -0.0023308033123612404, -3.969590397900902e-05, -7.033100700937212e-05, -0.0013410394312813878, -0.06365226954221725, -0.010482254438102245, -0.06193534657359123, -0.0004345426568761468, -0.04839892312884331, -0.004827629309147596, -2.043635845184326, -0.007314331363886595, -0.168767049908638, -0.0021803434938192368, -4.291525328881107e-06, -0.00010108436981681734, -3.3378546504536644e-06, -1.585470999998506e-05, -2.622600959512056e-06, -0.0014418693026527762, -0.0004812512779608369, -0.0003047717036679387, -2.1576648578047752e-05, -9.536738616588991e-07, -0.0030513890087604523, -7.629365427419543e-06, -0.00010239553375868127, -0.00160089076962322, -0.03597383573651314, -0.015047609806060791, -0.06735115498304367, -0.000310730334604159, -0.07107460498809814, -0.007037494797259569, -1.9255746603012085, -0.07763328403234482, -0.002991132438182831, -0.0018713833997026086, -0.9476625323295593, -0.00011777184408856556, -0.005206597037613392, -0.0014413930475711823, -0.07753290235996246, -0.07848204672336578, -0.20641854405403137, -0.006396179087460041, -0.040228746831417084, -0.004005743190646172, -1.0026885271072388, -0.0005640584276989102, -0.00034374051028862596, -0.0005530973430722952, -0.012868457473814487, -9.417090768693015e-05, -0.0001436368766007945, -0.000569300667848438, -0.013034144416451454, -0.0025517542380839586, -0.400223046541214, -0.001189954113215208, -0.2729176878929138, -0.01771578937768936, -2.088904857635498, -0.14261989295482635, -0.12689539790153503, -0.038880299776792526, -0.001013599568977952, -0.1724972426891327, -3.838465272565372e-05, -0.0033671134151518345, -0.001082073082216084, -0.025990953668951988, -0.007406396325677633, -1.2726120948791504, -0.06751295924186707, -0.010551262646913528, -0.3830961287021637, -0.02831927128136158, -0.7737858295440674], "finish_reason": "stop"}], "metrics": {"energy": 172.58272505283352, "energy_per_token": 0.9534957185239421, "time": 7.5769877, "time_per_token": 0.04186181049723757}}
{"outputs": [{"text": "try:\n        # Send request and get response\n        response = requests.get(URL + username)\n        response.raise_for_status()\n    except requests.exceptions.HTTPError as error:\n        raise error\n\n    # Extract data from the JSON response\n    result = response.json()\n    # Normalize string values to ASCII using unicodedata.normalize\n    result['login'] = unicodedata.normalize('NFD', result['login']).encode('ascii', 'ignore').decode('utf-8')\n    for key, value in result.items():\n        if isinstance(value, str):\n            result[key] = unicodedata.normalize('NFD', value).encode('ascii', 'ignore').decode('utf-8')\n    return result", "tokens": ["try", ":", "\n", "        ", "#", " Send", " request", " and", " get", " response", "\n", "        ", "response", " =", " requests", ".", "get", "(", "URL", " +", " username", ")", "\n", "        ", "response", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "except", " requests", ".", "except", "ions", ".", "HTTP", "Error", " as", " error", ":", "\n", "        ", "raise", " error", "\n", "\n", "    ", "#", " Ext", "ract", " data", " from", " the", " JSON", " response", "\n", "    ", "result", " =", " response", ".", "json", "()", "\n", "    ", "#", " Normal", "ize", " string", " values", " to", " ASC", "II", " using", " un", "ic", "oded", "ata", ".", "normal", "ize", "\n", "    ", "result", "['", "login", "']", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " result", "['", "login", "'])", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "for", " key", ",", " value", " in", " result", ".", "items", "():", "\n", "        ", "if", " isinstance", "(", "value", ",", " str", "):", "\n", "            ", "result", "[", "key", "]", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " value", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "return", " result", "\n", "\n", "if"], "logprobs": [-2.3715593814849854, -0.00035851728171110153, -0.0015113847330212593, -0.005200667306780815, -3.5218045711517334, -2.1387693881988525, -2.2610788345336914, -2.325927734375, -1.2955254316329956, -0.37762632966041565, -0.16669033467769623, -0.0009235645993612707, -0.21514147520065308, -0.001443773857317865, -0.0013985387049615383, -2.8729025871143676e-05, -0.0005173536483198404, -0.001049801823683083, -0.051646944135427475, -0.06303238868713379, -0.01134810596704483, -0.05762716755270958, -0.009934033267199993, -0.1365249752998352, -0.20836615562438965, -0.0007510940195061266, -0.0006416169344447553, -2.264974000354414e-06, -3.731181277544238e-05, -0.00018034738604910672, -1.3589766240329482e-05, -0.0005598884890787303, -0.12829850614070892, -2.2974250316619873, -0.013290622271597385, -0.018241267651319504, -2.5748875486897305e-05, -0.01391542423516512, -1.1920928244535389e-07, -0.00025078488397412, -0.11812449991703033, -0.0003522014303598553, -0.22454990446567535, -2.3456053733825684, -0.007099401671439409, -0.010690443217754364, -0.0018932766979560256, -1.0252127647399902, -0.36897528171539307, -0.09011077880859375, -0.3986532986164093, -0.001255677198059857, -0.3077062666416168, -1.6676501035690308, -0.002689674962311983, -0.756923258304596, -0.31456515192985535, -1.3353080749511719, -1.9040472507476807, -0.08800269663333893, -0.2629379332065582, -0.0012032896047458053, -3.47694730758667, -0.04157743975520134, -0.10072150826454163, -0.0001736728590913117, -0.001166259404271841, -0.0033154303673654795, -0.01647229865193367, -1.1160582304000854, -1.3801372051239014, -0.2934068739414215, -0.015146597288548946, -1.5646121501922607, -0.8451088666915894, -0.46950387954711914, -0.023295877501368523, -0.00017689094238448888, -2.804755210876465, -0.34059610962867737, -0.039394088089466095, -0.00011216964776394889, -0.004495277069509029, -0.6127567887306213, -0.012717809528112411, -0.00015901254664640874, -0.8606363534927368, -0.0044513666070997715, -1.0010910034179688, -0.6470219492912292, -0.05125992000102997, -0.001547330990433693, -0.005326484329998493, -0.03543849661946297, -0.003243901301175356, -1.6093124941107817e-05, -0.00014208737411536276, -2.8967437174287625e-05, -7.176141662057489e-05, -1.9550132492440753e-05, -0.12288761138916016, -0.06522196531295776, -2.590670108795166, -0.00013672371278516948, -0.0002464944263920188, -0.022600576281547546, -0.018672987818717957, -0.0003719830128829926, -0.10472564399242401, -0.09952802211046219, -0.0035015956964343786, -0.021910857409238815, -0.23803099989891052, -0.002623927313834429, -0.0004357342259027064, -0.04038618505001068, -0.003887359518557787, -0.0015401893761008978, -0.01809985563158989, -0.00213668798096478, -0.601208508014679, -0.807732343673706, -0.07225494831800461, -0.00046969347749836743, -0.0034303173888474703, -0.012687559239566326, -0.4050719439983368, -2.7851169109344482, -0.24075376987457275, -0.3027651011943817, -0.047192007303237915, -0.00011681827891152352, -0.01829206757247448, -0.01094103790819645, -0.0032989149913191795, -0.00035982808913104236, -0.005194263532757759, -0.003350123530253768, -0.36743149161338806, -0.04726705327630043, -6.687417771900073e-05, -0.0029916076455265284, -0.00016616393986623734, -0.08801186829805374, -0.018040968105196953, -0.010718630626797676, -0.0009575072908774018, -0.06182485818862915, -0.00012754580529872328, -0.00021753329201601446, -0.0004886387032456696, -0.0001284993631998077, -0.07689010351896286, -0.0011014830088242888, -1.1920922133867862e-06, -8.177422569133341e-05, -7.510157047363464e-06, -1.1086402082582936e-05, -1.0728830375228426e-06, -0.005734539590775967, -0.0007904027588665485, -0.0002227773511549458, -6.556489552167477e-06, -2.145764938177308e-06, -0.005343677941709757, -0.004126249346882105, -0.000812915270216763, -0.0004951919545419514, -0.005126545205712318, -0.0010407513473182917, -0.0009953788248822093, -4.172316494077677e-06, -0.002843267982825637, -0.0001705739414319396, -0.0003334919747430831, -0.0012542485492303967, -0.0002892790944315493, -0.005044589750468731, -0.00011276562872808427, -0.004689646884799004, -1.4424220353248529e-05, -0.000125281119835563, -0.003121862420812249, -0.626462459564209, -0.08826892077922821, -0.0027808588929474354, -0.3871235251426697, -0.011768203228712082, -1.210487723350525], "finish_reason": "stop"}], "metrics": {"energy": 200.07217389011396, "energy_per_token": 1.0585829306355237, "time": 8.208755, "time_per_token": 0.04343256613756614}}
