{"outputs": [{"text": "return LinearRegression()", "tokens": ["return", " Linear", "Reg", "ression", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.9610658884048462, -0.02548615075647831, -5.340433563105762e-05, -0.0026927662547677755, -0.15797413885593414, -2.0316178798675537, -2.3841855067985307e-07, -3.576278118089249e-07, -0.00016544880054425448, -0.0002975021197926253, -0.17008520662784576], "finish_reason": "stop"}], "metrics": {"energy": 33.34674331855774, "energy_per_token": 3.0315221198688858, "time": 1.484664, "time_per_token": 0.13496945454545453}}
{"outputs": [{"text": "model = LinearRegression()\n    df = pd.DataFrame(d)\n    model.fit(df[[target, 'x', 'y']], df[target])\n    return model", "tokens": ["model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "d", ")", "\n", "    ", "model", ".", "fit", "(", "df", "[[", "target", ",", " '", "x", "'", ",", " '", "y", "']", "]", ",", " df", "[", "target", "])", "\n", "    ", "return", " model", "\n", "\n", "if"], "logprobs": [-2.092891216278076, -0.017263034358620644, -0.01273440569639206, -2.884823152271565e-05, -0.0013085383689031005, -0.10149706155061722, -0.024209704250097275, -0.063966765999794, -2.8972153663635254, -0.010925001464784145, -0.007806743495166302, -0.00011288482346571982, -0.004898452199995518, -0.030908284708857536, -0.12249767780303955, -0.07305986434221268, -0.015030934475362301, -0.10113435238599777, -0.8201990127563477, -0.003033443121239543, -0.0002840353990904987, -0.0032500799279659986, -0.04840153455734253, -1.2451121807098389, -0.8036238551139832, -0.23709557950496674, -0.06056268885731697, -0.03212807700037956, -1.1522126197814941, -0.026683203876018524, -0.002765285549685359, -0.004279147367924452, -0.1286448836326599, -0.002911735326051712, -0.13081951439380646, -0.016701167449355125, -0.3882914185523987, -0.008967719040811062, -0.005954621359705925, -0.005326366052031517, -0.06983029097318649, -0.015832431614398956, -0.0024370038881897926, -0.5293640494346619, -0.014941683039069176, -1.3251246213912964], "finish_reason": "stop"}], "metrics": {"energy": 49.306346191406234, "energy_per_token": 1.0718770911175268, "time": 1.9065224, "time_per_token": 0.04144613913043478}}
{"outputs": [{"text": "df = pd.DataFrame(d)\n    model = LinearRegression()\n    model.fit(df[['x', 'y']], df[target])\n    return model", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "d", ")", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "df", "[", "['", "x", "'", ",", " '", "y", "']", "]", ",", " df", "[", "target", "])", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-2.180530071258545, -0.018759334459900856, -0.007124258670955896, -5.602820692729438e-06, -0.006912366021424532, -0.04576478525996208, -0.14182201027870178, -0.06057155132293701, -0.01744697242975235, -0.05733780190348625, -1.507047176361084, -0.0070516993291676044, -0.004299563355743885, -2.002696055569686e-05, -0.001167450100183487, -0.061007365584373474, -0.15670666098594666, -0.09816098213195801, -0.30047911405563354, -0.0037260884419083595, -0.0003219324571546167, -0.0037080359179526567, -0.0468924380838871, -0.43752723932266235, -0.05609170347452164, -0.0036322588566690683, -0.031332146376371384, -0.004059883765876293, -0.04940176010131836, -0.0809643417596817, -0.018679775297641754, -0.003720506327226758, -0.028966255486011505, -0.005060483235865831, -0.012548891827464104, -0.005611856002360582, -0.0021974719129502773, -0.005034270230680704, -0.08009269833564758, -0.008234242908656597, -0.002732949797064066, -0.5517313480377197, -0.012895524501800537, -0.8202996850013733], "finish_reason": "stop"}], "metrics": {"energy": 43.324928094863886, "energy_per_token": 0.984657456701452, "time": 1.9110808, "time_per_token": 0.043433654545454545}}
{"outputs": [{"text": "return LinearRegression()", "tokens": ["return", " Linear", "Reg", "ression", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.0386996269226074, -0.02333640493452549, -5.447716102935374e-05, -0.003668128978461027, -0.17502225935459137, -2.127516984939575, -2.3841855067985307e-07, -3.576278118089249e-07, -0.00020704510097857565, -0.00040797016117721796, -0.15623986721038818], "finish_reason": "stop"}], "metrics": {"energy": 6.045829513549805, "energy_per_token": 0.5496208648681641, "time": 0.228844, "time_per_token": 0.020804}}
{"outputs": [{"text": "# TODO: Implement linear regression on target.\n\n    # Return a linear regression model.\n    return None", "tokens": ["#", " TODO", ":", " Im", "plement", " linear", " regression", " on", " target", ".", "\n", "\n", "    ", "#", " Return", " a", " linear", " regression", " model", ".", "\n", "    ", "return", " None", "\n", "\n", "if"], "logprobs": [-2.0827670097351074, -1.8946675062179565, -0.42488110065460205, -1.4772948026657104, -0.0019656161312013865, -2.1306982040405273, -0.006437753792852163, -3.1923718452453613, -3.1282081604003906, -2.483759880065918, -0.06570164114236832, -2.1006522178649902, -0.19295279681682587, -1.2975268363952637, -5.041717529296875, -1.06411612033844, -1.5970721244812012, -0.07859037816524506, -0.19028645753860474, -0.4281851053237915, -0.017090193927288055, -0.07724393904209137, -0.43047985434532166, -1.9682598114013672, -0.338617742061615, -0.012296108528971672, -1.5031977891921997], "finish_reason": "stop"}], "metrics": {"energy": 29.068894386291504, "energy_per_token": 1.0766257180107965, "time": 0.84942037, "time_per_token": 0.03146001370370371}}
{"outputs": [{"text": "df = pd.DataFrame(d)\n\n    x_train = df[['x', 'y']].values\n    y_train = df[target].values\n\n    regression = LinearRegression()\n    regression.fit(x_train, y_train)\n\n    return regression", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "d", ")", "\n", "\n", "    ", "x", "_", "train", " =", " df", "[", "['", "x", "'", ",", " '", "y", "']", "]", ".", "values", "\n", "    ", "y", "_", "train", " =", " df", "[", "target", "]", ".", "values", "\n", "\n", "    ", "reg", "ression", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "reg", "ression", ".", "fit", "(", "x", "_", "train", ",", " y", "_", "train", ")", "\n", "\n", "    ", "return", " regression", "\n", "\n", "def"], "logprobs": [-2.180530071258545, -0.018759334459900856, -0.007124258670955896, -5.602820692729438e-06, -0.006912366021424532, -0.04576478525996208, -0.14182201027870178, -0.06057155132293701, -0.01744697242975235, -2.888422966003418, -0.0011947167804464698, -3.4958078861236572, -1.380826711654663, -3.18013334274292, -0.07698072493076324, -0.032014477998018265, -0.7571156024932861, -0.7229300141334534, -0.003000046359375119, -0.39658123254776, -0.019722431898117065, -0.03173850476741791, -0.06259969621896744, -0.06675675511360168, -0.020476965233683586, -1.9706064462661743, -0.7471233010292053, -0.07195170223712921, -0.004583211150020361, -0.05621308088302612, -0.007379535119980574, -0.009307565167546272, -0.00048565989709459245, -0.005100334528833628, -0.09498383849859238, -0.0361793152987957, -0.000931544229388237, -0.06084641069173813, -0.019221937283873558, -0.008111273869872093, -0.0958402156829834, -0.00014256415306590497, -2.3746321201324463, -2.490567445755005, -0.1912306398153305, -0.00156589865218848, -7.271740287251305e-06, -0.000671042304020375, -0.02332662232220173, -0.11884137243032455, -0.012942126020789146, -0.007010149769484997, -0.0003979606262873858, -0.00033539868309162557, -8.022463589441031e-05, -7.033100700937212e-05, -0.0015218593180179596, -0.0011725700460374355, -2.6464111215318553e-05, -0.00040820849244482815, -0.0011468507582321763, -4.792098479811102e-05, -1.5497195136049413e-06, -0.0007568117580376565, -0.0014246086357161403, -0.10275435447692871, -0.00031859567388892174, -0.010965327732264996, -0.0035864098463207483, -0.5222238898277283, -0.00881459191441536, -0.9867788553237915], "finish_reason": "stop"}], "metrics": {"energy": 99.78675314331055, "energy_per_token": 1.3859271269904243, "time": 2.9579194, "time_per_token": 0.04108221388888889}}
{"outputs": [{"text": "df = pd.DataFrame(d)\n    model = LinearRegression()\n    if target == 'z':\n        model.fit(df.x, df.z)\n    else:\n        model.fit(df[target], df.z)\n    return model", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "d", ")", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "if", " target", " ==", " '", "z", "':", "\n", "        ", "model", ".", "fit", "(", "df", ".", "x", ",", " df", ".", "z", ")", "\n", "    ", "else", ":", "\n", "        ", "model", ".", "fit", "(", "df", "[", "target", "]", ",", " df", ".", "z", ")", "\n", "    ", "return", " model"], "logprobs": [-2.180530071258545, -0.018759334459900856, -0.007124258670955896, -5.602820692729438e-06, -0.006912366021424532, -0.04576478525996208, -0.14182201027870178, -0.06057155132293701, -0.01744697242975235, -0.05733780190348625, -1.507047176361084, -0.0070516993291676044, -0.004299563355743885, -2.002696055569686e-05, -0.001167450100183487, -0.061007365584373474, -0.15670666098594666, -0.09816098213195801, -2.0114338397979736, -0.02431674860417843, -0.23818311095237732, -0.03953011333942413, -0.3383798897266388, -0.0032667149789631367, -0.008205156773328781, -0.0033924193121492863, -0.18590277433395386, -0.003989001736044884, -0.00015710550360381603, -0.008256351575255394, -0.05012720823287964, -3.2244396209716797, -1.017529010772705, -0.6196014285087585, -0.012119464576244354, -0.09013049304485321, -0.06303820759057999, -0.009195949882268906, -0.004981013014912605, -0.10262612253427505, -0.44922688603401184, -0.0002320735511602834, -0.0037595797330141068, -0.0002329078270122409, -0.014636406674981117, -0.0001389883691444993, -3.325883881188929e-05, -0.0006927236099727452, -0.0005712069687433541, -2.985257148742676, -0.5285242795944214, -0.013347085565328598, -0.051108602434396744, -0.003569661406800151, -0.05242167040705681, -0.28226351737976074, -0.0012823462020605803, -0.0028076060116291046, -0.07541303336620331, -0.007057617884129286, -0.002955238102003932], "finish_reason": "stop"}], "metrics": {"energy": 93.82487983703612, "energy_per_token": 1.538112784213707, "time": 2.539661, "time_per_token": 0.0416337868852459}}
{"outputs": [{"text": "df = pd.DataFrame(d)\n    df = df.dropna()\n    df = df.rename(columns={target: 'y'})\n\n    model = LinearRegression()\n    model.fit(df[['x']], df.y)\n\n    return model", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "d", ")", "\n", "    ", "df", " =", " df", ".", "drop", "na", "()", "\n", "    ", "df", " =", " df", ".", "rename", "(", "columns", "={", "target", ":", " '", "y", "'})", "\n", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "df", "[", "['", "x", "']", "]", ",", " df", ".", "y", ")", "\n", "\n", "    ", "return", " model", "\n", "\n", "#"], "logprobs": [-2.180530071258545, -0.018759334459900856, -0.007124258670955896, -5.602820692729438e-06, -0.006912366021424532, -0.04576478525996208, -0.14182201027870178, -0.06057155132293701, -0.01744697242975235, -0.05733780190348625, -1.842881679534912, -0.9276089072227478, -0.015417560003697872, -0.27617040276527405, -0.7400954961776733, -0.5442696809768677, -0.4206838011741638, -0.03200766444206238, -0.11820966005325317, -1.5223948955535889, -0.820084273815155, -0.014388734474778175, -0.33496156334877014, -1.9388716220855713, -0.068708635866642, -0.021868404000997543, -0.05006133019924164, -1.0183974504470825, -0.014334327541291714, -0.0972304418683052, -0.7943270206451416, -0.08246617019176483, -0.012432221323251724, -2.3601536750793457, -0.0010833829874172807, -0.9411749839782715, -0.004898095969110727, -0.003352381056174636, -1.2516897186287679e-05, -0.0006946296198293567, -0.05628497526049614, -0.1509459763765335, -0.030560556799173355, -0.06295895576477051, -0.0011010067537426949, -0.000226472009671852, -0.0007607426377944648, -0.042061612010002136, -0.23111379146575928, -0.0038438972551375628, -0.005217388737946749, -0.39137575030326843, -0.0005619138828478754, -0.011948796920478344, -0.006161266937851906, -2.916623830795288, -0.021088657900691032, -0.005496270954608917, -0.0032775276340544224, -0.34848007559776306, -0.0018523454200476408, -0.00891904253512621, -0.00319126108661294, -0.5434004068374634, -0.008730337955057621, -2.128911256790161], "finish_reason": "stop"}], "metrics": {"energy": 66.60388356685638, "energy_per_token": 1.0091497510129754, "time": 2.7494106, "time_per_token": 0.041657736363636365}}
{"outputs": [{"text": "result = LinearRegression()\n    result.fit(d, d[target])\n    return result", "tokens": ["result", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "result", ".", "fit", "(", "d", ",", " d", "[", "target", "])", "\n", "    ", "return", " result"], "logprobs": [-4.967830181121826, -0.07699628919363022, -0.1449361890554428, -6.747018051100895e-05, -0.0003997480380348861, -0.13521282374858856, -0.14496909081935883, -0.06051679328083992, -0.30887359380722046, -0.003602326614782214, -0.0006934384000487626, -0.10300259292125702, -1.1754553318023682, -1.7632501125335693, -0.3267216384410858, -0.08006596565246582, -0.004481866490095854, -0.022197948768734932, -0.013022142462432384, -0.12548568844795227, -0.023154130205512047, -0.005151451099663973], "finish_reason": "stop"}], "metrics": {"energy": 9.697437206268312, "energy_per_token": 0.44079260028492323, "time": 0.84918326, "time_per_token": 0.03859923909090909}}
{"outputs": [{"text": "x, y = [], []\n    for i in d:\n        x.append(i[target])\n        y.append(i['z'])\n    return LinearRegression(fit_intercept=True, normalize=False)", "tokens": ["x", ",", " y", " =", " []", ",", " []", "\n", "    ", "for", " i", " in", " d", ":", "\n", "        ", "x", ".", "append", "(", "i", "[", "target", "])", "\n", "        ", "y", ".", "append", "(", "i", "['", "z", "'])", "\n", "    ", "return", " Linear", "Reg", "ression", "(", "fit", "_", "inter", "cept", "=", "True", ",", " normalize", "=", "False", ")", "\n", "\n", "def"], "logprobs": [-2.6202025413513184, -1.8372316360473633, -0.015794647857546806, -0.7573975324630737, -0.4734900891780853, -0.0004518203204497695, -0.0036655159201472998, -0.00448791915550828, -0.1486412137746811, -0.062240634113550186, -1.8857587575912476, -0.01903516799211502, -0.17813605070114136, -0.0013188959565013647, -0.0031697528902441263, -0.0032290483359247446, -0.1536925733089447, -0.016337674111127853, -0.0010494445450603962, -0.007316461764276028, -0.03847694769501686, -0.19901981949806213, -0.6106665730476379, -0.04948015883564949, -0.007127691060304642, -0.008748890832066536, -0.008230932056903839, -0.0001668790791882202, -0.00020311199477873743, -0.004771157167851925, -0.015650425106287003, -0.1962631344795227, -1.2416218519210815, -0.0014937683008611202, -0.0011832863092422485, -0.21368370950222015, -0.7553329467773438, -0.009061521850526333, -1.5616295058862306e-05, -0.0017357297474518418, -1.1364433765411377, -0.009313352406024933, -1.7762025890988298e-05, -0.00029023250681348145, -0.0002244459028588608, -0.007742159068584442, -0.3193359375, -1.3351466655731201, -0.6192055940628052, -0.0009386900928802788, -0.220407634973526, -0.5724321603775024, -0.04343682900071144, -0.011974592693150043, -0.6656347513198853], "finish_reason": "stop"}], "metrics": {"energy": 46.22025325393677, "energy_per_token": 0.8403682409806685, "time": 2.3263557, "time_per_token": 0.04229737636363637}}
{"outputs": [{"text": "# TODO\n    pass", "tokens": ["#", " TODO", "\n", "    ", "pass", "\n", "\n", "if"], "logprobs": [-2.0827670097351074, -1.8946675062179565, -1.9770995378494263, -0.12407409399747849, -1.3818175792694092, -0.20352758467197418, -0.013334734365344048, -1.5065547227859497], "finish_reason": "stop"}], "metrics": {"energy": 9.522016868591308, "energy_per_token": 1.1902521085739135, "time": 0.23284225, "time_per_token": 0.02910528125}}
{"outputs": [{"text": "model = LinearRegression()\n\n    X = np.array([d[target] for d in d])\n    y = np.array([d['z'] for d in d])\n\n    model.fit(X, y)\n\n    return model", "tokens": ["model", " =", " Linear", "Reg", "ression", "()", "\n", "\n", "    ", "X", " =", " np", ".", "array", "([", "d", "[", "target", "]", " for", " d", " in", " d", "])", "\n", "    ", "y", " =", " np", ".", "array", "([", "d", "['", "z", "']", " for", " d", " in", " d", "])", "\n", "\n", "    ", "model", ".", "fit", "(", "X", ",", " y", ")", "\n", "\n", "    ", "return", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.092891216278076, -0.017263034358620644, -0.01273440569639206, -2.884823152271565e-05, -0.0013085383689031005, -0.10149706155061722, -0.024209704250097275, -2.782621383666992, -0.00416661286726594, -2.037750244140625, -0.13292188942432404, -1.713266372680664, -5.304672595229931e-05, -0.1097753718495369, -0.055286653339862823, -0.7420158386230469, -0.08752311766147614, -0.8775055408477783, -0.04537547752261162, -0.01869826205074787, -0.002620598068460822, -9.941560711013153e-05, -0.010543123818933964, -0.02411894127726555, -0.44477662444114685, -0.03382960334420204, -0.6008610129356384, -0.0011456600623205304, -0.020896514877676964, -0.00013600854435935616, -0.009820835664868355, -0.00853001419454813, -0.03567134588956833, -0.31483355164527893, -2.1437056064605713, -0.0003079893649555743, -0.004003605805337429, -4.827859811484814e-05, -1.847726889536716e-05, -0.0004911408759653568, -0.0023922892287373543, -0.002562217880040407, -0.49066904187202454, -0.0002308817347511649, -0.08989287912845612, -0.0017970141489058733, -0.0014642480527982116, -0.000734178873244673, -0.0030204886570572853, -0.14097236096858978, -0.019902294501662254, -0.0032320187892764807, -0.003996600396931171, -0.2086436003446579, -0.0012250783620402217, -0.015271756798028946, -0.002786683849990368, -1.0601556301116943, -5.960462772236497e-07, -1.0728830375228426e-06, -0.00030560590676032007, -0.00019596086349338293, -0.11657124012708664], "finish_reason": "stop"}], "metrics": {"energy": 91.10987754821778, "energy_per_token": 1.4461885325113935, "time": 2.5389073, "time_per_token": 0.04030011587301587}}
{"outputs": [{"text": "x_data = []\n    y_data = []\n    for data in d:\n        x_data.append(data[target])\n        y_data.append(data['x'])\n    model = LinearRegression().fit(x_data, y_data)\n    return model", "tokens": ["x", "_", "data", " =", " []", "\n", "    ", "y", "_", "data", " =", " []", "\n", "    ", "for", " data", " in", " d", ":", "\n", "        ", "x", "_", "data", ".", "append", "(", "data", "[", "target", "])", "\n", "        ", "y", "_", "data", ".", "append", "(", "data", "['", "x", "'])", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "x", "_", "data", ",", " y", "_", "data", ")", "\n", "    ", "return", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.6202025413513184, -1.6921586990356445, -1.6544913053512573, -0.16411229968070984, -1.6624311208724976, -0.014928529970347881, -0.0016782497987151146, -0.032972510904073715, -0.001473889802582562, -0.0026359357871115208, -0.0005626287311315536, -0.00392892025411129, -0.0002805792901199311, -0.16541710495948792, -1.4589773416519165, -2.2794008255004883, -0.2143152505159378, -0.006605220027267933, -0.0009538153535686433, -0.0014382981462404132, -0.004230597522109747, -0.2085876762866974, -0.11356644332408905, -0.00615380285307765, -0.004138952121138573, -0.0011185110779479146, -0.00455710431560874, -0.025465000420808792, -0.35112878680229187, -0.8612141013145447, -0.051852282136678696, -0.005333480425179005, -0.0065058572217822075, -0.009218628518283367, -0.0002057340752799064, -9.905801562126726e-05, -0.00015686711412854493, -0.00031025364296510816, -0.004940563812851906, -0.011631293222308159, -0.15857186913490295, -0.7917568683624268, -0.00831510964781046, -0.0013881819322705269, -0.3436547815799713, -0.9593779444694519, -0.008337689563632011, -0.0036795311607420444, -1.5139465176616795e-05, -0.0008700875914655626, -0.0767463743686676, -0.645665168762207, -0.00027176024741493165, -0.003233088180422783, -0.31417882442474365, -0.013118977658450603, -0.0004297763225622475, -0.013020847924053669, -0.013565734028816223, -0.0007072569569572806, -2.9802276912960224e-06, -0.0023412692826241255, -0.0076613640412688255, -0.04509439319372177, -0.015067102387547493, -0.005786216352134943, -1.399031400680542, -8.344646857949556e-07, -5.960462772236497e-07, -0.0001778444420779124, -0.0002177716523874551, -0.09370435774326324], "finish_reason": "stop"}], "metrics": {"energy": 86.90729084014893, "energy_per_token": 1.2070457061131796, "time": 2.9610522, "time_per_token": 0.041125725}}
{"outputs": [{"text": "if target == 'z':\n        y = [item['z'] for item in d]\n        x = [item['x'] for item in d]\n        regr = LinearRegression()\n        regr.fit(x, y)\n        return regr\n    else:\n        x = [item['x'] for item in d]\n        y = [item['y'] for item in d]\n        regr = LinearRegression()\n        regr.fit(x, y)\n        return regr", "tokens": ["if", " target", " ==", " '", "z", "':", "\n", "        ", "y", " =", " [", "item", "['", "z", "']", " for", " item", " in", " d", "]", "\n", "        ", "x", " =", " [", "item", "['", "x", "']", " for", " item", " in", " d", "]", "\n", "        ", "reg", "r", " =", " Linear", "Reg", "ression", "()", "\n", "        ", "reg", "r", ".", "fit", "(", "x", ",", " y", ")", "\n", "        ", "return", " reg", "r", "\n", "    ", "else", ":", "\n", "        ", "x", " =", " [", "item", "['", "x", "']", " for", " item", " in", " d", "]", "\n", "        ", "y", " =", " [", "item", "['", "y", "']", " for", " item", " in", " d", "]", "\n", "        ", "reg", "r", " =", " Linear", "Reg", "ression", "()", "\n", "        ", "reg", "r", ".", "fit", "(", "x", ",", " y", ")", "\n", "        ", "return", " reg", "r", "\n", "\n", "def"], "logprobs": [-3.206407070159912, -0.2238580733537674, -0.25688689947128296, -0.061966605484485626, -0.45154115557670593, -0.007297290023416281, -0.02415536344051361, -0.00673760985955596, -3.0410830974578857, -0.1999637931585312, -0.6355273723602295, -3.2394285202026367, -0.7041207551956177, -0.015722598880529404, -0.0001012035645544529, -0.002193189924582839, -0.001517693279311061, -0.00010299152199877426, -0.004472728352993727, -0.0027014450170099735, -0.0072840359061956406, -0.08124607056379318, -0.0914081409573555, -0.011742519214749336, -0.05917128920555115, -0.02653021179139614, -0.048170607537031174, -0.02205651067197323, -8.594620157964528e-05, -0.005301583092659712, -7.533743337262422e-05, -1.5616295058862306e-05, -0.00029202012228779495, -0.0027151170652359724, -0.0007730118231847882, -0.8804649114608765, -2.894911289215088, -1.9076769351959229, -0.010119561105966568, -0.003862184938043356, -1.490105023549404e-05, -0.00045753977610729635, -0.05424792692065239, -0.5493298172950745, -0.0849735364317894, -0.03967173770070076, -0.0008660380262881517, -0.0016467118402943015, -0.0001627074379939586, -0.002964865416288376, -0.1604144126176834, -0.03195293992757797, -0.038677554577589035, -0.0005641775787808001, -0.0030976191628724337, -0.2250174880027771, -0.07168231904506683, -0.011274438351392746, -4.529942543740617e-06, -0.009782115928828716, -0.11794249713420868, -0.7862982153892517, -0.00018499570433050394, -0.004939021542668343, -0.0011469698511064053, -1.6630821228027344, -0.023211786523461342, -0.016021326184272766, -0.003952430561184883, -0.3392302393913269, -0.1853799968957901, -9.059495641849935e-05, -0.00242594419978559, -4.95898348162882e-05, -1.537788011773955e-05, -0.00026222606538794935, -0.001617315225303173, -0.0006737822550348938, -0.00027295202016830444, -0.033476777374744415, -0.0010339635191485286, -0.0009243983076885343, -0.0015423318836838007, -0.20708154141902924, -0.015492096543312073, -2.90866428258596e-05, -0.0012981806648895144, -1.585470999998506e-05, -3.6954811548639555e-06, -0.0001282609737245366, -0.0021416840609163046, -0.0009891861118376255, -0.00394043792039156, -0.03326912969350815, -0.0009577454766258597, -0.0025630502495914698, -0.00041083001997321844, -9.298280929215252e-06, -0.00020847532141488045, -0.009836888872087002, -0.0005228344234637916, -0.0003357561945449561, -0.002350783674046397, -3.635817120084539e-05, -0.00011300401820335537, -1.6212332411669195e-05, -0.00125698687043041, -0.06329236179590225, -0.001167926355265081, -0.0034313867799937725, -0.0004814896092284471, -0.0006530536338686943, -0.0049999915063381195, -0.011794828809797764, -0.004934513941407204, -1.811964830267243e-05, -0.32047832012176514, -0.0231451615691185, -0.6724631786346436], "finish_reason": "stop"}], "metrics": {"energy": 152.7490529594421, "energy_per_token": 1.2836054870541354, "time": 5.059341, "time_per_token": 0.04251547058823529}}
{"outputs": [{"text": "if target == 'z':\n        X = np.array([d['x'] for d in d])\n        y = np.array([d[target] for d in d])\n    else:\n        X = np.array([d['y'] for d in d])\n        y = np.array([d[target] for d in d])\n    return LinearRegression().fit(X, y)", "tokens": ["if", " target", " ==", " '", "z", "':", "\n", "        ", "X", " =", " np", ".", "array", "([", "d", "['", "x", "']", " for", " d", " in", " d", "])", "\n", "        ", "y", " =", " np", ".", "array", "([", "d", "[", "target", "]", " for", " d", " in", " d", "])", "\n", "    ", "else", ":", "\n", "        ", "X", " =", " np", ".", "array", "([", "d", "['", "y", "']", " for", " d", " in", " d", "])", "\n", "        ", "y", " =", " np", ".", "array", "([", "d", "[", "target", "]", " for", " d", " in", " d", "])", "\n", "    ", "return", " Linear", "Reg", "ression", "()", ".", "fit", "(", "X", ",", " y", ")", "\n", "\n", "def"], "logprobs": [-3.206407070159912, -0.2238580733537674, -0.25688689947128296, -0.061966605484485626, -0.45154115557670593, -0.007297290023416281, -0.02415536344051361, -0.00673760985955596, -1.9826171398162842, -0.11913104355335236, -1.8002068996429443, -0.00014935807848814875, -0.13560011982917786, -0.08335373550653458, -0.7080639600753784, -1.3316230773925781, -0.03278448432683945, -0.00013100242358632386, -0.008173114620149136, -0.00041392818093299866, -3.9457496313843876e-05, -0.006038753781467676, -0.011898379772901535, -0.1291518658399582, -0.006490460131317377, -0.3430047929286957, -0.0011074369540438056, -0.0041594901122152805, -0.00018356545479036868, -0.0013000854523852468, -0.0007626485894434154, -0.00824547465890646, -1.5965864658355713, -0.026453474536538124, -0.0005469018360599875, -0.0013606823049485683, -4.327203714638017e-05, -1.4066597032069694e-05, -0.00036971885128878057, -0.0015163839561864734, -0.003115682862699032, -0.7980644106864929, -0.24142801761627197, -0.00012158608296886086, -0.002961418591439724, -0.00024005869636312127, -0.018674977123737335, -0.0016551617300137877, -0.00528972502797842, -4.637133679352701e-05, -0.01196693629026413, -0.0021504866890609264, -0.04153066501021385, -0.7200028300285339, -0.03359309211373329, -3.480850500636734e-05, -0.001019911258481443, -1.3947389561508317e-05, -3.4570634852570947e-06, -0.00026067672297358513, -0.0002015625941567123, -0.0005026984144933522, -0.00018594920402392745, -0.001978227635845542, -6.031808152329177e-05, -0.0003875934926327318, -8.105902816168964e-05, -0.00025459862081333995, -0.0007326302584260702, -0.0014028241857886314, -0.04827341064810753, -0.0001532914029667154, -0.0006423317245207727, -0.00019262365822214633, -5.602820692729438e-06, -4.6491513785440475e-06, -4.994744449504651e-05, -0.0003491030656732619, -0.0003510097449179739, -0.5655192732810974, -0.6230667233467102, -0.009249691851437092, -2.098061486321967e-05, -0.0006370898918248713, -0.07669956237077713, -0.0012282931711524725, -9.727005090098828e-05, -6.592056161025539e-05, -0.0026359357871115208, -0.015639863908290863, -0.020997609943151474, -0.19255739450454712, -0.20148895680904388, -0.014261936768889427, -0.6337155699729919], "finish_reason": "stop"}], "metrics": {"energy": 124.94453048133852, "energy_per_token": 1.3152055840140897, "time": 4.005924, "time_per_token": 0.04216762105263158}}
{"outputs": [{"text": "model = LinearRegression()\n    model.fit(pd.DataFrame([d[target] for d in d]), pd.DataFrame(d[\"z\"]).iloc[0])\n    return model", "tokens": ["model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "pd", ".", "DataFrame", "([", "d", "[", "target", "]", " for", " d", " in", " d", "])", ",", " pd", ".", "DataFrame", "(", "d", "[", "\"", "z", "\"", "])", ".", "il", "oc", "[", "0", "])", "\n", "    ", "return", " model", "\n", "\n", "#"], "logprobs": [-2.092891216278076, -0.017263034358620644, -0.01273440569639206, -2.884823152271565e-05, -0.0013085383689031005, -0.10149706155061722, -0.024209704250097275, -0.063966765999794, -0.645143985748291, -0.0027782435063272715, -0.0007175016799010336, -0.13999544084072113, -0.5220382809638977, -0.00040356122190132737, -0.027792686596512794, -2.2827236652374268, -0.6527020335197449, -0.0928012803196907, -0.2697320282459259, -0.012206141836941242, -0.011834884062409401, -0.0069506047293543816, -0.00018559163436293602, -0.010247002355754375, -0.03192291781306267, -0.15436580777168274, -0.43107903003692627, -0.0015382850542664528, -0.17127086222171783, -1.6330605745315552, -0.5013697743415833, -1.382878065109253, -1.9668848514556885, -2.68428897857666, -0.0003194298769813031, -2.3199472427368164, -0.6816708445549011, -1.7288318872451782, -4.708655978902243e-05, -2.0943760871887207, -0.40729671716690063, -0.1390860378742218, -0.02267877571284771, -0.0722903236746788, -0.01686856523156166, -0.004293153528124094, -0.42797398567199707, -0.017815684899687767, -2.123782157897949], "finish_reason": "stop"}], "metrics": {"energy": 35.21563448429108, "energy_per_token": 0.7186864180467567, "time": 2.1160705, "time_per_token": 0.04318511224489796}}
{"outputs": [{"text": "return LinearRegression()", "tokens": ["return", " Linear", "Reg", "ression", "()", "\n", "\n", "if"], "logprobs": [-2.0386996269226074, -0.02333640493452549, -5.447716102935374e-05, -0.003668128978461027, -0.17502225935459137, -0.3784133493900299, -0.016256045550107956, -1.504541039466858], "finish_reason": "stop"}], "metrics": {"energy": 5.634927314758301, "energy_per_token": 0.7043659143447877, "time": 0.22525288, "time_per_token": 0.02815661}}
{"outputs": [{"text": "x_values = [d['x'] for d in d]\n    y_values = [d[target] for d in d]\n\n    model = LinearRegression().fit(x_values, y_values)\n    return model", "tokens": ["x", "_", "values", " =", " [", "d", "['", "x", "']", " for", " d", " in", " d", "]", "\n", "    ", "y", "_", "values", " =", " [", "d", "[", "target", "]", " for", " d", " in", " d", "]", "\n", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "x", "_", "values", ",", " y", "_", "values", ")", "\n", "    ", "return", " model", "\n", "\n", "if"], "logprobs": [-2.6202025413513184, -1.6921586990356445, -1.4408491849899292, -0.05434604361653328, -0.36994481086730957, -0.7941150665283203, -2.1517598628997803, -0.002589684445410967, -0.00025340684805996716, -0.0038618287071585655, -0.00020346954988781363, -4.184158387943171e-05, -0.005238971672952175, -0.01765734702348709, -0.017590584233403206, -0.000740968796890229, -0.013179332949221134, -0.0002857038634829223, -0.0006680640508420765, -0.0003067976504098624, -0.0017415608745068312, -0.010688438080251217, -0.06626676768064499, -0.001620647613890469, -0.00021240839851088822, -0.0009378563845530152, -4.1483970562694594e-05, -9.179073458653875e-06, -0.0002889215829782188, -0.0011806668480858207, -0.0056110261939466, -1.2722632884979248, -0.0004037995240651071, -0.39476385712623596, -0.004225018434226513, -0.001822478836402297, -9.298280929215252e-06, -0.0002848696312867105, -0.03623392432928085, -0.8443426489830017, -0.00010418349120300263, -0.0003014348621945828, -0.08510547131299973, -0.002691933885216713, -7.56950321374461e-05, -0.050575755536556244, -0.0024573388509452343, -1.2159273865108844e-05, -8.344646857949556e-07, -0.0015958918957039714, -0.003326480044052005, -1.2430413961410522, -0.025161175057291985, -0.003945781383663416, -0.37149354815483093, -0.006710730958729982, -1.5893563032150269], "finish_reason": "stop"}], "metrics": {"energy": 90.42935529327391, "energy_per_token": 1.5864799174258581, "time": 2.5012178, "time_per_token": 0.04388101403508772}}
{"outputs": [{"text": "x = []\n    y = []\n    for record in d:\n        x.append(record[\"x\"])\n        y.append(record[target])\n\n    return LinearRegression().fit(x, y)", "tokens": ["x", " =", " []", "\n", "    ", "y", " =", " []", "\n", "    ", "for", " record", " in", " d", ":", "\n", "        ", "x", ".", "append", "(", "record", "[", "\"", "x", "\"", "])", "\n", "        ", "y", ".", "append", "(", "record", "[", "target", "])", "\n", "\n", "    ", "return", " Linear", "Reg", "ression", "()", ".", "fit", "(", "x", ",", " y", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-2.6202025413513184, -0.4495343863964081, -1.6983381509780884, -0.015384691767394543, -0.0010912423022091389, -0.015824804082512856, -0.0009653675369918346, -0.0036485311575233936, -0.00019870213873218745, -0.11675603687763214, -1.466354250907898, -3.834660768508911, -0.0008168459753505886, -0.005033202935010195, -0.0005963454605080187, -0.00154518848285079, -0.004109866451472044, -0.29310885071754456, -0.0230625718832016, -0.0007788485381752253, -0.004457656294107437, -0.01197471097111702, -0.2687302529811859, -0.3099786043167114, -0.001280560391023755, -7.426462980220094e-05, -0.0026211924850940704, -0.003444098401814699, -0.0014842457603663206, -0.008845431730151176, -0.00014685506175737828, -7.56950321374461e-05, -0.0009442876325920224, -0.002610372845083475, -0.002474224893376231, -0.8802464008331299, -0.001042656716890633, -0.002669106936082244, -1.408103346824646, -0.0011831672163680196, -1.6624408960342407, -0.009318784810602665, -1.5735502529423684e-05, -0.0008469808381050825, -0.11904796957969666, -0.0022347019985318184, -0.0002609150833450258, -0.0006484074983745813, -0.13876472413539886, -0.022183258086442947, -0.029217176139354706, -1.5689979791641235, -1.1920928244535389e-07, -9.536738616588991e-07, -0.00015507926582358778, -0.00018559163436293602, -0.13748003542423248], "finish_reason": "stop"}], "metrics": {"energy": 84.3217391204834, "energy_per_token": 1.4793287564997089, "time": 2.3223543, "time_per_token": 0.040743057894736846}}
{"outputs": [{"text": "model = LinearRegression()\n    X = [d[target] for d in d]\n    y = [d['z'] for d in d]\n    model.fit(X, y)\n    return model", "tokens": ["model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "X", " =", " [", "d", "[", "target", "]", " for", " d", " in", " d", "]", "\n", "    ", "y", " =", " [", "d", "['", "z", "']", " for", " d", " in", " d", "]", "\n", "    ", "model", ".", "fit", "(", "X", ",", " y", ")", "\n", "    ", "return", " model"], "logprobs": [-2.092891216278076, -0.017263034358620644, -0.01273440569639206, -2.884823152271565e-05, -0.0013085383689031005, -0.10149706155061722, -0.024209704250097275, -0.063966765999794, -2.846733570098877, -0.14952656626701355, -1.5354588031768799, -1.0427008867263794, -0.06567484885454178, -0.15746913850307465, -0.022645095363259315, -0.01507543958723545, -0.0033353909384459257, -0.00014411364099942148, -0.011036660522222519, -0.03992433845996857, -0.027954991906881332, -0.0019318267004564404, -0.5702255964279175, -0.0009463122696615756, -0.028095828369259834, -0.03927535191178322, -0.27568307518959045, -1.6521543264389038, -0.0002859421947505325, -0.00304473377764225, -8.070142939686775e-05, -1.9430925021879375e-05, -0.0006320862448774278, -0.00225242436863482, -0.0014211564557626843, -0.030756862834095955, -0.0687071904540062, -0.0011063652345910668, -0.00038961926475167274, -0.002065312582999468, -0.009686846286058426, -0.010621091350913048, -0.045983973890542984, -0.0028675172943621874, -0.005528161767870188, -0.0678633376955986, -0.013007081113755703, -0.002764096949249506], "finish_reason": "stop"}], "metrics": {"energy": 34.67241412162781, "energy_per_token": 0.722341960867246, "time": 2.1126633, "time_per_token": 0.044013818749999996}}
{"outputs": [{"text": "X = [d[target] for d in d]\n    y = [d[\"x\"] for d in d]\n    z = [d[\"y\"] for d in d]\n\n    model = LinearRegression()\n    model.fit(X, y)\n\n    return model", "tokens": ["X", " =", " [", "d", "[", "target", "]", " for", " d", " in", " d", "]", "\n", "    ", "y", " =", " [", "d", "[", "\"", "x", "\"", "]", " for", " d", " in", " d", "]", "\n", "    ", "z", " =", " [", "d", "[", "\"", "y", "\"", "]", " for", " d", " in", " d", "]", "\n", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "X", ",", " y", ")", "\n", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-3.0960021018981934, -0.1590968519449234, -1.6165688037872314, -0.9656572937965393, -0.06237739697098732, -0.1908179074525833, -0.02531949244439602, -0.02370109036564827, -0.0033193512354046106, -0.0001110968878492713, -0.009892957285046577, -0.016875948756933212, -0.03465579077601433, -0.004051691386848688, -0.48790088295936584, -0.0007676515378989279, -0.019139958545565605, -0.0346754789352417, -1.7733871936798096, -1.6714328527450562, -0.461043119430542, -0.0010433712741360068, -0.0037152806762605906, -0.0147193418815732, -0.0001225396408699453, -2.8490614567999728e-05, -0.001117201172746718, -0.003194113029167056, -0.004318554885685444, -0.14242379367351532, -3.784440517425537, -0.005423830822110176, -0.0036940211430191994, -0.003716943319886923, -0.010248064063489437, -0.005193670280277729, -0.03308865427970886, -1.645074735279195e-05, -7.819823804311454e-05, -0.00544884754344821, -3.659658250398934e-05, -3.814689989667386e-06, -0.00020203932945150882, -0.0031251898035407066, -0.0007519278442487121, -1.417764663696289, -0.00114292127545923, -0.8048640489578247, -0.008649149909615517, -0.004988485481590033, -2.6940935640595853e-05, -0.0006646093097515404, -0.08694780617952347, -0.7027720212936401, -0.01793348416686058, -0.01577904261648655, -0.0023701691534370184, -0.0007813499541953206, -0.008470087312161922, -0.12845011055469513, -0.02377978526055813, -0.27164140343666077, -0.27729421854019165, -0.007577604614198208, -0.6617319583892822, -0.004241993185132742, -0.0600702166557312, -0.0054591624066233635, -0.36933642625808716, -0.0141422925516963, -0.49791407585144043], "finish_reason": "stop"}], "metrics": {"energy": 79.66257602691651, "energy_per_token": 1.1220081130551622, "time": 2.95434, "time_per_token": 0.04161042253521127}}
{"outputs": [{"text": "regr = LinearRegression()\n    x_col, y_col, z_col = d[0].get(\"x\"), d[0].get(\"y\"), d[0].get(\"z\")\n    x = np.array([x for x, _, _ in d])\n    y = np.array([y for _, y, _ in d])\n    z = np.array([z for _, _, z in d])\n    if target == \"x\":\n        regr.fit(x[:, np.newaxis], z)\n        print(regr)\n        return regr\n    elif target == \"y\":\n        regr.fit(x[:, np.newaxis], y[:, np.newaxis])\n        print(regr)\n        return regr\n    else:\n        regr.fit(x[:, np.newaxis], y[:, np.newaxis], z[:, np.newaxis])\n        print(regr)\n        return regr", "tokens": ["reg", "r", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "x", "_", "col", ",", " y", "_", "col", ",", " z", "_", "col", " =", " d", "[", "0", "]", ".", "get", "(", "\"", "x", "\"", ")", ",", " d", "[", "0", "]", ".", "get", "(", "\"", "y", "\"", ")", ",", " d", "[", "0", "]", ".", "get", "(", "\"", "z", "\"", ")", "\n", "    ", "x", " =", " np", ".", "array", "([", "x", " for", " x", ",", " _", ",", " _", " in", " d", "])", "\n", "    ", "y", " =", " np", ".", "array", "([", "y", " for", " _", ",", " y", ",", " _", " in", " d", "])", "\n", "    ", "z", " =", " np", ".", "array", "([", "z", " for", " _", ",", " _", ",", " z", " in", " d", "])", "\n", "    ", "if", " target", " ==", " \"", "x", "\":", "\n", "        ", "reg", "r", ".", "fit", "(", "x", "[:", ",", " np", ".", "new", "axis", "]", ",", " z", ")", "\n", "        ", "print", "(", "reg", "r", ")", "\n", "        ", "return", " reg", "r", "\n", "    ", "elif", " target", " ==", " \"", "y", "\":", "\n", "        ", "reg", "r", ".", "fit", "(", "x", "[:", ",", " np", ".", "new", "axis", "]", ",", " y", "[:", ",", " np", ".", "new", "axis", "])", "\n", "        ", "print", "(", "reg", "r", ")", "\n", "        ", "return", " reg", "r", "\n", "    ", "else", ":", "\n", "        ", "reg", "r", ".", "fit", "(", "x", "[:", ",", " np", ".", "new", "axis", "]", ",", " y", "[:", ",", " np", ".", "new", "axis", "]", ",", " z", "[:", ",", " np", ".", "new", "axis", "])", "\n", "        ", "print", "(", "reg", "r", ")", "\n", "        ", "return", " reg", "r", "\n", "\n", "def"], "logprobs": [-3.3270773887634277, -1.76871657371521, -0.011413400061428547, -0.004206500016152859, -2.5152843591058627e-05, -0.0005690624238923192, -0.08478846400976181, -0.02910567633807659, -0.06470910459756851, -1.9445480108261108, -1.79880952835083, -2.4903974533081055, -1.2478042840957642, -0.029369989410042763, -0.0013855629367753863, -0.0018621024210005999, -1.1161444187164307, -0.13613615930080414, -0.005841446109116077, -0.0037390338256955147, -0.009208706207573414, -2.9608325958251953, -0.17772077023983002, -0.008019865490496159, -0.3840382695198059, -0.05805594101548195, -1.479366660118103, -0.6913286447525024, -0.3893466889858246, -0.001915883389301598, -0.0004048719711136073, -0.08113440126180649, -0.0007943335804156959, -0.0028046341612935066, -4.255681051290594e-05, -0.00020287363440729678, -0.0010275328531861305, -3.814689989667386e-06, -2.002696055569686e-05, -0.001974658342078328, -0.012024770490825176, -0.002376947784796357, -3.4689302992774174e-05, -0.001906721736304462, -0.0003921216703020036, -0.004823595751076937, -0.00013612773909699172, -0.0002748588449321687, -0.005447424482554197, -1.585470999998506e-05, -2.0265373677830212e-05, -0.0021076626144349575, -0.022521905601024628, -0.0007009433466009796, -2.7417760065873154e-05, -0.0003711488388944417, -0.0028786908369511366, -0.11171519011259079, -0.9182988405227661, -1.0492066144943237, -2.373332977294922, -0.0005782362422905862, -0.08813434094190598, -0.028669171035289764, -2.8972201347351074, -2.126615524291992, -0.7029154896736145, -0.1704545021057129, -0.3041612207889557, -0.26018014550209045, -0.012411029078066349, -0.006319776643067598, -0.01682824268937111, -0.03764702379703522, -0.05173841118812561, -0.0014818650670349598, -0.026503046974539757, -0.002086130902171135, -0.0032157397363334894, -0.00015698630886618048, -0.002075662137940526, -0.0007638397510163486, -0.028654690831899643, -0.0036893889773637056, -0.0009238027851097286, -0.00011300401820335537, -0.007495967671275139, -0.00018261195509694517, -0.003231900045648217, -0.0003718638326972723, -0.0001820160250645131, -0.0005723983631469309, -0.0027938163839280605, -0.00598578667268157, -0.019843395799398422, -0.002279899315908551, -0.006491881795227528, -0.0001294529065489769, -0.0007172634359449148, -0.0017333496361970901, -0.0064112222753465176, -0.001719426247291267, -0.0005778788472525775, -3.93382906622719e-05, -0.0031846067868173122, -0.0002308817347511649, -0.0006302992696873844, -0.0002613918040879071, -0.00011073929636040702, -0.001065401709638536, -0.0038589786272495985, -0.16306781768798828, -2.498396635055542, -0.29654815793037415, -0.1232973113656044, -0.7241847515106201, -0.5023907423019409, -0.05319421738386154, -0.024141399189829826, -0.0016379047883674502, -0.35665202140808105, -0.0006766413571313024, -0.002533442573621869, -0.00014733182615600526, -0.005211814772337675, -0.16736678779125214, -0.9061219692230225, -0.002253137994557619, -0.518260657787323, -5.245195097813848e-06, -0.00044848397374153137, -0.00016807096835691482, -0.0007364421617239714, -0.002188432030379772, -1.591940999031067, -0.029265454038977623, -0.006542453076690435, -1.8816372156143188, -2.3834710121154785, -0.04435354098677635, -0.5346724987030029, -0.00035386974923312664, -1.461450457572937, -0.014267107471823692, -1.1372654438018799, -0.23068341612815857, -0.06668081134557724, -4.6491513785440475e-06, -0.015636693686246872, -0.03924933075904846, -0.4292612671852112, -0.0017840436194092035, -0.0028376809787005186, -0.018900183960795403, -0.038256336003541946, -0.001957169035449624, -0.0004319211875554174, -0.00023684080224484205, -0.01385264378041029, -2.2172682292875834e-05, -0.0004166688595432788, -2.47952248173533e-05, -0.004354044329375029, -0.7892588973045349, -0.35657039284706116, -9.667406266089529e-05, -0.000927256653085351, -0.0001998939987970516, -1.2993727978027891e-05, -0.00020287363440729678, -0.00037091050762683153, -0.0009214208112098277, -0.026836173608899117, -2.1046595573425293, -0.0010475391754880548, -0.0011753087164834142, -0.00018130090029444546, -2.2411095415009186e-05, -0.0002531684876885265, -0.014890242367982864, -0.0003669780562631786, -0.006221925374120474, -0.12314566224813461, -0.0007337023853324354, -0.0009894242975860834, -1.6689286894688848e-06, -0.0016127924900501966, -0.00021145492792129517, -0.00543758412823081, -0.0015368566382676363, -0.0012997282901778817, -2.3841855067985307e-07, -0.1050700917840004, -0.32390710711479187, -0.24781782925128937, -0.00017188502533826977, -0.025235338136553764, -0.0009510761592537165, -0.3556811213493347, -0.00021836756786797196, -0.001212338567711413, -8.356221951544285e-05, -0.006756792310625315, -0.07836025953292847, -0.0451611690223217, -0.0002571013756096363, -0.0004979324294254184, -0.00015805903240107, -1.2278481335670222e-05, -2.0861407392658293e-05, -0.0009062950266525149, -0.0008183944155462086, -0.5601459741592407, -0.18955807387828827, -0.0009239218779839575, -0.0012076949933543801, -0.00032276666024699807, -1.1324817933200393e-05, -0.0005490464391186833, -0.2019118219614029, -0.08030383288860321, -0.021542251110076904, -0.029961921274662018, -0.0002557904226705432, -0.0008056493825279176, -0.00010501786891836673, -1.1205610462639015e-05, -0.0002598424907773733, -0.0006537684239447117, -0.001515312702395022, -0.006065414287149906, -0.04587102308869362, -0.0005930095794610679, -0.0013362773461267352, -1.311301275563892e-06, -0.002300356514751911, -0.0002874914789572358, -0.004197477828711271, -0.0028400584124028683, -0.0014246086357161403, -3.576278118089249e-07, -0.3038456439971924, -0.03016459010541439, -1.0665159225463867], "finish_reason": "stop"}], "metrics": {"energy": 269.4169744510653, "energy_per_token": 1.1041679280781365, "time": 10.934633, "time_per_token": 0.04481406967213115}}
{"outputs": [{"text": "df = pd.DataFrame(d)\n    return LinearRegression(fit_intercept=True)", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "d", ")", "\n", "    ", "return", " Linear", "Reg", "ression", "(", "fit", "_", "inter", "cept", "=", "True", ")", "\n", "\n", "def"], "logprobs": [-2.180530071258545, -0.018759334459900856, -0.007124258670955896, -5.602820692729438e-06, -0.006912366021424532, -0.04576478525996208, -0.14182201027870178, -0.06057155132293701, -0.01744697242975235, -0.05733780190348625, -1.821061611175537, -0.0166331697255373, -2.3603161025675945e-05, -0.0013443727511912584, -1.1156848669052124, -0.06448906660079956, -6.794906312279636e-06, -0.00024685196694917977, -0.00018714107864070684, -0.007269124500453472, -0.3591901361942291, -0.6861646175384521, -0.2445458322763443, -0.043311264365911484, -0.8258867859840393], "finish_reason": "stop"}], "metrics": {"energy": 14.481836795806885, "energy_per_token": 0.5792734718322754, "time": 0.85063934, "time_per_token": 0.0340255736}}
{"outputs": [{"text": "model = LinearRegression()\n    model.fit(pd.DataFrame(d).loc[:, 'x', 'y'])\n    return model", "tokens": ["model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "pd", ".", "DataFrame", "(", "d", ")", ".", "loc", "[:", ",", " '", "x", "'", ",", " '", "y", "'])", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-2.092891216278076, -0.017263034358620644, -0.01273440569639206, -2.884823152271565e-05, -0.0013085383689031005, -0.10149706155061722, -0.024209704250097275, -0.063966765999794, -0.645143985748291, -0.0027782435063272715, -0.0007175016799010336, -0.13999544084072113, -0.5220382809638977, -0.00040356122190132737, -0.027792686596512794, -0.12129707634449005, -0.07356049120426178, -0.8227347731590271, -0.5930370092391968, -0.6486978530883789, -0.015672605484724045, -0.001520192832686007, -1.963942289352417, -0.017458803951740265, -1.3545846939086914, -0.33826225996017456, -0.18866057693958282, -0.07288354635238647, -2.323380470275879, -0.05850522220134735, -0.07463014125823975, -0.05448513105511665, -0.0076515451073646545, -0.5951673984527588, -0.03056078776717186, -0.8306235671043396], "finish_reason": "stop"}], "metrics": {"energy": 45.4529243850708, "energy_per_token": 1.2625812329186334, "time": 1.2715868, "time_per_token": 0.03532185555555555}}
{"outputs": [{"text": "df = pd.DataFrame(d)\n    model = LinearRegression()\n    model.fit(df[[target, 'x']], df[target])\n    return model", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "d", ")", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "df", "[[", "target", ",", " '", "x", "']", "]", ",", " df", "[", "target", "])", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-2.180530071258545, -0.018759334459900856, -0.007124258670955896, -5.602820692729438e-06, -0.006912366021424532, -0.04576478525996208, -0.14182201027870178, -0.06057155132293701, -0.01744697242975235, -0.05733780190348625, -1.507047176361084, -0.0070516993291676044, -0.004299563355743885, -2.002696055569686e-05, -0.001167450100183487, -0.061007365584373474, -0.15670666098594666, -0.09816098213195801, -0.30047911405563354, -0.0037260884419083595, -0.0003219324571546167, -0.0037080359179526567, -0.0468924380838871, -1.119661808013916, -0.7319567203521729, -0.26551198959350586, -0.05191611871123314, -0.030477074906229973, -0.2753726541996002, -0.0007879013428464532, -0.056064993143081665, -0.0073356325738132, -0.41225725412368774, -0.015116303227841854, -0.004804614000022411, -0.006794207729399204, -0.0807327851653099, -0.012920944020152092, -0.0030429509934037924, -0.5122817754745483, -0.014071417041122913, -0.812438428401947], "finish_reason": "stop"}], "metrics": {"energy": 54.789863491058355, "energy_per_token": 1.3045205593109133, "time": 1.7001234, "time_per_token": 0.040479128571428574}}
{"outputs": [{"text": "data = pd.DataFrame(d)\n    regr = LinearRegression()\n    regr.fit(data[[\"x\", \"y\"]], data[target])\n    return regr", "tokens": ["data", " =", " pd", ".", "DataFrame", "(", "d", ")", "\n", "    ", "reg", "r", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "reg", "r", ".", "fit", "(", "data", "[[", "\"", "x", "\"", ",", " \"", "y", "\"", "]]", ",", " data", "[", "target", "])", "\n", "    ", "return", " reg", "r", "\n", "\n", "if"], "logprobs": [-3.627315044403076, -0.18627884984016418, -0.07646381109952927, -9.250213042832911e-05, -0.017024917528033257, -0.08280640840530396, -0.07467638701200485, -0.11939291656017303, -0.0357045903801918, -0.06514881551265717, -2.563650131225586, -1.9899650812149048, -0.006615759804844856, -0.002397878561168909, -2.1576648578047752e-05, -0.0008081507403403521, -0.062315233051776886, -0.10088823735713959, -0.06415952742099762, -0.15814462304115295, -0.001570183434523642, -0.0008118432597257197, -0.00014852374442853034, -0.002043066080659628, -0.02406005747616291, -1.1608835458755493, -0.8768625259399414, -0.0064689042046666145, -0.00035589560866355896, -0.04710978642106056, -0.0699644610285759, -0.09620322287082672, -5.6503606174374e-05, -0.07022719830274582, -0.006576797924935818, -0.012674140743911266, -0.03734687715768814, -0.015691030770540237, -0.0028048718813806772, -0.008093418553471565, -0.09173914790153503, -0.015056299045681953, -0.003460730193182826, -9.059865078597795e-06, -0.7853392958641052, -0.01925339363515377, -1.2622582912445068], "finish_reason": "stop"}], "metrics": {"energy": 43.66036136627197, "energy_per_token": 0.9289438588568505, "time": 1.9074798, "time_per_token": 0.04058467659574468}}
{"outputs": [{"text": "if target == 'z':\n        model = LinearRegression()\n        model.fit(pd.DataFrame(d).iloc[:, :3], pd.Series(d).iloc[:, 2])\n        return model\n    elif target == 'x' or target == 'y':\n        model = LinearRegression()\n        model.fit(pd.DataFrame(d).iloc[:, :2], pd.Series(d).iloc[:, 1])\n        return model\n    else:\n        raise TypeError", "tokens": ["if", " target", " ==", " '", "z", "':", "\n", "        ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "        ", "model", ".", "fit", "(", "pd", ".", "DataFrame", "(", "d", ")", ".", "il", "oc", "[:", ",", " :", "3", "]", ",", " pd", ".", "Series", "(", "d", ")", ".", "il", "oc", "[:", ",", " ", "2", "])", "\n", "        ", "return", " model", "\n", "    ", "elif", " target", " ==", " '", "x", "'", " or", " target", " ==", " '", "y", "':", "\n", "        ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "        ", "model", ".", "fit", "(", "pd", ".", "DataFrame", "(", "d", ")", ".", "il", "oc", "[:", ",", " :", "2", "]", ",", " pd", ".", "Series", "(", "d", ")", ".", "il", "oc", "[:", ",", " ", "1", "])", "\n", "        ", "return", " model", "\n", "    ", "else", ":", "\n", "        ", "raise", " Type", "Error", "\n", "\n", "def"], "logprobs": [-3.206407070159912, -0.2238580733537674, -0.25688689947128296, -0.061966605484485626, -0.45154115557670593, -0.007297290023416281, -0.02415536344051361, -0.00673760985955596, -2.150984525680542, -0.011364606209099293, -0.012547479011118412, -3.0874729418428615e-05, -0.0025895654689520597, -0.2432742863893509, -0.14628106355667114, -0.13001017272472382, -0.22550871968269348, -0.0024613819550722837, -0.0004403813509270549, -0.37649261951446533, -0.5630130767822266, -0.00015496007108595222, -0.026581289246678352, -0.1365668922662735, -0.0976901426911354, -0.4318579435348511, -0.33890435099601746, -0.9948934316635132, -0.0001255195093108341, -0.02589651755988598, -0.0017128810286521912, -2.437718391418457, -1.4751977920532227, -0.023256978020071983, -0.09688825905323029, -0.07002059370279312, -0.00030489088385365903, -1.789065957069397, -0.006464877165853977, -0.1798606812953949, -0.08448351919651031, -0.05510988458991051, -0.12363731861114502, -7.986703712958843e-05, -0.00615356583148241, -0.011726731434464455, -0.48436129093170166, -1.1109133958816528, -0.022153524681925774, -0.009018639102578163, -1.428312063217163, -0.05135493725538254, -0.006544111296534538, -0.01403474248945713, -0.11664094030857086, -1.2400739192962646, -0.0036657534074038267, -0.01031083520501852, -0.0056177834048867226, -0.5238212943077087, -2.9237263202667236, -0.01448391005396843, -0.013748354278504848, -0.0022505212109535933, -0.0034639376681298018, -0.002590635558590293, -0.010605639778077602, -0.0019833433907479048, -0.0005969410995021462, -0.16341885924339294, -0.0032664774917066097, -0.002760055009275675, -2.3007127310847864e-05, -0.0002571013756096363, -0.013313560746610165, -0.0008850948070175946, -0.0006817638641223311, -0.0243150033056736, -0.00032443503732793033, -3.71926071238704e-05, -0.008205629885196686, -0.027528652921319008, -0.0008780676289461553, -0.014642280526459217, -0.0018450870411470532, -0.0018430643249303102, -0.005402251612395048, -0.1194952130317688, -0.011801308952271938, -1.3470558769768104e-05, -0.006126670632511377, -0.005298381671309471, -0.4288502037525177, -0.5210214257240295, -0.0008074360666796565, -0.0015326907159760594, -0.0034110716078430414, -0.0003110878460574895, -0.003257803386077285, -0.0003327769518364221, -0.00039939055568538606, -0.03972340747714043, -0.0021664262749254704, -0.0008809261489659548, -6.318072337307967e-06, -0.0006156456656754017, -0.0012292455649003386, -0.040003713220357895, -0.21331173181533813, -0.005368340760469437, -0.0006884350441396236, -0.0038890219293534756, -0.0036501940339803696, -0.0019538376946002245, -0.23160384595394135, -0.7919629812240601, -0.1242106556892395, -0.0002752163854893297, -0.007026012521237135, -0.0007564543629996479, -0.5105454921722412, -2.535451889038086, -0.00016115797916427255, -2.5913264751434326, -0.026486096903681755, -0.9172753095626831], "finish_reason": "stop"}], "metrics": {"energy": 127.25307091712946, "energy_per_token": 1.0099450072788052, "time": 5.4829955, "time_per_token": 0.043515837301587305}}
{"outputs": [{"text": "if target == 'x':\n        model = LinearRegression()\n        model.fit([d[x] for x in d], [d[y] for y in d])\n        return model\n    if target == 'y':\n        model = LinearRegression()\n        model.fit([d[y] for y in d], [d[x] for x in d])\n        return model\n    if target == 'z':\n        model = LinearRegression()\n        model.fit([d[z] for z in d], [d[x] for x in d])\n        return model", "tokens": ["if", " target", " ==", " '", "x", "':", "\n", "        ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "        ", "model", ".", "fit", "([", "d", "[", "x", "]", " for", " x", " in", " d", "]", ",", " [", "d", "[", "y", "]", " for", " y", " in", " d", "])", "\n", "        ", "return", " model", "\n", "    ", "if", " target", " ==", " '", "y", "':", "\n", "        ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "        ", "model", ".", "fit", "([", "d", "[", "y", "]", " for", " y", " in", " d", "]", ",", " [", "d", "[", "x", "]", " for", " x", " in", " d", "])", "\n", "        ", "return", " model", "\n", "    ", "if", " target", " ==", " '", "z", "':", "\n", "        ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "        ", "model", ".", "fit", "([", "d", "[", "z", "]", " for", " z", " in", " d", "]", ",", " [", "d", "[", "x", "]", " for", " x", " in", " d", "])", "\n", "        ", "return", " model", "\n", "\n", "def"], "logprobs": [-3.206407070159912, -0.2238580733537674, -0.25688689947128296, -0.061966605484485626, -1.3550102710723877, -0.07349968701601028, -0.015021657571196556, -0.004125656094402075, -2.4053754806518555, -0.01511712558567524, -0.02266094461083412, -7.045020902296528e-05, -0.0019759670831263065, -0.35475635528564453, -0.32069459557533264, -0.08752290159463882, -0.22548094391822815, -0.004875556565821171, -0.00040892345714382827, -0.8913125395774841, -1.6127492189407349, -0.7834558486938477, -2.622483730316162, -0.006216475740075111, -0.006093969568610191, -1.0020365715026855, -0.01053179893642664, -0.5528573989868164, -0.5348384976387024, -0.004809122066944838, -0.04840880259871483, -0.026380330324172974, -0.04661792516708374, -0.43213924765586853, -0.0013090145075693727, -0.001876142923720181, -0.00458166841417551, -0.0004543225804809481, -0.0015831567579880357, -0.03873753175139427, -0.007059156429022551, -1.7208253145217896, -0.07335767894983292, -0.008301869034767151, -0.005275377072393894, -0.1245671957731247, -2.3392300605773926, -0.0012081712484359741, -0.004743750672787428, -0.0026177444960922003, -0.046256497502326965, -0.0008927173912525177, -0.0004122599493712187, -0.0003488647344056517, -0.03725534677505493, -0.0019224273273721337, -0.0008823553798720241, -1.2040065485052764e-05, -0.00019941726350225508, -0.018769511952996254, -0.0003159739135298878, -0.0004855407460127026, -0.016854381188750267, -0.00022659118985757232, -4.6967357775429264e-05, -0.01362688560038805, -0.035700105130672455, -0.053635742515325546, -0.9911106824874878, -0.0007656264933757484, -0.0006430465145967901, -0.0023230728693306446, -2.2649508537142538e-05, -0.00031585473334416747, -0.004849220626056194, -2.4318398573086597e-05, -0.0017532228957861662, -0.0027110748924314976, -0.011029940098524094, -0.051688265055418015, -0.00039617318543605506, -0.0027014450170099735, -0.0001264730526600033, -0.008171223104000092, -5.1973900554003194e-05, -0.0012759171659126878, -0.0009391664643771946, -0.002334847114980221, -0.0009548871894367039, -0.0003297977091278881, -0.23048879206180573, -0.663447380065918, -1.8684587478637695, -0.011124374344944954, -0.048429474234580994, -0.006440123077481985, -0.010213373228907585, -0.0010257464600726962, -0.003075276967138052, -0.0007333449902944267, -0.13869094848632812, -0.001430560601875186, -0.0028032076079398394, -4.541770613286644e-05, -0.0006893880781717598, -0.005094523075968027, -0.0002044230350293219, -0.0007013006834313273, -0.007449703756719828, -0.00016842853801790625, -5.471556869451888e-05, -0.02081257291138172, -0.04021935909986496, -0.0349603109061718, -0.84320068359375, -0.0009461931767873466, -0.0005421360838226974, -0.0019201666582375765, -1.2159273865108844e-05, -0.0007194076315499842, -0.04683499410748482, -9.035655966727063e-05, -0.0015920833684504032, -0.0018830440239980817, -0.004107847809791565, -0.9141207933425903, -0.001602914067916572, -0.00941444467753172, -0.00038914260221645236, -0.00023457636416424066, -5.435795901576057e-05, -0.007544358726590872, -0.0014527016319334507, -0.0020493713673204184, -0.001663611619733274, -0.00043585337698459625, -0.2289237231016159, -0.39047399163246155, -0.699816107749939], "finish_reason": "stop"}], "metrics": {"energy": 152.44297935104368, "energy_per_token": 1.0967120816621847, "time": 5.9003096, "time_per_token": 0.04244827050359712}}
{"outputs": [{"text": "model = LinearRegression()\n    if target == 'z':\n        model.fit(np.array([item[target] for item in d])[:, np.newaxis], np.array([item['x'] for item in d]))\n    elif target == 'x':\n        model.fit(np.array([item[target] for item in d])[:, np.newaxis], np.array([item['y'] for item in d]))\n    else:\n        model.fit(np.array([item[target] for item in d])[:, np.newaxis], np.array([item['z'] for item in d]))\n    return model", "tokens": ["model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "if", " target", " ==", " '", "z", "':", "\n", "        ", "model", ".", "fit", "(", "np", ".", "array", "([", "item", "[", "target", "]", " for", " item", " in", " d", "])", "[:", ",", " np", ".", "new", "axis", "]", ",", " np", ".", "array", "([", "item", "['", "x", "']", " for", " item", " in", " d", "]))", "\n", "    ", "elif", " target", " ==", " '", "x", "':", "\n", "        ", "model", ".", "fit", "(", "np", ".", "array", "([", "item", "[", "target", "]", " for", " item", " in", " d", "])", "[:", ",", " np", ".", "new", "axis", "]", ",", " np", ".", "array", "([", "item", "['", "y", "']", " for", " item", " in", " d", "]))", "\n", "    ", "else", ":", "\n", "        ", "model", ".", "fit", "(", "np", ".", "array", "([", "item", "[", "target", "]", " for", " item", " in", " d", "])", "[:", ",", " np", ".", "new", "axis", "]", ",", " np", ".", "array", "([", "item", "['", "z", "']", " for", " item", " in", " d", "]))", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-2.092891216278076, -0.017263034358620644, -0.01273440569639206, -2.884823152271565e-05, -0.0013085383689031005, -0.10149706155061722, -0.024209704250097275, -0.063966765999794, -3.3943123817443848, -0.16279363632202148, -0.15866310894489288, -0.055429670959711075, -0.42472824454307556, -0.00435119541361928, -0.01279384270310402, -0.003692833473905921, -0.36673036217689514, -0.005907575134187937, -0.00044264530879445374, -0.37977364659309387, -2.661159038543701, -0.0003333727945573628, -0.19381502270698547, -0.2708682119846344, -3.115300416946411, -0.6515370011329651, -0.6977670788764954, -0.00632996391505003, -0.007197877392172813, -0.0017240673769265413, -0.00013374387344811112, -0.0043876334093511105, -0.006582127418369055, -2.114420175552368, -0.0034303173888474703, -0.2510107159614563, -0.000125281119835563, -0.0016465928638353944, -0.0004152389301452786, -0.0007831366965547204, -0.0028794039972126484, -0.47086068987846375, -0.00012981049076188356, -0.013456239365041256, -0.04515649750828743, -0.018084285780787468, -1.1215664148330688, -0.6014724373817444, -0.0011829291470348835, -0.03348035365343094, -0.00011205045302631333, -7.83174327807501e-05, -0.0009521479951217771, -0.323088675737381, -0.003231543581932783, -0.15570899844169617, -1.0302162170410156, -0.005111838690936565, -0.015628714114427567, -0.0034949432592839003, -0.47771522402763367, -0.020923715084791183, -0.0009569118265062571, -0.0002547178009990603, -0.014275451190769672, -0.00019965562387369573, -2.825220326485578e-05, -0.01453631091862917, -0.010100089013576508, -0.00012051333033014089, -0.004325082991272211, -0.0070752548053860664, -0.00373582704924047, -0.21017713844776154, -0.0012852036161348224, -0.0008632985409349203, -0.0013710394268855453, -5.006777428206988e-06, -5.960446742392378e-06, -7.497983460780233e-05, -0.0035071787424385548, -0.11072003841400146, -7.450303382938728e-05, -0.0001954841281985864, -2.4676019165781327e-05, -4.887569048150908e-06, -0.0002797450579237193, -0.00027783826226368546, -0.00034505134681239724, -0.006818006280809641, -0.0001854724541772157, -0.0004530118894763291, -0.000673424918204546, -0.00033563701435923576, -0.008308488875627518, -0.028885072097182274, -9.298280929215252e-06, -0.00031549722189083695, -1.6689286894688848e-06, -7.271740287251305e-06, -6.592056161025539e-05, -0.0009263038518838584, -0.0002004899288294837, -0.0374537855386734, -0.6051870584487915, -0.0005110388156026602, -0.019718807190656662, -0.0005915798828937113, -1.0829484462738037, -0.002616674406453967, -0.00015805903240107, -0.02539805881679058, -0.011186972260475159, -5.531158240046352e-05, -0.0030081281438469887, -0.004603621084243059, -0.004428579472005367, -0.025209765881299973, -0.0005510718910954893, -0.0009290431626141071, -0.0007200032705441117, -3.576272320060525e-06, -4.529942543740617e-06, -9.500529267825186e-05, -0.0029635580722242594, -0.033869244158267975, -0.0001629458274692297, -0.0003688847064040601, -4.351044481154531e-05, -1.549708758830093e-05, -0.00016306500765495002, -0.0012463905150070786, -0.00029702542815357447, -0.00417444808408618, -0.00017486473370809108, -0.0014036574866622686, -0.0016131495358422399, -0.00249087275005877, -0.0218940619379282, -0.5763335227966309, -3.3378044463461265e-05, -0.0002687808300834149, -1.9073468138230965e-06, -5.960446742392378e-06, -4.970903682988137e-05, -0.0009890670189633965, -0.0005301024066284299, -0.16877993941307068, -0.007877000607550144, -0.005419088061898947, -0.49265238642692566, -0.007350069470703602, -0.4852241575717926], "finish_reason": "stop"}], "metrics": {"energy": 157.00776594924932, "energy_per_token": 1.026194548687904, "time": 6.5226684, "time_per_token": 0.04263181960784314}}
{"outputs": [{"text": "df = pd.DataFrame(d)\n    model = LinearRegression()\n    model.fit(df[['x', 'y']], df[target])\n    return model", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "d", ")", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "df", "[", "['", "x", "'", ",", " '", "y", "']", "]", ",", " df", "[", "target", "])", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-2.180530071258545, -0.018759334459900856, -0.007124258670955896, -5.602820692729438e-06, -0.006912366021424532, -0.04576478525996208, -0.14182201027870178, -0.06057155132293701, -0.01744697242975235, -0.05733780190348625, -1.507047176361084, -0.0070516993291676044, -0.004299563355743885, -2.002696055569686e-05, -0.001167450100183487, -0.061007365584373474, -0.15670666098594666, -0.09816098213195801, -0.30047911405563354, -0.0037260884419083595, -0.0003219324571546167, -0.0037080359179526567, -0.0468924380838871, -0.43752723932266235, -0.05609170347452164, -0.0036322588566690683, -0.031332146376371384, -0.004059883765876293, -0.04940176010131836, -0.0809643417596817, -0.018679775297641754, -0.003720506327226758, -0.028966255486011505, -0.005060483235865831, -0.012548891827464104, -0.005611856002360582, -0.0021974719129502773, -0.005034270230680704, -0.08009269833564758, -0.008234242908656597, -0.002732949797064066, -0.5517313480377197, -0.012895524501800537, -0.8202996850013733], "finish_reason": "stop"}], "metrics": {"energy": 62.89960784912109, "energy_per_token": 1.4295365420254793, "time": 1.7006636, "time_per_token": 0.038651445454545456}}
