{"outputs": [{"text": "if seed is not None:\n        random.seed(seed)\n\n    def convert_to_uppercase(char):\n        return random.choice([char.upper(), char])\n\n    def preprocess_text(text):\n        # Replace spaces with underscores\n        text = text.replace(\" \", \"_\")\n\n        # Replace tabs and newlines with underscores\n        text = text.replace(\"\\t\", \"__\")\n        text = text.replace(\"\\n\", \"___\")\n\n        # Convert special characters to punctuation\n        text = ''.join(char if char.isalnum() else string.punctuation for char in text)\n\n        # Randomize casing of characters\n        text = ''.join(convert_to_uppercase(char) for char in text)\n\n        return text\n\n    return preprocess_text(text)", "tokens": ["if", " seed", " is", " not", " None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "def", " convert", "_", "to", "_", "upper", "case", "(", "char", "):", "\n", "        ", "return", " random", ".", "choice", "([", "char", ".", "upper", "()", ",", " char", "])", "\n", "\n", "    ", "def", " pre", "process", "_", "text", "(", "text", "):", "\n", "        ", "#", " Replace", " spaces", " with", " undersc", "ores", "\n", "        ", "text", " =", " text", ".", "replace", "(", "\"", " \"", ",", " \"", "_", "\"", ")", "\n", "\n", "        ", "#", " Replace", " tabs", " and", " new", "lines", " with", " undersc", "ores", "\n", "        ", "text", " =", " text", ".", "replace", "(", "\"", "\\", "t", "\"", ",", " \"", "__", "\"", ")", "\n", "        ", "text", " =", " text", ".", "replace", "(", "\"", "\\", "n", "\"", ",", " \"__", "_", "\"", ")", "\n", "\n", "        ", "#", " Convert", " special", " characters", " to", " punct", "uation", "\n", "        ", "text", " =", " ''", ".", "join", "(", "char", " if", " char", ".", "isal", "num", "()", " else", " string", ".", "punct", "uation", " for", " char", " in", " text", ")", "\n", "\n", "        ", "#", " Random", "ize", " c", "asing", " of", " characters", "\n", "        ", "text", " =", " ''", ".", "join", "(", "convert", "_", "to", "_", "upper", "case", "(", "char", ")", " for", " char", " in", " text", ")", "\n", "\n", "        ", "return", " text", "\n", "\n", "    ", "return", " pre", "process", "_", "text", "(", "text", ")", "\n", "\n", "def"], "logprobs": [-1.5533252954483032, -0.23924091458320618, -0.3202337920665741, -0.0749279335141182, -5.221230458118953e-05, -0.013791623525321484, -0.011701400391757488, -0.0019437245791777968, -0.033286888152360916, -0.001546973828226328, -0.00688466290012002, -0.0002814135223161429, -0.004104167688637972, -0.0013243722496554255, -0.009806198067963123, -0.5299587249755859, -0.0009059377480298281, -2.8900680541992188, -3.6059446334838867, -0.09588722139596939, -0.809268057346344, -0.001840446493588388, -0.4183971881866455, -0.3051474988460541, -0.17505428194999695, -1.2558268308639526, -0.9526453614234924, -0.0021313349716365337, -0.0008947421447373927, -0.5634436011314392, -0.4797055721282959, -0.00011765264935093, -0.33237043023109436, -0.15218985080718994, -0.15041391551494598, -0.23048292100429535, -0.1273891031742096, -0.02500748448073864, -0.008158097974956036, -0.11538176983594894, -0.41493508219718933, -0.09815514087677002, -0.0201314315199852, -0.0004520586517173797, -1.643225908279419, -2.7975826263427734, -0.04219190403819084, -0.2884436547756195, -0.5693174600601196, -0.030553966760635376, -0.06734290719032288, -0.3434148132801056, -0.0015789910685271025, -0.004143344704061747, -1.9045125246047974, -2.56136417388916, -1.3516407012939453, -1.2367311716079712, -0.5823174118995667, -0.0002506657037883997, -0.17679940164089203, -0.00029297350556589663, -0.11738050729036331, -0.00758908037096262, -0.3192563056945801, -0.00018726025882642716, -0.04377109557390213, -1.5707683563232422, -0.052484676241874695, -0.008271366357803345, -3.8980677345534787e-05, -0.703195333480835, -0.11171167343854904, -0.0035230969078838825, -0.035639598965644836, -0.07609522342681885, -0.6159284710884094, -0.0003129946126136929, -0.005940993782132864, -0.47714900970458984, -0.2998697757720947, -1.1684365272521973, -0.004494920838624239, -0.046381235122680664, -0.006827833596616983, -0.24435725808143616, -7.128461584215984e-05, -0.04206069931387901, -0.00011240804451517761, -0.0652804896235466, -0.0013804440386593342, -0.18137721717357635, -0.000205018965061754, -0.015141783282160759, -0.02594844065606594, -0.00822454784065485, -0.0022473097778856754, -0.08287334442138672, -0.0010904086520895362, -0.00012730741582345217, -0.32841819524765015, -0.4448038339614868, -0.00017796363681554794, -0.00017724849749356508, -0.004703292157500982, -0.000571326119825244, -0.0013452060520648956, -0.00017474555352237076, -0.0018098655855283141, -2.169585604860913e-05, -0.00016139635408762842, -0.0008640132145956159, -6.007967749610543e-05, -0.0007746794726699591, -0.003362836316227913, -0.0005919373361393809, -0.0002426806604489684, -0.450700044631958, -0.0528542660176754, -3.909988299710676e-05, -4.0649541915627196e-05, -0.0005716835148632526, -0.028187623247504234, -0.0003408804477658123, -0.07998387515544891, -0.950709342956543, -0.8858424425125122, -0.018705865368247032, -0.04440964385867119, -1.0307695865631104, -0.7749949097633362, -0.2535861134529114, -0.0005323661607690156, -0.8711363673210144, -0.008370790630578995, -2.724825382232666, -0.0001770101225702092, -0.00011336160969221964, -0.3271665871143341, -1.5445613861083984, -0.15048356354236603, -0.030177660286426544, -0.9016967415809631, -0.02094624750316143, -0.00034397884155623615, -0.0003083468764089048, -0.2611495852470398, -0.8662401437759399, -0.0010150285670533776, -0.0017435838235542178, -0.0005628670332953334, -2.336838722229004, -0.00029690624796785414, -7.056941103655845e-05, -0.00482335826382041, -0.011477865278720856, -0.0018604366341605783, -0.051095351576805115, -0.000503770774230361, -0.11341202259063721, -1.0995590686798096, -0.24491991102695465, -0.19967758655548096, -0.0002411313180346042, -1.5140701532363892, -1.0378473997116089, -0.3072957992553711, -0.00040713604539632797, -0.2960743010044098, -0.006954274605959654, -0.08778958022594452, -3.135155202471651e-05, -0.00022194306075107306, -0.04100104048848152, -0.04397714510560036, -4.0531076592742465e-06, -5.483612312673358e-06, -0.00010024998482549563, -7.390948667307384e-06, -0.00011598391574807465, -0.0003250309091527015, -0.012734287418425083, -0.0009022455778904259, -0.0348999910056591, -0.001563875237479806, -2.1815061700181104e-05, -0.0020427091512829065, -0.017068279907107353, -0.0019633558113127947, -0.11621056497097015, -0.00038723601028323174, -0.1116165742278099, -0.010527199134230614, -0.02813025191426277, -0.021684227511286736, -0.0002693767019081861, -0.17656883597373962, -0.006114704068750143, -4.31528314948082e-05, -0.0005953923100605607, -9.536697689327411e-06, -0.0005669178790412843, -0.006216001696884632, -0.23473958671092987, -0.2406407594680786, -0.008701976388692856, -1.1198441982269287], "finish_reason": "stop"}], "metrics": {"energy": 245.42051364898666, "energy_per_token": 1.1856063461303703, "time": 8.933696, "time_per_token": 0.043157951690821254}}
{"outputs": [{"text": "# Remove special characters and replace punctuation\n    text = re.sub(r'[^\\w\\s]+', '', text)\n\n    # Replace spaces with underscores\n    text = text.replace(' ', '_')\n    text = text.replace('\\t', '__')\n    text = text.replace('\\n', '___')\n\n    # Randomize casing\n    rnd = random.Random(seed)\n    for c in text:\n        if rnd.random() < 0.5:\n            text = text.replace(c, c.upper())\n\n    return text", "tokens": ["#", " Remove", " special", " characters", " and", " replace", " punct", "uation", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]+", "'", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Replace", " spaces", " with", " undersc", "ores", "\n", "    ", "text", " =", " text", ".", "replace", "('", " '", ",", " '_", "')", "\n", "    ", "text", " =", " text", ".", "replace", "('", "\\", "t", "'", ",", " '", "__", "')", "\n", "    ", "text", " =", " text", ".", "replace", "('", "\\", "n", "'", ",", " '", "___", "')", "\n", "\n", "    ", "#", " Random", "ize", " c", "asing", "\n", "    ", "r", "nd", " =", " random", ".", "Random", "(", "seed", ")", "\n", "    ", "for", " c", " in", " text", ":", "\n", "        ", "if", " r", "nd", ".", "random", "()", " <", " ", "0", ".", "5", ":", "\n", "            ", "text", " =", " text", ".", "replace", "(", "c", ",", " c", ".", "upper", "())", "\n", "\n", "    ", "return", " text", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.2803798913955688, -2.4120497703552246, -0.2579149901866913, -0.009287958964705467, -1.6768516302108765, -2.4740893840789795, -3.6196858882904053, -0.46439388394355774, -2.863184690475464, -0.0023129635956138372, -0.33276835083961487, -0.03815295547246933, -0.3754795491695404, -5.566918844124302e-05, -0.007859023287892342, -0.09728733450174332, -0.03148648515343666, -0.32743358612060547, -0.23991326987743378, -0.4209935665130615, -0.009790615178644657, -0.053479813039302826, -0.008497864939272404, -2.0247244834899902, -0.07276395708322525, -0.00011145447206217796, -0.3102841377258301, -9.178694017464295e-05, -0.004867608658969402, -0.08238296210765839, -0.10676752030849457, -0.35955730080604553, -0.0001699779968475923, -0.00441374396905303, -1.6023448705673218, -0.5807452201843262, -1.092821478843689, -0.6941299438476562, -0.00019441144831944257, -0.15337347984313965, -0.0003268184664193541, -0.017863813787698746, -0.0029801977798342705, -0.4831267297267914, -0.00011503035057103261, -0.04150310531258583, -0.05637095123529434, -0.013094622641801834, -4.8636207793606445e-05, -0.36649084091186523, -0.02488679438829422, -0.15583793818950653, -0.8927961587905884, -0.07722750306129456, -0.001591607229784131, -0.01238218229264021, -0.0001656871900195256, -0.0012398421531543136, -0.02112017199397087, -0.03790782392024994, -0.22148077189922333, -0.0008330450509674847, -0.0019320646533742547, -0.14312708377838135, -0.09553320705890656, -0.00036614391137845814, -0.003466075984761119, -0.001544950413517654, -0.0013297295663505793, -0.00016139635408762842, -0.0005258131423033774, -1.597391747054644e-05, -0.00026782741770148277, -0.000532842765096575, -0.0011630444787442684, -0.005126070696860552, -0.00029488030122593045, -0.000300600629998371, -0.001277345814742148, -0.004093838855624199, -0.00023898606013972312, -0.0008407871937379241, -0.03492669761180878, -0.00032574593205936253, -0.026335397735238075, -0.39272233843803406, -0.19878453016281128, -0.26376140117645264, -0.00019059749320149422, -0.4169919192790985, -0.0018638873007148504, -2.265695571899414, -1.9842686653137207, -0.09509863704442978, -0.01386228483170271, -0.004676239565014839, -0.029936470091342926, -0.025343550369143486, -0.0032812110148370266, -0.02208811230957508, -0.06050265580415726, -0.04253664240241051, -0.46604493260383606, -2.143538236618042, -0.01475105807185173, -0.10356154292821884, -0.010050523094832897, -0.003069334663450718, -0.005931276362389326, -0.06793507188558578, -0.2064168006181717, -8.21318244561553e-05, -0.00015209948469419032, -0.2637924253940582, -0.008114821277558804, -0.12626707553863525, -0.0007990981102921069, -0.02104908786714077, -6.9141146923357155e-06, -0.001599224517121911, -0.09387107193470001, -0.07233589887619019, -0.0005956306122243404, -1.8795905113220215, -0.0016626594588160515, -0.07205064594745636, -0.02993774227797985, -0.09863926470279694, -6.532455881824717e-05, -0.0005281960475258529, -0.0015643513761460781, -0.016928695142269135, -0.0001062098381225951, -0.025908714160323143, -0.026961155235767365, -0.003788082394748926, -0.08052635937929153, -0.0006897454150021076, -0.0324794165790081, -0.0036551826633512974, -1.258981704711914, -3.3378546504536644e-06, -1.4305104514278355e-06, -0.00014911970356479287, -6.782778655178845e-05, -0.09298084676265717], "finish_reason": "stop"}], "metrics": {"energy": 174.0885768165588, "energy_per_token": 1.1923875124421837, "time": 6.110274, "time_per_token": 0.041851191780821924}}
{"outputs": [{"text": "# Create a custom random module with a specific seed\n    random.seed(seed)\n\n    # Create a custom random module with a specific seed\n    random.seed(seed)\n\n    # Define special characters to be replaced\n    special_characters = set(string.punctuation) - set(\" \\n\\t\\r\")\n\n    # Replace all special characters with underscores\n    for character in special_characters:\n        text = text.replace(character, '_')\n\n    # Replace all spaces, tabs, and newlines with underscores\n    for character in \" \\n\\t\":\n        text = text.replace(character, '_')\n\n    # Create a list of tuples (character, case) to apply to the text\n    cases = [(character, random.choice((string.uppercase, string.lowercase)))\n             for character in string.printable if character not in string.whitespace]\n\n    # Generate a random permutation of the list of tuples\n    random.shuffle(cases)\n\n    # Replace characters in the text with cased ones from the permutation\n    for character, case in", "tokens": ["#", " Create", " a", " custom", " random", " module", " with", " a", " specific", " seed", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "#", " Create", " a", " custom", " random", " module", " with", " a", " specific", " seed", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "#", " Define", " special", " characters", " to", " be", " replaced", "\n", "    ", "special", "_", "char", "acters", " =", " set", "(", "string", ".", "punct", "uation", ")", " -", " set", "(", "\"", " \\", "n", "\\", "t", "\\", "r", "\"", ")", "\n", "\n", "    ", "#", " Replace", " all", " special", " characters", " with", " undersc", "ores", "\n", "    ", "for", " character", " in", " special", "_", "char", "acters", ":", "\n", "        ", "text", " =", " text", ".", "replace", "(", "character", ",", " '_", "')", "\n", "\n", "    ", "#", " Replace", " all", " spaces", ",", " tabs", ",", " and", " new", "lines", " with", " undersc", "ores", "\n", "    ", "for", " character", " in", " \"", " \\", "n", "\\", "t", "\":", "\n", "        ", "text", " =", " text", ".", "replace", "(", "character", ",", " '_", "')", "\n", "\n", "    ", "#", " Create", " a", " list", " of", " t", "up", "les", " (", "character", ",", " case", ")", " to", " apply", " to", " the", " text", "\n", "    ", "cases", " =", " [(", "character", ",", " random", ".", "choice", "((", "string", ".", "upper", "case", ",", " string", ".", "low", "erc", "ase", ")))", "\n", "             ", "for", " character", " in", " string", ".", "print", "able", " if", " character", " not", " in", " string", ".", "wh", "ites", "pace", "]", "\n", "\n", "    ", "#", " Generate", " a", " random", " permutation", " of", " the", " list", " of", " t", "up", "les", "\n", "    ", "random", ".", "sh", "uffle", "(", "cases", ")", "\n", "\n", "    ", "#", " Replace", " characters", " in", " the", " text", " with", " c", "ased", " ones", " from", " the", " permutation", "\n", "    ", "for", " character", ",", " case", " in"], "logprobs": [-1.2803798913955688, -3.095144748687744, -0.25807109475135803, -4.4166340827941895, -1.0891557931900024, -3.033602237701416, -2.091165065765381, -1.2024140357971191, -3.0352063179016113, -0.03840559348464012, -1.0713832378387451, -0.0029782960191369057, -0.5490055680274963, -0.23754830658435822, -0.03568653017282486, -0.0009172523277811706, -0.009236345067620277, -0.010964502580463886, -0.015695255249738693, -0.3635793924331665, -0.0003780603874474764, -0.13891620934009552, -2.108271598815918, -0.34006163477897644, -2.373495101928711, -2.211099147796631, -0.7592458128929138, -0.17635469138622284, -0.042646538466215134, -0.23957344889640808, -0.0017289465758949518, -0.02058008871972561, -0.007031694054603577, -0.22069773077964783, -0.03158536180853844, -0.021038232371211052, -0.001896846224553883, -0.008153250440955162, -0.001993931829929352, -0.005772942211478949, -0.12933246791362762, -0.00296248821541667, -0.19407591223716736, -2.061166286468506, -3.0147664546966553, -0.14969265460968018, -1.0726207494735718, -0.31689828634262085, -1.9606417417526245, -0.6926809549331665, -0.0025079960469156504, -0.2228141874074936, -0.05195143073797226, -2.000530958175659, -0.11686676740646362, -0.026554705575108528, -2.4562625885009766, -0.039856065064668655, -0.10098609328269958, -6.329813186312094e-05, -0.0007585985003970563, -0.00014125302550382912, -0.12644630670547485, -0.6716601848602295, -0.2727932929992676, -0.32883819937705994, -0.6167299747467041, -0.6980788707733154, -1.4550894498825073, -0.04190901294350624, -0.07056762278079987, -2.666562557220459, -0.1825113147497177, -0.26520928740501404, -0.004520791582763195, -0.019994843751192093, -0.1661081463098526, -0.00037579628406092525, -0.03160453587770462, -1.513598084449768, -2.5456883907318115, -0.2514267861843109, -0.005716878920793533, -0.08360595256090164, -2.1398167610168457, -0.00010287232726113871, -0.1095234751701355, -0.0010801678290590644, -1.8621420860290527, -2.0052554607391357, -0.0005727558163926005, -0.06409009546041489, -0.0005865760613232851, -2.396077979938127e-05, -0.000325388420606032, -0.0005746620590798557, -0.001002047909423709, -0.0029786527156829834, -0.041194163262844086, -0.002375758718699217, -0.07550113648176193, -3.969590397900902e-05, -0.00176821683999151, -0.00013219437096267939, -0.002766236662864685, -0.0003897384158335626, -1.3054094314575195, -0.07666047662496567, -0.002609540708363056, -0.016419412568211555, -0.0023700501769781113, -0.006426264997571707, -0.485341340303421, -0.5099338293075562, -0.7982597947120667, -0.6635286808013916, -0.019501151517033577, -0.035844799131155014, -0.010913209989666939, -0.0017829725984483957, -0.03324710577726364, -0.010326054878532887, -0.33753764629364014, -0.00028951745480298996, -0.058296069502830505, -0.0006970121758058667, -1.495201587677002, -0.5342732667922974, -0.0012194823939353228, -0.5667153596878052, -0.08382105827331543, -0.34387311339378357, -0.00039986721822060645, -0.0006753309280611575, -0.8969441652297974, -0.0022703842259943485, -0.0002522150462027639, -0.009907475672662258, -0.0017058596713468432, -0.03507184982299805, -1.645074735279195e-05, -0.0004468158003874123, -9.345571743324399e-05, -0.0009865660686045885, -0.0002361257211305201, -0.2420678287744522, -0.008558263070881367, -0.0013554443139582872, -0.007848969660699368, -0.001211028778925538, -0.00854679848998785, -3.5553388595581055, -0.10732747614383698, -0.8013916611671448, -0.07683181762695312, -2.8985538482666016, -0.0002928543253801763, -7.557583012385294e-05, -2.430830717086792, -1.209301233291626, -0.007195865735411644, -3.861905097961426, -0.24216580390930176, -1.7122814655303955, -2.954711437225342, -0.6166422963142395, -0.6358144283294678, -0.47732019424438477, -0.18860629200935364, -0.0014882928226143122, -1.3884111642837524, -0.032851625233888626, -0.3341189920902252, -0.8351026177406311, -0.016347406432032585, -0.16847488284111023, -0.0005822870298288763, -0.11943914741277695, -1.207571029663086, -2.395665168762207, -0.00020311199477873743, -1.0396168231964111, -0.008289455436170101, -0.024131974205374718, -0.013761524111032486, -1.3232143828645349e-05, -0.0005862186080776155, -2.992108420585282e-05, -4.470248313737102e-05, -0.32803958654403687, -0.9978803396224976, -0.1576463133096695, -0.005397390574216843, -0.009199965745210648, -0.0022526620887219906, -2.2070393562316895, -0.0036286956164985895, -0.7644181847572327, -0.0025332048535346985, -0.38756415247917175, -0.08395063132047653, -0.6215210556983948, -0.00013064485392533243, -2.436821937561035, -0.00011801023356383666, -0.5964349508285522, -0.00015555603022221476, -5.447716102935374e-05, -0.1855287402868271, -0.007170300465077162, -0.0553368479013443, -0.0003589939442463219, -0.03354894369840622, -3.731630563735962, -0.5427483320236206, -0.6392046809196472, -1.235056757926941, -0.07165113836526871, -0.10594157874584198, -1.1369613409042358, -0.47878143191337585, -0.17408747971057892, -8.475421054754406e-05, -2.2053474822314456e-05, -0.12505868077278137, -0.0003691230376716703, -0.27860963344573975, -0.005914330016821623, -0.06309394538402557, -9.059865078597795e-06, -5.149708886165172e-05, -8.082063141046092e-05, -0.002919223625212908, -0.00023922442051116377, -0.008957440964877605, -0.00019429226813372225, -0.015470851212739944, -2.2398300170898438, -0.7198845744132996, -1.5285429954528809, -0.38051629066467285, -0.08743420988321304, -0.2666418254375458, -3.213923454284668, -1.3034058809280396, -3.1952579021453857, -2.047861099243164, -0.025837041437625885, -1.8535914421081543, -0.07293430715799332, -0.0004555141495075077, -0.06464172154664993, -0.4424497187137604, -0.013338145799934864, -0.09558726847171783, -0.018455922603607178], "finish_reason": "length"}], "metrics": {"energy": 267.69550908279416, "energy_per_token": 1.0456855823546647, "time": 11.147222, "time_per_token": 0.0435438359375}}
{"outputs": [{"text": "special_chars = '~!@#$%^&*()_+[]{}:;\",.?/\\'\"'\n    punctuations = string.punctuation + special_chars\n    preprocessed_text = []\n    for char in text:\n        if char.isalnum() or char in punctuations:\n            preprocessed_text.append(char)\n        elif char.isspace():\n            preprocessed_text.append('___')\n        else:\n            preprocessed_text.append('__')\n\n    random.seed(seed)\n    for i in range(len(preprocessed_text)):\n        if random.random() < 0.5:\n            preprocessed_text[i] = preprocessed_text[i].upper()\n\n    return ''.join(preprocessed_text)", "tokens": ["special", "_", "chars", " =", " '", "~", "!", "@", "#", "$", "%^", "&", "*", "()", "_+", "[]{", "}:", ";", "\"", ",", ".", "?", "/\\", "'", "\"", "'", "\n", "    ", "punct", "uations", " =", " string", ".", "punct", "uation", " +", " special", "_", "chars", "\n", "    ", "pre", "processed", "_", "text", " =", " []", "\n", "    ", "for", " char", " in", " text", ":", "\n", "        ", "if", " char", ".", "isal", "num", "()", " or", " char", " in", " punct", "uations", ":", "\n", "            ", "pre", "processed", "_", "text", ".", "append", "(", "char", ")", "\n", "        ", "elif", " char", ".", "iss", "pace", "():", "\n", "            ", "pre", "processed", "_", "text", ".", "append", "('", "___", "')", "\n", "        ", "else", ":", "\n", "            ", "pre", "processed", "_", "text", ".", "append", "('", "__", "')", "\n", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "pre", "processed", "_", "text", "))", ":", "\n", "        ", "if", " random", ".", "random", "()", " <", " ", "0", ".", "5", ":", "\n", "            ", "pre", "processed", "_", "text", "[", "i", "]", " =", " pre", "processed", "_", "text", "[", "i", "]", ".", "upper", "()", "\n", "\n", "    ", "return", " ''", ".", "join", "(", "pre", "processed", "_", "text", ")", "\n", "\n", "def"], "logprobs": [-2.270883083343506, -0.10224521160125732, -0.22019723057746887, -0.060610707849264145, -3.6084415912628174, -2.1360669136047363, -1.0717744827270508, -0.0324154831469059, -0.00427617970854044, -0.00876094400882721, -0.009576572105288506, -0.0023445994593203068, -0.0710708349943161, -0.048429474234580994, -0.6646647453308105, -3.945535659790039, -1.815385341644287, -1.4125853776931763, -0.9912419319152832, -2.978271007537842, -0.6977018117904663, -1.765899419784546, -2.908831834793091, -1.1894525289535522, -1.158935785293579, -0.6803593039512634, -0.13953445851802826, -0.12354514002799988, -1.7992658615112305, -0.7395305633544922, -0.020487943664193153, -0.385569304227829, -5.8530047681415454e-05, -0.006890701130032539, -0.0010272946674376726, -2.106909990310669, -0.29545649886131287, -0.0015354283386841416, -3.576278118089249e-07, -0.03108406811952591, -0.338470458984375, -4.709469795227051, -0.2851341664791107, -0.21275846660137177, -0.05487971007823944, -0.008893639780580997, -2.6475706100463867, -0.012900938279926777, -0.6663435101509094, -1.5816186666488647, -0.23559056222438812, -0.00182819040492177, -0.026139963418245316, -0.10922662168741226, -0.004152841866016388, -0.007230779621750116, -0.07154415547847748, -0.06753747910261154, -1.2717207670211792, -0.6043253540992737, -0.00017426878912374377, -0.5470908880233765, -0.007613569963723421, -0.021602917462587357, -0.2323484569787979, -0.19278587400913239, -0.0002554328821133822, -0.07628555595874786, -0.046255242079496384, -0.0005044856225140393, -0.06603144854307175, -8.666139910928905e-05, -5.519237674889155e-05, -0.00012730741582345217, -0.001061591086909175, -0.0003511289251036942, -0.0010219357209280133, -0.0035605148877948523, -0.05605247989296913, -0.002454841509461403, -0.02597806043922901, -1.1154580116271973, -0.040251534432172775, -0.24754025042057037, -0.0035626532044261694, -1.8954096958623268e-05, -0.03991711884737015, -0.019335830584168434, -0.0005585778853856027, -0.05482226982712746, -0.0008662762120366096, -0.0004644507134798914, -0.00014757021563127637, -0.003986864350736141, -0.0521789975464344, -0.09624306857585907, -2.2112679481506348, -0.02226964943110943, -0.030361436307430267, -0.03038167394697666, -0.3138006925582886, -6.496695277746767e-05, -0.023674197494983673, -0.0006466205231845379, -0.04997095465660095, -0.000447530735982582, -0.0003797286772169173, -2.6940935640595853e-05, -0.00024768622824922204, -0.00046623803791590035, -0.04260461404919624, -0.4267759323120117, -0.047611068934202194, -0.004920279141515493, -1.228127360343933, -0.0034701151307672262, -0.4053104519844055, -0.01864280179142952, -0.03739338740706444, -0.00025912740966305137, -0.003588904393836856, -0.00845011044293642, -0.043803729116916656, -0.03809638321399689, -0.41272491216659546, -0.23329021036624908, -0.3610475957393646, -0.0006498370785266161, -0.00040987672400660813, -0.08478572964668274, -1.9430925021879375e-05, -0.0069616143591701984, -6.854299135738984e-05, -7.152531907195225e-06, -2.3841855067985307e-07, -0.012946597300469875, -0.00013565097469836473, -0.0015969631494954228, -0.0006939148879610002, -0.05783263221383095, -0.14733530580997467, -0.0002743821241892874, -0.3554305136203766, -0.001158043509349227, -0.15279267728328705, -0.0005754960584454238, -0.026226362213492393, -3.814689989667386e-06, -0.0034048936795443296, -0.1900922805070877, -0.07005982846021652, -0.000527123745996505, -0.05019863322377205, -0.0001308832288486883, -3.862306402879767e-05, -5.173549288883805e-05, -5.507317473529838e-05, -4.5060096454108134e-05, -0.00027366707217879593, -0.0008466235012747347, -0.002209842437878251, -0.000398198957554996, -4.434487345861271e-05, -4.768370445162873e-07, -1.3232143828645349e-05, -0.0002047805901383981, -0.004865710623562336, -0.0004873280122410506, -0.044063955545425415, -6.83045873302035e-05, -0.00227859104052186, -0.2035592943429947, -0.0011155341053381562, -0.16324341297149658, -0.10400362312793732, -3.6954811548639555e-06, -0.00010299152199877426, -0.0005706112715415657, -0.0029798413161188364, -0.00012730741582345217, -7.402622577501461e-05, -1.1920928244535389e-07, -0.2163415551185608, -0.6596286296844482, -0.007900773547589779, -1.0393083095550537], "finish_reason": "stop"}], "metrics": {"energy": 197.60943584442145, "energy_per_token": 1.0624163217442013, "time": 7.999188, "time_per_token": 0.04300638709677419}}
{"outputs": [{"text": "import re\n    import string\n    import random\n\n    special_chars = string.punctuation\n    special_chars = list(special_chars)\n\n    if seed is not None:\n        random.seed(seed)\n\n    normalized_text = \"\"\n    for char in text:\n        if char in special_chars:\n            normalized_text += ' '\n        else:\n            normalized_text += char\n\n    normalized_text = re.sub(r\"\\s+\", '___', normalized_text)\n    normalized_text = re.sub(r\"\\s\", '_', normalized_text)\n\n    random_chars = [random.choice((char.upper() if random.randint(0, 1) else char) for char in normalized_text) for _ in\n                   range(len(normalized_text))]\n    random_text = ''.join(random_chars)\n\n    return random_text", "tokens": ["import", " re", "\n", "    ", "import", " string", "\n", "    ", "import", " random", "\n", "\n", "    ", "special", "_", "chars", " =", " string", ".", "punct", "uation", "\n", "    ", "special", "_", "chars", " =", " list", "(", "special", "_", "chars", ")", "\n", "\n", "    ", "if", " seed", " is", " not", " None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "normalized", "_", "text", " =", " \"", "\"", "\n", "    ", "for", " char", " in", " text", ":", "\n", "        ", "if", " char", " in", " special", "_", "chars", ":", "\n", "            ", "normalized", "_", "text", " +=", " '", " '", "\n", "        ", "else", ":", "\n", "            ", "normalized", "_", "text", " +=", " char", "\n", "\n", "    ", "normalized", "_", "text", " =", " re", ".", "sub", "(", "r", "\"", "\\", "s", "+", "\"", ",", " '", "___", "'", ",", " normalized", "_", "text", ")", "\n", "    ", "normalized", "_", "text", " =", " re", ".", "sub", "(", "r", "\"", "\\", "s", "\"", ",", " '_", "'", ",", " normalized", "_", "text", ")", "\n", "\n", "    ", "random", "_", "chars", " =", " [", "random", ".", "choice", "((", "char", ".", "upper", "()", " if", " random", ".", "rand", "int", "(", "0", ",", " ", "1", ")", " else", " char", ")", " for", " char", " in", " normalized", "_", "text", ")", " for", " _", " in", "\n", "                ", "   ", "range", "(", "len", "(", "normalized", "_", "text", "))", "]", "\n", "    ", "random", "_", "text", " =", " ''", ".", "join", "(", "random", "_", "chars", ")", "\n", "\n", "    ", "return", " random", "_", "text", "<", "|", "end", "of", "text", "|>"], "logprobs": [-4.055385112762451, -0.5084996819496155, -0.08083537220954895, -0.023136891424655914, -0.043669309467077255, -0.1638995260000229, -0.0006264869589358568, -0.01943439431488514, -0.010756488889455795, -0.00038890427094884217, -0.0017160940915346146, -0.2613937556743622, -0.0022908414248377085, -1.6070613861083984, -0.0780499279499054, -0.2529025375843048, -0.06477994471788406, -1.0993870496749878, -4.565611743601039e-05, -0.002166782971471548, -7.903263758635148e-05, -0.6959456205368042, -0.13901476562023163, -0.5174739956855774, -0.008638749830424786, -0.07281571626663208, -0.5579425692558289, -1.6463918685913086, -0.007004112936556339, -0.13570255041122437, -0.00034278715611435473, -8.34461570775602e-06, -0.05106034874916077, -0.39699095487594604, -1.236816167831421, -0.0003499372396618128, -2.638028621673584, -0.07552998512983322, -0.3626725971698761, -0.04287360608577728, -7.1403817855753e-05, -0.0037139742635190487, -0.008567245677113533, -0.0016551617300137877, -0.034235063940286636, -0.0012549628736451268, -0.013302738778293133, -0.00020203932945150882, -0.0024222577922046185, -0.0009079624433070421, -0.007408170960843563, -0.05001518130302429, -0.0016384999034926295, -3.159195899963379, -0.1653095930814743, -0.07460867613554001, -0.004359859973192215, -3.074566602706909, -0.7054435014724731, -0.4495382606983185, -0.2300218641757965, -0.08784864842891693, -0.17166632413864136, -0.0016770598012953997, -0.02908819168806076, -0.04154381901025772, -0.0016269554616883397, -0.00729646161198616, -0.058962613344192505, -0.03290445730090141, -0.36939072608947754, -0.09924459457397461, -1.0728830375228426e-06, -2.264974000354414e-06, -0.05104959011077881, -0.004824426025152206, -0.0006213641609065235, -0.19967542588710785, -6.401333666872233e-05, -0.0013915151357650757, -0.009969323873519897, -2.272989511489868, -1.213822841644287, -1.032205581665039, -0.031928807497024536, -0.5978348255157471, -8.725739462533966e-05, -0.0036013764329254627, -0.00048708971007727087, -0.02959546260535717, -0.0004768426588270813, -3.969590397900902e-05, -0.0003010773507412523, -0.006553467363119125, -0.04078853875398636, -0.20390118658542633, -0.0016331442166119814, -0.24733677506446838, -0.00027652730932459235, -0.009000327438116074, -0.014592939056456089, -0.3215118944644928, -4.625213477993384e-05, -0.00632487004622817, -0.1011846661567688, -0.07025186717510223, -0.7566608190536499, -0.0852726399898529, -0.010997634381055832, -0.0673910528421402, -0.01925678551197052, -6.496695277746767e-05, -1.8789409399032593, -2.5039892196655273, -0.004292560275644064, -0.0012843701988458633, -0.00887201726436615, -0.0003936707798857242, -1.4305104514278355e-06, -0.08277952671051025, -0.03982697054743767, -0.7198827862739563, -0.1649436503648758, -8.83301836438477e-05, -0.0007363230688497424, -0.007819280959665775, -0.40578460693359375, -0.0009704885887913406, -0.0007952864980325103, -0.07578662037849426, -0.01928180828690529, -0.03267107531428337, -0.18195635080337524, -1.3955800533294678, -0.14288416504859924, -0.0001429217227268964, -0.811240553855896, -0.0015135272406041622, -0.0003493413969408721, -0.0008905735448934138, -0.00027700403006747365, -3.576278118089249e-07, -0.002372785471379757, -0.004602552857249975, -0.39675047993659973, -7.617183291586116e-05, -1.7858675718307495, -0.5344252586364746, -1.682426929473877, -0.045354172587394714, -0.7141306400299072, -0.49800607562065125, -0.001456867903470993, -0.2204020768404007, -1.1299057006835938, -0.9101443290710449, -0.08798850327730179, -0.034962039440870285, -0.0051604644395411015, -2.362504720687866, -0.01787329837679863, -0.00021443451987579465, -1.598634123802185, -0.038880642503499985, -9.560128091834486e-05, -0.022294364869594574, -0.00011395759065635502, -0.021628698334097862, -0.07323293387889862, -0.06079380214214325, -0.5723038911819458, -0.005101876333355904, -1.341860294342041, -0.0800691545009613, -0.019275378435850143, -0.0008021951070986688, -0.2927565574645996, -0.00022718709078617394, -4.95898348162882e-05, -0.4083605706691742, -0.08031340688467026, -0.14976418018341064, -0.0008175606490112841, -2.0045669078826904, -0.005224148277193308, -2.670320510864258, -0.005652041174471378, -0.0007373951375484467, -0.1998240202665329, -0.00016056202002801, -0.008798757568001747, -3.814689989667386e-06, -7.152555099310121e-07, -0.013978787697851658, -0.009031752124428749, -0.002056509256362915, -0.5159575939178467, -1.435126781463623, -0.20023499429225922, -0.15978333353996277, -0.0029443029779940844, -0.8345004320144653, -0.0005152089870534837, -0.00013445904187392443, -0.002579102059826255, -0.0018473479431122541, -0.0003819928097072989, -1.728519782773219e-05, -0.001440678839571774, -0.006769698113203049, -0.23302961885929108, -0.00020895205670967698, -0.04546797648072243, -0.006296440027654171, -0.0011754278093576431, -3.313963316031732e-05, -1.3721020221710205, -5.006777428206988e-06, -3.933898824470816e-06, -0.00015615197480656207, -0.00012110930401831865, -0.11120205372571945], "finish_reason": "stop"}], "metrics": {"energy": 213.66243311882036, "energy_per_token": 0.9624433924271187, "time": 9.4507675, "time_per_token": 0.04257102477477477}}
{"outputs": [{"text": "# Create a custom random.Random instance using the given seed\n    random = random.Random(seed)\n\n    # Remove special characters and convert to lowercase\n    text = re.sub('[^A-Za-z ]', '', text.lower())\n\n    # Normalize whitespace\n    text = re.sub('\\s+', '_', text)\n\n    # Convert to uppercase with a 50% probability\n    for char in text:\n        if random.randint(0, 100) < 50:\n            char = char.upper()\n        text = text.replace(char, char.upper())\n\n    return text", "tokens": ["#", " Create", " a", " custom", " random", ".", "Random", " instance", " using", " the", " given", " seed", "\n", "    ", "random", " =", " random", ".", "Random", "(", "seed", ")", "\n", "\n", "    ", "#", " Remove", " special", " characters", " and", " convert", " to", " lower", "case", "\n", "    ", "text", " =", " re", ".", "sub", "('", "[", "^", "A", "-", "Z", "a", "-", "z", " ]", "'", ",", " ''", ",", " text", ".", "lower", "())", "\n", "\n", "    ", "#", " Normal", "ize", " whites", "pace", "\n", "    ", "text", " =", " re", ".", "sub", "('", "\\", "s", "+'", ",", " '_", "'", ",", " text", ")", "\n", "\n", "    ", "#", " Convert", " to", " upper", "case", " with", " a", " ", "5", "0", "%", " probability", "\n", "    ", "for", " char", " in", " text", ":", "\n", "        ", "if", " random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", "0", ")", " <", " ", "5", "0", ":", "\n", "            ", "char", " =", " char", ".", "upper", "()", "\n", "        ", "text", " =", " text", ".", "replace", "(", "char", ",", " char", ".", "upper", "())", "\n", "\n", "    ", "return", " text", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.2803798913955688, -3.095144748687744, -0.25807109475135803, -4.4166340827941895, -1.0891557931900024, -2.029940128326416, -0.14708712697029114, -0.9012057781219482, -1.9826635122299194, -0.2035544365644455, -1.3785006999969482, -0.012047856114804745, -0.9188641309738159, -0.001392229343764484, -0.5265211462974548, -2.174528121948242, -0.18052539229393005, -0.0025102554354816675, -0.007381901610642672, -0.013117565773427486, -0.0036159863229840994, -0.01604795642197132, -0.01583712548017502, -0.14863823354244232, -0.0002299282787134871, -0.051010508090257645, -1.5250792503356934, -0.3917935788631439, -0.008510984480381012, -1.4381378889083862, -1.8769887685775757, -0.3864452838897705, -0.24643360078334808, -0.025297757238149643, -0.11009149998426437, -0.00039057256071828306, -0.2671177089214325, -0.05299322307109833, -0.5916756987571716, -2.658331868587993e-05, -0.010838567279279232, -2.4106404781341553, -0.13044719398021698, -0.7170440554618835, -2.3626725673675537, -2.825220326485578e-05, -0.0006473353132605553, -0.0003980797773692757, -2.145764938177308e-06, -7.033323527139146e-06, -1.5482183694839478, -0.515846312046051, -6.317892984952778e-05, -0.11170506477355957, -4.339123915997334e-05, -0.0068867942318320274, -1.0565816164016724, -0.04745692387223244, -0.010412298142910004, -0.04503114894032478, -0.06782256811857224, -0.00010215714428341016, -0.003986508119851351, -2.382267475128174, -0.002356135519221425, -0.15025165677070618, -0.026127420365810394, -1.1126718521118164, -0.00012754580529872328, -0.012523934245109558, -0.004582142923027277, -0.6177202463150024, -0.0005631053354591131, -0.000530936405993998, -0.5727955102920532, -0.9330827593803406, -0.004968439228832722, -0.022176029160618782, -2.002696055569686e-05, -0.739575207233429, -0.00010656742961145937, -0.0014785320963710546, -0.0018053437815979123, -0.03524437174201012, -0.024435296654701233, -0.02240138128399849, -0.0002422039397060871, -0.005405571311712265, -1.691032886505127, -1.638620138168335, -0.0496455617249012, -0.0139079000800848, -0.20571492612361908, -0.46911656856536865, -0.019861042499542236, -0.0020625763572752476, -7.70062324590981e-05, -0.005193670280277729, -0.17430280148983002, -0.07283733040094376, -0.00048160876031033695, -0.5939213037490845, -3.3266475200653076, -0.01736297458410263, -0.10909227281808853, -0.005600239150226116, -0.0017552459612488747, -0.0029391921125352383, -0.08782146126031876, -0.030133360996842384, -0.001450082752853632, -1.6910202503204346, -0.08426176011562347, -7.199982064776123e-05, -0.05840019881725311, -0.00013279033009894192, -0.008172878064215183, -0.06770414859056473, -1.688658356666565, -0.08124618232250214, -0.027825266122817993, -0.19142094254493713, -0.00025054652360267937, -0.0020224847830832005, -0.004273924510926008, -0.03941391408443451, -0.044748373329639435, -0.0005012686015106738, -1.079202651977539, -0.008234833367168903, -0.027261881157755852, -7.10462118149735e-05, -0.004247097764164209, -7.152301259338856e-05, -0.002702871570363641, -1.2188310623168945, -0.3767690062522888, -0.003558733267709613, -0.1194443330168724, -0.0020640038419514894, -0.0010564705589786172, -0.0010805251076817513, -0.0024072735104709864, -0.0004301338049117476, -0.5224565863609314, -0.4751902222633362, -0.10094169527292252, -0.016792958602309227, -0.007277290336787701, -0.03701309859752655, -0.0014222278259694576, -0.12553709745407104, -0.004812799859791994, -1.3667058944702148, -2.0265558760002023e-06, -1.0728830375228426e-06, -0.0001323135511483997, -7.998623186722398e-05, -2.274986743927002, -0.007980840280652046], "finish_reason": "stop"}], "metrics": {"energy": 200.63381870460512, "energy_per_token": 1.253961366903782, "time": 6.734105, "time_per_token": 0.042088156249999994}}
{"outputs": [{"text": "random.seed(seed)\n\n    text = text.replace(\"\\n\", \"_\").replace(\"\\r\", \"_\").replace(\"\\t\", \"__\")\n    text = text.translate(str.maketrans(string.punctuation, \"_\" * len(string.punctuation)))\n    text = \"\".join(\n        random.choice([x.upper(), x.lower()]) if random.random() < 0.5 else x\n        for x in text if not x.isspace()\n    )\n    return text", "tokens": ["random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "text", " =", " text", ".", "replace", "(", "\"", "\\", "n", "\"", ",", " \"", "_", "\"", ")", ".", "replace", "(", "\"", "\\", "r", "\"", ",", " \"", "_", "\"", ")", ".", "replace", "(", "\"", "\\", "t", "\"", ",", " \"__", "\"", ")", "\n", "    ", "text", " =", " text", ".", "translate", "(", "str", ".", "mak", "et", "rans", "(", "string", ".", "punct", "uation", ",", " \"", "_", "\"", " *", " len", "(", "string", ".", "punct", "uation", ")))", "\n", "    ", "text", " =", " \"", "\"", ".", "join", "(", "\n", "        ", "random", ".", "choice", "([", "x", ".", "upper", "()", ",", " x", ".", "lower", "()", "])", " if", " random", ".", "random", "()", " <", " ", "0", ".", "5", " else", " x", "\n", "        ", "for", " x", " in", " text", " if", " not", " x", ".", "iss", "pace", "()", "\n", "    ", ")", "\n", "    ", "return", " text", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.009805202484131, -0.02008902095258236, -0.014897407032549381, -0.000957030919380486, -0.0086671132594347, -0.006972505711019039, -0.10529844462871552, -1.0607082843780518, -0.000814582861494273, -2.0492191314697266, -0.10074737668037415, -0.6801277995109558, -0.005268024746328592, -1.669015884399414, -0.9739037752151489, -0.12968729436397552, -1.4551880359649658, -0.17086568474769592, -0.013130037114024162, -0.0004015354788862169, -0.46096470952033997, -0.6483116745948792, -0.04753831773996353, -0.1260938048362732, -0.8363978862762451, -0.007657105103135109, -0.011269369162619114, -0.003766349283978343, -0.11083101481199265, -2.3555986881256104, -0.036951638758182526, -0.0143630001693964, -0.11510705202817917, -0.0517311692237854, -0.0008081507403403521, -0.011018031276762486, -0.197671577334404, -0.03489135578274727, -0.015601720660924911, -0.007543767336755991, -0.14725515246391296, -0.040700871497392654, -0.00037698791129514575, -0.00043406602344475687, -1.7328343391418457, -0.1307072788476944, -0.002181770745664835, -0.32545265555381775, -0.4145812392234802, -0.46676522493362427, -0.0171370692551136, -1.5984764099121094, -0.005631415639072657, -0.6481984257698059, -0.07542695850133896, -0.06852398067712784, -2.7656173188006505e-05, -0.00019167017308063805, -5.07818695041351e-05, -0.00022480344341602176, -0.19763009250164032, -0.730737030506134, -2.2291887944447808e-05, -0.008998082019388676, -0.00012313561455812305, -0.060695189982652664, -0.5626453161239624, -0.4028977155685425, -0.005496982019394636, -0.3949277997016907, -0.017537523061037064, -0.00015293381875380874, -0.005106027238070965, -0.0001062098381225951, -1.823885577323381e-05, -0.0005609607324004173, -0.056915588676929474, -0.09141629934310913, -0.631168782711029, -0.28844964504241943, -0.011981307528913021, -1.3821027278900146, -0.7983462810516357, -0.00436911778524518, -0.00019560330838430673, -0.5899155139923096, -1.0539352893829346, -0.004024384077638388, -0.9653773307800293, -0.001702408422715962, -0.06826859712600708, -0.4940042793750763, -2.70263671875, -0.08265156298875809, -0.1107412725687027, -0.004807224031537771, -0.1304706335067749, -0.021106049418449402, -0.37260937690734863, -0.005417190957814455, -8.296622399939224e-05, -0.2686631679534912, -0.48492443561553955, -0.03437259793281555, -0.0002795067266561091, -0.44130468368530273, -0.0021641661878675222, -0.2548503577709198, -0.0012023370945826173, -0.016616052016615868, -4.0531076592742465e-06, -0.0019456282025203109, -0.01608091965317726, -0.0012725834967568517, -0.5247164368629456, -0.00030310326837934554, -0.0006553170969709754, -0.0005604841862805188, -0.0006997520686127245, -0.2122260183095932, -3.0119192600250244, -1.569200873374939, -0.5425406694412231, -0.08519250899553299, -0.0431663878262043, -5.149708886165172e-05, -0.03660991042852402, -0.05304703488945961, -0.03008975088596344, -0.0005208089714869857, -0.008800648152828217, -1.2302842140197754, -0.08926310390233994, -0.023605624213814735, -1.5188661813735962, -2.3841830625315197e-06, -1.311301275563892e-06, -0.00019238528329879045, -0.00011955977242905647, -0.10954943299293518], "finish_reason": "stop"}], "metrics": {"energy": 147.05006467819217, "energy_per_token": 1.0503576048442298, "time": 5.8944983, "time_per_token": 0.04210355928571429}}
{"outputs": [{"text": "special_chars = set(string.punctuation) - set(\" \")\n    special_chars = list(special_chars)\n    # convert all punctuation to special chars\n    for i in range(len(text)):\n        if text[i] in special_chars:\n            text = text.replace(text[i], text[i] + \"_\" + \"_\" * (i + 1))\n    # replace multiple spaces with single spaces\n    text = re.sub(\" +\", \" \", text).strip()\n    # change case\n    text = text.swapcase()\n    for i in range(len(text)):\n        if i <= len(text):\n            if random.random() < 0.5:\n                text = text[:i] + text[i].upper() + text[i + 1:]\n    return text", "tokens": ["special", "_", "chars", " =", " set", "(", "string", ".", "punct", "uation", ")", " -", " set", "(", "\"", " \"", ")", "\n", "    ", "special", "_", "chars", " =", " list", "(", "special", "_", "chars", ")", "\n", "    ", "#", " convert", " all", " punct", "uation", " to", " special", " char", "s", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "text", "))", ":", "\n", "        ", "if", " text", "[", "i", "]", " in", " special", "_", "chars", ":", "\n", "            ", "text", " =", " text", ".", "replace", "(", "text", "[", "i", "]", ",", " text", "[", "i", "]", " +", " \"", "_", "\"", " +", " \"", "_", "\"", " *", " (", "i", " +", " ", "1", "))", "\n", "    ", "#", " replace", " multiple", " spaces", " with", " single", " spaces", "\n", "    ", "text", " =", " re", ".", "sub", "(", "\"", " +", "\"", ",", " \"", " \"", ",", " text", ")", ".", "strip", "()", "\n", "    ", "#", " change", " case", "\n", "    ", "text", " =", " text", ".", "swap", "case", "()", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "text", "))", ":", "\n", "        ", "if", " i", " <=", " len", "(", "text", "):", "\n", "            ", "if", " random", ".", "random", "()", " <", " ", "0", ".", "5", ":", "\n", "                ", "text", " =", " text", "[:", "i", "]", " +", " text", "[", "i", "]", ".", "upper", "()", " +", " text", "[", "i", " +", " ", "1", ":]", "\n", "    ", "return", " text", "\n", "\n", "print"], "logprobs": [-2.270883083343506, -0.10224521160125732, -0.22019723057746887, -0.060610707849264145, -2.1418488025665283, -0.03942514583468437, -0.09493494778871536, -0.00010561384988250211, -0.00040713604539632797, -0.00015627116954419762, -0.08527953922748566, -0.9884966611862183, -0.20207342505455017, -0.17958100140094757, -0.628068208694458, -1.5436818599700928, -0.0284759309142828, -0.06173161789774895, -0.16765201091766357, -1.6726983785629272, -0.02865874394774437, -0.042092014104127884, -0.8086985945701599, -1.7672016620635986, -0.0031223376281559467, -0.08484749495983124, -0.0002892790944315493, -9.059865078597795e-06, -0.014815308153629303, -0.12847590446472168, -0.37440362572669983, -3.0158987045288086, -4.942644119262695, -2.403928279876709, -3.4823970794677734, -0.5201485753059387, -0.4974612593650818, -2.2541897296905518, -1.4905860424041748, -0.06838483363389969, -0.35377299785614014, -0.008494909852743149, -1.157057523727417, -1.333723545074463, -0.3231664299964905, -0.19060629606246948, -0.0016653967322781682, -0.21616612374782562, -0.0001072826053132303, -0.5645572543144226, -0.022075869143009186, -0.0007670559571124613, -0.006010197103023529, -0.0072988285683095455, -0.06660966575145721, -0.03528580069541931, -0.00027259447961114347, -0.00030894274823367596, -0.0012886562617495656, -0.04201657697558403, -0.24717861413955688, -0.003615036141127348, -3.3378546504536644e-06, -0.012777483090758324, -0.0036810750607401133, -0.0009545299108140171, -0.06741847097873688, -0.02681969478726387, -0.053043756633996964, -0.5197967886924744, -0.0020973130594938993, -0.0002008474839385599, -0.003433643840253353, -0.00027414379292167723, -0.0001387499796692282, -0.0013250865740701556, -0.00022301571152638644, -3.8600172996520996, -0.09927006810903549, -0.11191879212856293, -0.05747343599796295, -0.9382792115211487, -0.5548648238182068, -0.7698542475700378, -0.00646925950422883, -3.0874955654144287, -0.905857264995575, -0.17179423570632935, -0.0010787388309836388, -0.6882826685905457, -0.6586930155754089, -0.9524207711219788, -0.4566926658153534, -0.012112398631870747, -0.09848544001579285, -0.07060062140226364, -0.007228885777294636, -0.3846941888332367, -0.43043914437294006, -1.3958370685577393, -3.4151382446289062, -0.47216376662254333, -0.39667993783950806, -0.6318389177322388, -1.723204493522644, -0.0837627425789833, -0.0018767378060147166, -0.21000631153583527, -0.015392439439892769, -0.4240339696407318, -3.313963316031732e-05, -0.004391905851662159, -0.10329000651836395, -2.0367062091827393, -0.5883966088294983, -0.04996585100889206, -0.00016115797916427255, -0.026511522009968758, -0.10595176368951797, -0.0005428509321063757, -0.003680124878883362, -0.02661425620317459, -2.254145383834839, -0.06507319211959839, -0.02755057066679001, -0.05254485085606575, -0.08975590765476227, -0.15645794570446014, -4.054842472076416, -1.7884618043899536, -1.8977715969085693, -0.0025173898320645094, -2.5831801891326904, -0.06553942710161209, -1.8522473573684692, -0.017321264371275902, -1.6620781421661377, -0.0014935302315279841, -0.047407470643520355, -0.10442844033241272, -0.04815242812037468, -2.9916884899139404, -0.1591241955757141, -0.06256116926670074, -0.019565798342227936, -0.0007651500636711717, -0.11490271240472794, -7.188061863416806e-05, -0.005181811284273863, -0.03683042526245117, -0.00010883215873036534, -0.008175834082067013, -0.00150781380943954, -0.30504152178764343, -3.1500515937805176, -4.155486106872559, -0.38549739122390747, -0.0005696581210941076, -0.01479052472859621, -2.740194320678711, -0.016620155423879623, -0.0028455264400690794, -0.5180009007453918, -0.21897897124290466, -0.0004563482361845672, -0.6692381501197815, -0.00894042756408453, -0.3591742217540741, -0.0031974404118955135, -0.041133757680654526, -0.00014041867689229548, -0.006268364377319813, -0.13625964522361755, -0.0577961802482605, -0.0009190387791022658, -0.16956505179405212, -0.013650521636009216, -0.028541969135403633, -0.8873317241668701, -0.03624818101525307, -0.01955317333340645, -0.0039033901412039995, -0.05545154958963394, -0.002077327808365226, -0.000779205875005573, -0.014002886600792408, -0.0004984090337529778, -0.3619394898414612, -0.0005284343496896327, -0.016849692910909653, -0.011967525817453861, -0.0441477932035923, -0.0020548435859382153, -0.12279821187257767, -0.0013709203340113163, -0.0007831366965547204, -0.08484672755002975, -0.0073777600191533566, -0.3931856155395508, -0.1610221564769745, -0.02135416306555271, -0.5808207988739014, -0.017340948805212975, -2.9866714477539062], "finish_reason": "stop"}], "metrics": {"energy": 233.61522463989255, "energy_per_token": 1.1451726698033948, "time": 8.836084, "time_per_token": 0.043314137254901956}}
{"outputs": [{"text": "# Split the text into words and punctuation marks\n    words = text.split()\n    special_chars = string.punctuation\n    special_chars_split = special_chars.split()\n    special_chars_replace = special_chars_split + list('_') + list('__') + list('___')\n\n    random.seed(seed)\n\n    preprocessed_words = []\n\n    for word in words:\n        new_word = []\n        for char in word:\n            if char in special_chars:\n                # Randomize casing if it's a special character\n                new_word.append(random.choice(['_', '_', '_']))\n                new_word.append(random.choice([char.upper() if random.random() < 0.5 else char.lower() for char in char]))\n            elif char.isspace():\n                new_word.append('_' * len(char))\n            elif char in special_chars_replace:\n                new_word.append(random.choice(special_chars_replace))\n            else:\n                new_word.append(char)\n", "tokens": ["#", " Split", " the", " text", " into", " words", " and", " punct", "uation", " marks", "\n", "    ", "words", " =", " text", ".", "split", "()", "\n", "    ", "special", "_", "chars", " =", " string", ".", "punct", "uation", "\n", "    ", "special", "_", "chars", "_", "split", " =", " special", "_", "chars", ".", "split", "()", "\n", "    ", "special", "_", "chars", "_", "replace", " =", " special", "_", "chars", "_", "split", " +", " list", "('", "_", "')", " +", " list", "('", "__", "')", " +", " list", "('", "___", "')", "\n", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "pre", "processed", "_", "words", " =", " []", "\n", "\n", "    ", "for", " word", " in", " words", ":", "\n", "        ", "new", "_", "word", " =", " []", "\n", "        ", "for", " char", " in", " word", ":", "\n", "            ", "if", " char", " in", " special", "_", "chars", ":", "\n", "                ", "#", " Random", "ize", " c", "asing", " if", " it", "'", "s", " a", " special", " character", "\n", "                ", "new", "_", "word", ".", "append", "(", "random", ".", "choice", "(['", "_", "'", ",", " '_", "'", ",", " '_", "']))", "\n", "                ", "new", "_", "word", ".", "append", "(", "random", ".", "choice", "([", "char", ".", "upper", "()", " if", " random", ".", "random", "()", " <", " ", "0", ".", "5", " else", " char", ".", "lower", "()", " for", " char", " in", " char", "]))", "\n", "            ", "elif", " char", ".", "iss", "pace", "():", "\n", "                ", "new", "_", "word", ".", "append", "('", "_", "'", " *", " len", "(", "char", "))", "\n", "            ", "elif", " char", " in", " special", "_", "chars", "_", "replace", ":", "\n", "                ", "new", "_", "word", ".", "append", "(", "random", ".", "choice", "(", "special", "_", "chars", "_", "replace", "))", "\n", "            ", "else", ":", "\n", "                ", "new", "_", "word", ".", "append", "(", "char", ")", "\n"], "logprobs": [-1.2803798913955688, -4.218061923980713, -0.40338751673698425, -0.5613743662834167, -0.14607208967208862, -0.39260995388031006, -1.662879228591919, -0.8782190084457397, -0.8087365627288818, -2.6130497455596924, -0.13937965035438538, -0.0023654119577258825, -0.18469689786434174, -0.15096339583396912, -1.0945359468460083, -0.0026773104909807444, -0.16716569662094116, -0.031697969883680344, -0.0065397294238209724, -0.23646056652069092, -2.0792534351348877, -0.12717077136039734, -0.17271070182323456, -0.03193793073296547, -1.3191665410995483, -4.494089080253616e-05, -0.0011516136582940817, -0.00017331528943032026, -0.6187074184417725, -0.3170640468597412, -1.6370270252227783, -0.034669723361730576, -0.12857140600681305, -1.7270203828811646, -2.450530767440796, -0.07305166125297546, -1.4801828861236572, -0.006999259348958731, -1.4662635294371285e-05, -0.0029659350402653217, -0.023628443479537964, -0.4344545304775238, -0.03159783408045769, -0.4348832070827484, -0.8932542204856873, -0.010746818035840988, -0.032582346349954605, -0.4155743718147278, -3.9774880409240723, -0.49408844113349915, -1.2814887762069702, -0.0002485204895492643, -0.0006294653285294771, -2.960594415664673, -0.0030286891851574183, -1.3370511531829834, -2.3408427238464355, -1.9582250118255615, -0.9750850200653076, -0.7403693199157715, -2.2744977474212646, -0.6980574727058411, -0.05092565715312958, -0.21201002597808838, -0.0031551364809274673, -0.021578535437583923, -0.010490394197404385, -0.00464111752808094, -0.0038100522942841053, -0.0009840651182457805, -0.05355823040008545, -0.9307398796081543, -0.000490068516228348, -2.661241054534912, -0.057791341096162796, -0.044381819665431976, -0.0006409021443687379, -0.005085153039544821, -0.0073078228160738945, -0.08961445093154907, -0.7616569995880127, -0.0003392120997887105, -2.7779171466827393, -0.06779928505420685, -0.07005571573972702, -0.554132878780365, -0.024747831746935844, -0.12573422491550446, -0.004542271140962839, -1.7165918350219727, -0.00016950124700088054, -0.21189497411251068, -0.095763199031353, -0.0036594585981220007, -0.0014923398848623037, -0.0005011494504287839, -0.002574583748355508, -0.03410995006561279, -2.413447380065918, -0.006247159093618393, -0.017054684460163116, -0.0042663272470235825, -1.4997649192810059, -0.004368405789136887, -0.3762895464897156, -0.236458882689476, -0.20258960127830505, -0.005249288398772478, -0.018824147060513496, -0.022288069128990173, -0.004806156270205975, -0.020139610394835472, -0.2428257316350937, -0.05719280615448952, -0.43440186977386475, -0.0456143394112587, -4.410734163684538e-06, -0.0003620922507252544, -0.6280408501625061, -0.007298946846276522, -0.0012869894271716475, -3.175868511199951, -4.157409191131592, -1.3238824605941772, -0.37275636196136475, -0.0001389883691444993, -2.2453360557556152, -2.7673120498657227, -0.4590751528739929, -0.0007032066932879388, -0.5612189769744873, -0.10921486467123032, -0.025645924732089043, -0.10262386500835419, -0.0011406589765101671, -1.214462399482727, -0.0007082099909894168, -0.4874853193759918, -0.01509775035083294, -0.009961297735571861, -0.05901801586151123, -0.372623085975647, -0.0009882333688437939, -0.026965448632836342, -1.8190149068832397, -1.1688048839569092, -0.05954021215438843, -0.04898004233837128, -3.217486619949341, -0.09890472143888474, -0.05721588432788849, -0.6368613243103027, -2.9609715938568115, -0.04317792132496834, -2.1275603771209717, -0.8885782361030579, -4.815939246327616e-05, -0.012826796621084213, -0.04483317956328392, -0.012593389488756657, -0.04452024772763252, -0.5568366646766663, -0.00011872540198964998, -0.007374919950962067, -1.8314940929412842, -0.11062227934598923, -0.19686691462993622, -0.1275053769350052, -0.0015756584471091628, -2.3418517112731934, -0.06603825837373734, -0.0004316828562878072, -0.4780460000038147, -0.0011691170511767268, -0.17739208042621613, -0.0011687598889693618, -0.07390964031219482, -4.529942543740617e-06, -0.00248445151373744, -0.005762867629528046, -0.011007302440702915, -0.1513911634683609, -0.0012952042743563652, -5.6980417866725475e-05, -0.35930973291397095, -0.7215261459350586, -0.0005589353386312723, -0.8901817202568054, -0.2587782144546509, -0.0042988513596355915, -0.18432052433490753, -0.7562493681907654, -0.05336318537592888, -1.13188898563385, -0.19402839243412018, -0.0001161031104857102, -0.32861149311065674, -0.019761234521865845, -0.0006748544401489198, -0.7186445593833923, -3.182837463100441e-05, -0.003627151483669877, -0.011192984879016876, -0.01816108264029026, -0.24879486858844757, -0.17401205003261566, -2.406026601791382, -0.5828701853752136, -0.4785681962966919, -0.0019858418963849545, -0.33296072483062744, -0.08410768955945969, -0.015426833182573318, -0.017099568620324135, -1.2763022184371948, -0.07878728955984116, -0.6830687522888184, -0.45286834239959717, -0.001116844010539353, -1.4185804502631072e-05, -0.006254503969103098, -0.21951808035373688, -0.00664560217410326, -0.005423593334853649, -0.00035958975786343217, -0.13831065595149994, -4.184158387943171e-05, -0.005532429553568363, -0.0017640519654378295, -0.004828934092074633, -0.05976470932364464, -0.17082539200782776, -1.823885577323381e-05, -0.0038760786410421133, -0.28454193472862244, -0.02825518697500229, -3.194758028257638e-05, -1.6689286894688848e-06, -0.009971448220312595, -0.09102782607078552, -0.11891959607601166, -0.0012827033642679453, -0.016981203109025955, -0.06663040816783905, -4.5536911784438416e-05, -0.002700850600376725, -0.0002982171718031168, -0.04472523182630539, -1.9192511899746023e-05, -0.0005871717585250735, -0.00014208737411536276, -7.73638384998776e-05, -0.002638075966387987, -0.01462207455188036, -0.16197438538074493, -0.0012657972984015942], "finish_reason": "length"}], "metrics": {"energy": 298.3899745912548, "energy_per_token": 1.1655858382470892, "time": 11.143777, "time_per_token": 0.04353037890625}}
{"outputs": [{"text": "if seed is not None:\n        random.seed(seed)\n    # Step 1: Remove special characters\n    text = re.sub(r'[^\\w\\s]', '', text)\n\n    # Step 2: Normalize whitespace\n    text = ' '.join(text.split())\n\n    # Step 3: Randomly casing characters\n    casing_probability = random.randint(0, 100) / 100\n    if casing_probability >= 0.5:\n        text = text.upper()\n\n    return text", "tokens": ["if", " seed", " is", " not", " None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "#", " Step", " ", "1", ":", " Remove", " special", " characters", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Normal", "ize", " whites", "pace", "\n", "    ", "text", " =", " '", " '", ".", "join", "(", "text", ".", "split", "())", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Random", "ly", " c", "asing", " characters", "\n", "    ", "c", "asing", "_", "probability", " =", " random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", "0", ")", " /", " ", "1", "0", "0", "\n", "    ", "if", " c", "asing", "_", "probability", " >=", " ", "0", ".", "5", ":", "\n", "        ", "text", " =", " text", ".", "upper", "()", "\n", "\n", "    ", "return", " text", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.5533252954483032, -0.23924091458320618, -0.3202337920665741, -0.0749279335141182, -5.221230458118953e-05, -0.013791623525321484, -0.011701400391757488, -0.0019437245791777968, -0.033286888152360916, -0.001546973828226328, -0.00688466290012002, -0.0002814135223161429, -0.004104167688637972, -0.0013243722496554255, -0.009806198067963123, -0.9585247039794922, -1.8508801460266113, -3.1955652236938477, -0.02514641173183918, -0.017293497920036316, -0.06904657930135727, -0.5738577842712402, -0.1519700139760971, -0.005507533438503742, -0.6643370985984802, -0.005195330828428268, -0.46878665685653687, -0.07359293848276138, -0.3569987714290619, -2.6702524337451905e-05, -0.008252805098891258, -0.05721667408943176, -0.021055158227682114, -0.231454998254776, -0.09313725680112839, -0.4992959201335907, -0.012706862762570381, -0.05036788433790207, -0.003543409751728177, -0.20286457240581512, -0.04522019252181053, -5.674201020156033e-05, -0.06947638094425201, -6.890059739816934e-05, -0.0025295186787843704, -0.01980237476527691, -0.027313733473420143, -0.22185258567333221, -0.00021896349790040404, -0.0009261847590096295, -0.0026463984977453947, -0.0003256267518736422, -0.002017844934016466, -0.0032756265718489885, -0.1220410168170929, -0.006389901507645845, -0.02761029452085495, -0.01101885735988617, -0.12219157069921494, -0.0005868143052794039, -0.02452952042222023, -0.0038168213795870543, -1.3605995178222656, -0.01790666952729225, -0.00044490929576568305, -0.0041940356604754925, -0.01709206961095333, -0.004528386518359184, -0.0001486429391661659, -0.018765300512313843, -0.0013996100751683116, -0.046583108603954315, -0.03748088702559471, -0.0003713871701620519, -0.0029992142226547003, -0.005333599168807268, -0.00021371940965764225, -0.0011376821203157306, -0.004529810510575771, -0.20960590243339539, -2.1702141761779785, -2.6736388206481934, -0.03218140825629234, -0.6066886186599731, -0.10360787063837051, -0.001779640675522387, -2.0167417526245117, -1.2583339214324951, -0.20053862035274506, -1.6992623805999756, -0.003730839118361473, -2.3348569869995117, -0.00024673278676345944, -2.5043435096740723, -0.0657026469707489, -0.0030202509369701147, -0.15733061730861664, -9.285972191719338e-05, -0.048853013664484024, -0.3359697163105011, -0.19939742982387543, -0.13849563896656036, -0.02389618754386902, -0.06375640630722046, -0.00035470392322167754, -0.003995888400822878, -0.0005124686285853386, -0.0012244831304997206, -0.3032470643520355, -0.04024077206850052, -0.8056890964508057, -0.005268855020403862, -1.2040065485052764e-05, -6.318072337307967e-06, -1.1444026313256472e-05, -2.9513304233551025, -0.0027877537067979574, -0.07692399621009827, -0.006059608422219753, -0.037175409495830536, -0.023884430527687073, -0.03692234307527542, -0.0021114691626280546, -0.2281222939491272, -0.0042633600533008575, -0.6128592491149902, -0.00877370685338974, -0.06723636388778687, -9.107174992095679e-05, -0.015750879421830177, -1.0448782444000244, -0.0014879356604069471, -0.28779688477516174, -0.0167030431330204, -1.359196662902832, -4.6491513785440475e-06, -9.536738616588991e-07, -0.00043823651503771544, -6.615896563744172e-05, -0.06968431919813156], "finish_reason": "stop"}], "metrics": {"energy": 150.44945232391362, "energy_per_token": 1.0746389451708116, "time": 6.107396, "time_per_token": 0.04362425714285714}}
{"outputs": [{"text": "random.seed(seed)\n\n    special_chars = re.compile('[^a-zA-Z0-9_]')\n\n    def replace_spaces(match):\n        return f'{match.group(0).replace(\" \", \"_\")}'\n\n    def randomize_casing(match):\n        if random.random() < 0.5:\n            return match.group(0).upper()\n        else:\n            return match.group(0).lower()\n\n    text = special_chars.sub(replace_spaces, text)\n    return re.sub(r'\\s', '_', re.sub(r'\\s+', '__', re.sub(r'\\n', '___', text))).translate(str.maketrans(string.ascii_letters, string.ascii_letters+string.digits+'_')).translate(str.maketrans(string.punctuation, f'{string.digits}_{string.ascii_letters}_')).translate(str.maketrans(string.punctuation, f'{string.digits}_{string", "tokens": ["random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "special", "_", "chars", " =", " re", ".", "compile", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "_", "]", "')", "\n", "\n", "    ", "def", " replace", "_", "s", "paces", "(", "match", "):", "\n", "        ", "return", " f", "'{", "match", ".", "group", "(", "0", ")", ".", "replace", "(", "\"", " \"", ",", " \"", "_", "\"", ")}", "'", "\n", "\n", "    ", "def", " random", "ize", "_", "c", "asing", "(", "match", "):", "\n", "        ", "if", " random", ".", "random", "()", " <", " ", "0", ".", "5", ":", "\n", "            ", "return", " match", ".", "group", "(", "0", ")", ".", "upper", "()", "\n", "        ", "else", ":", "\n", "            ", "return", " match", ".", "group", "(", "0", ")", ".", "lower", "()", "\n", "\n", "    ", "text", " =", " special", "_", "chars", ".", "sub", "(", "replace", "_", "s", "paces", ",", " text", ")", "\n", "    ", "return", " re", ".", "sub", "(", "r", "'\\", "s", "'", ",", " '_", "'", ",", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", "__", "'", ",", " re", ".", "sub", "(", "r", "'\\", "n", "'", ",", " '", "___", "'", ",", " text", ")))", ".", "translate", "(", "str", ".", "mak", "et", "rans", "(", "string", ".", "ascii", "_", "letters", ",", " string", ".", "ascii", "_", "letters", "+", "string", ".", "dig", "its", "+", "'_", "'))", ".", "translate", "(", "str", ".", "mak", "et", "rans", "(", "string", ".", "punct", "uation", ",", " f", "'{", "string", ".", "dig", "its", "}_{", "string", ".", "ascii", "_", "letters", "}_", "'))", ".", "translate", "(", "str", ".", "mak", "et", "rans", "(", "string", ".", "punct", "uation", ",", " f", "'{", "string", ".", "dig", "its", "}_{", "string"], "logprobs": [-2.009805202484131, -0.02008902095258236, -0.014897407032549381, -0.000957030919380486, -0.0086671132594347, -0.006972505711019039, -0.10529844462871552, -1.0607082843780518, -0.000814582861494273, -2.7048568725585938, -0.057197872549295425, -0.2882014214992523, -0.08945323526859283, -1.4657504558563232, -1.3947389561508317e-05, -0.38598909974098206, -1.0363140106201172, -0.2948946952819824, -0.9243118762969971, -0.1616104543209076, -5.590759246842936e-05, -0.0001006075763143599, -0.29827532172203064, -3.135155202471651e-05, -0.000324673397699371, -0.12488498538732529, -0.00011491115583339706, -0.0001778444420779124, -2.017268419265747, -1.2534046173095703, -0.011685611680150032, -0.03657658398151398, -1.6544373035430908, -0.00024005869636312127, -2.348712921142578, -3.4843664169311523, -0.0745854452252388, -1.3086888790130615, -0.0008175606490112841, -0.1312575489282608, -0.7377331256866455, -0.527618408203125, -0.00958176702260971, -0.0011025547282770276, -0.314817875623703, -2.975501775741577, -1.8466469049453735, -0.4295593798160553, -0.18516457080841064, -0.008079702034592628, -0.25565671920776367, -0.297684907913208, -1.398134708404541, -0.21393398940563202, -0.2756233513355255, -0.00292017450556159, -0.0016025570221245289, -0.020095329731702805, -0.00012587709352374077, -0.33104199171066284, -0.12119317054748535, -0.0017143089789897203, -0.8911476731300354, -0.09338061511516571, -0.0441555492579937, -0.044326283037662506, -0.00018380382971372455, -0.44575533270835876, -1.1855177879333496, -0.4869113862514496, -0.02411428652703762, -1.1275990009307861, -0.0023215266410261393, -0.005393358878791332, -0.7151632308959961, -0.0087282108142972, -0.0006793813081458211, -0.000681883015204221, -0.5328359603881836, -0.026146234944462776, -0.0005355831235647202, -0.41512197256088257, -0.000846147071570158, -0.1983395218849182, -0.00038485272671096027, -0.030765531584620476, -4.410734163684538e-06, -0.0023093954659998417, -0.008647494949400425, -0.03379134088754654, -0.00018451895448379219, -0.03080645203590393, -0.08713127672672272, -0.012915059924125671, -0.005851282738149166, -0.19434215128421783, -0.0514058917760849, -0.0032062334939837456, -0.04703984409570694, -0.10517386347055435, -9.357491217087954e-05, -0.006278907414525747, -0.008789422921836376, -0.32493776082992554, -4.029192859889008e-05, -0.0019838192965835333, -9.989239333663136e-05, -0.002442355267703533, -0.0036251323763281107, -2.884823152271565e-05, -8.022463589441031e-05, -0.0001461399078834802, -0.0005435658385977149, -0.00014006110723130405, -0.14407286047935486, -0.0027462646830826998, -7.402622577501461e-05, -0.0006297035724855959, -0.0025046665687114, -0.00033206192892976105, -0.7762073874473572, -0.022672714665532112, -0.6847121715545654, -3.4570634852570947e-06, -2.50339189733495e-06, -4.458328112377785e-05, -0.00023183519078884274, -1.147568702697754, -0.9687294363975525, -9.524368942948058e-05, -0.0003146630187984556, -4.291525328881107e-06, -0.0018667429685592651, -0.018978439271450043, -0.07616636902093887, -0.09074556827545166, -0.02987700141966343, -2.63311505317688, -0.434811532497406, -9.202533692587167e-05, -0.0018467529444023967, -0.480944961309433, -0.03562130779027939, -0.3178366720676422, -0.18146520853042603, -2.9069948196411133, -0.00011538793478393927, -0.7525227069854736, -0.00043466180795803666, -0.007907751016318798, -1.1553175449371338, -0.0002696150622796267, -0.0013266343157738447, -0.072948157787323, -0.012205906212329865, -0.3817848861217499, -0.8118972182273865, -0.3341711461544037, -7.509902934543788e-05, -0.09878075122833252, -0.6650480628013611, -0.00033861625706776977, -0.0003494605771265924, -0.3803030252456665, -0.00019262365822214633, -0.0009296386269852519, -0.04426082223653793, -0.012994960881769657, -0.14755111932754517, -0.5435466766357422, -0.8818334937095642, -0.0023778993636369705, -0.014819654636085033, -0.006833161227405071, -0.0037518602330237627, -8.892617915989831e-05, -0.1920824497938156, -0.19769300520420074, -0.08208156377077103, -0.33834606409072876, -0.018768342211842537, -0.06187405064702034, -1.2874520507466514e-05, -7.629365427419543e-06, -4.6967357775429264e-05, -6.151010165922344e-05, -1.1156330108642578, -0.0760197639465332, -3.862306402879767e-05, -0.42320382595062256, -4.172316494077677e-06, -0.29669854044914246, -0.2662659287452698, -0.058414481580257416, -0.00010466027742950246, -0.0068375421687960625, -2.288792165927589e-05, -0.5102908611297607, -3.671807050704956, -0.027835816144943237, -0.000532842765096575, -0.12255504727363586, -3.433168603805825e-05, -0.5599945783615112, -0.6518841981887817, -0.19714149832725525, -0.052819326519966125, -0.029489098116755486, -0.0012463905150070786, -0.009991749189794064, -9.357491217087954e-05, -0.00025900822947733104, -1.07287787614041e-05, -8.630380034446716e-05, -0.17422349750995636, -0.21040405333042145, -0.0005440423847176135, -2.251188278198242, -0.00017736769223120064, -0.07242926210165024, -3.4400856494903564, -0.9894513487815857, -0.2549741566181183, -0.0003588747640606016, -3.261965751647949, -0.00011991735664196312, -2.6688976287841797, -1.0378050804138184, -0.00877370685338974, -0.1482178121805191, -0.00011216964776394889, -0.29105350375175476, -0.6635038256645203, -0.4162978231906891, -0.08766225725412369, -0.03225262835621834, -0.0010804060148075223, -0.007994676008820534, -0.0011530425399541855, -0.0007826602668501437, -4.6491513785440475e-06, -3.397406908334233e-05, -0.3216496706008911, -0.2550562918186188, -0.0007109498255886137, -0.7597125768661499, -0.00018952481332235038, -0.11608405411243439, -0.27785724401474, -0.3743603527545929, -0.03138679265975952, -0.0003237200144212693, -0.20071154832839966, -6.556489552167477e-06, -0.1764686107635498, -0.026232052594423294], "finish_reason": "length"}], "metrics": {"energy": 250.52815555763246, "energy_per_token": 0.9786256076470018, "time": 10.9380045, "time_per_token": 0.042726580078125}}
{"outputs": [{"text": "if seed:\n        random.seed(seed)\n\n    result = \"\"\n    for c in text:\n        if c.isalnum() or c.isspace():\n            result += c\n        elif c in string.punctuation:\n            result += \"_\" + (\"\".join(random.choices(string.ascii_letters, k=random.randint(2, 4)))).upper()\n        elif c.isspace():\n            result += \"___\"\n        else:\n            result += \"__\"\n\n    return result", "tokens": ["if", " seed", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "result", " =", " \"", "\"", "\n", "    ", "for", " c", " in", " text", ":", "\n", "        ", "if", " c", ".", "isal", "num", "()", " or", " c", ".", "iss", "pace", "():", "\n", "            ", "result", " +=", " c", "\n", "        ", "elif", " c", " in", " string", ".", "punct", "uation", ":", "\n", "            ", "result", " +=", " \"", "_", "\"", " +", " (", "\"", "\"", ".", "join", "(", "random", ".", "cho", "ices", "(", "string", ".", "ascii", "_", "letters", ",", " k", "=", "random", ".", "rand", "int", "(", "2", ",", " ", "4", "))", "))", ".", "upper", "()", "\n", "        ", "elif", " c", ".", "iss", "pace", "():", "\n", "            ", "result", " +=", " \"__", "_", "\"", "\n", "        ", "else", ":", "\n", "            ", "result", " +=", " \"__", "\"", "\n", "\n", "    ", "return", " result", "\n", "\n", "def"], "logprobs": [-1.5533252954483032, -0.23924091458320618, -1.316056728363037, -0.025300778448581696, -0.0020794689189642668, -0.042452555149793625, -0.0013050857232883573, -0.005491765681654215, -0.0004844683862756938, -0.005325535777956247, -0.0015822045970708132, -0.014654380269348621, -0.5126680731773376, -0.0009141556802205741, -3.3081023693084717, -0.040304433554410934, -1.6518597602844238, -0.031756866723299026, -0.16844919323921204, -0.34756436944007874, -0.18451036512851715, -1.7461247444152832, -0.0007084482349455357, -0.032495222985744476, -0.029691748321056366, -0.0025811234954744577, -0.007433847989886999, -0.11261850595474243, -0.10345298051834106, -1.583633542060852, -0.12640322744846344, -0.00022218143567442894, -0.7589046359062195, -0.01337637472897768, -0.024128716439008713, -1.822975516319275, -0.006464403588324785, -1.168244216387393e-05, -0.8445137143135071, -0.06738091260194778, -0.0004576589271891862, -0.08673752844333649, -0.006962916813790798, -0.004842695780098438, -0.055558234453201294, -0.029124666005373, -0.7898070812225342, -0.05344274640083313, -0.2437400072813034, -0.09236671775579453, -2.6940935640595853e-05, -0.012965543195605278, -0.0012512720422819257, -0.028482533991336823, -0.008622322231531143, -0.0006501944735646248, -0.18659326434135437, -0.0031225753482431173, -0.8631174564361572, -0.1482868790626526, -0.005725294817239046, -1.9720815420150757, -1.9138092994689941, -0.48344501852989197, -1.949383020401001, -0.656321108341217, -0.000763363263104111, -0.42049482464790344, -0.10538266599178314, -0.0001998939987970516, -0.8988415598869324, -0.00021526881027966738, -0.40684300661087036, -0.33594661951065063, -0.0001234931987710297, -0.15679094195365906, -1.4066597032069694e-05, -0.41772252321243286, -0.044240180402994156, -0.34390997886657715, -0.024432389065623283, -1.5854518413543701, -0.00024482590379193425, -0.02047731541097164, -0.08865159004926682, -0.0009288049186579883, -1.7225173711776733, -0.00024959311122074723, -0.05961141735315323, -0.9648366570472717, -0.06465066224336624, -0.007082357071340084, -1.3515141010284424, -0.6464411020278931, -0.0010550415609031916, -0.13144747912883759, -0.04394212365150452, -1.4658948183059692, -0.06126326695084572, -0.6451446413993835, -0.30581122636795044, -0.0004978132783435285, -0.08233388513326645, -0.016241734847426414, -0.0005254556890577078, -0.06732574850320816, -0.003167494898661971, -2.460792303085327, -0.10991967469453812, -0.0004223884898237884, -0.03898096829652786, -0.3155602514743805, -0.17891336977481842, -0.00011872540198964998, -0.03298543021082878, -0.000824349990580231, -0.12048632651567459, -0.002574821701273322, -2.662625551223755, -0.3406769037246704, -0.21381732821464539, -0.4686334431171417, -0.013654991053044796, -1.1087700128555298, -0.08534641563892365, -0.8651449084281921, -0.007873333990573883, -1.0083049535751343], "finish_reason": "stop"}], "metrics": {"energy": 138.05879830360416, "energy_per_token": 1.0785843617469075, "time": 5.261295, "time_per_token": 0.0411038671875}}
{"outputs": [{"text": "special_chars = string.punctuation.replace('_', '') + ' '  # Remove underscore character and space characters\n    special_chars = set(special_chars)  # Convert special_chars string into a set\n    re_pattern = f'[{re.escape(string.punctuation+\" \"+string.whitespace)}]'  # Regex pattern for special characters\n    special_chars = sorted(list(special_chars))  # Convert special_chars set into a list and sort it\n    re_pattern = '[' + re_pattern + ']'\n\n    # Regex function to replace special characters with underscores\n    def repl_func(match):\n        return '_' * len(match.group(0))\n\n    # Normalization function\n    def normalize_func(match):\n        return match.group(0).replace(' ', '_')\n\n    # Random casing function\n    def random_func(match):\n        if random.random() < 0.5:\n            return match.group(0).upper()\n        else:\n            return match.group(0).lower", "tokens": ["special", "_", "chars", " =", " string", ".", "punct", "uation", ".", "replace", "('", "_", "'", ",", " '", "')", " +", " '", " '", "  ", "#", " Remove", " unders", "core", " character", " and", " space", " characters", "\n", "    ", "special", "_", "chars", " =", " set", "(", "special", "_", "chars", ")", "  ", "#", " Convert", " special", "_", "chars", " string", " into", " a", " set", "\n", "    ", "re", "_", "pattern", " =", " f", "'", "[{", "re", ".", "escape", "(", "string", ".", "punct", "uation", "+", "\"", " \"", "+", "string", ".", "wh", "ites", "pace", ")}", "]", "'", "  ", "#", " Re", "gex", " pattern", " for", " special", " characters", "\n", "    ", "special", "_", "chars", " =", " sorted", "(", "list", "(", "special", "_", "chars", "))", "  ", "#", " Convert", " special", "_", "chars", " set", " into", " a", " list", " and", " sort", " it", "\n", "    ", "re", "_", "pattern", " =", " '", "['", " +", " re", "_", "pattern", " +", " '", "]", "'", "\n", "\n", "    ", "#", " Re", "gex", " function", " to", " replace", " special", " characters", " with", " undersc", "ores", "\n", "    ", "def", " repl", "_", "func", "(", "match", "):", "\n", "        ", "return", " '_", "'", " *", " len", "(", "match", ".", "group", "(", "0", "))", "\n", "\n", "    ", "#", " Normal", "ization", " function", "\n", "    ", "def", " normalize", "_", "func", "(", "match", "):", "\n", "        ", "return", " match", ".", "group", "(", "0", ")", ".", "replace", "('", " '", ",", " '_", "')", "\n", "\n", "    ", "#", " Random", " c", "asing", " function", "\n", "    ", "def", " random", "_", "func", "(", "match", "):", "\n", "        ", "if", " random", ".", "random", "()", " <", " ", "0", ".", "5", ":", "\n", "            ", "return", " match", ".", "group", "(", "0", ")", ".", "upper", "()", "\n", "        ", "else", ":", "\n", "            ", "return", " match", ".", "group", "(", "0", ")", ".", "lower"], "logprobs": [-2.270883083343506, -0.10224521160125732, -0.22019723057746887, -0.060610707849264145, -0.7741119861602783, -6.83045873302035e-05, -0.0014385362155735493, -6.97350042173639e-05, -2.4637088775634766, -0.054449573159217834, -0.623734176158905, -0.8872272372245789, -0.0011730464175343513, -0.000125281119835563, -0.03684846684336662, -0.09605530649423599, -2.4062345027923584, -0.9795147180557251, -0.589451253414154, -2.974416732788086, -0.0045732432045042515, -3.1770360469818115, -3.225264549255371, -0.006948237307369709, -3.4689781665802, -1.583543062210083, -2.1926722526550293, -3.349069356918335, -0.32338324189186096, -0.08609908819198608, -0.9276960492134094, -0.01999274082481861, -0.09157534688711166, -0.9292416572570801, -0.9410780668258667, -0.00831475481390953, -0.1433260291814804, -0.001209600013680756, -7.986990567587782e-06, -0.024487877264618874, -1.150348424911499, -2.8013790142722428e-05, -0.18971438705921173, -2.7714648246765137, -1.0599689483642578, -0.006646786350756884, -2.261359930038452, -1.528995394706726, -0.17497862875461578, -0.006960785947740078, -0.5704008340835571, -0.7842446565628052, -4.35589075088501, -1.0455721616744995, -0.8833823800086975, -0.013153803534805775, -3.02591609954834, -1.0690908432006836, -0.4512476921081543, -0.33094584941864014, -0.0003916450368706137, -0.0018117694417014718, -0.000248401309363544, -2.5746195316314697, -0.0002079985715681687, -0.042613640427589417, -9.297892393078655e-05, -3.2344970703125, -1.0774331092834473, -0.8274786472320557, -0.6835952401161194, -0.7291263341903687, -0.001178999780677259, -0.1417953222990036, -3.075552376685664e-05, -8.964136941358447e-05, -0.445509672164917, -0.09593585133552551, -0.05335414409637451, -0.3187892735004425, -0.00016556799528189003, -2.4078564643859863, -0.0043703047558665276, -0.02638079598546028, -0.2802189588546753, -0.19277368485927582, -0.07823779433965683, -0.23100508749485016, -0.15687298774719238, -1.933639407157898, -0.04202240705490112, -0.18813399970531464, -1.134185552597046, -3.1943061351776123, -0.0164486113935709, -1.1337882280349731, -0.0032396235037595034, -0.27797073125839233, -0.00022897482267580926, -3.2186455882765586e-06, -0.5232217311859131, -0.1691068410873413, -0.00015424491721205413, -1.047907829284668, -0.24341148138046265, -0.03580373898148537, -0.0035088418517261744, -0.5077518820762634, -0.2049010843038559, -0.030607959255576134, -0.3571631908416748, -0.3882393538951874, -0.00992541667073965, -0.2874642014503479, -0.14679072797298431, -0.5533604025840759, -2.380117654800415, -0.06124667450785637, -0.23105664551258087, -0.2276083081960678, -2.5756382942199707, -2.9659061431884766, -0.13891351222991943, -0.21830810606479645, -0.9154201149940491, -0.0001358893496217206, -0.323436975479126, -0.040286000818014145, -0.2016577422618866, -0.015226555056869984, -2.8333561420440674, -1.4221975803375244, -0.0011854295153170824, -1.697029948234558, -3.711980104446411, -0.23269519209861755, -3.171225070953369, -0.6814407110214233, -2.1818013191223145, -0.11723950505256653, -0.041688472032547, -0.3039941191673279, -1.4318739175796509, -0.0002225389762315899, -0.3340279161930084, -0.005001177545636892, -0.17761638760566711, -0.728949785232544, -1.4801530838012695, -0.33576446771621704, -0.025581320747733116, -0.14188314974308014, -0.7390615940093994, -0.0035062285605818033, -0.0019000587053596973, -0.3995904326438904, -0.19792971014976501, -0.0022261380217969418, -0.8539533615112305, -0.1910582184791565, -0.0009777533123269677, -0.07915113866329193, -0.02080930396914482, -0.003816465148702264, -0.15083914995193481, -0.029540488496422768, -0.01372624933719635, -0.056648656725883484, -0.061033494770526886, -0.0005330810672603548, -0.6749833226203918, -2.78523325920105, -2.9286856651306152, -0.3419041037559509, -1.7125999927520752, -0.0020078516099601984, -0.05664719268679619, -0.43778887391090393, -0.3404511511325836, -0.7889647483825684, -0.006808415986597538, -2.085832357406616, -0.04167817905545235, -0.0027838307432830334, -0.0005077026435174048, -0.26547569036483765, -0.9810993671417236, -0.019716236740350723, -0.004332916811108589, -0.04043644666671753, -0.09374397248029709, -0.006269311998039484, -0.019909657537937164, -0.16499751806259155, -0.10572248697280884, -0.18493184447288513, -0.0002012050390476361, -0.24036547541618347, -0.051905252039432526, -0.35847219824790955, -0.014038033783435822, -0.0003466005437076092, -0.1554604470729828, -0.5070081353187561, -1.266950249671936, -0.0003070359816774726, -0.03288542479276657, -0.05274186655879021, -0.000979539705440402, -0.02449357695877552, -0.14010114967823029, -0.07952388375997543, -1.9139835834503174, -0.009252880699932575, -0.03966188430786133, -0.022365476936101913, -0.0031677326187491417, -0.0013630633475258946, -0.46641406416893005, -0.11203592270612717, -0.002395024523139, -0.44350889325141907, -0.001677416730672121, -0.28700846433639526, -0.0008470999309793115, -0.055895574390888214, -1.1324817933200393e-05, -0.0025034775026142597, -0.016544295474886894, -0.49839237332344055, -0.0004895919119007885, -0.04128819331526756, -0.06198419630527496, -0.0015955348499119282, -0.0033160243183374405, -0.018691474571824074, -0.0108132129535079, -0.0066362470388412476, -0.034694939851760864, -0.08577189594507217, -0.00024029705673456192, -0.06945391744375229, -0.00396145461127162, -0.22590424120426178, -0.00010787858627736568, -0.005074241664260626, -0.00013255194062367082, -0.0035359261091798544, -0.0028234163764864206, -5.8410845667822286e-05, -0.00019071667338721454, -9.357491217087954e-05, -0.0002668739762157202, -0.00019298121333122253, -0.22026465833187103, -0.0019382515456527472], "finish_reason": "length"}], "metrics": {"energy": 295.2576679029465, "energy_per_token": 1.1533502652458847, "time": 11.153821, "time_per_token": 0.04356961328125}}
{"outputs": [{"text": "if seed is not None:\n        random.seed(seed)\n\n    # remove special characters and normalize whitespace\n    text = re.sub(r'[^\\w\\s]', ' ', text)\n    text = re.sub(r'\\s+', ' ', text)\n\n    # replace spaces with underscores\n    text = re.sub(r'\\s+', '_', text)\n\n    # randomize casing with 50% probability\n    result = ''\n    for char in text:\n        if random.random() > 0.5:\n            result += char.upper()\n        else:\n            result += char.lower()\n\n    return result", "tokens": ["if", " seed", " is", " not", " None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "#", " remove", " special", " characters", " and", " normalize", " whites", "pace", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " text", ")", "\n", "\n", "    ", "#", " replace", " spaces", " with", " undersc", "ores", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '_", "'", ",", " text", ")", "\n", "\n", "    ", "#", " random", "ize", " c", "asing", " with", " ", "5", "0", "%", " probability", "\n", "    ", "result", " =", " ''", "\n", "    ", "for", " char", " in", " text", ":", "\n", "        ", "if", " random", ".", "random", "()", " >", " ", "0", ".", "5", ":", "\n", "            ", "result", " +=", " char", ".", "upper", "()", "\n", "        ", "else", ":", "\n", "            ", "result", " +=", " char", ".", "lower", "()", "\n", "\n", "    ", "return", " result", "\n", "\n", "if"], "logprobs": [-1.5533252954483032, -0.23924091458320618, -0.3202337920665741, -0.0749279335141182, -5.221230458118953e-05, -0.013791623525321484, -0.011701400391757488, -0.0019437245791777968, -0.033286888152360916, -0.001546973828226328, -0.00688466290012002, -0.0002814135223161429, -0.004104167688637972, -0.0013243722496554255, -0.009806198067963123, -0.5299587249755859, -0.0009059377480298281, -0.9755306839942932, -2.5771584510803223, -0.22215305268764496, -0.023690031841397285, -1.7758593559265137, -1.6351364850997925, -0.08687272667884827, -0.023320334032177925, -0.09750492870807648, -0.0012007892364636064, -0.27109295129776, -0.034224119037389755, -0.4487854242324829, -4.5060096454108134e-05, -0.014685041271150112, -0.0783083438873291, -0.02768450789153576, -0.36984458565711975, -0.1782485693693161, -0.35518741607666016, -0.02481190860271454, -0.04452914372086525, -0.003067908575758338, -0.2366287261247635, -0.09701906889677048, -7.30726242181845e-05, -1.5800658464431763, -0.026301955804228783, -0.00011336160969221964, -0.005569298751652241, -0.09754915535449982, -0.24689573049545288, -0.041152749210596085, -0.03165523707866669, -0.0052004302851855755, -0.4122362732887268, -0.000819466426037252, -0.00025388356880284846, -0.029747292399406433, -0.00041738382424227893, -0.007143906317651272, -0.0013238961109891534, -0.021017922088503838, -1.597391747054644e-05, -0.1300044059753418, -0.14029572904109955, -0.0005611990345641971, -0.0022239969111979008, -0.028761373832821846, -0.025267653167247772, -0.10908136516809464, -0.000176652567461133, -0.01574642024934292, -2.727707624435425, -0.31724634766578674, -0.2386278361082077, -0.9468785524368286, -0.00024530262453481555, -0.23964530229568481, -0.0003108495147898793, -0.01848389208316803, -0.0053344289772212505, -1.573731780052185, -0.0011399445356801152, -0.00039939055568538606, -0.02014615200459957, -0.00038509105797857046, -0.028070559725165367, -0.0033083013258874416, -0.6641790866851807, -1.4185804502631072e-05, -0.4391261339187622, -0.0008083889842964709, -0.010381034575402737, -0.0005514293443411589, -0.007669644895941019, -0.0036284581292420626, -0.07227080315351486, -0.00032395837479270995, -0.012753237038850784, -0.2777000367641449, -0.006956050638109446, -0.14923129975795746, -0.00035720644518733025, -2.5748417377471924, -0.8924967050552368, -0.014666832983493805, -7.748303323751315e-05, -0.010166763328015804, -0.22621576488018036, -0.048146069049835205, -0.0004764852055814117, -2.9236414432525635, -0.01028735563158989, -0.5784362554550171, -0.1677694469690323, -0.007849324494600296, -0.007294331677258015, -0.27840253710746765, -0.0006631797295995057, -0.005418851040303707, -0.017202220857143402, -0.0004323977918829769, -0.0006245807744562626, -0.10930495709180832, -0.09957011044025421, -0.00014435203047469258, -0.27888989448547363, -0.0010170531459152699, -2.176823616027832, -0.000321336614433676, -0.02673601545393467, -5.8412379075889476e-06, -0.0011014830088242888, -0.059281282126903534, -0.018440475687384605, -0.00028308198670856655, -1.9409390687942505, -0.0019025574438273907, -0.06871097534894943, -0.00849845539778471, -0.031026633456349373, -3.8980677345534787e-05, -0.022524353116750717, -0.0008449559682048857, -0.0013623490231111646, -3.266281055402942e-05, -0.001650877296924591, -9.953480184776708e-05, -0.001262463629245758, -5.519237674889155e-05, -0.0004363300104159862, -0.20544588565826416, -0.00011252723925281316, -3.433168603805825e-05, -0.00023135847004596144, -0.2813759744167328, -0.00039176418795250356, -0.014813076704740524, -0.005558629520237446, -0.28909212350845337, -0.0069160363636910915, -1.317929744720459], "finish_reason": "stop"}], "metrics": {"energy": 149.1451936721801, "energy_per_token": 0.9321574604511257, "time": 6.730803, "time_per_token": 0.04206751875}}
{"outputs": [{"text": "# 1. Remove special characters by replacing them with string.whitespace.\n    # 2. Normalize whitespace by replacing consecutive whitespace with a single whitespace.\n    # 3. Replace special characters by string.whitespace.\n    # 4. Remove any consecutive whitespaces from the text.\n    # 5. Convert the text to lowercase, capitalize a random number of characters, and shuffle the characters randomly.\n    # 6. Return the preprocessed text.\n\n    punctuation_pattern = re.compile(r'[^a-zA-Z\\s]')\n    normalize_whitespace_pattern = re.compile(r'\\s{2,}')\n\n    punctuation_text = punctuation_pattern.sub(' ', text)\n    normalize_whitespace_text = normalize_whitespace_pattern.sub(' ', punctuation_text)\n    special_text = string.punctuation.replace(' ', '').replace('\\n', '').replace('\\t', '')\n    special_text = special_text.replace(' ', '_')\n\n", "tokens": ["#", " ", "1", ".", " Remove", " special", " characters", " by", " replacing", " them", " with", " string", ".", "wh", "ites", "pace", ".", "\n", "    ", "#", " ", "2", ".", " Normal", "ize", " whites", "pace", " by", " replacing", " consecutive", " whites", "pace", " with", " a", " single", " whites", "pace", ".", "\n", "    ", "#", " ", "3", ".", " Replace", " special", " characters", " by", " string", ".", "wh", "ites", "pace", ".", "\n", "    ", "#", " ", "4", ".", " Remove", " any", " consecutive", " whites", "paces", " from", " the", " text", ".", "\n", "    ", "#", " ", "5", ".", " Convert", " the", " text", " to", " lower", "case", ",", " capitalize", " a", " random", " number", " of", " characters", ",", " and", " shuffle", " the", " characters", " randomly", ".", "\n", "    ", "#", " ", "6", ".", " Return", " the", " pre", "processed", " text", ".", "\n", "\n", "    ", "punct", "uation", "_", "pattern", " =", " re", ".", "compile", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "\\", "s", "]", "')", "\n", "    ", "normal", "ize", "_", "wh", "ites", "pace", "_", "pattern", " =", " re", ".", "compile", "(", "r", "'\\", "s", "{", "2", ",", "}", "')", "\n", "\n", "    ", "punct", "uation", "_", "text", " =", " punct", "uation", "_", "pattern", ".", "sub", "('", " '", ",", " text", ")", "\n", "    ", "normal", "ize", "_", "wh", "ites", "pace", "_", "text", " =", " normalize", "_", "wh", "ites", "pace", "_", "pattern", ".", "sub", "('", " '", ",", " punct", "uation", "_", "text", ")", "\n", "    ", "special", "_", "text", " =", " string", ".", "punct", "uation", ".", "replace", "('", " '", ",", " '", "')", ".", "replace", "('", "\\", "n", "'", ",", " '", "')", ".", "replace", "('", "\\", "t", "'", ",", " '", "')", "\n", "    ", "special", "_", "text", " =", " special", "_", "text", ".", "replace", "('", " '", ",", " '_", "')", "\n", "\n"], "logprobs": [-1.2803798913955688, -3.8407464027404785, -0.6541461944580078, -0.4425627589225769, -1.6192575693130493, -0.18394054472446442, -0.013462002389132977, -3.3465185165405273, -0.6921872496604919, -0.0422937273979187, -0.002844575559720397, -2.051799774169922, -2.2030727863311768, -2.7684993743896484, -0.0007798014557920396, -0.01820814050734043, -2.0733590126037598, -0.2798577845096588, -0.011144179850816727, -1.4469904899597168, -0.5985039472579956, -0.14498114585876465, -0.0037201500963419676, -0.6369432806968689, -0.009232447482645512, -0.11101313680410385, -0.04785701259970665, -0.5517919659614563, -0.10436421632766724, -3.086251735687256, -0.32797756791114807, -0.23714374005794525, -0.6535196900367737, -0.8487860560417175, -0.0464145801961422, -1.4326757192611694, -0.00028153270250186324, -0.20012453198432922, -0.004125774838030338, -0.0030467540491372347, -0.019537273794412613, -0.02463478595018387, -0.0047358013689517975, -0.0010713557712733746, -1.215467095375061, -2.889716625213623, -0.143929585814476, -1.9055718183517456, -1.180172324180603, -0.010835855267941952, -0.5089686512947083, -0.0004027270770166069, -0.0017546509625390172, -0.28496140241622925, -0.03799011558294296, -0.018424207344651222, -0.11662057042121887, -0.030430473387241364, -0.008319838903844357, -0.0024023978039622307, -3.449880838394165, -3.5202136039733887, -2.5388970375061035, -0.3701009452342987, -1.1200958490371704, -3.1220133304595947, -0.24855493009090424, -1.4438955783843994, -0.17014695703983307, -0.014012877829372883, -0.0705254077911377, -0.2894717752933502, -0.03743024915456772, -0.005890984088182449, -0.0018467529444023967, -1.2125563621520996, -0.9197145700454712, -0.10049641877412796, -0.05629860982298851, -1.557607650756836, -0.06183236464858055, -3.263603448867798, -4.009407997131348, -3.6060664653778076, -0.5920068621635437, -0.8741204142570496, -0.01482517458498478, -0.3872797191143036, -1.1180089712142944, -0.4813973307609558, -1.7512472867965698, -0.19060374796390533, -0.5840204954147339, -2.4371883869171143, -0.0919634997844696, -0.0037380836438387632, -0.19980233907699585, -0.5236946940422058, -0.2992221713066101, -0.010980538092553616, -0.0027954806573688984, -1.15288245677948, -0.023507587611675262, -0.9126467108726501, -0.01353539153933525, -0.06761502474546432, -0.14820650219917297, -0.003453008132055402, -0.8505799174308777, -0.006273576524108648, -3.6371755599975586, -0.9344925880432129, -1.0162767171859741, -2.985656976699829, -0.007341549266129732, -0.18665321171283722, -3.45700973412022e-05, -0.022524002939462662, -0.29626089334487915, -0.08081965148448944, -0.45264190435409546, -0.5233456492424011, -1.7147624492645264, -0.2178800255060196, -9.953480184776708e-05, -9.393251093570143e-05, -0.5525685548782349, -2.3603161025675945e-05, -0.0005379660287871957, -1.569599986076355, -0.12377089262008667, -0.2591090202331543, -0.04469684883952141, -0.06712356209754944, -0.1135173812508583, -2.642411470413208, -0.37685275077819824, -0.005402844399213791, -1.2437660694122314, -0.0007207180024124682, -0.015447844751179218, -0.08953247964382172, -0.015646904706954956, -0.001508289948105812, -0.005043759476393461, -0.0006803343421779573, -0.00038747431244701147, -0.029875265434384346, -0.0014848408754915, -0.03307400643825531, -0.003653876017779112, -0.8883313536643982, -0.012600923888385296, -0.0031634545885026455, -0.23580867052078247, -0.0008780676289461553, -0.0032624374143779278, -1.5699235200881958, -0.0006787856691516936, -3.8875112533569336, -0.3223917484283447, -0.09392218291759491, -3.4112024307250977, -0.01869463361799717, -0.3392523229122162, -7.986990567587782e-06, -0.00010525626566959545, -0.00043335105874575675, -0.00016020445036701858, -0.00486060930415988, -0.7418625950813293, -0.316872775554657, -0.0012248402927070856, -0.015000049956142902, -0.07394805550575256, -0.0654970034956932, -0.02002534084022045, -0.25052618980407715, -0.010711554437875748, -0.0006952252588234842, -0.020429546013474464, -0.0001394651480950415, -0.0013423488708212972, -0.06027517840266228, -0.02295422926545143, -0.001116844010539353, -0.019478237256407738, -0.00011062010162277147, -1.0609570381348021e-05, -3.3378044463461265e-05, -0.00010990492592100054, -6.711257447022945e-05, -1.549708758830093e-05, -0.00011181206355104223, -0.0003367095487192273, -0.06644124537706375, -0.011358831077814102, -0.001259606215171516, -0.016910996288061142, -7.986703712958843e-05, -1.537788011773955e-05, -0.0018490137299522758, -0.02031145617365837, -0.004085884429514408, -0.6659963726997375, -1.3528865575790405, -0.007154322229325771, -1.9741556644439697, -0.0034335250966250896, -1.5783246755599976, -0.0008394769974984229, -0.07468822598457336, -0.0001070442158379592, -0.48122596740722656, -0.13081689178943634, -0.10660111904144287, -0.4615197777748108, -0.00015639036428183317, -0.21646571159362793, -0.20311513543128967, -1.7382497787475586, -0.06181734800338745, -0.10917157679796219, -0.6863560676574707, -0.328840434551239, -0.0023124876897782087, -0.0005068686441518366, -0.08090530335903168, -0.6109721064567566, -0.2549843192100525, -0.0036201435141265392, -0.006660167593508959, -0.008412874303758144, -0.08787867426872253, -0.00013350549852475524, -0.00012599628826137632, -0.010611890815198421, -0.008521740324795246, -0.18705174326896667, -0.174551323056221, -1.5981401205062866, -0.0077266632579267025, -0.30172640085220337, -0.2070486843585968, -1.7199221849441528, -0.002699899487197399, -0.0049789962358772755, -0.03730059787631035, -0.046557504683732986, -0.05891720950603485, -1.5629808902740479, -0.004636727273464203, -2.098688840866089, -0.03728107362985611, -0.7898951172828674, -0.9999556541442871], "finish_reason": "length"}], "metrics": {"energy": 256.52945707321186, "energy_per_token": 1.0020681916922338, "time": 11.1426325, "time_per_token": 0.043525908203125}}
{"outputs": [{"text": "if seed is not None:\n        random.seed(seed)\n\n    # Remove special characters and replace whitespace with underscores\n    text = re.sub(r'[^\\w\\s]', '', text)\n    text = text.replace(' ', '_').replace('\\t', '__').replace('\\n', '___')\n\n    # Randomize casing with a 50% probability\n    for char in text:\n        if random.random() < 0.5:\n            char = char.upper()\n        text = text.replace(char, char.lower())\n\n    return text", "tokens": ["if", " seed", " is", " not", " None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "#", " Remove", " special", " characters", " and", " replace", " whites", "pace", " with", " undersc", "ores", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "    ", "text", " =", " text", ".", "replace", "('", " '", ",", " '_", "')", ".", "replace", "('", "\\", "t", "'", ",", " '", "__", "')", ".", "replace", "('", "\\", "n", "'", ",", " '", "___", "')", "\n", "\n", "    ", "#", " Random", "ize", " c", "asing", " with", " a", " ", "5", "0", "%", " probability", "\n", "    ", "for", " char", " in", " text", ":", "\n", "        ", "if", " random", ".", "random", "()", " <", " ", "0", ".", "5", ":", "\n", "            ", "char", " =", " char", ".", "upper", "()", "\n", "        ", "text", " =", " text", ".", "replace", "(", "char", ",", " char", ".", "lower", "())", "\n", "\n", "    ", "return", " text", "\n", "\n", "if"], "logprobs": [-1.5533252954483032, -0.23924091458320618, -0.3202337920665741, -0.0749279335141182, -5.221230458118953e-05, -0.013791623525321484, -0.011701400391757488, -0.0019437245791777968, -0.033286888152360916, -0.001546973828226328, -0.00688466290012002, -0.0002814135223161429, -0.004104167688637972, -0.0013243722496554255, -0.009806198067963123, -0.5299587249755859, -0.0009059377480298281, -0.9755306839942932, -1.1583343744277954, -0.2008962631225586, -0.007807926274836063, -1.2509372234344482, -2.083918571472168, -1.214287281036377, -0.07281693816184998, -0.3094841241836548, -0.8781435489654541, -0.00021836756786797196, -0.1047319769859314, -0.000742398202419281, -0.21929867565631866, -0.03288819268345833, -0.3742449879646301, -3.421248038648628e-05, -0.008729629218578339, -0.07319615036249161, -0.01851104199886322, -0.2850759029388428, -0.1586247682571411, -0.49439650774002075, -0.014487551525235176, -0.06817829608917236, -0.006292412057518959, -0.22107794880867004, -0.1290985494852066, -7.795983401592821e-05, -0.28484800457954407, -6.401333666872233e-05, -0.0057333544827997684, -0.08286774903535843, -0.3677420914173126, -0.015500077977776527, -0.021735087037086487, -0.005150146316736937, -0.8711078763008118, -0.0002669931564014405, -0.14693832397460938, -0.06815769523382187, -0.3534688949584961, -0.0002044230350293219, -0.3713568150997162, -0.026945024728775024, -1.3362102508544922, -0.018293356522917747, -0.022598478943109512, -0.02474759891629219, -0.3169378936290741, -0.0005726366653107107, -0.0004278697888366878, -0.16026635468006134, -0.13651353120803833, -0.00046433156239800155, -0.0037474660202860832, -0.0005520250415429473, -0.0005284343496896327, -0.0011703077470883727, -0.004428935702890158, -0.00020632999076042324, -0.0002649671514518559, -0.001167807262390852, -0.0027051304932683706, -0.00032205163734033704, -0.0177327711135149, -0.02823583409190178, -0.00017426878912374377, -0.013641584664583206, -0.45230191946029663, -0.38818153738975525, -0.31066909432411194, -0.0001851148990681395, -1.7954057455062866, -0.43546396493911743, -0.027311760932207108, -0.0056052180007100105, -0.00010895135346800089, -0.014930056408047676, -0.5123530030250549, -0.12396267801523209, -0.0005184260080568492, -1.3776586055755615, -2.56269907951355, -0.016531866043806076, -0.10455825924873352, -0.010170775465667248, -0.0012771077454090118, -0.0013965149410068989, -0.02509700506925583, -0.09920335561037064, -0.00016604475968051702, -0.31407320499420166, -0.0011886443244293332, -0.12749981880187988, -0.0006967739318497479, -0.01846177503466606, -2.622600959512056e-06, -0.0014915067004039884, -0.12902729213237762, -0.025768382474780083, -0.0004142856632824987, -0.37518346309661865, -0.005092625040560961, -0.013245802372694016, -0.00013398226292338222, -0.024791672825813293, -0.00016151554882526398, -0.039550282061100006, -0.9442272186279297, -1.1976346969604492, -0.0026442583184689283, -0.05993818864226341, -0.0037137367762625217, -0.0006080209277570248, -0.00033825874561443925, -0.0013775869738310575, -0.0005962263094261289, -0.30283695459365845, -0.22362475097179413, -0.6720657348632812, -0.0036734736058861017, -0.004849695134907961, -0.04061388224363327, -0.0009205871028825641, -0.025451751425862312, -0.004422764293849468, -0.4814191460609436, -0.008099921979010105, -1.1526397466659546], "finish_reason": "stop"}], "metrics": {"energy": 173.7816610527038, "energy_per_token": 1.1821881704265564, "time": 6.1024404, "time_per_token": 0.0415132}}
{"outputs": [{"text": "random.seed(seed)\n    special_chars = string.punctuation\n    text = text.translate(str.maketrans(special_chars, ' '*len(special_chars)))\n    text = re.sub('\\s+', '_', text)\n    for char in text:\n        if random.random() < 0.5:\n            char = char.upper()\n        text = text.replace(char, char.upper())\n    return text", "tokens": ["random", ".", "seed", "(", "seed", ")", "\n", "    ", "special", "_", "chars", " =", " string", ".", "punct", "uation", "\n", "    ", "text", " =", " text", ".", "translate", "(", "str", ".", "mak", "et", "rans", "(", "special", "_", "chars", ",", " '", " '", "*", "len", "(", "special", "_", "chars", ")))", "\n", "    ", "text", " =", " re", ".", "sub", "('", "\\", "s", "+'", ",", " '_", "'", ",", " text", ")", "\n", "    ", "for", " char", " in", " text", ":", "\n", "        ", "if", " random", ".", "random", "()", " <", " ", "0", ".", "5", ":", "\n", "            ", "char", " =", " char", ".", "upper", "()", "\n", "        ", "text", " =", " text", ".", "replace", "(", "char", ",", " char", ".", "upper", "())", "\n", "    ", "return", " text", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.009805202484131, -0.02008902095258236, -0.014897407032549381, -0.000957030919380486, -0.0086671132594347, -0.006972505711019039, -0.10529844462871552, -0.425179660320282, -1.8348363637924194, -0.10596495121717453, -0.2231677770614624, -0.06993211805820465, -0.84733647108078, -5.066266385256313e-05, -0.0018991068936884403, -8.308542601298541e-05, -0.7819136381149292, -0.07425479590892792, -2.373281478881836, -0.11868342757225037, -0.6853795051574707, -0.004642304033041, -1.2427449226379395, -0.21969245374202728, -0.015222328715026379, -7.319182623177767e-05, -1.7165990357170813e-05, -0.0001282609737245366, -0.003455859376117587, -0.9536975622177124, -1.1719398498535156, -0.014474274590611458, -2.50339189733495e-06, -0.03163444995880127, -1.773184061050415, -0.49060481786727905, -1.1441469192504883, -0.014356419444084167, -0.00017152745567727834, -0.008126291446387768, -0.0011532806092873216, -1.5497195136049413e-06, -0.03138378635048866, -0.15426917374134064, -0.043121062219142914, -0.15566706657409668, -0.012657426297664642, -0.7192367315292358, -3.6238969187252223e-05, -0.013642878271639347, -0.9300056099891663, -0.5366625189781189, -0.03432295471429825, -0.07826380431652069, -0.0003493413969408721, -0.9411376118659973, -0.0011176775442436337, -0.005773179233074188, -0.02741847187280655, -0.04725147783756256, -0.10707806050777435, -0.11135798692703247, -2.481940269470215, -1.5947140455245972, -0.011419057846069336, -0.1048889234662056, -0.03389482945203781, -0.0031996979378163815, -0.007531226146966219, -0.11422363668680191, -0.05897565186023712, -0.0002656822034623474, -0.5530340671539307, -0.006556902080774307, -0.17560839653015137, -0.002095528645440936, -0.04046666994690895, -1.883488948806189e-05, -0.001830451306886971, -0.035933930426836014, -0.03083037957549095, -0.0019085064996033907, -1.0587835311889648, -0.01638270728290081, -0.02131553925573826, -0.00038985759601928294, -0.03146488219499588, -0.000316212244797498, -0.009846804663538933, -0.7926117777824402, -0.2823348045349121, -0.004681104328483343, -0.07764618843793869, -0.004643371794372797, -0.005347590893507004, -0.0011998366098850965, -0.001647425931878388, -0.0021918814163655043, -0.49086496233940125, -0.20228241384029388, -1.1383469104766846, -0.03363274782896042, -0.0068692718632519245, -0.11277474462985992, -0.02563953399658203, -0.007260958198457956, -1.5330495834350586, -4.529942543740617e-06, -1.311301275563892e-06, -9.512448741588742e-05, -3.9934315282152966e-05, -0.12294411659240723], "finish_reason": "stop"}], "metrics": {"energy": 101.16994836330416, "energy_per_token": 0.9033031103866442, "time": 4.620192, "time_per_token": 0.04125171428571429}}
{"outputs": [{"text": "if seed is not None:\n        random.seed(seed)\n    result = \"\"\n    for char in text:\n        if char in string.punctuation:\n            result += \"_\"\n        elif char == \" \":\n            result += \"__\"\n        elif char == \"\\n\":\n            result += \"___\"\n        elif random.random() < 0.5:\n            char = char.upper()\n        result += char\n    return result", "tokens": ["if", " seed", " is", " not", " None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "result", " =", " \"", "\"", "\n", "    ", "for", " char", " in", " text", ":", "\n", "        ", "if", " char", " in", " string", ".", "punct", "uation", ":", "\n", "            ", "result", " +=", " \"", "_", "\"", "\n", "        ", "elif", " char", " ==", " \"", " ", "\":", "\n", "            ", "result", " +=", " \"__", "\"", "\n", "        ", "elif", " char", " ==", " \"", "\\", "n", "\":", "\n", "            ", "result", " +=", " \"", "___", "\"", "\n", "        ", "elif", " random", ".", "random", "()", " <", " ", "0", ".", "5", ":", "\n", "            ", "char", " =", " char", ".", "upper", "()", "\n", "        ", "result", " +=", " char", "\n", "    ", "return", " result", "\n", "\n", "if"], "logprobs": [-1.5533252954483032, -0.23924091458320618, -0.3202337920665741, -0.0749279335141182, -5.221230458118953e-05, -0.013791623525321484, -0.011701400391757488, -0.0019437245791777968, -0.033286888152360916, -0.001546973828226328, -0.00688466290012002, -0.0002814135223161429, -0.004104167688637972, -0.0013243722496554255, -0.009806198067963123, -0.9585247039794922, -3.417349338531494, -0.032926373183727264, -1.7006394863128662, -0.028767628595232964, -0.12623387575149536, -0.12285956740379333, -0.264201283454895, -0.5076069235801697, -0.001698243198916316, -0.029897017404437065, -0.039122551679611206, -0.003980571404099464, -0.0036406919825822115, -0.08135157823562622, -0.1142505407333374, -0.4563692510128021, -0.053593143820762634, -2.884823152271565e-05, -0.08679447323083878, -0.0006375664379447699, -0.23395468294620514, -0.02082016132771969, -0.000582525331992656, -0.18687009811401367, -0.013495052233338356, -1.1661043167114258, -0.1958754062652588, -0.004337427206337452, -0.3607487082481384, -0.013234156183898449, -0.13583336770534515, -0.03885243460536003, -1.2123868465423584, -0.08521188050508499, -0.11295279115438461, -4.410646579344757e-05, -0.0043464479967951775, -0.000256982195423916, -0.02905704453587532, -0.0009972843108698726, -0.9372924566268921, -0.893524169921875, -0.028055375441908836, -0.0007015389273874462, -0.056286778301000595, -0.02891356311738491, -0.1477930098772049, -0.007970551028847694, -0.0017573880031704903, -0.28879380226135254, -0.2531285583972931, -0.004602434579282999, -0.00018487652414478362, -0.002057936741039157, -0.0003651905863080174, -0.4260375201702118, -0.01017136499285698, -0.0006118332967162132, -0.0012622254434973001, -0.002958684926852584, -0.39831605553627014, -0.7473503947257996, -0.0002212279650848359, -0.2471645474433899, -0.004027352202683687, -0.11190983653068542, -0.000886285852175206, -0.02724969945847988, -3.814689989667386e-06, -0.002196639310568571, -0.04210607334971428, -0.06524307280778885, -0.0004967409186065197, -1.9047845602035522, -0.01076002698391676, -0.012213679030537605, -0.00048720886115916073, -0.03487938269972801, -0.00017998983094003052, -0.08694136142730713, -0.016400298103690147, -0.012174109928309917, -0.004217421170324087, -0.001022769371047616, -0.004973895847797394, -0.04769711196422577, -0.006292056757956743, -0.006272273603826761, -0.44474148750305176, -0.009812099859118462, -1.3042991161346436], "finish_reason": "stop"}], "metrics": {"energy": 114.03845862960813, "energy_per_token": 1.0657799871925993, "time": 4.4323974, "time_per_token": 0.04142427476635514}}
{"outputs": [{"text": "punctuation = set(string.punctuation)\n\n    # Replace whitespace with underscore\n    text = text.replace(' ', '_').replace('\\t', '__').replace('\\n', '___')\n\n    # Normalize whitespace\n    text = re.sub(r'\\s+', ' ', text)\n\n    # Replace special characters\n    text = ''.join(\n        c if c not in punctuation else random.choice(['', random.choice(list(string.ascii_letters))])\n        for c in text)\n\n    # Randomize casing\n    for i in range(5):\n        text = ''.join(\n            random.choice([char.upper(), char.lower(), random.choice(list(string.ascii_letters))])\n            if random.random() < 0.5 else char\n            for char in text\n        )\n\n    return text", "tokens": ["punct", "uation", " =", " set", "(", "string", ".", "punct", "uation", ")", "\n", "\n", "    ", "#", " Replace", " whites", "pace", " with", " unders", "core", "\n", "    ", "text", " =", " text", ".", "replace", "('", " '", ",", " '_", "')", ".", "replace", "('", "\\", "t", "'", ",", " '", "__", "')", ".", "replace", "('", "\\", "n", "'", ",", " '", "___", "')", "\n", "\n", "    ", "#", " Normal", "ize", " whites", "pace", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " text", ")", "\n", "\n", "    ", "#", " Replace", " special", " characters", "\n", "    ", "text", " =", " ''", ".", "join", "(", "\n", "        ", "c", " if", " c", " not", " in", " punct", "uation", " else", " random", ".", "choice", "([", "''", ",", " random", ".", "choice", "(", "list", "(", "string", ".", "ascii", "_", "letters", "))", "])", "\n", "        ", "for", " c", " in", " text", ")", "\n", "\n", "    ", "#", " Random", "ize", " c", "asing", "\n", "    ", "for", " i", " in", " range", "(", "5", "):", "\n", "        ", "text", " =", " ''", ".", "join", "(", "\n", "            ", "random", ".", "choice", "([", "char", ".", "upper", "()", ",", " char", ".", "lower", "()", ",", " random", ".", "choice", "(", "list", "(", "string", ".", "ascii", "_", "letters", "))", "])", "\n", "            ", "if", " random", ".", "random", "()", " <", " ", "0", ".", "5", " else", " char", "\n", "            ", "for", " char", " in", " text", "\n", "        ", ")", "\n", "\n", "    ", "return", " text", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.873544216156006, -0.9666279554367065, -0.39964327216148376, -1.6182760000228882, -0.01231812871992588, -0.039075322449207306, -4.1483970562694594e-05, -0.00047338721924461424, -3.504691630951129e-05, -0.028562823310494423, -0.09322761744260788, -1.9142752885818481, -0.0007317964336834848, -1.2786333560943604, -3.1246795654296875, -2.9404361248016357, -0.1295040398836136, -0.3902725279331207, -2.2380082607269287, -0.0077140056528151035, -0.4554959833621979, -0.0005439232336357236, -0.1365189403295517, -0.03373728692531586, -0.7075879573822021, -0.0005161621957086027, -0.058606743812561035, -0.3582986891269684, -0.07890957593917847, -9.297892393078655e-05, -0.28811848163604736, -0.013058735989034176, -1.0474042892456055, -0.004290305078029633, -0.018595529720187187, -0.016725903376936913, -0.43007972836494446, -0.0003408804477658123, -0.0016356435371562839, -0.23617246747016907, -0.11889207363128662, -0.0007160721579566598, -0.005723872222006321, -0.0007247682078741491, -0.0015603045467287302, -0.0009940688032656908, -0.006858024746179581, -0.0002113357331836596, -0.00033790123416110873, -0.0015216212486848235, -0.002410722430795431, -0.0006735440110787749, -0.02596365660429001, -0.03919568657875061, -0.0002798642381094396, -0.03202302008867264, -2.3870749473571777, -0.011952448636293411, -0.9003128409385681, -0.014720398932695389, -0.560243546962738, -0.0004287039046175778, -0.052940987050533295, -0.004265971481800079, -0.38639670610427856, -1.847726889536716e-05, -0.004834391642361879, -0.2409214824438095, -0.007545541971921921, -0.03025989606976509, -0.0031154451426118612, -0.05245820805430412, -3.814624506048858e-05, -0.22595074772834778, -0.008604003116488457, -0.0002321927313460037, -0.0012856797548010945, -0.01723245158791542, -0.3645504415035248, -0.032282754778862, -0.00029202012228779495, -0.036974500864744186, -2.3809194564819336, -0.7069291472434998, -0.014272278174757957, -2.3639843463897705, -0.0005308172549121082, -0.46205979585647583, -0.004586177412420511, -0.17499884963035583, -1.2636104656849056e-05, -5.686121585313231e-05, -0.09804815798997879, -2.5229666233062744, -0.008815892040729523, -0.791543185710907, -0.10040930658578873, -0.01551404595375061, -0.25779762864112854, -4.6491513785440475e-06, -0.023840781301259995, -1.2993727978027891e-05, -0.04484720155596733, -0.7347837686538696, -0.00036554806865751743, -0.022562582045793533, -2.0743703842163086, -2.5128109455108643, -0.08834552764892578, -2.8080828189849854, -0.0008169650682248175, -0.06376031786203384, -0.3015037775039673, -2.782784938812256, -0.023263731971383095, -0.15797565877437592, -0.00010096516780322418, -0.14294926822185516, -7.986990567587782e-06, -0.5855658650398254, -0.12485489994287491, -0.03941379860043526, -0.2219093143939972, -0.0032045699190348387, -0.007270781323313713, -0.0011180347064509988, -0.0003209791029803455, -0.008472096174955368, -1.736504077911377, -0.0184643492102623, -0.03230976313352585, -0.00082923355512321, -0.03557862713932991, -0.26626795530319214, -0.1514185220003128, -0.13516950607299805, -0.00020692592079285532, -0.20583350956439972, -0.0008665143977850676, -1.660617470741272, -0.598434567451477, -0.27028095722198486, -0.031128210946917534, -0.0009863278828561306, -3.130533218383789, -0.38105010986328125, -0.03719217702746391, -0.003080743597820401, -0.8736347556114197, -0.008110800758004189, -0.3324461877346039, -0.00013207517622504383, -0.0006853376980870962, -0.0730147585272789, -1.0247986316680908, -0.007414205931127071, -0.2903772294521332, -0.00011062010162277147, -0.008382258005440235, -0.08391643315553665, -2.218783378601074, -0.019522778689861298, -0.051559656858444214, -0.016341425478458405, -0.16634820401668549, -0.0299170333892107, -0.2400069534778595, -0.002308325143530965, -0.00018714107864070684, -0.19034084677696228, -0.7138863205909729, -8.415821503149346e-05, -0.0034887660294771194, -0.5226793885231018, -0.11114712059497833, -0.0007176207727752626, -0.015284083783626556, -5.9126061387360096e-05, -0.014983373694121838, -0.002732474124059081, -0.044213034212589264, -0.0067043364979326725, -0.017718834802508354, -0.043379414826631546, -0.008221118710935116, -0.21072815358638763, -0.05711444467306137, -0.00017677174764685333, -0.4079640209674835, -0.0010674261720851064, -0.13392262160778046, -0.003187933936715126, -0.07973315566778183, -1.5497195136049413e-06, -0.0054781315848231316, -0.21080434322357178, -0.017796127125620842, -0.30405762791633606, -0.00463874451816082, -0.0014316319720819592, -0.014061307534575462, -0.00033778208307921886, -0.0016719423001632094, -1.210059404373169, -0.026036133989691734, -0.0001248043408850208, -0.001408419106155634, -0.07763394713401794, -0.001141968765296042, -0.021699508652091026, -0.007654502522200346, -1.2268534898757935, -4.768360213347478e-06, -1.6689286894688848e-06, -0.00020013237372040749, -0.0001230164198204875, -0.08607809245586395], "finish_reason": "stop"}], "metrics": {"energy": 216.5885697021484, "energy_per_token": 0.9981040078440018, "time": 9.460291, "time_per_token": 0.043595811059907834}}
{"outputs": [{"text": "special_chars = string.punctuation\n    special_chars += \"\\t\\n \"  # special characters to be considered as spaces\n    special_chars = re.escape(special_chars)\n    regex = f\"[{special_chars}]\"\n    text = re.sub(regex, \"_\", text)\n    text = text.lower()\n\n    if not seed:\n        return text\n\n    random.seed(seed)\n    for i in range(len(text)):\n        if random.randint(0, 100) < 50:  # 50% chance to capitalize the character\n            text = text[:i] + text[i].upper() + text[i + 1:]\n\n    return text", "tokens": ["special", "_", "chars", " =", " string", ".", "punct", "uation", "\n", "    ", "special", "_", "chars", " +=", " \"", "\\", "t", "\\", "n", " \"", "  ", "#", " special", " characters", " to", " be", " considered", " as", " spaces", "\n", "    ", "special", "_", "chars", " =", " re", ".", "escape", "(", "special", "_", "chars", ")", "\n", "    ", "regex", " =", " f", "\"", "[{", "special", "_", "chars", "}]", "\"", "\n", "    ", "text", " =", " re", ".", "sub", "(", "regex", ",", " \"", "_", "\"", ",", " text", ")", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "    ", "if", " not", " seed", ":", "\n", "        ", "return", " text", "\n", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "text", "))", ":", "\n", "        ", "if", " random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", "0", ")", " <", " ", "5", "0", ":", "  ", "#", " ", "5", "0", "%", " chance", " to", " capitalize", " the", " character", "\n", "            ", "text", " =", " text", "[:", "i", "]", " +", " text", "[", "i", "]", ".", "upper", "()", " +", " text", "[", "i", " +", " ", "1", ":]", "\n", "\n", "    ", "return", " text"], "logprobs": [-2.270883083343506, -0.10224521160125732, -0.22019723057746887, -0.060610707849264145, -0.7741119861602783, -6.83045873302035e-05, -0.0014385362155735493, -6.97350042173639e-05, -0.7791862487792969, -0.10179126262664795, -0.49117904901504517, -0.01116575300693512, -0.049249932169914246, -1.1702065467834473, -0.9607131481170654, -0.9296029806137085, -0.8489078283309937, -0.09140944480895996, -0.030509913340210915, -0.7552496790885925, -2.1091885566711426, -0.0016414752462878823, -3.777334213256836, -0.5943204164505005, -1.8281370401382446, -1.0433681011199951, -1.408818006515503, -0.17218579351902008, -1.4031729698181152, -0.1862848848104477, -0.400225430727005, -0.8377326726913452, -0.06254661828279495, -0.020367290824651718, -0.4429680109024048, -1.3456259965896606, -4.386805812828243e-05, -0.5942555069923401, -0.003084784373641014, -0.008618894964456558, -0.000256982195423916, -2.622600959512056e-06, -0.0013678251998499036, -0.3506194055080414, -0.3010624945163727, -2.2973904609680176, -0.1780579388141632, -1.4073165655136108, -0.24509784579277039, -0.6137805581092834, -0.057053081691265106, -0.0001012035645544529, -1.0728830375228426e-06, -0.007024355232715607, -0.2825753092765808, -0.3053301274776459, -0.328703910112381, -1.655236005783081, -0.07587579637765884, -0.07428600639104843, -0.000102037942269817, -0.005562422797083855, -0.00041631137719377875, -0.0029452538583427668, -0.0003401654539629817, -0.25152236223220825, -0.8031865954399109, -0.004894418641924858, -0.07508287578821182, -0.006218370981514454, -0.0301753468811512, -0.14810310304164886, -0.182791069149971, -0.25814008712768555, -0.01406107284128666, -0.47295427322387695, -0.0011873346520587802, -2.3749136924743652, -0.00031263710116036236, -0.35825303196907043, -1.8497521877288818, -0.00025912740966305137, -1.554021954536438, -2.8726916313171387, -0.03126201778650284, -0.04584642872214317, -0.04850863292813301, -0.0027065572794526815, -1.4409722089767456, -0.03753611445426941, -0.16416428983211517, -0.27396106719970703, -0.00025722055579535663, -0.444103866815567, -0.03919866681098938, -0.02291415072977543, -0.00028713393840007484, -0.005564675200730562, -0.005267550237476826, -0.03305140137672424, -0.3115854263305664, -1.2106455564498901, -0.957628071308136, -0.26813843846321106, -0.019537625834345818, -0.0002932118659373373, -0.27473098039627075, -2.3245540432981215e-05, -0.0007457336178049445, -0.036752063781023026, -0.00014804698002990335, -0.016874190419912338, -0.001110532903112471, -0.2092602550983429, -0.09615341573953629, -0.0003551805857568979, -1.7492687702178955, -0.05206289887428284, -0.00013219437096267939, -0.0520305335521698, -5.829164365422912e-05, -0.009784595109522343, -0.07927250117063522, -1.7634046077728271, -0.13851328194141388, -0.020331664010882378, -0.2885006368160248, -0.0005159238935448229, -0.003392062848433852, -0.004384547472000122, -0.05227528139948845, -2.015502691268921, -8.284702198579907e-05, -0.20799200236797333, -0.011488118208944798, -0.00029476112104021013, -0.011103508062660694, -0.3752308189868927, -0.37376078963279724, -2.3595428466796875, -1.4630160331726074, -0.20337897539138794, -0.019528623670339584, -0.00045503751607611775, -0.11614827066659927, -0.042519163340330124, -0.07971697300672531, -0.04437452182173729, -0.004656661301851273, -0.002512395614758134, -0.0005149707430973649, -0.021049438044428825, -0.0002397011558059603, -9.262132516596466e-05, -0.006264336407184601, -7.510157047363464e-06, -0.010961201041936874, -0.000328367663314566, -0.0006998711614869535, -0.0005629861843772233, -0.010455711744725704, -0.0002653246629051864, -0.20137834548950195, -0.00011467275908216834, -4.172238186583854e-05, -0.03285877779126167, -0.021660545840859413, -0.36589646339416504, -0.002142873592674732, -0.00859785731881857, -0.003602326614782214], "finish_reason": "stop"}], "metrics": {"energy": 187.18133471679687, "energy_per_token": 1.094627688402321, "time": 7.3722277, "time_per_token": 0.043112442690058476}}
{"outputs": [{"text": "if not text:\n        return ''\n    # Step 1: Remove special characters, tabs, and newlines\n    text = ''.join(\n        c if not re.match(r'\\s|\\n|\\t', c) else '__' for c in text\n    )\n\n    # Step 2: Normalize whitespace\n    text = re.sub(r'\\s+', ' __', text)\n\n    # Step 3: Convert characters to uppercase with a 50% probability\n    # TODO: Use the seed to randomize casing\n    return re.sub('([A-Za-z])', lambda m: m.group(1).upper() if random.random() < 0.5 else m.group(1) else '', text)", "tokens": ["if", " not", " text", ":", "\n", "        ", "return", " ''", "\n", "    ", "#", " Step", " ", "1", ":", " Remove", " special", " characters", ",", " tabs", ",", " and", " new", "lines", "\n", "    ", "text", " =", " ''", ".", "join", "(", "\n", "        ", "c", " if", " not", " re", ".", "match", "(", "r", "'\\", "s", "|\\", "n", "|\\", "t", "'", ",", " c", ")", " else", " '", "__", "'", " for", " c", " in", " text", "\n", "    ", ")", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Normal", "ize", " whites", "pace", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " __", "'", ",", " text", ")", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Convert", " characters", " to", " upper", "case", " with", " a", " ", "5", "0", "%", " probability", "\n", "    ", "#", " TODO", ":", " Use", " the", " seed", " to", " random", "ize", " c", "asing", "\n", "    ", "return", " re", ".", "sub", "('", "([", "A", "-", "Z", "a", "-", "z", "])", "'", ",", " lambda", " m", ":", " m", ".", "group", "(", "1", ")", ".", "upper", "()", " if", " random", ".", "random", "()", " <", " ", "0", ".", "5", " else", " m", ".", "group", "(", "1", ")", " else", " ''", ",", " text", ")", "\n", "\n", "def"], "logprobs": [-1.5533252954483032, -1.7515833377838135, -1.0840003490447998, -0.18265444040298462, -0.030890947207808495, -0.001121845212765038, -0.22890561819076538, -0.8090110421180725, -0.008971500210464, -1.1297950744628906, -2.0572752952575684, -4.0344390869140625, -0.028030339628458023, -0.03904448449611664, -0.07620193809270859, -0.6062005758285522, -0.14372104406356812, -0.006962561514228582, -3.276529550552368, -1.400191307067871, -0.03200085461139679, -0.43168795108795166, -0.0554468147456646, -0.05960850045084953, -0.3435751497745514, -0.0031721293926239014, -0.21114559471607208, -0.027785729616880417, -2.920923948287964, -6.90197994117625e-05, -0.0001070442158379592, -0.06965629756450653, -2.3525304794311523, -0.009098733775317669, -0.8533090949058533, -0.6483774781227112, -2.8123161792755127, -1.1413345336914062, -0.00011550712952157483, -0.2983061969280243, -0.2045413702726364, -0.06799521297216415, -1.4719055891036987, -0.9946121573448181, -1.4126520156860352, -2.0811591148376465, -0.22238996624946594, -0.0388207882642746, -0.620625913143158, -0.00043811736395582557, -0.0033454899676144123, -0.003492804942652583, -0.09255462139844894, -0.918647050857544, -0.45438849925994873, -0.0077266632579267025, -1.3769487142562866, -0.0005739472107961774, -0.00033361115492880344, -0.024241119623184204, -0.23986628651618958, -0.014486259780824184, -0.00014518637908622622, -0.09399434924125671, -0.9311205744743347, -0.0004720765573438257, -0.02565034106373787, -0.015457704663276672, -0.0005751386051997542, -0.003561346558853984, -0.004260273650288582, -0.4523599445819855, -0.015524961985647678, -0.06028169021010399, -0.015626249834895134, -0.5219415426254272, -0.0017227584030479193, -0.06956133991479874, -0.007217760663479567, -0.9204807877540588, -0.00011205045302631333, -0.007577249314635992, -0.18745486438274384, -0.013675686903297901, -0.05344308540225029, -0.015775756910443306, -0.1287110298871994, -4.827859811484814e-05, -0.2795572280883789, -3.349285840988159, -1.8598847389221191, -0.0015695883193984628, -0.004382411018013954, -0.027252020314335823, -0.13682641088962555, -0.23900693655014038, -0.00044764988706447184, -0.0429825522005558, -0.021748384460806847, -0.0003999863693024963, -0.005050164181739092, -0.008404717780649662, -2.682568311691284, -0.950383186340332, -0.013517750427126884, -0.07550909370183945, -0.007859141565859318, -0.29134127497673035, -0.25948265194892883, -0.012753001414239407, -0.0038674098905175924, -0.0001134808044298552, -0.0031642864923924208, -0.12995730340480804, -0.023073289543390274, -0.003326836507767439, -3.928546905517578, -3.3208119869232178, -0.20126624405384064, -3.214752197265625, -2.3811631202697754, -1.4918005466461182, -0.7373336553573608, -1.208523154258728, -0.0014659145381301641, -1.7427184581756592, -0.0002803409588523209, -0.42273369431495667, -0.0383002795279026, -1.9588557481765747, -3.0087265968322754, -0.0009708458674140275, -0.0009841842111200094, -2.098400831222534, -2.359015464782715, -1.697210669517517, -0.0025981261860579252, -0.0011610202491283417, -0.5759741067886353, -3.0517112463712692e-05, -8.463501580990851e-05, -0.22912727296352386, -0.015967711806297302, -0.0006899837171658874, -0.12397805601358414, -0.4776909649372101, -0.004148331005126238, -0.6154410243034363, -0.03342524543404579, -0.005564556922763586, -0.13352330029010773, -0.17830532789230347, -0.007773978635668755, -0.1829117089509964, -0.1022709310054779, -0.010373838245868683, -0.22178144752979279, -0.036191847175359726, -0.0010584949050098658, -0.5477463006973267, -0.005661049857735634, -0.3082403540611267, -0.0026568612083792686, -0.07984938472509384, -4.0411134250462055e-05, -0.009554137475788593, -0.016042910516262054, -0.011058589443564415, -0.00825446005910635, -0.0012935374397784472, -0.014636406674981117, -0.020282136276364326, -0.001262344536371529, -0.42837485671043396, -0.682365357875824, -0.011437678709626198, -0.08837957680225372, -0.40462377667427063, -0.2052423059940338, -0.013379550538957119, -0.8241360187530518], "finish_reason": "stop"}], "metrics": {"energy": 181.83056311035168, "energy_per_token": 1.0045887464660315, "time": 7.7905765, "time_per_token": 0.0430418591160221}}
{"outputs": [{"text": "if seed is not None:\n        random.seed(seed)\n    text = text.replace(\"\\t\", \"___\").replace(\" \", \"__\")\n    for char in string.punctuation:\n        text = text.replace(char, \"_\")\n    return ''.join(\n        random.choices([char.upper() if random.random() < 0.5 else char for char in text], k=len(text))\n    )", "tokens": ["if", " seed", " is", " not", " None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "text", " =", " text", ".", "replace", "(", "\"", "\\", "t", "\"", ",", " \"__", "_", "\"", ")", ".", "replace", "(", "\"", " \"", ",", " \"__", "\"", ")", "\n", "    ", "for", " char", " in", " string", ".", "punct", "uation", ":", "\n", "        ", "text", " =", " text", ".", "replace", "(", "char", ",", " \"", "_", "\"", ")", "\n", "    ", "return", " ''", ".", "join", "(", "\n", "        ", "random", ".", "cho", "ices", "([", "char", ".", "upper", "()", " if", " random", ".", "random", "()", " <", " ", "0", ".", "5", " else", " char", " for", " char", " in", " text", "]", ",", " k", "=", "len", "(", "text", "))", "\n", "    ", ")", "\n", "\n", "def"], "logprobs": [-1.5533252954483032, -0.23924091458320618, -0.3202337920665741, -0.0749279335141182, -5.221230458118953e-05, -0.013791623525321484, -0.011701400391757488, -0.0019437245791777968, -0.033286888152360916, -0.001546973828226328, -0.00688466290012002, -0.0002814135223161429, -0.004104167688637972, -0.0013243722496554255, -0.009806198067963123, -0.9585247039794922, -1.5252289772033691, -0.06438958644866943, -0.7527424097061157, -0.004766174592077732, -1.8199270963668823, -1.1351016759872437, -0.13480152189731598, -1.5442304611206055, -1.9130176305770874, -0.0174039788544178, -0.00026079590315930545, -0.9346710443496704, -0.3285539746284485, -0.013320736587047577, -0.0029404994565993547, -0.8098720908164978, -0.010818873532116413, -0.015553952194750309, -0.006722808815538883, -0.8930118083953857, -0.00036745471879839897, -0.178042471408844, -0.4421645402908325, -0.0018430643249303102, -0.21857169270515442, -0.07217886298894882, -2.9021048545837402, -1.0507514476776123, -0.0070882756263017654, -0.4384346306324005, -3.6238969187252223e-05, -0.004880894906818867, -4.660974445869215e-05, -0.07106028497219086, -0.009634425863623619, -0.001666586846113205, -0.23099097609519958, -0.003726682160049677, -0.3857289254665375, -0.00014101465058047324, -0.003725375747308135, -0.0002493547508493066, -0.007129347883164883, -0.0021347845904529095, -0.17318099737167358, -0.931897759437561, -0.0048055630177259445, -0.025427578017115593, -0.02323426492512226, -0.06950518488883972, -2.0867788791656494, -1.950573444366455, -0.00016056202002801, -0.00018249277491122484, -0.4101898670196533, -1.038919448852539, -0.015104091726243496, -1.0224506855010986, -0.0006176709430292249, -2.8734731674194336, -0.004195341374725103, -0.8698508739471436, -0.605318009853363, -0.031614698469638824, -0.12345326691865921, -0.0017444168915972114, -1.4825830459594727, -0.02479144185781479, -0.0003295593778602779, -0.3581511378288269, -0.0022802562452852726, -0.24888679385185242, -0.0011969790793955326, -0.0687897652387619, -1.1920858014491387e-05, -0.001668252982199192, -0.011540323495864868, -0.0031704658176749945, -0.710454523563385, -0.002723082434386015, -0.0004196478403173387, -0.07453709095716476, -0.08533251285552979, -0.0017391807632520795, -0.5438801646232605, -0.01202771533280611, -0.010108349844813347, -8.999896090244874e-05, -0.007056197617202997, -0.09105198830366135, -0.033227961510419846, -0.01734071411192417, -0.3316699266433716, -0.25925418734550476, -0.021938612684607506, -0.9212453365325928], "finish_reason": "stop"}], "metrics": {"energy": 145.69055299568174, "energy_per_token": 1.3008085088900156, "time": 4.6409607, "time_per_token": 0.04143714910714286}}
{"outputs": [{"text": "# ***********************\n    # REQUIREMENTS:\n    # ***********************\n    # re\n    # string\n    # random\n\n    # ***********************\n    # SEED:\n    # ***********************\n    random.seed(seed)\n\n    # ***********************\n    # PREPROCESSING:\n    # ***********************\n    # 1. Remove special characters\n    text = re.sub(r\"[!@#$%^&*(),.?:;'\\[\\]<>~`_+=/\\\\]\", \"\", text)\n\n    # 2. Replace all whitespaces with \"_\"\n    text = re.sub(r'\\s+', '_', text)\n\n    # 3. Replace newlines with \"_\"\n    text = re.sub('\\n', '_', text)\n\n    # 4. Replace tabs with \"_\"\n    text = re.sub('\\t', '_', text)\n\n    # 5. Shuffle casing of characters\n    text = random.choice([char.upper() if random.", "tokens": ["#", " ", "****************", "****", "***", "\n", "    ", "#", " RE", "QUI", "RE", "MENTS", ":", "\n", "    ", "#", " ", "****************", "****", "***", "\n", "    ", "#", " re", "\n", "    ", "#", " string", "\n", "    ", "#", " random", "\n", "\n", "    ", "#", " ", "****************", "****", "***", "\n", "    ", "#", " SE", "ED", ":", "\n", "    ", "#", " ", "****************", "****", "***", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "#", " ", "****************", "****", "***", "\n", "    ", "#", " PRE", "PR", "OC", "ESS", "ING", ":", "\n", "    ", "#", " ", "****************", "****", "***", "\n", "    ", "#", " ", "1", ".", " Remove", " special", " characters", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "\"", "[", "!", "@", "#", "$", "%^", "&", "*", "()", ",", ".", "?", ":", ";", "'\\", "[\\", "]<", ">", "~", "`", "_+", "=", "/\\\\", "]\"", ",", " \"", "\"", ",", " text", ")", "\n", "\n", "    ", "#", " ", "2", ".", " Replace", " all", " whites", "paces", " with", " \"", "_", "\"", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '_", "'", ",", " text", ")", "\n", "\n", "    ", "#", " ", "3", ".", " Replace", " new", "lines", " with", " \"", "_", "\"", "\n", "    ", "text", " =", " re", ".", "sub", "('", "\\", "n", "'", ",", " '_", "'", ",", " text", ")", "\n", "\n", "    ", "#", " ", "4", ".", " Replace", " tabs", " with", " \"", "_", "\"", "\n", "    ", "text", " =", " re", ".", "sub", "('", "\\", "t", "'", ",", " '_", "'", ",", " text", ")", "\n", "\n", "    ", "#", " ", "5", ".", " Sh", "uffle", " c", "asing", " of", " characters", "\n", "    ", "text", " =", " random", ".", "choice", "([", "char", ".", "upper", "()", " if", " random", "."], "logprobs": [-1.2803798913955688, -3.8407464027404785, -3.493459701538086, -3.174999952316284, -1.4855093955993652, -0.7683157324790955, -0.02602800354361534, -0.050212692469358444, -4.256533145904541, -0.5144516825675964, -0.18137770891189575, -0.057561781257390976, -1.3802653551101685, -0.32850995659828186, -0.018846021965146065, -0.014618785120546818, -0.1853483021259308, -0.06917084008455276, -0.015019191429018974, -0.007857012562453747, -0.0008401916129514575, -0.19170333445072174, -0.766400933265686, -0.948922336101532, -0.2580856382846832, -0.016530225053429604, -0.05906128138303757, -0.08829980343580246, -0.002752922009676695, -0.0331171415746212, -0.005764171481132507, -0.017899878323078156, -0.0025179844815284014, -0.4673515856266022, -0.0004864939546678215, -0.24177882075309753, -0.23901914060115814, -0.015399716794490814, -0.058520399034023285, -0.0085295420140028, -0.0006659197388216853, -0.0011650687083601952, -0.003375429892912507, -4.292012691497803, -0.006510594394057989, -0.6596896052360535, -0.05579174682497978, -0.002050560899078846, -0.0006262486567720771, -0.010209597647190094, -0.0008048156159929931, -0.0002901133266277611, -0.00011085849109804258, -0.00033420699764974415, -0.05591045320034027, -1.4023799896240234, -0.02762223780155182, -0.0069399503991007805, -0.0009557208395563066, -0.012269849888980389, -0.007851926609873772, -0.04925889894366264, -0.17634029686450958, -0.0003129946126136929, -0.059766508638858795, -0.04952440410852432, -0.011055052280426025, -0.060847196727991104, -0.0022645562421530485, -0.00021145492792129517, -0.00031442465842701495, -0.0008931938209570944, -1.7318371534347534, -0.20014941692352295, -0.0006350646144710481, -0.0036707420367747545, -0.450901061296463, -0.1185055524110794, -0.004518536850810051, -0.00043466180795803666, -0.00013958434283267707, -0.022539621219038963, -0.0015631611458957195, -0.00037329382030293345, -0.00036638224264606833, -0.0002456601650919765, -0.20640167593955994, -0.6136118173599243, -1.8195786476135254, -0.2492285817861557, -0.40553179383277893, -1.308225154876709, -0.3388427793979645, -0.02227547951042652, -0.7213588953018188, -0.00973985344171524, -0.7976468205451965, -0.10260406881570816, -0.30976584553718567, -8.570780482841656e-05, -0.015500195324420929, -0.08601103723049164, -0.06774158030748367, -1.24294114112854, -0.11815871298313141, -3.392348289489746, -0.3078188896179199, -0.028003215789794922, -0.016370628029108047, -0.0291141290217638, -0.002978771459311247, -0.04369863495230675, -0.0949048101902008, -1.0423301458358765, -0.148379385471344, -0.13631248474121094, -2.0451366901397705, -0.6681720614433289, -3.120604991912842, -0.09973886609077454, -2.5747458934783936, -0.4786897599697113, -3.9888505935668945, -1.0271618366241455, -3.1667847633361816, -0.37934187054634094, -0.5221772193908691, -1.5001616477966309, -0.0004351384413894266, -0.3432842493057251, -0.1705440729856491, -0.00015579440514557064, -0.005575463175773621, -0.037663210183382034, -0.03596245124936104, -0.37105077505111694, -0.0002456601650919765, -0.0019312318181619048, -0.008090225979685783, -0.004049316979944706, -0.0020682865288108587, -1.096269965171814, -3.356534242630005, -0.6466106176376343, -1.7921890020370483, -0.26475077867507935, -3.047029495239258, -0.0321769081056118, -0.011528421193361282, -0.2600579857826233, -0.0008247073274105787, -0.06074758246541023, -0.005818928126245737, -1.495915412902832, -0.0007120219524949789, -0.0011642351746559143, -0.010507381521165371, -0.01980178989470005, -0.4024382531642914, -0.0034265159629285336, -0.10938028991222382, -3.71926071238704e-05, -0.37838518619537354, -9.846202738117427e-05, -0.00026306029758416116, -0.0010062160436064005, -0.009158741682767868, -0.012174581177532673, -0.02525254152715206, -0.0002470903273206204, -0.00735918153077364, -0.01271604374051094, -0.14859764277935028, -0.0018041539005935192, -3.008070468902588, -1.636597752571106, -0.16766341030597687, -0.6001468896865845, -0.2683267891407013, -1.361720085144043, -0.04471006989479065, -0.19615164399147034, -0.0005667987279593945, -0.04349001869559288, -0.0019319456769153476, -0.6005932688713074, -0.0002989322238136083, -0.0002269487304147333, -1.534592628479004, -0.021380651742219925, -0.01783723197877407, -0.09608487039804459, -0.0011092231143265963, -0.04315120354294777, -0.0009152276325039566, -0.0007214327342808247, -0.000568228424526751, -0.0015274535398930311, -0.0016132686287164688, -0.013409427367150784, -0.00016175392374861985, -0.0059261806309223175, -0.02317253313958645, -0.07629428058862686, -0.001714071026071906, -0.3792872130870819, -0.11526864022016525, -0.0050463685765862465, -0.017466535791754723, -0.007765343878418207, -0.0006379238329827785, -0.00456683523952961, -0.000120751719805412, -0.007427103351801634, -0.00041940953815355897, -0.03748524934053421, -0.00011681827891152352, -3.123234637314454e-05, -0.07756157964468002, -0.000582644424866885, -0.00021586472576018423, -0.004212791565805674, -3.755022044060752e-05, -0.005269447807222605, -0.00010382589971413836, -7.390703103737906e-05, -0.00011121608258690685, -0.00010001159535022452, -0.00023469554434996098, -0.005779342260211706, -0.0002795067266561091, -0.011130505241453648, -0.029744284227490425, -0.16352252662181854, -0.0015361425466835499, -3.818758487701416, -0.05831226333975792, -3.1931843757629395, -0.0032556646037846804, -1.353158950805664, -1.0117534399032593, -0.6636011004447937, -0.009999892674386501, -2.5446205139160156, -0.061960890889167786, -3.1035361289978027, -0.05162950977683067, -0.4132724702358246, -0.09740879386663437, -1.5859618186950684, -0.005901412572711706, -0.10363408923149109, -0.0017105009173974395, -0.12518322467803955, -0.03197222203016281, -0.0010586139978840947], "finish_reason": "length"}], "metrics": {"energy": 294.5408067636489, "energy_per_token": 1.1505500264205035, "time": 11.140936, "time_per_token": 0.04351928125}}
{"outputs": [{"text": "if seed is not None:\n        random.seed(seed)\n\n    special_chars = '~!@#$%^&*()_+'\n    normal_chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n    special_chars_to_normal_chars = dict(zip(special_chars, normal_chars))\n    normal_chars_to_special_chars = {v: k for k, v in special_chars_to_normal_chars.items()}\n    normal_chars_to_uppercase_chars = {k.upper(): k.lower() for k in normal_chars}\n\n    text = text.lower()\n    text = re.sub('\\W+', '', text)\n    text = re.sub('\\s+', '_', text)\n    text = re.sub('_+', '__', text)\n    text = re.sub('__+', '___', text)\n    text = re.sub('___+', '____', text)\n", "tokens": ["if", " seed", " is", " not", " None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "special", "_", "chars", " =", " '", "~", "!", "@", "#", "$", "%^", "&", "*", "()", "_+", "'", "\n", "    ", "normal", "_", "chars", " =", " '", "abc", "def", "gh", "ij", "kl", "mn", "op", "qr", "st", "uv", "w", "xyz", "ABC", "DEF", "GH", "IJ", "KL", "MN", "OP", "QR", "ST", "UV", "W", "XY", "Z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "'", "\n", "    ", "special", "_", "chars", "_", "to", "_", "normal", "_", "chars", " =", " dict", "(", "zip", "(", "special", "_", "chars", ",", " normal", "_", "chars", "))", "\n", "    ", "normal", "_", "chars", "_", "to", "_", "special", "_", "chars", " =", " {", "v", ":", " k", " for", " k", ",", " v", " in", " special", "_", "chars", "_", "to", "_", "normal", "_", "chars", ".", "items", "()}", "\n", "    ", "normal", "_", "chars", "_", "to", "_", "upper", "case", "_", "chars", " =", " {", "k", ".", "upper", "():", " k", ".", "lower", "()", " for", " k", " in", " normal", "_", "chars", "}", "\n", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "    ", "text", " =", " re", ".", "sub", "('", "\\", "W", "+'", ",", " ''", ",", " text", ")", "\n", "    ", "text", " =", " re", ".", "sub", "('", "\\", "s", "+'", ",", " '_", "'", ",", " text", ")", "\n", "    ", "text", " =", " re", ".", "sub", "('", "_+", "'", ",", " '", "__", "'", ",", " text", ")", "\n", "    ", "text", " =", " re", ".", "sub", "('", "__", "+'", ",", " '", "___", "'", ",", " text", ")", "\n", "    ", "text", " =", " re", ".", "sub", "('", "___", "+'", ",", " '", "____", "'", ",", " text", ")", "\n"], "logprobs": [-1.5533252954483032, -0.23924091458320618, -0.3202337920665741, -0.0749279335141182, -5.221230458118953e-05, -0.013791623525321484, -0.011701400391757488, -0.0019437245791777968, -0.033286888152360916, -0.001546973828226328, -0.00688466290012002, -0.0002814135223161429, -0.004104167688637972, -0.0013243722496554255, -0.009806198067963123, -0.5299587249755859, -0.0009059377480298281, -2.4486045837402344, -0.06329459697008133, -0.26393911242485046, -0.05011473596096039, -3.765005350112915, -2.3501408100128174, -0.8104435205459595, -0.02703912928700447, -0.003149670083075762, -0.009103931486606598, -0.011370970867574215, -0.0021564343478530645, -0.05567279830574989, -0.04040473327040672, -0.7306779026985168, -2.1544196605682373, -0.19541743397712708, -0.17195114493370056, -3.329281806945801, -0.6542510986328125, -0.11301348358392715, -0.014400014653801918, -2.213494300842285, -0.265079528093338, -0.003801739541813731, -0.016910996288061142, -0.0033062815200537443, -0.007001863792538643, -0.001777022727765143, -0.000562271336093545, -0.0024730355944484472, -0.00011467275908216834, -0.0011891205795109272, -0.0030091977678239346, -0.0005645350320264697, -1.8983650207519531, -0.0005723983631469309, -0.0006985607906244695, -0.00010227633902104571, -0.005163547582924366, -0.00017045476124621928, -7.021180499577895e-05, -0.0005514293443411589, -5.471556869451888e-05, -3.862306402879767e-05, -9.655486064730212e-05, -0.00011693747364915907, -0.00011777184408856556, -1.37125563621521, -0.0026148909237235785, -0.00018523407925385982, -6.794698856538162e-05, -0.00023266946664080024, -0.00011955977242905647, -0.00025245340657420456, -0.00015138434537220746, -0.0001858300092862919, -0.00013958434283267707, -0.22699393332004547, -0.006582245696336031, -0.6052497625350952, -2.0657007694244385, -0.042069729417562485, -0.4524776041507721, -0.3976483643054962, -2.9439761638641357, -0.0011788808042183518, -1.3797413110733032, -0.49896374344825745, -0.03188296779990196, -0.2580837309360504, -0.9643888473510742, -0.07524332404136658, -0.0757056176662445, -0.006748858839273453, -0.21989569067955017, -0.00023588736075907946, -5.245195097813848e-06, -0.0061727589927613735, -0.01823600009083748, -7.688703772146255e-05, -3.576278118089249e-07, -0.0056373425759375095, -0.006712506990879774, -1.093092918395996, -1.5096386671066284, -0.027135545387864113, -0.04069365933537483, -0.019750598818063736, -0.025011206045746803, -9.059495641849935e-05, -0.03854382038116455, -0.0008075552177615464, -0.001515431678853929, -0.0027104804757982492, -2.22825026512146, -0.20946146547794342, -0.004110222216695547, -0.02261514402925968, -0.0004881620698142797, -0.013540331274271011, -0.00012003655137959868, -0.00939023494720459, -0.00029488030122593045, -0.005988038145005703, -3.576278118089249e-07, -4.768370445162873e-07, -0.0008519833791069686, -5.960446742392378e-06, -1.811964830267243e-05, -7.271740287251305e-06, -2.50339189733495e-06, -1.311301275563892e-06, -0.0004985281848348677, -0.00020561488054227084, -0.0007842087652534246, -0.0021240785717964172, -1.3413997888565063, -1.7129313945770264, -0.058436859399080276, -0.10005117207765579, -0.24944031238555908, -0.3643079102039337, -0.00012289722508285195, -2.0050787925720215, -0.3697616457939148, -1.1718400716781616, -0.4653450548648834, -0.0037719309329986572, -0.45256245136260986, -1.5577250719070435, -1.0132901668548584, -0.024022117257118225, -0.004849695134907961, -0.930332601070404, -0.6177457571029663, -1.2933471202850342, -0.0020334296859800816, -0.0904519110918045, -0.000651147507596761, -0.004921939689666033, -0.028992081061005592, -5.602820692729438e-06, -4.51792984677013e-05, -0.0293325986713171, -0.004657254554331303, -0.6754471659660339, -0.0003426679759286344, -1.4260663986206055, -0.09377121925354004, -1.068618655204773, -0.004603858571499586, -2.730358123779297, -0.0003305127320345491, -0.30515196919441223, -0.17523778975009918, -0.29762330651283264, -0.0125126326456666, -0.6402746438980103, -2.455681169521995e-05, -0.005745681468397379, -1.2050211429595947, -1.0768494606018066, -2.6160147190093994, -0.8865434527397156, -4.51792984677013e-05, -1.300480604171753, -5.6622808187967166e-05, -0.0018774517811834812, -0.003820740384981036, -0.13531778752803802, -0.03513158857822418, -0.0357229970395565, -0.0027237955946475267, -1.0174503326416016, -0.00018094333063345402, -0.0006385194719769061, -0.19580170512199402, -0.15525265038013458, -0.10157589614391327, -0.08930867910385132, -2.396077979938127e-05, -0.7613340020179749, -0.00034528967808000743, -0.00835435837507248, -0.0015124559868127108, -0.004079829435795546, -0.04127984493970871, -0.4104984700679779, -0.2807168662548065, -0.006765080615878105, -2.08536958694458, -0.0028386320918798447, -0.0002802217786666006, -0.15325668454170227, -1.7174465656280518, -0.03982021287083626, -0.00018559163436293602, -0.2139858603477478, -0.10388179123401642, -0.00020466140995267779, -0.0001225396408699453, -0.0018161722691729665, -0.0021347845904529095, -0.005504214204847813, -0.2944948971271515, -0.13552840054035187, -0.0029755623545497656, -0.4487525522708893, -0.0010930284624919295, -0.0002903516869992018, -0.038070447742938995, -1.948851466178894, -0.031268831342458725, -1.6689160474925302e-05, -0.015196498483419418, -0.005680608097463846, -1.9550132492440753e-05, -3.683499380713329e-05, -0.0001380348257953301, -0.000655793643090874, -0.0012654400197789073, -0.5904983282089233, -0.24410709738731384, -0.00482917157933116, -1.279760718345642, -0.0008432884933426976, -0.0002964295563288033, -0.24216412007808685, -2.4006853103637695, -0.051340553909540176, -2.109982233378105e-05, -0.03682640567421913, -0.08700376003980637, -0.007955413311719894, -6.508615479106084e-05, -7.1403817855753e-05, -0.00035768310772255063, -0.003503139829263091], "finish_reason": "length"}], "metrics": {"energy": 282.51750478935224, "energy_per_token": 1.1035840030834072, "time": 10.928142, "time_per_token": 0.0426880546875}}
{"outputs": [{"text": "if seed is not None:\n        random.seed(seed)\n    special_chars = string.punctuation\n    special_chars += ' \\t\\n'\n    # print('special_chars', special_chars)\n    result = text.translate(str.maketrans('', '', special_chars)).strip().replace('  ', '__').replace('\\t', '___').replace('\\n', '____')\n    result = [random.choice([char.upper(), char.lower()]) if random.random() > 0.5 else char for char in result]\n    return ''.join(result)", "tokens": ["if", " seed", " is", " not", " None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "special", "_", "chars", " =", " string", ".", "punct", "uation", "\n", "    ", "special", "_", "chars", " +=", " '", " \\", "t", "\\", "n", "'", "\n", "    ", "#", " print", "('", "special", "_", "chars", "'", ",", " special", "_", "chars", ")", "\n", "    ", "result", " =", " text", ".", "translate", "(", "str", ".", "mak", "et", "rans", "('", "'", ",", " ''", ",", " special", "_", "chars", "))", ".", "strip", "()", ".", "replace", "('", "  ", "'", ",", " '", "__", "')", ".", "replace", "('", "\\", "t", "'", ",", " '", "___", "')", ".", "replace", "('", "\\", "n", "'", ",", " '", "____", "')", "\n", "    ", "result", " =", " [", "random", ".", "choice", "([", "char", ".", "upper", "()", ",", " char", ".", "lower", "()", "])", " if", " random", ".", "random", "()", " >", " ", "0", ".", "5", " else", " char", " for", " char", " in", " result", "]", "\n", "    ", "return", " ''", ".", "join", "(", "result", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.5533252954483032, -0.23924091458320618, -0.3202337920665741, -0.0749279335141182, -5.221230458118953e-05, -0.013791623525321484, -0.011701400391757488, -0.0019437245791777968, -0.033286888152360916, -0.001546973828226328, -0.00688466290012002, -0.0002814135223161429, -0.004104167688637972, -0.0013243722496554255, -0.009806198067963123, -0.9585247039794922, -2.188234806060791, -0.12092278897762299, -0.20135816931724548, -0.043956611305475235, -0.8980086445808411, -3.218599158572033e-05, -0.001427227514795959, -0.00010394509445177391, -0.7319400906562805, -0.044206421822309494, -0.7381995320320129, -0.013523277826607227, -0.044504743069410324, -1.0795155763626099, -1.2740217447280884, -0.9818848371505737, -0.20281951129436493, -0.03241986781358719, -0.015443501994013786, -0.047416336834430695, -0.09389613568782806, -0.09976217150688171, -3.014329433441162, -4.016872406005859, -2.3647518157958984, -0.6777048707008362, -0.3586065471172333, -0.013607952743768692, -0.8920506238937378, -0.0037971078418195248, -0.20105157792568207, -0.00014602071314584464, -7.510157047363464e-06, -0.029899677261710167, -0.03611366078257561, -0.15537941455841064, -3.347001552581787, -0.0719868615269661, -2.873246431350708, -0.2793869376182556, -0.24189947545528412, -0.2938291132450104, -0.039561398327350616, -6.854299135738984e-05, -4.005352093372494e-05, -0.00014840454969089478, -0.0014546061865985394, -0.3426732122898102, -0.005427268799394369, -0.0001934579631779343, -0.014860058203339577, -0.000105375460407231, -0.010548077523708344, -1.2040065485052764e-05, -4.768370445162873e-07, -0.007650361862033606, -1.6141419410705566, -1.1185094118118286, -0.016104381531476974, -1.1824195384979248, -0.5764022469520569, -0.12215380370616913, -1.9089500904083252, -0.0011322046630084515, -0.00014244495832826942, -0.43082019686698914, -0.9681879281997681, -0.014870159327983856, -0.42755991220474243, -0.10761622339487076, -0.04015328362584114, -1.0018401145935059, -0.49347418546676636, -0.06019975244998932, -0.0014881737297400832, -0.12025465816259384, -0.4631403684616089, -0.006926335860043764, -0.04305175319314003, -0.00421623419970274, -0.012057985179126263, -0.022521672770380974, -0.005676578264683485, -0.0030182304326444864, -0.0011200590524822474, -0.03563108667731285, -0.1391373872756958, -0.05413218215107918, -0.09333164989948273, -0.1336110234260559, -2.2140326499938965, -0.11930298805236816, -2.794689178466797, -0.945828378200531, -0.0038125463761389256, -0.07143572717905045, -0.31985509395599365, -1.2271069288253784, -0.019222639501094818, -0.05514981970191002, -0.00906423944979906, -0.17098645865917206, -0.043536584824323654, -0.29648125171661377, -0.002368147252127528, -0.0001802282058633864, -0.04744851216673851, -0.10601695626974106, -0.030140994116663933, -0.00016830935783218592, -0.2743365466594696, -0.001574111171066761, -2.106370449066162, -0.0020256969146430492, -0.10694760084152222, -7.354942499659956e-05, -0.0019965493120253086, -0.00901887472718954, -0.008772997185587883, -0.07207948714494705, -0.008982251398265362, -0.00014244495832826942, -0.2832397222518921, -0.018711483106017113, -0.010593844577670097, -0.037022173404693604, -0.27621716260910034, -0.07580308616161346, -2.9682672902708873e-05, -9.178694017464295e-05, -0.0023111794143915176, -0.01446264237165451, -1.163040280342102, -1.1920922133867862e-06, -2.0265558760002023e-06, -0.00021395778458099812, -0.0001932195882545784, -2.7379798889160156, -0.005913855973631144], "finish_reason": "stop"}], "metrics": {"energy": 187.25561814880382, "energy_per_token": 1.2081007622503472, "time": 6.534805, "time_per_token": 0.04216003225806452}}
{"outputs": [{"text": "special_chars = re.compile('[!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^`{|}~]+')\n    whitespace = re.compile('\\\\s+')\n    char_cases = 'ABC'\n\n    if not seed:\n        random.seed(None)\n    else:\n        random.seed(seed)\n\n    result = []\n    for char in text:\n        if special_chars.match(char):\n            result.append('_' * len(char))\n        elif whitespace.match(char):\n            result.append('__')\n        else:\n            result.append(char)\n\n    for i in range(len(result)):\n        if random.random() > 0.5:\n            result[i] = result[i].upper()\n\n    return ''.join(result)", "tokens": ["special", "_", "chars", " =", " re", ".", "compile", "('", "[", "!", "\"", "#", "$", "%", "&\\", "'", "()", "*", "+", ",", "-", ".", "/", ":", ";<", "=>", "?", "@", "[\\\\", "]^", "`", "{|", "}~", "]+", "')", "\n", "    ", "wh", "ites", "pace", " =", " re", ".", "compile", "('\\\\", "s", "+", "')", "\n", "    ", "char", "_", "cases", " =", " '", "ABC", "'", "\n", "\n", "    ", "if", " not", " seed", ":", "\n", "        ", "random", ".", "seed", "(", "None", ")", "\n", "    ", "else", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "result", " =", " []", "\n", "    ", "for", " char", " in", " text", ":", "\n", "        ", "if", " special", "_", "chars", ".", "match", "(", "char", "):", "\n", "            ", "result", ".", "append", "('", "_", "'", " *", " len", "(", "char", "))", "\n", "        ", "elif", " whites", "pace", ".", "match", "(", "char", "):", "\n", "            ", "result", ".", "append", "('", "__", "')", "\n", "        ", "else", ":", "\n", "            ", "result", ".", "append", "(", "char", ")", "\n", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "result", "))", ":", "\n", "        ", "if", " random", ".", "random", "()", " >", " ", "0", ".", "5", ":", "\n", "            ", "result", "[", "i", "]", " =", " result", "[", "i", "]", ".", "upper", "()", "\n", "\n", "    ", "return", " ''", ".", "join", "(", "result", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-2.270883083343506, -0.10224521160125732, -0.22019723057746887, -0.060610707849264145, -1.5838711261749268, -2.0265373677830212e-05, -0.3275940716266632, -1.0067534446716309, -0.45035406947135925, -1.7046432495117188, -0.31274107098579407, -0.05857773870229721, -0.016459282487630844, -0.008867409080266953, -0.11213482171297073, -0.026775941252708435, -0.026426540687680244, -0.0016986002447083592, -0.01132865808904171, -0.0004058252670802176, -0.07377045601606369, -0.017813341692090034, -0.026124518364667892, -0.0031336271204054356, -0.0035491115413606167, -0.0028072495479136705, -0.0011645924532786012, -0.044509418308734894, -0.09748102724552155, -0.015693260356783867, -2.8281588554382324, -0.00129270413890481, -0.01848670095205307, -1.3324356079101562, -0.09393596649169922, -0.026880968362092972, -0.12189782410860062, -1.502677321434021, -0.002131453948095441, -0.1257684975862503, -0.1586485654115677, -0.14540891349315643, -0.0014466306893154979, -0.0016742035513743758, -1.5946340560913086, -0.009245440363883972, -0.4256702959537506, -0.01375576201826334, -0.00503640528768301, -0.4564138650894165, -3.7845349311828613, -0.3705363869667053, -1.995582103729248, -0.014674350619316101, -3.8264517784118652, -1.3271316289901733, -1.4386780261993408, -0.13460533320903778, -0.5505193471908569, -0.00029988560709170997, -1.1735013723373413, -2.6451847553253174, -0.21930135786533356, -0.03195732459425926, -0.024416683241724968, -0.004259324166923761, -0.6515862941741943, -0.051936715841293335, -0.07891871780157089, -0.5159257054328918, -0.1964370161294937, -0.000634111522231251, -0.10494537651538849, -0.1116618812084198, -0.054799363017082214, -0.00011252723925281316, -0.0018784035928547382, -0.00030179237364791334, -0.008342537097632885, -0.0003152588615193963, -0.0005322470096871257, -0.0004086851258762181, -0.014311176724731922, -0.00289152842015028, -0.0061219315975904465, -0.06766805797815323, -0.0007214327342808247, -3.015655517578125, -0.029754236340522766, -2.2288451194763184, -0.002779313363134861, -0.4923242926597595, -0.41207072138786316, -1.103395938873291, -0.00785843189805746, -0.24929919838905334, -0.08430800586938858, -0.003087517572566867, -0.011018620803952217, -0.17909137904644012, -1.3397136926651, -5.006777428206988e-06, -1.1324817933200393e-05, -0.0004887578543275595, -0.0899394080042839, -0.0002836778585333377, -0.0018742390675470233, -0.07491786777973175, -0.022103503346443176, -0.0012444854946807027, -0.18981988728046417, -0.011886599473655224, -0.02316834032535553, -1.02718985080719, -0.36187243461608887, -0.10070081055164337, -0.14718498289585114, -0.19766180217266083, -0.0006677066558040679, -0.6175196170806885, -0.013839123770594597, -0.008486399427056313, -0.05882234871387482, -0.23787623643875122, -0.06353380531072617, -0.00014232576359063387, -6.90197994117625e-05, -0.0107523612678051, -0.0001389883691444993, -0.0004876854654867202, -0.009509740397334099, -0.0018171241972595453, -0.0005429700831882656, -0.05395464226603508, -0.005559103563427925, -0.026546580716967583, -0.034914612770080566, -0.44276291131973267, -2.354377031326294, -0.0888349637389183, -0.03141393885016441, -0.872144877910614, -3.8265450712060556e-05, -0.007442131172865629, -0.002075543161481619, -0.7314268350601196, -0.0017037175130099058, -0.000276765669696033, -0.03414255753159523, -0.15640667080879211, -0.5734108686447144, -0.0035327188670635223, -0.20172575116157532, -0.1175595298409462, -0.5418911576271057, -0.42307397723197937, -0.2034592181444168, -0.003095598891377449, -0.0009015309624373913, -0.2044292390346527, -8.380061626667157e-05, -0.03538568317890167, -0.07031475752592087, -0.00042000532266683877, -0.0018594847060739994, -0.0010991015005856752, -0.24507133662700653, -0.3223050534725189, -0.00021824838768225163, -0.4024907946586609, -0.0018500846344977617, -2.1801044940948486, -0.0010968389688059688, -0.07327503710985184, -2.539125671319198e-05, -0.004320335108786821, -0.13616861402988434, -0.013518339022994041, -0.0006179092451930046, -0.19679221510887146, -0.00044907975825481117, -0.00015198028995655477, -0.00041797960875555873, -0.0005544078885577619, -0.03616977110505104, -2.1576648578047752e-05, -5.340433563105762e-05, -0.012934594415128231, -0.000285584683297202, -0.16995787620544434, -0.00012361239350866526, -0.005119310691952705, -0.1276460886001587, -0.002062933286651969, -0.06229059398174286, -0.08705096691846848, -8.34461570775602e-06, -0.0001284993631998077, -0.0017810686258599162, -0.009357640519738197, -1.1895887851715088, -1.311301275563892e-06, -2.264974000354414e-06, -0.00012683063687290996, -0.0001392267586197704, -0.06960903853178024], "finish_reason": "stop"}], "metrics": {"energy": 235.09275457000734, "energy_per_token": 1.1412269639320745, "time": 8.834464, "time_per_token": 0.04288574757281554}}
{"outputs": [{"text": "if seed is not None:\n        random.seed(seed)\n    special_chars = re.compile(\"[~`!@#$%^&*()+=|{}'\\\";:,<>?/.-]\")\n    # remove special characters\n    text = special_chars.sub(\"\", text)\n\n    # remove extra spaces and tabs\n    text = re.sub(r\"\\s+\", \"_\", text)\n\n    # randomize casing\n    text = \"\".join(\n        random.choice((s.upper(), s.lower()))\n        for s in text\n        if random.randint(0, 1) <= 0.5\n    )\n\n    return text", "tokens": ["if", " seed", " is", " not", " None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "special", "_", "chars", " =", " re", ".", "compile", "(", "\"", "[", "~", "`", "!", "@", "#", "$", "%^", "&", "*", "()", "+=", "|", "{}", "'", "\\\";", ":", ",", "<", ">", "?", "/", ".", "-", "]\"", ")", "\n", "    ", "#", " remove", " special", " characters", "\n", "    ", "text", " =", " special", "_", "chars", ".", "sub", "(", "\"", "\"", ",", " text", ")", "\n", "\n", "    ", "#", " remove", " extra", " spaces", " and", " tabs", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "\"", "\\", "s", "+", "\"", ",", " \"", "_", "\"", ",", " text", ")", "\n", "\n", "    ", "#", " random", "ize", " c", "asing", "\n", "    ", "text", " =", " \"", "\"", ".", "join", "(", "\n", "        ", "random", ".", "choice", "((", "s", ".", "upper", "()", ",", " s", ".", "lower", "()))", "\n", "        ", "for", " s", " in", " text", "\n", "        ", "if", " random", ".", "rand", "int", "(", "0", ",", " ", "1", ")", " <=", " ", "0", ".", "5", "\n", "    ", ")", "\n", "\n", "    ", "return", " text", "\n", "\n", "def"], "logprobs": [-1.5533252954483032, -0.23924091458320618, -0.3202337920665741, -0.0749279335141182, -5.221230458118953e-05, -0.013791623525321484, -0.011701400391757488, -0.0019437245791777968, -0.033286888152360916, -0.001546973828226328, -0.00688466290012002, -0.0002814135223161429, -0.004104167688637972, -0.0013243722496554255, -0.009806198067963123, -0.9585247039794922, -2.188234806060791, -0.12092278897762299, -0.20135816931724548, -0.043956611305475235, -1.2924978733062744, -1.1205610462639015e-05, -0.4120557904243469, -0.49719902873039246, -2.5865068435668945, -0.08628107607364655, -2.9646854400634766, -0.4740697145462036, -0.21147342026233673, -0.10098770260810852, -0.007335040718317032, -0.023255346342921257, -0.007977528497576714, -0.002213886706158519, -0.05522968992590904, -0.04276624694466591, -2.041621685028076, -0.8639522790908813, -0.153964564204216, -3.4074740409851074, -1.5801903009414673, -1.7200736999511719, -0.4998226761817932, -0.8054925799369812, -0.10125307738780975, -0.17207500338554382, -0.9746073484420776, -0.8288211822509766, -0.22094443440437317, -0.4902344048023224, -0.008690512739121914, -0.031083721667528152, -0.093098483979702, -3.780322313308716, -2.884869337081909, -0.47026655077934265, -0.08236891031265259, -0.5417057275772095, -0.0015210260171443224, -0.23069855570793152, -0.06088320165872574, -0.4279293119907379, -0.0002802217786666006, -2.264974000354414e-06, -5.4596363042946905e-05, -0.000456109904916957, -1.333815336227417, -0.10105904191732407, -0.17476144433021545, -0.0003880701260641217, -0.004513552878051996, -0.03930721431970596, -0.01776907593011856, -1.5272243022918701, -0.00031537804170511663, -0.026181189343333244, -1.982870101928711, -2.914574384689331, -0.4315091669559479, -1.8521288633346558, -0.7541502714157104, -0.3254803717136383, -0.0004021312633994967, -0.033878348767757416, -0.0092385895550251, -0.7601431012153625, -0.000458254711702466, -0.0026780238840729, -0.03156018257141113, -0.09016208350658417, -0.13518866896629333, -0.08479174971580505, -0.008447510190308094, -0.17742092907428741, -0.013466707430779934, -6.329813186312094e-05, -0.051989227533340454, -1.1691150665283203, -0.0032834685407578945, -0.0019154074834659696, -0.0015938685974106193, -0.017901049926877022, -0.033083003014326096, -0.20553168654441833, -0.00038985759601928294, -0.03605904430150986, -1.3318586349487305, -0.043669309467077255, -0.2061159312725067, -0.0005287918029353023, -0.12588371336460114, -0.0014096095692366362, -2.121838092803955, -0.043518323451280594, -0.42959901690483093, -0.08124507963657379, -0.04874822497367859, -0.00025686301523819566, -0.2668209671974182, -0.40515822172164917, -0.004266802221536636, -0.4780002534389496, -0.0015900599537417293, -0.038186345249414444, -1.2145919799804688, -3.7053914070129395, -0.013932352885603905, -0.1530708372592926, -0.0077787102200090885, -0.04595903679728508, -0.0028505190275609493, -0.1326027661561966, -0.0012175773736089468, -0.10649095475673676, -0.991459846496582, -0.004809240810573101, -2.265658378601074, -0.02091694436967373, -0.0006287504802457988, -0.1816820353269577, -0.15631674230098724, -0.8433606028556824, -0.01465426292270422, -0.12413979321718216, -0.00011002412065863609, -2.0956993103027344, -0.030456839129328728, -0.00032276666024699807, -0.05960501730442047, -0.00018702188390307128, -0.010513869114220142, -0.17918714880943298, -0.7422668933868408, -3.781592845916748, -0.010136554017663002, -0.2500182092189789, -0.012014641426503658, -0.0059691970236599445, -0.15720349550247192, -0.012110278010368347, -0.0003003622987307608, -0.009385629557073116, -0.21747595071792603, -0.0005422552349045873, -0.06471022218465805, -0.015612870454788208, -0.48278936743736267, -0.005918003618717194, -0.9435027837753296], "finish_reason": "stop"}], "metrics": {"energy": 207.77416003417963, "energy_per_token": 1.2294328996105304, "time": 7.156188, "time_per_token": 0.042344307692307695}}
{"outputs": [{"text": "special_chars = string.punctuation + string.whitespace + \"\\n\\r\\t\"\n    preprocessed_text = \"\"\n    for c in text:\n        if c in special_chars:\n            preprocessed_text += c.replace(c, '_')\n        else:\n            preprocessed_text += c\n    random.seed(seed)\n    cased = [char.upper() for char in preprocessed_text]\n    uncased = [char.lower() for char in preprocessed_text]\n    shuffled = random.sample(preprocessed_text, len(preprocessed_text))\n    random_case = [random.choice([cased, uncased, shuffled])[i] for i in range(len(preprocessed_text))]\n    return \"\".join(random_case)", "tokens": ["special", "_", "chars", " =", " string", ".", "punct", "uation", " +", " string", ".", "wh", "ites", "pace", " +", " \"", "\\", "n", "\\", "r", "\\", "t", "\"", "\n", "    ", "pre", "processed", "_", "text", " =", " \"", "\"", "\n", "    ", "for", " c", " in", " text", ":", "\n", "        ", "if", " c", " in", " special", "_", "chars", ":", "\n", "            ", "pre", "processed", "_", "text", " +=", " c", ".", "replace", "(", "c", ",", " '_", "')", "\n", "        ", "else", ":", "\n", "            ", "pre", "processed", "_", "text", " +=", " c", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "c", "ased", " =", " [", "char", ".", "upper", "()", " for", " char", " in", " pre", "processed", "_", "text", "]", "\n", "    ", "unc", "ased", " =", " [", "char", ".", "lower", "()", " for", " char", " in", " pre", "processed", "_", "text", "]", "\n", "    ", "sh", "uff", "led", " =", " random", ".", "sample", "(", "pre", "processed", "_", "text", ",", " len", "(", "pre", "processed", "_", "text", "))", "\n", "    ", "random", "_", "case", " =", " [", "random", ".", "choice", "([", "c", "ased", ",", " unc", "ased", ",", " shuff", "led", "])", "[", "i", "]", " for", " i", " in", " range", "(", "len", "(", "pre", "processed", "_", "text", "))", "]", "\n", "    ", "return", " \"", "\"", ".", "join", "(", "random", "_", "case", ")", "\n", "\n", "if"], "logprobs": [-2.270883083343506, -0.10224521160125732, -0.22019723057746887, -0.060610707849264145, -0.7741119861602783, -6.83045873302035e-05, -0.0014385362155735493, -6.97350042173639e-05, -0.8337593078613281, -0.4414919316768646, -0.0009369035833515227, -0.08833319693803787, -3.266281055402942e-05, -7.128461584215984e-05, -1.116593837738037, -1.0038597583770752, -0.3143511116504669, -0.19924643635749817, -0.5854082107543945, -1.1442978382110596, -0.3355511724948883, -0.04252544417977333, -0.04393037036061287, -0.04941083490848541, -0.07215579599142075, -3.535731792449951, -0.27518951892852783, -0.24863246083259583, -0.07903251051902771, -0.0080467090010643, -0.9503434896469116, -0.0643203929066658, -0.6974260807037354, -0.48893874883651733, -1.005094051361084, -2.560311794281006, -0.0010024051880463958, -0.012249006889760494, -0.0077662901021540165, -0.0018678138731047511, -0.008142017759382725, -0.05212615430355072, -0.013082150369882584, -0.253050833940506, -0.03103714995086193, -1.4305104514278355e-06, -6.6756979322235566e-06, -0.08508926630020142, -0.008429423905909061, -0.0004996005445718765, -0.08136113733053207, -0.00013767725613433868, -7.188061863416806e-05, -0.0001280225842492655, -0.0036669413093477488, -2.4451632499694824, -1.8994425535202026, -0.3680979609489441, -0.04005639627575874, -0.06666877120733261, -0.00029047083808109164, -1.7299773693084717, -0.5894834399223328, -0.13327480852603912, -0.009299533441662788, -0.5614781379699707, -2.5629668016335927e-05, -0.0037585110403597355, -0.00047803416964598, -0.0846426859498024, -0.0005165196489542723, -0.00020656836568377912, -2.6940935640595853e-05, -0.00022754464589525014, -0.03161758556962013, -0.1212615966796875, -0.2814909517765045, -1.975287675857544, -0.027114776894450188, -0.028830522671341896, -0.0003415954706724733, -0.0036893889773637056, -0.008127591572701931, -0.03616758808493614, -0.016162797808647156, -3.1474812030792236, -0.769719123840332, -1.6944667100906372, -1.5074472427368164, -2.734170913696289, -0.3431068956851959, -0.0701485201716423, -0.007893085479736328, -2.454801082611084, -0.008438998833298683, -0.0019220703979954123, -0.027930185198783875, -0.00017355366435367614, -3.8980677345534787e-05, -2.264974000354414e-06, -1.7327722311019897, -0.18260140717029572, -0.01623540185391903, -1.8032424449920654, -0.0021174170542508364, -0.011494600214064121, -0.010313784703612328, -0.01028416957706213, -0.009168782271444798, -0.016832461580634117, -0.00048339602653868496, -0.0015679220668971539, -0.00018809456378221512, -3.421248038648628e-05, -0.025304846465587616, -0.00015793983766343445, -7.712543447269127e-05, 0.0, -0.0018887552432715893, -0.0013158005895093083, -0.031262364238500595, -3.480544090270996, -0.026018597185611725, -0.007901010103523731, -0.013450946658849716, -0.9347005486488342, -0.0001998939987970516, -0.3383847177028656, -0.002126457868143916, -0.119461789727211, -0.00012754580529872328, -2.3364747903542593e-05, -1.0728830375228426e-06, -0.002478862414136529, -0.04797041788697243, -3.075552376685664e-05, -0.0011995985405519605, -8.713819261174649e-05, -4.8874615458771586e-05, -1.1920928244535389e-07, -0.0001740304142003879, -0.004163288976997137, -0.10830558091402054, -1.4002963304519653, -1.3182495832443237, -2.346076011657715, -0.03626921772956848, -0.2954827547073364, -0.5361958146095276, -0.000854841957334429, -0.040597740560770035, -0.16456086933612823, -0.08164989948272705, -0.0029162520077079535, -0.000774917658418417, -0.014920661225914955, -1.311301275563892e-06, -0.01615423522889614, -0.0002693767019081861, -4.529942543740617e-06, -0.00757346348837018, -0.44075101613998413, -0.6765152215957642, -0.006335413083434105, -0.07459662109613419, -0.0007581220706924796, -0.3512611985206604, -0.0027594605926424265, -5.566918844124302e-05, -0.0013324677711352706, -0.00015484087634831667, -0.04236343130469322, -9.63164638960734e-05, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.0002616301644593477, -0.0010156240314245224, -0.0014397265622392297, -0.07306540012359619, -1.3241517543792725, -0.594451904296875, -0.01372460275888443, -5.2569914259947836e-05, -0.00021371940965764225, -0.0078108832240104675, -0.009901692159473896, -0.01892814226448536, -0.00017629499780014157, -0.3492874205112457, -0.31224340200424194, -0.017349382862448692, -1.5016188621520996], "finish_reason": "stop"}], "metrics": {"energy": 224.00273592758177, "energy_per_token": 1.1666809162894884, "time": 8.199288, "time_per_token": 0.042704624999999996}}
{"outputs": [{"text": "charset = set(string.punctuation)\n    if seed:\n        random.seed(seed)\n    text = ''.join(c if c not in charset else '_' if random.random() < 0.5 else c.upper() for c in text)\n    text = re.sub(' +', '_', text)\n    return text", "tokens": ["char", "set", " =", " set", "(", "string", ".", "punct", "uation", ")", "\n", "    ", "if", " seed", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "text", " =", " ''", ".", "join", "(", "c", " if", " c", " not", " in", " charset", " else", " '_", "'", " if", " random", ".", "random", "()", " <", " ", "0", ".", "5", " else", " c", ".", "upper", "()", " for", " c", " in", " text", ")", "\n", "    ", "text", " =", " re", ".", "sub", "('", " +", "'", ",", " '_", "'", ",", " text", ")", "\n", "    ", "return", " text", "\n", "\n", "if"], "logprobs": [-4.265456676483154, -2.2024295330047607, -0.04366679862141609, -1.9772874116897583, -0.03347412496805191, -0.3406590223312378, -0.0001829695247579366, -0.22652338445186615, -2.8490614567999728e-05, -0.26530665159225464, -0.343443900346756, -0.08496849983930588, -2.7053613662719727, -0.10411664098501205, -1.3330636024475098, -0.01688813976943493, -0.0032131255138665438, -0.0721571296453476, -0.002221261151134968, -0.0079988157376647, -0.0005161621957086027, -0.00803216453641653, -0.002144657773897052, -0.011395839974284172, -0.5350853204727173, -1.6431982517242432, -0.08003702014684677, -1.7441065311431885, -0.0024737492203712463, -0.0002466136065777391, -0.15332940220832825, -0.6755379438400269, -0.2707628309726715, -0.015381286852061749, -0.21347428858280182, -8.106198947643861e-06, -0.024231113493442535, -0.007985570468008518, -0.7213671207427979, -0.001177809201180935, -2.952735185623169, -1.3355200290679932, -0.000129691296024248, -0.2231817990541458, -0.0016915787709876895, -0.3191922903060913, -0.0015185264637693763, -0.06258457899093628, -5.364403477869928e-06, -0.005811342969536781, -0.01995196007192135, -0.1557053178548813, -0.01565488427877426, -0.09200198948383331, -0.0003044141922146082, -0.07954788208007812, -0.00042429505265317857, -0.0003357561945449561, -0.0066941529512405396, -0.09684000164270401, -0.14604602754116058, -0.03391603007912636, -0.6502624154090881, -0.009271660819649696, -0.48087847232818604, -2.634490556374658e-05, -0.00774523476138711, -1.3761193752288818, -1.671384572982788, -0.07557155191898346, -0.0001394651480950415, -0.7771735191345215, -0.00038509105797857046, -0.0069185225293040276, -0.04458706080913544, -0.06870106607675552, -0.14137937128543854, -0.015720603987574577, -0.38933536410331726, -0.028916575014591217, -0.6183257102966309, -0.012446349486708641, -1.3295361995697021], "finish_reason": "stop"}], "metrics": {"energy": 104.96221959114072, "energy_per_token": 1.2646050553149484, "time": 3.380879, "time_per_token": 0.04073348192771085}}
{"outputs": [{"text": "# Remove all special characters\n    text = re.sub(r\"[^A-Za-z0-9]+\", \" \", text.upper())\n\n    # Replace spaces with underscores\n    text = text.replace(\" \", \"_\" * (len(text.split()) - 1))\n\n    # Randomly convert uppercase characters to lowercase\n    if seed is not None:\n        random.seed(seed)\n    text = \"\".join(\n        c if c.islower() or random.random() < 0.5 else c.lower() for c in text\n    )\n\n    return text", "tokens": ["#", " Remove", " all", " special", " characters", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "\"", "[", "^", "A", "-", "Z", "a", "-", "z", "0", "-", "9", "]+", "\"", ",", " \"", " \"", ",", " text", ".", "upper", "())", "\n", "\n", "    ", "#", " Replace", " spaces", " with", " undersc", "ores", "\n", "    ", "text", " =", " text", ".", "replace", "(", "\"", " \"", ",", " \"", "_", "\"", " *", " (", "len", "(", "text", ".", "split", "())", " -", " ", "1", "))", "\n", "\n", "    ", "#", " Random", "ly", " convert", " upper", "case", " characters", " to", " lower", "case", "\n", "    ", "if", " seed", " is", " not", " None", ":", "\n", "        ", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "text", " =", " \"", "\"", ".", "join", "(", "\n", "        ", "c", " if", " c", ".", "is", "lower", "()", " or", " random", ".", "random", "()", " <", " ", "0", ".", "5", " else", " c", ".", "lower", "()", " for", " c", " in", " text", "\n", "    ", ")", "\n", "\n", "    ", "return", " text", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.2803798913955688, -2.4120497703552246, -2.8926491737365723, -0.5939391851425171, -0.014333386905491352, -1.4754769802093506, -0.0016813441179692745, -0.17123499512672424, -0.03345798701047897, -0.25170162320137024, -3.325883881188929e-05, -0.008245001547038555, -0.0730057880282402, -0.03280767425894737, -1.5754793882369995, -0.12309981137514114, -1.0224252939224243, -2.03816294670105, -2.13382354559144e-05, -0.0008131535141728818, -0.0011019593803212047, -9.536738616588991e-07, -6.437280717364047e-06, -0.2525397837162018, -3.45700973412022e-05, -9.285972191719338e-05, -1.1779265403747559, -0.006763659417629242, -5.543078441405669e-05, -0.12954121828079224, -1.609682321548462, -0.00016318420239258558, -0.007001626770943403, -2.1494977474212646, -3.130887031555176, -0.1077452078461647, -0.14915479719638824, -0.4002673625946045, -0.00026890001026913524, -0.004867252893745899, -0.7266182899475098, -0.7204142808914185, -0.7881926894187927, -0.6573848128318787, -0.0001597276859683916, -0.10775087773799896, -0.0002449450839776546, -0.024390624836087227, -0.004437955562025309, -0.40969571471214294, -0.0003275334893260151, -0.02204904891550541, -0.10155510902404785, -0.0029589226469397545, -0.01290576346218586, -4.5060096454108134e-05, -0.614647388458252, -0.24912841618061066, -0.005690090823918581, -1.7976597547531128, -1.8543756008148193, -0.5809210538864136, -0.003075157990679145, -0.33707261085510254, -1.4956128597259521, -0.09123677015304565, -1.1536269187927246, -0.029654715210199356, -0.005547485779970884, -0.010123573243618011, -0.05279083177447319, -0.018168224021792412, -0.02666730247437954, -0.00034898388548754156, -0.025967489928007126, -0.2774431109428406, -1.2416249513626099, -1.6681185960769653, -2.1538140773773193, -0.04399916157126427, -0.9383957982063293, -0.23395921289920807, -0.020960839465260506, -0.006133779883384705, -0.7005829215049744, -0.0007316772826015949, -2.0909276008605957, -0.021572118625044823, -0.2653694748878479, -0.14688891172409058, -3.45700973412022e-05, -0.011873406358063221, -0.016824256628751755, -0.0016193384071812034, -0.11742915958166122, -0.009717068634927273, -0.010505493730306625, -0.00015293381875380874, -0.0031251898035407066, -0.0014803176745772362, -0.015599725767970085, -0.4679989814758301, -1.9285707473754883, -0.028655385598540306, -0.3827897012233734, -0.05312661826610565, -0.0072716097347438335, -0.00019762947340495884, -0.30974099040031433, -0.590644896030426, -0.002520362613722682, -2.153670072555542, -0.5203264951705933, -2.2316508293151855, -0.41039764881134033, -0.1360301375389099, -0.15599919855594635, -0.0010440857149660587, -0.37801995873451233, -0.23381033539772034, -4.827859811484814e-05, -0.34652745723724365, -0.0005995621904730797, -0.3205530643463135, -0.0018610315164551139, -0.009118697606027126, -6.9141146923357155e-06, -0.005138049367815256, -0.01080920360982418, -0.06088365241885185, -0.0007135705673135817, -0.395591139793396, -5.7338023907504976e-05, -0.371925413608551, -9.893881360767409e-05, -0.00028010259848088026, -0.017709815874695778, -0.023809585720300674, -0.0005448763840831816, -0.00010990492592100054, -0.007209357805550098, -0.14657628536224365, -0.0013773487880825996, -0.03748524934053421, -0.009170553646981716, -1.693402647972107, -1.6689286894688848e-06, -1.0728830375228426e-06, -0.0003349220205564052, -7.521823135903105e-05, -0.10397063940763474], "finish_reason": "stop"}], "metrics": {"energy": 162.40012585830692, "energy_per_token": 1.0754975222404433, "time": 6.3148704, "time_per_token": 0.04182033377483444}}
