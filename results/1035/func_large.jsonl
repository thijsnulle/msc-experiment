{"outputs": [{"text": "# Split the feature and target into training and testing sets\n    feature_train, feature_test, target_train, target_test = train_test_split(feature, target, test_size=0.3, random_state=42)\n\n    # Create the logistic regression model\n    model = LogisticRegression()\n\n    # Fit the model on the training data\n    model.fit(feature_train.to_frame(), target_train)\n\n    # Predict the target for the test set\n    target_pred = model.predict(feature_test.to_frame())\n\n    # Create the confusion matrix\n    cm = confusion_matrix(target_test, target_pred)\n\n    # Plot the confusion matrix\n    ax = sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')\n    ax.set_title('Confusion Matrix')\n    ax.set_xlabel('Predicted')\n    ax.set_ylabel('True')\n\n    return cm, ax", "tokens": ["#", " Split", " the", " feature", " and", " target", " into", " training", " and", " testing", " sets", "\n", "    ", "feature", "_", "train", ",", " feature", "_", "test", ",", " target", "_", "train", ",", " target", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " the", " logistic", " regression", " model", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "\n", "    ", "#", " Fit", " the", " model", " on", " the", " training", " data", "\n", "    ", "model", ".", "fit", "(", "feature", "_", "train", ".", "to", "_", "frame", "()", ",", " target", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " the", " target", " for", " the", " test", " set", "\n", "    ", "target", "_", "pred", " =", " model", ".", "predict", "(", "feature", "_", "test", ".", "to", "_", "frame", "())", "\n", "\n", "    ", "#", " Create", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "target", "_", "test", ",", " target", "_", "pred", ")", "\n", "\n", "    ", "#", " Plot", " the", " confusion", " matrix", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "cm", ",", " annot", "=", "True", ",", " fmt", "='", "d", "'", ",", " c", "map", "='", "Bl", "ues", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Pred", "icted", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "True", "')", "\n", "\n", "    ", "return", " cm", ",", " ax", "\n", "\n", "#"], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -1.6235783100128174, -0.0161175187677145, -0.007764989044517279, -0.5850949883460999, -0.2149098664522171, -0.008438643999397755, -0.07814628630876541, -0.006008893717080355, -0.052770137786865234, -0.005128324497491121, -1.9531710147857666, -0.008064920082688332, -0.0026228572241961956, -0.0016445695655420423, -0.0012528197839856148, -1.5139465176616795e-05, -0.0010682597057893872, -0.0019074357114732265, -0.001835091970860958, -3.325883881188929e-05, -4.23184028477408e-05, -0.00011431517486926168, -0.00033623288618400693, -1.1801649634435307e-05, -2.7179348762729205e-05, -0.002833639271557331, -0.03222965821623802, -1.0967194612021558e-05, -1.1920922133867862e-06, -1.0728830375228426e-06, -5.960462772236497e-07, -0.00021491125517059118, -0.19174014031887054, -0.00712307495996356, -0.004379206337034702, -0.03442627191543579, -0.03695634752511978, -1.847726889536716e-05, -8.344646857949556e-07, -0.008372445590794086, -0.005939926952123642, -4.768258077092469e-05, -0.9437244534492493, -0.38408219814300537, -0.059134770184755325, -2.7418097943154862e-06, -7.152555099310121e-07, -0.0028410095255821943, -0.4052552878856659, -0.019176680594682693, -0.015860239043831825, -0.010137143544852734, -0.08791066706180573, -0.0005390383303165436, -0.001522930571809411, -0.6895356178283691, -2.3182225227355957, -0.040085602551698685, -0.0004804172203876078, -0.005762393586337566, -0.6539684534072876, -0.00018404220463708043, -0.8775463104248047, -0.0021586944349110126, -0.00014935807848814875, -9.536738616588991e-07, -1.1920928244535389e-07, -8.344646857949556e-07, -0.2130316197872162, -0.004528624005615711, -0.047377001494169235, -0.0001908358681248501, -0.00027247529942542315, -0.2904934883117676, -0.0008636558777652681, -0.014108794741332531, -0.6551517844200134, -0.003903508884832263, -0.010394483804702759, -0.02028166875243187, -0.006082713603973389, -9.297892393078655e-05, -0.0011588770430535078, -0.0016961010405793786, -8.4638240878121e-06, -1.2874520507466514e-05, -0.2026946246623993, -0.012851745821535587, -0.0002640137099660933, -0.026874935254454613, -0.31365740299224854, -4.172316494077677e-06, -0.9933992624282837, -0.001430917764082551, -0.0036415234208106995, -0.0033150739036500454, -6.48477507638745e-05, -1.311301275563892e-06, -0.009991158731281757, -0.002925166627392173, -0.003082882845774293, -0.00022349244682118297, -0.0005026984144933522, -0.2961307764053345, -0.0010527789127081633, -0.05815548822283745, -0.089520163834095, -0.18019571900367737, -0.002291911980137229, -0.05767578259110451, -0.06647258251905441, -0.019933613017201424, -0.00018308870494365692, -0.17350907623767853, -5.245195097813848e-06, -0.025867825374007225, -0.19159004092216492, -0.0006623458466492593, -1.7762025890988298e-05, -5.125986263010418e-06, -0.0013335392577573657, -0.00027998341829515994, -1.5616295058862306e-05, -1.3232143828645349e-05, -0.0003960540343541652, -0.00048101297579705715, -1.7881377516459906e-06, -2.2291887944447808e-05, -0.00015066919149830937, -0.001722401357255876, -0.0029181537684053183, -0.0003066784702241421, -0.0014969820622354746, -0.48608872294425964, -0.18261560797691345, -0.00017593742813915014, -6.19869097135961e-05, -0.06741791218519211, -0.00013207517622504383, -0.047293320298194885, -0.007617355789989233, -0.0006571040721610188, -1.7881377516459906e-06, -2.932505594799295e-05, -2.992108420585282e-05, -0.0008440031087957323, -7.235741941258311e-05, -0.0005853846669197083, -0.0014543681172654033, -0.00042798896902240813, -6.318072337307967e-06, -1.4305104514278355e-06, -0.01908697932958603, -0.0020487764850258827, -0.030062567442655563, -0.0005511910421773791, -0.005691157653927803, -0.5236513018608093, -0.0020418763160705566, -0.0013436584267765284, -4.911301948595792e-05, -0.0993150845170021, -0.0016019619069993496, -1.2047786712646484, -0.005768556613475084, -1.4683775901794434, -0.00024470672360621393, -0.00014554394874721766, -0.00019786784832831472, -2.264974000354414e-06, -0.0002464944263920188, -0.003796157892793417, -0.01829920895397663, -0.014707008376717567, -0.0016793209360912442, -0.0012347224401310086, -0.002740082796663046, -0.09012298285961151, -0.09282463788986206, -0.020566191524267197, -0.1677442491054535, -4.7205765440594405e-05, -0.08619369566440582, -0.04340018704533577, -0.028087947517633438, -0.02844267711043358, -1.7881377516459906e-06, -0.4010853171348572, -0.0069021848030388355, -0.052906956523656845, -0.03134254366159439, -0.0005958688561804593, -0.011060004122555256, -0.007421305403113365, -0.09796363860368729, -0.017750220373272896, -0.00036090059438720345, -7.510157047363464e-06, -0.0012717501958832145, -0.020796693861484528, -0.0010239601833745837, -0.07580198347568512, -0.02829180657863617, -5.23315102327615e-05, -0.0004152389301452786, -0.0018403275171294808, -0.002540695946663618, -0.00042798896902240813, -0.00029869386344216764, -0.0012981806648895144, -0.031198235228657722, -3.8265450712060556e-05, -6.592056161025539e-05, -3.266281055402942e-05, -4.410734163684538e-06, -6.890059739816934e-05, -2.3841830625315197e-06, -0.0010145523119717836, -1.2636104656849056e-05, -0.5113607048988342, -0.00039498155820183456, -5.495397272170521e-05, -0.36174049973487854, -0.00031919151660986245, -0.2854102849960327, -0.07893436402082443, -0.0017829725984483957, -0.001190311275422573, -0.16950930655002594, -0.02844650112092495, -1.5232253074645996], "finish_reason": "stop"}], "metrics": {"energy": 787.9419108963015, "energy_per_token": 3.367273123488468, "time": 19.763517, "time_per_token": 0.08445947435897436}}
{"outputs": [{"text": "# Split the data into training and testing sets\n    x_train, x_test, y_train, y_test = train_test_split(feature, target, test_size=0.2, random_state=42)\n    x_train = x_train.values.reshape(-1, 1) # Convert to 2D numpy array\n    x_test = x_test.values.reshape(-1, 1) # Convert to 2D numpy array\n    # Train a logistic regression model\n    model = LogisticRegression()\n    model.fit(x_train, y_train)\n    # Predict the target variable for the test set\n    y_pred = model.predict(x_test)\n    # Calculate the confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n    # Plot the confusion matrix\n    ax = plt.figure()\n    ax.set_title('Confusion Matrix')\n    plt.imshow(cm, cmap=plt.cm.Blues)\n    plt.colorbar()\n    tick_marks = np.arange(2)\n    ", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " testing", " sets", "\n", "    ", "x", "_", "train", ",", " x", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "x", "_", "train", " =", " x", "_", "train", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", " #", " Convert", " to", " ", "2", "D", " numpy", " array", "\n", "    ", "x", "_", "test", " =", " x", "_", "test", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", " #", " Convert", " to", " ", "2", "D", " numpy", " array", "\n", "    ", "#", " Train", " a", " logistic", " regression", " model", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "x", "_", "train", ",", " y", "_", "train", ")", "\n", "    ", "#", " Pred", "ict", " the", " target", " variable", " for", " the", " test", " set", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "x", "_", "test", ")", "\n", "    ", "#", " Calculate", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "    ", "#", " Plot", " the", " confusion", " matrix", "\n", "    ", "ax", " =", " plt", ".", "figure", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "')", "\n", "    ", "plt", ".", "im", "show", "(", "cm", ",", " c", "map", "=", "plt", ".", "cm", ".", "Bl", "ues", ")", "\n", "    ", "plt", ".", "color", "bar", "()", "\n", "    ", "tick", "_", "marks", " =", " np", ".", "ar", "ange", "(", "2", ")", "\n", "    "], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -0.27506178617477417, -0.03995629400014877, -0.334110289812088, -0.015279857441782951, -0.15630502998828888, -0.0037797691766172647, -0.052109748125076294, -0.005806128028780222, -1.8236653804779053, -0.015810607001185417, -0.002297620987519622, -0.0012902038870379329, -0.006126197054982185, -9.762764238985255e-05, -0.0035717994906008244, -0.001335444045253098, -0.0023248568177223206, -6.758938252460212e-05, -3.9934315282152966e-05, -0.00022659118985757232, -0.0002169373765354976, -1.2993727978027891e-05, -3.4927710657939315e-05, -0.0014773417497053742, -0.003453364595770836, -1.3947389561508317e-05, -3.2186455882765586e-06, -1.1920922133867862e-06, -2.3841855067985307e-07, -0.00012766500003635883, -0.09993845224380493, -0.07358219474554062, -0.008948815986514091, -0.09009531140327454, -0.07440386712551117, -2.8729025871143676e-05, -2.0265558760002023e-06, -0.04469570890069008, -0.021492665633559227, -0.00010632903286023065, -0.5879391431808472, -0.34414100646972656, -0.035038817673921585, -1.7881377516459906e-06, -5.960462772236497e-07, -0.003585459664463997, -0.5535264611244202, -0.03274456784129143, -0.022263703867793083, -0.010009923949837685, -2.0605478286743164, -2.8185012340545654, -0.0033324207179248333, -0.00370352272875607, -0.04211133345961571, -0.216705784201622, -2.0265558760002023e-06, -6.318072337307967e-06, -0.004453977569937706, -2.274526596069336, -0.007646339945495129, -0.0003228858404327184, 0.0, -0.0015893458621576428, -3.2305197237292305e-05, -0.00025078488397412, -0.0784284844994545, -1.6569954823353328e-05, -0.00011681827891152352, -2.5184338092803955, -1.243802785873413, -1.2013683319091797, -0.26421135663986206, -0.004746835678815842, -0.03845342993736267, -2.7713754177093506, -0.004834866151213646, -0.20834727585315704, -0.013256389647722244, -0.022099189460277557, -1.645074735279195e-05, -0.0008836655179038644, -0.003552675014361739, -0.0017025275155901909, -1.9073468138230965e-06, -2.9802276912960224e-06, -7.199982064776123e-05, -0.0006400682032108307, -0.0002494739310350269, -0.00011503035057103261, 0.0, -0.00010263393050990999, -9.536738616588991e-07, -4.470248313737102e-05, -0.002960705431178212, -1.0728830375228426e-06, -2.8371408916427754e-05, -0.26317325234413147, -0.00373832113109529, -0.0006498370785266161, -0.0008420973899774253, -0.0002543602604418993, -7.86750388215296e-05, -0.0009638193296268582, -0.0004920940846204758, -0.0008817598572932184, -1.1801928281784058, -0.13670799136161804, -0.5962786674499512, -2.367901563644409, -0.02104383520781994, -0.000534868217073381, -0.0016680150292813778, -0.4868636727333069, -0.0004704084130935371, -0.656082034111023, -0.0029666482005268335, -0.0002933310461230576, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.6689286894688848e-06, -0.1244627833366394, -0.11468654125928879, -0.0003947432560380548, -0.0023292573168873787, -0.0012837749673053622, -4.410734163684538e-06, -1.811964830267243e-05, -0.0005293875001370907, -0.004596619866788387, -1.680836794548668e-05, -0.0031533539295196533, -0.0024492524098604918, -5.638440416078083e-05, -1.0728830375228426e-06, -0.0021421597339212894, -0.0022136487532407045, -0.039824794977903366, -0.019254213199019432, -0.36778467893600464, -0.0009552444680593908, -0.11834511905908585, -0.13925136625766754, -2.2170989513397217, -0.22257719933986664, -0.011508624069392681, -0.15300405025482178, -0.039717793464660645, -0.020416932180523872, -0.0001174142598756589, -0.04563518241047859, -7.56950321374461e-05, -0.008807620033621788, -0.010646096430718899, -0.0027104804757982492, -1.9311717551317997e-05, -3.576272320060525e-06, -0.00018165845540352166, -7.009260298218578e-05, -1.2040065485052764e-05, -3.3378546504536644e-06, -0.0002053765201708302, -0.006041479296982288, -0.01407188642770052, -0.006456704810261726, -2.3488500118255615, -0.0413370355963707, -0.00047338721924461424, -8.523101132595912e-05, -0.024470660835504532, -0.00016664070426486433, -0.05540745332837105, -0.005741058848798275, -0.0008954567601904273, -8.344646857949556e-07, -1.6689160474925302e-05, -3.6954195820726454e-05, -0.0010026433737948537, -2.3841855067985307e-07, -0.002741033909842372, -0.0006463822210207582, -0.000593962671700865, -9.536738616588991e-07, -4.768370445162873e-07, -0.015202956274151802, -0.00997180212289095, -0.06642384082078934, -0.02617933228611946, -0.14291289448738098, -0.007429943419992924, -0.0006092122639529407, -7.021180499577895e-05, -0.09277617931365967, -0.0013184197014197707, -0.9770097732543945, -0.00808230321854353, -0.18834692239761353, -9.333651541965082e-05, -2.838887929916382, -0.5781657099723816, -0.09474336355924606, -0.002044136868789792, -0.09043078124523163, -0.20910687744617462, -0.19163502752780914, -0.0016771787777543068, -0.005259368102997541, -0.18321427702903748, -0.0012641304638236761, -3.3378546504536644e-06, -0.0065410323441028595, -0.1889590471982956, -0.016574779525399208, -0.003331351326778531, -0.5090726613998413, -0.0005403488758020103, -1.745592713356018, -2.6464111215318553e-05, -0.0005641775787808001, -0.0003541081096045673, -0.14399276673793793, -0.16285856068134308, -7.867782187531702e-06, -0.29217755794525146, -0.006627246737480164, -2.610649426060263e-05, -0.0007207180024124682, -4.23184028477408e-05, -0.2355721890926361, -1.1801649634435307e-05, -0.2883469760417938, -0.02341105416417122, -0.003175456775352359, -0.08079799264669418, -4.768360213347478e-06, -0.33192873001098633, 0.0, -0.013211686164140701, -0.005426320247352123, -0.0026974028442054987, -0.5110754370689392, -0.00012110930401831865, -0.003263269318267703, -0.00044919890933670104, -0.0011374439345672727, -9.536738616588991e-07, -0.0002416080387774855, -4.768370445162873e-07, -7.092700980138034e-05, -0.013205921277403831, -0.0004203628050163388, -0.20415781438350677, -0.00022575691400561482], "finish_reason": "length"}], "metrics": {"energy": 868.3156064214706, "energy_per_token": 3.3918578375838697, "time": 21.65439, "time_per_token": 0.0845874609375}}
{"outputs": [{"text": "X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.3)\n    model = LogisticRegression()\n    model.fit(X_train.to_numpy().reshape(-1,1), y_train)\n    y_pred = model.predict(X_test.to_numpy().reshape(-1,1))\n    cm = confusion_matrix(y_test, y_pred)\n    fig, ax = plt.subplots(1, figsize=(5,5))\n    plt.imshow(cm, cmap=\"Blues\")\n    plt.colorbar(label=\"Count\", ax=ax)\n    plt.xlabel(\"Predicted\")\n    plt.ylabel(\"Target\")\n    plt.title(\"Confusion Matrix\")\n    return cm, ax", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", "1", ")", ",", " y", "_", "train", ")", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "test", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", "1", "))", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "1", ",", " fig", "size", "=(", "5", ",", "5", "))", "\n", "    ", "plt", ".", "im", "show", "(", "cm", ",", " c", "map", "=", "\"", "Bl", "ues", "\"", ")", "\n", "    ", "plt", ".", "color", "bar", "(", "label", "=", "\"", "Count", "\"", ",", " ax", "=", "ax", ")", "\n", "    ", "plt", ".", "xlabel", "(", "\"", "Pred", "icted", "\"", ")", "\n", "    ", "plt", ".", "ylabel", "(", "\"", "Target", "\"", ")", "\n", "    ", "plt", ".", "title", "(", "\"", "Conf", "usion", " Matrix", "\"", ")", "\n", "    ", "return", " cm", ",", " ax", "\n", "\n", "#"], "logprobs": [-2.554048776626587, -0.2149258255958557, -0.0015055523253977299, -0.0007577646756544709, -0.004030914045870304, -3.886147169396281e-05, -0.001311752712354064, -0.0007819455349817872, -0.02072710543870926, -2.372236667724792e-05, -4.0531076592742465e-06, -0.0001161031104857102, -0.0002526917669456452, -5.245195097813848e-06, -0.00038211196078918874, -0.0010025242809206247, -0.003276101779192686, -1.2397689715726301e-05, -5.602820692729438e-06, -1.7881377516459906e-06, -2.3841855067985307e-07, -0.00022516099852509797, -0.18938389420509338, -0.14058826863765717, -0.010035889223217964, -0.08634187281131744, -0.03516807034611702, -1.4185804502631072e-05, -5.960462772236497e-07, -0.013654402457177639, -0.010285585187375546, -3.611976353568025e-05, -0.6974167227745056, -1.6100142002105713, -0.08028227090835571, -0.24226273596286774, -1.1155444383621216, -0.010528024286031723, -0.00036971885128878057, -9.536738616588991e-07, -3.576278118089249e-07, -4.768370445162873e-07, -0.25249049067497253, -0.12637276947498322, -0.008825226686894894, -0.005404860246926546, -0.0015901790466159582, -2.5152843591058627e-05, -3.9934315282152966e-05, -0.05124463140964508, -0.004092770162969828, -0.0001045410826918669, -0.18388786911964417, -0.2648220658302307, -9.894321920000948e-06, -0.33683276176452637, -0.0001793938863556832, -0.0020679295994341373, -7.652943895664066e-05, 0.0, -0.001622551935724914, -3.8265450712060556e-05, -8.093983342405409e-05, -1.9902067184448242, -0.00014411364099942148, -0.0030548356007784605, -0.09125396609306335, -0.00036399890086613595, -2.264974000354414e-06, -0.03397652879357338, -0.02691485360264778, -0.06611402332782745, -0.26103076338768005, -0.000920706195756793, -0.023373672738671303, -0.025844823569059372, -0.0051735094748437405, -4.851700214203447e-05, -2.312633478140924e-05, -0.0016046992968767881, -0.0019394413102418184, -1.2397689715726301e-05, -0.0001532914029667154, -0.005351385101675987, -0.001392824575304985, -9.536738616588991e-07, -1.9073468138230965e-06, -2.884823152271565e-05, -2.5033637939486653e-05, -6.6756979322235566e-06, -3.576278118089249e-07, -7.438383181579411e-05, -5.364403477869928e-06, -0.00011240804451517761, -0.052938953042030334, -0.0009336879593320191, -0.005795224104076624, -0.1339561939239502, -0.11720451712608337, -0.023678505793213844, -0.0036020891275256872, -1.5497195136049413e-06, -3.6954811548639555e-06, -0.00015233787416946143, -0.0010630200849846005, -4.768370445162873e-07, -0.018952004611492157, -0.0035337877925485373, -0.011031472124159336, -1.0728830375228426e-06, -6.9141146923357155e-06, -0.028624339029192924, -0.012771833688020706, -0.18174554407596588, -0.6368471384048462, -0.01381149422377348, -0.007704305928200483, -0.0015613758005201817, -0.00117649941239506, -3.814689989667386e-06, -3.6954811548639555e-06, -0.00013696208770852536, -0.938440203666687, -2.4340429306030273, -0.04775245860219002, -1.9055876731872559, -2.4318398573086597e-05, -0.03141463175415993, -1.1342623233795166, -0.007870140485465527, -0.888085126876831, -0.061192065477371216, -0.004610266070812941, -0.008366298861801624, -1.899929165840149, -0.0008253029081970453, -1.6556758880615234, -4.255681051290594e-05, -0.0025329669006168842, -0.0028123611118644476, -0.24731071293354034, -0.38233378529548645, -8.4638240878121e-06, -0.5640726089477539, -1.848482608795166, -0.419121652841568, -1.6331539882230572e-05, -0.0001308832288486883, -0.2976078987121582, -0.01728939637541771, -0.007118103560060263, -0.6393738389015198, -6.0794889577664435e-05, -0.8514536023139954, -3.576278118089249e-07, -2.4538075923919678, -1.2411410808563232, -0.253807008266449, -0.016449550166726112, -0.9757844805717468, -0.16148550808429718, -2.9673123359680176, -0.4417908489704132, -0.014880494214594364, -0.006761291529983282, -0.030863091349601746, -0.010295968502759933, -0.00933744478970766, -0.6751930713653564, -2.4437606043647975e-05, -1.0345697402954102, -0.02582705020904541, -0.03896870091557503, -0.04439014568924904, -0.06614828109741211, -0.7055137157440186, -0.28190818428993225, -0.0019325405592098832, -3.182837463100441e-05, -7.70062324590981e-05, -1.0728830375228426e-06, -0.008297731168568134, -0.0004406196530908346, -2.407998726994265e-05, -3.356696844100952, -0.003740696469321847, -0.0007109498255886137, -0.00015805903240107, -0.0029643899761140347, -0.11291530728340149, -3.731181277544238e-05, -0.14546909928321838, -0.06160563975572586, -0.013095798902213573, -0.0019194527994841337, -5.590759246842936e-05, -0.010254553519189358, -0.0023203373420983553, -0.03615689277648926, -0.0006108802044764161, -0.06755329668521881, -0.6384288668632507, -0.12659116089344025, -0.0032447329722344875, -0.02257412113249302, -0.226271852850914, -0.031962405890226364, -1.7080812454223633], "finish_reason": "stop"}], "metrics": {"energy": 734.2379491443627, "energy_per_token": 3.5299901401171283, "time": 17.453129, "time_per_token": 0.08390927403846155}}
{"outputs": [{"text": "x_train, x_test, y_train, y_test = train_test_split(feature, target, test_size=0.3, random_state=42)\n    model = LogisticRegression()\n    model.fit(np.array(x_train).reshape(-1, 1), y_train)\n    y_pred = model.predict(np.array(x_test).reshape(-1, 1))\n    cm = confusion_matrix(y_test, y_pred)\n\n    # Plot confusion matrix\n    ax = sns.heatmap(cm, annot=True, fmt='d', cbar=False)\n    ax.set_xlabel('Predicted')\n    ax.set_ylabel('Actual')\n    ax.set_title('Confusion Matrix')\n    return cm, ax", "tokens": ["x", "_", "train", ",", " x", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "np", ".", "array", "(", "x", "_", "train", ")", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "np", ".", "array", "(", "x", "_", "test", ")", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "#", " Plot", " confusion", " matrix", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "cm", ",", " annot", "=", "True", ",", " fmt", "='", "d", "'", ",", " c", "bar", "=", "False", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Pred", "icted", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Act", "ual", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "')", "\n", "    ", "return", " cm", ",", " ax", "\n", "\n", "def"], "logprobs": [-2.930778741836548, -0.11796951293945312, -0.006660286337137222, -0.001808556611649692, -0.019348224624991417, -0.00016234986833296716, -0.006049536634236574, -0.0013050857232883573, -0.00241452781483531, -6.16293036728166e-05, -3.075552376685664e-05, -0.00030155404238030314, -0.0005598884890787303, -3.075552376685664e-05, -0.00023064337437972426, -0.003134459024295211, -0.0055489083752036095, -2.407998726994265e-05, -1.1920858014491387e-05, -2.7418097943154862e-06, -1.1920928244535389e-07, -0.00033885458833537996, -0.15918713808059692, -0.055240970104932785, -0.014738606289029121, -0.16499276459217072, -0.1622745394706726, -2.0503786799963564e-05, -3.814689989667386e-06, -0.05268385261297226, -0.04124106466770172, -0.0001397035230183974, -1.0441620349884033, -0.7926749587059021, -0.11737838387489319, -1.6689286894688848e-06, -2.3841855067985307e-07, -0.009620139375329018, -1.0008487701416016, -0.06537127494812012, -0.05404115840792656, -0.054799024015665054, -0.23674961924552917, -0.7943055629730225, -0.01557953841984272, -0.0006989181856624782, -7.152555099310121e-07, -3.576278118089249e-07, -1.1920922133867862e-06, -0.289717435836792, -0.13586978614330292, -0.011242140084505081, -0.008347028866410255, -0.0025076393503695726, -5.757642793469131e-05, -5.8053239627042785e-05, -2.7529706954956055, -4.6491513785440475e-06, -0.02337658405303955, -0.009857900440692902, -0.0012915135594084859, -7.390948667307384e-06, -2.4914430468925275e-05, -0.009288077242672443, -0.002990775741636753, -0.00019572250312194228, 0.0, -0.0025434307754039764, -3.9219088648678735e-05, -0.00018285033002030104, -0.12430698424577713, -0.00014625910262111574, -8.582700684200972e-05, -0.0012506766943261027, -0.15110310912132263, -0.0004451475979294628, -2.9802276912960224e-06, -0.008735774084925652, -0.008310380391776562, -0.059925615787506104, -0.3850802779197693, -0.001193526084534824, -0.036019258201122284, -0.041313014924526215, -0.007405686192214489, -5.6980417866725475e-05, -3.2782016205601394e-05, -0.0015287628630176187, -0.028437115252017975, -5.960462772236497e-07, -0.00024577934527769685, -0.00018034738604910672, -0.0010717130498960614, -3.6954811548639555e-06, -0.00017808281700126827, -0.0005178302526473999, -2.6464111215318553e-05, -8.22540732769994e-06, -1.311301275563892e-06, -7.950943836476654e-05, -7.629365427419543e-06, -6.842378934379667e-05, -0.005196872632950544, -4.0531076592742465e-06, -0.0002926159941125661, -0.005707989446818829, -0.08939960598945618, -0.13452531397342682, -0.01622883416712284, -0.003693902399390936, -2.3841830625315197e-06, -1.9073468138230965e-06, -9.154854342341423e-05, -0.004564699251204729, -4.768370445162873e-07, -0.02333465963602066, -0.001773571828380227, -0.002356254495680332, -3.4570634852570947e-06, -4.7444173105759546e-05, -0.02488795667886734, -0.007905622944235802, -1.635500192642212, -0.0009712031460367143, -1.082961082458496, -0.6368545889854431, -1.5446624755859375, -0.0012704405235126615, -0.1647007167339325, -0.004031745251268148, -1.3075652122497559, -0.005840379279106855, -1.8941295146942139, -0.001121845212765038, -0.00013136000779923052, -0.0007432320853695273, -3.6954811548639555e-06, -0.0003817544784396887, -0.011773268692195415, -0.03321758657693863, -0.0389631986618042, -0.001260558608919382, -0.0019073167350143194, -0.004679442849010229, -0.07030898332595825, -0.16824591159820557, -0.04184133559465408, -0.15809565782546997, -4.1483970562694594e-05, -0.061265844851732254, -2.228760242462158, -0.15357182919979095, -0.05037536844611168, -0.24804893136024475, -0.004225493408739567, -0.009547997266054153, -0.02334560640156269, -0.0012380562257021666, -0.008349866606295109, -0.14993207156658173, -0.21581630408763885, -0.04211578890681267, -0.0197382103651762, -0.008355541154742241, -0.07349946349859238, -0.001479603466577828, -3.302042750874534e-05, -3.6238969187252223e-05, -2.861018856492592e-06, -6.12716976320371e-05, -8.702239938429557e-06, -0.0015995815629139543, -9.846202738117427e-05, -0.070435531437397, -0.00013028726971242577, -0.0006320862448774278, -0.00027223696815781295, -0.002069357316941023, -0.005189282353967428, -0.0001728385395836085, -0.005028932821005583, -0.0006082591717131436, -0.0033244602382183075, -0.01733134128153324, -0.0006797387031838298, -2.0861407392658293e-05, -0.0019261157140135765, -0.045184072107076645, -0.00038068200228735805, -0.822062611579895, -0.5288666486740112, -0.07867677509784698, -0.0026444962713867426, -0.0032709925435483456, -0.2529332637786865, -0.0222679004073143, -1.4501190185546875], "finish_reason": "stop"}], "metrics": {"energy": 655.3171962051385, "energy_per_token": 3.3264832294677085, "time": 16.60854, "time_per_token": 0.08430730964467006}}
{"outputs": [{"text": "# Split the data into training and testing sets\n    X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.3, random_state=42)\n\n    # Create a logistic regression model and fit it to the training data\n    model = LogisticRegression()\n    model.fit(X_train.values.reshape(-1, 1), y_train)\n\n    # Predict the target for the test set\n    y_pred = model.predict(X_test.values.reshape(-1, 1))\n\n    # Plot the confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n\n    # Create a figure and subplot\n    fig, ax = plt.subplots()\n\n    # Plot the confusion matrix on the subplot\n    ax.imshow(cm, cmap=plt.cm.Blues)\n    ax.set_title('Confusion Matrix')\n    ax.set_xlabel('Predicted Label')\n    ax.set_ylabel('True Label')\n    ax.set_xt", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " testing", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " a", " logistic", " regression", " model", " and", " fit", " it", " to", " the", " training", " data", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " the", " target", " for", " the", " test", " set", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "test", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "\n", "    ", "#", " Plot", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "#", " Create", " a", " figure", " and", " sub", "plot", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "\n", "    ", "#", " Plot", " the", " confusion", " matrix", " on", " the", " sub", "plot", "\n", "    ", "ax", ".", "im", "show", "(", "cm", ",", " c", "map", "=", "plt", ".", "cm", ".", "Bl", "ues", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Pred", "icted", " Label", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "True", " Label", "')", "\n", "    ", "ax", ".", "set", "_", "xt"], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -0.27506178617477417, -0.03995629400014877, -0.334110289812088, -0.015279857441782951, -0.15630502998828888, -0.0037797691766172647, -0.052109748125076294, -0.005806128028780222, -0.5085312724113464, -0.016580995172262192, -0.00015770144818816334, -0.000546425289940089, -0.0013766345800831914, -1.4424220353248529e-05, -0.00032217081752605736, -0.0005635818815790117, -0.0035447163973003626, -1.0967194612021558e-05, -1.0728830375228426e-06, -5.757642793469131e-05, -9.512448741588742e-05, -2.9802276912960224e-06, -1.5258672647178173e-05, -0.0003997480380348861, -0.0028945000376552343, -7.986990567587782e-06, -1.4305104514278355e-06, -7.152555099310121e-07, -1.1920928244535389e-07, -8.892617915989831e-05, -0.13600267469882965, -0.2504354417324066, -0.005244070664048195, -0.043283410370349884, -0.033535342663526535, -1.966933996300213e-05, -5.960462772236497e-07, -0.008727265521883965, -0.004800698719918728, -1.2636104656849056e-05, -0.5797070860862732, -0.4382597506046295, -0.0231483057141304, -1.1920922133867862e-06, -1.1920922133867862e-06, -0.0019209994934499264, -0.7265876531600952, -0.026401462033391, -0.02550451084971428, -0.009060104377567768, -0.13806107640266418, -0.00043644916149787605, -0.002102428348734975, -0.8563039898872375, -0.44730931520462036, -0.08114209026098251, -0.00044228785554878414, -0.01057450007647276, -1.09657883644104, -0.1814759522676468, -0.17614319920539856, -0.055777087807655334, -0.0014726994559168816, -0.027337048202753067, -0.0303606279194355, -0.001980725908651948, -0.0002810560108628124, -0.8477872610092163, -0.0006643710657954216, -0.00016723664884921163, -9.536738616588991e-07, -1.1920928244535389e-07, -8.344646857949556e-07, -0.17007052898406982, -0.01927233673632145, -0.0008590107318013906, -0.00459460262209177, -0.0006373281357809901, -8.34461570775602e-06, -2.13382354559144e-05, -0.05763549357652664, -0.0037813130766153336, -1.7404405298293568e-05, -0.09194805473089218, -1.5633220672607422, -0.0032290483359247446, -0.00026651646476238966, 0.0, -0.0006394725642167032, -1.6093124941107817e-05, -0.00012289722508285195, -0.15397539734840393, -3.4927710657939315e-05, -2.407998726994265e-05, -0.0006087357178330421, -0.0014800796052441, -5.23315102327615e-05, -9.536738616588991e-07, -0.04004448652267456, -0.02460314892232418, -0.006264336407184601, -0.00011860620725201443, -0.0005365362740121782, -0.47545745968818665, -0.0005016260547563434, -0.022808121517300606, -0.15241648256778717, -0.3693447411060333, -0.0020008322317153215, -0.05958053469657898, -0.0764772817492485, -0.07495226711034775, -0.00012778419477399439, -0.02812584862112999, -2.407998726994265e-05, -0.0034842516761273146, -0.005310950800776482, -0.0010885033989325166, -1.4305012882687151e-05, -2.3841830625315197e-06, -0.0003741279651876539, -0.0004451475979294628, -7.152531907195225e-06, -1.585470999998506e-05, -0.0016877705929800868, -0.0013594918418675661, -5.6503606174374e-05, -7.629365427419543e-06, 0.0, -2.2172682292875834e-05, -1.0728830375228426e-06, -1.4305012882687151e-05, -0.002226970624178648, -7.152555099310121e-07, -0.0002051381452474743, -0.0015493544051423669, -0.0033407374285161495, -0.0002420847595203668, -0.0016514724120497704, -3.004304885864258, -0.05119117349386215, -0.002725697821006179, -0.00013326710904948413, -0.12398689985275269, -0.001178285456262529, -0.18079136312007904, -0.014594818465411663, -0.003410596400499344, -4.6491513785440475e-06, -2.2172682292875834e-05, -5.400034933700226e-05, -0.0008362610242329538, -2.3841855067985307e-07, -0.003262912854552269, -0.0023617250844836235, -0.0005916990339756012, -1.311301275563892e-06, -2.145764938177308e-06, -0.019730962812900543, -0.010330774821341038, -2.887840986251831, -0.00187090749386698, -0.6680174469947815, -0.725026547908783, -0.5208200812339783, -1.033783197402954, -0.18345880508422852, -2.866370677947998, -0.013268624432384968, -0.5646255612373352, -0.001493173069320619, -0.01489106472581625, -0.010841633193194866, -0.0007313199457712471, -0.0004576589271891862, -9.667406266089529e-05, -1.6689286894688848e-06, -7.033323527139146e-06, -9.179073458653875e-06, -0.2396671622991562, -0.00045277358731254935, -0.11681957542896271, -0.0004707658663392067, -0.012329667806625366, -0.19175557792186737, -0.006160200573503971, -0.04410627484321594, -3.85038583772257e-05, -2.4991824626922607, -0.004146194085478783, -0.00847966130822897, -8.582700684200972e-05, -0.014765036292374134, -0.00040368037298321724, -0.1849696934223175, -0.010146702639758587, -0.2676859498023987, -3.4570634852570947e-06, -0.0002932118659373373, -0.00031680811662226915, -0.11710675805807114, -0.21961963176727295, -3.576278118089249e-07, -0.18775853514671326, -0.03660140931606293, -8.34461570775602e-06, -0.00027497802511788905, -1.4424220353248529e-05, -0.17482009530067444, -8.940656698541716e-06, -0.5527002811431885, -0.006089822389185429, -0.20846042037010193, -0.010310481302440166, -4.8397800128441304e-05, -0.45770302414894104, -0.0013325868640094995, -0.041820868849754333, -0.3091147840023041, -0.0007200032705441117, -9.417489309271332e-06, -0.004223237745463848, -0.09240388870239258, -0.0016669438919052482, -0.3179745376110077, -0.011026284657418728, -6.3774932641536e-05, -0.017962170764803886, -0.0007190502947196364, -0.187651127576828, -0.0025445008650422096, -0.0095948725938797, -0.0017475108616054058, -2.0998427867889404, -0.33326709270477295, -0.0001597276859683916, -8.940297266235575e-05, -8.940656698541716e-06, -2.3841855067985307e-07, -7.354942499659956e-05, -4.768370445162873e-07, -0.0012804412981495261, -1.811964830267243e-05, -0.011568251997232437, -0.0009508379152975976, -0.00015877417172305286, -5.209310256759636e-05, -0.22504641115665436, -0.013932823203504086, -3.611976353568025e-05, -0.07213228195905685, -0.00041940953815355897, -0.07130230963230133], "finish_reason": "length"}], "metrics": {"energy": 862.5084966850276, "energy_per_token": 3.369173815175889, "time": 21.653536, "time_per_token": 0.084584125}}
{"outputs": [{"text": "feature, target = _check_input(feature, target)\n\n    # Splitting the data into train and test sets\n    X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.3, random_state=100)\n\n    # Creating a logistic regression model\n    model = LogisticRegression(solver='liblinear', random_state=0)\n\n    # Training the model\n    model.fit(X_train.to_numpy().reshape(-1, 1), y_train)\n\n    # Predicting the target for the test set\n    y_pred = model.predict(X_test.to_numpy().reshape(-1, 1))\n\n    # Plotting the confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n    ax = plt.subplot()\n    sns.heatmap(cm, annot=True, ax=ax)\n    ax.set_xlabel('Predicted')\n    ax.set_ylabel('Actual')\n    ax.set_title", "tokens": ["feature", ",", " target", " =", " _", "check", "_", "input", "(", "feature", ",", " target", ")", "\n", "\n", "    ", "#", " Split", "ting", " the", " data", " into", " train", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", "0", "0", ")", "\n", "\n", "    ", "#", " Creating", " a", " logistic", " regression", " model", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "(", "s", "olver", "='", "lib", "linear", "'", ",", " random", "_", "state", "=", "0", ")", "\n", "\n", "    ", "#", " Training", " the", " model", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "icting", " the", " target", " for", " the", " test", " set", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "test", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "\n", "    ", "#", " Plot", "ting", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "    ", "ax", " =", " plt", ".", "sub", "plot", "()", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "cm", ",", " annot", "=", "True", ",", " ax", "=", "ax", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Pred", "icted", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Act", "ual", "')", "\n", "    ", "ax", ".", "set", "_", "title"], "logprobs": [-3.143139123916626, -1.9899969100952148, -0.39983683824539185, -0.013458238914608955, -3.205733299255371, -1.3011932373046875, -0.006744596175849438, -0.7960535287857056, -0.39771178364753723, -0.004060596227645874, -0.016505131497979164, -0.0013438966125249863, -0.020816074684262276, -0.035078756511211395, -0.707710325717926, -0.0008973624208010733, -0.8994808793067932, -0.34025344252586365, -2.0713305473327637, -0.2861436605453491, -0.31239205598831177, -0.11855585128068924, -1.0270793437957764, -0.04251505061984062, -0.010890570469200611, -0.17345955967903137, -0.10745927691459656, -0.0034941115882247686, -0.7149001359939575, -0.017356647178530693, -0.001191978226415813, -0.000912369170691818, -0.0022631289903074503, -2.4199192921514623e-05, -0.0016543286619707942, -0.0008708022069185972, -0.016723208129405975, -5.400034933700226e-05, -1.9907753085135482e-05, -0.00021836756786797196, -0.0005030558677390218, -4.768360213347478e-06, -3.4689302992774174e-05, -0.0008529362385161221, -0.03135894984006882, -1.6331539882230572e-05, -7.033323527139146e-06, -1.311301275563892e-06, -1.1920928244535389e-07, -0.0002919009421020746, -0.14953765273094177, -0.28480684757232666, -0.013172038830816746, -0.03550051152706146, -0.04389580339193344, -1.6212332411669195e-05, -2.861018856492592e-06, -0.024441462010145187, -0.015303924679756165, -2.7179348762729205e-05, -0.9471386671066284, -0.4765664339065552, -0.06448056548833847, -9.536738616588991e-07, -1.1920922133867862e-06, -0.006862168200314045, -1.4676496982574463, -0.9960922598838806, -1.1655306816101074, -0.11369774490594864, -0.006325817666947842, -0.15113712847232819, -0.0005449955351650715, -0.03157658129930496, -1.8308937549591064, -1.1455395221710205, -0.21506552398204803, -0.010287119075655937, -0.08238296210765839, -0.4112575948238373, -0.0008385241380892694, -0.44666269421577454, -0.010677941143512726, -0.000720956246368587, -7.152555099310121e-07, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.4873230457305908, -0.8997645378112793, -3.0397906812140718e-05, -0.1902584582567215, -0.22862908244132996, -2.884823152271565e-05, -0.11232331395149231, -4.577531944960356e-05, -0.06754126399755478, -8.344646857949556e-07, -4.768370445162873e-07, -0.0018710264703258872, -0.24907730519771576, -0.005163903348147869, -0.05683799460530281, -0.38978537917137146, -0.00021884430316276848, -0.006977003999054432, -1.0848329067230225, -0.05901206284761429, -0.027059203013777733, -0.6366661190986633, -0.00011789103882620111, -0.01322686206549406, -0.020272674039006233, -3.0278701160568744e-05, -8.129743218887597e-05, -0.1521952748298645, -0.0013638966483995318, -1.3470558769768104e-05, -0.0698658674955368, -0.32938700914382935, -1.1801649634435307e-05, -0.26673999428749084, -0.0002849888114724308, -0.0023960948456078768, -0.00010954733443213627, 0.0, -0.005173391196876764, -2.13382354559144e-05, -0.00015507926582358778, -0.11029874533414841, -4.625213477993384e-05, -3.814624506048858e-05, -0.001727756578475237, -0.00855258945375681, -4.5060096454108134e-05, -5.602820692729438e-06, -0.07696306705474854, -0.010679828934371471, -0.01884637400507927, -0.00015472168161068112, -0.010849651880562305, -0.27562886476516724, -0.1846865862607956, -0.4284619390964508, -0.4415072500705719, -0.5271268486976624, -0.19349166750907898, -0.026591388508677483, -0.027939457446336746, -0.014290728606283665, -0.0002903516869992018, -0.191133052110672, -0.0004412154376041144, -0.041055161505937576, -0.04595015570521355, -0.0023442425299435854, -2.2291887944447808e-05, -1.1324817933200393e-05, -0.0010954099707305431, -0.0013058000477030873, -2.729855441430118e-05, -0.00010764019680209458, -0.0012682974338531494, -0.000979896984063089, -7.152555099310121e-07, -1.0728830375228426e-06, -1.156323378381785e-05, -1.7404405298293568e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -2.658331868587993e-05, -7.152555099310121e-07, -5.352353764465079e-05, -0.005250236950814724, -2.3841830625315197e-06, -0.0005749003030359745, -0.0016429034294560552, -0.008684367872774601, -0.00024136967840604484, -0.030592236667871475, -2.121558904647827, -0.01577387936413288, -0.07257506251335144, -0.011914047412574291, -0.0012438902631402016, -0.06429368257522583, -0.0038167026359587908, -0.6261114478111267, -0.05950426682829857, -0.010841633193194866, -1.5020257706055418e-05, -1.490105023549404e-05, -0.00017021637177094817, -0.0013112765736877918, -9.536738616588991e-07, -0.002514179330319166, -0.006865720264613628, -0.0018798314267769456, -1.4305104514278355e-06, -1.9073468138230965e-06, -0.11715468764305115, -0.019127212464809418, -0.13891518115997314, -0.4235724210739136, -0.008310498669743538, -1.1057164669036865, -0.0004661188868340105, -0.40254276990890503, -0.03495478630065918, -0.03295198082923889, -0.011173887178301811, -0.028126312419772148, -0.7439985275268555, -0.0008762810612097383, -0.0010367024224251509, -0.0117849325761199, 0.0, -4.7205765440594405e-05, -0.005085627548396587, -0.06581415235996246, -0.0076340362429618835, -0.005618138704448938, -0.0015049570938572288, -0.0005298641044646502, -0.9722110033035278, -0.02486109547317028, -0.0008089845650829375, -0.5439353585243225, -0.013670748099684715, -0.18041999638080597, -0.04568517953157425, -0.0008226824575103819, -0.00018666432879399508, -0.0002087136817863211, -0.050482820719480515, -0.08612862229347229, -0.0023378203622996807, -0.0017971331253647804, -1.4987733364105225, -0.0004545609117485583, -4.815939246327616e-05, -0.0001573438785271719, -5.245195097813848e-06, -0.00048565989709459245, -1.0490362910786644e-05, -0.0008416209602728486, -0.0003215749457012862, -0.16177982091903687, -0.0001892864383989945, -0.0011456600623205304, -0.00012838016846217215, -0.002913637086749077, -0.018598921597003937, -9.846202738117427e-05, -0.0043724412098526955, -6.401333666872233e-05, -0.00181783817242831], "finish_reason": "length"}], "metrics": {"energy": 860.6580222225189, "energy_per_token": 3.3619453993067143, "time": 21.65137, "time_per_token": 0.0845756640625}}
{"outputs": [{"text": "x_train, x_test, y_train, y_test = train_test_split(feature, target, test_size=0.2)\n    model = LogisticRegression()\n    model.fit(np.array(x_train).reshape(-1, 1), y_train)\n    y_pred = model.predict(np.array(x_test).reshape(-1, 1))\n    cm = confusion_matrix(y_test, y_pred)\n    ax = plt.subplot()\n    ax.set_title('Confusion Matrix')\n    ax.set_xlabel('Predicted')\n    ax.set_ylabel('Actual')\n    ax.set_xticks([0, 1])\n    ax.set_xticklabels(['No Fraud', 'Fraud'])\n    ax.set_yticklabels(['No Fraud', 'Fraud'])\n    plt.imshow(cm, cmap=plt.cm.Blues)\n    for i in range(2):\n        for j in range(2):\n            ax.text(j,", "tokens": ["x", "_", "train", ",", " x", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "np", ".", "array", "(", "x", "_", "train", ")", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "np", ".", "array", "(", "x", "_", "test", ")", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "    ", "ax", " =", " plt", ".", "sub", "plot", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Pred", "icted", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Act", "ual", "')", "\n", "    ", "ax", ".", "set", "_", "xt", "icks", "([", "0", ",", " ", "1", "])", "\n", "    ", "ax", ".", "set", "_", "xt", "ick", "labels", "(['", "No", " Fra", "ud", "'", ",", " '", "F", "ra", "ud", "'])", "\n", "    ", "ax", ".", "set", "_", "yt", "ick", "labels", "(['", "No", " Fra", "ud", "'", ",", " '", "F", "ra", "ud", "'])", "\n", "    ", "plt", ".", "im", "show", "(", "cm", ",", " c", "map", "=", "plt", ".", "cm", ".", "Bl", "ues", ")", "\n", "    ", "for", " i", " in", " range", "(", "2", "):", "\n", "        ", "for", " j", " in", " range", "(", "2", "):", "\n", "            ", "ax", ".", "text", "(", "j", ","], "logprobs": [-2.930778741836548, -0.11796951293945312, -0.006660286337137222, -0.001808556611649692, -0.019348224624991417, -0.00016234986833296716, -0.006049536634236574, -0.0013050857232883573, -0.00241452781483531, -6.16293036728166e-05, -3.075552376685664e-05, -0.00030155404238030314, -0.0005598884890787303, -3.075552376685664e-05, -0.00023064337437972426, -0.003134459024295211, -0.0055489083752036095, -2.407998726994265e-05, -1.1920858014491387e-05, -2.7418097943154862e-06, -1.1920928244535389e-07, -0.00033885458833537996, -0.15918713808059692, -0.055240970104932785, -0.014738606289029121, -0.16499276459217072, -0.1622745394706726, -2.0503786799963564e-05, -3.814689989667386e-06, -0.05268385261297226, -0.04124106466770172, -0.0001397035230183974, -0.5850594639778137, -1.2104346752166748, -0.09104741364717484, -0.22545497119426727, -0.651975691318512, -0.011517226696014404, -0.00044264530879445374, -1.1920922133867862e-06, -3.576278118089249e-07, -1.1920928244535389e-07, -0.18273575603961945, -0.08487202227115631, -0.00987230148166418, -0.004010967444628477, -0.0016157679492607713, -2.7894584491150454e-05, -5.61460001335945e-05, -2.2394206523895264, -4.172316494077677e-06, -0.026251444593071938, -0.007546488661319017, -0.0013667537132278085, -8.583032467868179e-06, -2.2172682292875834e-05, -0.010302811861038208, -0.0032065899576991796, -0.00012087091454304755, -1.1920928244535389e-07, -0.002358038444072008, -4.815939246327616e-05, -9.333651541965082e-05, -0.11615835130214691, -6.949660019017756e-05, -7.772143726469949e-05, -0.0013940150383859873, -0.15406951308250427, -0.0002992897352669388, -2.7418097943154862e-06, -0.006158067844808102, -0.009416688233613968, -0.06660877168178558, -0.2682453691959381, -0.0012844892917200923, -0.03465371951460838, -0.028255650773644447, -0.003594011999666691, -4.815939246327616e-05, -2.3245540432981215e-05, -0.001279250718653202, -0.039229847490787506, -9.536738616588991e-07, -0.0002388668799540028, -0.0001746263587847352, -0.0011406589765101671, -1.9073468138230965e-06, -0.00031680811662226915, -0.0003955773718189448, -1.847726889536716e-05, -7.152531907195225e-06, -1.1920922133867862e-06, -3.838465272565372e-05, -8.34461570775602e-06, -5.364274329622276e-05, -0.004353450611233711, -3.576272320060525e-06, -0.00022301571152638644, -0.0057754311710596085, -0.10739782452583313, -0.12032748013734818, -0.013628413900732994, -0.0025620989035815, -2.0265558760002023e-06, -2.50339189733495e-06, -0.00010716341057559475, -0.0060077086091041565, -3.576278118089249e-07, -0.010743987746536732, -0.0017303746426478028, -0.0017368007684126496, -2.50339189733495e-06, -5.8053239627042785e-05, -0.027803121134638786, -0.010811679996550083, -0.19830402731895447, -1.180633783340454, -0.008908173069357872, -0.2516791820526123, -0.00041368984966538846, -0.21908727288246155, -0.016903962939977646, -0.03045232966542244, -0.004694630391895771, -0.0039366381242871284, -0.2693915367126465, -0.004748022183775902, -0.25364652276039124, -0.002051988383755088, -0.04051429033279419, -0.5432035326957703, -0.005854364018887281, -8.22540732769994e-06, -0.01009159255772829, -0.18645398318767548, -0.004959068261086941, -0.003075276967138052, -0.4794035255908966, -0.009794983081519604, -1.0010416507720947, -0.0029832879081368446, -0.06601660698652267, -0.010692920535802841, -0.019061248749494553, -0.04064318537712097, -1.0590764284133911, -5.4596363042946905e-05, -7.676783570786938e-05, -0.0001419681793777272, -9.142934868577868e-05, -5.8887653722194955e-05, -4.172316494077677e-06, -0.001814387273043394, -0.00016497205069754273, -0.33692094683647156, -0.00021264675888232887, -0.0006479309522546828, -0.00013052565918769687, -0.0029847142286598682, -0.19852378964424133, -0.0025424794293940067, -0.48430097103118896, -0.0011233931872993708, -0.03520892560482025, -0.11317732185125351, -0.6519156098365784, -0.0749189704656601, -0.020898733288049698, -0.046927813440561295, -0.0009637002367526293, -0.012527230195701122, -0.0035324811469763517, -4.2437604861333966e-05, -8.475421054754406e-05, -2.4437606043647975e-05, -0.0005310555570758879, -1.3232143828645349e-05, -0.9481291174888611, -0.0005505952867679298, -1.0728830375228426e-06, -0.24183227121829987, -1.5237747430801392, -1.510711908340454, -0.0008147019543685019, -0.009919869713485241, -9.333651541965082e-05, -0.0015825617592781782, -0.0013458014000207186, -0.0001062098381225951, -5.209310256759636e-05, -0.009828626178205013, -0.0014081810368224978, -4.434487345861271e-05, -9.274052717955783e-05, -3.015949550899677e-05, -0.0001510267611593008, -8.583032467868179e-06, -3.397406908334233e-05, -0.9264073967933655, -5.245195097813848e-06, -0.0003302744007669389, -0.005826631560921669, -0.00022146634000819176, -8.725739462533966e-05, -0.001412823679856956, -2.7894584491150454e-05, -0.0004922132357023656, -0.00040415700641460717, -0.0003691230376716703, -3.957670196541585e-05, -0.004399620462208986, -0.00037317464011721313, -0.0036873698700219393, -1.906938076019287, -7.033100700937212e-05, -0.21951673924922943, -5.960446742392378e-06, -0.0016511153662577271, -0.0014668668154627085, -0.22370491921901703, -0.09747378528118134, -7.152555099310121e-07, -0.8774768114089966, -0.03781691938638687, -2.634490556374658e-05, -0.0036368912551552057, -2.2172682292875834e-05, -0.25872117280960083, -3.6954811548639555e-06, -0.052485354244709015, -0.003999687731266022, -0.03456401452422142, -0.7754923701286316, -0.0007448997348546982, -0.004123281687498093, -1.8715683836489916e-05, -5.936446541454643e-05, -0.2053391933441162, -2.8490614567999728e-05, -0.0003491030656732619, -0.004680866841226816, -0.0009313059854321182, -4.410646579344757e-05, -1.1920858014491387e-05, -1.07287787614041e-05, -2.4318398573086597e-05, -0.00023910524032544345, -3.3378546504536644e-06, -6.592056161025539e-05, -0.0014304416254162788, -0.03259134665131569, -3.266281055402942e-05, -0.002292387653142214, -0.0004256058018654585, -0.040246956050395966, -0.0006344689172692597], "finish_reason": "length"}], "metrics": {"energy": 850.1167567825315, "energy_per_token": 3.3207685811817638, "time": 21.65574, "time_per_token": 0.084592734375}}
{"outputs": [{"text": "# Split the data into training and test sets\n    X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.3, random_state=42)\n\n    # Create a logistic regression model\n    lr = LogisticRegression()\n    # Fit the model to the training data\n    lr.fit(X_train.to_numpy().reshape(-1, 1), y_train)\n    # Make predictions on the test set\n    y_pred = lr.predict(X_test.to_numpy().reshape(-1, 1))\n    # Evaluate the model with a confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n    # Create a heatmap of the confusion matrix\n    fig, ax = plt.subplots()\n    ax = sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Predicted No', 'Predicted Yes'],\n                     yticklabels=['Actual No', 'Actual Yes'])\n", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " a", " logistic", " regression", " model", "\n", "    ", "lr", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "lr", ".", "fit", "(", "X", "_", "train", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "    ", "#", " Make", " predictions", " on", " the", " test", " set", "\n", "    ", "y", "_", "pred", " =", " l", "r", ".", "predict", "(", "X", "_", "test", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "    ", "#", " E", "valuate", " the", " model", " with", " a", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "    ", "#", " Create", " a", " heat", "map", " of", " the", " confusion", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "cm", ",", " annot", "=", "True", ",", " fmt", "='", "d", "'", ",", " c", "map", "='", "Bl", "ues", "'", ",", " ", "xt", "ick", "labels", "=['", "Pred", "icted", " No", "'", ",", " '", "Pred", "icted", " Yes", "']", ",", "\n", "                ", "     ", "yt", "ick", "labels", "=['", "Act", "ual", " No", "'", ",", " '", "Act", "ual", " Yes", "'])", "\n"], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -0.27506178617477417, -0.03995629400014877, -0.334110289812088, -0.015279857441782951, -1.9654672145843506, -0.006829964462667704, -0.05304906889796257, -0.006044441368430853, -0.5848751068115234, -0.020632287487387657, -0.00014447122521232814, -0.0005806190893054008, -0.0014256800059229136, -1.2159273865108844e-05, -0.0004901876673102379, -0.0006576997111551464, -0.0037662305403500795, -1.0609570381348021e-05, -1.311301275563892e-06, -7.462222856702283e-05, -9.786603914108127e-05, -3.576272320060525e-06, -2.3007127310847864e-05, -0.0004267973708920181, -0.00270263385027647, -5.602820692729438e-06, -1.1920922133867862e-06, -7.152555099310121e-07, -1.1920928244535389e-07, -9.560128091834486e-05, -0.10255027562379837, -0.19686201214790344, -0.005305259022861719, -0.04454236850142479, -0.02882971242070198, -1.9550132492440753e-05, -5.960462772236497e-07, -0.00777043029665947, -0.005298499949276447, -2.52720492426306e-05, -0.7104477286338806, -0.40649929642677307, -0.02217847667634487, -1.311301275563892e-06, -1.1920922133867862e-06, -0.0017164511373266578, -0.7232339382171631, -0.02946270816028118, -0.027652619406580925, -0.010773824527859688, -0.1507800966501236, -0.0004385939973872155, -0.002629277529194951, -0.8304585814476013, -0.3891613781452179, -0.08320511132478714, -0.0005477358354255557, -0.013722838833928108, -0.6075223088264465, -0.0002619877050165087, -1.8587148189544678, -0.11589711904525757, -0.0001137191939051263, -3.576278118089249e-07, -1.1920928244535389e-07, -1.311301275563892e-06, -0.12805373966693878, -0.0032699231524020433, -2.4836416244506836, -0.8291357159614563, -0.4834703803062439, -0.006935806944966316, -0.026312755420804024, -0.5949432253837585, -0.005020748823881149, -0.020925933495163918, -0.04010827839374542, -0.00728995306417346, -0.0007384672062471509, -0.001010503270663321, -0.0014618673594668508, -1.9311717551317997e-05, -2.932505594799295e-05, -0.089807890355587, -0.0028272203635424376, -1.6212332411669195e-05, -0.14888323843479156, -0.20167206227779388, -7.867782187531702e-06, -0.28081175684928894, -0.0001711698860162869, -0.0018992258701473475, -0.00010573305189609528, 0.0, -0.0007955246837809682, -2.8132995794294402e-05, -0.00010883215873036534, -0.128361314535141, -3.838465272565372e-05, -3.504691630951129e-05, -0.0013763965107500553, -0.007285574451088905, -4.410646579344757e-05, -1.7881377516459906e-06, -0.07769504934549332, -0.008809865452349186, -0.5187036395072937, -0.007218944374471903, -1.6433109045028687, -0.007008255925029516, -0.17691797018051147, -0.03342858701944351, -0.03802110254764557, -0.3125462532043457, -0.010120387189090252, -0.0003800861886702478, -0.06345515698194504, -2.7179348762729205e-05, -0.003492448478937149, -0.006647023372352123, -0.0006995138246566057, 0.0, -2.5748875486897305e-05, -2.861018856492592e-06, -0.0003405229654163122, -0.0005311747081577778, -6.9141146923357155e-06, -3.5523738915799186e-05, -0.0027580340392887592, -0.0012186489766463637, -1.1920928244535389e-07, -2.3841830625315197e-06, -1.7046782886609435e-05, -2.312633478140924e-05, -4.6491513785440475e-06, 0.0, -3.290122185717337e-05, -1.5497195136049413e-06, -4.303362584323622e-05, -0.002691101748496294, -8.344646857949556e-07, -0.00047886825632303953, -0.001589702907949686, -1.0005700588226318, -0.008596084080636501, -2.2180888652801514, -0.0051068575121462345, -0.026967769488692284, -0.1323801577091217, -3.0769622325897217, -0.421278715133667, -0.0013379440642893314, -0.00029571453342214227, -0.09598978608846664, -0.004475576803088188, -0.06836879998445511, -0.012160095386207104, -0.001495434669777751, -2.3841830625315197e-06, -1.07287787614041e-05, -6.186770770000294e-05, -0.001311038387939334, -2.3841855067985307e-07, -0.007961326278746128, -0.0030473482329398394, -0.0012132910778746009, -1.311301275563892e-06, -1.645074735279195e-05, -0.01768779754638672, -0.007501173764467239, -0.7992483377456665, -0.14612574875354767, -1.6440061330795288, -0.12383019179105759, -1.18401038646698, -0.011364134959876537, -0.36591094732284546, -0.0011528043542057276, -0.0011175584513694048, -0.00012194366718176752, -0.2447115182876587, -0.0022072256542742252, -0.8386720418930054, -0.0046617635525763035, -0.0008764001540839672, -0.0006250573205761611, -0.00018737945356406271, -6.9141146923357155e-06, -2.622600959512056e-06, -6.6756979322235566e-06, -0.37365978956222534, -0.0035033775493502617, -0.0020300988107919693, -0.5411776900291443, -0.27640652656555176, -0.048013027757406235, -6.01988795096986e-05, -9.572047565598041e-05, -2.539125671319198e-05, -5.960462772236497e-07, -0.00015901254664640874, -0.008059599436819553, -0.010511391796171665, -0.011362602934241295, -0.000900101731531322, -0.001877094735391438, -0.0019909576512873173, -0.06462786346673965, -0.13848401606082916, -0.04897209629416466, -0.018129240721464157, -1.811964830267243e-05, -0.1268293410539627, -0.11639595776796341, -0.023424211889505386, -0.03659577667713165, -1.1920922133867862e-06, -0.16119332611560822, -3.766942609217949e-05, -0.43872469663619995, -7.986990567587782e-06, -0.001693839905783534, -6.9141146923357155e-06, -0.12615631520748138, -0.45102059841156006, -0.12754955887794495, -2.3384244441986084, -0.09969700127840042, -1.490105023549404e-05, -0.003787488443776965, -0.0003591130953282118, -9.595887240720913e-05, -0.005751015152782202, -0.00042083943844772875, -0.00012909532233607024, -0.3813753128051758, -0.015623197890818119, -0.11560172587633133, -2.0265558760002023e-06, -2.5987286790041253e-05, -3.576278118089249e-07, -6.770858453819528e-05, -0.04513450711965561, -0.00018761781393550336, -0.0008132726070471108, -0.00012194366718176752, -2.622600959512056e-06, -0.00045277358731254935, -0.00023731753753963858, -0.00010144196130568162, -0.00026913834153674543, -0.6884852647781372, -0.0020998113323003054], "finish_reason": "length"}], "metrics": {"energy": 871.3249969215389, "energy_per_token": 3.403613269224761, "time": 21.641075, "time_per_token": 0.08453544921875}}
{"outputs": [{"text": "x_train, x_test, y_train, y_test = train_test_split(feature, target)\n    clf = LogisticRegression().fit(x_train.to_numpy().reshape(-1, 1), y_train)\n    cm = confusion_matrix(y_test, clf.predict(x_test.to_numpy().reshape(-1, 1)))\n    fig, ax = plt.subplots()\n    ax.matshow(cm)\n    ax.set_title('Confusion matrix', fontweight=\"bold\")\n    return (cm, ax)", "tokens": ["x", "_", "train", ",", " x", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ")", "\n", "    ", "cl", "f", " =", " Log", "istic", "Reg", "ression", "()", ".", "fit", "(", "x", "_", "train", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " cl", "f", ".", "predict", "(", "x", "_", "test", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")))", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "mat", "show", "(", "cm", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " matrix", "'", ",", " font", "weight", "=", "\"", "bold", "\"", ")", "\n", "    ", "return", " (", "cm", ",", " ax", ")", "\n", "\n", "#"], "logprobs": [-2.930778741836548, -0.11796951293945312, -0.006660286337137222, -0.001808556611649692, -0.019348224624991417, -0.00016234986833296716, -0.006049536634236574, -0.0013050857232883573, -0.00241452781483531, -6.16293036728166e-05, -3.075552376685664e-05, -0.00030155404238030314, -0.0005598884890787303, -3.075552376685664e-05, -0.00023064337437972426, -0.003134459024295211, -0.0055489083752036095, -2.407998726994265e-05, -1.1920858014491387e-05, -2.7418097943154862e-06, -1.1920928244535389e-07, -0.00033885458833537996, -0.15918713808059692, -0.055240970104932785, -0.014738606289029121, -1.8917498588562012, -0.06826247274875641, -0.15834641456604004, -2.4340550899505615, -0.012123115360736847, -0.01063394732773304, -0.0008373330347239971, -1.1920922133867862e-06, -3.576278118089249e-07, -8.583032467868179e-06, -0.2823166251182556, -1.5292977094650269, -3.2543604902457446e-05, -0.00010251473577227443, -0.2981180250644684, -4.708655978902243e-05, -0.00044824567157775164, -0.3168784976005554, -0.3486694395542145, -1.537788011773955e-05, -0.3372066915035248, -0.0007475204183720052, -0.0026610223576426506, -0.00013422065239865333, 0.0, -0.005750066600739956, -5.352353764465079e-05, -0.00013731967192143202, -0.08919157832860947, -7.438383181579411e-05, -7.712543447269127e-05, -0.0020224847830832005, -0.021740218624472618, -0.0005814530304633081, -7.629365427419543e-06, -0.03254680708050728, -0.026499563828110695, -0.062464639544487, -3.18497896194458, -0.02414756640791893, -0.005703248083591461, -5.125986263010418e-06, -9.65590606938349e-06, -0.00020215852418914437, -0.03433896601200104, -2.145764938177308e-06, -0.08419952541589737, -0.0037423591129481792, -0.013414367102086544, -1.7046782886609435e-05, -6.472854875028133e-05, -0.0002454218047205359, -0.00209469604305923, -0.03472591191530228, -1.2874520507466514e-05, -4.458328112377785e-05, -0.0035115741193294525, -0.002384559018537402, -9.536738616588991e-07, -3.6954811548639555e-06, -0.00013016807497479022, -0.00013910756388213485, -2.062299427052494e-05, -2.3841855067985307e-07, -0.0002926159941125661, -1.0371154530730564e-05, -5.566918844124302e-05, -0.008420676924288273, -2.3841830625315197e-06, -0.08471684157848358, -0.012932593934237957, -0.14958631992340088, -0.8446352481842041, -0.01944924332201481, -0.0023849159479141235, -0.0010780243901535869, -0.0009258274803869426, -5.006777428206988e-06, -4.887569048150908e-06, -0.00010144196130568162, -0.20484678447246552, -0.0028077249880880117, -0.006982449442148209, -0.06885330379009247, -0.024494275450706482, -0.8823731541633606, -0.0001515035255579278, -4.2199197196168825e-05, -0.0003904534096363932, -1.6366151571273804, -0.016113296151161194, -0.0028020190075039864, -0.06391073763370514, -0.001650758320465684, -0.08031472563743591, -0.009562521241605282, -0.11569654941558838, -0.3504555821418762, -0.0027998790610581636, -5.531158240046352e-05, -0.06859199702739716, -0.8019826412200928, -0.0003859252028632909, -1.5715866088867188, -0.24937453866004944, -1.5333491563796997, -0.002554964739829302, -0.0008507922757416964, -4.172316494077677e-06, -0.14662344753742218, -0.003965966869145632, -0.06250383704900742, -0.560731053352356, -2.761733293533325, -0.004639100283384323, -0.0009483369067311287, -0.004395822528749704, -0.22199343144893646, -0.031248729676008224, -0.011763372458517551, -1.9349616765975952], "finish_reason": "stop"}], "metrics": {"energy": 489.7949189224243, "energy_per_token": 3.3547597186467417, "time": 12.196647, "time_per_token": 0.08353867808219179}}
{"outputs": [{"text": "# Split data into training and testing sets\n    x_train, x_test, y_train, y_test = train_test_split(feature, target, test_size=0.2, random_state=42)\n\n    # Create a logistic regression model\n    model = LogisticRegression()\n    model.fit(x_train.values.reshape(-1, 1), y_train)\n\n    # Predict the target variable for the test set\n    y_pred = model.predict(x_test.values.reshape(-1, 1))\n\n    # Compute the confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n\n    # Plot the confusion matrix using Seaborn\n    import seaborn as sns\n\n    fig, ax = plt.subplots()\n    sns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"Blues\", ax=ax)\n    ax.set_title(\"Confusion Matrix\")\n    ax.set_xlabel(\"Predicted\")\n    ax.set_ylabel(\"", "tokens": ["#", " Split", " data", " into", " training", " and", " testing", " sets", "\n", "    ", "x", "_", "train", ",", " x", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " a", " logistic", " regression", " model", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "x", "_", "train", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " the", " target", " variable", " for", " the", " test", " set", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "x", "_", "test", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "\n", "    ", "#", " Compute", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "#", " Plot", " the", " confusion", " matrix", " using", " Se", "ab", "orn", "\n", "    ", "import", " se", "ab", "orn", " as", " s", "ns", "\n", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "cm", ",", " annot", "=", "True", ",", " fmt", "=", "\"", "d", "\"", ",", " c", "map", "=", "\"", "Bl", "ues", "\"", ",", " ax", "=", "ax", ")", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Conf", "usion", " Matrix", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "\"", "Pred", "icted", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "(", "\""], "logprobs": [-0.411857932806015, -0.24781475961208344, -2.079930305480957, -0.04209750145673752, -0.44381648302078247, -0.03518395498394966, -0.22592811286449432, -0.006482998840510845, -0.03241640329360962, -0.004984334111213684, -1.9669041633605957, -0.018287034705281258, -0.0030504383612424135, -0.0012848464539274573, -0.007040808908641338, -8.391981828026474e-05, -0.004405554849654436, -0.0014550823252648115, -0.002181770745664835, -6.55629628454335e-05, -5.1020273531321436e-05, -0.00020311199477873743, -0.000286657246761024, -1.0132738680113107e-05, -6.735097849741578e-05, -0.0012950851814821362, -0.00515572028234601, -1.5735502529423684e-05, -2.3841830625315197e-06, -1.4305104514278355e-06, -2.3841855067985307e-07, -0.00010990492592100054, -0.08819907158613205, -0.09081393480300903, -0.00819357018917799, -0.0801147073507309, -0.0710134282708168, -2.5152843591058627e-05, -2.622600959512056e-06, -0.04787837713956833, -0.030423304066061974, -8.332382276421413e-05, -0.5542981028556824, -0.4312273859977722, -0.03855987638235092, -1.311301275563892e-06, -3.576278118089249e-07, -0.003371271537616849, -0.567842423915863, -0.03397514298558235, -0.02479271963238716, -0.009340043179690838, -0.12200134247541428, -0.0004800597671419382, -0.0044111330062150955, -1.3947908878326416, -1.3608722686767578, -0.07512124627828598, -0.000969535845797509, -0.013562911190092564, -0.40375083684921265, -0.00029666791670024395, -0.5538922548294067, -0.002371001522988081, -0.00022480344341602176, -5.960462772236497e-07, -1.1920928244535389e-07, -4.768370445162873e-07, -0.14636839926242828, -0.009008006192743778, -2.248648166656494, -0.46074220538139343, -0.004349415190517902, -8.380061626667157e-05, -4.637133679352701e-05, -0.10945092141628265, -8.701899787411094e-05, -8.916457591112703e-05, -0.060209181159734726, -1.3684027194976807, -0.005723990965634584, -0.00032014489988796413, 0.0, -0.0019205235876142979, -2.7417760065873154e-05, -0.00011252723925281316, -0.12255072593688965, -3.325883881188929e-05, -3.194758028257638e-05, -0.0007963585085235536, -0.0047689033672213554, -0.00016604475968051702, -1.6689286894688848e-06, -0.08444320410490036, -0.035990048199892044, -0.08661531656980515, -0.00023946279543451965, -0.016876066103577614, -0.3516971170902252, -0.003251981223002076, -0.5805751085281372, -0.24945376813411713, -1.88731050491333, -0.39845189452171326, -0.04269348829984665, -0.19746260344982147, -0.057979222387075424, -0.021270260214805603, -0.0002734287118073553, -0.06681117415428162, -0.00012170527770649642, -0.009845034219324589, -0.014439730904996395, -0.0016323111485689878, -2.3603161025675945e-05, -7.510157047363464e-06, -0.0005287918029353023, -0.0007539528887718916, -9.298280929215252e-06, -3.528532761265524e-05, -0.002906029811128974, -0.00167598866391927, -9.953480184776708e-05, -2.992108420585282e-05, 0.0, -4.7444173105759546e-05, -2.0265558760002023e-06, -3.540453326422721e-05, -0.0019239740213379264, -8.344646857949556e-07, -0.00021991695393808186, -0.0025452144909650087, -0.00789332203567028, -0.00023529145983047783, -0.0038132588379085064, -2.808964490890503, -0.2740579843521118, -0.00022504181833937764, -8.987976616481319e-05, -0.0240922924131155, -0.00020692592079285532, -0.08687829971313477, -0.008364880457520485, -0.0010448002722114325, -3.099436753473128e-06, -3.933898824470816e-06, -5.304672595229931e-05, -0.0014549632323905826, -1.1920928244535389e-07, -0.006107595283538103, -0.0029043657705187798, -0.0010369406081736088, -1.1920922133867862e-06, -1.5497195136049413e-06, -0.01571931317448616, -0.0021996130235493183, -0.046234529465436935, -0.000476246903417632, -0.008260252885520458, -0.4048462212085724, -0.009026317857205868, -0.0008992680232040584, -5.94836674281396e-05, -2.4411280155181885, -3.462904930114746, -0.0001255195093108341, -3.576278118089249e-07, -0.0980774462223053, -0.0035038527566939592, -2.549116611480713, -0.13992734253406525, -1.0728830375228426e-06, -5.960462772236497e-07, -0.015008505433797836, -0.0171370692551136, -8.070142939686775e-05, -0.014968459494411945, -1.6382105350494385, -0.00035851728171110153, -2.365175485610962, -0.004206262528896332, -0.0011692361440509558, -0.0004751745145767927, -4.649054244509898e-05, -1.0728830375228426e-06, -4.410734163684538e-06, -3.659658250398934e-05, -1.065812110900879, -0.019128497689962387, -0.03763313218951225, -0.192702516913414, -5.781483559985645e-05, -0.0006307758158072829, -0.046784598380327225, -1.6689286894688848e-06, -4.5298504119273275e-05, -0.006315749138593674, -0.010077076964080334, -0.027303408831357956, -0.0004219118563923985, -0.0032049263827502728, -0.00044264530879445374, -0.05818169191479683, -1.5363439321517944, -0.0013384203193709254, -0.015040094032883644, -4.529942543740617e-06, -0.004474389832466841, -0.06282339245080948, -0.009787782095372677, -0.14805077016353607, -0.019101249054074287, -0.06284455209970474, -1.6689286894688848e-06, -0.0011784045491367579, -0.03613930195569992, -0.26512131094932556, -0.0006910558440722525, -0.0004226268210913986, -0.047764506191015244, -0.006576797924935818, -0.13582587242126465, -0.049977533519268036, -0.0006202919175848365, -0.003616936504840851, -0.02495923452079296, -0.36245450377464294, -0.0664977952837944, -0.0014990055933594704, -0.0006828360492363572, -2.396077979938127e-05, -0.0026926472783088684, -0.004149043001234531, -0.01990930736064911, -0.002209128811955452, -0.033022914081811905, -0.020267417654395103, -3.1470757676288486e-05, -0.00035065223346464336, -0.0005075835506431758, -0.0059874458238482475, -0.014822591096162796, -0.006560218054801226, -0.0004984090337529778, -0.005063329823315144, -0.14666400849819183, -0.00016783259343355894, -0.0003861635341309011, -7.366862701019272e-05, -2.169585604860913e-05, -8.4638240878121e-06, -0.00016592556494288146, -2.145764938177308e-06, -0.0008074360666796565, -5.543078441405669e-05, -2.4199192921514623e-05], "finish_reason": "length"}], "metrics": {"energy": 867.474410228729, "energy_per_token": 3.3885719149559725, "time": 21.63757, "time_per_token": 0.0845217578125}}
{"outputs": [{"text": "# Split the feature and target data into training and testing sets\n    feature_train, feature_test, target_train, target_test = train_test_split(\n        feature, target, test_size=0.3, random_state=0\n    )\n\n    # Fit a logistic regression model to the training data\n    lr = LogisticRegression()\n    lr.fit(feature_train.values.reshape(-1, 1), target_train.values)\n\n    # Predict the target for the test data\n    target_pred = lr.predict(feature_test.values.reshape(-1, 1))\n\n    # Compute the confusion matrix\n    cm = confusion_matrix(target_test, target_pred)\n\n    # Plot the confusion matrix\n    fig, ax = plt.subplots()\n    ax.matshow(cm, cmap=plt.cm.Blues)\n    ax.set_title(\"Confusion Matrix\")\n    ax.xaxis.set_ticks_position(\"top\")\n    ax.set_xlabel(\"Predicted Label\")\n    ax.", "tokens": ["#", " Split", " the", " feature", " and", " target", " data", " into", " training", " and", " testing", " sets", "\n", "    ", "feature", "_", "train", ",", " feature", "_", "test", ",", " target", "_", "train", ",", " target", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n", "        ", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "0", "\n", "    ", ")", "\n", "\n", "    ", "#", " Fit", " a", " logistic", " regression", " model", " to", " the", " training", " data", "\n", "    ", "lr", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "lr", ".", "fit", "(", "feature", "_", "train", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " target", "_", "train", ".", "values", ")", "\n", "\n", "    ", "#", " Pred", "ict", " the", " target", " for", " the", " test", " data", "\n", "    ", "target", "_", "pred", " =", " l", "r", ".", "predict", "(", "feature", "_", "test", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "\n", "    ", "#", " Compute", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "target", "_", "test", ",", " target", "_", "pred", ")", "\n", "\n", "    ", "#", " Plot", " the", " confusion", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "mat", "show", "(", "cm", ",", " c", "map", "=", "plt", ".", "cm", ".", "Bl", "ues", ")", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Conf", "usion", " Matrix", "\"", ")", "\n", "    ", "ax", ".", "x", "axis", ".", "set", "_", "t", "icks", "_", "position", "(", "\"", "top", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "\"", "Pred", "icted", " Label", "\"", ")", "\n", "    ", "ax", "."], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -1.6235783100128174, -0.0161175187677145, -0.007764989044517279, -0.9540372490882874, -0.030893374234437943, -0.15768612921237946, -0.005136151798069477, -0.04760686308145523, -0.005677526351064444, -0.06484496593475342, -0.005446238908916712, -2.180603265762329, -0.007659116294234991, -0.004197952803224325, -0.0022431467659771442, -0.001438060076907277, -1.2040065485052764e-05, -0.0007628867751918733, -0.0019106481922790408, -0.0020665021147578955, -2.8967437174287625e-05, -3.4927710657939315e-05, -0.00011729506513802335, -0.0003471963864285499, -1.0967194612021558e-05, -2.682172998902388e-05, -0.003049487480893731, -0.03200812637805939, -7.748573807475623e-06, -8.344646857949556e-07, -8.344646857949556e-07, -5.960462772236497e-07, -0.0002658013836480677, -1.6923686265945435, -0.015591861680150032, -0.008480606600642204, -0.026971597224473953, -0.01900428906083107, -0.004303955007344484, -0.028930239379405975, -8.4638240878121e-06, -4.768370445162873e-07, -0.0034828262869268656, -0.008595375344157219, -3.564294092939235e-05, -0.868285059928894, -0.44700735807418823, -0.03418564423918724, -9.536738616588991e-07, 0.0, -0.0006587718962691724, -1.6601749658584595, -0.7151440978050232, -0.002133714035153389, -2.0146166207268834e-05, -0.006059371400624514, -0.20157471299171448, -0.00016950124700088054, -0.003630477236583829, -2.740785598754883, -1.2209677696228027, -0.01621757447719574, -0.0007201223634183407, -0.00259420252405107, -0.479105144739151, -0.001019553979858756, -0.015655823051929474, -0.06877463310956955, -0.02363065630197525, -0.00025078488397412, -1.646810531616211, -0.18542654812335968, -0.00010418349120300263, -3.576278118089249e-07, 0.0, -3.576278118089249e-07, -0.39413124322891235, -0.15612994134426117, -0.0013686585007235408, -0.0031316070817410946, -0.001765955938026309, -1.2516897186287679e-05, -2.3483953555114567e-05, -0.37969300150871277, -0.006655075587332249, -4.1960789531003684e-05, -0.03316200152039528, -1.6710915565490723, -0.002781096613034606, -0.0007876630988903344, 0.0, -0.0034869839437305927, -2.038458114839159e-05, -0.00011312322021694854, -0.011851022951304913, -4.160317621426657e-05, -4.017272294731811e-05, -0.0005224770284257829, -0.0023637469857931137, -8.165503095369786e-05, -5.245195097813848e-06, -2.352546215057373, -0.050995100289583206, -0.6732461452484131, -0.005789890885353088, -0.01455922145396471, -4.2437604861333966e-05, -0.0021245544776320457, -0.4511168897151947, -0.000802075956016779, -0.03659439831972122, -0.09010837972164154, -0.36958736181259155, -0.0019249258330091834, -0.070435531437397, -1.6039336919784546, -0.3004212975502014, -0.00021920185827184469, -0.18153877556324005, -4.494089080253616e-05, -0.06950072944164276, -0.20075905323028564, -0.002718089148402214, -3.576278118089249e-07, -1.5258672647178173e-05, -2.372236667724792e-05, -0.0019121948862448335, -0.003028926905244589, -3.635817120084539e-05, -7.533743337262422e-05, -0.0034805689938366413, -0.002325689420104027, -0.0003400462737772614, -7.259582343976945e-05, 0.0, -0.0001746263587847352, -1.5497195136049413e-06, -6.318072337307967e-06, -0.00026079590315930545, -1.5497195136049413e-06, -0.00026127262390218675, -0.004942343104630709, -0.005075783468782902, -0.00010764019680209458, -0.0020748295355588198, -1.7649391889572144, -0.02796194702386856, -0.00025507534155622125, -6.460934673668817e-05, -0.13416136801242828, -0.00025233422638848424, -0.06696314364671707, -0.006812086328864098, -0.0021364500280469656, -2.0265558760002023e-06, -4.2914423829643056e-05, -6.115249561844394e-05, -0.0024425929877907038, -6.90197994117625e-05, -0.0008866431307978928, -0.2686545252799988, -0.0004668337933253497, -1.3112935448589269e-05, -5.602820692729438e-06, -0.027524709701538086, -0.003068978199735284, -0.041484005749225616, -0.00024828212917782366, -0.008505783975124359, -0.5085249543190002, -0.006633641663938761, -0.0010744519531726837, -4.8636207793606445e-05, -0.23680239915847778, -0.0018594847060739994, -0.6552929282188416, -0.013920714147388935, -0.0011865011183544993, -0.000688077649101615, -0.00019476900342851877, -1.9073468138230965e-06, -4.172316494077677e-06, -0.00019631843315437436, -0.30633482336997986, -0.0027721805963665247, -0.011225873604416847, -0.17814034223556519, -0.08366735279560089, -1.2100741863250732, -0.00018404220463708043, -2.90866428258596e-05, -0.0007640779949724674, -0.08490334451198578, -0.004760954063385725, -2.622600959512056e-06, -0.0010871936101466417, -0.04157618060708046, -1.07287787614041e-05, -0.0005608416395261884, -2.8371408916427754e-05, -0.03501499071717262, -8.22540732769994e-06, -0.26636019349098206, -0.03708811104297638, -0.011961047537624836, -0.046196624636650085, -0.0003073934931308031, -0.05864856392145157, -0.005059771239757538, -0.12857140600681305, -0.12529408931732178, -0.003881303360685706, -0.0008150592911988497, -2.8013790142722428e-05, -0.7737489938735962, -0.0214909166097641, -0.6008079051971436, -0.0007388246012851596, -0.025942284613847733, -0.07416524738073349, -8.940297266235575e-05, -0.3463243842124939, -0.00012778419477399439, -1.8596476365928538e-05, -2.3841574147809297e-05, -0.012834563851356506, -0.9278497099876404, -1.6689286894688848e-06, -0.03506690263748169, -0.0006323245470412076, -0.012842448428273201, -7.30726242181845e-05, -0.49687308073043823, -8.583032467868179e-06, -0.0010094314347952604, -0.008457084186375141, -0.02293442375957966, -0.12287896871566772, -0.0001292145170737058, -0.4836964011192322, -0.0016108882846310735, -0.7285769581794739, -0.00295321736484766, -0.008273494429886341, -0.02430662512779236, -0.0018960132729262114, -2.714594841003418, -0.28549209237098694, -0.0051302220672369, -0.00040236959466710687, -9.715084888739511e-05, -0.00033718624035827816, -9.65590606938349e-06], "finish_reason": "length"}], "metrics": {"energy": 905.9762909355168, "energy_per_token": 3.5389698864668624, "time": 21.650745, "time_per_token": 0.08457322265625}}
{"outputs": [{"text": "# Split the data into training and test sets\n    X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.3, random_state=25)\n\n    # Train the model on the training set\n    log_reg = LogisticRegression()\n    log_reg.fit(X_train.to_numpy().reshape(-1, 1), y_train)\n\n    # Predict the target for the test set\n    pred_test = log_reg.predict(X_test.to_numpy().reshape(-1, 1))\n\n    # Evaluate the performance of the model using a confusion matrix\n    cm = confusion_matrix(y_test, pred_test)\n\n    # Plot the confusion matrix\n    fig, ax = plt.subplots(figsize=(7.5, 7.5))\n    ax.matshow(cm, cmap=plt.cm.Reds, alpha=0.3)\n    for i in range(cm.shape[0]):\n        for j in range(cm.shape", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "2", "5", ")", "\n", "\n", "    ", "#", " Train", " the", " model", " on", " the", " training", " set", "\n", "    ", "log", "_", "reg", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "log", "_", "reg", ".", "fit", "(", "X", "_", "train", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " the", " target", " for", " the", " test", " set", "\n", "    ", "pred", "_", "test", " =", " log", "_", "reg", ".", "predict", "(", "X", "_", "test", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "\n", "    ", "#", " E", "valuate", " the", " performance", " of", " the", " model", " using", " a", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " pred", "_", "test", ")", "\n", "\n", "    ", "#", " Plot", " the", " confusion", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "7", ".", "5", ",", " ", "7", ".", "5", "))", "\n", "    ", "ax", ".", "mat", "show", "(", "cm", ",", " c", "map", "=", "plt", ".", "cm", ".", "Red", "s", ",", " alpha", "=", "0", ".", "3", ")", "\n", "    ", "for", " i", " in", " range", "(", "cm", ".", "shape", "[", "0", "]", "):", "\n", "        ", "for", " j", " in", " range", "(", "cm", ".", "shape"], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -0.27506178617477417, -0.03995629400014877, -0.334110289812088, -0.015279857441782951, -1.9654672145843506, -0.006829964462667704, -0.05304906889796257, -0.006044441368430853, -0.5848751068115234, -0.020632287487387657, -0.00014447122521232814, -0.0005806190893054008, -0.0014256800059229136, -1.2159273865108844e-05, -0.0004901876673102379, -0.0006576997111551464, -0.0037662305403500795, -1.0609570381348021e-05, -1.311301275563892e-06, -7.462222856702283e-05, -9.786603914108127e-05, -3.576272320060525e-06, -2.3007127310847864e-05, -0.0004267973708920181, -0.00270263385027647, -5.602820692729438e-06, -1.1920922133867862e-06, -7.152555099310121e-07, -1.1920928244535389e-07, -9.560128091834486e-05, -0.10255027562379837, -0.19686201214790344, -0.005305259022861719, -0.04454236850142479, -0.02882971242070198, -1.9550132492440753e-05, -5.960462772236497e-07, -0.00777043029665947, -0.005298499949276447, -2.52720492426306e-05, -0.7104477286338806, -0.40649929642677307, -0.02217847667634487, -1.311301275563892e-06, -1.1920922133867862e-06, -0.0017164511373266578, -3.6224935054779053, -3.088149070739746, -0.24310527741909027, -0.01317533291876316, -0.20648467540740967, -0.0007242917199619114, -0.005624184384942055, -0.9419287443161011, -0.23988550901412964, -2.2162721157073975, -1.4518468379974365, -0.017833249643445015, -0.014330684207379818, -0.5737708806991577, -0.01646643504500389, -0.0005181877058930695, -1.0285789966583252, -1.3965978622436523, -0.07720388472080231, -0.07992389798164368, -0.0003175231395289302, -9.536738616588991e-07, -2.3841855067985307e-07, -7.271740287251305e-06, -0.33906498551368713, -0.05928240716457367, -0.0020437799394130707, -0.005608299747109413, -6.007967749610543e-05, -1.9073304429184645e-05, -0.002618576865643263, -2.9682672902708873e-05, -3.0040289857424796e-05, -0.12558157742023468, -0.005407468415796757, -1.9192511899746023e-05, -0.06882615387439728, -0.19043703377246857, -5.364403477869928e-06, -0.2824992835521698, -0.00022790218645241112, -0.001501148217357695, -8.95221673999913e-05, 0.0, -0.0010880271438509226, -2.0503786799963564e-05, -0.0001599660754436627, -0.09069276601076126, -4.100715523236431e-05, -2.932505594799295e-05, -0.001007526065222919, -0.010163577273488045, -0.00014709345123264939, -1.9073468138230965e-06, -0.08346976339817047, -0.016709022223949432, -0.01165580190718174, -0.00016127715934999287, -0.0033318265341222286, -0.39306002855300903, -0.0031411137897521257, -0.14943212270736694, -0.210931196808815, -0.21588316559791565, -0.004827273543924093, -0.01948115974664688, -0.002742817159742117, -0.029162412509322166, -0.0002535260282456875, -1.924972653388977, -2.114119529724121, -1.900180459022522, -0.016170421615242958, -0.0030518644489347935, -5.722029527532868e-06, -1.1920928244535389e-07, -2.8967437174287625e-05, -5.960446742392378e-06, -0.0013442536583170295, -0.0010108605492860079, -2.8609820219571702e-05, -9.7508447652217e-05, -0.004417423624545336, -0.002057222882285714, -1.1920928244535389e-07, -1.0728830375228426e-06, -2.5987286790041253e-05, -1.9907753085135482e-05, -4.768360213347478e-06, -1.1920928244535389e-07, -5.531158240046352e-05, -1.9073468138230965e-06, -8.153582894010469e-05, -0.007462127599865198, -2.264974000354414e-06, -0.00037126801908016205, -0.003391706384718418, -0.013163803145289421, -0.0004524161049630493, -0.008879697881639004, -2.9101407527923584, -0.009344767779111862, -0.0424879714846611, -2.0432021617889404, -0.36617621779441833, -0.0011401826050132513, -0.007557373493909836, -0.08804265409708023, -0.49875354766845703, -0.0013434203574433923, -0.0003698380314745009, -0.17836597561836243, -0.002241243841126561, -0.23325961828231812, -0.024807140231132507, -0.002920887665823102, -2.622600959512056e-06, -2.1219027985353023e-05, -0.000105375460407231, -0.009857782162725925, -5.960462772236497e-07, -0.0016500442288815975, -0.007967475801706314, -0.011601717211306095, -4.887569048150908e-06, -1.1920928244535389e-07, -0.056669045239686966, -0.014906450174748898, -0.3156837224960327, -0.0008400725200772285, -0.041398800909519196, -0.2951645851135254, -0.01325227227061987, -0.0010305099422112107, -0.00012146688823122531, -0.151946559548378, -0.002394310897216201, -0.6473003029823303, -0.014867222867906094, -0.0013805630151182413, -0.0010363452602177858, -0.0003778220561798662, -3.099436753473128e-06, -3.099436753473128e-06, -0.00015436411194968969, -1.060505986213684, -0.12041636556386948, -6.556489552167477e-06, -0.01783219538629055, -1.4105888605117798, -0.5583744049072266, -0.9865173697471619, -0.0007596705690957606, -0.02027711272239685, -0.016775960102677345, -0.007786043919622898, -0.0008642514003440738, -0.002369812224060297, -0.003775018732994795, -0.004220863804221153, -0.005030237603932619, -0.03459729254245758, -0.08184763044118881, -0.00014184899919200689, -1.4305012882687151e-05, -0.00016080040950328112, -0.0020378315821290016, -0.002163333585485816, -2.622600959512056e-06, -0.003504684194922447, -0.0022116266191005707, -1.0490362910786644e-05, -0.0006313714548014104, -9.179073458653875e-06, -2.2630386352539062, -1.1920928244535389e-07, -0.003719793865457177, -0.00043561504571698606, -0.00010525626566959545, -0.010635598562657833, -8.583032467868179e-06, -0.09369849413633347, -0.005775194149464369, -0.018083816394209862, -0.009892485104501247, -0.6655078530311584, -0.0004638549580704421, -0.004637676291167736, -2.062299427052494e-05, -0.0001776060671545565, -0.0006213641609065235, -9.65590606938349e-06, -2.3841855067985307e-07, -3.099436753473128e-06, -2.1934269170742482e-05, -1.585470999998506e-05, -8.702239938429557e-06, -0.0005584587925113738, -0.020340891554951668, -0.00043442347669042647, -1.8596476365928538e-05, -7.867782187531702e-06, -2.1457441107486375e-05, -6.556489552167477e-06, -6.318072337307967e-06, -1.311301275563892e-06, -5.960462772236497e-07], "finish_reason": "length"}], "metrics": {"energy": 871.6977487430578, "energy_per_token": 3.4050693310275695, "time": 21.632877, "time_per_token": 0.08450342578125}}
{"outputs": [{"text": "# Split the data into training and testing sets\n    feature_train, feature_test, target_train, target_test = train_test_split(feature, target, test_size=0.2, random_state=1)\n\n    # Train the logistic regression model\n    model = LogisticRegression()\n    model.fit(feature_train.values.reshape(-1,1), target_train)\n\n    # Predict the target for the test set\n    target_pred = model.predict(feature_test.values.reshape(-1,1))\n\n    # Create the confusion matrix\n    cm = confusion_matrix(target_test, target_pred)\n\n    # Plot the confusion matrix\n    fig, ax = plt.subplots()\n    ax.imshow(cm)\n    plt.xlabel(\"Predicted label\")\n    plt.ylabel(\"True label\")\n    plt.xticks(np.arange(2), [\"0\",\"1\"])\n    plt.yticks(np.arange(2), [\"0\",\"1\"])\n    ax = ax", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " testing", " sets", "\n", "    ", "feature", "_", "train", ",", " feature", "_", "test", ",", " target", "_", "train", ",", " target", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "1", ")", "\n", "\n", "    ", "#", " Train", " the", " logistic", " regression", " model", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "feature", "_", "train", ".", "values", ".", "resh", "ape", "(-", "1", ",", "1", ")", ",", " target", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " the", " target", " for", " the", " test", " set", "\n", "    ", "target", "_", "pred", " =", " model", ".", "predict", "(", "feature", "_", "test", ".", "values", ".", "resh", "ape", "(-", "1", ",", "1", "))", "\n", "\n", "    ", "#", " Create", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "target", "_", "test", ",", " target", "_", "pred", ")", "\n", "\n", "    ", "#", " Plot", " the", " confusion", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "im", "show", "(", "cm", ")", "\n", "    ", "plt", ".", "xlabel", "(", "\"", "Pred", "icted", " label", "\"", ")", "\n", "    ", "plt", ".", "ylabel", "(", "\"", "True", " label", "\"", ")", "\n", "    ", "plt", ".", "xt", "icks", "(", "np", ".", "ar", "ange", "(", "2", ")", ",", " [", "\"", "0", "\"", ",", "\"", "1", "\"", "])", "\n", "    ", "plt", ".", "yt", "icks", "(", "np", ".", "ar", "ange", "(", "2", ")", ",", " [", "\"", "0", "\"", ",", "\"", "1", "\"", "])", "\n", "    ", "ax", " =", " ax"], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -0.27506178617477417, -0.03995629400014877, -0.334110289812088, -0.015279857441782951, -0.15630502998828888, -0.0037797691766172647, -0.052109748125076294, -0.005806128028780222, -2.4366109371185303, -0.011701282113790512, -0.003358677960932255, -0.001493173069320619, -0.0017600059509277344, -2.109982233378105e-05, -0.0008629412623122334, -0.0015382850542664528, -0.00276445341296494, -2.6225699912174605e-05, -4.8397800128441304e-05, -0.0001525762490928173, -0.00037949037505313754, -1.2874520507466514e-05, -3.1470757676288486e-05, -0.00303082843311131, -0.03044828213751316, -1.0132738680113107e-05, -1.1920922133867862e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.00023707917716819793, -0.16422641277313232, -0.005744021851569414, -0.004798919428139925, -0.026095135137438774, -0.042180247604846954, -1.7404405298293568e-05, -5.960462772236497e-07, -0.01137226726859808, -0.006999259348958731, -2.4676019165781327e-05, -0.4632915258407593, -0.3866749703884125, -0.04474347084760666, -2.264974000354414e-06, -4.768370445162873e-07, -0.0018881603609770536, -2.513917922973633, -0.7539823651313782, -0.012724164873361588, -0.11421874165534973, -0.0007351318490691483, -0.0021398996468633413, -0.8299520015716553, -0.2594280242919922, -0.13947245478630066, -0.0009193961159326136, -0.0008083889842964709, -0.1570177674293518, -0.00019047829846385866, -0.7794466018676758, -0.0023010701406747103, -0.00014554394874721766, -3.576278118089249e-07, -1.1920928244535389e-07, -3.576278118089249e-07, -0.23835697770118713, -0.06341834366321564, -0.0007756323902867734, -0.001117082079872489, -0.0011730464175343513, -6.318072337307967e-06, -1.4305012882687151e-05, -0.21436913311481476, -0.009249810129404068, -5.209310256759636e-05, -0.01318768598139286, -1.636160969734192, -0.0041217380203306675, -0.0008849757141433656, 0.0, -0.001671347301453352, -2.4199192921514623e-05, -0.00014006110723130405, -1.3438352346420288, -0.00016950124700088054, -0.002077327808365226, -0.04923347756266594, -0.00016234986833296716, -2.9802276912960224e-06, -0.09425821900367737, -0.031594716012477875, -0.011257817968726158, -0.00020919041708111763, -0.0008693729760125279, -0.36007556319236755, -0.0007696765242144465, -0.06152359023690224, -0.04814004525542259, -0.15197297930717468, -0.004099181387573481, -0.03175998479127884, -0.011250391602516174, -0.01882496476173401, -0.00036971885128878057, -0.2115044742822647, -2.098061486321967e-05, -0.05482768639922142, -0.16554713249206543, -0.0021004059817641973, -3.0397906812140718e-05, -1.6569954823353328e-05, -0.0012727025896310806, -0.0008666335488669574, -2.1219027985353023e-05, -3.981510963058099e-05, -0.0018185520311817527, -0.0012850845232605934, -9.142934868577868e-05, -2.455681169521995e-05, 0.0, -3.909988299710676e-05, -1.9073468138230965e-06, -5.2927523938706145e-05, -0.031039461493492126, -0.0004441943601705134, -0.0021598839666694403, -0.006603325251489878, -0.00041559641249477863, -0.003070760751143098, -0.669952929019928, -0.38310980796813965, -0.0003040566807612777, -5.495397272170521e-05, -0.13535183668136597, -0.00020632999076042324, -0.048107780516147614, -0.010778306052088737, -0.0015090041561052203, -2.3841830625315197e-06, -8.583032467868179e-06, -7.652943895664066e-05, -0.001889588194899261, -8.701899787411094e-05, -0.0005082983989268541, -0.0032076595816761255, -0.0028547984547913074, -6.9141146923357155e-06, -2.3841830625315197e-06, -0.024411682039499283, -0.005257826764136553, -0.06515931338071823, -0.000692842761054635, -0.006436806637793779, -0.3757879137992859, -0.003000046359375119, -0.0015732781030237675, -7.974783511599526e-05, -0.06288910657167435, -0.001335444045253098, -0.645855724811554, -0.011138875037431717, -0.0021377585362643003, -0.0007607426377944648, -0.0003033416287507862, -2.264974000354414e-06, -3.576272320060525e-06, -0.0004412154376041144, -0.29643258452415466, -0.0023319926112890244, -0.00607240479439497, -0.2655560374259949, -0.07454085350036621, -0.5946416258811951, -4.0531076592742465e-06, -0.0013783011818304658, -0.0004009396652691066, -1.532781958580017, -0.002643188228830695, -0.01034611277282238, -2.5919384956359863, -2.7418097943154862e-06, -2.49458646774292, -1.156902551651001, -0.024723175913095474, -0.003972972277551889, -0.004477475769817829, -0.7686861157417297, -0.000521523819770664, -0.012730168178677559, -0.0008467426523566246, -0.0002307625545654446, -0.0002728328399825841, -2.0265558760002023e-06, -0.0011331572895869613, -0.002286916598677635, -3.290122185717337e-05, -0.0012960376916453242, -0.00020215852418914437, -0.00025650550378486514, -0.00014709345123264939, -0.00010239553375868127, -0.0020682865288108587, -0.1312231421470642, -1.4305104514278355e-06, -1.7578765153884888, -1.3828182090946939e-05, -0.0391245037317276, -0.040460143238306046, -3.373566141817719e-05, -1.585470999998506e-05, -1.1920928244535389e-07, -0.00019560330838430673, -0.6754259467124939, -0.04824114963412285, -0.0024462793953716755, -0.14987224340438843, -0.6307708024978638, -0.8143832087516785, -0.0009966888464987278, -0.00020597243565134704, -2.7842800617218018, -0.0010659971740096807, -0.00012206286191940308, -0.06380404531955719, -0.042714960873126984, -8.976056415122002e-05, -0.0004273931554052979, -5.960462772236497e-07, -0.0002033503697020933, -3.182837463100441e-05, -0.00019095504831057042, -2.7894584491150454e-05, -3.576278118089249e-07, -2.264974000354414e-06, -1.0728830375228426e-06, -2.002696055569686e-05, -0.0006752118351869285, -0.00012766500003635883, -5.471556869451888e-05, -0.019772689789533615, -0.000720956246368587, -0.0014405598631128669, -9.655486064730212e-05, -7.795983401592821e-05, -0.04566411301493645, -0.00013636612857226282, -3.540453326422721e-05, -0.0010941001819446683, -0.001908863428980112, -0.026236582547426224, -0.20294611155986786, -1.253071665763855, -1.117100715637207], "finish_reason": "length"}], "metrics": {"energy": 903.8763237648006, "energy_per_token": 3.5307668897062525, "time": 21.653967, "time_per_token": 0.08458580859375}}
{"outputs": [{"text": "# Split the feature and target into training and testing sets\n    X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.3)\n\n    # Initialize the logistic regression model\n    logreg = LogisticRegression()\n\n    # Fit the model on the training data\n    logreg.fit(np.array(X_train).reshape(-1, 1), y_train)\n\n    # Predict the target for the test set\n    y_pred = logreg.predict(np.array(X_test).reshape(-1, 1))\n\n    # Compute the confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n\n    # Create the confusion matrix plot\n    ax = plt.subplot()\n    ax.set_title('Confusion Matrix')\n    ax.plot(cm, '-')\n\n    return cm, ax\n\nimport unittest\nfrom unittest.mock import patch\nfrom io import StringIO\n\nclass TestTaskFunc(unittest.TestCase):\n\n    @patch('sys.", "tokens": ["#", " Split", " the", " feature", " and", " target", " into", " training", " and", " testing", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n", "\n", "    ", "#", " Initialize", " the", " logistic", " regression", " model", "\n", "    ", "log", "reg", " =", " Log", "istic", "Reg", "ression", "()", "\n", "\n", "    ", "#", " Fit", " the", " model", " on", " the", " training", " data", "\n", "    ", "log", "reg", ".", "fit", "(", "np", ".", "array", "(", "X", "_", "train", ")", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " the", " target", " for", " the", " test", " set", "\n", "    ", "y", "_", "pred", " =", " log", "reg", ".", "predict", "(", "np", ".", "array", "(", "X", "_", "test", ")", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "\n", "    ", "#", " Compute", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "#", " Create", " the", " confusion", " matrix", " plot", "\n", "    ", "ax", " =", " plt", ".", "sub", "plot", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "')", "\n", "    ", "ax", ".", "plot", "(", "cm", ",", " '-", "')", "\n", "\n", "    ", "return", " cm", ",", " ax", "\n", "\n", "import", " un", "ittest", "\n", "from", " un", "ittest", ".", "mock", " import", " patch", "\n", "from", " io", " import", " String", "IO", "\n", "\n", "class", " Test", "Task", "Func", "(", "un", "ittest", ".", "TestCase", "):", "\n", "\n", "    ", "@", "patch", "('", "sys", "."], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -1.6235783100128174, -0.0161175187677145, -0.007764989044517279, -0.5850949883460999, -0.2149098664522171, -0.008438643999397755, -0.07814628630876541, -0.006008893717080355, -0.052770137786865234, -0.005128324497491121, -0.5955660939216614, -0.015294297598302364, -0.00015937011630740017, -0.000567275274079293, -0.0009660820942372084, -9.894321920000948e-06, -0.0003349220205564052, -0.0007014198345132172, -0.004705783445388079, -1.2278481335670222e-05, -1.5497195136049413e-06, -6.878139538457617e-05, -0.00013302871957421303, -2.3841830625315197e-06, -3.325883881188929e-05, -0.00038985759601928294, -0.002665421459823847, -5.8412379075889476e-06, -1.5497195136049413e-06, -5.960462772236497e-07, -1.1920928244535389e-07, -8.570780482841656e-05, -0.16738775372505188, -0.21060919761657715, -0.0030261934734880924, -0.03343573585152626, -0.032562267035245895, -2.0503786799963564e-05, -5.960462772236497e-07, -0.006543518975377083, -0.004768547136336565, -4.362964682513848e-05, -0.5794552564620972, -2.0027544498443604, -0.024222154170274734, -0.12588097155094147, -0.00048411093303002417, -0.0020300988107919693, -3.6993484497070312, -0.40461376309394836, -0.1311572790145874, -0.0007784912013448775, -0.0025028828531503677, -0.2112484723329544, -0.00026890001026913524, -0.785295844078064, -0.505344033241272, -0.010732665657997131, -0.00012778419477399439, -9.536738616588991e-07, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.11651172488927841, -0.0019417019793763757, -0.023560449481010437, -0.00013553177996072918, -0.0005770448478870094, -0.23275791108608246, -0.0008449559682048857, -0.07572407275438309, -0.7212784886360168, -0.0030850220937281847, -0.00941160973161459, -0.044720444828271866, -0.011494717560708523, -9.214453893946484e-05, -0.0031041554175317287, -5.2689116273541003e-05, -0.0028653775807470083, -1.4185804502631072e-05, -6.258291978156194e-05, -2.882054567337036, -4.291525328881107e-06, -0.06060969829559326, -0.009277566336095333, -0.001061352901160717, -8.940656698541716e-06, -1.156323378381785e-05, -0.012545477598905563, -0.0035932993050664663, -0.00023850933939684182, 0.0, -0.0021429925691336393, -1.6093124941107817e-05, -0.0001646144810365513, -0.12712480127811432, -0.00010239553375868127, -6.651657167822123e-05, -0.0014546061865985394, -0.06770225614309311, -0.00010287232726113871, -2.3841830625315197e-06, -0.007300248835235834, -0.003906833939254284, -0.004186675418168306, -0.00010740180005086586, -0.0007857572636567056, -0.2221713811159134, -0.001581966644152999, -0.05405448377132416, -0.1050296276807785, -0.23688611388206482, -0.0024039437994360924, -0.05844225361943245, -0.02789795584976673, -0.02146081253886223, -9.727005090098828e-05, -0.0541948564350605, -3.909988299710676e-05, -0.009737138636410236, -0.012474252842366695, -0.0007904027588665485, -7.510157047363464e-06, -2.3007127310847864e-05, -4.172316494077677e-06, -0.0004372832481749356, -0.01942574232816696, -5.960462772236497e-07, -0.0003626880934461951, -0.00022313489171210676, -0.0004904259694740176, -2.3841830625315197e-06, -6.854299135738984e-05, -0.00043704494601115584, -2.0861407392658293e-05, -8.4638240878121e-06, -7.152555099310121e-07, -8.308542601298541e-05, -3.3378546504536644e-06, -4.649054244509898e-05, -0.0021205099765211344, -2.50339189733495e-06, -0.0002936885575763881, -0.0017150230705738068, -0.003419863060116768, -0.0002356490003876388, -0.0026100161485373974, -1.5010818243026733, -0.01557085383683443, -0.00013136000779923052, -7.807903602952138e-05, -0.018826954066753387, -0.00021896349790040404, -0.08612971752882004, -0.005944548640400171, -0.0010632582707330585, -2.3841830625315197e-06, -8.4638240878121e-06, -9.119095193454996e-05, -0.00538067240267992, -2.3841855067985307e-07, -0.002029860857874155, -0.0014998388942331076, -0.0005567907355725765, -1.4305104514278355e-06, -1.0132738680113107e-05, -0.024395277723670006, -0.002605973742902279, -0.03226394206285477, -0.0005355831235647202, -0.0062892138957977295, -1.4626164436340332, -1.052140235900879, -0.05930532515048981, -5.61460001335945e-05, -0.007194445468485355, -0.047421909868717194, -0.0010800487361848354, -0.8368449211120605, -0.0031571565195918083, -0.22446104884147644, -3.707340147229843e-05, -0.33834877610206604, -0.0007385863573290408, -0.08451759070158005, -0.010487562976777554, -0.006462153047323227, -0.9987408518791199, -0.0014398456551134586, -0.8407579660415649, -0.0015335239004343748, -0.01759527064859867, -0.3022902011871338, -0.001129227806814015, -3.099436753473128e-06, -0.0025007424410432577, -0.1318655014038086, -0.006977714132517576, -0.004798681940883398, -0.47589951753616333, -0.01049310714006424, -2.8738150596618652, -0.2033909410238266, -0.029160790145397186, -2.5169970989227295, -3.8350820541381836, -0.9229480624198914, -0.02783280238509178, -0.38715580105781555, -0.00032217081752605736, -0.17296823859214783, -0.08955428004264832, -0.001809746609069407, -0.0010043105576187372, -0.1598052829504013, -0.020074648782610893, -3.6075873374938965, -0.9408027529716492, -4.005352093372494e-05, -0.0036770368460565805, -2.517209529876709, -1.1922621726989746, -0.0004140473320148885, -0.027400610968470573, -2.6464111215318553e-05, -6.6756979322235566e-06, -0.01799858547747135, -0.49806106090545654, -0.41599446535110474, -0.032969627529382706, 0.0, -4.815939246327616e-05, -6.794906312279636e-06, -0.0026491330936551094, -1.72804594039917, -0.008882533758878708, -0.013039438985288143, -0.06471726298332214, -0.3818698227405548, -0.0074901701882481575, -9.810443589231e-05, -1.1920928244535389e-07, -2.861018856492592e-06, -0.009418695233762264, -3.7431014789035544e-05, -0.00030787018476985395, -0.15777836740016937, -0.004672205075621605, -0.5208821892738342, -0.02621440216898918, -0.001095648156479001, -0.014086109586060047, -1.5497195136049413e-06], "finish_reason": "length"}], "metrics": {"energy": 909.7910146713258, "energy_per_token": 3.5538711510598664, "time": 21.649292, "time_per_token": 0.084567546875}}
{"outputs": [{"text": "# Split the feature and target into training and testing sets\n    X_train, X_test, y_train, y_test = train_test_split(feature.to_numpy().reshape(-1, 1), target, test_size=0.3, random_state=10)\n    # Train a logistic regression model on the training data\n    logmodel = LogisticRegression()\n    logmodel.fit(X_train, y_train)\n    # Predict the target variable for the test set\n    predictions = logmodel.predict(X_test)\n    # Create a confusion matrix plot\n    cm = confusion_matrix(y_test, predictions)\n    fig, ax = plt.subplots(figsize=(5,5))\n    ax.imshow(cm)\n    ax.grid(False)\n    ax.xaxis.set(ticks=(0, 1), ticklabels=('Predicted 0s', 'Predicted 1s'))\n    ax.yaxis.set(ticks=(0, 1), ticklabels=('Actual 0s', 'Actual", "tokens": ["#", " Split", " the", " feature", " and", " target", " into", " training", " and", " testing", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", "0", ")", "\n", "    ", "#", " Train", " a", " logistic", " regression", " model", " on", " the", " training", " data", "\n", "    ", "log", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "log", "model", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n", "    ", "#", " Pred", "ict", " the", " target", " variable", " for", " the", " test", " set", "\n", "    ", "pred", "ictions", " =", " log", "model", ".", "predict", "(", "X", "_", "test", ")", "\n", "    ", "#", " Create", " a", " confusion", " matrix", " plot", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " predictions", ")", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "5", ",", "5", "))", "\n", "    ", "ax", ".", "im", "show", "(", "cm", ")", "\n", "    ", "ax", ".", "grid", "(", "False", ")", "\n", "    ", "ax", ".", "x", "axis", ".", "set", "(", "t", "icks", "=(", "0", ",", " ", "1", ")", ",", " tick", "labels", "=", "('", "Pred", "icted", " ", "0", "s", "'", ",", " '", "Pred", "icted", " ", "1", "s", "'))", "\n", "    ", "ax", ".", "y", "axis", ".", "set", "(", "t", "icks", "=(", "0", ",", " ", "1", ")", ",", " tick", "labels", "=", "('", "Act", "ual", " ", "0", "s", "'", ",", " '", "Act", "ual"], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -1.6235783100128174, -0.0161175187677145, -0.007764989044517279, -0.5850949883460999, -0.2149098664522171, -0.008438643999397755, -0.07814628630876541, -0.006008893717080355, -0.052770137786865234, -0.005128324497491121, -0.5955660939216614, -0.015294297598302364, -0.00015937011630740017, -0.000567275274079293, -0.0009660820942372084, -9.894321920000948e-06, -0.0003349220205564052, -0.0007014198345132172, -0.004705783445388079, -1.2278481335670222e-05, -1.5497195136049413e-06, -6.878139538457617e-05, -0.00013302871957421303, -2.3841830625315197e-06, -3.325883881188929e-05, -0.00038985759601928294, -0.002665421459823847, -5.8412379075889476e-06, -1.5497195136049413e-06, -5.960462772236497e-07, -1.1920928244535389e-07, -8.570780482841656e-05, -0.16738775372505188, -1.690051794052124, -0.917046844959259, -1.7762025890988298e-05, -0.14571397006511688, -0.003566573141142726, -0.01700042374432087, -0.0005080600967630744, 0.0, -0.0014031813479959965, -1.3828182090946939e-05, -0.00010990492592100054, -0.16179431974887848, -3.611976353568025e-05, -6.913899414939806e-05, -0.0020896997302770615, -0.19592313468456268, -0.26164358854293823, -0.037097759544849396, -9.894321920000948e-06, -1.1920928244535389e-07, -0.004664611537009478, -0.004846373572945595, -1.823885577323381e-05, -0.6684813499450684, -0.5826394557952881, -0.204132542014122, -1.5497195136049413e-06, -1.1920928244535389e-07, -0.0014290130930021405, -1.6879929304122925, -1.2253508567810059, -1.3169678449630737, -0.015708984807133675, -2.2297308444976807, -0.02531786449253559, -0.9791370630264282, -1.1735129356384277, -0.019354654476046562, -0.0005029367166571319, -0.0013847296359017491, -0.803327739238739, -0.008451292291283607, -0.037624865770339966, -0.9475213289260864, -0.02204904891550541, -0.0006575806182809174, -1.3095853328704834, -3.5393447875976562, -0.010943042114377022, -0.0008775911992415786, -2.264974000354414e-06, -9.536738616588991e-07, -2.3841855067985307e-07, -0.3717883229255676, -0.5064029693603516, -0.00195229088421911, -0.026056110858917236, -0.0013655632501468062, -0.0333629846572876, -8.594620157964528e-05, -8.49926145747304e-05, -0.0010057396721094847, -0.010753068141639233, -4.23184028477408e-05, -0.009270361624658108, -0.2074912041425705, -7.247662142617628e-05, -9.536738616588991e-07, -0.004876980558037758, -0.001961809117347002, -0.07784471660852432, -0.03981803357601166, -0.4550115168094635, -0.0017402517842128873, -0.0666133463382721, -0.09524896740913391, -2.116344928741455, -0.22141705453395844, -0.003793188836425543, -0.1801217496395111, -0.27562180161476135, -0.1908746361732483, -0.00025960413040593266, -0.6847558617591858, -0.6127779483795166, -0.007868602871894836, -0.0012482955353334546, -6.9141146923357155e-06, -5.3165931603871286e-05, -2.2053474822314456e-05, -0.00277527142316103, -0.00029416524921543896, -1.847726889536716e-05, -2.4914430468925275e-05, -0.0014142522122710943, -0.0010994586627930403, -0.052459679543972015, -0.01195833832025528, -1.0930067300796509, -0.14642544090747833, -0.0019175490597262979, -0.00020323118951637298, -1.0615906715393066, -0.2769087553024292, -0.0018872085493057966, -0.31212788820266724, -0.04553188011050224, -0.004403300117701292, -7.033323527139146e-06, -1.2755313036905136e-05, -0.00022766382608097047, -0.010563294403254986, -7.510157047363464e-06, -0.0017200212460011244, -0.004738886374980211, -0.011412457562983036, -0.17978549003601074, -0.013182039372622967, -0.019616413861513138, -1.2976536750793457, -0.039066266268491745, -0.002704773796722293, -0.0020239122677594423, -0.0005447572330012918, -6.9141146923357155e-06, -4.172316494077677e-06, -0.0001565095444675535, -0.5405687093734741, -0.016385169699788094, -4.6491513785440475e-06, -0.013406134210526943, -1.8655494451522827, -0.002389791887253523, -1.8899471759796143, -0.004490885883569717, -0.0026265429332852364, -0.003144678892567754, -0.05044371634721756, -0.1370672732591629, -0.5213786363601685, -3.6954811548639555e-06, -0.0019666869193315506, -0.0008878341759555042, -1.0832562446594238, -0.0011382774682715535, -0.0015503065660595894, -0.08615770936012268, -0.0005370128201320767, -0.14856702089309692, -1.2993727978027891e-05, -0.0015174552099779248, -0.006818479858338833, -0.00420780573040247, -0.0002273062855238095, -0.00922512449324131, -0.000125281119835563, -0.03874877095222473, -0.22293905913829803, -1.1920928244535389e-07, -8.439661905867979e-05, -0.0053011090494692326, -0.00026127262390218675, -1.4781842764932662e-05, -0.005996451713144779, -0.001860198681242764, -0.0010789770167320967, -1.11073637008667, -0.0002951186615973711, -0.11619305610656738, -1.9192511899746023e-05, -0.2988141179084778, -0.00025018901214934886, -0.059083979576826096, -0.0007136897183954716, -0.07777038216590881, -0.00033420699764974415, -0.024633854627609253, -0.0005511910421773791, -0.03363366797566414, -0.00012242044613230973, -3.4570634852570947e-06, -0.003966323100030422, -9.536288416711614e-05, -0.0002743821241892874, -0.00012206286191940308, -5.3165931603871286e-05, -1.5497195136049413e-06, -0.000764792668633163, -0.0024634036235511303, -1.6093124941107817e-05, -4.0649541915627196e-05, -8.821448318485636e-06, -0.001359134796075523, -1.3589766240329482e-05, -3.576272320060525e-06, -9.536738616588991e-07, -2.002696055569686e-05, -5.960462772236497e-07, -2.3841855067985307e-07, -6.878139538457617e-05, -3.349725011503324e-05, -1.847726889536716e-05, -0.0007905219099484384, -9.059865078597795e-06, -8.582700684200972e-05, -8.4638240878121e-06, -0.001022531185299158, -1.5497195136049413e-06, -1.3708974620385561e-05, -1.0490362910786644e-05, -9.48860906646587e-05, -3.45700973412022e-05, -2.8490614567999728e-05, -3.111314072157256e-05, -2.098061486321967e-05, -5.483612312673358e-06, -1.1324817933200393e-05, -0.00010227633902104571, -7.724463648628443e-05, -1.3828182090946939e-05], "finish_reason": "length"}], "metrics": {"energy": 892.2036918430326, "energy_per_token": 3.485170671261846, "time": 21.855837, "time_per_token": 0.08537436328125}}
{"outputs": [{"text": "# Split the feature and target into training and testing sets\n    X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.33, random_state=42)\n\n    # Create a logistic regression model object\n    logreg = LogisticRegression(random_state=42)\n\n    # Fit the model to the training data\n    logreg.fit(X_train.to_numpy().reshape(-1, 1), y_train)\n\n    # Predict the target for the test set\n    y_pred = logreg.predict(X_test.to_numpy().reshape(-1, 1))\n\n    # Compute the confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n\n    # Plot the confusion matrix\n    fig, ax = plt.subplots()\n    ax.imshow(cm, interpolation='nearest', cmap=plt.cm.Blues)\n    ax.set_title('Confusion Matrix')\n    ax.set_xlabel('Predicted Label')\n    ", "tokens": ["#", " Split", " the", " feature", " and", " target", " into", " training", " and", " testing", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " a", " logistic", " regression", " model", " object", "\n", "    ", "log", "reg", " =", " Log", "istic", "Reg", "ression", "(", "random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "log", "reg", ".", "fit", "(", "X", "_", "train", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " the", " target", " for", " the", " test", " set", "\n", "    ", "y", "_", "pred", " =", " log", "reg", ".", "predict", "(", "X", "_", "test", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "\n", "    ", "#", " Compute", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "#", " Plot", " the", " confusion", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "im", "show", "(", "cm", ",", " interpolation", "='", "ne", "arest", "'", ",", " c", "map", "=", "plt", ".", "cm", ".", "Bl", "ues", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Pred", "icted", " Label", "')", "\n", "    "], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -1.6235783100128174, -0.0161175187677145, -0.007764989044517279, -0.5850949883460999, -0.2149098664522171, -0.008438643999397755, -0.07814628630876541, -0.006008893717080355, -0.052770137786865234, -0.005128324497491121, -0.5955660939216614, -0.015294297598302364, -0.00015937011630740017, -0.000567275274079293, -0.0009660820942372084, -9.894321920000948e-06, -0.0003349220205564052, -0.0007014198345132172, -0.004705783445388079, -1.2278481335670222e-05, -1.5497195136049413e-06, -6.878139538457617e-05, -0.00013302871957421303, -2.3841830625315197e-06, -3.325883881188929e-05, -0.00038985759601928294, -0.002665421459823847, -5.8412379075889476e-06, -1.5497195136049413e-06, -5.960462772236497e-07, -1.1920928244535389e-07, -8.570780482841656e-05, -0.16738775372505188, -0.21060919761657715, -0.0030261934734880924, -0.03343573585152626, -0.032562267035245895, -2.0503786799963564e-05, -5.960462772236497e-07, -0.006543518975377083, -0.004768547136336565, -4.362964682513848e-05, -0.5794552564620972, -1.5675548315048218, -0.11366710066795349, -0.03010166622698307, -2.3841830625315197e-06, -8.344646857949556e-07, -0.0005659647285938263, -0.12575379014015198, -0.009380551055073738, -0.012097911909222603, -0.011389239691197872, -0.14821770787239075, -0.0004720765573438257, -0.0015528061194345355, -0.8284996151924133, -0.26464128494262695, -0.04046071693301201, -0.0005052005290053785, -0.013220391236245632, -2.034905433654785, -0.12733399868011475, -0.00017271934484597296, -0.8939234614372253, -0.3357820212841034, -0.01122033316642046, -0.00019596086349338293, -7.152555099310121e-07, -1.1920928244535389e-07, -8.344646857949556e-07, -1.9408622980117798, -1.7396265268325806, -1.6689286894688848e-06, -2.3841855067985307e-07, -0.006185672711580992, -0.6058952808380127, -0.0057297986932098866, -0.05027016997337341, -0.008619248867034912, -0.016568800434470177, -0.00020168177434243262, -0.0004929280839860439, -0.22399796545505524, -0.002779313363134861, -0.08665860444307327, -0.6318042278289795, -0.0015811334596946836, -0.007665622513741255, -0.03444919362664223, -0.01626906357705593, -0.00012194366718176752, -0.0026081139221787453, -2.9682672902708873e-05, -0.0019525288371369243, -9.894321920000948e-06, -2.8013790142722428e-05, -0.08426614850759506, -0.006058305036276579, -2.8371408916427754e-05, -0.1196247935295105, -0.2306589037179947, -7.510157047363464e-06, -0.3606274425983429, -0.00026246439665555954, -0.0020524642895907164, -9.369411418447271e-05, 0.0, -0.0009035557159222662, -1.8000440832111053e-05, -0.00011014331539627165, -0.1296822726726532, -3.158996332786046e-05, -3.182837463100441e-05, -0.0012174582807347178, -0.005228654481470585, -0.00016151554882526398, -7.033323527139146e-06, -0.08737992495298386, -0.007800237741321325, -0.004378019366413355, -0.00016378014697693288, -0.0013523490633815527, -0.39763522148132324, -0.0007886160165071487, -0.03997015208005905, -0.16101931035518646, -0.23178814351558685, -0.0023198616690933704, -0.09073196351528168, -0.05024693161249161, -0.02826550230383873, -0.00013696208770852536, -0.058203622698783875, -5.9602869441732764e-05, -0.00528569333255291, -0.009865572676062584, -0.0007198841194622219, -3.4570634852570947e-06, -2.5033637939486653e-05, -2.861018856492592e-06, -0.0002671123365871608, -0.0010163385886698961, -1.4066597032069694e-05, -1.9907753085135482e-05, -0.0029975504148751497, -0.001760957995429635, -1.1920928244535389e-07, -5.483612312673358e-06, -2.825220326485578e-05, -1.4305012882687151e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -2.8132995794294402e-05, -1.4305104514278355e-06, -3.111314072157256e-05, -0.0031379053834825754, -1.0728830375228426e-06, -0.00033945043105632067, -0.0032263153698295355, -0.00415094243362546, -0.00029380773776210845, -0.0014862692914903164, -1.9513270854949951, -0.015182996168732643, -9.476689592702314e-05, -6.675497570540756e-05, -0.02754743956029415, -0.00019965562387369573, -0.06712478399276733, -0.006695218849927187, -0.0007033258443698287, -1.0728830375228426e-06, -9.059865078597795e-06, -5.769562994828448e-05, -0.0009051040397025645, -1.1920928244535389e-07, -0.00330901425331831, -0.0027947674971073866, -0.00037102968781255186, -8.344646857949556e-07, -1.2874520507466514e-05, -0.046287570148706436, -0.0025213139597326517, -0.027500934898853302, -0.0006062338361516595, -0.008782332763075829, -0.6491965055465698, -0.002971164882183075, -0.0011251792311668396, -5.221230458118953e-05, -0.15374471247196198, -0.0022508781403303146, -0.37030377984046936, -0.007585412822663784, -0.0007250064518302679, -0.000491021724883467, -0.0001282609737245366, -1.311301275563892e-06, -2.622600959512056e-06, -4.0411134250462055e-05, -0.3833630084991455, -0.0019910766277462244, -0.010620029643177986, -0.14406336843967438, -0.0934726893901825, -0.6541382670402527, -3.6954811548639555e-06, -0.001698243198916316, -0.0006108802044764161, -0.14933694899082184, -1.2440873384475708, -0.016346000134944916, -0.0010677833342924714, -2.145764938177308e-06, -0.008524223230779171, -1.4781842764932662e-05, -0.00011145447206217796, -9.536738616588991e-07, -0.011179427616298199, -0.0012285312404856086, -7.629365427419543e-06, -0.00028272447525523603, -5.8412379075889476e-06, -0.023182084783911705, -9.894321920000948e-06, -0.0025751783978194, -0.0021941415034234524, -0.019563108682632446, -0.006209485698491335, -6.890059739816934e-05, -0.3602788746356964, -0.032819900661706924, -0.005565505009144545, -0.24254189431667328, -0.001279726973734796, -3.099436753473128e-06, -0.0023730231914669275, -0.10982931405305862, -0.0011530425399541855, -0.01417579036206007, -0.006034132558852434, -6.723177648382261e-05, -0.01109018549323082, -0.00044979469384998083, -0.8279023170471191, -0.0016448076348751783, -0.008748654276132584, -0.00014530557382386178, -2.404292106628418, -0.2940560281276703, -0.00013731967192143202, -1.645074735279195e-05], "finish_reason": "length"}], "metrics": {"energy": 865.4183464050292, "energy_per_token": 3.3805404156446452, "time": 21.652922, "time_per_token": 0.0845817265625}}
{"outputs": [{"text": "# Split the feature and target into training and testing sets\n    X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.3, random_state=42)\n\n    # Create a logistic regression model and fit it to the training data\n    logreg = LogisticRegression()\n    logreg.fit(X_train.to_frame(), y_train)\n\n    # Predict the target variable for the test set\n    y_pred = logreg.predict(X_test.to_frame())\n\n    # Create a confusion matrix plot\n    cm = confusion_matrix(y_test, y_pred)\n    fig, ax = plt.subplots(figsize=(8, 6))\n    sns.heatmap(cm, annot=True, fmt='d', cmap=\"Blues\", cbar_kws={'label': 'Count'}, xticklabels=[\"No Default\", \"Default\"], yticklabels=[\"No Default\", \"Default\"], ax=ax)\n    ax.set_title", "tokens": ["#", " Split", " the", " feature", " and", " target", " into", " training", " and", " testing", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " a", " logistic", " regression", " model", " and", " fit", " it", " to", " the", " training", " data", "\n", "    ", "log", "reg", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "log", "reg", ".", "fit", "(", "X", "_", "train", ".", "to", "_", "frame", "()", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " the", " target", " variable", " for", " the", " test", " set", "\n", "    ", "y", "_", "pred", " =", " log", "reg", ".", "predict", "(", "X", "_", "test", ".", "to", "_", "frame", "())", "\n", "\n", "    ", "#", " Create", " a", " confusion", " matrix", " plot", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "8", ",", " ", "6", "))", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "cm", ",", " annot", "=", "True", ",", " fmt", "='", "d", "'", ",", " c", "map", "=", "\"", "Bl", "ues", "\"", ",", " c", "bar", "_", "k", "ws", "={", "'", "label", "':", " '", "Count", "'}", ",", " ", "xt", "ick", "labels", "=[", "\"", "No", " Default", "\"", ",", " \"", "Default", "\"", "]", ",", " y", "tick", "labels", "=[", "\"", "No", " Default", "\"", ",", " \"", "Default", "\"", "]", ",", " ax", "=", "ax", ")", "\n", "    ", "ax", ".", "set", "_", "title"], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -1.6235783100128174, -0.0161175187677145, -0.007764989044517279, -0.5850949883460999, -0.2149098664522171, -0.008438643999397755, -0.07814628630876541, -0.006008893717080355, -0.052770137786865234, -0.005128324497491121, -0.5955660939216614, -0.015294297598302364, -0.00015937011630740017, -0.000567275274079293, -0.0009660820942372084, -9.894321920000948e-06, -0.0003349220205564052, -0.0007014198345132172, -0.004705783445388079, -1.2278481335670222e-05, -1.5497195136049413e-06, -6.878139538457617e-05, -0.00013302871957421303, -2.3841830625315197e-06, -3.325883881188929e-05, -0.00038985759601928294, -0.002665421459823847, -5.8412379075889476e-06, -1.5497195136049413e-06, -5.960462772236497e-07, -1.1920928244535389e-07, -8.570780482841656e-05, -0.16738775372505188, -0.21060919761657715, -0.0030261934734880924, -0.03343573585152626, -0.032562267035245895, -2.0503786799963564e-05, -5.960462772236497e-07, -0.006543518975377083, -0.004768547136336565, -4.362964682513848e-05, -0.5794552564620972, -0.43798860907554626, -0.02939348854124546, -1.6689286894688848e-06, -2.3841855067985307e-07, -0.0019330164650455117, -0.5890260338783264, -0.022228844463825226, -0.022699402645230293, -0.010378911159932613, -0.13196423649787903, -0.00045015214709565043, -0.0017196642002090812, -0.909857988357544, -0.2698969542980194, -0.05554109066724777, -0.00041976699139922857, -0.011830171570181847, -0.7759022116661072, -0.07151862978935242, -0.0951651856303215, -0.06358873099088669, -0.0007110689766705036, -0.007190657779574394, -0.030783334746956825, -0.0019555033650249243, -0.0002444683632347733, -0.9852405190467834, -0.3296828269958496, -0.014379803091287613, -9.679325739853084e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.13305725157260895, -0.012572318315505981, -0.0014036574866622686, -0.003944475203752518, -2.3007127310847864e-05, -0.0010986251290887594, -1.0847986231965479e-05, -2.3603161025675945e-05, -0.06536748260259628, -0.004565055016428232, -1.4305012882687151e-05, -0.12203499674797058, -0.23784297704696655, -9.65590606938349e-06, -0.9465934038162231, -0.0007225048611871898, -0.006289924494922161, -0.0025843337643891573, -0.00012313561455812305, -7.152555099310121e-07, -0.004701512400060892, -0.0036007824819535017, -0.003297370159998536, -0.00012754580529872328, -0.0007983834366314113, -0.5175617933273315, -0.00031418632715940475, -0.01730392500758171, -0.12165971845388412, -2.159731149673462, -0.12897616624832153, -0.001847109873779118, -0.18743805587291718, -0.23717419803142548, -0.08278084546327591, -0.00021073981770314276, -0.032209575176239014, -2.002696055569686e-05, -0.0045625632628798485, -0.004782309755682945, -0.0002580548170953989, -2.145764938177308e-06, -1.883488948806189e-05, -2.50339189733495e-06, -0.0004234609368722886, -0.00014959646796341985, -2.7418097943154862e-06, -1.0251946150674485e-05, -0.0007282227743417025, -0.0003967689990531653, -3.576278118089249e-07, -1.4185804502631072e-05, -0.00024005869636312127, -0.0026021688245236874, -0.0036817877553403378, -0.00022766382608097047, -0.0019778707064688206, -0.5934484601020813, -0.13576915860176086, -0.0005471401382237673, -5.829164365422912e-05, -2.1367621421813965, -0.2829594016075134, -0.0009035557159222662, -0.2231229543685913, -0.015558881685137749, -0.0027938163839280605, -2.861018856492592e-06, -4.410734163684538e-06, -6.97350042173639e-05, -0.0011175584513694048, -2.3841855067985307e-07, -0.003014427376911044, -0.0010283663868904114, -0.00029666791670024395, -1.311301275563892e-06, -4.768360213347478e-06, -0.01870984397828579, -0.010926417075097561, -0.05871129408478737, -0.654408872127533, -0.009240479208528996, -0.0006393534131348133, -0.0003738896339200437, -0.00014065706636756659, -2.145764938177308e-06, -2.264974000354414e-06, -8.082063141046092e-05, -1.4458328485488892, -0.03780050575733185, -3.576272320060525e-06, -0.006986474618315697, -0.547049343585968, -7.64102369430475e-05, -0.03215843811631203, -0.5369357466697693, -0.0017240673769265413, -0.006571468897163868, -0.008657541126012802, -2.6586296558380127, -0.00037079135654494166, -0.000727508042473346, -0.00818801298737526, 0.0, -1.4066597032069694e-05, -0.0003636414185166359, -0.006998075637966394, -0.0028092702850699425, -0.0001248043408850208, -0.0005166388000361621, -0.00010048838157672435, -0.03503386676311493, -0.10887611657381058, -0.006092547904700041, -0.00021002470748499036, -1.168244216387393e-05, -0.03554653003811836, -0.004063920583575964, -2.9686617851257324, -0.7403385639190674, -0.17282915115356445, -3.099436753473128e-06, -0.0007198841194622219, -0.007615226320922375, -2.837317943572998, -0.00010585224663373083, -0.459398478269577, -0.000554288737475872, -0.00015853578224778175, -0.5145925283432007, -0.002825674833729863, -0.004606112837791443, -0.0005138983833603561, -0.010577094741165638, -0.040073346346616745, -0.15724791586399078, -0.00016485285595990717, -2.112816572189331, -2.861018856492592e-06, -0.0004991239402443171, -3.814689989667386e-06, -1.7702302932739258, -0.5126014947891235, -2.985548973083496, -3.5675995349884033, -0.02577117085456848, -0.00022599527437705547, -0.014465932734310627, -0.003805539570748806, -0.008091290481388569, -0.0013829439412802458, -0.0007769426447339356, -0.38462725281715393, -0.00951505359262228, 0.0, -0.007313739508390427, -0.0006591292913071811, -0.024015134200453758, -0.0010870745172724128, -0.017836295068264008, -7.390703103737906e-05, -0.0010112178279086947, -0.0005198557628318667, -7.593343616463244e-05, -0.0958341509103775, -0.002043066080659628, -0.009346184320747852, -0.004319029860198498, -8.689979586051777e-05, -0.005068785510957241, -0.00788575317710638, -0.0300592128187418, -0.19464324414730072, -0.00012957210128661245, -0.0030019478872418404, -0.014578371308743954, -0.5846989750862122], "finish_reason": "length"}], "metrics": {"energy": 871.9200877990717, "energy_per_token": 3.4059378429651237, "time": 21.642132, "time_per_token": 0.084539578125}}
{"outputs": [{"text": "# Split the feature and target data into training and testing sets\n    X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.2, random_state=42)\n\n    # Reshape the feature data to be 2D for compatibility with the model\n    X_train = X_train.values.reshape(-1, 1)\n    X_test = X_test.values.reshape(-1, 1)\n\n    # Create an instance of the LogisticRegression model\n    lr = LogisticRegression()\n\n    # Fit the model on the training data\n    lr.fit(X_train, y_train)\n\n    # Predict the target for the test set\n    y_pred = lr.predict(X_test)\n\n    # Calculate the confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n\n    # Create the confusion matrix plot using matplotlib\n    fig, ax = plt.subplots()\n    ax.imshow(cm, interpolation='nearest', cmap=plt.", "tokens": ["#", " Split", " the", " feature", " and", " target", " data", " into", " training", " and", " testing", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Res", "h", "ape", " the", " feature", " data", " to", " be", " ", "2", "D", " for", " compatibility", " with", " the", " model", "\n", "    ", "X", "_", "train", " =", " X", "_", "train", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "X", "_", "test", " =", " X", "_", "test", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "\n", "    ", "#", " Create", " an", " instance", " of", " the", " Log", "istic", "Reg", "ression", " model", "\n", "    ", "lr", " =", " Log", "istic", "Reg", "ression", "()", "\n", "\n", "    ", "#", " Fit", " the", " model", " on", " the", " training", " data", "\n", "    ", "lr", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " the", " target", " for", " the", " test", " set", "\n", "    ", "y", "_", "pred", " =", " l", "r", ".", "predict", "(", "X", "_", "test", ")", "\n", "\n", "    ", "#", " Calculate", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "#", " Create", " the", " confusion", " matrix", " plot", " using", " matplotlib", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "im", "show", "(", "cm", ",", " interpolation", "='", "ne", "arest", "'", ",", " c", "map", "=", "plt", "."], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -1.6235783100128174, -0.0161175187677145, -0.007764989044517279, -0.9540372490882874, -0.030893374234437943, -0.15768612921237946, -0.005136151798069477, -0.04760686308145523, -0.005677526351064444, -0.06484496593475342, -0.005446238908916712, -0.5096915364265442, -0.013054853305220604, -0.00013934595335740596, -0.0005336767644621432, -0.0008797351038083434, -1.1801649634435307e-05, -0.0003978414461016655, -0.0008076743106357753, -0.0033820830285549164, -9.059865078597795e-06, -1.6689286894688848e-06, -8.296622399939224e-05, -0.00010966652916977182, -2.50339189733495e-06, -2.7179348762729205e-05, -0.0004189328756183386, -0.0028501623310148716, -5.125986263010418e-06, -7.152555099310121e-07, -5.960462772236497e-07, -1.1920928244535389e-07, -8.201262971851975e-05, -0.15845772624015808, -0.18404486775398254, -0.0038119524251669645, -0.029962152242660522, -0.022832591086626053, -1.490105023549404e-05, -7.152555099310121e-07, -0.005225452594459057, -0.004204956814646721, -3.218599158572033e-05, -0.9169464707374573, -0.24022626876831055, -0.010212075896561146, -7.152555099310121e-07, -4.768370445162873e-07, -0.00041940953815355897, -0.19926217198371887, -0.010203815996646881, -0.00904061272740364, -0.00963537022471428, -0.08998734503984451, -0.00036566724884323776, -0.0014353221049532294, -2.6454849243164062, -0.001408419106155634, -0.0013036570744588971, -0.06322354078292847, -0.3322812616825104, -0.06187651678919792, -0.9261253476142883, -1.1074767112731934, -0.561000406742096, -0.017123358324170113, -0.07971147447824478, -1.4886305332183838, -0.5899710059165955, -0.001822478836402297, -1.143713355064392, -1.9364670515060425, -0.019021248444914818, -0.00022480344341602176, -0.04068828001618385, -0.00022897482267580926, -0.00042989550274796784, -0.024967605248093605, -0.046655699610710144, -4.768370445162873e-07, -3.576278118089249e-07, -0.004977335687726736, -0.45793524384498596, -0.0003200257197022438, -3.9934315282152966e-05, 0.0, -0.0017968951724469662, -6.437280717364047e-06, -1.966933996300213e-05, -0.013446359895169735, -1.2040065485052764e-05, -3.302042750874534e-05, -0.02278982847929001, -0.007153020240366459, -0.002360179089009762, -2.622600959512056e-06, -0.00010990492592100054, -0.00039283663500100374, -0.00017498392844572663, -9.536738616588991e-07, -9.536738616588991e-07, -1.8954096958623268e-05, -0.0002464944263920188, -2.6225699912174605e-05, -8.583032467868179e-06, 0.0, -2.276871418871451e-05, -1.1920928244535389e-07, -7.152531907195225e-06, -0.000263894529780373, -2.3841855067985307e-07, -2.4199192921514623e-05, -0.00024816294899210334, -0.008450819179415703, -0.00016926287207752466, -0.0004580163804348558, -0.9217291474342346, -1.822066307067871, -0.00040904260822571814, -7.807903602952138e-05, -0.26912450790405273, -1.130753993988037, -0.00021598390594590455, -0.18420462310314178, -1.6569954823353328e-05, -0.03408333659172058, -0.24964241683483124, -0.00011407678539399058, -1.9691181182861328, -0.11033130437135696, -5.8410845667822286e-05, -5.960462772236497e-07, 0.0, -2.9802276912960224e-06, -0.10192573815584183, -0.001278060139156878, -0.016862353309988976, -0.00010883215873036534, -0.00015424491721205413, -0.4116421639919281, -0.00019608005823101848, -0.02812422439455986, -0.7069616317749023, -0.0008024332928471267, -0.003235227195546031, -0.018358783796429634, -0.0056969658471643925, -4.100715523236431e-05, -0.0004365683125797659, -0.00027378625236451626, -3.2186455882765586e-06, -5.245195097813848e-06, -9.655486064730212e-05, -0.02626735344529152, -6.437280717364047e-06, -0.002136806957423687, -0.0003999863693024963, -2.825220326485578e-05, -9.536738616588991e-07, -0.0008213722030632198, -6.961580220377073e-05, -0.0009413101943209767, -9.703165414975956e-05, -0.00030894274823367596, -0.33418744802474976, -0.0001646144810365513, -0.00956051331013441, -0.03555343300104141, -0.3400166630744934, -0.0007229813490994275, -0.08408313989639282, -0.16737666726112366, -0.09244322776794434, -4.7801782784517854e-05, -0.015461578033864498, -1.4424220353248529e-05, -0.0013237770181149244, -0.00438074953854084, -0.000809699238743633, 0.0, -1.549708758830093e-05, -1.4305104514278355e-06, -8.77341881277971e-05, -2.407998726994265e-05, -4.172316494077677e-06, -3.3378546504536644e-06, -0.00014757021563127637, -0.0009609610424377024, -0.0009764432325027883, -0.0002195594133809209, -0.0010524216340854764, -1.1333942413330078, -0.006059963721781969, -0.00017820201173890382, -3.1709168979432434e-05, -0.0443045012652874, -9.083335316972807e-05, -0.03732942044734955, -0.0019867937080562115, -0.0004451475979294628, -5.960462772236497e-07, -6.6756979322235566e-06, -1.1920858014491387e-05, -0.0002553137019276619, -1.1920928244535389e-07, -0.000962151971179992, -0.00035720644518733025, -0.00027211778797209263, -5.960462772236497e-07, -9.536738616588991e-07, -0.012183766812086105, -0.0012848464539274573, -0.016153061762452126, -0.0005230727256275713, -0.004954086616635323, -0.8960834741592407, -1.2122440338134766, -0.055449631065130234, -3.302042750874534e-05, -0.008453892543911934, -1.8481999635696411, -0.6616029739379883, -0.0783425122499466, -0.0011270844843238592, -0.5498674511909485, -0.0036446116864681244, -0.00038914260221645236, -0.0001720042055239901, -4.672895011026412e-05, -1.7881377516459906e-06, -2.50339189733495e-06, -6.48477507638745e-05, -0.20016063749790192, -0.0010489681735634804, -0.008677276782691479, -0.4840637147426605, -0.028551122173666954, -0.4710143208503723, -3.576272320060525e-06, -0.0010040724882856011, -0.00015352977789007127, -0.040221188217401505, -1.4317734241485596, -0.006384334061294794, -0.00042572495294734836, -9.536738616588991e-07, -0.005604743491858244, -8.4638240878121e-06, -9.7508447652217e-05, -8.344646857949556e-07, -0.008338517509400845, -0.0005373702733777463, -6.079655122448457e-06], "finish_reason": "length"}], "metrics": {"energy": 954.3077937526713, "energy_per_token": 3.727764819346372, "time": 23.116758, "time_per_token": 0.0902998359375}}
{"outputs": [{"text": "# Split the data into training and testing sets\n    feature_train, feature_test, target_train, target_test = train_test_split(feature, target, test_size=0.33, random_state=42)\n\n    # Train the logistic regression model\n    clf = LogisticRegression()\n    clf.fit(feature_train.to_numpy().reshape(-1, 1), target_train)\n\n    # Predict the target for the test set\n    target_pred = clf.predict(feature_test.to_numpy().reshape(-1, 1))\n\n    # Plot the confusion matrix\n    cm = confusion_matrix(target_test, target_pred)\n    ax = plt.subplot()\n    ax.set_title('Confusion Matrix')\n    ax.axis('equal')\n    ax.axis('off')\n    ax.plot()\n    ax.imshow(cm, cmap=plt.cm.Blues)\n    ax.set_xticks(np.arange(len(cm)))\n    ax.set_yticks(np.", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " testing", " sets", "\n", "    ", "feature", "_", "train", ",", " feature", "_", "test", ",", " target", "_", "train", ",", " target", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Train", " the", " logistic", " regression", " model", "\n", "    ", "cl", "f", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "cl", "f", ".", "fit", "(", "feature", "_", "train", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " target", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " the", " target", " for", " the", " test", " set", "\n", "    ", "target", "_", "pred", " =", " cl", "f", ".", "predict", "(", "feature", "_", "test", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "\n", "    ", "#", " Plot", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "target", "_", "test", ",", " target", "_", "pred", ")", "\n", "    ", "ax", " =", " plt", ".", "sub", "plot", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "')", "\n", "    ", "ax", ".", "axis", "('", "equal", "')", "\n", "    ", "ax", ".", "axis", "('", "off", "')", "\n", "    ", "ax", ".", "plot", "()", "\n", "    ", "ax", ".", "im", "show", "(", "cm", ",", " c", "map", "=", "plt", ".", "cm", ".", "Bl", "ues", ")", "\n", "    ", "ax", ".", "set", "_", "xt", "icks", "(", "np", ".", "ar", "ange", "(", "len", "(", "cm", ")))", "\n", "    ", "ax", ".", "set", "_", "yt", "icks", "(", "np", "."], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -0.27506178617477417, -0.03995629400014877, -0.334110289812088, -0.015279857441782951, -0.15630502998828888, -0.0037797691766172647, -0.052109748125076294, -0.005806128028780222, -2.4366109371185303, -0.011701282113790512, -0.003358677960932255, -0.001493173069320619, -0.0017600059509277344, -2.109982233378105e-05, -0.0008629412623122334, -0.0015382850542664528, -0.00276445341296494, -2.6225699912174605e-05, -4.8397800128441304e-05, -0.0001525762490928173, -0.00037949037505313754, -1.2874520507466514e-05, -3.1470757676288486e-05, -0.00303082843311131, -0.03044828213751316, -1.0132738680113107e-05, -1.1920922133867862e-06, -7.152555099310121e-07, -3.576278118089249e-07, -0.00023707917716819793, -0.16422641277313232, -0.005744021851569414, -0.004798919428139925, -0.026095135137438774, -0.042180247604846954, -1.7404405298293568e-05, -5.960462772236497e-07, -0.01137226726859808, -0.006999259348958731, -2.4676019165781327e-05, -1.0807613134384155, -1.7573014497756958, -0.17234192788600922, -0.10692724585533142, -7.748573807475623e-06, -5.960462772236497e-07, -0.0013085383689031005, -0.11432422697544098, -0.010786207392811775, -0.013967032544314861, -0.009037541225552559, -0.1409841626882553, -0.0006856950931251049, -0.00308728008531034, -0.8010135293006897, -0.24116362631320953, -0.12546539306640625, -0.0010078833438456059, -0.0008024332928471267, -0.2169380486011505, -0.00019822540343739092, -2.3369736671447754, -0.0003120412293355912, -0.00183271209243685, -0.00017081231635529548, -4.768370445162873e-07, -1.1920928244535389e-07, 0.0, -0.6932049989700317, -0.3756655156612396, -0.0006808108882978559, -0.0021950930822640657, -7.033323527139146e-06, -0.0010658780811354518, -7.390948667307384e-06, -2.6225699912174605e-05, -0.1751626431941986, -0.011253338307142258, -0.0004203628050163388, -0.03897477686405182, -0.37804365158081055, -3.576272320060525e-06, -0.27686095237731934, -0.00027736154152080417, -0.0020856549963355064, -3.838465272565372e-05, 0.0, -0.0008466235012747347, -1.3232143828645349e-05, -9.16677454370074e-05, -0.11879892647266388, -2.4914430468925275e-05, -2.8609820219571702e-05, -0.0012993711279705167, -0.004355705808848143, -0.0001941730733960867, -6.198863957251888e-06, -0.05644463747739792, -0.009180830791592598, -0.018045885488390923, -0.00016890530241653323, -0.001660398324020207, -0.328399658203125, -0.0006357794045470655, -0.05403415486216545, -0.05132175609469414, -0.11037379503250122, -0.004488156642764807, -0.02597062662243843, -0.006783788558095694, -0.01350598968565464, -0.0001938155182870105, -0.14586058259010315, -1.2278481335670222e-05, -0.02198292873799801, -0.22008033096790314, -0.001529357978142798, -4.768370445162873e-07, -1.2874520507466514e-05, -1.6331539882230572e-05, -0.0007644353318028152, -0.0009504806366749108, -2.8490614567999728e-05, -5.638440416078083e-05, -0.0036379601806402206, -0.0012766314903274179, -1.1920928244535389e-07, -2.3841830625315197e-06, -3.302042750874534e-05, -1.9907753085135482e-05, -3.576272320060525e-06, -2.3841855067985307e-07, -1.5139465176616795e-05, -2.0265558760002023e-06, -5.4596363042946905e-05, -0.00333574740216136, -1.9073468138230965e-06, -0.0002874914789572358, -0.002596580656245351, -0.005291148088872433, -0.00034362133010290563, -0.003919302020221949, -2.031933307647705, -0.014112203381955624, -0.003088349476456642, -0.00013016807497479022, -0.05794243887066841, -0.0017100248951464891, -0.2388765513896942, -0.015576956793665886, -0.002639027079567313, -4.291525328881107e-06, -1.7404405298293568e-05, -7.915183232398704e-05, -0.001057184999808669, -0.0001728385395836085, -0.000824349990580231, -0.0023858672939240932, -0.0008122005965560675, -9.775113539944869e-06, -6.318072337307967e-06, -0.04439915344119072, -0.012963071465492249, -0.06286201626062393, -0.6564741134643555, -0.00707430811598897, -0.19789303839206696, -8.856858039507642e-05, -0.4968756139278412, -0.010099262930452824, -0.038780421018600464, -0.01790948025882244, -0.00796759407967329, -0.38531213998794556, -0.0038786910008639097, -0.5733916163444519, -0.0024291551671922207, -0.06454673409461975, -0.2821408808231354, -0.0029135181102901697, -1.3112935448589269e-05, -0.011709176003932953, -0.3173411190509796, -0.008391005918383598, -0.006678048521280289, -0.33415961265563965, -0.012257485650479794, -3.4383485317230225, -0.05557616427540779, -0.4916476011276245, -0.00041559641249477863, -0.006512844935059547, -0.0446186400949955, -0.31147339940071106, -0.013006022199988365, -3.5738894939422607, -0.06353671103715897, -0.3153739869594574, -0.0002814135223161429, -0.0046153683215379715, -0.027799759060144424, -0.2046222984790802, -0.007424027193337679, -1.939453363418579, -0.5550062656402588, -0.035614289343357086, -0.3340989351272583, -1.1956583261489868, -0.016911815851926804, -0.32974445819854736, -1.0728830375228426e-06, -0.00231284461915493, -0.008528005331754684, -0.21786363422870636, -0.20131830871105194, -9.536738616588991e-07, -0.7373430132865906, -0.028777938336133957, -0.00010406429646536708, -0.009818002581596375, -5.209310256759636e-05, -0.18353143334388733, -2.3841830625315197e-06, -0.5024063587188721, -0.009479038417339325, -0.1519133746623993, -0.7380813360214233, -0.005092269275337458, -0.40032631158828735, -0.0028843963518738747, -1.050859808921814, -0.018354453146457672, -0.012090139091014862, -0.2528299391269684, -2.169585604860913e-05, -6.651657167822123e-05, -2.3841855067985307e-07, -0.0010874316794797778, -1.0059003829956055, -0.012909411452710629, -1.0266915559768677, -0.0762636810541153, -0.006784853991121054, -0.00020394629973452538, -0.00028153270250186324, -1.823885577323381e-05, -0.0014403217937797308, -2.5510462364763953e-05, -0.046497195959091187, -0.0003215749457012862, -0.000617551791947335, -8.105902816168964e-05, -1.311301275563892e-06], "finish_reason": "length"}], "metrics": {"energy": 889.0163265390397, "energy_per_token": 3.472720025543124, "time": 21.644005, "time_per_token": 0.08454689453125}}
{"outputs": [{"text": "# Splitting the data into train and test sets\n    x_train, x_test, y_train, y_test = train_test_split(feature, target, test_size=0.2)\n\n    # Creating an object of the model\n    model = LogisticRegression()\n    # Fitting the model\n    model.fit(x_train.values.reshape(-1, 1), y_train)\n\n    # Prediction on Test Set\n    y_pred = model.predict(x_test.values.reshape(-1, 1))\n\n    # Creating the confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n\n    # Plotting the confusion matrix\n    ax = plt.subplot()\n    plt.imshow(cm, cmap=plt.cm.Blues)\n    ax.set_title(\"Confusion Matrix\")\n    ax.set_xlabel('Predicted values')\n    ax.set_ylabel('Actual values')\n    ax.legend()\n    tick_labels = ax.get_xticks()\n    ax.set_xtick", "tokens": ["#", " Split", "ting", " the", " data", " into", " train", " and", " test", " sets", "\n", "    ", "x", "_", "train", ",", " x", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n", "\n", "    ", "#", " Creating", " an", " object", " of", " the", " model", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "#", " F", "itting", " the", " model", "\n", "    ", "model", ".", "fit", "(", "x", "_", "train", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "iction", " on", " Test", " Set", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "x", "_", "test", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "\n", "    ", "#", " Creating", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "#", " Plot", "ting", " the", " confusion", " matrix", "\n", "    ", "ax", " =", " plt", ".", "sub", "plot", "()", "\n", "    ", "plt", ".", "im", "show", "(", "cm", ",", " c", "map", "=", "plt", ".", "cm", ".", "Bl", "ues", ")", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Conf", "usion", " Matrix", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Pred", "icted", " values", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Act", "ual", " values", "')", "\n", "    ", "ax", ".", "legend", "()", "\n", "    ", "tick", "_", "labels", " =", " ax", ".", "get", "_", "xt", "icks", "()", "\n", "    ", "ax", ".", "set", "_", "xt", "ick"], "logprobs": [-0.411857932806015, -0.24781475961208344, -2.708125114440918, -0.194544717669487, -0.3343002498149872, -0.09883960336446762, -0.9609494805335999, -0.027315355837345123, -0.008680585771799088, -0.15916863083839417, -0.08935566991567612, -0.00524122454226017, -1.5929571390151978, -0.011477629654109478, -0.0028161650989204645, -0.0018047487828880548, -0.00992577150464058, -6.842378934379667e-05, -0.0031537103932350874, -0.0012825843878090382, -0.0019112430745735765, -5.638440416078083e-05, -4.9232225137529895e-05, -0.00040522945346310735, -0.0004172646440565586, -1.4424220353248529e-05, -6.0794889577664435e-05, -0.0017207353375852108, -0.004202344920486212, -7.748573807475623e-06, -2.264974000354414e-06, -7.152555099310121e-07, -2.3841855067985307e-07, -0.0002108589978888631, -0.11744622886180878, -0.042997170239686966, -0.028823457658290863, -0.09821252524852753, -0.14418113231658936, -2.1219027985353023e-05, -2.861018856492592e-06, -0.08182401210069656, -0.0379587821662426, -0.00015805903240107, -0.5381877422332764, -1.3896331787109375, -0.021968234330415726, -0.30651381611824036, -0.0007700338610447943, -0.018075739964842796, -1.4984982013702393, -2.4732561111450195, -1.0216360092163086, -0.2819555699825287, -0.5406522750854492, -0.1951729655265808, -0.1567431539297104, -0.00034600470098666847, -0.7431845664978027, -0.019433576613664627, -0.0005099665140733123, -9.536738616588991e-07, -2.3841855067985307e-07, -1.5497195136049413e-06, -0.0882873609662056, -0.010592428967356682, -2.936767339706421, -0.09565552324056625, -0.7750133872032166, -0.0011812621960416436, -0.20567378401756287, -1.8268673419952393, -0.6931860446929932, -0.0003328961320221424, -0.006563771050423384, -0.0066349441185593605, -4.1126360883936286e-05, -0.00010835537250386551, -0.09922170639038086, -0.0004188137245364487, -8.618460560683161e-05, -0.045744627714157104, -1.2987614870071411, -0.0028442188631743193, -0.0004611144249793142, 0.0, -0.00420875521376729, -6.735097849741578e-05, -0.00023362292267847806, -0.2125502973794937, -3.683499380713329e-05, -5.411955135059543e-05, -0.0008908117306418717, -0.00931358803063631, -0.00038187362952157855, -4.6491513785440475e-06, -0.09137887507677078, -0.014359827153384686, -0.42835134267807007, -0.00035553809721022844, -0.013046969659626484, -0.2481105923652649, -1.4231996536254883, -1.1056468486785889, -2.7041871547698975, -0.9484758377075195, -0.07383590191602707, -0.002799165900796652, -0.553372859954834, -0.0021745148114860058, -0.15578101575374603, -0.12725086510181427, -0.001745368936099112, -6.723177648382261e-05, -8.4638240878121e-06, -0.0007384672062471509, -0.0010187203297391534, -2.5152843591058627e-05, -0.00017093151109293103, -0.004789309576153755, -0.0025158440694212914, -0.00010644822759786621, -5.972207145532593e-05, -1.1920928244535389e-07, -0.00011765264935093, -1.0251946150674485e-05, -8.880697714630514e-05, -0.007440592627972364, -1.6689286894688848e-06, -0.00029130507027730346, -0.005067124962806702, -0.07020219415426254, -0.0004253674705978483, -0.03264269232749939, -0.5853449702262878, -0.6495447754859924, -0.1571936160326004, -0.08002535998821259, -0.07293430715799332, -0.0010162194957956672, -0.11494214087724686, -0.012799845077097416, -0.002799641340970993, -3.099436753473128e-06, -1.9430925021879375e-05, -7.664863369427621e-05, -0.0004702892620116472, -1.7881377516459906e-06, -0.02081046998500824, -0.0027461457066237926, -0.001754293916746974, -4.291525328881107e-06, -1.3351351299206726e-05, -0.05991797894239426, -0.007870140485465527, -0.24543412029743195, -0.001010384177789092, -0.05124157294631004, -0.4823669195175171, -0.03318241238594055, -0.0697816014289856, -0.07610837370157242, -0.0024612629786133766, -0.09650721400976181, -0.004145006649196148, -0.8060442805290222, -0.011246973648667336, -0.18765684962272644, -9.965400386136025e-05, -0.20735673606395721, -0.010395191609859467, -0.012231460772454739, -0.005491647403687239, -0.024929001927375793, -1.4611101150512695, -0.00025138078490272164, -1.4641010761260986, -6.198863957251888e-06, -0.0015969631494954228, -0.0015151937259361148, -0.5731276869773865, -0.44148677587509155, -4.6491513785440475e-06, -0.16290931403636932, -0.054084185510873795, -1.8000440832111053e-05, -0.002251710742712021, -6.69933797325939e-05, -0.2995528280735016, -1.0013530300057027e-05, -0.07411665469408035, -0.009876668453216553, -0.07651030272245407, -0.4153199791908264, -0.0023750450927764177, -0.12695251405239105, -0.0014058002270758152, -0.05049607902765274, -0.8388445377349854, -0.01646491140127182, -0.004069619346410036, -0.00024327656137757003, -0.036905109882354736, -0.02572249248623848, -0.18633821606636047, -0.0031645242124795914, -0.06726779043674469, -0.21001404523849487, -0.0006337541271932423, -0.05659390985965729, -0.00048828122089616954, -0.12065328657627106, -0.47711920738220215, -0.030639175325632095, -0.007826733402907848, -2.547806978225708, -0.0623454749584198, -0.0007927850820124149, -7.974783511599526e-05, -0.0001147919538198039, -7.271740287251305e-06, -0.0004959068610332906, -1.4305104514278355e-06, -0.0033762615639716387, -0.0005970602505840361, -0.6920000910758972, -4.494089080253616e-05, -0.0002967870968859643, -0.02068145014345646, -0.0001045410826918669, -0.1788184642791748, -0.16951555013656616, -0.002948938636109233, -3.4044570922851562, -0.24710030853748322, -0.0029122107662260532, -0.18930684030056, -2.0124943256378174, -0.0002983363519888371, -2.3981242179870605, -0.00037698791129514575, -0.6913708448410034, -1.764281842042692e-05, -0.016200684010982513, 0.0, -0.002325689420104027, -1.9949146509170532, -1.311301275563892e-06, -0.11648508906364441, -0.0031623851973563433, -0.01583337038755417, -8.630380034446716e-05, -2.3007127310847864e-05, -7.271740287251305e-06, -0.0006093314150348306, -0.14131426811218262], "finish_reason": "length"}], "metrics": {"energy": 857.082568338394, "energy_per_token": 3.3479787825718517, "time": 21.64495, "time_per_token": 0.0845505859375}}
{"outputs": [{"text": "feature_train, feature_test, target_train, target_test = train_test_split(feature, target)\n    model = LogisticRegression()\n    model.fit(feature_train.to_numpy().reshape(-1, 1), target_train)\n    target_predicted = model.predict(feature_test.to_numpy().reshape(-1, 1))\n    cm = confusion_matrix(target_test, target_predicted)\n    ax = sns.heatmap(cm, annot=True, fmt='g')\n    ax.set_title('Confusion Matrix')\n    return cm, ax", "tokens": ["feature", "_", "train", ",", " feature", "_", "test", ",", " target", "_", "train", ",", " target", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ")", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "feature", "_", "train", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " target", "_", "train", ")", "\n", "    ", "target", "_", "pred", "icted", " =", " model", ".", "predict", "(", "feature", "_", "test", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "target", "_", "test", ",", " target", "_", "pred", "icted", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "cm", ",", " annot", "=", "True", ",", " fmt", "='", "g", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "')", "\n", "    ", "return", " cm", ",", " ax", "\n", "\n", "#"], "logprobs": [-3.143139123916626, -1.034895896911621, -0.06050310656428337, -0.0040520476177334785, -0.014323868788778782, -0.0001006075763143599, -0.006923849694430828, -0.00516283605247736, -0.01583888567984104, -6.16293036728166e-05, -0.0001770101225702092, -0.0002858230145648122, -0.001061591086909175, -2.8967437174287625e-05, -0.00013124081306159496, -0.011166932061314583, -0.022796936333179474, -1.3828182090946939e-05, -7.748573807475623e-06, -2.264974000354414e-06, -4.768370445162873e-07, -0.0005355831235647202, -0.1818389743566513, -0.010103865526616573, -0.02194584347307682, -2.7510762214660645, -0.04887128993868828, -0.2525767982006073, -0.7184752821922302, -0.011905918829143047, -0.0005041282274760306, -9.536738616588991e-07, -3.576278118089249e-07, -3.576278118089249e-07, -0.17011798918247223, -0.1084120124578476, -0.005825446452945471, -0.0032078970689326525, -0.0020258158911019564, -4.494089080253616e-05, -5.817244164063595e-05, -0.1311136782169342, -0.014971982687711716, -5.781483559985645e-05, -0.08811185508966446, -0.1863083392381668, -1.7165990357170813e-05, -0.17373214662075043, -0.0008828318095766008, -0.003436613827943802, -0.00011872540198964998, 0.0, -0.003701265901327133, -4.1960789531003684e-05, -9.63164638960734e-05, -0.08342710137367249, -5.364274329622276e-05, -7.354942499659956e-05, -0.0018172431737184525, -0.006131291389465332, -0.00037865620106458664, -1.2040065485052764e-05, -0.0719369426369667, -0.017891330644488335, -0.06035609915852547, -0.8461197018623352, -0.0002244459028588608, -0.08669260144233704, -0.8881331086158752, -0.00592452147975564, -0.0047241742722690105, -4.911301948595792e-05, -3.266281055402942e-05, -0.0012728216825053096, -0.001557805109769106, -0.0001734344696160406, -0.00027259447961114347, -0.008290400728583336, -0.001110175740905106, -2.3841855067985307e-07, -7.748573807475623e-06, -3.9219088648678735e-05, -1.7762025890988298e-05, -6.198863957251888e-06, 0.0, -5.876845170860179e-05, -5.602820692729438e-06, -4.017272294731811e-05, -0.004064751323312521, -4.410734163684538e-06, -0.00044490929576568305, -0.0063267657533288, -0.09701787680387497, -0.12947019934654236, -0.014400484971702099, -0.00445563904941082, -2.622600959512056e-06, -1.4185804502631072e-05, -0.0001551984460093081, -0.009815759025514126, -0.00038652101648040116, -0.023482901975512505, -0.005613515619188547, -0.002428798470646143, -1.2397689715726301e-05, -0.00010907054820563644, -9.536738616588991e-07, -0.054035961627960205, -0.013706495054066181, -0.1826387494802475, -1.2612826824188232, -0.010322515852749348, -1.3584964275360107, -0.0032963010016828775, -0.0002388668799540028, -0.0010673070792108774, -3.4570634852570947e-06, -0.0005055579822510481, -0.028367824852466583, -0.1175331398844719, -0.06552670150995255, -0.007407934404909611, -0.005843105260282755, -0.05357755348086357, -0.14675717055797577, -0.1514824479818344, -2.665573835372925, -0.783733069896698, -0.061612363904714584, -0.006169678643345833, -0.05856256186962128, -0.002095528645440936, -0.020331664010882378, -0.01989656873047352, -0.0761016309261322, -0.09721757471561432, -0.0012987758964300156, -4.660974445869215e-05, -0.0057817124761641026, -0.02682514861226082, -0.005264348816126585, -0.03176194801926613, -1.1222963333129883, -0.060793016105890274, -0.0017145470483228564, -0.0014332984574139118, -0.2560258209705353, -0.029255496338009834, -1.7741906642913818], "finish_reason": "stop"}], "metrics": {"energy": 530.8991733207704, "energy_per_token": 3.5630817001393984, "time": 12.411838, "time_per_token": 0.08330092617449664}}
{"outputs": [{"text": "# Split the data into train and test sets\n    X_train, X_test, y_train, y_test = train_test_split(\n        feature, target, test_size=0.2, random_state=42)\n\n    # Train a logistic regression model on the training set\n    lr = LogisticRegression()\n    lr.fit(X_train.to_frame(), y_train)\n\n    # Predict the target variable for the test set\n    y_pred = lr.predict(X_test.to_frame())\n\n    # Create a confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n\n    # Create a heatmap of the confusion matrix\n    fig, ax = plt.subplots(figsize=(8, 6))\n    sns.heatmap(cm, annot=True, fmt='d',\n                linewidths=.5, square=True, cmap='Blues_r', ax=ax)\n\n    # Set the title of the plot\n    ax.set_title('Confusion Matrix', fontsize=16)\n", "tokens": ["#", " Split", " the", " data", " into", " train", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n", "        ", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Train", " a", " logistic", " regression", " model", " on", " the", " training", " set", "\n", "    ", "lr", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "lr", ".", "fit", "(", "X", "_", "train", ".", "to", "_", "frame", "()", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " the", " target", " variable", " for", " the", " test", " set", "\n", "    ", "y", "_", "pred", " =", " l", "r", ".", "predict", "(", "X", "_", "test", ".", "to", "_", "frame", "())", "\n", "\n", "    ", "#", " Create", " a", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "#", " Create", " a", " heat", "map", " of", " the", " confusion", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "8", ",", " ", "6", "))", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "cm", ",", " annot", "=", "True", ",", " fmt", "='", "d", "'", ",", "\n", "                ", "linewidth", "s", "=", ".", "5", ",", " square", "=", "True", ",", " c", "map", "='", "Bl", "ues", "_", "r", "'", ",", " ax", "=", "ax", ")", "\n", "\n", "    ", "#", " Set", " the", " title", " of", " the", " plot", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "'", ",", " fonts", "ize", "=", "1", "6", ")", "\n"], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -0.27506178617477417, -0.03995629400014877, -1.4371299743652344, -0.02194269560277462, -0.004773885942995548, -0.037565965205430984, -0.052326418459415436, -0.0037908137310296297, -0.39029666781425476, -0.017110584303736687, -0.00020621081057470292, -0.0007047553663142025, -0.0015351902693510056, -1.645074735279195e-05, -0.0005490464391186833, -0.0012234115274623036, -0.006423422135412693, -1.7762025890988298e-05, -2.50339189733495e-06, -8.868777513271198e-05, -0.00014351768186315894, -2.861018856492592e-06, -2.038458114839159e-05, -0.0004702892620116472, -0.005297077354043722, -4.6491513785440475e-06, -9.536738616588991e-07, -4.768370445162873e-07, -1.1920928244535389e-07, -0.00011157367407577112, -1.873453974723816, -0.014163918793201447, -0.0869394987821579, -0.5910742282867432, -0.018205448985099792, -0.0022335124667733908, -0.018789518624544144, -5.960446742392378e-06, -5.960462772236497e-07, -0.002886179368942976, -0.007482361048460007, -3.707340147229843e-05, -0.7328320145606995, -0.11876261234283447, -0.008237197995185852, -8.344646857949556e-07, -4.768370445162873e-07, -0.0002196785935666412, -0.17027947306632996, -0.009138070046901703, -0.7320967316627502, -0.009640446864068508, -0.12958592176437378, -0.0003766304289456457, -0.0027042983565479517, -0.9776194095611572, -1.7313460111618042, -0.024445533752441406, -0.0004489606071729213, -0.0014041336253285408, -1.6622120141983032, -0.029703782871365547, -0.21496227383613586, -0.35969075560569763, -0.013085562735795975, -0.0003182381624355912, -1.351386308670044, -0.07263525575399399, -5.066266385256313e-05, -3.576278118089249e-07, 0.0, -3.4570634852570947e-06, -0.17010913789272308, -0.062460049986839294, -0.0006312523037195206, -0.0010069306008517742, -0.00019572250312194228, -7.152531907195225e-06, -1.2993727978027891e-05, -0.02031472697854042, -0.0015874415403231978, -9.298280929215252e-06, -0.07894912362098694, -0.22694025933742523, -6.556489552167477e-06, -1.1329187154769897, -0.0008451942121610045, -0.0028693003114312887, -0.0011313711293041706, -0.00011729506513802335, -2.3841855067985307e-07, -0.0035429345443844795, -0.0019319456769153476, -0.0050021265633404255, -8.642300235806033e-05, -0.0014061573892831802, -0.3903016746044159, -0.0004945961991325021, -0.063162662088871, -0.16267460584640503, -1.7691004276275635, -0.20678213238716125, -0.004392974078655243, -0.047997232526540756, -0.008251385763287544, -0.04457782581448555, -0.00019012074335478246, -0.017935005947947502, -2.0503786799963564e-05, -0.003644136479124427, -0.003585697151720524, -0.0018847098108381033, 0.0, -1.0490362910786644e-05, -2.0265558760002023e-06, -0.000491021724883467, -0.00036066226311959326, -5.245195097813848e-06, -9.65590606938349e-06, -0.00042358008795417845, -0.00026675479602999985, -1.1920928244535389e-07, -9.65590606938349e-06, -0.00031704644788987935, -0.001788208493962884, -0.0036834506317973137, -0.0001722425949992612, -0.00367002934217453, -0.8449234366416931, -0.14678537845611572, -0.0006422125734388828, -8.248942322097719e-05, -0.2801457345485687, -0.0003120412293355912, -0.0511648990213871, -0.0029786527156829834, -0.0008908117306418717, -1.311301275563892e-06, -4.8040190449682996e-05, -3.0636318115284666e-05, -0.000886285852175206, -1.1920928244535389e-07, -0.004555680323392153, -0.0013573489850386977, -0.0005178302526473999, -8.344646857949556e-07, -1.1920922133867862e-06, -0.02075454406440258, -0.00159327348228544, -0.04458785802125931, -0.00038580605178140104, -0.00794796273112297, -1.660469889640808, -0.09392674267292023, -0.9283201098442078, -0.011302373372018337, -0.5463005304336548, -0.0012325793504714966, -0.00046433156239800155, -0.00010227633902104571, -0.26349809765815735, -0.0010801678290590644, -0.7147049307823181, -0.005173628218472004, -0.000548331590835005, -0.0003225283289793879, -8.976056415122002e-05, -2.9802276912960224e-06, -3.099436753473128e-06, -1.6212332411669195e-05, -1.4366867542266846, -0.038858626037836075, -3.3378546504536644e-06, -0.0029635580722242594, -0.45888420939445496, -5.364274329622276e-05, -0.01296824961900711, -0.14008694887161255, -0.0029662917368113995, -0.013296033255755901, -0.0070973895490169525, -0.5659372210502625, -0.00013982271775603294, -0.0015910121146589518, -0.00412351917475462, 0.0, -7.152531907195225e-06, -0.005042691715061665, -0.005103536881506443, -0.005553650204092264, -9.595887240720913e-05, -0.0004943578969687223, -8.666139910928905e-05, -0.04296359792351723, -0.3470408022403717, -0.01534501276910305, -0.0001333863037871197, -5.722029527532868e-06, -2.756467819213867, -0.01986466534435749, -1.6667962074279785, -0.014525619335472584, -1.3351351299206726e-05, -0.41152897477149963, -0.005109585355967283, -2.276871418871451e-05, -0.48855865001678467, -8.141662692651153e-05, -0.0011211306555196643, -0.0004917366313748062, -0.2705168128013611, -0.042968280613422394, -0.06006729602813721, -0.023444823920726776, -2.145764938177308e-06, -0.07526443898677826, -3.576278118089249e-07, -0.030008891597390175, -2.90866428258596e-05, -0.44978052377700806, -3.349725011503324e-05, -5.400034933700226e-05, -0.032158900052309036, -0.002234939718618989, -1.1841155290603638, -0.000428942235885188, -0.06007044017314911, -0.8420276045799255, -0.2327929437160492, -0.7051970362663269, -2.6184470653533936, -0.0003406421164982021, -0.18114320933818817, -0.05541534721851349, -0.0002821285743266344, -0.034237366169691086, -0.0003256267518736422, -0.00011419598013162613, -0.0012163867941126227, -0.0020170120988041162, -0.11809790879487991, -0.0015499495202675462, -1.6212332411669195e-05, -0.0020680485758930445, -0.8447700142860413, -3.8980677345534787e-05, -0.05874040722846985, 0.0, -0.0006039702566340566, -0.03875897824764252, -0.15740181505680084, -0.023175446316599846, -0.0003060825983993709], "finish_reason": "length"}], "metrics": {"energy": 900.0000129976273, "energy_per_token": 3.5156250507719817, "time": 21.645813, "time_per_token": 0.08455395703125}}
{"outputs": [{"text": "X = feature.to_numpy().reshape(-1, 1)  # Convert the feature series to a numpy array and reshape it to match the shape required by the logistic regression model\n    y = target.to_numpy()  # Convert the target series to a numpy array\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)  # Split the data into training and testing sets\n    clf = LogisticRegression()  # Create a logistic regression model\n    clf.fit(X_train, y_train)  # Fit the model to the training data\n    y_pred = clf.predict(X_test)  # Predict the target variable for the test set\n    cm = confusion_matrix(y_test, y_pred)  # Calculate the confusion matrix\n    fig, ax = plt.subplots()\n    ax.imshow(cm, cmap=plt.cm.Blues, interpolation='nearest')  # Create a confusion matrix plot\n    ax.set_title('Confusion Matrix", "tokens": ["X", " =", " feature", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "  ", "#", " Convert", " the", " feature", " series", " to", " a", " numpy", " array", " and", " resh", "ape", " it", " to", " match", " the", " shape", " required", " by", " the", " logistic", " regression", " model", "\n", "    ", "y", " =", " target", ".", "to", "_", "numpy", "()", "  ", "#", " Convert", " the", " target", " series", " to", " a", " numpy", " array", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "  ", "#", " Split", " the", " data", " into", " training", " and", " testing", " sets", "\n", "    ", "cl", "f", " =", " Log", "istic", "Reg", "ression", "()", "  ", "#", " Create", " a", " logistic", " regression", " model", "\n", "    ", "cl", "f", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "  ", "#", " Fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "y", "_", "pred", " =", " cl", "f", ".", "predict", "(", "X", "_", "test", ")", "  ", "#", " Pred", "ict", " the", " target", " variable", " for", " the", " test", " set", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "  ", "#", " Calculate", " the", " confusion", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "im", "show", "(", "cm", ",", " c", "map", "=", "plt", ".", "cm", ".", "Bl", "ues", ",", " interpolation", "='", "ne", "arest", "')", "  ", "#", " Create", " a", " confusion", " matrix", " plot", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix"], "logprobs": [-2.554048776626587, -1.7314586639404297, -0.14883579313755035, -0.19217835366725922, -0.7201012372970581, -5.483612312673358e-06, -0.18939878046512604, -0.008884541690349579, -0.13012540340423584, -0.002668393775820732, 0.0, -0.006057949271053076, -3.93382906622719e-05, -0.00018070495571009815, -0.06218395382165909, -0.00012087091454304755, -0.0001938155182870105, -2.1661376953125, -0.0013192531187087297, -0.3923355042934418, -1.4357895851135254, -0.25590068101882935, -0.6395540237426758, -0.19647178053855896, -0.04054027795791626, -0.7054679989814758, -0.011327479034662247, -1.8115246295928955, -0.008001180365681648, -0.0004698126285802573, -0.08761311322450638, -1.1948323249816895, -3.0805914402008057, -0.08026103675365448, -1.53508460521698, -0.48822370171546936, -0.033432163298130035, -0.3918987214565277, -0.41429856419563293, -0.0017677409341558814, -0.02269672229886055, -0.5583672523498535, -0.01804705522954464, -0.029697880148887634, -0.002861573826521635, -0.006091007497161627, -0.10729331523180008, -0.017417334020137787, -7.152555099310121e-07, -3.8742269680369645e-05, -0.00032610344351269305, -0.1477084755897522, -9.65590606938349e-06, -0.0020137999672442675, -0.001995954429730773, -0.000727627135347575, -0.004348703194409609, -0.0005959880072623491, -0.00051115796668455, -0.00014757021563127637, -0.00026592056383378804, -0.03733734413981438, -0.7081976532936096, -0.17062801122665405, -0.0007387054502032697, -0.00024232311989180744, -0.0002797450579237193, -0.00030214988510124385, -5.960446742392378e-06, -0.0006301801186054945, -7.223821739898995e-05, -0.0008380476501770318, -1.1205610462639015e-05, -2.3841855067985307e-07, -5.98412734689191e-05, -0.00017176583060063422, -9.536738616588991e-07, -2.50339189733495e-06, -0.000309657771140337, -0.0016411182004958391, -5.602820692729438e-06, -1.4305104514278355e-06, -1.5497195136049413e-06, -4.768370445162873e-07, -8.976056415122002e-05, -0.14351049065589905, -0.0003475538978818804, -0.0028092702850699425, -0.012774540111422539, -0.00887733418494463, -9.179073458653875e-06, -4.768370445162873e-07, -0.0037871322128921747, -0.005280238576233387, -1.3351351299206726e-05, -0.9130796790122986, -0.3878054916858673, -0.06395189464092255, -2.7418097943154862e-06, -8.106198947643861e-06, -0.0013086573453620076, -0.9081302881240845, -0.04238651320338249, -0.021274227648973465, -0.1150808110833168, -2.1815061700181104e-05, -0.004673035815358162, -0.006213987711817026, -0.08680496364831924, -0.006854946259409189, -0.09961478412151337, -0.005965642165392637, -0.015078140422701836, -0.0010511117288842797, -0.21690301597118378, -0.1289186328649521, -1.41169273853302, -0.0004970983718521893, -0.0018323551630601287, -0.00018368464952800423, -1.4305104514278355e-06, -3.576278118089249e-07, -1.0728830375228426e-06, -0.6653494834899902, -0.1579289436340332, -5.125986263010418e-06, -1.030487298965454, -0.27081403136253357, -0.03604144975543022, -0.00019786784832831472, -0.012635884806513786, -0.781379759311676, -0.0007962394156493247, -0.0018033209489658475, -1.3112935448589269e-05, -0.0012335318606346846, -7.748573807475623e-06, -7.986990567587782e-06, -0.0007985025877133012, -0.002487067598849535, -9.417489309271332e-06, -0.0003725788265001029, -0.0014872215688228607, -3.182837463100441e-05, -1.4305104514278355e-06, -0.0007418026216328144, -0.006653062533587217, -1.6689286894688848e-06, -0.6466934680938721, -0.00028391621890477836, -0.10863757133483887, -0.2851327359676361, -0.00026603974401950836, -0.001503052655607462, -0.008397507481276989, -0.002423209138214588, -0.005485126748681068, -0.0587812103331089, -0.00015555603022221476, -0.006213987711817026, -0.008070714771747589, -0.0018314032349735498, -8.344646857949556e-07, -4.1483970562694594e-05, -2.658331868587993e-05, -0.00022516099852509797, -0.01628829725086689, -3.433168603805825e-05, -9.298280929215252e-06, -0.00013362467871047556, -0.007730093784630299, -2.264974000354414e-06, -0.24106687307357788, -1.0490362910786644e-05, -0.004944241140037775, -0.02416548691689968, -2.686481237411499, -0.10265044122934341, -0.0011191064259037375, -0.10206244885921478, -0.3522701561450958, -0.05045357719063759, -0.023401737213134766, -0.06849426031112671, -0.006394520867615938, -0.0018184330547228456, -2.145764938177308e-06, -1.1920922133867862e-06, -4.911301948595792e-05, -0.0032845379319041967, -1.7881377516459906e-06, -0.0028736984822899103, -0.00029869386344216764, -0.0019026764202862978, -2.145764938177308e-06, -9.536738616588991e-07, -0.030104905366897583, -0.01139560341835022, -1.0371154530730564e-05, -0.35192468762397766, -0.0019656161312013865, -5.209310256759636e-05, -5.4238757002167404e-05, -0.12000685930252075, -0.14474374055862427, -0.8402008414268494, -0.008536042645573616, -0.0005346299149096012, -0.0004366874636616558, -0.00038532938924618065, -6.079655122448457e-06, -1.0490362910786644e-05, -3.1709168979432434e-05, -0.20950855314731598, -1.897025465965271, -0.00824192725121975, -0.1463811695575714, -0.049571484327316284, -0.7041133046150208, -5.8412379075889476e-06, -0.001260439632460475, -0.003954449202865362, -0.09940542280673981, -0.3918587565422058, -2.9802276912960224e-06, -0.21897830069065094, -0.038367852568626404, -1.8954096958623268e-05, -0.0007876630988903344, -1.4781842764932662e-05, -0.2698291540145874, -8.583032467868179e-06, -0.5335161089897156, -0.04521050676703453, -0.027412906289100647, -1.0371154530730564e-05, -1.7881377516459906e-06, -0.42112547159194946, -0.4205939471721649, -3.814624506048858e-05, -1.1554536819458008, -0.1690153330564499, -0.9829388856887817, -0.00012420836719684303, -0.00290840701200068, -0.11568540334701538, -0.0008355463505722582, -0.030987916514277458, -0.00033384948619641364, -0.14478623867034912, -0.0406859926879406, -0.046747397631406784, -0.12582221627235413, -0.0005675135762430727, -9.059865078597795e-06, -0.002191762439906597], "finish_reason": "length"}], "metrics": {"energy": 873.1778434753428, "energy_per_token": 3.410850951075558, "time": 21.85873, "time_per_token": 0.0853856640625}}
{"outputs": [{"text": "# Split data into train and test sets\n    X_train, X_test, y_train, y_test = train_test_split(feature.to_numpy().reshape(-1,1),\n                                                        target.to_numpy().reshape(-1,1).squeeze(),\n                                                        test_size=0.3,\n                                                        random_state=0)\n\n    # Create a Logistic Regression model and train it using the training data\n    model = LogisticRegression()\n    model.fit(X_train, y_train)\n\n    # Predict on test set and calculate the confusion matrix\n    y_pred = model.predict(X_test)\n    cm = confusion_matrix(y_test, y_pred)\n\n    # Plot the confusion matrix\n    fig, ax = plt.subplots()\n    ax.imshow(cm, interpolation='nearest', cmap=plt.cm.Blues)\n    ax.grid(False)\n    ax.xaxis.set(ticks=(0, 1), ticklabels=('Pred", "tokens": ["#", " Split", " data", " into", " train", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", "1", ")", ",", "\n", "                ", "                ", "                ", "        ", "target", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", "1", ")", ".", "squ", "ee", "ze", "()", ",", "\n", "                ", "                ", "                ", "        ", "test", "_", "size", "=", "0", ".", "3", ",", "\n", "                ", "                ", "                ", "        ", "random", "_", "state", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " a", " Log", "istic", " Reg", "ression", " model", " and", " train", " it", " using", " the", " training", " data", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " on", " test", " set", " and", " calculate", " the", " confusion", " matrix", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "test", ")", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "#", " Plot", " the", " confusion", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "im", "show", "(", "cm", ",", " interpolation", "='", "ne", "arest", "'", ",", " c", "map", "=", "plt", ".", "cm", ".", "Bl", "ues", ")", "\n", "    ", "ax", ".", "grid", "(", "False", ")", "\n", "    ", "ax", ".", "x", "axis", ".", "set", "(", "t", "icks", "=(", "0", ",", " ", "1", ")", ",", " tick", "labels", "=", "('", "Pred"], "logprobs": [-0.411857932806015, -0.24781475961208344, -2.079930305480957, -0.04209750145673752, -1.1256153583526611, -0.047324929386377335, -0.005254150368273258, -0.041065916419029236, -0.039608605206012726, -0.004193679429590702, -0.4385148882865906, -0.013468941673636436, -0.00020466140995267779, -0.0005806190893054008, -0.0017078827368095517, -1.4305012882687151e-05, -0.000501983508002013, -0.0011361341457813978, -0.006554533261805773, -1.823885577323381e-05, -3.4570634852570947e-06, -0.00011908298620255664, -0.000144709600135684, -3.099436753473128e-06, -1.883488948806189e-05, -0.0004766043566633016, -0.005241462029516697, -5.006777428206988e-06, -1.311301275563892e-06, -4.768370445162873e-07, -1.1920928244535389e-07, -0.00011419598013162613, -0.21549548208713531, -1.5304385423660278, -0.9625548124313354, -2.109982233378105e-05, -0.1458192765712738, -0.0032298800069838762, -0.02556087076663971, -0.000651147507596761, 0.0, -0.0016454027500003576, -1.585470999998506e-05, -0.00010358751023886725, -1.9939063787460327, -0.00020680672605521977, -0.0054082986898720264, -1.3320729732513428, -0.02018926292657852, -0.0028062984347343445, -0.028395285829901695, -0.14356224238872528, -0.00307456380687654, -0.4033542275428772, -0.015462048351764679, -2.7418097943154862e-06, -0.0003980797773692757, -0.0021365690045058727, -0.6525123715400696, -0.007500581908971071, 0.0, -0.0006610354175791144, -1.1086402082582936e-05, -0.00741195771843195, -0.03280063718557358, -0.0025134659372270107, -1.0805919170379639, -0.8533251881599426, -5.960462772236497e-07, 0.0, -0.007572753820568323, -0.0048250192776322365, -0.11106861382722855, -0.0004037995240651071, -5.3881147323409095e-05, -0.0002862997353076935, -0.006015884689986706, -0.0590294785797596, -8.940656698541716e-06, -7.152555099310121e-07, -0.017468878999352455, -0.007170774042606354, -5.411955135059543e-05, -0.6799256205558777, -0.503807544708252, -0.36317241191864014, -0.00014697425649501383, -1.7762025890988298e-05, -3.6477376852417365e-05, -0.000856747676152736, -0.09069832414388657, -5.960462772236497e-07, -2.3841855067985307e-07, -0.005474811885505915, -1.8205175399780273, -0.11973468214273453, -0.013430128805339336, -0.3347055912017822, -0.001589583931490779, -0.011259232647716999, -1.273036241531372, -0.8332748413085938, -2.3112125396728516, -0.004650728777050972, -0.01706019416451454, -1.6927575416048057e-05, -0.05914926528930664, -1.7528997659683228, -1.1376500129699707, -0.0828239694237709, -2.6181979179382324, -0.08725855499505997, -0.10306023061275482, -0.19610892236232758, -0.017229756340384483, -0.0010384886991232634, -0.5148419737815857, -0.006382438819855452, -0.0007281036232598126, -2.0265558760002023e-06, -2.3841855067985307e-07, -6.794906312279636e-06, -0.2802611291408539, -0.14875657856464386, -0.003027857281267643, -0.0024594792630523443, -0.004553426057100296, -1.5020257706055418e-05, -2.932505594799295e-05, -0.0008724696817807853, -0.0247070100158453, -2.455681169521995e-05, -0.005111245904117823, -0.02760043740272522, -5.3881147323409095e-05, -2.3841830625315197e-06, -0.03011242300271988, -0.004195103887468576, -0.013755174353718758, -0.0006561510381288826, -0.002761362586170435, -0.9029327034950256, -0.00950844120234251, -2.4474878311157227, -0.8637711405754089, -1.802298665046692, -1.3451658487319946, -1.1992889642715454, -0.9753351211547852, -0.018640577793121338, -0.0007613382767885923, -0.012113104574382305, -0.0009344025747850537, -0.11071661859750748, -0.0012057899730280042, -0.02643071860074997, -0.0451631061732769, -0.0057874019257724285, -1.7165990357170813e-05, -4.887569048150908e-06, -0.0001734344696160406, -0.00016449528629891574, -1.597391747054644e-05, -4.172316494077677e-06, -0.00045348849380388856, -0.012251008301973343, -0.035231366753578186, -0.09464772045612335, -0.01580485701560974, -0.0023861052468419075, -8.344646857949556e-07, -7.152531907195225e-06, -8.308542601298541e-05, -0.0015623279614374042, -5.960462772236497e-07, -0.008099685423076153, -0.002850875724107027, -0.0027990469243377447, -7.152555099310121e-07, -1.4305104514278355e-06, -0.04358759894967079, -0.02278796397149563, -0.033420056104660034, -0.0014240134041756392, -0.021226145327091217, -0.6050819754600525, -0.07759346067905426, -0.004745886195451021, -0.00030298411729745567, -0.2635081708431244, -0.002423684811219573, -0.5555766224861145, -0.008806556463241577, -0.002351259347051382, -0.001116724917665124, -0.00036793138133361936, -1.7881377516459906e-06, -2.50339189733495e-06, -4.446407547220588e-05, -0.3960069715976715, -0.002240411238744855, -0.008786468766629696, -0.14591901004314423, -0.20712679624557495, -0.6766997575759888, -5.483612312673358e-06, -0.003930107690393925, -0.0004674295778386295, -0.18093432486057281, -1.3411426544189453, -0.01319874543696642, -0.0018486568005755544, -3.2186455882765586e-06, -0.016860008239746094, -3.611976353568025e-05, -0.0006995138246566057, -1.0728830375228426e-06, -0.011426246725022793, -0.002646160777658224, -7.390948667307384e-06, -0.0004704084130935371, -4.410734163684538e-06, -0.028818940743803978, -1.490105023549404e-05, -0.0017144280718639493, -0.0042410437017679214, -0.01202206127345562, -0.013240155763924122, -8.225102646974847e-05, -1.3142168521881104, -4.1960789531003684e-05, -0.001468533300794661, -0.0004148814477957785, -0.018008185550570488, -0.012176347896456718, -0.0032726561184972525, -0.000129691296024248, -0.17156130075454712, -0.018180515617132187, -5.960462772236497e-07, -0.0027782435063272715, -0.018033942207694054, -0.0018297373317182064, -9.65590606938349e-06, -0.0006671110168099403, -0.0012294837506487966, -0.00028951745480298996, -0.35693177580833435, -0.00011872540198964998, -0.003695802530273795, -5.245195097813848e-06, -0.3911563456058502, -0.00048673225683160126, -0.05241239443421364, -0.020490046590566635, -0.17819780111312866], "finish_reason": "length"}], "metrics": {"energy": 892.929069215775, "energy_per_token": 3.488004176624121, "time": 21.64884, "time_per_token": 0.08456578125}}
{"outputs": [{"text": "x_train, x_test, y_train, y_test = train_test_split(feature, target, test_size=0.2, random_state=42)\n\n    model = LogisticRegression()\n    model.fit(x_train.to_numpy().reshape(-1, 1), y_train)\n    y_pred = model.predict(x_test.to_numpy().reshape(-1, 1))\n\n    cm = confusion_matrix(y_test, y_pred)\n\n    ax = sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')\n    ax.set_title('Confusion Matrix')\n    ax.set_xlabel('Predicted')\n    ax.set_ylabel('True')\n    return cm, ax\n\nimport unittest\nimport matplotlib\nimport io\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.axes\nimport pandas as pd\nfrom contextlib import redirect_stdout\n\nclass TestTask(unittest.TestCase):\n\n    def test_returns_tuple(self):\n", "tokens": ["x", "_", "train", ",", " x", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "x", "_", "train", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "x", "_", "test", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "cm", ",", " annot", "=", "True", ",", " fmt", "='", "d", "'", ",", " c", "map", "='", "Bl", "ues", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Pred", "icted", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "True", "')", "\n", "    ", "return", " cm", ",", " ax", "\n", "\n", "import", " un", "ittest", "\n", "import", " matplotlib", "\n", "import", " io", "\n", "import", " numpy", " as", " np", "\n", "import", " matplotlib", ".", "py", "plot", " as", " plt", "\n", "import", " matplotlib", ".", "axes", "\n", "import", " pandas", " as", " pd", "\n", "from", " context", "lib", " import", " redirect", "_", "stdout", "\n", "\n", "class", " Test", "Task", "(", "un", "ittest", ".", "TestCase", "):", "\n", "\n", "    ", "def", " test", "_", "returns", "_", "tuple", "(", "self", "):", "\n"], "logprobs": [-2.930778741836548, -0.11796951293945312, -0.006660286337137222, -0.001808556611649692, -0.019348224624991417, -0.00016234986833296716, -0.006049536634236574, -0.0013050857232883573, -0.00241452781483531, -6.16293036728166e-05, -3.075552376685664e-05, -0.00030155404238030314, -0.0005598884890787303, -3.075552376685664e-05, -0.00023064337437972426, -0.003134459024295211, -0.0055489083752036095, -2.407998726994265e-05, -1.1920858014491387e-05, -2.7418097943154862e-06, -1.1920928244535389e-07, -0.00033885458833537996, -0.15918713808059692, -0.055240970104932785, -0.014738606289029121, -0.16499276459217072, -0.1622745394706726, -2.0503786799963564e-05, -3.814689989667386e-06, -0.05268385261297226, -0.04124106466770172, -0.0001397035230183974, -0.5850594639778137, -0.6048324704170227, -0.07122315466403961, -1.9073468138230965e-06, -2.3841855067985307e-07, -0.006989197339862585, -0.6119197010993958, -0.04041595384478569, -0.0320262536406517, -0.05178244411945343, -1.4532175064086914, -0.0006802152493037283, -0.9335240125656128, -0.020759331062436104, -0.0005384425749070942, -5.960462772236497e-07, -2.3841855067985307e-07, -4.6491513785440475e-06, -0.2663375437259674, -0.07047897577285767, -0.11649294197559357, -0.00526660168543458, -0.0021497728303074837, -1.8954096958623268e-05, -4.4225667807040736e-05, -0.07917933166027069, -3.85038583772257e-05, -0.00021479207498487085, -0.03782644495368004, -0.2896623909473419, -3.2186455882765586e-06, -0.2243708372116089, -0.00016246906307060272, -0.0016962201334536076, -7.235741941258311e-05, 0.0, -0.0019374187104403973, -2.610649426060263e-05, -0.0001072826053132303, -0.08016565442085266, -3.8265450712060556e-05, -3.635817120084539e-05, -0.0013156814966350794, -0.012211323715746403, -0.0002859421947505325, -3.6954811548639555e-06, -0.0576404444873333, -0.010364753194153309, -1.0595394372940063, -0.29600921273231506, -0.0008272086852230132, -0.027051080018281937, -0.02451486513018608, -0.0023457887582480907, -7.545663538621739e-05, -3.194758028257638e-05, -0.0005146132898516953, -0.000839238753542304, -3.576272320060525e-06, -0.0004820853646378964, -0.006560928653925657, -0.0005436849314719439, -1.1920928244535389e-07, -8.106198947643861e-06, -2.0265373677830212e-05, -1.6212332411669195e-05, -5.602820692729438e-06, -3.576278118089249e-07, -5.1020273531321436e-05, -4.172316494077677e-06, -3.969590397900902e-05, -0.004799156449735165, -1.6689286894688848e-06, -0.0002795067266561091, -0.004746123682707548, -0.15399716794490814, -0.00018416139937471598, -0.1224665641784668, -0.01654617115855217, -0.0029246911872178316, -2.145764938177308e-06, -3.099436753473128e-06, -9.047575440490618e-05, -0.0014700806932523847, -2.3841855067985307e-07, -0.008815773762762547, -0.0030462786089628935, -0.001520311925560236, -2.50339189733495e-06, -1.6927575416048057e-05, -0.028943557292222977, -0.011832763440907001, -0.7266025543212891, -0.001110175740905106, -1.8742411136627197, -0.008788122795522213, -1.6498595476150513, -0.001913860673084855, -0.0001662831346038729, -0.0008836655179038644, -4.291525328881107e-06, -0.00045193947153165936, -0.017382070422172546, -0.08793577551841736, -0.03528718277812004, -0.0023767100647091866, -0.0015526870265603065, -0.012439639307558537, -0.06981128454208374, -0.12677274644374847, -0.020983485504984856, -0.3259889483451843, -5.9126061387360096e-05, -0.15294420719146729, -0.10133107006549835, -0.02983233891427517, -0.05658455938100815, -1.9073468138230965e-06, -0.19004960358142853, -0.006979134865105152, -0.0847310796380043, -0.020382124930620193, -0.0004191712068859488, -0.02299896627664566, -0.010804015211760998, -0.11670459061861038, -0.0341530404984951, -0.0010682597057893872, -1.4424220353248529e-05, -0.003863728605210781, -0.03248310834169388, -0.0011728082317858934, -0.06267796456813812, -0.012617286294698715, -6.174850568640977e-05, -0.0006636562757194042, -0.0028721531853079796, -0.003593774512410164, -0.0005706112715415657, -0.0006107610533945262, -0.00227656913921237, -0.023606207221746445, -7.068861305015162e-05, -5.769562994828448e-05, -2.062299427052494e-05, -4.291525328881107e-06, -7.998623186722398e-05, -2.264974000354414e-06, -0.0009551253751851618, -1.6093124941107817e-05, -0.7256237268447876, -0.000331704446580261, -3.8980677345534787e-05, -1.0236923694610596, -1.6243661642074585, -0.0921027734875679, -0.002485997276380658, -0.002645209664478898, -0.20490068197250366, -0.021603267639875412, -3.3737077713012695, -0.7061727643013, -7.211902266135439e-05, -0.0041250623762607574, -0.5811752676963806, -2.9658210277557373, -1.0073410272598267, -1.9071416854858398, -1.869605302810669, -0.004376476630568504, -0.0889008492231369, -2.0666356086730957, -0.011249566450715065, -0.0002451834443490952, -9.858122211880982e-05, -0.3444371521472931, -2.171597719192505, -0.011746760457754135, -0.019449826329946518, -2.0265558760002023e-06, -3.2066785934148356e-05, -0.00029845553217455745, -0.00020668754586949944, -1.2461261749267578, -1.4504907131195068, -0.020830553025007248, -1.4327247142791748, -0.005147655960172415, -0.2593739330768585, -1.147569179534912, -0.002530351048335433, -0.0002802217786666006, -9.572047565598041e-05, -0.7895675897598267, -1.8933426141738892, -0.0015444743912667036, -3.4570634852570947e-06, -0.0015870844945311546, -1.1920928244535389e-07, -0.04328729212284088, -0.0008149401983246207, -2.7622950077056885, -0.03140019252896309, -0.019184984266757965, -0.09641314297914505, -0.6472545862197876, -0.00011836781777674332, 0.0, -1.1920922133867862e-06, -0.000263894529780373, -1.4305104514278355e-06, -2.169585604860913e-05, -0.46805185079574585, -0.002581836888566613, -0.06572920829057693, -0.6758818030357361, -8.380061626667157e-05, -2.9412691593170166, -0.30068469047546387, -0.41925060749053955, -0.13716132938861847, -0.00017438798386137933, -0.0017611959483474493, -0.00014578233822248876], "finish_reason": "length"}], "metrics": {"energy": 863.6041730403896, "energy_per_token": 3.373453800939022, "time": 21.654327, "time_per_token": 0.08458721484375}}
{"outputs": [{"text": "X_train, X_test, y_train, y_test = train_test_split(\n        feature.values.reshape(-1, 1), target, test_size=0.33, random_state=42)\n    model = LogisticRegression()\n    model.fit(X_train, y_train)\n    y_pred = model.predict(X_test)\n    cm = confusion_matrix(y_test, y_pred)\n    fig, ax = plt.subplots()\n    ax.set_title('Confusion Matrix')\n    ax.matshow(cm)\n    ax.set_xticklabels([''] + list(model.classes_))\n    ax.set_yticklabels([''] + list(model.classes_))\n\n    return cm, ax", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n", "        ", "feature", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "test", ")", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "')", "\n", "    ", "ax", ".", "mat", "show", "(", "cm", ")", "\n", "    ", "ax", ".", "set", "_", "xt", "ick", "labels", "([", "''", "]", " +", " list", "(", "model", ".", "classes", "_", "))", "\n", "    ", "ax", ".", "set", "_", "yt", "ick", "labels", "([", "''", "]", " +", " list", "(", "model", ".", "classes", "_", "))", "\n", "\n", "    ", "return", " cm", ",", " ax", "\n", "\n", "def"], "logprobs": [-2.554048776626587, -0.2149258255958557, -0.0015055523253977299, -0.0007577646756544709, -0.004030914045870304, -3.886147169396281e-05, -0.001311752712354064, -0.0007819455349817872, -0.02072710543870926, -2.372236667724792e-05, -4.0531076592742465e-06, -0.0001161031104857102, -0.0002526917669456452, -5.245195097813848e-06, -0.00038211196078918874, -0.0010025242809206247, -0.003276101779192686, -1.2397689715726301e-05, -5.602820692729438e-06, -1.7881377516459906e-06, -2.3841855067985307e-07, -0.00022516099852509797, -1.9069322347640991, -0.01989937387406826, -0.07571931928396225, -1.1325924396514893, -0.595346987247467, -0.03868569806218147, -0.0008642514003440738, 0.0, -0.0032431883737444878, -1.6331539882230572e-05, -0.00012742661056108773, -0.03160661458969116, -3.969590397900902e-05, -6.878139538457617e-05, -0.00582592049613595, -0.10488623380661011, -0.5145817399024963, -0.01582363061606884, -5.8412379075889476e-06, -2.3841855067985307e-07, -0.0018184330547228456, -0.005816439166665077, -2.2053474822314456e-05, -0.7401617765426636, -0.9796748161315918, -0.11234355717897415, -0.01832004263997078, -2.0265558760002023e-06, -4.768370445162873e-07, -0.00015829740732442588, -0.16602666676044464, -0.011881062760949135, -1.341393232345581, -0.02458070032298565, -0.37822163105010986, -1.6795167922973633, -0.006841922644525766, -0.0001951265730895102, -9.536738616588991e-07, -2.3841855067985307e-07, -3.576272320060525e-06, -0.442495197057724, -0.19056886434555054, -0.00389519683085382, -0.0025252378545701504, -0.002286797622218728, -1.1324817933200393e-05, -1.490105023549404e-05, -0.0006753309280611575, -0.023804347962141037, -1.811964830267243e-05, -0.0066171810030937195, -0.0009920443408191204, -8.475421054754406e-05, -2.861018856492592e-06, -0.002238508081063628, -0.0014867454301565886, -0.048620373010635376, -0.12285967916250229, -0.0006401873542927206, -0.014086931943893433, -0.021217742934823036, -0.002689318498596549, -4.0649541915627196e-05, -2.109982233378105e-05, -0.0003759154351428151, -0.00025281094713136554, -9.894321920000948e-06, -4.446407547220588e-05, -0.0007755132392048836, -0.003337054280564189, -0.11145737767219543, -0.09210484474897385, -0.010259863920509815, -0.0021151569671928883, -1.0728830375228426e-06, -4.529942543740617e-06, -0.0001072826053132303, -0.0010468247346580029, -4.768370445162873e-07, -0.0030854973010718822, -0.0006648475537076592, -0.000871278636623174, -1.1920922133867862e-06, -1.1086402082582936e-05, -0.025195583701133728, -0.007506616413593292, -0.20953050255775452, -0.41255292296409607, -0.011042791418731213, -0.0009802542626857758, -0.00043871314846910536, -0.0003321811091154814, -3.814689989667386e-06, -2.50339189733495e-06, -6.12716976320371e-05, -0.48646044731140137, -0.0025649527087807655, -0.00586645258590579, -0.14023418724536896, -0.03610894829034805, -1.7958781719207764, -0.0022178117651492357, -0.03758801147341728, -0.4879174828529358, -0.0027562507893890142, -7.510157047363464e-06, -0.004887894261628389, -0.11822883039712906, -0.007875936105847359, -0.002066978020593524, -0.06579897552728653, -0.013988427817821503, -0.6775254607200623, -0.0002991705550812185, -0.00033623288618400693, -0.0009729895391501486, -0.9932400584220886, -0.005910893436521292, -0.010831727646291256, -0.17752045392990112, -0.0005627478822134435, -1.1860421895980835, -0.004004080779850483, -0.7389239072799683, -1.3471765518188477, -1.1920928244535389e-07, -0.2175908386707306, -0.3971279263496399, -0.05811094492673874, -0.0010350352386012673, -0.7034137845039368, -0.002179748611524701, -0.9669807553291321, -0.000302745756926015, -0.0004103533865418285, -0.009397084824740887, -0.001859127776697278, -0.00529482401907444, -8.153582894010469e-05, -0.0001431601122021675, -1.2159273865108844e-05, -0.0011175584513694048, -5.4238757002167404e-05, -0.0018033209489658475, -1.549708758830093e-05, -1.1920928244535389e-07, -0.0005565524916164577, -0.0006073060794733465, -9.011816291604191e-05, -0.00017689094238448888, -0.0002584123576525599, -2.610649426060263e-05, -6.139089964563027e-05, -2.0265558760002023e-06, -2.50339189733495e-06, -0.0002851079625543207, -0.0001867835089797154, -0.0004440752090886235, -2.733217477798462, -0.0014704378554597497, -0.2970632314682007, -0.16746509075164795, -0.0017258524894714355, -0.0009834696538746357, -0.19739830493927002, -0.014364644885063171, -1.2268201112747192], "finish_reason": "stop"}], "metrics": {"energy": 647.6984755344383, "energy_per_token": 3.4089393449180965, "time": 16.200397, "time_per_token": 0.08526524736842105}}
{"outputs": [{"text": "# Split the data into training and testing sets\n    X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.3)\n    # Create the logistic regression model\n    logreg = LogisticRegression()\n    # Train the model\n    logreg.fit(X_train, y_train)\n    # Predict the target for the test set\n    y_pred = logreg.predict(X_test)\n    # Plot the confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n    fig, ax = plt.subplots()\n    ax.matshow(cm, cmap='Blues')\n    ax.set_title(\"Confusion Matrix\", fontdict={'fontsize': 18, 'fontweight': 'bold'})\n    ax.set_xticks(range(len(set(target))))\n    ax.set_xticklabels([i for i in range(len(set(target)))])\n    ax.set_yticks(range(len(set(target))))\n    ax.set", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " testing", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n", "    ", "#", " Create", " the", " logistic", " regression", " model", "\n", "    ", "log", "reg", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "#", " Train", " the", " model", "\n", "    ", "log", "reg", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n", "    ", "#", " Pred", "ict", " the", " target", " for", " the", " test", " set", "\n", "    ", "y", "_", "pred", " =", " log", "reg", ".", "predict", "(", "X", "_", "test", ")", "\n", "    ", "#", " Plot", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "mat", "show", "(", "cm", ",", " c", "map", "='", "Bl", "ues", "')", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Conf", "usion", " Matrix", "\"", ",", " font", "dict", "={", "'", "fonts", "ize", "':", " ", "1", "8", ",", " '", "font", "weight", "':", " '", "bold", "'})", "\n", "    ", "ax", ".", "set", "_", "xt", "icks", "(", "range", "(", "len", "(", "set", "(", "target", "))", "))", "\n", "    ", "ax", ".", "set", "_", "xt", "ick", "labels", "([", "i", " for", " i", " in", " range", "(", "len", "(", "set", "(", "target", "))", ")]", ")", "\n", "    ", "ax", ".", "set", "_", "yt", "icks", "(", "range", "(", "len", "(", "set", "(", "target", "))", "))", "\n", "    ", "ax", ".", "set"], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -0.27506178617477417, -0.03995629400014877, -0.334110289812088, -0.015279857441782951, -0.15630502998828888, -0.0037797691766172647, -0.052109748125076294, -0.005806128028780222, -0.5085312724113464, -0.016580995172262192, -0.00015770144818816334, -0.000546425289940089, -0.0013766345800831914, -1.4424220353248529e-05, -0.00032217081752605736, -0.0005635818815790117, -0.0035447163973003626, -1.0967194612021558e-05, -1.0728830375228426e-06, -5.757642793469131e-05, -9.512448741588742e-05, -2.9802276912960224e-06, -1.5258672647178173e-05, -0.0003997480380348861, -0.0028945000376552343, -7.986990567587782e-06, -1.4305104514278355e-06, -7.152555099310121e-07, -1.1920928244535389e-07, -8.892617915989831e-05, -0.13600267469882965, -0.2504354417324066, -0.005244070664048195, -0.043283410370349884, -0.033535342663526535, -1.966933996300213e-05, -5.960462772236497e-07, -0.008727265521883965, -0.004800698719918728, -1.2636104656849056e-05, -0.5797070860862732, -1.7496076822280884, -0.019892478361725807, -2.049171209335327, -0.05841740593314171, -0.9104069471359253, -1.481105923652649, -0.09257233887910843, -0.0010609956225380301, -0.010054417885839939, -0.35476037859916687, -0.0006027788622304797, -0.9814839959144592, -0.5530190467834473, -0.011657215654850006, -0.00024625606602057815, -2.3841830625315197e-06, -2.3841855067985307e-07, -1.5497195136049413e-06, -0.1128644123673439, -0.004188337363302708, -0.009171617217361927, -0.05053699389100075, -1.2995357513427734, -0.0014325842494145036, -0.02815401181578636, -0.9565426707267761, -6.222531374078244e-05, -0.0024903970770537853, -4.2914423829643056e-05, -0.002934675430878997, -1.7881233361549675e-05, -3.707340147229843e-05, -0.07079455256462097, -0.0028190179727971554, -2.1219027985353023e-05, -1.0109448432922363, -0.005034151952713728, -4.017272294731811e-05, -1.5497195136049413e-06, -0.0007321537705138326, -0.0005459486856125295, -0.008403417654335499, -0.004908416420221329, -0.30567601323127747, -0.0016598032088950276, -0.11732114106416702, -0.239900141954422, -0.20579683780670166, -0.006624641828238964, -0.03079061582684517, -0.008722302503883839, -0.004789309576153755, -0.00018761781393550336, -0.043558839708566666, -5.1020273531321436e-05, -0.005740347784012556, -0.012348507530987263, -0.0003475538978818804, -5.960446742392378e-06, -2.5629668016335927e-05, -1.156323378381785e-05, -0.00029881304362788796, -0.0003216941258870065, -3.933898824470816e-06, -2.062299427052494e-05, -0.0004949536523781717, -0.0009267802815884352, -0.041453585028648376, -0.002785732736811042, -1.8987410068511963, -0.01595175638794899, -0.0032273847609758377, -0.0003251500893384218, -0.048612311482429504, -0.0022706221789121628, -0.33029070496559143, -0.01860898546874523, -0.003651738166809082, -7.390948667307384e-06, -0.00012718822108581662, -0.00013207517622504383, -0.0013615157222375274, -1.311301275563892e-06, -0.004632930271327496, -0.0005237876321189106, -0.0006629414856433868, -3.3378546504536644e-06, -8.821448318485636e-06, -0.027690768241882324, -0.011540794745087624, -0.024576513096690178, -1.0248737335205078, -0.013794681057333946, -0.001522573409602046, -0.0010089550632983446, -0.0005529781919904053, -6.437280717364047e-06, -6.9141146923357155e-06, -0.00021896349790040404, -0.23208989202976227, -0.0027050115168094635, -0.0028448132798075676, -0.12289278209209442, -0.08404017239809036, -0.8179489374160767, -0.0001677133986959234, -6.174850568640977e-05, -0.000731558189727366, -0.2142740786075592, -0.01701800338923931, -1.1444026313256472e-05, -2.514322280883789, -0.031410474330186844, -6.556489552167477e-06, -0.3027915060520172, -0.07118574529886246, -0.0007587176514789462, -0.04890216886997223, -0.0002884448622353375, -0.1364857703447342, -0.008060426451265812, -0.3229248523712158, -2.5193886756896973, -0.012577968649566174, -0.004566953983157873, -3.194758028257638e-05, -0.03699735924601555, -0.02461431547999382, -0.8680917024612427, -0.9323380589485168, -1.5949231386184692, -0.13565737009048462, -0.0024737492203712463, -0.01851724460721016, -1.1920928244535389e-07, -0.009677991271018982, -0.11803890764713287, -0.3249691128730774, -2.0492024421691895, -1.1446990966796875, -0.005873800255358219, -0.056626465171575546, -4.494089080253616e-05, -0.00011920218821614981, -0.03379525989294052, -0.0010125277331098914, -0.013519514352083206, -0.0027501878794282675, -0.0030242919456213713, -0.02256794273853302, -6.878139538457617e-05, -1.0586072206497192, -0.0018681708024814725, -1.4272472858428955, -0.04763823375105858, -0.0013508014380931854, -0.27955254912376404, -0.00012635385792236775, -0.03198838606476784, -7.962863310240209e-05, -2.287266969680786, -0.0006970121758058667, -0.2351677566766739, -0.2632274031639099, -0.0008206575294025242, -0.0019463420612737536, -4.541770613286644e-05, -0.0005172345554456115, -4.410734163684538e-06, -0.00031931069679558277, -3.576272320060525e-06, -1.908055305480957, -1.9550132492440753e-05, -1.1920928244535389e-07, -0.43427130579948425, -2.0650882720947266, -0.011963991448283195, -9.274052717955783e-05, -0.00017212340026162565, -1.7545740604400635, -0.001208290341310203, -0.10000025480985641, -0.00039319414645433426, -0.007528031710535288, -0.00031728477915748954, -0.0016018429305404425, -0.010510330088436604, -0.011379338800907135, -0.7396883368492126, -0.0028212766628712416, -8.40390202938579e-05, -0.0003694805200211704, -5.960446742392378e-06, -0.005747103597968817, -3.576214658096433e-05, -0.02227046526968479, -0.00019798702851403505, -0.002451036125421524, -0.00024172721896320581, -0.00012313561455812305, -0.0005696581210941076, -0.0001250427303602919, -0.0006462631281465292, -0.00012182447244413197, -0.0021955687552690506, -0.00020680672605521977, -0.0008124388405121863, -8.67805938469246e-05, -0.00012861855793744326, -0.0005633435794152319, -4.172316494077677e-06, -0.0002153879904653877], "finish_reason": "length"}], "metrics": {"energy": 871.161583927155, "energy_per_token": 3.402974937215449, "time": 21.65637, "time_per_token": 0.0845951953125}}
{"outputs": [{"text": "# Split the data into train and test sets\n    X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.2, random_state=42)\n\n    # Create the logistic regression model\n    clf = LogisticRegression()\n\n    # Fit the model on the training data\n    clf.fit(X_train.to_numpy().reshape(-1, 1), y_train)\n\n    # Predict on the testing set\n    y_pred = clf.predict(X_test.to_numpy().reshape(-1, 1))\n\n    # Calculate the confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n\n    # Create the confusion matrix plot\n    fig, ax = plt.subplots()\n    ax = plt.subplot(111)\n    ax.set_title('Confusion Matrix', fontsize=20)\n    ax.set_xlabel('Predicted', fontsize=14)\n    ax.set_ylabel('Actual', fonts", "tokens": ["#", " Split", " the", " data", " into", " train", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " the", " logistic", " regression", " model", "\n", "    ", "cl", "f", " =", " Log", "istic", "Reg", "ression", "()", "\n", "\n", "    ", "#", " Fit", " the", " model", " on", " the", " training", " data", "\n", "    ", "cl", "f", ".", "fit", "(", "X", "_", "train", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "ict", " on", " the", " testing", " set", "\n", "    ", "y", "_", "pred", " =", " cl", "f", ".", "predict", "(", "X", "_", "test", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "\n", "    ", "#", " Calculate", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "#", " Create", " the", " confusion", " matrix", " plot", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", " =", " plt", ".", "sub", "plot", "(", "1", "1", "1", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Conf", "usion", " Matrix", "'", ",", " fonts", "ize", "=", "2", "0", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Pred", "icted", "'", ",", " fonts", "ize", "=", "1", "4", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Act", "ual", "'", ",", " fonts"], "logprobs": [-0.411857932806015, -0.24781475961208344, -0.2902117967605591, -0.27506178617477417, -0.03995629400014877, -1.4371299743652344, -0.02194269560277462, -0.004773885942995548, -0.037565965205430984, -0.052326418459415436, -0.0037908137310296297, -0.39029666781425476, -0.017110584303736687, -0.00020621081057470292, -0.0007047553663142025, -0.0015351902693510056, -1.645074735279195e-05, -0.0005490464391186833, -0.0012234115274623036, -0.006423422135412693, -1.7762025890988298e-05, -2.50339189733495e-06, -8.868777513271198e-05, -0.00014351768186315894, -2.861018856492592e-06, -2.038458114839159e-05, -0.0004702892620116472, -0.005297077354043722, -4.6491513785440475e-06, -9.536738616588991e-07, -4.768370445162873e-07, -1.1920928244535389e-07, -0.00011157367407577112, -0.19387325644493103, -0.23438940942287445, -0.006623220629990101, -0.062041785567998886, -0.033476315438747406, -1.8954096958623268e-05, -1.311301275563892e-06, -0.010273786261677742, -0.00754317594692111, -3.802703940891661e-05, -0.696716845035553, -0.25077641010284424, -0.012655424885451794, -9.536738616588991e-07, -8.344646857949556e-07, -0.0007471630233339965, -0.20360179245471954, -0.009843499399721622, -0.01465038675814867, -0.008782214485108852, -0.1308216005563736, -0.00043466180795803666, -0.002638075966387987, -1.0653074979782104, -1.5846242904663086, -0.0863736942410469, -0.0011336335446685553, -0.0067705269902944565, -0.24719518423080444, -0.00023457636416424066, -2.4686086177825928, -0.00010311071673640981, -0.0016383809270337224, -0.00016139635408762842, -7.152555099310121e-07, -1.1920928244535389e-07, -3.576278118089249e-07, -0.8554749488830566, -0.020707255229353905, -0.14554382860660553, -0.00020144341397099197, -0.00039986721822060645, -0.913131058216095, -0.0016105312388390303, -0.023733804002404213, -0.8355209231376648, -0.006768987979739904, -0.426347017288208, -0.00695013115182519, -0.005662235431373119, -7.86750388215296e-05, -0.0015757775399833918, -3.3378546504536644e-06, -0.0006965356878936291, -4.887569048150908e-06, -1.3947389561508317e-05, -0.04971498250961304, -0.0016755126416683197, -1.2397689715726301e-05, -0.11199819296598434, -0.19786164164543152, -3.576272320060525e-06, -0.2634476125240326, -9.97731985989958e-05, -0.001302704680711031, -5.245071224635467e-05, 0.0, -0.0005594118847511709, -1.2278481335670222e-05, -7.879423355916515e-05, -0.10741730779409409, -1.6093124941107817e-05, -2.4199192921514623e-05, -0.0012312696781009436, -0.004869981203228235, -5.0424259825376794e-05, -1.311301275563892e-06, -0.04520583525300026, -0.008219818584620953, -0.003983896225690842, -0.00011896379146492109, -0.0007943335804156959, -0.2271762192249298, -0.001260677701793611, -2.132647752761841, -0.06694585829973221, -2.9939687252044678, -0.7928683757781982, -0.037789713591337204, -0.00010966652916977182, -0.04554793983697891, -2.6702524337451905e-05, -0.005609841085970402, -0.009890242479741573, -0.0014174662064760923, -3.576278118089249e-07, -8.4638240878121e-06, -8.940656698541716e-06, -0.00022659118985757232, -0.0007339406292885542, -3.576272320060525e-06, -2.109982233378105e-05, -0.002940618433058262, -0.0013735393295064569, -3.576278118089249e-07, -2.9802276912960224e-06, -1.6569954823353328e-05, -7.986990567587782e-06, -4.172316494077677e-06, -2.3841855067985307e-07, -1.8954096958623268e-05, -2.50339189733495e-06, -3.528532761265524e-05, -0.0023173640947788954, -7.152555099310121e-07, -0.00027998341829515994, -0.0022250674664974213, -0.0038259655702859163, -0.0003231241717003286, -0.005673377774655819, -1.4067332744598389, -0.08006024360656738, -0.0013921103673055768, -0.0002037079248111695, -0.013015788048505783, -0.00032848684350028634, -0.05769119784235954, -0.006309233605861664, -0.0007202415145002306, -1.311301275563892e-06, -9.65590606938349e-06, -3.981510963058099e-05, -0.0007801587926223874, -1.1920928244535389e-07, -0.0038345158100128174, -0.0034286542795598507, -0.0004975749761797488, -4.768370445162873e-07, -2.5152843591058627e-05, -0.0263423640280962, -0.0015291199088096619, -0.03252442181110382, -0.0006294653285294771, -0.013454592786729336, -1.2726826667785645, -0.6688224077224731, -0.11818254739046097, -0.0001308832288486883, -0.011081933043897152, -0.028943557292222977, -0.0011288706446066499, -0.4865972101688385, -0.0045376429334282875, -0.0008253029081970453, -0.00029738296871073544, -0.0001699779968475923, -1.5497195136049413e-06, -1.9073468138230965e-06, -0.00018439977429807186, -0.3751075863838196, -0.0015375708462670445, -0.015805326402187347, -0.16152323782444, -1.5534281730651855, -0.9174787998199463, -1.5139465176616795e-05, -1.2843713760375977, -0.0027772923931479454, -1.0311099290847778, -0.00034707720624282956, -0.03478371351957321, -0.0001134808044298552, -0.0069717951118946075, -0.020596086978912354, -0.01671840064227581, -0.26875585317611694, -0.06305577605962753, -0.7574537992477417, -0.004431309178471565, -0.05094921961426735, -0.4216601550579071, -0.0018675759201869369, -9.298280929215252e-06, -0.005253438837826252, -1.5003962516784668, -0.00036971885128878057, -0.08948201686143875, 0.0, -0.01162445917725563, -1.4248478412628174, -0.04388188198208809, -0.060586363077163696, -0.0037891510874032974, -0.03983601927757263, -0.7976956963539124, -0.11068417876958847, -0.9522290825843811, -0.0020987405441701412, -0.1390138417482376, -0.030954400077462196, -0.005994081497192383, -0.014249244704842567, -0.41772449016571045, -0.00012540031457319856, -0.0006046851049177349, -3.576278118089249e-07, -0.0005573864909820259, -0.04273289442062378, -0.23781026899814606, -0.0013756821863353252, -0.0011449456214904785, -0.00012003655137959868, -0.00010966652916977182, -0.0002644904307089746, -0.00018690270371735096, -2.7418097943154862e-06, -0.008615112863481045, -0.0001102625101339072, -0.28389114141464233, -2.002696055569686e-05, -0.00012385078298393637, -8.83301836438477e-05, -0.00033539868309162557], "finish_reason": "length"}], "metrics": {"energy": 870.6254402122485, "energy_per_token": 3.4008806258290956, "time": 21.658031, "time_per_token": 0.08460168359375}}
{"outputs": [{"text": "# Splitting the data into train and test sets\n    X_train, X_test, y_train, y_test = train_test_split(\n        feature.values.reshape(-1, 1), target.values, test_size=0.33, random_state=42)\n\n    # Creating the logistic regression model\n    log_reg = LogisticRegression(random_state=0)\n\n    # Fitting the model with the training data\n    log_reg.fit(X_train, y_train)\n\n    # Predicting the target for the test set\n    y_pred = log_reg.predict(X_test)\n\n    # Creating the confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n\n    # Plotting the confusion matrix using a heatmap\n    fig, ax = plt.subplots()\n    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues',\n                xticklabels=['Predicted 0', 'Predicted 1'],\n                yticklabels=['Actual 0',", "tokens": ["#", " Split", "ting", " the", " data", " into", " train", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n", "        ", "feature", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " target", ".", "values", ",", " test", "_", "size", "=", "0", ".", "3", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Creating", " the", " logistic", " regression", " model", "\n", "    ", "log", "_", "reg", " =", " Log", "istic", "Reg", "ression", "(", "random", "_", "state", "=", "0", ")", "\n", "\n", "    ", "#", " F", "itting", " the", " model", " with", " the", " training", " data", "\n", "    ", "log", "_", "reg", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Pred", "icting", " the", " target", " for", " the", " test", " set", "\n", "    ", "y", "_", "pred", " =", " log", "_", "reg", ".", "predict", "(", "X", "_", "test", ")", "\n", "\n", "    ", "#", " Creating", " the", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "#", " Plot", "ting", " the", " confusion", " matrix", " using", " a", " heat", "map", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "cm", ",", " annot", "=", "True", ",", " fmt", "='", "d", "'", ",", " c", "map", "='", "Bl", "ues", "'", ",", "\n", "                ", "xt", "ick", "labels", "=['", "Pred", "icted", " ", "0", "'", ",", " '", "Pred", "icted", " ", "1", "']", ",", "\n", "                ", "yt", "ick", "labels", "=['", "Act", "ual", " ", "0", "'", ","], "logprobs": [-0.411857932806015, -0.24781475961208344, -2.708125114440918, -0.194544717669487, -0.3343002498149872, -0.09883960336446762, -0.9609494805335999, -0.027315355837345123, -0.008680585771799088, -0.15916863083839417, -0.08935566991567612, -0.00524122454226017, -0.5986524820327759, -0.019138555973768234, -0.0005953923100605607, -0.0008505540899932384, -0.0024829055182635784, -1.680836794548668e-05, -0.0008760428754612803, -0.0010550415609031916, -0.0192521084100008, -3.135155202471651e-05, -4.410734163684538e-06, -0.00019035911827813834, -0.00021288513380568475, -3.933898824470816e-06, -2.8490614567999728e-05, -0.000771820661611855, -0.004333035554736853, -4.0531076592742465e-06, -1.0728830375228426e-06, -3.576278118089249e-07, -3.576278118089249e-07, -0.0001711698860162869, -1.9476251602172852, -0.01631433516740799, -0.053568173199892044, -1.1775506734848022, -0.5763366222381592, -0.04579063132405281, -0.0008719933102838695, 0.0, -0.0034458802547305822, -1.8954096958623268e-05, -0.00010597144137136638, -0.025627102702856064, -3.361645576660521e-05, -5.566918844124302e-05, -0.004892758093774319, -0.1410788893699646, -1.0004658699035645, -0.009380669333040714, -0.5434409976005554, -0.028943095356225967, -7.152531907195225e-06, -2.3841855067985307e-07, -0.003971666097640991, -0.006525280419737101, -3.909988299710676e-05, -0.644182562828064, -1.0846176147460938, -0.1140391156077385, -0.015778925269842148, -1.6689286894688848e-06, -1.6689286894688848e-06, -0.00020704510097857565, -0.18504351377487183, -0.011571433395147324, -1.0232808589935303, -0.009748589247465134, -0.26369884610176086, -0.000699156429618597, -0.010548667050898075, -1.5227925777435303, -0.9285298585891724, -0.6828962564468384, -0.006744359154254198, -0.028379064053297043, -0.31751349568367004, -0.0004320403386373073, -0.9440641403198242, -1.1451159715652466, -0.17153328657150269, -0.16037552058696747, -0.00011622230522334576, -1.4305104514278355e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.4062694311141968, -1.0671387910842896, -7.152555099310121e-07, -2.3841855067985307e-07, -0.0015610187547281384, -1.8876514434814453, -0.13560491800308228, -0.18770398199558258, -0.3791753649711609, -0.0002865380665753037, -0.002539269160479307, -0.5878275632858276, -0.0007983834366314113, -0.016711367294192314, -0.09218268096446991, -1.3689297437667847, -0.18185240030288696, -0.4989829957485199, -0.10641015321016312, -0.01099563017487526, -0.00015901254664640874, -0.003932957071810961, -8.904537389753386e-05, -3.85038583772257e-05, -0.009281345643103123, -1.0013530300057027e-05, -1.9430925021879375e-05, -0.00038556772051379085, -0.09754125773906708, -6.16293036728166e-05, -0.007722168229520321, -0.0008915264043025672, -8.082063141046092e-05, -2.145764938177308e-06, -0.0015655416063964367, -0.0004037995240651071, -0.011436146683990955, -0.00017557987303007394, -0.0027287888806313276, -0.3086119294166565, -0.062481217086315155, -0.15212810039520264, -0.5124530792236328, -0.34308692812919617, -0.034650031477212906, -0.032974932342767715, -0.17122556269168854, -0.016176871955394745, -0.00018606838420964777, -0.10763774067163467, -0.00012313561455812305, -0.04494510591030121, -0.03057859279215336, -0.00045074793160893023, -6.198863957251888e-06, -2.264974000354414e-06, -2.992108420585282e-05, -1.2755313036905136e-05, -0.00020692592079285532, -0.0002455409849062562, -0.00010287232726113871, -2.825220326485578e-05, -0.0014937683008611202, -0.0021243165247142315, -0.00676081795245409, -0.0003175231395289302, -0.007686797995120287, -0.5467285513877869, -0.18183360993862152, -0.0027191590052098036, -0.0005883631529286504, -0.08829259872436523, -0.0004530118894763291, -0.1106245219707489, -0.009096017107367516, -0.0023553031496703625, -1.311301275563892e-06, -2.8729025871143676e-05, -5.6622808187967166e-05, -0.0011767374817281961, -4.768370445162873e-07, -0.008409210480749607, -0.0010032388381659985, -0.0005540504935197532, -8.344646857949556e-07, -1.0013530300057027e-05, -0.07112112641334534, -0.003606365295127034, -0.04590017348527908, -0.0006761648692190647, -0.01998210698366165, -0.7609020471572876, -0.003782381769269705, -0.006011855788528919, -0.012910940684378147, -0.0003979606262873858, -2.9900083541870117, -2.635571002960205, -0.05873265117406845, -0.02065926231443882, -0.07143183797597885, -0.0027854950167238712, -0.5586861371994019, -0.010930189862847328, -0.0011836434714496136, -0.0009984752396121621, -0.00011383838864276186, -2.50339189733495e-06, -2.7418097943154862e-06, -3.6477376852417365e-05, -0.519467830657959, -0.005495796445757151, -0.020627383142709732, -0.8534412384033203, -0.0003131137927994132, -0.002353043295443058, -0.01788828708231449, -1.1920928244535389e-07, -6.4490144723095e-05, -0.04204298183321953, -0.015519327484071255, -0.0330202616751194, -0.000816012208815664, -0.0021037368569523096, -0.0006485265912488103, -0.18931759893894196, -0.25150418281555176, -0.02380562759935856, -0.001065401709638536, -1.1920858014491387e-05, -0.40912526845932007, -0.024287661537528038, -0.04381536692380905, -0.06856861710548401, -1.4305104514278355e-06, -0.07529550790786743, -4.911301948595792e-05, -1.1121392250061035, -0.017790155485272408, -0.07282735407352448, -0.0015354283386841416, -2.4676019165781327e-05, -0.10013971477746964, -0.5047295093536377, -0.12039512395858765, -0.3009816110134125, -0.005597512703388929, -0.0013767535565420985, -4.446407547220588e-05, -0.0017628619680181146, -0.0001951265730895102, -3.7431014789035544e-05, -0.0006565084331668913, -9.929640509653836e-05, -0.00016044282529037446, -2.098061486321967e-05, -0.14597803354263306, -8.225102646974847e-05, -2.622600959512056e-06, -1.9907753085135482e-05, -1.311301275563892e-06, -7.676783570786938e-05, -0.051862698048353195, -0.00018880968855228275, -0.00021050144277978688, -0.0008062449633143842, -7.60526381782256e-05, -3.6954811548639555e-06], "finish_reason": "length"}], "metrics": {"energy": 871.9688198204038, "energy_per_token": 3.4061282024234525, "time": 21.648346, "time_per_token": 0.0845638515625}}
{"outputs": [{"text": "# Split data into train and test sets\n    X_train, X_test, y_train, y_test = train_test_split(feature, target, test_size=0.2, random_state=42)\n\n    # Train the model\n    model = LogisticRegression()\n    model.fit(X_train.to_numpy().reshape(-1, 1), y_train)\n\n    # Make predictions on test data\n    y_pred = model.predict(X_test.to_numpy().reshape(-1, 1))\n\n    # Create confusion matrix\n    cm = confusion_matrix(y_test, y_pred)\n\n    # Create the plot\n    ax = plt.axes()\n    ax.imshow(cm, cmap=plt.cm.Blues)\n    ax.set_title(\"Confusion Matrix\")\n    ax.set_xlabel(\"Predicted Label\")\n    ax.set_ylabel(\"True Label\")\n    ax.xaxis.set(ticks=np.arange(2))\n    ax.yaxis.set", "tokens": ["#", " Split", " data", " into", " train", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "feature", ",", " target", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Train", " the", " model", "\n", "    ", "model", " =", " Log", "istic", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " y", "_", "train", ")", "\n", "\n", "    ", "#", " Make", " predictions", " on", " test", " data", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "test", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n", "\n", "    ", "#", " Create", " confusion", " matrix", "\n", "    ", "cm", " =", " confusion", "_", "matrix", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "\n", "    ", "#", " Create", " the", " plot", "\n", "    ", "ax", " =", " plt", ".", "axes", "()", "\n", "    ", "ax", ".", "im", "show", "(", "cm", ",", " c", "map", "=", "plt", ".", "cm", ".", "Bl", "ues", ")", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Conf", "usion", " Matrix", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "\"", "Pred", "icted", " Label", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "(", "\"", "True", " Label", "\"", ")", "\n", "    ", "ax", ".", "x", "axis", ".", "set", "(", "t", "icks", "=", "np", ".", "ar", "ange", "(", "2", "))", "\n", "    ", "ax", ".", "y", "axis", ".", "set"], "logprobs": [-0.411857932806015, -0.24781475961208344, -2.079930305480957, -0.04209750145673752, -1.1256153583526611, -0.047324929386377335, -0.005254150368273258, -0.041065916419029236, -0.039608605206012726, -0.004193679429590702, -0.4385148882865906, -0.013468941673636436, -0.00020466140995267779, -0.0005806190893054008, -0.0017078827368095517, -1.4305012882687151e-05, -0.000501983508002013, -0.0011361341457813978, -0.006554533261805773, -1.823885577323381e-05, -3.4570634852570947e-06, -0.00011908298620255664, -0.000144709600135684, -3.099436753473128e-06, -1.883488948806189e-05, -0.0004766043566633016, -0.005241462029516697, -5.006777428206988e-06, -1.311301275563892e-06, -4.768370445162873e-07, -1.1920928244535389e-07, -0.00011419598013162613, -0.21549548208713531, -0.2469683587551117, -0.005655004642903805, -0.051306579262018204, -0.03426455333828926, -1.811964830267243e-05, -5.960462772236497e-07, -0.010609650053083897, -0.006191359367221594, -3.862306402879767e-05, -0.5723697543144226, -0.23929187655448914, -0.01195963378995657, -9.536738616588991e-07, -2.3841855067985307e-07, -0.0008537700050510466, -0.22377802431583405, -0.009639384225010872, -0.01301602367311716, -0.010417252779006958, -0.11067649722099304, -0.000409161759307608, -0.0020929116290062666, -0.6542869210243225, -1.3220548629760742, -0.9593613147735596, -0.17827799916267395, -0.00013553177996072918, -0.5706649422645569, -0.0009625093080103397, -0.00010597144137136638, -7.152555099310121e-07, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.29670950770378113, -0.07145559042692184, -0.00043406602344475687, -0.0017207353375852108, -0.0005788319394923747, -4.410734163684538e-06, -1.2516897186287679e-05, -0.0389975942671299, -0.003611353924497962, -1.2159273865108844e-05, -0.10965979099273682, -0.23851655423641205, -4.291525328881107e-06, -0.4304293096065521, -0.00014172980445437133, -0.0016056514577940106, -3.0278701160568744e-05, 0.0, -0.0005057962844148278, -1.1324817933200393e-05, -7.4741430580616e-05, -0.09201481938362122, -1.1801649634435307e-05, -1.9788545614574105e-05, -0.0009515525307506323, -0.00234352913685143, -4.1126360883936286e-05, -1.0728830375228426e-06, -0.03260611742734909, -0.011864806525409222, -0.012600688263773918, -0.0001062098381225951, -0.0010924329981207848, -1.2742997407913208, -0.0043873959220945835, -0.7169537544250488, -0.6441471576690674, -2.007871389389038, -0.017286349087953568, -0.00011097769311163574, -0.03189116716384888, -1.4543427823809907e-05, -0.0009198724874295294, -0.00403708778321743, -0.0014028241857886314, -1.2874520507466514e-05, -1.9073468138230965e-06, -0.00017414960893802345, -0.0004493180604185909, -4.6491513785440475e-06, -2.1576648578047752e-05, -0.0028754814993590117, -0.0014587724581360817, -1.1920928244535389e-07, -7.867782187531702e-06, -1.3112935448589269e-05, -7.986990567587782e-06, -3.3378546504536644e-06, -1.1920928244535389e-07, -1.3351351299206726e-05, -1.1920922133867862e-06, -1.7404405298293568e-05, -0.002618576865643263, -5.960462772236497e-07, -0.00022075122979003936, -0.0023981165140867233, -0.003590567270293832, -0.0002978596603497863, -0.005467224400490522, -0.7346439957618713, -0.14193828403949738, -0.00013743886665906757, -0.0719357281923294, -0.000270091783022508, -0.07153095304965973, -0.004890622571110725, -0.0009738231892697513, -7.152555099310121e-07, -7.510157047363464e-06, -2.8490614567999728e-05, -0.0007630059262737632, -1.1920928244535389e-07, -0.001785709522664547, -0.002204251941293478, -0.0002797450579237193, -3.576278118089249e-07, -1.311301275563892e-06, -0.015231369063258171, -0.001453058677725494, -0.07099121809005737, -0.00048196621355600655, -0.01202547736465931, -1.3196710348129272, -3.453983783721924, -1.5573267936706543, -0.16770140826702118, -0.0008429311565123498, -1.338792324066162, -0.002590635558590293, -0.1651807576417923, -3.576214658096433e-05, -1.6556671857833862, -0.036550380289554596, -0.005398576147854328, -0.022384127601981163, -0.5929174423217773, -0.0029355075675994158, -1.9581533670425415, -8.106198947643861e-06, -0.002678618300706148, -0.001141611486673355, -0.43426528573036194, -0.051537465304136276, -3.576278118089249e-07, -0.1416049599647522, -0.04178634285926819, -1.7165990357170813e-05, -0.0006404255982488394, -3.4450891689630225e-05, -0.22685502469539642, -1.1920858014491387e-05, -0.02884083054959774, -0.011306263506412506, -0.013144861906766891, -0.03490344434976578, -7.176141662057489e-05, -0.5343211889266968, -0.003755660727620125, -0.07442544400691986, -1.0973632335662842, -0.0017313265707343817, -0.0011759040644392371, -2.062299427052494e-05, -0.017438888549804688, -0.003266239771619439, -0.061145082116127014, -0.000604565953835845, -0.03937563672661781, -0.04656342417001724, -6.735097849741578e-05, -0.055966705083847046, -0.0009276139317080379, -0.5351120233535767, -0.10629536211490631, -0.008626576513051987, -0.0036193120758980513, -0.0033096084371209145, -1.9994840621948242, -0.36797991394996643, -0.01907212659716606, -0.0002547178009990603, -5.507317473529838e-05, -3.7431014789035544e-05, -1.0728830375228426e-06, -0.0006456674309447408, -9.536738616588991e-07, -0.004610028583556414, -0.0001559135998832062, -8.821448318485636e-06, -0.02242760919034481, -0.0026173877995461226, -0.00039200251922011375, -9.381330892210826e-05, -1.8000440832111053e-05, -0.07741916179656982, -0.05441931635141373, -2.825220326485578e-05, -1.2427453994750977, -1.645074735279195e-05, -1.4781842764932662e-05, -0.0007014198345132172, -0.002147988649085164, -2.992108420585282e-05, -1.311301275563892e-06, -0.06300708651542664, -0.003922626841813326, -5.960462772236497e-07, -9.464769391342998e-05, 0.0, -2.5510462364763953e-05, -0.032600000500679016, -0.11313676834106445, -0.003048061393201351, -3.123234637314454e-05, -2.2053474822314456e-05, -3.099436753473128e-06, -0.20625638961791992, -6.6756979322235566e-06, -1.2040065485052764e-05, -2.264974000354414e-06], "finish_reason": "length"}], "metrics": {"energy": 885.2307586364748, "energy_per_token": 3.4579326509237296, "time": 21.651325, "time_per_token": 0.08457548828125}}
