{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(f\"Input must be a pandas DataFrame.\")\n    if df.empty:\n        raise ValueError(f\"Empty DataFrame.\")\n    if not df[col1].apply(lambda x: np.issubdtype(x.dtype, np.number)).all():\n        raise TypeError(f\"Data in {col1} column is not numeric.\")\n    if not df[col2].apply(lambda x: np.issubdtype(x.dtype, np.number)).all():\n        raise TypeError(f\"Data in {col2} column is not numeric.\")\n    if df[col1].isnull().any() or df[col2].isnull().any():\n        raise ValueError(f\"Input DataFrame contains NA values.\")\n\n    return sns.regplot(x=col1, y=col2, data=df)", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Empty", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " not", " df", "[", "col", "1", "]", ".", "apply", "(", "lambda", " x", ":", " np", ".", "iss", "ub", "d", "type", "(", "x", ".", "d", "type", ",", " np", ".", "number", "))", ".", "all", "():", "\n", "        ", "raise", " Type", "Error", "(", "f", "\"", "Data", " in", " {", "col", "1", "}", " column", " is", " not", " numeric", ".", "\"", ")", "\n", "    ", "if", " not", " df", "[", "col", "2", "]", ".", "apply", "(", "lambda", " x", ":", " np", ".", "iss", "ub", "d", "type", "(", "x", ".", "d", "type", ",", " np", ".", "number", "))", ".", "all", "():", "\n", "        ", "raise", " Type", "Error", "(", "f", "\"", "Data", " in", " {", "col", "2", "}", " column", " is", " not", " numeric", ".", "\"", ")", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "is", "null", "()", ".", "any", "()", " or", " df", "[", "col", "2", "]", ".", "is", "null", "()", ".", "any", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Input", " Data", "Frame", " contains", " NA", " values", ".", "\"", ")", "\n", "\n", "    ", "return", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "\n", "def"], "logprobs": [-0.5882411003112793, -0.15158654749393463, -0.06058625131845474, -0.0002598424907773733, -0.017629003152251244, -0.0012034086976200342, -0.03773036599159241, -2.0503786799963564e-05, -0.15149536728858948, -0.1606409251689911, -0.007865764200687408, -0.0020295039284974337, -0.030886786058545113, -0.25945597887039185, -5.0424259825376794e-05, -0.1924378126859665, -1.8168553113937378, -0.20731322467327118, -1.114323377609253, -1.5106453895568848, -0.004150111693888903, -0.1532401144504547, -1.3464243412017822, -0.17266827821731567, -0.02286696434020996, -1.6957461833953857, -1.7651340961456299, -0.0023080871906131506, -0.005966352764517069, -0.22002026438713074, -0.20401735603809357, -0.8676857948303223, -0.005345693789422512, -0.02891147881746292, -0.10838227719068527, -0.00456956448033452, -0.0003554189461283386, -0.009518831968307495, -0.00500865001231432, -5.94836674281396e-05, -0.005183590110391378, -0.45542681217193604, -0.004558884538710117, -2.6648120880126953, -0.6959054470062256, -0.013721310533583164, -0.7683736681938171, -0.022106535732746124, -0.0002019201492657885, -0.0007002285565249622, -0.1348353773355484, -0.15366803109645844, -0.5234370231628418, -1.1063152551651, -0.7837095856666565, -0.0018672188743948936, -0.0017337066819891334, -0.0016751555958762765, -7.712543447269127e-05, -1.7013018131256104, -0.001369729870930314, -1.2279052734375, -0.016450487077236176, -0.0011438739020377398, -3.1466569900512695, -8.427741704508662e-05, -0.16311055421829224, -0.01937008835375309, -0.011104804463684559, -0.0003494605771265924, -0.000176652567461133, -0.13848058879375458, -0.029556922614574432, -0.0010258655529469252, -0.0004828002711292356, -0.006413828115910292, -0.024141283705830574, -7.92710343375802e-05, -0.06803129613399506, -0.039693962782621384, -0.11302359402179718, -0.013449653051793575, -0.025240104645490646, -0.004919685889035463, -0.002565190428867936, -0.006299993954598904, -0.009187917225062847, -0.00010239553375868127, -0.013269330374896526, -0.11586972326040268, -0.009568778797984123, -2.1842823028564453, -2.301057815551758, -1.3505456447601318, -0.02373007871210575, -0.002483262214809656, -0.03207693621516228, -0.94825279712677, -0.6044487953186035, -0.31636083126068115, -0.15038828551769257, -0.2559361159801483, -0.01925889030098915, -0.0006345880683511496, -0.0015488782664760947, -0.012652717530727386, -0.010409466922283173, -0.003723238129168749, -0.0027816910296678543, -0.0014498446835204959, -4.7801782784517854e-05, -0.004175278823822737, -3.540453326422721e-05, -6.6756979322235566e-06, -0.0003305127320345491, -4.0531076592742465e-06, -0.00023850933939684182, -0.0004389514506328851, -7.509902934543788e-05, -0.00010799778101500124, -0.00015853578224778175, -2.706014311115723e-05, -7.152555099310121e-07, -0.00024589852546341717, -0.002019510604441166, -3.933898824470816e-06, -8.713819261174649e-05, -4.8040190449682996e-05, -7.390948667307384e-06, -0.00029047083808109164, -2.5033637939486653e-05, -6.16293036728166e-05, -2.6225699912174605e-05, -5.304672595229931e-05, -8.821098163025454e-05, -9.846202738117427e-05, -6.341733387671411e-05, -0.00026913834153674543, -0.00017248096992261708, -0.0006743779522366822, -0.0002694958820939064, -0.00019071667338721454, -3.099436753473128e-06, -0.00019262365822214633, -0.0007520469953306019, -5.125868119648658e-05, -0.0009673921740613878, -0.0002516191452741623, -0.0008250646642409265, -9.238292841473594e-05, -0.014820358715951443, -0.0002675890573300421, -0.0030031364876776934, -0.0005374894244596362, -0.00018606838420964777, -0.0002714027068577707, -0.001618743408471346, -0.0005110388156026602, -0.0003675738989841193, -0.0003782987187150866, -0.3529800772666931, -1.6130425930023193, -1.964133858680725, -0.20354528725147247, -0.004016547463834286, -0.04752297326922417, -0.004210892133414745, -0.0014254419365897775, -0.901913583278656, -0.6469374895095825, -0.004393330309540033, -0.001681939116679132, -0.21861116588115692, -0.1714470237493515, -0.10486991703510284, -0.001743821892887354, -0.0008700875914655626, -5.5549986427649856e-05, -0.034791313111782074, -2.6225699912174605e-05, -7.748573807475623e-06, -0.00023958197562023997, -0.0002698534226510674, -7.009260298218578e-05, -6.079655122448457e-06, -0.00016473367577418685, -0.0029130426701158285, -0.0022136487532407045, -0.0013633014168590307, -0.07210788130760193, -0.1421782225370407, -4.541770613286644e-05, -0.008146983571350574, -0.1743968427181244, -0.00362905184738338, -3.192185401916504, -1.248436450958252, -0.01352998148649931, -0.3359915316104889, -2.9657821655273438, -1.054628849029541, -0.11708173155784607, -0.023003509268164635, -0.0006955826538614929, -0.00075049843871966, -1.2781885862350464, -0.0007895689341239631, -1.5745837688446045, -0.03704124316573143, -6.437280717364047e-06, -0.00013469743134919554, -0.5241183638572693, -0.005242291837930679, -0.0011342290090397, -0.48610448837280273, -0.015144836157560349, -0.049786780029535294, -0.0009889479260891676, -0.00022396916756406426, -0.016181446611881256, -0.00022682955022901297, -0.00010501786891836673, -6.23445157543756e-05, -0.0022559924982488155, -0.0769009217619896, -0.0011734035797417164, -0.0005770448478870094, -0.8667140007019043, -0.49370646476745605, -0.04300025478005409, -0.8633089065551758], "finish_reason": "stop"}], "metrics": {"energy": 276.8313864717485, "energy_per_token": 1.1984042704404696, "time": 10.914757, "time_per_token": 0.0472500303030303}}
{"outputs": [{"text": "if not isinstance(df, pd.core.frame.DataFrame):\n        raise ValueError('df is not a DataFrame.')\n    if len(df.columns) < 2:\n        raise ValueError('df does not contain the specified columns.')\n    if not df[col1].apply(lambda x: x.isdigit()).all() or not df[col2].apply(lambda x: x.isdigit()).all():\n        raise TypeError('df contains non-numeric data.')\n    df = df.rename({col1: 'x', col2: 'y'}, axis=1)\n    return sns.scatterplot(x=\"x\", y=\"y\", data=df)", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "core", ".", "frame", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "('", "df", " is", " not", " a", " Data", "Frame", ".", "')", "\n", "    ", "if", " len", "(", "df", ".", "columns", ")", " <", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "('", "df", " does", " not", " contain", " the", " specified", " columns", ".", "')", "\n", "    ", "if", " not", " df", "[", "col", "1", "]", ".", "apply", "(", "lambda", " x", ":", " x", ".", "is", "digit", "())", ".", "all", "()", " or", " not", " df", "[", "col", "2", "]", ".", "apply", "(", "lambda", " x", ":", " x", ".", "is", "digit", "())", ".", "all", "():", "\n", "        ", "raise", " Type", "Error", "('", "df", " contains", " non", "-", "numeric", " data", ".", "')", "\n", "    ", "df", " =", " df", ".", "rename", "({", "col", "1", ":", " '", "x", "'", ",", " col", "2", ":", " '", "y", "'}", ",", " axis", "=", "1", ")", "\n", "    ", "return", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "\"", "x", "\"", ",", " y", "=", "\"", "y", "\"", ",", " data", "=", "df", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -1.9732894897460938, -1.597391747054644e-05, -0.12029419094324112, -0.0012028133496642113, -0.0015424508601427078, -0.06544988602399826, -0.009006824344396591, -0.0026594768278300762, -0.025533214211463928, -0.23298494517803192, -5.2689116273541003e-05, -1.904931664466858, -1.942201852798462, -1.256164789199829, -0.013950222171843052, -0.05622604116797447, -0.1777525097131729, -0.007010860368609428, -1.8417284488677979, -0.028761953115463257, -0.002256349427625537, -0.2267499417066574, -0.23176318407058716, -1.4324743747711182, -0.0002899941464420408, -0.004355705808848143, -2.229116439819336, -0.3353785574436188, -0.016635045409202576, -0.5459522008895874, -0.013941757380962372, -0.025813110172748566, -0.033982980996370316, -0.0037637364584952593, -0.0009039129945449531, -0.01231212355196476, -0.008879933506250381, -4.9470632802695036e-05, -0.12435846775770187, -0.09723163396120071, -0.6135595440864563, -0.0011965028243139386, -0.0797421783208847, -0.8443840146064758, -0.0758129209280014, -0.06388311833143234, -0.028804926201701164, -0.005867992993444204, -0.0010059778578579426, -0.26497334241867065, -0.3095879554748535, -0.6565095782279968, -0.7126510143280029, -1.341921091079712, -0.049734946340322495, -0.004671256057918072, -0.0010869554243981838, -0.00011062010162277147, -1.2067557573318481, -0.000954768096562475, -1.2950655221939087, -0.015142370015382767, -0.0012390087358653545, -2.096874475479126, -0.0751190334558487, -0.4553094506263733, -1.2524704933166504, -0.3179684579372406, -0.04605034366250038, -0.029143307358026505, -1.7799994945526123, -0.20614901185035706, -0.03253157436847687, -0.002797977067530155, -0.0005256939912214875, -0.001211266964673996, -0.008316055871546268, -8.284702198579907e-05, -4.5060096454108134e-05, -0.0008026715368032455, -5.221230458118953e-05, -0.011644961312413216, -0.004086121916770935, -0.00020489977032411844, -0.0017998700495809317, -0.00011216964776394889, -6.139089964563027e-05, -0.00038485272671096027, -0.2127532660961151, -0.0003734129713848233, -0.00018749863374978304, -0.0022985723335295916, -0.0038158714305609465, -0.0030108618084341288, -0.00892400462180376, -0.009916918352246284, -8.022463589441031e-05, -0.08535462617874146, -0.20982976257801056, -1.5883541107177734, -0.0077355350367724895, -0.005276799667626619, -0.011305438354611397, -0.04408460482954979, -0.10082250088453293, -0.007309834472835064, -0.0016838433220982552, -0.4675157964229584, -2.6501002311706543, -0.972663938999176, -0.08826815336942673, -0.6787551045417786, -2.7554469108581543, -1.698734998703003, -0.06590288877487183, -0.015553482808172703, -0.012021943926811218, -0.051235005259513855, -0.5651540160179138, -0.017499452456831932, -8.880697714630514e-05, -0.004725360777229071, -0.00020013237372040749, -0.0018502036109566689, -0.0009093916742131114, -0.0005999195855110884, -0.19183145463466644, -0.00017391123401466757, -0.019838370382785797, -0.5193660855293274, -0.04127000644803047, -0.007941575720906258, -0.01724334992468357, -0.047269556671381, -1.5573443174362183, -0.022932907566428185, -4.6491513785440475e-06, -5.543078441405669e-05, -0.9385426640510559, -0.02065085619688034, -0.07486753910779953, -0.5693973302841187, -1.1087241172790527, -0.7750760912895203, -0.00096941675292328, -3.7431014789035544e-05, -3.528532761265524e-05, -0.011507327668368816, -0.006118614226579666, -0.0004876854654867202, -3.0397906812140718e-05, -1.3470558769768104e-05, -0.003392062848433852, -0.30799639225006104, -0.0016470688860863447, -0.000505677133332938, -1.6841495037078857, -1.311301275563892e-06, -5.960462772236497e-07, -7.211902266135439e-05, -0.00011216964776394889, -0.09067937731742859], "finish_reason": "stop"}], "metrics": {"energy": 181.36561487007137, "energy_per_token": 1.0668565580592433, "time": 7.3695955, "time_per_token": 0.043350561764705885}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"The input should be a DataFrame.\")\n    if not df.empty:\n        if not df.isnull().any().any():\n            if (df[col1].dtype == int) or (df[col1].dtype == float):\n                if (df[col2].dtype == int) or (df[col2].dtype == float):\n                    return sns.regplot(x=col1, y=col2, data=df, truncate=False, ci=None, fit_reg=False)\n            raise TypeError(\"The second input column should be numerical.\")\n    raise ValueError(\"The input DataFrame is empty or not contains the specified columns.\")", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " should", " be", " a", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " not", " df", ".", "empty", ":", "\n", "        ", "if", " not", " df", ".", "is", "null", "()", ".", "any", "()", ".", "any", "():", "\n", "            ", "if", " (", "df", "[", "col", "1", "]", ".", "d", "type", " ==", " int", ")", " or", " (", "df", "[", "col", "1", "]", ".", "d", "type", " ==", " float", "):", "\n", "                ", "if", " (", "df", "[", "col", "2", "]", ".", "d", "type", " ==", " int", ")", " or", " (", "df", "[", "col", "2", "]", ".", "d", "type", " ==", " float", "):", "\n", "                ", "    ", "return", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ",", " trunc", "ate", "=", "False", ",", " c", "i", "=", "None", ",", " fit", "_", "reg", "=", "False", ")", "\n", "            ", "raise", " Type", "Error", "(", "\"", "The", " second", " input", " column", " should", " be", " numerical", ".", "\"", ")", "\n", "    ", "raise", " Value", "Error", "(", "\"", "The", " input", " Data", "Frame", " is", " empty", " or", " not", " contains", " the", " specified", " columns", ".", "\"", ")"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -0.2563993036746979, -1.8497402667999268, -0.14106346666812897, -2.3389463424682617, -0.005774245597422123, -0.07752032577991486, -0.4757522642612457, -0.019270699471235275, -0.8809712529182434, -0.02829076535999775, -0.00040892345714382827, -0.003727038623765111, -0.1934441179037094, -0.18680591881275177, -1.1274662017822266, -0.41583386063575745, -0.05902048945426941, -0.23304614424705505, -0.04064261168241501, -0.020014826208353043, -0.008005320094525814, -0.39884278178215027, -0.9300997257232666, -1.4047690629959106, -1.2142380475997925, -2.5403573513031006, -0.68333500623703, -0.010979712009429932, -0.0001110968878492713, -0.8815478086471558, -0.04382072761654854, -0.011457948945462704, -0.1618299037218094, -0.08277744054794312, -0.027829322963953018, -0.007879721000790596, -0.3525649607181549, -3.089690685272217, -0.25065144896507263, -0.1597435027360916, -0.0032854885794222355, -0.001746677909977734, -0.02400687150657177, -0.10827530920505524, -0.13480807840824127, -0.20512734353542328, -0.6523258090019226, -1.2475146055221558, -0.40694284439086914, -0.23229223489761353, -0.015433993190526962, -0.005268499255180359, -0.0011276798322796822, -7.509902934543788e-05, -0.03840593993663788, -7.30726242181845e-05, -0.00026723151677288115, -0.00017248096992261708, -0.0007795632118359208, -0.0033933697268366814, -0.015842169523239136, -0.5565795302391052, -0.0042455545626580715, -0.0017815446481108665, -0.020571446046233177, -0.023885013535618782, -0.0008532935753464699, -0.00041631137719377875, -2.074220174108632e-05, -0.0048380689695477486, -0.0001674750237725675, -4.184158387943171e-05, -7.366862701019272e-05, -0.0002747396647464484, -0.000780754373408854, -0.001677297754213214, -0.00014768941036891192, -0.0008791395812295377, -0.001482460182160139, -0.000440262199845165, -0.00019834458362311125, -3.755022044060752e-05, -0.005652633961290121, -4.291525328881107e-06, -4.410734163684538e-06, -9.727005090098828e-05, -0.00025412190007045865, -0.00042548662167973816, -0.0005781171494163573, -0.002006661845371127, -0.00070296844933182, -0.00716071343049407, -0.0028597908094525337, -1.2511545419692993, -0.0363631397485733, -5.483612312673358e-06, -0.00017927470616996288, -0.6167640686035156, -0.011982720345258713, -0.0009373800130560994, -0.47669100761413574, -0.02158215083181858, -0.12533783912658691, -0.0006990373367443681, -0.0002631794777698815, -0.027303757146000862, -0.0006431656656786799, -0.00010859376925509423, -0.00010644822759786621, -0.0013168720761314034, -0.05785400792956352, -0.0020762570202350616, -0.0005529781919904053, -1.1409904956817627, -3.7435779571533203, -0.003896503010764718, -0.011292589828372002, -0.5929422974586487, -1.277346134185791, -2.8724558353424072, -0.6367923021316528, -0.011161391623318195, -0.32024893164634705, -0.7986531257629395, -0.9699339270591736, -0.0009891861118376255, -0.02495621144771576, -0.184559628367424, -0.6654989719390869, -0.670502245426178, -0.06757424771785736, -1.8687889575958252, -1.5820493698120117, -0.021135695278644562, -7.843663479434326e-05, -0.05139728635549545, -0.11076559871435165, -0.7619230151176453, -3.701262950897217, -2.0293190479278564, -2.532805919647217, -0.9822583198547363, -0.27013054490089417, -2.6889290809631348, -0.3908042907714844, -0.019893763586878777, -0.016217809170484543, -0.01845323108136654, -1.4069541692733765, -0.13551382720470428, -0.07143516838550568, -1.6569954823353328e-05, -0.008935347199440002, -0.009751422330737114, -0.2718988358974457, -0.24803507328033447, -0.8720042109489441, -0.006202259100973606, -0.5274078249931335, -0.04406806454062462, -0.6390621066093445, -3.2458391189575195, -2.454117774963379, -0.2110833376646042, -0.14525757730007172, -0.16389720141887665, -0.02903168462216854, -0.006029985379427671, -0.31619322299957275], "finish_reason": "stop"}], "metrics": {"energy": 189.90627983093276, "energy_per_token": 1.0265204315185554, "time": 7.7896814, "time_per_token": 0.04210638594594595}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise TypeError(\"df should be a pandas DataFrame\")\n    if not df.empty:\n        if isinstance(df, pd.DataFrame):\n            if len(df.columns) == 2 and not df.columns.str.contains(col1).any() and not df.columns.str.contains(col2).any():\n                return sns.scatterplot(df[col1], df[col2]).figure().gca()\n            raise ValueError(\n                \"df should contain exactly 2 columns named col1 and col2 and not contain col1 or col2\")\n        raise ValueError(\"df should contain exactly 2 columns named col1 and col2\")\n    raise ValueError(\"df cannot be empty\")", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "df", " should", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n", "    ", "if", " not", " df", ".", "empty", ":", "\n", "        ", "if", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "            ", "if", " len", "(", "df", ".", "columns", ")", " ==", " ", "2", " and", " not", " df", ".", "columns", ".", "str", ".", "contains", "(", "col", "1", ")", ".", "any", "()", " and", " not", " df", ".", "columns", ".", "str", ".", "contains", "(", "col", "2", ")", ".", "any", "():", "\n", "                ", "return", " s", "ns", ".", "scatter", "plot", "(", "df", "[", "col", "1", "]", ",", " df", "[", "col", "2", "])", ".", "figure", "()", ".", "g", "ca", "()", "\n", "            ", "raise", " Value", "Error", "(", "\n", "                ", "\"", "df", " should", " contain", " exactly", " ", "2", " columns", " named", " col", "1", " and", " col", "2", " and", " not", " contain", " col", "1", " or", " col", "2", "\"", ")", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " should", " contain", " exactly", " ", "2", " columns", " named", " col", "1", " and", " col", "2", "\"", ")", "\n", "    ", "raise", " Value", "Error", "(", "\"", "df", " cannot", " be", " empty", "\"", ")"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -1.295313835144043, -6.0794889577664435e-05, -0.2287960946559906, -0.23423607647418976, -1.3918676376342773, -1.8448721170425415, -0.01651216670870781, -0.172785222530365, -0.8170109391212463, -0.15414951741695404, -0.01247001439332962, -0.4176061749458313, -0.0006825978052802384, -0.004316180944442749, -0.15470053255558014, -0.22083643078804016, -0.9812053442001343, -0.5402749180793762, -0.0640685185790062, -0.22587800025939941, -0.052096735686063766, -0.01640569232404232, -0.007917094975709915, -0.3214852809906006, -3.145643711090088, -0.00042441420373506844, -0.22124813497066498, -1.1554316282272339, -0.020444612950086594, -0.0017904693959280849, -0.48444822430610657, -0.3132142424583435, -0.0077662901021540165, -0.013460355810821056, -0.4732610881328583, -2.6513237953186035, -0.002706200582906604, -0.12365133315324783, -0.20194368064403534, -0.2223341315984726, -0.037760328501462936, -0.9438013434410095, -0.004245673306286335, -0.14110559225082397, -2.042603015899658, -3.5318546295166016, -0.7242972254753113, -0.6130391955375671, -0.6303128600120544, -0.8783326745033264, -2.721311569213867, -0.02848994918167591, -0.328551322221756, -0.5229260325431824, -2.1505894660949707, -0.01679377816617489, -0.09738434851169586, -0.04209281504154205, -0.05530955269932747, -0.06863617897033691, -1.6144264936447144, -0.07770884037017822, -0.007008611224591732, -0.0035701366141438484, -0.001453653909265995, -0.00037424711626954377, -0.003271111287176609, -6.568216485902667e-05, -0.000350175570929423, -0.0018076046835631132, -0.011667231097817421, -0.006026075221598148, -0.0023234295658767223, -0.0007745603215880692, -0.0027273620944470167, -0.009503954090178013, -0.0057856240309774876, -0.010358735918998718, -1.7998299598693848, -0.0649193748831749, -6.6756979322235566e-06, -0.0001915509783430025, -0.6016961336135864, -0.010795759968459606, -0.004038631450384855, -1.7565433979034424, -0.7047349810600281, -0.009955278597772121, -0.0013780631124973297, -0.0011443501571193337, -0.00695119658485055, -0.031847864389419556, -0.0007861146004870534, -7.068861305015162e-05, -0.0009365463047288358, -0.20525842905044556, -2.672884464263916, -0.3570561707019806, -1.453839898109436, -0.8311386704444885, -0.9006829261779785, -0.0469261072576046, -0.006708126049488783, -0.07489463686943054, -0.3064410984516144, -2.512346029281616, -0.09352491050958633, -6.067568756407127e-05, -0.03989054635167122, -2.888556718826294, -0.0026622111909091473, -0.669136643409729, -1.0604298114776611, -0.49946078658103943, -0.3075951337814331, -2.369628429412842, -1.2636287212371826, -0.008354004472494125, -0.17038866877555847, -2.9371871948242188, -1.6960633993148804, -0.009414680302143097, -0.11648625880479813, -0.004916246049106121, -0.002762789139524102, -3.4982447624206543, -2.2335643768310547, -0.4116849899291992, -3.7928948402404785, -0.061844244599342346, -0.4460375905036926, -0.005091201979666948, -0.0048715234734117985, -1.3257626295089722, -0.22837059199810028, -0.004597569350153208, -0.34695887565612793, -0.6158425807952881, -0.5041059851646423, -0.00013207517622504383, -0.013524924404919147, -0.1546776443719864, -0.20595255494117737, -0.3288481533527374, -0.6729716062545776, -0.10349415242671967, -0.0038923469837754965, -0.0012862751027569175, -0.009036831557750702, -0.09744101762771606, -0.02040898986160755, -0.0005615564878098667, -0.0026972838677465916, -0.0003082277253270149, -0.000358159770257771, -1.1283931732177734, -0.022610832005739212, -0.05086923763155937, -0.09849278628826141, -0.055567141622304916, -0.02059456892311573, -2.6225699912174605e-05, -0.011015555821359158, -0.04337530583143234, -0.09147537499666214, -2.753683090209961, -0.01796533167362213, -0.039785727858543396, -0.06672397255897522, -0.2048293948173523], "finish_reason": "stop"}], "metrics": {"energy": 196.00797126579283, "energy_per_token": 1.0710818101955892, "time": 7.791172, "time_per_token": 0.04257471038251366}}
{"outputs": [{"text": "# Task 1\n    if type(df) != pd.core.frame.DataFrame:\n        raise ValueError(\"df is not a DataFrame\")\n    elif df.empty:\n        raise ValueError(\"df is empty\")\n    else:\n        # Task 2\n        col1_col = df.columns[df.columns.str.startswith(col1)]\n        col2_col = df.columns[df.columns.str.startswith(col2)]\n        if type(col1_col) == list:\n            if len(col1_col) != 1:\n                raise ValueError(\"col1 is not a single column\")\n        else:\n            col1_col = col1_col.iloc[0]\n        if type(col2_col) == list:\n            if len(col2_col) != 1:\n                raise ValueError(\"col2 is not a single column\")\n        else:\n            col2_col = col2_col.iloc[0]\n\n    # Task 3\n    if", "tokens": ["#", " Task", " ", "1", "\n", "    ", "if", " type", "(", "df", ")", " ", "!", "=", " pd", ".", "core", ".", "frame", ".", "DataFrame", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " is", " not", " a", " Data", "Frame", "\"", ")", "\n", "    ", "elif", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " is", " empty", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "#", " Task", " ", "2", "\n", "        ", "col", "1", "_", "col", " =", " df", ".", "columns", "[", "df", ".", "columns", ".", "str", ".", "start", "sw", "ith", "(", "col", "1", ")]", "\n", "        ", "col", "2", "_", "col", " =", " df", ".", "columns", "[", "df", ".", "columns", ".", "str", ".", "start", "sw", "ith", "(", "col", "2", ")]", "\n", "        ", "if", " type", "(", "col", "1", "_", "col", ")", " ==", " list", ":", "\n", "            ", "if", " len", "(", "col", "1", "_", "col", ")", " ", "!", "=", " ", "1", ":", "\n", "                ", "raise", " Value", "Error", "(", "\"", "col", "1", " is", " not", " a", " single", " column", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "col", "1", "_", "col", " =", " col", "1", "_", "col", ".", "il", "oc", "[", "0", "]", "\n", "        ", "if", " type", "(", "col", "2", "_", "col", ")", " ==", " list", ":", "\n", "            ", "if", " len", "(", "col", "2", "_", "col", ")", " ", "!", "=", " ", "1", ":", "\n", "                ", "raise", " Value", "Error", "(", "\"", "col", "2", " is", " not", " a", " single", " column", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "col", "2", "_", "col", " =", " col", "2", "_", "col", ".", "il", "oc", "[", "0", "]", "\n", "\n", "    ", "#", " Task", " ", "3", "\n", "    ", "if"], "logprobs": [-1.935333490371704, -4.089048862457275, -0.8569868803024292, -0.22471988201141357, -0.8340542316436768, -0.06045866757631302, -0.7849966287612915, -2.807084083557129, -0.0003588747640606016, -0.04929555207490921, -0.00374259683303535, -0.8651458024978638, -3.814689989667386e-06, -1.4424220353248529e-05, -0.09260831028223038, -0.00021395778458099812, -0.4718979597091675, -0.00011193125828867778, -0.04611830785870552, -0.0013988957507535815, -0.002422971185296774, -0.2780093848705292, -0.01824513077735901, -0.007974689826369286, -0.04229646921157837, -0.4069976806640625, -0.00010442188795423135, -0.268778532743454, -0.1908183991909027, -1.5926296710968018, -1.0088632106781006, -0.024552669376134872, -0.10337676852941513, -0.14244912564754486, -0.015135208144783974, -0.3213641047477722, -0.0006584145012311637, -0.005363716743886471, -0.18958982825279236, -1.2627371549606323, -0.6927580833435059, -0.037901513278484344, -0.0764409527182579, -0.14185191690921783, -0.007567784748971462, -0.0013309201458469033, -0.020287860184907913, -0.007274805102497339, -5.829164365422912e-05, -0.013439184986054897, -0.006504199001938105, -0.07636132091283798, -0.018125727772712708, -0.030542057007551193, -0.019456608220934868, -9.48860906646587e-05, -0.0007674132939428091, -0.14725659787654877, -2.5780868530273438, -0.00048530244384892285, -0.008940309286117554, -0.012733817100524902, -1.9515960216522217, -0.4534893333911896, -0.014917724765837193, -0.07354742288589478, -0.0977906882762909, -0.004418372642248869, -2.8977789878845215, -0.6133841872215271, -0.33334892988204956, -1.9054306745529175, -0.8308899402618408, -0.22374314069747925, -1.7313450574874878, -0.6130185723304749, -0.998674213886261, -0.4280339181423187, -0.007076438516378403, -0.012077419087290764, -0.04141595587134361, -0.4077133238315582, -0.0017847575945779681, -1.5389236211776733, -0.0002146728802472353, -9.536738616588991e-07, -0.005655360408127308, -0.028407685458660126, -0.00015293381875380874, -1.3331341743469238, -0.1800203025341034, -0.0052910298109054565, -0.14382873475551605, -0.05831800028681755, -0.0010855264263227582, -0.0011687598889693618, -0.0009162995265796781, -0.0028986602555960417, -0.002786802826449275, -0.00030191155383363366, -0.0013092526933178306, -0.0012347224401310086, -0.0005388000281527638, -8.797258487902582e-05, -0.0004922132357023656, -0.0012461524456739426, -1.2278481335670222e-05, -0.012492971494793892, -0.00010644822759786621, -3.576272320060525e-06, -0.0002330270071979612, -8.320462075062096e-05, -0.00041762212640605867, -0.0005679901223629713, -0.0004805363714694977, -0.1545272022485733, -0.2871786952018738, -2.177218198776245, -0.00033301531220786273, -0.4111730456352234, -0.010648926720023155, -0.03687741979956627, -7.009260298218578e-05, -0.17078186571598053, -0.99494868516922, -1.4467576742172241, -0.4314838647842407, -0.031329259276390076, -0.0036019703838974237, -1.1354918479919434, -0.29156428575515747, -0.0004644507134798914, -0.009898977354168892, -0.0010159813100472093, -0.0020601970609277487, -1.4066597032069694e-05, -0.006429107394069433, -1.2214727401733398, -3.933898824470816e-06, -5.400034933700226e-05, -0.013331441208720207, -0.02525254152715206, -0.046034861356019974, -0.010063976980745792, -0.001276512397453189, -0.037919074296951294, -0.20160862803459167, -4.60137271147687e-05, -0.06623296439647675, -0.21960096061229706, -0.7899247407913208, -0.005239564459770918, -0.6455023884773254, -0.20952440798282623, -0.8894893527030945, -1.3465886116027832, -0.09362446516752243, -0.30526670813560486, -0.0004042761866003275, -0.000993830617517233, -1.634563684463501, -0.859530508518219, -0.000758955895435065, -0.006724703591316938, -0.0017254954436793923, -0.7211344242095947, -0.0033088955096900463, -0.03472614288330078, -0.007782140281051397, -0.02140970714390278, -0.6661281585693359, -0.0001674750237725675, -0.017190972343087196, -5.960446742392378e-06, -0.7306230068206787, -0.8278903365135193, -0.006115059833973646, -0.0202341228723526, -0.0014841266674920917, -0.008034056052565575, -0.010541236028075218, -0.20210975408554077, -0.023872092366218567, -0.007769247051328421, -0.0001070442158379592, -8.356221951544285e-05, -0.005477894563227892, -9.870042413240299e-05, -4.291525328881107e-06, -0.00015758226800244302, -0.0008859285153448582, -0.0002933310461230576, -0.000301673193462193, -0.0004247716860845685, -0.0004138090298511088, -0.000705589191056788, -0.00027223696815781295, -4.708655978902243e-05, -0.00014709345123264939, -0.023086685687303543, -4.565611743601039e-05, -7.510157047363464e-06, -0.0002451834443490952, -0.0013613966293632984, -3.576278118089249e-07, -1.9073468138230965e-06, -0.0011102947173640132, -0.00020251607929822057, -0.00022373080719262362, -9.60780744208023e-05, -0.00011550712952157483, -0.0006507901125587523, -0.0006918897270224988, -5.245195097813848e-06, -0.0005776405450887978, -0.00032789100077934563, -0.0006300609675236046, -0.02649085782468319, -0.0010599239030852914, -0.00027223696815781295, -0.0009837078396230936, -0.00029523781267926097, -0.0004349001101218164, -0.0006213641609065235, -4.410646579344757e-05, -2.1934269170742482e-05, -0.0030898945406079292, -0.0009532198309898376, -9.178694017464295e-05, -0.0008256602450273931, -0.0002708068350329995, -0.0007416835287585855, -0.004077573772519827, -9.63164638960734e-05, -3.313963316031732e-05, -0.0005520250415429473, -0.0007582411635667086, -0.00118900160305202, -5.209310256759636e-05, -5.006777428206988e-06, -0.0008493629866279662, -0.00047338721924461424, -0.00030155404238030314, -0.00036900385748595, -4.756337511935271e-05, -4.7801782784517854e-05, -0.00030870441696606576, -0.8135383129119873, -1.7566704750061035, -0.28328821063041687, -0.07321653515100479, -0.006403878331184387, -0.020449401810765266, -0.05274514481425285, -0.016205376014113426, -0.7086735367774963], "finish_reason": "length"}], "metrics": {"energy": 254.41156945705393, "energy_per_token": 0.9937951931916169, "time": 11.146375, "time_per_token": 0.04354052734375}}
{"outputs": [{"text": "import matplotlib.pyplot as plt\n\n    if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"df must be a pandas DataFrame.\")\n\n    if not df.empty:\n        if df.dtypes[col1].name not in ['int64', 'float64']:\n            raise TypeError(\"Data in col1 must be numerical.\")\n        if df.dtypes[col2].name not in ['int64', 'float64']:\n            raise TypeError(\"Data in col2 must be numerical.\")\n        if col1 in df.columns and col2 in df.columns:\n            df1 = df[col1]\n            df2 = df[col2]\n            if (df1.min() < df1.max()) and (df2.min() < df2.max()):\n                sns.regplot(df1, df2, scatter=\"seaborn scatter\", fit_reg=False)\n            else:\n                plt.errorbar(df1, df2, xerr=0, yerr=0,", "tokens": ["import", " matplotlib", ".", "py", "plot", " as", " plt", "\n", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " df", ".", "empty", ":", "\n", "        ", "if", " df", ".", "d", "types", "[", "col", "1", "]", ".", "name", " not", " in", " ['", "int", "6", "4", "'", ",", " '", "float", "6", "4", "']", ":", "\n", "            ", "raise", " Type", "Error", "(", "\"", "Data", " in", " col", "1", " must", " be", " numerical", ".", "\"", ")", "\n", "        ", "if", " df", ".", "d", "types", "[", "col", "2", "]", ".", "name", " not", " in", " ['", "int", "6", "4", "'", ",", " '", "float", "6", "4", "']", ":", "\n", "            ", "raise", " Type", "Error", "(", "\"", "Data", " in", " col", "2", " must", " be", " numerical", ".", "\"", ")", "\n", "        ", "if", " col", "1", " in", " df", ".", "columns", " and", " col", "2", " in", " df", ".", "columns", ":", "\n", "            ", "df", "1", " =", " df", "[", "col", "1", "]", "\n", "            ", "df", "2", " =", " df", "[", "col", "2", "]", "\n", "            ", "if", " (", "df", "1", ".", "min", "()", " <", " df", "1", ".", "max", "())", " and", " (", "df", "2", ".", "min", "()", " <", " df", "2", ".", "max", "()", "):", "\n", "                ", "s", "ns", ".", "reg", "plot", "(", "df", "1", ",", " df", "2", ",", " scatter", "=", "\"", "se", "ab", "orn", " scatter", "\"", ",", " fit", "_", "reg", "=", "False", ")", "\n", "            ", "else", ":", "\n", "                ", "plt", ".", "error", "bar", "(", "df", "1", ",", " df", "2", ",", " x", "err", "=", "0", ",", " y", "err", "=", "0", ","], "logprobs": [-3.411358118057251, -0.30053234100341797, -0.03669564053416252, -0.0037589860148727894, -0.00011467275908216834, -0.0024547225330024958, -0.0013763965107500553, -0.004949341528117657, -1.0917952060699463, -0.0003292018664069474, -0.33271852135658264, -0.19662348926067352, -0.04951714351773262, -0.00022837892174720764, -0.012162097729742527, -0.0013569919392466545, -0.032351430505514145, -1.847726889536716e-05, -0.16352172195911407, -0.17859004437923431, -0.005399168934673071, -0.0012724645202979445, -0.03175709769129753, -0.16848224401474, -5.209310256759636e-05, -0.13905315101146698, -0.37538912892341614, -1.4952727556228638, -0.6269134879112244, -0.0032153832726180553, -0.04474518075585365, -0.8287893533706665, -0.0681447759270668, -0.006114467047154903, -1.3276140689849854, -0.008152777329087257, -0.00019858295854646713, -0.0024032301735132933, -1.1815102100372314, -0.00021407696476671845, -0.09607674926519394, -1.0336655378341675, -0.5626698732376099, -0.03778604045510292, -0.26205313205718994, -0.051613546907901764, -0.009408303536474705, -0.017160387709736824, -0.415646493434906, -1.1199511289596558, -1.2038863897323608, -1.1676099300384521, -0.006681956350803375, -0.8638870716094971, -0.03933575376868248, -0.0023262840695679188, -0.0005969410995021462, -0.024966906756162643, -1.041919469833374, -2.314946413040161, -0.00014399446081370115, -0.8593699336051941, -0.17630831897258759, -0.3204023540019989, -8.106198947643861e-06, -0.003147649811580777, -0.00025507534155622125, -0.013347908854484558, -0.1929287165403366, -0.00834951177239418, -2.8609820219571702e-05, -0.03867984563112259, -0.5083582997322083, -0.003093340899795294, -0.0037130240816622972, -0.024548480287194252, -0.011615503579378128, -8.391981828026474e-05, -0.0630505159497261, -0.5802489519119263, -2.688538074493408, -2.776540756225586, -1.842943549156189, -0.026669159531593323, -0.5050132274627686, -0.04520173370838165, -2.8976330757141113, -0.3316347897052765, -0.017208430916070938, -0.0009152276325039566, -0.001647544908337295, -0.3686921298503876, -0.06544888019561768, -0.009259259328246117, -0.002439501229673624, -0.0010932666482403874, -7.784063927829266e-05, -0.00026246439665555954, -6.007967749610543e-05, -0.012300936505198479, -3.0278701160568744e-05, -0.00016378014697693288, -3.7788631743751466e-05, -0.001259844284504652, -3.909988299710676e-05, -0.0018433022778481245, -0.0006187431863509119, -0.00025245340657420456, -1.0728830375228426e-06, -1.1801649634435307e-05, -3.814689989667386e-06, -0.0007203606073744595, -0.00010799778101500124, -0.018975982442498207, -5.722029527532868e-06, -0.0011176775442436337, -0.00032634177478030324, -0.00023982033599168062, -0.001077905297279358, -0.00045849301386624575, -0.0002643712505232543, -4.529942543740617e-06, -0.0008937893435359001, -0.0012715120101347566, -0.0011400636285543442, -0.0003649522550404072, -0.001035749795846641, -0.021393487229943275, -0.001725257490761578, -0.00042798896902240813, -0.0004477690381463617, -0.002781572053208947, -0.00042822727118618786, -0.00016258825780823827, -0.0007005859515629709, -1.367513656616211, -1.381070613861084, -1.2286983728408813, -0.07885096967220306, -1.729494571685791, -0.017361216247081757, -0.27520546317100525, -0.02652556821703911, -0.1265292912721634, -0.006344178691506386, -0.011437678709626198, -0.005470069590955973, -0.00014995403762441128, -0.0009415484382770956, -0.0001510267611593008, -0.01125793531537056, -0.0020350953564047813, -0.03242667764425278, -2.4150502681732178, -2.6120967864990234, -0.12078070640563965, -0.04411414638161659, -0.3560982644557953, -0.01143520325422287, -0.002198899397626519, -0.0017547699389979243, -0.11383328586816788, -0.000681883015204221, -0.007606944534927607, -0.0023283057380467653, -0.0005938435206189752, -0.00038187362952157855, -0.0011323237558826804, -5.304672595229931e-05, -0.0013187768636271358, -8.415821503149346e-05, -0.0003680505615193397, -0.12257371842861176, -2.65639591217041, -2.0551838874816895, -0.2397802770137787, -0.03861275315284729, -0.6695529222488403, -1.611340045928955, -0.004214216023683548, -1.5323593616485596, -0.5275729894638062, -0.08396246284246445, -0.0007790867821313441, -0.09788580983877182, -0.1101967841386795, -0.09755931794643402, -0.007730803452432156, -0.003374716965481639, -0.023769192397594452, -0.0003079893649555743, -0.0009159421897493303, -0.0003756771038752049, -0.002646517474204302, -0.00029702542815357447, -0.001495434669777751, -2.8967437174287625e-05, -0.00010156115604331717, -0.016448846086859703, -0.00020668754586949944, -0.00856653694063425, -0.01351010613143444, -0.957256019115448, -0.003251981223002076, -0.0023035677149891853, -0.9184838533401489, -0.0030515079852193594, -0.001962641952559352, -1.7724361419677734, -0.1624062955379486, -0.02130865305662155, -0.04311489686369896, -0.0005222387262620032, -0.41060522198677063, -2.471369743347168, -1.2207231521606445, -1.6612571477890015, -2.738156795501709, -0.05268339812755585, -0.0002549561613705009, -2.546969175338745, -0.6159418821334839, -0.6152995228767395, -1.537243366241455, -0.03873569890856743, -0.024816326797008514, -0.01917855255305767, -0.8370310068130493, -0.7761383056640625, -0.026369532570242882, -2.6533756256103516, -0.17494750022888184, -0.00035494225448928773, -0.016026604920625687, -0.0013112765736877918, -1.7137086391448975, -0.0002079985715681687, -2.2998123168945312, -0.008292055688798428, -0.015671314671635628, -0.08649549633264542, -0.044350117444992065, -0.08579202741384506, -0.022224297747015953, -0.0017227584030479193, -0.16525956988334656, -2.820821762084961, -0.007104018237441778, -0.013768225908279419, -1.0098252296447754, -0.17886720597743988, -0.050576888024806976, -3.135155202471651e-05, -0.0006936766440048814, -0.009309690445661545, -0.48972442746162415], "finish_reason": "length"}], "metrics": {"energy": 266.1618152017595, "energy_per_token": 1.039694590631873, "time": 11.144155, "time_per_token": 0.04353185546875}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise TypeError('Invalid input type. Expected a pandas DataFrame.')\n\n    if not (df.empty or df.columns == [col1, col2]):\n        raise ValueError('Invalid columns. Input DataFrame does not have the specified column names.')\n\n    if df[col1].nunique() == 1 or df[col2].nunique() == 1:\n        raise TypeError('Input DataFrame contains non-numeric data.')\n\n    sns.scatterplot(x=col1, y=col2, data=df)\n    return plt.gca()", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Type", "Error", "('", "Invalid", " input", " type", ".", " Expected", " a", " pandas", " Data", "Frame", ".", "')", "\n", "\n", "    ", "if", " not", " (", "df", ".", "empty", " or", " df", ".", "columns", " ==", " [", "col", "1", ",", " col", "2", "]", "):", "\n", "        ", "raise", " Value", "Error", "('", "Invalid", " columns", ".", " Input", " Data", "Frame", " does", " not", " have", " the", " specified", " column", " names", ".", "')", "\n", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "nun", "ique", "()", " ==", " ", "1", " or", " df", "[", "col", "2", "]", ".", "nun", "ique", "()", " ==", " ", "1", ":", "\n", "        ", "raise", " Type", "Error", "('", "Input", " Data", "Frame", " contains", " non", "-", "numeric", " data", ".", "')", "\n", "\n", "    ", "s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "def"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -1.295313835144043, -6.0794889577664435e-05, -1.8022996187210083, -3.547758102416992, -0.7900250554084778, -2.2168331146240234, -0.6738271117210388, -1.2296507358551025, -1.3364051580429077, -1.0559871196746826, -0.07423653453588486, -0.007583519909530878, -0.18580853939056396, -0.009433574974536896, -0.0013081812066957355, -1.0975773334503174, -0.000271521887043491, -0.08856747299432755, -1.0035536289215088, -3.243515729904175, -0.5920829772949219, -0.1323806792497635, -0.9192255735397339, -0.04587603360414505, -1.098703145980835, -0.6940485835075378, -0.155301034450531, -3.1002373695373535, -0.13377037644386292, -0.01508929580450058, -0.0006255338666960597, -0.010048044845461845, -0.006843580398708582, -0.00016342257731594145, -0.13130448758602142, -0.04413136839866638, -0.013392489403486252, -0.0009709649602882564, -0.023223550990223885, -0.013704848475754261, -4.768360213347478e-06, -0.17365679144859314, -0.8574041128158569, -2.0481109619140625, -0.2869639992713928, -3.1481423377990723, -0.4535052478313446, -0.003170941025018692, -1.6918705701828003, -0.0011456600623205304, -2.0730347633361816, -0.2297665774822235, -0.21837881207466125, -2.1324148178100586, -0.2405153512954712, -0.05370623990893364, -0.007015950512140989, -0.0004009396652691066, -0.018589794635772705, -0.0005327236140146852, -0.39411893486976624, -0.606863260269165, -0.6975765824317932, -0.009356695227324963, -0.015785494819283485, -0.003196252044290304, -0.0010925520909950137, -2.276381492614746, -0.03752819076180458, -0.0046080113388597965, -1.254957914352417, -0.07054018974304199, -0.2553206980228424, -0.3540292978286743, -0.01313062570989132, -0.006383505184203386, -8.868777513271198e-05, -0.0995311513543129, -5.1973900554003194e-05, -0.00013851160474587232, -0.004639456048607826, -0.0011046981671825051, -0.00014280252798926085, -0.0033337275963276625, -0.002057222882285714, -0.0009151084814220667, -0.026977980509400368, -0.012238879688084126, -0.0023172451183199883, -0.06008525937795639, -0.40428027510643005, -6.842378934379667e-05, -0.10516645759344101, -1.4417675733566284, -0.7614228129386902, -0.006925152149051428, -1.0141141414642334, -0.7812903523445129, -0.007301195524632931, -0.1114264503121376, -0.1613769680261612, -0.17606773972511292, -0.11107266694307327, -0.0020615055691450834, -0.03184901922941208, -0.0005515484372153878, -1.6114696264266968, -0.0016404041089117527, -0.005724227987229824, -0.36823952198028564, -0.0011093420907855034, -0.004836289677768946, -0.7489609122276306, -0.013300973922014236, -0.10756462812423706, -0.0003499372396618128, -0.00014709345123264939, -0.012493795715272427, -0.0001934579631779343, -5.972207145532593e-05, -8.606540359323844e-05, -0.0007458527106791735, -0.10165515542030334, -0.0015034097013995051, -0.0003644755925051868, -0.4102626442909241, -0.02376721426844597, -0.13484318554401398, -1.2668297290802002, -0.16099444031715393, -0.03456297516822815, -0.01049688272178173, -0.1813458949327469, -0.002016893122345209, -0.6808145046234131, -0.02855564095079899, -1.14907705783844], "finish_reason": "stop"}], "metrics": {"energy": 168.2760376186372, "energy_per_token": 1.1218402507909147, "time": 6.3215904, "time_per_token": 0.042143936}}
{"outputs": [{"text": "# Check if the input df is a DataFrame\n    if not isinstance(df, pd.DataFrame):\n        raise ValueError(\n            \"The input df is not a DataFrame, please check the input and try again\"\n        )\n\n    # Check if the df is empty\n    if df.empty:\n        raise ValueError(\n            \"The input df is empty, please check the input and try again\"\n        )\n\n    # Check if the df contains the specified columns\n    if not set(df.columns) >= {col1, col2}:\n        raise ValueError(\n            \"The input df does not contain the specified columns, please check the input and try again\"\n        )\n\n    # Check if the df contains non-numerical data\n    if df[col1].apply(pd.core.common._maybe_get_numeric_type).any():\n        raise TypeError(\n            \"The input df contains non-numerical data, please check the input and try again\"\n        )\n\n    # Check if the df contains non-numerical data\n    if df[col2].apply(pd.core.", "tokens": ["#", " Check", " if", " the", " input", " df", " is", " a", " Data", "Frame", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\n", "            ", "\"", "The", " input", " df", " is", " not", " a", " Data", "Frame", ",", " please", " check", " the", " input", " and", " try", " again", "\"", "\n", "        ", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " df", " is", " empty", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\n", "            ", "\"", "The", " input", " df", " is", " empty", ",", " please", " check", " the", " input", " and", " try", " again", "\"", "\n", "        ", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " df", " contains", " the", " specified", " columns", "\n", "    ", "if", " not", " set", "(", "df", ".", "columns", ")", " >=", " {", "col", "1", ",", " col", "2", "}:", "\n", "        ", "raise", " Value", "Error", "(", "\n", "            ", "\"", "The", " input", " df", " does", " not", " contain", " the", " specified", " columns", ",", " please", " check", " the", " input", " and", " try", " again", "\"", "\n", "        ", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " df", " contains", " non", "-", "n", "umerical", " data", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "apply", "(", "pd", ".", "core", ".", "common", ".", "_", "maybe", "_", "get", "_", "numeric", "_", "type", ")", ".", "any", "():", "\n", "        ", "raise", " Type", "Error", "(", "\n", "            ", "\"", "The", " input", " df", " contains", " non", "-", "n", "umerical", " data", ",", " please", " check", " the", " input", " and", " try", " again", "\"", "\n", "        ", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " df", " contains", " non", "-", "n", "umerical", " data", "\n", "    ", "if", " df", "[", "col", "2", "]", ".", "apply", "(", "pd", ".", "core", "."], "logprobs": [-1.935333490371704, -1.4994406700134277, -0.9041470289230347, -1.1783649921417236, -0.1582842320203781, -0.5349088311195374, -0.007462246343493462, -0.2182575911283493, -0.12273779511451721, -0.0028250806499272585, -0.47741934657096863, -0.0021525088232010603, -0.011071793735027313, -0.03963300958275795, -0.01738675683736801, -0.00014649749209638685, -0.001644212519749999, -0.00038580605178140104, -0.021514950320124626, -7.629365427419543e-06, -0.16150152683258057, -0.04941151663661003, -0.001261987374164164, -0.001369134639389813, -0.010923822410404682, -0.28002500534057617, -3.9934315282152966e-05, -0.1442863941192627, -2.609318733215332, -0.005384229123592377, -0.523402214050293, -1.0529636144638062, -0.1941063553094864, -0.6485390663146973, -0.5773389935493469, -0.02064349874854088, -0.027508705854415894, -0.15822134912014008, -0.00708898575976491, -2.176600694656372, -0.853282630443573, -0.7069367170333862, -0.9508101940155029, -1.0277678966522217, -3.0640013217926025, -0.21212072670459747, -0.011553286574780941, -1.2655131816864014, -1.8527470827102661, -0.01036074198782444, -7.652943895664066e-05, -0.0014399646315723658, -0.4293023347854614, -0.0011068414896726608, -0.08519305288791656, -0.13376088440418243, -0.10751719772815704, -0.214268296957016, -1.6308703422546387, -0.19193053245544434, -0.08154046535491943, -0.13504202663898468, -0.001392943668179214, -0.014275451190769672, -0.7362228035926819, -0.005148841999471188, -0.03928956389427185, -0.01609581708908081, -0.003172842552885413, -0.0003700763627421111, -0.033439308404922485, -0.009477385319769382, -3.4927710657939315e-05, -0.004512128420174122, -1.0066062211990356, -0.0004450284468475729, -0.023609815165400505, -0.102073535323143, -0.26672273874282837, -0.14185242354869843, -0.04649924486875534, -0.05832024663686752, -0.04846729338169098, -0.04912123829126358, -0.022627031430602074, -0.03579189255833626, -0.18019463121891022, -0.04359912499785423, -0.003146223723888397, -0.0010145523119717836, -0.02303251624107361, -0.010668505914509296, -0.0007022537174634635, -3.135155202471651e-05, -0.0002366024418734014, -0.028680291026830673, -0.0009342834819108248, -0.047062475234270096, -0.09797779470682144, -0.10288105905056, -0.2759439945220947, -0.6728342175483704, -0.6747909188270569, -0.11940931528806686, -0.10803618282079697, -0.07162661105394363, -0.03117651306092739, -0.0018134353449568152, -0.13963161408901215, -1.076529860496521, -2.091515302658081, -0.33669042587280273, -1.2417001724243164, -0.020955702289938927, -0.01041147205978632, -0.09655115753412247, -1.705570936203003, -0.810933530330658, -0.007281668949872255, -0.0005491655902005732, -0.00082923355512321, -0.0011117237154394388, -0.00017093151109293103, -0.002166782971471548, -0.0018148632952943444, -0.001053493469953537, -0.02502387762069702, -0.015023654326796532, -1.7404405298293568e-05, -0.0007074952009133995, -0.07571335136890411, -0.0005796659388579428, -0.33868101239204407, -0.10013529658317566, -0.3828149139881134, -0.04728592932224274, -0.16298344731330872, -0.0012463905150070786, -0.030806683003902435, -0.02694525755941868, -0.017569968476891518, -0.06432028114795685, -0.08664308488368988, -0.05405120924115181, -0.013568908907473087, -0.03865530341863632, -0.02633458375930786, -0.01178363710641861, -0.000842692912556231, -0.0008976006065495312, -0.03212542086839676, -0.005195093806833029, -0.0015422129072248936, -5.3881147323409095e-05, -0.0002849888114724308, -0.018972473219037056, -0.001190549461171031, -0.07991861552000046, -0.14118634164333344, -0.08273595571517944, -0.2124614268541336, -0.21497370302677155, -0.7616403102874756, -0.24925152957439423, -0.03854760527610779, -2.7319326400756836, -0.04763982445001602, -0.1634497344493866, -0.07292155921459198, -0.002494083484634757, -0.1325770914554596, -0.4027993679046631, -0.2838289439678192, -0.015395139344036579, -0.0036770368460565805, -0.0018497277051210403, -0.0005706112715415657, -1.6685324907302856, -0.0009856133256107569, -0.489331990480423, -0.00018654513405635953, -1.7716599702835083, -5.519237674889155e-05, -0.3064647614955902, -0.07909276336431503, -1.6418123245239258, -2.8734750747680664, -0.0011828100541606545, -0.3939674198627472, -0.0015397133538499475, -0.37900057435035706, -0.444227933883667, -1.5154527425765991, -0.011353055946528912, -0.11240684241056442, -2.3417413234710693, -0.832604169845581, -0.0034300799015909433, -0.0025305887684226036, -0.027375556528568268, -0.019876351580023766, -5.030505417380482e-05, -0.0038138525560498238, -0.31495562195777893, -0.0009455977124162018, -0.07240420579910278, -0.06310983747243881, -0.44127923250198364, -0.03508278727531433, -0.08698299527168274, -0.006011500488966703, -0.0016739654820412397, -0.04831623286008835, -0.005524486768990755, -0.004424663260579109, -0.0366811640560627, -0.010708488523960114, -0.16216517984867096, -0.03388906642794609, -0.11843089759349823, -0.018616357818245888, -0.0020272433757781982, -0.0005571481888182461, -0.02134891226887703, -0.002904009073972702, -0.0016374287661165, -0.0003190723655279726, -0.0007874249131418765, -0.044920146465301514, -0.001122202374972403, -0.3910047709941864, -1.195495843887329, -0.053801361471414566, -0.08048775792121887, -0.10869413614273071, -0.06727057695388794, -0.11032084375619888, -0.0009243983076885343, -0.013361083343625069, -0.0018362818518653512, -0.0014966250164434314, -0.01752428710460663, -0.004172073677182198, -0.01795245334506035, -0.011398550122976303, -0.0021261009387671947, -0.00024101213784888387, -0.08643262833356857, -8.201262971851975e-05, -0.0001209901092806831, -0.0020487764850258827, -5.400034933700226e-05, -0.0017308506648987532, -0.00013136000779923052, -6.675497570540756e-05, -1.1920928244535389e-07], "finish_reason": "length"}], "metrics": {"energy": 277.5318286857601, "energy_per_token": 1.0841087058037504, "time": 11.146183, "time_per_token": 0.04353977734375}}
{"outputs": [{"text": "df = df.copy()\n    if df.shape == (0, 0) or df.empty:\n        raise ValueError(\"Empty DataFrame\")\n    if not df.columns.isin([col1, col2]).all():\n        raise ValueError(\"Input columns missing from the DataFrame\")\n    if df[col1].dtype == object or df[col2].dtype == object:\n        raise TypeError(\"Input column(s) is of non-numeric type\")\n    sns.regplot(x=col1, y=col2, data=df, color=\"C0\")\n    return plt.gca()", "tokens": ["df", " =", " df", ".", "copy", "()", "\n", "    ", "if", " df", ".", "shape", " ==", " (", "0", ",", " ", "0", ")", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Empty", " Data", "Frame", "\"", ")", "\n", "    ", "if", " not", " df", ".", "columns", ".", "isin", "([", "col", "1", ",", " col", "2", "])", ".", "all", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " columns", " missing", " from", " the", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "d", "type", " ==", " object", " or", " df", "[", "col", "2", "]", ".", "d", "type", " ==", " object", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " column", "(", "s", ")", " is", " of", " non", "-", "numeric", " type", "\"", ")", "\n", "    ", "s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ",", " color", "=", "\"", "C", "0", "\"", ")", "\n", "    ", "return", " plt", ".", "g", "ca", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.2964537143707275, -0.3175926208496094, -0.5435413718223572, -0.16100002825260162, -0.5242772102355957, -0.03395163640379906, -0.12769876420497894, -0.4077783524990082, -0.4009455442428589, -1.9191447496414185, -0.10225080698728561, -2.560551881790161, -1.2484110593795776, -0.0051805065013468266, -0.03709350898861885, -0.004849339369684458, -0.5092133283615112, -0.02550056017935276, -1.2200191020965576, -0.005246798042207956, -1.2474972009658813, -0.3044252097606659, -0.9155543446540833, -0.2602613568305969, -0.014491193927824497, -0.0014980534324422479, -0.07531043887138367, -0.019608933478593826, -3.814624506048858e-05, -0.27834415435791016, -0.1572975218296051, -1.4805824756622314, -0.9109100699424744, -0.0449274405837059, -1.044014573097229, -0.00037353215157054365, -0.004177178256213665, -0.2525506019592285, -0.25832533836364746, -0.6509228944778442, -1.396485686302185, -0.12917910516262054, -0.5926820635795593, -0.0447954498231411, -0.24358585476875305, -0.036218173801898956, -0.0016777737764641643, -0.0006622266955673695, -0.004669001325964928, -0.014252652414143085, -0.00037853704998269677, -0.01107768900692463, -0.0006328010931611061, -0.09997501969337463, -0.01389614399522543, -0.007446272298693657, -0.0008657997823320329, -0.0272948257625103, -0.04838881269097328, -9.762764238985255e-05, -0.017655590549111366, -0.36995330452919006, -3.184990882873535, -2.7037694454193115, -3.372058868408203, -2.184386968612671, -2.17218017578125, -0.15511363744735718, -0.00305459788069129, -0.16872908174991608, -0.0007316772826015949, -0.0018820922123268247, -0.3225991725921631, -0.2850073277950287, -0.6247738599777222, -0.3010576665401459, -0.005821653641760349, -0.008008630946278572, -0.002615723293274641, -0.0012198395561426878, -0.2689811587333679, -0.3705618977546692, -1.586291790008545, -0.9347777366638184, -0.15014640986919403, -0.0036834506317973137, -0.0008437649230472744, -0.00010406429646536708, -0.019322149455547333, -3.8265450712060556e-05, -3.790783375734463e-05, -0.00016449528629891574, -0.002949414076283574, -0.00135996809694916, -0.001320919836871326, -0.012584090232849121, -0.004839611239731312, -0.002316888188943267, -0.013175451196730137, -0.006078803446143866, -0.00014435203047469258, -0.05376317724585533, -0.06075263023376465, -1.242026686668396, -2.829813003540039, -1.502456545829773, -0.0004825619689654559, -0.003238554112613201, -2.620607614517212, -2.719020366668701, -0.7209460139274597, -0.016729537397623062, -0.16094329953193665, -0.48340731859207153, -0.20561303198337555, -0.0020598401315510273, -0.005509786307811737, -0.22472786903381348, -1.9149562120437622, -0.0025217896327376366, -0.007817861624062061, -1.146622657775879, -0.002408343832939863, -0.001690983772277832, -0.3883908689022064, -0.011124138720333576, -0.061094168573617935, -0.0008442413527518511, -0.00018451895448379219, -0.011719780042767525, -0.00035553809721022844, -0.00012015574611723423, -0.00012933371181134135, -0.0003270567976869643, -0.09305959939956665, -0.001474485034123063, -0.0006985607906244695, -0.8750144839286804, -3.9354748725891113, -0.6489514708518982, -0.07172836363315582, -4.200348854064941, -0.4227685332298279, -0.0006268443539738655, -0.858866274356842, -0.06176378205418587, -0.0341317281126976, -0.2617652416229248, -0.1594482809305191, -0.03444965183734894, -0.005719960667192936, -0.082085520029068, -0.0017973711946979165, -1.2535321712493896, -7.152555099310121e-07, -9.536738616588991e-07, -9.440929716220126e-05, -0.00027783826226368546, -0.09949899464845657], "finish_reason": "stop"}], "metrics": {"energy": 190.61224971389777, "energy_per_token": 1.198819180590552, "time": 6.738703, "time_per_token": 0.042381779874213835}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"df should be a DataFrame\")\n    if df.empty:\n        raise ValueError(\"df is empty\")\n    if col1 not in df.columns:\n        raise ValueError(\"col1 should be a column in df\")\n    if col2 not in df.columns:\n        raise ValueError(\"col2 should be a column in df\")\n    if df[col1].dtype == np.object_ or df[col1].dtype == np.bool_:\n        raise TypeError(\"df[col1] should contain numeric data\")\n    if df[col2].dtype == np.object_ or df[col2].dtype == np.bool_:\n        raise TypeError(\"df[col2] should contain numeric data\")\n    return sns.regplot(x=col1, y=col2, data=df, order=1)", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " should", " be", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " is", " empty", "\"", ")", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "col", "1", " should", " be", " a", " column", " in", " df", "\"", ")", "\n", "    ", "if", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "col", "2", " should", " be", " a", " column", " in", " df", "\"", ")", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "d", "type", " ==", " np", ".", "object", "_", " or", " df", "[", "col", "1", "]", ".", "d", "type", " ==", " np", ".", "bool", "_", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "df", "[", "col", "1", "]", " should", " contain", " numeric", " data", "\"", ")", "\n", "    ", "if", " df", "[", "col", "2", "]", ".", "d", "type", " ==", " np", ".", "object", "_", " or", " df", "[", "col", "2", "]", ".", "d", "type", " ==", " np", ".", "bool", "_", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "df", "[", "col", "2", "]", " should", " contain", " numeric", " data", "\"", ")", "\n", "    ", "return", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ",", " order", "=", "1", ")", "\n", "\n", "def"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -0.2563993036746979, -1.7203705310821533, -1.944706916809082, -0.011875644326210022, -0.13598519563674927, -0.6175236701965332, -0.012473664246499538, -0.4825129210948944, -0.0002858230145648122, -0.0024506794288754463, -0.16061899065971375, -0.16551752388477325, -0.9435275793075562, -0.007344507612287998, -0.03433021157979965, -0.1096377894282341, -0.003407863900065422, -0.0004439560289029032, -0.01138770766556263, -0.004148687236011028, -6.615896563744172e-05, -0.004466557409614325, -0.008354594931006432, -0.05124077945947647, -1.0599769353866577, -0.01366498600691557, -0.029950931668281555, -6.532455881824717e-05, -0.0002803409588523209, -0.08087693154811859, -0.09247703105211258, -2.27675724029541, -0.003706966992467642, -0.02314399555325508, -8.082063141046092e-05, -0.007221903186291456, -0.36116987466812134, -0.007145208306610584, -0.7778680920600891, -0.0011698314920067787, -0.00044216870446689427, -0.0014030622551217675, -0.021611083298921585, -3.9457496313843876e-05, -0.005426913499832153, -1.1532649993896484, -0.3189789056777954, -0.0016430224059149623, -1.7854719161987305, -0.028181826695799828, -0.8914493918418884, -0.19023579359054565, -0.4578285217285156, -0.08525260537862778, -0.017886647954583168, -0.00024303820100612938, -0.0003122795606032014, -0.0026033578906208277, -0.006750043015927076, -0.010735731571912766, -0.00311782187782228, -0.0001559135998832062, -1.0132738680113107e-05, -0.00010513706365600228, -0.0003638797497842461, -3.766942609217949e-05, -0.0002806984703056514, -0.0007270314963534474, -0.00016807096835691482, -0.00014232576359063387, -0.00027259447961114347, -4.2676016164477915e-05, -0.0011380392825230956, -0.0004773192631546408, -0.0005490464391186833, -0.008521740324795246, -0.002314033918082714, -0.0007113072206266224, -0.0006423317245207727, -0.00037520044133998454, -0.00031740395934320986, -0.0005685858195647597, -0.0007229813490994275, -0.00024423000286333263, -0.0001699779968475923, -0.33305102586746216, -0.1924159824848175, -1.0982279777526855, -0.07649495452642441, -0.004195697605609894, -0.013888384215533733, -0.0007750368095003068, -0.0010626628063619137, -0.250314325094223, -0.20078381896018982, -1.570039987564087, -2.9649317264556885, -4.279521817807108e-05, -1.0223088264465332, -0.7159764170646667, -0.5369663238525391, -0.007097626570612192, -0.0008453133050352335, -0.00011801023356383666, -1.1905412673950195, -0.0004884004010818899, -0.001081834896467626, -0.031055524945259094, -0.011419293470680714, -0.03454650938510895, -0.10580871254205704, -0.0006157647585496306, -1.449107050895691, -0.0030265499372035265, -0.16984693706035614, -0.010401444509625435, -0.0021548878867179155, -0.03156445547938347, -0.013560794293880463, -0.00024577934527769685, -0.03094607964158058, -0.05503316596150398, -0.6427748799324036, -0.6703123450279236, -0.012950362637639046, -0.0020449694711714983, -0.003788794856518507, -0.48671025037765503, -2.1584341526031494, -0.4401368796825409, -0.14497578144073486, -0.09608400613069534, -0.0006490031373687088, -0.0018446111353114247, -0.01213277317583561, -0.01749640703201294, -0.004158896394073963, -0.0005837167263962328, -2.3603161025675945e-05, -0.0040635643526911736, -1.5735502529423684e-05, -6.389413465512916e-05, -0.00014959646796341985, -2.6225699912174605e-05, -0.0014888879377394915, -0.00018475732940714806, -0.00010942813969450071, -0.0002775999018922448, -6.270212179515511e-05, -0.002113253576681018, -0.0003685271949507296, -0.0002862997353076935, -4.6967357775429264e-05, -0.007863753475248814, -5.722029527532868e-06, -2.3841830625315197e-06, -5.566918844124302e-05, -0.00019810620869975537, -0.00018976318824570626, -0.000379132863599807, -6.365573790390044e-05, -9.119095193454996e-05, -5.793403761344962e-05, -0.0018760239472612739, -0.00039295581518672407, -0.00034683887497521937, -0.0005650115781463683, -0.0002899941464420408, -1.847726889536716e-05, -0.000164018536452204, -0.00018070495571009815, -0.0008420973899774253, -0.0002512616047170013, -7.366862701019272e-05, -0.01996002346277237, -0.00015043080202303827, -0.0005847889697179198, -0.0008741371566429734, -0.00021431533969007432, -6.639736966462806e-05, -0.0004167880106251687, -0.0002636561985127628, -0.001258891774341464, -0.37267398834228516, -1.4627450704574585, -0.02681528404355049, -6.198863957251888e-06, -0.00011312322021694854, -0.633089005947113, -0.005053604021668434, -0.0008073169738054276, -0.48986905813217163, -0.01623610593378544, -0.03761189058423042, -0.0009990707039833069, -0.0001971527235582471, -0.015962783247232437, -0.00024077377747744322, -0.00010561384988250211, -0.00012206286191940308, -0.0023535192012786865, -0.060937825590372086, -0.0008039817912504077, -0.00037222131504677236, -1.4267942905426025, -2.279726982116699, -0.01576249673962593, -1.2421780824661255, -0.8906266093254089, -0.28253135085105896, -0.05722714215517044, -0.8343629240989685], "finish_reason": "stop"}], "metrics": {"energy": 243.36962402153003, "energy_per_token": 1.0674106316733774, "time": 9.873144, "time_per_token": 0.043303263157894734}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"The input 'df' is not a DataFrame.\")\n    elif not len(df.columns):\n        raise ValueError(\"The input 'df' is empty.\")\n    elif not isinstance(col1, str):\n        raise ValueError(\"The input 'col1' is not a string.\")\n    elif not isinstance(col2, str):\n        raise ValueError(\"The input 'col2' is not a string.\")\n    elif col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(\"One or more input columns are not in the DataFrame.\")\n    elif not df[col1].dtype.is_numeric_type():\n        raise TypeError(\"The 'df' DataFrame uses non-numeric data in the column.\")\n\n    return sns.regplot(x=col1, y=col2, data=df)", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " '", "df", "'", " is", " not", " a", " Data", "Frame", ".", "\"", ")", "\n", "    ", "elif", " not", " len", "(", "df", ".", "columns", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " '", "df", "'", " is", " empty", ".", "\"", ")", "\n", "    ", "elif", " not", " isinstance", "(", "col", "1", ",", " str", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " '", "col", "1", "'", " is", " not", " a", " string", ".", "\"", ")", "\n", "    ", "elif", " not", " isinstance", "(", "col", "2", ",", " str", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " '", "col", "2", "'", " is", " not", " a", " string", ".", "\"", ")", "\n", "    ", "elif", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "One", " or", " more", " input", " columns", " are", " not", " in", " the", " Data", "Frame", ".", "\"", ")", "\n", "    ", "elif", " not", " df", "[", "col", "1", "]", ".", "d", "type", ".", "is", "_", "numeric", "_", "type", "():", "\n", "        ", "raise", " Type", "Error", "(", "\"", "The", " '", "df", "'", " Data", "Frame", " uses", " non", "-", "numeric", " data", " in", " the", " column", ".", "\"", ")", "\n", "\n", "    ", "return", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "\n", "if"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -0.2563993036746979, -1.8497402667999268, -0.14106346666812897, -3.0422239303588867, -0.004763564094901085, -0.0007880204357206821, -1.0173588991165161, -0.020740415900945663, -0.029694756492972374, -0.19886662065982819, -0.007566246669739485, -0.4846855700016022, -0.021724354475736618, -0.00025519452174194157, -0.0030352259054780006, -0.22328497469425201, -1.874669075012207, -1.1345632076263428, -1.694967269897461, -0.0003951007383875549, -0.0038517348002642393, -1.5319780111312866, -0.28880682587623596, -0.42727160453796387, -0.01426699012517929, -0.0008693729760125279, -0.006514384411275387, -0.004781716503202915, -5.6980417866725475e-05, -0.005882570054382086, -0.045455217361450195, -0.07239510864019394, -0.1532859355211258, -0.16848817467689514, -0.0013733012601733208, -0.0005920564290136099, -0.17618538439273834, -0.051854319870471954, -0.12847286462783813, -0.004001706372946501, -0.00010895135346800089, -0.0007676515378989279, -0.06002575904130936, -0.15304455161094666, -0.6823077201843262, -1.190400242805481, -0.000403084559366107, -0.3965061604976654, -0.0016350485384464264, -0.0021036178804934025, -0.011987903155386448, -1.1447575092315674, -0.0027499499265104532, -0.0008101756684482098, -0.006202969700098038, -1.4631093740463257, -1.728519782773219e-05, -0.011184142902493477, -0.12054994702339172, -0.09785576164722443, -0.10191776603460312, -0.01794273406267166, -0.002898303559049964, -0.0015043619787320495, -0.0006342306733131409, -0.019450528547167778, -0.013690267689526081, -0.017811352387070656, -0.06391330808401108, -0.016428090631961823, -0.0023941919207572937, -0.00013445904187392443, -0.00033885458833537996, -0.0029580905102193356, -0.009562049061059952, -0.06940442323684692, -0.0899750366806984, -0.00011503035057103261, -0.00033301531220786273, -0.0012904420727863908, -5.0424259825376794e-05, -0.0005026984144933522, -0.0012296028435230255, -0.0003979606262873858, -0.00027056847466155887, -5.507317473529838e-05, -0.0005634627304971218, -7.509902934543788e-05, -0.0002195594133809209, -0.00014828535495325923, -0.0004654039512388408, -0.00033802041434682906, -0.0003532739356160164, -0.00012790338951162994, -0.01294200774282217, -0.0003817544784396887, -0.0002320735511602834, -0.00015424491721205413, -0.00042632073746062815, -0.0003389737685211003, -0.001261273049749434, -0.00021920185827184469, -0.00011753345461329445, -0.00026842328952625394, -0.17012472450733185, -0.18335182964801788, -2.79134464263916, -0.025602003559470177, -0.04648604616522789, -0.0001641377166379243, -0.02636105753481388, -0.07850299030542374, -0.00408101687207818, -0.8006504774093628, -0.005959717091172934, -0.006330437492579222, -0.00016592556494288146, -5.447716102935374e-05, -0.0002112165529979393, -0.0005357022164389491, -0.00013445904187392443, -0.009235636331140995, -0.0011116046225652099, -0.0008339979685842991, -0.012307531200349331, -0.015242405235767365, -3.2186455882765586e-06, -0.006941015832126141, -0.6220538020133972, -2.336481809616089, -0.48014917969703674, -0.9132012724876404, -2.092970371246338, -0.3423934876918793, -0.7428140640258789, -0.182056725025177, -1.3975948095321655, -0.1542229801416397, -0.526093065738678, -0.0024807651061564684, -0.042113617062568665, -0.010642086155712605, -0.0003906917118001729, -0.0005830018781125546, -0.1437930166721344, -0.19979073107242584, -0.7555351257324219, -0.703162670135498, -0.17450156807899475, -0.005886006634682417, -0.012012049555778503, -0.0015167410019785166, -8.77341881277971e-05, -0.9469642043113708, -0.28364869952201843, -0.028323790058493614, -1.6321768760681152, -0.015796173363924026, -0.1170201227068901, -0.07747950404882431, -0.16927865147590637, -0.6778200268745422, -0.005240394733846188, -0.002228159923106432, -0.008069531992077827, -0.01894674077630043, -7.414542778860778e-05, -0.0211897324770689, -0.12440404295921326, -0.41332611441612244, -2.2348403930664062, -2.5603935718536377, -0.28015637397766113, -1.4918043613433838, -0.004112715367227793, -2.9871253967285156, -0.013792917132377625, -0.004072231240570545, -0.03391061723232269, -0.08885110914707184, -1.8012583255767822, -0.6148481965065002, -2.5517117977142334, -3.325040102005005, -0.026494571939110756, -0.005686535034328699, -0.007276935037225485, -1.621107578277588, -0.00183271209243685, -1.4181843996047974, -0.024793999269604683, -5.8412379075889476e-06, -0.00011240804451517761, -0.6964215040206909, -0.007637348957359791, -0.0012980615720152855, -0.5705778002738953, -0.023799574002623558, -0.0495038703083992, -0.002142635639756918, -0.000248401309363544, -0.021459178999066353, -0.00039843725971877575, -0.00013350549852475524, -0.00017391123401466757, -0.0029377657920122147, -0.0661366730928421, -0.001416156766936183, -0.0007913556764833629, -0.691209077835083, -0.37019339203834534, -0.03532837703824043, -1.230778694152832], "finish_reason": "stop"}], "metrics": {"energy": 248.82816930389401, "energy_per_token": 1.0865858921567424, "time": 9.875437, "time_per_token": 0.04312417903930131}}
{"outputs": [{"text": "# check if df is a DataFrame\n    if not isinstance(df, pd.DataFrame):\n        raise TypeError(\"Input must be a pandas DataFrame\")\n\n    # check if df is empty\n    if df.empty:\n        raise ValueError(\"DataFrame is empty\")\n\n    # check if col1 and col2 are valid columns\n    if col1 not in df.columns:\n        raise ValueError(\"Invalid column: \" + col1)\n    if col2 not in df.columns:\n        raise ValueError(\"Invalid column: \" + col2)\n\n    # check if df is numeric\n    if df[col1].dtype != np.dtype('float'):\n        raise TypeError(\"Data must be numeric\")\n\n    if df[col2].dtype != np.dtype('float'):\n        raise TypeError(\"Data must be numeric\")\n\n    # check if the column names are valid\n    valid_col_names = ['X', 'Y']\n    if col1 not in valid_col_names:\n        raise ValueError(", "tokens": ["#", " check", " if", " df", " is", " a", " Data", "Frame", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "#", " check", " if", " df", " is", " empty", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Data", "Frame", " is", " empty", "\"", ")", "\n", "\n", "    ", "#", " check", " if", " col", "1", " and", " col", "2", " are", " valid", " columns", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " column", ":", " \"", " +", " col", "1", ")", "\n", "    ", "if", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " column", ":", " \"", " +", " col", "2", ")", "\n", "\n", "    ", "#", " check", " if", " df", " is", " numeric", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "d", "type", " ", "!", "=", " np", ".", "d", "type", "('", "float", "')", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Data", " must", " be", " numeric", "\"", ")", "\n", "\n", "    ", "if", " df", "[", "col", "2", "]", ".", "d", "type", " ", "!", "=", " np", ".", "d", "type", "('", "float", "')", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Data", " must", " be", " numeric", "\"", ")", "\n", "\n", "    ", "#", " check", " if", " the", " column", " names", " are", " valid", "\n", "    ", "valid", "_", "col", "_", "names", " =", " ['", "X", "'", ",", " '", "Y", "']", "\n", "    ", "if", " col", "1", " not", " in", " valid", "_", "col", "_", "names", ":", "\n", "        ", "raise", " Value", "Error", "("], "logprobs": [-1.935333490371704, -2.4194178581237793, -0.9907452464103699, -1.0640957355499268, -0.03826471045613289, -0.45756104588508606, -0.3919794261455536, -0.012407496571540833, -0.3720499277114868, -0.0020449694711714983, -0.025168847292661667, -0.05137497931718826, -0.021212607622146606, -0.00021479207498487085, -0.0017514378996565938, -0.00046135272714309394, -0.023173581808805466, -9.65590606938349e-06, -0.13672535121440887, -0.04600025340914726, -0.0017303746426478028, -0.0016632545739412308, -0.015354521572589874, -1.5061941146850586, -2.8609820219571702e-05, -0.17853140830993652, -0.22345583140850067, -1.079927682876587, -1.3921287059783936, -0.0021324055269360542, -0.03418736904859543, -1.174619436264038, -0.09170576184988022, -0.006858616601675749, -0.7954039573669434, -0.00034850722295232117, -0.0027626703958958387, -0.45392584800720215, -0.0015562577173113823, -0.070808544754982, -0.10701454430818558, -0.0566750168800354, -0.279771089553833, -0.0717504471540451, -0.09226638823747635, -0.04218184947967529, -0.0003496989083942026, -0.004316418431699276, -0.9826088547706604, -0.0024114358238875866, -0.023317307233810425, -0.008524931967258453, -0.0023912189062684774, -0.00034231049357913435, -0.033593785017728806, -0.060568299144506454, -7.629365427419543e-06, -0.007938619703054428, -0.006751937326043844, -2.232964515686035, -1.459843635559082, -0.27176403999328613, -0.0011843579122796655, -0.04120148345828056, -7.629103492945433e-05, -0.00033146608620882034, -0.008211660198867321, -0.000532842765096575, -0.02408682182431221, -0.06285205483436584, -0.040743790566921234, -1.1663358211517334, -0.014079879969358444, -0.10692210495471954, -0.0009139174944721162, -0.0014785320963710546, -0.410249263048172, -1.2765861749649048, -1.0260231494903564, -0.18435601890087128, -0.000427274004323408, -0.046023931354284286, -0.44172102212905884, -0.0007812308613210917, -0.002183317206799984, -1.3232143828645349e-05, -0.005750422365963459, -0.10231494903564453, -0.0024403335992246866, -0.8536630272865295, -0.0005162813467904925, -0.0003968881501350552, -0.006070627830922604, -0.11734647303819656, -3.635817120084539e-05, -0.007546488661319017, -1.2316224575042725, -1.1699645519256592, -0.04590928182005882, -1.850492000579834, -1.0832087993621826, -0.12389075011014938, -0.20174095034599304, -0.0003887851198669523, -0.0378885418176651, -0.00015245705435518175, -0.07244522869586945, -0.25130152702331543, -0.0008569859201088548, -0.0005528590409085155, -3.1709168979432434e-05, -5.006777428206988e-06, -5.531158240046352e-05, -0.0002584123576525599, -2.539125671319198e-05, -0.00017689094238448888, -0.00048196621355600655, -0.00012408917245920748, -9.023735765367746e-05, -0.0002632986579556018, -2.1815061700181104e-05, -0.0001911934232339263, -0.00031454383861273527, -0.00030989613151177764, -0.000226472009671852, -0.0006152882124297321, -0.00016592556494288146, -0.0009759668610058725, -0.0006179092451930046, -0.002768138889223337, -0.00030632095877081156, -0.0003331344632897526, -0.012254306115210056, -0.0010850501712411642, -0.0683147981762886, -0.20271137356758118, -0.049098651856184006, -0.19300104677677155, -2.294619083404541, -1.0341647863388062, -0.10968756675720215, -0.0017188312485814095, -0.14273256063461304, -0.6936074495315552, -0.1845206767320633, -0.005562659818679094, -0.003375786356627941, -0.0004741021548397839, -0.00019703354337252676, -0.22843405604362488, -0.27441057562828064, -1.042022466659546, -1.5258672647178173e-05, -5.590759246842936e-05, -1.574570655822754, -1.9192511899746023e-05, -1.2821077108383179, -0.001128513365983963, -1.0852981805801392, -0.32683736085891724, -1.893204927444458, -0.9400810599327087, -0.0038049458526074886, -0.00158565619494766, -0.030287999659776688, -0.009077706374228, -6.41325386823155e-05, -0.03861092031002045, -0.12894609570503235, -1.6807039976119995, -2.2176353931427, -0.010734552517533302, -0.02132452465593815, -0.20964978635311127, -0.0036454431246966124, -0.00710946274921298, -2.0749521255493164, -0.0006611545104533434, -1.5505690574645996, -0.033586982637643814, -0.0063256993889808655, -5.793403761344962e-05, -0.016726020723581314, -4.6132929128361866e-05, -8.308542601298541e-05, -0.0007774191326461732, -0.00013529339048545808, -0.006336953025311232, 0.0, -6.556489552167477e-06, -0.0006266061100177467, -0.0002416080387774855, -0.000607782625593245, -0.00011324241495458409, -0.001189835020340979, -0.004573598969727755, -0.00011169286881340668, -0.0012467476772144437, -0.001032177242450416, -0.0007335832342505455, -0.0004912600270472467, -0.00014530557382386178, -4.0531076592742465e-06, -0.0006094505661167204, -6.532455881824717e-05, -0.0012523435289040208, -0.0010727847693488002, -4.672895011026412e-05, -5.9126061387360096e-05, -0.000440262199845165, -0.0005534547381103039, -0.0005746620590798557, -0.01069374568760395, -0.002044731518253684, -0.45971816778182983, -2.948721408843994, -0.15636181831359863, -2.589961051940918, -2.978086471557617, -1.2840386629104614, -0.163431316614151, -1.0426154136657715, -0.2893137037754059, -0.009258195757865906, -2.3573644161224365, -0.033529117703437805, -1.1326878070831299, -0.2710430324077606, -0.077301986515522, -0.005055501591414213, -0.9281367063522339, -0.6537932753562927, -0.008488171733915806, -0.00017617580306250602, -0.01188707072287798, -0.02183399721980095, -0.299407035112381, -0.008465949445962906, -0.037389252334833145, -0.19377446174621582, -0.523195743560791, -0.001149589428678155, -0.06446234881877899, -5.578839045483619e-05, -0.0027440059930086136, -1.1920922133867862e-06, -4.1126360883936286e-05, -1.1801649634435307e-05, -5.125986263010418e-06, -0.3846994638442993, -0.002874292666092515, -0.0014497257070615888, -0.042715419083833694, -0.06943778693675995, -2.1219027985353023e-05, -0.02642630785703659], "finish_reason": "length"}], "metrics": {"energy": 266.837958480835, "energy_per_token": 1.0423357753157618, "time": 11.137759, "time_per_token": 0.04350687109375}}
{"outputs": [{"text": "# Check input\n    if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"df should be a DataFrame\")\n    if df.empty:\n        raise ValueError(\"df should be non-empty\")\n    if not df.columns.is_unique:\n        raise ValueError(\"df column names should be unique\")\n\n    cols = [col1, col2]\n    if not all(col in df.columns for col in cols):\n        raise ValueError(\"df should contain the specified columns\")\n\n    if not df.columns.isin(cols).any():\n        raise TypeError(\"df use non-numeric data\")\n\n    # Draw plot\n    fig, axes = plt.subplots(figsize=(10, 10))\n\n    if isinstance(df, pd.DataFrame):\n        df = df.dropna(subset=[col1, col2])\n        ax = sns.regplot(x=col1, y=col2, data=df, fit_reg=False,\n                         scatter=True, ax=axes)\n\n    # Return", "tokens": ["#", " Check", " input", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " should", " be", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " should", " be", " non", "-", "empty", "\"", ")", "\n", "    ", "if", " not", " df", ".", "columns", ".", "is", "_", "unique", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " column", " names", " should", " be", " unique", "\"", ")", "\n", "\n", "    ", "cols", " =", " [", "col", "1", ",", " col", "2", "]", "\n", "    ", "if", " not", " all", "(", "col", " in", " df", ".", "columns", " for", " col", " in", " col", "s", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " should", " contain", " the", " specified", " columns", "\"", ")", "\n", "\n", "    ", "if", " not", " df", ".", "columns", ".", "isin", "(", "cols", ")", ".", "any", "():", "\n", "        ", "raise", " Type", "Error", "(", "\"", "df", " use", " non", "-", "numeric", " data", "\"", ")", "\n", "\n", "    ", "#", " Draw", " plot", "\n", "    ", "fig", ",", " axes", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "0", ",", " ", "1", "0", "))", "\n", "\n", "    ", "if", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "df", " =", " df", ".", "drop", "na", "(", "subset", "=[", "col", "1", ",", " col", "2", "])", "\n", "        ", "ax", " =", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ",", " fit", "_", "reg", "=", "False", ",", "\n", "                ", "         ", "scatter", "=", "True", ",", " ax", "=", "axes", ")", "\n", "\n", "    ", "#", " Return"], "logprobs": [-1.935333490371704, -1.4994406700134277, -1.7380856275558472, -1.847178339958191, -0.003936519380658865, -0.03866872191429138, -0.10437238216400146, -0.040527913719415665, -0.0002669931564014405, -0.0089932382106781, -0.000747877755202353, -0.02723473496735096, -9.894321920000948e-06, -0.13267606496810913, -0.19752736389636993, -0.004966304171830416, -0.0009485750924795866, -0.01449495367705822, -0.3107548952102661, -5.6503606174374e-05, -0.12983660399913788, -0.2730926275253296, -1.8055872917175293, -2.0722641944885254, -0.008221355266869068, -0.1364460438489914, -0.6743135452270508, -0.010731722228229046, -0.5859284400939941, -0.0002388668799540028, -0.0023969272151589394, -0.12464801967144012, -0.16282199323177338, -0.9931885600090027, -0.0051009273156523705, -0.024293478578329086, -0.06076553091406822, -0.006860155612230301, -0.00027450130437500775, -0.008469732478260994, -0.0037206250708550215, -4.756337511935271e-05, -0.002901156432926655, -0.0064848936162889, -0.044405996799468994, -0.5505290031433105, -2.651474952697754, -0.3660772740840912, -0.0730605274438858, -0.0010642108973115683, -0.02300805225968361, -4.7205765440594405e-05, -0.000846266164444387, -0.04794916883111, -0.1185879334807396, -0.7604193091392517, -2.6352133750915527, -0.5150761008262634, -0.11866755038499832, -0.07918847352266312, -2.5110726356506348, -0.014048260636627674, -0.10768108814954758, -0.009863094426691532, -0.005888850893825293, -0.0006108802044764161, -0.011085470207035542, -0.030719522386789322, -4.792098479811102e-05, -0.0076074181124567986, -0.03236112371087074, -0.2667541205883026, -2.1823606491088867, -0.10670473426580429, -0.14856486022472382, -0.015048549510538578, -0.005269447807222605, -0.039020635187625885, -9.226373367710039e-05, -0.0005915798828937113, -2.154463529586792, -0.0009586982196196914, -2.4255611896514893, -0.15999464690685272, -0.9520264267921448, -0.016655562445521355, -0.02128986455500126, -0.0020518696401268244, -0.003351786872372031, -0.00019822540343739092, -0.0008824745309539139, -0.014222448691725731, -0.04698559269309044, -0.31498953700065613, -0.5728942155838013, -0.6811124682426453, -0.19364707171916962, -0.4498451352119446, -0.0250284131616354, -0.0038794034626334906, -0.03259042277932167, -0.0017797596519812942, -0.004119957331568003, -0.00018130090029444546, -0.0001515035255579278, -0.0011749514378607273, -2.622600959512056e-06, -0.0052400389686226845, -0.003649837803095579, -0.0005420169327408075, -0.042969536036252975, -0.007552049122750759, -6.794906312279636e-06, -0.008025187067687511, -0.9511380195617676, -0.3242948055267334, -0.43333083391189575, -0.09261254221200943, -0.3903825879096985, -0.22885213792324066, -0.07219483703374863, -0.16570177674293518, -0.001302942750044167, -0.0011098184622824192, -0.3118254542350769, -0.0004601611872203648, -1.4556047916412354, -0.9210370182991028, -0.5845870971679688, -1.089646339416504, -1.319503903388977, -0.2742880582809448, -0.6406453251838684, -0.5611913800239563, -0.01979910209774971, -0.007748192176222801, -0.00033706706017255783, -1.8392386436462402, -0.014540188014507294, -0.024163858965039253, -0.002034976379945874, -0.10399535298347473, -2.0686516761779785, -4.8636207793606445e-05, -0.02847963757812977, -0.044742219150066376, -0.2778984308242798, -2.2898290157318115, -0.015716377645730972, -0.00676081795245409, -0.011851729825139046, -0.01001511700451374, -0.04959281161427498, -0.0024465173482894897, -0.004568852484226227, -0.031026633456349373, -0.001111128251068294, -0.7152404189109802, -1.456584095954895, -1.1907695531845093, -0.062291376292705536, -0.0019540756475180387, -2.58430814743042, -0.16703073680400848, -2.5402419567108154, -0.002099454402923584, -0.0053400020115077496, -3.2066785934148356e-05, -0.0008738989708945155, -7.617183291586116e-05, -0.6246036291122437, -0.9259538054466248, -0.0005976559477858245, -0.01938236691057682, -1.2500717639923096, -0.5416142344474792, -0.002703465986996889, -0.02972576953470707, -1.8200891017913818, -0.010143633931875229, -0.08187597244977951, -0.0077996463514864445, -2.1203339099884033, -0.00028236693469807506, -3.2489447593688965, -3.0582265853881836, -0.00075049843871966, -0.8543809056282043, -0.2872295081615448, -0.06860167533159256, -0.0009288049186579883, -0.6361005306243896, -0.09040410071611404, -0.008582374081015587, -0.01729443483054638, -2.281656265258789, -0.783179759979248, -0.052308205515146255, -0.19863003492355347, -2.120184898376465, -0.14316312968730927, -2.3336503505706787, -1.1903951168060303, -0.6164809465408325, -0.007001390215009451, -0.035756006836891174, -0.07227601855993271, -0.0067145200446248055, -0.0002536452084314078, -0.09595632553100586, -0.03860839456319809, -0.6854858994483948, -3.5359435081481934, -0.12958362698554993, -0.06839874386787415, -2.9802276912960224e-06, -3.969590397900902e-05, -0.4863699972629547, -0.010456891730427742, -0.0009466695482842624, -0.3671417832374573, -0.006050602998584509, -0.019010137766599655, -0.000854961050208658, -0.0001399419124936685, -0.00961045827716589, -0.00014137222024146467, -5.280832192511298e-05, -4.410646579344757e-05, -0.00012051333033014089, -0.07757658511400223, -0.0005547653418034315, -0.0004239375703036785, -0.19781430065631866, -2.190059185028076, -7.998623186722398e-05, -0.004501329269260168, -0.004179433919489384, -0.38115808367729187, -0.16314265131950378, -1.857485294342041, -0.013013788498938084, -0.19193771481513977, -1.9752705097198486, -0.25334057211875916, -0.09363347291946411, -0.003677155589684844, -1.1907655000686646, -0.000773369160015136, -0.0014225849881768227, -1.5658503770828247, -0.013791623525321484, -1.5417003631591797, -0.47760245203971863, -2.8975563049316406, -1.2279900312423706], "finish_reason": "length"}], "metrics": {"energy": 256.22011812400814, "energy_per_token": 1.0008598364219068, "time": 10.935321, "time_per_token": 0.04271609765625}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input must be a DataFrame\")\n    if df.empty:\n        raise ValueError(\"DataFrame cannot be empty\")\n    if len(df.columns) < 2:\n        raise ValueError(\"DataFrame must contain at least two columns\")\n    if df[col1].dtype.name.lower() not in ['int64', 'float64'] or df[col2].dtype.name.lower() not in ['int64', 'float64']:\n        raise TypeError(\"Only numerical data can be plotted\")\n    return sns.regplot(x=col1, y=col2, data=df)", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " must", " be", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "DataFrame", " cannot", " be", " empty", "\"", ")", "\n", "    ", "if", " len", "(", "df", ".", "columns", ")", " <", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "DataFrame", " must", " contain", " at", " least", " two", " columns", "\"", ")", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "d", "type", ".", "name", ".", "lower", "()", " not", " in", " ['", "int", "6", "4", "'", ",", " '", "float", "6", "4", "']", " or", " df", "[", "col", "2", "]", ".", "d", "type", ".", "name", ".", "lower", "()", " not", " in", " ['", "int", "6", "4", "'", ",", " '", "float", "6", "4", "']", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Only", " numerical", " data", " can", " be", " plotted", "\"", ")", "\n", "    ", "return", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "\n", "if"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -0.2563993036746979, -0.7669747471809387, -1.4403893947601318, -0.0027291453443467617, -0.05442101135849953, -0.5013555884361267, -0.011924177408218384, -0.47602108120918274, -0.0001938155182870105, -0.0020833946764469147, -0.1822003871202469, -0.16954171657562256, -0.8954617381095886, -0.005569180008023977, -0.04053386673331261, -0.11164557188749313, -0.004893825389444828, -0.0004568248405121267, -0.010730543173849583, -0.0038699035067111254, -5.566918844124302e-05, -0.004409946501255035, -0.004560308530926704, -1.7935662269592285, -1.8927489519119263, -0.0012380562257021666, -0.0011747133685275912, -0.042257729917764664, -7.30726242181845e-05, -0.00047874910524114966, -0.0962701365351677, -0.12331955134868622, -2.6523351669311523, -0.004539897665381432, -0.13368840515613556, -0.16060112416744232, -0.10955274850130081, -0.029272979125380516, -0.31071802973747253, -0.006728610955178738, -0.016108956187963486, -0.03275333717465401, -0.0033622421324253082, -0.0008044582791626453, -0.006029393058270216, -0.009260675869882107, -1.8596476365928538e-05, -0.005703603383153677, -0.1575862467288971, -0.083747498691082, -0.06181163340806961, -0.38973379135131836, -0.08829227834939957, -0.0026410482823848724, -0.20514065027236938, -0.004546068608760834, -0.019874481484293938, -0.00020585325546562672, -0.00044943721150048077, -0.27141451835632324, -0.3138851821422577, -1.4294166564941406, -0.3836958110332489, -0.018225817009806633, -0.003392300335690379, -0.0004209585895296186, -0.0011480414541438222, -0.2849963903427124, -0.20476034283638, -0.5002864599227905, -0.555356502532959, -2.1852853298187256, -0.19078028202056885, -0.001925639808177948, -0.5329170227050781, -0.00010132275929208845, -0.6492252349853516, -0.23772896826267242, -0.8483143448829651, -1.0609570381348021e-05, -0.00457834592089057, -0.0004256058018654585, -0.026193035766482353, -0.31566834449768066, -0.029784783720970154, -1.0251946150674485e-05, -0.10054364055395126, -0.9731716513633728, -0.022648708894848824, -0.0007724162423983216, -0.0007046362152323127, -0.015684576705098152, -7.152301259338856e-05, -0.0001652104256208986, -0.00013124081306159496, -0.0030257180333137512, -0.0004144048143643886, -0.0006939148879610002, -0.005585657898336649, -6.687417771900073e-05, -0.0062858969904482365, -0.0053639537654817104, -0.0008908117306418717, -0.013660634867846966, -0.001505671301856637, -0.0009168949909508228, -2.7418097943154862e-06, -0.00013815402053296566, -1.2397689715726301e-05, -0.007088038604706526, -0.000402250443585217, -0.07062660902738571, -1.2874520507466514e-05, -0.0013703251024708152, -0.0037574421148747206, -0.0023296140134334564, -0.003909921273589134, -0.006171574350446463, -0.007570860907435417, -6.985420623095706e-05, -0.04099463298916817, -0.0806821957230568, -3.4817724227905273, -1.4894582033157349, -0.4275224506855011, -2.3696744441986084, -0.0029812674038112164, -0.5110222697257996, -0.3196759521961212, -0.00592061085626483, -0.012371938675642014, -0.48163899779319763, -1.2281913757324219, -0.025198373943567276, -6.318072337307967e-06, -9.917721035890281e-05, -0.6131731867790222, -0.009196540340781212, -0.0010786197381094098, -0.47701790928840637, -0.012587503530085087, -0.0728985071182251, -0.0011688789818435907, -0.00019929806876461953, -0.010331718251109123, -0.00029452278977259994, -0.0001070442158379592, -9.715084888739511e-05, -0.0021458473056554794, -0.05375809594988823, -0.001050516264513135, -0.00042298430344089866, -0.7777160406112671, -0.40098920464515686, -0.061498142778873444, -1.0001641511917114], "finish_reason": "stop"}], "metrics": {"energy": 183.18091517448414, "energy_per_token": 1.0650053207818846, "time": 7.366179, "time_per_token": 0.04282662209302326}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame) or df.empty:\n        raise ValueError(\"Input DataFrame is empty.\")\n\n    if not all(pd.api.types.is_numeric_dtype(df[col]) for col in [col1, col2]):\n        raise TypeError(\"DataFrame does not contain non-numeric columns.\")\n\n    return sns.scatterplot(x=col1, y=col2, data=df)", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " all", "(", "pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "df", "[", "col", "])", " for", " col", " in", " [", "col", "1", ",", " col", "2", "]", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Data", "Frame", " does", " not", " contain", " non", "-", "numeric", " columns", ".", "\"", ")", "\n", "\n", "    ", "return", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -2.067028522491455, -0.018761439248919487, -0.451700896024704, -0.01910557597875595, -0.03167082741856575, -0.7216967940330505, -0.012696151621639729, -0.0021466801408678293, -0.01951892115175724, -0.011680898256599903, -2.1576648578047752e-05, -0.23763112723827362, -0.19758783280849457, -1.0304224491119385, -1.6735605001449585, -0.008755035698413849, -0.44153669476509094, -1.4501235485076904, -1.9986655712127686, -0.019577721133828163, -0.000200609109015204, -0.002441522665321827, -0.8005872368812561, -0.0006170752458274364, -0.4323367178440094, -0.6441413164138794, -1.6499626636505127, -0.0884397029876709, -2.1078085899353027, -0.0003389737685211003, -0.159740149974823, -1.5616295058862306e-05, -0.0017113338690251112, -1.823885577323381e-05, -0.0004518203204497695, -0.0030540036968886852, -0.010179979726672173, -0.00033778208307921886, -0.0006675875629298389, -0.0003147821989841759, -0.0006051616510376334, -0.6776318550109863, -0.023474983870983124, -0.0793919786810875, -0.23502320051193237, -0.014846903271973133, -0.00047255316167138517, -0.0001567479339428246, -0.2082369327545166, -0.0006998711614869535, -0.00019405389321036637, -0.00037079135654494166, -0.0076857334934175014, -0.00010847456724150106, -0.006373673677444458, -0.0007846852531656623, -0.0029554758220911026, -0.001484959851950407, -0.009363899007439613, -0.0020858929492533207, -2.825220326485578e-05, -0.024894585832953453, -0.1092400848865509, -1.700115442276001, -1.591813087463379, -2.656447172164917, -0.018046822398900986, -0.1776314526796341, -3.0726442337036133, -0.001369610894471407, -0.09911904484033585, -1.9245915412902832, -0.07990232110023499, -0.004771987907588482, -0.00524205481633544, -0.007572398986667395, -0.02943747490644455, -0.0009726322605274618, -1.4495803117752075, -0.015727175399661064, -2.622600959512056e-06, -7.581423415103927e-05, -0.5610754489898682, -0.0048909783363342285, -0.0023457887582480907, -0.7255157828330994, -0.005476116202771664, -0.01908288709819317, -0.00022301571152638644, -0.0001137191939051263, -0.011096552014350891, -0.00011216964776394889, -4.410646579344757e-05, -3.40932747349143e-05, -0.0036634968128055334, -0.0694134309887886, -0.0007736074039712548, -0.000228140561375767, -1.2773624658584595, -1.0728830375228426e-06, -7.152555099310121e-07, -0.00010001159535022452, -0.00013493580627255142, -0.08648314327001572], "finish_reason": "stop"}], "metrics": {"energy": 109.87040593528747, "energy_per_token": 0.972304477303429, "time": 4.6399574, "time_per_token": 0.04106156991150443}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input dataframe should be a Pandas DataFrame\")\n    if not df.columns.isin([col1, col2]).all():\n        raise ValueError(\"Input dataframe does not contain the specified columns\")\n    if df[col1].dtype != 'int64':\n        raise TypeError(\"Column X should be an integer type\")\n    if df[col2].dtype != 'int64':\n        raise TypeError(\"Column Y should be an integer type\")\n    return sns.regplot(data=df, x=col1, y=col2, fit_reg=False)", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", "frame", " should", " be", " a", " Pand", "as", " Data", "Frame", "\"", ")", "\n", "    ", "if", " not", " df", ".", "columns", ".", "isin", "([", "col", "1", ",", " col", "2", "])", ".", "all", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", "frame", " does", " not", " contain", " the", " specified", " columns", "\"", ")", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "d", "type", " ", "!", "=", " '", "int", "6", "4", "':", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Column", " X", " should", " be", " an", " integer", " type", "\"", ")", "\n", "    ", "if", " df", "[", "col", "2", "]", ".", "d", "type", " ", "!", "=", " '", "int", "6", "4", "':", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Column", " Y", " should", " be", " an", " integer", " type", "\"", ")", "\n", "    ", "return", " s", "ns", ".", "reg", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " fit", "_", "reg", "=", "False", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -0.2563993036746979, -0.7669747471809387, -2.229989767074585, -1.6830158233642578, -2.0036110877990723, -0.013298504054546356, -0.358512282371521, -2.184900999069214, -9.881961887003854e-05, -0.25704842805862427, -0.07588894665241241, -0.7615165114402771, -0.0006425699684768915, -0.0034768865443766117, -0.33465543389320374, -0.22768643498420715, -0.910739541053772, -0.5163267254829407, -0.05660292133688927, -2.956350564956665, -0.459026962518692, -0.12910525500774384, -0.19645445048809052, -0.0016990762669593096, -0.000639710808172822, -0.0026496085338294506, -0.021807637065649033, -0.00023719835735391825, -0.019007915630936623, -0.0003761537664104253, -0.12397468835115433, -0.009087157435715199, -0.010716980323195457, -0.0015209070406854153, -0.018491733819246292, -0.014858766458928585, -6.925819616299123e-05, -0.014400954358279705, -0.4776487350463867, -1.0465972423553467, -0.2732054591178894, -0.018585583195090294, -0.9820608496665955, -0.00208291900344193, -0.06455321609973907, -0.4481867849826813, -0.10152355581521988, -0.1309320479631424, -0.16721612215042114, -0.0005365362740121782, -0.0023097521625459194, -0.19640988111495972, -0.14875257015228271, -0.7658111453056335, -0.34042343497276306, -0.005405927076935768, -0.009330004453659058, -0.0030490122735500336, -0.0010996968485414982, -0.5294561386108398, -0.3365483283996582, -0.7788480520248413, -1.847726889536716e-05, -0.0003418338019400835, -0.9907883405685425, -0.20222944021224976, -0.1875215768814087, -2.9802276912960224e-06, -1.879438042640686, -0.010145050473511219, -0.003678580978885293, -0.041061680763959885, -0.016355734318494797, -0.00016473367577418685, -0.06918653100728989, -0.11570600420236588, -1.7058340311050415, -2.1180665493011475, -0.5579693913459778, -0.1661822497844696, -1.113098382949829, -0.19817741215229034, -2.208980083465576, -0.12032219767570496, -0.00040356122190132737, -0.0010767144849523902, -0.0076541476882994175, -0.03842463716864586, -0.005251897498965263, -0.0007540719816461205, -3.93382906622719e-05, -0.007266402244567871, -4.8397800128441304e-05, -0.00018606838420964777, -0.0015562577173113823, -0.004077930003404617, -0.018969900906085968, -4.768370445162873e-07, -0.00033420699764974415, -0.005340357776731253, -0.021455446258187294, -0.0009584600338712335, -2.7179348762729205e-05, -0.003914196044206619, -0.0020905323326587677, -0.00043025295599363744, -0.00045980370487086475, -0.000359351426595822, -7.033323527139146e-06, -0.0013297295663505793, -0.0006973695708438754, -0.002133714035153389, -0.008041860535740852, -0.0014868644066154957, -0.00091856240760535, -0.001642546383664012, -0.0022922686766833067, -0.0024479443673044443, -0.0015286438865587115, -0.0006418551784008741, -0.0010998159414157271, -0.42298415303230286, -1.3352997303009033, -0.029216250404715538, -6.556489552167477e-06, -0.00011753345461329445, -0.8026374578475952, -0.006072168238461018, -0.0011874536285176873, -1.8937389850616455, -0.025786390528082848, -0.0009573881980031729, -0.004556392319500446, -0.01637309044599533, -0.0016913408180698752, -0.003382914699614048, -0.0008885487914085388, -0.00013457823661156, -0.0009352362249046564, -0.00021288513380568475, -8.725739462533966e-05, -0.00017450717859901488, -1.1515076160430908, -0.6756070852279663, -0.0004104725376237184, -0.0056115007027983665, -0.003571680746972561, -0.44274061918258667, -1.3201228380203247, -8.344646857949556e-07, -7.152555099310121e-07, -5.94836674281396e-05, -0.00022289653134066612, -2.652824640274048, -0.004960847552865744], "finish_reason": "stop"}], "metrics": {"energy": 165.8976443300247, "energy_per_token": 0.9701616627486824, "time": 7.153035, "time_per_token": 0.04183061403508772}}
{"outputs": [{"text": "import matplotlib.pyplot as plt\n\n    if not isinstance(df, pd.DataFrame):\n        raise ValueError(\n            'Input df must be a pandas DataFrame. Please provide the correct df as the argument.')\n\n    if not df.columns.isin([col1, col2]).all():\n        raise ValueError(\n            f'Input DataFrame does not contain the specified columns: {col1}, {col2}. Please provide a DataFrame with these columns.')\n\n    if df[col1].dtype.name != 'int64' or df[col2].dtype.name != 'int64':\n        raise TypeError(\n            f'Input DataFrame contains non-numeric data, please provide a DataFrame with numeric columns.')\n\n    plt.scatter(df[col1], df[col2])\n    return plt.gca()", "tokens": ["import", " matplotlib", ".", "py", "plot", " as", " plt", "\n", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\n", "            ", "'", "Input", " df", " must", " be", " a", " pandas", " Data", "Frame", ".", " Please", " provide", " the", " correct", " df", " as", " the", " argument", ".", "')", "\n", "\n", "    ", "if", " not", " df", ".", "columns", ".", "isin", "([", "col", "1", ",", " col", "2", "])", ".", "all", "():", "\n", "        ", "raise", " Value", "Error", "(", "\n", "            ", "f", "'", "Input", " Data", "Frame", " does", " not", " contain", " the", " specified", " columns", ":", " {", "col", "1", "}", ",", " {", "col", "2", "}", ".", " Please", " provide", " a", " Data", "Frame", " with", " these", " columns", ".", "')", "\n", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "d", "type", ".", "name", " ", "!", "=", " '", "int", "6", "4", "'", " or", " df", "[", "col", "2", "]", ".", "d", "type", ".", "name", " ", "!", "=", " '", "int", "6", "4", "':", "\n", "        ", "raise", " Type", "Error", "(", "\n", "            ", "f", "'", "Input", " Data", "Frame", " contains", " non", "-", "numeric", " data", ",", " please", " provide", " a", " Data", "Frame", " with", " numeric", " columns", ".", "')", "\n", "\n", "    ", "plt", ".", "scatter", "(", "df", "[", "col", "1", "]", ",", " df", "[", "col", "2", "])", "\n", "    ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "#"], "logprobs": [-3.411358118057251, -0.30053234100341797, -0.03669564053416252, -0.0037589860148727894, -0.00011467275908216834, -0.0024547225330024958, -0.0013763965107500553, -0.004949341528117657, -1.0917952060699463, -0.0003292018664069474, -0.33271852135658264, -0.19662348926067352, -0.04951714351773262, -0.00022837892174720764, -0.012162097729742527, -0.0013569919392466545, -0.032351430505514145, -1.847726889536716e-05, -0.16352172195911407, -0.17859004437923431, -0.005399168934673071, -0.0012724645202979445, -0.03175709769129753, -0.16848224401474, -5.209310256759636e-05, -0.13905315101146698, -2.464120864868164, -0.0042177774012088776, -2.6817450523376465, -0.8072156310081482, -1.0201630592346191, -1.045249104499817, -0.0050444710068404675, -0.09969215095043182, -0.3997001051902771, -0.10385341942310333, -0.009249219670891762, -0.5810924172401428, -1.4080430269241333, -2.1048030853271484, -1.4319725036621094, -0.7275741696357727, -2.5165810585021973, -2.572261333465576, -2.097229480743408, -1.2803394794464111, -0.35565438866615295, -0.22515054047107697, -0.0017498909728601575, -0.6421924829483032, -0.0001776060671545565, -0.09026981145143509, -1.0231220722198486, -0.4837714433670044, -0.044217370450496674, -2.27754282951355, -0.34734901785850525, -0.09421775490045547, -0.13727159798145294, -0.002809983678162098, -0.0006393534131348133, -0.0033784001134335995, -0.002355421893298626, -0.00026925752172246575, -0.014213399030268192, -0.000634111522231251, -0.21087172627449036, -0.010915686376392841, -0.014022047631442547, -0.001141730579547584, -0.05644497647881508, -0.014721456915140152, -0.00012230125139467418, -0.04878569021821022, -0.1782977432012558, -0.0008844992844387889, -0.652455747127533, -0.24023067951202393, -1.3750624656677246, -1.8752833604812622, -0.010740095749497414, -0.8360177278518677, -0.0017283515771850944, -0.07193051278591156, -0.33313125371932983, -0.2553372383117676, -0.23744434118270874, -0.37676024436950684, -0.1659659743309021, -0.1886720359325409, -0.003370083635672927, -0.07643796503543854, -0.7456727027893066, -0.018342748284339905, -0.00020418466010596603, -0.000899982638657093, -0.015387274324893951, -0.4562951326370239, -0.8498420119285583, -0.32711121439933777, -1.9037537574768066, -0.6688605546951294, -0.0055944304913282394, -0.8292587995529175, -1.42795991897583, -0.1581912338733673, -0.18602481484413147, -0.013263213448226452, -0.0008972433279268444, -0.028980152681469917, -0.00022265815641731024, -0.3324405252933502, -0.7072741985321045, -0.4384280741214752, -0.00827727746218443, -0.01049994956701994, -0.004320453852415085, -0.001409014337696135, -0.5836885571479797, -0.31054458022117615, -1.153646469116211, -0.5215998888015747, -0.8876203298568726, -3.71926071238704e-05, -0.0007096394547261298, -0.11291509866714478, -0.3637872040271759, -0.1453993171453476, -1.6689286894688848e-06, -0.3085108697414398, -0.13027411699295044, -0.0020477056968957186, -0.000925112864933908, -0.00021431533969007432, -0.00859147496521473, -2.7656173188006505e-05, -5.1973900554003194e-05, -0.00027056847466155887, -0.011714242398738861, -0.0006272017490118742, -0.00013791563105769455, -0.0021586944349110126, 0.0, -0.0014310367405414581, -0.003997194115072489, -0.005755400285124779, -0.000403084559366107, -2.109982233378105e-05, -0.0012193633010610938, -0.0025178655050694942, -0.002712144749239087, -0.016530107706785202, -0.011767142452299595, -5.507317473529838e-05, -0.2385031282901764, -0.13758154213428497, -0.0015961299650371075, -0.7819277048110962, -0.1309313029050827, -0.5636840462684631, -0.13798381388187408, -0.0030004028230905533, -1.300443172454834, -0.037398096174001694, -0.008617948740720749, -0.04859720915555954, -0.19049733877182007, -2.9090185165405273, -0.22261174023151398, -0.6081291437149048, -1.5200326442718506, -0.21771761775016785, -0.0045746671967208385, -0.14007316529750824, -0.40069276094436646, -1.7912442684173584, -0.31011927127838135, -0.14649361371994019, -0.0007238152320496738, -0.018500158563256264, -0.0005489272880367935, -3.1022167205810547, -0.002755180699750781, -0.5349466800689697, -0.003612779313698411, -0.1537284553050995, -0.00568048981949687, -0.0002512616047170013, -0.0004891153075732291, -8.475421054754406e-05, -0.005883755162358284, -0.0079282121732831, -8.642300235806033e-05, -2.0503786799963564e-05, -0.0002051381452474743, -0.150417298078537, -0.006216001696884632, -0.4134278893470764, -3.62222957611084, -0.24409626424312592, -0.0014732946874573827, -0.03980737924575806, -0.10072474181652069, -0.0029050789307802916, -0.5669060349464417, -0.021183663979172707, -2.2580056190490723], "finish_reason": "stop"}], "metrics": {"energy": 236.43296266365056, "energy_per_token": 1.1421882254282636, "time": 8.832662, "time_per_token": 0.04266986473429951}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"The input must be a DataFrame\")\n    if df.empty:\n        raise ValueError(\"The input DataFrame is empty\")\n    if not set(col1, col2).issubset(df.columns):\n        raise ValueError(\"The input DataFrame does not contain the specified columns\")\n    if df[col1].dtype != \"float64\" or df[col2].dtype != \"float64\":\n        raise TypeError(\"The input DataFrame contains non-numeric data\")\n    return sns.scatterplot(df, x=col1, y=col2)", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " must", " be", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " Data", "Frame", " is", " empty", "\"", ")", "\n", "    ", "if", " not", " set", "(", "col", "1", ",", " col", "2", ")", ".", "iss", "ub", "set", "(", "df", ".", "columns", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " Data", "Frame", " does", " not", " contain", " the", " specified", " columns", "\"", ")", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "d", "type", " ", "!", "=", " \"", "float", "6", "4", "\"", " or", " df", "[", "col", "2", "]", ".", "d", "type", " ", "!", "=", " \"", "float", "6", "4", "\":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "The", " input", " Data", "Frame", " contains", " non", "-", "numeric", " data", "\"", ")", "\n", "    ", "return", " s", "ns", ".", "scatter", "plot", "(", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ")", "\n", "\n", "def"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -0.2563993036746979, -1.8497402667999268, -0.14106346666812897, -1.607460856437683, -0.0027912012301385403, -0.02746567688882351, -0.38681408762931824, -0.010015707463026047, -0.7646893262863159, -0.0002547178009990603, -0.002702158410102129, -0.2757282257080078, -0.17274180054664612, -0.9914973378181458, -0.0075234174728393555, -0.040694233030080795, -0.09299062937498093, -0.0046153683215379715, -0.00047708096099086106, -0.012399961240589619, -0.0034249713644385338, -5.364274329622276e-05, -0.004239856731146574, -0.007100230548530817, -0.1897374540567398, -0.4671137034893036, -0.1734127551317215, -0.0010717130498960614, -0.461478054523468, -0.0015604236396029592, -0.0807659924030304, -5.4596363042946905e-05, -0.0004798214649781585, -0.08524975925683975, -0.1264580637216568, -0.5428029298782349, -2.703136920928955, -0.11199840903282166, -0.7107473611831665, -0.006445097737014294, -0.8107984662055969, -0.015427537262439728, -0.0003302744007669389, -0.0013621109537780285, -0.11179972440004349, -0.0026052603498101234, -0.0010162194957956672, -1.7881377516459906e-06, -0.0006669919239357114, -0.1444951295852661, -0.057234685868024826, -0.005340239033102989, -0.012405612505972385, -0.004270481877028942, -0.0006632988806813955, -0.009663705714046955, -0.014445840381085873, -4.768258077092469e-05, -0.008633785881102085, -0.2700420320034027, -0.3488275706768036, -0.42123186588287354, -0.1424609124660492, -0.008843304589390755, -0.15274959802627563, -0.0005726366653107107, -0.02966061793267727, -0.05662455037236214, -0.036255769431591034, -0.05969531089067459, -0.04957001283764839, -0.00021181246847845614, -0.0007213136414065957, -0.4507966637611389, -0.16579248011112213, -0.7469040155410767, -0.14894117414951324, -0.0033036675304174423, -0.005937675479799509, -0.00238788896240294, -0.0006081400788389146, -0.30436182022094727, -0.2756485044956207, -1.1433637142181396, -2.7894584491150454e-05, -0.0002512616047170013, -2.259999990463257, -1.7945070266723633, -0.09063582867383957, -1.0728830375228426e-06, -0.19339342415332794, -0.03473270684480667, -0.0018760239472612739, -0.00037424711626954377, -7.772143726469949e-05, -0.01600748300552368, -3.015949550899677e-05, -7.652943895664066e-05, -0.00011205045302631333, -0.0006586528033949435, -0.0014606770128011703, -2.3841855067985307e-07, -6.913899414939806e-05, -0.006161385215818882, -0.0029487009160220623, -0.0002547178009990603, -5.125986263010418e-06, -0.0007254829397425056, -0.0023211699444800615, -0.002421425189822912, -0.005922507029026747, -0.007402136456221342, -7.939023635117337e-05, -0.00905691459774971, -0.032670844346284866, -0.20777519047260284, -0.21334563195705414, -0.04425911232829094, -0.0011399445356801152, -1.4124808311462402, -0.007674022112041712, -0.001208409434184432, -0.02433687448501587, -0.17884010076522827, -0.059780657291412354, -0.0028161650989204645, -0.004588076379150152, -0.6554979085922241, -1.1451364755630493, -0.03242148458957672, -5.364403477869928e-06, -8.5588610090781e-05, -0.9015986919403076, -0.01079564169049263, -0.005186199210584164, -2.4753596782684326, -0.6948009133338928, -0.2346271276473999, -0.005741769913583994, -0.0031695151701569557, -0.000740968796890229, -0.00015555603022221476, -0.0010936238104477525, -0.0002549561613705009, -5.829164365422912e-05, -0.0001445904199499637, -0.7808493971824646, -0.4461062550544739, -0.050205208361148834, -1.0826671123504639], "finish_reason": "stop"}], "metrics": {"energy": 175.30086798667907, "energy_per_token": 1.0560293252209583, "time": 6.9413867, "time_per_token": 0.04181558253012048}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(f\"Expected 'df' to be a pandas DataFrame. Received: {type(df).__name__}\")\n    if len(df) == 0 or col1 not in df or col2 not in df:\n        raise ValueError(f\"Expected 'df' to contain the specified columns: {col1} and {col2}.\")\n\n    if pd.api.types.is_numeric_dtype(df[col1]) and pd.api.types.is_numeric_dtype(df[col2]):\n        try:\n            return sns.scatterplot(x=col1, y=col2, data=df).figure.gca()\n        except TypeError:\n            raise TypeError(f\"Data in 'df' is not numeric: {df.dtypes}\")\n    else:\n        raise TypeError(f\"Data in 'df' is not numeric: {df.dtypes}\")", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Expected", " '", "df", "'", " to", " be", " a", " pandas", " Data", "Frame", ".", " Re", "ceived", ":", " {", "type", "(", "df", ")", ".", "__", "name", "__", "}\"", ")", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", " or", " col", "1", " not", " in", " df", " or", " col", "2", " not", " in", " df", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Expected", " '", "df", "'", " to", " contain", " the", " specified", " columns", ":", " {", "col", "1", "}", " and", " {", "col", "2", "}", ".", "\"", ")", "\n", "\n", "    ", "if", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "df", "[", "col", "1", "])", " and", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "df", "[", "col", "2", "]", "):", "\n", "        ", "try", ":", "\n", "            ", "return", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", ".", "figure", ".", "g", "ca", "()", "\n", "        ", "except", " Type", "Error", ":", "\n", "            ", "raise", " Type", "Error", "(", "f", "\"", "Data", " in", " '", "df", "'", " is", " not", " numeric", ":", " {", "df", ".", "d", "types", "}\"", ")", "\n", "    ", "else", ":", "\n", "        ", "raise", " Type", "Error", "(", "f", "\"", "Data", " in", " '", "df", "'", " is", " not", " numeric", ":", " {", "df", ".", "d", "types", "}\"", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -1.7060471773147583, -0.21568351984024048, -2.568732976913452, -3.7543463706970215, -0.04920896515250206, -0.00248231110163033, -0.1374789923429489, -0.00601529236882925, -0.3276260197162628, -1.176210880279541, -0.15082019567489624, -0.014395548962056637, -2.3303756713867188, -2.0820624828338623, -0.00015579440514557064, -1.1265785694122314, -0.05862034857273102, -0.09603700786828995, -0.00021073981770314276, -0.000514851592015475, -2.8461971282958984, -0.001608150894753635, -0.00028272447525523603, -0.003356776898726821, -0.0001734344696160406, -0.30952733755111694, -0.0006205302197486162, -0.0018725732807070017, -0.2757748067378998, -0.15678921341896057, -1.688530445098877, -0.0002522150462027639, -0.0028815437108278275, -0.11017243564128876, -0.1904953569173813, -0.00041368984966538846, -0.00011955977242905647, -2.5825095176696777, -1.6590170860290527, -0.0013627061853185296, -0.004349652677774429, -5.447716102935374e-05, -0.0076378220692276955, -0.6145527958869934, -0.004734140355139971, -0.0013753250241279602, -0.0002787916746456176, -7.092700980138034e-05, -0.00021109737281221896, -0.021890679374337196, -0.005641135852783918, -0.0005757343024015427, -0.005412092432379723, -0.003936756867915392, -7.176141662057489e-05, -0.01493886485695839, -0.20076324045658112, -0.011066724546253681, -1.1668249368667603, -0.24440374970436096, -0.07388373464345932, -0.0019555033650249243, -0.035645466297864914, -0.16088372468948364, -0.9437251687049866, -0.3534668982028961, -0.08509200811386108, -1.059414029121399, -0.7725147008895874, -0.07992620766162872, -0.000977038755081594, -0.06498438864946365, -0.7933145761489868, -0.0031294680666178465, -0.00015138434537220746, -0.0012997282901778817, -0.4105246365070343, -0.031539272516965866, -0.24070025980472565, -0.0027455512899905443, -0.0016609933227300644, -1.2589781284332275, -0.000593962671700865, -0.8889442086219788, -2.6502184867858887, -0.0012384133879095316, -0.1832232028245926, -5.066266385256313e-05, -0.007036547642201185, -0.00018606838420964777, -0.004996077157557011, -0.0006187431863509119, -0.027631515637040138, -0.002743649296462536, -0.001755483914166689, -0.00034421717282384634, -0.0005901502445340157, -0.0048190876841545105, -0.08505325019359589, -0.006632575765252113, -0.0043599787168204784, -1.0144555568695068, -0.22796189785003662, -0.010194611735641956, -3.397406908334233e-05, -0.0004683827864937484, -1.4305104514278355e-06, -4.8040190449682996e-05, -6.556489552167477e-06, -2.169585604860913e-05, -2.9682672902708873e-05, -9.870042413240299e-05, -1.4424220353248529e-05, -3.6954811548639555e-06, -0.0006618693005293608, -9.095255518332124e-05, -0.0010409895330667496, -0.00014590153296012431, -2.002696055569686e-05, -0.0006424508756026626, -0.002355421893298626, -5.4596363042946905e-05, -0.004454926587641239, -0.0162145234644413, -4.0916876792907715, -0.00043585337698459625, -0.0076665692031383514, -0.002022960688918829, -2.156780242919922, -0.017171988263726234, -4.410734163684538e-06, -6.246371776796877e-05, -1.5768520832061768, -0.02168959379196167, -0.004229885526001453, -0.6255282163619995, -0.0063041397370398045, -0.101904958486557, -0.0004144048143643886, -9.929640509653836e-05, -0.009201737120747566, -0.00011181206355104223, -4.649054244509898e-05, -6.4490144723095e-05, -0.0007917130133137107, -0.05889911577105522, -0.0008436457719653845, -0.0002300474588992074, -0.39699631929397583, -2.585561513900757, -0.5181530117988586, -0.261922687292099, -1.4309613704681396, -0.09829356521368027, -0.002918035024777055, -0.04240422323346138, -0.016279619187116623, -0.005625488236546516, -1.3945518732070923, -8.49926145747304e-05, -0.5942052602767944, -0.06437215209007263, -0.0032501989044249058, -0.3510686159133911, -0.07977189868688583, -0.00010311071673640981, -0.03349753096699715, -0.29424551129341125, -0.011324179358780384, -2.9335215091705322, -1.8022674322128296, -1.153147578239441, -0.4564589560031891, -0.019362255930900574, -0.8808135986328125, -0.4372713565826416, -0.27698007225990295, -2.924774169921875, -0.23620598018169403, -0.9679536819458008, -0.7686569690704346, -0.2474793791770935, -0.008913843892514706, -0.5229539275169373, -0.06596784293651581, -0.11814822256565094, -0.05787111073732376, -0.08797617256641388, -5.936446541454643e-05, -0.001412466517649591, -0.0010492063593119383, -0.03659795969724655, -0.026769788935780525, -3.266281055402942e-05, -0.003763380227610469, -0.05342783033847809, -0.001919690752401948, -0.2710754871368408, -0.045584388077259064, -0.03546219691634178, -0.008569018915295601, -0.005236243829131126, -0.3143653869628906, -0.14101015031337738, -0.061837632209062576, -0.07397662103176117, -0.01702362857758999, -0.011927122250199318, -0.006496500689536333, -0.0006462631281465292, -0.0043882266618311405, -0.03806447982788086, -0.6788179874420166, -8.344646857949556e-07, -1.5497195136049413e-06, -8.439661905867979e-05, -0.0002456601650919765, -0.08331041038036346], "finish_reason": "stop"}], "metrics": {"energy": 230.58657346725482, "energy_per_token": 0.9854127071250206, "time": 10.103408, "time_per_token": 0.043176957264957266}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame) or df.empty:\n        raise ValueError(\"Invalid input data\")\n\n    if not all(df[col].apply(pd.Series.dtype) == \"int64\" or df[col].apply(pd.Series.dtype) == \"float64\") or df[col1].empty or df[col2].empty:\n        raise TypeError(\"Input data is not numerical\")\n\n    sns.scatterplot(x=col1, y=col2, data=df)\n    sns.regplot(x=col1, y=col2, data=df)\n    return plt.gca()", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " input", " data", "\"", ")", "\n", "\n", "    ", "if", " not", " all", "(", "df", "[", "col", "]", ".", "apply", "(", "pd", ".", "Series", ".", "d", "type", ")", " ==", " \"", "int", "6", "4", "\"", " or", " df", "[", "col", "]", ".", "apply", "(", "pd", ".", "Series", ".", "d", "type", ")", " ==", " \"", "float", "6", "4", "\"", ")", " or", " df", "[", "col", "1", "]", ".", "empty", " or", " df", "[", "col", "2", "]", ".", "empty", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " data", " is", " not", " numerical", "\"", ")", "\n", "\n", "    ", "s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "def"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -2.067028522491455, -0.018761439248919487, -0.451700896024704, -0.01910557597875595, -0.03167082741856575, -0.7216967940330505, -0.012696151621639729, -0.0021466801408678293, -0.01951892115175724, -0.011680898256599903, -2.1576648578047752e-05, -0.23763112723827362, -0.19758783280849457, -1.6306211948394775, -0.5354175567626953, -1.7828567028045654, -1.643823504447937, -0.0003404037852305919, -0.0061227609403431416, -0.665414035320282, -0.00046135272714309394, -0.5167641639709473, -0.6987732648849487, -2.0734667778015137, -0.08060048520565033, -0.9289951324462891, -0.17975161969661713, -0.05515117570757866, -1.1350504159927368, -0.0002656822034623474, -1.2204662561416626, -0.0009358317474834621, -0.36773476004600525, -0.00023016665363684297, -2.597322463989258, -1.4410629272460938, -0.2265111207962036, -0.1738247275352478, -0.00547682773321867, -1.9697048664093018, -1.748477816581726, -0.6806043982505798, -0.03012792393565178, -3.576278118089249e-07, -0.00022218143567442894, -2.7102854251861572, -0.0802205502986908, -0.0013761583250015974, -0.00023934361524879932, -0.00035279724397696555, -0.0007291757501661777, -0.0061003677546978, -7.83174327807501e-05, -0.0028518266044557095, -4.2676016164477915e-05, -0.00012694983161054552, -3.58813522325363e-05, -9.131014667218551e-05, -0.00041631137719377875, -0.0008747326792217791, -0.005885177291929722, -0.012687794864177704, -0.031829386949539185, -0.007966293953359127, -2.13382354559144e-05, -0.00254783034324646, -2.821187973022461, -0.6844807267189026, -0.8363839983940125, -0.2390592247247696, -0.009773734025657177, -0.22758466005325317, -0.0017899933736771345, -0.03078553080558777, -3.328648805618286, -0.1122824028134346, -0.00682664941996336, -0.0019961923826485872, -0.000715714821126312, -0.013636881485581398, -9.715084888739511e-05, -0.00023815179883968085, -0.00031120702624320984, -0.02589442767202854, -0.009976641274988651, -0.008461457677185535, -0.00828981027007103, -0.016639500856399536, -8.475421054754406e-05, -0.03131597116589546, -0.02624424546957016, -1.551461100578308, -0.44460180401802063, -1.7147222757339478, -0.16428911685943604, -2.836097002029419, -0.18533216416835785, -0.002277877414599061, -0.004886351991444826, -0.09928377717733383, -0.0012947280192747712, -1.368675708770752, -0.0014066335279494524, -0.004648118279874325, -0.5147337913513184, -0.006123353261500597, -0.003043664153665304, -0.5360638499259949, -0.024223200976848602, -0.19977110624313354, -0.001148755894973874, -0.00026973424246534705, -0.012271969579160213, -0.00046885941992513835, -0.00014649749209638685, -7.998623186722398e-05, -0.0012249593855813146, -0.11275291442871094, -0.0028903395868837833, -0.0006378046819008887, -0.36882567405700684, -0.021340161561965942, -0.11151986569166183, -0.4537782669067383, -0.0006451908848248422, -0.00036554806865751743, -0.08826302736997604, -0.033290229737758636, -0.0017523899441584945, -0.020515507087111473, -0.0016800350276753306, -0.0017946342704817653, -0.0006089740199968219, -8.749579137656838e-05, -0.001353777595795691, -0.0001497156627010554, -0.00016306500765495002, -0.00015221867943182588, -0.0022113888990134, -0.06586772948503494, -0.0004892344586551189, -0.0002650863316375762, -0.6267936825752258, -0.030020112171769142, -0.3709857165813446, -0.23488381505012512, -0.08448965847492218, -0.05448434129357338, -0.014946263283491135, -0.19543342292308807, -0.0024324848782271147, -0.8177773356437683, -0.040174927562475204, -1.3425486087799072], "finish_reason": "stop"}], "metrics": {"energy": 164.5673802185058, "energy_per_token": 1.0096158295613853, "time": 6.951387, "time_per_token": 0.04264654601226994}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input is not a DataFrame\")\n    if not df.columns:\n        raise ValueError(\"Empty DataFrame\")\n    if not all([pd.api.types.is_numeric_dtype(col) for col in df.columns]):\n        raise TypeError(\"DataFrame contains non-numeric data\")\n    if len(df.columns) < 2:\n        raise ValueError(f\"DataFrame does not contain at least 2 columns: {df.columns}\")\n    if len(set(df.columns)) < 2:\n        raise ValueError(f\"DataFrame contains duplicate columns: {df.columns}\")\n\n    return sns.scatterplot(data=df, x=col1, y=col2)", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " is", " not", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " not", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Empty", " Data", "Frame", "\"", ")", "\n", "    ", "if", " not", " all", "([", "pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "col", ")", " for", " col", " in", " df", ".", "columns", "]", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", "\"", ")", "\n", "    ", "if", " len", "(", "df", ".", "columns", ")", " <", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Data", "Frame", " does", " not", " contain", " at", " least", " ", "2", " columns", ":", " {", "df", ".", "columns", "}\"", ")", "\n", "    ", "if", " len", "(", "set", "(", "df", ".", "columns", "))", " <", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Data", "Frame", " contains", " duplicate", " columns", ":", " {", "df", ".", "columns", "}\"", ")", "\n", "\n", "    ", "return", " s", "ns", ".", "scatter", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -0.2563993036746979, -0.7669747471809387, -2.119107961654663, -0.016489535570144653, -0.04270285367965698, -0.21692633628845215, -0.01414029486477375, -0.583189845085144, -0.00040928093949332833, -0.003522265236824751, -0.17999280989170074, -0.21448640525341034, -1.1043238639831543, -0.4123642146587372, -0.04831918701529503, -3.101548194885254, -0.9021140933036804, -0.018700718879699707, -0.0007346553611569107, -0.004145837854593992, -0.006300230510532856, -5.090107151772827e-05, -0.006419158075004816, -0.017780786380171776, -2.1061646938323975, -0.25040221214294434, -0.006571468897163868, -0.10793367028236389, -0.00014244495832826942, -0.000705589191056788, -0.0732882171869278, -0.1816236823797226, -0.4147772490978241, -1.3041971921920776, -1.6789519786834717, -2.1560750007629395, -0.0005791893927380443, -0.4692022502422333, -7.998623186722398e-05, -0.002360179089009762, -5.602679812000133e-05, -0.000243634101934731, -0.0018737631617113948, -0.009847867302596569, -0.0005413020844571292, -0.0012618682812899351, -0.0002307625545654446, -0.0010783816687762737, -1.4778393507003784, -0.06598491221666336, -0.025596311315894127, -0.005505755078047514, -0.0012182918144389987, -0.02906700223684311, -0.4104759991168976, -0.06434532254934311, -0.04204640910029411, -0.0008759237825870514, -0.0023277110885828733, -0.0018283093813806772, -0.009839603677392006, -0.00502917030826211, -0.00010585224663373083, -0.04072238877415657, -0.04690142348408699, -1.4374406337738037, -0.5886813402175903, -0.0054602292366325855, -0.00444080401211977, -0.01636112853884697, -0.2275092750787735, -0.050949107855558395, -0.004468100145459175, -0.0044717793352901936, -0.1986474245786667, -0.22739912569522858, -2.0985827445983887, -0.0007621721015311778, -0.05944799259305, -0.59588223695755, -0.07197410613298416, -0.003818127792328596, -0.7686113715171814, -0.0030469917692244053, -0.014602924697101116, -0.00823057722300291, -0.0033707963302731514, -0.0006905793561600149, -0.014721338637173176, -0.031511090695858, -4.565611743601039e-05, -0.007380718365311623, -2.7108395099639893, -0.019660014659166336, -2.3353610038757324, -1.0564095973968506, -2.608097791671753, -0.0015912501839920878, -0.19474194943904877, -1.6561205387115479, -0.0057126120664179325, -0.9577252268791199, -0.001637666835449636, -0.00551915168762207, -0.24239259958267212, -0.036481764167547226, -0.21024061739444733, -0.00563117815181613, -0.0008986725588329136, -0.026469264179468155, -0.000636255950666964, -0.0015731590101495385, -0.3528851568698883, -0.5318727493286133, -1.8439550399780273, -0.0015356664080172777, -3.054298162460327, -0.06440792232751846, -0.060369789600372314, -0.05854592099785805, -0.011693859472870827, -0.3519308865070343, -0.3331608176231384, -0.1273331642150879, -0.003861709963530302, -0.003819909179583192, -0.014089047908782959, -0.0004551566671580076, -0.017077771946787834, -0.009370513260364532, -9.154854342341423e-05, -0.001976324012503028, -0.17088598012924194, -0.003595199668779969, -0.5476557612419128, -0.1361946314573288, -0.5015445351600647, -0.33919328451156616, -0.7865402698516846, -0.017099685966968536, -0.00229904823936522, -0.03927294537425041, -0.0017522709676995873, -0.00029702542815357447, -0.00840991921722889, -0.0002848696312867105, -0.0003620922507252544, -1.2143417596817017, -0.001293656532652676, -2.0026800632476807, -0.03280513361096382, -4.410734163684538e-06, -8.248942322097719e-05, -0.7458814978599548, -0.014197885990142822, -0.005360633600503206, -1.0956435203552246, -0.01516655832529068, -0.0006388768670149148, -0.007922889664769173, -0.013282976113259792, -0.0012973472476005554, -0.008365234360098839, -0.0005595310358330607, -0.00020561488054227084, -0.0008952185744419694, -8.463501580990851e-05, -5.006664650863968e-05, -7.199982064776123e-05, -1.7893266677856445, -8.344646857949556e-07, -1.0728830375228426e-06, -8.070142939686775e-05, -0.00016306500765495002, -0.06255926936864853], "finish_reason": "stop"}], "metrics": {"energy": 219.24716278839114, "energy_per_token": 1.1478909046512624, "time": 8.202892, "time_per_token": 0.042947078534031416}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise TypeError('Data should be in pandas DataFrame format')\n    if df.empty:\n        raise ValueError(f'DataFrame is empty')\n    if not all([col in df.columns for col in [col1, col2]]):\n        raise ValueError(f\"DataFrame doesn't contain specified column names\")\n\n    # TODO: Use seaborn to create scatterplot with linear regression line\n    return sns.regplot(x=col1, y=col2, data=df)", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Type", "Error", "('", "Data", " should", " be", " in", " pandas", " Data", "Frame", " format", "')", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "DataFrame", " is", " empty", "')", "\n", "    ", "if", " not", " all", "([", "col", " in", " df", ".", "columns", " for", " col", " in", " [", "col", "1", ",", " col", "2", "]]", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "DataFrame", " doesn", "'", "t", " contain", " specified", " column", " names", "\"", ")", "\n", "\n", "    ", "#", " TODO", ":", " Use", " se", "ab", "orn", " to", " create", " scatter", "plot", " with", " linear", " regression", " line", "\n", "    ", "return", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "\n", "if"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -1.295313835144043, -6.0794889577664435e-05, -1.8022996187210083, -3.868875503540039, -2.5851001739501953, -0.015136969275772572, -2.994197368621826, -2.404749870300293, -0.7690778970718384, -0.0631314367055893, -0.7534488439559937, -0.5914534330368042, -0.0019382515456527472, -0.23983880877494812, -0.20791076123714447, -0.872441828250885, -0.012937183491885662, -0.05417532101273537, -0.18969762325286865, -0.007860560901463032, -0.0008168459753505886, -0.027598001062870026, -0.05973877012729645, -2.8132995794294402e-05, -2.972774028778076, -2.5026767253875732, -0.43232378363609314, -1.759589672088623, -0.5488852262496948, -0.03472568467259407, -0.3234560489654541, -0.000666277133859694, -0.1017165333032608, -0.1585170328617096, -0.505821168422699, -1.8219451904296875, -1.817115068435669, -0.5692578554153442, -0.3094610273838043, -0.01706160046160221, -0.25740134716033936, -0.0060392278246581554, -0.006126907654106617, -0.0013860390754416585, -0.0005179494037292898, -0.1844840943813324, -0.000705470098182559, -0.0003899767471011728, -0.0008122005965560675, -0.021789675578475, -0.00012778419477399439, -0.001785709522664547, -0.003782738232985139, -0.003739390056580305, -0.0008027906878851354, -0.026250051334500313, -0.02237025648355484, -4.6132929128361866e-05, -0.08756484091281891, -0.09043862670660019, -2.3499202728271484, -0.7275892496109009, -0.692863941192627, -0.002474581589922309, -5.8412379075889476e-06, -0.28705015778541565, -1.9444741010665894, -1.5150163173675537, -2.559018611907959, -0.6146296858787537, -0.001387943746522069, -0.0011728082317858934, -1.2147629261016846, -0.0010983869433403015, -2.0535902976989746, -3.176085948944092, -0.3800491392612457, -4.1685028076171875, -1.2735369205474854, -0.003123882692307234, -0.0010675451485440135, -0.8774107098579407, -2.7839319705963135, -1.4146645069122314, -1.3707706928253174, -0.8786826729774475, -2.8144447803497314, -0.0717184916138649, -0.303661584854126, -0.4784184396266937, -0.08475462347269058, -1.8804216384887695, -0.06084742024540901, -5.364403477869928e-06, -0.000125281119835563, -0.5247352123260498, -0.02508840151131153, -0.002461025258526206, -0.42214423418045044, -0.021764131262898445, -0.018309274688363075, -0.0006420934805646539, -0.0002910667099058628, -0.03051835298538208, -0.0005616756388917565, -0.00017236177518498152, -0.00014745102089364082, -0.004040531348437071, -0.05015702545642853, -0.00283946399576962, -0.0010124086402356625, -0.6145862936973572, -0.30389297008514404, -0.08627068251371384, -0.9277224540710449], "finish_reason": "stop"}], "metrics": {"energy": 131.84652887153626, "energy_per_token": 1.030051006808877, "time": 5.2619023, "time_per_token": 0.04110861171875}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"df is not a DataFrame\")\n    if len(df.columns) == 0:\n        raise ValueError(\"df is empty\")\n    if not set(col1).issubset(df.columns):\n        raise ValueError(\"col1 is not a valid column in df\")\n    if not set(col2).issubset(df.columns):\n        raise ValueError(\"col2 is not a valid column in df\")\n    if df[col1].dtype != float or df[col2].dtype != float:\n        raise TypeError(\"df use non-numeric data\")\n\n    return sns.scatterplot(x=col1, y=col2, data=df)", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " is", " not", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " len", "(", "df", ".", "columns", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " is", " empty", "\"", ")", "\n", "    ", "if", " not", " set", "(", "col", "1", ")", ".", "iss", "ub", "set", "(", "df", ".", "columns", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "col", "1", " is", " not", " a", " valid", " column", " in", " df", "\"", ")", "\n", "    ", "if", " not", " set", "(", "col", "2", ")", ".", "iss", "ub", "set", "(", "df", ".", "columns", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "col", "2", " is", " not", " a", " valid", " column", " in", " df", "\"", ")", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "d", "type", " ", "!", "=", " float", " or", " df", "[", "col", "2", "]", ".", "d", "type", " ", "!", "=", " float", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "df", " use", " non", "-", "numeric", " data", "\"", ")", "\n", "\n", "    ", "return", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "\n", "#"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -0.2563993036746979, -1.7203705310821533, -1.3422536849975586, -0.013525747694075108, -0.039792489260435104, -0.2222539484500885, -0.009642690420150757, -0.37675175070762634, -0.000377583724912256, -0.0034752232022583485, -0.12371506541967392, -0.184309720993042, -1.3106085062026978, -0.0002002515539061278, -0.0026662535965442657, -2.1635515689849854, -0.4426870346069336, -0.009895672090351582, -1.6532411575317383, -0.0030830015894025564, -0.025302521884441376, -0.12420054525136948, -0.010898235253989697, -0.0006845038151368499, -0.006095035932958126, -0.004021652974188328, -3.969590397900902e-05, -0.006572297774255276, -0.015578247606754303, -0.10402930527925491, -0.3648312985897064, -0.020817942917346954, -0.025363773107528687, -5.2569914259947836e-05, -0.0007078525959514081, -0.07307858765125275, -0.1510351449251175, -0.5123864412307739, -3.21901273727417, -0.07226115465164185, -0.9750055074691772, -0.007318828254938126, -0.5182949900627136, -0.07979930937290192, -0.06735227257013321, -0.0015706595731899142, -2.622600959512056e-06, -0.0009313059854321182, -0.12678281962871552, -0.016490591689944267, -0.004245673306286335, -0.8030964136123657, -0.003055786481127143, -0.000583597575314343, -0.0060453894548118114, -0.03033287264406681, -4.8993817472364753e-05, -0.011188151314854622, -1.1514661312103271, -0.1872791200876236, -0.0016586130950599909, -0.3014291524887085, -0.04857824370265007, -0.5722960233688354, -1.57362961769104, -0.0110683748498559, -1.1625547409057617, -0.0891924574971199, -0.0199320949614048, -0.00035446559195406735, -0.0006927236099727452, -0.008164246566593647, -0.010208063758909702, -0.0033635490108281374, -0.0031943507492542267, -0.00022003613412380219, -9.715084888739511e-05, -0.0024291551671922207, -8.475421054754406e-05, -0.0012407946633175015, -2.5987286790041253e-05, -0.000163541772053577, -0.0002420847595203668, -3.814624506048858e-05, -0.00015209948469419032, -0.00017617580306250602, -2.52720492426306e-05, -0.0003625689132604748, -0.0011861439561471343, -0.00018952481332235038, -0.00020656836568377912, -0.0002615109842736274, -2.062299427052494e-05, -0.0006556744920089841, -0.00032443503732793033, -0.0005040090763941407, -0.009817058220505714, -0.0006827168981544673, -9.524368942948058e-05, -0.0011636398267000914, -0.00027938754647038877, -0.0002829628065228462, -0.00038068200228735805, -0.0007086864789016545, -0.0005372511222958565, -0.00012230125139467418, -0.00017414960893802345, -0.3108185827732086, -0.17057302594184875, -0.8802862167358398, -0.3027487099170685, -0.005122275557368994, -0.021830732002854347, -0.002679569413885474, -0.0008789013954810798, -0.2946111261844635, -0.22869831323623657, -1.1883325576782227, -5.245071224635467e-05, -0.0002759314374998212, -1.4278583526611328, -0.24463246762752533, -0.0022257810924202204, -0.0006602014764212072, -4.875540980719961e-05, -0.027027642354369164, -3.981510963058099e-05, -2.3007127310847864e-05, -0.00013636612857226282, -0.0003953390696551651, -0.001427584677003324, -1.1920928244535389e-07, -2.0146166207268834e-05, -0.0023431722074747086, -0.003920133225619793, -0.002702990546822548, -0.0021584564819931984, -0.005778631195425987, -0.007398704532533884, -8.856858039507642e-05, -0.022470736876130104, -0.032391708344221115, -0.31400683522224426, -1.5072309970855713, -0.007383203133940697, -0.004692613612860441, -0.008263563737273216, -0.007156689185649157, -0.05458841845393181, -0.0023658876307308674, -0.006166124250739813, -0.7883152365684509, -0.0018607935635372996, -1.7396796941757202, -0.023882567882537842, -5.245195097813848e-06, -9.238292841473594e-05, -0.8160616755485535, -0.015219980850815773, -0.006014581304043531, -0.6838510632514954, -0.01585003174841404, -0.08231357485055923, -0.000691770575940609, -0.00021002470748499036, -0.02267015166580677, -0.00020787939138244838, -8.177422569133341e-05, -0.00010442188795423135, -0.004963813349604607, -0.06701721251010895, -0.0016031521372497082, -0.00034290633630007505, -0.6640074253082275, -0.3199695348739624, -0.07482793927192688, -2.208400249481201], "finish_reason": "stop"}], "metrics": {"energy": 212.9869009656905, "energy_per_token": 1.1035590723610906, "time": 8.543453, "time_per_token": 0.04426659585492228}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(f\"Input dataframe not a pandas dataframe: {df}\")\n    if df.empty:\n        raise ValueError(f\"Input dataframe is empty: {df}\")\n    if not (\n        pd.api.types.is_numeric_dtype(df[col1]) and pd.api.types.is_numeric_dtype(df[col2])\n    ):\n        raise TypeError(\n            f\"Columns {col1} or {col2} not of numeric type in input dataframe: {df}\"\n        )\n    return sns.relplot(\n        x=col1,\n        y=col2,\n        data=df,\n        kind=\"scatter\",\n        x_jitter=True,\n        y_jitter=True,\n    )", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Input", " data", "frame", " not", " a", " pandas", " data", "frame", ":", " {", "df", "}\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Input", " data", "frame", " is", " empty", ":", " {", "df", "}\"", ")", "\n", "    ", "if", " not", " (", "\n", "        ", "pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "df", "[", "col", "1", "])", " and", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "df", "[", "col", "2", "])", "\n", "    ", "):", "\n", "        ", "raise", " Type", "Error", "(", "\n", "            ", "f", "\"", "Columns", " {", "col", "1", "}", " or", " {", "col", "2", "}", " not", " of", " numeric", " type", " in", " input", " data", "frame", ":", " {", "df", "}\"", "\n", "        ", ")", "\n", "    ", "return", " s", "ns", ".", "rel", "plot", "(", "\n", "        ", "x", "=", "col", "1", ",", "\n", "        ", "y", "=", "col", "2", ",", "\n", "        ", "data", "=", "df", ",", "\n", "        ", "kind", "=", "\"", "scatter", "\"", ",", "\n", "        ", "x", "_", "j", "itter", "=", "True", ",", "\n", "        ", "y", "_", "j", "itter", "=", "True", ",", "\n", "    ", ")", "\n", "\n", "def"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -1.7060471773147583, -0.21568351984024048, -1.0094468593597412, -2.2851130962371826, -1.4912670850753784, -3.9045329093933105, -0.7461166381835938, -1.4810898303985596, -0.8424055576324463, -0.029728662222623825, -1.7576106786727905, -0.09027319401502609, -0.7889545559883118, -0.32582414150238037, -0.0007370378007180989, -0.007885634899139404, -0.22965411841869354, -0.28857389092445374, -0.8278217315673828, -0.013578434474766254, -0.04922927916049957, -0.09967164695262909, -0.006694981828331947, -0.0005403488758020103, -0.020240548998117447, -0.007054422050714493, -5.149708886165172e-05, -0.008684721775352955, -0.35281598567962646, -0.008337335661053658, -0.5158528685569763, -0.06307279318571091, -0.021041151136159897, -0.48078620433807373, -0.010493814945220947, -0.17863701283931732, -0.008115294389426708, -0.004170292988419533, -0.021336892619729042, -0.00016592556494288146, -0.0006551980040967464, -0.147336944937706, -0.15885218977928162, -0.5189690589904785, -1.6248048543930054, -2.318575859069824, -0.08651714026927948, -2.066157341003418, -0.0008263748604804277, -0.12372949719429016, -0.00017009719158522785, -0.0035818961914628744, -3.0040289857424796e-05, -0.0023310412652790546, -0.0006104036583565176, -0.047689154744148254, -0.00018439977429807186, -0.0035875977482646704, -0.0001716466504149139, -0.0009168949909508228, -0.009096844121813774, -0.07114455848932266, -0.002841722685843706, -0.0010009760735556483, -0.036588650196790695, -0.9760846495628357, -0.258117139339447, -0.0008276851149275899, -0.0010630200849846005, -2.3841855067985307e-07, -2.5987286790041253e-05, -3.3378546504536644e-06, -2.539125671319198e-05, -1.7404405298293568e-05, -0.00021681819634977728, -1.6689286894688848e-06, -2.622600959512056e-06, -0.00043847484630532563, -4.8636207793606445e-05, -0.0012175773736089468, -0.00022599527437705547, -2.729855441430118e-05, -0.0012809175532311201, -0.002975443610921502, -0.0009372609201818705, -0.007235395256429911, -0.0038161089178174734, -0.014352541416883469, -0.0018731682794168591, -0.016434071585536003, -0.011188033036887646, -9.119095193454996e-05, -0.007062707561999559, -1.5086193084716797, -0.004206500016152859, -0.07190732657909393, -0.008841532282531261, -3.006019115447998, -0.6303333640098572, -0.010522362776100636, -0.0006150499684736133, -0.021772295236587524, -3.128838062286377, -0.006900408770889044, -0.00035982808913104236, -0.004969032481312752, -0.004782784264534712, -3.0818960666656494, -2.3847312927246094, -0.3002074658870697, -1.0637781620025635, -1.6330032348632812, -1.3326776027679443, -0.17240935564041138, -0.023347586393356323, -0.25509971380233765, -0.035322971642017365, -0.01580239273607731, -0.10220807790756226, -0.011077453382313251, -0.0010509926360100508, -0.0009111781837418675, -0.0010718321427702904, -0.49123069643974304, -1.2629064321517944, -0.031241102144122124, -6.198863957251888e-06, -0.00010489867418073118, -2.8353044986724854, -0.005542269442230463, -0.0015942256432026625, -0.6258618235588074, -0.002085417043417692, -0.3552427589893341, -0.0017589349299669266, -0.014905393123626709, -0.0010793342953547835, -0.00024029705673456192, -0.471202552318573, -4.494089080253616e-05, -0.0008622265886515379, -4.303362584323622e-05, -6.41325386823155e-05, -8.21318244561553e-05, -0.00011562632425921038, -0.000952267087996006, -0.0002455409849062562, -0.14439308643341064, -0.00021646064124070108, -0.0002575780963525176, -0.009283235296607018, -0.005326603073626757, -0.0777861550450325, -0.9730477929115295, -0.06077371910214424, -0.0032574469223618507, -0.03504836931824684, -0.00027247529942542315, -0.0035310557577759027, -0.005668161902576685, -0.05366240441799164, -4.013821125030518, -0.0016686100279912353, -0.03232118859887123, -0.0014910305617377162, -0.00119138287845999, -0.8466618657112122, -0.0017728578532114625, -0.020116476342082024, -0.02502852864563465, -0.1325893998146057, -7.366862701019272e-05, -0.00042417587246745825, -0.0002719986077863723, -7.998623186722398e-05, -0.006672127638012171, -0.012169399298727512, -0.002780977636575699, -1.6497092247009277, -0.6746171116828918, -0.48776736855506897, -0.04364956542849541, -1.1792583465576172], "finish_reason": "stop"}], "metrics": {"energy": 193.10820501899718, "energy_per_token": 0.970392990045212, "time": 8.411326, "time_per_token": 0.04226796984924624}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame) or df.empty:\n        raise ValueError('Invalid dataframe.')\n\n    if not all(isinstance(col, str) for col in [col1, col2]):\n        raise TypeError('The inputs must be strings.')\n\n    if df.dtypes[col1].name in [\"O\", \"category\"]:\n        raise TypeError(\n            f\"The dataframe must have numeric values in the column {col1}.\")\n\n    if df.dtypes[col2].name in [\"O\", \"category\"]:\n        raise TypeError(\n            f\"The dataframe must have numeric values in the column {col2}.\")\n\n    if (\n        not all(col in df for col in [col1, col2])\n        or len(set(df[col1]).difference(set(df[col2]))) != 0\n    ):\n        raise ValueError(\"The columns must be the same.\")\n\n    df = df.sort_values(by=[col1, col2])\n", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "('", "Invalid", " data", "frame", ".", "')", "\n", "\n", "    ", "if", " not", " all", "(", "is", "instance", "(", "col", ",", " str", ")", " for", " col", " in", " [", "col", "1", ",", " col", "2", "]", "):", "\n", "        ", "raise", " Type", "Error", "('", "The", " inputs", " must", " be", " strings", ".", "')", "\n", "\n", "    ", "if", " df", ".", "d", "types", "[", "col", "1", "]", ".", "name", " in", " [", "\"", "O", "\"", ",", " \"", "category", "\"", "]:", "\n", "        ", "raise", " Type", "Error", "(", "\n", "            ", "f", "\"", "The", " data", "frame", " must", " have", " numeric", " values", " in", " the", " column", " {", "col", "1", "}", ".", "\"", ")", "\n", "\n", "    ", "if", " df", ".", "d", "types", "[", "col", "2", "]", ".", "name", " in", " [", "\"", "O", "\"", ",", " \"", "category", "\"", "]:", "\n", "        ", "raise", " Type", "Error", "(", "\n", "            ", "f", "\"", "The", " data", "frame", " must", " have", " numeric", " values", " in", " the", " column", " {", "col", "2", "}", ".", "\"", ")", "\n", "\n", "    ", "if", " (", "\n", "        ", "not", " all", "(", "col", " in", " df", " for", " col", " in", " [", "col", "1", ",", " col", "2", "])", "\n", "        ", "or", " len", "(", "set", "(", "df", "[", "col", "1", "])", ".", "difference", "(", "set", "(", "df", "[", "col", "2", "]", ")))", " ", "!", "=", " ", "0", "\n", "    ", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " columns", " must", " be", " the", " same", ".", "\"", ")", "\n", "\n", "    ", "df", " =", " df", ".", "sort", "_", "values", "(", "by", "=[", "col", "1", ",", " col", "2", "])", "\n"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -2.067028522491455, -0.018761439248919487, -0.451700896024704, -0.01910557597875595, -0.03167082741856575, -0.7216967940330505, -0.012696151621639729, -0.0021466801408678293, -0.01951892115175724, -0.011680898256599903, -2.1576648578047752e-05, -1.7051622867584229, -1.8771789073944092, -2.178279161453247, -0.6572646498680115, -1.7842135429382324, -0.15373407304286957, -0.0036235882434993982, -0.8250800967216492, -0.0006144542712718248, -0.5132774710655212, -0.7018068432807922, -1.8000123500823975, -0.1260756105184555, -1.1904433965682983, -0.04863604158163071, -0.0014398456551134586, -1.1869986057281494, -0.0388813316822052, -0.20236703753471375, -0.0002213471452705562, -0.016357023268938065, -0.00157196877989918, -0.0005052005290053785, -0.29078221321105957, -0.001971802907064557, -0.000266278104390949, -0.0005430892342701554, -0.005029526073485613, -0.00015925093612167984, -0.046875376254320145, -0.001958834705874324, -0.0051218015141785145, -0.0014244896592572331, -0.015819992870092392, -0.02163943089544773, -3.2543604902457446e-05, -0.0696868747472763, -3.1246817111968994, -4.232617378234863, -0.8815226554870605, -0.01860968768596649, -0.29791513085365295, -0.24435454607009888, -0.009866399690508842, -0.0008400725200772285, -0.04037301987409592, -0.0003466005437076092, -0.22629325091838837, -1.7192821502685547, -1.5141973495483398, -1.2349666357040405, -0.005463430192321539, -0.4402536153793335, -0.008158097974956036, -0.0027969072107225657, -0.0004328744253143668, -0.05573683977127075, -1.0453236103057861, -2.5492968559265137, -2.52075457572937, -0.56329745054245, -2.372974395751953, -0.000163541772053577, -0.04525972530245781, -0.040985822677612305, -1.0490102767944336, -0.00010597144137136638, -0.5011861324310303, -0.014905980788171291, -0.004672323819249868, -0.07440364360809326, -0.030305463820695877, -0.0001823735801735893, -1.3917465209960938, -1.837235689163208, -0.008963820524513721, -1.130211591720581, -0.49320974946022034, -1.1864582300186157, -1.127174735069275, -1.4511237144470215, -1.8718507289886475, -1.7785637378692627, -0.9622210264205933, -2.6481196880340576, -0.9468892812728882, -0.7782807946205139, -1.015786051750183, -0.6010344624519348, -0.005416479427367449, -0.0028148575220257044, -0.2498563826084137, -0.11665462702512741, -0.05083060264587402, -1.4471944570541382, -0.0016734894597902894, -0.3688682019710541, -0.00031990656862035394, -0.08725112676620483, -0.012728285044431686, -0.0071287560276687145, -0.0024364092387259007, -2.1934269170742482e-05, -0.0005514293443411589, -0.00017355366435367614, -0.009714235551655293, -4.4225667807040736e-05, -0.00019298121333122253, -7.295342220459133e-05, -0.004778394475579262, -0.0007288183551281691, -0.0021509623620659113, -0.0012754409108310938, -1.7881377516459906e-06, -0.0002157455455744639, -0.0008382858941331506, -0.00018046658078674227, -1.1205610462639015e-05, -0.00116637849714607, -0.0023807534016668797, -0.00032443503732793033, -0.0017884464468806982, -0.00014065706636756659, -2.455681169521995e-05, -0.0012394849909469485, -0.0346800871193409, -0.0010598048102110624, -0.0012367465533316135, -0.0014598437119275331, -0.0005800233921036124, -0.0006117141456343234, -0.00017975145601667464, -0.000248401309363544, -0.00044145373976789415, -0.0004960260121151805, -0.0003554189461283386, -0.00017998983094003052, -0.0011392300948500633, -0.0004338276921771467, -0.0007650309125892818, -7.784063927829266e-05, -0.017145857214927673, -0.0021334760822355747, -0.00019941726350225508, -0.0006062338361516595, -0.05079423263669014, -0.0011248220689594746, -0.03391660749912262, -0.0009064141195267439, -3.0111312866210938, -3.046844482421875, -1.29453706741333, -0.020497171208262444, -1.7966461181640625, -1.4326876401901245, -0.08313710242509842, -1.493224859237671, -0.12384851276874542, -0.005874155554920435, -1.8620104789733887, -0.0002256377338198945, -0.00025769727653823793, -0.0142378443852067, -0.004339089151471853, -0.000824230897706002, -0.0008218486327677965, -0.0007427555974572897, -0.00035279724397696555, -0.00813504122197628, -0.03339457884430885, -0.06139444559812546, -0.012220391072332859, -2.2118582725524902, -0.013910486362874508, -2.9883337020874023, -0.2808138430118561, -0.18432022631168365, -0.6179677248001099, -0.009012141264975071, -0.026492714881896973, -0.5200325846672058, -1.0395504236221313, -1.7384144067764282, -0.08675490319728851, -0.259101927280426, -0.1455613523721695, -0.27140069007873535, -0.03822420910000801, -0.00316987163387239, -0.29273706674575806, -0.015372131019830704, -0.004567547235637903, -0.9523366689682007, -5.602820692729438e-06, -6.6756979322235566e-06, -0.049147795885801315, -0.0013377059949561954, -0.003632496576756239, -0.08193879574537277, -0.006450427696108818, -0.01012333668768406, -0.004765343852341175, -0.05097946897149086, -0.20275965332984924, -1.0371154530730564e-05, -0.20516705513000488, -1.3900667428970337, -0.9598247408866882, -1.3554630279541016, -1.302153468132019, -0.2681753635406494, -1.3929059505462646, -0.030542749911546707, -0.7787550687789917, -0.0172345619648695, -0.00066985102603212, -0.003253644797950983, -0.032442834228277206, -0.0004923323867842555, -2.3299765586853027, -1.355338454246521, -0.1325618475675583, -0.7516916394233704, -1.879008173942566, -0.011084172874689102, -0.06571626663208008, -0.7165855169296265, -0.2344263792037964, -0.37516117095947266, -0.003079555230215192, -0.044102396816015244, -0.4873694181442261, -0.002087558386847377, -0.0011267272057011724, -0.31768935918807983, -0.06611223518848419], "finish_reason": "length"}], "metrics": {"energy": 277.2174236946108, "energy_per_token": 1.0828805613070733, "time": 11.143862, "time_per_token": 0.0435307109375}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input must be a dataframe.\")\n    if len(df) == 0:\n        raise ValueError(\"Input dataframe is empty.\")\n    if len(df) == 1:\n        raise ValueError(\"Input dataframe contains only 1 row.\")\n    if not df[col1].dtype.name.upper().startswith(\"NUM\"):\n        raise TypeError(\"Input DataFrame does not contain numeric data.\")\n    if not df[col2].dtype.name.upper().startswith(\"NUM\"):\n        raise TypeError(\"Input DataFrame does not contain numeric data.\")\n\n    sns.scatterplot(x=col1, y=col2, data=df, alpha=0.5,\n                    color='orange')\n    sns.regplot(x=col1, y=col2, data=df)\n\n    return plt.gca()", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " must", " be", " a", " data", "frame", ".", "\"", ")", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", "frame", " is", " empty", ".", "\"", ")", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "1", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", "frame", " contains", " only", " ", "1", " row", ".", "\"", ")", "\n", "    ", "if", " not", " df", "[", "col", "1", "]", ".", "d", "type", ".", "name", ".", "upper", "()", ".", "start", "sw", "ith", "(", "\"", "NUM", "\"", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " Data", "Frame", " does", " not", " contain", " numeric", " data", ".", "\"", ")", "\n", "    ", "if", " not", " df", "[", "col", "2", "]", ".", "d", "type", ".", "name", ".", "upper", "()", ".", "start", "sw", "ith", "(", "\"", "NUM", "\"", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " Data", "Frame", " does", " not", " contain", " numeric", " data", ".", "\"", ")", "\n", "\n", "    ", "s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ",", " alpha", "=", "0", ".", "5", ",", "\n", "                ", "    ", "color", "='", "orange", "')", "\n", "    ", "s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "\n", "    ", "return", " plt", ".", "g", "ca", "()"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -0.2563993036746979, -0.7669747471809387, -1.4403893947601318, -0.0027291453443467617, -0.05442101135849953, -3.4290785789489746, -0.13102489709854126, -1.1428139209747314, -0.0239429771900177, -0.00038985759601928294, -0.0029478687793016434, -0.22725810110569, -0.214371919631958, -1.4383496046066284, -0.00027378625236451626, -0.0024405713193118572, -0.1281708925962448, -0.23500877618789673, -0.0008158930577337742, -0.0001711698860162869, -0.0672556459903717, -0.010324167087674141, -0.0006914132391102612, -0.012203904800117016, -0.00342996115796268, -3.766942609217949e-05, -0.004690003115683794, -0.0056464700028300285, -0.4506562054157257, -0.29249945282936096, -0.11563326418399811, -0.7384857535362244, -0.005845238454639912, -0.06224814057350159, -0.0038463911041617393, -0.00010168035078095272, -0.0005340342177078128, -0.1306649148464203, -0.16961988806724548, -3.0667941570281982, -0.011067314073443413, -0.24558529257774353, -2.1866018772125244, -1.2630720138549805, -0.007306994404643774, -0.04990608990192413, -0.051210541278123856, -0.011167403310537338, -0.001261153956875205, -0.1057855486869812, -0.07025542110204697, -0.00012599628826137632, -0.005779223516583443, -0.03952610492706299, -0.18900947272777557, -0.026233911514282227, -0.007060221862047911, -1.6247881650924683, -0.2084723263978958, -2.2114343643188477, -0.0019312318181619048, -0.3418556749820709, -0.08364652097225189, -0.05391782149672508, -0.00044907975825481117, -0.0013642538106068969, -0.22092866897583008, -0.20531736314296722, -0.7787185907363892, -1.0116010904312134, -0.8120333552360535, -0.003320063930004835, -0.002367552602663636, -0.0009908534120768309, -9.333651541965082e-05, -0.6508759260177612, -0.18290594220161438, -0.041154008358716965, -0.6923461556434631, -0.11786811798810959, -3.3607091903686523, -0.0010765953920781612, -0.3892543613910675, -0.4393196105957031, -9.524368942948058e-05, 0.0, -0.709770679473877, -0.017637787386775017, -0.6669907569885254, -0.498331755399704, -0.25080060958862305, -0.005854245740920305, -0.0027599360328167677, -0.017421433702111244, -0.01231848169118166, -0.00014661667228210717, -0.02785123512148857, -0.5352646708488464, -1.4702682495117188, -2.2343273162841797, -0.19308282434940338, -2.675062417984009, -0.011045502498745918, -0.3230692446231842, -0.4241335093975067, -0.45314836502075195, -0.4323960542678833, -0.016296273097395897, -0.0030629171524196863, -0.0030816944781690836, -0.04782712459564209, -0.04791485145688057, -0.008595611900091171, -0.0035149003379046917, -0.004395229276269674, -9.560128091834486e-05, -0.011447696015238762, -4.2914423829643056e-05, -1.4543427823809907e-05, -0.0004107108688913286, -0.0020768519025295973, -0.00019047829846385866, -9.703165414975956e-05, -0.00012385078298393637, -0.0007258402765728533, -1.8358061424805783e-05, -4.589452510117553e-05, -0.00013243274588603526, -4.160317621426657e-05, -1.7881377516459906e-06, -0.0007076143519952893, -8.785339014139026e-05, -0.0002735478919930756, -2.9682672902708873e-05, -0.0007015389273874462, -0.0004909025738015771, -0.0007584794075228274, -0.0006914132391102612, -0.00029488030122593045, -2.50339189733495e-06, -0.00045170116936787963, -0.0013178244698792696, -0.00884141493588686, -0.0066126808524131775, -0.001534000039100647, -0.0029155388474464417, -0.0001401803019689396, -0.0005436849314719439, -0.0006842655711807311, -0.00024875884992070496, -0.0015091231325641274, -0.00047291061491705477, -0.0008437649230472744, -0.000734297966118902, -0.9562965035438538, -0.0028101024217903614, -1.7027428150177002, -0.0024312958121299744, -0.0040903957560658455, -0.7262648940086365, -0.006519122049212456, -0.002715354785323143, -0.6698087453842163, -0.025428740307688713, -0.21477389335632324, -0.0004970983718521893, -0.0003424296446610242, -0.018972942605614662, -0.00036125810584053397, -0.00014757021563127637, -0.00011491115583339706, -0.0022716925013810396, -0.12628178298473358, -0.0029344377107918262, -0.0005843124235980213, -1.1852710247039795, -2.135972023010254, -0.009197602979838848, -0.14240559935569763, -0.002024388173595071, -0.7080121636390686, -1.2365367412567139, -3.736999988555908, -0.023386366665363312, -0.06494774669408798, -1.0400470495224, -0.6384337544441223, -4.244614601135254, -2.45955228805542, -0.16204048693180084, -0.26300591230392456, -0.6194513440132141, -0.0019052940187975764, -0.0004724340105894953, -0.061520226299762726, -0.031247342005372047, -0.0018333070911467075, -0.047854285687208176, -0.003224057611078024, -0.003976178355515003, -0.0006874820101074874, -8.749579137656838e-05, -0.0021572669502347708, -0.00010597144137136638, -0.00018761781393550336, -0.00020203932945150882, -0.0007933806627988815, -0.09702891111373901, -0.0003069168305955827, -0.00032431588624604046, -1.9847283363342285, -0.021123789250850677, -1.1406484842300415, -0.06038808077573776, -0.1267748475074768, -0.10099051147699356, -0.05874883756041527, -0.018995048478245735, -0.20946060121059418, -0.0024635223671793938], "finish_reason": "stop"}], "metrics": {"energy": 240.13020344352734, "energy_per_token": 1.0175008620488446, "time": 10.309263, "time_per_token": 0.043683317796610166}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input must be a DataFrame.\")\n    if not df.empty:\n        if not df[col1].dtype.name.upper() in ['INT', 'FLOAT']:\n            raise TypeError('input data is not numeric')\n        if not df[col2].dtype.name.upper() in ['INT', 'FLOAT']:\n            raise TypeError('input data is not numeric')\n        sns.scatterplot(df, col1, col2)\n    return plt.gcf().axes[0]", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " must", " be", " a", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " not", " df", ".", "empty", ":", "\n", "        ", "if", " not", " df", "[", "col", "1", "]", ".", "d", "type", ".", "name", ".", "upper", "()", " in", " ['", "INT", "'", ",", " '", "FLO", "AT", "']", ":", "\n", "            ", "raise", " Type", "Error", "('", "input", " data", " is", " not", " numeric", "')", "\n", "        ", "if", " not", " df", "[", "col", "2", "]", ".", "d", "type", ".", "name", ".", "upper", "()", " in", " ['", "INT", "'", ",", " '", "FLO", "AT", "']", ":", "\n", "            ", "raise", " Type", "Error", "('", "input", " data", " is", " not", " numeric", "')", "\n", "        ", "s", "ns", ".", "scatter", "plot", "(", "df", ",", " col", "1", ",", " col", "2", ")", "\n", "    ", "return", " plt", ".", "g", "cf", "()", ".", "axes", "[", "0", "]", "\n", "\n", "def"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -0.2563993036746979, -0.7669747471809387, -1.4403893947601318, -0.0027291453443467617, -0.05442101135849953, -0.5013555884361267, -0.011924177408218384, -1.2267897129058838, -0.010544302873313427, -0.00020656836568377912, -0.0021416840609163046, -0.16111399233341217, -0.14390915632247925, -1.0567281246185303, -0.4306826591491699, -0.045993536710739136, -0.24026967585086823, -0.04453267529606819, -0.014894118532538414, -0.0069221924059093, -0.3475179672241211, -0.8871418833732605, -1.3006303310394287, -0.38364699482917786, -0.0033762615639716387, -0.001747867907397449, -0.001260320539586246, -0.00013839241000823677, -0.6628099083900452, -0.1598283350467682, -0.11527086794376373, -0.7703431248664856, -0.2582257091999054, -3.4950735569000244, -0.0010644490830600262, -1.3313817977905273, -0.6404936909675598, -0.2768065333366394, -0.5728724002838135, -0.0010453957365825772, -0.09308262914419174, -0.4080428183078766, -0.0009447640040889382, -0.2459532767534256, -0.2076582908630371, -0.005114922299981117, -0.009546108543872833, -0.019451580941677094, -0.018219495192170143, -0.00018499570433050394, -2.168865442276001, -4.333545207977295, -1.7373974323272705, -1.743529200553894, -0.43680310249328613, -0.22295089066028595, -0.15266282856464386, -0.003204094711691141, -0.37710100412368774, -0.10555656254291534, -0.015456413850188255, -0.013782335445284843, -0.0016271935310214758, -6.01988795096986e-05, -0.008427532389760017, -6.69933797325939e-05, -2.1219027985353023e-05, -0.00031895318534225225, -0.003450394608080387, -0.00021050144277978688, -9.7508447652217e-05, -0.000565249880310148, -0.00012706902634818107, -0.0016287406906485558, -0.0006680640508420765, -0.0006313714548014104, -0.0009975224966183305, -0.00011240804451517761, -3.576214658096433e-05, -0.0023983544670045376, -0.0002356490003876388, -2.3841830625315197e-06, -0.0018319981172680855, -0.0008172033121809363, -0.0003097769513260573, -0.002889864146709442, -0.00136461085639894, -0.0003780603874474764, -5.006777428206988e-06, -0.004363064654171467, -0.012308825738728046, -0.0006386386230587959, -0.0007456144667230546, -0.00040820849244482815, -0.00022742546570952982, -0.0007160721579566598, -0.002975800074636936, -0.5784488916397095, -1.9972832202911377, -0.0025446198415011168, -0.006718546152114868, -0.4665985405445099, -0.018954694271087646, -0.0044127944856882095, -2.2261123657226562, -0.6012530326843262, -1.711674451828003, -0.027793150395154953, -0.07241573929786682, -0.013793857768177986, -0.0002858230145648122, -0.2139703631401062, -0.050544701516628265, -0.832065999507904, -1.811235785484314, -0.19573555886745453, -0.27733099460601807, -0.009824376553297043, -1.452134370803833, -0.004236651584506035, -0.03974036127328873, -0.1929756999015808, -0.5901399850845337, -0.006185554433614016, -0.3184064030647278, -0.382896363735199, -0.08081327378749847, -1.1159673929214478], "finish_reason": "stop"}], "metrics": {"energy": 139.4651220617295, "energy_per_token": 0.9685077920953437, "time": 6.1042585, "time_per_token": 0.04239068402777778}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input should be a DataFrame\")\n    if len(df) == 0:\n        raise ValueError(\"DataFrame should not be empty\")\n    if not isinstance(df[col1], pd.core.dtypes.common.numeric_dtypes):\n        raise TypeError(\"Input should be numerical\")\n    if not isinstance(df[col2], pd.core.dtypes.common.numeric_dtypes):\n        raise TypeError(\"Input should be numerical\")\n\n    df.plot.scatter(col1, col2)\n    return plt.gca()", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " should", " be", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "DataFrame", " should", " not", " be", " empty", "\"", ")", "\n", "    ", "if", " not", " isinstance", "(", "df", "[", "col", "1", "]", ",", " pd", ".", "core", ".", "d", "types", ".", "common", ".", "numeric", "_", "d", "types", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " should", " be", " numerical", "\"", ")", "\n", "    ", "if", " not", " isinstance", "(", "df", "[", "col", "2", "]", ",", " pd", ".", "core", ".", "d", "types", ".", "common", ".", "numeric", "_", "d", "types", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " should", " be", " numerical", "\"", ")", "\n", "\n", "    ", "df", ".", "plot", ".", "scatter", "(", "col", "1", ",", " col", "2", ")", "\n", "    ", "return", " plt", ".", "g", "ca", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -0.18114033341407776, -0.2563993036746979, -0.7669747471809387, -2.392005681991577, -0.00666087819263339, -0.13509859144687653, -0.5056605935096741, -0.02460617385804653, -0.632570743560791, -0.0002917817619163543, -0.0032728936057537794, -0.152731791138649, -0.19147488474845886, -1.3325955867767334, -0.0002580548170953989, -0.003085140837356448, -0.16924835741519928, -0.20956984162330627, -0.0007359656738117337, -0.00015567521040793508, -0.06678519397974014, -0.010329594835639, -0.0006210067658685148, -0.010476828552782536, -0.004017141181975603, -3.9934315282152966e-05, -0.005771756637841463, -0.005327195860445499, -2.1369779109954834, -1.1205562353134155, -0.3629691004753113, -0.00383130949921906, -0.0064202239736914635, -0.0452960729598999, -6.818538531661034e-05, -0.0004568248405121267, -0.1118730679154396, -0.1762159764766693, -0.400671124458313, -2.255618095397949, -0.000417741306591779, -0.3303794860839844, -0.4253199100494385, -0.0026295154821127653, -0.0010577804641798139, -0.013410956598818302, -0.40468135476112366, -0.2564091682434082, -0.0009260656661354005, -1.1158604621887207, -0.00016926287207752466, -0.9976566433906555, -0.007312201429158449, -7.486063259420916e-05, -0.14338263869285583, -0.003335153218358755, -2.3101279735565186, -0.00038580605178140104, -1.2997173070907593, -0.003107126336544752, -0.2025071382522583, -0.005793209187686443, -0.0027237955946475267, -0.010028217919170856, -0.015703000128269196, -9.381330892210826e-05, -0.032697152346372604, -0.2673267722129822, -1.8838002681732178, -1.2027157545089722, -0.5398303270339966, -3.061094045639038, -0.6218069195747375, -0.004973658360540867, -0.005462244618684053, -0.029040832072496414, -0.02441738173365593, -0.0043173679150640965, -0.005653819069266319, -6.925819616299123e-05, -0.0011697123991325498, -0.00011288482346571982, -2.2649508537142538e-05, -0.0030055134557187557, -2.6940935640595853e-05, -0.00015639036428183317, -0.0008251837571151555, -8.583032467868179e-06, -3.790783375734463e-05, -1.1920928244535389e-07, -8.904537389753386e-05, -0.0010926711838692427, 0.0, -1.680836794548668e-05, -1.1920928244535389e-07, -8.237022848334163e-05, -1.311301275563892e-06, -1.4543427823809907e-05, -0.00013147920253686607, -0.0006789048202335835, -0.00038675934774801135, -0.0006923662149347365, -0.00036793138133361936, -0.0002924968139268458, -1.7881377516459906e-06, -0.0005261705373413861, -0.00024101213784888387, -0.06557794660329819, -0.005457621067762375, -0.000595034915022552, -0.0007444233051501215, -0.0011031500762328506, -0.000624104228336364, -0.0005689432728104293, -0.9420286417007446, -0.0023505459539592266, -2.8574297428131104, -1.769012212753296, -0.25554221868515015, -0.3543061316013336, -0.01027543842792511, -0.014118198305368423, -1.193263053894043, -0.0008010039455257356, -0.005272530950605869, -0.01965615712106228, -3.516612196108326e-05, -0.9318358898162842, -0.029765458777546883, -0.174056738615036, -0.45359697937965393, -0.06360137462615967, -0.04577377811074257, -0.004828103817999363, -0.08668549358844757, -0.0018861376447603106, -1.394558072090149, -3.576278118089249e-07, -8.344646857949556e-07, -8.713819261174649e-05, -0.00038961926475167274, -0.11804378032684326], "finish_reason": "stop"}], "metrics": {"energy": 159.29750549125671, "energy_per_token": 1.0146337929379408, "time": 6.5178046, "time_per_token": 0.04151467898089172}}
{"outputs": [{"text": "df = pd.DataFrame(df)\n    if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"input is not a DataFrame\")\n    if len(df) == 0:\n        raise ValueError(\"df is empty\")\n    if df.columns.dtype.names[0] not in ('int', 'float'):\n        raise TypeError(\"df contains non-numeric data\")\n    if col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(\"df does not contain the specified columns\")\n\n    plot = sns.regplot(x=col1, y=col2, data=df)\n    return plot", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "df", ")", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "input", " is", " not", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " is", " empty", "\"", ")", "\n", "    ", "if", " df", ".", "columns", ".", "d", "type", ".", "names", "[", "0", "]", " not", " in", " ('", "int", "'", ",", " '", "float", "')", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "df", " contains", " non", "-", "numeric", " data", "\"", ")", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " does", " not", " contain", " the", " specified", " columns", "\"", ")", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "return", " plot", "\n", "\n", "def"], "logprobs": [-3.2964537143707275, -0.3175926208496094, -1.1006531715393066, -0.005409247241914272, -0.1484670490026474, -0.07976551353931427, -0.03710970655083656, -0.06470910459756851, -0.05629275366663933, -0.2563002109527588, -0.3904339075088501, -0.47406741976737976, -0.17181722819805145, -0.00039521988946944475, -0.016240915283560753, -0.013387196697294712, -0.03723582252860069, -1.585470999998506e-05, -0.19738411903381348, -0.3162858486175537, -0.008398097939789295, -0.002720823511481285, -0.022296113893389702, -0.29914960265159607, -7.879423355916515e-05, -0.2114744782447815, -0.3226639926433563, -3.541246175765991, -1.6663607358932495, -0.03863408789038658, -0.1937447041273117, -0.23837266862392426, -0.025777095928788185, -0.24490852653980255, -0.00047946401173248887, -0.004897265695035458, -0.0809965506196022, -0.25460466742515564, -1.3396472930908203, -0.00031120702624320984, -0.006390730384737253, -0.22784031927585602, -0.24397914111614227, -0.0011314902221783996, -0.00032145579461939633, -0.05226645618677139, -0.010483316145837307, -0.0006512666586786509, -0.012180822901427746, -0.004898689221590757, -3.015949550899677e-05, -0.009383739903569221, -0.003493636380881071, -3.0543055534362793, -0.10902193188667297, -0.021841811016201973, -0.02650490403175354, -9.226373367710039e-05, -0.0005272428970783949, -0.07508630305528641, -0.20389214158058167, -2.5955557823181152, -0.4823313057422638, -1.4842567443847656, -0.4096401631832123, -0.6402143836021423, -0.5224977731704712, -1.3559235334396362, -3.4619696140289307, -2.4667203426361084, -0.021086322143673897, -0.006671180482953787, -1.6920958757400513, -0.000502817565575242, -3.261643648147583, -0.8365568518638611, -1.2916808128356934, -0.0012968709925189614, -0.035869985818862915, -0.12999886274337769, -0.1367771327495575, -0.06831780821084976, -0.0064103929325938225, -0.003135885111987591, -0.03269403427839279, -0.019515646621584892, -0.00024053541710600257, -0.08966393023729324, -0.11506731063127518, -0.7013854384422302, -1.621199131011963, -0.012784780003130436, -0.012496385723352432, -0.03862307593226433, -0.11353004723787308, -0.029283514246344566, -0.0034633437171578407, -0.004148212261497974, -0.16955327987670898, -0.29596593976020813, -0.4381394386291504, -0.009721319191157818, -0.06997335702180862, -0.00013541258522309363, -0.009046046994626522, -0.14488565921783447, -0.005481570027768612, -0.8708510994911194, -0.005061431787908077, -0.009858490899205208, -0.00027771908207796514, -5.936446541454643e-05, -0.00028355870745144784, -0.00045158201828598976, -7.56950321374461e-05, -0.0021115881390869617, -0.0007930232677608728, -0.0009734659106470644, -0.008062437176704407, -0.023700624704360962, -1.537788011773955e-05, -0.0172383114695549, -0.44704532623291016, -1.0062788724899292, -0.13797643780708313, -0.0007503792876377702, -0.01917855255305767, -0.256849467754364, -0.017146795988082886, -0.04742611572146416, -0.03206031024456024, -0.000553335587028414, -0.0013384203193709254, -1.1090424060821533, -0.0020115396473556757, -3.008363962173462, -0.03798942640423775, -0.026421895250678062, -2.7418097943154862e-06, -0.0001597276859683916, -1.024190902709961, -0.006161859259009361, -0.003246277803555131, -0.41190412640571594, -0.01456662267446518, -0.024667583405971527, -0.0014709139941260219, -0.00037269797758199275, -0.02048701047897339, -0.00029690624796785414, -0.00012587709352374077, -0.00022396916756406426, -0.0020573418587446213, -0.06247281655669212, -0.0013055619783699512, -0.0005583396414294839, -0.46457481384277344, -0.012029835022985935, -0.3582901954650879, -0.11280914396047592, -0.010168769396841526, -1.1533057689666748, -0.022626565769314766, -1.22162926197052], "finish_reason": "stop"}], "metrics": {"energy": 192.81293115234365, "energy_per_token": 1.1756886045874613, "time": 6.9506135, "time_per_token": 0.04238178963414634}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError('Input data must be a Pandas DataFrame.')\n    if df.empty:\n        raise ValueError('DataFrame is empty.')\n    if not all(df.dtypes == 'int64'):\n        raise TypeError('DataFrame contains non-numeric data.')\n\n    return sns.scatterplot(df, x=col1, y=col2).axes", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "('", "Input", " data", " must", " be", " a", " Pand", "as", " Data", "Frame", ".", "')", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "('", "DataFrame", " is", " empty", ".", "')", "\n", "    ", "if", " not", " all", "(", "df", ".", "d", "types", " ==", " '", "int", "6", "4", "')", ":", "\n", "        ", "raise", " Type", "Error", "('", "DataFrame", " contains", " non", "-", "numeric", " data", ".", "')", "\n", "\n", "    ", "return", " s", "ns", ".", "scatter", "plot", "(", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ")", ".", "axes", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6184619069099426, -0.17611971497535706, -0.06861492246389389, -0.0002493547508493066, -0.019706768915057182, -0.0013268723851069808, -0.0357045903801918, -2.3483953555114567e-05, -0.15268708765506744, -0.1359027773141861, -0.007699928712099791, -0.002039734972640872, -0.023524703457951546, -0.32567113637924194, -5.411955135059543e-05, -1.8957303762435913, -0.6634935736656189, -2.1321418285369873, -1.254349946975708, -0.0022922686766833067, -0.050793666392564774, -2.798912525177002, -6.69933797325939e-05, -0.12917166948318481, -0.027190884575247765, -0.7097916007041931, -0.009607860818505287, -0.0013400870375335217, -0.29674485325813293, -0.13993647694587708, -0.8924193978309631, -0.0042943404987454414, -0.02787071280181408, -0.23787041008472443, -0.0064658247865736485, -0.0003843760641757399, -0.012585149146616459, -0.004164594691246748, -4.8397800128441304e-05, -0.03413967415690422, -2.5328359603881836, -0.2593916058540344, -0.004663306288421154, -0.07521136850118637, -0.011215499602258205, -0.00043466180795803666, -0.10294677317142487, -0.07154793292284012, -0.47618234157562256, -1.52118980884552, -0.19149191677570343, -1.3831381797790527, -1.049551248550415, -0.7078444361686707, -0.0010102650849148631, -1.1395694017410278, -0.23795752227306366, -0.4132498502731323, -0.02830791473388672, -1.9073468138230965e-06, -0.9507750868797302, -0.15352480113506317, -0.018068481236696243, -0.002138948068022728, -0.020545754581689835, -0.009002571925520897, -6.246371776796877e-05, -0.0565086305141449, -0.8912442326545715, -1.115853190422058, -0.004535031970590353, -0.002874411642551422, -0.2759951949119568, -0.16605402529239655, -0.05780743062496185, -0.01160607673227787, -0.0032771711703389883, -1.3711659908294678, -0.0014319891342893243, -2.296069860458374, -0.02684023603796959, -3.814689989667386e-06, -6.615896563744172e-05, -0.5524693131446838, -0.015236769802868366, -0.006173114292323589, -2.4368138313293457, -1.38663911819458, -0.6129575371742249, -0.011295183561742306, -0.0039265453815460205, -0.0006429274217225611, -0.0002669931564014405, -0.0013191340258345008, -0.0003680505615193397, -9.953480184776708e-05, -0.00014625910262111574, -0.5190576314926147, -2.6380133628845215, -2.0845632553100586, -1.178565502166748, -3.576278118089249e-07, -7.152555099310121e-07, -0.0001382732152706012, -0.00010048838157672435, -0.09279780089855194], "finish_reason": "stop"}], "metrics": {"energy": 134.95531473922725, "energy_per_token": 1.2731633465964836, "time": 4.4325013, "time_per_token": 0.04181605}}
