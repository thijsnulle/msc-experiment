{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input df must be a DataFrame.\")\n    if df.empty:\n        raise ValueError(\"Input df cannot be empty.\")\n    if col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(\"Input df must contain the specified columns.\")\n\n    # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043d\u0435\u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n    if not df[col1].dtype.kind in ['i', 'f'] or not df[col2].dtype.kind in ['i', 'f']:\n        raise TypeError(\"Columns must be numeric.\")\n\n    return sns.regplot(x=col1, y=col2, data=df)", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " cannot", " be", " empty", ".", "\"", ")", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " must", " contain", " the", " specified", " columns", ".", "\"", ")", "\n", "\n", "    ", "#", " \u041f\u0440\u043e", "\u0432\u0435\u0440", "\u043a\u0430", " \u043d\u0430", " \u043d\u0435", "\u0447\u0438", "\u0441", "\u043b\u043e\u0432", "\u044b", "\u0435", " \u0437\u043d\u0430", "\u0447\u0435", "\u043d\u0438\u044f", "\n", "    ", "if", " not", " df", "[", "col", "1", "]", ".", "d", "type", ".", "kind", " in", " ['", "i", "'", ",", " '", "f", "']", " or", " not", " df", "[", "col", "2", "]", ".", "d", "type", ".", "kind", " in", " ['", "i", "'", ",", " '", "f", "']", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Columns", " must", " be", " numeric", ".", "\"", ")", "\n", "\n", "    ", "return", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.18044835329055786, -0.045555684715509415, -0.030361320823431015, -4.8874615458771586e-05, -0.0009900197619572282, -0.001157448161393404, -0.00363558460958302, -4.410734163684538e-06, -0.02479667402803898, -0.06094679981470108, -0.004978640470653772, -0.0024429496843367815, -0.006708717904984951, -0.019015049561858177, -4.172316494077677e-06, -0.11597026139497757, -0.047268304973840714, -0.493717223405838, -1.7338197231292725, -0.3905283808708191, -0.0005488081369549036, -0.008129838854074478, -0.7520886659622192, -0.0015459026908501983, -1.1110624074935913, -0.00703051034361124, -0.00027700403006747365, -0.0006358985556289554, -0.19510480761528015, -0.16531313955783844, -0.02118331380188465, -0.0026289208326488733, -0.0006014683749526739, -0.012797961942851543, -0.00037174468161538243, -0.00016890530241653323, -0.0010187203297391534, -0.00022015532886143774, -1.1920928244535389e-07, -0.0009095107670873404, -0.002004639245569706, -0.027893666177988052, -0.1529792845249176, -1.209250569343567, -9.762764238985255e-05, -0.00257303798571229, -0.006855183281004429, -0.0004223884898237884, -3.158996332786046e-05, -2.5748875486897305e-05, -0.017871307209134102, -0.012526758946478367, -0.26547953486442566, -0.00019894051365554333, -0.0092839440330863, -5.125986263010418e-06, -0.001820098957978189, -0.06935126334428787, -3.5523738915799186e-05, -0.18332771956920624, -0.00014041867689229548, -6.174850568640977e-05, -1.1205610462639015e-05, -2.1576648578047752e-05, -3.3378546504536644e-06, -1.4066597032069694e-05, -1.0609570381348021e-05, -0.0006328010931611061, -0.00010239553375868127, -0.00016056202002801, -0.001156733720563352, -0.002557580592110753, -3.576278118089249e-07, -0.0005085367010906339, -0.14370916783809662, -0.07692907005548477, -0.05239565297961235, -0.03412550315260887, -0.006385281682014465, -0.17463962733745575, -0.003808271139860153, -0.0038423535879701376, -0.010175377130508423, -0.0006703275139443576, -0.00010358751023886725, -0.00014590153296012431, -1.2212212085723877, -0.0010526598198339343, -1.8207732439041138, -3.859036445617676, -0.06704574823379517, -1.1715667247772217, -0.6733993887901306, -3.0007035732269287, -0.044562891125679016, -0.0010236029047518969, -0.020187392830848694, -2.3603161025675945e-05, -9.512448741588742e-05, -0.8902474045753479, -0.008727502077817917, -8.892617915989831e-05, -0.9938295483589172, -0.0033010535407811403, -0.17041169106960297, -0.1503673493862152, -0.1781381517648697, -0.026580825448036194, -0.0004213160718791187, -0.0009409529156982899, -0.00013541258522309363, -8.821448318485636e-06, -0.35229530930519104, -0.006341335829347372, -0.3864090144634247, -0.23651185631752014, -0.054339610040187836, -1.6691908836364746, -0.04521973431110382, -0.0006466205231845379, -4.434487345861271e-05, -0.05579061806201935, -0.16515398025512695, -0.018692176789045334, -1.2085410356521606, -0.00983582716435194, -0.0009467886411584914, -0.0003300360403954983, -0.001004906021989882, -0.0006976078147999942, -1.7165990357170813e-05, -6.437280717364047e-06, -3.1470757676288486e-05, -0.00012742661056108773, -2.6225699912174605e-05, -3.242440288886428e-05, -0.0005301024066284299, -0.0028696570079773664, -8.463501580990851e-05, -2.4676019165781327e-05, -7.450303382938728e-05, -0.0030045625753700733, -1.168244216387393e-05, -9.524368942948058e-05, -0.0019183820113539696, -0.0022348209749907255, -0.00839608907699585, -0.008203146979212761, -0.009398265741765499, -7.986990567587782e-06, -0.03350156545639038, -0.07407769560813904, -1.5713478326797485, -0.09299779683351517, -1.1725678443908691, -0.10472403466701508, -0.29540780186653137, -0.002320218365639448, -0.0004011779965367168, -0.0011185110779479146, -0.027870364487171173, -0.0006206493126228452, -2.6616716384887695, -0.005783253349363804, -1.9430925021879375e-05, -9.798523387871683e-05, -1.267125129699707, -0.01076273899525404, -0.000278195773717016, -0.07748568803071976, -0.009453767910599709, -0.1868792027235031, -0.0003367095487192273, -0.00010585224663373083, -0.003044258337467909, -0.00010918975021922961, -4.95898348162882e-05, -1.2516897186287679e-05, -0.00013016807497479022, -0.002400851808488369, -0.0001641377166379243, -0.00011872540198964998, -1.2018442153930664, -1.9073468138230965e-06, -1.9073468138230965e-06, -3.2186455882765586e-06, -3.611976353568025e-05, -0.10694674402475357], "finish_reason": "stop"}], "metrics": {"energy": 782.3858779182431, "energy_per_token": 4.1616270102034205, "time": 20.260754, "time_per_token": 0.10776996808510637}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError('Input must be a non-empty pandas DataFrame')\n    if df.empty:\n        raise ValueError('Input must be a non-empty pandas DataFrame')\n    if col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(f'DataFrame does not contain columns {col1} or {col2}')\n    if not (df[col1].dtype.kind in 'iufc' and df[col2].dtype.kind in 'iufc'):\n        raise TypeError('Both columns must contain numerical values')\n\n    plot = sns.scatterplot(x=col1, y=col2, data=df)\n    sns.regplot(x=col1, y=col2, data=df, scatter=False, ax=plot)\n\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "('", "Input", " must", " be", " a", " non", "-", "empty", " pandas", " Data", "Frame", "')", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "('", "Input", " must", " be", " a", " non", "-", "empty", " pandas", " Data", "Frame", "')", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "DataFrame", " does", " not", " contain", " columns", " {", "col", "1", "}", " or", " {", "col", "2", "}", "')", "\n", "    ", "if", " not", " (", "df", "[", "col", "1", "]", ".", "d", "type", ".", "kind", " in", " '", "i", "uf", "c", "'", " and", " df", "[", "col", "2", "]", ".", "d", "type", ".", "kind", " in", " '", "i", "uf", "c", "')", ":", "\n", "        ", "raise", " Type", "Error", "('", "Both", " columns", " must", " contain", " numerical", " values", "')", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ",", " scatter", "=", "False", ",", " ax", "=", "plot", ")", "\n", "\n", "    ", "return", " plot", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -2.2747344970703125, -0.8107225894927979, -2.1293959617614746, -0.001176975667476654, -0.021648647263646126, -2.064242362976074, -0.022252628579735756, -0.0011659021256491542, -1.3860387802124023, -0.0034898349549621344, -0.0005256939912214875, -0.25149354338645935, -0.00048494499060325325, -0.1663801074028015, -0.23070783913135529, -0.03896067291498184, -0.0009489324293099344, -0.0006729483720846474, -0.0300722848623991, -0.00021050144277978688, -0.00036054308293387294, -0.0003054867556784302, -0.0003687655262183398, -1.1920928244535389e-07, -0.01484279241412878, -0.011545509099960327, -0.6906200647354126, -0.019525818526744843, -0.004219201859086752, -0.0015942256432026625, -0.00025102324434556067, -5.1377883210079744e-05, -0.05294449254870415, -6.341733387671411e-05, -5.185469490243122e-05, -0.0016031521372497082, -8.308542601298541e-05, -0.018702708184719086, -0.024483572691679, -0.2556361258029938, -0.0003071551618631929, -0.01454300805926323, -3.6954811548639555e-06, -0.003186626825481653, -0.10320904850959778, -0.00017915551143232733, -0.21474070847034454, -0.00034362133010290563, -0.00010322991875000298, -1.645074735279195e-05, -2.109982233378105e-05, -3.576272320060525e-06, -5.829164365422912e-05, -7.152531907195225e-06, -0.0013249675976112485, -0.00017474555352237076, -0.00032276666024699807, -0.0013174673076719046, -0.0038373658899217844, -4.768370445162873e-07, -1.036911964416504, -0.1656641960144043, -0.3530413806438446, -0.4867538511753082, -1.6649205684661865, -0.0001879753835964948, -0.15553176403045654, -0.6257466077804565, -0.34799104928970337, -0.0004916174802929163, -0.00010883215873036534, -0.04834781214594841, -1.016771912574768, -0.0014974582009017467, -4.2437604861333966e-05, -0.00017617580306250602, -0.00201094476506114, -0.017240654677152634, -0.00031442465842701495, -0.33339735865592957, -0.7420910000801086, -0.636430561542511, -0.9881035685539246, -0.07026942074298859, -0.01644720509648323, -0.00014399446081370115, -0.00115863885730505, -0.00024589852546341717, -0.00024148885859176517, -0.062317024916410446, -0.03810659423470497, -0.5941412448883057, -0.18573004007339478, -0.10501782596111298, -0.07201848179101944, -0.4807339310646057, -0.001347110839560628, -1.4435462951660156, -0.1435033679008484, -0.007393971551209688, -0.000763363263104111, -0.0006069486844353378, -8.05822346592322e-05, -0.0011299422476440668, -4.684815212385729e-05, -1.4066597032069694e-05, -3.5523738915799186e-05, -3.2186455882765586e-06, -2.4318398573086597e-05, -5.9602869441732764e-05, -9.369411418447271e-05, -0.0004439560289029032, -0.0001641377166379243, -3.3378546504536644e-06, -0.00042274597217328846, -0.0007415643776766956, -0.0017701209289953113, -0.007203913759440184, -0.006119798868894577, -0.006165650207549334, -0.01514800637960434, -1.0490362910786644e-05, -0.3122359812259674, -1.4119765758514404, -0.09756137430667877, -0.04899536445736885, -0.34816157817840576, -2.648467779159546, -1.3831826448440552, -0.06776341795921326, -0.0007585985003970563, -0.5614398717880249, -0.0006615119054913521, -1.6133078336715698, -0.008343600668013096, -0.007439291104674339, -1.0728830375228426e-06, -2.1457441107486375e-05, -0.20078030228614807, -6.437280717364047e-06, -0.00030727434204891324, -0.7065817713737488, -0.004775428678840399, -0.12460118532180786, -0.00031323294388130307, -0.00019536493346095085, -0.006692021619528532, -0.00015627116954419762, -3.8265450712060556e-05, -3.3854863431770355e-05, -9.107174992095679e-05, -0.01728728786110878, -0.0003177614707965404, -9.321732068201527e-05, -0.052784498780965805, -0.00949793215841055, -0.08169713616371155, -1.512136697769165, -5.8887653722194955e-05, -0.00019929806876461953, -0.07767222076654434, -0.16119292378425598, -0.00011944057769142091, -0.07459861040115356, -0.00021026308240834624, -0.006920653395354748, -7.73638384998776e-05, -3.7431014789035544e-05, -0.001100768567994237, -7.688703772146255e-05, -0.0001787979417713359, -4.660974445869215e-05, -4.2676016164477915e-05, -0.004378256853669882, -0.00025042734341695905, -0.0004094000905752182, -0.014818361960351467, -0.028147753328084946, -0.0006833125371485949, -0.26956290006637573, -0.5734482407569885, -0.5534075498580933, -0.0003761537664104253, -0.012315420433878899, -0.26800814270973206, -0.008554717525839806, -0.6944010853767395, -0.0021715410985052586, -0.06234469264745712, -0.0032894094474613667, -0.2853725552558899, -0.0038206216413527727, -0.5489691495895386], "finish_reason": "stop"}], "metrics": {"energy": 730.068198339462, "energy_per_token": 3.5099432612474137, "time": 17.454855, "time_per_token": 0.08391757211538461}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"df should be a pandas DataFrame\")\n\n    if df.empty:\n        raise ValueError(\"df should not be empty\")\n\n    if col1 not in df.columns:\n        raise ValueError(\"df should contain col1\")\n\n    if col2 not in df.columns:\n        raise ValueError(\"df should contain col2\")\n\n    if not df[col1].dtype in ['int32', 'int64', 'float32', 'float64']:\n        raise TypeError(f\"df[col1] should contain numeric data, got {df[col1].dtype}\")\n\n    if not df[col2].dtype in ['int32', 'int64', 'float32', 'float64']:\n        raise TypeError(f\"df[col2] should contain numeric data, got {df[col2].dtype}\")\n\n    plot = sns.scatterplot(x=col1, y=col2", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " should", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " should", " not", " be", " empty", "\"", ")", "\n", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " should", " contain", " col", "1", "\"", ")", "\n", "\n", "    ", "if", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " should", " contain", " col", "2", "\"", ")", "\n", "\n", "    ", "if", " not", " df", "[", "col", "1", "]", ".", "d", "type", " in", " ['", "int", "3", "2", "'", ",", " '", "int", "6", "4", "'", ",", " '", "float", "3", "2", "'", ",", " '", "float", "6", "4", "']", ":", "\n", "        ", "raise", " Type", "Error", "(", "f", "\"", "df", "[", "col", "1", "]", " should", " contain", " numeric", " data", ",", " got", " {", "df", "[", "col", "1", "]", ".", "d", "type", "}\"", ")", "\n", "\n", "    ", "if", " not", " df", "[", "col", "2", "]", ".", "d", "type", " in", " ['", "int", "3", "2", "'", ",", " '", "int", "6", "4", "'", ",", " '", "float", "3", "2", "'", ",", " '", "float", "6", "4", "']", ":", "\n", "        ", "raise", " Type", "Error", "(", "f", "\"", "df", "[", "col", "2", "]", " should", " contain", " numeric", " data", ",", " got", " {", "df", "[", "col", "2", "]", ".", "d", "type", "}\"", ")", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -2.333841323852539, -1.853431224822998, -0.0019645453430712223, -0.09329614043235779, -0.8372878432273865, -0.00910310447216034, -0.001026222831569612, -0.289077490568161, -0.0004371640970930457, -0.001209242851473391, -1.6389731168746948, -0.00020621081057470292, -0.05899801477789879, -0.07154693454504013, -0.004612402059137821, -0.001046229270286858, -0.033452108502388, -0.0007048744591884315, -0.0003106111544184387, -0.002623094944283366, -0.0005175919504836202, -1.1920928244535389e-07, -0.0016568278660997748, -0.002725222148001194, -0.23257002234458923, -0.42889001965522766, -0.07807087898254395, -0.00013279033009894192, -0.04289119318127632, -0.00485835550352931, -0.00025602878304198384, -3.683499380713329e-05, -0.00939354207366705, -0.00012039413559250534, -0.0415961928665638, -0.2594890892505646, -0.0003641180810518563, -0.019377222284674644, -5.006777428206988e-06, -0.0020679295994341373, -0.1590379774570465, -8.308542601298541e-05, -1.398708462715149, -0.00029476112104021013, -0.00019870213873218745, -0.0009414292871952057, -0.00555151654407382, -2.3841855067985307e-07, -0.0008441222598776221, -2.005218982696533, -0.830822229385376, -0.03369452804327011, -0.04651916027069092, -1.7354990243911743, -0.0019566931296139956, -0.2720318138599396, -0.001116844010539353, -8.689979586051777e-05, -0.034461285918951035, -2.884823152271565e-05, -0.0018434212543070316, -0.0033924193121492863, -0.0006725909770466387, -7.86750388215296e-05, -1.156323378381785e-05, -1.0847986231965479e-05, -0.00014923889830242842, -3.2305197237292305e-05, -0.00017009719158522785, -2.2411095415009186e-05, -9.560128091834486e-05, -0.00010907054820563644, -9.619726915843785e-05, 0.0, -0.00017832119192462415, -0.0007194076315499842, -0.0003389737685211003, -0.00022504181833937764, -0.0021745148114860058, -0.0015810144832357764, -0.006446518935263157, -0.00024816294899210334, -5.98412734689191e-05, -5.364274329622276e-05, -0.030003570020198822, -0.000645429186988622, -1.3574366569519043, -1.0334055423736572, -1.3677207231521606, -0.023847416043281555, -0.0002890407631639391, -0.004365201108157635, -0.0007180972606875002, -4.60137271147687e-05, -0.2318221777677536, -0.016546640545129776, -1.6944940090179443, -1.0462265014648438, -0.08373817801475525, -0.8873447179794312, -7.152555099310121e-07, -0.0005440423847176135, -0.0033780436497181654, -0.017219679430127144, -0.001715261023491621, -0.0005896736984141171, -1.966933996300213e-05, -0.00910747516900301, -0.0005844315164722502, -0.003412853693589568, -0.0017471539322286844, -0.17929935455322266, -5.960462772236497e-07, -0.00024136967840604484, -0.0010266992030665278, -0.001854725182056427, -9.131014667218551e-05, -0.00031287543242797256, -6.198863957251888e-06, -0.0273471400141716, -0.11048310250043869, -0.001820098957978189, -0.004855033475905657, -0.003956230357289314, -0.019991690292954445, -6.6756979322235566e-06, -0.11774743348360062, -1.463591456413269, -0.12337444722652435, -1.260751485824585, -1.0872496366500854, -0.01335708424448967, -0.003861947450786829, -0.02586921863257885, -0.2423212081193924, -1.0623257160186768, -0.6388179063796997, -0.19083848595619202, -1.354857325553894, -1.4874746799468994, -0.09872447699308395, -0.01619810238480568, -0.0025895654689520597, -6.818538531661034e-05, -0.0014432977186515927, -0.0014556775568053126, -3.71926071238704e-05, -0.0021592890843749046, -0.006256043910980225, -0.25663450360298157, -0.000409161759307608, -0.0008949803304858506, -0.021327324211597443, -9.476689592702314e-05, -0.010582403279840946, -0.0025550834834575653, -0.0012432949151843786, -0.00048673225683160126, -1.3589766240329482e-05, -0.0018105795606970787, -5.483612312673358e-06, -7.152555099310121e-07, -6.747018051100895e-05, -4.887569048150908e-06, -0.00035744477645494044, -0.0013394916895776987, -5.328513361746445e-05, -0.0002996472467202693, -3.933898824470816e-06, -3.933898824470816e-06, -1.4305104514278355e-06, -0.0003693613689392805, -1.6927575416048057e-05, -1.5258672647178173e-05, 0.0, -0.00012170527770649642, -5.495397272170521e-05, -0.0002908283786382526, -4.410734163684538e-06, -6.747018051100895e-05, -1.1920928244535389e-07, -8.4638240878121e-06, -4.768360213347478e-06, -0.00028046013903804123, -4.410734163684538e-06, -3.182837463100441e-05, 0.0, -0.00014983485743869096, -0.00013147920253686607, -8.141662692651153e-05, -0.0007256020326167345, -0.000844479538500309, -0.0014756753807887435, -5.722029527532868e-06, -0.00020203932945150882, -0.001135419704951346, -0.00011121608258690685, -0.0009064141195267439, -0.0017213303362950683, -0.00023409964342135936, -0.018841460347175598, -0.00015615197480656207, -0.0003449321957305074, -0.0007701530121266842, -0.0009128456003963947, -0.0007681279676035047, -0.0006740205571986735, -0.0004456242313608527, -0.0005466635921038687, -0.00010168035078095272, -8.701899787411094e-05, -4.088794958079234e-05, -0.009271896444261074, -8.582700684200972e-05, -1.0728830375228426e-06, -1.1444026313256472e-05, -8.940656698541716e-06, -0.0010044296504929662, -7.593343616463244e-05, -8.225102646974847e-05, -0.013530570082366467, -0.0005202132160775363, -1.1192117929458618, -0.010861679911613464, -0.011724963784217834, -2.0265558760002023e-06, -6.747018051100895e-05, -0.6027294397354126, -1.537788011773955e-05, -0.00038413776201196015, -0.5133540034294128, -0.007644447032362223, -0.19896598160266876, -0.0007516896002925932, -0.00033623288618400693, -0.01856370083987713, -0.00018463814922142774, -0.0001752223033690825, -5.173549288883805e-05], "finish_reason": "length"}], "metrics": {"energy": 908.2785466747291, "energy_per_token": 3.5479630729481606, "time": 21.626593, "time_per_token": 0.08447887890625}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError('Input should be a DataFrame')\n    if df.empty:\n        raise ValueError('DataFrame is empty')\n    if col1 not in df.columns:\n        raise ValueError(f'DataFrame does not contain column {col1}')\n    if col2 not in df.columns:\n        raise ValueError(f'DataFrame does not contain column {col2}')\n    plot = sns.scatterplot(x=col1, y=col2, data=df)\n    sns.regplot(x=col1, y=col2, data=df, scatter=False)\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "('", "Input", " should", " be", " a", " Data", "Frame", "')", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "('", "DataFrame", " is", " empty", "')", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "DataFrame", " does", " not", " contain", " column", " {", "col", "1", "}", "')", "\n", "    ", "if", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "DataFrame", " does", " not", " contain", " column", " {", "col", "2", "}", "')", "\n", "    ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ",", " scatter", "=", "False", ")", "\n", "    ", "return", " plot", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -2.2747344970703125, -0.8107225894927979, -2.756722927093506, -0.006515569053590298, -0.10697105526924133, -0.5387399196624756, -0.015505829825997353, -0.12802521884441376, -0.0006945105269551277, -0.1905820667743683, -0.27448639273643494, -0.06439182162284851, -0.00464052427560091, -0.0016286217141896486, -0.03996740281581879, -0.0005389191792346537, -0.0002944036095868796, -0.0024299875367432833, -0.0005863377591595054, -3.576278118089249e-07, -0.03787694871425629, -1.109285831451416, -0.48826101422309875, -0.0048085288144648075, -0.007733879145234823, -8.332382276421413e-05, -0.0353313684463501, -0.02171175740659237, -0.25422394275665283, -0.0004642124113161117, -0.014600810594856739, -8.106198947643861e-06, -0.002635460114106536, -0.09794893860816956, -0.00013481661153491586, -1.5385810136795044, -0.00022849810193292797, -0.0001833270798670128, -0.0006310140597634017, -0.01161220483481884, -7.152555099310121e-07, -0.3420928716659546, -0.014417757280170918, -0.8331874012947083, -1.921049952507019, -0.13448530435562134, -0.0005214046686887741, -0.14557772874832153, -0.4697328507900238, -0.38291293382644653, -0.00014757021563127637, -0.0006202919175848365, -0.00344279152341187, -0.003118534805253148, -4.95898348162882e-05, -0.0011689979583024979, -0.0008337597246281803, -0.001262463629245758, -0.00023016665363684297, -4.053033626405522e-05, -3.4570634852570947e-06, -6.9141146923357155e-06, -2.1219027985353023e-05, -9.775113539944869e-06, -0.00016282663273159415, -1.2636104656849056e-05, -0.00010990492592100054, -0.0001512651506345719, -9.560128091834486e-05, -3.576278118089249e-07, -0.0016871754778549075, -0.000614216027315706, -0.0009291622554883361, -0.000254241080256179, -4.8397800128441304e-05, -1.9430925021879375e-05, -8.49926145747304e-05, -9.393251093570143e-05, -0.00016735584358684719, -1.7165990357170813e-05, -0.0008314966107718647, -3.3378044463461265e-05, -6.151010165922344e-05, -8.83301836438477e-05, -0.5293117761611938, -1.497978687286377, -0.010680300183594227, -0.011734743602573872, -2.7418097943154862e-06, -3.8742269680369645e-05, -0.32693466544151306, -1.585470999998506e-05, -0.0005726366653107107, -0.8486090898513794, -0.0052087316289544106, -0.08062831312417984, -0.0006774752982892096, -0.0003526780928950757, -0.009808558970689774, -0.0002798642381094396, -0.00016091958968900144, -0.0001245659514097497, -0.0001896439935080707, -0.02815656177699566, -0.0005977750988677144, -0.0002269487304147333, -0.07192995399236679, -0.013607364147901535, -0.030058981850743294, -1.6170544624328613, -9.333651541965082e-05, -0.00019608005823101848, -0.09261135011911392, -0.10240276157855988, -0.0002766464895103127, -0.11002860218286514, -0.000557267339900136, -0.010077194310724735, -0.00020215852418914437, -7.450303382938728e-05, -0.0025705411098897457, -0.00011002412065863609, -0.00012838016846217215, -0.000105375460407231, -7.021180499577895e-05, -0.008354121819138527, -0.0005278385942801833, -0.000957150012254715, -0.05921825394034386, -0.0322113074362278, -0.0012853225925937295, -0.10114060342311859, -0.8074952363967896, -0.010665439069271088, -0.08104195445775986, -0.10224220156669617, -0.0021158705931156874, -2.833834648132324, -5.960462772236497e-07, -1.6689286894688848e-06, -5.245195097813848e-06, -7.795983401592821e-05, -0.14522510766983032], "finish_reason": "stop"}], "metrics": {"energy": 526.3504894657136, "energy_per_token": 3.331332211808314, "time": 13.041233, "time_per_token": 0.08253944936708861}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input should be a DataFrame\")\n    elif df.empty:\n        raise ValueError(\"Input should not be an empty DataFrame\")\n    elif col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(\"Input should contain both columns\")\n\n    if df[col1].dtype == \"object\" or df[col2].dtype == \"object\":\n        raise TypeError(\"Input should not contain non-numeric data\")\n\n    plot = sns.scatterplot(data=df, x=col1, y=col2, color=\"skyblue\")\n    plot = sns.regplot(data=df, x=col1, y=col2, line_kws={\"color\": \"red\", \"lw\": 3}, marker=\"p\")\n\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " should", " be", " a", " Data", "Frame", "\"", ")", "\n", "    ", "elif", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " should", " not", " be", " an", " empty", " Data", "Frame", "\"", ")", "\n", "    ", "elif", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " should", " contain", " both", " columns", "\"", ")", "\n", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "d", "type", " ==", " \"", "object", "\"", " or", " df", "[", "col", "2", "]", ".", "d", "type", " ==", " \"", "object", "\":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " should", " not", " contain", " non", "-", "numeric", " data", "\"", ")", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " color", "=", "\"", "sky", "blue", "\"", ")", "\n", "    ", "plot", " =", " s", "ns", ".", "reg", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " line", "_", "k", "ws", "=", "{\"", "color", "\":", " \"", "red", "\"", ",", " \"", "l", "w", "\":", " ", "3", "}", ",", " marker", "=", "\"", "p", "\"", ")", "\n", "\n", "    ", "return", " plot"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -2.802334785461426, -0.004459674004465342, -0.06340984255075455, -0.48776328563690186, -0.010342218913137913, -0.29910513758659363, -0.0003383779258001596, -0.0007408496458083391, -0.18039202690124512, -1.3858033418655396, -0.04196937009692192, -0.015712739899754524, -0.0031735554803162813, -0.022776193916797638, -0.0009247555863112211, -0.00042965717148035765, -0.0049386657774448395, -0.0005459486856125295, -4.768370445162873e-07, -0.001824620645493269, -0.003322083968669176, -0.5045680999755859, -1.127488374710083, -0.3065894544124603, -0.0015237637562677264, -0.5111837983131409, -0.0006125480867922306, -0.006284712348133326, -0.0014044907875359058, -0.0030020668637007475, -6.258291978156194e-05, -3.218599158572033e-05, -0.028386827558279037, -0.04675581678748131, -0.17127247154712677, -0.0005578630371019244, -0.012622465379536152, -5.125986263010418e-06, -0.005128917284309864, -0.1433056890964508, -0.00011717586312443018, -0.0674637109041214, -0.00013183678674977273, -7.080780778778717e-05, -1.9430925021879375e-05, -1.8954096958623268e-05, -7.629365427419543e-06, -1.6212332411669195e-05, -8.940656698541716e-06, -0.0010368215152993798, -0.00022492263815365732, -0.0004102342063561082, -0.0014413930475711823, -0.006497448310256004, -4.768370445162873e-07, -0.000746448349673301, -0.09225910156965256, -0.6406493186950684, -0.33976632356643677, -0.312273770570755, -3.1307451725006104, -1.0323833227157593, -0.3035156726837158, -0.0007906410028226674, -0.00012575789878610522, -1.2853755950927734, -0.0006649667047895491, -2.1406137943267822, -0.8205087780952454, -0.10623189806938171, -0.0005731132114306092, -0.002989230677485466, -0.0005112771177664399, -0.00022766382608097047, -0.020910056307911873, -0.1241050511598587, -1.476586937904358, -1.6296460628509521, -0.5653329491615295, -0.21667353808879852, -0.05231352150440216, -0.0029034148901700974, -0.00027771908207796514, -0.0001935771433636546, -0.0279585849493742, -4.541770613286644e-05, -2.777537883957848e-05, -3.969590397900902e-05, -9.798523387871683e-05, -0.0009421439026482403, -0.0009717986104078591, -0.00022218143567442894, -0.006431120913475752, -0.0037765626329928637, -0.003040217561647296, -0.015241466462612152, -0.011761016212403774, -1.1205610462639015e-05, -0.016093941405415535, -0.03113514557480812, -1.0931769609451294, -0.18293683230876923, -2.3409833908081055, -0.44395238161087036, -0.18098914623260498, -0.0172418262809515, -0.00871899351477623, -0.21381394565105438, -0.021647481247782707, -0.0004592079494614154, -0.000325388420606032, -0.05786379799246788, -0.00027295202016830444, -1.3166424036026, -0.007711285259574652, -0.014609034173190594, -1.7881377516459906e-06, -2.062299427052494e-05, -0.24850286543369293, -9.417489309271332e-06, -0.000392598332837224, -0.5306805968284607, -0.0053190141916275024, -0.000380324519937858, -0.009869114495813847, -0.03359147906303406, -0.00021181246847845614, -0.024159204214811325, -0.00032908268622122705, -0.00013243274588603526, -0.0011200590524822474, -4.994744449504651e-05, -5.0424259825376794e-05, -2.682172998902388e-05, -1.9221032857894897, -1.4888861179351807, -0.13870984315872192, -0.012891759164631367, -0.7833938002586365, -0.0004637358069885522, -4.4225667807040736e-05, -0.40120425820350647, -0.012040435336530209, -0.08463107794523239, -0.4957108199596405, -0.08848127722740173, -0.0031341025605797768, -3.576278118089249e-07, -5.507317473529838e-05, -0.00919630378484726, -0.034777265042066574, -0.0003122795606032014, -0.04799700528383255, -0.00022468426323030144, -5.972207145532593e-05, -0.002087915316224098, -0.020286107435822487, -7.879423355916515e-05, -0.0006494796834886074, -7.903263758635148e-05, -2.682172998902388e-05, -0.0006811682251282036, -2.169585604860913e-05, -0.00010430268594063818, -0.00010775939153973013, -0.008066457696259022, -1.7241551876068115, -0.0011959074763581157, -0.0015603045467287302, -5.960462772236497e-07, -0.0965345948934555, -0.007473368663340807, -0.13744252920150757, -0.005036524031311274, -0.00036816971260122955, -0.6047136783599854, -1.6285566091537476, -0.0007172634359449148, -0.014997466467320919, -0.1052887812256813, -0.004285319708287716, -0.0002674698771443218, -0.01109372265636921, -3.1712846755981445, -1.607130527496338, -0.0013816345017403364, -1.7005239725112915, -0.09040508419275284, -0.007313384674489498, -4.202575206756592, -8.296622399939224e-05, -0.7761254906654358, -0.01396973617374897, -1.0193828344345093, -0.0017872564494609833, -0.061711106449365616, -0.002059602178633213], "finish_reason": "stop"}], "metrics": {"energy": 754.4940226783749, "energy_per_token": 3.509274524085465, "time": 18.077547, "time_per_token": 0.08408161395348837}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError('Input data is not a DataFrame')\n\n    if df.empty:\n        raise ValueError('Input data is empty')\n\n    if col1 not in df.columns or col2 not in df.columns:\n        raise ValueError('DataFrame does not contain the specified columns')\n\n    plot = sns.scatterplot(data=df, x=col1, y=col2)\n\n    plot = sns.regplot(data=df, x=col1, y=col2, scatter=False, line_kws={\"color\": \"r\"})\n    plot.axes.set_xlim(0)\n    plot.axes.set_ylim(0)\n\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "('", "Input", " data", " is", " not", " a", " Data", "Frame", "')", "\n", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "('", "Input", " data", " is", " empty", "')", "\n", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "('", "DataFrame", " does", " not", " contain", " the", " specified", " columns", "')", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ")", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "reg", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " scatter", "=", "False", ",", " line", "_", "k", "ws", "=", "{\"", "color", "\":", " \"", "r", "\"}", ")", "\n", "    ", "plot", ".", "axes", ".", "set", "_", "x", "lim", "(", "0", ")", "\n", "    ", "plot", ".", "axes", ".", "set", "_", "y", "lim", "(", "0", ")", "\n", "\n", "    ", "return", " plot", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -2.2747344970703125, -0.8107225894927979, -0.6955505013465881, -1.2179896831512451, -0.016711249947547913, -0.0853259488940239, -0.20853029191493988, -0.004673154558986425, -0.28390100598335266, -0.0006828360492363572, -1.914258599281311, -0.00015817821258679032, -0.08296123892068863, -0.07310540229082108, -0.004812681116163731, -0.0019192148465663195, -0.03444378077983856, -0.00046230596490204334, -0.0003500564198475331, -0.001675869687460363, -0.00023636408150196075, -1.1920928244535389e-07, -0.04256109148263931, -0.17746585607528687, -1.0275309085845947, -0.040902864187955856, -0.024940164759755135, -0.011863157153129578, -0.0001113352773245424, -0.00887012667953968, -7.92710343375802e-05, -0.04918797314167023, -0.20098157227039337, -0.0004942387458868325, -0.013529040850698948, -5.8412379075889476e-06, -0.004232021979987621, -0.16789816319942474, -0.00015221867943182588, -0.19051595032215118, -0.00025090406415984035, -9.190614218823612e-05, -2.109982233378105e-05, -1.2755313036905136e-05, -8.4638240878121e-06, -1.537788011773955e-05, -8.22540732769994e-06, -0.0009760859538801014, -0.00013064485392533243, -0.0005552418879233301, -0.0014992436626926064, -0.005212645046412945, -2.3841855067985307e-07, -0.2108568698167801, -1.189255714416504, -0.05201152339577675, -0.0001530530134914443, -0.0479123517870903, -0.23063267767429352, -0.018918316811323166, -0.08904720842838287, -0.00971116591244936, -0.00010680581908673048, -0.03554181382060051, -0.0007352509419433773, -1.443506121635437, -0.0065194773487746716, -0.0147329680621624, -2.0265558760002023e-06, -3.015949550899677e-05, -0.27951449155807495, -1.1920858014491387e-05, -0.0004625442670658231, -0.5335245132446289, -0.007752923760563135, -0.0004303721070755273, -0.015038332901895046, -0.05325819179415703, -0.0002892790944315493, -0.03721893951296806, -0.0005453529884107411, -0.0002329078270122409, -0.0014135378878563643, -0.00013100242358632386, -4.482168878894299e-05, -3.0636318115284666e-05, -0.2565810978412628, -0.024961907416582108, -2.0133938789367676, -0.0006594866863451898, -2.178720712661743, -0.06900029629468918, -0.0034781931899487972, -1.1920928244535389e-07, -1.847726889536716e-05, -0.0845189020037651, -0.1435694694519043, -0.0004702892620116472, -0.10165827721357346, -0.0007730118231847882, -0.00023922442051116377, -0.004370898474007845, -0.0145702650770545, -0.00018821375851985067, -0.001709667849354446, -0.00014149141497910023, -5.924526340095326e-05, -0.002272049430757761, -0.00010668662434909493, -9.440929716220126e-05, -7.354942499659956e-05, -0.2298823446035385, -0.09163125604391098, -0.0009154658182524145, -0.10813719034194946, -0.6363410949707031, -2.2516846656799316, -0.45812907814979553, -0.00022873646230436862, -1.311301275563892e-06, -1.0012751817703247, -0.010331482626497746, -0.141398623585701, -0.5068745017051697, -0.00525094848126173, -0.37574344873428345, -1.5717955827713013, -0.06854067742824554, -0.004897621460258961, -1.2636492252349854, -2.4908368587493896, -0.242865189909935, -1.706968069076538, -0.0070288535207509995, -1.8370633125305176, -0.006470562424510717, -1.772768497467041, -0.024765973910689354, -0.10138816386461258, -1.4632371664047241, -2.1292922496795654, -0.1319279819726944, -0.1127292737364769, -0.03618161380290985, -0.000556314189452678, -0.003133864840492606, -2.407998726994265e-05, -0.0025034775026142597, -5.1973900554003194e-05, -0.0012831796193495393, -5.006777428206988e-06, -0.0005791893927380443, -0.003140519605949521, -0.0006313714548014104, -0.001128037110902369, -0.5862006545066833, -0.001320562674663961, -0.22991786897182465, -0.0025527053512632847, -0.24004587531089783, -0.0025735136587172747, -0.3741399645805359], "finish_reason": "stop"}], "metrics": {"energy": 623.2635205364224, "energy_per_token": 3.5212628278893923, "time": 14.713577, "time_per_token": 0.08312755367231639}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input df should be a non-empty DataFrame\")\n\n    if df.empty:\n        raise ValueError(\"Input df should be a non-empty DataFrame\")\n\n    if col1 not in df.columns:\n        raise ValueError(f\"Column {col1} not found in DataFrame\")\n\n    if col2 not in df.columns:\n        raise ValueError(f\"Column {col2} not found in DataFrame\")\n\n    plot = sns.scatterplot(data=df, x=df[col1], y=df[col2], alpha=0.5, color=\"orange\")\n    sns.regplot(data=df, x=df[col1], y=df[col2], scatter=False, linekws={\"color\": \"blue\"})\n\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " should", " be", " a", " non", "-", "empty", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " should", " be", " a", " non", "-", "empty", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " {", "col", "1", "}", " not", " found", " in", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "if", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " {", "col", "2", "}", " not", " found", " in", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "data", "=", "df", ",", " x", "=", "df", "[", "col", "1", "]", ",", " y", "=", "df", "[", "col", "2", "]", ",", " alpha", "=", "0", ".", "5", ",", " color", "=", "\"", "orange", "\"", ")", "\n", "    ", "s", "ns", ".", "reg", "plot", "(", "data", "=", "df", ",", " x", "=", "df", "[", "col", "1", "]", ",", " y", "=", "df", "[", "col", "2", "]", ",", " scatter", "=", "False", ",", " line", "k", "ws", "=", "{\"", "color", "\":", " \"", "blue", "\"}", ")", "\n", "\n", "    ", "return", " plot", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -1.6260977983474731, -1.6639118194580078, -0.0010941001819446683, -0.03229464218020439, -1.6452707052230835, -0.007062352728098631, -0.0012249593855813146, -0.6430006623268127, -0.0007277462864294648, -0.7664335370063782, -0.000289159914245829, -0.0006922471220605075, -1.6363168954849243, -0.0002559096028562635, -0.08265167474746704, -0.07397473603487015, -0.002735684160143137, -0.0006422125734388828, -0.02050417847931385, -0.0005523824947886169, -0.0005278385942801833, -0.0005691815749742091, -0.0003670972364488989, 0.0, -0.0008588915807195008, -0.0018034399254247546, -0.007364979945123196, -0.06204481050372124, -0.054901376366615295, -0.004553426057100296, -0.006485841237008572, -0.0015142414486035705, -0.00022301571152638644, -4.589452510117553e-05, -0.00036197309964336455, -0.00044347942457534373, -0.0019858418963849545, -2.6225699912174605e-05, -2.932505594799295e-05, -0.017213938757777214, -0.00011944057769142091, -0.04416980966925621, -0.20008227229118347, -0.00044645831803791225, -0.015479068271815777, -5.245195097813848e-06, -0.0037121926434338093, -0.11009310185909271, -7.593343616463244e-05, -2.0395994186401367, -0.00038556772051379085, -0.0002787916746456176, -0.0005868143052794039, -0.007269124500453472, -2.3841855067985307e-07, -0.0016944350209087133, -0.2914518117904663, -0.0033192322589457035, -0.6144713163375854, -0.5250474214553833, -0.0004107108688913286, -0.0005005536950193346, -0.004745530430227518, -0.3019261360168457, -0.1553710401058197, -0.006178208626806736, -1.8172160387039185, -0.002193903550505638, -0.023560332134366035, -0.0001778444420779124, -9.536288416711614e-05, -0.04189792275428772, -4.434487345861271e-05, -0.0010746901389211416, -0.002075662137940526, -0.00038354191929101944, -4.410646579344757e-05, -1.1920922133867862e-06, -5.483612312673358e-06, -1.5258672647178173e-05, -1.156323378381785e-05, -0.00014757021563127637, -2.074220174108632e-05, -0.0001401803019689396, -0.00015925093612167984, -8.153582894010469e-05, -1.1920928244535389e-07, -4.339123915997334e-05, -0.0031735554803162813, -1.3828182090946939e-05, -0.00013410145766101778, -0.00036066226311959326, -2.2291887944447808e-05, -0.0029500082600861788, -3.766942609217949e-05, -7.4741430580616e-05, -1.823885577323381e-05, -3.814624506048858e-05, -0.00014757021563127637, -5.471556869451888e-05, -0.0003970073303207755, -3.6954195820726454e-05, -0.00010048838157672435, -0.031352825462818146, -0.0005156855913810432, -1.4280771017074585, -0.005060957279056311, -0.012080834247171879, -1.9073468138230965e-06, -3.886147169396281e-05, -0.27076318860054016, -1.5616295058862306e-05, -0.00039307496626861393, -0.6126859188079834, -0.007543057668954134, -0.00044347942457534373, -0.018309976905584335, -0.046779707074165344, -0.00033718624035827816, -2.686685085296631, -0.014051786623895168, -0.0005983707960695028, -0.0005553610390052199, -9.464769391342998e-05, -0.04224264621734619, -0.003113187151029706, -0.0004213160718791187, -0.0003912875254172832, -0.0002464944263920188, -2.8490614567999728e-05, -0.00022659118985757232, -1.599873661994934, -0.001260201446712017, -0.880911648273468, -0.011757835745811462, -0.08947776257991791, -0.053273674100637436, -0.8449835181236267, -1.9065405130386353, -2.237473487854004, -0.6103026270866394, -0.03356208652257919, -3.7396671772003174, -2.825220326485578e-05, -0.06853789836168289, -0.016858719289302826, -0.17926646769046783, -1.2676079273223877, -9.119095193454996e-05, -0.00017081231635529548, -0.09555076062679291, -0.07099521905183792, -0.00022539935889653862, -0.09614095836877823, -0.001032296335324645, -0.0001842805795604363, -0.0059931338764727116, -0.004851474892348051, -0.00011276562872808427, -0.28539416193962097, -0.00043847484630532563, -1.823885577323381e-05, -9.619726915843785e-05, -6.556489552167477e-06, -0.0004797023138962686, -0.0008630603551864624, -0.0003665013937279582, -0.0001245659514097497, -3.40932747349143e-05, -1.5735502529423684e-05, -0.0005144941387698054, -0.0030983323231339455, -0.00016556799528189003, -0.1228988915681839, -0.0006561510381288826, -0.13247862458229065, -0.07033031433820724, -1.5480103492736816, -0.3773660957813263, -0.0732569769024849, -0.29424285888671875, -0.038079168647527695, -0.0008750900160521269, -0.008578119799494743, -0.001335682114586234, -1.9365618228912354, -0.4180620014667511, -0.08765625208616257, -0.010398613288998604, -0.5960512161254883, -0.002080777660012245, -0.2102651447057724, -0.0038028082344681025, -0.19937272369861603, -0.002200683578848839, -0.5052746534347534], "finish_reason": "stop"}], "metrics": {"energy": 760.8285537757881, "energy_per_token": 3.555273615774711, "time": 17.86011, "time_per_token": 0.08345845794392523}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input must be a DataFrame\")\n\n    if df.empty:\n        raise ValueError(\"Input DataFrame is empty\")\n\n    if col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(f\"Input DataFrame does not have the required columns: {col1}, {col2}\")\n\n    try:\n        plot = sns.scatterplot(x=col1, y=col2, data=df)\n        sns.regplot(df[col1], df[col2], scatter=False, ax=plot)\n        return plot\n    except TypeError:\n        raise TypeError(\"Input DataFrame contains non-numeric data\")", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " must", " be", " a", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", "\"", ")", "\n", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Input", " Data", "Frame", " does", " not", " have", " the", " required", " columns", ":", " {", "col", "1", "}", ",", " {", "col", "2", "}\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "        ", "s", "ns", ".", "reg", "plot", "(", "df", "[", "col", "1", "]", ",", " df", "[", "col", "2", "]", ",", " scatter", "=", "False", ",", " ax", "=", "plot", ")", "\n", "        ", "return", " plot", "\n", "    ", "except", " Type", "Error", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " Data", "Frame", " contains", " non", "-", "numeric", " data", "\"", ")", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -1.9891997575759888, -0.0006404255982488394, -0.015757685527205467, -0.47286882996559143, -0.0020561523269861937, -0.33275893330574036, -0.00022110878489911556, -0.000816250394564122, -2.0021514892578125, -0.0001525762490928173, -0.06228700652718544, -0.07372262328863144, -0.003103917697444558, -0.001401038491167128, -0.038719527423381805, -0.0006231511943042278, -0.00029762129997834563, -0.0022339883726090193, -0.0003137096355203539, -1.1920928244535389e-07, -0.000935950840357691, -0.0021207479294389486, -0.3002679646015167, -0.22818586230278015, -0.027086583897471428, -1.0307798385620117, -0.0006955826538614929, -0.005950592458248138, -0.00010191874753218144, -3.015949550899677e-05, -0.010818284004926682, -0.00010227633902104571, -0.044339511543512344, -0.2055446058511734, -0.00035470392322167754, -0.016412727534770966, -5.125986263010418e-06, -0.002025458961725235, -0.18641698360443115, -9.440929716220126e-05, -0.1873328983783722, -0.00024089295766316354, -9.798523387871683e-05, -2.0265373677830212e-05, -1.3589766240329482e-05, -4.529942543740617e-06, -8.940656698541716e-06, -8.4638240878121e-06, -0.0007787294453009963, -0.000102037942269817, -0.0003511289251036942, -0.0014893640764057636, -0.0035482801031321287, -3.576278118089249e-07, -0.000547378440387547, -2.632800817489624, -0.004265140276402235, -0.881263017654419, -0.06360025703907013, -0.0013506823452189565, -0.3033071756362915, -0.00036995718255639076, -2.527867317199707, -1.1056545972824097, -1.898453950881958, -0.060331858694553375, -0.6144890785217285, -0.1009305939078331, -0.0029187481850385666, -0.00014804698002990335, -0.019727924838662148, -0.3648957908153534, -0.005427624564617872, -1.7523612768854946e-05, -0.0001911934232339263, -0.005965168122202158, -0.0005015069036744535, -0.00020954797219019383, -0.03883340209722519, -0.00077622797107324, -1.909356713294983, -0.000830901088193059, -0.0025653094053268433, -0.005872852168977261, -0.7019004225730896, -0.00551998196169734, -0.007215157151222229, -1.5497195136049413e-06, -1.9192511899746023e-05, -0.3621736466884613, -1.0013530300057027e-05, -0.0002991705550812185, -0.8802053928375244, -0.004265377763658762, -0.11073209345340729, -0.0008349508279934525, -0.0004640932602342218, -0.0058698891662061214, -0.00016378014697693288, -0.00011884459672728553, -1.1324817933200393e-05, -0.00013517419574782252, -0.036463718861341476, -0.0002623452164698392, -0.00012432756193447858, -0.08753109723329544, -0.018425259739160538, -0.16961395740509033, -0.8830579519271851, -5.781483559985645e-05, -0.0001419681793777272, -0.062289584428071976, -0.18606965243816376, -0.00020382710499688983, -2.405165433883667, -0.011889309622347355, -0.00130353809799999, -0.0008253029081970453, -9.142934868577868e-05, -0.0349418930709362, -0.012123350985348225, -0.0001147919538198039, -2.992108420585282e-05, -0.0003516055876389146, -0.057677242904901505, -0.0005410637822933495, -0.3532005548477173, -0.002536534098908305, -0.13622593879699707, -0.43158087134361267, -0.9612398743629456, -0.0009242791566066444, -0.013155685737729073, -0.3529626429080963, -0.012681085616350174, -0.9330913424491882, -0.14477767050266266, -0.0035717994906008244, -0.003406557021662593, -0.18396274745464325, -0.00211016065441072, -1.2818198204040527, -5.602820692729438e-06, -0.4831642508506775, -0.004981605801731348, -0.001602795091457665, -0.039431676268577576, -0.05618862807750702, -8.106198947643861e-06, -0.05339460447430611, -0.09947039186954498, -1.186572790145874, -0.3058868944644928, -0.018136732280254364, -0.5419185757637024, -0.029755854979157448, -0.001255677198059857, -0.004767004866153002, -0.47067195177078247, -0.0696827620267868, -0.08549964427947998, -0.0875256359577179, -0.06336844712495804, -0.43247535824775696], "finish_reason": "stop"}], "metrics": {"energy": 611.6856550712586, "energy_per_token": 3.360910192699223, "time": 15.133375, "time_per_token": 0.08315041208791209}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input data is not a DataFrame\")\n    if df.empty:\n        raise ValueError(\"Input data is empty\")\n    if col1 not in df.columns:\n        raise ValueError(f\"Column '{col1}' not found in the DataFrame\")\n    if col2 not in df.columns:\n        raise ValueError(f\"Column '{col2}' not found in the DataFrame\")\n\n    if not (df[col1].dtype.kind in 'iuf' and df[col2].dtype.kind in 'iuf'):\n        raise TypeError(\"Input data must be numeric\")\n\n    plot = sns.scatterplot(data=df, x=col1, y=col2, hue=col1, alpha=0.5)\n    plot = sns.regplot(data=df, x=col1, y=col2, scatter=False, edgecolor=None, line_kws={'color': 'red'})\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " is", " not", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " is", " empty", "\"", ")", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " '", "{", "col", "1", "}'", " not", " found", " in", " the", " Data", "Frame", "\"", ")", "\n", "    ", "if", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " '", "{", "col", "2", "}'", " not", " found", " in", " the", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "if", " not", " (", "df", "[", "col", "1", "]", ".", "d", "type", ".", "kind", " in", " '", "i", "uf", "'", " and", " df", "[", "col", "2", "]", ".", "d", "type", ".", "kind", " in", " '", "i", "uf", "')", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " data", " must", " be", " numeric", "\"", ")", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " hue", "=", "col", "1", ",", " alpha", "=", "0", ".", "5", ")", "\n", "    ", "plot", " =", " s", "ns", ".", "reg", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " scatter", "=", "False", ",", " edge", "color", "=", "None", ",", " line", "_", "k", "ws", "={", "'", "color", "':", " '", "red", "'})", "\n", "    ", "return", " plot", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -0.9383212327957153, -1.3177107572555542, -0.008205984719097614, -0.05750303342938423, -0.2175033837556839, -0.0031070075929164886, -0.9926612377166748, -0.00031871485407464206, -0.0008123196894302964, -0.1595493108034134, -0.3878033757209778, -0.0257493294775486, -0.0024467550683766603, -0.001733468729071319, -0.015279269777238369, -0.00033563701435923576, -0.00020680672605521977, -0.0011639971053227782, -0.0004101150552742183, -1.1920928244535389e-07, -0.0010826685465872288, -0.0027009693440049887, -0.17912356555461884, -0.9847519397735596, -0.025255098938941956, -0.020461197942495346, -0.007233383134007454, -3.802703940891661e-05, -4.708655978902243e-05, -0.03239286318421364, -0.0222333911806345, -0.18219870328903198, -0.00035601475974544883, -0.009594164788722992, -5.8412379075889476e-06, -0.00448946189135313, -0.12537632882595062, -7.843663479434326e-05, -1.8895207643508911, -0.00033396866638213396, -0.00016950124700088054, -0.00034850722295232117, -0.009952209889888763, -7.152555099310121e-07, -0.0008397151832468808, -0.2925804853439331, -0.001862459466792643, -0.18637453019618988, -0.9504693150520325, -0.0001045410826918669, -5.709961988031864e-05, -0.0006547214579768479, -0.0046002985909581184, -0.30385398864746094, -0.1028771921992302, -0.04546570032835007, -0.41421064734458923, -0.030465396121144295, -0.001384372473694384, -0.0143926115706563, -8.582700684200972e-05, -0.0001012035645544529, -0.0012236495967954397, -0.0010892179561778903, -0.0041686310432851315, -0.00018535325943958014, -3.325883881188929e-05, -7.152555099310121e-07, -6.318072337307967e-06, -1.6927575416048057e-05, -9.417489309271332e-06, -9.035655966727063e-05, -1.4305012882687151e-05, -7.73638384998776e-05, -7.033100700937212e-05, -7.974783511599526e-05, -1.1920928244535389e-07, -6.985420623095706e-05, -0.0032649326603859663, -6.6756979322235566e-06, -6.663577369181439e-05, -0.0004539651272352785, -2.3007127310847864e-05, -1.1205610462639015e-05, -0.0010258655529469252, -4.994744449504651e-05, -0.00013755806139670312, -1.3232143828645349e-05, -4.482168878894299e-05, -5.6265202147187665e-05, -3.790783375734463e-05, -4.291525328881107e-06, -0.00020728347590193152, -4.792098479811102e-05, -7.009260298218578e-05, -0.9362387657165527, -0.0006947487709112465, -2.0818331241607666, -0.5099840760231018, -1.1141489744186401, -0.039204515516757965, -0.02481016330420971, -0.00032276666024699807, -0.0023532812483608723, -0.00044169207103550434, -0.00033861625706776977, -0.038775719702243805, -0.04587956517934799, -0.35230326652526855, -0.20174026489257812, -0.0710148736834526, -0.2956347167491913, -0.5959451794624329, -0.0017639329889789224, -1.0053060054779053, -0.007266283966600895, -0.0012030514189973474, -0.0007955246837809682, -2.0265373677830212e-05, -0.0038379596080631018, -3.886147169396281e-05, -1.7523612768854946e-05, -6.01988795096986e-05, -2.264974000354414e-06, -2.396077979938127e-05, -6.794906312279636e-06, -0.0002699726028367877, -0.0004545609117485583, -0.00019667598826345056, -5.245195097813848e-06, -0.0006967739318497479, -0.0018584138015285134, -0.004461691714823246, -0.010401798412203789, -0.011159858666360378, -0.014260878786444664, -9.536697689327411e-06, -0.06234166771173477, -0.07152096182107925, -1.744006633758545, -0.5103106498718262, -1.2454875707626343, -0.14541323482990265, -0.13165557384490967, -0.038525696843862534, -0.00033444532891735435, -0.001430917764082551, -0.04530712217092514, -0.0005664412747137249, -1.2387865781784058, -0.005092625040560961, -0.009486123919487, -1.1920922133867862e-06, -2.276871418871451e-05, -0.20640555024147034, -1.4185804502631072e-05, -0.00023910524032544345, -0.8861753940582275, -0.005671599879860878, -0.0004468158003874123, -0.01424113567918539, -0.023225996643304825, -0.0003393312799744308, -0.02035163901746273, -0.00019822540343739092, -0.00016532962035853416, -0.0014271085383370519, -8.40390202938579e-05, -5.328513361746445e-05, -3.814624506048858e-05, -1.8217113018035889, -2.8232030868530273, -0.007062234450131655, -0.017549237236380577, -0.7156463861465454, -0.9348230361938477, -3.393681049346924, -0.021582501009106636, -0.27472952008247375, -0.004697596654295921, -1.286458134651184, -0.20186097919940948, -0.01970384642481804, -0.11416323482990265, -0.4076460003852844, -0.04674011841416359, -0.0016877705929800868, -3.576278118089249e-07, -2.9444261599564925e-05, -0.08829609304666519, -0.06619458645582199, -0.00031442465842701495, -0.05088464543223381, -0.0005049622268415987, -0.0001512651506345719, -0.0036834506317973137, -0.007882559671998024, -0.000399033073335886, -0.000832449528388679, -0.00010942813969450071, -3.8265450712060556e-05, -0.0005933669744990766, -5.4238757002167404e-05, -0.0002708068350329995, -0.00010251473577227443, -0.01563188247382641, -0.07662966847419739, -0.0003953390696551651, -0.09892437607049942, -0.21315011382102966, -2.1306703090667725, -0.008546561934053898, -0.3509606122970581, -0.07339002192020416, -0.6714926958084106, -0.6613560914993286, -0.013524572364985943, -0.00015424491721205413, -1.1920922133867862e-06, -0.37150242924690247, -0.004736987873911858, -0.2739350497722626, -0.00037329382030293345, -0.31671392917633057, -0.5987750291824341, -0.46705955266952515, -0.01148528978228569, -0.6757821440696716, -0.22597472369670868, -0.004902959801256657, -2.039490222930908, -9.536738616588991e-07, -3.3378546504536644e-06, -5.722029527532868e-06, -8.046303264563903e-05, -0.1660722941160202], "finish_reason": "stop"}], "metrics": {"energy": 853.0638023452763, "energy_per_token": 3.3585189068711663, "time": 21.428524, "time_per_token": 0.08436426771653543}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input data should be a DataFrame\")\n    elif df.empty:\n        raise ValueError(\"Input data should not be an empty DataFrame\")\n    elif col1 not in df or col2 not in df:\n        raise ValueError(\"DataFrame should have 'col1' and 'col2' columns\")\n    try:\n        sns.regplot(x=col1, y=col2, data=df)\n    except TypeError:\n        raise TypeError(\"DataFrame should have numeric data\")\n    except ValueError:\n        raise ValueError(\"DataFrame should have 'col1' and 'col2' columns\")\n    return plt.gca()", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " Data", "Frame", "\"", ")", "\n", "    ", "elif", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " should", " not", " be", " an", " empty", " Data", "Frame", "\"", ")", "\n", "    ", "elif", " col", "1", " not", " in", " df", " or", " col", "2", " not", " in", " df", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "DataFrame", " should", " have", " '", "col", "1", "'", " and", " '", "col", "2", "'", " columns", "\"", ")", "\n", "    ", "try", ":", "\n", "        ", "s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "except", " Type", "Error", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "DataFrame", " should", " have", " numeric", " data", "\"", ")", "\n", "    ", "except", " Value", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "DataFrame", " should", " have", " '", "col", "1", "'", " and", " '", "col", "2", "'", " columns", "\"", ")", "\n", "    ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "#"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -0.9383212327957153, -1.7781389951705933, -0.001029200037010014, -0.12728865444660187, -0.7404181957244873, -0.011017795652151108, -0.6093577742576599, -0.00032300499151460826, -0.0003510097449179739, -0.2153729349374771, -1.6738543510437012, -0.04144180566072464, -0.016952136531472206, -0.0009660820942372084, -0.01589684747159481, -0.0008188708452507854, -0.00041929035796783864, -0.005223673768341541, -0.00042215018766000867, -5.960462772236497e-07, -0.0016079128254204988, -0.006169559899717569, -0.19604553282260895, -0.8359624743461609, -0.449660986661911, -0.06587431579828262, -0.0004316828562878072, -1.5850824117660522, -0.0002536452084314078, -0.011194635182619095, -0.0004011779965367168, -0.003698296844959259, -5.054346183896996e-05, -2.4914430468925275e-05, -0.028655152767896652, -0.07527229189872742, -0.21478091180324554, -0.00052998325554654, -0.013635940849781036, -4.887569048150908e-06, -0.004498600028455257, -1.8362878561019897, -0.00044860312482342124, -0.00015686711412854493, -3.135155202471651e-05, -4.017272294731811e-05, -4.6491513785440475e-06, -0.0033053308725357056, -0.000856628583278507, -0.0005144941387698054, -0.002107186708599329, -0.007080344948917627, -1.1920928244535389e-07, -0.000788139586802572, -0.10204296559095383, -2.015115737915039, -0.3137728273868561, -1.911301612854004, -2.827913522720337, -1.1969834566116333, -0.004697715397924185, -0.0024755329359322786, -0.023967882618308067, -0.004388938657939434, -0.0004300146538298577, -0.0011463745031505823, -0.0009307105210609734, -0.11978575587272644, -0.08727417886257172, -0.00029702542815357447, -0.00013815402053296566, -0.3064843416213989, -2.150378465652466, -0.0008842610404826701, -0.0025497328024357557, -0.0072469934821128845, -1.5558598041534424, -0.004442109260708094, -0.10508393496274948, -1.8960741758346558, -0.023015741258859634, -0.00041738382424227893, -0.31193646788597107, -0.01756809465587139, -0.3306749761104584, -0.0010756427654996514, -0.00033444532891735435, -0.005089304409921169, -0.00022015532886143774, -0.00038342276820912957, -1.3470558769768104e-05, -0.00016675988445058465, -0.0060854386538267136, -0.0004012971476186067, -0.0003351603518240154, -0.07432673126459122, -0.036066289991140366, -0.4914242625236511, -0.0016519484343007207, -1.4315725564956665, -1.549708758830093e-05, -0.3150952458381653, -0.005233042407780886, -0.0014171091606840491, -0.042620036751031876, -0.08590613305568695, -2.038458114839159e-05, -0.09181517362594604, -0.05062788352370262, -0.5944766998291016, -0.45527127385139465, -0.34486812353134155, -0.2730245888233185, -0.7373626232147217, -0.41486793756484985, -0.0028871302492916584, -0.023979289457201958, -0.2767224907875061, -1.4140856266021729, -1.0983911752700806, -3.4570634852570947e-06, -0.22945977747440338, -0.0044991932809352875, -0.0006498370785266161, -0.06881046295166016, -0.029671495780348778, -1.6689286894688848e-06, -0.010209361091256142, -0.01867053098976612, -0.16259749233722687, -0.057163532823324203, -0.030388496816158295, -1.5783708095550537, -0.03169623762369156, -0.00019822540343739092, -0.00025078488397412, -0.003967510536313057, -0.0014079429674893618, -0.0003259842633269727, -0.0002203936892328784, -0.0002330270071979612, -0.030654435977339745, -0.26875895261764526, -0.015717552974820137, -0.03360923007130623, -0.21911408007144928, -0.9192960262298584, -2.868527889251709, -0.24223990738391876, -0.07103452831506729, -0.0005004345439374447, -0.0002733095607254654, -0.2538866400718689, -0.006202614400535822, -2.643371105194092], "finish_reason": "stop"}], "metrics": {"energy": 593.4170040702819, "energy_per_token": 3.430156092891803, "time": 14.513117, "time_per_token": 0.08389084971098265}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input DataFrame is not a valid pandas DataFrame.\")\n\n    if df.empty:\n        raise ValueError(\"Input DataFrame is empty.\")\n\n    if col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(\"The specified column names are not found in the DataFrame.\")\n\n    try:\n        plot = sns.scatterplot(data=df, x=col1, y=col2, hue=col1, style=col1, alpha=0.5, linewidth=0)\n        sns.lineplot(data=df, x=col1, y=col2, marker=\"o\", dashes=False, linewidth=2)\n    except Exception as e:\n        raise TypeError(\"DataFrame contains non-numeric data.\") from e\n\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " not", " a", " valid", " pandas", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", ".", "\"", ")", "\n", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " specified", " column", " names", " are", " not", " found", " in", " the", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " hue", "=", "col", "1", ",", " style", "=", "col", "1", ",", " alpha", "=", "0", ".", "5", ",", " linewidth", "=", "0", ")", "\n", "        ", "s", "ns", ".", "line", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " marker", "=", "\"", "o", "\"", ",", " d", "ashes", "=", "False", ",", " linewidth", "=", "2", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "DataFrame", " contains", " non", "-", "numeric", " data", ".", "\"", ")", " from", " e", "\n", "\n", "    ", "return", " plot", "\n", "\n", "#"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -3.419571876525879, -0.004238788038492203, -0.25069189071655273, -0.08301258087158203, -1.0618975162506104, -0.9552398324012756, -1.2094919681549072, -0.0037418841384351254, -0.00034767304896377027, -0.626789391040802, -0.0028580077923834324, -0.00019870213873218745, -0.00023123928986024112, -1.452479600906372, -0.0002640137099660933, -0.0737733393907547, -0.05122752860188484, -0.006193847395479679, -0.0013368725776672363, -0.02229902893304825, -0.0010281282011419535, -0.0003564914222806692, -0.002813787665218115, -0.00025102324434556067, -1.1920928244535389e-07, -0.0014197280397638679, -0.0023486430291086435, -0.03777112066745758, -0.0008278042078018188, -0.0003393312799744308, -0.011034891940653324, -0.0017874945187941194, -0.013518456369638443, -0.02013014629483223, -6.0794889577664435e-05, -3.0874729418428615e-05, -0.009172916412353516, -0.00012408917245920748, -0.0509704053401947, -0.4388514757156372, -0.00030012393835932016, -0.014792169444262981, -5.006777428206988e-06, -0.0032670714426785707, -0.10883666574954987, -6.97350042173639e-05, -0.25252097845077515, -0.00019667598826345056, -0.00010287232726113871, -2.0146166207268834e-05, -2.312633478140924e-05, -4.529942543740617e-06, -2.062299427052494e-05, -9.65590606938349e-06, -0.0006308949086815119, -0.00011812942830147222, -0.00023827097902540118, -0.0018757858779281378, -0.003154304577037692, -2.3841855067985307e-07, -0.0007638397510163486, -0.16774939000606537, -3.107618808746338, -0.35202756524086, -2.0103447437286377, -0.6178231239318848, -0.3338596522808075, -0.026603344827890396, -1.5423789024353027, -0.006180578377097845, -0.0037390338256955147, -0.06810947507619858, -0.0007474012672901154, -0.009367560036480427, -0.0014871024759486318, -0.0003303935518488288, -8.892617915989831e-05, -0.048494890332221985, -0.0009558399324305356, -1.5188905000686646, -0.0007756323902867734, -0.0018576999427750707, -0.00678153894841671, -0.6755086779594421, -0.005588147323578596, -0.007952101528644562, -8.344646857949556e-07, -2.1815061700181104e-05, -0.4005832076072693, -1.0847986231965479e-05, -0.00026806574896909297, -0.38455063104629517, -0.004183826502412558, -0.0006330393371172249, -0.02486691065132618, -0.015335973352193832, -0.0005469018360599875, -0.05924005061388016, -0.0003773453936446458, -0.00028546550311148167, -0.0011857867939397693, -9.655486064730212e-05, -5.054346183896996e-05, -2.932505594799295e-05, -0.9410246014595032, -1.8289120197296143, -0.005543336272239685, -0.012744762934744358, -0.6667412519454956, -0.7798492312431335, -0.3981188237667084, -0.00018702188390307128, -0.0010380124440416694, -0.3396681249141693, -0.7049161791801453, -1.8924953937530518, -0.011643076315522194, -0.20130865275859833, -0.0018123644404113293, -2.5233404636383057, -1.8778884410858154, -0.7183277606964111, -0.009820599108934402, -0.790596067905426, -0.5933545231819153, -0.08397704362869263, -0.22914937138557434, -0.9119561314582825, -2.3483953555114567e-05, -2.8729025871143676e-05, -1.293472170829773, -0.06193254515528679, -3.71926071238704e-05, -0.44304630160331726, -0.0002698534226510674, -0.00035529976594261825, -0.007546252105385065, -0.004271550104022026, -0.0003293210465926677, -0.0014327033422887325, -0.00016056202002801, -5.2927523938706145e-05, -0.00021371940965764225, -0.00011729506513802335, -0.0003922408213838935, -0.00043394684325903654, -0.022970423102378845, -2.365593433380127, -0.6477272510528564, -0.6162366271018982, -0.13646787405014038, -3.242440288886428e-05, -0.05860741809010506, -1.9822148084640503, -0.00016711745411157608, -0.0015764916315674782, -0.002152389846742153, -0.22881941497325897, -1.1387999057769775, -0.0009432157967239618, -1.3148272037506104, -0.3121047019958496, -0.01281561516225338, -0.7668800950050354, -0.001799156074412167, -1.744444489479065, -0.13672618567943573, -0.07617564499378204, -0.0011277989251539111, -0.001821169862523675, -0.0014990055933594704, -0.1969422996044159, -0.2519261837005615, -1.0609570381348021e-05, -0.045760683715343475, -0.24833223223686218, -2.6827754974365234, -0.8433567881584167, -0.2478894740343094, -0.002654245588928461, -0.0035476861521601677, -0.38994133472442627, -0.7068535685539246, -0.1643654853105545, -0.005196872632950544, -0.03823247179389, -0.0013084192760288715, -0.0016861044568940997, -0.09146928042173386, -0.001212576637044549, -0.10600655525922775, -0.0017149040941148996, -0.2650093734264374, -0.0017218063585460186, -2.735196590423584], "finish_reason": "stop"}], "metrics": {"energy": 751.1180081272124, "energy_per_token": 3.526375625010387, "time": 17.866364, "time_per_token": 0.08387964319248827}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"df must be a pandas DataFrame\")\n    if df.empty:\n        raise ValueError(\"df must not be empty\")\n    if col1 not in df or col2 not in df:\n        raise ValueError(\"df must contain the specified columns\")\n    sns.set_theme(style=\"ticks\")\n    plot = sns.lmplot(data=df, x=col1, y=col2, ci=None, scatter_kws={\"s\": 100})\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " must", " not", " be", " empty", "\"", ")", "\n", "    ", "if", " col", "1", " not", " in", " df", " or", " col", "2", " not", " in", " df", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " must", " contain", " the", " specified", " columns", "\"", ")", "\n", "    ", "s", "ns", ".", "set", "_", "theme", "(", "style", "=", "\"", "t", "icks", "\"", ")", "\n", "    ", "plot", " =", " s", "ns", ".", "lm", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " c", "i", "=", "None", ",", " scatter", "_", "k", "ws", "=", "{\"", "s", "\":", " ", "1", "0", "0", "})", "\n", "    ", "return", " plot", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -2.333841323852539, -0.27960726618766785, -0.0012871085200458765, -0.018316414207220078, -0.5132849216461182, -0.006430292036384344, -0.0005380851216614246, -0.21657907962799072, -0.00024423000286333263, -0.0004528927383944392, -0.17931927740573883, -0.16042283177375793, -0.029468031600117683, -0.0031166335102170706, -0.0005552418879233301, -0.01571614295244217, -0.00039867559098638594, -0.00015829740732442588, -0.001262463629245758, -0.0002466136065777391, -2.3841855067985307e-07, -0.0006943913758732378, -0.0015256681945174932, -0.09063571691513062, -0.519748866558075, -0.027561472728848457, -0.00011097769311163574, -0.003240574151277542, -0.0015798242529854178, -7.021180499577895e-05, -2.276871418871451e-05, -0.029838472604751587, -0.022212987765669823, -0.24540576338768005, -0.00021669900161214173, -0.012299052439630032, -5.483612312673358e-06, -0.0014807938132435083, -2.9063024520874023, -0.0007940953364595771, -6.294052582234144e-05, -2.8609820219571702e-05, -7.068861305015162e-05, -3.2186455882765586e-06, -0.001791897346265614, -0.0003228858404327184, -0.00022063204960431904, -0.0007918321643956006, -0.004346922505646944, -4.768370445162873e-07, -0.00038675934774801135, -0.14347971975803375, -0.30372896790504456, -0.006134016439318657, -0.023440981283783913, -0.8110745549201965, -0.061546456068754196, -0.005067718215286732, -0.008247366175055504, -0.00020561488054227084, -0.00012003655137959868, -0.40425702929496765, -3.01521635055542, -0.008066102862358093, -0.06354007124900818, -0.11101836711168289, -0.3431660234928131, -0.39356061816215515, -0.525099515914917, -0.4038262963294983, -0.058623943477869034, -0.0007284610182978213, -0.011577796190977097, -0.0013704441953450441, -9.65590606938349e-06, -0.08836430311203003, -0.002037236699834466, -0.042938247323036194, -0.6754156947135925, -0.012850451283156872, -0.0173428226262331, -2.3841855067985307e-07, -1.4066597032069694e-05, -1.5167605876922607, -2.9802276912960224e-06, -0.0001070442158379592, -1.4826817512512207, -0.010446391999721527, -0.0010432521812617779, -0.012538531795144081, -0.027806483209133148, -0.0019847711082547903, -0.010872293263673782, -0.0013735393295064569, -0.00038747431244701147, -0.0014398456551134586, -0.00014780859055463225, -9.715084888739511e-05, -1.6927575416048057e-05, -0.590525209903717, -0.36261147260665894, -0.00015054999676067382, -0.01343812607228756, -0.14069132506847382, -0.2594453990459442, -0.2683875858783722, -0.019504891708493233, -0.0006632988806813955, -8.940656698541716e-06, -0.1791231632232666, -0.0037944952491670847, -0.10476171225309372, -0.00013136000779923052, -0.00549662671983242, -0.30431029200553894, -0.010663787834346294, -0.06741590797901154, -0.3804633319377899, -0.029681911692023277, -0.06223783269524574, -0.08270522952079773, -0.004202226642519236, -0.267204225063324, -0.005856141913682222, -0.49247583746910095], "finish_reason": "stop"}], "metrics": {"energy": 509.4170999164582, "energy_per_token": 3.5874443656088606, "time": 11.783942, "time_per_token": 0.08298550704225352}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"The input df should be a non-empty DataFrame.\")\n    if df.empty:\n        raise ValueError(\"The input df should be a non-empty DataFrame.\")\n    if not set([col1, col2]).issubset(df.columns):\n        raise ValueError(f\"The input df should contain the specified columns '{col1}' and '{col2}'.\")\n    if not set([df[col1].dtype == \"int64\", df[col1].dtype == \"float64\",\n                df[col2].dtype == \"int64\", df[col2].dtype == \"float64\"]) == set([True]):\n        raise TypeError(\"The input df should contain only numeric data.\")\n\n    sns.scatterplot(x=col1, y=col2, data=df)\n    sns.regplot(x=col1, y=col2, data=df, scatter=False, color='red')\n", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " df", " should", " be", " a", " non", "-", "empty", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " df", " should", " be", " a", " non", "-", "empty", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " not", " set", "([", "col", "1", ",", " col", "2", "])", ".", "iss", "ub", "set", "(", "df", ".", "columns", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " input", " df", " should", " contain", " the", " specified", " columns", " '", "{", "col", "1", "}'", " and", " '", "{", "col", "2", "}'", ".", "\"", ")", "\n", "    ", "if", " not", " set", "([", "df", "[", "col", "1", "]", ".", "d", "type", " ==", " \"", "int", "6", "4", "\"", ",", " df", "[", "col", "1", "]", ".", "d", "type", " ==", " \"", "float", "6", "4", "\"", ",", "\n", "                ", "df", "[", "col", "2", "]", ".", "d", "type", " ==", " \"", "int", "6", "4", "\"", ",", " df", "[", "col", "2", "]", ".", "d", "type", " ==", " \"", "float", "6", "4", "\"", "])", " ==", " set", "([", "True", "]", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "The", " input", " df", " should", " contain", " only", " numeric", " data", ".", "\"", ")", "\n", "\n", "    ", "s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ",", " scatter", "=", "False", ",", " color", "='", "red", "')", "\n"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -1.8810577392578125, -0.09794288128614426, -0.40160250663757324, -1.2623839378356934, -0.0024943212047219276, -0.02692808397114277, -1.2118384838104248, -0.005812172312289476, -0.0011219641892239451, -0.4662189781665802, -0.0012492479290813208, -0.3338334560394287, -0.0022632479667663574, -0.000301673193462193, -0.0002586507180240005, -0.21276944875717163, -0.1971721351146698, -0.029659807682037354, -0.0013453251449391246, -0.0003947432560380548, -0.009975933469831944, -0.00023850933939684182, -0.00045003299601376057, -0.00023576818057335913, -0.0003361137059982866, 0.0, -0.0004086851258762181, -0.0023551841732114553, -0.003243782324716449, -0.0012261499650776386, -0.024285683408379555, -0.021590666845440865, -0.00344279152341187, -0.0029337245505303144, -0.0019337303237989545, -0.0001573438785271719, -2.407998726994265e-05, -0.00014161060971673578, -0.00030071981018409133, -0.004790139850229025, -0.0001438752660760656, -2.3245540432981215e-05, -6.961580220377073e-05, -0.017346806824207306, -0.013410015031695366, -1.649900197982788, -2.8140578269958496, -0.08878947794437408, -0.0014493685448542237, -0.0001829695247579366, -0.0018574618734419346, -0.0038699035067111254, -1.823885577323381e-05, -7.879423355916515e-05, -0.012409733608365059, -2.992108420585282e-05, -3.576278118089249e-07, 0.0, -5.6503606174374e-05, -0.08106085658073425, -0.0059707374311983585, -0.00014983485743869096, -0.009196658618748188, -0.0008283997885882854, -0.0004295380203984678, -0.00199773907661438, -0.003457047278061509, -3.576278118089249e-07, -0.0010215784423053265, -1.868720293045044, -0.013972558081150055, -0.3004608452320099, -0.3992692530155182, -0.06707829982042313, -0.24921882152557373, -0.1452200561761856, -0.5777469873428345, -1.6951651573181152, -0.01688825711607933, -3.1549618244171143, -0.019962593913078308, -0.00040058218291960657, -0.0004899493651464581, -0.007390303071588278, -0.02560456097126007, -0.0027317609637975693, -0.0001935771433636546, -1.7404405298293568e-05, -0.00018690270371735096, -0.0003400462737772614, -0.07776663452386856, -0.005194263532757759, -0.0016767027555033565, -0.00022289653134066612, -0.31513604521751404, -1.0755393505096436, -0.8699283003807068, -0.5471672415733337, -0.2875804305076599, -1.0330512523651123, -0.032971933484077454, -0.009294101037085056, -0.014459118247032166, -0.022567126899957657, -0.04113215580582619, -0.002803921001031995, -0.016613589599728584, -1.7699648141860962, -2.0443344116210938, -0.6202138066291809, -0.0118888383731246, -1.7881377516459906e-06, -3.957670196541585e-05, -0.1504007875919342, -0.06777188181877136, -3.659658250398934e-05, -9.97731985989958e-05, -0.3632059693336487, -5.721882189391181e-05, -0.0003748429589904845, -0.0017256144201382995, -2.3603161025675945e-05, -0.00260644918307662, -0.010226706974208355, -0.000382707774406299, -0.002224234864115715, -1.07287787614041e-05, -1.6093124941107817e-05, -0.23354865610599518, -2.6159398555755615, -0.07435539364814758, -0.03108568675816059, -3.1470757676288486e-05, -7.152531907195225e-06, -0.03318437561392784, -8.583032467868179e-06, -4.1483970562694594e-05, -4.6491513785440475e-06, -1.7881377516459906e-06, -0.000310730334604159, -0.005673970561474562, -0.002888319082558155, -0.00013100242358632386, -2.288792165927589e-05, -1.0490362910786644e-05, -0.002317126141861081, -0.004945071414113045, -2.455681169521995e-05, -1.2993727978027891e-05, -0.003504684194922447, -5.125986263010418e-06, -2.0265373677830212e-05, -1.9073468138230965e-06, -1.5497195136049413e-06, -0.0006437613046728075, -0.0037446157075464725, -8.713819261174649e-05, -0.0002153879904653877, -1.1920928244535389e-07, -9.417489309271332e-06, -0.04303416982293129, -0.22289423644542694, -0.07372937351465225, -0.002833282807841897, -0.004614419303834438, -0.008449637331068516, -3.4450891689630225e-05, -0.002110279630869627, -0.009110664948821068, -0.003951836843043566, -0.013417189940810204, -4.529942543740617e-06, -0.07024741917848587, -0.32306259870529175, -0.681284487247467, -0.2559560537338257, -0.15377414226531982, -0.12570028007030487, -0.31160905957221985, -0.7680744528770447, -0.09011884033679962, -0.22288182377815247, -0.21624553203582764, -0.0047988006845116615, -0.0004974558250978589, -0.0005248599336482584, -0.6023432612419128, -0.0003352795320097357, -1.8512459993362427, -0.008303523994982243, -0.09421406686306, -1.8025062084197998, -1.3351351299206726e-05, -0.0018041539005935192, -0.7786878943443298, -0.006863707676529884, -0.24866081774234772, -0.0012004319578409195, -0.0002903516869992018, -0.015951991081237793, -0.00021646064124070108, -0.0002134810492862016, -8.082063141046092e-05, -0.00033444532891735435, -0.0478903092443943, -0.00037293630884960294, -0.00018106251081917435, -0.0482337661087513, -0.011020036414265633, -0.11565843224525452, -0.7025761604309082, -0.0009243983076885343, -0.010832198895514011, -0.1252439171075821, -0.13608892261981964, -0.00014482879487331957, -0.01730099506676197, -0.0001532914029667154, -0.0017933252966031432, -9.190614218823612e-05, -2.4437606043647975e-05, -0.001029080944135785, -4.184158387943171e-05, -7.426462980220094e-05, -3.886147169396281e-05, -0.00027092601521871984, -0.006274879910051823, -0.0001006075763143599, -6.675497570540756e-05, -0.10170156508684158, -0.12754294276237488, -0.00029225845355540514, -0.26869580149650574, -1.5201146602630615, -0.921030580997467, -1.0494036674499512, -0.6376825571060181, -0.17445150017738342, -0.01105906069278717], "finish_reason": "length"}], "metrics": {"energy": 871.4072583560951, "energy_per_token": 3.4039346029534965, "time": 21.435276, "time_per_token": 0.083731546875}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input must be a pandas DataFrame\")\n    if df.empty:\n        raise ValueError(\"Input DataFrame is empty\")\n    if not all(col in df.columns for col in [col1, col2]):\n        raise ValueError(\"Input DataFrame does not contain the specified columns\")\n    sns.set_theme(color_codes=True)\n    plot = sns.regplot(x=col1, y=col2, data=df)\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", "\"", ")", "\n", "    ", "if", " not", " all", "(", "col", " in", " df", ".", "columns", " for", " col", " in", " [", "col", "1", ",", " col", "2", "]", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " does", " not", " contain", " the", " specified", " columns", "\"", ")", "\n", "    ", "s", "ns", ".", "set", "_", "theme", "(", "color", "_", "codes", "=", "True", ")", "\n", "    ", "plot", " =", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "return", " plot", "\n", "\n", "#"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -1.9891997575759888, -0.0006404255982488394, -0.015757685527205467, -1.3997048139572144, -0.0078141950070858, -0.0010555178159847856, -0.5045332908630371, -0.00019035911827813834, -0.0005626287311315536, -0.17265142500400543, -0.2008247822523117, -0.04669608920812607, -0.002853609621524811, -0.0010557560017332435, -0.025875376537442207, -0.00042763148667290807, -0.00018785618885885924, -0.0018096276326104999, -0.00027426297310739756, -2.3841855067985307e-07, -0.0007497837068513036, -0.002105521271005273, -0.14977772533893585, -0.10346276313066483, -0.007807571440935135, -0.9693000316619873, -0.0005178302526473999, -0.008955905213952065, -6.711257447022945e-05, -3.93382906622719e-05, -0.031400538980960846, -0.01942761428654194, -2.0672531127929688, -0.5052981376647949, -0.23457413911819458, -0.19448073208332062, -0.0009899006690829992, -0.008401289582252502, -0.059578172862529755, -6.186770770000294e-05, -0.0007472821744158864, -6.9141146923357155e-06, -1.6689160474925302e-05, -0.22909978032112122, -0.00011193125828867778, -5.829164365422912e-05, -9.822363062994555e-05, -0.00045170116936787963, -1.0609570381348021e-05, -0.008097912184894085, -0.0001517419150331989, -0.000328367663314566, -0.00024339574156329036, -0.0025750594213604927, -0.004287693649530411, -5.960462772236497e-07, -0.00038938093348406255, -0.19563516974449158, -0.2562783658504486, -0.02361121214926243, -0.0006990373367443681, -0.6118187308311462, -5.638440416078083e-05, -0.04540600627660751, -0.1888219714164734, -0.01512522716075182, -0.013543624430894852, -0.010615311563014984, -0.0002040654799202457, -6.90197994117625e-05, -0.49526646733283997, -2.473133087158203, -0.006948355585336685, -0.03988562151789665, -0.10165558755397797, -0.36331483721733093, -0.33992382884025574, -0.4628944993019104, -1.3001019954681396, -5.960462772236497e-07, -0.005661168601363897, -0.0027499499265104532, -0.0023976408410817385, -0.019766494631767273, -0.004839374218136072, -0.03863213583827019, -1.10512113571167, -0.014717932790517807, -0.008609794080257416, -5.960462772236497e-07, -3.099393507000059e-05, -0.789511501789093, -0.007705370429903269, -0.00038842763751745224, -0.11480452120304108, -0.014062718488276005, -0.13254743814468384, -0.0009137984015978873, -0.0003420721332076937, -0.0034484940115362406, -0.00020037073409184813, -0.00017641419253777713, -1.9907753085135482e-05, -0.00022599527437705547, -0.013268271461129189, -0.0002961912250611931, -0.00015829740732442588, -0.07387188076972961, -0.01109961699694395, -0.05949528142809868, -0.06992333382368088, -0.003485320834442973, -0.19056059420108795, -0.00552330119535327, -2.532076358795166], "finish_reason": "stop"}], "metrics": {"energy": 476.4169347047809, "energy_per_token": 3.5820822158254204, "time": 10.929042, "time_per_token": 0.08217324812030076}}
{"outputs": [{"text": "# \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f pandas DataFrame\n    if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 df \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0442\u0438\u043f\u0430 pd.DataFrame\")\n    # \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0435\n    if col1 not in df or col2 not in df:\n        raise ValueError(\"\u0423\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c \u0434\u0430\u0442\u0430\u0444\u0440\u0435\u0439\u043c\u0435\")\n\n    # \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 DataFrame \u043d\u0435 \u043f\u0443\u0441\u0442\u043e\u0439\n    if df.empty:\n        raise ValueError(\"\u041f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 DataFrame \u043f\u0443\u0441\u0442\u043e\u0439\")\n\n    # \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u043b\u043e\u043d\u043a\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u043c\u0438\n    if not df[col1].dtype.kind in 'iuf", "tokens": ["#", " \u041f\u0440\u043e", "\u0432\u0435\u0440", "\u044f", "\u0435\u043c", ",", " \u0447", "\u0442\u043e", " \u043f\u0435", "\u0440\u0435", "\u0434\u0430", "\u043d", "\u043d\u044b", "\u0439", " \u0430\u0440", "\u0433\u0443", "\u043c\u0435\u043d\u0442", " \u044f", "\u0432", "\u043b\u044f", "\u0435\u0442", "\u0441\u044f", " pandas", " Data", "Frame", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "\u0410", "\u0440", "\u0433\u0443", "\u043c\u0435\u043d\u0442", " df", " \u0434\u043e", "\u043b", "\u0436\u0435\u043d", " \u0431", "\u044b", "\u0442\u044c", " \u0442\u0438", "\u043f\u0430", " pd", ".", "DataFrame", "\"", ")", "\n", "    ", "#", " \u041f\u0440\u043e", "\u0432\u0435\u0440", "\u044f", "\u0435\u043c", ",", " \u0447", "\u0442\u043e", " \u043f\u0435", "\u0440\u0435", "\u0434\u0430", "\u043d", "\u043d\u044b", "\u0435", " \u043a\u043e", "\u043b\u043e", "\u043d", "\u043a\u0438", " \u043f\u0440\u0438", "\u0441", "\u0443\u0442", "\u0441\u0442", "\u0432\u0443", "\u044e", "\u0442", " \u0432", " \u043f\u0435", "\u0440\u0435", "\u0434\u0430", "\u043d", "\u043d\u043e", "\u043c", " \u0434\u0430", "\u0442\u0430", "\u0444", "\u0440\u0435", "\u0439", "\u043c\u0435", "\n", "    ", "if", " col", "1", " not", " in", " df", " or", " col", "2", " not", " in", " df", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "\u0423", "\u043a\u0430\u0437\u0430", "\u043d", "\u043d\u044b", "\u0435", " \u043a\u043e", "\u043b\u043e", "\u043d", "\u043a\u0438", " \u043e\u0442", "\u0441", "\u0443\u0442", "\u0441\u0442", "\u0432\u0443", "\u044e", "\u0442", " \u0432", " \u043f\u0435", "\u0440\u0435", "\u0434\u0430", "\u043d", "\u043d\u043e", "\u043c", " \u0434\u0430", "\u0442\u0430", "\u0444", "\u0440\u0435", "\u0439", "\u043c\u0435", "\"", ")", "\n", "\n", "    ", "#", " \u041f\u0440\u043e", "\u0432\u0435\u0440", "\u044f", "\u0435\u043c", ",", " \u0447", "\u0442\u043e", " \u043f\u0435", "\u0440\u0435", "\u0434\u0430", "\u043d", "\u043d\u044b", "\u0439", " Data", "Frame", " \u043d\u0435", " \u043f\u0443", "\u0441\u0442\u043e", "\u0439", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "\u041f", "\u0435", "\u0440\u0435", "\u0434\u0430", "\u043d", "\u043d\u044b", "\u0439", " Data", "Frame", " \u043f\u0443", "\u0441\u0442\u043e", "\u0439", "\"", ")", "\n", "\n", "    ", "#", " \u041f\u0440\u043e", "\u0432\u0435\u0440", "\u044f", "\u0435\u043c", ",", " \u0447", "\u0442\u043e", " \u043f\u0435", "\u0440\u0435", "\u0434\u0430", "\u043d", "\u043d\u044b", "\u0435", " \u043a\u043e", "\u043b\u043e", "\u043d", "\u043a\u0438", " \u044f", "\u0432", "\u043b\u044f", "\u044e", "\u0442", "\u0441\u044f", " \u0447\u0438", "\u0441", "\u043b\u043e\u0432", "\u044b", "\u043c\u0438", "\n", "    ", "if", " not", " df", "[", "col", "1", "]", ".", "d", "type", ".", "kind", " in", " '", "i", "uf"], "logprobs": [-2.9147114753723145, -2.537335157394409, -0.032018519937992096, -0.24817970395088196, -0.014419285580515862, -0.16080841422080994, -0.05383751168847084, -1.1920928244535389e-07, -1.5507588386535645, -0.0003438596613705158, -0.1751740574836731, -0.0847010686993599, -0.3662908673286438, -0.031026633456349373, -1.866793155670166, -3.421248038648628e-05, -0.0009950215462595224, -1.5962800979614258, -0.0015016243560239673, -0.00029583368450403214, -1.3351351299206726e-05, -1.1920928244535389e-07, -1.8633793592453003, -0.12350952625274658, -0.0012488907668739557, -0.74958336353302, -0.0016213617054745555, -0.14223623275756836, -0.009172089397907257, -0.011837593279778957, -4.732496745418757e-05, -0.0005211663665249944, -0.00031120702624320984, -0.0013869914691895247, -2.0265558760002023e-06, -0.012592094950377941, -0.02256491221487522, -0.001293656532652676, -0.0016304069431498647, -0.013611244969069958, -0.010891513898968697, -2.622600959512056e-06, -0.07539048045873642, -0.03459153696894646, -2.1669273376464844, -0.003983065020292997, -8.940656698541716e-06, -0.00038425691309385, -0.20450599491596222, -0.006065058521926403, -1.7881377516459906e-06, -1.7165990357170813e-05, -0.0014106809394434094, -7.152555099310121e-07, -3.194758028257638e-05, -2.0631215572357178, -0.0013109194114804268, -0.8341354727745056, -7.199982064776123e-05, -7.760223525110632e-05, -0.05796774849295616, -0.0006607971154153347, -0.0002985746832564473, -0.7000940442085266, -0.13125692307949066, -0.013263213448226452, -0.012322602793574333, -0.00013028726971242577, -0.002240411238744855, -0.061918873339891434, -0.013439067639410496, -6.079655122448457e-06, -2.195178270339966, -5.722029527532868e-06, -0.00018463814922142774, -6.437280717364047e-06, -0.00198643677867949, -1.1996768712997437, -0.1346631646156311, -8.666139910928905e-05, -2.288792165927589e-05, -1.6927575416048057e-05, -0.15276075899600983, -0.006499817129224539, -2.3841855067985307e-07, -0.005391343496739864, -2.9802276912960224e-06, -0.0011210116790607572, -1.4305104514278355e-06, -0.001110771088860929, -0.5280338525772095, -9.989239333663136e-05, -0.006600365042686462, -3.862306402879767e-05, -0.008945507928729057, -0.0033289750572293997, -0.2554002106189728, -2.5510462364763953e-05, -0.00048673225683160126, -0.002552943304181099, -9.405170567333698e-05, -0.004702342674136162, -0.010185171850025654, -0.00038890427094884217, -0.09769251942634583, -0.45967862010002136, -0.00024434918304905295, -0.009036241099238396, -6.794906312279636e-06, -0.030274005606770515, -1.8528351783752441, -0.0008551992941647768, -0.0004808938247151673, -5.507317473529838e-05, -0.0007638397510163486, -8.106198947643861e-06, -0.003835465759038925, -9.07141511561349e-05, -0.00035422726068645716, -0.0012667496921494603, -0.005330634769052267, -1.1920928244535389e-07, -0.004595077130943537, -0.2792736291885376, -0.7440464496612549, -4.9232225137529895e-05, -2.0265558760002023e-06, -0.022649524733424187, -0.00026341783814132214, -0.01851584017276764, -1.3708974620385561e-05, -7.390948667307384e-06, -2.90866428258596e-05, -0.10436733067035675, -0.00032658010604791343, -5.960462772236497e-07, -0.001777260797098279, -4.184158387943171e-05, -0.0003475538978818804, -1.1801649634435307e-05, -0.0007877822499722242, -0.11081553995609283, -4.768370445162873e-07, -0.00027176024741493165, -2.1576648578047752e-05, -0.00010871296399272978, -0.0007032066932879388, -0.12296278029680252, -4.23184028477408e-05, -3.2066785934148356e-05, -2.407998726994265e-05, -0.00016556799528189003, -0.0007419217727147043, -0.08237955719232559, -0.00044050050200894475, -0.00024196557933464646, -2.3573801517486572, -0.0017536989180371165, -0.32301124930381775, -0.3849233090877533, -0.05129604786634445, -0.023839734494686127, -0.010917691513895988, -0.25908970832824707, -0.07562139630317688, -2.1815061700181104e-05, -0.882722795009613, -1.0013530300057027e-05, -0.001135419704951346, -0.0003856868715956807, -0.004747784696519375, -0.42618706822395325, -2.4163713455200195, -0.008638276718556881, -0.05992864444851875, -0.6034598350524902, -1.2808514833450317, -1.4305104514278355e-06, -0.049164704978466034, -0.0006731866160407662, -0.04217487573623657, -0.018531404435634613, -0.006151433102786541, -0.0016949110431596637, -0.009600894525647163, -0.0003768687602132559, -0.0007818264421075583, -0.016738681122660637, -0.004368762020021677, -1.1920928244535389e-07, -0.006058897357434034, -0.0015851801726967096, -0.025430483743548393, -0.02757851965725422, -1.1920928244535389e-07, -0.0001003691868390888, -7.152555099310121e-07, -0.0071175117045640945, -0.0001264730526600033, -0.042925912886857986, -0.000548331590835005, -0.8286775350570679, -0.009795336984097958, -4.768370445162873e-07, -0.11307714879512787, -7.688703772146255e-05, -0.00011801023356383666, -0.223945751786232, -0.002788467099890113, -0.25642144680023193, -0.31173765659332275, -0.023726003244519234, -0.017755724489688873, -0.030048685148358345, -0.1421559900045395, -0.048502158373594284, -0.00011920218821614981, -0.6396558284759521, -2.1457441107486375e-05, -0.0009540535393171012, -0.0004786299541592598, -0.001914812484756112, -0.053632691502571106, -0.37414324283599854, -0.00017593742813915014, -8.523101132595912e-05, -0.00011538793478393927, -2.131432056427002, -0.0066176545806229115, -0.004548323340713978, -0.008023886010050774, -0.0006380429258570075, -0.0002802217786666006, -0.5677411556243896, -5.709961988031864e-05, -0.036043521016836166, -1.7881377516459906e-06, -0.0024442579597234726, -0.19422033429145813, -0.006751463748514652, -0.09467700123786926, -0.3237229287624359, -0.8808311223983765, -0.026560278609395027, -0.0002516191452741623, -0.0011507801245898008, -7.676783570786938e-05, -2.8371408916427754e-05, -0.054676007479429245, -0.004891334567219019, -0.07608991861343384, -0.028429236263036728, -0.04106156527996063, -0.21511849761009216, -0.20106513798236847, -0.003925120458006859], "finish_reason": "length"}], "metrics": {"energy": 868.6152519950863, "energy_per_token": 3.393028328105806, "time": 21.65738, "time_per_token": 0.084599140625}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input df is not a DataFrame.\")\n    if df.empty:\n        raise ValueError(\"Input df is empty.\")\n    if col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(\"Input df does not contain the specified columns.\")\n    try:\n        return sns.scatterplot(data=df, x=col1, y=col2, legend=False, label=\"data\")\n    except TypeError:\n        raise TypeError(\"Non-numeric data detected in input df.\")", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " is", " not", " a", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " is", " empty", ".", "\"", ")", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " does", " not", " contain", " the", " specified", " columns", ".", "\"", ")", "\n", "    ", "try", ":", "\n", "        ", "return", " s", "ns", ".", "scatter", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " legend", "=", "False", ",", " label", "=", "\"", "data", "\"", ")", "\n", "    ", "except", " Type", "Error", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Non", "-", "numeric", " data", " detected", " in", " input", " df", ".", "\"", ")", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -1.6260977983474731, -1.991445541381836, -0.004777326714247465, -0.016352802515029907, -0.16026747226715088, -0.000709282117895782, -1.164579153060913, -0.012285039760172367, -0.00018535325943958014, -0.0004614718782249838, -0.1427863985300064, -0.26338130235671997, -0.02174733392894268, -0.0032226317562162876, -0.0008295908919535577, -0.009209651499986649, -0.0004450284468475729, -0.00017498392844572663, -0.0011092231143265963, -0.00034171465085819364, -1.1920928244535389e-07, -0.0008369756978936493, -0.0034420788288116455, -0.07078389078378677, -0.4385313391685486, -0.010383039712905884, -0.005809091031551361, -0.011041965335607529, -0.0019622850231826305, -0.00020990552729927003, -8.642300235806033e-05, -0.020770540460944176, -0.014668595045804977, -0.14960017800331116, -0.0002469711471349001, -0.00719988951459527, -4.172316494077677e-06, -0.0025085906963795424, -0.06965173780918121, -5.566918844124302e-05, -0.23344238102436066, -0.0001699779968475923, -5.9126061387360096e-05, -1.4781842764932662e-05, -1.3232143828645349e-05, -4.172316494077677e-06, -5.364403477869928e-06, -6.198863957251888e-06, -0.0007775382255204022, -0.00015507926582358778, -0.000179036331246607, -0.001450797077268362, -0.0025663794949650764, -2.3841855067985307e-07, -0.0006272017490118742, -0.13390322029590607, -0.29773738980293274, -0.0964885950088501, -0.03920348361134529, -0.00010477947944309562, -0.016657203435897827, -0.09261460602283478, -0.0032168091274797916, -0.03287019580602646, -0.023227743804454803, -0.000854961050208658, -6.09140915912576e-05, -6.031808152329177e-05, -0.4179299771785736, -1.8278615474700928, -0.001099935034289956, -0.006416789256036282, -0.009985965676605701, -2.6020073890686035, -0.00678153894841671, -1.4305104514278355e-06, -4.005352093372494e-05, -1.232961654663086, -7.164221460698172e-05, -0.0002388668799540028, -0.5986303687095642, -0.0060077086091041565, -0.0009209443815052509, -0.02337099425494671, -0.023520978167653084, -0.0005698964232578874, -0.036406129598617554, -0.00041714549297466874, -0.00025614796322770417, -0.0009635811438784003, -0.00011288482346571982, -6.174850568640977e-05, -3.540453326422721e-05, -0.44022998213768005, -2.927830457687378, -0.054969869554042816, -0.22449275851249695, -1.2484012842178345, -1.9746973514556885, -0.17911259829998016, -0.9721959829330444, -3.3874053955078125, -0.0528833232820034, -0.14657557010650635, -0.13175682723522186, -0.017218859866261482, -0.0011743560899049044, -0.8739296793937683, -7.629365427419543e-06, -0.3949489891529083, -0.006368580274283886, -0.0016250512562692165, -0.022914500907063484, -0.05947539955377579, -7.152531907195225e-06, -0.03737363591790199, -0.018180865794420242, -3.0755600929260254, -0.06185813993215561, -0.006945632863789797, -0.26966649293899536, -1.9427518844604492, -0.5635166168212891, -1.7736876010894775, -0.6253674626350403, -0.23946255445480347, -0.01859096623957157, -0.13038672506809235, -0.0684305876493454, -0.11897092312574387, -0.5295853018760681], "finish_reason": "stop"}], "metrics": {"energy": 526.0614273166658, "energy_per_token": 3.5306136061521194, "time": 12.412699, "time_per_token": 0.08330670469798658}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"df must be a DataFrame\")\n    if df.empty:\n        raise ValueError(\"df must not be empty\")\n    if col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(\"df must contain specified columns\")\n    if df[col1].dtype == object or df[col2].dtype == object:\n        raise TypeError(\"df must contain only numeric data\")\n\n    plot = sns.regplot(x=df[col1], y=df[col2])\n\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " must", " be", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " must", " not", " be", " empty", "\"", ")", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " must", " contain", " specified", " columns", "\"", ")", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "d", "type", " ==", " object", " or", " df", "[", "col", "2", "]", ".", "d", "type", " ==", " object", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "df", " must", " contain", " only", " numeric", " data", "\"", ")", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "reg", "plot", "(", "x", "=", "df", "[", "col", "1", "]", ",", " y", "=", "df", "[", "col", "2", "])", "\n", "\n", "    ", "return", " plot", "\n", "\n", "def"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -2.333841323852539, -0.27960726618766785, -0.0012871085200458765, -0.018316414207220078, -1.138216257095337, -0.002723082434386015, -0.1299000382423401, -0.0003163314249832183, -0.0006790239713154733, -0.15455938875675201, -0.2445775717496872, -0.038818150758743286, -0.0026720792520791292, -0.0008268513483926654, -0.013066384010016918, -0.0003927174839191139, -0.000163541772053577, -0.0012360322289168835, -0.0003415954706724733, -1.1920928244535389e-07, -0.0008657997823320329, -0.0016578990034759045, -0.10045760869979858, -0.34332630038261414, -0.03700666502118111, -0.0002244459028588608, -0.0034395840484648943, -0.001644212519749999, -7.164221460698172e-05, -2.1815061700181104e-05, -0.024942724034190178, -0.019360501319169998, -0.289492130279541, -0.00027569307712838054, -0.013405781239271164, -4.172316494077677e-06, -0.0014985294546931982, -0.07825664430856705, -4.351044481154531e-05, -0.27347612380981445, -0.0003947432560380548, -8.082063141046092e-05, -1.4185804502631072e-05, -2.3245540432981215e-05, -3.814689989667386e-06, -1.2516897186287679e-05, -8.106198947643861e-06, -0.0006906984490342438, -0.00011205045302631333, -0.00017486473370809108, -0.0008613928221166134, -0.0035175136290490627, -5.960462772236497e-07, -0.0003200257197022438, -0.0746198520064354, -0.30047550797462463, -0.008257769979536533, -0.017331575974822044, -2.975534200668335, -0.04210538789629936, -0.02321726083755493, -0.0002343380037928, -0.00011431517486926168, -0.34137415885925293, -0.5670616030693054, -0.5472406148910522, -0.06932234019041061, -0.00020037073409184813, -0.0012875846587121487, -0.0002851079625543207, -0.00010752100206445903, -0.016562234610319138, -0.0819549411535263, -2.1817922592163086, -0.6562073826789856, -0.09646239876747131, -0.0030354636255651712, -0.0005650115781463683, -8.976056415122002e-05, -0.010607526637613773, -5.173549288883805e-05, -5.352353764465079e-05, -9.369411418447271e-05, -2.95634672511369e-05, -0.0018221217906102538, -0.0008877150830812752, -0.009722145274281502, -0.00232081301510334, -0.004133372567594051, -0.015880538150668144, -0.01168891042470932, -5.602820692729438e-06, -0.04186968505382538, -0.011162098497152328, -0.23117755353450775, -0.30796143412590027, -0.22883573174476624, -0.5649334788322449, -0.039020635187625885, -0.14928561449050903, -0.013847471214830875, -0.0002928543253801763, -0.0011937642702832818, -0.5949665307998657, -0.0005494038923643529, -1.1493762731552124, -0.005341425072401762, -0.009198076091706753, -1.1920922133867862e-06, -2.407998726994265e-05, -1.9085524082183838, -0.007437989581376314, -0.00042489083716645837, -0.0925845056772232, -0.017872711643576622, -1.365049123764038, -0.0036429488100111485, -6.532455881824717e-05, -0.00025960413040593266, -2.7894584491150454e-05, -0.014486611820757389, -0.006690126843750477, -0.00035124807618558407, -0.0001958416833076626, -3.2782016205601394e-05, -9.298280929215252e-06, -2.6225699912174605e-05, -0.11281552910804749, -0.02291974239051342, -1.1231212615966797, -0.0018516314448788762, -0.024089964106678963, -0.0020973130594938993, -0.3639662563800812, -0.0023541138507425785, -1.4534549713134766], "finish_reason": "stop"}], "metrics": {"energy": 545.3083434658053, "energy_per_token": 3.5641068200379427, "time": 12.622629, "time_per_token": 0.0825008431372549}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input df must be a DataFrame.\")\n    if df.empty:\n        raise ValueError(\"Input df cannot be empty.\")\n    if not all(col in df.columns for col in [col1, col2]):\n        raise ValueError(\"Input df must contain the specified columns.\")\n    try:\n        sns.regplot(x=col1, y=col2, data=df)\n        ax = sns.scatterplot(x=col1, y=col2, data=df)\n    except Exception as e:\n        raise TypeError(\"Input data must be numeric\") from e\n    return ax", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " must", " be", " a", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " cannot", " be", " empty", ".", "\"", ")", "\n", "    ", "if", " not", " all", "(", "col", " in", " df", ".", "columns", " for", " col", " in", " [", "col", "1", ",", " col", "2", "]", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " must", " contain", " the", " specified", " columns", ".", "\"", ")", "\n", "    ", "try", ":", "\n", "        ", "s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "        ", "ax", " =", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " data", " must", " be", " numeric", "\"", ")", " from", " e", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -1.6260977983474731, -0.4003543555736542, -0.0006394725642167032, -0.010701765306293964, -0.8153151869773865, -0.0011532806092873216, -1.0351488590240479, -0.006864654831588268, -0.00030119650182314217, -0.000486970558995381, -0.1944810301065445, -0.18465110659599304, -0.020745903253555298, -0.0025242867413908243, -0.000849601230584085, -0.014467108063399792, -0.0004906642716377974, -0.00017629499780014157, -0.0010206258157268167, -0.00024828212917782366, -1.1920928244535389e-07, -0.0010247938334941864, -0.002360179089009762, -0.02512385882437229, -0.12292799353599548, -1.051573395729065, -0.00010108436981681734, -0.0014934111386537552, -0.006440478377044201, -0.0003756771038752049, -3.433168603805825e-05, -2.4437606043647975e-05, -0.018365805968642235, -0.013225450180470943, -1.3110666275024414, -0.33682748675346375, -0.1692616492509842, -0.11216050386428833, -0.0008819981012493372, -0.0062234653159976006, -0.03304436802864075, -3.2782016205601394e-05, -0.0004887578543275595, -4.887569048150908e-06, -1.7046782886609435e-05, -0.1063939705491066, -9.786603914108127e-05, -3.9219088648678735e-05, -8.749579137656838e-05, -0.0002426806604489684, -1.4066597032069694e-05, -0.006098827347159386, -8.5588610090781e-05, -0.0002946419408544898, -0.0002212279650848359, -0.0019920284394174814, -0.0027465024031698704, -4.768370445162873e-07, -0.00034981805947609246, -0.13826093077659607, -0.03720377758145332, -0.009809385053813457, -0.022339830175042152, -0.007127927616238594, -0.23876360058784485, -0.008231168612837791, -0.002679450437426567, -0.03472441807389259, -0.0011638780124485493, -0.00010823617776622996, -0.00023421882360707968, -0.46752774715423584, -1.530410647392273, -0.0012007892364636064, -0.004746242426335812, -0.008992175571620464, -1.6288478374481201, -0.004473440814763308, -0.06940586864948273, -1.5781619548797607, -0.01717093400657177, -0.00036507140612229705, -0.2393769770860672, -0.006761646829545498, -0.2502094507217407, -0.0004576589271891862, -0.00029273517429828644, -0.0034063193015754223, -0.00019369633810129017, -0.00012385078298393637, -1.1801649634435307e-05, -0.00010656742961145937, -0.003112474223598838, -0.00015245705435518175, -0.00018487652414478362, -0.06526753306388855, -0.019657794386148453, -1.2879185676574707, -2.0041301250457764, -0.013248390518128872, -0.07568052411079407, -1.9073468138230965e-06, -7.891343557275832e-05, -0.035629358142614365, -9.298280929215252e-06, -0.0017409658757969737, -0.0867859497666359, -0.0005476167425513268, -0.015363326296210289, -0.00023588736075907946, -5.590759246842936e-05, -0.0007846852531656623, -8.177422569133341e-05, -0.00014768941036891192, -7.998623186722398e-05, -0.0016609933227300644, -0.02086569368839264, -0.0001394651480950415, -6.222531374078244e-05, -0.05077270418405533, -0.007428996730595827, -0.5180161595344543, -0.0008361419313587248, -1.8532273769378662, -0.12184326350688934, -0.1101081594824791, -0.0011264891363680363, -0.004405436106026173, -0.002150010783225298, -0.174306720495224, -0.3733762204647064, -1.3112935448589269e-05, -0.08577955514192581, -0.2453935444355011, -1.2349058389663696, -2.2949471473693848, -0.21594156324863434, -0.055223822593688965, -0.07644835114479065, -1.3077086210250854, -0.0066032069735229015, -0.0681002289056778, -0.0007593132322654128, -0.002628445392474532, -0.13629677891731262, -0.07761861383914948, -0.0015232876176014543, -0.34011000394821167, -0.005694476887583733, -0.39041566848754883], "finish_reason": "stop"}], "metrics": {"energy": 572.5974187221527, "energy_per_token": 3.4083179685842424, "time": 13.877893, "time_per_token": 0.08260650595238095}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input data is not a pandas DataFrame\")\n    if df.empty:\n        raise ValueError(\"Input data is empty\")\n    if not all(col in df for col in (col1, col2)):\n        raise ValueError(\"Input data does not contain all specified columns\")\n    sns.set(style=\"ticks\")\n    ax = sns.regplot(x=col1, y=col2, data=df, color='green')\n    return ax", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " is", " not", " a", " pandas", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " is", " empty", "\"", ")", "\n", "    ", "if", " not", " all", "(", "col", " in", " df", " for", " col", " in", " (", "col", "1", ",", " col", "2", "))", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " does", " not", " contain", " all", " specified", " columns", "\"", ")", "\n", "    ", "s", "ns", ".", "set", "(", "style", "=", "\"", "t", "icks", "\"", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ",", " color", "='", "green", "')", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -0.9383212327957153, -1.3177107572555542, -0.008205984719097614, -0.05750303342938423, -2.1225078105926514, -0.023426076397299767, -0.0017539369873702526, -1.2206414937973022, -0.0003535122668836266, -0.0006602014764212072, -0.20643192529678345, -0.3229461908340454, -0.03026290237903595, -0.0028449322562664747, -0.001190073206089437, -0.021340394392609596, -0.00028761065914295614, -0.00020644917094614357, -0.0010765953920781612, -0.00045944625162519515, -1.1920928244535389e-07, -0.0011436357162892818, -0.004033051431179047, -0.08146915584802628, -0.7925463914871216, -0.07313498854637146, -0.06718643009662628, -0.0113035524263978, -4.660974445869215e-05, -4.255681051290594e-05, -0.03849552944302559, -0.02546604536473751, -1.7977607250213623, -0.5488306879997253, -0.14804069697856903, -0.2043805569410324, -0.001404847833327949, -0.011041494086384773, -2.8214709758758545, -8.4638240878121e-06, -1.2278481335670222e-05, -0.8572812080383301, -8.093983342405409e-05, -0.00011955977242905647, -5.936446541454643e-05, -0.000500196241773665, -6.198863957251888e-06, -9.7508447652217e-05, -0.0018130784155800939, -0.0007613382767885923, -0.00028701478731818497, -0.0037456846330314875, -0.005152280908077955, -2.3841855067985307e-07, -0.0006617502076551318, -0.1555168777704239, -0.3212580978870392, -0.2501128911972046, -0.06785431504249573, -0.00013696208770852536, -0.05460286885499954, -2.9797160625457764, -0.5902931690216064, -0.0017016944475471973, -0.015810489654541016, -0.00014029949670657516, -6.460934673668817e-05, -0.44701871275901794, -2.9369308948516846, -0.00863284058868885, -0.049352969974279404, -0.08537618815898895, -2.2793197631835938, -0.22713898122310638, -0.19681316614151, -0.0011519708205014467, -0.5526360869407654, -0.0021693999879062176, -5.173549288883805e-05, -0.28377678990364075, -0.009519894607365131, -0.038832712918519974, -2.2766449451446533, -0.008306833915412426, -0.0036570830270648003, -1.1920928244535389e-07, -1.4305012882687151e-05, -0.5163520574569702, -0.013068384490907192, -0.0002932118659373373, -0.12836110591888428, -0.004579294938594103, -0.07112990319728851, -0.0016639686655253172, -0.00021336186910048127, -0.006730624008923769, -0.00011002412065863609, -0.00016819016309455037, -1.4781842764932662e-05, -0.00014208737411536276, -0.04600924625992775, -5.781483559985645e-05, -0.00015352977789007127, -1.5156118869781494, -0.667201817035675, -1.8180724382400513, -2.2949025630950928, -0.3151581287384033, -0.03000287525355816, -0.05924364551901817, -0.33936864137649536, -0.004834628663957119, -0.3664819896221161, -0.005295298527926207, -0.4472407102584839], "finish_reason": "stop"}], "metrics": {"energy": 495.07081208801264, "energy_per_token": 3.7223369329925764, "time": 11.327603, "time_per_token": 0.08516994736842105}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input must be a pandas DataFrame\")\n    elif df.empty:\n        raise ValueError(\"DataFrame must not be empty\")\n    elif col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(\"DataFrame must contain both columns\")\n    elif not df[col1].dtype in [np.float64, np.int64] or not df[col2].dtype in [np.float64, np.int64]:\n        raise TypeError(\"DataFrame must contain numeric columns\")\n\n    plot = sns.scatterplot(x=col1, y=col2, data=df)\n    plot = sns.regressionplot(x=col1, y=col2, data=df)\n\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n", "    ", "elif", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "DataFrame", " must", " not", " be", " empty", "\"", ")", "\n", "    ", "elif", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "DataFrame", " must", " contain", " both", " columns", "\"", ")", "\n", "    ", "elif", " not", " df", "[", "col", "1", "]", ".", "d", "type", " in", " [", "np", ".", "float", "6", "4", ",", " np", ".", "int", "6", "4", "]", " or", " not", " df", "[", "col", "2", "]", ".", "d", "type", " in", " [", "np", ".", "float", "6", "4", ",", " np", ".", "int", "6", "4", "]:", "\n", "        ", "raise", " Type", "Error", "(", "\"", "DataFrame", " must", " contain", " numeric", " columns", "\"", ")", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "plot", " =", " s", "ns", ".", "reg", "ression", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "\n", "    ", "return", " plot", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -1.9891997575759888, -0.0006404255982488394, -0.015757685527205467, -1.3997048139572144, -0.0078141950070858, -0.0010555178159847856, -0.5045332908630371, -0.00019035911827813834, -0.0005626287311315536, -0.17265142500400543, -1.7452583312988281, -0.04588981345295906, -0.011558235622942448, -0.001964426366612315, -0.018060635775327682, -0.0011625682236626744, -0.0003519630990922451, -0.003541984362527728, -0.00033802041434682906, -4.768370445162873e-07, -0.0009747759322635829, -0.00412743678316474, -2.0270395278930664, -1.1959683895111084, -0.021715490147471428, -7.748303323751315e-05, -8.701899787411094e-05, -0.008035002276301384, -7.521823135903105e-05, -5.4238757002167404e-05, -0.025945885106921196, -0.054007839411497116, -0.1621401309967041, -0.0005004345439374447, -0.008813883177936077, -4.291525328881107e-06, -0.0028127175755798817, -0.1055200919508934, -5.1973900554003194e-05, -0.08522447198629379, -0.00012706902634818107, -7.319182623177767e-05, -1.6927575416048057e-05, -3.182837463100441e-05, -7.510157047363464e-06, -2.5629668016335927e-05, -1.2040065485052764e-05, -0.0009652484441176057, -0.00023052419419400394, -0.00039521988946944475, -0.0032763394992798567, -0.0071319518610835075, -4.768370445162873e-07, -0.00046135272714309394, -0.08939076960086823, -0.03699563816189766, -0.05654389411211014, -0.06269442290067673, -1.2713241577148438, -1.1591007709503174, -0.15255117416381836, -0.0004343043256085366, -7.629103492945433e-05, -0.3000122308731079, -0.5708467960357666, -1.0010180473327637, -1.6504355669021606, -0.021079085767269135, -0.0002022777043748647, -0.0012401993153616786, -0.00024625606602057815, -2.7894584491150454e-05, -0.17449335753917694, -0.008055814541876316, -1.6933929920196533, -0.8078520894050598, -0.5046035051345825, -3.933898824470816e-06, -1.5250147581100464, -0.026147743687033653, -1.1920928244535389e-07, -0.018188007175922394, -0.025261027738451958, -1.7881377516459906e-06, -0.2109621912240982, -0.10916463285684586, 0.0, -1.1601953506469727, -0.02043725550174713, -0.030600907281041145, -0.008657895028591156, -0.0006463822210207582, -0.00690869614481926, -0.004446856677532196, -8.976056415122002e-05, -7.199982064776123e-05, -0.00011884459672728553, -0.0001389883691444993, -0.0023129635956138372, -0.001821288955397904, -0.06968042254447937, -2.0861407392658293e-05, -0.0012734169140458107, -8.785339014139026e-05, 0.0, -0.0002748588449321687, -0.003303548786789179, -1.9073468138230965e-06, -0.00028010259848088026, -0.00014745102089364082, 0.0, -0.0071847401559352875, -0.006081054452806711, -0.009103813208639622, -0.010651757940649986, -0.023484298959374428, -1.1324817933200393e-05, -0.05650772899389267, -0.036118146032094955, -0.6639274954795837, -0.4478348195552826, -0.10048628598451614, -0.8591836094856262, -2.286289930343628, -0.12607477605342865, -0.0005629861843772233, -0.0008887869771569967, -0.5253640413284302, -0.0003846143954433501, -1.2861329317092896, -0.013269800692796707, -0.006425435654819012, -1.0728830375228426e-06, -3.075552376685664e-05, -0.2659156620502472, -9.298280929215252e-06, -0.00034314466756768525, -0.6154308915138245, -0.010432117618620396, -0.16965459287166595, -0.0005287918029353023, -0.0003194298769813031, -0.0069895521737635136, -0.00032884435495361686, -0.00018892886873800308, -4.95898348162882e-05, -0.00016926287207752466, -0.02316344901919365, -0.000633992429357022, -0.0002184867626056075, -0.04537604749202728, -0.013545741327106953, -0.13298408687114716, -0.4709390699863434, -0.06596650183200836, -0.0017220443114638329, -2.3841855067985307e-07, -1.811964830267243e-05, -0.02201639674603939, -2.925180196762085, -0.24727189540863037, -0.00036221143091097474, -0.011165281757712364, -0.00034397884155623615, -0.0011273226700723171, -0.00021145492792129517, -8.272782724816352e-05, -0.0014840076910331845, -7.188061863416806e-05, -0.0005490464391186833, -3.361645576660521e-05, -8.880697714630514e-05, -0.005352926440536976, -0.00017975145601667464, -0.00018749863374978304, -0.32796967029571533, -0.0033362226095050573, -0.8639615774154663, -0.0027083405293524265, -0.042835574597120285, -0.0040037245489656925, -2.0096359252929688, -7.152555099310121e-07, -2.50339189733495e-06, -2.861018856492592e-06, -6.97350042173639e-05, -0.1433483511209488], "finish_reason": "stop"}], "metrics": {"energy": 724.1186767749789, "energy_per_token": 3.5322862281706287, "time": 17.244116, "time_per_token": 0.08411763902439025}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input data is not a DataFrame\")\n    if df.empty:\n        raise ValueError(\"Input DataFrame is empty\")\n    if col1 not in df.columns:\n        raise ValueError(f\"Column {col1} not found in DataFrame\")\n    if col2 not in df.columns:\n        raise ValueError(f\"Column {col2} not found in DataFrame\")\n\n    if df[col1].dtype == object:\n        raise TypeError(\"Column {} use non-numeric data\".format(col1))\n    if df[col2].dtype == object:\n        raise TypeError(\"Column {} use non-numeric data\".format(col2))\n\n    ax = sns.scatterplot(x=col1, y=col2, data=df)\n    sns.regplot(x=col1, y=col2, data=df, scatter=False, ax=ax)\n    return ax", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " is", " not", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", "\"", ")", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " {", "col", "1", "}", " not", " found", " in", " Data", "Frame", "\"", ")", "\n", "    ", "if", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " {", "col", "2", "}", " not", " found", " in", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "d", "type", " ==", " object", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Column", " {}", " use", " non", "-", "numeric", " data", "\"", ".", "format", "(", "col", "1", "))", "\n", "    ", "if", " df", "[", "col", "2", "]", ".", "d", "type", " ==", " object", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Column", " {}", " use", " non", "-", "numeric", " data", "\"", ".", "format", "(", "col", "2", "))", "\n", "\n", "    ", "ax", " =", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ",", " scatter", "=", "False", ",", " ax", "=", "ax", ")", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -0.9383212327957153, -1.3177107572555542, -0.008205984719097614, -0.05750303342938423, -0.2175033837556839, -0.0031070075929164886, -0.9926612377166748, -0.00031871485407464206, -0.0008123196894302964, -0.1595493108034134, -0.3878033757209778, -0.0257493294775486, -0.0024467550683766603, -0.001733468729071319, -0.015279269777238369, -0.00033563701435923576, -0.00020680672605521977, -0.0011639971053227782, -0.0004101150552742183, -1.1920928244535389e-07, -0.0010826685465872288, -0.0027009693440049887, -0.17912356555461884, -0.47079017758369446, -0.006279855500906706, -0.0045485603623092175, -0.0018663860391825438, -0.008786587044596672, -3.6477376852417365e-05, -2.634490556374658e-05, -0.028012603521347046, -0.024744225665926933, -0.17099107801914215, -0.00032109825406223536, -0.00924236886203289, -5.483612312673358e-06, -0.0031414704862982035, -0.095667764544487, -0.00010477947944309562, -1.7460639476776123, -0.0002618685248307884, -0.00015555603022221476, -0.0005296258023008704, -0.008289455436170101, -3.576278118089249e-07, -0.0008189899963326752, -0.24189451336860657, -0.0014037764631211758, -0.09169597178697586, -0.6608936786651611, -0.0004067785630468279, -0.00029225845355540514, -0.0044624037109315395, -0.2907775938510895, -0.10913053154945374, -0.03391291946172714, -0.5375165343284607, -0.0005974177038297057, -0.005592296365648508, -0.00010954733443213627, -4.935142715112306e-05, -0.0010132422903552651, -0.0010415849974378943, -0.0028977093752473593, -0.0001652104256208986, -3.480850500636734e-05, -8.344646857949556e-07, -3.933898824470816e-06, -1.8954096958623268e-05, -1.156323378381785e-05, -9.822363062994555e-05, -2.1457441107486375e-05, -8.177422569133341e-05, -6.222531374078244e-05, -6.544376083184034e-05, -1.1920928244535389e-07, -6.115249561844394e-05, -0.0024787436705082655, -6.6756979322235566e-06, -9.333651541965082e-05, -0.00028546550311148167, -2.2649508537142538e-05, -0.0023670769296586514, -3.6477376852417365e-05, -8.618460560683161e-05, -1.5735502529423684e-05, -4.625213477993384e-05, -4.660974445869215e-05, -7.390948667307384e-06, -0.0003326578007545322, -6.818538531661034e-05, -8.105902816168964e-05, -0.8455007076263428, -0.0009268993744626641, -2.2343554496765137, -0.9440777897834778, -0.10521571338176727, -0.0018505605403333902, -0.0054980493150651455, -0.0012981806648895144, -0.00018273114983458072, -0.02893047221004963, -0.10194231569766998, -1.616326093673706, -1.012583613395691, -0.6822323799133301, -0.008232823573052883, -0.014907976612448692, -0.09774874150753021, -0.030121099203824997, -1.585470999998506e-05, -0.10983305424451828, -0.783036470413208, -1.26454496383667, -2.329164743423462, -1.7726846933364868, -0.07003215700387955, -0.00844502728432417, -0.005794513039290905, -0.02391539141535759, -0.06432967633008957, -0.011768791824579239, -0.001546973828226328, -0.0020965994335711002, -0.003920845687389374, -0.0015835139201954007, -0.0013324677711352706, -0.0006982034537941217, -0.16113701462745667, -0.06973879784345627, -0.0013629442546516657, -0.0002975021197926253, -1.966933996300213e-05, -0.006408142391592264, -1.4781842764932662e-05, -7.867782187531702e-06, -6.305972783593461e-05, -3.182837463100441e-05, -0.00033945043105632067, -0.00027021096320822835, -0.0002356490003876388, -2.407998726994265e-05, -0.0007175016799010336, -0.0003763920976780355, -0.0012268644059076905, -1.6689286894688848e-06, -0.0004142856632824987, -0.0012166248634457588, -0.0005465444410219789, -0.001650877296924591, -0.001128989621065557, -0.00016902448260225356, -0.0001662831346038729, -0.00012766500003635883, -0.00015341058315243572, -0.000316927267704159, -8.999896090244874e-05, -0.00040975757292471826, -2.0146166207268834e-05, -5.018585216021165e-05, -0.001796657219529152, -6.103329360485077e-05, -0.0001134808044298552, -0.04423105716705322, -0.0003150205302517861, -2.024749755859375, -0.007189000956714153, -0.004274161532521248, -4.768370445162873e-07, -1.597391747054644e-05, -0.3842718303203583, -5.960446742392378e-06, -0.0002586507180240005, -1.045501708984375, -0.0066477335058152676, -0.12381996959447861, -0.00040141629870049655, -0.00023147765023168176, -0.007635337766259909, -0.00017295771976932883, -8.022463589441031e-05, -0.00016842853801790625, -0.00017677174764685333, -0.033708587288856506, -0.0002949994814116508, -9.560128091834486e-05, -0.08359553664922714, -0.0042532701045274734, -0.04332370683550835, -2.182668924331665, -0.00011097769311163574, -0.0002571013756096363, -0.05767544358968735, -0.09402744472026825, -0.00013982271775603294, -0.08041702955961227, -0.0005567907355725765, -0.0041803838685154915, -0.0001250427303602919, -5.328513361746445e-05, -0.0015109085943549871, -7.402622577501461e-05, -0.0001934579631779343, -5.566918844124302e-05, -5.6265202147187665e-05, -0.01035165786743164, -0.0003103728231508285, -0.00013565097469836473, -0.02419981360435486, -0.06727481633424759, -0.0005131834768690169, -0.19671426713466644, -0.24436818063259125, -0.09489504992961884, -0.00039772229501977563, -0.00016556799528189003, -0.04951147362589836, -0.005007938481867313, -0.7097762823104858, -0.2547357976436615, -0.005434738472104073, -0.2991144061088562, -0.005344626493752003, -0.41445863246917725], "finish_reason": "stop"}], "metrics": {"energy": 859.4644166889192, "energy_per_token": 3.551505854086443, "time": 20.935337, "time_per_token": 0.0865096570247934}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input df is not a DataFrame\")\n    if df.empty:\n        raise ValueError(\"Input df is empty\")\n    if not (col1 in df.columns and col2 in df.columns):\n        raise ValueError(\"Input df does not contain the specified columns\")\n    try:\n        plot = sns.lmplot(x=col1, y=col2, data=df)\n        if len(plot.collections[0].get_offsets().data) != df.shape[0]:\n            raise TypeError(\"Non-numeric data in the columns\")\n    except TypeError as e:\n        raise TypeError(\"Non-numeric data in the columns\") from e\n    return plot.axes[0, 0]", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " is", " not", " a", " Data", "Frame", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " is", " empty", "\"", ")", "\n", "    ", "if", " not", " (", "col", "1", " in", " df", ".", "columns", " and", " col", "2", " in", " df", ".", "columns", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " df", " does", " not", " contain", " the", " specified", " columns", "\"", ")", "\n", "    ", "try", ":", "\n", "        ", "plot", " =", " s", "ns", ".", "lm", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "        ", "if", " len", "(", "plot", ".", "collections", "[", "0", "]", ".", "get", "_", "offs", "ets", "()", ".", "data", ")", " ", "!", "=", " df", ".", "shape", "[", "0", "]:", "\n", "            ", "raise", " Type", "Error", "(", "\"", "Non", "-", "numeric", " data", " in", " the", " columns", "\"", ")", "\n", "    ", "except", " Type", "Error", " as", " e", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Non", "-", "numeric", " data", " in", " the", " columns", "\"", ")", " from", " e", "\n", "    ", "return", " plot", ".", "axes", "[", "0", ",", " ", "0", "]<", "|", "end", "of", "text", "|>"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -1.6260977983474731, -1.991445541381836, -0.004777326714247465, -0.016352802515029907, -0.16026747226715088, -0.000709282117895782, -0.44164061546325684, -0.00042429505265317857, -0.0005422552349045873, -0.1496175229549408, -0.2760612368583679, -0.0281074196100235, -0.003951955586671829, -0.0011394681641831994, -0.010981363244354725, -0.00033206192892976105, -0.00021145492792129517, -0.0008192281820811331, -0.00038187362952157855, -1.1920928244535389e-07, -0.0008667526417411864, -0.0011360150529071689, -0.06426785886287689, -0.41081446409225464, -0.008556135930120945, -0.0035312932450324297, -0.004105948377400637, -5.1973900554003194e-05, -4.8874615458771586e-05, -0.02127072587609291, -0.017666950821876526, -1.960695743560791, -1.8303182125091553, -0.1236589178442955, -0.0009128456003963947, -0.15991276502609253, -0.0015711355954408646, -0.0850101038813591, -5.340433563105762e-05, -0.04173226282000542, -0.0003871168300975114, -4.088794958079234e-05, -6.305972783593461e-05, -1.1801649634435307e-05, -0.0021048076450824738, -1.0609570381348021e-05, -0.0011547094909474254, -0.00023326536756940186, -0.00026556302327662706, -0.0007258402765728533, -0.0017708349041640759, -3.576278118089249e-07, -0.0006386386230587959, -0.07355041056871414, -0.25092020630836487, -0.09402668476104736, -0.13005287945270538, -0.0001578206429257989, -0.0130400275811553, -0.19284722208976746, -0.005980454385280609, -0.011959044262766838, -0.01109372265636921, -0.00016318420239258558, -7.092700980138034e-05, -0.46474844217300415, -1.5410852432250977, -0.001383539172820747, -0.0068937791511416435, -0.008868236094713211, -0.6508826017379761, -0.00974398571997881, -0.012465069070458412, -1.0728830375228426e-06, -2.8371408916427754e-05, -2.2612357139587402, -3.3378546504536644e-06, -0.00035172473872080445, -0.16120469570159912, -0.0064666541293263435, -0.012070233933627605, -0.0014899593079462647, -0.00041368984966538846, -0.009391652420163155, -0.0002087136817863211, -0.00033718624035827816, -8.22540732769994e-06, -0.000164018536452204, -0.009286542423069477, -0.00039772229501977563, -0.00035291642416268587, -0.158656507730484, -0.04692872241139412, -1.2645277976989746, -2.547325372695923, -1.1932902336120605, -0.004952544346451759, -0.014323868788778782, -0.001932302606292069, -0.09885267168283463, -0.09778852015733719, -0.0006922471220605075, -0.0010783816687762737, -0.00044550508027896285, -0.0010081215295940638, -2.861018856492592e-06, -0.00019226610311307013, 0.0, -0.01593662053346634, -0.0009868042543530464, -0.0005951540661044419, -0.03153881058096886, -1.634266972541809, -1.3589766240329482e-05, -4.136476854910143e-05, -1.6886229515075684, -0.20655158162117004, -0.02754303254187107, -0.00013255194062367082, -0.0014586533652618527, -0.01218164712190628, -0.011432257480919361, -0.007750439457595348, -0.0599224716424942, -1.4673640727996826, -1.7404405298293568e-05, -0.09745172411203384, -0.037313688546419144, -2.6482536792755127, -0.13253845274448395, -0.010640670545399189, -0.17712299525737762, -1.2359720468521118, -1.5662779808044434, -2.081090211868286, -0.19989332556724548, -0.001004906021989882, -0.0017350156558677554, -0.37475019693374634, -0.0019392033573240042, -0.890580415725708, -6.9141146923357155e-06, -0.7032656073570251, -0.5567871332168579, -0.0013978243805468082, -0.001841636374592781, -0.0017437029164284468, -0.27198395133018494, -0.17289714515209198, -1.728519782773219e-05, -0.025924164801836014, -0.19483543932437897, -0.2734676003456116, -0.0006453100359067321, -0.0008939084364101291, -0.002334371441975236, -0.009815405122935772, -0.009210360236465931, -0.005453234072774649, -0.04401786997914314, -0.0004798214649781585, -0.057505059987306595, -0.002307730494067073, -0.001580062322318554, -0.09111717343330383, -0.12255600094795227, -0.015809902921319008, -2.3403961658477783, -1.9231740236282349, -0.03737260028719902, -0.00013517419574782252, -0.4871612787246704, -0.08463294059038162, -0.0004612335760612041, -2.091059684753418, -1.9073468138230965e-06, -2.264974000354414e-06, -9.059865078597795e-06, -0.0002928543253801763, -0.1923919916152954], "finish_reason": "stop"}], "metrics": {"energy": 666.5392306270595, "energy_per_token": 3.3663597506417147, "time": 16.61425, "time_per_token": 0.08391035353535353}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input data must be a DataFrame.\")\n    elif df.empty:\n        raise ValueError(\"Input data cannot be empty.\")\n    elif col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(\"Input data must contain the specified columns.\")\n    if df[col1].dtype not in [np.int32, np.int64, np.float64]:\n        raise TypeError(\"Input data must contain numeric values.\")\n    if df[col2].dtype not in [np.int32, np.int64, np.float64]:\n        raise TypeError(\"Input data must contain numeric values.\")\n    plot = sns.scatterplot(data=df, x=col1, y=col2)\n    plot = sns.regplot(data=df, x=col1, y=col2, scatter=False)\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", ".", "\"", ")", "\n", "    ", "elif", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " cannot", " be", " empty", ".", "\"", ")", "\n", "    ", "elif", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " must", " contain", " the", " specified", " columns", ".", "\"", ")", "\n", "    ", "if", " df", "[", "col", "1", "]", ".", "d", "type", " not", " in", " [", "np", ".", "int", "3", "2", ",", " np", ".", "int", "6", "4", ",", " np", ".", "float", "6", "4", "]:", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " data", " must", " contain", " numeric", " values", ".", "\"", ")", "\n", "    ", "if", " df", "[", "col", "2", "]", ".", "d", "type", " not", " in", " [", "np", ".", "int", "3", "2", ",", " np", ".", "int", "6", "4", ",", " np", ".", "float", "6", "4", "]:", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " data", " must", " contain", " numeric", " values", ".", "\"", ")", "\n", "    ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ")", "\n", "    ", "plot", " =", " s", "ns", ".", "reg", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " scatter", "=", "False", ")", "\n", "    ", "return", " plot", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -0.9383212327957153, -0.6477068662643433, -0.0005659647285938263, -0.07593005150556564, -0.6818176507949829, -0.003824302926659584, -0.9989190697669983, -0.0022389839868992567, -0.00017248096992261708, -0.00038258862332440913, -0.19402849674224854, -1.8546733856201172, -0.022824667394161224, -0.007316343020647764, -0.001178523525595665, -0.01274370402097702, -0.0010889797704294324, -0.0003805628512054682, -0.004632930271327496, -0.00040892345714382827, -4.768370445162873e-07, -0.0018461579456925392, -0.005023358389735222, -0.11720059812068939, -0.9148396253585815, -0.39961257576942444, -0.0001248043408850208, -0.0072852191515266895, -0.011944320052862167, -0.0008598444401286542, -5.173549288883805e-05, -4.0411134250462055e-05, -0.0189651045948267, -0.0414997898042202, -0.16337957978248596, -0.000551310193259269, -0.007795033510774374, -3.3378546504536644e-06, -0.002936696168035269, -0.16385823488235474, -3.8980677345534787e-05, -0.05375990271568298, -0.0001227780303452164, -6.222531374078244e-05, -1.6093124941107817e-05, -1.728519782773219e-05, -6.079655122448457e-06, -2.1576648578047752e-05, -1.2993727978027891e-05, -0.0008956949459388852, -0.00022003613412380219, -0.0004245333548169583, -0.0016219568205997348, -0.004470236133784056, -4.768370445162873e-07, -0.0005141366855241358, -0.10715720802545547, -0.8264312744140625, -0.7697969675064087, -0.2218506783246994, -0.024143727496266365, -0.2313067764043808, -0.006490341853350401, -0.0172743983566761, -0.010861679911613464, -0.000982278841547668, -7.223821739898995e-05, -0.00011896379146492109, -0.17716942727565765, -2.2009177207946777, -0.5355152487754822, -0.1850558966398239, -0.0015261442167684436, -0.004248165991157293, -0.0006922471220605075, -0.0001754606782924384, -0.013436009176075459, -0.12400880455970764, -0.9542284607887268, -0.00010346830822527409, -1.902601957321167, -0.7085952758789062, -7.033323527139146e-06, -1.0104783773422241, -1.5221326351165771, -1.3112935448589269e-05, -0.004815054126083851, -0.018316999077796936, -6.198863957251888e-06, -0.01743912324309349, -0.0004724340105894953, -2.3841574147809297e-05, -0.0462956503033638, -0.01906522549688816, -6.556489552167477e-06, -0.005189756862819195, -0.8730255365371704, -2.3841855067985307e-07, -0.22298218309879303, -0.0038801159244030714, -0.008416657336056232, -0.00707430811598897, -0.018816309049725533, -1.3351351299206726e-05, -0.11123032122850418, -0.17900945246219635, -1.5831959247589111, -0.14265307784080505, -0.1306144893169403, -0.6864615082740784, -0.5235725045204163, -1.0053284168243408, -0.25842228531837463, -0.007387581281363964, -0.0008454324561171234, -0.00048601735034026206, -0.15358124673366547, -0.3722418546676636, -0.005450744181871414, -0.0012037658598273993, -4.8397800128441304e-05, -0.0049483925104141235, -1.5020257706055418e-05, -2.109982233378105e-05, -0.00015639036428183317, -3.93382906622719e-05, -0.0004800597671419382, -4.637133679352701e-05, -0.00035565727739594877, -0.0002821285743266344, -1.0728830375228426e-06, -0.00018666432879399508, -0.0006886732880957425, -7.152555099310121e-07, -2.8132995794294402e-05, -0.00013076403411105275, 0.0, -4.51792984677013e-05, -8.4638240878121e-06, 0.0, -0.0003761537664104253, -0.00023707917716819793, -1.1920928244535389e-07, -1.9907753085135482e-05, -0.0002985746832564473, 0.0, -0.0004583738627843559, -4.410646579344757e-05, -0.0014790082350373268, -0.0006796196103096008, -0.0012613920262083411, -8.344646857949556e-07, -0.00036590558011084795, -0.001767145935446024, -0.0007482351502403617, -0.0007501410436816514, -0.00011908298620255664, -0.00018940561858471483, -0.00029118589009158313, -0.0002233732520835474, -0.0018742390675470233, -0.00019143179815728217, -0.00011276562872808427, -0.00017188502533826977, -0.7425124049186707, -0.9639579057693481, -0.014851484447717667, -0.0114752734079957, -1.5497195136049413e-06, -6.48477507638745e-05, -0.3304397761821747, -1.9073304429184645e-05, -0.0003854485403280705, -0.7081460356712341, -0.00812794640660286, -0.0005420169327408075, -0.010865453630685806, -0.051893483847379684, -0.00031704644788987935, -0.02202456071972847, -0.0002818902430590242, -0.00039569655200466514, -0.0030030175112187862, -0.00013660451804753393, -6.103329360485077e-05, -0.00016962042718660086, -0.33281058073043823, -0.021183663979172707, -0.021609799936413765, -0.45698535442352295, -0.056938786059617996, -0.0030866859015077353, -2.3841855067985307e-07, -5.245071224635467e-05, -0.02628779038786888, -0.1928512454032898, -0.0003313469351269305, -0.10473573207855225, -0.0007994554471224546, -0.0002444683632347733, -0.0016102931695058942, -0.008151358924806118, -0.00014244495832826942, -0.0009031984372995794, -0.00010108436981681734, -6.770858453819528e-05, -0.0011978124966844916, -8.129743218887597e-05, -5.924526340095326e-05, -5.590759246842936e-05, -0.30444860458374023, -0.07371531426906586, -0.001150541938841343, -0.02995058335363865, -0.5797330737113953, -0.0035391333512961864, -0.06596437841653824, -0.1199219599366188, -0.0059635089710354805, -0.5158988833427429, -0.007348767947405577, -0.44672682881355286], "finish_reason": "stop"}], "metrics": {"energy": 853.2330298604969, "energy_per_token": 3.555137624418737, "time": 20.52856, "time_per_token": 0.08553566666666666}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame) or df.empty:\n        raise ValueError(\"df should be a non-empty pandas DataFrame.\")\n\n    if not (col1 in df.columns and col2 in df.columns):\n        raise ValueError(\"df should contain the specified columns.\")\n\n    plot = sns.lmplot(x=col1, y=col2, data=df)\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " should", " be", " a", " non", "-", "empty", " pandas", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " (", "col", "1", " in", " df", ".", "columns", " and", " col", "2", " in", " df", ".", "columns", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "df", " should", " contain", " the", " specified", " columns", ".", "\"", ")", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "lm", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "return", " plot", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -2.6851675510406494, -0.014521271921694279, -0.040984105318784714, -0.003639979287981987, -0.0003682888636831194, -0.37495899200439453, -0.0025785076431930065, -0.0018710264703258872, -0.015498317778110504, -0.0034955372102558613, -1.6689286894688848e-06, -0.07805897295475006, -0.024615595117211342, -2.2978475093841553, -2.1341257095336914, -0.003930107690393925, -0.053384434431791306, -0.03598395362496376, -0.013767402619123459, -4.005352093372494e-05, -0.6080824136734009, -0.0025928947143256664, -0.0001839230244513601, -1.5790423154830933, -0.00708164693787694, -0.0006048041977919638, -0.00028701478731818497, -1.1699743270874023, -0.0004306104383431375, -0.15565022826194763, -1.2328541278839111, -1.9650979042053223, -0.24654316902160645, -0.001312228967435658, -0.3246762156486511, -0.0013009188696742058, -0.07270155102014542, -5.411955135059543e-05, -0.03644199296832085, -0.0007059465860947967, -5.8410845667822286e-05, -0.00013958434283267707, -2.753696753643453e-05, -0.00112160702701658, -1.728519782773219e-05, -0.003215858479961753, -0.0007945717661641538, -0.0007295330869965255, -0.0060636368580162525, -0.004605875816196203, -2.3841855067985307e-07, -0.0010526598198339343, -0.24198248982429504, -0.588749885559082, -0.07434996962547302, -0.08846992999315262, -0.7115083336830139, -0.03243798762559891, -0.014172733761370182, -0.11373540759086609, -0.002098026918247342, -0.0006011109799146652, -5.0424259825376794e-05, -0.06029313802719116, -0.0005550036439672112, -1.8574376106262207, -0.006356379482895136, -0.024248916655778885, -1.6689286894688848e-06, -2.3603161025675945e-05, -3.0560078620910645, -2.3841830625315197e-06, -0.0002650863316375762, -0.48795488476753235, -0.007233028300106525, -0.011611025780439377, -0.001790588372386992, -0.0003997480380348861, -0.014077646657824516, -0.00025412190007045865, -0.00017236177518498152, -1.1086402082582936e-05, -0.00013004888023715466, -0.00819416157901287, -0.0003667397249955684, -0.00020525732543319464, -0.27406811714172363, -0.026193847879767418, -0.7922263741493225, -0.07980910688638687, -0.001966211013495922, -0.15859220921993256, -0.002671484835445881, -0.3627340793609619], "finish_reason": "stop"}], "metrics": {"energy": 356.93868193054226, "energy_per_token": 3.465424096413032, "time": 8.422229, "time_per_token": 0.081769213592233}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame) or df.empty:\n        raise ValueError(\"Input data must be a non-empty DataFrame.\")\n\n    if col1 not in df or col2 not in df:\n        raise ValueError(\"Input data must contain the specified columns.\")\n\n    try:\n        df[col1] = pd.to_numeric(df[col1])\n        df[col2] = pd.to_numeric(df[col2])\n    except (ValueError, TypeError):\n        raise TypeError(\"Columns must be numeric.\")\n\n    plot = sns.scatterplot(x=col1, y=col2, data=df)\n    plot = sns.regplot(x=col1, y=col2, data=df, scatter=False, color=\"r\")\n\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " non", "-", "empty", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "if", " col", "1", " not", " in", " df", " or", " col", "2", " not", " in", " df", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " must", " contain", " the", " specified", " columns", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "df", "[", "col", "1", "]", " =", " pd", ".", "to", "_", "numeric", "(", "df", "[", "col", "1", "])", "\n", "        ", "df", "[", "col", "2", "]", " =", " pd", ".", "to", "_", "numeric", "(", "df", "[", "col", "2", "])", "\n", "    ", "except", " (", "Value", "Error", ",", " Type", "Error", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Columns", " must", " be", " numeric", ".", "\"", ")", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "plot", " =", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ",", " scatter", "=", "False", ",", " color", "=", "\"", "r", "\"", ")", "\n", "\n", "    ", "return", " plot"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -2.6851675510406494, -0.014521271921694279, -0.040984105318784714, -0.003639979287981987, -0.0003682888636831194, -0.37495899200439453, -0.0025785076431930065, -0.0018710264703258872, -0.015498317778110504, -0.0034955372102558613, -1.6689286894688848e-06, -0.07805897295475006, -0.024615595117211342, -0.6420457363128662, -1.3657761812210083, -0.7365272641181946, -0.0009386900928802788, -0.02215515822172165, -0.03880484774708748, -0.007579023949801922, -1.3232143828645349e-05, -0.49109596014022827, -0.0007722970913164318, -0.45035406947135925, -0.0008001701789908111, -0.0002444683632347733, -0.00013648532330989838, -1.1366055011749268, -0.0003912875254172832, -0.13548998534679413, -0.34333983063697815, -0.0004766043566633016, -0.009862503968179226, -5.722029527532868e-06, -0.0012265071272850037, -1.4474762678146362, -0.0008013612823560834, -0.00018451895448379219, -2.706014311115723e-05, -2.407998726994265e-05, -4.291525328881107e-06, -0.002661735750734806, -0.0006972504197619855, -0.0005511910421773791, -0.0029813863802701235, -0.005964101292192936, 0.0, -0.00036221143091097474, -0.15024149417877197, -1.0686142444610596, -0.9579262733459473, -0.18655449151992798, -0.06185276061296463, -0.2953694760799408, -0.019798284396529198, -0.018379850313067436, -0.01930694840848446, -0.0010877889581024647, -0.00019965562387369573, -9.059495641849935e-05, -0.07394163310527802, -0.0008319730986841023, -0.9020159244537354, -0.00037889453233219683, -0.002407154766842723, -0.004807105287909508, -3.4980483055114746, -0.6664937138557434, -0.004742089658975601, -0.0030462786089628935, -0.007336342707276344, -0.06834408640861511, -0.29463332891464233, -1.3232143828645349e-05, -6.437280717364047e-06, -1.1920928244535389e-07, -7.152531907195225e-06, -1.7165990357170813e-05, -0.002300237538293004, -0.0010372978867962956, -2.825220326485578e-05, -0.000316212244797498, -0.127510204911232, -0.01652776263654232, -0.01697792112827301, -0.0014286560472100973, -0.00025686301523819566, -1.3828182090946939e-05, -0.000743708573281765, -0.00020358874462544918, -1.1086402082582936e-05, -0.00021062063751742244, -5.960462772236497e-07, -3.0040289857424796e-05, -5.960462772236497e-07, -2.3841855067985307e-07, -1.4662635294371285e-05, -6.6756979322235566e-06, -2.9802276912960224e-06, -8.4638240878121e-06, -0.0007443041540682316, -0.0002919009421020746, -0.00015901254664640874, -0.09934044629335403, -0.0001774868869688362, -0.3548387885093689, -0.05214471369981766, 0.0, -0.0042772479355335236, -0.00024184639914892614, -4.768370445162873e-07, -0.1254054456949234, -0.0008395960903726518, -0.0005015069036744535, -0.011144887655973434, -0.11544061452150345, -1.4305104514278355e-06, -0.018539126962423325, -0.03002925030887127, -1.5837010145187378, -0.10481410473585129, -1.23472261428833, -0.07653558999300003, -0.19289912283420563, -0.004586889408528805, -8.666139910928905e-05, -0.006292175501585007, -0.019908372312784195, -0.0005197366117499769, -1.1560490131378174, -0.0054030814208090305, -0.00824653822928667, -1.0728830375228426e-06, -1.3232143828645349e-05, -0.20166338980197906, -1.2755313036905136e-05, -0.0004232226056046784, -0.6186912655830383, -0.001714071026071906, -0.12671613693237305, -0.00039915222441777587, -0.0001839230244513601, -0.0045822616666555405, -8.284702198579907e-05, -0.0001679517881711945, -9.059495641849935e-05, -6.115249561844394e-05, -0.03278287127614021, -0.00015090756642166525, -6.05564855504781e-05, -0.04880862310528755, -0.006759870797395706, -0.11024600267410278, -0.6709461212158203, -0.01761600188910961, -0.0012966329231858253, -1.1920928244535389e-07, -1.2159273865108844e-05, -0.02604438178241253, -0.1604255735874176, -0.00014888131408952177, -0.025727836415171623, -0.00011312322021694854, -0.005190942902117968, -7.998623186722398e-05, -3.957670196541585e-05, -0.000692961853928864, -2.276871418871451e-05, -3.6000557884108275e-05, -7.009260298218578e-05, -6.186770770000294e-05, -0.009000681340694427, -7.116541382856667e-05, -0.00013791563105769455, -0.049359776079654694, -0.052070822566747665, -0.0004568248405121267, -0.14805395901203156, -0.4437981843948364, -0.5829426050186157, -0.29985353350639343, -0.002314747544005513, -0.49176666140556335, -4.768360213347478e-06, -0.10218827426433563, -0.0036061275750398636, -0.5089120268821716, -0.00091856240760535, -0.05483761802315712, -0.0023667202331125736], "finish_reason": "stop"}], "metrics": {"energy": 676.5001441793434, "energy_per_token": 3.3994982119564994, "time": 17.664036, "time_per_token": 0.088764}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input parameter 'df' must be a pandas DataFrame.\")\n    if df.empty:\n        raise ValueError(\"Input parameter 'df' must not be empty.\")\n    if col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(f\"DataFrame must contain the specified columns: {col1}, {col2}.\")\n\n    if not df[col1].dtype.name == 'floating' and not df[col1].dtype.name == 'integer':\n        raise TypeError(\"Values in column {col1} should be of type 'integer' or 'floating'.\")\n    if not df[col2].dtype.name == 'floating' and not df[col2].dtype.name == 'integer':\n        raise TypeError(\"Values in column {col2} should be of type 'integer' or 'floating'.\")\n\n    plot = sns.scatterplot(x=col1, y=col2, data=df", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " parameter", " '", "df", "'", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " parameter", " '", "df", "'", " must", " not", " be", " empty", ".", "\"", ")", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "DataFrame", " must", " contain", " the", " specified", " columns", ":", " {", "col", "1", "}", ",", " {", "col", "2", "}", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " df", "[", "col", "1", "]", ".", "d", "type", ".", "name", " ==", " '", "flo", "ating", "'", " and", " not", " df", "[", "col", "1", "]", ".", "d", "type", ".", "name", " ==", " '", "integer", "':", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Values", " in", " column", " {", "col", "1", "}", " should", " be", " of", " type", " '", "integer", "'", " or", " '", "flo", "ating", "'", ".", "\"", ")", "\n", "    ", "if", " not", " df", "[", "col", "2", "]", ".", "d", "type", ".", "name", " ==", " '", "flo", "ating", "'", " and", " not", " df", "[", "col", "2", "]", ".", "d", "type", ".", "name", " ==", " '", "integer", "':", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Values", " in", " column", " {", "col", "2", "}", " should", " be", " of", " type", " '", "integer", "'", " or", " '", "flo", "ating", "'", ".", "\"", ")", "\n", "\n", "    ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -3.8189477920532227, -0.47201773524284363, -0.003652332117781043, -0.0003685271949507296, -0.1470077931880951, -0.0006864098832011223, -0.03087291680276394, -0.8017093539237976, -0.003952074330300093, -0.0010449193650856614, -0.4249834418296814, -0.0018807833548635244, -0.0003045333724003285, -0.0002885640424210578, -0.2746857702732086, -0.13671953976154327, -0.028046797960996628, -0.00461987778544426, -0.0017015753546729684, -0.016820622608065605, -0.0006430465145967901, -0.00032884435495361686, -0.0014938872773200274, -0.000341476290486753, -1.1920928244535389e-07, -0.0016669438919052482, -0.0038551785983145237, -0.06770504266023636, -1.605635643005371, -0.004231903236359358, -0.00042000532266683877, -6.8662193370983e-05, -0.32705235481262207, -0.14797356724739075, -0.00026901919045485556, -0.09793553501367569, -0.007991601713001728, -0.0008736607851460576, -5.447716102935374e-05, -3.9934315282152966e-05, -0.036936357617378235, -0.01705855317413807, -0.34945008158683777, -0.00024589852546341717, -0.01668311282992363, -4.768360213347478e-06, -0.004454808309674263, -0.07581944018602371, -7.092700980138034e-05, -0.2828911244869232, -0.0002498314715921879, -9.178694017464295e-05, -2.4199192921514623e-05, -2.2411095415009186e-05, -6.198863957251888e-06, -2.586808113846928e-05, -1.0847986231965479e-05, -0.0005760917556472123, -0.00014411364099942148, -0.00020621081057470292, -0.00158184755127877, -0.003993157297372818, -3.576278118089249e-07, -0.0008152975351549685, -1.8012489080429077, -0.0006391151691786945, -2.8098435401916504, -0.47933539748191833, -0.28672024607658386, -1.6419415473937988, -1.5193164348602295, -0.029009683057665825, -0.4022945165634155, -0.18429484963417053, -0.0014221088495105505, -7.021180499577895e-05, -0.032364122569561005, -0.4523981511592865, -0.008196881040930748, -1.7762025890988298e-05, -0.00024244230007752776, -1.0926752090454102, -0.0034057253506034613, -0.0031386183109134436, -0.001459962804801762, -0.00013314791431184858, -1.133941650390625, -0.0009634620510041714, -1.6343258619308472, -0.7189604043960571, -1.5021648406982422, -0.0232519693672657, -0.00040534863364882767, -0.0037551855202764273, -0.0008089845650829375, -6.12716976320371e-05, -0.23570913076400757, -0.02674669399857521, -0.8672744035720825, -2.480043649673462, -2.3227832317352295, -0.3171808123588562, -0.7386401891708374, -2.4676019165781327e-05, -0.21688871085643768, -0.4011968970298767, -0.4837881922721863, -0.003195063676685095, -0.0008275659638457, -0.00013672371278516948, -0.09024018794298172, -0.00011205045302631333, -0.00018630675913300365, -0.004582736175507307, -0.00027414379292167723, -0.0015085280174389482, -0.0005665604257956147, -0.0031357663683593273, -0.007395154796540737, -0.0001618731184862554, -0.3175823986530304, -0.0023241431917995214, -0.010993272066116333, -0.01434913370758295, -0.02480376698076725, -9.775113539944869e-06, -0.09262493252754211, -1.3026049137115479, -4.255558013916016, -0.9787924885749817, -0.9600750207901001, -1.254830241203308, -0.07460912317037582, -0.005196753889322281, -0.036633700132369995, -2.813249111175537, -0.05669979751110077, -3.4552111625671387, -0.668973445892334, -1.3035650253295898, -2.337099552154541, -0.009254416450858116, -0.022976364940404892, -0.006050484720617533, -0.13188807666301727, -0.0005981324939057231, -0.01113474927842617, -0.8690360188484192, -0.022288652136921883, -0.005030593369156122, -0.000704159727320075, -0.2873457968235016, -0.018751144409179688, -0.0032719431910663843, -0.0014153235824778676, -0.0001879753835964948, -8.583032467868179e-06, -0.0052132378332316875, -4.410734163684538e-06, -1.0967194612021558e-05, -5.5549986427649856e-05, -1.7881233361549675e-05, -0.00012683063687290996, -9.42901024245657e-05, -0.00047136162174865603, -0.0008812834857963026, -0.0005052005290053785, -5.960462772236497e-07, -0.000266278104390949, -0.0020681675523519516, -0.001906721736304462, -0.0002217047003796324, -2.288792165927589e-05, -1.2755313036905136e-05, -0.008721120655536652, -7.152531907195225e-06, -4.768370445162873e-07, -8.106198947643861e-06, -1.6689160474925302e-05, -1.0490362910786644e-05, -1.2755313036905136e-05, -0.0006410212954506278, -0.0009141556802205741, -0.00039188333903439343, -0.0007819455349817872, -2.7179348762729205e-05, -0.001416156766936183, -0.00030322244856506586, -0.0014994817320257425, -8.344646857949556e-07, -0.000529149197973311, -0.01692763902246952, -0.0023670769296586514, -0.0004103533865418285, -0.0012187680695205927, -0.0021063541062176228, -0.00012373158824630082, -0.01229469571262598, -0.00024434918304905295, -0.0007949291029945016, -0.0002949994814116508, -0.0006709231529384851, -0.0003392120997887105, -0.000529149197973311, -0.0011701886542141438, -0.0002935693773906678, -0.0002805792901199311, -0.0004419303731992841, -0.00013362467871047556, -3.4570634852570947e-06, -0.0010251511121168733, -0.005480265710502863, -0.001312586129643023, -0.00040368037298321724, -0.00011252723925281316, -0.05094389617443085, -0.00043442347669042647, -1.4599939584732056, -0.01252063736319542, -0.016014287248253822, -2.264974000354414e-06, -5.531158240046352e-05, -0.2993507385253906, -1.9788545614574105e-05, -0.00033241944038309157, -0.5702700018882751, -0.008775951340794563, -0.12229927629232407, -0.0003361137059982866, -0.0003165697562508285, -0.014864874072372913, -0.00029988560709170997, -0.00023147765023168176, -4.088794958079234e-05, -0.0002252801787108183, -0.035527776926755905, -0.0003759154351428151, -0.0002668739762157202], "finish_reason": "length"}], "metrics": {"energy": 888.8666390953058, "energy_per_token": 3.4721353089660383, "time": 21.809069, "time_per_token": 0.08519167578125}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input data is not a pandas DataFrame.\")\n    if df.empty:\n        raise ValueError(\"Input DataFrame is empty.\")\n    if col1 not in df.columns:\n        raise ValueError(f\"Column '{col1}' not found in the DataFrame.\")\n    if col2 not in df.columns:\n        raise ValueError(f\"Column '{col2}' not found in the DataFrame.\")\n\n    try:\n        plot = sns.regplot(x=col1, y=col2, data=df)\n    except ValueError:\n        raise TypeError(f\"DataFrame contains invalid values.\")\n\n    return plot", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " is", " not", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " is", " empty", ".", "\"", ")", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " '", "{", "col", "1", "}'", " not", " found", " in", " the", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " '", "{", "col", "2", "}'", " not", " found", " in", " the", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "plot", " =", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "    ", "except", " Value", "Error", ":", "\n", "        ", "raise", " Type", "Error", "(", "f", "\"", "DataFrame", " contains", " invalid", " values", ".", "\"", ")", "\n", "\n", "    ", "return", " plot", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -0.9383212327957153, -1.3177107572555542, -0.008205984719097614, -0.05750303342938423, -2.1225078105926514, -0.023426076397299767, -0.0017539369873702526, -0.378684401512146, -0.012945774011313915, -0.0002698534226510674, -0.0003103728231508285, -0.22592175006866455, -0.2019219547510147, -0.020117061212658882, -0.0030669579282402992, -0.0009663202799856663, -0.014851601794362068, -0.00032884435495361686, -0.00014625910262111574, -0.001019792165607214, -0.0003022690652869642, -1.1920928244535389e-07, -0.0010502781951799989, -0.004938072524964809, -0.060427360236644745, -0.49824288487434387, -0.001845919992774725, -0.0047271400690078735, -0.0006138585740700364, -0.009574800729751587, -0.003201718209311366, -5.674201020156033e-05, -2.8609820219571702e-05, -0.034413717687129974, -0.023136308416724205, -0.18243096768856049, -0.00033087024348787963, -0.010300216265022755, -3.6954811548639555e-06, -0.0021112312097102404, -0.09147069603204727, -5.876845170860179e-05, -1.5405620336532593, -0.00022027450904715806, -0.0001616347290109843, -0.0005635818815790117, -0.00825989805161953, -3.576278118089249e-07, -0.000662703241687268, -0.22065451741218567, -0.001280560391023755, -0.14537397027015686, -0.395589679479599, -8.618460560683161e-05, -4.4225667807040736e-05, -0.0004287039046175778, -0.003950411919504404, -0.2559984028339386, -0.07132073491811752, -0.003164642956107855, -0.351550430059433, -0.017771417275071144, -0.0001851148990681395, -0.008960040286183357, -0.0006204110686667264, -7.807903602952138e-05, -0.0001003691868390888, -0.0012982996413484216, -0.0014718662714585662, -0.0019813207909464836, -0.00020418466010596603, -3.397406908334233e-05, -9.536738616588991e-07, -3.4570634852570947e-06, -4.362964682513848e-05, -8.106198947643861e-06, -9.595887240720913e-05, -1.3589766240329482e-05, -0.00010072677832795307, -0.0001517419150331989, -6.961580220377073e-05, 0.0, -5.8053239627042785e-05, -0.0020149897318333387, -6.9141146923357155e-06, -5.7338023907504976e-05, -0.00035684893373399973, -2.0503786799963564e-05, -1.2159273865108844e-05, -0.0010375360725447536, -6.48477507638745e-05, -0.00011383838864276186, -1.4185804502631072e-05, -2.074220174108632e-05, -3.218599158572033e-05, -2.3364747903542593e-05, -4.768360213347478e-06, -0.0011843579122796655, -0.00014053787162993103, -6.186770770000294e-05, -9.250213042832911e-05, -0.7460905909538269, -0.0006959400488995016, -1.7210197448730469, -0.0007707485929131508, -0.001453891978599131, -0.005163903348147869, -0.8661317825317383, -0.004148805979639292, -0.007788527756929398, -9.536738616588991e-07, -1.5735502529423684e-05, -2.092606782913208, -0.008111628703773022, -0.00031406714697368443, -0.0808018371462822, -0.005932698491960764, -0.15550126135349274, -0.00041261743172071874, -0.00017391123401466757, -0.004165188409388065, -0.00013910756388213485, -6.305972783593461e-05, -5.07818695041351e-05, -0.00010501786891836673, -0.006297742947936058, -0.00014888131408952177, -6.90197994117625e-05, -0.0838434249162674, -0.0221080519258976, -0.5044687986373901, -0.0011025547282770276, -0.7638406753540039, -1.156323378381785e-05, -1.0596603155136108, -0.010145286098122597, -0.0010767144849523902, -0.10230601578950882, -0.36434948444366455, -4.0531076592742465e-06, -0.04729422926902771, -2.2721545696258545, -0.012352981604635715, -1.699494481086731, -0.6432692408561707, -3.0290236473083496, -2.4049150943756104, -2.1193370819091797, -1.0427855253219604, -0.0032910730224102736, -0.05439402535557747, -0.3792767822742462, -0.0003673355677165091, -0.07375849783420563, -0.0015926783671602607, -0.48440954089164734, -0.0025724435690790415, -0.44343048334121704], "finish_reason": "stop"}], "metrics": {"energy": 602.2872926197041, "energy_per_token": 3.422086889884682, "time": 15.07952, "time_per_token": 0.08567909090909091}}
{"outputs": [{"text": "# Check if the input df is not a DataFrame, empty, or does not contain the specified columns\n    if not isinstance(df, pd.DataFrame) or df.empty or not all([col in df.columns for col in [col1, col2]]):\n        raise ValueError(\"The input df must be a non-empty DataFrame and must contain the specified columns.\")\n\n    try:\n        # Draw a scatter plot with a regression line for two columns from a DataFrame\n        plot = sns.regplot(x=col1, y=col2, data=df)\n\n        # Check if the plot is a valid plot\n        if not isinstance(plot, sns.axes.Axes):\n            raise ValueError(\"The plot must be a valid plot.\")\n\n        # Check if the plot is a valid plot type\n        if plot.collections[0].get_offsets().ndim != 2:\n            raise ValueError(\"The plot must be a valid plot type.\")\n\n        return plot\n\n    except Exception as e:\n        raise ValueError(\"An error occurred: {", "tokens": ["#", " Check", " if", " the", " input", " df", " is", " not", " a", " Data", "Frame", ",", " empty", ",", " or", " does", " not", " contain", " the", " specified", " columns", "\n", "    ", "if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", ")", " or", " df", ".", "empty", " or", " not", " all", "([", "col", " in", " df", ".", "columns", " for", " col", " in", " [", "col", "1", ",", " col", "2", "]]", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " df", " must", " be", " a", " non", "-", "empty", " Data", "Frame", " and", " must", " contain", " the", " specified", " columns", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "#", " Draw", " a", " scatter", " plot", " with", " a", " regression", " line", " for", " two", " columns", " from", " a", " Data", "Frame", "\n", "        ", "plot", " =", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "\n", "        ", "#", " Check", " if", " the", " plot", " is", " a", " valid", " plot", "\n", "        ", "if", " not", " isinstance", "(", "plot", ",", " s", "ns", ".", "axes", ".", "Ax", "es", "):", "\n", "            ", "raise", " Value", "Error", "(", "\"", "The", " plot", " must", " be", " a", " valid", " plot", ".", "\"", ")", "\n", "\n", "        ", "#", " Check", " if", " the", " plot", " is", " a", " valid", " plot", " type", "\n", "        ", "if", " plot", ".", "collections", "[", "0", "]", ".", "get", "_", "offs", "ets", "()", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "            ", "raise", " Value", "Error", "(", "\"", "The", " plot", " must", " be", " a", " valid", " plot", " type", ".", "\"", ")", "\n", "\n", "        ", "return", " plot", "\n", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "An", " error", " occurred", ":", " {"], "logprobs": [-2.9147114753723145, -0.6435554623603821, -0.4615020453929901, -0.27802878618240356, -0.060660749673843384, -1.0339100360870361, -0.0223303884267807, -1.3542200326919556, -0.5718294382095337, -0.021654481068253517, -0.001082073082216084, -0.2583669424057007, -0.0268713366240263, -0.045380719006061554, -0.004956458695232868, -0.011173887178301811, -0.00039736481267027557, -0.004970574285835028, -0.02022944949567318, -0.007580325473099947, -0.003041643649339676, -0.13129152357578278, -0.003384815761819482, -0.03959164768457413, -0.024657931178808212, -0.011141350492835045, -6.568216485902667e-05, -0.0012729407753795385, -0.0006328010931611061, -0.00210564024746418, -2.861018856492592e-06, -0.006399140227586031, -0.43009158968925476, -0.013612538576126099, -0.02391911670565605, -0.0017471539322286844, -0.0003510097449179739, -0.0521322637796402, -2.5682730674743652, -0.43345487117767334, -2.4390738010406494, -0.05336149036884308, -0.2935440242290497, -0.0064485324546694756, -0.11980405449867249, -6.651657167822123e-05, -0.0015529250958934426, -0.00011276562872808427, -0.0002195594133809209, -0.043149035423994064, -0.0003759154351428151, -6.246371776796877e-05, -6.913899414939806e-05, -0.0021230080164968967, -1.5258672647178173e-05, -0.00024959311122074723, -0.008864455856382847, -0.0004332319076638669, -0.003436613827943802, -0.03164288029074669, -0.001751794945448637, -9.536738616588991e-07, -0.08379047363996506, -0.03027944080531597, -1.2762398719787598, -0.040164049714803696, -0.4592605233192444, -0.4917620122432709, -0.015143309719860554, -0.007560212630778551, -0.043446872383356094, -0.00241964147426188, -0.00015364897262770683, -0.017040271311998367, -0.0002728328399825841, -0.47017529606819153, -0.2544788718223572, -0.02470294013619423, -0.08042945712804794, -0.0017404898535460234, -0.0021096847485750914, -0.19504106044769287, -0.0010873125866055489, -0.00047219570842571557, -0.00022885564249008894, -0.41567859053611755, -0.002764810109511018, -2.8333189487457275, -0.001179118873551488, -0.012108158320188522, -0.011159387417137623, -0.8640269041061401, -0.6032629609107971, -0.08055770397186279, -0.015727879479527473, -0.0019032713025808334, -0.030509451404213905, -0.017897654324769974, -0.005404978524893522, -0.0001573438785271719, -0.09193511307239532, -0.2589870095252991, -0.09208940714597702, -0.03258465230464935, -0.030392775312066078, -0.0020889858715236187, -0.0009626284008845687, -0.1656995564699173, -0.0008070787298493087, -0.9243373274803162, -0.003800314385443926, -0.018835026770830154, -1.0728830375228426e-06, -3.075552376685664e-05, -0.7909666299819946, -0.034011900424957275, -0.00017248096992261708, -0.08023243397474289, -0.009285124950110912, -0.12053018808364868, -0.00048565989709459245, -0.0001510267611593008, -0.0029067429713904858, -9.393251093570143e-05, -7.092700980138034e-05, -6.556489552167477e-06, -7.843663479434326e-05, -0.006364434491842985, -0.00010954733443213627, -0.00010084597306558862, -0.05110044777393341, -0.008471150882542133, -1.7665324211120605, -0.3165197968482971, -1.3038541078567505, -1.4684193134307861, -0.3881787061691284, -0.2750144302845001, -1.2212584018707275, -2.0305280685424805, -1.4090065956115723, -2.142184019088745, -2.452498435974121, -1.042976975440979, -0.0008905735448934138, -0.12962426245212555, -0.28396257758140564, -0.14928007125854492, -6.067568756407127e-05, -0.0005814530304633081, -0.00544493505731225, -0.26149994134902954, 0.0, -4.017272294731811e-05, -0.8320983648300171, -0.0019602624233812094, -0.23492980003356934, -4.768370445162873e-07, -0.09426125884056091, -0.001786899520084262, -0.001086717238649726, -0.008558736182749271, -0.2763277590274811, -9.775113539944869e-06, -0.008480016142129898, -0.008581901900470257, -0.22848708927631378, -0.451175719499588, -0.8292114734649658, -0.004165188409388065, -0.03862571343779564, -0.01267825998365879, -0.11451773345470428, -0.13461284339427948, -0.002344718435779214, -0.00013779645087197423, -0.0002613918040879071, -0.17425954341888428, -0.1356073021888733, -0.40106600522994995, -0.4185604453086853, -0.05900812894105911, -0.0707242488861084, -0.2745378613471985, -2.178530693054199, -0.33954548835754395, -1.0785019397735596, -0.9495527148246765, -2.94624662399292, -0.06631205976009369, -0.0008668717346154153, -0.04268103837966919, -1.97725510597229, -0.025902442634105682, -0.0847698450088501, -0.11034347116947174, -0.0015785150462761521, -0.00033158526639454067, -0.014143233187496662, -0.05441547930240631, -3.58813522325363e-05, -0.0075953505001962185, 0.0, -0.029962847009301186, -0.09251473844051361, -3.2779273986816406, -0.00016544880054425448, -0.1953894942998886, -2.3841855067985307e-07, -2.861018856492592e-06, -0.006358867045491934, -0.02740095928311348, -0.07708855718374252, -0.0019074357114732265, -0.001446987851522863, -0.003072781255468726, -0.051618754863739014, -3.933898824470816e-06, -0.00169955228921026, -0.005817742552608252, -0.008289218880236149, -0.008708239533007145, -0.09104534983634949, -0.020833471789956093, -0.007242732681334019, -0.024719221517443657, -0.032936062663793564, -0.24847720563411713, -0.011610201559960842, -0.0032652891241014004, -4.625213477993384e-05, -0.00018320789968129247, -0.07014840841293335, -0.14924341440200806, -0.6187899112701416, -0.002309514442458749, -0.007251727394759655, -0.47368934750556946, -0.0010696887038648129, -0.0820397213101387, -1.5886088609695435, -0.022923121228814125, -0.15807999670505524, -0.0005640584276989102, -0.006857551168650389, -0.0035906860139220953, -0.5773941874504089, -1.0551302433013916, -6.437280717364047e-06, -0.005782779306173325, -0.7331221103668213, -0.790871262550354, -0.04641810804605484, -0.0482778400182724, -1.70173978805542, -1.4130123853683472], "finish_reason": "length"}], "metrics": {"energy": 910.3137696542747, "energy_per_token": 3.5559131627120104, "time": 21.745382, "time_per_token": 0.0849428984375}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input argument df is not a DataFrame.\")\n    if df.empty:\n        raise ValueError(\"Input DataFrame df is empty.\")\n    if col1 not in df.columns or col2 not in df.columns:\n        raise ValueError(\"One or both columns are not present in the DataFrame.\")\n\n    sns.set(style='ticks')\n    ax = sns.regplot(x=col1, y=col2, data=df)\n\n    return ax", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " argument", " df", " is", " not", " a", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " df", " is", " empty", ".", "\"", ")", "\n", "    ", "if", " col", "1", " not", " in", " df", ".", "columns", " or", " col", "2", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "One", " or", " both", " columns", " are", " not", " present", " in", " the", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "s", "ns", ".", "set", "(", "style", "='", "t", "icks", "')", "\n", "    ", "ax", " =", " s", "ns", ".", "reg", "plot", "(", "x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " data", "=", "df", ")", "\n", "\n", "    ", "return", " ax"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -3.2870378494262695, -0.732956051826477, -1.8832032680511475, -0.009420349262654781, -0.023089248687028885, -0.25344744324684143, -0.0014332984574139118, -0.8564611673355103, -0.004478781018406153, -0.00023231192608363926, -0.0007483542431145906, -0.19587011635303497, -0.18518130481243134, -0.03445345535874367, -0.001904818112961948, -0.0009764432325027883, -0.011767260730266571, -0.0005090133054181933, -0.00020108585886191577, -0.0015425699530169368, -0.0002859421947505325, -1.1920928244535389e-07, -0.0006403064471669495, -0.004583566915243864, -0.05342172831296921, -0.7592618465423584, -0.001745130866765976, -2.7333908081054688, -0.007610966917127371, -0.0004858981992583722, -0.01283691730350256, -0.0024378362577408552, -9.679325739853084e-05, -3.6954195820726454e-05, -0.030455566942691803, -0.020075583830475807, -0.1801832765340805, -0.00023112009512260556, -0.010693627409636974, -3.3378546504536644e-06, -0.0038752472028136253, -0.11480802297592163, -7.295342220459133e-05, -0.34946849942207336, -0.0002134810492862016, -8.535020606359467e-05, -2.0503786799963564e-05, -2.6464111215318553e-05, -4.887569048150908e-06, -1.823885577323381e-05, -7.390948667307384e-06, -0.0005667987279593945, -0.00012730741582345217, -0.0002127659390680492, -0.0013448490062728524, -0.003441603621467948, -4.768370445162873e-07, -0.0006778326351195574, -0.2233750820159912, -1.6248060464859009, -0.024126388132572174, -0.0593004934489727, -0.5044539570808411, -0.6194909811019897, -0.12239167839288712, -0.36337003111839294, -0.0014510351466014981, -0.019946349784731865, -0.04867691919207573, -0.0006068295333534479, -0.03175594285130501, -0.0013308010529726744, -0.00021228920377325267, -0.00011169286881340668, -0.9841704368591309, -0.001100768567994237, -1.6502898931503296, -0.004268226679414511, -0.050199199467897415, -0.07738981395959854, -2.1852240562438965, -0.24162960052490234, -1.885927438735962, -1.4562126398086548, -0.001888398313894868, -0.7477714419364929, -0.03416317701339722, -0.10337665677070618, -1.1815532445907593, -0.007851926609873772, -0.0013683013385161757, -1.1920928244535389e-07, -3.814689989667386e-06, -0.39436978101730347, -0.011588990688323975, -0.0005068686441518366, -0.13454470038414001, -0.007563525345176458, -0.09254712611436844, -0.0014085381990298629, -0.00022265815641731024, -0.008623030968010426, -0.00011181206355104223, -0.0001481661747675389, -1.9073304429184645e-05, -0.00014745102089364082, -0.03300953656435013, -9.297892393078655e-05, -0.00014351768186315894, -0.2901093363761902, -0.03870932012796402, -0.80996173620224, -0.0014285369543358684, -0.05846845358610153, -0.0029894683975726366], "finish_reason": "stop"}], "metrics": {"energy": 461.9122590999603, "energy_per_token": 3.4730245045109798, "time": 11.131135, "time_per_token": 0.08369274436090227}}
{"outputs": [{"text": "if not isinstance(df, pd.DataFrame):\n        raise ValueError(\"Input data should be a pandas DataFrame.\")\n    if df.empty:\n        raise ValueError(\"Input data should not be an empty DataFrame.\")\n    if not set([col1, col2]).issubset(df.columns):\n        raise ValueError(\"Input DataFrame should have the specified columns.\")\n    try:\n        plot = sns.scatterplot(data=df, x=col1, y=col2)\n        plot = sns.regressplot(data=df, x=col1, y=col2, scatter=False, color='r')\n        return plot\n    except ValueError as e:\n        raise TypeError(\"Input data should be numeric.\") from e", "tokens": ["if", " not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " df", ".", "empty", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " data", " should", " not", " be", " an", " empty", " Data", "Frame", ".", "\"", ")", "\n", "    ", "if", " not", " set", "([", "col", "1", ",", " col", "2", "])", ".", "iss", "ub", "set", "(", "df", ".", "columns", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " Data", "Frame", " should", " have", " the", " specified", " columns", ".", "\"", ")", "\n", "    ", "try", ":", "\n", "        ", "plot", " =", " s", "ns", ".", "scatter", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ")", "\n", "        ", "plot", " =", " s", "ns", ".", "reg", "ress", "plot", "(", "data", "=", "df", ",", " x", "=", "col", "1", ",", " y", "=", "col", "2", ",", " scatter", "=", "False", ",", " color", "='", "r", "')", "\n", "        ", "return", " plot", "\n", "    ", "except", " Value", "Error", " as", " e", ":", "\n", "        ", "raise", " Type", "Error", "(", "\"", "Input", " data", " should", " be", " numeric", ".", "\"", ")", " from", " e", "\n", "\n", "if"], "logprobs": [-0.15540646016597748, -0.033991046249866486, -0.026364076882600784, -4.434487345861271e-05, -0.0010856455191969872, -0.0008704449282959104, -0.0038358219899237156, -5.960446742392378e-06, -0.02644035592675209, -0.07084108144044876, -0.007048148196190596, -0.0023914568591862917, -0.0067097838036715984, -0.018678955733776093, -2.7418097943154862e-06, -0.11143498122692108, -0.05007879063487053, -0.5206318497657776, -0.9383212327957153, -1.7781389951705933, -0.001029200037010014, -0.12728865444660187, -0.9094741344451904, -0.023858940228819847, -0.004580837674438953, -0.6982194185256958, -0.0014726994559168816, -0.00019000156316906214, -0.00038044367101974785, -0.2597174048423767, -0.1737283319234848, -0.0268937349319458, -0.003294162219390273, -0.001142325927503407, -0.015215988270938396, -0.0005942009738646448, -0.00016819016309455037, -0.0016175531782209873, -0.0002824861148837954, 0.0, -0.0012321030953899026, -0.0035839155316352844, -0.05153067037463188, -0.6358961462974548, -0.5610531568527222, -0.025933921337127686, -7.962863310240209e-05, -1.801652431488037, -0.0001411338453181088, -0.03653302416205406, -0.0003692421887535602, -0.006054513156414032, -0.00032360086333937943, -2.992108420585282e-05, -2.5987286790041253e-05, -0.03866482153534889, -0.02479562722146511, -1.0275863409042358, -2.171358585357666, -0.05202476307749748, -0.0005379660287871957, -0.0001250427303602919, -0.0008593680104240775, -0.0017728578532114625, -1.5139465176616795e-05, -7.521823135903105e-05, -0.012750883586704731, -6.878139538457617e-05, -2.3841855067985307e-07, 0.0, -7.343022298300639e-05, -0.05850758031010628, -0.00846642255783081, -4.8874615458771586e-05, -0.0023801589850336313, -0.0010629009921103716, -0.0003904534096363932, -0.00324758468195796, -0.0062498836778104305, -2.3841855067985307e-07, -0.0010542079107835889, -0.25953754782676697, -0.33352741599082947, -1.303361415863037, -0.005093337036669254, -0.25825390219688416, -2.370389223098755, -0.9206604361534119, -0.027943283319473267, -0.006247395649552345, -0.03278310224413872, -0.0019957164768129587, -9.285972191719338e-05, -0.00016556799528189003, -0.5558396577835083, -0.8728685975074768, -0.0013199674431234598, -0.003882490796968341, -0.0069961813278496265, -0.9994083046913147, -0.010888919234275818, -0.01175324060022831, -1.311301275563892e-06, -2.992108420585282e-05, -0.27589279413223267, -1.4662635294371285e-05, -0.0003091811086051166, -0.5466906428337097, -0.004382054787129164, -0.0009816833771765232, -0.02794247306883335, -0.029142728075385094, -0.00039414744242094457, -0.05404409393668175, -0.00038509105797857046, -0.0002127659390680492, -0.0021663072984665632, -0.00016127715934999287, -7.974783511599526e-05, -3.6000557884108275e-05, -0.47021469473838806, -0.03071489930152893, -0.20949608087539673, -0.5417570471763611, -0.0727456659078598, -0.0036770368460565805, 0.0, -1.8358061424805783e-05, -0.037871211767196655, -2.9454262256622314, -0.1769166737794876, -0.0003719830128829926, -0.024424012750387192, -0.0008282806375063956, -0.0001851148990681395, -0.0017218063585460186, -0.004766649100929499, -8.809178689261898e-05, -0.00110600795596838, -0.0002735478919930756, -5.2689116273541003e-05, -0.00163588160648942, -0.00011801023356383666, -7.176141662057489e-05, -6.294052582234144e-05, -1.202615737915039, -0.1681191623210907, -0.0008117241668514907, -0.08205674588680267, -0.9895561933517456, -0.11860232800245285, -0.8005468845367432, -1.2949949502944946, -0.16085489094257355, -0.006419631652534008, -1.1186296939849854, -0.21743710339069366, -0.003946018870919943, -0.004546068608760834, -0.008651395328342915, -0.00109112320933491, -1.1884647607803345, -2.3841830625315197e-06, -0.46250271797180176, -0.29193827509880066, -0.0032789534889161587, -0.004637913778424263, -0.0024328415747731924, -0.7211464643478394, -0.7943034172058105, -1.2755313036905136e-05, -0.07166456431150436, -0.42773425579071045, -1.1790395975112915, -0.25561201572418213, -0.07987932115793228, -0.626484215259552, -0.27369263768196106, -0.2018958479166031, -0.031410012394189835, -0.006024297792464495, -0.0407588966190815, -0.004118532873690128, -0.24396710097789764, -0.09487466514110565, -0.29610177874565125], "finish_reason": "stop"}], "metrics": {"energy": 643.3222955474859, "energy_per_token": 3.4587220190725048, "time": 15.912577, "time_per_token": 0.08555148924731183}}
