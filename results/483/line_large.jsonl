{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.7293965220451355, -6.496695277746767e-05, -0.006064110901206732, -0.05751384049654007, -0.054256733506917953], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.7566888332366943, -0.010465503670275211], "finish_reason": "stop"}, {"text": " matched_words + [word for word in words if not re.search(pattern, word)]", "tokens": [" matched", "_", "words", " +", " [", "word", " for", " word", " in", " words", " if", " not", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-2.2499945163726807, -0.0003232433518860489, -0.00018380382971372455, -0.02979751117527485, -0.009284062311053276, -0.005540728569030762, -0.0008849757141433656, -0.00023731753753963858, -2.1457441107486375e-05, -0.0001867835089797154, -0.003172367112711072, -0.354571670293808, -0.008950351737439632, -1.6927575416048057e-05, -0.0021302644163370132, -0.00011872540198964998, -0.0010877889581024647, -9.142934868577868e-05, -0.0022871545515954494, -0.0021824846044182777, -0.006780828349292278], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word for word in words", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.0003046525234822184, -0.347331166267395, -0.008006383664906025, -0.0003262225945945829, -0.057935573160648346, -0.01722296141088009, -9.894321920000948e-06, -0.0008947421447373927, -0.00010096516780322418, -0.008628585375845432, -0.0001419681793777272, -0.004235702101141214, -0.0005993238883093, -0.025269977748394012, -0.004432852379977703, -0.9453394412994385, -0.016110364347696304, -0.0028469529934227467, -0.009868405759334564, -0.08828496187925339], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.6346059441566467, -0.0007488307310268283, -7.402622577501461e-05, -6.758938252460212e-05, -0.0016940779751166701, -0.004808173049241304, -3.933898824470816e-06, -5.483612312673358e-06, -0.0005460678366944194, -0.019847486168146133], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.029849810525774956, -0.036445096135139465, -0.006024060770869255, -0.013080385513603687, -0.024260317906737328], "finish_reason": "stop"}, {"text": " pattern != \"\":", "tokens": [" pattern", " ", "!", "=", " \"", "\":", "\n"], "logprobs": [-0.33684903383255005, -2.1809701919555664, -6.794906312279636e-06, -4.732496745418757e-05, -0.29562991857528687, -0.008457912132143974, -0.006856722291558981], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0635157972574234, -5.7338023907504976e-05, -1.847726889536716e-05, -0.015452070161700249], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.16035693883895874, -1.0490362910786644e-05, -9.894321920000948e-06, -0.013056265190243721, -0.002087677363306284, -2.9682672902708873e-05, -1.1920928244535389e-07, -0.0003457663697190583, -0.0012948471121490002, -0.06237941235303879, -0.00016258825780823827, -0.031159989535808563, -1.5497195136049413e-06, -0.00012838016846217215, -5.125986263010418e-06, -1.537788011773955e-05, -0.0014262752374634147, -0.001995121594518423], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.004365201108157635, -1.680836794548668e-05, -8.22540732769994e-06, -0.7372967004776001], "finish_reason": "stop"}], "metrics": {"energy": 868.0732054786683, "energy_per_token": 9.042429223736129, "time": 21.73565, "time_per_token": 0.22641302083333334}}
{"outputs": [{"text": " re.findall(r'\\w+', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n"], "logprobs": [-0.8634771108627319, -0.00011455356434453279, -0.8519111275672913, -0.0009847796754911542, -0.010648572817444801, -0.2088889479637146, -0.04647500813007355, -2.163942813873291, -0.0193977989256382, -2.4437606043647975e-05, -0.005782779306173325, -0.035985104739665985, -0.1177072674036026], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.9533931016921997, -0.010680418461561203], "finish_reason": "stop"}, {"text": " [word if not re.search(pattern, word) else matched_words.pop(0) for word in words]", "tokens": [" [", "word", " if", " not", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " matched", "_", "words", ".", "pop", "(", "0", ")", " for", " word", " in", " words", "]", "\n"], "logprobs": [-1.110442876815796, -0.6086362600326538, -0.03642601519823074, -1.3669134378433228, -0.0035383019130676985, -1.823885577323381e-05, -0.0019355150870978832, -7.10462118149735e-05, -0.002033667638897896, -0.00012146688823122531, -0.0019292092183604836, -0.00020037073409184813, -0.010231426917016506, -0.00779668940231204, -0.0002874914789572358, -0.00030250742565840483, -0.010618967935442924, -9.667406266089529e-05, -0.46998316049575806, -0.0009728704462759197, -5.531158240046352e-05, -0.31433579325675964, -0.0006420934805646539, -0.0004183370911050588, -0.00048065552255138755, -0.007089695893228054, -0.001709786825813353], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.00030596344731748104, -0.6334890723228455, -0.007804851047694683, -0.00041333239641971886, -0.05432233586907387, -0.01429002359509468, -1.2159273865108844e-05, -0.0004752936656586826, -9.655486064730212e-05, -0.0074532534927129745, -0.00010418349120300263, -0.004388938657939434, -0.0006137394811958075, -0.02566405013203621, -0.005048622377216816, -0.520033061504364], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.6029292941093445, -0.0007541911327280104, -6.317892984952778e-05, -6.151010165922344e-05, -0.001672894461080432, -0.004612876567989588, -5.8412379075889476e-06, -6.556489552167477e-06, -0.0004674295778386295, -0.02207423560321331], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.024024561047554016, -0.04370879381895065, -0.004792631138116121, -0.013545741327106953, -0.023150868713855743], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.41850975155830383, -0.25586560368537903, -0.010174904949963093], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-2.9183340072631836, -0.07418904453516006], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.17598676681518555, -1.3708974620385561e-05, -9.775113539944869e-06, -0.010955658741295338, -0.0019311128417029977, -3.015949550899677e-05, 0.0, -0.00031406714697368443, -0.0013198483502492309, -0.06436008214950562, -0.00017105070583056659, -0.03732988238334656, -1.6689286894688848e-06, -9.262132516596466e-05, -5.483612312673358e-06, -1.2636104656849056e-05, -0.0014490114990621805, -0.00169955228921026], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.004659034311771393, -1.585470999998506e-05, -8.4638240878121e-06, -0.817578911781311, -5.8412379075889476e-06, -2.622600959512056e-06, -1.5497195136049413e-06, -1.1920858014491387e-05, -0.18500061333179474], "finish_reason": "stop"}], "metrics": {"energy": 593.9927513618471, "energy_per_token": 5.657073822493782, "time": 14.025304, "time_per_token": 0.1335743238095238}}
{"outputs": [{"text": " re.findall(r'\\w+', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n"], "logprobs": [-0.8634771108627319, -0.00011455356434453279, -0.8519111275672913, -0.0009847796754911542, -0.010648572817444801, -0.2088889479637146, -0.04647500813007355, -2.163942813873291, -0.0193977989256382, -2.4437606043647975e-05, -0.005782779306173325, -0.035985104739665985, -0.1177072674036026], "finish_reason": "stop"}, {"text": " [word for word in words if re.match(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "match", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.5612651109695435, -0.407529354095459, -0.08597811311483383, -0.000485183292767033, -0.00015960850578267127, -0.015736445784568787, -0.004946138709783554, -0.01590142212808132, -0.00022373080719262362, -1.75075101852417, -0.001662064460106194, -0.008695948868989944, -0.0016694430960342288, -0.0010070496937260032, -0.0903642401099205, -0.00356704811565578], "finish_reason": "stop"}, {"text": " [word if re.search(pattern, word) is None else matched_words.pop() for word in words]", "tokens": [" [", "word", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " is", " None", " else", " matched", "_", "words", ".", "pop", "()", " for", " word", " in", " words", "]", "\n"], "logprobs": [-1.074650764465332, -0.8101522326469421, -0.034093938767910004, -0.37333765625953674, -1.0371154530730564e-05, -0.0010799296433106065, -0.00011634149996098131, -0.005636631045490503, -0.00013469743134919554, -0.0012391278287395835, -0.0003840185818262398, -1.8940825462341309, -0.004347753711044788, -0.011184850707650185, -0.014688212424516678, -0.00020072828920092434, -0.0001954841281985864, -0.01897411234676838, -5.245071224635467e-05, -0.6399644017219543, -0.4551217257976532, -0.0012644876260310411, -0.0009590555564500391, -0.0005376085755415261, -0.012994490563869476, -0.0023526865988969803], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.00036352223833091557, -0.526313841342926, -0.006361235864460468, -0.0003923600015696138, -0.060195714235305786, -0.01363864541053772, -1.1920858014491387e-05, -0.0005609607324004173, -9.965400386136025e-05, -0.007219654507935047, -0.00012730741582345217, -0.0036168177612125874, -0.0005648924270644784, -0.02352563478052616, -0.0035764321219176054, -0.4808989465236664], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.8498623371124268, -0.00010144196130568162, -6.568216485902667e-05, -7.879423355916515e-05, -0.0014541300479322672, -0.004397603217512369, -4.768360213347478e-06, -6.6756979322235566e-06, -0.0009490515221841633, -0.014041678048670292], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.029060980305075645, -0.04033374786376953, -0.006990854628384113, -0.019139491021633148, -0.030584489926695824], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.38230010867118835, -0.291113018989563, -0.007939920760691166], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.08157562464475632, -5.936446541454643e-05, -2.2291887944447808e-05, -0.012592565268278122], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.21191494166851044, -1.3708974620385561e-05, -1.168244216387393e-05, -0.008577410131692886, -0.002379207406193018, -3.302042750874534e-05, 0.0, -0.00043275527423247695, -0.0014067525044083595, -0.04843810573220253, -0.00015960850578267127, -0.03012942709028721, -1.4305104514278355e-06, -9.786603914108127e-05, -4.172316494077677e-06, -1.1444026313256472e-05, -0.0013896104646846652, -0.002336155390366912], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0041723111644387245, -1.9073304429184645e-05, -1.1920858014491387e-05, -0.7706148624420166], "finish_reason": "stop"}], "metrics": {"energy": 638.2031958789825, "energy_per_token": 5.549593007643326, "time": 15.053084, "time_per_token": 0.13089638260869566}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.8634771108627319, -0.00011455356434453279, -0.8519111275672913, -0.0009847796754911542, -0.010648572817444801, -0.2088889479637146, -0.04647500813007355, -0.7432504892349243, -0.08998767286539078, -0.4784909188747406, -0.005175525788217783, -7.390948667307384e-06, -0.003836059710010886, -3.0874729418428615e-05, -0.0031749813351780176, -0.00912188645452261, -0.13767264783382416], "finish_reason": "stop"}, {"text": " [word for word in words if re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.5612651109695435, -0.407529354095459, -0.08597811311483383, -0.000485183292767033, -0.00015960850578267127, -0.015736445784568787, -0.004946138709783554, -0.01590142212808132, -0.00022373080719262362, -0.22400997579097748, -0.0023730231914669275, -0.005874392576515675, -0.0013067525578662753, -0.0009640575153753161, -0.09332600235939026, -0.003043664153665304], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8336473107337952, -0.003163692308589816], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word for word in words", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.00033885458833537996, -0.4705680012702942, -0.0056328377686440945, -0.0004159538948442787, -0.07170473039150238, -0.01787458546459675, -1.1920858014491387e-05, -0.000514017534442246, -8.928377064876258e-05, -0.008705994114279747, -0.00013684290752280504, -0.0037531666457653046, -0.0006275591440498829, -0.03747905045747757, -0.003986864350736141, -1.0097649097442627, -0.013581727631390095, -0.002585760550573468, -0.011556939221918583, -0.08763943612575531], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5200970768928528, -0.0006337541271932423, -7.247662142617628e-05, -5.900685573578812e-05, -0.0016352864913642406, -0.0033358661457896233, -4.529942543740617e-06, -5.364403477869928e-06, -0.0005267662927508354, -0.02049238234758377], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.022150494158267975, -0.0397266149520874, -0.005292452406138182, -0.013272624462842941, -0.02596656046807766], "finish_reason": "stop"}, {"text": " not pattern:", "tokens": [" not", " pattern", ":", "\n"], "logprobs": [-1.3997447490692139, -0.1664780080318451, -0.07239333540201187, -0.01623833365738392], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.07890880852937698, -5.6622808187967166e-05, -1.6689160474925302e-05, -0.012700977735221386], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.23886537551879883, -1.4424220353248529e-05, -1.0967194612021558e-05, -0.013237097300589085, -0.0017688118387013674, -2.992108420585282e-05, 0.0, -0.000350175570929423, -0.0011019593803212047, -0.06573166698217392, -0.00016068121476564556, -0.03768547996878624, -1.9073468138230965e-06, -9.274052717955783e-05, -5.006777428206988e-06, -1.4185804502631072e-05, -0.001257344032637775, -0.0017903504194691777], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0030755146872252226, -1.537788011773955e-05, -8.22540732769994e-06, -0.7780923843383789], "finish_reason": "stop"}], "metrics": {"energy": 526.9282523727414, "energy_per_token": 5.269282523727415, "time": 12.757505, "time_per_token": 0.12757505}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.6729435920715332, -6.19869097135961e-05, -0.004142276477068663, -0.052369408309459686, -0.05005928874015808], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-1.6522753238677979, -0.0001264730526600033, -0.005301227327436209, -0.014124545268714428, -0.0013461584458127618, -0.030773045495152473, -0.003460373729467392, -0.14924392104148865, -0.28141430020332336, -0.028069864958524704], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8353936672210693, -0.0029262362513691187], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.00023862851958256215, -0.5491956472396851, -0.006296677049249411, -0.00040165462996810675, -0.07349015772342682, -0.013411661610007286, -9.65590606938349e-06, -0.0005204515182413161, -7.807903602952138e-05, -0.008113756775856018, -0.0001234931987710297, -0.004548916593194008, -0.0007782529573887587, -0.026234839111566544, -0.003658151952549815, -0.5754011273384094], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.8509266376495361, -7.068861305015162e-05, -7.247662142617628e-05, -6.305972783593461e-05, -0.0012855607783421874, -0.003138380590826273, -3.6954811548639555e-06, -7.986990567587782e-06, -0.0006755692302249372, -0.01217222586274147], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.02432931214570999, -0.03999283164739609, -0.00465867854654789, -0.02009766735136509, -0.029890190809965134], "finish_reason": "stop"}, {"text": " not pattern:", "tokens": [" not", " pattern", ":", "\n"], "logprobs": [-1.4761688709259033, -0.16405938565731049, -0.05618806183338165, -0.01829078048467636], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.08057145029306412, -5.817244164063595e-05, -2.1576648578047752e-05, -0.013793622143566608], "finish_reason": "stop"}, {"text": " df[column_name].apply(reverse_matched_words)", "tokens": [" df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-1.8258767127990723, -0.009218982420861721, -0.0037203875835984945, -2.396077979938127e-05, 0.0, -0.00041130665340460837, -0.00040463366894982755, -0.04225178807973862, -0.00018976318824570626, -0.05472690984606743, -1.5497195136049413e-06, -0.00016223068814724684, -6.079655122448457e-06, -1.5258672647178173e-05, -0.00139318173751235, -0.0023902675602585077], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0037241880781948566, -1.847726889536716e-05, -8.702239938429557e-06, -0.7867894172668457], "finish_reason": "stop"}], "metrics": {"energy": 505.2995497760773, "energy_per_token": 6.648678286527333, "time": 12.130683, "time_per_token": 0.15961424999999999}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.6729435920715332, -6.19869097135961e-05, -0.004142276477068663, -0.052369408309459686, -0.05005928874015808], "finish_reason": "stop"}, {"text": " [word for word in words if re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.5601655840873718, -0.4248519539833069, -0.12635596096515656, -0.0006744970451109111, -0.00017021637177094817, -0.010668624192476273, -0.007318473421037197, -0.016417652368545532, -0.00013910756388213485, -0.3061041831970215, -0.0021920003928244114, -0.009054434485733509, -0.001026103738695383, -0.0012828224571421742, -0.09283843636512756, -0.004215877968817949], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8544881343841553, -0.0028152139857411385], "finish_reason": "stop"}, {"text": "pop()", "tokens": ["pop", "()", "\n"], "logprobs": [-0.0005042473785579205, -0.9548496603965759, -2.954007625579834], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.6001527905464172, -0.0008600826840847731, -8.296622399939224e-05, -6.09140915912576e-05, -0.0015650654677301645, -0.00500781973823905, -5.125986263010418e-06, -5.960446742392378e-06, -0.0005018643569201231, -0.02334863319993019], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.026463575661182404, -0.03585883229970932, -0.004957882221788168, -0.01756446436047554, -0.024330127984285355], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.4220273792743683, -0.2996784448623657, -0.009234101511538029], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.08475320041179657, -5.817244164063595e-05, -1.9788545614574105e-05, -0.014874034561216831], "finish_reason": "stop"}, {"text": " df[column_name].apply(reverse_matched_words)", "tokens": [" df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-1.8441742658615112, -0.011343037709593773, -0.006118851248174906, -2.586808113846928e-05, 0.0, -0.0003592322755139321, -0.0004596845537889749, -0.055292971432209015, -0.00016330339713022113, -0.03846673667430878, -1.0728830375228426e-06, -0.0001497156627010554, -4.768360213347478e-06, -1.3470558769768104e-05, -0.001644212519749999, -0.00264592282474041], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.003519057994708419, -1.764281842042692e-05, -8.583032467868179e-06, -0.7907904982566833], "finish_reason": "stop"}], "metrics": {"energy": 453.6569541282654, "energy_per_token": 6.671425796003903, "time": 10.8942175, "time_per_token": 0.16020908088235294}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.7080472707748413, -8.082063141046092e-05, -0.005719012580811977, -0.050839778035879135, -0.05111052840948105], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.8232674598693848, -0.010945047251880169], "finish_reason": "stop"}, {"text": " [matched_words.pop() if re.search(pattern, word) else word for word in words]", "tokens": [" [", "matched", "_", "words", ".", "pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "]", "\n"], "logprobs": [-1.023579478263855, -0.8981400728225708, -0.0015772057231515646, -0.004966659937053919, -0.005979506298899651, -0.0002637753786984831, -0.9970352649688721, -0.0012955614365637302, -0.00507151335477829, -1.3589766240329482e-05, -0.0003225283289793879, -4.5060096454108134e-05, -0.005621457938104868, -0.00011383838864276186, -0.004872472491115332, -0.00042167355422861874, -0.005717827472835779, -0.001831522211432457, -0.08765646815299988, -0.0005712069687433541, -0.0005277194431982934, -0.0011391110019758344, -0.006880045868456364, -0.001444249995984137], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0003331344632897526, -0.4697815179824829, -0.00730427261441946, -0.0003432638186495751, -0.05298994109034538, -0.018023991957306862, -1.1205610462639015e-05, -0.0005360596696846187, -8.5588610090781e-05, -0.005787994246929884, -0.0001287377526750788, -0.0039051712956279516, -0.0008267321973107755, -0.025778839364647865, -0.003611353924497962, -0.5504644513130188], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.8298261165618896, -7.664863369427621e-05, -5.328513361746445e-05, -7.354942499659956e-05, -0.001423299196176231, -0.002582074608653784, -4.768360213347478e-06, -6.198863957251888e-06, -0.0007198841194622219, -0.015239822678267956], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.022984985262155533, -0.03928646817803383, -0.006024771835654974, -0.015115363523364067, -0.022025376558303833], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.351469486951828, -0.31885817646980286, -0.007807216607034206], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.06854791194200516, -5.578839045483619e-05, -1.7046782886609435e-05, -0.012574437074363232], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.1771523654460907, -1.156323378381785e-05, -9.894321920000948e-06, -0.011373210698366165, -0.0023088008165359497, -2.5987286790041253e-05, 0.0, -0.00038223114097490907, -0.0011205353075638413, -0.05617476627230644, -0.00015901254664640874, -0.04137455299496651, -1.6689286894688848e-06, -9.881961887003854e-05, -5.960446742392378e-06, -1.7881233361549675e-05, -0.001141849672421813, -0.002315223217010498], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.003327073995023966, -1.6689160474925302e-05, -8.4638240878121e-06, -0.8384265303611755], "finish_reason": "stop"}], "metrics": {"energy": 568.6462163600921, "energy_per_token": 6.248859520440573, "time": 13.383296, "time_per_token": 0.14706918681318681}}
{"outputs": [{"text": " re.findall(r'\\b\\w+\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.9226006865501404, -0.0001311216183239594, -0.9966232180595398, -0.0013437775196507573, -0.01151416264474392, -0.23115845024585724, -0.05468142405152321, -0.7231475114822388, -0.05889057368040085, -0.4493146538734436, -0.003996007144451141, -5.245195097813848e-06, -0.004021177999675274, -2.9205850296420977e-05, -0.002975800074636936, -0.011251216754317284, -0.15153664350509644], "finish_reason": "stop"}, {"text": " [word for word in words if re.match(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "match", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.5754650235176086, -0.43581143021583557, -0.12086152285337448, -0.0005791893927380443, -0.0001674750237725675, -0.01269297394901514, -0.007773742079734802, -0.02440784126520157, -0.00018904806347563863, -1.6075447797775269, -0.0018354489002376795, -0.009326698258519173, -0.001666824915446341, -0.0010208638850599527, -0.07969264686107635, -0.004670544061809778], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8124927282333374, -0.002689199522137642], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word for word in words", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.00028868322260677814, -0.9586825966835022, -0.07876690477132797, -0.0149629395455122, -8.702239938429557e-06, -0.0008386432309634984, -9.60780744208023e-05, -0.01261257752776146, -0.00022635281493421644, -0.0044991932809352875, -0.0008380476501770318, -0.020591532811522484, -0.002148583298549056, -0.6922186017036438, -0.00837185513228178, -0.0017749997787177563, -0.00807236973196268, -0.06798195838928223], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.8141399621963501, -7.402622577501461e-05, -5.3881147323409095e-05, -7.4741430580616e-05, -0.0015831567579880357, -0.00390671519562602, -4.768360213347478e-06, -7.152531907195225e-06, -0.0006344689172692597, -0.01295201014727354], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.024886328727006912, -0.033193252980709076, -0.00592061085626483, -0.013642173260450363, -0.02772277221083641], "finish_reason": "stop"}, {"text": " pattern != \"\":", "tokens": [" pattern", " ", "!", "=", " \"", "\":", "\n"], "logprobs": [-0.38266921043395996, -2.1764469146728516, -5.722029527532868e-06, -5.090107151772827e-05, -0.2598056495189667, -0.009086920879781246, -0.0059007019735872746], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.07268824428319931, -7.1403817855753e-05, -1.966933996300213e-05, -0.014258881099522114], "finish_reason": "stop"}, {"text": " df[column_name].apply(reverse_matched_words)", "tokens": [" df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-1.9594080448150635, -0.013381198048591614, -0.004358198493719101, -2.276871418871451e-05, -3.576278118089249e-07, -0.0003798478574026376, -0.0005060345865786076, -0.06780040264129639, -0.00018010901112575084, -0.05513797700405121, -1.7881377516459906e-06, -0.0001705739414319396, -6.198863957251888e-06, -1.645074735279195e-05, -0.0017629809444770217, -0.0021900972351431847], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.003364143194630742, -2.0265373677830212e-05, -7.629365427419543e-06, -0.8021881580352783], "finish_reason": "stop"}], "metrics": {"energy": 585.6552598991394, "energy_per_token": 5.915709695950904, "time": 14.249199, "time_per_token": 0.14393130303030305}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.7080472707748413, -8.082063141046092e-05, -0.005719012580811977, -0.050839778035879135, -0.05111052840948105], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.8232674598693848, -0.010945047251880169], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0399597883224487, -0.0038149214815348387], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word for word in words", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.0003331344632897526, -1.0058456659317017, -0.07620105147361755, -0.017146209254860878, -8.583032467868179e-06, -0.0009573881980031729, -8.582700684200972e-05, -0.00964304432272911, -0.000188332938705571, -0.004617623053491116, -0.0007677706307731569, -0.016512636095285416, -0.0025634069461375475, -0.5840170383453369, -0.005627384874969721, -0.0012675831094384193, -0.008879343047738075, -0.07515674829483032], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5474109649658203, -0.0007543102256022394, -6.437094270950183e-05, -6.651657167822123e-05, -0.0013393727131187916, -0.00420424435287714, -6.198863957251888e-06, -5.006777428206988e-06, -0.0004303721070755273, -0.020596904680132866], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.02298486977815628, -0.03639383241534233, -0.005661168601363897, -0.013805733062326908, -0.02470294013619423], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.3845178484916687, -0.27559536695480347, -0.01105234120041132], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-2.500380754470825, -0.0873999148607254], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.19245876371860504, -1.3232143828645349e-05, -1.2636104656849056e-05, -0.012403728440403938, -0.0019095772877335548, -2.6940935640595853e-05, 0.0, -0.00036137725692242384, -0.0012699642684310675, -0.07241862267255783, -0.00015233787416946143, -0.03216109052300453, -1.7881377516459906e-06, -0.00011431517486926168, -5.8412379075889476e-06, -1.3351351299206726e-05, -0.0013713965890929103, -0.0021870045457035303], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0034329311456531286, -2.2172682292875834e-05, -1.0371154530730564e-05, -0.8625518679618835], "finish_reason": "stop"}], "metrics": {"energy": 469.7165505638122, "energy_per_token": 6.807486240055249, "time": 11.296288, "time_per_token": 0.16371431884057971}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.7080472707748413, -8.082063141046092e-05, -0.005719012580811977, -0.050839778035879135, -0.05111052840948105], "finish_reason": "stop"}, {"text": " re.findall(pattern, ' '.join(words))", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " '", " '", ".", "join", "(", "words", "))", "\n"], "logprobs": [-1.7362236976623535, -0.00010251473577227443, -0.006738794036209583, -0.015330690890550613, -0.0014718662714585662, -0.03176194801926613, -0.003714805468916893, -1.7957829236984253, -0.0010675451485440135, -0.003925714176148176, -7.068861305015162e-05, -0.0031923307105898857, -0.008207167498767376, -0.3191247284412384, -0.026647454127669334], "finish_reason": "stop"}, {"text": " [word if not re.search(pattern, word) else matched_words.pop()", "tokens": [" [", "word", " if", " not", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " matched", "_", "words", ".", "pop", "()", "\n"], "logprobs": [-1.023579478263855, -0.8111993074417114, -0.0295917596668005, -1.3289353847503662, -0.0029683122411370277, -1.8000440832111053e-05, -0.0018369958270341158, -8.105902816168964e-05, -0.0013315153773874044, -0.00012587709352374077, -0.0019376566633582115, -0.00016056202002801, -0.013167450204491615, -0.009054788388311863, -0.0003672163875307888, -0.0003703146940097213, -0.013281211256980896, -0.00010048838157672435, -1.1418731212615967, -1.5770825147628784], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0003331344632897526, -0.4697815179824829, -0.00730427261441946, -0.0003432638186495751, -0.05298994109034538, -0.018023991957306862, -1.1205610462639015e-05, -0.0005360596696846187, -8.5588610090781e-05, -0.005787994246929884, -0.0001287377526750788, -0.0039051712956279516, -0.0008267321973107755, -0.025778839364647865, -0.003611353924497962, -0.5504644513130188], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5811116695404053, -0.000671042304020375, -6.818538531661034e-05, -5.578839045483619e-05, -0.0014785320963710546, -0.005970500409603119, -6.198863957251888e-06, -5.960446742392378e-06, -0.0005557184922508895, -0.022001003846526146], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.026260966435074806, -0.03458278253674507, -0.004976979922503233, -0.015232660807669163, -0.027518678456544876], "finish_reason": "stop"}, {"text": " pattern == '':", "tokens": [" pattern", " ==", " '", "':", "\n"], "logprobs": [-0.35216957330703735, -2.3395447731018066, -1.479217529296875, -0.018767407163977623, -0.011608551256358624], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.07165856659412384, -6.770858453819528e-05, -2.276871418871451e-05, -0.014070829376578331], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.2075560986995697, -1.2040065485052764e-05, -8.34461570775602e-06, -0.013415660709142685, -0.0021123019978404045, -2.7894584491150454e-05, 0.0, -0.0002901133266277611, -0.0011175584513694048, -0.05561675876379013, -0.0001776060671545565, -0.03360346704721451, -1.5497195136049413e-06, -9.047575440490618e-05, -5.8412379075889476e-06, -1.156323378381785e-05, -0.0013499680208042264, -0.0018901830771937966], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0034474246203899384, -1.847726889536716e-05, -7.152531907195225e-06, -0.7793164849281311], "finish_reason": "stop"}], "metrics": {"energy": 637.7658943443298, "energy_per_token": 6.252606807297351, "time": 15.067215, "time_per_token": 0.14771779411764704}}
{"outputs": [{"text": " re.split(r'\\s+', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ")", "\n"], "logprobs": [-0.9226006865501404, -0.0001311216183239594, -0.5408775210380554, -0.04193130508065224, -0.0028525397647172213, -0.08106712251901627, -0.040299855172634125, -0.3894439935684204, -4.31528314948082e-05, -0.004202819894999266, -0.03463679179549217, -0.1406210958957672], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-1.7689197063446045, -8.701899787411094e-05, -0.0044141001999378204, -0.01863390952348709, -0.0012685356196016073, -0.03825220465660095, -0.004474983550608158, -0.1496085822582245, -0.23112836480140686, -0.028683997690677643], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.9121647477149963, -0.002825318370014429], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word for word in words", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.0006223172531463206, -1.057442307472229, -0.07002981752157211, -0.017671752721071243, -8.821448318485636e-06, -0.0010338444262742996, -8.546940807718784e-05, -0.008578828535974026, -0.00015722469834145159, -0.00497543765231967, -0.0006793813081458211, -0.01960519328713417, -0.0022157898638397455, -0.6838893890380859, -0.008572564460337162, -0.001632549217902124, -0.008262026123702526, -0.07026009261608124], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5520853996276855, -0.00076908094342798, -7.271502545336261e-05, -7.319182623177767e-05, -0.0014231802197173238, -0.004238194786012173, -5.602820692729438e-06, -6.198863957251888e-06, -0.00040141629870049655, -0.02183143049478531], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.01999741420149803, -0.03069443628191948, -0.006746964529156685, -0.01721663400530815, -0.02693481370806694], "finish_reason": "stop"}, {"text": " not new_df[column_name].empty:", "tokens": [" not", " new", "_", "df", "[", "column", "_", "name", "]", ".", "empty", ":", "\n"], "logprobs": [-1.383263111114502, -3.1178014278411865, -4.8993817472364753e-05, -5.125868119648658e-05, -0.401400089263916, -0.007788882590830326, -7.486063259420916e-05, -7.152531907195225e-06, -0.004766174592077732, -0.0007908792467787862, -0.4745419919490814, -0.7108684778213501, -0.02263239212334156], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.07256896048784256, -5.94836674281396e-05, -1.6569954823353328e-05, -0.013292034156620502], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.23440036177635193, -1.4185804502631072e-05, -1.0490362910786644e-05, -0.01322921458631754, -0.0030307096894830465, -2.8013790142722428e-05, 0.0, -0.0003524397616274655, -0.0010933857411146164, -0.05931970477104187, -0.00014578233822248876, -0.03320201858878136, -1.4305104514278355e-06, -9.560128091834486e-05, -5.364403477869928e-06, -1.1205610462639015e-05, -0.0014154425589367747, -0.0017667888896539807], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0048939441330730915, -1.847726889536716e-05, -1.1086402082582936e-05, -0.7328783869743347], "finish_reason": "stop"}], "metrics": {"energy": 620.0404165840147, "energy_per_token": 6.45875433941682, "time": 14.675024, "time_per_token": 0.15286483333333334}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.7080472707748413, -8.082063141046092e-05, -0.005719012580811977, -0.050839778035879135, -0.05111052840948105], "finish_reason": "stop"}, {"text": " [word for word in words if re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.554628849029541, -0.37813717126846313, -0.15326610207557678, -0.0005683475756086409, -0.00015793983766343445, -0.013075090944766998, -0.005670651327818632, -0.023222152143716812, -0.00017295771976932883, -0.2418544441461563, -0.002486948622390628, -0.006490341853350401, -0.0013086573453620076, -0.0013154434273019433, -0.10865114629268646, -0.003386003663763404], "finish_reason": "stop"}, {"text": " [word if re.search(pattern, word) else word for word in words]", "tokens": [" [", "word", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "]", "\n"], "logprobs": [-1.2142043113708496, -0.9125563502311707, -0.03617655485868454, -0.4805542230606079, -1.0132738680113107e-05, -0.0014261561445891857, -0.00016199229867197573, -0.004940919578075409, -0.00010430268594063818, -0.0014073477359488606, -0.0004413345886860043, -0.25345751643180847, -0.14094491302967072, -0.07080598920583725, -0.0007491880678571761, -0.0002723561483435333, -0.01139925792813301, -0.07774137705564499, -0.005411381367594004], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.00032419670606032014, -0.4630315899848938, -0.007730921730399132, -0.00040749352774582803, -0.05397960543632507, -0.015702765434980392, -1.1444026313256472e-05, -0.0007286992622539401, -7.986703712958843e-05, -0.008718402124941349, -0.0001248043408850208, -0.004151061177253723, -0.0007521660882048309, -0.029240794479846954, -0.004130760673433542, -0.40508055686950684], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.7052780389785767, -7.235741941258311e-05, -5.4596363042946905e-05, -8.999896090244874e-05, -0.0016073177102953196, -0.0032480601221323013, -4.410734163684538e-06, -7.271740287251305e-06, -0.0007178590167313814, -0.015183113515377045], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.026447901502251625, -0.03129737079143524, -0.006301059853285551, -0.013216509483754635, -0.02233470045030117], "finish_reason": "stop"}, {"text": " not pattern:", "tokens": [" not", " pattern", ":", "\n"], "logprobs": [-1.431849718093872, -0.2180631309747696, -0.06452270597219467, -0.01958099566400051], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.08173108100891113, -6.711257447022945e-05, -2.276871418871451e-05, -0.013562087900936604], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.19261284172534943, -1.2993727978027891e-05, -1.0371154530730564e-05, -0.01245647482573986, -0.0019694233778864145, -2.276871418871451e-05, 0.0, -0.00030501006403937936, -0.0011815002653747797, -0.08326401561498642, -0.0001616347290109843, -0.027518562972545624, -1.9073468138230965e-06, -9.667406266089529e-05, -6.318072337307967e-06, -1.3232143828645349e-05, -0.0014230611268430948, -0.001993931829929352], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.003203381784260273, -1.7165990357170813e-05, -7.986990567587782e-06, -0.7929633259773254], "finish_reason": "stop"}], "metrics": {"energy": 541.6122113952637, "energy_per_token": 5.362497142527363, "time": 12.948598, "time_per_token": 0.1282039405940594}}
{"outputs": [{"text": " re.split(r'\\s+', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ")", "\n"], "logprobs": [-0.8634771108627319, -0.00011455356434453279, -0.6713195443153381, -0.05047975853085518, -0.004165307153016329, -0.08751285076141357, -0.059852857142686844, -0.3587203323841095, -3.755022044060752e-05, -0.0040545412339270115, -0.029969440773129463, -0.12424708157777786], "finish_reason": "stop"}, {"text": " [word for word in words if re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.5612651109695435, -0.407529354095459, -0.08597811311483383, -0.000485183292767033, -0.00015960850578267127, -0.015736445784568787, -0.004946138709783554, -0.01590142212808132, -0.00022373080719262362, -0.22400997579097748, -0.0023730231914669275, -0.005874392576515675, -0.0013067525578662753, -0.0009640575153753161, -0.09332600235939026, -0.003043664153665304], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8336473107337952, -0.003163692308589816], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word for word in words", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.00033885458833537996, -0.4705680012702942, -0.0056328377686440945, -0.0004159538948442787, -0.07170473039150238, -0.01787458546459675, -1.1920858014491387e-05, -0.000514017534442246, -8.928377064876258e-05, -0.008705994114279747, -0.00013684290752280504, -0.0037531666457653046, -0.0006275591440498829, -0.03747905045747757, -0.003986864350736141, -1.0097649097442627, -0.013581727631390095, -0.002585760550573468, -0.011556939221918583, -0.08763943612575531], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5200970768928528, -0.0006337541271932423, -7.247662142617628e-05, -5.900685573578812e-05, -0.0016352864913642406, -0.0033358661457896233, -4.529942543740617e-06, -5.364403477869928e-06, -0.0005267662927508354, -0.02049238234758377], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.022150494158267975, -0.0397266149520874, -0.005292452406138182, -0.013272624462842941, -0.02596656046807766], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.40045422315597534, -0.27545881271362305, -0.008854294195771217], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.07890880852937698, -5.6622808187967166e-05, -1.6689160474925302e-05, -0.012700977735221386], "finish_reason": "stop"}, {"text": " df[column_name].apply(reverse_matched_words)", "tokens": [" df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-1.717907428741455, -0.009417160414159298, -0.0057653565891087055, -2.539125671319198e-05, 0.0, -0.00034814971149899065, -0.0005025792634114623, -0.06307995319366455, -0.0001823735801735893, -0.056823015213012695, -1.311301275563892e-06, -0.0001245659514097497, -4.887569048150908e-06, -1.7404405298293568e-05, -0.0016838433220982552, -0.002275855513289571], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.0034392275847494602, -1.823885577323381e-05, -9.298280929215252e-06, -0.9338480234146118, -5.125986263010418e-06, -2.145764938177308e-06, -1.311301275563892e-06, -8.583032467868179e-06, -1.8359407186508179, -0.003981758840382099], "finish_reason": "stop"}], "metrics": {"energy": 544.3500362815857, "energy_per_token": 5.554592206954957, "time": 13.1931505, "time_per_token": 0.13462398469387754}}
{"outputs": [{"text": " re.split(r'\\s+', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ")", "\n"], "logprobs": [-0.9226006865501404, -0.0001311216183239594, -0.5408775210380554, -0.04193130508065224, -0.0028525397647172213, -0.08106712251901627, -0.040299855172634125, -0.3894439935684204, -4.31528314948082e-05, -0.004202819894999266, -0.03463679179549217, -0.1406210958957672], "finish_reason": "stop"}, {"text": " [word for word in words if re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.5754650235176086, -0.43581143021583557, -0.12086152285337448, -0.0005791893927380443, -0.0001674750237725675, -0.01269297394901514, -0.007773742079734802, -0.02440784126520157, -0.00018904806347563863, -0.25896915793418884, -0.0021089711226522923, -0.005952606908977032, -0.001100649475120008, -0.0012742503313347697, -0.13205428421497345, -0.0033835088834166527], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8770642876625061, -0.002845407696440816], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word for word in words", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.00035291642416268587, -0.5363190770149231, -0.00801135040819645, -0.0003618539194576442, -0.052751366049051285, -0.015401477925479412, -1.0847986231965479e-05, -0.0006384003208950162, -0.00010382589971413836, -0.007053474895656109, -0.00012599628826137632, -0.004917787853628397, -0.0005528590409085155, -0.02161831595003605, -0.0038902093656361103, -0.8188414573669434, -0.01645752415060997, -0.002371596172451973, -0.010351893492043018, -0.07740028947591782], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5338244438171387, -0.0007538337376900017, -9.846202738117427e-05, -8.237022848334163e-05, -0.0013667537132278085, -0.004344430286437273, -5.483612312673358e-06, -5.722029527532868e-06, -0.0005378468777053058, -0.021480415016412735], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.03340702876448631, -0.03979134187102318, -0.005141132976859808, -0.014484496787190437, -0.02451591193675995], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.3728983402252197, -0.2835492193698883, -0.008492308668792248], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.08484125137329102, -5.6622808187967166e-05, -2.5033637939486653e-05, -0.01341930776834488], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.17149673402309418, -1.1324817933200393e-05, -7.629365427419543e-06, -0.014183547347784042, -0.0022986913099884987, -3.0874729418428615e-05, 0.0, -0.00034505134681239724, -0.0011917401570826769, -0.08501459658145905, -0.0001685477327555418, -0.0351230688393116, -1.7881377516459906e-06, -0.00012587709352374077, -4.410734163684538e-06, -1.1324817933200393e-05, -0.0013379440642893314, -0.0021062351297587156], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0038438972551375628, -1.8596476365928538e-05, -8.106198947643861e-06, -0.8515507578849792], "finish_reason": "stop"}], "metrics": {"energy": 481.44758505249, "energy_per_token": 5.121782819707341, "time": 12.156713, "time_per_token": 0.12932673404255318}}
{"outputs": [{"text": " re.split(r'\\s+', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ")", "\n"], "logprobs": [-0.9034771919250488, -0.0001784403866622597, -0.4929918944835663, -0.03875473514199257, -0.00321122445166111, -0.0943046510219574, -0.04871632158756256, -0.39094898104667664, -3.8742269680369645e-05, -0.004492072854191065, -0.030045678839087486, -0.15549421310424805], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-1.6899832487106323, -0.00011467275908216834, -0.006688824389129877, -0.017445214092731476, -0.0012492479290813208, -0.033031217753887177, -0.004303480498492718, -0.15293540060520172, -0.2833349108695984, -0.03481917455792427], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.977551281452179, -0.0027438870165497065], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0003575639275368303, -0.5552329421043396, -0.008824871852993965, -0.0004287039046175778, -0.061965037137269974, -0.020896747708320618, -1.2636104656849056e-05, -0.0004935238393954933, -0.00010156115604331717, -0.008642885833978653, -0.00012289722508285195, -0.003959673922508955, -0.0005532164941541851, -0.024279633536934853, -0.004133253823965788, -0.49662840366363525], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5700526237487793, -0.0006772369961254299, -7.664863369427621e-05, -5.98412734689191e-05, -0.00141258561052382, -0.0046783750876784325, -5.245195097813848e-06, -5.602820692729438e-06, -0.0005374894244596362, -0.017381133511662483], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.026391824707388878, -0.035448506474494934, -0.004729631822556257, -0.009927423670887947, -0.02782665751874447], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.47138604521751404, -0.32193464040756226, -0.0074848453514277935], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0694662556052208, -4.7444173105759546e-05, -2.5033637939486653e-05, -0.015789367258548737], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.20404544472694397, -1.3351351299206726e-05, -1.2159273865108844e-05, -0.012856806628406048, -0.002805347554385662, -2.9444261599564925e-05, 0.0, -0.0003295593778602779, -0.0013763965107500553, -0.05676703900098801, -0.00016735584358684719, -0.03197129815816879, -1.6689286894688848e-06, -0.00010585224663373083, -5.602820692729438e-06, -1.2278481335670222e-05, -0.0013560395454987884, -0.0020068997982889414], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0032058770302683115, -1.4781842764932662e-05, -7.510157047363464e-06, -0.8631535172462463], "finish_reason": "stop"}], "metrics": {"energy": 548.4758797416686, "energy_per_token": 6.529474758829387, "time": 13.179284, "time_per_token": 0.15689623809523812}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.7080472707748413, -8.082063141046092e-05, -0.005719012580811977, -0.050839778035879135, -0.05111052840948105], "finish_reason": "stop"}, {"text": " re.findall(pattern, ' '.join(words), flags=re.IGNORECASE)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " '", " '", ".", "join", "(", "words", ")", ",", " flags", "=", "re", ".", "IGN", "ORE", "C", "ASE", ")", "\n"], "logprobs": [-1.7362236976623535, -0.00010251473577227443, -0.006738794036209583, -0.015330690890550613, -0.0014718662714585662, -0.03176194801926613, -0.003714805468916893, -1.7957829236984253, -0.0010675451485440135, -0.003925714176148176, -7.068861305015162e-05, -0.0031923307105898857, -0.008207167498767376, -1.2981362342834473, -0.01822710409760475, -1.7776812314987183, -0.003963117022067308, -0.002990775741636753, -5.602820692729438e-06, -0.02270418033003807, -9.536738616588991e-07, -2.3841830625315197e-06, -3.933898824470816e-06, -0.01813860610127449, -0.011708233505487442], "finish_reason": "stop"}, {"text": " [matched_words.pop(0) if re.search(pattern, word) else word for word in words]", "tokens": [" [", "matched", "_", "words", ".", "pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "]", "\n"], "logprobs": [-1.023579478263855, -0.8981400728225708, -0.0015772057231515646, -0.004966659937053919, -0.005979506298899651, -0.0002637753786984831, -0.46857383847236633, -0.001453534816391766, -0.003883322235196829, -0.005378656554967165, -0.008582728914916515, -1.4066597032069694e-05, -0.00035482310340739787, -6.961580220377073e-05, -0.0073643880896270275, -8.11782301752828e-05, -0.0040800669230520725, -0.00043811736395582557, -0.01060221903026104, -0.003608265658840537, -0.1178794577717781, -0.0010493254521861672, -0.0006392342620529234, -0.001158400671556592, -0.006586390547454357, -0.002816283842548728], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0003331344632897526, -0.4697815179824829, -0.00730427261441946, -0.0003432638186495751, -0.05298994109034538, -0.018023991957306862, -1.1205610462639015e-05, -0.0005360596696846187, -8.5588610090781e-05, -0.005787994246929884, -0.0001287377526750788, -0.0039051712956279516, -0.0008267321973107755, -0.025778839364647865, -0.003611353924497962, -0.5504644513130188], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5811116695404053, -0.000671042304020375, -6.818538531661034e-05, -5.578839045483619e-05, -0.0014785320963710546, -0.005970500409603119, -6.198863957251888e-06, -5.960446742392378e-06, -0.0005557184922508895, -0.022001003846526146], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.026260966435074806, -0.03458278253674507, -0.004976979922503233, -0.015232660807669163, -0.027518678456544876], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.35216957330703735, -0.2724251449108124, -0.008349275216460228], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-2.73250150680542, -0.0769558921456337], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.21144407987594604, -1.3232143828645349e-05, -1.3351351299206726e-05, -0.015417560003697872, -0.0018477048724889755, -2.8729025871143676e-05, 0.0, -0.0003516055876389146, -0.0012357940431684256, -0.06186632066965103, -0.00015352977789007127, -0.034911733120679855, -1.311301275563892e-06, -9.798523387871683e-05, -5.960446742392378e-06, -1.1801649634435307e-05, -0.001471032970584929, -0.001972516765818], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0032600611448287964, -1.7404405298293568e-05, -8.583032467868179e-06, -0.9312083721160889, -5.364403477869928e-06, -2.0265558760002023e-06, -1.1920922133867862e-06, -7.867782187531702e-06, -0.14564822614192963], "finish_reason": "stop"}], "metrics": {"energy": 646.8814331111909, "energy_per_token": 5.435978429505806, "time": 15.23152, "time_per_token": 0.1279959663865546}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.6729435920715332, -6.19869097135961e-05, -0.004142276477068663, -0.052369408309459686, -0.05005928874015808], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-1.6522753238677979, -0.0001264730526600033, -0.005301227327436209, -0.014124545268714428, -0.0013461584458127618, -0.030773045495152473, -0.003460373729467392, -0.14924392104148865, -0.28141430020332336, -0.028069864958524704], "finish_reason": "stop"}, {"text": " reversed(words) if pattern else words", "tokens": [" reversed", "(", "words", ")", " if", " pattern", " else", " words", "\n"], "logprobs": [-3.6795670986175537, -0.20687316358089447, -0.3240104913711548, -0.046715088188648224, -0.10598382353782654, -1.845512866973877, -0.3551555871963501, -0.072288878262043, -0.06855659931898117], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.00023862851958256215, -0.5491956472396851, -0.006296677049249411, -0.00040165462996810675, -0.07349015772342682, -0.013411661610007286, -9.65590606938349e-06, -0.0005204515182413161, -7.807903602952138e-05, -0.008113756775856018, -0.0001234931987710297, -0.004548916593194008, -0.0007782529573887587, -0.026234839111566544, -0.003658151952549815, -0.5754011273384094], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5633747577667236, -0.0005840741214342415, -6.878139538457617e-05, -6.246371776796877e-05, -0.001555900671519339, -0.004843052010983229, -5.364403477869928e-06, -4.6491513785440475e-06, -0.0006330393371172249, -0.021963803097605705], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.023314744234085083, -0.03024948760867119, -0.00656365230679512, -0.013730482198297977, -0.024531381204724312], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.3495226204395294, -0.2676091492176056, -0.010856255888938904], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.08141718059778214, -5.817244164063595e-05, -2.1934269170742482e-05, -0.012182118371129036], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.22766564786434174, -1.2636104656849056e-05, -1.1086402082582936e-05, -0.013199450448155403, -0.001984652131795883, -2.1457441107486375e-05, 0.0, -0.00039545822073705494, -0.0014938872773200274, -0.05688630789518356, -0.00015686711412854493, -0.03624450042843819, -1.5497195136049413e-06, -0.00011777184408856556, -5.960446742392378e-06, -1.2755313036905136e-05, -0.0013463966315612197, -0.001953361788764596], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0041326601058244705, -1.9430925021879375e-05, -9.65590606938349e-06, -0.7804253101348877], "finish_reason": "stop"}], "metrics": {"energy": 512.6205117206573, "energy_per_token": 6.102625139531635, "time": 12.153232, "time_per_token": 0.14468133333333333}}
{"outputs": [{"text": " re.findall(r'\\S+', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "S", "+'", ",", " text", ")", "\n"], "logprobs": [-0.8559304475784302, -0.00015960850578267127, -1.0159437656402588, -0.000849482137709856, -0.009371575899422169, -0.22963280975818634, -0.0720793753862381, -0.8550174832344055, -0.037187352776527405, -3.838465272565372e-05, -0.0037523354403674603, -0.004876031540334225, -0.2280566245317459], "finish_reason": "stop"}, {"text": " [word for word in words if re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.6365420818328857, -0.3887806832790375, -0.17094828188419342, -0.0005746620590798557, -0.0001528146385680884, -0.009980772621929646, -0.005341069307178259, -0.025619549676775932, -0.00016544880054425448, -0.21681059896945953, -0.0020172500517219305, -0.007442012894898653, -0.0013297295663505793, -0.0010253892978653312, -0.09611205011606216, -0.003850903594866395], "finish_reason": "stop"}, {"text": " matched_words + [word for word in words if not re.search(pattern, word)]", "tokens": [" matched", "_", "words", " +", " [", "word", " for", " word", " in", " words", " if", " not", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-2.03302001953125, -0.00034957972820848227, -0.0001510267611593008, -0.021947477012872696, -0.01110763382166624, -0.006108542904257774, -0.0008971241768449545, -0.0002361257211305201, -1.4066597032069694e-05, -0.00021336186910048127, -0.0043597412295639515, -0.41589120030403137, -0.009482227265834808, -1.823885577323381e-05, -0.0021045696921646595, -0.00010501786891836673, -0.0008515069494023919, -8.666139910928905e-05, -0.004321878310292959, -0.0022075825836509466, -0.007142723072320223], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word for word in words", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.0002703301142901182, -0.7744557857513428, -0.06131529062986374, -0.016133589670062065, -8.821448318485636e-06, -0.0007606235449202359, -9.953480184776708e-05, -0.010223403573036194, -0.00018904806347563863, -0.005668517667800188, -0.0007581220706924796, -0.016667403280735016, -0.002195925684645772, -0.6214540004730225, -0.007219417952001095, -0.0015988674713298678, -0.008497628383338451, -0.07328600436449051], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.6765114665031433, -0.0006052807439118624, -6.758938252460212e-05, -6.139089964563027e-05, -0.0014402027009055018, -0.004476407542824745, -5.006777428206988e-06, -6.437280717364047e-06, -0.0005152089870534837, -0.01789660006761551], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.022223830223083496, -0.038557469844818115, -0.006941134110093117, -0.017628533765673637, -0.023797480389475822], "finish_reason": "stop"}, {"text": " pattern == \"\":", "tokens": [" pattern", " ==", " \"", "\":", "\n"], "logprobs": [-0.4044612646102905, -2.1034624576568604, -0.34130460023880005, -0.01957818865776062, -0.011915107257664204], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.062013328075408936, -4.23184028477408e-05, -1.8000440832111053e-05, -0.013720016926527023], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.1991734802722931, -1.156323378381785e-05, -1.2636104656849056e-05, -0.011318403296172619, -0.0018848287872970104, -2.95634672511369e-05, 0.0, -0.0004065402317792177, -0.0014735327567905188, -0.06343546509742737, -0.00014065706636756659, -0.03038768842816353, -1.4305104514278355e-06, -0.00012766500003635883, -5.245195097813848e-06, -1.5258672647178173e-05, -0.0015238827327266335, -0.0020061859395354986], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0032573281787335873, -1.9073304429184645e-05, -1.0847986231965479e-05, -0.9823746085166931, -6.9141146923357155e-06, -2.145764938177308e-06, -1.6689286894688848e-06, -7.510157047363464e-06, -0.1690072864294052], "finish_reason": "stop"}], "metrics": {"energy": 618.8624496650694, "energy_per_token": 5.200524787101424, "time": 15.052205, "time_per_token": 0.12648911764705884}}
{"outputs": [{"text": " re.split(r'\\s+', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ")", "\n"], "logprobs": [-0.8661253452301025, -0.0001389883691444993, -0.49088796973228455, -0.048984695225954056, -0.0027214179281145334, -0.09052497893571854, -0.057160720229148865, -0.33231109380722046, -4.792098479811102e-05, -0.00534320343285799, -0.03253746032714844, -0.1366494596004486], "finish_reason": "stop"}, {"text": " [word for word in words if re.match(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "match", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.5070225596427917, -0.38858380913734436, -0.16650889813899994, -0.0006358985556289554, -0.00015722469834145159, -0.011513101868331432, -0.005315694026648998, -0.024392951279878616, -0.0001971527235582471, -1.5975946187973022, -0.001636119675822556, -0.012732875533401966, -0.001899820752441883, -0.0009858515113592148, -0.10417228192090988, -0.0035864098463207483], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8721513748168945, -0.0031350532080978155], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0003813969960901886, -0.8932157754898071, -0.06639383733272552, -0.017779966816306114, -9.179073458653875e-06, -0.0011526852613314986, -8.189342770492658e-05, -0.012355336919426918, -0.00018809456378221512, -0.004655119031667709, -0.0006252956227399409, -0.022910306230187416, -0.002310109091922641, -0.6302530765533447], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.817168653011322, -7.652943895664066e-05, -5.245071224635467e-05, -5.543078441405669e-05, -0.0011759040644392371, -0.0031562058720737696, -4.0531076592742465e-06, -7.152531907195225e-06, -0.0005342725198715925, -0.014046967029571533], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.022017912939190865, -0.03155486658215523, -0.006191122345626354, -0.012533704750239849, -0.023457400500774384], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.34194985032081604, -0.30041787028312683, -0.008664277382194996], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.07325409352779388, -6.592056161025539e-05, -2.2053474822314456e-05, -0.015224793925881386], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.2591968774795532, -1.4424220353248529e-05, -1.3112935448589269e-05, -0.012305764481425285, -0.002424874110147357, -2.539125671319198e-05, 0.0, -0.00027724236133508384, -0.001057542278431356, -0.06487077474594116, -0.0001629458274692297, -0.02382855862379074, -1.9073468138230965e-06, -9.357491217087954e-05, -4.6491513785440475e-06, -1.3351351299206726e-05, -0.0011456600623205304, -0.0021381154656410217], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.00301692308858037, -1.7762025890988298e-05, -1.0013530300057027e-05, -0.9386577010154724, -6.556489552167477e-06, -1.311301275563892e-06, -2.145764938177308e-06, -9.894321920000948e-06, -0.16728298366069794], "finish_reason": "stop"}], "metrics": {"energy": 571.8268298873904, "energy_per_token": 6.148675590186994, "time": 13.419731, "time_per_token": 0.14429818279569892}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.7080472707748413, -8.082063141046092e-05, -0.005719012580811977, -0.050839778035879135, -0.05111052840948105], "finish_reason": "stop"}, {"text": " [word for word in words if re.match(pattern, word) is not None]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "match", "(", "pattern", ",", " word", ")", " is", " not", " None", "]", "\n"], "logprobs": [-0.554628849029541, -0.37813717126846313, -0.15326610207557678, -0.0005683475756086409, -0.00015793983766343445, -0.013075090944766998, -0.005670651327818632, -0.023222152143716812, -0.00017295771976932883, -1.6634318828582764, -0.0015643513761460781, -0.009140551090240479, -0.0018312842585146427, -0.0012380562257021666, -3.080744504928589, -0.05216338112950325, -0.0018785225693136454, -8.356221951544285e-05, -0.003877028590068221, -0.004168037325143814], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.9523926377296448, -0.00279845274053514], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0003097769513260573, -0.9611375331878662, -0.08225934207439423, -0.01592101715505123, -8.34461570775602e-06, -0.0007038023322820663, -8.165503095369786e-05, -0.011873170733451843, -0.00019333878299221396, -0.005046012811362743, -0.0006324436399154365, -0.016704214736819267, -0.0030254803132265806, -0.7646514773368835], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5391870737075806, -0.0006410212954506278, -7.343022298300639e-05, -5.686121585313231e-05, -0.0015999386087059975, -0.0047404286451637745, -6.556489552167477e-06, -6.556489552167477e-06, -0.0005726366653107107, -0.025734923779964447], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.022329222410917282, -0.027960091829299927, -0.0052949427627027035, -0.016238098964095116, -0.0277685709297657], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.3910517692565918, -0.30217698216438293, -0.011373328045010567], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.10040941089391708, -6.115249561844394e-05, -2.1576648578047752e-05, -0.014171323738992214], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.1894761174917221, -1.3589766240329482e-05, -8.4638240878121e-06, -0.0133719053119421, -0.002316412515938282, -2.706014311115723e-05, 0.0, -0.0003817544784396887, -0.0010356307029724121, -0.07007549703121185, -0.00015829740732442588, -0.03677194193005562, -1.5497195136049413e-06, -9.572047565598041e-05, -5.125986263010418e-06, -1.3351351299206726e-05, -0.0012385324807837605, -0.001913860673084855], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.003806608496233821, -1.6331539882230572e-05, -7.986990567587782e-06, -0.8102952837944031, -5.483612312673358e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -9.775113539944869e-06, -0.18050678074359894], "finish_reason": "stop"}], "metrics": {"energy": 536.5360293827057, "energy_per_token": 5.961511437585619, "time": 12.546464, "time_per_token": 0.13940515555555555}}
{"outputs": [{"text": " re.split(r'\\s+', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ")", "\n"], "logprobs": [-0.9226006865501404, -0.0001311216183239594, -0.5408775210380554, -0.04193130508065224, -0.0028525397647172213, -0.08106712251901627, -0.040299855172634125, -0.3894439935684204, -4.31528314948082e-05, -0.004202819894999266, -0.03463679179549217, -0.1406210958957672], "finish_reason": "stop"}, {"text": " [word[::-1] if re.search(pattern, word) else word for word in words]", "tokens": [" [", "word", "[", "::", "-", "1", "]", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "]", "\n"], "logprobs": [-0.5754650235176086, -0.43581143021583557, -2.251007556915283, -0.016005605459213257, -0.00027843413408845663, -4.9232225137529895e-05, -0.0003601856005843729, -0.43348178267478943, -0.014817304909229279, -8.797258487902582e-05, -0.3678100109100342, -0.0033598660957068205, -0.013545741327106953, -0.001320800743997097, -0.002453295513987541, -0.1442161202430725, -0.03198191896080971, -0.0033787565771490335, -0.06695511192083359, -0.0005324853118509054, -0.0002805792901199311, -0.0008578196284361184, -0.0020945770666003227, -0.0008923601126298308], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8931210041046143, -0.0028687058947980404], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word for word in words", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.00034731553751043975, -0.5950230360031128, -0.0076459851115942, -0.0004951919545419514, -0.05807551369071007, -0.01849582977592945, -1.1205610462639015e-05, -0.0006343498243950307, -0.00010156115604331717, -0.009600304067134857, -0.00011789103882620111, -0.004033882170915604, -0.0005656072753481567, -0.0284598246216774, -0.00407769251614809, -0.8870278000831604, -0.015072152018547058, -0.0022751418873667717, -0.00987041275948286, -0.0838642492890358], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.6039159893989563, -0.0008704449282959104, -5.185469490243122e-05, -7.950943836476654e-05, -0.0013427060330286622, -0.004188218619674444, -5.125986263010418e-06, -4.410734163684538e-06, -0.0007070187130011618, -0.01963009126484394], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.021231280639767647, -0.035619352012872696, -0.005402607377618551, -0.013250625692307949, -0.023147257044911385], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.38222551345825195, -0.2873575985431671, -0.008939482271671295], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.07072224467992783, -5.8410845667822286e-05, -2.109982233378105e-05, -0.013881683349609375], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.2726307511329651, -1.1444026313256472e-05, -8.22540732769994e-06, -0.012563135474920273, -0.001865553087554872, -2.706014311115723e-05, 0.0, -0.0003334919747430831, -0.001292823115363717, -0.07902877032756805, -0.0001554368354845792, -0.027219422161579132, -1.9073468138230965e-06, -0.00010907054820563644, -6.794906312279636e-06, -1.7404405298293568e-05, -0.0012849654303863645, -0.0018218838376924396], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df"], "logprobs": [-0.0031501452904194593, -1.597391747054644e-05, -9.894321920000948e-06], "finish_reason": "stop"}], "metrics": {"energy": 540.4385774269105, "energy_per_token": 5.350877004226836, "time": 13.164387, "time_per_token": 0.13034046534653465}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.6729435920715332, -6.19869097135961e-05, -0.004142276477068663, -0.052369408309459686, -0.05005928874015808], "finish_reason": "stop"}, {"text": " [re.match(pattern, word) is not None for word in words]", "tokens": [" [", "re", ".", "match", "(", "pattern", ",", " word", ")", " is", " not", " None", " for", " word", " in", " words", "]", "\n"], "logprobs": [-0.5601655840873718, -1.5017905235290527, -0.0002739054325502366, -1.3044482469558716, -0.0018231928115710616, -0.02681191824376583, -0.001258534612134099, -0.050004296004772186, -0.4898700714111328, -2.2129931449890137, -0.0014838885981589556, -4.970903682988137e-05, -0.005760733969509602, -9.333651541965082e-05, -0.0002351722796447575, -0.0014110381016507745, -0.0002540027489885688, -0.020298490300774574], "finish_reason": "stop"}, {"text": " [matched_words.pop() if re.search(pattern, word) else word for word in words]", "tokens": [" [", "matched", "_", "words", ".", "pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "]", "\n"], "logprobs": [-1.1347582340240479, -1.0046205520629883, -0.0011831672163680196, -0.004839729983359575, -0.005731220822781324, -0.00025042734341695905, -0.8071955442428589, -0.001671228208579123, -0.003351073944941163, -1.4424220353248529e-05, -0.000325388420606032, -4.207999518257566e-05, -0.005733117461204529, -8.356221951544285e-05, -0.0034925672225654125, -0.000459565402707085, -0.006464877165853977, -0.0019538376946002245, -0.08901950716972351, -0.000609927112236619, -0.0005287918029353023, -0.0014346078969538212, -0.007344271056354046, -0.0015505446353927255], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.000342191313393414, -0.677081286907196, -0.008729037828743458, -0.0003817544784396887, -0.054618217051029205, -0.01639162003993988, -1.0967194612021558e-05, -0.0005986090400256217, -8.487341256113723e-05, -0.006621918175369501, -0.00013493580627255142, -0.0037741875275969505, -0.000536655425094068, -0.02522406354546547, -0.003902558935806155, -0.48310211300849915], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.6128830313682556, -0.0006737822550348938, -6.925819616299123e-05, -6.0794889577664435e-05, -0.001589822000823915, -0.004228816833347082, -4.887569048150908e-06, -6.9141146923357155e-06, -0.0006076634745113552, -0.02268937975168228], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.026532534509897232, -0.03973199799656868, -0.005406401585787535, -0.01364558283239603, -0.022909140214323997], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.3794385492801666, -0.284719854593277, -0.010143752209842205], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.08423984795808792, -5.61460001335945e-05, -1.728519782773219e-05, -0.015366495586931705], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.19566762447357178, -1.0490362910786644e-05, -7.986990567587782e-06, -0.01573679782450199, -0.0025391501840204, -2.5152843591058627e-05, 0.0, -0.00043358939001336694, -0.0012035276740789413, -0.05735006928443909, -0.00016389934171456844, -0.0276157446205616, -2.145764938177308e-06, -0.00011574551899684593, -4.768360213347478e-06, -1.1205610462639015e-05, -0.0012350797187536955, -0.001949435449205339], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.004149874206632376, -1.5020257706055418e-05, -9.417489309271332e-06, -0.8698052167892456], "finish_reason": "stop"}], "metrics": {"energy": 578.1340753211979, "energy_per_token": 5.403122199263532, "time": 13.973771, "time_per_token": 0.1305959906542056}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.7080472707748413, -8.082063141046092e-05, -0.005719012580811977, -0.050839778035879135, -0.05111052840948105], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.8232674598693848, -0.010945047251880169], "finish_reason": "stop"}, {"text": " [(matched_words.pop() if re.search(pattern, word) else word) for word in words]", "tokens": [" [(", "matched", "_", "words", ".", "pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", ")", " for", " word", " in", " words", "]", "\n"], "logprobs": [-3.5990724563598633, -0.8260474801063538, -0.0006644901586696506, -0.004804851021617651, -0.004849339369684458, -0.0005766874528490007, -1.3498787879943848, -0.01372542604804039, -0.013169568032026291, -2.098061486321967e-05, -0.00043275527423247695, -6.139089964563027e-05, -0.004372559953480959, -0.0001289761275984347, -0.006489986553788185, -0.0008599635912105441, -0.015115011483430862, -0.0011959074763581157, -0.0007267932523973286, -0.05400027334690094, -0.0018141493201255798, -0.0009161804337054491, -0.0015230495482683182, -0.018690889701247215, -0.004061901941895485], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0003331344632897526, -0.4697815179824829, -0.00730427261441946, -0.0003432638186495751, -0.05298994109034538, -0.018023991957306862, -1.1205610462639015e-05, -0.0005360596696846187, -8.5588610090781e-05, -0.005787994246929884, -0.0001287377526750788, -0.0039051712956279516, -0.0008267321973107755, -0.025778839364647865, -0.003611353924497962, -0.5504644513130188], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5811116695404053, -0.000671042304020375, -6.818538531661034e-05, -5.578839045483619e-05, -0.0014785320963710546, -0.005970500409603119, -6.198863957251888e-06, -5.960446742392378e-06, -0.0005557184922508895, -0.022001003846526146], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.026260966435074806, -0.03458278253674507, -0.004976979922503233, -0.015232660807669163, -0.027518678456544876], "finish_reason": "stop"}, {"text": " not pattern:", "tokens": [" not", " pattern", ":", "\n"], "logprobs": [-1.5466656684875488, -0.1886560469865799, -0.06285552680492401, -0.019265204668045044], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.07165856659412384, -6.770858453819528e-05, -2.276871418871451e-05, -0.014070829376578331], "finish_reason": "stop"}, {"text": " df[column_name].apply(reverse_matched_words)", "tokens": [" df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-1.8541244268417358, -0.0117849325761199, -0.004313688259571791, -1.9907753085135482e-05, 0.0, -0.0003651905863080174, -0.0005123494775034487, -0.05784309655427933, -0.00024482590379193425, -0.047749392688274384, -1.5497195136049413e-06, -0.00017629499780014157, -5.364403477869928e-06, -1.6569954823353328e-05, -0.0015394752845168114, -0.0023437668569386005], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.00444792490452528, -2.2053474822314456e-05, -8.940656698541716e-06, -0.9444544315338135, -5.8412379075889476e-06, -2.264974000354414e-06, -1.5497195136049413e-06, -1.156323378381785e-05, -0.1679588258266449], "finish_reason": "stop"}], "metrics": {"energy": 578.8452508716581, "energy_per_token": 6.029638029913105, "time": 13.808803, "time_per_token": 0.14384169791666665}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.6485146880149841, -6.794698856538162e-05, -0.006610786076635122, -0.06443317979574203, -0.041008591651916504], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-1.6463462114334106, -0.00012265883560758084, -0.005596090108156204, -0.008140480145812035, -0.0015674459282308817, -0.028634069487452507, -0.004354875069111586, -0.15127220749855042, -0.2833937108516693, -0.029848307371139526], "finish_reason": "stop"}, {"text": " [word if not re.search(pattern, word) else matched_words.pop(0) for word in words]", "tokens": [" [", "word", " if", " not", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " matched", "_", "words", ".", "pop", "(", "0", ")", " for", " word", " in", " words", "]", "\n"], "logprobs": [-1.1203665733337402, -0.8405128717422485, -0.03309372812509537, -1.2995331287384033, -0.003947087563574314, -2.2172682292875834e-05, -0.002239697612822056, -7.021180499577895e-05, -0.0010057396721094847, -0.000105375460407231, -0.001518169417977333, -0.00018952481332235038, -0.013856523670256138, -0.009530521929264069, -0.00041166413575410843, -0.0004932855372317135, -0.012421507388353348, -9.452849917579442e-05, -0.41247856616973877, -0.0011311330599710345, -9.381330892210826e-05, -0.26867273449897766, -0.0007752750534564257, -0.0005461869877763093, -0.0005508335889317095, -0.006379951722919941, -0.0020086844451725483], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0003983181086368859, -0.45839476585388184, -0.006144324317574501, -0.00037174468161538243, -0.05415928363800049, -0.01673833094537258, -1.1205610462639015e-05, -0.0008087463211268187, -9.321732068201527e-05, -0.008986622095108032, -0.00010346830822527409, -0.0037510290276259184, -0.0006051616510376334, -0.026301724836230278, -0.0034212886821478605, -0.5188757181167603], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.8903353810310364, -8.40390202938579e-05, -7.164221460698172e-05, -6.0437283536884934e-05, -0.0010288427583873272, -0.00397641584277153, -3.814689989667386e-06, -9.536697689327411e-06, -0.0006528153317049146, -0.01520084310323], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.028619010001420975, -0.037997689098119736, -0.005615293979644775, -0.016091711819171906, -0.024123596027493477], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.41314709186553955, -0.3102481961250305, -0.008902501314878464], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-2.619396686553955, -0.09170760959386826], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.1578351855278015, -1.3232143828645349e-05, -1.3589766240329482e-05, -0.01628970541059971, -0.002185577293857932, -2.455681169521995e-05, 0.0, -0.00040391870425082743, -0.0013705631718039513, -0.058694541454315186, -0.0001787979417713359, -0.04488470032811165, -1.5497195136049413e-06, -8.022463589441031e-05, -5.006777428206988e-06, -8.583032467868179e-06, -0.001311752712354064, -0.0019200476817786694], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0035236908588558435, -1.9192511899746023e-05, -1.1444026313256472e-05, -0.7368513941764832], "finish_reason": "stop"}], "metrics": {"energy": 572.2000227127072, "energy_per_token": 5.722000227127072, "time": 13.629183, "time_per_token": 0.13629183}}
{"outputs": [{"text": " re.split(r'\\s+', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ")", "\n"], "logprobs": [-0.9034771919250488, -0.0001784403866622597, -0.4929918944835663, -0.03875473514199257, -0.00321122445166111, -0.0943046510219574, -0.04871632158756256, -0.39094898104667664, -3.8742269680369645e-05, -0.004492072854191065, -0.030045678839087486, -0.15549421310424805], "finish_reason": "stop"}, {"text": " re.findall(pattern, ' '.join(words), re.IGNORECASE)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " '", " '", ".", "join", "(", "words", ")", ",", " re", ".", "IGN", "ORE", "C", "ASE", ")", "\n"], "logprobs": [-1.6899832487106323, -0.00011467275908216834, -0.006688824389129877, -0.017445214092731476, -0.0012492479290813208, -0.033031217753887177, -0.004303480498492718, -2.084991931915283, -0.0012165057705715299, -0.0023725475184619427, -6.687417771900073e-05, -0.003020726377144456, -0.009910780936479568, -1.3584470748901367, -0.019589878618717194, -0.2507612109184265, -0.00013779645087197423, -0.018030313774943352, -1.1920922133867862e-06, -3.576278118089249e-07, -1.4305104514278355e-06, -0.01686774380505085, -0.0171694103628397], "finish_reason": "stop"}, {"text": " [word if re.search(pattern, word) else word for word in words]", "tokens": [" [", "word", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "]", "\n"], "logprobs": [-0.9680526852607727, -0.7413527965545654, -0.028516016900539398, -0.3991146683692932, -7.986990567587782e-06, -0.0010689741466194391, -0.00012194366718176752, -0.004984689876437187, -9.405170567333698e-05, -0.001303299912251532, -0.00037079135654494166, -0.20592433214187622, -0.09890126436948776, -0.061552733182907104, -0.0009819215629249811, -0.0003474347176961601, -0.010255616158246994, -0.0598067082464695, -0.005479317158460617], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0003575639275368303, -0.5552329421043396, -0.008824871852993965, -0.0004287039046175778, -0.061965037137269974, -0.020896747708320618, -1.2636104656849056e-05, -0.0004935238393954933, -0.00010156115604331717, -0.008642885833978653, -0.00012289722508285195, -0.003959673922508955, -0.0005532164941541851, -0.024279633536934853, -0.004133253823965788, -0.49662840366363525], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.8432536125183105, -7.593343616463244e-05, -6.151010165922344e-05, -8.105902816168964e-05, -0.0013373488327488303, -0.004320453852415085, -4.0531076592742465e-06, -7.271740287251305e-06, -0.0006960591417737305, -0.013545152731239796], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.021213658154010773, -0.03718390688300133, -0.00529055530205369, -0.01444161031395197, -0.03055361844599247], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.4745701551437378, -0.30885055661201477, -0.00921165943145752], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.06636539101600647, -5.721882189391181e-05, -1.6689160474925302e-05, -0.01453313883394003], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.17229808866977692, -1.1086402082582936e-05, -1.1920858014491387e-05, -0.012296462431550026, -0.002016060519963503, -2.753696753643453e-05, 0.0, -0.00035661060246638954, -0.001524715917184949, -0.057308197021484375, -0.00015770144818816334, -0.032494187355041504, -1.9073468138230965e-06, -0.00013493580627255142, -5.722029527532868e-06, -1.07287787614041e-05, -0.0013627061853185296, -0.002359227742999792], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.004125418607145548, -1.7046782886609435e-05, -1.0132738680113107e-05, -0.9011691212654114, -6.079655122448457e-06, -2.0265558760002023e-06, -1.4305104514278355e-06, -1.156323378381785e-05, -0.15767258405685425], "finish_reason": "stop"}], "metrics": {"energy": 658.0058175201412, "energy_per_token": 5.529460651429758, "time": 15.487305, "time_per_token": 0.1301454201680672}}
{"outputs": [{"text": " re.split(r'\\s', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", "s", "'", ",", " text", ")", "\n"], "logprobs": [-0.8559304475784302, -0.00015960850578267127, -0.5427114367485046, -0.050571221858263016, -0.002848260570317507, -0.09788268059492111, -0.05881751701235771, -0.9679988622665405, -0.0001070442158379592, -0.00929681770503521, -0.02252948097884655, -0.17517594993114471], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.7273356914520264, -0.011903916485607624], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8422110080718994, -0.0033614104613661766], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0003051292151212692, -0.4833643138408661, -0.012145963497459888, -0.0005451146862469614, -0.05826401710510254, -0.016646064817905426, -1.1205610462639015e-05, -0.000617551791947335, -8.129743218887597e-05, -0.006370593793690205, -0.00012206286191940308, -0.0042093489319086075, -0.0006188622792251408, -0.027064191177487373, -0.004621301311999559, -0.5311739444732666], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.762699544429779, -9.119095193454996e-05, -5.328513361746445e-05, -6.007967749610543e-05, -0.0012305553536862135, -0.003552081063389778, -4.172316494077677e-06, -6.9141146923357155e-06, -0.0006058764411136508, -0.01454101037234068], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.020550191402435303, -0.03377451375126839, -0.0049441223964095116, -0.015738558024168015, -0.02384590357542038], "finish_reason": "stop"}, {"text": " pattern == '':", "tokens": [" pattern", " ==", " '", "':", "\n"], "logprobs": [-0.36741480231285095, -2.2294321060180664, -1.467219591140747, -0.016105320304632187, -0.011863039806485176], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.06460383534431458, -5.936446541454643e-05, -1.9550132492440753e-05, -0.014778896234929562], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.18783874809741974, -1.6212332411669195e-05, -1.5735502529423684e-05, -0.014467577449977398, -0.0027778868097811937, -2.5987286790041253e-05, 0.0, -0.00036399890086613595, -0.0013905627420172095, -0.07073157280683517, -0.00017450717859901488, -0.04088215157389641, -1.9073468138230965e-06, -0.0001174142598756589, -6.198863957251888e-06, -1.4424220353248529e-05, -0.0012184107908979058, -0.002033191965892911], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0034313867799937725, -2.002696055569686e-05, -8.702239938429557e-06, -0.87187260389328], "finish_reason": "stop"}], "metrics": {"energy": 470.9579222812653, "energy_per_token": 6.037922080529043, "time": 11.515993, "time_per_token": 0.1476409358974359}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.6729435920715332, -6.19869097135961e-05, -0.004142276477068663, -0.052369408309459686, -0.05005928874015808], "finish_reason": "stop"}, {"text": " [re.findall(pattern, word) for word in words]", "tokens": [" [", "re", ".", "find", "all", "(", "pattern", ",", " word", ")", " for", " word", " in", " words", "]", "\n"], "logprobs": [-0.5601655840873718, -1.5017905235290527, -0.0002739054325502366, -1.1284114122390747, -0.006977359298616648, -0.002791438950225711, -0.05720113590359688, -0.0032294047996401787, -0.10440900176763535, -0.5102967619895935, -0.006932491902261972, -0.00028046013903804123, -3.766942609217949e-05, -0.002083870582282543, -0.004451603628695011, -0.010386815294623375], "finish_reason": "stop"}, {"text": " matched_words + [word for word in words if re.search(pattern, word) is None]", "tokens": [" matched", "_", "words", " +", " [", "word", " for", " word", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " is", " None", "]", "\n"], "logprobs": [-2.361707925796509, -0.00042298430344089866, -0.00022384998737834394, -0.02265278808772564, -0.010381152853369713, -0.00670646782964468, -0.0010807631770148873, -0.00027855331427417696, -1.5020257706055418e-05, -0.00019143179815728217, -0.0030695723835378885, -2.093256711959839, -1.0371154530730564e-05, -0.004450654145330191, -0.0005657264264300466, -0.004764513578265905, -0.00025555206229910254, -0.002818423556163907, -0.01572917029261589, -0.007989945821464062, -0.0005036516231484711, -0.07743339240550995, -0.003513237228617072], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word for word in words]", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "]", "\n"], "logprobs": [-0.000342191313393414, -0.7344772219657898, -0.05608302354812622, -0.014499418437480927, -7.152531907195225e-06, -0.0009068905492313206, -8.308542601298541e-05, -0.008395615965127945, -0.00018189683032687753, -0.004269176162779331, -0.0006967739318497479, -0.018297452479600906, -0.0028519455809146166, -0.6833442449569702, -0.007442012894898653, -0.0015238827327266335, -0.008969846181571484, -2.5864765644073486, -0.0015087660867720842], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.7994794845581055, -7.581423415103927e-05, -5.3165931603871286e-05, -7.319182623177767e-05, -0.0012965138303115964, -0.0037817880511283875, -3.099436753473128e-06, -7.152531907195225e-06, -0.0007613382767885923, -0.014432093128561974], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0261079091578722, -0.027025436982512474, -0.00599159300327301, -0.016015930101275444, -0.025518106296658516], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.34508365392684937, -0.27863478660583496, -0.008782923221588135], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0737488642334938, -5.674201020156033e-05, -2.3483953555114567e-05, -0.014135945588350296], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.1822991520166397, -1.2755313036905136e-05, -1.2516897186287679e-05, -0.01182133611291647, -0.0030019478872418404, -2.52720492426306e-05, 0.0, -0.00030429501202888787, -0.0010974343167617917, -0.08327531069517136, -0.000163541772053577, -0.0306954775005579, -1.4305104514278355e-06, -0.0001433984871255234, -5.483612312673358e-06, -1.4305012882687151e-05, -0.001405204995535314, -0.0021547689102590084], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df"], "logprobs": [-0.002770516322925687, -1.883488948806189e-05, -9.417489309271332e-06], "finish_reason": "stop"}], "metrics": {"energy": 707.8480723438261, "energy_per_token": 6.677812003243642, "time": 16.496359, "time_per_token": 0.15562602830188682}}
{"outputs": [{"text": " re.split(r'\\s+', text)", "tokens": [" re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ")", "\n"], "logprobs": [-0.8634771108627319, -0.00011455356434453279, -0.6713195443153381, -0.05047975853085518, -0.004165307153016329, -0.08751285076141357, -0.059852857142686844, -0.3587203323841095, -3.755022044060752e-05, -0.0040545412339270115, -0.029969440773129463, -0.12424708157777786], "finish_reason": "stop"}, {"text": " [word for word in words if re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.5612651109695435, -0.407529354095459, -0.08597811311483383, -0.000485183292767033, -0.00015960850578267127, -0.015736445784568787, -0.004946138709783554, -0.01590142212808132, -0.00022373080719262362, -0.22400997579097748, -0.0023730231914669275, -0.005874392576515675, -0.0013067525578662753, -0.0009640575153753161, -0.09332600235939026, -0.003043664153665304], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8336473107337952, -0.003163692308589816], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.00033885458833537996, -0.4705680012702942, -0.0056328377686440945, -0.0004159538948442787, -0.07170473039150238, -0.01787458546459675, -1.1920858014491387e-05, -0.000514017534442246, -8.928377064876258e-05, -0.008705994114279747, -0.00013684290752280504, -0.0037531666457653046, -0.0006275591440498829, -0.03747905045747757, -0.003986864350736141, -0.4544365704059601], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5424587726593018, -0.0007787294453009963, -7.915183232398704e-05, -7.033100700937212e-05, -0.0016586130950599909, -0.00465986505150795, -5.722029527532868e-06, -5.364403477869928e-06, -0.0005013877525925636, -0.020083295181393623], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.020543068647384644, -0.03581351786851883, -0.006893068552017212, -0.013092034496366978, -0.02841058187186718], "finish_reason": "stop"}, {"text": " pattern != \"\":", "tokens": [" pattern", " ", "!", "=", " \"", "\":", "\n"], "logprobs": [-0.39562276005744934, -2.1112329959869385, -1.1205610462639015e-05, -4.672895011026412e-05, -0.283794641494751, -0.009768067859113216, -0.007166276220232248], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.07111768424510956, -6.16293036728166e-05, -1.5616295058862306e-05, -0.016042910516262054], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.18240106105804443, -1.537788011773955e-05, -8.22540732769994e-06, -0.014744127169251442, -0.0019071977585554123, -2.6702524337451905e-05, 0.0, -0.0003694805200211704, -0.0012159105390310287, -0.06592687964439392, -0.0001618731184862554, -0.03606065362691879, -1.9073468138230965e-06, -0.00011085849109804258, -5.364403477869928e-06, -1.2755313036905136e-05, -0.0014019908849149942, -0.0019954785238951445], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.004652864299714565, -2.0265373677830212e-05, -1.0490362910786644e-05, -1.000923991203308, -6.556489552167477e-06, -1.7881377516459906e-06, -1.9073468138230965e-06, -1.5616295058862306e-05, -1.862868309020996, -0.004727852065116167], "finish_reason": "stop"}], "metrics": {"energy": 547.1995280246734, "energy_per_token": 5.471995280246734, "time": 13.193607, "time_per_token": 0.13193607}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.7080472707748413, -8.082063141046092e-05, -0.005719012580811977, -0.050839778035879135, -0.05111052840948105], "finish_reason": "stop"}, {"text": " [word for word in words if re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.554628849029541, -0.37813717126846313, -0.15326610207557678, -0.0005683475756086409, -0.00015793983766343445, -0.013075090944766998, -0.005670651327818632, -0.023222152143716812, -0.00017295771976932883, -0.2418544441461563, -0.002486948622390628, -0.006490341853350401, -0.0013086573453620076, -0.0013154434273019433, -0.10865114629268646, -0.003386003663763404], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8407148718833923, -0.002463165670633316], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.00032419670606032014, -0.4630315899848938, -0.007730921730399132, -0.00040749352774582803, -0.05397960543632507, -0.015702765434980392, -1.1444026313256472e-05, -0.0007286992622539401, -7.986703712958843e-05, -0.008718402124941349, -0.0001248043408850208, -0.004151061177253723, -0.0007521660882048309, -0.029240794479846954, -0.004130760673433542, -0.40508055686950684], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.6893097162246704, -0.0006659197388216853, -6.69933797325939e-05, -5.936446541454643e-05, -0.0016013667918741703, -0.004809715319424868, -5.960446742392378e-06, -5.960446742392378e-06, -0.0005718026659451425, -0.02033715508878231], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.027131833136081696, -0.035061951726675034, -0.005675748456269503, -0.017295606434345245, -0.028252290561795235], "finish_reason": "stop"}, {"text": " pattern != \"\":", "tokens": [" pattern", " ", "!", "=", " \"", "\":", "\n"], "logprobs": [-0.3760165274143219, -2.193187952041626, -1.0251946150674485e-05, -5.245071224635467e-05, -0.26929208636283875, -0.008325631730258465, -0.006154750473797321], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-2.57893967628479, -0.08525392413139343], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.24584579467773438, -1.0967194612021558e-05, -1.2397689715726301e-05, -0.011973886750638485, -0.0016137446509674191, -3.0874729418428615e-05, 0.0, -0.0002992897352669388, -0.0011439929949119687, -0.06534849852323532, -0.00016246906307060272, -0.03519085794687271, -1.5497195136049413e-06, -0.00011300401820335537, -5.722029527532868e-06, -1.2278481335670222e-05, -0.0012335318606346846, -0.0018303323304280639], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0028889132663607597, -1.764281842042692e-05, -6.9141146923357155e-06, -1.0071172714233398, -7.033323527139146e-06, -2.0265558760002023e-06, -2.0265558760002023e-06, -2.276871418871451e-05, -0.15962287783622742], "finish_reason": "stop"}], "metrics": {"energy": 512.5903796234132, "energy_per_token": 5.695448662482369, "time": 12.339682, "time_per_token": 0.13710757777777777}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.7080472707748413, -8.082063141046092e-05, -0.005719012580811977, -0.050839778035879135, -0.05111052840948105], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-1.7362236976623535, -0.00010251473577227443, -0.006738794036209583, -0.015330690890550613, -0.0014718662714585662, -0.03176194801926613, -0.003714805468916893, -0.21180999279022217, -0.3216507136821747, -0.02636709436774254], "finish_reason": "stop"}, {"text": " [word if re.search(pattern, word) is None else matched_words.pop(0) for word in words]", "tokens": [" [", "word", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " is", " None", " else", " matched", "_", "words", ".", "pop", "(", "0", ")", " for", " word", " in", " words", "]", "\n"], "logprobs": [-1.023579478263855, -0.8111993074417114, -0.0295917596668005, -0.36473628878593445, -1.0967194612021558e-05, -0.0011544713051989675, -0.00013016807497479022, -0.0048146978951990604, -9.727005090098828e-05, -0.0010840974282473326, -0.0004570631426759064, -1.5984960794448853, -0.002791557926684618, -0.010168769396841526, -0.01757523976266384, -0.00021789084712509066, -0.00024673278676345944, -0.01611599326133728, -3.2305197237292305e-05, -0.8326540589332581, -0.0012537722941488028, -9.953480184776708e-05, -0.4901508092880249, -0.001365087111480534, -0.0008131535141728818, -0.0004390706308186054, -0.007340839132666588, -0.003318163100630045], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0003331344632897526, -0.4697815179824829, -0.00730427261441946, -0.0003432638186495751, -0.05298994109034538, -0.018023991957306862, -1.1205610462639015e-05, -0.0005360596696846187, -8.5588610090781e-05, -0.005787994246929884, -0.0001287377526750788, -0.0039051712956279516, -0.0008267321973107755, -0.025778839364647865, -0.003611353924497962, -0.5504644513130188], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.5811116695404053, -0.000671042304020375, -6.818538531661034e-05, -5.578839045483619e-05, -0.0014785320963710546, -0.005970500409603119, -6.198863957251888e-06, -5.960446742392378e-06, -0.0005557184922508895, -0.022001003846526146], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.026260966435074806, -0.03458278253674507, -0.004976979922503233, -0.015232660807669163, -0.027518678456544876], "finish_reason": "stop"}, {"text": " not pattern:", "tokens": [" not", " pattern", ":", "\n"], "logprobs": [-1.5466656684875488, -0.1886560469865799, -0.06285552680492401, -0.019265204668045044], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.07165856659412384, -6.770858453819528e-05, -2.276871418871451e-05, -0.014070829376578331], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.2075560986995697, -1.2040065485052764e-05, -8.34461570775602e-06, -0.013415660709142685, -0.0021123019978404045, -2.7894584491150454e-05, 0.0, -0.0002901133266277611, -0.0011175584513694048, -0.05561675876379013, -0.0001776060671545565, -0.03360346704721451, -1.5497195136049413e-06, -9.047575440490618e-05, -5.8412379075889476e-06, -1.156323378381785e-05, -0.0013499680208042264, -0.0018901830771937966], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0034474246203899384, -1.847726889536716e-05, -7.152531907195225e-06, -0.990662157535553, -6.318072337307967e-06, -2.622600959512056e-06, -2.145764938177308e-06, -9.536697689327411e-06, -0.17189714312553406], "finish_reason": "stop"}], "metrics": {"energy": 651.6994700450896, "energy_per_token": 5.9788942205971525, "time": 15.4521675, "time_per_token": 0.14176300458715596}}
