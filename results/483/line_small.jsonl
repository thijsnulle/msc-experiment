{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.9761524796485901, -0.0012336509535089135, -0.10583273321390152, -0.04855155944824219, -0.010179389268159866], "finish_reason": "stop"}, {"text": " [word[::-1] for word in words if re.search(pattern, word)]", "tokens": [" [", "word", "[", "::", "-", "1", "]", " for", " word", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-1.0148476362228394, -0.14704813063144684, -1.1777971982955933, -0.004956458695232868, -0.002788823563605547, -3.564294092939235e-05, -0.00034528967808000743, -0.028598157688975334, -0.0049957213923335075, -0.0005178302526473999, -0.022350788116455078, -0.3399296998977661, -0.0757170021533966, -9.500529267825186e-05, -0.7173035740852356, -0.010126051492989063, -0.05530605465173721, -0.0034383959136903286, -0.007606116589158773, -0.10158418864011765, -0.001991790486499667], "finish_reason": "stop"}, {"text": " [matched_words[i] if i < len(matched_words) else word for i, word in enumerate(words)]", "tokens": [" [", "matched", "_", "words", "[", "i", "]", " if", " i", " <", " len", "(", "matched", "_", "words", ")", " else", " word", " for", " i", ",", " word", " in", " enumerate", "(", "words", ")]", "\n"], "logprobs": [-0.5059171319007874, -2.4307870864868164, -0.00018344627460464835, -0.019492734223604202, -0.5915486812591553, -0.3110976815223694, -0.08003922551870346, -0.03195859491825104, -0.3504890203475952, -0.02917260117828846, -0.006525635719299316, -9.97731985989958e-05, -0.005371305160224438, -3.40932747349143e-05, -3.6954811548639555e-06, -0.0011550667695701122, -0.0585663840174675, -0.31366342306137085, -0.10321195423603058, -0.005260435398668051, -0.029930569231510162, -0.03725040704011917, -0.00238788896240294, -0.0030893003568053246, -0.00013505500101018697, -0.003504684194922447, -0.019067564979195595, -0.0020811345893889666], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.002063527936115861, -0.7003666162490845, -0.12180347740650177, -0.42499038577079773, -0.0035127620212733746, -0.004677900578826666, -0.0013248485047370195, -0.01111117098480463, -0.00035386974923312664, -0.009294337593019009, -0.0020841085352003574, -0.09957464039325714, -0.003992682322859764, -0.5282919406890869], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.26194700598716736, -0.0005525015876628458, -0.00016258825780823827, -0.0005855038180015981, -0.0021708274725824594, -0.010008036158978939, -8.666139910928905e-05, -4.529942543740617e-06, -0.002319504739716649, -0.02071344293653965], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.06351388990879059, -0.08099929988384247, -0.08353325724601746, -0.03982444852590561, -0.02070561982691288], "finish_reason": "stop"}, {"text": " pattern == \"\":", "tokens": [" pattern", " ==", " \"", "\":", "\n"], "logprobs": [-0.5656899809837341, -1.3619098663330078, -0.5315443277359009, -0.029406337067484856, -0.02336854860186577], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.032196760177612305, -0.0002101439022226259, -0.0002548369811847806, -0.019951025024056435], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03904035687446594, -0.00019762947340495884, -4.279521817807108e-05, -0.023466482758522034, -0.0002907091984525323, -2.074220174108632e-05, -4.410734163684538e-06, -0.000809818331617862, -0.0022903657518327236, -0.07006194442510605, -0.00046623803791590035, -0.13442818820476532, -2.0265558760002023e-06, -4.95898348162882e-05, -5.006777428206988e-06, -8.34461570775602e-06, -0.002688367385417223, -0.0015420938143506646], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.00154518848285079, -2.288792165927589e-05, -1.8358061424805783e-05, -1.0786769390106201, -4.768370445162873e-07, -1.7881377516459906e-06, -3.015949550899677e-05, -0.00018189683032687753, -0.07458057999610901], "finish_reason": "stop"}], "metrics": {"energy": 323.1923808917999, "energy_per_token": 2.7159023604352934, "time": 10.045945, "time_per_token": 0.08441970588235294}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.8224294185638428, -0.0014782940270379186, -0.09923131763935089, -0.04978405684232712, -0.009786837734282017], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8137956261634827, -0.004405436106026173], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.630349338054657, -0.21443964540958405, -0.06839173287153244, -0.0004094000905752182, -9.262132516596466e-05, -0.006280921399593353, -0.0021038558334112167, -0.2825586795806885, -0.0035957936197519302, -2.7417760065873154e-05, -0.07262849807739258, -2.825220326485578e-05, -5.483612312673358e-06, -0.06702134013175964, -0.12598808109760284], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0033237473107874393, -0.7066798210144043, -0.00457834592089057, -0.0009151084814220667, -0.13261988759040833, -0.417306125164032, -0.0010208638850599527, -0.005833860952407122, -0.0013525871327146888, -0.008981306105852127, -0.0002802217786666006, -0.01860816590487957, -0.002137520583346486, -0.08399775624275208, -0.00493581872433424, -0.4588930010795593], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.25503116846084595, -0.0005042473785579205, -0.0001578206429257989, -0.0004654039512388408, -0.0021525088232010603, -0.00891526136547327, -8.809178689261898e-05, -4.768360213347478e-06, -0.001924449927173555, -0.01630847156047821], "finish_reason": "stop"}, {"text": " df.apply(lambda x: reverse_matched_words(x[column_name]), axis=1)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " reverse", "_", "matched", "_", "words", "(", "x", "[", "column", "_", "name", "])", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.06614995002746582, -0.08449885994195938, -2.7562055587768555, -0.17385637760162354, -0.7888150811195374, -0.8565635681152344, -0.0015788720920681953, -0.15279994904994965, -2.312633478140924e-05, -0.00011550712952157483, -9.250213042832911e-05, -3.886147169396281e-05, -0.006101671140640974, -0.006442136596888304, -0.026527658104896545, -0.0031251898035407066, -0.0005050813779234886, -1.1205610462639015e-05, -0.025683686137199402, -0.043370168656110764, -0.01135906670242548, -0.04103467985987663, -0.006454217713326216, -0.17063021659851074, -0.28238826990127563], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.6268195509910583, -0.4152642488479614, -0.012881402857601643], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.03538361191749573, -0.0002294515579706058, -0.00027426297310739756, -0.018628409132361412], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.04241633415222168, -0.00021431533969007432, -3.302042750874534e-05, -0.02354007214307785, -0.0003147821989841759, -2.062299427052494e-05, -3.2186455882765586e-06, -0.0008351890719495714, -0.002812836552038789, -0.07116720080375671, -0.00044860312482342124, -0.11403050273656845, -2.0265558760002023e-06, -4.9232225137529895e-05, -6.437280717364047e-06, -7.271740287251305e-06, -0.0026619734708219767, -0.0019288521725684404], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0012960376916453242, -2.4676019165781327e-05, -2.1934269170742482e-05, -0.6978297233581543], "finish_reason": "stop"}], "metrics": {"energy": 191.7523408126831, "energy_per_token": 1.8799249099282656, "time": 7.0934052, "time_per_token": 0.06954318823529412}}
{"outputs": [{"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.6857106685638428, -3.766942609217949e-05, -0.19442979991436005, -0.008736010640859604, -0.030233873054385185, -0.2406211644411087, -0.009477739222347736, -0.01212900411337614, -0.13631571829319, -0.014887424185872078], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8723234534263611, -0.003874178510159254], "finish_reason": "stop"}, {"text": " \" \".join(matched_words)", "tokens": [" \"", " \"", ".", "join", "(", "matched", "_", "words", ")", "\n"], "logprobs": [-2.926363706588745, -0.004312263801693916, -0.00014172980445437133, -0.00035041390219703317, -0.012651070021092892, -0.03168122470378876, -5.364274329622276e-05, -5.364403477869928e-06, -0.08171328902244568, -0.055531393736600876], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0019123139791190624, -0.5387466549873352, -0.1065085306763649, -0.6039031147956848, -0.0038618287071585655, -0.005714626982808113, -0.0017420368967577815, -0.009072626940906048, -0.0003669780562631786, -0.011609376408159733, -0.0022769258357584476, -0.07488159090280533, -0.004149755463004112, -0.546783447265625], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2548378109931946, -0.0005208089714869857, -0.00017331528943032026, -0.00047362555051222444, -0.0021664262749254704, -0.010429286397993565, -0.00011944057769142091, -4.887569048150908e-06, -0.0025491383858025074, -0.019019611179828644], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0688735619187355, -0.07029564678668976, -0.09496356546878815, -0.039818380028009415, -0.01891784742474556], "finish_reason": "stop"}, {"text": " pattern != \"\":", "tokens": [" pattern", " ", "!", "=", " \"", "\":", "\n"], "logprobs": [-0.5767464637756348, -2.136159658432007, -3.671578815556131e-05, -7.748303323751315e-05, -0.6176932454109192, -0.027279049158096313, -0.013151214458048344], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0460834726691246, -0.00018535325943958014, -0.00028868322260677814, -0.018295813351869583], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03211053088307381, -0.00019274283840786666, -4.8040190449682996e-05, -0.02648760750889778, -0.0003543464408721775, -1.8000440832111053e-05, -3.576272320060525e-06, -0.0007033258443698287, -0.0025864739436656237, -0.0604090690612793, -0.00036376056959852576, -0.1312878578901291, -1.5497195136049413e-06, -5.1377883210079744e-05, -4.172316494077677e-06, -7.748573807475623e-06, -0.002552943304181099, -0.0017272805562242866], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.001208409434184432, -2.5152843591058627e-05, -2.1576648578047752e-05, -0.7295765280723572], "finish_reason": "stop"}], "metrics": {"energy": 177.07061728286746, "energy_per_token": 2.1079835390817556, "time": 6.2855816, "time_per_token": 0.07482835238095238}}
{"outputs": [{"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.6944054961204529, -4.0411134250462055e-05, -0.18112193048000336, -0.010873589664697647, -0.030507368966937065, -0.23766186833381653, -0.008505902253091335, -0.013048852793872356, -0.1386948972940445, -0.01482799369841814], "finish_reason": "stop"}, {"text": " [word for word in words if re.match(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "match", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.9217401146888733, -0.13778981566429138, -0.3943213224411011, -0.005042572971433401, -0.0010113369207829237, -0.023314859718084335, -0.024613501504063606, -0.058001384139060974, -0.00010680581908673048, -0.6735106706619263, -0.005091083236038685, -0.026589879766106606, -0.0028704889118671417, -0.005247153807431459, -0.10415326803922653, -0.0035890231374651194], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.490594744682312, -0.14667388796806335, -0.0864500105381012, -0.00032824851223267615, -0.0001230164198204875, -0.004829646088182926, -0.002190335188060999, -0.26700398325920105, -0.005003668367862701, -2.90866428258596e-05, -0.07165024429559708, -1.3470558769768104e-05, -6.556489552167477e-06, -0.04864490032196045, -0.09298758208751678], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word for word in words", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.0024103655014187098, -0.7823315262794495, -0.004069500602781773, -0.0008600826840847731, -0.14869524538516998, -0.4879848062992096, -0.0015919642755761743, -0.007711521815508604, -0.001620409544557333, -0.009238234721124172, -0.0002361257211305201, -0.01540323905646801, -0.0017591729993000627, -0.08632896840572357, -0.005984483286738396, -0.9445888996124268, -0.0063361236825585365, -0.0025181034579873085, -0.015722012147307396, -0.07583922147750854], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2541326880455017, -0.0005750194541178644, -0.00014852374442853034, -0.0004847066884394735, -0.0017842815723270178, -0.008848385885357857, -0.00010322991875000298, -6.079655122448457e-06, -0.0021730875596404076, -0.019384002313017845], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.06456048041582108, -0.08578688651323318, -0.08503945171833038, -0.04075351729989052, -0.017668357118964195], "finish_reason": "stop"}, {"text": " pattern == \"\":", "tokens": [" pattern", " ==", " \"", "\":", "\n"], "logprobs": [-0.6476851105690002, -1.5281285047531128, -0.5832263827323914, -0.03113202564418316, -0.02201126702129841], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.04138381779193878, -0.00021050144277978688, -0.00026806574896909297, -0.02433699183166027], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03513296693563461, -0.0001652104256208986, -4.362964682513848e-05, -0.02661077491939068, -0.00033063191222026944, -1.8596476365928538e-05, -3.576272320060525e-06, -0.0007674132939428091, -0.0021594080608338118, -0.07044164836406708, -0.0003321811091154814, -0.11287335306406021, -2.0265558760002023e-06, -4.51792984677013e-05, -5.125986263010418e-06, -9.775113539944869e-06, -0.002925166627392173, -0.0015367376618087292], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.001262106467038393, -2.5033637939486653e-05, -2.2053474822314456e-05, -1.1769256591796875, -4.768370445162873e-07, -1.6689286894688848e-06, -3.981510963058099e-05, -0.00017498392844572663, -0.06051679328083992], "finish_reason": "stop"}], "metrics": {"energy": 223.61723496437065, "energy_per_token": 1.9965824550390237, "time": 7.5042834, "time_per_token": 0.06700253035714286}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.8224294185638428, -0.0014782940270379186, -0.09923131763935089, -0.04978405684232712, -0.009786837734282017], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8137956261634827, -0.004405436106026173], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.630349338054657, -0.21443964540958405, -0.06839173287153244, -0.0004094000905752182, -9.262132516596466e-05, -0.006280921399593353, -0.0021038558334112167, -0.2825586795806885, -0.0035957936197519302, -2.7417760065873154e-05, -0.07262849807739258, -2.825220326485578e-05, -5.483612312673358e-06, -0.06702134013175964, -0.12598808109760284], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0033237473107874393, -0.6976733207702637, -0.10687454044818878, -0.409938782453537, -0.003725969698280096, -0.0060971686616539955, -0.0012477001873776317, -0.012977427802979946, -0.00037150635034777224, -0.009934033267199993, -0.002092435723170638, -0.07538417726755142, -0.003744259476661682, -0.5772268772125244], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2585940659046173, -0.0005383234238252044, -0.00014053787162993103, -0.00043442347669042647, -0.0023988301400095224, -0.008777960203588009, -0.00010227633902104571, -5.245195097813848e-06, -0.0017898743972182274, -0.016685575246810913], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0687909871339798, -0.06150072067975998, -0.07516636699438095, -0.04633866995573044, -0.018241384997963905], "finish_reason": "stop"}, {"text": " not pattern:", "tokens": [" not", " pattern", ":", "\n"], "logprobs": [-1.5206449031829834, -0.09998364746570587, -0.10616050660610199, -0.04995031654834747], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.042836375534534454, -0.0002037079248111695, -0.00026079590315930545, -0.02074088342487812], "finish_reason": "stop"}, {"text": " new_df[column_name].map(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "map", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.039152588695287704, -0.0001565095444675535, -3.71926071238704e-05, -0.01610637456178665, -0.0003280101518612355, -1.8715683836489916e-05, -3.4570634852570947e-06, -0.0007904027588665485, -0.002267529722303152, -2.884969472885132, -0.0009397619287483394, -0.13169778883457184, -2.9802276912960224e-06, -3.790783375734463e-05, -4.768360213347478e-06, -7.033323527139146e-06, -0.0029643899761140347, -0.0022851326502859592], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0014332984574139118, -2.0503786799963564e-05, -1.645074735279195e-05, -0.8213034868240356], "finish_reason": "stop"}], "metrics": {"energy": 178.06165708351136, "energy_per_token": 2.1982920627593994, "time": 6.25166, "time_per_token": 0.07718098765432099}}
{"outputs": [{"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.6857106685638428, -3.766942609217949e-05, -0.19442979991436005, -0.008736010640859604, -0.030233873054385185, -0.2406211644411087, -0.009477739222347736, -0.01212900411337614, -0.13631571829319, -0.014887424185872078], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8723234534263611, -0.003874178510159254], "finish_reason": "stop"}, {"text": " \" \".join(matched_words)", "tokens": [" \"", " \"", ".", "join", "(", "matched", "_", "words", ")", "\n"], "logprobs": [-2.926363706588745, -0.004312263801693916, -0.00014172980445437133, -0.00035041390219703317, -0.012651070021092892, -0.03168122470378876, -5.364274329622276e-05, -5.364403477869928e-06, -0.08171328902244568, -0.055531393736600876], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0019123139791190624, -0.5387466549873352, -0.1065085306763649, -0.6039031147956848, -0.0038618287071585655, -0.005714626982808113, -0.0017420368967577815, -0.009072626940906048, -0.0003669780562631786, -0.011609376408159733, -0.0022769258357584476, -0.07488159090280533, -0.004149755463004112, -0.546783447265625], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2548378109931946, -0.0005208089714869857, -0.00017331528943032026, -0.00047362555051222444, -0.0021664262749254704, -0.010429286397993565, -0.00011944057769142091, -4.887569048150908e-06, -0.0025491383858025074, -0.019019611179828644], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0688735619187355, -0.07029564678668976, -0.09496356546878815, -0.039818380028009415, -0.01891784742474556], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.5767464637756348, -0.43952539563179016, -0.012484495528042316], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0460834726691246, -0.00018535325943958014, -0.00028868322260677814, -0.018295813351869583], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03211053088307381, -0.00019274283840786666, -4.8040190449682996e-05, -0.02648760750889778, -0.0003543464408721775, -1.8000440832111053e-05, -3.576272320060525e-06, -0.0007033258443698287, -0.0025864739436656237, -0.0604090690612793, -0.00036376056959852576, -0.1312878578901291, -1.5497195136049413e-06, -5.1377883210079744e-05, -4.172316494077677e-06, -7.748573807475623e-06, -0.002552943304181099, -0.0017272805562242866], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.001208409434184432, -2.5152843591058627e-05, -2.1576648578047752e-05, -0.7295765280723572], "finish_reason": "stop"}], "metrics": {"energy": 168.06592131996146, "energy_per_token": 2.1008240164995184, "time": 6.084736, "time_per_token": 0.07605920000000001}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.8074540495872498, -0.0013555632904171944, -0.1217193603515625, -0.04539211094379425, -0.010575207881629467], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.9021384716033936, -0.003985914401710033], "finish_reason": "stop"}, {"text": " [word for word in words if not re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " not", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.5026652812957764, -0.14837948977947235, -0.07345515489578247, -0.0003303935518488288, -9.238292841473594e-05, -0.004850881639868021, -0.0020950529724359512, -1.5781896114349365, -0.008167557418346405, -0.00026925752172246575, -0.001718236249871552, -0.00011920218821614981, -0.0007110689766705036, -4.362964682513848e-05, -0.0018164102220907807, -0.10279781371355057, -0.06574361026287079], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0017613149248063564, -0.7658945322036743, -0.005623236298561096, -0.0009975224966183305, -0.11256396770477295, -0.45238572359085083, -0.0010577804641798139, -0.007665031123906374, -0.001148994080722332, -0.011004473082721233, -0.00029595286468975246, -0.016426682472229004, -0.0020248640794306993, -0.10195017606019974, -0.006088045425713062, -0.4414423108100891], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.240384042263031, -0.0004980515805073082, -0.00015209948469419032, -0.0005408254801295698, -0.0023111794143915176, -0.01364969927817583, -9.321732068201527e-05, -4.291525328881107e-06, -0.002267410745844245, -0.017017768695950508], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.06330108642578125, -0.0703573152422905, -0.09354206919670105, -0.04769938439130783, -0.020791323855519295], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.5032389163970947, -0.4130316376686096, -0.013438479043543339], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.03803567588329315, -0.00019774865359067917, -0.00022599527437705547, -0.018560776486992836], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03735319525003433, -0.0001740304142003879, -5.113947918289341e-05, -0.016265662387013435, -0.0003761537664104253, -1.7165990357170813e-05, -2.9802276912960224e-06, -0.0009214208112098277, -0.0025454522110521793, -0.07422126084566116, -0.0003573255962692201, -0.13365264236927032, -2.9802276912960224e-06, -4.660974445869215e-05, -4.768360213347478e-06, -8.34461570775602e-06, -0.0027656422462314367, -0.0016740844585001469], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0013516347389668226, -2.4914430468925275e-05, -2.253030106658116e-05, -0.8213573098182678], "finish_reason": "stop"}], "metrics": {"energy": 164.4505672397613, "energy_per_token": 1.9577448480923967, "time": 6.051587, "time_per_token": 0.07204270238095238}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.8224294185638428, -0.0014782940270379186, -0.09923131763935089, -0.04978405684232712, -0.009786837734282017], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-2.1052651405334473, -4.172238186583854e-05, -0.02600175514817238, -0.08313446491956711, -0.02331031858921051, -0.07677783817052841, -0.004757157526910305, -0.02399791032075882, -0.2327660322189331, -0.008940191008150578], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.630349338054657, -0.21443964540958405, -0.06839173287153244, -0.0004094000905752182, -9.262132516596466e-05, -0.006280921399593353, -0.0021038558334112167, -0.2825586795806885, -0.0035957936197519302, -2.7417760065873154e-05, -0.07262849807739258, -2.825220326485578e-05, -5.483612312673358e-06, -0.06702134013175964, -0.12598808109760284], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word for word in words", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.0033237473107874393, -0.7066798210144043, -0.00457834592089057, -0.0009151084814220667, -0.13261988759040833, -0.417306125164032, -0.0010208638850599527, -0.005833860952407122, -0.0013525871327146888, -0.008981306105852127, -0.0002802217786666006, -0.01860816590487957, -0.002137520583346486, -0.08399775624275208, -0.00493581872433424, -1.0056841373443604, -0.005874392576515675, -0.0028229409363120794, -0.014710649847984314, -0.059471357613801956], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-1.7316291332244873, -0.0016389759257435799, -0.00012134769349358976, -0.00041976699139922857, -0.0019458661554381251, -0.011191216297447681, -0.00010251473577227443, -5.006777428206988e-06, -0.0017630999209359288, -0.015179591253399849], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.058205198496580124, -0.06980717182159424, -0.09486501663923264, -0.04577503353357315, -0.016919434070587158], "finish_reason": "stop"}, {"text": " pattern == \"\":", "tokens": [" pattern", " ==", " \"", "\":", "\n"], "logprobs": [-0.5748718976974487, -1.627646803855896, -0.5332310199737549, -0.038303833454847336, -0.02332848682999611], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.04011102393269539, -0.00017176583060063422, -0.0002109781780745834, -0.019778182730078697], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.04225224629044533, -0.00016139635408762842, -3.886147169396281e-05, -0.01681230030953884, -0.0003064401389565319, -1.3708974620385561e-05, -3.4570634852570947e-06, -0.0008784249657765031, -0.002889388706535101, -0.05422794073820114, -0.0004502712981775403, -0.11931081861257553, -1.9073468138230965e-06, -5.3165931603871286e-05, -5.8412379075889476e-06, -9.059865078597795e-06, -0.0027655235026031733, -0.0014609150821343064], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0011205353075638413, -2.3245540432981215e-05, -2.372236667724792e-05, -0.8493822813034058], "finish_reason": "stop"}], "metrics": {"energy": 176.34001083183293, "energy_per_token": 1.836875112831593, "time": 6.6640825, "time_per_token": 0.06941752604166666}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.8652595281600952, -0.001209004782140255, -0.10238339006900787, -0.05038375407457352, -0.011304259300231934], "finish_reason": "stop"}, {"text": " [word[::-1] for word in words]", "tokens": [" [", "word", "[", "::", "-", "1", "]", " for", " word", " in", " words", "]", "\n"], "logprobs": [-1.014657735824585, -0.17456193268299103, -1.0485199689865112, -0.004572531208395958, -0.0022980966605246067, -3.6477376852417365e-05, -0.0003110878460574895, -0.030529223382472992, -0.003043901873752475, -0.00047636605449952185, -0.02127574384212494, -1.4643856287002563, -0.014757048338651657], "finish_reason": "stop"}, {"text": " [word for word in words if not re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " not", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.47246527671813965, -0.15763592720031738, -0.06854724884033203, -0.000324673397699371, -8.248942322097719e-05, -0.005245730746537447, -0.0023216456174850464, -1.8920259475708008, -0.009083377197384834, -0.0004122599493712187, -0.0014277036534622312, -9.131014667218551e-05, -0.0008288762182928622, -5.507317473529838e-05, -0.00188137823715806, -0.11599615961313248, -0.06151865795254707], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word for word in words", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.001999404514208436, -0.687303364276886, -0.116005077958107, -0.4776379466056824, -0.0026562665589153767, -0.005355653818696737, -0.0014054430648684502, -0.010751770809292793, -0.00036125810584053397, -0.00918047595769167, -0.0017610769718885422, -0.08522523939609528, -0.0030655316077172756, -0.8524189591407776, -0.0033805386628955603, -0.0018134353449568152, -0.013755057007074356, -0.10415498912334442], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.257595956325531, -0.0005138983833603561, -0.00014161060971673578, -0.0005351065192371607, -0.0021563153713941574, -0.00968861673027277, -0.00012444675667211413, -5.006777428206988e-06, -0.002605617046356201, -0.01735278032720089], "finish_reason": "stop"}, {"text": " df.apply(reverse_matched_words, axis=1)", "tokens": [" df", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.058733660727739334, -0.06910654157400131, -2.648390769958496, -0.17656072974205017, -0.9505786895751953, -1.2278481335670222e-05, -0.00011705666838679463, -1.0251946150674485e-05, -6.4490144723095e-05, -0.010341038927435875, -0.017391325905919075, -0.05685623735189438, -0.005958294961601496, -0.3088909983634949, -0.09379683434963226], "finish_reason": "stop"}, {"text": " pattern != \"\":", "tokens": [" pattern", " ", "!", "=", " \"", "\":", "\n"], "logprobs": [-0.5723994374275208, -2.1819612979888916, -4.9470632802695036e-05, -9.047575440490618e-05, -0.6186447143554688, -0.025868522003293037, -0.014019225724041462], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.033189333975315094, -0.00016890530241653323, -0.00024303820100612938, -0.022464092820882797], "finish_reason": "stop"}, {"text": " new_df[column_name].map(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "map", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.02618386037647724, -0.0001902399235405028, -4.5298504119273275e-05, -0.02349466271698475, -0.0003620922507252544, -2.1457441107486375e-05, -4.0531076592742465e-06, -0.0006567466771230102, -0.002581836888566613, -3.009443521499634, -0.0008432884933426976, -0.13553069531917572, -3.2186455882765586e-06, -4.1960789531003684e-05, -6.437280717364047e-06, -6.437280717364047e-06, -0.002828646684065461, -0.002814976265653968], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.001437583938241005, -2.4914430468925275e-05, -2.1934269170742482e-05, -0.708763599395752], "finish_reason": "stop"}], "metrics": {"energy": 227.19661037254326, "energy_per_token": 2.046816309662552, "time": 7.5199823, "time_per_token": 0.06774758828828828}}
{"outputs": [{"text": " re.findall(r'\\b(?:car|apple|yellow)\\b', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "(", "?", ":", "car", "|", "apple", "|", "yellow", ")\\", "b", "'", ",", " text", ")", "\n"], "logprobs": [-0.6857106685638428, -3.766942609217949e-05, -0.19442979991436005, -0.008736010640859604, -0.030233873054385185, -1.6623607873916626, -0.07290327548980713, -0.8587058186531067, -0.5621324181556702, -0.016544295474886894, -0.7983747124671936, -0.94292813539505, -0.001675869687460363, -0.026190944015979767, -0.0017321596387773752, -0.014763743616640568, -0.16474033892154694, -0.0004180987598374486, -0.009906531311571598, -0.0007630059262737632, -0.025818686932325363, -0.058047618716955185, -0.02023482508957386], "finish_reason": "stop"}, {"text": " [word for word in words if re.match(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "match", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.9622778296470642, -0.14565594494342804, -0.4378555119037628, -0.004864168353378773, -0.0011449456214904785, -0.01957000605762005, -0.021259406581521034, -0.06574952602386475, -8.630380034446716e-05, -0.7028756737709045, -0.004961796570569277, -0.0334928035736084, -0.0027136902790516615, -0.00522094639018178, -0.09648415446281433, -0.0030948857311159372], "finish_reason": "stop"}, {"text": " [matched_words.pop() if word.isalpha() else word for word in words]", "tokens": [" [", "matched", "_", "words", ".", "pop", "()", " if", " word", ".", "is", "alpha", "()", " else", " word", " for", " word", " in", " words", "]", "\n"], "logprobs": [-0.47415074706077576, -2.666050672531128, -0.00027056847466155887, -0.02210490219295025, -1.1387248039245605, -0.0010989824077114463, -0.8765385746955872, -0.04828386381268501, -1.572204351425171, -2.177432060241699, -0.5686497688293457, -0.3078821301460266, -0.0010649253381416202, -0.04298894852399826, -0.010687494650483131, -0.030272040516138077, -0.002207106677815318, -0.0003311085747554898, -0.061506327241659164, -0.02417607605457306, -0.008775833994150162], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word for word in words", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.002130621112883091, -0.7097777128219604, -0.11674606800079346, -0.5073321461677551, -0.002587781986221671, -0.004354875069111586, -0.0014872215688228607, -0.011018267832696438, -0.0003906917118001729, -0.0126580148935318, -0.0022430280223488808, -0.08406878262758255, -0.0032523376867175102, -0.9057693481445312, -0.003189953975379467, -0.0019857229199260473, -0.017904093489050865, -0.07992906868457794], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.24434027075767517, -0.0006030171643942595, -0.00014327930693980306, -0.0004916174802929163, -0.0019506252137944102, -0.008803130127489567, -0.00010251473577227443, -4.6491513785440475e-06, -0.0020078516099601984, -0.018963702023029327], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.06888134777545929, -0.06981150060892105, -0.07544774562120438, -0.049776118248701096, -0.018589327111840248], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.5516391396522522, -0.3955479562282562, -0.01235851552337408], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0411100760102272, -0.00020215852418914437, -0.00024077377747744322, -0.021196968853473663], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.02774236723780632, -0.000163541772053577, -3.9219088648678735e-05, -0.016252292320132256, -0.00030870441696606576, -1.585470999998506e-05, -4.529942543740617e-06, -0.0007466865936294198, -0.003112830687314272, -0.08225538581609726, -0.00036113892565481365, -0.13594470918178558, -2.145764938177308e-06, -5.793403761344962e-05, -5.483612312673358e-06, -9.417489309271332e-06, -0.002666372573003173, -0.0016658727545291185], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0013821106404066086, -2.312633478140924e-05, -2.3007127310847864e-05, -0.9291941523551941], "finish_reason": "stop"}], "metrics": {"energy": 249.39697045707706, "energy_per_token": 2.0442374627629265, "time": 8.78521, "time_per_token": 0.07200991803278688}}
{"outputs": [{"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.6411689519882202, -4.184158387943171e-05, -0.201094388961792, -0.009824376553297043, -0.028519725427031517, -0.2805136442184448, -0.008491718210279942, -0.013051793910562992, -0.13295893371105194, -0.01645822636783123], "finish_reason": "stop"}, {"text": " [w for w in words if re.search(pattern, w)]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " w", ")]", "\n"], "logprobs": [-0.9346742630004883, -2.8497118949890137, -0.1637735366821289, -0.0026578123215585947, -0.0015310243470594287, -0.022450687363743782, -0.016263552010059357, -0.04324767738580704, -8.237022848334163e-05, -0.6638162136077881, -0.007114197593182325, -0.034744564443826675, -0.002763026859611273, -0.005670888349413872, -0.10334645211696625, -0.0035403212532401085], "finish_reason": "stop"}, {"text": " [word for word in words if not re.search(pattern, word) or word == '']", "tokens": [" [", "word", " for", " word", " in", " words", " if", " not", " re", ".", "search", "(", "pattern", ",", " word", ")", " or", " word", " ==", " '", "']", "\n"], "logprobs": [-0.5607956051826477, -0.15232446789741516, -0.07534647732973099, -0.00040546778473071754, -0.00010001159535022452, -0.007155505940318108, -0.0026006230618804693, -1.8481446504592896, -0.00907817855477333, -0.00036900385748595, -0.0020242691971361637, -0.00011848701251437888, -0.000691770575940609, -5.757642793469131e-05, -0.0016574229812249541, -2.406404972076416, -2.2823398113250732, -0.2642480731010437, -3.3739898204803467, -2.5710737705230713, -0.1887953132390976, -0.02561710961163044], "finish_reason": "stop"}, {"text": "pop(0)", "tokens": ["pop", "(", "0", ")", "\n"], "logprobs": [-0.0020492523908615112, -0.7252047061920166, -0.00589489471167326, -0.0009111781837418675, -2.10079026222229], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.23777079582214355, -0.0006364941946230829, -0.00014709345123264939, -0.000528076896443963, -0.0027572016697376966, -0.008014070801436901, -9.226373367710039e-05, -5.006777428206988e-06, -0.002791557926684618, -0.0181182362139225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.07234188914299011, -0.06626933813095093, -0.07069547474384308, -0.04368574172258377, -0.01842479221522808], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.619871973991394, -0.45393070578575134, -0.01192217506468296], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.037034351378679276, -0.00019035911827813834, -0.0002450642641633749, -0.01953704096376896], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03976430743932724, -0.00014578233822248876, -4.017272294731811e-05, -0.018445273861289024, -0.00036006642039865255, -1.5258672647178173e-05, -4.172316494077677e-06, -0.0009958551963791251, -0.0031342213042080402, -0.06235566735267639, -0.00039295581518672407, -0.1262177973985672, -2.3841830625315197e-06, -4.8874615458771586e-05, -3.814689989667386e-06, -1.168244216387393e-05, -0.0024207117967307568, -0.001649330137297511], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0011956692906096578, -3.731181277544238e-05, -2.2411095415009186e-05, -0.8128222227096558], "finish_reason": "stop"}], "metrics": {"energy": 229.51337028694152, "energy_per_token": 2.3661172194530056, "time": 7.3221526, "time_per_token": 0.07548610927835052}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.8074540495872498, -0.0013555632904171944, -0.1217193603515625, -0.04539211094379425, -0.010575207881629467], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.9021384716033936, -0.003985914401710033], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.5026652812957764, -0.14837948977947235, -0.07345515489578247, -0.0003303935518488288, -9.238292841473594e-05, -0.004850881639868021, -0.0020950529724359512, -0.2822282612323761, -0.004612757824361324, -2.825220326485578e-05, -0.06538712978363037, -3.838465272565372e-05, -5.364403477869928e-06, -0.06486262381076813, -0.10625023394823074], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0017613149248063564, -0.6416689157485962, -0.10447826236486435, -0.5323024392127991, -0.003706966992467642, -0.005918951705098152, -0.001404728856869042, -0.013128978200256824, -0.0003337303060106933, -0.009755554609000683, -0.0021048076450824738, -0.10643737018108368, -0.003225127002224326, -0.5591073632240295], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-1.6425304412841797, -0.0014975772937759757, -0.0001294529065489769, -0.0004337085410952568, -0.0025531810242682695, -0.014074943028390408, -0.00013517419574782252, -6.198863957251888e-06, -0.0016644446877762675, -0.01622730866074562], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.06923691928386688, -0.06535821408033371, -0.08648598194122314, -0.04777371138334274, -0.018349887803196907], "finish_reason": "stop"}, {"text": " pattern == '':", "tokens": [" pattern", " ==", " '", "':", "\n"], "logprobs": [-0.6269100308418274, -1.6152434349060059, -0.9586042761802673, -0.009877377189695835, -0.030221033841371536], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.03968731686472893, -0.00022754464589525014, -0.00026174934464506805, -0.0202208049595356], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.042538926005363464, -0.00019429226813372225, -3.8742269680369645e-05, -0.019114581868052483, -0.00033087024348787963, -1.3470558769768104e-05, -3.814689989667386e-06, -0.0007550249574705958, -0.0025381988380104303, -0.077793650329113, -0.0003968881501350552, -0.12131661176681519, -2.50339189733495e-06, -4.732496745418757e-05, -4.768360213347478e-06, -8.34461570775602e-06, -0.0022401732858270407, -0.0017027654685080051], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0013628251617774367, -2.884823152271565e-05, -2.0265373677830212e-05, -1.2078322172164917, -3.576278118089249e-07, -1.7881377516459906e-06, -2.2649508537142538e-05, -0.0002696150622796267, -0.07193539291620255], "finish_reason": "stop"}], "metrics": {"energy": 164.48566490364078, "energy_per_token": 1.8906398264786297, "time": 6.0858583, "time_per_token": 0.06995239425287356}}
{"outputs": [{"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.6944054961204529, -4.0411134250462055e-05, -0.18112193048000336, -0.010873589664697647, -0.030507368966937065, -0.23766186833381653, -0.008505902253091335, -0.013048852793872356, -0.1386948972940445, -0.01482799369841814], "finish_reason": "stop"}, {"text": " [word for word in words if re.match(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "match", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.9217401146888733, -0.13778981566429138, -0.3943213224411011, -0.005042572971433401, -0.0010113369207829237, -0.023314859718084335, -0.024613501504063606, -0.058001384139060974, -0.00010680581908673048, -0.6735106706619263, -0.005091083236038685, -0.026589879766106606, -0.0028704889118671417, -0.005247153807431459, -0.10415326803922653, -0.0035890231374651194], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.490594744682312, -0.14667388796806335, -0.0864500105381012, -0.00032824851223267615, -0.0001230164198204875, -0.004829646088182926, -0.002190335188060999, -0.26700398325920105, -0.005003668367862701, -2.90866428258596e-05, -0.07165024429559708, -1.3470558769768104e-05, -6.556489552167477e-06, -0.04864490032196045, -0.09298758208751678], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0024103655014187098, -0.7823315262794495, -0.004069500602781773, -0.0008600826840847731, -0.14869524538516998, -0.4879848062992096, -0.0015919642755761743, -0.007711521815508604, -0.001620409544557333, -0.009238234721124172, -0.0002361257211305201, -0.01540323905646801, -0.0017591729993000627, -0.08632896840572357, -0.005984483286738396, -0.49669578671455383], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.23775632679462433, -0.0006030171643942595, -0.00017796363681554794, -0.00047219570842571557, -0.003437920706346631, -0.009142677299678326, -8.260862523457035e-05, -4.887569048150908e-06, -0.0025593640748411417, -0.018022118136286736], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0592009499669075, -0.06484418362379074, -0.08453172445297241, -0.03936188295483589, -0.020896747708320618], "finish_reason": "stop"}, {"text": " len(pattern.strip()) > 0:", "tokens": [" len", "(", "pattern", ".", "strip", "())", " >", " ", "0", ":", "\n"], "logprobs": [-1.9228541851043701, -0.00022671037004329264, -0.041443176567554474, -2.8224270343780518, -0.14420095086097717, -0.13467733561992645, -1.3035752773284912, -0.0032623186707496643, -0.007953639142215252, -0.007819044403731823, -0.017688969150185585], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.03613872826099396, -0.00020930961181875318, -0.0002644904307089746, -0.019613608717918396], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03687925636768341, -0.00020430385484360158, -4.8040190449682996e-05, -0.017255300655961037, -0.00034588552080094814, -1.8358061424805783e-05, -3.6954811548639555e-06, -0.0008181562297977507, -0.0024311768356710672, -0.07143960893154144, -0.000336590368533507, -0.11113666743040085, -2.264974000354414e-06, -4.2199197196168825e-05, -4.291525328881107e-06, -1.0251946150674485e-05, -0.0022413628175854683, -0.0020038066431879997], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0013948483392596245, -2.706014311115723e-05, -1.9430925021879375e-05, -1.1443202495574951, -4.768370445162873e-07, -1.9073468138230965e-06, -2.8132995794294402e-05, -0.0002181292074965313, -0.07764166593551636], "finish_reason": "stop"}], "metrics": {"energy": 205.18108586692819, "energy_per_token": 1.7998340865520017, "time": 7.5352507, "time_per_token": 0.06609869035087719}}
{"outputs": [{"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.5665106177330017, -4.327203714638017e-05, -0.20871800184249878, -0.00978896301239729, -0.025670558214187622, -0.27895665168762207, -0.008303523994982243, -0.010849297977983952, -0.14446252584457397, -0.014948965050280094], "finish_reason": "stop"}, {"text": " [word for word in words if re.match(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "match", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.9287142157554626, -0.15699434280395508, -0.40334147214889526, -0.004181570839136839, -0.001082192175090313, -0.019328581169247627, -0.024915166199207306, -0.06415349245071411, -0.00010013079008786008, -0.7230975031852722, -0.008972563780844212, -0.028478248044848442, -0.0025750594213604927, -0.0051255966536700726, -0.07582231611013412, -0.003275388851761818], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.5056778192520142, -0.20128388702869415, -0.08100073039531708, -0.0003541081096045673, -0.00010883215873036534, -0.00686749629676342, -0.0021808191668242216, -0.2673037648200989, -0.005015173926949501, -2.4318398573086597e-05, -0.06673289090394974, -2.3364747903542593e-05, -5.483612312673358e-06, -0.054017554968595505, -0.08191122859716415], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.002015108708292246, -0.6084330081939697, -0.00391763960942626, -0.000811366830021143, -0.1259491890668869, -0.45335209369659424, -0.0017877324717119336, -0.006635773461312056, -0.0013861581683158875, -0.00834691058844328, -0.0002711643755901605, -0.018651694059371948, -0.001806057756766677, -0.11112429946660995, -0.005421459209173918, -0.5090116262435913], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2699654996395111, -0.0005410637822933495, -0.0001433984871255234, -0.0005340342177078128, -0.002245168900117278, -0.008396324701607227, -0.00010168035078095272, -5.006777428206988e-06, -0.0022744282614439726, -0.020642448216676712], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.057264406234025955, -0.07160752266645432, -0.09349614381790161, -0.04060850292444229, -0.02169857546687126], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.6056491732597351, -0.498815655708313, -0.01268026139587164], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0461079478263855, -0.00018654513405635953, -0.00025078488397412, -0.024491017684340477], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.033623870462179184, -0.0001538873475510627, -4.541770613286644e-05, -0.0174255333840847, -0.0003843760641757399, -1.6093124941107817e-05, -4.529942543740617e-06, -0.0008280424517579377, -0.002912804950028658, -0.07657954096794128, -0.00031454383861273527, -0.10919669270515442, -2.0265558760002023e-06, -5.340433563105762e-05, -4.529942543740617e-06, -8.4638240878121e-06, -0.002762194722890854, -0.0015757775399833918], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0014154425589367747, -2.3364747903542593e-05, -2.1934269170742482e-05, -0.7850027084350586], "finish_reason": "stop"}], "metrics": {"energy": 187.45049648475643, "energy_per_token": 1.8559455097500637, "time": 6.9049897, "time_per_token": 0.06836623465346535}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.8224294185638428, -0.0014782940270379186, -0.09923131763935089, -0.04978405684232712, -0.009786837734282017], "finish_reason": "stop"}, {"text": " [word for word in words if re.match(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "match", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-1.0863423347473145, -0.19572006165981293, -0.4654558300971985, -0.004597688093781471, -0.0011363723315298557, -0.020433049649000168, -0.025778722018003464, -0.06450191885232925, -9.440929716220126e-05, -0.8618981838226318, -0.0076665692031383514, -0.030662529170513153, -0.002929207868874073, -0.005623354576528072, -0.11143690347671509, -0.0027451948262751102], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words][::-1]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "][", "::", "-", "1", "]", "\n"], "logprobs": [-0.4562394618988037, -0.1322299689054489, -0.055535003542900085, -0.0002924968139268458, -9.381330892210826e-05, -0.005296958610415459, -0.0019311128417029977, -0.2547375559806824, -0.004619165789335966, -2.6940935640595853e-05, -0.07375883311033249, -2.3603161025675945e-05, -5.960446742392378e-06, -2.9121735095977783, -0.04117334261536598, -0.026366515085101128, -0.00011252723925281316, -0.0030463975854218006, -0.4581795334815979], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word)", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", "\n"], "logprobs": [-0.0021629766561090946, -0.6312093138694763, -0.09508855640888214, -0.4765491783618927, -0.0033933697268366814, -0.006008656695485115, -0.0015643513761460781, -0.011800602078437805, -0.00033158526639454067, -0.011391125619411469, -0.0022549221757799387, -2.604654312133789], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.24758966267108917, -0.0005566716426983476, -0.00016973962192423642, -0.0005003153928555548, -0.0022399353329092264, -0.00979982316493988, -0.00011407678539399058, -5.125986263010418e-06, -0.002185339340940118, -0.018465401604771614], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.058196425437927246, -0.07328987866640091, -0.0728592723608017, -0.039024993777275085, -0.019696950912475586], "finish_reason": "stop"}, {"text": " pattern != \"\":", "tokens": [" pattern", " ", "!", "=", " \"", "\":", "\n"], "logprobs": [-0.5811826586723328, -2.2034213542938232, -5.376194530981593e-05, -8.022463589441031e-05, -0.5504113435745239, -0.03185490891337395, -0.01349740382283926], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.04233212396502495, -0.0002244459028588608, -0.00022396916756406426, -0.01665087230503559], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03788452595472336, -0.00015531764074694365, -4.1483970562694594e-05, -0.02304672822356224, -0.000359351426595822, -1.8596476365928538e-05, -2.861018856492592e-06, -0.000777776469476521, -0.002581717912107706, -0.06541504710912704, -0.0003426679759286344, -0.12407083064317703, -2.264974000354414e-06, -4.970903682988137e-05, -4.172316494077677e-06, -7.152531907195225e-06, -0.0023099901154637337, -0.001715261023491621], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.001053731539286673, -3.099393507000059e-05, -1.728519782773219e-05, -0.7782313227653503], "finish_reason": "stop"}], "metrics": {"energy": 220.0768840885162, "energy_per_token": 2.200768840885162, "time": 7.5272517, "time_per_token": 0.075272517}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.9040018916130066, -0.0013580633094534278, -0.10785511881113052, -0.0438469722867012, -0.009653315879404545], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8352550864219666, -0.004075674340128899], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.5073257684707642, -0.1587255746126175, -0.0839209258556366, -0.0003232433518860489, -0.00010895135346800089, -0.006089467089623213, -0.0022722873836755753, -0.2745595872402191, -0.004814342129975557, -2.5748875486897305e-05, -0.10427389293909073, -5.4834770708112046e-05, -6.198863957251888e-06, -0.05003989860415459, -0.13493850827217102], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.002569708740338683, -0.6906952261924744, -0.10134001821279526, -0.5279300808906555, -0.002806179691106081, -0.005884940270334482, -0.0014187756460160017, -0.010450992733240128, -0.0003389737685211003, -0.011455120518803596, -0.0019891730044037104, -0.09587455540895462, -0.0039130086079239845, -0.5151249766349792], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.27507200837135315, -0.0005156855913810432, -0.0001333863037871197, -0.0005376085755415261, -0.002033072989434004, -0.007367346435785294, -9.822363062994555e-05, -4.291525328881107e-06, -0.001977394800633192, -0.0183180533349514], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.06189657375216484, -0.06778670102357864, -0.08251523971557617, -0.041034337133169174, -0.02166661247611046], "finish_reason": "stop"}, {"text": " len(pattern) == 0:", "tokens": [" len", "(", "pattern", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.9414751529693604, -0.00026341783814132214, -0.0437006913125515, -0.14240114390850067, -0.7786952257156372, -0.0013912770664319396, -0.0036529258359223604, -0.012722517363727093, -0.06567205488681793], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.044158175587654114, -0.00023541064001619816, -0.00022492263815365732, -0.020390884950757027], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03574829921126366, -0.0002195594133809209, -4.339123915997334e-05, -0.019045811146497726, -0.0002829628065228462, -1.9192511899746023e-05, -4.529942543740617e-06, -0.0008629412623122334, -0.0021950930822640657, -0.071334607899189, -0.0003632839070633054, -0.12215939164161682, -2.264974000354414e-06, -5.125868119648658e-05, -4.0531076592742465e-06, -8.583032467868179e-06, -0.002571254502981901, -0.00158410903532058], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df"], "logprobs": [-0.0012559153838083148, -2.729855441430118e-05, -1.549708758830093e-05], "finish_reason": "stop"}], "metrics": {"energy": 168.1002639789582, "energy_per_token": 1.9776501644583317, "time": 6.0634704, "time_per_token": 0.07133494588235294}}
{"outputs": [{"text": " [word for word in re.split(r'\\s+', text) if re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-3.520374059677124, -0.13473328948020935, -0.4253866970539093, -0.008480370976030827, -0.0019102912629023194, -0.925743579864502, -5.7338023907504976e-05, -0.7194762825965881, -0.35540837049484253, -0.4380277693271637, -0.16860662400722504, -0.2603914737701416, -0.14354777336120605, -5.6503606174374e-05, -0.01052413135766983, -0.041615404188632965, -0.055159635841846466, -0.2070356011390686, -0.0003947432560380548, -0.3811616599559784, -0.008647849783301353, -0.07481278479099274, -0.002311655320227146, -0.003478430677205324, -0.08519437164068222, -0.0028514699079096317], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-2.2570853233337402, -3.838465272565372e-05, -0.02394530363380909, -0.06560340523719788, -0.021557068452239037, -0.11246106773614883, -0.005026204977184534, -0.024672701954841614, -0.23436452448368073, -0.007237170357257128], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.5343330502510071, -0.13316169381141663, -0.06864575296640396, -0.0003212174342479557, -8.964136941358447e-05, -0.006548256613314152, -0.0017933252966031432, -0.2446516901254654, -0.004913280252367258, -2.706014311115723e-05, -0.07700864970684052, -9.65590606938349e-06, -5.8412379075889476e-06, -0.06669453531503677, -0.12473620474338531], "finish_reason": "stop"}, {"text": "pop()", "tokens": ["pop", "()", "\n"], "logprobs": [-0.0019123139791190624, -0.5387466549873352, -2.3453524112701416], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2548378109931946, -0.0005208089714869857, -0.00017331528943032026, -0.00047362555051222444, -0.0021664262749254704, -0.010429286397993565, -0.00011944057769142091, -4.887569048150908e-06, -0.0025491383858025074, -0.019019611179828644], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0688735619187355, -0.07029564678668976, -0.09496356546878815, -0.039818380028009415, -0.01891784742474556], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.5767464637756348, -0.43952539563179016, -0.012484495528042316], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0460834726691246, -0.00018535325943958014, -0.00028868322260677814, -0.018295813351869583], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03211053088307381, -0.00019274283840786666, -4.8040190449682996e-05, -0.02648760750889778, -0.0003543464408721775, -1.8000440832111053e-05, -3.576272320060525e-06, -0.0007033258443698287, -0.0025864739436656237, -0.0604090690612793, -0.00036376056959852576, -0.1312878578901291, -1.5497195136049413e-06, -5.1377883210079744e-05, -4.172316494077677e-06, -7.748573807475623e-06, -0.002552943304181099, -0.0017272805562242866], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.001208409434184432, -2.5152843591058627e-05, -2.1576648578047752e-05, -0.7295765280723572], "finish_reason": "stop"}], "metrics": {"energy": 195.91065075111388, "energy_per_token": 1.9990882729705497, "time": 6.898235, "time_per_token": 0.07039015306122448}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.8652595281600952, -0.001209004782140255, -0.10238339006900787, -0.05038375407457352, -0.011304259300231934], "finish_reason": "stop"}, {"text": " [word for word in words if re.match(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "match", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-1.014657735824585, -0.17456193268299103, -0.4825619161128998, -0.004648711532354355, -0.0010698077967390418, -0.015427302569150925, -0.023075735196471214, -0.057535674422979355, -0.00010406429646536708, -0.7249816656112671, -0.005630585830658674, -0.02937299944460392, -0.0031262594275176525, -0.005679541267454624, -0.1075846403837204, -0.002814976265653968], "finish_reason": "stop"}, {"text": " [word if re.search(pattern, word) else word for word in words]", "tokens": [" [", "word", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", " for", " word", " in", " words", "]", "\n"], "logprobs": [-0.4558631479740143, -0.12280791252851486, -2.916674852371216, -0.28601765632629395, -0.0008354272576980293, -0.0034538398031145334, -0.0004549183649942279, -0.0018385426374152303, -0.000129691296024248, -0.002931228606030345, -0.0005422552349045873, -0.02355940081179142, -0.03719504922628403, -0.029673000797629356, -0.0009999042376875877, -0.00019703354337252676, -0.004249827936291695, -0.008239799179136753, -0.0014034194173291326], "finish_reason": "stop"}, {"text": "pop(0) if len(matched_words) > 0 else word", "tokens": ["pop", "(", "0", ")", " if", " len", "(", "matched", "_", "words", ")", " >", " ", "0", " else", " word", "\n"], "logprobs": [-0.001568041043356061, -0.8422887325286865, -0.004808647558093071, -0.0009009354980662465, -0.1388174444437027, -2.5295157432556152, -0.00025722055579535663, -0.09888733178377151, -4.434487345861271e-05, -3.9219088648678735e-05, -0.020443327724933624, -0.35022658109664917, -0.011233063414692879, -0.006124064326286316, -0.21161215007305145, -0.2202284038066864, -0.4726249575614929], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2508087754249573, -0.0006311332108452916, -0.00015662873920518905, -0.00052998325554654, -0.0020234365947544575, -0.00911184586584568, -9.60780744208023e-05, -4.6491513785440475e-06, -0.002181057119742036, -0.019049905240535736], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.07167743146419525, -0.04932187870144844, -0.08488494902849197, -0.04194776341319084, -0.01859014667570591], "finish_reason": "stop"}, {"text": " not pattern:", "tokens": [" not", " pattern", ":", "\n"], "logprobs": [-1.602750301361084, -0.10458800196647644, -0.09565942734479904, -0.05289711803197861], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.03724076226353645, -0.00021109737281221896, -0.00023827097902540118, -0.01866421289741993], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03289223089814186, -0.00014840454969089478, -4.327203714638017e-05, -0.018758047372102737, -0.000328367663314566, -1.8000440832111053e-05, -3.099436753473128e-06, -0.000700466800481081, -0.0024076304398477077, -0.06977903842926025, -0.0003426679759286344, -0.15794634819030762, -1.7881377516459906e-06, -4.31528314948082e-05, -4.291525328881107e-06, -8.106198947643861e-06, -0.0023825373500585556, -0.0016318351263180375], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0015140033792704344, -2.312633478140924e-05, -2.0146166207268834e-05, -0.7755337357521057], "finish_reason": "stop"}], "metrics": {"energy": 210.48724568557742, "energy_per_token": 2.063600447897818, "time": 6.933589, "time_per_token": 0.06797636274509804}}
{"outputs": [{"text": " re.split('\\s+', text)", "tokens": [" re", ".", "split", "('", "\\", "s", "+'", ",", " text", ")", "\n"], "logprobs": [-0.600845992565155, -4.7801782784517854e-05, -2.108013153076172, -1.2608158588409424, -0.1880420446395874, -0.24622021615505219, -0.05513526871800423, -0.0001006075763143599, -0.007077859248965979, -0.06412810832262039, -0.03274526074528694], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.840697705745697, -0.004165663383901119], "finish_reason": "stop"}, {"text": " words[:len(words)-len(matched_words)] + matched_words", "tokens": [" words", "[:", "len", "(", "words", ")-", "len", "(", "matched", "_", "words", ")]", " +", " matched", "_", "words", "\n"], "logprobs": [-2.71482515335083, -0.2426002472639084, -1.0584983825683594, -0.0007818264421075583, -0.15484532713890076, -1.375190019607544, -0.007457513362169266, -0.0002269487304147333, -0.0032052830792963505, -1.5616295058862306e-05, -3.099436753473128e-06, -0.005272886715829372, -0.159746453166008, -0.019382599741220474, -1.5258672647178173e-05, -2.50339189733495e-06, -0.1398993730545044], "finish_reason": "stop"}, {"text": "pop(0) if matched_words and re.search(pattern, word)", "tokens": ["pop", "(", "0", ")", " if", " matched", "_", "words", " and", " re", ".", "search", "(", "pattern", ",", " word", ")", "\n"], "logprobs": [-0.0028435057029128075, -0.8333048820495605, -0.0038430660497397184, -0.0010407513473182917, -0.12269783020019531, -2.478501558303833, -0.0011593532981351018, -0.01592535711824894, -2.3663952350616455, -0.6100103855133057, -0.0013183006085455418, -0.020115308463573456, -0.0022481423802673817, -0.011948325671255589, -0.00034767304896377027, -0.14945439994335175, -0.003214194905012846, -1.7125486135482788], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.23397789895534515, -0.000626367807853967, -0.000164018536452204, -0.0006051616510376334, -0.002036522841081023, -0.01094834879040718, -9.822363062994555e-05, -5.125986263010418e-06, -0.0023824183735996485, -0.01700112596154213], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0688309371471405, -0.07036631554365158, -0.10331806540489197, -0.04688083380460739, -0.02090281993150711], "finish_reason": "stop"}, {"text": " pattern == \"\":", "tokens": [" pattern", " ==", " \"", "\":", "\n"], "logprobs": [-0.6248066425323486, -1.6276357173919678, -0.5318835377693176, -0.03198850154876709, -0.01791779324412346], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.042668700218200684, -0.00021920185827184469, -0.0002632986579556018, -0.020374532788991928], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03371216356754303, -0.00020454221521504223, -5.149708886165172e-05, -0.01708339713513851, -0.0003181189822498709, -1.7165990357170813e-05, -3.3378546504536644e-06, -0.0009488132782280445, -0.002880354877561331, -0.08817407488822937, -0.00038556772051379085, -0.12926113605499268, -1.5497195136049413e-06, -4.9232225137529895e-05, -4.768360213347478e-06, -8.821448318485636e-06, -0.002901156432926655, -0.0018841149285435677], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df"], "logprobs": [-0.0013234198559075594, -2.825220326485578e-05, -1.847726889536716e-05], "finish_reason": "stop"}], "metrics": {"energy": 191.66472169685358, "energy_per_token": 2.0609109859876726, "time": 6.9027796, "time_per_token": 0.07422343655913978}}
{"outputs": [{"text": " re.findall(r'\\b(?!' + pattern + r')\\w+', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "b", "(", "?", "!", "'", " +", " pattern", " +", " r", "')\\", "w", "+'", ",", " text", ")", "\n"], "logprobs": [-0.6857106685638428, -3.766942609217949e-05, -0.19442979991436005, -0.008736010640859604, -0.030233873054385185, -1.6623607873916626, -0.07290327548980713, -0.8587058186531067, -0.5621324181556702, -0.016544295474886894, -1.860792636871338, -2.9107248783111572, -0.001341753639280796, -0.043887246400117874, -0.03777008503675461, -0.023274563252925873, -0.28072884678840637, -0.14168648421764374, -0.4748120605945587, -0.00027044929447583854, -0.00835589598864317, -0.13349513709545135, -0.020844679325819016], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8723234534263611, -0.003874178510159254], "finish_reason": "stop"}, {"text": " [matched_words[0]] + [word for word in words if word not in matched_words]", "tokens": [" [", "matched", "_", "words", "[", "0", "]]", " +", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.5343330502510071, -2.790550470352173, -0.00024768622824922204, -0.024078909307718277, -0.5107942223548889, -1.7674862146377563, -0.06304100155830383, -1.0018417835235596, -0.68841952085495, -0.16838684678077698, -0.030422264710068703, -0.0051162270829081535, -0.00015817821258679032, -0.007206872571259737, -0.6092784404754639, -0.06934892386198044, -0.0822376012802124, -0.00018821375851985067, -0.002447825390845537, -0.00029774048016406596, -5.8412379075889476e-06, -0.22854655981063843, -0.013171685859560966], "finish_reason": "stop"}, {"text": "pop() if matched_words else word", "tokens": ["pop", "()", " if", " matched", "_", "words", " else", " word", "\n"], "logprobs": [-0.0019123139791190624, -0.5387466549873352, -0.1065085306763649, -2.8420889377593994, -0.001311752712354064, -0.03965775668621063, -0.28361260890960693, -0.1959294080734253, -0.6511879563331604], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2548378109931946, -0.0005208089714869857, -0.00017331528943032026, -0.00047362555051222444, -0.0021664262749254704, -0.010429286397993565, -0.00011944057769142091, -4.887569048150908e-06, -0.0025491383858025074, -0.019019611179828644], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0688735619187355, -0.07029564678668976, -0.09496356546878815, -0.039818380028009415, -0.01891784742474556], "finish_reason": "stop"}, {"text": " pattern == \"\":", "tokens": [" pattern", " ==", " \"", "\":", "\n"], "logprobs": [-0.5767464637756348, -1.5790574550628662, -0.5969549417495728, -0.02869071625173092, -0.02122766338288784], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0460834726691246, -0.00018535325943958014, -0.00028868322260677814, -0.018295813351869583], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03211053088307381, -0.00019274283840786666, -4.8040190449682996e-05, -0.02648760750889778, -0.0003543464408721775, -1.8000440832111053e-05, -3.576272320060525e-06, -0.0007033258443698287, -0.0025864739436656237, -0.0604090690612793, -0.00036376056959852576, -0.1312878578901291, -1.5497195136049413e-06, -5.1377883210079744e-05, -4.172316494077677e-06, -7.748573807475623e-06, -0.002552943304181099, -0.0017272805562242866], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.001208409434184432, -2.5152843591058627e-05, -2.1576648578047752e-05, -1.2136693000793457, -4.768370445162873e-07, -2.0265558760002023e-06, -2.706014311115723e-05, -0.00017426878912374377, -0.07276129722595215], "finish_reason": "stop"}], "metrics": {"energy": 225.9923096942901, "energy_per_token": 2.0925213860582415, "time": 7.3155813, "time_per_token": 0.06773686388888889}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.8074540495872498, -0.0013555632904171944, -0.1217193603515625, -0.04539211094379425, -0.010575207881629467], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.9021384716033936, -0.003985914401710033], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words] + matched_words", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", " +", " matched", "_", "words", "\n"], "logprobs": [-0.5026652812957764, -0.14837948977947235, -0.07345515489578247, -0.0003303935518488288, -9.238292841473594e-05, -0.004850881639868021, -0.0020950529724359512, -0.2822282612323761, -0.004612757824361324, -2.825220326485578e-05, -0.06538712978363037, -3.838465272565372e-05, -5.364403477869928e-06, -0.06486262381076813, -2.3034300804138184, -0.0252113938331604, -0.000296310376143083, -2.0265558760002023e-06, -0.00595521368086338], "finish_reason": "stop"}, {"text": "pop() if matched_words else word for word in words", "tokens": ["pop", "()", " if", " matched", "_", "words", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.0017613149248063564, -0.6416689157485962, -0.10447826236486435, -3.217210292816162, -0.0009835887467488647, -0.041711337864398956, -0.29475292563438416, -0.2315271496772766, -0.7629455924034119, -0.011722843162715435, -0.0024780300445854664, -0.030068350955843925, -0.21778549253940582], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2530650794506073, -0.000606710382271558, -0.00014804698002990335, -0.0005302215577103198, -0.0017744047800078988, -0.008696421980857849, -0.00010692501382436603, -4.172316494077677e-06, -0.0017604819731786847, -0.018971888348460197], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0651959478855133, -0.06974368542432785, -0.09375927597284317, -0.04536043852567673, -0.020921381190419197], "finish_reason": "stop"}, {"text": " len(pattern.strip()) == 0:", "tokens": [" len", "(", "pattern", ".", "strip", "())", " ==", " ", "0", ":", "\n"], "logprobs": [-1.766974687576294, -0.0002864189154934138, -0.04873153567314148, -2.756253957748413, -0.1486310362815857, -0.11550529301166534, -0.5228233933448792, -0.0009754904895089567, -0.0010795724811032414, -0.007249952293932438, -0.0723387822508812], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.03878581151366234, -0.00018404220463708043, -0.00024720950750634074, -0.02072920650243759], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03692670539021492, -0.00021801002731081098, -3.3378044463461265e-05, -0.02177136205136776, -0.00037317464011721313, -1.9192511899746023e-05, -3.6954811548639555e-06, -0.000900101731531322, -0.002679093973711133, -0.0650445967912674, -0.0003203832311555743, -0.1040414422750473, -2.264974000354414e-06, -4.6132929128361866e-05, -3.933898824470816e-06, -7.986990567587782e-06, -0.002708934945985675, -0.0019135037437081337], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0011536378879100084, -2.455681169521995e-05, -2.038458114839159e-05, -0.7423465847969055], "finish_reason": "stop"}], "metrics": {"energy": 180.25367998313902, "energy_per_token": 1.980809670144385, "time": 6.508046, "time_per_token": 0.07151698901098902}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.8224294185638428, -0.0014782940270379186, -0.09923131763935089, -0.04978405684232712, -0.009786837734282017], "finish_reason": "stop"}, {"text": " [word[::-1] for word in words]", "tokens": [" [", "word", "[", "::", "-", "1", "]", " for", " word", " in", " words", "]", "\n"], "logprobs": [-1.0863423347473145, -0.19572006165981293, -1.08982253074646, -0.004609791561961174, -0.00245710089802742, -3.2066785934148356e-05, -0.000331704446580261, -0.03043394349515438, -0.004072468727827072, -0.00042703570215962827, -0.020552294328808784, -1.5325896739959717, -0.01568598486483097], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words] + matched_words", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", " +", " matched", "_", "words", "\n"], "logprobs": [-0.5322340130805969, -0.17839878797531128, -0.08897337317466736, -0.00042691652197390795, -0.00011884459672728553, -0.007442486006766558, -0.0021489402279257774, -0.2455727905035019, -0.0038659849669784307, -2.2649508537142538e-05, -0.05844945088028908, -3.7788631743751466e-05, -5.245195097813848e-06, -0.06048234552145004, -2.457929849624634, -0.02279472164809704, -0.00024375328212045133, -2.861018856492592e-06, -0.005366087891161442], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0028036832809448242, -0.662136435508728, -0.08726904541254044, -0.46957483887672424, -0.0039152647368609905, -0.005081357900053263, -0.0014313939027488232, -0.012832092121243477, -0.0003408804477658123, -0.01164236944168806, -0.001983581343665719, -0.09900297969579697, -0.004227273631840944, -0.47357991337776184], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.26664018630981445, -0.0005735897575505078, -0.0001629458274692297, -0.0005109196645207703, -0.0018712644232437015, -0.00967881828546524, -0.00010466027742950246, -5.125986263010418e-06, -0.001958239823579788, -0.017710402607917786], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.06711196899414062, -0.08129222691059113, -0.07921689003705978, -0.03869682177901268, -0.018661638721823692], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.5477904081344604, -0.4208572208881378, -0.014766328036785126], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.03557586669921875, -0.00020776021119672805, -0.0002954761730507016, -0.020792024210095406], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.031804099678993225, -0.00015186110977083445, -3.707340147229843e-05, -0.02636047638952732, -0.00034850722295232117, -2.0861407392658293e-05, -3.3378546504536644e-06, -0.0007904027588665485, -0.002770516322925687, -0.07738804817199707, -0.0003152588615193963, -0.13646164536476135, -2.3841830625315197e-06, -4.351044481154531e-05, -5.602820692729438e-06, -7.510157047363464e-06, -0.0027042983565479517, -0.0016180293168872595], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0011024356354027987, -2.5629668016335927e-05, -1.8954096958623268e-05, -1.1146348714828491, -4.768370445162873e-07, -1.9073468138230965e-06, -2.312633478140924e-05, -0.0001668790791882202, -0.06986609101295471], "finish_reason": "stop"}], "metrics": {"energy": 199.7186453361512, "energy_per_token": 1.997186453361512, "time": 7.322059, "time_per_token": 0.07322059}}
{"outputs": [{"text": " [word for word in re.split(r'\\s+', text) if re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " re", ".", "split", "(", "r", "'\\", "s", "+'", ",", " text", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-3.520374059677124, -0.13473328948020935, -0.4253866970539093, -0.008480370976030827, -0.0019102912629023194, -0.925743579864502, -5.7338023907504976e-05, -0.7194762825965881, -0.35540837049484253, -0.4380277693271637, -0.16860662400722504, -0.2603914737701416, -0.14354777336120605, -5.6503606174374e-05, -0.01052413135766983, -0.041615404188632965, -0.055159635841846466, -0.2070356011390686, -0.0003947432560380548, -0.3811616599559784, -0.008647849783301353, -0.07481278479099274, -0.002311655320227146, -0.003478430677205324, -0.08519437164068222, -0.0028514699079096317], "finish_reason": "stop"}, {"text": " [word for word in words if re.search(pattern, word) is not None]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " is", " not", " None", "]", "\n"], "logprobs": [-0.9622778296470642, -0.14565594494342804, -0.4378555119037628, -0.004864168353378773, -0.0011449456214904785, -0.01957000605762005, -0.021259406581521034, -0.06574952602386475, -8.630380034446716e-05, -0.7462487816810608, -0.0083414725959301, -0.04468248412013054, -0.002704060636460781, -0.006243131123483181, -3.1160972118377686, -0.3133639693260193, -0.012192481197416782, -6.0794889577664435e-05, -0.0024732735473662615, -0.0010443239007145166], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.5763657689094543, -0.12201990932226181, -0.0859084278345108, -0.00046230596490204334, -0.00011657988943625242, -0.006419868674129248, -0.0024159548338502645, -0.2174019068479538, -0.005020985845476389, -2.253030106658116e-05, -0.057445406913757324, -4.6132929128361866e-05, -6.318072337307967e-06, -0.05368398502469063, -0.09754244983196259], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0021764179691672325, -0.5933286547660828, -0.14816826581954956, -0.48878470063209534, -0.0027438870165497065, -0.005617664661258459, -0.0017473918851464987, -0.013346615247428417, -0.0003607814433053136, -0.010902834124863148, -0.0021063541062176228, -0.08855929225683212, -0.0028641889803111553, -0.5444209575653076], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-1.7375174760818481, -0.001686461502686143, -0.00014888131408952177, -0.00042655906872823834, -0.0024651873391121626, -0.013117565773427486, -0.00015686711412854493, -5.483612312673358e-06, -0.0020690003875643015, -0.019114229828119278], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0655781701207161, -0.07745733112096786, -0.09374071657657623, -0.044167183339595795, -0.020586978644132614], "finish_reason": "stop"}, {"text": " len(pattern) == 0:", "tokens": [" len", "(", "pattern", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.9773626327514648, -0.0002308817347511649, -0.051181547343730927, -0.143906369805336, -0.7330713868141174, -0.0013068715343251824, -0.0038294093683362007, -0.01270297821611166, -0.0597296766936779], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.030115200206637383, -0.0002324311062693596, -0.0002379134384682402, -0.018802855163812637], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.041045550256967545, -0.00014161060971673578, -3.3378044463461265e-05, -0.02140714041888714, -0.00024351492174901068, -1.9073304429184645e-05, -5.006777428206988e-06, -0.0008423355757258832, -0.0028639512602239847, -0.06421453505754471, -0.00038187362952157855, -0.14039331674575806, -1.6689286894688848e-06, -5.471556869451888e-05, -4.172316494077677e-06, -8.106198947643861e-06, -0.0023890782613307238, -0.0016279076226055622], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0011945976875722408, -2.539125671319198e-05, -2.038458114839159e-05, -1.0782842636108398, -4.768370445162873e-07, -1.5497195136049413e-06, -3.1709168979432434e-05, -0.00015960850578267127, -0.07519268244504929], "finish_reason": "stop"}], "metrics": {"energy": 231.89219379997252, "energy_per_token": 1.7837861061536346, "time": 8.383494, "time_per_token": 0.06448841538461539}}
{"outputs": [{"text": " re.findall(r'\\w+', text)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n"], "logprobs": [-0.6857106685638428, -3.766942609217949e-05, -0.19442979991436005, -0.008736010640859604, -0.030233873054385185, -1.6623607873916626, -0.07290327548980713, -0.6858313679695129, -0.02998540550470352, -8.046303264563903e-05, -0.010115430690348148, -0.03341832756996155, -0.02730364166200161], "finish_reason": "stop"}, {"text": " re.findall(r\"\\b(?:red|yellow|green|car|apple|yellow)\\b\", text)", "tokens": [" re", ".", "find", "all", "(", "r", "\"", "\\", "b", "(", "?", ":", "red", "|", "yellow", "|", "green", "|", "car", "|", "apple", "|", "yellow", ")\\", "b", "\"", ",", " text", ")", "\n"], "logprobs": [-2.2570853233337402, -3.838465272565372e-05, -0.02394530363380909, -0.06560340523719788, -0.021557068452239037, -2.5697021484375, -2.8421621322631836, -0.1356830894947052, -0.08923748880624771, -0.1981639266014099, -0.018817361444234848, -0.582808792591095, -3.042840003967285, -0.05983084812760353, -0.8757612109184265, -0.031319208443164825, -0.29771217703819275, -0.5505606532096863, -0.731817364692688, -0.22786566615104675, -0.03324133902788162, -0.053532470017671585, -0.21173620223999023, -0.04579905793070793, -0.0009401192655786872, -0.0023925271816551685, -0.0011302995262667537, -0.05606364086270332, -0.054270509630441666, -0.00762729300186038], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words][::-1]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "][", "::", "-", "1", "]", "\n"], "logprobs": [-0.5343330502510071, -0.13316169381141663, -0.06864575296640396, -0.0003212174342479557, -8.964136941358447e-05, -0.006548256613314152, -0.0017933252966031432, -0.2446516901254654, -0.004913280252367258, -2.706014311115723e-05, -0.07700864970684052, -9.65590606938349e-06, -5.8412379075889476e-06, -2.8292486667633057, -0.046155646443367004, -0.02216471917927265, -0.00011240804451517761, -0.0028168782591819763, -0.6365611553192139], "finish_reason": "stop"}, {"text": "pop(0) if matched_words else word", "tokens": ["pop", "(", "0", ")", " if", " matched", "_", "words", " else", " word", "\n"], "logprobs": [-0.0019123139791190624, -0.898337185382843, -0.004269532393664122, -0.0007708676857873797, -0.14353342354297638, -2.2628583908081055, -0.0011704268399626017, -0.011237661354243755, -0.2621273398399353, -0.2230442762374878, -0.47587332129478455], "finish_reason": "stop"}, {"text": " \" \".join(new_words)", "tokens": [" \"", " \"", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-1.6895513534545898, -0.0016124354442581534, -0.00010597144137136638, -0.0003965306677855551, -0.0028476661536842585, -0.0123707614839077, -0.00011872540198964998, -5.364403477869928e-06, -0.0019512200960889459, -0.017070038244128227], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.05626852437853813, -0.06559792906045914, -0.10381796211004257, -0.03949161246418953, -0.018105357885360718], "finish_reason": "stop"}, {"text": " pattern != \"\":", "tokens": [" pattern", " ", "!", "=", " \"", "\":", "\n"], "logprobs": [-0.5950159430503845, -2.0962460041046143, -4.255681051290594e-05, -7.748303323751315e-05, -0.6354290246963501, -0.027167681604623795, -0.01331932470202446], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.033134669065475464, -0.00020489977032411844, -0.0002786724944598973, -0.022133121266961098], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.04004528746008873, -0.000205018965061754, -5.149708886165172e-05, -0.01958765834569931, -0.00037746457383036613, -1.6093124941107817e-05, -2.7418097943154862e-06, -0.0007375142886303365, -0.002945372834801674, -0.07034265249967575, -0.00037674958002753556, -0.17857669293880463, -2.3841830625315197e-06, -4.994744449504651e-05, -5.125986263010418e-06, -8.702239938429557e-06, -0.0023730231914669275, -0.0017214493127539754], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0013915151357650757, -2.8371408916427754e-05, -2.0503786799963564e-05, -0.7402146458625793], "finish_reason": "stop"}], "metrics": {"energy": 216.31187842369079, "energy_per_token": 1.787701474575957, "time": 7.9535317, "time_per_token": 0.06573166694214876}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.8652595281600952, -0.001209004782140255, -0.10238339006900787, -0.05038375407457352, -0.011304259300231934], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.809734046459198, -0.003963117022067308], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.5285422801971436, -0.1727619618177414, -0.09063506126403809, -0.00032634177478030324, -8.987976616481319e-05, -0.006843935698270798, -0.00208125333301723, -0.1986435204744339, -0.004097638186067343, -2.4676019165781327e-05, -0.08785891532897949, -2.3483953555114567e-05, -6.437280717364047e-06, -0.055832669138908386, -0.1211889460682869], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0014042527182027698, -0.677497148513794, -0.11532674729824066, -0.46225932240486145, -0.0028181858360767365, -0.005122038535773754, -0.0011807858245447278, -0.01365616638213396, -0.0003446938644628972, -0.00962982140481472, -0.002279899315908551, -0.08552295714616776, -0.0033008160535246134, -0.4932529926300049], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2593679428100586, -0.0005601267330348492, -0.00012444675667211413, -0.0005909841856919229, -0.002412268426269293, -0.008529895916581154, -8.439661905867979e-05, -4.172316494077677e-06, -0.0024109601508826017, -0.018394481390714645], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.052342936396598816, -0.07319482415914536, -0.059909895062446594, -0.04029115289449692, -0.01895422674715519], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.54844731092453, -0.4527301490306854, -0.011353055946528912], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0330372154712677, -0.00021884430316276848, -0.0002273062855238095, -0.020942511036992073], "finish_reason": "stop"}, {"text": " new_df[column_name].map(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "map", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03595888614654541, -0.00014745102089364082, -4.768258077092469e-05, -0.01953107863664627, -0.0002889215829782188, -1.8715683836489916e-05, -3.099436753473128e-06, -0.0008328068652190268, -0.0028928357642143965, -2.8702306747436523, -0.0007428746903315187, -0.1228637844324112, -2.9802276912960224e-06, -4.005352093372494e-05, -6.198863957251888e-06, -5.602820692729438e-06, -0.002901631873100996, -0.002556153805926442], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0012318650260567665, -2.777537883957848e-05, -1.7762025890988298e-05, -0.7901995778083801], "finish_reason": "stop"}], "metrics": {"energy": 164.85655264091486, "energy_per_token": 2.0607069080114355, "time": 6.0721064, "time_per_token": 0.07590133}}
{"outputs": [{"text": " re.findall(pattern, text, flags=re.IGNORECASE)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ",", " flags", "=", "re", ".", "IGN", "ORE", "C", "ASE", ")", "\n"], "logprobs": [-0.6857106685638428, -3.766942609217949e-05, -0.19442979991436005, -0.008736010640859604, -0.030233873054385185, -0.2406211644411087, -0.009477739222347736, -0.01212900411337614, -2.2532896995544434, -1.076345682144165, -0.01105151604861021, -0.005532548297196627, -0.00012015574611723423, -0.5864564180374146, -5.245071224635467e-05, -4.327203714638017e-05, -0.0006596058374270797, -0.033648423850536346, -0.00994489248842001], "finish_reason": "stop"}, {"text": " [word for word in words if re.search(pattern, word, re.I)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " re", ".", "search", "(", "pattern", ",", " word", ",", " re", ".", "I", ")]", "\n"], "logprobs": [-0.9622778296470642, -0.14565594494342804, -0.4378555119037628, -0.004864168353378773, -0.0011449456214904785, -0.01957000605762005, -0.021259406581521034, -0.06574952602386475, -8.630380034446716e-05, -0.7462487816810608, -0.0083414725959301, -0.04468248412013054, -0.002704060636460781, -0.006243131123483181, -2.569269895553589, -0.23879317939281464, -0.00024768622824922204, -1.173093318939209, -0.086561419069767, -0.002838275395333767], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.4821587800979614, -0.14936909079551697, -0.06572184711694717, -0.0003713871701620519, -0.00011264643399044871, -0.0074089993722736835, -0.002037117723375559, -0.3065834045410156, -0.006035791710019112, -2.610649426060263e-05, -0.06932267546653748, -1.9550132492440753e-05, -6.318072337307967e-06, -0.050538353621959686, -0.12542606890201569], "finish_reason": "stop"}, {"text": "pop() if re.search(pattern, word) else word", "tokens": ["pop", "()", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0024371228646486998, -0.7214297652244568, -0.09459143877029419, -0.4086357355117798, -0.0030603024642914534, -0.005179913714528084, -0.0012906801421195269, -0.012568315491080284, -0.00033539868309162557, -0.01083349622786045, -0.0019010106334462762, -0.08977824449539185, -0.0032390295527875423, -0.4590536952018738], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2423838973045349, -0.0005833592731505632, -0.00016056202002801, -0.0004542034293990582, -0.002235058695077896, -0.010443797335028648, -0.00011503035057103261, -5.364403477869928e-06, -0.002180462470278144, -0.017834538593888283], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.07661090046167374, -0.08480051159858704, -0.08875752240419388, -0.041811950504779816, -0.018367445096373558], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.5835074782371521, -0.46624642610549927, -0.012632000260055065], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.042008575052022934, -0.00018892886873800308, -0.0002320735511602834, -0.021651914343237877], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.049530304968357086, -0.0001528146385680884, -3.731181277544238e-05, -0.01895352452993393, -0.00034588552080094814, -1.9073304429184645e-05, -3.3378546504536644e-06, -0.0008282806375063956, -0.002592656761407852, -0.08408456295728683, -0.0003723404952324927, -0.13724583387374878, -2.145764938177308e-06, -5.221230458118953e-05, -4.6491513785440475e-06, -8.940656698541716e-06, -0.0023824183735996485, -0.0020855360198765993], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0010147904977202415, -2.95634672511369e-05, -2.4318398573086597e-05, -0.663612961769104], "finish_reason": "stop"}], "metrics": {"energy": 238.53488231658935, "energy_per_token": 2.129775734969548, "time": 7.7379236, "time_per_token": 0.06908860357142857}}
{"outputs": [{"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-0.8224294185638428, -0.0014782940270379186, -0.09923131763935089, -0.04978405684232712, -0.009786837734282017], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8137956261634827, -0.004405436106026173], "finish_reason": "stop"}, {"text": " \" \".join(matched_words)", "tokens": [" \"", " \"", ".", "join", "(", "matched", "_", "words", ")", "\n"], "logprobs": [-2.6599323749542236, -0.004200208466500044, -0.0001294529065489769, -0.00038389943074434996, -0.009094716981053352, -0.020277580246329308, -3.862306402879767e-05, -5.483612312673358e-06, -0.08596673607826233, -0.041138906031847], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0033237473107874393, -0.7066798210144043, -0.00457834592089057, -0.0009151084814220667, -0.13261988759040833, -0.417306125164032, -0.0010208638850599527, -0.005833860952407122, -0.0013525871327146888, -0.008981306105852127, -0.0002802217786666006, -0.01860816590487957, -0.002137520583346486, -0.08399775624275208, -0.00493581872433424, -0.4588930010795593], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.25503116846084595, -0.0005042473785579205, -0.0001578206429257989, -0.0004654039512388408, -0.0021525088232010603, -0.00891526136547327, -8.809178689261898e-05, -4.768360213347478e-06, -0.001924449927173555, -0.01630847156047821], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.06614995002746582, -0.08449885994195938, -0.08838950842618942, -0.0476519875228405, -0.01860114559531212], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.6268195509910583, -0.4152642488479614, -0.012881402857601643], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.03538361191749573, -0.0002294515579706058, -0.00027426297310739756, -0.018628409132361412], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.04241633415222168, -0.00021431533969007432, -3.302042750874534e-05, -0.02354007214307785, -0.0003147821989841759, -2.062299427052494e-05, -3.2186455882765586e-06, -0.0008351890719495714, -0.002812836552038789, -0.07116720080375671, -0.00044860312482342124, -0.11403050273656845, -2.0265558760002023e-06, -4.9232225137529895e-05, -6.437280717364047e-06, -7.271740287251305e-06, -0.0026619734708219767, -0.0019288521725684404], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0012960376916453242, -2.4676019165781327e-05, -2.1934269170742482e-05, -0.6978297233581543], "finish_reason": "stop"}], "metrics": {"energy": 184.33979671478275, "energy_per_token": 2.3940233339582173, "time": 6.2934146, "time_per_token": 0.08173265714285714}}
{"outputs": [{"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.6857106685638428, -3.766942609217949e-05, -0.19442979991436005, -0.008736010640859604, -0.030233873054385185, -0.2406211644411087, -0.009477739222347736, -0.01212900411337614, -0.13631571829319, -0.014887424185872078], "finish_reason": "stop"}, {"text": " re.findall(pattern, text, flags=re.I)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ",", " flags", "=", "re", ".", "I", ")", "\n"], "logprobs": [-2.2570853233337402, -3.838465272565372e-05, -0.02394530363380909, -0.06560340523719788, -0.021557068452239037, -0.11246106773614883, -0.005026204977184534, -0.024672701954841614, -1.636693000793457, -0.9590760469436646, -0.011354116722941399, -0.005228654481470585, -0.00023266946664080024, -1.1450297832489014, -0.09217409789562225, -0.017776571214199066], "finish_reason": "stop"}, {"text": " [word for word in words if not re.search(pattern, word)]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " not", " re", ".", "search", "(", "pattern", ",", " word", ")]", "\n"], "logprobs": [-0.5343330502510071, -0.13316169381141663, -0.06864575296640396, -0.0003212174342479557, -8.964136941358447e-05, -0.006548256613314152, -0.0017933252966031432, -1.7150057554244995, -0.008579655550420284, -0.00030727434204891324, -0.0015018623089417815, -9.154854342341423e-05, -0.0006796196103096008, -5.364274329622276e-05, -0.001801416976377368, -0.09077507257461548, -0.06302007287740707], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0019123139791190624, -0.898337185382843, -0.004269532393664122, -0.0007708676857873797, -0.14353342354297638, -0.5486364960670471, -0.0016055324813351035, -0.0070012714713811874, -0.0016061275964602828, -0.011745582334697247, -0.00031513971043750644, -0.020356427878141403, -0.0017502479022368789, -0.09229008108377457, -0.00692562572658062, -0.4231318235397339], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2507023811340332, -0.0006631797295995057, -0.0001463782973587513, -0.0005491655902005732, -0.002387056592851877, -0.00963584240525961, -0.00011193125828867778, -5.602820692729438e-06, -0.0025397446006536484, -0.019150016829371452], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.06946469843387604, -0.06324334442615509, -0.07074134796857834, -0.04510624706745148, -0.0179844181984663], "finish_reason": "stop"}, {"text": " not pattern:", "tokens": [" not", " pattern", ":", "\n"], "logprobs": [-1.5403168201446533, -0.10594414919614792, -0.10526775568723679, -0.04907754063606262], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.03197568282485008, -0.00022420754248742014, -0.00020287363440729678, -0.021656230092048645], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03663301095366478, -0.00018940561858471483, -4.4225667807040736e-05, -0.018027035519480705, -0.0003225283289793879, -2.1457441107486375e-05, -4.172316494077677e-06, -0.0008250646642409265, -0.0028643079567700624, -0.08542019128799438, -0.0003182381624355912, -0.14144746959209442, -2.7418097943154862e-06, -5.471556869451888e-05, -4.410734163684538e-06, -7.629365427419543e-06, -0.0022747849579900503, -0.0016016048612073064], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df"], "logprobs": [-0.001259249052964151, -3.158996332786046e-05, -2.0503786799963564e-05], "finish_reason": "stop"}], "metrics": {"energy": 212.15178137016298, "energy_per_token": 2.059726032720029, "time": 7.538524, "time_per_token": 0.07318955339805824}}
{"outputs": [{"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.6857106685638428, -3.766942609217949e-05, -0.19442979991436005, -0.008736010640859604, -0.030233873054385185, -0.2406211644411087, -0.009477739222347736, -0.01212900411337614, -0.13631571829319, -0.014887424185872078], "finish_reason": "stop"}, {"text": " list(filter(lambda x: re.match(pattern, x), words))", "tokens": [" list", "(", "filter", "(", "lambda", " x", ":", " re", ".", "match", "(", "pattern", ",", " x", ")", ",", " words", "))", "\n"], "logprobs": [-3.503579616546631, -0.08012086898088455, -0.3696241080760956, -0.0025274972431361675, -0.12454245984554291, -0.7453557252883911, -0.005327077116817236, -0.2141481190919876, -7.414542778860778e-05, -0.9608161449432373, -0.004631387535482645, -0.05244825407862663, -0.0028442188631743193, -0.016201505437493324, -0.12265871465206146, -0.023795267567038536, -0.0036535197868943214, -0.0015726829878985882, -0.006055224221199751], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words][::-1]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "][", "::", "-", "1", "]", "\n"], "logprobs": [-0.5343330502510071, -0.13316169381141663, -0.06864575296640396, -0.0003212174342479557, -8.964136941358447e-05, -0.006548256613314152, -0.0017933252966031432, -0.2446516901254654, -0.004913280252367258, -2.706014311115723e-05, -0.07700864970684052, -9.65590606938349e-06, -5.8412379075889476e-06, -2.8292486667633057, -0.046155646443367004, -0.02216471917927265, -0.00011240804451517761, -0.0028168782591819763, -0.6365611553192139], "finish_reason": "stop"}, {"text": "pop(0) if re.search(pattern, word) else word", "tokens": ["pop", "(", "0", ")", " if", " re", ".", "search", "(", "pattern", ",", " word", ")", " else", " word", "\n"], "logprobs": [-0.0019123139791190624, -0.898337185382843, -0.004269532393664122, -0.0007708676857873797, -0.14353342354297638, -0.5486364960670471, -0.0016055324813351035, -0.0070012714713811874, -0.0016061275964602828, -0.011745582334697247, -0.00031513971043750644, -0.020356427878141403, -0.0017502479022368789, -0.09229008108377457, -0.00692562572658062, -0.4231318235397339], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.2507023811340332, -0.0006631797295995057, -0.0001463782973587513, -0.0005491655902005732, -0.002387056592851877, -0.00963584240525961, -0.00011193125828867778, -5.602820692729438e-06, -0.0025397446006536484, -0.019150016829371452], "finish_reason": "stop"}, {"text": " pd.DataFrame(df)", "tokens": [" pd", ".", "DataFrame", "(", "df", ")", "\n"], "logprobs": [-2.9936208724975586, -5.638440416078083e-05, -0.02862723544239998, -0.417800635099411, -0.2925436496734619, -1.635758876800537, -0.05498521402478218], "finish_reason": "stop"}, {"text": " pattern == '':", "tokens": [" pattern", " ==", " '", "':", "\n"], "logprobs": [-0.6015865206718445, -1.6880874633789062, -0.9760867357254028, -0.010865924879908562, -0.028856929391622543], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.03197568282485008, -0.00022420754248742014, -0.00020287363440729678, -0.021656230092048645], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03663301095366478, -0.00018940561858471483, -4.4225667807040736e-05, -0.018027035519480705, -0.0003225283289793879, -2.1457441107486375e-05, -4.172316494077677e-06, -0.0008250646642409265, -0.0028643079567700624, -0.08542019128799438, -0.0003182381624355912, -0.14144746959209442, -2.7418097943154862e-06, -5.471556869451888e-05, -4.410734163684538e-06, -7.629365427419543e-06, -0.0022747849579900503, -0.0016016048612073064], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.001259249052964151, -3.158996332786046e-05, -2.0503786799963564e-05, -0.7309044003486633], "finish_reason": "stop"}], "metrics": {"energy": 235.84742630004885, "energy_per_token": 2.105780591964722, "time": 8.176414, "time_per_token": 0.07300369642857142}}
{"outputs": [{"text": " text.strip().split()", "tokens": [" text", ".", "strip", "()", ".", "split", "()", "\n"], "logprobs": [-0.8652595281600952, -0.001209004782140255, -2.653496503829956, -0.010464913211762905, -0.0014894831692799926, -0.017255065962672234, -0.058734674006700516, -0.01798219233751297], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.8912327885627747, -0.0038991153705865145], "finish_reason": "stop"}, {"text": " [word for word in words if word not in matched_words]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " matched", "_", "words", "]", "\n"], "logprobs": [-0.5292686223983765, -0.1575869470834732, -0.06562025845050812, -0.00036614391137845814, -9.095255518332124e-05, -0.007018791511654854, -0.0016843193443492055, -0.23702627420425415, -0.004514501895755529, -2.13382354559144e-05, -0.05217752605676651, -4.2914423829643056e-05, -5.960446742392378e-06, -0.05847058817744255, -0.12025582045316696], "finish_reason": "stop"}, {"text": "pop(0) if word in pattern else word for word in words", "tokens": ["pop", "(", "0", ")", " if", " word", " in", " pattern", " else", " word", " for", " word", " in", " words", "\n"], "logprobs": [-0.0019019624451175332, -0.7837143540382385, -0.00415129866451025, -0.0007823029300197959, -0.12862350046634674, -2.506591320037842, -1.3202152252197266, -0.6338860392570496, -0.2545028328895569, -0.009016511961817741, -0.8181198239326477, -0.0070512257516384125, -0.0010172913316637278, -0.031583745032548904, -0.12661446630954742], "finish_reason": "stop"}, {"text": " ' '.join(new_words)", "tokens": [" '", " '", ".", "join", "(", "new", "_", "words", ")", "\n"], "logprobs": [-0.24719014763832092, -0.0005752577562816441, -0.0001357701694360003, -0.0005744237569160759, -0.002679450437426567, -0.01189885102212429, -9.476689592702314e-05, -4.887569048150908e-06, -0.0027139282319694757, -0.016860242933034897], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0667431503534317, -0.07204554229974747, -0.08040987700223923, -0.041289109736680984, -0.020094629377126694], "finish_reason": "stop"}, {"text": " pattern:", "tokens": [" pattern", ":", "\n"], "logprobs": [-0.5743593573570251, -0.436754047870636, -0.012904703617095947], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.03973417729139328, -0.00018010901112575084, -0.00027450130437500775, -0.02102130651473999], "finish_reason": "stop"}, {"text": " new_df[column_name].apply(reverse_matched_words)", "tokens": [" new", "_", "df", "[", "column", "_", "name", "]", ".", "apply", "(", "reverse", "_", "matched", "_", "words", ")", "\n"], "logprobs": [-0.03583697974681854, -0.0001879753835964948, -3.218599158572033e-05, -0.01579253561794758, -0.0004102342063561082, -1.4543427823809907e-05, -4.172316494077677e-06, -0.0007701530121266842, -0.002958684926852584, -0.06985530257225037, -0.00033384948619641364, -0.12233471870422363, -2.50339189733495e-06, -5.3881147323409095e-05, -6.794906312279636e-06, -8.22540732769994e-06, -0.0026648270431905985, -0.0023528055753558874], "finish_reason": "stop"}, {"text": " new_df", "tokens": [" new", "_", "df", "\n"], "logprobs": [-0.0015731590101495385, -2.0146166207268834e-05, -2.4199192921514623e-05, -0.7361346483230591], "finish_reason": "stop"}], "metrics": {"energy": 209.73504563331602, "energy_per_token": 2.496845781349, "time": 6.4899135, "time_per_token": 0.077260875}}
