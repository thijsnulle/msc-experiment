{"outputs": [{"text": "model = keras.models.Sequential([\n        keras.layers.Dense(2, input_shape=(2,), activation=\"sigmoid\"),\n        keras.layers.Dense(1)\n    ])\n    model.compile(loss=\"binary_crossentropy\", optimizer=\"sgd\", metrics=[\"accuracy\"])\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n    model.fit(X_train, Y_train, epochs=1, verbose=0)\n\n    Y_pred = model.predict(X_test)\n    fpr, tpr, thresholds = roc_curve(Y_test, Y_pred[:, 0])\n    ax = plt.plot(fpr, tpr, label='AUC: {:0.2f}'.format(auc(fpr, tpr)), linewidth=2)\n\n    return model, ax", "tokens": ["model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "2", ",", " input", "_", "shape", "=(", "2", ",", ")", ",", " activation", "=", "\"", "s", "igmoid", "\"", ")", ",", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ")", "\n", "    ", "])", "\n", "    ", "model", ".", "compile", "(", "loss", "=", "\"", "binary", "_", "cross", "entropy", "\"", ",", " optimizer", "=", "\"", "sg", "d", "\"", ",", " metrics", "=[", "\"", "accuracy", "\"", "])", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "Y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "test", ")", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", "[:", ",", " ", "0", "])", "\n", "    ", "ax", " =", " plt", ".", "plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", ":", " {:", "0", ".", "2", "f", "}'", ".", "format", "(", "auc", "(", "f", "pr", ",", " t", "pr", "))", ",", " linewidth", "=", "2", ")", "\n", "\n", "    ", "return", " model", ",", " ax"], "logprobs": [-2.423029899597168, -0.017690258100628853, -0.14015419781208038, -4.887569048150908e-06, -0.0004944770480506122, -0.1677330583333969, -0.00012027494085486978, -4.160317621426657e-05, -6.318072337307967e-06, -7.748573807475623e-06, -1.1582694053649902, -0.17321909964084625, -0.030482161790132523, -0.009457665495574474, -3.0517112463712692e-05, -0.000542612629942596, -2.3007127310847864e-05, -0.02166416309773922, -0.00032395837479270995, -9.083335316972807e-05, -1.6028125286102295, -0.06261985003948212, -1.318479299545288, -2.074220174108632e-05, -0.2153635174036026, -0.2595275342464447, -0.04496801272034645, -0.015039036981761456, -1.000799536705017, -0.00029309268575161695, -0.1588761955499649, -1.601102352142334, -0.11140352487564087, -0.033281467854976654, -2.6702524337451905e-05, -2.109982233378105e-05, -0.10993398725986481, -0.15138675272464752, -0.021333742886781693, -0.09823186695575714, -0.0064888023771345615, -7.664863369427621e-05, -0.0002960720448754728, -5.125986263010418e-06, -0.01386322546750307, -0.00021526881027966738, -0.00018571082910057157, -0.02197103388607502, -0.7847734093666077, -0.19274930655956268, -0.013321912847459316, -0.003899471601471305, -0.000849601230584085, -0.2545481026172638, -0.029566876590251923, -0.00019536493346095085, -0.0012372228084132075, -0.0004273931554052979, -0.6904945969581604, -0.111724354326725, -0.0700131505727768, -0.009836181066930294, -0.0029862592928111553, -0.00020180096908006817, -0.00017510310863144696, -4.362964682513848e-05, -0.0002087136817863211, -0.17631861567497253, -0.01168195903301239, -0.2535454034805298, -0.2362474948167801, -0.00016592556494288146, -5.9602869441732764e-05, -0.07009027898311615, -0.8160197734832764, -0.05970171093940735, -0.014220921322703362, -0.07961426675319672, -0.00015031162183731794, -0.05295919254422188, -0.0023352038115262985, -0.07284653186798096, -2.3309974670410156, -0.02169215865433216, -0.009739027358591557, -0.0019155264599248767, -0.0024878999684005976, -8.463501580990851e-05, -0.012824442237615585, -0.00025102324434556067, -0.5306798219680786, -8.749579137656838e-05, -0.00015484087634831667, -7.64102369430475e-05, -0.006859682034701109, -1.966933996300213e-05, -0.00016449528629891574, -0.001620528637431562, -0.008717456832528114, -4.291525328881107e-06, -6.556489552167477e-06, -0.00010215714428341016, -5.483612312673358e-06, -0.00026127262390218675, -0.05924196168780327, -0.00024780540843494236, -0.005056450609117746, -0.016839612275362015, -0.09655354171991348, -2.3841855067985307e-07, -3.814624506048858e-05, -0.003217641031369567, -0.01488601416349411, -2.372236667724792e-05, -0.00763415452092886, -0.27128538489341736, -0.13830868899822235, -1.4305104514278355e-06, -4.887569048150908e-06, -0.0006598440813831985, -0.18028034269809723, -0.0246718879789114, -0.07146236300468445, -0.004363420885056257, -0.01731540635228157, -0.4500369429588318, -0.0025448575615882874, -0.0008482910343445837, -0.00011538793478393927, -0.018429473042488098, -0.01112449262291193, -0.00014304091746453196, -0.00019667598826345056, -0.011885068379342556, -0.000674616196192801, -1.1801649634435307e-05, -0.0061464570462703705, -0.4888260066509247, -0.0005032941699028015, -0.6234846115112305, -1.7851413488388062, -0.044800806790590286, -0.0005527398898266256, -0.08417169004678726, -0.13484027981758118, -0.00870043970644474, -2.4166746139526367, -0.0020754244178533554, -1.5862171649932861, -0.0034696399234235287, -0.46270275115966797, -0.020726755261421204, -0.004200801718980074, -9.011816291604191e-05, -0.0005210472736507654, -0.02768346294760704, -0.0004469349514693022, -0.0004459816846065223, -0.0007126175914891064, -0.004608604591339827, -0.04168035089969635, -0.08190694451332092, -0.4350505769252777, -0.0005066303419880569, -0.0028502813074737787, -0.002231609309092164, -0.012390070594847202, -0.0006384003208950162, -0.1292046755552292, -0.00045980370487086475, -0.003963829483836889, -2.3841855067985307e-07, -1.2040065485052764e-05, -1.2993727978027891e-05, -0.000125281119835563, -0.05866711214184761, -0.00047779586748220026, -0.002179153962060809, -0.3553740382194519, -0.0018810213077813387, -0.0002798642381094396, -3.075552376685664e-05, -0.5947507619857788, -0.0002060916303889826, -0.07972610741853714, -0.010390354320406914, -0.10522472858428955, -0.013617478311061859, -0.1622929871082306, -2.6022610664367676, -1.8360633850097656, -0.0042772479355335236, -0.0007805161876603961, -0.2428242266178131, -0.05784467235207558, -0.028041351586580276, -2.9802276912960224e-06, -0.001562089892104268, -0.0012988949893042445, -5.9126061387360096e-05, -0.038023971021175385, -0.33861738443374634, -1.5911341905593872, -1.5695159435272217, -0.00482537504285574, -2.1430914402008057, -0.20740266144275665, -0.27021363377571106, -0.005092388018965721, -0.1481708437204361, -0.001503052655607462, -0.008500701747834682, -0.0007074952009133995, -0.00041786045767366886, -0.0005896736984141171, -0.05249135196208954, -0.00020168177434243262, -0.001576134585775435, -1.847726889536716e-05, -0.0006150499684736133, -0.004309177864342928, -0.0003518439189065248, -2.6055638790130615, -0.029766153544187546, -0.417868047952652, -0.003567642066627741, -1.1799734830856323, -0.22611308097839355, -0.004785038530826569, -2.1456427574157715, -0.0019684715662151575, -0.41378915309906006, -0.01425782311707735, -0.0005637010326609015, -0.006540084723383188], "finish_reason": "stop"}], "metrics": {"energy": 331.8160472135543, "energy_per_token": 1.411983179632146, "time": 12.762903, "time_per_token": 0.05431022553191489}}
{"outputs": [{"text": "# split training and test data\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    # create a Keras Sequential model with one hidden layer using a sigmoid activation function\n    model = keras.models.Sequential()\n    model.add(keras.layers.Dense(3, input_shape=(2,), activation='sigmoid'))\n    model.add(keras.layers.Dense(1, activation='sigmoid'))\n\n    # compile the model with binary cross-entropy loss and an SGD optimizer specifying a learning rate\n    model.compile(optimizer=keras.optimizers.SGD(lr=0.1), loss=\"binary_crossentropy\")\n\n    # fit the model to the training data\n    model.fit(X_train, Y_train, verbose=0)\n\n    # evaluate the model on the test data\n    Y_pred = model.predict(X_test)\n    fpr, tpr, thresholds = roc_curve(Y_", "tokens": ["#", " split", " training", " and", " test", " data", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " create", " a", " K", "eras", " Sequ", "ential", " model", " with", " one", " hidden", " layer", " using", " a", " s", "igmoid", " activation", " function", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "3", ",", " input", "_", "shape", "=(", "2", ",", ")", ",", " activation", "='", "s", "igmoid", "'))", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "='", "s", "igmoid", "'))", "\n", "\n", "    ", "#", " compile", " the", " model", " with", " binary", " cross", "-", "entropy", " loss", " and", " an", " SGD", " optimizer", " specifying", " a", " learning", " rate", "\n", "    ", "model", ".", "compile", "(", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "1", ")", ",", " loss", "=", "\"", "binary", "_", "cross", "entropy", "\"", ")", "\n", "\n", "    ", "#", " fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "#", " evaluate", " the", " model", " on", " the", " test", " data", "\n", "    ", "Y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "test", ")", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_"], "logprobs": [-1.0048189163208008, -2.7342677116394043, -3.7093300819396973, -0.3392670154571533, -0.23692825436592102, -0.6704964637756348, -0.23729118704795837, -0.0014397265622392297, -0.4321056008338928, -0.018001629039645195, -0.009792503900825977, -0.0012897277483716607, -0.0021438251715153456, -0.00010227633902104571, -0.007412194274365902, -0.0004292996891308576, -0.1558433473110199, -0.0001892864383989945, -0.00016664070426486433, -0.00011765264935093, -0.006462627090513706, -1.3947389561508317e-05, -0.00011538793478393927, -0.001708358759060502, -0.01299731433391571, -3.2186455882765586e-06, -1.5020257706055418e-05, -2.3841855067985307e-07, -4.0531076592742465e-06, -0.00025996167096309364, -0.11836672574281693, -0.00043156370520591736, -0.005670533049851656, -0.00986333005130291, -0.06874091178178787, -5.960462772236497e-07, -3.0874729418428615e-05, -0.007350543048232794, -0.011575321666896343, -2.634490556374658e-05, -0.009025372564792633, -0.1357695758342743, -0.10454516112804413, -7.152555099310121e-07, -4.291525328881107e-06, -0.0009733468177728355, -0.16742153465747833, -0.02371249906718731, -0.12243735045194626, -0.0031752190552651882, -0.17321418225765228, -0.0005834784242324531, -0.020855536684393883, -0.41878199577331543, -0.7530385255813599, -0.600713849067688, -9.48860906646587e-05, -0.24781019985675812, -9.536288416711614e-05, -0.0010762381134554744, -0.11217702180147171, -0.07290726900100708, -0.003261605743318796, -0.000575376907363534, -0.5593695044517517, -0.08329516649246216, -0.0035525562707334757, -3.5523738915799186e-05, -0.0016678959364071488, -0.009397084824740887, -0.015241113491356373, -0.0017476299544796348, -0.013891206122934818, -0.0017774987500160933, -0.09477751702070236, -1.6927575416048057e-05, -6.651657167822123e-05, -1.0610847473144531, -2.2291887944447808e-05, -1.9430925021879375e-05, -1.9073468138230965e-06, -1.3470558769768104e-05, -1.3673367500305176, -0.0009924016194418073, -0.00471705524250865, -0.004502397496253252, -1.6927575416048057e-05, -4.2676016164477915e-05, -1.5735502529423684e-05, -0.01959093101322651, -7.033323527139146e-06, -0.0008865240379236639, -5.006777428206988e-06, -0.0234038345515728, -0.0003073934931308031, -6.568216485902667e-05, -2.2765746116638184, -1.3806588649749756, -1.1779389381408691, -2.50339189733495e-06, -0.7675889730453491, -0.044076163321733475, -0.05924038589000702, -0.019503138959407806, -0.3776393234729767, -0.00021252757869660854, -0.050921350717544556, -0.1945696473121643, -0.020853668451309204, -1.0371154530730564e-05, -0.006478616502135992, -0.012142783962190151, -0.09804253280162811, -0.010544421151280403, -0.000102037942269817, -0.19640184938907623, -4.005352093372494e-05, -0.0001225396408699453, -8.046303264563903e-05, -0.00010156115604331717, -3.909988299710676e-05, -0.020800430327653885, -0.0004077318590134382, -4.351044481154531e-05, -0.03949298709630966, -0.36146432161331177, -0.011445928364992142, -0.00404314324259758, -0.002537485444918275, -2.50339189733495e-06, -0.0019779896829277277, -0.011407861486077309, -0.0957251787185669, -6.758938252460212e-05, -0.006434911396354437, -0.005953199230134487, -0.025485800579190254, -0.0002752163854893297, -0.06567708402872086, -0.008404599502682686, -0.0006741396500729024, -0.001632549217902124, -0.00014876213390380144, -0.0013223483692854643, -0.01920977607369423, -0.00335808377712965, -0.008672195486724377, -0.0003303935518488288, -0.13410799205303192, -0.0031304187141358852, -0.001513170194812119, -0.000750736624468118, -0.02636442519724369, -0.0003446938644628972, -0.03637854382395744, -0.00016485285595990717, -0.0003793711948674172, -0.0013304438907653093, -1.1216243505477905, -6.794906312279636e-06, -1.9490671157836914, -0.05638052895665169, -4.529942543740617e-06, -0.000291662581730634, -0.004112359136343002, -5.0424259825376794e-05, -0.016185903921723366, -0.0005108005134388804, -0.0067657907493412495, -0.5877410769462585, -0.0020509178284555674, -0.06859277188777924, -0.002827458083629608, -1.1188327074050903, -0.009295163676142693, -0.00012575789878610522, -0.2663186490535736, -2.418043613433838, -2.9827828407287598, -0.008637921884655952, -0.0003133521240670234, -0.0001811817055568099, -9.369411418447271e-05, -6.937739817658439e-05, -0.6331793665885925, -0.0026016931515187025, -0.036820199340581894, -0.00020466140995267779, -0.0019020814215764403, -0.017811352387070656, -0.0016482589999213815, -0.000570253818295896, -0.005473270546644926, -0.0029161330312490463, -0.0006945105269551277, -0.0017901124665513635, -2.705984354019165, -0.00025197668583132327, -0.11371593922376633, -0.0007283418672159314, -0.000523430178873241, -5.6503606174374e-05, -0.018520871177315712, -0.02150830067694187, -2.884823152271565e-05, -0.0002733095607254654, -0.01364428922533989, -0.00040070133400149643, -6.437280717364047e-06, -0.007968658581376076, -1.9666979312896729, -0.0008998635457828641, -0.05543283000588417, -1.0639731884002686, -0.005488327704370022, -0.014638403430581093, -0.000446696620201692, -0.010173371061682701, -3.2816426753997803, -0.042910151183605194, -0.22852541506290436, -0.0673113688826561, -0.02349722385406494, -0.008990403264760971, -1.010196328163147, -0.16585731506347656, -0.000671042304020375, -0.8055647015571594, -0.00534770917147398, -0.13074389100074768, -0.012619640678167343, -0.0034426727797836065, -4.482168878894299e-05, -0.0003302744007669389, -0.010342218913137913, -0.00013767725613433868, -0.00013565097469836473, -0.00037877538125030696, -0.0019063648069277406, -0.023210039362311363, -0.9045082926750183, -0.5805080533027649, -0.0005571481888182461, -0.006633168086409569, -0.001971921883523464, -0.00993273500353098, -0.000760385300964117, -0.13535860180854797, -0.0006020640721544623, -0.005848201457411051, -2.3841855067985307e-07, -1.823885577323381e-05, -1.3828182090946939e-05, -0.00013290952483657748, -0.02323612943291664, -0.0005138983833603561], "finish_reason": "length"}], "metrics": {"energy": 277.6711933317184, "energy_per_token": 1.084653098952025, "time": 11.358312, "time_per_token": 0.04436840625}}
{"outputs": [{"text": "# Part 1: split the data into training and test sets\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n    # Part 2: create a Keras Sequential model\n    model = keras.Sequential([\n        keras.layers.Dense(1, activation='sigmoid')\n    ])\n    # Part 3: compile the model with binary cross-entropy loss and an SGD optimizer specifying a learning rate\n    model.compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(lr=0.05), metrics=['accuracy'])\n    # Part 4: fit the model to the training data in a non-verbose mode\n    model.fit(X_train, Y_train, verbose=0, epochs=200, batch_size=16)\n    # Part 5: plot the ROC curve for the model on the test set, including the AUC score in the plot legend\n    # Note: to plot the ROC curve, use the sklearn.", "tokens": ["#", " Part", " ", "1", ":", " split", " the", " data", " into", " training", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "#", " Part", " ", "2", ":", " create", " a", " K", "eras", " Sequ", "ential", " model", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "='", "s", "igmoid", "')", "\n", "    ", "])", "\n", "    ", "#", " Part", " ", "3", ":", " compile", " the", " model", " with", " binary", " cross", "-", "entropy", " loss", " and", " an", " SGD", " optimizer", " specifying", " a", " learning", " rate", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "0", "5", ")", ",", " metrics", "=['", "accuracy", "'])", "\n", "    ", "#", " Part", " ", "4", ":", " fit", " the", " model", " to", " the", " training", " data", " in", " a", " non", "-", "verbose", " mode", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ",", " epochs", "=", "2", "0", "0", ",", " batch", "_", "size", "=", "1", "6", ")", "\n", "    ", "#", " Part", " ", "5", ":", " plot", " the", " R", "OC", " curve", " for", " the", " model", " on", " the", " test", " set", ",", " including", " the", " A", "UC", " score", " in", " the", " plot", " legend", "\n", "    ", "#", " Note", ":", " to", " plot", " the", " R", "OC", " curve", ",", " use", " the", " sklearn", "."], "logprobs": [-1.0048189163208008, -4.250250339508057, -0.544405460357666, -0.07955779135227203, -0.6187606453895569, -2.5828235149383545, -0.48517969250679016, -0.395790159702301, -0.29677385091781616, -0.1266806423664093, -0.05351099744439125, -0.04650607332587242, -0.021137796342372894, -0.39536532759666443, -0.006390138063579798, -0.6873953938484192, -0.02176191471517086, -0.007310781162232161, -0.0010140759404748678, -0.00283946399576962, -0.00010859376925509423, -0.005648129619657993, -0.00029976642690598965, -0.31406161189079285, -0.00013326710904948413, -6.83045873302035e-05, -7.545663538621739e-05, -0.0015103134792298079, -1.3351351299206726e-05, -7.581423415103927e-05, -0.0012636542087420821, -0.011099381372332573, -2.0265558760002023e-06, -1.4066597032069694e-05, -4.768370445162873e-07, -5.006777428206988e-06, -0.0001864259538706392, -0.1124126985669136, -0.00032634177478030324, -0.005803283303976059, -0.008317237719893456, -0.06465848535299301, -3.576278118089249e-07, -3.218599158572033e-05, -0.007409827783703804, -0.009024308994412422, -2.4914430468925275e-05, -0.00988150853663683, -0.11955180764198303, -0.08357196301221848, -9.536738616588991e-07, -3.4570634852570947e-06, -0.0009544108179397881, -0.17025263607501984, -0.02605297602713108, -0.092598095536232, -0.006592667195945978, -1.989848256111145, -0.16325950622558594, -0.03147944062948227, -0.002499910071492195, -0.0121234692633152, -0.017049528658390045, -0.32767772674560547, -0.10360969603061676, -0.22051310539245605, -7.462222856702283e-05, -0.08505357801914215, -7.593343616463244e-05, -0.001023007556796074, -2.019857883453369, -0.007754697930067778, -0.05949629470705986, -0.0036456806119531393, -0.12143497169017792, -1.1920858014491387e-05, -4.8874615458771586e-05, -0.698477566242218, -8.344646857949556e-07, -1.1086402082582936e-05, -0.07929804921150208, -0.08709314465522766, -0.0190406646579504, -0.05831743776798248, -1.1444026313256472e-05, -0.0018850667402148247, -1.3351351299206726e-05, -0.034794881939888, -0.00020632999076042324, -3.71926071238704e-05, -0.7213568091392517, -0.0748961865901947, -0.4260583817958832, -0.1604474037885666, -0.0013635394861921668, -4.31528314948082e-05, -1.921143651008606, -0.24558444321155548, -0.01008038129657507, -0.0011376821203157306, -0.0007845661020837724, -0.04703540727496147, -0.023468928411602974, -0.008972445502877235, -0.001743940869346261, -0.006833990104496479, -0.007380836643278599, -0.03239297866821289, -0.02661530114710331, -0.0008964095613919199, -1.4332140684127808, -0.0416577123105526, -0.002656028838828206, -0.0072508989833295345, -0.00022957073815632612, -0.006766383070498705, -0.2786127030849457, -0.023729495704174042, -0.0340772308409214, -0.001259844284504652, -1.1966599225997925, -0.01599680632352829, -0.00499714445322752, -0.001501148217357695, -0.0934370756149292, -0.0008563903393223882, -0.04961051046848297, -9.524368942948058e-05, -0.0002668739762157202, -0.0007028493564575911, -0.32453402876853943, -0.055159859359264374, -0.008788714185357094, -0.0005118728731758893, -0.0003545847721397877, -5.364274329622276e-05, -0.0001394651480950415, -0.0021736822091042995, -0.05778931453824043, -1.0767791271209717, -0.018114840611815453, -2.884823152271565e-05, -0.0004389514506328851, -0.004491954110562801, -6.937739817658439e-05, -0.014957067556679249, -0.0005071069463156164, -0.006312550511211157, -0.5608147382736206, -0.0025856418069452047, -0.043109871447086334, -0.0018335450440645218, -0.40136057138442993, -2.59251070022583, -1.4557394981384277, -0.009543392807245255, -0.5810714960098267, -0.04890148714184761, -0.06463266909122467, -0.03713899850845337, -0.00208291900344193, -0.012674493715167046, -0.001894704531878233, -0.0029708081856369972, -0.0015437601832672954, -0.0047195469960570335, -0.007865527644753456, -0.020493200048804283, -0.0012755600037053227, -0.0007470439304597676, -0.012670373544096947, -0.003924764227122068, -0.001513408264145255, -0.004195341374725103, -0.20461490750312805, -0.01520976610481739, -0.0010108605492860079, -0.00038580605178140104, -0.00025912740966305137, -0.0019520529313012958, -0.04881520941853523, -0.00035529976594261825, -0.16069898009300232, -0.0007814691052772105, -0.0002172949316445738, -7.73638384998776e-05, -0.012287748046219349, -0.010437662713229656, -2.586808113846928e-05, -0.00031537804170511663, -0.00986569095402956, -0.0005108005134388804, -6.9141146923357155e-06, -0.0031642864923924208, -1.7459170818328857, -0.0012254356406629086, -0.07191020995378494, -1.1328532695770264, -0.4463610351085663, -0.0001941730733960867, -2.13865327835083, -0.13770443201065063, -1.1513671875, -0.7249093651771545, -0.05133579671382904, -1.847726889536716e-05, -4.410734163684538e-06, -0.0004646890447475016, -0.7819998264312744, -0.34399551153182983, -0.20227549970149994, -0.003680481342598796, -0.020933054387569427, -0.014125015586614609, -0.007259183097630739, -0.0012192443246021867, -0.007608955726027489, -0.00794429611414671, -0.20040428638458252, -0.004019278567284346, -0.02482830360531807, -2.9802276912960224e-06, -0.002261701738461852, -0.023660926148295403, -0.003884153440594673, -0.004917787853628397, -0.01846575364470482, -0.001128156203776598, -0.0007678897818550467, -0.003203025320544839, -0.5211359858512878, -0.06091640517115593, -0.004112359136343002, -0.0012830605264753103, -1.6093124941107817e-05, -0.0026295154821127653, -0.14426998794078827, -0.001279846066609025, -0.04029836505651474, -0.0018488947534933686, -0.045908257365226746, -0.0057165236212313175, -2.436211347579956, -2.8013806343078613, -0.268192857503891, -4.661194801330566, -1.5180282592773438, -0.32243871688842773, -0.22788426280021667, -7.414542778860778e-05, -0.020548557862639427, -0.39623838663101196, -3.4642534255981445, -0.6131687760353088, -3.1541266441345215, -0.12321700900793076], "finish_reason": "length"}], "metrics": {"energy": 318.86638952827485, "energy_per_token": 1.2455718340948236, "time": 12.396984, "time_per_token": 0.04842571875}}
{"outputs": [{"text": "# Split the data into training and test sets\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    # Create a Keras Sequential model with one hidden layer\n    model = keras.Sequential([\n        keras.layers.Dense(units=1,\n                           activation=keras.activations.sigmoid,\n                           input_shape=[2]),\n    ])\n\n    # Compile the model\n    model.compile(loss=keras.losses.BinaryCrossentropy(),\n                  optimizer=keras.optimizers.SGD(learning_rate=0.01),\n                  metrics=['accuracy'])\n\n    # Fit the model to the training data\n    model.fit(X_train, Y_train, verbose=0)\n\n    # Compute the ROC curve and AUC score for the model on the test data\n    roc_values, threshold = roc_curve(Y_test, model.predict(X_test))\n    auc_score = auc", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " a", " K", "eras", " Sequ", "ential", " model", " with", " one", " hidden", " layer", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "units", "=", "1", ",", "\n", "                ", "           ", "activation", "=", "keras", ".", "activ", "ations", ".", "s", "igmoid", ",", "\n", "                ", "           ", "input", "_", "shape", "=[", "2", "])", ",", "\n", "    ", "])", "\n", "\n", "    ", "#", " Com", "pile", " the", " model", "\n", "    ", "model", ".", "compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "()", ",", "\n", "                ", "  ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "1", ")", ",", "\n", "                ", "  ", "metrics", "=['", "accuracy", "'])", "\n", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "#", " Compute", " the", " R", "OC", " curve", " and", " A", "UC", " score", " for", " the", " model", " on", " the", " test", " data", "\n", "    ", "roc", "_", "values", ",", " threshold", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "\n", "    ", "auc", "_", "score", " =", " a", "uc"], "logprobs": [-1.0048189163208008, -1.5023609399795532, -0.23366813361644745, -0.24568253755569458, -0.04483272507786751, -0.055045802146196365, -0.02190222591161728, -0.07034442573785782, -0.00994996726512909, -0.15945062041282654, -0.0018512745155021548, -0.47647398710250854, -0.012723930180072784, -0.0023098711390048265, -0.000580499938223511, -0.0019976201001554728, -5.9126061387360096e-05, -0.0036170552484691143, -0.00023755589791107923, -0.3164496123790741, -0.00011657988943625242, -4.7801782784517854e-05, -6.675497570540756e-05, -0.003548992797732353, -1.0013530300057027e-05, -5.8410845667822286e-05, -0.0006494796834886074, -0.00779515178874135, -1.5497195136049413e-06, -1.1920858014491387e-05, -5.960462772236497e-07, -4.172316494077677e-06, -9.476689592702314e-05, -0.1341998279094696, -0.0002441108226776123, -0.003416180144995451, -0.006938529666513205, -0.034409571439027786, -2.3841855067985307e-07, -2.729855441430118e-05, -0.002419165801256895, -0.007530516013503075, -2.47952248173533e-05, -0.00876094400882721, -0.11056635528802872, -0.056724127382040024, -9.536738616588991e-07, -3.4570634852570947e-06, -0.00046266341814771295, -0.11001098155975342, -0.01479087769985199, -0.06760042905807495, -0.0016244561411440372, -0.09193740040063858, -0.0004644507134798914, -0.013882623985409737, -0.15453119575977325, -0.1307757943868637, -0.26322025060653687, -3.6477376852417365e-05, -0.13176539540290833, -4.053033626405522e-05, -0.0007995745982043445, -0.04789121821522713, -0.12372706830501556, -0.002699899487197399, -0.000398198957554996, -0.6922622919082642, -0.0008597253472544253, -0.021535834297537804, -0.0012702024541795254, -0.10250939428806305, -7.510157047363464e-06, -4.8993817472364753e-05, -0.2632995843887329, -1.4305104514278355e-06, -8.4638240878121e-06, -0.04120617359876633, -0.04769313335418701, -0.009479865431785583, -0.011318757198750973, -6.794906312279636e-06, -0.0017022894462570548, -6.6756979322235566e-06, -0.03958316892385483, -0.00033563701435923576, -1.0967194612021558e-05, -2.6560113430023193, -0.006186265032738447, -0.6412816047668457, -0.39104387164115906, -2.1085081100463867, -0.06363314390182495, -0.10559903830289841, -1.000023603439331, -0.4599258303642273, -0.8053183555603027, -1.2755313036905136e-05, -0.014417639933526516, -0.0003812778159044683, -0.00018463814922142774, -0.003011218272149563, -5.960446742392378e-06, -0.011101856827735901, -0.017764508724212646, -0.0005741854547522962, -0.002071141730993986, -0.3224561810493469, -5.483612312673358e-06, -0.04968753084540367, -1.4699345827102661, -0.06621132045984268, -0.27772098779678345, -1.626590371131897, -0.018517127260565758, -0.31716421246528625, -0.0031079582404345274, -0.00030083899036981165, -0.028792647644877434, -0.00018285033002030104, -0.007729147095233202, -0.006614102050662041, -3.1709168979432434e-05, -0.021265357732772827, -0.0006036128615960479, -1.028172492980957, -0.00019369633810129017, -0.008866463787853718, -5.8530047681415454e-05, -0.00020454221521504223, -0.00010644822759786621, -0.6258283853530884, -0.25793489813804626, -0.04526006802916527, -2.90866428258596e-05, -0.01546897366642952, -2.3841855067985307e-07, -2.8132995794294402e-05, -0.44211021065711975, -0.00023946279543451965, -0.00587972579523921, -0.1642741560935974, -0.00014041867689229548, -0.0834183320403099, -0.0014298463938757777, -0.009835118427872658, -0.0009584600338712335, -5.006777428206988e-06, -0.05624046549201012, -0.011471619829535484, -6.675497570540756e-05, -0.00010716341057559475, -0.0020874394103884697, -4.7444173105759546e-05, -0.025634538382291794, -0.0004182179400231689, -0.021419158205389977, -0.3121039867401123, -7.116541382856667e-05, -1.9907753085135482e-05, -0.0009682258241809905, -0.030649349093437195, -0.0004068977141287178, -0.3865715563297272, -0.36723846197128296, -0.12906920909881592, -0.035642243921756744, -0.015432585030794144, -0.0013363964390009642, -0.0006385194719769061, -0.00441908510401845, -0.5360110998153687, -0.05246499553322792, -0.1167467013001442, -0.0019327785121276975, -0.004560664761811495, -0.00036042393185198307, -0.0019760860595852137, -0.04560374841094017, -0.0011069605825468898, -0.000685576000250876, -0.29857245087623596, -0.013133802451193333, -0.02295912243425846, -0.02161131612956524, -0.06791847199201584, -0.00027497802511788905, -0.1548353135585785, -0.00035339308669790626, -0.00025507534155622125, -1.9550132492440753e-05, -0.041649479418992996, -0.033680349588394165, -1.6569954823353328e-05, -0.0002169373765354976, -0.02189219556748867, -0.0004418112221173942, -4.6491513785440475e-06, -0.005245493724942207, -2.009263515472412, -0.00041762212640605867, -0.06805568933486938, -1.3921257257461548, -0.004788360092788935, -0.012623759917914867, -0.0005451146862469614, -0.008384031243622303, -2.472134828567505, -0.10696238279342651, -0.1415966898202896, -6.198863957251888e-06, -0.047827351838350296, -0.44908592104911804, -0.12195237725973129, -0.000724887300748378, -0.8819435834884644, -1.208869457244873, -0.04266047477722168, -1.8114290237426758, -0.20235827565193176, -0.0282962117344141, -0.0030053947120904922, -1.5895206928253174, -0.011380989104509354, -0.0010031197452917695, -2.0409953594207764, -0.0232701376080513, -0.5992892384529114, -0.20911867916584015, -1.7944154739379883, -0.17931249737739563, -0.0063432310707867146, -3.576278118089249e-07, -4.446407547220588e-05, -9.691245941212401e-05, -7.438383181579411e-05, -0.24199886620044708, -0.004629726056009531, -0.0017203782917931676, -0.007998342625796795, -0.02839551866054535, -0.00013136000779923052, -0.0004068977141287178, -0.0026699393056333065, -8.177422569133341e-05, -3.290122185717337e-05, -2.0861407392658293e-05, -0.24410998821258545, -0.007163080852478743, -0.02022944949567318, -0.45516079664230347, -0.002980079036206007, -0.26206889748573303, -0.002940024249255657, -0.0033831524197012186, -6.6756979322235566e-06], "finish_reason": "length"}], "metrics": {"energy": 311.08639875316635, "energy_per_token": 1.215181245129556, "time": 12.396864, "time_per_token": 0.04842525}}
{"outputs": [{"text": "# ------------------------------------------------------------------------------------------------------------\n    model = keras.models.Sequential([keras.layers.Dense(1,\n                                                        activation=keras.activations.sigmoid,\n                                                        input_shape=[2])])\n    model.compile(loss=keras.losses.binary_crossentropy,\n                  optimizer=keras.optimizers.SGD(lr=0.01),\n                  metrics=['accuracy'])\n    model.fit(X, Y, batch_size=32, verbose=0, epochs=5,\n              validation_data=(X, Y), shuffle=True)\n    # ------------------------------------------------------------------------------------------------------------\n    fpr, tpr, thresholds = roc_curve(y_true=Y,\n                                     y_score=model.predict(X),\n                                     pos", "tokens": ["#", " ", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", "\n", "                ", "                ", "                ", "        ", "activation", "=", "keras", ".", "activ", "ations", ".", "s", "igmoid", ",", "\n", "                ", "                ", "                ", "        ", "input", "_", "shape", "=[", "2", "]", ")]", ")", "\n", "    ", "model", ".", "compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ",", "\n", "                ", "  ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "0", "1", ")", ",", "\n", "                ", "  ", "metrics", "=['", "accuracy", "'])", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ",", " batch", "_", "size", "=", "3", "2", ",", " verbose", "=", "0", ",", " epochs", "=", "5", ",", "\n", "              ", "validation", "_", "data", "=(", "X", ",", " Y", ")", ",", " shuffle", "=", "True", ")", "\n", "    ", "#", " ", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "y", "_", "true", "=", "Y", ",", "\n", "                ", "                ", "     ", "y", "_", "score", "=", "model", ".", "predict", "(", "X", ")", ",", "\n", "                ", "                ", "     ", "pos"], "logprobs": [-1.0048189163208008, -3.206364154815674, -1.2024751901626587, -0.3427061140537262, -0.05709654092788696, -0.13422495126724243, -0.07248947024345398, -0.033346496522426605, -0.09877513349056244, -0.04661928862333298, -0.11449158191680908, -0.10788380354642868, -0.08471836894750595, -0.0395159050822258, -0.05186247080564499, -0.12651889026165009, -0.04963013529777527, -0.05019376054406166, -0.2246987372636795, -0.11247619241476059, -0.04538288339972496, -0.06722566485404968, -0.04796462133526802, -0.3005690574645996, -0.05920308455824852, -0.14613234996795654, -0.20032252371311188, -0.1043093353509903, -0.0978703573346138, -0.07821828126907349, -0.12595391273498535, -0.11084627360105515, -0.16001760959625244, -0.17276807129383087, -0.19657070934772491, -0.12009027600288391, -0.10973414033651352, -0.21901267766952515, -1.9974579811096191, -0.10213597118854523, -3.362128734588623, -0.028942400589585304, -0.18461285531520844, -0.0002460177056491375, -0.0004957877099514008, -0.380077600479126, -0.0001250427303602919, -7.068861305015162e-05, -4.172316494077677e-06, -4.172316494077677e-06, -1.0772020816802979, -1.4555134773254395, -0.00019751029321923852, -0.0016244561411440372, -4.2676016164477915e-05, -0.034532804042100906, -0.00031680811662226915, -0.0004514628672040999, -0.4846987724304199, -0.10935977846384048, -2.5415403842926025, -0.04251767694950104, -0.05311836674809456, -0.0712028443813324, -0.7391054034233093, -0.5076601505279541, -0.8645248413085938, -2.3507022857666016, -0.0002026352594839409, -0.021876800805330276, -0.004186912905424833, -0.00040415700641460717, -0.00626315176486969, -3.933898824470816e-06, -0.028232820332050323, -0.014008528552949429, -0.0002618685248307884, -6.151010165922344e-05, -6.890059739816934e-05, -0.0013869914691895247, -0.4964977204799652, -1.9311717551317997e-05, -0.04353567212820053, -0.8471955060958862, -0.11484479904174805, -0.10412190109491348, -0.22279997169971466, -0.00746958190575242, -0.0433039590716362, -0.24766607582569122, -0.10100214928388596, -0.0005253365379758179, -0.002009160118177533, -0.003573462599888444, -0.26364848017692566, -0.26210010051727295, -0.08439817279577255, -7.748573807475623e-06, -0.006074656266719103, -1.1920928244535389e-07, -4.7801782784517854e-05, -1.3853691816329956, -1.3589766240329482e-05, -0.00018702188390307128, -7.974783511599526e-05, -0.0013168720761314034, -0.331814706325531, -0.0022128161508589983, -0.023698413744568825, -0.0054233563132584095, -1.8358061424805783e-05, -0.03822902962565422, -0.012028422206640244, -3.4689302992774174e-05, -0.00018916724366135895, -0.0018825681181624532, -9.703165414975956e-05, -0.014704893343150616, -0.0003543464408721775, -0.013710963539779186, -1.1773642301559448, -0.004157709423452616, -0.09088676422834396, -0.0010665925219655037, -0.41971853375434875, -0.48705625534057617, -0.5984225273132324, -0.024013156071305275, -0.041200339794158936, -0.00036423723213374615, -0.0002325502864550799, -0.006132002454251051, -0.5653079748153687, -0.06503208726644516, -0.08509266376495361, -0.007324981968849897, -0.1632591038942337, -0.3505721390247345, -0.008476469665765762, -0.0012529388768598437, -0.00015043080202303827, -0.010721461847424507, -0.0019224273273721337, -0.08167362958192825, -0.0247187577188015, -2.1624648571014404, -5.030505417380482e-05, -2.634490556374658e-05, -0.0012040039291605353, -1.4550074338912964, -0.02830849401652813, -0.004841035231947899, -2.73797607421875, -0.0010456338059157133, -0.08677119016647339, -0.14061862230300903, -0.5913383364677429, -0.000346362212439999, -1.3223357200622559, -0.6296145915985107, -1.5770002603530884, -0.03471624106168747, -0.1786690205335617, -1.6689160474925302e-05, -0.4658367335796356, -0.009749770164489746, -0.018084051087498665, -0.029698805883526802, -0.008277632296085358, -0.3375086188316345, -0.0067990622483193874, -0.41543668508529663, -0.000786591088399291, -0.3618646264076233, -0.250659704208374, -0.0223395973443985, -0.3285086750984192, -1.8620697259902954, -0.5586938261985779, -0.03521686792373657, -0.003985914401710033, -0.0007022537174634635, -0.0006504327175207436, -0.0015097183641046286, -0.000598251644987613, -0.0026139398105442524, -0.0008122005965560675, -0.00046826363541185856, -6.5205356804654e-05, -0.00013517419574782252, -0.0007085673278197646, -0.001553520211018622, -0.001485078944824636, -0.0005218812730163336, -0.00014435203047469258, -0.0009554826538078487, -0.002145728562027216, -0.0015987483784556389, -0.001312586129643023, -0.0011183919850736856, -0.001409133430570364, -0.002580172149464488, -0.011035245843231678, -0.0007731309160590172, -0.0007522851810790598, -0.0005075835506431758, -0.0003992714046034962, -0.00036149643710814416, -0.0032886965200304985, -0.0010657589882612228, -0.0017992750508710742, -0.000795882020611316, -0.001032772590406239, -0.0015356664080172777, -0.003834872040897608, -0.04961833730340004, -0.07583612948656082, -2.1487278938293457, -0.00532185984775424, -0.010431291535496712, -0.008387341164052486, -0.014117492362856865, -0.0011613775277510285, -0.16095760464668274, -0.003460967680439353, -0.041485607624053955, -2.3841855067985307e-07, -3.909988299710676e-05, -1.680836794548668e-05, -0.0007298904820345342, -1.6599252223968506, -0.0002543602604418993, -0.0075352489948272705, -0.002876313403248787, -0.02313595823943615, -0.06993234157562256, -0.7452340126037598, -0.00029476112104021013, -0.0027873970102518797, -0.18053175508975983, -0.0061984676867723465, -3.6954811548639555e-06, -0.0026285641361027956, -0.018075505271553993, -0.018070003017783165, -0.00016616393986623734, -0.0026664913166314363, -0.009225714951753616, -0.004934869706630707, -0.09895428270101547, -0.1473170965909958, -0.014101036824285984, -0.0002401778765488416, -4.994744449504651e-05, -0.0005706112715415657, -0.361556738615036], "finish_reason": "length"}], "metrics": {"energy": 277.9529195165633, "energy_per_token": 1.0857535918615755, "time": 11.359598, "time_per_token": 0.0443734296875}}
{"outputs": [{"text": "X_train, X_test, Y_train, Y_test = train_test_split(\n        X, Y, test_size=0.3, random_state=42\n    )\n    model = keras.models.Sequential([keras.layers.Dense(1, activation=\"sigmoid\")])\n    model.compile(\n        loss=\"binary_crossentropy\",\n        optimizer=keras.optimizers.SGD(learning_rate=0.01),\n        metrics=[\"accuracy\", \"AUC\"],\n    )\n    model.fit(\n        X_train, Y_train, batch_size=32, epochs=5, verbose=0, validation_split=0.2\n    )\n\n    fpr, tpr, thresholds = roc_curve(Y_test, model.predict(X_test))\n\n    ax = plt.plot(fpr, tpr)\n    ax.set(\n        title=\"ROC curve\",\n        xlabel=\"False Positive Rate\",\n        ylabel=\"True Positive Rate\",\n    )\n", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n", "        ", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", "\n", "    ", ")", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "=", "\"", "s", "igmoid", "\"", ")]", ")", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "=", "\"", "binary", "_", "cross", "entropy", "\"", ",", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "1", ")", ",", "\n", "        ", "metrics", "=[", "\"", "accuracy", "\"", ",", " \"", "A", "UC", "\"", "]", ",", "\n", "    ", ")", "\n", "    ", "model", ".", "fit", "(", "\n", "        ", "X", "_", "train", ",", " Y", "_", "train", ",", " batch", "_", "size", "=", "3", "2", ",", " epochs", "=", "5", ",", " verbose", "=", "0", ",", " validation", "_", "split", "=", "0", ".", "2", "\n", "    ", ")", "\n", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "\n", "\n", "    ", "ax", " =", " plt", ".", "plot", "(", "f", "pr", ",", " t", "pr", ")", "\n", "    ", "ax", ".", "set", "(", "\n", "        ", "title", "=", "\"", "R", "OC", " curve", "\"", ",", "\n", "        ", "xlabel", "=", "\"", "False", " Positive", " Rate", "\"", ",", "\n", "        ", "ylabel", "=", "\"", "True", " Positive", " Rate", "\"", ",", "\n", "    ", ")", "\n"], "logprobs": [-1.576674461364746, -0.24037888646125793, -0.011306263506412506, -0.0020811345893889666, -0.003611353924497962, -9.63164638960734e-05, -0.012509218417108059, -0.00038187362952157855, -0.4689818024635315, -0.000219321038457565, -0.00035661060246638954, -0.00019178935326635838, -0.0021927140187472105, -2.002696055569686e-05, -0.00025018901214934886, -0.003572631161659956, -0.016042090952396393, -5.960446742392378e-06, -1.0490362910786644e-05, -9.536738616588991e-07, -9.298280929215252e-06, -0.0003541081096045673, -2.2096266746520996, -0.02693643793463707, -0.003100709058344364, -0.0015672078588977456, -0.07450312376022339, -0.0021570289973169565, -0.07157789170742035, -1.0728830375228426e-06, -3.7788631743751466e-05, -0.005853771697729826, -0.013262624852359295, -2.8967437174287625e-05, -0.007076438516378403, -0.06324994564056396, -0.14816559851169586, -1.0728830375228426e-06, -3.2186455882765586e-06, -0.00078671018127352, -0.20620448887348175, -0.03080287016928196, -0.8861784338951111, -0.0027769359294325113, -0.0004558716027531773, -0.025620246306061745, -0.352868914604187, -0.09186236560344696, -0.0060508400201797485, -0.09720113128423691, -3.4570634852570947e-06, -0.00013684290752280504, -0.7090079188346863, -5.8410845667822286e-05, -2.992108420585282e-05, -2.3841830625315197e-06, -7.033323527139146e-06, -1.0397111177444458, -1.5517293214797974, -0.00018165845540352166, -0.0019909576512873173, -2.0861407392658293e-05, -0.03786099702119827, -0.0002195594133809209, -0.0004557524516712874, -0.38283246755599976, -0.10557801276445389, -0.2373594492673874, -0.09475822001695633, -0.006920416373759508, -0.0018397325184196234, -5.578839045483619e-05, -1.4543427823809907e-05, -0.09097449481487274, -0.00042655906872823834, -0.0048418655060231686, -0.00908443983644247, -0.012854687869548798, -9.417090768693015e-05, -0.0008499585674144328, -8.380061626667157e-05, -0.37371116876602173, -0.0011082704877480865, -0.23890236020088196, -0.0020104688592255116, -0.38124755024909973, -0.011378631927073002, -0.001192930736579001, -0.00021562635083682835, -0.00011753345461329445, -6.4490144723095e-05, -0.00010358751023886725, -0.276305228471756, -0.00010227633902104571, -0.0031519278418272734, -3.3378546504536644e-06, -0.0010642108973115683, -0.44029444456100464, -1.1801649634435307e-05, -0.00027211778797209263, -0.003338361158967018, -8.082063141046092e-05, -0.008794031105935574, -0.00036840804386883974, -0.003954567946493626, -0.750298798084259, -5.1020273531321436e-05, -2.1815061700181104e-05, -0.00035553809721022844, -0.046916209161281586, -0.0015213831793516874, -0.4665842354297638, -0.3589094281196594, -0.004294103477150202, -0.00846878718584776, -0.0017534609651193023, -0.8892828822135925, -0.006190530024468899, -0.014240077696740627, -0.038765743374824524, -0.05580674111843109, -0.00013851160474587232, -1.493997573852539, -0.036867767572402954, -1.2646727561950684, -0.0016285026213154197, -0.005949999671429396, -0.046480923891067505, -0.01487391721457243, -0.012788193300366402, -0.009122123010456562, -0.0001209901092806831, -0.0015076948329806328, -0.028094206005334854, -0.3160332441329956, -0.003433643840253353, -0.000936189026106149, -4.3748852476710454e-05, -2.5644705295562744, -0.00022289653134066612, -0.04430564120411873, -0.05713752657175064, -0.0002575780963525176, -0.0019459851318970323, -1.5209434032440186, -0.0030757521744817495, -9.65590606938349e-06, -0.0003143055073451251, -1.5888127088546753, -5.245195097813848e-06, -1.2636104656849056e-05, -0.00022289653134066612, -1.0685789585113525, -0.009010132402181625, -0.0001919085334520787, -0.04055309668183327, -0.00013124081306159496, -1.2793937921524048, -0.18669554591178894, -0.053441502153873444, -0.0002153879904653877, -0.23121681809425354, -0.04436471685767174, -0.2981390058994293, -4.005352093372494e-05, -0.19668468832969666, -0.00019095504831057042, -0.008920460008084774, -0.0009465504554100335, -0.6256666779518127, -0.3277624249458313, -0.00022825974156148732, -0.00012957210128661245, -0.002520362613722682, -1.9231033325195312, -0.0033883799333125353, -2.3652195930480957, -0.00261310744099319, -0.0060061682015657425, -0.007504486478865147, -0.02019451931118965, -0.00048351517762057483, -0.3240293860435486, -0.0008542464347556233, -0.008345728740096092, -1.1920928244535389e-07, -1.549708758830093e-05, -1.7046782886609435e-05, -0.00017212340026162565, -0.23558038473129272, -0.0030714739114046097, -0.0006730675231665373, -0.015266708098351955, -0.024570465087890625, -9.035655966727063e-05, -0.0011520899133756757, -0.003030947409570217, -0.00010752100206445903, -5.2689116273541003e-05, -2.6702524337451905e-05, -0.5308972597122192, -0.012387127615511417, -2.2379872798919678, -0.00036399890086613595, -0.39105427265167236, -0.7175434231758118, -0.004046942573040724, -0.002771467436105013, -0.7379626035690308, -0.011568369343876839, -0.6160526871681213, -5.602820692729438e-06, -0.0022408869117498398, -0.001278655487112701, -6.437094270950183e-05, -2.2944583892822266, -0.004924667999148369, -0.16642966866493225, -0.7825019955635071, -0.15477854013442993, -0.06887322664260864, -0.7803937196731567, -0.24977558851242065, -0.0002734287118073553, -0.1378871351480484, -0.002022841712459922, -0.002831975230947137, -0.08813194185495377, -0.0016843193443492055, -0.02729146182537079, -0.0069515518844127655, -8.916457591112703e-05, -0.069988913834095, -0.00032431588624604046, -0.007588015403598547, -0.001149232150055468, -0.0031540668569505215, -0.00812652800232172, -0.593207836151123, -0.006395823787897825, -0.04398798197507858, -1.7523612768854946e-05, -0.0009386900928802788, -0.00013493580627255142, -0.0006723527330905199, -0.00018344627460464835, -5.4596363042946905e-05, -0.0006982034537941217, -0.0007720588473603129, -0.0011204162146896124, -0.0016390950186178088, -0.003967510536313057, -0.0006842655711807311, -0.11629589647054672, -0.0055716694332659245, -0.002445684978738427], "finish_reason": "length"}], "metrics": {"energy": 257.39604092693304, "energy_per_token": 1.0054532848708322, "time": 11.129189, "time_per_token": 0.04347339453125}}
{"outputs": [{"text": "# TODO\n    # Create a model with a single hidden layer and a sigmoid activation\n    #\n    #\n    # Compile the model using binary cross-entropy loss and an SGD optimizer with a learning rate of 0.1\n    #\n    #\n    # Fit the model to the training data with a non-verbose mode\n    #\n    #\n    # Use the test set to plot the ROC curve for the model\n    #\n    #\n    # Return the trained model and the axes object for the plot\n    model = keras.models.Sequential()\n    model.add(keras.layers.Dense(1, activation='sigmoid'))\n    model.compile(loss='binary_crossentropy', optimizer='sgd', metrics=['accuracy'])\n    model.fit(X, Y)\n    fig, ax = plt.subplots()\n    ax.plot(\n        fpr, tpr, 'r', linewidth=2.0, label='ROC curve')\n    ax.plot([0, 1], [0, 1], 'k', linewidth=2.0, linestyle='--')", "tokens": ["#", " TODO", "\n", "    ", "#", " Create", " a", " model", " with", " a", " single", " hidden", " layer", " and", " a", " s", "igmoid", " activation", "\n", "    ", "#", "\n", "    ", "#", "\n", "    ", "#", " Com", "pile", " the", " model", " using", " binary", " cross", "-", "entropy", " loss", " and", " an", " SGD", " optimizer", " with", " a", " learning", " rate", " of", " ", "0", ".", "1", "\n", "    ", "#", "\n", "    ", "#", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", " with", " a", " non", "-", "verbose", " mode", "\n", "    ", "#", "\n", "    ", "#", "\n", "    ", "#", " Use", " the", " test", " set", " to", " plot", " the", " R", "OC", " curve", " for", " the", " model", "\n", "    ", "#", "\n", "    ", "#", "\n", "    ", "#", " Return", " the", " trained", " model", " and", " the", " axes", " object", " for", " the", " plot", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "='", "s", "igmoid", "'))", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", " metrics", "=['", "accuracy", "'])", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ")", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "plot", "(", "\n", "        ", "f", "pr", ",", " t", "pr", ",", " '", "r", "'", ",", " linewidth", "=", "2", ".", "0", ",", " label", "='", "R", "OC", " curve", "')", "\n", "    ", "ax", ".", "plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " '", "k", "'", ",", " linewidth", "=", "2", ".", "0", ",", " lin", "estyle", "='", "--", "')"], "logprobs": [-1.0048189163208008, -2.5345816612243652, -1.8083765506744385, -0.2733938694000244, -1.5728031396865845, -3.4213125705718994, -0.29792726039886475, -2.9618427753448486, -0.214597687125206, -1.5414009094238281, -0.26562926173210144, -0.08918830752372742, -0.0016888416139408946, -1.7783626317977905, -1.5757873058319092, -0.14265793561935425, -0.0009265420376323164, -0.0066926134750247, -2.1636157035827637, -0.010096666403114796, -0.8508853316307068, -4.38500452041626, -0.0217581819742918, -0.08689393103122711, -3.633042812347412, -0.05981883406639099, -0.2541503608226776, -0.7835453748703003, -0.0002834395272657275, -0.046210967004299164, -0.0018780466634780169, -2.702883720397949, -0.2565673589706421, -0.03539201244711876, -0.08106470853090286, -0.00017629499780014157, -0.10185403376817703, -0.18669642508029938, -0.19746504724025726, -0.21453362703323364, -0.003267546882852912, -1.0362520217895508, -0.10975775122642517, -0.04574257880449295, -0.008953659795224667, -0.432454377412796, -0.009634544141590595, -0.10640329122543335, -0.00038223114097490907, -0.8118821978569031, -0.0573602020740509, -0.01723526418209076, -0.011777746491134167, -0.049435682594776154, -0.0038069647271186113, -0.002751257736235857, -0.08807539939880371, -0.0016350485384464264, -0.0010829067323356867, -0.2378533035516739, -0.002771110739558935, -0.0009157040040008724, -0.15903553366661072, -0.017797298729419708, -0.05122571811079979, -0.01588781364262104, -2.2733678817749023, -0.21311108767986298, -0.008687558583915234, -0.002510374179109931, -0.001468176138587296, -0.25297510623931885, -0.431913286447525, -0.011487646959722042, -0.0039747534319758415, -0.02890974096953869, -0.006910945288836956, -0.0063798329792916775, -0.05217639356851578, -0.003243901301175356, -0.005541795399039984, -3.7525129318237305, -0.4811083972454071, -1.0446821451187134, -0.443970263004303, -0.1762952208518982, -0.6216376423835754, -0.020956052467226982, -0.02329203300178051, -3.933898824470816e-06, -0.01407600101083517, -2.5316243171691895, -0.008543016389012337, -0.018527191132307053, -0.45603081583976746, -0.08021285384893417, -0.05459270998835564, -0.10502973943948746, -0.025668233633041382, -0.042914263904094696, -0.061127811670303345, -0.05808980017900467, -0.07975088059902191, -1.1574294567108154, -0.022943394258618355, -1.0229228734970093, -0.033453259617090225, -0.05628734454512596, -0.08582451939582825, -2.1999800205230713, -0.3336443305015564, -0.3718852400779724, -0.030015716329216957, -1.2759300470352173, -0.09211767464876175, -0.35488370060920715, -1.7953252792358398, -0.02400140091776848, -0.3299233615398407, -5.364274329622276e-05, -0.0004768426588270813, -0.5209673047065735, -0.00013886917440686375, -5.2569914259947836e-05, -2.50339189733495e-06, -7.986990567587782e-06, -0.8784900307655334, -0.017942851409316063, -0.030224967747926712, -0.02356242761015892, -0.00023338454775512218, -0.0002456601650919765, -0.00015615197480656207, -0.04171156883239746, -2.729855441430118e-05, -0.0019501493079587817, -2.3841574147809297e-05, -0.021365715190768242, -0.00032908268622122705, -0.00030357998912222683, -0.48294979333877563, -0.12428298592567444, -1.0465368032455444, -0.27410274744033813, -0.004476051311939955, -3.9934315282152966e-05, -1.1476553678512573, -0.01757793501019478, -0.09255897253751755, -0.017537405714392662, -0.004022009205073118, -0.02929161675274372, -0.0041105784475803375, -0.3886818587779999, -0.07867192476987839, -0.014572614803910255, -0.0034027553629130125, -0.00029297350556589663, -0.00015722469834145159, -0.0003292018664069474, -0.003789507318288088, -0.11454590409994125, -0.49494805932044983, -0.3777501881122589, -0.0001915509783430025, -0.006842277944087982, -0.0028008301742374897, -2.239468574523926, -0.08050315082073212, -0.08083800971508026, -0.11099382489919662, -0.0040833912789821625, -0.03201978653669357, -0.14134915173053741, -0.0029916076455265284, -0.002022841712459922, -0.0002706876548472792, -0.006962798070162535, -0.0027191590052098036, -0.03629715368151665, -2.699026584625244, -0.009979828260838985, -0.13263356685638428, -4.23896598815918, -0.4033484160900116, -0.07232259213924408, -0.013980668969452381, -0.0012265071272850037, -0.00028308198670856655, -0.013661575503647327, -9.07141511561349e-05, -0.14996705949306488, -0.002825318370014429, -0.02663271315395832, -1.342926263809204, -0.04536590725183487, -0.5022862553596497, -0.2245100885629654, -1.7452192306518555, -0.03945115953683853, -1.108662486076355, -0.00019739109848160297, -0.006428515538573265, -0.35932937264442444, -0.0066139837726950645, -0.005406045820564032, -2.9391818046569824, -1.4357905387878418, -0.4490874409675598, -0.0029295645654201508, -2.877656936645508, -0.01644274778664112, -0.6563665270805359, -2.3327977657318115, -0.053115200251340866, -0.0018510365625843406, -0.11257525533437729, -0.3304623067378998, -0.5705215930938721, -0.0033475097734481096, -0.12974676489830017, -0.2315785139799118, -0.0032963010016828775, -0.016833867877721786, -0.04464258253574371, -0.00032300499151460826, -0.18819276988506317, -0.20312924683094025, -0.001834853901527822, -0.0695468857884407, -0.004430834669619799, -0.016024962067604065, -0.0009716795175336301, -5.507317473529838e-05, -0.002820206806063652, -0.0009099871967919171, -0.0004558716027531773, -0.0002733095607254654, -0.0001784403866622597, -0.0008546037715859711, -9.572047565598041e-05, -0.11519257724285126, -0.04079117253422737, -0.5931228399276733, -0.0005987281911075115, -0.17062297463417053, -0.001046705641783774, -0.09749843925237656, -0.004807698540389538, -0.0014618673594668508, -0.49871328473091125, -0.5610688924789429, -7.70062324590981e-05, -0.03654785081744194, -0.0994817242026329, -0.09106798470020294], "finish_reason": "length"}], "metrics": {"energy": 315.4572018537519, "energy_per_token": 1.2322546947412183, "time": 12.600159, "time_per_token": 0.04921937109375}}
{"outputs": [{"text": "X_train, X_test, Y_train, Y_test = train_test_split(\n        X, Y, test_size=0.3, random_state=42, shuffle=True)\n\n    model = keras.Sequential([keras.layers.Dense(32, activation=\"sigmoid\")])\n    model.compile(\n        loss=\"binary_crossentropy\",\n        optimizer=keras.optimizers.SGD(learning_rate=0.1),\n        metrics=[\"accuracy\"],\n    )\n    model.fit(X_train, Y_train, epochs=5, verbose=0)\n    model.evaluate(X_test, Y_test, verbose=0)\n    fpr, tpr, thresholds = roc_curve(Y_test, model.predict(X_test))\n    roc_auc = auc(fpr, tpr)\n    ax.plot(fpr, tpr, label=f\"AUC = {roc_auc:.2f}\")\n    ax.set_title(\"ROC curve\")\n    ax", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n", "        ", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ",", " shuffle", "=", "True", ")", "\n", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "3", "2", ",", " activation", "=", "\"", "s", "igmoid", "\"", ")]", ")", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "=", "\"", "binary", "_", "cross", "entropy", "\"", ",", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "1", ")", ",", "\n", "        ", "metrics", "=[", "\"", "accuracy", "\"", "]", ",", "\n", "    ", ")", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "5", ",", " verbose", "=", "0", ")", "\n", "    ", "model", ".", "evaluate", "(", "X", "_", "test", ",", " Y", "_", "test", ",", " verbose", "=", "0", ")", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "\n", "    ", "roc", "_", "auc", " =", " a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n", "    ", "ax", ".", "plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "\"", "A", "UC", " =", " {", "roc", "_", "auc", ":", ".", "2", "f", "}\"", ")", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "R", "OC", " curve", "\"", ")", "\n", "    ", "ax"], "logprobs": [-1.576674461364746, -0.24037888646125793, -0.011306263506412506, -0.0020811345893889666, -0.003611353924497962, -9.63164638960734e-05, -0.012509218417108059, -0.00038187362952157855, -0.4689818024635315, -0.000219321038457565, -0.00035661060246638954, -0.00019178935326635838, -0.0021927140187472105, -2.002696055569686e-05, -0.00025018901214934886, -0.003572631161659956, -0.016042090952396393, -5.960446742392378e-06, -1.0490362910786644e-05, -9.536738616588991e-07, -9.298280929215252e-06, -0.0003541081096045673, -2.2096266746520996, -0.02693643793463707, -0.003100709058344364, -0.0015672078588977456, -0.07450312376022339, -0.0021570289973169565, -0.07157789170742035, -1.0728830375228426e-06, -3.7788631743751466e-05, -0.005853771697729826, -0.013262624852359295, -2.8967437174287625e-05, -0.007076438516378403, -0.06324994564056396, -0.14816559851169586, -1.0728830375228426e-06, -3.2186455882765586e-06, -0.00078671018127352, -0.20620448887348175, -0.03080287016928196, -1.3442606925964355, -0.49315929412841797, -0.0020277192816138268, -0.03629554435610771, -1.2540652751922607, -0.012135717086493969, -0.7675800919532776, -0.00037019551382400095, -0.08057915419340134, -0.005357195157557726, -0.10198289901018143, -2.7418097943154862e-06, -0.00011646069469861686, -0.7536009550094604, -2.264974000354414e-06, -1.4305104514278355e-06, -0.20112450420856476, -2.7702364921569824, -0.00021050144277978688, -0.0034957746975123882, -2.8967437174287625e-05, -0.031701087951660156, -0.00016532962035853416, -0.00017355366435367614, -3.076420783996582, -0.6841428279876709, -0.0034374454990029335, -0.1898033320903778, -1.5476616621017456, -0.08301565796136856, -0.0710413008928299, -4.160317621426657e-05, -1.2993727978027891e-05, -0.9668115377426147, -0.0027852572966367006, -0.005974411033093929, -0.06545569002628326, -0.01566239632666111, -0.00011991735664196312, -0.0012378181563690305, -0.0002307625545654446, -0.7652194499969482, -0.005000703036785126, -0.211955726146698, -0.015620029531419277, -0.31893330812454224, -0.01865380071103573, -0.001759410952217877, -0.0002356490003876388, -0.000169382052263245, -9.583967766957358e-05, -0.00025042734341695905, -0.1808445006608963, -0.00021395778458099812, -0.003717537270858884, -4.172316494077677e-06, -0.0020503229461610317, -0.7157027721405029, -2.038458114839159e-05, -0.00037222131504677236, -0.005907219834625721, -0.00011884459672728553, -0.023241952061653137, -0.000491021724883467, -0.005061906296759844, -0.5837572813034058, -6.460934673668817e-05, -2.2053474822314456e-05, -0.000679500459227711, -0.048264097422361374, -0.0011737607419490814, -1.0733073949813843, -0.008778905496001244, -0.05850881710648537, -0.0043262699618935585, -0.5796490907669067, -0.0033503612503409386, -0.020570745691657066, -0.04478074610233307, -0.061458684504032135, -0.00019071667338721454, -0.47165021300315857, -0.06754204630851746, -0.012413972057402134, -0.022405577823519707, -0.0002469711471349001, -0.0009717986104078591, -0.5701904892921448, -0.2338775098323822, -0.003410002216696739, -0.001319729257375002, -5.98412734689191e-05, -0.04489324614405632, -0.018374115228652954, -0.0002562671434134245, -0.00029059001826681197, -0.010700821876525879, -0.0005878866068087518, -2.47952248173533e-05, -0.007528741378337145, -0.6207937598228455, -0.00017271934484597296, -1.441906213760376, -0.2090914100408554, -0.02640366740524769, -0.00029345019720494747, -0.16057218611240387, -0.11944327503442764, -0.006579521577805281, -0.6721785664558411, -2.790025234222412, -0.10972484946250916, -0.2936145067214966, -0.0011949549661949277, -0.0026246407069265842, -0.0008625839254818857, -0.014101624488830566, -0.00070296844933182, -0.006633759941905737, -0.00039772229501977563, -4.637133679352701e-05, -0.41849422454833984, -0.006399732548743486, -0.00028725311858579516, -0.032427139580249786, -0.04313202202320099, -0.021049905568361282, -0.40599942207336426, -2.157111644744873, -0.003076584078371525, -0.004024146590381861, -0.0056686364114284515, -0.03306259214878082, -0.0006057572900317609, -0.23869656026363373, -0.001110890181735158, -0.006121457554399967, -1.1920928244535389e-07, -1.9907753085135482e-05, -1.2159273865108844e-05, -0.000346362212439999, -0.08706986904144287, -0.0017938013188540936, -0.0009527434594929218, -0.026939107105135918, -0.022957025095820427, -0.00011955977242905647, -0.0008898589294403791, -0.0048837424255907536, -0.0002356490003876388, -7.176141662057489e-05, -2.4914430468925275e-05, -0.37821272015571594, -0.013375434093177319, -0.09709706902503967, -1.533877968788147, -0.004678849596530199, -0.0057679638266563416, -0.006383978761732578, -0.0014663906767964363, -2.622600959512056e-06, -0.00012516192509792745, -0.0016912217251956463, -4.291525328881107e-06, -0.004354518838226795, -0.0004906642716377974, -0.0005368936690501869, -0.0007159530650824308, -0.00389519683085382, -0.3016278147697449, -0.4424003064632416, -0.3955518901348114, -0.15450350940227509, -0.023607837036252022, -0.21845939755439758, -5.602820692729438e-06, -0.0007447806419804692, -0.0011676882859319448, -0.00044312194222584367, -0.0018961322493851185, -0.14186100661754608, -0.0065309652127325535, -0.4443914592266083, -0.04318077489733696, -0.318759560585022, -0.007762504741549492, -0.8637904524803162, -0.020874332636594772, -0.019291279837489128, -2.002696055569686e-05, -8.4638240878121e-06, -0.14343108236789703, -0.028568152338266373, -0.2585821747779846, -0.004594128113240004, -0.003362836316227913, -0.041667547076940536, -0.009788372553884983, -0.058867983520030975, -0.089556023478508, -0.0005669178790412843, -0.4459984302520752, -0.2901152968406677, -0.026832692325115204, -0.004687748849391937, -0.005666976794600487, -0.07093958556652069, -0.0013328249333426356, -0.056111425161361694, -0.0057998462580144405, -0.032358698546886444, -0.006277012173086405, -0.0010725465836003423, -0.002863594563677907], "finish_reason": "length"}], "metrics": {"energy": 302.2104504337312, "energy_per_token": 1.1805095720067624, "time": 12.389304, "time_per_token": 0.04839571875}}
{"outputs": [{"text": "# Split the data into training and test sets\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    # Create a Keras Sequential model with one hidden layer using sigmoid activation\n    model = keras.Sequential([\n        keras.layers.Dense(2, activation='sigmoid'),\n        keras.layers.Dense(1)\n    ])\n\n    # Compile the model with binary cross-entropy loss and an SGD optimizer\n    model.compile(loss='binary_crossentropy', optimizer='sgd', metrics=['accuracy'])\n\n    # Fit the model to the training data\n    model.fit(X_train, Y_train, epochs=20, verbose=0)\n\n    # Plot the ROC curve for the test set\n    Y_pred = model.predict(X_test)\n    fpr, tpr, thresholds = roc_curve(Y_test, Y_pred[:, 0])\n\n    # Plot the ROC curve\n    ax =", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " a", " K", "eras", " Sequ", "ential", " model", " with", " one", " hidden", " layer", " using", " s", "igmoid", " activation", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "2", ",", " activation", "='", "s", "igmoid", "')", ",", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ")", "\n", "    ", "])", "\n", "\n", "    ", "#", " Com", "pile", " the", " model", " with", " binary", " cross", "-", "entropy", " loss", " and", " an", " SGD", " optimizer", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", " metrics", "=['", "accuracy", "'])", "\n", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "2", "0", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "#", " Plot", " the", " R", "OC", " curve", " for", " the", " test", " set", "\n", "    ", "Y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "test", ")", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", "[:", ",", " ", "0", "])", "\n", "\n", "    ", "#", " Plot", " the", " R", "OC", " curve", "\n", "    ", "ax", " ="], "logprobs": [-1.0048189163208008, -1.5023609399795532, -0.23366813361644745, -0.24568253755569458, -0.04483272507786751, -0.055045802146196365, -0.02190222591161728, -0.07034442573785782, -0.00994996726512909, -0.15945062041282654, -0.0018512745155021548, -0.47647398710250854, -0.012723930180072784, -0.0023098711390048265, -0.000580499938223511, -0.0019976201001554728, -5.9126061387360096e-05, -0.0036170552484691143, -0.00023755589791107923, -0.3164496123790741, -0.00011657988943625242, -4.7801782784517854e-05, -6.675497570540756e-05, -0.003548992797732353, -1.0013530300057027e-05, -5.8410845667822286e-05, -0.0006494796834886074, -0.00779515178874135, -1.5497195136049413e-06, -1.1920858014491387e-05, -5.960462772236497e-07, -4.172316494077677e-06, -9.476689592702314e-05, -0.1341998279094696, -0.0002441108226776123, -0.003416180144995451, -0.006938529666513205, -0.034409571439027786, -2.3841855067985307e-07, -2.729855441430118e-05, -0.002419165801256895, -0.007530516013503075, -2.47952248173533e-05, -0.00876094400882721, -0.11056635528802872, -0.056724127382040024, -9.536738616588991e-07, -3.4570634852570947e-06, -0.00046266341814771295, -0.11001098155975342, -0.01479087769985199, -0.06760042905807495, -0.0016244561411440372, -0.09193740040063858, -0.0004644507134798914, -0.013882623985409737, -0.15453119575977325, -0.1307757943868637, -0.26322025060653687, -3.6477376852417365e-05, -0.13176539540290833, -4.053033626405522e-05, -0.0007995745982043445, -0.04789121821522713, -0.12372706830501556, -0.002699899487197399, -0.000398198957554996, -1.070762276649475, -2.4077041149139404, -0.00040344204171560705, -0.08222497254610062, -0.33337703347206116, -0.0010187203297391534, -0.010896819643676281, -0.0015817285748198628, -0.10742876678705215, -8.34461570775602e-06, -4.911301948595792e-05, -0.3727113604545593, -1.7881377516459906e-06, -1.0847986231965479e-05, -0.033981483429670334, -0.03106788918375969, -0.010569191537797451, -0.011220922693610191, -6.6756979322235566e-06, -0.0027136902790516615, -6.079655122448457e-06, -0.03959061577916145, -0.00021491125517059118, -1.680836794548668e-05, -1.9985976219177246, -0.1280495524406433, -0.35297679901123047, -0.139926940202713, -0.011686201207339764, -1.2397689715726301e-05, -0.35393643379211426, -0.1439523994922638, -0.02509584277868271, -0.030053891241550446, -0.002061267616227269, -0.0006062338361516595, -0.00030763185350224376, -1.4305104514278355e-06, -0.011520997621119022, -0.00016640232934150845, -8.761498611420393e-05, -0.013837477192282677, -0.4195637106895447, -0.055592965334653854, -0.009006352163851261, -0.0006625840906053782, -0.00014685506175737828, -0.03081858903169632, -0.00012063252506777644, -0.005444816313683987, -0.007557491771876812, -3.433168603805825e-05, -0.019541950896382332, -0.0004231034545227885, -0.155295729637146, -0.03741118684411049, -0.003794020274654031, -0.01931712217628956, -9.357491217087954e-05, -0.005191298667341471, -0.03314470499753952, -0.10229826718568802, -0.07714131474494934, -0.0008423355757258832, -0.9638134241104126, -0.00017557987303007394, -0.08512287586927414, -4.9828242481453344e-05, -0.00026782741770148277, -0.00023505308490712196, -0.7480791211128235, -0.028420547023415565, -0.008462167344987392, -0.0007581220706924796, -0.00034445550409145653, -5.400034933700226e-05, -0.00013684290752280504, -0.0010742137674242258, -0.030376585200428963, -0.0676228255033493, -0.3613163232803345, -0.0001954841281985864, -0.4279802143573761, -0.0036718109622597694, -0.47541242837905884, -0.021687142550945282, -0.03673620522022247, -0.059545040130615234, -0.0008169650682248175, -0.003150026546791196, -0.00022432672267314047, -0.0011450645979493856, -0.023456817492842674, -0.001141849672421813, -0.00042572495294734836, -0.018694400787353516, -0.01253464724868536, -0.004080898128449917, -0.011453117243945599, -0.38422897458076477, -0.0001711698860162869, -0.09906614571809769, -0.0005650115781463683, -0.0004542034293990582, -2.9444261599564925e-05, -0.011491653509438038, -0.008816954679787159, -2.13382354559144e-05, -0.0002101439022226259, -0.009034823626279831, -0.00010406429646536708, -4.6491513785440475e-06, -0.0067757368087768555, -0.3565013110637665, -0.00020275443966966122, -2.046801805496216, -0.33058327436447144, -0.1920645385980606, -0.1154283955693245, -0.00026639728457666934, -0.10229116678237915, -0.09028669446706772, -0.004558410029858351, -0.0078547652810812, -0.0005906267906539142, -0.006872823927551508, -0.3853009343147278, -0.013203215785324574, -0.028986753895878792, -2.861018856492592e-06, -0.006287081632763147, -0.15044981241226196, -0.00806527491658926, -2.2562432289123535, -0.18538673222064972, -0.25351303815841675, -0.0007197650265879929, -2.775097131729126, -0.001984652131795883, -0.17452819645404816, -0.021475864574313164, -0.013554796576499939, -2.0146166207268834e-05, -0.00031382881570607424, -0.03278529271483421, -9.929640509653836e-05, -0.0002079985715681687, -0.00016926287207752466, -0.0034010920207947493, -0.04577742516994476, -0.027458254247903824, -0.12358148396015167, -0.0003343261778354645, -0.0015474499668926, -0.0019515770254656672, -0.007165566086769104, -0.0004395472351461649, -0.4553782045841217, -0.00022301571152638644, -0.005155602004379034, -1.1920928244535389e-07, -7.867782187531702e-06, -1.2278481335670222e-05, -7.199982064776123e-05, -0.009539377875626087, -0.0002033503697020933, -0.0028456454165279865, -0.15229907631874084, -0.001320205512456596, -0.00011872540198964998, -9.285972191719338e-05, -0.8481082916259766, -0.00023421882360707968, -0.06869038194417953, -0.007382611744105816, -0.03938915953040123, -0.01163789164274931, -1.6586865186691284, -0.0003219324571546167, -0.6172457337379456, -2.3052847385406494, -0.1303977072238922, -0.24217282235622406, -3.099393507000059e-05, -0.004324133507907391, -0.3302885591983795, -0.0006566275842487812, -0.6328111290931702, -0.5300299525260925], "finish_reason": "length"}], "metrics": {"energy": 296.9367880001067, "energy_per_token": 1.1599093281254167, "time": 12.392671, "time_per_token": 0.04840887109375}}
{"outputs": [{"text": "X, y = train_test_split(X, y, train_size=0.7, random_state=42)\n\n    model = keras.models.Sequential([\n        keras.layers.Dense(5, activation='sigmoid')\n    ])\n\n    model.compile(loss='binary_crossentropy', optimizer='sgd', metrics=['accuracy'])\n\n    model.fit(X, y, verbose=0, epochs=500)\n\n    fpr, tpr, thresholds = roc_curve(y, model.predict(X))\n\n    ax.plot(fpr, tpr, label='ROC curve')\n    ax.plot([0, 1], [0, 1], linestyle='--')\n    ax.xaxis.set_aspect('equal', 'box')\n    ax.set_xlabel(\"False Positive Rate\")\n    ax.set_ylabel(\"True Positive Rate\")\n    ax.set_title('ROC curve')\n\n    return model, ax", "tokens": ["X", ",", " y", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " train", "_", "size", "=", "0", ".", "7", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "5", ",", " activation", "='", "s", "igmoid", "')", "\n", "    ", "])", "\n", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", " metrics", "=['", "accuracy", "'])", "\n", "\n", "    ", "model", ".", "fit", "(", "X", ",", " y", ",", " verbose", "=", "0", ",", " epochs", "=", "5", "0", "0", ")", "\n", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "y", ",", " model", ".", "predict", "(", "X", "))", "\n", "\n", "    ", "ax", ".", "plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", "')", "\n", "    ", "ax", ".", "plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " lin", "estyle", "='", "--", "')", "\n", "    ", "ax", ".", "x", "axis", ".", "set", "_", "aspect", "('", "equal", "'", ",", " '", "box", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "\"", "False", " Positive", " Rate", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "(", "\"", "True", " Positive", " Rate", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "R", "OC", " curve", "')", "\n", "\n", "    ", "return", " model", ",", " ax", "\n", "\n", "def"], "logprobs": [-1.576674461364746, -1.8103461265563965, -1.9055590629577637, -0.044487979263067245, -0.4707339107990265, -0.00016926287207752466, -0.0001720042055239901, -7.10462118149735e-05, -1.8954096958623268e-05, -0.0007715824176557362, -0.012535235844552517, -0.0011834054021164775, -1.0687940120697021, -0.10897693037986755, -2.5761866569519043, -9.679325739853084e-05, -0.0018311651656404138, -0.028039148077368736, -0.08430975675582886, -7.366862701019272e-05, -0.015539046376943588, -0.541130781173706, -0.2554321587085724, -1.9907753085135482e-05, -1.0847986231965479e-05, -0.0028389885555952787, -0.38833555579185486, -0.055507149547338486, -0.18483830988407135, -0.02405097894370556, -1.6083261966705322, -0.001157448161393404, -0.09641899168491364, -0.005275258328765631, -0.20577596127986908, -3.2186455882765586e-06, -0.00014447122521232814, -0.5377697944641113, -0.00011753345461329445, -6.186770770000294e-05, -3.576272320060525e-06, -6.794906312279636e-06, -0.9774302244186401, -0.052587833255529404, -0.01955539360642433, -0.011270665563642979, -2.288792165927589e-05, -0.0005958688561804593, -1.680836794548668e-05, -0.03134485334157944, -0.00022146634000819176, -4.541770613286644e-05, -3.8911781311035156, -0.568271815776825, -0.5044752359390259, -0.24812938272953033, -0.024661071598529816, -6.592056161025539e-05, -1.2709704637527466, -0.7440237998962402, -0.02061932533979416, -0.0028877246659249067, -0.0005098473629914224, -0.296964555978775, -0.00020692592079285532, -0.02326769195497036, -0.00013779645087197423, -0.0010845737997442484, -0.0008082698914222419, -0.5964770913124084, -0.05686434730887413, -0.013061795383691788, -0.003920489456504583, -0.000285584683297202, -0.00016246906307060272, -0.0004862556525040418, -0.009310045279562473, -0.18870578706264496, -0.051251426339149475, -0.34234482049942017, -0.00023135847004596144, -0.09797444194555283, -0.006438227836042643, -1.0873284339904785, -0.07048697024583817, -0.06518711894750595, -0.07838759571313858, -0.0017149040941148996, -0.2921299338340759, -0.00025662468397058547, -0.26904135942459106, -0.002690982772037387, -0.00043752157944254577, -0.00011777184408856556, -0.019721612334251404, -0.0019175490597262979, -0.01412748359143734, -0.02742288075387478, -0.7149350047111511, -0.002174039138481021, -0.07063961029052734, -0.29814979434013367, -0.6335791945457458, -0.0005536930402740836, -1.612358808517456, -0.9302082657814026, -1.465057373046875, -1.1688898801803589, -0.007279420271515846, -0.0608547106385231, -0.0012153151910752058, -1.4332631826400757, -0.0022858462762087584, -0.003761004889383912, -0.007580443751066923, -0.014538072980940342, -0.000700466800481081, -0.34771424531936646, -0.001082073082216084, -0.009423655457794666, -3.576278118089249e-07, -1.966933996300213e-05, -1.1444026313256472e-05, -0.00021205084340181202, -0.09552356600761414, -0.05030474439263344, -0.05195414647459984, -0.00021073981770314276, -0.0012525817146524787, -0.012739349156618118, -0.002049728063866496, -0.2010425180196762, -0.014431740157306194, -0.4763937294483185, -0.00026544384309090674, -0.4742951989173889, -0.734172523021698, -0.05902835726737976, -0.04564771056175232, -0.028542781248688698, -9.894321920000948e-06, -0.001709786825813353, -0.001520430902019143, -7.188061863416806e-05, -0.03883374482393265, -0.36817899346351624, -0.6317588090896606, -0.7711242437362671, -0.0018775707576423883, -0.23815886676311493, -0.43489670753479004, -0.003055073320865631, -0.17422859370708466, -0.0158016886562109, -0.0003846143954433501, -0.6242247223854065, -0.3065826892852783, -0.002206274075433612, -0.007352318149060011, -0.007774333469569683, -0.010018422268331051, -0.0009170140838250518, -9.48860906646587e-05, -0.001121845212765038, -0.0008255410939455032, -0.00025948495022021234, -0.00036161558819003403, -0.00021002470748499036, -0.00660782540217042, -6.925819616299123e-05, -0.6784975528717041, -8.583032467868179e-06, -0.0031171089503914118, -0.07707454264163971, -0.8740838170051575, -0.005797120276838541, -0.17808836698532104, -0.00967173371464014, -0.00054058717796579, -2.440847635269165, -0.06469625234603882, -6.23445157543756e-05, -0.5882164835929871, -0.000395815703086555, -0.9581575393676758, -0.16237963736057281, -0.07023397833108902, -0.08477137982845306, -0.0053682224825024605, -0.017624786123633385, -0.2626648545265198, -0.00014518637908622622, -0.0013092526933178306, -0.2056417614221573, -0.009426489472389221, -0.0002805792901199311, -0.406416118144989, -0.44814443588256836, -0.7058544158935547, -2.836230993270874, -0.05111607909202576, -0.04843265563249588, -0.37057653069496155, -0.012298699468374252, -0.025956803932785988, -0.020963873714208603, -0.01447368785738945, -0.00037448544753715396, -0.0004978132783435285, -8.594620157964528e-05, -0.00032669928623363376, -1.823885577323381e-05, -0.0010381315369158983, -0.008767088875174522, -7.486063259420916e-05, -0.0012038849527016282, -0.0018550821114331484, -0.0017603629967197776, -0.0018937526037916541, -0.0035185827873647213, -0.0023372257128357887, -0.16346047818660736, -0.03911338374018669, -0.001914812484756112, -0.18298785388469696, -0.0029217195697128773, -0.12781940400600433, -1.2111313343048096, -0.09875893592834473, -0.0024132197722792625, -0.09112163633108139, -0.018243608996272087, -0.005609011277556419, -0.8145341277122498, -0.006503488402813673, -0.39350956678390503, -0.020677711814641953, -0.0022802562452852726, -0.003908377606421709, -0.2979850172996521, -0.008870244957506657, -0.6635277271270752], "finish_reason": "stop"}], "metrics": {"energy": 298.0539175682068, "energy_per_token": 1.2316277585463091, "time": 11.558587, "time_per_token": 0.047762756198347106}}
{"outputs": [{"text": "X_train, X_test, y_train, y_test = train_test_split(\n        X, Y, test_size=0.3, random_state=1\n    )\n    model = keras.Sequential([\n        keras.layers.Dense(1, activation=\"sigmoid\")\n    ])\n\n    model.compile(\n        optimizer=\"sgd\", loss=\"binary_crossentropy\",\n        metrics=[\"accuracy\", \"precision\", \"recall\", \"f1-score\"],\n    )\n\n    history = model.fit(X_train, y_train, verbose=0, batch_size=32)\n\n    y_pred = model.predict(X_test).flatten()\n\n    fpr, tpr, thresholds = roc_curve(y_test, y_pred)\n    area = auc(fpr, tpr)\n\n    ax.plot(fpr, tpr, label=\"Area = {}\".format(area))\n    ax.plot(fpr, fpr, label=\"Worst", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n", "        ", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", "\n", "    ", ")", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "=", "\"", "s", "igmoid", "\"", ")", "\n", "    ", "])", "\n", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "optim", "izer", "=", "\"", "sg", "d", "\"", ",", " loss", "=", "\"", "binary", "_", "cross", "entropy", "\"", ",", "\n", "        ", "metrics", "=[", "\"", "accuracy", "\"", ",", " \"", "precision", "\"", ",", " \"", "re", "call", "\"", ",", " \"", "f", "1", "-", "score", "\"", "]", ",", "\n", "    ", ")", "\n", "\n", "    ", "history", " =", " model", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ",", " verbose", "=", "0", ",", " batch", "_", "size", "=", "3", "2", ")", "\n", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "test", ")", ".", "fl", "atten", "()", "\n", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n", "    ", "area", " =", " a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n", "\n", "    ", "ax", ".", "plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "\"", "Area", " =", " {", "}\"", ".", "format", "(", "area", "))", "\n", "    ", "ax", ".", "plot", "(", "f", "pr", ",", " f", "pr", ",", " label", "=", "\"", "W", "orst"], "logprobs": [-1.576674461364746, -0.24037888646125793, -0.011306263506412506, -0.0020811345893889666, -0.003611353924497962, -9.63164638960734e-05, -0.012509218417108059, -0.00038187362952157855, -0.9866419434547424, -0.00034850722295232117, -0.0008835464250296354, -0.0002119316632160917, -0.005154415965080261, -3.099393507000059e-05, -0.000742398202419281, -0.0033362226095050573, -0.019492967054247856, -5.722029527532868e-06, -1.0251946150674485e-05, -1.6689286894688848e-06, -9.536697689327411e-06, -0.00035089056473225355, -2.155799388885498, -0.0298807043582201, -0.004973895847797394, -0.0018672188743948936, -0.1471976488828659, -0.0026448529679328203, -0.08017115294933319, -1.1920922133867862e-06, -3.8742269680369645e-05, -0.006429344415664673, -0.014578018337488174, -3.325883881188929e-05, -0.007982850074768066, -0.06415706872940063, -0.14918047189712524, -1.4305104514278355e-06, -3.099436753473128e-06, -0.0008964095613919199, -2.386476993560791, -1.732277750968933, -0.003266596235334873, -0.0003651905863080174, -0.0269465334713459, -0.49949097633361816, -0.12140224128961563, -0.007543649058789015, -0.09875817596912384, -3.933898824470816e-06, -0.00019202772818971425, -0.832562267780304, -3.099436753473128e-06, -2.3841830625315197e-06, -0.6940031051635742, -0.14248520135879517, -0.012489911168813705, -0.02348255179822445, -4.5536911784438416e-05, -0.0008127961773425341, -2.396077979938127e-05, -0.028697319328784943, -0.00017724849749356508, -9.762764238985255e-05, -1.51314115524292, -0.13259033858776093, -0.610099732875824, -0.628070592880249, -0.03306789696216583, -0.0022285168524831533, -4.911301948595792e-05, -3.433168603805825e-05, -1.1097643375396729, -0.32143938541412354, -0.011323235929012299, -0.0039595551788806915, -0.0019747773185372353, -2.863752841949463, -0.0006889115320518613, -0.04420733451843262, -0.00019941726350225508, -0.0007670559571124613, -0.00019810620869975537, -0.16838110983371735, -0.003832853166386485, -1.6870654821395874, -1.1920858014491387e-05, -0.04821252450346947, -0.478114515542984, -0.38531383872032166, -0.00013171759201213717, -0.00010764019680209458, -0.0001731960946926847, -1.3122150897979736, -0.006796576082706451, -0.06623408198356628, -0.008817664347589016, -0.002379088429734111, -0.0002356490003876388, -0.0001245659514097497, -0.0001062098381225951, -0.009645996615290642, -0.752116858959198, -0.0103685287758708, -0.014955306425690651, -0.05057552829384804, -0.0894741639494896, -0.11567754298448563, -0.0004781533498317003, -0.4189292788505554, -0.04989667609333992, -0.7791768312454224, -0.030044520273804665, -0.022913219407200813, -0.0028476661536842585, -0.006211144383996725, -0.00040236959466710687, -0.001320681651122868, -0.42337578535079956, -0.024502301588654518, -1.010205626487732, -0.014428097754716873, -0.29982322454452515, -3.6000557884108275e-05, -0.00018809456378221512, -0.3379092812538147, -1.7106462717056274, -0.02193756401538849, -0.06490875780582428, -9.226373367710039e-05, -0.0011616155970841646, -0.40093570947647095, -0.00011729506513802335, -1.7086427211761475, -0.005506822373718023, -0.0009454786195419729, -3.45700973412022e-05, -0.0002580548170953989, -0.00012575789878610522, -0.38450008630752563, -0.012277033179998398, -9.297892393078655e-05, -0.0004563482361845672, -0.015731751918792725, -0.00014888131408952177, -1.4781842764932662e-05, -0.010475884191691875, -1.6305866241455078, -0.0010421803453937173, -0.11414802074432373, -0.21544675529003143, -1.5432507991790771, -5.638440416078083e-05, -1.490105023549404e-05, -0.0003972456615883857, -1.128569483757019, -0.011477747932076454, -1.3382892608642578, -0.004819799214601517, -0.6507691740989685, -0.000501030299346894, -1.6608506441116333, -0.007282615639269352, -0.6429274082183838, -0.0509035661816597, -0.01694522053003311, -0.0007918321643956006, -0.0004266782198101282, -0.019547561183571815, -0.001263773301616311, -0.000460876093711704, -0.0013866343069821596, -0.01007117610424757, -2.840102434158325, -0.7350788116455078, -4.029192859889008e-05, -0.003903508884832263, -0.04092380404472351, -1.6914927959442139, -0.0003234816831536591, -0.9588789939880371, -0.0025452144909650087, -0.005827816668897867, -0.005913381930440664, -0.028162356466054916, -0.0017666699131950736, -0.2258041948080063, -0.0015767297009006143, -0.005544047802686691, -1.1920928244535389e-07, -3.71926071238704e-05, -2.074220174108632e-05, -0.000188332938705571, -0.1806376427412033, -0.0002330270071979612, -0.005311069544404745, -0.11847251653671265, -0.0022077015601098537, -0.00019047829846385866, -0.00010525626566959545, -0.22190424799919128, -0.009164057672023773, -0.7772313356399536, -2.872645378112793, -0.0036251323763281107, -0.0019408691441640258, -2.861018856492592e-06, -0.00015352977789007127, -0.0027651668060570955, -3.576272320060525e-06, -0.002495748223736882, -0.00037853704998269677, -0.00036423723213374615, -0.0008737798780202866, -0.007004349492490292, -0.2643713355064392, -0.00029273517429828644, -0.41989919543266296, -0.3376852869987488, -0.1376257985830307, -0.025568539276719093, -0.24025289714336395, -5.364403477869928e-06, -0.0015398323303088546, -0.0008555566309951246, -0.0003625689132604748, -0.008682476356625557, -0.3437364399433136, -0.025995250791311264, -0.9980100393295288, -1.8014154434204102, -0.5850340127944946, -1.7071518898010254, -0.27706411480903625, -0.0003580405900720507, -0.0003960540343541652, -0.00015984688070602715, -0.0784921869635582, -0.0163410734385252, -0.002529280725866556, -0.2660597562789917, -0.01308638695627451, -0.000863774970639497, -0.30896830558776855, -0.16611894965171814, -0.08308817446231842, -0.00015889335190877318, -0.002107900334522128, -0.1952599585056305, -0.0001754606782924384, -0.0017648849170655012, -0.5344135165214539, -0.01685238815844059, -0.011500610038638115, -3.428900957107544, -0.05634469911456108], "finish_reason": "length"}], "metrics": {"energy": 278.5708152303694, "energy_per_token": 1.0881672469936305, "time": 11.346466, "time_per_token": 0.0443221328125}}
{"outputs": [{"text": "model = keras.models.Sequential()\n    model.add(keras.layers.Dense(2, activation=\"sigmoid\", input_shape=(2,)))\n    model.compile(\n        loss=\"binary_crossentropy\",\n        optimizer=keras.optimizers.SGD(learning_rate=0.001),\n    )\n    model.fit(X, Y, batch_size=16, verbose=0)\n    plt.title(\"ROC curve\")\n    plt.xlabel(\"False Positive Rate\")\n    plt.ylabel(\"True Positive Rate\")\n    fpr, tpr, threshold = roc_curve(Y, model.predict(X))\n    auc_value = auc(fpr, tpr)\n    print(\"AUC: \", auc_value)\n    plt.plot(fpr, tpr, marker=\".\", label=\"AUC=%s\" % auc_value)\n    ax.legend()\n    return model, ax", "tokens": ["model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "2", ",", " activation", "=", "\"", "s", "igmoid", "\"", ",", " input", "_", "shape", "=(", "2", ",", ")))", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "=", "\"", "binary", "_", "cross", "entropy", "\"", ",", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "0", "1", ")", ",", "\n", "    ", ")", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ",", " batch", "_", "size", "=", "1", "6", ",", " verbose", "=", "0", ")", "\n", "    ", "plt", ".", "title", "(", "\"", "R", "OC", " curve", "\"", ")", "\n", "    ", "plt", ".", "xlabel", "(", "\"", "False", " Positive", " Rate", "\"", ")", "\n", "    ", "plt", ".", "ylabel", "(", "\"", "True", " Positive", " Rate", "\"", ")", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " threshold", " =", " ro", "c", "_", "curve", "(", "Y", ",", " model", ".", "predict", "(", "X", "))", "\n", "    ", "auc", "_", "value", " =", " a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n", "    ", "print", "(", "\"", "A", "UC", ":", " \"", ",", " a", "uc", "_", "value", ")", "\n", "    ", "plt", ".", "plot", "(", "f", "pr", ",", " t", "pr", ",", " marker", "=", "\"", ".", "\"", ",", " label", "=", "\"", "A", "UC", "=%", "s", "\"", " %", " a", "uc", "_", "value", ")", "\n", "    ", "ax", ".", "legend", "()", "\n", "    ", "return", " model", ",", " ax", "\n", "\n", "def"], "logprobs": [-2.846205711364746, -0.015128867700695992, -0.11987553536891937, -3.814689989667386e-06, -0.000403084559366107, -0.1989431232213974, -9.953480184776708e-05, -4.184158387943171e-05, -7.986990567587782e-06, -8.106198947643861e-06, -0.42703381180763245, -0.01842760108411312, -0.076129250228405, -0.047197576612234116, -0.0003262225945945829, -0.00027378625236451626, -0.00012146688823122531, -0.08510328084230423, -8.237022848334163e-05, -0.001404966926202178, -2.1934269170742482e-05, -0.024401094764471054, -0.0003871168300975114, -0.0003301552205812186, -1.57670259475708, -0.15948395431041718, -0.47181710600852966, -1.3203535079956055, -0.17221699655056, -0.060001958161592484, -4.410646579344757e-05, -3.0517112463712692e-05, -0.7201983332633972, -0.15547442436218262, -4.172238186583854e-05, -0.05287156626582146, -0.4052935242652893, -0.06635992228984833, -0.03459441289305687, -0.19208912551403046, -0.02433454804122448, -0.04251333698630333, -0.016962215304374695, -0.000510204816237092, -0.05089608579874039, -0.0011029120068997145, -1.2154408693313599, -0.010778306052088737, -0.44776198267936707, -0.02950090356171131, -0.4002473056316376, -0.023042302578687668, -0.002791914390400052, -0.00021681819634977728, -0.0001399419124936685, -8.05822346592322e-05, -0.0002575780963525176, -0.16711899638175964, -0.0003499372396618128, -0.007683012634515762, -3.3378546504536644e-06, -0.0032494859769940376, -0.9049053192138672, -2.5033637939486653e-05, -0.0004481264913920313, -0.002285013673827052, -0.00013100242358632386, -0.015411925502121449, -0.0005283151986077428, -0.006309707649052143, -0.7164458632469177, -0.00018225439998786896, -2.777537883957848e-05, -0.0011950739426538348, -0.06752745062112808, -0.0025819556321948767, -0.5650554895401001, -1.5351803302764893, -0.34826937317848206, -0.009182720445096493, -0.08320192992687225, -0.00661694398149848, -0.6306160688400269, -0.00024732868769206107, -0.003504684194922447, -0.097856305539608, -0.2732049226760864, -0.003738558851182461, -0.0009733468177728355, -0.0001248043408850208, -0.05761265009641647, -0.0009672730811871588, -0.01204868033528328, -0.017656877636909485, -2.2869274616241455, -3.8980677345534787e-05, -1.811964830267243e-05, -0.0004907834227196872, -0.7976022362709045, -0.6925891637802124, -0.004231309983879328, -1.7743538618087769, -0.0003691230376716703, -0.10594490170478821, -1.2223159074783325, -0.013910956680774689, -0.33335983753204346, -4.057920932769775, -0.001755483914166689, -0.461001455783844, -0.053595177829265594, -0.004745767917484045, -0.05136433616280556, -0.0016499252524226904, -0.07071246951818466, -0.0041289799846708775, -0.015050075948238373, -0.005387905053794384, -0.0037960391491651535, -0.15255455672740936, -0.00011908298620255664, -0.04309320077300072, -0.004255881533026695, -0.0006283930852077901, -0.016684871166944504, -1.1554269790649414, -0.017358288168907166, -0.02253262884914875, -0.0015509016811847687, -0.013263095170259476, -0.00010322991875000298, -0.001149827498011291, -4.410646579344757e-05, -0.0010618292726576328, -0.0001436368766007945, -3.8980677345534787e-05, -0.001090646837837994, -0.0018117694417014718, -0.0010782625759020448, -0.0015046000480651855, -0.00035148640745319426, -0.0007921895012259483, -0.1320360004901886, -1.6687893867492676, -0.0043073976412415504, -0.00691319489851594, -0.006216949317604303, -0.025571094825863838, -0.0008854520856402814, -3.109779119491577, -0.0022768068592995405, -0.010972284711897373, -3.576278118089249e-07, -3.2066785934148356e-05, -1.2993727978027891e-05, -0.00025876989820972085, -0.20069946348667145, -0.08948354423046112, -0.07217354327440262, -0.0002843929105438292, -0.0009532198309898376, -0.009447391144931316, -0.0014460355741903186, -0.30173733830451965, -0.031483251601457596, -0.017520654946565628, -1.6219255924224854, -0.03417976573109627, -0.8513131737709045, -0.0025750594213604927, -0.0030666012316942215, -6.318072337307967e-06, -0.00018737945356406271, -0.0029062675312161446, -4.0531076592742465e-06, -0.003585697151720524, -0.0012284121476113796, -0.00032908268622122705, -0.0012390087358653545, -0.0042764171957969666, -0.025584226474165916, -3.097294569015503, -0.009269416332244873, -0.5634362101554871, -0.28737181425094604, -0.0042841327376663685, -1.8053572177886963, -0.5944753885269165, -0.09689486026763916, -0.015736445784568787, -2.8132995794294402e-05, -0.0015097183641046286, -1.1444026313256472e-05, -0.005928550846874714, -0.009619549848139286, -0.03915625438094139, -1.4009499549865723, -0.00035172473872080445, -0.06635334342718124, -0.01135164126753807, -0.022646844387054443, -2.50339189733495e-06, -0.0006460248259827495, -0.0019507441902533174, -0.0003831844369415194, -0.027598928660154343, -2.715709924697876, -0.009149528108537197, -0.000196556793525815, -0.7894821763038635, -0.00017998983094003052, -0.9931197166442871, -0.3845912218093872, -0.010357320308685303, -0.5088068246841431, -0.3073095679283142, -0.0013402060139924288, -1.8808081150054932, -1.560924768447876, -0.001794277224689722, -0.004925261251628399, -0.37339314818382263, -0.0006462631281465292, -0.005165089387446642, -2.9205850296420977e-05, -0.024014320224523544, -0.002343410160392523, -0.03860747814178467, -1.1386682987213135, -0.18583744764328003, -0.1454896181821823, -1.1199419498443604, -0.01432492583990097, -0.02876948192715645, -0.10953415930271149, -0.014706303365528584, -0.0019976201001554728, -0.015216105617582798, -0.7568918466567993, -0.01439507957547903, -0.6887964010238647], "finish_reason": "stop"}], "metrics": {"energy": 260.1409672155379, "energy_per_token": 1.0794231004794104, "time": 10.7310505, "time_per_token": 0.04452718049792531}}
{"outputs": [{"text": "# Split the data into training and test sets\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)\n\n    # Create the Keras model\n    model = keras.models.Sequential([\n        keras.layers.Dense(1, input_dim=2, activation='sigmoid')\n    ])\n\n    # Compile the model with binary cross-entropy loss and an optimizer\n    model.compile(loss='binary_crossentropy', optimizer='rmsprop')\n\n    # Fit the model to the training data\n    model.fit(X_train, Y_train, batch_size=16, epochs=32, verbose=0)\n\n    # Compute the ROC curve and AUC score\n    fpr, tpr, thresholds = roc_curve(Y_test, model.predict(X_test))\n    roc_auc = auc(fpr, tpr)\n\n    # Plot the ROC curve and the AUC score\n    ax = plt.gca()\n    plt.title('ROC curve", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n", "\n", "    ", "#", " Create", " the", " K", "eras", " model", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " input", "_", "dim", "=", "2", ",", " activation", "='", "s", "igmoid", "')", "\n", "    ", "])", "\n", "\n", "    ", "#", " Com", "pile", " the", " model", " with", " binary", " cross", "-", "entropy", " loss", " and", " an", " optimizer", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "rms", "prop", "')", "\n", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " batch", "_", "size", "=", "1", "6", ",", " epochs", "=", "3", "2", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "#", " Compute", " the", " R", "OC", " curve", " and", " A", "UC", " score", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "\n", "    ", "roc", "_", "auc", " =", " a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n", "\n", "    ", "#", " Plot", " the", " R", "OC", " curve", " and", " the", " A", "UC", " score", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "plt", ".", "title", "('", "R", "OC", " curve"], "logprobs": [-1.0048189163208008, -1.5023609399795532, -0.23366813361644745, -0.24568253755569458, -0.04483272507786751, -0.055045802146196365, -0.02190222591161728, -0.07034442573785782, -0.00994996726512909, -0.15945062041282654, -0.0018512745155021548, -0.47647398710250854, -0.012723930180072784, -0.0023098711390048265, -0.000580499938223511, -0.0019976201001554728, -5.9126061387360096e-05, -0.0036170552484691143, -0.00023755589791107923, -0.3164496123790741, -0.00011657988943625242, -4.7801782784517854e-05, -6.675497570540756e-05, -0.003548992797732353, -1.0013530300057027e-05, -5.8410845667822286e-05, -0.0006494796834886074, -0.00779515178874135, -1.5497195136049413e-06, -1.1920858014491387e-05, -5.960462772236497e-07, -4.172316494077677e-06, -9.476689592702314e-05, -0.1341998279094696, -0.0002441108226776123, -0.003416180144995451, -0.006938529666513205, -0.034409571439027786, -2.3841855067985307e-07, -2.729855441430118e-05, -0.002419165801256895, -0.007530516013503075, -2.47952248173533e-05, -0.00876094400882721, -2.458655595779419, -0.006067072972655296, -0.0874878391623497, -0.0005154472892172635, -0.013009198941290379, -0.15168631076812744, -2.1811351776123047, -0.19259239733219147, -3.4450891689630225e-05, -0.18938082456588745, -0.4634396433830261, -0.0011995985405519605, -0.009054788388311863, -0.0016189813613891602, -0.09418032318353653, -4.768360213347478e-06, -8.439661905867979e-05, -0.8062818050384521, -3.480850500636734e-05, -1.7523612768854946e-05, -2.7418097943154862e-06, -5.125986263010418e-06, -0.9651745557785034, -0.0578516460955143, -0.00843675248324871, -0.015370839275419712, -1.2636104656849056e-05, -0.0006808108882978559, -8.702239938429557e-06, -0.027810193598270416, -0.00024125049822032452, -2.074220174108632e-05, -0.5515389442443848, -0.05910881608724594, -1.244666337966919, -1.4305104514278355e-06, -1.022156000137329, -0.0025813612155616283, -0.09337030351161957, -0.06309662759304047, -0.04000428691506386, -0.11932849138975143, -0.0032537635415792465, -1.597391747054644e-05, -0.008061372675001621, -0.12414916604757309, -0.00777043029665947, -0.0006760457181371748, -9.929640509653836e-05, -0.03065062128007412, -9.822363062994555e-05, -0.013184627518057823, -0.003529986599460244, -2.3603161025675945e-05, -0.06595924496650696, -0.0015345951542258263, -1.934301495552063, -0.07430028170347214, -0.0033235095907002687, -0.01804295741021633, -8.546940807718784e-05, -0.017400464043021202, -0.12292683124542236, -0.11155803501605988, -3.0057713985443115, -0.3331697881221771, -0.00026222606538794935, -0.028602907434105873, -5.900685573578812e-05, -0.0002225389762315899, -0.00042655906872823834, -0.5471761226654053, -0.030003800988197327, -0.0038801159244030714, -0.0004930472350679338, -0.0003502947511151433, -8.189342770492658e-05, -0.00014935807848814875, -0.002072450239211321, -0.05479450896382332, -0.07179227471351624, -3.0342843532562256, -0.0008481719414703548, -0.11267197132110596, -0.0005402297829277813, -0.004976742435246706, -0.00018749863374978304, -0.0011099375551566482, -0.04087848961353302, -0.0011092231143265963, -0.0010032388381659985, -0.049674034118652344, -0.009288785979151726, -0.020161807537078857, -0.02358303591609001, -0.1503315567970276, -0.0001787979417713359, -0.09879446029663086, -0.00024911639047786593, -0.0002949994814116508, -4.2914423829643056e-05, -0.012300466187298298, -0.009015094488859177, -1.9430925021879375e-05, -0.00016282663273159415, -0.008122270926833153, -0.00038425691309385, -6.198863957251888e-06, -0.012364285066723824, -1.9941514730453491, -1.168244216387393e-05, -1.3947389561508317e-05, -0.0005016260547563434, -0.6727356314659119, -0.7159402966499329, -0.005090134683996439, -0.04213487729430199, -0.00010716341057559475, -2.2617225646972656, -1.688234806060791, -0.14794662594795227, -0.029231764376163483, -0.0002203936892328784, -0.13055045902729034, -0.09392663091421127, -0.002542241709306836, -0.005059059709310532, -0.0005272428970783949, -0.006814809516072273, -2.4716620445251465, -0.08306469768285751, -0.12399806082248688, -5.722029527532868e-06, -0.08564146608114243, -0.4405195415019989, -0.1437990963459015, -0.0008617501589469612, -1.0440349578857422, -0.5897300243377686, -0.0003250309091527015, -0.5737162828445435, -0.0005860995152033865, -0.00294263893738389, -0.004072706215083599, -0.004730699583888054, -0.0002522150462027639, -0.33932873606681824, -0.000578474544454366, -0.009757679887115955, -2.3841855067985307e-07, -1.5258672647178173e-05, -1.2874520507466514e-05, -0.00011014331539627165, -0.018852924928069115, -0.0026418804191052914, -0.001979774096980691, -0.0078080445528030396, -0.031878579407930374, -0.00012110930401831865, -0.00020037073409184813, -0.011790234595537186, -7.593343616463244e-05, -3.397406908334233e-05, -1.9788545614574105e-05, -0.27345916628837585, -0.005820468533784151, -0.01052637305110693, -1.0772404670715332, -0.0005340342177078128, -0.0010110987350344658, -0.003312697634100914, -0.0004539651272352785, -2.0265558760002023e-06, -3.540453326422721e-05, -0.0002037079248111695, -3.933898824470816e-06, -0.0008419782971031964, -0.00027652730932459235, -0.00012981049076188356, -0.00037091050762683153, -0.001731802592985332, -0.014786765910685062, -0.0002711643755901605, -0.016291815787553787, -0.554402232170105, -0.005545944441109896, -0.05114394426345825, -1.5497195136049413e-06, -0.002664945786818862, -1.0046415328979492, -2.014338493347168, -0.03352784737944603, -0.00016139635408762842, -0.06719423085451126, -0.19808226823806763, -0.0008456706418655813, -0.8199120759963989, -0.464203417301178, -0.007981667295098305, -0.0009483369067311287, -1.306046485900879, -0.004124706145375967, -0.004560308530926704, -0.028724655508995056, -0.011647317558526993, -2.321300983428955, -2.706014311115723e-05, -0.5999212861061096, -0.03390128165483475, -0.006885491777211428, -0.00043335105874575675, -0.03542434424161911], "finish_reason": "length"}], "metrics": {"energy": 293.2969105978011, "energy_per_token": 1.1456910570226606, "time": 12.378601, "time_per_token": 0.04835391015625}}
{"outputs": [{"text": "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)\n    model = keras.Sequential([\n        keras.layers.Dense(1,\n                           input_shape=(2,),\n                           activation='sigmoid',\n                           kernel_initializer='RandomUniform')\n    ])\n    model.compile(optimizer='SGD', loss='binary_crossentropy')\n    model.fit(X_train, Y_train, verbose=0, batch_size=256, epochs=10)\n\n    y_pred = model.predict(X_test)\n    y_probs = y_pred.flatten()\n    fpr, tpr, thresholds = roc_curve(Y_test, y_probs)\n\n    ax.plot(fpr, tpr, label=f'AUC={auc(fpr, tpr)}')\n    ax.set_title('ROC curve')\n    ax.set_xlabel('False Positive Rate')\n    ax.set_ylabel('", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", "\n", "                ", "           ", "input", "_", "shape", "=(", "2", ",", ")", ",", "\n", "                ", "           ", "activation", "='", "s", "igmoid", "'", ",", "\n", "                ", "           ", "kernel", "_", "initial", "izer", "='", "Random", "Un", "iform", "')", "\n", "    ", "])", "\n", "    ", "model", ".", "compile", "(", "optim", "izer", "='", "S", "GD", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ",", " batch", "_", "size", "=", "2", "5", "6", ",", " epochs", "=", "1", "0", ")", "\n", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "test", ")", "\n", "    ", "y", "_", "pro", "bs", " =", " y", "_", "pred", ".", "fl", "atten", "()", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " y", "_", "pro", "bs", ")", "\n", "\n", "    ", "ax", ".", "plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "A", "UC", "={", "auc", "(", "f", "pr", ",", " t", "pr", ")}", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "R", "OC", " curve", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "False", " Positive", " Rate", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('"], "logprobs": [-1.576674461364746, -0.24037888646125793, -0.011306263506412506, -0.0020811345893889666, -0.003611353924497962, -9.63164638960734e-05, -0.012509218417108059, -0.00038187362952157855, -0.4689818024635315, -0.000219321038457565, -0.00035661060246638954, -0.00019178935326635838, -0.0021927140187472105, -2.002696055569686e-05, -0.00025018901214934886, -0.003572631161659956, -0.016042090952396393, -5.960446742392378e-06, -1.0490362910786644e-05, -9.536738616588991e-07, -9.298280929215252e-06, -0.0003541081096045673, -0.1182836964726448, -0.0004938812926411629, -0.008694413118064404, -0.016792723909020424, -0.09043056517839432, -1.6689286894688848e-06, -3.969590397900902e-05, -0.019202057272195816, -0.01657126285135746, -4.029192859889008e-05, -0.0069189961068332195, -1.9736863374710083, -0.028158068656921387, -0.31654074788093567, -0.08989756554365158, -0.007608719170093536, -0.10285040736198425, -4.172316494077677e-06, -0.00024768622824922204, -0.8466925621032715, -2.3841830625315197e-06, -1.9073468138230965e-06, -0.1465713530778885, -0.14218226075172424, -0.025204766541719437, -0.010813920758664608, -3.158996332786046e-05, -0.0007948100101202726, -1.2755313036905136e-05, -0.025721214711666107, -0.00014697425649501383, -5.447716102935374e-05, -0.5944375991821289, -0.10985783487558365, -1.3051402568817139, -0.3198321461677551, -0.2378939986228943, -0.9372197389602661, -2.6940935640595853e-05, -0.5063165426254272, -0.2765302062034607, -0.1058969721198082, -0.0162107702344656, -0.09184420853853226, -0.0010319390567019582, -0.00990110170096159, -0.00040415700641460717, -0.0013493727892637253, -0.09699667245149612, -0.2807018458843231, -0.0023419829085469246, -3.790783375734463e-05, -1.3088783025741577, -0.03510028123855591, -0.01929139718413353, -0.012150791473686695, -0.015470264479517937, -0.21468877792358398, -1.0371154530730564e-05, -0.20216964185237885, -4.100715523236431e-05, -0.04907867684960365, -3.9119460582733154, -0.1174040362238884, -0.004451010376214981, -0.7417649626731873, -0.6689178943634033, -0.027623049914836884, -0.005855904892086983, -0.0014281797921285033, -0.0661749467253685, -0.016825897619128227, -0.00017987063620239496, -0.0011957883834838867, -0.0016265984158962965, -2.246213436126709, -8.583032467868179e-06, -0.11367125064134598, -0.49242323637008667, -0.0007583603146485984, -0.00016378014697693288, -0.00120936194434762, -0.39864540100097656, -0.037081219255924225, -0.03466995432972908, -0.0007570500019937754, -0.00029988560709170997, -6.401333666872233e-05, -0.4465973377227783, -0.002707508159801364, -0.02162029966711998, -0.202212393283844, -0.0026204793248325586, -0.004363420885056257, -0.00012015574611723423, -0.009550240822136402, -0.010843638330698013, -0.00019202772818971425, -0.0003618539194576442, -0.02379375509917736, -0.0033401434775441885, -1.156323378381785e-05, -0.01594037562608719, -0.6490206718444824, -0.0027594605926424265, -0.06790633499622345, -0.7668142914772034, -1.4479831457138062, -0.00010096516780322418, -1.1444026313256472e-05, -0.0006391151691786945, -2.463839530944824, -0.485325425863266, -0.09236790984869003, -0.6934511065483093, -0.1697699874639511, -0.0003620922507252544, -0.7020565271377563, -0.15127691626548767, -0.9061011075973511, -0.006134846247732639, -2.1805341243743896, -0.002597531769424677, -2.675652503967285, -0.007193853612989187, -0.6601282954216003, -0.052855733782052994, -0.01387521717697382, -0.00040415700641460717, -0.0002674698771443218, -0.017269711941480637, -0.0008948612376116216, -0.0006355411605909467, -0.0009971652179956436, -0.009941822849214077, -0.056908491998910904, -0.13966137170791626, -2.0770034790039062, -0.0029708081856369972, -2.673990488052368, -0.0027014450170099735, -0.018497934564948082, -0.19375354051589966, -3.194758028257638e-05, -0.0003594706067815423, -1.6052446365356445, -1.5086688995361328, -0.00014041867689229548, -0.0038340408354997635, -0.05234022065997124, -0.25920194387435913, -0.2629467248916626, -0.0019326595356687903, -0.004984927363693714, -0.003141945693641901, -0.07453576475381851, -0.001010384177789092, -0.2490597516298294, -0.0011551857460290194, -0.006422592792659998, -3.576278118089249e-07, -2.0146166207268834e-05, -1.2874520507466514e-05, -0.00014661667228210717, -0.1825944483280182, -0.002566617215052247, -0.0002828436263371259, -0.09370902180671692, -0.0046623568050563335, -0.0001740304142003879, -0.004309771116822958, -2.610649426060263e-05, -0.09403124451637268, -0.00746177276596427, -1.6708470582962036, -0.0002978596603497863, -0.6254954934120178, -0.47106820344924927, -0.06828173249959946, -0.04031931981444359, -0.034972745925188065, -3.4570634852570947e-06, -0.0012330556055530906, -0.0034626307897269726, -7.223821739898995e-05, -0.0507698692381382, -0.5910401344299316, -0.7500388622283936, -0.32609039545059204, -0.40276023745536804, -0.1498754322528839, -0.00235565984621644, -0.6604146361351013, -0.07796833664178848, -0.0015587572706863284, -0.08221827447414398, -6.9141146923357155e-06, -0.000426439888542518, -0.0153181292116642, -0.0003668589051812887, -0.983918309211731, -0.02697136625647545, -0.004958949983119965, -0.23472751677036285, -0.009811037220060825, -0.0009581027552485466, -1.2267990112304688, -0.22532375156879425, -0.03018101491034031, -0.04116213321685791, -0.0472286194562912, -0.0011191064259037375, -0.0350441113114357, -0.04334882274270058, -0.0016431414987891912, -0.0032185916788876057, -0.0014188947388902307, -0.00014911970356479287, -0.005718064494431019, -0.57816082239151, -0.013141213916242123, -0.01714632660150528, -0.010330302640795708, -0.6037949323654175, -0.0036185993812978268, -0.0475371815264225, -0.001049920916557312, -9.083335316972807e-05, -8.391981828026474e-05, -0.00033766290289349854, -0.00011073929636040702, -3.6954811548639555e-06, -0.00015686711412854493, -0.0006599632324650884], "finish_reason": "length"}], "metrics": {"energy": 308.11090571689596, "energy_per_token": 1.2035582254566248, "time": 12.174621, "time_per_token": 0.04755711328125}}
{"outputs": [{"text": "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    model = keras.Sequential([\n        keras.layers.Dense(1,\n            activation='sigmoid',\n            kernel_regularizer=keras.regularizers.l2(1e-3),\n            input_shape=(2,))\n    ])\n\n    model.compile(optimizer='sgd', loss='binary_crossentropy')\n    model.fit(X_train, Y_train, epochs=5, verbose=0)\n\n    probs = model.predict(X_test)\n    roc_vals, thresholds = roc_curve(y_true=Y_test, probs=probs)\n    print(\"AUC: \", auc(fpr=roc_vals, tpr=roc_vals))\n\n    fig = plt.figure()\n    ax = fig.add_subplot(111)\n\n    ax.plot(roc_vals, roc_vals,", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", "\n", "            ", "activation", "='", "s", "igmoid", "'", ",", "\n", "            ", "kernel", "_", "regular", "izer", "=", "keras", ".", "regular", "izers", ".", "l", "2", "(", "1", "e", "-", "3", ")", ",", "\n", "            ", "input", "_", "shape", "=(", "2", ",", "))", "\n", "    ", "])", "\n", "\n", "    ", "model", ".", "compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "5", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "pro", "bs", " =", " model", ".", "predict", "(", "X", "_", "test", ")", "\n", "    ", "roc", "_", "vals", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "y", "_", "true", "=", "Y", "_", "test", ",", " pro", "bs", "=", "pro", "bs", ")", "\n", "    ", "print", "(", "\"", "A", "UC", ":", " \"", ",", " a", "uc", "(", "f", "pr", "=", "roc", "_", "vals", ",", " t", "pr", "=", "roc", "_", "vals", "))", "\n", "\n", "    ", "fig", " =", " plt", ".", "figure", "()", "\n", "    ", "ax", " =", " fig", ".", "add", "_", "sub", "plot", "(", "1", "1", "1", ")", "\n", "\n", "    ", "ax", ".", "plot", "(", "roc", "_", "vals", ",", " ro", "c", "_", "vals", ","], "logprobs": [-1.576674461364746, -0.24037888646125793, -0.011306263506412506, -0.0020811345893889666, -0.003611353924497962, -9.63164638960734e-05, -0.012509218417108059, -0.00038187362952157855, -0.4689818024635315, -0.000219321038457565, -0.00035661060246638954, -0.00019178935326635838, -0.0021927140187472105, -2.002696055569686e-05, -0.00025018901214934886, -0.003572631161659956, -0.016042090952396393, -5.960446742392378e-06, -1.0490362910786644e-05, -9.536738616588991e-07, -9.298280929215252e-06, -0.0003541081096045673, -0.1182836964726448, -0.0004938812926411629, -0.008694413118064404, -0.016792723909020424, -0.09043056517839432, -1.6689286894688848e-06, -3.969590397900902e-05, -0.019202057272195816, -0.01657126285135746, -4.029192859889008e-05, -0.0069189961068332195, -0.19841010868549347, -0.10828589648008347, -1.1920922133867862e-06, -4.291525328881107e-06, -0.0012834176886826754, -0.25583985447883606, -0.03665151447057724, -0.10831894725561142, -0.020528119057416916, -1.2496718168258667, -0.0005270045949146152, -0.06554333865642548, -0.0050974879413843155, -0.11587312072515488, -3.814689989667386e-06, -9.536288416711614e-05, -0.8616416454315186, -2.0265558760002023e-06, -1.1920922133867862e-06, -0.19881433248519897, -0.04561525210738182, -0.016626954078674316, -0.007829217240214348, -1.7523612768854946e-05, -0.0013055619783699512, -9.298280929215252e-06, -0.024442508816719055, -0.0001546025014249608, -2.5033637939486653e-05, -0.7029626965522766, -0.09467548131942749, -1.3742296695709229, -1.841448426246643, -0.7745848298072815, -0.5126192569732666, -0.0018171241972595453, -5.113947918289341e-05, -0.002086011925712228, -0.0033397870138287544, -0.029080549255013466, -0.00791449286043644, -0.9774033427238464, -1.6093124941107817e-05, -2.3482820987701416, -0.00029595286468975246, -0.1919994056224823, -0.0834287479519844, -0.00022456508304458112, -0.012330492027103901, -9.30981186684221e-05, -7.295342220459133e-05, -0.05401100218296051, -0.27844667434692383, -0.019386691972613335, -0.5404556393623352, -0.09935933351516724, -0.00038938093348406255, -1.6125866174697876, -0.11251496523618698, -0.11028870940208435, -0.06176165118813515, -0.04254269599914551, -0.7620506882667542, -9.179073458653875e-06, -0.03129968047142029, -0.3122453987598419, -0.15716132521629333, -0.006993222050368786, -1.0226609706878662, -0.6273735165596008, -0.0475928820669651, -0.005092862527817488, -0.001207456924021244, -0.2937265634536743, -0.00011812942830147222, -0.02331218123435974, -0.00017677174764685333, -0.0009831124916672707, -0.0015044810716062784, -2.68603515625, -8.34461570775602e-06, -0.26039257645606995, -0.34079670906066895, -7.652943895664066e-05, -0.00014184899919200689, -0.0001445904199499637, -0.20231249928474426, -0.038878463208675385, -0.005251778755337, -0.0009092725813388824, -0.00031275625224225223, -8.83301836438477e-05, -0.5209777355194092, -0.0023230728693306446, -0.8007208704948425, -0.14829088747501373, -0.0015925593907013535, -0.002423090161755681, -0.00013207517622504383, -0.014946616254746914, -0.01089540496468544, -0.00016878610767889768, -0.00032646095496602356, -0.01598178967833519, -0.001545069506391883, -7.510157047363464e-06, -0.006937108933925629, -0.6610170006752014, -0.0010313435923308134, -1.4310941696166992, -0.29593491554260254, -0.11722466349601746, -0.0015256681945174932, -0.10520122945308685, -0.13410069048404694, -0.01409198623150587, -0.23540857434272766, -0.0005054388311691582, -2.5353784561157227, -0.0003890234511345625, -0.19941139221191406, -0.014269810169935226, -0.00041940953815355897, -0.0004153581103309989, -0.051633697003126144, -0.000446696620201692, -0.0006065912893973291, -0.0006478118011727929, -0.009227368980646133, -0.02964291162788868, -0.10074802488088608, -3.111931324005127, -0.12815725803375244, -1.1282341480255127, -0.40841197967529297, -2.042254686355591, -0.02423076517879963, -0.0022922686766833067, -3.576278118089249e-07, -9.285972191719338e-05, -2.4914430468925275e-05, -0.00012754580529872328, -1.2094391584396362, -0.0006603206275030971, -0.016909707337617874, -0.003386003663763404, -0.005152874160557985, -0.0002115741081070155, -0.00010239553375868127, -0.03475941717624664, -0.6795933842658997, -0.0037572046276181936, -0.004628658294677734, -0.0030384347774088383, -1.1801649634435307e-05, -0.6176965236663818, -0.017204798758029938, -0.3963407278060913, -2.7239603996276855, -0.19931460916996002, -1.5668644905090332, -1.004576325416565, -0.009888118132948875, -1.0309184789657593, -0.6688776612281799, -0.06371088325977325, -0.02026508003473282, -8.34461570775602e-06, -0.00033146608620882034, -1.2533419132232666, -4.8040190449682996e-05, -0.013750000856816769, -0.04635414853692055, -5.0424259825376794e-05, -0.0001736728590913117, -0.0009814451914280653, -0.003195776604115963, -0.015211057849228382, -0.0007242917199619114, -0.155842125415802, -0.00011717586312443018, -0.00016091958968900144, -0.03733883798122406, -0.04663362726569176, -0.2933558225631714, -0.0023637469857931137, -2.9885191917419434, -1.1340131759643555, -0.0016817011637613177, -0.00023588736075907946, -0.043408747762441635, -0.4354838728904724, -0.003972853533923626, -0.05545752868056297, -0.20215484499931335, -0.021725988015532494, -0.18653450906276703, -6.4490144723095e-05, -0.003390755970031023, -1.2040065485052764e-05, -0.06960826367139816, -0.00026294111739844084, -0.11323682963848114, -0.012908116914331913, -0.242618590593338, -5.876845170860179e-05, -0.01031531859189272, -0.0030182304326444864, -2.0827019214630127, -0.00032085992279462516, -0.44903889298439026, -0.001739894854836166, -0.06274233758449554, -0.07315980643033981, -0.6083520650863647, -0.00045158201828598976, -0.0013991338200867176, -0.0012821081327274442, -0.022327473387122154, -4.303362584323622e-05, -1.6569954823353328e-05, -5.876845170860179e-05, -0.24538449943065643], "finish_reason": "length"}], "metrics": {"energy": 279.21932865428926, "energy_per_token": 1.0907005025558174, "time": 11.357221, "time_per_token": 0.04436414453125}}
{"outputs": [{"text": "# Create a Keras Sequential model with one hidden layer using a sigmoid activation function\n    model = keras.models.Sequential()\n    model.add(keras.layers.Dense(16, activation='sigmoid', input_shape=(X.shape[1],)))\n    model.add(keras.layers.Dense(1,))\n    # Compile the model with binary cross-entropy loss and an SGD optimizer specifying a learning rate\n    model.compile(loss='binary_crossentropy', optimizer='SGD', learning_rate=0.5)\n    # Fit the model to the training data in a non-verbose mode\n    model.fit(X, Y, epochs=100, verbose=0)\n    # Plot the ROC curve for the model on the test set\n    _, fpr, tpr, thresholds = roc_curve(Y, model.predict(X), pos_label=1)\n    ax.plot(fpr, tpr, label='ROC curve')\n    ax.plot(thresholds, fpr, label='AUC = {:.4f}'.format", "tokens": ["#", " Create", " a", " K", "eras", " Sequ", "ential", " model", " with", " one", " hidden", " layer", " using", " a", " s", "igmoid", " activation", " function", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "1", "6", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "X", ".", "shape", "[", "1", "]", ",", ")))", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", "))", "\n", "    ", "#", " Com", "pile", " the", " model", " with", " binary", " cross", "-", "entropy", " loss", " and", " an", " SGD", " optimizer", " specifying", " a", " learning", " rate", "\n", "    ", "model", ".", "compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "S", "GD", "'", ",", " learning", "_", "rate", "=", "0", ".", "5", ")", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", " in", " a", " non", "-", "verbose", " mode", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "\n", "    ", "#", " Plot", " the", " R", "OC", " curve", " for", " the", " model", " on", " the", " test", " set", "\n", "    ", "_", ",", " f", "pr", ",", " t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", ",", " model", ".", "predict", "(", "X", ")", ",", " pos", "_", "label", "=", "1", ")", "\n", "    ", "ax", ".", "plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", "')", "\n", "    ", "ax", ".", "plot", "(", "th", "resh", "olds", ",", " f", "pr", ",", " label", "='", "A", "UC", " =", " {:", ".", "4", "f", "}'", ".", "format"], "logprobs": [-1.0048189163208008, -2.9518837928771973, -0.6664080619812012, -0.8779572248458862, -0.00023862851958256215, -0.1704198271036148, -0.0001454247540095821, -0.0030099109280854464, -0.03765195980668068, -0.13004156947135925, -0.004804257769137621, -0.0006959400488995016, -0.45769599080085754, -0.055720604956150055, -0.005881977267563343, -3.611976353568025e-05, -0.0027973828837275505, -0.012460477650165558, -0.15619724988937378, -0.004635184537619352, -0.07103163748979568, -0.003838553326204419, -0.0867769867181778, -4.410734163684538e-06, -0.00013743886665906757, -1.000779151916504, -5.6503606174374e-05, -1.9788545614574105e-05, -2.50339189733495e-06, -1.1324817933200393e-05, -1.055776596069336, -0.0020657882560044527, -0.014602337963879108, -0.014903396368026733, -6.067568756407127e-05, -4.494089080253616e-05, -3.266281055402942e-05, -0.03719206154346466, -1.4066597032069694e-05, -0.0006519814487546682, -1.2874520507466514e-05, -0.019824931398034096, -0.0004538459761533886, -0.00013100242358632386, -0.7947763800621033, -2.16963529586792, -0.00400135014206171, -0.30795758962631226, -0.28684714436531067, -0.08821292966604233, -9.894321920000948e-06, -0.4182555675506592, -0.00040642108069732785, -0.03913561999797821, -2.3841830625315197e-06, -0.18571192026138306, -0.11036151647567749, -2.2697079181671143, -0.0028531341813504696, -0.0014892450999468565, -0.05179104954004288, -0.0011104138102382421, -0.0006836699321866035, -0.023743582889437675, -0.1342044174671173, -0.013941052369773388, -0.11350535601377487, -0.11605051159858704, -0.00015579440514557064, -0.03253619000315666, -4.9828242481453344e-05, -0.00026472879108041525, -0.00012230125139467418, -0.00015269544383045286, -3.576278118089249e-07, -0.044200945645570755, -0.0009056995622813702, -8.83301836438477e-05, -0.10774317383766174, -0.6913416385650635, -2.895348310470581, -0.01856171153485775, -1.7124994993209839, -0.25316059589385986, -0.019598061218857765, -4.7205765440594405e-05, -0.01026352122426033, -0.0007875440060161054, -0.06993245333433151, -0.010428106412291527, -0.0011213688412681222, -0.0038038771599531174, -0.00017951308109331876, -0.0020833946764469147, -0.024432621896266937, -0.008020102046430111, -0.01688391901552677, -0.0005353448214009404, -0.21393822133541107, -0.00698967045173049, -0.0022580146323889494, -0.0015674459282308817, -0.03870152309536934, -0.001437702914699912, -0.04372134432196617, -0.0003143055073451251, -0.0004297763225622475, -0.003276220755651593, -0.5393102169036865, -0.07668465375900269, -0.01634775847196579, -0.0008486483711749315, -0.0004637358069885522, -6.186770770000294e-05, -0.00015925093612167984, -0.0009082006872631609, -0.08310144394636154, -0.5967909693717957, -1.4831247329711914, -0.0006755692302249372, -0.00928819552063942, -0.0004938812926411629, -0.4228667914867401, -2.2411095415009186e-05, -5.173549288883805e-05, -0.005223555024713278, -0.12369399517774582, -0.0006257721688598394, -3.4656598567962646, -0.02093375474214554, -0.0015885126776993275, -0.03247156739234924, -0.007204386871308088, -0.6056784987449646, -0.001774761825799942, -0.0005052005290053785, -0.006890108808875084, -0.0031407573260366917, -0.0053177098743617535, -0.005387312266975641, -0.17708076536655426, -0.006652944255620241, -0.00046528480015695095, -0.00020740265608765185, -0.00018130090029444546, -0.0019271865021437407, -0.051074735820293427, -0.0007095203618519008, -0.07881868630647659, -0.0009048658539541066, -0.0004751745145767927, -8.320462075062096e-05, -0.007391841616481543, -0.0015873225638642907, -0.0093148872256279, -0.018525786697864532, -0.3606290817260742, -0.0005902693956159055, -0.48310187458992004, -0.1316547393798828, -0.4417291581630707, -0.2844353914260864, -0.27936261892318726, -0.0005666795768775046, -0.10093975067138672, -0.09056015312671661, -0.0046775443479418755, -0.04958260431885719, -0.014604805037379265, -0.4810546636581421, -0.009964249096810818, -0.017961351200938225, -2.622600959512056e-06, -0.0022977397311478853, -0.029327157884836197, -0.004155335016548634, -0.01608150638639927, -0.012060223147273064, -0.0013517538318410516, -0.0015630420530214906, -0.003551843576133251, -1.414845585823059, -0.0019290901254862547, -3.4808928966522217, -0.013019083067774773, -1.8473074436187744, -0.09575984627008438, -0.017885476350784302, -0.025839829817414284, -0.001719545223750174, -0.029591990634799004, -2.1395225524902344, -0.002342934487387538, -0.013363907113671303, -3.576278118089249e-07, -2.777537883957848e-05, -2.932505594799295e-05, -0.00025960413040593266, -0.09793596714735031, -0.06851663440465927, -0.04306009039282799, -8.296622399939224e-05, -0.0004801789182238281, -0.007288177963346243, -0.002677667187526822, -1.1864713430404663, -0.12303835898637772, -0.09770095348358154, -0.0008167268824763596, -0.000331704446580261, -0.014749882742762566, -0.03720182552933693, -0.06839808076620102, -0.015956565737724304, -0.0068727051839232445, -0.5350860357284546, -0.34618356823921204, -0.02597620151937008, -0.06483100354671478, -0.016535267233848572, -8.583032467868179e-06, -0.0017229963559657335, -0.0026875350158661604, -4.1126360883936286e-05, -0.03601511940360069, -0.36149629950523376, -0.4460236132144928, -0.6787038445472717, -0.00101062236353755, -0.23937773704528809, -0.2523295283317566, -0.01059136725962162, -0.007952574640512466, -0.48614802956581116, -0.0003771070914808661, -0.834774374961853, -1.6362096071243286, -1.7101330757141113, -3.576214658096433e-05, -1.0609570381348021e-05, -0.020766686648130417, -0.9787741303443909, -0.0004621868138201535, -0.11787129938602448, -0.8388869166374207, -0.15899507701396942, -1.970381259918213, -0.0127399368211627, -0.3257507383823395, -0.3345753252506256, -0.6518723964691162, -2.5471818447113037, -0.02071215957403183, -0.002939073368906975, -0.0007245299639180303, -0.0004997196956537664], "finish_reason": "length"}], "metrics": {"energy": 272.177170285225, "energy_per_token": 1.06319207142666, "time": 11.349689, "time_per_token": 0.04433472265625}}
{"outputs": [{"text": "X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n    model = Sequential()\n    model.add(Dense(32, activation='sigmoid', input_shape=(2,)))\n    model.compile(optimizer='SGD', loss='binary_crossentropy')\n    history = model.fit(X_train, y_train, epochs=100, verbose=0)\n    roc_auc = auc(y_test, roc_curve(y_test, model.predict(X_test))[2])\n    ax.plot([0, 1], [0, 1], linestyle='--')\n    ax.plot(roc_curve(y_test, model.predict(X_test))[0], roc_curve(y_test, model.predict(X_test))[1], label='AUC={:.2f}'.format(roc_auc))\n    ax.set_title('ROC curve')\n    ax.", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "model", " =", " Sequ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "D", "ense", "(", "3", "2", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "2", ",", ")))", "\n", "    ", "model", ".", "compile", "(", "optim", "izer", "='", "S", "GD", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n", "    ", "history", " =", " model", ".", "fit", "(", "X", "_", "train", ",", " y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "\n", "    ", "roc", "_", "auc", " =", " a", "uc", "(", "y", "_", "test", ",", " ro", "c", "_", "curve", "(", "y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "[", "2", "])", "\n", "    ", "ax", ".", "plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " lin", "estyle", "='", "--", "')", "\n", "    ", "ax", ".", "plot", "(", "roc", "_", "curve", "(", "y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "[", "0", "]", ",", " ro", "c", "_", "curve", "(", "y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "[", "1", "]", ",", " label", "='", "A", "UC", "={", ":", ".", "2", "f", "}'", ".", "format", "(", "roc", "_", "auc", "))", "\n", "    ", "ax", ".", "set", "_", "title", "('", "R", "OC", " curve", "')", "\n", "    ", "ax", "."], "logprobs": [-1.576674461364746, -0.24037888646125793, -0.011306263506412506, -0.0020811345893889666, -0.003611353924497962, -9.63164638960734e-05, -0.012509218417108059, -0.00038187362952157855, -0.9866419434547424, -0.00034850722295232117, -0.0008835464250296354, -0.0002119316632160917, -0.005154415965080261, -3.099393507000059e-05, -0.000742398202419281, -0.0033362226095050573, -0.019492967054247856, -5.722029527532868e-06, -1.0251946150674485e-05, -1.6689286894688848e-06, -9.536697689327411e-06, -0.00035089056473225355, -0.1257547289133072, -0.0006148116663098335, -0.02494225837290287, -0.01218329556286335, -0.0715804472565651, -1.1920922133867862e-06, -4.0649541915627196e-05, -0.01861998438835144, -0.016120687127113342, -3.516612196108326e-05, -0.007877591997385025, -0.17815810441970825, -0.11860868334770203, -1.0728830375228426e-06, -3.814689989667386e-06, -0.0014804366510361433, -0.23232662677764893, -0.03767641261219978, -0.10885783284902573, -0.020845497027039528, -0.390779048204422, -0.13730007410049438, -0.0069788983091712, -2.49676513671875, -0.0001731960946926847, -0.5965998768806458, -0.008011114783585072, -0.01744779199361801, -0.009600776247680187, -0.00011908298620255664, -0.00038187362952157855, -0.00019226610311307013, -0.15474781394004822, -0.00014006110723130405, -0.0004768426588270813, -1.915827751159668, -0.21213683485984802, -0.0018355678766965866, -0.7588024735450745, -0.14438843727111816, -0.13383503258228302, -4.255681051290594e-05, -0.01019543781876564, -0.0004889961564913392, -0.022191885858774185, -1.7165990357170813e-05, -0.11519395560026169, -0.10374951362609863, -0.1336807906627655, -0.027389012277126312, -0.20472846925258636, -0.02249101735651493, -0.006722690537571907, -0.004780767485499382, -6.174850568640977e-05, -0.4308907985687256, -0.0007827793597243726, -2.3901569843292236, -4.529942543740617e-06, -0.07428722083568573, -1.4793651103973389, -0.0003405229654163122, -6.544376083184034e-05, -0.0007183355046436191, -0.031593214720487595, -0.03242586925625801, -0.019680703058838844, -0.00041559641249477863, -0.0003578022588044405, -7.235741941258311e-05, -0.3747972249984741, -0.0031141377985477448, -0.016134997829794884, -2.002502679824829, -0.0027612438425421715, -0.0019500303314998746, -2.4914430468925275e-05, -0.0002233732520835474, -0.00019977481861133128, -0.01802879199385643, -0.0070601035840809345, -0.00012611546844709665, -0.0002942844294011593, -0.010004259645938873, -0.00011955977242905647, -1.0132738680113107e-05, -0.007689755409955978, -0.21857446432113647, -0.0007637205999344587, -0.6994737982749939, -0.07537643611431122, -1.0414797067642212, -0.16235703229904175, -0.08456557244062424, -0.0007864719373174012, -0.07747343927621841, -0.13515929877758026, -0.013956570066511631, -0.05511699244379997, -3.6347029209136963, -0.04847558215260506, -2.3988590240478516, -0.16940626502037048, -0.031669095158576965, -2.276871418871451e-05, -0.0007815881981514394, -0.9703487157821655, -0.0009288049186579883, -0.026568636298179626, -0.17066167294979095, -1.7175852060317993, -1.7165990357170813e-05, -0.002864902140572667, -0.00014995403762441128, -0.0018208129331469536, -0.007528386544436216, -0.000169382052263245, -0.0010925520909950137, -0.005196042358875275, -0.032306186854839325, -0.000161038784426637, -0.001100530382245779, -0.006616825703531504, -0.0014356792671605945, -7.581423415103927e-05, -0.00013183678674977273, -1.6541979312896729, -0.0795825645327568, -0.30524352192878723, -0.03454973176121712, -0.006705875974148512, -0.055038128048181534, -0.42085543274879456, -0.5248221158981323, -0.3902662396430969, -1.6302073001861572, -0.013410603627562523, -0.026173990219831467, -0.03461571782827377, -0.002303091809153557, -0.0023297329898923635, -0.00015805903240107, -0.003869784763082862, -0.0026932416949421167, -0.00021336186910048127, -0.0011027929140254855, -0.00040165462996810675, -0.002193784574046731, -0.00010096516780322418, -1.8522957563400269, -1.9311717551317997e-05, -0.011472444981336594, -0.07123303413391113, -0.534690260887146, -0.014682339504361153, -0.0022631289903074503, -0.021501416340470314, -0.0006661579827778041, -0.1708017736673355, -0.10067418962717056, -1.9059829711914062, -0.0002935693773906678, -0.005305614788085222, -0.0007397775771096349, -0.005097013432532549, -8.260862523457035e-05, -0.0015910121146589518, -0.00021979777375236154, -0.013619006611406803, -3.802703940891661e-05, -5.686121585313231e-05, -9.476689592702314e-05, -0.0001705739414319396, -0.0002598424907773733, -0.00010275312524754554, -0.016188133507966995, -0.05630875378847122, -1.6345536708831787, -0.0009631047723814845, -0.0006596058374270797, -0.25245410203933716, -3.4570634852570947e-06, -3.814689989667386e-06, -0.00012981049076188356, -0.00010048838157672435, -0.003508960595354438, -1.9073468138230965e-06, -5.781483559985645e-05, -3.433168603805825e-05, -0.006716414820402861, -2.1457441107486375e-05, -8.701899787411094e-05, -9.786603914108127e-05, -0.0010523025412112474, -2.992108420585282e-05, -3.3854863431770355e-05, -6.139089964563027e-05, -9.667406266089529e-05, -0.0003200257197022438, -0.028425876051187515, -0.0009940688032656908, -0.9187025427818298, -0.25773942470550537, -0.2929842472076416, -0.007661245763301849, -1.3372373580932617, -0.10600408911705017, -0.15883083641529083, -0.41679251194000244, -0.01584404706954956, -0.003978671506047249, -0.0006098079611547291, -0.0008369756978936493, -0.0001879753835964948, -0.0030808625742793083, -2.2053474822314456e-05, -2.4318398573086597e-05, -0.058166395872831345, -0.010552441701292992, -0.009757207706570625, -0.10961204022169113, -0.0005109196645207703, -0.27086058259010315, -0.14773088693618774, -0.02786538004875183, -0.022037386894226074, -0.04869065806269646, -0.0014334175502881408, -0.04247083514928818, -0.058424826711416245, -0.001866623992100358, -0.0004545609117485583, -0.004415405914187431, -8.964136941358447e-05], "finish_reason": "length"}], "metrics": {"energy": 301.43848601341256, "energy_per_token": 1.1774940859898928, "time": 12.366228, "time_per_token": 0.048305578125}}
{"outputs": [{"text": "# Divide the input data into training and test sets (70% training, 30% test),\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    # Create a Keras Sequential model with one hidden layer using a sigmoid activation function,\n    model = keras.Sequential([\n        keras.layers.Dense(1, activation='sigmoid', input_shape=(2,)),\n        keras.layers.Dense(1, input_shape=(1,)),\n    ])\n\n    # Compile the model with binary cross-entropy loss and an SGD optimizer specifying a learning rate,\n    model.compile(\n        optimizer=keras.optimizers.SGD(lr=0.01),\n        loss='binary_crossentropy',\n    )\n\n    # Fit the model to the training data in a non-verbose mode,\n    model.fit(X_train, Y_train, verbose=0)\n\n    # Plot the ROC curve for", "tokens": ["#", " Div", "ide", " the", " input", " data", " into", " training", " and", " test", " sets", " (", "7", "0", "%", " training", ",", " ", "3", "0", "%", " test", ")", ",", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " a", " K", "eras", " Sequ", "ential", " model", " with", " one", " hidden", " layer", " using", " a", " s", "igmoid", " activation", " function", ",", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "2", ",", "))", ",", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " input", "_", "shape", "=(", "1", ",", "))", ",", "\n", "    ", "])", "\n", "\n", "    ", "#", " Com", "pile", " the", " model", " with", " binary", " cross", "-", "entropy", " loss", " and", " an", " SGD", " optimizer", " specifying", " a", " learning", " rate", ",", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "0", "1", ")", ",", "\n", "        ", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", "\n", "    ", ")", "\n", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", " in", " a", " non", "-", "verbose", " mode", ",", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "#", " Plot", " the", " R", "OC", " curve", " for"], "logprobs": [-1.0048189163208008, -3.1401963233947754, -0.00023803261865396053, -0.08201918751001358, -0.4959779381752014, -0.006011974532157183, -0.013744357042014599, -0.013190745376050472, -0.00613982230424881, -0.002406679093837738, -0.002356730168685317, -0.6785581111907959, -0.021251004189252853, -0.0002506657037883997, -0.0021394239738583565, -0.003173674223944545, -0.0007433511782437563, -0.00035422726068645716, -0.00018034738604910672, -1.4305104514278355e-06, -8.11782301752828e-05, -0.00034814971149899065, -0.0014760324265807867, -1.8110771179199219, -1.188794732093811, -0.005750896409153938, -1.6642944812774658, -0.09582418948411942, -0.011075920425355434, -0.0028639512602239847, -0.004793936386704445, -0.00010680581908673048, -0.008350575342774391, -0.00070296844933182, -0.27929723262786865, -0.00036769305006600916, -0.00018773700867313892, -0.00013660451804753393, -0.005690090823918581, -3.3378044463461265e-05, -0.00014423283573705703, -0.0029302777256816626, -0.016582753509283066, -7.033323527139146e-06, -1.3470558769768104e-05, -4.768370445162873e-07, -6.437280717364047e-06, -0.0005955114611424506, -0.09422600269317627, -0.0005544078885577619, -0.013950222171843052, -0.01152830384671688, -0.09096339344978333, -7.152555099310121e-07, -3.2305197237292305e-05, -0.02334560640156269, -0.014829402789473534, -3.981510963058099e-05, -0.007865882478654385, -0.15621131658554077, -0.1202763244509697, -1.0728830375228426e-06, -4.768360213347478e-06, -0.0020971940830349922, -0.21380576491355896, -0.03905915841460228, -0.09376926720142365, -0.00610178941860795, -0.33239641785621643, -0.002687416272237897, -0.06392863392829895, -0.1559286266565323, -0.01371037494391203, -0.019406918436288834, -8.702239938429557e-06, -0.004473322071135044, -2.098061486321967e-05, -0.00042024365393444896, -0.00769602507352829, -0.011323589831590652, -0.0010448002722114325, -0.00012361239350866526, -0.053115200251340866, -0.008323385380208492, -0.002698829397559166, -1.4185804502631072e-05, -0.0016843193443492055, -0.002356849145144224, -0.614448070526123, -0.22343666851520538, -0.003630714723840356, -0.2179206758737564, -0.004381699021905661, -0.17478497326374054, -2.13382354559144e-05, -5.5549986427649856e-05, -0.25676223635673523, -9.536738616588991e-07, -1.0013530300057027e-05, -0.028646349906921387, -0.0677756741642952, -0.058052003383636475, -0.013577140867710114, -1.1086402082582936e-05, -0.002714522648602724, -1.1444026313256472e-05, -0.04159950837492943, -0.00021920185827184469, -2.5987286790041253e-05, -0.8490002155303955, -0.4977996349334717, -0.6268390417098999, -0.13795535266399384, -0.0014971011551097035, -1.3232143828645349e-05, -0.24906058609485626, -0.0005370128201320767, -0.11974525451660156, -4.768370445162873e-07, -0.17292551696300507, -0.3887110948562622, -0.07536903023719788, -0.2126300036907196, -0.06860724091529846, -0.3334532082080841, -0.03571333363652229, -0.6653485298156738, -0.011974828317761421, -0.0009273757459595799, -0.003744734451174736, -5.125986263010418e-06, -0.032354775816202164, -0.00034624303225427866, -0.0003816353273577988, -0.025161292403936386, -1.1684507131576538, -1.365181565284729, -1.1920922133867862e-06, -0.02611348405480385, -0.004318911116570234, -0.17689849436283112, -0.0014522254932671785, -0.15885676443576813, -1.9408607482910156, -0.1115727499127388, -0.14545446634292603, -0.0034771240316331387, -0.0007347744540311396, -0.11888106912374496, -0.0008896207436919212, -0.014328686520457268, -0.13759276270866394, -7.593343616463244e-05, -0.0022005646023899317, -0.00022384998737834394, -0.017306385561823845, -0.004295290447771549, -0.00025388356880284846, -0.00048458753735758364, -0.00027450130437500775, -0.0005199749139137566, -0.014063423499464989, -0.0030744450632482767, -0.005296958610415459, -0.0003660247311927378, -0.053134985268116, -0.004801410716027021, -0.004320098087191582, -0.0020532971248030663, -0.37147191166877747, -0.0027586284559220076, -0.0008370947907678783, -0.10980667173862457, -0.0002649671514518559, -0.00036149643710814416, -0.000563224486541003, -1.2590019702911377, -0.0192010048776865, -1.1313409805297852, -5.722029527532868e-06, -0.40536370873451233, -0.029180241748690605, -2.372236667724792e-05, -0.00043156370520591736, -0.009252408519387245, -4.3987260141875595e-05, -0.012363696470856667, -0.0007618147064931691, -0.0021946171764284372, -0.6375554800033569, -0.002371596172451973, -0.061465296894311905, -0.0034812819212675095, -0.35310444235801697, -0.4309285879135132, -0.012945891357958317, -0.00022718709078617394, -0.0501471608877182, -0.00030655929003842175, -0.0027228444814682007, -0.4640134274959564, -0.011008835397660732, -8.237022848334163e-05, -0.0002351722796447575, -0.00011038171214750037, -0.013511164113879204, -0.01569736748933792, -0.05579941347241402, -1.0377987623214722, -8.523101132595912e-05, -0.00034528967808000743, -0.02059398591518402, -0.0005940818227827549, -0.0030900132842361927, -0.02551961876451969, -0.0004258441040292382, -0.0002543602604418993, -0.001053850632160902, -0.0005880056996829808, -0.00028153270250186324, -0.0016451646806672215, -0.02103554829955101, -0.002409295178949833, -0.0002256377338198945, -0.00013398226292338222, -9.035655966727063e-05, -0.0006792622152715921, -0.13217075169086456, -0.4997396469116211, -0.0005261705373413861, -0.27050554752349854, -0.0004978132783435285, -0.0003895000845659524, -5.066266385256313e-05, -0.10700394213199615, -0.061244767159223557, -7.080780778778717e-05, -0.00037531962152570486, -0.010059492662549019, -0.00084436044562608, -1.3112935448589269e-05, -0.004068788141012192, -0.9374775886535645, -0.0005635818815790117, -0.08040470629930496, -0.49251312017440796, -0.0056391204707324505, -0.020138558000326157, -0.0009413101943209767, -0.012128651142120361, -0.22827030718326569, -0.003056499408558011, -0.01635972037911415, -2.0265558760002023e-06, -0.0015852991491556168, -0.008585565723478794], "finish_reason": "length"}], "metrics": {"energy": 307.0629811277388, "energy_per_token": 1.1994647700302297, "time": 12.395613, "time_per_token": 0.04842036328125}}
{"outputs": [{"text": "model = keras.models.Sequential()\n    model.add(keras.layers.Dense(2, activation='sigmoid', input_shape=(2,)))\n    model.compile(optimizer='SGD', loss='binary_crossentropy', metrics=['accuracy'])\n    model.fit(X, Y, verbose=0, epochs=3, batch_size=16)\n    pr_curve = roc_curve(Y, model.predict(X))\n    fpr, tpr, thresholds = pr_curve\n    ax.plot(fpr, tpr, label='AUC: {:0.2f}'.format(auc(fpr, tpr)))\n    ax.plot(fpr, fpr, label='AUC: 0.5')\n    ax.set_title('ROC curve')\n    ax.set(xlabel='False positive rate', ylabel='True positive rate')\n    return model, ax", "tokens": ["model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "2", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "2", ",", ")))", "\n", "    ", "model", ".", "compile", "(", "optim", "izer", "='", "S", "GD", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", " metrics", "=['", "accuracy", "'])", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ",", " verbose", "=", "0", ",", " epochs", "=", "3", ",", " batch", "_", "size", "=", "1", "6", ")", "\n", "    ", "pr", "_", "curve", " =", " ro", "c", "_", "curve", "(", "Y", ",", " model", ".", "predict", "(", "X", "))", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " thresholds", " =", " pr", "_", "curve", "\n", "    ", "ax", ".", "plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", ":", " {:", "0", ".", "2", "f", "}'", ".", "format", "(", "auc", "(", "f", "pr", ",", " t", "pr", ")))", "\n", "    ", "ax", ".", "plot", "(", "f", "pr", ",", " f", "pr", ",", " label", "='", "A", "UC", ":", " ", "0", ".", "5", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "R", "OC", " curve", "')", "\n", "    ", "ax", ".", "set", "(", "xlabel", "='", "False", " positive", " rate", "'", ",", " y", "label", "='", "True", " positive", " rate", "')", "\n", "    ", "return", " model", ",", " ax", "\n", "\n", "if"], "logprobs": [-2.846205711364746, -0.015128867700695992, -0.11987553536891937, -3.814689989667386e-06, -0.000403084559366107, -0.1989431232213974, -9.953480184776708e-05, -4.184158387943171e-05, -7.986990567587782e-06, -8.106198947643861e-06, -0.42703381180763245, -0.01842760108411312, -0.076129250228405, -0.047197576612234116, -0.0003262225945945829, -0.00027378625236451626, -0.00012146688823122531, -0.08510328084230423, -8.237022848334163e-05, -0.001404966926202178, -2.1934269170742482e-05, -0.024401094764471054, -0.0003871168300975114, -0.0003301552205812186, -1.57670259475708, -0.15948395431041718, -0.47181710600852966, -0.32291319966316223, -0.08286380022764206, -4.410646579344757e-05, -0.7020717263221741, -0.0018032018560916185, -0.12524718046188354, -1.4305012882687151e-05, -0.056564733386039734, -0.361188143491745, -0.08118309080600739, -0.04445822164416313, -0.2376345992088318, -0.017357701435685158, -0.04417482763528824, -0.01933208853006363, -0.0006711614551022649, -0.0447879284620285, -0.003513593692332506, -1.9380252361297607, -7.033323527139146e-06, -0.1235438734292984, -1.1898391246795654, -0.0004987664869986475, -0.0001599660754436627, -0.000377583724912256, -0.04788462817668915, -0.029568497091531754, -0.020098600536584854, -0.0007694382802583277, -0.0004447901446837932, -6.007967749610543e-05, -1.1868181228637695, -0.0478145107626915, -0.4405280649662018, -0.1040472462773323, -0.23287512362003326, -0.07699739187955856, -0.004518181085586548, -0.09193054586648941, -0.34488645195961, -0.008970200084149837, -0.0013615157222375274, -0.0002109781780745834, -0.010494994930922985, -0.0015073377871885896, -0.023447269573807716, -0.05154448375105858, -1.1633033752441406, -0.004942105617374182, -0.052248355001211166, -0.15818430483341217, -0.757219135761261, -0.0008310201810672879, -2.422333240509033, -1.1357084512710571, -0.3135863244533539, -5.924526340095326e-05, -7.390948667307384e-06, -0.0010524216340854764, -1.293846607208252, -0.6236649751663208, -0.40850841999053955, -0.017787227407097816, -0.31627386808395386, -2.5633301734924316, -0.18637502193450928, -0.26157474517822266, -0.23834392428398132, -0.054125744849443436, -2.3841855067985307e-07, -3.242440288886428e-05, -0.00015090756642166525, -0.0007128558354452252, -0.23807187378406525, -0.06128501892089844, -0.03334107995033264, -0.00016604475968051702, -0.0011863820254802704, -0.006576087325811386, -0.0017446548445150256, -0.25015392899513245, -0.01872154325246811, -0.017641067504882812, -2.082413673400879, -0.01874927245080471, -0.01247590035200119, -0.007592984475195408, -0.044778354465961456, -0.002042233245447278, -0.448275089263916, -0.001793206320144236, -0.016547460108995438, -2.038458114839159e-05, -1.7881377516459906e-06, -0.011030765250325203, -0.07108593732118607, -1.1604411602020264, -0.18544901907444, -0.06347708404064178, -0.03474940359592438, -0.019713664427399635, -6.079655122448457e-06, -0.0014417502097785473, -0.0017914213240146637, -0.00018070495571009815, -0.059357114136219025, -0.6448643207550049, -0.5926263332366943, -1.0658766031265259, -0.006362302228808403, -2.4320807456970215, -0.32597458362579346, -0.5471145510673523, -0.0015484021278098226, -0.11714228242635727, -0.0021912867669016123, -0.017048943787813187, -0.0007367995567619801, -0.0005203323671594262, -0.0008447177824564278, -0.14793027937412262, -0.0010380124440416694, -0.058786943554878235, -8.583032467868179e-06, -0.000399033073335886, -0.013058501295745373, -0.00042226933874189854, -0.06277413666248322, -0.006001191213726997, -0.019947869703173637, -0.04377371817827225, -0.0008382858941331506, -1.0657334327697754, -0.03561624512076378, -0.05686299502849579, -0.00013398226292338222, -0.001111366436816752, -0.1187841072678566, -0.00018559163436293602, -0.0032458023633807898, -0.5685425996780396, -0.055445119738578796, -1.7829463481903076, -0.003996600396931171, -0.02704806439578533, -1.7076280117034912, -0.14328627288341522, -0.16279900074005127, -0.48295626044273376, -0.15157127380371094, -0.009256306104362011, -0.012134421616792679, -0.02401222474873066, -0.00033742457162588835, -0.8152669072151184, -0.24683593213558197, -0.05000724270939827, -0.04814504459500313, -0.08572397381067276, -0.0012842511059716344, -0.04047571122646332, -0.04434008151292801, -0.0014509160537272692, -0.00045563330058939755, -0.004718360491096973, -0.00012754580529872328, -0.03427411615848541, -1.1103893518447876, -0.12625908851623535, -0.00928866770118475, -0.009183783084154129, -1.105591893196106, -0.004961085040122271, -0.01202771533280611, -7.354942499659956e-05, -0.022758016362786293, -7.271502545336261e-05, -0.00024327656137757003, -0.0002797450579237193, -0.0038633723743259907, -0.00024768622824922204, -0.022080298513174057, -0.006399258971214294, -0.05539132282137871, -0.4021807610988617, -0.01827111653983593, -0.0013165149139240384, -0.00460635032504797, -0.5461565256118774, -0.015545266680419445, -1.0644118785858154], "finish_reason": "stop"}], "metrics": {"energy": 224.7634734573365, "energy_per_token": 1.031025107602461, "time": 9.684921, "time_per_token": 0.04442624311926605}}
{"outputs": [{"text": "# Divide the input data into training and test sets\n    X_train, X_test, Y_train, Y_test = train_test_split(\n        X, Y, test_size=0.3, random_state=123\n    )\n\n    # Create a Keras Sequential model with one hidden layer using a sigmoid activation function\n    model = keras.Sequential(\n        [\n            keras.layers.Dense(\n                10,\n                activation=\"sigmoid\",\n                kernel_initializer=\"he_normal\",\n                kernel_regularizer=keras.regularizers.l2(0.01),\n                input_shape=(2,),\n                name=\"Layer 1\",\n            ),\n            keras.layers.Dense(\n                1,\n                kernel_initializer=\"he_normal\",\n                kernel_regularizer=keras.regularizers.l2(0.01),\n                name=\"Layer 2\",\n            ),\n        ]\n    )\n\n    # Compile the model with binary cross-entropy loss", "tokens": ["#", " Div", "ide", " the", " input", " data", " into", " training", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n", "        ", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", "2", "3", "\n", "    ", ")", "\n", "\n", "    ", "#", " Create", " a", " K", "eras", " Sequ", "ential", " model", " with", " one", " hidden", " layer", " using", " a", " s", "igmoid", " activation", " function", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "(", "\n", "        ", "[", "\n", "            ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "                ", "1", "0", ",", "\n", "                ", "activation", "=", "\"", "s", "igmoid", "\"", ",", "\n", "                ", "kernel", "_", "initial", "izer", "=", "\"", "he", "_", "normal", "\"", ",", "\n", "                ", "kernel", "_", "regular", "izer", "=", "keras", ".", "regular", "izers", ".", "l", "2", "(", "0", ".", "0", "1", ")", ",", "\n", "                ", "input", "_", "shape", "=(", "2", ",", ")", ",", "\n", "                ", "name", "=", "\"", "Layer", " ", "1", "\"", ",", "\n", "            ", ")", ",", "\n", "            ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "                ", "1", ",", "\n", "                ", "kernel", "_", "initial", "izer", "=", "\"", "he", "_", "normal", "\"", ",", "\n", "                ", "kernel", "_", "regular", "izer", "=", "keras", ".", "regular", "izers", ".", "l", "2", "(", "0", ".", "0", "1", ")", ",", "\n", "                ", "name", "=", "\"", "Layer", " ", "2", "\"", ",", "\n", "            ", ")", ",", "\n", "        ", "]", "\n", "    ", ")", "\n", "\n", "    ", "#", " Com", "pile", " the", " model", " with", " binary", " cross", "-", "entropy", " loss"], "logprobs": [-1.0048189163208008, -3.1401963233947754, -0.00023803261865396053, -0.08201918751001358, -0.4959779381752014, -0.006011974532157183, -0.013744357042014599, -0.013190745376050472, -0.00613982230424881, -0.002406679093837738, -0.002356730168685317, -0.878061056137085, -0.0016709902556613088, -0.4315362870693207, -0.025485800579190254, -0.0059465630911290646, -0.0011207734933122993, -0.0022788289934396744, -0.00011812942830147222, -0.006639681290835142, -0.0003156163729727268, -0.2411009669303894, -0.00016330339713022113, -0.00010501786891836673, -7.557583012385294e-05, -0.0032093231566250324, -1.9430925021879375e-05, -0.00010179955279454589, -0.001263773301616311, -0.007519867736846209, -1.9073468138230965e-06, -1.2755313036905136e-05, -5.960462772236497e-07, -5.602820692729438e-06, -0.00016973962192423642, -2.0172343254089355, -0.012862690724432468, -0.0026559100951999426, -0.0006743779522366822, -0.07097645103931427, -0.0011503038695082068, -0.03967597708106041, -2.3841855067985307e-07, -3.397406908334233e-05, -0.0024312958121299744, -0.007815496064722538, -2.3245540432981215e-05, -0.007931404747068882, -0.04605911299586296, -0.10210410505533218, -4.768370445162873e-07, -2.861018856492592e-06, -0.00038389943074434996, -2.5504422187805176, -0.8929775357246399, -0.027057461440563202, -2.2899954319000244, -0.0015248350100591779, -0.0002733095607254654, -0.005723872222006321, -0.3365744650363922, -0.0005204515182413161, -0.023749053478240967, -0.0872393324971199, -0.04164307564496994, -0.08792857080698013, -4.136476854910143e-05, -0.036534059792757034, -4.136476854910143e-05, -0.0006469779182225466, -0.051266830414533615, -0.09720394015312195, -0.0031418269500136375, -0.00042989550274796784, -0.931922197341919, -0.10144643485546112, -0.006848316174000502, -5.030505417380482e-05, -0.003532005939632654, -0.016832226887345314, -0.011870224960148335, -0.0020207001361995935, -0.02186817117035389, -0.0022756175603717566, -0.057474784553050995, -1.0251946150674485e-05, -6.48477507638745e-05, -0.44414064288139343, -1.6689286894688848e-06, -8.106198947643861e-06, -0.5741379857063293, -0.0019469369435682893, -0.0009750141180120409, -0.0020403298549354076, -0.024070996791124344, -0.0004857790481764823, -0.02357942797243595, -1.2636104656849056e-05, -0.004439617041498423, -8.702239938429557e-06, -0.07769052684307098, -0.0003084660565946251, -1.4424220353248529e-05, -0.08936908096075058, -0.000276765669696033, -1.0170722007751465, -1.2857167720794678, -0.35034164786338806, -0.44761982560157776, -0.0004580163804348558, -0.44258612394332886, -0.0033265987876802683, -0.07871291786432266, -0.0055623045191168785, -1.2397689715726301e-05, -3.969590397900902e-05, -0.0004909025738015771, -0.01409186888486147, -0.01980646513402462, -0.5782226920127869, -4.172316494077677e-06, -0.1155347153544426, -2.0861407392658293e-05, -0.0009198724874295294, -0.02416374161839485, -2.268911838531494, -0.00022230061586014926, -0.9580762982368469, -6.401333666872233e-05, -0.001505433232523501, -0.0038880719803273678, -0.08712133020162582, -1.7922046184539795, -1.1444026313256472e-05, -0.01336743589490652, -0.00036459474358707666, -0.00030858523678034544, -0.4119941294193268, -0.00017498392844572663, -0.0028147385455667973, -0.00019739109848160297, -0.00016330339713022113, -0.04303211346268654, -0.13430239260196686, -0.00357714481651783, -0.8972766399383545, -0.0019110051216557622, -0.41193175315856934, -0.25458183884620667, -0.001956336200237274, -0.012986958958208561, -0.0015713736647740006, -0.4023658037185669, -0.5233201384544373, -6.794906312279636e-06, -0.0331219844520092, -0.172556534409523, -0.14064833521842957, -0.007021395489573479, -0.0018043918535113335, -0.007275278214365244, -0.005445053335279226, -1.8524322509765625, -0.16540588438510895, -0.0011650687083601952, -0.0016919358167797327, -3.5962562561035156, -1.1808035373687744, -0.09457538276910782, -0.008367125876247883, -0.004204956814646721, -0.0026126320008188486, -0.04585633799433708, -0.000554288737475872, -0.2484881728887558, -0.002727956511080265, -0.296550989151001, -0.004300987813621759, -1.2636104656849056e-05, -0.0023762343917042017, -3.099436753473128e-06, -0.10359002649784088, -0.00046302087139338255, -0.00012730741582345217, -0.7439513802528381, -3.361645576660521e-05, -0.045325350016355515, -0.04227658733725548, -0.24527639150619507, -0.0003134713042527437, -0.5341970324516296, -5.94836674281396e-05, -0.10135606676340103, -4.172316494077677e-06, -0.00014435203047469258, -0.002599552972242236, -0.06426193565130234, -1.6927575416048057e-05, -0.0008967668982222676, -1.966933996300213e-05, -2.7179348762729205e-05, -0.0004012971476186067, -0.0008803306263871491, -0.04401273652911186, -4.291525328881107e-06, -0.0009569118265062571, -6.794906312279636e-06, -3.266281055402942e-05, -0.0019395602867007256, -9.214453893946484e-05, -8.856858039507642e-05, -0.00014876213390380144, -3.349725011503324e-05, -0.00012694983161054552, -0.001117201172746718, -0.00016890530241653323, -0.002019391627982259, -0.0009270184673368931, -0.010039075277745724, -0.009992575272917747, -0.00013124081306159496, -0.00015686711412854493, -0.0003097769513260573, -0.019674742594361305, -0.5962172150611877, -0.00017248096992261708, -0.00014149141497910023, -0.16808418929576874, -0.001932421582750976, -0.006322027184069157, -0.006060437764972448, -0.0008222059695981443, -6.246371776796877e-05, -0.02854718267917633, -0.00013684290752280504, -0.0031690397299826145, -0.0002325502864550799, -0.006918285507708788, -0.00013064485392533243, -0.01300849299877882, -0.0007982643437571824, -0.00011801023356383666, -0.001576134585775435, -0.10616575926542282, -0.00021717573690693825, -0.01190226711332798, -0.01683199219405651, -5.817244164063595e-05, -0.007239537313580513, -0.0006605588714592159, -0.1436719000339508, -0.014554286375641823, -0.0008177988929674029, -0.003653638530522585, -0.0001559135998832062, -0.0010088359704241157], "finish_reason": "length"}], "metrics": {"energy": 272.8564824228286, "energy_per_token": 1.0658456344641742, "time": 11.346187, "time_per_token": 0.04432104296875}}
{"outputs": [{"text": "train_size = 0.7\n    random_state = 42\n    model = keras.models.Sequential()\n    model.add(keras.layers.Dense(2, activation=\"sigmoid\"))\n    model.add(keras.layers.Dense(1, activation=\"sigmoid\"))\n    model.compile(loss=keras.losses.BinaryCrossentropy(),\n                  optimizer=keras.optimizers.SGD(learning_rate=0.1),\n                  metrics=[\"accuracy\"])\n    model.fit(X, Y, epochs=5, verbose=0, batch_size=32, validation_split=0.3, shuffle=True,\n              callbacks=None, verbose=0, initial_epoch=0)\n    pr_score, thresholds, fp_rate = roc_curve(y_true=Y,\n                                             y_score=model.predict(X),\n                                             pos_label=1)\n    pr_auc = auc(fp_rate, pr_score)\n    ax = plt.gca()\n    ax", "tokens": ["train", "_", "size", " =", " ", "0", ".", "7", "\n", "    ", "random", "_", "state", " =", " ", "4", "2", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "2", ",", " activation", "=", "\"", "s", "igmoid", "\"", "))", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "=", "\"", "s", "igmoid", "\"", "))", "\n", "    ", "model", ".", "compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "()", ",", "\n", "                ", "  ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "1", ")", ",", "\n", "                ", "  ", "metrics", "=[", "\"", "accuracy", "\"", "])", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ",", " epochs", "=", "5", ",", " verbose", "=", "0", ",", " batch", "_", "size", "=", "3", "2", ",", " validation", "_", "split", "=", "0", ".", "3", ",", " shuffle", "=", "True", ",", "\n", "              ", "call", "backs", "=", "None", ",", " verbose", "=", "0", ",", " initial", "_", "epoch", "=", "0", ")", "\n", "    ", "pr", "_", "score", ",", " thresholds", ",", " f", "p", "_", "rate", " =", " ro", "c", "_", "curve", "(", "y", "_", "true", "=", "Y", ",", "\n", "                ", "                ", "             ", "y", "_", "score", "=", "model", ".", "predict", "(", "X", ")", ",", "\n", "                ", "                ", "             ", "pos", "_", "label", "=", "1", ")", "\n", "    ", "pr", "_", "auc", " =", " a", "uc", "(", "fp", "_", "rate", ",", " pr", "_", "score", ")", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "ax"], "logprobs": [-3.1014928817749023, -0.3079333007335663, -1.7612895965576172, -0.08927619457244873, -0.1303188055753708, -0.04413570463657379, -3.7788631743751466e-05, -0.03136114403605461, -0.08205366879701614, -0.08190419524908066, -2.086756706237793, -0.002564596012234688, -0.017948471009731293, -0.01737738400697708, -0.025170590728521347, -0.3111666738986969, -0.03157011419534683, -0.007127099204808474, -0.5142933130264282, -1.9677224159240723, -0.01339731179177761, -0.18374493718147278, -0.00019464982324279845, -0.00039986721822060645, -0.40472835302352905, -0.00013302871957421303, -3.6477376852417365e-05, -5.006777428206988e-06, -5.364403477869928e-06, -0.4357822835445404, -0.01093077939003706, -0.04336639866232872, -0.036876384168863297, -0.00024125049822032452, -0.0002109781780745834, -0.00010823617776622996, -0.0846232995390892, -4.339123915997334e-05, -0.0019394413102418184, -2.062299427052494e-05, -0.022036803886294365, -0.0005486889858730137, -0.00019405389321036637, -1.7037124633789062, -0.12854719161987305, -0.6137198209762573, -1.5160773992538452, -0.103594109416008, -0.0969059020280838, -5.018585216021165e-05, -2.777537883957848e-05, -1.0992836952209473, -0.0173572339117527, -0.01191993709653616, -0.0128360940143466, -0.00020787939138244838, -0.959903359413147, -9.369411418447271e-05, -0.0023539948742836714, -0.0002320735511602834, -0.0003849719068966806, -4.31528314948082e-05, -0.024858886376023293, -0.0016321921721100807, -0.0002818902430590242, -0.04533492028713226, -0.6517419815063477, -0.019334543496370316, -0.031152131035923958, -0.00891715195029974, -0.005818098317831755, -5.602820692729438e-06, -9.870042413240299e-05, -0.01006657350808382, -0.00906270369887352, -0.056438103318214417, -0.044499725103378296, -0.0011411352315917611, -0.005309171974658966, -0.0009290431626141071, -0.5298503041267395, -0.13753198087215424, -2.5553085803985596, -8.093983342405409e-05, -0.04450428485870361, -5.960462772236497e-07, -5.221230458118953e-05, -0.47394809126853943, -0.0002865380665753037, -0.005927484016865492, -0.5067485570907593, -0.000402250443585217, -0.5588303208351135, -0.023685257881879807, -0.05950336903333664, -0.002631774405017495, -1.156323378381785e-05, -0.02659510262310505, -0.09676890820264816, -1.883488948806189e-05, -0.00018869050836656243, -0.003444335889071226, -6.890059739816934e-05, -0.02180623821914196, -0.00039736481267027557, -0.03493890166282654, -0.5339314937591553, -8.21318244561553e-05, -2.4318398573086597e-05, -0.003026312217116356, -0.06249330937862396, -0.0003195490571670234, -0.8640923500061035, -0.16859333217144012, -0.03815719857811928, -0.08415184915065765, -0.0009203489171341062, -0.001100887660868466, -0.005671955179423094, -0.2100497931241989, -0.01914919912815094, -0.07488955557346344, -0.0002971446083392948, -0.168376162648201, -0.004136459436267614, -0.0794418603181839, -0.3222675621509552, -0.011818626895546913, -0.0011825718684121966, -0.0001811817055568099, -0.05933329835534096, -0.0027416283264756203, -0.02513711154460907, -0.0056028468534350395, -1.0537075996398926, -0.0008387623238377273, -1.776451587677002, -0.5838348269462585, -0.37750381231307983, -0.0009758477681316435, -0.14639239013195038, -0.16873250901699066, -1.888322114944458, -4.0411134250462055e-05, -1.0013530300057027e-05, -0.00041845624218694866, -0.6342039704322815, -0.012770303525030613, -0.036440614610910416, -1.322988510131836, -1.4781842764932662e-05, -0.017886295914649963, -0.002063408959656954, -0.12260208278894424, -0.009715533815324306, -0.4645603597164154, -0.2653149664402008, -0.6999470591545105, -0.0007621721015311778, -0.05244406685233116, -0.24354903399944305, -0.25907477736473083, -0.0565006323158741, -0.3004654347896576, -2.2053474822314456e-05, -1.2538813352584839, -0.17627184092998505, -0.04997912049293518, -1.864585041999817, -0.0012154342839494348, -0.14941047132015228, -0.08112131804227829, -2.6469931602478027, -0.0005838358192704618, -0.035475313663482666, -0.0005141366855241358, -0.0025839770678430796, -1.6370255947113037, -0.0148676922544837, -0.17297184467315674, -3.845712900161743, -0.16189348697662354, -2.383948564529419, -0.2845570147037506, -2.4183270931243896, -2.041173219680786, -0.4170044958591461, -1.7630183696746826, -0.27505072951316833, -0.7896942496299744, -0.09560276567935944, -0.05111517384648323, -1.1920922133867862e-06, -0.0007413261337205768, -0.00021324267436284572, -0.0009782296838238835, -1.1669384241104126, -0.0004960260121151805, -0.018819700926542282, -0.006522556766867638, -0.07642261683940887, -0.04760561138391495, -0.5632947087287903, -0.0021422787103801966, -0.008640522137284279, -0.30276525020599365, -0.05161524564027786, -1.0132738680113107e-05, -0.0037161121144890785, -0.010184227488934994, -0.06100960820913315, -0.0010345588671043515, -0.004013104364275932, -0.018013570457696915, -0.02138158492743969, -0.17796166241168976, -0.23823261260986328, -0.038437142968177795, -0.00013171759201213717, -7.998623186722398e-05, -0.0031931623816490173, -0.08245058357715607, -0.05520656332373619, -0.0006409021443687379, -0.006485012359917164, -0.044222500175237656, -0.7097511291503906, -0.03698185086250305, -0.04062464088201523, -2.609086036682129, -0.07560879737138748, -0.14129294455051422, -0.11072291433811188, -0.012174109928309917, -2.622600959512056e-06, -0.0006768796010874212, -0.5900285840034485, -0.0003474347176961601, -0.00038926175329834223, -0.02488039992749691, -0.01566251367330551, -4.172316494077677e-06, -0.00013362467871047556, -0.020931771025061607, -0.006365855690091848, -0.09530477970838547, -0.3393721282482147, -1.0899242162704468, -0.01027449406683445, -0.0021354984492063522, -1.5951918363571167, -0.009316776879131794, -0.006539492402225733, -0.035690903663635254, -0.006947763729840517, -0.05726620554924011], "finish_reason": "length"}], "metrics": {"energy": 331.60873435115803, "energy_per_token": 1.295346618559211, "time": 12.820723, "time_per_token": 0.05008094921875}}
{"outputs": [{"text": "# split the data\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n    # create the model\n    model = keras.models.Sequential([\n        keras.layers.Dense(2, activation=\"sigmoid\", input_shape=[2]),\n        keras.layers.Dense(1)\n    ])\n    # compile the model\n    model.compile(optimizer=\"sgd\", loss=\"binary_crossentropy\",\n                  metrics=[\"accuracy\", \"precision\", \"recall\", \"f1-score\"])\n    # fit the model\n    model.fit(X_train, Y_train, epochs=10, verbose=0)\n    # plot the ROC curve\n    fpr, tpr, _ = roc_curve(Y_test, model.predict(X_test))\n    roc_auc = auc(fpr, tpr)\n    ax.plot(fpr, tpr, label=f\"AUC", "tokens": ["#", " split", " the", " data", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "#", " create", " the", " model", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "2", ",", " activation", "=", "\"", "s", "igmoid", "\"", ",", " input", "_", "shape", "=[", "2", "])", ",", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ")", "\n", "    ", "])", "\n", "    ", "#", " compile", " the", " model", "\n", "    ", "model", ".", "compile", "(", "optim", "izer", "=", "\"", "sg", "d", "\"", ",", " loss", "=", "\"", "binary", "_", "cross", "entropy", "\"", ",", "\n", "                ", "  ", "metrics", "=[", "\"", "accuracy", "\"", ",", " \"", "precision", "\"", ",", " \"", "re", "call", "\"", ",", " \"", "f", "1", "-", "score", "\"", "])", "\n", "    ", "#", " fit", " the", " model", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n", "    ", "#", " plot", " the", " R", "OC", " curve", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " model", ".", "predict", "(", "X", "_", "test", "))", "\n", "    ", "roc", "_", "auc", " =", " a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n", "    ", "ax", ".", "plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "\"", "A", "UC"], "logprobs": [-1.0048189163208008, -2.7342677116394043, -0.7376351356506348, -0.2743857502937317, -2.6396334171295166, -0.0011722128838300705, -0.37905165553092957, -0.04055962339043617, -0.006525991018861532, -0.001073856488801539, -0.002135141519829631, -9.417090768693015e-05, -0.01026942115277052, -0.00064876489341259, -0.1421605348587036, -0.00016664070426486433, -0.00018356545479036868, -0.0001045410826918669, -0.002181176096200943, -1.3589766240329482e-05, -0.0001802282058633864, -0.0019657351076602936, -0.017978796735405922, -3.576272320060525e-06, -1.5139465176616795e-05, -5.960462772236497e-07, -4.291525328881107e-06, -0.0002616301644593477, -0.1481325924396515, -0.0004967409186065197, -0.0056226435117423534, -0.008019747212529182, -0.06513585895299911, -9.536738616588991e-07, -3.182837463100441e-05, -0.010532506741583347, -0.01326509565114975, -2.8490614567999728e-05, -0.010050995275378227, -0.12915794551372528, -0.1008395254611969, -1.1920922133867862e-06, -4.172316494077677e-06, -0.0009240409708581865, -0.1818622350692749, -0.026572002097964287, -0.09546613693237305, -0.003776918863877654, -1.895943284034729, -0.10403284430503845, -0.3923727571964264, -1.123876929283142, -0.2238255739212036, -0.07821100205183029, -0.003942575305700302, -0.010217620991170406, -0.002329970942810178, -0.0851016417145729, -1.5497195136049413e-06, -9.822363062994555e-05, -0.725020170211792, -4.660974445869215e-05, -2.4437606043647975e-05, -2.3841830625315197e-06, -5.483612312673358e-06, -0.6328045725822449, -0.08653813600540161, -0.014969751238822937, -0.009063884615898132, -1.3112935448589269e-05, -0.00043096792069263756, -9.775113539944869e-06, -0.0348997600376606, -0.00017498392844572663, -2.9205850296420977e-05, -2.136148691177368, -0.07678810507059097, -0.3849925100803375, -1.9620620012283325, -0.043862488120794296, -0.022034356370568275, -2.7656173188006505e-05, -1.2159273865108844e-05, -0.9955618381500244, -0.15767818689346313, -2.145764938177308e-06, -0.04584449529647827, -0.8309095501899719, -0.023409422487020493, -0.016836917027831078, -0.7428601980209351, -0.030952783301472664, -0.19730915129184723, -0.006844290532171726, -3.659658250398934e-05, -0.0012694880133494735, -2.9802276912960224e-06, -0.014423985034227371, -0.00016044282529037446, -0.00016592556494288146, -0.011798717081546783, -0.3055571913719177, -0.15284475684165955, -0.011149249039590359, -0.0011650687083601952, -0.0002388668799540028, -0.019836852326989174, -0.1432572454214096, -0.01950126700103283, -0.06920432299375534, -0.00023993951617740095, -0.027664098888635635, -0.00023910524032544345, -0.010994568467140198, -6.48477507638745e-05, -0.00021741411183029413, -0.0001787979417713359, -1.6270766258239746, -5.722029527532868e-06, -0.07115232944488525, -0.23032595217227936, -0.5648589730262756, -8.523101132595912e-05, -3.611976353568025e-05, -4.708655978902243e-05, -0.018057242035865784, -0.019134696573019028, -0.013432716019451618, -0.006170982029289007, -0.0007469248375855386, -0.00024780540843494236, -0.00015567521040793508, -7.271502545336261e-05, -0.03893017768859863, -1.8043525218963623, -0.012710276059806347, -0.03047938644886017, -0.006395705509930849, -0.03105725720524788, -0.07161273807287216, -0.08204477280378342, -0.00022754464589525014, -0.30471304059028625, -0.06738102436065674, -0.6329240202903748, -0.025495795533061028, -0.017969664186239243, -0.004473440814763308, -0.005286997649818659, -0.00040570611599832773, -0.0019061268540099263, -0.2771485149860382, -0.03270995616912842, -0.7954345941543579, -0.010189419612288475, -0.28345271944999695, -3.218599158572033e-05, -0.00013612773909699172, -0.3520927131175995, -0.002256349427625537, -0.014725567772984505, -0.0035689487121999264, -0.044373951852321625, -0.0038175340741872787, -0.0012822272256016731, -0.13665246963500977, -0.00021324267436284572, -0.15813016891479492, -0.001110771088860929, -0.00033539868309162557, -3.6238969187252223e-05, -0.013221685774624348, -0.016133824363350868, -5.709961988031864e-05, -0.0001839230244513601, -0.02394413948059082, -0.0009173714206553996, -1.2278481335670222e-05, -0.00688809622079134, -0.7896907329559326, -0.00028272447525523603, -0.6843986511230469, -0.15174971520900726, -0.3382531404495239, -0.05355246737599373, -0.00021395778458099812, -0.09548228234052658, -0.14857184886932373, -0.0033568956423550844, -0.04138953611254692, -0.011838771402835846, -0.4525551199913025, -0.008811519481241703, -0.04902612417936325, -5.364403477869928e-06, -0.009740679524838924, -0.30039703845977783, -0.0012959185987710953, -0.6801237463951111, -0.0011892396723851562, -0.0032742007169872522, -0.007542584091424942, -0.008526468649506569, -0.0006132629350759089, -1.8708230257034302, -0.0033502422738820314, -0.010567186400294304, -3.576278118089249e-07, -2.062299427052494e-05, -2.098061486321967e-05, -7.045020902296528e-05, -0.025363542139530182, -0.0012553200358524919, -0.0017716678557917476, -0.008571264334022999, -0.02494342066347599, -5.817244164063595e-05, -0.0007570500019937754, -0.004171005450189114, -0.00011634149996098131, -4.076874756719917e-05, -2.4676019165781327e-05, -0.3527528941631317, -0.006032118573784828, -0.0028468340169638395, -1.3635245561599731, -0.001620409544557333, -0.0008088654140010476, -0.0025227407459169626, -0.0009365463047288358, -1.9073468138230965e-06, -8.034383063204587e-05, -0.000358159770257771, -4.172316494077677e-06, -0.000996093382127583, -0.0003483880718704313, -0.00023338454775512218, -0.0006668727728538215, -0.00154518848285079, -0.023298555985093117, -0.2383580207824707, -0.4513673186302185, -0.05892305448651314, -0.03702079504728317, -0.010589951649308205, -9.536697689327411e-06, -0.00047267231275327504, -0.0005775213940069079, -0.000291662581730634, -0.00067473528906703, -0.19541233777999878, -0.11214579641819, -0.4828077554702759, -0.10994231700897217, -0.5646819472312927, -0.004788123071193695], "finish_reason": "length"}], "metrics": {"energy": 315.02636194419887, "energy_per_token": 1.2305717263445268, "time": 12.58768, "time_per_token": 0.049170625}}
{"outputs": [{"text": "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n    model = keras.Sequential([keras.layers.Dense(3, activation=\"sigmoid\")])\n    model.compile(\"SGD\", \"binary_crossentropy\")\n    model.fit(X_train, Y_train, epochs=3, verbose=0)\n    Y_pred = model.predict(X_test)\n    Y_pred = np.array(Y_pred > 0.5, dtype=int)\n    fpr, tpr, _ = roc_curve(Y_test, Y_pred)\n    roc_auc = auc(fpr, tpr)\n    ax = plt.gca()\n    ax.set_title('ROC curve')\n    ax.set_xlabel('False Positive Rate')\n    ax.set_ylabel('True Positive Rate')\n    ax.plot(fpr, tpr, label='AUC = {:0.2f}'.format(roc", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "3", ",", " activation", "=", "\"", "s", "igmoid", "\"", ")]", ")", "\n", "    ", "model", ".", "compile", "(", "\"", "S", "GD", "\"", ",", " \"", "binary", "_", "cross", "entropy", "\"", ")", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "3", ",", " verbose", "=", "0", ")", "\n", "    ", "Y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "test", ")", "\n", "    ", "Y", "_", "pred", " =", " np", ".", "array", "(", "Y", "_", "pred", " >", " ", "0", ".", "5", ",", " dtype", "=", "int", ")", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n", "    ", "roc", "_", "auc", " =", " a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "R", "OC", " curve", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "False", " Positive", " Rate", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "True", " Positive", " Rate", "')", "\n", "    ", "ax", ".", "plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " {:", "0", ".", "2", "f", "}'", ".", "format", "(", "roc"], "logprobs": [-1.576674461364746, -0.24037888646125793, -0.011306263506412506, -0.0020811345893889666, -0.003611353924497962, -9.63164638960734e-05, -0.012509218417108059, -0.00038187362952157855, -0.4689818024635315, -0.000219321038457565, -0.00035661060246638954, -0.00019178935326635838, -0.0021927140187472105, -2.002696055569686e-05, -0.00025018901214934886, -0.003572631161659956, -0.016042090952396393, -5.960446742392378e-06, -1.0490362910786644e-05, -9.536738616588991e-07, -9.298280929215252e-06, -0.0003541081096045673, -0.1182836964726448, -0.0004938812926411629, -0.008694413118064404, -0.016792723909020424, -0.09043056517839432, -1.6689286894688848e-06, -3.969590397900902e-05, -0.019202057272195816, -0.01657126285135746, -4.029192859889008e-05, -0.0069189961068332195, -0.19841010868549347, -0.10828589648008347, -1.1920922133867862e-06, -4.291525328881107e-06, -0.0012834176886826754, -0.25583985447883606, -0.03665151447057724, -0.10831894725561142, -0.020528119057416916, -0.33811935782432556, -0.093535877764225, -0.00631124759092927, -0.12107457220554352, -5.364403477869928e-06, -0.00013493580627255142, -0.7668514847755432, -2.9802276912960224e-06, -1.7881377516459906e-06, -0.14259684085845947, -2.275862216949463, -0.00012289722508285195, -0.0021433494985103607, -1.645074735279195e-05, -0.025768382474780083, -0.00021169328829273582, -0.00016783259343355894, -2.588376045227051, -1.036433219909668, -0.19732481241226196, -1.809800148010254, -0.07210155576467514, -0.00957692600786686, -4.684815212385729e-05, -1.4424220353248529e-05, -0.8469421863555908, -0.0021996130235493183, -0.014541832730174065, -0.009019347839057446, -0.01031354907900095, -0.00014447122521232814, -0.0014946014853194356, -0.0003369478799868375, -3.1382691860198975, -0.40811535716056824, -0.0006014683749526739, -0.001733111683279276, -0.0003978414461016655, -0.35425376892089844, -0.04833134263753891, -0.015573670156300068, -0.00205972115509212, -0.001029080944135785, -0.0006542449118569493, -0.5948066115379333, -0.010233786888420582, -0.01552590075880289, -0.21151027083396912, -0.0021525088232010603, -0.0025015748105943203, -0.0004911408759653568, -0.007853937335312366, -0.007182136178016663, -0.00027021096320822835, -0.00042655906872823834, -0.007943941280245781, -0.0006512666586786509, -1.823885577323381e-05, -0.034257642924785614, -0.6401579976081848, -0.0015150746330618858, -1.8320584297180176, -0.4529356360435486, -0.05952852964401245, -0.0010545651894062757, -0.11171402037143707, -0.09845281392335892, -0.011897437274456024, -0.10546119511127472, -1.2659318447113037, -0.004643371794372797, -0.4295896291732788, -0.021923335269093513, -0.010515166446566582, -0.0003992714046034962, -0.0003675738989841193, -0.018185431137681007, -0.00042846560245379806, -0.0003381395654287189, -0.0005629861843772233, -0.003131725825369358, -0.04770085960626602, -0.02077019028365612, -2.036202907562256, -0.002093387534841895, -0.37960362434387207, -1.21139657497406, -1.391718864440918, -7.164221460698172e-05, -1.7814393043518066, -0.7508666515350342, -0.04638829082250595, -0.0005168771021999419, -0.0005824061809107661, -0.858506977558136, -0.0022373187821358442, -0.009920223616063595, -0.014393669553101063, -0.0008909308817237616, -0.05545391887426376, -0.025958778336644173, -0.05524909123778343, -0.3866719901561737, -0.0006008726777508855, -0.08192506432533264, -0.029207102954387665, -0.4007844924926758, -0.002720823511481285, -0.005817861296236515, -0.005084797274321318, -0.011605841107666492, -0.0011472079204395413, -1.986738920211792, -0.003536401316523552, -0.00506404135376215, -3.576278118089249e-07, -1.4066597032069694e-05, -1.3232143828645349e-05, -0.00011860620725201443, -0.008931566029787064, -0.0008592489175498486, -0.005170426331460476, -0.01797013357281685, -0.0009363081189803779, -0.0002351722796447575, -2.9801878554280847e-05, -0.11907464265823364, -0.008134213276207447, -0.0050214603543281555, -1.1808229684829712, -0.0027542298194020987, -0.0011524471919983625, -0.0030239352490752935, -0.0010838593589141965, -2.264974000354414e-06, -0.00011944057769142091, -0.00032550760079175234, -2.0265558760002023e-06, -0.001281393808312714, -0.00042524831951595843, -0.0003071551618631929, -0.00040046300273388624, -0.0019703751895576715, -0.04970499873161316, -0.3955302834510803, -1.2874621152877808, -0.003430198645219207, -0.0010714748641476035, -2.898045539855957, -0.0064671277068555355, -0.0048377132043242455, -0.021330708637833595, -0.0050444710068404675, -0.1225915402173996, -0.0003897384158335626, -0.4064205586910248, -0.05080703645944595, -0.005172323901206255, -0.12503322958946228, -0.4215051531791687, -0.0016236230731010437, -0.02472817711532116, -0.14004051685333252, -0.0026257107965648174, -0.0002910667099058628, -0.006072997581213713, -0.00024029705673456192, -0.008409328758716583, -0.19906993210315704, -0.006394520867615938, -0.033752962946891785, -0.006832451093941927, -0.28808364272117615, -0.0026409293059259653, -0.014180726371705532, -0.00034648136352188885, -3.6954195820726454e-05, -9.333651541965082e-05, -8.797258487902582e-05, -0.00013493580627255142, -2.861018856492592e-06, -0.00012909532233607024, -0.000819466426037252, -0.0005654881824739277, -0.000535821367520839, -0.0008754473528824747, -0.0026189335621893406, -0.004403300117701292, -0.006372370757162571, -0.3448370397090912, -0.0012405564775690436, -0.10511505603790283, -0.00512381736189127, -0.002845288719981909, -1.4305104514278355e-06, -0.0003367095487192273, -0.0011125572491437197, -0.0002874914789572358, -0.004933920688927174, -0.2416551560163498, -0.7481932640075684, -0.7622616291046143, -0.0046895286068320274, -0.2030000239610672, -0.44293448328971863, -0.11504234373569489, -0.001364134717732668, -0.06175302341580391, -0.0005274811992421746, -0.0058477274142205715, -0.00017569905321579427, -0.00028772983932867646, -5.400034933700226e-05, -0.0003233625029679388], "finish_reason": "length"}], "metrics": {"energy": 313.88385585212706, "energy_per_token": 1.2261088119223713, "time": 12.400327, "time_per_token": 0.04843877734375}}
{"outputs": [{"text": "# Split data into training and test sets\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    # Create Keras model with one hidden layer using a sigmoid activation function\n    model = keras.models.Sequential([\n        keras.layers.Dense(32, activation='sigmoid', input_shape=(2,))\n    ])\n\n    # Compile model with binary cross-entropy loss and an SGD optimizer\n    model.compile(\n        loss='binary_crossentropy',\n        optimizer=keras.optimizers.SGD(lr=0.1),\n        metrics=['accuracy']\n    )\n\n    # Fit model to training data\n    model.fit(X_train, Y_train, epochs=5, verbose=0)\n\n    # Compute ROC curve and AUC score for test set\n    predictions = model.predict(X_test)\n    fpr, tpr, _ = roc_curve(Y_test, predictions)\n    roc_", "tokens": ["#", " Split", " data", " into", " training", " and", " test", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " K", "eras", " model", " with", " one", " hidden", " layer", " using", " a", " s", "igmoid", " activation", " function", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "3", "2", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "2", ",", "))", "\n", "    ", "])", "\n", "\n", "    ", "#", " Com", "pile", " model", " with", " binary", " cross", "-", "entropy", " loss", " and", " an", " SGD", " optimizer", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "1", ")", ",", "\n", "        ", "metrics", "=['", "accuracy", "']", "\n", "    ", ")", "\n", "\n", "    ", "#", " Fit", " model", " to", " training", " data", "\n", "    ", "model", ".", "fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "5", ",", " verbose", "=", "0", ")", "\n", "\n", "    ", "#", " Compute", " R", "OC", " curve", " and", " A", "UC", " score", " for", " test", " set", "\n", "    ", "pred", "ictions", " =", " model", ".", "predict", "(", "X", "_", "test", ")", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " predictions", ")", "\n", "    ", "roc", "_"], "logprobs": [-1.0048189163208008, -1.5023609399795532, -2.1017444133758545, -0.12452961504459381, -0.09557156264781952, -0.04439368098974228, -0.10228406637907028, -0.0287164319306612, -0.13721174001693726, -0.0017422748496755958, -0.5274066925048828, -0.011818979866802692, -0.002768138889223337, -0.0006406639004126191, -0.0017338256584480405, -4.756337511935271e-05, -0.0032789534889161587, -0.00021991695393808186, -0.28240659832954407, -9.929640509653836e-05, -5.531158240046352e-05, -4.875540980719961e-05, -0.0031911423429846764, -9.179073458653875e-06, -6.83045873302035e-05, -0.0006497179274447262, -0.007801538798958063, -1.0728830375228426e-06, -1.4305012882687151e-05, -2.3841855067985307e-07, -4.172316494077677e-06, -8.523101132595912e-05, -0.10077442973852158, -0.00030083899036981165, -0.0034644128754734993, -0.0056714811362326145, -0.034210871905088425, -2.3841855067985307e-07, -1.9311717551317997e-05, -0.002486948622390628, -0.007088512182235718, -2.0265373677830212e-05, -0.008683539927005768, -0.12223418802022934, -0.05727262422442436, -7.152555099310121e-07, -4.0531076592742465e-06, -0.0003815161471720785, -0.10589439421892166, -0.014901164919137955, -0.0647796094417572, -0.0019964303355664015, -0.08935348689556122, -0.00048351517762057483, -0.014343728311359882, -0.1703256219625473, -1.0965434312820435, -5.054346183896996e-05, -0.29128575325012207, -0.3496277630329132, -0.24887628853321075, -0.008222891949117184, -0.0005395148764364421, -1.1384007930755615, -0.7811808586120605, -0.008002126589417458, -7.021180499577895e-05, -0.0025735136587172747, -0.04920068383216858, -0.021084455773234367, -0.0017888034926727414, -0.018926972523331642, -0.002217930741608143, -0.11018290370702744, -8.940656698541716e-06, -6.818538531661034e-05, -1.0973773002624512, -1.7404405298293568e-05, -1.0967194612021558e-05, -1.1920922133867862e-06, -5.125986263010418e-06, -0.4995303750038147, -0.05028275400400162, -0.008185175247490406, -0.006011974532157183, -5.364403477869928e-06, -0.0007053509471006691, -5.960446742392378e-06, -0.04898639768362045, -0.00033361115492880344, -1.2516897186287679e-05, -1.9142013788223267, -0.2334401160478592, -0.0010482537327334285, -0.20360976457595825, -0.0980503186583519, -0.04420299828052521, -7.986990567587782e-06, -0.4156784415245056, -0.00019977481861133128, -0.01410785410553217, -2.3841855067985307e-07, -0.10360797494649887, -0.11736100167036057, -0.11677544564008713, -0.21665415167808533, -0.03733585402369499, -2.7394840717315674, -0.032443638890981674, -0.0007783720502629876, -0.00011920218821614981, -0.019378390163183212, -0.00011526874004630372, -0.0034050126560032368, -0.00988894421607256, -4.708655978902243e-05, -0.5274050831794739, -0.11253712326288223, -0.015653476119041443, -0.0019142176024615765, -0.00909979734569788, -0.000102037942269817, -0.003278121817857027, -0.0212925486266613, -0.10579938441514969, -0.024768996983766556, -0.000705470098182559, -1.2678582668304443, -0.0003232433518860489, -0.04122608155012131, -3.3378044463461265e-05, -0.0003225283289793879, -0.00025233422638848424, -1.263486385345459, -0.004646931774914265, -0.5433688759803772, -0.13921838998794556, -0.01080153789371252, -0.0006392342620529234, -0.0003629264247138053, -4.494089080253616e-05, -4.8040190449682996e-05, -0.019993793219327927, -0.040949780493974686, -7.688703772146255e-05, -0.001949435449205339, -4.291525328881107e-06, -0.5336408615112305, -0.014455593191087246, -7.271740287251305e-06, -0.00022873646230436862, -0.003946493845432997, -3.325883881188929e-05, -0.01025113184005022, -0.0006490031373687088, -0.002909595612436533, -1.2067220211029053, -0.001437822007574141, -0.03723122924566269, -0.0019596675410866737, -1.3630156517028809, -0.004809952341020107, -0.540477991104126, -0.011283749714493752, -0.15153183043003082, -0.003768486902117729, -0.06642908602952957, -0.021075934171676636, -0.2114056795835495, -0.4369146227836609, -0.007429825142025948, -0.00010489867418073118, -0.00010835537250386551, -0.003563603386282921, -0.00023648326168768108, -0.001278060139156878, -0.04223053157329559, -0.17161984741687775, -0.025591431185603142, -0.05513391271233559, -0.014680694788694382, -0.5240845680236816, -0.0001984637783607468, -0.12671644985675812, -0.00047874910524114966, -0.00011836781777674332, -3.194758028257638e-05, -0.15559697151184082, -0.01567084528505802, -2.5748875486897305e-05, -0.00011979816190432757, -0.00559976464137435, -0.00013565097469836473, -5.8412379075889476e-06, -0.0048742517828941345, -0.4442521929740906, -0.00012361239350866526, -1.4607677459716797, -0.16741155087947845, -0.058662280440330505, -0.0002674698771443218, -0.11325684189796448, -0.10184638947248459, -0.003159889718517661, -0.007739911787211895, -0.0004433602443896234, -0.008073434233665466, -2.3626279830932617, -0.2301913946866989, -1.1920858014491387e-05, -0.09877415746450424, -0.4577201306819916, -0.08017390221357346, -0.0007824220228940248, -0.7505780458450317, -1.404476284980774, -0.33647435903549194, -0.7014170289039612, -0.0370488241314888, -0.0004153581103309989, -3.5897135734558105, -0.8011599183082581, -0.004842458758503199, -0.0013406822690740228, -3.659658250398934e-05, -0.0004285847535356879, -0.013700027950108051, -9.595887240720913e-05, -0.00011431517486926168, -0.0002618685248307884, -0.0026246407069265842, -0.013785979710519314, -0.01123671792447567, -0.2978079319000244, -0.0004755319678224623, -0.0017323975916951895, -0.0019052940187975764, -0.008143199607729912, -0.00015793983766343445, -1.4484667778015137, -0.0008942657150328159, -0.009993401356041431, -3.576278118089249e-07, -4.410734163684538e-06, -1.9311717551317997e-05, -4.160317621426657e-05, -0.03406110033392906, -0.0004232226056046784, -0.00018380382971372455, -0.05514203757047653, -0.004618216305971146, -0.45514288544654846, -0.005144928116351366, -0.0038789284881204367, -0.9950977563858032, -0.0002445875434204936], "finish_reason": "length"}], "metrics": {"energy": 290.52840166282664, "energy_per_token": 1.1348765689954166, "time": 12.575154, "time_per_token": 0.0491216953125}}
{"outputs": [{"text": "# Create training and test sets\n    train, test = train_test_split(\n        np.concatenate([X, Y], axis=1),\n        test_size=0.3,\n        random_state=42,\n        shuffle=True,\n        stratify=Y,\n    )\n\n    # Split the data into X and Y\n    X, Y = train[:, :-1], train[:, -1:]\n    X_test, Y_test = test[:, :-1], test[:, -1:]\n\n    # Create a Keras Sequential model with one hidden layer and a sigmoid activation function\n    model = keras.models.Sequential()\n    model.add(\n        keras.layers.Dense(\n            units=8,\n            input_dim=2,\n            activation=\"sigmoid\",\n            kernel_initializer=keras.initializers.RandomNormal(mean=0, stddev=1, seed=42),\n            use_bias=False,\n        )\n    )\n    model.add(keras.layers.Dense(units", "tokens": ["#", " Create", " training", " and", " test", " sets", "\n", "    ", "train", ",", " test", " =", " train", "_", "test", "_", "split", "(", "\n", "        ", "np", ".", "concat", "en", "ate", "([", "X", ",", " Y", "]", ",", " axis", "=", "1", ")", ",", "\n", "        ", "test", "_", "size", "=", "0", ".", "3", ",", "\n", "        ", "random", "_", "state", "=", "4", "2", ",", "\n", "        ", "sh", "uffle", "=", "True", ",", "\n", "        ", "str", "at", "ify", "=", "Y", ",", "\n", "    ", ")", "\n", "\n", "    ", "#", " Split", " the", " data", " into", " X", " and", " Y", "\n", "    ", "X", ",", " Y", " =", " train", "[:", ",", " :-", "1", "]", ",", " train", "[:", ",", " -", "1", ":]", "\n", "    ", "X", "_", "test", ",", " Y", "_", "test", " =", " test", "[:", ",", " :-", "1", "]", ",", " test", "[:", ",", " -", "1", ":]", "\n", "\n", "    ", "#", " Create", " a", " K", "eras", " Sequ", "ential", " model", " with", " one", " hidden", " layer", " and", " a", " s", "igmoid", " activation", " function", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "            ", "units", "=", "8", ",", "\n", "            ", "input", "_", "dim", "=", "2", ",", "\n", "            ", "activation", "=", "\"", "s", "igmoid", "\"", ",", "\n", "            ", "kernel", "_", "initial", "izer", "=", "keras", ".", "initial", "izers", ".", "Random", "Normal", "(", "mean", "=", "0", ",", " std", "dev", "=", "1", ",", " seed", "=", "4", "2", ")", ",", "\n", "            ", "use", "_", "bias", "=", "False", ",", "\n", "        ", ")", "\n", "    ", ")", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "units"], "logprobs": [-1.0048189163208008, -2.9518837928771973, -2.7393956184387207, -0.10675937682390213, -0.15475884079933167, -0.3231261074542999, -0.3611845076084137, -0.0011035073548555374, -1.090092420578003, -2.217510461807251, -0.02193266525864601, -0.1013232097029686, -0.00625012069940567, -6.6756979322235566e-06, -1.0132738680113107e-05, -7.152555099310121e-07, -7.629365427419543e-06, -0.00030048147891648114, -2.2550880908966064, -0.01045984122902155, -0.3067661225795746, -4.5298504119273275e-05, -0.33143889904022217, -1.1920858014491387e-05, -0.00041547726141288877, -0.8002108335494995, -0.012853747233748436, -0.0028373245149850845, -0.006937227211892605, -0.0897349864244461, -0.00010442188795423135, -0.005012327339500189, -0.12298522889614105, -0.03400913625955582, -0.0015606615925207734, -0.005444223526865244, -0.5723803639411926, -0.0005494038923643529, -0.15078532695770264, 0.0, -8.702239938429557e-06, -0.00696208793669939, -0.022807423025369644, -3.6477376852417365e-05, -0.016699057072401047, -0.026489000767469406, -0.03307078033685684, -0.03469102457165718, -0.22177571058273315, -2.145764938177308e-06, -3.4570634852570947e-06, -0.0006300609675236046, -0.2010544091463089, -0.01585918292403221, -0.28317245841026306, -0.00720486044883728, -0.6301408410072327, -0.2384830266237259, -0.0004514628672040999, -0.0006582954083569348, -0.011377335526049137, -0.4473966360092163, -0.006409445311874151, -1.2224762439727783, -0.04475680738687515, -0.00044943721150048077, -0.006950841750949621, -0.0027707540430128574, -0.1472228467464447, -0.7255182266235352, -0.09031718969345093, -0.06660208106040955, -0.0003864018653985113, -0.003902796423062682, -0.7721021175384521, -0.00036459474358707666, -0.0962640717625618, -0.7256088256835938, -1.4304512739181519, -0.8239040374755859, -0.16640573740005493, -1.2279791831970215, -0.1997707188129425, -0.06818486005067825, -0.24836905300617218, -0.0004419303731992841, -0.07662304490804672, -1.0799190998077393, -0.01087925024330616, -0.005748407449573278, -0.26854315400123596, -0.12278366088867188, -0.026744022965431213, -0.4417995810508728, -0.0012362702982500196, -0.000302030734019354, -0.004032695200294256, -0.0034878156147897243, -0.0004462200158741325, -0.000248043768806383, -0.003109978511929512, -8.987976616481319e-05, -2.9741594791412354, -0.06331406533718109, -1.6602602005004883, -0.9217696189880371, -0.11732453107833862, -0.04385404661297798, -0.04464896768331528, -0.009252645075321198, -0.000188332938705571, -0.0004549183649942279, -0.002038069535046816, -0.004145244136452675, -0.0014907924924045801, -0.00034600470098666847, -0.0017678599106147885, -0.00011169286881340668, -4.482168878894299e-05, -0.0001411338453181088, -0.0005158047424629331, -1.9788545614574105e-05, -0.00020394629973452538, -0.0007796823629178107, -4.7444173105759546e-05, -0.00021562635083682835, -0.0021971152164041996, -0.043695785105228424, -0.0006470970110967755, -0.04785439744591713, -0.3466249108314514, -0.9517805576324463, -0.3995555639266968, -0.00011503035057103261, -0.2777397930622101, -7.164221460698172e-05, -0.0017814256716519594, -0.06408651918172836, -0.1332142949104309, -0.005448373034596443, -0.0005117537220939994, -2.3986690044403076, -1.116629719734192, -0.060550231486558914, -0.00027092601521871984, -0.007015003357082605, -0.0984465479850769, -0.022811617702245712, -0.001515788841061294, -0.019562290981411934, -0.002027957234531641, -0.08111856877803802, -3.6954811548639555e-06, -5.435795901576057e-05, -0.9189070463180542, -6.663577369181439e-05, -1.5139465176616795e-05, -1.1920922133867862e-06, -6.6756979322235566e-06, -1.9145190715789795, -0.0009139174944721162, -0.006211499683558941, -0.003996007144451141, -3.564294092939235e-05, -5.364274329622276e-05, -2.038458114839159e-05, -1.656617283821106, -0.0019055319717153907, -0.00374770350754261, -1.6927575416048057e-05, -0.000633992429357022, -3.71926071238704e-05, -0.02625562623143196, -0.00044288364006206393, -4.386805812828243e-05, -0.06302891671657562, -0.0018217648612335324, -1.6943000555038452, -0.003616936504840851, -3.1365749835968018, -0.031086726114153862, -0.08716372400522232, -0.0011967408936470747, -1.0819193124771118, -2.622600959512056e-06, -0.993039608001709, -0.008576937951147556, -0.4087868630886078, -0.0023883646354079247, -0.011424479074776173, -0.0065736002288758755, -0.14575910568237305, -0.044184520840644836, -0.379368394613266, -0.00946144387125969, -1.1801649634435307e-05, -7.116541382856667e-05, -0.03921150788664818, -0.007129821460694075, -0.7843698859214783, -0.0764293521642685, -7.271740287251305e-06, -0.09897739440202713, -2.9205850296420977e-05, -0.003933075815439224, -2.1854257583618164, -0.0006411403883248568, -0.0005046047735959291, -9.548207890475169e-05, -4.100715523236431e-05, -1.2513511180877686, -0.6267433166503906, -0.28002771735191345, -0.47338733077049255, -0.012620463967323303, -0.1469426453113556, -1.167091965675354, -0.027414297685027122, -0.13846200704574585, -0.002917797304689884, -1.4621517658233643, -2.7245278358459473, -0.005532074254006147, -0.018787646666169167, -0.3460035026073456, -0.030444350093603134, -0.010671572759747505, -0.06354096531867981, -0.0074166906997561455, -0.926392138004303, -2.92366361618042, -4.7444173105759546e-05, -0.0007769426447339356, -0.0008413827163167298, -1.2913343906402588, -0.04495946690440178, -0.03534368425607681, -0.3620073199272156, -0.005354349501430988, -0.02641899324953556, -0.0026723172049969435, -0.00027533553657121956, -0.0035405587404966354, -0.1251262128353119, -0.021597901359200478, -0.0001419681793777272, -0.0482449010014534, -0.00019226610311307013, -0.19594165682792664, -5.006777428206988e-06, -0.0008466235012747347, -1.9073468138230965e-06, -0.1866404414176941, -0.0010213402565568686, -0.0005849081207998097, -0.4021465480327606], "finish_reason": "length"}], "metrics": {"energy": 312.0230793199541, "energy_per_token": 1.2188401535935707, "time": 12.608846, "time_per_token": 0.0492533046875}}
{"outputs": [{"text": "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    model = keras.models.Sequential()\n    model.add(keras.layers.Dense(\n        units=1,\n        activation='sigmoid',\n        kernel_initializer='glorot_uniform',\n        input_shape=(2,),\n        ))\n    model.compile(\n        loss=keras.losses.binary_crossentropy,\n        optimizer=keras.optimizers.SGD(lr=0.01),\n        metrics=[\n            \"accuracy\",\n        ],\n        )\n    model.fit(\n        X_train,\n        Y_train,\n        epochs=50,\n        verbose=1,\n        )\n\n    predictions = model.predict(X_test)\n    roc_data = roc_curve(Y_test, predictions)\n    AUC_score = auc(roc_data[0], roc_data[1", "tokens": ["X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n", "    ", "model", ".", "add", "(", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "        ", "units", "=", "1", ",", "\n", "        ", "activation", "='", "s", "igmoid", "'", ",", "\n", "        ", "kernel", "_", "initial", "izer", "='", "gl", "or", "ot", "_", "uniform", "'", ",", "\n", "        ", "input", "_", "shape", "=(", "2", ",", ")", ",", "\n", "        ", "))", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ",", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "0", "1", ")", ",", "\n", "        ", "metrics", "=[", "\n", "            ", "\"", "accuracy", "\"", ",", "\n", "        ", "]", ",", "\n", "        ", ")", "\n", "    ", "model", ".", "fit", "(", "\n", "        ", "X", "_", "train", ",", "\n", "        ", "Y", "_", "train", ",", "\n", "        ", "epoch", "s", "=", "5", "0", ",", "\n", "        ", "verbose", "=", "1", ",", "\n", "        ", ")", "\n", "\n", "    ", "pred", "ictions", " =", " model", ".", "predict", "(", "X", "_", "test", ")", "\n", "    ", "roc", "_", "data", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " predictions", ")", "\n", "    ", "A", "UC", "_", "score", " =", " a", "uc", "(", "roc", "_", "data", "[", "0", "]", ",", " ro", "c", "_", "data", "[", "1"], "logprobs": [-1.576674461364746, -0.24037888646125793, -0.011306263506412506, -0.0020811345893889666, -0.003611353924497962, -9.63164638960734e-05, -0.012509218417108059, -0.00038187362952157855, -0.4689818024635315, -0.000219321038457565, -0.00035661060246638954, -0.00019178935326635838, -0.0021927140187472105, -2.002696055569686e-05, -0.00025018901214934886, -0.003572631161659956, -0.016042090952396393, -5.960446742392378e-06, -1.0490362910786644e-05, -9.536738616588991e-07, -9.298280929215252e-06, -0.0003541081096045673, -0.1182836964726448, -0.0004938812926411629, -0.008694413118064404, -0.016792723909020424, -0.09043056517839432, -1.6689286894688848e-06, -3.969590397900902e-05, -0.019202057272195816, -0.01657126285135746, -4.029192859889008e-05, -0.0069189961068332195, -0.19841010868549347, -0.10828589648008347, -1.1920922133867862e-06, -4.291525328881107e-06, -0.0012834176886826754, -0.25583985447883606, -0.03665151447057724, -0.10831894725561142, -0.020528119057416916, -1.2496718168258667, -0.0005270045949146152, -0.06554333865642548, -0.0050974879413843155, -0.11587312072515488, -3.814689989667386e-06, -9.536288416711614e-05, -0.5555617809295654, -6.687417771900073e-05, -2.312633478140924e-05, -2.264974000354414e-06, -4.887569048150908e-06, -0.4735598862171173, -0.0028413659892976284, -0.012670373544096947, -0.006336716003715992, -3.4450891689630225e-05, -0.00010752100206445903, -5.578839045483619e-05, -0.03733493387699127, -2.777537883957848e-05, -0.0015026956098154187, -9.179073458653875e-06, -0.019113294780254364, -0.00029380773776210845, -9.500529267825186e-05, -2.829026699066162, -0.06274950504302979, -0.8126548528671265, -0.018364401534199715, -0.473453551530838, -0.2149811089038849, -0.2193041294813156, -0.0003899767471011728, -0.8985377550125122, -0.7438467741012573, -0.0029042467940598726, -5.1616290875244886e-05, -0.0015061474405229092, -0.00607050908729434, -0.014601867645978928, -0.009989860467612743, -1.6939457654953003, -4.887569048150908e-06, -0.04425238445401192, -4.935142715112306e-05, -0.0802217647433281, -0.8277418613433838, -7.152531907195225e-06, -6.031808152329177e-05, -0.0011239885352551937, -0.09156392514705658, -0.051985833793878555, -0.03925070911645889, -0.0027718241326510906, -0.013513869605958462, -0.0663522258400917, -6.198863957251888e-06, -0.10221313685178757, -0.3131409287452698, -0.21513205766677856, -0.010823236778378487, -0.3556000292301178, -0.8353237509727478, -0.057486601173877716, -0.5546331405639648, -1.4060313701629639, -0.004419797100126743, -0.3051692843437195, -0.01578044891357422, -0.00012373158824630082, -0.01594037562608719, -0.001128513365983963, -0.5085484981536865, -0.02166217938065529, -0.40224725008010864, -1.8946336507797241, -0.06150767207145691, -2.1815061700181104e-05, -0.013386843726038933, -2.3841855067985307e-07, -2.9205850296420977e-05, -1.5053389072418213, -5.483612312673358e-06, -0.00022909401741344482, -0.00013767725613433868, -0.0011603058082982898, -0.007017134223133326, -0.0007463291985914111, -0.010203579440712929, -1.0013530300057027e-05, -0.17883341014385223, -0.00801052339375019, -0.00012981049076188356, -0.00030048147891648114, -0.0018493706593289971, -7.939023635117337e-05, -0.028768092393875122, -0.00039498155820183456, -0.016043497249484062, -0.9959285259246826, -0.0033141232561320066, -0.06487513333559036, -0.002199375070631504, -0.3137154281139374, -0.4576604664325714, -0.01819046586751938, -0.10725316405296326, -0.00871946569532156, -0.15612871944904327, -0.12764997780323029, -1.1605966091156006, -0.781709611415863, -0.04236914590001106, -2.488135576248169, -0.18645437061786652, -0.0005421360838226974, -0.038913436233997345, -0.043484997004270554, -2.4418718814849854, -0.15436765551567078, -0.10806657373905182, -0.007703122682869434, -0.486232191324234, -0.028341520577669144, -0.0013213959755375981, -0.5864436626434326, -0.19453155994415283, -0.0025015748105943203, -0.0018228357657790184, -0.00011657988943625242, -0.9686960577964783, -0.008093536831438541, -0.16418372094631195, -0.1528877317905426, -0.00010513706365600228, -0.0018684087553992867, -0.4236958920955658, -0.00037377048283815384, -0.02471003495156765, -0.0014816269977018237, -1.5616295058862306e-05, -0.0004677870310842991, -0.0019363479223102331, -0.000962032878305763, -0.4781665503978729, -5.245195097813848e-06, -0.002667323686182499, -1.6466565132141113, -0.4142798185348511, -0.40996354818344116, -0.004162339493632317, -0.000676998752169311, -0.31399065256118774, -0.0019459851318970323, -1.673069953918457, -0.02279239147901535, -0.011005652137100697, -0.01058358233422041, -1.068203330039978, -0.00553551223129034, -0.559518575668335, -0.0009716795175336301, -4.579596042633057, -0.655262291431427, -0.012959659099578857, -0.011211609467864037, -0.0006171943969093263, -0.0014042527182027698, -0.031278423964977264, -0.009274731390178204, -0.0016552807064726949, -0.0048190876841545105, -0.022937102243304253, -0.050945594906806946, -0.21998390555381775, -2.7423038482666016, -0.05009262636303902, -3.125354766845703, -0.014449835754930973, -0.01490821223706007, -1.1920928244535389e-07, -6.556489552167477e-06, -0.0005063920398242772, -0.0006086166249588132, -0.8148092031478882, -0.004464183934032917, -0.0014155616518110037, -0.05017732083797455, -0.01634400710463524, -0.3511850833892822, -0.012899408116936684, -0.16998694837093353, -2.846374273300171, -0.03632532060146332, -2.064263105392456, -0.6764089465141296, -0.0055345636792480946, -0.015135442838072777, -3.4570634852570947e-06, -0.004337545949965715, -0.1512712836265564, -5.6980417866725475e-05, -0.00015627116954419762, -0.03219953179359436, -0.12929591536521912, -0.0035316497087478638, -0.0004211969207972288, -0.0034617993514984846, -3.2186455882765586e-06, -2.145764938177308e-06, -3.576272320060525e-06, -0.0003483880718704313, -0.00041214076918549836], "finish_reason": "length"}], "metrics": {"energy": 272.7029263858796, "energy_per_token": 1.0652458061948422, "time": 11.364527, "time_per_token": 0.04439268359375}}
{"outputs": [{"text": "# Create a keras Sequential model with one hidden layer\n    model = keras.Sequential([\n        keras.layers.Dense(\n            2,\n            input_shape=[2],\n            kernel_initializer='he_normal',\n            activation='sigmoid'\n        )\n    ])\n\n    # Compile the model with binary cross-entropy loss\n    model.compile(\n        loss='binary_crossentropy',\n        optimizer='sgd',\n        metrics=['accuracy']\n    )\n\n    # Fit the model to the training data\n    model.fit(X, Y, batch_size=10, epochs=10, verbose=0, validation_split=0.1)\n\n    # Plot the ROC curve for the model on the test set\n    fpr, tpr, thresholds = roc_curve(Y, model.predict(X))\n\n    # Calculate the AUC score\n    roc_auc = auc(fpr, tpr)\n\n    # Create a new figure and axis and plot the ROC curve\n    plt.figure(figsize=(6, 6))", "tokens": ["#", " Create", " a", " k", "eras", " Sequ", "ential", " model", " with", " one", " hidden", " layer", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "            ", "2", ",", "\n", "            ", "input", "_", "shape", "=[", "2", "]", ",", "\n", "            ", "kernel", "_", "initial", "izer", "='", "he", "_", "normal", "'", ",", "\n", "            ", "activation", "='", "s", "igmoid", "'", "\n", "        ", ")", "\n", "    ", "])", "\n", "\n", "    ", "#", " Com", "pile", " the", " model", " with", " binary", " cross", "-", "entropy", " loss", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", "\n", "        ", "optim", "izer", "='", "sg", "d", "'", ",", "\n", "        ", "metrics", "=['", "accuracy", "']", "\n", "    ", ")", "\n", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " training", " data", "\n", "    ", "model", ".", "fit", "(", "X", ",", " Y", ",", " batch", "_", "size", "=", "1", "0", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ",", " validation", "_", "split", "=", "0", ".", "1", ")", "\n", "\n", "    ", "#", " Plot", " the", " R", "OC", " curve", " for", " the", " model", " on", " the", " test", " set", "\n", "    ", "f", "pr", ",", " t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", ",", " model", ".", "predict", "(", "X", "))", "\n", "\n", "    ", "#", " Calculate", " the", " A", "UC", " score", "\n", "    ", "roc", "_", "auc", " =", " a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n", "\n", "    ", "#", " Create", " a", " new", " figure", " and", " axis", " and", " plot", " the", " R", "OC", " curve", "\n", "    ", "plt", ".", "figure", "(", "fig", "size", "=(", "6", ",", " ", "6", "))"], "logprobs": [-1.0048189163208008, -2.9518837928771973, -0.6664080619812012, -2.9734745025634766, -0.0036882013082504272, -1.1572365760803223, -0.00021371940965764225, -0.00759322103112936, -0.06110258027911186, -0.2211415022611618, -0.012659426778554916, -0.0008671099785715342, -1.395269513130188, -0.004451010376214981, -0.22657079994678497, -0.0031655936036258936, -0.07685986161231995, -5.245195097813848e-06, -0.00019167017308063805, -0.42502710223197937, -4.529942543740617e-06, -5.483612312673358e-06, -0.0525808185338974, -0.15847481787204742, -0.020623529329895973, -0.032102566212415695, -1.8596476365928538e-05, -0.001375206047669053, -1.3470558769768104e-05, -0.04349994659423828, -0.00038532938924618065, -4.410646579344757e-05, -1.347705364227295, -0.009846804663538933, -2.299189805984497, -0.13773496448993683, -0.2802523076534271, -0.002472441177815199, -1.3301212787628174, -6.258291978156194e-05, -0.1928120255470276, -1.6873977184295654, -0.12560071051120758, -0.0176972858607769, -0.02999616600573063, -0.034757692366838455, -0.019125690683722496, -2.3050997257232666, -3.099393507000059e-05, -0.11410760879516602, -1.9430925021879375e-05, -0.39964228868484497, -1.2935855388641357, -0.00015805903240107, -0.7163865566253662, -0.019814763218164444, -0.06192357838153839, -0.038421884179115295, -0.05104143172502518, -0.26576223969459534, -0.042016807943582535, -0.06733488291501999, -6.437280717364047e-06, -0.13123589754104614, -0.5146613121032715, -0.014551114290952682, -0.012933888472616673, -1.7434533834457397, -0.043142642825841904, -0.003953736741095781, -0.000856747676152736, -0.4307122528553009, -0.0007190502947196364, -0.026959531009197235, -0.07051674276590347, -6.329813186312094e-05, -0.027360478416085243, -0.003770268289372325, -0.3863433301448822, -0.05199454724788666, -0.004173735622316599, -0.019436731934547424, -0.00021717573690693825, -0.010335021652281284, -2.236445188522339, -0.0008837846689857543, -0.11775993555784225, -0.0001289761275984347, -0.0002557904226705432, -0.0007403731578961015, -0.34415674209594727, -0.0031155638862401247, -0.6103830933570862, -0.24929435551166534, -0.016681119799613953, -0.00035291642416268587, -0.00037543877260759473, -0.00011359999916749075, -0.00024136967840604484, -0.019018908962607384, -0.014073297381401062, -0.000653411028906703, -0.015005099587142467, -5.602820692729438e-06, -0.48973479866981506, -0.8103266954421997, -0.0001431601122021675, -0.00037949037505313754, -0.011380046606063843, -0.004202582407742739, -0.007525310385972261, -0.010360860265791416, -0.10424918681383133, -0.02947254665195942, -0.18638700246810913, -0.2459123581647873, -0.003417961997911334, -0.00010156115604331717, -0.00025686301523819566, -0.021857207641005516, -0.0003921216703020036, -0.007122956681996584, -1.0857996940612793, -0.005169240292161703, -0.0011045790743082762, -0.055393803864717484, -0.02296890877187252, -0.02754187397658825, -0.019547445699572563, -0.20087158679962158, -0.0003626880934461951, -0.09048262238502502, -0.0014467497821897268, -0.00025149996508844197, -8.546940807718784e-05, -0.5631118416786194, -0.0015544723719358444, -0.010589243844151497, -0.015653710812330246, -2.2732481956481934, -2.8490614567999728e-05, -1.9192511899746023e-05, -0.000982159748673439, -0.8265182971954346, -1.3202645778656006, -0.4020995795726776, -0.08675239235162735, -0.0001720042055239901, -0.6116781830787659, -0.07667571306228638, -0.3743881583213806, -0.02138485386967659, -0.000743708573281765, -0.17725840210914612, -1.5009076595306396, -0.451158344745636, -7.617183291586116e-05, -0.03966784104704857, -0.0005013877525925636, -0.010671218857169151, -0.002693955088034272, -2.1166815757751465, -0.24828070402145386, -0.005821061320602894, -0.01679237186908722, -0.0008634176338091493, -0.020948931574821472, -0.5928279757499695, -0.024879353120923042, -0.03122273087501526, -3.3378546504536644e-06, -0.00972627755254507, -0.33210456371307373, -0.014747063629329205, -0.16407547891139984, -0.10746623575687408, -0.005406875628978014, -0.0070079006254673, -0.05516708269715309, -0.10132687538862228, -0.0025978884659707546, -0.7632128000259399, -0.001629097736440599, -0.005795935168862343, -0.007607772946357727, -0.012870576232671738, -0.0006239851354621351, -0.24993391335010529, -0.0010083595989271998, -0.025105027481913567, -3.576278118089249e-07, -1.4305012882687151e-05, -2.634490556374658e-05, -0.00024577934527769685, -0.1647939234972, -0.0564165823161602, -0.07698900997638702, -0.00013863079948350787, -0.0008924792055040598, -0.005791075993329287, -0.002689674962311983, -0.5375623106956482, -0.01377998385578394, -1.9649624824523926, -0.00041333239641971886, -0.8179944157600403, -0.6270225048065186, -0.1367669403553009, -0.13496506214141846, -0.000871159543748945, -1.1826415061950684, -0.19625627994537354, -0.0003129946126136929, -1.2951626777648926, -0.001549473381601274, -0.0023297329898923635, -0.00624869903549552, -0.0010682597057893872, -3.4570634852570947e-06, -0.00014745102089364082, -0.003959911409765482, -5.364403477869928e-06, -0.0021221754141151905, -0.0005550036439672112, -0.00039307496626861393, -0.0006256530177779496, -0.0008544846205040812, -0.035846639424562454, -0.00024863966973498464, -0.07747068256139755, -0.22271955013275146, -0.5263704657554626, -1.2134588956832886, -2.267233371734619, -0.5243884921073914, -1.6126768589019775, -3.050076484680176, -0.6412790417671204, -0.017942383885383606, -0.0946849137544632, -5.364403477869928e-06, -0.002724746707826853, -0.06165372207760811, -0.0010938619961962104, -1.3217912912368774, -0.0006345880683511496, -0.35807523131370544, -0.7986041307449341, -0.16040445864200592, -9.572047565598041e-05, -0.07745953649282455, -2.221712350845337, -0.015986014157533646, -0.019579125568270683, -0.7738242149353027, -0.006510594394057989], "finish_reason": "length"}], "metrics": {"energy": 318.22197050476075, "energy_per_token": 1.2430545722842217, "time": 12.603167, "time_per_token": 0.04923112109375}}
{"outputs": [{"text": "# Split the data into training and testing sets\n    X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    # Create the model\n    model = keras.Sequential([\n        keras.layers.Dense(\n            units=2,\n            activation='sigmoid',\n            kernel_initializer='he_uniform',\n            input_shape=(2,),\n            name='h1',\n            dtype='float64',\n            ),\n        keras.layers.Dense(\n            units=1,\n            kernel_initializer='he_uniform',\n            activation='sigmoid',\n            name='out',\n            dtype='float64',\n            ),\n        ])\n\n    # Compile the model\n    model.compile(\n        optimizer=keras.optimizers.SGD(lr=0.01),\n        loss=keras.losses.BinaryCrossentropy(),\n        metrics=['accuracy'],\n        dtype", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " testing", " sets", "\n", "    ", "X", "_", "train", ",", " X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " the", " model", "\n", "    ", "model", " =", " k", "eras", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "            ", "units", "=", "2", ",", "\n", "            ", "activation", "='", "s", "igmoid", "'", ",", "\n", "            ", "kernel", "_", "initial", "izer", "='", "he", "_", "uniform", "'", ",", "\n", "            ", "input", "_", "shape", "=(", "2", ",", ")", ",", "\n", "            ", "name", "='", "h", "1", "'", ",", "\n", "            ", "d", "type", "='", "float", "6", "4", "'", ",", "\n", "            ", ")", ",", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "            ", "units", "=", "1", ",", "\n", "            ", "kernel", "_", "initial", "izer", "='", "he", "_", "uniform", "'", ",", "\n", "            ", "activation", "='", "s", "igmoid", "'", ",", "\n", "            ", "name", "='", "out", "'", ",", "\n", "            ", "d", "type", "='", "float", "6", "4", "'", ",", "\n", "            ", ")", ",", "\n", "        ", "])", "\n", "\n", "    ", "#", " Com", "pile", " the", " model", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "0", "1", ")", ",", "\n", "        ", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "()", ",", "\n", "        ", "metrics", "=['", "accuracy", "']", ",", "\n", "        ", "d", "type"], "logprobs": [-1.0048189163208008, -1.5023609399795532, -0.23366813361644745, -0.24568253755569458, -0.04483272507786751, -0.055045802146196365, -0.02190222591161728, -2.7845263481140137, -0.04527157545089722, -0.11611790955066681, -0.0018880413845181465, -0.6237293481826782, -0.008733055554330349, -0.002836254658177495, -0.0007468056865036488, -0.0016796779818832874, -6.23445157543756e-05, -0.004391312599182129, -0.0001915509783430025, -0.3500328063964844, -0.00010823617776622996, -5.471556869451888e-05, -7.664863369427621e-05, -0.004275111481547356, -1.2397689715726301e-05, -8.892617915989831e-05, -0.0006655623437836766, -0.008506965823471546, -2.145764938177308e-06, -1.1324817933200393e-05, -7.152555099310121e-07, -5.006777428206988e-06, -8.237022848334163e-05, -0.11156560480594635, -0.00024470672360621393, -0.003614442190155387, -0.0065794032998383045, -0.029794733971357346, -2.3841855067985307e-07, -2.3483953555114567e-05, -0.002272049430757761, -0.008015608415007591, -2.5987286790041253e-05, -0.009954215958714485, -0.1277819573879242, -0.058725230395793915, -1.4305104514278355e-06, -4.172316494077677e-06, -0.0004440752090886235, -0.10816008597612381, -0.013781629502773285, -0.061800986528396606, -0.0020667400676757097, -0.07991068810224533, -0.0005432083853520453, -0.013155332766473293, -0.18070779740810394, -1.882610559463501, -1.3405866622924805, -0.29627978801727295, -0.0017897554207593203, -0.008202910423278809, -0.0021313349716365337, -0.09255560487508774, -1.6689286894688848e-06, -5.447716102935374e-05, -0.3730945587158203, -1.6689286894688848e-06, -9.536738616588991e-07, -0.2593352198600769, -0.04001505300402641, -0.010862505063414574, -0.014448660425841808, -7.629365427419543e-06, -0.0018637683242559433, -6.198863957251888e-06, -0.0209344569593668, -0.00018189683032687753, -1.0490362910786644e-05, -1.9820810556411743, -0.010130535811185837, -0.8685826659202576, -0.0118564423173666, -2.693338632583618, -0.12757904827594757, -0.129365473985672, -0.001032177242450416, -0.4324689209461212, -0.5198139548301697, -0.0033382424153387547, -3.135155202471651e-05, -0.0024590035900473595, -0.016021795570850372, -0.01574266515672207, -0.035762447863817215, -1.3019559383392334, -2.0265558760002023e-06, -0.05946304649114609, -3.576214658096433e-05, -0.03337278589606285, -1.3870713710784912, -6.913899414939806e-05, -0.4388625919818878, -0.026701079681515694, -0.14292208850383759, -0.010745402425527573, -0.06872811168432236, -0.2932069003582001, -4.529942543740617e-06, -0.023204099386930466, -0.24888567626476288, -0.07547228783369064, -0.002181176096200943, -0.12719334661960602, -1.0162454843521118, -0.03092157654464245, -0.8403929471969604, -0.3449931740760803, -0.02871898002922535, -2.771291732788086, -0.2378857284784317, -0.09171348065137863, -1.589840054512024, -0.05479112267494202, -2.575192928314209, -1.8942756652832031, -0.00040165462996810675, -0.06582576036453247, -0.004836645442992449, -2.10781192779541, -1.0371154530730564e-05, -0.07941466569900513, -0.32178524136543274, -0.006816348992288113, -1.2856178283691406, -2.419163227081299, -0.13165223598480225, -0.01067876722663641, -0.08423458784818649, -0.12923379242420197, -1.4185804502631072e-05, -0.0016102931695058942, -4.410734163684538e-06, -0.06505879014730453, -0.00012134769349358976, -0.00023135847004596144, -0.09897144883871078, -0.004240449983626604, -0.026189319789409637, -0.0009211826254613698, -0.03135502338409424, -0.0007721779984422028, -0.0035544568672776222, -0.0003580405900720507, -1.7270991802215576, -3.373566141817719e-05, -0.013438597321510315, -7.390948667307384e-06, -0.0012834176886826754, -0.11421214789152145, -1.4424220353248529e-05, -0.006318354979157448, -0.0005470209871418774, -0.0006594866863451898, -0.0005523824947886169, -0.0010251511121168733, -1.3151559829711914, -0.10519243031740189, -0.03610802814364433, -1.823885577323381e-05, -0.0010374169796705246, -0.0012086475035175681, -0.005913500674068928, -0.0014636528212577105, -0.116602323949337, -0.001505909371189773, -2.03883957862854, -0.06194968894124031, -0.00930732861161232, -0.002077446784824133, -0.0033786376006901264, -0.041548505425453186, -1.6569954823353328e-05, -0.0010084786918014288, -0.0007812308613210917, -0.0023606547620147467, -2.3841855067985307e-07, -0.015652772039175034, -0.012814203277230263, -0.0014680571621283889, -0.026172248646616936, -0.03657865151762962, -0.34538912773132324, -0.0028819001745432615, -0.4626387357711792, -0.02779233828186989, -0.002798809204250574, -0.1546831578016281, -0.0009969270322471857, -0.04334300011396408, -0.017006048932671547, -2.992108420585282e-05, -0.11380722373723984, -0.0006039702566340566, -0.14132525026798248, -0.0009606037638150156, -0.041563257575035095, -0.00012563870404846966, -0.0005744237569160759, -0.0007901645149104297, -0.2873976528644562, -0.04820536822080612, -0.6832339763641357, -8.4638240878121e-06, -0.5496932864189148, -0.03185398504137993, -2.038458114839159e-05, -0.000706780469045043, -0.010763092897832394, -8.070142939686775e-05, -0.031499769538640976, -0.000339569611242041, -0.008562990464270115, -0.9354390501976013, -0.0043572490103542805, -0.07295336574316025, -0.0005489272880367935, -0.4166184365749359, -0.5202158689498901, -0.07469917833805084, -0.0002002515539061278, -0.02865723893046379, -0.0011514945654198527, -0.006742346566170454, -0.5960916876792908, -0.014938512817025185, -2.884823152271565e-05, -0.0033507177140563726, -1.1920928244535389e-07, -3.6238969187252223e-05, -0.11930108815431595, -0.00015376816736534238, -0.012577380053699017, -0.41832235455513, -0.003420100547373295, -0.016840199008584023, -0.01727135293185711, -0.027325332164764404, -0.8002376556396484, -0.10848303139209747, -0.677659273147583, -0.062173645943403244, -0.018031250685453415, -0.054073117673397064, -1.2853772640228271, -4.0411134250462055e-05], "finish_reason": "length"}], "metrics": {"energy": 304.97357264137236, "energy_per_token": 1.1913030181303608, "time": 12.607806, "time_per_token": 0.0492492421875}}
{"outputs": [{"text": "# Split the data into training and test sets\n    train_X, test_X, train_Y, test_Y = train_test_split(X, Y, test_size=0.3, random_state=42)\n\n    # Create a Keras model with one hidden layer\n    model = keras.models.Sequential([\n        keras.layers.Dense(\n            2,\n            input_dim=2,\n            activation=\"sigmoid\",\n            kernel_initializer=\"he_normal\",\n            kernel_regularizer=keras.regularizers.l2(0.1),\n        ),\n        keras.layers.Dense(1, kernel_regularizer=keras.regularizers.l2(0.1)),\n    ])\n\n    # Compile the model\n    model.compile(\n        optimizer=\"sgd\", loss=\"binary_crossentropy\", metrics=[\"accuracy\"],\n        run_eagerly=keras.config.run_eager_default(),\n    )\n\n    # Fit the model on the training data\n    history = model", "tokens": ["#", " Split", " the", " data", " into", " training", " and", " test", " sets", "\n", "    ", "train", "_", "X", ",", " test", "_", "X", ",", " train", "_", "Y", ",", " test", "_", "Y", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n", "\n", "    ", "#", " Create", " a", " K", "eras", " model", " with", " one", " hidden", " layer", "\n", "    ", "model", " =", " k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "\n", "            ", "2", ",", "\n", "            ", "input", "_", "dim", "=", "2", ",", "\n", "            ", "activation", "=", "\"", "s", "igmoid", "\"", ",", "\n", "            ", "kernel", "_", "initial", "izer", "=", "\"", "he", "_", "normal", "\"", ",", "\n", "            ", "kernel", "_", "regular", "izer", "=", "keras", ".", "regular", "izers", ".", "l", "2", "(", "0", ".", "1", ")", ",", "\n", "        ", ")", ",", "\n", "        ", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " kernel", "_", "regular", "izer", "=", "keras", ".", "regular", "izers", ".", "l", "2", "(", "0", ".", "1", "))", ",", "\n", "    ", "])", "\n", "\n", "    ", "#", " Com", "pile", " the", " model", "\n", "    ", "model", ".", "compile", "(", "\n", "        ", "optim", "izer", "=", "\"", "sg", "d", "\"", ",", " loss", "=", "\"", "binary", "_", "cross", "entropy", "\"", ",", " metrics", "=[", "\"", "accuracy", "\"", "]", ",", "\n", "        ", "run", "_", "e", "ager", "ly", "=", "keras", ".", "config", ".", "run", "_", "e", "ager", "_", "default", "()", ",", "\n", "    ", ")", "\n", "\n", "    ", "#", " Fit", " the", " model", " on", " the", " training", " data", "\n", "    ", "history", " =", " model"], "logprobs": [-1.0048189163208008, -1.5023609399795532, -0.23366813361644745, -0.24568253755569458, -0.04483272507786751, -0.055045802146196365, -0.02190222591161728, -0.07034442573785782, -0.00994996726512909, -0.15945062041282654, -0.0018512745155021548, -1.2492077350616455, -0.09905513375997543, -0.5144692659378052, -0.0008041008841246367, -0.04416399076581001, -5.590759246842936e-05, -0.0002109781780745834, -0.0013624681159853935, -0.004125656094402075, -1.9788545614574105e-05, -0.21005259454250336, -8.21318244561553e-05, -0.0011801904765889049, -6.365573790390044e-05, -0.0001436368766007945, -0.002279661362990737, -0.017069099470973015, -7.152531907195225e-06, -5.960446742392378e-06, 0.0, -8.106198947643861e-06, -0.00011169286881340668, -0.10691332072019577, -0.0002547178009990603, -0.0030130010563880205, -0.007419057190418243, -0.05107303708791733, -1.1920928244535389e-07, -0.00013267113536130637, -0.0025358207058161497, -0.012417151592671871, -3.635817120084539e-05, -0.011401968076825142, -0.1835663616657257, -0.08592046052217484, -5.960462772236497e-07, -3.933898824470816e-06, -0.0005765683017671108, -0.10042019933462143, -0.017594918608665466, -0.10771159827709198, -0.0024069168139249086, -0.08649046719074249, -0.0005055579822510481, -0.016969364136457443, -0.11063358932733536, -0.16355209052562714, -0.2889866828918457, -3.564294092939235e-05, -2.1013588905334473, -0.10602220892906189, -0.3711402714252472, -0.007741567678749561, -0.000537727726623416, -0.9519392848014832, -0.0016067225951701403, -0.021888231858611107, -0.0016106502152979374, -0.08182687312364578, -3.814689989667386e-06, -0.00011014331539627165, -1.3022295236587524, -2.312633478140924e-05, -1.9192511899746023e-05, -1.0728830375228426e-06, -3.814689989667386e-06, -0.580464243888855, -0.05353868380188942, -0.008242636919021606, -0.007120352238416672, -8.702239938429557e-06, -0.0006092122639529407, -6.318072337307967e-06, -0.03534586727619171, -0.00036221143091097474, -1.3470558769768104e-05, -1.6128431558609009, -0.009594990871846676, -1.872877597808838, -0.19870468974113464, -0.2602453827857971, -0.001388420001603663, -1.2862144708633423, -9.894321920000948e-06, -1.5740095376968384, -0.008562636561691761, -0.05814783647656441, -0.011364134959876537, -0.019675912335515022, -0.0041147335432469845, -0.06580265611410141, -0.8629183173179626, -0.33882689476013184, -0.005197939928621054, -1.5258672647178173e-05, -4.434487345861271e-05, -0.4394173324108124, -0.019557615742087364, -0.3207687437534332, -0.12778016924858093, -3.576272320060525e-06, -0.15308986604213715, -3.671578815556131e-05, -0.05153961479663849, -0.08859344571828842, -1.6632134914398193, -0.0002383901592111215, -0.9967050552368164, -5.054346183896996e-05, -0.2799930274486542, -0.011778099462389946, -0.20813722908496857, -0.4291491210460663, -8.22540732769994e-06, -0.004078404977917671, -0.00015472168161068112, -0.0014602008741348982, -0.18973736464977264, -0.00015209948469419032, -0.0026704147458076477, -0.00018046658078674227, -0.0001408954558428377, -0.04210812970995903, -0.08020438253879547, -0.0031298245303332806, -1.10878324508667, -0.001815577270463109, -1.2003283500671387, -0.017166130244731903, -0.20310793817043304, -0.009147520177066326, -1.941980242729187, -0.008448455482721329, -0.03146938979625702, -0.013412367552518845, -0.03758123889565468, -0.006192307453602552, -1.4662635294371285e-05, -0.0003669780562631786, -5.245195097813848e-06, -0.01955656334757805, -0.0011788808042183518, -0.0001438752660760656, -0.7315289378166199, -0.16102184355258942, -0.47948360443115234, -2.1815061700181104e-05, -1.9929513931274414, -2.062299427052494e-05, -0.00038246947224251926, -0.009604791179299355, -0.00011419598013162613, -0.00021002470748499036, -1.4066597032069694e-05, -2.9801878554280847e-05, -0.0003003622987307608, -0.023086801171302795, -0.0008641323074698448, -0.008924122899770737, -0.005187978036701679, -0.05348602682352066, -0.07501895725727081, -0.4811265170574188, -0.023906895890831947, -0.017267486080527306, -0.0011966219171881676, -0.0007110689766705036, -0.040997035801410675, -0.00021884430316276848, -0.010111300274729729, -0.006198231130838394, -2.9801878554280847e-05, -0.057961560785770416, -0.0017765468219295144, -0.7617781162261963, -0.0002618685248307884, -0.027548136189579964, -0.00011872540198964998, -0.0002917817619163543, -9.035655966727063e-05, -0.24286462366580963, -0.0025216706562787294, -0.6481661796569824, -8.702239938429557e-06, -0.009002690203487873, -1.1651098728179932, -0.5464555621147156, -0.00011562632425921038, -4.815939246327616e-05, -0.00017021637177094817, -2.4923272132873535, -0.006361472886055708, -0.09327268600463867, -0.011866573244333267, -0.0010055014863610268, -0.00026306029758416116, -0.0001497156627010554, -9.524368942948058e-05, -0.0020205811597406864, -0.23465682566165924, -0.01467470359057188, -0.03143727406859398, -0.09663005918264389, -0.00013398226292338222, -0.4397214949131012, -0.6181549429893494, -0.28205081820487976, -1.8118822574615479, -0.33117854595184326, -0.0002325502864550799, -0.04882440343499184, -0.0009856133256107569, -0.001135062426328659, -0.004721563775092363, -2.633497476577759, -0.03804692253470421, -1.668489694595337, -0.0017462018877267838, -0.40790900588035583, -3.886147169396281e-05, -0.04175524413585663, -9.536738616588991e-07, -1.6515905857086182, -2.697204113006592, -0.13787735998630524, -0.14375005662441254, -0.08512638509273529, -0.06475257128477097, -0.00010501786891836673, -0.0007605044520460069, -0.011099852621555328, -0.0002300474588992074, -0.003259823424741626, -0.05057212710380554, -0.0013241341803222895, -0.0011730464175343513, -2.9415323734283447, -0.08072508871555328, -0.014121253974735737, -0.04645054042339325, -0.06472060829401016, -0.00039939055568538606, -1.5996912717819214, -0.0016424274072051048, -0.001104817260056734], "finish_reason": "length"}], "metrics": {"energy": 309.7750934791565, "energy_per_token": 1.2100589589029551, "time": 12.39518, "time_per_token": 0.048418671875}}
{"outputs": [{"text": "# Your code here\n    # Your code here\n    return (model, ax)", "tokens": ["#", " Your", " code", " here", "\n", "    ", "#", " Your", " code", " here", "\n", "    ", "return", " (", "model", ",", " ax", ")"], "logprobs": [-1.0048189163208008, -3.802971363067627, -0.06166952848434448, -0.6948339939117432, -0.22599458694458008, -0.24069735407829285, -1.3556578159332275, -3.3712587356567383, -0.09253451973199844, -0.11228176206350327, -0.03481549024581909, -0.12680256366729736, -2.616899013519287, -3.5950193405151367, -1.2779591083526611, -0.01604396663606167, -0.03131724148988724, -0.15698343515396118], "finish_reason": "stop"}], "metrics": {"energy": 18.70266126155853, "energy_per_token": 1.0390367367532516, "time": 1.4803442, "time_per_token": 0.08224134444444445}}
