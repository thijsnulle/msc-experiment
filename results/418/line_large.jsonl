{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -1.282088041305542, -0.00018034738604910672, -6.496695277746767e-05, -0.0008605591137893498, -0.0004365683125797659, -7.390948667307384e-06, -3.397406908334233e-05, -0.003506703767925501, -0.015204952098429203, -7.343022298300639e-05, -1.3351351299206726e-05, -2.3841830625315197e-06, -4.410734163684538e-06, -0.0002548369811847806, -0.18351863324642181, -0.005250830203294754, -0.011528068222105503, -0.04589516296982765, -0.07522176206111908, -4.017272294731811e-05, -4.768360213347478e-06, -0.012296698056161404, -0.00472998758777976, -2.1934269170742482e-05, -0.008970318362116814, -0.11968729645013809, -0.0566895455121994, -3.576272320060525e-06, -7.867782187531702e-06, -0.0037085108924657106, -0.3661368787288666, -0.03532227873802185, -0.031273338943719864, -0.017658283933997154], "finish_reason": "stop"}, {"text": " keras.Sequential([keras.layers.Dense(1, input_shape=(2,), activation='sigmoid')])", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " input", "_", "shape", "=(", "2", ",", ")", ",", " activation", "='", "s", "igmoid", "')", "])", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.5737508535385132, -0.5046671628952026, -1.2397689715726301e-05, -0.007933178916573524, -2.95634672511369e-05, -0.05540643632411957, -1.1920922133867862e-06, -0.0004913791781291366, -0.6029357314109802, -0.41288861632347107, -0.9723698496818542, -1.168244216387393e-05, -0.3775111734867096, -0.11682042479515076, -0.14837680757045746, -0.002304519060999155, -0.12826642394065857, -0.0005360596696846187, -0.07767729461193085, -0.30051496624946594, -0.004304548725485802, -6.139089964563027e-05, -0.035246215760707855, -0.01932600885629654, -0.011242375709116459], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.05))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "5", "))", "\n"], "logprobs": [-0.0013463966315612197, -0.031936775892972946, -0.06419172883033752, -0.42984578013420105, -0.0023916945792734623, -3.93382906622719e-05, -9.7508447652217e-05, -7.068861305015162e-05, -0.00025817399728111923, -0.0004681444843299687, -0.030598480254411697, -0.03509901463985443, -0.0028656155336648226, -3.2782016205601394e-05, -8.380061626667157e-05, -8.583032467868179e-06, -2.825220326485578e-05, -0.015465804375708103, -0.0003457663697190583, -0.014943445101380348, -0.21613769233226776, -1.0371154530730564e-05, -1.6689286894688848e-06, -0.007777645718306303, -0.12963734567165375, -0.00022599527437705547, -1.0533943176269531, -2.438934326171875, -0.2747648358345032, -0.016016164794564247], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.00233556074090302, -0.00011765264935093, -0.012169046327471733, -0.011295773088932037, -0.00024911639047786593, -0.0011954312212765217, -0.00821662601083517, -9.97731985989958e-05, -5.364403477869928e-06, -0.00678236735984683, -0.6823372840881348, -0.005171493627130985, -0.12381871044635773, -0.03931993618607521, -0.008636504411697388], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.06494205445051193, -0.1473437398672104, -0.0007326302584260702, -0.0357641726732254, -0.0012897277483716607, -0.011220214888453484, -0.0002847504511009902, -0.01342424750328064, -0.2807503640651703], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test.ravel(), Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00011395759065635502, -6.711257447022945e-05, -0.0008624648326076567, -1.3305797576904297, -0.0009183242218568921, -0.001256867777556181, -9.536738616588991e-07, -3.45700973412022e-05, -7.152555099310121e-07, -0.0028406528290361166, -0.04008479788899422, -0.00040070133400149643, -0.00045908879837952554, -1.572708010673523, -0.01767866313457489, -8.916457591112703e-05, -0.0025079960469156504, -0.0031339838169515133, -7.986990567587782e-06, -8.583032467868179e-06, -0.0583745613694191, -0.0027096483390778303], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.013104976154863834, -0.0001429217227268964, -0.0003182381624355912, -0.0010699268896132708, -5.960462772236497e-07, -0.0007782529573887587, -0.001705264556221664, -1.6927575416048057e-05, -0.000777776469476521, -0.000935950840357691], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(10, 10))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "0", ",", " ", "1", "0", "))", "\n"], "logprobs": [-0.008308488875627518, -0.0026523431297391653, -0.0004435985756572336, -2.276871418871451e-05, -2.074220174108632e-05, -0.0002475670480635017, -1.494857668876648, -0.2571311295032501, -7.629365427419543e-06, -0.012761593796312809, -1.602344274520874, -0.35998523235321045, -0.003143728245049715, -0.13067150115966797, -0.6987303495407104, -0.004541084170341492, -0.034084029495716095, -0.006703981198370457], "finish_reason": "stop"}, {"text": "plot(fpr, tpr)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.12343166768550873, -0.05429038032889366, -0.003315549110993743, -1.07287787614041e-05, -0.00010787858627736568, -0.0006498370785266161, -3.3378546504536644e-06, -2.315450668334961, -0.18664291501045227], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='Model (area = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "Model", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.09304124116897583, -0.001116486731916666, -0.0029276625718921423, -2.264974000354414e-06, -0.00022790218645241112, -0.0010422994382679462, -3.933898824470816e-06, -0.010268359445035458, -0.06142706796526909, -0.2439357191324234, -1.4500303268432617, -1.2630081176757812, -0.691233217716217, -0.04003108665347099, -0.4017968475818634, -0.05050446838140488, -9.894321920000948e-06, -0.2955484986305237, -6.615896563744172e-05, -0.0009827552130445838, -0.0038582661654800177, -0.020461898297071457, -8.344646857949556e-07, -0.0052307890728116035, -1.4543427823809907e-05, -0.08838175982236862, -0.05264732241630554], "finish_reason": "stop"}, {"text": "set_xlim([0.0, 1.0])", "tokens": ["set", "_", "x", "lim", "([", "0", ".", "0", ",", " ", "1", ".", "0", "])", "\n"], "logprobs": [-0.2423386126756668, -0.07006172090768814, -2.8444929122924805, -0.011431078426539898, -0.0038006706163287163, -0.2964583933353424, -0.03803739696741104, -0.000406301929615438, -0.0026713658589869738, -0.00012289722508285195, -0.0001006075763143599, -0.0021946171764284372, -0.0015140033792704344, -0.0016169581795111299, -0.011366020888090134], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-7.438383181579411e-05, -4.124556289752945e-05, -0.0001760566228767857, -0.00020239688456058502, -0.00023850933939684182, -0.00014673586701974273, -1.4662635294371285e-05, -0.0020103498827666044, -0.0008983152220025659], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-2.525113105773926, -1.2795652151107788, -0.019221235066652298], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.0070254202000796795, -2.1681277751922607, -0.05738170072436333], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.020129211246967316, -0.005521522834897041, -0.011753947474062443, -0.3482432961463928], "finish_reason": "stop"}], "metrics": {"energy": 1360.3339903917308, "energy_per_token": 5.598082264986546, "time": 36.49942, "time_per_token": 0.1502033744855967}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=0)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -0.09028865396976471, -3.814689989667386e-06, -6.9141146923357155e-06, -0.007902429439127445, -1.6937716007232666, -0.0381801500916481, -0.014466284774243832], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.5737508535385132, -0.9515169858932495], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.BinaryCrossentropy(from_logits=False), optimizer=keras.optimizers.SGD(learning_rate=0.5))", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "(", "from", "_", "log", "its", "=", "False", ")", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "5", "))", "\n"], "logprobs": [-0.0011118428083136678, -0.027168842032551765, -0.065475232899189, -1.0644999742507935, -0.046479787677526474, -5.435795901576057e-05, -0.0010563514661043882, -1.7881233361549675e-05, -5.2927523938706145e-05, -0.7482784390449524, -5.364403477869928e-06, -3.886147169396281e-05, -2.150533676147461, -0.010298092849552631, -1.9430925021879375e-05, -1.2755313036905136e-05, -9.107174992095679e-05, -0.001729303621686995, -0.2563934922218323, -0.004109510220587254, -0.0010871936101466417, -0.0927884578704834, -0.020169168710708618, -0.0019691854249686003, -2.9682672902708873e-05, -9.941560711013153e-05, -0.00020239688456058502, -2.062299427052494e-05, -0.014791112393140793, -0.0002212279650848359, -0.051395926624536514, -0.20988823473453522, -8.4638240878121e-06, -4.291525328881107e-06, -0.005765593610703945, -0.15448808670043945, -0.00014876213390380144, -2.123108386993408, -0.09490524232387543, -0.008816245943307877], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0023097521625459194, -0.00013493580627255142, -0.01853175461292267, -0.011299662292003632, -0.0002989322238136083, -0.0012548437807708979, -0.007462482899427414, -9.285972191719338e-05, -6.556489552167477e-06, -0.008427414111793041, -0.805592954158783, -0.003913127351552248, -0.33637088537216187, -0.13311317563056946, -1.5023720264434814, -0.01844562403857708, -0.004324727226048708, -0.06660821288824081, -0.008289573714137077, -0.026324249804019928], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.07545581459999084, -0.15128040313720703, -0.0013579442165791988, -0.03317791596055031, -0.0016332633094862103, -0.010837034322321415, -0.000495549407787621, -0.015252502635121346, -0.3126295208930969], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test.ravel(), Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00012861855793744326, -7.056941103655845e-05, -0.0008381668012589216, -1.4019083976745605, -0.001086598145775497, -0.0014494876377284527, -1.1920922133867862e-06, -3.576214658096433e-05, -7.152555099310121e-07, -0.005362293682992458, -0.02290378138422966, -0.0004450284468475729, -0.00045253525604493916, -1.6357836723327637, -0.019275611266493797, -0.00011419598013162613, -0.00215429300442338, -0.0029013941530138254, -1.1324817933200393e-05, -1.1324817933200393e-05, -0.053339339792728424, -0.0037365397438406944], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.01422515232115984, -9.119095193454996e-05, -0.0004332319076638669, -0.0010708795161917806, -3.576278118089249e-07, -0.0005312938592396677, -0.0018364008283242583, -1.9430925021879375e-05, -0.0007426364463753998, -0.001341634662821889], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.009335673414170742, -0.002707508159801364, -0.0005081792478449643, -2.13382354559144e-05, -3.564294092939235e-05, -0.00027426297310739756, -0.25436002016067505, -0.0017602439038455486], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'ROC Curve (AUC = {auc_score:.2f})')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "R", "OC", " Cur", "ve", " (", "A", "UC", " =", " {", "auc", "_", "score", ":", ".", "2", "f", "})", "')", "\n"], "logprobs": [-0.17092527449131012, -0.10054482519626617, -0.004170411732047796, -7.390948667307384e-06, -8.05822346592322e-05, -0.0008232779800891876, -3.6954811548639555e-06, -0.10676151514053345, -0.07716062664985657, -1.3490183353424072, -0.22054389119148254, -0.25017407536506653, -0.6714171767234802, -0.0007775382255204022, -1.9108034372329712, -0.0005383234238252044, -0.21925196051597595, -0.15818654000759125, -0.0018950614612549543, -0.4133208990097046, -0.005510260351002216, -0.08232016116380692, -0.0004502712981775403, -2.1219027985353023e-05, -0.15188010036945343, -0.018704580143094063, -0.42833176255226135, -0.0012378181563690305, -0.025908365845680237, -0.033104684203863144, -0.2616256773471832], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC: {:.4f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", ":", " {:", ".", "4", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.09337355941534042, -0.0014119903789833188, -0.0034867464564740658, -1.6689286894688848e-06, -0.0002559096028562635, -0.0010474200826138258, -2.861018856492592e-06, -0.008382966741919518, -0.052662815898656845, -0.21091623604297638, -2.4308362007141113, -0.004713021218776703, -2.0758466720581055, -0.16491594910621643, -0.03102998435497284, -2.210095167160034, -0.02652394399046898, -0.010371596552431583, -0.0006133820279501379, -0.00035768310772255063, -0.00017796363681554794, -0.0019922663923352957, -0.0012138864258304238, -2.6464111215318553e-05, -0.06537774950265884, -0.06005999818444252], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-1.8560954332351685, -0.6853711605072021, -0.024369334802031517], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-5.602679812000133e-05, -4.017272294731811e-05, -0.00013279033009894192, -0.0002115741081070155, -0.0001928620331455022, -0.00018571082910057157, -1.1444026313256472e-05, -0.001838304684497416, -0.0009826361201703548], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.13696394860744476, -0.000366263062460348, -0.002195212058722973, -0.0031177031341940165, -0.01444924809038639, -0.00012063252506777644, -0.017106834799051285, -0.008971500210464, -0.004495751578360796], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.006803561467677355, -2.170680046081543, -0.04155982658267021], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.01732770912349224, -0.004669001325964928, -0.011472562327980995, -0.33621945977211], "finish_reason": "stop"}], "metrics": {"energy": 1268.8134392471316, "energy_per_token": 5.308842842038207, "time": 35.69405, "time_per_token": 0.14934748953974894}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -0.09028865396976471, -3.814689989667386e-06, -6.9141146923357155e-06, -0.007902429439127445, -0.5910323262214661, -0.043575387448072433, -0.03045637533068657, -0.01692248322069645], "finish_reason": "stop"}, {"text": " keras.models.Sequential(", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "(", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.9648059606552124, -3.981510963058099e-05, -3.123234637314454e-05, -1.5497195136049413e-06, 0.0, -3.0193140506744385, -0.16116958856582642], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.BinaryCrossentropy(), optimizer=keras.optimizers.SGD(learning_rate=0.1))", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "()", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "1", "))", "\n"], "logprobs": [-0.0011269653914496303, -0.0227799229323864, -0.0699348971247673, -0.9942837953567505, -0.03225574642419815, -3.075552376685664e-05, -0.000974656839389354, -1.4066597032069694e-05, -6.282132380874828e-05, -0.7170961499214172, -5.364403477869928e-06, -4.482168878894299e-05, -0.09963560849428177, -0.0004999579978175461, -0.04731333255767822, -0.024898072704672813, -0.0019211184699088335, -1.9311717551317997e-05, -7.164221460698172e-05, -4.637133679352701e-05, -1.728519782773219e-05, -0.011597475036978722, -0.00016056202002801, -0.048452869057655334, -0.17611461877822876, -6.9141146923357155e-06, -2.622600959512056e-06, -0.00895885843783617, -0.12775510549545288, -0.000592890428379178, -0.9605456590652466, -0.07350123673677444, -0.009522020816802979], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.002067572670057416, -0.0001387499796692282, -0.01316133327782154, -0.009976759552955627, -0.00024148885859176517, -0.0013011569390073419, -0.007504960056394339, -0.0001289761275984347, -6.556489552167477e-06, -0.009638085961341858, -0.7394954562187195, -0.005415175575762987, -0.17674925923347473, -0.04050387442111969, -0.007885398343205452], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.06912434101104736, -0.1274457722902298, -0.0007974305190145969, -0.04241884872317314, -0.0011522090062499046, -0.00943298451602459, -0.0003833036171272397, -0.013929531909525394, -0.3086257576942444], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00013982271775603294, -8.49926145747304e-05, -0.0010570659069344401, -1.286141037940979, -0.0010638536186888814, -0.0015193596482276917, -1.0728830375228426e-06, -2.8609820219571702e-05, -1.5497195136049413e-06, -0.004646456800401211, -0.026560278609395027, -0.0004058252670802176, -0.0005162813467904925, -0.22213873267173767, -0.0027803832199424505, -1.645074735279195e-05, -1.0013530300057027e-05, -0.058796271681785583, -0.002703941660001874], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.017123710364103317, -0.00013040646445006132, -0.00032550760079175234, -0.001191025716252625, -5.960462772236497e-07, -0.0005621521850116551, -0.00193813256919384, -1.4781842764932662e-05, -0.000811366830021143, -0.001007287879474461], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.007657578215003014, -0.003011812688782811, -0.0004994813934899867, -2.8371408916427754e-05, -3.71926071238704e-05, -0.00023731753753963858, -0.26646578311920166, -0.0014519874239340425], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC = {:.2f}'.format(auc_score))  # Plot the ROC curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " {:", ".", "2", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "  ", "#", " Plot", " the", " R", "OC", " curve", "\n"], "logprobs": [-0.12417370080947876, -0.06541058421134949, -0.003751978976652026, -1.0132738680113107e-05, -0.00010847456724150106, -0.0009485750924795866, -4.768360213347478e-06, -0.12370168417692184, -0.0783906802535057, -0.2407243400812149, -2.221980571746826, -0.0009233264136128128, -0.2967543303966522, -0.09227704256772995, -0.9498730301856995, -0.6871621608734131, -0.0010561132803559303, -0.008386276662349701, -0.00022766382608097047, -0.00012599628826137632, -7.83174327807501e-05, -0.0014207994099706411, -0.0007794441189616919, -1.1801649634435307e-05, -0.011065663769841194, -1.4724006652832031, -9.274052717955783e-05, -0.17879045009613037, -0.11405166983604431, -0.2552262246608734, -9.250213042832911e-05, -0.008431551977992058, -0.2583256959915161], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'Keras AUC: {auc_score:.3f}')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "K", "eras", " A", "UC", ":", " {", "auc", "_", "score", ":", ".", "3", "f", "}", "')", "\n"], "logprobs": [-0.1862659901380539, -0.0014231802197173238, -0.0040146480314433575, -1.5497195136049413e-06, -0.00022873646230436862, -0.0009394046501256526, -2.9802276912960224e-06, -0.011130976490676403, -0.055142827332019806, -1.4621920585632324, -0.48177772760391235, -0.3364831209182739, -2.4365415573120117, -0.013748707249760628, -1.9326529502868652, -0.009851054288446903, -1.582744836807251, -0.038199082016944885, -0.03344668820500374, -0.0010851691477000713, -2.276871418871451e-05, -0.08090244233608246, -0.019359566271305084, -0.7978225946426392, -0.0035657414700835943, -0.18469521403312683, -0.0025177467614412308, -0.07371575385332108], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-1.5743234157562256, -0.8147335648536682, -0.027568429708480835], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.95898348162882e-05, -4.51792984677013e-05, -0.00023398046323563904, -0.00022373080719262362, -0.0002411313180346042, -0.00016437610611319542, -1.5616295058862306e-05, -0.0021849824115633965, -0.0010913613950833678], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.1551816165447235, -0.0004161922261118889, -0.002323310589417815, -0.002385153668001294, -0.014250889420509338, -8.95221673999913e-05, -0.016670450568199158, -0.009434165433049202, -0.004922532942146063], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.0074273403733968735, -0.13181252777576447, -0.0074220155365765095, -0.10746730864048004, -0.44252514839172363, -0.0030971437226980925, -0.007665741257369518, -0.04548267275094986], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.023088200017809868, -0.005390157923102379, -0.015106087550520897], "finish_reason": "stop"}], "metrics": {"energy": 1439.2354581775676, "energy_per_token": 6.124406205010926, "time": 38.835476, "time_per_token": 0.16525734468085107}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, shuffle=False)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " shuffle", "=", "False", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -3.014172077178955, -0.04701937362551689, -0.4986022114753723, -0.07586673647165298, -0.019381430000066757], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.9648059606552124, -3.981510963058099e-05, -3.123234637314454e-05, -1.5497195136049413e-06, 0.0, -0.4990617334842682, -0.009059041738510132], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(0.001), metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "0", ".", "0", "0", "1", ")", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0011269653914496303, -0.0227799229323864, -0.0699348971247673, -0.472261518239975, -0.002592062344774604, -2.9205850296420977e-05, -7.712543447269127e-05, -6.735097849741578e-05, -0.00023648326168768108, -0.00046659549116156995, -0.025521710515022278, -0.022337382659316063, -0.0025684009306132793, -2.884823152271565e-05, -6.532455881824717e-05, -1.5020257706055418e-05, -3.158996332786046e-05, -0.01383089367300272, -0.00024279984063468874, -0.014161568135023117, -2.4698970317840576, -0.0011051744222640991, -0.9275715947151184, -0.8826247453689575, -0.7475921511650085, -0.8072918057441711, -0.0033692519646137953, -0.0508386455476284, -0.2052740603685379, -0.0361294150352478, -0.011396311223506927, -0.013930941931903362], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0040643950924277306, -0.00014053787162993103, -0.012150321155786514, -0.01141811441630125, -0.0002172949316445738, -0.0012416280806064606, -0.008091408759355545, -9.572047565598041e-05, -4.0531076592742465e-06, -0.00785937812179327, -0.8370187282562256, -0.004545712377876043, -0.12335821986198425, -0.043373022228479385, -0.006271681282669306], "finish_reason": "stop"}, {"text": " model(X_test)", "tokens": [" model", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.08510645478963852, -1.960800290107727, -0.00584393460303545, -0.018659064546227455, -0.00134080124553293, -0.017001478001475334, -0.5694712996482849], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00015293381875380874, -8.248942322097719e-05, -0.0010069306008517742, -1.3756598234176636, -0.0009750141180120409, -0.0012517482973635197, -1.0728830375228426e-06, -2.372236667724792e-05, -9.536738616588991e-07, -0.004985164385288954, -0.030255384743213654, -0.0004119024670217186, -0.0005620330339297652, -0.2106216549873352, -0.002340436913073063, -1.6093124941107817e-05, -2.5748875486897305e-05, -0.051804859191179276, -0.0029484631959348917], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.01252958457916975, -0.00014757021563127637, -0.00037579628406092525, -0.0013058000477030873, -3.576278118089249e-07, -0.0008709213580004871, -0.0016703951405361295, -1.9192511899746023e-05, -0.0007253637886606157, -0.001061352901160717], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.00777504313737154, -0.002949770539999008, -0.0005239067832008004, -2.0503786799963564e-05, -3.8980677345534787e-05, -0.00022468426323030144, -0.24479448795318604, -0.0018299752846360207], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.10106819868087769, -0.0780092403292656, -0.004228816833347082, -8.702239938429557e-06, -8.880697714630514e-05, -0.0008630603551864624, -4.768360213347478e-06, -0.0810287594795227, -0.06542342156171799, -0.2961317300796509, -0.17595957219600677, -0.00025912740966305137, -0.10733839869499207, -0.10173225402832031, -0.35422012209892273, -0.016051122918725014, -0.06603546440601349, -0.07104385644197464, -4.088794958079234e-05, -0.08008620887994766, -7.450303382938728e-05, -0.001434369827620685, -0.0027056061662733555, -0.014098098501563072, -5.960462772236497e-07, -0.0026352223940193653, -6.079655122448457e-06, -0.005981046706438065, -0.2933533489704132], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='Model (area = %0.3f)' % auc_score, lw=2)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "Model", " (", "area", " =", " %", "0", ".", "3", "f", ")'", " %", " a", "uc", "_", "score", ",", " l", "w", "=", "2", ")", "\n"], "logprobs": [-0.17076760530471802, -0.0013730631908401847, -0.0031686832662671804, -1.6689286894688848e-06, -0.0002361257211305201, -0.0009654866298660636, -3.2186455882765586e-06, -0.009869350120425224, -0.0517241507768631, -0.26585710048675537, -1.4561855792999268, -1.3632973432540894, -0.587573766708374, -0.03064657561480999, -0.2920951247215271, -0.04712206870317459, -1.5139465176616795e-05, -1.6025723218917847, -9.905801562126726e-05, -0.0012697261990979314, -0.003949818201363087, -0.01895293965935707, -1.6689286894688848e-06, -0.004427986219525337, -1.5616295058862306e-05, -2.6756389141082764, -0.9718109369277954, -3.0636318115284666e-05, -0.0007238152320496738, -0.19282716512680054, -0.15509667992591858, -0.04287543520331383], "finish_reason": "stop"}, {"text": "set_xlabel('False positive rate')", "tokens": ["set", "_", "xlabel", "('", "False", " positive", " rate", "')", "\n"], "logprobs": [-0.271250456571579, -0.07078000158071518, -1.0524585247039795, -0.01424466073513031, -0.008140834979712963, -0.07716448605060577, -0.001660279231145978, -0.004940445069223642, -0.0058044688776135445], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.3987260141875595e-05, -5.352353764465079e-05, -0.00017832119192462415, -0.00018439977429807186, -0.0002338612830499187, -0.00015341058315243572, -1.3232143828645349e-05, -0.003172367112711072, -0.00114292127545923], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-2.6746747493743896, -0.4235270023345947, -0.04206984117627144, -0.13029128313064575, -0.3387395739555359, -0.003429604694247246, -0.021354513242840767, -0.021457312628626823], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.005664961878210306, -0.13869427144527435, -0.006978543009608984, -0.10900311917066574, -0.445335328578949, -0.0024880189448595047, -0.010154254734516144, -0.05232901871204376], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.017641300335526466, -0.005474930629134178, -0.01395527645945549, -0.3585398495197296], "finish_reason": "stop"}], "metrics": {"energy": 1628.551281522751, "energy_per_token": 6.930005453288302, "time": 42.801968, "time_per_token": 0.1821360340425532}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -1.282088041305542, -0.00018034738604910672, -6.496695277746767e-05, -0.0008605591137893498, -0.0004365683125797659, -7.390948667307384e-06, -3.397406908334233e-05, -0.003506703767925501, -0.015204952098429203, -7.343022298300639e-05, -1.3351351299206726e-05, -2.3841830625315197e-06, -4.410734163684538e-06, -0.0002548369811847806, -0.18351863324642181, -0.005250830203294754, -0.011528068222105503, -0.04589516296982765, -0.07522176206111908, -4.017272294731811e-05, -4.768360213347478e-06, -0.012296698056161404, -0.00472998758777976, -2.1934269170742482e-05, -0.008970318362116814, -0.11968729645013809, -0.0566895455121994, -3.576272320060525e-06, -7.867782187531702e-06, -0.0037085108924657106, -2.3877756595611572, -0.05691220983862877, -0.01436217688024044], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.1201642751693726, -0.00664181262254715], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.0001), metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "0", "0", "1", ")", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0014667478390038013, -0.021954122930765152, -0.07241862267255783, -0.4491865038871765, -0.0031350532080978155, -3.6238969187252223e-05, -0.00013720047718379647, -8.380061626667157e-05, -0.000248401309363544, -0.0006576997111551464, -0.024607336148619652, -0.028294356539845467, -0.0026974028442054987, -2.9205850296420977e-05, -8.177422569133341e-05, -8.821448318485636e-06, -2.932505594799295e-05, -0.014417052268981934, -0.0003313469351269305, -0.013957157731056213, -0.1750876009464264, -6.318072337307967e-06, -1.1920922133867862e-06, -0.006965757813304663, -0.12377741932868958, -0.0001902399235405028, -1.02069091796875, -0.8963385224342346, -1.3667514324188232, -0.9071317911148071, -0.9633857011795044, -0.0047086309641599655, -0.09959179908037186, -0.1374662220478058, -0.03569423779845238, -0.012012639082968235, -0.013793975114822388], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.002089223824441433, -0.00014351768186315894, -0.01405919250100851, -0.009792976081371307, -0.0003073934931308031, -0.0012978235026821494, -0.008306952193379402, -0.00011538793478393927, -8.821448318485636e-06, -0.007485555484890938, -0.7394307255744934, -0.005018732510507107, -0.13149923086166382, -0.040170345455408096, -0.008017499931156635], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0849027931690216, -0.18535929918289185, -0.000995974289253354, -0.04541671648621559, -0.0013430631952360272, -0.008705994114279747, -0.00041738382424227893, -0.014823177829384804, -0.25776752829551697], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00012182447244413197, -5.9960475482512265e-05, -0.0008361419313587248, -0.4007629454135895, -0.0024726788979023695, -0.0013462775386869907, -1.0728830375228426e-06, -1.8358061424805783e-05, -5.960462772236497e-07, -0.0033908747136592865, -0.03712521493434906, -0.00046456989366561174, -0.00042429505265317857, -0.24870367348194122, -0.00658935122191906, -1.1324817933200393e-05, -1.2755313036905136e-05, -0.02186315506696701, -0.0027500689029693604], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.011690442450344563, -0.00010775939153973013, -0.00039188333903439343, -0.00105015910230577, -4.768370445162873e-07, -0.0006208876147866249, -0.0013453251449391246, -1.2636104656849056e-05, -0.0007098776986822486, -0.001347468001767993], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.008615231141448021, -0.00250038574449718, -0.0004876854654867202, -2.038458114839159e-05, -3.564294092939235e-05, -0.000198821333469823, -0.2281949669122696, -0.0014574630185961723], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.3f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "3", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.13778597116470337, -0.05441254377365112, -0.003430198645219207, -9.417489309271332e-06, -7.509902934543788e-05, -0.0007420408655889332, -3.6954811548639555e-06, -0.08744098246097565, -0.09210006147623062, -0.30121132731437683, -0.21709445118904114, -0.00022015532886143774, -0.1138056293129921, -0.12299893796443939, -0.3766503930091858, -0.014182253740727901, -0.07472793757915497, -0.0921633318066597, -5.173549288883805e-05, -2.4805500507354736, -0.0003965306677855551, -0.0013678251998499036, -0.004363302141427994, -0.018792442977428436, -4.768370445162873e-07, -0.0025197681970894337, -8.821448318485636e-06, -0.007121772971004248, -0.2591310143470764], "finish_reason": "stop"}, {"text": "set(xlabel='False positive rate', ylabel='True positive rate')", "tokens": ["set", "(", "xlabel", "='", "False", " positive", " rate", "'", ",", " y", "label", "='", "True", " positive", " rate", "')", "\n"], "logprobs": [-1.8998351097106934, -1.3968472480773926, -0.614831268787384, -0.03321285545825958, -0.008914670906960964, -0.056969642639160156, -0.0010057396721094847, -0.00765769649296999, -5.1020273531321436e-05, -0.036017533391714096, -4.172316494077677e-06, -0.0037942577619105577, -0.0006364941946230829, -0.000918681500479579, -4.303362584323622e-05, -0.7521209716796875, -0.053642068058252335], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.19744664430618286, -0.08657847344875336, -0.6681337356567383, -0.011058589443564415, -0.00341023993678391, -4.5536911784438416e-05, -0.03947637230157852, -0.009920459240674973, -0.026042290031909943], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.3748852476710454e-05, -5.066266385256313e-05, -9.881961887003854e-05, -0.00020394629973452538, -0.00021371940965764225, -0.0001995364436879754, -1.4424220353248529e-05, -0.0019850090611726046, -0.0008993871742859483], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.1728125959634781, -0.0004379982128739357, -0.002651748713105917, -0.002774558262899518, -0.014059780165553093, -0.00011896379146492109, -0.018258122727274895, -0.00915070902556181, -0.006939121522009373], "finish_reason": "stop"}, {"text": "legend(loc='best')", "tokens": ["legend", "(", "loc", "='", "best", "')", "\n"], "logprobs": [-0.005751607473939657, -0.1076437309384346, -0.006660641171038151, -0.1513364464044571, -1.1620503664016724, -0.01652178168296814, -0.054105304181575775], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.018962765112519264, -0.005553531926125288, -0.01111730094999075, -0.36234962940216064], "finish_reason": "stop"}], "metrics": {"energy": 1348.0709196252824, "energy_per_token": 5.938638412446178, "time": 36.285065, "time_per_token": 0.15984610132158592}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -0.09028865396976471, -3.814689989667386e-06, -6.9141146923357155e-06, -0.007902429439127445, -0.5910323262214661, -0.043575387448072433, -0.03045637533068657, -0.01692248322069645], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.5737508535385132, -0.9515169858932495], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.BinaryCrossentropy(), optimizer=keras.optimizers.SGD(learning_rate=0.2))", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "()", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "2", "))", "\n"], "logprobs": [-0.0011118428083136678, -0.027168842032551765, -0.065475232899189, -1.0644999742507935, -0.046479787677526474, -5.435795901576057e-05, -0.0010563514661043882, -1.7881233361549675e-05, -5.2927523938706145e-05, -0.7482784390449524, -5.364403477869928e-06, -3.886147169396281e-05, -0.12481891363859177, -0.0004985281848348677, -0.033484041690826416, -0.022842029109597206, -0.0018912539817392826, -1.7165990357170813e-05, -5.3165931603871286e-05, -3.755022044060752e-05, -1.3470558769768104e-05, -0.010761677287518978, -0.00014840454969089478, -0.04718438535928726, -0.13366910815238953, -1.0490362910786644e-05, -2.0265558760002023e-06, -0.011601010337471962, -0.13823197782039642, -0.0004625442670658231, -1.9419198036193848, -0.3683086633682251, -0.009410074912011623], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0023097521625459194, -0.00013493580627255142, -0.01853175461292267, -0.011299662292003632, -0.0002989322238136083, -0.0012548437807708979, -0.007462482899427414, -9.285972191719338e-05, -6.556489552167477e-06, -0.008427414111793041, -0.6267103552818298, -0.0058647929690778255, -0.09075286239385605, -0.03509199246764183, -0.009840075857937336], "finish_reason": "stop"}, {"text": " model(X_test)", "tokens": [" model", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.06016260012984276, -2.115872621536255, -0.007205807138234377, -0.017668357118964195, -0.001388658070936799, -0.014627008698880672, -0.6452121734619141], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00013481661153491586, -8.141662692651153e-05, -0.0007385863573290408, -0.4868128299713135, -0.002718921285122633, -0.0014013956533744931, -7.152555099310121e-07, -1.7881233361549675e-05, -3.576278118089249e-07, -0.003641404677182436, -0.03408817574381828, -0.0004745787591673434, -0.00036435641231946647, -0.23605263233184814, -0.011229055933654308, -9.775113539944869e-06, -1.764281842042692e-05, -0.021737301722168922, -0.0027009693440049887], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.01296824961900711, -0.00011300401820335537, -0.0003060825983993709, -0.0009051040397025645, -4.768370445162873e-07, -0.0005329619161784649, -0.0021244355011731386, -1.7404405298293568e-05, -0.0007606235449202359, -0.0010513499146327376], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.009734304621815681, -0.0029700950253754854, -0.0004536076739896089, -2.5510462364763953e-05, -3.3378044463461265e-05, -0.00023624490131624043, -0.27021917700767517, -0.0018528213258832693], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = {:0.2f})'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " {:", "0", ".", "2", "f", "})", "'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.10891599208116531, -0.07682839781045914, -0.0036657534074038267, -8.583032467868179e-06, -0.00011085849109804258, -0.0007875440060161054, -4.887569048150908e-06, -0.09704048931598663, -0.07964102178812027, -0.28988194465637207, -0.20562157034873962, -0.000271879427600652, -0.09760894626379013, -0.12360740453004837, -0.4066494405269623, -0.018164945766329765, -2.758119583129883, -0.41743358969688416, -4.565611743601039e-05, -0.17707067728042603, -0.0005471401382237673, -0.0014113951474428177, -0.0005716835148632526, -0.00047636605449952185, -0.00023684080224484205, -0.0001062098381225951, -0.0009320206008851528, -0.0007834940915927291, -1.0609570381348021e-05, -0.006922902539372444, -0.25923797488212585], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='Sequential (area = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "S", "equ", "ential", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.10245785117149353, -0.0009489324293099344, -0.003910040017217398, -2.264974000354414e-06, -0.00026341783814132214, -0.0012015035608783364, -5.006777428206988e-06, -0.011079339310526848, -0.06741857528686523, -0.27094775438308716, -3.544377565383911, -2.183835744857788, -0.00044586253352463245, -1.9363741874694824, -0.013296504504978657, -0.012206966057419777, -0.14827413856983185, -0.09112708270549774, -1.1324817933200393e-05, -0.18525956571102142, -7.497983460780233e-05, -0.001510551548562944, -0.0026173877995461226, -0.016223203390836716, -5.960462772236497e-07, -0.009506788104772568, -8.4638240878121e-06, -0.066538505256176, -0.03860243037343025], "finish_reason": "stop"}, {"text": "legend(loc='lower right', fontsize='x-small')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "'", ",", " fonts", "ize", "='", "x", "-", "small", "')", "\n"], "logprobs": [-1.907313346862793, -0.7210203409194946, -0.07168542593717575, -0.21443811058998108, -0.08675479888916016, -0.0044494676403701305, -2.979766845703125, -0.0002244459028588608, -0.1963716745376587, -1.4305104514278355e-06, -1.1479631662368774, -1.318591594696045, -1.1920928244535389e-07, -1.2460250854492188, -0.021308187395334244, -0.03074495494365692], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.2676016164477915e-05, -6.151010165922344e-05, -0.00015805903240107, -0.00026639728457666934, -0.0002889215829782188, -0.00019167017308063805, -1.7165990357170813e-05, -0.003267427906394005, -0.0010025242809206247], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.16478189826011658, -0.0004631400224752724, -0.0025719678960740566, -0.003281448734924197, -0.011071322485804558, -8.880697714630514e-05, -0.018045885488390923, -0.008569255471229553, -0.004451484885066748], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.006230099592357874, -0.1280728280544281, -0.00776948407292366, -0.169637992978096, -0.4288865923881531, -0.002548306016251445, -0.01056364830583334, -0.035200294107198715], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.022024093195796013, -0.0050642783753573895, -0.011433789506554604, -0.35262948274612427], "finish_reason": "stop"}], "metrics": {"energy": 1427.0548517293937, "energy_per_token": 5.848585457907351, "time": 37.19774, "time_per_token": 0.15244975409836067}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -1.282088041305542, -0.00018034738604910672, -6.496695277746767e-05, -0.0008605591137893498, -0.0004365683125797659, -7.390948667307384e-06, -3.397406908334233e-05, -0.003506703767925501, -0.015204952098429203, -7.343022298300639e-05, -1.3351351299206726e-05, -2.3841830625315197e-06, -4.410734163684538e-06, -0.0002548369811847806, -0.18351863324642181, -0.005250830203294754, -0.011528068222105503, -0.04589516296982765, -0.07522176206111908, -4.017272294731811e-05, -4.768360213347478e-06, -0.012296698056161404, -0.00472998758777976, -2.1934269170742482e-05, -0.008970318362116814, -0.11968729645013809, -0.0566895455121994, -3.576272320060525e-06, -7.867782187531702e-06, -0.0037085108924657106, -0.3661368787288666, -0.03532227873802185, -0.031273338943719864, -0.017658283933997154], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.9648059606552124, -3.981510963058099e-05, -3.123234637314454e-05, -1.5497195136049413e-06, 0.0, -1.0732804536819458, -0.32572904229164124], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.2))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "2", "))", "\n"], "logprobs": [-0.0011269653914496303, -0.0227799229323864, -0.0699348971247673, -0.472261518239975, -0.002592062344774604, -2.9205850296420977e-05, -7.712543447269127e-05, -6.735097849741578e-05, -0.00023648326168768108, -0.00046659549116156995, -0.025521710515022278, -0.022337382659316063, -0.0025684009306132793, -2.884823152271565e-05, -6.532455881824717e-05, -1.5020257706055418e-05, -3.158996332786046e-05, -0.01383089367300272, -0.00024279984063468874, -0.014161568135023117, -0.18853066861629486, -8.22540732769994e-06, -1.4305104514278355e-06, -0.008128064684569836, -0.11622616648674011, -0.0002324311062693596, -1.9911959171295166, -0.5045070648193359, -0.011133570224046707], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0027358029037714005, -0.00014125302550382912, -0.015845924615859985, -0.00863473117351532, -0.00019333878299221396, -0.0012286503333598375, -0.007207819260656834, -9.345571743324399e-05, -7.271740287251305e-06, -0.00722178490832448, -0.49892929196357727, -0.004690477624535561, -0.1288955807685852, -0.040766336023807526, -0.007052172906696796], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.06905881315469742, -0.1285432130098343, -0.0009259465732611716, -0.04138175770640373, -0.0011486368020996451, -0.010576623491942883, -0.0004624251159839332, -0.016742901876568794, -0.25921958684921265], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00014137222024146467, -9.691245941212401e-05, -0.000824230897706002, -0.4662671983242035, -0.002877739956602454, -0.0016379047883674502, -8.344646857949556e-07, -1.645074735279195e-05, -4.768370445162873e-07, -0.003003730671480298, -0.04082893580198288, -0.0004836343287024647, -0.0005567907355725765, -0.3188357353210449, -0.006247988436371088, -1.0847986231965479e-05, -1.4066597032069694e-05, -0.022038204595446587, -0.002259679604321718], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.014345255680382252, -0.00010918975021922961, -0.0003430254873819649, -0.0011801904765889049, -4.768370445162873e-07, -0.0004954302567057312, -0.0021077815908938646, -1.883488948806189e-05, -0.0007337023853324354, -0.0009064141195267439], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.007322496734559536, -0.0023776614107191563, -0.0005178302526473999, -2.4318398573086597e-05, -2.706014311115723e-05, -0.0002485204895492643, -0.2384859323501587, -0.0015754204941913486], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC = {:0.2f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " {:", "0", ".", "2", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.14920686185359955, -0.07104429602622986, -0.003557307878509164, -8.34461570775602e-06, -0.00010156115604331717, -0.0008351890719495714, -4.0531076592742465e-06, -0.10760808736085892, -0.08199447393417358, -0.3705601692199707, -1.7776554822921753, -0.0008671099785715342, -0.221108540892601, -0.08864603191614151, -0.4671704173088074, -7.116541382856667e-05, -0.38839223980903625, -0.0010792152024805546, -0.006063992157578468, -0.00025507534155622125, -0.00016532962035853416, -0.00011669908417388797, -0.0019766809418797493, -0.0009115354623645544, -1.1324817933200393e-05, -0.0077409762889146805, -0.268352210521698], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.13444402813911438, -0.001192930736579001, -0.003711598925292492, -1.6689286894688848e-06, -0.00020454221521504223, -0.0009710840531624854, -4.0531076592742465e-06, -0.006853288970887661, -0.05100676789879799, -0.26202377676963806, -2.1422672271728516, -0.006493894848972559, -0.059759993106126785, -0.24481920897960663, -0.232845276594162, -0.017096523195505142, -0.08807157725095749, -0.05405222624540329, -2.169585604860913e-05, -0.10493647307157516, -6.317892984952778e-05, -0.0010580186499282718, -0.0023180777207016945, -0.017590584233403206, -2.3841855067985307e-07, -0.00523067032918334, -1.2516897186287679e-05, -0.04657889902591705, -0.06569181382656097], "finish_reason": "stop"}, {"text": "set_xlabel('False positive rate')", "tokens": ["set", "_", "xlabel", "('", "False", " positive", " rate", "')", "\n"], "logprobs": [-0.21980422735214233, -0.08672747015953064, -0.621308445930481, -0.019399670884013176, -0.007090761326253414, -0.08516043424606323, -0.0014252038672566414, -0.005376759450882673, -0.00576168205589056], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.172238186583854e-05, -5.1973900554003194e-05, -0.00013696208770852536, -0.00024923557066358626, -0.00023552982020191848, -0.00016151554882526398, -1.2040065485052764e-05, -0.0026232139207422733, -0.0010482537327334285], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.17849043011665344, -0.0004040378553327173, -0.003415823681280017, -0.003063867799937725, -0.012348271906375885, -0.00010394509445177391, -0.01606813259422779, -0.007244863081723452, -0.005020511336624622], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.00701677892357111, -0.12592680752277374, -0.006048588547855616, -0.12326770275831223, -0.354299932718277, -0.0026782616041600704, -0.008684013038873672, -0.039978742599487305], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.026914041489362717, -0.005235176533460617, -0.015777047723531723, -0.34892016649246216], "finish_reason": "stop"}], "metrics": {"energy": 1955.6508395128249, "energy_per_token": 8.393351242544313, "time": 63.28876, "time_per_token": 0.27162557939914167}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=101)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", "0", "1", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -0.09028865396976471, -3.814689989667386e-06, -6.9141146923357155e-06, -0.007902429439127445, -1.7236425876617432, -1.9638862609863281, -1.4613518714904785, -0.07413116097450256, -0.011678542010486126], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.9648059606552124, -3.981510963058099e-05, -3.123234637314454e-05, -1.5497195136049413e-06, 0.0, -0.4990617334842682, -0.009059041738510132], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(0.1), metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "0", ".", "1", ")", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0011269653914496303, -0.0227799229323864, -0.0699348971247673, -0.472261518239975, -0.002592062344774604, -2.9205850296420977e-05, -7.712543447269127e-05, -6.735097849741578e-05, -0.00023648326168768108, -0.00046659549116156995, -0.025521710515022278, -0.022337382659316063, -0.0025684009306132793, -2.884823152271565e-05, -6.532455881824717e-05, -1.5020257706055418e-05, -3.158996332786046e-05, -0.01383089367300272, -0.00024279984063468874, -0.014161568135023117, -2.4698970317840576, -0.0011051744222640991, -0.9986279606819153, -1.1744091510772705, -0.0026486574206501245, -0.046664003282785416, -0.1648714691400528, -0.02898872271180153, -0.011024869978427887, -0.013197921216487885], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0040643950924277306, -0.00014053787162993103, -0.012150321155786514, -0.01141811441630125, -0.0002172949316445738, -0.0012416280806064606, -0.008091408759355545, -9.572047565598041e-05, -4.0531076592742465e-06, -0.00785937812179327, -0.604623556137085, -0.0032038569916039705, -0.298570841550827, -0.12765364348888397, -1.4798073768615723, -0.02173520252108574, -0.004876861814409494, -0.05525360256433487, -0.008782805874943733, -0.023792823776602745], "finish_reason": "stop"}, {"text": " model.predict(X_test).flatten()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "fl", "atten", "()", "\n"], "logprobs": [-0.0656382292509079, -0.14670106768608093, -0.0008538890979252756, -0.03848382830619812, -0.0010758809512481093, -0.010004849173128605, -0.0003844952443614602, -0.012002980336546898, -1.3974131345748901, -1.2720210552215576, -1.5258672647178173e-05, -0.00020776021119672805, -0.011629525572061539], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test.ravel(), Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00015496007108595222, -6.55629628454335e-05, -0.001046467456035316, -0.45161712169647217, -0.0026347467210143805, -0.0014021099777892232, -1.0728830375228426e-06, -1.5735502529423684e-05, -4.768370445162873e-07, -0.00300586991943419, -0.03410661220550537, -0.0004624251159839332, -0.0004884004010818899, -1.3258100748062134, -0.015773292630910873, -5.4834770708112046e-05, -0.0016104121459648013, -0.004242824390530586, -1.0847986231965479e-05, -1.5020257706055418e-05, -0.03261546045541763, -0.0026568612083792686], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.01349411066621542, -0.00013255194062367082, -0.00038425691309385, -0.0011080323019996285, -3.576278118089249e-07, -0.0006482883472926915, -0.0017591729993000627, -1.4543427823809907e-05, -0.0007005859515629709, -0.001029557315632701], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(4, 4))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "4", ",", " ", "4", "))", "\n"], "logprobs": [-0.00858320202678442, -0.002293339231982827, -0.0005516675882972777, -2.2053474822314456e-05, -3.290122185717337e-05, -0.00021979777375236154, -1.5442099571228027, -0.19694729149341583, -9.536697689327411e-06, -0.013586667366325855, -2.807279109954834, -0.2183355987071991, -0.2697446942329407, -0.18076340854167938, -0.055350158363580704, -0.004593297373503447], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = {:0.2f})'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " {:", "0", ".", "2", "f", "})", "'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.1191677674651146, -0.0764244943857193, -0.0033812513574957848, -6.079655122448457e-06, -8.689979586051777e-05, -0.0007913556764833629, -3.4570634852570947e-06, -0.10315830260515213, -0.08800029754638672, -0.2829701006412506, -0.1609451174736023, -0.0002224197960458696, -0.13448186218738556, -0.1338137537240982, -0.4438130259513855, -0.019083939492702484, -2.831339120864868, -0.42601293325424194, -4.327203714638017e-05, -0.17574529349803925, -0.000526289688423276, -0.0018772137118503451, -0.0006672301678918302, -0.0006490031373687088, -0.0002873722987715155, -0.00012087091454304755, -0.0010171722387894988, -0.0009260656661354005, -1.1920858014491387e-05, -0.007191959768533707, -0.27693578600883484], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=\"AUC = {:.3f}\".format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "\"", "A", "UC", " =", " {:", ".", "3", "f", "}\"", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.17906486988067627, -0.0014487734297290444, -0.003690339159220457, -2.145764938177308e-06, -0.00024470672360621393, -0.001210552523843944, -4.529942543740617e-06, -0.007961799390614033, -0.06483256816864014, -1.703749418258667, -1.051058292388916, -0.5312601923942566, -0.008301632478833199, -0.9350096583366394, -0.09125538170337677, -0.23268450796604156, -0.2865951359272003, -0.027788512408733368, -0.0029111409094184637, -0.00046993177966214716, -0.00020847532141488045, -8.272782724816352e-05, -0.0016111262375488877, -0.0017972521018236876, -1.9311717551317997e-05, -0.06202542781829834, -0.044655464589595795], "finish_reason": "stop"}, {"text": "set_xlabel('False positive rate')", "tokens": ["set", "_", "xlabel", "('", "False", " positive", " rate", "')", "\n"], "logprobs": [-0.23419089615345, -0.07289529591798782, -0.800116240978241, -0.017589647322893143, -0.008132794871926308, -0.0805722251534462, -0.0013661584816873074, -0.006197520066052675, -0.0062905168160796165], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-5.245071224635467e-05, -4.994744449504651e-05, -0.0002090712368953973, -0.00022539935889653862, -0.0002706876548472792, -0.0001864259538706392, -1.8358061424805783e-05, -0.002348286332562566, -0.0009157040040008724], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-2.4359512329101562, -0.35497915744781494, -0.04971475526690483, -0.14997413754463196, -0.3754790425300598, -0.0030787233263254166, -0.01740831322968006, -0.02651883475482464], "finish_reason": "stop"}, {"text": "legend(loc='best')", "tokens": ["legend", "(", "loc", "='", "best", "')", "\n"], "logprobs": [-0.006211026106029749, -0.1252799928188324, -0.008076036348938942, -0.1463858038187027, -1.1874362230300903, -0.0174003466963768, -0.041591618210077286], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.020003724843263626, -0.004644795786589384, -0.00961140263825655, -0.3292025327682495], "finish_reason": "stop"}], "metrics": {"energy": 1336.7493431053163, "energy_per_token": 5.242154286687515, "time": 46.525867, "time_per_token": 0.18245438039215686}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, shuffle=False)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " shuffle", "=", "False", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -3.014172077178955, -0.04701937362551689, -0.4986022114753723, -0.07586673647165298, -0.019381430000066757], "finish_reason": "stop"}, {"text": " keras.Sequential([keras.layers.Dense(10, input_shape=(2,)),keras.layers.Dense(1)])", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", "0", ",", " input", "_", "shape", "=(", "2", ",", "))", ",", "keras", ".", "layers", ".", "D", "ense", "(", "1", ")]", ")", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.5737508535385132, -0.5046671628952026, -1.2397689715726301e-05, -0.007933178916573524, -2.95634672511369e-05, -0.05540643632411957, -1.1920922133867862e-06, -0.0004913791781291366, -0.6029357314109802, -2.1246118545532227, -0.17182576656341553, -0.4432007670402527, -3.302042750874534e-05, -0.2744150161743164, -0.09251919388771057, -0.12838080525398254, -0.0026726736687123775, -1.5916634798049927, -0.0306292325258255, -2.4610657691955566, -5.61460001335945e-05, -0.00027569307712838054, -8.702239938429557e-06, -0.09234367311000824, 0.0, -0.00039915222441777587, -0.08822548389434814, -1.704254388809204, -0.006305798422545195, -0.013362965546548367], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.BinaryCrossentropy(), optimizer=keras.optimizers.SGD(0.1))", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "()", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "0", ".", "1", "))", "\n"], "logprobs": [-0.0013463966315612197, -0.031936775892972946, -0.06419172883033752, -1.0697460174560547, -0.03158004581928253, -6.246371776796877e-05, -0.0009384519071318209, -1.5616295058862306e-05, -6.472854875028133e-05, -0.7560757398605347, -5.8412379075889476e-06, -4.23184028477408e-05, -0.11101964861154556, -0.0004450284468475729, -0.04050559177994728, -0.022087644785642624, -0.0014697236474603415, -2.038458114839159e-05, -5.566918844124302e-05, -2.8609820219571702e-05, -1.728519782773219e-05, -0.008846140466630459, -0.00018439977429807186, -0.04247083514928818, -2.322526216506958, -0.0007825411157682538, -1.014209270477295, -0.13357555866241455, -0.00967444945126772], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0029872101731598377, -0.00013350549852475524, -0.015851791948080063, -0.010780074633657932, -0.00022706791060045362, -0.0012498432770371437, -0.007980367168784142, -0.0001070442158379592, -5.602820692729438e-06, -0.008186357095837593, -0.7223671674728394, -0.005268617533147335, -0.15024138987064362, -0.03335445374250412, -0.007875817827880383], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "\n"], "logprobs": [-0.07847081124782562, -0.16107796132564545, -0.0010490872664377093, -0.03521111235022545, -0.0012276978231966496, -0.011346337385475636, -0.0004253674705978483, -0.016509704291820526, -1.3648872375488281, -0.6930018067359924, -0.0001110968878492713, -0.015665095299482346], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00014065706636756659, -6.603976362384856e-05, -0.0010440857149660587, -0.4858414828777313, -0.002529875375330448, -0.0016975292237475514, -9.536738616588991e-07, -1.7404405298293568e-05, -5.960462772236497e-07, -0.0037595797330141068, -0.026070745661854744, -0.00045908879837952554, -0.0003698380314745009, -0.29586440324783325, -0.007949736900627613, -1.0251946150674485e-05, -8.106198947643861e-06, -0.021375983953475952, -0.0030347504653036594], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.012806553393602371, -0.00011538793478393927, -0.00037424711626954377, -0.001115891383960843, -4.768370445162873e-07, -0.0005657264264300466, -0.0018745961133390665, -1.4424220353248529e-05, -0.0007570500019937754, -0.001081477734260261], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.008022230118513107, -0.003061015624552965, -0.000571326119825244, -2.5987286790041253e-05, -3.349725011503324e-05, -0.00023576818057335913, -0.2491168975830078, -0.001976324012503028], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=\"AUC=\"+str(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "\"", "A", "UC", "=", "\"", "+", "str", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.14437606930732727, -0.0900292918086052, -0.0043481094762682915, -8.821448318485636e-06, -7.354942499659956e-05, -0.0006852186052128673, -5.245195097813848e-06, -0.12566694617271423, -0.08770812302827835, -1.298638939857483, -1.859038233757019, -0.4410259425640106, -0.00218878872692585, -1.9540674686431885, -0.48419588804244995, -0.47178593277931213, -0.0023642226587980986, -0.0022896521259099245, -0.3971176743507385, -0.0014965059235692024, -5.4834770708112046e-05, -0.06257942318916321, -0.20397914946079254], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='DNN (area = {:.3f})'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "D", "NN", " (", "area", " =", " {:", ".", "3", "f", "})", "'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.11501716077327728, -0.0011788808042183518, -0.0032834685407578945, -1.9073468138230965e-06, -0.00021896349790040404, -0.0010954099707305431, -3.6954811548639555e-06, -0.008144145831465721, -0.059729114174842834, -0.2132517248392105, -2.906991958618164, -0.39048075675964355, -0.4052412211894989, -0.12352975457906723, -0.008028143085539341, -1.6707699298858643, -0.10900525748729706, -0.53003990650177, -0.000933926145080477, -0.0016959820641204715, -0.0006255338666960597, -0.0008790204883553088, -0.00013612773909699172, -0.00011050090688513592, -0.001292823115363717, -0.0009096298599615693, -9.417489309271332e-06, -0.03972042724490166, -0.04176107421517372], "finish_reason": "stop"}, {"text": "set_xlabel('False positive rate')", "tokens": ["set", "_", "xlabel", "('", "False", " positive", " rate", "')", "\n"], "logprobs": [-0.20770002901554108, -0.08447256684303284, -1.0757930278778076, -0.014183194376528263, -0.006592311896383762, -0.07058139890432358, -0.0015586382942274213, -0.0057928538881242275, -0.006421645637601614], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.95898348162882e-05, -5.1020273531321436e-05, -0.00016985881666187197, -0.00022671037004329264, -0.00021598390594590455, -0.00016532962035853416, -1.1920858014491387e-05, -0.0022245917934924364, -0.001209242851473391], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.14311054348945618, -0.00036769305006600916, -0.0021130156237632036, -0.002645209664478898, -0.014917255379259586, -9.643566590966657e-05, -0.014593173749744892, -0.00802459567785263, -0.004461097996681929], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.009077469818294048, -1.8188879489898682, -0.04254120960831642], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.023373788222670555, -0.0054818070493638515, -0.009586726315319538, -0.3660914897918701], "finish_reason": "stop"}], "metrics": {"energy": 1493.5163449211134, "energy_per_token": 5.974065379684453, "time": 37.80119, "time_per_token": 0.15120476}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -2.253108263015747, -0.025726674124598503], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.1201642751693726, -0.00664181262254715], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(0.1), metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "0", ".", "1", ")", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0014667478390038013, -0.021954122930765152, -0.07241862267255783, -0.4491865038871765, -0.0031350532080978155, -3.6238969187252223e-05, -0.00013720047718379647, -8.380061626667157e-05, -0.000248401309363544, -0.0006576997111551464, -0.024607336148619652, -0.028294356539845467, -0.0026974028442054987, -2.9205850296420977e-05, -8.177422569133341e-05, -8.821448318485636e-06, -2.932505594799295e-05, -0.014417052268981934, -0.0003313469351269305, -0.013957157731056213, -2.6811606884002686, -0.0012312696781009436, -0.9060952663421631, -1.018362283706665, -0.0030126445926725864, -0.04708511009812355, -0.17165036499500275, -0.025675438344478607, -0.010440257377922535, -0.014385678805410862], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.003022152464836836, -0.00014530557382386178, -0.01719413511455059, -0.009922701865434647, -0.00025185750564560294, -0.001165783149190247, -0.007621141150593758, -9.727005090098828e-05, -5.006777428206988e-06, -0.007614634465426207, -0.7555253505706787, -0.004042905755341053, -0.3081534504890442, -0.15356488525867462, -0.21684466302394867, -0.4757646322250366, -0.022300077602267265, -0.004577277693897486, -0.1448361575603485, -0.007498215883970261, -0.020531972870230675], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.06603602319955826, -0.12101268023252487, -0.0010567086283117533, -0.04741690680384636, -0.0012329365126788616, -0.009725450538098812, -0.0004049911512993276, -0.01621088758111, -0.2914760410785675], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00015615197480656207, -8.284702198579907e-05, -0.0009701313101686537, -0.45107126235961914, -0.0025170331355184317, -0.0013523490633815527, -1.0728830375228426e-06, -1.5020257706055418e-05, -5.960462772236497e-07, -0.0031604839023202658, -0.03292960301041603, -0.0003871168300975114, -0.00036459474358707666, -0.27223894000053406, -0.005810868460685015, -1.2993727978027891e-05, -1.1444026313256472e-05, -0.02293500490486622, -0.00282187107950449], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.015380348078906536, -0.00012015574611723423, -0.00031144535751082003, -0.0017296605510637164, -4.768370445162873e-07, -0.0006189814303070307, -0.00128020322881639, -1.9192511899746023e-05, -0.0007064230740070343, -0.0010881462367251515], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.009334255941212177, -0.002222926588729024, -0.0004407388041727245, -2.372236667724792e-05, -2.90866428258596e-05, -0.00020215852418914437, -0.2606917917728424, -0.00187923654448241], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'ROC curve (AUC = {auc_score:.2f})')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "R", "OC", " curve", " (", "A", "UC", " =", " {", "auc", "_", "score", ":", ".", "2", "f", "})", "')", "\n"], "logprobs": [-0.14086198806762695, -0.04927274212241173, -0.003604820929467678, -1.2159273865108844e-05, -9.405170567333698e-05, -0.0007346553611569107, -3.933898824470816e-06, -0.09225519001483917, -0.072821706533432, -1.3635022640228271, -0.22829905152320862, -0.22486820816993713, -0.4689016044139862, -0.0007575264316983521, -0.25911471247673035, -0.10888295620679855, -1.106044888496399, -0.0017841625958681107, -0.17462220788002014, -0.004711715970188379, -0.025503814220428467, -0.0006208876147866249, -1.8000440832111053e-05, -0.11823540180921555, -0.019459648057818413, -0.17280137538909912, -0.0010209829779341817, -0.01828797161579132, -0.02178535982966423, -0.2715473473072052], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (AUC = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "A", "UC", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.1627962738275528, -0.001176975667476654, -0.0035012392327189445, -2.7418097943154862e-06, -0.0002946419408544898, -0.0009915679693222046, -4.172316494077677e-06, -0.009864392690360546, -0.04620368033647537, -0.25942736864089966, -1.6327786445617676, -0.0029841200448572636, -0.06487055122852325, -0.22332197427749634, -1.9057180881500244, -0.0012357940431684256, -0.11637633293867111, -0.575018584728241, -0.022954577580094337, -1.3947389561508317e-05, -0.16168245673179626, -9.536288416711614e-05, -0.0012400802224874496, -0.006071338430047035, -0.02186315506696701, -4.768370445162873e-07, -0.002916489727795124, -1.0609570381348021e-05, -0.102591373026371, -0.0732063427567482], "finish_reason": "stop"}, {"text": "set_xlabel('False positive rate')", "tokens": ["set", "_", "xlabel", "('", "False", " positive", " rate", "')", "\n"], "logprobs": [-0.17032894492149353, -0.1031528189778328, -0.9923248291015625, -0.017081288620829582, -0.009026790037751198, -0.08564683049917221, -0.0016533766174688935, -0.006397482007741928, -0.003907308913767338], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.815939246327616e-05, -5.61460001335945e-05, -0.00014137222024146467, -0.00019965562387369573, -0.00022206225548870862, -0.0001793938863556832, -1.5258672647178173e-05, -0.0021784401033073664, -0.0011201781453564763], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.11448637396097183, -0.0003756771038752049, -0.002303329762071371, -0.0025782696902751923, -0.01146690547466278, -0.00010251473577227443, -0.014961295761168003, -0.008745581842958927, -0.0037113612052053213], "finish_reason": "stop"}, {"text": "legend(loc=\"lower right\")", "tokens": ["legend", "(", "loc", "=", "\"", "lower", " right", "\"", ")", "\n"], "logprobs": [-0.0062088933773338795, -0.14179563522338867, -0.0065668500028550625, -1.9519057273864746, -0.36590680480003357, -0.14929577708244324, -0.021892663091421127, -3.6954195820726454e-05, -0.01886216551065445, -0.04760163277387619], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.020963173359632492, -0.005788705311715603, -0.01210073847323656, -0.3317568600177765], "finish_reason": "stop"}], "metrics": {"energy": 1355.6507943649294, "energy_per_token": 5.720045545843584, "time": 36.399277, "time_per_token": 0.15358344725738396}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -1.5592408180236816], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.5737508535385132, -0.9515169858932495], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.1), metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "1", ")", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0011118428083136678, -0.027168842032551765, -0.065475232899189, -0.4341975748538971, -0.002557580592110753, -3.0874729418428615e-05, -9.881961887003854e-05, -9.679325739853084e-05, -0.00025006983196362853, -0.0005306981038302183, -0.034531306475400925, -0.030556393787264824, -0.0033912311773747206, -3.862306402879767e-05, -7.64102369430475e-05, -1.0251946150674485e-05, -3.1709168979432434e-05, -0.018463412299752235, -0.00028391621890477836, -0.014883430674672127, -0.16671718657016754, -7.629365427419543e-06, -1.0728830375228426e-06, -0.008826407603919506, -0.13432344794273376, -0.00022265815641731024, -0.8884413838386536, -1.1854417324066162, -0.0030793175101280212, -0.07453565299510956, -0.12795515358448029, -0.034773580729961395, -0.009750832803547382, -0.011911572888493538], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.002809151541441679, -0.00015805903240107, -0.014540893025696278, -0.010775947012007236, -0.0002821285743266344, -0.0010553987231105566, -0.008055342361330986, -9.035655966727063e-05, -4.887569048150908e-06, -0.008395970799028873, -0.7077726721763611, -0.005616597831249237, -0.1423572152853012, -0.03912438824772835, -0.007696853019297123], "finish_reason": "stop"}, {"text": " model(X_test).numpy().round()", "tokens": [" model", "(", "X", "_", "test", ")", ".", "numpy", "()", ".", "round", "()", "\n"], "logprobs": [-0.07352714985609055, -1.7950973510742188, -0.006353062577545643, -0.017448846250772476, -0.0012423424050211906, -0.014033331535756588, -0.8046237230300903, -0.002561028813943267, -0.0013509204145520926, -1.7035752534866333, -3.2264115810394287, -0.029120266437530518, -0.14708414673805237], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00011073929636040702, -6.41325386823155e-05, -0.0009641766082495451, -0.4645155668258667, -0.002761481562629342, -0.0017077637603506446, -1.0728830375228426e-06, -1.9430925021879375e-05, -4.768370445162873e-07, -0.0028442188631743193, -0.029012462124228477, -0.00047052756417542696, -0.00038223114097490907, -0.308199018239975, -0.009055024944245815, -1.07287787614041e-05, -1.3708974620385561e-05, -0.025738175958395004, -0.0024737492203712463], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.014056840911507607, -0.00012194366718176752, -0.0003502947511151433, -0.0011511372867971659, -4.768370445162873e-07, -0.0006005152827128768, -0.0019672818016260862, -1.3112935448589269e-05, -0.0006744970451109111, -0.0011836434714496136], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.00839266087859869, -0.002655196702107787, -0.0005390383303165436, -2.3007127310847864e-05, -2.7656173188006505e-05, -0.00024911639047786593, -0.2586532533168793, -0.0015707785496488214], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)  # Plot ROC curve using the axes object", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "  ", "#", " Plot", " R", "OC", " curve", " using", " the", " axes", " object", "\n"], "logprobs": [-0.10254758596420288, -0.07001159340143204, -0.004518299363553524, -6.794906312279636e-06, -0.00013171759201213717, -0.0007273888913914561, -4.291525328881107e-06, -0.10582587122917175, -0.07293541729450226, -0.2840096056461334, -0.19537997245788574, -0.0002733095607254654, -0.11999322474002838, -0.14398637413978577, -0.3041664958000183, -0.012599158100783825, -0.07149477303028107, -0.07009673118591309, -3.838465272565372e-05, -0.08002568781375885, -5.61460001335945e-05, -0.001725019421428442, -0.0039321258664131165, -0.014618080109357834, -4.768370445162873e-07, -0.0024528198409825563, -5.483612312673358e-06, -0.006451019551604986, -1.3823299407958984, -0.00012063252506777644, -0.15851642191410065, -2.8163113594055176, -4.9828242481453344e-05, -0.008060899563133717, -3.443406343460083, -0.4641091525554657, -0.7500557899475098, -0.008043279871344566, -0.02619617059826851], "finish_reason": "stop"}, {"text": "set_xlim([0.0, 1.0])", "tokens": ["set", "_", "x", "lim", "([", "0", ".", "0", ",", " ", "1", ".", "0", "])", "\n"], "logprobs": [-2.2439799308776855, -0.19909551739692688, -0.8868480920791626, -0.008494318462908268, -0.002845288719981909, -0.07472240924835205, -0.07294826954603195, -0.0005353448214009404, -0.004717173986136913, -6.48477507638745e-05, -6.723177648382261e-05, -0.001642665360122919, -0.00044204952428117394, -0.0031634545885026455, -0.019240764901041985], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.2924250662326813, -0.0828973799943924, -0.6308926939964294, -0.01043978612869978, -0.0029488196596503258, -5.9960475482512265e-05, -0.0333365835249424, -0.01392635703086853, -0.01723901368677616], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.9828242481453344e-05, -5.817244164063595e-05, -0.0001161031104857102, -0.0002108589978888631, -0.00020990552729927003, -0.0001967951684491709, -1.2397689715726301e-05, -0.002409533131867647, -0.0009232072625309229], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.11447223275899887, -0.00040236959466710687, -0.00290840701200068, -0.003234514268115163, -0.01289164088666439, -0.00012814177898690104, -0.016154000535607338, -0.007288296241313219, -0.004007405135780573], "finish_reason": "stop"}, {"text": "legend(loc=\"lower right\")", "tokens": ["legend", "(", "loc", "=", "\"", "lower", " right", "\"", ")", "\n"], "logprobs": [-0.00621055206283927, -0.12180020660161972, -0.008546088822185993, -2.1459226608276367, -0.3097779154777527, -0.12456582486629486, -0.017593394964933395, -3.969590397900902e-05, -0.01722448505461216, -0.04452401027083397], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.01945275068283081, -0.004988604225218296, -0.011949975043535233, -0.3669416606426239], "finish_reason": "stop"}], "metrics": {"energy": 1115.849686902999, "energy_per_token": 5.049093605895924, "time": 40.43392, "time_per_token": 0.1829589140271493}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -1.5592408180236816], "finish_reason": "stop"}, {"text": " keras.Sequential([keras.layers.Dense(1, activation='sigmoid')])", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "='", "s", "igmoid", "')", "])", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.5737508535385132, -0.5046671628952026, -1.2397689715726301e-05, -0.007933178916573524, -2.95634672511369e-05, -0.05540643632411957, -1.1920922133867862e-06, -0.0004913791781291366, -0.6029357314109802, -0.41288861632347107, -0.5044819712638855, -0.43189942836761475, -0.00502750976011157, -9.60780744208023e-05, -0.9211882948875427, -0.022340530529618263, -0.007025538943707943], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.1))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "1", "))", "\n"], "logprobs": [-0.0013463966315612197, -0.031936775892972946, -0.06419172883033752, -0.42984578013420105, -0.0023916945792734623, -3.93382906622719e-05, -9.7508447652217e-05, -7.068861305015162e-05, -0.00025817399728111923, -0.0004681444843299687, -0.030598480254411697, -0.03509901463985443, -0.0028656155336648226, -3.2782016205601394e-05, -8.380061626667157e-05, -8.583032467868179e-06, -2.825220326485578e-05, -0.015465804375708103, -0.0003457663697190583, -0.014943445101380348, -0.21613769233226776, -1.0371154530730564e-05, -1.6689286894688848e-06, -0.007777645718306303, -0.12963734567165375, -0.00022599527437705547, -0.9982720017433167, -0.2617446184158325, -0.01192559115588665], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.00233556074090302, -0.00011765264935093, -0.012169046327471733, -0.011295773088932037, -0.00024911639047786593, -0.0011954312212765217, -0.00821662601083517, -9.97731985989958e-05, -5.364403477869928e-06, -0.00678236735984683, -0.6823372840881348, -0.005171493627130985, -0.12381871044635773, -0.03931993618607521, -0.008636504411697388], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.06494205445051193, -0.1473437398672104, -0.0007326302584260702, -0.0357641726732254, -0.0012897277483716607, -0.011220214888453484, -0.0002847504511009902, -0.01342424750328064, -0.2807503640651703], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00011395759065635502, -6.711257447022945e-05, -0.0008624648326076567, -0.4773445725440979, -0.0028639512602239847, -0.0015466167824342847, -8.344646857949556e-07, -1.3947389561508317e-05, -5.960462772236497e-07, -0.003180447733029723, -0.030362362042069435, -0.00039593485416844487, -0.0004828002711292356, -0.33634328842163086, -0.007713414262980223, -1.2516897186287679e-05, -1.2159273865108844e-05, -0.022931277751922607, -0.0024586468935012817], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.013035203330218792, -0.00010156115604331717, -0.00037853704998269677, -0.0011257746955379844, -3.576278118089249e-07, -0.0005598884890787303, -0.0023436478804796934, -1.6093124941107817e-05, -0.0007364421617239714, -0.0008793777669779956], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.008368780836462975, -0.002531896810978651, -0.00044109628652222455, -2.8729025871143676e-05, -3.0040289857424796e-05, -0.00027044929447583854, -0.257366806268692, -0.0014004433760419488], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC=%0.3f' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", "=%", "0", ".", "3", "f", "'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.11941312253475189, -0.06681284308433533, -0.0034050126560032368, -8.22540732769994e-06, -0.00010406429646536708, -0.0006576997111551464, -4.0531076592742465e-06, -0.11411154270172119, -0.07868172973394394, -0.22626625001430511, -2.1398637294769287, -0.0008417400531470776, -2.3053507804870605, -0.5952555537223816, -0.00010239553375868127, -1.3348615169525146, -0.0027260545175522566, -0.003969766199588776, -0.0692826360464096, -0.08048775792121887, -1.7881377516459906e-06, -0.005306919105350971, -1.0490362910786644e-05, -0.008648676797747612, -0.23087573051452637], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='Dummy Classifier (AUC = {:0.2f})'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "D", "ummy", " Class", "ifier", " (", "A", "UC", " =", " {:", "0", ".", "2", "f", "})", "'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.11099051684141159, -0.001415918697603047, -0.004253863822668791, -1.4305104514278355e-06, -0.00029571453342214227, -0.0009036748087964952, -3.576272320060525e-06, -0.011355648748576641, -0.056575097143650055, -0.24834859371185303, -2.782257080078125, -1.4533427953720093, -2.1798765659332275, -0.005145639646798372, -1.420914888381958, -1.5623183250427246, -0.03289603814482689, -0.06803719699382782, -0.5416420698165894, -0.8183721303939819, -1.883488948806189e-05, -0.2534714937210083, -0.0008684201166033745, -0.010221279226243496, -0.0011206544004380703, -0.00036125810584053397, -0.00022754464589525014, -0.0002735478919930756, -0.019840123131871223, -0.00598554965108633, -0.00013040646445006132, -0.05908982455730438, -0.03931042179465294], "finish_reason": "stop"}, {"text": "set(xlabel='False positive rate', ylabel='True positive rate', title='ROC curve')", "tokens": ["set", "(", "xlabel", "='", "False", " positive", " rate", "'", ",", " y", "label", "='", "True", " positive", " rate", "'", ",", " title", "='", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.2884364128112793, -2.5446341037750244, -0.8167386054992676, -0.010682187043130398, -0.005520930048078299, -0.04355301707983017, -0.0006032554083503783, -0.0064980401657521725, -6.806619057897478e-05, -0.028301425278186798, -2.7418097943154862e-06, -0.002530351048335433, -0.0002351722796447575, -0.00045122456504032016, -2.312633478140924e-05, -0.167000874876976, -0.00019488819816615433, -0.03322139009833336, -0.007002573926001787, -0.0028518266044557095, -0.00014137222024146467, -0.03618161380290985, -0.01377998385578394, -0.01798289455473423], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.660974445869215e-05, -4.7444173105759546e-05, -0.0001357701694360003, -0.00023445718397852033, -0.00021562635083682835, -0.00017021637177094817, -1.3470558769768104e-05, -0.001636119675822556, -0.001046229270286858], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.22495228052139282, -0.00038354191929101944, -0.0036753739695996046, -0.0029709271620959044, -0.014313997700810432, -7.772143726469949e-05, -0.01645459234714508, -0.009425899013876915, -0.0050110225565731525], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.008826407603919506, -0.12226931750774384, -0.0094956886023283, -0.12875840067863464, -0.4075731933116913, -0.0026497275102883577, -0.010332190431654453, -0.04645600542426109], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.02570134773850441, -0.0054320115596055984, -0.011404089629650116], "finish_reason": "stop"}], "metrics": {"energy": 1364.2794709787381, "energy_per_token": 5.614318810612091, "time": 36.914627, "time_per_token": 0.15191204526748972}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=123)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", "2", "3", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -0.09028865396976471, -3.814689989667386e-06, -6.9141146923357155e-06, -0.007902429439127445, -1.7236425876617432, -1.6131973266601562, -0.2954527735710144, -0.5451163053512573, -0.012765007093548775], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.9648059606552124, -3.981510963058099e-05, -3.123234637314454e-05, -1.5497195136049413e-06, 0.0, -0.4990617334842682, -0.009059041738510132], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(lr=0.1), metrics='accuracy')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "1", ")", ",", " metrics", "='", "accuracy", "')", "\n"], "logprobs": [-0.0011269653914496303, -0.0227799229323864, -0.0699348971247673, -0.472261518239975, -0.002592062344774604, -2.9205850296420977e-05, -7.712543447269127e-05, -6.735097849741578e-05, -0.00023648326168768108, -0.00046659549116156995, -0.025521710515022278, -0.022337382659316063, -0.0025684009306132793, -2.884823152271565e-05, -6.532455881824717e-05, -1.5020257706055418e-05, -3.158996332786046e-05, -0.01383089367300272, -0.00024279984063468874, -0.014161568135023117, -2.617029905319214, -0.0026192902587354183, -0.1275061070919037, -0.0008056493825279176, -0.9797711372375488, -1.1323046684265137, -0.0024135764688253403, -0.04814913496375084, -2.9117302894592285, -0.3858304023742676, -0.002248499309644103, -0.01431458443403244], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0040643950924277306, -0.00014053787162993103, -0.012150321155786514, -0.01141811441630125, -0.0002172949316445738, -0.0012416280806064606, -0.008091408759355545, -9.572047565598041e-05, -4.0531076592742465e-06, -0.00785937812179327, -0.604623556137085, -0.0032038569916039705, -0.298570841550827, -0.12765364348888397, -1.4798073768615723, -0.02173520252108574, -0.004876861814409494, -0.05525360256433487, -0.008782805874943733, -0.023792823776602745], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0656382292509079, -0.14670106768608093, -0.0008538890979252756, -0.03848382830619812, -0.0010758809512481093, -0.010004849173128605, -0.0003844952443614602, -0.012002980336546898, -0.2969130277633667], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00015496007108595222, -6.55629628454335e-05, -0.001046467456035316, -1.3518589735031128, -0.0009285667329095304, -0.0012204349040985107, -1.0728830375228426e-06, -2.7656173188006505e-05, -1.0728830375228426e-06, -0.004785987548530102, -0.028007851913571358, -0.0004060635983478278, -0.0004898302140645683, -0.22160810232162476, -0.0027862084098160267, -1.5616295058862306e-05, -2.2053474822314456e-05, -0.06005315110087395, -0.003295112634077668], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.011682901531457901, -0.00013958434283267707, -0.00040892345714382827, -0.0010789770167320967, -4.768370445162873e-07, -0.0006687788409180939, -0.0021051643416285515, -2.2291887944447808e-05, -0.0006641327636316419, -0.001042656716890633], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.0076333265751600266, -0.002899135695770383, -0.0004051103023812175, -2.1815061700181104e-05, -3.290122185717337e-05, -0.00022492263815365732, -0.2407963126897812, -0.0016160060185939074], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'AUC={auc_score:.2f}')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "A", "UC", "={", "auc", "_", "score", ":", ".", "2", "f", "}", "')", "\n"], "logprobs": [-0.10347533971071243, -0.08142278343439102, -0.004098706413060427, -1.156323378381785e-05, -0.00010394509445177391, -0.000977038755081594, -3.576272320060525e-06, -0.10646073520183563, -0.07972808927297592, -1.2113499641418457, -0.20999538898468018, -0.23559215664863586, -0.9068862795829773, -0.002703822683542967, -1.27433180809021, -0.09140389412641525, -0.00034957972820848227, -1.9430925021879375e-05, -0.10279813408851624, -0.01735652983188629, -0.7303338646888733, -0.001639213995076716, -0.02720608189702034, -0.0013083001831546426, -0.3196946382522583], "finish_reason": "stop"}, {"text": "set(title='ROC curve', xlabel='False positive rate', ylabel='True positive rate')", "tokens": ["set", "(", "title", "='", "R", "OC", " curve", "'", ",", " x", "label", "='", "False", " positive", " rate", "'", ",", " y", "label", "='", "True", " positive", " rate", "')", "\n"], "logprobs": [-2.1535379886627197, -1.246821403503418, -0.890112578868866, -0.07799997925758362, -0.003904815064743161, -3.671578815556131e-05, -0.012283862568438053, -0.014808613806962967, -0.00017832119192462415, -0.04477664455771446, -0.00018416139937471598, -0.005621102638542652, -0.00650052772834897, -0.024854816496372223, -0.0004836343287024647, -0.00402379035949707, -5.686121585313231e-05, -0.019149431958794594, -9.536738616588991e-07, -0.0011854295153170824, -0.000176652567461133, -0.00030310326837934554, -2.372236667724792e-05, -0.015833605080842972, -0.020945079624652863], "finish_reason": "stop"}, {"text": "set(xlabel='False positive rate', ylabel='True positive rate', title='ROC curve')", "tokens": ["set", "(", "xlabel", "='", "False", " positive", " rate", "'", ",", " y", "label", "='", "True", " positive", " rate", "'", ",", " title", "='", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.23848669230937958, -2.550363779067993, -0.6343804597854614, -0.008680704049766064, -0.0061831846833229065, -0.050424788147211075, -0.0005259322933852673, -0.006002732086926699, -6.711257447022945e-05, -0.05916814133524895, -1.9073468138230965e-06, -0.0031881716568022966, -0.00018416139937471598, -0.0004864939546678215, -2.2649508537142538e-05, -0.1276729553937912, -0.0001728385395836085, -0.0423969104886055, -0.007105793803930283, -0.0028385131154209375, -0.0001209901092806831, -0.04018901288509369, -0.012921414338052273, -0.01678944192826748], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.708655978902243e-05, -4.589452510117553e-05, -0.00015948931104503572, -0.00016509123088326305, -0.00024244230007752776, -0.00018261195509694517, -1.2636104656849056e-05, -0.0020866068080067635, -0.0008043391280807555], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.16225051879882812, -0.00031406714697368443, -0.003986983094364405, -0.0031526407692581415, -0.012014876119792461, -9.583967766957358e-05, -0.016607023775577545, -0.008758108131587505, -0.006760699674487114], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.005199362989515066, -0.15309815108776093, -0.006613628473132849, -0.11070360243320465, -0.3413645923137665, -0.0019133847672492266, -0.00876448955386877, -0.03701700642704964], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.020409340038895607, -0.004783377517014742, -0.012654365040361881, -0.3107026517391205], "finish_reason": "stop"}], "metrics": {"energy": 1529.3530186338426, "energy_per_token": 6.093039914875867, "time": 40.83002, "time_per_token": 0.16266940239043823}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -1.5592408180236816], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.1201642751693726, -0.00664181262254715], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.001))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "0", "1", "))", "\n"], "logprobs": [-0.0014667478390038013, -0.021954122930765152, -0.07241862267255783, -0.4491865038871765, -0.0031350532080978155, -3.6238969187252223e-05, -0.00013720047718379647, -8.380061626667157e-05, -0.000248401309363544, -0.0006576997111551464, -0.024607336148619652, -0.028294356539845467, -0.0026974028442054987, -2.9205850296420977e-05, -8.177422569133341e-05, -8.821448318485636e-06, -2.932505594799295e-05, -0.014417052268981934, -0.0003313469351269305, -0.013957157731056213, -0.1750876009464264, -6.318072337307967e-06, -1.1920922133867862e-06, -0.006965757813304663, -0.12377741932868958, -0.0001902399235405028, -1.02069091796875, -0.8963385224342346, -0.5677517056465149, -0.5659007430076599, -0.011757717467844486], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.002089223824441433, -0.00014351768186315894, -0.01405919250100851, -0.009792976081371307, -0.0003073934931308031, -0.0012978235026821494, -0.008306952193379402, -0.00011538793478393927, -8.821448318485636e-06, -0.007485555484890938, -0.6828015446662903, -0.003871447406709194, -0.30011069774627686, -2.5750908851623535, -0.019048266112804413, -0.006200955715030432, -0.03488871082663536, -0.005222131963819265, -0.01639818586409092], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.07938437908887863, -0.1829002946615219, -0.0011744751827791333, -0.040419500321149826, -0.0012482955353334546, -0.008672431111335754, -0.00032574593205936253, -0.01760651357471943, -0.30905675888061523], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0001110968878492713, -6.675497570540756e-05, -0.0012404375011101365, -1.49324369430542, -0.0010790961096063256, -0.0013999671209603548, -9.536738616588991e-07, -3.194758028257638e-05, -1.0728830375228426e-06, -0.0036390291061252356, -0.03400740772485733, -0.0003601856005843729, -0.0006180283380672336, -0.23183181881904602, -0.0025754161179065704, -1.3947389561508317e-05, -9.417489309271332e-06, -0.056147828698158264, -0.003286676714196801], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.013261565938591957, -0.00010644822759786621, -0.0003064401389565319, -0.001143040368333459, -4.768370445162873e-07, -0.0006093314150348306, -0.0016254083020612597, -1.883488948806189e-05, -0.0006647284608334303, -0.0010362261673435569], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.010465267114341259, -0.002776816952973604, -0.0005222387262620032, -2.3483953555114567e-05, -3.1709168979432434e-05, -0.0001934579631779343, -0.23377655446529388, -0.0019901248160749674], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.10154057294130325, -0.08813565224409103, -0.0037537605967372656, -8.702239938429557e-06, -9.929640509653836e-05, -0.000739539333153516, -5.960446742392378e-06, -0.07895650714635849, -0.07575700432062149, -0.33224403858184814, -0.20056484639644623, -0.00022671037004329264, -0.12177962064743042, -0.12484153360128403, -0.3623344600200653, -0.013709669932723045, -0.07829775661230087, -2.600539445877075, -0.09194272756576538, -0.00010585224663373083, -0.0013906818348914385, -0.0032940434757620096, -0.010083921253681183, -5.960462772236497e-07, -0.002131572924554348, -5.722029527532868e-06, -0.006656852085143328, -0.2890841066837311], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=\"Keras AUC: {:.2f}\".format(auc_score), lw=2)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "\"", "K", "eras", " A", "UC", ":", " {:", ".", "2", "f", "}\"", ".", "format", "(", "auc", "_", "score", ")", ",", " l", "w", "=", "2", ")", "\n"], "logprobs": [-0.08087077736854553, -0.0013448490062728524, -0.003102135146036744, -1.311301275563892e-06, -0.0002273062855238095, -0.0008736607851460576, -4.291525328881107e-06, -0.014188835397362709, -0.05514056980609894, -1.7428600788116455, -1.0448675155639648, -2.0147719383239746, -0.011424360796809196, -1.4673494100570679, -0.014768442139029503, -1.3758091926574707, -0.28772297501564026, -0.052523475140333176, -1.1389113664627075, -0.0013571109157055616, -0.00680782413110137, -0.0006847421173006296, -0.00026174934464506805, -0.00015639036428183317, -0.0013385392958298326, -0.0015040049329400063, -1.156323378381785e-05, -2.6589629650115967, -0.003725732211023569, -1.3895676136016846, -1.728519782773219e-05, -0.001967876683920622, -0.2388196587562561, -0.2051580250263214, -0.04947221651673317], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-2.3137478828430176, -0.7271665930747986, -0.08107877522706985, -0.23921285569667816, -0.06481736898422241, -0.004262647591531277, -0.046838290989398956, -0.03357822448015213], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-3.814624506048858e-05, -4.3987260141875595e-05, -0.00011443436960689723, -0.0002108589978888631, -0.0002321927313460037, -0.000161038784426637, -1.4305012882687151e-05, -0.0017188312485814095, -0.0011811431031674147], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.13647131621837616, -0.00043299360550008714, -0.0035614653024822474, -0.002576248487457633, -0.011232002638280392, -0.00011407678539399058, -0.013500109314918518, -0.007675086613744497, -0.005457739345729351], "finish_reason": "stop"}, {"text": "legend(loc='best')", "tokens": ["legend", "(", "loc", "='", "best", "')", "\n"], "logprobs": [-0.005406282842159271, -0.11262713372707367, -0.004832493141293526, -0.13606344163417816, -1.159956693649292, -0.01818344183266163, -0.04963432997465134], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.019133059307932854, -0.005629874300211668, -0.012869752012193203, -0.3400757908821106], "finish_reason": "stop"}], "metrics": {"energy": 1236.4888363409048, "energy_per_token": 5.544792988075806, "time": 35.962784, "time_per_token": 0.16126808968609865}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -0.09028865396976471, -3.814689989667386e-06, -6.9141146923357155e-06, -0.007902429439127445, -0.5910323262214661, -0.043575387448072433, -0.03045637533068657, -0.01692248322069645], "finish_reason": "stop"}, {"text": " keras.Sequential(", "tokens": [" k", "eras", ".", "S", "equ", "ential", "(", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -2.2312369346618652, -0.24200035631656647], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.01))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "1", "))", "\n"], "logprobs": [-0.0014667478390038013, -0.021954122930765152, -0.07241862267255783, -0.4491865038871765, -0.0031350532080978155, -3.6238969187252223e-05, -0.00013720047718379647, -8.380061626667157e-05, -0.000248401309363544, -0.0006576997111551464, -0.024607336148619652, -0.028294356539845467, -0.0026974028442054987, -2.9205850296420977e-05, -8.177422569133341e-05, -8.821448318485636e-06, -2.932505594799295e-05, -0.014417052268981934, -0.0003313469351269305, -0.013957157731056213, -0.1750876009464264, -6.318072337307967e-06, -1.1920922133867862e-06, -0.006965757813304663, -0.12377741932868958, -0.0001902399235405028, -1.02069091796875, -0.7985449433326721, -0.4086247980594635, -0.010185997933149338], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1000, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.002089223824441433, -0.00014351768186315894, -0.01405919250100851, -0.009792976081371307, -0.0003073934931308031, -0.0012978235026821494, -0.008306952193379402, -0.00011538793478393927, -8.821448318485636e-06, -0.007485555484890938, -0.6828015446662903, -0.003871447406709194, -0.30011069774627686, -0.12488793581724167, -0.2340657263994217, -0.958029568195343, -0.090569406747818, -0.018786007538437843, -0.005284033250063658, -0.23930726945400238, -0.008372682146728039, -0.017946012318134308], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.07938437908887863, -0.1829002946615219, -0.0011744751827791333, -0.040419500321149826, -0.0012482955353334546, -0.008672431111335754, -0.00032574593205936253, -0.01760651357471943, -0.30905675888061523], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0001110968878492713, -6.675497570540756e-05, -0.0012404375011101365, -1.49324369430542, -0.0010790961096063256, -0.0013999671209603548, -9.536738616588991e-07, -3.194758028257638e-05, -1.0728830375228426e-06, -0.0036390291061252356, -0.03400740772485733, -0.0003601856005843729, -0.0006180283380672336, -0.23183181881904602, -0.0025754161179065704, -1.3947389561508317e-05, -9.417489309271332e-06, -0.056147828698158264, -0.003286676714196801], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.013261565938591957, -0.00010644822759786621, -0.0003064401389565319, -0.001143040368333459, -4.768370445162873e-07, -0.0006093314150348306, -0.0016254083020612597, -1.883488948806189e-05, -0.0006647284608334303, -0.0010362261673435569], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.010465267114341259, -0.002776816952973604, -0.0005222387262620032, -2.3483953555114567e-05, -3.1709168979432434e-05, -0.0001934579631779343, -0.23377655446529388, -0.0019901248160749674], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-2.3604021072387695, -0.003967035561800003, -0.007330543827265501, -0.10493185371160507, -0.013128978200256824, -6.353653589030728e-05, -0.02983187697827816, -0.04526257514953613, -0.2686944305896759], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC=%0.2f' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", "=%", "0", ".", "2", "f", "'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.1151777058839798, -0.00103265349753201, -0.0034538398031145334, -1.4305104514278355e-06, -0.00019012074335478246, -0.0008618692518211901, -4.768360213347478e-06, -0.007902784273028374, -0.04503844305872917, -0.21780036389827728, -2.273989677429199, -0.0026085893623530865, -2.3580217361450195, -0.2895503044128418, -3.361645576660521e-05, -0.5715316534042358, -0.0004884004010818899, -0.010131833143532276, -0.05787594988942146, -0.06602229923009872, -1.311301275563892e-06, -0.007315396331250668, -1.3351351299206726e-05, -0.09138496220111847, -0.06534257531166077], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.22156493365764618, -0.07664976269006729, -0.7442194223403931, -0.010220689699053764, -0.002921244129538536, -4.6132929128361866e-05, -0.029570695012807846, -0.011152432300150394, -0.016604913398623466], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.7801782784517854e-05, -5.757642793469131e-05, -0.00014482879487331957, -0.00027652730932459235, -0.00019369633810129017, -0.00015746307326480746, -1.5020257706055418e-05, -0.0018452061340212822, -0.000988114275969565], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-2.5425682067871094, -0.3454781770706177, -0.053011197596788406, -0.11109250783920288, -0.4278899133205414, -0.0028679927345365286, -0.01729513704776764, -0.023764070123434067], "finish_reason": "stop"}, {"text": "legend(loc='best')", "tokens": ["legend", "(", "loc", "='", "best", "')", "\n"], "logprobs": [-0.007410537451505661, -0.13561417162418365, -0.005854245740920305, -0.12006987631320953, -1.2179896831512451, -0.016898220404982567, -0.046145740896463394], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.018298856914043427, -0.005446950439363718, -0.010835147462785244, -0.3991573750972748], "finish_reason": "stop"}], "metrics": {"energy": 1416.4021926288603, "energy_per_token": 6.587917175017955, "time": 38.888863, "time_per_token": 0.18087843255813954}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=2023)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "2", "0", "2", "3", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -0.09028865396976471, -3.814689989667386e-06, -6.9141146923357155e-06, -0.007902429439127445, -3.5166513919830322, -1.078580617904663, -0.7188809514045715, -0.5368558168411255, -0.04196308180689812, -0.02387477084994316], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.9648059606552124, -3.981510963058099e-05, -3.123234637314454e-05, -1.5497195136049413e-06, 0.0, -1.0732804536819458, -0.32572904229164124], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.binary_crossentropy, optimizer=keras.optimizers.SGD(learning_rate=0.1))", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "1", "))", "\n"], "logprobs": [-0.0011269653914496303, -0.0227799229323864, -0.0699348971247673, -0.9942837953567505, -0.03225574642419815, -3.075552376685664e-05, -0.000974656839389354, -1.4066597032069694e-05, -6.282132380874828e-05, -0.6843965649604797, -2.3245540432981215e-05, -4.2914423829643056e-05, -7.390948667307384e-06, -0.0030115749686956406, -0.05381231755018234, -0.01255230512470007, -0.001950387260876596, -1.8954096958623268e-05, -0.0001599660754436627, -0.0004549183649942279, -4.4225667807040736e-05, -0.009586726315319538, -8.308542601298541e-05, -0.03239551559090614, -0.16406667232513428, -5.483612312673358e-06, -1.6689286894688848e-06, -0.007012872491031885, -0.15832220017910004, -0.000444551813416183, -1.0582681894302368, -0.09005282074213028, -0.008273967541754246], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.002067572670057416, -0.0001387499796692282, -0.01316133327782154, -0.009976759552955627, -0.00024148885859176517, -0.0013011569390073419, -0.007504960056394339, -0.0001289761275984347, -6.556489552167477e-06, -0.009638085961341858, -0.6894962191581726, -0.0040578655898571014, -0.3142211437225342, -0.12749919295310974, -1.3125165700912476, -0.02010444365441799, -0.004831425845623016, -0.05443376675248146, -0.007773623801767826, -0.02575630135834217], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.06949139386415482, -0.1470312476158142, -0.0011133907828480005, -0.03230687603354454, -0.0012261499650776386, -0.009929194115102291, -0.0004325169720686972, -0.013871454633772373, -0.29745227098464966], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00013481661153491586, -6.472854875028133e-05, -0.0010553987231105566, -1.3133056163787842, -0.0008816407644189894, -0.0012468667700886726, -1.0728830375228426e-06, -2.372236667724792e-05, -1.311301275563892e-06, -0.0038950780872255564, -0.0221394170075655, -0.0004568248405121267, -0.0005108005134388804, -0.26748907566070557, -0.0030960743315517902, -1.8000440832111053e-05, -1.156323378381785e-05, -0.05688518285751343, -0.002974255010485649], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.014041912741959095, -0.00014435203047469258, -0.00034195298212580383, -0.001116605824790895, -5.960462772236497e-07, -0.0005276002921164036, -0.002571611199527979, -2.1576648578047752e-05, -0.0006647284608334303, -0.0010767144849523902], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.007032285910099745, -0.002842554822564125, -0.0005479741375893354, -2.169585604860913e-05, -2.90866428258596e-05, -0.0003234816831536591, -0.24403733015060425, -0.0015087660867720842], "finish_reason": "stop"}, {"text": "plot([0, 1], [0, 1], linestyle='dashed')  # Plot the dashed line", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " lin", "estyle", "='", "dashed", "')", "  ", "#", " Plot", " the", " dashed", " line", "\n"], "logprobs": [-0.15060220658779144, -2.5852530002593994, -0.08204532414674759, -0.010651757940649986, -0.03647107258439064, -0.0041090352460742, -0.0006591292913071811, -4.9232225137529895e-05, -0.0025988395791500807, -0.0015922023449093103, -0.0002649671514518559, -0.00023719835735391825, -0.00020037073409184813, -0.006383860483765602, -5.829164365422912e-05, -0.4871842861175537, 0.0, -0.13356377184391022, -2.553478717803955, -0.20633815228939056, -1.6878440380096436, -0.000350175570929423, -0.35140639543533325, -0.26388034224510193, -2.5986664295196533, -0.5954641103744507, -0.40574416518211365], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='Model AUC: {:.4f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "Model", " A", "UC", ":", " {:", ".", "4", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.1263294816017151, -0.0017996320966631174, -0.00398579565808177, -1.9073468138230965e-06, -0.0002456601650919765, -0.0011129144113510847, -5.722029527532868e-06, -0.009551303461194038, -0.06439327448606491, -0.21965081989765167, -1.4781666994094849, -1.9333336353302002, -0.004312976263463497, -1.4106515645980835, -0.2938862442970276, -0.05291317403316498, -2.0060782432556152, -0.016726724803447723, -0.007846958935260773, -0.0004690977220889181, -0.0003103728231508285, -0.0001212284987559542, -0.002757915062829852, -0.0007353700930252671, -8.583032467868179e-06, -0.061656415462493896, -0.05933824181556702], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-1.7717481851577759, -0.8329159617424011, -0.029081707820296288], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-5.98412734689191e-05, -5.018585216021165e-05, -0.00022003613412380219, -0.0002131234941771254, -0.00020072828920092434, -0.00017736769223120064, -1.645074735279195e-05, -0.0023344901856034994, -0.0009141556802205741], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.19000652432441711, -0.0004673104267567396, -0.0026062114629894495, -0.0034016859717667103, -0.011484111659228802, -0.00011145447206217796, -0.014178963378071785, -0.00935456994920969, -0.0048837424255907536], "finish_reason": "stop"}, {"text": "legend(loc='best')", "tokens": ["legend", "(", "loc", "='", "best", "')", "\n"], "logprobs": [-0.007613333407789469, -0.17392881214618683, -0.007740503177046776, -0.17244797945022583, -1.089528203010559, -0.017895428463816643, -0.04360426217317581], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.020064717158675194, -0.005799965001642704, -0.010118616744875908, -0.3914123475551605], "finish_reason": "stop"}], "metrics": {"energy": 1251.889652584076, "energy_per_token": 5.327190010996068, "time": 40.6376, "time_per_token": 0.1729259574468085}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -0.09028865396976471, -3.814689989667386e-06, -6.9141146923357155e-06, -0.007902429439127445, -0.5910323262214661, -0.043575387448072433, -0.03045637533068657, -0.01692248322069645], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.1201642751693726, -0.00664181262254715], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.01))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "1", "))", "\n"], "logprobs": [-0.0014667478390038013, -0.021954122930765152, -0.07241862267255783, -0.4491865038871765, -0.0031350532080978155, -3.6238969187252223e-05, -0.00013720047718379647, -8.380061626667157e-05, -0.000248401309363544, -0.0006576997111551464, -0.024607336148619652, -0.028294356539845467, -0.0026974028442054987, -2.9205850296420977e-05, -8.177422569133341e-05, -8.821448318485636e-06, -2.932505594799295e-05, -0.014417052268981934, -0.0003313469351269305, -0.013957157731056213, -0.1750876009464264, -6.318072337307967e-06, -1.1920922133867862e-06, -0.006965757813304663, -0.12377741932868958, -0.0001902399235405028, -1.02069091796875, -0.7985449433326721, -0.4086247980594635, -0.010185997933149338], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.002089223824441433, -0.00014351768186315894, -0.01405919250100851, -0.009792976081371307, -0.0003073934931308031, -0.0012978235026821494, -0.008306952193379402, -0.00011538793478393927, -8.821448318485636e-06, -0.007485555484890938, -0.7394307255744934, -0.005018732510507107, -0.13149923086166382, -0.040170345455408096, -0.008017499931156635], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "\n"], "logprobs": [-0.0849027931690216, -0.18535929918289185, -0.000995974289253354, -0.04541671648621559, -0.0013430631952360272, -0.008705994114279747, -0.00041738382424227893, -0.014823177829384804, -1.5282143354415894, -0.6226520538330078, -0.00013839241000823677, -0.0179243516176939], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test.ravel(), Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00012182447244413197, -5.9960475482512265e-05, -0.0008361419313587248, -0.4007629454135895, -0.0024726788979023695, -0.0013462775386869907, -1.0728830375228426e-06, -1.8358061424805783e-05, -5.960462772236497e-07, -0.0033908747136592865, -0.03712521493434906, -0.00046456989366561174, -0.00042429505265317857, -1.544712781906128, -0.014586477540433407, -5.0424259825376794e-05, -0.0012756790965795517, -0.004569683223962784, -1.1205610462639015e-05, -1.07287787614041e-05, -0.028533512726426125, -0.002495748223736882], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.011690442450344563, -0.00010775939153973013, -0.00039188333903439343, -0.00105015910230577, -4.768370445162873e-07, -0.0006208876147866249, -0.0013453251449391246, -1.2636104656849056e-05, -0.0007098776986822486, -0.001347468001767993], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.008615231141448021, -0.00250038574449718, -0.0004876854654867202, -2.038458114839159e-05, -3.564294092939235e-05, -0.000198821333469823, -0.2281949669122696, -0.0014574630185961723], "finish_reason": "stop"}, {"text": "plot([0, 1], [0, 1], linestyle='--')", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " lin", "estyle", "='", "--", "')", "\n"], "logprobs": [-0.13778597116470337, -2.939117193222046, -0.09114895761013031, -0.015977919101715088, -0.02878871001303196, -0.0030549545772373676, -0.0007068996201269329, -5.2927523938706145e-05, -0.0030845466535538435, -0.0018479428254067898, -0.0002783149539027363, -0.000276765669696033, -0.00016318420239258558, -0.006280921399593353, -5.113947918289341e-05, -0.4481123685836792, 0.0, -0.11081991344690323, -0.13519138097763062, -0.23194687068462372, -0.18950442969799042], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'Keras (area = {auc_score:.2f})')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "K", "eras", " (", "area", " =", " {", "auc", "_", "score", ":", ".", "2", "f", "})", "')", "\n"], "logprobs": [-0.1489485651254654, -0.0012872274965047836, -0.003746040863916278, -2.145764938177308e-06, -0.00022301571152638644, -0.001128513365983963, -4.172316494077677e-06, -0.011848784983158112, -0.061479758471250534, -1.6611828804016113, -0.4924347400665283, -0.3207705616950989, -2.37308406829834, -0.015074735507369041, -0.9272192120552063, -0.3666346073150635, -0.020879587158560753, -0.05363009124994278, -0.049300432205200195, -0.001258653705008328, -1.0847986231965479e-05, -0.10367707908153534, -0.015509233810007572, -0.530086100101471, -0.0013047285610809922, -0.003631902625784278, -0.08543331921100616, -0.03408852219581604], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.2313222885131836, -0.12829923629760742, -0.6441925764083862, -0.010121802799403667, -0.002961894031614065, -5.066266385256313e-05, -0.030931979417800903, -0.01157897524535656, -0.016935141757130623], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.124556289752945e-05, -6.544376083184034e-05, -0.00018737945356406271, -0.00022575691400561482, -0.00021050144277978688, -0.00021109737281221896, -1.6927575416048057e-05, -0.002183792879804969, -0.0011594723910093307], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.21563778817653656, -0.0004850641416851431, -0.0030504383612424135, -0.003507772693410516, -0.012804905883967876, -0.0001234931987710297, -0.014098921790719032, -0.009388700127601624, -0.005088592879474163], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.007397521287202835, -2.100289821624756, -0.05311305448412895], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.018605943769216537, -0.005581508856266737, -0.011865395121276379, -0.3641832768917084], "finish_reason": "stop"}], "metrics": {"energy": 1445.1463614130025, "energy_per_token": 6.394452926606206, "time": 39.08076, "time_per_token": 0.17292371681415927}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=1)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -0.09028865396976471, -3.814689989667386e-06, -6.9141146923357155e-06, -0.007902429439127445, -1.7236425876617432, -0.7398567795753479, -0.013920949772000313], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.1201642751693726, -0.00664181262254715], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.01))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "1", "))", "\n"], "logprobs": [-0.0014667478390038013, -0.021954122930765152, -0.07241862267255783, -0.4491865038871765, -0.0031350532080978155, -3.6238969187252223e-05, -0.00013720047718379647, -8.380061626667157e-05, -0.000248401309363544, -0.0006576997111551464, -0.024607336148619652, -0.028294356539845467, -0.0026974028442054987, -2.9205850296420977e-05, -8.177422569133341e-05, -8.821448318485636e-06, -2.932505594799295e-05, -0.014417052268981934, -0.0003313469351269305, -0.013957157731056213, -0.1750876009464264, -6.318072337307967e-06, -1.1920922133867862e-06, -0.006965757813304663, -0.12377741932868958, -0.0001902399235405028, -1.02069091796875, -0.7985449433326721, -0.4086247980594635, -0.010185997933149338], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1000, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.002089223824441433, -0.00014351768186315894, -0.01405919250100851, -0.009792976081371307, -0.0003073934931308031, -0.0012978235026821494, -0.008306952193379402, -0.00011538793478393927, -8.821448318485636e-06, -0.007485555484890938, -0.6828015446662903, -0.003871447406709194, -0.30011069774627686, -0.12488793581724167, -0.2340657263994217, -0.958029568195343, -0.090569406747818, -0.018786007538437843, -0.005284033250063658, -0.23930726945400238, -0.008372682146728039, -0.017946012318134308], "finish_reason": "stop"}, {"text": " model(X_test)", "tokens": [" model", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.07938437908887863, -1.79344642162323, -0.006908932700753212, -0.016499385237693787, -0.0016527815023437142, -0.015051132999360561, -0.6776719689369202], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00013445904187392443, -7.748303323751315e-05, -0.0008326877141371369, -0.5178310871124268, -0.0025913489516824484, -0.0014290130930021405, -8.344646857949556e-07, -1.4066597032069694e-05, -3.576278118089249e-07, -0.0034103586804121733, -0.02940818853676319, -0.0003793711948674172, -0.0006281548412516713, -0.35552340745925903, -0.011800483800470829, -8.940656698541716e-06, -1.2516897186287679e-05, -0.023853236809372902, -0.0024524631444364786], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.013259566389024258, -0.00011419598013162613, -0.00034350217902101576, -0.00130353809799999, -4.768370445162873e-07, -0.0006493605324067175, -0.0017446548445150256, -1.9311717551317997e-05, -0.0007415643776766956, -0.0009209443815052509], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.009019820019602776, -0.002755656372755766, -0.000548331590835005, -2.5987286790041253e-05, -2.8013790142722428e-05, -0.00018690270371735096, -0.24254310131072998, -0.0017688118387013674], "finish_reason": "stop"}, {"text": "plot(fpr, tpr)  # Add the line to the axes object", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ")", "  ", "#", " Add", " the", " line", " to", " the", " axes", " object", "\n"], "logprobs": [-0.09370239824056625, -0.06362900137901306, -0.003152165561914444, -6.6756979322235566e-06, -8.940297266235575e-05, -0.0008810452418401837, -4.172316494077677e-06, -2.4046759605407715, -1.7728087902069092, -4.565611743601039e-05, -2.7843759059906006, -0.5449275970458984, -3.052267074584961, -1.744952917098999, -0.018603602424263954, -0.042428333312273026, -0.7528641223907471, -0.04875674098730087], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f\"AUC = {auc_score:.2f}\")", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "\"", "A", "UC", " =", " {", "auc", "_", "score", ":", ".", "2", "f", "}\"", ")", "\n"], "logprobs": [-0.11217968165874481, -0.0011467316653579473, -0.003804233390837908, -1.6689286894688848e-06, -0.00030727434204891324, -0.0011179156135767698, -4.6491513785440475e-06, -0.00832113903015852, -0.06173766776919365, -1.3909857273101807, -0.38214272260665894, -1.330458402633667, -0.39627569913864136, -0.006977477576583624, -0.600063145160675, -0.020315077155828476, -0.1120828166604042, -0.0008388814167119563, -3.075552376685664e-05, -0.0755256786942482, -0.02048841118812561, -0.7968260645866394, -0.003398121800273657, -0.006531675811856985, -0.04216859117150307, -0.06883884221315384], "finish_reason": "stop"}, {"text": "set_xlabel('False positive rate')", "tokens": ["set", "_", "xlabel", "('", "False", " positive", " rate", "')", "\n"], "logprobs": [-0.24089506268501282, -0.08685404062271118, -1.0025501251220703, -0.013396606780588627, -0.007514898665249348, -0.0899568423628807, -0.0013367536012083292, -0.005826394539326429, -0.0073112547397613525], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.327203714638017e-05, -4.625213477993384e-05, -0.00013791563105769455, -0.00026723151677288115, -0.00021896349790040404, -0.0001842805795604363, -1.4781842764932662e-05, -0.0016514724120497704, -0.0012216256000101566], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.20997849106788635, -0.00037174468161538243, -0.0038796409498900175, -0.0028380376752465963, -0.016578063368797302, -9.97731985989958e-05, -0.012425864115357399, -0.007846367545425892, -0.005819402169436216], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.006861931644380093, -0.12303878366947174, -0.00589465769007802, -0.11321447789669037, -0.42743420600891113, -0.0017156180692836642, -0.007241667713969946, -0.03945963829755783], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.021572468802332878, -0.005001770798116922, -0.009690623730421066, -0.3306522071361542], "finish_reason": "stop"}], "metrics": {"energy": 1451.742185827255, "energy_per_token": 6.480991901014532, "time": 38.30896, "time_per_token": 0.17102214285714284}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -1.282088041305542, -0.00018034738604910672, -6.496695277746767e-05, -0.0008605591137893498, -0.0004365683125797659, -7.390948667307384e-06, -3.397406908334233e-05, -0.003506703767925501, -0.015204952098429203, -7.343022298300639e-05, -1.3351351299206726e-05, -2.3841830625315197e-06, -4.410734163684538e-06, -0.0002548369811847806, -0.18351863324642181, -0.005250830203294754, -0.011528068222105503, -0.04589516296982765, -0.07522176206111908, -4.017272294731811e-05, -4.768360213347478e-06, -0.012296698056161404, -0.00472998758777976, -2.1934269170742482e-05, -0.008970318362116814, -0.11968729645013809, -0.0566895455121994, -3.576272320060525e-06, -7.867782187531702e-06, -0.0037085108924657106, -0.3661368787288666, -0.03532227873802185, -0.031273338943719864, -0.017658283933997154], "finish_reason": "stop"}, {"text": " keras.Sequential([keras.layers.Dense(1, activation='sigmoid', input_shape=(2,))])", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " activation", "='", "s", "igmoid", "'", ",", " input", "_", "shape", "=(", "2", ",", "))", "])", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.5737508535385132, -0.5046671628952026, -1.2397689715726301e-05, -0.007933178916573524, -2.95634672511369e-05, -0.05540643632411957, -1.1920922133867862e-06, -0.0004913791781291366, -0.6029357314109802, -0.41288861632347107, -0.5044819712638855, -0.43189942836761475, -0.00502750976011157, -9.60780744208023e-05, -0.5078601241111755, -0.0010790961096063256, -0.031138842925429344, -1.6927575416048057e-05, -0.22570060193538666, -0.0737215131521225, -0.16884811222553253, -0.0018661479698494077, -0.09933202713727951, -0.03171829506754875, -0.016203498467803], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.1))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "1", "))", "\n"], "logprobs": [-0.0013463966315612197, -0.031936775892972946, -0.06419172883033752, -0.42984578013420105, -0.0023916945792734623, -3.93382906622719e-05, -9.7508447652217e-05, -7.068861305015162e-05, -0.00025817399728111923, -0.0004681444843299687, -0.030598480254411697, -0.03509901463985443, -0.0028656155336648226, -3.2782016205601394e-05, -8.380061626667157e-05, -8.583032467868179e-06, -2.825220326485578e-05, -0.015465804375708103, -0.0003457663697190583, -0.014943445101380348, -0.21613769233226776, -1.0371154530730564e-05, -1.6689286894688848e-06, -0.007777645718306303, -0.12963734567165375, -0.00022599527437705547, -0.9982720017433167, -0.2617446184158325, -0.01192559115588665], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=False)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "False", ")", "\n"], "logprobs": [-0.00233556074090302, -0.00011765264935093, -0.012169046327471733, -0.011295773088932037, -0.00024911639047786593, -0.0011954312212765217, -0.00821662601083517, -9.97731985989958e-05, -5.364403477869928e-06, -0.00678236735984683, -0.6823372840881348, -0.005171493627130985, -2.2412617206573486, -0.038202982395887375, -0.006336834281682968], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "\n"], "logprobs": [-0.06494205445051193, -0.1473437398672104, -0.0007326302584260702, -0.0357641726732254, -0.0012897277483716607, -0.011220214888453484, -0.0002847504511009902, -0.01342424750328064, -1.4472886323928833, -0.6804547309875488, -0.0001250427303602919, -0.016976632177829742], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00011395759065635502, -6.711257447022945e-05, -0.0008624648326076567, -0.4773445725440979, -0.0028639512602239847, -0.0015466167824342847, -8.344646857949556e-07, -1.3947389561508317e-05, -5.960462772236497e-07, -0.003180447733029723, -0.030362362042069435, -0.00039593485416844487, -0.0004828002711292356, -0.33634328842163086, -0.007713414262980223, -1.2516897186287679e-05, -1.2159273865108844e-05, -0.022931277751922607, -0.0024586468935012817], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.013035203330218792, -0.00010156115604331717, -0.00037853704998269677, -0.0011257746955379844, -3.576278118089249e-07, -0.0005598884890787303, -0.0023436478804796934, -1.6093124941107817e-05, -0.0007364421617239714, -0.0008793777669779956], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.008368780836462975, -0.002531896810978651, -0.00044109628652222455, -2.8729025871143676e-05, -3.0040289857424796e-05, -0.00027044929447583854, -0.257366806268692, -0.0014004433760419488], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.11941312253475189, -0.06681284308433533, -0.0034050126560032368, -8.22540732769994e-06, -0.00010406429646536708, -0.0006576997111551464, -4.0531076592742465e-06, -0.11411154270172119, -0.07868172973394394, -0.22626625001430511, -0.15279749035835266, -0.0002225389762315899, -0.09774041920900345, -0.1349037140607834, -0.2872612774372101, -0.01617874950170517, -0.07487130165100098, -0.08377984166145325, -4.577531944960356e-05, -0.09175307303667068, -6.174850568640977e-05, -0.0009285667329095304, -0.0028666851576417685, -0.014231850393116474, -4.768370445162873e-07, -0.0027656422462314367, -7.390948667307384e-06, -0.006800720002502203, -0.2793055474758148], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='DNN (area = {:0.2f})'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "D", "NN", " (", "area", " =", " {:", "0", ".", "2", "f", "})", "'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.11099051684141159, -0.001415918697603047, -0.004253863822668791, -1.4305104514278355e-06, -0.00029571453342214227, -0.0009036748087964952, -3.576272320060525e-06, -0.011355648748576641, -0.056575097143650055, -0.24834859371185303, -2.782257080078125, -0.4173606336116791, -0.5320377945899963, -0.15210434794425964, -0.00755962124094367, -1.6890145540237427, -1.8224451541900635, -0.00014709345123264939, -0.5718053579330444, -0.0003812778159044683, -0.0036999594885855913, -0.000491021724883467, -0.0011794761521741748, -0.0001616347290109843, -9.810443589231e-05, -0.001517812255769968, -0.0011299422476440668, -1.0609570381348021e-05, -0.06644849479198456, -0.0462975837290287], "finish_reason": "stop"}, {"text": "set_xlabel('False positive rate')", "tokens": ["set", "_", "xlabel", "('", "False", " positive", " rate", "')", "\n"], "logprobs": [-0.2884364128112793, -0.08181203901767731, -0.8134455680847168, -0.013522807508707047, -0.007035600487142801, -0.0800245851278305, -0.0011288706446066499, -0.00614313967525959, -0.0057076336815953255], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-5.0424259825376794e-05, -4.386805812828243e-05, -0.00018904806347563863, -0.0002079985715681687, -0.0002090712368953973, -0.0001578206429257989, -1.9073304429184645e-05, -0.0019587157294154167, -0.0008904544520191848], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.12290532141923904, -0.0003486264031380415, -0.0027335442136973143, -0.0029700950253754854, -0.01682109199464321, -8.976056415122002e-05, -0.012964954599738121, -0.0082468930631876, -0.0039155022241175175], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.0071184588596224785, -0.12568029761314392, -0.006113164126873016, -0.13605897128582, -0.4029984176158905, -0.0021339519880712032, -0.010362394154071808, -0.046057745814323425], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.023492099717259407, -0.005609722342342138, -0.011690560728311539, -0.34535419940948486], "finish_reason": "stop"}], "metrics": {"energy": 1245.5876666278823, "energy_per_token": 4.790721794722624, "time": 37.6658, "time_per_token": 0.14486846153846153}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=1)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -1.282088041305542, -0.00018034738604910672, -6.496695277746767e-05, -0.0008605591137893498, -0.0004365683125797659, -7.390948667307384e-06, -3.397406908334233e-05, -0.003506703767925501, -0.015204952098429203, -7.343022298300639e-05, -1.3351351299206726e-05, -2.3841830625315197e-06, -4.410734163684538e-06, -0.0002548369811847806, -0.18351863324642181, -0.005250830203294754, -0.011528068222105503, -0.04589516296982765, -0.07522176206111908, -4.017272294731811e-05, -4.768360213347478e-06, -0.012296698056161404, -0.00472998758777976, -2.1934269170742482e-05, -0.008970318362116814, -0.11968729645013809, -0.0566895455121994, -3.576272320060525e-06, -7.867782187531702e-06, -0.0037085108924657106, -1.882116675376892, -0.7540692090988159, -0.013529393821954727], "finish_reason": "stop"}, {"text": " keras.Sequential([keras.layers.Dense(12, activation=\"sigmoid\", input_shape=(2,))])", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", "2", ",", " activation", "=", "\"", "s", "igmoid", "\"", ",", " input", "_", "shape", "=(", "2", ",", "))", "])", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.5737508535385132, -0.5046671628952026, -1.2397689715726301e-05, -0.007933178916573524, -2.95634672511369e-05, -0.05540643632411957, -1.1920922133867862e-06, -0.0004913791781291366, -0.6029357314109802, -2.385350227355957, -0.14636819064617157, -1.623760461807251, -1.0926480293273926, -0.9348393678665161, -0.11721183359622955, -1.7046782886609435e-05, -5.709961988031864e-05, -0.9023721218109131, -0.035187866538763046, -2.6702524337451905e-05, -0.3904799520969391, -0.09655440598726273, -0.12321785092353821, -0.0016338583081960678, -0.05673933029174805, -0.7381609082221985, -0.014139941893517971], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.binary_crossentropy, optimizer=keras.optimizers.SGD(learning_rate=0.1),metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "1", ")", ",", "metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0013463966315612197, -0.031936775892972946, -0.06419172883033752, -1.0697460174560547, -0.03158004581928253, -6.246371776796877e-05, -0.0009384519071318209, -1.5616295058862306e-05, -6.472854875028133e-05, -0.6448925733566284, -2.4318398573086597e-05, -2.9801878554280847e-05, -9.059865078597795e-06, -0.002893430180847645, -0.050852127373218536, -0.014838446862995625, -0.002081967191770673, -1.6927575416048057e-05, -0.00013314791431184858, -0.0002640137099660933, -3.8742269680369645e-05, -0.012352864257991314, -9.440929716220126e-05, -0.027124639600515366, -0.16430996358394623, -6.079655122448457e-06, -2.622600959512056e-06, -0.0075143068097531796, -0.13190990686416626, -0.00030286493711173534, -1.031998872756958, -2.9219226837158203, -0.010402978397905827, -2.8989017009735107, -0.16316087543964386, -0.0464334711432457, -0.017071561887860298, -0.013838300481438637], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0029872101731598377, -0.00013350549852475524, -0.015851791948080063, -0.010780074633657932, -0.00022706791060045362, -0.0012498432770371437, -0.007980367168784142, -0.0001070442158379592, -5.602820692729438e-06, -0.008186357095837593, -0.702107310295105, -0.003563365899026394, -0.298012912273407, -0.12431266903877258, -0.2872392535209656, -0.4812650978565216, -0.027419865131378174, -0.005201141815632582, -0.11714810878038406, -0.00782637856900692, -0.020006177946925163], "finish_reason": "stop"}, {"text": " model(X_test)", "tokens": [" model", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.07877428829669952, -1.9731647968292236, -0.006030222401022911, -0.01917223632335663, -0.0016357626300305128, -0.01199073065072298, -0.6234242916107178], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00012838016846217215, -7.819823804311454e-05, -0.0008155357209034264, -0.4542383551597595, -0.002516319742426276, -0.001416633022017777, -1.0728830375228426e-06, -1.549708758830093e-05, -5.960462772236497e-07, -0.0028181858360767365, -0.038343530148267746, -0.0004897110629826784, -0.00038842763751745224, -0.31606313586235046, -0.007694724015891552, -1.3947389561508317e-05, -1.3351351299206726e-05, -0.023407677188515663, -0.0023243811447173357], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.012851511128246784, -0.0001392267586197704, -0.0003381395654287189, -0.0012372228084132075, -4.768370445162873e-07, -0.0005681092734448612, -0.0018308082362636924, -2.3364747903542593e-05, -0.0007377525325864553, -0.0011064843274652958], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.0099950535222888, -0.0027709919959306717, -0.0004207202873658389, -2.396077979938127e-05, -2.062299427052494e-05, -0.00019524575327523053, -0.26046717166900635, -0.0016614693449810147], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.09182550013065338, -0.08993929624557495, -0.0027268866542726755, -7.748573807475623e-06, -0.00010263393050990999, -0.0006858142442069948, -3.4570634852570947e-06, -0.10315561294555664, -0.07520462572574615, -0.2556372284889221, -0.22014595568180084, -0.0002694958820939064, -0.09575475007295609, -0.15994121134281158, -0.27114421129226685, -0.01418977603316307, -0.07490216195583344, -0.08680278062820435, -4.410646579344757e-05, -0.09263742715120316, -5.1377883210079744e-05, -0.0015794672071933746, -0.0024846892338246107, -0.016757437959313393, -5.960462772236497e-07, -0.0022448119707405567, -5.960446742392378e-06, -0.007324508856981993, -0.2785528898239136], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.12121650576591492, -0.0009439303539693356, -0.0035012392327189445, -2.3841830625315197e-06, -0.00024911639047786593, -0.0011468507582321763, -3.3378546504536644e-06, -0.010990560054779053, -0.05884932354092598, -0.262234091758728, -1.789749026298523, -0.004259324166923761, -0.07221834361553192, -0.23314698040485382, -0.23975476622581482, -0.02189464494585991, -0.0849473625421524, -0.04272135719656944, -1.645074735279195e-05, -0.1104932427406311, -7.414542778860778e-05, -0.001110890181735158, -0.002244574250653386, -0.017674915492534637, -1.1920928244535389e-07, -0.0035507744178175926, -1.6093124941107817e-05, -0.06244325265288353, -0.06300731003284454], "finish_reason": "stop"}, {"text": "set_xlabel('False positive rate')", "tokens": ["set", "_", "xlabel", "('", "False", " positive", " rate", "')", "\n"], "logprobs": [-0.3484656810760498, -0.061248019337654114, -1.0049238204956055, -0.01500415988266468, -0.00718687055632472, -0.0796901136636734, -0.0016265984158962965, -0.006063399836421013, -0.005987682845443487], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-5.185469490243122e-05, -4.875540980719961e-05, -0.00016544880054425448, -0.00018690270371735096, -0.00021491125517059118, -0.00018857131362892687, -1.2040065485052764e-05, -0.0023701691534370184, -0.0013252056669443846], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.15988798439502716, -0.000408327643526718, -0.0028275768272578716, -0.003530580550432205, -0.012423627078533173, -9.500529267825186e-05, -0.014754229225218296, -0.007372079882770777, -0.004745292942970991], "finish_reason": "stop"}, {"text": "legend(loc='best')", "tokens": ["legend", "(", "loc", "='", "best", "')", "\n"], "logprobs": [-0.008169331587851048, -0.09645417332649231, -0.0058326758444309235, -0.09694041311740875, -1.2762582302093506, -0.016279619187116623, -0.045623909682035446], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.021828865632414818, -0.006692732218652964, -0.012114164419472218], "finish_reason": "stop"}], "metrics": {"energy": 1602.903233886719, "energy_per_token": 5.98098221599522, "time": 47.95039, "time_per_token": 0.1789193656716418}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -1.282088041305542, -0.00018034738604910672, -6.496695277746767e-05, -0.0008605591137893498, -0.0004365683125797659, -7.390948667307384e-06, -3.397406908334233e-05, -0.003506703767925501, -0.015204952098429203, -7.343022298300639e-05, -1.3351351299206726e-05, -2.3841830625315197e-06, -4.410734163684538e-06, -0.0002548369811847806, -0.18351863324642181, -0.005250830203294754, -0.011528068222105503, -0.04589516296982765, -0.07522176206111908, -4.017272294731811e-05, -4.768360213347478e-06, -0.012296698056161404, -0.00472998758777976, -2.1934269170742482e-05, -0.008970318362116814, -0.11968729645013809, -0.0566895455121994, -3.576272320060525e-06, -7.867782187531702e-06, -0.0037085108924657106, -0.3661368787288666, -0.03532227873802185, -0.031273338943719864, -0.017658283933997154], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.9648059606552124, -3.981510963058099e-05, -3.123234637314454e-05, -1.5497195136049413e-06, 0.0, -0.4990617334842682, -0.009059041738510132], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(lr=0.1))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "1", "))", "\n"], "logprobs": [-0.0011269653914496303, -0.0227799229323864, -0.0699348971247673, -0.472261518239975, -0.002592062344774604, -2.9205850296420977e-05, -7.712543447269127e-05, -6.735097849741578e-05, -0.00023648326168768108, -0.00046659549116156995, -0.025521710515022278, -0.022337382659316063, -0.0025684009306132793, -2.884823152271565e-05, -6.532455881824717e-05, -1.5020257706055418e-05, -3.158996332786046e-05, -0.01383089367300272, -0.00024279984063468874, -0.014161568135023117, -2.617029905319214, -0.0026192902587354183, -0.1275061070919037, -0.0008056493825279176, -0.9797711372375488, -0.47989609837532043, -0.01268697064369917], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0040643950924277306, -0.00014053787162993103, -0.012150321155786514, -0.01141811441630125, -0.0002172949316445738, -0.0012416280806064606, -0.008091408759355545, -9.572047565598041e-05, -4.0531076592742465e-06, -0.00785937812179327, -0.604623556137085, -0.0032038569916039705, -0.298570841550827, -0.12765364348888397, -0.271234929561615, -0.41444939374923706, -0.024549877271056175, -0.004574429709464312, -0.12699031829833984, -0.007574410177767277, -0.017643291503190994], "finish_reason": "stop"}, {"text": " model(X_test)", "tokens": [" model", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0656382292509079, -1.997004747390747, -0.008204448036849499, -0.018656374886631966, -0.0017588159535080194, -0.013482232578098774, -0.6014978289604187], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00014375607133843005, -6.5205356804654e-05, -0.0008068405441008508, -0.4243142008781433, -0.002920412225648761, -0.0013717536348849535, -1.311301275563892e-06, -1.4662635294371285e-05, -4.768370445162873e-07, -0.00384449097327888, -0.050447117537260056, -0.0004142856632824987, -0.0004758894501719624, -0.3144143223762512, -0.007094311993569136, -1.0609570381348021e-05, -1.3470558769768104e-05, -0.0240474883466959, -0.0027259355410933495], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.014243603684008121, -0.00010382589971413836, -0.00026306029758416116, -0.0014627005439251661, -4.768370445162873e-07, -0.0007286992622539401, -0.0017138330731540918, -1.8954096958623268e-05, -0.0006993946735747159, -0.0009941878961399198], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(6,6))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "6", ",", "6", "))", "\n"], "logprobs": [-0.009175633080303669, -0.0032177597749978304, -0.0004766043566633016, -2.2172682292875834e-05, -2.3603161025675945e-05, -0.0002694958820939064, -1.5317083597183228, -0.16515620052814484, -8.821448318485636e-06, -0.012881755828857422, -1.842818260192871, -0.10824213922023773, -2.1225221157073975, -0.06488362699747086, -0.0027963127940893173], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'AUC={auc_score:.2f}')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "A", "UC", "={", "auc", "_", "score", ":", ".", "2", "f", "}", "')", "\n"], "logprobs": [-0.11693836003541946, -0.04980356618762016, -0.0032214433886110783, -9.417489309271332e-06, -0.00010227633902104571, -0.0009303532424382865, -3.6954811548639555e-06, -0.10469268262386322, -0.0759693831205368, -1.4127461910247803, -0.21718069911003113, -0.28755074739456177, -0.7652848958969116, -0.0025669739115983248, -1.321469783782959, -0.08671949058771133, -0.000377583724912256, -1.4185804502631072e-05, -0.10590136796236038, -0.021939663216471672, -0.703122615814209, -0.002234939718618989, -0.03345821797847748, -0.0013729440979659557, -0.26180756092071533], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='Model (AUC = {:.3f})'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "Model", " (", "A", "UC", " =", " {:", ".", "3", "f", "})", "'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.17553338408470154, -0.001081834896467626, -0.0025843337643891573, -1.7881377516459906e-06, -0.00023934361524879932, -0.001085764612071216, -3.6954811548639555e-06, -0.007030037231743336, -0.06117412447929382, -0.22276486456394196, -1.6521708965301514, -1.5976368188858032, -0.751128077507019, -0.0032839439809322357, -0.06372541934251785, -0.6040616631507874, -0.6446391940116882, -0.6872497797012329, -0.003081932198256254, -0.002651748713105917, -0.0002712835557758808, -0.0005555993411689997, -0.00015484087634831667, -0.00010322991875000298, -0.0022998806089162827, -0.0010121704544872046, -2.610649426060263e-05, -0.0505671426653862, -0.052687469869852066], "finish_reason": "stop"}, {"text": "set(xlabel='False positive rate', ylabel='True positive rate', title='ROC curve')", "tokens": ["set", "(", "xlabel", "='", "False", " positive", " rate", "'", ",", " y", "label", "='", "True", " positive", " rate", "'", ",", " title", "='", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.2625213861465454, -2.243662118911743, -0.4616113603115082, -0.009017929434776306, -0.004250896163284779, -0.05045051872730255, -0.0007503792876377702, -0.005134491249918938, -5.4834770708112046e-05, -0.038027528673410416, -2.264974000354414e-06, -0.0029119730461388826, -0.00022230061586014926, -0.00048685140791349113, -2.6225699912174605e-05, -0.17108410596847534, -0.00021610308613162488, -0.04582115262746811, -0.006273458246141672, -0.0030119314324110746, -0.00010752100206445903, -0.03783964738249779, -0.015189923346042633, -0.01736566796898842], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-5.817244164063595e-05, -6.3774932641536e-05, -0.00016115797916427255, -0.0002338612830499187, -0.00019214690837543458, -0.00019262365822214633, -1.5139465176616795e-05, -0.0022017541341483593, -0.0011825718684121966], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.1968492865562439, -0.0005312938592396677, -0.0029389543924480677, -0.003213244490325451, -0.015217749401926994, -8.83301836438477e-05, -0.014108207076787949, -0.007856539450585842, -0.0054896315559744835], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.007568730972707272, -0.12663212418556213, -0.007679582107812166, -0.16793011128902435, -0.32052886486053467, -0.0023005942348390818, -0.010472109541296959, -0.04461841285228729], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.02617747336626053, -0.006891055963933468, -0.013487172313034534, -0.36794641613960266], "finish_reason": "stop"}], "metrics": {"energy": 1649.5860422372814, "energy_per_token": 6.46896487151875, "time": 48.190823, "time_per_token": 0.18898361960784316}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -1.282088041305542, -0.00018034738604910672, -6.496695277746767e-05, -0.0008605591137893498, -0.0004365683125797659, -7.390948667307384e-06, -3.397406908334233e-05, -0.003506703767925501, -0.015204952098429203, -7.343022298300639e-05, -1.3351351299206726e-05, -2.3841830625315197e-06, -4.410734163684538e-06, -0.0002548369811847806, -0.18351863324642181, -0.005250830203294754, -0.011528068222105503, -0.04589516296982765, -0.07522176206111908, -4.017272294731811e-05, -4.768360213347478e-06, -0.012296698056161404, -0.00472998758777976, -2.1934269170742482e-05, -0.008970318362116814, -2.60247540473938, -0.021211324259638786], "finish_reason": "stop"}, {"text": " keras.Sequential([keras.layers.Dense(6, input_shape=(2,), activation='sigmoid'),", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "6", ",", " input", "_", "shape", "=(", "2", ",", ")", ",", " activation", "='", "s", "igmoid", "')", ",", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.5737508535385132, -0.5046671628952026, -1.2397689715726301e-05, -0.007933178916573524, -2.95634672511369e-05, -0.05540643632411957, -1.1920922133867862e-06, -0.0004913791781291366, -3.2506332397460938, -0.7901313900947571, -0.8193097710609436, -1.537788011773955e-05, -0.3130873441696167, -0.1417703926563263, -0.15442496538162231, -0.0047080377116799355, -0.16343334317207336, -0.0005667987279593945, -0.023442495614290237, -0.506241500377655, -0.07144282758235931, -3.7788631743751466e-05, -0.02252889797091484, -0.696648895740509, -0.41497838497161865], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.1))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "1", "))", "\n"], "logprobs": [-0.0013463966315612197, -0.031936775892972946, -0.06419172883033752, -0.42984578013420105, -0.0023916945792734623, -3.93382906622719e-05, -9.7508447652217e-05, -7.068861305015162e-05, -0.00025817399728111923, -0.0004681444843299687, -0.030598480254411697, -0.03509901463985443, -0.0028656155336648226, -3.2782016205601394e-05, -8.380061626667157e-05, -8.583032467868179e-06, -2.825220326485578e-05, -0.015465804375708103, -0.0003457663697190583, -0.014943445101380348, -0.21613769233226776, -1.0371154530730564e-05, -1.6689286894688848e-06, -0.007777645718306303, -0.12963734567165375, -0.00022599527437705547, -0.9982720017433167, -0.2617446184158325, -0.01192559115588665], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.00233556074090302, -0.00011765264935093, -0.012169046327471733, -0.011295773088932037, -0.00024911639047786593, -0.0011954312212765217, -0.00821662601083517, -9.97731985989958e-05, -5.364403477869928e-06, -0.00678236735984683, -0.6823372840881348, -0.005171493627130985, -0.12381871044635773, -0.03931993618607521, -0.008636504411697388], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "\n"], "logprobs": [-0.06494205445051193, -0.1473437398672104, -0.0007326302584260702, -0.0357641726732254, -0.0012897277483716607, -0.011220214888453484, -0.0002847504511009902, -0.01342424750328064, -1.4472886323928833, -0.6804547309875488, -0.0001250427303602919, -0.016976632177829742], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00011395759065635502, -6.711257447022945e-05, -0.0008624648326076567, -0.4773445725440979, -0.0028639512602239847, -0.0015466167824342847, -8.344646857949556e-07, -1.3947389561508317e-05, -5.960462772236497e-07, -0.003180447733029723, -0.030362362042069435, -0.00039593485416844487, -0.0004828002711292356, -0.33634328842163086, -0.007713414262980223, -1.2516897186287679e-05, -1.2159273865108844e-05, -0.022931277751922607, -0.0024586468935012817], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.013035203330218792, -0.00010156115604331717, -0.00037853704998269677, -0.0011257746955379844, -3.576278118089249e-07, -0.0005598884890787303, -0.0023436478804796934, -1.6093124941107817e-05, -0.0007364421617239714, -0.0008793777669779956], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.008368780836462975, -0.002531896810978651, -0.00044109628652222455, -2.8729025871143676e-05, -3.0040289857424796e-05, -0.00027044929447583854, -0.257366806268692, -0.0014004433760419488], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)  # Plot the ROC curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "  ", "#", " Plot", " the", " R", "OC", " curve", "\n"], "logprobs": [-0.11941312253475189, -0.06681284308433533, -0.0034050126560032368, -8.22540732769994e-06, -0.00010406429646536708, -0.0006576997111551464, -4.0531076592742465e-06, -0.11411154270172119, -0.07868172973394394, -0.22626625001430511, -0.15279749035835266, -0.0002225389762315899, -0.09774041920900345, -0.1349037140607834, -0.2872612774372101, -0.01617874950170517, -0.07487130165100098, -0.08377984166145325, -4.577531944960356e-05, -0.09175307303667068, -6.174850568640977e-05, -0.0009285667329095304, -0.0028666851576417685, -0.014231850393116474, -4.768370445162873e-07, -0.0027656422462314367, -7.390948667307384e-06, -0.006800720002502203, -1.4311953783035278, -0.0001358893496217206, -0.151454895734787, -0.08155277371406555, -0.11702404916286469, -8.11782301752828e-05, -0.002469706116244197, -0.19158591330051422], "finish_reason": "stop"}, {"text": "set_xlim([0.0, 1.0])", "tokens": ["set", "_", "x", "lim", "([", "0", ".", "0", ",", " ", "1", ".", "0", "])", "\n"], "logprobs": [-2.277353286743164, -0.2667790651321411, -1.065908670425415, -0.01383571419864893, -0.0024750572629272938, -0.051965802907943726, -0.0750313401222229, -0.0004689785710070282, -0.005578426644206047, -6.508615479106084e-05, -8.749579137656838e-05, -0.0013916341122239828, -0.0005055579822510481, -0.0037142117507755756, -0.016049597412347794], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.21701087057590485, -0.08827339112758636, -0.6486905217170715, -0.010933609679341316, -0.0027287888806313276, -6.41325386823155e-05, -0.04039236903190613, -0.009868287481367588, -0.02564406581223011], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-5.173549288883805e-05, -3.9934315282152966e-05, -9.357491217087954e-05, -0.00018952481332235038, -0.00023314618738368154, -0.00016604475968051702, -1.3112935448589269e-05, -0.002436052542179823, -0.0009199915803037584], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.16558440029621124, -0.00039426659350283444, -0.0023290193639695644, -0.0030462786089628935, -0.012662958353757858, -0.00010978573118336499, -0.013494346290826797, -0.009962006472051144, -0.004341581370681524], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.007426275406032801, -0.11905093491077423, -0.006189464125782251, -0.1411307454109192, -0.3511519432067871, -0.0017924923449754715, -0.009785185568034649, -0.03888958692550659], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>\"\"\"", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.021612949669361115, -0.005258656572550535, -0.00987926498055458, -1.5648133754730225, -2.861018856492592e-06, -2.622600959512056e-06, -1.6689160474925302e-05, -0.0001736728590913117, -1.9658764600753784, -0.002784068463370204, -0.004368405789136887, -0.0005802616360597312, -0.22355297207832336], "finish_reason": "stop"}], "metrics": {"energy": 2898.2434205713275, "energy_per_token": 11.410407167603651, "time": 77.8594, "time_per_token": 0.30653307086614173}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -1.5592408180236816], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.5737508535385132, -0.9515169858932495], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.01), metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "1", ")", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0011118428083136678, -0.027168842032551765, -0.065475232899189, -0.4341975748538971, -0.002557580592110753, -3.0874729418428615e-05, -9.881961887003854e-05, -9.679325739853084e-05, -0.00025006983196362853, -0.0005306981038302183, -0.034531306475400925, -0.030556393787264824, -0.0033912311773747206, -3.862306402879767e-05, -7.64102369430475e-05, -1.0251946150674485e-05, -3.1709168979432434e-05, -0.018463412299752235, -0.00028391621890477836, -0.014883430674672127, -0.16671718657016754, -7.629365427419543e-06, -1.0728830375228426e-06, -0.008826407603919506, -0.13432344794273376, -0.00022265815641731024, -1.1067755222320557, -0.8403217792510986, -1.3071081638336182, -0.004282589536160231, -0.09982377290725708, -0.16196689009666443, -0.034584857523441315, -0.010145876556634903, -0.011770559474825859], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.002809151541441679, -0.00015805903240107, -0.014540893025696278, -0.010775947012007236, -0.0002821285743266344, -0.0010553987231105566, -0.008055342361330986, -9.035655966727063e-05, -4.887569048150908e-06, -0.008395970799028873, -0.7146276831626892, -0.003992919810116291, -0.30347123742103577, -2.5948493480682373, -0.018218208104372025, -0.00584867550060153, -0.039957210421562195, -0.004467506892979145, -0.013506577350199223], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "\n"], "logprobs": [-0.07356536388397217, -0.14214058220386505, -0.0010013333521783352, -0.03426202014088631, -0.0012048374628648162, -0.010301396250724792, -0.00037722624256275594, -0.013154156506061554, -1.4575823545455933, -0.6586565375328064, -9.703165414975956e-05, -0.01613910309970379], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00016473367577418685, -8.940297266235575e-05, -0.0010309863137081265, -0.5578091144561768, -0.0024536524433642626, -0.001680391957052052, -1.0728830375228426e-06, -1.6331539882230572e-05, -4.768370445162873e-07, -0.0038860533386468887, -0.041110649704933167, -0.0004211969207972288, -0.0004677870310842991, -0.33525511622428894, -0.0105985626578331, -1.4424220353248529e-05, -1.6212332411669195e-05, -0.020967375487089157, -0.0025958672631531954], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.011066488921642303, -0.00012694983161054552, -0.00031990656862035394, -0.0014056811342015862, -3.576278118089249e-07, -0.0005969410995021462, -0.0017169271595776081, -1.537788011773955e-05, -0.0007393010891973972, -0.0009815642843022943], "finish_reason": "stop"}, {"text": " ax = plt.subplots(1, figsize=(4, 4))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "1", ",", " fig", "size", "=(", "4", ",", " ", "4", "))", "\n"], "logprobs": [-0.008037485182285309, -0.002889864146709442, -0.00044764988706447184, -2.2411095415009186e-05, -3.909988299710676e-05, -0.0002932118659373373, -1.452114224433899, -2.2258312702178955, -0.09969355165958405, -1.7537221908569336, -1.1444026313256472e-05, -0.012416680343449116, -2.796626567840576, -0.14229093492031097, -0.2408006191253662, -0.14701499044895172, -0.11951171606779099, -0.0035160882398486137], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'ROC curve (area = {auc_score:.2f})')  # Add ROC curve to the axes", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "R", "OC", " curve", " (", "area", " =", " {", "auc", "_", "score", ":", ".", "2", "f", "})", "')", "  ", "#", " Add", " R", "OC", " curve", " to", " the", " axes", "\n"], "logprobs": [-0.14045320451259613, -0.11186975985765457, -0.0037365397438406944, -1.2755313036905136e-05, -0.00010954733443213627, -0.000854961050208658, -3.576272320060525e-06, -0.09706255793571472, -0.08335011452436447, -1.2322661876678467, -0.24252066016197205, -0.22353333234786987, -0.5450249314308167, -0.0005383234238252044, -0.2793826162815094, -0.1038813591003418, -0.6011375784873962, -0.08665040880441666, -0.00690739369019866, -0.02970760129392147, -0.000635183765552938, -1.9907753085135482e-05, -0.1191224753856659, -0.01165049895644188, -0.14789870381355286, -0.0006183857913129032, -0.007632971741259098, -0.01002621091902256, -1.2351096868515015, -0.00013052565918769687, -2.3405442237854004, -1.6912660598754883, -3.135155202471651e-05, -0.007255395874381065, -0.6642811894416809, -0.3073868751525879, -0.2512029707431793, -0.22854134440422058], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='Model (area = {:.2f})'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "Model", " (", "area", " =", " {:", ".", "2", "f", "})", "'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.12832723557949066, -0.0013712774962186813, -0.0031914988067001104, -1.9073468138230965e-06, -0.0002356490003876388, -0.0010519453790038824, -3.814689989667386e-06, -0.010134665295481682, -0.05348094180226326, -0.22180865705013275, -1.4252054691314697, -1.2912555932998657, -0.4438769817352295, -0.03345060721039772, -1.0277032852172852, -0.032550960779190063, -1.5030262470245361, -0.0003045333724003285, -0.0034086955711245537, -0.0002506657037883997, -0.0004191712068859488, -0.00019703354337252676, -8.83301836438477e-05, -0.0009910915978252888, -0.0011767374817281961, -1.728519782773219e-05, -0.049919698387384415, -0.03487385809421539], "finish_reason": "stop"}, {"text": "set_xlabel('False positive rate')", "tokens": ["set", "_", "xlabel", "('", "False", " positive", " rate", "')", "\n"], "logprobs": [-0.1793002486228943, -0.07840225100517273, -0.6875815987586975, -0.020212510600686073, -0.008931093849241734, -0.08368610590696335, -0.0014603198505938053, -0.005050994455814362, -0.005515239667147398], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-3.2543604902457446e-05, -3.969590397900902e-05, -0.0001760566228767857, -0.00022706791060045362, -0.0002150304353563115, -0.00016544880054425448, -1.5139465176616795e-05, -0.0023558977991342545, -0.0011728082317858934], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.15824922919273376, -0.0004961451631970704, -0.002156077418476343, -0.0027287888806313276, -0.01596442610025406, -9.285972191719338e-05, -0.014631472527980804, -0.008963230066001415, -0.004742208402603865], "finish_reason": "stop"}, {"text": "legend(loc='best')", "tokens": ["legend", "(", "loc", "='", "best", "')", "\n"], "logprobs": [-0.005882570054382086, -0.12542417645454407, -0.006064466200768948, -0.14006467163562775, -0.9172300696372986, -0.01788032427430153, -0.05556928366422653], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.017985237762331963, -0.004832018632441759, -0.010620737448334694, -0.4010755717754364], "finish_reason": "stop"}], "metrics": {"energy": 1474.8284956665045, "energy_per_token": 6.044379080600429, "time": 41.60608, "time_per_token": 0.1705167213114754}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -0.09028865396976471, -3.814689989667386e-06, -6.9141146923357155e-06, -0.007902429439127445, -0.5910323262214661, -0.043575387448072433, -0.03045637533068657, -0.01692248322069645], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.5737508535385132, -0.9515169858932495], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.binary_crossentropy, optimizer=keras.optimizers.SGD(lr=0.00005))", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "0", "0", "0", "0", "5", "))", "\n"], "logprobs": [-0.0011118428083136678, -0.027168842032551765, -0.065475232899189, -1.0644999742507935, -0.046479787677526474, -5.435795901576057e-05, -0.0010563514661043882, -1.7881233361549675e-05, -5.2927523938706145e-05, -0.652334988117218, -1.7523612768854946e-05, -3.58813522325363e-05, -1.2993727978027891e-05, -0.003718368476256728, -0.04162169247865677, -0.01337672770023346, -0.0018892312655225396, -1.7523612768854946e-05, -0.00015031162183731794, -0.0005378468777053058, -4.303362584323622e-05, -0.013718841597437859, -9.214453893946484e-05, -0.030319225043058395, -2.802344799041748, -0.002003925619646907, -0.12504121661186218, -0.0006467396160587668, -1.4163018465042114, -1.0739212036132812, -1.3155925273895264, -0.9114071726799011, -3.543031692504883, -0.12468085438013077, -0.010999638587236404], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0023097521625459194, -0.00013493580627255142, -0.01853175461292267, -0.011299662292003632, -0.0002989322238136083, -0.0012548437807708979, -0.007462482899427414, -9.285972191719338e-05, -6.556489552167477e-06, -0.008427414111793041, -0.6267103552818298, -0.0058647929690778255, -0.09075286239385605, -0.03509199246764183, -0.009840075857937336], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.06016260012984276, -0.1290448009967804, -0.0010657589882612228, -0.04457121342420578, -0.0011460172245278955, -0.010371478274464607, -0.00038115866482257843, -0.013964093290269375, -0.29541727900505066], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test.ravel(), Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00016604475968051702, -7.188061863416806e-05, -0.0008860476082190871, -0.6052607297897339, -0.002788823563605547, -0.0014310367405414581, -1.0728830375228426e-06, -1.537788011773955e-05, -5.960462772236497e-07, -0.003826678032055497, -0.03951544687151909, -0.00044431351125240326, -0.0003943857445847243, -1.3800461292266846, -0.011485172435641289, -5.400034933700226e-05, -0.0013088955311104655, -0.004357604775577784, -1.1086402082582936e-05, -1.1444026313256472e-05, -0.029095718637108803, -0.0024136954452842474], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.012060340493917465, -9.762764238985255e-05, -0.00037472377880476415, -0.001019792165607214, -4.768370445162873e-07, -0.0005116345710121095, -0.0018665050156414509, -1.0132738680113107e-05, -0.0007382289622910321, -0.0010564705589786172], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.008867527358233929, -0.002794410800561309, -0.0004605186404660344, -2.1815061700181104e-05, -3.182837463100441e-05, -0.0002213471452705562, -0.25371959805488586, -0.001613506581634283], "finish_reason": "stop"}, {"text": "plot(fpr, tpr)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0992901474237442, -0.07491941750049591, -0.0033623608760535717, -1.0371154530730564e-05, -9.345571743324399e-05, -0.0007634824141860008, -3.4570634852570947e-06, -2.5796122550964355, -0.19188547134399414], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='Model (AUC = %0.2f)' % auc_score, lw=2)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "Model", " (", "A", "UC", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ",", " l", "w", "=", "2", ")", "\n"], "logprobs": [-0.15081311762332916, -0.0013666347367689013, -0.00401405431330204, -2.264974000354414e-06, -0.00021610308613162488, -0.0009856133256107569, -3.6954811548639555e-06, -0.008807266131043434, -0.047518085688352585, -0.267314076423645, -1.4977643489837646, -1.4524472951889038, -0.8016801476478577, -0.006457770708948374, -0.07274877279996872, -0.8555051684379578, -0.03385299816727638, -3.135155202471651e-05, -0.5616574883460999, -0.0001161031104857102, -0.0010545651894062757, -0.004245673306286335, -0.015510289929807186, -2.50339189733495e-06, -0.005398694425821304, -1.2993727978027891e-05, -2.082832098007202, -0.9730861783027649, -2.5152843591058627e-05, -0.0009775151265785098, -0.2007024735212326, -0.1421760469675064, -0.04613504186272621], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.38620373606681824, -0.07268103957176208, -0.673309326171875, -0.012986371293663979, -0.0021362120751291513, -5.876845170860179e-05, -0.03246395289897919, -0.010819698683917522, -0.017972122877836227], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.076874756719917e-05, -5.018585216021165e-05, -0.00016699827392585576, -0.00025293012731708586, -0.00017724849749356508, -0.0001486429391661659, -1.2040065485052764e-05, -0.0020811345893889666, -0.001128751551732421], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.19494178891181946, -0.00039283663500100374, -0.002530826721340418, -0.003006464336067438, -0.011936663649976254, -0.00012218205665703863, -0.015224089846014977, -0.00885157659649849, -0.005940400995314121], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.005318658426403999, -2.0285584926605225, -0.04877376928925514], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>#!/usr/bin/env python3", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.020455943420529366, -0.005668517667800188, -0.01424701139330864, -1.572387933731079, -2.145764938177308e-06, -1.7881377516459906e-06, -1.6927575416048057e-05, -0.00022456508304458112, -0.15586812794208527, -1.416367530822754, -1.5204074382781982, -0.06051656976342201, -0.11187604814767838, -7.784063927829266e-05, -0.005862896796315908, -0.00047541281674057245, -0.03408725559711456, -0.004034238401800394, -0.49617624282836914, -0.01586505025625229], "finish_reason": "stop"}], "metrics": {"energy": 1505.5110579605102, "energy_per_token": 6.35236733316671, "time": 40.210903, "time_per_token": 0.16966625738396626}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -0.2419000267982483, -0.004998449236154556, -0.014171794056892395, -0.010030223987996578, -0.10179632157087326, -4.8993817472364753e-05, -6.6756979322235566e-06, -0.02869291789829731, -0.007892612367868423, -1.966933996300213e-05, -0.009656031616032124, -0.1508590430021286, -0.09028865396976471, -3.814689989667386e-06, -6.9141146923357155e-06, -0.007902429439127445, -0.5910323262214661, -0.043575387448072433, -0.03045637533068657, -0.01692248322069645], "finish_reason": "stop"}, {"text": " keras.models.Sequential(layers=[", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "(", "layers", "=[", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.9648059606552124, -3.981510963058099e-05, -3.123234637314454e-05, -1.5497195136049413e-06, 0.0, -3.0193140506744385, -2.4546761512756348, -0.1414906233549118, -0.5999208092689514], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.01), metrics='accuracy')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "1", ")", ",", " metrics", "='", "accuracy", "')", "\n"], "logprobs": [-0.0011269653914496303, -0.0227799229323864, -0.0699348971247673, -0.472261518239975, -0.002592062344774604, -2.9205850296420977e-05, -7.712543447269127e-05, -6.735097849741578e-05, -0.00023648326168768108, -0.00046659549116156995, -0.025521710515022278, -0.022337382659316063, -0.0025684009306132793, -2.884823152271565e-05, -6.532455881824717e-05, -1.5020257706055418e-05, -3.158996332786046e-05, -0.01383089367300272, -0.00024279984063468874, -0.014161568135023117, -0.18853066861629486, -8.22540732769994e-06, -1.4305104514278355e-06, -0.008128064684569836, -0.11622616648674011, -0.0002324311062693596, -1.0553667545318604, -0.7774595618247986, -1.3410053253173828, -0.0036047021858394146, -0.09150104969739914, -2.479224681854248, -0.3616020977497101, -0.002587187336757779, -0.011445574462413788], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0027358029037714005, -0.00014125302550382912, -0.015845924615859985, -0.00863473117351532, -0.00019333878299221396, -0.0012286503333598375, -0.007207819260656834, -9.345571743324399e-05, -7.271740287251305e-06, -0.00722178490832448, -0.49892929196357727, -0.004690477624535561, -0.1288955807685852, -0.040766336023807526, -0.007052172906696796], "finish_reason": "stop"}, {"text": " model(X_test).numpy()", "tokens": [" model", "(", "X", "_", "test", ")", ".", "numpy", "()", "\n"], "logprobs": [-0.06905881315469742, -2.1205780506134033, -0.006476129405200481, -0.018455220386385918, -0.0016890796832740307, -0.012828797101974487, -0.7931287288665771, -0.001723591354675591, -0.001378777320496738, -0.31379443407058716], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test.ravel(), Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00011848701251437888, -7.188061863416806e-05, -0.001116010476835072, -0.4465194642543793, -0.0027484046295285225, -0.0015792291378602386, -9.536738616588991e-07, -1.7523612768854946e-05, -7.152555099310121e-07, -0.0025215516798198223, -0.029269389808177948, -0.00047255316167138517, -0.0004858981992583722, -1.4783743619918823, -0.01566838100552559, -6.341733387671411e-05, -0.001179118873551488, -0.003626320045441389, -1.1324817933200393e-05, -1.5735502529423684e-05, -0.02956201508641243, -0.0027147603686898947], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.010352601297199726, -0.00011324241495458409, -0.0003644755925051868, -0.0012018608395010233, -3.576278118089249e-07, -0.0004698126285802573, -0.001609936123713851, -2.1219027985353023e-05, -0.0006839081761427224, -0.0009950215462595224], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.010737736709415913, -0.002695738337934017, -0.0003897384158335626, -2.2053474822314456e-05, -3.313963316031732e-05, -0.00026008085114881396, -0.23428256809711456, -0.0019149314612150192], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.3f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "3", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.11525174975395203, -0.0556681752204895, -0.00303498818539083, -6.9141146923357155e-06, -9.48860906646587e-05, -0.000709282117895782, -5.722029527532868e-06, -0.11337818205356598, -0.07746869325637817, -0.35435932874679565, -0.1766175925731659, -0.0002456601650919765, -0.1157408282160759, -0.12612028419971466, -0.34341269731521606, -0.01883525960147381, -0.06490273028612137, -0.09015783667564392, -4.362964682513848e-05, -2.696871042251587, -0.0004520586517173797, -0.0019615711644291878, -0.0033428759779781103, -0.022127756848931313, -5.960462772236497e-07, -0.002561623230576515, -7.629365427419543e-06, -0.006435740273445845, -0.3401143252849579], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='Model 1 (area = %.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "Model", " ", "1", " (", "area", " =", " %", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.12986339628696442, -0.0013609204906970263, -0.0032387918327003717, -2.622600959512056e-06, -0.00025412190007045865, -0.0012250783620402217, -3.3378546504536644e-06, -0.009694519452750683, -0.04948458448052406, -0.23601911962032318, -1.543736457824707, -2.0080690383911133, -0.053444329649209976, -0.4865967631340027, -0.23807168006896973, -0.012559250928461552, -0.18859148025512695, -2.693948745727539, -0.4025065004825592, -6.437094270950183e-05, -0.0019694233778864145, -0.006955340038985014, -0.026550179347395897, -1.1920922133867862e-06, -0.007112540304660797, -1.3112935448589269e-05, -0.0840144231915474, -0.053130462765693665], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.16657781600952148, -0.09148559719324112, -0.6574705243110657, -0.011886128224432468, -0.00273199868388474, -5.018585216021165e-05, -0.03873179852962494, -0.012417268939316273, -0.017488207668066025], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.625213477993384e-05, -4.494089080253616e-05, -0.0001711698860162869, -0.00025018901214934886, -0.00020847532141488045, -0.00016962042718660086, -1.6331539882230572e-05, -0.0021177739836275578, -0.0009698931244201958], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.18962691724300385, -0.0003999863693024963, -0.002398592187091708, -0.0036537572741508484, -0.01390825305134058, -0.00010466027742950246, -0.019646456465125084, -0.009450461715459824, -0.004400214180350304], "finish_reason": "stop"}, {"text": "legend(loc='best')", "tokens": ["legend", "(", "loc", "='", "best", "')", "\n"], "logprobs": [-0.0072823790833354, -0.12184790521860123, -0.00755962124094367, -0.12892869114875793, -1.253977656364441, -0.019736573100090027, -0.04281501844525337], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.018835142254829407, -0.006119443569332361, -0.011149131692945957, -0.33420321345329285], "finish_reason": "stop"}], "metrics": {"energy": 1451.4107993164075, "energy_per_token": 5.924125711495541, "time": 38.036995, "time_per_token": 0.15525304081632652}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -0.3261401951313019, -0.00019131260341964662, -0.00011538793478393927, -0.0008573431987315416, -0.0013733012601733208, -3.8265450712060556e-05, -0.0004124982515349984, -0.0055653867311775684, -0.019528623670339584, -0.00011526874004630372, -1.537788011773955e-05, -3.6954811548639555e-06, -5.006777428206988e-06, -0.0004378790326882154, -1.5592408180236816], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -1.1201642751693726, -0.00664181262254715], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.001))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "0", "1", "))", "\n"], "logprobs": [-0.0014667478390038013, -0.021954122930765152, -0.07241862267255783, -0.4491865038871765, -0.0031350532080978155, -3.6238969187252223e-05, -0.00013720047718379647, -8.380061626667157e-05, -0.000248401309363544, -0.0006576997111551464, -0.024607336148619652, -0.028294356539845467, -0.0026974028442054987, -2.9205850296420977e-05, -8.177422569133341e-05, -8.821448318485636e-06, -2.932505594799295e-05, -0.014417052268981934, -0.0003313469351269305, -0.013957157731056213, -0.1750876009464264, -6.318072337307967e-06, -1.1920922133867862e-06, -0.006965757813304663, -0.12377741932868958, -0.0001902399235405028, -1.02069091796875, -0.8963385224342346, -0.5677517056465149, -0.5659007430076599, -0.011757717467844486], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.002089223824441433, -0.00014351768186315894, -0.01405919250100851, -0.009792976081371307, -0.0003073934931308031, -0.0012978235026821494, -0.008306952193379402, -0.00011538793478393927, -8.821448318485636e-06, -0.007485555484890938, -0.7394307255744934, -0.005018732510507107, -0.13149923086166382, -0.040170345455408096, -0.008017499931156635], "finish_reason": "stop"}, {"text": " (model.predict(X_test) > 0.5).astype(int)", "tokens": [" (", "model", ".", "predict", "(", "X", "_", "test", ")", " >", " ", "0", ".", "5", ")", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-2.9697256088256836, -0.006857077591121197, -0.05192449316382408, -0.00010752100206445903, -0.001090885023586452, -0.0007245299639180303, -0.006549203768372536, -0.0001174142598756589, -0.07153616845607758, -0.09612525999546051, -0.0012213874142616987, -0.003700078232213855, -0.0015410225605592132, -0.0059540290385484695, -0.004252320621162653, -0.03250653296709061, -0.000301673193462193, -5.483612312673358e-06, -0.14703495800495148, -0.3957563042640686, -0.0006416169344447553, -0.07353302091360092], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00014244495832826942, -7.319182623177767e-05, -0.000974537746515125, -1.287724494934082, -0.0010748092317953706, -0.001313062384724617, -8.344646857949556e-07, -2.5152843591058627e-05, -7.152555099310121e-07, -0.00366337806917727, -0.028328774496912956, -0.00044645831803791225, -0.0006548406090587378, -0.2342965304851532, -0.0023836076725274324, -1.490105023549404e-05, -7.986990567587782e-06, -0.05525901913642883, -0.0023166504688560963], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.01180484239012003, -0.00012134769349358976, -0.0003773453936446458, -0.0011528043542057276, -4.768370445162873e-07, -0.0006878394051454961, -0.0016740844585001469, -2.038458114839159e-05, -0.0005922947311773896, -0.0010677833342924714], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(4.8, 4.8))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "4", ".", "8", ",", " ", "4", ".", "8", "))", "\n"], "logprobs": [-0.009609749540686607, -0.0029483442194759846, -0.0005677518784068525, -2.3841574147809297e-05, -3.6477376852417365e-05, -0.0002019201492657885, -1.6555172204971313, -0.2052093893289566, -1.0490362910786644e-05, -0.014138649217784405, -3.0854272842407227, -2.0394649505615234, -1.8205819129943848, -0.017473213374614716, -0.1679716259241104, -0.13496141135692596, -0.2578352093696594, -0.013829953037202358, -0.08124574273824692, -0.007620076648890972], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)  # Plot the ROC curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "  ", "#", " Plot", " the", " R", "OC", " curve", "\n"], "logprobs": [-0.1254296451807022, -0.08286862820386887, -0.0035614653024822474, -9.417489309271332e-06, -9.345571743324399e-05, -0.00112160702701658, -4.529942543740617e-06, -0.07619696855545044, -0.08324295282363892, -0.25881126523017883, -0.22322794795036316, -0.00025948495022021234, -0.11750176548957825, -0.13407139480113983, -0.3479599058628082, -0.014378158375620842, -0.06305655837059021, -0.0994696393609047, -5.3165931603871286e-05, -0.07410049438476562, -5.8887653722194955e-05, -0.0015519729349762201, -0.0026247594505548477, -0.01456662267446518, -4.768370445162873e-07, -0.002666015876457095, -7.510157047363464e-06, -0.007878419943153858, -1.3192644119262695, -0.0001225396408699453, -0.14544188976287842, -0.11877214163541794, -0.15575703978538513, -7.903263758635148e-05, -0.003543647238984704, -0.15888351202011108], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.17423351109027863, -0.001321634161286056, -0.003110334975644946, -2.264974000354414e-06, -0.0002649671514518559, -0.0012562725460156798, -4.768360213347478e-06, -0.010091002099215984, -0.054239120334386826, -0.2444227933883667, -1.9414361715316772, -0.0043599787168204784, -0.061899375170469284, -0.2539396286010742, -0.22930216789245605, -0.02018050104379654, -0.1391511708498001, -0.0617692731320858, -1.168244216387393e-05, -0.1014421284198761, -8.535020606359467e-05, -0.0010272946674376726, -0.0027761037927120924, -0.014679284766316414, -2.3841855067985307e-07, -0.004738055635243654, -1.6927575416048057e-05, -0.050009168684482574, -0.05317353084683418], "finish_reason": "stop"}, {"text": "set(xlabel='False positive rate', ylabel='True positive rate', title='ROC curve')", "tokens": ["set", "(", "xlabel", "='", "False", " positive", " rate", "'", ",", " y", "label", "='", "True", " positive", " rate", "'", ",", " title", "='", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.21757790446281433, -2.362257719039917, -0.4408412277698517, -0.009878203272819519, -0.004765818361192942, -0.04574143886566162, -0.0005921755800954998, -0.005403200164437294, -6.401333666872233e-05, -0.03989993780851364, -2.50339189733495e-06, -0.0027567262295633554, -0.00024005869636312127, -0.0005536930402740836, -2.109982233378105e-05, -0.13539348542690277, -0.0001752223033690825, -0.037265338003635406, -0.008868472650647163, -0.0029416880570352077, -0.00010251473577227443, -0.033830638974905014, -0.013922360725700855, -0.015925826504826546], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.255681051290594e-05, -5.2689116273541003e-05, -0.00012742661056108773, -0.00023100091493688524, -0.00018535325943958014, -0.00016819016309455037, -1.2159273865108844e-05, -0.0021422787103801966, -0.001061591086909175], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.1878957599401474, -0.0004196478403173387, -0.0026203603483736515, -0.0037738310638815165, -0.010788802057504654, -0.00010895135346800089, -0.017450837418437004, -0.00815857108682394, -0.005404741503298283], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.008184465579688549, -0.13584138453006744, -0.009628286585211754, -0.12055734544992447, -0.5600787401199341, -0.0036741863004863262, -0.012129828333854675, -0.0386674627661705], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.020392170175909996, -0.00579783134162426, -0.012191185727715492, -0.3262828290462494], "finish_reason": "stop"}], "metrics": {"energy": 1516.9853970623017, "energy_per_token": 5.768005312023961, "time": 38.377506, "time_per_token": 0.14592207604562737}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -1.282088041305542, -0.00018034738604910672, -6.496695277746767e-05, -0.0008605591137893498, -0.0004365683125797659, -7.390948667307384e-06, -3.397406908334233e-05, -0.003506703767925501, -0.015204952098429203, -7.343022298300639e-05, -1.3351351299206726e-05, -2.3841830625315197e-06, -4.410734163684538e-06, -0.0002548369811847806, -0.18351863324642181, -0.005250830203294754, -0.011528068222105503, -0.04589516296982765, -0.07522176206111908, -4.017272294731811e-05, -4.768360213347478e-06, -0.012296698056161404, -0.00472998758777976, -2.1934269170742482e-05, -0.008970318362116814, -0.11968729645013809, -0.0566895455121994, -3.576272320060525e-06, -7.867782187531702e-06, -0.0037085108924657106, -0.3661368787288666, -0.03532227873802185, -0.031273338943719864, -0.017658283933997154], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.9648059606552124, -3.981510963058099e-05, -3.123234637314454e-05, -1.5497195136049413e-06, 0.0, -0.4990617334842682, -0.009059041738510132], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.001))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "0", "1", "))", "\n"], "logprobs": [-0.0011269653914496303, -0.0227799229323864, -0.0699348971247673, -0.472261518239975, -0.002592062344774604, -2.9205850296420977e-05, -7.712543447269127e-05, -6.735097849741578e-05, -0.00023648326168768108, -0.00046659549116156995, -0.025521710515022278, -0.022337382659316063, -0.0025684009306132793, -2.884823152271565e-05, -6.532455881824717e-05, -1.5020257706055418e-05, -3.158996332786046e-05, -0.01383089367300272, -0.00024279984063468874, -0.014161568135023117, -0.18853066861629486, -8.22540732769994e-06, -1.4305104514278355e-06, -0.008128064684569836, -0.11622616648674011, -0.0002324311062693596, -1.0553667545318604, -0.9978880286216736, -0.5598527193069458, -0.42991945147514343, -0.012423627078533173], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=30, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "3", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0027358029037714005, -0.00014125302550382912, -0.015845924615859985, -0.00863473117351532, -0.00019333878299221396, -0.0012286503333598375, -0.007207819260656834, -9.345571743324399e-05, -7.271740287251305e-06, -0.00722178490832448, -0.9834949970245361, -0.0045387111604213715, -3.264986038208008, -0.20120620727539062, -0.5987775325775146, -0.03471198305487633, -0.005065583158284426, -0.07733961194753647, -0.01241785753518343, -0.02765447460114956], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.09870892763137817, -0.13891497254371643, -0.0009263038518838584, -0.04755241423845291, -0.0013699679402634501, -0.008981424383819103, -0.00045193947153165936, -0.014068477787077427, -0.2643108665943146], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00014768941036891192, -8.105902816168964e-05, -0.0010216975351795554, -0.5015931725502014, -0.0028859416488558054, -0.0015044810716062784, -8.344646857949556e-07, -1.5616295058862306e-05, -3.576278118089249e-07, -0.0029401429928839207, -0.03589494526386261, -0.00044264530879445374, -0.0004567056894302368, -0.29147228598594666, -0.007301077246665955, -1.1920858014491387e-05, -1.0847986231965479e-05, -0.021738819777965546, -0.002617150079458952], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.00941208191215992, -0.00013743886665906757, -0.00034421717282384634, -0.0009658439084887505, -4.768370445162873e-07, -0.0005292683490552008, -0.00206947629339993, -2.3603161025675945e-05, -0.0007295330869965255, -0.0010877889581024647], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.01019083522260189, -0.00282187107950449, -0.0003875934926327318, -2.8967437174287625e-05, -2.7894584491150454e-05, -0.0002847504511009902, -0.22986264526844025, -0.0018641252536326647], "finish_reason": "stop"}, {"text": "plot([0, 1], [0, 1], linestyle='--')", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " lin", "estyle", "='", "--", "')", "\n"], "logprobs": [-0.16055402159690857, -2.7119247913360596, -0.07315072417259216, -0.013671335764229298, -0.03508232533931732, -0.0033153113909065723, -0.0006006343755871058, -4.7444173105759546e-05, -0.002481002826243639, -0.0014900782844051719, -0.00023755589791107923, -0.00026806574896909297, -0.00014399446081370115, -0.006031762808561325, -6.19869097135961e-05, -0.6211742162704468, 0.0, -0.12116708606481552, -0.13163518905639648, -0.24903465807437897, -0.19554764032363892], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-2.446631669998169, -0.2667442858219147, -0.887158215045929, -0.0443807952105999, -0.003946968819946051, -5.280832192511298e-05, -0.019206851720809937, -0.04505371302366257, -0.07439755648374557], "finish_reason": "stop"}, {"text": "legend(loc=\"lower right\")", "tokens": ["legend", "(", "loc", "=", "\"", "lower", " right", "\"", ")", "\n"], "logprobs": [-1.572535514831543, -0.6308539509773254, -0.1069973036646843, -1.6853899955749512, -0.3244442343711853, -0.07936940342187881, -0.009852824732661247, -1.8358061424805783e-05, -0.07009939849376678, -0.03907887637615204], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-5.4238757002167404e-05, -4.136476854910143e-05, -0.00015054999676067382, -0.00022921319759916514, -0.0001995364436879754, -0.00016616393986623734, -1.3947389561508317e-05, -0.0025409336667507887, -0.0010215784423053265], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.18100525438785553, -0.0004568248405121267, -0.0023137959651649, -0.0028419604059308767, -0.016109542921185493, -0.00011097769311163574, -0.015044908970594406, -0.00974823534488678, -0.006302718538790941], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.006010908167809248, -0.14727522432804108, -0.007147575728595257, -0.13163718581199646, -0.4425191879272461, -0.0029484631959348917, -0.010630055330693722, -0.045790404081344604], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.023041604086756706, -0.005594311747699976, -0.012678848579525948, -0.3446049690246582], "finish_reason": "stop"}], "metrics": {"energy": 1266.05756454277, "energy_per_token": 5.888639835082651, "time": 34.087685, "time_per_token": 0.15854737209302325}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -1.282088041305542, -0.00018034738604910672, -6.496695277746767e-05, -0.0008605591137893498, -0.0004365683125797659, -7.390948667307384e-06, -3.397406908334233e-05, -0.003506703767925501, -0.015204952098429203, -7.343022298300639e-05, -1.3351351299206726e-05, -2.3841830625315197e-06, -4.410734163684538e-06, -0.0002548369811847806, -0.18351863324642181, -0.005250830203294754, -0.011528068222105503, -0.04589516296982765, -0.07522176206111908, -4.017272294731811e-05, -4.768360213347478e-06, -0.012296698056161404, -0.00472998758777976, -2.1934269170742482e-05, -0.008970318362116814, -0.11968729645013809, -0.0566895455121994, -3.576272320060525e-06, -7.867782187531702e-06, -0.0037085108924657106, -0.3661368787288666, -0.03532227873802185, -0.031273338943719864, -0.017658283933997154], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.9648059606552124, -3.981510963058099e-05, -3.123234637314454e-05, -1.5497195136049413e-06, 0.0, -0.4990617334842682, -0.009059041738510132], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.binary_crossentropy, optimizer=keras.optimizers.SGD(learning_rate=0.2))", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "2", "))", "\n"], "logprobs": [-0.0011269653914496303, -0.0227799229323864, -0.0699348971247673, -0.9942837953567505, -0.03225574642419815, -3.075552376685664e-05, -0.000974656839389354, -1.4066597032069694e-05, -6.282132380874828e-05, -0.6843965649604797, -2.3245540432981215e-05, -4.2914423829643056e-05, -7.390948667307384e-06, -0.0030115749686956406, -0.05381231755018234, -0.01255230512470007, -0.001950387260876596, -1.8954096958623268e-05, -0.0001599660754436627, -0.0004549183649942279, -4.4225667807040736e-05, -0.009586726315319538, -8.308542601298541e-05, -0.03239551559090614, -0.16406667232513428, -5.483612312673358e-06, -1.6689286894688848e-06, -0.007012872491031885, -0.15832220017910004, -0.000444551813416183, -1.6357637643814087, -0.28544172644615173, -0.008985677734017372], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.002067572670057416, -0.0001387499796692282, -0.01316133327782154, -0.009976759552955627, -0.00024148885859176517, -0.0013011569390073419, -0.007504960056394339, -0.0001289761275984347, -6.556489552167477e-06, -0.009638085961341858, -0.6894962191581726, -0.0040578655898571014, -0.3142211437225342, -0.12749919295310974, -0.32710400223731995, -0.45923084020614624, -0.022600343450903893, -0.004611096810549498, -0.15206687152385712, -0.006759989075362682, -0.02100893296301365], "finish_reason": "stop"}, {"text": " model.predict(X_test).ravel()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "ravel", "()", "\n"], "logprobs": [-0.06949139386415482, -0.1470312476158142, -0.0011133907828480005, -0.03230687603354454, -0.0012261499650776386, -0.009929194115102291, -0.0004325169720686972, -0.013871454633772373, -1.397721529006958, -0.7717805504798889, -0.00011252723925281316, -0.016843948513269424], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00013481661153491586, -6.472854875028133e-05, -0.0010553987231105566, -0.4818236827850342, -0.0026129886973649263, -0.0011937642702832818, -7.152555099310121e-07, -1.4424220353248529e-05, -5.960462772236497e-07, -0.0026657781563699245, -0.042609184980392456, -0.0005017452058382332, -0.0003583981015253812, -0.3085659444332123, -0.009486831724643707, -1.5020257706055418e-05, -1.2755313036905136e-05, -0.020510133355855942, -0.002518697874620557], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.01276630163192749, -0.00010322991875000298, -0.00027807659353129566, -0.0011131525970995426, -4.768370445162873e-07, -0.000521523819770664, -0.0017445358680561185, -2.0503786799963564e-05, -0.0007412070408463478, -0.0009084388730116189], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.008699612691998482, -0.002775509376078844, -0.0005367745761759579, -2.1219027985353023e-05, -3.182837463100441e-05, -0.0002548369811847806, -0.23997685313224792, -0.0017484629061073065], "finish_reason": "stop"}, {"text": "plot([0, 1], [0, 1], 'k-', zorder=0)", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " '", "k", "-'", ",", " z", "order", "=", "0", ")", "\n"], "logprobs": [-0.11189012229442596, -2.722480297088623, -0.05214720219373703, -0.015085304155945778, -0.02509886585175991, -0.003520245896652341, -0.0005772831500507891, -4.1126360883936286e-05, -0.002014394849538803, -0.0015456646215170622, -0.00023898606013972312, -0.0002734287118073553, -0.00010072677832795307, -0.00450536422431469, -5.125868119648658e-05, -1.1753062009811401, -0.12799543142318726, -2.1859896183013916, -0.0010768335778266191, -2.939828395843506, -8.702239938429557e-06, -0.29823940992355347, -0.32370197772979736, -0.04755616560578346, -0.2934578061103821], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC = {:.3f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " {:", ".", "3", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.10952753573656082, -0.001259606215171516, -0.002898778999224305, -1.7881377516459906e-06, -0.00025281094713136554, -0.0009600082994438708, -3.3378546504536644e-06, -0.012311063706874847, -0.062347155064344406, -0.22291989624500275, -2.0579466819763184, -0.0033005783334374428, -0.424495667219162, -0.035990625619888306, -0.08496204018592834, -0.3745853006839752, -0.06603870540857315, -0.005485126748681068, -0.00029047083808109164, -0.0001308832288486883, -8.248942322097719e-05, -0.0009882333688437939, -0.0011320855701342225, -1.8000440832111053e-05, -0.06110336259007454, -0.046271178871393204], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.2768228054046631, -0.07463589310646057, -0.6865200996398926, -0.010409466922283173, -0.0029882797971367836, -5.781483559985645e-05, -0.03144386038184166, -0.01059006992727518, -0.020178280770778656], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.3748852476710454e-05, -6.103329360485077e-05, -0.00019333878299221396, -0.00022313489171210676, -0.0002108589978888631, -0.00015507926582358778, -1.3708974620385561e-05, -0.002388721564784646, -0.0011542332358658314], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.21470484137535095, -0.000486970558995381, -0.0031097407918423414, -0.002833282807841897, -0.012761122547090054, -0.00011550712952157483, -0.014153693802654743, -0.008729864843189716, -0.006344771012663841], "finish_reason": "stop"}, {"text": "legend(loc=\"best\")", "tokens": ["legend", "(", "loc", "=", "\"", "best", "\"", ")", "\n"], "logprobs": [-0.006973689422011375, -0.13246744871139526, -0.008435452356934547, -2.2036871910095215, -0.33145207166671753, -2.4601285457611084, -4.6132929128361866e-05, -0.04486064985394478, -0.05561574175953865], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.015750644728541374, -0.00541861355304718, -0.012133833020925522, -0.39829307794570923], "finish_reason": "stop"}], "metrics": {"energy": 1410.936470518112, "energy_per_token": 5.8303159938764955, "time": 39.081142, "time_per_token": 0.16149232231404959}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -1.282088041305542, -0.00018034738604910672, -6.496695277746767e-05, -0.0008605591137893498, -0.0004365683125797659, -7.390948667307384e-06, -3.397406908334233e-05, -0.003506703767925501, -0.015204952098429203, -7.343022298300639e-05, -1.3351351299206726e-05, -2.3841830625315197e-06, -4.410734163684538e-06, -0.0002548369811847806, -0.18351863324642181, -0.005250830203294754, -0.011528068222105503, -0.04589516296982765, -0.07522176206111908, -4.017272294731811e-05, -4.768360213347478e-06, -0.012296698056161404, -0.00472998758777976, -2.1934269170742482e-05, -0.008970318362116814, -0.11968729645013809, -0.0566895455121994, -3.576272320060525e-06, -7.867782187531702e-06, -0.0037085108924657106, -0.3661368787288666, -0.03532227873802185, -0.031273338943719864, -0.017658283933997154], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.9648059606552124, -3.981510963058099e-05, -3.123234637314454e-05, -1.5497195136049413e-06, 0.0, -0.4990617334842682, -0.009059041738510132], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.5))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "5", "))", "\n"], "logprobs": [-0.0011269653914496303, -0.0227799229323864, -0.0699348971247673, -0.472261518239975, -0.002592062344774604, -2.9205850296420977e-05, -7.712543447269127e-05, -6.735097849741578e-05, -0.00023648326168768108, -0.00046659549116156995, -0.025521710515022278, -0.022337382659316063, -0.0025684009306132793, -2.884823152271565e-05, -6.532455881824717e-05, -1.5020257706055418e-05, -3.158996332786046e-05, -0.01383089367300272, -0.00024279984063468874, -0.014161568135023117, -0.18853066861629486, -8.22540732769994e-06, -1.4305104514278355e-06, -0.008128064684569836, -0.11622616648674011, -0.0002324311062693596, -2.5674402713775635, -0.41347450017929077, -0.013173333369195461], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0027358029037714005, -0.00014125302550382912, -0.015845924615859985, -0.00863473117351532, -0.00019333878299221396, -0.0012286503333598375, -0.007207819260656834, -9.345571743324399e-05, -7.271740287251305e-06, -0.00722178490832448, -0.49892929196357727, -0.004690477624535561, -0.1288955807685852, -0.040766336023807526, -0.007052172906696796], "finish_reason": "stop"}, {"text": " model.predict(X_test).flatten()", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", ".", "fl", "atten", "()", "\n"], "logprobs": [-0.06905881315469742, -0.1285432130098343, -0.0009259465732611716, -0.04138175770640373, -0.0011486368020996451, -0.010576623491942883, -0.0004624251159839332, -0.016742901876568794, -1.5257258415222168, -1.2935534715652466, -1.5735502529423684e-05, -0.00019822540343739092, -0.011148188263177872], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00014137222024146467, -9.691245941212401e-05, -0.000824230897706002, -0.4662671983242035, -0.002877739956602454, -0.0016379047883674502, -8.344646857949556e-07, -1.645074735279195e-05, -4.768370445162873e-07, -0.003003730671480298, -0.04082893580198288, -0.0004836343287024647, -0.0005567907355725765, -0.3188357353210449, -0.006247988436371088, -1.0847986231965479e-05, -1.4066597032069694e-05, -0.022038204595446587, -0.002259679604321718], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.014345255680382252, -0.00010918975021922961, -0.0003430254873819649, -0.0011801904765889049, -4.768370445162873e-07, -0.0004954302567057312, -0.0021077815908938646, -1.883488948806189e-05, -0.0007337023853324354, -0.0009064141195267439], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.007322496734559536, -0.0023776614107191563, -0.0005178302526473999, -2.4318398573086597e-05, -2.706014311115723e-05, -0.0002485204895492643, -0.2384859323501587, -0.0015754204941913486], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (AUC = {:.2f})'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "A", "UC", " =", " {:", ".", "2", "f", "})", "'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.14920686185359955, -0.07104429602622986, -0.003557307878509164, -8.34461570775602e-06, -0.00010156115604331717, -0.0008351890719495714, -4.0531076592742465e-06, -0.10760808736085892, -0.08199447393417358, -0.3705601692199707, -0.23229685425758362, -0.00020847532141488045, -0.11043655872344971, -0.12635111808776855, -1.4459810256958008, -0.001740013831295073, -0.10728196799755096, -1.5269874334335327, -1.055523157119751, -0.1710176020860672, -0.0007543102256022394, -0.005386363714933395, -0.0004211969207972288, -0.0003103728231508285, -0.0002964295563288033, -8.165503095369786e-05, -0.00041476229671388865, -0.0005485698929987848, -1.6212332411669195e-05, -0.005184776149690151, -0.2936042845249176], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='Model', lw=2)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "Model", "'", ",", " l", "w", "=", "2", ")", "\n"], "logprobs": [-0.13444402813911438, -0.001192930736579001, -0.003711598925292492, -1.6689286894688848e-06, -0.00020454221521504223, -0.0009710840531624854, -4.0531076592742465e-06, -0.006853288970887661, -0.05100676789879799, -0.26202377676963806, -1.5348204374313354, -1.1174923181533813, -0.016061680391430855, -1.2525297403335571, -5.483612312673358e-06, -0.0017314456636086106, -0.1522357016801834, -0.09283332526683807, -0.04170013219118118], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.21980422735214233, -0.08672747015953064, -0.9552890062332153, -0.01201216783374548, -0.002520957263186574, -5.900685573578812e-05, -0.03572817146778107, -0.012346859090030193, -0.015546558424830437], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-4.672895011026412e-05, -5.566918844124302e-05, -0.00010156115604331717, -0.00029059001826681197, -0.0001954841281985864, -0.0001805857609724626, -1.0967194612021558e-05, -0.002260274486616254, -0.0009766814764589071], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.1945788711309433, -0.0004240567213855684, -0.003048061393201351, -0.002859553089365363, -0.01682390458881855, -0.00010585224663373083, -0.014978794381022453, -0.011225048452615738, -0.005376047920435667], "finish_reason": "stop"}, {"text": "legend(loc='best')", "tokens": ["legend", "(", "loc", "='", "best", "')", "\n"], "logprobs": [-0.0051030623726546764, -0.10953789949417114, -0.005576530005782843, -0.10362527519464493, -1.4844653606414795, -0.013757878914475441, -0.045089151710271835], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.02346624992787838, -0.0060257199220359325, -0.018189528957009315, -0.3362007141113281], "finish_reason": "stop"}], "metrics": {"energy": 1256.8682546119678, "energy_per_token": 5.464644585269426, "time": 35.169395, "time_per_token": 0.15291041304347827}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.012975898571312428, -6.615896563744172e-05, -0.0065081072971224785, -0.0013433012645691633, -1.282088041305542, -0.00018034738604910672, -6.496695277746767e-05, -0.0008605591137893498, -0.0004365683125797659, -7.390948667307384e-06, -3.397406908334233e-05, -0.003506703767925501, -0.015204952098429203, -7.343022298300639e-05, -1.3351351299206726e-05, -2.3841830625315197e-06, -4.410734163684538e-06, -0.0002548369811847806, -0.18351863324642181, -0.005250830203294754, -0.011528068222105503, -0.04589516296982765, -0.07522176206111908, -4.017272294731811e-05, -4.768360213347478e-06, -0.012296698056161404, -0.00472998758777976, -2.1934269170742482e-05, -0.008970318362116814, -0.11968729645013809, -0.0566895455121994, -3.576272320060525e-06, -7.867782187531702e-06, -0.0037085108924657106, -2.3877756595611572, -0.05691220983862877, -0.01436217688024044], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.08733513951301575, -7.390703103737906e-05, -3.6000557884108275e-05, -0.48072466254234314, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.5737508535385132, -0.9515169858932495], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.binary_crossentropy, optimizer=keras.optimizers.SGD(learning_rate=0.5))", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "5", "))", "\n"], "logprobs": [-0.0011118428083136678, -0.027168842032551765, -0.065475232899189, -1.0644999742507935, -0.046479787677526474, -5.435795901576057e-05, -0.0010563514661043882, -1.7881233361549675e-05, -5.2927523938706145e-05, -0.652334988117218, -1.7523612768854946e-05, -3.58813522325363e-05, -1.2993727978027891e-05, -0.003718368476256728, -0.04162169247865677, -0.01337672770023346, -0.0018892312655225396, -1.7523612768854946e-05, -0.00015031162183731794, -0.0005378468777053058, -4.303362584323622e-05, -0.013718841597437859, -9.214453893946484e-05, -0.030319225043058395, -0.17705678939819336, -4.887569048150908e-06, -2.3841830625315197e-06, -0.008062673732638359, -0.14547085762023926, -0.00042226933874189854, -2.4057869911193848, -0.08244970440864563, -0.007873570546507835], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=500, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "5", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0023097521625459194, -0.00013493580627255142, -0.01853175461292267, -0.011299662292003632, -0.0002989322238136083, -0.0012548437807708979, -0.007462482899427414, -9.285972191719338e-05, -6.556489552167477e-06, -0.008427414111793041, -0.805592954158783, -0.003913127351552248, -2.1480164527893066, -0.2900874614715576, -0.7815139293670654, -0.19482465088367462, -0.021594634279608727, -0.0057834903709590435, -0.37953120470046997, -0.010161571204662323, -0.023322198539972305], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.07545581459999084, -0.15128040313720703, -0.0013579442165791988, -0.03317791596055031, -0.0016332633094862103, -0.010837034322321415, -0.000495549407787621, -0.015252502635121346, -0.3126295208930969], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test.ravel(), Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.00012861855793744326, -7.056941103655845e-05, -0.0008381668012589216, -0.4333452880382538, -0.0023914568591862917, -0.0013311582151800394, -8.344646857949556e-07, -1.3470558769768104e-05, -3.576278118089249e-07, -0.004296358674764633, -0.03591829165816307, -0.0004881620698142797, -0.0003978414461016655, -1.4384814500808716, -0.009808794595301151, -5.113947918289341e-05, -0.0016777737764641643, -0.0046609328128397465, -1.2397689715726301e-05, -1.5258672647178173e-05, -0.027017779648303986, -0.0028221087995916605], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.011802015826106071, -0.00011717586312443018, -0.00038532938924618065, -0.001134824356995523, -4.768370445162873e-07, -0.0006884350441396236, -0.001589702907949686, -1.7523612768854946e-05, -0.0006680640508420765, -0.0010762381134554744], "finish_reason": "stop"}, {"text": " ax = plt.subplots(1, 1)", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.010503842495381832, -0.0028977093752473593, -0.0004207202873658389, -2.1457441107486375e-05, -2.5033637939486653e-05, -0.00025149996508844197, -1.458172082901001, -2.1110880374908447, -0.0909058153629303, -0.17545276880264282, -0.0019657351076602936, -0.6642646193504333, -0.0014731755945831537], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve, AUC = %0.2f' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", ",", " A", "UC", " =", " %", "0", ".", "2", "f", "'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.0982912927865982, -0.06971989572048187, -0.004352263640612364, -9.775113539944869e-06, -9.786603914108127e-05, -0.0007701530121266842, -5.006777428206988e-06, -0.09225431829690933, -0.09643631428480148, -0.3402940034866333, -0.2034299373626709, -0.00029690624796785414, -0.1200302243232727, -2.7487809658050537, -0.09560276567935944, -0.0006124289939180017, -0.3462313711643219, -1.1788983345031738, -0.10551322251558304, -2.634490556374658e-05, -0.28880780935287476, -0.0003026265767402947, -0.003191736526787281, -0.023693406954407692, -0.02312139794230461, -2.3841830625315197e-06, -0.004342293832451105, -6.079655122448457e-06, -0.008802421391010284, -0.31945621967315674], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='Model AUC={:.2f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "Model", " A", "UC", "={", ":", ".", "2", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.08431676775217056, -0.0016577800270169973, -0.004328406415879726, -1.5497195136049413e-06, -0.00020203932945150882, -0.0011522090062499046, -4.529942543740617e-06, -0.00978849083185196, -0.07136624306440353, -0.2459447979927063, -1.4677952527999878, -2.020425319671631, -0.004461097996681929, -1.9371986389160156, -0.05692426115274429, -0.10318291932344437, -1.2007676362991333, -0.000795882020611316, -0.002518697874620557, -0.00031132620642893016, -0.0001538873475510627, -0.00011431517486926168, -0.0014118712861090899, -0.0008946230518631637, -7.390948667307384e-06, -0.05810622125864029, -0.05327717959880829], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-1.7476739883422852, -0.894473671913147, -0.026412375271320343], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-5.5549986427649856e-05, -5.1020273531321436e-05, -0.0001267114421352744, -0.00023505308490712196, -0.0002348147245356813, -0.00015352977789007127, -1.549708758830093e-05, -0.002451749751344323, -0.0009765623253770173], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.09544002264738083, -0.00042691652197390795, -0.004031745251268148, -0.002919223625212908, -0.013019553385674953, -9.727005090098828e-05, -0.017510931938886642, -0.008381430059671402, -0.005620509851723909], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.006558915134519339, -0.08175557851791382, -0.00402711471542716, -0.0972534790635109, -0.5576902627944946, -0.0013336582342162728, -0.006645009852945805, -0.03648130223155022], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.02157503552734852, -0.0056595089845359325, -0.01237288024276495, -0.34299761056900024], "finish_reason": "stop"}], "metrics": {"energy": 1520.4407934379587, "energy_per_token": 6.256957997687073, "time": 44.63722, "time_per_token": 0.1836922633744856}}
