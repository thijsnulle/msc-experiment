{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, shuffle=True)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " shuffle", "=", "True", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -0.17957919836044312, -0.0004731489170808345, -0.00982366781681776, -0.013597368262708187, -0.08335768431425095, -2.145764938177308e-06, -3.45700973412022e-05, -0.02019907534122467, -0.016435477882623672, -4.458328112377785e-05, -0.007441657595336437, -0.2136436551809311, -2.7645139694213867, -0.0029893494211137295, -0.05757776275277138, -0.9420280456542969, -0.022272096946835518], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -2.067887783050537, -0.01404026709496975], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.0013191340258345008, -0.0017454879125580192, -1.70511794090271, -1.823885577323381e-05, -0.15344341099262238, -0.34401941299438477, -0.00015317220822907984, -0.00034671969478949904, -0.0010630200849846005, -0.03263000026345253, -0.06794598698616028, -0.012482728809118271, -0.0017328736139461398, -0.0003883084573317319, -0.00010263393050990999, -0.2337428629398346, -0.003649600315839052], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0, epochs=100)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ",", " epochs", "=", "1", "0", "0", ")", "\n"], "logprobs": [-0.0018646011594682932, -0.0001668790791882202, -0.01931384764611721, -0.039781033992767334, -0.00016366096679121256, -0.0005339150666259229, -0.019415687769651413, -0.004038156475871801, -1.6212332411669195e-05, -0.020655058324337006, -0.7778920531272888, -0.0027259355410933495, -0.07791529595851898, -0.7307730317115784, -0.3984835147857666, -0.0005676327273249626, -0.542307436466217, -0.10025963932275772, -1.0940512418746948, -0.5684570670127869, -0.009147756733000278], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.010887622833251953, -0.0007102350937202573, -0.0006311332108452916, -0.030675014480948448, -0.0007969540893100202, -0.00030560590676032007, -0.0008530553313903511, -0.005441733635962009, -0.05087263509631157], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0037600549403578043, -0.013883916661143303, -0.001091480371542275, -0.1920124888420105, -0.001527215470559895, -0.006280329078435898, -3.576278118089249e-07, -2.396077979938127e-05, -7.510157047363464e-06, -0.00017295771976932883, -0.3549691140651703, -0.002291911980137229, -0.007334567606449127, -0.10927236080169678, -0.005367392208427191, -6.12716976320371e-05, -8.332382276421413e-05, -0.24718354642391205, -0.0182165689766407], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0033056873362511396, -7.033323527139146e-06, -0.0003070359816774726, -0.0008208957733586431, -3.4570634852570947e-06, -0.004265971481800079, -0.001566374790854752, -0.0005000770906917751, -0.0008201810996979475, -0.003987576812505722], "finish_reason": "stop"}, {"text": " ax = plt.subplots(1, 1)", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "1", ",", " ", "1", ")", "\n"], "logprobs": [-0.04757526144385338, -0.007458104752004147, -0.0005824061809107661, -0.0006165986997075379, -0.011167521588504314, -7.235741941258311e-05, -1.420912742614746, -1.1169867515563965, -0.25399741530418396, -0.20393423736095428, -0.057181548327207565, -0.5052509903907776, -0.004710054956376553], "finish_reason": "stop"}, {"text": "plot(fpr, tpr)  # Plot the ROC curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ")", "  ", "#", " Plot", " the", " R", "OC", " curve", "\n"], "logprobs": [-0.0333656370639801, -0.01741815358400345, -0.007544832304120064, -5.8412379075889476e-06, -0.0012768696760758758, -0.0016927688848227262, -0.00010895135346800089, -2.989581346511841, -0.5185167789459229, -8.535020606359467e-05, -0.047228507697582245, -0.12571163475513458, -0.3977571427822113, -8.22540732769994e-06, -0.008067877031862736, -0.08122354000806808], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, '-r', label='AUC = {:.3f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " '-", "r", "'", ",", " label", "='", "A", "UC", " =", " {:", ".", "3", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.022402429953217506, -0.011914871633052826, -0.00630473205819726, -1.9073468138230965e-06, -0.0007887351675890386, -0.0015825617592781782, -0.0007459718617610633, -0.016402525827288628, -3.5990211963653564, -0.9115298390388489, -0.18504688143730164, -0.00029297350556589663, -0.09911515563726425, -0.18757790327072144, -0.337185263633728, -0.003833447117358446, -0.30827784538269043, -0.30919721722602844, -0.21000264585018158, -0.4468153715133667, -0.01002019178122282, -0.004210535902529955, -0.0003599472693167627, -0.0003623305819928646, -0.0001560327800689265, -0.004706139676272869, -0.0014612721279263496, -2.2411095415009186e-05, -0.03110070899128914, -0.08515878766775131], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-2.519674777984619, -0.056097451597452164, -0.00863863155245781, -0.20509055256843567, -0.618996798992157, -0.21186159551143646, -0.046082109212875366, -0.04450759291648865], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00013362467871047556, -6.6756979322235566e-06, -0.0005706112715415657, -0.00017081231635529548, -0.00024375328212045133, -0.002373499097302556, -0.00012694983161054552, -0.0018005840247496963, -0.002924928907305002], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.037985868752002716, -0.0006357794045470655, -0.03733872249722481, -0.007953757420182228, -0.0593920536339283, -0.0007475204183720052, -0.02157771773636341, -0.008085614070296288, -0.01173026580363512], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.05477476119995117, -0.35308778285980225, -0.0037601736839860678, -0.2705312967300415, -0.6008997559547424, -0.10777924209833145, -0.02703738957643509, -0.0200983677059412], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.015914445742964745, -0.0011096993694081903, -0.006409800611436367, -0.801830530166626], "finish_reason": "stop"}], "metrics": {"energy": 301.22497442054737, "energy_per_token": 1.3945600667617934, "time": 13.2355585, "time_per_token": 0.0612757337962963}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -0.20662526786327362, -0.0006124289939180017, -0.021198369562625885, -0.00964576005935669, -0.08393506705760956, -1.6689286894688848e-06, -4.565611743601039e-05, -0.022526217624545097, -0.018831515684723854, -4.8874615458771586e-05, -0.007649179082363844, -0.18480026721954346, -0.1227041557431221, -1.5497195136049413e-06, -4.410734163684538e-06, -0.001611721352674067, -0.22465351223945618, -0.035885170102119446, -0.11691216379404068, -0.025658590719103813], "finish_reason": "stop"}, {"text": " keras.models.Sequential([keras.layers.Dense(1,", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.6890829205513, -2.2464144229888916, -9.703165414975956e-05, -0.0010071687866002321, -2.9801878554280847e-05, -0.033448416739702225, -0.00022194306075107306, -0.00018249277491122484, -0.5158704519271851, -0.10027678310871124, -2.3980824947357178], "finish_reason": "stop"}, {"text": "compile(", "tokens": ["compile", "(", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -2.079106330871582], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, batch_size=128, epochs=100, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " batch", "_", "size", "=", "1", "2", "8", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.001587560516782105, -0.0001740304142003879, -0.021264657378196716, -0.040321268141269684, -0.0002302858338225633, -0.00047672350774519145, -0.01812806911766529, -0.00264711189083755, -1.5616295058862306e-05, -0.02109682746231556, -2.2093725204467773, -9.16677454370074e-05, -3.58813522325363e-05, -0.0015236446633934975, -0.7042058706283569, -2.3779006004333496, -0.03180421516299248, -0.014160511083900928, -0.1478176862001419, -0.0003756771038752049, -0.5449583530426025, -0.14284417033195496, -0.7223334312438965, -0.20703396201133728, -0.021218210458755493, -0.0011803095694631338, -0.13375389575958252, -0.1495935022830963, -0.009249101392924786], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.011155379004776478, -0.0005172345554456115, -0.0005029367166571319, -0.036299798637628555, -0.000676998752169311, -0.000316212244797498, -0.00087878224439919, -0.0050785113126039505, -0.051920533180236816], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.004013935569673777, -0.011789645068347454, -0.001258772797882557, -0.1676613837480545, -0.0014721043407917023, -0.0056321267038583755, -3.576278118089249e-07, -2.3603161025675945e-05, -7.748573807475623e-06, -0.00021336186910048127, -0.25501036643981934, -0.002650916576385498, -0.005979032255709171, -0.09571066498756409, -0.004608604591339827, -5.98412734689191e-05, -8.797258487902582e-05, -1.4454858303070068, -0.07713104784488678, -0.0015575670404359698, -0.0002330270071979612, -0.012580323033034801, -0.04899173229932785, -0.3347693979740143, -0.01396926585584879], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.003423308255150914, -7.033323527139146e-06, -0.0003413571394048631, -0.0009053422254510224, -3.2186455882765586e-06, -0.0047689033672213554, -0.0015115038258954883, -0.00045193947153165936, -0.0006366133457049727, -0.004040293861180544], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04371267184615135, -0.00641311751678586, -0.0006924853660166264, -0.0006598440813831985, -0.010076722130179405, -6.532455881824717e-05, -0.27035263180732727, -0.0019407500512897968], "finish_reason": "stop"}, {"text": "plot(fpr, tpr)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.030040819197893143, -0.0194418765604496, -0.009156852029263973, -5.006777428206988e-06, -0.001328062848187983, -0.0016582560492679477, -0.00011073929636040702, -2.9159812927246094, -1.1278936862945557], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, color='red', linewidth=2, label=f\"AUC={auc_score:.3}\")", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " color", "='", "red", "'", ",", " linewidth", "=", "2", ",", " label", "=", "f", "\"", "A", "UC", "={", "auc", "_", "score", ":", ".", "3", "}\"", ")", "\n"], "logprobs": [-0.02418631687760353, -0.011293650604784489, -0.0045656487345695496, -1.5497195136049413e-06, -0.0008330450509674847, -0.0014838885981589556, -0.0006170752458274364, -0.018801100552082062, -2.0398287773132324, -0.02016274258494377, -2.0886425971984863, -0.042073383927345276, -0.00012039413559250534, -1.6129159927368164, -0.0006660388899035752, -0.41375306248664856, -0.48551493883132935, -0.24642428755760193, -2.3420372009277344, -0.253620982170105, -1.8373490571975708, -0.24707433581352234, -0.004160202573984861, -1.2447612285614014, -0.05122401937842369, -0.006173825357109308, -5.900685573578812e-05, -0.25824183225631714, -0.033112067729234695, -0.9542418122291565, -2.7481729984283447, -0.029046738520264626, -0.022793089970946312], "finish_reason": "stop"}, {"text": "plot([0, 1], [0, 1], label='Random')", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " label", "='", "Random", "')", "\n"], "logprobs": [-0.7478047013282776, -1.674318790435791, -0.016323482617735863, -0.0033489353954792023, -0.0535077229142189, -0.0954393744468689, -0.004443177487701178, -0.00020358874462544918, -0.010754955001175404, -0.00840790942311287, -0.011981189250946045, -0.0031219811644405127, -0.017702437937259674, -0.005128798540681601, -0.0002240883477497846, -2.1600022315979004, -0.034681353718042374, -1.37847900390625, -0.9212067127227783, -0.059928420931100845], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00015400654228869826, -8.940656698541716e-06, -0.0005144941387698054, -0.00021062063751742244, -0.00029118589009158313, -0.0021363310515880585, -0.00011097769311163574, -0.0016553997993469238, -0.002566617215052247], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.0337681770324707, -0.0007108307327143848, -0.0629025399684906, -0.010895640589296818, -0.053731322288513184, -0.0007487116381525993, -0.021844960749149323, -0.008245947770774364, -0.012754296883940697], "finish_reason": "stop"}, {"text": "legend(loc=\"upper right\")", "tokens": ["legend", "(", "loc", "=", "\"", "upper", " right", "\"", ")", "\n"], "logprobs": [-0.053740244358778, -0.34429243206977844, -0.002935150871053338, -1.3146554231643677, -0.9904621839523315, -1.0069797039031982, -1.0302408933639526, -6.997340824455023e-05, -0.0932111069560051, -0.023154012858867645], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.018513616174459457, -0.0010146714048460126, -0.0065897065214812756, -0.9339787364006042], "finish_reason": "stop"}], "metrics": {"energy": 385.8569850759508, "energy_per_token": 1.6419446173444714, "time": 15.537063, "time_per_token": 0.06611516170212765}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -1.6911146640777588], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -2.067887783050537, -0.01404026709496975], "finish_reason": "stop"}, {"text": "compile(", "tokens": ["compile", "(", "\n"], "logprobs": [-0.0013191340258345008, -0.0017454879125580192, -1.8542592525482178], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=1, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0018646011594682932, -0.0001668790791882202, -0.01931384764611721, -0.039781033992767334, -0.00016366096679121256, -0.0005339150666259229, -0.019415687769651413, -0.004038156475871801, -1.6212332411669195e-05, -0.020655058324337006, -0.9175958037376404, -0.0007876630988903344, -0.5872068405151367, -2.0122859477996826, -0.04901954159140587, -0.001761909923516214, -0.10996078699827194, -0.10104762017726898, -0.011208898387849331], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.011420000344514847, -0.0005428509321063757, -0.0004942387458868325, -0.03184520825743675, -0.0005794276366941631, -0.00027640812913887203, -0.0007271506474353373, -0.0060991826467216015, -0.04810766875743866], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(y_true=Y_test, y_score=Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "y", "_", "true", "=", "Y", "_", "test", ",", " y", "_", "score", "=", "Y", "_", "pred", ")", "\n"], "logprobs": [-0.00432318402454257, -0.01471382100135088, -0.001167569193057716, -0.18197165429592133, -0.0014760324265807867, -0.005073767155408859, -3.576278118089249e-07, -1.823885577323381e-05, -6.9141146923357155e-06, -0.00019977481861133128, -1.302347183227539, -0.00011657988943625242, -0.0065681529231369495, -0.0023685041815042496, -0.002405608771368861, -0.00018368464952800423, -0.011707997880876064, -0.14386269450187683, -0.3963467478752136, -1.0967194612021558e-05, -0.0019155264599248767, -0.001013718661852181, -0.002823059679940343, -0.0004782725009135902, -0.0008617501589469612, -0.27442243695259094, -0.0118715213611722], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0034910230897367, -7.510157047363464e-06, -0.0002892790944315493, -0.0007757514831610024, -3.4570634852570947e-06, -0.003870259737595916, -0.0019144555553793907, -0.00040534863364882767, -0.00077622797107324, -0.004204838071018457], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.05382440611720085, -0.006923139560967684, -0.0005235493299551308, -0.0005847889697179198, -0.011134631000459194, -6.55629628454335e-05, -0.2875576317310333, -0.0017378717893734574], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC = {:.2f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " {:", ".", "2", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.03762888163328171, -0.015944363549351692, -0.008922941982746124, -4.6491513785440475e-06, -0.0012256737099960446, -0.001639452064409852, -9.512448741588742e-05, -0.05801285803318024, -0.6370185613632202, -0.3509666621685028, -0.9057411551475525, -0.004176703747361898, -0.16713029146194458, -0.35571688413619995, -0.4612085521221161, -0.2613731026649475, -0.0012957995058968663, -0.0038689535576850176, -0.00018714107864070684, -0.00029345019720494747, -0.0001461399078834802, -0.00604053121060133, -0.0020198675338178873, -1.9192511899746023e-05, -0.02547987550497055, -0.5719708800315857], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.024089382961392403, -0.009047109633684158, -0.00525094848126173, -1.9073468138230965e-06, -0.0006965356878936291, -0.0014893640764057636, -0.0006936766440048814, -0.017486566677689552, -1.0096473693847656, -0.2930688261985779, -1.095359206199646, -0.0021344278939068317, -0.26661691069602966, -0.4376548230648041, -0.5290114283561707, -0.018875502049922943, -0.02748933807015419, -0.0009508379152975976, -0.0012369846226647496, -0.5985795259475708, -1.3232143828645349e-05, -0.003410002216696739, -0.0021898592822253704, -0.024144193157553673, -2.455681169521995e-05, -0.0026385514065623283, -5.8887653722194955e-05, -0.040393855422735214, -0.02635025978088379], "finish_reason": "stop"}, {"text": "plot([0, 1], [0, 1], 'k--')", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " '", "k", "--", "')", "\n"], "logprobs": [-1.0976006984710693, -1.6143763065338135, -0.015792300924658775, -0.003843422280624509, -0.05168385058641434, -0.10761643946170807, -0.005166631191968918, -0.00019047829846385866, -0.013703437522053719, -0.008112456649541855, -0.012517694383859634, -0.002963676815852523, -0.025364704430103302, -0.007927147671580315, -0.00027891082572750747, -0.19805596768856049, -0.14103250205516815, -0.31364014744758606, -0.5928942561149597, -0.09803053736686707], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.0001494772732257843, -7.033323527139146e-06, -0.00048387263086624444, -0.0001399419124936685, -0.00028391621890477836, -0.0019528857665136456, -0.00012206286191940308, -0.0019190958701074123, -0.00288249459117651], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03446727246046066, -0.0007312007946893573, -0.037626586854457855, -0.008417602628469467, -0.04420938715338707, -0.0008204193436540663, -0.02087876945734024, -0.010214435867965221, -0.014062718488276005], "finish_reason": "stop"}, {"text": "legend(loc=\"lower right\")", "tokens": ["legend", "(", "loc", "=", "\"", "lower", " right", "\"", ")", "\n"], "logprobs": [-0.06338198482990265, -0.44272562861442566, -0.003344777040183544, -1.5012619495391846, -0.9067316055297852, -0.4093190133571625, -0.058848313987255096, -6.949660019017756e-05, -0.04074287414550781, -0.02020900696516037], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>def task_func(X):", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "X", "):", "\n"], "logprobs": [-0.01729513704776764, -0.0013809201773256063, -0.006254622247070074, -0.7836791276931763, -2.3841855067985307e-07, -3.814689989667386e-06, -0.00021407696476671845, -0.0001778444420779124, -0.08723867684602737, -2.9996392726898193, -0.5761731266975403, -0.05049358680844307, -0.07494275271892548, -0.19202351570129395, -0.46996185183525085, -2.0018839836120605, -0.0025629312731325626], "finish_reason": "stop"}], "metrics": {"energy": 362.8627565851211, "energy_per_token": 1.6271872492606325, "time": 15.109491, "time_per_token": 0.06775556502242153}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -0.20662526786327362, -0.0006124289939180017, -0.021198369562625885, -0.00964576005935669, -0.08393506705760956, -1.6689286894688848e-06, -4.565611743601039e-05, -0.022526217624545097, -0.018831515684723854, -4.8874615458771586e-05, -0.007649179082363844, -0.18480026721954346, -0.1227041557431221, -1.5497195136049413e-06, -4.410734163684538e-06, -0.001611721352674067, -0.22465351223945618, -0.035885170102119446, -0.11691216379404068, -0.025658590719103813], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.6890829205513, -0.11499229818582535], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.BinaryCrossentropy(),", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "()", ",", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -0.38366031646728516, -1.837253212928772, -0.26652878522872925, -0.00011491115583339706, -0.034425582736730576, -9.536738616588991e-07, -8.141662692651153e-05, -0.36600327491760254, -0.000387831823900342, -0.0060850828886032104, -0.19000346958637238, -0.0004353767435532063, -1.3351614475250244], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.001814506365917623, -0.00013457823661156, -0.025048641487956047, -0.043626513332128525, -0.00026258357684127986, -0.0004781533498317003, -0.016796709969639778, -0.0034791436046361923, -1.6569954823353328e-05, -0.018457679077982903, -0.8362151384353638, -0.0007889734115451574, -0.5459098815917969, -0.18488101661205292, -0.6145526170730591, -0.0628357082605362, -0.0013374679256230593, -0.12449109554290771, -0.1110953837633133, -0.012609163299202919], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.008310616947710514, -0.0004922132357023656, -0.0006027788622304797, -0.031034953892230988, -0.0005584587925113738, -0.0003711488388944417, -0.0008794969180598855, -0.005633430555462837, -0.05506667494773865], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.003915739711374044, -0.015484819188714027, -0.0010406322544440627, -0.18230292201042175, -0.0013565156841650605, -0.005504214204847813, -3.576278118089249e-07, -1.5616295058862306e-05, -7.510157047363464e-06, -0.0001722425949992612, -0.3200399875640869, -0.0024645926896482706, -0.0060523804277181625, -0.08776162564754486, -0.004081848077476025, -4.255681051290594e-05, -8.761498611420393e-05, -0.23477645218372345, -0.014244896359741688], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0031966085080057383, -7.510157047363464e-06, -0.00028010259848088026, -0.0010587330907583237, -4.0531076592742465e-06, -0.005398813169449568, -0.001553996349684894, -0.00047505536349490285, -0.0007483542431145906, -0.004061426967382431], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04719814658164978, -0.007911535911262035, -0.0005975367967039347, -0.0006217215559445322, -0.012388776056468487, -6.997340824455023e-05, -0.29740020632743835, -0.001912908861413598], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve')  # Plot the curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", "')", "  ", "#", " Plot", " the", " curve", "\n"], "logprobs": [-0.03367643058300018, -0.015383986756205559, -0.008816482499241829, -5.960446742392378e-06, -0.001178285456262529, -0.0014381790533661842, -0.00010692501382436603, -0.05099634826183319, -0.7223922610282898, -0.3585447669029236, -0.7360602021217346, -0.0011748324614018202, -0.18002597987651825, -1.4490158557891846, -0.6137725710868835, -0.0001699779968475923, -0.0924932211637497, -0.09166018664836884, -3.1197738647460938, -0.043022520840168], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, color='red', label='AUC = {:.3f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " color", "='", "red", "'", ",", " label", "='", "A", "UC", " =", " {:", ".", "3", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.030194779857993126, -0.01024192851036787, -0.006095154210925102, -1.9073468138230965e-06, -0.0006329201860353351, -0.0017288275994360447, -0.0006924853660166264, -0.016783932223916054, -2.025538921356201, -0.022178243845701218, -2.1833226680755615, -0.045305412262678146, -0.0001387499796692282, -0.2895333468914032, -0.1926048845052719, -1.0802277326583862, -0.006090770475566387, -0.2585297226905823, -0.4904769957065582, -0.47244906425476074, -0.8006450533866882, -0.005283677484840155, -0.0031008278019726276, -0.00042489083716645837, -0.00040368037298321724, -0.00015496007108595222, -0.005335021764039993, -0.0018266435945406556, -2.6702524337451905e-05, -0.02577175199985504, -0.06592398136854172], "finish_reason": "stop"}, {"text": "plot(thresholds, tpr, marker='o', linewidth=0)", "tokens": ["plot", "(", "th", "resh", "olds", ",", " t", "pr", ",", " marker", "='", "o", "'", ",", " linewidth", "=", "0", ")", "\n"], "logprobs": [-1.0653202533721924, -0.1634882092475891, -0.9291094541549683, -0.00010823617776622996, -0.0001147919538198039, -0.06114743649959564, -0.10517225414514542, -0.0005747812101617455, -0.018403492867946625, -1.170794129371643, -0.0031470556277781725, -0.8371284008026123, -0.4002441167831421, -0.0003691230376716703, -2.3592357635498047, -0.0014304416254162788, -0.9026351571083069, -1.3060188293457031, -0.1496446132659912], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.0001358893496217206, -7.033323527139146e-06, -0.00052998325554654, -0.00018630675913300365, -0.00028606137493625283, -0.0018762619001790881, -0.00010775939153973013, -0.0019145745318382978, -0.00296926312148571], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.030342239886522293, -0.0005385617259889841, -0.039562541991472244, -0.009375709109008312, -0.041028156876564026, -0.0007035640883259475, -0.02307538501918316, -0.008131966926157475, -0.01229799259454012], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.054306864738464355, -1.2862811088562012, -0.04653292894363403], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>def task_func(X, Y):", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "X", ",", " Y", "):", "\n"], "logprobs": [-0.014711706899106503, -0.0009166568052023649, -0.0058588674291968346, -0.8587636947631836, -2.3841855067985307e-07, -3.6954811548639555e-06, -0.00024136967840604484, -0.00017021637177094817, -0.10146959125995636, -2.947953224182129, -0.6126313805580139, -0.04661417007446289, -0.06735081970691681, -0.18742866814136505, -0.5156716704368591, -0.17749570310115814, -0.06362195312976837, -0.07024431228637695, -0.00235661119222641], "finish_reason": "stop"}], "metrics": {"energy": 375.95014344787586, "energy_per_token": 1.5730131525015727, "time": 15.539897, "time_per_token": 0.06502048953974895}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -0.17957919836044312, -0.0004731489170808345, -0.00982366781681776, -0.013597368262708187, -0.08335768431425095, -2.145764938177308e-06, -3.45700973412022e-05, -0.02019907534122467, -0.016435477882623672, -4.458328112377785e-05, -0.007441657595336437, -0.2136436551809311, -0.11206714808940887, -1.1920922133867862e-06, -4.529942543740617e-06, -0.001563875237479806, -0.2299562245607376, -0.03836200013756752, -0.08873428404331207, -0.0179420318454504], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -0.1716839075088501, -0.11205638945102692], "finish_reason": "stop"}, {"text": "compile(", "tokens": ["compile", "(", "\n"], "logprobs": [-0.001042775809764862, -0.0020857739727944136, -1.7206990718841553], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0015555436257272959, -0.0001734344696160406, -0.02073294296860695, -0.04196605458855629, -0.00022754464589525014, -0.0005178302526473999, -0.019893648102879524, -0.0038818970788270235, -1.537788011773955e-05, -0.02342991903424263, -0.9387582540512085, -0.002654007636010647, -0.07950197160243988, -0.7488221526145935, -0.009714826010167599], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.01027543842792511, -0.0005932478234171867, -0.0006600823253393173, -0.02895965427160263, -0.000648883986286819, -0.00032026408007368445, -0.0007418026216328144, -0.0065583232790231705, -0.05233026295900345], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test.ravel(), Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.004334934521466494, -0.012718986719846725, -0.0011857867939397693, -0.16729296743869781, -0.0014417502097785473, -0.005129154305905104, -3.576278118089249e-07, -2.3483953555114567e-05, -6.794906312279636e-06, -0.00019608005823101848, -0.29397180676460266, -0.002926830668002367, -0.005135796032845974, -2.6743476390838623, -0.16605260968208313, -0.00029523781267926097, -0.001258653705008328, -0.003543409751728177, -0.0001821352052502334, -0.0003058442671317607, -0.2033737152814865, -0.007758365012705326], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.002769803162664175, -7.390948667307384e-06, -0.00027616979787126184, -0.0010387268848717213, -4.291525328881107e-06, -0.0046892911195755005, -0.0016434985445812345, -0.00043585337698459625, -0.0007684853626415133, -0.004115327261388302], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(10, 6))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "0", ",", " ", "6", "))", "\n"], "logprobs": [-0.04585383087396622, -0.005547130014747381, -0.0006486457423307002, -0.0006145734223537147, -0.009810447692871094, -6.675497570540756e-05, -1.5169329643249512, -0.5538391470909119, -0.00036161558819003403, -0.016232235357165337, -1.4169814586639404, -0.4996581971645355, -0.003160246182233095, -0.09637146443128586, -1.790135383605957, -0.028641946613788605, -0.0032404554076492786], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'AUC = {auc_score:.3f}')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "A", "UC", " =", " {", "auc", "_", "score", ":", ".", "3", "f", "}", "')", "\n"], "logprobs": [-0.03258165344595909, -0.01860875077545643, -0.010233314707875252, -5.364403477869928e-06, -0.0012999664759263396, -0.001661826390773058, -0.00010978573118336499, -0.05453401058912277, -0.6877183318138123, -1.0900459289550781, -0.30032798647880554, -0.30169183015823364, -0.21460182964801788, -0.0019219514215365052, -0.8572982549667358, -0.015175246633589268, -0.051263660192489624, -0.0023035677149891853, -3.242440288886428e-05, -0.43747174739837646, -0.02633063681423664, -1.2221710681915283, -0.018441995605826378, -0.031099900603294373, -0.004733784589916468, -0.7754889726638794], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.029372766613960266, -0.007323443423956633, -0.006166479550302029, -2.0265558760002023e-06, -0.0006594866863451898, -0.0014109190087765455, -0.0005990855861455202, -0.019160542637109756, -0.9631326794624329, -0.31614822149276733, -1.111229419708252, -0.0020327160600572824, -0.25344735383987427, -0.4230348467826843, -0.4855477213859558, -0.01923024095594883, -0.037257298827171326, -0.0011133907828480005, -0.0013671108754351735, -0.45648789405822754, -1.7404405298293568e-05, -0.003744259476661682, -0.0019840572495013475, -0.025628728792071342, -1.9550132492440753e-05, -0.0037481787148863077, -5.280832192511298e-05, -0.04356580227613449, -0.02778816595673561], "finish_reason": "stop"}, {"text": "plot(thresholds, tpr, 'r--', label='Threshold vs. TPR')", "tokens": ["plot", "(", "th", "resh", "olds", ",", " t", "pr", ",", " '", "r", "--", "'", ",", " label", "='", "Th", "reshold", " vs", ".", " T", "PR", "')", "\n"], "logprobs": [-1.1961749792099, -0.20637287199497223, -1.0054199695587158, -9.846202738117427e-05, -0.00010990492592100054, -0.06594139337539673, -0.11692478507757187, -0.0006342306733131409, -0.021554967388510704, -2.00076961517334, -1.135412335395813, -1.0288994312286377, -0.1628824770450592, -0.00020311199477873743, -0.5337193012237549, -0.04127618297934532, -1.4281574487686157, -0.14094677567481995, -2.9312965869903564, -0.7757435441017151, -1.1400997638702393, -0.0023535192012786865, -0.0574573390185833, -0.026110930368304253], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00012337400403339416, -6.318072337307967e-06, -0.00048708971007727087, -0.00018475732940714806, -0.000341476290486753, -0.0018701935186982155, -0.00012408917245920748, -0.0020318832248449326, -0.0026114429347217083], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03070368617773056, -0.0008311392739415169, -0.05633297935128212, -0.008797930553555489, -0.04653008282184601, -0.0007800396997481585, -0.02580416575074196, -0.009007297456264496, -0.01311662420630455], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.05557931959629059, -1.1100183725357056, -0.04657059162855148], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.018189411610364914, -0.0011525661684572697, -0.0058691781014204025, -0.9934786558151245], "finish_reason": "stop"}], "metrics": {"energy": 371.7476110296248, "energy_per_token": 1.6449009337594018, "time": 14.893362, "time_per_token": 0.06589983185840707}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -0.20662526786327362, -0.0006124289939180017, -0.021198369562625885, -0.00964576005935669, -0.08393506705760956, -1.6689286894688848e-06, -4.565611743601039e-05, -0.022526217624545097, -0.018831515684723854, -4.8874615458771586e-05, -0.007649179082363844, -2.064652442932129, -0.03341083228588104], "finish_reason": "stop"}, {"text": " keras.models.Sequential([keras.layers.Dense(1, kernel_initializer=\"he_uniform\")])", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "1", ",", " kernel", "_", "initial", "izer", "=", "\"", "he", "_", "uniform", "\"", ")]", ")", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.6890829205513, -2.2464144229888916, -9.703165414975956e-05, -0.0010071687866002321, -2.9801878554280847e-05, -0.033448416739702225, -0.00022194306075107306, -0.00018249277491122484, -0.5158704519271851, -0.10027678310871124, -2.9602696895599365, -6.794906312279636e-06, -0.053472355008125305, -1.811964830267243e-05, -1.2368084192276, -0.10351554304361343, -1.6050360202789307, -0.0008031480247154832, -0.6927870512008667, -7.080780778778717e-05, -2.094423532485962, -0.002634033327922225, -0.016371332108974457], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss='binary_crossentropy', metrics=['AUC'])", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", " metrics", "=['", "A", "UC", "'])", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -1.711421012878418, -1.8715683836489916e-05, -0.18487368524074554, -0.3263826072216034, -0.00014602071314584464, -0.00031859567388892174, -0.0007233387441374362, -0.025845173746347427, -0.06754906475543976, -0.010681597515940666, -0.001914693508297205, -0.00039748396375216544, -9.619726915843785e-05, -1.4730603694915771, -0.09898591786623001, -0.3640090823173523, -0.10591831058263779, -2.737612724304199, -0.0014461545506492257, -0.059302181005477905, -0.0034361386206001043], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.001587560516782105, -0.0001740304142003879, -0.021264657378196716, -0.040321268141269684, -0.0002302858338225633, -0.00047672350774519145, -0.01812806911766529, -0.00264711189083755, -1.5616295058862306e-05, -0.02109682746231556, -0.7392359972000122, -0.0007842087652534246, -0.5574173331260681, -0.14043724536895752, -0.5970135927200317, -0.04988420009613037, -0.0011451836908236146, -0.11876367032527924, -0.07773178070783615, -0.011700575239956379], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.010086636058986187, -0.0006756883230991662, -0.00058466981863603, -0.03193735331296921, -0.0006911749369464815, -0.0004231034545227885, -0.0007553822943009436, -0.0055913482792675495, -0.056738317012786865], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test.ravel(), Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ".", "ravel", "()", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.003383865114301443, -0.014076588675379753, -0.0015548295341432095, -0.2046046108007431, -0.0014830554137006402, -0.006638615392148495, -3.576278118089249e-07, -1.8715683836489916e-05, -8.583032467868179e-06, -0.0002213471452705562, -0.3317967355251312, -0.0032576846424490213, -0.004310958087444305, -2.680723190307617, -0.2010759562253952, -0.0002766464895103127, -0.0013804440386593342, -0.004114140290766954, -0.00021324267436284572, -0.00024673278676345944, -0.23340773582458496, -0.007650361862033606], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0029066239949315786, -8.22540732769994e-06, -0.0002775999018922448, -0.000936189026106149, -3.099436753473128e-06, -0.003913721069693565, -0.0017953482456505299, -0.0004153581103309989, -0.0007905219099484384, -0.004108560271561146], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04883314669132233, -0.006840620189905167, -0.0006505518686026335, -0.0006301801186054945, -0.01061542984098196, -6.615896563744172e-05, -0.30687373876571655, -0.001980844885110855], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (AUC = %0.4f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "A", "UC", " =", " %", "0", ".", "4", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.03495294600725174, -0.01379491575062275, -0.009440070018172264, -5.125986263010418e-06, -0.0011536378879100084, -0.0016390950186178088, -9.464769391342998e-05, -0.0545099675655365, -0.6795190572738647, -0.4057386815547943, -0.8344398140907288, -0.0010752854868769646, -0.1765783280134201, -0.5183398723602295, -1.1030805110931396, -0.0022448119707405567, -0.11569666117429733, -0.08636221289634705, -0.002793222200125456, -0.0002079985715681687, -0.9526297450065613, -2.253030106658116e-05, -0.0020983838476240635, -0.0017916593933477998, -0.02206222526729107, -1.1086402082582936e-05, -0.0037878446746617556, -3.4689302992774174e-05, -0.03007378801703453, -0.1771564483642578], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.027200745418667793, -0.010269775055348873, -0.005405334290117025, -2.145764938177308e-06, -0.0007482351502403617, -0.0017701209289953113, -0.0007033258443698287, -0.0172597523778677, -0.9724993109703064, -0.32740649580955505, -0.9275674819946289, -0.0019327785121276975, -0.27105721831321716, -0.4936405420303345, -0.5896531939506531, -0.015854021534323692, -0.031540196388959885, -0.0010661162668839097, -0.0008822362869977951, -0.7126080989837646, -1.2159273865108844e-05, -0.0032709925435483456, -0.002148345345631242, -0.02762618102133274, -1.597391747054644e-05, -0.003196489764377475, -4.136476854910143e-05, -0.04594116285443306, -0.023806676268577576], "finish_reason": "stop"}, {"text": "set_xlabel('False Positive Rate')", "tokens": ["set", "_", "xlabel", "('", "False", " Positive", " Rate", "')", "\n"], "logprobs": [-0.6750236749649048, -0.10668651759624481, -1.8221532106399536, -0.04140714928507805, -0.006884071044623852, -0.18332135677337646, -0.00288380216807127, -0.023461125791072845, -0.009676574729382992], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00011550712952157483, -6.6756979322235566e-06, -0.0006363751017488539, -0.0001691436773398891, -0.00024780540843494236, -0.002073402050882578, -0.00012563870404846966, -0.0022891764529049397, -0.0030434264335781336], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03210094943642616, -0.0006780709372833371, -0.04524502903223038, -0.010012166574597359, -0.04628916084766388, -0.0006783091812394559, -0.019293852150440216, -0.00846133939921856, -0.012446938082575798], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.053297750651836395, -1.1576863527297974, -0.061346571892499924], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.018602315336465836, -0.0010992205934599042, -0.005343796219676733], "finish_reason": "stop"}], "metrics": {"energy": 330.2367131481171, "energy_per_token": 1.342425663203728, "time": 14.507331, "time_per_token": 0.05897289024390244}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -1.8197083473205566], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.6890829205513, -0.11499229818582535], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(lr=0.1))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "1", "))", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -0.38366031646728516, -0.17962422966957092, -0.02072453685104847, -0.0028080816846340895, -0.0002213471452705562, -0.00016604475968051702, -0.0004001055203843862, -0.002999095479026437, -0.06908117979764938, -1.4074056148529053, -0.039052508771419525, -7.354942499659956e-05, -0.00047708096099086106, -0.009705026634037495, -0.00017796363681554794, -0.026356644928455353, -0.0004180987598374486, -0.017632165923714638, -0.6417409181594849, -0.004237838555127382, -0.0929754227399826, -0.0019387274514883757, -1.3577699661254883, -0.17083041369915009, -0.0028292411006987095], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0, validation_split=0.3)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ",", " validation", "_", "split", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.001369134639389813, -0.00014900050882715732, -0.02217579446732998, -0.029949773102998734, -0.00022957073815632612, -0.00045944625162519515, -0.018441880121827126, -0.004065107554197311, -1.3828182090946939e-05, -0.021083638072013855, -0.6521479487419128, -0.0007441850611940026, -0.5348150134086609, -0.16138456761837006, -0.9093145728111267, -0.2234582155942917, -0.043786611407995224, -0.001213648240081966, -0.10702279210090637, -2.427739143371582, -0.5507442951202393, -3.421248038648628e-05, -0.5981069803237915, -0.0011781663633883, -0.008554362691938877, -0.004791800864040852, -1.3069485425949097, -0.16939066350460052, -0.00991420354694128], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.009948315098881721, -0.0006569849792867899, -0.0006872437661513686, -0.02908552810549736, -0.0005298641044646502, -0.0002865380665753037, -0.0007824220228940248, -0.005612804554402828, -0.0462481863796711], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.004649423528462648, -0.013034733012318611, -0.0013150862650945783, -0.18225692212581635, -0.0013271104544401169, -0.005858749151229858, -2.3841855067985307e-07, -2.5152843591058627e-05, -8.22540732769994e-06, -0.00021526881027966738, -0.2895379066467285, -0.0026940738316625357, -0.005792498122900724, -0.0856308564543724, -0.0037461596075445414, -5.4834770708112046e-05, -9.452849917579442e-05, -0.2177954763174057, -0.015041738748550415], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0037011471576988697, -7.152531907195225e-06, -0.0002840353990904987, -0.0009762050467543304, -3.576272320060525e-06, -0.003773712320253253, -0.0017865424742922187, -0.0004433602443896234, -0.0007211944903247058, -0.004328287672251463], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04102003574371338, -0.006564836483448744, -0.0006289887824095786, -0.0006126672378741205, -0.009843735955655575, -7.259582343976945e-05, -0.3250690996646881, -0.0018241447396576405], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'AUC={auc_score:.2f}')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "A", "UC", "={", "auc", "_", "score", ":", ".", "2", "f", "}", "')", "\n"], "logprobs": [-0.03502937778830528, -0.021264774724841118, -0.009142322465777397, -5.602820692729438e-06, -0.0010409895330667496, -0.0015605426160618663, -0.00011491115583339706, -0.044574178755283356, -0.7461974024772644, -1.1488491296768188, -0.30141663551330566, -0.26327356696128845, -0.2009657770395279, -0.0016536145703867078, -0.8307150602340698, -0.04691609740257263, -0.0023055896162986755, -3.790783375734463e-05, -0.29857173562049866, -0.0331098772585392, -0.6765604019165039, -0.0059745293110609055, -0.027621425688266754, -0.005541320890188217, -0.8162331581115723], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, '-')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " '-", "')", "\n"], "logprobs": [-0.029217291623353958, -0.010216795839369297, -0.005789298098534346, -1.4305104514278355e-06, -0.000679500459227711, -0.0014997198013588786, -0.0005623904871754348, -0.022326307371258736, -3.6850075721740723, -1.6571846008300781, -0.10451605916023254], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.6603478789329529, -0.12705457210540771, -0.2776484787464142, -0.04330076277256012, -0.03361557051539421, -0.0009298768127337098, -0.030025895684957504, -0.054302576929330826, -0.032819900661706924], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00011538793478393927, -7.271740287251305e-06, -0.00044109628652222455, -0.00019798702851403505, -0.00026556302327662706, -0.001972516765818, -0.00012146688823122531, -0.0019267105963081121, -0.002540814923122525], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.036545898765325546, -0.0006748544401489198, -0.05848891660571098, -0.00846878718584776, -0.05048372596502304, -0.0007746794726699591, -0.021698808297514915, -0.009843853302299976, -0.01205727830529213], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.05663209781050682, -0.3838675916194916, -0.0032137196976691484, -0.2734660506248474, -0.7280359864234924, -0.13396620750427246, -0.03523654863238335, -0.019350094720721245], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>#!/usr/bin/env python3", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.018323086202144623, -0.0010482537327334285, -0.005879844073206186, -0.774681806564331, -2.3841855067985307e-07, -3.4570634852570947e-06, -0.00020168177434243262, -0.0001662831346038729, -0.09911893308162689, -1.0122774839401245, -1.1598942279815674, -0.0469803623855114, -0.09608768671751022, -3.6954195820726454e-05, -0.0027601737529039383, -0.000513064325787127, -0.0323958620429039, -0.0031400443986058235, -0.7527825832366943, -0.01788313500583172], "finish_reason": "stop"}], "metrics": {"energy": 316.074630098343, "energy_per_token": 1.423759595037581, "time": 13.65766, "time_per_token": 0.06152099099099099}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42, shuffle=True)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ",", " shuffle", "=", "True", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -0.20662526786327362, -0.0006124289939180017, -0.021198369562625885, -0.00964576005935669, -0.08393506705760956, -1.6689286894688848e-06, -4.565611743601039e-05, -0.022526217624545097, -0.018831515684723854, -4.8874615458771586e-05, -0.007649179082363844, -0.18480026721954346, -0.1227041557431221, -1.5497195136049413e-06, -4.410734163684538e-06, -0.001611721352674067, -0.22465351223945618, -0.035885170102119446, -2.217545747756958, -0.6603679060935974, -0.0041281492449343204, -0.036008793860673904, -0.2383274883031845, -0.019439656287431717], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.6890829205513, -0.11499229818582535], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(lr=0.01))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "0", "1", "))", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -0.38366031646728516, -0.17962422966957092, -0.02072453685104847, -0.0028080816846340895, -0.0002213471452705562, -0.00016604475968051702, -0.0004001055203843862, -0.002999095479026437, -0.06908117979764938, -1.4074056148529053, -0.039052508771419525, -7.354942499659956e-05, -0.00047708096099086106, -0.009705026634037495, -0.00017796363681554794, -0.026356644928455353, -0.0004180987598374486, -0.017632165923714638, -0.6417409181594849, -0.004237838555127382, -0.0929754227399826, -0.0019387274514883757, -0.3831586241722107, -0.5096449255943298, -0.18331530690193176, -0.003700078232213855], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.001369134639389813, -0.00014900050882715732, -0.02217579446732998, -0.029949773102998734, -0.00022957073815632612, -0.00045944625162519515, -0.018441880121827126, -0.004065107554197311, -1.3828182090946939e-05, -0.021083638072013855, -1.0481154918670654, -0.0028305486775934696, -0.07998783141374588, -0.7041047811508179, -0.009506788104772568], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.009245912544429302, -0.0005276002921164036, -0.0005534547381103039, -0.03613217547535896, -0.0007739647408016026, -0.00034481301554478705, -0.000706780469045043, -0.004840560257434845, -0.06347070634365082], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0035510121379047632, -0.013300268910825253, -0.0009970461251214147, -0.16849170625209808, -0.0014033003244549036, -0.006372133735567331, -3.576278118089249e-07, -2.288792165927589e-05, -7.986990567587782e-06, -0.0002051381452474743, -0.29293835163116455, -0.002379326382651925, -0.006222517695277929, -0.0820963904261589, -0.00422976678237319, -5.2927523938706145e-05, -0.00010418349120300263, -0.25183507800102234, -0.016192356124520302], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.00350052653811872, -7.033323527139146e-06, -0.0003215749457012862, -0.0010170531459152699, -3.933898824470816e-06, -0.0037569671403616667, -0.0015564957866445184, -0.0005235493299551308, -0.0007767044589854777, -0.003474747994914651], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04559987783432007, -0.007589435204863548, -0.0006100462633185089, -0.0005654881824739277, -0.012103329412639141, -6.401333666872233e-05, -0.2814894914627075, -0.0018101035384461284], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, color='darkorange', linewidth=3, label='ROC curve')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " color", "='", "dark", "orange", "'", ",", " linewidth", "=", "3", ",", " label", "='", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03199392557144165, -0.018261753022670746, -0.008279642090201378, -4.172316494077677e-06, -0.0013955625472590327, -0.0014638908905908465, -0.00010895135346800089, -0.05149455368518829, -1.9097824096679688, -0.007780720945447683, -0.9293250441551208, -0.09765414148569107, -0.0020122535061091185, -0.00017641419253777713, -0.32465890049934387, -0.0002212279650848359, -0.5437421798706055, -0.010310952551662922, -0.3691231608390808, -0.0451398603618145, -0.12699976563453674, -0.0009778724052011967, -0.07002148032188416, -0.2413686364889145, -0.12998515367507935], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, 'b', label=\"AUC = {:.3f}\".format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " '", "b", "'", ",", " label", "=", "\"", "A", "UC", " =", " {:", ".", "3", "f", "}\"", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.02786584384739399, -0.012627174146473408, -0.006826294120401144, -2.0265558760002023e-06, -0.0006898645660839975, -0.0014690094394609332, -0.0006713996990583837, -0.01562507636845112, -2.3264336585998535, -0.4519656002521515, -0.41152408719062805, -7.962863310240209e-05, -0.0950247123837471, -2.0579967498779297, -1.1844383478164673, -0.25478559732437134, -0.004583448171615601, -0.36008694767951965, -0.31486085057258606, -0.24910444021224976, -0.6445571184158325, -0.007608719170093536, -0.0032838250044733286, -0.0007381098694168031, -0.000291662581730634, -0.00019298121333122253, -0.003933669533580542, -0.0018352109473198652, -3.0636318115284666e-05, -0.014812019653618336, -0.0689227432012558], "finish_reason": "stop"}, {"text": "set_xlabel('False Positive Rate')", "tokens": ["set", "_", "xlabel", "('", "False", " Positive", " Rate", "')", "\n"], "logprobs": [-0.6135663986206055, -0.09449263662099838, -1.852237582206726, -0.04302526265382767, -0.007196102291345596, -0.2164822220802307, -0.002452225424349308, -0.019975563511252403, -0.009479628875851631], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00014161060971673578, -6.9141146923357155e-06, -0.0005486889858730137, -0.00018082413589581847, -0.00025042734341695905, -0.0019006537040695548, -0.00014232576359063387, -0.0019585967529565096, -0.0031307751778513193], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03903301805257797, -0.0007833749405108392, -0.0638265311717987, -0.00840743724256754, -0.057029321789741516, -0.0007438276661559939, -0.023787934333086014, -0.008973272517323494, -0.012593625113368034], "finish_reason": "stop"}, {"text": "legend(loc='upper right')", "tokens": ["legend", "(", "loc", "='", "upper", " right", "')", "\n"], "logprobs": [-0.060121964663267136, -0.3269294202327728, -0.0027358029037714005, -0.361005961894989, -1.0810527801513672, -1.1529295444488525, -0.0953168123960495, -0.02047719992697239], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.018491031602025032, -0.001065163523890078, -0.006371304392814636], "finish_reason": "stop"}], "metrics": {"energy": 365.97331326293926, "energy_per_token": 1.5573332479274011, "time": 15.316993, "time_per_token": 0.06517869361702128}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -0.17957919836044312, -0.0004731489170808345, -0.00982366781681776, -0.013597368262708187, -0.08335768431425095, -2.145764938177308e-06, -3.45700973412022e-05, -0.02019907534122467, -0.016435477882623672, -4.458328112377785e-05, -0.007441657595336437, -0.2136436551809311, -0.11206714808940887, -1.1920922133867862e-06, -4.529942543740617e-06, -0.001563875237479806, -0.2299562245607376, -0.03836200013756752, -0.08873428404331207, -0.0179420318454504], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -0.1716839075088501, -0.11205638945102692], "finish_reason": "stop"}, {"text": "compile(optimizer='SGD', loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "='", "S", "GD", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.001042775809764862, -0.0020857739727944136, -1.7427022457122803, -1.966933996300213e-05, -0.1603645533323288, -1.5715017318725586, -0.00043215948971919715, -0.0002097863471135497, -0.0010977915953844786, -0.034853480756282806, -0.05096496641635895, -0.019903581589460373, -0.0016270744381472468, -0.00034528967808000743, -8.296622399939224e-05, -0.4611259400844574, -0.004329000134021044], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0015555436257272959, -0.0001734344696160406, -0.02073294296860695, -0.04196605458855629, -0.00022754464589525014, -0.0005178302526473999, -0.019893648102879524, -0.0038818970788270235, -1.537788011773955e-05, -0.02342991903424263, -0.9387582540512085, -0.002654007636010647, -0.07950197160243988, -0.7488221526145935, -0.009714826010167599], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.01027543842792511, -0.0005932478234171867, -0.0006600823253393173, -0.02895965427160263, -0.000648883986286819, -0.00032026408007368445, -0.0007418026216328144, -0.0065583232790231705, -0.05233026295900345], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.004334934521466494, -0.012718986719846725, -0.0011857867939397693, -0.16729296743869781, -0.0014417502097785473, -0.005129154305905104, -3.576278118089249e-07, -2.3483953555114567e-05, -6.794906312279636e-06, -0.00019608005823101848, -0.29397180676460266, -0.002926830668002367, -0.005135796032845974, -0.09077724814414978, -0.004330068361014128, -4.8040190449682996e-05, -8.427741704508662e-05, -0.23903875052928925, -0.015637515112757683], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.002884990768507123, -7.033323527139146e-06, -0.00028618055512197316, -0.0008848565630614758, -3.933898824470816e-06, -0.004731055814772844, -0.0016795588890090585, -0.00039760314393788576, -0.000773369160015136, -0.004109153989702463], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04009281471371651, -0.006868088152259588, -0.0006171943969093263, -0.0005410637822933495, -0.008316174149513245, -6.460934673668817e-05, -0.2719378173351288, -0.001964426366612315], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, linewidth=2.0, label='AUC = {:.2f}'.format(auc_score))  # Plot the ROC curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " linewidth", "=", "2", ".", "0", ",", " label", "='", "A", "UC", " =", " {:", ".", "2", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "  ", "#", " Plot", " the", " R", "OC", " curve", "\n"], "logprobs": [-0.03605743497610092, -0.016952019184827805, -0.007395154796540737, -5.483612312673358e-06, -0.0010974343167617917, -0.001484721782617271, -0.00010549465514486656, -0.0338275283575058, -1.5323469638824463, -0.006321079563349485, -0.426789790391922, -0.9712634086608887, -0.07760614901781082, -0.15388698875904083, -0.5080698132514954, -0.33402568101882935, -1.075019121170044, -0.0054307072423398495, -0.1952083706855774, -0.6257311105728149, -0.6397706270217896, -0.6085734367370605, -0.005041031166911125, -0.00842386856675148, -0.0003946240758523345, -0.0003670972364488989, -0.0001380348257953301, -0.006250950042158365, -0.0011703077470883727, -1.680836794548668e-05, -0.027126843109726906, -1.2406889200210571, -0.00014280252798926085, -0.10173925757408142, -0.21255965530872345, -0.3169094920158386, -5.006777428206988e-06, -0.013850645162165165, -0.08382248878479004], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (area = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.020857755094766617, -0.010327707044780254, -0.006266824435442686, -1.6689286894688848e-06, -0.000692961853928864, -0.001529596047475934, -0.0005684667266905308, -0.013320736587047577, -0.8982388973236084, -0.3150268495082855, -1.0490570068359375, -0.0019666869193315506, -0.2491539716720581, -0.42896920442581177, -0.5438732504844666, -0.014784182421863079, -0.031820498406887054, -0.0009283285471610725, -0.000745137978810817, -0.626397967338562, -1.4305012882687151e-05, -0.00343542592599988, -0.002186290919780731, -0.025851329788565636, -1.6927575416048057e-05, -0.003007533960044384, -4.160317621426657e-05, -0.04400566592812538, -0.02431802824139595], "finish_reason": "stop"}, {"text": "grid(True)", "tokens": ["grid", "(", "True", ")", "\n"], "logprobs": [-3.0616672039031982, -0.6968548893928528, -0.2532462775707245, -0.011975417844951153, -0.023964159190654755], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00013255194062367082, -7.152531907195225e-06, -0.0004847066884394735, -0.0002022777043748647, -0.0003197873884346336, -0.0018604366341605783, -0.0001227780303452164, -0.0017610769718885422, -0.0029069806914776564], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.029284555464982986, -0.000720956246368587, -0.04438387230038643, -0.00714142108336091, -0.05243535712361336, -0.000727627135347575, -0.024659674614667892, -0.009194295853376389, -0.013645701110363007], "finish_reason": "stop"}, {"text": "legend(loc='best')", "tokens": ["legend", "(", "loc", "='", "best", "')", "\n"], "logprobs": [-0.060570765286684036, -0.36400336027145386, -0.003988051787018776, -0.35636016726493835, -1.5726983547210693, -0.034266743808984756, -0.04326331615447998], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.016547342762351036, -0.0011641160817816854, -0.005865978542715311], "finish_reason": "stop"}], "metrics": {"energy": 369.86748766899115, "energy_per_token": 1.6438555007510718, "time": 14.70169, "time_per_token": 0.06534084444444443}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -0.17957919836044312, -0.0004731489170808345, -0.00982366781681776, -0.013597368262708187, -0.08335768431425095, -2.145764938177308e-06, -3.45700973412022e-05, -0.02019907534122467, -0.016435477882623672, -4.458328112377785e-05, -0.007441657595336437, -0.2136436551809311, -0.11206714808940887, -1.1920922133867862e-06, -4.529942543740617e-06, -0.001563875237479806, -0.2299562245607376, -0.03836200013756752, -0.08873428404331207, -0.0179420318454504], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -0.1716839075088501, -0.11205638945102692], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd', metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.001042775809764862, -0.0020857739727944136, -0.4598385989665985, -0.17975978553295135, -0.019545691087841988, -0.0033800634555518627, -0.00026663561584427953, -0.00017641419253777713, -0.0004804172203876078, -0.002948225475847721, -0.07429319620132446, -0.33267390727996826, -0.31082120537757874, -0.0002559096028562635, -0.12181930243968964, -0.0018638873007148504, -0.22947825491428375, -0.080765001475811, -0.09406173229217529, -0.0860394760966301, -0.002754348563030362], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=10, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.00177714170422405, -0.0001823735801735893, -0.02612718939781189, -0.038965605199337006, -0.00023505308490712196, -0.0005329619161784649, -0.022398116067051888, -0.0031714164651930332, -1.7523612768854946e-05, -0.022209839895367622, -0.8611062169075012, -0.0007377525325864553, -0.5564095377922058, -0.1686301976442337, -0.5932798385620117, -0.05758586525917053, -0.0011831672163680196, -0.14865918457508087, -0.09090842306613922, -0.010800358839333057], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.010857434943318367, -0.0005371319712139666, -0.0005334384622983634, -0.03191229701042175, -0.0007466865936294198, -0.0003457663697190583, -0.0008615119731985033, -0.005516188219189644, -0.052335355430841446], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.003824065439403057, -0.01072346605360508, -0.0012912754900753498, -0.18526630103588104, -0.001468414207920432, -0.005660457070916891, -3.576278118089249e-07, -1.7165990357170813e-05, -6.6756979322235566e-06, -0.00016151554882526398, -0.284090518951416, -0.002167615806683898, -0.005767252761870623, -0.08853812515735626, -0.004586771130561829, -4.935142715112306e-05, -7.73638384998776e-05, -0.22821755707263947, -0.016543826088309288], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.003509079571813345, -7.033323527139146e-06, -0.0002526917669456452, -0.001053493469953537, -4.529942543740617e-06, -0.004370660986751318, -0.0014619863359257579, -0.00042906138696707785, -0.0008001701789908111, -0.004108322784304619], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.048287611454725266, -0.007400952745229006, -0.000641974329482764, -0.0004944770480506122, -0.008721002377569675, -6.258291978156194e-05, -0.28430190682411194, -0.001979655120521784], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC = {:.2f}'.format(auc_score))  # Plot the ROC curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " {:", ".", "2", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "  ", "#", " Plot", " the", " R", "OC", " curve", "\n"], "logprobs": [-0.033874429762363434, -0.02297310158610344, -0.009091763757169247, -5.722029527532868e-06, -0.0014976962702348828, -0.001388300908729434, -8.880697714630514e-05, -0.049191489815711975, -0.7394075393676758, -0.3594339191913605, -0.7823082208633423, -0.0035618215333670378, -0.16133557260036469, -0.34980344772338867, -0.484264999628067, -0.28614938259124756, -0.0013217531377449632, -0.003386003663763404, -0.00015567521040793508, -0.0003406421164982021, -0.0001225396408699453, -0.0064879730343818665, -0.0017229963559657335, -1.9907753085135482e-05, -0.025168614462018013, -0.7778394818305969, -8.797258487902582e-05, -0.11127789318561554, -0.19194863736629486, -0.37223660945892334, -3.814689989667386e-06, -0.011223869398236275, -0.08368511497974396], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, linewidth=2.0, color='r', label='AUC = %.4f' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " linewidth", "=", "2", ".", "0", ",", " color", "='", "r", "'", ",", " label", "='", "A", "UC", " =", " %", ".", "4", "f", "'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.02042989619076252, -0.010418551042675972, -0.0056475368328392506, -1.9073468138230965e-06, -0.0006706849089823663, -0.001810817513614893, -0.0007325111655518413, -0.015745246782898903, -1.5213731527328491, -0.008206339552998543, -0.5122705698013306, -1.5672273635864258, -0.028772030025720596, -0.4138714373111725, -0.959300696849823, -0.0212828628718853, -0.9050119519233704, -0.5599678754806519, -0.001459605642594397, -0.14421415328979492, -0.16265586018562317, -1.2453956604003906, -0.00646381126716733, -0.28114497661590576, -0.9333469271659851, -1.2059106826782227, -1.7668793201446533, -0.0013516347389668226, -0.020282836630940437, -0.040611132979393005, -0.03791310638189316, -3.123234637314454e-05, -0.0034667886793613434, -2.8132995794294402e-05, -0.022967975586652756, -0.039607688784599304], "finish_reason": "stop"}, {"text": "set_xlabel('False Positive Rate')", "tokens": ["set", "_", "xlabel", "('", "False", " Positive", " Rate", "')", "\n"], "logprobs": [-0.8102033734321594, -0.09210603684186935, -1.7598521709442139, -0.04449630528688431, -0.008428005501627922, -0.2129930853843689, -0.0026548400055617094, -0.021865954622626305, -0.01033006701618433], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00011693747364915907, -6.079655122448457e-06, -0.0005777596961706877, -0.0001699779968475923, -0.0002470903273206204, -0.0021081382874399424, -0.00010275312524754554, -0.0015962490579113364, -0.0028190179727971554], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03784044831991196, -0.0006302992696873844, -0.050465136766433716, -0.011178131215274334, -0.048478879034519196, -0.0006960591417737305, -0.022198064252734184, -0.009251227602362633, -0.011762194335460663], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.05035088211297989, -0.32607904076576233, -0.0023415072355419397, -0.24462424218654633, -0.6960613131523132, -0.1048918142914772, -0.028342215344309807, -0.0183876920491457], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>#!/usr/bin/env python", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.016278445720672607, -0.0010312244994565845, -0.00604633754119277, -0.7679881453514099, -2.3841855067985307e-07, -3.6954811548639555e-06, -0.00022933237778488547, -0.00014053787162993103, -0.10628560185432434, -0.9758614301681519, -1.157126545906067, -0.05862518027424812, -0.08799319714307785, -3.862306402879767e-05, -0.003023341065272689, -0.0006598440813831985, -0.033502254635095596, -0.003589141881093383, -0.4925849437713623], "finish_reason": "stop"}], "metrics": {"energy": 343.1797877826691, "energy_per_token": 1.3405460460260512, "time": 15.136625, "time_per_token": 0.05912744140625}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -0.17957919836044312, -0.0004731489170808345, -0.00982366781681776, -0.013597368262708187, -0.08335768431425095, -2.145764938177308e-06, -3.45700973412022e-05, -0.02019907534122467, -0.016435477882623672, -4.458328112377785e-05, -0.007441657595336437, -0.2136436551809311, -0.11206714808940887, -1.1920922133867862e-06, -4.529942543740617e-06, -0.001563875237479806, -0.2299562245607376, -0.03836200013756752, -0.08873428404331207, -0.0179420318454504], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.7580927014350891, -0.006006049923598766], "finish_reason": "stop"}, {"text": "compile(loss=keras.losses.BinaryCrossentropy(), optimizer=keras.optimizers.SGD(learning_rate=0.1))", "tokens": ["compile", "(", "loss", "=", "keras", ".", "loss", "es", ".", "Binary", "Cross", "entropy", "()", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "1", "))", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -0.38366031646728516, -1.837253212928772, -0.26652878522872925, -0.00011491115583339706, -0.034425582736730576, -9.536738616588991e-07, -8.141662692651153e-05, -0.36600327491760254, -0.000387831823900342, -0.0060850828886032104, -0.19000346958637238, -0.0004353767435532063, -0.3296186923980713, -0.13858354091644287, -0.011213259771466255, -0.00010775939153973013, -0.0002975021197926253, -0.00405014818534255, -9.405170567333698e-05, -0.02014475129544735, -0.0006594866863451898, -0.036031562834978104, -0.6802674531936646, -0.00033182359766215086, -2.586808113846928e-05, -0.0028896264266222715, -0.07102297991514206, -0.0014868644066154957, -1.103989601135254, -0.24133886396884918, -0.003200886305421591], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0, epochs=10)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ",", " epochs", "=", "1", "0", ")", "\n"], "logprobs": [-0.001814506365917623, -0.00013457823661156, -0.025048641487956047, -0.043626513332128525, -0.00026258357684127986, -0.0004781533498317003, -0.016796709969639778, -0.0034791436046361923, -1.6569954823353328e-05, -0.018457679077982903, -0.8568068742752075, -0.003074088366702199, -0.06386936455965042, -0.7705385684967041, -0.3684651851654053, -0.0005308172549121082, -0.5609597563743591, -0.10961321741342545, -0.834393322467804, -0.010491102002561092], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0094101931899786, -0.0006503135664388537, -0.0005098473629914224, -0.032601501792669296, -0.0008347125840373337, -0.0003810394846368581, -0.0009651293512433767, -0.005565742030739784, -0.04826989024877548], "finish_reason": "stop"}, {"text": " tpr, _ = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " _", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.004134085029363632, -0.017168473452329636, -0.0013543728273361921, -2.109647750854492, -0.002512038918212056, -0.007843410596251488, -3.576278118089249e-07, -2.5510462364763953e-05, -1.0609570381348021e-05, -0.00010358751023886725, -0.1381921023130417, -0.0018748340662568808, -0.006198704708367586, -0.14328202605247498, -0.0019280193373560905, -4.672895011026412e-05, -0.00013636612857226282, -0.2250361442565918, -0.008508620783686638], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0029962430708110332, -7.390948667307384e-06, -0.00027223696815781295, -0.0008060067193582654, -2.9802276912960224e-06, -0.00420780573040247, -0.0016778928693383932, -0.0004576589271891862, -0.000773369160015136, -0.0031122365035116673], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.043302930891513824, -0.00659314077347517, -0.0005654881824739277, -0.0005052005290053785, -0.011463959701359272, -6.496695277746767e-05, -0.3218154013156891, -0.0021692810114473104], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'AUC={auc_score}')  # Plot the ROC curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "A", "UC", "={", "auc", "_", "score", "}", "')", "  ", "#", " Plot", " the", " R", "OC", " curve", "\n"], "logprobs": [-0.032612577080726624, -0.015109257772564888, -0.010534276254475117, -5.364403477869928e-06, -0.0012475810945034027, -0.001755721983499825, -9.500529267825186e-05, -0.048121869564056396, -0.7042934894561768, -1.2028422355651855, -0.32188376784324646, -0.28547418117523193, -0.20637287199497223, -0.0018308082362636924, -0.8527522087097168, -0.03546024113893509, -0.003030590945854783, -3.8980677345534787e-05, -1.5166977643966675, -0.006876257248222828, -0.6205488443374634, -0.0001646144810365513, -0.13370728492736816, -0.18712608516216278, -0.304790735244751, -5.125986263010418e-06, -0.01239325013011694, -0.09435824304819107], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, linewidth=3, label='AUC=%.4f' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " linewidth", "=", "3", ",", " label", "='", "A", "UC", "=%", ".", "4", "f", "'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.022750558331608772, -0.010820170864462852, -0.005792261101305485, -1.6689286894688848e-06, -0.0008317348547279835, -0.001814506365917623, -0.0006227937992662191, -0.0183842983096838, -1.442691445350647, -0.008229867555201054, -2.233128309249878, -0.21510091423988342, -0.4312897324562073, -0.27518826723098755, -0.7167540788650513, -0.00490592559799552, -2.282386302947998, -0.8768754601478577, -2.473724365234375, -0.0005073452484793961, -0.014953897334635258, -0.017206087708473206, -0.0457635298371315, -2.3483953555114567e-05, -0.002434863243252039, -1.9311717551317997e-05, -0.029579143971204758, -0.03851284831762314], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.8714532256126404, -0.07836411893367767, -0.29668930172920227, -0.039738986641168594, -0.04152563586831093, -0.0008057684754021466, -0.024291733279824257, -0.051152437925338745, -0.032051652669906616], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.0001234931987710297, -6.198863957251888e-06, -0.0005657264264300466, -0.00025006983196362853, -0.0003240775258745998, -0.0018944665789604187, -0.00010108436981681734, -0.0016842002514749765, -0.0028559870552271605], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03355609253048897, -0.000753357307985425, -0.05264551192522049, -0.009844325482845306, -0.045875124633312225, -0.0006964165368117392, -0.021142931655049324, -0.008311444893479347, -0.01419012900441885], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.0633789598941803, -1.1588470935821533, -0.05493060126900673], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.017480241134762764, -0.001259963377378881, -0.006797996815294027], "finish_reason": "stop"}], "metrics": {"energy": 379.5094718360899, "energy_per_token": 1.6080909823563132, "time": 15.542144, "time_per_token": 0.06585654237288135}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -0.20662526786327362, -0.0006124289939180017, -0.021198369562625885, -0.00964576005935669, -0.08393506705760956, -1.6689286894688848e-06, -4.565611743601039e-05, -0.022526217624545097, -0.018831515684723854, -4.8874615458771586e-05, -0.007649179082363844, -2.064652442932129, -0.03341083228588104], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -0.1716839075088501, -0.11205638945102692], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.001042775809764862, -0.0020857739727944136, -0.4598385989665985, -0.17975978553295135, -0.019545691087841988, -0.0033800634555518627, -0.00026663561584427953, -0.00017641419253777713, -0.0004804172203876078, -0.002948225475847721, -0.07429319620132446, -0.33267390727996826, -0.31082120537757874, -0.0002559096028562635, -2.167994260787964, -0.0037095798179507256], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, batch_size=128, verbose=0, epochs=50)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " batch", "_", "size", "=", "1", "2", "8", ",", " verbose", "=", "0", ",", " epochs", "=", "5", "0", ")", "\n"], "logprobs": [-0.00177714170422405, -0.0001823735801735893, -0.02612718939781189, -0.038965605199337006, -0.00023505308490712196, -0.0005329619161784649, -0.022398116067051888, -0.0031714164651930332, -1.7523612768854946e-05, -0.022209839895367622, -2.1482841968536377, -8.260862523457035e-05, -3.3854863431770355e-05, -0.0014065144350752234, -0.7124845385551453, -2.252305507659912, -0.029171327129006386, -0.012350627221167088, -2.1645214557647705, -0.0016017238376662135, -0.10892807692289352, -0.5235012769699097, -0.26341328024864197, -0.00030048147891648114, -1.6653183698654175, -0.8251546621322632, -0.6049901843070984, -0.007426275406032801], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00833863578736782, -0.0006409021443687379, -0.0004980515805073082, -0.029151296243071556, -0.0005768066039308906, -0.00034648136352188885, -0.0008534126682206988, -0.00538802333176136, -0.04715152084827423], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.004804257769137621, -0.012934005819261074, -0.0011535187950357795, -0.17162495851516724, -0.0014571059728041291, -0.007291018031537533, -3.576278118089249e-07, -1.8596476365928538e-05, -7.867782187531702e-06, -0.00021491125517059118, -0.3671811521053314, -0.0028924793004989624, -0.005252371542155743, -0.09985074400901794, -0.00380589603446424, -5.507317473529838e-05, -8.523101132595912e-05, -0.24169708788394928, -0.014410707168281078], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0033822020050138235, -7.152531907195225e-06, -0.00025960413040593266, -0.0010440857149660587, -3.2186455882765586e-06, -0.004182639066129923, -0.002179034985601902, -0.0005438040825538337, -0.0006955826538614929, -0.0035481611266732216], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(6, 6))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "6", ",", " ", "6", "))", "\n"], "logprobs": [-0.046000707894563675, -0.00721764238551259, -0.0006739014061167836, -0.0006812873762100935, -0.00843226071447134, -5.6265202147187665e-05, -1.3978350162506104, -0.5900174975395203, -0.00033456450910307467, -0.016261322423815727, -2.1392812728881836, -0.03876035287976265, -0.0877612978219986, -0.6650315523147583, -0.02238517813384533, -0.004203413613140583], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC = {:0.2f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " {:", "0", ".", "2", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.03321043401956558, -0.017214173451066017, -0.009211541153490543, -5.245195097813848e-06, -0.0012193633010610938, -0.0017792837461456656, -0.00010191874753218144, -0.03707088157534599, -0.8541299700737, -0.34912213683128357, -0.9114517569541931, -0.004111290909349918, -0.19176100194454193, -0.3513115346431732, -0.9354499578475952, -0.0009097489528357983, -0.2999921143054962, -0.0006924853660166264, -0.005563134327530861, -0.00021431533969007432, -0.00029047083808109164, -0.0001284993631998077, -0.00619669072329998, -0.0016920547932386398, -1.7762025890988298e-05, -0.020910291001200676, -0.5603969097137451], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, '-r', label='AUC = {:.3f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " '-", "r", "'", ",", " label", "='", "A", "UC", " =", " {:", ".", "3", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.022021295502781868, -0.011550693772733212, -0.005986971780657768, -2.145764938177308e-06, -0.00076908094342798, -0.0016915787709876895, -0.0007286992622539401, -0.013785157352685928, -3.649933099746704, -0.9832983613014221, -0.2280876487493515, -0.00035529976594261825, -0.11429467052221298, -0.17587187886238098, -0.38448524475097656, -0.004175516311079264, -0.30584484338760376, -0.2882346510887146, -0.24291418492794037, -0.4186648428440094, -0.010216323658823967, -0.004522690549492836, -0.000436925794929266, -0.0004152389301452786, -0.00015960850578267127, -0.006467957049608231, -0.0014918637461960316, -3.266281055402942e-05, -0.030232716351747513, -0.07815951853990555], "finish_reason": "stop"}, {"text": "xaxis.set_major_locator(plt.MultipleLocator(0.1))", "tokens": ["x", "axis", ".", "set", "_", "major", "_", "loc", "ator", "(", "plt", ".", "Multiple", "Loc", "ator", "(", "0", ".", "1", "))", "\n"], "logprobs": [-3.186439037322998, -0.03806103765964508, -0.00024828212917782366, -0.046880267560482025, -0.0005722792120650411, -0.9433120489120483, -4.768370445162873e-07, -0.06901053339242935, -8.34461570775602e-06, -0.00014220656885299832, -0.11616885662078857, -1.597391747054644e-05, -0.11485191434621811, -0.003001472447067499, -0.0011201781453564763, -0.0329427532851696, -0.21261988580226898, -8.368142152903602e-05, -1.1951756477355957, -0.01625029742717743, -0.06477770954370499], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00012933371181134135, -6.556489552167477e-06, -0.0006909366929903626, -0.00020394629973452538, -0.00027783826226368546, -0.001844849088229239, -0.00011944057769142091, -0.002110398607328534, -0.0030043248552829027], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03432168811559677, -0.0007358465809375048, -0.045279551297426224, -0.00896358396857977, -0.05559172481298447, -0.0006754500791430473, -0.024864934384822845, -0.009081723168492317, -0.014513753354549408], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.05053914710879326, -1.2276291847229004, -0.052241791039705276], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>from typing import List, Any", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "from", " typing", " import", " List", ",", " Any", "\n"], "logprobs": [-0.01689704693853855, -0.0012040039291605353, -0.007404976058751345, -0.8513551950454712, -2.3841855067985307e-07, -3.6954811548639555e-06, -0.00030763185350224376, -0.00014244495832826942, -0.1061963140964508, -1.7033846378326416, -2.600335121154785, -0.0024435443338006735, -0.699131190776825, -1.2180662155151367, -2.339958667755127, -0.3961612284183502], "finish_reason": "stop"}], "metrics": {"energy": 382.4787072582248, "energy_per_token": 1.5177726478500984, "time": 15.962774, "time_per_token": 0.06334434126984127}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -1.8197083473205566], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.7580927014350891, -0.006006049923598766], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.01))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "1", "))", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -0.38366031646728516, -0.17962422966957092, -0.02072453685104847, -0.0028080816846340895, -0.0002213471452705562, -0.00016604475968051702, -0.0004001055203843862, -0.002999095479026437, -0.06908117979764938, -1.4074056148529053, -0.039052508771419525, -7.354942499659956e-05, -0.00047708096099086106, -0.009705026634037495, -0.00017796363681554794, -0.026356644928455353, -0.0004180987598374486, -0.017632165923714638, -0.9099560976028442, -0.0002908283786382526, -2.586808113846928e-05, -0.0032219188287854195, -0.05686412379145622, -0.0011592342052608728, -0.5073876976966858, -0.4127193093299866, -0.19243259727954865, -0.0028688248712569475], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0, epochs=200)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ",", " epochs", "=", "2", "0", "0", ")", "\n"], "logprobs": [-0.0019259967375546694, -0.000205018965061754, -0.01911224238574505, -0.03456861898303032, -0.00027259447961114347, -0.0004967409186065197, -0.018935510888695717, -0.002838275395333767, -1.6093124941107817e-05, -0.017989685758948326, -0.9478104710578918, -0.002622500527650118, -0.08244279026985168, -0.6930994391441345, -0.3238658010959625, -0.0004717191040981561, -2.4437944889068604, -0.28059902787208557, -1.0717475414276123, -0.5444355607032776, -0.009717186912894249], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.011344452388584614, -0.00048494499060325325, -0.0006023023161105812, -0.031383439898490906, -0.0007176207727752626, -0.0004667146422434598, -0.0007319155265577137, -0.005045420024544001, -0.04367433115839958], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.004096925724297762, -0.012068938463926315, -0.001095886342227459, -0.1836523711681366, -0.0017253764672204852, -0.0061413622461259365, -3.576278118089249e-07, -2.253030106658116e-05, -8.22540732769994e-06, -0.00019596086349338293, -0.3265947997570038, -0.0022750229109078646, -0.005189994350075722, -0.09775176644325256, -0.0042849634774029255, -5.829164365422912e-05, -6.890059739816934e-05, -0.23660632967948914, -0.014644864946603775], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0033400245010852814, -6.556489552167477e-06, -0.0002675890573300421, -0.0008904544520191848, -3.099436753473128e-06, -0.003503139829263091, -0.0019202856346964836, -0.0005334384622983634, -0.0008156548719853163, -0.004733072593808174], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04200434684753418, -0.0063444157131016254, -0.000609927112236619, -0.000671042304020375, -0.012138661928474903, -9.30981186684221e-05, -0.3012080490589142, -0.0016509962733834982], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC = %0.2f' % auc_score)  # Plot the ROC curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " %", "0", ".", "2", "f", "'", " %", " a", "uc", "_", "score", ")", "  ", "#", " Plot", " the", " R", "OC", " curve", "\n"], "logprobs": [-0.03631853684782982, -0.01713109202682972, -0.007840926758944988, -5.722029527532868e-06, -0.0012740122620016336, -0.0016039852052927017, -0.0001062098381225951, -0.048917267471551895, -0.6951055526733398, -0.37607038021087646, -0.9193660616874695, -0.0038745347410440445, -0.1919705867767334, -1.5569829940795898, -0.11003468930721283, -0.0005115154199302197, -0.7686197757720947, -0.00018046658078674227, -0.004884691443294287, -0.009253707714378834, -0.019151771441102028, -1.6927575416048057e-05, -0.0028443378396332264, -2.6225699912174605e-05, -0.043277814984321594, -0.852666437625885, -0.00010299152199877426, -0.0718972310423851, -0.20026183128356934, -0.36772865056991577, -4.410734163684538e-06, -0.010096194222569466, -0.09063016623258591], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC = {:0.3f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " {:", "0", ".", "3", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.025459885597229004, -0.008520676754415035, -0.006692258641123772, -1.7881377516459906e-06, -0.0006111184484325349, -0.001668134005740285, -0.0008590107318013906, -0.019899841398000717, -0.9424474835395813, -0.3125934302806854, -0.6283758282661438, -0.005803757347166538, -0.21456162631511688, -0.17249493300914764, -1.076439619064331, -0.0014029431622475386, -1.9763692617416382, -0.007101295981556177, -0.006268719676882029, -0.00030858523678034544, -0.00032455421751365066, -0.00017248096992261708, -0.0049441223964095116, -0.0015553055563941598, -3.111314072157256e-05, -0.03572564199566841, -0.0795353353023529], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, linewidth=2)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " linewidth", "=", "2", ")", "\n"], "logprobs": [-1.3283087015151978, -0.2680136263370514, -0.8948450088500977, -0.0027629081159830093, -0.030295632779598236, -0.32558220624923706, -0.016278211027383804, -0.05682763457298279, -1.9844965934753418, -0.004413269460201263, -0.41059809923171997, -1.9596154689788818, -0.17541815340518951], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.0001394651480950415, -7.271740287251305e-06, -0.0005732323625124991, -0.00016437610611319542, -0.0003051292151212692, -0.002135141519829631, -0.00011979816190432757, -0.0018692417070269585, -0.0028567002154886723], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.028041698038578033, -0.0007778956205584109, -0.055463504046201706, -0.009191697463393211, -0.05655977874994278, -0.0007155956700444221, -0.024367008358240128, -0.009673386812210083, -0.01396244764328003], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.07360279560089111, -1.1506319046020508, -0.04599444568157196], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.016933733597397804, -0.0011249411618337035, -0.005558392032980919, -0.9850354790687561], "finish_reason": "stop"}], "metrics": {"energy": 357.6641881046293, "energy_per_token": 1.5967151254670953, "time": 14.916081, "time_per_token": 0.06658964732142857}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -0.17957919836044312, -0.0004731489170808345, -0.00982366781681776, -0.013597368262708187, -0.08335768431425095, -2.145764938177308e-06, -3.45700973412022e-05, -0.02019907534122467, -0.016435477882623672, -4.458328112377785e-05, -0.007441657595336437, -1.909854531288147, -0.028069401159882545], "finish_reason": "stop"}, {"text": " keras.models.Sequential([keras.layers.Dense(2, activation=\"sigmoid\")])", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "2", ",", " activation", "=", "\"", "s", "igmoid", "\"", ")]", ")", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.6890829205513, -2.2464144229888916, -9.703165414975956e-05, -0.0010071687866002321, -2.9801878554280847e-05, -0.033448416739702225, -0.00022194306075107306, -0.00018249277491122484, -1.8239110708236694, -0.07779927551746368, -0.16565844416618347, -1.6473479270935059, -0.06220098212361336, -0.02155345119535923, -7.748303323751315e-05, -1.7523612768854946e-05, -0.2991941571235657, -0.0015886317705735564, -0.008325986564159393], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd', metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -0.38366031646728516, -0.17962422966957092, -0.02072453685104847, -0.0028080816846340895, -0.0002213471452705562, -0.00016604475968051702, -0.0004001055203843862, -0.002999095479026437, -0.06908117979764938, -0.2825295627117157, -0.33500000834465027, -0.00025912740966305137, -0.10381387919187546, -0.0017064546700567007, -0.2743377089500427, -0.09037981927394867, -0.09012515842914581, -0.07356192916631699, -0.0027608871459960938], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=500, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "5", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0015053142560645938, -0.00020561488054227084, -0.021150050684809685, -0.038079626858234406, -0.00022802136663813144, -0.0005209281225688756, -0.017738744616508484, -0.002600979758426547, -1.9430925021879375e-05, -0.020074065774679184, -0.8509872555732727, -0.0007351318490691483, -1.7227766513824463, -1.0318169593811035, -1.245000958442688, -0.11299899965524673, -0.0445602685213089, -0.001434250851161778, -0.14562420547008514, -0.0921580046415329, -0.012774305418133736], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00883467961102724, -0.0005560758872888982, -0.0005980133428238332, -0.03430026397109032, -0.0006621075444854796, -0.00038521020906046033, -0.0008052920456975698, -0.006149774417281151, -0.04974129796028137], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(y_true=Y_test, y_score=Y_pred, pos_label=1)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "y", "_", "true", "=", "Y", "_", "test", ",", " y", "_", "score", "=", "Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.004007405135780573, -0.011967407539486885, -0.0015726829878985882, -0.17514733970165253, -0.0016559947980567813, -0.006266824435442686, -3.576278118089249e-07, -1.7523612768854946e-05, -7.510157047363464e-06, -0.00017128908075392246, -1.265311598777771, -9.30981186684221e-05, -0.007005178369581699, -0.002209842437878251, -0.0022718114778399467, -0.00014184899919200689, -0.012823383323848248, -0.12407609075307846, -0.348640501499176, -7.152531907195225e-06, -0.0014691284159198403, -0.0010151476599276066, -0.0031562058720737696, -0.00044371772673912346, -0.0007636015070602298, -1.4137178659439087, -0.04538208618760109, -0.0019596675410866737, -0.0003196682082489133, -0.0063704755157232285, -0.03433965891599655, -0.2004939317703247, -0.014559690840542316], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0034722534473985434, -7.271740287251305e-06, -0.0002708068350329995, -0.0008686583023518324, -3.2186455882765586e-06, -0.004736987873911858, -0.001505909371189773, -0.00044979469384998083, -0.0006568658282049, -0.0044948020949959755], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04431157186627388, -0.006721151061356068, -0.0005999195855110884, -0.000593962671700865, -0.013177450746297836, -7.581423415103927e-05, -0.2989377975463867, -0.00237980205565691], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (AUC = %0.2f)' % auc_score)  # Plot the ROC curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "A", "UC", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "  ", "#", " Plot", " the", " R", "OC", " curve", "\n"], "logprobs": [-0.025889316573739052, -0.016158340498805046, -0.008096138015389442, -5.006777428206988e-06, -0.0012775840004906058, -0.0017177602276206017, -0.00010668662434909493, -0.047151293605566025, -0.7388681173324585, -0.40027791261672974, -0.6645360589027405, -0.0009934734553098679, -0.17361289262771606, -0.5719583034515381, -0.9564223289489746, -0.002334966091439128, -0.13941678404808044, -0.07724802196025848, -0.0047534797340631485, -0.00020323118951637298, -0.5189184546470642, -3.2305197237292305e-05, -0.0023670769296586514, -0.0015925593907013535, -0.020952900871634483, -1.1920858014491387e-05, -0.003602326614782214, -2.5987286790041253e-05, -0.02348325029015541, -2.0313072204589844, -0.000129691296024248, -0.07856205850839615, -0.08285260945558548, -0.16029824316501617, -4.0531076592742465e-06, -0.0058895619586110115, -0.08573973178863525], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC={:.2f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", "={", ":", ".", "2", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.041028041392564774, -0.008472924120724201, -0.005733591504395008, -1.6689286894688848e-06, -0.0007231004419736564, -0.0014429405564442277, -0.0006798578542657197, -0.0184121523052454, -0.8780725002288818, -0.3309461772441864, -0.5345672369003296, -0.005955095402896404, -2.810903310775757, -0.08097247779369354, -0.6914272904396057, -0.503918468952179, -0.0025242867413908243, -0.003407507436349988, -0.00026770823751576245, -0.00023731753753963858, -0.0001823735801735893, -0.004835221916437149, -0.0015787529991939664, -2.6940935640595853e-05, -0.03820504620671272, -0.07885625958442688], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, 'g.')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " '", "g", ".", "')", "\n"], "logprobs": [-1.3167140483856201, -0.23181763291358948, -0.9051215648651123, -0.002810459118336439, -0.03304586559534073, -0.27768802642822266, -0.018683986738324165, -0.049165159463882446, -0.4508669674396515, -2.5116734504699707, -0.16765494644641876, -0.5189981460571289, -0.08292865008115768], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.0001245659514097497, -6.6756979322235566e-06, -0.0005831210291944444, -0.00020215852418914437, -0.0003014348621945828, -0.0017864234978333116, -0.00012563870404846966, -0.0018149822717532516, -0.0031773580703884363], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03442684933543205, -0.0007257211836986244, -0.04773666337132454, -0.0079306960105896, -0.05329515039920807, -0.0007682471186853945, -0.02220226265490055, -0.008756217546761036, -0.010006029158830643], "finish_reason": "stop"}, {"text": "grid(alpha=0.4)", "tokens": ["grid", "(", "alpha", "=", "0", ".", "4", ")", "\n"], "logprobs": [-2.8512158393859863, -0.8950505256652832, -2.9085376262664795, -0.0020754244178533554, -0.0455588735640049, -0.011585927568376064, -0.5130127668380737, -0.05629793554544449, -0.035083938390016556], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.013990895822644234, -0.0010189585154876113, -0.005989815574139357], "finish_reason": "stop"}], "metrics": {"energy": 357.087544575691, "energy_per_token": 1.3424343781041017, "time": 15.749353, "time_per_token": 0.05920809398496241}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -1.6911146640777588], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.7580927014350891, -0.006006049923598766], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(0.1))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "0", ".", "1", "))", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -0.38366031646728516, -0.17962422966957092, -0.02072453685104847, -0.0028080816846340895, -0.0002213471452705562, -0.00016604475968051702, -0.0004001055203843862, -0.002999095479026437, -0.06908117979764938, -1.4074056148529053, -0.039052508771419525, -7.354942499659956e-05, -0.00047708096099086106, -0.009705026634037495, -0.00017796363681554794, -0.026356644928455353, -0.0004180987598374486, -0.017632165923714638, -2.9270763397216797, -0.0016014858847483993, -1.2131450176239014, -0.13670694828033447, -0.0038764348719269037], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.001369134639389813, -0.00014900050882715732, -0.02217579446732998, -0.029949773102998734, -0.00022957073815632612, -0.00045944625162519515, -0.018441880121827126, -0.004065107554197311, -1.3828182090946939e-05, -0.021083638072013855, -1.0481154918670654, -0.0028305486775934696, -0.07998783141374588, -0.7041047811508179, -0.009506788104772568], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.009245912544429302, -0.0005276002921164036, -0.0005534547381103039, -0.03613217547535896, -0.0007739647408016026, -0.00034481301554478705, -0.000706780469045043, -0.004840560257434845, -0.06347070634365082], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.0035510121379047632, -0.013300268910825253, -0.0009970461251214147, -0.16849170625209808, -0.0014033003244549036, -0.006372133735567331, -3.576278118089249e-07, -2.288792165927589e-05, -7.986990567587782e-06, -0.0002051381452474743, -0.29293835163116455, -0.002379326382651925, -0.006222517695277929, -0.0820963904261589, -0.00422976678237319, -5.2927523938706145e-05, -0.00010418349120300263, -0.25183507800102234, -0.016192356124520302], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.00350052653811872, -7.033323527139146e-06, -0.0003215749457012862, -0.0010170531459152699, -3.933898824470816e-06, -0.0037569671403616667, -0.0015564957866445184, -0.0005235493299551308, -0.0007767044589854777, -0.003474747994914651], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04559987783432007, -0.007589435204863548, -0.0006100462633185089, -0.0005654881824739277, -0.012103329412639141, -6.401333666872233e-05, -0.2814894914627075, -0.0018101035384461284], "finish_reason": "stop"}, {"text": "plot(fpr, tpr)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.03199392557144165, -0.018261753022670746, -0.008279642090201378, -4.172316494077677e-06, -0.0013955625472590327, -0.0014638908905908465, -0.00010895135346800089, -3.002847671508789, -1.1253540515899658], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.02786584384739399, -0.012627174146473408, -0.006826294120401144, -2.0265558760002023e-06, -0.0006898645660839975, -0.0014690094394609332, -0.0006713996990583837, -0.01562507636845112, -0.9754680395126343, -0.2908402383327484, -0.9438777565956116, -0.0017354916781187057, -0.22527474164962769, -1.6204482316970825, -0.05972439795732498], "finish_reason": "stop"}, {"text": "grid()", "tokens": ["grid", "()", "\n"], "logprobs": [-3.1412339210510254, -0.673911452293396, -0.03166043385863304], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00013910756388213485, -8.702239938429557e-06, -0.000662822334561497, -0.000164018536452204, -0.0002833203470800072, -0.001738466788083315, -0.00011157367407577112, -0.0019437245791777968, -0.002688842825591564], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.031705938279628754, -0.0007026110542938113, -0.055805839598178864, -0.008909827098250389, -0.05670531466603279, -0.0007456144667230546, -0.021330008283257484, -0.008487108163535595, -0.013608187437057495], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.05500822886824608, -0.3318246304988861, -0.0024874242953956127, -0.32266107201576233, -0.6828665733337402, -0.12854184210300446, -0.0317855067551136, -0.015096458606421947], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.015351117588579655, -0.000990615226328373, -0.007143077906221151, -0.9055173993110657], "finish_reason": "stop"}], "metrics": {"energy": 306.532012945175, "energy_per_token": 1.7821628659603197, "time": 12.800414, "time_per_token": 0.07442101162790697}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -0.17957919836044312, -0.0004731489170808345, -0.00982366781681776, -0.013597368262708187, -0.08335768431425095, -2.145764938177308e-06, -3.45700973412022e-05, -0.02019907534122467, -0.016435477882623672, -4.458328112377785e-05, -0.007441657595336437, -0.2136436551809311, -0.11206714808940887, -1.1920922133867862e-06, -4.529942543740617e-06, -0.001563875237479806, -0.2299562245607376, -0.03836200013756752, -0.08873428404331207, -0.0179420318454504], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -0.1716839075088501, -0.11205638945102692], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd',", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", "\n"], "logprobs": [-0.001042775809764862, -0.0020857739727944136, -0.4598385989665985, -0.17975978553295135, -0.019545691087841988, -0.0033800634555518627, -0.00026663561584427953, -0.00017641419253777713, -0.0004804172203876078, -0.002948225475847721, -0.07429319620132446, -0.33267390727996826, -0.31082120537757874, -0.0002559096028562635, -0.12181930243968964, -0.0018638873007148504, -1.9136995077133179], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.00177714170422405, -0.0001823735801735893, -0.02612718939781189, -0.038965605199337006, -0.00023505308490712196, -0.0005329619161784649, -0.022398116067051888, -0.0031714164651930332, -1.7523612768854946e-05, -0.022209839895367622, -0.8624013066291809, -0.0029313473496586084, -0.0653938353061676, -0.6469662189483643, -0.008888441137969494], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00833863578736782, -0.0006409021443687379, -0.0004980515805073082, -0.029151296243071556, -0.0005768066039308906, -0.00034648136352188885, -0.0008534126682206988, -0.00538802333176136, -0.04715152084827423], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.004804257769137621, -0.012934005819261074, -0.0011535187950357795, -0.17162495851516724, -0.0014571059728041291, -0.007291018031537533, -3.576278118089249e-07, -1.8596476365928538e-05, -7.867782187531702e-06, -0.00021491125517059118, -0.3671811521053314, -0.0028924793004989624, -0.005252371542155743, -0.09985074400901794, -0.00380589603446424, -5.507317473529838e-05, -8.523101132595912e-05, -0.24169708788394928, -0.014410707168281078], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0033822020050138235, -7.152531907195225e-06, -0.00025960413040593266, -0.0010440857149660587, -3.2186455882765586e-06, -0.004182639066129923, -0.002179034985601902, -0.0005438040825538337, -0.0006955826538614929, -0.0035481611266732216], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(5, 5))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "5", ",", " ", "5", "))", "\n"], "logprobs": [-0.046000707894563675, -0.00721764238551259, -0.0006739014061167836, -0.0006812873762100935, -0.00843226071447134, -5.6265202147187665e-05, -1.3978350162506104, -0.5900174975395203, -0.00033456450910307467, -0.016261322423815727, -1.7287284135818481, -0.024747831746935844, -0.07980932295322418, -0.42097383737564087, -0.038505394011735916, -0.004526250530034304], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'AUC = {auc_score:.3f}')  # Plot the ROC curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "A", "UC", " =", " {", "auc", "_", "score", ":", ".", "3", "f", "}", "')", "  ", "#", " Plot", " the", " R", "OC", " curve", "\n"], "logprobs": [-0.03321043401956558, -0.017214173451066017, -0.009211541153490543, -5.245195097813848e-06, -0.0012193633010610938, -0.0017792837461456656, -0.00010191874753218144, -0.03707088157534599, -0.8541299700737, -1.2265864610671997, -0.29371127486228943, -0.2484481930732727, -0.20374970138072968, -0.0016715852543711662, -0.8003284931182861, -0.014726155437529087, -0.058656997978687286, -0.0021257440093904734, -3.4927710657939315e-05, -0.46916869282722473, -0.02750035561621189, -1.2745399475097656, -0.01671336032450199, -0.03386348485946655, -0.00430134404450655, -0.6904997825622559, -0.00011169286881340668, -0.11284598708152771, -0.18250367045402527, -0.26266101002693176, -4.172316494077677e-06, -0.011446989141404629, -0.09603354334831238], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC = {:.2f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " {:", ".", "2", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.022021295502781868, -0.011550693772733212, -0.005986971780657768, -2.145764938177308e-06, -0.00076908094342798, -0.0016915787709876895, -0.0007286992622539401, -0.013785157352685928, -0.9755308628082275, -0.29556480050086975, -0.6892768740653992, -0.005640424322336912, -0.20483124256134033, -0.1961042284965515, -0.39031311869621277, -0.7009084820747375, -0.0017072877380996943, -0.005376047920435667, -0.00023052419419400394, -0.00035089056473225355, -0.0002420847595203668, -0.005283677484840155, -0.0016371908131986856, -3.504691630951129e-05, -0.03655601292848587, -0.10203446447849274], "finish_reason": "stop"}, {"text": "set(xlabel='False Positive Rate', ylabel='True Positive Rate', title='ROC curve')", "tokens": ["set", "(", "xlabel", "='", "False", " Positive", " Rate", "'", ",", " y", "label", "='", "True", " Positive", " Rate", "'", ",", " title", "='", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.8726674914360046, -2.1347148418426514, -0.3429343104362488, -0.027459878474473953, -0.005804350133985281, -0.16458119451999664, -0.002257776679471135, -0.013843944296240807, -3.45700973412022e-05, -0.05439018830657005, -0.00013159839727450162, -0.00014506718434859067, -0.0005631053354591131, -0.0009211826254613698, -0.001032296335324645, -0.34632647037506104, -0.0015707785496488214, -0.23139938712120056, -0.006215290632098913, -0.09482338279485703, -0.001446987851522863, -0.11345960199832916, -0.00600178400054574, -0.02690487541258335], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00011622230522334576, -7.033323527139146e-06, -0.000525217386893928, -0.0001461399078834802, -0.0002739054325502366, -0.002062933286651969, -0.00011491115583339706, -0.0017740478506311774, -0.0031262594275176525], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03290734067559242, -0.0006036128615960479, -0.04635642468929291, -0.010226588696241379, -0.04981524869799614, -0.0007166677969507873, -0.02094356156885624, -0.008862800896167755, -0.012145374901592731], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.0583731010556221, -0.2963298559188843, -0.0025424794293940067, -0.3216050863265991, -0.6432359218597412, -0.13294358551502228, -0.033597126603126526, -0.017772940918803215], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.015437867492437363, -0.0011510183103382587, -0.006105107255280018], "finish_reason": "stop"}], "metrics": {"energy": 376.6030383281707, "energy_per_token": 1.5434550751154539, "time": 15.540303, "time_per_token": 0.06368976639344262}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -1.6911146640777588], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.7580927014350891, -0.006006049923598766], "finish_reason": "stop"}, {"text": "compile(", "tokens": ["compile", "(", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -2.079106330871582], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0, epochs=30)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ",", " epochs", "=", "3", "0", ")", "\n"], "logprobs": [-0.001587560516782105, -0.0001740304142003879, -0.021264657378196716, -0.040321268141269684, -0.0002302858338225633, -0.00047672350774519145, -0.01812806911766529, -0.00264711189083755, -1.5616295058862306e-05, -0.02109682746231556, -0.9739142656326294, -0.002400376135483384, -0.08469164371490479, -0.6555050611495972, -0.3488089144229889, -0.0005054388311691582, -2.327904462814331, -0.5969249606132507, -1.0580216646194458, -0.010215379297733307], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.011155379004776478, -0.0005172345554456115, -0.0005029367166571319, -0.036299798637628555, -0.000676998752169311, -0.000316212244797498, -0.00087878224439919, -0.0050785113126039505, -0.051920533180236816], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.004013935569673777, -0.011789645068347454, -0.001258772797882557, -0.1676613837480545, -0.0014721043407917023, -0.0056321267038583755, -3.576278118089249e-07, -2.3603161025675945e-05, -7.748573807475623e-06, -0.00021336186910048127, -0.25501036643981934, -0.002650916576385498, -0.005979032255709171, -0.09571066498756409, -0.004608604591339827, -5.98412734689191e-05, -8.797258487902582e-05, -1.4454858303070068, -0.07713104784488678, -0.0015575670404359698, -0.0002330270071979612, -0.012580323033034801, -0.04899173229932785, -0.3347693979740143, -0.01396926585584879], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.003423308255150914, -7.033323527139146e-06, -0.0003413571394048631, -0.0009053422254510224, -3.2186455882765586e-06, -0.0047689033672213554, -0.0015115038258954883, -0.00045193947153165936, -0.0006366133457049727, -0.004040293861180544], "finish_reason": "stop"}, {"text": " ax = plt.subplots(1)", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "1", ")", "\n"], "logprobs": [-0.04371267184615135, -0.00641311751678586, -0.0006924853660166264, -0.0006598440813831985, -0.010076722130179405, -6.532455881824717e-05, -1.4440662860870361, -1.203092098236084, -1.3709423542022705, -0.007924072444438934], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, marker='o')  # Plot the ROC curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " marker", "='", "o", "')", "  ", "#", " Plot", " the", " R", "OC", " curve", "\n"], "logprobs": [-0.03413460776209831, -0.016179101541638374, -0.0074713570065796375, -4.172316494077677e-06, -0.0014917447697371244, -0.0013719918206334114, -0.00010549465514486656, -0.054394252598285675, -1.9939167499542236, -0.004533607978373766, -0.5050215721130371, -0.7231760621070862, -0.4165935218334198, -5.507317473529838e-05, -0.02748492918908596, -0.1767061948776245, -0.3516499102115631, -6.556489552167477e-06, -0.0073690032586455345, -0.051994774490594864], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, color='#4C72B0', linewidth=3,", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " color", "='", "#", "4", "C", "7", "2", "B", "0", "'", ",", " linewidth", "=", "3", ",", "\n"], "logprobs": [-0.028371648862957954, -0.006656378507614136, -0.006433253176510334, -2.0265558760002023e-06, -0.0007474012672901154, -0.001553758280351758, -0.0005909841856919229, -0.01811249926686287, -1.9039171934127808, -0.018999142572283745, -1.0040392875671387, -2.7484383583068848, -1.2678037881851196, -0.7124595046043396, -0.4811505377292633, -0.9363136887550354, -0.000598251644987613, -0.036848120391368866, -7.331102824537084e-05, -0.7023546099662781, -0.059274766594171524, -1.5672640800476074, -0.1955520510673523, -2.8194832801818848], "finish_reason": "stop"}, {"text": "set(xlabel='False Positive Rate', ylabel='True Positive Rate', title='ROC curve')", "tokens": ["set", "(", "xlabel", "='", "False", " Positive", " Rate", "'", ",", " y", "label", "='", "True", " Positive", " Rate", "'", ",", " title", "='", "R", "OC", " curve", "')", "\n"], "logprobs": [-1.1130107641220093, -2.382749080657959, -0.2884122133255005, -0.026747969910502434, -0.005942534189671278, -0.16395770013332367, -0.0024519874714314938, -0.012355689890682697, -3.671578815556131e-05, -0.05686018243432045, -0.00013362467871047556, -0.00014828535495325923, -0.0006089740199968219, -0.0008899780223146081, -0.0010481346398591995, -0.3076862096786499, -0.0010945764370262623, -0.29258012771606445, -0.0064635747112333775, -0.09982593357563019, -0.0012746074935421348, -0.11726441979408264, -0.008310853503644466, -0.020823312923312187], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.0001401803019689396, -7.986990567587782e-06, -0.0005701346672140062, -0.0001586549769854173, -0.0002884448622353375, -0.0018474669195711613, -0.00011765264935093, -0.0018430643249303102, -0.003237247234210372], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03195132315158844, -0.0005601267330348492, -0.046377480030059814, -0.007575001567602158, -0.051232967525720596, -0.0008434075862169266, -0.021619483828544617, -0.008648086339235306, -0.014351601712405682], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.06287433207035065, -1.3767213821411133, -0.04446665942668915], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.017021402716636658, -0.0012228161795064807, -0.006259479559957981, -0.89023357629776], "finish_reason": "stop"}], "metrics": {"energy": 342.27033965683006, "energy_per_token": 1.7199514555619602, "time": 13.845484, "time_per_token": 0.06957529648241206}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -0.20662526786327362, -0.0006124289939180017, -0.021198369562625885, -0.00964576005935669, -0.08393506705760956, -1.6689286894688848e-06, -4.565611743601039e-05, -0.022526217624545097, -0.018831515684723854, -4.8874615458771586e-05, -0.007649179082363844, -2.064652442932129, -0.03341083228588104], "finish_reason": "stop"}, {"text": " keras.models.Sequential([", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.6890829205513, -0.11499229818582535], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "adam", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -0.38366031646728516, -0.17962422966957092, -0.02072453685104847, -0.0028080816846340895, -0.0002213471452705562, -0.00016604475968051702, -0.0004001055203843862, -0.002999095479026437, -0.06908117979764938, -0.2825295627117157, -2.697537422180176, -0.7121207118034363, -0.05910375714302063, -0.1205662190914154, -0.09146177768707275, -0.08804483711719513, -0.08377183973789215, -0.002176774898543954], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0015053142560645938, -0.00020561488054227084, -0.021150050684809685, -0.038079626858234406, -0.00022802136663813144, -0.0005209281225688756, -0.017738744616508484, -0.002600979758426547, -1.9430925021879375e-05, -0.020074065774679184, -0.9218299984931946, -0.002724390011280775, -0.07221724092960358, -0.6242451071739197, -0.010368410497903824], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.010018776170909405, -0.0005420169327408075, -0.000582644424866885, -0.03994106128811836, -0.000606710382271558, -0.0004002247005701065, -0.0007208371534943581, -0.005895605776458979, -0.05532624572515488], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.004211010877043009, -0.01338872592896223, -0.0009676303598098457, -0.14790035784244537, -0.001383896335028112, -0.006821440067142248, -3.576278118089249e-07, -2.062299427052494e-05, -7.271740287251305e-06, -0.0001716466504149139, -0.30395832657814026, -0.0024958669673651457, -0.00708354078233242, -0.10123401135206223, -0.00391217740252614, -7.235741941258311e-05, -6.031808152329177e-05, -0.21685369312763214, -0.01329673919826746], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0031724858563393354, -6.794906312279636e-06, -0.00025006983196362853, -0.0010458719916641712, -4.0531076592742465e-06, -0.005367629695683718, -0.0014097285456955433, -0.00043394684325903654, -0.000713213172275573, -0.0037542355712503195], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04818287491798401, -0.008024713955819607, -0.0006306566647253931, -0.0007769426447339356, -0.011593468487262726, -6.770858453819528e-05, -0.28596052527427673, -0.0018446111353114247], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, linewidth=3, color='cornflowerblue', label='ROC curve (AUC = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " linewidth", "=", "3", ",", " color", "='", "cor", "nf", "lower", "blue", "'", ",", " label", "='", "R", "OC", " curve", " (", "A", "UC", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.03128523752093315, -0.02050884999334812, -0.007899945601820946, -5.8412379075889476e-06, -0.0011865011183544993, -0.0015334049239754677, -9.381330892210826e-05, -0.044766269624233246, -1.677332878112793, -0.0065628234297037125, -2.0712108612060547, -0.17878127098083496, -1.885617971420288, -0.03170374408364296, -4.300009727478027, -0.06894855946302414, -0.0010116941994056106, -0.0012311505852267146, -0.2742629647254944, -0.0017567930044606328, -0.10600944608449936, -0.14090795814990997, -0.5075209736824036, -0.0016625404823571444, -0.21213211119174957, -1.2860617637634277, -0.9768213033676147, -0.00323653407394886, -0.1972941905260086, -0.06359387934207916, -0.011094193905591965, -0.0006070678355172276, -0.803054690361023, -5.8053239627042785e-05, -0.002634152304381132, -0.006005694158375263, -0.03251253440976143, -5.5549986427649856e-05, -0.004909009672701359, -3.4450891689630225e-05, -0.024011759087443352, -0.1280289888381958], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f\"ROC AUC = {auc_score:.2f}\")", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "\"", "R", "OC", " A", "UC", " =", " {", "auc", "_", "score", ":", ".", "2", "f", "}\"", ")", "\n"], "logprobs": [-0.021599650382995605, -0.008010168559849262, -0.004929531831294298, -2.145764938177308e-06, -0.0006821212591603398, -0.0015844660811126232, -0.0007348936051130295, -0.019241467118263245, -1.0259596109390259, -1.3181501626968384, -0.210960254073143, -1.6587427854537964, -1.849918246269226, -0.0026614980306476355, -1.8564319610595703, -0.0015855372184887528, -1.2246148586273193, -0.019584501162171364, -0.035139527171850204, -0.00386527250520885, -2.6464111215318553e-05, -0.3167499601840973, -0.0434371717274189, -0.7149970531463623, -0.01559819933027029, -0.005583168473094702, -0.04270239546895027, -0.05958738550543785], "finish_reason": "stop"}, {"text": "axis([0, 1, 0, 1])", "tokens": ["axis", "([", "0", ",", " ", "1", ",", " ", "0", ",", " ", "1", "])", "\n"], "logprobs": [-2.8264050483703613, -0.0509263351559639, -0.0320630818605423, -0.010427516885101795, -0.002668274799361825, -0.0034929236862808466, -0.0028255560901015997, -0.00025376438861712813, -7.354942499659956e-05, -0.00017534149810671806, -0.00011562632425921038, -7.772143726469949e-05, -0.007178230676800013, -0.013897084631025791], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.0001494772732257843, -6.9141146923357155e-06, -0.0005249790847301483, -0.00019262365822214633, -0.00034528967808000743, -0.0023982354905456305, -0.00011753345461329445, -0.0017807116964831948, -0.002478981390595436], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03789990395307541, -0.000560245884116739, -0.0545564740896225, -0.008456730283796787, -0.039347901940345764, -0.0006590101984329522, -0.02130141854286194, -0.009048054926097393, -0.012422095984220505], "finish_reason": "stop"}, {"text": "legend(loc='upper left')", "tokens": ["legend", "(", "loc", "='", "upper", " left", "')", "\n"], "logprobs": [-0.05878964066505432, -0.25484102964401245, -0.003456453327089548, -0.3038218021392822, -1.1464524269104004, -0.3887409269809723, -0.12520121037960052, -0.04500322788953781], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>#!/usr/bin/env python", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.016731765121221542, -0.0010386077919974923, -0.0059745293110609055, -0.8529365062713623, -1.1920928244535389e-07, -3.814689989667386e-06, -0.00021908267808612436, -0.00013445904187392443, -0.0908799022436142, -0.9811640381813049, -1.2050457000732422, -0.04907107353210449, -0.0965314581990242, -4.51792984677013e-05, -0.003416061168536544, -0.0005243833875283599, -0.028807010501623154, -0.003522859187796712, -0.5475170612335205], "finish_reason": "stop"}], "metrics": {"energy": 375.6839247226715, "energy_per_token": 1.4967487040743885, "time": 15.733734, "time_per_token": 0.06268419920318725}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -1.8197083473205566], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -0.1716839075088501, -0.11205638945102692], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd')", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "')", "\n"], "logprobs": [-0.001042775809764862, -0.0020857739727944136, -0.4598385989665985, -0.17975978553295135, -0.019545691087841988, -0.0033800634555518627, -0.00026663561584427953, -0.00017641419253777713, -0.0004804172203876078, -0.002948225475847721, -0.07429319620132446, -0.33267390727996826, -0.31082120537757874, -0.0002559096028562635, -2.167994260787964, -0.0037095798179507256], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, batch_size=10, epochs=500, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " batch", "_", "size", "=", "1", "0", ",", " epochs", "=", "5", "0", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.00177714170422405, -0.0001823735801735893, -0.02612718939781189, -0.038965605199337006, -0.00023505308490712196, -0.0005329619161784649, -0.022398116067051888, -0.0031714164651930332, -1.7523612768854946e-05, -0.022209839895367622, -2.1482841968536377, -8.260862523457035e-05, -3.3854863431770355e-05, -0.0014065144350752234, -0.7124845385551453, -0.7994035482406616, -0.27665603160858154, -0.16546721756458282, -0.00026794656878337264, -1.4883160591125488, -1.241978645324707, -1.8958851099014282, -0.2472226470708847, -0.01599082350730896, -0.0012961566681042314, -0.18464942276477814, -0.27606284618377686, -0.010453942231833935], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00833863578736782, -0.0006409021443687379, -0.0004980515805073082, -0.029151296243071556, -0.0005768066039308906, -0.00034648136352188885, -0.0008534126682206988, -0.00538802333176136, -0.04715152084827423], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.004804257769137621, -0.012934005819261074, -0.0011535187950357795, -0.17162495851516724, -0.0014571059728041291, -0.007291018031537533, -3.576278118089249e-07, -1.8596476365928538e-05, -7.867782187531702e-06, -0.00021491125517059118, -0.3671811521053314, -0.0028924793004989624, -0.005252371542155743, -0.09985074400901794, -0.00380589603446424, -5.507317473529838e-05, -8.523101132595912e-05, -1.5962960720062256, -0.07734611630439758, -0.001374848885461688, -0.00023362292267847806, -0.012380062602460384, -0.038304638117551804, -0.25451233983039856, -0.013916716910898685], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0033822020050138235, -7.152531907195225e-06, -0.00025960413040593266, -0.0010440857149660587, -3.2186455882765586e-06, -0.004182639066129923, -0.002179034985601902, -0.0005438040825538337, -0.0006955826538614929, -0.0035481611266732216], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.046000707894563675, -0.00721764238551259, -0.0006739014061167836, -0.0006812873762100935, -0.00843226071447134, -5.6265202147187665e-05, -0.28501152992248535, -0.001960857305675745], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (AUC = %0.2f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "A", "UC", " =", " %", "0", ".", "2", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.03110625594854355, -0.015258019790053368, -0.008360860869288445, -7.152531907195225e-06, -0.001347944256849587, -0.0017095488728955388, -0.00010334911348763853, -0.04157983884215355, -0.7949591279029846, -0.37421679496765137, -0.7868173718452454, -0.0010213402565568686, -0.15924935042858124, -0.5709913969039917, -1.0965924263000488, -0.002086249878630042, -0.14733777940273285, -0.0801532194018364, -0.004630319774150848, -0.00014029949670657516, -0.5703831911087036, -3.1470757676288486e-05, -0.002980435499921441, -0.001456748810596764, -0.01903727278113365, -1.4781842764932662e-05, -0.004053353797644377, -2.6225699912174605e-05, -0.02909351885318756, -0.19408279657363892], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'AUC={auc_score:.2f}')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "A", "UC", "={", "auc", "_", "score", ":", ".", "2", "f", "}", "')", "\n"], "logprobs": [-0.030847487971186638, -0.010972874239087105, -0.005234702490270138, -1.7881377516459906e-06, -0.0005977750988677144, -0.0015555436257272959, -0.0006333967321552336, -0.01850893534719944, -1.027252435684204, -1.508052110671997, -0.16201961040496826, -0.22494304180145264, -0.1967347264289856, -0.002142873592674732, -0.846979558467865, -0.041933588683605194, -0.004751106724143028, -4.446407547220588e-05, -0.2666965126991272, -0.026658596470952034, -0.8023957014083862, -0.005801031831651926, -0.023975098505616188, -0.011527007445693016, -0.07665274292230606], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-2.4602482318878174, -0.0512610524892807, -0.00825505144894123, -0.12874770164489746, -0.6463431715965271, -0.20637276768684387, -0.04790087789297104, -0.05556454882025719], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00011407678539399058, -7.748573807475623e-06, -0.0005607224884442985, -0.00020323118951637298, -0.00032264748006127775, -0.0020019030198454857, -0.00011205045302631333, -0.0019121948862448335, -0.0027558940928429365], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.033214934170246124, -0.0005977750988677144, -0.044427089393138885, -0.010375135578215122, -0.05030633136630058, -0.0006837890832684934, -0.019175628200173378, -0.009573856368660927, -0.013715196400880814], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.059300605207681656, -0.26435258984565735, -0.0028085571248084307, -0.31481534242630005, -0.7323703765869141, -0.10824888199567795, -0.030333103612065315, -0.020233655348420143], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.014105151407420635, -0.0011738798348233104, -0.0055062295868992805, -0.9659214019775391], "finish_reason": "stop"}], "metrics": {"energy": 354.2661508045196, "energy_per_token": 1.6401210685394427, "time": 14.265671, "time_per_token": 0.06604477314814815}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=0,", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "0", ",", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -0.20662526786327362, -0.0006124289939180017, -0.021198369562625885, -0.00964576005935669, -0.08393506705760956, -1.6689286894688848e-06, -4.565611743601039e-05, -0.022526217624545097, -0.018831515684723854, -4.8874615458771586e-05, -0.007649179082363844, -0.18480026721954346, -0.1227041557431221, -1.5497195136049413e-06, -4.410734163684538e-06, -0.001611721352674067, -2.6930620670318604, -2.052658796310425, -1.7777166366577148], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -0.1716839075088501, -0.11205638945102692], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer='sgd', metrics=['accuracy'])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "='", "sg", "d", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.001042775809764862, -0.0020857739727944136, -0.4598385989665985, -0.17975978553295135, -0.019545691087841988, -0.0033800634555518627, -0.00026663561584427953, -0.00017641419253777713, -0.0004804172203876078, -0.002948225475847721, -0.07429319620132446, -0.33267390727996826, -0.31082120537757874, -0.0002559096028562635, -0.12181930243968964, -0.0018638873007148504, -0.22947825491428375, -0.080765001475811, -0.09406173229217529, -0.0860394760966301, -0.002754348563030362], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=100, verbose=0, shuffle=True)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "1", "0", "0", ",", " verbose", "=", "0", ",", " shuffle", "=", "True", ")", "\n"], "logprobs": [-0.00177714170422405, -0.0001823735801735893, -0.02612718939781189, -0.038965605199337006, -0.00023505308490712196, -0.0005329619161784649, -0.022398116067051888, -0.0031714164651930332, -1.7523612768854946e-05, -0.022209839895367622, -0.8611062169075012, -0.0007377525325864553, -0.5564095377922058, -0.1686301976442337, -0.8792734146118164, -0.2567497789859772, -0.04233909398317337, -0.0012254356406629086, -0.09998181462287903, -2.273373603820801, -2.8110878467559814, -0.0008233971311710775, -0.5484018325805664, -0.11026383191347122, -0.010973109863698483], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.010857434943318367, -0.0005371319712139666, -0.0005334384622983634, -0.03191229701042175, -0.0007466865936294198, -0.0003457663697190583, -0.0008615119731985033, -0.005516188219189644, -0.052335355430841446], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.003824065439403057, -0.01072346605360508, -0.0012912754900753498, -0.18526630103588104, -0.001468414207920432, -0.005660457070916891, -3.576278118089249e-07, -1.7165990357170813e-05, -6.6756979322235566e-06, -0.00016151554882526398, -0.284090518951416, -0.002167615806683898, -0.005767252761870623, -0.08853812515735626, -0.004586771130561829, -4.935142715112306e-05, -7.73638384998776e-05, -1.628129482269287, -0.08678551018238068, -0.0015686361584812403, -0.00023767507809679955, -0.012619052082300186, -0.050998274236917496, -0.2791014015674591, -0.016630472615361214], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.003509079571813345, -7.033323527139146e-06, -0.0002526917669456452, -0.001053493469953537, -4.529942543740617e-06, -0.004370660986751318, -0.0014619863359257579, -0.00042906138696707785, -0.0008001701789908111, -0.004108322784304619], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.048287611454725266, -0.007400952745229006, -0.000641974329482764, -0.0004944770480506122, -0.008721002377569675, -6.258291978156194e-05, -0.28430190682411194, -0.001979655120521784], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'AUC = {auc_score}')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "A", "UC", " =", " {", "auc", "_", "score", "}", "')", "\n"], "logprobs": [-0.033874429762363434, -0.02297310158610344, -0.009091763757169247, -5.722029527532868e-06, -0.0014976962702348828, -0.001388300908729434, -8.880697714630514e-05, -0.049191489815711975, -0.7394075393676758, -1.2023866176605225, -0.2913326323032379, -0.2632547914981842, -0.20399479568004608, -0.0019312318181619048, -0.7699053883552551, -0.014961295761168003, -0.06071572005748749, -0.0022278032265603542, -2.7656173188006505e-05, -1.0770248174667358, -0.004508924670517445, -0.8264393210411072], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=\"ROC curve (AUC = %0.4f)\" % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "\"", "R", "OC", " curve", " (", "A", "UC", " =", " %", "0", ".", "4", "f", ")\"", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.02042989619076252, -0.010418551042675972, -0.0056475368328392506, -1.9073468138230965e-06, -0.0006706849089823663, -0.001810817513614893, -0.0007325111655518413, -0.015745246782898903, -1.034375548362732, -1.317511796951294, -1.9188499450683594, -1.472743034362793, -0.001313062384724617, -0.3303183913230896, -0.7521167397499084, -0.6506703495979309, -0.0027998790610581636, -0.32431909441947937, -0.10292429476976395, -0.004492666106671095, -0.0007611000328324735, -0.3342011868953705, -3.576214658096433e-05, -0.0055577997118234634, -0.0012325793504714966, -0.04117414355278015, -1.1324817933200393e-05, -0.004531353246420622, -3.659658250398934e-05, -0.04365801066160202, -0.022932441905140877], "finish_reason": "stop"}, {"text": "axis([0, 1, 0, 1])", "tokens": ["axis", "([", "0", ",", " ", "1", ",", " ", "0", ",", " ", "1", "])", "\n"], "logprobs": [-3.021221160888672, -0.058862026780843735, -0.03267545998096466, -0.008175479248166084, -0.003005632432177663, -0.003246990730985999, -0.0025713734794408083, -0.00020621081057470292, -8.511180931236595e-05, -0.0001677133986959234, -0.00013410145766101778, -8.761498611420393e-05, -0.007630369160324335, -0.009590031579136848], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00011526874004630372, -7.271740287251305e-06, -0.0004914983292110264, -0.0002015625941567123, -0.0003200257197022438, -0.001927424455061555, -0.00011967896716669202, -0.001931350794620812, -0.003138143103569746], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03913436084985733, -0.0006590101984329522, -0.054888851940631866, -0.010093480348587036, -0.03990486264228821, -0.0007564543629996479, -0.020485958084464073, -0.00829182006418705, -0.014362412504851818], "finish_reason": "stop"}, {"text": "legend(loc=\"lower right\")", "tokens": ["legend", "(", "loc", "=", "\"", "lower", " right", "\"", ")", "\n"], "logprobs": [-0.053445909172296524, -0.31442388892173767, -0.0033327771816402674, -1.3613684177398682, -0.8870510458946228, -0.5207801461219788, -0.05421280860900879, -7.652943895664066e-05, -0.03944176062941551, -0.02160758338868618], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|># coding: utf-8", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "#", " coding", ":", " utf", "-", "8", "\n"], "logprobs": [-0.01590646803379059, -0.0011953121284022927, -0.00587332621216774, -0.9857366681098938, -2.3841855067985307e-07, -3.6954811548639555e-06, -0.00020382710499688983, -0.00014244495832826942, -0.07713590562343597, -0.928362250328064, -2.5431714057922363, -0.3577635884284973, -0.09498091042041779, -0.012459300458431244, -0.00015639036428183317, -0.0010384886991232634], "finish_reason": "stop"}], "metrics": {"energy": 390.3809523200991, "energy_per_token": 1.5369328831499964, "time": 16.368889, "time_per_token": 0.06444444488188976}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -0.17957919836044312, -0.0004731489170808345, -0.00982366781681776, -0.013597368262708187, -0.08335768431425095, -2.145764938177308e-06, -3.45700973412022e-05, -0.02019907534122467, -0.016435477882623672, -4.458328112377785e-05, -0.007441657595336437, -0.2136436551809311, -0.11206714808940887, -1.1920922133867862e-06, -4.529942543740617e-06, -0.001563875237479806, -0.2299562245607376, -0.03836200013756752, -0.08873428404331207, -0.0179420318454504], "finish_reason": "stop"}, {"text": " keras.Sequential()", "tokens": [" k", "eras", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -2.067887783050537, -0.01404026709496975], "finish_reason": "stop"}, {"text": "compile(", "tokens": ["compile", "(", "\n"], "logprobs": [-0.0013191340258345008, -0.0017454879125580192, -1.8542592525482178], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, batch_size=25, verbose=0, shuffle=True, epochs=20)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " batch", "_", "size", "=", "2", "5", ",", " verbose", "=", "0", ",", " shuffle", "=", "True", ",", " epochs", "=", "2", "0", ")", "\n"], "logprobs": [-0.0018646011594682932, -0.0001668790791882202, -0.01931384764611721, -0.039781033992767334, -0.00016366096679121256, -0.0005339150666259229, -0.019415687769651413, -0.004038156475871801, -1.6212332411669195e-05, -0.020655058324337006, -2.249934196472168, -8.546940807718784e-05, -3.433168603805825e-05, -0.0015413797227665782, -2.4797253608703613, -0.6380609273910522, -2.062786817550659, -2.127373218536377, -0.0015630420530214906, -0.1016504168510437, -0.6172971725463867, -3.12509822845459, -0.0008623456815257668, -0.1520826518535614, -0.4407809376716614, -0.12488403916358948, -0.00032026408007368445, -2.182107925415039, -0.3236631453037262, -0.377681165933609, -0.0053148637525737286], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.010887622833251953, -0.0007102350937202573, -0.0006311332108452916, -0.030675014480948448, -0.0007969540893100202, -0.00030560590676032007, -0.0008530553313903511, -0.005441733635962009, -0.05087263509631157], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred, pos_label=1.0)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ".", "0", ")", "\n"], "logprobs": [-0.0037600549403578043, -0.013883916661143303, -0.001091480371542275, -0.1920124888420105, -0.001527215470559895, -0.006280329078435898, -3.576278118089249e-07, -2.396077979938127e-05, -7.510157047363464e-06, -0.00017295771976932883, -0.3549691140651703, -0.002291911980137229, -0.007334567606449127, -0.10927236080169678, -0.005367392208427191, -6.12716976320371e-05, -8.332382276421413e-05, -1.561039686203003, -0.07798134535551071, -0.0015561387408524752, -0.00025960413040593266, -0.013238390907645226, -0.038443222641944885, -2.525904893875122, -0.13018496334552765, -0.23171325027942657, -0.015918083488941193], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0033056873362511396, -7.033323527139146e-06, -0.0003070359816774726, -0.0008208957733586431, -3.4570634852570947e-06, -0.004265971481800079, -0.001566374790854752, -0.0005000770906917751, -0.0008201810996979475, -0.003987576812505722], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04757526144385338, -0.007458104752004147, -0.0005824061809107661, -0.0006165986997075379, -0.011167521588504314, -7.235741941258311e-05, -0.2775297164916992, -0.0018328310688957572], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f\"AUC: {auc_score:.2f}\")", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "\"", "A", "UC", ":", " {", "auc", "_", "score", ":", ".", "2", "f", "}\"", ")", "\n"], "logprobs": [-0.03354698419570923, -0.018300026655197144, -0.00743089010939002, -5.483612312673358e-06, -0.0012041230220347643, -0.0015126940561458468, -0.00010907054820563644, -0.04896528273820877, -0.7256314158439636, -1.1007972955703735, -0.29240795969963074, -1.5663822889328003, -0.22861447930335999, -0.0033207768574357033, -2.2432689666748047, -0.03064090944826603, -0.0605742447078228, -0.00255437009036541, -3.516612196108326e-05, -0.45392683148384094, -0.02296634577214718, -0.5221843123435974, -0.00565334502607584, -0.003854228649288416, -0.02279600314795971, -0.7189267873764038], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, '.')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " '", ".", "')", "\n"], "logprobs": [-0.024314304813742638, -0.008199009113013744, -0.006261374801397324, -1.7881377516459906e-06, -0.000586695212405175, -0.0015787529991939664, -0.0006400682032108307, -0.020012488588690758, -2.0805325508117676, -1.6561191082000732, -1.4763681888580322, -0.06153009086847305], "finish_reason": "stop"}, {"text": "plot([0, 1], [0, 1], 'k--', label='ROC Curve')", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " '", "k", "--", "'", ",", " label", "='", "R", "OC", " Cur", "ve", "')", "\n"], "logprobs": [-1.0849835872650146, -1.6899017095565796, -0.013463061302900314, -0.003916570916771889, -0.05997972935438156, -0.09007461369037628, -0.005074953194707632, -0.00015317220822907984, -0.012918472290039062, -0.007425328716635704, -0.009967435151338577, -0.0030043248552829027, -0.016967490315437317, -0.006255569867789745, -0.00028546550311148167, -0.22773019969463348, -0.16656480729579926, -0.39001670479774475, -0.7580952644348145, -0.0005198557628318667, -0.49520406126976013, -0.029535163193941116, -0.7145103216171265, -0.0019984529353678226, -1.9404767751693726, -0.0005082983989268541, -0.024617688730359077, -0.061983078718185425], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.0001411338453181088, -7.152531907195225e-06, -0.0005718026659451425, -0.00019441144831944257, -0.00028546550311148167, -0.0021541742607951164, -0.0001397035230183974, -0.002213291823863983, -0.003190429415553808], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03035334125161171, -0.000736918649636209, -0.04531589522957802, -0.00753004290163517, -0.05290096253156662, -0.0007404923089779913, -0.021396754309535027, -0.008712375536561012, -0.01238229963928461], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.06396105885505676, -1.1681479215621948, -0.05436207726597786], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.016796240583062172, -0.001178642618469894, -0.006354839541018009, -0.9793820381164551], "finish_reason": "stop"}], "metrics": {"energy": 363.8196707715989, "energy_per_token": 1.6169763145404397, "time": 14.896926, "time_per_token": 0.06620856}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=1234)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", "2", "3", "4", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -0.17957919836044312, -0.0004731489170808345, -0.00982366781681776, -0.013597368262708187, -0.08335768431425095, -2.145764938177308e-06, -3.45700973412022e-05, -0.02019907534122467, -0.016435477882623672, -4.458328112377785e-05, -0.007441657595336437, -0.2136436551809311, -0.11206714808940887, -1.1920922133867862e-06, -4.529942543740617e-06, -0.001563875237479806, -2.4995808601379395, -1.3102619647979736, -0.07180436700582504, -0.48483899235725403, -0.23952212929725647, -0.021946894004940987], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -0.1716839075088501, -0.11205638945102692], "finish_reason": "stop"}, {"text": "compile(optimizer=keras.optimizers.SGD(lr=0.01), loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "0", "1", ")", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.001042775809764862, -0.0020857739727944136, -1.7427022457122803, -1.966933996300213e-05, -1.9253257513046265, -0.21947012841701508, -6.854299135738984e-05, -0.0015766106080263853, -0.017470283433794975, -0.00025245340657420456, -0.026350142434239388, -0.0010337253334000707, -0.03369291499257088, -0.8752375245094299, -0.005182878579944372, -0.10295484215021133, -0.0025593640748411417, -0.38521790504455566, -0.5115578770637512, -0.006690955720841885, -0.0003518439189065248, -0.1382395476102829, -0.2735351622104645, -0.016495751217007637, -0.0007856381707824767, -0.00030393750057555735, -5.6265202147187665e-05, -0.1177675649523735, -0.00350812915712595], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0, batch_size=10, epochs=10)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ",", " batch", "_", "size", "=", "1", "0", ",", " epochs", "=", "1", "0", ")", "\n"], "logprobs": [-0.0015555436257272959, -0.0001734344696160406, -0.02073294296860695, -0.04196605458855629, -0.00022754464589525014, -0.0005178302526473999, -0.019893648102879524, -0.0038818970788270235, -1.537788011773955e-05, -0.02342991903424263, -0.9387582540512085, -0.002654007636010647, -0.07950197160243988, -0.6409024596214294, -1.6212985515594482, -0.00015138434537220746, -1.1444026313256472e-05, -0.0005548844928853214, -0.7568700313568115, -1.4746427536010742, -0.4154282510280609, -0.09570059180259705, -0.00024577934527769685, -0.5498912930488586, -0.10661633312702179, -0.6296363472938538, -0.00706886313855648], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.01027543842792511, -0.0005932478234171867, -0.0006600823253393173, -0.02895965427160263, -0.000648883986286819, -0.00032026408007368445, -0.0007418026216328144, -0.0065583232790231705, -0.05233026295900345], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.004334934521466494, -0.012718986719846725, -0.0011857867939397693, -0.16729296743869781, -0.0014417502097785473, -0.005129154305905104, -3.576278118089249e-07, -2.3483953555114567e-05, -6.794906312279636e-06, -0.00019608005823101848, -0.29397180676460266, -0.002926830668002367, -0.005135796032845974, -0.09077724814414978, -0.004330068361014128, -4.8040190449682996e-05, -8.427741704508662e-05, -0.23903875052928925, -0.015637515112757683], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.002884990768507123, -7.033323527139146e-06, -0.00028618055512197316, -0.0008848565630614758, -3.933898824470816e-06, -0.004731055814772844, -0.0016795588890090585, -0.00039760314393788576, -0.000773369160015136, -0.004109153989702463], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(5, 5))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "5", ",", " ", "5", "))", "\n"], "logprobs": [-0.04009281471371651, -0.006868088152259588, -0.0006171943969093263, -0.0005410637822933495, -0.008316174149513245, -6.460934673668817e-05, -1.4388461112976074, -0.6340600252151489, -0.00034528967808000743, -0.016612298786640167, -1.6662346124649048, -0.020980684086680412, -0.09479627758264542, -0.36503463983535767, -0.043049126863479614, -0.005296958610415459], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, marker='o', color='#1f77b4', label='ROC curve')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " marker", "='", "o", "'", ",", " color", "='", "#", "1", "f", "7", "7", "b", "4", "'", ",", " label", "='", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03588712215423584, -0.017789218574762344, -0.008677395060658455, -4.887569048150908e-06, -0.0011131525970995426, -0.001683367183431983, -0.0001431601122021675, -0.054688986390829086, -1.920658826828003, -0.005189519841223955, -0.5030182003974915, -0.5505436062812805, -0.0006282739923335612, -1.174351692199707, -0.005252134520560503, -1.9453762769699097, -1.092018961906433, -0.14769120514392853, -0.00018523407925385982, -0.0004325169720686972, -0.0019369428046047688, -8.344646857949556e-07, -0.02363670989871025, -4.815939246327616e-05, -0.11468803137540817, -0.06016630306839943, -0.5294901132583618, -0.0015055523253977299, -0.20418240129947662, -0.48244404792785645, -0.3185119926929474], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, color='#1f77b4', linewidth:1.0, label='ROC curve (AUC = %0.4f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " color", "='", "#", "1", "f", "7", "7", "b", "4", "'", ",", " linewidth", ":", "1", ".", "0", ",", " label", "='", "R", "OC", " curve", " (", "A", "UC", " =", " %", "0", ".", "4", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.022519225254654884, -0.008298794738948345, -0.006628076080232859, -1.9073468138230965e-06, -0.0007340597221627831, -0.0014148473273962736, -0.0006165986997075379, -0.018733009696006775, -1.9652245044708252, -0.019095752388238907, -0.8692578077316284, -0.9479352831840515, -0.1508055329322815, -0.0001137191939051263, -0.00030298411729745567, -0.000726316764485091, -5.960462772236497e-07, -0.005393121857196093, -3.099393507000059e-05, -0.7054352760314941, -0.5925231575965881, -2.2406678199768066, -1.219834804534912, -0.5334833860397339, -0.011050336994230747, -0.13219206035137177, -0.12333609163761139, -0.5842362642288208, -0.001757030957378447, -0.29428887367248535, -1.3191452026367188, -1.389633297920227, -0.0024429496843367815, -0.14461253583431244, -0.043923184275627136, -0.03961307182908058, -0.00042226933874189854, -0.6235103011131287, -0.00014923889830242842, -0.004937123507261276, -0.021127641201019287, -0.056176453828811646, -0.00011455356434453279, -0.01798160746693611, -0.0003181189822498709, -0.01563188247382641, -0.014260878786444664], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.8931189775466919, -0.10877219587564468, -0.31111660599708557, -0.040179163217544556, -0.0402967631816864, -0.0008756855386309326, -0.026322973892092705, -0.0536189079284668, -0.03928004950284958], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.000125281119835563, -8.106198947643861e-06, -0.0005461869877763093, -0.00019107422849629074, -0.0002544794406276196, -0.0021454906091094017, -0.00010942813969450071, -0.0018774517811834812, -0.0029230271466076374], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03421962633728981, -0.0006781900301575661, -0.06533945351839066, -0.008503655903041363, -0.05302024260163307, -0.0007178590167313814, -0.02306315489113331, -0.008276568725705147, -0.01328438799828291], "finish_reason": "stop"}, {"text": "legend(loc='best')", "tokens": ["legend", "(", "loc", "='", "best", "')", "\n"], "logprobs": [-0.05441739782691002, -0.2889171242713928, -0.0021275284234434366, -0.3354817032814026, -1.7214664220809937, -0.04413057118654251, -0.037989310920238495], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.016336265951395035, -0.0011457790387794375, -0.005987682845443487, -0.9969584941864014], "finish_reason": "stop"}], "metrics": {"energy": 368.2647338905336, "energy_per_token": 1.3440318755128964, "time": 15.963445, "time_per_token": 0.05826074817518248}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -0.17957919836044312, -0.0004731489170808345, -0.00982366781681776, -0.013597368262708187, -0.08335768431425095, -2.145764938177308e-06, -3.45700973412022e-05, -0.02019907534122467, -0.016435477882623672, -4.458328112377785e-05, -0.007441657595336437, -0.2136436551809311, -0.11206714808940887, -1.1920922133867862e-06, -4.529942543740617e-06, -0.001563875237479806, -0.2299562245607376, -0.03836200013756752, -0.08873428404331207, -0.0179420318454504], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.7580927014350891, -0.006006049923598766], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.1))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "1", "))", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -0.38366031646728516, -0.17962422966957092, -0.02072453685104847, -0.0028080816846340895, -0.0002213471452705562, -0.00016604475968051702, -0.0004001055203843862, -0.002999095479026437, -0.06908117979764938, -1.4074056148529053, -0.039052508771419525, -7.354942499659956e-05, -0.00047708096099086106, -0.009705026634037495, -0.00017796363681554794, -0.026356644928455353, -0.0004180987598374486, -0.017632165923714638, -0.9099560976028442, -0.0002908283786382526, -2.586808113846928e-05, -0.0032219188287854195, -0.05686412379145622, -0.0011592342052608728, -1.1295533180236816, -0.14531953632831573, -0.0027331875171512365], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=5, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "5", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0019259967375546694, -0.000205018965061754, -0.01911224238574505, -0.03456861898303032, -0.00027259447961114347, -0.0004967409186065197, -0.018935510888695717, -0.002838275395333767, -1.6093124941107817e-05, -0.017989685758948326, -0.7656529545783997, -0.0008142255246639252, -1.6998658180236816, -0.4600869417190552, -0.05000656098127365, -0.0013703251024708152, -0.1233639121055603, -0.08872577548027039, -0.011116121895611286], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.009057151153683662, -0.0005955114611424506, -0.0005389191792346537, -0.034558024257421494, -0.0006762839620932937, -0.00036745471879839897, -0.0007233387441374362, -0.005382687784731388, -0.04505188763141632], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.0037188436836004257, -0.017215697094798088, -0.0013605633284896612, -0.18125499784946442, -0.0013325868640094995, -0.006451611872762442, -3.576278118089249e-07, -2.3245540432981215e-05, -6.9141146923357155e-06, -0.0001716466504149139, -0.2984376549720764, -0.00296522188000381, -0.006575140170753002, -0.10854131728410721, -0.004918855614960194, -6.663577369181439e-05, -8.5588610090781e-05, -1.7094240188598633, -0.08107086271047592, -0.0016930069541558623, -0.00025340684805996716, -0.013957745395600796, -0.03494465723633766, -0.24915945529937744, -0.015668967738747597], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0032215621322393417, -6.198863957251888e-06, -0.00023779425828251988, -0.0009956170106306672, -3.3378546504536644e-06, -0.003899709088727832, -0.0022166224662214518, -0.0005245024804025888, -0.0007532381569035351, -0.003850666107609868], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(10, 6))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "0", ",", " ", "6", "))", "\n"], "logprobs": [-0.04443324729800224, -0.006857432425022125, -0.0005905076395720243, -0.0006584145012311637, -0.007353383116424084, -6.103329360485077e-05, -1.3769241571426392, -0.48078930377960205, -0.00030727434204891324, -0.01634400710463524, -1.402564525604248, -0.48549821972846985, -0.0033877857495099306, -0.09804686158895493, -1.8350740671157837, -0.031241681426763535, -0.00316226645372808], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, marker='o', label='AUC = {:0.2f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " marker", "='", "o", "'", ",", " label", "='", "A", "UC", " =", " {:", "0", ".", "2", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.026955468580126762, -0.015878308564424515, -0.0071962205693125725, -5.722029527532868e-06, -0.0012391278287395835, -0.001482460182160139, -9.345571743324399e-05, -0.046766623854637146, -1.8662694692611694, -0.004453265108168125, -0.5337111949920654, -0.5717556476593018, -0.0007600279641337693, -0.7456513047218323, -0.2219911366701126, -1.3326287269592285, -0.007161187008023262, -0.2598874866962433, -0.4096439480781555, -0.9431028962135315, -0.002815451705828309, -0.2974700629711151, -0.0010873125866055489, -0.005435094237327576, -0.0003331344632897526, -0.0004236992390360683, -0.00013636612857226282, -0.006100249011069536, -0.0010788579238578677, -2.0146166207268834e-05, -0.019589528441429138, -0.3659248948097229], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'AUC = {auc_score:.2f}')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "A", "UC", " =", " {", "auc", "_", "score", ":", ".", "2", "f", "}", "')", "\n"], "logprobs": [-0.02512664906680584, -0.00801442563533783, -0.0053848219104111195, -1.7881377516459906e-06, -0.0006749735912308097, -0.0019640696700662374, -0.0006412595394067466, -0.017267368733882904, -1.0145307779312134, -1.4238970279693604, -0.19760192930698395, -0.22921666502952576, -0.22578155994415283, -0.0020830377470701933, -0.8308415412902832, -0.022603141143918037, -0.06256352365016937, -0.0033422820270061493, -3.194758028257638e-05, -0.32412782311439514, -0.037215836346149445, -0.7018924355506897, -0.004301462322473526, -0.02266211062669754, -0.006873652338981628, -0.0650520846247673], "finish_reason": "stop"}, {"text": "plot(thresholds, tpr, color='red', linestyle='-', linewidth=5, label='SGD')", "tokens": ["plot", "(", "th", "resh", "olds", ",", " t", "pr", ",", " color", "='", "red", "'", ",", " lin", "estyle", "='", "-'", ",", " linewidth", "=", "5", ",", " label", "='", "S", "GD", "')", "\n"], "logprobs": [-1.0534474849700928, -0.18682114779949188, -0.9785084128379822, -7.557583012385294e-05, -0.00010871296399272978, -0.04676298424601555, -0.082405686378479, -0.0004991239402443171, -0.01817571558058262, -3.2224626541137695, -0.01870984397828579, -1.0358471870422363, -0.06847389042377472, -0.0001728385395836085, -1.8218424320220947, -8.11782301752828e-05, -0.002224829513579607, -1.3995150327682495, -1.9788545614574105e-05, -0.6966217160224915, -0.006560809910297394, -3.088165044784546, -0.02533622831106186, -0.5664159655570984, -0.023594679310917854, -3.005847692489624, -0.5956740379333496, -0.6361150741577148, -0.04874652251601219], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.0001387499796692282, -7.271740287251305e-06, -0.0006018257699906826, -0.00017152745567727834, -0.0003070359816774726, -0.0018704315880313516, -0.00012659224739763886, -0.0018355678766965866, -0.0029709271620959044], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03725959733128548, -0.0006799769471399486, -0.06296835839748383, -0.011492361314594746, -0.0601823553442955, -0.000679500459227711, -0.02227909304201603, -0.009522846899926662, -0.012380298227071762], "finish_reason": "stop"}, {"text": "legend(loc=4)", "tokens": ["legend", "(", "loc", "=", "4", ")", "\n"], "logprobs": [-0.048269663006067276, -0.33184754848480225, -0.0026916961651295424, -1.354318618774414, -0.7478355765342712, -0.047641415148973465, -0.2002098262310028], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.017978211864829063, -0.0011648305226117373, -0.0060361470095813274, -0.9447327852249146], "finish_reason": "stop"}], "metrics": {"energy": 357.7857642211914, "energy_per_token": 1.310570564912789, "time": 15.745965, "time_per_token": 0.057677527472527475}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -1.6911146640777588], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.7580927014350891, -0.006006049923598766], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss='binary_crossentropy', metrics=['accuracy'])", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -1.711421012878418, -1.8715683836489916e-05, -0.18487368524074554, -0.3263826072216034, -0.00014602071314584464, -0.00031859567388892174, -0.0007233387441374362, -0.025845173746347427, -0.06754906475543976, -0.010681597515940666, -0.001914693508297205, -0.00039748396375216544, -9.619726915843785e-05, -1.4730603694915771, -0.09898591786623001, -0.3640090823173523, -0.10591831058263779, -0.22023864090442657, -0.09309088438749313, -0.0030790797900408506], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.001587560516782105, -0.0001740304142003879, -0.021264657378196716, -0.040321268141269684, -0.0002302858338225633, -0.00047672350774519145, -0.01812806911766529, -0.00264711189083755, -1.5616295058862306e-05, -0.02109682746231556, -0.9739142656326294, -0.002400376135483384, -0.08469164371490479, -0.7328194379806519, -0.009072390384972095], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.011155379004776478, -0.0005172345554456115, -0.0005029367166571319, -0.036299798637628555, -0.000676998752169311, -0.000316212244797498, -0.00087878224439919, -0.0050785113126039505, -0.051920533180236816], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.004013935569673777, -0.011789645068347454, -0.001258772797882557, -0.1676613837480545, -0.0014721043407917023, -0.0056321267038583755, -3.576278118089249e-07, -2.3603161025675945e-05, -7.748573807475623e-06, -0.00021336186910048127, -0.25501036643981934, -0.002650916576385498, -0.005979032255709171, -0.09571066498756409, -0.004608604591339827, -5.98412734689191e-05, -8.797258487902582e-05, -0.280351459980011, -0.019587308168411255], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.003423308255150914, -7.033323527139146e-06, -0.0003413571394048631, -0.0009053422254510224, -3.2186455882765586e-06, -0.0047689033672213554, -0.0015115038258954883, -0.00045193947153165936, -0.0006366133457049727, -0.004040293861180544], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(8, 6))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "8", ",", " ", "6", "))", "\n"], "logprobs": [-0.04371267184615135, -0.00641311751678586, -0.0006924853660166264, -0.0006598440813831985, -0.010076722130179405, -6.532455881824717e-05, -1.4440662860870361, -0.4711146652698517, -0.00029523781267926097, -0.018094822764396667, -1.0873337984085083, -0.004874607548117638, -0.07654784619808197, -0.5803077816963196, -0.04851249232888222, -0.003629883285611868], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, linewidth=2.0, label='AUC = {:0.4f}'.format(auc_score))  # Plot the curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " linewidth", "=", "2", ".", "0", ",", " label", "='", "A", "UC", " =", " {:", "0", ".", "4", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "  ", "#", " Plot", " the", " curve", "\n"], "logprobs": [-0.03413460776209831, -0.016179101541638374, -0.0074713570065796375, -4.172316494077677e-06, -0.0014917447697371244, -0.0013719918206334114, -0.00010549465514486656, -0.054394252598285675, -1.5858891010284424, -0.007061169017106295, -0.36419427394866943, -0.9644637703895569, -0.08583841472864151, -0.11390136927366257, -0.5407870411872864, -0.3487119972705841, -1.1461718082427979, -0.006119443569332361, -0.18923118710517883, -0.6340152025222778, -0.6844553351402283, -0.00420008972287178, -0.6890019774436951, -0.004490530118346214, -0.004627471789717674, -0.00034505134681239724, -0.00044467096449807286, -0.00011359999916749075, -0.004669120069593191, -0.0014154425589367747, -2.4437606043647975e-05, -0.03300907462835312, -1.1886532306671143, -0.0001497156627010554, -0.11387945711612701, -0.19379232823848724, -2.404754877090454, -0.0686219334602356], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, c='#334499', label='AUC = %.3f' % auc_score, linewidth=5)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " c", "='", "#", "3", "3", "4", "4", "9", "9", "'", ",", " label", "='", "A", "UC", " =", " %", ".", "3", "f", "'", " %", " a", "uc", "_", "score", ",", " linewidth", "=", "5", ")", "\n"], "logprobs": [-0.028371648862957954, -0.006656378507614136, -0.006433253176510334, -2.0265558760002023e-06, -0.0007474012672901154, -0.001553758280351758, -0.0005909841856919229, -0.01811249926686287, -3.5449905395507812, -0.05366409942507744, -1.846203327178955, -2.924386501312256, -1.173414707183838, -3.5876355171203613, -1.0053627490997314, -2.375913143157959, -0.14061830937862396, -0.5402886271476746, -0.0002233732520835474, -0.5918448567390442, -0.18218578398227692, -0.8402560949325562, -0.007145445328205824, -0.30612173676490784, -1.249617576599121, -1.2598202228546143, -0.6535283923149109, -0.0009085579658858478, -0.012017939239740372, -0.034868448972702026, -0.03563752770423889, -2.4676019165781327e-05, -0.0031180595979094505, -2.634490556374658e-05, -3.0006697177886963, -0.20133662223815918, -0.0028070115949958563, -1.6628168821334839, -0.09288807958364487, -0.059157468378543854], "finish_reason": "stop"}, {"text": "plot(thresholds, tpr, marker='o', linewidth=0, markersize=5)", "tokens": ["plot", "(", "th", "resh", "olds", ",", " t", "pr", ",", " marker", "='", "o", "'", ",", " linewidth", "=", "0", ",", " markers", "ize", "=", "5", ")", "\n"], "logprobs": [-0.9225829839706421, -0.1821141541004181, -0.8092782497406006, -0.0001102625101339072, -9.762764238985255e-05, -0.04901057481765747, -0.09896011650562286, -0.0005312938592396677, -0.016198571771383286, -1.2934809923171997, -0.002849924610927701, -0.8523030281066895, -0.33035367727279663, -0.00041500062798149884, -2.566218376159668, -0.0013363964390009642, -1.2531429529190063, -0.7333879470825195, -1.342319369316101, -3.85038583772257e-05, -0.0004451475979294628, -0.29085129499435425, -0.4214056134223938, -0.03353269025683403], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00013529339048545808, -7.152531907195225e-06, -0.0005172345554456115, -0.00020013237372040749, -0.00029488030122593045, -0.002086249878630042, -0.00012289722508285195, -0.0017938013188540936, -0.0029998086392879486], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.034822627902030945, -0.0006170752458274364, -0.044348977506160736, -0.009247093461453915, -0.055173397064208984, -0.0008029097807593644, -0.02117222733795643, -0.008174179121851921, -0.011446870863437653], "finish_reason": "stop"}, {"text": "legend(loc='lower left', ncol=2, title='Models')", "tokens": ["legend", "(", "loc", "='", "lower", " left", "'", ",", " n", "col", "=", "2", ",", " title", "='", "Models", "')", "\n"], "logprobs": [-0.05761444941163063, -0.36333024501800537, -0.0035732248798012733, -0.3575403392314911, -0.6052810549736023, -1.9807864427566528, -1.2247241735458374, -0.005459755193442106, -0.7655518054962158, -0.020018797367811203, -0.0024215441662818193, -0.07767575234174728, -0.42606601119041443, -1.6935170888900757, -0.08084791153669357, -5.101574420928955, -0.03313351795077324, -0.02227477915585041], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>import tensorflow as tf", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "import", " tensor", "flow", " as", " tf", "\n"], "logprobs": [-0.01887257769703865, -0.001053969725035131, -0.006556191481649876, -0.8492315411567688, -2.3841855067985307e-07, -3.814689989667386e-06, -0.00023707917716819793, -0.00014554394874721766, -0.08378170430660248, -1.08993399143219, -1.5697252750396729, -0.000545472139492631, -0.03903508186340332, -0.0007599088130518794, -0.004492547363042831], "finish_reason": "stop"}], "metrics": {"energy": 372.98723992919923, "energy_per_token": 1.3662536261142828, "time": 15.778711, "time_per_token": 0.05779747619047619}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -0.17957919836044312, -0.0004731489170808345, -0.00982366781681776, -0.013597368262708187, -0.08335768431425095, -2.145764938177308e-06, -3.45700973412022e-05, -0.02019907534122467, -0.016435477882623672, -4.458328112377785e-05, -0.007441657595336437, -1.909854531288147, -0.028069401159882545], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -0.1716839075088501, -0.11205638945102692], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(lr=0.1), metrics=[\"accuracy\"])", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "lr", "=", "0", ".", "1", ")", ",", " metrics", "=[", "\"", "accuracy", "\"", "])", "\n"], "logprobs": [-0.001042775809764862, -0.0020857739727944136, -0.4598385989665985, -0.17975978553295135, -0.019545691087841988, -0.0033800634555518627, -0.00026663561584427953, -0.00017641419253777713, -0.0004804172203876078, -0.002948225475847721, -0.07429319620132446, -1.267440676689148, -0.047670286148786545, -9.357491217087954e-05, -0.0004704084130935371, -0.008713912218809128, -0.0001805857609724626, -0.02767094038426876, -0.00043406602344475687, -0.013976319693028927, -0.5662774443626404, -0.004044330678880215, -0.10539156943559647, -0.0021121830213814974, -1.2277350425720215, -1.994706153869629, -0.004122212994843721, -0.22928652167320251, -2.8487162590026855, -0.12002663314342499, -0.12671875953674316, -0.00027164106722921133, -0.054711222648620605, -0.005767726805061102], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=5, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "5", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0017700018361210823, -0.00019167017308063805, -0.02191925421357155, -0.03360415995121002, -0.00022206225548870862, -0.0004673104267567396, -0.017589295282959938, -0.00283946399576962, -1.680836794548668e-05, -0.018622323870658875, -0.7369629740715027, -0.0007309625507332385, -1.701615810394287, -0.48763716220855713, -0.06513451784849167, -0.0012738931691274047, -0.14001575112342834, -0.08424685895442963, -0.011432846076786518], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.010725589469075203, -0.0006783091812394559, -0.0004769618099089712, -0.02433047629892826, -0.0007353700930252671, -0.00036769305006600916, -0.0008108903421089053, -0.006382912863045931, -0.05237529054284096], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ")", "\n"], "logprobs": [-0.003897215472534299, -0.012781249359250069, -0.0008746135863475502, -0.1543869525194168, -0.0014397265622392297, -0.006964455358684063, -3.576278118089249e-07, -2.4437606043647975e-05, -7.390948667307384e-06, -0.00019298121333122253, -0.36295169591903687, -0.001977156847715378, -0.007580798584967852, -0.09435021132230759, -0.004016547463834286, -5.543078441405669e-05, -9.285972191719338e-05, -0.2522609829902649, -0.014410472474992275], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.003131369361653924, -6.556489552167477e-06, -0.00030012393835932016, -0.0009314250783063471, -3.3378546504536644e-06, -0.004589500371366739, -0.0023054706398397684, -0.0004037995240651071, -0.0007644353318028152, -0.004112003371119499], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(8, 6))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "8", ",", " ", "6", "))", "\n"], "logprobs": [-0.043702058494091034, -0.0072230868972837925, -0.0007128558354452252, -0.0006485265912488103, -0.010955541394650936, -7.152301259338856e-05, -1.2967777252197266, -0.6424012780189514, -0.00029202012228779495, -0.01999858394265175, -1.1228941679000854, -0.004663306288421154, -0.07160308957099915, -0.5716254711151123, -0.04686684533953667, -0.0031311316415667534], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=\"AUC: {:.3f}\".format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "\"", "A", "UC", ":", " {:", ".", "3", "f", "}\"", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.028031961992383003, -0.017899995669722557, -0.009870648384094238, -5.483612312673358e-06, -0.0011342290090397, -0.0017394188325852156, -9.655486064730212e-05, -0.05429309234023094, -0.7512226104736328, -1.1481175422668457, -1.3190197944641113, -0.62221759557724, -0.00369437737390399, -3.247028112411499, -0.18569092452526093, -0.6760859489440918, -1.7413580417633057, -0.0026679181028157473, -0.0024995533749461174, -0.0003880701260641217, -0.0003297977091278881, -7.772143726469949e-05, -0.0026164366863667965, -0.0012725834967568517, -2.6225699912174605e-05, -0.014444665051996708, -0.5838308930397034], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'AUC = {auc_score}')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "A", "UC", " =", " {", "auc", "_", "score", "}", "')", "\n"], "logprobs": [-0.02773424983024597, -0.008257533423602581, -0.004768191371113062, -1.7881377516459906e-06, -0.0006762839620932937, -0.001404966926202178, -0.0006311332108452916, -0.01869264431297779, -0.9713210463523865, -1.2360618114471436, -0.20431526005268097, -0.20602823793888092, -0.20878998935222626, -0.002078993245959282, -0.9070909023284912, -0.019491681829094887, -0.0748538225889206, -0.0030728999990969896, -3.0278701160568744e-05, -1.36351478099823, -0.009395903907716274, -0.058245573192834854], "finish_reason": "stop"}, {"text": "plot(thresholds, tpr, '-o', label='ROC')", "tokens": ["plot", "(", "th", "resh", "olds", ",", " t", "pr", ",", " '-", "o", "'", ",", " label", "='", "R", "OC", "')", "\n"], "logprobs": [-0.9965287446975708, -0.23204658925533295, -0.9307257533073425, -9.679325739853084e-05, -0.00010132275929208845, -0.05719032883644104, -0.09366234391927719, -0.0005421360838226974, -0.01976287178695202, -3.942539691925049, -1.1691622734069824, -0.35007885098457336, -0.00030357998912222683, -0.3404798209667206, -0.05352828651666641, -2.161074638366699, -0.008007093332707882, -1.3866088390350342, -0.03749191015958786], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00016616393986623734, -8.940656698541716e-06, -0.0005896736984141171, -0.00014304091746453196, -0.0002954761730507016, -0.0019201666582375765, -0.00013219437096267939, -0.0018463960150256753, -0.0029277815483510494], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.036276232451200485, -0.0005845506675541401, -0.045649874955415726, -0.009427670389413834, -0.057163871824741364, -0.000695344409905374, -0.027230095118284225, -0.008137524127960205, -0.012606574222445488], "finish_reason": "stop"}, {"text": "legend(loc=4)", "tokens": ["legend", "(", "loc", "=", "4", ")", "\n"], "logprobs": [-0.05930925905704498, -0.323750764131546, -0.0025160820223391056, -1.3605035543441772, -0.7137863636016846, -0.03974563255906105, -0.19091542065143585], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.015734568238258362, -0.0011013639159500599, -0.005894065368920565, -0.8682435750961304], "finish_reason": "stop"}], "metrics": {"energy": 387.46788449859633, "energy_per_token": 1.5945180432041002, "time": 15.549821, "time_per_token": 0.0639910329218107}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -0.20662526786327362, -0.0006124289939180017, -0.021198369562625885, -0.00964576005935669, -0.08393506705760956, -1.6689286894688848e-06, -4.565611743601039e-05, -0.022526217624545097, -0.018831515684723854, -4.8874615458771586e-05, -0.007649179082363844, -0.18480026721954346, -0.1227041557431221, -1.5497195136049413e-06, -4.410734163684538e-06, -0.001611721352674067, -0.22465351223945618, -0.035885170102119446, -0.11691216379404068, -0.025658590719103813], "finish_reason": "stop"}, {"text": " keras.models.Sequential([keras.layers.Dense(units=10, activation=\"sigmoid\")])", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "([", "keras", ".", "layers", ".", "D", "ense", "(", "units", "=", "1", "0", ",", " activation", "=", "\"", "s", "igmoid", "\"", ")]", ")", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.6890829205513, -2.2464144229888916, -9.703165414975956e-05, -0.0010071687866002321, -2.9801878554280847e-05, -0.033448416739702225, -0.00022194306075107306, -0.00018249277491122484, -2.422818660736084, -0.017922712489962578, -0.32171326875686646, -2.718440532684326, -0.4062952399253845, -0.35010766983032227, -1.5252838134765625, -0.07617244124412537, -0.037490759044885635, -6.985420623095706e-05, -4.3748852476710454e-05, -0.4591437876224518, -0.0029187481850385666, -0.01308768056333065], "finish_reason": "stop"}, {"text": "compile(loss='binary_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=0.01))", "tokens": ["compile", "(", "loss", "='", "binary", "_", "cross", "entropy", "'", ",", " optimizer", "=", "keras", ".", "optim", "izers", ".", "S", "GD", "(", "learning", "_", "rate", "=", "0", ".", "0", "1", "))", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -0.38366031646728516, -0.17962422966957092, -0.02072453685104847, -0.0028080816846340895, -0.0002213471452705562, -0.00016604475968051702, -0.0004001055203843862, -0.002999095479026437, -0.06908117979764938, -1.4074056148529053, -0.039052508771419525, -7.354942499659956e-05, -0.00047708096099086106, -0.009705026634037495, -0.00017796363681554794, -0.026356644928455353, -0.0004180987598374486, -0.017632165923714638, -0.9099560976028442, -0.0002908283786382526, -2.586808113846928e-05, -0.0032219188287854195, -0.05686412379145622, -0.0011592342052608728, -0.5073876976966858, -0.4127193093299866, -0.19243259727954865, -0.0028688248712569475], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=20, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "2", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0019259967375546694, -0.000205018965061754, -0.01911224238574505, -0.03456861898303032, -0.00027259447961114347, -0.0004967409186065197, -0.018935510888695717, -0.002838275395333767, -1.6093124941107817e-05, -0.017989685758948326, -0.7656529545783997, -0.0008142255246639252, -2.2148194313049316, -0.3852090537548065, -0.491008996963501, -0.050461284816265106, -0.0010302717564627528, -0.09418347477912903, -0.0741267278790474, -0.011590051464736462], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00975437369197607, -0.0005921755800954998, -0.0006008726777508855, -0.027250859886407852, -0.0008087463211268187, -0.0004183370911050588, -0.0007965967524796724, -0.005362886469811201, -0.05121631920337677], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(y_true=Y_test, y_score=Y_pred)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "y", "_", "true", "=", "Y", "_", "test", ",", " y", "_", "score", "=", "Y", "_", "pred", ")", "\n"], "logprobs": [-0.004405436106026173, -0.01297942828387022, -0.0010278901318088174, -0.19200551509857178, -0.0015805383445695043, -0.00703915162011981, -1.1920928244535389e-07, -2.002696055569686e-05, -7.510157047363464e-06, -0.00018880968855228275, -1.195807933807373, -7.64102369430475e-05, -0.00830033142119646, -0.002402041107416153, -0.002257538726553321, -0.00020287363440729678, -0.012835740111768246, -0.11099766939878464, -0.3960172235965729, -1.0013530300057027e-05, -0.0016888416139408946, -0.0010140759404748678, -0.0025247621815651655, -0.0005031750188209116, -0.0007234578370116651, -0.27546045184135437, -0.009822960011661053], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0028691815678030252, -7.152531907195225e-06, -0.00026901919045485556, -0.0010881462367251515, -3.6954811548639555e-06, -0.003944475203752518, -0.0015069806249812245, -0.0005015069036744535, -0.0007329876534640789, -0.0038727535866200924], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04024374857544899, -0.0074676889926195145, -0.0005893162451684475, -0.0005392765742726624, -0.0083563681691885, -7.235741941258311e-05, -0.2682100832462311, -0.001933373394422233], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC = {:0.2f}'.format(auc_score))", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " {:", "0", ".", "2", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "\n"], "logprobs": [-0.033798255026340485, -0.018667489290237427, -0.0072559877298772335, -4.887569048150908e-06, -0.001189596951007843, -0.0016339774010702968, -0.0001003691868390888, -0.059876326471567154, -0.7033676505088806, -0.39167481660842896, -0.8091731667518616, -0.004346922505646944, -0.17653866112232208, -0.34424740076065063, -0.8971869349479675, -0.0010078833438456059, -0.3201583921909332, -0.0007524043321609497, -0.004080185666680336, -0.00018726025882642716, -0.0002901133266277611, -0.0001287377526750788, -0.004676595330238342, -0.0022231643088161945, -2.6464111215318553e-05, -0.022295530885457993, -0.6145254373550415], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, marker='.', label='ROC curve (area = %0.4f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " marker", "='", ".", "'", ",", " label", "='", "R", "OC", " curve", " (", "area", " =", " %", "0", ".", "4", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.02943388558924198, -0.008481434546411037, -0.006602378096431494, -1.6689286894688848e-06, -0.0005721600609831512, -0.0016077938489615917, -0.0008030288736335933, -0.018532106652855873, -2.7816014289855957, -0.002293339231982827, -0.38527265191078186, -0.5963054895401001, -0.0010241983691230416, -0.29408445954322815, -0.3376733958721161, -0.5389522314071655, -0.001522573409602046, -0.21871931850910187, -0.5590761303901672, -0.40389055013656616, -0.02114328183233738, -0.015271286480128765, -0.0002687808300834149, -0.0008526980527676642, -1.4846551418304443, -3.71926071238704e-05, -0.003182467771694064, -0.005133661441504955, -0.031297024339437485, -4.8397800128441304e-05, -0.003840097226202488, -7.4741430580616e-05, -0.03947075456380844, -0.018549541011452675], "finish_reason": "stop"}, {"text": "set(xlabel='False positive rate', ylabel='True positive rate', title='ROC curve')", "tokens": ["set", "(", "xlabel", "='", "False", " positive", " rate", "'", ",", " y", "label", "='", "True", " positive", " rate", "'", ",", " title", "='", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.8033478260040283, -2.355339527130127, -0.3242267072200775, -0.026332030072808266, -0.0058256834745407104, -1.8941676616668701, -0.0015085280174389482, -0.007394681219011545, -6.174850568640977e-05, -0.04711740463972092, -0.00021169328829273582, -0.00023684080224484205, -0.00022098960471339524, -0.0028211576864123344, -0.0002015625941567123, -0.43336978554725647, -0.0014934111386537552, -0.18636979162693024, -0.00539964297786355, -0.07708458602428436, -0.0009573881980031729, -0.026616577059030533, -0.007013701368123293, -0.02083265408873558], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00014673586701974273, -8.4638240878121e-06, -0.000575376907363534, -0.00020144341397099197, -0.00027700403006747365, -0.0021318108774721622, -0.00012730741582345217, -0.0019250449258834124, -0.0031789029017090797], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.040408968925476074, -0.0007154765771701932, -0.05836983770132065, -0.010461610741913319, -0.054548121988773346, -0.0007931424188427627, -0.023529477417469025, -0.008713793940842152, -0.014570499770343304], "finish_reason": "stop"}, {"text": "legend(loc='upper left')", "tokens": ["legend", "(", "loc", "='", "upper", " left", "')", "\n"], "logprobs": [-0.0824902132153511, -0.3478681743144989, -0.003907783888280392, -0.27528947591781616, -1.4156160354614258, -0.3780578672885895, -0.15185357630252838, -0.04112735390663147], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax"], "logprobs": [-0.016753219068050385, -0.0011940023396164179, -0.007348413113504648], "finish_reason": "stop"}], "metrics": {"energy": 375.05946071052546, "energy_per_token": 1.311396715771068, "time": 16.190884, "time_per_token": 0.05661148251748252}}
{"outputs": [{"text": " X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=0)", "tokens": [" X", "_", "test", ",", " Y", "_", "train", ",", " Y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.4659038484096527, -0.0002329078270122409, -0.0003762729174923152, -0.00017569905321579427, -0.002548900432884693, -2.8967437174287625e-05, -0.00030632095877081156, -0.004213741049170494, -0.01947578229010105, -5.245195097813848e-06, -9.775113539944869e-06, -9.536738616588991e-07, -8.34461570775602e-06, -0.00036221143091097474, -0.17957919836044312, -0.0004731489170808345, -0.00982366781681776, -0.013597368262708187, -0.08335768431425095, -2.145764938177308e-06, -3.45700973412022e-05, -0.02019907534122467, -0.016435477882623672, -4.458328112377785e-05, -0.007441657595336437, -0.2136436551809311, -0.11206714808940887, -1.1920922133867862e-06, -4.529942543740617e-06, -0.001563875237479806, -2.589439868927002, -0.14090308547019958, -0.01617581769824028], "finish_reason": "stop"}, {"text": " keras.models.Sequential()", "tokens": [" k", "eras", ".", "models", ".", "S", "equ", "ential", "()", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.6807610988616943, -0.0001419681793777272, -2.4318398573086597e-05, -3.2186455882765586e-06, -6.437280717364047e-06, -0.7580927014350891, -0.006006049923598766], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss=keras.losses.binary_crossentropy)", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "=", "keras", ".", "loss", "es", ".", "binary", "_", "cross", "entropy", ")", "\n"], "logprobs": [-0.0012944899499416351, -0.0019502682844176888, -1.711421012878418, -1.8715683836489916e-05, -0.18487368524074554, -0.3263826072216034, -0.00014602071314584464, -0.00031859567388892174, -0.0007233387441374362, -0.025845173746347427, -2.7525293827056885, -0.17381420731544495, -2.610649426060263e-05, -0.026252489537000656, -1.6689286894688848e-06, -9.512448741588742e-05, -0.7496325969696045, -1.1324817933200393e-05, -0.00019691436318680644, -6.937739817658439e-05, -0.963916540145874, -0.003621212672442198], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=False)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "False", ")", "\n"], "logprobs": [-0.001587560516782105, -0.0001740304142003879, -0.021264657378196716, -0.040321268141269684, -0.0002302858338225633, -0.00047672350774519145, -0.01812806911766529, -0.00264711189083755, -1.5616295058862306e-05, -0.02109682746231556, -0.9739142656326294, -0.002400376135483384, -2.995450496673584, -1.3751633167266846, -0.06861881911754608], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.011155379004776478, -0.0005172345554456115, -0.0005029367166571319, -0.036299798637628555, -0.000676998752169311, -0.000316212244797498, -0.00087878224439919, -0.0050785113126039505, -0.051920533180236816], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(y_true=Y_test, y_score=Y_pred, pos_label=1)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "y", "_", "true", "=", "Y", "_", "test", ",", " y", "_", "score", "=", "Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.004013935569673777, -0.011789645068347454, -0.001258772797882557, -0.1676613837480545, -0.0014721043407917023, -0.0056321267038583755, -3.576278118089249e-07, -2.3603161025675945e-05, -7.748573807475623e-06, -0.00021336186910048127, -1.5260274410247803, -0.00010108436981681734, -0.007239419035613537, -0.0023078492376953363, -0.002410127781331539, -0.0001586549769854173, -0.00957326591014862, -0.13529206812381744, -0.45071858167648315, -8.583032467868179e-06, -0.0020609109196811914, -0.0011441120877861977, -0.0027499499265104532, -0.0004223884898237884, -0.0011127954348921776, -1.341796875, -0.04541557654738426, -0.0010239601833745837, -0.00039664984797127545, -0.0066189575009047985, -0.04338831827044487, -0.24716250598430634, -0.017086444422602654], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.0029149444308131933, -6.556489552167477e-06, -0.00028618055512197316, -0.0010044296504929662, -2.622600959512056e-06, -0.004706851206719875, -0.0015847040340304375, -0.0005676327273249626, -0.0007151191821321845, -0.0036295270547270775], "finish_reason": "stop"}, {"text": " ax = plt.subplots()", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "()", "\n"], "logprobs": [-0.04830896481871605, -0.0060492996126413345, -0.0006467396160587668, -0.0006270825979299843, -0.01046904269605875, -6.48477507638745e-05, -0.32250091433525085, -0.0020536540541797876], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='ROC curve (AUC = %0.4f)' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "R", "OC", " curve", " (", "A", "UC", " =", " %", "0", ".", "4", "f", ")'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.032472606748342514, -0.014534314163029194, -0.008293001912534237, -4.887569048150908e-06, -0.001259606215171516, -0.001503052655607462, -8.570780482841656e-05, -0.05249621346592903, -0.7256612181663513, -0.3921782076358795, -0.7542301416397095, -0.0011447074357420206, -0.18237970769405365, -0.4715532064437866, -1.0019750595092773, -0.0024601928889751434, -0.17694194614887238, -0.09243986010551453, -0.004277841653674841, -0.00019035911827813834, -0.8237302899360657, -2.7417760065873154e-05, -0.0019483646610751748, -0.001670038211159408, -0.02506445348262787, -1.3470558769768104e-05, -0.0037941390182822943, -2.8609820219571702e-05, -0.03108661063015461, -0.15347756445407867], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, linewidth=2, color='#1f77b4',", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " linewidth", "=", "2", ",", " color", "='", "#", "1", "f", "7", "7", "b", "4", "'", ",", "\n"], "logprobs": [-0.02095336839556694, -0.007565299980342388, -0.005687601864337921, -1.6689286894688848e-06, -0.0006472161621786654, -0.0017301365733146667, -0.0005529781919904053, -0.012579381465911865, -1.640195369720459, -0.007477982901036739, -0.452090322971344, -0.3496668338775635, -0.7726372480392456, -0.020704686641693115, -1.5551949739456177, -1.2283196449279785, -0.1772213578224182, -0.00011467275908216834, -0.0012384133879095316, -0.0014297273010015488, -1.4305104514278355e-06, -0.18344004452228546, -0.0007008241955190897, -2.722576856613159], "finish_reason": "stop"}, {"text": "plot([0, 1], [0, 1], 'k--')", "tokens": ["plot", "([", "0", ",", " ", "1", "]", ",", " [", "0", ",", " ", "1", "]", ",", " '", "k", "--", "')", "\n"], "logprobs": [-1.0788493156433105, -1.769559621810913, -0.015969589352607727, -0.0034863899927586317, -0.06128513067960739, -0.09934044629335403, -0.005356602370738983, -0.00017557987303007394, -0.013562793843448162, -0.006382438819855452, -0.010382568463683128, -0.002211983548477292, -0.023748820647597313, -0.005088236648589373, -0.0002627027570270002, -0.21125774085521698, -0.1564827263355255, -0.38583138585090637, -0.6654080748558044, -0.08090925961732864], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00011526874004630372, -7.629365427419543e-06, -0.0004954302567057312, -0.0001674750237725675, -0.000302030734019354, -0.0021313349716365337, -0.00012218205665703863, -0.0017510809702798724, -0.002700850600376725], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03691728785634041, -0.0007502601947635412, -0.03816787153482437, -0.008425168693065643, -0.05176399648189545, -0.0007009433466009796, -0.023157507181167603, -0.008642413653433323, -0.013598309829831123], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.06141933426260948, -0.3106902539730072, -0.0032669526990503073, -0.25911518931388855, -0.664820671081543, -0.09997695684432983, -0.0352991484105587, -0.02099153958261013], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>from collections import OrderedDict", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "from", " collections", " import", " Or", "dered", "Dict", "\n"], "logprobs": [-0.018805427476763725, -0.0011693552369251847, -0.006002258043736219, -0.8340495228767395, -2.3841855067985307e-07, -3.814689989667386e-06, -0.00028355870745144784, -0.00016234986833296716, -0.09723206609487534, -1.6331080198287964, -3.6784307956695557, -0.036741722375154495, -1.9027420282363892, -9.536738616588991e-07, -6.8662193370983e-05, -0.042214877903461456], "finish_reason": "stop"}], "metrics": {"energy": 411.6673880996704, "energy_per_token": 1.5833361080756554, "time": 16.807213, "time_per_token": 0.06464312692307693}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, shuffle=True, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " shuffle", "=", "True", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -0.20662526786327362, -0.0006124289939180017, -0.021198369562625885, -0.00964576005935669, -0.08393506705760956, -1.6689286894688848e-06, -4.565611743601039e-05, -0.022526217624545097, -0.018831515684723854, -4.8874615458771586e-05, -0.007649179082363844, -0.18480026721954346, -2.7887465953826904, -0.0034284167923033237, -0.0477943941950798, -0.4672357141971588, -0.10607409477233887, -7.629365427419543e-06, -1.490105023549404e-05, -0.0019883401691913605, -0.33068835735321045, -0.03404105082154274, -0.06627290695905685, -0.01747344620525837], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -0.1716839075088501, -0.11205638945102692], "finish_reason": "stop"}, {"text": "compile(", "tokens": ["compile", "(", "\n"], "logprobs": [-0.001042775809764862, -0.0020857739727944136, -1.7206990718841553], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=5, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "5", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0015555436257272959, -0.0001734344696160406, -0.02073294296860695, -0.04196605458855629, -0.00022754464589525014, -0.0005178302526473999, -0.019893648102879524, -0.0038818970788270235, -1.537788011773955e-05, -0.02342991903424263, -0.7861684560775757, -0.000824349990580231, -1.696516752243042, -0.504522979259491, -0.04799086973071098, -0.0015969631494954228, -0.12758606672286987, -0.07226292788982391, -0.012094967998564243], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.01023272518068552, -0.00047839165199548006, -0.0005447572330012918, -0.03682858869433403, -0.0008967668982222676, -0.0003488647344056517, -0.0007930232677608728, -0.00605593528598547, -0.056998468935489655], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred, pos_label=1)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ")", "\n"], "logprobs": [-0.004305973183363676, -0.01169975008815527, -0.0010480155469849706, -0.17397348582744598, -0.001568279112689197, -0.005760733969509602, -3.576278118089249e-07, -1.4543427823809907e-05, -7.629365427419543e-06, -0.00016425691137555987, -0.29389479756355286, -0.0025883764028549194, -0.006193255074322224, -0.09645406156778336, -0.003981758840382099, -4.7801782784517854e-05, -7.712543447269127e-05, -1.5474233627319336, -0.08907708525657654, -0.0030758711509406567, -0.000251142424531281, -0.012977899052202702, -0.03933873400092125, -0.27728745341300964, -0.012452472001314163], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.003174387151375413, -6.318072337307967e-06, -0.0003492222458589822, -0.000770391256082803, -3.576272320060525e-06, -0.00414702482521534, -0.0014111570781096816, -0.0004080893413629383, -0.0006920088781043887, -0.004193916916847229], "finish_reason": "stop"}, {"text": " ax = plt.subplots(1)", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "1", ")", "\n"], "logprobs": [-0.042292699217796326, -0.007502119988203049, -0.0006654431927017868, -0.0005378468777053058, -0.01261893380433321, -7.390703103737906e-05, -1.4133009910583496, -1.0965871810913086, -1.5511014461517334, -0.007997514680027962], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC = {:.2f}'.format(auc_score))  # Plot the ROC curve", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " {:", ".", "2", "f", "}'", ".", "format", "(", "auc", "_", "score", "))", "  ", "#", " Plot", " the", " R", "OC", " curve", "\n"], "logprobs": [-0.032174598425626755, -0.01733497343957424, -0.010232017375528812, -4.768360213347478e-06, -0.0010850501712411642, -0.0015836328966543078, -9.870042413240299e-05, -0.04507502168416977, -0.682060718536377, -0.3805033266544342, -0.9614541530609131, -0.0043077534064650536, -0.19449740648269653, -0.36510929465293884, -0.5094871520996094, -0.2821548283100128, -0.0012935374397784472, -0.0036814315244555473, -0.00017438798386137933, -0.00031609306461177766, -0.00012265883560758084, -0.005324468482285738, -0.0016019619069993496, -1.847726889536716e-05, -0.01848049834370613, -0.8746581077575684, -9.142934868577868e-05, -0.10489589720964432, -0.22225280106067657, -0.32242706418037415, -4.0531076592742465e-06, -0.012974368408322334, -0.08228305727243423], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label=f'AUC={auc_score:.2f}')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "=", "f", "'", "A", "UC", "={", "auc", "_", "score", ":", ".", "2", "f", "}", "')", "\n"], "logprobs": [-0.02703959308564663, -0.009073453955352306, -0.006341098807752132, -1.7881377516459906e-06, -0.0006349454633891582, -0.0017520328983664513, -0.0006183857913129032, -0.02056584134697914, -0.9877522587776184, -1.2304002046585083, -0.1802508682012558, -0.20818930864334106, -0.20370788872241974, -0.0016642066184431314, -0.8316867351531982, -0.04177628085017204, -0.005318658426403999, -3.6000557884108275e-05, -0.2516935467720032, -0.03144640102982521, -0.8189353346824646, -0.005236006807535887, -0.03184463083744049, -0.010702119208872318, -0.06405901163816452], "finish_reason": "stop"}, {"text": "set(xlim=(0, 1), ylim=(0, 1),", "tokens": ["set", "(", "x", "lim", "=(", "0", ",", " ", "1", ")", ",", " y", "lim", "=(", "0", ",", " ", "1", ")", ",", "\n"], "logprobs": [-0.8447599411010742, -2.3820414543151855, -1.8412801027297974, -0.15830673277378082, -0.3378187119960785, -0.010885500349104404, -0.014899403788149357, -0.0043165371753275394, -0.0018068907083943486, -0.004072706215083599, -5.960446742392378e-06, -0.03159286826848984, -7.4741430580616e-05, -0.00025054652360267937, -0.00020716428116429597, -0.0004533693427219987, -0.0002754547167569399, -0.00014685506175737828, -0.2996724545955658, -0.000530936405993998, -0.5200967192649841], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00010251473577227443, -8.583032467868179e-06, -0.0006076634745113552, -0.0001941730733960867, -0.00030489088385365903, -0.0023819427005946636, -0.00011944057769142091, -0.0020600780844688416, -0.002886298345401883], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03757939860224724, -0.0007086864789016545, -0.06155721843242645, -0.01079163234680891, -0.04731765016913414, -0.0007892115972936153, -0.021846594288945198, -0.007725717034190893, -0.012168928049504757], "finish_reason": "stop"}, {"text": "legend()", "tokens": ["legend", "()", "\n"], "logprobs": [-0.05291532352566719, -1.357720136642456, -0.04396505281329155], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.017974698916077614, -0.0010638536186888814, -0.005832794588059187, -0.8859143853187561], "finish_reason": "stop"}], "metrics": {"energy": 310.7048909339905, "energy_per_token": 1.3508908301477849, "time": 13.876496, "time_per_token": 0.06033259130434782}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -0.20662526786327362, -0.0006124289939180017, -0.021198369562625885, -0.00964576005935669, -0.08393506705760956, -1.6689286894688848e-06, -4.565611743601039e-05, -0.022526217624545097, -0.018831515684723854, -4.8874615458771586e-05, -0.007649179082363844, -0.18480026721954346, -0.1227041557431221, -1.5497195136049413e-06, -4.410734163684538e-06, -0.001611721352674067, -0.22465351223945618, -0.035885170102119446, -0.11691216379404068, -0.025658590719103813], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -0.1716839075088501, -0.11205638945102692], "finish_reason": "stop"}, {"text": "compile(optimizer='SGD', loss='binary_crossentropy', metrics=['accuracy'])", "tokens": ["compile", "(", "optim", "izer", "='", "S", "GD", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "'", ",", " metrics", "=['", "accuracy", "'])", "\n"], "logprobs": [-0.001042775809764862, -0.0020857739727944136, -1.7427022457122803, -1.966933996300213e-05, -0.1603645533323288, -1.5715017318725586, -0.00043215948971919715, -0.0002097863471135497, -0.0010977915953844786, -0.034853480756282806, -0.05096496641635895, -0.019903581589460373, -0.0016270744381472468, -0.00034528967808000743, -8.296622399939224e-05, -0.9961963891983032, -0.03487800434231758, -0.2547398507595062, -0.12837976217269897, -0.29790088534355164, -0.08068165183067322, -0.00323320715688169], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, verbose=0, epochs=5)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " verbose", "=", "0", ",", " epochs", "=", "5", ")", "\n"], "logprobs": [-0.0015555436257272959, -0.0001734344696160406, -0.02073294296860695, -0.04196605458855629, -0.00022754464589525014, -0.0005178302526473999, -0.019893648102879524, -0.0038818970788270235, -1.537788011773955e-05, -0.02342991903424263, -0.9387582540512085, -0.002654007636010647, -0.07950197160243988, -0.6409024596214294, -0.34795066714286804, -0.0005156855913810432, -1.6809425354003906, -1.188598871231079, -0.009227486327290535], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.01027543842792511, -0.0005932478234171867, -0.0006600823253393173, -0.02895965427160263, -0.000648883986286819, -0.00032026408007368445, -0.0007418026216328144, -0.0065583232790231705, -0.05233026295900345], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred, pos_label=1, drop_intermediate=False)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ",", " drop", "_", "inter", "mediate", "=", "False", ")", "\n"], "logprobs": [-0.004334934521466494, -0.012718986719846725, -0.0011857867939397693, -0.16729296743869781, -0.0014417502097785473, -0.005129154305905104, -3.576278118089249e-07, -2.3483953555114567e-05, -6.794906312279636e-06, -0.00019608005823101848, -0.29397180676460266, -0.002926830668002367, -0.005135796032845974, -0.09077724814414978, -0.004330068361014128, -4.8040190449682996e-05, -8.427741704508662e-05, -1.6014902591705322, -0.07183410227298737, -0.0018076046835631132, -0.00021991695393808186, -0.012141958810389042, -0.04414140805602074, -1.991365671157837, -0.7733935713768005, -8.761498611420393e-05, -0.6411210298538208, -0.18491511046886444, -0.0013094907626509666, -0.08878827840089798, -0.16242219507694244, -0.0076567502692341805], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.002884990768507123, -7.033323527139146e-06, -0.00028618055512197316, -0.0008848565630614758, -3.933898824470816e-06, -0.004731055814772844, -0.0016795588890090585, -0.00039760314393788576, -0.000773369160015136, -0.004109153989702463], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(8, 6))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "8", ",", " ", "6", "))", "\n"], "logprobs": [-0.04009281471371651, -0.006868088152259588, -0.0006171943969093263, -0.0005410637822933495, -0.008316174149513245, -6.460934673668817e-05, -1.4388461112976074, -0.6340600252151489, -0.00034528967808000743, -0.016612298786640167, -1.1447159051895142, -0.005048384889960289, -0.08197064697742462, -0.6056177616119385, -0.044027794152498245, -0.0036196685396134853], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, marker='*', linewidth=2, label=f'AUC = {auc_score:.2f}')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " marker", "='", "*", "'", ",", " linewidth", "=", "2", ",", " label", "=", "f", "'", "A", "UC", " =", " {", "auc", "_", "score", ":", ".", "2", "f", "}", "')", "\n"], "logprobs": [-0.03588712215423584, -0.017789218574762344, -0.008677395060658455, -4.887569048150908e-06, -0.0011131525970995426, -0.001683367183431983, -0.0001431601122021675, -0.054688986390829086, -1.920658826828003, -0.005189519841223955, -2.470606565475464, -0.4571255147457123, -0.0018086755881085992, -2.2643964290618896, -0.005671718157827854, -0.9781675934791565, -0.3902016878128052, -0.7849549651145935, -1.5778225660324097, -0.24202591180801392, -0.1917317658662796, -0.20901499688625336, -0.002355540869757533, -0.8571648597717285, -0.01335955411195755, -0.08707893639802933, -0.003201718209311366, -3.266281055402942e-05, -0.40973180532455444, -0.029242761433124542, -0.7024732828140259, -0.007939092814922333, -0.057647086679935455, -0.0048114946112036705, -0.3517809808254242], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, linewidth=5, color='g')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " linewidth", "=", "5", ",", " color", "='", "g", "')", "\n"], "logprobs": [-0.022519225254654884, -0.008298794738948345, -0.006628076080232859, -1.9073468138230965e-06, -0.0007340597221627831, -0.0014148473273962736, -0.0006165986997075379, -0.018733009696006775, -1.5071499347686768, -0.006004983093589544, -2.5493099689483643, -0.14853599667549133, -1.0097401142120361, -0.03220530226826668, -2.5685079097747803, -0.6314093470573425, -0.019047681242227554], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, 'g.')", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " '", "g", ".", "')", "\n"], "logprobs": [-1.086722493171692, -0.2323078215122223, -0.8922274708747864, -0.0028688248712569475, -0.03447234258055687, -0.3420722782611847, -0.016785455867648125, -0.043391741812229156, -0.3674764037132263, -2.751735210418701, -0.127557635307312, -0.5839572548866272, -0.0983063131570816], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00013457823661156, -7.033323527139146e-06, -0.0005802616360597312, -0.00019786784832831472, -0.00028355870745144784, -0.002070189919322729, -0.00012444675667211413, -0.0017733338754624128, -0.0029655785765498877], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.02734876237809658, -0.000777776469476521, -0.059090498834848404, -0.009035768918693066, -0.05576130375266075, -0.0007259594276547432, -0.018329523503780365, -0.008859374560415745, -0.0131992157548666], "finish_reason": "stop"}, {"text": "legend(loc='lower right')", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "\n"], "logprobs": [-0.060074031352996826, -0.3389124274253845, -0.003369727171957493, -0.2852165400981903, -0.6879744529724121, -0.13071134686470032, -0.03401639685034752, -0.020465753972530365], "finish_reason": "stop"}, {"text": " model, ax", "tokens": [" model", ",", " ax", "\n"], "logprobs": [-0.016848988831043243, -0.0011021974496543407, -0.006576442625373602, -0.8406016826629639], "finish_reason": "stop"}], "metrics": {"energy": 389.8126820144654, "energy_per_token": 1.5655127791745598, "time": 15.937751, "time_per_token": 0.06400703212851405}}
{"outputs": [{"text": " X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " Y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.003965729381889105, -9.023735765367746e-05, -0.012692385353147984, -0.000563224486541003, -0.9931026697158813, -0.0003103728231508285, -0.0011524471919983625, -0.00020001317898277193, -0.007037967909127474, -4.2437604861333966e-05, -0.0009236836922354996, -0.004140851553529501, -0.022572139278054237, -4.768360213347478e-06, -1.0251946150674485e-05, -2.622600959512056e-06, -8.583032467868179e-06, -0.0004151197790633887, -0.20662526786327362, -0.0006124289939180017, -0.021198369562625885, -0.00964576005935669, -0.08393506705760956, -1.6689286894688848e-06, -4.565611743601039e-05, -0.022526217624545097, -0.018831515684723854, -4.8874615458771586e-05, -0.007649179082363844, -0.18480026721954346, -0.1227041557431221, -1.5497195136049413e-06, -4.410734163684538e-06, -0.001611721352674067, -0.22465351223945618, -0.035885170102119446, -0.11691216379404068, -0.025658590719103813], "finish_reason": "stop"}, {"text": " keras.Sequential([", "tokens": [" k", "eras", ".", "S", "equ", "ential", "([", "\n"], "logprobs": [-0.09970250725746155, -5.364403477869928e-06, -0.00019167017308063805, -0.7147233486175537, -2.7418097943154862e-06, -1.9073468138230965e-06, -0.1716839075088501, -0.11205638945102692], "finish_reason": "stop"}, {"text": "compile(optimizer='sgd', loss='binary_crossentropy')", "tokens": ["compile", "(", "optim", "izer", "='", "sg", "d", "'", ",", " loss", "='", "binary", "_", "cross", "entropy", "')", "\n"], "logprobs": [-0.001042775809764862, -0.0020857739727944136, -1.7427022457122803, -1.966933996300213e-05, -0.1603645533323288, -0.2952260673046112, -0.00015805903240107, -0.0002766464895103127, -0.0008436457719653845, -0.02795441262423992, -0.07276273518800735, -0.013569497503340244, -0.0022054414730519056, -0.0003828269545920193, -0.0001081169830285944, -0.24437984824180603, -0.003288577776402235], "finish_reason": "stop"}, {"text": "fit(X_train, Y_train, epochs=30, verbose=0)", "tokens": ["fit", "(", "X", "_", "train", ",", " Y", "_", "train", ",", " epochs", "=", "3", "0", ",", " verbose", "=", "0", ")", "\n"], "logprobs": [-0.0015555436257272959, -0.0001734344696160406, -0.02073294296860695, -0.04196605458855629, -0.00022754464589525014, -0.0005178302526473999, -0.019893648102879524, -0.0038818970788270235, -1.537788011773955e-05, -0.02342991903424263, -0.7861684560775757, -0.000824349990580231, -2.3060386180877686, -0.8623912930488586, -0.45284944772720337, -0.04709409177303314, -0.0012353177880868316, -0.10502780973911285, -0.08806470036506653, -0.012485318817198277], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.01023272518068552, -0.00047839165199548006, -0.0005447572330012918, -0.03682858869433403, -0.0008967668982222676, -0.0003488647344056517, -0.0007930232677608728, -0.00605593528598547, -0.056998468935489655], "finish_reason": "stop"}, {"text": " tpr, thresholds = roc_curve(Y_test, Y_pred, pos_label=1, drop_intermediate=False)", "tokens": [" t", "pr", ",", " thresholds", " =", " ro", "c", "_", "curve", "(", "Y", "_", "test", ",", " Y", "_", "pred", ",", " pos", "_", "label", "=", "1", ",", " drop", "_", "inter", "mediate", "=", "False", ")", "\n"], "logprobs": [-0.004305973183363676, -0.01169975008815527, -0.0010480155469849706, -0.17397348582744598, -0.001568279112689197, -0.005760733969509602, -3.576278118089249e-07, -1.4543427823809907e-05, -7.629365427419543e-06, -0.00016425691137555987, -0.29389479756355286, -0.0025883764028549194, -0.006193255074322224, -0.09645406156778336, -0.003981758840382099, -4.7801782784517854e-05, -7.712543447269127e-05, -1.5474233627319336, -0.08907708525657654, -0.0030758711509406567, -0.000251142424531281, -0.012977899052202702, -0.03933873400092125, -1.8420419692993164, -0.725035548210144, -0.00011765264935093, -0.6146717667579651, -0.19721609354019165, -0.001335801207460463, -0.10771609097719193, -0.15967023372650146, -0.008261553943157196], "finish_reason": "stop"}, {"text": " auc(fpr, tpr)", "tokens": [" a", "uc", "(", "f", "pr", ",", " t", "pr", ")", "\n"], "logprobs": [-0.003174387151375413, -6.318072337307967e-06, -0.0003492222458589822, -0.000770391256082803, -3.576272320060525e-06, -0.00414702482521534, -0.0014111570781096816, -0.0004080893413629383, -0.0006920088781043887, -0.004193916916847229], "finish_reason": "stop"}, {"text": " ax = plt.subplots(figsize=(6, 6))", "tokens": [" ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "6", ",", " ", "6", "))", "\n"], "logprobs": [-0.042292699217796326, -0.007502119988203049, -0.0006654431927017868, -0.0005378468777053058, -0.01261893380433321, -7.390703103737906e-05, -1.4133009910583496, -0.5514097213745117, -0.000328367663314566, -0.017818260937929153, -2.1005098819732666, -0.0383785218000412, -0.08461267501115799, -0.6263027787208557, -0.026118246838450432, -0.004938191268593073], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, label='AUC = %0.4f' % auc_score)", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " label", "='", "A", "UC", " =", " %", "0", ".", "4", "f", "'", " %", " a", "uc", "_", "score", ")", "\n"], "logprobs": [-0.032174598425626755, -0.01733497343957424, -0.010232017375528812, -4.768360213347478e-06, -0.0010850501712411642, -0.0015836328966543078, -9.870042413240299e-05, -0.04507502168416977, -0.682060718536377, -0.3805033266544342, -0.9614541530609131, -0.0043077534064650536, -0.19449740648269653, -1.7100361585617065, -0.14359062910079956, -0.0005397531786002219, -0.7062330842018127, -6.961580220377073e-05, -0.0038993528578430414, -0.006925152149051428, -0.01854369044303894, -1.6093124941107817e-05, -0.004096094518899918, -2.4318398573086597e-05, -0.039286352694034576, -0.48660746216773987], "finish_reason": "stop"}, {"text": "plot(fpr, tpr, color='#0066cc', linewidth=5, alpha=0.8,", "tokens": ["plot", "(", "f", "pr", ",", " t", "pr", ",", " color", "='", "#", "0", "0", "6", "6", "cc", "'", ",", " linewidth", "=", "5", ",", " alpha", "=", "0", ".", "8", ",", "\n"], "logprobs": [-0.02703959308564663, -0.009073453955352306, -0.006341098807752132, -1.7881377516459906e-06, -0.0006349454633891582, -0.0017520328983664513, -0.0006183857913129032, -0.02056584134697914, -2.0016491413116455, -0.018614133819937706, -0.9439955949783325, -1.2835227251052856, -0.0072430879808962345, -3.585524797439575, -0.645537793636322, -1.535679578781128, -0.004396534990519285, -7.4741430580616e-05, -0.2728993594646454, -0.0014893640764057636, -1.2972421646118164, -0.1939845085144043, -0.9197770357131958, -3.1709168979432434e-05, -0.00991845317184925, -2.2649508537142538e-05, -0.01914908178150654, -0.030859392136335373, -1.1159138679504395], "finish_reason": "stop"}, {"text": "legend(loc='lower right')  # Add a legend to the plot", "tokens": ["legend", "(", "loc", "='", "lower", " right", "')", "  ", "#", " Add", " a", " legend", " to", " the", " plot", "\n"], "logprobs": [-2.533296823501587, -0.05039939656853676, -0.008490418083965778, -0.15892836451530457, -0.6924273371696472, -0.21884393692016602, -0.03754323348402977, -2.9185662269592285, -0.00038699767901562154, -0.12000231444835663, -0.17524899542331696, -0.003380776150152087, -1.049713373184204, -0.009556381031870842, -0.646910548210144, -0.06308756023645401], "finish_reason": "stop"}, {"text": "set_ylabel('True positive rate')", "tokens": ["set", "_", "ylabel", "('", "True", " positive", " rate", "')", "\n"], "logprobs": [-0.00013016807497479022, -7.629365427419543e-06, -0.0005370128201320767, -0.00017188502533826977, -0.00030191155383363366, -0.0019010106334462762, -0.00012408917245920748, -0.0021052833180874586, -0.003142302157357335], "finish_reason": "stop"}, {"text": "set_title('ROC curve')", "tokens": ["set", "_", "title", "('", "R", "OC", " curve", "')", "\n"], "logprobs": [-0.03620748221874237, -0.0005545270396396518, -0.05417373776435852, -0.00989555474370718, -0.05412077531218529, -0.0007555014453828335, -0.023365985602140427, -0.009680825285613537, -0.014574142172932625], "finish_reason": "stop"}, {"text": "legend(loc='upper left', fontsize='large')", "tokens": ["legend", "(", "loc", "='", "upper", " left", "'", ",", " fonts", "ize", "='", "large", "')", "\n"], "logprobs": [-0.053486816585063934, -0.3058415949344635, -0.003642236115410924, -0.31144818663597107, -1.1835272312164307, -0.3567101061344147, -2.0582525730133057, -0.005657256580889225, -1.0262612104415894, -0.00010418349120300263, -0.29297053813934326, -1.992899775505066, -0.08050601184368134, -0.01598026417195797], "finish_reason": "stop"}, {"text": " model, ax<|endoftext|>#!/usr/bin/env python", "tokens": [" model", ",", " ax", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.0202539823949337, -0.001013361383229494, -0.006092192139476538, -0.8654391169548035, -2.3841855067985307e-07, -4.0531076592742465e-06, -0.0002051381452474743, -0.00015889335190877318, -0.09332035481929779, -0.992074728012085, -1.207968831062317, -0.05676624923944473, -0.08724009245634079, -4.8993817472364753e-05, -0.0033050933852791786, -0.0006755692302249372, -0.03466903418302536, -0.003209917340427637, -0.5984166264533997], "finish_reason": "stop"}], "metrics": {"energy": 367.10428165054304, "energy_per_token": 1.349648094303467, "time": 15.965516, "time_per_token": 0.05869675}}
