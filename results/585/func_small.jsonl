{"outputs": [{"text": "try:\n        import rsa\n        import os\n        import zipfile\n        from base64 import b64encode\n    except ImportError as e:\n        raise ImportError(str(e))\n\n    pub_key, priv_key, zip_file = None, None, None\n    files = os.listdir(directory)\n    for file in files:\n        with open(f\"{directory}/{file}\", \"rb\") as file:\n            file_data = file.read()\n            encrypted_data = rsa.encrypt(file_data, pub_key)\n\n        zip_file = zipfile.ZipFile(f\"{directory}/files.zip\", 'a', zipfile.ZIP_DEFLATED)\n        zip_file.writestr(file, encrypted_data)\n        zip_file.close()\n\n    zip_file = zipfile.ZipFile(f\"{directory}/files.zip\", 'r')\n\n    return zip_file", "tokens": ["try", ":", "\n", "        ", "import", " r", "sa", "\n", "        ", "import", " os", "\n", "        ", "import", " zip", "file", "\n", "        ", "from", " base", "6", "4", " import", " b", "6", "4", "encode", "\n", "    ", "except", " Import", "Error", " as", " e", ":", "\n", "        ", "raise", " Import", "Error", "(", "str", "(", "e", "))", "\n", "\n", "    ", "pub", "_", "key", ",", " priv", "_", "key", ",", " zip", "_", "file", " =", " None", ",", " None", ",", " None", "\n", "    ", "files", " =", " os", ".", "list", "dir", "(", "directory", ")", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "with", " open", "(", "f", "\"", "{", "directory", "}/{", "file", "}\"", ",", " \"", "rb", "\"", ")", " as", " file", ":", "\n", "            ", "file", "_", "data", " =", " file", ".", "read", "()", "\n", "            ", "enc", "rypted", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "file", "_", "data", ",", " pub", "_", "key", ")", "\n", "\n", "        ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "f", "\"", "{", "directory", "}/", "files", ".", "zip", "\"", ",", " '", "a", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", "\n", "        ", "zip", "_", "file", ".", "w", "rit", "est", "r", "(", "file", ",", " encrypted", "_", "data", ")", "\n", "        ", "zip", "_", "file", ".", "close", "()", "\n", "\n", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "f", "\"", "{", "directory", "}/", "files", ".", "zip", "\"", ",", " '", "r", "')", "\n", "\n", "    ", "return", " zip", "_", "file", "\n", "\n", "def"], "logprobs": [-2.673262596130371, -0.00034648136352188885, -0.012046560645103455, -0.013805380091071129, -1.9225229024887085, -0.1048455536365509, -5.543078441405669e-05, -0.05778009071946144, -0.0820583924651146, -0.11879140883684158, -0.06362475454807281, -0.002821395406499505, -0.008355304598808289, -0.09862619638442993, -0.00640873471274972, -9.536697689327411e-06, -0.0008708022069185972, -0.06374678760766983, -0.0634453147649765, -0.0015381659613922238, -4.887569048150908e-06, -1.1920928244535389e-07, -8.34461570775602e-06, -0.00014757021563127637, -7.748573807475623e-06, -1.4662635294371285e-05, -0.00014709345123264939, -0.003516206983476877, -0.3829164505004883, -0.0013504442758858204, -0.12798210978507996, -6.592056161025539e-05, -0.5878579020500183, -0.25365734100341797, -0.0011544713051989675, -0.008199717849493027, -0.0012755600037053227, -0.6409251093864441, -0.21605779230594635, -0.0024429496843367815, -0.13209836184978485, -2.2651188373565674, -0.0004959068610332906, -0.0019292092183604836, -0.3991156816482544, -0.21747346222400665, -0.35986387729644775, -0.001551615772768855, -1.817224144935608, -0.08292108029127121, -0.023092858493328094, -1.9203860759735107, -0.40626055002212524, -0.0018308082362636924, -0.0007446615491062403, -1.8489272594451904, -1.3689149618148804, -1.175527572631836, -0.7423679232597351, -0.8789272904396057, -0.5952209830284119, -0.00038521020906046033, -0.0018148632952943444, -0.00014649749209638685, -0.06365920603275299, -0.011368967592716217, -0.6325250864028931, -1.9831308126449585, -0.32238268852233887, -1.0695433616638184, -2.1457441107486375e-05, -0.004477950278669596, -2.50339189733495e-06, -0.0031251898035407066, -0.003046873025596142, -0.0004409771354403347, -0.023988831788301468, -0.5134215354919434, -0.9393082857131958, -0.5337420105934143, -0.31713834404945374, -0.006024534814059734, -0.0006403064471669495, -0.00825351383537054, -0.00884779542684555, -2.1616318225860596, -0.03809695690870285, -0.011362721212208271, -1.5019910335540771, -0.552912175655365, -0.004074486903846264, -0.015140374191105366, -0.058725230395793915, -0.0014817459741607308, -0.02416118234395981, -0.01828516274690628, -0.5052738785743713, -0.025158502161502838, -0.010749530047178268, -0.0005055579822510481, -0.00046969347749836743, -2.0681703090667725, -0.7314376831054688, -0.007523180451244116, -0.002891052979975939, -1.4805715084075928, -0.02573678269982338, -0.23871684074401855, -0.004649304784834385, -0.05935363098978996, -0.0005189026123844087, -0.00019214690837543458, -0.003177952254191041, -0.01180013082921505, -0.5707492828369141, -0.7525822520256042, -0.18873737752437592, -0.14875750243663788, -0.24781569838523865, -0.008619958534836769, -0.04077766835689545, -0.000144709600135684, -0.0010842165211215615, -0.024872491136193275, -0.00011574551899684593, -0.004934276454150677, -0.027739468961954117, -0.0005015069036744535, -9.059865078597795e-06, -0.0029554758220911026, -0.040955156087875366, -0.00028975578607060015, -0.00019500737835187465, -0.09542561322450638, -0.02501446008682251, -2.369108200073242, -0.5344409346580505, -3.1536943912506104, -0.1397087424993515, -0.09382592141628265, -1.6922190189361572, -0.10617005079984665, -0.002711193636059761, -0.00010716341057559475, -0.022726554423570633, -0.001966924872249365, -0.0006973695708438754, -0.02197161689400673, -0.4241039454936981, -0.052383434027433395, -0.05688022822141647, -0.09784506261348724, -1.1779062747955322, -2.3377346992492676, -0.3944419324398041, -0.0012436520773917437, -0.00100192881654948, -0.00175691198091954, -1.591001272201538, -0.6054450273513794, -0.660715639591217, -0.0012480573495849967, -0.9107434153556824, -5.638440416078083e-05, -7.712543447269127e-05, -0.002431652508676052, -0.02568868361413479, -4.1126360883936286e-05, -0.004827036056667566, -0.0009147512027993798, -0.0007284610182978213, -0.05845529958605766, -0.004424900282174349, -0.012303763069212437, -0.06507866829633713, -0.005788705311715603, -0.0077815488912165165, -0.001384491566568613, -0.0656353309750557, -0.0006541258189827204, -7.319182623177767e-05, -0.002435457892715931, -0.006247395649552345, -0.805844783782959, -0.03565662354230881, -0.39201536774635315, -0.0009577454766258597, -0.00013791563105769455, -0.06351792067289352, -0.00715159997344017, -1.183590054512024, -0.0613565519452095, -0.0018330690218135715, -0.00042798896902240813, -0.009425426833331585, -0.01863039843738079, -0.00621007801964879, -0.009003989398479462, -0.3178013861179352, -0.1909896731376648, -2.921410083770752, -0.14516767859458923, -0.23436027765274048, -0.10209517180919647, -0.10264957696199417, -0.002077327808365226, -3.4689302992774174e-05, -0.0006378046819008887, -0.00010966652916977182, -6.544376083184034e-05, -0.005579849239438772, -0.050023116171360016, -0.006170033942908049, -0.005974885076284409, -0.0014888879377394915, -0.007991010323166847, -0.011903680860996246, -0.003543409751728177, -8.928377064876258e-05, -0.0003215749457012862, -0.04706259071826935, -0.05685950443148613, -0.2661759555339813, -1.005737066268921, -0.0055772410705685616, -2.3952465057373047, -0.00851027574390173, -0.7898198962211609, -1.667683720588684, -0.019836032763123512, -0.0004518203204497695, -1.2465217113494873, -0.031873613595962524, -0.5751338601112366], "finish_reason": "stop"}], "metrics": {"energy": 328.1084577579497, "energy_per_token": 1.4021728964014943, "time": 11.259429, "time_per_token": 0.048117217948717955}}
{"outputs": [{"text": "try:\n        # Generate RSA keys\n        (public_key_file, private_key_file) = rsa.newkeys(512)\n        # Open a temporary file for encrypted data\n        encrypted_file = open('rsa_encrypted_data.zip', 'wb')\n        # Create a ZipFile object to zip up the files\n        zipfile_obj = zipfile.ZipFile(encrypted_file, mode='w')\n        # Iterate over the files in the directory\n        for file_name in os.listdir(directory):\n            with open(os.path.join(directory, file_name), 'rb') as file:\n                # Encrypt the file using the public key\n                zipfile_obj.writestr(file_name, rsa.encrypt(file.read(), public_key_file))\n        # Close the ZipFile object\n        zipfile_obj.close()\n        # Close the encrypted file\n        encrypted_file.close()\n        # Return the public key and the zip file name\n        return public_key_file, 'rsa_enc", "tokens": ["try", ":", "\n", "        ", "#", " Generate", " R", "SA", " keys", "\n", "        ", "(", "public", "_", "key", "_", "file", ",", " private", "_", "key", "_", "file", ")", " =", " r", "sa", ".", "new", "keys", "(", "5", "1", "2", ")", "\n", "        ", "#", " Open", " a", " temporary", " file", " for", " encrypted", " data", "\n", "        ", "enc", "rypted", "_", "file", " =", " open", "('", "rs", "a", "_", "enc", "rypted", "_", "data", ".", "zip", "'", ",", " '", "wb", "')", "\n", "        ", "#", " Create", " a", " Zip", "File", " object", " to", " zip", " up", " the", " files", "\n", "        ", "zip", "file", "_", "obj", " =", " zip", "file", ".", "Z", "ip", "File", "(", "enc", "rypted", "_", "file", ",", " mode", "='", "w", "')", "\n", "        ", "#", " Iter", "ate", " over", " the", " files", " in", " the", " directory", "\n", "        ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", "_", "name", ")", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "#", " Enc", "rypt", " the", " file", " using", " the", " public", " key", "\n", "                ", "zip", "file", "_", "obj", ".", "w", "rit", "est", "r", "(", "file", "_", "name", ",", " r", "sa", ".", "enc", "rypt", "(", "file", ".", "read", "()", ",", " public", "_", "key", "_", "file", "))", "\n", "        ", "#", " Close", " the", " Zip", "File", " object", "\n", "        ", "zip", "file", "_", "obj", ".", "close", "()", "\n", "        ", "#", " Close", " the", " encrypted", " file", "\n", "        ", "enc", "rypted", "_", "file", ".", "close", "()", "\n", "        ", "#", " Return", " the", " public", " key", " and", " the", " zip", " file", " name", "\n", "        ", "return", " public", "_", "key", "_", "file", ",", " '", "rs", "a", "_", "enc"], "logprobs": [-2.673262596130371, -0.00034648136352188885, -0.012046560645103455, -0.013805380091071129, -1.339112639427185, -0.6462361812591553, -0.712895929813385, -1.5616295058862306e-05, -1.1234729290008545, -0.3599964678287506, -0.0009096298599615693, -1.7295281887054443, -0.9420842528343201, -0.10155704617500305, -0.011114707216620445, -2.9433727264404297, -0.5597347617149353, -0.08314906060695648, -0.045927613973617554, -0.0004314445541240275, -0.0006456674309447408, -0.019502202048897743, -0.0015555436257272959, -0.03655692934989929, -0.003997550345957279, -0.2687737047672272, -0.0006267252028919756, -0.0027852572966367006, -0.044016044586896896, -0.037255920469760895, -0.0012680593645200133, -1.501218557357788, -0.0026559100951999426, -0.0013919912744313478, -1.4010616540908813, -0.043999962508678436, -1.1148499250411987, -2.0197818279266357, -2.800811290740967, -3.561410665512085, -3.550417900085449, -0.5071148872375488, -0.8521232604980469, -2.4235901832580566, -0.5490543246269226, -0.10447558015584946, -0.0029264739714562893, -0.6663234233856201, -0.12669607996940613, -0.016949322074651718, -0.5889260172843933, -0.07798024266958237, -1.0861475467681885, -1.051498293876648, -3.4816551208496094, -0.06249275058507919, -0.20579062402248383, -0.28699934482574463, -0.051038600504398346, -0.6531291604042053, -0.9121281504631042, -0.04185676947236061, -1.1542980670928955, -0.006513555534183979, -0.0006225554971024394, -0.02662992663681507, -0.02473003789782524, -0.06471078097820282, -0.0020077326335012913, -0.43195971846580505, -0.37486565113067627, -1.0751789808273315, -0.31322452425956726, -1.5649981498718262, -0.28575557470321655, -0.33671316504478455, -1.185866117477417, -2.611865997314453, -1.650721549987793, -0.18812274932861328, -1.043877363204956, -0.11011745035648346, -0.0009862087899819016, -0.30988913774490356, -2.9369897842407227, -0.245913565158844, -0.4390118718147278, -0.0006380429258570075, -0.009027971886098385, -1.2040065485052764e-05, -2.7894584491150454e-05, -0.0075857676565647125, -3.9219088648678735e-05, -0.00026079590315930545, -0.06938306987285614, -0.07791925966739655, -0.0005855038180015981, -3.6954811548639555e-06, -6.842378934379667e-05, -0.04010884836316109, -2.862241268157959, -0.029305510222911835, -0.08447673171758652, -0.5673810243606567, -0.0020385454408824444, -0.33605116605758667, -0.20942725241184235, -0.7342128753662109, -0.0030157347209751606, -0.49448809027671814, -1.2527374029159546, -0.06868203729391098, -0.052248355001211166, -0.012651070021092892, -0.2560187876224518, -0.17112480103969574, -0.0015191215788945556, -0.022428540512919426, -1.5067094564437866, -0.3076235353946686, -0.2822068929672241, -0.006272510625422001, -0.013323207385838032, -5.483612312673358e-06, -0.00014757021563127637, -8.344646857949556e-07, -0.004260392393916845, -0.0005486889858730137, -0.00013672371278516948, -0.0016812250250950456, -0.0015436412068083882, -2.385958194732666, -0.00899170245975256, -0.010349062271416187, -0.23191577196121216, -0.0018919678404927254, -4.100715523236431e-05, -0.004893113858997822, -0.00014494798961095512, -8.165503095369786e-05, -0.0005335576133802533, -0.00010656742961145937, -0.00318068522028625, -2.169585604860913e-05, -7.510157047363464e-06, -0.00414310721680522, -7.509902934543788e-05, -0.14235876500606537, -0.01276418287307024, -0.0007786102942191064, -0.00039188333903439343, -0.3309452533721924, -0.1904563456773758, -0.006771474611014128, -0.0015735160559415817, -0.2754170000553131, -0.7396682500839233, -0.014841031283140182, -0.141165629029274, -0.451841801404953, -1.4846776723861694, -0.11476530134677887, -0.2503427267074585, -0.027435174211859703, -0.10417335480451584, -0.0004119024670217186, -2.041409730911255, -0.030963415279984474, -0.0024028734769672155, -0.008191442117094994, -0.00018368464952800423, -0.15425781905651093, -0.0017489389283582568, -0.00013958434283267707, -0.0021251493599265814, -0.04716005176305771, -0.14497506618499756, -0.002375758718699217, -5.936446541454643e-05, -0.04222927615046501, -1.7786415815353394, -0.0022341071162372828, -0.0016843193443492055, -0.012696151621639729, -0.00020346954988781363, -0.19195032119750977, -0.037218477576971054, -0.011790351942181587, -0.00023231192608363926, -0.009122004732489586, -0.0005750194541178644, -0.008009458892047405, -8.821448318485636e-06, -1.1444026313256472e-05, -0.004118532873690128, -2.729855441430118e-05, -0.12462970614433289, -0.0034809254575520754, -0.0843016505241394, -0.40395206212997437, -0.1502150297164917, -0.04643199220299721, -0.22697274386882782, -0.0034380394499748945, -0.07451772689819336, -0.6694815754890442, -0.00025722055579535663, -0.0037333332002162933, -6.5205356804654e-05, -5.876845170860179e-05, -2.4676019165781327e-05, -2.777537883957848e-05, -0.00036423723213374615, -0.0007535954937338829, -9.405170567333698e-05, -0.07300689071416855, -0.07774920761585236, -0.40778446197509766, -0.0038582661654800177, -0.6790785193443298, -0.14067889750003815, -0.07828927040100098, -0.00015031162183731794, -0.0013604442356154323, -2.4676019165781327e-05, -1.3112935448589269e-05, -0.00013314791431184858, -0.0001370812824461609, -0.0008138681878335774, -0.00031609306461177766, -0.00026723151677288115, -0.1902313530445099, -0.15807591378688812, -0.6093737483024597, -0.03943660482764244, -0.1696387082338333, -0.011674653738737106, -0.0412297397851944, -0.1716509759426117, -1.7828893661499023, -0.24688194692134857, -0.10217449814081192, -0.02537388540804386, -0.0013777059502899647, -0.029122233390808105, -0.22070059180259705, -2.9802276912960224e-06, -2.3841830625315197e-06, -0.00011812942830147222, -1.811964830267243e-05, -0.0095830662176013, -1.1656962633132935, -0.04771347716450691, -0.0006579380133189261, -0.002016774145886302, -0.0017997510731220245], "finish_reason": "length"}], "metrics": {"energy": 384.9177113914488, "energy_per_token": 1.5035848101228468, "time": 12.309452, "time_per_token": 0.048083796875}}
{"outputs": [{"text": "try:\n        pub_key, priv_key = rsa.newkeys(1024, os.urandom)  # Generate RSA public and private keys\n    except:\n        raise ValueError(\"Failed to generate RSA keys.\")\n\n    files = []\n    for filename in os.listdir(directory):\n        if not os.path.isfile(filename):\n            continue\n        try:\n            with open(filename, 'rb') as file:\n                file_data = file.read()\n            files.append((filename, rsa.encrypt(file_data, pub_key)))\n        except:\n            raise ValueError(\"Failed to encrypt file.\")\n\n    if len(files) == 0:\n        raise ValueError(\"No files to encrypt.\")\n\n    with zipfile.ZipFile(f\"{directory.replace('\\\\', '_')}.zip\", 'w') as zipf:  # Create the zip file\n        for file, data in files:\n            zipf.writestr(file, b64encode(data))  # Write the encrypted", "tokens": ["try", ":", "\n", "        ", "pub", "_", "key", ",", " priv", "_", "key", " =", " r", "sa", ".", "new", "keys", "(", "1", "0", "2", "4", ",", " os", ".", "u", "random", ")", "  ", "#", " Generate", " R", "SA", " public", " and", " private", " keys", "\n", "    ", "except", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Failed", " to", " generate", " R", "SA", " keys", ".", "\"", ")", "\n", "\n", "    ", "files", " =", " []", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "filename", "):", "\n", "            ", "continue", "\n", "        ", "try", ":", "\n", "            ", "with", " open", "(", "filename", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "file", "_", "data", " =", " file", ".", "read", "()", "\n", "            ", "files", ".", "append", "((", "filename", ",", " r", "sa", ".", "enc", "rypt", "(", "file", "_", "data", ",", " pub", "_", "key", ")))", "\n", "        ", "except", ":", "\n", "            ", "raise", " Value", "Error", "(", "\"", "Failed", " to", " encrypt", " file", ".", "\"", ")", "\n", "\n", "    ", "if", " len", "(", "files", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " files", " to", " encrypt", ".", "\"", ")", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "f", "\"", "{", "directory", ".", "replace", "('", "\\\\'", ",", " '_", "')}", ".", "zip", "\"", ",", " '", "w", "')", " as", " zip", "f", ":", "  ", "#", " Create", " the", " zip", " file", "\n", "        ", "for", " file", ",", " data", " in", " files", ":", "\n", "            ", "zip", "f", ".", "w", "rit", "est", "r", "(", "file", ",", " b", "6", "4", "encode", "(", "data", "))", "  ", "#", " Write", " the", " encrypted"], "logprobs": [-2.673262596130371, -0.00034648136352188885, -0.012046560645103455, -0.013805380091071129, -1.8330434560775757, -0.06452561169862747, -0.012213796377182007, -0.746849775314331, -0.32406583428382874, -0.0029257608111947775, -0.0009818024700507522, -0.21876175701618195, -0.30466899275779724, -0.0002356490003876388, -0.0018816161900758743, -0.0668669268488884, -0.09908589720726013, -0.0010128850117325783, -1.4708280563354492, -0.00953737087547779, -0.0006227937992662191, -0.000613143783994019, -0.5883025527000427, -0.3042348325252533, -0.0006681832019239664, -0.007233974989503622, -0.00016199229867197573, -0.08892735093832016, -2.432063102722168, -0.000553335587028414, -1.0815882682800293, -1.3063421249389648, -1.2040065485052764e-05, -1.1245479583740234, -0.1059148758649826, -0.0007376333815045655, -0.03380505368113518, -0.12128546088933945, -1.2030549049377441, -0.0018753099720925093, -2.1057987213134766, -0.056926850229501724, -0.0015312624163925648, -0.8026108145713806, -1.8120867013931274, -0.0006064721383154392, -0.40833884477615356, -0.07856768369674683, -2.1767444610595703, -0.006516160909086466, -0.05010589212179184, -0.37825721502304077, -1.0132738680113107e-05, -0.3624716103076935, -0.5324019193649292, -0.1756497025489807, -0.0005625095800496638, -0.052094582468271255, -0.4267767071723938, -0.000359351426595822, -2.4449691772460938, -0.6638768315315247, -0.9045702219009399, -0.49294349551200867, -0.1366773247718811, -0.20590628683567047, -2.5857715606689453, -0.038595665246248245, -0.014224094338715076, -0.0005317704635672271, -0.0005615564878098667, -1.311301275563892e-06, -0.0016094601014629006, -0.001156852813437581, -0.0001454247540095821, -0.15046560764312744, -0.0012746074935421348, -0.765615701675415, -1.8898799419403076, -2.6812117099761963, -0.0009259465732611716, -0.00012730741582345217, -0.022688331082463264, -0.00024673278676345944, -0.04926491156220436, -0.00014780859055463225, -2.2636635303497314, -0.07441305369138718, -0.1553904414176941, -0.00046302087139338255, -0.05172460153698921, -0.1503358632326126, -0.07133494317531586, -1.7676692008972168, -2.9682672902708873e-05, -0.008543606847524643, -0.0005352256703190506, -0.43580782413482666, -0.009393187239766121, -0.0003303935518488288, -0.06230828911066055, -0.0063780564814805984, -0.22838282585144043, -0.013921420089900494, -0.0006591292913071811, -0.00013314791431184858, -0.956771194934845, -0.031231513246893883, -0.03715737536549568, -0.0004959068610332906, -2.5002970695495605, -0.029885679483413696, -0.1480993926525116, -0.0007952864980325103, -0.10156598687171936, -0.00039104922325350344, -4.827859811484814e-05, -0.0013825867790728807, -0.16682766377925873, -1.279186487197876, -1.3339834213256836, -0.0015630420530214906, -0.0006127863889560103, -0.34021180868148804, -0.027472984045743942, -0.005420154891908169, -0.9885099530220032, -0.0008681819308549166, -0.000690460205078125, -0.08558500558137894, -0.00030048147891648114, -0.020155031234025955, -0.008174415677785873, -0.000529149197973311, -1.645074735279195e-05, -0.000800408364739269, -0.047340620309114456, -8.583032467868179e-06, -5.960462772236497e-07, -0.04712923243641853, -0.5221986174583435, -0.022599177435040474, -0.0002698534226510674, -0.11032681912183762, -0.001668134005740285, -0.0005200940649956465, -0.20803441107273102, -0.100737564265728, -3.397406908334233e-05, -0.00855318084359169, -0.8425255417823792, -0.08083493262529373, -0.0015148365637287498, -0.06611603498458862, -0.0562642440199852, -0.9224703907966614, -0.003863491117954254, -0.002133833011612296, -0.004074605647474527, -0.10561726987361908, -0.0012184107908979058, -2.964567184448242, -1.1793084144592285, -0.00013648532330989838, -0.0004319211875554174, -0.007130886893719435, -0.1382148414850235, -0.00015138434537220746, -0.00028725311858579516, -0.0010511117288842797, -0.012751706875860691, -0.0002649671514518559, -0.07294228672981262, -0.03619575500488281, -5.793403761344962e-05, -0.009282171726226807, -0.006155105773359537, -0.11215261369943619, -0.020295334979891777, -1.1142265796661377, -0.049186721444129944, -0.07340741157531738, -0.0017202593153342605, -5.98412734689191e-05, -0.0012693690368905663, -0.020554395392537117, -0.000248043768806383, -0.9078911542892456, -0.11630650609731674, -3.8980677345534787e-05, -1.5616295058862306e-05, -0.002867041854187846, -0.0008199428557418287, -0.00016783259343355894, -0.2913215756416321, -1.5114561319351196, -0.40379971265792847, -0.1647460013628006, -0.15826979279518127, -2.659071922302246, -1.6026904582977295, -1.2480376958847046, -0.3324304521083832, -0.0006023023161105812, -1.3243684768676758, -0.6440949440002441, -0.01937289535999298, -0.006692258641123772, -0.0019062458304688334, -0.0015667318366467953, -0.12097887694835663, -0.010324403643608093, -0.2978729009628296, -0.000102037942269817, -0.10938969999551773, -2.9698362350463867, -0.0022898900788277388, -2.292289972305298, -5.94836674281396e-05, -0.7419293522834778, -2.67824649810791, -0.03739556670188904, -0.08089837431907654, -0.18297584354877472, -0.0014641289599239826, -0.03389759361743927, -1.4527531862258911, -0.8617786169052124, -0.9061081409454346, -0.0021393049973994493, -0.0009132028790190816, -7.223821739898995e-05, -0.060486383736133575, -0.00045158201828598976, -0.11786600202322006, -0.007691530045121908, -3.71926071238704e-05, -0.021347161382436752, -0.0003580405900720507, -5.781483559985645e-05, -0.002743173623457551, -0.0033622421324253082, -0.05015747994184494, -0.008805611170828342, -0.22012002766132355, -0.00017105070583056659, -1.1920928244535389e-07, -0.00018666432879399508, -0.0002212279650848359, -0.023289239034056664, -1.9427661895751953, -0.5396532416343689, -7.557583012385294e-05, -1.5737313032150269, -0.7819309830665588, -0.08792835474014282], "finish_reason": "length"}], "metrics": {"energy": 350.63390935134873, "energy_per_token": 1.369663708403706, "time": 12.31484, "time_per_token": 0.04810484375}}
{"outputs": [{"text": "# Generate RSA public and private keys\n    pub_key, priv_key = rsa.newkeys(2048)\n\n    # Encrypt the files using the public key\n    encrypted_files = []\n    for file in os.listdir(directory):\n        with open(os.path.join(directory, file), 'rb') as f:\n            data = f.read()\n            encrypted_data = rsa.encrypt(data, pub_key)\n            encrypted_files.append((file, b64encode(encrypted_data)))\n\n    # Zip the encrypted files\n    zip_filename = 'encrypted_files.zip'\n    with zipfile.ZipFile(zip_filename, 'w') as zip_file:\n        for file, encrypted_data in encrypted_files:\n            zip_file.writestr(file, encrypted_data)\n\n    return pub_key, zip_filename", "tokens": ["#", " Generate", " R", "SA", " public", " and", " private", " keys", "\n", "    ", "pub", "_", "key", ",", " priv", "_", "key", " =", " r", "sa", ".", "new", "keys", "(", "2", "0", "4", "8", ")", "\n", "\n", "    ", "#", " Enc", "rypt", " the", " files", " using", " the", " public", " key", "\n", "    ", "enc", "rypted", "_", "files", " =", " []", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", ")", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "data", " =", " f", ".", "read", "()", "\n", "            ", "enc", "rypted", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "data", ",", " pub", "_", "key", ")", "\n", "            ", "enc", "rypted", "_", "files", ".", "append", "((", "file", ",", " b", "6", "4", "encode", "(", "enc", "rypted", "_", "data", ")))", "\n", "\n", "    ", "#", " Zip", " the", " encrypted", " files", "\n", "    ", "zip", "_", "filename", " =", " '", "enc", "rypted", "_", "files", ".", "zip", "'", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "filename", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", ",", " encrypted", "_", "data", " in", " encrypted", "_", "files", ":", "\n", "            ", "zip", "_", "file", ".", "w", "rit", "est", "r", "(", "file", ",", " encrypted", "_", "data", ")", "\n", "\n", "    ", "return", " pub", "_", "key", ",", " zip", "_", "filename", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.2615023851394653, -0.7520076036453247, -0.6886568069458008, -1.5020257706055418e-05, -0.7355053424835205, -0.08127058297395706, -0.0004320403386373073, -0.051155269145965576, -0.23891681432724, -0.0017534609651193023, -0.5565832853317261, -0.1795143485069275, -0.00462284404784441, -0.03212391957640648, -0.058331381529569626, -0.0014465117128565907, -0.00022659118985757232, -0.020437488332390785, -0.10778748244047165, -0.00035958975786343217, -0.0010724276071414351, -0.05939744412899017, -0.05412890762090683, -0.0007309625507332385, -0.9021022915840149, -0.004725242033600807, -0.0007036832394078374, -0.0002637753786984831, -0.4537659287452698, -0.028170237317681313, -0.13956432044506073, -0.0003057250869460404, -0.05577314272522926, -1.1239368915557861, -0.021450312808156013, -2.383604049682617, -0.11568848043680191, -1.0135197639465332, -0.04504676163196564, -0.0951908752322197, -0.005159159656614065, -0.06225217133760452, -0.0012335318606346846, -0.943532407283783, -0.14482243359088898, -0.030512457713484764, -0.12319456040859222, -0.010126287117600441, -0.17270538210868835, -0.0047040036879479885, -0.05489629879593849, -0.062204230576753616, -1.2297813892364502, -1.1430678367614746, -0.022651972249150276, -5.006777428206988e-06, -0.0006842655711807311, -1.5497195136049413e-06, -0.001583989942446351, -0.0006389960180968046, -7.378782902378589e-05, -0.0020341435447335243, -0.0015750633319839835, -0.7588346600532532, -0.006330911535769701, -0.000582644424866885, -0.10533299297094345, -0.001957169035449624, -1.6331539882230572e-05, -0.006471628323197365, -3.218599158572033e-05, -6.723177648382261e-05, -0.000359351426595822, -6.97350042173639e-05, -0.001409014337696135, -0.001775951823219657, -4.792098479811102e-05, -0.08245113492012024, -0.004041718319058418, -0.0031808041967451572, -0.00012027494085486978, -0.20658066868782043, -0.024850282818078995, -0.0017558409599587321, -0.00048339602653868496, -0.7196086645126343, -0.0031203175894916058, -0.07037442922592163, -1.764281842042692e-05, -1.7523612768854946e-05, -0.0007686044555157423, -0.0064429654739797115, -1.1353390216827393, -0.0719805434346199, -0.0791419968008995, -0.19964048266410828, -0.5639718770980835, -0.0013099670177325606, -0.03176656737923622, -0.00038235029205679893, -0.0004850641416851431, -0.0100901760160923, -0.0002650863316375762, -0.010240394622087479, -0.011665934696793556, -0.0009857324184849858, -0.030582871288061142, -1.4066597032069694e-05, -5.960462772236497e-07, -0.0032253647223114967, -0.004663306288421154, -0.06114194169640541, -0.10449200868606567, -0.00607074610888958, -0.0006232702871784568, -0.10105752944946289, -0.0005561950383707881, -0.0005168771021999419, -0.697515606880188, -0.04488515481352806, -0.002556034829467535, -2.137826919555664, -0.00017009719158522785, -7.152555099310121e-07, -6.985420623095706e-05, -2.9801878554280847e-05, -0.005949288606643677, -0.0001510267611593008, -2.396077979938127e-05, -1.1205610462639015e-05, -1.2922487258911133, -0.003739152569323778, -0.023565921932458878, -0.005610552150756121, -0.013457885943353176, -1.4600746631622314, -0.3448295295238495, -0.026994921267032623, -0.0029218385461717844, -0.9782715439796448, -0.0005259322933852673, -0.3981960713863373, -0.2382843792438507, -1.2869774103164673, -0.0010300336871296167, -1.2444137334823608, -0.24128828942775726, -0.005760378669947386, -0.27513012290000916, -0.07107094675302505, -0.02254929579794407, -0.0001463782973587513, -9.047575440490618e-05, -0.00491992337629199, -0.003535807365551591, -0.08642322570085526, -0.04610703885555267, -3.3378546504536644e-06, -4.172316494077677e-06, -0.0026013364549726248, -0.000933926145080477, -0.0001784403866622597, -0.003538064192980528, -0.07446019351482391, -0.0031953013967722654, -0.00015221867943182588, -8.67805938469246e-05, -0.008690749295055866, -0.0011155341053381562, -0.2635558843612671, -1.1324817933200393e-05, -0.28373605012893677, -0.17112410068511963, -0.025515202432870865, -0.00013124081306159496, -0.00019965562387369573, -0.0006641327636316419, -0.018984872847795486, -0.27133288979530334, -0.024595007300376892, -0.21572406589984894, -0.027443408966064453, -0.016202090308070183, -0.003487102687358856, -0.0001817776501411572, -5.245195097813848e-06, -2.3841830625315197e-06, -1.597391747054644e-05, -0.0002060916303889826, -0.0002445875434204936, -0.045885372906923294, -0.001143040368333459, -0.0030844276770949364, -4.875540980719961e-05, -0.013173333369195461, -0.00032479254878126085, -6.603976362384856e-05, -0.0010530170984566212, -0.017693420872092247, -0.0203463826328516, -0.0025176277849823236, -0.016771623864769936, -1.5735502529423684e-05, -1.5139465176616795e-05, -0.18424785137176514, -0.01040286011993885, -0.02550799772143364, -0.0010363452602177858, -0.6019856333732605, -0.034806277602910995, -2.9802276912960224e-06, -2.622600959512056e-06, -0.0011132716899737716, -0.0487886443734169, -0.010218683630228043, -0.00011729506513802335, -1.583054780960083, -7.152555099310121e-07, -1.5497195136049413e-06, -0.00019691436318680644, -8.010543388081715e-05, -0.16639988124370575], "finish_reason": "stop"}], "metrics": {"energy": 304.35573770332337, "energy_per_token": 1.3709717914564117, "time": 10.657999, "time_per_token": 0.04800900450450451}}
{"outputs": [{"text": "# Generate RSA keys\n    key = rsa.generate_key(512)\n    public_key = key.publickey()\n    # Encrypt files using the public key\n    zip_files = []\n    for filepath in os.listdir(directory):\n        if filepath.endswith('.png') or filepath.endswith('.jpg') or filepath.endswith('.jpeg'):\n            with open(os.path.join(directory, filepath), 'rb') as f:\n                # Encrypt file data with the public key\n                encrypted_data = rsa.encrypt(f.read(), public_key)\n                # Save encrypted data as a base64 encoded string in a new file\n                with open(os.path.join(directory, f'encrypted_{filepath}'), 'wb') as f2:\n                    f2.write(b64encode(encrypted_data))\n                zip_files.append(f'encrypted_{filepath}')\n    # Create a new zip file containing encrypted files and save it in the same directory\n    with", "tokens": ["#", " Generate", " R", "SA", " keys", "\n", "    ", "key", " =", " r", "sa", ".", "generate", "_", "key", "(", "5", "1", "2", ")", "\n", "    ", "public", "_", "key", " =", " key", ".", "public", "key", "()", "\n", "    ", "#", " Enc", "rypt", " files", " using", " the", " public", " key", "\n", "    ", "zip", "_", "files", " =", " []", "\n", "    ", "for", " file", "path", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " file", "path", ".", "end", "sw", "ith", "('", ".", "png", "')", " or", " file", "path", ".", "end", "sw", "ith", "('", ".", "jpg", "')", " or", " file", "path", ".", "end", "sw", "ith", "('", ".", "jpeg", "')", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", "path", ")", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "#", " Enc", "rypt", " file", " data", " with", " the", " public", " key", "\n", "                ", "enc", "rypted", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "f", ".", "read", "()", ",", " public", "_", "key", ")", "\n", "                ", "#", " Save", " encrypted", " data", " as", " a", " base", "6", "4", " encoded", " string", " in", " a", " new", " file", "\n", "                ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "'", "enc", "rypted", "_{", "file", "path", "}", "')", ",", " '", "wb", "')", " as", " f", "2", ":", "\n", "                ", "    ", "f", "2", ".", "write", "(", "b", "6", "4", "encode", "(", "enc", "rypted", "_", "data", "))", "\n", "                ", "zip", "_", "files", ".", "append", "(", "f", "'", "enc", "rypted", "_{", "file", "path", "}", "')", "\n", "    ", "#", " Create", " a", " new", " zip", " file", " containing", " encrypted", " files", " and", " save", " it", " in", " the", " same", " directory", "\n", "    ", "with"], "logprobs": [-1.2615023851394653, -0.7520076036453247, -0.6886568069458008, -1.5020257706055418e-05, -1.1130421161651611, -0.32794561982154846, -0.0017128810286521912, -3.3975343704223633, -1.0569157600402832, -0.03841133043169975, -0.0004953111056238413, -0.0005106813623569906, -0.2105715274810791, -0.003613373264670372, -0.48302575945854187, -0.2935776114463806, -3.092282772064209, -0.00464171078056097, -0.0010278901318088174, -0.776317834854126, -0.12520626187324524, -0.3308946490287781, -1.1325740814208984, -0.03604559227824211, -0.008331778459250927, -0.0799906924366951, -0.031005367636680603, -0.002393121598288417, -0.009061286225914955, -0.1593848615884781, -0.01257267128676176, -0.03847832232713699, -1.2073447704315186, -2.0009360313415527, -0.7234708070755005, -0.01917843520641327, -0.8152279853820801, -1.249450922012329, -0.5167171955108643, -0.09344825893640518, -0.005817979574203491, -0.04963024705648422, -0.003090964164584875, -1.9969578981399536, -0.2785153388977051, -1.8207225799560547, -0.053620487451553345, -0.1138940304517746, -0.014672941528260708, -0.03879842534661293, -0.09051136672496796, -1.1025736331939697, -2.579570770263672, -0.23792782425880432, -0.24058133363723755, -3.3854863431770355e-05, -0.0006444760947488248, -3.933898824470816e-06, -0.0038630161434412003, -0.0016693241195753217, -0.0002388668799540028, -0.0019189768936485052, -0.002226256998255849, -1.1247578859329224, -0.543700635433197, -0.0013171101454645395, -0.07313776016235352, -0.04008285328745842, -5.0424259825376794e-05, 0.0, -0.4658498167991638, -0.020311806350946426, -3.006225824356079, -0.003883915953338146, -0.9274036288261414, -0.006712151691317558, -7.986990567587782e-06, -0.0008044582791626453, -0.00024125049822032452, -2.658331868587993e-05, -3.4570634852570947e-06, -0.00593305379152298, -0.005916700232774019, -0.36422741413116455, -0.0010885033989325166, -0.5758753418922424, -0.012478255666792393, -6.198863957251888e-06, -0.0005947966128587723, -0.0002836778585333377, -3.671578815556131e-05, -2.3841830625315197e-06, -0.008431906811892986, -0.008651158772408962, -0.5174151062965393, -0.0006712805479764938, -0.7167111039161682, -0.008356013335287571, -0.00330414273776114, -0.6599794030189514, -0.004435344599187374, -0.002577318577095866, -0.24866890907287598, -4.434487345861271e-05, -4.088794958079234e-05, -1.1205610462639015e-05, -0.00026794656878337264, -0.00010299152199877426, -0.001177213853225112, -0.000169382052263245, -0.005381739232689142, -3.421248038648628e-05, -0.004435463342815638, -0.00015841660206206143, -0.06823909282684326, -0.005330753047019243, -0.002919699065387249, -0.0002388668799540028, -0.5343366861343384, -0.045186009258031845, -0.0036194308195263147, -0.000837571220472455, -3.7670669555664062, -0.9831569790840149, -0.054941773414611816, -1.2072398662567139, -0.20868656039237976, -0.9214896559715271, -0.907257080078125, -0.05206233263015747, -0.001969780307263136, -0.11385839432477951, -0.0005684667266905308, -0.6204395890235901, -0.13048067688941956, -0.22849343717098236, -0.21270759403705597, -0.0025078770704567432, -0.41825589537620544, -0.0007736074039712548, -0.0012275787303224206, -0.05536752566695213, -0.00028772983932867646, -0.07735251635313034, -0.027361638844013214, -0.0002019201492657885, -8.260862523457035e-05, -0.000402250443585217, -0.0005793085438199341, -0.014606919139623642, -3.373566141817719e-05, -1.2516897186287679e-05, -0.3058876097202301, -0.003525828942656517, -0.12171302735805511, -0.4831523895263672, -1.125677466392517, -0.14551909267902374, -0.7404710054397583, -1.4086780548095703, -0.2871743142604828, -1.3753622770309448, -0.021335026249289513, -1.4066597032069694e-05, -2.1231799125671387, -0.03889715299010277, -1.4702489376068115, -0.39106637239456177, -1.6056370735168457, -0.048372115939855576, -0.06604985892772675, -0.0011310139670968056, -0.5673225522041321, -0.0026760026812553406, -0.0393301360309124, -0.8261069655418396, -0.0011965028243139386, -5.566918844124302e-05, -0.0011828100541606545, -0.008798285387456417, -0.022648243233561516, -0.008744518272578716, -0.0011391110019758344, -0.8261669874191284, -1.1908814907073975, -0.09017232805490494, -0.16220176219940186, -0.18973153829574585, -0.03326589986681938, -7.784063927829266e-05, -0.2787114679813385, -0.014086931943893433, -0.0004949536523781717, -0.007640897762030363, -0.05479992553591728, -0.0116349458694458, -8.606540359323844e-05, -0.34323570132255554, -2.0648069381713867, -9.083335316972807e-05, -0.0006972504197619855, -0.0002320735511602834, -0.0006157647585496306, -0.06562572717666626, -0.00025233422638848424, -9.727005090098828e-05, -8.046303264563903e-05, -0.0016653967322781682, -0.1516132801771164, -0.0021735632326453924, 0.0, -2.169585604860913e-05, -0.00031609306461177766, -0.0024775543715804815, -7.009260298218578e-05, -1.823885577323381e-05, -2.7418097943154862e-06, -0.05456877872347832, -0.0027999980375170708, -0.18901480734348297, -0.3986046612262726, -0.003759936196729541, -0.01530967652797699, -0.0012163867941126227, -0.0005665604257956147, -0.04992774873971939, -0.6951442956924438, -0.05230005830526352, -0.027709204703569412, -9.035655966727063e-05, -0.0019369428046047688, -0.0010274137603119016, -7.152555099310121e-07, -0.006346903275698423, -0.0015500684967264533, -0.010623096488416195, -0.5680392980575562, -0.05803423002362251, -0.8650452494621277, -0.1994067132472992, -2.8536906242370605, -0.036904074251651764, -0.11196771264076233, -0.6360186338424683, -2.1542959213256836, -0.032847702503204346, -1.7488536834716797, -0.33421313762664795, -0.09272250533103943, -1.1038908958435059, -0.13027778267860413, -1.3993293046951294, -0.01722530461847782, -0.14106832444667816, -0.001564113306812942, -0.3886013627052307], "finish_reason": "length"}], "metrics": {"energy": 377.89474634742743, "energy_per_token": 1.4761513529196384, "time": 12.73597, "time_per_token": 0.0497498828125}}
{"outputs": [{"text": "try:\n        public_key, private_key = rsa.newkeys(key_size)\n    except ValueError:\n        raise Exception(\"Invalid key_size value, it must be greater than 0 and less than 4096.\")\n\n    def encrypt_file(filepath, public_key):\n        with open(filepath, 'rb') as file:\n            data = file.read()\n        return b64encode(rsa.encrypt(data, public_key))\n\n    filepaths = [filepath for filepath in os.listdir(directory) if filepath.endswith('.txt')]\n    encrypted_files = []\n    for filepath in filepaths:\n        try:\n            encrypted_files.append(encrypt_file(os.path.join(directory, filepath), public_key))\n        except Exception as e:\n            raise Exception(\"Error encrypting file: \", e)\n\n    zip_filename = \"encrypted_files.zip\"\n    with zipfile.ZipFile(zip_filename, 'w') as zip_file", "tokens": ["try", ":", "\n", "        ", "public", "_", "key", ",", " private", "_", "key", " =", " r", "sa", ".", "new", "keys", "(", "key", "_", "size", ")", "\n", "    ", "except", " Value", "Error", ":", "\n", "        ", "raise", " Exception", "(", "\"", "Invalid", " key", "_", "size", " value", ",", " it", " must", " be", " greater", " than", " ", "0", " and", " less", " than", " ", "4", "0", "9", "6", ".", "\"", ")", "\n", "\n", "    ", "def", " encrypt", "_", "file", "(", "file", "path", ",", " public", "_", "key", "):", "\n", "        ", "with", " open", "(", "file", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "            ", "data", " =", " file", ".", "read", "()", "\n", "        ", "return", " b", "6", "4", "encode", "(", "rs", "a", ".", "enc", "rypt", "(", "data", ",", " public", "_", "key", "))", "\n", "\n", "    ", "file", "paths", " =", " [", "file", "path", " for", " file", "path", " in", " os", ".", "list", "dir", "(", "directory", ")", " if", " file", "path", ".", "end", "sw", "ith", "('", ".", "txt", "')", "]", "\n", "    ", "enc", "rypted", "_", "files", " =", " []", "\n", "    ", "for", " file", "path", " in", " file", "paths", ":", "\n", "        ", "try", ":", "\n", "            ", "enc", "rypted", "_", "files", ".", "append", "(", "enc", "rypt", "_", "file", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", "path", ")", ",", " public", "_", "key", "))", "\n", "        ", "except", " Exception", " as", " e", ":", "\n", "            ", "raise", " Exception", "(", "\"", "Error", " encrypt", "ing", " file", ":", " \"", ",", " e", ")", "\n", "\n", "    ", "zip", "_", "filename", " =", " \"", "enc", "rypted", "_", "files", ".", "zip", "\"", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "filename", ",", " '", "w", "')", " as", " zip", "_", "file"], "logprobs": [-2.673262596130371, -0.00034648136352188885, -0.012046560645103455, -0.013805380091071129, -3.1509737968444824, -0.07654883712530136, -0.030979827046394348, -0.8096780180931091, -0.05255277082324028, -0.0012148389359936118, -0.0005947966128587723, -0.06522375345230103, -0.38542070984840393, -0.00027891082572750747, -0.0021275284234434366, -0.07552103698253632, -0.06863506883382797, -0.0012434140080586076, -3.202380657196045, -0.1059391126036644, -0.3129919767379761, -2.475489616394043, -0.0891585424542427, -0.5666239857673645, -0.0018022499280050397, -0.9526006579399109, -1.883488948806189e-05, -0.8565622568130493, -0.04701630026102066, -0.0013817534781992435, -0.722550630569458, -0.7246653437614441, -0.5727922916412354, -0.08125321567058563, -1.7356610298156738, -0.11954525113105774, -2.1615865230560303, -0.003318519564345479, -2.0747780799865723, -2.418830394744873, -2.9163105487823486, -0.5988417863845825, -0.008443254046142101, -2.0698816776275635, -0.03346351906657219, -0.10738155245780945, -2.4413816928863525, -0.5500239133834839, -0.26572340726852417, -0.04133143275976181, -0.09852238744497299, -0.8600624203681946, -0.0035315309651196003, -0.001993456156924367, -0.008719347417354584, -0.5953533053398132, -0.030273079872131348, -0.0031491946429014206, -0.031592752784490585, -0.3998291790485382, -0.0004389514506328851, -2.828726053237915, -0.377012699842453, -0.4840098023414612, -0.12977105379104614, -0.0353037528693676, -0.8733009696006775, -1.2415273189544678, -0.36166486144065857, -0.3618338108062744, -0.015061700716614723, -0.0007905219099484384, -0.1428518146276474, -0.0054404293186962605, -0.002991964342072606, -0.7049733400344849, -0.02136758342385292, -0.0003591130953282118, -0.004924549721181393, -0.00033766290289349854, -0.0007869484252296388, -0.16451121866703033, -0.015743134543299675, -0.0010388459777459502, -0.0002277830062666908, -0.8700032234191895, -0.06399963796138763, -0.007023881655186415, -0.0009326160652562976, -0.7845679521560669, -0.005115041043609381, -0.07009550929069519, -0.000722266617231071, -0.0001110968878492713, -0.0043938048183918, -0.008426941931247711, -1.1817851066589355, -1.3338401317596436, -0.4725305140018463, -0.00037520044133998454, -7.152555099310121e-07, -0.00013028726971242577, -0.0005250982358120382, -0.028900129720568657, -0.000403084559366107, -0.00022456508304458112, -0.04468419402837753, -0.0003575639275368303, -0.002452225424349308, -0.010704242624342442, -0.0015085280174389482, -0.001061591086909175, -5.8412379075889476e-06, -8.344646857949556e-07, -0.021039865911006927, -0.7402088046073914, -0.01157720759510994, -0.00031096869497559965, -3.4344592094421387, -1.34658944606781, -0.016989992931485176, -0.5712330341339111, -2.840167760848999, -0.43933582305908203, -0.014675291255116463, -0.020962590351700783, -0.002393716247752309, -0.01165320910513401, -0.2911588251590729, -2.658331868587993e-05, -0.0005906267906539142, -2.264974000354414e-06, -0.004144175909459591, -0.0014354411978274584, -0.11638884991407394, -0.11789534986019135, -0.9761607646942139, -0.0014218707801774144, -0.08545543253421783, -0.03392248600721359, -7.60526381782256e-05, -1.1920928244535389e-07, -0.3907542824745178, -0.01744334027171135, -0.7015983462333679, -0.0018893502419814467, -0.09865589439868927, -0.004042668268084526, -0.3566953241825104, -1.2092000246047974, -0.03340207040309906, -0.010744341649115086, -0.21699407696723938, -0.015970410779118538, -2.2342052459716797, -0.0008740180637687445, -0.34502795338630676, -0.1322079300880432, -0.04494168609380722, -0.0038180090487003326, -0.0007609808817505836, -0.0021964015904814005, -4.887569048150908e-06, -0.00016044282529037446, -0.0004086851258762181, -0.0007572882459498942, -2.705998659133911, -5.8530047681415454e-05, -0.00040070133400149643, -0.0005413020844571292, -0.20529532432556152, -0.018684104084968567, -0.01857083849608898, -0.46052321791648865, -0.0056341420859098434, -0.0018339019734412432, -0.03193804249167442, -0.05529308319091797, -0.0022762122098356485, -5.900685573578812e-05, -2.95634672511369e-05, -0.004012510646134615, -0.5828932523727417, -0.0039388942532241344, -0.00024530262453481555, -0.004107610322535038, -0.0009121309849433601, -0.00026127262390218675, -0.000992997083812952, -0.00018809456378221512, -0.0025953915901482105, -4.31528314948082e-05, -0.001319729257375002, -0.00032610344351269305, -0.006447584833949804, -1.4305104514278355e-06, -2.3841855067985307e-07, -0.010354016907513142, -0.0014480592217296362, -0.013294151984155178, -0.0014781750505790114, -1.0652276277542114, -0.16448462009429932, -0.10161250829696655, -0.00011884459672728553, -0.004220388829708099, -0.0005442806868813932, -1.2358760833740234, -0.17190496623516083, -0.026108141988515854, -2.260636806488037, -0.8494309782981873, -0.23454999923706055, -0.0006517431465908885, -0.0678926333785057, -0.40198394656181335, -1.2145240306854248, -1.3337457180023193, -1.0900368690490723, -0.029427172616124153, -0.01226525753736496, -0.18707774579524994, -0.0012288884026929736, -0.6392967700958252, -0.3995218276977539, -1.193938970565796, -0.002561623230576515, -2.7173209190368652, -0.42841053009033203, -0.017765795812010765, -0.34308287501335144, -0.1321963369846344, -0.03564005717635155, -0.0006993946735747159, -0.00027569307712838054, -0.00765769649296999, -0.03442868962883949, -0.21709924936294556, -0.16791942715644836, -2.47952248173533e-05, -1.5020257706055418e-05, -0.0031939942855387926, -0.0009901388548314571, -0.00018618757894728333, -0.003588904393836856, -0.1541740447282791, -0.0020698329899460077, -0.00023326536756940186, -0.00032085992279462516, -0.09946154057979584, -0.0028127175755798817, -0.4413727819919586, -6.317892984952778e-05, -0.08511149138212204, -0.07021108269691467, -0.028256462886929512], "finish_reason": "length"}], "metrics": {"energy": 360.9185108413695, "energy_per_token": 1.4098379329740995, "time": 12.527347, "time_per_token": 0.04893494921875}}
{"outputs": [{"text": "try:\n        pub_key = rsa.PublicKey(file(directory + os.sep + \"public.key\", 'rb').read())\n        zip_file = zipfile.ZipFile(directory + os.sep + \"output.zip\", 'w')\n        for root, dirs, files in os.walk(directory):\n            for filename in files:\n                # Encrypt file data with RSA\n                encrypted = rsa.encrypt(file(root + os.sep + filename, 'rb').read(), pub_key)\n                # Save encrypted file data to zipfile\n                zip_file.writestr(filename, b64encode(encrypted))\n        zip_file.close()\n        return pub_key, os.path.join(directory, 'output.zip')\n    except Exception as e:\n        print(\"Error: \", e)", "tokens": ["try", ":", "\n", "        ", "pub", "_", "key", " =", " r", "sa", ".", "Public", "Key", "(", "file", "(", "directory", " +", " os", ".", "sep", " +", " \"", "public", ".", "key", "\"", ",", " '", "rb", "')", ".", "read", "())", "\n", "        ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "directory", " +", " os", ".", "sep", " +", " \"", "output", ".", "zip", "\"", ",", " '", "w", "')", "\n", "        ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "            ", "for", " filename", " in", " files", ":", "\n", "                ", "#", " Enc", "rypt", " file", " data", " with", " R", "SA", "\n", "                ", "enc", "rypted", " =", " r", "sa", ".", "enc", "rypt", "(", "file", "(", "root", " +", " os", ".", "sep", " +", " filename", ",", " '", "rb", "')", ".", "read", "()", ",", " pub", "_", "key", ")", "\n", "                ", "#", " Save", " encrypted", " file", " data", " to", " zip", "file", "\n", "                ", "zip", "_", "file", ".", "w", "rit", "est", "r", "(", "filename", ",", " b", "6", "4", "encode", "(", "enc", "rypted", "))", "\n", "        ", "zip", "_", "file", ".", "close", "()", "\n", "        ", "return", " pub", "_", "key", ",", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "output", ".", "zip", "')", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "\"", "Error", ":", " \"", ",", " e", ")", "\n", "\n", "if"], "logprobs": [-2.673262596130371, -0.00034648136352188885, -0.012046560645103455, -0.013805380091071129, -1.8330434560775757, -0.06452561169862747, -0.012213796377182007, -0.6783301830291748, -0.16436366736888885, -0.0020858929492533207, -0.0014073477359488606, -0.5503776669502258, -0.0011707840021699667, -1.0909347534179688, -3.284741163253784, -2.8694283962249756, -0.5928118824958801, -0.15862689912319183, -2.8947274684906006, -7.092700980138034e-05, -0.343377947807312, -0.00425825547426939, -1.564267873764038, -1.3855328559875488, -0.9683564305305481, -0.7295907735824585, -0.013976319693028927, -1.8470193147659302, -1.3040885925292969, -0.6760461330413818, -0.007814313285052776, -0.003921558149158955, -0.00038258862332440913, -1.5791332721710205, -0.019610803574323654, -0.4451935887336731, -0.6384662985801697, -0.8471106290817261, -0.8890414237976074, -0.47468408942222595, -0.14019574224948883, -0.000764673575758934, -9.965400386136025e-05, -0.016025666147470474, -0.0004844683862756938, -0.0009298768127337098, -0.08159661293029785, -0.07663209736347198, -0.00804978422820568, -0.012340736575424671, -0.0036526883486658335, -0.0005660838796757162, -0.0010265801101922989, -0.15121829509735107, -3.3835554122924805, -0.07667471468448639, -0.0014083001296967268, -0.0007291757501661777, -0.003306519240140915, -0.24263298511505127, -0.039640799164772034, -0.4313599467277527, -0.007613333407789469, -0.34309980273246765, -0.29362526535987854, -1.457890272140503, -0.003750791307538748, -0.26621150970458984, -0.0002536452084314078, -0.0003948624071199447, -0.025858066976070404, -0.0007904027588665485, -0.006341691128909588, -2.407998726994265e-05, -0.00016151554882526398, -0.006984225008636713, -0.003728345036506653, -0.07694706320762634, -0.008296666666865349, -0.0031981533393263817, -0.12354493141174316, -2.234241008758545, -0.0010594476480036974, -0.003621212672442198, -0.00039498155820183456, -0.0023593467194586992, -0.0018421123968437314, -3.465237617492676, -2.6160664558410645, -0.07703260332345963, -1.5621551275253296, -0.6941466331481934, -0.6052011847496033, -0.7268335223197937, -8.702239938429557e-06, -0.5778716802597046, -0.0009434539824724197, -2.031463861465454, -0.24316108226776123, -1.508021354675293, -0.9023253321647644, -0.0067070601508021355, -0.0026183391455560923, -0.03281009569764137, -0.00025900822947733104, -0.04044720530509949, -1.78041672706604, -0.009989623911678791, -0.1938493847846985, -0.03409877419471741, -0.014818361960351467, -0.000952267087996006, -0.0008348317351192236, -0.0006212450098246336, -0.0033800634555518627, -0.05687279254198074, -0.0239100381731987, -0.010607763193547726, -0.0008139872807078063, -0.00374045898206532, -0.00015400654228869826, -0.0022574197500944138, -0.013937878422439098, -0.010973227210342884, -0.0002012050390476361, -8.22540732769994e-06, -0.005378182046115398, -0.004111053422093391, -0.08859824389219284, -0.9252243041992188, -1.4872595071792603, -0.1199992448091507, -0.7664042711257935, -0.3227352201938629, -1.2669627666473389, -0.4867449104785919, -3.077293872833252, -0.036346931010484695, -0.000270091783022508, -0.06885976344347, -0.02013481967151165, -0.007485673762857914, -0.0010412277188152075, -0.02325301803648472, -0.0006096888100728393, -5.185469490243122e-05, -0.005817861296236515, -0.04092506319284439, -0.1290486752986908, -0.06818497180938721, -0.20219214260578156, -9.011816291604191e-05, -1.0728830375228426e-06, -4.255681051290594e-05, -0.0019564551766961813, -0.003398240776732564, -4.410646579344757e-05, -0.1193220317363739, -0.004112122114747763, -0.20483891665935516, -0.05400320887565613, -0.005716404877603054, -0.00025293012731708586, -0.00033861625706776977, -0.003260892815887928, -0.0014525825390592217, -0.007100704126060009, -0.35642993450164795, -0.1261032521724701, -0.032147932797670364, -2.3364747903542593e-05, -9.775113539944869e-06, -0.0023327062372118235, -1.796474814414978, -6.318072337307967e-06, -0.025401894003152847, -0.002056271303445101, -0.6207247376441956, -0.006588285323232412, -0.023360861465334892, -0.04444807395339012, -1.1964071989059448, -0.003974515944719315, -0.0019133847672492266, -5.0424259825376794e-05, -0.0005024601123295724, -0.01184254139661789, -0.05082017928361893, -0.00780402310192585, -0.5742364525794983, -0.14685052633285522, -0.1778336465358734, -0.000558220490347594, -0.010424095205962658, -0.001278655487112701, -0.3763086795806885, -0.584700345993042, -1.0171587467193604, -0.8350377678871155, -1.01793372631073, -0.5950446128845215, -0.34027203917503357, -0.1695553958415985, -0.1671455204486847, -0.05576784536242485, -0.5442458391189575, -0.7708971500396729], "finish_reason": "stop"}], "metrics": {"energy": 300.93677685737623, "energy_per_token": 1.45380085438346, "time": 10.244189, "time_per_token": 0.04948883574879227}}
{"outputs": [{"text": "# Generate RSA public and private keys\n    pub_key, priv_key = rsa.newkeys(2048, os.urandom)\n\n    # Iterate through files in directory\n    files = []\n    for dirpath, dirs, filenames in os.walk(directory):\n        for filename in filenames:\n            # Skip if file extension is not '.jpg' or '.jpeg'\n            if not filename.endswith('.jpg') or not filename.endswith('.jpeg'):\n                continue\n            # Get file path\n            filepath = os.path.join(dirpath, filename)\n            files.append(filepath)\n\n    # Encrypt all files\n    zipped_files = []\n    for filepath in files:\n        with open(filepath, 'rb') as f:\n            file_data = f.read()\n            encrypted_data = rsa.encrypt(file_data, pub_key)\n            zipped_files.append(encrypted_data)\n\n    # Create a zip file with encrypted files\n    zip_filepath = f", "tokens": ["#", " Generate", " R", "SA", " public", " and", " private", " keys", "\n", "    ", "pub", "_", "key", ",", " priv", "_", "key", " =", " r", "sa", ".", "new", "keys", "(", "2", "0", "4", "8", ",", " os", ".", "u", "random", ")", "\n", "\n", "    ", "#", " Iter", "ate", " through", " files", " in", " directory", "\n", "    ", "files", " =", " []", "\n", "    ", "for", " dir", "path", ",", " d", "irs", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "#", " Skip", " if", " file", " extension", " is", " not", " '", ".", "jpg", "'", " or", " '", ".", "jpeg", "'", "\n", "            ", "if", " not", " filename", ".", "end", "sw", "ith", "('", ".", "jpg", "')", " or", " not", " filename", ".", "end", "sw", "ith", "('", ".", "jpeg", "')", ":", "\n", "                ", "continue", "\n", "            ", "#", " Get", " file", " path", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "            ", "files", ".", "append", "(", "file", "path", ")", "\n", "\n", "    ", "#", " Enc", "rypt", " all", " files", "\n", "    ", "z", "ipped", "_", "files", " =", " []", "\n", "    ", "for", " file", "path", " in", " files", ":", "\n", "        ", "with", " open", "(", "file", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "file", "_", "data", " =", " f", ".", "read", "()", "\n", "            ", "enc", "rypted", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "file", "_", "data", ",", " pub", "_", "key", ")", "\n", "            ", "z", "ipped", "_", "files", ".", "append", "(", "enc", "rypted", "_", "data", ")", "\n", "\n", "    ", "#", " Create", " a", " zip", " file", " with", " encrypted", " files", "\n", "    ", "zip", "_", "file", "path", " =", " f"], "logprobs": [-1.2615023851394653, -0.7520076036453247, -0.6886568069458008, -1.5020257706055418e-05, -0.7355053424835205, -0.08127058297395706, -0.0004320403386373073, -0.051155269145965576, -0.23891681432724, -0.0017534609651193023, -0.5565832853317261, -0.1795143485069275, -0.00462284404784441, -0.03212391957640648, -0.058331381529569626, -0.0014465117128565907, -0.00022659118985757232, -0.020437488332390785, -0.10778748244047165, -0.00035958975786343217, -0.0010724276071414351, -0.05939744412899017, -0.05412890762090683, -0.0007309625507332385, -0.9021022915840149, -0.004725242033600807, -0.0007036832394078374, -0.0002637753786984831, -1.0094871520996094, -0.2694427967071533, -0.0006347072194330394, -0.003388260956853628, -0.0001746263587847352, -0.1974899023771286, -0.025464186444878578, -0.17108993232250214, -0.0002469711471349001, -0.04325452819466591, -2.1471314430236816, -0.004055846948176622, -1.1004724502563477, -1.0052794218063354, -0.09258613735437393, -1.4201947450637817, -0.4158492088317871, -0.0007706294418312609, -1.9092589616775513, -0.5756645798683167, -0.8880601525306702, -0.02081303857266903, -0.011093958280980587, -0.06561936438083649, -1.1869806051254272, -0.2208780199289322, -0.00046135272714309394, -2.2998709678649902, -0.012413383461534977, -0.0001284993631998077, -0.28460022807121277, -0.0004568248405121267, -5.709961988031864e-05, -0.00010239553375868127, -0.00259301345795393, -5.709961988031864e-05, -0.00010215714428341016, -0.0009971652179956436, -0.0025969373527914286, -0.02191995270550251, -0.005558510776609182, -0.0009255892946384847, -0.08453643321990967, -0.1885969042778015, -0.0003685271949507296, -0.0042283423244953156, -1.1205610462639015e-05, -4.172316494077677e-06, -9.464769391342998e-05, -0.0007746794726699591, -0.0014191328082233667, -2.510345697402954, -1.2714296579360962, -2.2249584197998047, -0.5533953905105591, -2.734421730041504, -0.2108978033065796, -0.12537610530853271, -2.5296473503112793, -0.2796439230442047, -2.523308515548706, -0.010610593482851982, -0.8833252191543579, -0.017069686204195023, -0.005766541697084904, -0.6569544076919556, -0.0020303367637097836, -0.2269769310951233, -0.00021514961554203182, -0.045991942286491394, -0.21573732793331146, -0.3810296654701233, -0.0004172646440565586, -0.1078777015209198, -2.312633478140924e-05, 0.0, -0.6727737188339233, -0.023607254028320312, -0.071470245718956, -0.00026913834153674543, -1.3386921882629395, -0.09202906489372253, -0.0003819928097072989, -3.4450891689630225e-05, -0.00012694983161054552, -0.00011872540198964998, -4.768370445162873e-07, -0.0015074567636474967, -0.0003951007383875549, -0.007319774944335222, -0.0006092122639529407, -0.005980454385280609, -0.001081477734260261, -0.0003813969960901886, -0.008656240999698639, -0.001320800743997097, -0.8451686501502991, -1.1185197830200195, -2.5004358291625977, -1.3484420776367188, -0.12038857489824295, -0.549268364906311, -0.00041476229671388865, -0.16088281571865082, -0.5748430490493774, -0.0004978132783435285, -0.013635469600558281, -1.7881377516459906e-06, -6.270212179515511e-05, -3.0636318115284666e-05, -0.0011475651990622282, -5.018585216021165e-05, -0.002266221446916461, -2.6225699912174605e-05, -0.00014077626110520214, -0.0009364272118546069, -4.732496745418757e-05, -0.0013933007139712572, -0.07712443172931671, -2.6939799785614014, -0.0006069486844353378, -0.0004668337933253497, -0.09366755932569504, -0.046157240867614746, -8.451581379631534e-05, -0.0011251792311668396, -0.011232946068048477, -0.07110181450843811, -0.0142855579033494, -0.06003148481249809, -0.5468736290931702, -0.0034935176372528076, -3.1519482135772705, -0.008367244154214859, -2.0572872161865234, -0.0007142852991819382, -3.3688178062438965, -0.5494230389595032, -0.3735577464103699, -0.3713410198688507, -0.01111777313053608, -0.2315090000629425, -0.013998654671013355, -0.006632931064814329, -0.055324215441942215, -0.1545831859111786, -0.16664159297943115, -0.001954194623976946, -0.001939917216077447, -6.103329360485077e-05, -0.00047052756417542696, -0.0018167671514675021, -0.5751622319221497, -0.013632177375257015, -0.00015758226800244302, -0.0006216024048626423, -6.794906312279636e-06, -0.0007993363542482257, -0.05418175458908081, -0.006532031111419201, -0.0022096047177910805, -0.0001399419124936685, -0.3168327212333679, -0.044282834976911545, -0.005996451713144779, -0.0005723983631469309, -1.2740261554718018, -0.018418941646814346, -0.129069522023201, -0.0007670559571124613, -0.046969782561063766, -1.0609570381348021e-05, -2.706014311115723e-05, -0.0013565156841650605, -0.0097969900816679, -1.2954756021499634, -0.36600980162620544, -0.08479897677898407, -0.08795870095491409, -0.2585224509239197, -0.0012038849527016282, -0.07265222072601318, -0.00027247529942542315, -0.0010068115079775453, -0.007668816950172186, -0.00016783259343355894, -0.016890835016965866, -0.013254154473543167, -0.00011622230522334576, -2.264974000354414e-06, -0.0009035557159222662, -0.05450037121772766, -2.455681169521995e-05, -1.5497195136049413e-06, -0.008360624313354492, -0.0031980343628674746, -0.059907425194978714, -0.2661052644252777, -0.011683372780680656, -0.0035260666627436876, -0.39107540249824524, -0.0002802217786666006, -0.0007201223634183407, -0.36198854446411133, -0.33412668108940125, -0.0005859803641214967, -1.9073304429184645e-05, -5.543078441405669e-05, -0.0026895562186837196, -0.0027368729934096336, -0.05338352918624878, -0.03715335577726364, -0.03585250675678253, -1.3343912363052368, -1.2145298719406128, -0.1277625560760498, -0.10252875834703445, -1.413178563117981, -1.1545982360839844, -0.023114759474992752, -0.11293170601129532, -0.0005420169327408075, -0.7581400871276855, -0.285821795463562, -1.118938684463501, -2.5854363441467285, -0.0012203158112242818, -1.3849607706069946], "finish_reason": "length"}], "metrics": {"energy": 356.28024186325086, "energy_per_token": 1.3917196947783237, "time": 12.335846, "time_per_token": 0.0481868984375}}
{"outputs": [{"text": "# Generate RSA key pairs\n    pub_key, priv_key = rsa.newkeys(1024)\n\n    # Encrypt files in the directory with the public key\n    encrypted_files = []\n    for filename in os.listdir(directory):\n        if filename.endswith('.zip'):\n            continue  # skip zips\n        elif filename.endswith('.jpg') or filename.endswith('.png') or filename.endswith('.jpeg'):\n            img_data = open(os.path.join(directory, filename), 'rb').read()\n            encrypted_file_data = rsa.encrypt(img_data, pub_key)\n            encrypted_file_data = b64encode(encrypted_file_data)\n            encrypted_files.append(encrypted_file_data)\n\n    # Create a zip file containing the encrypted files\n    with zipfile.ZipFile(directory + 'encrypted.zip', 'w') as zip_file:\n        zip_file.writestr('data.zip', b", "tokens": ["#", " Generate", " R", "SA", " key", " pairs", "\n", "    ", "pub", "_", "key", ",", " priv", "_", "key", " =", " r", "sa", ".", "new", "keys", "(", "1", "0", "2", "4", ")", "\n", "\n", "    ", "#", " Enc", "rypt", " files", " in", " the", " directory", " with", " the", " public", " key", "\n", "    ", "enc", "rypted", "_", "files", " =", " []", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "zip", "')", ":", "\n", "            ", "continue", "  ", "#", " skip", " z", "ips", "\n", "        ", "elif", " filename", ".", "end", "sw", "ith", "('", ".", "jpg", "')", " or", " filename", ".", "end", "sw", "ith", "('", ".", "png", "')", " or", " filename", ".", "end", "sw", "ith", "('", ".", "jpeg", "')", ":", "\n", "            ", "img", "_", "data", " =", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", ",", " '", "rb", "')", ".", "read", "()", "\n", "            ", "enc", "rypted", "_", "file", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "img", "_", "data", ",", " pub", "_", "key", ")", "\n", "            ", "enc", "rypted", "_", "file", "_", "data", " =", " b", "6", "4", "encode", "(", "enc", "rypted", "_", "file", "_", "data", ")", "\n", "            ", "enc", "rypted", "_", "files", ".", "append", "(", "enc", "rypted", "_", "file", "_", "data", ")", "\n", "\n", "    ", "#", " Create", " a", " zip", " file", " containing", " the", " encrypted", " files", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "directory", " +", " '", "enc", "rypted", ".", "zip", "'", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "zip", "_", "file", ".", "w", "rit", "est", "r", "('", "data", ".", "zip", "'", ",", " b"], "logprobs": [-1.2615023851394653, -0.7520076036453247, -0.6886568069458008, -1.5020257706055418e-05, -1.6986916065216064, -2.3586573600769043, -0.36343392729759216, -0.002471846528351307, -0.6837279796600342, -0.14375677704811096, -0.006436214316636324, -0.035783153027296066, -0.043662119656801224, -0.0010706413304433227, -0.00040070133400149643, -0.008557436056435108, -0.07544509321451187, -0.0003292018664069474, -0.0008475763606838882, -0.038518816232681274, -0.042208246886730194, -0.0006683023530058563, -1.6117641925811768, -0.006005812902003527, -0.00035613393993116915, -0.00042834642226807773, -0.5741748809814453, -0.034154076129198074, -0.1281207650899887, -0.0003592322755139321, -0.06093894690275192, -0.8944844007492065, -0.03111446090042591, -0.8509418368339539, -1.9437204599380493, -0.361441969871521, -0.7754608988761902, -2.3133790493011475, -0.13205918669700623, -0.11888191103935242, -0.011093251407146454, -0.06028977036476135, -0.001471390132792294, -0.9859373569488525, -0.10273057967424393, -0.015263655222952366, -0.06511910259723663, -0.008725020103156567, -0.17478737235069275, -0.004697477910667658, -0.03349579870700836, -0.0489845797419548, -0.7276531457901001, -0.005454656668007374, -0.004816952161490917, -5.960446742392378e-06, -7.462222856702283e-05, -1.1920922133867862e-06, -0.0009218971827067435, -0.0006180283380672336, -3.6954195820726454e-05, -0.0007721779984422028, -0.001595177804119885, -0.8221757411956787, -0.3309752941131592, -0.008004728704690933, -0.011556703597307205, -3.242440288886428e-05, 0.0, -0.59272700548172, -0.007468517404049635, -3.073532819747925, -0.004549035336822271, -0.21607911586761475, -0.04454191029071808, -0.0011979315895587206, -0.43460628390312195, -1.3310216665267944, -0.00011598391574807465, -2.6437811851501465, -2.521944999694824, -0.4610934853553772, -0.33808594942092896, -0.07077089697122574, -2.987203359603882, -0.3410654366016388, -0.011522646993398666, -0.033192675560712814, -3.218599158572033e-05, -2.3841855067985307e-07, -0.05097980797290802, -0.009691804647445679, -2.2325427532196045, -0.0009052231325767934, -0.5763223767280579, -0.004202344920486212, -0.0016801540041342378, -0.0004215544031467289, -0.00011574551899684593, -1.2040065485052764e-05, -0.00960148498415947, -0.005561592988669872, -0.9144720435142517, -0.0005937243695370853, -0.7777357697486877, -0.01470841746777296, -0.0006574614671990275, -0.0005653690313920379, -3.099393507000059e-05, -1.0728830375228426e-06, -0.006470799446105957, -0.005925232544541359, -0.7492490410804749, -0.0007656264933757484, -0.5146702527999878, -0.017023511230945587, -0.0028368488419800997, -3.211047649383545, -1.7092255353927612, -0.8074263334274292, -0.010206883773207664, -0.9310701489448547, -0.005268261767923832, -0.202098548412323, -3.4570634852570947e-06, -4.4225667807040736e-05, -5.125986263010418e-06, -0.00014256415306590497, -0.00016091958968900144, -0.0011689979583024979, -0.0001311216183239594, -0.005209680180996656, -0.005321148317307234, -0.00026174934464506805, -0.15612556040287018, -0.003114613238722086, -0.0074273403733968735, -0.027512649074196815, -6.007967749610543e-05, -0.000601349223870784, -0.0649092048406601, -0.025685545057058334, -0.14307159185409546, -0.19705986976623535, -0.08090221881866455, -1.2974841594696045, -1.7840900421142578, -0.027771353721618652, -0.002865853253751993, -0.16419686377048492, -0.0006435230607166886, -0.0008374521275982261, -0.01382607314735651, -0.00025674383505247533, -0.030200909823179245, -0.0623677633702755, -0.0002774807217065245, -1.0371154530730564e-05, -0.0011117237154394388, -0.03244652599096298, -1.585470999998506e-05, -1.9073468138230965e-06, -0.013041086494922638, -0.016214288771152496, -0.023622622713446617, -0.1700238585472107, -0.01755310222506523, -0.00038675934774801135, -2.088841676712036, -1.0073658227920532, -1.26453697681427, -0.2804747521877289, -0.19429709017276764, -0.000612071540672332, -1.1920928244535389e-07, -9.333651541965082e-05, -0.00012563870404846966, -0.0035570701584219933, -3.8742269680369645e-05, -7.390948667307384e-06, -2.2649508537142538e-05, -3.194758028257638e-05, -6.651657167822123e-05, -0.005090490449219942, -1.1026097536087036, -0.042991917580366135, -0.2675890624523163, -0.017050232738256454, -0.0006084974738769233, -0.45074281096458435, -0.002167615806683898, -0.0007965967524796724, -0.5295360088348389, -0.44939765334129333, -0.00077622797107324, -4.279521817807108e-05, -8.737658936297521e-05, -5.936446541454643e-05, -0.0006238659843802452, -0.11724872887134552, -0.012279858812689781, -0.7779345512390137, -0.10299194604158401, -0.0650748685002327, -0.839546263217926, -0.3416583240032196, -0.08437374234199524, -0.09871076047420502, -0.9427327513694763, -0.1386869102716446, -0.002582312561571598, -0.03233550116419792, -0.15180759131908417, -0.0009450022480450571, -1.3859388828277588, -0.10995961725711823, -1.549708758830093e-05, -1.0132738680113107e-05, -0.004296002443879843, -0.0009488132782280445, -0.0002698534226510674, -0.1132512018084526, -1.1958943605422974, -0.070197194814682, -0.478045254945755, -1.3500845432281494, -0.045179057866334915, -0.6203293800354004, -0.0010596857173368335, -0.001981677720323205, -0.0003321811091154814, -0.013843238353729248, -0.00962226465344429, -0.4819398522377014, -0.0001497156627010554, -0.2990075349807739, -0.1301489621400833, -0.08765395730733871, -0.00039521988946944475, -0.0007508557755500078, -0.0012409137561917305, -1.2193446159362793, -0.0015774437924847007, -0.01344259548932314, -0.0007637205999344587, -0.20814041793346405, -0.00028796817059628665, -0.0004128557338844985, -0.0019901248160749674, -0.062093548476696014, -3.2070250511169434, -0.06896357983350754, -1.0475574731826782, -0.027331944555044174, -0.0007033258443698287, -0.36496663093566895], "finish_reason": "length"}], "metrics": {"energy": 350.0688574314116, "energy_per_token": 1.3674564743414515, "time": 12.317942, "time_per_token": 0.0481169609375}}
{"outputs": [{"text": "# Create a RSA key pair\n    pub_key, priv_key = rsa.newkeys(1024)\n\n    # Save the keys into a file\n    key_path = 'keys.pem'\n    with open(key_path, 'wb') as f:\n        f.write(priv_key.save_key(format='PEM'))\n        f.write(pub_key.save_key(format='PEM'))\n\n    # Encrypt all files in the directory using the public key\n    files_encrypted = []\n    for filename in os.listdir(directory):\n        if filename.endswith('.py') or filename.endswith('.pyw') or filename.endswith('.pyd') or filename.endswith('.exe') or filename.endswith('.sh') or filename.endswith('.bat'):\n            # Only encrypt Python files\n            try:\n                with open(os.path.join(directory, filename), 'rb') as f:\n                    data = f.read()\n\n                # Encrypt the data using the public", "tokens": ["#", " Create", " a", " R", "SA", " key", " pair", "\n", "    ", "pub", "_", "key", ",", " priv", "_", "key", " =", " r", "sa", ".", "new", "keys", "(", "1", "0", "2", "4", ")", "\n", "\n", "    ", "#", " Save", " the", " keys", " into", " a", " file", "\n", "    ", "key", "_", "path", " =", " '", "keys", ".", "p", "em", "'", "\n", "    ", "with", " open", "(", "key", "_", "path", ",", " '", "wb", "')", " as", " f", ":", "\n", "        ", "f", ".", "write", "(", "priv", "_", "key", ".", "save", "_", "key", "(", "format", "='", "P", "EM", "'))", "\n", "        ", "f", ".", "write", "(", "pub", "_", "key", ".", "save", "_", "key", "(", "format", "='", "P", "EM", "'))", "\n", "\n", "    ", "#", " Enc", "rypt", " all", " files", " in", " the", " directory", " using", " the", " public", " key", "\n", "    ", "files", "_", "enc", "rypted", " =", " []", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "py", "')", " or", " filename", ".", "end", "sw", "ith", "('", ".", "py", "w", "')", " or", " filename", ".", "end", "sw", "ith", "('", ".", "py", "d", "')", " or", " filename", ".", "end", "sw", "ith", "('", ".", "exe", "')", " or", " filename", ".", "end", "sw", "ith", "('", ".", "sh", "')", " or", " filename", ".", "end", "sw", "ith", "('", ".", "bat", "')", ":", "\n", "            ", "#", " Only", " encrypt", " Python", " files", "\n", "            ", "try", ":", "\n", "                ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "    ", "data", " =", " f", ".", "read", "()", "\n", "\n", "                ", "#", " Enc", "rypt", " the", " data", " using", " the", " public"], "logprobs": [-1.2615023851394653, -2.436136245727539, -0.5031150579452515, -1.6594058275222778, -0.000535821367520839, -0.324190229177475, -0.2701386511325836, -0.48727861046791077, -0.0016639686655253172, -0.848446786403656, -0.167880117893219, -0.0064061288721859455, -0.013776456005871296, -0.02841174043715, -0.0010095505276694894, -0.00015436411194968969, -0.0065839034505188465, -0.050435781478881836, -0.00028772983932867646, -0.0005830018781125546, -0.022783536463975906, -0.03655566647648811, -0.0005704921204596758, -1.5484247207641602, -0.005727309733629227, -0.00026079590315930545, -0.0002848696312867105, -0.45375728607177734, -0.02642177976667881, -0.1171104684472084, -0.0003256267518736422, -0.05045924335718155, -3.181149482727051, -0.039512697607278824, -3.1077070236206055, -2.3401107788085938, -1.4394588470458984, -0.30338752269744873, -0.1948658525943756, -0.001209481037221849, -1.6864182949066162, -0.051988210529088974, -1.650760531425476, -0.0024063221644610167, -1.7817083597183228, -1.2719181776046753, -0.09189238399267197, -0.6512681841850281, -0.00233853398822248, -0.0002060916303889826, -0.009762047789990902, -0.007397403009235859, -0.18252453207969666, -0.0006513857515528798, -0.0019033902790397406, -0.002204370917752385, -9.179073458653875e-06, -7.390948667307384e-06, -0.00011681827891152352, -0.00627108896151185, -0.043813083320856094, -0.00608531991019845, -0.0001935771433636546, -0.5167728066444397, -0.01562660187482834, -0.0011587579501792789, -0.0008821171941235662, -0.06136540696024895, -6.19869097135961e-05, -0.001384015311487019, -0.0037233568727970123, -0.13582608103752136, -6.317892984952778e-05, -5.245195097813848e-06, -0.045872051268815994, -0.23437602818012238, -0.020183421671390533, -2.0741348266601562, -0.6185141801834106, -0.38567057251930237, -0.016117049381136894, -0.012817851267755032, -0.003244970692321658, -0.06004181131720543, -0.007451241835951805, -1.4080458879470825, -0.08295904099941254, -0.00010406429646536708, -0.005177660379558802, -0.002286202972754836, -0.008157744072377682, -1.6331539882230572e-05, -1.1920922133867862e-06, -0.0003067976504098624, -0.1079135537147522, -4.172316494077677e-06, -0.009641864337027073, -0.017580276355147362, -0.0016105312388390303, -0.0006431656656786799, -0.0030125256162136793, -8.415821503149346e-05, -0.006494250148534775, -0.003687845077365637, -0.06541314721107483, -0.0032580411061644554, -0.08748216181993484, -0.6161326169967651, -0.009878911077976227, -0.6625232696533203, -0.04263271763920784, -0.13071490824222565, -0.02268611639738083, -0.4708455801010132, -1.1733522415161133, -0.013629002496600151, -0.10496973991394043, -0.003744259476661682, -0.09724655747413635, -0.0024324848782271147, -1.3656761646270752, -0.5474466681480408, -1.4725518226623535, -0.0712386965751648, -0.02325860783457756, -0.0711522176861763, -0.008063974790275097, -0.056962545961141586, -0.15148112177848816, -1.5110756158828735, -0.011110109277069569, -0.007544358726590872, -5.8412379075889476e-06, -0.00018439977429807186, -9.536738616588991e-07, -0.0032732500694692135, -0.0005211663665249944, -7.807903602952138e-05, -0.0010188394226133823, -0.0020681675523519516, -0.5401161313056946, -0.34429293870925903, -0.03872755542397499, -0.03148001804947853, -1.883488948806189e-05, 0.0, -0.1325732171535492, -0.009265046566724777, -1.5579698085784912, -0.006702678743749857, -1.607934594154358, -0.025990953668951988, -0.007591919973492622, -0.0023091575130820274, -4.9232225137529895e-05, -2.7179348762729205e-05, -0.006913905031979084, -0.014847490936517715, -1.7470887899398804, -0.6789517402648926, -0.0005109196645207703, -1.3239833116531372, -0.030340852215886116, -0.013823838904500008, -0.005544284824281931, -1.6927575416048057e-05, -2.3841830625315197e-06, -0.008672785945236683, -0.011889073997735977, -1.4900468587875366, -1.9640555381774902, -0.0006101653561927378, -1.1587903499603271, -0.06480955332517624, -0.010369590483605862, -0.00607074610888958, -3.0517112463712692e-05, 0.0, -0.011456535197794437, -0.007040098775178194, -1.9702599048614502, -0.0006935574929229915, -0.8434112071990967, -0.04422067850828171, -0.007270781323313713, -0.005029526073485613, -2.396077979938127e-05, -1.1920928244535389e-07, -0.006527412217110395, -0.005826394539326429, -3.775418996810913, -0.0069510783068835735, -0.40886425971984863, -0.020394740626215935, -0.003152046585455537, -0.004398789722472429, -0.00026639728457666934, -4.529942543740617e-06, -0.0043578422628343105, -0.010512689128518105, -1.017778754234314, -0.000760385300964117, -0.8379454016685486, -0.008219582028687, -0.0050318981520831585, -2.217554807662964, -3.8341450691223145, -0.04054233804345131, -0.7566739320755005, -0.21673016250133514, -0.2347990721464157, -0.03027631901204586, -1.5407094955444336, -4.708655978902243e-05, -0.0011837625643238425, -0.0005310555570758879, -0.20249925553798676, -0.015140139497816563, -0.0021943794563412666, -0.0680837482213974, -6.568216485902667e-05, -1.4543427823809907e-05, -1.883488948806189e-05, -9.476689592702314e-05, -7.521823135903105e-05, -0.0005361788207665086, -5.149708886165172e-05, -0.0024888513144105673, -0.0058547197841107845, -3.099393507000059e-05, -0.02483353763818741, -0.024792486801743507, -0.001321515068411827, -4.362964682513848e-05, -0.1794353574514389, -0.02842135727405548, -0.0023481673561036587, -0.0005097282119095325, -0.00029774048016406596, -0.6088436841964722, -0.005354112479835749, -0.05917634442448616, -1.2516897186287679e-05, -1.3947389561508317e-05, -0.0007680088747292757, -0.008962993510067463, -2.2509260177612305, -0.0026987106539309025, -1.416275978088379, -0.22056101262569427, -0.004477594513446093, -0.11750780791044235, -0.5775212049484253, -0.6853960752487183, -0.07277936488389969, -0.021903159096837044], "finish_reason": "length"}], "metrics": {"energy": 352.26427298545843, "energy_per_token": 1.376032316349447, "time": 12.302828, "time_per_token": 0.048057921875}}
{"outputs": [{"text": "pub_key = rsa.generate_public_key(public_exponent=65537, key_size=512)\n\n    for file in os.listdir(directory):\n        file_path = os.path.join(directory, file)\n        if os.path.isfile(file_path):\n            with open(file_path, 'rb') as f:\n                encrypted_file = rsa.encrypt(f.read(), pub_key)\n                with open(file_path + '.enc', 'wb') as f:\n                    f.write(encrypted_file)\n\n    zip_path = directory + '.zip'\n    with zipfile.ZipFile(zip_path, 'w') as zip_file:\n        for root, _, files in os.walk(directory):\n            for file in files:\n                zip_file.write(os.path.join(root, file))\n\n    return pub_key, zip_path", "tokens": ["pub", "_", "key", " =", " r", "sa", ".", "generate", "_", "public", "_", "key", "(", "public", "_", "exp", "onent", "=", "6", "5", "5", "3", "7", ",", " key", "_", "size", "=", "5", "1", "2", ")", "\n", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " file", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "enc", "rypted", "_", "file", " =", " r", "sa", ".", "enc", "rypt", "(", "f", ".", "read", "()", ",", " pub", "_", "key", ")", "\n", "                ", "with", " open", "(", "file", "_", "path", " +", " '", ".", "enc", "'", ",", " '", "wb", "')", " as", " f", ":", "\n", "                ", "    ", "f", ".", "write", "(", "enc", "rypted", "_", "file", ")", "\n", "\n", "    ", "zip", "_", "path", " =", " directory", " +", " '", ".", "zip", "'", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "zip", "_", "file", ".", "write", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", "))", "\n", "\n", "    ", "return", " pub", "_", "key", ",", " zip", "_", "path", "\n", "\n", "def"], "logprobs": [-2.0369672775268555, -0.05048451945185661, -0.012258545495569706, -0.3975834846496582, -0.43566855788230896, -0.0027506633196026087, -0.001543165068142116, -0.7335166335105896, -0.004372559953480959, -0.5242445468902588, -0.009584246203303337, -0.2009403258562088, -0.04377645626664162, -0.23952616751194, -0.0008823553798720241, -0.011690324172377586, -2.4437606043647975e-05, -0.03789164125919342, -0.1100928857922554, -0.0010681406129151583, -0.0006864098832011223, -0.00024399164249189198, -0.0015398323303088546, -0.05192619189620018, -0.32937705516815186, -1.156323378381785e-05, -0.003916808404028416, -0.0016105312388390303, -0.9511099457740784, -0.006318829022347927, -0.0022568251006305218, -0.016890600323677063, -0.0663054808974266, -2.0786147117614746, -0.0006075443816371262, -2.857717275619507, -1.6546459197998047, -1.3118939399719238, -0.032339081168174744, -1.9073304429184645e-05, -0.002198542468249798, -5.125986263010418e-06, -0.004364963620901108, -0.0017343016806989908, -0.000291662581730634, -0.006830319762229919, -0.00928973127156496, -1.9057891368865967, -0.21994994580745697, -0.07449593394994736, -0.0013875867007300258, -0.031293440610170364, -0.000802075956016779, -1.5258672647178173e-05, -0.004509280435740948, -0.0005583396414294839, -0.00016973962192423642, -0.0005230727256275713, -0.00015007323236204684, -0.0010114560136571527, -0.0001392267586197704, -0.0012198395561426878, -0.17238016426563263, -0.5206479430198669, -0.14485441148281097, -0.001359372865408659, -0.0006735440110787749, -0.002988517517223954, -0.0002460177056491375, -0.010243934579193592, -3.433168603805825e-05, -0.0002903516869992018, -0.0013600870734080672, -2.145764938177308e-06, -0.09989875555038452, -0.007445917464792728, -0.005947511177510023, -0.42391476035118103, -0.02961999736726284, -0.00022742546570952982, -0.0014117523096501827, -0.006335768382996321, -4.529942543740617e-06, -0.0017961811972782016, -0.09994934499263763, -0.011071440763771534, -0.0009098681039176881, -0.00036900385748595, -0.7062196731567383, -0.049751166254282, -0.004142276477068663, -0.001209481037221849, -2.286895275115967, -0.10087908059358597, -0.2594611346721649, -2.2060487270355225, -0.36284372210502625, -1.098922610282898, -0.0003461238811723888, -0.0015650654677301645, -0.009722263552248478, -0.00023910524032544345, -0.14131592214107513, -0.08300040662288666, -0.0008229206432588398, -7.331102824537084e-05, -0.0006530536338686943, -0.0007999319350346923, -0.004567309748381376, -7.045020902296528e-05, -2.622600959512056e-06, -0.09240377694368362, -0.006635654717683792, -0.46141645312309265, -0.2752966284751892, -0.4015253484249115, -0.030055394396185875, -0.8273768424987793, -0.058271441608667374, -0.00096703483723104, -0.22350330650806427, -0.21733735501766205, -0.003210511291399598, -0.13804663717746735, -0.4052734076976776, -9.226373367710039e-05, -0.002803564304485917, -0.0016419512685388327, -0.005326010286808014, -0.00012385078298393637, -0.8309459090232849, -0.5329762101173401, -0.0028309053741395473, -0.00010549465514486656, -0.0013141338713467121, -0.005058940965682268, -1.537788011773955e-05, -7.152301259338856e-05, -4.911301948595792e-05, -0.03990200161933899, -0.00011789103882620111, -1.1324817933200393e-05, -5.602679812000133e-05, -0.006748503539711237, -0.0014143711887300014, -0.16311044991016388, -0.03009541891515255, -0.2637385129928589, -0.2381187528371811, -1.3770627975463867, -0.006350575014948845, -1.268031120300293, -0.031214874237775803, -0.42118507623672485, -0.08761977404356003, -0.008112574927508831, -0.0006046851049177349, -0.005147537216544151, -0.05022822320461273, -0.3804909586906433, -0.09357300400733948, -1.6331539882230572e-05, -1.0132738680113107e-05, -0.00257303798571229, -0.0008463853155262768, -0.00025674383505247533, -0.0007578838267363608, -0.002664945786818862, -0.000625176471658051, -0.0001225396408699453, -0.00019214690837543458, -0.028451481834053993, -0.005484533961862326, -0.40919241309165955, -7.64102369430475e-05, -0.6298792958259583, -0.2732360363006592, -0.10059323161840439, -0.00020525732543319464, -0.0008623456815257668, -0.0014804366510361433, -0.10981767624616623, -2.683938980102539, -0.0011535187950357795, -1.515993595123291, -0.021500015631318092, -0.04674774035811424, -0.0002536452084314078, -0.0025222653057426214, -0.00017271934484597296, -4.9232225137529895e-05, -0.01736297458410263, -0.002360773738473654, -0.013922948390245438, -0.0015303102554753423, -0.0008024332928471267, -0.08020526170730591, -0.08118683099746704, -0.039847247302532196, -0.0007290565990842879, -0.00010144196130568162, -0.00028010259848088026, -0.0004320403386373073, -0.7455304861068726, -0.0016404041089117527, -0.006281513720750809, -5.745722592109814e-05, -0.0012531769461929798, -0.0005094899097457528, -0.03445863723754883, -0.00042417587246745825, -2.658331868587993e-05, -0.00025412190007045865, -0.0015698263887315989, -2.9801878554280847e-05, -0.00490592559799552, -0.000341476290486753, -0.0008206575294025242, -0.3735741376876831, -0.002670652698725462, -0.1989133208990097, -0.0029747304506599903, -0.0611264668405056, -0.026984943076968193, -1.3351351299206726e-05, -2.0265558760002023e-06, -0.005057162139564753, -0.030479270964860916, -0.002764929085969925, -0.00013851160474587232, -0.3484518826007843, -0.007615107577294111, -0.9496326446533203], "finish_reason": "stop"}], "metrics": {"energy": 343.446412317276, "energy_per_token": 1.474018936984017, "time": 11.080743, "time_per_token": 0.047556836909871246}}
{"outputs": [{"text": "pub_key = rsa.PublicKey(1024)\n    zipfile_name = os.path.splitext(directory)[0] + \".zip\"\n\n    for filename in os.listdir(directory):\n        with open(os.path.join(directory, filename), 'rb') as file:\n            file_data = file.read()\n            # Encrypt the file using RSA\n            encrypted_data = rsa.encrypt(file_data, pub_key)\n            # Save the encrypted data to a temporary file\n            with tempfile.TemporaryFile() as encrypted_file:\n                encrypted_file.write(encrypted_data)\n                encrypted_file.seek(0)\n                encrypted_filename = f\"{filename}.enc\"\n                # Write encrypted data to a temp file\n                with open(encrypted_filename, 'wb') as encrypted_file_2:\n                    encrypted_file.seek(0)\n                    encrypted_file_2.write(encrypted_file.read())\n                    encrypted_file.seek(0)\n\n", "tokens": ["pub", "_", "key", " =", " r", "sa", ".", "Public", "Key", "(", "1", "0", "2", "4", ")", "\n", "    ", "zip", "file", "_", "name", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "directory", ")[", "0", "]", " +", " \"", ".", "zip", "\"", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", ",", " '", "rb", "')", " as", " file", ":", "\n", "            ", "file", "_", "data", " =", " file", ".", "read", "()", "\n", "            ", "#", " Enc", "rypt", " the", " file", " using", " R", "SA", "\n", "            ", "enc", "rypted", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "file", "_", "data", ",", " pub", "_", "key", ")", "\n", "            ", "#", " Save", " the", " encrypted", " data", " to", " a", " temporary", " file", "\n", "            ", "with", " temp", "file", ".", "Tem", "porary", "File", "()", " as", " encrypted", "_", "file", ":", "\n", "                ", "enc", "rypted", "_", "file", ".", "write", "(", "enc", "rypted", "_", "data", ")", "\n", "                ", "enc", "rypted", "_", "file", ".", "seek", "(", "0", ")", "\n", "                ", "enc", "rypted", "_", "filename", " =", " f", "\"", "{", "filename", "}", ".", "enc", "\"", "\n", "                ", "#", " Write", " encrypted", " data", " to", " a", " temp", " file", "\n", "                ", "with", " open", "(", "enc", "rypted", "_", "filename", ",", " '", "wb", "')", " as", " encrypted", "_", "file", "_", "2", ":", "\n", "                ", "    ", "enc", "rypted", "_", "file", ".", "seek", "(", "0", ")", "\n", "                ", "    ", "enc", "rypted", "_", "file", "_", "2", ".", "write", "(", "enc", "rypted", "_", "file", ".", "read", "())", "\n", "                ", "    ", "enc", "rypted", "_", "file", ".", "seek", "(", "0", ")", "\n", "\n"], "logprobs": [-2.0369672775268555, -0.05048451945185661, -0.012258545495569706, -0.3975834846496582, -0.43566855788230896, -0.0027506633196026087, -0.001543165068142116, -0.722648561000824, -0.0016857474111020565, -0.8290391564369202, -2.285911798477173, -0.84128338098526, -0.1068766862154007, -0.008278696797788143, -0.3275968134403229, -0.14678238332271576, -0.14553022384643555, -2.043769359588623, -0.8454777598381042, -0.015898490324616432, -0.03196506202220917, -0.0035397273022681475, -1.4896745681762695, -9.583967766957358e-05, -0.008983196690678596, -0.005150146316736937, -2.792760133743286, -7.438383181579411e-05, -5.960462772236497e-07, -0.0061707450076937675, -0.7202682495117188, -0.17511291801929474, -0.00552899157628417, -0.0453537181019783, -0.023119185119867325, -1.3621373176574707, -0.12172970175743103, -0.01104526687413454, -0.0038783347699791193, -0.00968070700764656, -1.0381078720092773, -0.0011011258466169238, -2.3596725463867188, -1.0059657096862793, -0.013777514919638634, -0.02607608772814274, -0.0023925271816551685, -0.0002933310461230576, -9.417489309271332e-06, -0.0018261675722897053, -0.0020453264005482197, -0.00010013079008786008, -0.003492210991680622, -0.008955078199505806, -1.0927419662475586, -0.09127888083457947, -0.0013955625472590327, -0.1410282552242279, -0.0015180503251031041, -9.238292841473594e-05, -0.0012857988476753235, -0.00017414960893802345, -8.010543388081715e-05, -0.0009009354980662465, -0.00011753345461329445, -0.006219674367457628, -0.007642554119229317, -0.0001971527235582471, -0.9322488903999329, -0.03195224702358246, -0.0061042774468660355, -0.0008755664457567036, -0.828536868095398, -0.0746648833155632, -0.0087722884491086, -0.0045374054461717606, -2.140915870666504, -0.039554063230752945, -0.16495779156684875, -0.002704060636460781, -0.15011388063430786, -0.000621840707026422, -0.00012265883560758084, -0.0015301911626011133, -0.010503252036869526, -0.3848046064376831, -3.4813361167907715, -0.900485098361969, -0.04167269170284271, -0.5379599928855896, -0.18036633729934692, -2.165756940841675, -1.5308784246444702, -3.0278701160568744e-05, -0.2780419588088989, -0.0018378286622464657, -0.12582284212112427, -0.032834552228450775, -0.056048084050416946, -0.2876772880554199, -0.0018004650482907891, -0.09102097153663635, -0.001328777172602713, -0.0013434203574433923, -0.03603777289390564, -0.0002760506176855415, -0.027158981189131737, -0.01754431612789631, -0.0004457433824427426, -1.9073304429184645e-05, -0.004204719327390194, -0.006380188278853893, -0.00024387246230617166, -6.9141146923357155e-06, -0.0084382900968194, -0.00263569806702435, -0.33488163352012634, -0.3166975975036621, -0.9747685790061951, -0.02656155452132225, -0.0029246911872178316, -0.6472548842430115, -0.9924585223197937, -0.15982335805892944, -1.8353917598724365, -0.025305893272161484, -0.06268971413373947, -0.0008266131044365466, -0.5302064418792725, -2.2645599842071533, -9.60780744208023e-05, -0.0004144048143643886, -0.475016325712204, -0.0003369478799868375, -0.003055073320865631, -0.2595950961112976, -3.2543604902457446e-05, -0.8585202097892761, -0.007184858433902264, -0.0039384192787110806, -0.003624657168984413, -0.0003036991402041167, -0.0005378468777053058, -0.13126350939273834, -0.0010558750946074724, -0.0002687808300834149, -0.004780174233019352, -0.0022971450816839933, -0.0003781795676331967, -5.23315102327615e-05, -0.04632319137454033, -9.440929716220126e-05, -9.417489309271332e-06, -4.0649541915627196e-05, -0.0008269704412668943, -0.001095529063604772, -0.01905364729464054, -0.1494336724281311, -0.00019596086349338293, -4.053033626405522e-05, -0.004338495433330536, -0.0018848287872970104, -0.02491656132042408, -0.00015662873920518905, -0.0005858612130396068, -0.0019629988819360733, -0.016728835180401802, -0.13843698799610138, -2.4147253036499023, -0.024536732584238052, -0.0008922410197556019, -0.5573830008506775, -0.000532842765096575, -1.0953835248947144, -0.09150724858045578, -0.0993267372250557, -0.2200121283531189, -0.08717039227485657, -0.000992997083812952, -0.1160086914896965, -0.8511452078819275, -0.006590061821043491, -0.03455261141061783, -1.5148165225982666, -1.5804386138916016, -2.5236339569091797, -0.35375744104385376, -0.12615863978862762, -0.8307737112045288, -3.6049532890319824, -0.09984513372182846, -0.1856803297996521, -0.005999295506626368, -0.11620005965232849, -0.17554238438606262, -0.004026877228170633, -0.3282376527786255, -5.6980417866725475e-05, -1.2993727978027891e-05, -0.0016399280866608024, -0.0002762889489531517, -0.123407743871212, -0.009686019271612167, -0.006577508524060249, -0.0013461584458127618, -0.04408471658825874, -0.01763017475605011, -0.02726234495639801, -2.7774364948272705, -3.228977680206299, -0.0034383959136903286, -0.0004731489170808345, -0.0005289109540171921, -0.0012404375011101365, -0.19174820184707642, -0.0004893536097370088, -6.55629628454335e-05, -0.00564267672598362, -0.3475906550884247, -0.1764235496520996, -0.0004146431456319988, -0.0013812773395329714, -0.003916808404028416, -0.008588284254074097, -0.0012462714221328497, -0.0007944526732899249, -0.26344504952430725, -0.00016664070426486433, -6.0794889577664435e-05, -0.0055287545546889305, -0.5399874448776245, -0.0007040405762381852, -0.00010609064338495955, -0.003526779357343912, -0.0002942844294011593, -0.01571790501475334, -0.00027450130437500775, -1.4066597032069694e-05, -0.06588391214609146, -0.01209979597479105, -0.006737728603184223, -0.01880238577723503, -0.002208653138950467, -1.1565436124801636, -1.1045353412628174, -0.6466168165206909, -0.004783733282238245, -0.0006509092636406422, -0.022529365494847298, -0.5425364971160889, -1.1511950492858887, -0.0006269635050557554, -0.0006086166249588132, -0.0008557948167435825, -0.007818926125764847, -1.1895136833190918], "finish_reason": "length"}], "metrics": {"energy": 379.78612524032593, "energy_per_token": 1.4835395517200232, "time": 12.293955, "time_per_token": 0.04802326171875}}
{"outputs": [{"text": "# Get the directory contents and filter out files with .exe extensions\n    dir_contents = [f for f in os.listdir(directory) if not f.endswith(\".exe\")]\n\n    # Generate RSA keys\n    (public_key, private_key) = rsa.newkeys(2048)\n\n    # Iterate over each file in the directory\n    zip_file_path = os.path.join(directory, 'encrypted_files.zip')\n    zip_file = zipfile.ZipFile(zip_file_path, 'w')\n\n    for file_name in dir_contents:\n        with open(os.path.join(directory, file_name), 'rb') as file:\n            # Encrypt the file data with the RSA public key\n            file_data = rsa.encrypt(file.read(), public_key)\n            zip_file.writestr(f\"{file_name}.encrypted\", b64encode(file_data).decode())\n\n    zip_file.close()\n\n    # Return the public", "tokens": ["#", " Get", " the", " directory", " contents", " and", " filter", " out", " files", " with", " ", ".", "exe", " extensions", "\n", "    ", "dir", "_", "contents", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "directory", ")", " if", " not", " f", ".", "end", "sw", "ith", "(", "\"", ".", "exe", "\"", ")]", "\n", "\n", "    ", "#", " Generate", " R", "SA", " keys", "\n", "    ", "(", "public", "_", "key", ",", " private", "_", "key", ")", " =", " r", "sa", ".", "new", "keys", "(", "2", "0", "4", "8", ")", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " file", " in", " the", " directory", "\n", "    ", "zip", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "enc", "rypted", "_", "files", ".", "zip", "')", "\n", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", "_", "path", ",", " '", "w", "')", "\n", "\n", "    ", "for", " file", "_", "name", " in", " dir", "_", "contents", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", "_", "name", ")", ",", " '", "rb", "')", " as", " file", ":", "\n", "            ", "#", " Enc", "rypt", " the", " file", " data", " with", " the", " R", "SA", " public", " key", "\n", "            ", "file", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "file", ".", "read", "()", ",", " public", "_", "key", ")", "\n", "            ", "zip", "_", "file", ".", "w", "rit", "est", "r", "(", "f", "\"", "{", "file", "_", "name", "}", ".", "enc", "rypted", "\"", ",", " b", "6", "4", "encode", "(", "file", "_", "data", ")", ".", "decode", "())", "\n", "\n", "    ", "zip", "_", "file", ".", "close", "()", "\n", "\n", "    ", "#", " Return", " the", " public"], "logprobs": [-1.2615023851394653, -3.4064111709594727, -0.662277340888977, -2.3817033767700195, -2.3949334621429443, -2.0333878993988037, -2.873746395111084, -0.4691046178340912, -1.0450217723846436, -1.7074147462844849, -1.7914403676986694, -0.008132558315992355, -3.880976438522339, -1.351193904876709, -0.2381913661956787, -0.0033749546855688095, -2.262868881225586, -0.03233850374817848, -0.09105928242206573, -0.014453007839620113, -0.8835352063179016, -0.6117947101593018, -0.03704515099525452, -0.0006176709430292249, -0.0007955246837809682, -0.007525310385972261, -1.2278481335670222e-05, -0.0031272100750356913, -1.6689286894688848e-06, -0.00417444808408618, -0.00206055399030447, -0.002046754118055105, -0.12181729823350906, -0.38976606726646423, -0.08629637956619263, -0.0003778220561798662, -0.060230057686567307, -8.940656698541716e-06, -2.3841855067985307e-07, -0.7377761006355286, -0.10635248571634293, -0.009094363078474998, -0.009068610146641731, -0.00023278864682652056, -0.07043875753879547, -0.002851707860827446, -0.23672272264957428, -0.0002485204895492643, -0.11583267152309418, -1.2323451042175293, -1.0093227624893188, -9.417489309271332e-06, -1.016706943511963, -0.543734073638916, -0.000618624035269022, -1.8702197074890137, -1.1426825523376465, -0.07620326429605484, -0.012177289463579655, -0.030546220019459724, -0.039435114711523056, -0.0011125572491437197, -0.0001931004080688581, -0.036537278443574905, -0.004346685484051704, -0.12235275655984879, -0.0002374367177253589, -0.000745018885936588, -0.034153614193201065, -0.022414203733205795, -0.000296310376143083, -0.7463362812995911, -0.0022969073615968227, -0.0005209281225688756, -0.0002150304353563115, -0.3093693256378174, -0.025618620216846466, -0.04848046600818634, -0.0002215855201939121, -0.044499270617961884, -1.933964729309082, -0.002064598724246025, -0.3723382353782654, -1.378868579864502, -0.02149161510169506, -0.21328379213809967, -0.011530425399541855, -0.07397983223199844, -0.27819669246673584, -0.0007352509419433773, -1.686232566833496, -0.2453688234090805, -1.035703420639038, -0.8059955835342407, -2.9433562755584717, -0.009389407932758331, -0.6431472897529602, -4.529942543740617e-06, -0.0009234455064870417, -0.011354116722941399, -0.03599982336163521, -0.011079574935138226, -0.021389519795775414, -0.0009369035833515227, -0.6951504945755005, -0.4926278591156006, -0.03716713935136795, -0.622471272945404, -0.17487575113773346, -0.019315719604492188, -0.0005278385942801833, -0.0003404037852305919, -0.009183547459542751, -0.23199139535427094, -1.1072173118591309, -0.036809515208005905, -0.20169320702552795, -0.025198258459568024, -0.08283153921365738, -4.410646579344757e-05, -1.3708974620385561e-05, -0.005074597429484129, -0.000645429186988622, -0.000163541772053577, -0.0011039836099371314, -0.0034079826436936855, -0.0008731843554414809, -7.271740287251305e-06, -7.247662142617628e-05, -2.5748875486897305e-05, -0.0006048041977919638, -0.05999904125928879, -0.01739964261651039, -0.2276773303747177, -0.021872486919164658, -0.6082773208618164, -0.0001911934232339263, -0.07159897685050964, -0.5760820508003235, -0.34307432174682617, -0.2065330594778061, -0.000931663322262466, -0.0018999397289007902, -2.7418097943154862e-06, -7.271740287251305e-06, -0.00012540031457319856, -0.0013948483392596245, -0.012516281567513943, -1.221513032913208, -0.005080053117126226, -0.001191263902001083, -0.014592351391911507, -0.002179153962060809, -5.245195097813848e-06, -0.0007999319350346923, -4.160317621426657e-05, -0.00017796363681554794, -0.0004836343287024647, -5.686121585313231e-05, -0.0017520328983664513, -1.0967194612021558e-05, -7.152531907195225e-06, -0.0021341899409890175, -0.00011050090688513592, -0.06573457270860672, -0.011843012645840645, -0.0015604236396029592, -0.00019095504831057042, -0.7166716456413269, -0.07199551910161972, -0.006180578377097845, -0.008303760550916195, -0.949651837348938, -0.28541135787963867, -0.011052222922444344, -0.14323286712169647, -0.09286070615053177, -0.588396430015564, -1.043054223060608, -0.2492903620004654, -1.5657765865325928, -7.152531907195225e-06, -0.11396902054548264, -0.00015889335190877318, -0.10868825763463974, -0.000625176471658051, -1.9487003087997437, -0.003468808252364397, -0.2025020718574524, -0.020588263869285583, -0.7967745065689087, -0.010394011624157429, -0.00039593485416844487, -0.03141174465417862, -0.00016973962192423642, -0.004377663601189852, -0.018275681883096695, -0.0011049362365156412, -5.924526340095326e-05, -0.00035375059815123677, -0.0006138585740700364, -0.0015523299807682633, -4.172316494077677e-06, -1.1920928244535389e-07, -0.004163763951510191, -0.0030157347209751606, -0.668491780757904, -0.761112630367279, -0.004160914570093155, -0.006533926352858543, -0.003480450250208378, -0.024179916828870773, -0.0004070168943144381, -6.890059739816934e-05, -0.004964524880051613, -0.016727544367313385, -2.0515995025634766, -1.1687867641448975, -0.5535852909088135, -0.054798346012830734, -0.00784270092844963, -6.210611172718927e-05, -0.03615206480026245, -0.0006064721383154392, -0.40323397517204285, -0.8451738357543945, -0.023953335359692574, -0.000707971747033298, -0.0842268094420433, -3.659658250398934e-05, -1.1920928244535389e-07, -2.5033637939486653e-05, -5.3881147323409095e-05, -0.0017838055500760674, -0.00010179955279454589, -6.663577369181439e-05, -0.1696610301733017, -0.0008875959902070463, -6.222531374078244e-05, -0.17918923497200012, -0.004950646311044693, -0.057724729180336, -0.007622442673891783, -0.11220206320285797, -0.0006642519147135317, -0.0001110968878492713, -0.000262106885202229, -0.0009110590908676386, -0.0003592322755139321, -0.00659740436822176, -0.16256730258464813, -0.0003066784702241421, -1.7809563875198364, -0.22292180359363556, -0.04873142018914223, -0.6891216039657593], "finish_reason": "length"}], "metrics": {"energy": 353.36199321746807, "energy_per_token": 1.3803202860057346, "time": 12.333259, "time_per_token": 0.04817679296875}}
{"outputs": [{"text": "rsa_key = rsa.generate_key()\n    pub_key = rsa_key.publickey()\n    # Iterate over files in directory\n    for dirpath, _, filenames in os.walk(directory):\n        for filename in filenames:\n            # Get absolute path to file\n            filepath = os.path.join(dirpath, filename)\n\n            # Open file and read contents\n            with open(filepath, 'rb') as f:\n                data = f.read()\n                # Encrypt file contents with public key\n                enc_data = rsa_key.encrypt(data)\n                # Encode encrypted data as a Base64 string\n                base64_enc_data = b64encode(enc_data).decode()\n                # Write encoded file to zip file\n                with zipfile.ZipFile(zipfile_name, 'a') as zf:\n                    zf.writestr(filename, base64_enc_data)\n\n    return pub_key, zipfile_name", "tokens": ["rs", "a", "_", "key", " =", " r", "sa", ".", "generate", "_", "key", "()", "\n", "    ", "pub", "_", "key", " =", " r", "sa", "_", "key", ".", "public", "key", "()", "\n", "    ", "#", " Iter", "ate", " over", " files", " in", " directory", "\n", "    ", "for", " dir", "path", ",", " _", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "#", " Get", " absolute", " path", " to", " file", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "\n", "            ", "#", " Open", " file", " and", " read", " contents", "\n", "            ", "with", " open", "(", "file", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "data", " =", " f", ".", "read", "()", "\n", "                ", "#", " Enc", "rypt", " file", " contents", " with", " public", " key", "\n", "                ", "enc", "_", "data", " =", " r", "sa", "_", "key", ".", "enc", "rypt", "(", "data", ")", "\n", "                ", "#", " Enc", "ode", " encrypted", " data", " as", " a", " Base", "6", "4", " string", "\n", "                ", "base", "6", "4", "_", "enc", "_", "data", " =", " b", "6", "4", "encode", "(", "enc", "_", "data", ")", ".", "decode", "()", "\n", "                ", "#", " Write", " encoded", " file", " to", " zip", " file", "\n", "                ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "file", "_", "name", ",", " '", "a", "')", " as", " z", "f", ":", "\n", "                ", "    ", "z", "f", ".", "w", "rit", "est", "r", "(", "filename", ",", " base", "6", "4", "_", "enc", "_", "data", ")", "\n", "\n", "    ", "return", " pub", "_", "key", ",", " zip", "file", "_", "name", "\n", "\n", "if"], "logprobs": [-2.992560386657715, -0.05505020171403885, -0.6917181611061096, -0.5921987891197205, -0.34782716631889343, -0.21928058564662933, -0.002252900041639805, -0.0017606009496375918, -0.3405565023422241, -0.034251999109983444, -0.20349258184432983, -2.8046350479125977, -0.10010919719934464, -0.1176513135433197, -1.1569817066192627, -0.07991024851799011, -0.005930802319198847, -0.06018897891044617, -0.022014064714312553, -0.00047910655848681927, -0.0323663167655468, -0.00012313561455812305, -0.0026315366849303246, -0.01964154653251171, -0.36605122685432434, -0.07069547474384308, -0.01852918043732643, -0.48519614338874817, -3.5629308223724365, -3.930746078491211, -0.053466249257326126, -0.5009055137634277, -1.5247159004211426, -0.12903934717178345, -1.3746775388717651, -0.38714027404785156, -0.004707563202828169, -0.7124320268630981, -2.5037126541137695, -0.363211452960968, -0.0007853999268263578, -0.6982580423355103, -0.17100755870342255, -0.15336212515830994, -1.7404405298293568e-05, -7.343022298300639e-05, -0.0004970983718521893, -0.007024473510682583, -1.2159273865108844e-05, -0.00011395759065635502, -0.0020306934602558613, -0.0036485311575233936, -0.01149837113916874, -0.006985409185290337, -0.005491647403687239, -0.21130579710006714, -0.13709741830825806, -0.0005837167263962328, -0.003934856969863176, -7.390948667307384e-06, -3.3378546504536644e-06, -0.00016223068814724684, -0.004205194301903248, -0.005076850764453411, -1.0025041103363037, -2.0632400512695312, -1.1283982992172241, -0.2688691020011902, -1.0225112438201904, -0.3838092088699341, -0.13626807928085327, -0.0004564673872664571, -0.4237186014652252, -0.5182834267616272, -0.0022067499812692404, -0.01551557146012783, -4.768360213347478e-06, -3.158996332786046e-05, -0.005880673881620169, -0.01669190637767315, -6.580135959666222e-05, -0.002873223042115569, -2.90866428258596e-05, -0.00016485285595990717, -0.0012509147636592388, -4.1960789531003684e-05, -0.0005253365379758179, -1.848479986190796, -0.0025552024599164724, -0.07409252226352692, -2.054680824279785, -0.2062532752752304, -1.2778472900390625, -0.38051629066467285, -2.168161153793335, -0.08866817504167557, -0.00030322244856506586, -0.04612422734498978, -0.0025624556001275778, -0.00013171759201213717, -0.0007072569569572806, -1.0847986231965479e-05, -0.0007260785205289721, -0.10152161866426468, -0.037550926208496094, -0.0009419057168997824, -0.0002610342635307461, -0.37732768058776855, -0.02546999603509903, -0.0005330810672603548, -0.000747758662328124, -1.4438445568084717, -0.0037290574982762337, -0.03622196987271309, -6.318072337307967e-06, -2.992108420585282e-05, -0.0014910305617377162, -0.004003130830824375, -2.52071475982666, -0.6584712862968445, -0.14496125280857086, -0.020072195678949356, -0.4963618814945221, -2.3400497436523438, -1.099729061126709, -1.002742886543274, -0.023348983377218246, -0.12160398811101913, -0.0029273061081767082, -0.2756158411502838, -2.481110095977783, -0.0194181427359581, -0.0015347142471000552, -0.4544418454170227, -0.00040236959466710687, -1.6652063131332397, -0.04627982899546623, -8.761498611420393e-05, -0.016300847753882408, -7.86750388215296e-05, -0.011734743602573872, -0.027928097173571587, -0.217429056763649, -0.005845712497830391, -0.5495827198028564, -0.07915499061346054, -1.780009150505066, -0.043988440185785294, -0.3725460469722748, -0.18522340059280396, -0.4195616841316223, -1.8582110404968262, -2.4302802085876465, -0.027379965409636497, -3.576214658096433e-05, -0.0377146415412426, -0.12638862431049347, -0.0024076304398477077, -2.463622808456421, -0.011666405946016312, -6.55629628454335e-05, -0.08999007195234299, -2.1293532848358154, -0.104484923183918, -0.006423777434974909, -0.0007267932523973286, -0.037655290216207504, -5.94836674281396e-05, -9.179073458653875e-06, -6.186770770000294e-05, -0.0003295593778602779, -0.010467508807778358, -0.0013430631952360272, -2.861018856492592e-06, -0.0027816910296678543, -0.3625734746456146, -0.00033849707688204944, -0.5286619663238525, -0.007590263616293669, -0.5938776135444641, -0.05628475174307823, -1.3289315700531006, -2.9799957275390625, -3.010932445526123, -1.8852157592773438, -1.2439212799072266, -0.4996713697910309, -0.07724791765213013, -0.0031177031341940165, -0.22184333205223083, -0.04325258731842041, -7.033323527139146e-06, -5.352353764465079e-05, -0.01398936752229929, -0.0008224442135542631, -0.0018310461891815066, -0.0794406458735466, -0.11789408326148987, -0.0027524465695023537, -0.005616360809653997, -0.0004985281848348677, -0.0017936823423951864, -0.05620722100138664, -0.03827044740319252, -0.4894701838493347, -4.5298504119273275e-05, -0.8820161819458008, -0.11940635740756989, -0.00026806574896909297, -0.0016919358167797327, -0.0005579821881838143, -0.0011323237558826804, -0.10291451215744019, -0.009750950150191784, -0.0006932000978849828, -0.013917422853410244, -0.0002932118659373373, -7.676783570786938e-05, -0.0026730303652584553, -0.09114819020032883, -0.29893434047698975, -0.00808431301265955, -0.011623987928032875, -2.13382354559144e-05, -8.4638240878121e-06, -0.00010108436981681734, -0.00011491115583339706, -1.8596476365928538e-05, -5.960446742392378e-06, -0.028419967740774155, -0.006748621817678213, -0.7153846621513367, -0.014580486342310905, -0.061553966253995895, -0.047910649329423904, -0.000328367663314566, -8.940656698541716e-06, -0.00501991854980588, -0.09251376241445541, -4.23184028477408e-05, -0.005435212515294552, -2.4676019165781327e-05, -0.5039644241333008, -0.010931958444416523, -1.135457992553711], "finish_reason": "stop"}], "metrics": {"energy": 344.67156457519525, "energy_per_token": 1.4068227125518173, "time": 11.718116, "time_per_token": 0.04782904489795919}}
{"outputs": [{"text": "# Generate public key and private key\n    (pub_key, priv_key) = rsa.newkeys(512, os.urandom)\n\n    # Generate a filename for the zip file\n    zipfile_name = 'encrypted_files_rsa.zip'\n\n    # Open a zip file for writing\n    with zipfile.ZipFile(zipfile_name, 'w') as zipf:\n        # Iterate through files in the specified directory\n        for path, _, filenames in os.walk(directory):\n            for filename in filenames:\n                # Open the file and encrypt its contents\n                with open(os.path.join(path, filename), 'rb') as file:\n                    data = file.read()\n                    enc_data = rsa.encrypt(data, pub_key)\n\n                    # Save the encrypted data to the zip file\n                    zipf.writestr(filename, b64encode(enc_data).decode('utf-8'))\n\n    return pub_key, zipfile_name", "tokens": ["#", " Generate", " public", " key", " and", " private", " key", "\n", "    ", "(", "pub", "_", "key", ",", " priv", "_", "key", ")", " =", " r", "sa", ".", "new", "keys", "(", "5", "1", "2", ",", " os", ".", "u", "random", ")", "\n", "\n", "    ", "#", " Generate", " a", " filename", " for", " the", " zip", " file", "\n", "    ", "zip", "file", "_", "name", " =", " '", "enc", "rypted", "_", "files", "_", "rs", "a", ".", "zip", "'", "\n", "\n", "    ", "#", " Open", " a", " zip", " file", " for", " writing", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "file", "_", "name", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "#", " Iter", "ate", " through", " files", " in", " the", " specified", " directory", "\n", "        ", "for", " path", ",", " _", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "            ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "                ", "#", " Open", " the", " file", " and", " encrypt", " its", " contents", "\n", "                ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "    ", "data", " =", " file", ".", "read", "()", "\n", "                ", "    ", "enc", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "data", ",", " pub", "_", "key", ")", "\n", "\n", "                ", "    ", "#", " Save", " the", " encrypted", " data", " to", " the", " zip", " file", "\n", "                ", "    ", "zip", "f", ".", "w", "rit", "est", "r", "(", "filename", ",", " b", "6", "4", "encode", "(", "enc", "_", "data", ")", ".", "decode", "('", "utf", "-", "8", "'))", "\n", "\n", "    ", "return", " pub", "_", "key", ",", " zip", "file", "_", "name", "\n", "\n", "def"], "logprobs": [-1.2615023851394653, -0.7520076036453247, -1.6938409805297852, -1.8487569093704224, -0.6156553626060486, -0.29604804515838623, -0.004096450749784708, -0.5048620104789734, -0.0044563510455191135, -1.7588608264923096, -0.20223674178123474, -0.19113777577877045, -0.005248221103101969, -0.012428807094693184, -0.07576142251491547, -0.0013502062065526843, -0.00014959646796341985, -0.012419858947396278, -0.00397641584277153, -0.097657710313797, -0.00018070495571009815, -0.0007750368095003068, -0.026316586881875992, -0.02149663306772709, -0.0005809764843434095, -1.213381052017212, -0.0017863045213744044, -0.0016512343427166343, -0.5987776517868042, -0.3221050798892975, -0.0010214593494310975, -0.004471541848033667, -0.00018070495571009815, -0.3866111636161804, -0.02591707743704319, -0.14804768562316895, -0.00032884435495361686, -0.09347410500049591, -3.293393850326538, -1.3225587606430054, -3.723050594329834, -0.2478943169116974, -0.024665839970111847, -0.2217070460319519, -0.11783347278833389, -0.15687145292758942, -0.001789517467841506, -0.15037135779857635, -0.3719758987426758, -0.0015159078175202012, -0.00838462170213461, -0.0012535341084003448, -1.0512181520462036, -0.5514848232269287, -0.02470235899090767, -0.41721925139427185, -0.17802022397518158, -2.8612356185913086, -2.470519542694092, -0.009141495451331139, -0.10969248414039612, -0.0005327236140146852, -0.00045468006283044815, -0.0026003853417932987, -0.029138097539544106, -0.0003880701260641217, -0.048529528081417084, -2.190779447555542, -1.472072720527649, -1.0009543895721436, -0.3038181960582733, -0.6142313480377197, -0.024411216378211975, -0.18043790757656097, -0.0004544417606666684, -0.4238741099834442, -0.029296480119228363, -3.4570634852570947e-06, -4.255681051290594e-05, -0.0036819064989686012, -0.0018561530159786344, -0.0005273620481602848, -0.007999997586011887, -0.01100329402834177, -4.6967357775429264e-05, -0.000445385929197073, -2.95634672511369e-05, -0.00034445550409145653, -0.021184131503105164, -0.0041547417640686035, -0.30293381214141846, -8.868777513271198e-05, -0.1455378532409668, -1.479265570640564, -0.0009011736838147044, -0.0003389737685211003, -0.05408181622624397, -0.24627892673015594, -0.5259591937065125, -0.0009322587866336107, -1.1424751281738281, -1.7970046997070312, -0.0587640106678009, -0.1770719736814499, -1.1721762418746948, -0.0027954806573688984, -0.08417432010173798, -0.0014265133067965508, -0.00895200576633215, -3.784513235092163, -0.08763353526592255, -1.0380074977874756, -0.006853880826383829, -1.9515200853347778, -1.597391747054644e-05, -1.168244216387393e-05, -0.0006812873762100935, -0.005223910789936781, -5.125986263010418e-06, -4.5298504119273275e-05, -0.002625948516651988, -0.0012017417466267943, -0.0037170620635151863, -0.0014998388942331076, -0.00496416911482811, -0.44717302918434143, -0.09478955715894699, -0.0001358893496217206, -0.002692884998396039, -8.391981828026474e-05, -6.794906312279636e-06, -8.201262971851975e-05, -0.0008573431987315416, -0.004247809760272503, -0.333175927400589, -1.5370362997055054, -0.1784590184688568, -0.12648023664951324, -0.9806010127067566, -0.6630561947822571, -0.2927406430244446, -1.1278231143951416, -0.9083619117736816, -0.0008450751192867756, -0.10014306008815765, -0.004242468159645796, -0.0011075560469180346, -0.04377942532300949, -0.0007831366965547204, -2.7179348762729205e-05, -0.005241699051111937, -0.00034362133010290563, -1.6212332411669195e-05, -0.0015789910685271025, -3.683499380713329e-05, -0.0016991952434182167, -0.0036887952592223883, -4.708655978902243e-05, -0.016199275851249695, -0.005305733531713486, -0.0022351776715368032, -0.0001752223033690825, -1.3962562084197998, -0.04442412778735161, -0.0005586970364674926, -0.0008147019543685019, -0.0005751386051997542, -1.2234963178634644, -0.0061776163056492805, -0.25061988830566406, -8.463501580990851e-05, -6.305972783593461e-05, -0.001479722443036735, -0.005995503626763821, -0.05591936036944389, -0.13194449245929718, -0.5535960793495178, -2.7794735431671143, -0.00829524826258421, -0.001832593115977943, -0.09678146243095398, -0.0008839037618599832, -0.0018105795606970787, -0.007103544659912586, -0.00035255891270935535, -0.01104031503200531, -0.025806603953242302, -0.0009927588980644941, -0.02852945774793625, -9.858122211880982e-05, -3.814689989667386e-06, -0.007385688368231058, -0.004084103740751743, -1.4446102380752563, -0.0021969962399452925, -0.400755912065506, -0.036896031349897385, -2.439579486846924, -0.0791395753622055, -0.010769343003630638, -0.4330870509147644, -1.6437299251556396, -0.12037557363510132, -0.006939121522009373, -0.01717163808643818, -0.07297497987747192, -0.00014161060971673578, -0.00014435203047469258, -0.08726412802934647, -0.012992607429623604, -0.0005613181856460869, -0.008168385364115238, -0.00019870213873218745, -3.8980677345534787e-05, -0.0042596799321472645, -0.024771323427557945, -0.115117147564888, -0.015351234935224056, -0.0466972254216671, -4.8636207793606445e-05, -1.1920928244535389e-07, -6.949660019017756e-05, -0.0001323135511483997, -0.006336241960525513, -0.0003023882454726845, -2.622600959512056e-06, -0.11048790067434311, -0.00038485272671096027, -0.0001705739414319396, -1.4315415620803833, -0.11788390576839447, -0.011202532798051834, -0.00015746307326480746, -0.00514338631182909, -0.004999042488634586, -0.06595444679260254, -0.007780366111546755, -0.5347967147827148, -0.200431689620018, -1.0251946150674485e-05, -5.483612312673358e-06, -0.002139780670404434, -0.008317829109728336, -5.602820692729438e-06, -0.0006456674309447408, -1.2636104656849056e-05, -0.4775325655937195, -0.01281726360321045, -0.9921720623970032], "finish_reason": "stop"}], "metrics": {"energy": 365.13721667861944, "energy_per_token": 1.4664145248137326, "time": 11.893253, "time_per_token": 0.04776406827309237}}
{"outputs": [{"text": "pub_key = rsa.generate_public_private_key().public_key\n    zip_name = 'encrypted_files.zip'\n    with zipfile.ZipFile(zip_name, 'w', compression=zipfile.ZIP_DEFLATED) as zip_file:\n        for filename in os.listdir(directory):\n            with open(os.path.join(directory, filename), 'rb') as file:\n                data = file.read()\n            zip_file.writestr(filename, b64encode(rsa.encrypt(data, pub_key.public_numbers())).decode('utf-8'))\n    return pub_key, zip_name", "tokens": ["pub", "_", "key", " =", " r", "sa", ".", "generate", "_", "public", "_", "private", "_", "key", "()", ".", "public", "_", "key", "\n", "    ", "zip", "_", "name", " =", " '", "enc", "rypted", "_", "files", ".", "zip", "'", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "name", ",", " '", "w", "'", ",", " compression", "=", "zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "data", " =", " file", ".", "read", "()", "\n", "            ", "zip", "_", "file", ".", "w", "rit", "est", "r", "(", "filename", ",", " b", "6", "4", "encode", "(", "rs", "a", ".", "enc", "rypt", "(", "data", ",", " pub", "_", "key", ".", "public", "_", "numbers", "()))", ".", "decode", "('", "utf", "-", "8", "'))", "\n", "    ", "return", " pub", "_", "key", ",", " zip", "_", "name", "\n", "\n", "def"], "logprobs": [-2.0369672775268555, -0.05048451945185661, -0.012258545495569706, -0.3975834846496582, -0.43566855788230896, -0.0027506633196026087, -0.001543165068142116, -0.7335166335105896, -0.004372559953480959, -0.5242445468902588, -0.009584246203303337, -1.7595341205596924, -0.01829991117119789, -0.050982411950826645, -0.6445354223251343, -2.0959548950195312, -0.026770485565066338, -0.14094512164592743, -0.0008166077313944697, -0.2215149700641632, -0.2369997501373291, -0.7072703242301941, -0.5519223213195801, -1.8271056413650513, -0.017638254910707474, -1.3754560947418213, -0.7706857323646545, -0.05043317377567291, -0.5820040702819824, -0.3373020887374878, -0.06568891555070877, -0.0006014683749526739, -0.0005802616360597312, -0.010604342445731163, -0.47660738229751587, -1.0979783535003662, -0.2417810708284378, -8.05822346592322e-05, -5.173549288883805e-05, -0.0036880825646221638, -0.0007247682078741491, -0.0002967870968859643, -0.0216215830296278, -0.06711475551128387, -0.005296958610415459, -0.0006200536736287177, -0.0006279165390878916, -0.07348340004682541, -0.01562484074383974, -1.302095890045166, -0.0019150504376739264, -0.6509418487548828, -0.009966962970793247, -0.002078041434288025, -3.0517112463712692e-05, -3.4450891689630225e-05, -0.00311782187782228, -0.016256045550107956, -0.0006423317245207727, -0.01890544779598713, -0.0008924792055040598, -0.004259798675775528, -0.04444807395339012, -0.00012659224739763886, -0.20558148622512817, -0.3671126961708069, -0.08815933763980865, -0.002946561435237527, -0.004001824650913477, -0.0032633880618959665, -0.041195306926965714, -1.7799016237258911, -0.0042783161625266075, -0.010957074351608753, -7.152531907195225e-06, -0.00010346830822527409, -1.7881377516459906e-06, -0.0040037245489656925, -0.0009591746493242681, -8.415821503149346e-05, -0.003454077523201704, -0.0009427393670193851, -1.0871690511703491, -0.014316700398921967, -0.0016486160457134247, -0.13977062702178955, -0.0014692475087940693, -4.1126360883936286e-05, -0.0040677194483578205, -4.827859811484814e-05, -8.356221951544285e-05, -0.0005123494775034487, -8.594620157964528e-05, -0.0033513116650283337, -0.006977240554988384, -6.758938252460212e-05, -0.024408772587776184, -0.005618020426481962, -0.0015161458868533373, -0.00032479254878126085, -0.4043407440185547, -0.052354928106069565, -0.004735920112580061, -0.0007150000892579556, -1.326278567314148, -0.007147694006562233, -0.37686190009117126, -0.0001573438785271719, -7.760223525110632e-05, -0.0007146426942199469, -0.011671943590044975, -1.5595402717590332, -0.9315659403800964, -0.002962607191875577, -0.009582002647221088, -0.00012909532233607024, -0.026378588750958443, -0.001949554425664246, -0.00013445904187392443, -0.0011148196645081043, -0.04516219347715378, -0.11079643666744232, -0.027730772271752357, -0.13385453820228577, -9.536288416711614e-05, -3.576278118089249e-07, -5.94836674281396e-05, -0.00031418632715940475, -0.09377143532037735, -0.00042226933874189854, -0.0018205749802291393, -0.05178765207529068, -0.0015422129072248936, -0.057087983936071396, -0.021395938470959663, -0.015040564350783825, -0.006979608442634344, -5.4596363042946905e-05, -3.933898824470816e-06, -1.9048752784729004, -1.720099925994873, -0.02969093807041645, -0.17381060123443604, -2.64318585395813, -0.00647541880607605, -0.00020239688456058502, -1.7720284461975098, -0.13934127986431122, -0.02261945605278015, -0.0004862556525040418, -0.004847085103392601, -0.0033707963302731514, -0.12896673381328583, -0.010326527059078217, -0.01685836724936962, -2.3483953555114567e-05, -2.7418097943154862e-06, -0.0031068886164575815, -0.03451668098568916, -0.03992399200797081, -0.001534119131974876, -0.38940635323524475, -0.016399241983890533, -0.8780454397201538], "finish_reason": "stop"}], "metrics": {"energy": 219.46842143821718, "energy_per_token": 1.3382220819403488, "time": 7.7270713, "time_per_token": 0.047116288414634146}}
{"outputs": [{"text": "if not directory.endswith('/'):\n        directory += '/'\n    rsa_public_key = rsa.PublicKey(2048)\n\n    zips = []\n    for file_name in os.listdir(directory):\n        if file_name.endswith('.zip'):\n            zip_file_name = directory + file_name\n            zips.append(zip_file_name)\n        else:\n            zips.append('{0}{1}.zip'.format(directory, file_name))\n\n    zipfile_name = zipfile.zipfile.ZipFile(zips[-1], mode='w')\n    for file_name, data in get_encrypted_data(zips, rsa_public_key):\n        zipfile_name.writestr(file_name, data, zipfile.ZIP_DEFLATED)\n\n    return rsa_public_key, zips[-1]", "tokens": ["if", " not", " directory", ".", "end", "sw", "ith", "('/", "')", ":", "\n", "        ", "directory", " +=", " '/", "'", "\n", "    ", "rs", "a", "_", "public", "_", "key", " =", " r", "sa", ".", "Public", "Key", "(", "2", "0", "4", "8", ")", "\n", "\n", "    ", "z", "ips", " =", " []", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " file", "_", "name", ".", "end", "sw", "ith", "('", ".", "zip", "')", ":", "\n", "            ", "zip", "_", "file", "_", "name", " =", " directory", " +", " file", "_", "name", "\n", "            ", "z", "ips", ".", "append", "(", "zip", "_", "file", "_", "name", ")", "\n", "        ", "else", ":", "\n", "            ", "z", "ips", ".", "append", "('", "{", "0", "}{", "1", "}", ".", "zip", "'", ".", "format", "(", "directory", ",", " file", "_", "name", "))", "\n", "\n", "    ", "zip", "file", "_", "name", " =", " zip", "file", ".", "zip", "file", ".", "Z", "ip", "File", "(", "z", "ips", "[-", "1", "]", ",", " mode", "='", "w", "')", "\n", "    ", "for", " file", "_", "name", ",", " data", " in", " get", "_", "enc", "rypted", "_", "data", "(", "z", "ips", ",", " r", "sa", "_", "public", "_", "key", "):", "\n", "        ", "zip", "file", "_", "name", ".", "w", "rit", "est", "r", "(", "file", "_", "name", ",", " data", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", "\n", "\n", "    ", "return", " r", "sa", "_", "public", "_", "key", ",", " z", "ips", "[-", "1", "]", "\n", "\n", "def"], "logprobs": [-3.3298254013061523, -0.18059903383255005, -2.437821865081787, -0.9477593302726746, -0.1865168958902359, -4.136476854910143e-05, -4.768370445162873e-07, -0.6107721924781799, -0.001255200942978263, -0.011656626127660275, -0.02746405452489853, -0.0024888513144105673, -0.03960723057389259, -0.35796356201171875, -0.010450521484017372, -0.0005878866068087518, -0.006777039263397455, -0.6954801082611084, -3.90995454788208, -0.04300824552774429, -0.27520355582237244, -2.559055805206299, -0.21669253706932068, -0.031107179820537567, -0.40925782918930054, -0.41443467140197754, -0.009429087862372398, -0.0023523299023509026, -0.6616204380989075, -0.003801739541813731, -0.6559581756591797, -2.5589184761047363, -0.022608967497944832, -0.002603120170533657, -0.004149636719375849, -0.926306426525116, -0.06910809874534607, -1.886401653289795, -0.0006792622152715921, -3.981781482696533, -2.783130645751953, -0.13439296185970306, -0.248237743973732, -0.03381704166531563, -0.15227296948432922, -0.249041348695755, -1.7537155151367188, -0.8180128931999207, -0.34273242950439453, -0.03827125206589699, -0.044752705842256546, -1.4305012882687151e-05, -0.0009513143450021744, -5.722029527532868e-06, -0.0037796504329890013, -0.001793087343685329, -0.0011892396723851562, -0.006125841289758682, -0.014154751785099506, -0.8173831105232239, -0.4002368450164795, -0.0004451475979294628, -0.0004070168943144381, -0.06543224304914474, -0.08286961913108826, -2.5748875486897305e-05, 0.0, -0.18199044466018677, -0.04185745492577553, -1.2863612174987793, -0.004808173049241304, -0.09341221302747726, -0.01404908299446106, -0.0014934111386537552, -2.818603277206421, -0.17050065100193024, -0.9451850652694702, -1.4713884592056274, -0.6236236691474915, -0.0020402108784765005, -1.4002785682678223, -0.019253861159086227, -0.03259238600730896, -3.933898824470816e-06, -1.6689160474925302e-05, -0.01193901989609003, -0.10149426013231277, -0.8074154853820801, -0.09627392143011093, -0.0064048259519040585, -0.002953930525109172, -0.11409038305282593, -0.03853728249669075, -0.04353669658303261, -0.000331704446580261, -3.0040289857424796e-05, -0.00014578233822248876, -0.003105700248852372, -0.002543193055316806, -1.172457218170166, -0.46527695655822754, -5.566918844124302e-05, -0.0024535334669053555, -0.0018769757589325309, -3.6024351119995117, -0.13617205619812012, -0.016474878415465355, -0.010464559309184551, -2.495816707611084, -3.338088035583496, -1.5125889778137207, -1.7506957054138184, -0.004614538047462702, -1.091254711151123, -0.0033467968460172415, -0.038968928158283234, -0.004043380729854107, -0.005217625759541988, -0.0007008241955190897, -0.0014524635626003146, -0.047859854996204376, -0.047198373824357986, -0.06197836995124817, -0.00027771908207796514, -0.00013636612857226282, -0.09602703899145126, -0.0047882418148219585, -0.306354820728302, -0.029913561418652534, -1.980011224746704, -2.528895854949951, -0.9007161855697632, -0.14067889750003815, -0.020709240809082985, -3.7234036922454834, -0.7055904865264893, -0.0013093716697767377, -2.1426939964294434, -0.004381461534649134, -0.6287458539009094, -0.08146288990974426, -0.01879478245973587, -0.026889557018876076, -0.14254361391067505, -0.2804323434829712, -0.002078279387205839, -2.802623748779297, -0.003993869759142399, -0.14256004989147186, -0.007258472964167595, -2.0810368061065674, -0.0752565935254097, -0.05302125960588455, -0.33887192606925964, -0.019354071468114853, -0.7100578546524048, -0.7359054088592529, -0.8125524520874023, -0.09387638419866562, -0.08871432393789291, -2.8388266563415527, -3.023818016052246, -0.014062483794987202, -2.988718032836914, -0.01658662222325802, -1.6348628997802734, -0.32346561551094055, -0.026879113167524338, -1.607615351676941, -0.20322711765766144, -1.5196399688720703, -0.002702039433643222, -1.4434188604354858, -0.6388335227966309, -0.00018106251081917435, -0.00658804876729846, -0.0004677870310842991, -1.0847986231965479e-05, -3.862306402879767e-05, -0.2701265513896942, -0.005143860820680857, -0.00403981888666749, -0.09676414728164673, -0.048970844596624374, -0.0022947664838284254, -0.0002544794406276196, -0.0008417400531470776, -0.12062634527683258, -0.00022432672267314047, -0.00022373080719262362, -0.000979539705440402, -0.02517361380159855, -0.07114255428314209, -0.00046361665590666234, -0.00030763185350224376, -0.017947886139154434, -0.15474914014339447, -3.074205160140991, -1.7661994695663452, -0.0027782435063272715, -0.008253632113337517, -0.054619234055280685, -0.012447880581021309, -8.856858039507642e-05, -0.023647071793675423, -0.0008236353169195354, -0.001617315225303173, -0.006816703826189041, -0.002303091809153557, -0.5606528520584106, -0.004764276091009378, -0.35542598366737366, -0.07996868342161179, -0.0001399419124936685, -0.005580086261034012, -3.3378044463461265e-05, -3.2186455882765586e-06, -5.364403477869928e-06, -0.0019731116481125355, -0.33334147930145264, -0.001647425931878388, -0.023548223078250885, -0.00045563330058939755, -0.06363951414823532, -0.05594821646809578, -0.003833447117358446, -0.03796440735459328], "finish_reason": "stop"}], "metrics": {"energy": 344.79404619979846, "energy_per_token": 1.5189165030828127, "time": 10.844392, "time_per_token": 0.04777265198237885}}
{"outputs": [{"text": "# Create the RSA key pair.\n    pub_key, priv_key = rsa.newkeys(2048)\n\n    # Create a temporary directory to store the encrypted files.\n    tmp_dir = os.path.join(directory, \"temp\")\n    os.mkdir(tmp_dir)\n\n    # Loop through all files in the specified directory.\n    for filename in os.listdir(directory):\n        if os.path.isfile(filename):\n            with open(os.path.join(directory, filename), \"rb\") as f:\n                file_data = f.read()\n                encrypted_data = rsa.encrypt(file_data, pub_key)\n                enc_filename = f\"{filename}.enc\"\n                with open(os.path.join(tmp_dir, enc_filename), \"wb\") as f:\n                    f.write(encrypted_data)\n\n    # Zip the files.\n    zipfile_name = os.path.join(tmp_dir, \"encrypted_files.zip\")\n    with zipfile.", "tokens": ["#", " Create", " the", " R", "SA", " key", " pair", ".", "\n", "    ", "pub", "_", "key", ",", " priv", "_", "key", " =", " r", "sa", ".", "new", "keys", "(", "2", "0", "4", "8", ")", "\n", "\n", "    ", "#", " Create", " a", " temporary", " directory", " to", " store", " the", " encrypted", " files", ".", "\n", "    ", "tmp", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "temp", "\"", ")", "\n", "    ", "os", ".", "mk", "dir", "(", "tmp", "_", "dir", ")", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " the", " specified", " directory", ".", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "filename", "):", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "file", "_", "data", " =", " f", ".", "read", "()", "\n", "                ", "enc", "rypted", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "file", "_", "data", ",", " pub", "_", "key", ")", "\n", "                ", "enc", "_", "filename", " =", " f", "\"", "{", "filename", "}", ".", "enc", "\"", "\n", "                ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "tmp", "_", "dir", ",", " enc", "_", "filename", ")", ",", " \"", "wb", "\"", ")", " as", " f", ":", "\n", "                ", "    ", "f", ".", "write", "(", "enc", "rypted", "_", "data", ")", "\n", "\n", "    ", "#", " Zip", " the", " files", ".", "\n", "    ", "zip", "file", "_", "name", " =", " os", ".", "path", ".", "join", "(", "tmp", "_", "dir", ",", " \"", "enc", "rypted", "_", "files", ".", "zip", "\"", ")", "\n", "    ", "with", " zip", "file", "."], "logprobs": [-1.2615023851394653, -2.436136245727539, -2.744633197784424, -1.0414247512817383, -4.1483970562694594e-05, -0.7007461786270142, -0.4982786476612091, -2.4053473472595215, -0.09296607971191406, -0.0015775627689436078, -0.813512921333313, -0.1764066517353058, -0.005644217599183321, -0.030379362404346466, -0.028138713911175728, -0.0013193720951676369, -0.0001525762490928173, -0.009296344593167305, -0.07467517256736755, -0.00028772983932867646, -0.0008087463211268187, -0.016818981617689133, -0.03986614570021629, -0.0007061848300509155, -0.9784987568855286, -0.004085528198629618, -0.0005006728461012244, -0.00023850933939684182, -0.3792240023612976, -0.026365701109170914, -0.10714564472436905, -0.00034231049357913435, -0.059105779975652695, -1.3293503522872925, -0.36406150460243225, -3.5945119857788086, -0.3473780155181885, -0.6225691437721252, -0.19558635354042053, -0.1691276729106903, -0.056566763669252396, -0.011988021433353424, -0.09383557736873627, -0.004321640823036432, -0.0007965967524796724, -1.1171836853027344, -0.1717548817396164, -0.03155394271016121, -0.015323764644563198, -0.9753279089927673, -1.9073468138230965e-06, -0.007973507978022099, -0.017372697591781616, -0.03800974041223526, -0.029948964715003967, -0.2989654541015625, -0.0022971450816839933, -1.8383359909057617, -2.145595073699951, -0.23868492245674133, -0.006687403656542301, -0.007382966578006744, -0.02112787589430809, -0.48127201199531555, -7.033323527139146e-06, -0.8163661956787109, -2.5987286790041253e-05, -3.611976353568025e-05, -0.00038485272671096027, -4.053033626405522e-05, -9.417489309271332e-06, -0.013976671732962132, -0.0025018127635121346, -0.05350726842880249, -0.0001627074379939586, -0.0665753111243248, -2.286520481109619, -0.1997666209936142, -0.6688181161880493, -0.07020974904298782, -0.023433178663253784, -0.0050942855887115, -1.0770682096481323, -0.0013067525578662753, -0.31271934509277344, -0.0029125672299414873, -0.0005762108485214412, -0.03674700856208801, -0.8013103604316711, -0.0033551135566085577, -0.014212459325790405, -0.0007570500019937754, -0.00016783259343355894, -1.1920922133867862e-06, -0.0004024887748528272, -0.0014078239910304546, -5.054346183896996e-05, -0.00022825974156148732, -0.01732548326253891, -1.1911706924438477, -1.675769329071045, -4.625213477993384e-05, -0.0005675135762430727, -0.005414582323282957, -0.005734184291213751, -0.0070657855831086636, -4.660974445869215e-05, -2.0184011459350586, -0.08153387904167175, -0.013875570148229599, -0.01604701764881611, -1.3418552875518799, -0.023828675970435143, -0.00015484087634831667, -2.062976360321045, -0.0003409996279515326, -1.3351351299206726e-05, -0.0011210116790607572, -0.0001397035230183974, -2.3245540432981215e-05, -0.010587121360003948, -3.158996332786046e-05, -0.0010052633006125689, -0.013041792437434196, -4.60137271147687e-05, -0.4088357388973236, -0.011983309872448444, -0.0019214755157008767, -0.00023719835735391825, -7.998623186722398e-05, -0.8084667325019836, -0.126607745885849, -0.0023036866914480925, -0.0037193186581134796, -1.486477255821228, -0.007203558459877968, -0.08639151602983475, -0.0006272017490118742, -0.06114407256245613, -1.4066597032069694e-05, -1.0013530300057027e-05, -0.0006529344827868044, -0.011180371046066284, -1.1757633686065674, -0.5909377932548523, -0.18085305392742157, -0.039264921098947525, -0.13086248934268951, -0.0027141659520566463, -0.025432808324694633, -0.00023779425828251988, -0.0006825978052802384, -0.005865029990673065, -0.0001934579631779343, -0.004215759225189686, -0.01271851547062397, -4.2437604861333966e-05, -1.0371154530730564e-05, -0.0008723505889065564, -0.04433267191052437, -9.65590606938349e-06, -1.1920922133867862e-06, -0.006083187181502581, -0.004015360493212938, -0.23583164811134338, -1.1460270881652832, -2.3690290451049805, -0.43266716599464417, -0.0009461931767873466, -1.560119867324829, -0.017985353246331215, -0.176352396607399, -0.17132841050624847, -0.10899756103754044, -0.0014287750236690044, -0.13469599187374115, -0.09026207774877548, -0.009680353105068207, -0.04886550083756447, -0.09369165450334549, -0.0008756855386309326, -0.00016234986833296716, -0.008392778225243092, -0.0001752223033690825, -6.318072337307967e-06, -0.0005343916127458215, -1.0132738680113107e-05, -2.658331868587993e-05, -0.017848121002316475, -8.583032467868179e-06, -3.2186455882765586e-06, -9.83428253675811e-05, -0.0019997614435851574, -7.510157047363464e-06, -1.6689286894688848e-06, -0.00020895205670967698, -5.924526340095326e-05, -0.01279890350997448, -0.001104817260056734, -0.004151179920881987, -0.0005521441926248372, -5.173549288883805e-05, -0.35235992074012756, -0.06306159496307373, -0.0003228858404327184, -8.535020606359467e-05, -0.0007543102256022394, -0.0031161580700427294, -5.8412379075889476e-06, -3.266281055402942e-05, -2.312633478140924e-05, -0.02529008500277996, -0.0017446548445150256, -7.510157047363464e-06, -8.106198947643861e-06, -0.00047255316167138517, -0.0008257793379016221, -0.03829867020249367, -0.011332194320857525, -0.019670767709612846, -1.3671813011169434, -0.7596273422241211, -2.0654001235961914, -2.28193998336792, -0.006450308952480555, -0.0005901502445340157, -0.1081845834851265, -1.5176007747650146, -0.0034722534473985434, -0.07732107490301132, -0.00044288364006206393, -0.2450149804353714, -2.9802276912960224e-06, -5.674201020156033e-05, -0.0004435985756572336, -0.019996946677565575, -0.00033706706017255783, -1.2145562171936035, -3.015949550899677e-05, -4.768370445162873e-07, -0.0016445695655420423, -0.29853740334510803, -1.213605523109436, -0.10067655891180038, -0.817045271396637, -0.07227335125207901, -0.009665949270129204, -0.00020656836568377912, -0.0001081169830285944, -5.435795901576057e-05, -0.0015835139201954007, -0.005328144412487745, -0.40715423226356506, -0.031849827617406845, -2.861018856492592e-06, -1.4185804502631072e-05], "finish_reason": "length"}], "metrics": {"energy": 347.4075016250611, "energy_per_token": 1.357060553222895, "time": 12.338389, "time_per_token": 0.04819683203125}}
{"outputs": [{"text": "# Generate RSA keys\n    pub_key, priv_key = rsa.newkeys(1024, random_blurb=b\"random bytes to generate keys\")\n\n    # Iterate over all files in the directory\n    with os.scandir(directory) as files:\n        for entry in files:\n            if entry.is_file():\n                # Read the file data\n                with open(entry.path, \"rb\") as file:\n                    file_data = file.read()\n\n                # Encrypt the data\n                encrypted = rsa.encrypt(file_data, pub_key)\n\n                # Create a temporary zip file\n                zip_file = zipfile.ZipFile(\"encrypted.zip\", \"w\")\n                zip_file.writestr(entry.name, encrypted)\n                zip_file.close()\n\n                # Save the encrypted file\n                with open(entry.path + '.encrypted', 'wb') as f:\n                    f.write(encrypted)\n\n    return pub_key, \"encrypted.zip\"\n\n", "tokens": ["#", " Generate", " R", "SA", " keys", "\n", "    ", "pub", "_", "key", ",", " priv", "_", "key", " =", " r", "sa", ".", "new", "keys", "(", "1", "0", "2", "4", ",", " random", "_", "bl", "urb", "=", "b", "\"", "random", " bytes", " to", " generate", " keys", "\"", ")", "\n", "\n", "    ", "#", " Iter", "ate", " over", " all", " files", " in", " the", " directory", "\n", "    ", "with", " os", ".", "sc", "and", "ir", "(", "directory", ")", " as", " files", ":", "\n", "        ", "for", " entry", " in", " files", ":", "\n", "            ", "if", " entry", ".", "is", "_", "file", "():", "\n", "                ", "#", " Read", " the", " file", " data", "\n", "                ", "with", " open", "(", "entry", ".", "path", ",", " \"", "rb", "\"", ")", " as", " file", ":", "\n", "                ", "    ", "file", "_", "data", " =", " file", ".", "read", "()", "\n", "\n", "                ", "#", " Enc", "rypt", " the", " data", "\n", "                ", "enc", "rypted", " =", " r", "sa", ".", "enc", "rypt", "(", "file", "_", "data", ",", " pub", "_", "key", ")", "\n", "\n", "                ", "#", " Create", " a", " temporary", " zip", " file", "\n", "                ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "\"", "enc", "rypted", ".", "zip", "\"", ",", " \"", "w", "\"", ")", "\n", "                ", "zip", "_", "file", ".", "w", "rit", "est", "r", "(", "entry", ".", "name", ",", " encrypted", ")", "\n", "                ", "zip", "_", "file", ".", "close", "()", "\n", "\n", "                ", "#", " Save", " the", " encrypted", " file", "\n", "                ", "with", " open", "(", "entry", ".", "path", " +", " '", ".", "enc", "rypted", "'", ",", " '", "wb", "')", " as", " f", ":", "\n", "                ", "    ", "f", ".", "write", "(", "enc", "rypted", ")", "\n", "\n", "    ", "return", " pub", "_", "key", ",", " \"", "enc", "rypted", ".", "zip", "\"", "\n", "\n"], "logprobs": [-1.2615023851394653, -0.7520076036453247, -0.6886568069458008, -1.5020257706055418e-05, -1.1130421161651611, -0.32794561982154846, -0.0017128810286521912, -0.6236867308616638, -0.13981883227825165, -0.0049195671454072, -0.02535238489508629, -0.049529511481523514, -0.0015037668636068702, -0.00029213930247351527, -0.03181818872690201, -0.10351639986038208, -0.0002954761730507016, -0.0013486584648489952, -0.04714776948094368, -0.04471861943602562, -0.0007459718617610633, -1.5603106021881104, -0.006575140170753002, -0.00044705410255119205, -0.0004415729199536145, -0.9114300012588501, -2.064274311065674, -0.3057309687137604, -4.359711647033691, -2.5696396827697754, -0.01718827709555626, -0.4220581650733948, -1.0558624267578125, -2.4656929969787598, -4.396456241607666, -2.698744535446167, -2.6754448413848877, -1.6891587972640991, -0.040724676102399826, -0.014709239825606346, -0.020409690216183662, -0.20578013360500336, -0.0003134713042527437, -0.10458832234144211, -2.504350185394287, -0.005025018937885761, -0.479768306016922, -1.3529170751571655, -0.033484961837530136, -0.0625419095158577, -0.06587676703929901, -0.4925249218940735, -0.4138652980327606, -0.000754786713514477, -2.6463782787323, -0.174931600689888, -2.6940935640595853e-05, -0.012121113948523998, -4.541770613286644e-05, -3.731181277544238e-05, -0.0005103239673189819, -0.0008892634068615735, -5.602679812000133e-05, -3.528532761265524e-05, -2.8042469024658203, -0.012227574363350868, -0.0019013675628229976, -0.005166986957192421, -0.42617079615592957, -2.505754232406616, -0.0005995621904730797, -0.001191144809126854, -0.000285584683297202, -0.002539625857025385, -0.012765477411448956, -0.4078143537044525, -0.21664954721927643, -2.5987286790041253e-05, -0.06376636028289795, -1.7523612768854946e-05, -0.008131730370223522, -0.0763869434595108, -0.058939799666404724, -0.008900610730051994, -0.3944719731807709, -2.458110809326172, -0.3282896876335144, -0.3623935282230377, -0.9627919793128967, -0.5247998833656311, -0.0005687049706466496, -0.1450895220041275, -0.06933580338954926, -0.00014733182615600526, -0.008094246499240398, -0.028497364372015, -0.004598162602633238, -0.0014194899704307318, -1.1246185302734375, -0.002717257011681795, -0.00041714549297466874, -0.00015352977789007127, -1.9430925021879375e-05, -0.85085529088974, -0.09081654995679855, -0.0007372760446742177, -0.0003081085451412946, -0.0002933310461230576, -0.9744533896446228, -0.0032789534889161587, -0.029345447197556496, -0.001258058357052505, -0.017389334738254547, -0.0001728385395836085, -2.3364747903542593e-05, -0.000734178873244673, -0.005154771730303764, -0.14503775537014008, -0.001620647613890469, -0.025596775114536285, -0.04199794679880142, -0.0029306341893970966, -0.06030312553048134, -1.9306957721710205, -1.4325556755065918, -0.00035589560866355896, -0.10753004997968674, -0.06828540563583374, -2.6011157035827637, -0.0965733453631401, -0.0008248264202848077, -0.0011857867939397693, -0.014916550368070602, -0.00036840804386883974, -0.007889656350016594, -0.014472277835011482, -0.00010895135346800089, -1.1086402082582936e-05, -0.00040141629870049655, -0.04880192503333092, -3.862306402879767e-05, -2.145764938177308e-06, -0.011647435836493969, -0.0026253541000187397, -0.10716599225997925, -0.0013965149410068989, -0.008893167600035667, -2.3552803993225098, -0.1425381302833557, -2.724945068359375, -1.9110047817230225, -0.07376304268836975, -1.4388396739959717, -0.0003672163875307888, -1.7497282028198242, -0.3142577111721039, -0.4820425510406494, -0.0878090187907219, -0.4163869619369507, -0.00011812942830147222, -3.361645576660521e-05, -0.020071260631084442, -0.000545472139492631, -0.0002748588449321687, -0.026010118424892426, -1.439151406288147, -1.3473252058029175, -0.01422914769500494, -0.7304118275642395, -0.0003721021639648825, -0.0003184764937032014, -0.0015961299650371075, -0.14675511419773102, -0.03334730491042137, -0.00011240804451517761, -0.3995515704154968, -0.005063329823315144, -1.3595736026763916, -0.17082709074020386, -0.0006553170969709754, -0.008836097083985806, -0.0004976941272616386, -0.33322370052337646, -0.0007259594276547432, -0.0001280225842492655, -0.0038466285914182663, -0.006126670632511377, -0.13404835760593414, -0.0008749709231778979, -0.03255419060587883, -0.005471610929816961, -0.13623926043510437, -0.03213581070303917, -0.024043066427111626, -0.08563107252120972, -0.005266720429062843, -0.00018809456378221512, -0.0001726001501083374, -0.00014435203047469258, -0.004904857836663723, -0.0013333010720089078, -0.004812918603420258, -0.1131092980504036, -0.9850935339927673, -0.08618560433387756, -1.345015525817871, -0.01808299869298935, -0.08348215371370316, -0.4670705199241638, -1.377683162689209, -0.004972946830093861, -0.420953631401062, -0.008505547419190407, -0.007500937208533287, -0.6704227924346924, -0.000732868502382189, -0.6472432613372803, -0.6124168038368225, -2.173729658126831, -0.006341572385281324, -0.27167364954948425, -0.9145146608352661, -0.037647366523742676, -0.0003748429589904845, -0.2681969702243805, -0.01439308188855648, -0.003752572927623987, -0.0027416283264756203, -1.9675869941711426, -0.03566410019993782, -0.0016310019418597221, -0.0001734344696160406, -0.002418452175334096, -0.1678309291601181, -4.684815212385729e-05, -0.002061267616227269, -0.0004752936656586826, -0.1376148909330368, -0.0006599632324650884, -0.018191635608673096, -0.004342056345194578, -0.11819811910390854, -0.16771723330020905, -0.38558366894721985, -0.03600994497537613, -0.000205018965061754, -8.4638240878121e-06, -0.006517463829368353, -0.8130143284797668, -0.010257385671138763, -0.0007219092221930623, -0.010431645438075066, -4.9470632802695036e-05, -0.0011308948742225766, -0.491487056016922, -0.014747063629329205], "finish_reason": "length"}], "metrics": {"energy": 387.5966651973726, "energy_per_token": 1.5140494734272367, "time": 12.293383, "time_per_token": 0.04802102734375}}
{"outputs": [{"text": "if not isinstance(directory, str):\n        raise ValueError(\"The 'directory' parameter must be a string.\")\n\n    # generate public and private key\n    (public_key, private_key) = generate_keys()\n\n    # list all files in the directory\n    files = os.listdir(directory)\n\n    # encrypt all files in the directory\n    for file in files:\n        file_path = os.path.join(directory, file)\n        encrypted_data = encrypt_file(public_key, file_path)\n\n        # write encrypted file data to a new file\n        encrypted_file_path = file_path.replace('.', '_enc.')\n        write_encrypted_file(encrypted_file_path, encrypted_data)\n\n    # compress the encrypted files into a zip file\n    zipfile_path = os.path.join(directory, f'{os.path.basename(directory)}_enc.zip')\n    zipfile.ZipFile(zipfile_path, 'w').write(os.path.join(directory, '__MACOSX'))\n", "tokens": ["if", " not", " isinstance", "(", "directory", ",", " str", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " '", "directory", "'", " parameter", " must", " be", " a", " string", ".", "\"", ")", "\n", "\n", "    ", "#", " generate", " public", " and", " private", " key", "\n", "    ", "(", "public", "_", "key", ",", " private", "_", "key", ")", " =", " generate", "_", "keys", "()", "\n", "\n", "    ", "#", " list", " all", " files", " in", " the", " directory", "\n", "    ", "files", " =", " os", ".", "list", "dir", "(", "directory", ")", "\n", "\n", "    ", "#", " encrypt", " all", " files", " in", " the", " directory", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " file", ")", "\n", "        ", "enc", "rypted", "_", "data", " =", " encrypt", "_", "file", "(", "public", "_", "key", ",", " file", "_", "path", ")", "\n", "\n", "        ", "#", " write", " encrypted", " file", " data", " to", " a", " new", " file", "\n", "        ", "enc", "rypted", "_", "file", "_", "path", " =", " file", "_", "path", ".", "replace", "('", ".", "'", ",", " '_", "enc", ".", "')", "\n", "        ", "write", "_", "enc", "rypted", "_", "file", "(", "enc", "rypted", "_", "file", "_", "path", ",", " encrypted", "_", "data", ")", "\n", "\n", "    ", "#", " compress", " the", " encrypted", " files", " into", " a", " zip", " file", "\n", "    ", "zip", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " f", "'{", "os", ".", "path", ".", "bas", "ename", "(", "directory", ")}_", "enc", ".", "zip", "')", "\n", "    ", "zip", "file", ".", "Z", "ip", "File", "(", "zip", "file", "_", "path", ",", " '", "w", "')", ".", "write", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "__", "MAC", "OS", "X", "'))", "\n"], "logprobs": [-3.3298254013061523, -0.18059903383255005, -2.774287700653076, -0.00033766290289349854, -0.026043567806482315, -0.00022825974156148732, -0.020719747990369797, -0.1799563765525818, -0.014103388413786888, -0.001524953986518085, -0.20179599523544312, -1.9324555397033691, -0.00023982033599168062, -0.3610939383506775, -0.13886143267154694, -2.1229448318481445, -2.03021240234375, -0.004922058433294296, -0.0006237468332983553, -0.7833915948867798, -0.11265163123607635, -0.0005000770906917751, -0.03688017651438713, -0.04258313775062561, -0.14139044284820557, -0.00522035313770175, -0.00027533553657121956, -0.0025059746112674475, -0.6296175122261047, -0.0005403488758020103, -1.9435179233551025, -3.2894232273101807, -1.0985368490219116, -0.43714603781700134, -0.0008605591137893498, -2.189218282699585, -0.6893413662910461, -0.0016786068445071578, -1.853466272354126, -1.4117529392242432, -0.08629179000854492, -0.009737374261021614, -0.022089160978794098, -0.02602962963283062, -0.0009984752396121621, -0.00017569905321579427, -0.015981554985046387, -0.0024398579262197018, -2.0353307723999023, -0.020931188017129898, -1.706146478652954, -0.19042688608169556, -0.005361108109354973, -0.09591646492481232, -0.00020668754586949944, -0.25953781604766846, -3.921954393386841, -1.0496896505355835, -0.0627470389008522, -0.19458268582820892, -0.1254846304655075, -0.1962568610906601, -0.1694965362548828, -0.0005915798828937113, -0.5003439784049988, -0.15643613040447235, -0.4280126094818115, -2.3364747903542593e-05, -0.0010752854868769646, -1.0728830375228426e-06, -0.0015224544331431389, -0.0007446615491062403, -0.0001323135511483997, -0.001081953989341855, -0.11369583010673523, -0.00013910756388213485, -0.07674328237771988, -0.9120372533798218, -1.4828670024871826, -0.007598899770528078, -1.0809400081634521, -0.012497562915086746, -0.05321953445672989, -0.5679253339767456, -0.0009139174944721162, -1.610249638557434, -0.3354470133781433, -0.562619686126709, -0.0014828173443675041, -0.0002812943421304226, -0.0007509748684242368, -0.00963218230754137, -1.8338743448257446, -0.3832996189594269, -0.07560504227876663, -0.0005999195855110884, -0.03034871630370617, -0.00038211196078918874, -8.22540732769994e-06, -0.006307220086455345, -0.00040356122190132737, -9.381330892210826e-05, -0.00030882356804795563, -0.0001062098381225951, -0.0008063640561886132, -7.319182623177767e-05, -0.0029211253859102726, -0.09872059524059296, -2.0335915088653564, -0.3802594244480133, -0.05998130142688751, -0.6681836247444153, -0.029598934575915337, -0.13978317379951477, -0.1478394865989685, -0.07914937287569046, -0.0555092915892601, -2.7363669872283936, -0.00010775939153973013, -1.4781842764932662e-05, -0.003927020356059074, -0.02979137934744358, -0.00885795708745718, -9.679325739853084e-05, -0.025136996060609818, -0.0023280680179595947, -0.4428984820842743, -0.26540520787239075, -0.05928633734583855, -1.6500604152679443, -0.411455363035202, -2.2421035766601562, -0.9217626452445984, -0.11533099412918091, -0.5652040839195251, -1.714769959449768, -0.048190146684646606, -0.15209390223026276, -0.0006901028100401163, -1.200190782546997, -0.027649836614727974, -0.0004686211177613586, -0.09616510570049286, -0.541079580783844, -0.322272390127182, -0.0004374024283606559, -0.917035698890686, -0.13604700565338135, -0.000284154579276219, -1.9628064632415771, -0.051232628524303436, -0.8899684548377991, -0.02124563604593277, -1.4183807373046875, -0.0018135543214157224, -0.1309105008840561, -0.13878652453422546, -2.497474193572998, -0.060935135930776596, -0.02279658615589142, -0.007550984621047974, -2.325214385986328, -0.0011268462985754013, -0.4739656150341034, -0.005771756637841463, -0.0022611068561673164, -0.551906406879425, -0.056517645716667175, -0.09296075254678726, -0.0007085673278197646, -5.602820692729438e-06, -0.4847705066204071, -0.1966538429260254, -0.0002240883477497846, -0.0007572882459498942, -0.01213147770613432, -7.986990567587782e-06, -0.000301673193462193, -0.02826005406677723, -0.0013322297018021345, -0.01849653199315071, -0.041573893278837204, -0.12974676489830017, -1.801749348640442, -1.5186609029769897, -0.04624864086508751, -0.014720517210662365, -0.09953136742115021, -0.004142157733440399, -0.029933923855423927, -0.10365999490022659, -0.0369369313120842, -0.0009118927991949022, -0.0933920219540596, -1.0056920051574707, -0.012758297845721245, -0.6299871206283569, -0.0010174104245379567, -1.3075497150421143, -0.0001932195882545784, -9.548207890475169e-05, -0.001858056872151792, -0.014225504361093044, -0.005072462372481823, -0.011791412718594074, -0.0019001776818186045, -1.5544577836990356, -0.8705247044563293, -0.6588101387023926, -0.00266304356046021, -0.01413030456751585, -0.00972001999616623, -0.09507673978805542, -1.9073468138230965e-06, -0.0003965306677855551, -0.005782661028206348, -0.24412082135677338, -0.26054647564888, -0.5645710229873657, -0.0008303055074065924, -0.00040737437666393816, -0.0012997282901778817, -0.038634199649095535, -0.8923661708831787, -0.6989753246307373, -0.2025909572839737, -0.04877876490354538, -0.0005565524916164577, -0.005046249832957983, -0.0005872909096069634, -0.0023532812483608723, -5.245071224635467e-05, -0.0002802217786666006, -0.0005657264264300466, -0.0005435658385977149, -0.05481471121311188, -0.003389449091628194, -0.65211421251297, -0.08941257745027542, -0.011647789739072323, -0.03722847253084183, -2.4451091289520264, -0.00038354191929101944, -0.026569681242108345, -0.0001597276859683916, -0.39222437143325806, -0.007091589737683535, -0.00874250940978527, -0.0020638848654925823, -0.4583998918533325, -3.2744851112365723, -1.0980322360992432, -0.0002261144545627758, -0.005816676188260317, -0.2134731262922287, -0.17612740397453308], "finish_reason": "length"}], "metrics": {"energy": 383.64782284736634, "energy_per_token": 1.4986243079975248, "time": 12.2964115, "time_per_token": 0.048032857421875}}
{"outputs": [{"text": "pub_key = rsa.generate_key(2048)\n    pub_key_str = pub_key.publickey().exportKey()\n    private_key_str = pub_key.exportKey()\n    encrypted_files = []\n    zip_file = zipfile.ZipFile(\n        'rsa_encrypted_files.zip', 'w', zipfile.ZIP_DEFLATED)\n\n    for filename in os.listdir(directory):\n        with open(os.path.join(directory, filename), 'rb') as f:\n            encrypted_file = rsa.encrypt(f.read(), pub_key_str)\n            zip_file.writestr(filename, b64encode(encrypted_file).decode('utf-8'))\n            encrypted_files.append(filename)\n\n    zip_file.close()\n    return pub_key, encrypted_files", "tokens": ["pub", "_", "key", " =", " r", "sa", ".", "generate", "_", "key", "(", "2", "0", "4", "8", ")", "\n", "    ", "pub", "_", "key", "_", "str", " =", " pub", "_", "key", ".", "public", "key", "()", ".", "export", "Key", "()", "\n", "    ", "private", "_", "key", "_", "str", " =", " pub", "_", "key", ".", "export", "Key", "()", "\n", "    ", "enc", "rypted", "_", "files", " =", " []", "\n", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "\n", "        ", "'", "rs", "a", "_", "enc", "rypted", "_", "files", ".", "zip", "'", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "enc", "rypted", "_", "file", " =", " r", "sa", ".", "enc", "rypt", "(", "f", ".", "read", "()", ",", " pub", "_", "key", "_", "str", ")", "\n", "            ", "zip", "_", "file", ".", "w", "rit", "est", "r", "(", "filename", ",", " b", "6", "4", "encode", "(", "enc", "rypted", "_", "file", ")", ".", "decode", "('", "utf", "-", "8", "'))", "\n", "            ", "enc", "rypted", "_", "files", ".", "append", "(", "filename", ")", "\n", "\n", "    ", "zip", "_", "file", ".", "close", "()", "\n", "    ", "return", " pub", "_", "key", ",", " encrypted", "_", "files", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.0369672775268555, -0.05048451945185661, -0.012258545495569706, -0.3975834846496582, -0.43566855788230896, -0.0027506633196026087, -0.001543165068142116, -0.7335166335105896, -0.004372559953480959, -1.467754602432251, -0.5577081441879272, -1.4050952196121216, -0.0259660966694355, -0.0003983181086368859, -0.00033778208307921886, -0.5917056798934937, -0.14362935721874237, -0.16865597665309906, -2.822392225265503, -0.20044994354248047, -0.04848182946443558, -0.28505679965019226, -1.223156213760376, -0.003439465072005987, -1.629774808883667, -0.0027481666766107082, -2.1815061700181104e-05, -0.003327786922454834, -0.04589391127228737, -1.0810233354568481, -0.020420435816049576, -0.06709547340869904, -0.23723231256008148, -0.20593588054180145, -0.3478420674800873, -0.5379437804222107, -0.09943261742591858, -2.180617332458496, -0.016758611425757408, -0.020830903202295303, -0.4764440655708313, -0.08798293769359589, -0.005764526780694723, -0.07994106411933899, -0.00023421882360707968, -5.125986263010418e-06, -0.0009803733555600047, -0.19717292487621307, -0.019252223894000053, -0.7765631079673767, -0.038926851004362106, -0.5533045530319214, -3.3880457878112793, -0.4857303500175476, -0.13105157017707825, -0.5554517507553101, -0.05363980680704117, -0.3333587348461151, -0.006769461557269096, -0.46355414390563965, -1.5126036405563354, -0.25283578038215637, -1.122279405593872, -0.7992687225341797, -0.41855674982070923, -0.0014688903465867043, -9.762764238985255e-05, -0.018081242218613625, -0.0006605588714592159, -0.00042143522296100855, -0.24612385034561157, -3.1631298065185547, -0.015872325748205185, -1.334954857826233, -3.636354684829712, -0.05730853229761124, -0.2536988854408264, -0.5278325080871582, -0.1784355789422989, -0.2430509626865387, -0.21970221400260925, -0.1563161313533783, -0.0010244365548714995, -0.0024556738790124655, -0.004562682006508112, -0.3271705210208893, -0.025127580389380455, -0.20916403830051422, -0.021107565611600876, -0.8026527762413025, -0.0002951186615973711, -0.0001627074379939586, -0.0032498424407094717, -0.06231086701154709, -0.0005175919504836202, -0.015000401996076107, -0.000814582861494273, -0.0011551857460290194, -0.44717279076576233, -0.01637367717921734, -1.1521949768066406, -0.0005708495154976845, -0.19017252326011658, -1.3666388988494873, -0.029285714030265808, -0.023558003827929497, -1.8954096958623268e-05, -0.00028308198670856655, -2.264974000354414e-06, -0.005944074597209692, -0.002679569413885474, -0.0002379134384682402, -0.0035551695618778467, -0.006147641688585281, -1.262687087059021, -0.0118802385404706, -0.005709174554795027, -0.25631988048553467, -0.001508409040980041, -0.00014840454969089478, -0.0013321106089279056, -0.00024029705673456192, -0.00020251607929822057, -0.0013712774962186813, -0.00015627116954419762, -0.005181099753826857, -0.01165969017893076, -0.00015698630886618048, -0.06693671643733978, -0.021862922236323357, -0.006383268162608147, -0.0013086573453620076, -0.8981966376304626, -0.030592583119869232, -0.0035175136290490627, -0.002574821701273322, -1.0447922945022583, -0.07953764498233795, -0.05593153461813927, -0.9343666434288025, -0.12307029962539673, -0.41004306077957153, -0.00042906138696707785, -0.001864363206550479, -0.028273150324821472, -0.00011121608258690685, -0.028450440615415573, -0.13151824474334717, -0.00040820849244482815, -0.0002445875434204936, -0.0007892115972936153, -0.0023016647901386023, -0.021458130329847336, -0.00022015532886143774, -1.6331539882230572e-05, -2.248399496078491, -0.0014672239776700735, -0.013103093951940536, -0.0077295019291341305, -0.10719083249568939, -0.3595846891403198, -0.0020034497138112783, -0.003427941584959626, -0.000686767278239131, -0.02483830414712429, -0.0004326361231505871, -8.046303264563903e-05, -0.0029541682451963425, -0.08017808198928833, -0.24938596785068512, -0.11255235970020294, -0.45969879627227783, -0.00011383838864276186, -7.152555099310121e-07, -8.737658936297521e-05, -0.00021264675888232887, -0.012726990506052971, -8.976056415122002e-05, -7.867782187531702e-06, -0.00015710550360381603, -0.49390411376953125, -0.007042466197162867, -0.0002967870968859643, -1.2679836750030518, -0.14244653284549713, -0.02151448465883732, -0.0004621868138201535, -0.011425185948610306, -0.0038712099194526672, -0.059568852186203, -0.010194257833063602, -9.63164638960734e-05, -2.5987286790041253e-05, -0.0005863377591595054, -0.0007402540650218725, -0.00032646095496602356, -0.027485162019729614, -0.38593536615371704, -0.0026587634347379208, -0.0010001424234360456, -0.2607782185077667, -0.0060854386538267136, -0.030421223491430283, -0.010445448569953442, -0.0009945451747626066, -0.0014621054287999868, -0.06299377232789993, -0.0013261580606922507, -0.0025824313051998615, -0.4924985468387604, -0.18340611457824707, -0.08459515124559402, -0.00013600854435935616, -8.106198947643861e-06, -0.14114058017730713, -0.6150493621826172, -0.00028761065914295614, -0.00028880240279249847, -1.3264949321746826, -4.768370445162873e-07, -1.311301275563892e-06, -4.589452510117553e-05, -0.00020561488054227084, -0.24727310240268707], "finish_reason": "stop"}], "metrics": {"energy": 290.03942905235306, "energy_per_token": 1.2948188796980047, "time": 10.608793, "time_per_token": 0.047360683035714286}}
{"outputs": [{"text": "# Generate a RSA public/private key pair.\n    pub_key, priv_key = rsa.newkeys(2048, os.urandom)\n\n    # Create an empty zip file in the current directory.\n    zip_file = zipfile.ZipFile(os.path.join(directory, 'encrypted.zip'), 'w')\n\n    # Iterate through all files in the specified directory.\n    for filename in os.listdir(directory):\n        with open(os.path.join(directory, filename), 'rb') as f:\n            file_data = f.read()\n\n            # Encrypt file data using the public key and write it to the zip file.\n            zip_file.writestr(filename, b64encode(rsa.encrypt(file_data, pub_key)))\n\n    zip_file.close()\n\n    return pub_key, os.path.join(directory, 'encrypted.zip')", "tokens": ["#", " Generate", " a", " R", "SA", " public", "/", "private", " key", " pair", ".", "\n", "    ", "pub", "_", "key", ",", " priv", "_", "key", " =", " r", "sa", ".", "new", "keys", "(", "2", "0", "4", "8", ",", " os", ".", "u", "random", ")", "\n", "\n", "    ", "#", " Create", " an", " empty", " zip", " file", " in", " the", " current", " directory", ".", "\n", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "enc", "rypted", ".", "zip", "')", ",", " '", "w", "')", "\n", "\n", "    ", "#", " Iter", "ate", " through", " all", " files", " in", " the", " specified", " directory", ".", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "file", "_", "data", " =", " f", ".", "read", "()", "\n", "\n", "            ", "#", " Enc", "rypt", " file", " data", " using", " the", " public", " key", " and", " write", " it", " to", " the", " zip", " file", ".", "\n", "            ", "zip", "_", "file", ".", "w", "rit", "est", "r", "(", "filename", ",", " b", "6", "4", "encode", "(", "rs", "a", ".", "enc", "rypt", "(", "file", "_", "data", ",", " pub", "_", "key", ")))", "\n", "\n", "    ", "zip", "_", "file", ".", "close", "()", "\n", "\n", "    ", "return", " pub", "_", "key", ",", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "enc", "rypted", ".", "zip", "')"], "logprobs": [-1.2615023851394653, -0.7520076036453247, -2.1368207931518555, -1.8926688432693481, -6.0437283536884934e-05, -0.7862109541893005, -2.20821475982666, -0.000847814604640007, -0.004635896533727646, -0.1275220662355423, -1.9997706413269043, -0.056356754153966904, -0.0032624374143779278, -0.6552739143371582, -0.28079313039779663, -0.03615022450685501, -0.029932651668787003, -0.04987342655658722, -0.0017477489309385419, -0.00023946279543451965, -0.014821886084973812, -0.04717642813920975, -0.00022373080719262362, -0.0006543640629388392, -0.03661634773015976, -0.05315442755818367, -0.0005427317810244858, -0.8801250457763672, -0.0035870037972927094, -0.0006811682251282036, -0.0003044141922146082, -1.0652614831924438, -0.3053964674472809, -0.0004555141495075077, -0.001987150404602289, -0.0001842805795604363, -0.06484921276569366, -0.018665382638573647, -0.13271291553974152, -0.000392598332837224, -0.06565587222576141, -1.7777128219604492, -1.9232981204986572, -0.0678897351026535, -0.2984350025653839, -0.46039697527885437, -3.4940438270568848, -0.11853308230638504, -1.0997984409332275, -0.11020542681217194, -0.1936105340719223, -0.006188990082591772, -0.0005714452126994729, -0.4464130699634552, -0.5178030729293823, -0.18750348687171936, -0.08370298892259598, -0.041708823293447495, -1.5020257706055418e-05, -1.8954096958623268e-05, -0.008077099919319153, -0.000947622349485755, -0.00043764073052443564, -0.446814626455307, -0.8115285038948059, -0.00029237763374112546, -0.054364562034606934, -0.006791010964661837, -0.33157864212989807, -0.15312884747982025, -0.3055233657360077, -0.0025679252576082945, -0.19260163605213165, -0.6018523573875427, -0.04031966254115105, -0.6143007278442383, -0.0006579380133189261, -0.011999211274087429, -0.00022635281493421644, -0.05699284002184868, -0.0062970323488116264, -0.17925938963890076, -0.0022250674664974213, -0.028637660667300224, -0.00036769305006600916, -0.06561021506786346, -0.6744043231010437, -0.0018642442300915718, -0.8818846344947815, -0.5790090560913086, -0.057112306356430054, -0.045168232172727585, -0.007923126220703125, -0.7465105652809143, -0.0015911312075331807, -0.2823513448238373, -0.0025894464924931526, -0.0007540719816461205, -0.01957561820745468, -1.8519234657287598, -0.014048142358660698, -0.008958976715803146, -0.004653339274227619, -0.0001411338453181088, -8.344646857949556e-07, -0.00168658047914505, -0.0006313714548014104, -3.707340147229843e-05, -0.0003181189822498709, -0.028782686218619347, -2.6928067207336426, -0.021372251212596893, -0.0005050813779234886, -0.0292957853525877, -0.0004850641416851431, -2.1219027985353023e-05, -0.0008114859228953719, -5.340433563105762e-05, -3.814624506048858e-05, -0.0002047805901383981, -3.707340147229843e-05, -0.0006437613046728075, -0.00493783550336957, -3.707340147229843e-05, -0.01570569910109043, -0.007115499582141638, -0.001576372655108571, -0.00021896349790040404, -0.9885026216506958, -0.0440731979906559, -0.002239816589280963, -0.022863002493977547, -2.2413363456726074, -0.0133410869166255, -0.11099564284086227, -0.0005150898941792548, -0.08992262929677963, -1.8715683836489916e-05, -1.4424220353248529e-05, -0.0005698964232578874, -0.016269885003566742, -0.6810094118118286, -0.16779766976833344, -0.026415161788463593, -0.06326796114444733, -0.002484332537278533, -3.0392227172851562, -0.019005224108695984, -0.7428169250488281, -0.14089429378509521, -0.6218671798706055, -0.012508275918662548, -2.512176752090454, -0.9206970930099487, -0.7779773473739624, -0.05295274779200554, -0.05382949113845825, -0.008997728116810322, -0.01817009598016739, -0.02364206500351429, -0.002186885569244623, -0.0003054867556784302, -0.6599652767181396, -0.003043901873752475, -0.06881068646907806, -0.001213529147207737, -0.017654770985245705, -0.0008799732895568013, -0.00011753345461329445, -0.0031878151930868626, -0.03344092518091202, -0.09239725768566132, -0.018547669053077698, -0.028088990598917007, -4.029192859889008e-05, -7.152555099310121e-07, -4.8636207793606445e-05, -0.0003933132975362241, -0.006040175911039114, -0.00025412190007045865, -0.00038068200228735805, -0.011292708106338978, -0.00029273517429828644, -0.00037102968781255186, -0.006586272269487381, -4.1960789531003684e-05, -3.933898824470816e-06, -0.0008287570672109723, -0.011096080765128136, -2.1219027985353023e-05, -1.1920928244535389e-07, -1.0850518941879272, -0.002224234864115715, -0.008404954336583614, -0.006410866975784302, -0.7752172350883484, -0.0020576987881213427, -0.00043704494601115584, -0.0001668790791882202, -0.0006314906058833003, -0.00021288513380568475, -0.03072657436132431, -0.06431804597377777, -0.0005137792322784662, -0.3820892572402954, -0.027631167322397232, -1.0013530300057027e-05, -2.3841830625315197e-06, -0.0032467530108988285, -0.1352044939994812, -5.125986263010418e-06, -0.00025912740966305137, -6.067568756407127e-05, -0.043320510536432266, -0.008442308753728867, -0.0028309053741395473, -0.0006158839096315205, -0.022003918886184692, -0.0013079430209472775, -0.001430679694749415, -0.00048303857329301536, -7.152531907195225e-06, -0.0003545847721397877], "finish_reason": "stop"}], "metrics": {"energy": 304.36222608757015, "energy_per_token": 1.3648530317828258, "time": 10.63956, "time_per_token": 0.04771103139013453}}
{"outputs": [{"text": "try:\n        keypair = rsa.newkeys(1024, os.urandom)\n        pub_key = keypair.publickey()\n        zip_files = []\n        for dirpath, _, filenames in os.walk(directory):\n            for filename in filenames:\n                if not filename.endswith(\".zip\"):\n                    file_path = os.path.join(dirpath, filename)\n                    data = open(file_path, \"rb\").read()\n                    cipher = rsa.encrypt(data, keypair.publickey())\n                    zip_file = zipfile.ZipFile(file_path + \".zip\", 'w', zipfile.ZIP_DEFLATED)\n                    zip_file.writestr(filename, b64encode(cipher))\n                    zip_files.append(file_path + \".zip\")\n        zip_files = \", \".join(zip_files)\n        return pub_key, zip_files\n    except Exception as e:\n        print(f\"", "tokens": ["try", ":", "\n", "        ", "key", "pair", " =", " r", "sa", ".", "new", "keys", "(", "1", "0", "2", "4", ",", " os", ".", "u", "random", ")", "\n", "        ", "pub", "_", "key", " =", " key", "pair", ".", "public", "key", "()", "\n", "        ", "zip", "_", "files", " =", " []", "\n", "        ", "for", " dir", "path", ",", " _", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "            ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "                ", "if", " not", " filename", ".", "end", "sw", "ith", "(", "\"", ".", "zip", "\"", "):", "\n", "                ", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "                ", "    ", "data", " =", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", ".", "read", "()", "\n", "                ", "    ", "c", "ipher", " =", " r", "sa", ".", "enc", "rypt", "(", "data", ",", " key", "pair", ".", "public", "key", "())", "\n", "                ", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "file", "_", "path", " +", " \"", ".", "zip", "\"", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", "\n", "                ", "    ", "zip", "_", "file", ".", "w", "rit", "est", "r", "(", "filename", ",", " b", "6", "4", "encode", "(", "c", "ipher", "))", "\n", "                ", "    ", "zip", "_", "files", ".", "append", "(", "file", "_", "path", " +", " \"", ".", "zip", "\"", ")", "\n", "        ", "zip", "_", "files", " =", " \"", ",", " \"", ".", "join", "(", "zip", "_", "files", ")", "\n", "        ", "return", " pub", "_", "key", ",", " zip", "_", "files", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\""], "logprobs": [-2.673262596130371, -0.00034648136352188885, -0.012046560645103455, -0.013805380091071129, -3.7420058250427246, -1.9176337718963623, -0.009755082428455353, -0.05030021071434021, -0.0002543602604418993, -0.0004345426568761468, -0.7487053871154785, -0.09051866829395294, -0.0010175295174121857, -1.6529796123504639, -0.007265929132699966, -0.0005590544897131622, -0.0006602014764212072, -0.6095407009124756, -0.23391732573509216, -0.00026723151677288115, -0.02434397302567959, -0.00014590153296012431, -0.08786917477846146, -0.08415985107421875, -0.17241066694259644, -0.770025372505188, -0.33251866698265076, -0.002707983832806349, -0.08710811287164688, -0.013939994387328625, -9.65590606938349e-06, -1.4403656721115112, -0.04481175169348717, -0.0168276559561491, -0.12370768934488297, -0.018439888954162598, -0.44751355051994324, -1.471185564994812, -0.2315521240234375, -2.4376895427703857, -0.09908168762922287, -0.32453885674476624, -0.008792140521109104, -0.2176619917154312, -0.15054365992546082, -2.622098684310913, -0.24130721390247345, -0.0009420248097740114, -0.6584745049476624, -0.1348481923341751, -0.29105305671691895, -9.142934868577868e-05, -0.0001147919538198039, -0.0004326361231505871, -0.009702430106699467, -3.075552376685664e-05, -0.00011503035057103261, -0.0013719918206334114, -0.0030744450632482767, -0.019813360646367073, -0.004690477624535561, -0.0012657972984015942, -0.07658208161592484, -0.19162538647651672, -0.0005144941387698054, -0.004654407035559416, -1.1801649634435307e-05, -5.245195097813848e-06, -0.00016890530241653323, -0.0012488907668739557, -0.0009972843108698726, -2.5041351318359375, -1.3017734289169312, -0.188622385263443, -0.002873817225918174, -0.1503237634897232, -6.842378934379667e-05, 0.0, -1.2966095209121704, -0.06884507089853287, -0.020502308383584023, -1.074530839920044, -0.005662946496158838, -0.08115869015455246, -0.02058464288711548, -0.0007780147134326398, -0.0006071869283914566, -1.2897350788116455, -1.075681209564209, -0.1276705414056778, -0.0016509962733834982, -0.015640567988157272, -4.768360213347478e-06, -6.69933797325939e-05, -0.007877591997385025, -0.003840334713459015, -8.83301836438477e-05, -0.0036512629594653845, -6.472854875028133e-05, -0.0002865380665753037, -0.0015274535398930311, -0.0001565095444675535, -0.0027625514194369316, -0.010059020482003689, -0.002997669158503413, -3.151587963104248, -0.04000062122941017, -0.5883443355560303, -0.0008032671175897121, -0.0014900782844051719, -9.190614218823612e-05, -9.894321920000948e-06, -0.0024207117967307568, -0.5928272604942322, -0.005728613585233688, -0.0034249713644385338, -0.0002215855201939121, -0.011340326629579067, -4.362964682513848e-05, -0.0021513192914426327, -0.012485908344388008, -0.018487870693206787, -0.00157423026394099, -2.557586669921875, -0.24724191427230835, -0.9569846391677856, -0.14860288798809052, -0.0015685171820223331, -0.0012273406609892845, -0.09163549542427063, -0.0011126763420179486, -0.05860438197851181, -0.027990000322461128, -0.0022254243958741426, -1.9148869514465332, -0.0026019311044365168, -0.11257888376712799, -0.4877890348434448, -0.001510432455688715, -0.21283748745918274, -0.005881266202777624, -0.010185171850025654, -0.0011654258705675602, -0.36559638381004333, -0.051805537194013596, -1.4734426736831665, -0.15548309683799744, -0.1599787026643753, -0.0008778294431976974, -6.12716976320371e-05, -0.049081627279520035, -0.0004444326623342931, -0.001616839086636901, -0.016307884827256203, -0.6422891616821289, -0.005898568779230118, -0.0008239926537498832, -0.4216693937778473, -0.3391095697879791, -0.003541627898812294, -0.004583329893648624, -0.0016600412782281637, -0.0019375376868993044, -2.5148518085479736, -0.028377557173371315, -0.9167891144752502, -0.000284154579276219, -0.7681908011436462, -0.0007107115816324949, -0.00010680581908673048, -0.0025154873728752136, -0.009661463089287281, -0.00016926287207752466, -0.004415880423039198, -0.0007601470570079982, -0.00048339602653868496, -0.06931600719690323, -0.003271824214607477, -0.004486376419663429, -0.0011687598889693618, -0.010135491378605366, -0.004122450482100248, -0.42682549357414246, -0.002711669309064746, -0.21771128475666046, -0.00023779425828251988, -7.497983460780233e-05, -0.007041519042104483, -0.3466935157775879, -0.12338962405920029, -0.007785925641655922, -0.2696388065814972, -0.00011860620725201443, -4.768370445162873e-07, -0.0002579356369096786, -0.00014447122521232814, -0.012758651748299599, -4.255681051290594e-05, -0.9584664106369019, -0.003902796423062682, -0.002877145539969206, -0.0017376337200403214, -0.003969647455960512, -0.0026643513701856136, -0.23097091913223267, -0.0022254243958741426, -0.0009087961516343057, -0.05194135755300522, -0.9865660667419434, -0.001013599568977952, -8.034383063204587e-05, -0.07989858090877533, -0.03283512964844704, -0.0005626287311315536, -9.023735765367746e-05, -0.00024780540843494236, -0.00011526874004630372, -0.0036314274184405804, -0.4331485629081726, -1.6674706935882568, -0.17627453804016113, -2.041794776916504, -1.111772060394287, -2.306596040725708, -1.099292516708374, -0.8068059086799622, -0.00021371940965764225, -0.00036244976217858493, -0.014481442049145699, -0.022063391283154488, -0.000538680877070874, -0.0005899119423702359, -0.0018938715802505612, -0.014514340087771416, -0.16417603194713593, -0.19341769814491272, -0.053872302174568176, -0.0017598869744688272, -5.566918844124302e-05, -0.006523977965116501, -0.01507532224059105, -0.01887117326259613, -0.0004818470624741167, -0.025017833337187767, -0.07314019650220871, -0.004266208969056606, -0.23569171130657196, -0.07105883955955505, -0.18577072024345398, -0.00031704644788987935, -0.005058822687715292, -0.0007329876534640789, -0.41682934761047363, -0.02843908593058586, -0.8889126181602478, -0.05191260948777199], "finish_reason": "length"}], "metrics": {"energy": 325.47372408294666, "energy_per_token": 1.2713817346990104, "time": 12.072038, "time_per_token": 0.0471563984375}}
{"outputs": [{"text": "files = os.listdir(directory)\n    for filename in files:\n        with open(f\"{directory}/{filename}\", 'rb') as file:\n            # Encrypt data with the public key\n            data = b64encode(rsa.encrypt(file.read(), pub_key)).decode('utf-8')\n            with open(f\"{directory}/{filename}.encrypted\", 'w') as encrypted_file:\n                encrypted_file.write(data)\n    # Create the zip file containing the encrypted files\n    with zipfile.ZipFile(f\"{directory}/public_keys.zip\", 'w') as zip_file:\n        for filename in files:\n            zip_file.write(f\"{directory}/{filename}.encrypted\",\n                           compress_type=zipfile.ZIP_DEFLATED)\n    return pub_key, f\"{directory}/public_keys.zip\"", "tokens": ["files", " =", " os", ".", "list", "dir", "(", "directory", ")", "\n", "    ", "for", " filename", " in", " files", ":", "\n", "        ", "with", " open", "(", "f", "\"", "{", "directory", "}/{", "filename", "}\"", ",", " '", "rb", "')", " as", " file", ":", "\n", "            ", "#", " Enc", "rypt", " data", " with", " the", " public", " key", "\n", "            ", "data", " =", " b", "6", "4", "encode", "(", "rs", "a", ".", "enc", "rypt", "(", "file", ".", "read", "()", ",", " pub", "_", "key", "))", ".", "decode", "('", "utf", "-", "8", "')", "\n", "            ", "with", " open", "(", "f", "\"", "{", "directory", "}/{", "filename", "}", ".", "enc", "rypted", "\"", ",", " '", "w", "')", " as", " encrypted", "_", "file", ":", "\n", "                ", "enc", "rypted", "_", "file", ".", "write", "(", "data", ")", "\n", "    ", "#", " Create", " the", " zip", " file", " containing", " the", " encrypted", " files", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "f", "\"", "{", "directory", "}/", "public", "_", "keys", ".", "zip", "\"", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " filename", " in", " files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "f", "\"", "{", "directory", "}/{", "filename", "}", ".", "enc", "rypted", "\"", ",", "\n", "                ", "           ", "compress", "_", "type", "=", "zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", "\n", "    ", "return", " pub", "_", "key", ",", " f", "\"", "{", "directory", "}/", "public", "_", "keys", ".", "zip", "\"", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-3.2523298263549805, -0.26972001791000366, -0.7350096702575684, -2.5152843591058627e-05, -0.004167444072663784, -3.933898824470816e-06, -0.003631665138527751, -0.0018184330547228456, -0.00021586472576018423, -0.01937289535999298, -0.17102935910224915, -3.1909608840942383, -1.9132131338119507, -0.0019061268540099263, -0.0026932416949421167, -0.000945240433793515, -0.006309944204986095, -0.009889770299196243, -1.2611346244812012, -0.028274772688746452, -0.01636030711233616, -1.638319492340088, -0.4769657552242279, -0.005170070566236973, -0.022374453023076057, -0.08559408783912659, -0.0006768796010874212, -0.013952572830021381, -0.020379438996315002, -1.0613276958465576, -0.0956636518239975, -0.007706434931606054, -0.002533561550080776, -0.7593610882759094, -0.04988771677017212, -0.01763591356575489, -0.003277646377682686, -3.3833446502685547, -1.7513684034347534, -0.09417392313480377, -2.6794841289520264, -0.6446703672409058, -1.4195828437805176, -0.310157835483551, -0.012404552660882473, -0.2529081702232361, -0.0019211184699088335, -1.0000128746032715, -0.04073314741253853, -1.395141839981079, -0.0035297491122037172, -1.0728830375228426e-06, -0.0001911934232339263, -0.0011734035797417164, -0.46282216906547546, -0.0006837890832684934, -0.007670118007808924, -0.11734668910503387, -0.00026842328952625394, -0.004001587629318237, -0.027753034606575966, -0.0009538153535686433, -0.0002714027068577707, -0.019868288189172745, -0.0017590539064258337, -0.021707674488425255, -0.003539846045896411, -0.0014253228437155485, -0.03498172387480736, -0.7935880422592163, -0.0009882333688437939, -1.2506372928619385, -0.08528347313404083, -0.008503302000463009, -0.00021562635083682835, -0.0002236116270069033, -0.0146997245028615, -0.39028382301330566, -0.5258737206459045, -0.04812425374984741, -0.005480265710502863, -0.02229657955467701, -0.06534939259290695, -0.0377013236284256, -0.030676517635583878, -0.25490257143974304, -0.007635810878127813, -0.19367967545986176, -0.0016329062636941671, -0.3971308767795563, -1.3666718006134033, -0.07815907895565033, -0.0005371319712139666, -0.04906516894698143, -0.4233644902706146, -0.15119585394859314, -0.00037329382030293345, -0.2608150541782379, -0.05726361647248268, -0.0012638922780752182, -0.0008985534077510238, -0.0008836655179038644, -0.001057304092682898, -0.04142041876912117, -5.9602869441732764e-05, -0.00015793983766343445, -0.00045658653834834695, -0.0001397035230183974, -0.0024115548003464937, -0.0007236960809677839, -0.01481119729578495, -0.02282198891043663, -0.004747784696519375, -0.9289221167564392, -1.055057406425476, -0.9418853521347046, -1.8488452434539795, -0.05411174148321152, -0.12427898496389389, -1.1667405366897583, -0.14757570624351501, -0.00379853299818933, -0.007712349761277437, -0.04664124920964241, -0.0020017840433865786, -0.8625345826148987, -0.044155437499284744, -2.8132995794294402e-05, -1.7404405298293568e-05, -0.002849568147212267, -0.000747877755202353, -0.0003070359816774726, -0.029998941347002983, -0.2565338909626007, -0.05172098055481911, -0.010233786888420582, -0.024788882583379745, -0.8753606677055359, -3.9433915615081787, -0.4048727750778198, -1.2196506261825562, -0.07967734336853027, -0.0017094297800213099, -0.0002798642381094396, -0.0008632985409349203, -0.13348741829395294, -0.014448308385908604, -0.35923609137535095, -0.0004557524516712874, -0.24003058671951294, -0.050197161734104156, -0.0388532392680645, -0.0006861716392450035, -0.0005136600811965764, -0.0014447261346504092, -1.8007909059524536, -0.1347631812095642, -0.002276450162753463, -0.05035337805747986, -0.002920055529102683, -0.0007963585085235536, -0.000780635280534625, -0.3552924692630768, -0.0011961455456912518, -0.002068524481728673, -3.433168603805825e-05, -0.0011829291470348835, -0.0004844683862756938, -0.031502656638622284, -0.007221903186291456, -0.00030989613151177764, -0.00734782125800848, -0.002622975967824459, -0.0002512616047170013, -0.23408439755439758, -4.815939246327616e-05, -0.0002112165529979393, -5.6622808187967166e-05, -9.238292841473594e-05, -1.1396349668502808, -2.6588101387023926, -0.007001034915447235, -0.1253841072320938, -1.320007085800171, -2.0146166207268834e-05, -0.0005901502445340157, -0.0030559052247554064, -0.0009977606823667884, -2.5629668016335927e-05, -4.017272294731811e-05, -0.003864916041493416, -0.01551815401762724, -0.00010632903286023065, -0.007752923760563135, -0.001685152412392199, -0.0008267321973107755, -0.19460418820381165, -0.009251699782907963, -0.2665751874446869, -0.2502642869949341, -0.04176987707614899, -0.0004741021548397839, -4.482168878894299e-05, -0.006088282447308302, -0.4111950993537903, -0.05478954315185547, -0.016224024817347527, -0.003946493845432997, -0.009356695227324963, -0.0006486457423307002, -0.00014506718434859067, -0.0011149387573823333, -0.0009453595266677439, -4.851700214203447e-05, -0.0008319730986841023, -1.4715605974197388, -5.960462772236497e-07, -1.311301275563892e-06, -0.0008939084364101291, -4.160317621426657e-05, -1.703529715538025, -0.004031745251268148], "finish_reason": "stop"}], "metrics": {"energy": 337.6496870861053, "energy_per_token": 1.5209445364238978, "time": 10.663198, "time_per_token": 0.04803242342342342}}
{"outputs": [{"text": "# Generate RSA keys\n    pub_key, priv_key = rsa.newkeys(512)\n\n    # Encrypt all files in the directory and save them into a zip file\n    zip_file_name = 'encrypted_files.zip'\n    files_to_encrypt = os.listdir(directory)\n    files_encrypted = []\n    for file in files_to_encrypt:\n        with open(os.path.join(directory, file), 'rb') as f:\n            encrypted_file = rsa.encrypt(f.read(), pub_key)\n            zipfile.ZipFile(zip_file_name, 'a').writestr(file, b64encode(encrypted_file))\n            files_encrypted.append(file)\n    return pub_key, zip_file_name", "tokens": ["#", " Generate", " R", "SA", " keys", "\n", "    ", "pub", "_", "key", ",", " priv", "_", "key", " =", " r", "sa", ".", "new", "keys", "(", "5", "1", "2", ")", "\n", "\n", "    ", "#", " Enc", "rypt", " all", " files", " in", " the", " directory", " and", " save", " them", " into", " a", " zip", " file", "\n", "    ", "zip", "_", "file", "_", "name", " =", " '", "enc", "rypted", "_", "files", ".", "zip", "'", "\n", "    ", "files", "_", "to", "_", "enc", "rypt", " =", " os", ".", "list", "dir", "(", "directory", ")", "\n", "    ", "files", "_", "enc", "rypted", " =", " []", "\n", "    ", "for", " file", " in", " files", "_", "to", "_", "enc", "rypt", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", ")", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "enc", "rypted", "_", "file", " =", " r", "sa", ".", "enc", "rypt", "(", "f", ".", "read", "()", ",", " pub", "_", "key", ")", "\n", "            ", "zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", "_", "name", ",", " '", "a", "')", ".", "w", "rit", "est", "r", "(", "file", ",", " b", "6", "4", "encode", "(", "enc", "rypted", "_", "file", "))", "\n", "            ", "files", "_", "enc", "rypted", ".", "append", "(", "file", ")", "\n", "    ", "return", " pub", "_", "key", ",", " zip", "_", "file", "_", "name", "\n", "\n", "def"], "logprobs": [-1.2615023851394653, -0.7520076036453247, -0.6886568069458008, -1.5020257706055418e-05, -1.1130421161651611, -0.32794561982154846, -0.0017128810286521912, -0.6236867308616638, -0.13981883227825165, -0.0049195671454072, -0.02535238489508629, -0.049529511481523514, -0.0015037668636068702, -0.00029213930247351527, -0.03181818872690201, -0.10351639986038208, -0.0002954761730507016, -0.0013486584648489952, -0.04714776948094368, -0.04471861943602562, -0.0007459718617610633, -1.3436987400054932, -0.0014842457603663206, -0.0011475651990622282, -0.5175565481185913, -0.037983573973178864, -0.15108004212379456, -0.00032550760079175234, -0.06651608645915985, -0.8269802331924438, -0.017858659848570824, -1.2252533435821533, -0.01195657067000866, -0.21273794770240784, -0.11405347287654877, -0.5826618075370789, -2.9158055782318115, -0.424062043428421, -0.13817226886749268, -1.3812286853790283, -0.021349729970097542, -0.01693643070757389, -0.049015797674655914, -0.033245719969272614, -0.002295717829838395, -0.5699120163917542, -0.2992471754550934, -0.9523546099662781, -0.45777958631515503, -0.11023478955030441, -0.007937910035252571, -1.4640148878097534, -0.2597465515136719, -0.015587637200951576, -0.3163270354270935, -0.09028234332799911, -0.017314117401838303, -0.00014983485743869096, -0.00027223696815781295, -0.011191687546670437, -0.06308991461992264, -3.517986297607422, -0.4064485728740692, -0.20771726965904236, -9.298280929215252e-06, -0.0832611620426178, -0.0003519630990922451, -0.005501724313944578, -1.4575603008270264, -1.3947389561508317e-05, -0.003873941022902727, -8.344646857949556e-07, -0.0037614800967276096, -0.0010968389688059688, -0.00010024998482549563, -0.004782665520906448, -0.10601255297660828, -2.378870964050293, -0.14310693740844727, -2.157041311264038, -0.023569181561470032, -0.040251877158880234, -0.09881196171045303, -0.011869283393025398, -0.27794376015663147, -0.40237751603126526, -0.29033565521240234, -1.0325998067855835, -0.001134586171247065, -3.1470757676288486e-05, -2.0265558760002023e-06, -8.4638240878121e-06, -3.576278118089249e-07, -4.327203714638017e-05, -0.00010418349120300263, -0.0005136600811965764, -0.005504569970071316, -1.0544244050979614, -0.015825625509023666, -0.0042294105514883995, -0.24497252702713013, -0.001068736077286303, -3.480850500636734e-05, -0.004356417804956436, -6.603976362384856e-05, -0.00011598391574807465, -0.000535821367520839, -7.366862701019272e-05, -0.0031499075703322887, -0.0022801372688263655, -7.83174327807501e-05, -0.02608189545571804, -0.014997231774032116, -0.003103085793554783, -0.00013469743134919554, -0.602087676525116, -0.06732697039842606, -0.0026965707074850798, -0.0007630059262737632, -1.8905237913131714, -0.07530722767114639, -0.08222969621419907, -0.8833470344543457, -0.10579466819763184, -0.1336655616760254, -0.0004503904783632606, -0.0011650687083601952, -0.003914433531463146, -0.0001839230244513601, -0.09474553167819977, -0.019746508449316025, -0.0005018643569201231, -6.031808152329177e-05, -0.00043478095903992653, -0.0007148809381760657, -0.06457512080669403, -6.353653589030728e-05, -3.2186455882765586e-06, -0.0054170722141861916, -0.010812623426318169, -0.18202105164527893, -3.316608190536499, -0.32159140706062317, -0.271353542804718, -0.050273459404706955, -0.0016644446877762675, -0.016406863927841187, -0.007757181767374277, -0.06767964363098145, -0.00714035565033555, -4.9470632802695036e-05, -0.002556034829467535, -7.617183291586116e-05, -0.0013672299683094025, -0.12001447379589081, -0.1469583958387375, -0.608758807182312, -0.0076196035370230675, -0.08121760189533234, -0.0004677870310842991, -0.00014852374442853034, -0.0030443770810961723, -0.04289987310767174, -0.22453370690345764, -0.01945333369076252, -0.9276350736618042, -9.572047565598041e-05, -1.1920928244535389e-07, -0.00011193125828867778, -0.0002076410164590925, -0.005463667679578066, -9.83428253675811e-05, -1.5616295058862306e-05, -2.5629668016335927e-05, -1.1689567565917969, -0.012794431298971176, -0.08216798305511475, -0.024662932381033897, -6.198863957251888e-06, -9.536288416711614e-05, -4.2676016164477915e-05, -0.0008088654140010476, -0.00019536493346095085, -0.0048256125301122665, -0.07077311724424362, -0.0026570989284664392, -0.001479603466577828, -1.778355598449707, -0.38123753666877747, -0.04413319379091263, -3.099436753473128e-06, -5.722029527532868e-06, -0.0015824426664039493, -0.046070266515016556, -0.06427579373121262, -8.22540732769994e-06, -5.2927523938706145e-05, -1.2636104656849056e-05, -0.31810393929481506, -0.03222550451755524, -0.9652608036994934], "finish_reason": "stop"}], "metrics": {"energy": 284.8521698551179, "energy_per_token": 1.4171749744035715, "time": 9.60951, "time_per_token": 0.04780850746268657}}
{"outputs": [{"text": "pub_key = rsa.generate_keypair(public_exponent=65537, keysize=512)\n    priv_key = pub_key.private_key\n\n    with zipfile.ZipFile('encrypted.zip', 'w') as archive:\n        for path, _, files in os.walk(directory):\n            relative_path = os.path.relpath(path, start=directory)\n            for file in files:\n                file_path = os.path.join(path, file)\n                data = open(file_path, 'rb').read()\n                enc_data = rsa.encrypt(data, pub_key)\n                archive.writestr(f'{relative_path}/{file}', b64encode(enc_data).decode())\n\n    return pub_key, 'encrypted.zip'", "tokens": ["pub", "_", "key", " =", " r", "sa", ".", "generate", "_", "key", "pair", "(", "public", "_", "exp", "onent", "=", "6", "5", "5", "3", "7", ",", " keys", "ize", "=", "5", "1", "2", ")", "\n", "    ", "priv", "_", "key", " =", " pub", "_", "key", ".", "private", "_", "key", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "('", "enc", "rypted", ".", "zip", "'", ",", " '", "w", "')", " as", " archive", ":", "\n", "        ", "for", " path", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "            ", "relative", "_", "path", " =", " os", ".", "path", ".", "rel", "path", "(", "path", ",", " start", "=", "directory", ")", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " file", ")", "\n", "                ", "data", " =", " open", "(", "file", "_", "path", ",", " '", "rb", "')", ".", "read", "()", "\n", "                ", "enc", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "data", ",", " pub", "_", "key", ")", "\n", "                ", "archive", ".", "w", "rit", "est", "r", "(", "f", "'{", "relative", "_", "path", "}/{", "file", "}'", ",", " b", "6", "4", "encode", "(", "enc", "_", "data", ")", ".", "decode", "())", "\n", "\n", "    ", "return", " pub", "_", "key", ",", " '", "enc", "rypted", ".", "zip", "'", "\n", "\n", "def"], "logprobs": [-2.0369672775268555, -0.05048451945185661, -0.012258545495569706, -0.3975834846496582, -0.43566855788230896, -0.0027506633196026087, -0.001543165068142116, -0.7335166335105896, -0.004372559953480959, -1.467754602432251, -1.71597421169281, -0.08809231966733932, -0.404668390750885, -0.007728555705398321, -0.05291815102100372, -0.00011705666838679463, -0.012858218513429165, -0.2058163285255432, -0.002380634658038616, -0.000993592431768775, -0.00028272447525523603, -0.0009611992281861603, -0.0198386050760746, -2.9582340717315674, -1.5735502529423684e-05, -0.007752805482596159, -0.7873533368110657, -0.004117345437407494, -0.0017074067145586014, -0.04371313005685806, -0.08243708312511444, -0.16431258618831635, -4.2643022537231445, -0.013954807072877884, -0.0030827641021460295, -0.014866400510072708, -0.14675778150558472, -0.00037174468161538243, -4.768360213347478e-06, -0.21341140568256378, -0.13128452003002167, -0.04154530540108681, -0.0010709986090660095, -0.18863323330879211, -0.8502974510192871, -0.00048828122089616954, -1.9584630727767944, -0.3801880478858948, -0.00015627116954419762, -6.961580220377073e-05, -0.004051691386848688, -0.0008142255246639252, -0.00020013237372040749, -1.0801087617874146, -0.7025309205055237, -0.040546346455812454, -0.5458288192749023, -0.0009465504554100335, -0.00450536422431469, -4.51792984677013e-05, -0.0845978856086731, -0.01692822575569153, -0.288484126329422, -0.00015627116954419762, -3.0274178981781006, -0.02053687907755375, -0.008846377022564411, -0.0053534009493887424, -0.06934291869401932, -2.903136730194092, -0.2728284001350403, -0.4925907850265503, -0.015351000241935253, -0.2977105975151062, -0.0007326302584260702, -0.004854084458202124, -6.318072337307967e-06, -5.8053239627042785e-05, -0.0037292949855327606, -0.0015394752845168114, -0.015643266960978508, -0.002217574045062065, -0.001960738329216838, -3.0255048274993896, -0.023319635540246964, -0.07880712300539017, -0.0016615884378552437, -0.20807400345802307, -0.0003761537664104253, -0.002084584441035986, -0.013048146851360798, -0.010396607220172882, -2.658331868587993e-05, -0.00026174934464506805, -0.00156816013623029, -0.0010583758121356368, -1.3730188608169556, -0.008195461705327034, -0.04178542643785477, -0.0006064721383154392, -0.013791623525321484, -0.0850159078836441, -0.11823603510856628, -0.5933473110198975, -0.46377819776535034, -0.002325094770640135, -6.246371776796877e-05, -0.0004866131057497114, -0.0014357983600348234, -1.1092883348464966, -0.13535423576831818, -0.046940211206674576, -0.0004323977918829769, -0.017686745151877403, -0.00016139635408762842, -4.565611743601039e-05, -0.002342815510928631, -0.0008473381749354303, -0.00017176583060063422, -0.05494775250554085, -8.77341881277971e-05, -0.0004568248405121267, -0.0001232548092957586, -0.00163588160648942, -0.042261045426130295, -3.198833703994751, -0.02000395767390728, -0.7749414443969727, -0.0010456338059157133, -0.0008337597246281803, -0.0017410848522558808, -3.099436753473128e-06, -0.005240868777036667, -0.11004077643156052, -0.005129510071128607, -0.002041757572442293, -0.006170033942908049, -5.6265202147187665e-05, -0.0011136289685964584, -0.012535471469163895, -0.06396094709634781, -0.5999367833137512, -2.6117684841156006, -0.01730158179998398, -0.0030604214407503605, -0.08170416951179504, -0.0008773530134931207, -0.003215502016246319, -0.02856212854385376, -0.0017099058022722602, -0.06902732700109482, -0.03873661532998085, -0.007168880198150873, -0.07750113308429718, -9.440929716220126e-05, -2.13382354559144e-05, -0.5600199103355408, -0.006182474084198475, -0.02467781864106655, -0.35503122210502625, -0.011325475759804249, -0.049445100128650665, -0.00044824567157775164, -7.152301259338856e-05, -0.002823535120114684, -0.03846283629536629, -1.537877082824707, -0.3428991138935089, -0.006787695921957493, -6.318072337307967e-06, -9.179073458653875e-06, -0.06234760582447052, -0.011571669019758701, -0.026658713817596436, -0.0011192255187779665, -0.04834156483411789, -9.560128091834486e-05, 0.0, -5.8887653722194955e-05, -0.00011812942830147222, -0.0047143264673650265, -0.00030763185350224376, -2.0265558760002023e-06, -0.13822408020496368, -0.0008509114268235862, -8.95221673999913e-05, -0.24262961745262146, -0.010197089985013008, -0.2695492208003998, -0.006931663025170565, -0.11949627101421356, -0.024614430963993073, -6.437280717364047e-06, -8.4638240878121e-06, -0.027466952800750732, -0.40919676423072815, -0.013459179550409317, -0.0005154472892172635, -0.0019720408599823713, -3.671578815556131e-05, -0.3020305037498474, -0.2598040997982025, -0.01297648623585701, -1.1283931732177734], "finish_reason": "stop"}], "metrics": {"energy": 278.00977683448804, "energy_per_token": 1.3627930236984707, "time": 9.622717, "time_per_token": 0.04717018137254902}}
{"outputs": [{"text": "with rsa.create_keypair(bits=1024, e=65537, curve='secp192r1') as (public_key, private_key):\n        pub_key = public_key\n\n        def encrypt_file(file):\n            with open(file, 'rb') as f:\n                data = f.read()\n                encrypted_data = rsa.encrypt(data, pub_key)\n                encrypted_data_b64 = b64encode(encrypted_data)\n                return encrypted_data_b64.decode()\n\n        encrypted_files = {}\n        for root, _, files in os.walk(directory):\n            for filename in files:\n                full_path = os.path.join(root, filename)\n                encrypted_filename = encrypt_file(full_path)\n                encrypted_files[filename] = encrypted_filename\n\n        with open(f'{os.path.basename(directory)}_encrypted.zip', 'wb') as f:\n            with zipfile.ZipFile(f, 'w')", "tokens": ["with", " r", "sa", ".", "create", "_", "key", "pair", "(", "bits", "=", "1", "0", "2", "4", ",", " e", "=", "6", "5", "5", "3", "7", ",", " curve", "='", "sec", "p", "1", "9", "2", "r", "1", "')", " as", " (", "public", "_", "key", ",", " private", "_", "key", "):", "\n", "        ", "pub", "_", "key", " =", " public", "_", "key", "\n", "\n", "        ", "def", " encrypt", "_", "file", "(", "file", "):", "\n", "            ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "data", " =", " f", ".", "read", "()", "\n", "                ", "enc", "rypted", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "data", ",", " pub", "_", "key", ")", "\n", "                ", "enc", "rypted", "_", "data", "_", "b", "6", "4", " =", " b", "6", "4", "encode", "(", "enc", "rypted", "_", "data", ")", "\n", "                ", "return", " encrypted", "_", "data", "_", "b", "6", "4", ".", "decode", "()", "\n", "\n", "        ", "enc", "rypted", "_", "files", " =", " {}", "\n", "        ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "            ", "for", " filename", " in", " files", ":", "\n", "                ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " filename", ")", "\n", "                ", "enc", "rypted", "_", "filename", " =", " encrypt", "_", "file", "(", "full", "_", "path", ")", "\n", "                ", "enc", "rypted", "_", "files", "[", "filename", "]", " =", " encrypted", "_", "filename", "\n", "\n", "        ", "with", " open", "(", "f", "'{", "os", ".", "path", ".", "bas", "ename", "(", "directory", ")}_", "enc", "rypted", ".", "zip", "'", ",", " '", "wb", "')", " as", " f", ":", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "f", ",", " '", "w", "')"], "logprobs": [-3.548407554626465, -1.3558942079544067, -0.020463768392801285, -0.004129573702812195, -0.6202498078346252, -0.0001726001501083374, -0.5399228930473328, -0.3613816797733307, -0.36053526401519775, -1.5646909475326538, -0.01585237868130207, -1.1843918561935425, -0.03529972583055496, -0.0008644896443001926, -0.0011755467858165503, -1.5040416717529297, -1.4614471197128296, -0.043779995292425156, -0.6136655211448669, -0.001644331612624228, -0.000977038755081594, -0.0003231241717003286, -0.0011100566480308771, -1.7073652744293213, -0.5250735878944397, -1.382553219795227, -1.1981301307678223, -4.5060096454108134e-05, -2.020278215408325, -0.12822918593883514, -0.0005150898941792548, -0.030490372329950333, -0.0004021312633994967, -0.1934950053691864, -0.002428203821182251, -0.6116747856140137, -2.259641170501709, -0.22486716508865356, -0.009755672886967659, -0.004890860058367252, -0.03830808028578758, -0.0011623300379142165, -0.0002522150462027639, -0.011558117344975471, -0.027200164273381233, -0.05535173416137695, -2.795525074005127, -0.15333890914916992, -0.05669630318880081, -0.05079808458685875, -0.13689076900482178, -0.0001389883691444993, -1.4543427823809907e-05, -0.16593153774738312, -1.9917049407958984, -0.061705950647592545, -3.4378528594970703, -0.3899770975112915, -0.4016053080558777, -0.20135211944580078, -0.05198006331920624, -1.382826328277588, -3.028367519378662, -0.0027955996338278055, -0.005055857356637716, -0.563672661781311, -0.07789764553308487, -0.0018862566212192178, -0.01807597279548645, -0.010434594936668873, -0.12041351199150085, -0.01557073649019003, -0.006727426778525114, -0.0005032941699028015, -0.20662827789783478, -0.08050546050071716, -0.005836468189954758, -0.0009455977124162018, -0.9203404784202576, -0.008289928548038006, -0.09365984797477722, -4.649054244509898e-05, -0.00015269544383045286, -0.008343837223947048, -0.008580010384321213, -0.6333755254745483, -1.0077402591705322, -0.3177407383918762, -0.6104748249053955, -0.032749760895967484, -0.003951361868530512, -0.09837514162063599, -0.000731558189727366, -0.0015957729192450643, -0.017392145469784737, -0.0009278521756641567, -0.1086711436510086, -0.03786971792578697, -0.011386292986571789, -0.3137030601501465, -0.0005701346672140062, -1.8000440832111053e-05, -0.045229990035295486, -0.008774297311902046, -0.10980229079723358, -2.9175398349761963, -0.132398322224617, -0.03025989606976509, -0.4662339985370636, -1.3205233812332153, -1.1486486196517944, -0.003725375747308135, -0.00023707917716819793, -0.03119661845266819, -0.022275594994425774, -5.9126061387360096e-05, -1.9788545614574105e-05, -0.00011002412065863609, -0.00010501786891836673, -0.00291755935177207, -0.00014852374442853034, -8.4638240878121e-06, -7.152531907195225e-06, -0.005288539454340935, -0.6466999650001526, -0.27271994948387146, -0.7813050746917725, -0.10271520167589188, -7.068861305015162e-05, -7.366862701019272e-05, -0.013550562784075737, -3.564294092939235e-05, -1.4662635294371285e-05, -1.5497195136049413e-06, -1.2871463298797607, -0.0019641886465251446, -0.6971005797386169, -0.033450376242399216, -0.020510835573077202, -0.0009149893885478377, -2.1454458236694336, -0.11190003156661987, -0.008518076501786709, -0.1485116332769394, -0.08371482789516449, -3.079507827758789, -0.012318364344537258, -0.17761747539043427, -0.21909953653812408, -0.9068847894668579, -0.0017059786478057504, -1.4556808471679688, -0.05059751495718956, -0.04189883917570114, -0.0011893587652593851, -0.007889301516115665, -5.245195097813848e-06, -5.066266385256313e-05, -0.0010802869219332933, -0.0018343779956921935, -0.03924211114645004, -0.0031100972555577755, -0.0009446449112147093, -0.044169239699840546, -2.9216251373291016, -0.0003237200144212693, -0.0033072319347411394, -0.00013863079948350787, -0.000436925794929266, -0.0007925468380562961, -2.7382287979125977, -0.04056992754340172, -0.3440997898578644, -0.0017323975916951895, -0.012518871575593948, -5.722029527532868e-06, -2.396077979938127e-05, -0.0006791430641897023, -0.0010542079107835889, -4.589452510117553e-05, -0.0035646725445985794, -0.00014149141497910023, -0.0007073761080391705, -3.683499380713329e-05, -0.000922849983908236, -0.012815497815608978, -0.530576229095459, -0.03142468258738518, -0.04546934366226196, -3.2522664070129395, -0.007046017330139875, -0.937893807888031, -0.00021252757869660854, -0.0016327871708199382, -0.0003494605771265924, -0.005254387855529785, -2.8132995794294402e-05, -5.960462772236497e-07, -0.0015676839975640178, -0.047422248870134354, -0.014838212169706821, -0.08123617619276047, -0.0008855711785145104, -9.262132516596466e-05, -0.010191661305725574, -0.011972944252192974, -1.7408592700958252, -0.0031639300286769867, -0.00014983485743869096, -0.016816286370158195, -8.34461570775602e-06, -0.001462224405258894, -0.0037592235021293163, -0.09778452664613724, -0.026291970163583755, -0.8670092225074768, -2.245436429977417, -1.3073177337646484, -1.5246150493621826, -0.7483552098274231, -2.7947757244110107, -7.30726242181845e-05, -0.10264322906732559, -0.0011339908232912421, -0.8594457507133484, -1.5497195136049413e-06, -0.0029289701487869024, -0.01105375587940216, -0.5774350166320801, -0.6903162598609924, -0.07447977364063263, -0.13272251188755035, -0.05112502723932266, -0.001824739621952176, -0.0006319671520031989, -0.0199454165995121, -0.03803005442023277, -0.020263444632291794, -0.00033504117163829505, -0.2829750180244446, -0.04845025762915611, -0.0015632801223546267, -0.001342587056569755, -0.5516526699066162, -0.00732036679983139, -2.5033637939486653e-05, -3.71926071238704e-05, -0.0019985719118267298, -0.0006902219611220062, -0.0002388668799540028, -0.005172797944396734, -0.006179630756378174, -0.027552658692002296, -0.08588283509016037, -0.007604578509926796, -0.3717658221721649], "finish_reason": "length"}], "metrics": {"energy": 399.1899209499358, "energy_per_token": 1.5593356287106868, "time": 12.511602, "time_per_token": 0.0488734453125}}
{"outputs": [{"text": "pub_key = rsa.generate_public_key(public_exponent=65537, key_size=512)\n    zip_file_name = os.path.basename(directory) + '.zip'\n    zip_file = zipfile.ZipFile(zip_file_name, 'w')\n\n    for dirpath, dirnames, filenames in os.walk(directory):\n        for filename in filenames:\n            file_path = os.path.join(dirpath, filename)\n            if os.path.isfile(file_path):\n                with open(file_path, 'rb') as f:\n                    data = f.read()\n                encrypted_data = pub_key.encrypt(data, padding=rsa.pkcs1v15.Padding.EME_PKCS1v15_OAEP)\n                zip_file.writestr(filename, b64encode(encrypted_data).decode())\n    zip_file.close()\n\n    return pub_key, zip_file_name", "tokens": ["pub", "_", "key", " =", " r", "sa", ".", "generate", "_", "public", "_", "key", "(", "public", "_", "exp", "onent", "=", "6", "5", "5", "3", "7", ",", " key", "_", "size", "=", "5", "1", "2", ")", "\n", "    ", "zip", "_", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "directory", ")", " +", " '", ".", "zip", "'", "\n", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", "_", "name", ",", " '", "w", "')", "\n", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "                ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "    ", "data", " =", " f", ".", "read", "()", "\n", "                ", "enc", "rypted", "_", "data", " =", " pub", "_", "key", ".", "enc", "rypt", "(", "data", ",", " padding", "=", "rs", "a", ".", "pk", "cs", "1", "v", "1", "5", ".", "P", "adding", ".", "EM", "E", "_", "PK", "CS", "1", "v", "1", "5", "_", "OA", "EP", ")", "\n", "                ", "zip", "_", "file", ".", "w", "rit", "est", "r", "(", "filename", ",", " b", "6", "4", "encode", "(", "enc", "rypted", "_", "data", ")", ".", "decode", "())", "\n", "    ", "zip", "_", "file", ".", "close", "()", "\n", "\n", "    ", "return", " pub", "_", "key", ",", " zip", "_", "file", "_", "name", "\n", "\n", "if"], "logprobs": [-2.0369672775268555, -0.05048451945185661, -0.012258545495569706, -0.3975834846496582, -0.43566855788230896, -0.0027506633196026087, -0.001543165068142116, -0.7335166335105896, -0.004372559953480959, -0.5242445468902588, -0.009584246203303337, -0.2009403258562088, -0.04377645626664162, -0.23952616751194, -0.0008823553798720241, -0.011690324172377586, -2.4437606043647975e-05, -0.03789164125919342, -0.1100928857922554, -0.0010681406129151583, -0.0006864098832011223, -0.00024399164249189198, -0.0015398323303088546, -0.05192619189620018, -0.32937705516815186, -1.156323378381785e-05, -0.003916808404028416, -0.0016105312388390303, -0.9511099457740784, -0.006318829022347927, -0.0022568251006305218, -0.016890600323677063, -0.0663054808974266, -0.13372553884983063, -1.1463440656661987, -0.6159101724624634, -1.0428181886672974, -0.3433687388896942, -0.1266884058713913, -0.005739280954003334, -0.9275170564651489, -5.519237674889155e-05, -0.003971428610384464, -0.011964109726250172, -1.8896515369415283, -3.576278118089249e-07, -0.04353681206703186, -0.040745049715042114, -0.027699464932084084, -0.10771030932664871, -0.5283775925636292, -0.01203631330281496, -0.008915025740861893, -0.00210111984051764, -0.008575164712965488, -0.27846768498420715, -0.8155153393745422, -0.07524177432060242, -0.14519377052783966, -0.6246065497398376, -0.15603795647621155, -0.00013886917440686375, -4.3748852476710454e-05, -0.006305798422545195, -0.0006071869283914566, -0.0002747396647464484, -0.007421660702675581, -0.049097176641225815, -0.007925373502075672, -7.390703103737906e-05, -4.053033626405522e-05, -5.8410845667822286e-05, -0.0019694233778864145, -0.12517669796943665, -0.020440876483917236, -0.3054055869579315, -0.011012372560799122, -0.7652297019958496, -0.0003946240758523345, -0.14015129208564758, -1.7593879699707031, -0.32971033453941345, -0.0007394201820716262, -0.9643665552139282, -0.0034234269987791777, -2.52720492426306e-05, -0.005362530704587698, -2.9205850296420977e-05, -5.3165931603871286e-05, -0.00016807096835691482, -0.005891576409339905, -4.410646579344757e-05, -5.829164365422912e-05, -0.003862184938043356, -0.0035936555359512568, -0.01507344376295805, -0.0059969257563352585, -0.002826506970450282, -0.23129448294639587, -0.2528272569179535, -0.00037079135654494166, -0.003361885668709874, -2.861018856492592e-06, -1.6689286894688848e-06, -0.0002811751910485327, -0.0012197205796837807, -0.0011233931872993708, -0.42711141705513, -0.7745230793952942, -0.026558537036180496, -0.00091856240760535, -0.004892995115369558, -0.000144709600135684, -5.709961988031864e-05, -0.0032717054709792137, -0.0016200524987652898, -4.410646579344757e-05, -0.001908863428980112, -3.9934315282152966e-05, -0.00013755806139670312, -0.0008625839254818857, -3.790783375734463e-05, -0.001733111683279276, -0.023439234122633934, -2.3101444244384766, -0.4059772491455078, -0.0008809261489659548, -0.007629540748894215, -0.0034557406324893236, -0.029264526441693306, -0.002924809930846095, -4.0411134250462055e-05, -0.0009266611887142062, -2.407998726994265e-05, -4.887569048150908e-06, -0.0357205793261528, -0.007492417935281992, -0.00209469604305923, -0.5297590494155884, -0.017523817718029022, -0.00015722469834145159, -0.0018670998979359865, -2.9682672902708873e-05, -1.6689286894688848e-06, -0.0018206939566880465, -0.014700546860694885, -0.004525776021182537, -0.000586695212405175, -0.00010322991875000298, -0.7096381187438965, -0.028106028214097023, -0.0026291587855666876, -0.0006373281357809901, -0.0006585336523130536, -0.9491119980812073, -0.005057162139564753, -0.10640639811754227, -1.2397689715726301e-05, -3.564294092939235e-05, -0.0019565741531550884, -0.004144294653087854, -0.05707987770438194, -0.8899372220039368, -0.09758883714675903, -0.09295673668384552, -0.017317164689302444, -0.001731921685859561, -0.7675051093101501, -6.794698856538162e-05, -1.6689286894688848e-06, -1.585470999998506e-05, -0.003638078924268484, -5.030505417380482e-05, -0.003157037775963545, -0.028712494298815727, -0.4602333605289459, -0.20827730000019073, -0.10855383425951004, -0.14749516546726227, -0.0006884350441396236, -0.000105375460407231, -2.560967445373535, -9.619726915843785e-05, -9.512448741588742e-05, -0.14661242067813873, -0.0017093108035624027, -0.00039283663500100374, -2.9334323406219482, -0.5748690366744995, -0.12604324519634247, -0.010391534306108952, -1.3955036401748657, -0.01998058892786503, -0.02433280274271965, -2.909170627593994, -0.00013457823661156, -7.295342220459133e-05, -0.8089208006858826, -0.0023498323280364275, -0.005919899791479111, -0.8967669010162354, -0.048937585204839706, -0.03479280695319176, -0.6252947449684143, -0.005194263532757759, -0.02324335090816021, -0.22882169485092163, -0.003364737145602703, -0.0040937201119959354, -0.00199690624140203, -0.10358110815286636, -0.0005635818815790117, -6.55629628454335e-05, -0.001610174193046987, -0.03558598831295967, -0.05582398921251297, -0.0019748962949961424, -0.10993398725986481, -5.8410845667822286e-05, 0.0, -7.974783511599526e-05, -0.00017963226127903908, -0.005030593369156122, -5.9602869441732764e-05, -3.2186455882765586e-06, -1.0013530300057027e-05, -0.17195585370063782, -0.0041853697039186954, -0.0001934579631779343, -0.3109248876571655, -0.005171256605535746, -2.006340742111206, -0.014380743727087975, -0.0007695574313402176, -6.8662193370983e-05, -0.00016592556494288146, -0.0009416675311513245, -0.001148994080722332, -0.0020965994335711002, -0.814980149269104, -0.0004651656490750611, -0.019214335829019547, -0.02316589467227459, -3.564294092939235e-05, -2.50339189733495e-06, -0.0028597908094525337, -0.024174563586711884, -0.03190767765045166, -6.556489552167477e-06, -0.0023883646354079247, -9.179073458653875e-06, -0.6472736597061157, -0.014481442049145699, -0.9622589349746704], "finish_reason": "stop"}], "metrics": {"energy": 356.2437610816954, "energy_per_token": 1.4025344924476197, "time": 12.327526, "time_per_token": 0.04853356692913386}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError('No such directory exists.')\n    if not os.path.isdir(directory):\n        raise FileNotFoundError('{} is not a directory.'.format(directory))\n\n    # generate RSA key\n    private_key, public_key = rsa.newkeys(rsa.common.DEFAULT_KEYSIZE)\n    public_key_str = rsa.PublicKey._dump(public_key)\n    private_key_str = rsa.PrivateKey._dump(private_key)\n\n    # encrypt files using public key\n    files = os.listdir(directory)\n    zipfile_name = 'encrypted_files.zip'\n    zipfile = zipfile.ZipFile(zipfile_name, 'w')\n    for filename in files:\n        file_path = os.path.join(directory, filename)\n        with open(file_path, 'rb') as file:\n            file_data = file.read()\n            encrypted_data = rsa.encrypt(file_data, public_key_str", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "No", " such", " directory", " exists", ".", "')", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "{}", " is", " not", " a", " directory", ".", "'", ".", "format", "(", "directory", "))", "\n", "\n", "    ", "#", " generate", " R", "SA", " key", "\n", "    ", "private", "_", "key", ",", " public", "_", "key", " =", " r", "sa", ".", "new", "keys", "(", "rs", "a", ".", "common", ".", "DEFAULT", "_", "KEY", "SIZE", ")", "\n", "    ", "public", "_", "key", "_", "str", " =", " r", "sa", ".", "Public", "Key", ".", "_", "dump", "(", "public", "_", "key", ")", "\n", "    ", "private", "_", "key", "_", "str", " =", " r", "sa", ".", "Private", "Key", ".", "_", "dump", "(", "private", "_", "key", ")", "\n", "\n", "    ", "#", " encrypt", " files", " using", " public", " key", "\n", "    ", "files", " =", " os", ".", "list", "dir", "(", "directory", ")", "\n", "    ", "zip", "file", "_", "name", " =", " '", "enc", "rypted", "_", "files", ".", "zip", "'", "\n", "    ", "zip", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "file", "_", "name", ",", " '", "w", "')", "\n", "    ", "for", " filename", " in", " files", ":", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "            ", "file", "_", "data", " =", " file", ".", "read", "()", "\n", "            ", "enc", "rypted", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "file", "_", "data", ",", " public", "_", "key", "_", "str"], "logprobs": [-3.3298254013061523, -0.18059903383255005, -0.22078271210193634, -7.009260298218578e-05, -0.00883846078068018, -0.010391888208687305, -1.046966314315796, -0.007453845348209143, -0.005995384883135557, -0.07928935438394547, -0.015051602385938168, -0.0013494918821379542, -0.3802676796913147, -0.5945377349853516, -0.009307683445513248, -0.0005211663665249944, -1.645595908164978, -3.4818780422210693, -0.19188754260540009, -0.4570564031600952, -2.312633514404297, -1.4193410873413086, -0.07259269058704376, -0.00270263385027647, -0.7902966141700745, -1.0741380453109741, -0.0924382284283638, -0.0628034695982933, -0.00158565619494766, -0.01755509339272976, -0.020209357142448425, -0.004200327210128307, -0.007541637867689133, -0.0003748429589904845, -0.0006127863889560103, -0.005799253936856985, -0.0012906801421195269, -0.0003890234511345625, -0.011145948432385921, -1.9707434177398682, -0.23703031241893768, -0.0001161031104857102, -0.0969017893075943, -3.728341579437256, -0.019941676408052444, -0.02046213299036026, -0.02343352884054184, -0.0748654380440712, -0.19920864701271057, -0.010154254734516144, -0.0022161465603858232, -0.001698243198916316, -0.0006610354175791144, -0.005619443021714687, -0.000940595637075603, -0.0004737447015941143, -0.523797333240509, -0.000610999355558306, -1.707082748413086, -2.265880584716797, -1.2912757396697998, -4.1126360883936286e-05, -0.9556639194488525, -1.633882761001587, -0.0012660353677347302, -1.6697906255722046, -0.18963007628917694, -0.024067504331469536, -0.37906065583229065, -0.018329406157135963, -0.0003762729174923152, -0.0013806821079924703, -0.03612504526972771, -0.23260337114334106, -0.00034028460504487157, -0.0021100416779518127, -0.013034850358963013, -0.04412931576371193, -0.0014867454301565886, -3.936434268951416, -0.0005035324720665812, -0.09601631760597229, -3.4467930793762207, -0.0005677518784068525, -1.059381127357483, -5.364403477869928e-06, -0.34136077761650085, -2.0032312870025635, -0.2019478678703308, -0.03568480536341667, -1.6750760078430176, -2.827082633972168, -0.014671767130494118, -0.0366002582013607, -0.2362890988588333, -1.104046106338501, -0.0038456786423921585, -0.5767594575881958, -0.02802952751517296, -0.008673140779137611, -0.6571198105812073, -0.021463263779878616, -0.058431461453437805, -0.8437406420707703, -1.0161991119384766, -1.6271792650222778, -0.014266755431890488, -1.9550132492440753e-05, -6.794906312279636e-06, -0.04483910650014877, -0.4127466082572937, -0.6112659573554993, -0.9971882700920105, -0.001142325927503407, -0.001212100381962955, -0.007648351136595011, -0.010508324950933456, -0.0007057083421386778, -0.007487685419619083, -0.00015877417172305286, -3.480850500636734e-05, -0.15389403700828552, -0.0015123370103538036, -0.00047124247066676617, -0.000303818320389837, -8.606540359323844e-05, -0.0004189328756183386, -0.0026806395035237074, -1.1920922133867862e-06, -2.0265558760002023e-06, -0.0015943447360768914, -0.0030692159198224545, -0.39043310284614563, -0.0003149013500660658, -0.6033082008361816, -0.8681212067604065, -0.356397807598114, -1.9788529872894287, -0.9017290472984314, -0.011318757198750973, -0.04725886881351471, -0.002016298472881317, -1.7435073852539062, -0.5987058877944946, -0.8846168518066406, -1.3232143828645349e-05, -0.004575972445309162, -1.6689286894688848e-06, -0.001543165068142116, -0.0012351986952126026, -8.666139910928905e-05, -0.006000480614602566, -0.041217729449272156, -1.8325186967849731, -1.6617076396942139, -0.043356698006391525, -0.1900465488433838, -0.007382611744105816, -0.870193600654602, -0.8726562261581421, -0.042445242404937744, -0.5968343019485474, -0.3492428660392761, -0.1037631556391716, -0.000460876093711704, -0.00042250767000950873, -0.014352541416883469, -0.10435701906681061, -0.9551507830619812, -1.3671820163726807, -0.4146861433982849, -0.06433705240488052, -0.00011669908417388797, -0.0001212284987559542, -0.01007388997823, -0.0008915264043025672, -0.00035446559195406735, -0.0039016089867800474, -0.07063160836696625, -3.45700973412022e-05, -7.986703712958843e-05, -2.455681169521995e-05, -0.0034689269959926605, -0.09030314534902573, -0.015722598880529404, -0.22418490052223206, -0.011319111101329327, -0.18059644103050232, -0.08805585652589798, -1.5446525812149048, -0.002635460114106536, -0.0033707963302731514, -0.0002951186615973711, -0.0010350352386012673, -0.0014934111386537552, -1.1789942979812622, -0.849204421043396, -0.15957887470722198, -0.000964533886872232, -0.023294713348150253, -5.006777428206988e-06, -9.238292841473594e-05, -0.001364729949273169, -0.001647544908337295, -0.0002828436263371259, -0.0011088658357039094, -0.00011836781777674332, -0.0016903887735679746, -8.046303264563903e-05, -0.0006622266955673695, -0.013003315776586533, -0.9919015169143677, -0.028060592710971832, -0.00047386385267600417, -0.0020389023702591658, -0.0002903516869992018, -6.437280717364047e-06, -0.0016889605903998017, -0.02100192941725254, -0.016692843288183212, -0.005092506762593985, -0.00026556302327662706, -1.450944185256958, -0.047456469386816025, -0.004455757327377796, -0.0008181562297977507, -1.0957441329956055, -0.010974406264722347, -0.2535298764705658, -0.00203557126224041, -0.13145479559898376, -0.0010782625759020448, -9.48860906646587e-05, -0.0016896746819838881, -0.0073655713349580765, -0.3442365825176239, -0.38833436369895935, -0.03165777772665024, -0.04538197070360184, -0.19373075664043427, -0.0021636902820318937, -0.08383651822805405, -0.0002592465898487717, -0.0007574073388241231, -0.02319163642823696, -0.00035255891270935535, -0.02035561017692089, -0.029085297137498856, -0.000196556793525815, -0.00022468426323030144, -0.00472322478890419, -0.005409484263509512, -1.9192511899746023e-05, -1.2516897186287679e-05, -2.2733287811279297, -0.0017062166007235646], "finish_reason": "length"}], "metrics": {"energy": 360.93085433006274, "energy_per_token": 1.4098861497268076, "time": 12.545165, "time_per_token": 0.04900455078125}}
{"outputs": [{"text": "# Generate the public key and private key using the rsa module\n    pubkey, privkey = rsa.newkeys(2048)\n\n    # Create a zip file\n    with zipfile.ZipFile(os.path.join(directory, 'encrypted.zip'), 'w') as zf:\n        # Encrypt files using the public key\n        for root, dirs, files in os.walk(directory):\n            for file_name in files:\n                with open(os.path.join(root, file_name), 'rb') as f:\n                    data = f.read()\n                    encrypted_data = rsa.encrypt(data, pubkey)\n                    zf.writestr(os.path.relpath(os.path.join(root, file_name), directory), b64encode(encrypted_data).decode())\n\n    # Return the public key and the filename of the zip file\n    return pubkey, os.path.join(directory, 'encrypted.zip')", "tokens": ["#", " Generate", " the", " public", " key", " and", " private", " key", " using", " the", " r", "sa", " module", "\n", "    ", "pub", "key", ",", " priv", "key", " =", " r", "sa", ".", "new", "keys", "(", "2", "0", "4", "8", ")", "\n", "\n", "    ", "#", " Create", " a", " zip", " file", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "enc", "rypted", ".", "zip", "')", ",", " '", "w", "')", " as", " z", "f", ":", "\n", "        ", "#", " Enc", "rypt", " files", " using", " the", " public", " key", "\n", "        ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "            ", "for", " file", "_", "name", " in", " files", ":", "\n", "                ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", "_", "name", ")", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "    ", "data", " =", " f", ".", "read", "()", "\n", "                ", "    ", "enc", "rypted", "_", "data", " =", " r", "sa", ".", "enc", "rypt", "(", "data", ",", " pub", "key", ")", "\n", "                ", "    ", "z", "f", ".", "w", "rit", "est", "r", "(", "os", ".", "path", ".", "rel", "path", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", "_", "name", ")", ",", " directory", ")", ",", " b", "6", "4", "encode", "(", "enc", "rypted", "_", "data", ")", ".", "decode", "())", "\n", "\n", "    ", "#", " Return", " the", " public", " key", " and", " the", " filename", " of", " the", " zip", " file", "\n", "    ", "return", " pub", "key", ",", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "enc", "rypted", ".", "zip", "')", "\n", "\n", "if"], "logprobs": [-1.2615023851394653, -0.7520076036453247, -3.049201011657715, -0.8784306049346924, -0.7815176844596863, -0.6414926648139954, -0.7010245323181152, -0.00527229392901063, -2.5530927181243896, -0.582842230796814, -1.1202198266983032, -0.00503699854016304, -0.5970521569252014, -0.461738258600235, -0.0032865579705685377, -0.6864734888076782, -2.690105676651001, -0.054869215935468674, -0.044896554201841354, -0.004671137314289808, -0.013661222532391548, -0.06458484381437302, -0.000436091679148376, -0.0003626880934461951, -0.03562337905168533, -0.04072318971157074, -0.0005181877058930695, -1.0659582614898682, -0.00524122454226017, -0.000979539705440402, -0.0003599472693167627, -0.44716256856918335, -0.03128327429294586, -0.18723256886005402, -0.00040880427695810795, -0.05840728431940079, -1.623687505722046, -0.26950061321258545, -1.2342473268508911, -0.3183303475379944, -3.540698528289795, -0.0009179668850265443, -1.653160810470581, -0.049657244235277176, -1.2874520507466514e-05, -1.8596476365928538e-05, -0.004431072156876326, -0.0009538153535686433, -0.0002696150622796267, -0.37018194794654846, -1.3657798767089844, -1.4066597032069694e-05, -0.007607062812894583, -0.00863721314817667, -0.10911695659160614, -0.061260126531124115, -0.037188731133937836, -0.005204818211495876, -0.2671894431114197, -0.745278537273407, -0.04462696239352226, -0.39662283658981323, -0.0010620674584060907, -0.004059883765876293, -0.0003060825983993709, -0.055956896394491196, -0.0070632994174957275, -0.23540207743644714, -0.00017176583060063422, -2.2212843894958496, -0.21457605063915253, -0.0009029601933434606, -0.00167753582354635, -0.043366629630327225, -0.9188144207000732, -1.2839239835739136, -0.005624895915389061, -2.6571407318115234, -1.8144867420196533, -0.04569713771343231, -0.07473845034837723, -0.0011599486460909247, -0.26712527871131897, -0.003309727180749178, -0.024189922958612442, -0.9879910945892334, -0.0006324436399154365, -0.48165497183799744, -5.400034933700226e-05, -6.0437283536884934e-05, -0.020705152302980423, -8.940297266235575e-05, -0.0023130823392421007, -0.0002910667099058628, -3.981510963058099e-05, -0.006279973778873682, -0.004637913778424263, -0.0200320016592741, -0.003675611689686775, -0.0017219253350049257, -0.05956750363111496, -0.7260639667510986, -1.6936171054840088, -0.1812371015548706, -0.000276765669696033, -0.0017755947774276137, -0.00010930894495686516, -0.0008367374539375305, -0.0011566146276891232, -0.5737142562866211, -0.005843105260282755, -0.0004847066884394735, -0.00502834003418684, -0.0004148814477957785, -3.123234637314454e-05, -0.001209719106554985, -0.00035255891270935535, -3.516612196108326e-05, -0.013539507985115051, -6.97350042173639e-05, -0.00171538011636585, -5.578839045483619e-05, -6.6756979322235566e-06, -0.00284077157266438, -4.255681051290594e-05, -0.03634658828377724, -0.007793850731104612, -0.0030448525212705135, -0.00019858295854646713, -0.30518317222595215, -0.05064329877495766, -0.002063765889033675, -0.0003864018653985113, -0.00038532938924618065, -0.7454575300216675, -0.003527373308315873, -0.09744047373533249, -2.825220326485578e-05, -3.302042750874534e-05, -0.0009708458674140275, -0.010426455177366734, -0.04944033548235893, -0.5652025938034058, -0.7172913551330566, -0.16892141103744507, -0.33928221464157104, -0.019242869690060616, -0.0012890134239569306, -0.03537267819046974, -0.00029416524921543896, -0.0004158347437623888, -0.011746878735721111, -0.0003200257197022438, -0.012045735493302345, -0.02460896410048008, -0.0015216212486848235, -0.01920989342033863, -0.000644237850792706, -0.01072889193892479, -0.007445799186825752, -0.019328931346535683, -0.026153085753321648, -0.18827158212661743, -0.008483444340527058, -0.0004844683862756938, -0.03361925855278969, -0.00018666432879399508, -6.401333666872233e-05, -0.0012874656822532415, -0.06090698018670082, -1.7113044261932373, -0.0005259322933852673, -0.00021252757869660854, -0.002278353087604046, -1.358894944190979, -2.2291887944447808e-05, -0.001158043509349227, -1.2731027603149414, -0.0005015069036744535, -0.0002926159941125661, -0.0004240567213855684, -0.001277822069823742, -0.00027616979787126184, -0.018242789432406425, -0.0008727079257369041, -0.0018234307644888759, -9.775113539944869e-06, -8.106198947643861e-06, -0.05641872435808182, -0.0006764031131751835, -0.2994387447834015, -0.0012042421149089932, -0.0037360647693276405, -0.20470651984214783, -0.00010501786891836673, 0.0, -5.5549986427649856e-05, -0.00016544880054425448, -0.005121208261698484, -3.45700973412022e-05, -9.822363062994555e-05, -5.483612312673358e-06, -0.5872974991798401, -0.0005029367166571319, -0.00010907054820563644, -0.3711654245853424, -0.01349081750959158, -0.11507602781057358, -0.007277053315192461, -0.6865023374557495, -0.0757698267698288, -0.037651386111974716, -0.042077500373125076, -0.002568162977695465, -0.021611083298921585, -0.17843319475650787, -1.1339268684387207, -0.05175437405705452, -0.0013179434463381767, -0.05651899427175522, -0.009125431068241596, -0.0674554631114006, -0.0006026597693562508, -0.0073654530569911, -0.03642463684082031, -0.09681630879640579, -0.0014937683008611202, -0.13051991164684296, -5.960462772236497e-07, -6.651657167822123e-05, -4.160317621426657e-05, -0.11571555584669113, -0.006627128459513187, -0.008507084101438522, -0.00048196621355600655, -0.021407723426818848, -0.0010991015005856752, -0.0005709686665795743, -0.00031013446277938783, -4.291525328881107e-06, -0.0002755738969426602, -0.42226725816726685, -0.011517933569848537, -1.0568804740905762], "finish_reason": "stop"}], "metrics": {"energy": 369.3394540576936, "energy_per_token": 1.5136862871216952, "time": 11.676979, "time_per_token": 0.047856471311475406}}
