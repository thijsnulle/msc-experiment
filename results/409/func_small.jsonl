{"outputs": [{"text": "stats = {}\n    try:\n        df = pd.read_excel(f'{excel_file_path}/{file_name}')\n        column = df[column_name].values\n    except FileNotFoundError:\n        raise FileNotFoundError('The Excel file does not exist.')\n    except KeyError:\n        raise ValueError(f'{column_name} is not a column in the Excel file.')\n\n    stats['mean'] = column.mean()\n    stats['median'] = np.median(column)\n    stats['std_dev'] = column.std()\n\n    return stats", "tokens": ["stats", " =", " {}", "\n", "    ", "try", ":", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "f", "'{", "ex", "cel", "_", "file", "_", "path", "}/{", "file", "_", "name", "}", "')", "\n", "        ", "column", " =", " df", "[", "column", "_", "name", "]", ".", "values", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "The", " Excel", " file", " does", " not", " exist", ".", "')", "\n", "    ", "except", " Key", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "'{", "column", "_", "name", "}", " is", " not", " a", " column", " in", " the", " Excel", " file", ".", "')", "\n", "\n", "    ", "stats", "['", "mean", "']", " =", " column", ".", "mean", "()", "\n", "    ", "stats", "['", "med", "ian", "']", " =", " np", ".", "med", "ian", "(", "column", ")", "\n", "    ", "stats", "['", "std", "_", "dev", "']", " =", " column", ".", "std", "()", "\n", "\n", "    ", "return", " stats"], "logprobs": [-1.8411043882369995, -0.04948220029473305, -0.5411280393600464, -0.014517865143716335, -0.2028534710407257, -1.3478422164916992, -0.0005663221818394959, -0.0032504366245120764, -0.011317696422338486, -0.7164409756660461, -0.014581660740077496, -0.0183283518999815, -6.210611172718927e-05, -0.04351866617798805, -0.00013720047718379647, -0.002107900334522128, -0.00016652150952722877, -0.016590140759944916, -2.638232946395874, -0.5989115238189697, -0.019087916240096092, -5.006777428206988e-06, -0.0002901133266277611, -0.00010775939153973013, -8.463501580990851e-05, -4.053033626405522e-05, -0.29135027527809143, -0.0021856960374861956, -1.0251946150674485e-05, -2.7894584491150454e-05, -0.9210938811302185, -0.03206770122051239, -0.06383536756038666, -0.5920412540435791, -1.2767033576965332, -0.36716753244400024, -0.025587711483240128, -0.06462261080741882, -0.00460753683000803, -5.924526340095326e-05, -6.556489552167477e-06, -0.0012686545960605145, -2.2187509536743164, -0.9249268174171448, -0.11399976164102554, -2.9087939262390137, -0.0030589953530579805, -0.08332313597202301, -9.179073458653875e-06, -1.4305104514278355e-06, -0.1981121003627777, -0.005994911305606365, -0.001095886342227459, -0.3753580152988434, -0.0753316655755043, -0.0003216941258870065, -0.0001699779968475923, -2.1359641551971436, -1.5475183725357056, -0.6984032392501831, -0.004689409863203764, -0.0771389976143837, -0.0005267662927508354, -0.0008628221112303436, -2.3067054748535156, -0.05171962082386017, -0.030608192086219788, -0.029266031458973885, -0.027222903445363045, -0.6657750010490417, -1.2159273865108844e-05, -0.026042290031909943, -0.014102918095886707, -0.0005443998379632831, -0.016323482617735863, -0.08435829728841782, -1.2874520507466514e-05, -0.8065223097801208, -0.1571495085954666, -2.4120774269104004, -0.05956682935357094, -0.005990645382553339, -6.782778655178845e-05, -0.014024985954165459, -0.19137713313102722, -0.021933365613222122, -0.5437597632408142, -0.8261568546295166, -0.17516395449638367, -0.06596482545137405, -0.20791657269001007, -0.009330359287559986, -0.046015623956918716, -0.007817625068128109, -0.007586004212498665, -1.0772169828414917, -0.0007377525325864553, -0.32051146030426025, -0.030695246532559395, -0.008314046077430248, -0.00023719835735391825, -0.027509169653058052, -1.0377497673034668, -0.002312606666237116, -0.0017472729086875916, -0.00305031961761415, -0.009609395638108253, -0.007898053154349327, -0.022226162254810333, -0.0004468158003874123, -0.003459423314779997, -0.00013171759201213717, -5.185469490243122e-05, -0.0008668717346154153, -0.42205631732940674, -1.5735502529423684e-05, -0.0021230080164968967, -0.0005453529884107411, -0.0007684853626415133, -0.001142445020377636, -0.004668408073484898, -0.010488035157322884, -0.004072706215083599, -0.011227641254663467, -0.0007122601964510977, -0.004751818720251322, -0.001369491801597178, -0.0005691815749742091, -0.00017915551143232733, -0.002025458961725235, -0.7648584246635437, -0.0009004590683616698, -0.00199524057097733, -0.02653462253510952, -0.02015281282365322, -0.4876227378845215, -0.004666865803301334, -0.009857900440692902, -0.004210298415273428], "finish_reason": "stop"}], "metrics": {"energy": 226.27913786315918, "energy_per_token": 1.627907466641433, "time": 7.313409, "time_per_token": 0.05261445323741007}}
{"outputs": [{"text": "try:\n        df = pd.read_excel(excel_file_path + file_name, index_col=None)\n    except FileNotFoundError:\n        raise FileNotFoundError(\"File does not exist\")\n\n    column = df[column_name]\n    mean = column.mean()\n    median = column.median()\n    std_dev = np.std(column, ddof=1)\n\n    return {\n        'mean': mean,\n        'median': median,\n        'std_dev': std_dev,\n    }", "tokens": ["try", ":", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ",", " index", "_", "col", "=", "None", ")", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "File", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "column", " =", " df", "[", "column", "_", "name", "]", "\n", "    ", "mean", " =", " column", ".", "mean", "()", "\n", "    ", "med", "ian", " =", " column", ".", "med", "ian", "()", "\n", "    ", "std", "_", "dev", " =", " np", ".", "std", "(", "column", ",", " dd", "of", "=", "1", ")", "\n", "\n", "    ", "return", " {", "\n", "        ", "'", "mean", "':", " mean", ",", "\n", "        ", "'", "med", "ian", "':", " median", ",", "\n", "        ", "'", "std", "_", "dev", "':", " std", "_", "dev", ",", "\n", "    ", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-1.7448699474334717, -0.0009943069890141487, -0.005875577684491873, -0.01621909812092781, -0.9617505073547363, -0.01848248764872551, -0.018168224021792412, -8.368142152903602e-05, -0.03592127934098244, -0.000120751719805412, -0.0017589349299669266, -0.00017808281700126827, -0.015213875100016594, -0.39336735010147095, -7.867782187531702e-06, -5.2689116273541003e-05, -0.00027223696815781295, -0.00010656742961145937, -0.00012206286191940308, -0.05966499075293541, -0.10524318367242813, -4.1960789531003684e-05, -3.099393507000059e-05, -0.6697244048118591, -1.7512922286987305, -0.00010799778101500124, -0.010336319915950298, -0.04535246640443802, -1.101414442062378, -0.36605536937713623, -0.035952676087617874, -0.5600486397743225, -0.0017312075942754745, -0.050699617713689804, -1.4781842764932662e-05, -3.099436753473128e-06, -0.1839473843574524, -0.0076805283315479755, -0.0014036574866622686, -0.3975512683391571, -0.05741377919912338, -0.00022194306075107306, -0.00010692501382436603, -0.19825142621994019, -1.00162672996521, -0.8095357418060303, -2.508655309677124, -0.00154518848285079, -0.012611282989382744, -1.3609479665756226, -0.003075157990679145, -0.007341904565691948, -0.9807664155960083, -0.0007497837068513036, -1.1843339204788208, -0.667999804019928, -0.04574337601661682, -0.1341427117586136, -0.005850926972925663, -4.51792984677013e-05, -8.940656698541716e-06, -0.0021370449103415012, -0.14308182895183563, -0.4297184944152832, -1.2456810474395752, -0.2048160880804062, -0.4886135160923004, -0.0030125256162136793, -0.0038239466957747936, -0.002572205848991871, -0.01230494026094675, -0.0120074562728405, -0.009283589199185371, -0.003924764227122068, -0.0011297041783109307, -0.24850378930568695, -0.03044782020151615, -0.008430487476289272, -3.909988299710676e-05, -0.0009109399979934096, -0.002230182057246566, -0.00990676786750555, -0.0443105474114418, -0.12047914415597916, -0.010489686392247677, -0.001654209685511887, -2.4714016914367676, -3.45700973412022e-05, -0.005921558942645788, -0.0007391819381155074, -0.00515655055642128, -2.89375638961792, -0.03607146441936493, -6.210611172718927e-05, -0.0026721982285380363, -0.04841255024075508, -0.020948464050889015, -0.10831798613071442, -0.39283910393714905, -0.00015317220822907984, -0.34024885296821594, -1.1323108673095703, -0.008250558748841286, -0.008875207975506783, -0.27075445652008057, -0.004325795453041792, -0.0016855093417689204, -0.12890563905239105, -0.0031243578996509314, -0.007526020053774118, -0.00026770823751576245, -0.000497336674015969, -0.0007389436941593885, -0.00024828212917782366, -0.0003143055073451251, -0.0010152667528018355, -0.00013076403411105275, -0.0010588521836325526, -0.00015698630886618048, -0.0009473841637372971, -0.014366877265274525, -0.004169818013906479, -0.0009448830969631672, -0.00028463127091526985, -0.014767972752451897, -4.708655978902243e-05, -9.417489309271332e-06, -1.3103519678115845, -0.0016369527438655496, -0.023690612986683846, -1.4247981309890747, -2.3841855067985307e-07, -2.264974000354414e-06, -0.0004385939973872155, -7.450303382938728e-05, -0.15961617231369019], "finish_reason": "stop"}], "metrics": {"energy": 140.85622036647788, "energy_per_token": 1.0357075026946903, "time": 5.891691, "time_per_token": 0.04332125735294118}}
{"outputs": [{"text": "try:\n        df = pd.read_excel(f'{excel_file_path}/{file_name}', sheet_name=0, index_col=0)\n    except FileNotFoundError:\n        raise FileNotFoundError(f\"File not found at {excel_file_path}\")\n    try:\n        column = df[column_name]\n    except KeyError:\n        raise ValueError(f\"Column {column_name} not found in file {file_name}\")\n\n    return {\"mean\": column.mean(),\n            \"median\": column.median(),\n            \"std_dev\": column.std()}", "tokens": ["try", ":", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "f", "'{", "ex", "cel", "_", "file", "_", "path", "}/{", "file", "_", "name", "}'", ",", " sheet", "_", "name", "=", "0", ",", " index", "_", "col", "=", "0", ")", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "File", " not", " found", " at", " {", "ex", "cel", "_", "file", "_", "path", "}\"", ")", "\n", "    ", "try", ":", "\n", "        ", "column", " =", " df", "[", "column", "_", "name", "]", "\n", "    ", "except", " Key", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " {", "column", "_", "name", "}", " not", " found", " in", " file", " {", "file", "_", "name", "}\"", ")", "\n", "\n", "    ", "return", " ", "{\"", "mean", "\":", " column", ".", "mean", "()", ",", "\n", "            ", "\"", "med", "ian", "\":", " column", ".", "med", "ian", "()", ",", "\n", "            ", "\"", "std", "_", "dev", "\":", " column", ".", "std", "()}", "\n", "\n", "def"], "logprobs": [-1.7448699474334717, -0.0009943069890141487, -0.005875577684491873, -0.01621909812092781, -0.9617505073547363, -0.01848248764872551, -0.018168224021792412, -8.368142152903602e-05, -0.03592127934098244, -0.000120751719805412, -0.0017589349299669266, -0.00017808281700126827, -0.015213875100016594, -2.6340155601501465, -0.7761791348457336, -0.01713261567056179, -4.887569048150908e-06, -0.00022456508304458112, -9.357491217087954e-05, -0.00011085849109804258, -4.911301948595792e-05, -0.3754647970199585, -0.0015355474315583706, -7.629365427419543e-06, -2.47952248173533e-05, -0.6155835390090942, -0.0009602464851923287, -0.688986599445343, -0.000649956171400845, -0.0001720042055239901, -0.3580041229724884, -1.416738748550415, -0.7768347263336182, -0.791079580783844, -0.0007584794075228274, -0.005479554180055857, -0.03489365801215172, -0.6822304129600525, -0.16186103224754333, -0.03571908548474312, -0.6569378972053528, -0.0028130742721259594, -0.04096934571862221, -1.4305012882687151e-05, -3.099436753473128e-06, -0.14349490404129028, -0.007083422504365444, -0.0012132910778746009, -0.4984041154384613, -0.08781469613313675, -0.00034791138023138046, -0.00015293381875380874, -0.33151814341545105, -0.2537859082221985, -0.9459572434425354, -0.9196592569351196, -0.7694647908210754, -0.014308121055364609, -0.48934873938560486, -0.4151913821697235, -0.019113996997475624, -0.0003678122302517295, -2.7418097943154862e-06, -0.0007521660882048309, -0.00023362292267847806, -6.294052582234144e-05, -1.4933979511260986, -0.0006891497760079801, -0.004705427680164576, -0.6638532876968384, -2.3775434494018555, -0.00019333878299221396, -0.0017462018877267838, -0.0023268787190318108, -0.8296543955802917, -0.28850993514060974, -0.016750404611229897, -0.15098339319229126, -0.003672404680401087, -8.785339014139026e-05, -1.1086402082582936e-05, -0.0022555168252438307, -0.14484265446662903, -0.08197811245918274, -0.00034028460504487157, -0.01596677303314209, -3.4570634852570947e-06, -0.026220789179205894, -0.018624197691679, -0.0006273209000937641, -0.01129424013197422, -0.06424907594919205, -1.847726889536716e-05, -0.010364871472120285, -0.0646970346570015, -0.08729690313339233, -0.2254796177148819, -0.6115189790725708, -0.00309750041924417, -0.006395586766302586, -8.49926145747304e-05, -0.01248225849121809, -0.0664425790309906, -0.017281897366046906, -0.02552821673452854, -1.2976869344711304, -0.28576990962028503, -0.04894087836146355, -0.0005759726045653224, -0.0003784178989008069, -0.16693097352981567, -0.00034898388548754156, -0.0011367294937372208, -1.568376898765564, -0.001090765930712223, -1.8818228244781494, -3.0004892349243164, -0.0010272946674376726, -0.008250794373452663, -0.0037915261927992105, -0.2408246099948883, -0.0011257746955379844, -0.0025364153552800417, -0.0015524489572271705, -0.004393923562020063, -1.047060251235962, -0.023203633725643158, -0.003138143103569746, -0.0024836191441863775, -0.0006971312686800957, -0.0012397230602800846, -0.20508453249931335, -0.0034489689860492945, -0.004505601711571217, -2.0503786799963564e-05, -0.0008023141999728978, -0.0005710878176614642, -0.006105699576437473, -0.0008916454971767962, -0.0011123190633952618, -0.02635316178202629, -0.005573447793722153, -0.0011697123991325498, -0.0013367536012083292, -0.04929373785853386, -0.000858415151014924, -0.00260740052908659, -0.621062159538269, -0.34326353669166565, -0.031245147809386253, -0.22156722843647003], "finish_reason": "stop"}], "metrics": {"energy": 197.50722055053706, "energy_per_token": 1.3079948380830269, "time": 6.726759, "time_per_token": 0.04454807284768212}}
{"outputs": [{"text": "try:\n        df = pd.read_excel(excel_file_path + file_name, sheet_name='Sheet1', usecols=[1, 2, 3])\n    except FileNotFoundError:\n        print(\"File does not exist\")\n        return None\n    except ValueError:\n        print(\"Column not found\")\n        return None\n\n    try:\n        mean = df[column_name].mean()\n        median = df[column_name].median()\n        std_dev = df[column_name].std()\n    except TypeError:\n        print(\"Column must be numeric\")\n        return None\n\n    stats = {\n        'mean': mean,\n        'median': median,\n        'std_dev': std_dev\n    }\n\n    return stats", "tokens": ["try", ":", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ",", " sheet", "_", "name", "='", "Sheet", "1", "'", ",", " use", "cols", "=[", "1", ",", " ", "2", ",", " ", "3", "])", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "print", "(", "\"", "File", " does", " not", " exist", "\"", ")", "\n", "        ", "return", " None", "\n", "    ", "except", " Value", "Error", ":", "\n", "        ", "print", "(", "\"", "Column", " not", " found", "\"", ")", "\n", "        ", "return", " None", "\n", "\n", "    ", "try", ":", "\n", "        ", "mean", " =", " df", "[", "column", "_", "name", "]", ".", "mean", "()", "\n", "        ", "med", "ian", " =", " df", "[", "column", "_", "name", "]", ".", "med", "ian", "()", "\n", "        ", "std", "_", "dev", " =", " df", "[", "column", "_", "name", "]", ".", "std", "()", "\n", "    ", "except", " Type", "Error", ":", "\n", "        ", "print", "(", "\"", "Column", " must", " be", " numeric", "\"", ")", "\n", "        ", "return", " None", "\n", "\n", "    ", "stats", " =", " {", "\n", "        ", "'", "mean", "':", " mean", ",", "\n", "        ", "'", "med", "ian", "':", " median", ",", "\n", "        ", "'", "std", "_", "dev", "':", " std", "_", "dev", "\n", "    ", "}", "\n", "\n", "    ", "return", " stats", "\n", "\n", "def"], "logprobs": [-1.7448699474334717, -0.0009943069890141487, -0.005875577684491873, -0.01621909812092781, -0.9617505073547363, -0.01848248764872551, -0.018168224021792412, -8.368142152903602e-05, -0.03592127934098244, -0.000120751719805412, -0.0017589349299669266, -0.00017808281700126827, -0.015213875100016594, -0.39336735010147095, -7.867782187531702e-06, -5.2689116273541003e-05, -0.00027223696815781295, -0.00010656742961145937, -0.00012206286191940308, -0.05966499075293541, -0.10524318367242813, -4.1960789531003684e-05, -3.099393507000059e-05, -0.6697244048118591, -0.7716760635375977, -0.0008666335488669574, -0.00018142008048016578, -1.1802061796188354, -0.4264693856239319, -0.043588969856500626, -0.6105406284332275, -0.0007325111655518413, -1.5031602382659912, -0.001374253653921187, -0.2086980789899826, -2.6434409618377686, -0.915865957736969, -0.39734387397766113, -0.450634241104126, -0.40848344564437866, -0.0098694683983922, -0.05095250532031059, -1.2185827493667603, -0.04957783967256546, -0.870622992515564, -0.0039749909192323685, -0.0512034073472023, -1.0013530300057027e-05, -3.3378546504536644e-06, -0.13582691550254822, -0.006014226004481316, -0.0014809127897024155, -1.2116026878356934, -0.380763977766037, -0.4533335864543915, -0.5653964281082153, -2.800114154815674, -0.0025018127635121346, -0.01439108420163393, -1.2787811756134033, -0.011633413843810558, -0.0022813265677541494, -0.44844138622283936, -0.5828779339790344, -0.9776145815849304, -0.005878540687263012, -0.32490381598472595, -0.3068811297416687, -0.48474743962287903, -3.790783375734463e-05, -0.034866489470005035, -0.019711561501026154, -0.0015603045467287302, -0.021839013323187828, -0.03442765399813652, -0.05970305949449539, -0.5543140172958374, -0.7242236137390137, -0.0403156578540802, -0.20569299161434174, -0.0015255491016432643, -0.0011372057488188148, -0.01800970733165741, -0.0055816275998950005, -0.003712667850777507, -0.0005389191792346537, -0.8405710458755493, -0.011097848415374756, -2.797316551208496, -0.001434369827620685, -0.0026651835069060326, -0.0070470827631652355, -1.5340768098831177, -0.10613445937633514, -0.5462040305137634, -0.06764399260282516, -0.010672397911548615, -5.23315102327615e-05, -1.2636104656849056e-05, -0.0077574183233082294, -0.00020489977032411844, -0.005587080493569374, -0.0044165924191474915, -0.011136752553284168, -0.20772957801818848, -0.014447838068008423, -0.004613469820469618, -0.001648973091505468, -0.30683639645576477, -0.0032693292014300823, -0.00033682872890494764, -3.099436753473128e-06, -2.3841855067985307e-07, -0.0015695883193984628, -1.7881233361549675e-05, -0.007437753025442362, -9.059865078597795e-06, -0.0005754960584454238, -0.0021023093722760677, -0.005245612468570471, -0.033546753227710724, -0.06978560239076614, -0.007846012711524963, -0.0014602008741348982, -0.11158288270235062, -0.001899820752441883, -0.00022909401741344482, -4.172316494077677e-06, -2.3841855067985307e-07, -0.00048411093303002417, -1.2397689715726301e-05, -0.0013405631761997938, -0.03681031987071037, -0.006128092762082815, -0.498794287443161, -0.002439976902678609, -2.519429922103882, -9.298280929215252e-06, -0.03215128183364868, -0.035836175084114075, -0.0012850845232605934, -0.13512785732746124, -0.055885542184114456, -0.03567606210708618, -1.1511955261230469, -2.9533798694610596, -0.1139378547668457, -0.8591728210449219, -0.08381437510251999, -0.0007090438157320023, -0.0004096384218428284, -0.010573673993349075, -0.009901928715407848, -0.005944667384028435, -0.0006053998949937522, -0.45465758442878723, -0.0008808070560917258, -1.499045491218567, -0.07990771532058716, -1.2392730712890625, -0.01031083520501852, -0.01593814603984356, -0.15440841019153595, -0.00493724225088954, -0.002338652964681387, -0.25879910588264465, -0.0012888943310827017, -0.009363781660795212, -0.00036376056959852576, -0.0005965837044641376, -0.0008335214806720614, -0.00015925093612167984, -0.00039104922325350344, -0.0011211306555196643, -0.0001711698860162869, -0.0021453716326504946, -0.0004916174802929163, -0.0010162194957956672, -0.02055264450609684, -0.00432888139039278, -0.0008594871615059674, -0.0003524397616274655, -0.021166156977415085, -0.00012039413559250534, -9.059865078597795e-06, -0.15410159528255463, -0.018108518794178963, -7.760223525110632e-05, -0.00038068200228735805, -0.6786759495735168, -0.004046705085784197, -0.056444186717271805, -0.004168037325143814, -0.43011021614074707, -0.014707477763295174, -0.18869660794734955], "finish_reason": "stop"}], "metrics": {"energy": 220.09447513008107, "energy_per_token": 1.122930995561638, "time": 8.624233, "time_per_token": 0.04400118877551021}}
{"outputs": [{"text": "# Create a dummy Excel file to work with\n    workbook = pd.ExcelFile(os.path.join(excel_file_path, file_name))\n\n    try:\n        df = workbook.parse(sheet_name=file_name)\n    except FileNotFoundError:\n        raise FileNotFoundError(\"The specified Excel file was not found.\")\n\n    if not column_name in df.columns:\n        raise ValueError(\"The specified column was not found in the Excel file.\")\n\n    # Calculate the statistics\n    stats = {\n        'mean': df[column_name].mean(),\n        'median': df[column_name].median(),\n        'std_dev': df[column_name].std(),\n    }\n\n    return stats", "tokens": ["#", " Create", " a", " dummy", " Excel", " file", " to", " work", " with", "\n", "    ", "work", "book", " =", " pd", ".", "Excel", "File", "(", "os", ".", "path", ".", "join", "(", "ex", "cel", "_", "file", "_", "path", ",", " file", "_", "name", "))", "\n", "\n", "    ", "try", ":", "\n", "        ", "df", " =", " work", "book", ".", "parse", "(", "sheet", "_", "name", "=", "file", "_", "name", ")", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " Excel", " file", " was", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " column", "_", "name", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " specified", " column", " was", " not", " found", " in", " the", " Excel", " file", ".", "\"", ")", "\n", "\n", "    ", "#", " Calculate", " the", " statistics", "\n", "    ", "stats", " =", " {", "\n", "        ", "'", "mean", "':", " df", "[", "column", "_", "name", "]", ".", "mean", "()", ",", "\n", "        ", "'", "med", "ian", "':", " df", "[", "column", "_", "name", "]", ".", "med", "ian", "()", ",", "\n", "        ", "'", "std", "_", "dev", "':", " df", "[", "column", "_", "name", "]", ".", "std", "()", ",", "\n", "    ", "}", "\n", "\n", "    ", "return", " stats", "\n", "\n", "def"], "logprobs": [-1.9811408519744873, -1.9218755960464478, -0.6210557222366333, -2.6449224948883057, -0.811052143573761, -0.04111442342400551, -2.2498903274536133, -2.6860437393188477, -0.13204467296600342, -0.21214675903320312, -0.019663872197270393, -3.0367610454559326, -0.06257516890764236, -0.163258895277977, -0.8091945052146912, -8.666139910928905e-05, -0.11053316295146942, -0.05728072673082352, -0.004237363580614328, -1.7939611673355103, -4.732496745418757e-05, -0.007380718365311623, -0.004395703785121441, -0.025996295735239983, -0.006215527653694153, -0.019739145413041115, -8.22540732769994e-06, -5.07818695041351e-05, -0.0001928620331455022, -1.5497195136049413e-06, -4.6967357775429264e-05, -0.00293990527279675, -0.03294898197054863, -6.079655122448457e-06, -1.3470558769768104e-05, -0.007694605737924576, -0.0139600969851017, -1.0083613395690918, -0.0002613918040879071, -2.012582778930664, -0.0001110968878492713, -0.006977240554988384, -0.011691738851368427, -1.1028492450714111, -0.01450012344866991, -0.3185957372188568, -6.318072337307967e-06, -0.005579138174653053, -0.006843225099146366, -0.00719409016892314, -2.531088352203369, -0.00453586271032691, -6.90197994117625e-05, -0.06782680004835129, -2.2241578102111816, -0.00018571082910057157, -0.0014184186002239585, -0.6325272917747498, -0.0919932872056961, -0.3541830778121948, -0.0046161990612745285, -2.235322952270508, -5.722029527532868e-06, -3.4570634852570947e-06, -0.15073591470718384, -0.01940259337425232, -0.0015026956098154187, -0.45326676964759827, -0.046354036778211594, -0.00019178935326635838, -0.00010311071673640981, -0.13669094443321228, -1.2369911670684814, -1.6889002323150635, -1.2391533851623535, -0.326061487197876, -0.0014396075857803226, -2.756251811981201, -0.0015266203554347157, -0.0023353227879852057, -0.3299359381198883, -0.060292910784482956, -0.00020430385484360158, -0.00294263893738389, -0.2804948389530182, -0.0007052318542264402, -1.6840192079544067, -2.1065239906311035, -0.6237838268280029, -0.0005103239673189819, -0.00038378025055862963, -0.06341677904129028, -0.08646532148122787, -0.23974502086639404, -0.013601014390587807, -0.013128037564456463, -0.00471646199002862, -0.002483856864273548, -0.012409262359142303, -0.012691090814769268, -2.6225699912174605e-05, -0.01928531751036644, -0.3990724980831146, -0.11586686223745346, -0.029592569917440414, -0.007610612083226442, -0.997314989566803, -0.00045015214709565043, -0.0035391333512961864, -0.08399063348770142, -0.004309415351599455, -0.04184944927692413, -0.003481994615867734, -0.00785535667091608, -0.009392596781253815, -0.00058466981863603, -0.0012707976857200265, -0.04654817655682564, -0.0009696549386717379, -1.0591516494750977, -0.46745604276657104, -0.338969349861145, -2.114102363586426, -0.2793748676776886, -0.003454315010458231, -1.856630802154541, -0.030550844967365265, -0.9271784424781799, -0.01049947738647461, -0.031608808785676956, -0.17091813683509827, -0.0068135070614516735, -0.006277367472648621, -0.40411242842674255, -0.014562040567398071, -0.0005583396414294839, -1.1324817933200393e-05, -2.145764938177308e-06, -0.0008735416340641677, -2.5152843591058627e-05, -0.0023082061670720577, -0.0030053947120904922, -0.002982337260618806, -0.0036563703324645758, -0.0006244616815820336, -0.000795882020611316, -0.0014846028061583638, -0.00032729512895457447, -0.0005946775199845433, -0.14138640463352203, -0.0009147512027993798, -4.088794958079234e-05, -2.7418097943154862e-06, -1.1920928244535389e-07, -0.0004119024670217186, -6.794906312279636e-06, -0.004204125609248877, -9.417489309271332e-06, -0.00038413776201196015, -0.0002512616047170013, -0.0049233632162213326, -0.0018196230521425605, -0.001732040662318468, -0.012819381430745125, -0.0031392124947160482, -0.0006235085893422365, -0.0007626485894434154, -0.04569440707564354, -0.0005237876321189106, -3.8742269680369645e-05, -3.2186455882765586e-06, 0.0, -0.00011097769311163574, -1.0490362910786644e-05, -0.0011129144113510847, -0.02793215587735176, -1.287886142730713, -0.00488445395603776, -0.07237892597913742, -0.00014304091746453196, -0.0006101653561927378, -0.1795189380645752, -0.0010405131615698338, -0.2242441475391388, -0.0046833585947752, -0.6152647137641907, -0.01309226918965578, -0.18091075122356415], "finish_reason": "stop"}], "metrics": {"energy": 236.9416714735032, "energy_per_token": 1.2603280397526766, "time": 8.203992, "time_per_token": 0.04363825531914893}}
{"outputs": [{"text": "pd.options.mode.chained_assignment = None  # disable pandas chained assignment\n\n    try:\n        df = pd.read_excel(excel_file_path + file_name, sheet_name=0)\n    except FileNotFoundError:\n        return \"File not found\"\n    except AttributeError:  # For Excel version prior to 2007\n        df = pd.read_excel(excel_file_path + file_name, sheet_name=0)\n\n    if column_name not in df.columns:\n        return \"Column not found\"\n\n    data = df[column_name].values\n    if not data:\n        return \"No data found\"\n\n    mean = np.mean(data)\n    median = np.median(data)\n    std_dev = np.std(data)\n    return {'mean': mean, 'median': median, 'std_dev': std_dev}", "tokens": ["pd", ".", "options", ".", "mode", ".", "ch", "ained", "_", "ass", "ignment", " =", " None", "  ", "#", " disable", " pandas", " ch", "ained", " assignment", "\n", "\n", "    ", "try", ":", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ",", " sheet", "_", "name", "=", "0", ")", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "return", " \"", "File", " not", " found", "\"", "\n", "    ", "except", " Attribute", "Error", ":", "  ", "#", " For", " Excel", " version", " prior", " to", " ", "2", "0", "0", "7", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ",", " sheet", "_", "name", "=", "0", ")", "\n", "\n", "    ", "if", " column", "_", "name", " not", " in", " df", ".", "columns", ":", "\n", "        ", "return", " \"", "Column", " not", " found", "\"", "\n", "\n", "    ", "data", " =", " df", "[", "column", "_", "name", "]", ".", "values", "\n", "    ", "if", " not", " data", ":", "\n", "        ", "return", " \"", "No", " data", " found", "\"", "\n", "\n", "    ", "mean", " =", " np", ".", "mean", "(", "data", ")", "\n", "    ", "med", "ian", " =", " np", ".", "med", "ian", "(", "data", ")", "\n", "    ", "std", "_", "dev", " =", " np", ".", "std", "(", "data", ")", "\n", "    ", "return", " {'", "mean", "':", " mean", ",", " '", "med", "ian", "':", " median", ",", " '", "std", "_", "dev", "':", " std", "_", "dev", "}", "\n", "\n", "def"], "logprobs": [-4.48441219329834, -0.04791564866900444, -1.5047129392623901, -0.0041772969998419285, -0.9340847730636597, -0.001929566147737205, -0.03957560658454895, -0.00528118759393692, -6.878139538457617e-05, -0.004573480691760778, -0.0005695389700122178, -0.01901458203792572, -0.13814029097557068, -0.8888301253318787, -0.0006569849792867899, -3.6871562004089355, -1.120752215385437, -1.0822780132293701, -0.035603247582912445, -0.14201512932777405, -0.2339697778224945, -1.1616183519363403, -0.0004987664869986475, -1.5360581874847412, -0.0005671561229974031, -0.0058647929690778255, -0.01946140080690384, -0.8204002380371094, -0.02025258168578148, -0.015774818137288094, -7.83174327807501e-05, -0.04230961203575134, -0.00016366096679121256, -0.0015259062638506293, -0.0001705739414319396, -0.015039036981761456, -0.3913809061050415, -1.2516897186287679e-05, -3.313963316031732e-05, -0.00023505308490712196, -6.90197994117625e-05, -0.00010013079008786008, -0.04785894602537155, -0.09198448061943054, -2.5152843591058627e-05, -3.0517112463712692e-05, -0.4721750020980835, -0.9631304144859314, -0.000522357877343893, -0.0002119316632160917, -0.2633771002292633, -1.444455862045288, -0.7545448541641235, -0.050748568028211594, -0.7472736239433289, -0.002460430609062314, -0.08128530532121658, -1.2159273865108844e-05, -3.2186455882765586e-06, -0.23309826850891113, -0.010908965021371841, -0.0016989572905004025, -2.933819055557251, -1.9783480167388916, -0.6881483197212219, -0.3900613486766815, -0.017348093912005424, -0.516485869884491, -0.015591979026794434, -0.9956707954406738, -0.36287662386894226, -3.3142852783203125, -1.0967194612021558e-05, -0.07427803426980972, -2.388291835784912, -0.0007197650265879929, -4.88536262512207, -3.7618534564971924, -2.716571807861328, -2.703765869140625, -0.024911561980843544, -0.17432764172554016, -0.07764265686273575, -0.027954179793596268, -0.46456268429756165, -0.2919335663318634, -0.33085232973098755, -0.003450394608080387, -0.6340245008468628, -0.012166808359324932, -0.011697512120008469, -0.00020668754586949944, -0.03775860741734505, -0.0016615884378552437, -0.008073789067566395, -3.93382906622719e-05, -0.000895933189895004, -0.016255341470241547, -0.0001658063702052459, -7.152555099310121e-07, -0.0003400462737772614, -9.810443589231e-05, -2.4914430468925275e-05, -0.007333739195019007, -0.003932719584554434, -6.6756979322235566e-06, -1.7046782886609435e-05, -0.2872906029224396, -0.5060459971427917, -0.01299731433391571, -0.006593851372599602, -0.11580007523298264, -0.14850495755672455, -1.2195408344268799, -0.05273304507136345, -0.5935322642326355, -0.000985136954113841, -1.2975313663482666, -0.3119523525238037, -0.0003625689132604748, -0.0004817279113922268, -0.12582431733608246, -2.253030106658116e-05, -0.05084804818034172, -0.1889270693063736, -0.038960788398981094, -0.010686786845326424, -0.02575746178627014, -0.0008280424517579377, -0.1880737543106079, -0.10882297903299332, -0.19466590881347656, -0.08395906537771225, -0.012213443405926228, -0.131391242146492, -0.003739627543836832, -0.1949896514415741, -0.0003796095261350274, -2.639686107635498, -0.13117766380310059, -0.12888729572296143, -0.04771779477596283, -0.0029721155297011137, -2.4676019165781327e-05, -2.622600959512056e-06, -0.0014826982514932752, -1.1801729202270508, -0.9684557318687439, -0.19032824039459229, -0.7951057553291321, -1.8595553636550903, -1.7380084991455078, -0.22270934283733368, -0.27853184938430786, -0.25030848383903503, -0.0005527398898266256, -0.03764495626091957, -0.12800654768943787, -0.56939297914505, -0.04372613504528999, -0.4586333632469177, -0.14115010201931, -0.007242259569466114, -0.1284545212984085, -0.00033241944038309157, -0.5160964131355286, -0.1501975953578949, -0.2041172832250595, -1.9073304429184645e-05, -0.05065406113862991, -0.0004503904783632606, -0.011103035882115364, -0.0086353225633502, -0.033001579344272614, -0.005287709180265665, -0.009188390336930752, -0.003275745315477252, -0.0018234307644888759, -0.01730251871049404, -0.0003457663697190583, -0.0005505952867679298, -6.639736966462806e-05, -0.0007360848248936236, -0.0021588134113699198, -0.0009235645993612707, -0.005327314604073763, -0.018307168036699295, -0.04681394621729851, -0.06151910498738289, -0.006150959059596062, -0.001207337831147015, -0.01796310767531395, -0.00015948931104503572, -0.0022833484690636396, -0.00021050144277978688, -0.0009480987209826708, -0.07402865588665009, -0.01081639714539051, -1.5386244058609009, -0.5153689384460449, -1.0653291940689087, -0.0033001031260937452, -0.0009666775586083531, -0.12242859601974487, -0.00047839165199548006, -0.014711589552462101, -0.0003777029050979763, -8.606540359323844e-05, -0.00011431517486926168, -0.0005397531786002219, -9.667406266089529e-05, -0.0039026776794344187, -0.003271230263635516, -0.0031395689584314823, -0.0004758894501719624, -0.00011574551899684593, -0.01324286125600338, -0.0002851079625543207, -9.775113539944869e-06, -0.21886970102787018, -0.33224397897720337, -0.014040501788258553, -0.24314548075199127], "finish_reason": "stop"}], "metrics": {"energy": 245.1637100601196, "energy_per_token": 1.0993888343503122, "time": 9.893035, "time_per_token": 0.04436338565022421}}
{"outputs": [{"text": "try:\n        df = pd.read_excel(excel_file_path + file_name,\n                           sheet_name=column_name, index_col=None)\n    except FileNotFoundError as e:\n        raise FileNotFoundError(\"File not found at given path\")\n    except Exception as e:\n        print(e)\n        raise ValueError(\"Specified column not found in Excel file\")\n\n    df = df.iloc[:, [0]]\n    df.reset_index(inplace=True)\n    mean, median, std_dev = np.mean(df['Sales']), np.median(df['Sales']), np.std(df['Sales'])\n\n    return {\"mean\": mean, \"median\": median, \"std_dev\": std_dev}", "tokens": ["try", ":", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ",", "\n", "                ", "           ", "sheet", "_", "name", "=", "column", "_", "name", ",", " index", "_", "col", "=", "None", ")", "\n", "    ", "except", " File", "NotFound", "Error", " as", " e", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "File", " not", " found", " at", " given", " path", "\"", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "e", ")", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Spec", "ified", " column", " not", " found", " in", " Excel", " file", "\"", ")", "\n", "\n", "    ", "df", " =", " df", ".", "il", "oc", "[:", ",", " [", "0", "]]", "\n", "    ", "df", ".", "reset", "_", "index", "(", "in", "place", "=", "True", ")", "\n", "    ", "mean", ",", " median", ",", " std", "_", "dev", " =", " np", ".", "mean", "(", "df", "['", "S", "ales", "'])", ",", " np", ".", "med", "ian", "(", "df", "['", "S", "ales", "'])", ",", " np", ".", "std", "(", "df", "['", "S", "ales", "'])", "\n", "\n", "    ", "return", " ", "{\"", "mean", "\":", " mean", ",", " \"", "med", "ian", "\":", " median", ",", " \"", "std", "_", "dev", "\":", " std", "_", "dev", "}", "\n", "\n", "def"], "logprobs": [-1.7448699474334717, -0.0009943069890141487, -0.005875577684491873, -0.01621909812092781, -0.9617505073547363, -0.01848248764872551, -0.018168224021792412, -8.368142152903602e-05, -0.03592127934098244, -0.000120751719805412, -0.0017589349299669266, -0.00017808281700126827, -0.015213875100016594, -0.39336735010147095, -7.867782187531702e-06, -5.2689116273541003e-05, -0.00027223696815781295, -0.00010656742961145937, -0.00012206286191940308, -0.05966499075293541, -0.10524318367242813, -4.1960789531003684e-05, -3.099393507000059e-05, -0.6697244048118591, -2.867720603942871, -0.015231486409902573, -0.0833124965429306, -0.7403713464736938, -0.0020103498827666044, -0.00023123928986024112, -0.30913254618644714, -2.0576117038726807, -0.00014244495832826942, -9.321732068201527e-05, -0.40277203917503357, -1.061257004737854, -0.004130523186177015, -0.0077512674033641815, -0.02336749993264675, -1.4079005718231201, -0.409164696931839, -0.03320928290486336, -0.8580151200294495, -0.0027513764798641205, -0.08115330338478088, -7.748573807475623e-06, -2.7418097943154862e-06, -1.6575528383255005, -0.5074782371520996, -0.0020139189437031746, -0.0033999038860201836, -0.0013108003186061978, -0.727875828742981, -0.34691691398620605, -0.0006451908848248422, -0.0001998939987970516, -0.1722668707370758, -1.9678970575332642, -1.267234444618225, -0.2602722942829132, -0.011923234909772873, -1.7872134447097778, -3.278970956802368, -0.0898653119802475, -1.3332934379577637, -0.04420106112957001, -0.0578484982252121, -0.44756588339805603, -0.16550429165363312, -1.6588056087493896, -0.049078792333602905, -0.012666371650993824, -0.003411427838727832, -0.006356853060424328, -0.0008809261489659548, -2.0723114013671875, -0.04116533324122429, -0.9126191139221191, -0.06233752518892288, -0.0061543951742351055, -0.5364927053451538, -0.47157320380210876, -0.3051471412181854, -3.9219088648678735e-05, -0.052720945328474045, -0.18533116579055786, -2.2129368782043457, -0.008604239672422409, -0.1026732474565506, -0.8395804762840271, -0.06719735264778137, -0.25138941407203674, -0.8207982778549194, -0.0606001615524292, -0.12558577954769135, -0.0021652367431670427, -0.0024176198057830334, -0.8015815615653992, -0.0014659145381301641, -3.1762609481811523, -0.7662681937217712, -0.03686432167887688, -0.6217159032821655, -1.873548150062561, -6.305972783593461e-05, -0.05169109255075455, -0.021437127143144608, -2.6214897632598877, -0.24794910848140717, -0.11564112454652786, -0.17889592051506042, -0.23013703525066376, -2.306783676147461, -1.183670997619629, -1.5881173610687256, -8.344646857949556e-07, -0.0004049911512993276, -0.044878773391246796, -1.7501723766326904, -4.291525328881107e-06, -0.0054468316957354546, -0.0020705468486994505, -0.6417930722236633, -0.021796906366944313, -0.23484119772911072, -1.7691810131072998, -2.073551654815674, -0.059780657291412354, -0.03731989115476608, -0.05056328698992729, -0.2172345221042633, -0.01795678585767746, -0.02564917877316475, -0.9100441336631775, -0.00031537804170511663, -0.2822670042514801, -0.003648174926638603, -0.02963990345597267, -1.3028686046600342, -0.18032245337963104, -0.0007612191257067025, -0.058657556772232056, -0.0015285247936844826, -0.03315046802163124, -0.00030858523678034544, -0.0036032767966389656, -0.00014184899919200689, -0.0005840741214342415, -0.0398748517036438, -0.011043616570532322, -0.00011312322021694854, -9.417489309271332e-06, -0.002109446795657277, -0.0006762839620932937, -0.059588395059108734, -0.0003582789213396609, -0.005045420024544001, -0.0009675112669356167, -0.01905832625925541, -0.006128329783678055, -9.941560711013153e-05, -8.106198947643861e-06, -0.023814009502530098, -0.006829490885138512, -1.3992077112197876, -0.00030429501202888787, -0.3683978021144867, -1.7668588161468506, -0.00022265815641731024, -0.014867340214550495, -0.0035961500834673643, -0.14932473003864288, -0.001723829424008727, -0.04397383704781532, -0.000927256653085351, -0.0001560327800689265, -0.00028391621890477836, -0.00135318236425519, -0.00015198028995655477, -0.0067192562855780125, -0.012917413376271725, -0.005240513011813164, -0.0011638780124485493, -0.00040928093949332833, -0.020218469202518463, -0.00021884430316276848, -3.814689989667386e-06, -0.3507658839225769, -0.31618279218673706, -0.009730645455420017, -0.2337600439786911], "finish_reason": "stop"}], "metrics": {"energy": 242.94962411499017, "energy_per_token": 1.2719875608114668, "time": 8.411524, "time_per_token": 0.044039392670157065}}
{"outputs": [{"text": "# Check for valid input file path\n    if not os.path.isdir(excel_file_path):\n        raise FileNotFoundError(\"Directory not found.\")\n\n    # Check for valid column name\n    column_name_list = ['sales', 'total', 'price', 'profit']\n    if column_name.lower() not in column_name_list:\n        raise ValueError(\"Column name must be one of 'sales', 'total', 'price', or 'profit'\")\n\n    # Check if the Excel file exists\n    if not os.path.exists(excel_file_path + file_name):\n        raise FileNotFoundError(\"File not found.\")\n\n    # Load the Excel file as a pandas DataFrame\n    df = pd.read_excel(excel_file_path + file_name, header=0)\n\n    # Select the column to calculate the stats for\n    column = df[column_name]\n\n    # Calculate the mean, median, and standard deviation of the column\n    mean = np.mean(column)\n    median =", "tokens": ["#", " Check", " for", " valid", " input", " file", " path", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "ex", "cel", "_", "file", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " for", " valid", " column", " name", "\n", "    ", "column", "_", "name", "_", "list", " =", " ['", "sales", "'", ",", " '", "total", "'", ",", " '", "price", "'", ",", " '", "profit", "']", "\n", "    ", "if", " column", "_", "name", ".", "lower", "()", " not", " in", " column", "_", "name", "_", "list", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Column", " name", " must", " be", " one", " of", " '", "sales", "'", ",", " '", "total", "'", ",", " '", "price", "'", ",", " or", " '", "profit", "'", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " Excel", " file", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "File", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "#", " Load", " the", " Excel", " file", " as", " a", " pandas", " Data", "Frame", "\n", "    ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ",", " header", "=", "0", ")", "\n", "\n", "    ", "#", " Select", " the", " column", " to", " calculate", " the", " stats", " for", "\n", "    ", "column", " =", " df", "[", "column", "_", "name", "]", "\n", "\n", "    ", "#", " Calculate", " the", " mean", ",", " median", ",", " and", " standard", " deviation", " of", " the", " column", "\n", "    ", "mean", " =", " np", ".", "mean", "(", "column", ")", "\n", "    ", "med", "ian", " ="], "logprobs": [-1.9811408519744873, -1.3575598001480103, -3.0608668327331543, -2.511641025543213, -2.0160882472991943, -2.8493053913116455, -0.8156565427780151, -0.7638639807701111, -0.003775256220251322, -0.10981649905443192, -0.1038985475897789, -0.10155726224184036, -2.3007127310847864e-05, -0.0003636414185166359, -0.0033623608760535717, -0.8035223484039307, -0.341260701417923, -0.0009115354623645544, -0.025032365694642067, -2.038458114839159e-05, -8.940656698541716e-06, -0.0005236684810370207, -6.3774932641536e-05, -4.184158387943171e-05, -0.13562177121639252, -0.014534078538417816, -0.0014788892585784197, -0.10611944645643234, -0.10447010397911072, -0.0002138386043952778, -2.8609820219571702e-05, -0.290936678647995, -1.0223972797393799, -2.457376003265381, -0.7773032784461975, -0.012170459143817425, -1.4679324626922607, -0.33136093616485596, -0.001279012649320066, -0.002595034893602133, -0.3036431074142456, -0.0011807858245447278, -0.11812089383602142, -0.512245237827301, -0.2785284221172333, -0.09560850262641907, -2.2055819034576416, -0.06926639378070831, -0.17134006321430206, -0.0007921895012259483, -3.421626091003418, -0.15431708097457886, -1.0450984239578247, -1.4031727313995361, -0.9045229554176331, -0.0056998105719685555, -1.3336257934570312, -3.6926827430725098, -0.09959708899259567, -0.0012697261990979314, -0.056001197546720505, -2.883206844329834, -0.846571683883667, -0.00037102968781255186, -0.00957881473004818, -2.8681392669677734, -0.4695586562156677, -0.0024942022282630205, -0.019032126292586327, -3.105132818222046, -1.1592037677764893, -0.020485257729887962, -0.015927352011203766, -0.05267932638525963, -0.1824079155921936, -0.0002885640424210578, -0.0003432638186495751, -0.20658832788467407, -0.018777117133140564, -0.0010336062405258417, -0.029641754925251007, -2.6940935640595853e-05, -0.0848914086818695, -9.298280929215252e-06, -2.7894584491150454e-05, -0.0002162222663173452, -6.437280717364047e-06, -0.008507557213306427, -0.002553894417360425, -0.001189835020340979, -0.043871842324733734, -0.009178586304187775, -2.2649508537142538e-05, -0.04896051809191704, -0.3016904294490814, -0.7135289311408997, -0.17480388283729553, -2.32344388961792, -0.013027319684624672, -0.33525025844573975, -0.0011379201896488667, -2.107452154159546, -0.031811028718948364, -0.00988150853663683, -0.00773222278803587, -0.009640092961490154, -0.009126611985266209, -0.0036126605700701475, -0.0022986913099884987, -0.016412492841482162, -0.026583842933177948, -0.0016558758215978742, -0.05331458896398544, -0.28188490867614746, -0.0019377756398171186, -0.0006092122639529407, -0.027097607031464577, -2.120474338531494, -0.001279131742194295, -0.0017873755423352122, -0.03387316316366196, -0.0011472079204395413, -0.26904964447021484, -2.6452975273132324, -1.3793673515319824, -1.0021027326583862, -1.1176564693450928, -0.01574348658323288, -0.08137761801481247, -0.40523016452789307, -0.0017685738857835531, -0.7781020998954773, -0.06597152352333069, -0.010809439234435558, -0.00010322991875000298, -0.0010669498005881906, -0.009180594235658646, -1.0187208652496338, -0.00784613098949194, -0.16403338313102722, -5.876845170860179e-05, -0.00012396997772157192, -0.0002609150833450258, -1.1444026313256472e-05, -5.543078441405669e-05, -0.13457439839839935, -0.20629188418388367, -3.099393507000059e-05, -2.729855441430118e-05, -0.022193051874637604, -0.002596580656245351, -0.0011448265286162496, -0.02890186570584774, -0.013263801112771034, -0.0014669859083369374, -6.341733387671411e-05, -0.02316414751112461, -0.10093598067760468, -0.5477663278579712, -0.0666205957531929, -0.0017924923449754715, -0.14789047837257385, -0.019556095823645592, -0.00034254882484674454, -0.0006455483380705118, -0.01685754582285881, -0.0015274535398930311, -0.21153362095355988, -1.7010499238967896, -0.3751343786716461, -0.3391374945640564, -0.0878668874502182, -2.0709571838378906, -0.1098116934299469, -0.6579622030258179, -0.7171758413314819, -0.0031980343628674746, -0.05121178925037384, -0.0008046964649111032, -0.2654913365840912, -0.009901456534862518, -0.005654411856085062, -1.5616295058862306e-05, -0.022858690470457077, -1.3947389561508317e-05, -0.0005856229108758271, -0.0001062098381225951, -0.00485657574608922, -0.059650275856256485, -2.0265373677830212e-05, -8.34461570775602e-06, -2.932505594799295e-05, -5.960462772236497e-07, -3.4570634852570947e-06, -0.011745817959308624, -0.0034623933024704456, -2.3841830625315197e-06, -2.264974000354414e-06, -0.34890687465667725, -1.8812742233276367, -0.04345976933836937, -1.095223307609558, -0.9159482717514038, -0.02688595838844776, -0.12762321531772614, -0.000439428084064275, -0.06054002046585083, -2.8172354698181152, -0.07552921026945114, -0.6344330906867981, -1.4995594024658203, -1.864039421081543, -1.1587998867034912, -1.6890056133270264, -0.8761132955551147, -0.0645192414522171, -0.0006479309522546828, -0.7034452557563782, -0.3245895504951477, -0.04031851887702942, -0.04996313154697418, -0.011177306063473225, -0.0004644507134798914, -5.960446742392378e-06, -0.8833639621734619, -0.05693856254220009, -0.05225525423884392, -0.00035720644518733025, -0.0546281524002552, -0.31015580892562866, -0.16786158084869385, -1.2191169261932373, -0.16139359772205353, -0.004415999166667461, -0.010545010678470135, -0.02398894913494587, -0.028432132676243782, -0.00695013115182519, -2.0522656440734863, -0.01607787050306797, -0.3190055787563324, -0.20166338980197906, -0.0006188622792251408, -0.12720121443271637, -0.12425360828638077, -1.2183868885040283, -1.585470999998506e-05, -0.0426611602306366, -0.0005322470096871257, -0.001855796086601913, -0.029981473460793495, -0.006893068552017212, -0.0022515917662531137, -0.0015673269517719746, -0.0016061275964602828, -0.0009273757459595799], "finish_reason": "length"}], "metrics": {"energy": 279.7167611188888, "energy_per_token": 1.0926435981206595, "time": 11.558513, "time_per_token": 0.04515044140625}}
{"outputs": [{"text": "stats = {'mean': 0, 'median': 0, 'std_dev': 0}\n    file_path = os.path.join(excel_file_path, file_name)\n    if not os.path.exists(file_path):\n        raise FileNotFoundError('The Excel file does not exist')\n    df = pd.read_excel(file_path)\n    column = df[column_name]\n    stats['mean'] = column.mean()\n    stats['median'] = column.median()\n    stats['std_dev'] = column.std_dev()\n    return stats", "tokens": ["stats", " =", " {'", "mean", "':", " ", "0", ",", " '", "med", "ian", "':", " ", "0", ",", " '", "std", "_", "dev", "':", " ", "0", "}", "\n", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "ex", "cel", "_", "file", "_", "path", ",", " file", "_", "name", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "file", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "The", " Excel", " file", " does", " not", " exist", "')", "\n", "    ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "file", "_", "path", ")", "\n", "    ", "column", " =", " df", "[", "column", "_", "name", "]", "\n", "    ", "stats", "['", "mean", "']", " =", " column", ".", "mean", "()", "\n", "    ", "stats", "['", "med", "ian", "']", " =", " column", ".", "med", "ian", "()", "\n", "    ", "stats", "['", "std", "_", "dev", "']", " =", " column", ".", "std", "_", "dev", "()", "\n", "    ", "return", " stats", "\n", "\n", "if"], "logprobs": [-1.7696254253387451, -0.06074713170528412, -2.050956964492798, -0.013940464705228806, -0.003310440108180046, -0.6313089728355408, -0.00558470981195569, -0.187186598777771, -0.014509170316159725, -0.002935150871053338, -0.00044764988706447184, -0.00016425691137555987, -0.008275977335870266, -0.0014260371681302786, -0.0014528206083923578, -0.0035306992940604687, -0.015424367971718311, -0.002873223042115569, -0.0008287570672109723, -0.0004211969207972288, -0.007725717034190893, -0.003147174371406436, -0.018846139311790466, -0.014871098101139069, -0.3582647740840912, -3.2207865715026855, -0.09304254502058029, -0.0894676223397255, -0.012779600918293, -0.828654944896698, -0.0001174142598756589, -0.0019892919808626175, -0.016071652993559837, -0.03044203855097294, -0.004177415743470192, -0.03641107305884361, -1.3351351299206726e-05, -2.1457441107486375e-05, -0.0002611534437164664, -1.311301275563892e-06, -2.13382354559144e-05, -0.003271824214607477, -0.03467824310064316, -1.2397689715726301e-05, -4.255681051290594e-05, -0.002344718435779214, -0.007234448567032814, -0.2583800256252289, -0.7257121205329895, -0.21098671853542328, -0.010304464027285576, -8.201262971851975e-05, -0.00039188333903439343, -0.00217106519266963, -0.3322513997554779, -0.0003163314249832183, -0.004790021106600761, -3.2305197237292305e-05, -0.00013302871957421303, -0.006512489635497332, -0.015384338796138763, -0.0019234981155022979, -0.03796635940670967, -0.009923292323946953, -0.00015245705435518175, -8.928377064876258e-05, -1.4800958633422852, -1.6862072944641113, -0.5748365521430969, -0.004135865718126297, -0.07966435700654984, -0.0005818104837089777, -0.0022952421568334103, -2.3969674110412598, -0.0012048374628648162, -0.5322877168655396, -0.6198740005493164, -0.008028734475374222, -0.012043262831866741, -0.00019762947340495884, -0.00979510135948658, -2.9682672902708873e-05, -0.001176618505269289, -7.343022298300639e-05, -0.0003156163729727268, -0.017987696453928947, -0.0006245807744562626, -0.0021415650844573975, -1.104757308959961, -0.017126640304923058, -0.07728178799152374, -1.3701661825180054, -0.2907746434211731, -0.027899926528334618, -0.07777479290962219, -0.002287511248141527, -5.507317473529838e-05, -4.887569048150908e-06, -0.000910106289666146, -0.09645882993936539, -0.05598744377493858, -0.5422916412353516, -0.036012474447488785, -0.008401526138186455, -9.333651541965082e-05, -0.0254682544618845, -0.4177902638912201, -0.004218251910060644, -0.004489699378609657, -0.0022169791627675295, -0.008052267134189606, -0.0017765468219295144, -0.021800989285111427, -0.0006982034537941217, -0.005645758472383022, -2.3245540432981215e-05, -2.5987286790041253e-05, -0.0007123793475329876, -0.10495224595069885, -0.008551644161343575, -0.004595552105456591, -6.4490144723095e-05, -0.0006399490521289408, -0.0014223469188436866, -0.0009677494526840746, -0.013127919286489487, -0.0009319015080109239, -0.0016231469344347715, -0.00033563701435923576, -0.0003629264247138053, -8.082063141046092e-05, -0.0014918637461960316, -0.03348173573613167, -0.0008116050157696009, -0.002431414555758238, -2.2158706188201904, -0.0159450676292181, -0.015678590163588524, -0.008813883177936077, -0.041639987379312515, -0.020337620750069618, -0.003386716591194272, -0.49309399724006653, -0.015520501881837845, -2.9072725772857666], "finish_reason": "stop"}], "metrics": {"energy": 179.35051711845387, "energy_per_token": 1.2369001180583026, "time": 6.3092203, "time_per_token": 0.04351186413793103}}
{"outputs": [{"text": "import pandas as pd\n    import numpy as np\n    import os\n\n    excel_file_path = os.path.abspath(excel_file_path)\n\n    if not os.path.exists(excel_file_path):\n        raise FileNotFoundError(f\"File not found at {excel_file_path}\")\n\n    file_name = os.path.splitext(file_name)[0]\n\n    if file_name.endswith(\".xlsx\") or file_name.endswith(\".xlsm\") or file_name.endswith(\".xlsb\") or file_name.endswith(\".xls\"):\n        print(\"File found\")\n        df = pd.read_excel(excel_file_path + '.xlsx')\n    elif file_name.endswith(\".xlsm\"):\n        print(\"File found\")\n        df = pd.read_excel(excel_file_path + '.xlsm')\n    elif file_name.endsw", "tokens": ["import", " pandas", " as", " pd", "\n", "    ", "import", " numpy", " as", " np", "\n", "    ", "import", " os", "\n", "\n", "    ", "ex", "cel", "_", "file", "_", "path", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "ex", "cel", "_", "file", "_", "path", ")", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "ex", "cel", "_", "file", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "File", " not", " found", " at", " {", "ex", "cel", "_", "file", "_", "path", "}\"", ")", "\n", "\n", "    ", "file", "_", "name", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "name", ")[", "0", "]", "\n", "\n", "    ", "if", " file", "_", "name", ".", "end", "sw", "ith", "(", "\"", ".", "x", "ls", "x", "\"", ")", " or", " file", "_", "name", ".", "end", "sw", "ith", "(", "\"", ".", "xl", "sm", "\"", ")", " or", " file", "_", "name", ".", "end", "sw", "ith", "(", "\"", ".", "x", "ls", "b", "\"", ")", " or", " file", "_", "name", ".", "end", "sw", "ith", "(", "\"", ".", "x", "ls", "\"", "):", "\n", "        ", "print", "(", "\"", "File", " found", "\"", ")", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " '", ".", "x", "ls", "x", "')", "\n", "    ", "elif", " file", "_", "name", ".", "end", "sw", "ith", "(", "\"", ".", "xl", "sm", "\"", "):", "\n", "        ", "print", "(", "\"", "File", " found", "\"", ")", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " '", ".", "xl", "sm", "')", "\n", "    ", "elif", " file", "_", "name", ".", "end", "sw"], "logprobs": [-3.597031354904175, -0.4206768274307251, -0.036820199340581894, -0.007506852969527245, -0.009426371194422245, -0.02781425230205059, -0.04459606856107712, -0.1088719442486763, -0.008913371711969376, -0.0007316772826015949, -0.0007331067463383079, -0.1443444937467575, -0.0758708268404007, -0.01877419278025627, -0.0036791746970266104, -0.36170098185539246, -0.001278536394238472, -2.166954517364502, -0.0026347467210143805, -0.005412685684859753, -0.19699810445308685, -0.1481708437204361, -0.03995995968580246, -0.06490317732095718, -0.30149978399276733, -0.00012218205665703863, -0.016660720109939575, -0.00573216937482357, -1.3300578594207764, -2.2172682292875834e-05, -2.169585604860913e-05, -0.0070052966475486755, -0.12203331291675568, -1.1920922133867862e-06, -2.7894584491150454e-05, -0.00012313561455812305, -3.266281055402942e-05, -4.482168878894299e-05, -0.029429372400045395, -0.07828442007303238, -0.9826378226280212, -0.0005190217634662986, -0.46385204792022705, -0.10574393719434738, -0.015302867628633976, -6.6756979322235566e-06, -0.0003953390696551651, -0.0009288049186579883, -0.3565487861633301, -0.000504723924677819, -0.01255571935325861, -1.4305104514278355e-06, -6.198863957251888e-06, -4.8636207793606445e-05, -1.9788545614574105e-05, -1.490105023549404e-05, -0.06894277036190033, -0.00957373809069395, -0.003192449454218149, -0.05185601860284805, -0.0076294224709272385, -7.033100700937212e-05, -5.543078441405669e-05, -0.20306181907653809, -0.7386071681976318, -0.2126319408416748, -1.1797350645065308, -0.47997891902923584, -0.010023260489106178, -0.6658617854118347, -0.6666542887687683, -0.00687755923718214, -3.4450891689630225e-05, -3.099436753473128e-06, -0.0007217901293188334, -0.00014423283573705703, -8.4638240878121e-06, -0.32276976108551025, -0.0002493547508493066, -0.0026934794150292873, -0.058114320039749146, -0.0004979324294254184, -2.655362367630005, -0.2874218821525574, -1.2906986474990845, -0.07947797328233719, -0.39507725834846497, -5.924526340095326e-05, -0.001474127871915698, -0.005307749379426241, -2.4284563064575195, -2.169585604860913e-05, -1.311301275563892e-06, -0.0007951673469506204, -0.28690871596336365, -3.731181277544238e-05, -8.272782724816352e-05, -0.022126590833067894, -0.00498789269477129, -0.003831784473732114, -0.14839757978916168, -0.6167615056037903, -0.00034517052699811757, -2.6475963592529297, -1.8692615032196045, -0.0001538873475510627, -0.0020060669630765915, -1.0522230863571167, -0.6551423072814941, -0.000200609109015204, 0.0, -0.8190637230873108, -0.026781627908349037, -0.17788323760032654, -0.15172943472862244, -0.0012449617497622967, -0.7359561920166016, -0.000696654780767858, -1.2699987888336182, -0.10088953375816345, -0.014590354636311531, -0.0001778444420779124, -5.1973900554003194e-05, -0.0008151783840730786, -0.0015892268856987357, -3.6954195820726454e-05, -2.3841855067985307e-07, -0.005336207803338766, -0.004687036853283644, -0.012452119030058384, -1.276915431022644, -0.04015832394361496, -0.0011329191038385034, -0.6794353127479553, -0.03944336622953415, -0.04459914565086365, -4.6132929128361866e-05, -2.4199192921514623e-05, -0.0005359405186027288, -0.0010038343025371432, -6.472854875028133e-05, -2.3841855067985307e-07, -0.0039031526539474726, -0.012212265282869339, -0.008560508489608765, -0.03843392804265022, -0.3735305666923523, -1.4767240285873413, -0.0004514628672040999, -0.762920618057251, -0.04627300053834915, -0.07767277210950851, -8.666139910928905e-05, -1.537788011773955e-05, -0.0008023141999728978, -0.0010275328531861305, -0.00011264643399044871, -3.576278118089249e-07, -0.002032240154221654, -0.09936440736055374, -0.007643263787031174, -0.10975240916013718, -1.0348588228225708, -0.0398283451795578, -0.2583944797515869, -0.003851616056635976, -0.010850359685719013, -3.9014227390289307, -0.14871744811534882, -0.594535768032074, -2.9394540786743164, -1.648356556892395, -1.1916403770446777, -0.044089965522289276, -0.004191186279058456, -0.4477261006832123, -1.154944896697998, -0.029221460223197937, -0.007532409392297268, -6.48477507638745e-05, -0.02338135801255703, -0.0001308832288486883, -0.0006659197388216853, -0.0004326361231505871, -0.0026537699159234762, -0.14645139873027802, -2.0265558760002023e-06, -0.00012063252506777644, -0.00011896379146492109, -7.986703712958843e-05, -1.9073304429184645e-05, -0.3677327632904053, -2.5653042793273926, -2.6069979667663574, -1.2809370756149292, -0.004641236271709204, -0.15989650785923004, -1.0980167388916016, -0.03432456776499748, -0.4832756221294403, -0.5938913226127625, -0.008577528409659863, -5.6622808187967166e-05, -0.00010990492592100054, -0.0006685405969619751, -0.000904032145626843, -9.393251093570143e-05, 0.0, -0.008800766430795193, -0.00030882356804795563, -0.007495375815778971, -3.286875009536743, -0.15117402374744415, -0.008948697708547115, -0.3831014931201935, -0.0017265664646402001, -0.004249946679919958, -0.1555907428264618, -0.013128978200256824, -0.004079591948539019, -0.09341080486774445, -0.03299984708428383, -0.02601592428982258, -0.0005915798828937113, -0.0003524397616274655, -0.002940261736512184, -0.02093982696533203, -0.002250402234494686, -0.0014978153631091118, -7.271740287251305e-06, -0.0020816102623939514, -0.00015245705435518175, -0.001440797932446003, -4.792098479811102e-05, -0.000814582861494273, -0.0024153604172170162, -5.018585216021165e-05, 0.0, -1.883488948806189e-05, -2.3841855067985307e-07, 0.0, -0.013748354278504848, -0.00997274648398161, -0.002512038918212056, -0.08530077338218689, -0.0010519453790038824, -0.07989341020584106, -0.0008909308817237616, -0.027302829548716545, -0.11192209273576736, -0.0013548490824177861, -6.198863957251888e-06, -1.9311717551317997e-05, -0.00015090756642166525, -0.00019798702851403505, -8.702239938429557e-06], "finish_reason": "length"}], "metrics": {"energy": 273.8284741888049, "energy_per_token": 1.069642477300019, "time": 11.348927, "time_per_token": 0.04433174609375}}
{"outputs": [{"text": "data_dir, excel_file_name = excel_file_path.split('/')\n    excel_dir_name = os.path.basename(data_dir)\n    excel_dir, excel_name = data_dir.split('/')[0:2]\n    df = pd.read_excel(data_dir + '/' + excel_name + '.' + excel_file_name,\n                       sheet_name=excel_dir_name)\n    mean_data, median_data, std_dev_data = np.mean(df[column_name]), np.median(\n        df[column_name]), np.std(df[column_name])\n    stats = {'mean': mean_data, 'median': median_data, 'std_dev': std_dev_data}\n    return stats", "tokens": ["data", "_", "dir", ",", " excel", "_", "file", "_", "name", " =", " excel", "_", "file", "_", "path", ".", "split", "('/", "')", "\n", "    ", "ex", "cel", "_", "dir", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "data", "_", "dir", ")", "\n", "    ", "ex", "cel", "_", "dir", ",", " excel", "_", "name", " =", " data", "_", "dir", ".", "split", "('/", "')", "[", "0", ":", "2", "]", "\n", "    ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "data", "_", "dir", " +", " '/", "'", " +", " excel", "_", "name", " +", " '", ".", "'", " +", " excel", "_", "file", "_", "name", ",", "\n", "                ", "       ", "sheet", "_", "name", "=", "ex", "cel", "_", "dir", "_", "name", ")", "\n", "    ", "mean", "_", "data", ",", " median", "_", "data", ",", " std", "_", "dev", "_", "data", " =", " np", ".", "mean", "(", "df", "[", "column", "_", "name", "])", ",", " np", ".", "med", "ian", "(", "\n", "        ", "df", "[", "column", "_", "name", "])", ",", " np", ".", "std", "(", "df", "[", "column", "_", "name", "])", "\n", "    ", "stats", " =", " {'", "mean", "':", " mean", "_", "data", ",", " '", "med", "ian", "':", " median", "_", "data", ",", " '", "std", "_", "dev", "':", " std", "_", "dev", "_", "data", "}", "\n", "    ", "return", " stats"], "logprobs": [-2.9952170848846436, -0.6235437989234924, -0.23665055632591248, -0.33873701095581055, -2.3139853477478027, -0.005239089950919151, -0.09378337115049362, -0.23059424757957458, -0.6349654793739319, -0.05746341869235039, -0.7444164156913757, -6.031808152329177e-05, -0.0006565084331668913, -0.00011514954530866817, -0.0006443570018745959, -1.2084085941314697, -0.3755425214767456, -0.7850037813186646, -0.018513383343815804, -0.4180608093738556, -0.1045956239104271, -1.196298360824585, -0.0007017772295512259, -0.0035213150549679995, -2.8866448402404785, -1.9543167352676392, -1.0664567947387695, -0.7143079042434692, -1.0514540672302246, -9.023735765367746e-05, -0.06414208561182022, -0.006132357753813267, -1.745102882385254, -2.50339189733495e-06, -0.0005287918029353023, -0.5430099368095398, -0.00019941726350225508, -0.0001137191939051263, -0.015229725278913975, -0.03293410316109657, -0.2935342490673065, -1.078265905380249, -0.0012763934209942818, -0.007003402337431908, -1.8699132204055786, -2.9265992641448975, -0.13437743484973907, -0.0015687552513554692, -2.1625938415527344, -0.03210671991109848, -2.3990328311920166, -0.0014871024759486318, -0.0004140473320148885, -0.04618877172470093, -0.09269697219133377, -0.14495763182640076, -0.03717299550771713, -2.183666229248047, -1.0797905921936035, -1.0279872417449951, -0.06119341030716896, -0.0017536989180371165, -0.12210189551115036, -0.45697978138923645, -2.6764893531799316, -0.05068930611014366, -0.08526979386806488, -0.0007135705673135817, -0.06543146073818207, -0.00021586472576018423, -0.0022324419114738703, -0.00020251607929822057, -0.026138221845030785, -1.8316062688827515, -0.0008156548719853163, -0.0004988856380805373, -0.07939913868904114, -1.4275791645050049, -0.008483444340527058, -0.0006910558440722525, -0.15813219547271729, -3.421248038648628e-05, -2.554805278778076, -0.01876179128885269, -1.53165864944458, -0.16406464576721191, -1.0055091381072998, -0.0027862084098160267, -0.03140920400619507, -1.1086402082582936e-05, -0.13277658820152283, -0.00023684080224484205, -0.0008827127167023718, -0.45795974135398865, -1.545827865600586, -0.022615494206547737, -0.08912048488855362, -0.3292044997215271, -0.005083136726170778, -9.178694017464295e-05, -0.09399066120386124, -0.17078709602355957, -5.8412379075889476e-06, -5.245195097813848e-06, -0.23661592602729797, -0.053345441818237305, -9.775113539944869e-06, -1.4667903184890747, -0.04654965549707413, -0.21852752566337585, -3.124518632888794, -2.9167494773864746, -2.5636956691741943, -2.7913894653320312, -0.08699632436037064, -0.0271404180675745, -0.0019161213422194123, -0.0564165823161602, -0.09502796083688736, -0.03270130231976509, -0.4768880009651184, -0.19115087389945984, -0.0025552024599164724, -0.023518415167927742, -1.4748421907424927, -0.0011606630869209766, -0.2841646373271942, -0.010309655219316483, -0.04694703593850136, -0.032979317009449005, -0.005473745055496693, -7.60526381782256e-05, -2.038458114839159e-05, -0.13211768865585327, -0.0034347132313996553, -0.08554725348949432, -0.0009448830969631672, -0.0022776394616812468, -0.0003424296446610242, -0.001258058357052505, -2.3848719596862793, -0.014024280942976475, -0.0016558758215978742, -0.0017986800521612167, -0.00035696811391972005, -7.748573807475623e-06, -1.1920928244535389e-07, -0.005217269994318485, -0.00042775063775479794, -0.05008139833807945, -0.0003215749457012862, -0.005311543587595224, -0.0017060976242646575, -0.005044352263212204, -0.0012887752382084727, -5.304672595229931e-05, -2.264974000354414e-06, -1.1920928244535389e-07, -0.05155003070831299, -0.01104880403727293, -0.14054745435714722, -1.2647168636322021, -0.14125403761863708, -0.3221154510974884, -0.004599942360073328, -0.001430560601875186, -0.18284717202186584, -0.0008868813747540116, -5.006777428206988e-06, -0.002399781486019492, -0.2442212998867035, -0.0013308010529726744, -0.00021169328829273582, -0.00024077377747744322, -0.001490554423071444, -4.386805812828243e-05, -2.264974000354414e-06, -0.0004228651523590088, -0.16121473908424377, -0.003909565042704344, -0.0026852760929614305, -0.0006761648692190647, -0.0001734344696160406, -0.018292654305696487, -0.0005619138828478754, -3.2186455882765586e-06, -3.373566141817719e-05, -7.152555099310121e-07, -0.015226555056869984, -0.001593511551618576, -0.06150486692786217, -0.03528016060590744, -0.006238273810595274], "finish_reason": "stop"}], "metrics": {"energy": 214.84676413917552, "energy_per_token": 1.113195669114899, "time": 8.39933, "time_per_token": 0.0435198445595855}}
{"outputs": [{"text": "df = pd.read_excel(os.path.join(excel_file_path, file_name))\n    try:\n        mean = df[column_name].mean()\n        median = df[column_name].median()\n        std_dev = df[column_name].std()\n        return {'mean': mean, 'median': median, 'std_dev': std_dev}\n    except KeyError:\n        raise ValueError(f\"Column '{column_name}' not found in the Excel file\")", "tokens": ["df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "os", ".", "path", ".", "join", "(", "ex", "cel", "_", "file", "_", "path", ",", " file", "_", "name", "))", "\n", "    ", "try", ":", "\n", "        ", "mean", " =", " df", "[", "column", "_", "name", "]", ".", "mean", "()", "\n", "        ", "med", "ian", " =", " df", "[", "column", "_", "name", "]", ".", "med", "ian", "()", "\n", "        ", "std", "_", "dev", " =", " df", "[", "column", "_", "name", "]", ".", "std", "()", "\n", "        ", "return", " {'", "mean", "':", " mean", ",", " '", "med", "ian", "':", " median", ",", " '", "std", "_", "dev", "':", " std", "_", "dev", "}", "\n", "    ", "except", " Key", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " '", "{", "column", "_", "name", "}'", " not", " found", " in", " the", " Excel", " file", "\"", ")"], "logprobs": [-2.5817134380340576, -0.02298242226243019, -0.06684094667434692, -0.0003383779258001596, -0.041579727083444595, -0.00018916724366135895, -0.0011787617113441229, -0.0001656871900195256, -0.011457713320851326, -2.072176694869995, -1.645074735279195e-05, -0.014968576841056347, -0.0066154045052826405, -0.0422530472278595, -0.003983539994806051, -0.012928592972457409, -4.291525328881107e-06, -1.823885577323381e-05, -0.00013314791431184858, -1.0847986231965479e-05, -1.0132738680113107e-05, -0.001646116841584444, -0.03418287634849548, -9.298280929215252e-06, -1.3112935448589269e-05, -0.885315477848053, -0.034305792301893234, -0.25183388590812683, -2.312690496444702, -0.0013424679636955261, -0.003237247234210372, -0.011784696951508522, -2.9077625274658203, -0.2505256235599518, -0.37474551796913147, -0.032660577446222305, -0.00234650238417089, -3.0874729418428615e-05, -5.960446742392378e-06, -0.0030612533446401358, -8.141662692651153e-05, -0.0030731377191841602, -0.004249827936291695, -0.009125903248786926, -0.14262868463993073, -0.0088161276653409, -0.004050029441714287, -0.0008850948070175946, -0.15549728274345398, -0.0016396900173276663, -8.332382276421413e-05, -3.2186455882765586e-06, -2.3841855067985307e-07, -0.0008484101272188127, -3.0397906812140718e-05, -0.007281550671905279, -8.821448318485636e-06, -0.0004757702990900725, -0.00158565619494766, -0.005505281034857035, -0.025929506868124008, -0.06140991672873497, -0.005449558608233929, -0.0014980534324422479, -0.07018785923719406, -0.0010275328531861305, -7.819823804311454e-05, -6.794906312279636e-06, -1.1920928244535389e-07, -0.00023147765023168176, -1.3112935448589269e-05, -0.0016301688738167286, -0.015392674133181572, -0.004755852278321981, -0.6425538659095764, -0.2733939588069916, -0.33950966596603394, -0.0017600059509277344, -0.001557805109769106, -0.08048995584249496, -0.0009140365873463452, -0.016386108472943306, -0.0003073934931308031, -4.672895011026412e-05, -0.00016759421851020306, -0.0013549680588766932, -0.00012313561455812305, -0.0038182465359568596, -0.004481985233724117, -0.0021120640449225903, -0.001016457681544125, -0.00019178935326635838, -0.011513573117554188, -6.103329360485077e-05, -1.3232143828645349e-05, -0.004391550086438656, -0.0014322272036224604, -0.05278494954109192, -0.0011797142215073109, -0.3204837739467621, -2.622600959512056e-06, -0.8140016794204712, -0.005357313901185989, -0.0007108307327143848, -0.21110138297080994, -0.04354788362979889, -1.156323378381785e-05, -0.23520007729530334, -0.5968198180198669, -0.18328315019607544, -0.5911057591438293, -1.0008816719055176, -0.0003777029050979763, -0.002224948490038514, -0.0003543464408721775, -5.435795901576057e-05, -0.0016742035513743758, -0.07686780393123627, -0.013246508315205574, -0.06863930076360703, -2.007160186767578, -0.11276303231716156, -0.005036642774939537, -2.1774144172668457, -0.06429111212491989], "finish_reason": "stop"}], "metrics": {"energy": 158.2854781417846, "energy_per_token": 1.266283825134277, "time": 6.1004176, "time_per_token": 0.0488033408}}
{"outputs": [{"text": "# Check if the Excel file exists at the specified path.\n    if not os.path.exists(excel_file_path):\n        raise FileNotFoundError(f\"File not found at {excel_file_path}.\")\n\n    # Read the Excel file.\n    data_df = pd.read_excel(excel_file_path, sheet_name=file_name)\n\n    # Check if the specified column is found in the Excel file.\n    if column_name not in data_df.columns:\n        raise ValueError(f\"Column {column_name} not found in Excel file at {excel_file_path}.\")\n\n    # Calculate the mean, median, and standard deviation.\n    data = data_df[column_name].values\n    mean, median, std_dev = np.mean(data), np.median(data), np.std(data)\n\n    return {\"mean\": mean, \"median\": median, \"std_dev\": std_dev}", "tokens": ["#", " Check", " if", " the", " Excel", " file", " exists", " at", " the", " specified", " path", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "ex", "cel", "_", "file", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "File", " not", " found", " at", " {", "ex", "cel", "_", "file", "_", "path", "}", ".", "\"", ")", "\n", "\n", "    ", "#", " Read", " the", " Excel", " file", ".", "\n", "    ", "data", "_", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", ",", " sheet", "_", "name", "=", "file", "_", "name", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " specified", " column", " is", " found", " in", " the", " Excel", " file", ".", "\n", "    ", "if", " column", "_", "name", " not", " in", " data", "_", "df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " {", "column", "_", "name", "}", " not", " found", " in", " Excel", " file", " at", " {", "ex", "cel", "_", "file", "_", "path", "}", ".", "\"", ")", "\n", "\n", "    ", "#", " Calculate", " the", " mean", ",", " median", ",", " and", " standard", " deviation", ".", "\n", "    ", "data", " =", " data", "_", "df", "[", "column", "_", "name", "]", ".", "values", "\n", "    ", "mean", ",", " median", ",", " std", "_", "dev", " =", " np", ".", "mean", "(", "data", ")", ",", " np", ".", "med", "ian", "(", "data", ")", ",", " np", ".", "std", "(", "data", ")", "\n", "\n", "    ", "return", " ", "{\"", "mean", "\":", " mean", ",", " \"", "med", "ian", "\":", " median", ",", " \"", "std", "_", "dev", "\":", " std", "_", "dev", "}"], "logprobs": [-1.9811408519744873, -1.3575598001480103, -0.2752966284751892, -0.2769223153591156, -0.25010213255882263, -0.0025643580593168736, -0.02338683232665062, -0.7764919400215149, -0.006077381316572428, -0.17306680977344513, -0.014658140018582344, -2.2258291244506836, -0.022863585501909256, -0.007282852195203304, -0.24165721237659454, -0.04659983515739441, -0.009332366287708282, -1.1920858014491387e-05, -0.00029047083808109164, -0.0038763161282986403, -0.3919709026813507, -0.0023930028546601534, -0.06421788781881332, -8.583032467868179e-06, -2.6940935640595853e-05, -7.581423415103927e-05, -0.00010001159535022452, -4.851700214203447e-05, -0.5894518494606018, -0.005036879796534777, -0.0015561387408524752, -0.055585749447345734, -0.005745799746364355, -6.246371776796877e-05, -3.2782016205601394e-05, -0.26941749453544617, -0.7237714529037476, -0.2459913194179535, -1.3950154781341553, -0.45666587352752686, -0.007412667386233807, -0.4347330331802368, -0.5311662554740906, -0.005127375479787588, -0.00013910756388213485, -1.4305104514278355e-06, -0.0016077938489615917, -9.333651541965082e-05, -1.0609570381348021e-05, -0.9974086284637451, -0.07967030256986618, -0.05479823425412178, -0.00015054999676067382, -0.0032434258610010147, -0.1365041732788086, -0.0015463787131011486, -0.07989968359470367, -1.6605963706970215, -0.08849360793828964, -0.3951839506626129, -0.026843950152397156, -2.5674149990081787, -0.0034746292512863874, -0.00047755756531842053, -3.106454849243164, -1.2087347507476807, -1.6052327156066895, -0.009573619812726974, -0.014569442719221115, -6.758938252460212e-05, -0.04151225462555885, -3.6477376852417365e-05, -0.00041607304592616856, -5.674201020156033e-05, -0.0015091231325641274, -0.14543354511260986, -7.152555099310121e-07, -3.40932747349143e-05, -0.00013517419574782252, -2.13382354559144e-05, -6.437280717364047e-06, -0.5197457671165466, -0.18476815521717072, -0.00034528967808000743, -5.3881147323409095e-05, -0.0095572080463171, -0.03375503793358803, -9.298280929215252e-06, -1.3828182090946939e-05, -0.5708305239677429, -0.016539957374334335, -0.09495912492275238, -0.0004122599493712187, -0.020744502544403076, -0.31187283992767334, -0.018251217901706696, -0.011504145339131355, -0.12733861804008484, -0.0015095992712303996, -0.711870014667511, -0.5643562078475952, -0.22125473618507385, -0.0006694936309941113, -0.09808381646871567, -0.004573717713356018, -0.010003787465393543, -0.002577794250100851, -0.0004215544031467289, -0.18905742466449738, -0.1696377992630005, -2.753696753643453e-05, -0.00031871485407464206, -0.00864844024181366, -1.1444026313256472e-05, -0.04608074203133583, -2.169585604860913e-05, -9.560128091834486e-05, -0.24800659716129303, -0.01276665460318327, -0.004460267256945372, -0.0007128558354452252, -0.00045217780279926956, -0.007731749676167965, -0.0046309130266308784, -5.602820692729438e-06, -0.00402010977268219, -0.07025109231472015, -0.01621968485414982, -0.22655968368053436, -0.542219877243042, -0.0019882211927324533, -1.9192511899746023e-05, -3.886147169396281e-05, -0.03565213829278946, -0.04638874530792236, -0.010192487388849258, -0.04599900171160698, -0.9360230565071106, -0.015058061107993126, -3.416233777999878, -0.03871964290738106, -0.00986238569021225, -3.2066785934148356e-05, -5.960446742392378e-06, -0.0002101439022226259, -2.2053474822314456e-05, -1.2040065485052764e-05, -0.1807418167591095, -0.014794752933084965, -0.010592193342745304, -0.0005323661607690156, -0.0026301098987460136, -0.008532378822565079, -0.0007811117684468627, -0.07093792408704758, -0.3997673988342285, -0.1228175014257431, -0.21060281991958618, -0.11014937609434128, -0.002071141730993986, -0.004586533643305302, -0.006451848894357681, -0.008164719678461552, -0.004095026291906834, -0.43388670682907104, -0.0011011258466169238, -0.001468533300794661, -2.8078975677490234, -0.7673578262329102, -0.0860588401556015, -2.1934269170742482e-05, -6.198863957251888e-06, -0.026221370324492455, -0.0009239218779839575, -5.602820692729438e-06, -1.1920922133867862e-06, -0.0006658005877397954, -0.7654913067817688, -0.7037686109542847, -0.09204841405153275, -0.09240812808275223, -0.23498785495758057, -1.5999776124954224, -0.024784812703728676, -0.04939199984073639, -0.02792659029364586, -0.14032712578773499, -0.0050531295128166676, -0.014288143254816532, -0.1552392840385437, -6.603976362384856e-05, -0.0324082113802433, -0.0015553055563941598, -0.00126079679466784, -0.009875724092125893, -0.00026913834153674543, -0.006656970363110304, -0.0012519863666966558, -0.0009651293512433767, -0.00014482879487331957, -0.00013076403411105275, -0.0007344171172007918, -0.000763244170229882, -0.0001370812824461609, -0.010976764373481274, -0.00015889335190877318, -0.00126151111908257, -0.0004985281848348677, -0.000816131301689893, -0.09061644226312637, -0.005044945515692234, -0.10378088802099228, -0.00023529145983047783, -1.568263292312622, -2.219200849533081, -0.00015770144818816334, -0.00272973976098001, -0.0013016331940889359, -0.0753735676407814, -0.0005003153928555548, -0.014474979601800442, -0.0003281293320469558, -3.731181277544238e-05, -0.00010978573118336499, -0.0007855190197005868, -5.447716102935374e-05, -0.0013267532922327518, -0.003822284284979105, -0.0020584126468747854, -0.000406301929615438, -0.00012933371181134135, -0.008775360882282257, -7.807903602952138e-05, -3.3378546504536644e-06, -0.3871596157550812], "finish_reason": "stop"}], "metrics": {"energy": 297.3646299171448, "energy_per_token": 1.2653814039027438, "time": 11.768363, "time_per_token": 0.050078140425531915}}
{"outputs": [{"text": "print(\"Please, wait...\")\n    df = pd.read_excel(excel_file_path + file_name)\n    column_data = df[column_name]\n\n    try:\n        stats = dict(mean=column_data.mean(), median=column_data.median(), std_dev=column_data.std())\n    except:\n        raise ValueError(\"Error calculating statistics.\")\n    else:\n        return stats", "tokens": ["print", "(", "\"", "Please", ",", " wait", ".", ".", ".", "\"", ")", "\n", "    ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ")", "\n", "    ", "column", "_", "data", " =", " df", "[", "column", "_", "name", "]", "\n", "\n", "    ", "try", ":", "\n", "        ", "stats", " =", " dict", "(", "mean", "=", "column", "_", "data", ".", "mean", "()", ",", " median", "=", "column", "_", "data", ".", "med", "ian", "()", ",", " std", "_", "dev", "=", "column", "_", "data", ".", "std", "())", "\n", "    ", "except", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Error", " calculating", " statistics", ".", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "return", " stats"], "logprobs": [-4.584342002868652, -0.41459307074546814, -0.7603555917739868, -5.029143333435059, -3.302189350128174, -1.1751093864440918, -1.2622653245925903, -0.08965814858675003, -0.02391667291522026, -0.16296420991420746, -0.027601713314652443, -0.014555108733475208, -0.14418970048427582, -2.401212215423584, -0.035656969994306564, -0.10106421262025833, -0.0007084482349455357, -0.07477197051048279, -0.00023874769976828247, -0.0016838433220982552, -0.0001461399078834802, -0.01588546670973301, -0.4068290591239929, -8.702239938429557e-06, -5.757642793469131e-05, -0.00018594920402392745, -1.9073304429184645e-05, -5.566918844124302e-05, -0.09434012323617935, -0.10323216766119003, -0.0003084660565946251, -4.172238186583854e-05, -0.8886180520057678, -0.042933449149131775, -0.18559864163398743, -1.8654965162277222, -0.8354836702346802, -1.4746181964874268, -0.018156282603740692, -0.10992469638586044, -0.03560059890151024, -0.00363107118755579, -5.566918844124302e-05, -1.2755313036905136e-05, -0.002087677363306284, -0.2632017433643341, -1.5757533311843872, -0.0006735440110787749, -2.512484073638916, -0.0013686585007235408, -0.00608176551759243, -0.022620389237999916, -2.5267341136932373, -0.07049630582332611, -2.7856638431549072, -1.0852102041244507, -0.7118866443634033, -0.03391706943511963, -0.5472968816757202, -1.2516897186287679e-05, -4.184158387943171e-05, -0.0020136809907853603, -0.0014141331193968654, -0.00327467592433095, -0.005751726217567921, -0.43003010749816895, -0.0014252038672566414, -0.1610548198223114, -2.5510462364763953e-05, -1.3828182090946939e-05, -0.003898046677932143, -0.0034809254575520754, -3.707340147229843e-05, -0.0014157997211441398, -0.00040749352774582803, -0.16951212286949158, -0.003969054203480482, -0.0004586121649481356, -0.003360697766765952, -0.08215107768774033, -0.00014828535495325923, -7.271740287251305e-06, -0.0010662352433428168, -0.0020189157221466303, -0.02642236091196537, -0.002657574601471424, -0.48389342427253723, -0.0034242586698383093, -2.1144230365753174, -0.00827585905790329, -0.0038296468555927277, -0.4121699631214142, -0.24019579589366913, -6.985420623095706e-05, -0.21988774836063385, -0.45138418674468994, -2.820584774017334, -2.2351796627044678, -1.3880085945129395, -0.8789759278297424, -0.6542712450027466, -0.004827036056667566, -0.007100704126060009, -0.7887328863143921, -1.6125404834747314, -0.00038938093348406255, -0.0035517248325049877, -0.004477119538933039, -0.8463888168334961, -0.013112271204590797], "finish_reason": "stop"}], "metrics": {"energy": 120.67328960227964, "energy_per_token": 1.0970299054752695, "time": 4.8401737, "time_per_token": 0.04400157909090909}}
{"outputs": [{"text": "if not os.path.exists(excel_file_path) or not os.path.isdir(excel_file_path):\n        raise FileNotFoundError(\"Invalid Excel file path\")\n\n    df = pd.read_excel(excel_file_path + file_name, usecols=[column_name])\n\n    if len(df) == 0:\n        raise ValueError(\"No data found in the column\")\n\n    mean = df[column_name].mean()\n    median = df[column_name].median()\n    std_dev = df[column_name].std()\n\n    return {\"mean\": mean, \"median\": median, \"std_dev\": std_dev}", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "ex", "cel", "_", "file", "_", "path", ")", " or", " not", " os", ".", "path", ".", "is", "dir", "(", "ex", "cel", "_", "file", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Invalid", " Excel", " file", " path", "\"", ")", "\n", "\n", "    ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ",", " use", "cols", "=[", "column", "_", "name", "])", "\n", "\n", "    ", "if", " len", "(", "df", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " data", " found", " in", " the", " column", "\"", ")", "\n", "\n", "    ", "mean", " =", " df", "[", "column", "_", "name", "]", ".", "mean", "()", "\n", "    ", "med", "ian", " =", " df", "[", "column", "_", "name", "]", ".", "med", "ian", "()", "\n", "    ", "std", "_", "dev", " =", " df", "[", "column", "_", "name", "]", ".", "std", "()", "\n", "\n", "    ", "return", " ", "{\"", "mean", "\":", " mean", ",", " \"", "med", "ian", "\":", " median", ",", " \"", "std", "_", "dev", "\":", " std", "_", "dev", "}"], "logprobs": [-2.794090986251831, -0.24847589433193207, -0.06728819012641907, -3.1470757676288486e-05, -0.0008387623238377273, -0.006296913605183363, -0.39994576573371887, -0.00672647962346673, -0.05589906871318817, -7.986990567587782e-06, -1.8954096958623268e-05, -0.00014232576359063387, -0.00011431517486926168, -4.160317621426657e-05, -3.212158679962158, -0.060055844485759735, -0.2731684744358063, -0.15264102816581726, -0.0008924792055040598, -0.006548019591718912, -0.014288143254816532, -0.051153797656297684, -0.5291731357574463, -0.0005153281381353736, -0.027782483026385307, -0.00015579440514557064, -1.7165990357170813e-05, -0.00010978573118336499, -7.152555099310121e-07, -5.125986263010418e-06, -0.03125970438122749, -0.0101524842903018, -0.0025465223006904125, -0.06955978274345398, -0.023765001446008682, -0.00013958434283267707, -6.842378934379667e-05, -0.33261099457740784, -0.7939193248748779, -2.9486403465270996, -1.1006853580474854, -0.2351711541414261, -0.06931255757808685, -1.0310142040252686, -0.0007117837085388601, -0.0016486160457134247, -0.4137352406978607, -0.0004922132357023656, -1.0078448057174683, -0.010081796906888485, -0.023542284965515137, -8.892617915989831e-05, -0.024635832756757736, -9.238292841473594e-05, -0.0009910915978252888, -9.095255518332124e-05, -0.0017742858035489917, -0.11292926222085953, -8.344646857949556e-07, -6.198863957251888e-06, -5.400034933700226e-05, -4.768360213347478e-06, -6.794906312279636e-06, -0.17768734693527222, -0.4246164560317993, -0.0003678122302517295, -6.8662193370983e-05, -0.3970915377140045, -1.5425264835357666, -0.0018101035384461284, -0.0653020441532135, -0.14742068946361542, -9.011816291604191e-05, -0.000501030299346894, -0.10442166775465012, -0.03575370833277702, -0.807979941368103, -0.00014327930693980306, -0.3626520335674286, -1.3886991739273071, -0.0001394651480950415, -0.005318183917552233, -0.6552265286445618, -0.1677684485912323, -0.000658057106193155, -0.0023264028131961823, -0.0852896049618721, -0.01927303895354271, -0.0007531190640293062, -0.07294583320617676, -0.0034176057670265436, -1.0609570381348021e-05, -0.023281319066882133, -0.11080796271562576, -1.3546534776687622, -0.23350146412849426, -0.15360189974308014, -0.22574740648269653, -0.4085771143436432, -2.0229406356811523, -0.16534040868282318, -0.003606365295127034, -0.001927543431520462, -0.036536816507577896, -0.0003232433518860489, -1.1285207271575928, -0.1309175044298172, -0.593286395072937, -0.1343151032924652, -0.002397997537627816, -5.006777428206988e-06, -5.960462772236497e-07, -0.0005211663665249944, -4.1126360883936286e-05, -0.003886884544044733, -0.005391343496739864, -0.009489902295172215, -0.013728835619986057, -0.008318419568240643, -0.0031104539521038532, -0.0008573431987315416, -0.14314071834087372, -0.002273357706144452, -7.176141662057489e-05, -2.0265558760002023e-06, -4.768370445162873e-07, -0.0009147512027993798, -1.07287787614041e-05, -0.008483326062560081, -5.8412379075889476e-06, -0.0005723983631469309, -0.0021786780562251806, -0.02138298563659191, -0.03475803881883621, -0.056409597396850586, -0.006145983003079891, -0.0011013639159500599, -0.06740409135818481, -0.001786899520084262, -0.00014959646796341985, -2.145764938177308e-06, -1.1920928244535389e-07, -0.00014911970356479287, -5.602820692729438e-06, -0.001824739621952176, -0.025878513231873512, -0.006626536604017019, -0.0914573147892952, -0.00010168035078095272, -0.20681296288967133, -1.5880117416381836, -0.00010466027742950246, -0.0053613451309502125, -0.0022846567444503307, -0.10404283553361893, -0.001081834896467626, -0.022740071639418602, -0.0004503904783632606, -5.876845170860179e-05, -0.00021836756786797196, -0.000896052282769233, -0.00011300401820335537, -0.0020172500517219305, -0.009100859984755516, -0.005439362488687038, -0.0013092526933178306, -0.00022682955022901297, -0.01494708564132452, -4.9470632802695036e-05, -7.867782187531702e-06, -0.24658453464508057], "finish_reason": "stop"}], "metrics": {"energy": 196.536450471878, "energy_per_token": 1.1493359676718011, "time": 7.574629, "time_per_token": 0.04429607602339181}}
{"outputs": [{"text": "work_book = None\n    stats = {\n        \"mean\": None,\n        \"median\": None,\n        \"std_dev\": None\n    }\n    try:\n        work_book = pd.read_excel(\n            excel_file_path + file_name,\n            sheet_name=\"Sheet1\",\n            header=1,\n            index_col=None,\n            usecols=[1, 2]\n        )\n        col_name = column_name.upper()\n        col_num = work_book.columns.get_loc(col_name)\n        if col_num == 1:\n            raise ValueError(\n                f\"The column {col_name} was found at index 1, but Excel column indexing starts at 0. \"\n                \"Please change the column name or use a different Excel file.\"\n            )\n        col = work_book.iloc[:, col_num]\n        col_values = col.values\n        stats[\"mean\"] = col_values.mean()\n        stats[\"median\"] = col_values.median()", "tokens": ["work", "_", "book", " =", " None", "\n", "    ", "stats", " =", " {", "\n", "        ", "\"", "mean", "\":", " None", ",", "\n", "        ", "\"", "med", "ian", "\":", " None", ",", "\n", "        ", "\"", "std", "_", "dev", "\":", " None", "\n", "    ", "}", "\n", "    ", "try", ":", "\n", "        ", "work", "_", "book", " =", " pd", ".", "read", "_", "ex", "cel", "(", "\n", "            ", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ",", "\n", "            ", "sheet", "_", "name", "=", "\"", "Sheet", "1", "\"", ",", "\n", "            ", "header", "=", "1", ",", "\n", "            ", "index", "_", "col", "=", "None", ",", "\n", "            ", "use", "cols", "=[", "1", ",", " ", "2", "]", "\n", "        ", ")", "\n", "        ", "col", "_", "name", " =", " column", "_", "name", ".", "upper", "()", "\n", "        ", "col", "_", "num", " =", " work", "_", "book", ".", "columns", ".", "get", "_", "loc", "(", "col", "_", "name", ")", "\n", "        ", "if", " col", "_", "num", " ==", " ", "1", ":", "\n", "            ", "raise", " Value", "Error", "(", "\n", "                ", "f", "\"", "The", " column", " {", "col", "_", "name", "}", " was", " found", " at", " index", " ", "1", ",", " but", " Excel", " column", " indexing", " starts", " at", " ", "0", ".", " \"", "\n", "                ", "\"", "Please", " change", " the", " column", " name", " or", " use", " a", " different", " Excel", " file", ".", "\"", "\n", "            ", ")", "\n", "        ", "col", " =", " work", "_", "book", ".", "il", "oc", "[:", ",", " col", "_", "num", "]", "\n", "        ", "col", "_", "values", " =", " col", ".", "values", "\n", "        ", "stats", "[", "\"", "mean", "\"", "]", " =", " col", "_", "values", ".", "mean", "()", "\n", "        ", "stats", "[", "\"", "med", "ian", "\"", "]", " =", " col", "_", "values", ".", "med", "ian", "()"], "logprobs": [-4.556389808654785, -2.272306442260742, -0.3505757451057434, -0.04353441670536995, -2.482663154602051, -0.006658391561359167, -0.0830468162894249, -2.789825201034546, -0.07051774859428406, -3.043868064880371, -0.032244663685560226, -0.025835182517766953, -1.4545557498931885, -0.020914260298013687, -0.011701400391757488, -0.7526421546936035, -0.00037448544753715396, -0.035322509706020355, -0.00033539868309162557, -0.0010521834483370185, -0.004375170916318893, -0.001190311275422573, -0.0012484145117923617, -0.0021222943905740976, -0.0003359945258125663, -0.0003475538978818804, -0.0007101159426383674, -0.0009722749819047749, -0.05515952408313751, -0.010525193065404892, -0.0025835013948380947, -0.002477435627952218, -0.006019676569849253, -0.2949508726596832, -0.013799971900880337, -9.548207890475169e-05, -0.0008996253600344062, -0.3925054669380188, -0.19762618839740753, -0.0006547214579768479, -0.0011455409694463015, -0.017359577119350433, -0.11401837319135666, -0.015761323273181915, -0.0013521108776330948, -0.00570929329842329, -0.149541974067688, -7.86750388215296e-05, -0.8455249071121216, -0.00012385078298393637, -0.0005538121913559735, -7.617183291586116e-05, -0.012290927581489086, -2.5006937980651855, -0.018316179513931274, -0.4088195860385895, -5.8887653722194955e-05, -0.000418575422372669, -0.0011823337990790606, -0.00020239688456058502, -0.00023719835735391825, -0.06813330203294754, -0.24258659780025482, -0.00023362292267847806, -9.715084888739511e-05, -0.037766411900520325, -0.4967997968196869, -0.012861278839409351, -0.5048966407775879, -0.002904009073972702, -0.0002076410164590925, -0.08340516686439514, -1.3401235342025757, -0.8170179128646851, -0.04152163118124008, -0.0005695389700122178, -0.11115565896034241, -0.02635768987238407, -0.07784945517778397, -1.3339314460754395, -0.08205081522464752, -1.7085566520690918, -0.17496982216835022, -0.0367530956864357, -0.07801133394241333, -0.5803921818733215, -0.00039736481267027557, -0.004871879238635302, -0.04327382147312164, -1.5704337358474731, -0.3124809265136719, -0.01700686849653721, -0.4121686816215515, -1.1531528234481812, -0.011435321532189846, -0.3430982530117035, -1.5462408065795898, -0.8557185530662537, -0.38037988543510437, -0.41363948583602905, -0.9371126294136047, -0.8436480760574341, -0.023541586473584175, -0.002427490195259452, -0.02489377185702324, -0.4945583939552307, -3.530674457550049, -0.4315820336341858, -0.8294590711593628, -0.06743919104337692, -3.111280679702759, -0.0006002769805490971, -0.0003357561945449561, -1.7479463815689087, -1.6762454509735107, -0.0013427060330286622, -0.049931492656469345, -0.06385784596204758, -2.024761915206909, -0.421146422624588, -3.2499966621398926, -0.03277837112545967, -0.24624332785606384, -0.0001805857609724626, -3.075552376685664e-05, -0.237884983420372, -0.04728592932224274, -0.09841489791870117, -0.07663209736347198, -0.004486495163291693, -0.24368497729301453, -0.001536499592475593, -0.02045103721320629, -0.0004720765573438257, -1.490105023549404e-05, -0.05595937743782997, -0.3453013598918915, -0.06768599152565002, -2.751185417175293, -0.32304757833480835, -0.0002057340752799064, -0.0953795537352562, -0.8876004219055176, -0.48597267270088196, -1.962098240852356, -0.04462878778576851, -0.017343057319521904, -0.0032656455878168344, -2.094313144683838, -0.07143595069646835, -0.00010799778101500124, -0.1458273082971573, -1.6223459243774414, -0.0019961923826485872, -0.7616972327232361, -0.0976284071803093, -1.4817461967468262, -0.8779923319816589, -1.0159945487976074, -0.6095392107963562, -0.0003010773507412523, -0.003467976814135909, -0.0350581556558609, -2.9278688430786133, -2.6704938411712646, -1.7042322158813477, -1.3238475322723389, -0.2702113389968872, -0.10322108864784241, -1.3293596506118774, -0.9062238931655884, -2.729081153869629, -2.1110877990722656, -0.8804304599761963, -0.2192775160074234, -0.2652443051338196, -0.19182465970516205, -0.031105447560548782, -0.23059330880641937, -2.4809346199035645, -0.047542523592710495, -0.08230545371770859, -0.8496878147125244, -0.5507153868675232, -2.1580617427825928, -0.1690230816602707, -0.37596502900123596, -0.2508760392665863, -1.7259702682495117, -1.1826289892196655, -1.2928200960159302, -0.44326505064964294, -2.7554638385772705, -0.21753425896167755, -0.26810359954833984, -0.021607233211398125, -0.12275150418281555, -0.0073847416788339615, -4.2437604861333966e-05, -0.003367232158780098, -0.18244357407093048, -2.1020123958587646, -1.4027166366577148, -0.09872480481863022, -5.6265202147187665e-05, -8.34461570775602e-06, -0.17965690791606903, -0.10952422022819519, -0.0002602000313345343, -0.012172107584774494, -0.004245435819029808, -0.12877076864242554, -2.6940935640595853e-05, -6.687417771900073e-05, -0.07263636589050293, -0.10509777814149857, -0.07345858961343765, -2.769369125366211, -0.631679356098175, -2.213961124420166, -0.01402910053730011, -0.34045854210853577, -0.08736998587846756, -0.6025984287261963, -0.3225446045398712, -0.08018655329942703, -0.7748481631278992, -0.2772778868675232, -0.003499813610687852, -0.011597003787755966, -3.766942609217949e-05, -0.0004207202873658389, -0.00881163775920868, -2.3214597702026367, -0.28892916440963745, -0.0092982342466712, -0.011102446354925632, -0.00812700018286705, -0.005850452929735184, -0.008042925037443638, -0.002831618534401059, -0.02417607605457306, -0.002842435846105218, -0.000543446687515825, -0.014512695372104645, -4.303362584323622e-05, -4.9828242481453344e-05, -8.368142152903602e-05, -0.0008847374701872468, -1.0776965618133545, -0.02001587674021721, -0.00010632903286023065, -0.03899793699383736, -0.010922878980636597, -9.762764238985255e-05, -0.0022607501596212387], "finish_reason": "length"}], "metrics": {"energy": 305.85022074890156, "energy_per_token": 1.1947274248003967, "time": 11.554367, "time_per_token": 0.04513424609375}}
{"outputs": [{"text": "df = pd.read_excel(f\"{excel_file_path}/{file_name}\", header=None, dtype=str, index_col=None)\n    if column_name not in df:\n        raise ValueError(f\"{column_name} is not a valid column name.\")\n\n    # Calculate the mean, median, and standard deviation\n    mean = df[column_name].mean()\n    median = df[column_name].median()\n    std_dev = df[column_name].std()\n\n    return {'mean': mean, 'median': median, 'std_dev': std_dev}", "tokens": ["df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "f", "\"", "{", "ex", "cel", "_", "file", "_", "path", "}/{", "file", "_", "name", "}\"", ",", " header", "=", "None", ",", " dtype", "=", "str", ",", " index", "_", "col", "=", "None", ")", "\n", "    ", "if", " column", "_", "name", " not", " in", " df", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "column", "_", "name", "}", " is", " not", " a", " valid", " column", " name", ".", "\"", ")", "\n", "\n", "    ", "#", " Calculate", " the", " mean", ",", " median", ",", " and", " standard", " deviation", "\n", "    ", "mean", " =", " df", "[", "column", "_", "name", "]", ".", "mean", "()", "\n", "    ", "med", "ian", " =", " df", "[", "column", "_", "name", "]", ".", "med", "ian", "()", "\n", "    ", "std", "_", "dev", " =", " df", "[", "column", "_", "name", "]", ".", "std", "()", "\n", "\n", "    ", "return", " {'", "mean", "':", " mean", ",", " '", "med", "ian", "':", " median", ",", " '", "std", "_", "dev", "':", " std", "_", "dev", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-2.5817134380340576, -0.02298242226243019, -0.06684094667434692, -0.0003383779258001596, -0.041579727083444595, -0.00018916724366135895, -0.0011787617113441229, -0.0001656871900195256, -0.011457713320851326, -2.9272868633270264, -0.6533523797988892, -0.011250745505094528, -0.012675553560256958, -7.033323527139146e-06, -1.9311717551317997e-05, -0.00029273517429828644, -6.031808152329177e-05, -3.9934315282152966e-05, -0.19790184497833252, -0.0019677577074617147, -7.390948667307384e-06, -3.611976353568025e-05, -0.021026909351348877, -0.33700501918792725, -2.542276382446289, -0.09595198929309845, -0.5678240656852722, -0.6195812225341797, -2.8963966369628906, -0.15157414972782135, -0.7393068075180054, -1.2868614196777344, -1.6628508567810059, -0.0005754960584454238, -0.012749942019581795, -0.023318005725741386, -0.3228049576282501, -0.18051841855049133, -0.08195636421442032, -0.29887598752975464, -1.8681424856185913, -0.22565314173698425, -0.00034350217902101576, -0.0004659997357521206, -0.21681204438209534, -6.139089964563027e-05, -0.060528576374053955, -1.6283299922943115, -0.007320603355765343, -0.0034740353003144264, -0.03901845961809158, -0.01790374331176281, -2.3483953555114567e-05, -0.09585028886795044, -0.38096898794174194, -0.10237112641334534, -1.2447205781936646, -0.04576512426137924, -0.0003887851198669523, -6.258291978156194e-05, -0.015489866957068443, -0.7444665431976318, -0.011732740327715874, -1.3839187622070312, -0.7048122882843018, -0.043771322816610336, -0.9270414710044861, -0.7003790140151978, -0.19336965680122375, -0.0003364712174516171, -0.0029992142226547003, -1.1032016277313232, -0.0005284343496896327, -2.3138818740844727, -1.8539295196533203, -0.5544697046279907, -0.1875516176223755, -0.31044572591781616, -0.005347946658730507, -0.013947400264441967, -0.013523160479962826, -0.015315898694097996, -0.00572991743683815, -0.45232224464416504, -0.0013196102809160948, -0.2419372797012329, -0.08389034122228622, -0.2507679760456085, -0.04081325978040695, -0.0037019785959273577, -4.291525328881107e-06, -9.536738616588991e-07, -0.00125770119484514, -0.00010132275929208845, -0.004682884085923433, -0.006703626364469528, -0.007395036518573761, -0.0035207211039960384, -0.004041243344545364, -0.0018117694417014718, -0.001010384177789092, -0.3552306294441223, -0.003650312777608633, -5.9960475482512265e-05, -4.291525328881107e-06, -7.152555099310121e-07, -0.0013621109537780285, -2.7894584491150454e-05, -0.022077150642871857, -8.22540732769994e-06, -0.0013656823430210352, -0.002654958749189973, -0.010721343569457531, -0.029021957889199257, -0.03284747153520584, -0.004836882930248976, -0.0016702761640772223, -0.11447340250015259, -0.001587798586115241, -0.00011777184408856556, -2.622600959512056e-06, -2.3841855067985307e-07, -0.00034540885826572776, -9.65590606938349e-06, -0.0015710166189819574, -0.03802477568387985, -0.006434556096792221, -0.08895581215620041, -0.0001752223033690825, -0.7042856812477112, -1.141581416130066, -0.0015550674870610237, -0.0008064831490628421, -0.05166415125131607, -0.0008573431987315416, -0.016753803938627243, -0.0004247716860845685, -8.11782301752828e-05, -0.00013445904187392443, -0.00048673225683160126, -0.00012396997772157192, -0.0028767890762537718, -0.010391062125563622, -0.002877145539969206, -0.000695344409905374, -0.00020656836568377912, -0.011730501428246498, -3.2066785934148356e-05, -6.794906312279636e-06, -1.6518529653549194, -3.576278118089249e-07, -2.622600959512056e-06, -0.0007452571298927069, -8.237022848334163e-05, -0.13447445631027222], "finish_reason": "stop"}], "metrics": {"energy": 176.48627140998835, "energy_per_token": 1.1386211058708926, "time": 6.9460735, "time_per_token": 0.04481337741935484}}
{"outputs": [{"text": "try:\n        # Read the Excel file\n        df = pd.ExcelFile(os.path.join(excel_file_path, file_name))\n        data_frame = df.parse(column_name)\n        mean = data_frame.mean()\n        median = data_frame.median()\n        std_dev = data_frame.std()\n        result = {\n            'mean': mean,\n            'median': median,\n            'std_dev': std_dev,\n        }\n        return result\n    except FileNotFoundError:\n        raise FileNotFoundError", "tokens": ["try", ":", "\n", "        ", "#", " Read", " the", " Excel", " file", "\n", "        ", "df", " =", " pd", ".", "Excel", "File", "(", "os", ".", "path", ".", "join", "(", "ex", "cel", "_", "file", "_", "path", ",", " file", "_", "name", "))", "\n", "        ", "data", "_", "frame", " =", " df", ".", "parse", "(", "column", "_", "name", ")", "\n", "        ", "mean", " =", " data", "_", "frame", ".", "mean", "()", "\n", "        ", "med", "ian", " =", " data", "_", "frame", ".", "med", "ian", "()", "\n", "        ", "std", "_", "dev", " =", " data", "_", "frame", ".", "std", "()", "\n", "        ", "result", " =", " {", "\n", "            ", "'", "mean", "':", " mean", ",", "\n", "            ", "'", "med", "ian", "':", " median", ",", "\n", "            ", "'", "std", "_", "dev", "':", " std", "_", "dev", ",", "\n", "        ", "}", "\n", "        ", "return", " result", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "\n", "\n", "def"], "logprobs": [-1.7448699474334717, -0.0009943069890141487, -0.005875577684491873, -0.01621909812092781, -2.253654956817627, -1.797896146774292, -0.24644021689891815, -0.2950402498245239, -0.049847569316625595, -1.2940125465393066, -0.0007030876004137099, -0.3251338005065918, -0.007524955552071333, -0.009928957559168339, -0.00012754580529872328, -2.9633572101593018, -0.0006787856691516936, -0.0010377742582932115, -1.7101125717163086, -2.2411095415009186e-05, -0.0035475671757012606, -0.001485078944824636, -0.02510177157819271, -0.0014886498684063554, -0.009561812505126, -6.318072337307967e-06, -2.098061486321967e-05, -0.00017450717859901488, -1.5497195136049413e-06, -2.729855441430118e-05, -0.0009581027552485466, -0.03554146736860275, -4.0531076592742465e-06, -1.2040065485052764e-05, -0.003411546815186739, -1.0834709405899048, -0.18611161410808563, -2.806771755218506, -1.406327486038208, -0.6352373361587524, -0.012861043214797974, -0.044138554483652115, -0.019593268632888794, -0.0033094894606620073, -0.010105163790285587, -0.463736355304718, -0.027072545140981674, -0.0002079985715681687, -0.13536286354064941, -0.06650560349225998, -0.6690595149993896, -2.1046180725097656, -0.15728631615638733, -0.6957034468650818, -3.731181277544238e-05, -2.5629668016335927e-05, -1.3802001476287842, -0.03949000686407089, -0.09928064793348312, -0.08779067546129227, -0.00492158392444253, -0.006592311896383762, -0.004146312829107046, -0.0019733496010303497, -0.09667021036148071, -4.255681051290594e-05, -0.00030083899036981165, -0.008116004057228565, -0.008208231069147587, -4.23184028477408e-05, -0.0034661947283893824, -0.0019646643195301294, -0.003296776209026575, -0.04545043408870697, -0.08624105155467987, -0.006647615227848291, -0.001922665280289948, -0.11458098888397217, -0.0002256377338198945, -0.00018892886873800308, -0.01431740541011095, -0.0040638018399477005, -0.04851669445633888, -0.008496682159602642, -0.3442457914352417, -3.279541015625, -0.0683673545718193, -1.3090260028839111, -0.011262061074376106, -0.016533859074115753, -0.24455666542053223, -0.0053245872259140015, -0.0018604366341605783, -0.1636379212141037, -0.09563233703374863, -0.008964057080447674, -0.0003209791029803455, -0.0005152089870534837, -0.0007413261337205768, -0.00019965562387369573, -0.0003307510633021593, -0.0012055517872795463, -0.0002641328901518136, -0.0011461363174021244, -0.0005435658385977149, -0.0015287628630176187, -0.024347346276044846, -0.004583211150020361, -0.0012731788447126746, -0.0003962923656217754, -0.020419035106897354, -5.876845170860179e-05, -5.245195097813848e-06, -1.4324456453323364, -0.0019234981155022979, -0.020032819360494614, -3.0636318115284666e-05, -0.0004015354788862169, -0.3042554259300232, -0.07148278504610062, -0.006114704068750143, -0.002713095862418413, -0.11874419450759888, -0.002586236223578453, -0.358982115983963, -8.415821503149346e-05, -2.7418097943154862e-06, -0.4763108193874359, -0.004404130857437849, -0.0008481719414703548, -0.6819518208503723, -0.0669570118188858, -0.00034767304896377027, -0.00012230125139467418, -2.3996570110321045, -2.490285634994507, -0.29465338587760925], "finish_reason": "stop"}], "metrics": {"energy": 145.82222565746304, "energy_per_token": 1.0643958077187083, "time": 5.873402, "time_per_token": 0.042871547445255474}}
{"outputs": [{"text": "# Check if the Excel file exists at the specified path\n    if not os.path.exists(excel_file_path + file_name):\n        raise FileNotFoundError('Excel file not found at the specified path')\n\n    # Load the data from the Excel file\n    df = pd.read_excel(excel_file_path + file_name)\n    # Check if the specified column exists in the Excel file\n    if column_name not in df.columns:\n        raise ValueError(f'Column {column_name} not found in the Excel file')\n    # Calculate the mean, median, and standard deviation of the data\n    stats = {'mean': np.mean(df[column_name]),\n             'median': np.median(df[column_name]),\n             'std_dev': np.std(df[column_name])}\n    return stats", "tokens": ["#", " Check", " if", " the", " Excel", " file", " exists", " at", " the", " specified", " path", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Excel", " file", " not", " found", " at", " the", " specified", " path", "')", "\n", "\n", "    ", "#", " Load", " the", " data", " from", " the", " Excel", " file", "\n", "    ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ")", "\n", "    ", "#", " Check", " if", " the", " specified", " column", " exists", " in", " the", " Excel", " file", "\n", "    ", "if", " column", "_", "name", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "Column", " {", "column", "_", "name", "}", " not", " found", " in", " the", " Excel", " file", "')", "\n", "    ", "#", " Calculate", " the", " mean", ",", " median", ",", " and", " standard", " deviation", " of", " the", " data", "\n", "    ", "stats", " =", " {'", "mean", "':", " np", ".", "mean", "(", "df", "[", "column", "_", "name", "])", ",", "\n", "             ", "'", "med", "ian", "':", " np", ".", "med", "ian", "(", "df", "[", "column", "_", "name", "])", ",", "\n", "             ", "'", "std", "_", "dev", "':", " np", ".", "std", "(", "df", "[", "column", "_", "name", "]", ")}", "\n", "    ", "return", " stats", "\n", "\n", "def"], "logprobs": [-1.9811408519744873, -1.3575598001480103, -0.2752966284751892, -0.2769223153591156, -0.25010213255882263, -0.0025643580593168736, -0.02338683232665062, -0.7764919400215149, -0.006077381316572428, -0.17306680977344513, -0.014658140018582344, -0.16652008891105652, -0.0016955060418695211, -0.1841890513896942, -0.038524895906448364, -0.009005170315504074, -1.07287787614041e-05, -0.00035577642847783864, -0.0028505190275609493, -0.3386211395263672, -0.0018845908343791962, -0.050117116421461105, -6.198863957251888e-06, -2.038458114839159e-05, -6.997340824455023e-05, -7.1403817855753e-05, -4.351044481154531e-05, -1.0275293588638306, -0.08510787785053253, -0.00023338454775512218, -2.6464111215318553e-05, -0.016769982874393463, -0.003336103865876794, -0.0011522090062499046, -0.04453108087182045, -0.006065414287149906, -7.021180499577895e-05, -4.9232225137529895e-05, -1.5482697486877441, -0.8259449601173401, -0.024693984538316727, -0.21253834664821625, -0.0021950930822640657, -0.9103125333786011, -0.6476636528968811, -0.05230480805039406, -0.006455994211137295, -0.7251183390617371, -0.0005654881824739277, -0.15759307146072388, -0.0014277036534622312, -0.06733354926109314, -1.2658255100250244, -0.08858755230903625, -1.352988362312317, -0.16486813127994537, -0.026405293494462967, -0.043620236217975616, -0.006862997077405453, -0.723296046257019, -0.0007859955076128244, -0.39038097858428955, -0.007353027816861868, -0.00785878673195839, -0.00019727191829588264, -0.020204098895192146, -3.6238969187252223e-05, -0.0006515049026347697, -4.327203714638017e-05, -0.003122813068330288, -0.014517277479171753, -3.111314072157256e-05, -9.536738616588991e-07, -4.327203714638017e-05, -5.960462772236497e-07, -3.099436753473128e-06, -0.010250896215438843, -0.0015215021558105946, -2.3841830625315197e-06, -2.145764938177308e-06, -1.2686823606491089, -0.016721799969673157, -2.7080438137054443, -1.3814891576766968, -0.3878902494907379, -0.036535438150167465, -0.013919421471655369, -0.18790534138679504, -0.0016457597957924008, -0.5716560482978821, -0.3097650408744812, -0.0011731653939932585, -0.17565689980983734, -0.006242301780730486, -0.01974744349718094, -0.002654007636010647, -0.10658001154661179, -0.17196820676326752, -1.966933996300213e-05, -0.00027044929447583854, -0.013949986547231674, -1.2636104656849056e-05, -0.03596394509077072, -0.161648690700531, -0.010423977859318256, -0.004953612107783556, -0.0006625840906053782, -0.0010601620888337493, -0.004774242173880339, -0.0038928219582885504, -7.748573807475623e-06, -1.1471494436264038, -0.34657686948776245, -0.5358454585075378, -0.19195425510406494, -0.34622713923454285, -0.00218129507265985, -0.00011240804451517761, -4.434487345861271e-05, -0.03609319403767586, -0.06708098202943802, -0.006884426344186068, -0.019032593816518784, -0.6047880053520203, -0.021416708827018738, -0.0012403184082359076, -0.037059277296066284, -0.00026770823751576245, -1.5081664323806763, -0.22265839576721191, -0.5755320191383362, -0.09227986633777618, -0.2633475065231323, -0.0816381424665451, -0.002009041141718626, -0.008245119825005531, -0.006822860799729824, -0.00856062676757574, -0.003953143022954464, -1.2966946363449097, -0.008365589193999767, -0.30141937732696533, -0.8265679478645325, -0.003358677960932255, -2.961714506149292, -0.023216795176267624, -1.8227338790893555, -0.002447825390845537, -0.0010009760735556483, -1.1200358867645264, -2.6225699912174605e-05, -0.04506396874785423, -0.0014403217937797308, -0.0029432333540171385, -0.02003527246415615, -0.0006280356901697814, -2.4437606043647975e-05, -1.0728830375228426e-06, -0.028882872313261032, -0.002557104919105768, -0.39565205574035645, -0.08034508675336838, -0.0008373330347239971, -0.0005383234238252044, -0.000390215078368783, -0.0004536076739896089, -0.005583168473094702, -0.0008279233006760478, -0.0006644901586696506, -0.00017987063620239496, -0.0002914242504630238, -0.0002335037279408425, -0.0004884004010818899, -1.0609570381348021e-05, -1.7881377516459906e-06, -1.1920928244535389e-07, -0.0010403940686956048, -0.00021765247220173478, -0.007017134223133326, -0.0009971652179956436, -0.0007290565990842879, -0.00827846024185419, -0.00227074115537107, -0.0005459486856125295, -0.00043585337698459625, -0.01977713033556938, -0.0003946240758523345, -0.0010091932490468025, -0.00037901371251791716, -0.0006328010931611061, -0.0004880429187323898, -9.775113539944869e-06, -5.960462772236497e-07, 0.0, -0.025757579132914543, -0.01967450976371765, -0.0011328000109642744, -0.31454235315322876, -0.2717229723930359, -0.0035930618178099394, -0.6521540284156799, -0.01786123774945736, -0.21308055520057678], "finish_reason": "stop"}], "metrics": {"energy": 218.28015708160413, "energy_per_token": 1.0752717097615967, "time": 9.046872, "time_per_token": 0.04456587192118227}}
{"outputs": [{"text": "# --------------------------------------------------------------------------------------------------------------\n\n    file_path = excel_file_path + file_name\n    column = column_name\n    try:\n        df = pd.read_excel(file_path)\n\n        column_data = df[column]\n\n        mean = np.mean(column_data)\n        median = np.median(column_data)\n        std_dev = np.std(column_data)\n\n        return {'mean': mean, 'median': median, 'std_dev': std_dev}\n    except FileNotFoundError:\n        raise FileNotFoundError(\"The excel file was not found at the specified path.\")\n    except ValueError:\n        raise ValueError(\"The specified column is not found in the Excel file.\")", "tokens": ["#", " ", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "--", "\n", "\n", "    ", "file", "_", "path", " =", " excel", "_", "file", "_", "path", " +", " file", "_", "name", "\n", "    ", "column", " =", " column", "_", "name", "\n", "    ", "try", ":", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "file", "_", "path", ")", "\n", "\n", "        ", "column", "_", "data", " =", " df", "[", "column", "]", "\n", "\n", "        ", "mean", " =", " np", ".", "mean", "(", "column", "_", "data", ")", "\n", "        ", "med", "ian", " =", " np", ".", "med", "ian", "(", "column", "_", "data", ")", "\n", "        ", "std", "_", "dev", " =", " np", ".", "std", "(", "column", "_", "data", ")", "\n", "\n", "        ", "return", " {'", "mean", "':", " mean", ",", " '", "med", "ian", "':", " median", ",", " '", "std", "_", "dev", "':", " std", "_", "dev", "}", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " excel", " file", " was", " not", " found", " at", " the", " specified", " path", ".", "\"", ")", "\n", "    ", "except", " Value", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " specified", " column", " is", " not", " found", " in", " the", " Excel", " file", ".", "\"", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.9811408519744873, -4.141147136688232, -1.6870594024658203, -0.2882206439971924, -0.042659446597099304, -0.046681299805641174, -0.0446983277797699, -0.04206104204058647, -0.03505170717835426, -0.01670655980706215, -0.031286511570215225, -0.03193942829966545, -0.03498034179210663, -0.01961583085358143, -0.02210630290210247, -0.10898227244615555, -0.018934108316898346, -0.017261745408177376, -0.029068276286125183, -0.022141048684716225, -0.05663243681192398, -0.04883905127644539, -0.03845090791583061, -0.08785061538219452, -0.05712401494383812, -0.13618849217891693, -0.1463705599308014, -0.10624390840530396, -0.10989831387996674, -0.08254213631153107, -0.09900902956724167, -0.08420006930828094, -0.09054621309041977, -0.08860522508621216, -0.07242726534605026, -0.05391883850097656, -0.05942339450120926, -0.0738651305437088, -1.783461332321167, -0.45848241448402405, -2.1730759143829346, -0.004319266881793737, -3.694014549255371, -0.15133102238178253, -0.1613156944513321, -0.03444412350654602, -0.6898629665374756, -8.95221673999913e-05, -0.0009107018122449517, -0.0004164305282756686, -0.00018809456378221512, -0.044185321778059006, -0.1412585824728012, -0.0005526207387447357, -3.3378044463461265e-05, -0.033920757472515106, -0.3705463409423828, -3.49813175201416, -1.0387877225875854, -0.16152212023735046, -0.0005796659388579428, -0.0001209901092806831, -0.022667353972792625, -0.6847967505455017, -2.253038167953491, -0.0026377192698419094, -0.00429623993113637, -0.03716403618454933, -0.5691185593605042, -0.02536807395517826, -0.014633351936936378, -9.226373367710039e-05, -0.01895024999976158, -6.723177648382261e-05, -0.0019397982396185398, -0.00010215714428341016, -0.0008693729760125279, -0.029607845470309258, -0.001342587056569755, -0.0008537700050510466, -0.9644136428833008, -0.022016631439328194, -2.9931890964508057, -0.8439558148384094, -1.7834657430648804, -0.064476877450943, -1.5722235441207886, -0.028578346595168114, -0.08416412770748138, -0.05047601833939552, -0.002987685613334179, -0.06097988784313202, -0.27082955837249756, -0.9223799705505371, -0.016031648963689804, -0.6850130558013916, -0.09406466782093048, -0.9284655451774597, -4.8397800128441304e-05, -0.04345554858446121, -0.001105650793761015, -0.007189355790615082, -0.0005671561229974031, -5.960446742392378e-06, -0.03892260789871216, -0.019029084593057632, -0.03950272873044014, -0.009788726456463337, -0.0020525832660496235, -0.001690983772277832, -0.015475546941161156, -0.000713213172275573, -0.0008082698914222419, -0.00013612773909699172, -0.0006896263221278787, -0.0007194076315499842, -5.8053239627042785e-05, -3.099436753473128e-06, -0.002158218529075384, -0.0010900514898821712, -0.026709552854299545, -0.10702396929264069, -0.07674846798181534, -0.0197382103651762, -0.002141208155080676, -0.037467796355485916, -0.001193526084534824, -0.0016914597945287824, -0.00034683887497521937, -0.0009446449112147093, -3.862306402879767e-05, -1.311301275563892e-06, -0.060665909200906754, -0.0025895654689520597, -0.1960151493549347, -0.07602131366729736, -0.8522870540618896, -0.7823496460914612, -0.005654056090861559, -0.004541202913969755, -0.13802161812782288, -0.0011600677389651537, -0.0480172298848629, -0.000442407006630674, -0.0001433984871255234, -0.00032217081752605736, -0.0014559156261384487, -0.000179036331246607, -0.004651796538382769, -0.009979946538805962, -0.0038592161145061255, -0.0013221102999523282, -0.00047565114800818264, -0.019333023577928543, -5.757642793469131e-05, -6.318072337307967e-06, -0.00862645823508501, -0.0022149572614580393, -1.0379400253295898, -0.010317795909941196, -0.25631460547447205, -7.617183291586116e-05, -6.318072337307967e-06, -0.2860170304775238, -0.0037450906820595264, -0.008900020271539688, -0.874975323677063, -0.05430946126580238, -0.0003911683743353933, -0.00015805903240107, -0.34064817428588867, -0.862041175365448, -1.690193772315979, -3.618995189666748, -0.03182615712285042, -3.0413899421691895, -0.009611756540834904, -0.013824544847011566, -1.1934932470321655, -0.19248589873313904, -0.2713906168937683, -0.05842595174908638, -0.4662211537361145, -0.09923779219388962, -0.020947881042957306, -0.022672714665532112, -0.15511639416217804, -0.019360268488526344, -0.23711222410202026, -2.396077979938127e-05, -0.056143321096897125, -0.013499638997018337, -0.0016825341153889894, -0.019771287217736244, -0.009144685231149197, -4.4225667807040736e-05, -0.015019074082374573, -0.3850279450416565, -0.11673471331596375, -0.16758446395397186, -0.013209332711994648, -0.5499265193939209, -0.010603752918541431, -0.0534941628575325, -0.009660282172262669, -0.002258847001940012, -0.1514323502779007, -0.0022401732858270407, -0.013593252748250961, -0.012364049442112446, -1.7210536003112793, -2.145764938177308e-06, -2.145764938177308e-06, -0.00031382881570607424, -7.223821739898995e-05, -1.7833251953125, -0.002619646955281496], "finish_reason": "stop"}], "metrics": {"energy": 228.67483903121945, "energy_per_token": 1.0538011015263569, "time": 9.678226, "time_per_token": 0.04460011981566821}}
{"outputs": [{"text": "stats = {}\n\n    # Check if the Excel file exists at the specified path\n    if not os.path.exists(excel_file_path + file_name):\n        raise FileNotFoundError('File not found')\n\n    # Load the Excel file\n    df = pd.read_excel(excel_file_path + file_name)\n\n    # Check if the column exists\n    if column_name not in df.columns:\n        raise ValueError(\n            'Invalid column name: ' + column_name + '. Please try again.')\n\n    # Calculate the mean\n    stats['mean'] = df[column_name].mean()\n\n    # Calculate the median\n    stats['median'] = df[column_name].median()\n\n    # Calculate the standard deviation\n    stats['std_dev'] = df[column_name].std()\n\n    return stats", "tokens": ["stats", " =", " {}", "\n", "\n", "    ", "#", " Check", " if", " the", " Excel", " file", " exists", " at", " the", " specified", " path", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "File", " not", " found", "')", "\n", "\n", "    ", "#", " Load", " the", " Excel", " file", "\n", "    ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " column", " exists", "\n", "    ", "if", " column", "_", "name", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\n", "            ", "'", "Invalid", " column", " name", ":", " '", " +", " column", "_", "name", " +", " '", ".", " Please", " try", " again", ".", "')", "\n", "\n", "    ", "#", " Calculate", " the", " mean", "\n", "    ", "stats", "['", "mean", "']", " =", " df", "[", "column", "_", "name", "]", ".", "mean", "()", "\n", "\n", "    ", "#", " Calculate", " the", " median", "\n", "    ", "stats", "['", "med", "ian", "']", " =", " df", "[", "column", "_", "name", "]", ".", "med", "ian", "()", "\n", "\n", "    ", "#", " Calculate", " the", " standard", " deviation", "\n", "    ", "stats", "['", "std", "_", "dev", "']", " =", " df", "[", "column", "_", "name", "]", ".", "std", "()", "\n", "\n", "    ", "return", " stats", "\n", "\n", "def"], "logprobs": [-1.7696254253387451, -0.06074713170528412, -0.5395510792732239, -0.013363435864448547, -1.7303577661514282, -0.0009604846709407866, -1.3679922819137573, -0.9705978631973267, -0.23045754432678223, -0.2894178628921509, -0.2923598289489746, -0.002672554925084114, -0.018450304865837097, -0.6879664063453674, -0.0064749447628855705, -0.17255111038684845, -0.01734774373471737, -0.16264744102954865, -0.0008512687054462731, -0.27839648723602295, -0.07314097136259079, -0.011905918829143047, -1.3232143828645349e-05, -0.000387831823900342, -0.0036893889773637056, -0.3606871962547302, -0.002205917378887534, -0.05831889808177948, -6.198863957251888e-06, -2.8609820219571702e-05, -8.272782724816352e-05, -0.00014745102089364082, -3.957670196541585e-05, -1.2290489673614502, -0.08145564049482346, -0.0002544794406276196, -2.6464111215318553e-05, -0.018786242231726646, -0.003424733877182007, -0.0012001938885077834, -0.044571783393621445, -0.005623236298561096, -7.331102824537084e-05, -4.172238186583854e-05, -1.6497551202774048, -1.3828219175338745, -0.17249904572963715, -0.0069986674934625626, -0.8096303343772888, -0.0009308296139352024, -0.06781622022390366, -0.0013077049516141415, -0.12669271230697632, -1.2516474723815918, -0.12085951119661331, -0.3207799792289734, -0.06527333706617355, -1.9504152536392212, -0.0006884350441396236, -0.36714062094688416, -0.009638558141887188, -0.0077254800125956535, -0.0002671123365871608, -0.03303064405918121, -2.4437606043647975e-05, -0.0005193791585043073, -6.174850568640977e-05, -0.0025609098374843597, -0.0168202705681324, -4.672895011026412e-05, -7.152555099310121e-07, -6.651657167822123e-05, -7.152555099310121e-07, -2.861018856492592e-06, -0.010363101959228516, -0.0016844383208081126, -3.099436753473128e-06, -2.9802276912960224e-06, -0.64356529712677, -0.01358901895582676, -0.06483972072601318, -0.000302030734019354, -0.018626537173986435, -0.2636905908584595, -0.01326050702482462, -0.011010014452040195, -1.651896595954895, -0.33610406517982483, -0.6007133722305298, -0.00043847484630532563, -0.11645442992448807, -0.23325499892234802, -2.95634672511369e-05, -0.00022742546570952982, -0.021532917395234108, -8.22540732769994e-06, -0.03398309648036957, -0.11024247854948044, -0.012321896851062775, -0.004894418641924858, -0.000521523819770664, -0.00043704494601115584, -0.00485835550352931, -0.0036620714236050844, -7.867782187531702e-06, -1.3738926649093628, -3.0439014434814453, -0.0040800669230520725, -1.2414007186889648, -2.986783027648926, -0.034647613763809204, -0.1138223260641098, -1.2255773544311523, -0.7211035490036011, -0.06226785480976105, -0.09268274158239365, -6.317892984952778e-05, -3.45700973412022e-05, -1.0529520511627197, -0.21383850276470184, -0.18731600046157837, -1.6121097803115845, -2.9661309719085693, -0.09598004072904587, -0.462412029504776, -0.021757831797003746, -0.00036590558011084795, -0.02635931596159935, -0.0006361367995850742, -0.12716153264045715, -0.5916616320610046, -0.2549974322319031, -0.44650864601135254, -1.55147123336792, -0.0004111875023227185, -0.13096550107002258, -0.02668123133480549, -0.00047088501742109656, -0.00018594920402392745, -0.0012063853209838271, -0.2877051830291748, -0.01882239244878292, -0.0009517907164990902, -9.536738616588991e-07, -9.536738616588991e-07, -0.001053731539286673, -5.5549986427649856e-05, -0.003250911831855774, -0.005081832408905029, -0.004388701636344194, -0.06312303990125656, -0.00034481301554478705, -0.00197168393060565, -0.033381201326847076, -0.002712501445785165, -0.00522094639018178, -0.011739220470190048, -8.844937838148326e-05, -0.012821147218346596, -0.0006761648692190647, -0.00012385078298393637, -0.0001858300092862919, -5.328513361746445e-05, -0.0002540027489885688, -0.2033039778470993, -0.0013484203955158591, -0.00013600854435935616, -4.768360213347478e-06, -3.576278118089249e-07, -0.0004655231023207307, -2.8490614567999728e-05, -0.005167817231267691, -7.867782187531702e-06, -0.0010969580616801977, -0.0009663202799856663, -0.004246266558766365, -0.0002525725867599249, -0.0017810686258599162, -0.011880592443048954, -0.0021250303834676743, -0.007598899770528078, -0.0021692810114473104, -0.01757512241601944, -0.0003685271949507296, -0.024170026183128357, -0.0009866851614788175, -0.002233036793768406, -0.0006188622792251408, -0.0007876630988903344, -0.00011955977242905647, -0.0005445189890451729, -0.09050168097019196, -0.001404728856869042, -0.00027509720530360937, -2.145764938177308e-06, -1.1920928244535389e-07, -0.00024351492174901068, -2.3364747903542593e-05, -0.0014488924061879516, -0.02273692563176155, -0.006231758277863264, -0.027559733018279076, -0.0005874100024811924, -0.276718407869339, -0.00413171062245965, -0.6426799297332764, -0.007448757067322731, -0.21269775927066803], "finish_reason": "stop"}], "metrics": {"energy": 269.1623577785491, "energy_per_token": 1.2940497970122553, "time": 10.295448, "time_per_token": 0.049497346153846156}}
{"outputs": [{"text": "try:\n        stats_dict = {}\n        data = pd.read_excel(excel_file_path + file_name, sheet_name=None, index_col=None)\n        stats_dict = calculate_stats(column_name, data)\n        return stats_dict\n    except Exception as e:\n        raise FileNotFoundError(str(e))", "tokens": ["try", ":", "\n", "        ", "stats", "_", "dict", " =", " {}", "\n", "        ", "data", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ",", " sheet", "_", "name", "=", "None", ",", " index", "_", "col", "=", "None", ")", "\n", "        ", "stats", "_", "dict", " =", " calculate", "_", "stats", "(", "column", "_", "name", ",", " data", ")", "\n", "        ", "return", " stats", "_", "dict", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "str", "(", "e", "))", "\n", "\n", "def"], "logprobs": [-1.7448699474334717, -0.0009943069890141487, -0.005875577684491873, -0.01621909812092781, -3.290855884552002, -2.2751994132995605, -0.6753490567207336, -0.007480112835764885, -0.5357632040977478, -0.02279542200267315, -0.12956592440605164, -2.7155497074127197, -0.9294640421867371, -0.10429053753614426, -0.0001227780303452164, -0.05502256006002426, -0.0004887578543275595, -0.0017314456636086106, -0.00014149141497910023, -0.01562660187482834, -0.29711586236953735, -1.3351351299206726e-05, -7.033100700937212e-05, -0.00035958975786343217, -9.214453893946484e-05, -0.000125281119835563, -0.09468827396631241, -0.08263992518186569, -0.000514851592015475, -4.494089080253616e-05, -0.5696861147880554, -0.7858664393424988, -0.0013559204526245594, -0.00016258825780823827, -0.34492164850234985, -1.1989842653274536, -1.4217991828918457, -0.9652230143547058, -0.00048458753735758364, -0.022871507331728935, -0.02584075927734375, -0.22168728709220886, -0.3333583176136017, -0.04691052436828613, -0.08600447326898575, -2.4887189865112305, -0.17620638012886047, -0.2352946698665619, -2.1851611137390137, -3.330267906188965, -0.03103703446686268, -0.23684999346733093, -0.08968409150838852, -2.9397177696228027, -0.06189119815826416, -0.00582094257697463, -0.015686102211475372, -0.04169830307364464, -0.21268436312675476, -0.0033231531269848347, -0.32682523131370544, -0.0751766487956047, -0.01799987256526947, -6.890059739816934e-05, -8.34461570775602e-06, -0.003257922362536192, -0.15213045477867126, -0.0040491982363164425, -1.84939444065094, -0.07766229659318924, -0.2871042788028717, -0.001379134482704103, -0.009574446827173233, -0.0017655988922342658, -1.0587434768676758, -1.5301271677017212, -0.0010669498005881906, -0.00018845213344320655, -0.17643533647060394, -1.8851429224014282, -0.0005731132114306092, -0.003185557434335351, -0.04568404331803322, -0.045582108199596405, -0.05394989997148514, -0.026032766327261925], "finish_reason": "stop"}], "metrics": {"energy": 100.35652215957643, "energy_per_token": 1.1669363041811212, "time": 3.590352, "time_per_token": 0.04174827906976744}}
{"outputs": [{"text": "# Check the existence of the Excel file\n    if not os.path.exists(excel_file_path + file_name):\n        raise FileNotFoundError('Excel file not found at the specified path')\n\n    # Load the Excel file into a DataFrame\n    try:\n        df = pd.read_excel(excel_file_path + file_name)\n    except (ValueError, TypeError):\n        raise ValueError('The specified column is not found in the Excel file')\n\n    # Extract the data from the column and calculate the statistics\n    column_data = df[column_name]\n    mean = np.mean(column_data)\n    median = np.median(column_data)\n    std_dev = np.std(column_data)\n\n    # Return the results as a dictionary\n    return {'mean': mean, 'median': median, 'std_dev': std_dev}", "tokens": ["#", " Check", " the", " existence", " of", " the", " Excel", " file", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Excel", " file", " not", " found", " at", " the", " specified", " path", "')", "\n", "\n", "    ", "#", " Load", " the", " Excel", " file", " into", " a", " Data", "Frame", "\n", "    ", "try", ":", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ")", "\n", "    ", "except", " (", "Value", "Error", ",", " Type", "Error", "):", "\n", "        ", "raise", " Value", "Error", "('", "The", " specified", " column", " is", " not", " found", " in", " the", " Excel", " file", "')", "\n", "\n", "    ", "#", " Ext", "ract", " the", " data", " from", " the", " column", " and", " calculate", " the", " statistics", "\n", "    ", "column", "_", "data", " =", " df", "[", "column", "_", "name", "]", "\n", "    ", "mean", " =", " np", ".", "mean", "(", "column", "_", "data", ")", "\n", "    ", "med", "ian", " =", " np", ".", "med", "ian", "(", "column", "_", "data", ")", "\n", "    ", "std", "_", "dev", " =", " np", ".", "std", "(", "column", "_", "data", ")", "\n", "\n", "    ", "#", " Return", " the", " results", " as", " a", " dictionary", "\n", "    ", "return", " {'", "mean", "':", " mean", ",", " '", "med", "ian", "':", " median", ",", " '", "std", "_", "dev", "':", " std", "_", "dev", "}"], "logprobs": [-1.9811408519744873, -1.3575598001480103, -3.1260085105895996, -2.379549026489258, -0.01691439561545849, -0.07803934067487717, -0.2336592674255371, -0.002841128269210458, -0.31131571531295776, -0.002336750039830804, -0.45074135065078735, -0.03955074027180672, -0.01193678192794323, -9.417489309271332e-06, -0.000388665939681232, -0.0027048927731812, -0.39337411522865295, -0.004264309536665678, -0.06710728257894516, -5.960446742392378e-06, -1.847726889536716e-05, -0.00011622230522334576, -0.0001560327800689265, -4.0411134250462055e-05, -0.8771281242370605, -0.04848875850439072, -0.00027426297310739756, -2.8729025871143676e-05, -0.013579257763922215, -0.004554019309580326, -0.0013750869547948241, -0.04548870772123337, -0.006479327101260424, -9.965400386136025e-05, -3.8742269680369645e-05, -1.7622876167297363, -0.79953932762146, -0.020207837224006653, -0.2339436560869217, -0.0031509771943092346, -1.0408670902252197, -0.7747110724449158, -0.10887590050697327, -0.01339966431260109, -0.8283060789108276, -0.0006232702871784568, -0.12886036932468414, -0.001262106467038393, -0.07725431770086288, -1.4197707176208496, -0.1006396934390068, -0.28847724199295044, -0.08697807788848877, -1.7470744848251343, -0.07155092805624008, -0.971864640712738, -0.0036460370756685734, -0.11851857602596283, -0.000607782625593245, -2.325580358505249, -0.00010907054820563644, -0.0009270184673368931, -0.001620647613890469, -0.18395303189754486, -0.0070983367040753365, -0.006500290706753731, -9.63164638960734e-05, -0.0335046760737896, -2.634490556374658e-05, -0.0004954302567057312, -6.031808152329177e-05, -0.003419863060116768, -0.014930526725947857, -4.3748852476710454e-05, -5.8412379075889476e-06, -6.0794889577664435e-05, -2.3841855067985307e-07, -2.264974000354414e-06, -0.009173979051411152, -0.0012360322289168835, -1.0728830375228426e-06, -2.145764938177308e-06, -1.2853838205337524, -0.0110238092020154, -0.06135094538331032, -0.0007103541865944862, -4.2646098136901855, -1.6238991022109985, -1.7165990357170813e-05, -0.01603282243013382, -1.0936473608016968, -3.576272320060525e-06, -0.9021303653717041, -0.020198609679937363, -0.0005952732171863317, -0.05339618772268295, -0.024367008358240128, -1.2755313036905136e-05, -0.17294277250766754, -1.4932117462158203, -0.16760675609111786, -0.041746098548173904, -0.2443910539150238, -0.051037129014730453, -0.1896345019340515, -0.033631131052970886, -0.01380138285458088, -0.02750510908663273, -0.0020719743333756924, -0.06559837609529495, -0.020863359794020653, -0.04494373872876167, -0.0005043664714321494, -0.05823196470737457, -1.3301838636398315, -0.00222090445458889, -0.05042059347033501, -1.1843394041061401, -0.19130930304527283, -0.006676154211163521, -2.1037774085998535, -1.5351850986480713, -0.7724567651748657, -0.5279617309570312, -0.566749095916748, -0.022273730486631393, -0.002405846491456032, -0.662075936794281, -0.3126424252986908, -0.14088186621665955, -0.0045351507142186165, -0.059329140931367874, -0.010160863399505615, -0.0018665050156414509, -5.006777428206988e-06, -4.172316494077677e-06, -0.0008814025786705315, -0.3597506582736969, -0.08331841975450516, -0.3753478527069092, -0.15620459616184235, -1.0267231464385986, -2.3364747903542593e-05, -0.05892844870686531, -0.0003960540343541652, -0.001668134005740285, -0.00010573305189609528, -1.6689286894688848e-06, -0.03215174376964569, -0.021969284862279892, -0.00128020322881639, -0.002717019058763981, -0.0007180972606875002, -0.0007154765771701932, -0.014965406619012356, -0.00018916724366135895, -0.00047636605449952185, -0.00012206286191940308, -0.0002790300059132278, -0.00019500737835187465, -2.622600959512056e-06, -1.0728830375228426e-06, -0.0013391345273703337, -0.0015593523858115077, -0.002336155390366912, -0.03974093496799469, -0.037237200886011124, -0.00459400936961174, -0.0007116645574569702, -0.02698703110218048, -0.000289159914245829, -0.0012766314903274179, -0.00026723151677288115, -0.0003077510336879641, -1.7881377516459906e-06, -4.768370445162873e-07, -0.06975569576025009, -0.005047198850661516, -0.13862411677837372, -0.00024244230007752776, -0.28714337944984436, -0.4028744399547577, -0.20242652297019958, -1.1048420667648315, -0.3237340450286865, -0.005244663450866938, -0.014688448049128056, -0.01971191167831421, -0.00022313489171210676, -0.11527767032384872, -0.42841121554374695, -0.0018504415638744831, -0.0011819765204563737, -0.0640321746468544, -0.0003058442671317607, -0.020575184375047684, -0.0002706876548472792, -3.0278701160568744e-05, -0.00010096516780322418, -0.0005409446312114596, -6.854299135738984e-05, -0.0009233264136128128, -0.005617901682853699, -0.0026188145857304335, -0.0004120216181036085, -0.000161038784426637, -0.006201192736625671, -4.8993817472364753e-05, -9.894321920000948e-06, -0.36805713176727295], "finish_reason": "stop"}], "metrics": {"energy": 224.43760582733162, "energy_per_token": 1.0687505039396743, "time": 9.253111, "time_per_token": 0.04406243333333334}}
{"outputs": [{"text": "stats = None\n    # Write your code here\n    file_path = excel_file_path + file_name\n    if not os.path.isfile(file_path):\n        raise FileNotFoundError(\"File not found\")\n    df = pd.read_excel(file_path)\n    column = df[column_name]\n    stats = {\n        'mean': column.mean(),\n        'median': np.median(column),\n        'std_dev': column.std(),\n    }\n    return stats", "tokens": ["stats", " =", " None", "\n", "    ", "#", " Write", " your", " code", " here", "\n", "    ", "file", "_", "path", " =", " excel", "_", "file", "_", "path", " +", " file", "_", "name", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "File", " not", " found", "\"", ")", "\n", "    ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "file", "_", "path", ")", "\n", "    ", "column", " =", " df", "[", "column", "_", "name", "]", "\n", "    ", "stats", " =", " {", "\n", "        ", "'", "mean", "':", " column", ".", "mean", "()", ",", "\n", "        ", "'", "med", "ian", "':", " np", ".", "med", "ian", "(", "column", ")", ",", "\n", "        ", "'", "std", "_", "dev", "':", " column", ".", "std", "()", ",", "\n", "    ", "}", "\n", "    ", "return", " stats", "\n", "\n", "def"], "logprobs": [-1.7696254253387451, -0.06074713170528412, -2.818908929824829, -0.017466887831687927, -0.3207944333553314, -2.4832019805908203, -2.8581957817077637, -0.10769414901733398, -0.10991358757019043, -0.05540091171860695, -0.29424357414245605, -0.22809049487113953, -3.6195409297943115, -0.12019525468349457, -0.11135692149400711, -0.026330288499593735, -0.5404890775680542, -0.0001380348257953301, -0.0007469248375855386, -9.417090768693015e-05, -0.0002631794777698815, -0.07358385622501373, -0.18514811992645264, -0.0002015625941567123, -4.5298504119273275e-05, -0.01895352452993393, -0.24487464129924774, -1.2379571199417114, -0.6841676831245422, -0.021945960819721222, -1.7046782886609435e-05, -0.0010712367948144674, -0.006270141340792179, -1.419584035873413, -0.02497946470975876, -0.0006243425305001438, -0.007418347522616386, -0.00013469743134919554, -0.0001802282058633864, -0.008571619167923927, -0.018661756068468094, -0.010052056983113289, -0.08673720061779022, -0.01778102107346058, -0.0002060916303889826, -0.00013505500101018697, -0.3682575225830078, -0.5671570897102356, -0.6167430281639099, -0.21263203024864197, -0.017676202580332756, -0.8061375617980957, -0.0028229409363120794, -0.007201073225587606, -0.6739534735679626, -0.7468651533126831, -0.016852974891662598, -0.017690608277916908, -0.00023016665363684297, -0.009058568626642227, -4.9828242481453344e-05, -0.00195229088421911, -0.00011753345461329445, -0.0005286726518534124, -0.08582058548927307, -0.001190787530504167, -0.0025206005666404963, -1.572404384613037, -0.02134844660758972, -0.0804896205663681, -1.197969675064087, -0.48677363991737366, -0.038421083241701126, -0.10634627193212509, -0.0024562685284763575, -0.00013886917440686375, -6.794906312279636e-06, -0.001328301033936441, -0.08248692005872726, -0.12117331475019455, -1.0392860174179077, -0.038666658103466034, -0.7573702335357666, -0.00929197482764721, -0.03144432231783867, -0.49807026982307434, -0.008159635588526726, -0.0036680102348327637, -0.36858394742012024, -0.003118178341537714, -0.0027430548798292875, -0.0024562685284763575, -0.0031540668569505215, -0.004809596575796604, -0.0006805725861340761, -0.0010707604233175516, -0.002419046824797988, -0.0007824220228940248, -0.0005958688561804593, -1.7355318069458008, -0.00011062010162277147, -0.004776733461767435, -0.0004407388041727245, -0.001427346607670188, -0.0036762054078280926, -0.02383333258330822, -0.0013467537937685847, -0.011726024560630322, -0.00265852571465075, -0.005051113199442625, -0.014976797625422478, -0.0035088418517261744, -0.0008036244544200599, -0.0006859333370812237, -0.5469513535499573, -0.0007308434578590095, -0.0022657455410808325, -0.02536853961646557, -1.5353467464447021, -0.0076639666222035885, -0.058363765478134155, -0.00048387263086624444, -0.0005698964232578874, -0.13202910125255585, -0.029607729986310005, -0.0026415237225592136, -0.5051977038383484, -0.02444169484078884, -0.21595223248004913], "finish_reason": "stop"}], "metrics": {"energy": 142.50811397361753, "energy_per_token": 1.1047140618109885, "time": 5.8995533, "time_per_token": 0.045732971317829454}}
{"outputs": [{"text": "try:\n        df = pd.read_excel(os.path.join(excel_file_path, file_name),\n                           sheet_name=column_name, index_col=0)\n\n        col_mean = df[column_name].mean()\n        col_median = df[column_name].median()\n        col_std = df[column_name].std()\n\n    except FileNotFoundError as e:\n        print('Error:', str(e))\n        sys.exit(1)\n\n    except ValueError as e:\n        print('Error:', str(e))\n        sys.exit(1)\n\n    return {\n        'mean': col_mean,\n        'median': col_median,\n        'std_dev': col_std\n    }", "tokens": ["try", ":", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "os", ".", "path", ".", "join", "(", "ex", "cel", "_", "file", "_", "path", ",", " file", "_", "name", ")", ",", "\n", "                ", "           ", "sheet", "_", "name", "=", "column", "_", "name", ",", " index", "_", "col", "=", "0", ")", "\n", "\n", "        ", "col", "_", "mean", " =", " df", "[", "column", "_", "name", "]", ".", "mean", "()", "\n", "        ", "col", "_", "med", "ian", " =", " df", "[", "column", "_", "name", "]", ".", "med", "ian", "()", "\n", "        ", "col", "_", "std", " =", " df", "[", "column", "_", "name", "]", ".", "std", "()", "\n", "\n", "    ", "except", " File", "NotFound", "Error", " as", " e", ":", "\n", "        ", "print", "('", "Error", ":'", ",", " str", "(", "e", "))", "\n", "        ", "sys", ".", "exit", "(", "1", ")", "\n", "\n", "    ", "except", " Value", "Error", " as", " e", ":", "\n", "        ", "print", "('", "Error", ":'", ",", " str", "(", "e", "))", "\n", "        ", "sys", ".", "exit", "(", "1", ")", "\n", "\n", "    ", "return", " {", "\n", "        ", "'", "mean", "':", " col", "_", "mean", ",", "\n", "        ", "'", "med", "ian", "':", " col", "_", "med", "ian", ",", "\n", "        ", "'", "std", "_", "dev", "':", " col", "_", "std", "\n", "    ", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-1.7448699474334717, -0.0009943069890141487, -0.005875577684491873, -0.01621909812092781, -0.9617505073547363, -0.01848248764872551, -0.018168224021792412, -8.368142152903602e-05, -0.03592127934098244, -0.000120751719805412, -0.0017589349299669266, -0.00017808281700126827, -0.015213875100016594, -1.584916591644287, -1.2516897186287679e-05, -0.008302105590701103, -0.0024984830524772406, -0.03432502970099449, -0.0037682494148612022, -0.011961517855525017, -4.6491513785440475e-06, -1.3351351299206726e-05, -0.00011383838864276186, -2.9801878554280847e-05, -1.2993727978027891e-05, -0.001420085085555911, -0.02598653919994831, -3.576272320060525e-06, -1.1920858014491387e-05, -0.5675231218338013, -0.0012734169140458107, -1.6305761337280273, -0.017181480303406715, -0.09586068987846375, -0.6670860648155212, -0.00129413278773427, -0.0001817776501411572, -0.3577658534049988, -1.8834648132324219, -9.16677454370074e-05, -8.284702198579907e-05, -0.9898806810379028, -1.0044975280761719, -0.001111247343942523, -0.010229420848190784, -0.03187580779194832, -0.79729163646698, -0.13966147601604462, -0.03187176585197449, -2.6258490085601807, -0.17120696604251862, -3.7766194343566895, -0.36801570653915405, -1.546019196510315, -0.061381105333566666, -0.2886636555194855, -0.27227336168289185, -0.003958842717111111, -2.6464111215318553e-05, -3.3378546504536644e-06, -0.003081100294366479, -0.00043561504571698606, -0.006307338364422321, -0.006000361870974302, -0.01657114550471306, -0.009473725222051144, -0.024778300896286964, -0.0004539651272352785, -0.01447133719921112, -0.07244090735912323, -0.0008364992681890726, -0.073259636759758, -0.0020548435859382153, -0.00011526874004630372, -2.9802276912960224e-06, -1.0728830375228426e-06, -0.00035148640745319426, -1.549708758830093e-05, -0.007660417351871729, -9.894321920000948e-06, -0.0006492413813248277, -0.0021649987902492285, -0.014169560745358467, -0.017796127125620842, -0.00037579628406092525, -0.029601596295833588, -0.9383507370948792, -0.07203201204538345, -0.0014359173364937305, -0.00012134769349358976, -3.4570634852570947e-06, -3.576278118089249e-07, -0.00016711745411157608, -1.6093124941107817e-05, -0.0025469979736953974, -0.014402481727302074, -0.006636365316808224, -0.2579784393310547, -2.4387905597686768, -0.014704775996506214, -0.21470791101455688, -1.0132738680113107e-05, -3.3378546504536644e-06, -1.5752179622650146, -0.4121250510215759, -0.0020007132552564144, -0.0020713796839118004, -0.004021296743303537, -0.6616712212562561, -2.4432742595672607, -1.8103736639022827, -0.9324281811714172, -0.004940563812851906, -2.799595832824707, -0.00027307120035402477, -0.003276101779192686, -0.05313882604241371, -0.004360216204077005, -0.4388855993747711, -3.3054447174072266, -0.0003682888636831194, -0.005490224342793226, -0.581718385219574, -0.094840407371521, -0.0025760105345398188, -0.027670476585626602, -0.4302392303943634, -0.001901843468658626, -0.2850046157836914, -0.6649752259254456, -3.886147169396281e-05, -0.04162260890007019, -0.026626097038388252, -0.0013594918418675661, -0.0005353448214009404, -0.0015758965164422989, -0.005908523220568895, -0.08630654960870743, -0.056389544159173965, -0.03266749903559685, -0.0005109196645207703, -0.011271373368799686, -4.792098479811102e-05, -0.0006891497760079801, -0.012214032001793385, -0.0004011779965367168, -0.007762386463582516, -0.010726060718297958, -0.0004029654082842171, -0.00015829740732442588, -0.0007038023322820663, -0.05270171910524368, -0.00037377048283815384, -0.00018988236843142658, -0.05495147779583931, -0.0010121704544872046, -0.33957961201667786, -1.3245704174041748, -0.03339815139770508, -0.017983948811888695, -0.09167759120464325, -0.008013006299734116, -0.0021984234917908907, -0.31054362654685974, -8.106198947643861e-06, -2.2172682292875834e-05, -0.0023421018850058317, -0.013345438987016678, -0.00022146634000819176, -0.0005703729693777859, -0.0006865289760753512, -0.0005043664714321494, -0.0004245333548169583, -0.0034614428877830505, -1.680836794548668e-05, -3.0040289857424796e-05, -3.3378546504536644e-06, -9.989239333663136e-05, -0.0011367294937372208, -0.00011717586312443018, -0.0010895751183852553, -0.016302136704325676, -0.009012376889586449, -0.0011147005716338754, -0.0003992714046034962, -0.016184614971280098, -1.847726889536716e-05, -2.169585604860913e-05, -0.32958680391311646, -0.01865380071103573, -1.0566452741622925, -1.1920928244535389e-07, -2.264974000354414e-06, -0.0003412379592191428, -6.532455881824717e-05, -0.1379731148481369], "finish_reason": "stop"}], "metrics": {"energy": 207.98398774147032, "energy_per_token": 1.0611427945993384, "time": 8.641217, "time_per_token": 0.04408784183673469}}
{"outputs": [{"text": "try:\n        path = excel_file_path + file_name\n        data = pd.read_excel(path, sheet_name='Sheet1')[column_name]\n        stats = {}\n        stats['mean'] = data.mean()\n        stats['median'] = np.median(data)\n        stats['std_dev'] = data.std()\n    except FileNotFoundError as e:\n        print(f\"File not found: {path}\")\n    except IndexError as e:\n        print(f\"Column not found: {path}\")\n    except Exception as e:\n        print(f\"An unexpected error occurred: {e}\")\n\n    return stats", "tokens": ["try", ":", "\n", "        ", "path", " =", " excel", "_", "file", "_", "path", " +", " file", "_", "name", "\n", "        ", "data", " =", " pd", ".", "read", "_", "ex", "cel", "(", "path", ",", " sheet", "_", "name", "='", "Sheet", "1", "')", "[", "column", "_", "name", "]", "\n", "        ", "stats", " =", " {}", "\n", "        ", "stats", "['", "mean", "']", " =", " data", ".", "mean", "()", "\n", "        ", "stats", "['", "med", "ian", "']", " =", " np", ".", "med", "ian", "(", "data", ")", "\n", "        ", "stats", "['", "std", "_", "dev", "']", " =", " data", ".", "std", "()", "\n", "    ", "except", " File", "NotFound", "Error", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "File", " not", " found", ":", " {", "path", "}\"", ")", "\n", "    ", "except", " Index", "Error", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Column", " not", " found", ":", " {", "path", "}\"", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " unexpected", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "\n", "    ", "return", " stats", "\n", "\n", "def"], "logprobs": [-1.7448699474334717, -0.0009943069890141487, -0.005875577684491873, -0.01621909812092781, -3.6399025917053223, -0.14512385427951813, -1.1488380432128906, -0.0001998939987970516, -0.0008789013954810798, -0.00019774865359067917, -0.0002022777043748647, -0.16695165634155273, -0.10709840804338455, -0.0005839549703523517, -8.475421054754406e-05, -0.018786709755659103, -0.03966955840587616, -2.123600959777832, -0.3814736306667328, -0.03925735503435135, -0.00010108436981681734, -0.024750621989369392, -0.00026341783814132214, -0.0019307559123262763, -0.00010442188795423135, -0.000979658798314631, -0.027748512104153633, -0.3017558455467224, -0.7345567345619202, -0.0022776394616812468, -7.271502545336261e-05, -1.5215356349945068, -0.6256641149520874, -0.038003772497177124, -0.5669634938240051, -2.5471832752227783, -0.008329059928655624, -4.768258077092469e-05, -5.960446742392378e-06, -0.0015436412068083882, -0.13338413834571838, -0.39712223410606384, -1.9397634267807007, -0.03074541874229908, -1.9225201606750488, -0.0034849646035581827, -0.11481450498104095, -0.06568589806556702, -0.05067083239555359, -0.009651899337768555, -0.0003979606262873858, -0.03357638046145439, -0.6003577709197998, -0.006393691524863243, -0.003051626728847623, -0.004227273631840944, -0.012841272167861462, -0.0010503972880542278, -0.007500581908971071, -0.0007202415145002306, -0.003109978511929512, -0.0007445423980243504, -8.83301836438477e-05, -0.0009392855572514236, -1.2171202898025513, -4.7205765440594405e-05, -0.004685612861067057, -0.0007893307483755052, -0.0022055604495108128, -0.002711312612518668, -0.025233479216694832, -0.011457006447017193, -0.0013571109157055616, -0.007987580262124538, -0.001257224939763546, -0.00598412798717618, -0.0014393694000318646, -0.0007500219508074224, -0.00023731753753963858, -0.002322002314031124, -0.43361806869506836, -0.002479338087141514, -0.0026274940464645624, -0.014227384701371193, -0.02307911403477192, -2.19376277923584, -0.005778275430202484, -0.27257874608039856, -2.4437606043647975e-05, -2.861018856492592e-06, -1.585463285446167, -0.46327367424964905, -0.0021099227014929056, -0.0022430280223488808, -0.00145329674705863, -0.5719112157821655, -0.14228080213069916, -0.9879048466682434, -0.4187142550945282, -1.056835651397705, -0.37912699580192566, -0.012021237052977085, -0.2625296413898468, -0.008710011839866638, -1.346975564956665, -0.19511951506137848, -0.012217918410897255, -0.0033544006291776896, -1.4159626960754395, -0.026813194155693054, -3.2706971168518066, -7.950943836476654e-05, -0.051148246973752975, -0.016223086044192314, -0.00223708082921803, -0.0014517493546009064, -0.0006945105269551277, -0.03191310539841652, -0.006805100943893194, -0.06350382417440414, -0.025025157257914543, -0.5298284292221069, -0.15415504574775696, -0.0038051833398640156, -0.21055848896503448, -0.013030379079282284, -1.837734341621399, -0.5585217475891113, -0.010044031776487827, -0.004197596572339535, -0.15872669219970703, -1.365057349205017, -1.3219537734985352, -0.01175807137042284, -0.004189643077552319, -0.0007794441189616919, -0.0018682897789403796, -0.0006431656656786799, -0.023111730813980103, -0.014335384592413902, -0.12258236110210419, -0.012287159450352192, -1.637497067451477, -1.473088026046753, -0.013632177375257015, -0.046973422169685364, -0.0482962429523468, -0.0045016855001449585, -0.12455561757087708, -0.039076581597328186, -0.0014023480471223593, -0.001561851822771132, -1.926916480064392, -0.1946316659450531, -0.028617041185498238, -0.006063044536858797, -0.44122257828712463, -0.011577324941754341, -0.1802855134010315], "finish_reason": "stop"}], "metrics": {"energy": 178.710606552124, "energy_per_token": 1.123966078944176, "time": 6.945233, "time_per_token": 0.0436807106918239}}
{"outputs": [{"text": "# Get the file path to the Excel file\n    excel_file_path = os.path.join(excel_file_path, file_name)\n\n    # Check if the file exists\n    if not os.path.exists(excel_file_path):\n        raise FileNotFoundError(f\"Excel file not found: {excel_file_path}\")\n\n    # Load the Excel file into a pandas DataFrame\n    df = pd.read_excel(excel_file_path, sheet_name=file_name)\n\n    # Check if the specified column exists in the DataFrame\n    if column_name not in df.columns:\n        raise ValueError(f\"Column not found in Excel file: {column_name}\")\n\n    # Get the specified column as a numpy array\n    column = df[column_name].to_numpy()\n\n    # Calculate the mean, median, and standard deviation\n    mean = np.mean(column)\n    median = np.median(column)\n    std_dev = np.std(column)\n\n    # Return the results as a dictionary\n    ", "tokens": ["#", " Get", " the", " file", " path", " to", " the", " Excel", " file", "\n", "    ", "ex", "cel", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "ex", "cel", "_", "file", "_", "path", ",", " file", "_", "name", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " file", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "ex", "cel", "_", "file", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Excel", " file", " not", " found", ":", " {", "ex", "cel", "_", "file", "_", "path", "}\"", ")", "\n", "\n", "    ", "#", " Load", " the", " Excel", " file", " into", " a", " pandas", " Data", "Frame", "\n", "    ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "ex", "cel", "_", "file", "_", "path", ",", " sheet", "_", "name", "=", "file", "_", "name", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " specified", " column", " exists", " in", " the", " Data", "Frame", "\n", "    ", "if", " column", "_", "name", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " not", " found", " in", " Excel", " file", ":", " {", "column", "_", "name", "}\"", ")", "\n", "\n", "    ", "#", " Get", " the", " specified", " column", " as", " a", " numpy", " array", "\n", "    ", "column", " =", " df", "[", "column", "_", "name", "]", ".", "to", "_", "numpy", "()", "\n", "\n", "    ", "#", " Calculate", " the", " mean", ",", " median", ",", " and", " standard", " deviation", "\n", "    ", "mean", " =", " np", ".", "mean", "(", "column", ")", "\n", "    ", "med", "ian", " =", " np", ".", "med", "ian", "(", "column", ")", "\n", "    ", "std", "_", "dev", " =", " np", ".", "std", "(", "column", ")", "\n", "\n", "    ", "#", " Return", " the", " results", " as", " a", " dictionary", "\n", "    "], "logprobs": [-1.9811408519744873, -4.135373592376709, -0.26690101623535156, -2.6293745040893555, -0.11836566776037216, -3.1968860626220703, -0.12379595637321472, -0.22398528456687927, -0.01628841459751129, -0.27129608392715454, -0.0028770267963409424, -0.6104373335838318, -0.000878663151524961, -0.0018365198047831655, -0.12552280724048615, -0.12151900678873062, -0.023865457624197006, -0.03484634310007095, -0.30604684352874756, -0.00012885693286079913, -0.002619171282276511, -0.005199362989515066, -0.1775219589471817, -0.009023364633321762, -0.05818304046988487, -3.099436753473128e-06, -4.386805812828243e-05, -0.0002755738969426602, -6.794906312279636e-06, -6.890059739816934e-05, -0.004705546423792839, -0.03987405076622963, -1.0132738680113107e-05, -7.843663479434326e-05, -0.0022361292503774166, -0.006666325498372316, -0.16757559776306152, -0.0005926521262153983, -0.04828386381268501, -0.29543688893318176, -0.06532080471515656, -0.010772999376058578, -1.2543151378631592, -0.011956806294620037, -0.16798977553844452, -0.0004076126788277179, -0.013914366252720356, -0.019766144454479218, -0.002777649089694023, -4.5536911784438416e-05, -0.00010299152199877426, -0.002195925684645772, -0.29754167795181274, -4.768258077092469e-05, -0.0013369916705414653, -9.536738616588991e-07, -9.059865078597795e-06, -2.658331868587993e-05, -1.311301275563892e-06, -3.2186455882765586e-06, -0.0022590849548578262, -0.0019832244142889977, -0.0009146321099251509, -0.029239289462566376, -0.004013341851532459, -4.362964682513848e-05, -3.266281055402942e-05, -0.1505126804113388, -0.4942869246006012, -0.17208944261074066, -1.7702345848083496, -0.015479420311748981, -0.6327478885650635, -0.0012685356196016073, -0.9654695987701416, -0.01840302348136902, -0.09195555746555328, -2.2172682292875834e-05, -5.722029527532868e-06, -0.00010632903286023065, -5.1616290875244886e-05, -4.291525328881107e-06, -0.032786332070827484, -5.4834770708112046e-05, -0.0017213303362950683, -0.020450804382562637, -0.0018603176577016711, -0.038026150315999985, -1.04754638671875, -0.04918956011533737, -0.3178488314151764, -0.06943956762552261, -1.1305127143859863, -0.04421953484416008, -0.6448663473129272, -0.356411337852478, -0.0010159813100472093, -0.05040154978632927, -0.00047851080307736993, -0.14918355643749237, -0.0037025725468993187, -0.0038843909278512, -1.4781842764932662e-05, -0.018324607983231544, -5.364403477869928e-06, -0.0002867764269467443, -0.00010239553375868127, -5.1973900554003194e-05, -0.003205401822924614, -4.768370445162873e-07, -1.6093124941107817e-05, -4.887569048150908e-06, -5.722029527532868e-06, -7.152555099310121e-07, -0.5154861211776733, -0.9123860001564026, -0.0002315968304174021, -8.83301836438477e-05, -0.25108325481414795, -1.695149540901184, -9.321732068201527e-05, -0.0003333727945573628, -0.8038086295127869, -0.017940275371074677, -0.0436670258641243, -0.00026639728457666934, -0.016196109354496002, -0.39913415908813477, -0.019519271329045296, -0.012470720335841179, -0.794120728969574, -0.0015861323336139321, -0.23592910170555115, -0.8366896510124207, -0.0007039214833639562, -1.0052497386932373, -0.00034814971149899065, -0.012169046327471733, -0.0003182381624355912, -0.16933631896972656, -0.1498686522245407, -3.0636318115284666e-05, -0.0003093002596870065, -0.009364253841340542, -3.576272320060525e-06, -0.01447286456823349, -0.1690087914466858, -0.011114117689430714, -0.001706930692307651, -0.0002896366349887103, -0.00034433635300956666, -0.0057863350957632065, -0.0031414704862982035, -2.7418097943154862e-06, -0.001611721352674067, -0.05614343285560608, -0.007668816950172186, -0.10475602746009827, -0.31396764516830444, -0.0016479019541293383, -0.7604534029960632, -0.1710277497768402, -0.010593255050480366, -0.005100809037685394, -0.005920255556702614, -0.22617240250110626, -1.3828182090946939e-05, -0.00016330339713022113, -0.04027099907398224, -0.00013207517622504383, -0.0006063529872335494, -0.006255806889384985, -0.0005392765742726624, -0.024459725245833397, -1.7679011821746826, -0.02482888661324978, -2.113189220428467, -0.007389356382191181, -0.8634824752807617, -0.17109043896198273, -1.5105957984924316, -0.020927919074892998, -0.07943437248468399, -0.00017021637177094817, -0.48974713683128357, -0.34974414110183716, -0.08952714502811432, -0.01368121337145567, -0.0009216589969582856, -4.51792984677013e-05, -5.960462772236497e-07, -0.00022599527437705547, -0.13985852897167206, -1.0234224796295166, -1.2278481335670222e-05, -0.0005821678787469864, -0.0018443731823936105, -0.004349890165030956, -0.014566152356564999, -0.0003939091111533344, -0.023300303146243095, -0.16316169500350952, -0.20542141795158386, -0.07660360634326935, -0.16678215563297272, -0.002496223896741867, -0.0071319518610835075, -0.011813678778707981, -0.006172640714794397, -0.002822702983394265, -0.25778353214263916, -0.0006037319544702768, -0.027803005650639534, -0.10308872908353806, -0.09198372066020966, -6.079655122448457e-06, -0.006161385215818882, -7.497983460780233e-05, -0.00018952481332235038, -0.0009482178138568997, -0.003459779778495431, -0.0012367465533316135, -0.0006642519147135317, -0.00031537804170511663, -0.00024816294899210334, -0.0031209117732942104, -0.00012230125139467418, -0.00033241944038309157, -6.48477507638745e-05, -0.00016616393986623734, -0.00015984688070602715, -8.999896090244874e-05, -0.0013942531077191234, -0.001573873101733625, -0.022349856793880463, -0.02784520760178566, -0.002523573115468025, -0.0005222387262620032, -0.011601010337471962, -0.00010573305189609528, -0.0007736074039712548, -0.00017248096992261708, -0.00016223068814724684, -0.042026180773973465, -0.003903983859345317, -0.025428391993045807, -0.00010239553375868127, -0.11472278833389282, -0.20539259910583496, -0.4732736349105835, -0.5667015314102173, -0.1722790151834488, -0.002044850494712591, -0.016391033306717873, -0.019727924838662148, -0.0002286172821186483], "finish_reason": "length"}], "metrics": {"energy": 309.3012613182068, "energy_per_token": 1.2082080520242453, "time": 11.570519, "time_per_token": 0.04519733984375}}
{"outputs": [{"text": "print(f\"Processing: {excel_file_path}\")\n    # Create a dictionary to store the results\n    results = dict()\n\n    # Check if the specified Excel file exists in the data directory\n    if not os.path.exists(excel_file_path + file_name):\n        raise FileNotFoundError(f\"File not found at {excel_file_path + file_name}.\")\n\n    # Read the data from the Excel file and select the specified column\n    try:\n        excel_file = pd.ExcelFile(excel_file_path + file_name)\n        df = excel_file.parse(column_name)\n        mean = df['Sales'].mean()\n        median = df['Sales'].median()\n        std_dev = df['Sales'].std()\n        results['mean'] = mean\n        results['median'] = median\n        results['std_dev'] = std_dev\n\n    except (ValueError, TypeError):\n        raise ValueError(f\"Error in extracting the specified column {column_name}.\")\n", "tokens": ["print", "(", "f", "\"", "Process", "ing", ":", " {", "ex", "cel", "_", "file", "_", "path", "}\"", ")", "\n", "    ", "#", " Create", " a", " dictionary", " to", " store", " the", " results", "\n", "    ", "results", " =", " dict", "()", "\n", "\n", "    ", "#", " Check", " if", " the", " specified", " Excel", " file", " exists", " in", " the", " data", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "File", " not", " found", " at", " {", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", "}", ".", "\"", ")", "\n", "\n", "    ", "#", " Read", " the", " data", " from", " the", " Excel", " file", " and", " select", " the", " specified", " column", "\n", "    ", "try", ":", "\n", "        ", "ex", "cel", "_", "file", " =", " pd", ".", "Excel", "File", "(", "ex", "cel", "_", "file", "_", "path", " +", " file", "_", "name", ")", "\n", "        ", "df", " =", " excel", "_", "file", ".", "parse", "(", "column", "_", "name", ")", "\n", "        ", "mean", " =", " df", "['", "S", "ales", "']", ".", "mean", "()", "\n", "        ", "med", "ian", " =", " df", "['", "S", "ales", "']", ".", "med", "ian", "()", "\n", "        ", "std", "_", "dev", " =", " df", "['", "S", "ales", "']", ".", "std", "()", "\n", "        ", "results", "['", "mean", "']", " =", " mean", "\n", "        ", "results", "['", "med", "ian", "']", " =", " median", "\n", "        ", "results", "['", "std", "_", "dev", "']", " =", " std", "_", "dev", "\n", "\n", "    ", "except", " (", "Value", "Error", ",", " Type", "Error", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Error", " in", " extracting", " the", " specified", " column", " {", "column", "_", "name", "}", ".", "\"", ")", "\n"], "logprobs": [-4.584342002868652, -0.41459307074546814, -1.3671404123306274, -0.4996556043624878, -3.3108060359954834, -0.05453401058912277, -2.7321536540985107, -0.1508970707654953, -0.39056387543678284, -1.5735502529423684e-05, -4.6132929128361866e-05, -9.476689592702314e-05, -7.510157047363464e-06, -5.757642793469131e-05, -2.9290435314178467, -0.02004929445683956, -0.0194418765604496, -0.24722963571548462, -2.558444023132324, -2.732668399810791, -0.5317674279212952, -2.51155948638916, -0.3650211691856384, -0.22031189501285553, -0.05028354749083519, -0.7394254207611084, -0.13440005481243134, -0.0030623229686170816, -1.0277290344238281, -0.028941472992300987, -2.7800300121307373, -0.05479360744357109, -0.001004786929115653, -0.3697703778743744, -0.0005994430393911898, -0.1989152729511261, -1.13874351978302, -0.125958651304245, -0.09647852927446365, -2.212423801422119, -1.193807601928711, -0.0044709485955536366, -0.06191876158118248, -2.4827568531036377, -0.010875712148845196, -1.9585015773773193, -0.08602383732795715, -0.07970277220010757, -0.0009707267745397985, -0.37475380301475525, -0.10455922782421112, -0.015802275389432907, -1.3351351299206726e-05, -0.00042226933874189854, -0.002016060519963503, -0.44247812032699585, -0.0020317642483860254, -0.10026179999113083, -1.0728830375228426e-06, -1.823885577323381e-05, -5.3881147323409095e-05, -4.970903682988137e-05, -2.3841574147809297e-05, -2.5950636863708496, -0.14073938131332397, -0.0004970983718521893, -4.625213477993384e-05, -0.02837894856929779, -0.003157750703394413, -0.00189565634354949, -0.19196704030036926, -0.011951977387070656, -0.00011789103882620111, -4.660974445869215e-05, -0.08892615139484406, -0.6047273874282837, -0.036282554268836975, -1.365817666053772, -0.6097836494445801, -0.005770334508270025, -1.1319544315338135, -0.6066282987594604, -0.010953890159726143, -0.00011932138295378536, -3.933898824470816e-06, -0.0006124289939180017, -0.00021669900161214173, -3.158996332786046e-05, -0.49005433917045593, -0.0032232257071882486, -1.883488948806189e-05, -0.00016211149340961128, -2.3829641342163086, -0.17654184997081757, -0.128896102309227, -0.000446696620201692, -0.0027359218802303076, -0.09669921547174454, -0.0030600647442042828, -0.12138798832893372, -1.1104321479797363, -0.11665632575750351, -1.3431625366210938, -0.06390928477048874, -0.027984321117401123, -0.2695434093475342, -0.005074122920632362, -2.3179073333740234, -4.044398307800293, -0.06422828137874603, -0.49037057161331177, -0.004746835678815842, -0.08660886436700821, -0.001471271039918065, -2.483905076980591, -0.00017855956684798002, -0.0010962436208501458, -0.0031653561163693666, -3.251856803894043, -0.0025418850127607584, -0.05139728635549545, -1.2331769466400146, -0.06872688978910446, -0.05676062032580376, -3.111314072157256e-05, -0.7780903577804565, -0.00022206225548870862, -0.0009471459779888391, -0.03451265022158623, -1.1920922133867862e-06, -9.16677454370074e-05, -2.884823152271565e-05, -4.6132929128361866e-05, -1.7881377516459906e-06, -0.011285871267318726, -0.002107305685058236, -2.372236667724792e-05, -1.311301275563892e-06, -0.0036320213694125414, -0.008530723862349987, -0.014858649112284184, -0.6162000894546509, -0.019428081810474396, -0.19359295070171356, -2.3841855067985307e-07, -7.629365427419543e-06, -0.0002343380037928, -0.004343599546700716, -0.0014672239776700735, -0.7663608193397522, -0.13255567848682404, -0.0006482883472926915, -0.17991384863853455, -0.04624568298459053, -0.9925943613052368, -3.111266613006592, -0.18204738199710846, -0.6540533304214478, -1.8512343168258667, -0.3409436345100403, -0.005455723963677883, -0.01274911779910326, -0.00012861855793744326, -0.0037683681584894657, -0.003312578657642007, -0.026755746454000473, -0.0062719183042645454, -0.013186627067625523, -0.004525301046669483, -0.0008615119731985033, -0.12307050824165344, -0.012559839524328709, -0.00022706791060045362, -1.5735502529423684e-05, -0.00014232576359063387, -0.000490068516228348, -0.004218964371830225, -5.364403477869928e-06, -0.00023946279543451965, -0.002212578197941184, -0.002333182143047452, -0.045021917670965195, -0.10537633299827576, -0.0043678125366568565, -0.0010257464600726962, -0.06846721470355988, -0.008583555929362774, -0.0001754606782924384, -3.540453326422721e-05, -8.618460560683161e-05, -0.0004694551753345877, -0.0014297273010015488, -0.0174828190356493, -0.008161881938576698, -0.659756064414978, -0.2922682464122772, -0.6680733561515808, -0.002592656761407852, -0.0002383901592111215, -0.04369441419839859, -0.11821389943361282, -0.006723637692630291, -0.0012734169140458107, -0.0006048041977919638, -0.0014210374793037772, -0.0005155664402991533, -5.280832192511298e-05, -3.9457496313843876e-05, -0.00014065706636756659, -0.0005330810672603548, -0.00017009719158522785, -0.00041106835124082863, -0.0006937957368791103, -0.001029080944135785, -0.0030146650969982147, -0.001794158248230815, -0.0005367745761759579, -9.7508447652217e-05, -0.000532842765096575, -0.026533346623182297, -2.4914430468925275e-05, -7.271740287251305e-06, -0.0004970983718521893, -1.921467900276184, -0.12928637862205505, -0.34542155265808105, -2.536583185195923, -0.9549803137779236, -6.9141146923357155e-06, -0.020972279831767082, -1.6082686185836792, -1.7762025890988298e-05, -1.1539198160171509, -0.019027799367904663, -0.002537128748372197, -0.10949643701314926, -0.022003918886184692, -1.0013530300057027e-05, -0.02007324807345867, -0.18034404516220093, -0.01670597493648529, -3.441840887069702, -2.9839730262756348, -4.388692855834961, -1.9417719841003418, -2.103332757949829, -0.08593851327896118, -1.6259574890136719, -0.01525931153446436, -0.0010084786918014288, -0.00011801023356383666, -0.04987966641783714, -1.3227295875549316, -0.05342172831296921, -0.0020402108784765005, -0.014263229444622993], "finish_reason": "length"}], "metrics": {"energy": 283.0873858623506, "energy_per_token": 1.105810101024807, "time": 11.344686, "time_per_token": 0.0443151796875}}
{"outputs": [{"text": "# Check if the Excel file exists\n    file_path = os.path.join(excel_file_path, file_name)\n    if not os.path.exists(file_path):\n        raise FileNotFoundError(f\"File not found: {file_path}\")\n\n    # Load the data from the Excel file\n    try:\n        df = pd.read_excel(file_path, usecols=[column_name])\n    except ValueError as e:\n        raise ValueError(f\"Column not found: {column_name}\")\n\n    # Calculate the mean, median, and standard deviation\n    mean = np.mean(df[column_name])\n    median = np.median(df[column_name])\n    std_dev = np.std(df[column_name])\n\n    # Return the results as a dictionary\n    return {\n        'mean': mean,\n        'median': median,\n        'std_dev': std_dev,\n    }", "tokens": ["#", " Check", " if", " the", " Excel", " file", " exists", "\n", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "ex", "cel", "_", "file", "_", "path", ",", " file", "_", "name", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "file", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "File", " not", " found", ":", " {", "file", "_", "path", "}\"", ")", "\n", "\n", "    ", "#", " Load", " the", " data", " from", " the", " Excel", " file", "\n", "    ", "try", ":", "\n", "        ", "df", " =", " pd", ".", "read", "_", "ex", "cel", "(", "file", "_", "path", ",", " use", "cols", "=[", "column", "_", "name", "])", "\n", "    ", "except", " Value", "Error", " as", " e", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " not", " found", ":", " {", "column", "_", "name", "}\"", ")", "\n", "\n", "    ", "#", " Calculate", " the", " mean", ",", " median", ",", " and", " standard", " deviation", "\n", "    ", "mean", " =", " np", ".", "mean", "(", "df", "[", "column", "_", "name", "])", "\n", "    ", "med", "ian", " =", " np", ".", "med", "ian", "(", "df", "[", "column", "_", "name", "])", "\n", "    ", "std", "_", "dev", " =", " np", ".", "std", "(", "df", "[", "column", "_", "name", "])", "\n", "\n", "    ", "#", " Return", " the", " results", " as", " a", " dictionary", "\n", "    ", "return", " {", "\n", "        ", "'", "mean", "':", " mean", ",", "\n", "        ", "'", "med", "ian", "':", " median", ",", "\n", "        ", "'", "std", "_", "dev", "':", " std", "_", "dev", ",", "\n", "    ", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-1.9811408519744873, -1.3575598001480103, -0.2752966284751892, -0.2769223153591156, -0.25010213255882263, -0.0025643580593168736, -0.02338683232665062, -0.8928707242012024, -0.0016934829764068127, -2.785282611846924, -0.051784709095954895, -0.07738837599754333, -0.007687034551054239, -0.283866822719574, -8.34430247778073e-05, -0.0006610354175791144, -0.005584591068327427, -0.013127331621944904, -0.0021402565762400627, -0.017610613256692886, -1.0967194612021558e-05, -1.1324817933200393e-05, -0.00022754464589525014, -1.0728830375228426e-06, -1.1205610462639015e-05, -0.0014425835106521845, -0.02767036110162735, -6.198863957251888e-06, -1.9192511899746023e-05, -0.0013559204526245594, -0.002758866176009178, -0.03647911921143532, -0.0448283925652504, -0.029052643105387688, -0.005127612501382828, -8.630380034446716e-05, -0.00016080040950328112, -0.0025912299752235413, -0.32118359208106995, -9.083335316972807e-05, -0.0027102427557110786, -1.7165990357170813e-05, -4.351044481154531e-05, -0.0027210612315684557, -0.0035423405934125185, -0.001082311267964542, -0.031592175364494324, -0.004777564201503992, -5.924526340095326e-05, -5.2689116273541003e-05, -0.16573834419250488, -0.5013124346733093, -0.20426394045352936, -0.95702064037323, -0.532063901424408, -0.0064597842283546925, -0.5116238594055176, -0.019824696704745293, -0.011227876879274845, -0.0002735478919930756, -0.0770554468035698, -0.04270845279097557, -5.566918844124302e-05, -0.0017200212460011244, -0.06653794646263123, -0.0013103241799399257, -0.04820559546351433, -1.3383362293243408, -0.11457163095474243, -1.5989636182785034, -0.24089637398719788, -0.07190199941396713, -0.06605465710163116, -0.008757753297686577, -0.3092595338821411, -0.0005868143052794039, -2.286604881286621, -6.437094270950183e-05, -0.00046969347749836743, -0.001254724687896669, -0.16880299150943756, -0.004852067679166794, -0.006241117138415575, -2.1457441107486375e-05, -0.016209833323955536, -2.407998726994265e-05, -0.0005220004240982234, -5.94836674281396e-05, -0.00014625910262111574, -0.016503607854247093, -0.00021062063751742244, -0.0008105330052785575, -0.3682979345321655, -2.2918503284454346, -0.0019458661554381251, -0.066858671605587, -0.1914951652288437, -5.566918844124302e-05, -0.0004758894501719624, -0.09903569519519806, -0.026805998757481575, -0.22777871787548065, -0.0004049911512993276, -1.2217731475830078, -6.9141146923357155e-06, -0.639686644077301, -0.13415563106536865, -0.00017891713650897145, -0.0049314298667013645, -0.00030155404238030314, -0.08586850017309189, -0.009915384463965893, -1.0371154530730564e-05, -0.010034826584160328, -0.09191271662712097, -0.011996266432106495, -0.5934165716171265, -0.20049208402633667, -0.0031749813351780176, -0.2651636600494385, -0.005863607861101627, -0.18676170706748962, -4.792098479811102e-05, -0.0008107712492346764, -0.28994378447532654, -0.00894964300096035, -0.11340925842523575, -0.08872784674167633, -0.0005830018781125546, -0.07739433646202087, -0.23570489883422852, -0.24836961925029755, -0.45419618487358093, -0.05892440304160118, -0.0021376395598053932, -0.0066559044644236565, -0.00940735824406147, -0.014033449813723564, -0.004210180137306452, -0.11114072054624557, -0.0007825411157682538, -0.12197580188512802, -0.0940743237733841, -1.107996940612793, -8.22540732769994e-06, -0.06430139392614365, -0.0006244616815820336, -0.007367583457380533, -0.3144630491733551, -0.003433643840253353, -1.6689286894688848e-06, -1.1920928244535389e-07, -0.12865421175956726, -0.015958912670612335, -0.0013585394481197, -0.0026644703466445208, -0.0010090741561725736, -0.0005229535745456815, -0.0072343298234045506, -0.00014256415306590497, -0.0005906267906539142, -0.00010561384988250211, -0.0004419303731992841, -0.00031990656862035394, -0.0005078217945992947, -2.8609820219571702e-05, -3.576272320060525e-06, -1.1920928244535389e-07, -0.0015697074122726917, -0.0015475689433515072, -0.0028815437108278275, -0.02332254685461521, -0.03816591948270798, -0.0029357452876865864, -0.0009432157967239618, -0.016802921891212463, -0.00019870213873218745, -0.0015372138004750013, -0.00020358874462544918, -0.0005297449533827603, -0.00042429505265317857, -2.5987286790041253e-05, -1.4305104514278355e-06, 0.0, -0.07034831494092941, -0.004816240165382624, -0.0603463351726532, -0.00012516192509792745, -0.48631298542022705, -0.2336185872554779, -0.24221016466617584, -0.45953649282455444, -0.32756081223487854, -0.003140519605949521, -0.01785421185195446, -0.012670609168708324, -0.00014065706636756659, -0.064740389585495, -0.868659257888794, -0.006999614182859659, -0.0034702338743954897, -0.2578471004962921, -0.0025351073127239943, -0.0005310555570758879, -0.095030777156353, -0.0010563514661043882, -0.004372797440737486, -0.00015853578224778175, -0.00034505134681239724, -0.0004640932602342218, -9.881961887003854e-05, -0.00011383838864276186, -0.0003526780928950757, -3.516612196108326e-05, -0.0004888770054094493, -9.250213042832911e-05, -0.0004363300104159862, -0.008909353986382484, -0.003035701345652342, -0.0007347744540311396, -9.250213042832911e-05, -0.008703512139618397, -2.4318398573086597e-05, -1.7881377516459906e-06, -1.2527289390563965, -0.0013567537534981966, -0.008510629646480083, -0.9689846038818359, -1.1920928244535389e-07, -9.536738616588991e-07, -0.0001333863037871197, -0.00018463814922142774, -0.1161736324429512], "finish_reason": "stop"}], "metrics": {"energy": 284.4625859413148, "energy_per_token": 1.2208694675592908, "time": 10.702582, "time_per_token": 0.04593382832618025}}
{"outputs": [{"text": "try:\n        data = pd.read_excel(os.path.join(excel_file_path, file_name))\n        column = data[column_name]\n        mean = column.mean()\n        median = column.median()\n        std_dev = column.std()\n    except FileNotFoundError:\n        raise FileNotFoundError(f\"File not found: {excel_file_path}/{file_name}\")\n    except ValueError:\n        raise ValueError(f\"Column not found: {excel_file_path}/{file_name} {column_name}\")\n\n    return {\"mean\": mean, \"median\": median, \"std_dev\": std_dev}", "tokens": ["try", ":", "\n", "        ", "data", " =", " pd", ".", "read", "_", "ex", "cel", "(", "os", ".", "path", ".", "join", "(", "ex", "cel", "_", "file", "_", "path", ",", " file", "_", "name", "))", "\n", "        ", "column", " =", " data", "[", "column", "_", "name", "]", "\n", "        ", "mean", " =", " column", ".", "mean", "()", "\n", "        ", "med", "ian", " =", " column", ".", "med", "ian", "()", "\n", "        ", "std", "_", "dev", " =", " column", ".", "std", "()", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "File", " not", " found", ":", " {", "ex", "cel", "_", "file", "_", "path", "}/{", "file", "_", "name", "}\"", ")", "\n", "    ", "except", " Value", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " not", " found", ":", " {", "ex", "cel", "_", "file", "_", "path", "}/{", "file", "_", "name", "}", " {", "column", "_", "name", "}\"", ")", "\n", "\n", "    ", "return", " ", "{\"", "mean", "\":", " mean", ",", " \"", "med", "ian", "\":", " median", ",", " \"", "std", "_", "dev", "\":", " std", "_", "dev", "}", "\n", "\n", "def"], "logprobs": [-1.7448699474334717, -0.0009943069890141487, -0.005875577684491873, -0.01621909812092781, -2.623711109161377, -0.6989771127700806, -0.07099832594394684, -8.082063141046092e-05, -0.04235326126217842, -0.00027259447961114347, -0.001397348241880536, -9.595887240720913e-05, -0.014092104509472847, -1.6550322771072388, -1.0132738680113107e-05, -0.012589387595653534, -0.0035571889020502567, -0.029142266139388084, -0.0044563510455191135, -0.010348825715482235, -4.291525328881107e-06, -1.6569954823353328e-05, -0.00014745102089364082, -3.4570634852570947e-06, -1.2516897186287679e-05, -0.0012994902208447456, -0.03783252835273743, -5.722029527532868e-06, -1.7762025890988298e-05, -0.8739299178123474, -0.0829697921872139, -0.860024094581604, -0.8080833554267883, -0.3452908992767334, -0.022499293088912964, -0.045487456023693085, -0.0020882722456008196, -5.876845170860179e-05, -5.125986263010418e-06, -0.000977157847955823, -0.07989484071731567, -0.241084486246109, -0.7591160535812378, -0.18352419137954712, -0.3187791407108307, -0.004190593026578426, -0.0019593106117099524, -0.0014606770128011703, -0.0076964981853961945, -0.0023818237241357565, -0.004189049359411001, -0.002356135519221425, -0.0009554826538078487, -0.1907385140657425, -0.016690615564584732, -0.003914671018719673, -2.0146166207268834e-05, -0.0004614718782249838, -0.002037236699834466, -0.0021334760822355747, -0.05965690314769745, -0.09008245170116425, -0.005547485779970884, -0.0011516136582940817, -0.07955867052078247, -0.0009299959056079388, -0.0014317509485408664, -0.03325702250003815, -0.00726391701027751, -2.2344281673431396, -0.002863594563677907, -0.17464202642440796, -1.1205610462639015e-05, -1.6689286894688848e-06, -0.17043128609657288, -0.0034033493138849735, -0.0009757286752574146, -0.39662957191467285, -0.05807315185666084, -0.0001752223033690825, -0.00011550712952157483, -0.21795682609081268, -0.6005526781082153, -0.1351049393415451, -0.8427543044090271, -0.6976230144500732, -0.008368662558495998, -0.8630610704421997, -0.02945530042052269, -0.5347874760627747, -0.00018046658078674227, -2.5987286790041253e-05, -0.00018857131362892687, -1.645074735279195e-05, -9.190614218823612e-05, -1.1845319271087646, -0.0009611992281861603, -0.00010609064338495955, -0.00030393750057555735, -0.09462451189756393, -0.0001793938863556832, -0.01577387936413288, -0.03343342989683151, -0.007394444663077593, -0.8048549890518188, -4.410734163684538e-06, -0.037928253412246704, -0.006975820288062096, -0.0003575639275368303, -0.01178882084786892, -0.0033173311967402697, -2.4437606043647975e-05, -0.002441046992316842, -0.054040368646383286, -0.013165803626179695, -0.12876175343990326, -0.2914949059486389, -0.0020958855748176575, -0.1911240965127945, -0.010402270592749119, -0.934036135673523, -0.0009542917250655591, -1.1920922133867862e-06, -0.00014375607133843005, -2.0861407392658293e-05, -1.811964830267243e-05, -0.0039318883791565895, -0.0022250674664974213, -1.1920858014491387e-05, -6.580135959666222e-05, -0.33656740188598633, -1.5572130680084229, -0.003128636162728071, -0.005089541431516409, -0.0001399419124936685, -0.01821165345609188, -0.00048375347978435457, -0.002672554925084114, -1.4391705989837646, -0.005166631191968918, -0.09422610700130463, -1.532583475112915, -0.00017295771976932883, -0.003881540847942233, -0.0027059626299887896, -0.0759316012263298, -0.0017184742027893662, -0.015004277229309082, -0.0005169962532818317, -8.153582894010469e-05, -0.0004138090298511088, -0.001122916815802455, -0.00016842853801790625, -0.0026012177113443613, -0.010964266024529934, -0.008128656074404716, -0.0012680593645200133, -0.00022968991834204644, -0.01324862614274025, -5.209310256759636e-05, -8.106198947643861e-06, -0.367916464805603, -0.28410956263542175, -0.00964339915663004, -0.19655640423297882], "finish_reason": "stop"}], "metrics": {"energy": 188.55357955455767, "energy_per_token": 1.1427489669973192, "time": 7.366434, "time_per_token": 0.044645054545454546}}
